[11:48] <lucasb> oh, I was reminded of the thunky xx by your commit

[14:33] *** masak left
[14:33] *** masak joined
[14:34] *** masak is now known as Guest98771

[18:36] *** Guest98771 is now known as masak

[18:39] <masak> I was hesitant over xx being thunky at first, but now I use it all the time, and it's very ergonomic

[18:40] <masak> jnthn++ suggests that if someone is using an unquote in a `for` loop, they're probably intentional enough that they don't deserve a "Single Evaluation Rule" warning

[18:43] <lucasb> don't you think thunky xx breaks the "similar things should look similar and different things should look different" principle?

[18:44] <lucasb> do you see the similarity between "rand xx 3" and "rand x 3"?

[18:44] <lucasb> and you want one to be thunky while the other isn't?

[18:46] <masak> never thought about it that way

[18:47] <lucasb> ah, I'm talking about P6. just making comments... I know design ships have sailed already. I'm not trying changing anything :-)

[18:47] <masak> it is strange, now that you mention it

[18:48] <lucasb> did you see my comment about it in #perl6-dev?

[18:48] <masak> ...no

[18:48] <masak> url? :)

[18:49] <lucasb> https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2018-12-02#l62

[18:49] <lucasb> :-)

[18:50] <lucasb> unfortunately, the :thunked adverb isn't a thing anymore

[18:50] <lucasb> can't turn-off thunkiness with "rand xx 3 :!thunked"

[19:00] <masak> also, there's a design rule says if you want a negative adverb/named like that, you're probably on the wrong track

[19:01] <masak> lucasb: reading

[19:01] <masak> lucasb: ...you do know that && is thunky as well, do you? :)

[19:02] <lucasb> oh nose. I did not haha

[19:09] <masak> but I agree with you in principle that x should be thunky too

[19:10] <masak> might be a case where we grudgingly follow Perl 6's (and Python's) lead, though

[19:11] <masak> && (and || and //) are "zero-or-one" thunky in their rhs. xx is "zero-or-more" thunky in its lhs.

