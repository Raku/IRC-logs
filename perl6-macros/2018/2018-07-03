[04:43] *** Ven` joined
[04:48] *** Ven` left
[08:17] *** AlexDaniel left
[08:32] *** Ven` joined
[08:46] <Ven`> it might sound crazy for a moment, but I have something to muse about... signature binders are like EXPORT subroutines

[08:47] <Ven`> you take a bunch of "stuff" *handwaves* and return a list of variables to be installed in the scope it's been invoked

[08:47] <Ven`> The only difference is that the values are supplied instead of being in the EXPORT's "parent scope".

[08:48] <Ven`> Which variables pop into existance and what they contain is the responsability of the EXPORT subroutine.

[09:03] <masak> yeah, that connection sounds crazy to me :)

[09:03] <Ven`> oh, fair enough :D.

[09:04] <masak> I'm not sure after writing that issue that a signature binder would be "worth it"

[09:04] <Ven`> It's not like I actually mean "we should implement it in these terms".

[09:06] <masak> in the sense that (a) we only have a finite, limited set of ways to extend the signature binder, namely those that are already in the issue queue, (b) I have a hard time imagining more, (c) the way the signature binder will have to be set up to be extended already presupposes a lot of knowledge about the way we extend it

[09:06] <Ven`> I've always felt like the signature binder in Perl 6 is not on the right peg (stealing that saying).

[09:07] <masak> ok. I don't know which peg it's hanging on, actually

[09:07] <Ven`> Well, then maybe I'm mis-stealing the saying :D. The idea, anyway, is that this is a very general pattern-matching need, and you have to use (or abuse) signatures in Perl 6 to get that behavior.

[09:08] <Ven`> Though my last experiments of using a signature in a given/when were a few years back by now, I seem to remember it not doing all I had hoped it would.

[09:08] <masak> aha

[09:09] <masak> well, it did occur to me that destructuring in variable declarations and in parameter declarations are very similar, to the extent that it'd make sense to have just one single code path

[09:09] <Ven`> Yup. And it's very much not in Perl 6.

[09:09] <masak> right

[09:10] <masak> I'm having the horrible realization that there's years of work here

[09:10] <Ven`> .oO( Damn you, Damian, for only having 10 years worth of foresight and not 15! )

[09:10] <masak> which, don't get me wrong, would be lots of fun

[09:10] <masak> but the fact that it will take a long time and mostly detract from macros-in-Perl-6...

[09:11] <masak> ...makes me want to put it on the backburner a little

[09:11] <masak> probably more of a concern for Alma than 007

[09:11] <Ven`> Alm-wha?

[09:11] <Ven`> ah, ok

[09:11] <masak> https://github.com/masak/007/issues/277

[09:12] <masak> https://github.com/masak/alma

[09:12] * Ven` usually refuses to write Java :)

[09:13] <masak> I know, Java has that effect on people

[09:14] <masak> not me, though

[09:15] <Ven`> oh yeah, for sure

[09:15] <masak> I mean, I'm well aware of Java's (many) weaknesses. but it's also a capable language in many ways, and I don't see that acknowledged as much

[09:16] <Ven`> I was of that opinion too, and then schooled has forced me to write hibernate+spring+... java on Spring Tool Suite for months, and now I refuse to even acknowledge that.

[09:16] <Ven`> s/schooled/school/

[09:17] <masak> yes, understood

[10:45] <masak> oh, and also, good case statements will need destructuring too, so those would also need to be considered as a client

[10:51] *** Ven` left
[12:40] *** Ven` joined
[12:41] <Ven`> yeah I need to chek how much Perl 6 allow there when you when a :() sig

[12:51] *** Ven` left
[12:53] *** Ven` joined
[18:51] *** Ven` left
[20:54] *** AlexDaniel joined
