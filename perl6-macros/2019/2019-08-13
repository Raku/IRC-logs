[02:33] *** lucasb left
[12:37] *** lucasb joined
[14:15] *** Ven`` joined
[14:16] <Ven``> o/ from the airport

[14:17] <Ven``> I'm still gonna be awol for a bit, I should arrive in prague later today, will try to get some tuits tomorrow

[14:18] <Ven``> en passant : what do you think of `foo(return a)`?

[14:21] <Ven``> (also I think the main reason it's not annoying to do the unquote thing we spent so much time on in CL is because of the lack of hygiene as well, allows fire-and-forget var declarations

[14:21] <Ven``> at the same time, scheme's macro system is a tad too complex for me to compare...

[15:22] *** Ven`` left
[19:35] <masak> I have a feeling you might be right re lack of hygiene (or even a fully lexical regime) in CL

[19:35] <masak> I wish I understood Scheme's macro system and hygiene better

[19:37] <masak> re what do I think of `foo(return a)`? is `foo(...)` here a function call or a function declaration? if it's a call, then I think it's unambiguous; `foo` never has a chance to be invoked because the `return` happens before (because of sequence points)

[19:38] <masak> if it's a function declaration, then I guess it should be `foo(x = return a)` or something. I think that one is straightforward with single dispatch, and not-so-straightforward with multidispatch

[19:38] <masak> but I'm not sure I understood the question clearly

[22:50] *** lucasb left
