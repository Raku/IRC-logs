[00:01] *** reportable6 left
[00:02] *** reportable6 joined
[01:00] *** camelia joined
[01:26] *** kvw_5_ joined
[01:29] *** kvw_5 left
[01:52] <Geth> ¬¶ rakudo: vrurg++ created pull request #4373: Make 6.e PseudoStash a child of 6.c PseudoStash
[01:52] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/4373
[02:14] *** sortiz left
[03:00] <releasable6> Next release in ‚âà1 day and ‚âà15 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft
[05:12] *** frost-lab joined
[05:42] *** AlexDaniel` left
[05:43] *** AlexDaniel` joined
[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[06:10] *** camelia left
[06:10] *** ugexe left
[06:11] *** ugexe joined
[06:15] *** samebchase joined
[06:18] *** ugexe left
[06:18] *** kawaii_ left
[06:18] *** moon-child left
[06:18] *** summerisle left
[06:18] *** summerisle joined
[06:19] *** ugexe joined
[06:19] *** kawaii_ joined
[06:21] *** moon-child joined
[06:47] *** HarmtH left
[06:54] *** patrickb joined
[06:55] *** patrickb joined
[07:00] *** patrickz joined
[07:00] *** patrickb left
[07:00] *** patrickb left
[07:04] *** HarmtH joined
[07:06] *** patrickz left
[07:06] *** patrickb joined
[07:13] *** summerisle left
[07:14] *** summerisle joined
[07:18] *** camelia joined
[07:34] *** patrickb joined
[07:35] *** tbrowder left
[07:36] *** patrickb19 joined
[07:37] *** tbrowder joined
[07:38] *** patrickb left
[07:38] *** patrickb19 is now known as patrickb
[07:39] *** patrickb left
[07:41] *** patrickb left
[07:42] *** patrickb joined
[07:43] *** patrickb left
[07:53] *** sena_kun left
[07:56] *** sena_kun joined
[08:03] *** sena_kun left
[08:05] *** sena_kun joined
[08:25] *** squashable6 left
[08:27] *** squashable6 joined
[08:33] <nine> japhb: ah, yes, sorry for the noise!
[09:01] *** nine joined
[09:02] <[Tux]> http://kline.sh/
[09:46] *** samebchase- left
[10:52] <[Tux]> Rakudo v2021.04-43-gface292a0 (v6.d) on MoarVM 2021.04-64-g0cf502a68
[10:52] <[Tux]> csv-test-xs-20      0.368 -  0.370
[10:52] <[Tux]> csv-ip5xs           0.852 -  0.876
[10:52] <[Tux]> test-t --race       0.913 -  0.930
[10:52] <[Tux]> test-t              1.993 -  2.017
[10:52] <[Tux]> test                7.587 -  7.984
[10:52] <[Tux]> csv-ip5xs-20        8.400 -  8.813
[10:52] <[Tux]> test-t-20 --race    9.850 - 10.021
[10:52] <[Tux]> csv-parser         25.329 - 26.392
[10:52] <[Tux]> test-t-20          36.604 - 37.305
[11:23] *** ggoebel joined
[11:23] *** ggoebel joined
[11:31] <ggoebel> .tell Tux thx, irc.libera.chat it is... Does anyone know if/what colabti.org intends to do with regards to archiving channels? Or is there an alternative?
[11:31] <tellable6> ggoebel, I'll pass your message to [Tux]
[11:43] *** domidumont joined
[12:01] <lizmat> ggoebel: I'm not sure what colabti will do
[12:01] <lizmat> but I'm keeping local logs of the channels on libera
[12:02] <ggoebel> lizmat: it looks like your work is very timely
[12:02] *** reportable6 left
[12:02] *** reportable6 joined
[12:02] <lizmat> and these will at some point also be searchable on the official version that can now be checked in beta on https://logs.liz.nl
[12:03] <lizmat> ggoebel: looks like indeed...  although I was not aware that things were developing like that on Freenode
[12:04] <ggoebel> lizmat: all the same, thank you for your prescience and work on this
[13:04] *** ggoebel left
[13:04] *** ggoebel left
[13:06] *** ggoebel joined
[13:06] *** ggoebel joined
[13:10] *** ggoebel left
[13:11] *** ggoebel left
[13:19] *** Xliff joined
[13:19] <Xliff> \o
[13:20] <Xliff> What's the best way to convert a Str to a Buf (not a Blob)?
[13:20] <nwc10> o/
[13:20] <nwc10> "ask someone who isn't me" :-(
[13:20] <Xliff> Buf.new( $str.encode )? seems a bit redundant.
[13:20] <Xliff> nwc10: LOL. Bad day?
[13:21] <nwc10> no, much simpler. I have no idea.
[13:25] *** ggoebel joined
[13:25] *** ggoebel joined
[13:27] <leont> $str.encode.Buf
[13:27] <Xliff> Oh, LOL! leont++
[13:28] <Xliff> Given this, do I really need to write my own Buf comparitor or am I missing something?
[13:28] <Xliff> https://tio.run/##ZY3BDoIwEETvfMWG9AAJEERFjPHid@ylrYtpxIJQZP36uneP82byZqJ5aGN8fSFTugBlcrhC2usnYZgeU2lpDq53VgcqzTAa9Mg75AZ5j3xAPiK3yCfkDvmMXIM2S1qRt@OdgBmaCyQiV1a0t7WvPG1ylAtdtGAN9P5IK1nZapud3KzOhy6rC2j@Z0mMPw
[13:28] <lizmat> m: "foo".encode.Buf
[13:28] <camelia> rakudo-moar face292a0: OUTPUT: ¬´No such method 'Buf' for invocant of type 'utf8'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[13:28] <Xliff> Yeah. Just noticed that.
[13:29] <lizmat> otoh, Buf[uint32].new("foo".encode)  should almost be a noop
[13:30] <Xliff> Why uint32, lizmat?
[13:31] *** ggoebel left
[13:31] *** ggoebel left
[13:31] <lizmat> cause that's the internal representation of Uni
[13:31] <Xliff> lizmat: Also, is there a builtin that I can use to compare contents of 2 Bufs?
[13:32] <lizmat> m: dd Buf.new(112) eq Buf.new(112)   #  yes!
[13:32] <camelia> rakudo-moar face292a0: OUTPUT: ¬´Bool::True‚ê§¬ª
[13:32] <lizmat> m: dd Buf.new(112) eq Buf.new(113)
[13:32] <camelia> rakudo-moar face292a0: OUTPUT: ¬´Bool::False‚ê§¬ª
[13:33] <Xliff> Does that internally coerce to Str?
[13:33] <lizmat> nope
[13:33] <lizmat> afaik
[13:34] <Xliff> lizmat++ # Thanks!
[13:35] <lizmat> m: dd $_ for &infix:<eq>.candidates>>.file
[13:35] <camelia> rakudo-moar face292a0: OUTPUT: ¬´"SETTING::src/core.c/Stringy.pm6"‚ê§"SETTING::src/core.c/Stringy.pm6"‚ê§"SETTING::src/core.c/Buf.pm6"‚ê§"SETTING::src/core.c/Str.pm6"‚ê§"SETTING::src/core.c/Str.pm6"‚ê§¬ª
[13:37] <lizmat> meh, of course, encode creates uint8's  
[13:37] <lizmat> nothing to do with Uni
[13:39] <lizmat> m: dd Blob.new.Buf   # that feels like a strange oversight
[13:39] <camelia> rakudo-moar face292a0: OUTPUT: ¬´No such method 'Buf' for invocant of type 'Blob'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[13:41] *** lucs_ left
[13:42] * leont thought there was such a method, sorry for the confusion
[13:43] *** vrurg joined
[13:46] *** vrurg_ left
[14:15] *** lucs left
[14:16] *** lucs joined
[14:17] *** lucs left
[14:40] *** [Coke] is now known as Will
[14:40] *** Will is now known as Coleda
[14:41] *** frost-lab left
[14:41] *** Coleda is now known as [Coke]
[14:43] *** [Coke] is now known as Coke0
[14:44] *** Coke0 is now known as [Coke]
[14:48] *** lucs joined
[14:48] *** lucs joined
[14:51] *** lucs left
[14:51] *** lucs left
[15:11] *** [Coke] is now known as {Coke}
[15:11] *** {Coke} is now known as c0ke
[15:13] *** c0ke is now known as [Coke]
[15:14] *** [Coke] left
[15:15] *** [Coke] joined
[15:17] *** [Coke] left
[15:18] *** [Coke] joined
[15:18] *** [Coke] left
[15:19] *** [Coke] left
[15:19] *** [Coke] joined
[15:19] *** [Coke] joined
[15:21] *** b2gills left
[15:45] <Xliff> So... in my ongoing quest to get a handle on the Perl6 parser in userland, I've run across this:
[15:48] <Xliff> $GRAMMAR.^lookup('parse') throws the following:
[15:48] <Xliff> No such method 'lookup' for invocant of type 'NQPClassHOW' where $GRAMMAR is a Perl6::Grammar
[15:49] <Xliff> If I do $GRAMMAR.parse($text), where $text is a block of Perl6 code
[15:49] <Xliff> I get: "Could not locate compile-time value for symbol Block"
[15:50] <Xliff> Do I need to prep the Perl6::Grammar somehow, before it is used?
[15:53] *** domidumont left
[15:54] <ugexe> m: use Perl6::Grammar:from<NQP>; use Perl6::Actions:from<NQP>; my $source = q|{ say 42 }|; my $*LINEPOSCACHE; my $p6g = Perl6::Grammar.parse($source, :actions(Perl6::Actions)); say $p6g.ast.dump
[15:54] <camelia> rakudo-moar face292a0: OUTPUT: ¬´- QAST::CompUnit  :W<?> :UNIT<?> :CAN_LOWER_TOPIC<?>‚ê§  [pre_deserialize]‚ê§    - QAST::Stmt ‚ê§      - QAST::Stmt ‚ê§        - QAST::Op(loadbytecode) ‚ê§          - QAST::VM ‚ê§            [moar]‚ê§              - QAST::SVal(ModuleLoader.moarvm) ‚ê§‚Ä¶¬ª
[16:01] *** MasterDuke joined
[16:06] *** patrickb joined
[16:08] *** patrickb joined
[16:18] <Xliff> ugexe++ # Thanks!
[16:23] *** hankache joined
[16:23] *** rypervenche left
[16:23] *** rypervenche joined
[16:25] *** rypervenche left
[16:25] *** rypervenche joined
[16:42] *** MasterDuke left
[16:44] *** hankache left
[16:45] *** hankache joined
[16:46] *** hankache left
[16:46] *** hankache joined
[16:49] *** ggoebel joined
[16:49] *** ggoebel joined
[16:49] *** hankache left
[16:49] *** hankache joined
[16:50] *** hankache left
[16:50] *** hankache joined
[17:11] *** hankache joined
[17:42] <Xliff> Is there a more compact way of doing this? 
[17:42] <Xliff> https://tio.run/##ZY3BDoIwEETvfMWG9AAJEERFjPHid@ylrYtpxIJQZP36uneP82byZqJ5aGN8fSFTugBlcrhC2usnYZgeU2lpDq53VgcqzTAa9Mg75AZ5j3xAPiK3yCfkDvmMXIM2S1qRt@OdgBmaCyQiV1a0t7WvPG1ylAtdtGAN9P5IK1nZapud3KzOhy6rC2j@Z0mMPw
[17:43] <Xliff> Sorry. Wrong channel. Will repost on #raku
[17:48] *** ggoebel left
[17:48] *** ggoebel left
[17:48] *** ggoebel joined
[17:48] *** ggoebel joined
[17:56] <lizmat> ugexe: stuff like "Can only parameterize with native int types, not 'T'."   :-(
[18:02] *** hankache_ joined
[18:02] *** hankache_ joined
[18:02] *** reportable6 left
[18:02] *** reportable6 joined
[18:03] *** hankache left
[18:03] *** hankache left
[18:04] *** domidumont joined
[18:07] *** domidumont left
[18:09] *** ggoebel left
[18:10] *** ggoebel left
[18:14] *** hankache_ left
[18:14] *** hankache_ left
[18:15] *** hankache joined
[18:15] *** hankache joined
[18:19] *** [Coke] left
[18:19] *** [Coke] left
[18:21] *** maggotbrain left
[18:22] *** maggotbrain joined
[19:08] *** hankache left
[19:09] *** hankache joined
[19:17] <sena_kun> releasable6, status
[19:17] <releasable6> sena_kun, Next release in ‚âà23 hours. There are no known blockers. 0 out of 43 commits logged
[19:17] <releasable6> sena_kun, Details: https://gist.github.com/7eadf7b0473b4918ce8f4e1ca21412f4
[19:39] <Geth> ¬¶ rakudo/blob-coercers: ac5fb7a678 | (Elizabeth Mattijsen)++ | src/core.c/Buf.pm6
[19:39] <Geth> ¬¶ rakudo/blob-coercers: Add .Buf / .Blob coercers to Blob / Buf
[19:39] <Geth> ¬¶ rakudo/blob-coercers: 
[19:39] <Geth> ¬¶ rakudo/blob-coercers: This is a bit of a special case, as Buf / Blob are both *roles*, yet
[19:39] <Geth> ¬¶ rakudo/blob-coercers: they are generally used as classes with their default parameterization.
[19:39] <Geth> ¬¶ rakudo/blob-coercers: 
[19:39] <Geth> ¬¶ rakudo/blob-coercers: Therefore, the .Buf and .Blob coercers return the type **with the same
[19:39] <Geth> ¬¶ rakudo/blob-coercers: parameterization** as the source.  This feels like the most logical
[19:39] <Geth> ¬¶ rakudo/blob-coercers: <‚Ä¶commit message has 8 more lines‚Ä¶>
[19:39] <Geth> ¬¶ rakudo/blob-coercers: review: https://github.com/rakudo/rakudo/commit/ac5fb7a678
[19:39] <Geth> ¬¶ rakudo: lizmat++ created pull request #4374: Add .Buf / .Blob coercers to Blob / Buf
[19:39] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/4374
[19:41] <lizmat> inspired by discussion earlier today on #raku-dev
[19:46] <lizmat> Xliff leont ugexe ^^
[19:47] <leont> Yes, that seems like a good idea
[19:47] <Xliff> lizmat++
[19:49] <japhb> lizmat: Commented on the commit
[19:51] <Geth> ¬¶ rakudo/blob-coercers: 29eb58ab95 | (Elizabeth Mattijsen)++ | src/core.c/Buf.pm6
[19:51] <Geth> ¬¶ rakudo/blob-coercers: Remove dead code, japhb++
[19:51] <Geth> ¬¶ rakudo/blob-coercers: review: https://github.com/rakudo/rakudo/commit/29eb58ab95
[19:57] *** hankache left
[19:57] *** hankache left
[20:15] *** epony left
[20:15] *** epony joined
[20:40] *** ggoebel joined
[20:40] *** ggoebel joined
[20:56] *** patrickb left
[20:56] *** patrickb left
[21:13] *** b2gills joined
[21:20] *** ggoebel left
[22:01] *** dogbert11 joined
[22:05] *** dogbert17 left
[22:24] *** lucasb joined
[22:43] *** [Coke] joined
[22:43] *** [Coke] joined
[23:00] <releasable6> Next release in ‚âà19 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft