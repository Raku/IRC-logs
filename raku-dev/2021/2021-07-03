[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:35] *** squashable6 left
[00:37] *** squashable6 joined
[00:40] <tbrowder> so, gentlemen, new featre

[00:40] <tbrowder> feature on c, d, or e?

[00:41] <tbrowder> lizmat: ?

[01:13] *** frost joined
[01:38] *** frost left
[02:01] *** nine left
[02:01] *** nine joined
[02:02] <japhb> I don't see why we'd put a new feature into c ... it's not even the current release, let alone a future one.

[02:03] <japhb> I guess people find it easier to add to core.c, but if that's actually a problem, we should fix that, because we shouldn't have a builtin incentive to change the past.

[02:37] <Geth> Â¦ rakudo: Kaiepi++ created pull request #4436: Handle updates to curried role typecheck lists more lazily

[02:37] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4436

[03:03] *** frost joined
[04:17] *** linkable6 left
[04:17] *** evalable6 left
[04:17] *** linkable6 joined
[04:18] *** evalable6 joined
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[07:43] *** releasable6 left
[07:43] *** unicodable6 left
[07:43] *** statisfiable6 left
[07:43] *** bisectable6 left
[07:43] *** quotable6 left
[07:43] *** committable6 left
[07:43] *** benchable6 left
[07:43] *** coverable6 left
[07:43] *** shareable6 left
[07:43] *** nativecallable6 left
[07:43] *** bloatable6 left
[07:43] *** sourceable6 left
[07:43] *** linkable6 left
[07:43] *** reportable6 left
[07:43] *** tellable6 left
[07:43] *** evalable6 left
[07:43] *** squashable6 left
[07:43] *** greppable6 left
[07:43] *** notable6 left
[07:44] *** sourceable6 joined
[07:44] *** bloatable6 joined
[07:44] *** notable6 joined
[07:44] *** evalable6 joined
[07:45] *** tellable6 joined
[07:45] *** linkable6 joined
[07:45] *** shareable6 joined
[07:45] *** quotable6 joined
[07:45] *** greppable6 joined
[07:45] *** squashable6 joined
[07:45] *** nativecallable6 joined
[07:45] *** benchable6 joined
[07:45] *** committable6 joined
[07:46] *** coverable6 joined
[07:46] *** bisectable6 joined
[07:46] *** statisfiable6 joined
[07:46] *** reportable6 joined
[07:46] *** unicodable6 joined
[07:46] *** releasable6 joined
[08:31] <gfldex> tbrowder: please consider the following case: https://gist.github.com/gfldex/784bc98adb639553d3eb02e9d0166a57

[08:32] <gfldex> japhb: maybe because Rakudo doesn't make it easy to spectest against .PREVIEW .

[08:35] <japhb> gfldex: Something to fix, I suppose.  :-)

[08:37] <gfldex> A CLI option for rakudo to force a language version would be nice. Would make it easy to spectest and CI against multiple language versions.

[08:47] <raydiak> we already support pragmas like strict and isms with -M, perhaps it could be extended to support versions as well

[08:49] <gfldex> It would have to cover the case where a script already requests a version. That wont work with -M. In fact if there is a conflict we normally want a SORRY.

[08:53] <raydiak> how does using -M vs making up some other switch change that complexity?

[08:55] <gfldex> I would prefer a clear statement in wrappers. The intent of --override-version=v6.e.PREVIEW is clear.

[09:06] <raydiak> I guess we're well past trying to parallel p5, but -M is what is used there, fwiw

[09:06] <raydiak> either way, if it dies when a different version is requested, "override" isn't exactly accurate. perhaps "force" or so?

[09:17] *** squashable6 left
[09:19] *** squashable6 joined
[10:07] <tbrowder> gfldex: i will try to put it in .e

[10:08] <tbrowder> when or if i get it working in c, then i will move it

[12:03] *** reportable6 left
[12:03] *** reportable6 joined
[14:01] *** frost left
[16:12] <ugexe> pretty much an impossible task

[16:13] <ugexe> how much of the roast launches a process using `raku ...`

[16:13] <ugexe> those don't carry their compiler arguments forward

[16:14] <ugexe> on a similar note though -M also doesn't work with ver/auth/api

[16:20] <ugexe> Remember: "as a developer I want to be able to do thing", not "as a developer we should implement X Y and Z to do thing"

[16:29] <nine> Language versions just do not work exactly like people here seem to think

[17:47] *** benchable6 left
[17:47] *** coverable6 left
[17:47] *** linkable6 left
[17:47] *** committable6 left
[17:47] *** notable6 left
[17:47] *** bloatable6 left
[17:47] *** tellable6 left
[17:47] *** nativecallable6 left
[17:47] *** quotable6 left
[17:47] *** bisectable6 left
[17:47] *** squashable6 left
[17:47] *** statisfiable6 left
[17:47] *** sourceable6 left
[17:47] *** releasable6 left
[17:47] *** shareable6 left
[17:47] *** reportable6 left
[17:47] *** greppable6 left
[17:47] *** unicodable6 left
[17:47] *** evalable6 left
[17:47] *** notable6 joined
[17:48] *** nativecallable6 joined
[17:48] *** reportable6 joined
[17:48] *** sourceable6 joined
[17:48] *** linkable6 joined
[17:48] *** tellable6 joined
[17:48] *** releasable6 joined
[17:48] *** greppable6 joined
[17:48] *** quotable6 joined
[17:48] *** statisfiable6 joined
[17:49] *** committable6 joined
[17:49] *** shareable6 joined
[17:49] *** evalable6 joined
[17:49] *** squashable6 joined
[17:49] *** unicodable6 joined
[17:50] *** coverable6 joined
[17:50] *** benchable6 joined
[17:50] *** bisectable6 joined
[17:50] *** bloatable6 joined
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:36] *** ChanServ sets mode: +o ugexe

[18:40] *** ChanServ sets mode: -o ugexe

[18:50] *** notna joined
[20:16] <Kaiepi> t/02-rakudo/15-gh_1202.t failed on me during a test run. passes a second time around

[20:20] <Kaiepi> during which t/09-moar/01-profilers.t failed, but passes when tested individually

[20:25] <Kaiepi> bad update that may not reflect master, mb

[20:39] *** notna left
[22:14] *** LizBot joined
[22:14] *** LizBot left
[22:14] *** Geth left
[22:15] *** Geth joined
[22:15] *** TempIRCLogger joined
[22:50] <tbrowder> i just looked around for any checklist or guidance for devs to follow when submitting code for a future release and didn't find too much help.

[23:11] <tbrowder> it looks like, considering operators.pm6 and Grammar.pm6, i would dup some parts of the pertinent files in core.c (class decls, etc.) and add just the new parts.

[23:13] <tbrowder> then add the new symbol to the core.e settings (but NOT the core.c and core.d settings).

[23:14] <tbrowder> the partial files would go only in the src/core.e dir

[23:15] *** evalable6 left
[23:15] *** linkable6 left
[23:15] <tbrowder> does that sound about right? if so, i'll start the move now.

[23:16] *** linkable6 joined
[23:16] *** evalable6 joined
[23:16] <tbrowder> *working on the move process

[23:19] <tbrowder> looking more

[23:40] <tbrowder> looking more closely, looks like the operators can be new additons only

