[00:30] *** JRaspass left
[01:09] *** linkable6 left
[01:11] *** linkable6 joined
[01:26] *** squashable6 left
[01:26] *** linkable6 left
[01:27] *** linkable6 joined
[01:29] *** squashable6 joined
[01:44] *** lucasb left
[02:08] *** JRaspass joined
[02:14] *** [Tux] left
[02:43] *** JRaspass left
[02:44] *** kvw_5_ joined
[02:48] *** kvw_5 left
[03:00] *** leont left
[03:28] *** [Tux] joined
[04:12] *** japhb left
[04:18] *** japhb joined
[05:02] *** samcv left
[05:03] *** samcv joined
[07:28] *** Geth joined
[07:49] *** domidumont joined
[08:17] <Geth> ¦ rakudo: 734e7f488e | (Vadim Belman)++ | src/Perl6/Metamodel/CoercionHOW.nqp

[08:17] <Geth> ¦ rakudo: Clean up artefacts of debugging process

[08:17] <Geth> ¦ rakudo: 

[08:17] <Geth> ¦ rakudo: There is currently no need to preserve a return value anymore.

[08:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/734e7f488e

[08:17] <Geth> ¦ rakudo: 20e6f50e26 | (Vadim Belman)++ | src/Perl6/Actions.nqp

[08:17] <Geth> ¦ rakudo: Optimize coercive parameter typechecking

[08:17] <Geth> ¦ rakudo: 

[08:17] <Geth> ¦ rakudo: Constraints are rather easy to typecheck against. It is sufficient to

[08:18] <Geth> ¦ rakudo: typecheck against coercion target and constraint types. They can, in

[08:18] <Geth> ¦ rakudo: turn, be other nominalizables with complex typechecking. But at least

[08:18] <Geth> ¦ rakudo: one level of invocation can be eliminated. The optimization makes

[08:18] <Geth> ¦ rakudo: loop in the following example to run 8x to 9x faster:

[08:18] <Geth> ¦ rakudo: 

[08:18] <Geth> ¦ rakudo:     sub foo(Bool() $v) { !$v }

[08:18] <Geth> ¦ rakudo:     for ^10_000_000 { my $r = foo(False); }

[08:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/20e6f50e26

[08:18] <Geth> ¦ rakudo: aeb756cdf3 | niner++ (committed using GitHub Web editor) | 2 files

[08:18] <Geth> ¦ rakudo: Merge pull request #4218 from vrurg/optimize-param-typecheck

[08:18] <Geth> ¦ rakudo: 

[08:18] <Geth> ¦ rakudo: Optimize param typecheck

[08:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/aeb756cdf3

[08:22] <Geth> ¦ nqp: a4f0beb836 | (Daniel Green)++ | src/HLL/Compiler.nqp

[08:22] <Geth> ¦ nqp: Support some missing Rakudo command line flags

[08:22] <Geth> ¦ nqp: 

[08:22] <Geth> ¦ nqp: Before this, the rakudo-m executable built in the Rakudo source

[08:22] <Geth> ¦ nqp: directory would die with 'Illegal operation <given flag>' for

[08:22] <Geth> ¦ nqp: '--debug-suspend', '--debug-port=port', '--tracing', and

[08:22] <Geth> ¦ nqp: '--full-cleanup'.

[08:22] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/a4f0beb836

[08:22] <Geth> ¦ nqp: 672a801c9e | MasterDuke17++ (committed using GitHub Web editor) | src/HLL/Compiler.nqp

[08:22] <Geth> ¦ nqp: Merge pull request #696 from MasterDuke17/add_some_missing_rakudo_command_line_flags

[08:22] <Geth> ¦ nqp: 

[08:22] <Geth> ¦ nqp: Support some missing Rakudo command line flags

[08:22] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/672a801c9e

[08:33] <MasterDuke> lizmat: after vrurg++'s PR, the :exists is faster than ∈

[08:40] *** leont joined
[09:05] *** JRaspass joined
[09:26] *** Raeiyhan joined
[10:08] *** MasterDuke left
[10:22] *** MasterDuke joined
[10:33] *** Raeiyhan left
[11:29] *** MasterDuke left
[11:30] *** MasterDuke joined
[11:44] *** sena_kun left
[12:24] <lizmat> nice!

[12:36] *** sena_kun joined
[12:37] <MasterDuke> lizmat: also, i discovered`my $e := SELF.EXISTS-KEY(key); $exists ?? $e !! !$e` seems to be slightly faster than https://github.com/rakudo/rakudo/blob/master/src/core.c/hash_slice.pm6#L22

[12:42] *** sxmx left
[12:55] *** sxmx joined
[13:01] <MasterDuke> oddly enough 7 billion more instructions executed according to callgrind, but less elapsed time

[13:05] *** [Tux] left
[13:09] *** [Tux] joined
[13:23] *** JRaspass left
[13:26] <lizmat> hmmm....   interesting

[13:27] * lizmat feels like a wet towel after having gotten a vaccine shot yesterday

[13:33] <nine> lizmat: https://xkcd.com/2425/

[13:35] <lizmat> yeah, definitely a lot of pew pew pew going on  :-)

[15:10] *** JRaspass joined
[15:15] <Geth> ¦ nqp: 2240224600 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[15:15] <Geth> ¦ nqp: Bump MoarVM to get profiler fix

[15:15] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/2240224600

[15:26] <Geth> ¦ rakudo: 5a4372b484 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[15:26] <Geth> ¦ rakudo: Bump NQP to get profiler fix and nqp cli fixes

[15:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5a4372b484

[15:34] *** lizmat left
[15:37] <Geth> ¦ rakudo/rakuast: beb9f7aa74 | (Jonathan Worthington)++ | 7 files

[15:37] <Geth> ¦ rakudo/rakuast: RakuAST for basic case of reduce meta-ops

[15:37] <Geth> ¦ rakudo/rakuast: 

[15:37] <Geth> ¦ rakudo/rakuast: So far, no thunk support and always assumes left-associative.

[15:37] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/beb9f7aa74

[15:48] *** lizmat joined
[16:25] *** Geth left
[17:58] *** domidumont left
[18:14] *** JRaspass left
[18:53] *** camelia left
[18:58] <codesections> could I get a rakudo commit bit?  I have a couple of PRs that are ready to be merged (one was reviewed and the other was discussed in detail) and don't want to keep bothering people.  (Or, if not, could someone merge the PRs :) )

[18:58] <codesections>  

[19:16] <MasterDuke> codesections: have you signed the CLA?

[19:18] <codesections> I haven't, but am happy to.  (That also would matter re: the size of the PRs, whether or not I merge them myself)

[19:19] <MasterDuke> it's required for a rakudo commit bit

[19:19] *** camelia joined
[19:20] <MasterDuke> i don't have the link on hand, but if you search the logs of this channel you'll find the info

[19:20] <codesections> Thanks, will do

[19:20] <MasterDuke> np

[19:25] <tonyo> codesections: https://fossies.org/linux/rakudo-star/src/rakudo-2020.10/rakudo-2020.10/docs/obtaining-a-commit-bit.pod

[19:42] <lizmat> hmmm... appears we lost Geth again

[19:42] <lizmat> codesections: I have just merged your PR

[19:43] <codesections> lizmat: ty

[19:45] <codesections> tonyo: ty as well.  I'd checked CONTRIBUTING.md, but should have thought to look in docs/.  In any event, I just emailed the signed CLA to YAS

[19:48] *** JRaspass joined
[19:59] <nine> m: say $*PERL.compiler.version

[19:59] <camelia> rakudo-moar 726a75e24: OUTPUT: «v2021.02.25.g.726.a.75.e.24␤»

[19:59] <nine> \o/

[20:00] <nine> camelia reaches Github again, powered by NAT64 and DNS64

[20:04] *** camelia left
[20:07] *** camelia joined
[20:09] *** camelia left
[20:10] *** camelia joined
[20:14] *** sortiz joined
[20:18] *** camelia left
[20:24] *** camelia joined
[20:34] <sortiz> lizmat: Thank you

[20:58] * sena_kun does a point release

[20:58] <sortiz> sena_kun++

[21:11] <sena_kun> https://github.com/rakudo/rakudo/pull/4221/files <- proof-reading a changelog is welcome

[21:36] <codesections> I read the changelog and didn't spot any proofreading issues +1

[21:41] <sena_kun> codesections++

[22:10] *** sena_kun left
[22:11] *** sena_kun joined
[22:23] *** sxmx left
[22:25] *** sxmx joined
[23:32] <sena_kun> So I am very sleepy, hungry and tired right now, but for once there is a point: https://twitter.com/koto_san_kana/status/1364719851248508930

[23:37] <MasterDuke> nice. sena_kun++

[23:49] *** MasterDuke left
