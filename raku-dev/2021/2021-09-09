[00:01] *** sourceable6 left
[00:01] *** bisectable6 left
[00:01] *** releasable6 left
[00:01] *** notable6 left
[00:01] *** coverable6 left
[00:01] *** tellable6 left
[00:01] *** evalable6 left
[00:01] *** statisfiable6 left
[00:01] *** greppable6 left
[00:01] *** shareable6 left
[00:01] *** bloatable6 left
[00:01] *** benchable6 left
[00:01] *** nativecallable6 left
[00:01] *** unicodable6 left
[00:01] *** linkable6 left
[00:01] *** reportable6 left
[00:01] *** committable6 left
[00:01] *** quotable6 left
[00:02] *** sourceable6 joined
[00:02] *** linkable6 joined
[00:02] *** committable6 joined
[00:02] *** notable6 joined
[00:02] *** benchable6 joined
[00:03] *** statisfiable6 joined
[00:04] *** bisectable6 joined
[00:04] *** shareable6 joined
[00:04] *** evalable6 joined
[01:00] *** frost joined
[01:01] *** bloatable6 joined
[01:04] *** nativecallable6 joined
[01:04] *** tellable6 joined
[02:02] *** greppable6 joined
[02:04] *** releasable6 joined
[02:37] *** squashable6 joined
[03:02] *** reportable6 joined
[04:04] *** unicodable6 joined
[05:04] *** coverable6 joined
[06:02] *** reportable6 left
[07:03] *** quotable6 joined
[07:04] *** reportable6 joined
[08:04] *** linkable6 left
[08:04] *** evalable6 left
[08:06] *** linkable6 joined
[08:21] *** TempIRCLogger left
[08:21] *** TempIRCLogger joined
[08:23] *** TempIRCLogger left
[08:23] *** TempIRCLogger joined
[09:06] *** evalable6 joined
[09:36] *** Altai-man_ left
[09:37] *** Altai-man joined
[11:27] <Geth> Â¦ roast: 702b51957d | (Jonathan Worthington)++ | S12-methods/defer-call.t

[11:27] <Geth> Â¦ roast: Test to cover a callsame bug

[11:27] <Geth> Â¦ roast: 

[11:27] <Geth> Â¦ roast: This showed up on new-disp, took a large module to trigger it despite

[11:27] <Geth> Â¦ roast: being nothing too unusual, and thus is good to cover with a spectest.

[11:27] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/702b51957d

[11:48] *** evalable6 left
[11:48] *** linkable6 left
[11:49] *** linkable6 joined
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:24] *** frost left
[12:50] *** evalable6 joined
[13:06] *** Xliff joined
[15:44] *** japhb left
[16:03] *** japhb joined
[16:40] <[Tux]> Rakudo v2021.08-22-gb451f89b6 (v6.d) on MoarVM 2021.08-9-g4b7ffe3af

[16:40] <[Tux]> csv-test-xs-20      0.372 -  0.373

[16:40] <[Tux]> csv-ip5xs           0.857 -  0.858

[16:40] <[Tux]> test-t --race       0.990 -  1.022

[16:40] <[Tux]> test-t              1.988 -  2.039

[16:40] <[Tux]> test                8.081 -  8.128

[16:40] <[Tux]> csv-ip5xs-20        8.892 -  9.475

[16:40] <[Tux]> test-t-20 --race    9.596 - 10.016

[16:40] <[Tux]> csv-parser         27.414 - 28.157

[16:40] <[Tux]> test-t-20          33.665 - 35.128

[17:26] *** lucs left
[17:27] *** lucs joined
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[18:27] *** squashable6 left
[18:29] *** squashable6 joined
[18:45] * [Coke] wonders if it would be nifty to have new-disp branch stats for the csv tests.

[18:47] <lizmat> I did that a few days ago, they were worse still

[21:06] <jdv> patience...:)

[21:26] <jdv> is it possible that new-disp is taking a bit longer to integrate and rakuast will be pushed out til q1/q2 2022?

[21:34] <japhb> jdv: Last I heard the planned landing of new-disp is "right after the next release" to give maximum time to discover fallout.

[21:35] <japhb> (To be clear, it already is 100% on `make test` and `make spectest`, and nearly all Blin ecosystem failures have been fixed too, so it's not like it's just throwing untested stuff at our users.)

[21:41] <jdv> i know all that.  but there was an "optmistic" notion that both would be done in q4 iirc.  i'm just asking if anyone things that's still a thing.

[22:03] <japhb> Oh good question.  I *suspect* that RakuAST will slip somewhat, but that's just a poorly-educated guess layered with the fuzzy pattern matching of an engineering manager.

[22:11] *** squashable6 left
[22:12] *** squashable6 joined
[22:45] <[Coke]> Focus has been on completing new-disp.

[22:46] <[Coke]> I suspect if you ask a few days after mergeback of new-disp to master you'll get a less handwavy answer.

[23:15] <timo> one of the latest commits to moarvm gave a nice little performance boost already, with some other wins still to be gained back

[23:16] <jdv> fun times

[23:36] <jdv> should the setting parse still be slower on new-disp?

[23:37] <jdv> wonder if i got it compiled/ing correctly

[23:38] <japhb> jdv: Yeah, that's expected.  (At least) one of the major things needed to win back parsing time hasn't landed in the branch yet.

[23:44] *** melezhik joined
[23:45] *** melezhik left
