[00:00] *** stoned75 joined
[00:11] *** lucasb left
[00:32] *** stoned75 left
[01:20] *** squashable6 left
[01:23] *** squashable6 joined
[01:41] *** melezhik left
[03:25] *** melezhik joined
[03:41] *** melezhik left
[04:41] *** sourceable6 left
[04:41] *** greppable6 left
[04:41] *** evalable6 left
[04:41] *** unicodable6 left
[04:41] *** committable6 left
[04:41] *** bloatable6 left
[04:41] *** linkable6 left
[04:41] *** coverable6 left
[04:41] *** benchable6 left
[04:41] *** squashable6 left
[04:41] *** nativecallable6 left
[04:41] *** tellable6 left
[04:41] *** bisectable6 left
[04:41] *** shareable6 left
[04:41] *** statisfiable6 left
[04:41] *** quotable6 left
[04:41] *** notable6 left
[04:41] *** releasable6 left
[04:41] *** sourceable6 joined
[04:42] *** greppable6 joined
[04:42] *** nativecallable6 joined
[04:42] *** statisfiable6 joined
[04:42] *** bloatable6 joined
[04:42] *** quotable6 joined
[04:42] *** evalable6 joined
[04:42] *** unicodable6 joined
[04:42] *** tellable6 joined
[04:42] *** benchable6 joined
[04:43] *** shareable6 joined
[04:43] *** coverable6 joined
[04:43] *** committable6 joined
[04:43] *** notable6 joined
[04:44] *** linkable6 joined
[04:44] *** releasable6 joined
[04:44] *** squashable6 joined
[04:44] *** bisectable6 joined
[05:26] *** epony left
[05:27] *** epony joined
[06:02] *** melezhik joined
[06:08] *** melezhik left
[07:32] *** Xliff left
[07:59] *** sena_kun joined
[08:05] *** domidumont joined
[08:09] *** MasterDuke joined
[09:21] *** JRaspass joined
[09:39] *** Xliff joined
[11:04] <lizmat> Files=1346, Tests=117148, 226 wallclock secs (30.04 usr  8.79 sys + 3160.31 cusr 304.81 csys = 3503.95 CPU)

[11:07] <Geth> Â¦ rakudo: 336a21701b | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | src/core.c/IO/Path.pm6

[11:07] <Geth> Â¦ rakudo: Changes message string

[11:07] <Geth> Â¦ rakudo: 

[11:07] <Geth> Â¦ rakudo: Also DRY by putting it into a constant. Closes Raku/old-issue-tracker#6588 when accepted.

[11:07] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/336a21701b

[11:07] <Geth> Â¦ rakudo: a13ea269a8 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/IO/Path.pm6

[11:07] <Geth> Â¦ rakudo: Merge pull request #4146 from rakudo/rt-6588

[11:07] <Geth> Â¦ rakudo: 

[11:07] <Geth> Â¦ rakudo: Change IO::Path.new("") error message string

[11:07] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a13ea269a8

[11:08] <Geth> Â¦ rakudo: c9d69dc658 | (Nicholas Clark)++ | src/core.c/Num.pm6

[11:08] <Geth> Â¦ rakudo: Implement `sec`, `asec` and `sech` in terms of other NQP trigonometric funcs.

[11:08] <Geth> Â¦ rakudo: 

[11:08] <Geth> Â¦ rakudo: There is some inconsistency in MoarVM - as well as the usual trigonometric

[11:08] <Geth> Â¦ rakudo: functions `sin`, `cos`, `tan` and their inverses, *some* of the others are

[11:08] <Geth> Â¦ rakudo: implemented directly as NQP ops, but not all. So we have nqp::sec and

[11:08] <Geth> Â¦ rakudo: nqp::asec for secants, but no OPs for cosecants or cotangents (or their

[11:08] <Geth> Â¦ rakudo: inverses), with the result that these are implemented by Num.pm6 as

[11:08] <Geth> Â¦ rakudo: <â€¦commit message has 16 more linesâ€¦>

[11:08] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c9d69dc658

[11:08] <nwc10> \o/

[11:08] <Geth> Â¦ rakudo: 3431249599 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/Num.pm6

[11:08] <Geth> Â¦ rakudo: Merge pull request #4148 from nwc10/sec-asec-and-sech-without-NQP-wrappers

[11:08] <Geth> Â¦ rakudo: 

[11:08] <Geth> Â¦ rakudo: Implement `sec`, `asec` and `sech` in terms of other NQP trigonometric functions.

[11:08] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3431249599

[11:08] <Geth> Â¦ rakudo: 43613ac536 | (Nick Logan)++ | 2 files

[11:08] <Geth> Â¦ rakudo: Prefer api sorting over version sorting

[11:08] <Geth> Â¦ rakudo: 

[11:08] <Geth> Â¦ rakudo: When sorting distributions my intention was for the highest api

[11:08] <Geth> Â¦ rakudo: to be preferred (with the highest version being used if there was

[11:08] <Geth> Â¦ rakudo: a tie in api version). This change aligns raku behavior with those

[11:08] <Geth> Â¦ rakudo: intentions instead of preferring version over api.

[11:08] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/43613ac536

[11:09] <Geth> Â¦ rakudo: 81c5f0cabf | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 2 files

[11:09] <Geth> Â¦ rakudo: Merge pull request #4152 from rakudo/api-sorting

[11:09] <Geth> Â¦ rakudo: 

[11:09] <Geth> Â¦ rakudo: Prefer api sorting over version sorting

[11:09] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/81c5f0cabf

[11:11] <Geth> Â¦ rakudo: 790240f604 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 8 files

[11:11] <Geth> Â¦ rakudo: Make sure that .of works on type objects always (#4106)

[11:11] <Geth> Â¦ rakudo: 

[11:11] <Geth> Â¦ rakudo: Make sure that .of works on type objects always

[11:11] <Geth> Â¦ rakudo: 

[11:11] <Geth> Â¦ rakudo: If a type supports the .of method, that is.

[11:11] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/790240f604

[11:11] <linkable6> RAKUDO#4106 [closed]: https://github.com/rakudo/rakudo/pull/4106 Make sure that .of works on type objects always

[11:30] *** Altai-man joined
[11:32] *** sena_kun left
[11:37] <Geth> Â¦ roast: 057ba35384 | (Elizabeth Mattijsen)++ | S32-list/seq.t

[11:37] <Geth> Â¦ roast: Make sure we have uncached Seqs when checking for exhaustion

[11:37] <Geth> Â¦ roast: 

[11:37] <Geth> Â¦ roast: With the CachedIterator role, a Seq can be cached even *without* a

[11:37] <Geth> Â¦ roast: specific call to .cache.  These tests where using a List as the

[11:37] <Geth> Â¦ roast: source of the tested Seqs, but with the CachedIterator role these

[11:37] <Geth> Â¦ roast: would be cached be default.  Change the Seqs to uncached by calling

[11:37] <Geth> Â¦ roast: the .slice method on them, which would effectively create an uncached

[11:37] <Geth> Â¦ roast: Seq from the cached Seq.

[11:37] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/057ba35384

[11:37] <Geth> Â¦ rakudo: 9e13ace808 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 9 files

[11:37] <Geth> Â¦ rakudo: Introducing CachedIterator role (#3982)

[11:37] <Geth> Â¦ rakudo: 

[11:37] <linkable6> RAKUDO#3982 [closed]: https://github.com/rakudo/rakudo/pull/3982 Introducing CachedIterator role

[11:37] <Geth> Â¦ rakudo: This is a refinement of the PredictiveIterator role, in that it allows

[11:37] <Geth> Â¦ rakudo: an Iterator class to provide the cache of the Seq, so that Lists and

[11:38] <Geth> Â¦ rakudo: Arrays that have already been fully reified, do not need to generate

[11:38] <Geth> Â¦ rakudo: a cache.  Seems like an easy applicable idea, but unfortunately, this

[11:38] <Geth> Â¦ rakudo: hit some snags.

[11:38] <Geth> Â¦ rakudo: <â€¦commit message has 23 more linesâ€¦>

[11:38] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9e13ace808

[12:39] *** camelCaser left
[13:57] *** domidumont left
[14:15] *** vrurg joined
[14:38] *** MasterDuke left
[15:04] <Geth> Â¦ rakudo: 12b49b8343 | (Elizabeth Mattijsen)++ | src/core.c/Complex.pm6

[15:04] <Geth> Â¦ rakudo: Re-imagine PR 682

[15:04] <Geth> Â¦ rakudo: 

[15:04] <Geth> Â¦ rakudo: It had bitrotted.  And since it was a performance improvement, do

[15:04] <Geth> Â¦ rakudo: some ternification and nqpification as well.

[15:04] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/12b49b8343

[15:06] *** MasterDuke joined
[15:14] <[Tux]> Rakudo v2020.12-50-g9e13ace80 (v6.d) on MoarVM 2020.12-83-ga5b8a815f

[15:14] <[Tux]> csv-test-xs-20      0.407 -  0.417

[15:14] <[Tux]> csv-ip5xs           0.819 -  0.925

[15:14] <[Tux]> test-t --race       0.945 -  0.948

[15:14] <[Tux]> test-t              1.919 -  1.920

[15:14] <[Tux]> test                8.065 -  8.671

[15:14] <[Tux]> csv-ip5xs-20        8.326 -  8.421

[15:14] <[Tux]> test-t-20 --race    8.987 -  9.195

[15:14] <[Tux]> csv-parser         27.302 - 28.863

[15:14] <[Tux]> test-t-20          29.126 - 31.809

[15:30] *** sena_kun joined
[15:32] *** Altai-man left
[16:08] *** domidumont joined
[17:16] *** b2gills left
[17:16] *** Kaiepi left
[17:34] *** MasterDuke left
[17:38] *** b2gills joined
[17:45] *** lucasb joined
[17:46] *** Kaiepi joined
[18:56] *** domidumont left
[19:02] *** sortiz joined
[19:30] *** Altai-man joined
[19:32] *** sena_kun left
[19:48] *** b2gills1 joined
[19:48] *** b2gills left
[20:26] *** JRaspass left
[20:26] *** JRaspass joined
[20:27] *** JRaspass left
[20:27] *** JRaspass joined
[21:40] *** Altai-man left
[21:42] *** MasterDuke joined
[21:42] *** sena_kun joined
[21:48] *** sena_kun left
[22:54] *** melezhik joined
[23:38] *** melezhik left
