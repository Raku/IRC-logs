[00:02] *** reportable6 left
[01:04] *** reportable6 joined
[01:32] *** squashable6 joined
[02:36] *** bloatable6 left
[02:36] *** evalable6 left
[02:36] *** committable6 left
[02:36] *** squashable6 left
[02:36] *** shareable6 left
[02:36] *** quotable6 left
[02:36] *** greppable6 left
[02:36] *** coverable6 left
[02:36] *** nativecallable6 left
[02:36] *** bisectable6 left
[02:36] *** benchable6 left
[02:36] *** statisfiable6 left
[02:36] *** linkable6 left
[02:36] *** sourceable6 left
[02:36] *** unicodable6 left
[02:36] *** reportable6 left
[02:36] *** tellable6 left
[02:36] *** notable6 left
[02:36] *** releasable6 left
[02:36] *** statisfiable6 joined
[02:37] *** notable6 joined
[02:37] *** releasable6 joined
[02:37] *** greppable6 joined
[02:37] *** evalable6 joined
[02:37] *** bloatable6 joined
[02:37] *** shareable6 joined
[02:38] <moon-child> 'in block  at translate-tables.pm6'

[02:38] <moon-child> nameless block!

[02:38] *** nativecallable6 joined
[02:38] *** committable6 joined
[02:38] *** linkable6 joined
[02:38] *** sourceable6 joined
[02:39] *** squashable6 joined
[02:39] *** quotable6 joined
[03:36] *** bisectable6 joined
[03:38] *** tellable6 joined
[03:38] *** benchable6 joined
[04:36] *** unicodable6 joined
[04:37] *** coverable6 joined
[06:00] *** linkable6 left
[06:00] *** evalable6 left
[07:01] *** linkable6 joined
[07:04] *** patrickb joined
[07:05] *** reportable6 joined
[09:02] *** evalable6 joined
[10:02] *** evalable6 left
[10:02] *** linkable6 left
[10:04] *** linkable6 joined
[10:05] *** evalable6 joined
[10:41] <Geth> ¦ rakudo: d6be10ed2a | (Jonathan Worthington)++ | t/09-moar/00-misc.t

[10:41] <Geth> ¦ rakudo: Test cover a segfault after trying to clone a Lock

[10:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d6be10ed2a

[10:41] <Geth> ¦ rakudo: ff6951f590 | (Jonathan Worthington)++ | 2 files

[10:41] <Geth> ¦ rakudo: Fix deprecation warning in rakudo-[gdb|valgrind]-m

[10:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ff6951f590

[10:53] *** sena_kun joined
[11:26] <[Tux]> Rakudo v2021.09-251-gff6951f59 (v6.d) on MoarVM 2021.09-633-g1f00f12ab

[11:26] <[Tux]> csv-test-xs-20      0.381 -  0.381

[11:26] <[Tux]> test-t --race       1.096 -  1.227

[11:26] <[Tux]> csv-ip5xs           1.420 -  1.646

[11:26] <[Tux]> test-t              1.754 -  1.948

[11:26] <[Tux]> csv-parser          5.064 -  5.650

[11:26] <[Tux]> test                7.569 -  8.177

[11:26] <[Tux]> test-t-20 --race    9.877 -  9.970

[11:26] <[Tux]> csv-ip5xs-20       16.189 - 17.279

[11:26] <[Tux]> test-t-20          26.204 - 27.351

[11:27] <[Tux]> Note to self: do not run timing while crossover tries to install MicroSoft updates and Teams is active in a video-meet

[11:31] *** frost joined
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:13] *** ggoebel joined
[12:14] <ggoebel> compiling from source... Found /raku/bin/moar version 2021.09-607-ge28e06ded, which is too old. Wanted at least 2021.09-624-ge733aef88

[12:15] <ggoebel> just pulled latest MoarVM

[12:15] <ggoebel> did a make clean, make, make install... so not sure how I'm using a version which is too old

[12:16] <ggoebel> sorry... got that error while compiling nqp

[12:17] <timo> you need to Configure.pl as well

[12:20] <ggoebel> thanks

[13:20] *** CIAvash left
[13:20] *** AlexDaniel left
[13:22] *** AlexDaniel joined
[13:30] *** CIAvash joined
[13:36] <ggoebel> getting an interesting error which appears to be related to Inline::Python and precompilation... No such method 'EXISTS-KEY' for invocant of type 'BOOTHash'.  Did you

[13:36] <ggoebel> mean any of these: 'EXISTS-KEY', 'EXISTS-POS'?

[13:36] <ggoebel> happens when a module uses two modules which both use Inline::Python

[13:36] <ggoebel> simplest case I could golf it down to is...

[13:37] <ggoebel> [Foo.rakumod]

[13:37] <ggoebel> use v6;

[13:37] <ggoebel> use Bar;

[13:37] <ggoebel> use Baz;

[13:37] <ggoebel> [Bar.rakumod]

[13:37] <ggoebel> use v6;

[13:37] <ggoebel> use Inline::Python;

[13:37] <ggoebel> unit class Bar;

[13:37] <ggoebel> [Baz.rakumod]

[13:37] <ggoebel> use v6;

[13:37] <ggoebel> use Inline::Python;

[13:37] <ggoebel> unit class Baz;

[13:38] <lizmat> ggoebel: perhaps a gist and an issue ?  :-)

[13:38] <ggoebel> $ raku -MFoo -I./lib -e 'say "ok"'

[13:38] <ggoebel> ===SORRY!=== Error while compiling -e

[13:38] <ggoebel> ===SORRY!=== Error while compiling /home/ggoebel/git/test/lib/Foo.rakumod (Foo)

[13:38] <ggoebel> ===SORRY!=== Error while compiling /home/ggoebel/git/test/lib/Baz.rakumod (Baz)

[13:38] <ggoebel> No such method 'EXISTS-KEY' for invocant of type 'BOOTHash'.  Did you

[13:38] <ggoebel> mean any of these: 'EXISTS-KEY', 'EXISTS-POS'?

[13:38] <ggoebel> at /home/ggoebel/git/test/lib/Baz.rakumod (Baz):2

[13:38] <ggoebel> at /home/ggoebel/git/test/lib/Foo.rakumod (Foo):3

[13:38] <ggoebel> at -e:1

[13:38] <lizmat> a gist with --ll-exception might be helpful  :-)

[13:40] <ggoebel> ok will do.

[13:41] <ggoebel> if I change the order of use statements to use Baz before Bar... it prints ok

[13:41] <ggoebel> The first run produces 11 precomp files

[13:42] <ggoebel> after changing the order of the use statements it produces 14

[13:42] <ggoebel> will put it all in a gist and open an issue

[13:43] <timo> you can set RAKUDO_MODULE_DEBUG=1 to get info about precompilation and such

[13:44] <ggoebel> odd that it suggests using 'EXISTS-KEY' after stating that no such method exists

[13:44] <ggoebel> timo: will try that. I don't know enough about the internals to know whether it is specific to precomp.

[13:45] <lizmat> not really: the error message handling probably HLLizes the native hash, and lists its methods

[13:45] <ugexe> wasn't someone else getting that error this last week?

[13:45] <lizmat> somewhere, a hash is not being HLLized

[13:45] <lizmat> ugexe: yes, feels familiar

[13:46] <ugexe> https://gist.github.com/whatnext/87c22a266f05d6f799ab5d2b01b610d3

[13:46] <ggoebel> no additional information is output when RAKUDO_MODULE_DEBUG=1

[13:47] <ggoebel> my bad... yes it does

[13:47] <ugexe> my guess based on the gist above was one of the nqp::hash objects in CU::RR

[13:49] <lizmat> the problem appears to be in INDIRECT_NAME_LOOKUP

[13:50] <lizmat> feels like one of the stashes has a native hash as a value?

[13:50] <ugexe> no idea... it doesnt seem like anything really changed around those areas but i havent taken a good look at the new-disp changes

[13:59] <ggoebel> If I remove "use Inline::Python;" from either Baz or Bar... the error also goes away

[13:59] <ggoebel> something about the second time Inline::Python is being loaded

[14:02] <ggoebel> https://gist.github.com/ggoebel/7831a0b2269fce57c4cd366c84e7e164

[14:04] *** frost left
[14:10] <ggoebel> https://github.com/rakudo/rakudo/issues/4557

[14:10] <lizmat> ggoebel++

[14:11] <lizmat> ggoebel: do you know perchance whether that issue exists with Inline::Python?  Or with any other module?

[14:14] <ggoebel> Let me substitute Inline::Perl5 and see :-)

[14:16] <ggoebel> seems to be specific to Inline::Python. If I switch it to Inline::Perl5... no error

[14:16] <lizmat> aha.. ok, thanks!

[15:04] *** ggoebel left
[15:07] <nine> Inline::Perl5 has supported precompilation since 2019, but Inline::Python has never gained similar support

[15:10] *** ggoebel joined
[15:20] *** ggoebel left
[16:40] *** patrickb left
[17:59] *** sena_kun left
[18:02] *** reportable6 left
[19:01] *** nebuchadnezzar left
[19:04] *** reportable6 joined
[19:19] *** dogbert17 left
[19:19] *** dogbert17 joined
[19:44] <lizmat> m: sub a() {}; say a.^ver    # weird

[19:44] <camelia> rakudo-moar ff6951f59: OUTPUT: «6.c␤»

[19:44] <lizmat> m: use v6.d; sub a() {}; say a.^ver    # weirder

[19:44] <camelia> rakudo-moar ff6951f59: OUTPUT: «Don't know setting RESTRICTED␤   at gen/moar/ModuleLoader.nqp:249  (/home/camelia/rakudo-m-inst-1/share/perl6/lib/Perl6/ModuleLoader.moarvm:previous_setting_name)␤ from gen/moar/ModuleLoader.nqp:254  (/home/camelia/rakudo-m-inst-1/share/perl6/lib/…»

[19:44] <lizmat> ah, a Camelia artefact

[19:45] <lizmat> locally that also says "v6.c"

[19:46] <lizmat> anyways, calling .^ver on a sub feels to me that it should be an errior

[19:46] <lizmat> *error rather  :-)

[21:08] <moon-child> isn't that calling ^ver on the value returned by the sub?

[21:12] <timo> yeah

[21:17] *** linkable6 left
[21:17] *** evalable6 left
[21:17] *** evalable6 joined
[21:19] *** linkable6 joined
[21:36] *** ggoebel joined
[22:06] *** ggoebel left
[22:38] *** ggoebel joined
[23:01] *** ggoebel left
[23:06] <lizmat> aahhh... yes, of course, and that's Nil

[23:06] <lizmat> m: say Nil.^ver

[23:06] <camelia> rakudo-moar ff6951f59: OUTPUT: «6.c␤»

[23:07] <timo> and even if you did get the Sub, you'll get the version of Sub, not the version of a

