[00:57] *** softmoth joined
[01:57] *** kvw_5_ joined
[02:00] *** kvw_5 left
[02:06] *** Kaiepi joined
[02:09] *** frost-lab joined
[02:47] *** softmoth left
[02:49] *** sivoais left
[02:51] *** sivoais joined
[02:56] *** frost-lab left
[03:00] *** frost-lab joined
[03:24] *** Xliff joined
[05:09] *** frost-lab left
[06:31] *** domidumont joined
[06:41] <japhb> Looks like GTK::Simple won't build on current Rakudo.  The error comes down to: "Arg count 2 doesn't equal required operand count 1 for op 'hllize'"

[06:41] <japhb> ISTR recent fixes to opcode arg count handling, so I'm guessing GTK::Simple was depending on a bug?

[06:45] <nine> japhb: there's an open PR for GTK::Simple with the fix

[07:05] *** Kaiepi left
[07:05] *** Kaiepi joined
[07:12] <japhb> nine: Oh cool, I didn't even think to look.  Thank you!

[07:15] *** grimler32 left
[07:49] <MasterDuke> i'm not on the mailing list, but maybe someone who is could email him in case he has github notifications turned off?

[08:58] *** frost-lab joined
[09:40] *** epony left
[10:33] *** morayj joined
[11:32] *** morayj left
[12:56] *** dogbert17 joined
[12:59] *** dogbert11 left
[13:15] *** epony joined
[13:51] *** Geth joined
[13:52] *** Geth left
[14:00] *** Geth joined
[14:00] *** Geth left
[14:07] *** Geth joined
[14:22] *** Geth left
[14:24] *** Geth joined
[14:25] *** Geth left
[14:25] *** Geth joined
[14:27] *** frost-lab left
[14:29] *** Geth left
[14:30] *** Geth joined
[14:33] *** Geth left
[14:35] *** Geth joined
[14:38] *** Geth left
[14:40] *** Geth joined
[14:40] *** Geth left
[14:41] *** grimler32 joined
[14:41] *** Geth joined
[14:41] <Geth> ¦ star: c55788dac7 | (Patrick Spek)++ | etc/fetch_core.txt

[14:41] <Geth> ¦ star: Bump core parts to 2021.4

[14:41] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/c55788dac7

[14:41] <tyil> \o/

[14:42] <grimler32> Evil People Messed with my LIFE! Are there any universe editors here with access to the 4 bit 3 dimensional god code at the multiverse level??

[15:11] *** b2gills left
[15:12] *** b2gills joined
[15:19] <Geth> ¦ rakudo: 2f121d3b44 | (Maxim Kolodyazhny)++ (committed by k-mx) | docs/announce/2021.04.md

[15:19] <Geth> ¦ rakudo: Update 2021.04.md

[15:19] <Geth> ¦ rakudo: 

[15:19] <Geth> ¦ rakudo: Missed backticks and fixed url

[15:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2f121d3b44

[15:19] <Geth> ¦ rakudo: ba31e29093 | Altai-man++ (committed using GitHub Web editor) | docs/announce/2021.04.md

[15:19] <Geth> ¦ rakudo: Merge pull request #4348 from k-mx/patch-1

[15:19] <Geth> ¦ rakudo: 

[15:19] <Geth> ¦ rakudo: Update 2021.04.md

[15:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ba31e29093

[15:24] *** domidumont left
[15:26] <sena_kun> m: my $m = Map.new( 'a', 1, 'b', 2 ); $m{ 'c' } = 'foo';

[15:26] <camelia> rakudo-moar 3638d2240: OUTPUT: «Cannot add key 'c' to an immutable Map␤  in block <unit> at <tmp> line 1␤␤»

[15:26] <sena_kun> m: my %h = a => 42; my $m = Map.new(%h); say $m.WHAT; $m{'a'} = 'bar'; say $m;

[15:26] <camelia> rakudo-moar 3638d2240: OUTPUT: «(Map)␤Map.new((a => bar))␤»

[15:26] <sena_kun> ^ is it just me or this is very wrong?

[15:45] <Geth> ¦ rakudo/rakuast: a57915e3f6 | (Jonathan Worthington)++ | src/Raku/ast/expressions.rakumod

[15:45] <Geth> ¦ rakudo/rakuast: Complain about missing operator properties

[15:45] <Geth> ¦ rakudo/rakuast: 

[15:45] <Geth> ¦ rakudo/rakuast: Rather than a rather less informative method not found error.

[15:45] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/a57915e3f6

[15:45] <Geth> ¦ rakudo/rakuast: ca13201c81 | (Jonathan Worthington)++ | src/Raku/ast/operator-properties.rakumod

[15:45] <Geth> ¦ rakudo/rakuast: Don't let nulls escape from OperatorProperties

[15:45] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/ca13201c81

[15:45] <Geth> ¦ rakudo/rakuast: 9c7078fe49 | (Jonathan Worthington)++ | src/Raku/ast/operator-properties.rakumod

[15:45] <Geth> ¦ rakudo/rakuast: Give !~~ an entry in the operator properties

[15:45] <Geth> ¦ rakudo/rakuast: 

[15:45] <Geth> ¦ rakudo/rakuast: For now, at least. It seems we parse this as a single operator, rather

[15:45] <Geth> ¦ rakudo/rakuast: than as a meta-operator. That may be worth looking into at some point.

[15:45] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/9c7078fe49

[16:05] <Geth> ¦ rakudo/rakuast: 957a16f3b5 | (Jonathan Worthington)++ | tools/templates/common_test_dirs

[16:05] <Geth> ¦ rakudo/rakuast: Run t/12-rakuast as part of `make test`

[16:05] <Geth> ¦ rakudo/rakuast: 

[16:05] <Geth> ¦ rakudo/rakuast: Eventually they'll move to roast, but for now at least make sure they

[16:05] <Geth> ¦ rakudo/rakuast: get run in some test target.

[16:05] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/957a16f3b5

[16:05] <Geth> ¦ rakudo/rakuast: 54fa02e7e3 | (Jonathan Worthington)++ | 2 files

[16:05] <Geth> ¦ rakudo/rakuast: Eliminate RakuAST::Infix::Chaining

[16:05] <Geth> ¦ rakudo/rakuast: 

[16:05] <Geth> ¦ rakudo/rakuast: Thanks to work by lizmat++ on operator properties, we no longer need

[16:05] <Geth> ¦ rakudo/rakuast: this. It was an accident waiting to happen for folks constructing a

[16:05] <Geth> ¦ rakudo/rakuast: synthetic AST, so it's nice to be rid of it.

[16:05] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/54fa02e7e3

[16:42] <Geth> ¦ rakudo/rakuast: dfd2567617 | (Jonathan Worthington)++ | 4 files

[16:42] <Geth> ¦ rakudo/rakuast: Complete the compilation of ~~ and !~~

[16:42] <Geth> ¦ rakudo/rakuast: 

[16:42] <Geth> ¦ rakudo/rakuast: Which should set the LHS as the topic while evaluating the RHS. Also fix

[16:42] <Geth> ¦ rakudo/rakuast: a typo in compilation of m//.

[16:42] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/dfd2567617

[16:49] *** domidumont joined
[17:08] *** vrurg left
[17:26] *** MasterDuke left
[17:39] *** domidumont left
[18:01] *** maggotbrain left
[18:03] *** maggotbrain joined
[18:06] <lizmat> sena_kun: hmmm... that feels meh

[18:07] <lizmat> m: my %m := Map.new( (a => my $ 42) ); dd %m; %m<a> = 666; dd %m

[18:07] <camelia> rakudo-moar ba31e2909: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3my %m := Map.new( (a => my $7⏏5 42) ); dd %m; %m<a> = 666; dd %m␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤    …»

[18:08] <lizmat> m: my %m := Map.new( (a => my $ = 42) ); dd %m; %m<a> = 666; dd %m

[18:08] <camelia> rakudo-moar ba31e2909: OUTPUT: «Map.new((:a(42)))␤Map.new((:a(666)))␤»

[18:08] <lizmat> m: dd Map.new.WHICH

[18:08] <camelia> rakudo-moar ba31e2909: OUTPUT: «ObjAt.new("Map|68177832")␤»

[18:09] <lizmat> sena_kun: I guess it's the consequence of Map allowing for containers as values

[18:17] *** maggotbrain left
[18:19] *** maggotbrain joined
[18:28] *** AlexDaniel` left
[18:31] *** AlexDaniel` joined
[18:46] *** MasterDuke joined
[18:48] *** patrickb joined
[19:13] *** lichtkind joined
[19:22] *** vrurg joined
[19:45] *** MasterDuke left
[19:45] *** MasterDuke joined
[20:15] *** MasterDuke left
[20:22] *** Geth left
[20:43] *** patrickb left
[21:32] *** MasterDuke joined
[21:33] *** Xliff left
[21:41] *** Geth joined
[21:41] *** Geth left
[21:42] *** Geth joined
[21:48] *** linkable6 left
[23:27] *** ionsolo joined
[23:53] *** ionsolo left
