[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:46] *** ggoebel joined
[01:30] *** melezhik joined
[01:36] *** SmokeMachine left
[01:43] *** frost joined
[01:44] *** SmokeMachine joined
[02:18] *** melezhik left
[02:42] *** ggoebel left
[05:53] *** JimmyZ joined
[06:03] *** reportable6 left
[06:03] *** reportable6 joined
[07:19] *** MasterDuke left
[07:19] *** discord-raku-bot left
[07:19] *** leont left
[07:19] *** [Tux] left
[07:19] *** djinni`_ left
[07:30] *** MasterDuke joined
[07:30] *** discord-raku-bot joined
[07:30] *** leont joined
[07:30] *** [Tux] joined
[07:30] *** djinni`_ joined
[08:02] *** JimmyZ left
[08:06] *** JimmyZ joined
[08:52] *** JimmyZ left
[08:53] *** ggoebel joined
[09:22] *** |Tux| joined
[09:23] *** Tux__ joined
[09:25] *** Tux__ left
[10:25] *** linkable6 left
[10:25] *** evalable6 left
[10:58] *** Altai-man joined
[11:28] *** linkable6 joined
[12:03] *** reportable6 left
[12:05] *** reportable6 joined
[12:27] *** evalable6 joined
[12:49] <|Tux|> Oh my

[12:49] <|Tux|> Rakudo v2021.09-252-g431c3d6b7 (v6.d) on MoarVM 2021.09-635-g78fd4944f

[12:49] <|Tux|> csv-test-xs-20      0.377 -  0.408

[12:49] <|Tux|> test-t --race       1.004 -  1.007

[12:49] <|Tux|> csv-ip5xs           1.405 -  1.411

[12:49] <|Tux|> test-t              1.661 -  1.757

[12:49] <|Tux|> csv-parser          4.725 -  4.813

[12:50] <|Tux|> test                7.134 -  7.430

[12:50] <|Tux|> test-t-20 --race    7.994 -  7.996

[12:50] <|Tux|> csv-ip5xs-20       15.097 - 15.723

[12:50] <|Tux|> test-t-20          24.628 - 24.766

[12:57] <lizmat> 1.661   nice!

[13:02] <|Tux|> currently rank 28

[13:02] <|Tux|>  2 2019-04-29 10:24:11 test-t 1.605

[13:02] <|Tux|>  1 2019-04-20 18:37:45 test-t 1.594

[13:02] <|Tux|> sooooo close

[13:12] <tbrowder> hi, i'm trying to use the updated rakuast branch

[13:12] <tbrowder> but there are conflicts when i try to update it

[13:15] <tbrowder> i want to work on the heredoc issue reported by @codesections but don't know where is best to do it or just forget it for now

[13:17] <tbrowder> issue #4539

[13:45] <lizmat> notable6: weekly

[13:45] <notable6> lizmat, 1 note: 2021-10-11T01:31:49Z <melezhik>: recently upvoted Raku modules ( with some reviews )  on my butterflies - https://mybf.io/?filter=top

[13:53] <lizmat> notable6: weekly reset

[13:53] <notable6> lizmat, Moved existing notes to “weekly_2021-10-11T13:53:35Z”

[13:56] *** frost left
[14:04] *** kjp left
[14:20] *** lizmat_ joined
[14:21] *** TempIRCLogger left
[14:21] *** TempIRCLogger joined
[14:24] *** lizmat left
[14:27] *** kjp joined
[14:29] *** lizmat_ is now known as lizmat

[14:29] *** lizmat left
[14:30] *** lizmat joined
[14:49] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/10/11/2021-41-different-patterns/

[14:50] <Altai-man> lizmat++

[15:20] <[Coke]> 'zef install deps-only .' in a dir with no META6.json file gives an IO::Path error, would be nice if it specifically complained about the missing file.

[15:28] <[Coke]> ugexe, want a ticket for ^^

[15:48] <Geth> ¦ rakudo: 191fbba994 | (Jonathan Worthington)++ | src/vm/moar/dispatchers.nqp

[15:48] <Geth> ¦ rakudo: Update comment about candidate linked lists

[15:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/191fbba994

[16:45] *** Geth left
[16:46] <Geth> ¦ rakudo: 1e25f4fc21 | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/Iterator.pm6

[16:46] <Geth> ¦ rakudo: Pass on tester without auth-threading

[16:46] <Geth> ¦ rakudo: 

[16:46] <Geth> ¦ rakudo: As spotted by dogbert and leont

[16:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1e25f4fc21

[17:33] <Geth> ¦ rakudo/new-disp-callwith: 7af8c9fa39 | (Jonathan Worthington)++ | src/vm/moar/dispatchers.nqp

[17:33] <Geth> ¦ rakudo/new-disp-callwith: Get callwith working with complex dispatches

[17:33] <Geth> ¦ rakudo/new-disp-callwith: 

[17:33] <Geth> ¦ rakudo/new-disp-callwith: When we combine different kinds of dispatch and also have callwith, the

[17:33] <Geth> ¦ rakudo/new-disp-callwith: arguments need to apply to all outer dispatches too. For example, if we

[17:33] <Geth> ¦ rakudo/new-disp-callwith: have a wrap of a multi method, and do a `callwith` in the wrapper, then

[17:33] <Geth> ¦ rakudo/new-disp-callwith: the arguments have to apply to the multi and method dispatches too. A

[17:33] <Geth> ¦ rakudo/new-disp-callwith: description of the strategy can be found in the large comment added in

[17:33] <Geth> ¦ rakudo/new-disp-callwith: this commit.

[17:33] <Geth> ¦ rakudo/new-disp-callwith: review: https://github.com/rakudo/rakudo/commit/7af8c9fa39

[17:41] <Geth> ¦ rakudo: Leont++ created pull request #4565: Pass lib in RAKUPATH instead of -I

[17:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4565

[17:43] *** Altai-man left
[17:56] *** squashable6 left
[17:59] *** squashable6 joined
[18:02] *** reportable6 left
[18:13] <Geth> ¦ rakudo: e09df02cd6 | (Leon Timmermans)++ | t/harness6

[18:13] <Geth> ¦ rakudo: Pass lib in RAKULIB instead of -I in harness6

[18:13] <Geth> ¦ rakudo: 

[18:13] <Geth> ¦ rakudo: Otherwise, child processes will not see the libdir, and tests will fail

[18:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e09df02cd6

[18:13] <Geth> ¦ rakudo: 59d12ec87a | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | t/harness6

[18:13] <Geth> ¦ rakudo: Merge pull request #4565 from Leont/harness6-fixes

[18:13] <Geth> ¦ rakudo: 

[18:13] <Geth> ¦ rakudo: Pass lib in RAKULIB instead of -I in harness6

[18:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/59d12ec87a

[18:25] <Geth> ¦ rakudo: tbrowder self-assigned Heredocs get confused about lexical scope when used with some block constructs https://github.com/rakudo/rakudo/issues/4539

[18:31] *** melezhik joined
[19:04] *** reportable6 joined
[19:15] <Geth> ¦ rakudo: ff92bac576 | (Christian Bartolomäus)++ | 3 files

[19:15] <Geth> ¦ rakudo: [JVM] Unbreak build after merge of new-disp

[19:15] <Geth> ¦ rakudo: 

[19:15] <Geth> ¦ rakudo: There where three errors during the build of the JVM backend that

[19:15] <Geth> ¦ rakudo: have been fixed / worked around as follows:

[19:15] <Geth> ¦ rakudo: 

[19:15] <Geth> ¦ rakudo: * The change to src/vm/jvm/Perl6/Ops.nqp prevents an explosion with

[19:15] <Geth> ¦ rakudo:   "getcodeobj can only be used with a CodeRef".

[19:15] <Geth> ¦ rakudo: <…commit message has 15 more lines…>

[19:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ff92bac576

[20:03] *** patrickb joined
[20:35] *** |Tux| left
[21:30] <[Coke]> is it intentional that 'make test' in nqp is non-concurrent?

[21:35] <MasterDuke> not sure what you mean. `TEST_JOBS=12 make m-test` takes 5s for me, but `TEST_JOBS=1 make m-test` takes 12s

[21:40] *** patrickb left
[21:58] <[Coke]> ... in nqp?

[21:59] <[Coke]> (I might not have TEST_JOBS set in this specific shell, oops)

[21:59] <MasterDuke> yeah

[22:01] <[Coke]> ... ah. better question: why are the defaults different between rakudo & nqp, I think

[22:01] <[Coke]> rakudo seems to default to 5

[22:01] <[Coke]> (that's why I thought the var was set)

[22:02] <MasterDuke> which defaults in particular? but yeah, the generated makefiles aren't always the same in places i think they could probably be

[22:02] <MasterDuke> e.g., you can't `make t/test/file` in nqp, and it compiles something every time you do a `make m-test`

[22:03] <[Coke]> the default TEST_JOB equivalent, in particular.

[22:18] <MasterDuke> huh. nqp's generated Makefile has three 'm-all:' targets, each with different dependencies

[22:20] <[Coke]> O_o;

[22:21] <[Coke]> first one wins?

[22:23] *** melezhik left
[22:23] <Geth> ¦ nqp: MasterDuke17++ created pull request #741: Prove needs the nqp command prefixed with `./`

[22:23] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/741

[22:24] <MasterDuke> dunno, i don't know make all that well

[22:43] <[Coke]> hopefully ./ isn't a win issue.

[22:44] <MasterDuke> are you booted into windows, can you test it?

[22:46] <[Coke]> I am. looks like that syntax doesn't work in nmake anyway

[22:46] <[Coke]> nmake 't\hll\01-language.t' - this file is up to date

[22:47] <MasterDuke> does it work in rakudo?

[22:48] <[Coke]> nope, same behavior

[22:48] <[Coke]> so do whatever you need. :)

[22:48] <MasterDuke> ha

[22:51] <MasterDuke> it's only a minor annoyance, but it'll be nice to have it fixed

[22:53] <MasterDuke> but it would be nice to have some more consistency between the three makefiles (though i suspect nqp and rakudo can be much more like each other than either can be to moarvm)

[22:56] <Geth> ¦ nqp: 2fcfc4f795 | (Daniel Green)++ | tools/templates/Makefile.in

[22:56] <Geth> ¦ nqp: Prove needs the nqp command prefixed with `./`

[22:56] <Geth> ¦ nqp: 

[22:56] <Geth> ¦ nqp: Otherwise `make t/<test>/<file>.t` dies with:

[22:56] <Geth> ¦ nqp: Could not execute (nqp --): open3: exec of nqp -- failed: No such file or directory at /usr/share/perl5/core_perl/TAP/Parser/Iterator/Process.pm line 165.

[22:56] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/2fcfc4f795

[22:56] <Geth> ¦ nqp: ebe11b6554 | MasterDuke17++ (committed using GitHub Web editor) | tools/templates/Makefile.in

[22:56] <Geth> ¦ nqp: Merge pull request #741 from MasterDuke17/fix_make_test_file

[22:56] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/ebe11b6554

