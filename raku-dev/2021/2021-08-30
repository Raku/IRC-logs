[00:02] *** reportable6 left
[00:02] *** reportable6 joined
[00:54] *** frost joined
[01:44] *** Xliff left
[02:56] *** zostay left
[02:57] *** zostay joined
[03:18] *** squashable6 left
[04:41] *** kawaii_ left
[04:41] *** rypervenche left
[04:41] *** kawaii_ joined
[04:41] *** rypervenche joined
[04:41] *** rypervenche left
[04:41] *** rypervenche joined
[04:45] *** ilogger2 left
[04:45] *** tonyo_ left
[04:45] *** ilogger2 joined
[04:50] *** tonyo joined
[05:30] *** squashable6 joined
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:16] *** nebuchadnezzar joined
[07:44] *** linkable6 left
[07:44] *** evalable6 left
[07:46] *** linkable6 joined
[08:19] <nine> t/02-rakudo/15-gh_1202.t is a flapper and cannot work as it is written. That's because nothing guarantees that 5 concurrent `echo $_` shell commands will put their output nicely in 5 rows. Output is bound to get mixed like 12\n\n instead of 1\n2\n
[08:45] *** frost left
[08:47] *** evalable6 joined
[09:09] *** patrickb joined
[09:55] *** patrickb left
[10:11] *** frost joined
[10:20] <Altai-man> can anyone go to https://dev.azure.com/rakudo/rakudo/_build/results?buildId=1751&view=artifacts&pathAsName=false&type=publishedArtifacts and download the archive under `build-result`?
[10:23] <raydiak> I click on it and nothing happens. no javascript error, just no response of any sort
[10:28] <raydiak> same in both ff and chromium on linux
[10:39] <lizmat> Altai-man: no response on Safari either
[10:51] *** patrickb joined
[10:56] *** rakuUser joined
[11:04] *** nebuchadnezzar left
[11:04] *** nebuchad` joined
[11:09] *** nebuchad` is now known as nebuchadnezzar
[11:23] *** Geth joined
[11:24] *** sena_kun joined
[11:43] <Geth> ¦ rakudo/new-disp: 10e37b8706 | (Jonathan Worthington)++ | src/vm/moar/dispatchers.nqp
[11:43] <Geth> ¦ rakudo/new-disp: Allow nextsame et al in detached method calls
[11:43] <Geth> ¦ rakudo/new-disp: 
[11:43] <Geth> ¦ rakudo/new-disp: That is, when we look up a method and then separately invoke it. We
[11:43] <Geth> ¦ rakudo/new-disp: supported this historically, so keep it working. This also fixes the
[11:43] <Geth> ¦ rakudo/new-disp: case where we have an NQP-based type with a Raku method installed in it
[11:43] <Geth> ¦ rakudo/new-disp: that then does nextsame, which shows up in various modules that built
[11:43] <Geth> ¦ rakudo/new-disp: upon the MOP, such as Method::Also (which is fixed by this change).
[11:43] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/10e37b8706
[11:47] *** patrickb left
[12:02] *** reportable6 left
[12:28] *** patrickbkr joined
[12:31] <patrickbkr> Altai-man: re the download button: When clicking on the three dots on the far right a menu with a working download option opens for me.
[12:33] <sena_kun> patrickbkr, is it possible for you to do uploading?
[12:36] <patrickbkr> Yes.
[12:36] <patrickbkr> Shall I!
[12:36] <patrickbkr> ?
[12:36] <sena_kun> patrickbkr, if it won't bother you too much...
[12:36] <patrickbkr> ok. Will do in the evening.
[12:36] <sena_kun> thanks
[12:37] <patrickbkr> I'm back from vacation as of today btw. :-D
[12:38] <sena_kun> hope you were able to rest well
[12:41] <patrickbkr> Thanks. I did.
[12:48] *** frost left
[12:49] <Geth> ¦ problem-solving: lizmat assigned to codesections Issue Moving distributions between distribution backends "duplicates" them https://github.com/Raku/problem-solving/issues/295
[12:50] <Geth> ¦ problem-solving: lizmat unassigned from codesections Issue Moving distributions between distribution backends "duplicates" them https://github.com/Raku/problem-solving/issues/295
[13:03] *** reportable6 joined
[13:20] <lizmat> notable6: weekly
[13:20] <notable6> lizmat, 2 notes: 2021-08-27T01:48:08Z <melezhik>: https://news.ycombinator.com/item?id=28321812  ;  2021-08-28T14:26:08Z <elcaro>: https://www.youtube.com/watch?v=UVUjnzpQKUo
[13:29] <lizmat> notable6: weekly reset
[13:29] <notable6> lizmat, Moved existing notes to “weekly_2021-08-30T13:29:47Z”
[13:30] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/08/30/2021-35-superseding/
[13:44] <ugexe> decuplicating distributions is entirely a per-ecosysem thing
[13:46] <ugexe> basically there is a UI problem with raku.land and we are looking to solve it with additional specced meta data, which smells like "when all you have is a hammer"
[13:47] <ugexe> there is a lowest common demoninator that is always ignored with those types of solutions: someones local cache of files or a companys dark-pan, 
[14:14] *** b2gills left
[14:14] *** b2gills joined
[14:43] <Geth> ¦ rakudo/new-disp: 6664c423de | (Jonathan Worthington)++ | lib/NativeCall.rakumod
[14:43] <Geth> ¦ rakudo/new-disp: Compile code object unwrapping for native calls
[14:43] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/6664c423de
[14:53] <Geth> ¦ nqp/new-disp: d5830b4b57 | Altai-man++ (committed using GitHub Web editor) | tools/templates/MOAR_REVISION
[14:53] <Geth> ¦ nqp/new-disp: Bump new-disp MoarVM
[14:53] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/d5830b4b57
[14:54] <Geth> ¦ rakudo/new-disp: 09105c197b | Altai-man++ (committed using GitHub Web editor) | tools/templates/NQP_REVISION
[14:54] <Geth> ¦ rakudo/new-disp: Bump new-disp nqp
[14:54] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/09105c197b
[15:14] *** evalable6 left
[15:14] *** linkable6 left
[15:15] *** linkable6 joined
[15:16] *** evalable6 joined
[15:39] <timo>     Does not reach a complete line within 1 megabyte of data
[15:39] <timo> Then the server may send a may send a JSON line with an object containing err and then close the connection.
[15:39] <timo> ^- jnthn, your Log::Timeline module readme has a little duplicated text in it
[16:26] *** patrickbkr left
[17:25] <Geth> ¦ rakudo/new-disp: 0567c24317 | (Jonathan Worthington)++ | src/vm/moar/dispatchers.nqp
[17:25] <Geth> ¦ rakudo/new-disp: Fix protos that control multiple candidate lists
[17:25] <Geth> ¦ rakudo/new-disp: 
[17:25] <Geth> ¦ rakudo/new-disp: For example, when the proto is cloned because multi candidates are
[17:25] <Geth> ¦ rakudo/new-disp: defined in a nested scope.
[17:25] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/0567c24317
[17:25] <Geth> ¦ rakudo/new-disp: 6d62a2cb40 | (Jonathan Worthington)++ | src/vm/moar/dispatchers.nqp
[17:25] <Geth> ¦ rakudo/new-disp: Make sure to run `proto` for complex signatures
[17:25] <Geth> ¦ rakudo/new-disp: 
[17:25] <Geth> ¦ rakudo/new-disp: For example, where there is an unpack or constraint on a parameter in
[17:25] <Geth> ¦ rakudo/new-disp: the `proto`, we need to run it in order to enforce that.
[17:25] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/6d62a2cb40
[17:57] *** sena_kun left
[18:02] *** reportable6 left
[18:44] <Geth> ¦ nqp/new-disp: 7440bc8717 | (Stefan Seifert)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp
[18:44] <Geth> ¦ nqp/new-disp: Fix miscompilation of sized integers as loop condition
[18:44] <Geth> ¦ nqp/new-disp: 
[18:44] <Geth> ¦ nqp/new-disp: We were allocating a register for a coercion result but never actually
[18:44] <Geth> ¦ nqp/new-disp: generated code for doing the actual coercion. This resulted in us reading
[18:44] <Geth> ¦ nqp/new-disp: an uninitialized register which could have caused infinite loops in the
[18:44] <Geth> ¦ nqp/new-disp: worst case.
[18:44] <Geth> ¦ nqp/new-disp: 
[18:44] <Geth> ¦ nqp/new-disp: Fix by doing exactly the same as for if/unless ops.
[18:44] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/7440bc8717
[19:05] *** reportable6 joined
[19:44] *** patrickb joined
[19:46] <patrickb> Altai-man: The binary files have been uploaded. I have also created and uploaded M1 Mac release build.
[19:51] <Altai-man> patrickb, thanks!
[19:54] *** patrickb left
[19:57] *** discord-raku-bot left
[19:57] *** discord-raku-bot joined
[22:33] *** dogbert11 left
[23:01] *** dogbert11 joined
[23:31] <Geth> ¦ rakudo/new-disp: ed93e37dd4 | (Jonathan Worthington)++ | src/vm/moar/dispatchers.nqp
[23:31] <Geth> ¦ rakudo/new-disp: Don't run every proto during CORE.setting build
[23:31] <Geth> ¦ rakudo/new-disp: 
[23:31] <Geth> ¦ rakudo/new-disp: We can't properly do the analysis as to whether or not we need to run
[23:31] <Geth> ¦ rakudo/new-disp: the proto since we're not yet properly bootstrapped. However, assume
[23:31] <Geth> ¦ rakudo/new-disp: that we don't need to run any of them. This saves rather a lot of time,
[23:31] <Geth> ¦ rakudo/new-disp: because to run the proto involves compiling it. It also at present
[23:31] <Geth> ¦ rakudo/new-disp: triggers the compilation of all multi candidates and would compile them
[23:31] <Geth> ¦ rakudo/new-disp: in duplicate.
[23:31] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/ed93e37dd4
[23:31] <Geth> ¦ rakudo/new-disp: f7b641f36a | (Jonathan Worthington)++ | src/Perl6/World.nqp
[23:31] <Geth> ¦ rakudo/new-disp: Don't compile all candidates with a proto
[23:31] <Geth> ¦ rakudo/new-disp: 
[23:31] <Geth> ¦ rakudo/new-disp: This seems to have been a workaround for a problem that no longer
[23:31] <Geth> ¦ rakudo/new-disp: exists. It was also buggy and re-compiled the same candidates many times
[23:31] <Geth> ¦ rakudo/new-disp: over; since it's apparently not needed any longer, however, it can be
[23:31] <Geth> ¦ rakudo/new-disp: debugged simply by deleting it.
[23:31] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/f7b641f36a
