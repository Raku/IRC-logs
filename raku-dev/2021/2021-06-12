[00:03] *** reportable6 left
[00:03] *** reportable6 joined
[00:26] <Geth> ¦ rakudo: tony-o++ created pull request #4399: Fix for #4394

[00:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4399

[00:27] *** linkable6 left
[00:28] *** linkable6 joined
[02:23] <tonyo> can someone not on m1 macos arch verify that make test passes with that PR ^ ?

[03:13] *** linkable6 left
[03:13] *** evalable6 left
[03:13] <raydiak> tonyo: looks good on x64 linux

[03:15] *** evalable6 joined
[03:16] *** linkable6 joined
[05:00] *** evalable6 left
[05:00] *** linkable6 left
[05:01] *** evalable6 joined
[05:03] *** linkable6 joined
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[07:21] *** japhb left
[08:41] *** reportable6 left
[08:41] *** squashable6 left
[08:41] *** linkable6 left
[08:41] *** greppable6 left
[08:41] *** coverable6 left
[08:41] *** unicodable6 left
[08:41] *** statisfiable6 left
[08:41] *** quotable6 left
[08:41] *** evalable6 left
[08:41] *** bloatable6 left
[08:41] *** shareable6 left
[08:41] *** bisectable6 left
[08:41] *** notable6 left
[08:41] *** releasable6 left
[08:41] *** benchable6 left
[08:41] *** nativecallable6 left
[08:41] *** tellable6 left
[08:41] *** committable6 left
[08:41] *** sourceable6 left
[08:41] *** evalable6 joined
[08:41] *** unicodable6 joined
[08:41] *** releasable6 joined
[08:42] *** linkable6 joined
[08:42] *** nativecallable6 joined
[08:42] *** notable6 joined
[08:42] *** squashable6 joined
[08:42] *** statisfiable6 joined
[08:42] *** sourceable6 joined
[08:42] *** greppable6 joined
[08:43] *** committable6 joined
[08:43] *** coverable6 joined
[08:43] *** tellable6 joined
[08:43] *** quotable6 joined
[08:43] *** benchable6 joined
[08:43] *** reportable6 joined
[08:43] *** bloatable6 joined
[08:43] *** bisectable6 joined
[08:43] *** shareable6 joined
[09:44] *** Kaiepi left
[09:45] <Geth> ¦ rakudo: usev6++ created pull request #4400: [JVM] Remove special case for native arrays on JVM

[09:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4400

[09:48] *** Kaiepi joined
[09:57] *** sena_kun joined
[10:40] <lizmat> m: use Test; is-deeply Mu, Mu

[10:40] <camelia> rakudo-moar 16eaa0693: OUTPUT: «Type check failed in binding to parameter '<anon>'; expected Any but got Mu (Mu)␤  in sub _is_deeply at /home/camelia/rakudo-m-inst-1/share/perl6/core/sources/2D4A7CA10695CD2B374573413D261A660E282E2A (Test) line 694␤  in sub is-deeply at /home/cam…»

[10:40] <lizmat> meh

[11:21] <Geth> ¦ rakudo: 28ff12a8b8 | (Christian Bartolomäus)++ | 5 files

[11:21] <Geth> ¦ rakudo: [JVM] Remove special case for native arrays on JVM

[11:21] <Geth> ¦ rakudo: 

[11:21] <Geth> ¦ rakudo: It's now possible to use native arrays in the setting.

[11:21] <Geth> ¦ rakudo: Fixed with https://github.com/Raku/nqp/pull/720 and

[11:21] <Geth> ¦ rakudo: https://github.com/Raku/nqp/pull/722.

[11:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/28ff12a8b8

[11:42] *** linkable6 left
[11:42] *** evalable6 left
[11:42] *** linkable6 joined
[11:43] *** evalable6 joined
[12:02] *** reportable6 left
[12:05] *** reportable6 joined
[13:09] *** Altai-man joined
[13:16] *** b2gills left
[13:18] *** sena_kun left
[13:31] *** b2gills joined
[14:20] <bartolin> (problem on JVM with large nqp::hash) I dropped to bed yesterday evening, but I've created an issue now: https://github.com/Raku/nqp/issues/727

[14:22] <bartolin> I don't understand the details, but AFAICS splitting the data into smaller hashes wouldn't help.

[14:37] *** evalable6 left
[14:37] *** linkable6 left
[14:40] *** evalable6 joined
[14:40] *** linkable6 joined
[14:49] <bartolin> adding entries from a file to a hash works fine even for large numbers

[14:49] <raydiak> I didn't just mean multiple hashes, but also appending each one in a separate routine, each of which would get called in series to build up the final hash. no idea if it would help or not though, and it'd be an ugly hack

[14:51] <bartolin> I'm not sure, but I'd think something like that could work

[14:53] <raydiak> and you mentioned that larges hashes work in rakudo-j, just not nqp-j? that's...interesting...

[14:56] <bartolin> yes, I was surprised by that, too.

[15:01] <bartolin> I just tried with a hash with 25_000 entries. It wasn't really fast, but it didn't blow up. With 50_000 entries I got a 'Class file too large!', though

[15:05] * bartolin is adding that to https://github.com/Raku/nqp/issues/727

[15:07] <raydiak> hm

[15:07] <bartolin> heh, moarvm is also unhappy with 50_000 entries (Too many arguments (100001) in flattening array, only 65535 allowed.)

[15:08] <bartolin> I mean, rakudo-m

[15:08] <nine> Yeah, you know....enough is enough :D

[15:10] <raydiak> arguments? is it implying that the list is passed as a bunch of arguments to a function somewhere?

[15:15] <raydiak> either way, fwiw, we're only talking about 1449 hash entries, 23396 bytes for the entires themselves as written in the code. no idea how that translates by the time jvm sees it though

[15:16] <raydiak> s/23396/23369/

[15:18] <bartolin> btw, it's really not important, since it's only the jvm backend. Please don't waste your time there ;) I mostly wanted to document what I've seen so far.

[15:20] <raydiak> of course. this is more academic curiosity. I already just added the if jvm/!jvm bits and the old implementation into the PR

[15:23] <bartolin> yeah, saw that. raydiak++ (I don't feel competent to review that change for Moar, though.)

[15:26] <raydiak> no worries, I appreciate the time and advice you've given on it

[16:08] <tonyo> nine: added a comment to that PR, the disassembler helps see the problem a lot more clearly

[16:09] <tonyo> but also now i have .o objects everywhere .. like .DS_Stores 

[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[19:50] <lizmat> m: dd Mu eqv Mu

[19:50] <camelia> rakudo-moar 28ff12a8b: OUTPUT: «Type check failed in binding to parameter '<anon>'; expected Any but got Mu (Mu)␤  in block <unit> at <tmp> line 1␤␤»

[20:48] *** squashable6 left
[20:50] *** squashable6 joined
[21:41] *** hankache joined
[22:02] *** hankache left
