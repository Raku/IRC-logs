[00:02] *** reportable6 left
[00:03] *** reportable6 joined
[00:06] *** dogbert17 joined
[00:07] *** dogbert11 left
[00:16] *** Kaiepi left
[00:17] *** Kaiepi joined
[00:18] *** Kaiepi left
[00:18] *** Kaiepi joined
[01:06] *** vrurg joined
[01:11] *** vrurg left
[01:11] *** vrurg joined
[01:19] *** vrurg left
[01:41] *** kvw_5 joined
[01:44] *** kvw_5_ left
[02:42] *** squashable6 left
[02:44] *** squashable6 joined
[05:23] *** Geth left
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[06:16] *** vrurg joined
[06:20] *** vrurg left
[07:11] *** frost-lab joined
[07:30] *** domidumont joined
[07:50] *** domidumont left
[09:25] *** linkable6 left
[09:25] *** linkable6 joined
[09:37] *** Geth joined
[10:47] *** vrurg joined
[10:52] *** vrurg left
[11:52] <AlexDaniel`> weekly: test

[11:52] <notable6> AlexDaniel`, Noted! (weekly)

[11:52] <AlexDaniel`> weekly: ↑ please ignore

[11:52] <notable6> AlexDaniel`, Noted! (weekly)

[11:52] <AlexDaniel`> .seen AlexDaniel

[11:52] <tellable6> AlexDaniel`, I saw AlexDaniel 2021-05-09T11:52:11Z in #raku-dev: <AlexDaniel`> weekly: ↑ please ignore

[11:52] <AlexDaniel`> 👍

[12:02] *** reportable6 left
[12:02] *** reportable6 joined
[12:36] *** vrurg joined
[12:40] *** vrurg left
[12:59] *** domidumont joined
[13:29] *** domidumont left
[13:37] *** domidumont joined
[14:13] *** frost-lab left
[14:44] <cog> m: '/'.IO === '/'.IO

[14:44] <camelia> rakudo-moar 8b35fa643: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "===" in expression ".IO === '/'.IO" in sink context (line 1)␤»

[14:45] <cog> m: say '/'.IO === '/'.IO

[14:45] <camelia> rakudo-moar 8b35fa643: OUTPUT: «False␤»

[14:46] <cog> I can argue for True or False but I instinctively expected true

[14:47] <cog> I settled for eq instead of ===

[14:47] <cog> ... to compare IO::Path objects

[14:52] <ugexe> comparing IO::Path objects instead of normalized path strings sounds like a bad idea

[14:52] <ugexe> unless it already does that (but i doubt it does)

[14:53] <cog> Good point but probably orthogonal to my concern,

[14:55] <cog> Searching for the normalising method in IO::Path gives me nothing  https://docs.raku.org/type/IO::Path

[14:55] <cog> Probably should move the discussion to #raku btw

[14:55] <nine> https://docs.raku.org/type/IO::Path#method_resolve

[14:57] <ugexe> also https://docs.raku.org/type/IO::Path#method_cleanup

[14:58] <cog> thx

[15:05] <nine> cog: make sure you understand the difference between those two before making comparisons

[16:13] *** Kaiepi left
[16:13] *** Kaiepi joined
[16:52] *** vrurg joined
[16:54] *** vrurg left
[17:13] *** lucasb joined
[17:30] *** Xliff left
[17:30] *** patrickb joined
[17:32] *** vrurg joined
[17:40] <vrurg> .

[17:53] *** domidumont left
[17:55] <bartolin_> lizmat: would you say it's fine to merge https://github.com/rakudo/rakudo/pull/4359 ? (I doubt I'll have time to figure out how to build the JS backend.)

[17:56] <lizmat> as long as the JS backend uses the old code, yes

[17:57] <bartolin_> ok, thanks!

[18:02] *** reportable6 left
[18:03] <Geth> ¦ rakudo: 8d37210ee9 | (Christian Bartolomäus)++ | 10 files

[18:03] <Geth> ¦ rakudo: Remove special cases for hash constants for JVM

[18:03] <Geth> ¦ rakudo: 

[18:03] <Geth> ¦ rakudo: The underlying problem has been fixed for the JVM backend with

[18:03] <Geth> ¦ rakudo: https://github.com/Raku/nqp/commit/00408eea93.

[18:03] <Geth> ¦ rakudo: 

[18:03] <Geth> ¦ rakudo: Unfortunately, the special cases are probably still needed for the

[18:03] <Geth> ¦ rakudo: JS backend. So I switched the logic from 'use hash constants only

[18:03] <Geth> ¦ rakudo: for MoarVM' to 'use hash constants everywhere except for JS'.

[18:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8d37210ee9

[18:03] *** reportable6 joined
[18:24] *** vrurg left
[18:35] *** maggotbrain left
[18:36] *** maggotbrain joined
[18:39] <[Tux]> Rakudo v2021.04-24-g8b35fa643 (v6.d) on MoarVM 2021.04-46-g5ee04f0fa

[18:39] <[Tux]> csv-test-xs-20      0.372 -  0.377

[18:39] <[Tux]> test-t --race       0.893 -  0.928

[18:39] <[Tux]> csv-ip5xs           0.890 -  0.908

[18:39] <[Tux]> test-t              2.147 -  2.160

[18:39] <[Tux]> test                7.809 -  8.168

[18:39] <[Tux]> csv-ip5xs-20        9.121 -  9.181

[18:39] <[Tux]> test-t-20 --race   10.506 - 10.659

[18:39] <[Tux]> csv-parser         27.302 - 28.728

[18:39] <[Tux]> test-t-20          37.267 - 38.225

[18:43] <lizmat> [Tux]: yeah, it's on the radar

[18:51] <Geth> ¦ rakudo: patrickbkr++ created pull request #4360: Fix $*EXECUTABLE

[18:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4360

[18:56] *** Kaiepi left
[18:57] *** Kaiepi joined
[19:10] *** MasterDuke joined
[20:18] *** MasterDuke left
[20:29] *** patrickb left
[22:08] *** dogbert11 joined
[22:11] *** dogbert17 left
[22:16] *** dogbert17 joined
[22:18] *** dogbert11 left
[22:29] *** dogbert11 joined
[22:32] *** dogbert17 left
[23:19] *** b2gills joined
[23:55] *** dogbert17 joined
[23:59] *** dogbert11 left
