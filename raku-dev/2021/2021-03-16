[01:03] *** Kaiepi joined
[01:05] *** samcv_ joined
[01:06] *** [Coke]_ joined
[01:12] *** Kaiepi left
[01:12] *** [Tux] left
[01:12] *** [Coke] left
[01:12] *** samcv left
[01:19] *** [Tux] joined
[01:37] *** [Coke]_ is now known as [Coke]

[01:39] *** Kaiepi joined
[02:18] *** kvw_5_ joined
[02:21] *** kvw_5 left
[02:44] <tbrowder> ugexe: how do you feel about aliases, e.g., 'frac' and 'fractional'? note we already have func aliases.

[02:44] <tbrowder> got to go...bye

[02:46] *** vrurg left
[03:23] *** vrurg joined
[03:37] *** dogbert11 left
[03:37] *** dogbert11 joined
[04:43] *** dogbert17 joined
[04:47] *** dogbert11 left
[07:32] *** domidumont joined
[07:41] *** Kaiepi left
[08:28] <japhb> .ask timotimo Is there any tooling for profiling across multiple processes?  I'm curious if there's a way to get a unified view of two processes talking to each other over a socket.  Basically wondering how I can go about figuring out what's left to improve with Cro's WebSocket-over-TLS support, so I can reduce the lag for twitch games.

[08:28] <tellable6> japhb, I'll pass your message to timotimo

[08:44] *** Kaiepi joined
[08:56] *** sena_kun joined
[09:12] *** frost-lab joined
[10:27] *** Kaiepi left
[11:51] *** Kaiepi joined
[12:19] *** Geth joined
[12:48] *** sena_kun left
[12:52] *** sena_kun joined
[12:57] *** MasterDuke left
[12:57] *** MasterDuke joined
[13:02] <ugexe> tbrowder: i generally don't think there should be any aliases in the core

[13:03] <Geth> ¦ rakudo: bf67b1f71b | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/Iterator.pm6

[13:03] <Geth> ¦ rakudo: Make 42 xx 1000 about 5% faster

[13:03] <Geth> ¦ rakudo: 

[13:03] <Geth> ¦ rakudo: By bypassing prefix:<--> in the main hot loop

[13:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bf67b1f71b

[14:28] <Geth> ¦ rakudo/rakuast: 016080573d | (Elizabeth Mattijsen)++ | 12 files

[14:28] <Geth> ¦ rakudo/rakuast: s/RakuAST::OperatorProperties/OperatorProperties

[14:28] <Geth> ¦ rakudo/rakuast: 

[14:28] <Geth> ¦ rakudo/rakuast: Also make sure it gets properly exported and tested for.

[14:28] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/016080573d

[14:47] *** frost-lab left
[14:56] <Geth> ¦ rakudo/rakuast: a8634ff601 | (Elizabeth Mattijsen)++ | 2 files

[14:56] <Geth> ¦ rakudo/rakuast: Use OperatorProperties to find out if an op is chaining

[14:56] <Geth> ¦ rakudo/rakuast: 

[14:56] <Geth> ¦ rakudo/rakuast: Made easier by adding a "chaining" method to OperatorProperties

[14:56] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/a8634ff601

[15:00] <releasable6> Next release in ≈4 days and ≈3 hours. 3 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:22] <Geth> ¦ rakudo/rakuast: 315e638206 | (Elizabeth Mattijsen)++ | 2 files

[15:22] <Geth> ¦ rakudo/rakuast: Use OperatorProperties to find out if an op is short-circuiting

[15:22] <Geth> ¦ rakudo/rakuast: 

[15:22] <Geth> ¦ rakudo/rakuast: Made easier by adding a "short-circuit" method to OperatorProperties,

[15:22] <Geth> ¦ rakudo/rakuast: and adding an $!properties trait to Infix operators, to reduce number

[15:22] <Geth> ¦ rakudo/rakuast: of lookups and for convenience.

[15:22] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/315e638206

[15:24] <tbrowder> hi, all

[15:28] <lizmat> tbrowder o/

[15:28] <tbrowder> while working with my new Math::FractionalPart to add complex number operations, i notice that its new method can't take string numbers without explicit coercion ($x.Real).

[15:28] <tbrowder> hi

[15:29] <tbrowder> just released new vers of module

[15:33] <tbrowder> i haven't defined my frac funcs as explicitly requiring Reals, but should I?

[15:36] <tbrowder> i guess they should if they are ever to be accepted into core

[16:10] *** evalable6 left
[16:12] *** evalable6 joined
[16:13] *** b2gills left
[16:13] *** b2gills joined
[18:29] *** domidumont left
[18:56] *** lizmat_ joined
[18:57] <Geth> ¦ rakudo/rakuast: 684ad3a8c1 | (Elizabeth Mattijsen)++ | src/Raku/ast/operator-properties.rakumod

[18:57] <Geth> ¦ rakudo/rakuast: Fix thinko

[18:57] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/684ad3a8c1

[19:00] *** lizmat left
[19:02] <Geth> ¦ rakudo/rakuast: 6193f7091b | (Elizabeth Mattijsen)++ | src/core.c/OperatorProperties.pm6

[19:02] <Geth> ¦ rakudo/rakuast: Fix problem with OperatorProperties.WHICH

[19:02] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/6193f7091b

[19:04] <Geth> ¦ rakudo/rakuast: fe56a3d831 | (Elizabeth Mattijsen)++ | 2 files

[19:04] <Geth> ¦ rakudo/rakuast: Make sure operators get their correct reducer function

[19:04] <Geth> ¦ rakudo/rakuast: 

[19:04] <Geth> ¦ rakudo/rakuast: Also: added RakuAST::Infix.reducer-name for easy accessibility

[19:04] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/fe56a3d831

[21:28] *** lizmat_ is now known as lizmat

[21:28] <Geth> ¦ rakudo/rakuast: ff0ff11fc8 | (Elizabeth Mattijsen)++ | src/Raku/ast/operator-properties.rakumod

[21:28] <Geth> ¦ rakudo/rakuast: Make OperatorProperties lookup for builtins as constant as possible

[21:28] <Geth> ¦ rakudo/rakuast: 

[21:28] <Geth> ¦ rakudo/rakuast: Sadly, it's currently impossible to call classes defined in the RakuAST

[21:28] <Geth> ¦ rakudo/rakuast: bootstrap during compile time, on cannot create constants with a

[21:28] <Geth> ¦ rakudo/rakuast: instantiated OperatorProperties object.  This commit cheats in that it

[21:28] <Geth> ¦ rakudo/rakuast: *does* create a constant hash, which is then lazily filled at runtime

[21:28] <Geth> ¦ rakudo/rakuast: by OperatorProperties instances when needed.

[21:28] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/ff0ff11fc8

[21:55] <Geth> ¦ rakudo/rakuast: 9a77ef5780 | (Elizabeth Mattijsen)++ | 2 files

[21:55] <Geth> ¦ rakudo/rakuast: Introduce OperatorProperties.qast-for-infix

[21:55] <Geth> ¦ rakudo/rakuast: 

[21:55] <Geth> ¦ rakudo/rakuast: Return the name of the QAST op for an infix op, if there is one.

[21:55] <Geth> ¦ rakudo/rakuast: Basically move this logic from expressions to operatorproperties.

[21:55] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/9a77ef5780

[22:14] <Geth> ¦ rakudo/rakuast: ed69f3f707 | (Elizabeth Mattijsen)++ | src/Raku/ast/expressions.rakumod

[22:14] <Geth> ¦ rakudo/rakuast: Add convenience methods to RakuAST::Infix

[22:14] <Geth> ¦ rakudo/rakuast: 

[22:14] <Geth> ¦ rakudo/rakuast: precedence, associative, thunky, iffy

[22:14] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/ed69f3f707

[23:32] *** dogbert17 left
[23:33] *** dogbert17 joined
[23:48] *** dogbert17 left
[23:49] *** dogbert17 joined
[23:51] *** dogbert11 joined
[23:54] *** dogbert17 left
