[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:35] *** evalable6 joined
[01:20] <Geth> Â¦ nqp/master: 4 commits pushed by (Juan JuliÃ¡n Merelo GuervÃ³s)++, (Will Coleda)++

[01:20] <Geth> Â¦ nqp/master: 21c199266b | Minor corrections

[01:20] <Geth> Â¦ nqp/master: 5a9c7da56c | Added as requested

[01:20] <Geth> Â¦ nqp/master: 5594557121 | Correction as per @coke comment

[01:20] <Geth> Â¦ nqp/master: 7192f06bda | Merge pull request #692 from Raku/JJ-patch-2

[01:20] <Geth> Â¦ nqp/master: review: https://github.com/Raku/nqp/compare/1ecd755b8418...7192f06bda17

[01:36] *** linkable6 joined
[01:56] *** Xliff joined
[04:38] *** evalable6 left
[04:38] *** linkable6 left
[04:40] *** evalable6 joined
[05:40] *** evalable6 left
[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[06:41] *** Altai-man left
[06:41] *** linkable6 joined
[06:42] *** sena_kun joined
[06:43] *** evalable6 joined
[07:13] *** moon-child left
[07:13] *** moon-child joined
[07:23] *** MasterDuke left
[07:28] *** MasterDuke joined
[08:08] *** MasterDuke left
[08:12] *** TempIRCLogger__ left
[08:12] *** [Tux] left
[08:12] *** djinni`_ left
[08:21] *** MasterDuke joined
[08:24] *** TempIRCLogger__ joined
[08:24] *** [Tux] joined
[08:24] *** djinni`_ joined
[09:48] *** linkable6 left
[09:48] *** evalable6 left
[10:31] <Geth> Â¦ rakudo: cddcdb7136 | (Jonathan Worthington)++ | 3 files

[10:31] <Geth> Â¦ rakudo: Fix passing a Code type object to native call

[10:31] <Geth> Â¦ rakudo: 

[10:31] <Geth> Â¦ rakudo: This should result in a NULL being passed, however this untested

[10:31] <Geth> Â¦ rakudo: functionality was broken while updating NativeCall as part of the new

[10:31] <Geth> Â¦ rakudo: dispatcher changes. Fix it by adding a missing concreteness check.

[10:31] <Geth> Â¦ rakudo: The test case is thanks to jonathanstowe++. Resolves #4548.

[10:31] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cddcdb7136

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: cb1cddd4b2 | (Stefan Seifert)++ | src/vm/moar/dispatchers.nqp

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: Add a hook for custom dispatchers on callables

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: 

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: This lets callable objects have a say in which dispatcher is used when

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: they are invoked.

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: review: https://github.com/rakudo/rakudo/commit/cb1cddd4b2

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: 4dec8d5494 | (Stefan Seifert)++ | src/core.c/Compiler.pm6

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: API for asking whether the compiler supports a certain nqp op

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: 

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: This can be used to conditionally compile backend specific code in

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: modules like NativeCall

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: review: https://github.com/rakudo/rakudo/commit/4dec8d5494

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: 4e0463ef37 | (Stefan Seifert)++ | lib/NativeCall.rakumod

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: Fix NativeCall performance regression on new-disp

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: 

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: The trick of replacing the native routine's $!do attribute has never

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: worked perfectly as closure cloning could lead to the generic code

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: getting executed. For unknown reason that got a lot worse on new-disp.

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: 

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: Get around that by replacing the fragile $!do replacement with a

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: <â€¦commit message has 7 more linesâ€¦>

[10:44] <Geth> Â¦ rakudo/new-disp-nativecall: review: https://github.com/rakudo/rakudo/commit/4e0463ef37

[11:30] <Geth> Â¦ rakudo/new-disp-nativecall: 4f78ad7362 | (Stefan Seifert)++ | lib/NativeCall.rakumod

[11:30] <Geth> Â¦ rakudo/new-disp-nativecall: Fix NativeCall performance regression on new-disp

[11:30] <Geth> Â¦ rakudo/new-disp-nativecall: 

[11:30] <Geth> Â¦ rakudo/new-disp-nativecall: The trick of replacing the native routine's $!do attribute has never

[11:30] <Geth> Â¦ rakudo/new-disp-nativecall: worked perfectly as closure cloning could lead to the generic code

[11:30] <Geth> Â¦ rakudo/new-disp-nativecall: getting executed. For unknown reason that got a lot worse on new-disp.

[11:30] <Geth> Â¦ rakudo/new-disp-nativecall: 

[11:30] <Geth> Â¦ rakudo/new-disp-nativecall: Get around that by replacing the fragile $!do replacement with a

[11:30] <Geth> Â¦ rakudo/new-disp-nativecall: <â€¦commit message has 7 more linesâ€¦>

[11:30] <Geth> Â¦ rakudo/new-disp-nativecall: review: https://github.com/rakudo/rakudo/commit/4f78ad7362

[11:41] <Geth> Â¦ rakudo/new-disp-nativecall: cf07689042 | (Stefan Seifert)++ | lib/NativeCall.rakumod

[11:41] <Geth> Â¦ rakudo/new-disp-nativecall: Fix NativeCall performance regression on new-disp

[11:41] <Geth> Â¦ rakudo/new-disp-nativecall: 

[11:41] <Geth> Â¦ rakudo/new-disp-nativecall: The trick of replacing the native routine's $!do attribute has never

[11:41] <Geth> Â¦ rakudo/new-disp-nativecall: worked perfectly as closure cloning could lead to the generic code

[11:41] <Geth> Â¦ rakudo/new-disp-nativecall: getting executed. For unknown reason that got a lot worse on new-disp.

[11:41] <Geth> Â¦ rakudo/new-disp-nativecall: 

[11:41] <Geth> Â¦ rakudo/new-disp-nativecall: Get around that by replacing the fragile $!do replacement with a

[11:41] <Geth> Â¦ rakudo/new-disp-nativecall: <â€¦commit message has 7 more linesâ€¦>

[11:41] <Geth> Â¦ rakudo/new-disp-nativecall: review: https://github.com/rakudo/rakudo/commit/cf07689042

[11:59] <Xliff> Anyone thought about support for "..." in NativeCall?

[12:00] <Xliff> Would basically take the ... and have to compile the various arities seen in code and cache those definitions.

[12:01] <Xliff> take: "sub varargs (int, int, int ...) is native (mylib) { * }"

[12:01] <nine> Xliff: I'm currntly working on turning the NativeCall internals into proper dispatch programs. Vararg support may be easier then

[12:02] <Xliff> nine: OK. Then I will hold off until then.

[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:49] *** Xliff left
[12:49] *** Xliff joined
[12:50] *** evalable6 joined
[12:51] *** linkable6 joined
[13:11] *** patrickb joined
[13:54] *** sena_kun left
[13:55] *** sena_kun joined
[14:03] *** Altai-man joined
[14:04] *** sena_kun left
[14:15] *** Altai-man_ joined
[14:17] *** Altai-man_ left
[15:01] <Geth> Â¦ rakudo/master: 6 commits pushed by (Vadim Belman)++

[15:01] <Geth> Â¦ rakudo/master: e9a0b18c6c | Don't make signature part of a callable named parameter

[15:01] <Geth> Â¦ rakudo/master: 9c2cc9c2dd | Re-implement signature constraint support for parameters

[15:01] <Geth> Â¦ rakudo/master: ffb587f202 | Sort multi-candidates with signature constraint in mind

[15:01] <Geth> Â¦ rakudo/master: 51968148ae | Rollback the idea of extra role for signature constraint

[15:01] <Geth> Â¦ rakudo/master: d47185eb3e | Add signature constraint to parameter name in .raku

[15:01] <Geth> Â¦ rakudo/master: ec65ffc8d1 | Merge pull request #4538 from vrurg/rakudo_4537

[15:01] <Geth> Â¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/cddcdb7136ae...ec65ffc8d164

[15:02] <Geth> Â¦ roast/master: 4 commits pushed by (Vadim Belman)++

[15:02] <Geth> Â¦ roast/master: 60db0baa09 | Unfudge a passing test

[15:02] <Geth> Â¦ roast/master: 0e0eee4c7a | Add negative tests

[15:02] <Geth> Â¦ roast/master: 2637a6f16b | Add tests for fixed signature constraints

[15:02] <Geth> Â¦ roast/master: d30a02585e | Merge pull request #757 from vrurg/rakudo_4537

[15:02] <Geth> Â¦ roast/master: review: https://github.com/Raku/roast/compare/fa5827ac28ae...d30a02585e77

[15:46] *** patrickb left
[16:19] <Geth> Â¦ rakudo/rakuast: 448 commits pushed by (Jonathan Worthington)++, (Moritz Lenz)++, (Elizabeth Mattijsen)++, (Timo Paulssen)++, (Brad Gilbert)++

[16:19] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/compare/a67b41d6b573...50d9ab334091

[17:38] *** linkable6 left
[17:38] *** evalable6 left
[18:03] *** reportable6 left
[18:05] *** reportable6 joined
[18:10] *** [Coke] left
[18:13] *** [Coke] joined
[18:39] *** linkable6 joined
[18:41] *** evalable6 joined
[18:48] <lizmat> SPA: the Rakudo Weekly News is like the Deutsche Bahn: delayed (until tomorrow)

[18:49] <lizmat> (aka Service Public Announcement :-)

[19:19] *** moon-child left
[19:19] *** moon-child joined
[19:26] *** childlikempress joined
[19:26] *** moon-child left
[19:43] *** childlikempress left
[19:47] *** moon-child joined
[20:02] *** moon-child left
[20:03] *** moon-child joined
[20:29] *** moon-child left
[20:29] *** childlikempress joined
[21:16] *** childlikempress is now known as moon-child

[21:30] *** MasterDuke left
[22:02] *** MasterDuke joined
[23:02] *** tellable6 left
[23:02] *** bisectable6 left
[23:02] *** releasable6 left
[23:02] *** notable6 left
[23:02] *** unicodable6 left
[23:02] *** sourceable6 left
[23:02] *** nativecallable6 left
[23:02] *** shareable6 left
[23:02] *** committable6 left
[23:02] *** bloatable6 left
[23:02] *** squashable6 left
[23:02] *** reportable6 left
[23:02] *** statisfiable6 left
[23:02] *** greppable6 left
[23:02] *** linkable6 left
[23:02] *** quotable6 left
[23:02] *** benchable6 left
[23:02] *** coverable6 left
[23:02] *** evalable6 left
[23:03] *** benchable6 joined
[23:04] *** sourceable6 joined
[23:04] *** bisectable6 joined
[23:05] *** releasable6 joined
[23:05] *** notable6 joined
[23:05] *** bloatable6 joined
[23:06] *** evalable6 joined
