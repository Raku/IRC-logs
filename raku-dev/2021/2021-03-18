[00:28] *** b2gills joined
[01:39] *** Geth left
[02:05] *** moon-child joined
[02:14] *** kvw_5_ joined
[02:18] *** kvw_5 left
[04:59] <moon-child> m: class Foo { has Int:D ($.x = 1); }; print Foo.new.x;

[04:59] <camelia> rakudo-moar 726a75e24: OUTPUT: «Use of uninitialized value of type Int in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤»

[04:59] <moon-child> anybody have any ideas about ^^?  Is it a bug?  Without parens it works as expected (prints 1)

[05:09] *** samcv left
[05:10] *** samcv joined
[06:05] *** lucs left
[06:05] *** lucs joined
[06:08] *** frost-lab joined
[06:10] *** samcv left
[06:11] *** samcv joined
[06:34] *** nwc10 joined
[07:00] <releasable6> Next release in ≈2 days and ≈11 hours. 3 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[07:52] *** domidumont joined
[07:56] *** domidumont left
[08:10] *** domidumont joined
[08:18] *** patrickz joined
[08:34] *** Kaiepi left
[08:48] *** squashable6 left
[08:51] *** squashable6 joined
[09:01] *** sena_kun left
[09:01] *** sena_kun joined
[09:14] *** patrickz left
[09:15] *** patrickb joined
[09:45] *** frost-lab left
[09:56] *** Kaiepi joined
[10:05] *** MasterDuke left
[10:18] *** nebuchadnezzar left
[10:18] *** nebuchadnezzar joined
[10:30] *** frost-lab joined
[11:03] *** patrickb left
[11:47] *** dogbert11 left
[12:03] *** frost-lab left
[12:05] <[Tux]> Rakudo v2021.02.1-64-gbf67b1f71 (v6.d) on MoarVM 2021.02-17-g9f0579d2a

[12:05] <[Tux]> csv-test-xs-20      0.378 -  0.386

[12:05] <[Tux]> csv-ip5xs           0.803 -  0.815

[12:05] <[Tux]> test-t --race       0.932 -  0.955

[12:05] <[Tux]> test-t              1.947 -  1.973

[12:05] <[Tux]> test                7.597 -  8.988

[12:05] <[Tux]> csv-ip5xs-20        8.106 -  8.337

[12:05] <[Tux]> test-t-20 --race    9.431 - 10.067

[12:05] <[Tux]> csv-parser         26.674 - 28.014

[12:05] <[Tux]> test-t-20          32.692 - 33.558

[12:06] *** dogbert11 joined
[12:33] *** Kaiepi left
[12:43] *** Kaiepi joined
[14:02] <sena_kun> vrurg, hi. Can you please do us a blin run?

[14:03] <sena_kun> I believe the issues you had with the branch are now solved, so it's preferable to get the results with the branch.

[14:04] <vrurg> sena_kun: no problem. Let me see if the branch works.

[14:04] <sena_kun> vrurg++

[14:09] <vrurg> sena_kun: was it fixed in the code? Because `git pull` on the branch came out with nothing.

[14:10] <sena_kun> vrurg, no, it's the resource it tries to get and has tripped over, I believe. I may mis-remember it, though.

[14:11] <vrurg> sena_kun: ok, I started the branch, will see what it comes out with. Hope it goes well this time.

[14:13] <vrurg> sena_kun: Actually, I need to get a few minutes to reconfigure a couple of things at give you access to the VM. So, you will have a backup whenever you need it.

[14:13] <vrurg> Right, it was the resource. The branch is running tests.

[14:14] <sena_kun> Yay

[14:16] <vrurg> sena_kun: I have a little wish for blin though. It'd be nice if it cleans up after itself. For the first time it was pretty confusing to find out it overflown the filesystem on the second run.

[14:17] <sena_kun> vrurg, so `rm -rf installed` in short?

[14:19] <vrurg> sena_kun: If memory serves me right, data too, perhaps. But not sure. Will see when it finishes today.

[14:19] <sena_kun> Yes, that's another one, but installed takes the most place.

[14:24] <vrurg> sena_kun: and another thing. When a run is aborted the next time it loops on "locked" temp dir. Though considering we don't have flock I'm not sure anything could really be done with this.

[14:25] <sena_kun> vrurg, just removing /tmp/whateverbale works for this issue, yes

[14:25] *** sena_kun left
[14:26] *** sena_kun joined
[14:44] *** MasterDuke joined
[15:13] <nine> vrurg: what do you mean by "we don't have flock"?

[15:17] <vrurg> nine: that's what the docs say. Otherwise I didn't have time to dig deeper.

[15:42] *** Kaiepi left
[16:10] *** lichtkind joined
[17:17] *** patrickb joined
[17:58] *** patrickb left
[18:16] *** domidumont left
[18:22] <vrurg> sena_kun: remind me, please: you only need failures.md, right?

[18:22] <sena_kun> vrurg, unless there are any curious ones - yes.

[18:23] <vrurg> ok, one sec.

[18:24] <vrurg> sena_kun: https://gist.github.com/vrurg/ef54cb5f45f8e67c68222ebe1ba3f8c5

[18:24] <sena_kun> vrurg, thanks, I'll check it out later.

[18:59] *** MasterDuke left
[19:31] *** Kaiepi joined
[20:05] *** squashable6 left
[20:08] *** squashable6 joined
[21:27] *** japhb left
[21:28] *** japhb joined
[21:29] *** samebchase-5 joined
[21:29] *** samebchase- left
[21:40] *** dogbert17 joined
[21:44] *** dogbert11 left
[21:47] *** sena_kun left
[21:48] *** sena_kun joined
[21:48] *** MasterDuke joined
[21:51] *** lichtkind left
[21:52] *** lichtkind joined
[21:58] *** sxmx left
[21:59] *** sxmx joined
[22:00] *** commavir left
[22:00] *** commavir joined
[22:37] *** dogbert11 joined
[22:38] *** vrurg left
[22:40] *** dogbert17 left
[22:46] *** vrurg joined
[22:53] *** dogbert17 joined
[22:57] *** dogbert11 left
[22:59] *** Xliff joined
[23:01] <Xliff> \o

[23:01] <Xliff> Why can I not modify this text?

[23:01] <Xliff> https://repl.it/@Xliff/CreepySubtleResources#main.raku

[23:02] <Xliff> That error makes no sense, considering the .subst in the previous line...

[23:08] <lizmat> Xliff: fwiw, I can't see the code

[23:08] <lizmat> I guess you'd have to me logged in or so?

[23:09] <lizmat> hope someone will be able to help you, as /me is going to sleep&

[23:09] <Xliff> Fine.

[23:09] <Xliff> Par for the course.

[23:09] <Xliff> That link should be publicly viewable.

[23:10] <ugexe> m: my $str = "abc"; say $str[0] = 1

[23:10] <camelia> rakudo-moar 726a75e24: OUTPUT: «Cannot modify an immutable Str (abc)␤  in block <unit> at <tmp> line 1␤␤»

[23:10] <Xliff> my @a = <a b c>; @a[0] = 1; @a.gist.say;

[23:10] <evalable6> Xliff, rakudo-moar bf67b1f71: OUTPUT: «[1 b c]␤»

[23:11] <Xliff> ugexe: Still not seeing it.

[23:11] <ugexe> that isnt what your code does

[23:12] <ugexe> if that is what you want to do, them make $c an array @c

[23:16] <Xliff> Huh. That's odd. I thought $c[] and @c[] handled elements the same way...

[23:17] <Xliff> ujgexe++ # Thanks for the fix

[23:32] *** lichtkind left
