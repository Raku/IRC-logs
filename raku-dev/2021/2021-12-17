[00:07] *** reportable6 left
[01:25] *** sourceable6 left
[01:25] *** quotable6 left
[01:25] *** greppable6 left
[01:25] *** committable6 left
[01:25] *** linkable6 left
[01:25] *** shareable6 left
[01:25] *** bisectable6 left
[01:25] *** tellable6 left
[01:25] *** squashable6 left
[01:25] *** benchable6 left
[01:25] *** bloatable6 left
[01:25] *** nativecallable6 left
[01:25] *** statisfiable6 left
[01:25] *** coverable6 left
[01:25] *** notable6 left
[01:25] *** evalable6 left
[01:25] *** unicodable6 left
[01:25] *** releasable6 left
[01:25] *** unicodable6 joined
[01:26] *** bisectable6 joined
[01:26] *** bloatable6 joined
[01:26] *** coverable6 joined
[01:26] *** nativecallable6 joined
[01:26] *** shareable6 joined
[01:27] *** benchable6 joined
[01:27] *** tellable6 joined
[01:27] *** squashable6 joined
[01:27] *** releasable6 joined
[01:27] *** linkable6 joined
[01:27] *** notable6 joined
[02:08] *** reportable6 joined
[02:26] *** greppable6 joined
[02:26] *** committable6 joined
[02:26] *** sourceable6 joined
[03:27] *** quotable6 joined
[03:28] *** statisfiable6 joined
[03:46] *** frost joined
[04:26] *** evalable6 joined
[05:26] *** greppable6 left
[05:26] *** sourceable6 left
[05:26] *** statisfiable6 left
[05:26] *** coverable6 left
[05:26] *** releasable6 left
[05:26] *** shareable6 left
[05:26] *** unicodable6 left
[05:26] *** notable6 left
[05:26] *** linkable6 left
[05:26] *** committable6 left
[05:26] *** quotable6 left
[05:26] *** bisectable6 left
[05:26] *** reportable6 left
[05:26] *** benchable6 left
[05:26] *** evalable6 left
[05:26] *** tellable6 left
[05:26] *** nativecallable6 left
[05:26] *** bloatable6 left
[05:26] *** squashable6 left
[05:27] *** quotable6 joined
[05:27] *** releasable6 joined
[05:28] *** sourceable6 joined
[05:28] *** committable6 joined
[06:09] *** reportable6 joined
[06:26] *** linkable6 joined
[06:27] *** greppable6 joined
[06:27] *** benchable6 joined
[06:27] *** statisfiable6 joined
[06:28] *** tellable6 joined
[06:29] *** nativecallable6 joined
[06:29] *** shareable6 joined
[06:29] *** bisectable6 joined
[07:27] *** unicodable6 joined
[07:28] *** evalable6 joined
[07:28] *** bloatable6 joined
[07:28] *** notable6 joined
[07:29] *** coverable6 joined
[08:27] *** squashable6 joined
[09:56] *** benchable6 left
[09:56] *** quotable6 left
[09:56] *** sourceable6 left
[09:56] *** coverable6 left
[09:56] *** linkable6 left
[09:56] *** statisfiable6 left
[09:56] *** reportable6 left
[09:56] *** bisectable6 left
[09:56] *** squashable6 left
[09:56] *** bloatable6 left
[09:56] *** unicodable6 left
[09:56] *** nativecallable6 left
[09:56] *** evalable6 left
[09:56] *** committable6 left
[09:56] *** releasable6 left
[09:56] *** notable6 left
[09:56] *** tellable6 left
[09:56] *** greppable6 left
[09:56] *** shareable6 left
[09:56] *** nativecallable6 joined
[09:56] *** unicodable6 joined
[09:56] *** statisfiable6 joined
[09:57] *** releasable6 joined
[09:57] *** squashable6 joined
[09:57] *** tellable6 joined
[09:57] *** bisectable6 joined
[09:58] *** sourceable6 joined
[09:58] *** committable6 joined
[09:59] *** shareable6 joined
[10:57] *** evalable6 joined
[10:57] *** reportable6 joined
[10:58] *** coverable6 joined
[11:46] *** Altai-man joined
[11:57] *** linkable6 joined
[11:57] *** greppable6 joined
[11:58] *** benchable6 joined
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:56] *** quotable6 joined
[12:57] *** notable6 joined
[12:57] *** bloatable6 joined
[13:33] *** TempIRCLogger left
[13:37] *** TempIRCLogger joined
[13:41] *** TempIRCLogger left
[13:41] *** TempIRCLogger joined
[13:45] *** TempIRCLogger left
[13:46] *** TempIRCLogger joined
[13:57] *** frost left
[14:10] <lizmat> PSA: jdv informed me yesterday that the release may be delayed a bit due to unforeseen personal circumstances

[15:36] *** patrickb joined
[15:46] *** squashable6 left
[16:09] *** vrurg_ joined
[16:12] *** vrurg left
[16:44] <Xliff> m: BEGIN { PROCESS::<$ZYSYGGY> = Supplier.new; PROCESS::<$READABLE> = 1  }  for ^5 { $*ZYSYGGY.emit: " Hey... the more readable var name is still { $*READABLE }"; sleep .2 }

[16:44] <camelia> rakudo-moar ca4f003bc: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> new; PROCESS::<$READABLE> = 1  }  for ^5⏏ { $*ZYSYGGY.emit: " Hey... the more re…»

[16:45] <Xliff> m: BEGIN { PROCESS::<$ZYSYGGY> = Supplier.new; PROCESS::<$READABLE> = 1  }; for ^5 { $*ZYSYGGY.emit: " Hey... the more readable var name is still { $*READABLE }"; sleep .2 }

[16:45] <camelia> rakudo-moar ca4f003bc: ( no output )

[16:45] <Xliff> m: BEGIN { PROCESS::<$ZYSYGGY> = Supplier.new; PROCESS::<$READABLE> = 1  }; for ^5 { $*ZYSYGGY.emit: say " Hey... the more readable var name is still { $*READABLE }"; sleep .2 }

[16:45] <camelia> rakudo-moar ca4f003bc: OUTPUT: « Hey... the more readable var name is still 1␤ Hey... the more readable var name is still 1␤ Hey... the more readable var name is still 1␤ Hey... the more readable var name is still 1␤ Hey... the more readable var name is still 1␤»

[16:45] <Xliff> Oooooooo

[16:46] <Xliff> m: BEGIN { my $var-name = 'myDogHasFleas'; PROCESS::{ $var-name } = 42 }; say $*myDogHasFleas;

[16:46] <camelia> rakudo-moar ca4f003bc: OUTPUT: «Dynamic variable $*myDogHasFleas not found␤  in block <unit> at <tmp> line 1␤␤»

[16:46] <Xliff> m: BEGIN { my $var-name = 'myDogHasFleas'; PROCESS::{ '$' ~ $var-name } = 42 }; say $*myDogHasFleas;

[16:46] <camelia> rakudo-moar ca4f003bc: OUTPUT: «42␤»

[16:47] <Xliff> vrurg++

[17:50] *** haguza joined
[17:50] *** haguza left
[18:07] *** reportable6 left
[18:22] *** Altai-man left
[18:48] *** squashable6 joined
[20:10] *** reportable6 joined
[20:48] <MasterDuke> i was just trying to enable the `-o` version of the `--output=<file>` option with this patch https://gist.github.com/MasterDuke17/2dfaeafd33d39116f645d82a321a9fda

[20:50] <MasterDuke> but while `raku --target=moar --output=t.mbc -e 'say "hi"'` successfully writes the bytecode to 't.mbc', `raku --target=mbc -o t.mbc -e 'say "hi"'` dies with `===SORRY!===

[20:50] <MasterDuke> Cannot stringify object of type BOOTCompUnit`

[20:50] <MasterDuke> oops, copied the wrong command, both were run with `--target=mbc`

[21:26] *** linkable6 left
[21:26] *** evalable6 left
[21:27] *** linkable6 joined
[21:28] *** evalable6 joined
[22:37] *** patrickb left
[23:15] *** squashable6 left
[23:20] <MasterDuke> and that error is only because it's trying to stringify an exception, but what it gets isn't actually an exception

[23:27] <MasterDuke> timo, nine: this seems like something you'd be good at figure out. i'm not firing on all cylinders right now, but even so i just don't understand how my change is causing this

[23:28] <timo> +                    my $output := %adverbs<output>//%adverbs<o>;

[23:28] <timo> does this actually work right in nqp?

[23:28] <timo> not sure why it wouldn't but, you know

[23:29] <timo> does is_textual_stage know about -o? not sure if it has to, but you know

[23:29] <MasterDuke> well, i just tried changing it to || a minute ago, but no change

[23:29] <MasterDuke> `method is_textual_stage($stage) { 0 }`

[23:31] <timo> i think somewhere it's trying to output to the screen what it can't, so some code somewhere doesn't understand -o

[23:32] <MasterDuke> nqp: my %h := nqp::hash("a", 1, "b", 2); say(%h<c> // "three") # and looks like this works

[23:32] <camelia> nqp-moarvm: OUTPUT: «three␤»

[23:32] <MasterDuke> but why does it work for --output?

[23:34] <MasterDuke> oh, i wonder if it's the argument parsing

[23:35] <timo> i think you missed one in src/vm/moar/HLL/Backend.nqp

[23:35] <timo> line 800 or so

[23:35] <MasterDuke> does it really know about combined short/long arguments?

[23:37] <MasterDuke> timo++

[23:37] <MasterDuke> that was it

[23:39] <MasterDuke> huh. i even had been looking at a `git grep` of `adverbs<output>` to see where i needed to change

[23:41] <timo> weird

[23:42] <MasterDuke> heh, i think -o has never worked, despite being pretty ancient, i'm seeing it as many at 11 years back

[23:52] <Geth> ¦ nqp: MasterDuke17++ created pull request #753: Implement the -o form of the --output option

[23:52] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/753

[23:52] <MasterDuke> timo: do you know anything about the --tracing option?

[23:54] <timo> hm, moarvm has something like that as a define i think?

[23:54] <timo> other than that no

[23:54] <timo> i know rxtrace tho

[23:58] <MasterDuke> looks like there might be some confusion between --tracing and --trace

