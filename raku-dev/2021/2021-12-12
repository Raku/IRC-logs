[00:02] *** reportable6 left
[00:03] *** reportable6 joined
[01:18] *** Geth__ joined
[01:19] *** TempIRCLogger left
[01:19] *** Geth left
[01:19] *** lizmat left
[04:13] *** linkable6 left
[04:13] *** evalable6 left
[04:13] *** evalable6 joined
[05:15] *** squashable6 left
[05:15] *** committable6 left
[05:15] *** shareable6 left
[05:15] *** evalable6 left
[05:15] *** releasable6 left
[05:15] *** unicodable6 left
[05:15] *** quotable6 left
[05:15] *** bloatable6 left
[05:15] *** bisectable6 left
[05:15] *** notable6 left
[05:15] *** nativecallable6 left
[05:15] *** benchable6 left
[05:15] *** coverable6 left
[05:15] *** reportable6 left
[05:15] *** greppable6 left
[05:15] *** sourceable6 left
[05:15] *** tellable6 left
[05:15] *** statisfiable6 left
[05:16] *** committable6 joined
[05:16] *** frost joined
[05:17] *** notable6 joined
[05:17] *** nativecallable6 joined
[05:17] *** benchable6 joined
[05:17] *** releasable6 joined
[05:17] *** greppable6 joined
[05:18] *** statisfiable6 joined
[05:18] *** bloatable6 joined
[05:18] *** tellable6 joined
[05:18] *** unicodable6 joined
[05:19] *** sourceable6 joined
[05:25] <Xliff> p6-Suite timings have once again been cancelled this week, due to: https://github.com/rakudo/rakudo/issues/4655

[06:16] *** squashable6 joined
[06:17] *** evalable6 joined
[07:04] *** reportable6 joined
[07:14] *** frost left
[07:14] *** linkable6 joined
[07:14] *** frost joined
[07:17] *** quotable6 joined
[07:17] *** bisectable6 joined
[07:18] *** shareable6 joined
[07:38] *** frost left
[08:17] *** coverable6 joined
[08:42] *** patrickb joined
[09:47] *** lizmat_ left
[09:48] *** lizmat joined
[09:48] <lizmat> Files=1349, Tests=117874, 307 wallclock secs (34.83 usr  9.15 sys + 4304.02 cusr 343.92 csys = 4691.92 CPU)

[10:05] *** squashable6 left
[11:11] *** coverable6 left
[11:11] *** evalable6 left
[11:11] *** bisectable6 left
[11:11] *** shareable6 left
[11:11] *** notable6 left
[11:11] *** linkable6 left
[11:11] *** committable6 left
[11:11] *** releasable6 left
[11:11] *** unicodable6 left
[11:11] *** nativecallable6 left
[11:11] *** reportable6 left
[11:11] *** sourceable6 left
[11:11] *** benchable6 left
[11:11] *** statisfiable6 left
[11:11] *** tellable6 left
[11:11] *** greppable6 left
[11:11] *** bloatable6 left
[11:11] *** quotable6 left
[11:12] *** benchable6 joined
[11:12] *** reportable6 joined
[11:12] *** shareable6 joined
[11:13] *** sourceable6 joined
[11:13] *** notable6 joined
[11:13] *** committable6 joined
[11:14] *** bisectable6 joined
[12:02] *** reportable6 left
[12:07] *** squashable6 joined
[12:12] *** tellable6 joined
[12:13] *** bloatable6 joined
[12:14] *** unicodable6 joined
[13:04] *** reportable6 joined
[13:13] *** coverable6 joined
[13:14] *** greppable6 joined
[13:14] *** evalable6 joined
[14:14] *** releasable6 joined
[15:14] *** quotable6 joined
[15:14] *** linkable6 joined
[16:12] *** statisfiable6 joined
[17:24] <timo> i wonder if we would be able to put retries in for precomp for cases where we're running up against some kind of resource limitation

[17:24] <timo> .. are we currently doing in-process precomp or out-of-process precomp ...

[17:30] <timo> ah yes, a tree of processes

[17:32] *** evalable6 left
[17:32] *** linkable6 left
[17:34] *** linkable6 joined
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:21] <nine> To me it'd make more sense to fix the actual bugs

[18:22] <timo> yes, true

[18:25] <timo> https://gist.github.com/timo/a34409256a10fe49c9cb290adf221771 - does this veeeery sloooowly leak for anybody else?

[18:35] *** evalable6 joined
[18:35] *** dogbert17 left
[18:40] *** squashable6 left
[18:41] *** squashable6 joined
[19:00] <releasable6> Next release in ≈4 days and ≈23 hours. 4 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[19:03] *** dogbert17 joined
[19:12] *** nativecallable6 joined
[19:31] *** squashable6 left
[20:28] <MasterDuke> timo: after how many iterations? i did it for 1_000 and heaptrack didn't think it leaked anything

[20:32] *** squashable6 joined
[20:33] <timo> https://imgur.com/FzJvjfl

[20:33] <timo> does that link actually work?

[20:34] <timo> yeah it does

[20:34] <MasterDuke> i see the same thing in my heaptrack recording. i guess they're getting cleaned up on exit

[20:34] <MasterDuke> so it's an hll leak, not a vm one i guess

[20:35] <timo> i mean, this isn't really a program that should be using more data after the first minute

[20:35] <timo> yeah i wasn't expecting moar to leak something here

[20:36] <MasterDuke> looks like it's likely repr_clone -> copy_to

[20:37] <timo> which repr are we cloning? quite possibly cloning MVMCode probably

[20:37] <MasterDuke> dunno, heaptrack doesn't know that

[20:38] <MasterDuke> it was only 849 allocations, but 442mb

[20:41] <timo> i see clonings of scalar and IterationBuffer

[20:42] <MasterDuke> then i suspect it's the IterationBuffer

[20:43] <MasterDuke> huh. i ran for 100 iterations and see 4300 MVMCodes and 770 P6opaques, no iterationbuffers

[20:44] <timo> 483328 ssize, could be the array of words we pick from

[20:45] <MasterDuke> what if you shorten @w to just a few elements

[22:58] *** linkable6 left
[22:58] *** evalable6 left
[23:01] *** linkable6 joined
[23:15] *** patrickb left
[23:32] *** discord-raku-bot left
[23:32] *** discord-raku-bot joined
[23:58] *** evalable6 joined
