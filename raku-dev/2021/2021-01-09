[00:16] *** lucasb left
[01:06] <JRaspass> @Xliff let me know how you get on with cro and https, raku.land ended up putting cloudflare infront because both ff and chrome (and never curl) would sometimes hang on it, i turned off h2 and it still did it so i took the easy way out, its still tls between cf and cro though.

[01:43] <Xliff> JRaspass: Sure thing. I'm only using it to serve JSON (now JSONP) though.

[01:43] <Xliff> This has been a bit of a chore.

[01:44] <JRaspass> which bit was tricky?

[01:44] <Xliff> Oh...where to begin?

[01:45] <JRaspass> hah

[01:45] <Xliff> Getting SSL working (takes latest IO::Socket::Async::SSL), getting a persistent DB connection up (still times out after an unknown amount of idle activity, so I need to address that)

[01:46] <Xliff> Now it's CORS, which is not specitically Cro, but then getting everything working together to deal with it.

[01:46] <JRaspass> is jsonp a stop-gap? haven't seen that used much anymore

[01:46] <Xliff> Yes. And it's still relevant due to CORS.

[01:47] <Xliff> The other thing I've noticed is that the deeper you get into Cro, you realized there is more that has to be done.

[01:47] <Xliff> Take logging, for example.

[01:47] <Xliff> That just send things out to STDOUT and STDERR. If you want to do something common like.. oh... both, you will need to roll your own.

[01:48] <Xliff> I'll have to see if I can do something with Cro::HTTP::Log::File and then submit a PR.

[01:48] <Xliff> None of these are necessarily show stoppers, but more of an additional hurdle to satisfying your precise needs.

[01:49] <JRaspass> i ended up changing the logging middleware to give me timings

[01:49] <Xliff> Nice! How did you do that?

[01:49] <JRaspass> hacky, it abuses request.annotations - https://gitlab.com/raku-land/raku-land/-/blob/master/lib/Local/Middleware/Log.rakumod

[01:50] <JRaspass> does use the nice role to simplify the code though, was thinking of sending a pr to cro for using that role in the real log::file

[01:51] <Xliff> Ah, I see!

[01:51] <Xliff> Why not just add that as its own headeR?

[01:51] <JRaspass> its not what annotations is for afaik, oh i didn't think of that

[01:51] <Xliff> :)

[01:51] <Xliff> We might want to move this to #raku.

[01:51] <JRaspass> yep, whoops

[02:10] *** Xliff left
[02:21] *** Kaeipi left
[02:21] *** Kaiepi joined
[02:24] *** Kaiepi left
[02:25] *** Kaiepi joined
[02:42] *** kjp left
[03:05] *** Kaiepi left
[03:15] *** frost-lab joined
[03:34] *** Kaiepi joined
[04:07] *** Kaiepi left
[04:53] *** JRaspass left
[06:14] *** linkable6 left
[06:14] *** evalable6 left
[06:16] *** linkable6 joined
[06:17] *** evalable6 joined
[06:38] *** Altai-man joined
[07:25] *** squashable6 left
[07:27] *** squashable6 joined
[08:16] *** Kaiepi joined
[09:16] *** linkable6 left
[09:16] *** evalable6 left
[09:17] *** linkable6 joined
[09:17] *** evalable6 joined
[09:18] <[Tux]> Rakudo v2020.12-37-gc039b28fc (v6.d) on MoarVM 2020.12-34-g14708e989

[09:18] <[Tux]> csv-test-xs-20      0.382 -  0.391

[09:18] <[Tux]> csv-ip5xs           0.826 -  0.838

[09:18] <[Tux]> test-t --race       0.865 -  0.876

[09:18] <[Tux]> test-t              1.847 -  1.875

[09:18] <[Tux]> test                7.641 -  7.720

[09:18] <[Tux]> csv-ip5xs-20        8.038 -  8.341

[09:18] <[Tux]> test-t-20 --race    8.737 -  9.854

[09:18] <[Tux]> csv-parser         25.864 - 26.436

[09:18] <[Tux]> test-t-20          31.635 - 32.707

[10:20] *** sena_kun joined
[10:21] *** Altai-man left
[11:29] *** JRaspass joined
[13:00] *** JRaspass left
[13:20] <sena_kun> releasable6, status

[13:20] <releasable6> sena_kun, Next release in â‰ˆ14 days and â‰ˆ5 hours. 1 blocker. Changelog for this release was not started yet

[13:20] <releasable6> sena_kun, Details: https://gist.github.com/0dfc1f17c7f96501a32ca2bd7eec659c

[13:36] *** frost-lab left
[14:19] *** Altai-man joined
[14:21] *** sena_kun left
[15:09] *** JRaspass joined
[15:12] *** b2gills left
[16:31] <Geth> Â¦ rakudo: 65a5cce11c | (Stefan Seifert)++ | src/Perl6/Metamodel/ParametricRoleHOW.nqp

[16:31] <Geth> Â¦ rakudo: Fix potential deadlock on specialization of roles

[16:31] <Geth> Â¦ rakudo: 

[16:31] <Geth> Â¦ rakudo: NQPLock's protect method doesn't cope well with return statements. Doing a

[16:31] <Geth> Â¦ rakudo: return from a protected block will leave the lock in place. The only reason why

[16:31] <Geth> Â¦ rakudo: this hasn't surfaced as deadlock before is that the lock is using a reeantrant

[16:31] <Geth> Â¦ rakudo: mutex and most of the time the same thread will do the specializations. Fix by

[16:31] <Geth> Â¦ rakudo: simply not using return and instead move the remainder into an if statement.

[16:31] <Geth> Â¦ rakudo: Fixes a hang of role R { }; (^100).hyper.map({R.HOW.specialize(R, Any)})

[16:31] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/65a5cce11c

[16:50] *** b2gills joined
[17:08] *** Xliff joined
[17:14] <Xliff> \o

[17:14] <Xliff> vrurg: You around?

[17:15] <Xliff> I'm curious as to the best way to add multi candidates to a proto when both the proto and the candidates come from a role.

[17:15] <Xliff> This is the Method::Also thing, so I thought you would be the best person to ask.

[17:19] <Xliff> sena_kun jnthn: https://gist.github.com/Xliff/fcf214158ad5d9da0bf5ae25b9b72dc0

[17:19] *** domidumont joined
[18:19] *** sena_kun joined
[18:21] *** Altai-man left
[19:02] *** domidumont left
[20:06] *** JRaspass left
[20:11] <vrurg> Xliff: Not that I'm currently around, but most likely will be available in 2-3hrs.

[20:13] <vrurg> Xliff: if this of any help, a proto is copied over from a role into the consuming class.

[20:23] <Xliff> vrurg: Thanks. I should be here.

[20:24] <Xliff> The biggest problem I am having is making sure candidates are added to the class from the methods they alias.

[21:28] *** Xliff left
[21:38] *** sena_kun left
