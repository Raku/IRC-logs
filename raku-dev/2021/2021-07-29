[00:00] *** linkable6 left
[00:00] *** evalable6 left
[00:00] *** evalable6 joined
[00:01] *** linkable6 joined
[00:02] *** reportable6 left
[01:04] *** reportable6 joined
[02:04] *** linkable6 left
[02:04] *** quotable6 left
[02:04] *** bloatable6 left
[02:04] *** nativecallable6 left
[02:04] *** statisfiable6 left
[02:04] *** greppable6 left
[02:04] *** squashable6 left
[02:04] *** sourceable6 left
[02:04] *** reportable6 left
[02:04] *** shareable6 left
[02:04] *** committable6 left
[02:04] *** coverable6 left
[02:04] *** bisectable6 left
[02:04] *** evalable6 left
[02:04] *** benchable6 left
[02:04] *** releasable6 left
[02:04] *** unicodable6 left
[02:04] *** notable6 left
[02:04] *** tellable6 left
[02:04] *** shareable6 joined
[02:04] *** nativecallable6 joined
[02:04] *** squashable6 joined
[02:04] *** benchable6 joined
[02:05] *** quotable6 joined
[02:05] *** reportable6 joined
[02:06] *** bloatable6 joined
[03:05] *** coverable6 joined
[03:06] *** statisfiable6 joined
[03:06] *** committable6 joined
[03:06] *** evalable6 joined
[03:06] *** linkable6 joined
[03:07] *** releasable6 joined
[03:07] *** greppable6 joined
[03:38] *** frost-lab joined
[04:06] *** notable6 joined
[04:06] *** unicodable6 joined
[04:16] *** frost-lab left
[04:39] *** Guest92 joined
[04:41] *** Guest92 left
[05:05] *** sourceable6 joined
[05:06] *** tellable6 joined
[05:19] *** Guest92 joined
[05:22] *** Guest92 left
[05:22] *** frost-lab joined
[06:02] *** reportable6 left
[06:31] *** linkable6 left
[06:32] *** discord-raku-bot joined
[07:03] *** reportable6 joined
[07:06] *** bisectable6 joined
[07:08] *** frost-lab left
[07:32] *** linkable6 joined
[08:23] <Geth> ¦ rakudo: lizmat self-assigned Pointer.Numeric should resolve to 0, not an exception https://github.com/rakudo/rakudo/issues/4483
[08:24] <Geth> ¦ rakudo: 681e3b5e84 | (Elizabeth Mattijsen)++ | lib/NativeCall/Types.rakumod
[08:24] <Geth> ¦ rakudo: Make Pointer.(Numeric|Int) resolve to 0
[08:24] <Geth> ¦ rakudo: 
[08:24] <Geth> ¦ rakudo: By basically using the same approach as was being used for Bool.
[08:24] <Geth> ¦ rakudo: Fixes #4483
[08:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/681e3b5e84
[08:25] *** linkable6 left
[08:26] *** linkable6 joined
[10:00] *** MasterDuke left
[10:02] <Geth> ¦ rakudo/local-cmp-aware-sort: fe4cc07105 | (Elizabeth Mattijsen)++ | src/core.c/List.pm6
[10:02] <Geth> ¦ rakudo/local-cmp-aware-sort: Make .sort aware of any &[cmp] additions
[10:02] <Geth> ¦ rakudo/local-cmp-aware-sort: 
[10:02] <Geth> ¦ rakudo/local-cmp-aware-sort: This makes .sort aware of any local &[cmp] additions from where .sort
[10:02] <Geth> ¦ rakudo/local-cmp-aware-sort: is called, if called without an explicit comparator.
[10:02] <Geth> ¦ rakudo/local-cmp-aware-sort: 
[10:02] <Geth> ¦ rakudo/local-cmp-aware-sort: This will use CALLERS:: to find out if the outer &[cmp] is different
[10:02] <Geth> ¦ rakudo/local-cmp-aware-sort: from the "system" &[cmp], and will use that if that is the case.
[10:02] <Geth> ¦ rakudo/local-cmp-aware-sort: <…commit message has 8 more lines…>
[10:02] <Geth> ¦ rakudo/local-cmp-aware-sort: review: https://github.com/rakudo/rakudo/commit/fe4cc07105
[10:03] <Geth> ¦ rakudo: lizmat++ created pull request #4484: Make .sort aware of any &[cmp] additions
[10:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4484
[10:03] *** patrickb joined
[10:05] *** MasterDuke joined
[10:22] *** Xliff joined
[10:27] <Geth> ¦ rakudo/local-cmp-aware-sort: f84ff884ea | (Elizabeth Mattijsen)++ | src/core.c/List.pm6
[10:27] <Geth> ¦ rakudo/local-cmp-aware-sort: Simplify &[cmp] lookup logic
[10:27] <Geth> ¦ rakudo/local-cmp-aware-sort: 
[10:27] <Geth> ¦ rakudo/local-cmp-aware-sort: We know we're going to find one, so there's no need for the overhead
[10:27] <Geth> ¦ rakudo/local-cmp-aware-sort: that INDIRECT_NAME_LOOKUP brings.
[10:27] <Geth> ¦ rakudo/local-cmp-aware-sort: review: https://github.com/rakudo/rakudo/commit/f84ff884ea
[10:33] <Xliff> What's the best way to start a program using raku, and then orphan it?
[10:34] <Xliff> So that those processes continue after the script exits.
[10:35] <Xliff> Huh... 'start qx<konsole>; sleep 2' seems to work! LOL
[10:35] <Geth> ¦ nqp: c3aca8ac61 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION
[10:35] <Geth> ¦ nqp: Bump MoarVM for the latest fixes and optimizations
[10:35] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/c3aca8ac61
[10:36] *** AlexDaniel left
[10:36] *** rba[m] left
[10:39] *** AlexDaniel joined
[10:47] *** rba[m] joined
[10:52] <Geth> ¦ rakudo: 62e291f09a | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION
[10:52] <Geth> ¦ rakudo: Bump NQP to get the latest MoarVM fixes
[10:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/62e291f09a
[11:07] *** sena_kun joined
[11:13] *** patrickb left
[11:14] *** patrickb joined
[11:15] *** patrickb left
[11:16] *** patrickb joined
[11:17] *** patrickb left
[11:18] *** patrickb joined
[11:20] *** patrickb left
[11:20] *** patrickb joined
[11:22] *** patrickb left
[11:22] *** patrickb joined
[11:26] *** patrickb left
[11:26] *** patrickb joined
[11:28] *** patrickb left
[11:28] *** patrickb joined
[11:30] *** patrickb left
[11:30] *** patrickb joined
[11:32] *** patrickb left
[11:32] *** patrickb joined
[11:34] *** patrickb left
[11:34] *** patrickb joined
[11:36] *** patrickb left
[11:36] *** patrickb joined
[11:36] *** patrickb left
[11:46] <nine> Xliff: https://linux.die.net/man/1/daemonize ?
[12:01] <dogbert17> lizmat++
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:13] <Xliff> nine++ # Thanks
[12:18] *** patrickb joined
[12:18] <patrickb> Did someone already contact stackoverflow to create a Raku collective (https://stackoverflow.com/collectives-on-stack-overflow)?
[12:19] <patrickb> As far as I understand it, it's basically a shiny overview page
[12:25] * lizmat did not but would welcome anybody wanting to do that  :-)
[12:26] <Xliff> patricb: I'd love to help out with that.
[12:45] <patrickb> I guess someone will have to fill out the form at https://stackoverflow.com/collectives-on-stack-overflow/contact and talk with people.
[12:46] <patrickb> Xliff: Are you a taker?
[12:47] <patrickb> I'm not entirely sure if they intend to sell this...
[12:50] <MasterDuke> form doesn't say it has to be *your* name, company, etc...
[12:52] <leont> I would guess it should be someone with a lot of activity on the raku tag, preferably with high reputation?
[12:54] <patrickb> Or someone who deems him self an official of the Raku company. :-)
[12:54] <patrickb> In our case that could be many people.
[12:54] <patrickb> Or none, depending on the POV.
[12:56] <Xliff> patrickb: Taker?
[12:57] <Xliff> Probably someone from the RSC should be the one to fill this out?
[12:57] <Xliff> patrickb: You may want to move this to problem-solving
[12:58] <ugexe> i thought those cost money
[12:58] <ugexe> or maybe that was just the icon
[12:59] <patrickb> ugexe: Maybe. I'm unsure. I haven't seen them explicitly state that it costs, but the contact form says "Contact sales team"
[12:59] <patrickb> But maybe it's a "free for non-profits", who knows...
[13:02] <patrickb> ugexe: Do you want to contact them? Do you mind if I do it?
[13:09] <ugexe> go for it
[13:10] *** Xliff left
[13:30] *** sena_kun left
[14:21] <Geth> ¦ nqp/new-disp: 5727d71ace | (Jonathan Worthington)++ | 2 files
[14:21] <Geth> ¦ nqp/new-disp: Code-gen action method invocation
[14:21] <Geth> ¦ nqp/new-disp: 
[14:21] <Geth> ¦ nqp/new-disp: Rather than creating a megamorphic pinch point in !reduce. We'll need a
[14:21] <Geth> ¦ nqp/new-disp: way to handle megamorphic sites better in new-disp yet, but I've long
[14:21] <Geth> ¦ nqp/new-disp: wanted to do this particular change anyway. Take care to pre-decont the
[14:21] <Geth> ¦ nqp/new-disp: actions so we can have a shorter bytecode sequence / less work.
[14:21] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/5727d71ace
[14:35] <Geth> ¦ nqp/new-disp: a8621284ff | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp
[14:35] <Geth> ¦ nqp/new-disp: Remove dispatcher op mappings on MoarVM
[14:35] <Geth> ¦ nqp/new-disp: 
[14:35] <Geth> ¦ nqp/new-disp: Rakudo already does not used them.
[14:35] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/a8621284ff
[15:08] <patrickb> I've sent a contact request.
[15:44] *** patrickb left
[16:44] *** linkable6 left
[16:44] *** evalable6 left
[16:46] *** linkable6 joined
[18:02] *** reportable6 left
[18:45] *** evalable6 joined
[19:45] *** melezhik joined
[20:03] *** reportable6 joined
[20:33] *** melezhik left
[22:18] *** linkable6 left
[22:18] *** evalable6 left
[22:21] *** evalable6 joined
[23:19] *** Xliff joined
[23:20] <Xliff> m: multi sub m (Int() $a, Int() $b) { say '2-arg'; }; multi sub m (Int() $a, Int() $b, Int() $c, Int() $d) { say '4-arg' }; m(1, 2)
[23:20] <camelia> rakudo-moar 62e291f09: OUTPUT: «2-arg␤»
[23:20] *** linkable6 joined
[23:21] <Xliff> m: class A { proto method a (|) { }; multi method a (Int() $a, Int() $b) { say '2-arg'; }; multi method a (Int() $a, Int() $b, Int() $c, Int() $d) { say '4-arg' }; A.a(1, 2)
[23:21] <camelia> rakudo-moar 62e291f09: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3$c, Int() $d) { say '4-arg' }; A.a(1, 2)7⏏5<EOL>␤    expecting any of:␤        statement end␤        statement modifier␤        statement modifier loo…»
[23:21] <Xliff> m: class A { proto method a (|) { }; multi method a (Int() $a, Int() $b) { say '2-arg'; }; multi method a (Int() $a, Int() $b, Int() $c, Int() $d) { say '4-arg' }; }; A.a(1, 2)
[23:21] <camelia> rakudo-moar 62e291f09: ( no output )
[23:21] <Xliff> m: class A { proto method a (|) { * }; multi method a (Int() $a, Int() $b) { say '2-arg'; }; multi method a (Int() $a, Int() $b, Int() $c, Int() $d) { say '4-arg' }; }; A.a(1, 2)
[23:21] <camelia> rakudo-moar 62e291f09: OUTPUT: «2-arg␤»
[23:22] <Xliff> m: class A { proto method a (|) { * }; multi method a (Int() $a, Int() $b) { say '2-arg'; samewith($a, $b, $, $); }; multi method a (Int() $a, Int() $b, Int() $c, Int() $d) { say '4-arg' }; }; A.a(1, 2)
[23:22] <camelia> rakudo-moar 62e291f09: OUTPUT: «2-arg␤Cannot create an Int from a 'Any' type object␤  in method a at <tmp> line 1␤  in method a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»
[23:22] <Xliff> m: class A { proto method a (|) { * }; multi method a (Int() $a, Int() $b) { say '2-arg'; samewith($a, $b, 1, 2); }; multi method a (Int() $a, Int() $b, Int() $c, Int() $d) { say '4-arg' }; }; A.a(1, 2)
[23:22] <camelia> rakudo-moar 62e291f09: OUTPUT: «2-arg␤4-arg␤»
