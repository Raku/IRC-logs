[00:15] *** patrickbkr[m] left
[00:15] *** patrickbkr[m] joined
[00:15] *** AlexDaniel` left
[00:20] *** AlexDaniel` joined
[00:34] *** MasterDuke left
[00:50] *** dogbert17 joined
[00:54] *** dogbert11 left
[01:28] *** dogbert17 left
[01:29] *** dogbert17 joined
[01:47] *** JRaspass left
[01:48] *** AlexDaniel` left
[01:48] *** unclechu left
[02:18] *** AlexDaniel` joined
[02:22] *** unclechu joined
[02:32] *** kvw_5 joined
[02:35] *** kvw_5_ left
[02:45] *** leont left
[06:05] *** Geth left
[06:05] *** Geth joined
[07:14] *** domidumont joined
[08:14] *** sena_kun left
[08:35] *** squashable6 left
[08:35] *** squashable6 joined
[08:37] *** patrickb joined
[09:39] *** domidumont left
[09:58] *** JRaspass joined
[10:34] <Geth> Â¦ problem-solving: patrickbkr assigned to codesections Issue The PS-process' acceptance policy doesn't match reality https://github.com/Raku/problem-solving/issues/272

[10:55] *** sena_kun joined
[11:45] *** [Tux] left
[11:45] <Geth> Â¦ rakudo/rakuast: 85484c0ea8 | (Elizabeth Mattijsen)++ | 2 files

[11:45] <Geth> Â¦ rakudo/rakuast: Follow b2gills++ suggestion about deparsing

[11:45] <Geth> Â¦ rakudo/rakuast: 

[11:45] <Geth> Â¦ rakudo/rakuast: See https://github.com/rakudo/rakudo/commit/0678c4386a474b018999c18968ac758455c0ad3a#commitcomment-47855336

[11:45] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/85484c0ea8

[11:49] *** [Tux] joined
[12:12] *** leont joined
[12:23] <Geth> Â¦ rakudo/enums-as-Map: 615030d279 | (Elizabeth Mattijsen)++ | 2 files

[12:23] <Geth> Â¦ rakudo/enums-as-Map: Same effect by dispatch

[12:23] <Geth> Â¦ rakudo/enums-as-Map: 

[12:23] <Geth> Â¦ rakudo/enums-as-Map: As pointed out by vrurg++  TIL I learned about the Enumeration role.

[12:23] <Geth> Â¦ rakudo/enums-as-Map: review: https://github.com/rakudo/rakudo/commit/615030d279

[12:25] *** squashable6 left
[12:25] *** squashable6 joined
[12:51] *** domidumont joined
[13:08] *** lizmat_ joined
[13:10] *** lizmat left
[13:28] *** JRaspass left
[13:45] *** uzl[m] joined
[14:45] *** leont left
[14:46] *** leont joined
[15:08] *** frost-lab left
[15:34] *** JRaspass joined
[15:35] *** lizmat_ is now known as lizmat

[15:36] *** maggotbrain left
[15:47] *** maggotbrain joined
[15:47] *** maggotbrain left
[16:14] *** JRaspass left
[16:51] <Geth> Â¦ rakudo: affdd05831 | (Elizabeth Mattijsen)++ | src/core.c/precedence.pm6

[16:51] <Geth> Â¦ rakudo: Set up .prec info for &[<=>]

[16:51] <Geth> Â¦ rakudo: 

[16:51] <Geth> Â¦ rakudo: It also appeared to not exist

[16:51] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/affdd05831

[17:59] <Geth> Â¦ rakudo/rakuast: ef4fb699fe | (Jonathan Worthington)++ | 5 files

[17:59] <Geth> Â¦ rakudo/rakuast: Basic RakuAST implementation of `for` modifier

[17:59] <Geth> Â¦ rakudo/rakuast: 

[17:59] <Geth> Â¦ rakudo/rakuast: The `for` statement AST node is refactored a little to allow for some

[17:59] <Geth> Â¦ rakudo/rakuast: code sharing (which will be helpful when we start producing the various

[18:00] <Geth> Â¦ rakudo/rakuast: optimized forms). It always assumes sink context for now, which isn't

[18:00] <Geth> Â¦ rakudo/rakuast: quite correct, and will need tweaking. Otherwise, it works.

[18:00] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/ef4fb699fe

[18:22] <Geth> Â¦ rakudo/rakuast: 5fbe66bf74 | (Elizabeth Mattijsen)++ | 2 files

[18:22] <Geth> Â¦ rakudo/rakuast: Revert "Follow b2gills++ suggestion about deparsing"

[18:22] <Geth> Â¦ rakudo/rakuast: 

[18:22] <Geth> Â¦ rakudo/rakuast: This reverts commit 85484c0ea8c1b22b777c886bef80aec2e4abec58.

[18:22] <Geth> Â¦ rakudo/rakuast: 

[18:22] <Geth> Â¦ rakudo/rakuast: This breaks simple cases such as %h<s>  :-(  I guess the deparser needs

[18:22] <Geth> Â¦ rakudo/rakuast: more context.

[18:22] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/5fbe66bf74

[18:22] <Geth> Â¦ rakudo/rakuast: 8538709dbf | (Elizabeth Mattijsen)++ | 2 files

[18:22] <Geth> Â¦ rakudo/rakuast: Add StatementModifier::For deparsing and test

[18:22] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/8538709dbf

[18:23] *** domidumont left
[18:57] *** MasterDuke joined
[19:16] <MasterDuke> i almost have a companion PR to https://github.com/Raku/nqp/pull/703 for Rakudo, but it currently dies during `make install` with `Type check failed in binding to parameter '<anon>'; expected Any but got BOOTStrArray (BOOTStrArray) in block <unit> at /home/dan/Source/perl6/rakudo/tools/build/clean-target-files.raku line 1`

[19:17] <MasterDuke> but assuming whatever the fix is doesn't slow the optimization down any, it takes `my @a = ^1_000_000; my $b; my $s := now; $b := @a.shift while @a; say now - $s; say $b` from ~0.9s down to ~0.15s

[19:27] <lizmat> the problem in Raku is that @a can be anything adhering to the Positional role

[19:27] <lizmat> so there may well be nothing to do nqp::elems on

[19:30] <MasterDuke> yeah, i have it call &prefix:<+> instead

[19:31] <MasterDuke> i get the same error if i have it call .elems also, though that's slightly slower than &prefix:<+>

[19:37] <lizmat> and calling .Bool on it?  or is that the current situation?

[19:37] <lizmat> and didn't we just find an issue with calling .Bool on things ?

[19:41] <MasterDuke> i'm not calling .Bool

[19:41] <MasterDuke> but fwiw, changing to calling .Bool gives same error

[19:48] <lizmat> meh

[20:15] <lizmat> MasterDuke: I think there's something screwy going on with https://github.com/rakudo/rakudo/blob/master/src/core.c/Rakudo/Sorting.pm6#L55

[20:16] <lizmat> I guess the .Bool comes from the ||

[20:17] <lizmat> will look at this later tonight or tomorrow

[20:17] <lizmat> afk for a bit&

[20:38] <vrurg> @a could as well be bound to a Proxy.

[20:53] *** patrickb left
[20:57] *** patrickb joined
[21:04] *** MasterDuke left
[21:08] *** MasterDuke joined
[21:09] <MasterDuke> i think the problem line is `unit sub MAIN(Str $folder, *@files where @files.so, Bool :$v);`

[21:12] <MasterDuke> lizmat: that comment is 4 years old, is it still true?

[21:13] *** patrickb left
[21:31] *** MasterDuke left
[21:35] *** MasterDuke joined
[21:55] <MasterDuke> interesting, turns out it was just the `if` optimization that was the problem, if i only do it for `while` it's fine

[21:59] <MasterDuke> yep, tests pass

[22:12] *** JRaspass joined
[22:40] *** dogbert11 joined
[22:41] *** dogbert11 left
[22:42] *** dogbert11 joined
[22:42] *** dogbert17 left
[22:45] *** dogbert11 left
[22:46] *** dogbert11 joined
[22:55] *** JRaspass left
[23:31] *** vrurg left
[23:53] *** vrurg joined
