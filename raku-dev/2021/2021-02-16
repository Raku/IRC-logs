[00:00] *** dogbert17 joined
[00:02] *** dogbert11 left
[00:48] *** maggotbrain left
[00:49] *** maggotbrain joined
[01:51] *** dogbert17 left
[01:51] *** dogbert17 joined
[02:26] *** lucasb left
[06:16] *** vrurg left
[06:17] *** vrurg joined
[06:19] *** cog joined
[06:19] *** cog__ left
[06:53] *** cog_ joined
[06:56] *** cog left
[07:50] *** squashable6 left
[07:51] *** squashable6 joined
[10:21] *** Kaiepi left
[10:24] *** Kaiepi joined
[12:13] <tbrowder> sena_kun: PDF::Document self-reference has been fixed for blin

[12:13] <sena_kun> tbrowder++

[12:14] <tbrowder> may i please get a commit bit for planet.raku.org from someone?

[12:32] <moritz> that's maintained by rba, ^^

[12:41] <tbrowder> ok, thnx

[12:44] <tbrowder> .ask rba may i please have a commit bit for https://github.com/Raku/planet.raku.org. i'm trying to make it a bit more useful for those wanting to get blogs tied in to the website via rss or atom feeds.

[12:44] <tellable6> tbrowder, I'll pass your message to rba

[12:53] <rba> tbrowder: I have given you the access. In case the change is not promoted, let me know. Might need a restart on the server.

[12:54] <tbrowder> rba: thank you, and will do.

[13:53] <codesections> I'm working on my first non-trivial PR to rakudo, and I'm finding that my normal "write code→run→refactor" loop is resulting in me waiting for `make` to rebuild rakudo quite often.  Am I missing something obvious that would let me iterate faster, or is that just the cost of working with a codebase of this size? 

[13:58] *** Summertime2 left
[13:59] *** Summertime joined
[14:00] <MasterDuke> codesections: it depends what you're changing. if it's just an individual sub/method, sometime you can just write a new one (maybe in a module), and have existing code call your new one (might need an augment or wrap)

[14:00] <MasterDuke> zoffix wrote an article a while ago about contributing to rakudo that had a couple other suggestions

[14:01] <MasterDuke> but i don't remember the title of the article

[14:03] <codesections> thanks, I think I found it: https://perl6.party/post/Newcomer-Guide-to-Contributing-to-Core-Perl-6

[14:04] <MasterDuke> hm, istr something more in-depth. maybe there's a follow-up?

[14:07] <MasterDuke> ah https://perl6.party/post/Hacking-on-Rakudo-Perl-6-Compiler-Mix-Your-Fix#mixyourfix is probably what i was thinking of

[14:09] <codesections> Thanks, that does look a lot more detailed.  I'll take a look

[14:27] <codesections> performance question: I just realized that other lines in the file I'm working in use nqp even though it's late enough in the bootstrap process that the equivalent Raku methods are available (e.g., nqp::split vs .split).  Is that for perf reasons or just a stylistic choice? 

[14:30] <MasterDuke> if i had to guess a percentage, i'd say ~98% of not-required use of nqp is for performance

[14:30] <codesections> Ok, good to know.  I'll follow the lead of the surrounding code, then  

[15:00] <releasable6> Next release in ≈4 days and ≈3 hours. 2 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:27] <vrurg> .tell sena_kun I think it makes sense to do an out of band Blin run. Looks like the last NQP bump brought in some moar SEGVs.

[15:27] <tellable6> vrurg, I'll pass your message to sena_kun

[15:28] <sena_kun> vrurg, 1168 out of 1569 modules processed with Pakku right now. There are issues with zef I have no time to dig into right now.

[15:28] <sena_kun> SEGVs are very bad news, I can easily imagine skipping next release again.

[15:29] <vrurg> I currently observe reliable fail with a could of Red tests. Can do my own Blin to see if there are any more.

[15:30] <vrurg> s/could/couple/

[15:30] <sena_kun> vrurg, I'll post the results once its done.

[15:30] <vrurg> Oki, thanks!

[15:33] *** leont joined
[16:43] <[Tux]> Rakudo v2020.12-129-g291cc5f39 (v6.d) on MoarVM 2020.12-100-gc93531608

[16:43] <[Tux]> csv-test-xs-20      0.388 -  0.405

[16:43] <[Tux]> csv-ip5xs           0.807 -  0.832

[16:43] <[Tux]> test-t --race       0.878 -  0.944

[16:43] <[Tux]> test-t              1.800 -  2.160

[16:43] <[Tux]> csv-ip5xs-20        7.952 -  8.139

[16:43] <[Tux]> test                8.442 -  8.685

[16:43] <[Tux]> test-t-20 --race    8.982 -  9.476

[16:43] <[Tux]> csv-parser         26.696 - 27.154

[16:43] <[Tux]> test-t-20          29.897 - 31.163

[17:16] *** domidumont joined
[18:03] *** patrickb joined
[18:32] <sena_kun> vrurg, pinging back. I got a lot of timeouts, about 100 modules (some due to dependencies) fell for that reason, Red as well, so cannot confirm and hand testing is important here. I will try to look at zef tonight.

[18:37] *** sortiz joined
[19:23] *** domidumont left
[21:05] * sena_kun started zef-based Blin run

[21:21] *** patrickb left
[21:57] *** epony left
[22:30] *** japhb joined
[23:47] *** dogbert11 joined
[23:51] *** dogbert17 left
[23:56] *** sortiz left
[23:57] *** sortiz joined
