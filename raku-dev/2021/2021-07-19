[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:11] <japhb> m: my uint32 $i = 4294967295; say $i; class A { has uint32 $.i = 4294967295 }; A.new.i.say;  # HUH?
[00:11] <camelia> rakudo-moar b0caab5bf: OUTPUT: «4294967295␤-1␤»
[00:12] *** linkable6 left
[00:13] *** linkable6 joined
[00:15] <moon-child> japhb: probably related to https://github.com/rakudo/rakudo/issues/3936
[00:17] <japhb> Hmmm, quite possibly related, but doesn't look to be precisely the same
[00:19] <japhb> OK, added a comment to that issue.  Thanks for finding it, moon-child 
[00:26] *** melezhik joined
[00:27] <melezhik> .
[00:34] *** melezhik left
[02:16] *** squashable6 left
[02:19] *** squashable6 joined
[02:23] *** squashable6 left
[02:25] *** squashable6 joined
[02:52] <raydiak> m: my uint32 $i = 4294967295; say $i.VAR.WHAT; class A { has uint32 $.i = 4294967295 }; A.new.i.VAR.WHAT.say;
[02:52] <camelia> rakudo-moar b0caab5bf: OUTPUT: «(IntLexRef)␤(Int)␤»
[02:52] <raydiak> the only difference I can find so far
[02:53] *** linkable6 left
[02:56] *** linkable6 joined
[04:44] *** Xliff joined
[05:24] *** dogbert17 left
[05:24] *** dogbert17 joined
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:33] *** patrickb joined
[07:00] *** patrickb left
[08:06] *** |Tux| left
[08:10] *** lizmat left
[08:10] *** lizmat joined
[08:26] *** Geth joined
[08:31] <Geth> ¦ rakudo: a2faac4bd8 | (Elizabeth Mattijsen)++ | src/core.e/control.pm6
[08:31] <Geth> ¦ rakudo: Oops, forgot to add the actual file, vrurg++
[08:31] <Geth> ¦ rakudo: 
[08:31] <Geth> ¦ rakudo: FWIW, it all tested ok locally  :-(
[08:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a2faac4bd8
[09:05] *** |Tux| joined
[10:13] *** hankache joined
[10:40] *** rba[m] joined
[10:56] *** hankache left
[11:01] *** sena_kun joined
[11:02] <sena_kun> releasable6, status
[11:02] <releasable6> sena_kun, Next release in ≈4 days and ≈7 hours. 4 blockers. Changelog for this release was not started yet
[11:03] <releasable6> sena_kun, Details: https://gist.github.com/1eb4c371b722fd7c9249f2553b66b954
[11:17] <Geth> ¦ problem-solving/master: 5 commits pushed by (Daniel Sockwell)++, (Juan Julián Merelo Guervós)++, (Elizabeth Mattijsen)++
[11:17] <Geth> ¦ problem-solving/master: e43a7a59a4 | clarify PS process in README 
[11:17] <Geth> ¦ problem-solving/master: fe9d5ca876 | Address some comments.
[11:17] <Geth> ¦ problem-solving/master: a91a274442 | Resolve remaining comments
[11:17] <Geth> ¦ problem-solving/master: e84670523f | :pencil2:
[11:17] <Geth> ¦ problem-solving/master: 8de09b2f29 | Merge pull request #289 from Raku/clarify-readme
[11:17] <Geth> ¦ problem-solving/master: review: https://github.com/Raku/problem-solving/compare/72008265ffb5...8de09b2f29c8
[11:51] *** AlexDaniel left
[11:51] *** rba[m] left
[11:54] *** AlexDaniel joined
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:03] *** rba[m] joined
[12:23] *** MasterDuke left
[12:56] *** TempIRCLogger joined
[13:08] *** dogbert17 left
[13:09] *** TempIRCLogger left
[13:12] *** dogbert17 joined
[13:14] <Geth> ¦ rakudo/new-disp: f7cbe9e046 | (Jonathan Worthington)++ | 2 files
[13:14] <Geth> ¦ rakudo/new-disp: Eliminate MAST::Call use in bind type checking
[13:14] <Geth> ¦ rakudo/new-disp: 
[13:14] <Geth> ¦ rakudo/new-disp: Also use a dispatch op here; most likely a lot of the binds are
[13:14] <Geth> ¦ rakudo/new-disp: monomorphic and so the dispatch program can judge them quickly. Code
[13:14] <Geth> ¦ rakudo/new-disp: size is also reduced by not needing to emit something to produce an
[13:14] <Geth> ¦ rakudo/new-disp: error with every bind operation.
[13:14] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/f7cbe9e046
[13:16] *** MasterDuke joined
[13:41] <vrurg> lizmat: of course it was building, you had the file locally. :) That's why I prefer PRs, this kind of mistake they can filter out too.
[13:42] <lizmat> good point
[13:49] <|Tux|> Rakudo v2021.06-81-ga2faac4bd (v6.d) on MoarVM 2021.06-22-gfb5d26a7e
[13:49] <|Tux|> csv-test-xs-20      0.369 -  0.370
[13:49] <|Tux|> test-t --race       0.879 -  0.987
[13:49] <|Tux|> csv-ip5xs           0.857 -  0.996
[13:49] <|Tux|> test-t              1.999 -  2.043
[13:49] <|Tux|> test                6.796 -  7.395
[13:49] <|Tux|> csv-ip5xs-20        8.739 -  9.417
[13:49] <|Tux|> test-t-20 --race    9.712 -  9.883
[13:49] <|Tux|> csv-parser         27.681 - 27.716
[13:49] <|Tux|> test-t-20          33.067 - 33.374
[13:55] *** Kaiepi left
[13:55] *** Kaiepi joined
[14:16] <Geth> ¦ rakudo/new-disp: 068741a912 | (Jonathan Worthington)++ | 2 files
[14:16] <Geth> ¦ rakudo/new-disp: Implement p6sink using a dispatcher
[14:16] <Geth> ¦ rakudo/new-disp: 
[14:16] <Geth> ¦ rakudo/new-disp: The dispatcher is a no-op not only in the case that the value is not
[14:16] <Geth> ¦ rakudo/new-disp: concrete or lacks a `sink` method, but also - newly - when the sink
[14:16] <Geth> ¦ rakudo/new-disp: methood is exactly that in `Mu`, which we assume is a no-op. This should
[14:16] <Geth> ¦ rakudo/new-disp: get rid of numerous sink method calls. It's also the last place in
[14:16] <Geth> ¦ rakudo/new-disp: Rakudo itself that a legacy invoke op was emitted.
[14:16] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/068741a912
[14:17] * vrurg is hypnotized by all this new-disp comments...
[14:19] * lizmat has the same thing  :-)
[14:55] *** linkable6 left
[14:55] *** evalable6 left
[14:57] *** linkable6 joined
[14:58] *** evalable6 joined
[15:00] <releasable6> Next release in ≈4 days and ≈3 hours. 4 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft
[15:00] *** discord-raku-bot left
[15:01] *** discord-raku-bot joined
[15:15] <Geth> ¦ nqp/new-disp: f9a46b9c12 | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTCompilerMAST.nqp
[15:15] <Geth> ¦ nqp/new-disp: Switch immediate block invocation to dispatch op
[15:15] <Geth> ¦ nqp/new-disp: 
[15:15] <Geth> ¦ nqp/new-disp: This is probably the last case of an invoke op being produced by the
[15:15] <Geth> ¦ nqp/new-disp: QAST compiler.
[15:15] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/f9a46b9c12
[15:21] <lizmat> notable6: weekly
[15:21] <notable6> lizmat, No notes for “weekly”
[15:32] <sena_kun> bisectable6, say Uni(97) cmp Uni(97)
[15:32] <bisectable6> sena_kun, Will bisect the whole range automagically because no endpoints were provided, hang tight
[15:32] <bisectable6> sena_kun, Output on all releases: https://gist.github.com/2e883544482a416f0c5996741d1e459e
[15:32] <bisectable6> sena_kun, Bisecting by output (old=2020.11 new=2020.12) because on both starting points the exit code is 1
[15:32] <bisectable6> sena_kun, bisect log: https://gist.github.com/f34d8a9474a912eef78511380369c0ca
[15:32] <bisectable6> sena_kun, (2020-12-08) https://github.com/rakudo/rakudo/commit/79d2aeab83f15de485a5e41a9c576a0f7bdc46f6
[15:32] <bisectable6> sena_kun, Bisecting by output (old=2016.04 new=2016.05) because on both starting points the exit code is 1
[15:33] <bisectable6> sena_kun, bisect log: https://gist.github.com/92cfb4f61ac9b4bd00c97534dd4c994e
[15:33] <bisectable6> sena_kun, (2016-05-12) https://github.com/rakudo/rakudo/commit/33ef5a95459b95bf7256391a053550d4efe221de
[15:33] <bisectable6> sena_kun, Output on all releases and bisected commits: https://gist.github.com/6cf77da932fa9a2de9452cffe3685caa
[15:39] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/07/19/2021-29-scheduled-to-3/
[15:51] *** melezhik joined
[15:52] <melezhik> lizmat some of my r3 test fails on the latest commit - https://github.com/rakudo/rakudo/issues/4467 , HTH
[15:52] <lizmat> melezhik: that's probably because it needs "use v6.*" now ?
[15:53] <lizmat> or "use v6.e.PREVIEW"
[15:53] <melezhik> when did it start as requirement?
[15:53] <lizmat> with that last commit
[15:53] <melezhik> ah, ok
[15:53] <lizmat> it was felt that next/last foo is a new feature that should not be available in 6.c or 6.d
[15:54] <lizmat> afk for a few hours&
[15:55] <melezhik> not, sure, use v6.e.PREVIEW did not help at least for one of the test
[16:01] <melezhik> updated the issue
[16:51] *** evalable6 left
[16:51] *** linkable6 left
[16:52] *** evalable6 joined
[16:53] *** linkable6 joined
[17:08] *** melezhik left
[18:02] *** reportable6 left
[18:05] *** reportable6 joined
[18:21] *** sena_kun left
[18:23] *** Xliff left
[18:38] <Geth> ¦ rakudo: lizmat self-assigned r3 tests fail on the latest commit https://github.com/rakudo/rakudo/issues/4467
[18:44] <Geth> ¦ rakudo: e777fc4fc0 | (Elizabeth Mattijsen)++ | src/core.c/Any-iterable-methods.pm6
[18:44] <Geth> ¦ rakudo: Make sure .grep knows about next/last foo
[18:44] <Geth> ¦ rakudo: 
[18:44] <Geth> ¦ rakudo: Because the .grep logic lives in 6.c, it would be calling 6.c's next/last
[18:44] <Geth> ¦ rakudo: that don't accept any value.  Fix this by directly calling the exception
[18:44] <Geth> ¦ rakudo: throwing logic, which *does* work in 6.c.  This might actually have some
[18:44] <Geth> ¦ rakudo: performance benefit as well, as it removes one level of indirection.
[18:44] <Geth> ¦ rakudo: 
[18:44] <Geth> ¦ rakudo: Also normalize the order of signal code to NEXT/LAST.
[18:44] <Geth> ¦ rakudo: 
[18:44] <Geth> ¦ rakudo: This fixes #4467, melezhik++
[18:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e777fc4fc0
[18:45] *** linkable6 left
[18:47] *** linkable6 joined
[18:57] <Geth> ¦ rakudo: lizmat self-assigned Comparison fails for Uni https://github.com/rakudo/rakudo/issues/4464
[19:00] *** notna joined
[19:26] *** dogbert11 joined
[19:27] *** dogbert17 left
[19:33] *** notna left
[20:02] <Geth> ¦ nqp/new-disp: 3f496d0baa | (Jonathan Worthington)++ | 3 files
[20:02] <Geth> ¦ nqp/new-disp: Switch NQP multiple dispatch over to new-disp
[20:02] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/3f496d0baa
[20:03] <Geth> ¦ rakudo/new-disp: ecc266d1c2 | (Jonathan Worthington)++ | src/vm/moar/Perl6/Ops.nqp
[20:03] <Geth> ¦ rakudo/new-disp: NQP now installs proto code objects in the lexpad
[20:03] <Geth> ¦ rakudo/new-disp: 
[20:03] <Geth> ¦ rakudo/new-disp: This was done for the sake of new-disp multi dispatch, but as a nice
[20:03] <Geth> ¦ rakudo/new-disp: side-effect we get this simplification too.
[20:03] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/ecc266d1c2
[20:07] *** dogbert17 joined
[20:08] <Geth> ¦ nqp: 0e14b10a57 | (Daniel Green)++ | src/QRegex/P6Regex/Actions.nqp
[20:08] <Geth> ¦ nqp: Wrap QAST::Regex from qbuildsub in QAST::Stmts...
[20:08] <Geth> ¦ nqp: 
[20:08] <Geth> ¦ nqp: and add a `:node` parameter to `qbuildsub()` and pass in `$/` when it's
[20:08] <Geth> ¦ nqp: called, this is then set as the `:node` argument to the new QAST::Stmts
[20:08] <Geth> ¦ nqp: call. The combination of these changes means that we now get a filename
[20:08] <Geth> ¦ nqp: set for more regex parts of a backtrace. E.g., `raku --ll-exception -e
[20:08] <Geth> ¦ nqp: 'grammar G { token TOP { $<foo>=(<xxx>) } }; G.parse("x")'` now reports
[20:08] <Geth> ¦ nqp: <…commit message has 6 more lines…>
[20:08] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/0e14b10a57
[20:08] <Geth> ¦ nqp: ef246066be | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/QRegex/P6Regex/Actions.nqp
[20:08] <Geth> ¦ nqp: Merge pull request #732 from MasterDuke17/wrap_some_QAST__Regex_in_QAST__Stmts
[20:08] <Geth> ¦ nqp: 
[20:08] <Geth> ¦ nqp: Wrap QAST::Regex from qbuildsub in QAST::Stmts...
[20:08] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/ef246066be
[20:09] *** dogbert11 left
[20:10] <Geth> ¦ roast: 98c86d6394 | (Daniel Green)++ | 2 files
[20:10] <Geth> ¦ roast: Track changes cause by NQP PR #732
[20:10] <Geth> ¦ roast: 
[20:10] <Geth> ¦ roast: The TODO is now passing, and the new exception thrown is a better one.
[20:10] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/98c86d6394
[20:10] <Geth> ¦ roast: 89961ae172 | MasterDuke17++ (committed using GitHub Web editor) | 2 files
[20:10] <Geth> ¦ roast: Merge pull request #750 from MasterDuke17/changes_for_nqp_pr_732
[20:10] <Geth> ¦ roast: 
[20:10] <Geth> ¦ roast: Track changes caused by NQP PR #732
[20:10] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/89961ae172
[20:11] *** linkable6 left
[20:11] *** linkable6 joined
[20:18] <Geth> ¦ nqp: ca883aa21b | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION
[20:18] <Geth> ¦ nqp: Bump MoarVM for the latest goodies
[20:18] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/ca883aa21b
[20:35] <Geth> ¦ rakudo: 853dc39369 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION
[20:35] <Geth> ¦ rakudo: Bump NQP for the latest NQP / MoarVM goodies
[20:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/853dc39369
[21:11] *** evalable6 left
[21:11] *** linkable6 left
[21:13] *** evalable6 joined
[21:13] *** linkable6 joined
[21:22] *** MasterDuke left
[21:48] *** jgaz joined
[22:01] *** jgaz left
[22:29] *** dogbert11 joined
[22:29] *** dogbert17 left
[22:34] *** |Tux| left
