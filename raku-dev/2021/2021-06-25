[00:03] *** reportable6 left
[00:05] *** reportable6 joined
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[08:02] <[TuxCM]> Rakudo v2021.06-18-gad94ef1d6 (v6.d) on MoarVM 2021.06-6-g6977d0591

[08:02] <[TuxCM]> csv-test-xs-20      0.379 -  0.381

[08:02] <[TuxCM]> csv-ip5xs           0.856 -  0.874

[08:02] <[TuxCM]> test-t --race       1.054 -  1.054

[08:02] <[TuxCM]> test-t              2.100 -  2.111

[08:02] <[TuxCM]> test                8.074 -  8.582

[08:02] <[TuxCM]> csv-ip5xs-20        9.310 -  9.685

[08:02] <[TuxCM]> test-t-20 --race   11.095 - 11.520

[08:02] <[TuxCM]> csv-parser         29.439 - 29.513

[08:02] <[TuxCM]> test-t-20          36.014 - 36.069

[08:10] <gfldex> I'm looking for the spot in Rakudos source where Junctions are handled. Any pointers are very welcome.

[08:14] <moon-child> core.c/Junction.pm6:311 AUTOTHREAD, maybe?

[08:17] <moon-child> oh, and p6setautothreader

[08:18] <gfldex> I'm specifically looking for the spot where the compiler goes "ohh, I'm not going to throw a type error but turn this thing inside out to handle the Junction.".

[08:20] <moon-child> ClassHOW.nqp:289, find_method_fallback

[08:22] <gfldex> I was grepping for Junction not junction. :-/

[08:22] <gfldex> Thanks a lot!

[08:23] <moon-child> :)

[10:30] *** AlexDaniel joined
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[13:01] *** guifa left
[14:17] *** dogbert17 left
[14:52] <tonyo> should add a flag to make grep case insensitive

[14:55] <ugexe> that would be a string comparison thing, not a grep thing

[14:56] *** melezhik joined
[14:56] <melezhik> .

[14:56] <melezhik> releasable: status

[14:56] <releasable6> melezhik, Next release in ≈28 days and ≈4 hours. 1 blocker. Changelog for this release was not started yet

[14:56] <releasable6> melezhik, Details: https://gist.github.com/898756da0aef133bc5c27e7fdc823d13

[15:05] *** frost left
[15:46] <tonyo> grep the utility, not in method in raku

[15:47] <lizmat> grep has -i , no?

[15:57] *** donaldh joined
[16:33] *** donaldh left
[17:16] *** djinni` left
[17:17] *** djinni` joined
[18:02] *** reportable6 left
[18:05] *** reportable6 joined
[18:21] *** dogbert17 joined
[19:55] <melezhik> I always wonder the logic how next release change log is created? the one I get by releasable status

[19:56] <melezhik> is it manually crafted? I don't see any tags on respected GH issues or PRs ... 

[20:05] <raydiak> pretty sure it's just the titles of all commits since the last release. same things you see at https://github.com/rakudo/rakudo/commits/master

[20:07] <MasterDuke> but yeah, it's at least semi-manually crafted

[20:08] <MasterDuke> https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft this is filled in

[20:09] <raydiak> the final one for release is, but I assume it's not hand-massaged for the releasable bot, is it?

[20:12] <melezhik> so based on commits data? thanks

[20:13] <raydiak> you're welcome. if you want to check out precisely what the bot is doing for yourself, the code is at https://github.com/Raku/whateverable/blob/master/xbin/Releasable.p6 . most of the other bots are also in that repo

[20:13] <melezhik> raydiak thanks, the question was more about the logic, but yeah, thanks

[20:15] <melezhik> I am just playing with r3 and trying to assign tags to my tests so that I could run something like `tomty --only=rc_2021_07+closed` and was wandering how commits,closed GH issue would go into final release ...

[20:17] <raydiak> I just mean, the code would be the authority wrt the logic :) there could be more to the story than I'm aware of. but yes afaik, it's just the commit log. not PRs or issues. the *final* changelog with the rakudo releases is somewhat edited by humans, though

[20:17] <melezhik> yeah, sure

[21:33] *** melezhik left
[22:24] *** m6502 joined
[22:53] <raydiak> hit a flapper in t/spec/S02-types/mix.t, #126 on moar. known?

[23:16] *** m6502 left
[23:24] *** melezhik joined
[23:30] *** melezhik left
[23:53] <raydiak> then again, I've been running it in a loop for over half an hour since and can't reproduce it, so...

