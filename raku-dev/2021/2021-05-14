[00:02] *** reportable6 left
[00:04] *** reportable6 joined
[00:37] *** b2gills joined
[01:33] *** kvw_5_ joined
[01:37] *** kvw_5 left
[03:26] *** squashable6 left
[03:26] *** sourceable6 left
[03:26] *** shareable6 left
[03:26] *** reportable6 left
[03:26] *** nativecallable6 left
[03:26] *** bloatable6 left
[03:26] *** unicodable6 left
[03:26] *** committable6 left
[03:26] *** releasable6 left
[03:26] *** quotable6 left
[03:26] *** statisfiable6 left
[03:26] *** linkable6 left
[03:26] *** tellable6 left
[03:26] *** greppable6 left
[03:26] *** evalable6 left
[03:26] *** bisectable6 left
[03:26] *** coverable6 left
[03:26] *** benchable6 left
[03:26] *** notable6 left
[03:26] *** benchable6 joined
[03:26] *** tellable6 joined
[03:26] *** evalable6 joined
[03:26] *** quotable6 joined
[03:26] *** statisfiable6 joined
[03:27] *** coverable6 joined
[03:27] *** sourceable6 joined
[03:27] *** greppable6 joined
[03:28] *** bisectable6 joined
[03:28] *** linkable6 joined
[03:28] *** shareable6 joined
[03:28] *** notable6 joined
[03:28] *** unicodable6 joined
[03:28] *** committable6 joined
[03:28] *** reportable6 joined
[03:28] *** squashable6 joined
[03:28] *** bloatable6 joined
[03:29] *** nativecallable6 joined
[03:29] *** releasable6 joined
[03:58] *** lucasb left
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[06:39] *** stoned75 joined
[08:03] *** Altai-man_ joined
[08:04] *** sena_kun left
[08:14] *** Altai-man_ left
[08:16] *** sena_kun joined
[08:17] <Geth> ¦ rakudo: 5331a1d801 | (Stoned Elipot)++ | src/core.c/Exception.pm6

[08:17] <Geth> ¦ rakudo: Do not include falsy attribute in exception's message

[08:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5331a1d801

[08:17] <Geth> ¦ rakudo: c7a078dec7 | niner++ (committed using GitHub Web editor) | src/core.c/Exception.pm6

[08:17] <Geth> ¦ rakudo: Merge pull request #4365 from stoned/xnc-no-reason

[08:17] <Geth> ¦ rakudo: 

[08:17] <Geth> ¦ rakudo: Do not include falsy attribute in exception's message

[08:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c7a078dec7

[08:37] *** AlexDaniel` left
[08:40] *** AlexDaniel` joined
[09:05] <lizmat> am I the only one who would like to have .words to be more like .comb(/\w+/) instead of .split(\s+) ?

[10:12] <gfldex> lizmat: does \w+ actually work for all natural languages?

[10:12] <lizmat> it's using the Unicode property afaik

[10:13] <lizmat> so I assume the answer is yes?

[10:13] <gfldex> m: dd 'Herr Müller-Lüdenscheit'.comb(/\w+/);

[10:13] <camelia> rakudo-moar c7a078dec: OUTPUT: «("Herr", "Müller", "Lüdenscheit").Seq␤»

[10:13] <gfldex> nope

[10:14] <lizmat> ?

[10:14] <lizmat> m: dd 'Herr Müller-Lüdenscheit'.words;

[10:14] <camelia> rakudo-moar c7a078dec: OUTPUT: «("Herr", "Müller-Lüdenscheit").Seq␤»

[10:14] <lizmat> gfldex: what am I missing?

[10:15] <gfldex> In german double names are considered one word. Conceptually, .words sounds like it gives me the acutal words.

[10:15] <lizmat> m: dd 'Herr Müller_Lüdenscheit'.comb(/\w+/);

[10:15] <camelia> rakudo-moar c7a078dec: OUTPUT: «("Herr", "Müller_Lüdenscheit").Seq␤»

[10:16] <lizmat> German is using the wrong hyphen  :-)

[10:16] <gfldex> m: dd 'Herr Müller‐Lüdenscheit'.comb(/\w+/);

[10:16] <camelia> rakudo-moar c7a078dec: OUTPUT: «("Herr", "Müller", "Lüdenscheit").Seq␤»

[10:17] <gfldex> that might actually be a bug

[10:18] <gfldex> m: dd 'Herr Müller‑Lüdenscheit'.comb(/\w+/);

[10:18] <camelia> rakudo-moar c7a078dec: OUTPUT: «("Herr", "Müller", "Lüdenscheit").Seq␤»

[10:19] <gfldex> ‑ <-- that is the "don't line break here‼" variant

[10:20] <lizmat> as I said, \w is defined in some unicode property

[10:20] <lizmat> if unicode doesn't consider - or ‑ to have that property, well, end of story then I'd say ?

[10:23] <gfldex> The meaning of a hyphen (and other stuff) depends on the natural language. That sounds like ecosystem territory to me. So changing the meaning of .words in CORE seams to carry little utility.

[10:24] <lizmat> well, there's always .comb( / << \w+ >> / )   but that's soooo much slower  :(

[10:24] <gfldex> Does it have to be?

[10:25] <lizmat> good question: after trying to make Match faster, I figured the only way to do that, would be to refactor a lot of regex engine internals

[10:25] <lizmat> I'm not ready to do that just yet..

[10:32] <stoned75> hi.

[10:32] <stoned75> Should I be surprised by the following ?

[10:33] <stoned75> > 1.^mro(:roles)[1].^name

[10:33] <stoned75> Real

[10:33] <stoned75> > 1.^mro(:roles)[1].HOW

[10:33] <stoned75> Perl6::Metamodel::ConcreteRoleHOW.new

[10:33] <stoned75> > 1.^mro(:roles)[1].WHAT

[10:33] <stoned75> (low-level object `Real`)

[10:33] <stoned75> > 1.^mro(:roles)[1].gist

[10:33] <stoned75> Cannot find method 'gist' on 'Real': no method cache and no .^find_method in block <unit> at <unknown file> line 1

[10:33] <stoned75> > 

[10:34] <stoned75> and idem for 1.^mro(:roles)[2]

[10:35] <lizmat> m: Real ~~ Any

[10:35] <camelia> rakudo-moar c7a078dec: ( no output )

[10:35] <lizmat> m: dd Real ~~ Any

[10:35] <camelia> rakudo-moar c7a078dec: OUTPUT: «Bool::True␤»

[10:35] <lizmat> m: dd 1.^mro(:roles)[1].WHAT

[10:35] <camelia> rakudo-moar c7a078dec: OUTPUT: «(Real without .raku or .perl method)␤»

[10:36] <lizmat> stoned75: looks like that's the nqp role "Real" leaking out

[10:37] <stoned75> so I suppose it is not expected ?

[10:56] <lizmat> no, expected

[10:56] <lizmat> more a case of DIHWIDT

[10:57] <lizmat> ?

[11:48] *** stoned75 left
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:08] *** stoned75 joined
[13:08] *** evalable6 left
[13:08] *** linkable6 left
[13:09] *** linkable6 joined
[13:10] *** evalable6 joined
[14:29] *** thundergnat joined
[14:31] <thundergnat> Don't really care for the idea of switching .words to mean .com(/\w+/).

[14:31] <thundergnat> m: say .comb(/\w+/), .split(/\s+/) given <don't won't can't Epsteian-Barr>

[14:31] <camelia> rakudo-moar c7a078dec: OUTPUT: «(don t won t can t Epsteian Barr)(don't won't can't Epsteian-Barr)␤»

[14:40] *** thundergnat left
[15:35] *** epony left
[16:11] *** epony joined
[17:43] *** MasterDuke joined
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[20:35] <Geth> ¦ nqp: usev6++ created pull request #722: [JVM] Keep correct REPR.name for native arrays

[20:35] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/722

[21:51] *** Xliff joined
[23:46] *** linkable6 left
[23:46] *** evalable6 left
[23:48] *** linkable6 joined
[23:49] *** evalable6 joined
