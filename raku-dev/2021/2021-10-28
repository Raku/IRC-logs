[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:34] *** frost joined
[00:39] *** Xliff_ joined
[00:41] *** Xliff left
[01:05] *** _Xliff_ joined
[01:08] *** Xliff_ left
[01:10] *** Xliff_ joined
[01:13] *** _Xliff_ left
[02:01] *** melezhik left
[02:35] *** Xliff_ left
[03:29] *** discord-raku-bot left
[03:29] *** gfldex left
[03:31] *** gfldex joined
[03:49] *** evalable6 joined
[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[07:33] *** evalable6 left
[07:33] *** linkable6 left
[07:35] *** evalable6 joined
[08:34] *** linkable6 joined
[08:49] <lizmat> Files=1349, Tests=117863, 305 wallclock secs (35.20 usr  9.67 sys + 4265.80 cusr 345.74 csys = 4656.41 CPU)
[09:34] *** linkable6 left
[09:34] *** evalable6 left
[09:36] *** evalable6 joined
[09:45] <Geth> Â¦ rakudo: 380c775888 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6
[09:45] <Geth> Â¦ rakudo: Reduce visibility of Str internal classes
[09:45] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/380c775888
[09:59] <Geth> Â¦ rakudo: 15ed1566ad | (Vadim Belman)++ | 2 files
[09:59] <Geth> Â¦ rakudo: Fix X::Assignment::RO message when assignment to Nil is attempted
[09:59] <Geth> Â¦ rakudo: 
[09:59] <Geth> Â¦ rakudo: There was two issues:
[09:59] <Geth> Â¦ rakudo: 
[09:59] <Geth> Â¦ rakudo: - Nil was passing a string with its name as the problematic value
[09:59] <Geth> Â¦ rakudo: - The exception wasn't designed to accept `Nil` as a value
[09:59] <Geth> Â¦ rakudo: 
[09:59] <Geth> Â¦ rakudo: Resolves #4586
[09:59] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/15ed1566ad
[09:59] <Geth> Â¦ rakudo: 1ea47322a2 | (Vadim Belman)++ | src/core.c/Exception.pm6
[09:59] <Geth> Â¦ rakudo: Make X::Assignment::RO $!value required
[09:59] <Geth> Â¦ rakudo: 
[09:59] <Geth> Â¦ rakudo: It was previously initialized with a "value" string.
[09:59] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1ea47322a2
[09:59] <Geth> Â¦ rakudo: 4fece61378 | (Jonathan Worthington)++ (committed using GitHub Web editor) | 2 files
[09:59] <Geth> Â¦ rakudo: Merge pull request #4594 from vrurg/immutable-nil-error
[09:59] <Geth> Â¦ rakudo: 
[09:59] <Geth> Â¦ rakudo: Fix X::Assignment::RO message when assignment to Nil is attempted
[09:59] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4fece61378
[10:23] <lizmat> hmmm... given "X" in a variable, how to get to the stash of the X class without using EVAL
[10:23] <lizmat> m: dd "X::".EVAL.keys
[10:23] <camelia> rakudo-moar 4fece6137: OUTPUT: Â«("Import", "IllegalOnFixedDimensionArray", "Enum", "ControlFlow", "Str", "WheneverOutOfScope", "TooLateForREPR", "Temporal", "Await", "EXPORTHOW", "IO", "Coerce", "Range", "Undeclared", "Exhausted", "TypeCheck", "Promise", "CompUnit", "MustBeParametriâ€¦Â»
[10:24] <lizmat> m: my $x = "X";  ($x ~ "::").EVAL.keys
[10:24] <camelia> rakudo-moar 4fece6137: ( no output )
[10:24] <lizmat> m: my $x = "X";  dd ($x ~ "::").EVAL.keys
[10:24] <camelia> rakudo-moar 4fece6137: OUTPUT: Â«("Promise", "Eval", "Experimental", "Parameter", "OS", "Str", "Composition", "HyperRace", "Match", "Sequence", "MOP", "InvalidType", "Numeric", "DateTime", "Trait", "IllegalOnFixedDimensionArray", "Set", "Value", "Syntax", "Cannot", "Anon", "Assignmenâ€¦Â»
[10:35] *** linkable6 joined
[11:30] *** Altai-man joined
[11:30] *** squashable6 left
[11:32] *** squashable6 joined
[11:38] *** squashable6 left
[11:39] *** squashable6 joined
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:35] *** discord-raku-bot joined
[13:19] <vrurg> m: my $x = "X"; say ::($x).WHO.keys
[13:19] <camelia> rakudo-moar 4fece6137: OUTPUT: Â«(NotEnoughDimensions Subscript Attribute Import PoisonedAlias Enum Syntax Lock SecurityPolicy Redeclaration Hash Obsolete Inheritance EXPORTHOW Constructor HyperRace TooLateForREPR Parameter StubCode Eval Backslash OutOfRange Mixin TooManyDimensions Pâ€¦Â»
[13:19] <vrurg> lizmat: did you mean this ^^
[13:35] *** evalable6 left
[13:35] *** linkable6 left
[13:43] *** melezhik joined
[14:34] <[Tux]> Drum-roll please â€¦
[14:34] <[Tux]> Rakudo v2021.10-17-g4fece6137 (v6.d) on MoarVM 2021.10-15-g51bff712c
[14:34] <[Tux]> csv-test-xs-20      0.368 -  0.373
[14:34] <[Tux]> test-t --race       0.932 -  0.938
[14:34] <[Tux]> csv-ip5xs           1.424 -  1.529
[14:34] <[Tux]> test-t              1.534 -  1.541
[14:34] <[Tux]> csv-parser          4.000 -  4.019
[14:34] <[Tux]> test                6.795 -  7.012
[14:34] <[Tux]> test-t-20 --race    7.786 -  7.966
[14:34] <[Tux]> csv-ip5xs-20       15.142 - 15.695
[14:34] <[Tux]> test-t-20          22.415 - 22.618
[14:34] <[Tux]>  5 2019-07-18 11:00:10 test-t 1.621
[14:34] <[Tux]>  4 2019-04-29 10:24:11 test-t 1.605
[14:34] <[Tux]>  3 2019-04-20 18:37:45 test-t 1.594
[14:34] <[Tux]>  2 2021-10-28 16:32:08 test-t 1.541
[14:34] <[Tux]>  1 2021-10-28 16:30:08 test-t 1.534
[14:35] <[Tux]> CONGRATULATIONS ALL YOU HARDWORKING PEOPLE!
[14:38] <Altai-man> [Tux]++ # diligently measuring things
[14:40] <MasterDuke> nice
[14:45] <timo> wowie
[14:48] <Geth> Â¦ rakudo/megamorphic-handlers: 0412a81f85 | (Jonathan Worthington)++ | 2 files
[14:48] <Geth> Â¦ rakudo/megamorphic-handlers: Fix typos
[14:48] <Geth> Â¦ rakudo/megamorphic-handlers: review: https://github.com/rakudo/rakudo/commit/0412a81f85
[15:06] <japhb> Where's a good place for uploading temporary *images*?  (Like gists, but for screenshots)
[15:09] <MasterDuke> spectacle has an option to anonymously upload a screenshot to imgur 
[15:19] <japhb> https://imgur.com/a/ew0Unqd -- looks like you need to click to zoon
[15:19] <japhb> *zoom in
[15:25] <[Tux]> See also file://localhost/work/www/Talks/CSV6/speed4.html
[15:25] <[Tux]> https://tux.nl/Talks/CSV6/speed4.html
[15:31] *** patrickb joined
[15:35] <japhb> Interestingly, I also see similarly-shaped improvements for test-t-20 and test-t-20 --race, but *not* for test-t --race (or at least, not enough to counteract the slowdown over the last quarter).
[15:36] <japhb> [Tux]++  # measuring and tracking for *years*
[15:36] *** evalable6 joined
[15:36] *** linkable6 joined
[15:42] *** Altai-man left
[15:47] *** Xliff joined
[15:50] <lizmat> japhb: test-t --race suffers from increased startup time
[15:51] <japhb> Ah!
[15:51] <japhb> Makes sense then
[15:54] <Geth> Â¦ nqp/dispatcher-replace-arg-syscall: 82594548eb | (Timo Paulssen)++ | src/core/dispatchers.nqp
[15:54] <Geth> Â¦ nqp/dispatcher-replace-arg-syscall: replace drop-arg + insert-arg with replace-arg
[15:54] <Geth> Â¦ nqp/dispatcher-replace-arg-syscall: 
[15:54] <Geth> Â¦ nqp/dispatcher-replace-arg-syscall: in a few dispatchers that nqp uses. Once there is a replace arg with
[15:54] <Geth> Â¦ nqp/dispatcher-replace-arg-syscall: literal values, that could be used in more places.
[15:54] <Geth> Â¦ nqp/dispatcher-replace-arg-syscall: review: https://github.com/Raku/nqp/commit/82594548eb
[16:08] *** patrickz joined
[16:08] *** patrickb left
[16:23] *** Xliff_ joined
[16:26] *** Xliff left
[16:56] *** _Xliff_ joined
[16:58] *** Xliff_ left
[17:02] *** Xliff_ joined
[17:05] *** _Xliff_ left
[17:15] *** patrickz left
[17:40] *** patrickb joined
[17:58] *** patrickb left
[18:03] *** reportable6 left
[18:04] *** reportable6 joined
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable): a8db54a567 | (Elizabeth Mattijsen)++ | src/core.c/IterationBuffer.pm6
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable): Add a IterationBuffer.new(iterable) candidate
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable): 
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable): To facilitate initializing iteration buffers.  Makes
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable): 
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable):     IterationBuffer.new(<a b c d e f g h i j>);
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable): 
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable): about 2x as fast as:
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable): 
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable):     my $b := IterationBuffer.new;
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable):     $b.push($_) for <a b c d e f g h i j>;
[18:52] <Geth> Â¦ rakudo/IterationBuffer.new(iterable):     $b
[18:53] <Geth> Â¦ rakudo/IterationBuffer.new(iterable): review: https://github.com/rakudo/rakudo/commit/a8db54a567
[18:53] <Geth> Â¦ rakudo: lizmat++ created pull request #4599: Add a IterationBuffer.new(iterable) candidate
[18:53] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4599
[19:04] *** evalable6 left
[19:04] *** linkable6 left
[19:05] *** evalable6 joined
[19:06] *** linkable6 joined
[19:14] <Geth> Â¦ rakudo: 0dae67a60d | (Elizabeth Mattijsen)++ | src/core.c/Cool.pm6
[19:14] <Geth> Â¦ rakudo: Make .subst upto 1.9x as fast
[19:14] <Geth> Â¦ rakudo: 
[19:14] <Geth> Â¦ rakudo: Because new-disp allows removal of the nqp::getlexcaller hack in the
[19:14] <Geth> Â¦ rakudo: proto to be able to access the $/ in the caller from a dispatched method.
[19:14] <Geth> Â¦ rakudo: This making it an empty proto, which apparently in new-disp, doesn't
[19:14] <Geth> Â¦ rakudo: even exist call stack-wise.
[19:14] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0dae67a60d
[19:27] <Geth> Â¦ rakudo: 2204c7cbc7 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6
[19:27] <Geth> Â¦ rakudo: Make .match faster by simplifying proto
[19:27] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2204c7cbc7
[19:27] <lizmat> fg
[19:27] <lizmat> oops
[19:30] <[Coke]> -bash: fg: job has terminated
[19:36] <MasterDuke> looks like .trans and .subst-match are likely candidates as well
[19:37] <Geth> Â¦ rakudo: d619e026fa | (Elizabeth Mattijsen)++ | 2 files
[19:37] <Geth> Â¦ rakudo: Make .subst-mutate faster by simplifying proto
[19:37] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d619e026fa
[19:37] <lizmat> actually, that one accidentally also included .trans
[19:55] <lizmat> ugexe: if I have just installed a module with `zef install .`, is it to be expected that the first time an installed script loads that module, that it gets compiled again ?
[19:55] <lizmat> (judging from what I see with --stagestats, which sadly doesn't mention the name of the module being parsed, could that be fixed?)
[19:59] <ugexe> if the script has something like `use lib ...` sure
[19:59] <lizmat> and when it doesn't?
[20:00] <ugexe> well if you install zef and run zef --help you'll see it doesnt recompile anything
[20:06] *** evalable6 left
[20:06] *** linkable6 left
[20:07] *** evalable6 joined
[20:07] *** kjp left
[20:09] *** linkable6 joined
[20:09] *** kjp joined
[20:23] *** kjp left
[20:25] *** kjp joined
[20:25] *** Geth left
[20:25] *** Geth joined
[20:26] *** RakuIRCLogger left
[20:26] *** RakuIRCLogger joined
[20:27] *** TempIRCLogger left
[20:28] *** TempIRCLogger joined
[20:31] *** kjp left
[20:33] *** kjp joined
[20:35] <nine> Actually just use lib shouldn't cause any recompilation. Except if the lib contains some dependency of the installed module
[20:37] <nine> What will happen on the first run is re-checking of dependencies. So the first run will be slower but not terribly much.
[20:38] <lizmat> well..  after a recompile of rakudo, restarting the irc logs server takes about a minute  :-(
[20:42] <nine> Well that is to be expected. In that case we have to recompile all used modules and Cro alone is quite a bit of code
[20:44] <lizmat> yeah... running it with --stagestats shows it's going at least 6 levels deep
[20:54] <Geth> Â¦ nqp/dispatcher-replace-arg-syscall: c9ef29a218 | (Timo Paulssen)++ | src/core/dispatchers.nqp
[20:54] <Geth> Â¦ nqp/dispatcher-replace-arg-syscall: use replace-arg-literal-obj in nqp's dispatchers
[20:54] <Geth> Â¦ nqp/dispatcher-replace-arg-syscall: review: https://github.com/Raku/nqp/commit/c9ef29a218
[20:59] <ugexe> yeah i wasnt quiet clear... i meant `use lib "."` or `use lib "lib"` (which if either was in code installed by `zef install .` would get picked up as a dependency
[21:03] <Geth> Â¦ nqp: timo++ created pull request #745: Dispatcher replace arg syscall
[21:03] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/pull/745
[22:33] *** kjp left
[22:35] *** kjp joined
[22:49] *** dogbert17 joined
[22:49] *** dogbert11 left
[22:56] *** dogbert17 left
[23:03] *** dogbert17 joined
[23:09] *** dogbert17 left
