[00:03] *** quotable6 joined
[00:03] *** greppable6 joined
[00:03] *** committable6 joined
[00:04] *** shareable6 joined
[00:05] *** linkable6 joined
[00:05] *** nativecallable6 joined
[00:05] *** tellable6 joined
[00:05] *** coverable6 joined
[01:43] *** moon-child left
[01:44] *** moon-child joined
[02:03] *** unicodable6 joined
[02:03] *** statisfiable6 joined
[02:04] *** squashable6 joined
[02:05] *** reportable6 joined
[02:13] *** squashable6 left
[02:14] *** squashable6 joined
[03:14] *** evalable6 left
[03:14] *** linkable6 left
[03:19] *** CIAvash left
[03:28] *** squashable6 left
[03:37] *** CIAvash joined
[04:16] *** evalable6 joined
[04:30] *** squashable6 joined
[05:17] *** linkable6 joined
[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[07:33] *** patrickb joined
[08:28] <Geth> ¦ rakudo/Cool.Version: dab7404c93 | (Elizabeth Mattijsen)++ | src/core.c/Cool.pm6
[08:28] <Geth> ¦ rakudo/Cool.Version: Add Cool.Version coercer
[08:28] <Geth> ¦ rakudo/Cool.Version: 
[08:28] <Geth> ¦ rakudo/Cool.Version: There is already a Str.Coercer.  It struck me that coercing a number
[08:28] <Geth> ¦ rakudo/Cool.Version: or a list of numbers to a Version object, would first need coercing
[08:28] <Geth> ¦ rakudo/Cool.Version: to Str.  Whereas we already do other Cool coercers.  Hence this.
[08:28] <Geth> ¦ rakudo/Cool.Version: 
[08:28] <Geth> ¦ rakudo/Cool.Version:    say 42.Version;                 # v42
[08:28] <Geth> ¦ rakudo/Cool.Version:    say (1,2,3).Version;            # v1.2.3
[08:28] <Geth> ¦ rakudo/Cool.Version:    say "42".match(/\d+/).Version;  # v42
[08:28] <Geth> ¦ rakudo/Cool.Version: review: https://github.com/rakudo/rakudo/commit/dab7404c93
[08:29] <Geth> ¦ rakudo: lizmat++ created pull request #4551: Add Cool.Version coercer
[08:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4551
[08:36] <moon-child> hmm, I just tried 'the last expression there, but typoed it: "42".matc(..
[08:36] <moon-child> got suggestions: 'batch', 'Date', 'map', 'Map'
[08:36] <moon-child> but not 'match'
[08:37] <lizmat> interesting
[08:44] <lizmat> Looks like 'match" is the 5th suggestion, and the number of suggestions is limited to 4
[08:44] <lizmat> I have no idea why that ranks lower than "batch"
[08:46] <moon-child> alphabetical ordering, maybe?
[08:47] *** Xliff left
[08:51] *** patrickb left
[08:58] <lizmat> yeah, looks like
[08:58] <lizmat> weird
[08:58] <lizmat> it's working on a hash where the value is supposed to be a numerical value, but it appears it isn't
[09:12] *** patrickb joined
[09:18] *** patrickb left
[09:18] *** patrickb joined
[10:06] <Geth> ¦ rakudo: 0152e3c383 | (Elizabeth Mattijsen)++ | src/core.c/Exception.pm6
[10:06] <Geth> ¦ rakudo: Fix suggested method ordering on not found error
[10:06] <Geth> ¦ rakudo: 
[10:06] <Geth> ¦ rakudo: As moon-child++ noted, "42".matc( did **not** yield 'match' as an
[10:06] <Geth> ¦ rakudo: alternative.  This was caused by the ordering of the suggestions
[10:06] <Geth> ¦ rakudo: to be on the actual (lowercase) string, rather than at the actual
[10:06] <Geth> ¦ rakudo: distance.  And then limiting them to the first 4.
[10:06] <Geth> ¦ rakudo: 
[10:06] <Geth> ¦ rakudo: This commit fixes the ordering, and makes sure that *all* suggestions
[10:06] <Geth> ¦ rakudo: with the same score as the 4th suggestions, will also be shown.
[10:06] <Geth> ¦ rakudo: 
[10:06] <Geth> ¦ rakudo: Fixes #4552
[10:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0152e3c383
[10:07] *** linkable6 left
[10:09] *** linkable6 joined
[10:09] <nine> lizmat: very nice fix :)
[10:14] *** patrickz joined
[10:15] *** patrickb left
[10:22] *** lizmat_ joined
[10:22] *** Geth_ joined
[10:22] *** RakuIRCLogger joined
[10:23] *** TempIRCLogger joined
[10:24] *** RakuIRCLogger_ left
[10:24] *** Geth joined
[10:24] *** TempIRCLogger__ left
[10:24] *** lizmat left
[10:24] *** Geth left
[10:24] *** Geth_ left
[10:25] *** Geth joined
[10:25] *** lizmat_ left
[10:25] *** lizmat joined
[10:46] *** sena_kun joined
[11:29] <Geth> ¦ rakudo: 11fd2d70f5 | (Elizabeth Mattijsen)++ | src/core.c/core_epilogue.pm6
[11:29] <Geth> ¦ rakudo: Deprecate use of $*PERL
[11:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/11fd2d70f5
[11:49] <nine> lizmat: [  434s] # Failed test 'a private method of the same name as the public missing method is not suggested for out-of-class call'
[11:49] <nine> [  434s] # at t/05-messages/01-errors.t line 230
[11:50] <nine> https://build.opensuse.org/public/build/home:niner9:rakudo-git/openSUSE_Leap_15.2/x86_64/rakudo/_log
[11:50] <lizmat> argh, I ran a spectest... not a make test
[11:51] <lizmat> ?   make test is clean for me?
[11:51] <lizmat> ah, it's a flapper
[11:53] <lizmat> ah, it's dependent on hash randomization
[11:54] <lizmat> previously, it was sorting on strings
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:08] <Geth> ¦ rakudo: 569f90eae5 | (Elizabeth Mattijsen)++ | src/core.c/Exception.pm6
[12:08] <Geth> ¦ rakudo: Make sure suggestions are sorted consistently
[12:08] <Geth> ¦ rakudo: 
[12:08] <Geth> ¦ rakudo: Before, they were (erroneously) sorted on the lowercase string value
[12:08] <Geth> ¦ rakudo: only.  0152e3c38303d7239 fixed that, but introduced an inderminate
[12:08] <Geth> ¦ rakudo: ordering on suggestions with the same score.  This commit re-establishes
[12:08] <Geth> ¦ rakudo: the old behaviour with regard to suggestions that have the same score.
[12:08] <Geth> ¦ rakudo: 
[12:08] <Geth> ¦ rakudo: Fixes a flapper in t/05-messages/01-errors.t line 230, nine++ for spotting
[12:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/569f90eae5
[12:12] *** cognominal joined
[14:54] <lizmat> notable6: weekly
[14:54] <notable6> lizmat, 1 note: 2021-09-29T17:14:09Z <lizmat>: https://6guts.wordpress.com/2021/09/29/the-new-moarvm-dispatch-mechanism-is-here/
[14:54] <lizmat> notable6: weekly reset
[14:54] <notable6> lizmat, Moved existing notes to “weekly_2021-10-06T14:54:27Z”
[15:09] <MasterDuke> lizmat: fyi https://github.com/rakudo/rakudo/commit/11fd2d70f5 causes a bunch of fails in a spectest because some roast tests us $*PERL
[15:10] * lizmat looks
[15:11] <MasterDuke> t/spec/S29-context/eval.t and t/spec/APPENDICES/A03-older-specs/01-misc.t
[15:21] <Geth> ¦ roast: 7399cd50f6 | (Elizabeth Mattijsen)++ | 9 files
[15:21] <Geth> ¦ roast: Fix issues caused by deprecation of $*PERL
[15:21] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/7399cd50f6
[15:22] <lizmat> MasterDuke++
[15:29] <Geth> ¦ roast: f137ddd399 | (Elizabeth Mattijsen)++ | 4 files
[15:29] <Geth> ¦ roast: It's no longer a Perl version
[15:29] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/f137ddd399
[15:47] <Geth> ¦ rakudo: MasterDuke17++ created pull request #4554: Potential simplification to working with suggestions for misspellings
[15:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4554
[15:48] <MasterDuke> lizmat: i don't have strong feelings about ^^^, feel free to close if you'd like to keep the code as is
[15:58] * lizmat commented :-)
[17:04] <Geth> ¦ rakudo: c99ffc51fe | (Daniel Green)++ | src/core.c/Exception.pm6
[17:04] <Geth> ¦ rakudo: Consistently use a number for value in suggestions hash
[17:04] <Geth> ¦ rakudo: 
[17:04] <Geth> ¦ rakudo: This is probably what I intended when I originally added suggestions
[17:04] <Geth> ¦ rakudo: for methods, but I just didn't notice sometimes it was a number and
[17:04] <Geth> ¦ rakudo: sometimes it was a StrDistance.
[17:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c99ffc51fe
[17:04] <Geth> ¦ rakudo: 9e6b1cc729 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/Exception.pm6
[17:04] <Geth> ¦ rakudo: Merge pull request #4554 from MasterDuke17/potential_simplification_for_suggestion_handling
[17:04] <Geth> ¦ rakudo: 
[17:04] <Geth> ¦ rakudo: Potential simplification to working with suggestions for misspellings
[17:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9e6b1cc729
[17:05] *** discord-raku-bot left
[17:06] *** discord-raku-bot joined
[17:14] *** patrickz left
[17:17] *** patrickb joined
[17:37] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/10/06/2021-40-its-here/
[17:47] *** sena_kun left
[17:48] <MasterDuke> lizmat: fyi, i didn't get the rakudo jvm backend building. i just got the nqp jvm backend passing its tests
[17:48] <lizmat> aha... ok
[17:49] <lizmat> updated   # MasterDuke++
[17:49] <MasterDuke> lizmat++
[18:02] *** reportable6 left
[18:18] *** [Coke]_ joined
[18:20] *** [Coke] left
[19:38] <Geth> ¦ rakudo: nige123++ created pull request #4555: Raku is a legally registered trademark now in the USA, UK and Europe.
[19:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4555
[19:59] *** Xliff joined
[20:03] *** reportable6 joined
[20:18] <Geth> ¦ rakudo: 4bca3e65a1 | (Nigel Hamilton)++ | src/Perl6/Compiler.nqp
[20:18] <Geth> ¦ rakudo: Raku is a legally registered trademark now in the USA, UK and Europe.
[20:18] <Geth> ¦ rakudo: 
[20:18] <Geth> ¦ rakudo: More details can be found here:
[20:18] <Geth> ¦ rakudo: 
[20:18] <Geth> ¦ rakudo: https://news.perlfoundation.org/post/raku-foundation-and-tm-update
[20:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4bca3e65a1
[20:18] <Geth> ¦ rakudo: 57997147ef | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/Perl6/Compiler.nqp
[20:18] <Geth> ¦ rakudo: Merge pull request #4555 from nige123/raku-is-a-registered-trademark-now
[20:18] <Geth> ¦ rakudo: 
[20:18] <Geth> ¦ rakudo: Raku is a legally registered trademark now in the USA, UK and Europe.
[20:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/57997147ef
[20:20] <Geth> ¦ rakudo: 59debb4e71 | (Elizabeth Mattijsen)++ | src/Perl6/Compiler.nqp
[20:20] <Geth> ¦ rakudo: Capitalize Programming Language
[20:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/59debb4e71
[20:32] *** [Coke]_ is now known as [Coke]
[20:44] *** patrickb left
[21:44] *** linkable6 left
[21:44] *** evalable6 left
[21:44] *** linkable6 joined
[21:45] *** evalable6 joined
[22:45] *** linkable6 left
[22:45] *** evalable6 left
[22:46] *** evalable6 joined
[23:46] *** linkable6 joined
