[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:12] <japhb> Done
[01:05] *** linkable6 left
[01:05] *** evalable6 left
[01:06] *** linkable6 joined
[02:06] *** linkable6 left
[02:08] *** linkable6 joined
[05:00] *** bartolin_ left
[05:00] *** lucs left
[05:00] *** samcv left
[05:00] *** bartolin joined
[05:00] *** lucs joined
[05:01] *** samcv joined
[05:06] *** evalable6 joined
[06:02] *** reportable6 left
[07:05] *** reportable6 joined
[08:20] *** djinni`_ left
[08:25] *** djinni` joined
[09:38] *** |Tux| joined
[09:45] *** |Tux| left
[09:53] *** |Tux| joined
[09:55] *** |Tux| left
[09:56] *** |Tux| joined
[10:19] <Geth> ¦ rakudo/megamorphic-handlers: 11 commits pushed by (Jonathan Worthington)++
[10:19] <Geth> ¦ rakudo/megamorphic-handlers: review: https://github.com/rakudo/rakudo/compare/203f9afb4dc8...23ae6f1411cc
[10:30] <Geth> ¦ rakudo: jnthn++ created pull request #4591: Better cope with megamorphic callsites after new-disp
[10:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4591
[10:30] <Geth> ¦ rakudo: 560ff8c68b | (Jonathan Worthington)++ | src/Perl6/Actions.nqp
[10:30] <Geth> ¦ rakudo: Lift $!do reading out of `for` loop body
[10:30] <Geth> ¦ rakudo: 
[10:30] <Geth> ¦ rakudo: Which avoids a tiny bit of cost every iteration of a statement-level
[10:30] <Geth> ¦ rakudo: `for` loop.
[10:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/560ff8c68b
[10:32] <Geth> ¦ rakudo: 99bc766e2d | (Vadim Belman)++ (committed using GitHub Web editor) | src/core.c/Routine.pm6
[10:32] <Geth> ¦ rakudo: Add is-wrapped method to Routine (#4579)
[10:32] <Geth> ¦ rakudo: 
[10:32] <Geth> ¦ rakudo: The method was added with previous attempt to fix dispatching and
[10:32] <Geth> ¦ rakudo: correspondingly was specced in S06-advanced/dispatching.t. Makes sense
[10:33] <Geth> ¦ rakudo: 
[10:33] <Geth> ¦ rakudo: The method was added with previous attempt to fix dispatching and
[10:33] <Geth> ¦ rakudo: correspondingly was specced in S06-advanced/dispatching.t. Makes sense
[10:33] <Geth> ¦ rakudo: as an implementation independent way of determining if a routine is
[10:33] <Geth> ¦ rakudo: wrapped.
[10:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/99bc766e2d
[10:33] *** linkable6 left
[10:34] *** linkable6 joined
[10:47] *** Altai-man joined
[11:52] *** evalable6 left
[11:52] *** linkable6 left
[11:52] *** linkable6 joined
[11:53] *** evalable6 joined
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:04] <Geth> ¦ nqp: 9ba4f1e51d | (Stefan Seifert)++ | src/vm/moar/QAST/QASTRegexCompilerMAST.nqp
[12:04] <Geth> ¦ nqp: Fix compilation of dispatch to routines with non-standard native result types
[12:04] <Geth> ¦ nqp: 
[12:04] <Geth> ¦ nqp: For non-64-bit (or unsigned) native result types we need to use a 64 bit temp
[12:04] <Geth> ¦ nqp: register as required by the op and coerce it to the register kind prescribed by
[12:04] <Geth> ¦ nqp: the called routine's return signature.
[12:04] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/9ba4f1e51d
[12:04] <Geth> ¦ nqp: a0f725873f | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/vm/moar/QAST/QASTRegexCompilerMAST.nqp
[12:04] <Geth> ¦ nqp: Merge pull request #744 from Raku/fix-native-result-dispatch
[12:04] <Geth> ¦ nqp: 
[12:04] <Geth> ¦ nqp: Fix compilation of dispatch to routines with non-standard native resu…
[12:04] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/a0f725873f
[12:06] <Geth> ¦ rakudo: a8c579b6fd | (Elizabeth Mattijsen)++ | 7 files
[12:06] <Geth> ¦ rakudo: Remove tai-offset-nanos from CORE::.keys
[12:06] <Geth> ¦ rakudo: 
[12:06] <Geth> ¦ rakudo: This constant is an implementation detail and should not be visible
[12:06] <Geth> ¦ rakudo: outside of the sub that needs it.
[12:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a8c579b6fd
[12:06] <Geth> ¦ rakudo: 736ffd2281 | (Jonathan Worthington)++ (committed using GitHub Web editor) | 7 files
[12:06] <Geth> ¦ rakudo: Merge pull request #4584 from rakudo/no-tai-offset-nanos
[12:06] <Geth> ¦ rakudo: 
[12:06] <Geth> ¦ rakudo: Remove tai-offset-nanos from CORE::.keys
[12:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/736ffd2281
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: 6bd955e6ea | (Stefan Seifert)++ | 2 files
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: Fix unnecessary boxing by routines with native return types
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: 
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: Commit 3cc9d765b2b350c9d15d0164ed53a9914b333afb caused a regression that made
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: us box natively typed return values of called routines. Before this the
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: optimizer copied the return type from the routine to the call QAST::Op node.
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: After the type got added to the QAST::Want node instead. This made code-gen
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: always emit invoke_o/dispatch_o instead of natively typed versions.
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: 
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: Fix by copying the type to both the QAST::Op and QAST::Want nodes. However we
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: don't do so for lvalue routines as those must return containers that can be
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: assigned into.
[12:09] <Geth> ¦ rakudo/fix-native-result-dispatch: review: https://github.com/rakudo/rakudo/commit/6bd955e6ea
[12:28] *** ggoebel joined
[12:45] *** frost left
[12:56] <Geth> ¦ rakudo: 6bd955e6ea | (Stefan Seifert)++ | 2 files
[12:56] <Geth> ¦ rakudo: Fix unnecessary boxing by routines with native return types
[12:56] <Geth> ¦ rakudo: 
[12:56] <Geth> ¦ rakudo: Commit 3cc9d765b2b350c9d15d0164ed53a9914b333afb caused a regression that made
[12:56] <Geth> ¦ rakudo: us box natively typed return values of called routines. Before this the
[12:56] <Geth> ¦ rakudo: optimizer copied the return type from the routine to the call QAST::Op node.
[12:56] <Geth> ¦ rakudo: After the type got added to the QAST::Want node instead. This made code-gen
[12:56] <Geth> ¦ rakudo: always emit invoke_o/dispatch_o instead of natively typed versions.
[12:56] <Geth> ¦ rakudo: 
[12:56] <Geth> ¦ rakudo: Fix by copying the type to both the QAST::Op and QAST::Want nodes. However we
[12:56] <Geth> ¦ rakudo: don't do so for lvalue routines as those must return containers that can be
[12:56] <Geth> ¦ rakudo: assigned into.
[12:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6bd955e6ea
[12:56] <Geth> ¦ rakudo: a3c68bdf56 | (Jonathan Worthington)++ (committed using GitHub Web editor) | 2 files
[12:56] <Geth> ¦ rakudo: Merge pull request #4589 from rakudo/fix-native-result-dispatch
[12:56] <Geth> ¦ rakudo: 
[12:57] <Geth> ¦ rakudo: Fix unnecessary boxing by routines with native return types
[12:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a3c68bdf56
[13:16] <|Tux|> Rakudo v2021.10-5-g736ffd228 (v6.d) on MoarVM 2021.10-6-g444367cea
[13:16] <|Tux|> csv-test-xs-20      0.371 -  0.372
[13:16] <|Tux|> test-t --race       1.024 -  1.055
[13:16] <|Tux|> csv-ip5xs           1.413 -  1.421
[13:16] <|Tux|> test-t              1.652 -  1.667
[13:16] <|Tux|> csv-parser          4.451 -  4.577
[13:16] <|Tux|> test                7.276 -  7.406
[13:16] <|Tux|> test-t-20 --race    8.361 -  9.099
[13:16] <|Tux|> csv-ip5xs-20       15.840 - 16.011
[13:16] <|Tux|> test-t-20          24.415 - 24.662
[14:01] *** melezhik joined
[14:12] *** ggoebel left
[14:38] <lizmat> notable6: weeklt
[14:38] <notable6> lizmat, No notes for “weeklt”
[14:38] <lizmat> notable6: weekly
[14:38] <notable6> lizmat, 7 notes: https://gist.github.com/1961d098422624a1da86676e69638ebe
[14:47] *** ggoebel joined
[14:56] *** jdv left
[14:56] *** jdv joined
[16:40] <lizmat> notable6: weekly reset
[16:40] <notable6> lizmat, Moved existing notes to “weekly_2021-10-25T16:40:07Z”
[17:13] *** |Tux| left
[17:45] *** Altai-man left
[17:49] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/10/25/2021-43-thank-you/
[18:02] *** reportable6 left
[19:02] *** linkable6 left
[19:02] *** evalable6 left
[19:04] *** linkable6 joined
[19:05] *** reportable6 joined
[19:19] *** ggoebel left
[19:57] *** ggoebel joined
[20:03] *** evalable6 joined
[20:26] <nine> Reading through https://stackoverflow.com/questions/69693235/how-to-execute-raku-script-from-interpreter I'm somewhat confused that none of the answering people realized that the obvious answer is `use`. The poster wants "functions and libraries in the script to be available". They're just using different terminology, but what they're after is simple module loading.
[20:59] <Geth> ¦ roast: 3f0d09bdcf | (Vadim Belman)++ | S06-advanced/dispatching.t
[20:59] <Geth> ¦ roast: Rename is_wrapped -> is-wrapped
[20:59] <Geth> ¦ roast: 
[20:59] <Geth> ¦ roast: Followup to rakudo/rakudo#4580.
[20:59] <Geth> ¦ roast: 
[20:59] <Geth> ¦ roast: Also added a test to make sure that `is-wrapped` is false after the last
[20:59] <Geth> ¦ roast: unwrap.
[21:00] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/3f0d09bdcf
[21:00] <Geth> ¦ roast: 97a5f779f0 | (Vadim Belman)++ (committed using GitHub Web editor) | S06-advanced/dispatching.t
[21:00] <Geth> ¦ roast: Merge pull request #763 from vrurg/routine-is_wrapped
[21:00] <Geth> ¦ roast: 
[21:00] <Geth> ¦ roast: Rename is_wrapped -> is-wrapped
[21:00] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/97a5f779f0
[21:00] *** linkable6 left
[21:01] *** linkable6 joined
[21:01] <Geth> ¦ rakudo: 4273818705 | (Vadim Belman)++ | 3 files
[21:01] <Geth> ¦ rakudo: Make enums and Bool throw on .new
[21:01] <Geth> ¦ rakudo: 
[21:01] <Geth> ¦ rakudo: Enums cannot be instantiated. Though it was technically possible prior
[21:01] <Geth> ¦ rakudo: to this commit, the outcomes were misleading.
[21:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4273818705
[21:01] <Geth> ¦ rakudo: d37b111861 | (Vadim Belman)++ (committed using GitHub Web editor) | 3 files
[21:01] <Geth> ¦ rakudo: Merge pull request #4580 from vrurg/disable-enum-instantiation
[21:01] <Geth> ¦ rakudo: 
[21:01] <Geth> ¦ rakudo: Make enums and Bool throw on .new
[21:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d37b111861
[21:01] <Geth> ¦ roast: a54d2cb566 | (Vadim Belman)++ | 2 files
[21:01] <Geth> ¦ roast: Add tests for enums throwing on .new
[21:01] <Geth> ¦ roast: 
[21:01] <Geth> ¦ roast: In support of rakudo/rakudo#4580
[21:01] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/a54d2cb566
[21:01] <Geth> ¦ roast: 749ce35b2a | (Vadim Belman)++ (committed using GitHub Web editor) | 2 files
[21:01] <Geth> ¦ roast: Merge pull request #762 from vrurg/disable-enum-instantiation
[21:01] <Geth> ¦ roast: 
[21:01] <Geth> ¦ roast: Add tests for enums throwing on .new
[21:01] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/749ce35b2a
[21:02] *** linkable6 left
[21:02] *** linkable6 joined
[21:30] *** ggoebel left
[22:27] *** melezhik left
