[01:15] *** kvw_5_ joined
[01:18] *** kvw_5 left
[04:01] *** ilogger2 joined
[06:31] *** domidumont joined
[06:35] *** zostay left
[06:36] *** kawaii joined
[06:37] *** zostay joined
[07:42] *** Geth joined
[07:42] *** LizBot joined
[07:52] *** LizBot left
[07:52] *** LizBot joined
[08:07] <Geth> ¦ rakudo/REPL-now: 7116b95079 | (Elizabeth Mattijsen)++ | 10 files

[08:07] <Geth> ¦ rakudo/REPL-now: Turn REPL.here into just "repl"

[08:07] <Geth> ¦ rakudo/REPL-now: 

[08:07] <Geth> ¦ rakudo/REPL-now: As suggested by jnthn.  Since this is now a globally visible sub,

[08:07] <Geth> ¦ rakudo/REPL-now: make sure the local tests are adapted for it.

[08:07] <Geth> ¦ rakudo/REPL-now: review: https://github.com/rakudo/rakudo/commit/7116b95079

[08:10] *** sena_kun joined
[08:16] *** donaldh joined
[09:29] <Geth> ¦ rakudo/REPL-now: 6acd314aa7 | (Elizabeth Mattijsen)++ | src/Perl6/Optimizer.nqp

[09:29] <Geth> ¦ rakudo/REPL-now: Add &repl to the poison list

[09:29] <Geth> ¦ rakudo/REPL-now: 

[09:29] <Geth> ¦ rakudo/REPL-now: This makes the REPL in:

[09:29] <Geth> ¦ rakudo/REPL-now: 

[09:29] <Geth> ¦ rakudo/REPL-now:     my $a = 42; repl; say $a

[09:29] <Geth> ¦ rakudo/REPL-now: 

[09:29] <Geth> ¦ rakudo/REPL-now: actually know about $a, and allow it to be changed, and see the result

[09:29] <Geth> ¦ rakudo/REPL-now: of the change afterwards.  jnthn++ for the hint.

[09:29] <Geth> ¦ rakudo/REPL-now: review: https://github.com/rakudo/rakudo/commit/6acd314aa7

[09:35] <nwc10> lizmat: `10 ** $exponent` where `my int $exponent = $value.abs.log(10).floor;` - that's going to be pow_i() ?

[09:36] <nwc10> um, I guess I can answer that with gdb

[09:36] <lizmat> I think you want to ask that MasterDuke ?

[09:36] <nwc10> it was your printf code :-)

[09:36] <nwc10> but I can answer my own question with gdb

[09:36] <lizmat> ah, you mean in RakuAST ?

[09:36] <nwc10> yes

[09:37] <lizmat> pretty sure I didn't come up with that myself

[09:37] <nwc10> it's certainly much cleaner and clearer than the current NQP code

[09:37] <lizmat> and it should be much faster, as it actually builds code to be run

[09:38] <lizmat> rather than interpret over and over again

[09:41] <nwc10> answer: OP(pow_i): {

[09:41] <nwc10> so yes, this is better

[09:46] * lizmat is quite in a different place right now

[09:46] <lizmat> nwc10: so I believe you  :-)

[09:47] *** evalable6 joined
[09:47] *** linkable6 joined
[09:48] <nwc10> me too

[09:58] <Geth> ¦ rakudo/REPL-now: ff87a1d9f6 | (Elizabeth Mattijsen)++ | src/core.c/REPL.pm6

[09:58] <Geth> ¦ rakudo/REPL-now: Don't show the intro when called from code

[09:58] <Geth> ¦ rakudo/REPL-now: review: https://github.com/rakudo/rakudo/commit/ff87a1d9f6

[10:13] <Geth> ¦ rakudo/new-disp: 101a2c06ed | (Jonathan Worthington)++ | src/vm/moar/dispatchers.nqp

[10:13] <Geth> ¦ rakudo/new-disp: Implement many-level callsame with multi dispatch

[10:13] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/101a2c06ed

[11:00] <releasable6> Next release in ≈3 days and ≈7 hours. 2 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[11:02] <sena_kun> releasable6, status

[11:02] <releasable6> sena_kun, Next release in ≈3 days and ≈7 hours. 2 blockers. 0 out of 174 commits logged (⚠ 1 warnings)

[11:02] <releasable6> sena_kun, Details: https://gist.github.com/74cf944df1cb9b655954a58232527431

[12:36] <tbrowder> hi, i'm getting compile failures during build of rakudo with a PR and having trouble finding the trouble spot in single file that was changed.

[12:38] <tbrowder> any clever ideas to track down the exact source line causing the trouble (chnged file is 'src/core.c/DateTime.pm6')?

[12:39] <sena_kun> tbrowder, not sure if anybody can help without trace of the error posted somewhere.

[12:42] <tbrowder> i will update the pr and put error output in a gist later to day.

[12:43] <tbrowder> i was just hoping there was some new trick to narrow down the line number of source

[12:43] <tbrowder> thnx

[12:48] <lizmat> tbrowder: compilation errors in the setting are tricky  :-)

[12:49] <lizmat> you can maybe check in gen/moar/CORE.c.setting ?

[13:07] <tbrowder> ok, thnx

[13:23] <tbrowder> lizmat: that did it, THNX! the line number in the "trace" was exactly the one i suspected in the gen/moar/CORE.c.setting.

[13:24] <tbrowder> i looked into adding some more info in the tooling years ago but got lost in the forest.

[13:25] <lizmat> yeah... I've worked on that a lot about 5 years ago... 

[13:26] <lizmat> believe me, it was way worse before  :-)

[13:27] <tbrowder> anyhoo, pressing on...

[14:48] <Geth> ¦ rakudo: codesections++ created pull request #4327: Minimal fix for MAIN usage regression from #4278

[14:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4327

[14:48] *** linkable6 left
[14:50] *** linkable6 joined
[15:25] *** softmoth joined
[15:53] <nine> m: m: class A is Str { method foo() { dd } }; my \Str = A; my $a = "bar"; $a.foo

[15:53] <camelia> rakudo-moar 596ccef3b: OUTPUT: «===SORRY!===␤No compile-time value for Str␤»

[15:53] <nine> linkable6: is this ^^^ the failure mode of putting A into a module?

[16:05] *** domidumont left
[16:16] <lizmat> no

[16:16] <lizmat> but lemme doublecheck

[16:19] <lizmat> argh... PEBCAK

[16:19] <lizmat> it just works

[16:20] <lizmat> if you do Map.new( (Str => A) ) rather than Map.new(Str => A) in EXPORT

[16:20] <lizmat> nine ^^^

[16:23] <Geth> ¦ nqp/new-disp: dcd7b6cd95 | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[16:23] <Geth> ¦ nqp/new-disp: Map assertparamcheck op

[16:23] <Geth> ¦ nqp/new-disp: 

[16:23] <Geth> ¦ nqp/new-disp: So far it was only emitted during parameter compilation, but it'll be

[16:23] <Geth> ¦ nqp/new-disp: useful to have it available more generally.

[16:23] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/dcd7b6cd95

[16:23] <Geth> ¦ nqp/new-disp: f14c148548 | (Jonathan Worthington)++ | t/moar/53-dispatch.t

[16:23] <Geth> ¦ nqp/new-disp: Test dispatcher-resume-on-bind-failure

[16:23] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/f14c148548

[16:45] <lizmat> bisectable6: dd True.pairs

[16:45] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[16:46] <bisectable6> lizmat, Output on all releases: https://gist.github.com/5c505e552e4d357087f14d8ea2c6ba81

[16:46] <bisectable6> lizmat, Bisecting by output (old=2021.03 new=596ccef) because on both starting points the exit code is 0

[16:46] <bisectable6> lizmat, bisect log: https://gist.github.com/660c914c7a3f86d47e3a900bf39d9306

[16:46] <bisectable6> lizmat, (2021-03-05) https://github.com/rakudo/rakudo/commit/615030d279d9caba6bacb397107387cd6aaef410

[16:46] <bisectable6> lizmat, Output on all releases and bisected commits: https://gist.github.com/affcd8e0b9292b1a1c90887111991b69

[16:59] <Geth> ¦ rakudo/new-disp: 41c2d4cea5 | (Jonathan Worthington)++ | src/vm/moar/dispatchers.nqp

[16:59] <Geth> ¦ rakudo/new-disp: Handle `where` in multi-dispatch with new-disp

[16:59] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/41c2d4cea5

[17:35] <Geth> ¦ rakudo: ad81b98065 | (Tom Browder)++ (committed using GitHub Web editor) | INSTALL.md

[17:35] <Geth> ¦ rakudo: Add more help with trouble-shooting build problems

[17:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ad81b98065

[17:40] *** maggotbrain joined
[18:00] *** jmerelo joined
[18:10] *** jmerelo left
[18:13] *** Xliff joined
[18:14] <Xliff> o/

[18:14] <Xliff> Is there a Capture::Tiny equivalent for Raku?

[18:15] <nwc10> \o

[18:15] <nwc10> er, "Raku" I think :-)

[18:15] <nwc10> oh wait, sorry

[18:15] <nwc10> I'm not thinking

[18:15] <Xliff> IE - I would like to redirect STDOUT to a Str

[18:15] <nwc10> it was a sensible question.

[18:15] <nwc10> *I* got confused -  thought it was another module

[18:15] <nwc10> I don't know. I'm aware of all the pain one needs to go through to make these things work (in Perl 5)

[18:19] <sena_kun> Xliff, maybe IO::Capture::Simple?

[18:20] *** MasterDuke joined
[18:24] *** japhb left
[18:31] *** domidumont joined
[18:32] *** softmoth left
[18:57] *** squashable6 joined
[19:22] <Geth> ¦ nqp/sprintf-tweaks: bfaea65d9c | (Nicholas Clark)++ | src/HLL/sprintf.nqp

[19:22] <Geth> ¦ nqp/sprintf-tweaks: Hoist the repeated calculation in `stringify-to-precision2` to a variable.

[19:22] <Geth> ¦ nqp/sprintf-tweaks: 

[19:22] <Geth> ¦ nqp/sprintf-tweaks: The difference between `10` and `10.0` makes no difference in this context.

[19:22] <Geth> ¦ nqp/sprintf-tweaks: review: https://github.com/Raku/nqp/commit/bfaea65d9c

[19:26] *** lucasb joined
[19:30] *** MasterDuke left
[19:35] <Xliff> sena_kun: Thanks. Already looking into that.

[20:05] *** domidumont left
[20:06] *** domidumont joined
[20:06] *** domidumont left
[21:29] <vrurg> greppable6: add_phaser

[21:29] <greppable6> vrurg, 11 lines, 5 modules: https://gist.github.com/672889ce5604148f45f335e82209777e

[21:51] *** rba left
[21:51] *** rba_ joined
[21:52] *** rba_ is now known as rba

[21:56] *** MasterDuke joined
[22:39] *** softmoth joined
[23:36] *** lucasb left
[23:37] *** b2gills joined
