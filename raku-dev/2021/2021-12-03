[00:02] *** reportable6 left
[00:53] <Geth> ¦ DBIish: 3b633577a3 | (Rod Taylor)++ | META6.json

[00:53] <Geth> ¦ DBIish: Show up in a DBDish search on modules.raku.org

[00:53] <Geth> ¦ DBIish: review: https://github.com/raku-community-modules/DBIish/commit/3b633577a3

[01:04] *** reportable6 joined
[02:04] *** evalable6 left
[02:04] *** linkable6 left
[02:06] *** linkable6 joined
[02:07] *** evalable6 joined
[03:00] <releasable6> Next release in ≈1 day and ≈15 hours. 4 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:07] *** evalable6 left
[03:07] *** linkable6 left
[04:07] *** evalable6 joined
[04:09] *** linkable6 joined
[06:02] *** reportable6 left
[07:10] <[Tux]> jphb, I know that TumbleWeed did, but I did not check 15.3

[07:15] <[Tux]> TumbleWeed changed "executable" to "pie executable", but 15.3 did not

[08:05] *** reportable6 joined
[08:45] *** discord-raku-bot left
[08:46] *** discord-raku-bot joined
[10:32] <Geth> ¦ rakudo: f029ac8330 | (Elizabeth Mattijsen)++ | src/core.c/ThreadPoolScheduler.pm6

[10:32] <Geth> ¦ rakudo: Minimal change for fix on MacOS Monterey

[10:32] <Geth> ¦ rakudo: 

[10:32] <Geth> ¦ rakudo: This is basically the patch that jnthn suggested in:

[10:32] <Geth> ¦ rakudo: 

[10:32] <Geth> ¦ rakudo:    https://github.com/rakudo/rakudo/issues/4657#issuecomment-983576970

[10:32] <Geth> ¦ rakudo: 

[10:33] <Geth> ¦ rakudo: but with the small change that nqp::cpucores is only run once before

[10:33] <Geth> ¦ rakudo: <…commit message has 8 more lines…>

[10:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f029ac8330

[11:10] *** evalable6 left
[11:10] *** linkable6 left
[11:40] *** Altai-man joined
[12:02] *** reportable6 left
[12:02] *** patrickb joined
[12:11] *** evalable6 joined
[12:13] *** discord-raku-bot left
[12:13] *** discord-raku-bot joined
[12:39] <Geth> ¦ rakudo: 24333b1128 | (Elizabeth Mattijsen)++ | src/core.c/Pair.pm6

[12:39] <Geth> ¦ rakudo: Remove an unnecessary decont on a hot path

[12:39] <Geth> ¦ rakudo: 

[12:39] <Geth> ¦ rakudo: This is basically a revert of 97020cb342 from 2015.  I don't think

[12:39] <Geth> ¦ rakudo: this is still a problem on the JVM backend.

[12:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/24333b1128

[13:13] *** linkable6 joined
[13:47] <lizmat> m: my @a = 1..3; my @b = <a b c>; dd $_ for  @a Z[&slip] @b   # feels to me this should slip ?

[13:47] <camelia> rakudo-moar 5e02f4624: OUTPUT: «slip(1, "a")␤slip(2, "b")␤slip(3, "c")␤»

[13:48] *** frost left
[13:48] <lizmat> m: my @a = 1..3; my @b = <a b c>; dd $_ for (@a Z @b).map: *.Slip   # feels meh

[13:48] <camelia> rakudo-moar 5e02f4624: OUTPUT: «1␤"a"␤2␤"b"␤3␤"c"␤»

[14:03] *** reportable6 joined
[14:12] <gfldex> m: my @a = 1..3; my @b = <a b c>; my @c = @a Z[&slip] @b; dd @c;

[14:12] <camelia> rakudo-moar 5e02f4624: OUTPUT: «Array @c = [slip(1, "a"), slip(2, "b"), slip(3, "c")]␤»

[14:12] <gfldex> lizmat: that should properly slip for sure. The for loop should not, because it for-loops over a Seq.

[14:12] <gfldex> As I understand it, Slips are resolved at assignment.

[14:15] <lizmat> otoh, I think zip is supposed to keep the number of elements of the longest list

[14:15] <lizmat> I was thinking of adding a :slip parameter to roundrobin()

[15:07] <patrickb> o/

[15:07] <patrickb> I'm working on a small side project where I try to embedd a rakudo (basically a mod_rakudo apache plugin).

[15:08] <patrickb> Now I'm unsure what the sane way to pass control from the C side to raku code is.

[15:09] <patrickb> I could either use nativecall to pass a raku callbackfunction to a native C function and then do all back and forth via this function.

[15:10] <patrickb> (That's what Inline::Perl6 does)

[15:11] <patrickb> Or I could try to somehow call a raku function from C directly. I think there is no prior art for this approach.

[15:14] <patrickb> The only thing that somehow sounded like this is somehow possible is the src/core/frame MVM_frame_dispatch_from_c function.

[15:15] <patrickb> I guess the NativeCall route is the safer bet to take.

[15:16] <patrickb> Hm. I just realize this is probably a discussion for #raku...

[15:16] * patrickb moves there

[15:50] <Geth> ¦ rakudo/roundrobin-slip: 422f46cbb8 | (Elizabeth Mattijsen)++ | 2 files

[15:50] <Geth> ¦ rakudo/roundrobin-slip: Add :slip named argument to roundrobin()

[15:50] <Geth> ¦ rakudo/roundrobin-slip: 

[15:50] <Geth> ¦ rakudo/roundrobin-slip: When set, it will generate separrate values from the lists, rather

[15:50] <Geth> ¦ rakudo/roundrobin-slip: than Lists.  Basically, the same as:

[15:50] <Geth> ¦ rakudo/roundrobin-slip: 

[15:50] <Geth> ¦ rakudo/roundrobin-slip:     roundrobin(...).map: *.Slip

[15:50] <Geth> ¦ rakudo/roundrobin-slip: 

[15:50] <Geth> ¦ rakudo/roundrobin-slip: but much more effcient as no intermediate Lists / Slips need to be

[15:51] <Geth> ¦ rakudo/roundrobin-slip: created.

[15:51] <Geth> ¦ rakudo/roundrobin-slip: review: https://github.com/rakudo/rakudo/commit/422f46cbb8

[15:51] <Geth> ¦ rakudo: lizmat++ created pull request #4663: Add :slip named argument to roundrobin()

[15:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4663

[15:51] <lizmat> gfldex ^^

[16:10] *** gfldex left
[16:10] *** discord-raku-bot left
[18:01] *** Altai-man left
[18:02] *** reportable6 left
[19:03] *** reportable6 joined
[20:49] *** Hello69 joined
[20:50] <Hello69> At https://modules.raku.org/, click on "Feeling Lucky", get error.

[20:50] <Hello69> Perhaps you want to hard code the link to somewhere?

[20:50] <Hello69> Good luck.

[20:50] <Hello69> Bye

[20:50] *** Hello69 left
[20:53] *** discord-raku-bot joined
[20:55] *** discord-raku-bot left
[20:57] *** discord-raku-bot joined
[21:03] *** gfldex joined
[21:09] <gfldex> timo: I got a few heapsnapshots of the RAM eating discord bot available under: https://www.dropbox.com/s/xpglmmfwtjev43e/rakubot-heapsnapshots.tar?dl=0

[21:10] <gfldex> timo: there are 2 sessions. Look at the time when the snapshots where created.

[21:21] <timo> i seem to recall you rebuilt moar with zstd support, did that somehow not work perhaps?

[21:48] <timo> in any case, the heapanalyzer is not reading the file right :\

[21:48] <timo> the first one i tried at least

[21:49] <timo> multiple of them

[22:24] <gfldex> timo: I will try again with libzstd

[22:35] <timo> sorry about the trouble

[22:35] <timo> not sure how it broke tbh

[22:42] <gfldex> No biggy. Im more then happy to help make "production ready" work for bigger values of "production".

[22:52] *** discord-raku-bot left
[23:00] <releasable6> Next release in ≈19 hours. 4 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:08] *** Guest58 joined
[23:18] *** Guest58 left
[23:56] *** Colt left
[23:58] *** Colt joined
