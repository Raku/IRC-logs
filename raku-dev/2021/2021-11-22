[00:02] *** reportable6 left
[00:02] *** reportable6 joined
[01:27] *** frost joined
[04:04] *** Colt2 joined
[04:04] *** Colt2 left
[04:04] *** Colt2 joined
[04:05] *** Colt left
[04:06] *** Colt2 left
[04:07] *** Colt joined
[05:54] *** ugexe left
[05:54] *** camelia left
[05:55] *** ugexe joined
[05:57] *** camelia joined
[06:02] *** reportable6 left
[07:02] *** linkable6 left
[07:02] *** sourceable6 left
[07:02] *** squashable6 left
[07:02] *** nativecallable6 left
[07:02] *** bloatable6 left
[07:02] *** bisectable6 left
[07:02] *** quotable6 left
[07:02] *** statisfiable6 left
[07:02] *** unicodable6 left
[07:02] *** notable6 left
[07:02] *** evalable6 left
[07:02] *** coverable6 left
[07:02] *** shareable6 left
[07:02] *** tellable6 left
[07:02] *** greppable6 left
[07:02] *** benchable6 left
[07:02] *** committable6 left
[07:02] *** releasable6 left
[07:03] *** unicodable6 joined
[07:03] *** reportable6 joined
[07:04] *** notable6 joined
[07:04] *** greppable6 joined
[07:04] *** coverable6 joined
[07:04] *** bloatable6 joined
[07:04] *** linkable6 joined
[07:05] *** statisfiable6 joined
[07:05] *** benchable6 joined
[07:05] *** tellable6 joined
[07:10] <Geth> Â¦ rakudo: patrickbkr self-assigned Missing download signature public key  https://github.com/rakudo/rakudo/issues/4642

[08:05] *** evalable6 joined
[08:05] *** shareable6 joined
[08:05] *** quotable6 joined
[08:05] *** squashable6 joined
[09:05] *** releasable6 joined
[09:05] *** committable6 joined
[09:28] *** tbrowder left
[09:28] *** zostay left
[09:28] *** leont left
[09:29] *** kawaii_ left
[09:29] *** SmokeMachine_ joined
[09:29] *** SmokeMachine left
[09:29] *** SmokeMachine_ is now known as SmokeMachine

[09:30] *** kawaii_ joined
[09:31] *** leont joined
[09:31] *** tbrowder joined
[09:32] *** zostay joined
[10:03] *** nativecallable6 joined
[10:04] *** bisectable6 joined
[10:18] <lizmat> Files=1349, Tests=117873, 304 wallclock secs (34.47 usr  9.31 sys + 4240.12 cusr 341.90 csys = 4625.80 CPU)

[11:04] *** sourceable6 joined
[11:39] *** Altai-man joined
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[13:16] *** frost left
[15:21] *** Colt left
[15:32] *** patrickb joined
[15:43] *** Kaiepi left
[15:59] *** Altai-man left
[16:51] *** patrickb left
[16:51] *** patrickb joined
[16:57] *** patrickb left
[16:58] *** patrickb joined
[17:03] *** patrickb left
[17:04] *** patrickb joined
[17:07] *** patrickb left
[17:08] *** patrickb joined
[17:09] *** patrickb left
[17:10] *** patrickb joined
[17:14] *** patrickb left
[17:14] *** patrickb joined
[17:15] *** patrickb left
[17:24] *** rypervenche left
[17:58] *** rypervenche joined
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:29] *** squashable6 left
[18:30] *** squashable6 joined
[19:21] <lizmat> PSA: the Rakudo Weekly News will be published tomorrow, 23 November 2021

[19:52] *** gfldex left
[19:52] *** gfldex joined
[19:58] <[Tux]> Rakudo v2021.10-124-g6fce35ba8 (v6.d) on MoarVM 2021.10-111-gbd83921de

[19:58] <[Tux]> csv-test-xs-20      0.406 -  0.407

[19:58] <[Tux]> csv-ip5xs           0.857 -  0.860

[19:58] <[Tux]> test-t --race       0.942 -  0.974

[19:58] <[Tux]> test-t              1.637 -  1.662

[19:58] <[Tux]> csv-parser          4.030 -  4.199

[19:58] <[Tux]> csv-ip5xs-20        5.355 -  5.640

[19:58] <[Tux]> test                6.918 -  7.300

[19:58] <[Tux]> test-t-20 --race    7.432 -  7.852

[19:58] <[Tux]> test-t-20          24.210 - 25.499

[21:06] *** Kaiepi joined
[21:06] <Xliff>  Getting this from recently recompiled rakudo: 

[21:06] <Xliff> Cannot resolve caller print(Any:U: BOOTStr); none of these signatures match:

[21:06] <Xliff>     (Mu: *%_)

[21:07] <Xliff> That BOOTStr has me guessing it's not my codE?

[21:21] <timo> also looks like it's being called on an undefined object

[21:22] <timo> --xll-exceptiff should give a hint

[21:32] <Geth> Â¦ DBIish/rbt.large-result-performance: 63dee22844 | (Rod Taylor)++ | 3 files

[21:32] <Geth> Â¦ DBIish/rbt.large-result-performance: Improve performance of large results

[21:32] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[21:32] <Geth> Â¦ DBIish/rbt.large-result-performance: By handling the type selection once per query instead of once per record, quite a bit of time is shaved off the conversion in MoarVM 2021.10.

[21:32] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[21:32] <Geth> Â¦ DBIish/rbt.large-result-performance: For this sample bit of code, execution time goes from 70 seconds to 45 seconds. While a good improvement, similar code in Perl runs in a sub-second time using DBD::Pg.

[21:32] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[21:32] <Geth> Â¦ DBIish/rbt.large-result-performance:   my constant $records = 1_000_000;

[21:32] <Geth> Â¦ DBIish/rbt.large-result-performance: <â€¦commit message has 7 more linesâ€¦>

[21:32] <Geth> Â¦ DBIish/rbt.large-result-performance: review: https://github.com/raku-community-modules/DBIish/commit/63dee22844

[21:35] <Geth> Â¦ DBIish/rbt.large-result-performance: 8242f14278 | (Rod Taylor)++ | 3 files

[21:35] <Geth> Â¦ DBIish/rbt.large-result-performance: Improve performance of large results

[21:35] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[21:35] <Geth> Â¦ DBIish/rbt.large-result-performance: By handling the type selection once per query instead of once per record, quite a bit of time is shaved off the conversion in MoarVM 2021.10.

[21:35] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[21:35] <Geth> Â¦ DBIish/rbt.large-result-performance: For this sample bit of code, execution time goes from 70 seconds to 45 seconds. While a good improvement, similar code in Perl runs in a sub-second time using DBD::Pg.

[21:35] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[21:35] <Geth> Â¦ DBIish/rbt.large-result-performance:   my constant $records = 1_000_000;

[21:35] <Geth> Â¦ DBIish/rbt.large-result-performance: <â€¦commit message has 7 more linesâ€¦>

[21:35] <Geth> Â¦ DBIish/rbt.large-result-performance: review: https://github.com/raku-community-modules/DBIish/commit/8242f14278

[21:57] <Geth> Â¦ DBIish/rbt.large-result-performance: 6e747c5ca3 | (Rod Taylor)++ | 3 files

[21:57] <Geth> Â¦ DBIish/rbt.large-result-performance: Improve performance of large results

[21:57] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[21:57] <Geth> Â¦ DBIish/rbt.large-result-performance: By handling the type selection once per query instead of once per record, quite a bit of time is shaved off the conversion in MoarVM 2021.10.

[21:57] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[21:57] <Geth> Â¦ DBIish/rbt.large-result-performance: For this sample bit of code, execution time goes from ~80 seconds to ~40 seconds. While a good improvement, similar code in Perl runs in a sub-second time using DBD::Pg.

[21:57] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[21:57] <Geth> Â¦ DBIish/rbt.large-result-performance:   my constant $records = 1_000_000;

[21:57] <Geth> Â¦ DBIish/rbt.large-result-performance: <â€¦commit message has 9 more linesâ€¦>

[21:57] <Geth> Â¦ DBIish/rbt.large-result-performance: review: https://github.com/raku-community-modules/DBIish/commit/6e747c5ca3

[22:03] <Geth> Â¦ DBIish/rbt.large-result-performance: c656ee5391 | (Rod Taylor)++ | 3 files

[22:03] <Geth> Â¦ DBIish/rbt.large-result-performance: Improve performance of large results

[22:03] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[22:03] <Geth> Â¦ DBIish/rbt.large-result-performance: By handling the type selection once per query instead of once per record, quite a bit of time is shaved off the conversion in MoarVM 2021.10.

[22:03] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[22:03] <Geth> Â¦ DBIish/rbt.large-result-performance: For this sample bit of code, execution time goes from ~80 seconds to ~40 seconds. While a good improvement, similar code in Perl runs in a sub-second time using DBD::Pg.

[22:03] <Geth> Â¦ DBIish/rbt.large-result-performance: 

[22:03] <Geth> Â¦ DBIish/rbt.large-result-performance:   my constant $records = 1_000_000;

[22:03] <Geth> Â¦ DBIish/rbt.large-result-performance: <â€¦commit message has 9 more linesâ€¦>

[22:03] <Geth> Â¦ DBIish/rbt.large-result-performance: review: https://github.com/raku-community-modules/DBIish/commit/c656ee5391

[22:04] <Geth> Â¦ DBIish: c656ee5391 | (Rod Taylor)++ | 3 files

[22:04] <Geth> Â¦ DBIish: Improve performance of large results

[22:04] <Geth> Â¦ DBIish: 

[22:04] <Geth> Â¦ DBIish: By handling the type selection once per query instead of once per record, quite a bit of time is shaved off the conversion in MoarVM 2021.10.

[22:04] <Geth> Â¦ DBIish: 

[22:04] <Geth> Â¦ DBIish: For this sample bit of code, execution time goes from ~80 seconds to ~40 seconds. While a good improvement, similar code in Perl runs in a sub-second time using DBD::Pg.

[22:04] <Geth> Â¦ DBIish: 

[22:04] <Geth> Â¦ DBIish:   my constant $records = 1_000_000;

[22:04] <Geth> Â¦ DBIish: <â€¦commit message has 9 more linesâ€¦>

[22:04] <Geth> Â¦ DBIish: review: https://github.com/raku-community-modules/DBIish/commit/c656ee5391

[22:06] *** evalable6 left
[22:06] *** linkable6 left
[22:07] *** linkable6 joined
[22:54] *** Geth__ joined
[22:54] *** TempIRCLogger left
[22:54] *** Geth left
[22:54] *** Geth__ left
[22:54] *** Geth joined
[22:54] *** lizmat left
[22:55] *** lizmat_ left
[22:56] *** lizmat joined
[23:07] *** evalable6 joined
[23:20] *** squashable6 left
