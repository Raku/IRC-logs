[00:02] *** reportable6 left
[00:03] *** reportable6 joined
[01:27] *** kvw_5 joined
[01:30] *** kvw_5_ left
[01:58] *** linkable6 left
[01:59] *** linkable6 joined
[02:59] *** releasable6 left
[02:59] *** unicodable6 left
[02:59] *** squashable6 left
[02:59] *** nativecallable6 left
[02:59] *** statisfiable6 left
[02:59] *** shareable6 left
[02:59] *** benchable6 left
[02:59] *** reportable6 left
[02:59] *** bloatable6 left
[02:59] *** bisectable6 left
[02:59] *** evalable6 left
[02:59] *** sourceable6 left
[02:59] *** coverable6 left
[02:59] *** greppable6 left
[02:59] *** committable6 left
[02:59] *** quotable6 left
[03:00] *** shareable6 joined
[03:00] *** bloatable6 joined
[03:00] *** unicodable6 joined
[03:00] *** nativecallable6 joined
[03:00] *** squashable6 joined
[03:00] *** evalable6 joined
[03:00] *** quotable6 joined
[03:00] *** benchable6 joined
[03:00] *** statisfiable6 joined
[03:01] *** greppable6 joined
[03:01] *** committable6 joined
[03:01] *** releasable6 joined
[03:01] *** reportable6 joined
[03:01] *** bisectable6 joined
[03:02] *** coverable6 joined
[03:02] *** sourceable6 joined
[03:17] *** b2gills left
[03:17] *** b2gills joined
[04:07] <japhb> Just came across somewhat odd behavior -- I was trying to see how reliable `Supply.interval($int)` is when $int shrinks, so I ran the following:
[04:07] <japhb> raku -e 'my $i = 0; my $int = .002; my $limit = 20; react whenever Supply.interval($int) { done if $limit < now - INIT now; $i++ }; say $i; say $i * $int * 100 / $limit;'
[04:07] <japhb> Varying $int to be some whole number of milliseconds.
[04:08] <japhb> The final number printed in the run is % of expected interval triggers that actually arrived within the time limit.
[04:08] <japhb> As expected, as $int goes from 0.1 down to 0.001, that % falls quite a bit.
[04:09] <japhb> I expected that this would represent random (or at least chaotic) interactions, especially since I'm on a laptop and I can see the core speeds varying all over the place.
[04:09] <japhb> But ... the % arriving is remarkably stable for a given $int.
[04:10] <japhb> Like within 2 parts in 10_000 on my system.
[04:10] <japhb> Which indicates to me really regular, predictable things "stealing time".
[04:11] <japhb> But ... what?
[04:17] *** linkable6 left
[04:17] *** evalable6 left
[04:17] *** evalable6 joined
[04:19] <japhb> Actually at .001 interval, it's a little less stable -- but still within 4 parts per 1_000.
[04:19] *** linkable6 joined
[06:02] *** reportable6 left
[06:02] *** reportable6 joined
[06:28] *** domidumont joined
[07:00] <releasable6> Next release in ‚âà2 days and ‚âà11 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft
[07:07] <nine> japhb: what are the percentages?
[07:08] *** patrickb joined
[07:13] <moon-child> any chance someone can take a look at https://github.com/rakudo/rakudo/pull/4312 ?
[07:22] <nine> moon-child: the change looks innocent enough, but I don't know what our policies on such aliases are or what's the semantic difference between those Unicode symbols :/
[07:26] <lizmat> google seems to be unaware of any semantic difference
[07:27] <lizmat> I already approve the PR, but would like to have jnthn chime in as it would affect Comma e.g.
[07:29] <moon-child> I'm not aware of any difference between them.  Some apls use the small variant, so I got used to the way it looks, is all :P
[07:34] *** LizBot left
[07:36] *** lizmat left
[07:36] *** [Tux] left
[07:39] *** [Tux] joined
[08:01] *** Altai-man_ left
[08:03] *** sena_kun joined
[08:08] *** lizmat joined
[08:22] *** finsternis left
[08:27] *** LizBot joined
[09:19] *** chansen_ left
[09:31] *** MasterDuke left
[09:32] <lizmat> Stuff going on on Freenode: https://gist.github.com/joepie91/df80d8d36cd9d1bde46ba018af497409
[09:32] <lizmat> nothing to worry about yet
[09:34] *** chansen_ joined
[09:38] <moon-child> also https://fuchsnet.ch/freenode-resign-letter.txt, apparently 'no longer a draft'
[09:39] <lizmat> meh, things are moving fast  
[09:53] <Geth> ¬¶ rakudo: d00c7e353d | Moonchild++ | 8 files
[09:53] <Geth> ¬¶ rakudo: Add support for ‚àä and ‚àç as aliases for ‚àà and ‚àã
[09:53] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/d00c7e353d
[09:53] <Geth> ¬¶ rakudo: face292a07 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 8 files
[09:53] <Geth> ¬¶ rakudo: Merge pull request #4312 from moon-chilled/master
[09:53] <Geth> ¬¶ rakudo: 
[09:53] <Geth> ¬¶ rakudo: Add support for ‚àä and ‚àç as aliases for ‚àà and ‚àã
[09:53] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/face292a07
[10:32] <gfldex> After reading freenode-resign-letter.txt I consider myself lucky to live in a country where we have proper laws that properly protect and make running a non-profit cheap and painfree.
[10:33] <gfldex> Please consider https://codeberg.org/ over github.
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:40] <lizmat> afk for a few hours&
[12:47] <leont> It seems like community implosions are fashionable lately -_-
[13:31] *** eaterof is now known as eater
[13:53] <[Coke]> 
[13:53] *** [Coke] left
[13:53] *** [Coke] joined
[13:53] *** [Coke] left
[13:53] *** [Coke] joined
[14:00] <jdv79> [Coke]: are you ok?
[14:00] <[Coke]> yes?
[14:00] <jdv79> cool
[14:00] <[Coke]> Why do you ask?
[14:00] <[Coke]> am I giving a vibe? :)
[14:01] * [Coke] tries to connect to libera.chat and fails.
[14:01] * [Coke] wanders away for $DAYJOB
[14:21] *** gugod left
[14:44] <lizmat> test
[14:44] *** lizmat joined
[14:47] <lizmat> Claiming this channel for the Raku Programming Language community, as a replacement of #raku on Freenode
[14:47] <lizmat> well #raku-dev, actually
[14:53] *** frost-lab left
[14:54] *** domidumont left
[14:54] *** patrickb joined
[14:59] *** patrickb left
[14:59] *** patrickb joined
[15:01] <@jdv> ha
[15:06] <lizmat> welcome :-)
[15:12] *** tonyo joined
[15:20] <Geth> ¬¶ rakudo/rakuast: cdd81b3b6a | (Jonathan Worthington)++ | 2 files
[15:20] <Geth> ¬¶ rakudo/rakuast: Remaining RakuAST nodes for character classes
[15:20] <Geth> ¬¶ rakudo/rakuast: 
[15:20] <Geth> ¬¶ rakudo/rakuast: This adds support for `<[a..z]>` and similar, as well as filling out
[15:20] <Geth> ¬¶ rakudo/rakuast: compilation of addition and subtraction of character classes. Likely
[15:20] <Geth> ¬¶ rakudo/rakuast: there will be the odd detail to work out - there's a lot of semantics in
[15:20] <Geth> ¬¶ rakudo/rakuast: here - but everything tested so far matches with the current compiler
[15:20] <Geth> ¬¶ rakudo/rakuast: frontend.
[15:20] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/cdd81b3b6a
[15:23] *** scc joined
[15:23] *** wereii joined
[15:23] *** branleb joined
[15:24] *** morph joined
[15:24] *** dam4dx joined
[15:25] *** scc left
[15:25] *** wereii left
[15:25] *** dam4dx left
[15:25] *** morph left
[15:25] *** MrJacksonrJ joined
[15:25] *** MrJacksonrJ left
[15:25] *** branleb left
[15:25] *** MylesBorins joined
[15:25] *** zorbash[m] joined
[15:26] *** tstat joined
[15:26] *** bdju joined
[15:26] *** tibbs joined
[15:26] *** relrodgy joined
[15:27] *** zorbash[m] left
[15:27] *** bdju left
[15:27] *** tstat left
[15:27] *** tibbs left
[15:27] *** relrodgy left
[15:27] *** MylesBorins left
[15:27] *** cust joined
[15:27] *** ReinH__oK joined
[15:27] *** teclo- joined
[15:27] *** marble_visions joined
[15:28] <lizmat> wtf
[15:28] *** venug joined
[15:28] *** Ananace[m] joined
[15:28] *** dani- joined
[15:28] *** rme joined
[15:28] *** fancer joined
[15:28] *** soxhlet joined
[15:28] <@jdv> who wants op - i don't do irc ips
[15:28] <@jdv> *ops
[15:29] *** fancer left
[15:29] *** Ananace[m] left
[15:29] *** cust left
[15:29] *** ReinH__oK left
[15:29] *** marble_visions left
[15:29] *** soxhlet left
[15:29] *** venug left
[15:29] *** dani- left
[15:29] *** luny joined
[15:29] *** teclo- left
[15:29] *** rme left
[15:29] <lizmat> jdv I guess this is part of the war going on now
[15:29] *** ced117IQ joined
[15:30] <@jdv> lovely
[15:30] *** AshexEH joined
[15:30] *** protium joined
[15:31] *** fbynite joined
[15:31] *** luny left
[15:31] *** protium left
[15:31] *** PwnHoaX joined
[15:31] *** fbynite left
[15:31] *** AshexEH left
[15:31] *** ced117IQ left
[15:31] *** yoisy[m] joined
[15:31] *** PwnHoaX left
[15:32] *** yoisy[m] left
[15:32] *** Der_Keks joined
[15:33] *** Der_Keks left
[15:33] *** mentor joined
[15:33] *** mentor left
[15:34] *** arkurious joined
[15:34] *** arkurious left
[15:36] *** markin joined
[15:36] *** Pavili0n joined
[15:36] *** markin left
[15:38] *** thunderrd joined
[15:38] *** Pavili0n left
[15:38] *** thunderrd left
[15:40] *** patrickb is now known as patrickbkr
[15:55] *** andinus joined
[15:55] <andinus> m: say "o/"
[15:56] *** andinus left
[16:07] *** patrickb left
[16:07] *** patrickbkr left
[16:16] *** Coke_ joined
[16:28] *** Coke_ is now known as [Coke]
[16:34] *** squashable6 left
[16:35] *** squashable6 joined
[16:54] <tonyo> where can i find this channel now?
[17:04] *** leont joined
[17:12] *** domidumont joined
[17:15] <sena_kun> releasable6, status
[17:15] *** raydiak joined
[17:15] <releasable6> sena_kun, Next release in ‚âà2 days and ‚âà1 hour. There are no known blockers. 0 out of 43 commits logged
[17:15] <releasable6> sena_kun, Details: https://gist.github.com/31c3814f66b82a649dbd0274fbb194ec
[17:16] <AlexDaniel`> please ping me later about the bots if there are any freenode-related changes
[17:20] *** lucs joined
[17:28] <japhb> nine: Sorry, went to bed early last night.  Here's some pulled from my terminal scrollback: .050: 100%, .033: 99.66%, .016: 99.04%, .008: 97.88%, .004: 96.04%, .002: 92.56%, .001: 87.02%
[17:39] <nine> japhb: just paranoid here, but I think $i ought to be an atomicint and the op an atomic inc
[17:46] *** nine joined
[17:48] *** domidumont left
[17:58] *** smarton joined
[18:02] *** reportable6 left
[18:02] <japhb> I thought whenever blocks were supposed to be single-threaded?  I will feel like an idiot if I've just totally misunderstood that.
[18:03] <ugexe> is it react or whenever?
[18:03] <ugexe> i thought it was react
[18:05] *** reportable6 joined
[18:06] <ugexe> i guess it would be both in the later case
[18:06] <japhb> The docs say "Please note that one should keep the code inside the whenever as small as possible, as only one whenever block will be executed at any time. One can use a start block inside the whenever block to run longer running code."  Sounds closer to your explanation, but for something like this I'd probably only trust Word Of Jonathan to be 100% accurate, given he wrote it.  :-)
[18:06] <japhb> Yeah, which brings me back to thinking that I shouldn't *need* to use an atomicint unless something is broken with that guarantee.
[18:07] <tonyo> that doesn't mean whenever is single-threaded
[18:08] <japhb> tonyo: We may be using the terminology slightly differently.  I mean "Only one thread at a time is allowed to be inside the whenever block", though of course it could be different threads entering different iterations.
[18:09] <japhb> And I guess ugexe was saying that that should be "Only one thread at a time is allowed to be inside the react block"
[18:12] <ugexe> closer to only one thread from outside the react block could be inside the react block initializing the handlers... threads can be started inside the react block ala whenever start ... { } of course
[18:13] <tonyo> m: y $u = Supplier.new; my $s = supply { whenever $u.Supply { sleep 5; emit time; }; whenever $u.Supply { sleep 1; emit time; }; }; $s.tap( -> $a { $a.say; } ); say time; $u.emit("hello"); sleep 7;
[18:13] <camelia> rakudo-moar face292a0: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unsupported use of y///.  In Raku please use: tr///.‚ê§at <tmp>:1‚ê§------> 3y7‚èè5 $u = Supplier.new; my $s = supply { whe‚ê§¬ª
[18:13] <tonyo> m: my $u = Supplier.new; my $s = supply { whenever $u.Supply { sleep 5; emit time; }; whenever $u.Supply { sleep 1; emit time; }; }; $s.tap( -> $a { $a.say; } ); say time; $u.emit("hello"); sleep 7;
[18:13] <camelia> rakudo-moar face292a0: OUTPUT: ¬´1621448019‚ê§1621448024‚ê§1621448025‚ê§¬ª
[18:20] *** japhb joined
[18:38] <Geth> ¬¶ nqp: e924473199 | (Daniel Green)++ | 9 files
[18:38] <Geth> ¬¶ nqp: Use Win32 native API to get file changetime on JVM
[18:38] <Geth> ¬¶ nqp: 
[18:38] <Geth> ¬¶ nqp: Windows doesn't support "unix:ctime" when using Files.getAttribute, so
[18:38] <Geth> ¬¶ nqp: instead try calling the Win32 native API. This required upgrading JNA
[18:38] <Geth> ¬¶ nqp: from 4.0.0 to 4.5.0 and adding the JNA platform jar.
[18:38] <Geth> ¬¶ nqp: review: https://github.com/Raku/nqp/commit/e924473199
[18:38] <Geth> ¬¶ nqp: bd9a7a257b | MasterDuke17++ (committed using GitHub Web editor) | 9 files
[18:38] <Geth> ¬¶ nqp: Merge pull request #723 from MasterDuke17/use_native_api_for_changetime_on_windows_for_jvm_backend
[18:38] <Geth> ¬¶ nqp: 
[18:38] <Geth> ¬¶ nqp: Use Win32 native API to get file changetime on JVM
[18:38] <Geth> ¬¶ nqp: review: https://github.com/Raku/nqp/commit/bd9a7a257b
[18:47] *** MasterDuke joined
[18:55] *** MasterDuke left
[18:58] *** MasterDuke joined
[19:28] *** camelia joined
[19:41] *** camelia left
[19:41] *** nine left
[19:41] *** raydiak left
[19:41] *** [Coke] left
[19:41] *** lucs left
[19:41] *** smarton left
[19:41] *** leont left
[19:41] *** lucs joined
[19:41] *** leont joined
[19:41] *** raydiak joined
[19:42] *** [Coke] joined
[19:42] *** brown121407 joined
[19:43] *** brown121407 left
[19:43] *** [Coke] left
[19:43] *** leont left
[19:43] *** lucs left
[19:44] *** leont joined
[19:45] *** camelia joined
[19:46] *** lucs_ joined
[19:46] *** [Coke] joined
[19:50] *** smarton joined
[19:54] *** SmokeMachine joined
[20:08] *** cog left
[20:09] *** cog joined
[20:11] *** raydiak left
[20:11] *** raydiak left
[20:11] *** raydiak joined
[20:12] *** raydiak joined
[20:21] *** djinni` left
[20:23] *** djinni` joined
[20:35] *** camelia left
[20:36] *** camelia joined
[20:37] *** camelia left
[20:52] <MasterDuke> ha! finally figured out the project euler problem i started working on in 2012 that inspired my first perl 6 module in2016 because the builtin .combinations was too slow, and then subsequent first commits to rakudo in 2016 to mildly speedup the builtins
[20:56] *** ugexe joined
[21:00] *** camelia joined
[21:02] <lucs> MasterDuke: Which one?
[21:03] <MasterDuke> 60
[21:03] <lucs> Thanks (just curious)
[21:03] <MasterDuke> "Find the lowest sum for a set of five primes for which any two primes concatenate to produce another prime."
[21:27] *** sjn joined
[21:30] <sjn> hey, I'm looking into getting the #raku channels registered. anyone else thinking in those terms?
[21:32] <tonyo> i think jdv has started that
[21:32] <tonyo> process
[21:33] <sjn> allright, cool
[21:48] <MasterDuke> .ask jnthn i randomly noticed that `for ^4 -> $foo { $foo = 4 }` doesn't give the name of the variable in the error anymore, which bisected to https://github.com/rakudo/rakudo/commit/397263e30faf309f490e4407f0f797ca52682bc7 any idea how we could do the compile-time analysis you mentioned to get it back?
[21:48] <tellable6> MasterDuke, I'll pass your message to jnthn
[21:49] <@jdv> afaik tyil is doing that - i just squatted...
[21:53] <tonyo> üëç
[22:01] *** moon-child left
[22:16] *** moon-child joined
[22:35] *** MasterDuke left
[22:53] <japhb> Who do we even contact for getting orgs and cloaks set up again?
[22:54] <moon-child> apparently email projects@libera.chat
[22:54] <moon-child> https://libera.chat/chanreg#how-to-register-as-a-project
[23:06] *** summerisle left
[23:09] *** summerisle joined
[23:14] *** summerisle left
[23:14] <japhb> moon-child: Thanks, done.
[23:15] *** summerisle joined
[23:15] *** summerisle left
[23:15] *** summerisle_ joined
[23:20] *** summerisle_ is now known as summerisle
[23:20] *** summerisle is now known as summerisle_
[23:21] *** summerisle_ is now known as summerisle
[23:25] *** kawaii_ joined
[23:27] *** sortiz joined
[23:40] *** summerisle left
[23:40] *** summerisle joined
[23:45] *** kawaii_ left
[23:48] *** earenndil joined
[23:48] *** kawaii_ joined
[23:49] *** moon-child left
[23:49] *** earenndil is now known as moon-child
[23:55] *** camelia left
