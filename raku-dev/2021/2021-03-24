[00:01] *** vrurg joined
[00:06] *** vrurg left
[00:16] *** gfldex left
[00:28] *** sena_kun left
[00:32] *** vrurg joined
[01:03] *** HarmtH_ left
[01:12] *** HarmtH joined
[01:13] *** HarmtH left
[01:22] *** frost-lab joined
[01:32] *** HarmtH joined
[01:32] *** gfldex joined
[02:40] *** kvw_5_ joined
[02:43] *** kvw_5 left
[04:25] *** squashable6 left
[04:28] *** squashable6 joined
[04:47] *** epony left
[04:50] *** epony joined
[05:07] *** squashable6 left
[05:08] *** squashable6 joined
[05:23] *** epony left
[05:46] *** MasterDuke left
[05:52] *** epony joined
[06:30] *** softmoth left
[07:04] *** frost-lab left
[07:22] *** nine left
[07:24] *** frost-lab joined
[07:29] *** nine joined
[07:33] *** epony left
[07:35] *** frost-lab48 joined
[07:38] *** sena_kun joined
[07:38] *** frost-lab left
[08:11] *** epony joined
[08:19] *** domidumont joined
[09:20] *** nebuchadnezzar left
[09:21] *** Altai-man_ joined
[09:21] *** sena_kun left
[09:27] *** nebuchadnezzar joined
[10:08] *** lizmat left
[10:22] *** lizmat joined
[10:59] * lizmat misses the sounds of commits merging  :-(

[11:20] *** frost-lab48 left
[11:32] *** frost-lab joined
[12:20] *** HarmtH left
[13:23] *** HarmtH joined
[14:00] *** Kaiepi left
[14:01] *** Kaeipi joined
[14:01] *** Kaeipi left
[14:02] *** Kaeipi joined
[15:00] *** HarmtH left
[15:01] *** domidumont left
[15:02] *** HarmtH joined
[15:02] *** codesect` joined
[15:03] *** HarmtH left
[15:04] *** codesections left
[15:04] *** HarmtH joined
[15:08] <Kaeipi> i have a performance problem with my solution for problem-solving #111

[15:08] <Kaeipi> i have a vague idea of how to fix it, but i'm not sure how to go about things backend-wise

[15:09] <Kaeipi> the gist is, when performing a dns resolution, the backend boxes every single address received from the A and AAAA dns queries made; before, no addresses were being boxed

[15:09] <Kaeipi> how might i box the addresses lazily?

[15:19] <Kaeipi> maybe async dns would be faster...

[15:23] * [Coke] reads jmerelo's SoD proposal and has one takeaway question: YAS has a dba for The Raku Foundation??

[15:46] *** softmoth joined
[16:00] *** JJAtria[m] left
[16:02] <Kaeipi> the boxing doesn't seem to be what's slowing things down... hm

[16:07] *** Kaeipi left
[16:07] *** Kaeipi joined
[16:09] *** Kaeipi left
[16:09] *** Kaeipi joined
[16:36] *** jmerelo joined
[16:37] <jmerelo> Finishing up the Season of docs proposal https://perl-foundation-outreach.github.io/season-of-docs-ideas/proposal-2021

[16:37] <jmerelo> Unless you find something big missing, this is going to be it

[16:38] <[Coke]> jmerelo: is there an announcement somewhere about "The Raku Foundation" ?

[16:40] <codesect`> [Coke]: that's actually still in progress.  Here's the Problem Solving PR about it: https://github.com/Raku/problem-solving/pull/267

[16:40] <[Coke]> Looks like there is a rakufoundation.org website but it's got a sketchy cert and takes you to a login screen

[16:41] <codesect`> there was some back-and-forth in a related issue before that

[16:41] <[Coke]> codesect`: jmerelo's proposal makes it sound much strong than "in progress"

[16:41] <[Coke]> *stronger

[16:42] *** Merfont joined
[16:43] <codesect`> well, it is expected to be very soon.  We've asked YAS (last Friday) to create the DBA, and they indicated that it shouldn't be a problem and that they'd get back to us once it was officially approved 

[16:44] <codesect`> it doesn't yet have a website, but will soon – but it'll be at raku.foundation rather than on a .org domain 

[16:45] * codesect` logs out briefly to get his correct nick

[16:45] *** codesect` left
[16:46] *** Kaeipi left
[16:47] *** unclechu left
[16:50] <jmerelo> [Coke]: it's been approved already by the Perl Foundation, as far as I know.

[16:51] <jmerelo> raku.foundation is already opeative, but pointing at raku.org

[16:52] <jmerelo> [Coke]: so the timing might not be exactly right, but it will happen before the proposal is approved (or rejected)

[16:53] <jmerelo> [Coke]: anyway, if you think that's a problem, just let me know. Also, I've applied, as you have seen, for two volunteer stipends. I would really appreciate if you could help with this, should it be approved.

[17:02] *** unclechu joined
[17:25] *** Merfont left
[17:25] *** Merfont joined
[17:28] *** Kaeipi joined
[17:28] *** Merfont left
[17:57] *** frost-lab left
[18:32] <nwc10> https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=1226&view=logs&jobId=70f6b8a1-f3cf-5727-bd79-d08ddb1caf67&j=5b519533-8a6a-5ec0-9930-bcff75bff664 lets me drill down to "An unexpected error has occurred within this region of the page." "Error: The operation is insecure."

[18:50] *** Kaeipi left
[18:50] *** Kaeipi joined
[19:13] *** vrurg left
[19:16] *** vrurg joined
[19:20] *** jmerelo left
[19:38] *** Kaeipi left
[19:38] *** Kaiepi joined
[21:10] *** Kaiepi left
[21:11] *** Altai-man_ left
[21:11] *** Kaeipi joined
[21:17] <[Coke]> .tell jmerelo - hadn't heard anything about TRF, so was just curious, I trust you on the timing. I cannot guarantee I have any time to support the project, sorry

[21:17] <tellable6> [Coke], I'll pass your message to jmerelo

[21:26] *** MasterDuke joined
[21:44] <[Coke]> where is the match logic for 'a' ~~ /'a'/ ? src/core.c/Match.pm6?

[21:45] <MasterDuke> [Coke]: at what level? i think all the actual regex *implementation* is in nqp

[21:46] <[Coke]> ok

[21:48] *** Kaeipi left
[21:50] *** Kaiepi joined
[21:50] <[Coke]> m: say "fiddle" ~~ /:ignorecase ﬁdd/

[21:50] <camelia> rakudo-moar 726a75e24: OUTPUT: «｢fid｣␤»

[21:51] <[Coke]> Looking at that, the code in NQP does a .fc on the string, but with no regard to the fact that .chars might change. Wonder how hard it would be to track all the cursor information that we have to adjust at that point and update it. If we have to pass it around, that'll be unfun.

[22:33] *** dogbert17 joined
[22:33] *** dogbert12 left
[22:37] *** Xliff joined
[22:38] <Xliff> \o

[22:38] <tellable6> 2021-03-22T13:45:17Z #raku <vrurg> Xliff having an issue for that would be better.

[22:39] <Xliff> Given "sub a ($a, $b, $c) { ... }; a(1, 42, 'Blub')" is there a way to get the arguments a was called with, without the use of the parameters  themselves?

[23:00] *** b2gills left
[23:02] *** dogbert11 joined
[23:06] *** dogbert17 left
[23:19] <[Coke]> m: sub a ($a, $b, $c) { dd DYNAMIC:: }; a(1, 42, 'Blub')

[23:19] <camelia> rakudo-moar 726a75e24: OUTPUT: «PseudoStash.new(("\$!" => Nil,"\$*DISPATCHER" => Mu,"\$/" => Nil,"\$_" => Any,"\$a" => 1,"\$b" => 42,"\$c" => "Blub","\$¢" => Nil))␤»

[23:20] <[Coke]> that's not quite what you're looking for.

[23:25] *** b2gills joined
