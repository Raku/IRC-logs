[00:01] *** reportable6 left
[00:03] *** reportable6 joined
[00:29] *** softmoth left
[00:37] *** epony joined
[01:07] *** titsuki joined
[01:22] *** titsuki left
[01:31] *** frost-lab joined
[01:49] *** kvw_5 joined
[01:52] *** kvw_5_ left
[02:52] *** linkable6 left
[02:52] *** evalable6 left
[02:53] *** evalable6 joined
[02:54] *** linkable6 joined
[03:54] *** greppable6 left
[03:54] *** nativecallable6 left
[03:54] *** committable6 left
[03:54] *** notable6 left
[03:54] *** reportable6 left
[03:54] *** sourceable6 left
[03:54] *** bisectable6 left
[03:54] *** squashable6 left
[03:54] *** coverable6 left
[03:54] *** evalable6 left
[03:54] *** quotable6 left
[03:54] *** releasable6 left
[03:54] *** benchable6 left
[03:54] *** statisfiable6 left
[03:54] *** bloatable6 left
[03:54] *** unicodable6 left
[03:54] *** shareable6 left
[03:54] *** tellable6 left
[03:55] *** benchable6 joined
[03:55] *** tellable6 joined
[03:55] *** releasable6 joined
[03:55] *** sourceable6 joined
[03:55] *** greppable6 joined
[03:56] *** bloatable6 joined
[03:56] *** committable6 joined
[03:56] *** quotable6 joined
[03:56] *** notable6 joined
[03:56] *** coverable6 joined
[03:56] *** evalable6 joined
[03:56] *** squashable6 joined
[03:56] *** statisfiable6 joined
[03:57] *** bisectable6 joined
[03:57] *** reportable6 joined
[03:57] *** nativecallable6 joined
[03:57] *** shareable6 joined
[03:57] *** unicodable6 joined
[06:01] *** reportable6 left
[06:02] *** reportable6 joined
[06:29] *** domidumont joined
[06:29] <japhb> CBOR::Simple 0.0.7 is out and uploaded to zef/fez.  It's mostly a general push towards better performance across the board.

[06:30] <japhb> At HEAD, however, is the first work on packed numarray support, which is 2+ ORDERS OF MAGNITUDE faster than unpacked Num arrays.

[06:31] <moon-child> wow

[06:33] <japhb> Processors REALLY like contiguous blocks of small-power-of-two-sized elements that can be memory managed as one big block.  Turns out that MoarVM does too.  :-)

[06:35] <japhb> I should note that *unpacked* Num arrays are already faster in CBOR::Simple than in JSON::Fast, so that big difference isn't because the unpacked case is particularly slow.  ;-)

[06:38] <japhb> Also, CBOR encoding is smaller than JSON for every case I've tried.  Unfortunately, the work that CBOR does to compress integers costs it a bit -- *unpacked* Int arrays are the one place that CBOR::Simple is about 2-3x slower than JSON::Fast, despite producing ~40% smaller encoded output.

[06:38] <japhb> Thus I'm looking forward to getting packed intarray support in.  :-)

[06:39] <nwc10> IIRC the packed integer format used for MoarVM bytecode was measurable on a profile of loading

[06:39] <japhb> Yeah, not too surprised to hear that.

[08:03] *** Altai-man_ left
[08:26] *** |Tux| left
[09:10] *** dogbert11 left
[09:10] *** dogbert11 joined
[09:28] *** sena_kun joined
[10:28] *** frost-lab left
[11:08] <sena_kun> releasable6, status

[11:08] <releasable6> sena_kun, Next release in ‚âà18 days and ‚âà7 hours. There are no known blockers. 0 out of 14 commits logged

[11:08] <releasable6> sena_kun, Details: https://gist.github.com/d1966fcdc6ae6792cd0de8f70feb2660

[11:09] *** Xliff joined
[11:09] <Xliff> o/

[11:09] <tellable6> 2021-04-30T20:53:54Z #raku <MasterDuke> Xliff what about `for ^5 { once say "first"; .say }`? i.e., `once` instead of `FIRST`

[11:10] <nwc10> \o

[11:10] <Xliff> MasterDuke: Aha! That's what I was looking for. Thanks!!

[11:14] <Xliff> R#4256

[11:14] <Xliff> R4356

[11:15] *** linkable6 left
[11:15] <Xliff> Regarding https://github.com/rakudo/rakudo/issues/4356

[11:15] <Xliff> I'm here for another hour or so if someone wants me to run a piece of code in the environment in question so they don't have to prep it themselves.

[11:16] *** linkable6 joined
[11:33] *** Kaiepi left
[11:39] *** LizBot left
[11:43] *** domidumont left
[12:01] *** reportable6 left
[12:03] *** reportable6 joined
[12:36] <lizmat> notable6: weekly

[12:36] <notable6> lizmat, 1 note: 2021-05-02T17:03:11Z <El_Che>: rakudo-pkg added packages for the newly released fedora 34

[12:38] <lizmat> notable6: weekly reset

[12:38] <notable6> lizmat, Moved existing notes to ‚Äúweekly_2021-05-03T12:38:11Z‚Äù

[13:10] *** lucasb joined
[13:19] <tbrowder> lizmat: module for class DateTime::Julian is looking good. your trick of self.DateTime::new() works like a charm!!

[13:19] <tellable6> 2021-05-02T15:54:05Z #moarvm <lizmat> tbrowder putting it in a DateTime::Julian module would be a good start for code evaluation

[13:34] *** b2gills left
[13:59] *** b2gills joined
[14:23] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/05/03/2021-18-double-comma/

[14:23] <MasterDuke> lizmat: first link (comma announcement is incorrect)

[14:23] <lizmat> wot?

[14:24] <MasterDuke> goes to https://nxadm.github.io/rakudo-pkg/ instead

[14:24] <lizmat> argh.... wordpress!

[14:24] <MasterDuke> i had a misplaced closing paren in my first sentence

[14:25] <lizmat> MasterDuke++ # fixed

[14:37] <MasterDuke> i'm not subscribed to the mailing list but maybe someone who is could chime in to this thread https://www.nntp.perl.org/group/perl.perl6.users/2021/04/msg9878.html¬† and mention that i believe the problem is in libtommath's mp_get_double and the gmp branch fixes it?

[14:59] <sena_kun> lizmat++

[15:00] *** Xliff left
[16:18] <lizmat> MasterDuke: so done

[18:01] *** reportable6 left
[18:03] *** reportable6 joined
[18:18] *** dogbert11 left
[18:24] *** patrickb joined
[18:26] <nwc10> vrurg: are you the author of commit 91ce9a29 - Add a substitute script for `ln -nfs`   Currently it is for AIX only where there is no flag with the same  meaning as `-n`/`-h` in GNU and BSD implementations.

[18:26] <nwc10> in that I'm curious about AIX - you're using Rakudo on JVM on AIX? Or MoarVM?

[18:26] *** linkable6 left
[18:26] *** dogbert17 joined
[18:27] *** linkable6 joined
[18:36] <MasterDuke> lizmat++

[18:38] <vrurg> nwc10: It wasn't for me. There is a closed issue.

[18:41] <nwc10> aha, ItchyPlant

[19:17] <patrickb> o/

[19:17] <nwc10> \o

[19:53] <Geth> ¬¶ rakudo/rakuast: b3cf295238 | (Jonathan Worthington)++ | 3 files

[19:53] <Geth> ¬¶ rakudo/rakuast: RakuAST node for <?{ ... }> and <!{ ... }>

[19:53] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/b3cf295238

[20:32] *** patrickb left
[20:55] *** HarmtH joined
[21:11] <Geth> ¬¶ rakudo/rakuast: 5d4f794124 | (Jonathan Worthington)++ | 3 files

[21:11] <Geth> ¬¶ rakudo/rakuast: RakuAST node for `:my $foo;` style decls in rules

[21:11] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/5d4f794124

[21:40] *** [Coke] left
[22:10] *** softmoth joined
