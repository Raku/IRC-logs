[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[04:39] *** nebuchadnezzar joined
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:19] *** linkable6 left
[06:20] *** linkable6 joined
[07:30] *** patrickb joined
[07:52] <Geth> Â¦ rakudo: 168da39ae2 | (Elizabeth Mattijsen)++ | src/core.c/Iterable.pm6

[07:52] <Geth> Â¦ rakudo: Simplify Iterable eqv Iterable

[07:52] <Geth> Â¦ rakudo: 

[07:52] <Geth> Â¦ rakudo: By removing the specific Positional handling.  This every so lightly

[07:52] <Geth> Â¦ rakudo: improves performance on comparing arrays, while not affecting any

[07:52] <Geth> Â¦ rakudo: other performance.

[07:52] <Geth> Â¦ rakudo: 

[07:52] <Geth> Â¦ rakudo: This also removes the use of AT-POS in eqv handling, making it easier

[07:52] <Geth> Â¦ rakudo: to later introduce proper eqv handling of sparse arrays.

[07:52] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/168da39ae2

[07:53] *** patrickb left
[08:27] *** nebuchadnezzar left
[09:31] *** dogbert11 left
[09:57] <Geth> Â¦ nqp: MasterDuke17++ created pull request #728: Simplify MoarVM backend runner's Makefile template

[09:57] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/pull/728

[10:23] <Geth> Â¦ rakudo/sparse-array-raku: 484baa6a57 | (Elizabeth Mattijsen)++ | 4 files

[10:23] <Geth> Â¦ rakudo/sparse-array-raku: Allow Nil to represent holes in sparse arrays

[10:23] <Geth> Â¦ rakudo/sparse-array-raku: 

[10:23] <Geth> Â¦ rakudo/sparse-array-raku: This commit affects the way arrays are rendered with .raku, and it

[10:23] <Geth> Â¦ rakudo/sparse-array-raku: affects the way Nil is interpreted as a value when initializing an

[10:23] <Geth> Â¦ rakudo/sparse-array-raku: array.

[10:23] <Geth> Â¦ rakudo/sparse-array-raku: 

[10:23] <Geth> Â¦ rakudo/sparse-array-raku: This is achieved by the following conceptual changes:

[10:23] <Geth> Â¦ rakudo/sparse-array-raku: <â€¦commit message has 31 more linesâ€¦>

[10:23] <Geth> Â¦ rakudo/sparse-array-raku: review: https://github.com/rakudo/rakudo/commit/484baa6a57

[10:23] <Geth> Â¦ rakudo: lizmat++ created pull request #4404: Allow Nil to represent holes in sparse arrays

[10:23] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4404

[10:38] *** linkable6 left
[10:38] *** evalable6 left
[10:39] *** evalable6 joined
[10:40] *** linkable6 joined
[11:02] *** morayj joined
[11:56] <lizmat> we currently have no way to force a control exception to happen on another thread, right ?

[12:03] *** reportable6 left
[12:03] *** reportable6 joined
[12:08] <Geth> Â¦ rakudo/repl-control-c: 313f0cc1f4 | (Elizabeth Mattijsen)++ | src/core.c/REPL.pm6

[12:08] <Geth> Â¦ rakudo/repl-control-c: Allow CTRL-c to stop entry in REPL

[12:08] <Geth> Â¦ rakudo/repl-control-c: 

[12:08] <Geth> Â¦ rakudo/repl-control-c: And a second CTRL-c to exit the REPL if nothing else was entered.

[12:08] <Geth> Â¦ rakudo/repl-control-c: 

[12:08] <Geth> Â¦ rakudo/repl-control-c: This in response to #4402.

[12:08] <Geth> Â¦ rakudo/repl-control-c: 

[12:08] <Geth> Â¦ rakudo/repl-control-c: This does *not* achieve the suggested behaviour of being able to

[12:08] <Geth> Â¦ rakudo/repl-control-c: stop a runaway piece of code, as Raku's signal handler runs on a

[12:08] <Geth> Â¦ rakudo/repl-control-c: different thread and we currently do not have a way to force an

[12:08] <Geth> Â¦ rakudo/repl-control-c: exception on anything else but the current thread.  It *does*

[12:09] <Geth> Â¦ rakudo/repl-control-c: allow one to restart entry without having to remove all characters.

[12:09] <Geth> Â¦ rakudo/repl-control-c: review: https://github.com/rakudo/rakudo/commit/313f0cc1f4

[12:09] <Geth> Â¦ rakudo: lizmat++ created pull request #4405: Allow CTRL-c to stop entry in REPL

[12:09] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4405

[12:17] <Geth> Â¦ rakudo/repl-control-c: c52e11dbec | (Elizabeth Mattijsen)++ | src/core.c/REPL.pm6

[12:17] <Geth> Â¦ rakudo/repl-control-c: Don't need to check if signal tap is installed

[12:17] <Geth> Â¦ rakudo/repl-control-c: 

[12:17] <Geth> Â¦ rakudo/repl-control-c: As the REPL loop is actually inside the repl-loop method.

[12:17] <Geth> Â¦ rakudo/repl-control-c: review: https://github.com/rakudo/rakudo/commit/c52e11dbec

[12:51] *** morayj left
[13:03] *** stoned75 joined
[13:04] <stoned75> hi

[13:06] <stoned75> I'm looking at rakudo's Num.Str implementation and I must admit I do not understand how it works :-(

[13:07] <stoned75> reading https://github.com/rakudo/rakudo/blob/master/src/core.c/Num.pm6#L120

[13:08] <stoned75> I understand that a "numeric" is unboxed and directly feeded to p6box_s() which does... a string boxing.

[13:08] <stoned75> but where the stringification occurs ? 

[13:08] <stoned75> in unbox_n() or in p6box_s() ?

[13:18] <stoned75> If I believe https://github.com/rakudo/rakudo/blob/master/docs/ops.markdown#p6box_s it can't be p6box_s(), am I wrong ?

[13:22] <MasterDuke> aiui, nqp sees a num being fed into a register that expects a str, and so calls coerce_ns

[13:24] <MasterDuke> which ends up here https://github.com/MoarVM/MoarVM/blob/master/src/core/coerce.c#L257-L278

[13:24] <stoned75> oooh

[13:25] *** djinni` left
[13:25] *** morayj joined
[13:26] *** djinni` joined
[13:30] <stoned75> I guess MASTCompilerInstance.coerce()/coercion() does this coercion dispatch ?

[13:34] <MasterDuke> yeah https://github.com/Raku/nqp/blob/master/src/vm/moar/QAST/QASTCompilerMAST.nqp#L412-L649

[13:45] <stoned75> Ok I guess I more or less got it. thanks !

[13:46] <MasterDuke> np

[13:53] *** morayj left
[14:33] <Geth> Â¦ nqp: MasterDuke17++ created pull request #729: Remove no longer needed JVM workaround

[14:33] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/pull/729

[15:00] <releasable6> Next release in â‰ˆ4 days and â‰ˆ3 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:06] *** vrurg_ joined
[15:07] *** vrurg left
[15:23] <Geth> Â¦ nqp: e305efcb31 | (Daniel Green)++ | src/HLL/SysConfig.nqp

[15:23] <Geth> Â¦ nqp: Remove no longer needed JVM workaround

[15:23] <Geth> Â¦ nqp: 

[15:23] <Geth> Â¦ nqp: The JVM has been re-bootstrapped and `nqp::execname` now works with it.

[15:23] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/e305efcb31

[15:23] <Geth> Â¦ nqp: 0ac7daada6 | MasterDuke17++ (committed using GitHub Web editor) | src/HLL/SysConfig.nqp

[15:23] <Geth> Â¦ nqp: Merge pull request #729 from MasterDuke17/remove_no_longer_needed_jvm_workaround_in_HLL__SysConfig

[15:23] <Geth> Â¦ nqp: 

[15:23] <Geth> Â¦ nqp: Remove no longer needed JVM workaround

[15:23] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/0ac7daada6

[15:35] *** morayj joined
[16:20] <Geth> Â¦ rakudo/rakuast: 893bb80f03 | (Jonathan Worthington)++ | 3 files

[16:20] <Geth> Â¦ rakudo/rakuast: RakuAST node for s/// and friends

[16:20] <Geth> Â¦ rakudo/rakuast: 

[16:20] <Geth> Â¦ rakudo/rakuast: There's rather a lot of semantics in here, although the implementation

[16:20] <Geth> Â¦ rakudo/rakuast: in the current compiler frontend seems to make things a little more

[16:20] <Geth> Â¦ rakudo/rakuast: complex or less efficient than they could be. Of note:

[16:20] <Geth> Â¦ rakudo/rakuast: 

[16:20] <Geth> Â¦ rakudo/rakuast: * It seems we can emit code to truth-test the `.match` result, rather

[16:20] <Geth> Â¦ rakudo/rakuast: <â€¦commit message has 6 more linesâ€¦>

[16:20] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/893bb80f03

[17:00] <[TuxCM]> Rakudo v2021.05-17-g168da39ae (v6.d) on MoarVM 2021.05-14-g0a62f0c6a

[17:00] <[TuxCM]> csv-test-xs-20      0.370 -  0.373

[17:00] <[TuxCM]> csv-ip5xs           0.836 -  0.859

[17:00] <[TuxCM]> test-t --race       0.882 -  0.943

[17:00] <[TuxCM]> test-t              1.983 -  2.089

[17:00] <[TuxCM]> test                7.393 -  8.511

[17:00] <[TuxCM]> csv-ip5xs-20        8.603 -  8.918

[17:00] <[TuxCM]> test-t-20 --race    9.631 - 10.305

[17:00] <[TuxCM]> csv-parser         26.232 - 26.591

[17:00] <[TuxCM]> test-t-20          34.969 - 35.304

[17:40] *** morayj left
[18:02] *** reportable6 left
[18:05] *** reportable6 joined
[18:15] *** stoned75 left
[20:23] *** rypervenche left
[20:40] *** rypervenche joined
[21:54] *** Voldenet joined
