[01:19] *** kvw_5_ joined
[01:23] *** kvw_5 left
[01:57] *** epony left
[02:41] *** epony joined
[03:49] *** MasterDuke left
[04:17] *** linkable6 left
[04:17] *** chansen_ left
[04:17] *** ugexe left
[04:17] *** zostay left
[04:17] *** tbrowder left
[04:17] *** SmokeMachine left
[04:17] *** nine left
[04:17] *** tyil left
[04:17] *** moon-child left
[04:17] *** commavir left
[04:17] *** nativecallable6 left
[04:17] *** bloatable6 left
[04:17] *** coverable6 left
[04:17] *** shareable6 left
[04:17] *** unicodable6 left
[04:17] *** committable6 left
[04:17] *** sourceable6 left
[04:17] *** quotable6 left
[04:17] *** greppable6 left
[04:17] *** rba left
[04:17] *** summerisle left
[04:17] *** softmoth left
[04:17] *** leont left
[04:17] *** japhb left
[04:17] *** jjatria left
[04:17] *** sena_kun left
[04:17] *** kawaii left
[04:17] *** [Tux] left
[04:17] *** sxmx left
[04:17] *** raydiak left
[04:17] *** dogbert17 left
[04:17] *** literal left
[04:18] *** dogbert17 joined
[04:18] *** linkable6 joined
[04:18] *** softmoth joined
[04:18] *** tyil joined
[04:18] *** sena_kun joined
[04:18] *** kawaii joined
[04:18] *** nine joined
[04:18] *** summerisle joined
[04:18] *** rba joined
[04:18] *** greppable6 joined
[04:18] *** quotable6 joined
[04:18] *** sourceable6 joined
[04:18] *** committable6 joined
[04:18] *** unicodable6 joined
[04:18] *** shareable6 joined
[04:18] *** coverable6 joined
[04:18] *** bloatable6 joined
[04:18] *** nativecallable6 joined
[04:18] *** commavir joined
[04:18] *** moon-child joined
[04:18] *** jjatria joined
[04:18] *** japhb joined
[04:18] *** leont joined
[04:18] *** [Tux] joined
[04:18] *** SmokeMachine joined
[04:18] *** tbrowder joined
[04:18] *** zostay joined
[04:18] *** ugexe joined
[04:18] *** chansen_ joined
[04:18] *** raydiak joined
[04:18] *** sxmx joined
[04:18] *** literal joined
[04:19] *** gugod left
[04:20] *** uzl[m] left
[04:20] *** unclechu left
[04:20] *** kawaii left
[04:21] *** AlexDaniel` left
[04:21] *** patrickbkr[m] left
[04:21] *** gugod joined
[04:23] *** kawaii joined
[04:53] *** patrickbkr[m] joined
[05:02] *** uzl[m] joined
[05:02] *** AlexDaniel` joined
[05:02] *** unclechu joined
[05:26] *** epony left
[05:26] *** epony joined
[07:26] *** sena_kun left
[07:26] *** sena_kun joined
[08:16] *** domidumont joined
[10:05] *** Kaiepi left
[10:07] *** Kaiepi joined
[10:22] <sena_kun> m: my Array enum PageSizes ¬´:Letter[0,0,612,792] :Tabloid[0,0,792,1224]¬ª; dd (PageSizes::Letter).value.pairs; dd (PageSizes::Letter).pairs;

[10:22] <camelia> rakudo-moar e2ec1607f: OUTPUT: ¬´(0 => 0, 1 => 0, 2 => 612, 3 => 792).Seq‚ê§Ambiguous call to 'pairs(PageSizes: )'; these signatures all match:‚ê§  (Enumeration: *%_)‚ê§  (List:D: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:22] <sena_kun> bisectable6, my Array enum PageSizes ¬´:Letter[0,0,612,792] :Tabloid[0,0,792,1224]¬ª; dd (PageSizes::Letter).value.pairs; dd (PageSizes::Letter).pairs;

[10:22] <bisectable6> sena_kun, Will bisect the whole range automagically because no endpoints were provided, hang tight

[10:22] <bisectable6> sena_kun, Output on all releases: https://gist.github.com/16b1014d7de3a231f481c4925d4b0159

[10:22] <bisectable6> sena_kun, Bisecting by exit code (old=2021.03 new=e2ec160). Old exit code: 0

[10:22] <bisectable6> sena_kun, bisect log: https://gist.github.com/223dba45e4b44e3d9a22ead7dc070b2a

[10:22] <bisectable6> sena_kun, (2021-03-05) https://github.com/rakudo/rakudo/commit/615030d279d9caba6bacb397107387cd6aaef410

[10:22] <bisectable6> sena_kun, Output on all releases and bisected commits: https://gist.github.com/97d2fc1d9c3b5ea115f9801b5d3d44c2

[10:28] <lizmat> sena_kun++

[10:30] <sena_kun> lizmat++ for actually working on things. :)

[10:30] <lizmat> sena_kun: pretty sure you're also working on things  :-)

[10:59] *** sena_kun left
[11:02] <dogbert17> m: my $a = sprintf "%.*f", 7, 0.00000012; say $a

[11:02] <camelia> rakudo-moar e2ec1607f: OUTPUT: ¬´0.0000001‚ê§¬ª

[11:03] <dogbert17> hmm, I don't immediately understand this directive

[11:04] <dogbert17> lizmat: do you know off the top of your head?

[11:05] <lizmat> * allows you to specify the field width as a parameter ?

[11:05] <lizmat> rather than in the format ?

[11:05] <dogbert17> m: my $a = sprintf "%.*f", 7, 0.00000012 for ^10

[11:05] <camelia> rakudo-moar e2ec1607f: ( no output )

[11:06] <dogbert17> what happens if you run the above on your machine but iterating 1000 times instead?

[11:06] <dogbert17> on my system BAD things happen

[11:09] <lizmat> around ~90 iterations it starts to reliably hang on my machine

[11:10] <dogbert17> after a while the oom killer might kick in

[11:10] <lizmat> doesn't happen with optmizations switched off

[11:10] *** MasterDuke joined
[11:10] <dogbert17> the above is my golf attempt of the problem nwc10 reported in /spec/S32-temporal/juliandate.t

[11:11] <lizmat> looks like a good golf to me  :-)

[11:12] <lizmat> correction: with --optimize=0, it only happens later

[11:13] <dogbert17> should it be reported as a rakudo or moarvm problem, what do you think?

[11:13] <lizmat> feels like a MoarVM issue to me

[11:14] <dogbert17> I suspect that as well

[11:16] <dogbert17> if spesh is turned of the problem vanishes

[11:16] <dogbert17> *off

[11:23] *** sena_kun joined
[11:24] <dogbert17> https://github.com/MoarVM/MoarVM/issues/1466

[11:28] *** [Tux] left
[11:30] <dogbert17> the problem is not present on the 2021.03 release

[11:30] *** titsuki joined
[11:30] <lizmat> yeah, I think we'd noticed that before

[11:31] <dogbert17> cool, I wonder if our bots can bisect this, I'm afraid they will crash

[11:31] *** [Tux] joined
[11:32] <lizmat> dogbert17: devise a piece of code that will timeout after X seconds and then mark that as a failure ?

[11:32] <dogbert17> that is cheating :-)

[11:36] <dogbert17> bisect: old=2021.03 new=HEAD my $p = Promise.at(now + 2).then({ exit 1 }); my $day-frac = sprintf "%.*f", 7, 0.00000012 for ^500

[11:36] <bisectable6> dogbert17, Bisecting by exit signal (old=2021.03 new=e2ec160). Old exit signal: 0 (None)

[11:37] <bisectable6> dogbert17, bisect log: https://gist.github.com/9d1fb7d5099be52867a55bed9162d0bd

[11:37] <bisectable6> dogbert17, (2021-04-08) https://github.com/rakudo/rakudo/commit/a9490436e649df95b34ff8b0c33482e94c7c765d

[11:37] <lizmat> i wouldn't be surprised the decont logging merge is to blame

[11:37] <lizmat> it was also responsible for 25% performance loss on test-t

[11:39] * dogbert17 investigates while making lunch

[11:47] *** titsuki left
[11:49] <dogbert17> lizmat: your guess was correct

[11:49] <lizmat> yeah. MasterDuke was saying something else was going on, causing the slowdown

[11:49] <lizmat> so the extra logging was a trigger for other problems, not the cause of the slowdown itself

[11:50] <lizmat> is what I took away from that discussion

[11:51] <dogbert17> issue updated with our findings

[11:52] <lizmat> dogbert17++

[12:09] <timotimo> japhb: i don't know of a cross-program profiling solution, but concating / demuxing Log::Timeline data from multiple processes could be interesting, and of course there's the concepts of how OpenTelemetry / OpenTracing work, where you pass the ID of an "interval" (forgot their name) with requests so you can correlate things happening across multiple processes or machines properly

[12:16] <timotimo> but that does require you to have start and end points put in your code that happen to give you a good idea of where to look closer

[12:17] <timotimo> i do believe telemeh gives you output for when native calls happen, which includes all the TLS stuff, and i think socket reading/writing is also in there

[12:19] <timotimo> telemeh output from two processes is probably not correlatable? i don't know how rdtscp and context switches and different cpu cores interact exactly

[14:07] <[Tux]> Rakudo v2021.03-149-g95d61d684 (v6.d) on MoarVM 2021.03-46-ga29a9cc12

[14:07] <[Tux]> csv-test-xs-20      0.378 -  0.382

[14:07] <[Tux]> csv-ip5xs           0.853 -  0.874

[14:07] <[Tux]> test-t --race       0.929 -  1.016

[14:07] <[Tux]> test-t              2.354 -  2.437

[14:07] <[Tux]> test                7.896 -  8.255

[14:07] <[Tux]> csv-ip5xs-20        8.877 -  9.221

[14:07] <[Tux]> test-t-20 --race   11.290 - 11.344

[14:07] <[Tux]> csv-parser         25.840 - 25.844

[14:07] <[Tux]> test-t-20          40.804 - 41.867

[14:08] <[Tux]> https://tux.nl/Talks/CSV6/images/test-t-d30.png

[14:13] *** squashable6 left
[14:13] <lizmat> [Tux]: the problem has been localized, the revert / fix just didn't make it to Rakudo yet

[14:14] *** squashable6 joined
[14:16] <[Tux]> üëçüèª

[14:17] <[Tux]> is optimizing breaks's into non-exceptions where possible still on the todo?

[14:18] <lizmat> it is afaik

[14:18] <[Tux]> top

[14:18] <lizmat> well, not near the top  :-)

[14:19] <[Tux]> I know. Lemme just keep hope(s)

[14:19] <lizmat> I think you will find Text::CSV to be a lot faster after newdisp lands

[14:20] <[Tux]> I also note that RT#122892, RT#123597, RT#123980, RT#61602, and RT#127358 still show unresolved in my local test suite

[14:21] <lizmat> perhaps refer to them in the new repo ?

[14:21] <[Tux]> I could do so. What repo shall I put them in as issue?

[14:23] <[Tux]> https://github.com/rakudo/rakudo/issues ‚Üê that one?

[14:23] <lizmat> no

[14:23] <lizmat> you don't need to add issues, just change the reference

[14:25] <lizmat> I'm trying to find the mapper for that

[14:25] <[Tux]> So change RT#122892 to issue#3430 ?

[14:27] <[Tux]> Which shows as resolved. /me looks into this specific issue

[14:29] <lizmat> 123597 now lives at: https://github.com/Raku/old-issue-tracker/issues/3645

[14:29] <lizmat> 123980 now lives at: https://github.com/Raku/old-issue-tracker/issues/3717

[14:30] <[Tux]> https://tux.nl/Files/rt#122892.pl

[14:30] <lizmat> not found?

[14:30] <lizmat> 61602 now lives at: https://github.com/Raku/old-issue-tracker/issues/520

[14:31] <lizmat> 127358 now lives at: https://github.com/Raku/old-issue-tracker/issues/5082

[14:31] <lizmat> I'm not sure where 122892 lives

[14:32] <[Tux]> https://tux.nl/Files/issue-3430.pl

[14:33] <lizmat> download ?

[14:35] <[Tux]> https://gist.github.com/Tux/110e7b8e266b5f5d900b8d0d060018e4

[14:42] <lizmat> I think the error message explains ?

[14:42] <lizmat> also: s/.perl/.raku/  :-)

[14:46] <[Tux]> done and pushed

[14:49] <[Tux]> https://tux.nl/Files/20210410164859.png - I'll see if I can understand the reds

[14:49] <[Tux]> now to the kitchen. my turn to cook

[15:22] *** domidumont left
[16:16] *** MasterDuke left
[16:20] *** MasterDuke joined
[16:27] *** domidumont joined
[16:30] <lizmat> m: dd Nil.IO    # this feels weird, yet making that return Nil breaks installation of core modules  :-(

[16:30] <camelia> rakudo-moar 5c6a80c28: OUTPUT: ¬´IO::Path‚ê§¬ª

[16:37] *** domidumont left
[17:08] *** softmoth left
[17:08] *** softmoth joined
[17:27] *** b2gills left
[17:55] *** cog left
[17:55] *** tobs left
[17:55] *** Voldenet left
[17:55] *** [Coke] left
[17:55] *** tailgate left
[17:55] *** lucs left
[17:55] *** jraspass left
[17:56] *** cog joined
[17:56] *** tobs joined
[17:56] *** Voldenet joined
[17:56] *** tailgate joined
[17:56] *** jraspass joined
[17:56] *** [Coke] joined
[17:56] *** lucs joined
[18:02] *** b2gills joined
[18:14] *** Altai-man_ joined
[18:16] *** sena_kun left
[18:19] <japhb> timotimo: Hmmm, thank you for the ideas.  :-)

[23:30] *** sxmx left
