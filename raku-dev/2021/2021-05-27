[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:31] <Xliff> AlexDaniel: Heya! So are we back to logging on colabti, now?
[00:33] <Xliff> Matrix IRC has the most features of what?
[00:42] *** ggoebel_ joined
[00:45] *** dogbert17 left
[00:45] *** dogbert17 joined
[00:46] *** dogbert17 left
[00:46] *** dogbert17 joined
[01:02] *** Xliff left
[01:14] *** colomon joined
[02:16] *** eof left
[02:17] *** summerisle joined
[03:10] *** summerisle is now known as eof
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:14] *** hankache joined
[07:13] *** ilogger2 left
[07:13] *** ilogger2 joined
[08:22] *** AlexDaniel left
[09:10] *** patrickb joined
[09:45] <lizmat> does anybody remember the rationale for Regex.ACCEPTS returning a Match object rather than a Bool ?
[10:01] * lizmat just realized that something like .grep(Regex) could be made 60% faster if Regex.ACCEPTS would just return a Bool
[10:15] <lizmat> alternately, the .grep(Regex) candidate could do a .contains(Regex) for similar speedups, but alas that fails because e.g. Pair does not have a .contains method  :-(
[10:22] *** Xliff joined
[11:22] *** [TuxCM] is now known as Tux
[11:23] *** Tux is now known as Guest8792
[11:24] *** Guest8792 is now known as [TuxCM]
[12:02] *** reportable6 left
[12:05] *** reportable6 joined
[12:32] *** morayj joined
[13:06] *** hankache left
[13:12] *** hankache joined
[13:15] *** ggoebel_ left
[13:15] *** ggoebel_ joined
[13:17] *** ggoebel_ left
[13:17] *** ggoebel_ joined
[14:12] *** frost left
[14:23] *** hankache left
[14:24] *** hankache joined
[15:03] *** colomon left
[15:06] *** ilogger2 left
[15:06] *** ilogger2 joined
[15:53] *** patrickb left
[16:00] *** ggoebel joined
[16:03] *** ggoebel_ left
[16:09] *** lizmat left
[16:23] *** lizmat joined
[16:26] *** LizBot joined
[16:49] <nine> lizmat: I guess Regex.ACCEPTS returns a match for my $match = "foobar" ~~ /foo(\w+)/
[17:08] *** ggoebel left
[17:59] *** morayj left
[18:02] *** reportable6 left
[18:03] *** ggoebel joined
[18:03] *** reportable6 joined
[18:10] *** morayj joined
[19:07] <gfldex> m: use v6.e.PREVIEW; my $foo = "a+b"; dd "aaaaab" ~~ m/<{$foo}>/;
[19:07] <camelia> rakudo-moar 4183cdaf3: OUTPUT: «Don't know setting RESTRICTED␤   at gen/moar/ModuleLoader.nqp:249  (/home/camelia/rakudo-m-inst-1/share/perl6/lib/Perl6/ModuleLoader.moarvm:previous_setting_name)␤ from gen/moar/ModuleLoader.nqp:254  (/home/camelia/rakudo-m-inst-1/share/perl6/lib/…»
[19:08] <gfldex> Type check failed in binding to parameter '$context'; expected PseudoStash but got PseudoStash (PseudoStash.new(("\$...) in block <unit> at 2021-03-08.raku line 256
[19:08] <gfldex> ^^^ That is a regession. The code comes from https://github.com/Raku/roast/blob/master/S05-interpolation/regex-in-variable.t .
[19:09] <gfldex> Is use v6.e.PREVIEW; run in a CIT?
[19:19] <gfldex> Against Roast that is.
[19:31] *** hankache left
[20:15] *** hankache joined
[20:58] *** hankache left
[21:15] *** ggoebel left
[21:27] *** Guest4331 joined
[21:31] *** Guest4331 left
[21:42] *** morayj left
[21:49] <[Coke]> anything left to fix in r#4150 ?
[21:49] <[Coke]> https://github.com/rakudo/rakudo/issues/4150
[21:50] *** linkable6 left
[21:51] <lizmat> don't think so
[21:53] *** linkable6 joined
[21:56] <[Coke]> lizmat: if https://github.com/rakudo/rakudo/issues/3992 is based on the RSC following the guidance of counsel... can we reject the ticket?
[21:56] <[Coke]> s/we/you/, really.
[21:57] <lizmat> I'd say leave open until we have clarity on the trademark
[21:57] <lizmat> which we do not have yet :-(
[21:57] <lizmat> sleep&
[22:03] <[Coke]> I thought the laywer provided the clarity.
[22:04] <[Coke]> .ask lizmat you said you were going to close https://github.com/rakudo/rakudo/issues/3748 a year ago, please consider again
[22:04] <tellable6> [Coke], I'll pass your message to lizmat
[22:12] <[Coke]> can someone look at https://github.com/rakudo/rakudo/issues/3392 and see if we can close based on vrurg's comment, which is basically "works as intended" ?
[22:14] <[Coke]> also https://github.com/rakudo/rakudo/issues/3316
[22:21] <[Coke]> also https://github.com/rakudo/rakudo/issues/3106
[22:23] <[Coke]> also https://github.com/rakudo/rakudo/issues/3033
[22:26] <[Coke]> also https://github.com/rakudo/rakudo/issues/2936
[22:27] <[Coke]> (done for now. many of those are either "please add this thing" which initial comments said no to, or works as intended, or... hopefully closable with little effort.
[23:39] *** benchable6 left
[23:39] *** releasable6 left
[23:39] *** bisectable6 left
[23:39] *** shareable6 left
[23:39] *** statisfiable6 left
[23:39] *** committable6 left
[23:39] *** unicodable6 left
[23:39] *** greppable6 left
[23:39] *** reportable6 left
[23:39] *** evalable6 left
[23:39] *** linkable6 left
[23:39] *** notable6 left
[23:39] *** coverable6 left
[23:39] *** nativecallable6 left
[23:39] *** bloatable6 left
[23:39] *** squashable6 left
[23:39] *** sourceable6 left
[23:39] *** quotable6 left
[23:39] *** tellable6 left
[23:39] *** unicodable6 joined
[23:39] *** statisfiable6 joined
[23:39] *** greppable6 joined
[23:39] *** bloatable6 joined
[23:40] *** releasable6 joined
[23:40] *** benchable6 joined
[23:40] *** notable6 joined
[23:40] *** nativecallable6 joined
[23:40] *** squashable6 joined
[23:40] *** evalable6 joined
[23:41] *** committable6 joined
[23:41] *** sourceable6 joined
[23:41] *** bisectable6 joined
[23:41] *** shareable6 joined
[23:41] *** linkable6 joined
[23:42] *** quotable6 joined
[23:42] *** tellable6 joined