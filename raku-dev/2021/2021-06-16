[00:02] *** reportable6 left
[00:06] *** reportable6 joined
[02:11] *** japhb joined
[02:23] *** frost joined
[02:28] *** frost left
[02:39] *** frost joined
[02:40] *** frost left
[02:40] *** frost joined
[02:40] *** frost left
[02:43] *** frost joined
[03:25] *** Xliff joined
[03:25] <Xliff> \o\
[03:26] <Xliff> m: use NativeCall; class A is repr<CStruct> { HAS $.array[30] is CArray }; my $a = A.new; $a.elems.say;
[03:26] <camelia> rakudo-moar 168da39ae: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤The [] shape syntax with the $ sigil is reserved␤at <tmp>:1␤------> 3lass A is repr<CStruct> { HAS $.array[307⏏5] is CArray }; my $a = A.new; $a.elems.s␤    expecting any of:␤        state…»
[03:26] <Xliff> m: use NativeCall; class A is repr<CStruct> { HAS @.array[30] is CArray }; my $a = A.new; $a.elems.say;
[03:26] <camelia> rakudo-moar 168da39ae: OUTPUT: «1␤»
[03:27] <Xliff> ^^ Isn't this a bug?
[03:27] <Xliff> ^^ lizmat timotimo ugexe codesections vrurg
[03:27] <moon-child> m: use NativeCall; class A is repr<CStruct> { HAS @.array[30] is CArray }; my $a = A.new; $a.array.elems.say; #it doesn't seem to just be deferring to its element's method, either
[03:27] <camelia> rakudo-moar 168da39ae: OUTPUT: «0␤»
[03:29] <Xliff> A nd if I cast from a pointer, I get "Don't know how many elements a C array returned from a library"
[03:29] <Xliff> Something seems wonky.
[03:30] <Xliff> At any rate, wanted to get that out before I snozz for the night.
[03:55] <Geth> ¦ roast: McSinyx++ created pull request #736: Test cases where mkdir should fail
[03:55] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/736
[04:32] *** vrurg joined
[04:34] *** vrurg_ left
[04:55] *** Xliff left
[05:24] *** nebuchadnezzar joined
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[08:32] <nine> m: my @a = 0..100; loop { @a.hyper.map({$_}).sum; }
[08:32] <camelia> rakudo-moar 168da39ae: OUTPUT: «A worker in a parallel iteration (hyper or race) initiated here:␤  in block <unit> at <tmp> line 1␤␤Died at:␤    emit without supply or react␤      in block <unit> at <tmp> line 1␤␤»
[08:32] <nine> How on earth?
[08:35] <moon-child> doesn't seem to need the map to trigger
[08:35] <nine> indeed
[08:35] <moon-child> nor the sum, works with just @a.hyper[0]
[08:36] <nine> Actually this is enough:
[08:36] <nine> m: my @a; loop { @a.hyper[0]; }
[08:37] <camelia> rakudo-moar 168da39ae: OUTPUT: «(signal XCPU)»
[08:37] <nine> m: my @a; loop { @a.hyper[0]; }
[08:37] <camelia> rakudo-moar 168da39ae: OUTPUT: «A worker in a parallel iteration (hyper or race) initiated here:␤  in block <unit> at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤Died at:␤    emit without supply or react␤      in block <unit> at <tmp> line 1␤      in block <unit> a…»
[08:38] <nine> I fear, it's a spesh bug
[08:39] <nine> Initially I suspected commit 6f42d19eb0 and reverting that made my program massively more stable. But in the end I still got that error after enough tries.
[08:40] *** linkable6 left
[08:42] *** linkable6 joined
[09:15] *** dogbert17 joined
[09:20] *** squashable6 left
[09:21] *** squashable6 joined
[09:27] <dogbert17> nine: it can fail even when spesh is disabled
[09:31] *** RakuIRCLogger left
[09:31] *** AlexDaniel left
[09:31] *** RakuIRCLogger joined
[09:34] *** AlexDaniel joined
[09:34] <dogbert17> tsan shows some quite suspicious output though
[09:37] <dogbert17> https://gist.github.com/dogbert17/dea0a2c20be1826851615980be3b1710
[09:42] <nine> dogbert17: ah, thanks! I got it to fail even with MVM_SPESH_LIMIT=29 which is hit early in the compilation, so I figured the same. But haven't been able to reproduce with spesh completely disabled so far
[09:44] <dogbert17> the comments about the destroyed mutexes I haven't seen before
[10:14] <nine> At least it also appears in a debug build
[10:53] <Geth> ¦ rakudo: db074a8bc4 | (Elizabeth Mattijsen)++ | 2 files
[10:53] <Geth> ¦ rakudo: Abstract single elem path of [] into R:I
[10:53] <Geth> ¦ rakudo: 
[10:53] <Geth> ¦ rakudo: This allows the more common path of having multiple values in a
[10:53] <Geth> ¦ rakudo: [] to be inlined, causing a small but noticeable improvement.
[10:53] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/db074a8bc4
[11:00] <releasable6> Next release in ≈3 days and ≈7 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft
[11:20] *** squashable6 left
[11:21] *** squashable6 joined
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[13:33] *** lizmat left
[13:34] *** lizmat joined
[14:34] *** Xliff joined
[14:56] *** morayj joined
[15:15] *** b2gills left
[15:50] *** Xliff left
[17:05] *** morayj left
[17:06] *** morayj joined
[17:48] *** frost left
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[18:22] <Geth> ¦ nqp: 1385091dc7 | (Daniel Green)++ | tools/templates/moar/Makefile.in
[18:22] <Geth> ¦ nqp: Simplify MoarVM backend runner's Makefile template
[18:22] <Geth> ¦ nqp: 
[18:22] <Geth> ¦ nqp: Remove one redundant entry ('moar') and two unneeded entries ('sha1',
[18:22] <Geth> ¦ nqp: 'tinymt').
[18:22] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/1385091dc7
[18:22] <Geth> ¦ nqp: c0d5add92f | MasterDuke17++ (committed using GitHub Web editor) | tools/templates/moar/Makefile.in
[18:22] <Geth> ¦ nqp: Merge pull request #728 from MasterDuke17/simplify_moar_runner_makefile_template
[18:22] <Geth> ¦ nqp: 
[18:22] <Geth> ¦ nqp: Simplify MoarVM backend runner's Makefile template
[18:22] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/c0d5add92f
[19:21] <timo> .tell Xliff yeah that does look like a bug
[19:21] <tellable6> timo, I'll pass your message to Xliff
[19:50] <Geth> ¦ rakudo/circumfix-array-typed: 323427ffa6 | (Elizabeth Mattijsen)++ | 4 files
[19:50] <Geth> ¦ rakudo/circumfix-array-typed: Introduce [1,2,3]:Int syntax
[19:50] <Geth> ¦ rakudo/circumfix-array-typed: 
[19:50] <Geth> ¦ rakudo/circumfix-array-typed: Arrays created with [] do not have typing.  It is one of Raku's traps
[19:50] <Geth> ¦ rakudo/circumfix-array-typed: that people do: sub foo(Int @a) { }, and then get a typecheck error
[19:50] <Geth> ¦ rakudo/circumfix-array-typed: when they pass [1,2,3] as an argument.  This commit would allow
[19:50] <Geth> ¦ rakudo/circumfix-array-typed: specification of [1,2,3]:Int as a valid argument.
[19:50] <Geth> ¦ rakudo/circumfix-array-typed: 
[19:50] <Geth> ¦ rakudo/circumfix-array-typed: <…commit message has 15 more lines…>
[19:50] <Geth> ¦ rakudo/circumfix-array-typed: review: https://github.com/rakudo/rakudo/commit/323427ffa6
[19:50] <Geth> ¦ rakudo: lizmat++ created pull request #4406: Introduce [1,2,3]:Int syntax
[19:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4406
[20:07] <timo> interesting
[20:12] <ugexe> i was thinking `foo(Int @ = [1,2,3])` would work, but nope
[20:13] <lizmat> m: sub foo(Int @a) { dd }; foo my Int @ = 1,2,3   # closest thing
[20:13] <camelia> rakudo-moar db074a8bc: OUTPUT: «sub foo(Int @a)␤»
[20:50] <tonyo> there is the beautiful: foo(Array[Int].new(1,2,3))
[20:56] <lizmat> or foo Array[Int].new: 1,2,3
[20:57] <lizmat> less lispy :-)
[21:01] <vrurg> @[Int][1, 2, 3]
[21:03] <sena_kun> can anyone please check `zef install Tika` on 2020.05?
[21:05] <lizmat> checking
[21:06] <lizmat> [Tika] Could not connect socket: Connection refused
[21:06] *** morayj left
[21:06] <Geth> ¦ rakudo: cd4a72b6a7 | (Elizabeth Mattijsen)++ | 6 files
[21:06] <Geth> ¦ rakudo: Implement Foo.pick(**)
[21:06] <Geth> ¦ rakudo: 
[21:06] <Geth> ¦ rakudo: This will produce all values of Foo.pick(*), and then produce all values
[21:06] <Geth> ¦ rakudo: of Foo.pick(*) again, and again, ad infinitum.
[21:06] <Geth> ¦ rakudo: 
[21:06] <Geth> ¦ rakudo: This removes some unnecessary protos.  And adds a Rakudo::Iterator.Reiterate
[21:06] <Geth> ¦ rakudo: method to produce values from a Callable that produces an iterator.
[21:06] <Geth> ¦ rakudo: 
[21:06] <Geth> ¦ rakudo: The Any.pick(HyperWhatever) candidate needs to be marked as "default"
[21:07] <Geth> ¦ rakudo: because of ambiguity with List.pick(Any).
[21:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cd4a72b6a7
[21:07] <tonyo> live author tests shouldn't go in your t/ 
[21:07] <sena_kun> if this is on 2020.05, then fine. I wonder just how on Earth blin sometimes make the modules to pass.
[21:07] <sena_kun> which means we have no blockers so far
[21:07] <lizmat> maybe because sometimes the server it tries to reach, is reachable ?
[21:07] <sena_kun> releasable6, status
[21:07] <releasable6> sena_kun, Next release in ≈2 days and ≈21 hours. 1 blocker. 0 out of 18 commits logged
[21:07] <releasable6> sena_kun, Details: https://gist.github.com/bbcbafcd593ab21c5e1fc2adff6abd7e
[21:07] <sena_kun> blin ones
[21:15] <Geth> ¦ roast: 9439f47653 | (Elizabeth Mattijsen)++ | S32-list/pick.t
[21:15] <Geth> ¦ roast: Add tests for .pick(**)
[21:15] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/9439f47653
[21:18] <lizmat> enough core hacking for yours truly today&
[21:18] <sena_kun> lizmat++
[22:38] *** tyilanmenyn joined
[22:39] *** tyil left
[22:41] *** tyilanmenyn is now known as tyil
[23:55] *** Util_ left
