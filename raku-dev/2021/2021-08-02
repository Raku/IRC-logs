[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[01:28] *** notable6 left
[01:28] *** evalable6 left
[01:28] *** greppable6 left
[01:28] *** squashable6 left
[01:28] *** committable6 left
[01:28] *** quotable6 left
[01:28] *** bisectable6 left
[01:28] *** releasable6 left
[01:28] *** coverable6 left
[01:28] *** shareable6 left
[01:28] *** bloatable6 left
[01:28] *** reportable6 left
[01:28] *** tellable6 left
[01:28] *** sourceable6 left
[01:28] *** benchable6 left
[01:28] *** nativecallable6 left
[01:28] *** unicodable6 left
[01:28] *** statisfiable6 left
[01:28] *** squashable6 joined
[01:29] *** sourceable6 joined
[01:29] *** releasable6 joined
[01:29] *** evalable6 joined
[01:30] *** bisectable6 joined
[01:30] *** notable6 joined
[01:30] *** unicodable6 joined
[01:31] *** benchable6 joined
[02:30] *** reportable6 joined
[02:30] *** quotable6 joined
[02:30] *** nativecallable6 joined
[02:30] *** shareable6 joined
[02:30] *** coverable6 joined
[02:30] *** greppable6 joined
[03:05] *** linkable6 joined
[04:27] *** releasable6 left
[04:27] *** coverable6 left
[04:27] *** quotable6 left
[04:27] *** reportable6 left
[04:27] *** notable6 left
[04:27] *** shareable6 left
[04:27] *** sourceable6 left
[04:27] *** evalable6 left
[04:27] *** greppable6 left
[04:27] *** nativecallable6 left
[04:27] *** linkable6 left
[04:27] *** bisectable6 left
[04:27] *** squashable6 left
[04:27] *** benchable6 left
[04:27] *** unicodable6 left
[04:27] *** quotable6 joined
[04:28] *** unicodable6 joined
[04:29] *** tellable6 joined
[04:29] *** coverable6 joined
[04:29] *** committable6 joined
[04:29] *** nativecallable6 joined
[04:29] *** linkable6 joined
[04:29] *** sourceable6 joined
[04:29] *** notable6 joined
[04:30] *** reportable6 joined
[04:30] *** shareable6 joined
[05:27] *** releasable6 joined
[05:28] *** greppable6 joined
[05:29] *** statisfiable6 joined
[05:30] *** bisectable6 joined
[05:30] *** benchable6 joined
[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[06:28] *** evalable6 joined
[07:28] *** squashable6 joined
[08:33] *** |Tux| joined
[08:33] *** Tux__ joined
[08:43] *** Tux__ left
[08:43] *** |Tux| left
[08:46] *** |Tux| joined
[08:46] *** Tux__ joined
[08:48] *** Tux__ left
[09:30] *** bloatable6 joined
[10:03] *** lizmat left
[10:43] *** sena_kun joined
[10:50] *** lizmat joined
[11:59] *** linkable6 left
[11:59] *** evalable6 left
[11:59] *** evalable6 joined
[12:03] *** reportable6 left
[12:21] *** frost joined
[13:04] *** reportable6 joined
[13:10] <Geth> ¦ rakudo/new-disp: dd45f2ce20 | (Jonathan Worthington)++ | 3 files

[13:10] <Geth> ¦ rakudo/new-disp: Get unpackability-based multis working on new-disp

[13:10] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/dd45f2ce20

[13:20] *** frost left
[13:36] *** frost joined
[13:40] *** frost left
[14:03] <|Tux|> Rakudo v2021.07-8-g54f1b7a5f (v6.d) on MoarVM 2021.07-10-g96ce6d848

[14:03] <|Tux|> csv-test-xs-20      0.371 -  0.380

[14:03] <|Tux|> test-t --race       0.910 -  1.009

[14:03] <|Tux|> csv-ip5xs           1.038 -  1.083

[14:03] <|Tux|> test-t              1.985 -  2.008

[14:03] <|Tux|> test                7.508 -  7.566

[14:03] <|Tux|> csv-ip5xs-20        8.878 -  9.760

[14:04] <|Tux|> test-t-20 --race    9.661 -  9.831

[14:04] <|Tux|> csv-parser         26.625 - 27.284

[14:04] <|Tux|> test-t-20          33.597 - 33.939

[14:40] *** evalable6 left
[15:00] *** linkable6 joined
[15:43] *** evalable6 joined
[16:47] <Geth> ¦ nqp/new-disp: 7d480b8c73 | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[16:47] <Geth> ¦ nqp/new-disp: Map bindcomplete op, constants to go with it

[16:47] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/7d480b8c73

[16:48] <Geth> ¦ rakudo/new-disp: b64e905cda | (Jonathan Worthington)++ | 2 files

[16:48] <Geth> ¦ rakudo/new-disp: Support nextcallee in multiple dispatch

[16:48] <Geth> ¦ rakudo/new-disp: 

[16:48] <Geth> ¦ rakudo/new-disp: Including the tricky case where we have a bind check (due to a where

[16:48] <Geth> ¦ rakudo/new-disp: clause or unpack), and so need to see the outcome of that before we are

[16:48] <Geth> ¦ rakudo/new-disp: able to hand back the candidate.

[16:48] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/b64e905cda

[16:50] <Geth> ¦ roast: f3d66fe030 | (Jonathan Worthington)++ | S06-multi/unpackability.t

[16:50] <Geth> ¦ roast: Test cover nextcallee/callsame + unpack multis

[16:50] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/f3d66fe030

[17:25] *** sena_kun left
[17:44] *** melezhik joined
[18:02] *** reportable6 left
[18:37] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/08/02/2021-31-counting-down/

[19:05] *** reportable6 joined
[20:40] *** linkable6 left
[20:40] *** linkable6 joined
[21:02] *** melezhik left
[21:04] *** melezhik joined
[21:16] *** melezhik left
[21:31] *** Altai-man left
[22:33] *** |Tux| left
[22:59] <MasterDuke> m: sub a(Num $a) { $a + 1e0 }; my $b; $b := a($_.Num) for ^10_000_000; say now - INIT now; say $b

[22:59] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: «0.345164922␤10000000␤»

[22:59] <MasterDuke> m: sub a(Num() $a) { $a + 1e0 }; my $b; $b := a($_) for ^10_000_000; say now - INIT now; say $b

[22:59] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: «5.935012072␤10000000␤»

[22:59] <MasterDuke> oof. is new-disp going to help with that?

