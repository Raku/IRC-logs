[00:02] *** reportable6 left
[00:03] *** reportable6 joined
[00:13] <Geth> ¦ DBIish/rbt.end-of-line: 109ed17d86 | (Rod Taylor)++ | lib/DBDish/StatementHandle.pm6

[00:13] <Geth> ¦ DBIish/rbt.end-of-line: Add semi-colon to end of non-trivial line.

[00:13] <Geth> ¦ DBIish/rbt.end-of-line: review: https://github.com/raku-community-modules/DBIish/commit/109ed17d86

[00:52] <Geth> ¦ DBIish: 109ed17d86 | (Rod Taylor)++ | lib/DBDish/StatementHandle.pm6

[00:52] <Geth> ¦ DBIish: Add semi-colon to end of non-trivial line.

[00:52] <Geth> ¦ DBIish: review: https://github.com/raku-community-modules/DBIish/commit/109ed17d86

[00:52] <Geth> ¦ DBIish/rbt.sqlite_rows: 2742e84ca3 | (Rod Taylor)++ | 2 files

[00:52] <Geth> ¦ DBIish/rbt.sqlite_rows: Warn on rows call in sqlite

[00:52] <Geth> ¦ DBIish/rbt.sqlite_rows: 

[00:52] <Geth> ¦ DBIish/rbt.sqlite_rows: Track situations where the value returned may be inaccurate and warn on those usages.

[00:52] <Geth> ¦ DBIish/rbt.sqlite_rows: review: https://github.com/raku-community-modules/DBIish/commit/2742e84ca3

[01:02] *** frost joined
[01:31] *** frost left
[01:35] *** frost joined
[01:37] <Geth> ¦ DBIish/rbt.sqlite_rows: a431f481a8 | (Rod Taylor)++ | 4 files

[01:37] <Geth> ¦ DBIish/rbt.sqlite_rows: Warn on rows call in sqlite

[01:37] <Geth> ¦ DBIish/rbt.sqlite_rows: 

[01:37] <Geth> ¦ DBIish/rbt.sqlite_rows: Track situations where the value returned may be inaccurate and warn on those usages.

[01:37] <Geth> ¦ DBIish/rbt.sqlite_rows: review: https://github.com/raku-community-modules/DBIish/commit/a431f481a8

[01:43] <Geth> ¦ DBIish/rbt.sqlite_rows: 5ef20df9e6 | (Rod Taylor)++ | 4 files

[01:43] <Geth> ¦ DBIish/rbt.sqlite_rows: Warn on rows call in sqlite

[01:43] <Geth> ¦ DBIish/rbt.sqlite_rows: 

[01:43] <Geth> ¦ DBIish/rbt.sqlite_rows: Track situations where the value returned may be inaccurate and warn on those usages.

[01:43] <Geth> ¦ DBIish/rbt.sqlite_rows: review: https://github.com/raku-community-modules/DBIish/commit/5ef20df9e6

[01:51] <Geth> ¦ DBIish: rbt++ created pull request #213: Warn on rows call in sqlite

[01:51] <Geth> ¦ DBIish: review: https://github.com/raku-community-modules/DBIish/pull/213

[03:39] *** committable6 left
[03:39] *** bloatable6 left
[03:39] *** coverable6 left
[03:39] *** squashable6 left
[03:39] *** reportable6 left
[03:39] *** evalable6 left
[03:39] *** linkable6 left
[03:39] *** benchable6 left
[03:39] *** shareable6 left
[03:39] *** quotable6 left
[03:39] *** releasable6 left
[03:39] *** unicodable6 left
[03:39] *** nativecallable6 left
[03:39] *** greppable6 left
[03:39] *** notable6 left
[03:39] *** tellable6 left
[03:39] *** sourceable6 left
[03:39] *** bisectable6 left
[03:39] *** statisfiable6 left
[03:40] *** unicodable6 joined
[03:40] *** bloatable6 joined
[03:41] *** linkable6 joined
[03:41] *** notable6 joined
[03:41] *** bisectable6 joined
[03:41] *** benchable6 joined
[03:41] *** sourceable6 joined
[03:41] *** committable6 joined
[03:42] *** tellable6 joined
[04:40] *** shareable6 joined
[04:41] *** reportable6 joined
[04:42] *** evalable6 joined
[04:42] *** squashable6 joined
[04:42] *** quotable6 joined
[04:43] *** coverable6 joined
[05:40] *** nativecallable6 joined
[05:40] *** greppable6 joined
[05:42] *** statisfiable6 joined
[06:02] *** reportable6 left
[06:42] *** releasable6 joined
[07:44] *** Xliff joined
[07:54] *** patrickb joined
[07:55] <patrickb> o/

[07:56] <patrickb> Can we define some next steps wrt new release manager? I think people need some guidance on how to proceed after step 1. "raise your hand".

[07:57] <patrickb> People I know about that have showed interest: andinus and jdv.

[08:01] <patrickb> sena-kun: Would you be willing to moderate a first "get to know each other and organize meeting"?

[08:04] *** reportable6 joined
[08:22] *** frost left
[08:22] *** frost joined
[09:21] <sena_kun> patrickb, o/

[09:22] <sena_kun> Hmmmm.

[09:22] <patrickb> Hi!

[09:25] <patrickb> sena_kun: I don't necessarily want to involve you explicitly. But you were the first person that came to mind. (As the previous release manager you can not only moderate a first get-together, but also answer questions, but I think that's not strictly necessary.)

[09:27] <sena_kun> Hard to reply to be honest. I am not sure what's more there is, other than "Yes, I can spend a day to do it". I can reply questions for sure.

[09:27] <sena_kun> If we have so many people, say someone can do the moarvm release and someone else can do rakudo release, it's a simple decision.

[09:28] <patrickb> I think the most important thing to do is "authorizing" people to be release manager. "Thanks for volunteering. Yes you can take the release manager role. You do have our trust in doing this."

[09:29] <sena_kun> patrickb, to do this what's needed is just committing a change for this section: https://github.com/rakudo/rakudo/blob/master/docs/release_guide.pod#planned-future-releases

[09:29] <sena_kun> Replace "Be the next" with your nickname and you are officially approved.

[09:30] <patrickb> Fine then, that's easy.

[09:30] <sena_kun> IMO meetings and long discussions really over-complicate things, take time instead of just doing it.

[09:31] <sena_kun> E.g. we have a "documentation team", but all people did there was discussing, discussing discussions, discussing discussions about discussions etc.

[09:33] <patrickb> sena_kun: True. But it's also important to respond when people showed interest to do the work. We asked for volunteers, (I know of) two people that responded and said they'd be willing. So now someone (who?) needs to respond to that volunteering. Otherwise I fear nothing will happen.

[09:35] <patrickb> jdv, andinus: Thanks for showing interest to be a release manager. There is no formal inauguration process. The most important thing to do is committing a change to this section: https://github.com/rakudo/rakudo/blob/master/docs/release_guide.pod#planned-future-releases to make sure responsibility is clearly defined and duplicate work prevented.

[09:39] <patrickb> jdv, andinus: Further more there is enormous freedom of choice in how and when to do a release. So, for example, should the release manager (the one named in the priviously named document) decide to move the release date to a different week day, they have the authorization to do so.

[09:39] * sena_kun lesson&

[09:41] <patrickb> jdv, andinus: sena_kun, the previous  release manager, is available to answer questions.

[09:45] <patrickb> Should I have missed anyone else that has volunteered as release manager, the above applies to you just as well.

[10:11] *** discord-raku-bot left
[10:12] *** discord-raku-bot joined
[10:33] <sena_kun> patrickb, agreed, it's just that nobody except maettu yesterday contacted me directly IIRC.

[10:37] <patrickb> Ah. We should have probably been more clear in the weekly. It only said to speak up in this channel. Stating to contact you directy might have been better.

[10:44] * lizmat had not understoof that it was ok to contact sena_kun directly

[10:51] <sena_kun> No problem, we cleared it up anyway I guess?

[10:55] <lizmat> I hope so  :-)

[12:02] *** reportable6 left
[13:43] *** frost left
[14:35] <jdv> since nobody else seems to be taking action I'll give it a go and we can sort it better in time i guess if desired

[14:40] <sena_kun> jdv++

[14:41] <jdv> is there a list of pre-reqs or should i just read the release guides and run into stuff and discover it that way? ...

[14:43] <lizmat> I think the release guide gives you a pretty good idea?

[14:44] *** dogbert17 joined
[14:44] <jdv> sounds good

[14:51] <jdv> i imagine i'd need commit bits on some more repos?  i think i only have a commit bit on nqp and roast.

[14:52] <jdv> also, i'd hazard a guess that 12/4 isn't gonna be realistic.  how about this time we'll just say it'll happen this month:)

[14:55] <lizmat> that'd be fine with me  :-)

[15:00] <releasable6> Next release in ≈4 days and ≈3 hours. 4 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:01] <patrickb> Wow! It looks like we have a 2021.12 releasemanager! jdv: Many thanks for picking up the torch!

[15:05] *** reportable6 joined
[15:07] <sena_kun> I wouldn't say it is not realistic, but it depends on Blin results more than something else.

[15:08] <sena_kun> jdv, from the top of my head "pre-reqs" is 1)to have some nice gpg key you own around; 2)to setup git to sign your commits.

[15:08] <sena_kun> jdv, also how good is your hardware?

[15:09] * sena_kun goes afk until Altai-man nick is available

[15:11] <jdv> my hw is ancient but i ran blin a while ago - i think it was done in <2.5h iirc

[15:14] <jdv> i don't believe i have a "nice" gpg key.  i guess i'll set one up.

[15:26] <timo> there's surely a tool that lets you choose what short key id you want

[15:26] <timo> at the cost of some cpu (or ideally gpu probably) time

[15:41] *** Altai-man joined
[15:42] <Altai-man> jdv, not sure anything doing a run in 2.5h can be counted as "ancient", heh.

[15:44] *** melezhik joined
[15:48] <Altai-man> jdv, wrt "rights to commit" - do you plan to make a moarvm release as well?

[15:50] <jdv> maybe.  why do you ask?

[15:51] <Altai-man> jdv, it's a pretty important bit, as it decides whether you do both or we need one more person.

[15:55] <jdv> oh, i thought there was an issue with it that you were infering

[15:55] <jdv> yes, sure.

[15:55] <Altai-man> aah, well, there is also the fact that you need to commit to moarvm to do its release. :)

[15:56] <jdv> timo: do you know of one?

[15:56] <Altai-man> OTOH the whole process can be done via PRs now and it's not necessary to commit directly.

[15:57] <jdv> whatever is easiest i guess

[15:59] <Altai-man> https://github.com/MoarVM/MoarVM/pull/1576 and https://github.com/rakudo/rakudo/pull/4529 so both are done via PRs now.

[15:59] <vrurg> PRs make RM dependent on others good will. Usually it's not a problem, but might cause some delays if nobody is available to merge the PR.

[16:00] <Altai-man> agreed, plus there is a need to push tags and create releases.

[16:00] <timo> i've used git-vanity before to get a git ommit to have a hash that starts with the haraters i want

[16:00] <timo> but i haven't used any tool to do that with gpg keys

[16:00] <Altai-man> which cannot be done with a PR, so it's just that it's cleaner this way.

[16:04] <timo> there's a post that says you can only sensibly get a vanity key in a reasonable timeframe (using cpu at least) because you need to reduce input entropy amount or else it'll take weeks

[16:04] *** andinus joined
[16:07] <Altai-man> just follow https://docs.github.com/en/authentication/managing-commit-signature-verification/signing-commits and you should be fine.

[16:08] <jdv> thanks.  i have some other things to attend to - bbl.

[16:44] *** japhb left
[16:44] *** lucs_ left
[16:44] *** bartolin_ left
[16:45] *** lucs joined
[16:46] *** japhb joined
[16:46] *** bartolin joined
[16:47] *** squashable6 left
[16:58] *** patrickb left
[17:00] *** patrickb joined
[17:07] <[Coke]> cla?

[17:07] <[Coke]> crap, was hoping a bot had saved the URL for that.

[17:08] <Altai-man> notable6, CLA

[17:08] <notable6> Altai-man, 1 note: https://gist.github.com/f631025ceff43aaf0de9c85e4e69d630

[17:08] <Altai-man> ^^

[17:09] <[Coke]> for jdv when he gets back - will need to fill that out to get a rakudo commit bit.

[17:26] *** Altai-man left
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[20:26] <ugexe> so `raku -e 'shell("ls")'` is enough to freeze on Monterey 90% o the time

[20:27] <lizmat> wow

[20:27] <lizmat> so that feels like a libuv issue then to me

[20:28] <ugexe> yeah, but if it was i would also have expected node to have a similar issue

[20:28] <lizmat> what version is node using then?

[20:29] <ugexe> what i mean is someone already mentioned updating libuv for raku and having the same issue

[20:29] <ugexe> so even if node was on a recent libuv i'd expect the problem to still exist

[20:29] <lizmat> I see

[20:31] <lizmat> afk&

[21:01] *** p6steve joined
[21:05] <ugexe> the lldb and gdb runners didn't work either when i was looking at this either

[21:11] *** p6steve left
[21:13] <ugexe> seems like the issue might also occur when installing rakudo... stuck on `+++ Preparing installation`

[21:15] <vrurg> Is it all about Intel or M1 versions of mac?

[21:15] <ugexe> this is occuring on an intel, and most of the reports ive seen are m1 so i dont think its related to arch

[21:15] <ugexe> specific to Monterey

[21:16] <vrurg> Ok, so I stick to Big Sur in the meanwhile. Thanks!

[21:16] <ugexe> https://github.com/rakudo/rakudo/blob/ad1fddbb3ed83f14a56e4a8637e774739b1dac8d/src/core.c/Proc.pm6#L187

[21:17] <ugexe> that seems to be where its getting stuck

[21:24] *** p6steve joined
[21:29] *** p6steve left
[21:48] <ugexe> https://github.com/rakudo/rakudo/blob/10c3dbb940290c67af33dfc617b2f8ce6a21df28/src/core.c/Proc/Async.pm6#L357 sometimes does not get fired

[21:56] *** squashable6 joined
[22:01] *** [Coke] left
[22:02] <ugexe> m: use nqp; say nqp::hash().DUMP

[22:02] <camelia> rakudo-moar d6817f088: OUTPUT: «No such method 'DUMP' for invocant of type 'BOOTHash'.  Did you mean␤any of these: 'DUMP', 'Num', 'sum'?␤  in block <unit> at <tmp> line 1␤␤»

[22:05] *** [Coke] joined
[22:38] <Geth> ¦ nqp/Xliff-patch-1: 18d3d891a9 | Xliff++ (committed using GitHub Web editor) | tools/lib/NQP/Config/NQP.pm

[22:38] <Geth> ¦ nqp/Xliff-patch-1: - Allows the proper use of --no-optimize in --moar-option

[22:38] <Geth> ¦ nqp/Xliff-patch-1: 

[22:38] <Geth> ¦ nqp/Xliff-patch-1: Previously, even if --moar-option="--no-optimize" was used, the "--optimize" switch was still added to MoarVM's invocation of ./Configure.pl.

[22:38] <Geth> ¦ nqp/Xliff-patch-1: 

[22:38] <Geth> ¦ nqp/Xliff-patch-1: This patch addresses that issue.

[22:38] <Geth> ¦ nqp/Xliff-patch-1: review: https://github.com/Raku/nqp/commit/18d3d891a9

[22:38] <Geth> ¦ nqp: Xliff++ created pull request #750: - Allows the proper use of --no-optimize in --moar-option

[22:38] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/750

[22:39] <Xliff> Pls review.

[23:05] *** patrickb left
