[00:07] *** vrurg left
[00:13] *** dogbert11 joined
[00:17] *** dogbert17 left
[00:21] *** vrurg joined
[01:09] *** HarmtH left
[01:10] *** HarmtH joined
[01:34] *** kvw_5_ joined
[01:37] *** kvw_5 left
[07:50] *** sena_kun joined
[08:50] *** Xliff joined
[08:50] *** Xliff left
[09:11] *** squashable6 left
[09:14] *** squashable6 joined
[09:26] <nine> sena_kun: does kill.t fail consistently? Can you get some more output from the test?

[09:31] <sena_kun> nine, I'll run the suite some more and get you more info.

[09:47] <sena_kun> nine, it has failed the second time at least, when I run it directly (the command is in the title), https://gist.github.com/Altai-man/8c87b45ad885409e627b3216537f7aa8

[09:47] <sena_kun> ➜  rakudo git:(master) ✗ ./rakudo-m --version

[09:47] <sena_kun> Welcome to Rakudo(tm) v2021.03-14-g2d1f4904e

[09:48] <sena_kun> Is there a way to set make stresstest to show more tests output?

[10:19] <nine> sena_kun: maybe the same as I'm using to get the full output of make test failures: https://build.opensuse.org/package/view_file/devel:languages:perl6/rakudo/rakudo-test-log.diff?expand=1

[11:13] * sena_kun is dumb enuogh to having difficulties with translating the command from just coretests to stresstest. To remove Make from equation I am running just "PERL5LIB=lib5 perl t/harness5 --fudge --keep-exit-code --test-from-file=t/spec/spectest.data --stress --archive=make-test.tar || { mkdir results && cd results && tar xf ../make-test.tar && find . -type f -exec echo '{}' ; -exec cat '{}' ; ; false ; }" and getting "Result: NOTESTS".

[11:14] <sena_kun> s/having/have/

[11:14] <sena_kun> Awwww, it must be "tests-from-file", not "test-from-file".

[11:14] <sena_kun> Now it works...

[12:12] <sena_kun> And somehow 1)I don't see the test failing; 2)The archive is not created. :|

[12:13] <sena_kun> Don't have more time for it today.

[12:19] <nine> sena_kun: do you have the TAP::Harness::Archive Perl module installed? If yes, you don't need the PERL5LIB=lib5, if no you need to put the file from the patch into lib5/

[12:22] <sena_kun> nine, I don't, so I applied the patch you posted and played with commands to collects logs of stresstest rather than just coretest. With coretest it seems to do the right thing (I was able to get a proper archive), but less of luck with the whole stresstest. This machine is too shitty to do so much stresstesting alas.

[12:44] <nine> sena_kun: I just pushed a fix to MoarVM which may help

[12:44] <nine> with the kill.rakudo.moar

[14:29] *** patrickb joined
[15:04] <sena_kun> nine, disregard my comment about kill.t, so far I see no flappers with TEST_JOBS=20. However, there is a stable test failure for 6.c-errata and 6.d-errata. I did not cherry-pick anything, do you mind looking at them? This test has drifted too much to just cherry-pick your https://github.com/Raku/roast/commit/da922f167ffc7ab1049702d6433ddcf413b07d0f

[15:10] <[Tux]> Rakudo v2021.03-17-gfe0c2daa7 (v6.d) on MoarVM 2021.03-14-g16fe88fdf

[15:10] <[Tux]> csv-test-xs-20      0.366 -  0.379

[15:10] <[Tux]> csv-ip5xs           0.825 -  0.853

[15:10] <[Tux]> test-t --race       0.971 -  0.992

[15:10] <[Tux]> test-t              2.044 -  2.049

[15:10] <[Tux]> test                7.817 -  8.157

[15:10] <[Tux]> csv-ip5xs-20        7.924 -  8.234

[15:10] <[Tux]> test-t-20 --race   10.027 - 10.626

[15:10] <[Tux]> csv-parser         25.200 - 27.666

[15:11] <[Tux]> test-t-20          34.815 - 34.875

[15:54] *** domidumont joined
[16:40] *** Kaiepi joined
[17:49] *** domidumont left
[19:06] *** patrickb left
[19:09] *** patrickb joined
[19:18] *** lichtkind joined
[19:47] <bartolin_> r: use nqp; my $pair := nqp::create(Pair); nqp::bindattr($pair,Pair,"\$!value",nqp::add_i(nqp::getattr(($pair := Pair.new(42,0)),Pair, "\$!value"),1)); say $pair

[19:47] <camelia> rakudo-moar 726a75e24: OUTPUT: «42 => 1␤»

[19:47] <camelia> ..rakudo-jvm 08b449e1a: OUTPUT: «42 => 0␤»

[19:48] <bartolin_> ^^ this seems to be the cause for some recent breakage on the JVM backend: https://github.com/rakudo/rakudo/issues/4272

[19:49] <bartolin_> it took me a while to golf it, but I think this shows the underlying problem

[19:52] *** patrickb left
[20:27] * lizmat just pushed https://github.com/rakudo/rakudo/commit/dc50951e4fdf182bb962fdd0328234f2e43720df   "unbreak Bags on the JVM backend"

[20:27] <lizmat> bartolin_ ^^

[20:30] <bartolin_> lizmat: oh, that was fast. I'll try it out. thanks for looking!

[20:30] <lizmat> no, thank *you* for looking and finding out the issue: it made the fix easy!

[20:44] <bartolin_> I've tried a couple of the failing test files and all of them are fine again. I'll run a spectest over night, but I'm pretty sure the problem is solved. :) (I'll close the issue if my spectest run looks good.)

[20:47] <lizmat> bartolin_++

[20:51] * bartolin_ is still somewhat curious what caused the different behaviour of the two backends. Hopefully it doesn't surface in other places ...

[20:53] <lizmat> well, I guess I was trying to be too enthousiastically optimizing there

[20:54] <lizmat> anyways, because of this, I found an interesting thing

[20:54] <lizmat> my %b is Bag = "words".IO.slurp.comb    # runs for 9 seconds on my machine

[20:55] <lizmat> my %b is Bag = "words".IO.slurp.comb>>.lc    # lowercasing *each* char makes it faster ???   because *that* runs at 6.8 seconds for me

[20:56] <lizmat> my %b is Bag = "words".IO.slurp.lc.comb   # runs 8.5 seconds

[20:56] <japhb> OK, that's weird.

[21:03] <bartolin_> well, working on lowercase chars would probably avoid some type checks -- depending on the number of upper-case chars in your words file (https://github.com/rakudo/rakudo/blob/dc50951e4f/src/core.c/Rakudo/QuantHash.pm6#L588). Maybe that outweights the effort to run .lc on each char.

[21:03] <lizmat> nah, the difference is in the *inclusive* time of push-until-lazy

[21:06] <lizmat> something weird is indeed going on...

[21:24] *** epony left
[21:28] *** epony joined
[21:30] <MasterDuke> same thing with MVM_SPESH_BLOCKING=1?

[21:49] *** sena_kun left
[22:07] *** HarmtH_ joined
[22:07] *** HarmtH left
[22:19] *** HarmtH joined
[22:19] *** HarmtH_ left
[22:22] *** HarmtH_ joined
[22:23] *** HarmtH left
[22:44] *** lichtkind left
[23:22] *** dogbert17 joined
[23:26] *** dogbert11 left
