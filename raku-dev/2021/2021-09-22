[00:03] *** reportable6 left
[00:05] *** reportable6 joined
[02:06] *** squashable6 left
[03:06] *** linkable6 left
[03:06] *** evalable6 left
[03:07] *** evalable6 joined
[03:07] *** squashable6 joined
[03:21] *** frost joined
[04:34] *** releasable6 left
[04:34] *** statisfiable6 left
[04:34] *** shareable6 left
[04:34] *** squashable6 left
[04:34] *** unicodable6 left
[04:34] *** benchable6 left
[04:34] *** committable6 left
[04:34] *** quotable6 left
[04:34] *** bisectable6 left
[04:34] *** notable6 left
[04:34] *** sourceable6 left
[04:34] *** reportable6 left
[04:34] *** nativecallable6 left
[04:34] *** bloatable6 left
[04:34] *** coverable6 left
[04:34] *** evalable6 left
[04:34] *** greppable6 left
[04:34] *** tellable6 left
[04:34] *** nativecallable6 joined
[04:35] *** squashable6 joined
[04:35] *** greppable6 joined
[04:35] *** reportable6 joined
[04:35] *** coverable6 joined
[04:36] *** shareable6 joined
[04:36] *** statisfiable6 joined
[05:08] *** linkable6 joined
[05:34] *** evalable6 joined
[05:35] *** committable6 joined
[05:35] *** quotable6 joined
[05:36] *** sourceable6 joined
[06:02] *** reportable6 left
[06:36] *** bisectable6 joined
[06:36] *** unicodable6 joined
[06:37] *** bloatable6 joined
[07:34] *** tellable6 joined
[07:34] *** releasable6 joined
[07:36] *** benchable6 joined
[08:04] *** reportable6 joined
[08:29] *** Xliff left
[08:36] *** lizmat_ joined
[08:36] *** TempIRCLogger__ left
[08:37] *** lizmat left
[08:37] *** [Coke]_ joined
[08:37] *** TempIRCLogger joined
[08:37] *** sena_kun joined
[08:37] *** lizmat_ left
[08:37] *** lizmat joined
[08:38] *** Geth left
[08:39] *** Geth joined
[08:39] *** [Coke] left
[09:35] *** notable6 joined
[09:48] *** patrickb joined
[10:24] <Geth> Â¦ rakudo/new-disp: 02480f3efb | (Jonathan Worthington)++ | 2 files

[10:24] <Geth> Â¦ rakudo/new-disp: Remove unused attributes in Routine

[10:24] <Geth> Â¦ rakudo/new-disp: 

[10:24] <Geth> Â¦ rakudo/new-disp: * `$!dispatcher_cache` seems entirely unused anywhere at all (now?)

[10:24] <Geth> Â¦ rakudo/new-disp: * `$!dispatch_cache` is unused on MoarVM

[10:24] <Geth> Â¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/02480f3efb

[10:30] *** discord-raku-bot left
[10:30] *** discord-raku-bot joined
[10:39] <Geth> Â¦ rakudo/new-disp: 14b160060d | (Jonathan Worthington)++ | 3 files

[10:39] <Geth> Â¦ rakudo/new-disp: Incorporate $!onlystar into Routine $!flags

[10:39] <Geth> Â¦ rakudo/new-disp: 

[10:39] <Geth> Â¦ rakudo/new-disp: It was a separate attribute before because the legacy multi-dispatch

[10:39] <Geth> Â¦ rakudo/new-disp: caching strategy needed that. Now that is gone, and it can go into

[10:39] <Geth> Â¦ rakudo/new-disp: flags, saving another 8 bytes off every Routine (and clone of one).

[10:39] <Geth> Â¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/14b160060d

[10:42] *** JimmyZ joined
[10:43] <patrickb> o/

[10:48] *** JimmyZ left
[11:27] *** Xliff joined
[11:36] *** JimmyZ joined
[12:03] *** reportable6 left
[12:04] *** reportable6 joined
[13:04] *** evalable6 left
[13:04] *** linkable6 left
[13:21] *** JimmyZ left
[14:06] *** linkable6 joined
[14:06] <Geth> Â¦ rakudo/new-disp: 1499e64261 | (Jonathan Worthington)++ | 13 files

[14:06] <Geth> Â¦ rakudo/new-disp: Remove Scalar containers caller side when possible

[14:06] <Geth> Â¦ rakudo/new-disp: 

[14:06] <Geth> Â¦ rakudo/new-disp: Add a bit field to Signature that indicates which arguments are

[14:06] <Geth> Â¦ rakudo/new-disp: readonly. Use it in the dispatcher in order to remove values from

[14:06] <Geth> Â¦ rakudo/new-disp: Scalar containers on the caller side, rather than leaving it to the

[14:06] <Geth> Â¦ rakudo/new-disp: callee. See the large comment inside the commit explaining the multiple

[14:06] <Geth> Â¦ rakudo/new-disp: advantages this provides.

[14:06] <Geth> Â¦ rakudo/new-disp: 

[14:06] <Geth> Â¦ rakudo/new-disp: There cost of doing this is that we run the risk of .VAR getting

[14:06] <Geth> Â¦ rakudo/new-disp: unwrapped both by this *and* in the callee. To avoid this, have .VAR do

[14:06] <Geth> Â¦ rakudo/new-disp: the wrapping inside of a special ScalarVAR.

[14:06] <Geth> Â¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/1499e64261

[14:24] *** frost left
[14:45] *** patrickb left
[14:45] *** patrickb joined
[14:49] *** patrickb left
[14:49] *** patrickb joined
[14:51] *** patrickb left
[14:51] *** patrickb joined
[14:53] *** patrickb left
[14:53] *** patrickb joined
[14:55] *** patrickb left
[14:55] *** patrickb joined
[14:57] *** patrickb left
[14:58] *** patrickb joined
[15:04] *** patrickb left
[15:04] *** patrickb joined
[15:06] *** patrickb left
[15:06] *** patrickb joined
[15:07] *** evalable6 joined
[15:08] *** patrickb left
[15:09] *** patrickb joined
[15:10] *** patrickb left
[15:11] *** patrickb joined
[15:13] *** patrickb left
[15:13] *** patrickb joined
[15:15] *** patrickb left
[15:15] *** patrickb joined
[15:19] *** patrickb left
[15:19] *** patrickb joined
[15:23] *** patrickb left
[15:33] <Geth> Â¦ rakudo: vrurg++ created pull request #4532: Clarify some edge cases of using nominalizables

[15:33] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4532

[15:52] *** [Coke]_ is now known as [Cke

[15:52] *** [Cke is now known as [Coke]

[16:05] *** discord-raku-bot left
[16:05] *** linkable6 left
[16:06] *** discord-raku-bot joined
[17:06] <Geth> Â¦ nqp/new-disp: 6d1a3fbbdf | (Jonathan Worthington)++ | 2 files

[17:06] <Geth> Â¦ nqp/new-disp: Use `my constant` somewhat in QAST compiler

[17:06] <Geth> Â¦ nqp/new-disp: 

[17:06] <Geth> Â¦ nqp/new-disp: These are a bit quicker to access, and serialized so they don't need any

[17:06] <Geth> Â¦ nqp/new-disp: setup work at startup.

[17:06] <Geth> Â¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/6d1a3fbbdf

[17:06] <Geth> Â¦ nqp/new-disp: 18d0d227c0 | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[17:06] <Geth> Â¦ nqp/new-disp: Avoid lots of dispatch program creation at startup

[17:06] <Geth> Â¦ nqp/new-disp: 

[17:06] <Geth> Â¦ nqp/new-disp: The QAST operations setup previously made a method call for every single

[17:06] <Geth> Â¦ nqp/new-disp: op. This resulted in producing a dispatch program that was only used

[17:06] <Geth> Â¦ nqp/new-disp: once ever. For most simple mappings, we can instead use a constant table

[17:06] <Geth> Â¦ nqp/new-disp: of them and add them in a loop. This knocks a few percent off startup

[17:06] <Geth> Â¦ nqp/new-disp: time, plus avoids the wasted memory of a bunch of single-use dispatch

[17:06] <Geth> Â¦ nqp/new-disp: programs and callsites.

[17:06] <Geth> Â¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/18d0d227c0

[17:07] *** linkable6 joined
[18:02] *** reportable6 left
[18:33] *** notna joined
[18:54] <Geth> Â¦ rakudo/new-disp: 11 commits pushed by (Elizabeth Mattijsen)++

[18:54] <Geth> Â¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/compare/1499e6426181...25caf34c4a8e

[19:05] *** reportable6 joined
[19:15] *** notna left
[20:37] *** linkable6 left
[20:37] *** evalable6 left
[20:39] *** linkable6 joined
[21:27] <Geth> Â¦ rakudo/new-disp: 8 commits pushed by (Elizabeth Mattijsen)++

[21:27] <Geth> Â¦ rakudo/new-disp: ee6f08645f | Complex \a -> $a optimizations

[21:27] <Geth> Â¦ rakudo/new-disp: 9070860b16 | Rat \a -> $a optimizations

[21:27] <Geth> Â¦ rakudo/new-disp: a1ca5a2088 | Setty \a -> $a optimizations

[21:27] <Geth> Â¦ rakudo/new-disp: cfffcde88c | Stringy \a -> $a optimizations

[21:27] <Geth> Â¦ rakudo/new-disp: ecf536e91d | set_equality \a -> $a optimizations

[21:27] <Geth> Â¦ rakudo/new-disp: 3ac2620d71 | set_multiply \a -> $a optimizations

[21:27] <Geth> Â¦ rakudo/new-disp: f0fbbced11 | set_proper_subset \a -> $a optimizations

[21:27] <Geth> Â¦ rakudo/new-disp: 45a5ab13ee | set_symmetric_difference \a -> $a optimizations

[21:27] <Geth> Â¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/compare/25caf34c4a8e...45a5ab13eeb1

[21:29] *** discord-raku-bot left
[21:29] *** discord-raku-bot joined
[21:39] *** evalable6 joined
[21:40] <Geth> Â¦ rakudo/disp_drop_multiple_args_at_once: daecc1a431 | (Timo Paulssen)++ | src/vm/moar/dispatchers.nqp

[21:40] <Geth> Â¦ rakudo/disp_drop_multiple_args_at_once: Use new dispatcher-drop-n-args syscall

[21:40] <Geth> Â¦ rakudo/disp_drop_multiple_args_at_once: 

[21:40] <Geth> Â¦ rakudo/disp_drop_multiple_args_at_once: Can reduce allocations of temporary MVMCapture and MVMCallsite objects.

[21:40] <Geth> Â¦ rakudo/disp_drop_multiple_args_at_once: review: https://github.com/rakudo/rakudo/commit/daecc1a431

[21:40] <Geth> Â¦ rakudo: timo++ created pull request #4533: Use new dispatcher-drop-n-args syscall

[21:40] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4533

[22:05] *** sena_kun left
[22:09] <Geth> Â¦ nqp/disp_drop_multiple_args_at_once: fda44c5974 | (Timo Paulssen)++ | 2 files

[22:09] <Geth> Â¦ nqp/disp_drop_multiple_args_at_once: use dispatcher-drop-n-args syscall in nqp dispatchers

[22:09] <Geth> Â¦ nqp/disp_drop_multiple_args_at_once: review: https://github.com/Raku/nqp/commit/fda44c5974

[22:10] <Geth> Â¦ nqp: timo++ created pull request #739: use dispatcher-drop-n-args syscall in nqp dispatchers

[22:10] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/pull/739

[23:59] *** evalable6 left
[23:59] *** linkable6 left
