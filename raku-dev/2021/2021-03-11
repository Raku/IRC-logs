[01:31] *** nebuchadnezzar left
[02:24] *** kvw_5 joined
[02:28] *** kvw_5_ left
[02:33] *** eaterof joined
[02:36] *** eater left
[03:09] *** raydiak left
[03:22] *** raydiak joined
[07:31] *** nebuchadnezzar joined
[07:49] *** domidumont joined
[08:59] *** sena_kun left
[09:01] *** sena_kun joined
[11:43] *** frost-lab joined
[12:10] *** frost-lab35 joined
[12:13] *** frost-lab left
[12:20] *** ugexe left
[12:21] *** ugexe joined
[13:02] *** samebchase-7 joined
[13:03] *** frost-lab35 left
[13:05] *** tyilanmenyn joined
[13:07] *** commavir_ joined
[13:07] *** andinus left
[13:07] *** tyil left
[13:07] *** samebchase- left
[13:07] *** sivoais left
[13:07] *** commavir left
[13:07] *** moritz left
[13:07] *** sivoais joined
[13:07] *** sivoais left
[13:07] *** sivoais joined
[13:07] *** moritz joined
[13:11] *** commavir_ is now known as commavir

[14:05] *** tyilanmenyn is now known as tyil

[14:09] *** squashable6 left
[14:09] *** squashable6 joined
[14:37] <Geth> Â¦ rakudo/rakuast: 339 commits pushed by (Jonathan Worthington)++, (Moritz Lenz)++, (Elizabeth Mattijsen)++, (Timo Paulssen)++, (Brad Gilbert)++

[14:37] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/compare/8538709dbff9...64e6cb2faf4a

[15:20] *** samebchase-7 is now known as samebchase-

[15:21] <Geth> Â¦ rakudo/rakuast: 302163aec8 | (Jonathan Worthington)++ | 2 files

[15:21] <Geth> Â¦ rakudo/rakuast: Handle non-sink context `for` statement modifier

[15:21] <Geth> Â¦ rakudo/rakuast: 

[15:21] <Geth> Â¦ rakudo/rakuast: And groundwork for non-sink cases of other loop modifiers, but those

[15:21] <Geth> Â¦ rakudo/rakuast: aren't compiled yet (for the non-modifier cases also).

[15:21] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/302163aec8

[15:45] *** MasterDuke left
[15:48] *** MasterDuke joined
[16:22] <MasterDuke> heh, if i change https://github.com/Raku/nqp/pull/703 to try and optimize more `if @` situations, the nqp build dies in src/NQP/Optimizer.nqp (the file i'm making changes in, though it's not dying in my changes)

[16:24] <lizmat> the optimizer travels all nodes, so that could be an explanation >

[16:24] <lizmat> ?

[16:24] <MasterDuke> it's dying here https://github.com/Raku/nqp/blob/master/src/NQP/Optimizer.nqp#L71 with `elems requires a concrete object (got a NQPMu type object instead)` because my patch has re-written the `if @existing {` to `if nqp::elems(@existing) {`

[16:28] <MasterDuke> if i instead re-write it to ``if nqp::isconcrete(@existing) && nqp::elems(@existing) {` i instead get `This representation (P6int) does not support positional access (for type BOOTInt)` at https://github.com/Raku/nqp/blob/master/src/vm/moar/QAST/QASTOperationsMAST.nqp#L1468

[16:30] <lizmat> MasterDuke: no idea

[16:30] <lizmat> related: don't spend too much time doing this in the Rakudo optimizer: that work will be most likely moot by the time RakuAST lands

[16:31] <MasterDuke> oh, right...

[16:48] <Geth> Â¦ rakudo/rakuast: 89585a2c59 | (Jonathan Worthington)++ | 3 files

[16:48] <Geth> Â¦ rakudo/rakuast: Generalize and correct sinking

[16:48] <Geth> Â¦ rakudo/rakuast: 

[16:48] <Geth> Â¦ rakudo/rakuast: * Apply it to all expression statements except those doing their own

[16:48] <Geth> Â¦ rakudo/rakuast:   sink marking; we'll provide an opt-out as an optimization a bit

[16:48] <Geth> Â¦ rakudo/rakuast:   later on

[16:48] <Geth> Â¦ rakudo/rakuast: * Routines should not sink their final statements (an bug that became

[16:48] <Geth> Â¦ rakudo/rakuast:   very clear once sinking was made more complete)

[16:48] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/89585a2c59

[16:48] <Geth> Â¦ rakudo/rakuast: 9e29382e7d | (Jonathan Worthington)++ | 6 files

[16:48] <Geth> Â¦ rakudo/rakuast: Allow nodes to mark themselves unsinkable

[16:48] <Geth> Â¦ rakudo/rakuast: 

[16:48] <Geth> Â¦ rakudo/rakuast: There'll be some more cases that need to be marked up this way, but at

[16:48] <Geth> Â¦ rakudo/rakuast: least not doing it for variable declarations means avoiding regressing

[16:48] <Geth> Â¦ rakudo/rakuast: on a spectest. For code objects and package declarations it's not so

[16:48] <Geth> Â¦ rakudo/rakuast: much needed for correctness, but rather results in simpler generated

[16:49] <Geth> Â¦ rakudo/rakuast: code.

[16:49] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/9e29382e7d

[17:16] *** MasterDuke left
[17:26] <moritz> can we please call those "Titanic nodes"?

[17:26] <moritz> just in memory of a ship declared unsinkable

[17:29] <gfldex_> Can we have some uncrashable nodes too? Might be useful when C-bindings are involved.

[17:34] *** gfldex_ is now known as gfldex

[17:35] <lizmat> .oO( iCeberg }

[17:44] *** domidumont left
[18:00] *** lizmat left
[18:01] *** lizmat joined
[18:09] *** cog left
[18:11] *** cog joined
[18:12] *** cog left
[18:13] *** cog joined
[18:13] *** lizmat left
[18:17] *** cog left
[18:20] *** vrurg left
[18:24] *** lizmat joined
[18:42] *** vrurg joined
[18:47] *** lizmat_ joined
[18:47] *** vrurg left
[18:48] *** lizmat left
[18:50] *** lizmat joined
[18:52] *** lizmat_ left
[19:01] *** sxmx left
[19:01] *** sxmx joined
[19:38] <Geth> Â¦ rakudo/rakuast: 310a3100f7 | (Elizabeth Mattijsen)++ | src/core.c/OperatorProperties.pm6

[19:38] <Geth> Â¦ rakudo/rakuast: First version of OperatorProperties class

[19:38] <Geth> Â¦ rakudo/rakuast: 

[19:38] <Geth> Â¦ rakudo/rakuast: This class contains the information that will used to be found in the

[19:38] <Geth> Â¦ rakudo/rakuast: .prec hash of operators.  It is intended to be the contents of a new

[19:38] <Geth> Â¦ rakudo/rakuast: $!operator-properties attribute in the Routine class.

[19:38] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/310a3100f7

[19:40] *** MasterDuke joined
[20:05] *** vrurg joined
[20:13] *** vrurg_ joined
[20:16] *** vrurg left
[20:25] *** vrurg_ left
[20:27] *** vrurg joined
[20:30] *** vrurg_ joined
[20:33] *** vrurg left
[20:36] *** Kaiepi left
[20:36] *** Kaiepi joined
[20:39] *** vrurg_ left
[20:47] *** MasterDuke left
[21:06] *** Kaiepi left
[21:07] *** Kaiepi joined
[21:11] *** Kaiepi left
[21:11] *** Kaiepi joined
[21:17] *** Kaiepi left
[21:19] *** Kaiepi joined
[22:12] <gfldex> I just updated my latest blogpost and must report that Rakudo once again blew my mind. The whole concept of control exceptions is making a lot of things really easy.

[22:33] * sena_kun thinks on presenting a new docs demo tomorrow

[22:39] *** cog joined
[22:41] *** Kaiepi left
[22:42] *** Kaiepi joined
[22:48] <lizmat> gfldex++   # cool finder of new idioms!

[23:34] *** vrurg joined
[23:39] *** vrurg left
