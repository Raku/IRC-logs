[00:02] *** reportable6 left
[00:04] *** reportable6 joined
[00:09] *** patrickb left
[00:58] *** discord-raku-bot joined
[01:19] *** discord-raku-bot left
[01:20] *** discord-raku-bot joined
[01:48] *** discord-raku-bot left
[01:56] *** discord-raku-bot joined
[02:08] *** discord-raku-bot left
[02:08] *** discord-raku-bot joined
[04:10] *** nativecallable6 left
[04:10] *** quotable6 left
[04:10] *** greppable6 left
[04:10] *** reportable6 left
[04:10] *** notable6 left
[04:10] *** linkable6 left
[04:10] *** coverable6 left
[04:10] *** bisectable6 left
[04:10] *** unicodable6 left
[04:10] *** bloatable6 left
[04:10] *** statisfiable6 left
[04:10] *** squashable6 left
[04:10] *** committable6 left
[04:10] *** sourceable6 left
[04:10] *** evalable6 left
[04:10] *** releasable6 left
[04:10] *** shareable6 left
[04:10] *** tellable6 left
[04:10] *** benchable6 left
[04:10] *** committable6 joined
[04:11] *** releasable6 joined
[04:11] *** bisectable6 joined
[04:11] *** squashable6 joined
[04:12] *** coverable6 joined
[04:12] *** greppable6 joined
[04:12] *** unicodable6 joined
[04:12] *** nativecallable6 joined
[04:13] *** statisfiable6 joined
[05:11] *** notable6 joined
[05:11] *** sourceable6 joined
[05:12] *** reportable6 joined
[05:12] *** shareable6 joined
[05:13] *** bloatable6 joined
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[06:12] *** benchable6 joined
[07:12] *** quotable6 joined
[07:12] *** evalable6 joined
[08:11] *** tellable6 joined
[09:13] *** linkable6 joined
[10:29] *** squashable6 left
[10:31] *** squashable6 joined
[10:38] *** linkable6 left
[10:39] *** linkable6 joined
[10:49] *** linkable6 left
[10:51] *** linkable6 joined
[10:58] *** linkable6 left
[11:05] <Geth> ¦ nqp: 315cc79cd8 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[11:05] <Geth> ¦ nqp: Bump NQP to get the latest MoarVM fixes by nine++

[11:05] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/315cc79cd8

[11:21] <Geth> ¦ rakudo: d1bda7b56f | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[11:21] <Geth> ¦ rakudo: Bump NQP for various MoarVM and NQP fixes

[11:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d1bda7b56f

[11:53] <Geth> ¦ rakudo/cpucores-once: 65ddcb7c3e | (Elizabeth Mattijsen)++ | 4 files

[11:53] <Geth> ¦ rakudo/cpucores-once: Make sure that nqp::cpucores is only called once ever

[11:53] <Geth> ¦ rakudo/cpucores-once: 

[11:53] <Geth> ¦ rakudo/cpucores-once: It appears that nqp::cpucores can potentially be a heavy operation

[11:53] <Geth> ¦ rakudo/cpucores-once: (even like needing to fork() apparently on MacOS Monterey), which

[11:53] <Geth> ¦ rakudo/cpucores-once: may well have some adverse effects.

[11:53] <Geth> ¦ rakudo/cpucores-once: 

[11:53] <Geth> ¦ rakudo/cpucores-once: Therefore make sure we only call nqp::cpucores only once at startup.

[11:53] <Geth> ¦ rakudo/cpucores-once: Also introduce an implementation-detail Kernel.cpu-cores-but-one

[11:53] <Geth> ¦ rakudo/cpucores-once: method that will be one less than the number of CPU cores, with a

[11:53] <Geth> ¦ rakudo/cpucores-once: minimum of 1.

[11:53] <Geth> ¦ rakudo/cpucores-once: review: https://github.com/rakudo/rakudo/commit/65ddcb7c3e

[11:53] <lizmat> (a rebase)

[11:53] <Geth> ¦ rakudo/cpucores-once: 2113eae9f0 | (Elizabeth Mattijsen)++ | 2 files

[11:53] <Geth> ¦ rakudo/cpucores-once: Revert behaviour of Kernel.cpu-cores

[11:53] <Geth> ¦ rakudo/cpucores-once: 

[11:53] <Geth> ¦ rakudo/cpucores-once: It will now always call nqp::cpucores for those cases where the

[11:53] <Geth> ¦ rakudo/cpucores-once: number of CPU's can actually change.

[11:53] <Geth> ¦ rakudo/cpucores-once: 

[11:53] <Geth> ¦ rakudo/cpucores-once: The internal method Kernel.cpu-cores-but-one is now lazy, and will

[11:53] <Geth> ¦ rakudo/cpucores-once: only call nqp::cpucores once in the lifetime of a process.

[11:53] <Geth> ¦ rakudo/cpucores-once: review: https://github.com/rakudo/rakudo/commit/2113eae9f0

[12:02] *** reportable6 left
[12:12] <Geth> ¦ rakudo/cpucores-once: 27f8cc5788 | (Elizabeth Mattijsen)++ | 2 files

[12:12] <Geth> ¦ rakudo/cpucores-once: Add Kernel.cpu-cores(:cached) candidate

[12:12] <Geth> ¦ rakudo/cpucores-once: 

[12:12] <Geth> ¦ rakudo/cpucores-once: - Kernel.cpu-cores now *always* calls nqp::cpucores and sets cache

[12:12] <Geth> ¦ rakudo/cpucores-once: - Kernel.cpu-cores(:cached) returns cached value or makes a cached value

[12:12] <Geth> ¦ rakudo/cpucores-once: - Kernel.cpu-cores-but-one always uses the cached value

[12:12] <Geth> ¦ rakudo/cpucores-once: - Thread.BUILD now makes sure that Kernel.cpu-cpucores(:cached) is called

[12:12] <Geth> ¦ rakudo/cpucores-once:   **before** starting an OS thread

[12:12] <Geth> ¦ rakudo/cpucores-once: review: https://github.com/rakudo/rakudo/commit/27f8cc5788

[13:04] *** reportable6 joined
[13:19] *** [Coke] left
[13:25] <Geth> ¦ rakudo/cpucores-once: 7c10225bba | (Elizabeth Mattijsen)++ | 2 files

[13:25] <Geth> ¦ rakudo/cpucores-once: Kernel.cpu-cores-but-one is now the only one caching

[13:25] <Geth> ¦ rakudo/cpucores-once: 

[13:25] <Geth> ¦ rakudo/cpucores-once: This is also the one called by Thread.BUILD now, and the :cached

[13:25] <Geth> ¦ rakudo/cpucores-once: candidate of Kernel.cpu-cores is gone and Kernel.cpu-cores is now

[13:25] <Geth> ¦ rakudo/cpucores-once: back to its original state.

[13:25] <Geth> ¦ rakudo/cpucores-once: review: https://github.com/rakudo/rakudo/commit/7c10225bba

[13:46] <ugexe> regarding nqp::cpucores performance -- https://github.com/libuv/libuv/pull/2914#pullrequestreview-451430065 suggest libuv could itself be improved 

[13:55] <lizmat> well, until then... we have a fix now

[14:10] <Geth> ¦ rakudo/cpucores-once: 9cb2d8b5f1 | (Elizabeth Mattijsen)++ | src/core.c/Iterable.pm6

[14:10] <Geth> ¦ rakudo/cpucores-once: Fix erroneous but harmless use of ; vs ,

[14:10] <Geth> ¦ rakudo/cpucores-once: review: https://github.com/rakudo/rakudo/commit/9cb2d8b5f1

[14:10] <lizmat> ugexe++ for the spot

[14:19] <ugexe> i like trailing commas because adding new things afterwards doesn't take over the blame for the original line

[14:19] <ugexe> git blame rather

[14:33] <lizmat> yeah, true that

[14:35] *** evalable6 left
[14:35] *** evalable6 joined
[14:40] *** Xliff left
[14:59] *** linkable6 joined
[16:38] *** evalable6 left
[16:38] *** linkable6 left
[16:39] *** evalable6 joined
[17:03] *** [Coke] joined
[17:41] *** linkable6 joined
[18:02] *** reportable6 left
[18:24] <discord-raku-bot> <pie_flavor#7868> is `eqv` the operator to check two bools for equality?

[19:05] *** patrickb joined
[19:25] <discord-raku-bot> <pie_flavor#7868> wrong channel sorry

[20:04] *** reportable6 joined
[20:43] *** [Coke]_ joined
[20:45] *** [Coke] left
[22:36] *** [Coke]_ is now known as [Coke]

