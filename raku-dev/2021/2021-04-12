[01:17] *** kvw_5_ joined
[01:20] *** kvw_5 left
[01:27] *** MasterDuke left
[02:33] *** maggotbrain joined
[03:53] *** frost-lab joined
[04:20] *** frost-lab left
[04:28] *** frost-lab joined
[05:38] *** frost-lab left
[05:38] *** softmoth_ left
[05:41] *** frost-lab joined
[06:36] *** MasterDuke joined
[06:44] <[Tux]> Yesterday:

[06:44] <[Tux]> Rakudo v2021.03-163-ga68d2579f (v6.d) on MoarVM 2021.03-47-gdba4b528e

[06:44] <[Tux]> csv-test-xs-20      0.375 -  0.377

[06:44] <[Tux]> csv-ip5xs           0.867 -  0.876

[06:44] <[Tux]> test-t --race       0.956 -  1.008

[06:44] <[Tux]> test-t              2.409 -  2.459

[06:45] <[Tux]> test                8.095 -  8.247

[06:45] <[Tux]> csv-ip5xs-20        8.788 -  8.944

[06:45] <[Tux]> test-t-20 --race   11.944 - 12.033

[06:45] <[Tux]> csv-parser         25.853 - 26.001

[06:45] <[Tux]> test-t-20          42.571 - 42.754

[06:50] *** domidumont joined
[08:02] *** patrickb joined
[08:06] *** patrickb left
[08:51] *** Altai-man_ left
[08:53] *** sena_kun joined
[09:49] *** epony left
[10:00] *** frost-lab left
[10:03] *** frost-lab joined
[10:17] *** epony joined
[11:39] *** Kaeipi joined
[11:40] *** Kaiepi left
[12:02] *** frost-lab left
[14:39] *** dogbert11 joined
[14:42] *** dogbert17 left
[16:05] *** softmoth_ joined
[16:07] <MasterDuke> m: my $a; $a := $_ ** 2 for 1..10_000_000; say now - INIT now; say $a

[16:07] <camelia> rakudo-moar 71d31a613: OUTPUT: «7.175648797␤100000000000000␤»

[16:07] <MasterDuke> m: my $a; $a := $_ ** -2 for 1..1_000_000; say now - INIT now; say $a

[16:07] <camelia> rakudo-moar 71d31a613: OUTPUT: «2.300756496␤0.000000000001␤»

[16:08] <MasterDuke> i can decrease the first one to 5.6s, but at the cost of increasing the second to 3.7s

[16:11] <MasterDuke> i'll PR the change, maybe someone can improve it

[16:19] <MasterDuke> https://github.com/rakudo/rakudo/pull/4320

[16:19] <lizmat> m: my $a; $a := $_ * $_ for 1..10_000_000; say now - INIT now; say $a

[16:19] <camelia> rakudo-moar 71d31a613: OUTPUT: «2.905321862␤100000000000000␤»

[16:19] <lizmat> even faster ?

[16:20] <lizmat> m: my $a; $a := $_ * $_  * $_ for 1..10_000_000; say now - INIT now; say $a

[16:20] <camelia> rakudo-moar 71d31a613: OUTPUT: «5.742425597␤1000000000000000000000␤»

[16:20] <lizmat> I guess just special casing 0..3 would already be a win ?

[16:21] <MasterDuke> i believe they are already in the libtommath implementation of pow_I

[16:22] <MasterDuke> but fwiw, that change would also help the not-so-likely-to-be-worthy-of-special-casing-cases

[16:22] <lizmat> m: my $a; use nqp; $a := nqp::pow_I($_,2) for 1..10_000_000; say now - INIT now; say $a

[16:22] <camelia> rakudo-moar 71d31a613: OUTPUT: «===SORRY!===␤Arg count 2 doesn't equal required operand count 5 for op 'pow_I'␤»

[16:22] <lizmat> m: my $a; use nqp; $a := nqp::pow_I($_,2,Int) for 1..10_000_000; say now - INIT now; say $a

[16:22] <camelia> rakudo-moar 71d31a613: OUTPUT: «===SORRY!===␤Arg count 3 doesn't equal required operand count 5 for op 'pow_I'␤»

[16:22] <MasterDuke> Num,Int

[16:23] <lizmat> m: my $a; use nqp; $a := nqp::pow_I($_,2,Num,Int) for 1..10_000_000; say now - INIT now; say $a

[16:23] <camelia> rakudo-moar 71d31a613: OUTPUT: «2.397020746␤100000000000000␤»

[16:23] <lizmat> m: my $a; use nqp; $a := nqp::pow_I($_,3,Num,Int) for 1..10_000_000; say now - INIT now; say $a

[16:23] <camelia> rakudo-moar 71d31a613: OUTPUT: «2.573100814␤1000000000000000000000␤»

[16:23] <lizmat> so, why is $_ ** 2 so much slower then ?

[16:23] <MasterDuke> https://github.com/rakudo/rakudo/issues/3910

[16:24] <[Tux]> Rakudo v2021.03-169-g71d31a613 (v6.d) on MoarVM 2021.03-49-gd11bd7f11

[16:24] <[Tux]> csv-test-xs-20      0.376 -  0.387

[16:24] <[Tux]> csv-ip5xs           0.864 -  0.906

[16:24] <[Tux]> test-t --race       0.967 -  0.978

[16:24] <[Tux]> test-t              2.300 -  2.347

[16:24] <[Tux]> test                7.823 -  7.895

[16:24] <[Tux]> csv-ip5xs-20        8.751 -  8.854

[16:24] <[Tux]> test-t-20 --race   11.462 - 11.620

[16:24] <[Tux]> csv-parser         25.732 - 26.809

[16:24] <[Tux]> test-t-20          42.712 - 43.167

[16:25] <MasterDuke> the speedup for **5 isn't quite as great. 7.5s before, 6.0s after

[16:29] <MasterDuke> it'd be nice if pow_I had a way of signalling overflow that wasn't returning a different type

[16:34] <lizmat> what strikes me as odd, is that even for something like:

[16:34] <lizmat> sub a(\a) { a ** 2 }; a($_) for ^1000000

[16:34] <lizmat> there is nothing the the speshlog that indicates an attempt of inlining infix:<**> into sub a

[16:35] <lizmat> whereas sub a *is* inlined

[16:35] <lizmat> raku -MSIL -e 'sub a(\a) { a ** 2 }; a($_) for ^1000000'

[17:27] *** domidumont left
[18:02] <lizmat> afk for the rest of the day (probably)&

[18:09] *** patrickb joined
[18:32] *** patrickb left
[18:32] <[Coke]> TIL about -MSIL

[18:35] *** patrickb joined
[19:00] <releasable6> Next release in ≈4 days and ≈23 hours. 2 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[19:22] *** patrickb left
[19:22] *** softmoth_ left
[19:24] *** patrickb joined
[19:30] <japhb> Since there are more folks here at this hour -- we *may* have found a problem with the libuv bump that happened a couple months ago.  I and ugexe have both been seeing "Failed to open dir: Too many open files" errors when doing a `zef uninstall`.  ugexe is on MacOS and I'm on Linux, so it doesn't appear to be platform-specific.  When I rolled back to just before the libuv bump, I couldn't recreate the 

[19:30] <japhb> problem.

[19:31] <japhb> Gah, I intended that to go to #moarvm, though perhaps it's useful here too.

[19:31] <nwc10> "this hour" - the optimal time of morning? :-)

[19:33] <japhb> Well, I suppose "optimal" would be a couple hours earlier here, but this will have to do.  :-)

[19:33] <japhb> s/here//

[19:33] <japhb> Clearly my brain is not optimally engaged

[19:34] * japhb attempts to apply music and tea to the problem

[19:34] <nwc10> :-)

[19:34] <nwc10> I hope your tea making has been more sucessful than some of my recent efforts

[19:35] <japhb> *chuckle*  So far so good.

[19:35] <nwc10> https://colabti.org/irclogger/irclogger_log/moarvm?date=2021-04-12#l54

[19:35] <nwc10> and the previous report about not using tea (and attempting to make coffee with cold water)

[19:36] <nwc10> maybe I should stick to whisky. I think that I'm reasonably competant with the input side of whisky

[19:58] *** softmoth_ joined
[20:19] *** patrickb left
[20:36] *** b2gills left
[20:36] *** b2gills joined
[21:07] *** dogbert17 joined
[21:09] *** dogbert11 left
[21:22] <lizmat> bisectable6: enum Str ( :Free<f>, :Inuse<n> ); note "ok %s".sprintf: Free;

[21:22] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[21:22] *** dogbert11 joined
[21:22] <bisectable6> lizmat, Output on all releases: https://gist.github.com/f9ec2d9611ef24a058e0623090cc017d

[21:22] <bisectable6> lizmat, Bisecting by exit code (old=2021.03 new=b1556cb). Old exit code: 0

[21:22] *** dogbert11 left
[21:22] <bisectable6> lizmat, bisect log: https://gist.github.com/3b4673a7fe4c3172904dbb28f555aa55

[21:22] <bisectable6> lizmat, (2021-04-11) https://github.com/rakudo/rakudo/commit/a68d2579f2b3ac295d34d1daa63a3b59a3df9ff1

[21:22] <bisectable6> lizmat, Output on all releases and bisected commits: https://gist.github.com/fc0c8da7e599106a9d66c99e78e80096

[21:23] *** dogbert11 joined
[21:24] *** dogbert17 left
[21:26] <lizmat> bisectable6: enum Stringy ( :Free<f>, :Inuse<n> ); note sprintf("ok %s",Free)

[21:26] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[21:26] <bisectable6> lizmat, ¦6c (52 commits): «ok f␤»

[21:26] <bisectable6> lizmat, Nothing to bisect!

[21:56] *** dogbert17 joined
[21:59] *** dogbert11 left
[22:01] *** dogbert17 left
[22:02] *** dogbert17 joined
[22:02] *** Geth joined
[23:10] *** gfldex left
[23:12] *** gfldex joined
