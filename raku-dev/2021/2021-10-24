[00:03] *** reportable6 left
[00:04] *** reportable6 joined
[00:23] *** Kaiepi joined
[01:17] *** vrurg joined
[01:20] *** vrurg_ left
[02:11] *** vrurg_ joined
[02:14] *** vrurg left
[03:22] *** unicodable6 left
[03:22] *** bloatable6 left
[03:22] *** reportable6 left
[03:22] *** shareable6 left
[03:22] *** squashable6 left
[03:22] *** quotable6 left
[03:22] *** greppable6 left
[03:22] *** coverable6 left
[03:22] *** releasable6 left
[03:22] *** committable6 left
[03:22] *** statisfiable6 left
[03:22] *** sourceable6 left
[03:22] *** nativecallable6 left
[03:22] *** notable6 left
[03:22] *** evalable6 left
[03:22] *** bisectable6 left
[03:22] *** tellable6 left
[03:22] *** benchable6 left
[03:22] *** linkable6 left
[03:24] *** tellable6 joined
[03:24] *** statisfiable6 joined
[03:24] *** linkable6 joined
[03:24] *** squashable6 joined
[03:24] *** coverable6 joined
[03:24] *** greppable6 joined
[03:24] *** vrurg_ left
[03:24] *** sourceable6 joined
[03:25] *** vrurg joined
[04:25] *** reportable6 joined
[04:25] *** evalable6 joined
[04:25] *** quotable6 joined
[04:25] *** notable6 joined
[04:25] *** nativecallable6 joined
[04:25] *** bisectable6 joined
[05:03] *** frost joined
[05:23] *** releasable6 joined
[05:24] *** bloatable6 joined
[05:25] *** unicodable6 joined
[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[06:23] *** benchable6 joined
[06:25] *** shareable6 joined
[06:26] *** committable6 joined
[07:33] *** Xliff left
[07:53] <Geth> Â¦ roast: 8506e372d1 | (Christian BartolomÃ¤us)++ | S06-advanced/dispatching.t

[07:53] <Geth> Â¦ roast: [JVM] Fudge some tests for dispatching (todo)

[07:53] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/8506e372d1

[08:19] <Geth> Â¦ roast: usev6++ created pull request #764: [JVM] Don't test encoding/decoding for windows-932

[08:19] <Geth> Â¦ roast: review: https://github.com/Raku/roast/pull/764

[09:18] <Geth> Â¦ roast: 6c906f15b1 | (Christian BartolomÃ¤us)++ | S32-encoding/registry.t

[09:18] <Geth> Â¦ roast: [JVM] Don't test encoding/decoding for windows-932

[09:18] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/6c906f15b1

[09:52] <Geth> Â¦ roast: 3049084f5d | (Christian BartolomÃ¤us)++ | S32-io/io-handle.t

[09:52] <Geth> Â¦ roast: [JVM] Fudge test for TTY detection (todo)

[09:52] <Geth> Â¦ roast: 

[09:52] <Geth> Â¦ roast: The op nqp::isttyfh does only guess if a handle is a TTY, and

[09:52] <Geth> Â¦ roast: is not even implemented for FileHandles. As noted in

[09:52] <Geth> Â¦ roast: https://github.com/Raku/nqp/commit/765ef2c10a there is no clean way

[09:52] <Geth> Â¦ roast: to implement a fully correct version.

[09:52] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/3049084f5d

[09:53] <[Tux]> Rakudo v2021.10-1-g6dc3a4700 (v6.d) on MoarVM 2021.10-1-g07060faf1

[09:53] <[Tux]> csv-test-xs-20      0.368 -  0.370

[09:53] <[Tux]> test-t --race       0.960 -  0.981

[09:53] <[Tux]> csv-ip5xs           1.389 -  1.410

[09:53] <[Tux]> test-t              1.636 -  1.641

[09:53] <[Tux]> csv-parser          4.402 -  4.447

[09:53] <[Tux]> test                7.057 -  7.235

[09:53] <[Tux]> test-t-20 --race    7.770 -  8.073

[09:53] <[Tux]> csv-ip5xs-20       15.761 - 16.194

[09:53] <[Tux]> test-t-20          23.961 - 24.322

[09:57] *** linkable6 left
[09:57] *** evalable6 left
[09:57] *** linkable6 joined
[10:07] <Geth> Â¦ nqp: 78d087815b | (Christian BartolomÃ¤us)++ | t/nqp/059-nqpop.t

[10:07] <Geth> Â¦ nqp: [JVM] Run tests for with/without on JVM backend

[10:07] <Geth> Â¦ nqp: 

[10:07] <Geth> Â¦ nqp: These tests have been working since commit ad700a25f9, but I forgot

[10:07] <Geth> Â¦ nqp: to unskip them.

[10:07] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/78d087815b

[10:20] <Geth> Â¦ nqp: aa1160e40e | (Christian BartolomÃ¤us)++ | t/nqp/019-file-ops.t

[10:20] <Geth> Â¦ nqp: Remove check for non-existing backends

[10:20] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/aa1160e40e

[10:28] <Geth> Â¦ nqp: 0295c671cf | (Christian BartolomÃ¤us)++ | t/nqp/116-streaming-decoder.t

[10:28] <Geth> Â¦ nqp: [JVM] Run test for translation of newlines

[10:28] <Geth> Â¦ nqp: 

[10:28] <Geth> Â¦ nqp: The translate_newlines config has been implemented by

[10:28] <Geth> Â¦ nqp: MasterDuke++ with 0412c22303 and c482a31526 earlier this year.

[10:28] <Geth> Â¦ nqp: The test passes now.

[10:28] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/0295c671cf

[10:37] *** Xliff joined
[10:58] *** evalable6 joined
[11:23] <Geth> Â¦ nqp: usev6++ created pull request #743: [JVM] Run pod test on JVM backend

[11:23] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/pull/743

[11:58] *** linkable6 left
[11:58] *** evalable6 left
[12:00] *** linkable6 joined
[12:01] *** evalable6 joined
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:23] *** Xliff left
[13:23] *** linkable6 left
[13:23] *** evalable6 left
[14:25] *** linkable6 joined
[14:38] <Geth> Â¦ nqp/new-disp-nativecall: 1f6de10695 | (Stefan Seifert)++ | 4 files

[14:38] <Geth> Â¦ nqp/new-disp-nativecall: API for asking whether the compiler supports a certain nqp op

[14:38] <Geth> Â¦ nqp/new-disp-nativecall: 

[14:38] <Geth> Â¦ nqp/new-disp-nativecall: This can be used to conditionally compile backend specific code in

[14:38] <Geth> Â¦ nqp/new-disp-nativecall: modules like NativeCall

[14:38] <Geth> Â¦ nqp/new-disp-nativecall: review: https://github.com/Raku/nqp/commit/1f6de10695

[14:44] <Geth> Â¦ nqp/fix-native-result-dispatch: 9ba4f1e51d | (Stefan Seifert)++ | src/vm/moar/QAST/QASTRegexCompilerMAST.nqp

[14:44] <Geth> Â¦ nqp/fix-native-result-dispatch: Fix compilation of dispatch to routines with non-standard native result types

[14:44] <Geth> Â¦ nqp/fix-native-result-dispatch: 

[14:44] <Geth> Â¦ nqp/fix-native-result-dispatch: For non-64-bit (or unsigned) native result types we need to use a 64 bit temp

[14:44] <Geth> Â¦ nqp/fix-native-result-dispatch: register as required by the op and coerce it to the register kind prescribed by

[14:44] <Geth> Â¦ nqp/fix-native-result-dispatch: the called routine's return signature.

[14:44] <Geth> Â¦ nqp/fix-native-result-dispatch: review: https://github.com/Raku/nqp/commit/9ba4f1e51d

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: 7b7d564bfe | (Stefan Seifert)++ | src/Perl6/Optimizer.nqp

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: Fix unnecessary boxing by routines with native return types

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: 

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: Commit 3cc9d765b2b350c9d15d0164ed53a9914b333afb caused a regression that made

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: us box natively typed return values of called routines. Before this the

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: optimizer copied the return type from the routine to the call QAST::Op node.

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: After the type got added to the QAST::Want node instead. This made code-gen

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: always emit invoke_o/dispatch_o instead of natively typed versions.

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: 

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: Fix by copying the type to both the QAST::Op and QAST::Want nodes. However we

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: don't do so for lvalue routines as those must return containers that can be

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: assigned into.

[14:50] <Geth> Â¦ rakudo/fix-native-result-dispatch: review: https://github.com/rakudo/rakudo/commit/7b7d564bfe

[14:50] <Geth> Â¦ nqp: niner++ created pull request #744: Fix compilation of dispatch to routines with non-standard native resuâ€¦

[14:50] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/pull/744

[14:50] <Geth> Â¦ rakudo: niner++ created pull request #4589: Fix unnecessary boxing by routines with native return types

[14:50] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4589

[14:53] *** MasterDuke left
[15:03] *** MasterDuke joined
[15:23] <Geth> Â¦ nqp: ffe7007a59 | (Christian BartolomÃ¤us)++ | t/nqp/114-pod-panic.t

[15:23] <Geth> Â¦ nqp: [JVM] Unskip block for JVM: execname is available

[15:23] <Geth> Â¦ nqp: 

[15:23] <Geth> Â¦ nqp: ... now (implemented with 755fa3f97c).

[15:23] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/ffe7007a59

[15:23] <Geth> Â¦ nqp: 34c67c0109 | (Christian BartolomÃ¤us)++ | t/nqp/114-pod-panic.t

[15:23] <Geth> Â¦ nqp: [JVM] Run test for known bad pod on JVM

[15:23] <Geth> Â¦ nqp: 

[15:23] <Geth> Â¦ nqp: The test passes locally for me. Let's see if the CI likes it, too.

[15:23] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/34c67c0109

[16:25] *** evalable6 joined
[16:27] *** dogbert17 left
[16:42] *** dogbert17 joined
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[19:04] *** linkable6 left
[19:04] *** evalable6 left
[19:05] *** linkable6 joined
[19:08] *** vrurg_ joined
[19:11] *** vrurg left
[20:14] *** vrurg joined
[20:14] *** vrurg_ left
[21:14] *** linkable6 left
[21:14] *** linkable6 joined
[21:26] <japhb> lizmat: https://logs.liz.nl/raku-dev/2021-10-24.html is returning 500, even though I'm having no trouble with other channels.

[22:13] *** vrurg_ joined
[22:13] *** vrurg left
[22:13] *** vrurg_ left
[22:14] *** vrurg joined
[23:02] <lizmat> japhb: please make an issue for it...  :-)

[23:05] *** evalable6 joined
