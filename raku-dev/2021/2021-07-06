[00:02] *** reportable6 left
[00:03] *** reportable6 joined
[00:04] <[Coke]> doesn't make sense to me: .next in that case isn't acting on the $_, is it?
[00:15] <[Coke]> and $_ in a for loop could be anything, can't just add it to Cool
[00:24] <ugexe> my gripe is adding common-name methods means learning more things you cant do
[00:24] <ugexe> m: grammar Foo { token TOP { <next> }; token next { \w+ }; }; say Foo.parse("hello")
[00:24] <camelia> rakudo-moar 6b186020a: OUTPUT: «｢hello｣␤ next => ｢hello｣␤»
[00:24] <ugexe> m: grammar Foo { token TOP { <take> }; token take { \w+ }; }; say Foo.parse("hello"
[00:24] <camelia> rakudo-moar 6b186020a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3n take { \w+ }; }; say Foo.parse("hello"7⏏5<EOL>␤»
[00:24] <ugexe> m: grammar Foo { token TOP { <take> }; token take { \w+ }; }; say Foo.parse("hello")
[00:24] <camelia> rakudo-moar 6b186020a: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in regex take at <tmp> line 1␤  in regex TOP at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»
[00:25] <ugexe> to me this makes it not worth having such methods
[00:58] *** Kaiepi left
[00:58] *** Kaipi joined
[01:05] *** Kaiepi joined
[01:05] *** Kaipi left
[01:13] <raydiak> that's rather disturbing. declaring a method in a class masks out a builtin. why should rules in a grammar be so different?
[01:22] <raydiak> of course, that doesn't really fix the surprises for classes either, if you're looking at it from the other direction:
[01:23] <raydiak> m: class C { method take { 1 } }; say gather C.take
[01:23] <camelia> rakudo-moar 6b186020a: OUTPUT: «()␤»
[01:36] *** Kaiepi left
[01:39] *** Kaiepi joined
[01:59] *** squashable6 left
[02:00] *** squashable6 joined
[02:03] *** frost joined
[03:58] *** evalable6 left
[03:58] *** linkable6 left
[03:59] *** evalable6 joined
[04:01] *** linkable6 joined
[05:36] *** razetime joined
[05:51] *** razetime left
[06:03] *** reportable6 left
[06:04] *** reportable6 joined
[07:29] *** patrickb joined
[07:32] *** patrickb left
[07:33] *** patrickb joined
[07:52] *** |Tux| left
[08:09] <Geth> ¦ roast: Kaiepi++ created pull request #743: Add tests for type constraints on forwarded, constrained eneric doees
[08:09] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/743
[08:55] *** evalable6 left
[08:55] *** linkable6 left
[08:57] *** linkable6 joined
[08:58] *** evalable6 joined
[09:20] <Kaiepi> greppable6, set_why
[09:20] <greppable6> Kaiepi, 1 line, 1 module: https://gist.github.com/b280ef02043667636bfb59b8d8914958
[09:22] <Kaiepi> greppable6, WHY
[09:22] <greppable6> Kaiepi, 353 lines, 25 modules: https://gist.github.com/a5f624b69e4dc5c7fddad51c18393abc
[09:44] *** Kaiepi left
[09:54] *** Kaiepi joined
[10:54] *** linkable6 left
[10:54] *** evalable6 left
[10:55] *** evalable6 joined
[10:56] *** linkable6 joined
[11:00] *** patrickb left
[11:09] <Geth> ¦ rakudo: tbrowder++ created pull request #4441: Add a new doc with guidance for adding new features
[11:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4441
[11:33] <Geth> ¦ nqp: 3f63eebb88 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION
[11:33] <Geth> ¦ nqp: Bump Moar to get latest goodies
[11:33] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/3f63eebb88
[11:48] *** squashable6 left
[11:49] *** squashable6 joined
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:11] *** patrickb joined
[12:18] <Geth> ¦ rakudo: 2bf59702e8 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION
[12:18] <Geth> ¦ rakudo: Bump NQP for the latest MoarVM fixes
[12:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2bf59702e8
[12:19] <lizmat> still feels weird for me to make a local change, push to Github, then having Github send a message to the other computer on my desk, which then sends a message to IRC  :-)
[12:26] <sena_kun> lizmat, if it works - it's great. :)
[12:26] <lizmat> indeed :-)
[12:36] <sena_kun> lizmat, is there a chance you'll have time to look at the logs website anytime soon?
[12:36] <lizmat> sena_kun: I hope to do so later today
[12:36] <sena_kun> yay
[12:36] <sena_kun> lizmat, I have a day off today, so feel free to ping me.
[12:37] <lizmat> will do
[12:37] <lizmat> I hope we won't have torrential rain again, so I don't have to scoop up water in basements anymore  :=)
[12:38] <sena_kun> ugh, this doesn't sound very pleasant. :S
[12:41] <lizmat> no, it isn't: the day after the first time, I felt muscles I didn't know I had for the next 3 days  :-)
[12:43] <sena_kun> wow
[12:52] <patrickb> lizmat++, sena_kun++ # Very grateful for you people doing website work, which I more often than not perceive as the necessary, but -/Ofun work
[12:53] <sena_kun> patrickb, thank you! /me is in awe for all the build-related tickets
[12:53] <sena_kun> hmm, is there no package in roast for regexes?
[12:54] <sena_kun> hmm, maybe metasyntax/regex.t is the correct place...
[12:58] <Geth> ¦ roast/test-for-2118: 755474f917 | Altai-man++ | S05-metasyntax/regex.t
[12:58] <Geth> ¦ roast/test-for-2118: Add tests for #2118
[12:58] <Geth> ¦ roast/test-for-2118: review: https://github.com/Raku/roast/commit/755474f917
[12:58] <Geth> ¦ roast: Altai-man++ created pull request #744: Add tests for #2118
[12:59] <Geth> ¦ roast: Altai-man++ created pull request #744: Add tests for #2118
[12:59] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/744
[12:59] <sena_kun> for those who want a simple closing of a rakudo ticket... :)
[13:03] <Geth> ¦ roast: 755474f917 | Altai-man++ | S05-metasyntax/regex.t
[13:03] <Geth> ¦ roast: Add tests for #2118
[13:03] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/755474f917
[13:03] <Geth> ¦ roast: 9a5827030c | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | S05-metasyntax/regex.t
[13:03] <Geth> ¦ roast: Merge pull request #744 from Raku/test-for-2118
[13:03] <Geth> ¦ roast: 
[13:03] <Geth> ¦ roast: Add tests for #2118
[13:03] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/9a5827030c
[13:04] <sena_kun> greppable6, .status
[13:04] <greppable6> sena_kun, 4425 lines, 391 modules: https://gist.github.com/33047fc0a8d7aa9f68af99f51fcb150d
[13:12] <patrickb> sena_kun: Is thera any interesting progress behind the curtains on the docs website rewrite?
[13:14] <sena_kun> patrickb, we're in a stalemate for weeks now. I am sure https://ruverses.com/ivan-krylov/swan-pike-and-crawfish/3709/ describes the situation pretty much minus personal attacks.
[13:16] <patrickb> What?! :-( Sad to hear.
[13:17] <lizmat> if it hadn't been for quite a lot of other stuff happening, I would have broken the stalemate, for better or worse
[13:17] <Geth> ¦ rakudo/deprecate-Proc-status: 713aca3f26 | Altai-man++ | src/core.c/Proc.pm6
[13:17] <Geth> ¦ rakudo/deprecate-Proc-status: Deprecate `status` method of `Proc` in place of exitcode` and `signal`
[13:17] <Geth> ¦ rakudo/deprecate-Proc-status: review: https://github.com/rakudo/rakudo/commit/713aca3f26
[13:17] <sena_kun> patrickb, :(
[13:21] <Geth> ¦ rakudo: Altai-man++ created pull request #4442: Deprecate `status` method of `Proc` in place of exitcode` and `signal`
[13:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4442
[13:24] <Geth> ¦ rakudo/deprecate-Proc-status: ff09b3122b | Altai-man++ | src/core.c/Proc.pm6
[13:24] <Geth> ¦ rakudo/deprecate-Proc-status: Deprecate `status` method of `Proc` in place of exitcode` and `signal`
[13:24] <Geth> ¦ rakudo/deprecate-Proc-status: review: https://github.com/rakudo/rakudo/commit/ff09b3122b
[13:30] <Geth> ¦ roast/test-for-1358: 0456495210 | Altai-man++ | S06-signature/unspecified.t
[13:30] <Geth> ¦ roast/test-for-1358: Add test for #1358
[13:30] <Geth> ¦ roast/test-for-1358: review: https://github.com/Raku/roast/commit/0456495210
[13:30] <Geth> ¦ roast: Altai-man++ created pull request #745: Add test for #1358
[13:30] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/745
[13:32] <Geth> ¦ rakudo: 249fdba2a2 | Altai-man++ (committed using GitHub Web editor) | src/core.c/Proc.pm6
[13:32] <Geth> ¦ rakudo: Deprecate `status` method of `Proc` in place of exitcode` and `signal` (#4442)
[13:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/249fdba2a2
[13:32] *** linkable6 left
[13:33] <Geth> ¦ roast: 0456495210 | Altai-man++ | S06-signature/unspecified.t
[13:33] <Geth> ¦ roast: Add test for #1358
[13:33] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/0456495210
[13:33] <Geth> ¦ roast: 059c11b0da | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | S06-signature/unspecified.t
[13:33] <Geth> ¦ roast: Merge pull request #745 from Raku/test-for-1358
[13:33] <Geth> ¦ roast: 
[13:33] <Geth> ¦ roast: Add test for #1358
[13:33] *** linkable6 joined
[13:33] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/059c11b0da
[14:14] *** squashable6 left
[14:15] *** frost left
[14:16] <Geth> ¦ problem-solving/clarify-readme: fe9d5ca876 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | README.md
[14:16] <Geth> ¦ problem-solving/clarify-readme: Address some comments.
[14:16] <Geth> ¦ problem-solving/clarify-readme: review: https://github.com/Raku/problem-solving/commit/fe9d5ca876
[14:17] *** squashable6 joined
[14:28] <Geth> ¦ nqp/tests-for-iterator-misuse: a19e35583e | Altai-man++ | t/nqp/108-vmhash.t
[14:28] <Geth> ¦ nqp/tests-for-iterator-misuse: Add a test ensuring a Hash iterator misuse is not exploding
[14:28] <Geth> ¦ nqp/tests-for-iterator-misuse: review: https://github.com/Raku/nqp/commit/a19e35583e
[14:29] <Geth> ¦ nqp: Altai-man++ created pull request #731: Add a test ensuring a Hash iterator misuse is not exploding
[14:29] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/731
[14:51] <Geth> ¦ rakudo: a124df8317 | (Nguyễn Gia Phong)++ (committed using GitHub Web editor) | t/02-rakudo/19-mkdir.t
[14:51] <Geth> ¦ rakudo: Test mkdir when parent was created but child fails (#4408)
[14:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a124df8317
[14:52] *** linkable6 left
[14:55] *** linkable6 joined
[14:59] <Geth> ¦ rakudo/revert-4408-mkdir: a3b7939736 | (Vadim Belman)++ (committed using GitHub Web editor) | t/02-rakudo/19-mkdir.t
[14:59] <Geth> ¦ rakudo/revert-4408-mkdir: Revert "Test mkdir when parent was created but child fails (#4408)"
[14:59] <Geth> ¦ rakudo/revert-4408-mkdir: 
[14:59] <Geth> ¦ rakudo/revert-4408-mkdir: This reverts commit a124df83176dd59e490892094f4a0b8b6460be70.
[14:59] <Geth> ¦ rakudo/revert-4408-mkdir: review: https://github.com/rakudo/rakudo/commit/a3b7939736
[14:59] <Geth> ¦ rakudo: vrurg++ created pull request #4444: Revert "Test mkdir when parent was created but child fails"
[14:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4444
[15:00] <Geth> ¦ rakudo: a3b7939736 | (Vadim Belman)++ (committed using GitHub Web editor) | t/02-rakudo/19-mkdir.t
[15:00] <Geth> ¦ rakudo: Revert "Test mkdir when parent was created but child fails (#4408)"
[15:00] <Geth> ¦ rakudo: 
[15:00] <Geth> ¦ rakudo: This reverts commit a124df83176dd59e490892094f4a0b8b6460be70.
[15:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a3b7939736
[15:00] <Geth> ¦ rakudo: 3f5271bcf4 | (Vadim Belman)++ (committed using GitHub Web editor) | t/02-rakudo/19-mkdir.t
[15:00] <Geth> ¦ rakudo: Merge pull request #4444 from rakudo/revert-4408-mkdir
[15:00] <Geth> ¦ rakudo: 
[15:00] <Geth> ¦ rakudo: Revert "Test mkdir when parent was created but child fails"
[15:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3f5271bcf4
[15:00] *** linkable6 left
[15:01] *** linkable6 joined
[15:02] <Geth> ¦ nqp/tests-for-iterator-misuse: 98f38a4b80 | Altai-man++ | t/nqp/108-vmhash.t
[15:02] <Geth> ¦ nqp/tests-for-iterator-misuse: Add a test ensuring a Hash iterator misuse is not exploding
[15:02] <Geth> ¦ nqp/tests-for-iterator-misuse: review: https://github.com/Raku/nqp/commit/98f38a4b80
[15:05] <sena_kun> hmm, I cannot build 2018 rakudo with rakubrew...
[15:05] <sena_kun> committable6, $_ = "foo"; dd {:foo, (if 1 { :bar })};
[15:05] <committable6> sena_kun, ¦$_: «Cannot find this revision (did you mean “all”?)»
[15:05] <sena_kun> committable6 all $_ = "foo"; dd {:foo, (if 1 { :bar })};
[15:07] <sena_kun> bisectable6, {:foo, (if 1 { :bar })}
[15:07] <bisectable6> sena_kun, Will bisect the whole range automagically because no endpoints were provided, hang tight
[15:07] <bisectable6> sena_kun, Output on all releases: https://gist.github.com/6448ee2a51e79373ff32892cc3d748dd
[15:07] <ugexe> looks like between 2018.12 and 2019.3.1
[15:07] <bisectable6> sena_kun, Bisecting by exit code (old=2018.12 new=2019.03.1). Old exit code: 1
[15:08] <bisectable6> sena_kun, bisect log: https://gist.github.com/7a88656fc9096515a314bdd7a8369cf7
[15:08] <bisectable6> sena_kun, (2019-01-04) https://github.com/rakudo/rakudo/commit/31c8fda2878d091f54247f034fba3f63b0942e75
[15:08] <bisectable6> sena_kun, Output on all releases and bisected commits: https://gist.github.com/b0ba40f97669600938c5b53b2b433465
[15:08] <sena_kun> ugexe, I was trying to see if the code without `dd` produces the exception and it does, so adding a test...
[15:12] <Geth> ¦ rakudo: 1ed2863890 | (Ben Davies)++ (committed using GitHub Web editor) | src/Perl6/Metamodel/CurriedRoleHOW.nqp
[15:12] <Geth> ¦ rakudo: Fix some errors WRT curried role typecheck lists (#4436)
[15:12] <Geth> ¦ rakudo: 
[15:12] <Geth> ¦ rakudo: Handle updates to curried role typecheck lists more lazily
[15:12] <Geth> ¦ rakudo: 
[15:12] <Geth> ¦ rakudo: The following throws upon composition of Bar:
[15:12] <Geth> ¦ rakudo: 
[15:12] <Geth> ¦ rakudo: role Foo[Any ::T]         { }
[15:12] <Geth> ¦ rakudo: <…commit message has 16 more lines…>
[15:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1ed2863890
[15:13] *** linkable6 left
[15:15] *** linkable6 joined
[15:16] <sena_kun> what
[15:17] <sena_kun> now `t/02-rakudo/15-gh_1202.t` fails for me in a spectest every time, but is alive when run independently
[15:17] <sena_kun> ooooooh
[15:17] <sena_kun> goodness
[15:17] <sena_kun> I broke rakudo. :/
[15:18] <sena_kun> ooooooh
[15:18] <sena_kun> goodness
[15:18] <sena_kun> I broke rakudo. :/
[15:22] <Geth> ¦ rakudo/remove-deprecated-method-usage-from-CORE: 320e1465e3 | Altai-man++ | src/core.c/Proc.pm6
[15:22] <Geth> ¦ rakudo/remove-deprecated-method-usage-from-CORE: Use private version of Proc.status, not deprecated one
[15:22] <Geth> ¦ rakudo/remove-deprecated-method-usage-from-CORE: review: https://github.com/rakudo/rakudo/commit/320e1465e3
[15:22] <sena_kun> lizmat, I believe ^ is pretty important. :(
[15:22] <Geth> ¦ rakudo: Altai-man++ created pull request #4445: Use private version of Proc.status, not deprecated one
[15:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4445
[15:23] <Geth> ¦ rakudo: 2fd458cc23 | Altai-man++ (committed using GitHub Web editor) | src/core.c/Proc.pm6
[15:23] <Geth> ¦ rakudo: Use private version of Proc.status, not deprecated one (#4445)
[15:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2fd458cc23
[15:23] *** linkable6 left
[15:24] <Geth> ¦ roast: 88b9793b6e | (Ben Davies)++ | 2 files
[15:24] <Geth> ¦ roast: Add tests for type constraints on forwarded, constrained generics
[15:24] <Geth> ¦ roast: 
[15:24] <Geth> ¦ roast: The bug WRT the roles metamethod does not appear to be possible to
[15:24] <Geth> ¦ roast: trigger without invoking it directly because the $transitive flag is set
[15:24] <Geth> ¦ roast: to 0 in noteworthy exposed metamethods that depend on it.
[15:24] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/88b9793b6e
[15:24] <Geth> ¦ roast: 92de7c26d9 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 2 files
[15:24] <Geth> ¦ roast: Merge pull request #743 from Kaiepi/curried-role-typecheck-list
[15:24] <Geth> ¦ roast: 
[15:24] <Geth> ¦ roast: Add tests for type constraints on forwarded, constrained generics
[15:24] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/92de7c26d9
[15:25] *** linkable6 joined
[15:28] <Geth> ¦ roast/test-for-1486: eac9b1ba7d | Altai-man++ | S09-hashes/objecthash.t
[15:28] <Geth> ¦ roast/test-for-1486: Add test for #1486
[15:28] <Geth> ¦ roast/test-for-1486: review: https://github.com/Raku/roast/commit/eac9b1ba7d
[15:28] <Geth> ¦ roast: Altai-man++ created pull request #746: Add test for #1486
[15:28] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/746
[15:31] *** patrickb left
[15:47] <lizmat> meh, it looks like 1ed28638909feb1a444ec01 broke  Buf ~~ Stringy
[15:47] <lizmat> bisectable6 --old=2021.06 dd Buf ~~ Stringy
[15:47] <lizmat> bisectable6: --old=2021.06 dd Buf ~~ Stringy
[15:47] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight
[15:47] <lizmat> bisectable6: help
[15:47] <bisectable6> lizmat, Output on all releases: https://gist.github.com/b63731f13fd8869dbc8cab65e75420c8
[15:47] <bisectable6> lizmat, Nothing to bisect!
[15:47] <bisectable6> lizmat, Like this: bisectable6: old=2015.12 new=HEAD exit 1 if (^∞).grep({ last })[5] // 0 == 4 # See wiki for more examples: https://github.com/Raku/whateverable/wiki/Bisectable
[15:48] <lizmat> bisectable6: old=2021.06 dd Buf ~~ Stringy
[15:48] <bisectable6> lizmat, Bisecting by output (old=2021.06 new=2fd458c) because on both starting points the exit code is 0
[15:48] <bisectable6> lizmat, bisect log: https://gist.github.com/6144fadce047ef9fa4411b4b7158a044
[15:48] <bisectable6> lizmat, (2021-07-06) https://github.com/rakudo/rakudo/commit/1ed28638909feb1a444ec0156fe5fa8b27fc9922
[15:48] <lizmat> Kaiepi: ^^
[15:51] <Kaiepi> taking a look
[15:58] <Geth> ¦ rakudo: 6dbe45eee5 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/CurriedRoleHOW.nqp
[15:58] <Geth> ¦ rakudo: Revert "Fix some errors WRT curried role typecheck lists (#4436)"
[15:58] <Geth> ¦ rakudo: 
[15:58] <Geth> ¦ rakudo: This reverts commit 1ed28638909feb1a444ec0156fe5fa8b27fc9922.
[15:58] <Geth> ¦ rakudo: 
[15:58] <Geth> ¦ rakudo: This changes:
[15:58] <Geth> ¦ rakudo: 
[15:58] <Geth> ¦ rakudo:   dd Buf.^roles
[15:58] <Geth> ¦ rakudo: <…commit message has 10 more lines…>
[15:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6dbe45eee5
[15:59] *** linkable6 left
[16:00] *** linkable6 joined
[17:45] *** Xliff joined
[17:46] <[Coke]> build on windows failed with "... Cannot open include file: 'uv.h': No such file or directory
[17:46] <[Coke]> I think liz mentioned this as happening after some of the recent merges.
[17:47] <japhb> Lots of commits this morning, wheeeee
[17:47] *** Xliff left
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[18:36] *** discord-raku-bot joined
[18:56] <Geth> ¦ rakudo/revert-4444-revert-4408-mkdir: 5976e30e28 | (Vadim Belman)++ (committed using GitHub Web editor) | t/02-rakudo/19-mkdir.t
[18:56] <Geth> ¦ rakudo/revert-4444-revert-4408-mkdir: Revert "Revert "Test mkdir when parent was created but child fails""
[18:56] <Geth> ¦ rakudo/revert-4444-revert-4408-mkdir: review: https://github.com/rakudo/rakudo/commit/5976e30e28
[18:56] <Geth> ¦ rakudo: vrurg++ created pull request #4446: Revert "Revert "Test mkdir when parent was created but child fails""
[18:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4446
[20:36] *** patrickb joined
[20:38] <patrickb> Am I right to assume, that for the time being tyil won't be maintaining the Star Bundle anymore?
[20:39] <ugexe> yes
[20:40] <patrickb> If yes, I think we need to decide, how we continue with the Star Bundle. Should we just take over or not do Star for the time being?
[20:45] <ugexe> if someone wants to do it they would not be stepping on any toes for now so to speak
[20:45] <patrickb> OK. Thanks for clarifying!
[20:46] <ugexe> is it worth the effort? not to me personally, but it seems like new people seem to use it more than i expect
[20:52] <patrickb> I personally oppose the idea of the Star Bundle (I'd prefer we'd encourage people to learn how to use Zef), but I know there are people with a different opinion. And as it currently stands the Star Bundle is a thing we set out to do. So as long as we don't officially (whatever that means) decide to stop doing Star Bundles I'd like to see them happen.
[21:08] <Geth> ¦ rakudo: 5976e30e28 | (Vadim Belman)++ (committed using GitHub Web editor) | t/02-rakudo/19-mkdir.t
[21:08] <Geth> ¦ rakudo: Revert "Revert "Test mkdir when parent was created but child fails""
[21:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5976e30e28
[21:08] <Geth> ¦ rakudo: 1e6d93c29f | (Vadim Belman)++ (committed using GitHub Web editor) | t/02-rakudo/19-mkdir.t
[21:08] <Geth> ¦ rakudo: Merge pull request #4446 from rakudo/revert-4444-revert-4408-mkdir
[21:08] <Geth> ¦ rakudo: 
[21:08] <Geth> ¦ rakudo: Revert "Revert "Test mkdir when parent was created but child fails""
[21:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1e6d93c29f
[21:43] *** patrickb left
[23:44] <[Coke]> i'd be ok if star retired.
[23:45] <[Coke]> I think getting rakudo+zef with no modules is perfect.
