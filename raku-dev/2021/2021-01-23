[00:16] *** lucasb left
[00:27] *** sortiz joined
[00:38] *** sortiz left
[00:42] *** JRaspass left
[04:47] *** epony left
[04:52] *** epony joined
[06:00] *** quotable6 left
[06:00] *** nativecallable6 left
[06:00] *** benchable6 left
[06:00] *** releasable6 left
[06:00] *** linkable6 left
[06:00] *** notable6 left
[06:00] *** shareable6 left
[06:00] *** greppable6 left
[06:00] *** squashable6 left
[06:00] *** coverable6 left
[06:00] *** sourceable6 left
[06:00] *** bloatable6 left
[06:00] *** unicodable6 left
[06:00] *** evalable6 left
[06:00] *** statisfiable6 left
[06:00] *** committable6 left
[06:00] *** bisectable6 left
[06:00] *** tellable6 left
[06:00] *** shareable6 joined
[06:01] *** bloatable6 joined
[06:01] *** coverable6 joined
[06:01] *** releasable6 joined
[06:01] *** nativecallable6 joined
[06:01] *** benchable6 joined
[06:01] *** sourceable6 joined
[06:02] *** linkable6 joined
[06:02] *** bisectable6 joined
[06:02] *** notable6 joined
[06:02] *** statisfiable6 joined
[06:02] *** committable6 joined
[06:02] *** tellable6 joined
[06:02] *** squashable6 joined
[06:02] *** greppable6 joined
[06:03] *** unicodable6 joined
[06:03] *** quotable6 joined
[06:03] *** evalable6 joined
[08:26] *** patrickb joined
[09:04] *** SmokeMachine left
[09:06] *** SmokeMachine joined
[09:09] *** JJAtria[m] left
[09:10] *** MitarashiDango[4 left
[09:10] *** AlexDaniel` left
[09:10] *** unclechu left
[09:39] *** MitarashiDango[4 joined
[09:39] *** JJAtria[m] joined
[09:55] *** JJAtria[m] left
[09:56] *** MitarashiDango[4 left
[10:09] *** sena_kun joined
[10:18] *** JJAtria[m] joined
[10:29] *** MitarashiDango[m joined
[10:29] *** AlexDaniel` joined
[10:29] *** unclechu joined
[11:40] *** JRaspass joined
[11:50] *** MasterDuke joined
[12:14] <sena_kun> ugexe, ping?

[12:42] <sena_kun> Enabled fetching backends [git path curl] don't understand http://www.cpan.org/authors/id/J/JN/JNTHN/Perl6/cro-core-0.8.4.tar.gz

[12:42] <sena_kun> You may need to configure one of the following backends, or install its underlying software - [wget pswebrequest]

[12:43] <sena_kun> Interesting...

[12:45] <nine> sena_kun: can you run zef --debug install cro?

[12:46] <sena_kun> nine, that's the output with --debug from Blin. I checked the container and _indeed_ there was no wget available... Which is hella odd, but does not seem like a fault of rakudo or zef, so it is probably safe to release.

[12:48] <sena_kun> This docker image worked just fine for a year of releases or something on different machines and now I just switch to my old garbage laptop and boom, something as essential was not installed into the docker image, creepy.

[12:48] <sena_kun> afk

[12:53] <nine> Ah, docker. That may explain why curl can't download an http URI...

[13:15] <nine> The whole by-reference vs. by-value situation in NativeCall sucks. We have a workaround for inlined data structures with HAS vs. has (a not quite self documenting syntactical difference). But nothing of this sort exists for passing complex data bytes as arguments or having arrays of them.

[13:17] <nine> C makes this distinction by having Foo (value) vs Foo* (pointer). Since pointers are very common, we take pointers by default, even when a Type is not qualified as such. sub foo(Foo) translates to void foo(Foo*).

[13:21] <nine> It would be easy to follow C and have a way to get a pointer to a structure (type). Indeed, one of them is already implemented: Pointer[MyStruct]. Possibilities would be $struct.^pointer or even some new operator so there's less typing involved.

[13:22] <nine> But when the unqualified name already means "pointer to this thing" there's no obvious way to say that one really means the structure itself.

[13:24] <MasterDuke> NativeCall<ver 2>?

[13:26] <nine> May become unavoidable :/ Even so, support for something like MyStruct[] would take a lot of effort on the VM side. The same assumptions govern the whole stack

[13:57] *** donaldh left
[14:10] *** JRaspass left
[14:22] *** MasterDuke left
[15:20] *** Xliff joined
[15:20] <Xliff> \o

[15:20] <Xliff> .seen dwarring

[15:20] <tellable6> Xliff, I saw dwarring 2021-01-05T18:21:11Z in #raku: * dwarring drinks coffee

[15:21] <Xliff> .tell dwarring Does LibXML expose xmlNsPtr to Raku? If so, what compunit do I need to load to get it? Thanks.

[15:21] <tellable6> Xliff, I'll pass your message to dwarring

[15:22] *** JRaspass joined
[16:22] *** Kaiepi left
[16:23] *** Kaiepi joined
[16:23] *** Kaiepi left
[16:24] *** Kaiepi joined
[17:03] * lizmat just pushec  https://github.com/rakudo/rakudo/commit/164815f6ec550a182cfc602d53

[17:03] <lizmat> Introduce Rakudo::Internals.RERUN-WITH method

[17:12] * lizmat just pushed  https://github.com/rakudo/rakudo/commit/c8647ad47f945a821283dbfd859

[17:12] <lizmat> Introduce the SIL core development helper class

[18:30] <ugexe> sena_kun: you did have curl installed though, and that error message is the result of a pretty basic (pure raku) checkk -- https://github.com/ugexe/zef/blob/f018e1eb2f5ae21f2565557678b83235b585159e/lib/Zef/Service/Shell/curl.rakumod#L70-L73

[18:36] <ugexe> that one has always felt like raku is occasionally doing something wrong with dynamically loaded modules/classes

[19:18] <sena_kun> I reliably get the error for every possible module when run in Blin docker container that worked for years. At the same time I can install modules on this machine fine. It is not a Rakudo regression, because if I run Blin between 2020.11 and 2020.12, it's the same.

[19:18] <sena_kun> Anyway, no release today, this whole situation sucks.

[19:38] *** linkable6 left
[19:38] *** evalable6 left
[19:38] *** evalable6 joined
[19:39] <ugexe> the issue, if its rakudo related, would have existed for years

[19:40] *** linkable6 joined
[19:42] <ugexe> my wild guess is something like: precompilation of dynamically loaded modules (the plugins e.g. curl, wget, etc) occasionally does something wrong in such a way that the code still loads, but the method call fails for some reason related to the wrong precomp bits having happened

[19:43] <ugexe> the logic for that check in zef is so straightward otherwise that i dont think the issue is in zef

[19:46] <ugexe> if you can continue to reproduce it i'd be interested to see what the value of $uri is inside that fetch-matcher sub above since it apparently doesnt start with 'http' in that situation

[19:47] <ugexe> but any other time ive seen this happened the issue would go away after rerunning

[19:48] <sena_kun> I have rebuilt the container number of times, purged mounted data volume.

[19:49] <sena_kun> Plus a Blin ran at the infra server we have did not go well, taking some very bad time to run.

[19:49] *** lucasb joined
[19:51] <sena_kun> Anyway, right now I simply have no tech conditions to look at all this and pushing out a release knowing there is something like this is a suicide, so good luck next time. Sorry for pinging you for all this, ugexe++

[20:22] <ugexe> zef added the fez ecosystem in the last week, so that could potentially slow things down

[20:37] *** Kaiepi left
[20:43] *** Kaiepi joined
[20:46] *** Kaeipi joined
[20:46] *** Kaiepi left
[21:10] *** Kaeipi left
[21:10] *** Merfont joined
[21:27] *** Kaiepi joined
[21:28] *** Merfont left
[22:19] *** sena_kun left
[22:41] * lizmat just pushed  https://github.com/rakudo/rakudo/commit/1fb058e65834f245fb2f3a

[22:41] <lizmat> First test file to test inlining

[22:54] *** patrickb left
