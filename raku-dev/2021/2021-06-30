[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:45] *** Xliff joined
[02:04] *** nativecallable6 left
[02:04] *** statisfiable6 left
[02:04] *** sourceable6 left
[02:04] *** squashable6 left
[02:04] *** bloatable6 left
[02:04] *** bisectable6 left
[02:04] *** evalable6 left
[02:04] *** reportable6 left
[02:04] *** greppable6 left
[02:04] *** committable6 left
[02:04] *** unicodable6 left
[02:04] *** releasable6 left
[02:04] *** notable6 left
[02:04] *** quotable6 left
[02:04] *** benchable6 left
[02:04] *** linkable6 left
[02:04] *** tellable6 left
[02:04] *** shareable6 left
[02:04] *** coverable6 left
[02:04] *** coverable6 joined
[02:04] *** sourceable6 joined
[02:04] *** nativecallable6 joined
[02:04] *** bisectable6 joined
[02:05] *** quotable6 joined
[02:05] *** unicodable6 joined
[02:05] *** reportable6 joined
[02:05] *** releasable6 joined
[02:06] *** statisfiable6 joined
[02:06] *** committable6 joined
[02:06] *** squashable6 joined
[02:06] *** linkable6 joined
[02:06] *** notable6 joined
[02:06] *** greppable6 joined
[02:06] *** evalable6 joined
[02:07] *** benchable6 joined
[02:07] *** bloatable6 joined
[02:07] *** shareable6 joined
[02:07] *** tellable6 joined
[05:32] *** Kaiepi left
[05:33] *** Kaiepi joined
[05:42] *** Kaiepi left
[05:45] *** Kaiepi joined
[06:00] *** Kaiepi left
[06:00] *** Kaiepi joined
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:45] *** frost joined
[06:48] *** patrickb joined
[08:18] *** patrickb left
[09:01] *** patrickb joined
[09:13] *** patrickb left
[09:40] *** jdv left
[09:40] *** jdv joined
[10:14] <AlexDaniel> Whew. Misclicked on a GitHub comment reaction, hope nobody saw it. Good that I double checked

[11:08] *** Xliff left
[11:08] *** squashable6 left
[11:09] *** squashable6 joined
[11:13] *** patrickb joined
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:12] *** frost left
[12:25] *** dogbert17 joined
[12:28] *** dogbert11 left
[13:08] *** dogbert11 joined
[13:11] *** dogbert12 joined
[13:11] *** dogbert17 left
[13:13] *** dogbert11 left
[15:20] *** melezhik joined
[16:24] *** patrickb left
[16:24] *** sortiz joined
[17:02] *** sortiz left
[17:15] <melezhik> releasable: status

[17:15] <releasable6> melezhik, Next release in ≈23 days and ≈1 hour. 1 blocker. Changelog for this release was not started yet

[17:15] <releasable6> melezhik, Details: https://gist.github.com/54e358d38720379edc59918667a7c8bb

[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:08] <tbrowder> howdy, i'm having trouble with my pr to add the modf routine to core

[18:10] <tbrowder> my Modf module's algorithm works perfectly on the same tests as i've added in a pr for roast, but basically the same algorithm in core fails.

[18:11] <tbrowder> for one thing i am trying to return a list and wonder if it might need to be typed,

[18:12] <tbrowder> also, i am patterning the entries in Cool, etc. after the code for for the log routine.

[18:14] <tbrowder> my question at the moment is: is there any special handling needed for returning a List for a number type?

[18:15] <tbrowder> afk&

[18:59] <nine> Ok, I finally had a look at S01-perl-integration/roundtrip.t. The failure is caused by https://github.com/niner/Inline-Perl5/commit/bb81304b938473a30c4b575d4225c13f3e969634

[19:00] <nine> So it was a bit of an intentional change in semantics (to no longer flatten arguments). You can see by the changes the commit makes to examples and far down to the tests for why I made it.

[19:01] <nine> The failing spec tests expects those hash keys to be passed as arguments instead of an array containing those keys in: $tohash_p5.(keys %hash);

[19:02] <nine> Like I mentioned in the commit message, the new way to write this would be $tohash_p5.(|keys %hash); but...it's a spec test. So is it a good idea to just change it?

[19:20] *** evalable6 left
[19:20] *** linkable6 left
[19:20] <lizmat> I think so

[19:21] *** linkable6 joined
[19:22] <MasterDuke> can it be versioned?

[19:23] *** evalable6 joined
[19:29] <lizmat> https://developer.apple.com/documentation/macos-release-notes/macos-catalina-10_15-release-notes#Scripting-Language-Runtimes

[19:29] <lizmat> aka, we may have an issue booting Rakudo on future MacOS machines

[19:43] <tonyo> time for rakudo to compile itself

[19:44] <jdv> is that easier/better than packaging for macos more like windows?

[19:45] <jdv> also, is installing perl as a pre-req that big of a deal?

[19:55] <lizmat> fwiw, I think more generally we need to think of a way to remove the dependency on perl to build Rakudo

[19:56] *** melezhik left
[20:10] <leont> In practive, macos is shipped with triple digit number of perl scripts in /usr/bin AFAIK, that won't be an urgent issue.

[20:10] <leont> And in general I think it makes most sense to start at the bottom, and remove the dependency on perl in moarvm and nqp first

[20:12] <leont> It would be interesting to have most of rakudo's tooling in nqp, though that would still require  a little of something if we want to keep something like --gen-moar and such

[20:15] <leont> (well, I suppose it doesn't even have to be nqp, but it does have to be bytecode that moarvm can run)

[20:39] <jdv> i would think there's value in not requiring the thing to build the thing

[22:08] *** AlexDaniel left
[22:09] *** AlexDaniel joined
[22:39] *** cognominal left
[22:41] *** cognominal joined
