[01:29] *** colomon joined
[01:31] *** colomon left
[02:34] *** ggoebel joined
[03:14] *** ggoebel left
[03:49] *** dogbert17 joined
[03:50] *** dogbert11 joined
[03:53] *** dogbert17 left
[04:20] *** dogbert17 joined
[04:23] *** dogbert11 left
[04:30] *** coverable6 joined
[05:05] *** hankache joined
[05:20] *** reportable6 joined
[06:02] *** reportable6 left
[07:15] *** reportable6 joined
[07:16] *** raydiak joined
[09:00] *** Kaiepi left
[09:02] *** hankache left
[09:02] *** hankache joined
[09:14] *** Kaiepi joined
[09:23] <[TuxCM]> Rakudo v2021.05-2-g4183cdaf3 (v6.d) on MoarVM 2021.05-11-gf98088a91

[09:23] <[TuxCM]> csv-test-xs-20      0.383 -  0.398

[09:23] <[TuxCM]> test-t --race       0.959 -  1.008

[09:23] <[TuxCM]> csv-ip5xs           1.007 -  1.028

[09:23] <[TuxCM]> test-t              2.262 -  2.373

[09:23] <[TuxCM]> test                8.351 -  9.007

[09:23] <[TuxCM]> test-t-20 --race   10.405 - 11.730

[09:23] <[TuxCM]> csv-ip5xs-20        9.837 - 10.531

[09:23] <[TuxCM]> csv-parser         28.983 - 29.164

[09:23] <[TuxCM]> test-t-20          37.364 - 37.529

[10:39] *** morayj joined
[11:35] *** morayj left
[11:35] *** patrickb joined
[11:56] *** ggoebel joined
[12:02] *** reportable6 left
[12:05] *** reportable6 joined
[12:19] *** morayj joined
[12:21] *** morayj left
[14:10] *** vrurg_ joined
[14:12] *** vrurg left
[14:12] *** sena_kun joined
[15:12] *** b2gills joined
[15:28] <Geth> ¦ rakudo/workers-for-long-queues: e1edf61bd9 | (Jonathan Worthington)++ | src/core.c/ThreadPoolScheduler.pm6

[15:28] <Geth> ¦ rakudo/workers-for-long-queues: Tweak worker addition for many small tasks

[15:28] <Geth> ¦ rakudo/workers-for-long-queues: 

[15:28] <Geth> ¦ rakudo/workers-for-long-queues: Today we add additional workers to the thread pool based upon lack of

[15:28] <Geth> ¦ rakudo/workers-for-long-queues: progress. This works well when work items are relatively large, and so

[15:28] <Geth> ¦ rakudo/workers-for-long-queues: hold on to a worker for a while. For applications that schedule lots of

[15:28] <Geth> ¦ rakudo/workers-for-long-queues: small pieces of work that are well below the threshold at which the

[15:28] <Geth> ¦ rakudo/workers-for-long-queues: supervisor runs, however, some work is always completed, and so the

[15:28] <Geth> ¦ rakudo/workers-for-long-queues: <…commit message has 10 more lines…>

[15:28] <Geth> ¦ rakudo/workers-for-long-queues: review: https://github.com/rakudo/rakudo/commit/e1edf61bd9

[15:28] <Geth> ¦ rakudo: jnthn++ created pull request #4380: Tweak worker addition for many small tasks

[15:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4380

[15:44] *** vrurg joined
[15:44] *** vrurg_ left
[16:52] *** squashable6 left
[16:55] *** squashable6 joined
[17:48] *** zostay joined
[18:02] *** reportable6 left
[18:03] *** hankache left
[18:04] *** reportable6 joined
[18:32] *** hankache joined
[18:32] <japhb> Actually, I think that worker addition tweak is likely to help with a few other use cases that I've had where Rakudo struggled to find all the parallelism in my code (especially multiple simultaneous animations, where tasks were often significantly shorter than a frame length, but I had a *lot* to parallelize over).

[18:53] *** hankache left
[19:55] <[Coke]> .ask samcv if we can close https://github.com/rakudo/rakudo/issues/2337 now.

[19:55] <tellable6> [Coke], I'll pass your message to samcv

[19:58] <[Coke]> https://github.com/rakudo/rakudo/issues/2220 looks closeable as "works as intended"

[20:14] <[Coke]> is JJ's performance request here ys completed, and so the

[20:15] <[Coke]> is JJ's performance request here reasonable: https://github.com/rakudo/rakudo/issues/1675 ? 

[22:48] *** patrickb left
