[00:03] *** b2gills joined
[00:58] *** softmoth joined
[01:16] *** kvw_5 left
[01:18] *** kvw_5 joined
[02:37] *** lucasb left
[03:00] <releasable6> Next release in ≈1 day and ≈15 hours. 2 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:33] *** MasterDuke left
[04:03] *** softmoth left
[06:06] *** Xliff left
[06:19] *** domidumont joined
[06:34] <nine> lizmat: could Julian dates be a subclass of DateTime?

[07:12] *** patrickb joined
[07:38] <moritz> if there are Julian dates, why are there no Moritzian dates? :D

[07:48] <nwc10> Be careful what you wish for. It might all end in back-stabbing.

[07:48] <nwc10> more tangentally, strange things exist. eg https://en.wikipedia.org/wiki/Symmetry454

[07:49] <nwc10> it was referenced in london.pm a while back - it has implications for Thursdays.

[07:51] <moon-child> I never _could_ get the hang of thursdays...

[08:53] *** Geth joined
[09:19] <lizmat> japhb: so I nuked my install dir

[09:19] <lizmat> and installed zef from scratch

[09:19] <lizmat> and it *still* OO::Monitors won't install

[09:21] <lizmat> nuked ~/.zef/store  and all is well  

[10:36] <Geth> ¦ rakudo: 46483b8495 | (Elizabeth Mattijsen)++ | 9 files

[10:36] <Geth> ¦ rakudo: Revert "Restore the CachedIterator role"

[10:36] <Geth> ¦ rakudo: 

[10:36] <Geth> ¦ rakudo: This reverts commit dfae760106dd9a83e785da132f2bc2075fb160eb.

[10:36] <Geth> ¦ rakudo: 

[10:36] <Geth> ¦ rakudo: Alas, not enough time to check this out before the 2021.4 release.

[10:36] <Geth> ¦ rakudo: Better luck for the 2021.5 release I hope.

[10:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/46483b8495

[10:36] <lizmat> sena_kun ^^

[10:36] <sena_kun> lizmat, thanks for your efforts.

[10:36] <tellable6> 2021-04-15T23:25:33Z #raku-dev <vrurg> sena_kun I've updated the same gist at https://gist.github.com/vrurg/909802df8b6f1078499ccae1a42129a9

[10:39] <sena_kun> ouch

[10:42] <sena_kun> it seems we have a serious issue. :S

[10:42] <lizmat> sena_kun: which one do you mean?

[10:44] <sena_kun> lizmat, https://github.com/rakudo/rakudo/issues/4330 App::Uni was broken between last release and HEAD, it bisects to moarvm bump it seems.

[10:45] <sena_kun> So it seems we need a deep look at what happens.

[10:45] <lizmat> I see, I agree

[10:46] <sena_kun> releasable6, status

[10:46] <releasable6> sena_kun, Next release in ≈1 day and ≈8 hours. 3 blockers. 0 out of 177 commits logged (⚠ 1 warnings)

[10:46] <releasable6> sena_kun, Details: https://gist.github.com/c1abbe9a44d5349a9cbd8f688d8d8d4a

[10:46] <sena_kun> https://github.com/rakudo/rakudo/pull/4327 wants to be reviewed.

[10:47] <Geth> ¦ rakudo: 10c3dbb940 | (Daniel Sockwell)++ (committed using GitHub Web editor) | src/core.c/Main.pm6

[10:47] <Geth> ¦ rakudo: Minimal fix for MAIN usage regression (#4327)

[10:47] <Geth> ¦ rakudo: 

[10:47] <Geth> ¦ rakudo: This commit fixes the regression noted in #4278 (where certain complex

[10:47] <Geth> ¦ rakudo: default arguments would throw errors when used in a pre-compiled

[10:47] <Geth> ¦ rakudo: module, despite working fine is .raku files).  The implemented fix

[10:47] <Geth> ¦ rakudo: correctly treats these arguments as non-required, since they have

[10:47] <Geth> ¦ rakudo: defaults.

[10:47] <Geth> ¦ rakudo: <…commit message has 15 more lines…>

[10:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/10c3dbb940

[10:47] *** linkable6 left
[10:49] *** linkable6 joined
[11:33] *** hankache joined
[11:38] *** frost-lab joined
[11:40] *** hankache left
[11:51] *** frost-lab left
[12:52] *** Kaeipi joined
[12:54] *** Kaeipi left
[12:55] *** Kaiepi left
[13:35] *** sena_kun left
[13:37] *** sena_kun joined
[14:09] *** sena_kun left
[14:11] *** sena_kun joined
[15:00] *** cog left
[15:00] *** cog joined
[16:12] *** cog left
[16:13] *** cog joined
[16:18] <lizmat> moritz: did you see my privmsgs ?

[16:25] *** domidumont left
[16:59] *** softmoth joined
[17:11] <moritz> not yet, checking now

[17:30] <lizmat> m: role A[::T] { has T @.a }; class B is A[str] { }; say B.new.a.raku   #meh

[17:30] <camelia> rakudo-moar 10c3dbb94: OUTPUT: «Array[str].new()␤»

[17:30] <lizmat> that should be: array[str].new()

[18:03] <lizmat> m: role A[::T] { array[T] }    # a little premature ?

[18:03] <camelia> rakudo-moar 10c3dbb94: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Can only parameterize array with a native type, not T␤at <tmp>:1␤------> 3role A[::T] { array[T]7⏏5 }    # a little premature ?␤»

[18:04] <lizmat> m: role A[::T] { use nqp; dd nqp::objprimspec(T) }; class B is A[str] { }   # but T *can* be a native type

[18:04] <camelia> rakudo-moar 10c3dbb94: OUTPUT: «3␤»

[18:32] *** MasterDuke joined
[19:18] *** MasterDuke left
[19:19] *** MasterDuke joined
[19:24] <sena_kun> releasable6, status

[19:24] <releasable6> sena_kun, Next release in ≈23 hours. 3 blockers. 0 out of 178 commits logged (⚠ 1 warnings)

[19:24] <releasable6> sena_kun, Details: https://gist.github.com/99e02a7e965e7040ddba4a2769543ae8

[20:11] <Geth> ¦ nqp: fe0396a169 | (Daniel Green)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[20:11] <Geth> ¦ nqp: Disallow explicity specifying op write registers

[20:11] <Geth> ¦ nqp: 

[20:11] <Geth> ¦ nqp: This ability isn't used in NQP or Rakudo, and can cause confusion. E.g.,

[20:11] <Geth> ¦ nqp: `for nqp::split(",", "abc,def", "ghasdfi") { say($_) }` before would

[20:11] <Geth> ¦ nqp: print "ghasdfi", now it dies with `Arg count 3 doesn't equal required

[20:11] <Geth> ¦ nqp: operand count 2 for op 'split'`.

[20:11] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/fe0396a169

[20:11] <Geth> ¦ nqp: 906e54c8c1 | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/vm/moar/QAST/QASTOperationsMAST.nqp

[20:12] <Geth> ¦ nqp: Merge pull request #714 from MasterDuke17/no_longer_allow_explicitly_specifying_write_register_for_ops

[20:12] <Geth> ¦ nqp: 

[20:12] <Geth> ¦ nqp: Disallow explicity specifying op write registers

[20:12] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/906e54c8c1

[20:13] <Geth> ¦ nqp: e2d855c776 | (Nicholas Clark)++ | src/HLL/sprintf.nqp

[20:13] <Geth> ¦ nqp: No need to stringify the float twice in the `sprintf` implementation.

[20:13] <Geth> ¦ nqp: 

[20:13] <Geth> ¦ nqp: This is a small oversight introduced in Jan 2019 by commit afeef2b971c28ef4:

[20:13] <Geth> ¦ nqp:     First stab at making num use explicit

[20:13] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/e2d855c776

[20:13] <Geth> ¦ nqp: bfaea65d9c | (Nicholas Clark)++ | src/HLL/sprintf.nqp

[20:13] <Geth> ¦ nqp: Hoist the repeated calculation in `stringify-to-precision2` to a variable.

[20:13] <Geth> ¦ nqp: 

[20:13] <Geth> ¦ nqp: The difference between `10` and `10.0` makes no difference in this context.

[20:13] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/bfaea65d9c

[20:13] <Geth> ¦ nqp: 47c9796883 | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/HLL/sprintf.nqp

[20:13] <Geth> ¦ nqp: Merge pull request #715 from Raku/sprintf-tweaks

[20:13] <Geth> ¦ nqp: 

[20:13] <Geth> ¦ nqp: No need to stringify the float twice in the `sprintf` implementation.

[20:13] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/47c9796883

[20:15] *** cj_ left
[20:54] *** patrickb left
[22:47] *** softmoth left
[23:00] <releasable6> Next release in ≈19 hours. 3 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:26] *** softmoth joined
