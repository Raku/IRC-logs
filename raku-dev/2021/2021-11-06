[00:05] *** MasterDuke joined
[00:31] <timo> the from or to gets set to where the <( or )> was encountered during the matching process, if you want it to have distance from the end or beginning of string you'll have to .*

[00:31] <timo> it could be made a special case i guess?

[00:40] *** MasterDuke left
[01:50] <ugexe> so ive hacked together some stuff in zef to get it to avoid precomp on testing and precomp on install. the bad news it requires a slightly weirder workflow where zef would install to the staging install repo before testing and copying those files when e.g. tests pass

[01:51] <ugexe> not quite sure what to do with `zef test ...` though... with such a change that command should also install everything to a staging repo before testing

[02:04] *** frost left
[02:23] *** _Xliff_ left
[03:28] *** frost joined
[04:28] *** nativecallable6 left
[04:28] *** coverable6 left
[04:28] *** tellable6 left
[04:28] *** quotable6 left
[04:28] *** sourceable6 left
[04:28] *** greppable6 left
[04:28] *** unicodable6 left
[04:28] *** evalable6 left
[04:28] *** releasable6 left
[04:28] *** reportable6 left
[04:28] *** notable6 left
[04:28] *** benchable6 left
[04:28] *** bisectable6 left
[04:28] *** committable6 left
[04:28] *** squashable6 left
[04:28] *** shareable6 left
[04:28] *** linkable6 left
[04:28] *** statisfiable6 left
[04:28] *** bloatable6 left
[04:28] *** unicodable6 joined
[04:28] *** tellable6 joined
[04:28] *** committable6 joined
[04:28] *** notable6 joined
[04:28] *** coverable6 joined
[04:28] *** benchable6 joined
[04:29] *** reportable6 joined
[04:29] *** squashable6 joined
[04:30] *** bloatable6 joined
[04:30] *** shareable6 joined
[04:31] *** linkable6 joined
[04:31] *** quotable6 joined
[05:18] *** SmokeMachine left
[05:19] *** leont left
[05:19] *** zostay left
[05:20] *** kawaii_ left
[05:20] *** zostay joined
[05:22] *** leont joined
[05:22] *** kawaii_ joined
[05:28] *** evalable6 joined
[05:29] *** bisectable6 joined
[05:30] *** releasable6 joined
[05:30] *** nativecallable6 joined
[05:32] *** SmokeMachine joined
[06:03] *** reportable6 left
[06:06] *** reportable6 joined
[07:30] *** statisfiable6 joined
[07:30] *** greppable6 joined
[07:30] *** sourceable6 joined
[08:29] <lizmat> Files=1349, Tests=117858, 314 wallclock secs (34.84 usr  9.24 sys + 4274.28 cusr 356.39 csys = 4674.75 CPU)

[08:30] *** evalable6 left
[08:30] *** linkable6 left
[08:32] *** linkable6 joined
[09:08] *** MasterDuke joined
[09:15] *** frost left
[09:15] *** frost joined
[09:30] *** evalable6 joined
[10:28] *** frost left
[10:38] *** frost joined
[11:38] *** linkable6 left
[11:38] *** evalable6 left
[11:40] *** evalable6 joined
[11:56] <Altai-man> releasable6, status

[11:56] <releasable6> Altai-man, Next release in ≈13 days and ≈7 hours. 3 blockers. Changelog for this release was not started yet

[11:56] <releasable6> Altai-man, Details: https://gist.github.com/3c0d2eadb14b25ed4c914b03d4d3b112

[12:03] *** reportable6 left
[12:04] *** reportable6 joined
[12:40] *** linkable6 joined
[13:06] *** discord-raku-bot left
[13:40] <gfldex> m: class term:<Foo > { }; my \Foo = Foo .new;

[13:40] <camelia> rakudo-moar e98e17da7: OUTPUT: «No such method 'new' for invocant of type 'VMNull'.  Did you mean␤'new'?␤  in block <unit> at <tmp> line 1␤␤»

[13:56] *** discord-raku-bot joined
[15:22] *** evalable6 left
[15:22] *** linkable6 left
[15:25] *** frost left
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:39] *** squashable6 left
[19:24] *** linkable6 joined
[19:25] *** evalable6 joined
[19:42] *** squashable6 joined
[19:54] <Geth> ¦ rakudo/fix_stash_threading_issues: 85e1a83b9f | (Stefan Seifert)++ | 5 files

[19:54] <Geth> ¦ rakudo/fix_stash_threading_issues: Fix segfaults when multiple threads initialize dynamics

[19:54] <Geth> ¦ rakudo/fix_stash_threading_issues: 

[19:54] <Geth> ¦ rakudo/fix_stash_threading_issues: When multiple threads try to access an uninitialized dynamic like $*PROGRAM-NAME

[19:54] <Geth> ¦ rakudo/fix_stash_threading_issues: at the same time, they all will run the initialization code. This is mostly

[19:54] <Geth> ¦ rakudo/fix_stash_threading_issues: benign (just a little wasteful) but the actual assignment into the PROCESS::

[19:54] <Geth> ¦ rakudo/fix_stash_threading_issues: stash may lead to segfault as that's unsafe writing into a hash. Indeed, this

[19:54] <Geth> ¦ rakudo/fix_stash_threading_issues: not only affects PROCESS variables, but stashes in general. Since stashes are

[19:55] <Geth> ¦ rakudo/fix_stash_threading_issues: <…commit message has 7 more lines…>

[19:55] <Geth> ¦ rakudo/fix_stash_threading_issues: review: https://github.com/rakudo/rakudo/commit/85e1a83b9f

[19:55] <Geth> ¦ rakudo: niner++ created pull request #4622: Fix segfaults when multiple threads initialize dynamics

[19:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4622

[20:06] <Geth> ¦ rakudo/fix_stash_threading_issues: db136bc52d | (Stefan Seifert)++ | 5 files

[20:06] <Geth> ¦ rakudo/fix_stash_threading_issues: Fix segfaults when multiple threads initialize dynamics

[20:06] <Geth> ¦ rakudo/fix_stash_threading_issues: 

[20:06] <Geth> ¦ rakudo/fix_stash_threading_issues: When multiple threads try to access an uninitialized dynamic like $*PROGRAM-NAME

[20:06] <Geth> ¦ rakudo/fix_stash_threading_issues: at the same time, they all will run the initialization code. This is mostly

[20:06] <Geth> ¦ rakudo/fix_stash_threading_issues: benign (just a little wasteful) but the actual assignment into the PROCESS::

[20:06] <Geth> ¦ rakudo/fix_stash_threading_issues: stash may lead to segfault as that's unsafe writing into a hash. Indeed, this

[20:06] <Geth> ¦ rakudo/fix_stash_threading_issues: not only affects PROCESS variables, but stashes in general. Since stashes are

[20:06] <Geth> ¦ rakudo/fix_stash_threading_issues: <…commit message has 7 more lines…>

[20:06] <Geth> ¦ rakudo/fix_stash_threading_issues: review: https://github.com/rakudo/rakudo/commit/db136bc52d

[20:22] *** sena_kun joined
[20:23] *** sena_kun left
[20:24] *** Altai-man left
[21:30] *** evalable6 left
[21:30] *** linkable6 left
[21:33] *** linkable6 joined
[21:49] *** squashable6 left
[21:52] *** squashable6 joined
[23:27] *** Kaiepi left
[23:29] <Geth> ¦ URI: 4ea670e992 | (Geoffrey Broadwell)++ | lib/URI/Query.rakumod

[23:29] <Geth> ¦ URI: Provide RO value when throwing RO exception

[23:29] <Geth> ¦ URI: 

[23:29] <Geth> ¦ URI: The fixes #48 and has been tested working both before and after the Rakudo

[23:29] <Geth> ¦ URI: merge that exposed the bug.

[23:29] <Geth> ¦ URI: review: https://github.com/raku-community-modules/URI/commit/4ea670e992

[23:32] *** Kaiepi joined
[23:32] *** evalable6 joined
