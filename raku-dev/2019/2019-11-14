[00:16] *** lucasb left
[00:16] <jnthn> lizmat: I don't do reddit, but quickly glancing it, I don't really get the issue; sockets don't do newline translation, and if you're writing tests, just make sure that you test against \r\n? Like Cro's tests do: https://github.com/croservices/cro-http/blob/master/t/http-request-parser.t#L15

[00:20] <jnthn> Further, if you just put a `\r\n` straight into a string literal, it isn't translated

[00:20] <jnthn> m: say "\r\n" ~~ /\r\n/

[00:20] <camelia> rakudo-moar 75056dfa1: OUTPUT: «｢

[00:20] <jnthn> heh :)

[00:20] <jnthn> m: dd "\r\n" ~~ /\r\n/

[00:20] <camelia> rakudo-moar 75056dfa1: OUTPUT: «Match.new(made => Any, hash => Map.new(()), orig => "\r\n", from => 0, pos => 1, list => ())␤»

[00:57] *** Hotbees joined
[01:42] <vrurg> How do damn methods of a role preserve closure of a parameterized body block??? I'll get touched soon...

[02:39] <Xliff> vrurg: o/

[02:40] <vrurg> Xliff: o/

[03:52] *** AlexDani` joined
[03:56] *** AlexDaniel left
[03:59] *** entonian joined
[04:04] *** entonian left
[05:04] *** squashable6 left
[05:04] *** nativecallable6 left
[05:04] *** statisfiable6 left
[05:04] *** unicodable6 left
[05:04] *** coverable6 left
[05:04] *** notable6 left
[05:04] *** greppable6 left
[05:04] *** committable6 left
[05:04] *** quotable6 left
[05:04] *** reportable6 left
[05:04] *** shareable6 left
[05:04] *** benchable6 left
[05:04] *** releasable6 left
[05:05] *** bloatable6 left
[05:05] *** greppable6 joined
[05:05] *** coverable6 joined
[05:05] *** reportable6 joined
[05:06] *** squashable6 joined
[05:06] *** bloatable6 joined
[05:06] *** releasable6 joined
[05:06] *** benchable6 joined
[05:06] *** quotable6 joined
[05:06] *** shareable6 joined
[05:07] *** committable6 joined
[05:07] *** notable6 joined
[05:07] *** statisfiable6 joined
[05:07] *** unicodable6 joined
[05:07] *** nativecallable6 joined
[07:34] *** sena_kun joined
[08:15] *** [Tux] joined
[08:23] <sena_kun> https://github.com/rakudo/rakudo/issues/2554 can be closed now. \o/

[08:23] <tellable6> 2019-11-12T00:04:42Z #raku <guifa> sena_kun :-D  llunes, 12 de payares de 2019 a les 00:02:36; 2019年11月12日月曜日 0時02分36秒; понеделник, 12 ноември 2019 г., 0:04:02 ч.

[09:00] <lizmat> m: dd "foo" ~~ / < [fo] > /    # so, what is this supposed to match ?

[09:00] <camelia> rakudo-moar 75056dfa1: OUTPUT: «Nil␤»

[09:00] <lizmat> a token " [fo] " ?

[09:00] *** robertle joined
[09:08] *** Altai-man_ joined
[09:10] *** sena_kun left
[09:10] <lizmat> m: say "foo" ~~ / <?after f> o /

[09:10] <camelia> rakudo-moar 75056dfa1: OUTPUT: «｢o｣␤»

[09:10] <lizmat> m: say "foo" ~~ / <after f> o /

[09:10] <camelia> rakudo-moar 75056dfa1: OUTPUT: «｢o｣␤ after #<failed match>␤»

[09:11] <lizmat> so, what is the difference between "<?after" and "<after" ?

[09:11] <lizmat> (yes, I'm working on writing a chapter on the differences in regular expressions between Perl and Raku)

[09:25] <moritz> <?after doesn't capture

[09:26] <moritz> the ? turns anything into a zero-width assertion, and stops capturing. Since "after" already is zero-width, the effect isn't big here

[09:26] <lizmat> but why the difference in output ?

[09:28] <moritz> m: "foo" ~~ / <after f> o /; say $<after>.from; say $<after>.to

[09:28] <camelia> rakudo-moar 75056dfa1: OUTPUT: «2␤1␤»

[09:30] <moritz> lizmat: the difference in output is because <after> captures

[09:30] <moritz> and the $<after> match stringification is questionable

[09:30] <moritz> background: NQP match objects use the criteria $.from > $.to to mark failed matches

[09:31] <lizmat> ah...  ok

[09:31] <moritz> but I think the bug is that $<after>.from > $<after>.to

[09:31] <moritz> probably related to look-behinds working on reversed strings or something

[09:32] <moritz> m: "foo" ~~ / <after f> o /; say $<after>.Str

[09:32] <camelia> rakudo-moar 75056dfa1: OUTPUT: «␤»

[09:33] <lizmat> so gistification is more to blame ?

[09:34] <moritz> no, I'd argue that it's wrong that $<after>.to and $<after>.from are reversed

[09:36] <moritz> and the weird .gist is a result of that

[09:36] <moritz> and I think .Str should say "f" not ""

[09:37] <lizmat> ok, need to go afk now

[09:37] <lizmat> will make an issue for this, unless someone beats me to it  :-)

[10:00] *** epony joined
[10:20] *** AlexDani` is now known as AlexDaniel

[10:20] *** AlexDaniel left
[10:20] *** AlexDaniel joined
[10:35] <|Tux|> Rakudo version 2019.07.1-478-g75056dfa1 - MoarVM version 2019.07.1-316-g23daabadc

[10:35] <|Tux|> csv-test-xs-20      0.423 -  0.429

[10:35] <|Tux|> csv-ip5xs           0.695 -  0.733

[10:35] <|Tux|> test-t --race       0.816 -  0.896

[10:35] <|Tux|> test-t              1.773 -  1.788

[10:35] <|Tux|> test                5.865 -  6.062

[10:35] <|Tux|> csv-ip5xs-20        6.373 -  6.478

[10:35] <|Tux|> test-t-20 --race    9.125 -  9.285

[10:35] <|Tux|> csv-parser         20.924 - 21.652

[10:35] <|Tux|> test-t-20          28.560 - 30.529

[10:56] *** Kaiepi left
[10:56] *** Kaiepi joined
[11:08] *** sena_kun joined
[11:11] *** Altai-man_ left
[12:52] *** cognomin_ left
[12:52] *** tobs left
[12:52] *** masak left
[12:52] *** nine left
[12:52] *** SyrupThinker left
[12:53] *** cognomin_ joined
[12:53] *** tobs joined
[12:53] *** tyil joined
[12:53] *** masak joined
[12:53] *** SyrupThinker joined
[12:53] *** nine joined
[13:07] *** lucasb joined
[13:08] *** Altai-man_ joined
[13:11] *** sena_kun left
[13:55] <lizmat> m: @*ARGS = "foo"; sub MAIN(Int:D $dial) { say “Frobnicator dial is at $dial!” }

[13:55] <camelia> rakudo-moar 75056dfa1: OUTPUT: «Usage:␤  <tmp> <dial>␤»

[13:55] <lizmat> in my mind, that should say that an Int is required, should it not ?

[13:55] *** Kaiepi left
[13:57] *** Kaiepi joined
[14:01] <lizmat> looks like it does for named parameters:

[14:01] <lizmat> m: sub MAIN(Int:D :$dial) { say “Frobnicator dial is at $dial!” }

[14:01] <camelia> rakudo-moar 75056dfa1: OUTPUT: «Usage:␤  <tmp> [--dial=<Int>]␤»

[14:07] *** robertle left
[14:08] *** Kaiepi left
[14:09] *** robertle joined
[14:09] *** Kaiepi joined
[15:08] *** sena_kun joined
[15:10] *** Altai-man_ left
[16:03] *** robertle left
[16:20] *** Kaiepi left
[16:40] *** ExtraCrispy joined
[16:45] <Geth> ¦ rakudo/add-type-to-positional-in-usage: 360363df67 | (Elizabeth Mattijsen)++ | src/core.c/Main.pm6

[16:45] <Geth> ¦ rakudo/add-type-to-positional-in-usage: Add any type information to positional in usage

[16:45] <Geth> ¦ rakudo/add-type-to-positional-in-usage: 

[16:45] <Geth> ¦ rakudo/add-type-to-positional-in-usage: Given a sub MAIN(Int $dial) in a script "frobnicate.p6", and calling it without

[16:45] <Geth> ¦ rakudo/add-type-to-positional-in-usage: a single integer value, would give:

[16:45] <Geth> ¦ rakudo/add-type-to-positional-in-usage: 

[16:45] <Geth> ¦ rakudo/add-type-to-positional-in-usage:     Usage:

[16:45] <Geth> ¦ rakudo/add-type-to-positional-in-usage:       frobnicator.p6 <dial>

[16:45] <Geth> ¦ rakudo/add-type-to-positional-in-usage: <…commit message has 7 more lines…>

[16:45] <Geth> ¦ rakudo/add-type-to-positional-in-usage: review: https://github.com/rakudo/rakudo/commit/360363df67

[16:45] <Geth> ¦ rakudo: lizmat++ created pull request #3300: Add any type information to positional in usage

[16:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3300

[16:59] *** robertle joined
[17:08] *** Altai-man_ joined
[17:10] *** sena_kun left
[18:00] *** MasterDuke joined
[18:21] *** Demos[m] left
[18:21] *** rba[m] left
[18:21] *** tyil[m] left
[18:21] *** AlexDaniel` left
[18:21] *** Kaiepi joined
[18:21] *** timotimo[m] left
[19:09] *** sena_kun joined
[19:10] *** Altai-man_ left
[19:29] *** ExtraCrispy left
[19:45] *** MasterDuke left
[20:21] *** MasterDuke joined
[21:08] *** Altai-man_ joined
[21:10] *** sena_kun left
[21:27] *** lucasb left
[22:38] *** Altai-man_ left
[23:02] *** ZzZombo left
[23:03] *** ZzZombo joined
[23:33] *** cognominal joined
[23:36] *** cognomin_ left
