[00:06] *** nebuchadnezzar left
[00:08] *** Guest30808 joined
[00:14] *** pmurias left
[00:32] *** lucasb left
[01:22] *** Xliff joined
[01:22] <Xliff> \o

[02:19] <AlexDaniel> not gonna lie I'm kinda proud of what I did to the sourceable bot :)

[02:21] <AlexDaniel> it works locally, let's see if it's going to work here…

[02:22] *** evalable6 left
[02:25] *** evalable6 joined
[02:25] *** sourceable6 joined
[02:26] <AlexDaniel> sourceable6: help

[02:26] <sourceable6> AlexDaniel, Like this: sourceable6: 42.base(16) # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Sourceable

[02:27] <AlexDaniel> please work

[02:27] <AlexDaniel> sourceable6: 42.base(16)

[02:27] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/Int.pm6#L93

[02:27] <AlexDaniel> sourceable6: 42.base: 16

[02:27] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/Int.pm6#L93

[02:28] <AlexDaniel> sourceable6: parse-base ‘11’, 2

[02:28] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/Str.pm6#L3270

[02:28] <AlexDaniel> sourceable6: ‘11’.parse-base: 2

[02:28] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/Str.pm6#L1434

[02:28] <AlexDaniel> sourceable6: 2018.01 ‘11’.parse-base: 2

[02:28] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/fa4db18/src/core/Str.pm#L1362

[02:28] <AlexDaniel> sourceable6: 5 < 42

[02:28] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/Int.pm6#L450

[02:29] <AlexDaniel> sourceable6: &prefix:<+>(^10)

[02:29] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/Numeric.pm6#L60

[02:29] <AlexDaniel> sourceable6: [].unique(:with(-> $a, $, { dd $a }))

[02:29] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/Any-iterable-methods.pm6#L1652

[02:32] <AlexDaniel> weekly: New bot: sourceable6! It's the next generation of SourceBaby. See https://colabti.org/irclogger/irclogger_log/raku-dev?date=2019-12-05#l12 and the wiki page with examples: https://github.com/perl6/whateverable/wiki/Sourceable (big thanks to Alexander Kiryuhin for the initial whateverablized version)

[02:32] <notable6> AlexDaniel, Noted! (weekly)

[02:50] <Xliff> AlexDaniel++! 

[02:50] <Xliff> I know not the kind of script-fu you used to accomplish that.

[02:50] <Xliff> Parses string for methor or func name and then finds it in source?

[02:50] <AlexDaniel> no

[02:51] <Xliff> Well... don't leave me in suspense... :P

[02:51] <AlexDaniel> it uses exhaustive regex matching to do wild guesses about what you have in the code, then it runs the resulting code for each guess

[02:51] <AlexDaniel> if it ends up with filename and line number in the output, then the guess was correct

[02:52] <AlexDaniel> s: Seq.new(class :: does Iterator { has $!n = 10; method pull-one {say "pulling!"; $!n-- and 42 or IterationEnd }; method skip-one { $!n-- }; method count-only { 10 } }.new).tail()

[02:52] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/Any-iterable-methods.pm6#L1954

[02:52] <AlexDaniel> here is what it went through to find the answer: https://gist.github.com/AlexDaniel/46495f595cac5de74026b27bbb93ab94

[02:54] <AlexDaniel> if you think it's crazy… yeah, it absolutely is

[02:54] <AlexDaniel> but you don't have to look inside :P :P :P

[02:54] <Xliff> Um. Yer. Craze

[02:54] <AlexDaniel> on the outside it just works

[02:56] <Xliff> Hey... it ain't broke.

[02:56] <Xliff> Nice job!!

[02:56] <AlexDaniel> so the final code it used to get the output was

[02:56] <AlexDaniel> m: (Seq.new(class :: does Iterator { has $!n = 10; method pull-one {say "pulling!"; $!n-- and 42 or IterationEnd }; method skip-one { $!n-- }; method count-only { 10 } }.new)).^can(‘tail’).map(*.cando(\((Seq.new(class :: does Iterator { has $!n = 10; method pull-one {say "pulling!"; $!n-- and 42 or IterationEnd }; method skip-one { $!n-- }; method count-only { 10 } }.new)), |\()))).first(*.so)[0]

[02:56] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «»

[02:57] <AlexDaniel> m: (Seq.new(class :: does Iterator { has $!n = 10; method pull-one {say "pulling!"; $!n-- and 42 or IterationEnd }; method skip-one { $!n-- }; method count-only { 10 } }.new)).^can(‘tail’).map(*.cando(\((Seq.new(class :: does Iterator { has $!n = 10; method pull-one {say "pulling!"; $!n-- and 42 or IterationEnd }; method skip-one { $!n-- }; method count-only { 10 } }.new)), |\()))).first(*.so)[0].file.say

[02:57] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «SETTING::src/core.c/Any-iterable-methods.pm6␤»

[02:57] <AlexDaniel> m: (Seq.new(class :: does Iterator { has $!n = 10; method pull-one {say "pulling!"; $!n-- and 42 or IterationEnd }; method skip-one { $!n-- }; method count-only { 10 } }.new)).^can(‘tail’).map(*.cando(\((Seq.new(class :: does Iterator { has $!n = 10; method pull-one {say "pulling!"; $!n-- and 42 or IterationEnd }; method skip-one { $!n-- }; method count-only { 10 } }.new)), |\()))).first(*.so)[0].line.say

[02:57] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «1954␤»

[02:58] <Xliff> m: 42.say.cando

[02:58] <evalable6> Xliff, rakudo-moar 9b8ce733a: OUTPUT: «(exit code 1) 42␤No such method 'cando' for invocant of type 'Bool'. Did you mean any of these?␤    can␤    rand␤␤  in block <unit> at /tmp/ivp1aIPugB line 1␤␤»

[02:59] <AlexDaniel> m: say 42.^can(‘say’)

[02:59] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «(say)␤»

[02:59] <AlexDaniel> m: say 42.^can(‘say’)[0].file

[02:59] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «SETTING::src/core.c/Mu.pm6␤»

[02:59] <AlexDaniel> m: say 42.^can(‘say’)[0].line

[02:59] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «574␤»

[02:59] <Xliff> m: 42.^can('say')[0].^name

[02:59] <evalable6> Xliff, rakudo-moar 9b8ce733a: OUTPUT: «»

[02:59] <Xliff> m: 42.^can('say')

[02:59] <evalable6> Xliff, rakudo-moar 9b8ce733a: OUTPUT: «»

[02:59] <Xliff> m: 42.^can('say').say

[02:59] <evalable6> Xliff, rakudo-moar 9b8ce733a: OUTPUT: «(say)␤»

[02:59] <AlexDaniel> s: 42.say

[02:59] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/Mu.pm6#L574

[02:59] <Xliff> m: 42.^can('say').^name.say

[02:59] <evalable6> Xliff, rakudo-moar 9b8ce733a: OUTPUT: «List␤»

[02:59] <AlexDaniel> s: 42.say()

[02:59] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/Mu.pm6#L575

[02:59] <Xliff> m: 42.^can('say')[0].^name.say

[02:59] <evalable6> Xliff, rakudo-moar 9b8ce733a: OUTPUT: «Method␤»

[02:59] <Xliff> m: 42.^can('say')[0].^name.line.say

[02:59] <evalable6> Xliff, rakudo-moar 9b8ce733a: OUTPUT: «(exit code 1) No such method 'line' for invocant of type 'Str'. Did you mean any of these?␤    clone␤    lines␤    list␤    min␤␤  in block <unit> at /tmp/no4IWtka2f line 1␤␤»

[03:00] <AlexDaniel> s: say(42)

[03:00] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9b8ce73/src/core.c/io_operators.pm6#L12

[03:00] <Xliff> m: 42.^can('say')[0].^name.^methods.say

[03:00] <evalable6> Xliff, rakudo-moar 9b8ce733a: OUTPUT: «(BUILD Capture Int Num chomp pred succ match su…»

[03:00] <evalable6> Xliff, Full output: https://gist.github.com/7e097db1219538e825a58cf19fb82bd2

[03:00] <Xliff> m: 42.^can('say')[0].line.say

[03:00] <evalable6> Xliff, rakudo-moar 9b8ce733a: OUTPUT: «574␤»

[03:01] <Xliff> m: 42.^can('say')[0].file.say

[03:01] <evalable6> Xliff, rakudo-moar 9b8ce733a: OUTPUT: «SETTING::src/core.c/Mu.pm6␤»

[03:01] <Xliff> OK. I see what you did that.

[03:01] <Xliff> s/that/thar/

[03:01] <Xliff> moarvm++ # Massive introspection.

[03:01] *** benjif joined
[03:03] <AlexDaniel> jnthn: I'm conflicted :D on one hand it works perfectly, on the other hand it's against all common sense. https://colabti.org/irclogger/irclogger_log/raku-dev?date=2019-12-05#l12

[03:04] <AlexDaniel> source code for those who don't mind being unable to unsee: https://github.com/perl6/whateverable/blob/master/xbin/Sourceable.p6

[03:11] <AlexDaniel> there has to be a better way but for now it does everything I wanted it to do :)

[04:11] *** reportable6 left
[04:11] *** squashable6 left
[04:11] *** quotable6 left
[04:11] *** statisfiable6 left
[04:11] *** sourceable6 left
[04:11] *** bisectable6 left
[04:11] *** greppable6 left
[04:11] *** notable6 left
[04:11] *** releasable6 left
[04:11] *** unicodable6 left
[04:11] *** committable6 left
[04:11] *** shareable6 left
[04:11] *** nativecallable6 left
[04:11] *** benchable6 left
[04:11] *** coverable6 left
[04:11] *** bloatable6 left
[04:12] *** unicodable6 joined
[04:12] *** squashable6 joined
[04:13] *** greppable6 joined
[04:13] *** benchable6 joined
[04:13] *** bloatable6 joined
[04:13] *** reportable6 joined
[04:13] *** releasable6 joined
[04:14] *** shareable6 joined
[04:14] *** bisectable6 joined
[04:14] *** statisfiable6 joined
[04:14] *** committable6 joined
[04:14] *** coverable6 joined
[04:14] *** quotable6 joined
[04:14] *** nativecallable6 joined
[04:14] *** sourceable6 joined
[04:14] *** notable6 joined
[05:24] *** shareable6 left
[05:24] *** bloatable6 left
[05:24] *** releasable6 left
[05:24] *** sourceable6 left
[05:24] *** greppable6 left
[05:24] *** squashable6 left
[05:24] *** notable6 left
[05:24] *** reportable6 left
[05:24] *** statisfiable6 left
[05:24] *** committable6 left
[05:24] *** unicodable6 left
[05:24] *** quotable6 left
[05:24] *** benchable6 left
[05:24] *** bisectable6 left
[05:24] *** coverable6 left
[05:24] *** nativecallable6 left
[05:24] *** nativecallable6 joined
[05:24] *** committable6 joined
[05:25] *** unicodable6 joined
[05:25] *** bisectable6 joined
[05:25] *** notable6 joined
[05:25] *** sourceable6 joined
[05:25] *** releasable6 joined
[05:26] *** bloatable6 joined
[05:27] *** reportable6 joined
[05:27] *** coverable6 joined
[05:27] *** shareable6 joined
[05:27] *** benchable6 joined
[05:27] *** quotable6 joined
[05:27] *** statisfiable6 joined
[05:27] *** squashable6 joined
[05:27] *** greppable6 joined
[05:36] *** maettu left
[05:37] *** maettu joined
[06:06] *** benjif left
[06:33] *** moon-child left
[06:43] *** moon-child joined
[07:37] *** epony left
[07:49] *** epony joined
[08:21] *** Guest30808 is now known as nebuchadnezzar

[08:23] *** [Coke] left
[08:25] *** [Coke] joined
[08:30] <lizmat> Files=1290, Tests=109646, 207 wallclock secs (27.96 usr  8.09 sys + 2920.40 cusr 260.61 csys = 3217.06 CPU)

[08:34] *** squashable6 left
[08:34] *** greppable6 left
[08:34] *** quotable6 left
[08:34] *** coverable6 left
[08:34] *** reportable6 left
[08:34] *** bloatable6 left
[08:34] *** releasable6 left
[08:34] *** sourceable6 left
[08:34] *** bisectable6 left
[08:34] *** unicodable6 left
[08:34] *** committable6 left
[08:34] *** nativecallable6 left
[08:34] *** tellable6 left
[08:34] *** kubrat left
[08:34] *** rba left
[08:38] *** greppable6 joined
[08:38] *** squashable6 joined
[08:38] *** quotable6 joined
[08:38] *** coverable6 joined
[08:38] *** reportable6 joined
[08:38] *** bloatable6 joined
[08:38] *** releasable6 joined
[08:38] *** sourceable6 joined
[08:38] *** bisectable6 joined
[08:38] *** unicodable6 joined
[08:38] *** committable6 joined
[08:38] *** nativecallable6 joined
[08:38] *** tellable6 joined
[08:38] *** kubrat joined
[08:38] *** rba joined
[08:47] <Geth> ¦ rakudo: a9afa01b94 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[08:47] <Geth> ¦ rakudo: Abstract parse-base workhorse into private method

[08:47] <Geth> ¦ rakudo: 

[08:47] <Geth> ¦ rakudo: So it can be used later for val() processing

[08:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a9afa01b94

[08:59] <lizmat> m: dd val("  Inf ")    # wonders whether this is correct behaviour

[08:59] <evalable6> lizmat, rakudo-moar a9afa01b9: OUTPUT: «NumStr.new(Inf, "  Inf ")␤»

[09:00] <lizmat> hmm... looks like we lost camelia  :-(

[09:01] <lizmat> question is: should the spaces in the string representation be saved or not ?

[09:08] <nine> VM seems to have lost network connectivity

[09:08] <tellable6> 2019-12-05T00:36:23Z #raku <tbrowder> nine Using Inline::Perl5,  is there any way  to use a Raku module from a Perl program? I don't see anything like quite like that in the README, nor does it seem likely, but it could be useful.

[09:12] <lizmat> .tell tbrowder https://metacpan.org/pod/Inline::Perl6

[09:12] <tellable6> lizmat, I'll pass your message to tbrowder

[09:17] <nine> tbrowder: there are several, none of them really good. You can for example v6::run('use Test') but that doesn't help that much as there's no way to get at the loaded package. One, symbols are only imported into the lexical scope (the EVAL in this case) and two, packages/classes are undefined and will arive as undef in Perl 5 code

[09:18] <nine> tbrowder: I do have plans for providing a solution and I have already implemented an important part for my memory leak fix this year.

[09:54] *** squashable6 left
[09:54] *** greppable6 left
[09:54] *** quotable6 left
[09:54] *** coverable6 left
[09:54] *** reportable6 left
[09:54] *** bloatable6 left
[09:54] *** releasable6 left
[09:54] *** sourceable6 left
[09:54] *** bisectable6 left
[09:54] *** unicodable6 left
[09:54] *** committable6 left
[09:54] *** nativecallable6 left
[09:54] *** tellable6 left
[09:54] *** kubrat left
[09:54] *** rba left
[09:54] *** b2gills left
[09:54] *** sjn left
[09:54] *** dogbert17 left
[09:54] *** Ulti left
[09:54] *** statisfiable6 left
[09:54] *** benchable6 left
[09:54] *** evalable6 left
[09:54] *** nebuchadnezzar left
[09:54] *** robertle left
[09:54] *** awwaiid left
[09:54] *** |Tux| left
[09:54] *** lizmat left
[09:54] *** Geth left
[09:54] *** bartolin left
[09:54] *** tony-o left
[09:54] *** Xliff left
[09:54] *** moritz left
[09:54] *** cognomin_ left
[09:54] *** Summertime left
[09:54] *** tobs left
[09:54] *** tyil left
[09:54] *** masak left
[09:54] *** nine left
[09:54] *** SyrupThinker left
[09:54] *** rba[m] left
[09:55] *** [Coke] left
[09:55] *** moon-child left
[09:55] *** ZzZombo left
[09:55] *** Guest38485 left
[09:55] *** vrurg left
[09:55] *** jjatria left
[09:55] *** jnthn left
[09:55] *** klapperl left
[09:55] *** go|dfish left
[09:55] *** shareable6 left
[09:55] *** notable6 left
[09:55] *** TreyHarris left
[09:55] *** Demos[m] left
[09:55] *** Hotbees left
[09:55] *** kawaii left
[09:55] *** maettu left
[09:55] *** timotimo left
[09:55] *** pochi_ left
[09:55] *** AlexDaniel left
[09:55] *** samcv left
[09:55] *** japhb left
[09:55] *** lucs left
[09:55] *** jdv79 left
[09:55] *** epony left
[09:55] *** EuAndreh[m] left
[09:55] *** zostay left
[09:55] *** Kaiepi left
[09:55] *** unclechu left
[09:55] *** AlexDaniel` left
[09:56] *** [Coke] joined
[09:56] *** epony joined
[09:56] *** moon-child joined
[09:56] *** maettu joined
[09:56] *** shareable6 joined
[09:56] *** notable6 joined
[09:56] *** Kaiepi joined
[09:56] *** unclechu joined
[09:56] *** ZzZombo joined
[09:56] *** Guest38485 joined
[09:56] *** timotimo joined
[09:56] *** TreyHarris joined
[09:56] *** pochi_ joined
[09:56] *** AlexDaniel joined
[09:56] *** vrurg joined
[09:56] *** jjatria joined
[09:56] *** EuAndreh[m] joined
[09:56] *** Demos[m] joined
[09:56] *** AlexDaniel` joined
[09:56] *** samcv joined
[09:56] *** japhb joined
[09:56] *** jnthn joined
[09:56] *** lucs joined
[09:56] *** Hotbees joined
[09:56] *** klapperl joined
[09:56] *** go|dfish joined
[09:56] *** kawaii joined
[09:56] *** jdv79 joined
[09:56] *** zostay joined
[09:59] *** lizmat joined
[09:59] *** Geth joined
[09:59] *** bartolin joined
[09:59] *** tony-o joined
[10:00] *** lizmat left
[10:00] *** Geth left
[10:00] *** bartolin left
[10:00] *** tony-o left
[10:00] *** [Coke] left
[10:00] *** moon-child left
[10:00] *** ZzZombo left
[10:00] *** Guest38485 left
[10:00] *** vrurg left
[10:00] *** jjatria left
[10:00] *** jnthn left
[10:00] *** klapperl left
[10:00] *** go|dfish left
[10:00] *** shareable6 left
[10:00] *** notable6 left
[10:00] *** TreyHarris left
[10:00] *** Demos[m] left
[10:00] *** Hotbees left
[10:00] *** kawaii left
[10:00] *** maettu left
[10:00] *** timotimo left
[10:00] *** pochi_ left
[10:00] *** AlexDaniel left
[10:00] *** samcv left
[10:00] *** japhb left
[10:00] *** lucs left
[10:00] *** jdv79 left
[10:00] *** epony left
[10:00] *** EuAndreh[m] left
[10:00] *** zostay left
[10:00] *** Kaiepi left
[10:00] *** unclechu left
[10:00] *** AlexDaniel` left
[10:01] *** tony-o joined
[10:01] *** bartolin joined
[10:01] *** Geth joined
[10:01] *** lizmat joined
[10:01] *** [Coke] joined
[10:01] *** epony joined
[10:01] *** moon-child joined
[10:01] *** maettu joined
[10:01] *** shareable6 joined
[10:01] *** notable6 joined
[10:01] *** Kaiepi joined
[10:01] *** unclechu joined
[10:01] *** ZzZombo joined
[10:01] *** Guest38485 joined
[10:01] *** timotimo joined
[10:01] *** TreyHarris joined
[10:01] *** pochi_ joined
[10:01] *** AlexDaniel joined
[10:01] *** vrurg joined
[10:01] *** jjatria joined
[10:01] *** EuAndreh[m] joined
[10:01] *** Demos[m] joined
[10:01] *** AlexDaniel` joined
[10:01] *** samcv joined
[10:01] *** japhb joined
[10:01] *** jnthn joined
[10:01] *** lucs joined
[10:01] *** Hotbees joined
[10:01] *** klapperl joined
[10:01] *** go|dfish joined
[10:01] *** kawaii joined
[10:01] *** jdv79 joined
[10:01] *** zostay joined
[10:02] *** statisfiable6 joined
[10:02] *** benchable6 joined
[10:02] *** evalable6 joined
[10:02] *** nebuchadnezzar joined
[10:02] *** robertle joined
[10:02] *** awwaiid joined
[10:02] *** |Tux| joined
[10:03] *** greppable6 joined
[10:03] *** squashable6 joined
[10:03] *** quotable6 joined
[10:03] *** coverable6 joined
[10:03] *** reportable6 joined
[10:03] *** bloatable6 joined
[10:03] *** releasable6 joined
[10:03] *** sourceable6 joined
[10:03] *** bisectable6 joined
[10:03] *** unicodable6 joined
[10:03] *** committable6 joined
[10:03] *** nativecallable6 joined
[10:03] *** tellable6 joined
[10:03] *** kubrat joined
[10:03] *** rba joined
[10:03] *** b2gills joined
[10:03] *** sjn joined
[10:03] *** dogbert17 joined
[10:03] *** Ulti joined
[10:04] *** rba[m] joined
[10:04] *** Xliff joined
[10:04] *** moritz joined
[10:04] *** Summertime joined
[10:04] *** cognomin_ joined
[10:04] *** tobs joined
[10:04] *** tyil joined
[10:04] *** masak joined
[10:04] *** SyrupThinker joined
[10:04] *** nine joined
[10:09] <tbrowder> .tell nine thanks!

[10:09] <tellable6> tbrowder, I'll pass your message to nine

[10:20] <|Tux|> Rakudo version 2019.11-99-ga9afa01b9 - MoarVM version 2019.07.1-403-g9442b1a7c

[10:20] <|Tux|> csv-test-xs-20      0.431 -  0.433

[10:20] <|Tux|> csv-ip5xs           0.707 -  0.775

[10:20] <|Tux|> test-t --race       0.856 -  0.865

[10:20] <|Tux|> test-t              1.713 -  1.733

[10:20] <|Tux|> csv-ip5xs-20        6.296 -  6.597

[10:20] <|Tux|> test                7.163 -  7.471

[10:20] <|Tux|> test-t-20 --race    9.221 -  9.457

[10:20] <|Tux|> csv-parser         21.588 - 21.600

[10:20] <|Tux|> test-t-20          29.787 - 29.911

[10:24] *** pmurias joined
[11:01] *** sena_kun joined
[12:11] *** pmurias left
[12:26] <lizmat> m: dd :2[17,".",5]   # wtf?  what does this even mean ?

[12:26] <evalable6> lizmat, rakudo-moar a9afa01b9: OUTPUT: «19.5␤»

[12:26] *** sena_kun left
[12:41] *** sena_kun joined
[12:43] *** pmurias joined
[12:52] <Geth> ¦ rakudo: 519cef492f | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[12:52] <Geth> ¦ rakudo: Revert previous commit

[12:52] <Geth> ¦ rakudo: 

[12:52] <Geth> ¦ rakudo: - not going to need Str!parse-base for val processing

[12:52] <Geth> ¦ rakudo: - but keep the return value constraints

[12:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/519cef492f

[12:56] *** lucasb joined
[13:33] *** bazzaar joined
[13:37] *** Xliff left
[13:59] <Geth> ¦ nqp: 1b5834027a | (Paweł Murias)++ | 2 files

[13:59] <Geth> ¦ nqp: [js] Bump serialization format version

[13:59] <Geth> ¦ nqp: 

[13:59] <Geth> ¦ nqp: The changes didn't affect use at they where to things that we don't

[13:59] <Geth> ¦ nqp: implement yet.

[13:59] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/1b5834027a

[14:27] *** sena_kun left
[14:27] <tyil> Rakudo Star uses rakudo.perl6.org/downloads/[rakudo|nqp]/ to get to the downloads for Rakudo and NQP, a similar construction does not exist for raku.org

[14:28] <tyil> is this intended, and should I update the URLs to point to GitHub instead, or will this be added to raku.org in the future?

[14:31] *** patrickb joined
[14:32] <patrickb> tyil: rakudo.perl6.org seems to be some sort of proxy to rakudo.org (or the other way round).

[14:33] <patrickb> It's not live yet, but I have done quite a large overhaul of rakudo.org and the downloads.

[14:40] *** sena_kun joined
[14:41] <tyil> patrickb: alright, for now I'll keep using the rakudo.perl6.org URLs then, and I'll update them in R* when you're done

[14:41] <patrickb> I'm not sure what the reasoning for the existence of rakudo.perl6.org is (given there is rakudo.org).

[14:41] <tyil> since the perl6.org variant still works, I'm not in any hurry

[14:41] <tyil> from what I understand, the URLs I'm using are just redirects to the GitHub release tarballs

[14:42] <patrickb> Intuitively I'd say let rakudo.(raku|perl6).org die and use rakudo.org

[14:43] <tyil> I'm unsure if there's other things using those URLs, but if Rakudo Star is the only one, I can agree

[14:43] <patrickb> I didn't know about rakudo.perl6.org until now...

[14:45] <patrickb> I think us relying on github.com for hosting them is a consequence of the infra server death we suffered some months ago. I think it has not been finally decided yet, where the files are hosted in the future. Mayby both, github and our own servers.

[14:46] <tyil> more is better for that kind of stuff

[14:48] <patrickb> Yeah, backup and all.

[14:58] <vrurg> Perhaps it would make sense for R* to try different sources to download the tarball?

[14:59] <tyil> vrurg: those downloads are only done when building the R* release

[14:59] <tyil> but its still something I can look into if it makes my work easier :p

[14:59] *** bazzaar left
[15:01] <vrurg> tyil: I know. Still, if there be same copy of the rakudo sources tarball on both github and raku.org – why not to try each? Just make sure its sum is not changed.

[15:01] <tyil> hmm

[15:01] <tyil> might be useful to ensure nothing malicious is going on

[15:02] <tyil> even if just for checksumming and then discarding all other sources

[15:36] *** vrurg_ joined
[15:37] *** vrurg left
[15:43] *** pmurias left
[15:56] *** pmurias joined
[16:05] *** b2gills left
[16:06] *** b2gills joined
[16:14] *** benjif joined
[16:26] *** sena_kun left
[16:31] <japhb> I'm collecting a list of all games (of any size, genre, level of polish, UI toolkit) written in Raku ... if you have written one, or know of one that I should include, please ping me!  :-)

[16:41] <Geth> ¦ problem-solving: lizmat assigned to jnthn Issue What should `val()` support? https://github.com/perl6/problem-solving/issues/138

[16:43] *** MasterDuke joined
[16:44] *** lucasb left
[16:51] *** sena_kun joined
[16:53] *** Guest38485 left
[17:52] <AlexDaniel> squashable6: status

[17:52] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in ≈10 hours (2019-12-07 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:46] *** patrickb left
[18:52] *** sena_kun left
[19:00] *** patrickb joined
[19:06] <jdv79> anyone know what i did wrong here?:  https://nopaste.xyz/?4bffb51720a53fe0#eAaiR1LRAU4BrHSNDs0F7SCv7EBRAU0kErpZBfFnPLs=

[19:07] *** sena_kun joined
[19:24] *** lucasb joined
[19:39] <AlexDaniel> jdv79: some kind of issue with the submodule

[19:53] <AlexDaniel> s: val

[19:53] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/519cef4/src/core.c/allomorphs.pm6#L212

[19:54] <AlexDaniel> s: val("2")

[19:54] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/519cef4/src/core.c/allomorphs.pm6#L236

[19:55] <Geth> ¦ rakudo: patzim++ created pull request #3340: Prevent silently swallowing errors on submodule update

[19:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3340

[19:59] <Geth> ¦ nqp: patzim++ created pull request #588: Prevent silently swallowing errors on submodule update

[19:59] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/588

[20:18] <Geth> ¦ rakudo: db43d13413 | (Patrick Böker)++ | Configure.pl

[20:18] <Geth> ¦ rakudo: Prevent silently swallowing errors on submodule update

[20:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/db43d13413

[20:18] <Geth> ¦ rakudo: 382d18bdaa | (Patrick Böker)++ (committed using GitHub Web editor) | Configure.pl

[20:18] <Geth> ¦ rakudo: Merge pull request #3340 from patrickbkr/sub-mod-upd-no-silent-error

[20:18] <Geth> ¦ rakudo: 

[20:18] <Geth> ¦ rakudo: Prevent silently swallowing errors on submodule update

[20:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/382d18bdaa

[20:19] <Geth> ¦ nqp: f994d5ea63 | (Patrick Böker)++ | Configure.pl

[20:19] <Geth> ¦ nqp: Prevent silently swallowing errors on submodule update

[20:19] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/f994d5ea63

[20:19] <Geth> ¦ nqp: df9f7c16ef | (Patrick Böker)++ (committed using GitHub Web editor) | Configure.pl

[20:19] <Geth> ¦ nqp: Merge pull request #588 from patrickbkr/sub-mod-upd-no-silent-error

[20:19] <Geth> ¦ nqp: 

[20:19] <Geth> ¦ nqp: Prevent silently swallowing errors on submodule update

[20:19] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/df9f7c16ef

[20:52] *** sena_kun left
[21:07] *** sena_kun joined
[22:54] *** sena_kun left
[23:08] *** sena_kun joined
[23:38] *** Xliff joined
[23:41] *** pmurias left
[23:43] *** pmurias joined
[23:46] *** sena_kun left
[23:53] <tyil> all tests seem to pass on my machine, if anyone has some spare time, please test rc1 of rakudo-star 2019.11 https://dist.tyil.nl/raku/rakudo-star/

