[00:02] *** Kaiepi left
[00:03] *** Kaiepi joined
[01:00] *** lucasb left
[01:11] <vrurg> .ask pmurias When jvm backend serialize closures does it serialize their respective core setting too?

[01:11] <tellable6> vrurg, I'll pass your message to pmurias

[02:02] *** benjif left
[02:02] *** benjif joined
[02:58] *** benjif left
[03:03] <Geth> ¦ nqp/configure-rebuild-all: fcf5bf5591 | (Vadim Belman)++ | 3 files

[03:03] <Geth> ¦ nqp/configure-rebuild-all: Added --force-rebuild command line option

[03:03] <Geth> ¦ nqp/configure-rebuild-all: 

[03:03] <Geth> ¦ nqp/configure-rebuild-all: Forces rebuild of MoarVM if `--gen-moar` was used too. Mostly good if

[03:03] <Geth> ¦ nqp/configure-rebuild-all: bypassed from upstream (Rakudo) which might need total rebuild under

[03:03] <Geth> ¦ nqp/configure-rebuild-all: certain circumstances.

[03:03] <Geth> ¦ nqp/configure-rebuild-all: review: https://github.com/perl6/nqp/commit/fcf5bf5591

[03:03] <Geth> ¦ nqp: vrurg++ created pull request #586: Added --force-rebuild command line option

[03:03] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/586

[03:04] <Geth> ¦ nqp/configure-rebuild-all: e304774121 | (Vadim Belman)++ | 3rdparty/nqp-configure

[03:04] <Geth> ¦ nqp/configure-rebuild-all: nqp-configure submodule update

[03:04] <Geth> ¦ nqp/configure-rebuild-all: review: https://github.com/perl6/nqp/commit/e304774121

[03:09] <Geth> ¦ rakudo/configure-rebuild-all: 532476f5ca | (Vadim Belman)++ | 3 files

[03:09] <Geth> ¦ rakudo/configure-rebuild-all: Add --force-rebuild command line option

[03:09] <Geth> ¦ rakudo/configure-rebuild-all: 

[03:09] <Geth> ¦ rakudo/configure-rebuild-all: Forces rebuild of all required components like NQP and, possibly,

[03:09] <Geth> ¦ rakudo/configure-rebuild-all: MoarVM. --force-rebuild tries to pretend we're building in an empty or

[03:09] <Geth> ¦ rakudo/configure-rebuild-all: almost empty environment. I.e.:

[03:09] <Geth> ¦ rakudo/configure-rebuild-all: 

[03:09] <Geth> ¦ rakudo/configure-rebuild-all: perl Configure.pl --backends=moar --gen-nqp --force-rebuild

[03:09] <Geth> ¦ rakudo/configure-rebuild-all: <…commit message has 6 more lines…>

[03:09] <Geth> ¦ rakudo/configure-rebuild-all: review: https://github.com/rakudo/rakudo/commit/532476f5ca

[03:09] <Geth> ¦ rakudo: vrurg++ created pull request #3248: Add --force-rebuild command line option

[03:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3248

[03:10] *** benjif joined
[06:08] *** [TuxCM] joined
[06:37] *** [TuxCM] left
[06:47] <Geth> ¦ roast: Altai-man++ created pull request #588: Test fake-infix adverbs on a construct

[06:47] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/588

[06:55] *** benjif left
[06:56] *** benjif joined
[07:05] *** benjif left
[07:11] <Geth> ¦ rakudo: Altai-man++ created pull request #3249: Test return constraints for role implementors

[07:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3249

[07:20] <nine> More good news: looks like my changes to NativeCall also fixed issues with running optimized (JIT compiled) native subs at BEGIN time, so we can now lift that long time restriction :)

[07:21] <nine> That restriction meant that a native sub called at BEGIN time has never gotten the optimized body and instead always went through the old generic code, even later at runtime.

[07:21] <nine> Will make that change after the release

[07:37] *** pmurias joined
[08:34] *** [TuxCM] joined
[08:42] *** pmurias left
[09:14] *** pmurias joined
[09:42] <AlexDaniel> https://colabti.org/irclogger/irclogger_log/raku?date=2019-10-19#l84

[09:42] <AlexDaniel> now I remember

[09:42] <AlexDaniel> I need to split text by \n but I can't

[09:42] *** pmurias left
[09:43] <AlexDaniel> m: say “foo\r\nbar”.split(“\n”)[0]

[09:43] <camelia> rakudo-moar e45bb3418: OUTPUT: «foo

[09:43] <AlexDaniel> camelia wtf was that

[09:43] <AlexDaniel> e: say “foo\r\nbar”.split(“\n”)[0]

[09:43] <evalable6> AlexDaniel, rakudo-moar e45bb3418: OUTPUT: «foo␍␤bar␤»

[09:46] <AlexDaniel> and previously I had this https://github.com/perl6/whateverable/commit/ba07dad033b3772e54ef21828f4bae9ed5779a8f

[09:46] <AlexDaniel> so .lines is wrong for example because it splits on single \r

[09:46] <AlexDaniel> and .split(“\n”) is wrong because it ignores \r\n

[09:51] <AlexDaniel> I remember raising a ticket at some point, but IIRC the idea there was basically “tough luck, split it yourself”

[09:52] <AlexDaniel> which is kinda horrible for something as simple as processing output of unix tools :S

[09:54] <AlexDaniel> maybe .lines on IO::Path is different? But I don't have IO::Path

[09:55] <AlexDaniel> the output comes from Proc::Async, which I then decode as utf8-c8. I shouldn't?

[09:57] <AlexDaniel> e: dd “foo\rbar\r\nbaz\nend”.lines

[09:57] <evalable6> AlexDaniel, rakudo-moar e45bb3418: OUTPUT: «("foo", "bar", "baz", "end").Seq␤»

[09:57] <AlexDaniel> e: dd “foo\rbar\r\nbaz\nend”.split(“\n”)

[09:57] <evalable6> AlexDaniel, rakudo-moar e45bb3418: OUTPUT: «("foo\rbar\r\nbaz", "end").Seq␤»

[09:57] <AlexDaniel> e: dd “foo\rbar\r\nbaz\nend”.split(/\n/)

[09:57] <evalable6> AlexDaniel, rakudo-moar e45bb3418: OUTPUT: «("foo", "bar", "baz", "end").Seq␤»

[09:57] <AlexDaniel> e: dd “foo\rbar\r\nbaz\nend”.split(/“\n”/)

[09:57] <evalable6> AlexDaniel, rakudo-moar e45bb3418: OUTPUT: «("foo\rbar\r\nbaz", "end").Seq␤»

[09:58] <AlexDaniel> e: dd “foo\rbar\r\nbaz\nend”.split(/“\n”|“\r\n”/)

[09:58] <evalable6> AlexDaniel, rakudo-moar e45bb3418: OUTPUT: «("foo\rbar", "baz", "end").Seq␤»

[09:59] <AlexDaniel> I mean, that's going to eat \r but I can close my eyes on that for now…

[09:59] <AlexDaniel> e: dd “foo\rbar\r\nbaz\nend”.split(“\n”|“\r\n”)

[09:59] <evalable6> AlexDaniel, rakudo-moar e45bb3418: OUTPUT: «any(("foo\rbar\r\nbaz", "end").Seq, ("foo\rbar", "baz\nend").Seq)␤»

[10:00] <AlexDaniel> lizmat: ↑ I don't think it's supposed to work this way? :)

[10:00] <AlexDaniel> the junction thing

[10:11] <AlexDaniel> alright, whatever: https://github.com/perl6/whateverable/commit/9ac71dca89

[10:12] *** greppable6 left
[10:14] *** greppable6 joined
[10:15] <lizmat> m: dd “foo\rbar\r\nbaz\nend”.split(“\n”,“\r\n”)

[10:15] <camelia> rakudo-moar e45bb3418: OUTPUT: «().Seq␤»

[10:15] <lizmat> hmmm

[11:50] *** sena_kun joined
[12:16] <[TuxCM]> Rakudo version 2019.07.1-416-ge45bb3418 - MoarVM version 2019.07.1-283-ge594fbcbd

[12:16] <[TuxCM]> csv-test-xs-20      0.422 -  0.426

[12:16] <[TuxCM]> csv-ip5xs           0.758 -  0.762

[12:16] <[TuxCM]> test-t --race       0.790 -  0.821

[12:16] <[TuxCM]> test-t              1.746 -  1.754

[12:16] <[TuxCM]> csv-ip5xs-20        6.252 -  6.317

[12:16] <[TuxCM]> test                6.961 -  7.548

[12:16] <[TuxCM]> test-t-20 --race    9.005 -  9.186

[12:16] <[TuxCM]> csv-parser         20.650 - 21.560

[12:16] <[TuxCM]> test-t-20          29.391 - 29.715

[12:24] *** lucasb joined
[12:40] *** pmurias joined
[12:48] *** pmurias left
[12:50] *** pmurias joined
[13:45] *** [TuxCM] left
[14:05] *** [TuxCM] joined
[15:10] <Geth> ¦ roast: 8b29706459 | Altai-man++ | S12-class/inheritance.t

[15:10] <Geth> ¦ roast: Test Parameter subclassing

[15:10] <Geth> ¦ roast: 

[15:10] <Geth> ¦ roast: Spec test for https://github.com/rakudo/rakudo/issues/2829 as

[15:10] <Geth> ¦ roast: suggested by jnthn.

[15:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8b29706459

[15:10] <Geth> ¦ roast: 0aeb74eef5 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | S12-class/inheritance.t

[15:10] <Geth> ¦ roast: Merge pull request #585 from Altai-man/test-param-subclass

[15:10] <Geth> ¦ roast: 

[15:10] <Geth> ¦ roast: Test Parameter subclassing

[15:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/0aeb74eef5

[15:28] <Geth> ¦ roast: e84dbeca19 | Altai-man++ | S12-meta/classhow.t

[15:28] <Geth> ¦ roast: Test runtime-created classes being attributes

[15:28] <Geth> ¦ roast: 

[15:28] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/2607

[15:28] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e84dbeca19

[15:28] <Geth> ¦ roast: 8fddffc486 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | S12-meta/classhow.t

[15:28] <Geth> ¦ roast: Merge pull request #586 from Altai-man/test-2607

[15:28] <Geth> ¦ roast: 

[15:28] <Geth> ¦ roast: Test runtime-created classes being attributes

[15:28] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8fddffc486

[15:29] <Geth> ¦ roast: 535cea30d2 | Altai-man++ | S02-types/pair.t

[15:29] <Geth> ¦ roast: Test fake-infix adverbs on a construct

[15:29] <Geth> ¦ roast: 

[15:29] <Geth> ¦ roast: Just code provided by the ticket, closes

[15:29] <Geth> ¦ roast: https://github.com/rakudo/rakudo/issues/1500

[15:29] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/535cea30d2

[15:29] <Geth> ¦ roast: 93cc2e4274 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | S02-types/pair.t

[15:29] <Geth> ¦ roast: Merge pull request #588 from Altai-man/test-1500

[15:29] <Geth> ¦ roast: 

[15:29] <Geth> ¦ roast: Test fake-infix adverbs on a construct

[15:29] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/93cc2e4274

[15:31] *** sena_kun left
[15:36] *** sena_kun joined
[15:54] *** [TuxCM] left
[16:16] <Geth> ¦ rakudo: 7dc34148eb | (Stefan Seifert)++ | t/04-nativecall/00-misc.t

[16:16] <Geth> ¦ rakudo: Fix new NativeCall test failing on Windows

[16:16] <Geth> ¦ rakudo: 

[16:16] <Geth> ¦ rakudo: On Windows calloc isn't as easily available, so use a function of the test

[16:16] <Geth> ¦ rakudo: library instead as NativeCall target.

[16:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7dc34148eb

[16:38] *** greppable6 left
[16:40] *** greppable6 joined
[17:01] *** pmurias left
[17:13] *** sena_kun left
[17:14] *** sena_kun joined
[17:57] *** haxmeister joined
[18:00] <haxmeister> are there any detailed documents describing the minimum requirements for installing modules/dist in terms of what rakudo specifically needs as opposed to what zef needs?

[19:04] *** pmurias joined
[19:07] <timotimo> are you talking about individual modules, like C bindings for something need the C library itself, or something else?

[19:12] <haxmeister> I'm talking about information that can help me with system administration of Raku and the installation of packages or modules on a unix style system... in this application zef doesn't appear to be designed well for it, so I want to clarify what is actually needed by rakudo

[19:12] <haxmeister> I"m talking about multi-user systems 

[19:22] <timotimo> ah

[19:22] <timotimo> sorry for being AFK unexpectedly

[19:23] <timotimo> our very own nine has done some work for packaging stuff for the suse distro, there's a thing called CompUnitRepo::Staging or so that does precomp magic so the precompiled files could be distributed in packages i think?

[19:30] <haxmeister> I am using OpenSuse Tumbleweed currently on this laptop, and Funtoo and Ubuntu on other machines. 

[19:31] <haxmeister> but my inquiry was more generic.. looking for the type if information nine would have used to do such work

[19:32] <haxmeister> would need info to help with distribution on source based linux distros as well

[19:45] <timotimo> well, nine is a core developer who developed that staging thing (which as i understand it is also useful to build stuff in one place and copy it over to another, like you would in a sandboxed build environment)

[19:45] <timotimo> so i can't really point you at the questions that were necessary for that work

[20:07] <timotimo> haxmeister: you could have a look at rakudo's tools/install-dist.p6, but i can't guarantee that that's the right way to go for what you want to do

[20:09] <haxmeister> thank you timotimo 

[20:09] *** pmurias left
[20:11] <timotimo> good luck!

[20:11] *** pmurias joined
[20:54] *** [TuxCM] joined
[21:05] *** [TuxCM] left
[21:16] <nine> haxmeister: tools/install-dist.p6 is specifically meant to be used for creating distribution packages. The existing packages show how it's used: https://build.opensuse.org/package/view_file/devel:languages:perl6/File_Ignore/perl6-File-Ignore.spec?expand=1

[21:17] <nine> There are also scripts for automating the packaging and for putting them onto the Open Build Service: https://github.com/niner/meta2rpm

[21:17] <timotimo> we could perhaps have a spot for people in the same situation as haxmeister

[21:17] <timotimo> on the website or where-ever

[21:25] <AlexDaniel> nine: thank you for looking into the blockers 👍

[21:29] <Kaiepi> i'm running into the same error as #3045 in my own code

[21:29] <Kaiepi> R#3045

[21:29] <Kaiepi> however you get the bot to link rakudo issues

[21:30] <timotimo> that's the right way, i guess it just isn't here

[21:30] <Kaiepi> ah

[21:30] <AlexDaniel> yeah because we have to chase down every single bot and tweak it

[21:33] <AlexDaniel> hmm do I feel like it or not…

[21:33] <AlexDaniel> I can quickly just turn it into something able6

[21:34] *** ggoebel joined
[21:35] <AlexDaniel> actually, let me do it

[21:35] <timotimo> synopsable

[21:35] <japhb> A bot that chases down other bots and moves them to new channels?

[21:36] <japhb> shepherdable

[21:36] <AlexDaniel> rather recruits them

[21:36] <AlexDaniel> timotimo: linkable?

[21:37] <japhb> piedpiper

[21:37] <timotimo> it does a little more than just linking, i think?

[21:37] <AlexDaniel> like

[21:37] <AlexDaniel> ?

[21:39] * AlexDaniel deletes code, deletes code, deletes code…

[21:40] <timotimo> i don't remember :) :)

[21:54] <nine> AlexDaniel: the epoll issue must be one of the weirdest ever

[21:54] <nine> Nothing about it makes real sense: https://github.com/rakudo/rakudo/issues/3244#issuecomment-544200300

[21:54] <AlexDaniel> nine: let me guess, minor changes to the source code causing issues?

[21:54] <nine> yep

[21:55] <nine> Almost any change really

[21:55] <AlexDaniel> I remember some issue where changing some whitespace in the source code made it reliably fail or pass

[21:56] <AlexDaniel> that was fixed many years ago, but still :)

[21:56] <AlexDaniel> was fun

[22:31] *** patrickb joined
[22:31] <Geth> ¦ rakudo: Altai-man++ created pull request #3250: Test indexing with whatever for CArray

[22:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3250

[22:33] *** lucasb left
[22:35] <patrickb> .tell nine wrt the Inline::Perl5 with `make test`. I think I have an idea what's going wrong and what needs to be done to fix it. I'll report back in the next days.

[22:35] <tellable6> patrickb, I'll pass your message to nine

[22:35] <Geth> ¦ rakudo: bc8ca4e6e7 | Altai-man++ | t/04-nativecall/05-arrays.t

[22:35] <Geth> ¦ rakudo: Test indexing with whatever for CArray

[22:35] <Geth> ¦ rakudo: 

[22:35] <Geth> ¦ rakudo: Closes https://github.com/rakudo/rakudo/issues/2682

[22:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bc8ca4e6e7

[22:35] <Geth> ¦ rakudo: df657a3552 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | t/04-nativecall/05-arrays.t

[22:35] <Geth> ¦ rakudo: Merge pull request #3250 from Altai-man/test-carray-star-index

[22:35] <Geth> ¦ rakudo: 

[22:35] <Geth> ¦ rakudo: Test indexing with whatever for CArray

[22:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/df657a3552

[22:36] *** patrickb left
[22:57] *** pmurias left
[23:11] *** sena_kun left
[23:14] *** ggoebel left
[23:28] *** ggoebel joined
[23:53] <Geth> ¦ rakudo: 9b181a700e | (Ben Davies)++ | src/Perl6/Metamodel/Naming.nqp

[23:53] <Geth> ¦ rakudo: Fix another MOP-related StrLexRef serialization bug

[23:53] <Geth> ¦ rakudo: 

[23:53] <Geth> ¦ rakudo: Perl6::Metamodel::Naming's name and shortname attributes are expected to

[23:53] <Geth> ¦ rakudo: be literal strings, but if, say, a Raku module uses any given new_type

[23:53] <Geth> ¦ rakudo: method on a Rakudo HOW with :name bound to a Scalar, this doesn't end

[23:53] <Geth> ¦ rakudo: up being the case. Decont names and shortnames given to

[23:53] <Geth> ¦ rakudo: Perl6::Metamodel::Naming's methods similarly to

[23:53] <Geth> ¦ rakudo: f13ac2c03630ad0b56658f29c722fd8f2a45409c.

[23:53] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9b181a700e

[23:53] <Kaiepi> nine++, i wouldn't have figured this out without that commit

