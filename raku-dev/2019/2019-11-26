[00:05] *** sena_kun left
[00:06] *** MasterDuke left
[00:06] <Geth> ¦ rakudo: patzim++ created pull request #3321: Rename PERL6_HOME to RAKUDO_HOME

[00:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3321

[00:08] *** patrickb left
[00:36] *** lucasb left
[00:38] <Xliff> my ($a, $b) = (0, 4); say ($a, $b)».so

[00:38] <evalable6> Xliff, rakudo-moar f608a7a41: OUTPUT: «(False True)␤»

[01:35] *** Xliff left
[02:36] <Geth> ¦ nqp: vrurg++ created pull request #587: Support for the new way of doing silent/verbose builds

[02:36] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/587

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: 15255b0a91 | (Vadim Belman)++ | 3 files

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: Add --force-rebuild command line option

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: 

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: Forces rebuild of all required components like NQP and, possibly,

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: MoarVM. --force-rebuild tries to pretend we're building in an empty or

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: almost empty environment. I.e.:

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: 

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: perl Configure.pl --backends=moar --gen-nqp --force-rebuild

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: <…commit message has 6 more lines…>

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: review: https://github.com/rakudo/rakudo/commit/15255b0a91

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: 2022b9cdfa | (Vadim Belman)++ | 2 files

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: Don't force checkout of nqp repo if it already exists

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: 

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: Forced checkouts could break thins if for any reason we want nqp to

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: remain on certain branch or commit.

[02:40] <Geth> ¦ rakudo/configure-rebuild-all: review: https://github.com/rakudo/rakudo/commit/2022b9cdfa

[02:55] <Geth> ¦ nqp: e5be636469 | (Vadim Belman)++ | 6 files

[02:55] <Geth> ¦ nqp: Use the new silent build way via NOECHO makefile variable

[02:55] <Geth> ¦ nqp: 

[02:55] <Geth> ¦ nqp: With support for `VERBOSE_BUILD` and `SILENT_BUILD` overrides,

[02:55] <Geth> ¦ nqp: as in rakudo/rakudo@3c10487d7b6a930a101c39214105ec6649134909

[02:55] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/e5be636469

[02:55] <Geth> ¦ nqp: ac81c66aa6 | (Vadim Belman)++ | tools/lib/NQP/Config/NQP.pm

[02:55] <Geth> ¦ nqp: Don't checkout MoarVM repo if it's already exists

[02:55] <Geth> ¦ nqp: 

[02:55] <Geth> ¦ nqp: Keep it as it is for when we need it to remain at certain branch or

[02:55] <Geth> ¦ nqp: commit.

[02:55] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/ac81c66aa6

[02:55] <Geth> ¦ nqp: ba6378efd4 | (Vadim Belman)++ (committed using GitHub Web editor) | 6 files

[02:55] <Geth> ¦ nqp: Merge pull request #587 from vrurg/configure-rebuild-all

[02:55] <Geth> ¦ nqp: 

[02:55] <Geth> ¦ nqp: Support for the new way of doing silent/verbose builds

[02:55] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/ba6378efd4

[03:16] *** cognomin_ joined
[03:20] *** cognominal left
[03:24] <Geth> ¦ rakudo/configure-rebuild-all: 82bd9c2c16 | (Vadim Belman)++ | tools/templates/NQP_REVISION

[03:24] <Geth> ¦ rakudo/configure-rebuild-all: [NQP Bump] Brings 3 commits

[03:24] <Geth> ¦ rakudo/configure-rebuild-all: 

[03:24] <Geth> ¦ rakudo/configure-rebuild-all: NQP bump brought: https://github.com/perl6/nqp/compare/2019.07.1-164-g58996e370...2019.07.1-167-gba6378efd

[03:24] <Geth> ¦ rakudo/configure-rebuild-all: ba6378efd Merge pull request #587 from vrurg/configure-rebuild-all

[03:24] <Geth> ¦ rakudo/configure-rebuild-all: ac81c66aa Don't checkout MoarVM repo if it's already exists

[03:24] <Geth> ¦ rakudo/configure-rebuild-all: e5be63646 Use the new silent build way via NOECHO makefile variable

[03:24] <Geth> ¦ rakudo/configure-rebuild-all: review: https://github.com/rakudo/rakudo/commit/82bd9c2c16

[03:41] *** cognominal joined
[03:45] *** cognomin_ left
[04:00] <Geth> ¦ rakudo/master: 4 commits pushed by (Vadim Belman)++

[04:00] <Geth> ¦ rakudo/master: 15255b0a91 | Add --force-rebuild command line option

[04:00] <Geth> ¦ rakudo/master: 2022b9cdfa | Don't force checkout of nqp repo if it already exists

[04:00] <Geth> ¦ rakudo/master: 82bd9c2c16 | [NQP Bump] Brings 3 commits

[04:00] <Geth> ¦ rakudo/master: 5c2395bfa9 | Merge pull request #3248 from rakudo/configure-rebuild-all

[04:00] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/f608a7a412cc...5c2395bfa954

[04:08] *** cognomin_ joined
[04:09] *** cognominal left
[05:17] *** Xliff joined
[05:24] *** Xliff left
[05:38] *** ZzZombo left
[06:18] *** ZzZombo joined
[09:33] <lizmat> Files=1277, Tests=109537, 218 wallclock secs (28.64 usr  8.21 sys + 2959.38 cusr 274.65 csys = 3270.88 CPU)

[09:37] <lizmat> hmmm... PERL6_HOME isn't even documented at the moment?

[09:39] <lizmat> perl6/Compiler.nqp states "PERL6_HOME  Override the path of the Perl6 runtime files"

[09:40] <lizmat> Changelog has: Introduced `PERL6_HOME` and `NQP_HOME` which allow to control where

[09:40] <lizmat>         Perl 6 and NQP look for their installation

[09:41] <lizmat> so it appears to me that these are implementation specific environment variables

[09:41] <lizmat> and that therefore RAKU_HOME is incorrect, and should be RAKUDO_HOME

[09:48] <Geth> ¦ problem-solving: 0ac3cb71be | (Elizabeth Mattijsen)++ | solutions/language/Path-to-Raku.md

[09:48] <Geth> ¦ problem-solving: s/RAKU_HOME/RAKUDO_HOME/

[09:48] <Geth> ¦ problem-solving: 

[09:48] <Geth> ¦ problem-solving: The 2019.07 Changelog states:

[09:48] <Geth> ¦ problem-solving: 

[09:48] <Geth> ¦ problem-solving:     Introduced `PERL6_HOME` and `NQP_HOME` which allow to control where

[09:48] <Geth> ¦ problem-solving:     Perl 6 and NQP look for their installation

[09:48] <Geth> ¦ problem-solving: 

[09:48] <Geth> ¦ problem-solving: <…commit message has 6 more lines…>

[09:48] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/commit/0ac3cb71be

[09:48] <lizmat> AlexDaniel: ^^

[09:53] <AlexDaniel> how did it even allow you to push that? :D

[09:53] <AlexDaniel> anyway

[09:53] <AlexDaniel> jnthn: ↑ I need you to OK this change

[09:56] <AlexDaniel> there's also this: https://github.com/perl6/nqp-configure/pull/14

[09:56] <lizmat> AlexDaniel: it was not a nilly willy change, nor a big one, and the commit message states why extensively

[09:57] <lizmat> would you rather we'd gone through another issue with voting + weeks of discussion ?

[09:58] <lizmat> NQP PR looks ok to me

[09:58] <AlexDaniel> lizmat: not necessarily, we can call it a shortcut and that's it

[09:58] <AlexDaniel> lizmat: but that's up to jnthn

[09:58] <lizmat> so, who would you rather I'd done it ?

[09:58] <AlexDaniel> https://github.com/perl6/problem-solving#labels-and-responsible-devs

[09:58] <AlexDaniel> language – @jnthn

[09:59] <AlexDaniel> path-to-raku is technically `language`, even though the change we're talking about is rakudo

[09:59] <AlexDaniel> but either way it's jnthn :)

[10:00] <AlexDaniel> so as I said, I just need jnthn to OK/not OK this change :)

[10:00] <lizmat> ok  :-)

[10:05] <nine> Feels to me like improper upwards delegation that can only lead to managerial exhaustion. We push a decision onto jnthn about a fairly minor issue without even listing the arguments for each side and without community recommendation. Let's face it, the jnthn (TM) is a very scarce and valuable resource. We should use him wisely.

[10:07] <lizmat> nine++

[10:10] <AlexDaniel> sure, nine, you're welcome to PR a change to the main problem-solving document

[10:12] <AlexDaniel> or at least open an issue discussing this

[10:13] <AlexDaniel> here: https://github.com/perl6/problem-solving/issues/new?assignees=AlexDaniel&labels=meta&template=issue-template-meta.md&title=

[10:13] <jnthn> From what I understand of how those env vars are used in relocatability, the change makes sense.

[10:13] *** sena_kun joined
[10:14] <nine> It's main use seems to be for finding Rakudo's implementation files like perl6.moarvm and Perl6::ModuleLoader. The other use is for finding the site, vendor and core repositories. In that case it can be overridden by %*ENV<RAKUDO_PREFIX>

[10:14] <jnthn> It's far from clear that it's a language thing, 'cus otherwise it implies all implementations are expected to be relocatable *or* expected to factor their relocatability in the same way Rakudo is doing.

[10:14] <jnthn> So considering it implementation-specific seems right.

[10:15] <nine> In one case it's used for finding the implementation (doesn't get more implementation specific than that). In the other case the existing override already uses the implementation name.

[10:15] <jnthn> There we go then :)

[10:15] <nine> jnthn: do you concur that we should defer such decisions to you only as a very last resort?

[10:16] <AlexDaniel> that's not how it works…

[10:17] <|Tux|> Rakudo version 2019.07.1-505-g5c2395bfa - MoarVM version 2019.07.1-321-g97615be0a

[10:17] <|Tux|> csv-test-xs-20      0.422 -  0.427

[10:17] <|Tux|> csv-ip5xs           0.705 -  0.718

[10:17] <|Tux|> test-t --race       0.814 -  0.827

[10:17] <|Tux|> test-t              1.774 -  1.781

[10:17] <|Tux|> test                6.242 -  6.357

[10:17] <|Tux|> csv-ip5xs-20        6.507 -  6.583

[10:17] <|Tux|> test-t-20 --race    9.611 - 10.977

[10:17] <|Tux|> csv-parser         21.936 - 22.086

[10:17] <|Tux|> test-t-20          28.745 - 29.172

[10:17] <AlexDaniel> jnthn: anyway, thanks!

[10:17] <AlexDaniel> vrurg: now what do we do with nqp-configure

[10:20] <jnthn> nine: Well, it's hard to say in general, 'cus it's surely not always clear to those asking thing whether I will consider it significant. :) I suspect this one wouldn't have made its way to me if it hadn't been for it tweaking the rename solution.

[10:21] <AlexDaniel> correct

[10:22] <AlexDaniel> personally I don't see the problem. If the solution is so obvious then it shouldn't take a lot of effort to OK it

[10:22] <jnthn> Well, the problem - in general - is that there's one of me. :)

[10:23] <jnthn> But yes, I think given it touched the document it did, it's reasonable of you to ask me to quickly check it in this case.

[10:24] <nine> AlexDaniel: of course this little issue by itself is not a problem. The problem is that these little issues sum up quickly. From personal experience (as a manager) I can say that when people push these little things onto you, you feel half drained just dealing with them, before you even get to tackling your own projects.

[10:25] <nine> And often "half drained" is not enough energy anymore for things like PEA that selfish like I am, I would much rather see jnthn working on.

[10:25] <AlexDaniel> that's like the first time we had to touch this document in weeks…

[10:25] <AlexDaniel> I agree with what you say, it's just not an issue yet and I don't see it becoming one

[10:25] <nine> I see jnthn invoked every single day on these channels :)

[10:26] <AlexDaniel> not about tweaking already accepted documents

[10:28] <AlexDaniel> nine: but having only one jnthn is a real issue, yes :(

[10:28] <lizmat> fwiw, I think the error is really that PERL6_HOME was incorrect to begin with

[10:28] <lizmat> and it was too bad it slipped through the 2019.07 release

[10:29] <AlexDaniel> currently all language/rakudo/moarvm issues go to jnthn, and that's not right

[10:29] <lizmat> it should have been called RAKUDO_HOME before any name change, really

[10:29] <nine> lizmat: well better late than never :)

[10:29] <AlexDaniel> it's kinda early too :)

[10:30] <lizmat> nine: indeed, but my point is that we would have to correct this even if we hadn't been renaming Perl 6

[10:30] <lizmat> we're just abusing the rename process to fix a bug, in my opinion

[10:31] <lizmat> so in that sense, I guess it was wrong to change the Path-to-Raku document

[10:32] <nine> Well the document only states "we could consider". So we considered it and dropped it for a better solution - no need to change the document ;)

[10:32] <AlexDaniel> vrurg: so surprisingly on the release branch nqp-configure is at 1cd8bdc

[10:34] <AlexDaniel> vrurg: I guess we should branch out from 1cd8bdc and merge that draft fix there?

[10:34] <lizmat> ok, seems I need to have 13 approving reviews now to revert the commit

[10:34] <AlexDaniel> vrurg: anyway let me know what you thin

[10:35] <AlexDaniel> lizmat: revert what? Why do you need to revert it?

[10:35] <AlexDaniel> wait now I'm confused :)

[10:36] <lizmat> revert the commit I just did, as it isn't needed

[10:37] <lizmat> anyways, I've stated why I think it should be called RAKUDO_HOME, and I think jnthn agreed with that

[10:37] <AlexDaniel> that's correct, yes, I don't see why we need to revert it back now

[10:39] <jnthn> No, leave it alone now that it's done. :)

[10:55] * [Coke] waves from the states.

[10:55] * [Coke] sees he just missed an interesting project management discussion.

[10:58] * lizmat is curious about [Coke]'s POV

[10:58] <lizmat> being from the other side of the pond

[11:02] *** patrickb joined
[11:02] <patrickb> o/

[11:03] <patrickb> I thought I'd drop by as I was the author of the PERL6_HOME thing.

[11:04] <lizmat> patrickb!

[11:05] <patrickb> The original reason why the thing ended up  being called PERL6_HOME instead of RAKUDO_HOME was that the folder was and currently still is called 'perl6'  and not 'rakudo'.

[11:06] <lizmat> well, than that's incorrect as well  :-)

[11:06] <lizmat> because that *is* implementation specific, is it not ?

[11:07] <patrickb> From all I see it is implementation specific and thus makes most sense to have it all called 'rakudo' instead of perl6/raku.

[11:07] <[Coke]> Definitely, if you have a scarce resource like jnthn, you need to make sure they are spending time effectively.

[11:07] <patrickb> It's a nice convenience that the raku rename will allow us to sneak the rename of perl6 -> rakudo in.

[11:07] <[Coke]> In terms of the actual PR, yes, this seems like implementation specific to me as well.

[11:08] <[Coke]> I actually am having trouble getting stuff done at $DAYJOB, and part of that is that I need to re-prioritize the sorts of meetings and tasks I find myself pulled into.

[11:09] <[Coke]> I joined a new firm a year ago, and am no longer "the jnthn" in my role, but am still seeing myself and peers falling into the same sort of issues.

[11:10] <lizmat> patrickb: indeed  :-)

[11:11] <lizmat> "never waste a good crisis"

[11:13] <[Coke]> TIL about h

[11:13] <[Coke]> hpppiiinggggggggggggggggggggggggggggggggg3

[11:15] <[Coke]> ............ annnnnnnnnnnd aaaaallllllllsssssssssssssssssssssssssssssssoooooooooooo my                                                                   kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeyboard seems ttttttttttttttttttttto  

[11:15] <[Coke]> avvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvveeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee         ssssssssssssssommmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee         iiiiiiiisssssssssssssssssues

[11:16] <[Coke]> wtf.

[11:17] <patrickb> timotimo: Do you have any strong opinion wrt the naming of the '/usr/share/perl6' folder / PERL6_HOME? I ask because you were part of the original discussion that lead to it being named PERL6_HOME.

[11:18] *** squashable6 left
[11:18] <patrickb> There was this idea floating around that the folder should be used by all implementations (https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2019-01-07#l272)

[11:19] <patrickb> I'm in favor of having it named rakudo_home and being implementation specific, I just want to make sure we are not missing a reason.

[11:20] *** squashable6 joined
[11:20] <lizmat> fwiw, I'm not sure we can be inclusive of any other Raku implementation beforehand

[11:20] <lizmat> except maybe for -Ilib behaviour

[11:29] <patrickb> Actually I think having that folder be rakudo specific is more inclusive, as we are then not littering a folder that would be shared between implementations with specific stuff.

[11:29] <[Coke]> I can imagine us moving to a RAKU env var if there's consensus later. (whether that's consensus with another implementation's design team, or if our design team reviews and declares it good enough)

[11:30] *** squashable6 left
[11:33] *** squashable6 joined
[12:03] *** Altai-man_ joined
[12:05] *** sena_kun left
[12:06] *** ZzZombo left
[12:09] *** ZzZombo joined
[14:04] *** sena_kun joined
[14:06] *** Altai-man_ left
[14:06] <lizmat> so what *is* the correct handling of making a branch uptodate with master?

[14:06] <lizmat> because I'm stuck again in a "cannot update because current branch is behind"

[14:07] <lizmat> and a "fatal: cannot rebase with locally recorded submodule modifications" loop

[14:07] <lizmat> :-(

[14:18] <vrurg> lizmat: do rebase with --no-recursive-submodules. Then git pull again should fix up the submodule correctly.

[14:19] <vrurg> AlexDaniel: leave the nqp-configure as is in the release branch. What's done lately is going into the next release. That's how I see it.

[14:19] <lizmat> vrurg: error: unknown option `no-recursive-submodule

[14:20] <patrickb> missing an 's'?

[14:20] <lizmat> error: unknown option `no-recursive-submodules

[14:21] <vrurg> lizmat: ah, you actually do `git rebase`... Because I work on my own fork of rakudo, I do `git pull --rebase` most of the time. :(

[14:21] <lizmat> no, I do "git pull --rebase"

[14:22] <lizmat> $ git pull --rebase --no-recursive-submodules

[14:22] <lizmat> error: unknown option `no-recursive-submodules'

[14:22] <vrurg> lizmat: --no-recurse-submodules

[14:22] <vrurg> Sorry, autocompletion makes me forgetting actual names. 

[14:22] <lizmat> hehe... ok, that works much better

[14:22] <Geth> ¦ rakudo/add-type-to-positional-in-usage: 20 commits pushed by (Elizabeth Mattijsen)++, (Tom Browder)++, (Vadim Belman)++, (Stefan Seifert)++, (Ben Davies)++

[14:22] <Geth> ¦ rakudo/add-type-to-positional-in-usage: review: https://github.com/rakudo/rakudo/compare/8f43623c5587...42c784b645be

[14:23] <lizmat> but now I pushed 20 commits ?  and it was only 1 ?

[14:24] <nine> lizmat: if you rebased on a branch that gained 19 commits in the mean time, those are added to your remote branch as well - after all your local branch got them, too

[14:24] <lizmat> but the branch did *not* gain 19 commits

[14:24] <lizmat> it only gained 1, the others are from master ?

[14:25] <vrurg> lizmat: they're.

[14:26] <nine> Commits in git do not have a branch of origin. In fact, commits don't know anything about branches. They only know their predecessor commits.

[14:26] <lizmat> I guess I'm misunderstanding the process still

[14:26] <AlexDaniel> vrurg: so we're leaving --perl6-home ?

[14:26] <nine> The best way to understand branches in git is to think of them as symlinks pointing to a commit (which they pretty much are in the .git directory).

[14:27] <AlexDaniel> again, I love this: https://learngitbranching.js.org/ :)

[14:27] <vrurg> AlexDaniel: yes, for this release. We can't incorporate everything at once.

[14:27] <AlexDaniel> okay

[14:27] <nine> So while a branch does have a clearly defined end, it's start is always the initial commit in the repository. A branch may have commits in common with other branches (like master) and tools can show you only the unique commits.

[14:28] <nine> All that said: there is something wrong, as GitHub shows the PR would add 23 commits to master, which cannot be right.

[14:29] <AlexDaniel> yeah that's absolutely wrong

[14:29] <lizmat> well, that there is something wrong, is my feeling as well

[14:29] <lizmat> I mean, I thought all went well with branches

[14:29] <lizmat> until we got updates to submodules

[14:29] <AlexDaniel> basically these commits were rebased on top of some other commit

[14:30] <lizmat> so let me rephrase my workflow:

[14:30] <lizmat> 1. do some work on the core

[14:30] <lizmat> 2. git checkout -b branch-name

[14:30] <lizmat> 3. git commit whatever I did

[14:31] <lizmat> 4. git push

[14:31] <lizmat> time passes and commits are done to master

[14:31] <lizmat> while on master:

[14:31] <lizmat> 5 git pull

[14:31] <lizmat> 6. git checkout branch-name

[14:31] <lizmat> 7. git rebase master

[14:32] <lizmat> make changes

[14:32] <lizmat> 8. git commit

[14:32] <lizmat> 9. git push

[14:32] <lizmat> is that a wrong workflow?

[14:32] <nine> The last step would clearly be a git push -f. This workflow doesn't mention a pull --rebase. So where did that come in?

[14:33] <nine> And yes, I've used this workflow a 1000 times

[14:34] <AlexDaniel> as for how to recover from it now, I'd say just cherry-pick your commits into a new branch

[14:35] <nine> Or rebase -i on master and remove all but the 1 commit from the list

[14:35] <AlexDaniel> yeah

[14:36] <tbrowder> AlexDaniel: ref git and PRs, can we PR submitters revert the PR merge? if so, I need a cookbook solution given my setup  (probably same as most here): work on local branch off master; single commit  (after being told of its importance to you and management of the whole public repo); push to my account on github (origin); create PR; i, or someone else, merges the PR; PR later fails and commit needs to be reverted. so, 

[14:36] <tbrowder> given all the repos and branches, how is that accomplished?

[14:37] <AlexDaniel> it can only be done with a revert commit

[14:37] <AlexDaniel> IIRC github has a button to create one for you

[14:37] <tbrowder> can i do it? or does it take someone else? 

[14:37] <lizmat> nine: sorry, 5 was a "git pull --rebase"

[14:38] <AlexDaniel> tbrowder: open your PR and see if it has a Revert button, it should

[14:38] <tbrowder> okay, i'll try that...

[14:38] <AlexDaniel> that'd create a new PR

[14:38] <AlexDaniel> you can revert it without a PR from command line, of course

[14:39] <AlexDaniel> IIRC `git revert merge-commit-sha` and then follow the instructions, it'll ask which side of the merge you want to revert

[14:51] <nine> lizmat: why do you do a git pull -r on the master branch? There shouldn't be anything to rebase there (unless you committed directly to master)

[14:53] <nine> lizmat: and indeed https://github.com/rakudo/rakudo/commit/42c784b645be7f5274266d5f36fbf89b06b27c34 is not on master, so that's why your branch now starts with that

[14:53] <nine> lizmat: the commits between that and your most current one are now distinct from their originals on master because they have a new parent

[14:55] <lizmat> nine: the --rebase is a caution to handle the case where I missed commits on remote master while I was preparing the commit

[14:55] <lizmat> that's a valid approach, is it not?

[14:55] <lizmat> at least I will be told immediately if there are conflicts with my local work and the remote state ?

[14:56] <[Coke]> I always do pull --rebase, even if it's likely that I didn't need to, because I'd rather do it and not need it than the converse.

[14:56] <[Coke]> (I aliased pull --rebase to "git rb" I do it so often.)

[14:57] <Geth> ¦ rakudo: d81212b205 | (Christian Bartolomäus)++ | t/02-rakudo/13-exceptions.t

[14:58] <Geth> ¦ rakudo: Add tests for catching error at compile time

[14:58] <Geth> ¦ rakudo: 

[14:58] <Geth> ¦ rakudo: The second new test refers to a change introduced with

[14:58] <Geth> ¦ rakudo: https://github.com/rakudo/rakudo/pull/3231 (to fix RT #129812

[14:58] <Geth> ¦ rakudo: on the JVM backend). The first new test only serves to

[14:58] <Geth> ¦ rakudo: show that the native and the non-native case behaves identically.

[14:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d81212b205

[14:58] <Geth> ¦ rakudo: 4181ca6134 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | t/02-rakudo/13-exceptions.t

[14:58] <Geth> ¦ rakudo: Merge pull request #3304 from usev6/literal_to_rw_x_comp_test

[14:58] <Geth> ¦ rakudo: 

[14:58] <Geth> ¦ rakudo: Add tests for catching error at compile time

[14:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4181ca6134

[15:12] <vrurg> lizmat: what I do is I fork the original repo into my account. Locally, in the clone, I add 'upstream` remote which points to the original repo. Then in a branch where I work on something, I do `git pull --rebase upstream master' periodically.

[15:14] <vrurg> With forking I'm not afraid of branch pollution and know that I wouldn't accidentally mess up with the original master.

[15:22] *** squashable6 left
[15:23] *** squashable6 joined
[15:24] <lizmat> how is that different from "git pull --rebase" in master, and then doing the "get rebase master" in the branch ?

[15:29] <tbrowder> AlexDaniel: the original test failure was for Mac OS, not Linux, so I'm not sure I can fix it, but i restarted the PR build to check ressults before i do anything. and i see your advice on the revert--taking better notes this time :-D

[15:34] <vrurg> lizmat: the difference is subtle: I rebase my branch in the fork against the upstream master. And so far it works reliably well.

[15:35] <[Coke]> lizmat; if you didn't have any local commits in master, I'd expect equivalence.

[15:35] * vrurg is afk&

[15:48] *** entonian joined
[15:50] *** entonian left
[15:57] <tbrowder> *PR build should be "PR merge build"

[16:00] <tbrowder> vrurg: that (periodically while on my feature branch: git pull --rebase upstream) sounds like what i should be doing, thnx for the hint.

[16:02] <tbrowder> AlexDaniel: ref vrurg's periodic rebase, will that add another commit which will make it difficult to revert a  PR?

[16:03] *** Altai-man_ joined
[16:04] <tbrowder> ok!! the rebuild of my PR #3253 merge passed all Linux and OSX tests, so i assume i can press on with other stuff, yes?

[16:06] *** sena_kun left
[16:30] <lizmat> so, as some of you may know, I've been working on a new implementation of Sprintf in a branch: newer-sprintf

[16:30] <lizmat> this branch creates a new file, and adds it to the list of files to live in the setting

[16:31] <lizmat> so not a lot of chance for conflicts

[16:31] <lizmat> it's been a while since I worked on that branch

[16:31] <lizmat> what is the sequence of git statements that I should use to make sure the branch is up to date with master ?

[16:34] <AlexDaniel> well, you always have a choice to either merge or rebase

[16:34] <AlexDaniel> but the one you gave previously should work for rebasing

[16:36] <lizmat> ok, so on master: git pull --rebase to make sure it's up to date, then checkout the branch and do a "git rebase master", right ?

[16:36] <AlexDaniel> well --rebase is not needed, just git pull is fine, but yeah

[16:37] <AlexDaniel> in case of a conflict you'll have to resolve it, but that's no biggie

[16:52] <[Coke]> AlexDaniel: it's not needed unless you somehow forgot about a commit - if you prefer rebases, why not just always use it?

[16:54] <AlexDaniel> [Coke]: then the branch will be on top of the commit that perhaps was not meant to be there

[16:57] <[Coke]> if you have that commit in master, the branch will include it after a rebase against master anyway - the difference will be that the history of master will have a more linear history instead of a merge commit.

[16:58] <AlexDaniel> yeah that's right

[17:01] <AlexDaniel> but I'm for understanding what you're doing. So if you don't have any new commits on master, then you can just pull. If you don't know and decide to do --rebase just in case, well… maybe you should check first

[17:08] *** patrickb left
[17:25] <[Coke]> That's fair.

[17:32] <dogbert17> anyone recognize this message: ethod NQP::Config::configure_misc must be implemented by the language class at /home/dogbert/.rakudobrew/versions/moar-master/3rdparty/nqp-configure/lib/NQP/Config.pm line 563.

[17:32] <dogbert17>  at /home/dogbert/.rakudobrew/versions/moar-master/3rdparty/nqp-configure/lib/NQP/Config.pm line 35.

[17:47] <vrurg> dogbert17: your submodule didn't update somehow.

[17:48] <vrurg> dogbert17: what's in your 'moar-mast' dir? NQP?

[17:50] <dogbert17> I wiped the moar master dir and then the build worked

[17:51] <dogbert17> I have another problem on my RPi 4 though

[17:51] <dogbert17> +++ Setting up nqp-m

[17:51] <dogbert17> Option force-rebuild does not take an argument

[17:51] <dogbert17> Configure.pl - NQP Configure

[17:51] <dogbert17> and then the build fails

[17:52] <dogbert17> usually I just do 'git pull' in my rakudo dir followed by 'perl Configure.pl --gen-moar --gen-nqp --backends=moar'

[17:55] <dogbert17> vrurg: more detail here: https://gist.github.com/dogbert17/a8d8a4a9596dd236dfcb62d23accacdd

[17:58] <vrurg> dogbert17: same issue, the submodule didn't update somehow.

[18:00] <vrurg> And it's never clear why it happens and for what reason git doesn't update it. :(

[18:02] <vrurg> dogbert17: could you try fresh clone of rakudo and re-build? Must work this way.

[18:04] *** sena_kun joined
[18:06] *** Altai-man_ left
[18:21] <Geth> ¦ rakudo/release-2019.11: 235737fa03 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[18:21] <Geth> ¦ rakudo/release-2019.11: Tiny changelog tweaks

[18:21] <Geth> ¦ rakudo/release-2019.11: review: https://github.com/rakudo/rakudo/commit/235737fa03

[18:59] <jdv79> [Coke]: i have "up" aliased to "git pull --rebase --stat"

[18:59] <jdv79> but yeah, the submodules are kinda annoying how they don't interact well with some workflows:(

[19:01] <jdv79> i also have recently become "mgmt" or sorts and am easily swamped with random seemingly small issues regularly:(

[19:01] <jdv79> *of

[19:13] <japhb> I have bash functions for managing upstream handling: one to allow me to git pull --rebase *and* review each of the commits in actual commit order:  gpr () { cur=`git rev-parse HEAD`; git pull; git log -p --reverse $cur...; }

[19:13] <japhb> *I have two

[19:13] <japhb> The second one lets me get an overview of the graph of branches and merges:   glg () { git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative --color=always "$@" | less -R ; }

[19:14] <japhb> Sorry, the first one is to git pull *without* the rebase.

[19:15] <japhb> I actually end up with a *lot* of 3-letter shell functions and aliases, because even 'git ' at the front became annoying for my most common uses, so I don't even use git's own aliasing system.

[19:18] *** squashable6 left
[19:19] *** squashable6 joined
[19:23] *** MasterDuke joined
[19:26] *** cognominal joined
[19:30] *** cognomin_ left
[19:57] <Geth> ¦ roast/cleanup-perl5-name: 8e16059e9c | (Vadim Belman)++ | 124 files

[19:57] <Geth> ¦ roast/cleanup-perl5-name: Change references to Perl 5 to just Perl

[19:57] <Geth> ¦ roast/cleanup-perl5-name: 

[19:57] <Geth> ¦ roast/cleanup-perl5-name: This surely doesn't affect keywords. Also a historical quote left intact.

[19:57] <Geth> ¦ roast/cleanup-perl5-name: review: https://github.com/perl6/roast/commit/8e16059e9c

[19:57] <Geth> ¦ roast: vrurg++ created pull request #599: Change references to Perl 5 to just Perl

[19:57] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/599

[20:00] <Geth> ¦ roast: 8e16059e9c | (Vadim Belman)++ | 124 files

[20:00] <Geth> ¦ roast: Change references to Perl 5 to just Perl

[20:00] <Geth> ¦ roast: 

[20:00] <Geth> ¦ roast: This surely doesn't affect keywords. Also a historical quote left intact.

[20:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8e16059e9c

[20:00] <Geth> ¦ roast: 4c384ec3b8 | (Vadim Belman)++ (committed using GitHub Web editor) | 124 files

[20:00] <Geth> ¦ roast: Merge pull request #599 from perl6/cleanup-perl5-name

[20:00] <Geth> ¦ roast: 

[20:00] <Geth> ¦ roast: Change references to Perl 5 to just Perl

[20:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/4c384ec3b8

[20:03] *** Altai-man_ joined
[20:06] *** sena_kun left
[20:19] *** cognomin_ joined
[20:19] <vrurg> greppable6: rx:Perl5

[20:19] <greppable6> vrurg, Found nothing!

[20:19] <Altai-man_> P5?

[20:20] <vrurg> greppable6: [s|m]:Perl5

[20:20] <greppable6> vrurg, 1 line, 1 module: https://gist.github.com/91e81dcbd05c7a93cb0f035c987529c6

[20:20] <vrurg> Altai-man_: why P5?

[20:20] <Altai-man_> vrurg, dunno, probably my memory is wrong

[20:21] <vrurg> Altai-man_: it's rx:Perl5 all over roast.

[20:22] <vrurg> greppable6: [s|m|rx]:P5

[20:22] <greppable6> vrurg, 10 lines, 7 modules: https://gist.github.com/89c6f168f208874990f5d350d1579f31

[20:22] <vrurg> It is aliased, it seems.

[20:22] *** cognominal left
[20:24] <Geth> ¦ problem-solving: vrurg assigned to jnthn Issue Remove P5 regexes from Raku https://github.com/perl6/problem-solving/issues/133

[20:41] <AlexDaniel> it was a nice idea, but yeah, it seems like most people would much rather rewrite them as raku regexes instead

[20:41] <AlexDaniel> when porting perl5 code, that is

[20:43] <lizmat> the big problem is that they are Perl 5.8 regexes, which if you're using Perl now, is basically really old

[20:45] <vrurg> So, as Inline::Perl5 isn't core functionaliy, P5 regexes shouldn't be either.

[20:45] <lizmat> well, Inline::Perl5 was a nail to the coffin of "use v5"

[20:45] <[Coke]> +1 from me. Seems like you could wrap Inline::Perl5 to similar effect.

[20:46] <lizmat> perhaps this would need to be revamped to transparently load Inline::Perl5 if avaoilable, and run it in the Perl 5 runtime ?

[20:46] <[Coke]> and the Rename doesn't help either.

[20:46] <[Coke]> Also: would we rather encourage people to transpile their regexes into Grammars?

[20:46] <lizmat> perhaps with an ":ip5" adverb, to not cause clashes with :p5 users?

[20:47] <nine> How on earth can this work without a return type? method new() is native("./11-cpp") is nativeconv('thisgnu') { * }

[20:47] <nine> (from our NativeCall tests)

[20:50] * vrurg would rather welcome all this discussion to the problem solving.

[20:50] <[Coke]> So, back in the day, I was interested in getting Rakudo to run on the JVM because that was how I was going to get it deployed. Then containers happened, so MoarVM was just fine. Then I moved to a .NET shop. Do we have a guide on porting to a new backend? I know we have some example of it being done, but I don't think there's a porters guide.

[20:50] <vrurg> IRC log isn't easy place to search afterwards.

[20:50] <[Coke]> vrurg: feel free to cut and paste my comments if that helps.

[20:51] <vrurg> [Coke]: For now I'd just incorporate a link to colabti.

[20:51] <[Coke]> +1

[20:52] <MasterDuke> [Coke]: lock pmurias in a room until he writes one?

[20:53] <[Coke]> Which reminds me: I could really use some community feedback on the JS backend.

[20:53] <Geth> ¦ problem-solving: japhb assigned to AlexDaniel Issue Update or replace draft SoC/CCoC https://github.com/perl6/problem-solving/issues/134

[20:53] <Geth> ¦ problem-solving: AlexDaniel self-unassigned Update or replace draft SoC/CCoC https://github.com/perl6/problem-solving/issues/134

[20:53] <Geth> ¦ problem-solving: AlexDaniel assigned to lizmat Issue Update or replace draft SoC/CCoC https://github.com/perl6/problem-solving/issues/134

[20:57] <Geth> ¦ roast: vrurg++ created pull request #600: Add test for `$.method: <args>` syntax

[20:57] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/600

[21:00] <Geth> ¦ roast: 93b99d6b86 | (Vadim Belman)++ | S12-methods/syntax.t

[21:00] <Geth> ¦ roast: Add test for `$.method: <args>` syntax

[21:00] <Geth> ¦ roast: 

[21:00] <Geth> ¦ roast: Related to rakudo/rakudo#3306

[21:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/93b99d6b86

[21:00] <Geth> ¦ roast: 03a18d29c6 | (Vadim Belman)++ (committed using GitHub Web editor) | S12-methods/syntax.t

[21:00] <Geth> ¦ roast: Merge pull request #600 from vrurg/rakudo_3306

[21:00] <Geth> ¦ roast: 

[21:00] <Geth> ¦ roast: Add test for `$.method: <args>` syntax

[21:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/03a18d29c6

[21:01] *** entonian joined
[21:01] *** MasterDuke left
[21:02] *** entonian left
[21:06] <japhb> vrurg, Altai-man_: P5 regex weren't just for backwards compat or to assist porting -- it was to bootstrap regex functionality in PUGS, since libraries already existed for PCRE-equivalent regexen in Haskell.

[21:06] <vrurg> japhb: But that's not actual anymore, right?

[21:08] <japhb> vrurg: Nope, I was just saying it wasn't added as an afterthought, but more as a prethought.  :-)

[21:08] <AlexDaniel> I wish you strength lizmat

[21:09] <AlexDaniel> doesn't look like an easy issue to resolve :(

[21:09] <japhb> (I would say forethought, but that's a different thing -- the forethought perhaps was in not stomping on the main regex braid.)

[21:11] <vrurg> AlexDaniel: agree to you. Hope we can be helpful for lizmat.

[21:12] *** entonian joined
[21:12] <AlexDaniel> vrurg: heh a release manager in me is already shutting down, what do I click…

[21:12] <AlexDaniel> this?

[21:13] <Geth> ¦ nqp/release-2019.11: 34e7d9ff3d | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/MOAR_REVISION

[21:13] <Geth> ¦ nqp/release-2019.11: [release] Bump MoarVM revision to 2019.11

[21:13] <Geth> ¦ nqp/release-2019.11: review: https://github.com/perl6/nqp/commit/34e7d9ff3d

[21:13] <Geth> ¦ nqp/release-2019.11: 3e05931f3b | (Aleks-Daniel Jakimenko-Aleksejev)++ | VERSION

[21:13] <Geth> ¦ nqp/release-2019.11: [release] Bump VERSION to 2019.11

[21:13] <Geth> ¦ nqp/release-2019.11: review: https://github.com/perl6/nqp/commit/3e05931f3b

[21:13] <Geth> ¦ rakudo/release-2019.11: 2a70c951e8 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/NQP_REVISION

[21:13] <Geth> ¦ rakudo/release-2019.11: [release] Bump NQP revision to 2019.11

[21:13] <Geth> ¦ rakudo/release-2019.11: review: https://github.com/rakudo/rakudo/commit/2a70c951e8

[21:13] <Geth> ¦ rakudo/release-2019.11: 8fa2b0f6a4 | (Aleks-Daniel Jakimenko-Aleksejev)++ | VERSION

[21:13] <Geth> ¦ rakudo/release-2019.11: [release] Bump VERSION to 2019.11

[21:13] <Geth> ¦ rakudo/release-2019.11: review: https://github.com/rakudo/rakudo/commit/8fa2b0f6a4

[21:13] <AlexDaniel> hmm I guess so…

[21:14] *** entonian left
[21:15] <AlexDaniel> I'm sorry, serious question, where's moarvm 2019.11 release? :D

[21:15] <AlexDaniel> http://moarvm.org/releases/

[21:16] <AlexDaniel> samcv: heeyyy… I think you forgot to upload some tars

[21:25] <Geth> ¦ nqp: 34e7d9ff3d | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/MOAR_REVISION

[21:25] <Geth> ¦ nqp: [release] Bump MoarVM revision to 2019.11

[21:25] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/34e7d9ff3d

[21:25] <Geth> ¦ nqp: 3e05931f3b | (Aleks-Daniel Jakimenko-Aleksejev)++ | VERSION

[21:25] <Geth> ¦ nqp: [release] Bump VERSION to 2019.11

[21:25] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/3e05931f3b

[21:25] <Geth> ¦ nqp: 41f6576e99 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 9 files

[21:25] <Geth> ¦ nqp: Merge branch 'master' into release-2019.11

[21:25] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/41f6576e99

[21:27] <Geth> ¦ rakudo/master: 10 commits pushed by (Vadim Belman)++, (Aleks-Daniel Jakimenko-Aleksejev)++

[21:27] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/4181ca61340c...cb0bf3860455

[21:28] <Geth> ¦ rakudo: 7a0a63078c | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/releasable/github-release.p6

[21:28] <Geth> ¦ rakudo: Rakufy the github uploader script

[21:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7a0a63078c

[21:58] <Geth> ¦ rakudo: ece3853117 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[21:58] <Geth> ¦ rakudo: Fix small formatting error in the changelog

[21:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ece3853117

[22:00] *** Kaiepi left
[22:01] *** Kaiepi joined
[22:05] *** sena_kun joined
[22:06] *** Altai-man_ left
[22:09] * lizmat is very tired and has a lot to mull about so goes to bed&

[22:12] <Geth> ¦ nqp: 5a9be2170a | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/MOAR_REVISION

[22:12] <Geth> ¦ nqp: [MoarVM Bump] 8d0b50d3f Fix JIT compiled nativ […]

[22:12] <Geth> ¦ nqp: 

[22:12] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2019.07.1-321-g97615be0a...2019.07.1-322-g8d0b50d3f

[22:12] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/5a9be2170a

[22:12] <Geth> ¦ rakudo: bb44785127 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/NQP_REVISION

[22:12] <Geth> ¦ rakudo: [NQP Bump] Brings 4 commits

[22:12] <Geth> ¦ rakudo: 

[22:12] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2019.07.1-167-gba6378efd...2019.11-10-g5a9be2170

[22:12] <Geth> ¦ rakudo: 5a9be2170 [MoarVM Bump] 8d0b50d3f Fix JIT compiled nativ […]

[22:12] <Geth> ¦ rakudo: 41f6576e9 Merge branch 'master' into release-2019.11

[22:12] <Geth> ¦ rakudo: 3e05931f3 [release] Bump VERSION to 2019.11

[22:12] <Geth> ¦ rakudo: 34e7d9ff3 [release] Bump MoarVM revision to 2019.11

[22:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bb44785127

[22:13] *** lizmat left
[22:14] *** lizmat joined
[22:17] <Geth> ¦ rakudo: 093ed87fdf | (Aleks-Daniel Jakimenko-Aleksejev)++ | docs/release_guide.pod

[22:17] <Geth> ¦ rakudo: Keep previous format for next releases

[22:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/093ed87fdf

[22:51] *** entonian joined
[22:54] *** entonian left
[23:06] *** entonian joined
[23:07] *** entonian left
[23:19] *** |Tux| left
[23:56] <[Coke]> did the switch from perl6/doc to Raku/doc invalidate my key, or is that something else?

