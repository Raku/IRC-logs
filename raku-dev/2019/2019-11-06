[00:30] *** patrickb left
[01:12] *** jnthn left
[01:13] <AlexDaniel> :S

[01:13] <AlexDaniel> why is zef trying to write to /usr/share/perl6/site/short

[01:14] <AlexDaniel> I'm getting this: https://gist.github.com/AlexDaniel/9ed55bf4a330721291fa2f96f568b230

[01:15] <AlexDaniel> also: ‚ÄúNo candidates found matching identity: Sake‚Äù

[01:15] <AlexDaniel> what is going on, how come I have a fully unusable raku installation :(

[01:16] <AlexDaniel> hmm I think it's lowercase `sake`, but it used to work in the past?

[01:21] <AlexDaniel> ooooooohh I think I know why

[01:21] <AlexDaniel> it's because rakudobrew defaults to `system` now

[01:22] *** lizmat joined
[01:41] <AlexDaniel> OK, so once I switch then it's sorta OK, but

[01:41] <AlexDaniel> `zef install Cro::WebSocket` ‚ÄúAll candidates are currently installed‚Äù

[01:42] <AlexDaniel> OK, nevermind, fixed that too‚Ä¶

[02:52] *** Demos[m] joined
[03:33] *** squashable6 left
[03:35] *** squashable6 joined
[04:55] *** AlexDaniel left
[05:08] *** AlexDaniel joined
[05:08] *** AlexDaniel left
[05:08] *** AlexDaniel joined
[06:05] *** robertle left
[06:15] *** sena_kun joined
[06:58] *** sena_kun left
[07:06] *** squashable6 left
[07:08] *** squashable6 joined
[08:10] *** tellable6 joined
[08:10] *** evalable6 joined
[08:25] *** sena_kun joined
[08:31] <El_Che> morning

[08:52] *** sena_kun left
[10:17] *** jnthn joined
[10:29] <El_Che> are there issues with relocatable rakudo+moarvm+nqp compiles? Or it can be used already on the main platforms (Linux, MacOS, Windows)?

[10:34] <jnthn> El_Che: I think the last time that was asked, the answer was it should work, and please try it. :)

[10:35] <El_Che> hehe

[10:37] *** sena_kun joined
[10:38] <El_Che> jnthn: now that I temporarely have you attention, you think if I build it in the oldest supported OS (e.g. centos 6 or 7), how portable will it be to more recents Linux distros? Libc changes is where the frontier will be?

[10:43] <jnthn> El_Che: I've no idea, sorry. I'm probably the least useful person to ask about Linux packaging stuff.

[10:44] <El_Che> hehe, no prob

[10:44] <El_Che> jnthn: I have been looking at go releases packaging

[10:44] <jnthn> I mean, I could tell you that a Windows installer from 10 years ago will probably run fine today, but... :-)

[10:44] <El_Che> jnthn: it could be handy to have a tar.gz with a release that works everywhere

[10:45] <jnthn> Hm, is it go that statically links in the libc?

[10:45] <El_Che> jnthn: also for windows. Lots of company pc's are locked down and people can't install msi

[10:45] <jnthn> Or at least has a way to get a single binary with all deps...

[10:45] <El_Che> jnthn: also here at work, people running windows need to jump a lot of loops

[10:46] <El_Che> jnthn: I don't think so, they put limit on where it's supported and I think it depends on libc

[10:46] <jnthn> Ah, ok

[10:46] <El_Che> file ~/lib/go1.13/bin/go

[10:46] <El_Che> /home/claudio/lib/go1.13/bin/go: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, Go BuildID=K5AxsHkn4WveDB-F22oJ/mHP2LM75mM321GIMHYcF/qBV8oGhg0MA1FNBUG9KC/7Q83f2ds_nhdROUzk4zQ, not stripped

[10:46] <El_Che> not static

[10:47] <jnthn> I know for Comma on Linux we bundle a JRE and it seems to Just Work Everywhere

[10:47] <El_Che> they are pretty harsh on dropping old releases of OSes

[10:47] <El_Che> but because their programs are statically compiled it's less of an issue than it would be for us

[10:48] <jnthn> So I guess there is a way to distribute stuff that has little enough dependence on particular versions of things.

[10:48] <El_Che> jnthn: yes, I have been toying with that idea as well from before it was possible (relocatable)

[10:48] <jnthn> Well, with some more work to get rid of the extops, we'd be able to ship a statically linked MoarVM

[10:49] <El_Che> I was thinking on something like zef, but that only install on the local dir and download a reloacatable rakudo in the dir

[10:49] <El_Che> and pkgs that

[10:49] <El_Che> self contained app

[10:49] <El_Che> (sadly, time is not something I have lots of)

[10:49] <El_Che> (and rakudo module stuff is not easy to grasp, at least for me)

[10:50] <jnthn> Long ago I made https://github.com/jnthn/p6-app-installermaker-wix which is kind of in that space

[10:50] <El_Che> yes, I had a look at that then

[10:50] <El_Che> (I stopped once I understood rakudo wasn't relocatable then)

[10:50] <El_Che> rakudo should be bundled with the app and dependencies

[10:51] <El_Che> and then, what to do with nativecall

[10:51] <El_Che> that's hairy stuff to package or build

[10:51] <El_Che> we could go the go route: use of C bindings is frown upon and if you do, you're on your own :)

[10:52] <El_Che> I guess java did take the same route

[10:52] <jnthn> For the Windows one, modules often have a Build.pm6 that downloads a pre-built DLL, so for the MSI thing it just shipped that. ;)

[10:53] <El_Che> that's pretty much the definition of hairy

[10:54] <El_Che> and risky

[10:54] <El_Che> I think the perl 5 module installing we copied isn't the way forward

[10:55] <El_Che> hence thinking about alternatives and looking on how other communities do it

[10:55] <El_Che> (todo: have a look at rust)

[10:55] <El_Che> if there is something the python people hate around here is deploying applications

[10:56] <El_Che> the right version of python and the right version of modules and so on

[10:56] <El_Che> and binary deps

[10:56] <jnthn> I guess on Windows it's much more culturally tolerable to just download/use binaries, and to keep them app-local. :)

[10:57] <El_Che> it is, but it would make sense to package everything together, what most apps do

[10:59] <|Tux|> Rakudo version 2019.07.1-463-g1d84c64d6 - MoarVM version 2019.07.1-313-g836396c74

[10:59] <|Tux|> csv-test-xs-20      0.419 -  0.495

[10:59] <|Tux|> csv-ip5xs           0.700 -  0.703

[10:59] <|Tux|> test-t --race       0.805 -  0.845

[10:59] <|Tux|> test-t              1.718 -  1.749

[10:59] <|Tux|> csv-ip5xs-20        6.461 -  6.586

[10:59] <|Tux|> test                6.426 -  6.502

[10:59] <|Tux|> test-t-20 --race    9.047 -  9.466

[11:00] <|Tux|> csv-parser         21.699 - 22.723

[11:00] <|Tux|> test-t-20          28.748 - 28.895

[11:29] *** sena_kun left
[13:00] *** lucasb joined
[13:09] *** patrickb joined
[13:10] <patrickb> El_Che: Do you know about https://github.com/rakudo/rakudo/blob/master/docs/release-guide-binary.md ?

[13:10] <patrickb> That's the documentation I typed together of how I think binary releases of rakudo could be done.

[13:11] <patrickb> There are bits in there that deal with the glibc dependency problem.

[13:11] <patrickb> Also jnthns answer wrt to relocatable builds is correct. Should work - please try!

[13:17] <El_Che> patrickb: thx, I will bookmark it

[13:19] <patrickb> I do hope we'll manage to create and publish binary packages of the upcoming release.

[13:59] *** sena_kun joined
[14:10] <AlexDaniel> in case anybody missed my message, I'm very busy this week until about Sunday, so I believe no release until then

[14:11] <AlexDaniel> nqp and rakudo will be released from branches so you can commit to master, I don't care :)

[14:11] <AlexDaniel> Guest13443: ‚Üë

[14:25] <El_Che> AlexDaniel: thx!

[14:34] <Guest13443> AlexDaniel++

[15:29] *** Altai-man_ joined
[15:31] *** sena_kun left
[15:43] <vrurg> If anyone with good expertise in module loading would have a look at https://github.com/rakudo/rakudo/issues/3075#issuecomment-550367834 I'd be very grateful!

[15:54] *** patrickb left
[16:45] *** jmerelo joined
[17:16] *** MasterDuke joined
[17:32] *** Altai-man_ left
[17:34] <MasterDuke> split($sep, $string) https://github.com/rakudo/rakudo/blob/master/src/core.c/Str.pm6#L1566-L1624 isn't being jitted because of param_on_o

[17:56] <[Coke]> That seems like a lot of potential benefit.

[17:56] <tellable6> hey [Coke], you have a message: https://gist.github.com/ecb11e8b236cdf1f52e452eba2a7f97f

[17:59] *** lucasb left
[18:00] <[Coke]> .tell uzl[m] command-tab is mac "switch between windows"

[18:00] <tellable6> [Coke], I'll pass your message to uzl[m]

[18:19] *** robertle joined
[18:38] *** jmerelo left
[19:37] <Kaiepi> m: role Foo[::T]:auth<github:Kaiepi> { }

[19:37] <camelia> rakudo-moar 1d84c64d6: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse role definition‚ê§at <tmp>:1‚ê§------> 3role Foo[::T]7‚èè5:auth<github:Kaiepi> { }‚ê§¬ª

[19:37] <Kaiepi> should the correct syntax for this get suggested when people try to do it like this?

[19:38] <Kaiepi> it being type adverbs

[20:06] *** ufobat__ left
[21:36] *** patrickb joined
[21:47] *** MasterDuke left
[21:48] *** MasterDuke joined
[22:01] *** ggoebel left
[22:18] *** sena_kun joined
[22:56] *** sena_kun left
[23:36] <vrurg> jnthn: BTW, since release branching is done, I would like to see your approval on R#3272 and R#3199 :)

[23:39] <jnthn> vrurg: Should get to it tomorrow or Friday; planning to get some Raku/MoarVM stuff done :)

[23:39] <vrurg> Great! Thanks!

[23:48] <Geth> ¬¶ rakudo: patzim++ created pull request #3282: Hint about spectest with Inline::Perl5

[23:48] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/3282

[23:51] *** patrickb left
[23:56] *** Xliff joined
[23:57] <Xliff> o/

[23:59] <vrurg> Xliff: o/

