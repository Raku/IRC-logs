[00:11] *** |Tux| left
[00:41] *** sena_kun left
[00:55] *** |Tux| joined
[00:56] *** sena_kun joined
[01:38] *** |Tux| left
[01:47] *** |Tux| joined
[01:50] *** ZzZombo_ joined
[01:53] *** ZzZombo left
[01:53] *** ZzZombo_ is now known as ZzZombo

[01:54] <Geth_> ¦ rakudo: vrurg++ created pull request #3389: Attribute package fix

[01:54] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3389

[02:05] *** Merfont left
[02:06] *** Merfont joined
[02:15] *** AlexDani` is now known as AlexDaniel

[02:15] *** AlexDaniel left
[02:15] *** AlexDaniel joined
[02:19] *** |Tux| left
[02:20] <Xliff> m: "aa".Int.say

[02:20] <camelia> rakudo-moar 672c5d403: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5aa' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[02:24] <Xliff> m: 'z'.succ.say

[02:24] <camelia> rakudo-moar 672c5d403: OUTPUT: «aa␤»

[02:24] *** |Tux| joined
[02:24] <Xliff> m: 'z'.succ.say

[02:24] <camelia> rakudo-moar 672c5d403: OUTPUT: «aa␤»

[02:24] <Xliff> m: 'Z'.succ.say

[02:24] <camelia> rakudo-moar 672c5d403: OUTPUT: «AA␤»

[02:27] <Xliff> m: 'AA'.base(10).say

[02:27] <camelia> rakudo-moar 672c5d403: OUTPUT: «No such method 'base' for invocant of type 'Str'. Did you mean any of these?␤    Hash␤    asec␤    hash␤    take␤␤  in block <unit> at <tmp> line 1␤␤»

[02:28] <Xliff> m: 52.base(26).say

[02:28] <camelia> rakudo-moar 672c5d403: OUTPUT: «20␤»

[02:28] <Xliff> m: 27.base(26).say

[02:28] <camelia> rakudo-moar 672c5d403: OUTPUT: «11␤»

[02:28] <Xliff> m: 25.base(26).say

[02:28] <camelia> rakudo-moar 672c5d403: OUTPUT: «P␤»

[02:29] <Xliff> m: 25.base(26).^name.say

[02:29] <camelia> rakudo-moar 672c5d403: OUTPUT: «Str␤»

[02:41] *** sena_kun left
[02:57] *** sena_kun joined
[03:00] *** |Tux| left
[03:11] *** AlexDani` joined
[03:12] *** AlexDaniel left
[03:35] *** |Tux| joined
[03:45] <Geth_> ¦ rakudo: vrurg++ created pull request #3390: Warn if attribute accessor cannot be installed

[03:45] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3390

[03:46] <Geth_> ¦ rakudo: vrurg self-assigned A method in a role masks a public attribute in a class doing that role https://github.com/rakudo/rakudo/issues/3382

[04:35] *** evalable6 left
[04:36] *** travis-ci joined
[04:36] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Make `succeed foo` 30% and `succeed foo,bar` 60% faster

[04:36] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/631090549 https://github.com/rakudo/rakudo/compare/bed716bed29f...63f117502a93

[04:36] *** travis-ci left
[04:37] *** evalable6 joined
[04:40] *** sena_kun left
[04:43] <zostay> Hey, I'm looking for a new home for the raku vim plugin. I have been working on changes on my github account, but was considering moving it to the raku organization or creating a new vim-raku org for managing it.

[04:43] <zostay> Any suggestions?

[04:57] *** Voldenet left
[04:57] *** sena_kun joined
[05:03] *** Voldenet joined
[05:03] *** Voldenet left
[05:03] *** Voldenet joined
[05:09] *** squashable6 left
[05:11] *** squashable6 joined
[05:34] <Xliff> zostay: A vim-raku org might not be a bad idea.

[05:53] *** squashable6 left
[05:55] *** squashable6 joined
[06:42] *** sena_kun left
[06:51] <lizmat> re Travis: restarted the one failing job, and it turned green

[06:57] *** sena_kun joined
[07:19] *** ZzZombo left
[07:26] *** squashable6 left
[07:29] *** squashable6 joined
[07:49] *** squashable6 left
[07:50] *** squashable6 joined
[08:42] *** sena_kun left
[08:48] <nine> lizmat: but what failed and why?

[08:58] *** sena_kun joined
[09:12] <lizmat> nine: I didn't look, I only start to look when it doesn't go green after a restart

[09:12] <lizmat> Travis just flaps too often

[09:14] <nine> Which is why we should hunt down these issues

[09:15] <lizmat> *sigh* you're right

[09:16] <nine> And yes, I know exactly how hard this is :/

[09:16] <lizmat> but it's just bloody annoying having to go through oodles of output to figure out what went wrong

[09:17] <nine> I'm currently looking at a backtrace of a segfault that only ever occurs on our production machine and that I've been waiting for several days for to appear again...

[09:21] <lizmat> nine++    # more perseverance than me

[09:22] <nine> Feels more like desparation :D

[09:52] <nine> what the?!

[09:53] <nine> Looking at my backtrace, I noticed one crucial difference between the production system and my local test: the segfault happens in the OpenSSL module's code, while I didn't use TLS in my tests.

[09:53] <nine> So I changed that, fired up the test server in rr record, started my test script and.... segfault. In my test script!

[09:53] <lizmat> huh?

[09:53] <nine> Which I of course didn't run with rr record...

[09:54] <lizmat> feels like some NativeCall weirdness ?

[09:56] <nine> At least I started it in gdb, so now I know that both segfaults involve spesh's frame_walker, and both originate in OpenSSL code

[09:57] <nine> And both are because the frame we're inspecting unexpectedly doesn't have a spesh_cand

[09:57] <Geth_> ¦ rakudo: 0f4ef3cb5c | (Elizabeth Mattijsen)++ | src/core.c/Supply.pm6

[09:57] <Geth_> ¦ rakudo: Make Supply.lines a few percent faster

[09:57] <Geth_> ¦ rakudo: 

[09:57] <Geth_> ¦ rakudo: - make it a multi, to allow for more future functionality

[09:57] <Geth_> ¦ rakudo: - one candidate for always chomping, one candidate with an option

[09:57] <Geth_> ¦ rakudo: - reduce number of variables used, reorganize some conditions

[09:57] <Geth_> ¦ rakudo: - let nqp::substr do more work

[09:57] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0f4ef3cb5c

[09:57] <lizmat> nine: feels like an assert could be in place ?

[09:58] <nine> Which is odd. It segfaults in the line MVMJitCode *jitcode = f->spesh_cand->jitcode; because f->spesh_cand is NULL. But the line right before that is: if (f->spesh_cand && f->spesh_cand->inlines) {

[09:58] <nine> So, yeah, the check is already there!

[09:58] <lizmat> then memory corruption by another thread ?

[09:59] <nine> That kinda makes the most sense, yes.

[09:59] <nine> Now I really wish I had run this in rr

[10:00] <lizmat> was it the spesh thread that segfaulted, or another ?

[10:00] <nine> no, a normal thread

[10:00] <lizmat> so maybe spesh was doing something ?

[10:03] <nine> No, but there are loads of other threads. Though all of them are waiting. But that doesn't mean too much

[10:04] <nine> Let's see if I can repro when running in rr record...

[10:16] <nine> Yes, indeed, I finally catch some segfaults. And....it's all different ones :(

[10:16] <lizmat> so, definitely memory corruption by another thread  :-(

[10:16] <lizmat> ?

[10:22] <nine> That's the most likely explanation

[10:27] <nine> I've definitely found a place where a different thread overwrote some data

[10:31] <nine> I'm not sure I'm gonna resolve the bug(s), this decade...

[10:32] <lizmat> with about 12 hours to go, I guess that would be a reasonable assumption :-)

[10:32] <nine> Good thing there's a new one right around the corner :)

[10:33] <nine> And I wanna spend most of those 12 hours with my wife playing games and eating delicious food :)

[10:34] <lizmat> good plan!

[10:41] *** sena_kun left
[10:45] <Geth_> ¦ rakudo: c63d8a87d1 | (Elizabeth Mattijsen)++ | src/core.c/Supply.pm6

[10:45] <Geth_> ¦ rakudo: Implement Supply.lines(:nl-in<foo>)

[10:45] <Geth_> ¦ rakudo: 

[10:45] <Geth_> ¦ rakudo: Allow a Supply to be split on the given line-ending.  One could wonder

[10:45] <Geth_> ¦ rakudo: if this shouldn't actually be implemented as a Supply.split.

[10:45] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c63d8a87d1

[10:49] <nine> Could also be a use-after-free issue

[10:55] *** sena_kun joined
[11:31] *** AlexDani` is now known as AlexDaniel

[11:31] *** AlexDaniel left
[11:31] *** AlexDaniel joined
[12:04] <Geth_> ¦ rakudo: 779b0a2ea3 | (Elizabeth Mattijsen)++ | src/core.c/Supply.pm6

[12:04] <Geth_> ¦ rakudo: Streamline Supply.words similar to Supply.lines

[12:04] <Geth_> ¦ rakudo: 

[12:04] <Geth_> ¦ rakudo: - remove unused variables

[12:04] <Geth_> ¦ rakudo: - use nqp::substr() logic to its fullest

[12:04] <Geth_> ¦ rakudo: - don't keep nqp::chars value in variable

[12:04] <Geth_> ¦ rakudo: 

[12:04] <Geth_> ¦ rakudo: Didn't bother to look at any performance difference, don't expect much.

[12:04] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/779b0a2ea3

[12:17] <Geth_> ¦ rakudo: 6bd0dd513f | (Elizabeth Mattijsen)++ | src/core.c/Supply.pm6

[12:17] <Geth_> ¦ rakudo: Remove superfluous invocant redefinitions

[12:17] <Geth_> ¦ rakudo: 

[12:17] <Geth_> ¦ rakudo: Not sure why they were there, but they are not needed.

[12:17] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6bd0dd513f

[12:29] <nine> Aha! By replacing MVM_realloc with a MVM_realloc_poisoned I wrote, I an clearly demonstrate a use-after-realloc issue!

[12:30] <nine> MVM_realloc_poisoned overwrites the old memory area with 0xef which leads to an easily identifiable segfault when dereferenced

[12:30] <nine> A neat trick I found when debugging all those GC issues :)

[12:31] <lizmat> afk for a few hours&

[12:41] *** sena_kun left
[12:55] *** sena_kun joined
[14:41] *** sena_kun left
[14:57] *** sena_kun joined
[15:07] <AlexDaniel> zostay: Raku org is a good place

[15:08] <AlexDaniel> zostay: unless you mean it to become a big project on its own

[15:08] <AlexDaniel> I don't understand where this idea of creating a separate org for every single projects comes from

[15:08] <AlexDaniel> but all it does is just make things more difficult

[15:30] <AlexDaniel> for me personally :)

[15:54] <nine> lizmat: maybe I did find a fix this decade :) We'll see what jnthn++ will say to the proposal

[15:54] <[Coke]> I wouldn't create a new org unless it was really needed. (I did it once back in the day, and wish I hadn't)

[15:57] *** [TuxCM] joined
[15:57] <[TuxCM]> Rakudo version 2019.11-319-g6bd0dd513 - MoarVM version 2019.11-103-g2ac1fa27f

[15:57] <[TuxCM]> csv-test-xs-20      0.445 -  0.453

[15:57] <[TuxCM]> csv-ip5xs           0.793 -  0.844

[15:57] <[TuxCM]> test-t --race       0.927 -  0.993

[15:57] <[TuxCM]> test-t              1.941 -  1.997

[15:57] <[TuxCM]> csv-ip5xs-20        6.614 -  7.278

[15:57] <[TuxCM]> test                8.054 -  8.055

[15:57] <[TuxCM]> test-t-20 --race   11.577 - 11.669

[15:57] <[TuxCM]> test-t-20          33.189 - 33.824

[15:57] <[TuxCM]> csv-parser         42.372 - 43.501

[15:58] <[TuxCM]> (sorry, I posted the past days in #perl6-dev as I am using my laptop in the U.K. I did not look close enough)

[16:01] *** Merfont left
[16:18] <Geth_> ¦ roast: 9fa8119812 | (Elizabeth Mattijsen)++ | S17-supply/elems.t

[16:18] <Geth_> ¦ roast: Remove silly test

[16:18] <Geth_> ¦ roast: 

[16:18] <Geth_> ¦ roast: .elems on type objects generally gives "1", so why not here?

[16:18] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/9fa8119812

[16:21] <Geth_> ¦ rakudo: cfb655bc71 | (Elizabeth Mattijsen)++ | src/core.c/Supply.pm6

[16:21] <Geth_> ¦ rakudo: Streamline Supply.elems

[16:21] <Geth_> ¦ rakudo: 

[16:21] <Geth_> ¦ rakudo: Into 2 separate multi methods, one for the timed version, and one for

[16:21] <Geth_> ¦ rakudo: the version that doesn't use time.  Also use nqp::op for time keeping

[16:21] <Geth_> ¦ rakudo: to reduce timing overhead.

[16:21] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cfb655bc71

[16:42] *** sena_kun left
[16:47] *** [TuxCM] left
[16:59] *** sena_kun joined
[17:11] <zostay> Thanks for the tips. I'll just put it in raku for now and if it becomes a problem for some reason, I can always move it later. Happy New Year!

[17:13] <Xliff> .seen timotimo

[17:13] <tellable6> Xliff, I saw timotimo 2019-12-24T14:11:41Z in #whateverable: <timotimo> AFKBBL

[17:14] <zostay> Ah, well, I am part of the perl6 org on github, but it looks like only AlexDaniel has access to the raku org for the moment.

[17:14] <AlexDaniel> what's your github handle

[17:14] <zostay> zostay

[17:15] <AlexDaniel> invite sent

[17:15] <AlexDaniel> there are 12 people right now

[17:15] <AlexDaniel> the problem is that I don't know how to send 332 invites…

[17:15] <zostay> coolbeans

[17:16] <zostay> makes sense, thx

[17:16] <AlexDaniel> I should just write a script to do that but I've been planning to do it for the last month :S

[17:22] <AlexDaniel> there's no API endpoint for adding users

[17:22] <AlexDaniel> so what am I supposed to do then huh

[17:23] <AlexDaniel> just curl it and hope there's no captcha, right?

[18:02] <Geth_> ¦ roast: 34ab3343b4 | (Elizabeth Mattijsen)++ | 2 files

[18:02] <Geth_> ¦ roast: Make tests less language name specific

[18:02] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/34ab3343b4

[18:04] <Geth_> ¦ rakudo: b1a68be413 | (Elizabeth Mattijsen)++ | src/core.c/Supply.pm6

[18:04] <Geth_> ¦ rakudo: Streamline Supply.head

[18:04] <Geth_> ¦ rakudo: 

[18:04] <Geth_> ¦ rakudo: - separate into multi's

[18:04] <Geth_> ¦ rakudo: - simplify the numbered one

[18:04] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b1a68be413

[18:04] <Geth_> ¦ rakudo: 604ca34a49 | (Elizabeth Mattijsen)++ | 11 files

[18:04] <Geth_> ¦ rakudo: Do a lot of "Perl 6" to "Raku" renaming

[18:04] <Geth_> ¦ rakudo: 

[18:04] <Geth_> ¦ rakudo: - in comments

[18:04] <Geth_> ¦ rakudo: - in error messages

[18:04] <Geth_> ¦ rakudo: - in introspectable texts

[18:04] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/604ca34a49

[18:14] <AlexDaniel> lizmat++

[18:26] *** toddr joined
[18:41] *** sena_kun left
[18:57] *** sena_kun joined
[19:02] <[Coke]> AlexDaniel: create a new repo in the original that just says "request access to the new one" and click approve as they come in?

[19:03] <AlexDaniel> [Coke]: I don't understand :)

[19:04] <AlexDaniel> you can't request access, as far as I know

[19:04] <AlexDaniel> so you'd end up sending more than a hundred invites by hand anyway

[19:04] <AlexDaniel> which is something I'd like to avoid…

[19:39] <[Coke]> ah

[19:46] <Geth_> ¦ nqp: MasterDuke17++ created pull request #593: Fix compiler warnings in main runner

[19:46] <Geth_> ¦ nqp: review: https://github.com/perl6/nqp/pull/593

[20:00] *** travis-ci joined
[20:00] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Do a lot of "Perl 6" to "Raku" renaming

[20:00] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/631365959 https://github.com/rakudo/rakudo/compare/cfb655bc71a7...604ca34a4998

[20:00] *** travis-ci left
[20:12] *** squashable6 left
[20:14] *** squashable6 joined
[20:15] <Geth_> ¦ rakudo: 186c4ce6c6 | (Elizabeth Mattijsen)++ | t/02-rakudo/14-revisions.t

[20:15] <Geth_> ¦ rakudo: Adapt 'make test' to name change as well

[20:15] <Geth_> ¦ rakudo: 

[20:15] <Geth_> ¦ rakudo: Note to self: always run "make test" as well, not just "make spectest"

[20:15] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/186c4ce6c6

[20:22] *** squashable6 left
[20:22] *** squashable6 joined
[20:39] <Geth_> ¦ rakudo: MasterDuke17++ created pull request #3393: Fix compiler warnings in main runner

[20:39] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3393

[20:42] *** sena_kun left
[20:58] *** sena_kun joined
[21:28] *** |Tux| left
[22:10] *** travis-ci joined
[22:10] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Adapt 'make test' to name change as well

[22:10] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/631393762 https://github.com/rakudo/rakudo/compare/604ca34a4998...186c4ce6c64f

[22:10] *** travis-ci left
[22:15] *** |Tux| joined
[22:42] *** sena_kun left
[22:56] *** sena_kun joined
[23:22] *** AlexDaniel left
[23:24] *** AlexDaniel joined
[23:24] *** AlexDaniel left
[23:24] *** AlexDaniel joined
[23:31] <toddr> I'm working on importing rt.perl.org tickets to github.

[23:31] <toddr> I'm hoping to map as many github IDs to people.

[23:33] <toddr> Does anyone know any of these folks and if so do they have a github ID? If so can you comment in the gist? https://gist.github.com/toddr/879988e0e4f6a9e63822fe3622ced9cb

[23:35] *** |Tux| left
[23:37] <AlexDaniel> toddr: https://github.com/rakudo/rakudo/blob/master/CREDITS

[23:37] <AlexDaniel> toddr: https://github.com/Raku/doc/blob/master/CREDITS

[23:38] <AlexDaniel> I guess you already checked these? :)

[23:38] <AlexDaniel> hmm doesn't look like it

[23:38] *** squashable6 left
[23:38] <AlexDaniel> for example Daniel Green → MasterDuke17

[23:39] *** squashable6 joined
[23:39] <AlexDaniel> Timo Paulssen → https://github.com/timo/

[23:41] *** |Tux| joined
[23:42] <AlexDaniel> David Farrel is https://github.com/dnmfarrell

[23:42] <bartolin> toddr: the last three entries in your gist are me: https://github.com/usev6

[23:43] <toddr> I've been using the people listed in github/perl6

[23:47] <toddr> looking at credits thanks. Will refresh when I'm done

[23:48] <AlexDaniel> there are also https://github.com/MoarVM/MoarVM/blob/master/CREDITS and https://github.com/perl6/nqp/blob/master/CREDITS but these probably don't have any new info

[23:49] <toddr> perfect

[23:51] <AlexDaniel> another source can be https://modules.raku.org/search/?q= (perhaps try to Ctrl+F the name of an author and if you're lucky it'll get you to the github repo of one of their modules)

[23:51] <AlexDaniel> toddr: ping me once refreshed, I'll try to find the rest

[23:52] <toddr> some clearly don't have github based on the credits

[23:52] *** Mutter joined
[23:52] <toddr> ¯\_(ツ)_/¯ 

[23:52] <toddr> will do

[23:55] <Mutter> Yes, the ddgreen and Daniel green entries map to masterduke17

[23:57] <toddr> [email@hidden.address] = Shitov? the credits are a little misleading

[23:59] <toddr> nm it's ashgti

[23:59] <toddr> the credits are wrong I think

[23:59] <AlexDaniel> that's not Andrew I'm pretty sure

[23:59] <AlexDaniel> google says “John Harrison” but I don't know them

