[00:03] <Xliff> AlexDaniel: What? No response?

[00:03] <Xliff> committable: Committ AlexDaniel to a nice, padded room.

[00:03] <committable6> Xliff, ¦Committ: «Cannot find this revision (did you mean “Gotanda”?)»

[00:03] <Xliff> lol

[00:05] *** Kaiepi left
[00:05] *** Kaiepi joined
[00:23] <Xliff> m: @a = <a b c>; @b = <d e f>; (@a, @b)».[0] = (1, 2); @a.say; @b.say;

[00:23] <camelia> rakudo-moar 672c5d403: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '@a' is not declared␤at <tmp>:1␤------> 3<BOL>7⏏5@a = <a b c>; @b = <d e f>; (@a, @b)».[0␤»

[00:23] <Xliff> m: my @a = <a b c>; my @b = <d e f>; (@a, @b)».[0] = (1, 2); @a.say; @b.say;

[00:23] <camelia> rakudo-moar 672c5d403: OUTPUT: «[1 b c]␤[2 e f]␤»

[00:32] <AlexDaniel> thanks, committable6

[00:32] <committable6> AlexDaniel, It's my pleasure!

[01:31] <Xliff> m: my @a = <a b c>; my @b = <d e f>; (@a, @b)».[0, 1] = (1, 2, 'x', 'y'); @a.say; @b.say;

[01:31] <camelia> rakudo-moar 672c5d403: OUTPUT: «[1 2 c]␤[x y f]␤»

[01:51] *** lucasb left
[03:41] *** moritz_ joined
[03:42] *** moritz left
[04:55] *** squashable6 left
[04:57] *** squashable6 joined
[05:46] *** robertle left
[05:55] *** ZzZombo_ joined
[05:58] *** ZzZombo left
[05:58] *** ZzZombo_ is now known as ZzZombo

[06:32] *** benjif joined
[06:40] *** sena_kun joined
[07:18] *** moritz_ is now known as moritz

[07:26] *** sena_kun left
[07:44] *** squashable6 left
[07:46] *** squashable6 joined
[07:56] *** MasterDuke left
[08:11] <nine> Xliff: so what's missing from Cro that people want in a web framework?

[08:14] <nine> I.e. what do people answer when you point them at Cro?

[08:23] *** b2gills left
[08:23] *** sjn left
[08:23] *** dogbert17 left
[08:23] *** Ulti left
[08:24] *** b2gills joined
[08:24] *** sjn joined
[08:24] *** dogbert17 joined
[08:24] *** Ulti joined
[08:54] <lizmat> Files=1290, Tests=109646, 208 wallclock secs (27.95 usr  8.09 sys + 2927.61 cusr 262.30 csys = 3225.95 CPU)

[09:38] *** ExtraCrispy joined
[09:39] *** ExtraCrispy left
[09:46] *** pmurias joined
[10:10] *** benjif left
[10:22] *** |Tux| joined
[10:31] *** pmurias left
[10:38] *** sena_kun joined
[11:12] *** pmurias joined
[11:15] *** travis-ci joined
[11:15] <travis-ci> Rakudo build failed. Srikanth Gokavarapu 'Merge pull request #2 from dyna-dot/pull-1-restyled

[11:15] <travis-ci> https://travis-ci.com/dyna-dot/rakudo/builds/139299059 https://github.com/dyna-dot/rakudo/compare/84fc6593df0e...b5a9e25d94f4

[11:15] *** travis-ci left
[11:18] <Xliff> nine: That's the point! They don't tell me!

[11:22] <Geth> ¦ nqp: 6af4a58a03 | (Elizabeth Mattijsen)++ | t/nqp/081-radix.t

[11:22] <Geth> ¦ nqp: Add tests for '−' (U+2212) minus support to nqp::radix(_I)

[11:22] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/6af4a58a03

[11:22] <Geth> ¦ nqp: e6573f5e7f | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[11:22] <Geth> ¦ nqp: Bump MoarVM to get nqp::radix fixes + other goodies

[11:22] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/e6573f5e7f

[11:48] <nine> Xliff: I wouldn't be surprised if all that's missing was a simple tutorial application

[11:52] <Geth> ¦ nqp: 179e56eddf | (Stefan Seifert)++ | .travis.yml

[11:52] <Geth> ¦ nqp: Have Traivs report on #raku-dev instead of #perl6-dev

[11:52] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/179e56eddf

[11:59] <|Tux|> Rakudo version 2019.11-95-g6c85e6910 - MoarVM version 2019.07.1-402-g34813e181

[11:59] <|Tux|> csv-test-xs-20      0.418 -  0.431

[11:59] <|Tux|> csv-ip5xs           0.708 -  0.742

[11:59] <|Tux|> test-t --race       0.784 -  0.789

[11:59] <|Tux|> test-t              1.716 -  1.830

[11:59] <|Tux|> csv-ip5xs-20        6.293 -  6.303

[11:59] <|Tux|> test                5.775 -  6.486

[11:59] <|Tux|> test-t-20 --race    9.385 -  9.442

[11:59] <|Tux|> csv-parser         21.382 - 21.982

[11:59] <|Tux|> test-t-20          29.399 - 29.442

[12:05] <Geth> ¦ rakudo: 90e9d45585 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[12:05] <Geth> ¦ rakudo: Bump NQP to get nqp::radix fixes

[12:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/90e9d45585

[12:14] <nine> lizmat: your NQP radix fix fails on JVM

[12:15] <lizmat> ah, of course, we need a corresponding JVM change...

[12:15] <lizmat> any idea where I could find that ?

[12:15] * lizmat hasn't touched the JVM backend in years

[12:17] <nine> me neither

[12:20] <lizmat> I'm not even sure where that code lives ?

[12:23] <Xliff> nine: There are several. sena-kun just did an advent post for one.

[12:24] * Xliff tries to figure out a good grammar for C enums

[12:25] *** sena_kun left
[12:39] *** sena_kun joined
[12:43] *** Xliff left
[12:46] <Geth> ¦ nqp: 79fbd28ebf | (Elizabeth Mattijsen)++ | t/nqp/081-radix.t

[12:46] <Geth> ¦ nqp: Revert "Add tests for '−' (U+2212) minus support to nqp::radix(_I)"

[12:46] <Geth> ¦ nqp: 

[12:46] <Geth> ¦ nqp: This reverts commit 6af4a58a03ead4eedc8f4c39ba2e438489a11387.

[12:46] <Geth> ¦ nqp: 

[12:46] <Geth> ¦ nqp: Revert for now, as it breaks the JVM build

[12:46] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/79fbd28ebf

[12:47] <lizmat> afk for a few hours&

[12:47] *** awwaiid joined
[13:02] <pmurias> I'll look into fixing it on the JVM backend

[13:03] <pmurias> I'll look into fixing it on the JVM backend

[13:03] <pmurias> sorry for accidental repetition

[13:04] *** travis-ci joined
[13:04] <travis-ci> NQP build passed. Elizabeth Mattijsen 'Revert "Add tests for '−' (U+2212) minus support to nqp::radix(_I)"

[13:04] <travis-ci> https://travis-ci.org/perl6/nqp/builds/620607037 https://github.com/perl6/nqp/compare/179e56eddf65...79fbd28ebfcc

[13:04] *** travis-ci left
[13:27] *** unclechu joined
[13:59] *** Kaiepi left
[13:59] *** Kaiepi joined
[14:22] *** lucasb joined
[14:25] *** sena_kun left
[14:41] *** sena_kun joined
[14:42] <lucasb> m: #`{{

[14:42] <camelia> rakudo-moar 672c5d403: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Starter {{ is immediately followed by a combining codepoint. Please use { without a combining glyph ({{ was at line 1)␤at <tmp>:1␤------> 3#`{{7⏏5<EOL>␤    expecting any of:␤        }}␤»

[14:42] <lucasb> R#3339

[14:43] <lucasb> m: #`{

[14:43] <camelia> rakudo-moar 672c5d403: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Couldn't find terminator } (corresponding { was at line 1)␤at <tmp>:1␤------> 3#`{7⏏5<EOL>␤    expecting any of:␤        }␤»

[14:45] <pmurias> vrurg: when I change a .java file on the jvm runtime the jar in the J_RUNNER_JAR_DIR doesn't get updated

[14:46] <vrurg> pmurias: rakudo or nqp?

[14:46] <pmurias> nqp

[14:47] <pmurias> I'm not sure why we copy nqp-runtime.jar over

[14:48] <vrurg> pmurias: I basically copied over deps/logic from old makefile. A dependecy could have been overlooked, but with regard to the installation logic, I think it's mostly unchanged.

[14:51] <vrurg> pmurias: I think a ticket is needed. Right away I can only see that it should pick up all *.java from .../nqp/runtime/. I'd need more details.

[14:54] <pmurias> vrurg: I think the most logical way would be to make cping over the nqp-runtime.jar depend on the nqp-runtime.jar it copies

[14:56] <vrurg> pmurias: sorry, not getting you.

[14:58] <Geth> ¦ nqp: 225bdadaf5 | (Paweł Murias)++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/Ops.java

[14:58] <Geth> ¦ nqp: [jvm] Implement '−' (U+2212) minus support in nqp::radix(_I)

[14:58] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/225bdadaf5

[14:59] <pmurias> vrurg: currently when I change a .java file and run make  nqp-runtime.jar gets rebuilt

[15:01] <pmurias> but ./nqp-j uses gen/jvm/share/runtime/nqp-runtime.jar

[15:01] <pmurias> gen/jvm/share/runtime/nqp-runtime.jar gets updated only when a new runner is generated

[15:02] <pmurias> which is a bug

[15:03] <pmurias> vrurg: ^^ # is that clearer? 

[15:07] <vrurg> pmurias: Yes, it is now. I'll have a look at it. Though it is confusing as I think about it.

[15:08] <vrurg> pmurias: not sure when I'd have time for this, but will take a look ASAP.

[15:28] <pmurias> vrurg: the thing I'm confused about is why do we it such a way

[15:46] <vrurg> pmurias: No idea. As I said, I moved most of it from the older makefile. I hardly understand the details of building the JVM backend.

[16:00] *** pmurias left
[16:25] *** sena_kun left
[16:37] <lizmat> pmurias++

[16:38] <Geth> ¦ nqp: be4b3c0558 | (Elizabeth Mattijsen)++ | t/nqp/081-radix.t

[16:38] <Geth> ¦ nqp: Add tests for '−' (U+2212) minus support to nqp::radix(_I)

[16:38] <Geth> ¦ nqp: 

[16:38] <Geth> ¦ nqp: This reverts commit 79fbd28ebfcc01b2e3348bd31ada2576261ebced, because

[16:38] <Geth> ¦ nqp: the JVM backend is fixed by pmurias++

[16:38] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/be4b3c0558

[16:39] *** sena_kun joined
[16:55] <Geth> ¦ rakudo: 80dfcd0579 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[16:55] <Geth> ¦ rakudo: Bump NQP to get JVM backend fix for nqp::radix

[16:55] <Geth> ¦ rakudo: 

[16:55] <Geth> ¦ rakudo: pmurias++

[16:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/80dfcd0579

[17:10] *** robertle joined
[18:13] *** MasterDuke joined
[18:26] *** sena_kun left
[18:40] *** sena_kun joined
[18:50] *** camelia left
[19:17] <Geth> ¦ rakudo: 9b8ce733ae | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[19:17] <Geth> ¦ rakudo: Re-imagine Str.parse-base once again

[19:17] <Geth> ¦ rakudo: 

[19:17] <Geth> ¦ rakudo: - now that nqp::radix_I is fixed

[19:17] <Geth> ¦ rakudo: - makes parsing integer values about 20% faster

[19:17] <Geth> ¦ rakudo: - makes parsing of rational values about 25% faster

[19:17] <Geth> ¦ rakudo: - with about 1/3 of the allocations of before

[19:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9b8ce733ae

[19:20] <sena_kun> lizmat++

[19:21] <lizmat> so that makes Str.parse-base for rats about 5.5x as fast, and ints about 9x as fast from the last release

[19:21] <AlexDaniel> squashable6: next

[19:21] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 1 day and ≈8 hours (2019-12-07 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[20:26] *** sena_kun left
[20:40] *** sena_kun joined
[21:15] *** pmurias joined
[21:32] *** pmurias left
[21:32] *** pmurias joined
[22:26] *** sena_kun left
[22:41] *** MasterDuke left
[22:41] *** sena_kun joined
[23:01] <dogbert17> .seen AlexDaniel

[23:01] <tellable6> dogbert17, I saw AlexDaniel 2019-12-04T22:34:41Z in #whateverable: <AlexDaniel> sourceable6test: 6c2f24455c NaN.FatRat.Bool()

[23:02] <AlexDaniel> ahem, tellable6, that was a secret message

[23:02] <dogbert17> yes since I'm going to ask a stupid regex question

[23:02] <dogbert17> are you doing AoC?

[23:02] <AlexDaniel> what's AoC

[23:02] <dogbert17> Advent of Code

[23:02] <AlexDaniel> ah, no

[23:03] <dogbert17> I have solved everything so far but the last solution is not as elegant as I would like

[23:04] <AlexDaniel> okay, so what's the question? :)

[23:04] <dogbert17> one piece is to look at a number and check if two, and only two, digits in a row are the same

[23:04] <AlexDaniel> <same> ?

[23:05] <AlexDaniel> m: say ‘1233456’ ~~ /<same>/

[23:05] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «｢｣␤ same => ｢｣␤»

[23:05] <AlexDaniel> m: say ‘1233456’ ~~ /.<same>./

[23:05] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «｢33｣␤ same => ｢｣␤»

[23:05] <dogbert17> m: say ‘1233444’ ~~ /.<same>./

[23:05] <evalable6> dogbert17, rakudo-moar 9b8ce733a: OUTPUT: «｢33｣␤ same => ｢｣␤»

[23:06] <dogbert17> hmm, looks very promising

[23:06] <dogbert17> for an undocumented feature :)

[23:06] <AlexDaniel> it's documented a bit

[23:06] <dogbert17> aha

[23:06] <AlexDaniel> https://docs.perl6.org/language/regexes#Predefined_character_classes

[23:07] <AlexDaniel> I mean, you can also do

[23:07] <AlexDaniel> m: say ‘1233456’ ~~ /(.)$0/

[23:07] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «｢33｣␤ 0 => ｢3｣␤»

[23:07] <dogbert17> say ‘1233356’ ~~ /(.)$0/

[23:07] <evalable6> dogbert17, rakudo-moar 9b8ce733a: OUTPUT: «｢33｣␤ 0 => ｢3｣␤»

[23:07] <dogbert17> that one doesn't do it though

[23:08] <AlexDaniel> ah

[23:08] <dogbert17> I was tinkering with <?before > and <?after>

[23:09] <dogbert17> it has to do with todays problem should you became interested

[23:10] <dogbert17> using same will look a lot better than the loop I was using

[23:12] <AlexDaniel> dogbert17: /<!same>.<same>.<!same>/

[23:13] <AlexDaniel> this works nicely on string end and start

[23:13] <dogbert17> aha, very cool

[23:13] * dogbert17 tries

[23:14] <dogbert17> yup, it works, many thanks

[23:21] <AlexDaniel> m: say ‘1233456’ ~~ /(.)$0 <!after $0..> <!before $0>/

[23:21] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «｢33｣␤ 0 => ｢3｣␤»

[23:21] <AlexDaniel> m: say ‘12333456’ ~~ /(.)$0 <!after $0..> <!before $0>/

[23:21] <evalable6> AlexDaniel, rakudo-moar 9b8ce733a: OUTPUT: «｢33｣␤ 0 => ｢3｣␤»

[23:22] <AlexDaniel> why not?

[23:22] <AlexDaniel> I don't know why this doesn't work

[23:23] <AlexDaniel> but I think it's possible to do it like that too

[23:58] *** sena_kun left
