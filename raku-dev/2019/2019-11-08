[00:46] *** Altai-man_ left
[01:16] *** ZzZombo_ joined
[01:19] *** ZzZombo_ is now known as ZzZombo

[02:39] *** Xliff joined
[06:05] *** jmerelo joined
[06:23] *** Geth left
[07:42] *** jmerelo left
[08:11] *** Xliff left
[09:10] *** sena_kun joined
[09:30] *** Altai-man_ joined
[09:32] *** sena_kun left
[09:42] *** donaldh joined
[10:04] <El_Che> patrickb: set-env.sh is problematic. It set relative paths in the PATH: export PATH=./../bin:./../share/perl6/site/bin:...

[10:04] <tellable6> El_Che, I'll pass your message to patrickb

[10:47] *** tyil left
[10:48] *** tyilanmenyn joined
[11:31] *** sena_kun joined
[11:33] *** Altai-man_ left
[11:59] *** ggoebel left
[12:36] <El_Che> AlexDaniel: flappers on i386: https://travis-ci.org/nxadm/rakudo-pkg/jobs/609193309

[12:36] *** patrickb joined
[12:36] <AlexDaniel> gah, that performance thing again

[12:36] <El_Che> it's not head

[12:37] <El_Che> but the latest release

[12:37] <El_Che> AlexDaniel: reading relocatable tar.gz's for the release

[12:38] <AlexDaniel> well, it doesn't matter, the test was flappy anywayâ€¦

[12:39] <El_Che> it's a rather painful flipflop. Somethings I need 10 i386 to get packages

[12:44] *** patrickb left
[12:56] <rba> El_Che: Are the docker images built with alpine new and rakudo v2019.07.1-03 around somewhere?

[13:01] <El_Che> rba: but it's no more than adding a 2 line Dockerfile to a regular Alpine image

[13:01] <El_Che> rba: curl -sSL https://github.com/nxadm/rakudo-pkg/releases/download/v2019.07.1-03/rakudo-pkg-Alpine3.10_2019.07.1-03_x86_64.apk

[13:01] <El_Che> apk add --allow-untrusted *.apk

[13:02] <El_Che> rba: I haven't come around to create alpine repo's like for rpm and deb, but will do in the future

[13:02] <El_Che> not straightforward though (I host on bintray)

[13:03] <El_Che> I am also considering creating images for all the distributions I support, but for now working in relocatable archives

[13:10] <rba> El_Che: Sure. I will go with the two lines for now.

[13:22] *** lucasb joined
[13:30] *** Altai-man_ joined
[13:33] *** sena_kun left
[13:34] *** Xliff joined
[13:34] <Xliff> o/

[13:47] <El_Che> AlexDaniel: are t/09-moar/Line_Break__LineBreak.t and /09-moar/General_Category__extracted-DerivedGeneralCategory.t als related to performance (next to t/08-performance/99-misc.t; these keep failing on relocatable i386)

[13:47] <jnthn> Are they failing or just have passing todo?

[13:54] *** tyilanmenyn is now known as tyil

[13:54] <El_Che> jnthn: https://travis-ci.org/nxadm/rakudo-pkg/jobs/609218558

[13:55] <jnthn> Yes, "TODO passed"

[13:56] <El_Che> so only the misc test is the one holding the pass?

[13:57] <AlexDaniel> yep

[14:00] <El_Che> ok, nothing new then

[14:00] <El_Che> sorry for the noise

[14:04] *** Xliff left
[14:06] <AlexDaniel> El_Che: it's not noise, that damn test needs to be fixed

[14:23] <El_Che> looking at Windows travis builds

[14:23] <El_Che> it... interesting

[14:23] <El_Che> running bash commands to do stuff

[15:30] *** sena_kun joined
[15:32] *** Altai-man_ left
[15:38] <El_Che> OMG, building stuff (Rakudo) on Windows is concentrating pain. Fighting now with perl 5 to install the needed modules.

[15:39] <El_Che> I will give managers that expect me to run Windows at work instructions to build rakudo :)

[15:39] <El_Che> that will teach them :)

[15:44] <moritz> El_Che: back in the days when I was a windows-only user, I remember trying to compile some stuff and it was always a HUGE pain. Even as a pretty inexperienced Linux user a year or two later, compiling stuff from source was just way easier

[15:45] <moritz> it's kinda sad that there hasn't really been any progress in that area lately :/

[15:45] <moritz> (this was around y2k, iirc)

[15:46] <El_Che> wel, in travis they use gitshell, so it's less painful

[15:46] <El_Che> but still painful enough

[15:50] <El_Che> I don't think depending on perl 5 does rakudo on windows any favours

[15:56] <El_Che> shoot me: "Can't load 'C:/Strawberry/perl/lib/auto/Cwd/Cwd.xs.dll' for module Cwd: No such file or directory at C:/Strawberry/perl/lib/XSLoader.pm line 93."

[15:56] <El_Che> agh

[15:58] <El_Che> (the file is there)

[16:08] <El_Che> it gets better: Cwd.c: loadable library and perl binaries are mismatched (got handshake key 00000006000005b0, needed 0000000000000000)

[16:08] <El_Che> ok, enough windows for 1 day :)

[16:10] *** Xliff joined
[16:15] * lizmat hugs El_Che 

[16:19] <El_Che> on the flipside, I think I am ready to add relocatable tar.gz for Linux to rakudo-pkg (and it opens the door for Windows and macos)

[16:38] *** lizmat_ joined
[16:41] *** lizmat left
[16:41] *** lizmat_ is now known as lizmat

[17:07] *** patrickb joined
[17:15] <patrickb> El_Che: I successfully managed to create a Windows relocatable build with those instructions. It would be interesting to find out why it ended up being such a hassle on your machine. Did you start off with a clean Windows VM as described, or did you use a preexisting Windows?

[17:16] <patrickb> El_Che: As long as I can't reproduce the relative path in set-env.sh problem it will be difficult for me to do anything about it. Could you have a look yourself or try to find out what circumstances are needed to make it fail?

[17:16] <El_Che> patrickb: windows == travis

[17:17] <patrickb> Travis now has Windows support?

[17:17] <patrickb> Your trying to do it on travis. I see. That explains the different behavior. :-)

[17:18] <El_Che> yes, beta, but it looks good enough

[17:21] <El_Che> patrickb: trying to reproduce set set-env thing. unpacked relocable build in my ~/Download, mounted as a volume to a debian:10 docker container

[17:22] <El_Che> cd /mnt/rakudo-2019.07.1/bin

[17:22] <El_Che> . ./set-env.sh

[17:22] <El_Che> ERROR: 'bash' does not exist.

[17:22] <El_Che> that's weird

[17:22] <patrickb> is the second . in that command on purpose?

[17:23] <El_Che> yes

[17:23] <El_Che> without it's the same result

[17:25] <patrickb> I'll soon have to leave again for another three hours or so...

[17:27] <patrickb> Is it possible this fails only on busybox?

[17:28] <El_Che> I started it with bash

[17:28] <El_Che> as cmd

[17:28] <El_Che> # echo $BASH

[17:28] <El_Che> /bin/bash

[17:30] *** Altai-man_ joined
[17:32] <patrickb> El_Che: I also tried it in a clean debian:10 container. Still no relative paths.

[17:32] <patrickb> whut?

[17:32] <patrickb> have to leave...

[17:32] *** patrickb left
[17:32] *** sena_kun left
[17:34] <El_Che> patrickb: https://gist.github.com/nxadm/772b514ea812a8a85ee1ef8f9671dbbf

[17:34] <tellable6> El_Che, I'll pass your message to patrickb

[17:45] <lizmat> AlexDaniel: so why has github.com/perl6 not been renamed to github.com/raku yet?

[17:45] <lizmat> have I missed something ?

[17:45] <lizmat> or do we need to coordinate that better to avoid breakage?

[17:46] <El_Che> lizmat: iirc he thought it was easier moving he repos one by one

[17:46] <lizmat> ah, ok

[18:09] <Kaiepi> is there documentation somewhere on how the compiler handles signatures?

[18:09] <Kaiepi> there's a lot of code i'd need to read if there isn't

[18:26] <vrurg> Kaiepi: last year I failed to find any.

[18:29] <Kaiepi> agh

[18:30] <Kaiepi> i was hoping there would be because the slang for a typeclass library i'm working on needs to work with how signatures are represented at that point

[18:32] <vrurg> Kaiepi: If you have a signature object you can just see if it ACCEPTS a capture. Or you need something lower-level?

[18:32] *** lucasb left
[18:33] <Kaiepi> i think i might need something lower level than that

[18:33] <Kaiepi> i want to disallow parameters that are optional in any way with typeclasses

[18:40] <vrurg> I was only tangentially related to this when worked on a bug last year. But most of the related code I found in 6.c BOOTSTRAP.

[18:43] <vrurg> Maybe find_best_dispatchee on Routine would be a good example of manipulations with signature and parameters.

[19:12] <robertle> does anyone know what the story behind the libtommath is that we use for moar? it seems to be a forked version of the upstream and quite behind, yet not have significant changes from us...

[19:12] <robertle> is there a plan to catch up to a current version?

[19:30] *** sena_kun joined
[19:30] *** sena_kun left
[19:32] *** Altai-man_ left
[19:44] <moritz> has libtommath has a release yet?

[19:45] <moritz> afaict the problem was that some distros like debian don't like us fat-packaging libraries that are also in debian themselves

[19:46] <moritz> but last (to me) known state was that libtommath hasn't had a release for ages, which is why Debian didn't update

[19:46] <moritz> and maybe we wanted to avoid diverging too much from last release?

[19:48] <robertle> ok, I think I kinda understand the current state now

[19:49] <robertle> and yeah, it is totally about the non-fat-packaging in debian :)

[20:02] <vrurg> Are annotations on QAST purely informative? I'd like to pass on some info for the optimizer and they look like the thing to use.

[20:20] <AlexDaniel> lizmat: that's correct, moving repos one by one will work better (even if it sounds a bit surprising)

[20:20] <AlexDaniel> lizmat: I'll work on it after the release

[20:21] <AlexDaniel> lizmat: meanwhile you can say if you like https://github.com/rakulang or https://github.com/raku-lang more

[20:21] <AlexDaniel> I guess rakulang?

[20:21] <lizmat> yes,  as it is the same as for social media

[20:21] <El_Che> is it too early for Perl7 jokes? :)

[20:22] <lizmat> OTOH, /raku is not an option /

[20:22] <lizmat> ?

[20:22] <lizmat> El_Che: yes

[20:22] <El_Che> :)

[20:22] <lizmat> it is always too early for that

[20:22] <AlexDaniel> lizmat: there's a semi-active account, you can drop them a message and ask what they think

[20:22] <[Coke]> I have a slight preference for raku-lang

[20:23] <El_Che> [Coke]: really? I am surprised

[20:24] <El_Che> [Coke]: you ain't no UNIX programmer, mister. That's one char more for typing :)

[20:24] <El_Che> ==> rklng

[20:27] *** patrickb joined
[20:29] <AlexDaniel> fwiw it was registered as RakuLang, and it matters

[20:29] <[Coke]> I'm not much of anything any more, but approaching 50, there's something to be said for a little bit of clarity

[20:30] <AlexDaniel> it's case-insensitive but it'll default to how it was registered any time you click away

[20:31] <AlexDaniel> lizmat: but really, do drop them an email, there's a tiny chance that it'll save us some bikeshedding

[20:32] <El_Che> hehe, a new one: NQP::Config::Rakudo=HASH(0xd6c718), "Cannot determine the brand of your make utility."

[20:32] <El_Che> Already falling in love with Windows :)

[20:32] <El_Che> and whoever wrote that error message, is very polite

[20:38] <lizmat> so, how do you send a message to the owner of a repo ?

[20:39] <lizmat> AlexDaniel: ^^ ?

[20:39] <AlexDaniel> lizmat: pm

[20:42] <tbrowder> AlexDaniel: I queried travis-ci about increase in build time and just got response from a Jan Schulte, Solutions Engineer, saying they would be happy to extend the time and asked for what repos. I assume rakudo/rakudo should be the one to start with to see how it goes?

[20:44] <AlexDaniel> El_Che: â†‘

[20:44] <AlexDaniel> rba: â†‘

[20:48] <patrickb> El_Che: I at least found the error with 'bash' not found

[20:48] <tellable6> 2019-11-08T17:34:07Z #raku-dev <El_Che> patrickb: https://gist.github.com/nxadm/772b514ea812a8a85ee1ef8f9671dbbf

[20:48] <patrickb> Still no luck with reproducing the relative stuff in path problem.

[20:49] <tbrowder> I did tell them it would take up to two hours but they didn't seem to  blink. They can also increase to more powerful virtual machines but they would need to talk about options via phone call, "10 to 15 minutes." Number: +49 151 22353618 e-mail: <jan@travis-ci.com>

[20:50] <AlexDaniel> ok maybe it's not the best idea to share that publicly? :)

[20:51] <[Coke]> oof. yah, I wouldn't share my cell on public IRC, eek.

[20:55] <El_Che> tbrowder: for the rakudo-pkg repo I split everything in parallel tasks 

[20:56] <El_Che> tbrowder: however, for i386 performance is tricky and the builds often fail

[20:57] <El_Che> tbrowder: it's however not a repo in the rakudo namespace, so probably not relevant in the discussion

[20:59] <patrickb> El_Che: I pushed the fix for the 'bash' not found problem. The problem is obvious in retrospect...

[20:59] <tbrowder> sorry, i don't worry about sharing mine, so i didn't think about not sharing a business contact

[21:00] <El_Che> patrickb: oh?

[21:00] <patrickb> The script relies on $0 to contain the script call. When sourcing the script that doesn't work

[21:01] <patrickb> So I switched over to `set-env.sh` and made set-env.sh print the `export PATH=...` stuff.

[21:01] <El_Che> patrickb: I went pretty much the other way: the $0 way (https://github.com/nxadm/rakudo-pkg/blob/relocatable/docker/add-rakudo-to-path#L7)

[21:01] <El_Che> ah, interesting

[21:04] <patrickb> Yeah, that works in restricted usage scenarios as yours. Determining the script path is awefully non-trivial when done correctly. The code in that set-env.sh script is the absolute shortest I found that doesn't break in most corner cases...

[21:05] <El_Che> patrickb: can cmake used for building rakudo on Windows? It's preinstalled on travis. Or is nmake the way to go (looking at your instructions)

[21:05] <patrickb> El_Che: CMake doesn't work. That's a completely different pair of shoes.

[21:05] <patrickb> nmake is the way to go.

[21:05] <El_Che> thx, some time saved

[21:05] <patrickb> you should have nmake installed along side the vc compiler anyways...

[21:05] <El_Che> is nmake part of visual studio?

[21:06] <patrickb> yup

[21:06] <patrickb> also in the Visual Studio Build Tools for that matter.

[21:06] <El_Che> yeah, stuff is preinstalled but not easy to figure out where (running find on travis no no fun :) )

[21:06] <El_Che> https://docs.travis-ci.com/user/reference/windows/#pre-installed-chocolatey-packages

[21:08] <patrickb> El_Che: I bet your "Relative paths in PATH with set-env.sh" problem stemed from calling it like ". ./set-env.sh". It probably picked up the first "." as $0 somehow and went from there.

[21:08] <El_Che> patrickb: it makes sense, indeed

[21:08] <patrickb> Then I'll be back to tuning the download pages...

[21:09] <El_Che> patrickb: last question: any specific VS version specifically needed?

[21:09] <El_Che> is 2017 ok?

[21:10] <patrickb> El_Che: In all my tests I used latest (2019) but I think older ones should work fine too.

[21:11] <El_Che> ok thx

[21:11] <patrickb> (Fun Fact: The latest update of VS 2019 as of a week ago has a bug that makes the compiler fail during MoarVM compilation...)

[21:16] <El_Che> oh

[21:40] <El_Che> patrickb: ok, nmake added to te path, it start building. We'll see where it explodes :)

[21:41] <El_Che> You people are all anti-Windows:

[21:41] <El_Che> Cannot continue after this error.

[21:41] <El_Che> On linux, maybe you need something like 'sudo apt-get install build-essential'.

[21:41] <El_Che> On macOS, maybe you need to install XCode and accept the XCode EULA.

[21:42] <El_Che> only linux and macos tips :)

[21:48] *** travis-ci joined
[21:48] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Slightly other approach to handling "a".UInt

[21:48] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/609403050 https://github.com/rakudo/rakudo/compare/a05e169ea3f9...8f30cc76a5c8

[21:48] *** travis-ci left
[22:14] *** MasterDuke joined
[22:19] <MasterDuke> moritz: yeah, libtommath just released v1.2.0 https://github.com/libtom/libtommath/blob/v1.2.0/changes.txt. archlinux has updated its package, but ubuntu (and i assume debian) hasn't yet

[22:20] <MasterDuke> i think i tested building with a stock v1.2.0 (i.e., without trying to rebase the commits added to the fork we use in moarvm) and everything built+passed spectests

[22:21] <MasterDuke> but even though timotimo has told me how a bunch of times, i still have no confidence in my knowledge of how to make a PR for the update

[22:54] *** MasterDuke left
[22:55] <tbrowder> .ask AlexDaniel what shall i say to Jan Schulte?

[22:55] <tellable6> tbrowder, I'll pass your message to AlexDaniel

[22:55] <AlexDaniel> .

[22:56] <AlexDaniel> I don't know!

[22:56] <AlexDaniel> which is why I pinged El_Che and rba :)

[22:56] <AlexDaniel> El_Che: what do you think?

[23:01] <El_Che> AlexDaniel: It depends what you want to do on travis. Faster VMs could speedup rakudo builds after pushs, but whatever you do the builds will take some times. Also, I think I am the only one using travis for releases.

[23:02] <AlexDaniel> El_Che: do you struggle with timeouts?

[23:02] <El_Che> AlexDaniel: it's better to think hard before asking stuff, because it's better to ask what you need the first time

[23:02] <El_Che> AlexDaniel: timeouts? Only with Blin

[23:02] <El_Che> not with rakudo itself

[23:02] <AlexDaniel> hmm

[23:02] <El_Che> I have around 15 parallel jobs for a release

[23:02] <El_Che> maybe more

[23:02] * AlexDaniel shrugs and runs away

[23:03] <El_Che> 22 actually :)

[23:03] <El_Che> each job is a different distro

[23:04] *** patrickb left
[23:04] <El_Che> The problem I had with Blin is more "our fault" (the Digest module or zef): travis kills a job if it doesn't produce any output for a long time (like 10 minutes)

[23:06] <AlexDaniel> nah, I'm convinced travis is not going to make it easier to run blin in the long run

[23:06] <AlexDaniel> the ecosystem is getting bigger so we'll gradually need bigger timeouts

[23:07] <El_Che> AlexDaniel: no, not for running Blin, for creating an image

[23:07] <AlexDaniel> hmm

[23:07] <El_Che> For blin, we can get VMs

[23:07] <AlexDaniel> right

[23:07] <AlexDaniel> ok ok

[23:07] <El_Che> e.g., digitalocean sponsers a friends project

[23:07] * AlexDaniel runs away  :)

[23:09] <El_Che> (but if travis gives you a big machine without timeouts, you could run blin there :) )

[23:24] *** dogbert17 left
