[01:01] <japhb> AlexDaniel: Yes, the precomp bug is separate from the zef issue (that I worked around by using zef 0.7.4).  The precomp bug does appear to be fixed by the bump -- but now something that I expected would happen at run time appears to be happening at precomp time, so I need to figure that out.

[01:01] <japhb> AlexDaniel: It's not clear if the new behavior is a new bug, or if I had previously been depending on an old one.

[01:12] <timotimo> japhb: have you seen the new --stagestats?

[01:12] <timotimo> it's nested, so it'll show what is causing what to be precomped

[01:29] <japhb> timotimo: Ah thanks, saw that in passing but had forgotten about it

[01:30] <japhb> Let me rebuild-all with a working zef (ugexe is having me try newer versions, but I'm still getting issues), and I'll try --stagestats on my precomp problem.

[01:31] *** squashable6 left
[01:32] *** squashable6 joined
[01:42] <AlexDaniel> there we go: https://github.com/perl6/whateverable/commit/63df823cfdb058a319b7214dd48aaad51319508a

[01:42] <AlexDaniel> sorry it took so long :)

[01:43] *** tellable6 left
[01:45] *** tellable6 joined
[01:50] <Geth_> ¦ rakudo: vrurg self-assigned Dynamic variables set via PROCESS:: doesn't have .dynamic set in their container. https://github.com/rakudo/rakudo/issues/3270

[01:59] *** toddr joined
[02:00] *** AlexDaniel left
[02:01] *** toddr left
[02:16] *** Kaeipi joined
[02:18] *** redable joined
[02:18] *** Kaiepi left
[02:29] *** Kaeipi left
[02:30] *** Kaiepi joined
[02:32] *** redable left
[02:34] *** redable joined
[02:43] *** redable left
[02:45] *** AlexDaniel joined
[02:45] *** AlexDaniel left
[02:45] *** AlexDaniel joined
[03:09] *** Kaiepi left
[03:11] *** Kaiepi joined
[03:11] *** Kaiepi left
[03:12] *** Kaiepi joined
[03:17] *** Kaiepi left
[03:34] *** MasterDuke left
[05:30] *** squashable6 left
[05:32] *** squashable6 joined
[06:13] *** sena_kun joined
[06:15] *** sena_kun left
[07:03] *** japhb joined
[07:21] <ZzZombo> What is Truffle?

[08:11] *** ZzZombo_ joined
[08:14] *** ZzZombo left
[08:14] *** ZzZombo_ is now known as ZzZombo

[08:45] *** pmurias joined
[08:58] <pmurias> ZzZombo: a piece of tech which generates a JIT that can be plugged in into a JVM from an annotated interpreter written in Java

[08:59] <pmurias> ZzZombo: in a way it's an actual performant Parrot

[09:03] *** ExtraCrispy joined
[09:04] <lizmat> Files=1277, Tests=109553, 206 wallclock secs (28.52 usr  7.80 sys + 2910.31 cusr 258.78 csys = 3205.41 CPU)

[09:11] *** pmurias left
[09:12] *** ExtraCrispy left
[09:13] *** pmurias joined
[10:00] *** pmurias left
[11:13] <tbrowder> AlexDaniel: since release seems not so imminent, how do you feel about merging my two PRs? each is a single commit and should be easily reversible, and each was fully spec tested.

[11:59] *** pmurias joined
[12:05] *** redable joined
[12:33] *** sena_kun joined
[12:37] <nine> releasable6: status

[12:37] <releasable6> nine, Next release will happen when it's ready. 2 blockers. 7 out of 450 commits logged (⚠ 9 warnings)

[12:37] <releasable6> nine, Details: https://gist.github.com/3c70e7cfb537866d0f6b5af1fecaa5d6

[12:44] <nine> If we ever want to get a release out, we really need to focus on blockers and regression fixes. If we do that and get back to timely and frequent releases, it won't matter as much anymore when valuable improvements like tbrowder's have to wait for next month's release.

[12:47] *** ggoebel joined
[12:52] <Geth_> ¦ nqp/truffle: 5352e59145 | (Paweł Murias)++ | src/vm/jvm/Truffle.nqp

[12:52] <Geth_> ¦ nqp/truffle: [truffle] Implement ++$var and --$var (nqp::preinc and nqp::predec)

[12:52] <Geth_> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/5352e59145

[12:52] <Geth_> ¦ nqp/truffle: 6eecd1691b | (Paweł Murias)++ | t/nqp/013-op.t

[12:52] <Geth_> ¦ nqp/truffle: Test ++$var and --$var

[12:52] <Geth_> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/6eecd1691b

[12:57] *** Altai-man_ joined
[12:59] *** sena_kun left
[13:06] <Geth_> ¦ nqp/truffle: acafae770f | (Paweł Murias)++ | 2 files

[13:06] <Geth_> ¦ nqp/truffle: [truffle] Add a partial and slow nqp::bindattr

[13:06] <Geth_> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/acafae770f

[13:10] <pmurias> .tell MasterDuke current the point example is *slower* on truffle then on the original backend, but they way method call/attribute access is implemented is so *unoptimal* we are getting warnings from truffle that things are amiss

[13:10] <tellable6> pmurias, I'll pass your message to MasterDuke

[13:14] *** redable left
[13:34] *** lucasb joined
[13:47] <tbrowder> nine: thanks. i'm not trying to be pushy, it just seems that the blockers are too tough to solve any time soon. i am happy to help any way i can, but i'm afraid all i can do is be a cheer-leader.

[13:48] <tbrowder> if i can help with testing i will, just let me know.

[13:56] *** redable joined
[14:12] *** Kaiepi joined
[14:14] <rba> Answering now are: https://design.raku.org/ (no auto-update ask rba) https://docs.raku.org/ (without content yet; asked jjmerelo) https://marketing.raku.org/ (share hypnotoad with marketing.perl6.org)  https://modules.raku.org/ (share hypnotoad with modules.perl6.org) and since last Saturday https://raku.org

[14:15] <rba> If you find any dead link, you may try to fix it in the repo the website is based on, or just let me know.

[14:17] *** redable left
[14:25] <pmurias> .tell MasterDuke I'll work on replacing our method call implementation with something that's optimizable by truffle

[14:25] <tellable6> pmurias, I'll pass your message to MasterDuke

[14:37] <pmurias> the stable of a type object never changes?

[14:40] <AlexDaniel> .seen Xliff

[14:40] <tellable6> AlexDaniel, I saw Xliff 2019-10-25T06:53:50Z in #raku-dev: <Xliff> o/

[14:55] *** Kaiepi left
[14:59] *** Altai-man_ left
[15:03] *** Kaiepi joined
[15:29] *** Kaiepi left
[15:38] *** Kaiepi joined
[15:45] <AlexDaniel> nine: I'm currently benchmarking https://github.com/rakudo/rakudo/issues/3268

[15:45] <AlexDaniel> it will take some time to confirm it and bisect it afterwards…

[15:47] <dogbert17> AlexDaniel: I have pushed a PR which should fix M#1208

[15:47] <AlexDaniel> I see it, yes

[15:50] <AlexDaniel> dogbert17: why not use orig_utf8 instead?

[15:51] <AlexDaniel> the code looks convoluted and extra juggling with variables doesn't really help

[15:52] <AlexDaniel> dogbert17: I mean orig_utf8[error_pos - 2] and such

[15:52] <dogbert17> well either changing ~10 lines or one. I could have done it either way though.

[15:53] <dogbert17> there's indeed quite a bit of juggling in that code :)

[15:53] <AlexDaniel> you mean 3 lines vs 1

[15:53] <AlexDaniel> but it'll read much better

[15:54] <AlexDaniel> I mean, reading it will be slightly easier if orig_utf8 is used, I guess that's what was meant anyway

[15:54] *** |Tux| joined
[15:55] * AlexDaniel squints

[15:55] <dogbert17> can I git amend the change as long as it hasn't been merged?

[15:55] <AlexDaniel> dogbert17: yep

[15:56] <AlexDaniel> dogbert17: what's the logic behind `if (error_pos >= 3) {` ? I don't get it

[15:58] *** |Tux| left
[15:58] <AlexDaniel> dogbert17: ah it was merged :)

[15:58] <nine> oops...I just merged it

[15:58] <dogbert17> nine++

[15:58] *** |Tux| joined
[15:58] <nine> dogbert17: FWIW now that I've read your commit message, the error is also quite obvious :) Didn't see it the first time I had a look

[15:59] <dogbert17> gdb FTW

[15:59] <AlexDaniel> nine: ok then maybe you can tell me what's `if (error_pos >= 3) {`

[16:00] *** |Tux| left
[16:00] <AlexDaniel> there are 4 different error messages just for the first 4 characters in the string?

[16:00] <AlexDaniel> or what am I missing?

[16:00] *** |Tux| joined
[16:01] <dogbert17> AlexDaniel: you're squinting too hard :)

[16:04] <dogbert17> the way I interpret it is that the code want to print the first erroneous byte and a couple a bytes preceeding it. Depending on where in the sting the error the number of bytes which can be printed out differs

[16:04] <AlexDaniel> also the whole idea of parsing the string again just to get the line number is uhhh… I don't know… I guess it's faster this way for strings that are not malformed? Is it though?

[16:04] <dogbert17> *Depending on where in the sting the error occurs

[16:05] <dogbert17> haha, my spelling is atrocious

[16:05] <AlexDaniel> dogbert17: so 3 different error messages for the first 3 codepoints

[16:05] <dogbert17> I would say so yes

[16:07] <dogbert17> releasable: next

[16:07] <releasable6> dogbert17, Next release will happen when it's ready. 1 blocker. 7 out of 450 commits logged (⚠ 9 warnings)

[16:07] <releasable6> dogbert17, Details: https://gist.github.com/2a2a41f80717b486252a9f5a42f5b9b6

[16:08] <dogbert17> there's hope, only one blocker left

[16:08] <nine> yes

[16:09] <AlexDaniel> and I'm testing it right now

[16:09] <dogbert17> should be a pretty stable release methinks

[16:09] <nine> And samcv++ optimized UTF-8 decoding a lot and some decisions were based on helping the compiler with autovectoring the code. Pessimising the error case sounds entirely sensible

[16:09] <AlexDaniel> yep it'll be awesome

[16:10] <dogbert17> AlexDaniel: how are the bots running nowadays, are they stable?

[16:10] <AlexDaniel> yep no problems at all

[16:10] <dogbert17> and gumbo works as well

[16:10] <AlexDaniel> yep

[16:10] <dogbert17> yay

[16:10] <AlexDaniel> ok, the more I look at that code, the more I don't get it

[16:11] <dogbert17> the decoding stuff?

[16:12] *** pmurias left
[16:15] <AlexDaniel> ah, nevermind, was squinting too hard indeed :)

[16:20] <AlexDaniel> dogbert17: anyway :) https://github.com/MoarVM/MoarVM/commit/48491b89697827e29524b7ea581bad9c57ac0877

[16:21] <dogbert17> AlexDaniel++

[16:21] <Geth_> ¦ nqp: 780616f4eb | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/MOAR_REVISION

[16:21] <Geth_> ¦ nqp: [MoarVM Bump] Brings 3 commits

[16:21] <Geth_> ¦ nqp: 

[16:21] <Geth_> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2019.07.1-306-g0b531f9ce...2019.07.1-309-g48491b896

[16:21] <Geth_> ¦ nqp: 48491b896 Make ut8_decode code just a bit easier to understand

[16:21] <Geth_> ¦ nqp: aba68e41e Merge pull request #1210 from dogbert17/fix-m-1208

[16:21] <Geth_> ¦ nqp: da19661e8 Reset utf8 pointer to point at original string before using

[16:21] <Geth_> ¦ nqp: review: https://github.com/perl6/nqp/commit/780616f4eb

[16:21] <Geth_> ¦ rakudo: 9f433da0d6 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/NQP_REVISION

[16:21] <Geth_> ¦ rakudo: [NQP Bump] 780616f4e [MoarVM Bump] Brings 3 co […]

[16:21] <Geth_> ¦ rakudo: 

[16:21] <Geth_> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2019.07.1-157-g40ffec819...2019.07.1-158-g780616f4e

[16:21] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9f433da0d6

[16:21] <AlexDaniel> *utf8* code, of course, dammit :)

[16:21] <AlexDaniel> dogbert17: spelling :D

[16:22] <dogbert17> sometimes your keyboard works against you :)

[16:25] <AlexDaniel> nine: I have not seen latest blin results, btw :S

[16:25] <AlexDaniel> it should be absolutely clean given the output before that, but hmm

[16:25] <AlexDaniel> kawaii: ping? :)

[16:39] *** Kaiepi left
[16:42] *** Kaiepi joined
[16:50] *** rba[m] joined
[17:04] *** MasterDuke joined
[17:22] *** patrickb joined
[17:24] *** vrurg left
[17:38] *** cognomin_ joined
[17:41] <patrickb> When was the last rakudo release?

[17:42] <patrickb> releasable spits out commits from as far back as may...

[17:43] *** cognominal left
[17:44] <AlexDaniel> patrickb: they were not part of the release then

[17:44] <AlexDaniel> patrickb: 2019.07.1 was the last one

[17:44] <timotimo> long-lived branches could be a cause of that

[17:45] <AlexDaniel> and you can make a commit with any date, really :)

[17:45] <timotimo> that's also true

[17:46] <timotimo> you can even get a commit hash based on your wishes

[17:46] <timotimo> takes a bit of number crunching of course

[17:46] <patrickb> long lived branches it is I guess. I never faked history in such a way...

[17:47] <AlexDaniel> well, git history is the only true history :)

[17:52] *** b2gills left
[17:56] *** b2gills joined
[17:58] <AlexDaniel> ta-daaa

[17:58] <AlexDaniel> https://github.com/rakudo/rakudo/issues/3268#issuecomment-547071572

[17:58] <AlexDaniel> releasable6: status

[17:58] <releasable6> AlexDaniel, Next release will happen when it's ready. There are no known blockers. 7 out of 451 commits logged (⚠ 9 warnings)

[17:58] <releasable6> AlexDaniel, Details: https://gist.github.com/d11fb9a9186d9a2dd4fe269bde7e7328

[18:08] <patrickb> I have just logged all of my commits

[18:53] *** Kaiepi left
[18:54] *** Kaiepi joined
[18:59] <MasterDuke> .

[18:59] <tellable6> 2019-10-28T14:25:43Z #raku-dev <pmurias> MasterDuke I'll work on replacing our method call implementation with something that's optimizable by truffle

[18:59] <tellable6> hey MasterDuke, you have a message: https://gist.github.com/05452c25906e3c7d4266599bb21aa99f

[19:02] <AlexDaniel> patrickb: niiice! Thank you

[19:02] <MasterDuke> pmurias: cool. fwiw it's not *too* much slower on my machine. for 10000000, just got 13s with regular jvm backend and 19s for truffle (but yeah, lots of complaints)

[19:02] <AlexDaniel> patrickb: thoughts on making a raku symlink?

[19:02] <tellable6> MasterDuke, I'll pass your message to pmurias

[19:05] <MasterDuke> pmurias: oh, that was without the custom new(). with that the regular jvm backend was 3.5s and truffle was 5.7s

[19:05] <tellable6> MasterDuke, I'll pass your message to pmurias

[19:05] <patrickb> AlexDaniel: Can you elaborate?

[19:06] <AlexDaniel> patrickb: currently we create a bunch of perl6-* binaries, but people want to have `raku` in their shebang and use `raku` on the command line

[19:06] <AlexDaniel> patrickb: I guess ideally we would like to only generate raku-* binaries in the far future. But right now, should we create a symlink?

[19:07] <patrickb> I think there was some talking of actually only having a rakudo binary and making raku und perl6 only symlinks

[19:07] <patrickb> *and

[19:08] <AlexDaniel> right

[19:09] <patrickb> I dunno if we want to go down that route.

[19:09] <patrickb> Given symlinks are not a thing on all platforms we want to serve, we might need to copy on some.

[19:10] <patrickb> I guess the difficult question is not how to do this from a technical perspective.

[19:10] <patrickb> It's rather how we want to have it.

[19:10] <patrickb> rakudo binary + perl6 symlink + raku symlink?

[19:10] <patrickb> raku binary + perl6 symlink?

[19:11] <MasterDuke> what platform doesn't support symlinks?

[19:12] <patrickb> MasterDuke: I'm not sure about what side effects symlinks have on Windows.

[19:13] <patrickb> Also I have no information about the more obscure OSes like AIX

[19:14] <AlexDaniel> “Now in Windows 10 Creators Update, a user (with admin rights) can first enable Developer Mode, and then any user on the machine can run the mklink command without elevating a command-line console.

[19:14] <AlexDaniel>  

[19:14] <AlexDaniel> What drove this change? The availability and use of symlinks is a big deal to modern developers”

[19:14] <patrickb> On linux it's a common thing to just symlink executables. I have rarely seen this on Windows. Of course there are plenty of those on your desktop, but can one actually execute them?

[19:15] <MasterDuke> pretty sure you can

[19:15] <MasterDuke> (but also don't have a windows system to test that with)

[19:15] <AlexDaniel> I guess you can but that's relatively new

[19:15] <patrickb> are we talking about the same thing? I'm talking about *.lnk files

[19:16] <patrickb> they even have the wrong suffix! :-(

[19:16] <AlexDaniel> patrickb: it feels like these are different

[19:17] <AlexDaniel> but last windows I actually used was XP

[19:17] * patrickb reboots into a Windows.

[19:17] <MasterDuke> yeah, pretty sure windows does also have real symlinks

[19:18] *** patrickb left
[19:18] <MasterDuke> but i won't bet huge amounts on that assertion

[19:28] *** patrickb joined
[19:29] *** robertle joined
[19:51] *** patrickb left
[20:14] *** patrickb joined
[20:27] <nine> .lnk files are more akin to .desktop files. The application needs to understand them. Windows has supported symlinks for decades but only on NTFS. They are transparent to applications but have (had) quite a few restrictions

[20:31] <patrickb> Is it possible to include a CompRepo folder using -I ?

[20:39] *** patrickb left
[20:40] *** Kaiepi left
[20:41] *** Kaiepi joined
[20:49] <lizmat> And yet another Rakudo Weekly hits the Net: https://rakudoweekly.blog/2019/10/28/2019-43-performance-toaling/

[20:53] *** patrickb joined
[20:54] <lizmat> notable6: weekly

[20:54] <notable6> lizmat, 4 notes: https://gist.github.com/b6fc89d24cc7036be614a9ccd362dc25

[20:55] *** samcv left
[20:59] <lizmat> notable6: weekly reset

[20:59] <notable6> lizmat, Moved existing notes to “weekly_2019-10-28T20:59:26Z”

[21:00] *** samcv joined
[21:04] *** pmurias joined
[21:37] *** samcv left
[21:44] <pmurias> MasterDuke: it's not that much slower on machine, but we want the truffle backend to be *faster* ;)

[21:44] <tellable6> 2019-10-28T19:02:54Z #raku-dev <MasterDuke> pmurias: cool. fwiw it's not *too* much slower on my machine. for 10000000, just got 13s with regular jvm backend and 19s for truffle (but yeah, lots of complaints)

[21:44] <tellable6> 2019-10-28T19:05:12Z #raku-dev <MasterDuke> pmurias: oh, that was without the custom new(). with that the regular jvm backend was 3.5s and truffle was 5.7s

[21:45] *** ggoebel left
[22:11] *** pmurias left
[22:13] *** pmurias joined
[22:40] *** samcv_ joined
[22:43] <AlexDaniel> samcv_: so there's nothing preventing a moar release currently, I'm still waiting for Blin results but I'm relatively sure it's going to be clean

[22:45] <japhb> lizmat: I can't tell if there's a pun I don't get, but shouldn't the last word of the weekly title be 'Tooling' rather than 'Toaling'?

[23:18] <MasterDuke> pmurias: heh, yeah, i certainly hope it gets faster. i was looking at that pdf you linked recently. it has a bunch of stuff about optimization and how/when/where/what, but i couldn't really tell what was applicable (or how)

[23:29] <samcv_> AlexDaniel, roger

[23:31] *** patrickb left
[23:55] <Geth_> ¦ nqp/truffle: c01384a028 | (Daniel Green)++ | src/vm/jvm/runtime/org/perl6/nqp/truffle/io/StandardReadHandle.java

[23:55] <Geth_> ¦ nqp/truffle: [truffle] Remove unused import

[23:55] <Geth_> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/c01384a028

