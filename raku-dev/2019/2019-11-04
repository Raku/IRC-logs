[00:02] *** sena_kun left
[00:28] <AlexDaniel> jnthn: speaking of operators, what we do actually need is an op that checks for Nil before calling a method

[00:28] <AlexDaniel> I think in Ruby that's &.

[00:29] <AlexDaniel> for example:

[00:30] <AlexDaniel> die ‚ÄòNo joystick device found!‚Äô unless $input-device&.IO.e

[00:30] <AlexDaniel> if you know how to write that right now without `and` please let me know :)

[00:30] <AlexDaniel> because I have this kind of stuff all over my code

[00:31] <AlexDaniel> actually, in this case .? sorta works?

[00:32] <AlexDaniel> m: say Nil.IO

[00:32] <camelia> rakudo-moar 7e7aa2626: OUTPUT: ¬´(Path)‚ê§¬ª

[00:32] <AlexDaniel> m: say Nil.?IO

[00:32] <camelia> rakudo-moar 7e7aa2626: OUTPUT: ¬´(Path)‚ê§¬ª

[00:33] <AlexDaniel> m: say Nil.?IO.e

[00:33] <camelia> rakudo-moar 7e7aa2626: OUTPUT: ¬´Invocant of method 'e' must be an object instance of type 'IO::Path', not a type object of type 'IO::Path'.  Did you forget a '.new'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[00:33] <AlexDaniel> ok, it sorta doesn't

[01:24] <vrurg> AlexDaniel: sounds like you need 'invoke if defined' kind of thing.

[01:28] <vrurg> AlexDaniel: There is an op for you. It's called andthen.

[01:28] <vrurg> m: my $foo; die "ok" unless $foo andthen .IO.e;

[01:28] <camelia> rakudo-moar 7e7aa2626: OUTPUT: ¬´ok‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:29] <vrurg> m: my $foo = "no-file"; die "ok" unless $foo andthen .IO.e;

[01:29] <camelia> rakudo-moar 7e7aa2626: OUTPUT: ¬´ok‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:29] <AlexDaniel> oh

[01:30] <vrurg> It's the first time I see a real use for it.

[01:35] <AlexDaniel> so

[01:35] <AlexDaniel> die ‚ÄòNo joystick device found!‚Äô unless $input-device andthen .IO.e;

[01:36] <vrurg> I think it is.

[01:39] <AlexDaniel> geez that's a weird operator :D

[01:39] <AlexDaniel> but I honestly didn't realize that I could use it this way

[01:39] <AlexDaniel> alright

[01:41] <vrurg> I think there was a discussion about removing it somewhere. Or was it about `notandthen`? Can't really remember now.

[01:44] <vrurg> AlexDaniel: BTW, an example in the docs is about your situation: https://docs.perl6.org/language/operators#infix_notandthen

[01:47] <AlexDaniel> ‚ÄúAt first glance, notandthen might appear to be the same thing as the orelse operator. The difference is subtle‚Äù

[01:47] <AlexDaniel> yeah, I remember reading this

[01:47] <AlexDaniel> and then not using any of these :D

[01:49] <vrurg> Me too. Though I probably spend ~60-70% or my time in NQP lately...

[01:55] <AlexDaniel> sounds like you're not using raku in production enough!

[01:55] <AlexDaniel> :)

[02:01] <vrurg> It is how things are now.

[02:03] <vrurg> I've some spare time on my hands and trying to use as much of it as possible for bug fixing.

[02:03] <vrurg> *I've got

[02:05] <vrurg> Hm, is there a dumper for moar precompiled files?

[02:15] <AlexDaniel> vrurg++

[03:00] <Geth> ¬¶ problem-solving: 7af1dfc3f9 | (Fernando Correa de Oliveira)++ (committed by Aleks-Daniel Jakimenko-Aleksejev) | README.md

[03:00] <Geth> ¬¶ problem-solving: Add my name to the list

[03:00] <Geth> ¬¶ problem-solving: review: https://github.com/perl6/problem-solving/commit/7af1dfc3f9

[03:00] <Geth> ¬¶ problem-solving: 5e9d288a3b | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | README.md

[03:00] <Geth> ¬¶ problem-solving: Merge pull request #84 from perl6/merge-mishap

[03:00] <Geth> ¬¶ problem-solving: 

[03:00] <Geth> ¬¶ problem-solving: Add FCO to the list

[03:00] <Geth> ¬¶ problem-solving: review: https://github.com/perl6/problem-solving/commit/5e9d288a3b

[03:01] <Geth> ¬¶ problem-solving/master: 4 commits pushed by (Vadim Belman)++, (Aleks-Daniel Jakimenko-Aleksejev)++

[03:01] <Geth> ¬¶ problem-solving/master: 6a1a9d9086 | Add vrurg to the list

[03:01] <Geth> ¬¶ problem-solving/master: 3b70d4006b | Remove myself from label-assignment

[03:01] <Geth> ¬¶ problem-solving/master: 0b9098d3e6 | Merge branch 'master' into add_vrurg

[03:01] <Geth> ¬¶ problem-solving/master: 6d0c078ea0 | Merge pull request #87 from vrurg/add_vrurg

[03:01] <Geth> ¬¶ problem-solving/master: review: https://github.com/perl6/problem-solving/compare/5e9d288a3bdd...6d0c078ea04d

[03:05] <vrurg> AlexDaniel: it means less time for the bugs now.

[03:06] <AlexDaniel> weekly: Welcome @FCO and @vrurg to the list of problem-solving reviewers! https://github.com/perl6/problem-solving/pull/84 https://github.com/perl6/problem-solving/pull/87

[03:06] <notable6> AlexDaniel, Noted! (weekly)

[03:06] <AlexDaniel> SmokeMachine: ‚Üë

[03:06] <AlexDaniel> :)

[03:06] <AlexDaniel> vrurg: what do you mean?

[03:07] <vrurg> I guess, roast and language release process are my direct responsibility now.

[03:09] <AlexDaniel> vrurg: well, being on that list simply means that you need to review stuff‚Ä¶ you can still send everyone to jnthn :D

[03:10] <AlexDaniel> not how it should be, but I guess things will improve as more people get involved with stuff :)

[03:10] <vrurg> AlexDaniel: I applied for the reason to take over the language release management. Thus, I consider it my duty now.

[03:11] <AlexDaniel> vrurg: yeah, but we haven't added a new label yet https://github.com/perl6/problem-solving/pull/87#issuecomment-541940054

[03:12] <AlexDaniel> so tickets will still be assigned to jnthn by default

[03:12] <AlexDaniel> I guess jnthn will reassign anything that belongs to you?

[03:13] <vrurg> The label is one part of the overall process. I would need to think of it in general. Like, I tried to implement a project management on my fork of problem-solving.

[03:14] <AlexDaniel> nice!

[03:14] <vrurg> It's up to jnthn, of course. 

[03:14] <AlexDaniel> speaking of time, I won't have any this week :(

[03:15] <AlexDaniel> like, at all

[03:15] <AlexDaniel> there are release braches in nqp and rakudo, so once moarvm is released nobody should feel blocked by lack of release

[03:15] <vrurg> Something good, I hope?

[03:16] <AlexDaniel> vrurg: no, just w√∂rk (ish), but generally life is good :)

[03:17] <AlexDaniel> btw if anyone is interested, previously I said that I'll have to do alternative service in my country starting Jan 2020

[03:17] <AlexDaniel> but that's no longer the case!

[03:17] <AlexDaniel> I'm now free till at least Nov 2020, and a bit more after that, and possibly forever

[03:17] <vrurg> Oh, unblocking merges! Eventually! BTW, will you have time for commenting on issues/PRs? I hope to get jnthn a bit more involved into the operators discussion. Your opposition could be useful.

[03:18] <AlexDaniel> hah, useful opposition :)

[03:18] <AlexDaniel> vrurg: I'll try. Thing is, we already have .+ and .?, which I didn't really know about

[03:18] <vrurg> It is always useful. Total consensus is the direct path to swamping death. Prooved by USSR.

[03:18] <AlexDaniel> like I knew about .? but kinda forgot about .+

[03:19] <AlexDaniel> vrurg: some time ago Zoffix proposed this idea that whenever you add a new feature you have to remove one too :)

[03:19] <AlexDaniel> which is a bit extreme, but it's true that currently we're only adding and not removing anything

[03:19] <vrurg> I was saying it once, .+ is pretty much useless without fully implemented submethods. It would have more reasons to be used with my PR.

[03:20] <vrurg> Oh, the new ops make .* obsolete. I would gladly remove it.

[03:20] <vrurg> Can I do it tomorrow??? Pleeeeeaseeee?! :D

[03:21] <AlexDaniel> and somehow lately I really want to just delete and simplify stuff‚Ä¶

[03:22] <AlexDaniel> ‚ÄúRaku‚Äù change is very refreshing :)

[03:23] <AlexDaniel> no need for no-break space nonsense, no need to explain the name to others

[03:23] <timotimo> well rak u too

[03:23] <timotimo> <3

[03:23] <AlexDaniel> :)

[03:25] <vrurg> And here we go, people started kidding on the new name. OMG... :D

[03:26] <AlexDaniel> vrurg: btw notandthen is the first item here: https://github.com/perl6/problem-solving/issues/64

[03:27] <vrurg> AlexDaniel: aha, and there too. 

[03:29] <vrurg> Oh, and roast rename... Though I would leave it as is. rakus-spec sounds cumbersome.

[03:29] <AlexDaniel> vrurg: once I have a bit more time in a week I'll start figuring out what to do with the github org

[03:30] <AlexDaniel> vrurg: but if we're moving perl6/roast to rakulang or, then I'd much rather move it to something better like rakulang/spec

[03:30] <AlexDaniel> vrurg: even if it remains being ‚Äúroast‚Äù

[03:31] <AlexDaniel> ‚Ä¶ or should it be /raku-spec ? ok now I don't know :)

[03:31] <vrurg> AlexDaniel: it'd be confusing to people then. Project name better be consistent to the repo

[03:31] <vrurg> Just 'spec' is no good. 

[03:32] <AlexDaniel> vrurg: it doesn't even mention ‚Äúroast‚Äù anywhere in the readme

[03:33] <AlexDaniel> so I don't think it'll be more confusing than it is now :)

[03:33] <vrurg> It's in announces and release-guide. Not to mention unicode-generated-tests and New-Release-Policy

[03:33] <AlexDaniel> mmm that's true

[03:34] <AlexDaniel> anyway, I'm not sure, but point is that if repos are moving we can as well consistify and make them better

[03:34] <AlexDaniel> for example, that is *definitely* moving to something with a different name: https://github.com/perl6/specs/

[03:35] <AlexDaniel> this, I mean

[03:35] <AlexDaniel> ‚Äúand the "specs" in the repository name of the design documents tends to mean "speculations" now‚Äù

[03:36] <AlexDaniel> mental gymnastics instead of fixing the issue :)

[03:36] <vrurg> That repo is likely to become something like 'historical-docs'

[03:37] <vrurg> They still serve a good source of design resoning. I use them to find out why something was implemented this or that way.

[03:37] <AlexDaniel> old-design-docs ? :)

[03:38] <vrurg> Anyway, we could expand ROAST abbreviation to something more meaningful. 'R' will stand for Raku, apparently. 

[03:38] <vrurg> AlexDaniel: either 'original-design-docs' or 'historical-design-docs'

[03:39] <AlexDaniel> we'll figure it out

[03:40] <vrurg> ROAST: Raku Official ... Set of Tests? :)

[03:42] <vrurg> Anyway, it was once proposed to reconsider roast structure because basing it on SNN is really confusing for people not historically involved (it took me half a year to realize the link between the old specs and directories).

[03:42] <AlexDaniel> yeah, it is confusing

[03:43] * vrurg added an item on my Roast TODO list

[03:46] <AlexDaniel> you mean RakuSpec TODO list

[03:46] <AlexDaniel> :D

[03:47] <AlexDaniel> ok just kidding :)

[03:47] <vrurg> Back to the label thing... 6e-release label would be needed, as well as labels for any future language versions.

[03:47] <vrurg> Oh, let's bikeshed! Such a fun! :D :D :D

[03:49] <AlexDaniel> vrurg: speaking of bikeshedding, my proposal is to have 6.e mean just e

[03:49] <AlexDaniel> vrurg: last time there was a very long discussion on what D is going to be

[03:50] <vrurg> AlexDaniel: I basically like it. But technically... We have too many changes related to the renaming to introduce another one without extra need.

[03:51] <vrurg> I'd use `Raku E` in papers and media. But stick to `use v6.e` until the next release, perhaps.

[03:51] <vrurg> We could even consider switching to all-numeric versioning, but that would likely mean jumping over to 7.x

[03:53] <vrurg> But, again, not before 6.e. 

[03:57] <AlexDaniel> yeah, that's ok

[03:58] <AlexDaniel> I think Raku 6.e is more correct in media, even if it does contain a little bit of Perl¬†6 in it

[04:04] <vrurg> A problem-solving would be needed on this around this Jan/Feb, after we sort out most of the renaming problems.

[04:05] <vrurg> And people need to cool down because it could turn into another round of hot discussions.

[04:09] * vrurg is afk&

[06:10] *** jmerelo joined
[06:28] *** sena_kun joined
[07:18] *** sena_kun left
[07:33] *** jmerelo left
[07:57] *** ufobat joined
[08:40] *** sena_kun joined
[09:08] *** sena_kun left
[09:28] *** maettu joined
[10:20] *** sena_kun joined
[10:29] <|Tux|> Rakudo version 2019.07.1-454-g7e7aa2626 - MoarVM version 2019.07.1-313-g836396c74

[10:29] <|Tux|> csv-test-xs-20      0.429 -  0.439

[10:29] <|Tux|> csv-ip5xs           0.707 -  0.765

[10:29] <|Tux|> test-t --race       0.850 -  0.908

[10:29] <|Tux|> test-t              1.747 -  1.767

[10:29] <|Tux|> test                5.954 -  6.211

[10:29] <|Tux|> csv-ip5xs-20        6.329 -  6.366

[10:29] <|Tux|> test-t-20 --race    9.047 -  9.371

[10:29] <|Tux|> csv-parser         21.450 - 21.638

[10:29] <|Tux|> test-t-20          27.157 - 29.223

[10:50] *** Guest13443 joined
[11:43] *** Altai-man_ joined
[11:45] *** sena_kun left
[11:55] *** ggoebel joined
[12:03] *** |Tux| joined
[13:12] <Geth> ¬¶ Blin: nxadm++ created pull request #14: Merge nxadm/raku-blin-docker

[13:12] <Geth> ¬¶ Blin: review: https://github.com/perl6/Blin/pull/14

[13:31] <tbrowder> Speaking of hot discussions: I really don't want to rename roast stuff away from the current SNN. Having trouble knowing the meaning is rectified with more questioning and docs. The synopses are too valuable to hide away under yet another layer of indirection. we don't have enough documentation for new developers as it is, renaming to confuse current folks doesn't help the cause IMHO.

[13:44] *** sena_kun joined
[13:46] *** Altai-man_ left
[14:15] <Geth> ¬¶ Blin: nxadm++ created pull request #15: migration from nxadm/raku-blin-docker

[14:15] <Geth> ¬¶ Blin: review: https://github.com/perl6/Blin/pull/15

[14:34] *** lucasb joined
[14:36] *** ggoebel left
[15:27] <tbrowder> One more comment ref roast and SNN "speculations": there are still NYI design features listed in them, at least in S26 (Documentation), so there is still Perl-covered gold there that hasn't been fully mined.

[15:34] <vrurg> tbrowder: making them 'historical' doesn't mean they won't be a good source of information. 

[15:38] <tbrowder> i know, but, to me, using the term "speculations" for the original design docs has always had a bad connotation that might give new folks the wrong idea of them.

[15:44] *** Altai-man_ joined
[15:45] *** sena_kun left
[15:46] *** ggoebel joined
[15:49] *** Altai-man_ is now known as sena_kun

[15:52] <tbrowder> AlexDaniel: i got some info from git folks on upcoming integrated CI testing with git actions that you've probably seen <https://github.com/features/actions>. they are taking sign-ups for beta testing. 2000 free minutes/month for open source, excess minutes over 2000 per month for linux, win, mac, respectively: $0.008, $0.016, $0.08. 

[15:56] <tbrowder> the beta requires agreeing to an NDA (non-disclosure agreement). the link also mentions free overtime for self hosting (coming soon, no mention of cost).

[16:06] <tbrowder> checking travis...

[16:21] <Geth> ¬¶ nqp/truffle: fb8237944d | (Pawe≈Ç Murias)++ | src/vm/jvm/Truffle.nqp

[16:21] <Geth> ¬¶ nqp/truffle: [truffle] Remove the unusued :side_effects argument when adding nodes

[16:21] <Geth> ¬¶ nqp/truffle: 

[16:21] <Geth> ¬¶ nqp/truffle: We are not using this when emitting AST for the truffle backend

[16:21] <Geth> ¬¶ nqp/truffle: review: https://github.com/perl6/nqp/commit/fb8237944d

[16:21] <Geth> ¬¶ nqp/truffle: 0dc156cc02 | (Pawe≈Ç Murias)++ | 2 files

[16:21] <Geth> ¬¶ nqp/truffle: [truffle] Implement nqp::setmethcache

[16:21] <Geth> ¬¶ nqp/truffle: review: https://github.com/perl6/nqp/commit/0dc156cc02

[16:24] *** moon_child left
[16:30] *** moon-child joined
[16:32] *** moon-child left
[16:32] *** moon-child joined
[16:34] *** Kaiepi joined
[16:35] *** Kaiepi left
[16:35] *** Kaeipi joined
[16:39] *** Merfont joined
[16:40] *** Kaeipi left
[17:06] <El_Che> tbrowder: I am in the beta, but I haven't tested yet. Spent quite some time getting to learn Travis. However, travis has been quite flakey lately

[17:09] <El_Che> AlexDaniel: I sent a PR with the Docker changes to Blin

[17:32] *** cognominal joined
[17:43] *** Altai-man_ joined
[17:45] *** sena_kun left
[18:16] *** Merfont is now known as Kaiepi

[18:17] <Kaiepi> when i need to use an array with REPR VMArray, is there a class that already exists that i can use or do i need to make my own?

[18:19] <Kaiepi> this is for something in src/core.c, so i'm not sure if NQPArray can be used or not 

[18:25] <vrurg> Kaiepi: grep comes back with class array from native_array.pm6

[18:27] <Kaiepi> idt that can be used without being parameterized, and it doesn't let me parameterize it with Mu

[18:28] <Kaiepi> there's IterationBuffer though, is that meant to be used in cases like this?

[18:29] <vrurg> I think the starting comment in IterationBuffer could provide you with more information than I can.

[18:32] <Kaiepi> looks like it'll work for this

[18:32] <Kaiepi> thanks

[18:49] <AlexDaniel> El_Che: I did approve your request to use travis

[18:52] <AlexDaniel> El_Che: btw it could've been a merge of two repos (with two separate starting commits)

[18:53] <AlexDaniel> El_Che: though there's probably no good reason for doing it that way besides ‚Äúbecause we can‚Äù :D

[18:54] <Geth> ¬¶ Blin: 0d09f2eb11 | (Claudio Ramirez)++ | 9 files

[18:54] <Geth> ¬¶ Blin: migration from nxadm/raku-blin-docker

[18:54] <Geth> ¬¶ Blin: review: https://github.com/perl6/Blin/commit/0d09f2eb11

[18:54] <Geth> ¬¶ Blin: 0b12bc0b33 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | 9 files

[18:54] <Geth> ¬¶ Blin: Merge pull request #15 from nxadm/master

[18:54] <Geth> ¬¶ Blin: 

[18:54] <Geth> ¬¶ Blin: migration from nxadm/raku-blin-docker

[18:54] <Geth> ¬¶ Blin: review: https://github.com/perl6/Blin/commit/0b12bc0b33

[19:03] <El_Che> AlexDaniel: no, the travis thing was intentional :)

[19:04] <AlexDaniel> right? That's why I approved it? :)

[19:09] *** jmerelo joined
[19:12] <El_Che> AlexDaniel: master pushes will end in docker hub with :latest, version tags (eg, v1.0.1) will end up as :version (e.g. :1.0.1)

[19:13] <El_Che> Sometimes the travis build fails because the Digest module is more than 10 minutes without output

[19:13] <El_Che> Not always, though

[19:14] <El_Che> I added --verbose to zef, and it helped somewhat, but maybe we need to go for --debug

[19:23] <Geth> ¬¶ rakudo/ugexe-patch-1: 2c5c013558 | (Nick Logan)++ (committed using GitHub Web editor) | .github/FUNDING.yml

[19:23] <Geth> ¬¶ rakudo/ugexe-patch-1: Create FUNDING.yml

[19:23] <Geth> ¬¶ rakudo/ugexe-patch-1: review: https://github.com/rakudo/rakudo/commit/2c5c013558

[19:23] <jmerelo> If you've checked enough https://docs-stage.perl6.org, I'll replicate it in docs.perl6.org.

[19:23] <tellable6> 2019-11-03T17:47:13Z #raku <cfa> jmerelo: it looks like https://docs.raku.org isn't building, picking up updates

[19:23] <tellable6> hey jmerelo, you have a message: https://gist.github.com/18ab103689fdd01aba16bc5769bd7625

[19:24] <jmerelo> .tell cfa it's done by hand for the time being. Automatic deployment is yet to come...

[19:24] <tellable6> jmerelo, I'll pass your message to cfa

[19:24] <Geth> ¬¶ rakudo: ugexe++ created pull request #3277: Create FUNDING.yml

[19:24] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/3277

[19:25] <jmerelo> .tell rba whatever is the best for you. The docs*.perl6.org are only going to be temporary.

[19:25] <tellable6> jmerelo, I'll pass your message to rba

[19:32] <Geth> ¬¶ rakudo: 2c5c013558 | (Nick Logan)++ (committed using GitHub Web editor) | .github/FUNDING.yml

[19:32] <Geth> ¬¶ rakudo: Create FUNDING.yml

[19:32] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/2c5c013558

[19:32] <Geth> ¬¶ rakudo: 3802cdfcad | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | .github/FUNDING.yml

[19:32] <Geth> ¬¶ rakudo: Merge pull request #3277 from rakudo/ugexe-patch-1

[19:32] <Geth> ¬¶ rakudo: 

[19:32] <Geth> ¬¶ rakudo: Create FUNDING.yml

[19:32] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/3802cdfcad

[19:33] <El_Che> AlexDaniel: Can you enable this in Travis? https://travis-ci.org/perl6/Blin

[19:33] <El_Che> (or give me access?)

[19:33] <AlexDaniel> ‚ÄúThis is not an active repository You don't have sufficient rights to enable this repo on Travis. Please contact the admin to enable it or to receive admin rights yourself‚Äù

[19:34] <AlexDaniel> what the? :)

[19:35] <Geth> ¬¶ rakudo: 1ec69e1f6a | tony-o++ (committed using GitHub Web editor) | .github/FUNDING.yml

[19:35] <Geth> ¬¶ rakudo: Add to yaml as GH approves more folks.

[19:35] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/1ec69e1f6a

[19:35] <El_Che> AlexDaniel: maybe add travis here: https://github.com/perl6/Blin/settings

[19:36] <AlexDaniel> El_Che: yeah

[19:37] <AlexDaniel> El_Che: is it better now?

[19:37] <AlexDaniel> I hope I didn't break anything‚Ä¶

[19:38] <El_Che> Now go here: https://travis-ci.org/account/repositories and enable Blin

[19:42] <AlexDaniel> El_Che: there's no such repo O_o

[19:43] <jmerelo> El_Che: I think I can do that.

[19:43] <El_Che> AlexDaniel: whut?? I see it

[19:43] <AlexDaniel> ah, wrong tab

[19:43] <El_Che> and I have the switch to enable it

[19:43] <AlexDaniel> enabled!

[19:43] <El_Che> (but no rights to do it :) )

[19:43] <El_Che> great job :)

[19:44] <El_Che> just triggered a build

[19:44] <El_Che> https://travis-ci.org/perl6/Blin/builds/607306940

[19:44] <AlexDaniel> El_Che: I just gave you admin rights to blin repo, if that helps

[19:44] <El_Che> AlexDaniel: should not be needed now, travis seems ok

[19:44] <El_Che> AlexDaniel: it's handy though to restart build

[19:44] <El_Che> s

[19:45] <jmerelo> El_Che: I just gave requested permissions, I don't know if it was needed when I did it.

[19:45] <El_Che> see above above Digest

[19:45] <El_Che> anyway, what's that "perl6" org? Sounds old :)

[19:45] *** Altai-man_ left
[19:46] <El_Che> AlexDaniel: the renaming will be repo by repo, I understand

[19:47] <lizmat> notable6: weekly

[19:47] <notable6> lizmat, 8 notes: https://gist.github.com/d40f2774d88e4999f7484c7ecb39b2c0

[19:48] *** jmerelo left
[19:53] <rba> .

[19:53] <tellable6> 2019-11-04T19:25:11Z #raku-dev <jmerelo> rba whatever is the best for you. The docs*.perl6.org are only going to be temporary.

[19:54] <rba> Hmm. Just missed jmerelo.

[19:55] <lizmat> El_Che: re "new rakudo-pkg support (and packages) for new releases: ubuntu 19.10, Fedora 31, centos 8", should I use a specific link for that?

[19:55] <El_Che> lizmat: maybe https://github.com/nxadm/rakudo-pkg#os-repositories ?

[19:56] <lizmat> ok, thanks

[19:56] <lizmat> notable6: weekly reset

[19:56] <notable6> lizmat, Moved existing notes to ‚Äúweekly_2019-11-04T19:56:09Z‚Äù

[19:56] <El_Che> I have specific link for each pkg, but is less desirable than a repo

[19:56] <El_Che> eg https://nxadm.github.io/rakudo-pkg/latest-release.html?os=fedora&version=31&arch=x86_64

[19:59] <rba> Regarding the downloads page on rakudo.org. Should we promote as well the rakudo releases? At the moment you will find only the rakudo star releases.

[20:00] <rba> May we link to the pkgs from El_Che too?

[20:05] <MasterDuke> i thought we already did

[20:13] *** ufobat_ joined
[20:17] *** ufobat left
[20:18] <El_Che> MasterDuke: I am not a fan of the download page: 

[20:18] <El_Che> - Rakudo Star

[20:18] <El_Che> - Installing from binaries

[20:18] <El_Che> - Installing from source

[20:18] <El_Che> - 

[20:18] <El_Che> Rakudo Star 2019.03 Errata

[20:18] <El_Che> (whut?)

[20:19] <lizmat> and another Rakudo Weekly hits the Net: https://rakudoweekly.blog/2019/11/04/2019-44-comma-cro/

[20:20] <El_Che> Star on top and at the bottom, and references to old releases while rakudo is more recent

[20:20] <[Coke]> Is the problem that the rakudo star release is behind?

[20:21] <El_Che> no, the problem is that unrelated things are mashed together

[20:21] <El_Che> 1. Star 2. Binaries 3. Source 4. Star errata

[20:22] <El_Che> 2nd problem is that the impression is created that the latest star release corresponds with the latest rakudo release

[20:25] <AlexDaniel> ha, github/stripe requires a utility bill or bank statement with your address on it

[20:26] <AlexDaniel> which I can't provide, I don't have that, I'm not even sure what they are asking for :D

[20:26] <AlexDaniel> like, maybe in some countries you do receive papers where your address is specified?

[20:30] <MasterDuke> yeah, but even if we don't actually get it in the mail you usually can see a statement online that you could print out

[20:37] <AlexDaniel> it doesn't have my address in it

[20:39] <AlexDaniel> I'm not even sure if you're required to have an address at all

[20:39] <AlexDaniel> given e-residency and stuff like that

[20:42] * [Coke] hasn't had to provide proof of address except for getting other forms of ID, like a new york state driver's license.

[20:42] <[Coke]> (and then that could be used to get a passport, etc.)

[20:43] <AlexDaniel> I did submit a pdf of a page from the government website, which does have my address listed, but doesn't have a date or signature/stamp of any sort

[20:43] <[Coke]> mm, doesn't sound super verifiable. :)

[20:43] * MasterDuke has had to a couple times recently (e.g., to get driver's license realid certified, to sign up for nhs)

[20:44] <AlexDaniel> I know one way to do it, which is to request a document from the population registry

[20:45] <AlexDaniel> but it's an annoying process

[20:57] <Kaiepi> i'm trying to pass a BOOTHash for named type parameters as the last element in the list of parameters for nqp::parameterizetype for a role, but fsr it's turning into a normal Hash when it gets assigned to %named in Metamodel::ParametricRoleGroupHOW!produce_parameterization, which makes it throw and doesn't happen when you parameterize by other means

[20:57] <Kaiepi> what do i need to do to make it stay a BOOTHash?

[21:04] <tyil> I haven't ran the tests locally yet, but gitlab-ci says these should be OK (apart from kernel signals): https://dist.tyil.nl/raku/rakudo-star/

[21:04] <tyil> if anyone wants to do a test run on them or check other things, please do

[21:05] <El_Che> tyil++

[21:05] <tyil> I would like to get stuff fixed where possible, so I can do a proper release for 2019.10 later this month

[21:05] <tyil> I'll contact the guy that builds the .msi package as well, to see if he can get the Windows installers to work as well

[21:05] <vrurg> Kaiepi: I would guess it became a Hash before binding to %named. 

[21:06] <AlexDaniel> I have enabled sponsorships in doc, roast, nqp, moarvm

[21:06] <AlexDaniel> so feel free to, I guess

[21:06] <vrurg> Kaiepi: most likely it happens when you pass it to nqp::parameterizetype.

[21:07] <AlexDaniel> the system is kinda weird because you have to do it in every repo separately

[21:08] *** travis-ci joined
[21:08] <travis-ci> Rakudo build failed. tony-o 'Add to yaml as GH approves more folks.'

[21:08] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/607303410 https://github.com/rakudo/rakudo/compare/3802cdfcad6f...1ec69e1f6a81

[21:08] *** travis-ci left
[21:10] <lizmat> restarted the one failing job

[21:20] <tyil> hmm, Linenoise fails to install for me with rakudo-star-2019.07.1

[21:21] <tyil> [Linenoise] Failed to open file /home/tyil/projects/personal/rakudo-star/work/build/rakudo-star-2019.07.1/modules/Linenoise/lib/Linenoise.pm6: No such file or directory

[21:21] <[Coke]> AlexDaniel: any idea how to become a sponsor?

[21:21] <AlexDaniel> [Coke]: try starting from here? https://github.com/sponsors

[21:22] <AlexDaniel> [Coke]: I think once you have it set up, you go here: https://github.com/sponsors

[21:22] <AlexDaniel> [Coke]: and click the sponsor button, then choose the dev you want to sponsor

[21:23] <[Coke]> That's to become a sponsored person, isn't it?

[21:24] <MasterDuke> [Coke]: the rakudo repo now has a "Sponsor" button at the top

[21:24] <[Coke]> the "join the waitlist" buttons seem to be for if I want to get money, not give it.

[21:24] <AlexDaniel> [Coke]: I think it's both, I just clicked ‚ÄúSelect‚Äù on one of the tiers and it worked

[21:24] <AlexDaniel> e.g. here https://github.com/sponsors/ugexe

[21:25] <AlexDaniel> it could be that you don't even need to set anything up

[21:25] <[Coke]> ok. You said you had set it up on doc, but didn't see a sponsor button there; I *do* see it on rakudo, though. Thank you!

[21:28] <AlexDaniel> right. So which is it? You just go straight to selecting a tier and that's it?

[21:35] <[Coke]> I clicked on the sponsor link on the project, and from there can pick a person to sponsor.

[21:38] <AlexDaniel> ok!

[21:43] <Kaiepi> m: my IterationBuffer:D $list := nqp::create(IterationBuffer); $list.push: nqp::hash(); say $list[0].^name

[21:43] <camelia> rakudo-moar 1ec69e1f6: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Could not find nqp::create, did you forget 'use nqp;' ?‚ê§at <tmp>:1‚ê§------> 3:D $list := nqp::create(IterationBuffer)7‚èè5; $list.push: nqp::hash(); say $list[0].‚ê§¬ª

[21:43] <Kaiepi> m: use nqp; my IterationBuffer:D $list := nqp::create(IterationBuffer); $list.push: nqp::hash(); say $list[0].^name

[21:43] <camelia> rakudo-moar 1ec69e1f6: OUTPUT: ¬´Hash‚ê§¬ª

[21:43] <rba> Can the sponsors beeing setup for an org too? Do I alway have to choose individual developers?

[21:44] *** lucasb left
[21:44] <Kaiepi> so that's how that was happening vrurg

[21:44] <AlexDaniel> rba: yeah, it's weird. I don't see a way to sponsor an org or a repo

[21:44] <AlexDaniel> rba: so it's ‚Äúsponsor a dev‚Äù, you just choose a person

[21:45] <Kaiepi> m: use nqp; class NativeArray is repr<VMArray> { }; my NativeArray:D $list := nqp::create(NativeArray); nqp::push($list, nqp::hash()); say nqp::atpos($list, 0).^name

[21:45] <rba> How do you get the money then? Do I have to tell them my bank account?

[21:45] <camelia> rakudo-moar 1ec69e1f6: OUTPUT: ¬´BOOTHash‚ê§¬ª

[21:45] <Kaiepi> so ig i can't use IterationBuffer for this

[21:45] <AlexDaniel> rba: yep, each dev can define tiers (like 1$ a month, 5$ a month, etc.), and you pay for it

[21:47] <AlexDaniel> also, ‚ÄúGitHub will match your sponsorship‚Äù, at least in some cases

[21:58] <AlexDaniel> ah, I think it's possible to configure project sponsoring

[21:59] <AlexDaniel> we'd just need a single rakudo account somewhere, like CommunityBridge maybe?

[22:00] <AlexDaniel> rba: check this out: https://help.github.com/en/github/building-a-strong-community/displaying-a-sponsor-button-in-your-repository

[22:04] <[Coke]> annoying you can only have 4 devs.

[22:32] <Geth> ¬¶ rakudo: 654d6a1693 | (Tom Browder)++ (committed using GitHub Web editor) | docs/rakudo-nqp-and-pod-notes.md

[22:32] <Geth> ¬¶ rakudo: Correct formatting error

[22:32] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/654d6a1693

[22:36] <Geth> ¬¶ rakudo: aa06d32abc | (Tom Browder)++ (committed using GitHub Web editor) | docs/rakudo-nqp-and-pod-notes.md

[22:36] <Geth> ¬¶ rakudo: Change IRC name to #raku-dev

[22:36] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/aa06d32abc

[22:38] <Geth> ¬¶ rakudo: 044b339024 | (Tom Browder)++ (committed using GitHub Web editor) | docs/rakudo-nqp-and-pod-notes.md

[22:38] <Geth> ¬¶ rakudo: More Raku entries

[22:38] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/044b339024

[23:00] *** AlexDaniel left
[23:22] <vrurg> Kaiepi: what if you add 'is raw' to IterationBuffer push var parameter? Basically, this is where you get nqp::hash() hllized itnto Hash, as it looks to me.

[23:25] <timotimo> i think a mirrored R and another R together could be stylized into a butterfly

[23:31] <vrurg> m: use nqp; my IterationBuffer:D $list := nqp::create(IterationBuffer); nqp::push($list, nqp::hash()); say nqp::atpos($list,0).^name

[23:31] <camelia> rakudo-moar 044b33902: OUTPUT: ¬´BOOTHash‚ê§¬ª

[23:31] <vrurg> Kaiepi: ^^^

[23:32] <Kaiepi> hold on, i'm waiting on rakudo to build

[23:34] <vrurg> Kaiepi: Anyway, the biggest problem is [] because it falls back to AT-POS method. But methods don't support `is raw` in return values. This is where you'd always have your BOOTHash hllized.

[23:34] <vrurg> Use of nqp::atpos is inevitable anyway.

[23:34] <Kaiepi> ah, ok

[23:35] <vrurg> And I have recompiled already. `is raw` doesn't help with the parameter. You're bound to nqp::push / nqp::atpos. 

[23:35] <vrurg> Wether it makes sense using IterationBuffer is very much doubtful then. 

