[00:54] *** nativecallable6 joined
[00:54] *** committable6 joined
[00:54] *** shareable6 joined
[00:55] *** quotable6 joined
[00:55] *** coverable6 joined
[00:55] *** reportable6 joined
[00:55] *** benchable6 joined
[00:55] *** greppable6 joined
[00:55] *** releasable6 joined
[00:55] *** statisfiable6 joined
[00:55] *** bloatable6 joined
[00:56] *** notable6 joined
[00:56] *** squashable6 joined
[00:56] *** unicodable6 joined
[02:04] *** AlexDaniel joined
[02:04] *** AlexDaniel left
[02:04] *** AlexDaniel joined
[03:02] *** El_Che left
[05:05] *** benchable6 left
[05:05] *** statisfiable6 left
[05:05] *** bloatable6 left
[05:05] *** committable6 left
[05:05] *** unicodable6 left
[05:05] *** coverable6 left
[05:05] *** nativecallable6 left
[05:05] *** greppable6 left
[05:05] *** notable6 left
[05:05] *** reportable6 left
[05:05] *** releasable6 left
[05:05] *** quotable6 left
[05:05] *** squashable6 left
[05:05] *** shareable6 left
[05:05] *** committable6 joined
[05:05] *** unicodable6 joined
[05:05] *** nativecallable6 joined
[05:06] *** shareable6 joined
[05:06] *** quotable6 joined
[05:06] *** releasable6 joined
[05:06] *** bloatable6 joined
[05:06] *** coverable6 joined
[05:06] *** benchable6 joined
[05:07] *** notable6 joined
[05:07] *** greppable6 joined
[05:08] *** reportable6 joined
[05:08] *** statisfiable6 joined
[05:08] *** squashable6 joined
[08:15] <lizmat> hmmm... no commits to the doc repo for a month?  have I missed something?

[08:34] <lizmat> argh... on the wrong branch, please disregard

[08:49] *** sena_kun joined
[09:07] *** Altai-man_ joined
[09:10] *** sena_kun left
[09:22] *** sena_kun joined
[09:24] *** Altai-man_ left
[10:10] *** sena_kun left
[10:46] <AlexDaniel> samcv: how is the moar release going?

[11:59] *** ZzZombo joined
[13:01] *** MasterDuke left
[13:15] *** MasterDuke joined
[13:19] *** sena_kun joined
[13:22] *** Altai-man_ joined
[13:25] *** sena_kun left
[13:28] *** [Coke] joined
[13:28] *** [Coke] left
[13:28] *** [Coke] joined
[13:37] *** lucasb joined
[13:52] <|Tux|> Rakudo version 2019.07.1-469-g1c5d010f8 - MoarVM version 2019.07.1-315-gf10a31b43

[13:52] <|Tux|> csv-test-xs-20      0.417 -  0.434

[13:52] <|Tux|> csv-ip5xs           0.709 -  0.745

[13:52] <|Tux|> test-t --race       0.805 -  0.837

[13:52] <|Tux|> test-t              1.764 -  1.781

[13:52] <|Tux|> test                5.796 -  6.148

[13:52] <|Tux|> csv-ip5xs-20        6.500 -  6.673

[13:52] <|Tux|> test-t-20 --race    9.199 -  9.389

[13:52] <|Tux|> csv-parser         21.250 - 21.727

[13:52] <|Tux|> test-t-20          29.175 - 30.044Rakudo version 2019.07.1-469-g1c5d010f8 - MoarVM version 2019.07.1-315-gf10a31b43

[13:53] <|Tux|> csv-test-xs-20      0.417 -  0.434

[13:53] <|Tux|> csv-ip5xs           0.709 -  0.745

[13:53] <|Tux|> test-t --race       0.805 -  0.837

[13:53] <|Tux|> test-t              1.764 -  1.781

[13:53] <|Tux|> test                5.796 -  6.148

[13:53] <|Tux|> csv-ip5xs-20        6.500 -  6.673

[13:53] <|Tux|> test-t-20 --race    9.199 -  9.389

[13:53] <|Tux|> csv-parser         21.250 - 21.727

[13:53] <|Tux|> test-t-20          29.175 - 30.044

[13:56] <lucasb> things got slower?

[14:21] <lucasb> m: my ($a) := 10

[14:21] <camelia> rakudo-moar dd2f072d6: OUTPUT: ¬´Cannot unpack or Capture `10`.‚ê§To create a Capture, add parentheses: \(...)‚ê§If unpacking in a signature, perhaps you needlessly used parentheses? -> ($x) {} vs. -> $x {}‚ê§or missed `:` in signature unpacking? -> &c:(Int) {}‚ê§  in block <unit> at‚Ä¶¬ª

[14:23] <lizmat> hmmm... seems we lost Geth ?

[14:24] * [Coke] waves.

[14:24] <AlexDaniel> tyil: ping :) ‚Üë 

[14:25] <tyil> o/

[14:28] *** Geth joined
[14:29] <tyil> sadly Geth does not have a queue to report all the things that it failed to report

[14:29] <tyil> according to the logs, it has been trying to send messages, but it was disconnected

[14:29] <tyil> I thought IRC::Client automatically tried to reconnect if anything happens

[14:32] <lizmat> tyil: that's ok...

[14:32] <tyil> it's a bug that I'd like to fix, though :>

[14:32] <lizmat> perhaps it could just remember the last commit it has succesfully reported

[14:33] <lizmat> and then derive which commits it should report when re-connecting ?  at least on master ?

[14:33] <tyil> that's what cpan-raku does, I keep track of whatever it saw last, and then request whatever came afterwards from my DB

[14:43] <Geth> ¬¶ roast: fcac5881c6 | (Elizabeth Mattijsen)++ | S32-str/comb.t

[14:43] <Geth> ¬¶ roast: Add test for :match on comb() as a sub

[14:43] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/fcac5881c6

[14:51] *** ExtraCrispy joined
[14:53] <vrurg> Is there a way for a method to know what concretization it's being called upon?

[14:56] <vrurg> m: https://gist.github.com/vrurg/1063b8a6226025a9461e1f405edb9f5d

[14:56] <camelia> rakudo-moar dd2f072d6: OUTPUT: ¬´--- Foo::foo‚ê§Foo a==1‚ê§Foo!a: 1‚ê§R::info ::?CLASS: (Foo)‚ê§--- Bar::foo‚ê§1. Bar a==1‚ê§Foo a==2‚ê§Foo!a: 0‚ê§R::info ::?CLASS: (Bar)‚ê§2. Bar a==2‚ê§¬ª

[14:57] <vrurg> lizmat: ^ relazed resolution of FQN in method call pulled out a bunch problems related to the current implementation.

[14:57] <vrurg> *relaxed

[14:58] <lizmat> vrurg++

[15:23] *** sena_kun joined
[15:23] *** sena_kun left
[15:24] *** Altai-man_ left
[15:27] <AlexDaniel> 6c: my ( Int() $a ) = ("12345");

[15:28] <committable6> AlexDaniel, ¬¶6c (39 commits): ¬´¬ª

[15:28] <AlexDaniel> 6c: my ( Int() $a ) = ("12345"); say $a.WHAT

[15:28] <committable6> AlexDaniel, ¬¶6c (39 commits): ¬´(Str)‚ê§¬ª

[15:31] <AlexDaniel> 6c: "C" ~~ / <:Lu> <!before \S > / # Nil

[15:31] <AlexDaniel> 6c: say "C" ~~ / <:Lu> <!before \S > / # Nil

[15:31] <committable6> AlexDaniel, ¬¶6c (39 commits): ¬´¬ª

[15:31] <committable6> AlexDaniel, ¬¶6c (39 commits): ¬´Nil‚ê§¬ª

[15:32] <AlexDaniel> c: all https://gist.github.com/AlexDaniel/36062d8a9bf5243315f2af1b107619c5

[15:32] *** robertle joined
[15:32] <committable6> AlexDaniel, https://gist.github.com/cd3e0c1bdfa1aa27ab2d74f7958eff64

[15:47] <lizmat> notable6: weekly

[15:47] <notable6> lizmat, 1 note: 2019-11-10T13:11:33Z <lizmat>: https://twitter.com/raku_cpan_new

[15:48] <lizmat> notable6: weekly reset

[15:48] <notable6> lizmat, Moved existing notes to ‚Äúweekly_2019-11-11T15:48:09Z‚Äù

[15:49] <lizmat> hmmm... a quiet week... no main article for the Rakudo Weekly yet

[15:49] <lizmat> suggestions anyone ?

[15:53] *** pmurias joined
[16:22] <moritz> you've talked about the advent calendar before, right?

[16:23] <AlexDaniel> squashable6: status

[16:23] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in 3 days and ‚âà11 hours (2019-11-16 UTC-12‚åÅUTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:23] <AlexDaniel> uhhhhhhhhh

[16:25] <Geth> ¬¶ problem-solving/master: 4 commits pushed by (Aleks-Daniel Jakimenko-Aleksejev)++

[16:25] <Geth> ¬¶ problem-solving/master: 2ff1bb88f0 | Add the RT tracker dismantling plan

[16:26] <Geth> ¬¶ problem-solving/master: 57f7054251 | Mention others too

[16:26] <Geth> ¬¶ problem-solving/master: 57f2e8ebb8 | Mention that perl6/ will likely not be ‚Äúperl6/‚Äù later

[16:26] <Geth> ¬¶ problem-solving/master: d66c6ff877 | Merge pull request #126 from perl6/old-issue-tracker

[16:26] <Geth> ¬¶ problem-solving/master: review: https://github.com/perl6/problem-solving/compare/6d0c078ea04d...d66c6ff8776f

[16:28] <AlexDaniel> lizmat: ‚ÄúBye-bye RT‚Äù ? ‚Üë :)

[16:28] <AlexDaniel> we're not there yet, but it's pretty close

[16:29] <lizmat> AlexDaniel: cool

[16:29] <lizmat> moritz: yes, I have

[16:49] *** cognomin_ joined
[17:04] <dogbert17> lizmat: the comb test you added fails for me with 'Too many positionals passed; expected 2 arguments but got 3'

[17:05] <lizmat> huh?

[17:05] <dogbert17> perhaps I made a mistake

[17:05] <lizmat> dogbert17: you're right

[17:05] * lizmat goes fixing

[17:06] <dogbert17> +lizmat+

[17:14] <Geth> ¬¶ roast: 48bd86159a | (Elizabeth Mattijsen)++ | S32-str/comb.t

[17:14] <Geth> ¬¶ roast: Oops, fixed simplification properly, dogbert17++

[17:14] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/48bd86159a

[17:14] <lizmat> that's what you get when you're multitasking too many things at the same time

[17:14] *** pmurias left
[17:19] <moritz> lizmat: https://www.youtube.com/watch?v=ri8QX-TboWM :D

[17:24] *** sena_kun joined
[17:31] <lizmat> and another Rakudo Weekly hits the Net: https://rakudoweekly.blog/2019/11/11/2019-45-red-alert/

[17:35] <lizmat> moritz:  :-)

[17:36] <moritz> rw-twoot

[17:37] * lizmat suw

[17:44] <vrurg> lizmat++

[17:46] *** donaldh joined
[18:14] *** donaldh left
[18:15] *** donaldh joined
[18:20] *** donaldh left
[18:25] <japhb> Is the Perl 6 Core Development Fund still a thing?

[18:25] <japhb> [Coke]: ^^

[18:25] <[Coke]> Yes, but it's managed by the board (makoto) and not the GC

[18:26] <[Coke]> I don't think we currently have a way to make a targeted donation.

[18:26] <[Coke]> I would recommend reaching out to the treasurer before donating if you want to try to have it go into that bucket.

[18:26] *** donaldh joined
[18:27] <japhb> lizmat: The first two OpenGL tutorial links are pointing to the wrong videos (the first is pointing to the second, the second is pointing to a random other video)

[18:28] <japhb> makoto?

[18:28] <[Coke]> Makoto Nozaki https://www.perlfoundation.org/whos-who.html

[18:28] <[Coke]> He's a board member.

[18:28] <japhb> [Coke]: We'd set it up a couple years ago, and I did my yearly corporate-sponsored holiday donation to it, but this year the URL goes 404, and it's not obvious what happened

[18:29] <japhb> Ah

[18:29] <[Coke]> I think this was the last blog post: https://news.perlfoundation.org/post/march_report_of_the_perl_6_dev

[18:29] <[Coke]> Donations are here:

[18:29] <[Coke]> https://www.perlfoundation.org/donate.html

[18:29] <[Coke]> with the latest site, targeted donations seem to be no longer available.

[18:30] <[Coke]> we are also transitioning to a new treasurer.

[18:30] <japhb> Gah, that's annoying (lack of target).  I went through the trouble of setting it up in Benevity and everything.  :-(

[18:31] *** donaldh left
[18:31] <japhb> Oh wait, this exists: https://www.perlfoundation.org/perl-6-development-fund.html

[18:32] <japhb> Slight change of name and URL, just enough to break things.  :-/

[18:35] <[Coke]> can't donate there, but yes.

[18:35] <[Coke]> probably part of the new site rollout - every URL changed. :|

[18:36] * japhb rolls his eyes

[18:37] <japhb> Is Dan Wright the old treasurer or the new one?

[18:38] *** Kaiepi joined
[18:45] *** chloekek joined
[19:00] *** donaldh joined
[19:05] *** donaldh left
[19:22] *** Altai-man_ joined
[19:24] *** sena_kun left
[19:41] <japhb> [Coke]: ^^ and also: How do I contact someone at TPF?  There doesn't seem to be any contact info that I can find on the web site.

[19:43] <[Coke]> Yes, I have a ticket open for them to fix that. Pick someone, I probably have their email.

[19:43] <[Coke]> Please also mention to them when you ping them that you had to go out of band to find their contact info.

[19:43] *** donaldh joined
[19:45] <japhb> [Coke]: SGTM.  Makoto and Dan Wright are I guess the two key folks for the moment (and whoever the new Treasurer is if you know it).  Feel free to /msg me

[19:47] *** donaldh left
[19:48] <[Coke]> treasurer is treasurer@

[19:55] *** donaldh joined
[19:59] *** donaldh left
[20:08] *** entonian joined
[20:15] *** chloekek left
[20:18] *** entonian left
[20:19] *** entonian joined
[20:41] *** donaldh joined
[20:56] *** entonian left
[20:58] *** entonian joined
[20:59] *** entonian left
[21:03] *** Altai-man_ left
[21:04] *** entonian joined
[21:20] *** pmurias joined
[21:20] *** entonian left
[21:37] *** lucasb left
[21:43] *** donaldh left
[22:16] <lizmat> japhb: no idea how that happened, fixed now, thanks for the report!

[22:20] <TreyHarris> tbrowder: I'm a bit lost with regard to https://github.com/rakudo/rakudo/issues/3296 -- T&M seems to imply that you suggested filing the bug, so I wonder if you can shed some light. What is the imagined check here? All module files do not require a `unit` anything at top, module or otherwise. Is the idea that if a file loaded via `use` whose filename ends in 'pm6' or one of its aliases never

[22:20] <TreyHarris> declares a namespace, the compiler should complain?

[22:21] *** titsuki joined
[22:22] <tbrowder> TreyHarris: it's a bit confusing I know, T&M wastes more words that p

[22:23] <tbrowder> *than I do!

[22:23] <TreyHarris> Is my description of the desired warning correct, then?

[22:24] <tbrowder> did you read the email thread from the start of the problem?

[22:25] <TreyHarris> Yes, but it sounds to me like an issue that was never with rakudo, so asking the compiler to catch it seems a little weird to me. Perhaps I misunderstand.

[22:27] <TreyHarris> The "phase of the moon" comments seemed to imply that including a module declarator was only sometimes necessary--I don't understand that at all

[22:28] <tbrowder> basically he was having trouble reading his modules and had left off, in this case, "unit module X" and failed to access the modules with the various incorrect "use..." statements in his caller.

[22:29] <TreyHarris> right. I got that--I'm not clear on how the compiler could have caught this error anymore than it could've caught that you wrote "use B" when you should have written "use A", assuming both A.pm and B.pm describe identical interfaces

[22:31] <tbrowder> he is too quick to change things willy-nilly and throws his hands up with such statements when trying to isolate a problem. by using a simple sandbox setup we were able to find his syntax errors, and he thinks the compiler should be able to catch the problems.

[22:33] *** Xliff joined
[22:33] <tbrowder> i'm not sure either, but i thought he could file the issue and get a better response than i could give.

[22:33] <Xliff> o/

[22:34] <tbrowder> let me go check the issue...

[22:34] <tbrowder> Xliff: \o

[22:35] <TreyHarris> Yes, I've seen that behavior before. It's arguably valid to file an issue against the docs even when the reader hasn't read carefully or correctly--it may be possible to tighten up the docs so that even a haphazard reader will not be led astray. But asking the compiler to catch fundamental semantic mistakes seems... questionable to me at best

[22:38] <TreyHarris> It would be like... In one language I used at one job, I constantly confused `DateTime` with `Date` and `Localtime`, which were three different modules that did different things for which those three names didn't map well onto my notion of those three names. But while I thought the naming of these core modules was bad and I might argue a new version should refactor them in some way, I wouldn't

[22:38] <TreyHarris> have thought to suggest the language itself should have been able to tell me when I'd gotten this wrong, absent a syntax or interface error

[22:38] <tbrowder> i am not able to disagree ;-)

[22:38] <Xliff> m: role A { multi method b (:$something is required) { } }; class B does A { multi b (Str $other) { }; }; 

[22:38] <camelia> rakudo-moar dd2f072d6: ( no output )

[22:39] <Xliff> m: role A { multi method b (:$something is required) { } }; class B does A { multi method b (Str $other) { }; }; 

[22:39] <camelia> rakudo-moar dd2f072d6: ( no output )

[22:39] <Xliff> m: role A { multi method b (:$something is required) { say 'R' } }; class B does A { multi method b (Str $other) { say 'C' }; }; B.new.b(:something); B.new.b('Hi')

[22:39] <camelia> rakudo-moar dd2f072d6: OUTPUT: ¬´R‚ê§C‚ê§¬ª

[22:39] <Xliff> \o/

[22:56] <Xliff> m: (1, 2, 3).values.say

[22:56] <camelia> rakudo-moar dd2f072d6: OUTPUT: ¬´(1 2 3)‚ê§¬ª

