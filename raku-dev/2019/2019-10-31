[00:00] <AlexDaniel> but then you probably want it to explode?

[00:00] <AlexDaniel> because most likely it didn't fully finish successfuly

[00:00] <jnthn> Yes, but if it didn't, you could have accidentally relied on it not doing so...somehow.

[00:01] <jnthn> But given this was only a problem for certain ways of it getting killed, and normal unsuccessful exits already exploded, I suspect it will not hurt so much.

[00:02] <AlexDaniel> if this breaks my own code I'd be so pissed :D

[00:06] <pmurias> jnthn: I get 3.5 for moar, 14s for truffle and 35s for the jvm

[00:06] <pmurias> interesting why MasterDuke and mine jvm times are that different

[00:07] <MasterDuke> pmurias: oh, i bet i'm still using the graal jdk/jre to run the old code

[00:08] <MasterDuke> hm, nope, don't think so

[00:10] <Xliff> Rig diffs.

[00:10] <pmurias> MasterDuke: I'm using the graalvm-ce-19.2.1 for both

[00:10] <Xliff> As in... what are your respective machine specs...

[00:10] <MasterDuke> openjdk version "13.0.1" 2019-10-15 OpenJDK Runtime Environment (build 13.0.1+9) OpenJDK 64-Bit Server VM (build 13.0.1+9, mixed mode)

[00:10] <MasterDuke> for regular code

[00:11] <MasterDuke> OpenJDK 64-Bit GraalVM CE 19.2.1 (build 25.232-b07-jvmci-19.2-b03, mixed mode) for truffle

[00:12] <MasterDuke> and ryzen 3700x is the hardware

[00:12] <pmurias> MasterDuke: have you compared running the old backend with the GraalVM CE (just using a regular ./nqp-j with the same java)

[00:14] <MasterDuke> pmurias: i haven't. i'll do that tomorrow, but i'll have to rebuild it (i just tried without and got `Error: A JNI error has occurred, please check your installation and try againException in thread "main" java.lang.UnsupportedClassVersionError: org/perl6/nqp/runtime/CompilationUnit has been compiled by a more recent version of the Java Runtime

[00:14] <MasterDuke> (class file version 53.0), this version of the Java Runtime only recognizes class file versions up to 52.0`

[00:15] <pmurias> hmm, seem super weird

[00:16] <Xliff> Would someone appreciate another benchmark?

[00:16] <Xliff> I could run one, if someone told me how.

[00:16] <Xliff> $ perl6 scripts/dependencies.pl6 -> 20

[00:17] <Xliff> Oops

[00:17] <pmurias> MasterDuke: you get that error for the nqp-j in a non-truffle checkout?

[00:17] <Xliff> perl6 -e '$*KERNEL.cpu-cores.say' # 20

[00:18] <MasterDuke> pmurias: yeah, i just put the graal directories at the beginning of my PATH (like they are when i run the truffle code)

[00:18] *** tyil[m] left
[00:19] <pmurias> Xliff: I have to hit the bed asap as I'm not thinking straigh, stayed up too late to see how the optimized WVal will work

[00:19] *** tyil[m] joined
[00:19] <MasterDuke> Xliff: nqp code is `class Point { has $!x; has $!y; method new(:$x, :$y) { my $obj := nqp::create(self); nqp::bindattr($obj, Point, q|$!x|, $x); nqp::bindattr($obj, Point, q|$!y|, $y); $obj; }; method x() { $!x }; method y() { $!y } }; my $total := 0; my int $i := -1; while ++$i < 50000000 { my $p := Point.new(x => 2, y => 3); $total := $total +

[00:19] <MasterDuke> $p.x + $p.y; }; say($total)`

[00:20] <MasterDuke> how long does that take with the jvm backend for you?

[00:20] <MasterDuke> but i too need to get to bed

[00:20] <Xliff> MasterDuke: I don't think I build the jvm backend. Let me get that running. I will .tell you and pmurias the results.

[00:22] <pmurias> jnthn: the truffle backend still doesn't have method call optimized properly (with polymorphic inline caching) one I figure out how to do it in a way that's actually faster the benchmarks should be more representative

[00:22] <MasterDuke> Xliff: this always bites me. if you get weird errors during build, make sure you're not parallelizing your make call (i.e., `make install`, not `make -j16 install`)

[00:23] <Xliff> MasterDuke++ # Thanks on the heads up!

[00:23] <Xliff> "javac: invalid flag: --release" ??

[00:23] <Xliff> I'm using openjdk-8-jdk

[00:23] <MasterDuke> -version

[00:24] <Xliff> Feh. Now installing -14

[00:24] *** tbrowder joined
[00:27] <Xliff> Ah. There we go.

[00:30] *** pmurias left
[00:36] <Xliff> Exception in thread "Thread-4" org.perl6.nqp.runtime.UnwindException

[00:36] <Xliff> '/home/home/cbwood/Projects/rakudobrew/versions/jvm-2019.07.1/perl6-j' '/home/home/cbwood/Projects/rakudobrew/versions/jvm-2019.07.1/tools/build/install-core-dist.p6' '/home/home/cbwood/Projects/rakudobrew/versions/jvm-2019.07.1/install/share/perl6'

[00:42] <Xliff> I'm going to leave the build running, but the process seems hung at this point with it repeating that exception message.

[01:02] <Xliff> MasterDuke, pmurias: Aborting jvm make... something isn't write either with my system or the build process. It is hanging at: '/home/home/cbwood/Projects/rakudobrew/versions/jvm-2019.07.1/perl6-j' '/home/home/cbwood/Projects/rakudobrew/versions/jvm-2019.07.1/tools/build/install-core-dist.p6'

[01:09] *** ggoebel joined
[01:14] *** Xliff left
[01:37] *** ggoebel left
[01:42] <tyil> I think I got it working https://gitlab.com/tyil/rakudo-star/-/jobs/337978118

[01:51] <vrurg> tyil++

[02:14] <Geth_> ¬¶ roast/rakudo_3257: 931d803d7c | (Vadim Belman)++ | 2 files

[02:14] <Geth_> ¬¶ roast/rakudo_3257: Consider newly added X::SymbolNotDynamic exception

[02:14] <Geth_> ¬¶ roast/rakudo_3257: 

[02:14] <Geth_> ¬¶ roast/rakudo_3257: Make _S32/exceptions/mist.t_ use v6.c explicitly

[02:14] <Geth_> ¬¶ roast/rakudo_3257: review: https://github.com/perl6/roast/commit/931d803d7c

[02:14] <Geth_> ¬¶ roast/rakudo_3257: 5074c079e1 | (Vadim Belman)++ | S02-names/pseudo-6e.t

[02:14] <Geth_> ¬¶ roast/rakudo_3257: Additional tests for dynamic pseudo-packages

[02:14] <Geth_> ¬¶ roast/rakudo_3257: 

[02:14] <Geth_> ¬¶ roast/rakudo_3257: Support for rakudo/rakudo#3272

[02:14] <Geth_> ¬¶ roast/rakudo_3257: review: https://github.com/perl6/roast/commit/5074c079e1

[02:15] <Geth_> ¬¶ roast: vrurg++ created pull request #595: Additional tests for dynamic pseudo-packages

[02:15] <Geth_> ¬¶ roast: review: https://github.com/perl6/roast/pull/595

[04:49] *** ggoebel joined
[05:03] *** b2gills left
[05:05] *** b2gills joined
[05:33] *** AlexDaniel left
[06:38] *** jmerelo joined
[07:31] *** ggoebel left
[07:33] *** jmerelo left
[08:08] *** sena_kun joined
[09:15] *** ExtraCrispy joined
[09:19] <El_Che> AlexDaniel`: I'll rebuild the image

[09:44] *** Altai-man_ joined
[09:46] *** sena_kun left
[10:00] <El_Che> AlexDaniel`: the fix seem to work. Uploading the new image

[10:08] <El_Che> AlexDaniel`: upload done. Test it, see if it's ok, then we'll see what to do with it

[10:13] *** AlexDaniel joined
[10:13] *** AlexDaniel left
[10:13] *** AlexDaniel joined
[11:11] <AlexDaniel> El_Che: I haven't slept in a lot of time, so going to bed now. Will test it once I wake up. Alternatively you can run the example you have in the readme

[11:11] <AlexDaniel> this one: ./dblin -old=2018.06 --new=2018.09 Foo::Regressed Foo::Regressed::Very Foo::Dependencies::B-on-A

[11:11] <AlexDaniel> if it bisects both regressed modules to v2018.08.48.g741ae6f4e then it totally works

[11:12] <El_Che> Foo:: is a thing :)

[11:12] <AlexDaniel> you'll see the result in the output folder

[11:12] <El_Che> AlexDaniel: no rush, about it, just telling it worked for me

[11:12] <AlexDaniel> okay, well

[11:12] *** ExtraCrispy left
[11:12] <El_Che> AlexDaniel: I run it for all inadvertingly

[11:13] <El_Che> and wondered why my pc was so slow :)

[11:13] <AlexDaniel> hehe

[11:13] <El_Che> will check with the modules you gave me

[11:13] <AlexDaniel> now we need to figure out where we can actually run it

[11:13] <AlexDaniel> because I still want to see the result before we ship this release

[11:14] <El_Che> does it take than 50 minutes to run and it shows some output along the process? ==> travis

[11:14] <El_Che> otherwise we could try to get some aws credits for foss?

[11:15] <AlexDaniel> iirc it takes like two hours if you have 24 gce-like cores

[11:15] <El_Che> so, travis is out 

[11:15] <El_Che> I have a travis.com account, let me check if the limit apply there

[11:20] <El_Che> limit is there 2h

[11:21] <El_Che> AlexDaniel: sleep tight, Blin is happely running here. It looks good

[11:23] <AlexDaniel> niiice

[11:23] <AlexDaniel> El_Che: but it won't make it in 2 hours

[11:30] <El_Che> will run it in a vm on a other machine, because I need this one to work :)

[11:30] <tyil> I have some minor tweaking to do in order to feel confident about this rakudo-star 2019.07.1 build, but for future reference, how does one make a possible r* build "official"

[11:30] <tyil> (fwiw, latest build over yonder: https://gitlab.com/tyil/rakudo-star/-/jobs/338344444)

[11:34] <tyil> also, is there a place I can find general information about the release schedules of NQP, MoarVM and Rakudo?

[11:34] <tyil> or RSS feeds with their releases

[11:37] <AlexDaniel> tyil: there's [email@hidden.address] where releases are announced

[11:37] <AlexDaniel> I mean, the mailing list

[11:38] <AlexDaniel> tyil: NQP and Rakudo are usually released at the same time and the announcement is for both

[11:39] <AlexDaniel> tyil: as for schedules, it's currently ‚Äúwhen it's ready‚Äù until someone better than me takes over :)

[11:40] <AlexDaniel> tyil: as for making it official, last time we had this ticket: https://github.com/rakudo/star/issues/124

[11:41] <AlexDaniel> so clarkema and hankache volunteered but I don't know the current situation and what they're up to

[11:41] <AlexDaniel> see this ticket also: https://github.com/rakudo/star/issues/143

[11:41] <AlexDaniel> if you figured it all out, perhaps you should let others know

[11:42] <AlexDaniel> tyil: did I answer any of your questions? :)

[11:42] <AlexDaniel> I don't feel like I did

[11:42] <AlexDaniel> tyil: also, I've seen your question about nqp makefile, and I'm a bit confused

[11:42] <AlexDaniel> https://github.com/perl6/nqp/blob/master/docs/release_guide.pod

[11:42] <AlexDaniel> https://github.com/rakudo/rakudo/blob/master/docs/release_guide.pod

[11:43] <AlexDaniel> these docs describe all steps required to make a release, including when to run Configure.pl

[11:43] <El_Che> I think tyil is talking about Rakudo Star and not Rakudo. They are not related.

[11:44] <AlexDaniel> I know, but previous question was about nqp, I think

[11:45] <El_Che> ok

[11:45] <AlexDaniel> well, star has a file for that too https://github.com/rakudo/star/blob/master/tools/star/release-guide.pod

[11:45] <tyil> AlexDaniel: about NQPs release guide, step 3 says it's VERY important to ensure everything is clean, and tells you to do a make realclean

[11:45] <AlexDaniel> but I've never tried following the steps there

[11:45] *** sena_kun joined
[11:45] <tyil> but you can't do a make realclean there

[11:45] <tyil> because the makefile is generated in the next step

[11:45] <tyil> as for the ML, I'll subscribe there

[11:45] <tyil> and I'll also post on the github issue to inform people I do have a working build environment

[11:45] <AlexDaniel> tyil: yeah, it assumes that you were already using the repo to do stuff, which is a horrible assumption really :)

[11:46] <tyil> I can make a PR on the GitHub repo is needed for it

[11:46] <tyil> s/is/if/

[11:46] *** Altai-man_ left
[11:46] <AlexDaniel> for rakudo and nqp releases I use this: https://github.com/rakudo/rakudo/blob/master/tools/releasable/Sakefile

[11:47] <AlexDaniel> I really wanted to make the code there nice, but‚Ä¶ I guess it works totally fine, so why touch it?

[11:47] <tyil> I don't want to depend on Perl 6 to build/release these things, because it feels wrong to depend on the thing you're building :p

[11:47] <tyil> but that's a personal opinion, if that works for you it's all good ofc

[11:48] <AlexDaniel> well, you can follow the steps manually

[11:48] *** MasterDuke left
[11:49] <AlexDaniel> which is even worse because many times it was proven that people do mistakes :)

[11:49] <tyil> I try to stick to POSIX shell where possible, but R* was doing Makefile stuff already so I mostly just altered that to get things working again

[11:50] <tyil> AlexDaniel: is perl6-compiler a private list? I don't see it on https://lists.perl.org/all.html

[11:50] <El_Che> tyil: are you coordinater to the star release managers (in order to avoid doing dubble work)?

[11:50] <tyil> El_Che: no, I was just bored at work and wanted a newer build

[11:51] <AlexDaniel> tyil: see https://raku.org/archive/lists/

[11:51] <tyil> thanks!

[11:51] <El_Che> tyil: ping them, maybe you fixed what was blocking them to do a new release

[11:52] <El_Che> AlexDaniel: ‚è≥ 134 out of 1343 modules processed

[11:52] <El_Che> this will take a while :)

[11:52] <AlexDaniel> also, that sakefile is not for building, it's for releasing

[11:52] <AlexDaniel> so there's no issue depending on perl6 itself, as far as I can see

[11:53] <AlexDaniel> I mean, raku, right

[11:53] <El_Che> AlexDaniel: the volume is there, the output file also, so I think the image does what it's supposed to do

[11:53] <AlexDaniel> El_Che: yeah, we'll see later

[11:53] <El_Che> AlexDaniel: now go to bed :)

[11:54] <AlexDaniel> thanks :)

[13:03] *** ggoebel joined
[13:08] *** ZzZombo_ joined
[13:10] *** ZzZombo left
[13:10] *** ZzZombo_ is now known as ZzZombo

[13:44] *** Altai-man_ joined
[13:46] *** sena_kun left
[13:46] *** Altai-man_ left
[13:47] *** sena_kun joined
[14:49] *** ExtraCrispy joined
[14:54] <Guest13443> releasable: next

[14:54] <releasable6> Guest13443, Next release will happen when it's ready. There are no known blockers. 248 out of 451 commits logged (‚ö† 9 warnings)

[14:54] <releasable6> Guest13443, Details: https://gist.github.com/81a61a480c0bcda722664a9968a7a0fb

[14:54] <Guest13443> releasable: prev

[14:54] <releasable6> Guest13443, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Releasable

[15:12] *** patrickb joined
[15:28] <[Tux]> Rakudo version 2019.07.1-451-g9f433da0d - MoarVM version 2019.07.1-311-g8caf9fd58

[15:28] <[Tux]> csv-test-xs-20      0.432 -  0.442

[15:28] <[Tux]> csv-ip5xs           0.725 -  0.744

[15:28] <[Tux]> test-t --race       0.854 -  0.868

[15:28] <[Tux]> test-t              1.741 -  1.788

[15:28] <[Tux]> csv-ip5xs-20        6.677 -  7.121

[15:28] <[Tux]> test                7.378 -  7.638

[15:28] <[Tux]> test-t-20 --race    9.621 - 10.147

[15:28] <[Tux]> csv-parser         23.838 - 24.244

[15:29] <[Tux]> test-t-20          30.764 - 31.108

[15:43] *** Altai-man_ joined
[15:46] *** sena_kun left
[15:57] *** japhb left
[16:27] *** Guest13443 left
[16:35] <tbrowder> hi, folks, i'm trying to find where nqp::hllize is defined and what it does. i can find hllize_nfa but not hllize. can anyone help? thnx

[16:43] *** jmerelo joined
[16:46] <vrurg> tbrowder: look in MoarVM src/core/interp.c

[16:48] <tbrowder> vrug: thanks!

[16:50] <vrurg> tbrowder: basically, it boxes a type into what current compiler language understands. I.e. native int -> Int, etc. But I don't know details.

[16:51] *** patrickb left
[17:16] *** japhb joined
[17:45] *** sena_kun joined
[17:46] *** Altai-man_ left
[17:58] *** jmerelo left
[18:20] *** lucasb joined
[18:21] <tyil> oh, GitHub now also has a docker registry for repos

[18:21] <tyil> wonder if I can make my gitlab stuff for r* work there too

[18:26] <El_Che> .tell jmerelo: the doc packages should be up (updated to 2019.07.1)

[18:26] <tellable6> El_Che, and I oop! Backtrace: https://gist.github.com/b8bb95df833c48caa3745496839480fa

[18:26] <El_Che> tell jmerelo: the doc packages should be up (updated to 2019.07.1)

[18:26] <El_Che> .tell jmerelo the doc packages should be up (updated to 2019.07.1)

[18:26] <tellable6> El_Che, and I oop! Backtrace: https://gist.github.com/b79af343ca597244ce35ecea4f84a87a

[18:26] <El_Che> right, I broke tellable6 now

[18:27] <El_Che> "Couldn't decode hexadecimal unicode escape \uD83D\uDE47‚Äç‚ôÇÔ∏è at 606925" <-- WHAT?

[18:28] <tobs> maybe it is related to the aptly named FootgunDB a few frames up? :D

[18:30] <El_Che> tobs: missed it

[18:30] <AlexDaniel> El_Che: that's a bug in JSON::Fast

[18:31] <AlexDaniel> it can't roundtrip some unicode

[18:31] *** tellable6 left
[18:31] <El_Che> I don't get the maile unicode thing

[18:31] <El_Che> is not in my msg

[18:31] <AlexDaniel> yep, its in its db

[18:31] <El_Che> lol

[18:32] <AlexDaniel> so somebody said something with unicode, it saved it, now it can't decode it back

[18:32] <AlexDaniel> it's a pretty serious issue in json::fast IMO

[18:34] *** tellable6 joined
[18:34] <AlexDaniel> El_Che: try again?

[18:34] <El_Che> .tell jmerelo the doc packages should be up (updated to 2019.07.1)

[18:34] <tellable6> El_Che, I'll pass your message to jmerelo

[18:34] <El_Che> \o/

[18:36] <AlexDaniel> El_Che: how's blin?

[18:37] <El_Che> it keep runnig fine for a few hours then I had to stop it because I ran of space

[18:37] <El_Che> looks good to me

[18:37] <El_Che> output is there, tests run fine, etc

[18:38] *** pmurias joined
[18:42] <AlexDaniel> El_Che: out of space?? How much space did it take?

[18:42] <El_Che> it was a small vm

[18:42] <El_Che> the img took quite a lot and then all the run time modules it was testing

[18:42] <El_Che> around 4gb

[19:30] *** MasterDuke joined
[19:43] *** Altai-man_ joined
[19:46] *** sena_kun left
[20:10] <MasterDuke> pmurias: i can't build the regular jvm backend with graal because graal doesn't know java.lang.ProcessHandle. we require java 9, so we'll have to wait for graal to update

[20:43] <pmurias> MasterDuke: when you build the truffle backend ./nqp-j (vs ./nqp-j nqp-truffle.nqp) gives you a nqp that's almost the same as the regular jvm backend from HEAD

[20:45] <MasterDuke> right. then for 10000000 i get 3s with truffle and 6.4s with just nqp-j

[20:53] <pmurias> MasterDuke: that's with counting in the startup?

[20:53] <MasterDuke> yeah, just using `time`

[20:53] *** ExtraCrispy left
[20:55] <MasterDuke> pmurias: do you know how to use jvisualvm (which comes with graal) to profile nqp? i've gotten it running and attached to the nqp process, but i can't seem to get a profile information generated

[20:58] *** pmurias left
[20:58] *** pmurias joined
[21:34] *** Altai-man_ left
[21:35] <MasterDuke> the github description for rakudo says 'Raku on MoarVM and the JVM'. should we add JS to that?

[21:38] <AlexDaniel> yes

[21:38] <AlexDaniel> like this?

[21:42] <MasterDuke> sure. i prefer the oxford comma, but it's not technically required

[21:50] *** lucasb left
[21:51] <AlexDaniel> sure!

[21:52] <AlexDaniel> now people will complain about an unnecessary comma :)

[22:08] <El_Che> People like me :)

[22:09] <El_Che> It feels as redundant as ";" at the end of raku statements :)

[22:11] <lizmat> }

[22:51] <[Coke]> oxford++

[22:59] <AlexDaniel> jnthn: cro release?

[23:00] <AlexDaniel> https://github.com/rakudo/rakudo/issues/1501#issuecomment-548594719

[23:00] *** pmurias left
[23:02] *** pmurias joined
[23:10] <jnthn> AlexDaniel: Probably tomorrow. Today was Comma release. :)

