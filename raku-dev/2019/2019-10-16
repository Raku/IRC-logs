[00:19] *** squashable6 left
[00:22] *** squashable6 joined
[00:45] *** ggoebel joined
[00:53] *** lucasb left
[02:28] <Geth> ¬¶ roast: vrurg++ created pull request #583: Roast Path to Raku

[02:28] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/pull/583

[03:14] *** ggoebel left
[06:24] *** ufobat_ is now known as ufobat

[06:50] *** camelia joined
[07:04] <Geth> ¬¶ problem-solving: hankache assigned to AlexDaniel Issue Perl 6 to Raku timeframe https://github.com/perl6/problem-solving/issues/118

[07:14] *** discord6 joined
[07:18] *** releasable6 left
[07:18] *** releasable6 joined
[07:48] <tyil> vrurg: perhaps he has a macro to sends a message and then immediately quits :p

[09:16] <|Tux|> Rakudo version 2019.07.1-398-gf3dda96a8 - MoarVM version 2019.07.1-268-g07b00bbd7

[09:16] <|Tux|> csv-test-xs-20      0.420 -  0.423

[09:16] <|Tux|> csv-ip5xs           0.757 -  0.771

[09:16] <|Tux|> test-t --race       0.782 -  0.783

[09:16] <|Tux|> test-t              1.737 -  1.766

[09:16] <|Tux|> csv-ip5xs-20        6.407 -  6.634

[09:16] <|Tux|> test                6.964 -  7.400

[09:16] <|Tux|> test-t-20 --race    8.860 -  9.166

[09:16] <|Tux|> csv-parser         20.429 - 20.497

[09:16] <|Tux|> test-t-20          29.641 - 29.702Rakudo version 2019.07.1-398-gf3dda96a8 - MoarVM version 2019.07.1-268-g07b00bbd7

[09:16] <|Tux|> csv-test-xs-20      0.420 -  0.423

[09:16] <|Tux|> csv-ip5xs           0.757 -  0.771

[09:16] <|Tux|> test-t --race       0.782 -  0.783

[09:16] <|Tux|> test-t              1.737 -  1.766

[09:16] <|Tux|> csv-ip5xs-20        6.407 -  6.634

[09:16] <|Tux|> test                6.964 -  7.400

[09:16] <|Tux|> test-t-20 --race    8.860 -  9.166

[09:16] <|Tux|> csv-parser         20.429 - 20.497

[09:16] <|Tux|> test-t-20          29.641 - 29.702

[10:54] * lizmat is coming down with a cold

[10:54] <lizmat> so don't expect too much from me the coming days

[10:55] <jnthn> 'tis the season...

[10:55] <jnthn> Get well soon

[10:57] <lizmat> been out of bed for 1.5 hour, feeling like it's time to go back again  :-(

[11:14] <AlexDaniel> lizmat: so what's the situation with the website, remind me please

[11:14] <AlexDaniel> currently we have perl6.org which talks about Perl¬†6

[11:14] <AlexDaniel> lizmat: now, my understanding is that the easiest solution is to configure raku.org fully and make perl6.org redirect to it

[11:15] <lizmat> and we have raku.org that redirects to it

[11:15] <AlexDaniel> then change ‚ÄúPerl¬†6‚Äù on the website to ‚ÄúRaku‚Äù

[11:15] <lizmat> I would hope that would could make a more visible change when redirecting to raku.org

[11:15] <AlexDaniel> I remember you saying something about creating a new website, but that means we'll be stuck with ‚ÄúPerl¬†6‚Äù on the main website for a very long time

[11:16] <AlexDaniel> currently it has a banner on the main page ‚ÄúPerl 6 'Diwali' 6.d Language Specification Released‚Äù why not simply change that to say something about the rename

[11:16] <lizmat> well, yes, creating a new website, and *then* reverse the redirects, so perl6.org redirects to raku.org

[11:17] <lizmat> I'm not sure about the SEO effects if we would be offering the same content on raku.org

[11:17] <lizmat> even though we would be redirecting from perl6.org to raku.org

[11:18] <AlexDaniel> lizmat: is it my turn to be impatient now? I don't wanna wait for that, I want: reverse the redirects, change Perl¬†6 to Raku, change the banner on the main page, done (further changes are welcome later)

[11:19] <lizmat> and what about modules.perl6.org ?  and other subdomains?

[11:20] <lizmat> really, I think we need to think this through

[11:20] <AlexDaniel> lizmat: all that will redirect to *.raku.org

[11:20] <AlexDaniel> see https://github.com/perl6/problem-solving/issues/118

[11:21] <AlexDaniel> wanna change some text about perl6? Can't fully do it because we don't have urls working

[11:21] <AlexDaniel> and JJ is waiting for the domain for docs

[11:21] <lizmat> which would be in parallel to docs.perl6.org or not?

[11:21] <AlexDaniel> I hope not?

[11:22] <lizmat> in any case, JJ prepared the new site *before* the redirect change

[11:22] <AlexDaniel> why does it need to be in parallel? We're not forking

[11:22] <lizmat> AlexDaniel: please, let me sleep on this for at least one more night

[11:22] <AlexDaniel> I don't see any problem with being redirected to a new domain but being presented with old content, it's fine, we're transitioning

[11:23] <lizmat> the cotton in my head is preventing me from thinking straight enough to see all implications

[11:23] <lizmat> you don't see an issue with it, but Google might...  and then we'd lose all the SEO value that we've built up in the past years

[11:23] <lizmat> that's my worry

[11:24] <lizmat> that's not something you build up easily

[11:26] <AlexDaniel> there's also this, btw https://support.google.com/webmasters/answer/83106?hl=en

[11:28] <lizmat> ok, that looks helpful...

[11:30] <AlexDaniel> it starts with a 301, and the fact that the content is not changing shouldn't hurt

[11:34] *** kawaii joined
[11:38] <lizmat> I think the easiest for me would be to give rba control of the raku.org DNS

[11:38] <AlexDaniel> that's right

[11:38] <kawaii> https://www.irccloud.com/pastebin/FOoWHEXN/

[11:39] <lizmat> this will take some time to change and require cooperation from rba

[11:39] <kawaii> AlexDaniel: ü§î

[11:39] <AlexDaniel> btw who besides rba has access to dns?

[11:40] <lizmat> AlexDaniel: could you coordinate with rba wrt to setting up all necessary DNS for raku.org

[11:40] <AlexDaniel> shareable6: hey what's up

[11:40] <shareable6> AlexDaniel, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Shareable

[11:40] <AlexDaniel> shareable6: HEAD

[11:40] <shareable6> AlexDaniel, https://whateverable.6lang.org/HEAD

[11:40] <lizmat> and then tell me when that's done and what the IP numbers of those DNS servers are ?

[11:41] <AlexDaniel> rba: ‚Üë :)

[11:41] *** shareable6 left
[11:41] <AlexDaniel> kawaii: yep, an issue on my side‚Ä¶ one min

[11:42] <kawaii> ü§≠

[11:42] <AlexDaniel> ohhh all my websites are down

[11:42] <kawaii> excellent 

[11:42] *** shareable6 joined
[11:42] <rba> lizmat: at the moment there is just a *raku.org -> *

[11:43] <rba> lizmat: at the moment there just a raku.org/* -> perl6.org/* isn‚Äòt it?

[11:43] <AlexDaniel> rba: yes

[11:44] <AlexDaniel> kawaii: fixed

[11:44] <rba> lizmat: So we will use Cloudflare as DNS, ok?

[11:44] <kawaii> AlexDaniel: perfect, thanks, will post the results tonight/tomorrow morning ü¶ú

[11:46] <AlexDaniel> u: ü¶ú

[11:46] <unicodable6> AlexDaniel, U+1F99C PARROT [So] (ü¶ú)

[11:46] <AlexDaniel> kawaii: is that‚Ä¶ the right emoji? :D

[11:46] <kawaii> AlexDaniel: would you have preferred ü¶ã?

[11:47] <AlexDaniel> just, why? :D

[11:47] <AlexDaniel> u: ü¶™

[11:47] <unicodable6> AlexDaniel, U+1F9AA OYSTER [So] (ü¶™)

[12:20] *** ggoebel joined
[12:21] <AlexDaniel> ok, Unicode::GCB passes Unicode 12 tests but doesn't pass Unicode 11 tests

[12:21] <AlexDaniel> which makes sense

[12:21] <AlexDaniel> soooo‚Ä¶ check for rakudo version and choose the test file depending on that

[12:21] <AlexDaniel> sounds about right

[12:21] * AlexDaniel will submit a PR

[12:52] <AlexDaniel> why is it self!arity-error(args) and not self!arity-error($args)

[12:52] <AlexDaniel> jnthn: ?

[12:53] <AlexDaniel> ah, it's probably right

[12:53] <jnthn> AlexDaniel: context?

[12:53] <AlexDaniel> jnthn: https://github.com/rakudo/rakudo/issues/3237

[12:53] <tyil> rba: cloudflare for all perl6/raku DNS names?

[12:55] <jnthn> AlexDaniel: Yes, args is the arg capture, $args is extracted from it; probably not the best choice of names.

[12:56] <AlexDaniel> jnthn: I have no idea how this could cause any issues, probably a problem somewhere deeper :(

[12:56] <rba> tyil: Yes, we've moved all to Cloudflare.

[12:56] <AlexDaniel> assuming it was bisected correctly, which looks about right

[12:57] <tyil> :/

[12:57] <AlexDaniel> tyil: any better way to do it?

[12:57] <tyil> anything that's not cloudflare

[12:57] <AlexDaniel> like?

[12:57] <tyil> anything that's not cloudflare -> not cloudflare, any other DNS provider would be a saner choice already

[12:58] <tyil> if privacy is even a minor concern, of course

[12:58] <tyil> and security as well

[12:58] <tyil> CF provides nothing, but costs you all your privacy and brings possible (unknown) security issues

[12:58] <tyil> idk why people keep moving their stuff to it

[12:59] <jnthn> AlexDaniel: Me either, I suspect it's just uncovered an existing issue.

[13:01] <AlexDaniel> I think the logic in Blin is wrong

[13:01] <AlexDaniel> it tests a module 4 extra times on endpoint (normally HEAD) to figure out if it's a flapper

[13:01] <AlexDaniel> which doesn't help if the flapping is a newly introduced regression

[13:02] <AlexDaniel> the real test is to see if it's not flapping on the start point, but then the bisect result will be bogus‚Ä¶ uhhh‚Ä¶

[13:05] *** tejr joined
[13:05] <tejr> Please do not put Perl sites behind CloudFlare

[13:05] <tejr> The looming threat of GitHub is bad enough

[13:06] <lizmat> threat in what way ?

[13:06] *** pmurias joined
[13:07] <AlexDaniel> lizmat: well, github thingie sucks really

[13:07] <tejr> It forces people who don't want to use GitHub to use their perverse workflow

[13:08] <AlexDaniel> no, not that‚Ä¶

[13:08] <tyil> tejr: or can't, because github refuses to (or can't) operate in certain countries

[13:08] <AlexDaniel> the issue is that some projects in their history moved several times for one reason or another

[13:08] <AlexDaniel> and there's nothing special to github that will suggest that it'll last

[13:09] <tejr> It doesn't make sense for a language with such strong free software credentials to lean on shady proprietary tools like GitHub

[13:09] <tejr> Same principle for CloudFlare

[13:09] <AlexDaniel> at some point everyone was using sourceforge, but whoops

[13:09] <tejr> Please don't do it

[13:09] <AlexDaniel> and it's difficult because it's not just git, the biggest problem is the issue tracking

[13:09] <tyil> AlexDaniel: that's also a pretty strong point, even giants fall, and you don't want to sit on it's shoulders when it's going down

[13:09] <lizmat> tejr: what are the alternatives

[13:10] <tejr> To GitHub, or to CloudFlare?

[13:10] <lizmat> well, you can say that we shouldn't do something, but you haven't said what we *should* do

[13:10] <AlexDaniel> lizmat: when it comes to github? Not many‚Ä¶ you can use notabug or something similar, but not a lot of people use it so we're potentially losing contributors

[13:10] <AlexDaniel> same when trying to selfhost it

[13:11] <AlexDaniel> it's an unfortunate tradeoff :(

[13:11] <rba> I choose Cloudflare mainly becaus of the fast DNS.

[13:11] <lizmat> we were selfhosting and then off the air for about a week  :-(

[13:11] <rba> The Cloudflare CND was just a nice add-on.

[13:12] <tyil> rba: "fast" in what way? I could set up a DNS server and have it respond within 20ms, which is pretty fast

[13:12] <tyil> CF CDN is just another means of tracking where users go on the 'net

[13:12] <lizmat> tyil: but would that also be 20ms for someone in Japan?

[13:12] <rba> They provide a anycast network infrastructure around the globe and allow us to switch backend server quickly if needed.

[13:12] <tyil> lizmat: that's what we have caching for

[13:13] <tyil> CF is oftentimes slower than not using any MITM

[13:13] <tyil> the "lets use CF because its guaranteed faster" is a very harmful fallacy

[13:14] <lizmat> fwiw, I run my own DNS and use BuddyDNS for secondaries

[13:14] <rba> tyil: Which server would you recommend?

[13:14] <rba> s/server/service/

[13:14] <tyil> there's thousands, I don't have a specific one to recommend, I just don't recommend Cloudflare if you have any care for privacy or security for you or your visitors

[13:15] <tejr> The meagre benefits of CloudFlare are imo vastly outweighed by the damage its MitM model does to the web

[13:15] <tyil> http://cryto.net/~joepie91/blog/2016/07/14/cloudflare-we-have-a-problem/ starting at "But The Speed" heading

[13:15] <lizmat> if you're really that worried, we should think about supporting DNS over https://

[13:15] <AlexDaniel> as for github, I'm ready to pack my bags and move my stuff once there is a proper alternative, but simply another website won't do it. Maybe some mix of matrix and bittorrent can be great, or something like that, but not just another website‚Ä¶

[13:15] <rba> lizmat: LOL

[13:15] <tyil> lizmat: that's not an improvement whatsoever 

[13:15] <lizmat> it is for privacy, no ?

[13:15] <tyil> DoH is a bad joke played on you by people that don't have your best interest at heart

[13:16] <AlexDaniel> well, not exactly‚Ä¶

[13:16] <tyil> it's designed such that programs will ignore your machine's global settings

[13:16] <tyil> so you can't do any decent filtering

[13:16] <tyil> it's mostly pushed by companies that just want to track your behaviour

[13:16] * rba agrees

[13:17] <lizmat> ok, that just goes to show how much I still know about these things :-)

[13:17] <tyil> it's incredibly hard to control DoH (which is a design "feature"), and it doesn't really solve any problems DNS is having

[13:17] <tyil> DoH is also piggybacking on the entire HTTP protocol, which is bad for performance over a protocol designed for just DNS information

[13:17] <lizmat> well, the problem is e.g. that provider monitor DNS requests

[13:17] <tyil> lizmat: DoH doesn't solve that

[13:17] <tejr> Where "problems" are "we don't have full control of ther web yet" and "DNSSEC is too hard"

[13:17] <lizmat> in the case of our provider, if you do a DNS request for certain domains, they will block your internet access

[13:18] <tyil> and if your ISP did DoH, then they'd still be doing just that

[13:18] <tyil> DoH doesn't solve shady servers

[13:18] <tejr> It has to be plaintext at some point

[13:18] <tejr> Yeah

[13:18] <lizmat> in this providers case, because they think you have a virus

[13:18] <lizmat> but it could be anything, of course

[13:18] <tyil> and in a couple years, Cloudflare will blcok access to certain IPs because they don't play nice with their services

[13:19] <tyil> that's a very possible scenario, there's already such scenarios in the world

[13:19] <tyil> the last thing you want, is to have all internet traffic going through a single provider

[13:19] <tyil> which is what we're moving to by using cloudflare

[13:19] <lizmat> well, I have good experience with using my own primary DNS and have BuddyDNS handle the secondaries

[13:20] <lizmat> is that an idea, rba?

[13:20] <lizmat> if not, why?  :-)

[13:20] <rba> We have discussed this.

[13:20] <rba> I'm open. Yet the following requirements we need:

[13:21] <rba> Access for multiple accounts.

[13:21] <rba> An audit log.

[13:22] <kawaii> There's nothing wrong with Cloudflare, and it gives us a huge amount of control and tooling IMO.

[13:22] <tyil> do we need those things because we've had issues with dns management before, or is this just pre-emptively?

[13:22] <tyil> kawaii: both parts of that statement are incorrect

[13:23] <lizmat> tyil: because we had access issue before

[13:23] <kawaii> tyil: I worked at their London office

[13:23] <tyil> kawaii: sounds like you may be strongly biased, then

[13:23] <tyil> lizmat: that's fair, I didn't know that

[13:23] <rba> See https://github.com/perl6/problem-solving/issues/29

[13:23] <tyil> then I understand wanting those features

[13:23] * tyil clicks

[13:24] <rba> We didn't had DNS control over perl6.org before.

[13:24] <rba> It was just a wildcard record to single ip.

[13:24] <lizmat> and it took a while to find the person in charge of that, thanks to GDPR  

[13:25] <kawaii> Cloudflare gives us access control, an incredible WAF, arguable performance improvments and caching and near foolproof reverse proxy to mask the origin IPs of our services.

[13:26] <tyil> cloudflare gives you troubles if you use anything to improve privacy, their CDNs don't actually improve speed, and a MITM is still a MITM

[13:26] <kawaii> Their analytics are quite reasonable too, though I wonder if we should have some kind of OSS analytics like Matomo on the site

[13:27] <tyil> don't forget cloudbleed was a thing, they're not foolproof over there either

[13:27] <kawaii> I take zero days with a pinch of salt, every software has them, it's not a sensible metric

[13:27] <tyil> but it's even less sensible to praise CF as an infallible entity of good

[13:27] <tyil> they're a company, working for profit

[13:27] <kawaii> I'm running Linix, it takes anyone 5 minutes to get root access on my box if they have a brain

[13:28] <tyil> if you're not paying them gratuitous amounts of money, they'll be getting money from you in a different manner

[13:28] <kawaii> Cloudflare mostly just use the free customers to test beta features on

[13:28] <lizmat> tyil: so, we need a NotForProfit instance handling our DNS needs ?

[13:28] <lizmat> afk for a bit&

[13:28] <tyil> lizmat: not saying it *must* be, but those are generally more trustworthy when it comes to privacy

[13:28] <tyil> the "free" tier is only free until you actually get DDoSed

[13:29] <kawaii> tyil: what specific privacy concerns do you have?

[13:29] <tyil> so there's no free tier if you actually want to use their "features"

[13:29] <kawaii> tyil: not true, Cloudflare offer unlimited DDoS protection and no longer drop the reverse proxy under an attack

[13:29] <tyil> kawaii: constant tracking across the 'net, and them actively blocking people using a privacy vpn

[13:29] <kawaii> That policy change was made in the last year

[13:30] <tyil> I'm also sceptical about people praising it's mitm features, just because they call it a reverse proxy

[13:30] <Geth> ¬¶ roast/master: 4 commits pushed by (Vadim Belman)++

[13:30] <Geth> ¬¶ roast/master: a1125e5717 | Change Perl 6 with Raku where appropriate

[13:30] <Geth> ¬¶ roast/master: 8638b91d09 | Add test for $*RAKU and $?RAKU

[13:30] <Geth> ¬¶ roast/master: 446d83b4d4 | Correct Perl name where missed in the previsous commits

[13:30] <Geth> ¬¶ roast/master: c0740a9261 | Merge pull request #583 from vrurg/roast_582

[13:30] <Geth> ¬¶ roast/master: review: https://github.com/perl6/roast/compare/47e7341341bb...c0740a9261e6

[13:30] <tyil> shows the massive power of marketing

[13:32] <kawaii> RE: "tracking", welcome to 2019, I just made an SSH connection to my server in Japan, I passed through about a dozen if not more routers on the way and I guarentee they all logged that activity. I visited the EFF's website last night too, It's more or less impossible to do anything online without someone knowing.

[13:32] <kawaii> VPNs are snake-oil too unless you're running your own.

[13:32] <tyil> the defeatist mentality isn't going to help this discussion

[13:33] <tyil> it's a sad way to defend harmful practices

[13:33] <kawaii> I'm being realistic, we lost the war against privacy decades ago.

[13:33] <tyil> we didn't, that's just you thinking that because it's easier/more convenient

[13:33] <rba> Regarding DNS: Again I'm open for new ideas. Please put them into https://github.com/perl6/problem-solving/issues/29 and if agree on another DNS provider this is fine for me to.

[13:34] <kawaii> rba: http://freedns.afraid.org/ might be a second choice

[13:34] <tyil> you're also conflating "some people knowing" with "lets give all our information to a for-profit entity without getting any returns for it"

[13:35] <AlexDaniel> vrurg: can you also rebase it, please?

[13:35] <rba> Our current server which hosts most of the websites is really fast and I don't know if the CDN gives much better performance. (At least for region with good internet coverage.)

[13:36] <tyil> rba: CDNs generally have worse performance in areas with worse internet coverage, ironically enough

[13:36] <tyil> so it rarely has a big improvement

[13:36] <AlexDaniel> I actually think we're winning

[13:36] <AlexDaniel> it takes time though

[13:36] <tyil> its an improvement for massive sites with thousands of visitors every second, since they can offload traffic to multiple servers easily

[13:37] <tyil> it's not that the CDN is inherently faster, it's just that you're using more nodes to serve all connections

[13:37] <AlexDaniel> https on most websites, people switching to messengers that do e2e encryption, etc

[13:38] <tyil> AlexDaniel: I dont think people have to switch anymore, even FB messenger and whatsapp support e2e (though they have different issues)

[13:38] <tyil> this idea that "privacy is dead" is incredibly short sighted, and incredibly wrong

[13:38] <kawaii> Messenger and WhatsApp are probably involved in some kind of private key escrow agreement with the CIA

[13:38] <vrurg> AlexDaniel: sorry, don't get you. Rebase where?

[13:38] <rba> For me availability would be more important. And I think about setting up redundant instances of our webhosting in the future.

[13:38] <AlexDaniel> vrurg: your problem-solving PR, can't merge it because it has conflicts

[13:39] <tyil> kawaii: read the part in between brackets of my message

[13:39] <tyil> the world isn't all black and white, please don't stop reading after deciding on a snappy remark

[13:39] <vrurg> Ah, right! That's another reason I wanted to resubmit it yesterday, but was overexhausted... Thanks!

[13:39] <tyil> rba: that sounds like a good thing, tbh

[13:40] <tyil> I'm currently hosting some stuff in my own kubernetes cluster, that might be interesting to solve that problem

[13:40] <kawaii> rba: container services on a kubernetes platform?

[13:40] <kawaii> either that or floating IP managed by corosync/heartbeat to multiple backends

[13:41] <AlexDaniel> vrurg++ # Raku progress

[13:41] <rba> Yes with containers. How to orchestrate them is not decieded yet.

[13:41] <kawaii> Swarm is *okay* but pretty sure it's being deprecated eventually

[13:41] <rba> I think I will open an problem-solving ticket on this topic soon, so everyone can add his experience too.

[13:43] <AlexDaniel> their, yeah

[13:43] * rba is afk.

[13:50] *** lucasb joined
[14:11] <pmurias> kawaii: having read the CIA interogation manuals I guess it's better that they read my messages without keeping me in their basement till I get bored enough to betray all my secrets

[15:07] *** pmurias left
[15:12] *** |Tux| left
[15:30] *** dogbert17 joined
[15:48] *** |Tux| joined
[15:59] *** ufobat left
[16:31] <jdv79> nine: how hard you guess a Inline::PHP would be as ridiculous as it sounds

[16:36] <nine> jdv79: if what I saw last time I looked is still true, hard. PHP doesn't seem to have a real embedding interface unlike Perl or Python.

[16:41] <nine> OTOH there's https://metacpan.org/pod/PHP::Interpreter

[17:08] <vrurg> nine: have a few minutes? I was terrorizing timo yesterday, but he doesn't know how to help.

[17:17] <nine> vrurg: with what?

[17:20] <vrurg> Still the same ‚Äì chasing lost closure context. There is interesting situation with R#2897: it fails because it can't find &infix:<++>. When I dumped outers of the sub I found that it's closure preserves contexts up to the unit level, but not CORE.setting.

[17:20] <nine> Ah, yeah, I've read that

[17:21] <vrurg> I thought that if closure is lost ‚Äì it'd be lost completely.

[17:21] <nine> So, do you know how CORE.setting gets into the contexts of a sub where it's working?

[17:23] <vrurg> The anonymous sub must retain the CORE.setting of Bar.pm6, where it's created. Any other variant is plain wrong.

[17:23] <nine> I concur.

[17:25] <vrurg> Basically, the scenario is more-less clear to me: sub-producer returns a clone of sub. The clone is wrapped with p6capturelex. At this point, as I was tracing things down, CORE.setting is an outer of the sub. But when it gets through BEGIN in intermidiate module ‚Äì the CORE.setting is getting lost.

[17:26] <vrurg> Either some code implcitly stops serializing at unit level, or it stops on the first empty frame between !UNIT_MARKER and CORE. That's my wild guess.

[17:27] <nine> Sounds like you almost have it :)

[17:29] <vrurg> But that's exactly where I'm stuck. I have no idea how BEGIN works.

[17:30] <vrurg> But at least if you can point me at where exactly the contexts are added to SC, it would spare me a couple of hours of research.

[17:31] <nine> vrurg: it's pretty much all about finish_code_object and compile_in_context

[17:32] <vrurg> Anything in moar? Can p6captureouters be related?

[17:32] <nine> p6captureouters is actually not part of more but an extop installed by rakudo

[17:33] <nine> But it's certainly worth looking at it to see if it does any stopping at borders

[17:35] <vrurg> I know it's not from moar. The point is that it refers to moar's API and I didn't have time to look deeper.

[17:35] <vrurg> Ok, anyway, got a little more clues. Thank, nine!

[18:13] *** MasterDuke joined
[18:33] *** cognominal joined
[18:40] <cognominal> This name leads my pet subject. A name should just be a convention for an entity to which was given a unique id at creation. With such convention changing name is a no brainer in flat spaces. In hierarchical space like programming languge, raku is well placed to deal with homonymous names because it has conventions to refer to any name accessible in the hierarchy.

[18:41] <cognominal> * name change

[18:44] *** reportable6 left
[18:49] *** reportable6 joined
[19:10] <vrurg> BTW, notbody yet bothered to give us a pronouncation of `Raku`. I pronounce it more-less the way google translate does it.

[19:12] <AlexDaniel> vrurg: ‚ÄúR√°ku or Rak√∫‚Äù? Last time I asked sena_kun told me it's neither

[19:17] <AlexDaniel> vrurg: I guess just do it the way google translate does

[19:17] <AlexDaniel> that's about right, right?

[19:17] <vrurg> There was also variants like 'ray-kuh' because the first sillable is open. Anyway, google pronounce English variant as `r√°ku`, Japaneese as 'r√°k√∫'

[19:18] <vrurg> I.e. Japaneese sounds like to split sillables, both on their own stressed out.

[19:20] <vrurg> *two split

[19:31] *** cognomin_ joined
[19:33] *** cognominal left
[19:51] <AlexDaniel> lizmat: https://github.com/perl6/problem-solving/issues/118#issuecomment-542756891

[19:56] <Geth> ¬¶ Blin: debe6760fd | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Blin/Processing.pm6

[19:56] <Geth> ¬¶ Blin: Don't ignore flapping regressions

[19:56] <Geth> ¬¶ Blin: 

[19:56] <Geth> ¬¶ Blin: It used to test the end point to see if the module is flapping, which

[19:56] <Geth> ¬¶ Blin: is definitely wrong if the flappiness is a new bug in the

[19:56] <Geth> ¬¶ Blin: compiler. Now it will detect flapping regressions, but it won't bisect

[19:56] <Geth> ¬¶ Blin: them correctly yet (which is arguably better than just ignoring them).

[19:56] <Geth> ¬¶ Blin: review: https://github.com/perl6/Blin/commit/debe6760fd

[19:57] *** ufobat joined
[19:58] <discord6> <Aearnus> hey, I found something LTA but I couldn't find time to investigate it

[19:59] <discord6> <Aearnus> if you use a module after using Test, and Raku can't find the module, it exits with nothing but the message "Failed"

[20:00] <discord6> <Aearnus> It makes sense as to why (I guess a module not being included would make all the tests fail), but it doesn't seem like a sane default to me at all -- at least there should be some info as to what failed

[20:10] <nine> m: use Test; use FooBar;

[20:10] <camelia> rakudo-moar f3dda96a8: OUTPUT: ¬´===SORRY!===‚ê§Could not find FooBar at line 1 in:‚ê§    inst#/home/camelia/.perl6‚ê§    inst#/home/camelia/rakudo-m-inst-2/share/perl6/site‚ê§    inst#/home/camelia/rakudo-m-inst-2/share/perl6/vendor‚ê§    inst#/home/camelia/rakudo-m-inst-2/share/per‚Ä¶¬ª

[20:11] <nine> I think the "Failed" has a different reason

[20:18] <discord6> <Aearnus> huh. Perhaps it was if the module I imported happened to throw an exception

[20:18] <discord6> <Aearnus> I think that was it

[20:19] <discord6> <Aearnus> m: module Foo { fail }; use Test; use Foo;

[20:19] <evalable6> Aearnus, rakudo-moar f3dda96a8: OUTPUT: ¬´(exit code 1) ===SORRY!===‚ê§Could not find Foo at line 1 in:‚ê§    file#/home/bisectable/git/‚Ä¶¬ª

[20:19] <evalable6> Aearnus, Full output: https://gist.github.com/bd018711ff4c0d3dd3728e0158c2d623

[20:22] <discord6> <Aearnus> m: module Foo { fail }; use Test; need Foo;

[20:22] <evalable6> Aearnus, rakudo-moar f3dda96a8: OUTPUT: ¬´(exit code 1) ===SORRY!===‚ê§Could not find Foo at line 1 in:‚ê§    file#/home/bisectable/git/‚Ä¶¬ª

[20:22] <evalable6> Aearnus, Full output: https://gist.github.com/cf45a396dc07ccfd1387006d5a196da8

[20:22] <discord6> <Aearnus> hmm. I'll put together a full proof of concept later

[20:37] *** cognomin_ left
[20:54] *** ggoebel left
[21:23] *** ggoebel joined
[21:32] *** ggoebel left
[21:38] *** patrickb joined
[21:43] <patrickb> .

[21:43] <tellable6> 2019-10-16T07:06:12Z #perl6-dev <nine> patrickb since you're already at PERL6_HOME and CompUnit::Repository: what's your plan to bring the Inline::Perl5 using spectests back?

[21:45] <patrickb> .tell nine I didn't know there was a problem. Is there a bug report or something I can read up on?

[21:45] <tellable6> patrickb, I'll pass your message to nine

[22:34] *** patrickb left
[23:06] *** MasterDuke left
