[00:18] *** benjif joined
[01:09] *** reportable6 left
[01:09] *** reportable6 joined
[01:32] *** benjif left
[02:47] *** ggoebel left
[03:24] *** benjif joined
[04:25] *** benjif left
[04:50] *** Kaiepi left
[04:57] *** Kaiepi joined
[06:20] *** [TuxCM] joined
[06:25] *** [TuxCM] left
[06:30] *** benjif joined
[06:30] *** benjif left
[06:31] *** benjif joined
[06:59] *** benjif left
[07:13] *** squashable6 left
[07:16] *** squashable6 joined
[07:59] *** [TuxCM] joined
[08:19] *** [TuxCM] left
[08:32] *** [TuxCM] joined
[08:34] <nine> Ooooh...it's the optimizer! The bug appears at optimization level 2

[08:34] <tellable6> 2019-10-19T22:35:11Z #raku-dev <patrickb> nine wrt the Inline::Perl5 with `make test`. I think I have an idea what's going wrong and what needs to be done to fix it. I'll report back in the next days.

[08:40] <nine> And suddenly the inexplicable behaviour makes sense. All the subtle changes in the code prevent static inlining of the original function body.

[08:50] <nine> Also interesting: the argument to the native trait leads to an additional block getting added to the code. This inner block then prevents inlining.

[08:51] <nine> We also only inline if all arguments are native types (that's why using Pointer fixes things)

[09:01] *** sena_kun joined
[09:22] <Geth> ¦ rakudo: d662912e21 | (Stefan Seifert)++ | 2 files

[09:22] <Geth> ¦ rakudo: Fix optimizer interfering with some native subs

[09:22] <Geth> ¦ rakudo: 

[09:22] <Geth> ¦ rakudo: When a native sub has only native arguments and is declared as "is native"

[09:22] <Geth> ¦ rakudo: without args (i.e. already loaded library like libc) and has a very simple

[09:22] <Geth> ¦ rakudo: function body like {} or { * } but not { ... } or other stub markers, the

[09:22] <Geth> ¦ rakudo: optimizer could statically inline the original function body, circumventing

[09:22] <Geth> ¦ rakudo: the call to the native function.

[09:22] <Geth> ¦ rakudo: 

[09:22] <Geth> ¦ rakudo: Mark all native subs as soft, to prevent static inlining.

[09:22] <Geth> ¦ rakudo: Fixes GH #3244

[09:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d662912e21

[09:26] <Geth> ¦ rakudo: c1ccff8224 | (Stefan Seifert)++ | src/Perl6/Metamodel/Naming.nqp

[09:26] <Geth> ¦ rakudo: Revert "Fix another MOP-related StrLexRef serialization bug"

[09:26] <Geth> ¦ rakudo: 

[09:26] <Geth> ¦ rakudo: This reverts commit 9b181a700e51c26802dce8b48ef2d234c303eb66 as that change

[09:26] <Geth> ¦ rakudo: breaks Inline::Perl5

[09:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c1ccff8224

[09:26] <nine> Kaiepi: ^^^

[09:33] <nine> releasable6: status

[09:33] <releasable6> nine, Next release will happen when it's ready. 5 blockers. Unknown changelog format

[09:33] <releasable6> nine, Details: https://gist.github.com/8a60c412bc444895d233da1b90d9a331

[09:54] *** [Coke]_ joined
[09:54] *** [Coke]_ left
[09:54] *** [Coke]_ joined
[09:55] *** pmurias joined
[09:55] *** [Coke] left
[09:56] *** ilogger2 left
[09:58] *** ilogger2 joined
[10:09] *** tony-o joined
[10:58] <nine> releasable6: status

[10:58] <releasable6> nine, Next release will happen when it's ready. 4 blockers. Unknown changelog format

[10:58] <releasable6> nine, Details: https://gist.github.com/801cdfb7a7e8941febd8cb2cd105334a

[11:15] <nine> releasable6: status

[11:15] <releasable6> nine, Next release will happen when it's ready. 3 blockers. Unknown changelog format

[11:15] <releasable6> nine, Details: https://gist.github.com/ebba78dc916d3ed69e163e19fd9e4e23

[11:18] *** pmurias joined
[11:30] *** pmurias left
[11:41] *** pmurias joined
[11:46] <Geth> ¦ rakudo: 2dd570dee4 | (Stefan Seifert)++ | src/core.c/CompUnit/PrecompilationRepository.pm6

[11:46] <Geth> ¦ rakudo: Fix leaking an open file handle when re-precompiling

[11:46] <Geth> ¦ rakudo: 

[11:46] <Geth> ¦ rakudo: When checking if another process has precompiled the exact module that we need

[11:46] <Geth> ¦ rakudo: precompiled while we were waiting for the lock on the precomp repository, we

[11:46] <Geth> ¦ rakudo: opened the unit but never closed it. This would trip up Windows which refuses

[11:46] <Geth> ¦ rakudo: to rename over an open file. Fix by ensuring that we close the unit when we're

[11:46] <Geth> ¦ rakudo: done with our checks.

[11:46] <Geth> ¦ rakudo: 

[11:46] <Geth> ¦ rakudo: Hopefully fixes GH #3170

[11:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2dd570dee4

[11:48] <nine> I'm pretty sure this takes care of another release blocker. Just needs confirmation by a test on Windows.

[11:48] <[TuxCM]> Rakudo version 2019.07.1-422-gc1ccff822 - MoarVM version 2019.07.1-284-gc61236f96

[11:48] <[TuxCM]> csv-test-xs-20      0.422 -  0.425

[11:48] <[TuxCM]> csv-ip5xs           0.749 -  0.753

[11:48] <[TuxCM]> test-t --race       0.788 -  0.791

[11:48] <[TuxCM]> test-t              1.740 -  1.751

[11:48] <[TuxCM]> csv-ip5xs-20        6.329 -  6.640

[11:48] <[TuxCM]> test                6.922 -  7.149

[11:48] <[TuxCM]> test-t-20 --race    8.776 -  9.177

[11:48] <[TuxCM]> csv-parser         20.919 - 21.135

[11:48] <[TuxCM]> test-t-20          29.968 - 30.156

[11:49] <nine> That just leaves the build system issue and that weird telemetry in MoarVM related thing, for both of which there are people more qualified than me. Guess I've earned a visit to the sauna now :)

[11:50] <lizmat> nine++

[12:44] *** lucasb joined
[12:46] *** pmurias left
[13:40] <Geth> ¦ roast: samcv++ created pull request #589: Add samemark tests for prepend and flags

[13:40] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/589

[13:40] <Geth> ¦ rakudo: samcv++ created pull request #3251: .samemark: Support emoji, flags and Prepend

[13:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3251

[14:13] *** ZzZombo_ joined
[14:13] *** ZzZombo_ is now known as ZzZombo

[14:25] *** Kaiepi joined
[14:37] *** Kaiepi left
[14:38] *** Kaiepi joined
[14:38] *** softmoth joined
[14:39] *** Kaiepi left
[14:39] *** Kaiepi joined
[14:40] *** ggoebel joined
[14:52] *** Altai-man_ joined
[14:55] <Kaiepi> argh, my commit broke Inline::Perl5?

[14:56] <Kaiepi> i'm guessing the actual fix for this is something else because i'm pretty sure this used to behave differently:

[14:58] <Kaiepi> bisectable6, BEGIN { my str $name = 'foo'; our Mu:U $subset := Metamodel::SubsetHOW.new_type: :$name; $*W.add_object_if_no_sc: $subset }; say $subset.^name.WHAT

[14:58] <bisectable6> Kaiepi, On both starting points (old=2015.12 new=2dd570d) the exit code is 1 and the output is identical as well

[14:58] <bisectable6> Kaiepi, https://gist.github.com/4424d7f1796b9ec35775baaa9a4128b5

[14:58] <Kaiepi> bisectable6, BEGIN { my str $name = 'foo'; our $subset := Metamodel::SubsetHOW.new_type: :$name; $*W.add_object_if_no_sc: $subset }; say $subset.^name.WHAT

[14:58] <bisectable6> Kaiepi, On both starting points (old=2015.12 new=2dd570d) the exit code is 1 and the output is identical as well

[14:58] <bisectable6> Kaiepi, https://gist.github.com/6c6def919c696ea9678be2531a6f4fb0

[14:58] <Kaiepi> bisectable6, BEGIN { my str $name = 'foo'; our $subset := Metamodel::SubsetHOW.new_type: :$name, :refinee(Any), :refinement(Str | Int); $*W.add_object_if_no_sc: $subset }; say $subset.^name.WHAT

[14:58] <bisectable6> Kaiepi, On both starting points (old=2015.12 new=2dd570d) the exit code is 1 and the output is identical as well

[14:58] <bisectable6> Kaiepi, Output on both points: «04===SORRY!04=== Error while compiling /tmp/qTPKARmtaO␤Variable '$subset' is not declared␤at /tmp/qTPKARmtaO:1␤------> 03$*W.add_object_if_no_sc: $subset }; say 08⏏04$subset.^name.WHAT␤»

[14:59] <Kaiepi> bisectable6, my Mu:U $subset; BEGIN { my str $name = 'foo'; $subset := Metamodel::SubsetHOW.new_type: :$name, :refinee(Any), :refinement(Str | Int); $*W.add_object_if_no_sc: $subset }; say $subset.^name.WHAT

[14:59] <bisectable6> Kaiepi, On both starting points (old=2015.12 new=2dd570d) the exit code is 0 and the output is identical as well

[14:59] <bisectable6> Kaiepi, Output on both points: «(Str)␤»

[15:00] <Kaiepi> hm

[15:01] <Kaiepi> when does StrLexRef pop up?

[15:12] <Kaiepi> in general, i mean

[15:18] <lizmat> when you pass a native str to a sub that accepts the parameter raw ?

[15:19] <lizmat> aka: my str $a = "foo"; sub a(\b) { }; a $a

[15:19] <lizmat> ?

[15:23] <AlexDaniel> nine: maybe you can help them: https://github.com/frithnanth/perl6-Math-FFT-Libfftw3/issues/1#issuecomment-544262136

[15:30] <Kaiepi> that turned out to be the issue lizmat 

[15:32] <Kaiepi> i was declaring $name as a str rather than a Str:D because i thought i'd need to since the MOP is nqp

[15:38] <Kaiepi> is not being able to use native strings with the MOP in raku modules worth making an issue over?

[15:40] <timotimo> m: sub takes(\a) { say a.WHAT }; my str $a = "hi"; takes($a)

[15:40] <camelia> rakudo-moar 2dd570dee: OUTPUT: «(Str)␤»

[15:40] <timotimo> m: sub takes(\a) { say a.VAR.WHAT }; my str $a = "hi"; takes($a)

[15:40] <camelia> rakudo-moar 2dd570dee: OUTPUT: «(Str)␤»

[15:40] <timotimo> m: sub takes(\a is rw) { say a.VAR.WHAT }; my str $a = "hi"; takes($a)

[15:40] <camelia> rakudo-moar 2dd570dee: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Can only use 'is rw' on a scalar ('$' sigil) parameter, not 'a'␤at <tmp>:1␤»

[15:41] <timotimo> m: sub takes($a is rw) { say $a.VAR.WHAT }; my str $a = "hi"; takes($a)

[15:41] <camelia> rakudo-moar 2dd570dee: OUTPUT: «(StrLexRef)␤»

[15:41] <timotimo> m: sub takes($a is rw) { say $a.VAR.WHAT }; my str $a = "hi"; takes($a<>)

[15:41] <camelia> rakudo-moar 2dd570dee: OUTPUT: «Parameter '$a' expected a writable container, but got Str value␤  in sub takes at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:41] <timotimo> m: sub takes($a is raw) { say $a.VAR.WHAT }; my str $a = "hi"; takes($a<>)

[15:41] <camelia> rakudo-moar 2dd570dee: OUTPUT: «(Str)␤»

[15:41] <timotimo> m: sub takes($a is raw) { say $a.VAR.WHAT }; my str $a = "hi"; takes($a)

[15:41] <camelia> rakudo-moar 2dd570dee: OUTPUT: «(Str)␤»

[15:41] <timotimo> just raw doesn't seem to give you a ref, at least not in perl6 code

[15:41] <Kaiepi> the issue i was having only happened during precomp

[15:41] <Kaiepi> so you'd need to test with a module

[15:43] *** pmurias joined
[15:46] *** Xliff joined
[15:46] <Xliff> \o

[15:46] <Kaiepi> o/

[16:06] <pmurias> \o

[16:07] <Geth> ¦ nqp/truffle: 8fad04b0c4 | (Paweł Murias)++ | 39 files

[16:07] <Geth> ¦ nqp/truffle: [truffle] Use VMArray instances instead of NQPList

[16:07] <Geth> ¦ nqp/truffle: 

[16:07] <Geth> ¦ nqp/truffle: To do that we implement nqp::sethllconfig (and some other things)

[16:07] <Geth> ¦ nqp/truffle: so the type objects we need get installed appropiately.

[16:07] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/8fad04b0c4

[16:07] <Geth> ¦ nqp/truffle: 097e7436d3 | (Paweł Murias)++ | 2 files

[16:07] <Geth> ¦ nqp/truffle: [truffle] Set hll role on BOOTArray

[16:07] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/097e7436d3

[16:18] <Geth> ¦ rakudo/ugexe-patch-2: 91c7b28cb3 | (Nick Logan)++ (committed using GitHub Web editor) | t/04-nativecall/00-misc.t

[16:18] <Geth> ¦ rakudo/ugexe-patch-2: FIx test count failure on windows

[16:18] <Geth> ¦ rakudo/ugexe-patch-2: review: https://github.com/rakudo/rakudo/commit/91c7b28cb3

[16:18] <Geth> ¦ rakudo: ugexe++ created pull request #3252: FIx test count failure on windows

[16:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3252

[16:38] *** softmoth left
[16:49] *** Altai-man_ left
[17:08] *** softmoth joined
[17:46] <Geth> ¦ rakudo: 91c7b28cb3 | (Nick Logan)++ (committed using GitHub Web editor) | t/04-nativecall/00-misc.t

[17:46] <Geth> ¦ rakudo: FIx test count failure on windows

[17:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/91c7b28cb3

[17:46] <Geth> ¦ rakudo: bfaec97417 | niner++ (committed using GitHub Web editor) | t/04-nativecall/00-misc.t

[17:46] <Geth> ¦ rakudo: Merge pull request #3252 from rakudo/ugexe-patch-2

[17:46] <Geth> ¦ rakudo: 

[17:46] <Geth> ¦ rakudo: Fix test count failure on windows

[17:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bfaec97417

[19:08] *** Kaiepi left
[19:11] *** Kaiepi joined
[19:21] *** pmurias left
[19:23] *** pmurias joined
[19:48] <Geth> ¦ nqp: 511266a0cb | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/MOAR_REVISION

[19:48] <Geth> ¦ nqp: [MoarVM Bump] Brings 2 commits

[19:48] <Geth> ¦ nqp: 

[19:48] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2019.07.1-283-ge594fbcbd...2019.07.1-285-g0f0e6d3a2

[19:48] <Geth> ¦ nqp: 0f0e6d3a2 Work around MSVC not coping well with preprocessor instructions inside an MVMROOT

[19:48] <Geth> ¦ nqp: c61236f96 Fix access to freed memory in resolve_using_guards

[19:48] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/511266a0cb

[19:48] <Geth> ¦ rakudo: bf318db684 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/NQP_REVISION

[19:48] <Geth> ¦ rakudo: [NQP Bump] 511266a0c [MoarVM Bump] Brings 2 co […]

[19:48] <Geth> ¦ rakudo: 

[19:48] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2019.07.1-150-g0d7250f00...2019.07.1-151-g511266a0c

[19:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bf318db684

[20:00] *** Xliff left
[20:49] *** Kaiepi left
[20:50] *** Kaiepi joined
[20:59] <pmurias> jnthn: do you recommend just copying over the IO abstraction to nqp-truffle?

[21:00] <pmurias> StandardWriteHandle, IIOClosable etc.

[21:03] *** sena_kun joined
[21:13] *** tellable6 joined
[21:15] <Geth> ¦ roast/elems-on-seq-cache: 9f07cb4b57 | Altai-man++ | S32-list/seq.t

[21:15] <Geth> ¦ roast/elems-on-seq-cache: Test caching by elems call on Seq

[21:15] <Geth> ¦ roast/elems-on-seq-cache: 

[21:15] <Geth> ¦ roast/elems-on-seq-cache: Closes https://github.com/rakudo/rakudo/issues/2976

[21:15] <Geth> ¦ roast/elems-on-seq-cache: review: https://github.com/perl6/roast/commit/9f07cb4b57

[21:16] *** ggoebel left
[21:16] <Geth> ¦ roast: Altai-man++ created pull request #590: Test caching by elems call on Seq

[21:16] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/590

[21:23] *** sena_kun left
[22:21] <Geth> ¦ nqp/truffle: 4 commits pushed by (Paweł Murias)++

[22:21] <Geth> ¦ nqp/truffle: f6608fddfd | [truffle] smart stringify type objects

[22:21] <Geth> ¦ nqp/truffle: 4c745411c5 | [truffle] Use the regular NQP setting rather then a simplified one

[22:21] <Geth> ¦ nqp/truffle: e79c9dc5ab | [truffle] Implement nqp::setboolspec

[22:21] <Geth> ¦ nqp/truffle: 2a60c28918 | [truffle] Implement nqp::getstdout

[22:21] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/compare/097e7436d3dd...2a60c28918dc

[22:53] *** pmurias left
[22:54] *** pmurias joined
[22:54] *** lucasb left
[23:05] <Geth> ¦ rakudo: tbrowder++ created pull request #3253: Improve error msgs: invalid open bracket, declarator blocks

[23:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3253

[23:11] <Geth> ¦ rakudo/ugexe-patch-3: feb6d43d3a | (Nick Logan)++ (committed using GitHub Web editor) | appveyor.yml

[23:11] <Geth> ¦ rakudo/ugexe-patch-3: Add debug output for appveyor

[23:11] <Geth> ¦ rakudo/ugexe-patch-3: review: https://github.com/rakudo/rakudo/commit/feb6d43d3a

[23:56] *** pmurias left
[23:59] *** Kaiepi left
[23:59] *** Kaiepi joined
