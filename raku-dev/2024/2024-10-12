[00:19] <tbrowder> thnx

[04:59] *** kjp left
[05:00] *** kjp joined
[05:01] *** kjp left
[05:01] *** kjp joined
[05:55] <Geth> ¦ rakudo/main: 6528f868a4 | (Timo Paulssen)++ | t/04-nativecall/25-embedded.t

[05:55] <Geth> ¦ rakudo/main: Fix new nativecall test not finding its compiled library

[05:55] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6528f868a4

[10:58] *** sena_kun joined
[11:46] <Geth> ¦ rakudo/main: 0003191236 | (Elizabeth Mattijsen)++ | 2 files

[11:46] <Geth> ¦ rakudo/main: Add support for non-consecuive ranges in .succ/.pred

[11:46] <Geth> ¦ rakudo/main: 

[11:46] <Geth> ¦ rakudo/main: The codepoints for ⁰¹²³⁴⁵⁶⁷⁸⁹ are **not** consecutive, and the

[11:46] <Geth> ¦ rakudo/main: script generating the lookups did not handle that well.  It does now.

[11:46] <Geth> ¦ rakudo/main: 

[11:46] <Geth> ¦ rakudo/main: Fixes #3379

[11:46] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0003191236

[11:53] <Geth> ¦ roast: a4dd452e7e | (Elizabeth Mattijsen)++ | S03-operators/increment.t

[11:53] <Geth> ¦ roast: Add tests for #3379

[11:53] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/a4dd452e7e

[12:08] <tbrowder> lizmat: apparently i never started building the tests for log2, lbut i have them fleshed out in the right place and my test harness works...hope will be done by monday

[12:57] <ugexe> i still don't follow why we should have e.g. log2, log10 etc. something like python does math.log(X, 2)

[12:59] <ugexe> that covers any base

[12:59] <ugexe> something log2, log10 cant do

[13:01] <ugexe> if we want to argue about existing naming conventions stuff like foo2 x3 etc make me think of syscall naming convention, i.e. open2 or open3

[13:04] <ugexe> i guess those are actually open(2) open(3) though

[13:04] <ugexe> anyway dont let me stop it, i just dont really get the reason

[13:06] <ugexe> note that I dont really see writing log2(100) as being better looking than log(100, 2) to be a valid argument as it seems entirely subjective

[13:11] <ab5tract> quick question: what are the requirements for a valid package name? Are the same for other identifiiers? I was pleasantly surprised to see that macOS can create files like "%$#^.rakumod", but this also means I can't just lean on valid file names for validating package names

[13:13] <ugexe> i believe it is the same as other identifiers. and of course what is a valid file name anyway

[13:14] <ab5tract> yeah, it will have to pass both

[13:15] <ab5tract> though I guess the filename part is only relevant for packages that want to be in their own file

[13:16] <ugexe> if you use META6.json you can name the file something other than the package name

[13:16] <ugexe> and i thought there was a way to do something like

[13:17] <ugexe> require ...:name<Foo>

[13:17] <ugexe> but now that i think about it I don't know if that works for paths

[13:18] <ugexe> oh right its

[13:18] <ugexe> require SomeOtherName:file<...>

[13:30] <ab5tract> ugexe: speaking of META6.json, I was wondering what the closest thing we might have to a specification would be

[13:31] <ab5tract> I had to do a lot of dancing to craft a data class (record) that could be deployed as a deserialization target from JSON

[13:32] <ab5tract> I found some stuff from `specs` but it felt pretty out of date

[13:34] <ab5tract> it would be interesting but probably impossible to migrate to a new, fully spec'd version (`meta.raku.json` or so)

[13:37] <ugexe> https://docs.perl6.org/language/modules#index-entry-META6.json-META6.json probably

[13:38] <ugexe> although that isn't exactly accurate either

[13:38] <ugexe> source-url isn't part of the spec that raku itself cares about. that would be an ecosystem specific addition

[13:40] <ugexe> source-url should probably be called download-url or something

[13:40] <ab5tract> hmm, yeah. since repo-url also exists

[13:41] <ugexe> the original specs had a support section with e.g. support.source, support.bugtracker etc which I would consider part of the core raku spec

[13:41] <ab5tract> the contact object seems slightly over-developed

[13:41] <ab5tract> ah, that's what I meant with the above

[13:41] <ab5tract> do you mean would or would not consider?

[13:44] <ugexe> i would consider it part of the core. because it doesn't entirely imply it has everything needed regarding e.g. packaging and distributing. it is indeed just some meta data. it does allow things like `zef browse Net::HTTP bugtracker` `zef browse Net::HTTP source` to open a browser window to the appropriate location

[13:46] <ugexe> for example I don't add source-url to my META6.json - https://github.com/ugexe/zef/blob/0e4e9de51c9d2ad940810a9ed3df508b26821dfa/META6.json#L60-L64

[13:46] <ab5tract> right, makes sense

[13:47] <ugexe> zef will use source-url if it exists, and support.source if not

[13:47] <ugexe> but i write my meta6.json like that because i expect an ecosystem to add the source-url field itself

[13:47] <ugexe> i dont know what the tar file is going to be named on fez (whenever I get around to uploading it to fez)

[13:48] <ugexe> and even when I do, i think it is still useful to provide the link to the repository

[14:45] <Geth> ¦ roast: tbrowder self-assigned Need complex number tests for log, log2, and log10 https://github.com/Raku/roast/issues/862

[14:56] <Geth> ¦ rakudo/main: 03659cd0f9 | (Elizabeth Mattijsen)++ | 2 files

[14:56] <Geth> ¦ rakudo/main: Add clocks and mouses to magic inc/dec

[14:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/03659cd0f9

[15:12] <Geth> ¦ roast: fc45a415d1 | (Elizabeth Mattijsen)++ | S06-multi/type-based.t

[15:12] <Geth> ¦ roast: Add test for #3485

[15:12] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/fc45a415d1

[15:55] <Geth> ¦ roast: 9d93090fee | (Elizabeth Mattijsen)++ | S14-traits/routines.t

[15:55] <Geth> ¦ roast: Add test for #3573

[15:55] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/9d93090fee

[16:08] <Geth> ¦ rakudo/main: d2f12f3520 | (Elizabeth Mattijsen)++ | t/12-rakuast/xx-fixed-in-rakuast.rakutest

[16:08] <Geth> ¦ rakudo/main: Add tests for #3574

[16:08] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d2f12f3520

[16:16] *** lizmat_ joined
[16:19] *** lizmat left
[17:20] <timo> unicodable6__: 🖰🖱

[17:20] <unicodable6__> timo, U+1F5B0 TWO BUTTON MOUSE [So] (🖰)

[17:20] <unicodable6__> timo, U+1F5B1 THREE BUTTON MOUSE [So] (🖱)

[17:32] <ab5tract> iOS renders the 3 button as the “no button” Mac mouse and fails on the two button

[17:33] <ab5tract> Some animosities will never die I guess 😂

[17:35] <timo> 🐀 <- no button mouse

[18:19] <timo> i wonder if i could inspire someone to implement OpenTelemetry Tracing ...

[18:38] <timo> greppable6: vmeventsubscribe

[18:38] <greppable6> timo, Found nothing!

[18:39] <timo> quotable: vmeventsubscribe

[18:39] <quotable6> timo, OK, working on it! This may take up to three minutes (4582161 messages to process)

[18:39] <quotable6> timo, Something went wrong (Broken archive)

[18:39] <timo> oops? hmm.

[18:45] <timo> i don't think anybody has code out "in the wild" that uses vmeventsubscribe, so i'm considering changing what it spits out

[22:13] *** lizmat_ left
[22:13] *** lizmat joined
[22:54] *** sena_kun left
