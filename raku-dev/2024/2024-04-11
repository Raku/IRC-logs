[00:07] <SmokeMachine> it seems the new release is breaking Red... any idea what could be causing this? https://github.com/FCO/Red/issues/574

[01:20] <vrurg> SmokeMachine: lizmat will take care of this. AttrX::Mooish is affected too. Seems like something went wrong with BUILDPLAN when a metamodel class gets a mixin via 'does'

[01:20] <vrurg> Possibly not 'does' alone.

[01:29] <SmokeMachine> vrurg: thanks for answering! It seems it’s on very good hands! Thanks!

[01:57] *** vrurg_ joined
[01:59] *** vrurg left
[04:04] *** andinus left
[04:04] *** andinus joined
[08:35] *** sena_kun joined
[08:46] <lizmat> argh...  how did Blin not catch this  :-(

[10:19] <Geth> ¦ nqp/main: a2c05d7f3e | (Elizabeth Mattijsen)++ | src/how/NQPClassHOW.nqp

[10:19] <Geth> ¦ nqp/main: More tweaking fetching MRO

[10:19] <Geth> ¦ nqp/main: 

[10:19] <Geth> ¦ nqp/main: Alas, c92ed85ec11e2 didn't prevent the REA from crashing every now

[10:19] <Geth> ¦ nqp/main: and then.  Basically revert it and add a little bit of debugging

[10:19] <Geth> ¦ nqp/main: code that will sleep .1 second and then try again: this on the

[10:19] <Geth> ¦ nqp/main: assumption that it is somehow a race condition that makes the

[10:19] <Geth> ¦ nqp/main: $!mro attribute being nqp::null momentarily.

[10:19] <Geth> ¦ nqp/main: 

[10:19] <Geth> ¦ nqp/main: If this code still fires, I guess we can rule out a simple race

[10:19] <Geth> ¦ nqp/main: condition, but have to assume something more nefarious.

[10:19] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/a2c05d7f3e

[10:42] <Geth> ¦ rakudo/main: 3de8e110ac | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[10:42] <Geth> ¦ rakudo/main: Bump NQP to get REA crash trigger

[10:42] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3de8e110ac

[10:42] <Geth> ¦ rakudo/main: 7235b599bb | (Elizabeth Mattijsen)++ | lib/BUILDPLAN.rakumod

[10:42] <Geth> ¦ rakudo/main: Make BUILDPLAN resilient towards custom HOWs

[10:42] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7235b599bb

[11:25] *** patrickb left
[11:25] *** patrickb joined
[11:26] *** patrickb left
[11:28] *** patrickb joined
[11:41] <lizmat> greppable6: :$compiler_services

[11:41] <greppable6> lizmat, Found nothing!

[11:41] <lizmat> greppable6: $compiler_services

[11:41] <greppable6> lizmat, Found nothing!

[11:41] <lizmat> which implies AttrX::Mooish is not in the greppable6 set 

[11:45] <Geth> ¦ rakudo/main: f329c52d29 | (Elizabeth Mattijsen)++ | src/core.c/Mu.rakumod

[11:45] <Geth> ¦ rakudo/main: Use low-level invokability test

[11:45] <Geth> ¦ rakudo/main: 

[11:45] <Geth> ¦ rakudo/main: Instead of testing for HLL Callable alone.  This fixes the issue of

[11:45] <Geth> ¦ rakudo/main: having low level code blocks in a BUILDPLAN causing havoc, as found

[11:45] <Geth> ¦ rakudo/main: with problems in AttrX::Mooish and possibly Red.

[11:45] <Geth> ¦ rakudo/main: 

[11:45] <Geth> ¦ rakudo/main: This is probably caused by the removal of some nqp::hllize() calls

[11:45] <Geth> ¦ rakudo/main: in the recent streamlining.  Rather than reverting those changes,

[11:45] <Geth> ¦ rakudo/main: it feels better to do this change, as it also has a significant

[11:45] <Geth> ¦ rakudo/main: effect on performance in some cases (e.g. during "make spectest").

[11:45] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f329c52d29

[11:45] <lizmat> vrurg_ SmokeMachine ^^

[12:15] <Geth> ¦ nqp/main: abf15c4086 | (Elizabeth Mattijsen)++ | 2 files

[12:15] <Geth> ¦ nqp/main: Remove hint, as per jnthn++ suggestion

[12:15] <Geth> ¦ nqp/main: 

[12:15] <Geth> ¦ nqp/main: Also revert a2c05d7f3e6bbe as it did *not* fire on the second nqp::isnull

[12:15] <Geth> ¦ nqp/main: check, but *still* fired on the nqp::elems() check.  Which sort of rules

[12:15] <Geth> ¦ nqp/main: out any type of race condition on setting / fetching the attribute.

[12:15] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/abf15c4086

[12:43] <Geth> ¦ rakudo/main: 36183f8630 | (Elizabeth Mattijsen)++ | 2 files

[12:43] <Geth> ¦ rakudo/main: Bump NQP to get latest hint fix

[12:43] <Geth> ¦ rakudo/main: 

[12:43] <Geth> ¦ rakudo/main: This apparently also required a change in NativeCall.  Not quite sure

[12:43] <Geth> ¦ rakudo/main: yet whether the hint removal exposed an already existing bug, or that

[12:43] <Geth> ¦ rakudo/main: the difference in behaviour is the underlying bug causing the REA

[12:43] <Geth> ¦ rakudo/main: harvester crashes.

[12:43] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/36183f8630

[13:13] *** librasteve_ joined
[13:31] <lizmat> bisectable6: say "2022320".contains(/2022320/)

[13:31] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[13:32] <bisectable6> lizmat, Output on all releases: https://gist.github.com/62b1d95284e0e76e0d3b425c07daea19

[13:32] <bisectable6> lizmat, More than 3 changes to bisect, please try a narrower range like old=2020.01 new=HEAD

[13:32] <lizmat> bisectable6: old=2023.02 say "9209932022320".contains("2022320")

[13:32] <bisectable6> lizmat, On both starting points (old=2023.02 new=36183f8) the exit code is 0 and the output is identical as well

[13:32] <bisectable6> lizmat, Output on both points: «True␤»

[13:32] <lizmat> bisectable6: old=2023.02 say "9209932022320".contains(/2022320/)

[13:32] <bisectable6> lizmat, On both starting points (old=2023.02 new=36183f8) the exit code is 0 and the output is identical as well

[13:32] <bisectable6> lizmat, Output on both points: «False␤»

[13:33] <lizmat> bisectable6: say "9209932022320".contains(/2022320/)

[13:33] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[13:33] <bisectable6> lizmat, Output on all releases: https://gist.github.com/4139b682cfc739cb22125fab525fa116

[13:33] <bisectable6> lizmat, More than 3 changes to bisect, please try a narrower range like old=2020.01 new=HEAD

[13:55] <Geth> ¦ rakudo/main: b88d1d0fab | (Elizabeth Mattijsen)++ | 8 files

[13:55] <Geth> ¦ rakudo/main: Revert "Eradicate .publish_method_cache from MoarVM backend"

[13:55] <Geth> ¦ rakudo/main: 

[13:55] <Geth> ¦ rakudo/main: This reverts commit 67ed16b350f737be4835d25f039b4194964a1c5c.

[13:55] <Geth> ¦ rakudo/main: 

[13:55] <Geth> ¦ rakudo/main: Fixes remaining test failures on AttrX::Mooish.

[13:55] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b88d1d0fab

[14:08] *** nine left
[14:08] *** nine joined
[15:54] <Geth> ¦ rakudo/is-item-redux: 2d024c4c58 | ab5tract++ | 2 files

[15:54] <Geth> ¦ rakudo/is-item-redux: Add sigil exception for 'is item' to RakuAST

[15:54] <Geth> ¦ rakudo/is-item-redux: review: https://github.com/rakudo/rakudo/commit/2d024c4c58

[16:02] <Geth> ¦ rakudo/is-item-redux: 5 commits pushed by ab5tract++

[16:02] <Geth> ¦ rakudo/is-item-redux: d10047f33f | Scaffolding for 'is item' trait on parameters

[16:02] <Geth> ¦ rakudo/is-item-redux: fee40bf5aa | Ensure that candidates carry itemization reqs

[16:02] <Geth> ¦ rakudo/is-item-redux: 9a4ce179a0 | Add dispatch disambiguation for 'is item'

[16:02] <Geth> ¦ rakudo/is-item-redux: a3c07f7211 | (Legacy dispatch) disambiguate itemization with 'is item'

[16:02] <Geth> ¦ rakudo/is-item-redux: 6dc6321c79 | Add sigil exception for 'is item' to RakuAST

[16:02] <Geth> ¦ rakudo/is-item-redux: review: https://github.com/rakudo/rakudo/compare/2d024c4c58d6...6dc6321c7933

[17:10] <SmokeMachine> lizmat: thanks! I’ll test that as soon as possible

[18:04] <Geth> ¦ nqp/main: fabf296b1b | (Elizabeth Mattijsen)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[18:04] <Geth> ¦ nqp/main: Add hint back in

[18:04] <Geth> ¦ nqp/main: 

[18:04] <Geth> ¦ nqp/main: This basicallyy reverts abf15c40860c09f as this did not prevent the

[18:04] <Geth> ¦ nqp/main: REA harvester from crashing

[18:04] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/fabf296b1b

[18:26] <Geth> ¦ rakudo/main: 2a233d52ed | (Elizabeth Mattijsen)++ | src/Perl6/World.nqp

[18:26] <Geth> ¦ rakudo/main: Streamline accessor creation

[18:26] <Geth> ¦ rakudo/main: 

[18:26] <Geth> ¦ rakudo/main: - shortcut to the World object, instead of repeated attribute fetches

[18:26] <Geth> ¦ rakudo/main: - replace some .push by nqp::push and [] by nqp::atpos

[18:26] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2a233d52ed

[18:53] *** librasteve_ left
[22:37] *** sena_kun left
[23:12] *** MasterDuke joined
