[05:44] *** sivoais left
[05:45] *** sivoais joined
[08:35] *** sena_kun joined
[09:11] *** finanalyst joined
[10:53] *** finanalyst left
[11:41] <ab5tract> I’ll try to do some spelunking on this, unless you are already engaged on it nine

[11:41] <ab5tract> Might be useful to do so on the branch where it’s blocking things.

[11:42] <nine> ab5tract: I'm far ahead there. I'm done! And it's beautiful :)

[11:43] <nine> Just going through all my changes and committing them so I can push it somewhere where you can look at it

[12:37] <ab5tract> Awesome!

[13:01] *** frost joined
[13:19] <lizmat> bisectable6: old-2022.07 no worries; say $/ if "alfama" ~~ S/a/e/

[13:19] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[13:19] <lizmat> bisectable6: old=2022.07 no worries; say $/ if "alfama" ~~ S/a/e/

[13:20] <bisectable6> lizmat, Output on all releases: https://gist.github.com/e928fc86a9c3633e1621959845ebe30b

[13:20] <bisectable6> lizmat, Nothing to bisect!

[13:20] <bisectable6> lizmat, Bisecting by output (old=2022.07 new=335a0b0) because on both starting points the exit code is 0

[13:20] <bisectable6> lizmat, (2022-11-04) https://github.com/rakudo/rakudo/commit/35b180b8c8b90c031072150e618ee40dccf23713

[13:20] <bisectable6> lizmat, bisect log: https://gist.github.com/d95b9fa1edbb4d77ece1631fe2b1b4f1

[13:25] *** frost left
[13:36] <Geth> ¦ rakudo/rakuast-phase-cleanup: 26 commits pushed by (Jonathan Worthington)++, (Stefan Seifert)++

[13:36] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/compare/832edff845a0...44d962f83b81

[13:36] <nine> ab5tract: take a look: https://github.com/rakudo/rakudo/commit/2d84554e9e848b637c25d17a8f42f16b3719f44a

[13:37] <lizmat> nine++

[13:45] *** frost joined
[13:55] *** frost left
[15:48] *** sjn joined
[16:01] <ab5tract> nine: that looks really good. It’s nice to see the two more confusing and complicated methods disappear

[17:17] <Geth> ¦ rakudo/rakuast-phase-cleanup: 15 commits pushed by (Stefan Seifert)++

[17:17] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/compare/44d962f83b81...8c12234bede0

[17:17] <nine> This takes make test up to good enough (tm)*

[17:17] <nine> * only new test failurs are rakuast tests which is kinda to be expected with all the changes

[17:18] <lizmat> nine: is it ok to wait until merge to fix the rakuast tests?

[17:26] * lizmat suddenly realizes that all pod strings wind up as strings in any precomped file

[17:29] <nine> lizmat: before we talk about merging there's anyway still the spec tests to take care of

[17:29] <lizmat> ok  :-)

[17:32] <nine> First run gave 968 passing spectest files. That's not too bad at all. I feared much worse :)

[17:32] <lizmat> that was even pretty good not just a month ago or so

[17:47] <Geth> ¦ rakudo/rakuast-phase-cleanup: 26 commits pushed by (Jonathan Worthington)++, (Stefan Seifert)++

[17:47] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/compare/8c12234bede0...bbbb760028a5

[17:47] <nine> And we're already at 1003 :D

[17:49] <lizmat> definitely a GLR flashback  :-)

[19:05] <Geth> ¦ rakudo/rakuast-phase-cleanup: 9fba6b63f5 | (Stefan Seifert)++ | src/Raku/ast/code.rakumod

[19:05] <Geth> ¦ rakudo/rakuast-phase-cleanup: RakuAST: always bring signature to begin time before creating implicits

[19:05] <Geth> ¦ rakudo/rakuast-phase-cleanup: 

[19:05] <Geth> ¦ rakudo/rakuast-phase-cleanup: For creating an implicit invocant, we have to know the package the

[19:05] <Geth> ¦ rakudo/rakuast-phase-cleanup: method this is the signature of is in. We get that information in the

[19:05] <Geth> ¦ rakudo/rakuast-phase-cleanup: begin handler.

[19:05] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/commit/9fba6b63f5

[19:05] <Geth> ¦ rakudo/rakuast-phase-cleanup: a90488da69 | (Stefan Seifert)++ | 2 files

[19:05] <Geth> ¦ rakudo/rakuast-phase-cleanup: RakuAST: let synthetic trait nodes have their begin time

[19:05] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/commit/a90488da69

[19:05] <nine> 1020

[19:08] <nine> If only this velocity could continue to the end of the spectests :)

[19:08] <lizmat> if only!

[19:31] <lizmat> nine: a question: could it be that module precomp files are generated with just \n between depedencies on Unixy systems, and with \r\n on Windows ?

[19:32] <lizmat> or always just a \n between dependencies

[19:37] <nine> no idea

[19:38] <lizmat> hmmm  ok, will find out: looks like on unixy, it's 0x0a and not 0x0d0a

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: 9 commits pushed by (Stefan Seifert)++

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: 6af951238a | RakuAST: ensure a signatures synthetic children are resolved

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: b12496f07a | RakuAST: stub code for statement prefixes in time

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: 00475d429a | RakuAST: types are not always lookups

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: e0068b1f14 | RakuAST: replace a block's signature before parsing the blocks body

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: f079bd281f | RakuAST: ensure initializers get their BEGIN time

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: e32250edd7 | RakuAST: ensure types from literals are resolved

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: 59c77d6d99 | RakuAST: don't die on comment before start of comp unit

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: 24cb743845 | RakuAST: always bring signature to begin time before creating implicits

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: 7821a60d71 | RakuAST: let synthetic trait nodes have their begin time

[20:38] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/compare/a90488da699e...7821a60d71bf

[22:42] *** sena_kun left
