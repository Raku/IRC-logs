[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:15] <ab5tract> searching google for memmem32 (which we apparently borrowed from FreeBSD prior to FreeBSD abandoning it) returns entirely moarvm related results for me: https://www.google.com/search?sca_esv=8d54b35888728aa9&sxsrf=ACQVn08mFKQP_r68zYDUXzGGDQY9mkJ8kA:1713485611708&q=memmem32+freebsd&nirf=memmem+freebsd&sa=X&ved=2ahUKEwipsdqp_8yFAxUj3wIHHcDJB4kQ8BYoAXoECA4QAw&biw=1465&bih=800&dpr=2

[00:18] <ab5tract> I've spent a bit of time trying to rip it out of moar, but its late and I should sleep

[00:22] <ab5tract> tl;dr -- `scan` in the regex compiler sets up a MAST `index_s`call that returns a position of -1 for our Very Special Pattern

[00:23] <ab5tract> `index_s` is based on `memmem32` which is based on fast-but-not-foolproof modulo logic

[03:00] <releasable6> Next release in ≈6 days and ≈15 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:00] <releasable6_> Next release in ≈6 days and ≈15 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[08:15] *** finanalyst joined
[08:19] <Geth> ¦ rakudo/main: b213dba738 | (Stefan Seifert)++ | 2 files

[08:19] <Geth> ¦ rakudo/main: RakuAST: proper support for rw native args

[08:19] <Geth> ¦ rakudo/main: 

[08:19] <Geth> ¦ rakudo/main: For writable native args we need to create lexicalref vars instead of

[08:19] <Geth> ¦ rakudo/main: lexicals.

[08:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b213dba738

[08:27] *** sena_kun joined
[09:09] *** sena_kun left
[09:34] *** lizmat_ left
[09:34] *** lizmat joined
[09:46] *** finanalyst left
[10:02] *** lizmat left
[10:04] *** lizmat joined
[10:12] *** lizmat left
[10:32] *** lizmat joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[14:21] <Geth> ¦ rakudo/main: f6cc5d9559 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/MethodContainer.nqp

[14:21] <Geth> ¦ rakudo/main: Fix a race condition in Metamodel::MethodContainer.add_method

[14:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f6cc5d9559

[14:31] <nine> Oh don't you love these accidental features that make it into tests?

[14:32] <nine> m: multi f(int $foo is rw) { }; f(42);

[14:32] <camelia> rakudo-moar f6cc5d955: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Calling f(Int) will never work with any of these multi signatures:␤    (int $foo is rw)␤at <tmp>:1␤------> multi f(int $foo is rw) { }; ⏏f(42);␤»

[14:32] <nine> This error is caught at compile time.

[14:32] <nine> m: multi f(int $foo is rw, $bar) { }; f(42, 0);

[14:32] <camelia> rakudo-moar f6cc5d955: OUTPUT: «Cannot resolve caller f(Int:D, Int:D); the following candidates␤match the type but require mutable arguments:␤    (int $foo is rw, $bar)␤  in block <unit> at <tmp> line 1␤␤»

[14:32] <nine> Add a second arg and it isn't anymore.

[14:48] <[Tux]> Rakudo v2024.03-180-gb213dba73 (v6.d) on MoarVM 2024.03-6-gd5dafa9b4

[14:48] <[Tux]> csv-test-xs-20      0.141 -  0.143

[14:48] <[Tux]> csv-ip5xs           0.260 -  0.264

[14:48] <[Tux]> test-t --race       0.275 -  0.278

[14:48] <[Tux]> test-t              0.419 -  0.423

[14:48] <[Tux]> csv-ip5xs-20        1.122 -  1.132

[14:48] <[Tux]> test-t-20 --race    1.204 -  1.212

[14:48] <[Tux]> csv-parser          1.535 -  1.574

[14:48] <[Tux]> test                1.959 -  1.970

[14:48] <[Tux]> test-t-20           5.117 -  5.208

[15:10] <Geth> ¦ rakudo/main: 8f568c669b | (Stefan Seifert)++ | 2 files

[15:10] <Geth> ¦ rakudo/main: RakuAST: detect passing single literal to native rw arg at compile time

[15:10] <Geth> ¦ rakudo/main: 

[15:10] <Geth> ¦ rakudo/main: Not sure why the old frontend handles this case of having a single such

[15:10] <Geth> ¦ rakudo/main: argument specially. Let's match it until we know more.

[15:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/8f568c669b

[15:10] <Geth> ¦ rakudo/main: dd62a30b85 | (Stefan Seifert)++ | src/Raku/ast/call.rakumod

[15:10] <Geth> ¦ rakudo/main: RakuAST: detect multi dispatch that can never work at compile time

[15:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/dd62a30b85

[15:10] <Geth> ¦ rakudo/main: 1bd789e9bc | (Stefan Seifert)++ | t/02-rakudo/13-exceptions.t

[15:10] <Geth> ¦ rakudo/main: RakuAST: fix test accidentally enforcing a compiler bug

[15:10] <Geth> ¦ rakudo/main: 

[15:10] <Geth> ¦ rakudo/main: Parameter default should be Any but apparently the old frontend doesn't

[15:10] <Geth> ¦ rakudo/main: set it.

[15:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1bd789e9bc

[16:15] <Geth> ¦ rakudo/main: 4 commits pushed by (Elizabeth Mattijsen)++

[16:15] <Geth> ¦ rakudo/main: 45491ef598 | Threadsafed Metamodel::BaseType.mro

[16:15] <Geth> ¦ rakudo/main: 5b80043a9b | Threadsafed Metamodel::ClassHOW.add_fallback

[16:15] <Geth> ¦ rakudo/main: 5287d7ea67 | Threadsafed Metamodel::ConcreteRoleHOW.compose

[16:15] <Geth> ¦ rakudo/main: 2279593137 | Threadsafed Metamodel::Trusting.add_trustee

[16:15] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/1bd789e9bc83...227959313796

[16:16] <nine> LOL took me quite some backtracking to correctly read that word "threadsafed" :D

[16:36] <ab5tract> Threat shaved :)

[16:42] <Geth> ¦ rakudo/main: 25573f0c56 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/MethodContainer.nqp

[16:42] <Geth> ¦ rakudo/main: Fix Metamodel::MethodContainer.add_method duplicate check

[16:42] <Geth> ¦ rakudo/main: 

[16:42] <Geth> ¦ rakudo/main: There was a tiny window in which it would be possible to think a

[16:42] <Geth> ¦ rakudo/main: method didn't exist yet, and while another thread was busy adding

[16:42] <Geth> ¦ rakudo/main: it.  Fix by moving the check inside the protected block

[16:42] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/25573f0c56

[16:50] <lizmat> .oO( we haz the technology to verb anything )

[16:51] <nine> Verbing weirds language ;)

[16:56] <Geth> ¦ rakudo/main: 1ee6bc461e | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/PrivateMethodContainer.nqp

[16:56] <Geth> ¦ rakudo/main: Fix Metamodel::PrivateMethodContainer.add_private_method duplicate check

[16:56] <Geth> ¦ rakudo/main: 

[16:56] <Geth> ¦ rakudo/main: There was a tiny window in which it would be possible to think a

[16:56] <Geth> ¦ rakudo/main: private method didn't exist yet, and while another thread was busy

[16:56] <Geth> ¦ rakudo/main: adding it.  Fix by moving the check inside the protected block

[16:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1ee6bc461e

[17:06] <ab5tract> What, are we weirding language verbs?

[17:11] <[Coke]> Are.

[17:20] <ab5tract> weird we language verbs? [Coke]++

[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[20:05] *** bisectable6 left
[20:05] *** bisectable6 joined
[20:05] *** coverable6 left
[20:05] *** coverable6 joined
[20:05] *** nativecallable6 left
[20:05] *** nativecallable6 joined
[20:06] *** benchable6 left
[20:07] *** rypervenche left
[20:08] *** rypervenche joined
[20:09] *** benchable6 joined
[20:54] *** sena_kun joined
[21:02] *** finanalyst joined
[21:52] *** lizmat left
[21:52] *** lizmat joined
[22:11] *** lizmat_ joined
[22:15] *** lizmat left
[22:16] *** finanalyst left
[22:17] *** sena_kun left
[22:17] *** sena_kun joined
[22:47] *** linkable6_ left
[22:47] *** sena_kun left
[22:47] *** sena_kun joined
[22:49] *** linkable6_ joined
[22:52] *** sena_kun left
[22:53] *** sena_kun joined
[22:57] *** sena_kun left
[23:00] <releasable6_> Next release in ≈5 days and ≈19 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:00] <releasable6> Next release in ≈5 days and ≈19 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

