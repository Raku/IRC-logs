[02:02] *** Voldenet left
[02:36] *** Voldenet joined
[03:53] <Geth> ¦ nqp/main: 6881b371f1 | (Daniel Green)++ | tools/templates/Makefile-backend-common.in

[03:53] <Geth> ¦ nqp/main: Don't (re)compile P5QREGEX every time test are run

[03:53] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/6881b371f1

[03:53] <Geth> ¦ nqp/main: 22af4c8b02 | MasterDuke17++ (committed using GitHub Web editor) | tools/templates/Makefile-backend-common.in

[03:53] <Geth> ¦ nqp/main: Merge pull request #815 from MasterDuke17/second_attempt_at_not_compiling_P5QREGEX_every_time_tests_are_run

[03:54] <Geth> ¦ nqp/main: 

[03:54] <Geth> ¦ nqp/main: Don't (re)compile P5QREGEX every time test are run

[03:54] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/22af4c8b02

[03:56] <Geth> ¦ rakudo/main: 555186626e | (Daniel Green)++ | src/Perl6/Metamodel/MethodContainer.nqp

[03:56] <Geth> ¦ rakudo/main: Unbreak the JVM build

[03:56] <Geth> ¦ rakudo/main: 

[03:56] <Geth> ¦ rakudo/main: Not sure *why* this is required since cf474c9 is fine for the MoarVM

[03:56] <Geth> ¦ rakudo/main: backend...

[03:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/555186626e

[08:20] <lizmat> cf474c9

[08:20] <lizmat> meh

[08:21] <lizmat> .tell MasterDuke I guess JVM's nqp::istype doesn't like nqp::null as one of the arguments

[08:21] <tellable6> lizmat, I'll pass your message to MasterDuke48

[08:44] <Geth> ¦ rakudo/main: b82fa83db0 | (Elizabeth Mattijsen)++ | 2 files

[08:44] <Geth> ¦ rakudo/main: Treat =place as a directive

[08:44] <Geth> ¦ rakudo/main: 

[08:44] <Geth> ¦ rakudo/main: Not as a block

[08:44] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b82fa83db0

[09:10] <Geth> ¦ rakudo/main: f997c36cc0 | (Elizabeth Mattijsen)++ | src/Raku/Actions.nqp

[09:10] <Geth> ¦ rakudo/main: RakuAST: ignore =finish if there is no code

[09:10] <Geth> ¦ rakudo/main: 

[09:10] <Geth> ¦ rakudo/main: The =finish construct only makes sense in code.  If it is being used

[09:10] <Geth> ¦ rakudo/main: in a RakuDoc context only, it tried to attach the text to the CompUnit

[09:10] <Geth> ¦ rakudo/main: when there was none, because there was no code.

[09:10] <Geth> ¦ rakudo/main: 

[09:10] <Geth> ¦ rakudo/main: This now just ignores the =finish text if there is no CompUnit to

[09:10] <Geth> ¦ rakudo/main: attach to.  Potentially, it could also be converted to a RakuDoc,

[09:10] <Geth> ¦ rakudo/main: but this does not actually appear to make sense (yet).

[09:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f997c36cc0

[09:33] *** sena_kun joined
[13:55] <Geth> ¦ rakudo/main: c49e05d848 | (Elizabeth Mattijsen)++ | 6 files

[13:55] <Geth> ¦ rakudo/main: Streamline Metamodel::RoleContainer

[13:55] <Geth> ¦ rakudo/main: 

[13:55] <Geth> ¦ rakudo/main: - make adding a role threadsafe: this however broke several spectests

[13:55] <Geth> ¦ rakudo/main:   because apparently during role composition, in some cases roles were

[13:55] <Geth> ¦ rakudo/main:   being added.  Which was fine in the non-threadsafe handling.

[13:55] <Geth> ¦ rakudo/main: - add a threadsafe "pop_role_to_compose" method which will either

[13:55] <Geth> ¦ rakudo/main:   produce a role to be composed, or nqp::null (in a threadsafe way).

[13:55] <Geth> ¦ rakudo/main: - adapt clients of this role to the new way of handling role composition

[13:55] <Geth> ¦ rakudo/main: - remove unneeded positional arguments where possible

[13:55] <Geth> ¦ rakudo/main: 

[13:55] <Geth> ¦ rakudo/main: This appears to have a little bit of a negative effect on performance

[13:55] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c49e05d848

[14:21] <japhb> lizmat: After all parts of c49e05, are the spectests still broken, or did the later parts fix that?

[19:00] <lizmat> the later parts fixed that, otherwise I wouldn't have pushed that to main

[21:13] <japhb> lizmat: Gotcha, it just wasn't clear to me.  Thanks for clarifying.  :-)

