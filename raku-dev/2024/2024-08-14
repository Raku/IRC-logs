[02:10] *** kjp left
[02:11] *** kjp joined
[02:12] *** kjp left
[02:12] *** kjp joined
[06:46] <nine> flapper?

[06:46] <nine> ab5tract: t/spec/S29-os/system.t fails very often when the system is under load and there's a recent change on it from you

[06:49] <Geth> ¦ roast: a83b2d452f | (Stefan Seifert)++ | spectest.data

[06:49] <Geth> ¦ roast: Remove deleted spectest file from the list of files to run

[06:49] <Geth> ¦ roast: 

[06:49] <Geth> ¦ roast: The spectest was deleted in commit ae6135510104bf036bdca913471f1242bcf13587

[06:49] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/a83b2d452f

[06:50] <nine> ab5tract: oh, the missing MVMROOT is still not fixed

[06:57] <ab5tract> nine: is that surprising? I asked whether you were expecting a patch from me or would take care of it yourself and I recall something about needing to wait on it

[07:04] <nine> ab5tract: I also (later) said "if in doubt, an MVMROOT would be preferable"

[07:04] <nine> pushed the fix

[07:07] <ab5tract> That didn’t tag me, so for all I knew it was a continuation of a different conversation. Didn’t mean to leave it hanging.

[07:09] <nine> Well, bug is gone, so all's well that ends well. Let's just hope that system.t is stable now.

[07:09] <nine> Looking through the IRC log, this test has historically been troublesome

[07:16] <nine> I shouldn't have worried about performance in this particular case anyway. Spawning is a super heavy operation. You ain't gonna do that a million times a second anyway.

[07:37] <Geth> ¦ rakudo/main: 1586e96ae3 | (Stefan Seifert)++ | 3 files

[07:37] <Geth> ¦ rakudo/main: RakuAST: add dotty:sym<.=>

[07:37] <Geth> ¦ rakudo/main: 

[07:37] <Geth> ¦ rakudo/main: Fixes $_ = -1; .=abs;

[07:37] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1586e96ae3

[07:46] *** djinni` left
[07:52] *** djinni` joined
[07:57] *** evalable6__ joined
[08:02] *** evalable6 left
[08:22] *** lizmat left
[08:22] *** gfldex left
[08:22] *** zostay left
[08:22] *** coleman left
[08:22] *** JRaspass left
[08:34] *** lizmat joined
[08:34] *** gfldex joined
[08:34] *** zostay joined
[08:34] *** coleman joined
[08:34] *** JRaspass joined
[14:14] *** MasterDuke left
[15:10] <nine> So a few hours into debugging a mis-parse that swallows the orelse part of $x orelse .=new andthen .=new: 43 I finally found the culprit

[15:11] <lizmat> andthen?

[15:12] <nine> EXPR-reduce tries to access the operator symbol via nqp::ifnull( nqp::atkey( nqp::atkey($op,'OPER'), 'sym'), '')

[15:12] <nine> Alas, infixes do not have the common <sym> key anymore.

[15:13] <nine> token infix:sym<after>      { <sym> »      } became token infix:sym<after>      { <.infix-after> »      }

[15:14] <lizmat> aha!   why did it become that ?

[15:14] <lizmat> not localization related, is it ?

[15:15] <nine> # These tokens replace bare strings so that they can be localized by mixing in tokens with translated localizations.

[15:17] <lizmat> ah, I read the regex wrong: yes, indeed localization  :-(

[15:23] <lizmat> so: { $<sym>=<.infix-after> » } instead ?

[15:28] <nine> <sym=.infix-after> works

[15:36] <lizmat> *phew*, so that's overseeable

[15:41] <Geth> ¦ rakudo/main: 8 commits pushed by (Stefan Seifert)++

[15:41] <Geth> ¦ rakudo/main: 3a615004ee | RakuAST: support fake infix colonpairs on variable initializers

[15:41] <Geth> ¦ rakudo/main: 1549a841d4 | RakuAST: support fake infix colonpairs on term initializers

[15:41] <Geth> ¦ rakudo/main: 3240b2fc6a | RakuAST: support fake infix colonpairs on topic calls

[15:41] <Geth> ¦ rakudo/main: 575f0e8eca | RakuAST: fix compilation error on constant without explicit type

[15:41] <Geth> ¦ rakudo/main: d853a08f4d | RakuAST: fix BEGIN time compilation of parameters with default values

[15:41] <Geth> ¦ rakudo/main: ae98e84c1d | RakuAST: defuse overly zealous type check in constant initialization

[15:41] <Geth> ¦ rakudo/main: 0091408b6a | RakuAST: fix constant initialized with un-parameterized type

[15:41] <Geth> ¦ rakudo/main: d74604d8ca | RakuAST: fix parser swallowing list infixes

[15:41] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/1586e96ae352...d74604d8ca16

[15:42] <nine> 1093

[15:55] <lizmat> 1092 for me on MacOS

[17:42] *** sena_kun joined
[18:40] <Geth> ¦ rakudo/main: af7acf0c45 | (Stefan Seifert)++ | src/Raku/ast/expressions.rakumod

[18:40] <Geth> ¦ rakudo/main: RakuAST: fix logic error in creating curried expression's signature

[18:40] <Geth> ¦ rakudo/main: 

[18:40] <Geth> ¦ rakudo/main: Whether we ought to descend into a WhateverCode when renumbering

[18:40] <Geth> ¦ rakudo/main: arguments depends on the operator of the outer expression, not the one

[18:40] <Geth> ¦ rakudo/main: used by the WhateverCode.

[18:40] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/af7acf0c45

[18:40] <Geth> ¦ rakudo/main: 081147eeae | (Stefan Seifert)++ | src/Raku/ast/expressions.rakumod

[18:40] <Geth> ¦ rakudo/main: RakuAST: also thunk code arguments for thunk type t

[18:40] <Geth> ¦ rakudo/main: 

[18:40] <Geth> ¦ rakudo/main: Operators like xx can also be used to process code objects, e.g. {$_} xx 2

[18:40] <Geth> ¦ rakudo/main: In this case the supplied block has to be thunked. Otherwise the

[18:40] <Geth> ¦ rakudo/main: operator will just call the block itself assuming that it's a thunk.

[18:40] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/081147eeae

[18:40] <nine> 1100!

[18:57] <ab5tract> Nice! \o/

[18:57] <ab5tract> That curried expression fix looks like it might have been a pain to surface

[19:07] <nine> Actually it wasn't that bad. The currying code is quite concise nowadays so there couldn't have been many places where we'd go wrong :) Was harder to find out what (* o (* * 2)(* + 1)(3) actually should do

[19:23] <lizmat> 1099 for me

[20:19] <Geth> ¦ rakudo/main: 0b4048f267 | (Stefan Seifert)++ | src/Raku/ast/expressions.rakumod

[20:19] <Geth> ¦ rakudo/main: RakuAST: support using bracketed infixes as list infixes

[20:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0b4048f267

[20:20] <nine> With that it should be 1100 even for you :) And 1101 for people on more reasonable OSes :D

[20:30] <lizmat> nine: indeed: still I wonder which one I'm missing

[20:30] <lizmat> these are my 1100: https://gist.github.com/lizmat/590a2d6dcc6808947aba8c7261804582    could you tell me which one I'm missing ?

[20:30] <lizmat> I have a severe case of FOMO  :-)

[20:34] <nine> Huh....it says it's t/spec/S12-attributes/augment-and-initialization.rakudo.moar

[20:40] <lizmat> when run manually, it passes

[20:53] <Geth> ¦ rakudo/main: 1a616bfb13 | (Stefan Seifert)++ | src/Raku/Grammar.nqp

[20:53] <Geth> ¦ rakudo/main: RakuAST: bring back explanations for Syntax::Confused errors

[20:53] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1a616bfb13

[20:55] *** sena_kun left
[21:21] *** MasterDuke joined
