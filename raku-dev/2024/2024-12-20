[08:02] *** vrurg_ left
[08:02] *** vrurg joined
[09:20] *** sena_kun joined
[11:33] *** sena_kun left
[13:01] <ab5tract> so... where is `sub zip` actually defined? ðŸ¤¨

[13:01] * ab5tract sips coffee, checks bootstrap

[13:05] <lizmat> it's a constant alias

[13:07] <lizmat> src/core.c/List.rakumod

[13:07] <lizmat> 1627:my constant &zip := &infix:<Z>;

[13:12] <lizmat> ab5tract ^^

[13:17] <ab5tract> Ah! well, that explains why the docs are wrong when describing a +@a signature

[14:22] <ab5tract> nevermind, now that I've actually checked the source, `+lol` is right there

[14:22] *** vrurg left
[14:22] *** vrurg joined
[14:26] *** vrurg_ joined
[14:28] *** vrurg left
[14:37] <ab5tract> at the risk of using the wrong hammer for this type of nail, `@a is item` could be used to create a candidate that calls `@a.List` as it passes `@a` to the real handler

[16:17] <lizmat> feels like a legit use to me?   If we're talking about &zip ?

[16:29] <Geth> Â¦ nqp/main: 09644702f3 | ab5tract++ | src/HLL/Compiler.nqp

[16:29] <Geth> Â¦ nqp/main: Set a more sensible repl-mode by default

[16:29] <Geth> Â¦ nqp/main: 

[16:29] <Geth> Â¦ nqp/main: Only set `tty` as the default when actually running under a TTY.

[16:29] <Geth> Â¦ nqp/main: 

[16:29] <Geth> Â¦ nqp/main: This fixes fallout effects such as the issues in Jupyter::Chatbook

[16:29] <Geth> Â¦ nqp/main: where starting a REPL from inside a script could not be effected

[16:29] <Geth> Â¦ nqp/main: without the addition of a new 'managed' repl-mode.

[16:29] <Geth> Â¦ nqp/main: 

[16:29] <Geth> Â¦ nqp/main: This seems simpler both implementation-wise and conceptually, but

[16:29] <Geth> Â¦ nqp/main: the 'managed' repl-mode can be revisited at a later time should

[16:29] <Geth> Â¦ nqp/main: this patch not end up covering all corner cases.

[16:29] <Geth> Â¦ nqp/main: review: https://github.com/Raku/nqp/commit/09644702f3

[16:32] <Geth> Â¦ rakudo/main: 1bd183d400 | ab5tract++ | tools/templates/NQP_REVISION

[16:32] <Geth> Â¦ rakudo/main: Pick up repl-mode default fix in NQP

[16:32] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1bd183d400

[16:39] <ab5tract> lizmat: indeed, zip is what I had in mind here

[16:40] <ab5tract> I guess I wasn't sure if I'm just proposing `is item` because it's a (only?) way to disambiguate or whether considering @a as an item actually fits this situation conceptually / semantically

[16:41] <lizmat> the other way would be $foo is raw, and check nqp::iscont($foo)

[16:41] <ab5tract> hmm

[17:02] <Geth> Â¦ rakudo/main: d7feae2fbf | (Elizabeth Mattijsen)++ | src/core.c/Str.rakumod

[17:02] <Geth> Â¦ rakudo/main: Final step of re-imaginining .trans

[17:02] <Geth> Â¦ rakudo/main: 

[17:02] <Geth> Â¦ rakudo/main: As started with 097d668036a440614f9 and following commits.

[17:02] <Geth> Â¦ rakudo/main: 

[17:02] <Geth> Â¦ rakudo/main: This commit removes the LSM class and its handling of more complex

[17:02] <Geth> Â¦ rakudo/main: .trans specifications, and replaces it with a complete re-imagination

[17:02] <Geth> Â¦ rakudo/main: basically based on reverse engineering the behaviour using the

[17:02] <Geth> Â¦ rakudo/main: <â€¦commit message has 11 more linesâ€¦>

[17:02] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d7feae2fbf

[17:08] <Geth> Â¦ roast: 97a219a14a | (Elizabeth Mattijsen)++ | S05-transliteration/with-closure.t

[17:08] <Geth> Â¦ roast: Unfudge now passing tests (2xtodo, 1xskip)

[17:08] <Geth> Â¦ roast: 

[17:08] <Geth> Â¦ roast: As a result of https://github.com/rakudo/rakudo/commit/d7feae2fbf

[17:08] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/97a219a14a

[17:14] <Geth> Â¦ roast: e58d0bb861 | (Elizabeth Mattijsen)++ | S05-transliteration/trans.t

[17:14] <Geth> Â¦ roast: Add test for #5488

[17:14] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/e58d0bb861

[17:25] <ab5tract> lizmat: I think that the is raw / iscont approach is stil raising the same questions re: semantics

[17:25] <lizmat> ok, then it's more a problem solving issue, I'd say ?

[17:25] <ab5tract> ie, is `zip($@a) ` somehow the "reasonable" way to indicate "I want you to actually zip the contents of this array"

[17:28] <ab5tract> could be... I've got a fair amount of unresolved problem solving issues at the moment though

[17:57] <Geth> Â¦ rakudo/main: e5a715ab7d | (Elizabeth Mattijsen)++ | src/core.c/Str.rakumod

[17:57] <Geth> Â¦ rakudo/main: Fix .trans, :c if none of the needles matched

[17:57] <Geth> Â¦ rakudo/main: 

[17:57] <Geth> Â¦ rakudo/main: Fixes #1227

[17:57] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e5a715ab7d

[18:07] <Geth> Â¦ roast: 428a5c2d94 | (Elizabeth Mattijsen)++ | S05-transliteration/trans.t

[18:07] <Geth> Â¦ roast: Add tests for #1227

[18:07] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/428a5c2d94

[20:50] *** sena_kun joined
[23:03] *** Voldenet_ joined
[23:04] *** Voldenet left
[23:04] *** Voldenet_ is now known as Voldenet

