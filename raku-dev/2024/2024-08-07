[01:23] *** MasterDuke joined
[05:45] *** MasterDuke left
[06:15] *** vrurg_ joined
[06:18] *** vrurg left
[07:20] <nine> m: my @a; say @a.?foo()

[07:20] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «Nil␤»

[07:20] <nine> m: my @a; say @a.?Array::\foo()

[07:20] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> my @a; say @a.?Array::\⏏foo()␤    expecting any of:␤        postfix␤»

[07:20] <nine> m: my @a; say @a.?Array::foo()

[07:20] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «Cannot dispatch to method foo on Array because it is not inherited or done by Array␤  in block <unit> at <tmp> line 1␤␤»

[07:21] <nine> Turns out the old frontend does not actually support .? with fully qualified names.

[07:23] <nine> The only spectest that even tries it is is-deeply @a».?Any::elems, (2, 3), '».?::'; which works because ignoring the Any:: just happens to give the same result

[07:24] *** sena_kun joined
[07:24] <lizmat> heh  :-)

[07:24] <lizmat> gremlins!

[08:01] <nine> m: my @a; say @a>>.WHAT

[08:01] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «(Array)␤»

[08:01] <nine> Clearly not correct either

[08:03] *** sena_kun left
[10:42] <Geth> ¦ Chemistry-Elements/main: 1eb8485ab5 | (Elizabeth Mattijsen)++ | 33 files

[10:42] <Geth> ¦ Chemistry-Elements/main: Initial adaptation to Raku Community Modules

[10:42] <Geth> ¦ Chemistry-Elements/main: review: https://github.com/raku-community-modules/Chemistry-Elements/commit/1eb8485ab5

[10:46] <Geth> ¦ Chemistry-Elements/main: beb9229459 | (Elizabeth Mattijsen)++ | META6.json

[10:46] <Geth> ¦ Chemistry-Elements/main: Add test dependency on META6

[10:46] <Geth> ¦ Chemistry-Elements/main: review: https://github.com/raku-community-modules/Chemistry-Elements/commit/beb9229459

[10:46] <Geth> ¦ Chemistry-Elements/main: 53d902892b | (Elizabeth Mattijsen)++ | 3 files

[10:46] <Geth> ¦ Chemistry-Elements/main: Oops, needs to install dependencies, duh!

[10:46] <Geth> ¦ Chemistry-Elements/main: review: https://github.com/raku-community-modules/Chemistry-Elements/commit/53d902892b

[10:48] <Geth> ¦ Chemistry-Elements/main: f9a1ed059e | (Elizabeth Mattijsen)++ | 2 files

[10:48] <Geth> ¦ Chemistry-Elements/main: Give up on Windows CI testing

[10:48] <Geth> ¦ Chemistry-Elements/main: review: https://github.com/raku-community-modules/Chemistry-Elements/commit/f9a1ed059e

[10:52] <Geth> ¦ Chemistry-Elements/main: 1776567c2e | (Elizabeth Mattijsen)++ | 4 files

[10:52] <Geth> ¦ Chemistry-Elements/main: 0.2

[10:52] <Geth> ¦ Chemistry-Elements/main: review: https://github.com/raku-community-modules/Chemistry-Elements/commit/1776567c2e

[11:03] <[Tux]> Rakudo v2024.07-86-g8c9263f1c (v6.d) on MoarVM 2024.07-8-g08ee6c8e2

[11:03] <[Tux]> csv-test-xs-20      0.142 -  0.142

[11:03] <[Tux]> csv-ip5xs           0.258 -  0.260

[11:03] <[Tux]> test-t --race       0.266 -  0.266

[11:03] <[Tux]> test-t              0.404 -  0.405

[11:03] <[Tux]> csv-ip5xs-20        1.095 -  1.115

[11:03] <[Tux]> test-t-20 --race    1.167 -  1.176

[11:03] <[Tux]> csv-parser          1.456 -  1.490

[11:03] <[Tux]> test                1.842 -  1.861

[11:03] <[Tux]> test-t-20           4.847 -  4.979

[11:03] <[Tux]> https://tux.nl/Talks/CSV6/speed4-20.html / https://tux.nl/Talks/CSV6/speed4.html https://tux.nl/Talks/CSV6/speed.log

[11:05] <Geth> ¦ Fortran-Grammar/main: a42babdb6b | (Elizabeth Mattijsen)++ | Changes

[11:05] <Geth> ¦ Fortran-Grammar/main: Fix copy-pasto

[11:05] <Geth> ¦ Fortran-Grammar/main: review: https://github.com/raku-community-modules/Fortran-Grammar/commit/a42babdb6b

[12:18] <nine> So, xx is supposed to thunk its left hand side argument, right?

[12:18] <nine> m: say rand xx 3

[12:18] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «(0.6214704867784426 0.5079990209402033 0.006426715273942896)␤»

[12:18] <nine> But what about when it's hypered?

[12:18] <lizmat> yup

[12:18] <nine> m: say (rand >>xx>> 3)

[12:18] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «(0.5616912484080457 0.5616912484080457 0.5616912484080457)␤»

[12:20] <lizmat> I guess we can now fix that in RakuAST ?

[12:20] <lizmat> otoh, this has a feel of DIHWIDT

[12:20] <lizmat> as xx clearly is a grammarlike construct, like || and && ?

[12:21] <nine> At least 3 spectests rely on that behavior. Sepcifically on:

[12:21] <nine> m: dd [|<one two three> xx 3]

[12:21] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «["one", "two", "three", "one", "two", "three", "one", "two", "three"]␤»

[12:22] <lizmat> m: dd [<one two three> xx 3]

[12:22] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «[("one", "two", "three"), ("one", "two", "three"), ("one", "two", "three")]␤»

[12:22] <lizmat> m: dd [(<one two three> xx 3).Slip]

[12:22] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «[("one", "two", "three"), ("one", "two", "three"), ("one", "two", "three")]␤»

[12:22] <lizmat> hmmm

[12:23] <nine> Oh, wait. No, it's the other way round. This spectest relies on the non-thunking:

[12:23] <lizmat> m: dd [<one two three>.Slip xx 3)]

[12:23] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unable to parse expression in array composer; couldn't find final ']' (corresponding starter was at line 1)␤at <tmp>:1␤------> dd [<one two three>.Slip xx 3⏏)]␤    expecting any of:␤   …»

[12:23] <nine> m: use Test; my @t2482 = |<1 2> >>xx>> 2; is-deeply @t2482, [<1 1>.Seq, <2 2>.Seq]

[12:23] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «ok 1 - ␤»

[12:23] <lizmat> m: dd [<one two three>.Slip xx 3]

[12:23] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «["one", "two", "three", "one", "two", "three", "one", "two", "three"]␤»

[12:24] <lizmat> I think that's the array composer getting 3 Slips and thus producing separate entries

[12:24] <lizmat> nothing with hypering or thunking ?

[12:26] <nine> With thunking the slips are results of calls and we treat them differently

[12:27] <nine> With thunking that test would fail:

[12:27] <nine> # expected: [(IntStr.new(1, "1"), IntStr.new(1, "1")).Seq, (IntStr.new(2, "2"), IntStr.new(2, "2")).Seq]

[12:27] <nine> #      got: [IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(1, "1"), IntStr.new(2, "2")]

[12:42] <nine> So what am I supposed to do here?

[12:43] <lizmat> make a problem solving issue ?

[12:44] <nine> Neither comments, nor commit messages, nor the original issue https://github.com/rakudo/rakudo/issues/2482 mention why this is supposed to be the correct behavior.

[13:04] <nine> I left a comment on that PR tagging all people who were involved in that commit

[13:29] <nine> Seems like simply not thunking arguments of hyper infixes ever does not cause any breakage. Unfortuantely thunking behavior is very under described. The word "thunk" appears just 10 times in the whole of the design docs. The closest to guidance S03 comes is by saying that some operators guarantee sequence points while others like hyperoperators guarantee the absence of sequence points.

[13:29] <nine> Now thunks and sequence points are not exactly the same. Thunks are useful for implementing sequence points but not all thunks have to be sequence points.

[13:47] <Geth> ¦ Terminal-WCWidth/main: 4 commits pushed by (José Joaquín Atria)++, (Elizabeth Mattijsen)++

[13:47] <Geth> ¦ Terminal-WCWidth/main: e2caa44532 | Add script to rebuild tables

[13:47] <Geth> ¦ Terminal-WCWidth/main: f711e74fe2 | Use Unix line endings in tables file

[13:47] <Geth> ¦ Terminal-WCWidth/main: f5483c208d | Rebuild tables for Unicode Specification 13.0.0

[13:47] <Geth> ¦ Terminal-WCWidth/main: 9eaa19c20b | Merge pull request #6 from jjatria/table-update

[13:47] <Geth> ¦ Terminal-WCWidth/main: review: https://github.com/raku-community-modules/Terminal-WCWidth/compare/ec7f6436a1fb...9eaa19c20be3

[14:22] <Geth> ¦ Math-Random/main: e2261e1e6c | (Elizabeth Mattijsen)++ | 17 files

[14:22] <Geth> ¦ Math-Random/main: Initial stab at integrating into Raku Community Modules

[14:22] <Geth> ¦ Math-Random/main: review: https://github.com/raku-community-modules/Math-Random/commit/e2261e1e6c

[14:24] <Geth> ¦ Math-Random/main: a9f009c192 | (Elizabeth Mattijsen)++ | Changes

[14:24] <Geth> ¦ Math-Random/main: 0.1.1

[14:24] <Geth> ¦ Math-Random/main: review: https://github.com/raku-community-modules/Math-Random/commit/a9f009c192

[14:40] <nine> I only wanted to fix all the hyper tests. Instead I'm on a major refactor of the method calling implementation. Turns out in reality there are 2 orthogonal axes of features there: the dispatch (. .? .+ .*) and the what to call axis (foo Any::foo "foo" $foo &foo) and all combinations are allowed.

[14:54] <Geth> ¦ Terminal-WCWidth/main: ec57197559 | (Elizabeth Mattijsen)++ | 16 files

[14:54] <Geth> ¦ Terminal-WCWidth/main: Initial stab at integrating into Raku Community Modules

[14:54] <Geth> ¦ Terminal-WCWidth/main: review: https://github.com/raku-community-modules/Terminal-WCWidth/commit/ec57197559

[14:59] <Geth> ¦ Terminal-WCWidth/main: 51d86c91a0 | (Elizabeth Mattijsen)++ | 4 files

[14:59] <Geth> ¦ Terminal-WCWidth/main: 0.1.1

[14:59] <Geth> ¦ Terminal-WCWidth/main: review: https://github.com/raku-community-modules/Terminal-WCWidth/commit/51d86c91a0

[15:29] <nine> Though I really have no idea what the point of $foo.+$meth(), $foo.*$meth or $foo.?&meth is. They all would do exactly one method call.

[15:35] <lizmat> well, I guess interface consistency ?

[15:36] <lizmat> I think they can be safely be ASTed into VarMethod ?

[15:36] <lizmat> or we could possible make it a worry as well ?

[16:04] <nine> There are spectests using them

[16:06] <lizmat> do they expect anything else than a single method call?

[16:06] <lizmat> then we could add a worry, right?

[16:12] *** jdv left
[16:13] *** jdv joined
[16:32] <nine> is-deeply @a».+&elems,     ((2,  ), (3,  )), '».+&';

[16:32] <nine> The result still has to be a one-element list

[16:51] <ugexe> i think i'm missing some context, because i thought the point of e.g. $foo.+$methd() was allowing stuff like the following

[16:51] <ugexe> m: role Foo1 { method bar { say 42 } }; role Foo2 { method bar { say 43 } }; class Baz { }; my $obj = Baz.new; $obj does Foo1; $obj does Foo2; $obj.+bar()

[16:51] <camelia> rakudo-moar 8c9263f1c: OUTPUT: «43␤42␤»

[16:58] <lizmat> its not about $obj.+bar, but $obj.+$bar

[16:59] <lizmat> afk&

[17:00] <nine> and $obj.+&bar

[17:33] <Geth> ¦ Math-Random: bluebear94++ created pull request #4: Change name of original contributor

[17:33] <Geth> ¦ Math-Random: review: https://github.com/raku-community-modules/Math-Random/pull/4

[17:36] <Geth> ¦ Terminal-WCWidth: bluebear94++ created pull request #7: Change contributor name

[17:36] <Geth> ¦ Terminal-WCWidth: review: https://github.com/raku-community-modules/Terminal-WCWidth/pull/7

[18:32] *** sena_kun joined
[18:46] <Geth> ¦ Math-Random/main: 3991fb7d40 | (+merlan #flirora)++ (committed using GitHub Web editor) | 2 files

[18:46] <Geth> ¦ Math-Random/main: Change name of original contributor

[18:46] <Geth> ¦ Math-Random/main: 

[18:46] <Geth> ¦ Math-Random/main: This is the name I wish to be known as now.

[18:46] <Geth> ¦ Math-Random/main: review: https://github.com/raku-community-modules/Math-Random/commit/3991fb7d40

[18:48] <ugexe> i wonder how you pronounce that

[18:51] <Geth> ¦ Terminal-WCWidth/main: f8c0e0faf7 | (+merlan #flirora)++ (committed using GitHub Web editor) | 2 files

[18:51] <Geth> ¦ Terminal-WCWidth/main: Change contributor name

[18:51] <Geth> ¦ Terminal-WCWidth/main: review: https://github.com/raku-community-modules/Terminal-WCWidth/commit/f8c0e0faf7

[18:52] <Geth> ¦ Math-Random/main: 529c95f6d4 | (Elizabeth Mattijsen)++ | 3 files

[18:52] <Geth> ¦ Math-Random/main: 0.1.2

[18:52] <Geth> ¦ Math-Random/main: review: https://github.com/raku-community-modules/Math-Random/commit/529c95f6d4

[18:53] <Geth> ¦ Terminal-WCWidth/main: c21f201c63 | (Elizabeth Mattijsen)++ | 3 files

[18:53] <Geth> ¦ Terminal-WCWidth/main: 0.1.2

[18:53] <Geth> ¦ Terminal-WCWidth/main: review: https://github.com/raku-community-modules/Terminal-WCWidth/commit/c21f201c63

[18:54] <[Coke]> lizmat++ Thanks.

[18:57] <lizmat> I've also asked fez to remove the 0.1.1 versions

[19:14] <Geth> ¦ rakudo/main: 15 commits pushed by (Stefan Seifert)++

[19:14] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/8c9263f1c4c3...0f862af0f8de

[19:14] <nine> 1084

[19:19] <Geth> ¦ Terminal-WCWidth/main: fe35d8b122 | (Elizabeth Mattijsen)++ | 4 files

[19:19] <Geth> ¦ Terminal-WCWidth/main: 0.1.3

[19:19] <Geth> ¦ Terminal-WCWidth/main: review: https://github.com/raku-community-modules/Terminal-WCWidth/commit/fe35d8b122

[19:23] <Geth> ¦ Math-Random/main: 3bbe523a4a | (Elizabeth Mattijsen)++ | 4 files

[19:23] <Geth> ¦ Math-Random/main: 0.1.3

[19:23] <Geth> ¦ Math-Random/main: review: https://github.com/raku-community-modules/Math-Random/commit/3bbe523a4a

[19:23] <lizmat> meh, the PRs where only for the README, and the release process overwrote that

[19:36] <Geth> ¦ rakudo/main: 977b11e496 | (Stefan Seifert)++ | 3 files

[19:36] <Geth> ¦ rakudo/main: RakuAST: implement sequencing meta operator (as far as the old frontend)

[19:36] <Geth> ¦ rakudo/main: 

[19:36] <Geth> ¦ rakudo/main: This meta operator seems to be not really implemented on the old

[19:36] <Geth> ¦ rakudo/main: frontend either but there are tests for surviving a parse, so that's

[19:36] <Geth> ¦ rakudo/main: what we do.

[19:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/977b11e496

[19:37] <nine> 1085!

[19:37] <nine> This one I did solely for pushing past the 80 % mark today :)

[19:37] <nine> t/12-rakuast/call-method.rakutest and deparse needs update. Will do that tomorrow or so

[20:20] <Geth> ¦ Terminal-WCWidth/main: 1d507acd36 | (Elizabeth Mattijsen)++ | 2 files

[20:20] <Geth> ¦ Terminal-WCWidth/main: 0.1.4

[20:20] <Geth> ¦ Terminal-WCWidth/main: review: https://github.com/raku-community-modules/Terminal-WCWidth/commit/1d507acd36

[20:21] <lizmat> not sure what happened to 0.1.3

[20:23] <lizmat> nine: ack... or I could do it, lemme know

[20:23] <lizmat> afk&

[20:59] *** finanalyst joined
[21:38] *** sena_kun left
[22:05] <ab5tract> nine: do you reckon we face the Curse of Pareto at this point? Or have already entered the last 20

[22:05] <ab5tract> Percent of effort long before this

[22:13] <ab5tract> Also: heckin’ A! 80% of roast!!!

[23:06] *** vrurg_ left
[23:13] *** vrurg joined
[23:26] *** finanalyst left
