[00:10] <ugexe> https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=6734&view=logs&j=243e73e1-2fb5-5c3a-4d4f-d5803f355cca&t=03332554-2986-5b21-2ad4-c7f7aca1e5fb

[00:10] <ugexe> we are barely running and of the spectests. for example nothing from S16-* is shown

[00:10] <ugexe> s/and/any/

[00:12] <lizmat> Files=122, Tests=23900

[00:12] <ugexe> at $work we have a CI test that fails of the number of successful tests is reduced by some large percentage

[00:13] <lizmat> should be: Files=1359, Tests=119769

[00:13] <lizmat> I wonder whether the fudging messes up ?

[00:14] <ugexe> https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=6734&view=logs&j=243e73e1-2fb5-5c3a-4d4f-d5803f355cca&t=03332554-2986-5b21-2ad4-c7f7aca1e5fb&l=47

[00:15] <ugexe> echo "making spectest.data smaller"

[00:15] <ugexe> cp t/spec/spectest.data t/spec/spectest.data.backup

[00:15] <ugexe> head -n 150 t/spec/spectest.data.backup > t/spec/spectest.data

[00:15] <lizmat> wtf ?

[00:16] <timo> haha, that's a fun thing to leave in there

[00:16] <timo> presumably a left-over from redeveloping the CI

[00:16] <timo> so that it finishes faster while you're still making tens of changes per day

[00:16] <lizmat> heh

[00:16] <lizmat> sleep&

[00:21] <Geth> ¦ rakudo/ugexe-patch-2: a47c630618 | (Nick Logan)++ (committed using GitHub Web editor) | azure-pipelines.yml

[00:21] <Geth> ¦ rakudo/ugexe-patch-2: Run full spectest in CI

[00:21] <Geth> ¦ rakudo/ugexe-patch-2: review: https://github.com/rakudo/rakudo/commit/a47c630618

[00:51] <Geth> ¦ rakudo/main: ebecbeafa0 | (Nick Logan)++ (committed using GitHub Web editor) | azure-pipelines.yml

[00:51] <Geth> ¦ rakudo/main: Run full spectest in CI (#5747)

[00:51] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ebecbeafa0

[00:53] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: 4 commits pushed by (Nick Logan)++, ab5tract++

[00:53] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: 74b7075434 | Deprecate IO subs that operate on multiple paths in 6.e

[00:53] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: 9bb17dfce3 | Apply revision-gating to chmod/chown/rmdir/unlink

[00:53] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: a694ffd7e9 | Simplify candidates by going with IO() only

[00:53] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: c3ae7b8715 | Remove calls to .IO on IO::Path objects

[00:53] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: review: https://github.com/rakudo/rakudo/compare/bad6872834d8...c3ae7b8715ff

[01:04] <timo> ugexe++ well spotted

[01:16] *** finanalyst left
[01:44] *** guifa joined
[01:52] <SmokeMachine> I wasn’t able to continue trying to fix the cromponent roblem today… :(

[01:58] <timo> last code block of https://docs.raku.org/language/modules#is_export shows a Rainbow bug again i think. the `sub foo() is export(:foo :s2 :net) {}` line has :s2 highlighted as REGEX_DELIMITER and the stuff after that, including the following line, as REGEX_LITERAL and REGEX_SPECIAL, and then somehow the end of the code block is interpreted as REGEX_DELIMITER, STRING, and REGEX_DELIMITER

[02:46] <ab5tract> SmokeMachine: me either :(

[05:36] <guifa> Ugh, looks like I'll really need to make that two exta args for handling multicast

[05:37] <guifa> source-specific host, and interface (though I was loathe to do that, there's no way to specify an interface with a hostname, only for IPv6 literals) 

[05:37] <guifa> default will be 0 which is (afaict) perfectly cromulent on all systems except Mac .... my dev system :) 

[06:05] *** guifa left
[06:42] *** samebchase joined
[07:56] <Geth> ¦ rakudo/main: e7f9223c59 | (Christian Bartolomäus)++ (committed using GitHub Web editor) | src/core.c/stubs.rakumod

[07:56] <Geth> ¦ rakudo/main: [JVM] Add extra check for GLOBAL being null (#5710)

[07:56] <Geth> ¦ rakudo/main: 

[07:56] <Geth> ¦ rakudo/main: This fixes a NullPointerException on the JVM backend for code like

[07:56] <Geth> ¦ rakudo/main: 

[07:56] <Geth> ¦ rakudo/main:   use v6.c.UNKNOWN

[07:56] <Geth> ¦ rakudo/main: 

[07:56] <Geth> ¦ rakudo/main: That code does not blow up on MoarVM, which handles calling "WHO"

[07:56] <Geth> ¦ rakudo/main: on a null object gracefully.

[07:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e7f9223c59

[08:52] *** sena_kun joined
[09:05] *** Xliff left
[09:59] <patrickb> ugexe, timo: The CI spec test mess up is on me. I was the one trying to take the PR from in dev to prod. Sorry for that...

[11:24] <timo> I'm not angry or anything

[11:24] <timo> i'm still very happy about the improvements of the CI stuff

[11:27] <timo> do you think it's worth trying to split the spectest.data into two, three, or four parts / slices / partitions and run multiple jobs in parallel on azure? the test results should be merged together by the "publish test results" task i imagine, and it would possibly get us from commit to spec test results quicker? even if it will probably make newer commits have to wait a little longer for the

[11:27] <timo> simultaneous job limit to allow more to happen

[11:28] <lizmat> doesn't it already run with TEST_JOBS=number of CPUS - 1 ?

[11:28] <timo> yeah but the VMs our stuff runs in doesn't have many CPUs ... not sure if it has more than one

[12:02] <timo> patrickb: can i consider the report of the Rainbow bug from ~12 hours ago "delivered" / "received"?

[12:02] * patrickb did not see yet

[12:02] <timo> here in irc

[12:03] <timo> > "last code block of https://docs.raku.org/language/modules#is_export shows [...]"

[12:07] <patrickb> timo: Got it. Thanks! (I created https://todo.sr.ht/~patrickb/Rainbow/5)

[12:08] <timo> ladies and gentlemen ... this is rainbow number five!

[12:08] <lizmat> .oO( next to cloud #9 )

[12:38] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/12/30/2024-53-mutant-pirate-rings/

[14:21] *** finanalyst joined
[15:04] <timo> i think we have multiple cases in the docs where we have both four space indentation and also =code mixed together, which the rendering makes into a block nested inside a block, which we probably don't want in almost all cases?

[15:05] <timo> do we have like a trivial way to run a .grep or .map over all the RakuDoc that makes up the docs.raku.org data?

[15:07] <finanalyst> timo: is this an issue with the current renderer, or the new Rakuast one?

[15:09] <finanalyst> care needs to be taken as the new AST  parser is deceptively neutral about leading whitespace

[15:10] <finanalyst> if the Rakudoc source has space and / or tab in the leading white space, the AST parser includes them as is

[15:11] <finanalyst> so its possible to get problems when both are used to imply a code block. Is this the issue you mean?

[15:12] <finanalyst> .tell leont I solved my module inside prove6 problem. Turns out it was a path spelling error on my part. Everything fine now

[15:12] <tellable6> finanalyst, I'll pass your message to leont

[15:15] <timo> that sounds kind of like what i mean yeah

[15:15] <timo> just the other day i pushed a commit that fixes such a situation

[15:15] <timo> maybe the patch wasn't correct and instead the rakudoc parser wants a change instead?

[15:17] <timo> https://docs.raku.org/language/regexes#Alternation:_|| don't have a screenshot of what it was before

[15:18] <timo> i think a search for \s+ followed by =code should find most examples of what i mean though

[15:18] <timo> no need to go at the rakudoc data structures necessarily

[15:31] <finanalyst> timo: it is not the rakudoc parser but the Rakudo parser. I asked lizmat about this and the problem is there is a fierce difference of opinion about whether or not and how much a tab is worth in spaces

[15:32] <finanalyst> so the rakudo parser does not take a stance. But if your editor gives you four spaces to a tab, then you may not see it.

[15:33] <finanalyst> Also leading whitespace in rakudoc is important, and this issue is mentioned. see raku.github.io/rakudoc for a much fuller explanation of indent

[15:34] <finanalyst> but the thing you are suggesting is for there to be a check of all RakuDoc sources to find errors

[16:30] <Geth> ¦ roast: 0905a199d0 | (Christian Bartolomäus)++ | integration/error-reporting.t

[16:30] <Geth> ¦ roast: [JVM] Unfudge passing test

[16:30] <Geth> ¦ roast: 

[16:30] <Geth> ¦ roast: Fixed with https://github.com/rakudo/rakudo/commit/e7f9223c59.

[16:30] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/0905a199d0

[18:08] *** finanalyst left
[18:09] *** Altai-man joined
[18:11] *** bartolin left
[18:12] *** bartolin joined
[18:12] *** sena_kun left
[18:12] *** [Tux] left
[18:12] *** rypervenche left
[18:13] *** rypervenche joined
[18:26] *** [Tux] joined
[19:29] <SmokeMachine> I was simplitying the code to try to figure out the problem and got a different error, have anyone seen this one?

[19:29] <SmokeMachine> https://www.irccloud.com/pastebin/eOcTo3Fc/

[19:40] <timo> looks like you're leaking some object that has a condition variable in it that goes into a serialization somewhere

[19:43] <SmokeMachine> it seems to be related to Cro::WebApp::Template::ASTBuilder

[19:43] <timo> probably a "monitor" class?

[19:45] <SmokeMachine> not sure: https://github.com/croservices/cro-webapp/blob/master/lib/Cro/WebApp/Template/ASTBuilder.rakumod#L3

[19:47] <timo> a Promise might have a CondVar in it?

[19:51] <SmokeMachine> I'll try to search for it...

[19:51] <SmokeMachine> I created a new branch whith the minimal code to replicate it...

[20:00] *** Altai-man left
[20:03] *** sena_kun joined
[20:08] <SmokeMachine> with this https://github.com/FCO/Cromponent/blob/minimal-error/lib/Cromponent.rakumod and this https://github.com/FCO/Cromponent/blob/minimal-error/bin/lib/SimpleTest.rakumod, if I run: `raku -Ilib -Ibin/lib -MSimpleTest -e'say SimpleTest.new.Str'` I get: https://usercontent.irccloud-cdn.com/file/dA4YuFP2/image.png

[20:09] <SmokeMachine> and if I comment this line (https://github.com/FCO/Cromponent/blob/minimal-error/lib/Cromponent.rakumod#L19) it "works": https://usercontent.irccloud-cdn.com/file/avirSeF4/image.png

[20:15] <SmokeMachine> And if I add a cal to `$ast.compile`,  it gives the original error... https://www.irccloud.com/pastebin/Ugluln8p/diff.diff

[20:16] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/2rt9ZXI2/image.png

[20:19] <SmokeMachine> the odd thing is that without the `$ast.compile` it returns from the function,prints the `%compiled` and just then dies...

[20:19] <SmokeMachine> I suppose that dies when the role ends being composed...

[20:21] <SmokeMachine> just to point out that if I remove everything related to Cro templates, it works correctly... https://www.irccloud.com/pastebin/WKfuAYTU/diff.diff

[20:22] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/jOcXzGyD/image.png

[20:36] <timo> ah, the block in the map you're returning is closing over these lexicals

[20:37] <timo> try moving that outside, or all the cro template stuff into its own block

[20:39] <timo> it could be the condvar comes from the template repository

[20:44] <timo> ... hmm ... class Cro::Template::Repository is impossible-to-serialize { ... }

[21:20] *** guifa joined
[21:21] <SmokeMachine> timo: but it is inside its own block (the sub compile-cromponent, no?)

[21:24] <timo> but that's the outer of the sub that you're returning

[21:27] <timo> closures close over all their outers, that's how that captures these variables

[21:29] <SmokeMachine> do you mean something like this? https://www.irccloud.com/pastebin/deeaFhZ0/

[21:31] <timo> there the repository is still being closed over by the renderer sub

[22:07] <SmokeMachine> sorry, I don't get it... :(

[22:08] <timo> try moving the `sub (|) { return 42 }` all the way to the top of the code and make sure it doesn't have any Very Special things in the same block / scope it's in

[22:10] <SmokeMachine> but on the real code that will not exist... it should return the return of $ast.compile...

[22:11] <timo> right, then make something silly like

[22:11] <timo> sub make-returner($value) { return sub (|) { $value } }

[22:11] <timo> that would then go all the way outside

[22:13] <SmokeMachine> but the $ast.compile already returns a func... :(

[22:15] <timo> oh, ok

[22:15] <timo> but does doing that make the error about CondVar being serialized go away though?

[22:17] <SmokeMachine> you mean something like this? this still gives the same error https://www.irccloud.com/pastebin/EUESSTaT/a.raku

[22:18] <SmokeMachine> this too:  https://www.irccloud.com/pastebin/gPSG2CCe/a.raku

[22:21] <timo> ok, if i want to run your code, i just need to zef install Cro::WebApp::Template ?

[22:21] <SmokeMachine> yes, I think so...

[22:26] <timo> Missing or wrong version of dependency 'EVAL_0' (from '/var/home/timo/raku/ecosystem/bughunt/cromponent/bin/lib/SimpleTest.rakumod (SimpleTest)')

[22:26] <timo> :D

[22:26] <SmokeMachine> 👍

[22:27] <timo> right now i have the two files from your message ~2.5h ago

[22:27] <SmokeMachine> would you like if I commit my current files?

[22:29] <timo> i'm not sure. the error i'm getting, that's not the error you were getting, right?

[22:30] <SmokeMachine> that's one of them...

[22:31] <SmokeMachine> I pushed the current one...

[22:32] <SmokeMachine> running : `raku -I. -Ibin/lib -MSimpleTest -e'say SimpleTest.new.Str'` gives this:

[22:32] <SmokeMachine> https://www.irccloud.com/pastebin/LtERpdHz/

[22:33] <timo> ok good i now get the "cannot invoke" error

[22:38] <SmokeMachine> the intention here is to have a role that when added to a Class it will run the method RENDER from that class, compile it as a cro template (that returns a sub) and add that sub as a method to the class. That method receives the object it self as the only parameter and it is used as the data on the template... and I'm adding that with .^add_method to that exist inside the class itself and not have to compile it every call

[22:40] <timo> ok, so the explosion happens in a spot where we're trying to call &DYNAMIC with '$*TEMPLATE-REPOSITORY', that makes the "can't invoke an object belonging to blah blah"

[22:41] <timo> the attempt to get &DYNAMIC returns a null

[22:41] <SmokeMachine> how did you find it?

[22:42] <timo> the magic of rr

[22:43] <SmokeMachine> rr?

[22:43] <timo> record and reply, from the mozilla project

[22:43] <timo> replay*

[22:44] <timo> i recorded the execution that exploded with "rr record raku -I blabla", then i grabbed the right PID and event number before the explosion with "rr replay -a -M" and jumped into a gdb nearby with "rr replay -f the-pid -g the-event"

[22:44] <timo> then i set up a breakpoint in MVM_exception_throw_adhoc and let it run

[22:45] <timo> from there i could just get the currently-being-executed bytecode with MVM_dump_bytecode(tc) and the values in the registers in question from tc->cur_frame->work[3].o and ->work[4].o

[22:45] <timo> one of them was a Str object, so i took the contents with MVM_repr_get_str(tc, $bla) and MVM_string_utf8_encode_C_string(tc, $blubb)

[22:45] <timo> the other was just a VMNull

[22:46] <SmokeMachine> great, thank you very much!

[22:47] <timo> you need linux for rr :|

[22:47] <SmokeMachine> I'll try to findout that DYNAMIC

[22:48] *** finanalyst joined
[22:51] <timo> i'm not sure why it's not able to find the TEMPLATE-REPOSITORY dynamic variable. i thought it would first try to getdynlex and only if that doesn't work even try to call DYNAMIC

[22:53] *** sena_kun left
[22:54] <timo> https://gist.github.com/timo/3972f33fe9683c99126557c317f0627c this is a full backtrace

[22:54] <guifa> SWEET

[22:54] <guifa> finally have it working

[22:54] <guifa> multicast via syscal

[22:55] <timo> it could very well be that one of the frames in the middle between compile-cromponent and the corresponding statement_prefix:sym<BEGIN> is acting as a wall through which no dynamic variables can go

[22:56] <guifa> method bind-udp(IO::Socket::Async:U: Str() $host, Int() $port where Port-Number, :$broadcast, :$multicast, Int() :$interface = 0, Str() :$only-from, :$loop-back, :$enc = 'utf-8', :$scheduler = $*SCHEDULER) { ... }  is the final signature in Raku

[22:56] <SmokeMachine> oh! it's trying to get $*TEMPLATE-REPOSITORY

[22:57] <timo> i'm also not 100% sure it's necessary to have a BEGIN in between for the case when you're already at begin time because you're running code in role composition, but that might just not be possible to skip without changes to Cro::WebApp::Template?

[22:57] <timo> guifa: that's cool :)

[22:58] <timo> congrats on the breakthrough

[22:58] <guifa> I still don't like that some of the options are ... less relevant when combined

[22:59] <guifa> maybe it would be opportune on the Raku side to have bind-udp-multicast and bind-udp-broadcast

[22:59] <timo> could having a bunch of multi candidates be an option?

[23:00] <guifa> yeah

[23:00] <guifa> multi method bind-udp( .... :$broadcast); 

[23:01] <guifa> multi method bind-udp( ... , :$multicast!, Str() :$only-from, :$loop-back, :$interface )

[23:05] <guifa> actually could make the broadcast one separate too.  it doesn't require anything handled diffferently on the backend really, but its IP should always be 255.255.255.255 

[23:07] <guifa> would also automagically take care of the :broadcast, :multicast by tossing a no matching signature error

[23:46] <lizmat> timo: re i thought it would first try to getdynlex and only if that doesn't work even try to call DYNAMIC

[23:46] <lizmat> no, that's incorrect

[23:46] <lizmat> $*FOO is codegenned as &DYNAMIC('$*FOO')

