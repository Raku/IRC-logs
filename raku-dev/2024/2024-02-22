[01:44] *** MasterDuke left
[07:53] *** [Tux] left
[07:55] *** [Tux] joined
[09:11] *** sena_kun joined
[09:20] *** timo left
[09:25] *** timo joined
[09:43] *** timo left
[09:47] *** timo joined
[10:48] <Geth> ¦ nqp/main: 6d05c868ab | (Elizabeth Mattijsen)++ | src/vm/moar/QAST/QASTCompilerMAST.nqp

[10:48] <Geth> ¦ nqp/main: Remove dead base64 decoding logic

[10:48] <Geth> ¦ nqp/main: 

[10:48] <Geth> ¦ nqp/main: It's done by the VMs nowadays

[10:48] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/6d05c868ab

[11:04] *** rypervenche left
[11:14] <Geth> ¦ nqp/main: f82887fab4 | (Elizabeth Mattijsen)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[11:14] <Geth> ¦ nqp/main: Add nqp::const::MVM_reg_xxx constants

[11:14] <Geth> ¦ nqp/main: 

[11:14] <Geth> ¦ nqp/main: On the MoarVM backend only.  These are being defined as local

[11:14] <Geth> ¦ nqp/main: native integers in a few places in NQP

[11:14] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/f82887fab4

[11:14] <Geth> ¦ nqp/main: 46e0b70e91 | (Elizabeth Mattijsen)++ | 10 files

[11:14] <Geth> ¦ nqp/main: Bootstrap NQP to allow nqp::const::MVM_reg_xxx constants

[11:14] <Geth> ¦ nqp/main: 

[11:14] <Geth> ¦ nqp/main: Inside NQP itself

[11:14] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/46e0b70e91

[11:19] *** finanalyst joined
[11:45] <Geth> ¦ nqp/main: 35d5d3c0ae | (Elizabeth Mattijsen)++ | 4 files

[11:45] <Geth> ¦ nqp/main: Use nqp::const::MVM_reg constants were possible

[11:45] <Geth> ¦ nqp/main: 

[11:45] <Geth> ¦ nqp/main: And remove the runtime initialization of local integer values

[11:45] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/35d5d3c0ae

[12:09] <Geth> ¦ rakudo/main: 47f2b131d6 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[12:09] <Geth> ¦ rakudo/main: Bump NQP to get nqp::const::MVM_reg constants

[12:09] <Geth> ¦ rakudo/main: 

[12:09] <Geth> ¦ rakudo/main: The effect on MAST production however appears minimal

[12:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/47f2b131d6

[13:01] *** finanalyst left
[15:05] <Geth> ¦ rakudo: vrurg++ created pull request #5531: Make use of TWEAK to setup C3MRO lock

[15:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5531

[15:07] <vrurg> lizmat++ ^^^^^

[15:08] <lizmat> vrurg: that already works?

[15:08] <vrurg> There is no TWEAK in any class yet, so – it does.

[15:09] <lizmat> BTW, TWEAK will always be called *without* ay args

[15:09] <vrurg> Perhaps the PR should wait until mutli-tweak works, if it's not yet.

[15:09] <lizmat> *any

[15:09] <lizmat> so: method TWEAK()

[15:09] <vrurg> You're wrong. I got a complain about named 'roles'.

[15:11] <lizmat> ah?

[15:12] <lizmat> hmmm  I guess the BUILDPLAN does pass the args then...

[15:13] <Geth> ¦ rakudo/main: 5c28987801 | (Vadim Belman)++ (committed using GitHub Web editor) | 6 files

[15:13] <Geth> ¦ rakudo/main: Make use of TWEAK to setup C3MRO lock (#5531)

[15:13] <Geth> ¦ rakudo/main: 

[15:13] <Geth> ¦ rakudo/main: Makes much cleaner and reliable code.

[15:13] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5c28987801

[15:15] <vrurg> I planned to see all checks passing first... ;)

[15:17] <lizmat> yeah, as long as only one of the roles of a class has a TWEAK in it, and the class itself doesn't, then it works currently  :-)

[15:17] <vrurg> Tried adding TWEAK to MethodContainer and got unresolved method conflict. So, C3MRO is just a playground for now.

[15:18] <vrurg> Yep, exactly what you said. :)

[15:28] <lizmat> tests are clean for me  :-)

[16:30] <Geth> ¦ nqp/main: c3cdb9d407 | (Elizabeth Mattijsen)++ | 3 files

[16:30] <Geth> ¦ nqp/main: Move helper subs of role appliers

[16:30] <Geth> ¦ nqp/main: 

[16:30] <Geth> ¦ nqp/main: So they can be used anywhere when setting up NQP's how

[16:30] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/c3cdb9d407

[16:35] *** sena_kun left
[16:38] <lizmat> vrurg: I think 5c28987801 because the BUILDPLAN is created by src/Perl6/Metamodel/BUILDPLAN.nqp  and not by NQP

[16:38] <linkable6> (2024-02-22) https://github.com/rakudo/rakudo/commit/5c28987801 Make use of TWEAK to setup C3MRO lock (#5531)

[16:38] <lizmat> *works

[16:38] <lizmat> and not by anything I did yet

[16:57] *** sena_kun joined
[18:47] <Geth> ¦ nqp/main: 503957140a | (Elizabeth Mattijsen)++ | 8 files

[18:47] <Geth> ¦ nqp/main: Don't use runtime WHAT for initialization

[18:47] <Geth> ¦ nqp/main: 

[18:47] <Geth> ¦ nqp/main: Don't know what I was thinking when I did that.  Even if self is

[18:47] <Geth> ¦ nqp/main: a subclass of the class of the code, the attribute's class is still

[18:47] <Geth> ¦ nqp/main: the class of the code, not the subclass!

[18:47] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/503957140a

[19:17] <vrurg> lizmat: I'd say that Raku metamodel BUILDPLAN does the right thing here.

[20:20] *** finanalyst joined
[21:17] *** MasterDuke joined
[23:01] *** guifa joined
[23:45] *** sena_kun left
