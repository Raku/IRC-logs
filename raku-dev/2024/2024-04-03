[01:01] <Geth> ¦ rakudo/main: 6507e0cf52 | (Daniel Green)++ | 3 files

[01:01] <Geth> ¦ rakudo/main: Unbreak the JVM build

[01:01] <Geth> ¦ rakudo/main: 

[01:01] <Geth> ¦ rakudo/main: An edit of 196fbee that un-multis the PseudoStash new()s and just adds a

[01:01] <Geth> ¦ rakudo/main: different method that gets called after the PseudoStash is created. The

[01:01] <Geth> ¦ rakudo/main: suspicion is that maybe this is to early in the build for the JVM backend

[01:01] <Geth> ¦ rakudo/main: to support multis.

[01:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6507e0cf52

[01:01] <Geth> ¦ rakudo/main: a4587097ee | MasterDuke17++ (committed using GitHub Web editor) | 3 files

[01:01] <Geth> ¦ rakudo/main: Merge pull request #5544 from MasterDuke17/unbreak_jvm_build

[01:02] <Geth> ¦ rakudo/main: 

[01:02] <Geth> ¦ rakudo/main: Unbreak the JVM build

[01:02] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a4587097ee

[01:06] <Geth> ¦ rakudo: MasterDuke17++ created pull request #5547: Convert uses of `if nqp::getcomp('Raku').backend.name eq <...>` to `#?if <...>`

[01:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5547

[01:48] *** MasterDuke joined
[01:49] <MasterDuke> .

[01:49] <tellable6> 2024-04-02T06:07:36Z #raku-dev <nine> MasterDuke: I was thinking let's just keep that name as it is :D

[01:49] <MasterDuke> nine: i was tempted

[01:51] <MasterDuke> lizmat: new jvm breakage, any idea? https://gist.github.com/MasterDuke17/ed35296a6594ec4d16ff8d1b50d2e2bd

[02:34] <MasterDuke> the only attribute in the list is `$!handle`

[02:42] *** rypervenche left
[02:50] *** rypervenche joined
[06:39] <[Tux]> Rakudo v2024.03-62-ga4587097e (v6.d) on MoarVM 2024.03-1-g69a06919c

[06:39] <[Tux]> csv-test-xs-20      0.144 -  0.144

[06:39] <[Tux]> csv-ip5xs           0.263 -  0.268

[06:39] <[Tux]> test-t --race       0.287 -  0.313

[06:39] <[Tux]> test-t              0.428 -  0.436

[06:39] <[Tux]> csv-ip5xs-20        1.174 -  1.196

[06:39] <[Tux]> test-t-20 --race    1.248 -  1.435

[06:39] <[Tux]> csv-parser          1.641 -  1.650

[06:39] <[Tux]> test                1.979 -  1.990

[06:39] <[Tux]> test-t-20           5.454 -  5.467

[07:59] <ab5tract> lizmat: yeah, that matches what I’m seeing. It blows my mind a bit, but it matches what I’m seeing

[08:10] *** nebuchadnezzar joined
[08:44] *** MasterDuke left
[08:56] <lizmat> ab5tract: https://6guts.wordpress.com/2021/03/15/towards-a-new-general-dispatch-mechanism-in-moarvm/ might be of interest for you

[09:20] <lizmat> MasterDuke: no idea, the error location file I haven't touched yet

[09:20] <tellable6> lizmat, I'll pass your message to MasterDuke

[09:39] *** sena_kun joined
[09:49] <lizmat> greppable6: publsh_method_cache

[09:49] <greppable6> lizmat, Found nothing!

[09:49] <lizmat> greppable6: publish_method_cache

[09:49] <greppable6> lizmat, 6 lines, 5 modules: https://gist.github.com/6e02f279f167b822f3edb430a4b56ade

[10:23] <Geth> ¦ rakudo/main: 063816595d | (Stefan Seifert)++ | 3 files

[10:23] <Geth> ¦ rakudo/main: RakuAST: Fix up "Unbreak the JVM build"

[10:23] <Geth> ¦ rakudo/main: 

[10:23] <Geth> ¦ rakudo/main: While commit 6507e0cf52f140870851dda96a43bd8f9971f891 unbroak the JVM

[10:23] <Geth> ¦ rakudo/main: build, it regressed the spectests the original commit was intended to

[10:23] <Geth> ¦ rakudo/main: fix.

[10:23] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/063816595d

[10:23] <Geth> ¦ rakudo/main: 30ff12ece3 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[10:23] <Geth> ¦ rakudo/main: RakuAST: fix instantiation of generic attributes when applying roles

[10:23] <Geth> ¦ rakudo/main: 

[10:23] <Geth> ¦ rakudo/main: The logic for detecting generic attributes that need instantiation when

[10:23] <Geth> ¦ rakudo/main: applying a role relies on the properties of the package set for that

[10:23] <Geth> ¦ rakudo/main: attribute. Previously this package was always the package the attribute

[10:23] <Geth> ¦ rakudo/main: was declared in, but for roles it has to be a Generic that will be

[10:23] <Geth> ¦ rakudo/main: instantiated for the class consuming the role, i.e. $?CLASS. After all

[10:23] <Geth> ¦ rakudo/main: <…commit message has 5 more lines…>

[10:23] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/30ff12ece3

[10:23] <Geth> ¦ rakudo/main: 1f458a0f15 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[10:23] <Geth> ¦ rakudo/main: RakuAST: fix auto_viv_container missing on native attributes

[10:23] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1f458a0f15

[10:23] <nine> 997

[10:23] <nine> vrurg: in the end it was just https://github.com/rakudo/rakudo/commit/30ff12ece3 but finding this was a bit of a hassle

[10:36] <Geth> ¦ rakudo/main: 5cd846b274 | (Elizabeth Mattijsen)++ | 2 files

[10:36] <Geth> ¦ rakudo/main: Move helper methods to ::Naming

[10:36] <Geth> ¦ rakudo/main: 

[10:36] <Geth> ¦ rakudo/main: for more general accesibility

[10:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5cd846b274

[10:36] <Geth> ¦ rakudo/main: 758500f438 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/TypePretense.nqp

[10:36] <Geth> ¦ rakudo/main: Streamline Metamodel::TypePretense

[10:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/758500f438

[11:00] <Geth> ¦ rakudo/main: ad12f2a9b4 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/Versioning.nqp

[11:00] <Geth> ¦ rakudo/main: Fix naming of anonymous classes

[11:00] <Geth> ¦ rakudo/main: 

[11:00] <Geth> ¦ rakudo/main: Somehow the trailing > got lost pretty recently

[11:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ad12f2a9b4

[11:20] <Geth> ¦ rakudo/main: 802e8140d7 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/ParametricRoleGroupHOW.nqp

[11:20] <Geth> ¦ rakudo/main: Use "global" helper method instead of local helper sub

[11:20] <Geth> ¦ rakudo/main: 

[11:20] <Geth> ¦ rakudo/main: Because that's possible since 5cd846b274

[11:20] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/802e8140d7

[11:29] <nine> Anyone have a clue why `Int:: == Int` would give a "Preceding context expects a term, but found infix == instead." in RakuAST? It's clearly a mis-parse, but I don't get how we can end up expecting a term there.

[11:31] <lizmat> my only suggestion would be to look for '::' in the grammar, and put debugging statements there to see it passes by there

[12:26] <Geth> ¦ rakudo/main: e35ac0b42c | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/AttributeContainer.nqp

[12:26] <Geth> ¦ rakudo/main: Make sure adding an attribute is threadsafe

[12:26] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e35ac0b42c

[12:36] <nine> Oh, we're trying to parse an <args> because we didn't recognize Int:: as a known name.

[12:37] <nine> m: Foo:: == Int

[12:37] <camelia> rakudo-moar e35ac0b42: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Preceding context expects a term, but found infix == instead.␤at <tmp>:1␤------> Foo:: ==⏏ Int␤»

[12:48] <Geth> ¦ rakudo/main: e066203d4b | (Stefan Seifert)++ | src/Raku/ast/resolver.rakumod

[12:48] <Geth> ¦ rakudo/main: RakuAST Fix mis-parse of package-loookups in term position

[12:48] <Geth> ¦ rakudo/main: 

[12:48] <Geth> ¦ rakudo/main: In Int:: === Int.WHO we didn't identify Int:: as a known name and then

[12:48] <Geth> ¦ rakudo/main: tried to parse the infix operator as an argument to a supposed "Int::"

[12:48] <Geth> ¦ rakudo/main: sub call. When checking whether the name is known we have to omit a

[12:48] <Geth> ¦ rakudo/main: possible trailing empty name part.

[12:48] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e066203d4b

[13:36] <nine> So why is this meta-object.....why do I suddenly smell coffee? OMG there's still coffee in my mug! # it's the small joys

[13:38] <lizmat> .oO( it's the way HOW you do it )

[14:29] <Geth> ¦ rakudo/main: 7ae4c397cf | (Stefan Seifert)++ | src/Raku/ast/code.rakumod

[14:29] <Geth> ¦ rakudo/main: RakuAST: fix premature composing of packages

[14:29] <Geth> ¦ rakudo/main: 

[14:29] <Geth> ¦ rakudo/main: An our scoped sub in the middle of a class would lead to that class

[14:29] <Geth> ¦ rakudo/main: getting composed when registering the sub in the class' stash.

[14:29] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7ae4c397cf

[14:29] <Geth> ¦ rakudo/main: e2e7e5833f | (Stefan Seifert)++ | src/Raku/ast/meta.rakumod

[14:29] <Geth> ¦ rakudo/main: RakuAST: make Meta and StubbedMeta more interchangeable

[14:29] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e2e7e5833f

[14:29] <nine> 998

[14:37] <jdv> almost 4 nines

[14:42] <vrurg> I thought we have only one nine in this channel...

[14:53] <japhb> Given my Internet connection is at best only 90% available, I can confirm just one 9.\

[15:04] <Geth> ¦ rakudo/main: 9b90a609d8 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[15:04] <Geth> ¦ rakudo/main: RakuAST: fix "of" trait effect missing in various situations

[15:04] <Geth> ¦ rakudo/main: 

[15:04] <Geth> ¦ rakudo/main: In my @arr[5] of Int the resulting array would be Nil-typed as when setting

[15:04] <Geth> ¦ rakudo/main: up the initializer only with the not-supplied leading type constraint,

[15:04] <Geth> ¦ rakudo/main: ignoring the type we got from the of trait.

[15:04] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/9b90a609d8

[15:04] <nine> 999

[15:06] <lizmat> 4 9's!

[15:08] <japhb> .oO( Like every great engineer, Stefan adds an extra nine on every project he's on ... )

[15:16] <jdv> ha

[15:37] <lizmat> weekly: https://www.youtube.com/watch?v=BId0VVDo7jA&t=2056s

[15:37] <notable6> lizmat, Noted! (weekly)

[16:21] <Geth> ¦ rakudo/main: ea84171cdd | (Stefan Seifert)++ | 3 files

[16:21] <Geth> ¦ rakudo/main: RakuAST: actually make <-> blocks's parameters rw by default

[16:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ea84171cdd

[16:21] <nine> And this ladies and gentlemen gives us.... 1001 :)

[16:53] <[Coke]> NUMBER GO UP

[16:53] <[Coke]> nine++

[17:06] <lizmat> nine+

[17:06] <lizmat> +

[17:17] <Geth> ¦ nqp/main: 4bd6fe71af | (Elizabeth Mattijsen)++ | src/core/Hash.nqp

[17:17] <Geth> ¦ nqp/main: Initial stab at a "dd" for NQP

[17:17] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/4bd6fe71af

[18:12] <Geth> ¦ nqp/main: c0043fbb1f | (Elizabeth Mattijsen)++ | src/core/Hash.nqp

[18:12] <Geth> ¦ nqp/main: Make sure we catch errors in stringification

[18:12] <Geth> ¦ nqp/main: 

[18:12] <Geth> ¦ nqp/main: Even though something appears to be a string

[18:12] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/c0043fbb1f

[18:54] <Geth> ¦ nqp/main: 1967087e5d | (Elizabeth Mattijsen)++ | src/core/Hash.nqp

[18:54] <Geth> ¦ nqp/main: Further dd tweaks

[18:54] <Geth> ¦ nqp/main: 

[18:54] <Geth> ¦ nqp/main: - handle multiple args correctly

[18:54] <Geth> ¦ nqp/main: - use HLL .Str if possible

[18:54] <Geth> ¦ nqp/main: - handle type objects directly to prevent HLL warnings

[18:54] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/1967087e5d

[19:16] <Geth> ¦ rakudo/main: e96af21686 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[19:16] <Geth> ¦ rakudo/main: Bump NQP to get more dd tweaks

[19:16] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e96af21686

[19:16] <lizmat> that'd be the NQP dd

[19:51] <ab5tract> lizmat++

[22:47] <japhb> nine++ lizmat++

[23:20] <ab5tract> Oh yeah, nine++ too

[23:46] *** sena_kun left
[23:50] *** MasterDuke joined
