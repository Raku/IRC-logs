[08:14] <timo> i think i misread the code and it's fine the way it is, oops

[08:17] <bartolin_> hi timo, I wanted to say thousand thanks for https://github.com/rakudo/rakudo/commit/81d43af66e. Compiling rakudo-j became so incredible slow without that.

[08:19] <timo> YW! i totally lucked into that one :)

[09:44] *** sena_kun joined
[12:34] <Geth> ¦ rakudo/main: 0db7149f4f | (Elizabeth Mattijsen)++ | src/core.c/OperatorProperties.rakumod

[12:34] <Geth> ¦ rakudo/main: Fix docu typos

[12:34] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0db7149f4f

[12:39] <Geth> ¦ rakudo/main: 485474df40 | (Elizabeth Mattijsen)++ | 2 files

[12:39] <Geth> ¦ rakudo/main: RakuAST: fix handling of markup in =alias

[12:39] <Geth> ¦ rakudo/main: 

[12:39] <Geth> ¦ rakudo/main: As described in https://github.com/Raku/RakuDoc-GAMMA/issues/53

[12:39] <Geth> ¦ rakudo/main: 

[12:39] <Geth> ¦ rakudo/main: The fix is a bit of a hack: take the contents of the =alias

[12:39] <Geth> ¦ rakudo/main: specification minus the lemma, wrap that in a =begin fake / =end fake

[12:39] <Geth> ¦ rakudo/main: block and run .AST on it.  Then remove the outer block and process

[12:39] <Geth> ¦ rakudo/main: <…commit message has 6 more lines…>

[12:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/485474df40

[13:17] <Geth> ¦ rakudo: usev6++ created pull request #5691: Restore old logic in find_best_dispatchee

[13:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5691

[13:59] <Geth> ¦ rakudo/main: 65a98ce22a | (Christian Bartolomäus)++ (committed using GitHub Web editor) | src/Perl6/bootstrap.c/BOOTSTRAP.nqp

[13:59] <Geth> ¦ rakudo/main: Restore old logic in find_best_dispatchee (#5691)

[13:59] <Geth> ¦ rakudo/main: 

[13:59] <Geth> ¦ rakudo/main: The refactoring from 70b8b229fa changed the logic to detect a mismatch

[13:59] <Geth> ¦ rakudo/main: between the expected type and the passed in value when doing the type

[13:59] <Geth> ¦ rakudo/main: check for native parameters. But if I'm not mistaken the new version

[13:59] <Geth> ¦ rakudo/main: got some cases wrong:

[13:59] <Geth> ¦ rakudo/main: 

[13:59] <Geth> ¦ rakudo/main: <…commit message has 10 more lines…>

[13:59] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/65a98ce22a

[14:16] <timo> would love to see tests that systematically try to cover this space, but honestly that sounds difficult

[14:31] <bartolin_> yeah, that would be nice. I tried to come up with some simple examples that would show the changed behaviour, but I failed. And even the problem with variable interpolation (https://github.com/rakudo/rakudo/issues/5688) which seemed to hit this code did only show up on the JVM backend.

[15:06] <timo> are you already aware of the coverage log that moar offers? could help figure out what's going on on the moar side, even if not on the jvm side

[15:08] <bartolin_> no, I have to admit that I'm not aware of that. Do you have a pointer ready?

[15:21] <timo> there's two env vars, one sets the filename and the other the mode, where you can decide if you want lines to only report being hit once, or every time (so kinda like a tracing mode)

[15:21] <timo> and there's also nqp::coveragecontrol to switch modes while it's running

[15:22] <timo> comma also has support for coverage built in, integrated with the test running stuff

[15:30] <bartolin_> thanks, will have a look into that

[16:16] <Geth> ¦ rakudo/fix-negated-junctions: bdf1e2bbd3 | ab5tract++ | src/Perl6/Optimizer.nqp

[16:16] <Geth> ¦ rakudo/fix-negated-junctions: Scope to symmetric comparison ops

[16:16] <Geth> ¦ rakudo/fix-negated-junctions: review: https://github.com/rakudo/rakudo/commit/bdf1e2bbd3

[16:17] <ab5tract> `ne` was being a total jerk, so that's still NYI

[16:28] <timo> desu ne

[16:40] * ab5tract learns some Japanese

[17:23] <Geth> ¦ nqp/main: 4651b898bf | (Christian Bartolomäus)++ (committed using GitHub Web editor) | 4 files

[17:23] <Geth> ¦ nqp/main: [JVM] Deserialize VMNull as such

[17:23] <Geth> ¦ nqp/main: 

[17:23] <Geth> ¦ nqp/main: The old deserialization code gave back a Java null when it encountered

[17:23] <Geth> ¦ nqp/main: a VMNull. This led to problems when compiling Rakudo's settings: Class

[17:23] <Geth> ¦ nqp/main: attributes that were initialized to nqp::null ended up as NQPMu.

[17:23] <Geth> ¦ nqp/main: 

[17:23] <Geth> ¦ nqp/main: Fixes https://github.com/Raku/nqp/issues/828.

[17:23] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/4651b898bf

[17:33] <Geth> ¦ rakudo/main: ba84cd998d | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[17:33] <Geth> ¦ rakudo/main: Bump NQP to get bartolin's JVM fixes

[17:33] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ba84cd998d

[17:36] <Geth> ¦ rakudo/main: 3f0f974e4b | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[17:36] <Geth> ¦ rakudo/main: RakuAST: allow * is =config identifier

[17:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3f0f974e4b

[18:29] *** codesections joined
[18:40] *** librasteve_ left
[18:56] *** codesections left
[18:56] *** codesections1 joined
[18:58] *** codesections1 is now known as codesections

[19:21] *** codesections left
[19:22] *** librasteve_ joined
[19:22] *** codesections joined
[19:22] *** codesections left
[19:23] *** codesections joined
[19:28] *** codesections left
[19:43] * lizmat detects an off-by-one

[19:44] <lizmat> m: dd "foo doo".rindex(" ",7)

[19:44] <camelia> rakudo-moar 3f0f974e4: OUTPUT: «index start offset (7) out of range (0..7)␤  in block <unit> at <tmp> line 1␤␤»

[22:04] <Geth> ¦ rakudo/fail-gracefully-outside-of-supported-terminal-emulator: 3c01c08aab | ab5tract++ | 5 files

[22:04] <Geth> ¦ rakudo/fail-gracefully-outside-of-supported-terminal-emulator: Fail gracefully when REPL is initialized without TTY

[22:04] <Geth> ¦ rakudo/fail-gracefully-outside-of-supported-terminal-emulator: 

[22:04] <Geth> ¦ rakudo/fail-gracefully-outside-of-supported-terminal-emulator: This patch was originally intended to address R#4378 (#4378)[^1],

[22:04] <Geth> ¦ rakudo/fail-gracefully-outside-of-supported-terminal-emulator: but that problem is actually unresolvable as long as starting

[22:04] <Geth> ¦ rakudo/fail-gracefully-outside-of-supported-terminal-emulator: `raku` outside of a TTY automatically engages the wait-until-EOF

[22:04] <Geth> ¦ rakudo/fail-gracefully-outside-of-supported-terminal-emulator: mode (the same behavior as calling `perl` without `-e`).

[22:04] <Geth> ¦ rakudo/fail-gracefully-outside-of-supported-terminal-emulator: 

[22:04] <linkable6> R#4378 [open]: https://github.com/rakudo/rakudo/issues/4378 [Windows] $*IN.t is False on Windows, causing issues with the REPL

[22:04] <Geth> ¦ rakudo/fail-gracefully-outside-of-supported-terminal-emulator: <…commit message has 11 more lines…>

[22:04] <Geth> ¦ rakudo/fail-gracefully-outside-of-supported-terminal-emulator: review: https://github.com/rakudo/rakudo/commit/3c01c08aab

[22:14] <Geth> ¦ nqp/add-is-interactive: 2e8924f9e8 | ab5tract++ | src/HLL/Compiler.nqp

[22:14] <Geth> ¦ nqp/add-is-interactive: Add is-interactive to HLL::Compiler

[22:14] <Geth> ¦ nqp/add-is-interactive: 

[22:14] <Geth> ¦ nqp/add-is-interactive: This commit nukes the hard-to-grok distinction of

[22:14] <Geth> ¦ nqp/add-is-interactive: `interactive` vs `non-interactive` repl-modes and

[22:14] <Geth> ¦ nqp/add-is-interactive: replaces it with the following options:

[22:14] <Geth> ¦ nqp/add-is-interactive: 

[22:14] <Geth> ¦ nqp/add-is-interactive:     - `tty`

[22:14] <Geth> ¦ nqp/add-is-interactive: <…commit message has 21 more lines…>

[22:14] <Geth> ¦ nqp/add-is-interactive: review: https://github.com/Raku/nqp/commit/2e8924f9e8

[22:30] *** sena_kun left
[23:54] <Geth> ¦ rakudo/fix-negated-junctions: 808e5e48d0 | ab5tract++ | 3 files

[23:54] <Geth> ¦ rakudo/fix-negated-junctions: Use OperatorProperties

[23:54] <Geth> ¦ rakudo/fix-negated-junctions: review: https://github.com/rakudo/rakudo/commit/808e5e48d0

[23:56] <Geth> ¦ rakudo/fix-negated-junctions: 5f2b8c1550 | ab5tract++ | 3 files

[23:56] <Geth> ¦ rakudo/fix-negated-junctions: Use OperatorProperties

[23:56] <Geth> ¦ rakudo/fix-negated-junctions: review: https://github.com/rakudo/rakudo/commit/5f2b8c1550

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: 9 commits pushed by (Elizabeth Mattijsen)++, (Christian Bartolomäus)++, ab5tract++

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: c972df6865 | Allow a value of 0 with :vent-at

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: a917cf0321 | Don't use ANSI color in error messages always

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: fa72e6be9c | Make sure test compiles without RakuAST

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: 0db7149f4f | Fix docu typos

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: 485474df40 | RakuAST: fix handling of markup in =alias

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: 65a98ce22a | Restore old logic in find_best_dispatchee (#5691)

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: ba84cd998d | Bump NQP to get bartolin's JVM fixes

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: 3f0f974e4b | RakuAST: allow * is =config identifier

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: 6a74196bf2 | Merge branch 'main' into fix-negated-junctions

[23:57] <Geth> ¦ rakudo/fix-negated-junctions: review: https://github.com/rakudo/rakudo/compare/5f2b8c155066...6a74196bf236

