[00:03] *** finanalyst left
[08:35] <gfldex> I would mich prefere a general styling hint (like the class attribute in html) over specifying individual unicode characters to be used for individual elements.

[08:43] *** sena_kun joined
[08:58] *** finanalyst joined
[10:28] *** finanalyst left
[15:29] *** finanalyst joined
[15:55] <finanalyst> lizmat ping

[15:56] <lizmat> pong

[15:57] <finanalyst> I just got back from a long walk. Fabulous day and some nice hills. I know its not your thing, but it gets me out of the house. 

[15:57] <finanalyst> I actually like =for foo :bullit=<E<BALLOT BOX>>

[15:58] <finanalyst> The '=' is in keeping with other Rakudoc elements

[15:58] <lizmat> yeah, that's why I thought of it  :-)

[15:59] <finanalyst> I'm having problems with modules not compiling. How do I force the compilation of a local module, eg. `lib/RakuDoc/PromiseStrings`?

[15:59] <lizmat> now, whether it is easy / feasible to implement, is another matter

[15:59] <finanalyst> I'll add '=' to the PR

[16:00] <finanalyst> I was wondering whether it could be a sort of syntactic sugar for `=rakudoc ...`

[16:00] <lizmat> assuming you run with -I.  , then rm -rf .precomp should do the trick

[16:01] <finanalyst> I got rid of the .precomp and now it doesnt like the module at all

[16:02] <finanalyst> I tried a raku program with 'use RakuDoc::PromiseStrings', but that didnt work (I thought it would recompile)

[16:02] <lizmat> how do you invoke that program?

[16:04] <finanalyst> I just realised as I was writing that I need to call it with raku  -I. force-compile. Instead I had it as an executable with #!/usr/env raku

[16:07] <finanalyst> now it works. So suppose I do want to force a recompile inside a script? I set use lib 'lib'; nuke the .precomp files, but then?

[16:09] <lizmat> you should almost never use -Ilib

[16:10] <lizmat> you should use -I. if at all possible, as that will read the META6.json and know where to look for modules

[16:11] <finanalyst> I was thinking of the `use lib 'lib' inside a raku script. I thought was would be the same as -I.

[16:11] <lizmat> use lib "." is the same as -I.

[16:12] <finanalyst> Ah.

[16:13] <finanalyst> am I asking questions answered elsewhere? if so, sorry, I'll go read

[16:22] <lizmat> no worries...    the docs on lib are...  maybe ready for improvement

[16:27] <finanalyst> I am thinking how to recompile a list of modules. Would `for <M1 M2 M3> { $*EXECUTABLE -I. -e "use $_" }`work? Probably not. 

[16:27] <lizmat> are those modules interdependent?

[16:29] <finanalyst> yes, but I would put them in the order of least dependent to more dependent. 

[16:30] <finanalyst> I was getting an error because I use PromiseStr, but it could not be found

[16:31] <lizmat> are all those modules in the same distribution  (lib directory) ?

[16:31] <finanalyst> yes

[16:32] <lizmat> then running -I. should automatically re-compile all dependencies of a module that was changed

[16:32] <lizmat> *with

[16:33] <lizmat> dinner&

[16:34] <finanalyst> with -I. as in `#!/usr/env -S raku -I.\n use RakuDoc::Render\n` ?

[16:34] <finanalyst> bon appetit

[22:25] *** finanalyst left
[22:29] *** sena_kun left
