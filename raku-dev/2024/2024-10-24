[00:28] *** MasterDuke joined
[01:04] <jdv> https://www.artima.com/forums/flat.jsp?forum=122&thread=27898

[01:04] <jdv> dan sugalski, parrot peep

[01:04] <jdv> oh, thanks will

[06:40] <ab5tract> Dang, the post mortem is 404

[08:50] <ab5tract> ugexe: is there a way to ensure that zef uses the raku tree it was installed with instead of the raku tree in the path?

[08:50] <ab5tract> https://gist.github.com/ab5tract/77bbce7e71418a027cb3e0eb2be4758f

[08:51] <ab5tract> The script works as expected but invoking `.rakubrew/versions/moar-2024.02/install/share/perl6/site/bin/zef locate Time::Crontab` responds with a file installed at `.rakubrew/versions/moar-2024.08/install/share/perl6/site/sources/AF7B5BB0DFEECDDF6640F50E7AC66F120A8776D8`

[08:58] <ab5tract> this also means that `zef install Foo` is a no-op when it is installed for `moar-2024.08` even though I'm trying to install it for `moar-2024.02`

[09:09] <ab5tract> I've just checked and unfortunately nothing changes even when I specify the config path relative to the correct version with `--config-path` 

[09:09] <ab5tract> I would prefer not to do anything with the environment

[09:14] *** sena_kun joined
[09:24] *** sena_kun left
[10:37] *** MasterDuke left
[10:52] * timo hurls https://github.com/MoarVM/MoarVM/issues/1850

[10:53] <lizmat> feels like a plan...  :-)

[10:55] <timo> now to forget about it and never actually do anything :P

[13:39] *** [Tux] left
[13:42] *** [Tux] joined
[14:44] <[Tux]> Rakudo v2024.09-140-g2750112c0 (v6.d) on MoarVM 2024.09-10-g939e64dc8

[14:44] <[Tux]> csv-test-xs-20      0.141 -  0.143

[14:44] <[Tux]> csv-ip5xs           0.258 -  0.262

[14:44] <[Tux]> test-t --race       0.268 -  0.274

[14:44] <[Tux]> test-t              0.394 -  0.402

[14:44] <[Tux]> csv-ip5xs-20        1.097 -  1.118

[14:44] <[Tux]> test-t-20 --race    1.161 -  1.170

[14:44] <[Tux]> csv-parser          1.489 -  1.587

[14:44] <[Tux]> test                1.842 -  1.911

[14:44] <[Tux]> test-t-20           4.734 -  4.756

[14:44] <[Tux]> https://tux.nl/Talks/CSV6/speed4-20.html / https://tux.nl/Talks/CSV6/speed4.html https://tux.nl/Talks/CSV6/speed.log

[14:45] <[Tux]>  5 2024-07-18 08:42:10 test-t 0.399

[14:45] <[Tux]>  4 2024-10-21 19:01:30 test-t 0.396

[14:45] <[Tux]>  3 2024-08-01 13:22:46 test-t 0.395

[14:45] <[Tux]>  2 2024-10-24 16:42:09 test-t 0.394

[14:45] <[Tux]>  1 2024-08-19 09:58:29 test-t 0.394

[14:45] <[Tux]> 20240718 0.399‚ùô20241021 0.396‚ùô20240801 0.395‚ùô20241024 0.394‚ùô20240819 0.394‚ùô

[15:12] <jdv> changelogs are up.  i'll wait an hour or so before starting the releases.

[15:12] <jdv> lizmat: ^

[15:13] <[Coke]> jdv++

[15:20] <ugexe> ab5tract: I'm not immediately sure how that could happen ü§î As far as I remember anything (zef or raku internals) invoking raku would be using $*EXECUTABLE. and the paths where modules are installed/listed is determined by the raku ($*EXECUTABLE) used to invoke zef itself

[15:21] <ugexe> oh

[15:21] <ugexe> i bet the bin shim raku installs does like #!/usr/bin/env raku or something

[15:22] <ugexe> so zef is getting invoked with whatever raku that would use

[15:23] <ugexe> .rakubrew/versions/moar-2024.02/install/raku .rakubrew/versions/moar-2024.02/install/share/perl6/site/bin/zef

[15:23] <ugexe> something like that should work though

[15:25] <ugexe> if you want something shorter you could also do like

[15:26] <ugexe> .rakubrew/versions/moar-2024.02/install/raku -MZef::CLI -e '' locate Time::Crontab

[15:28] <ugexe> with https://github.com/Raku/App-Rakubrew/issues/80 it would be even more convient

[15:37] <jdv> ab5tract: https://www.sidhe.org/oldblog/archives/000435.html

[15:37] <jdv> just a url change

[15:41] <lizmat> jdv: looking at the changelog now

[15:42] <ab5tract> ugexe: that makes total sense

[15:42] <ab5tract> though this isn't installed with the shim raku

[15:47] <ab5tract> the -MZef::CLI works like a charm :)

[15:47] <ab5tract> though I'll stick to my script for the purposes of locate as I want JSON output

[15:48] <ab5tract> parsing in Java is a yuck fest

[15:50] <ab5tract> btw, if `zef` is installed in a RO directory like `/usr/...`, will it automagically install into a user-writable location like `/home/...`?

[15:58] <lizmat> jdv: done with the changelog

[15:59] <ugexe> ab5tract: the path you listed is certainly a shim because it isnt a sha1 basename

[15:59] <ugexe> if you `cat ~/.rakubrew/versions/moar-2024.02/install/share/perl6/site/bin/zef` or whatever you'll see as much

[16:00] <ab5tract> Ah, I see what you mean. I was referring to the fact that I used a non-shimmed raku to install it

[16:01] <ab5tract> So I was talking about rakubrew shims and I believe you are speaking of a zef provided shim

[16:01] <ugexe> yeah, although the shim is provided by rakudo itself

[16:02] <ugexe> https://github.com/rakudo/rakudo/blob/2750112c088680c0d5f90b2b0cbcea23f0244b46/src/core.c/CompUnit/Repository/Installation.rakumod#L33-L36

[16:02] <ab5tract> Hmm.. then maybe we cans make it use it‚Äôs absolute path instead of whatever it‚Äôs doing now

[16:03] <ugexe> im not sure if that is the right thing to do either tho

[16:04] <ugexe> there is relocatable raku, plus im not sure that a CURI should be tied to a specific installation of rakudo or not. remember one can install stuff to a custom location which could be used by any rakudo via e.g RAKULIB

[16:05] <ab5tract> Good point..

[16:06] <ab5tract> Maybe a configuration flag would be reasonable

[16:07] <ab5tract> Or else making the shared CURI be more of a default experience

[16:07] <jdv> lizmat: thanks

[16:08] <ab5tract> Because I‚Äôve never had the experience when installing a new Raku version of having my existing third party stuff available

[16:08] <ab5tract> Which, if it works, why not?

[16:09] <ugexe> zef install Foo --install-to='~/foo/bar' and then RAKULIB="~/foo/bar"

[16:09] <ab5tract> That is absolutely too much work :)

[16:10] <ugexe> the other thing is the default experience will generally be catered to a typical user, not a developer of the core. most users do not have multiple rakudos installed, and would generally be best served by default that avoid any caveats to the aforementioned shared repo

[16:12] <ugexe> for example there is a concept of repository version for when e.g. the layout of the files is changed, and which rakudo will "migrate" to a new version upon install if a new version is introduced. any old rakudo that does not know the new format would then break trying to use that repository

[16:12] <ab5tract> Fair enough. Thanks for making Zef so usable from Raku itself. I can put away my concerns for the shims and move on to pushing the Zef support in Comma

[16:14] <ugexe> actually i lied, there is an easier way to do it (although caveats still apply)

[16:15] <ugexe> set https://github.com/ugexe/zef/blob/45f3ac7624ea3388e334e756e32fb3a48ef6098a/resources/config.json#L5 to home, or set ZEF_INSTALL_TO=home, or pass zef --install-to=home

[16:16] <ugexe> 1 bin/ script [zef] installed to:

[16:16] <ugexe> /Users/nlogan/.raku/bin

[16:16] <ugexe> raku -e 'say $*REPO.repo-chain.head'

[16:16] <ugexe> inst#/Users/nlogan/.raku

[16:17] <ugexe> the "home" repo is at the head of every raku installation and isn't tied to a specific version

[16:18] <ugexe> we actually did use to default to the "home" repo I think, but switched away due to problems such as the caveat I listed earlier

[16:20] <ugexe> also since you mentioned comma... you don't *have* to install zef, you could just run it from a shared cloned repo

[16:32] <ugexe> i guess a drawback of using environment variables like ZEF_INSTALL_TO= though is that they are consumed in Zef::CLI not Zef::Client or Zef::Config so your example code would not end up using it

[16:32] <ugexe> https://github.com/ugexe/zef/blob/45f3ac7624ea3388e334e756e32fb3a48ef6098a/lib/Zef/CLI.rakumod#L429

[16:34] <ugexe> i guess ideally Zef::Config should be rewritten to handle the environment variable stuff and provide methods for accessing the final config value of things including env stuff instead of just returning a hash of what is in the config file itself and handling the environment variable stuff at a call site

[16:35] <ugexe> in that way the existing Zef::Config might be better thought of as Zef::ConfigFile

[16:37] <ab5tract> since my experience was that `Zef::Config` worked exactly the way I expected/wanted, I'm a bit ambivalent about all that

[16:38] <ab5tract> but maybe I will indeed look into using a shared repo eventually

[16:39] <ab5tract> but probably won't be adopting a shared CURI unless there is a strong demand for it

[16:39] <ab5tract> it can be useful to switch between Rakudo "SDK" installations specifically because you want to compare how two diverging versions of a module behave

[16:42] <ab5tract> or maybe this is case of me feeling "I just put this bucket of bolts back together, I'm not going to let anything tear it apart" :)

[16:44] <ab5tract> ugexe: do you find yourself using `-e''` very often? It makes me wonder whether a `-x` or similar might be appreciated by more people than just myself

[16:47] <lizmat> I have an alias: r='time raku -e'

[16:47] <lizmat> and I use that *very* often

[16:47] <ugexe> ab5tract: i think i primarily find myself using it when i dont want to set PATH to whatever/perl6/install/site

[16:48] <ugexe> although i only ever use `-e ''` in combination with `-MZef::CLI` (or -e 'use Zef::CLI')

[16:52] <ugexe> if im remember correctly i found avoiding having to set PATH useful on windows or windows ci systems where I dont want to be bothered figuring out how to set the env vars or to determine the CURI bin directory to set PATH to begin with

[17:08] <Geth> ¬¶ rakudo/release-2024.10: 19ff0d0fa4 | (Justin DeVuyst)++ | 3 files

[17:08] <Geth> ¬¶ rakudo/release-2024.10: Update changelog + announcement

[17:08] <Geth> ¬¶ rakudo/release-2024.10: 

[17:08] <Geth> ¬¶ rakudo/release-2024.10: Deliberately not logged:

[17:08] <Geth> ¬¶ rakudo/release-2024.10: 

[17:08] <Geth> ¬¶ rakudo/release-2024.10: [0732084c][d56a34ae][1c96328c][a0626a20][d804906a][c1fd6736]

[17:08] <Geth> ¬¶ rakudo/release-2024.10: [0bd6c486][c719ac22][19420673][021a3bb2][bbd8b65d][25640772]

[17:08] <Geth> ¬¶ rakudo/release-2024.10: [b94ad1d7][2e305032][427f8b7a][a60b4e7d][dde57d94][0e9a0ee3]

[17:08] <Geth> ¬¶ rakudo/release-2024.10: [6528f868][ccf01a59][b7d10895][40cbb194][d38c1140][6c30c590]

[17:08] <Geth> ¬¶ rakudo/release-2024.10: [8b51c4a4][0f5d54d2][4b53990c]

[17:08] <Geth> ¬¶ rakudo/release-2024.10: review: https://github.com/rakudo/rakudo/commit/19ff0d0fa4

[17:36] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: 610f2e4e6e | (Timo Paulssen)++ | azure-pipelines.yml

[17:36] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: Use moarvm with exception handler generation.

[17:36] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/610f2e4e6e

[17:58] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: e6fc4f89a9 | (Timo Paulssen)++ | azure-pipelines.yml

[17:58] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: try getting a minidump from nqp build

[17:58] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/e6fc4f89a9

[18:25] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: d104352f0e | (Timo Paulssen)++ | azure-pipelines.yml

[18:25] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: up moarvm checkout commit

[18:25] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/d104352f0e

[18:48] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: f94fd51d7f | (Timo Paulssen)++ | azure-pipelines.yml

[18:48] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: up moarvm checkout commit

[18:48] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/f94fd51d7f

[18:49] *** sena_kun joined
[19:00] <jdv> hmm, looks like a bunch of roast errata fails:(

[19:17] <jdv> lizmat: around?

[19:19] <Geth> ¬¶ whateverable/coke/max-age: 766e60b6d6 | (Will Coleda)++ | lib/Whateverable/Webhooks.pm6

[19:19] <Geth> ¬¶ whateverable/coke/max-age: Add $!max-age

[19:19] <Geth> ¬¶ whateverable/coke/max-age: 

[19:19] <Geth> ¬¶ whateverable/coke/max-age: Fixes #390

[19:19] <Geth> ¬¶ whateverable/coke/max-age: review: https://github.com/Raku/whateverable/commit/766e60b6d6

[19:19] <Geth> ¬¶ whateverable: coke++ created pull request #393: Add $!max-age

[19:19] <Geth> ¬¶ whateverable: review: https://github.com/Raku/whateverable/pull/393

[19:22] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: c6b2c48da6 | (Timo Paulssen)++ | azure-pipelines.yml

[19:22] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: try to debug crash ...

[19:22] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/c6b2c48da6

[19:26] <jdv> m: combinations(3,2).raku

[19:26] <camelia> rakudo-moar 2750112c0: ( no output )

[19:26] <jdv> m: combinations(3,2).raku.say

[19:26] <camelia> rakudo-moar 2750112c0: OUTPUT: ¬´((2, 2), (2, 2), (2, 2)).Seq‚ê§¬ª

[19:27] <jdv> m: combinations(3,2).say

[19:27] <camelia> rakudo-moar 2750112c0: OUTPUT: ¬´((0 1) (0 2) (1 2))‚ê§¬ª

[19:27] <jdv> is that first one correct?

[19:28] <ab5tract> that seems quite weird to me

[19:28] <ab5tract> m: dd combinations(3,2)

[19:28] <camelia> rakudo-moar 2750112c0: OUTPUT: ¬´((2, 2), (2, 2), (2, 2)).Seq‚ê§¬ª

[19:28] <ab5tract> m: dd |combinations(3,2)

[19:28] <camelia> rakudo-moar 2750112c0: OUTPUT: ¬´(2, 2)‚ê§(2, 2)‚ê§(2, 2)‚ê§¬ª

[19:29] <ab5tract> m: dd combinations(3,2).gist

[19:29] <camelia> rakudo-moar 2750112c0: OUTPUT: ¬´"((0 1) (0 2) (1 2))"‚ê§¬ª

[19:29] <ab5tract> lizmat: does this seem familiar to you?

[19:29] <jdv> that's the only failing errata test (6.c-errata) that isn't explained easily so far

[19:39] <Geth> ¬¶ roast/6.c-errata: 35c7179af6 | (Elizabeth Mattijsen)++ (committed by Justin DeVuyst) | 2 files

[19:39] <Geth> ¬¶ roast/6.c-errata: Adapt some .flat tests

[19:39] <Geth> ¬¶ roast/6.c-errata: 

[19:39] <Geth> ¬¶ roast/6.c-errata: in light of https://github.com/rakudo/rakudo/commit/0fc7d45f66

[19:39] <Geth> ¬¶ roast/6.c-errata: review: https://github.com/Raku/roast/commit/35c7179af6

[19:45] <ab5tract> jdv: bisectable6 seems to say that this is to be expected (assuming I'm holding it half way correctly). see #whateverable

[19:47] <jdv> hmm, i'm not in there i don't see that channel on irclogs

[19:47] <jdv> how is that correct though?

[19:49] <ab5tract> it says its the same on all revisions

[19:49] <ab5tract> bisectable6: exit 1 if combinations(3,2) ~~ ((2,2),(2,2),(2,2)).Seq

[19:49] <bisectable6> ab5tract, Will bisect the whole range automagically because no endpoints were provided, hang tight

[19:50] <jdv> i mean this test passed last release so clearly something changed

[19:50] <bisectable6> ab5tract, Output on all releases: https://gist.github.com/e0e90916d1cc7b9e40e5eb91339fe498

[19:50] <bisectable6> ab5tract, Output on all releases and bisected commits: https://gist.github.com/f85681074fd6dee30e03f269e70c674e

[19:50] <ab5tract> then I'm holding bisecavle wrong

[19:51] <jdv> https://github.com/Raku/roast/blob/6.c-errata/S32-list/combinations.t#L17

[19:52] <ab5tract> m: combinations(3,2).list.perl

[19:52] <camelia> rakudo-moar 2750112c0: ( no output )

[19:52] <ab5tract> m: combinations(3,2).list.perl.say

[19:52] <camelia> rakudo-moar 2750112c0: OUTPUT: ¬´((2, 2), (2, 2), (2, 2))‚ê§¬ª

[19:52] <ab5tract> yeah, I see

[19:53] <jdv> i mean the equivalent in master is missing the .perl so it works so i could just patch that in but why did it change from last month to now...

[19:57] <Geth> ¬¶ roast/6.d-errata: 5 commits pushed by (Elizabeth Mattijsen)++

[19:57] <Geth> ¬¶ roast/6.d-errata: 66d73b1866 | Adapt some .flat tests

[19:57] <Geth> ¬¶ roast/6.d-errata: cdd3b86f78 | Fix test in light of Rat < <= > >= Rat fix

[19:57] <Geth> ¬¶ roast/6.d-errata: 451d9cee3a | Repair Channel.elems test in light of #5256

[19:57] <Geth> ¬¶ roast/6.d-errata: 739705b321 | Remove overzealous test

[19:57] <Geth> ¬¶ roast/6.d-errata: c402f2b39c | Adapt .uniparse tests allowing empty names

[19:57] <Geth> ¬¶ roast/6.d-errata: review: https://github.com/Raku/roast/compare/59e05b2048e2...c402f2b39cce

[20:00] <ab5tract> it does feel like something is wrong

[20:01] <ab5tract> I don't get why bisectable doesn't find it

[20:02] <jdv> yeah:(

[20:02] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: 261f311461 | (Timo Paulssen)++ | azure-pipelines.yml

[20:02] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: try to debug crash ...

[20:02] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/261f311461

[20:02] <ab5tract> ah, this probably explains it:

[20:02] <ab5tract> ¬¶¬´HEAD(2750112)¬ª:

[20:02] <ab5tract> Cannot test this commit (Broken archive)

[20:03] <jdv> what does that mean?:)

[20:04] <ab5tract> surface level: It means it's not testing against HEAD, where the problem is

[20:04] <ab5tract> underneath: no idea :)

[20:06] <jdv> so, is this a blocker then?

[20:06] <jdv> hmm

[20:10] <jdv> maybe https://github.com/rakudo/rakudo/commit/693f15ea ?

[20:12] <jdv> we really should bring the *able stuff inhouse.  right now alexdaniel manages it.

[20:25] <ab5tract> jdv: that's got to be it

[20:31] <jdv> yup.  built with that reverted and it passes

[20:31] <jdv> *sigh*

[20:35] <ab5tract> :S

[20:37] <Geth> ¬¶ whateverable/main: 766e60b6d6 | (Will Coleda)++ | lib/Whateverable/Webhooks.pm6

[20:37] <Geth> ¬¶ whateverable/main: Add $!max-age

[20:37] <Geth> ¬¶ whateverable/main: 

[20:37] <Geth> ¬¶ whateverable/main: Fixes #390

[20:37] <Geth> ¬¶ whateverable/main: review: https://github.com/Raku/whateverable/commit/766e60b6d6

[20:37] <Geth> ¬¶ whateverable/main: 0b9b6a5a63 | ab5tract++ (committed using GitHub Web editor) | lib/Whateverable/Webhooks.pm6

[20:37] <Geth> ¬¶ whateverable/main: Merge pull request #393 from Raku/coke/max-age

[20:37] <Geth> ¬¶ whateverable/main: 

[20:37] <Geth> ¬¶ whateverable/main: Add $!max-age

[20:37] <Geth> ¬¶ whateverable/main: review: https://github.com/Raku/whateverable/commit/0b9b6a5a63

[20:41] *** notable6__ left
[20:41] *** bloatable6__ left
[20:41] *** coverable6 left
[20:41] *** shareable6 left
[20:41] *** sourceable6 left
[20:41] *** releasable6 left
[20:41] *** evalable6 left
[20:41] *** unicodable6__ left
[20:41] *** greppable6 left
[20:41] *** quotable6 left
[20:41] *** committable6 left
[20:41] *** nativecallable6 left
[20:41] *** tellable6 left
[20:41] *** bisectable6 left
[20:41] *** linkable6 left
[20:41] *** benchable6 left
[20:42] <jdv> have to revert and redo parts of the release now...

[20:42] <[Coke]> ugh, sorry jdv

[20:43] *** bloatable6 joined
[20:43] *** releasable6 joined
[20:44] *** benchable6 joined
[20:44] *** sourceable6 joined
[20:44] *** evalable6 joined
[20:44] *** shareable6 joined
[20:45] *** bisectable6 joined
[20:45] *** committable6 joined
[20:45] *** notable6 joined
[20:45] *** linkable6 joined
[20:45] *** quotable6 joined
[20:46] *** unicodable6 joined
[20:46] *** coverable6 joined
[20:46] *** nativecallable6 joined
[20:46] *** greppable6 joined
[20:47] *** tellable6 joined
[20:48] <jdv> might need to stop for a bit to do dinner but should get it done in a few hours...

[21:07] <Geth> ¬¶ rakudo/release-2024.10: e6bf5457bf | (Justin DeVuyst)++ | src/core.c/Rakudo/Iterator.rakumod

[21:07] <Geth> ¬¶ rakudo/release-2024.10: Revert "Un-nqpify *.combinations() without slowing it down"

[21:07] <Geth> ¬¶ rakudo/release-2024.10: 

[21:07] <Geth> ¬¶ rakudo/release-2024.10: This reverts commit 693f15ead2b2b89fb9e5e6fe976bb364a165d3d5.

[21:07] <Geth> ¬¶ rakudo/release-2024.10: 

[21:07] <Geth> ¬¶ rakudo/release-2024.10: This commit is being reverted because it broke this test:

[21:07] <Geth> ¬¶ rakudo/release-2024.10: 

[21:07] <Geth> ¬¶ rakudo/release-2024.10: https://github.com/Raku/roast/blob/6.c-errata/S32-list/combinations.t#L17

[21:07] <Geth> ¬¶ rakudo/release-2024.10: <‚Ä¶commit message has 6 more lines‚Ä¶>

[21:07] <Geth> ¬¶ rakudo/release-2024.10: review: https://github.com/rakudo/rakudo/commit/e6bf5457bf

[21:07] <Geth> ¬¶ rakudo/release-2024.10: 358d27ab26 | (Justin DeVuyst)++ | 3 files

[21:07] <Geth> ¬¶ rakudo/release-2024.10: Update changelog + announcement

[21:07] <Geth> ¬¶ rakudo/release-2024.10: 

[21:07] <Geth> ¬¶ rakudo/release-2024.10: Deliberately not logged:

[21:07] <Geth> ¬¶ rakudo/release-2024.10: 

[21:07] <Geth> ¬¶ rakudo/release-2024.10: [0732084c][d56a34ae][1c96328c][a0626a20][d804906a][c1fd6736]

[21:07] <Geth> ¬¶ rakudo/release-2024.10: [0bd6c486][c719ac22][19420673][021a3bb2][bbd8b65d][25640772]

[21:07] <Geth> ¬¶ rakudo/release-2024.10: [b94ad1d7][2e305032][427f8b7a][a60b4e7d][dde57d94][0e9a0ee3]

[21:07] <Geth> ¬¶ rakudo/release-2024.10: [6528f868][ccf01a59][b7d10895][40cbb194][d38c1140][6c30c590]

[21:07] <Geth> ¬¶ rakudo/release-2024.10: [8b51c4a4][0f5d54d2][4b53990c][693f15ea][e6bf5457]

[21:07] <Geth> ¬¶ rakudo/release-2024.10: review: https://github.com/rakudo/rakudo/commit/358d27ab26

[21:09] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: 8f406a8897 | (Timo Paulssen)++ | azure-pipelines.yml

[21:09] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: random changes

[21:09] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/8f406a8897

[21:10] * ab5tract finally recognizes that patch

[21:11] <ab5tract> it's a shame it didn't fully cover this scenario, because otherwise I loved the idea of moving back to Raku from NQP in Rakudo

[21:14] <jdv> i'm sure she can fix it later, just need it fixed now or out.

[21:15] <jdv> there's been a bunch of that work in the past - i'm a fan 

[21:30] <ab5tract> indeed, I said it all in the spirit of its eventual return :)

[21:52] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: 7d69fa862b | (Timo Paulssen)++ | azure-pipelines.yml

[21:52] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: random changes

[21:52] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/7d69fa862b

[22:01] <jdv> lizmat: https://github.com/rakudo/rakudo/commit/e6bf5457bfaad31631492fdfe424bcf9198038a1

[22:03] <jdv> the release is now progressing past where that caused the redo

[22:08] <ab5tract> jdv++

[22:11] <Geth> ¬¶ nqp/main: 416410829e | (Justin DeVuyst)++ | tools/templates/MOAR_REVISION

[22:11] <Geth> ¬¶ nqp/main: [release] Bump MoarVM revision to 2024.10

[22:11] <Geth> ¬¶ nqp/main: review: https://github.com/Raku/nqp/commit/416410829e

[22:11] <Geth> ¬¶ nqp/main: 2289d6af8b | (Justin DeVuyst)++ | VERSION

[22:11] <Geth> ¬¶ nqp/main: [release] Bump VERSION to 2024.10

[22:11] <Geth> ¬¶ nqp/main: review: https://github.com/Raku/nqp/commit/2289d6af8b

[22:11] <Geth> ¬¶ rakudo/release-2024.10: d48de082b5 | (Justin DeVuyst)++ | tools/templates/NQP_REVISION

[22:11] <Geth> ¬¶ rakudo/release-2024.10: [release] Bump NQP revision to 2024.10

[22:11] <Geth> ¬¶ rakudo/release-2024.10: review: https://github.com/rakudo/rakudo/commit/d48de082b5

[22:11] <Geth> ¬¶ rakudo/release-2024.10: 44bc9df693 | (Justin DeVuyst)++ | VERSION

[22:11] <Geth> ¬¶ rakudo/release-2024.10: [release] Bump VERSION to 2024.10

[22:11] <Geth> ¬¶ rakudo/release-2024.10: review: https://github.com/rakudo/rakudo/commit/44bc9df693

[22:13] *** sena_kun left
[22:14] <Geth> ¬¶ rakudo: jdv++ created pull request #5672: Release 2024.10

[22:14] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/5672

[22:15] <Geth> ¬¶ rakudo/main: 5 commits pushed by (Justin DeVuyst)++

[22:15] <Geth> ¬¶ rakudo/main: e6bf5457bf | Revert "Un-nqpify *.combinations() without slowing it down"

[22:15] <Geth> ¬¶ rakudo/main: 358d27ab26 | Update changelog + announcement

[22:15] <Geth> ¬¶ rakudo/main: d48de082b5 | [release] Bump NQP revision to 2024.10

[22:15] <Geth> ¬¶ rakudo/main: 44bc9df693 | [release] Bump VERSION to 2024.10

[22:15] <Geth> ¬¶ rakudo/main: e8efeccd80 | Merge pull request #5672 from rakudo/release-2024.10

[22:15] <Geth> ¬¶ rakudo/main: review: https://github.com/rakudo/rakudo/compare/2750112c0886...e8efeccd806b

[22:29] <jdv> patrickb: the 2024.10 release happened

[22:29] <jdv> .tell El_Che the 2024.10 release happened

[22:29] <tellable6> jdv, I'll pass your message to El_Che

[22:29] <jdv> release is done.  commit away.

[22:29] <jdv> nite!

[22:32] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: e6d9eae9eb | (Timo Paulssen)++ | azure-pipelines.yml

[22:32] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: is lldb even there?

[22:32] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/e6d9eae9eb

[22:46] <ab5tract> Thank you jdv!!

[23:16] <lizmat> jdv: thanks for the revert

[23:44] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: 3cfd6bc45e | (Timo Paulssen)++ | azure-pipelines.yml

[23:44] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: use older nqp now that the release has happened

[23:44] <Geth> ¬¶ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/3cfd6bc45e

