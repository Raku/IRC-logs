[01:44] <timo> oh whew, i have finally apparently reproduced a hang in moar on arm64

[02:45] *** librasteve_ left
[07:51] <Geth> ¦ nqp: usev6++ created pull request #833: [JVM] Return exit code for run failure

[07:51] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/833

[09:32] <Geth> ¦ rakudo/azure_improvements_squashed: 30c5edc5f9 | (Patrick Böker)++ | azure-pipelines.yml

[09:32] <Geth> ¦ rakudo/azure_improvements_squashed: test mac cpanm path

[09:32] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/30c5edc5f9

[09:33] *** sena_kun joined
[09:34] <Geth> ¦ rakudo/azure_improvements_squashed: 26750801df | (Patrick Böker)++ | azure-pipelines.yml

[09:34] <Geth> ¦ rakudo/azure_improvements_squashed: tabs

[09:34] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/26750801df

[09:44] <Geth> ¦ rakudo/azure_improvements_squashed: 3b0f35df92 | (Patrick Böker)++ | azure-pipelines.yml

[09:44] <Geth> ¦ rakudo/azure_improvements_squashed: right perl version

[09:44] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/3b0f35df92

[09:50] *** sena_kun left
[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: 2208db214f | (Patrick Böker)++ | t/04-nativecall/CompileTestLib.rakumod

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: Fix nativecall tests on Windows/cl/enabled debugging

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/2208db214f

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: 81f2dbe45a | (Patrick Böker)++ | src/vm/moar/runner/main.c

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: Deal with long paths in moar runner

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/81f2dbe45a

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: f982346771 | (Timo Paulssen)++ (committed by Patrick Böker) | 2 files

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: Reimagine Azure CI

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: 

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: - Prettier output (using the JUnit test result formatter)

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: - Restructure making better use of parameters

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: - Disable OOMing Win_JMV

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: - Speed up CI on Windows by working around the compiler search

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: - More granular output using `echo` commands

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: - add a nodelay & blocking spec test run

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: - persist build artifacts

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: - Speed up testing by running tests in parallel

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: - Bump the OS versions to latest as of now

[09:59] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/f982346771

[11:38] *** librasteve_ joined
[12:29] <Geth> ¦ rakudo/azure_improvements_squashed: bdfc5d6807 | (Patrick Böker)++ | azure-pipelines.yml

[12:29] <Geth> ¦ rakudo/azure_improvements_squashed: Install prove on windows

[12:29] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/bdfc5d6807

[12:56] <Geth> ¦ rakudo/azure_improvements_squashed: d2f21c04f2 | (Patrick Böker)++ | azure-pipelines.yml

[12:56] <Geth> ¦ rakudo/azure_improvements_squashed: where is prove?

[12:56] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/d2f21c04f2

[15:26] <Geth> ¦ nqp/main: 649a0f378e | (Christian Bartolomäus)++ (committed using GitHub Web editor) | src/vm/jvm/runtime/org/raku/nqp/io/AsyncProcessHandle.java

[15:26] <Geth> ¦ nqp/main: [JVM] Return exit code for run failure

[15:26] <Geth> ¦ nqp/main: 

[15:26] <Geth> ¦ nqp/main: This adjusts the behaviour of the JVM backend to the change from

[15:26] <Geth> ¦ nqp/main: https://github.com/rakudo/rakudo/commit/81c7064ba7. The error callback

[15:26] <Geth> ¦ nqp/main: now accepts a second argument with an exit code.

[15:26] <Geth> ¦ nqp/main: 

[15:26] <Geth> ¦ nqp/main: At least for IOExceptions the original error code from the JVM can be

[15:26] <Geth> ¦ nqp/main: seen in the error message. I don't see a real benefit in extracting

[15:26] <Geth> ¦ nqp/main: that error code and passing it on. Instead, we'll just set the exit

[15:26] <Geth> ¦ nqp/main: code to -1 (which is also expected by at least one spectest:

[15:26] <Geth> ¦ nqp/main: https://github.com/Raku/roast/blob/3032bcf423/S29-os/system.t#L47).

[15:26] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/649a0f378e

[15:32] <Geth> ¦ rakudo/main: 530e20597d | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[15:32] <Geth> ¦ rakudo/main: [JVM] Bump NQP to get run failure exit code fixes

[15:32] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/530e20597d

[16:02] *** [Tux] left
[16:06] *** [Tux] joined
[16:26] <[Tux]> Rakudo v2024.10-61-g530e20597 (v6.d) on MoarVM 2024.10-38-g8dd8a8c08

[16:26] <[Tux]> csv-test-xs-20      0.144 -  0.144

[16:26] <[Tux]> csv-ip5xs           0.262 -  0.266

[16:26] <[Tux]> test-t --race       0.263 -  0.267

[16:26] <[Tux]> test-t              0.399 -  0.399

[16:26] <[Tux]> csv-ip5xs-20        1.123 -  1.148

[16:26] <[Tux]> test-t-20 --race    1.227 -  1.231

[16:26] <[Tux]> csv-parser          1.460 -  1.532

[16:26] <[Tux]> test                1.868 -  1.906

[16:26] <[Tux]> test-t-20           4.777 -  4.819

[16:26] <[Tux]> https://tux.nl/Talks/CSV6/speed4-20.html / https://tux.nl/Talks/CSV6/speed4.html https://tux.nl/Talks/CSV6/speed.log

[17:01] <timo> d'oh, got a segfault but core size limit was set to 0 so i don't have a core dump ;_;

[19:03] *** Xliff left
[19:37] <ugexe> one-million conditionals program has been precompiling for 6 hours now

[19:38] <Geth> ¦ roast: 15eacbeebc | (Christian Bartolomäus)++ | S29-os/system.t

[19:38] <Geth> ¦ roast: [JVM] Unfudge tests for run failures

[19:38] <Geth> ¦ roast: 

[19:38] <Geth> ¦ roast: Fixed with https://github.com/Raku/nqp/commit/649a0f378e (and a

[19:38] <Geth> ¦ roast: corresponding bump of NQP).

[19:38] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/15eacbeebc

[19:51] <bartolin> bisectable6: use MONKEY; augment class Any { method foo() { "foo" } }; say 1.foo  ## https://github.com/rakudo/rakudo/issues/3209

[19:51] <bisectable6> bartolin, Will bisect the whole range automagically because no endpoints were provided, hang tight

[19:52] <bisectable6> bartolin, Output on all releases: https://gist.github.com/581147496bff0c8840fd691fe0e95602

[19:52] <bisectable6> bartolin, More than 3 changes to bisect, please try a narrower range like old=2024.10 new=HEAD

[19:53] <bartolin> bisectable6: old=2021.09 new=2021.10 use MONKEY; augment class Any { method foo() { "foo" } }; say 1.foo

[19:54] <bisectable6> bartolin, Bisecting by exit code (old=2021.09 new=2021.10). Old exit code: 1

[19:57] <bisectable6> bartolin, bisect log: https://gist.github.com/65c7016d138352671a4d48c7f0486f29

[19:57] <bisectable6> bartolin, There are 224 candidates for the first “new” revision. See the log for more details

[20:09] *** MasterDuke joined
[20:10] <MasterDuke> patrickb++ for the windows work

[20:10] <bartolin> could maybe someone double check if 6.c/MISC/bug-coverage-stress.t passes with a recent Rakudo? (it fails test 14 for me)

[20:11] <bartolin> and yes, patrickb++

[20:11] <MasterDuke> `Failed test:  14`

[20:12] <MasterDuke> bisectable6: ((1..10)[2.polymod($_ xx 1000).map($_ ** *) »%» *] with 1)

[20:12] <bisectable6> MasterDuke, Will bisect the whole range automagically because no endpoints were provided, hang tight

[20:13] <bisectable6> MasterDuke, Output on all releases: https://gist.github.com/7f2c2a9cbcdf75b743d2ab0d80012fa7

[20:13] <bisectable6> MasterDuke, More than 3 changes to bisect, please try a narrower range like old=2024.10 new=HEAD

[20:14] <MasterDuke> bisectable6: old=2024.10 ((1..10)[2.polymod($_ xx 1000).map($_ ** *) »%» *] with 1)

[20:14] <bisectable6> MasterDuke, Problem with 530e205 commit: Broken archive

[20:14] <bartolin> ah, maybe you should add a "dd" in front?

[20:15] <MasterDuke> bisectable6: old=2024.10 new=461b81f79459674ca049dc618d5fa412127e2583 ((1..10)[2.polymod($_ xx 1000).map($_ ** *) »%» *] with 1)

[20:15] <bisectable6> MasterDuke, On both starting points (old=2024.10 new=461b81f) the exit code is 0 and the output is identical as well

[20:15] <bisectable6> MasterDuke, Output on both points: «»

[20:15] <MasterDuke> bisectable6: old=2024.10 new=461b81f79459674ca049dc618d5fa412127e2583 dd ((1..10)[2.polymod($_ xx 1000).map($_ ** *) »%» *] with 1)

[20:15] <bisectable6> MasterDuke, Bisecting by output (old=2024.10 new=461b81f) because on both starting points the exit code is 0

[20:15] <bisectable6> MasterDuke, bisect log: https://gist.github.com/0784dbbe5e899b33e076fc449973d157

[20:15] <bisectable6> MasterDuke, (2024-10-25) https://github.com/rakudo/rakudo/commit/c81d9cfe86499587cde45a6a539b7c636a8364b0

[20:16] <MasterDuke> lizmat: ^^^

[20:21] <Geth> ¦ rakudo: lizmat self-assigned Iteration does not stop if divisor is 1 https://github.com/rakudo/rakudo/issues/4523

[20:21] <lizmat> MasterDuke: noted

[20:22] <MasterDuke> lizmat++

[20:22] <MasterDuke> bartolin++ also

[20:43] *** notna joined
[20:45] *** notna left
[20:46] *** notna joined
[20:46] *** notna left
[21:36] <Geth> ¦ rakudo/azure_improvements_squashed: 752b6e6e85 | (Patrick Böker)++ | azure-pipelines.yml

[21:36] <Geth> ¦ rakudo/azure_improvements_squashed: more debug prints

[21:36] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/752b6e6e85

[21:38] <Geth> ¦ rakudo/azure_improvements_squashed: df21068c18 | (Patrick Böker)++ | azure-pipelines.yml

[21:38] <Geth> ¦ rakudo/azure_improvements_squashed: debug

[21:38] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/df21068c18

[22:02] <Geth> ¦ rakudo/azure_improvements_squashed: 8c4ebc0b6b | (Patrick Böker)++ | azure-pipelines.yml

[22:02] <Geth> ¦ rakudo/azure_improvements_squashed: debug

[22:02] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/8c4ebc0b6b

[22:06] *** sena_kun joined
[22:30] <Geth> ¦ rakudo/azure_improvements_squashed: cefef07e00 | (Patrick Böker)++ | azure-pipelines.yml

[22:30] <Geth> ¦ rakudo/azure_improvements_squashed: more debug

[22:30] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/cefef07e00

[22:36] *** sena_kun left
[22:57] <ugexe> patrickb: what are you trying to do? get prove installed?

[22:58] <patrickb> get prove actually run tests instead of silently doing nothing

[22:58] <ugexe> try prove.bat

[22:59] <ugexe> https://github.com/ugexe/zef/blob/d8b73d20838df8902d368dd35ad6a88f9a5720f2/lib/Zef/Service/Shell/prove.rakumod#L96

[22:59] <ugexe> i used prove.bat in zef when it had a prove plugin for some reason

[23:02] <patrickb> the latest run did run stuff. Sadly the prints are not in the right order, so I don't know for sure which versions worked. I suspect it's the "--ext .t" that poses an issue

[23:02] <ugexe> ah

[23:03] <ugexe> when you say prints are not in the right order, you're not talking about something that would occur from tests running in parallel though right?

[23:05] <Geth> ¦ rakudo/azure_improvements_squashed: 7c0ad2e2e6 | (Patrick Böker)++ | azure-pipelines.yml

[23:05] <Geth> ¦ rakudo/azure_improvements_squashed: next try

[23:05] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/7c0ad2e2e6

[23:05] <ugexe> its outputting JUnit to the raw log screen which seems less than ideal

[23:06] <patrickb> no I did multiple different prove calls with echos before to identify them. But it seems the echos and succeeding prove runs switch order

[23:07] <patrickb> but I think I'm almost there.

[23:07] <patrickb> either the --ext is the issue or the backward slashes

[23:08] <ugexe> on windows i do notice a lot of times in zef where the outputs of stdout and stderr are shown in an unexpected order

[23:08] <patrickb> Yeah, I believe that's what was happening here 

[23:17] <timo> maybe split it into multiple jobs or stages or steps or what it was called

[23:18] <timo> then it won't be able to mix things up

[23:32] <Geth> ¦ rakudo/azure_improvements_squashed: b90fb35e7e | (Patrick Böker)++ | azure-pipelines.yml

[23:32] <Geth> ¦ rakudo/azure_improvements_squashed: one more

[23:32] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/b90fb35e7e

[23:32] <patrickb> Last try for tonight. I'm off to bed. o/

[23:32] <patrickb> \q

[23:51] *** japhb left
[23:53] *** japhb joined
