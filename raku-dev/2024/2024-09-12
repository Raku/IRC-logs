[00:10] <timo> the moarvm debian package is now in transit between sid and trixie, and nqp and rakudo are also going to go into trixie now

[00:10] <timo> https://release.debian.org/britney/update_output.txt  -  here you can see that moarvm, nqp, and rakudo are all in a "final:" line in a block with "SUCCESS"

[00:11] <timo> https://release.debian.org/doc/britney/short-intro-to-migrations.html this explains what britney does

[03:07] <coleman> Nice

[07:26] <patrickb> lizmat: I'm thinking through the "$path.spurt: $source.AST(:compunit).rakudoc.gist" part. If an attacker wants to corrupt the process they would add code in a begin block in the source to write out a separate executable file, and exec that. Then they can write any bytecode they want to $path. Evaling $path is then not safe.

[07:28] <patrickb> That's why I see the need for a pure RakuDoc parser that is failing to parse anything but valid RakuDoc.

[07:32] <patrickb> In your example $path is the intermediate format. We must assume a potential attacker has full control to put any content they want into that intermediate file. So the thing outside the sandbox that processes the intermediate file must not allow anything in the intermediate file to be executed.

[07:32] <patrickb> I don't fully understand the implications, but it seems to me, that calling `.EVAL` on some input could potentially run code from that input.

[08:01] <timo>  [2024-09-12] moarvm 2022.12+dfsg-2 MIGRATED to testing (Debian testing watch) 

[08:05] <patrickb> timo++

[08:18] *** japhb left
[08:40] *** sena_kun joined
[08:54] <Geth> ¦ rakudo/windows_latest_azure_pipeline: ebd311e99b | (Timo Paulssen)++ | azure-pipelines.yml

[08:54] <Geth> ¦ rakudo/windows_latest_azure_pipeline: get new moar telemetry additions

[08:54] <Geth> ¦ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/ebd311e99b

[09:21] <Geth> ¦ rakudo/windows_latest_azure_pipeline: f43de5f9e3 | (Timo Paulssen)++ | azure-pipelines.yml

[09:21] <Geth> ¦ rakudo/windows_latest_azure_pipeline: new telemeh tweaks. try running without jit.

[09:21] <Geth> ¦ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/f43de5f9e3

[09:24] *** sena_kun left
[09:26] *** sena_kun joined
[09:26] *** sena_kun left
[09:34] *** japhb joined
[09:57] *** japhb left
[09:59] <Geth> ¦ rakudo/windows_latest_azure_pipeline: c79992ea0a | (Timo Paulssen)++ | azure-pipelines.yml

[09:59] <Geth> ¦ rakudo/windows_latest_azure_pipeline: try getting some windows event log output

[09:59] <Geth> ¦ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/c79992ea0a

[09:59] *** japhb joined
[10:48] <Geth> ¦ rakudo/windows_latest_azure_pipeline: ecb3d7255b | (Timo Paulssen)++ | azure-pipelines.yml

[10:48] <Geth> ¦ rakudo/windows_latest_azure_pipeline: output some random windows events

[10:48] <Geth> ¦ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/ecb3d7255b

[10:59] <Geth> ¦ rakudo/windows_latest_azure_pipeline: 737fffbcd6 | (Timo Paulssen)++ | azure-pipelines.yml

[10:59] <Geth> ¦ rakudo/windows_latest_azure_pipeline: well, that was a dumb thing to miss

[10:59] <Geth> ¦ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/737fffbcd6

[11:13] <Geth> ¦ rakudo/windows_latest_azure_pipeline: c1a971006f | (Timo Paulssen)++ | azure-pipelines.yml

[11:13] <Geth> ¦ rakudo/windows_latest_azure_pipeline: finish building rakudo with jit turned off

[11:13] <Geth> ¦ rakudo/windows_latest_azure_pipeline: 

[11:13] <Geth> ¦ rakudo/windows_latest_azure_pipeline: so we can have a cached moarvm hopefully.

[11:13] <Geth> ¦ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/c1a971006f

[11:33] *** finanalyst joined
[11:37] *** finanalyst left
[12:00] <lizmat> patrickb: understood

[12:00] <lizmat> patrickb: did you already start on a SafeRakuDoc module ?

[12:02] <patrickb> lizmat: No. I'm still in the brainstorming phase

[12:04] <patrickb> Also I don't know if any changes to the RakuDoc spec would actually be needed. I know too little. I just learned that the new RakuDoc already differentiates ambient code. So maybe the spec is already fine.

[12:05] <lizmat> "differentiates ambient code"  what do you mean?

[12:11] <patrickb> In https://github.com/Raku/RakuDoc-GAMMA/blob/main/rakudoc_draft_3.rakudoc the term "ambient context" shows up quite often. So the separation of what's rakudoc and what's not is already part of the spec. So maybe we don't need a SafeRakuDoc, but just a CleanRakuDoc that doesn't have any non-RakuDoc stuff mixed in.

[12:14] <patrickb> Sadly the spec says: "A file with mainly RakuDoc source has a file extension B<.rakudoc>." and not "exclusively".

[12:15] <lizmat> please make an issue for that  :-)

[12:15] <patrickb> My current, maybe false, undestanding is that we'd need to build two things: 1. A tool to strip all non-rakudoc from a file, leaving a clean RakuDoc file. 2. A pure RakuDoc parser that is unable to parse anything but clean RakuDoc.

[12:18] <lizmat> the first is pretty easy for me to do

[12:19] <lizmat> except that I seem to be running into a RakuAST issue with BEGIN blocks not being able to run in code that's compiled with .AST

[12:20] <patrickb> https://github.com/Raku/RakuDoc-GAMMA/issues/48

[12:20] <patrickb> There we go.

[12:21] <lizmat> patrickb++

[12:49] <Geth> ¦ rakudo/windows_latest_azure_pipeline: 70a923f397 | (Timo Paulssen)++ | azure-pipelines.yml

[12:49] <Geth> ¦ rakudo/windows_latest_azure_pipeline: get before/after event log counts, and grab some events

[12:49] <Geth> ¦ rakudo/windows_latest_azure_pipeline: 

[12:49] <Geth> ¦ rakudo/windows_latest_azure_pipeline: from semi-randomly picked categories

[12:49] <Geth> ¦ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/70a923f397

[12:53] <timo> Downloaded 0.0 MB out of 115.9 MB (0%).

[12:53] <timo> Downloaded 119.3 MB out of 115.9 MB (103%).@s

[12:58] <Geth> ¦ rakudo/windows_latest_azure_pipeline: ca31fd649b | (Timo Paulssen)++ | azure-pipelines.yml

[12:58] <Geth> ¦ rakudo/windows_latest_azure_pipeline: Compare-Object logs before and after

[12:58] <Geth> ¦ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/ca31fd649b

[13:01] <Geth> ¦ rakudo/windows_latest_azure_pipeline: 0bd9362def | (Timo Paulssen)++ | azure-pipelines.yml

[13:01] <Geth> ¦ rakudo/windows_latest_azure_pipeline: is this how i have to handle spaces?

[13:01] <Geth> ¦ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/0bd9362def

[13:04] <Geth> ¦ rakudo/main: fb7d3e7fd4 | (Elizabeth Mattijsen)++ | lib/RakuAST/Deparse/Highlight.rakumod

[13:04] <Geth> ¦ rakudo/main: RakuAST: work around an issue in RakuAST wrt %_

[13:04] <Geth> ¦ rakudo/main: 

[13:04] <Geth> ¦ rakudo/main: The logic about using the implicit slurpy hash in a method, appears

[13:04] <Geth> ¦ rakudo/main: to be still not working 100%.  Work around it by giving the slurpy

[13:04] <Geth> ¦ rakudo/main: a different name

[13:04] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fb7d3e7fd4

[13:09] <Geth> ¦ rakudo/main: 6888e97725 | (Elizabeth Mattijsen)++ | 2 files

[13:09] <Geth> ¦ rakudo/main: RakuAST: initial stab at SafeRakuDoc

[13:09] <Geth> ¦ rakudo/main: 

[13:09] <Geth> ¦ rakudo/main: This introduces a RakuDoc::To::SafeRakuDoc module, that will usually

[13:09] <Geth> ¦ rakudo/main: be invoked with the --rakudoc commandline argument:

[13:09] <Geth> ¦ rakudo/main: 

[13:09] <Geth> ¦ rakudo/main:   $ RAKUDO_RAKUAST=1 raku --rakudoc=SafeRakuDoc filename.raku

[13:10] <Geth> ¦ rakudo/main: 

[13:10] <Geth> ¦ rakudo/main: <…commit message has 11 more lines…>

[13:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6888e97725

[13:10] <lizmat> patrickb: ^^

[13:13] <patrickb> Wow, that was fast. Thanks!

[13:15] <lizmat> it was not a lot of code sofar

[13:17] <lizmat> https://github.com/rakudo/rakudo/blob/6888e97725482d31c416e6d0261a793408515fe4/lib/RakuDoc/To/SafeRakuDoc.rakumod#L23

[13:18] <lizmat> afk&

[13:21] <patrickb> Bikeshedding: Do we actually want to call this "SafeRakuDoc"? Given that RakuDoc is safe as long as it has no Raku stuff mixed into it, it feels a little off. Clean or Pure seem like clearer prefixes. Or turing it around: MixedRakuDoc / DirtyRakuDoc.

[13:25] <Geth> ¦ rakudo/windows_latest_azure_pipeline: 62bebfa680 | (Timo Paulssen)++ | azure-pipelines.yml

[13:25] <Geth> ¦ rakudo/windows_latest_azure_pipeline: look at the WER localdumps registry settings ...

[13:25] <Geth> ¦ rakudo/windows_latest_azure_pipeline: review: https://github.com/rakudo/rakudo/commit/62bebfa680

[13:49] <ab5tract> I agree with the bikeshedding

[13:50] <ab5tract> I almost wonder if it would make sense to have “safe” be _the_ RakuDoc

[13:50] <ab5tract> And then the one with evals could be ExtendedRakuDoc or something

[13:51] <ab5tract> Just spitballing here

[14:07] <Geth> ¦ rakudo/azure_improvements: 3e8c1ac65b | (Timo Paulssen)++ | azure-pipelines.yml

[14:07] <Geth> ¦ rakudo/azure_improvements: try caching location of devShell.dll

[14:07] <Geth> ¦ rakudo/azure_improvements: 

[14:07] <Geth> ¦ rakudo/azure_improvements: should shave off multiple minutes from every windows build

[14:07] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/3e8c1ac65b

[14:10] <Geth> ¦ rakudo: timo++ created pull request #5642: Try improving the azure pipeline (focus on windows builds)

[14:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5642

[14:25] <coleman> bike shed colors: RakuDocExec, RakuDocEval, ...

[14:26] <coleman> RakuEvalDoc...

[14:26] <Geth> ¦ rakudo/azure_improvements: 59ba9a1875 | (Timo Paulssen)++ | azure-pipelines.yml

[14:26] <Geth> ¦ rakudo/azure_improvements: try caching nqp+moar or just moar

[14:26] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/59ba9a1875

[14:28] <Geth> ¦ rakudo/azure_improvements: 03ece384b1 | (Timo Paulssen)++ | azure-pipelines.yml

[14:28] <Geth> ¦ rakudo/azure_improvements: try caching nqp+moar or just moar

[14:28] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/03ece384b1

[14:30] <Geth> ¦ rakudo/azure_improvements: 422db83ecc | (Timo Paulssen)++ | azure-pipelines.yml

[14:30] <Geth> ¦ rakudo/azure_improvements: dubquotes for all!

[14:30] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/422db83ecc

[14:41] *** [Coke]_ joined
[14:41] *** [Coke]_ is now known as a

[14:41] *** a is now known as Guest5605

[14:44] <Geth> ¦ rakudo/azure_improvements: 329959c5bb | (Timo Paulssen)++ | azure-pipelines.yml

[14:44] <Geth> ¦ rakudo/azure_improvements: fix oversight in cache handling

[14:44] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/329959c5bb

[14:44] *** Guest5605 left
[14:44] *** [Coke]_ joined
[14:52] *** [Coke]_ left
[14:55] <Geth> ¦ rakudo/azure_improvements: b739117ec7 | (Timo Paulssen)++ | azure-pipelines.yml

[14:55] <Geth> ¦ rakudo/azure_improvements: ensure nqp_git_rev is in cache key

[14:55] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/b739117ec7

[14:56] <timo> https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=6149&view=results - does anybody have access to cancel the test job here?

[15:02] <patrickb> Canceled.

[15:02] <timo> thank you

[15:02] <timo> it's a little bit frustrating that i can't send a cancel request from github

[15:04] <Geth> ¦ rakudo/azure_improvements: 4c2bc97b11 | (Timo Paulssen)++ | azure-pipelines.yml

[15:04] <Geth> ¦ rakudo/azure_improvements: copy-pasto in pwsh_dev code

[15:04] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/4c2bc97b11

[15:05] <timo> sorry, can i ask you to also cancel the https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=6148&view=results and https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=6150&view=results jobs? patrickb <3

[15:07] <Geth> ¦ rakudo/azure_improvements: 51e97fcb69 | (Timo Paulssen)++ | azure-pipelines.yml

[15:07] <Geth> ¦ rakudo/azure_improvements: another syntax fail

[15:07] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/51e97fcb69

[15:07] <timo> https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=6150&view=results and also this

[15:07] <timo> oh i already gave that

[15:07] <timo> https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=6151&view=results actually this one

[15:42] *** [Coke]_ joined
[15:43] <timo> https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=6152&view=results if you have a moment to cancel yet another pipeline run ...?

[15:44] <Geth> ¦ rakudo/azure_improvements: 8793ba1010 | (Timo Paulssen)++ | azure-pipelines.yml

[15:44] <Geth> ¦ rakudo/azure_improvements: where_is_devshell has to be in a folder

[15:44] <Geth> ¦ rakudo/azure_improvements: 

[15:44] <Geth> ¦ rakudo/azure_improvements: the Cache task can not work with single files

[15:44] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/8793ba1010

[15:45] *** [Coke] is now known as Guest1428

[15:46] *** [Coke]_ is now known as [Coke]

[15:47] <lizmat> sorry, but to me "unsafe RakuDoc" is just Raku code

[15:54] *** lizmat_ joined
[15:56] *** evalable6 joined
[15:56] *** bloatable6 joined
[15:57] *** tonyo1 is now known as tonyo

[15:57] *** greppable6 joined
[15:58] *** sivoais_ joined
[15:58] *** andinus2 joined
[16:00] <timo> oh god i hope mv-ing the restored-from-cache folder away after restoring from cache doesn't cause a failure at the end when it for some reason tries to upload the cache?

[16:02] <ab5tract> lizmat: well yeah.. the thing that makes it unsafe is that it executes code

[16:02] <ab5tract> I think opting in to that makes a lot more sense than opting out

[16:03] <timo> Cache with fingerprint `"$(BACKEND)"|"downstream"|"--relocatable"|"ubuntu-20.04"|"2024.08-6-gac82e446f + 2024.08-2-gc450b5b96"|"downstream"|"--backends=moar --relocatable"` already exists.

[16:03] <timo> phew.

[16:03] *** camelia left
[16:03] *** lizmat left
[16:03] *** bloatable6__ left
[16:03] *** greppable6__ left
[16:03] *** evalable6__ left
[16:03] *** sivoais left
[16:03] *** jjatria left
[16:03] *** andinus left
[16:03] *** lizmat_ left
[16:03] <ab5tract> timo: I was worried that you had successfully predicted your own future there

[16:04] *** lizmat joined
[16:05] <timo> same

[16:10] *** jjatria joined
[16:20] <Geth> ¦ rakudo/main: 866eec3705 | (Elizabeth Mattijsen)++ | 4 files

[16:20] <Geth> ¦ rakudo/main: RakuAST: rename ::To::SafeRakuDoc to ::To::RakuDoc

[16:20] <Geth> ¦ rakudo/main: 

[16:20] <Geth> ¦ rakudo/main: And make that the default for the --rakudoc command line parameter

[16:20] <Geth> ¦ rakudo/main: so that you can do:

[16:20] <Geth> ¦ rakudo/main: 

[16:20] <Geth> ¦ rakudo/main:   $ RAKUDO_RAKUAST raku --rakudoc file.rakumod

[16:20] <Geth> ¦ rakudo/main: 

[16:21] <Geth> ¦ rakudo/main: to get the (safe) rakudoc of a file

[16:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/866eec3705

[16:41] *** andinus2 left
[16:41] *** andinus joined
[17:01] *** camelia joined
[17:18] <patrickb> lizmat++ agreed

[17:22] <patrickb> timo: I guess someone else did the honors...

[17:23] <timo> no i think it just finished

[17:23] <patrickb> k

[17:25] <Geth> ¦ rakudo/azure_improvements: a07eb5a3e3 | (Timo Paulssen)++ | azure-pipelines.yml

[17:25] <Geth> ¦ rakudo/azure_improvements: make sure we don't throw out cached folders

[17:25] <Geth> ¦ rakudo/azure_improvements: 

[17:25] <Geth> ¦ rakudo/azure_improvements: doesn't seem to be a problem immediately, since when

[17:25] <Geth> ¦ rakudo/azure_improvements: there is a cache hit, the cache job will just say

[17:25] <Geth> ¦ rakudo/azure_improvements: "there is already a cache for key blahblah"

[17:25] <Geth> ¦ rakudo/azure_improvements: instead of trying to upload from an empty folder

[17:25] <Geth> ¦ rakudo/azure_improvements: and erroring the whole pipeline.

[17:25] <Geth> ¦ rakudo/azure_improvements: 

[17:25] <Geth> ¦ rakudo/azure_improvements: But for the case that it goes wrong for some reason,

[17:25] <Geth> ¦ rakudo/azure_improvements: let's make sure there's sensible data to re-cache there.

[17:25] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/a07eb5a3e3

[17:25] <Geth> ¦ rakudo/azure_improvements: 65597e14c3 | (Timo Paulssen)++ | azure-pipelines.yml

[17:25] <Geth> ¦ rakudo/azure_improvements: Informative(?) output for devshell location caching

[17:25] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/65597e14c3

[17:25] <Geth> ¦ rakudo/azure_improvements: d7e211d736 | (Timo Paulssen)++ | azure-pipelines.yml

[17:25] <Geth> ¦ rakudo/azure_improvements: debug output of env vars near the start

[17:25] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/d7e211d736

[17:26] <patrickb> jjatria: Did you notice https://gitlab.com/raku-land/raku-land/-/issues/61 ?

[17:31] <Geth> ¦ rakudo/azure_improvements: 6fea15fa90 | (Timo Paulssen)++ | azure-pipelines.yml

[17:31] <Geth> ¦ rakudo/azure_improvements: forgot the -r for cp, that's rare

[17:31] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/6fea15fa90

[17:34] *** Guest1428 left
[17:42] *** [Coke]_ joined
[17:59] <Geth> ¦ rakudo/azure_improvements: 5bfe292893 | (Timo Paulssen)++ | 2 files

[17:59] <Geth> ¦ rakudo/azure_improvements: try out for-azure-pipeline-log stuff

[17:59] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/5bfe292893

[18:42] <Geth> ¦ rakudo/azure_improvements: dcce9b01a2 | (Timo Paulssen)++ | azure-pipelines.yml

[18:42] <Geth> ¦ rakudo/azure_improvements: tag rakudo builds with the used nqp and moar git revs

[18:42] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/dcce9b01a2

[19:15] *** [Coke] left
[19:36] *** [Coke] joined
[20:07] <timo> should we keep attempting to run the rakudo-jvm build even though it always runs into the memory limit of the runner?

[20:08] <[Coke]> the pipeline? I'd disable it until we can make it work again and then we can leave it on again

[20:08] <[Coke]> otherwise we're just throwing CPU away

[20:10] <timo> the nqp pipelines also all build and test rakudo in addition to building and testing nqp

[20:12] <[Coke]> ... in addition to the rakudo pipelines testing rakudo?

[20:12] <[Coke]> (I'm not entirely familiar with how this is setup)

[20:19] <timo> yeah the rakudo pipelines test rakudo and there's also a job variant that also runs spectests

[20:19] *** sena_kun joined
[20:20] <[Coke]> so having nqp does it seems to be overkill - seems like rakudo should be testing against the latest version bump of nqp, not having nqp test the latest version of itself **and** rakudo.

[20:21] <[Coke]> ... unless we're relying on that to say it's safe to *do* the bump

[20:21] <[Coke]> (but I don't think we are)

[20:27] <timo> well, rakudo will only be tested with a given nqp version if there is a bump commit to make it so

[20:27] <timo> right

[20:52] <Geth> ¦ rakudo/azure_improvements: d28ca64124 | (Timo Paulssen)++ | azure-pipelines.yml

[20:52] <Geth> ¦ rakudo/azure_improvements: try cleaning the matrix up with template expressions

[20:52] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/d28ca64124

[20:54] <Geth> ¦ rakudo/azure_improvements: 04b666349e | (Timo Paulssen)++ | azure-pipelines.yml

[20:54] <Geth> ¦ rakudo/azure_improvements: try cleaning the matrix up with template expressions

[20:54] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/04b666349e

[21:13] <Geth> ¦ rakudo/azure_improvements: 331206ec5f | (Timo Paulssen)++ | azure-pipelines.yml

[21:13] <Geth> ¦ rakudo/azure_improvements: is this how to do it?

[21:13] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/331206ec5f

[21:15] <Geth> ¦ rakudo/azure_improvements: 978bdaa0bc | (Timo Paulssen)++ | azure-pipelines.yml

[21:15] <Geth> ¦ rakudo/azure_improvements: is this how to do it?

[21:15] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/978bdaa0bc

[21:16] <timo> this shit's not working as advertised i feel like ...

[21:37] *** sena_kun left
[21:42] <timo> oof.

[21:42] <timo> i can just throw all of that last stuff in the trash

[21:49] *** El_Che left
[22:00] *** sena_kun joined
[22:31] *** sena_kun left
[23:18] <Geth> ¦ rakudo/azure_improvements: c967f29442 | (Timo Paulssen)++ | azure-pipelines.yml

[23:18] <Geth> ¦ rakudo/azure_improvements: try to template expressions all the things

[23:18] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/c967f29442

[23:20] <Geth> ¦ rakudo/azure_improvements: e48a4e119c | (Timo Paulssen)++ | azure-pipelines.yml

[23:20] <Geth> ¦ rakudo/azure_improvements: try to template expressions all the things

[23:20] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/e48a4e119c

[23:21] <timo> i want a "don't annoy the people on irc with this" thing for this branch

[23:22] <Geth> ¦ rakudo/azure_improvements: c7005da118 | (Timo Paulssen)++ | azure-pipelines.yml

[23:22] <Geth> ¦ rakudo/azure_improvements: try to template expressions all the things

[23:22] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/c7005da118

[23:27] <Geth> ¦ rakudo/azure_improvements: 14aac1d5fb | (Timo Paulssen)++ | azure-pipelines.yml

[23:27] <Geth> ¦ rakudo/azure_improvements: try to template expressions all the things

[23:27] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/14aac1d5fb

[23:41] <Geth> ¦ rakudo/azure_improvements: 0b7baa4ad8 | (Timo Paulssen)++ | azure-pipelines.yml

[23:41] <Geth> ¦ rakudo/azure_improvements: try to template expressions all the things

[23:41] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/0b7baa4ad8

[23:44] <Geth> ¦ rakudo/azure_improvements: 9793b41ffa | (Timo Paulssen)++ | azure-pipelines.yml

[23:44] <Geth> ¦ rakudo/azure_improvements: try to template expressions all the things

[23:44] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/9793b41ffa

[23:52] <Geth> ¦ rakudo/azure_improvements: d8c403e890 | (Timo Paulssen)++ | azure-pipelines.yml

[23:52] <Geth> ¦ rakudo/azure_improvements: always stop JVM before the "build rakudo" step

[23:52] <Geth> ¦ rakudo/azure_improvements: 

[23:52] <Geth> ¦ rakudo/azure_improvements: it's very slow and always runs out of RAM

[23:52] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/d8c403e890

[23:53] <Geth> ¦ rakudo/azure_improvements: 7620b7c90b | (Timo Paulssen)++ | azure-pipelines.yml

[23:53] <Geth> ¦ rakudo/azure_improvements: always stop JVM before the "build rakudo" step

[23:53] <Geth> ¦ rakudo/azure_improvements: 

[23:53] <Geth> ¦ rakudo/azure_improvements: it's very slow and always runs out of RAM

[23:53] <Geth> ¦ rakudo/azure_improvements: review: https://github.com/rakudo/rakudo/commit/7620b7c90b

