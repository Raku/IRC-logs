[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[02:01] <jdv> lizmat: why isn't your last change on nqp bumped into rakudo?

[02:01] <jdv> ab5tract: why isn't your last change on nqp bumped into rakudo?

[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:48] <Geth> ¦ rakudo/main: 11e81cd83b | (Stefan Seifert)++ | t/02-rakudo/13-exceptions.t

[07:48] <Geth> ¦ rakudo/main: Fix syntax errors in tests obscuring the errors we're interested in

[07:48] <Geth> ¦ rakudo/main: 

[07:48] <Geth> ¦ rakudo/main: For unknown reason the EVALed strings had a trailing } so if the

[07:48] <Geth> ¦ rakudo/main: expected compile time error would not happen we'd get a syntax error.

[07:48] <Geth> ¦ rakudo/main: The test triggers just fine without this (as it's checking for the right

[07:48] <Geth> ¦ rakudo/main: compile time error), so fix the syntax error to reduce confusion.

[07:48] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/11e81cd83b

[08:24] <Geth> ¦ rakudo/main: 4 commits pushed by (Stefan Seifert)++

[08:24] <Geth> ¦ rakudo/main: de518e474f | RakuAST: throw correct exception when trying to re-bind Code object

[08:24] <Geth> ¦ rakudo/main: 6c0e2466b9 | RakuAST: throw correct exception when trying to re-bind types

[08:24] <Geth> ¦ rakudo/main: 9624046ce8 | RakuAST: throw correct exception when trying to bind to a native

[08:24] <Geth> ¦ rakudo/main: b6e8f27586 | RakuAST: throw correct exception when trying to bind to a pseudo package

[08:24] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/11e81cd83b0c...b6e8f27586f7

[08:24] <nine> With these t/02-rakudo/13-exceptions.t is finally passing

[09:00] *** finanalyst joined
[09:01] <ab5tract> massive

[09:02] <ab5tract> jdv: It didn't seem urgent. do we bump every commit, every time? #new-to-it

[09:07] *** sena_kun joined
[10:08] <lizmat> nine: confirm  t/02-rakudo/13-exceptions.t passing, but seems we lost t/02-rakudo/10-nqp-ops.t  :-(

[10:15] <lizmat> seems to be caused by:

[10:15] <lizmat> m: use nqp; nqp::p6bindattrinvres(($ := 42), Int, q/$!value/, nqp::getattr(42, Int, q|$!value|))

[10:15] <camelia> rakudo-moar b6e8f2758: ( no output )

[10:15] <lizmat> the $ := 42 part

[10:16] <lizmat> my $a := 42 is fine

[10:16] <lizmat> so it looks like the handling of the anomyous state var is to blame

[10:45] *** finanalyst_ joined
[10:48] <finanalyst_> [Coke] please take a look at the doc-website PR. The issue - after merging the PR - is how to inform previous users to change their settings. Simplest is to delete the local storage for doc-website through the browser.

[10:49] <lizmat> finanalyst_: isn't there some JS code that can do that automagically?

[10:49] <lizmat> when finding incompatible data?

[10:53] *** finanalyst left
[10:53] *** finanalyst_ left
[11:24] *** sena_kun left
[11:24] *** sena_kun joined
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:24] <ab5tract> > r 'say "Xabddcabaacab" ~~ m/abaacab/'

[12:24] <ab5tract> ｢abaacab｣

[12:47] *** linkable6_ left
[12:48] *** squashable6 left
[12:48] *** linkable6_ joined
[12:50] *** squashable6 joined
[14:05] <ab5tract> somehow this causes a segv on when compiled with optimization/without debug (but only after printing '｢abaacab｣')

[14:28] <[Coke]> lizmat: it would be nice if we could as part of this deployment, wipe the setting the first time we look at it.

[14:29] <ab5tract> also loving the C stdlib which interacts so unwholesomely with true == 1 and false == 0

[14:33] <Geth> ¦ rakudo: AntonOks++ created pull request #5553: Compiler.nqp: Add $rakudo-flavor

[14:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5553

[15:00] <releasable6> Next release in ≈4 days and ≈3 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:00] <releasable6_> Next release in ≈4 days and ≈3 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:26] *** [TuxCM] joined
[15:55] <ab5tract> could definitely use some insight from an experience C hacker here: https://gist.github.com/ab5tract/9030eb22975f273ac6de1b079e546cfe#file-0-2-how-exactly

[16:07] *** lizmat_ joined
[16:08] <nine> lizmat: ah, well that's exactly why I work on make test right now. It's so easy to miss a regression there

[16:08] <nine> nqp-ops.t just sounds like someone where you'd expect failures with RakuaST

[16:09] <lizmat_> yet it only has 2 tests ?

[16:10] <nine> I meant the name. I did look through the list of failing files and thought I knew all of them. But then I also was in quite the hurry to catch a train

[16:11] *** lizmat left
[16:11] *** lizmat_ left
[16:11] *** lizmat joined
[16:19] <ab5tract> lol, the only problem with my fix was with this un-related performance optimization I decided to include with my fix :)

[16:20] <lizmat> *phew*

[16:20] <ab5tract> yeah, that's a big sigh of relief from me as well

[16:24] <ab5tract> theoretically it *should* work for us our variation as well, but it clearly isn't a 1:1 port

[16:24] <ab5tract> `Stage parse      :  31.338` <---- haven't seen it go this fast in a week or two (it's been above 40)

[16:25] <lizmat> well, I guess we should start with merging the memmem fix?

[16:28] <ab5tract> my double-check run of spectest is almost finished

[16:28] <ab5tract> yeah, we're good

[16:30] <lizmat> ok, so I can merge the PR ?

[16:31] <ab5tract> please go ahead and merge https://github.com/MoarVM/MoarVM/pull/1798

[16:32] <ab5tract> it's honestly quite wild that no issues with this have emerged until now

[16:32] <lizmat> yeah  :-)

[16:32] <ab5tract> I guess that says something about the robustness of the overall algorithm

[16:35] <ab5tract> now I may need to play around with the broken version and EVAL in lldb and come to terms with whatever the hell was happening there

[16:37] <Geth> ¦ nqp/main: 84c3a9bd5c | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[16:37] <Geth> ¦ nqp/main: Bump MoarVM to get weird pattern bug fix

[16:37] <Geth> ¦ nqp/main: 

[16:37] <Geth> ¦ nqp/main: ab5tract++ for chasing this one down!

[16:37] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/84c3a9bd5c

[16:38] *** linkable6_ left
[16:41] *** linkable6_ joined
[16:42] <lizmat> so far, core compilation parse time appears unaffected to me

[16:46] <ab5tract> Curious, but not worrying

[16:47] <ab5tract> Though obviously I would have been happy to deliver a 25% speed up ;)

[16:47] <Geth> ¦ rakudo/main: f56a39731c | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[16:47] <Geth> ¦ rakudo/main: Bump NQP to get weird pattern bug fix

[16:47] <Geth> ¦ rakudo/main: 

[16:47] <Geth> ¦ rakudo/main: ab5tract++ for chasing this one down!

[16:47] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f56a39731c

[17:39] *** sena_kun left
[17:40] *** sena_kun joined
[17:42] *** finanalyst joined
[17:42] *** finanalyst_ joined
[17:46] <nine> ab5tract++ # epic work!

[17:55] <ab5tract> :D

[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:11] <Geth> ¦ rakudo/main: 7d855c4be0 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[18:11] <Geth> ¦ rakudo/main: RakuAST: fix anonymous vars losing their bindability

[18:11] <Geth> ¦ rakudo/main: 

[18:11] <Geth> ¦ rakudo/main: Forgot to initialize the new VarDeclaration::Simple attributes in this

[18:11] <Geth> ¦ rakudo/main: subclass that overrides the constructor.

[18:11] <Geth> ¦ rakudo/main: 

[18:11] <Geth> ¦ rakudo/main: Yet again lizmat++ for the heads-up

[18:11] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7d855c4be0

[18:43] *** sena_kun left
[18:44] *** sena_kun joined
[20:17] <Geth> ¦ rakudo/main: 4 commits pushed by (Stefan Seifert)++

[20:17] <Geth> ¦ rakudo/main: d1cf55cb88 | RakuAST: unbreak multi-line parsing in REPL

[20:17] <Geth> ¦ rakudo/main: 54ff30e824 | RakuAST: fix tiny discrepancy in filename on unknown files

[20:17] <Geth> ¦ rakudo/main: f3b9b8e048 | RakuAST: fix filename missing from compilation errors

[20:17] <Geth> ¦ rakudo/main: 6cf9a5cbfe | RakuAST: correct error message when encountering unexpected closing bracket

[20:17] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/7d855c4be040...6cf9a5cbfeb9

[20:17] <jdv> ab5tract: its nice if those are always kept in sync for at least release reasons

[20:18] <jdv> i'll run a blin sometime today or tomorrow

[20:19] <ab5tract> jdv: ack, will keep that in mind in the future

[20:30] *** donaldh joined
[20:44] <jdv> thanks

[20:52] *** vrurg_ joined
[20:54] *** vrurg left
[22:36] *** greppable6 left
[22:36] *** quotable6 left
[22:36] *** sourceable6 left
[22:36] *** nativecallable6 left
[22:36] *** tellable6 left
[22:36] *** shareable6 left
[22:36] *** benchable6 left
[22:36] *** notable6 left
[22:36] *** unicodable6 left
[22:36] *** linkable6 left
[22:36] *** committable6 left
[22:36] *** bloatable6 left
[22:36] *** evalable6 left
[22:36] *** coverable6 left
[22:36] *** bisectable6 left
[22:36] *** releasable6 left
[22:41] *** releasable6 joined
[22:41] *** bisectable6 joined
[22:41] *** bloatable6 joined
[22:41] *** nativecallable6 joined
[22:41] *** unicodable6 joined
[22:41] *** evalable6 joined
[22:42] *** benchable6 joined
[22:42] *** greppable6 joined
[22:42] *** coverable6 joined
[22:42] *** linkable6 joined
[22:42] *** quotable6 joined
[22:42] *** sourceable6 joined
[22:43] *** shareable6 joined
[22:43] *** notable6 joined
[22:44] *** committable6 joined
[22:44] *** tellable6 joined
[23:24] *** sena_kun left
