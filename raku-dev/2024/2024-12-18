[03:46] *** librasteve_ left
[08:33] <lizmat> bisectable6: old=2024.10 dd "foobar".trans(/ o / => { $0.uc })

[08:33] <bisectable6> lizmat, On both starting points (old=2024.10 new=3efc376) the exit code is 0 and the output is identical as well

[08:33] <bisectable6> lizmat, Output on both points: «Use of Nil.uc coerced to empty string␤  in block  at /tmp/FUJcxVmNUD line 1␤Use of Nil.uc coerced to empty string␤  in block  at /tmp/FUJcxVmNUD line 1␤"fbar"␤»

[08:34] <lizmat> weird, I thought that was to DWIM

[08:35] <lizmat> bisectable6: old=2024.10 dd "foobar".subst(/ o / => { $0.uc }, :g)

[08:35] <bisectable6> lizmat, On both starting points (old=2024.10 new=3efc376) the exit code is 1 and the output is identical as well

[08:35] <bisectable6> lizmat, https://gist.github.com/d4c7514a91ba1d6f5955b67c4e5aeec0

[08:35] <lizmat> m: dd "foobar".subst(/ o / => { $0.uc }, :g)

[08:35] <camelia> rakudo-moar 3efc376a5: OUTPUT: «Cannot resolve caller match(Str:D: Pair:D, :g); none of these signatures matches:␤    (Str $:: Cool:D $pattern, |c)␤    (Str $:: Regex:D $pattern, :continue(:$c)!, *%_)␤    (Str $:: Regex:D $pattern, :pos(:$p)!, *%_)␤    (Str $:: Regex:D $patt…»

[08:35] <lizmat> m: dd "foobar".subst(/ o /,{ $0.uc })

[08:35] <camelia> rakudo-moar 3efc376a5: OUTPUT: «Use of Nil.uc coerced to empty string␤  in block  at <tmp> line 1␤"fobar"␤»

[08:35] <lizmat> m: dd "foobar".subst(/ o /,{ .uc })

[08:36] <camelia> rakudo-moar 3efc376a5: OUTPUT: «"fOobar"␤»

[08:36] <lizmat> hmmm

[08:58] <ab5tract> Oh that’s an intriguing one

[09:07] <timo> incorrect use of $0 to mean $/.Str?

[09:08] <timo> m: dd "foobar".subst(/ o / => { $/.uc }, :g)

[09:08] <camelia> rakudo-moar 3efc376a5: OUTPUT: «Cannot resolve caller match(Str:D: Pair:D, :g); none of these signatures matches:␤    (Str $:: Cool:D $pattern, |c)␤    (Str $:: Regex:D $pattern, :continue(:$c)!, *%_)␤    (Str $:: Regex:D $pattern, :pos(:$p)!, *%_)␤    (Str $:: Regex:D $patt…»

[09:08] <timo> oh i copied the wrong one?

[09:08] <timo> m: dd "foobar".trans(/ o / => { $/.uc })

[09:08] <camelia> rakudo-moar 3efc376a5: OUTPUT: «"fOObar"␤»

[09:08] <timo> m: dd "fooooooooooobar".trans(/ o / => { ($/.uc, $/).pick })

[09:08] <camelia> rakudo-moar 3efc376a5: OUTPUT: «"foOooOoooooObar"␤»

[09:11] <timo> m: .say for "foobar", *.subst(/ :i o / => { ($/.uc, $/.lc, $/.uc ~ $/.lc).pick }) ... *.chars > 10

[09:11] <camelia> rakudo-moar 3efc376a5: OUTPUT: «foobar␤Cannot resolve caller match(Str:D: Pair:D, :g(Any)); none of these signatures matches:␤    (Str $:: Cool:D $pattern, |c)␤    (Str $:: Regex:D $pattern, :continue(:$c)!, *%_)␤    (Str $:: Regex:D $pattern, :pos(:$p)!, *%_)␤    (Str $::…»

[09:11] <timo> m: .say for "foobar", *.subst(/ :i o /, { ($/.uc, $/.lc, $/.uc ~ $/.lc).pick }) ... *.chars > 10

[09:11] <camelia> rakudo-moar 3efc376a5: OUTPUT: «foobar␤foobar␤fOobar␤fOoobar␤fOoobar␤fOoobar␤fOoobar␤fOoobar␤fOoobar␤fOoobar␤fOoobar␤fOoobar␤fooobar␤fOoobar␤fOooobar␤fOoooobar␤fooooobar␤fOoooobar␤fooooobar␤fOoooobar␤fOoooobar␤fooooobar␤fOoooobar␤fOooooo…»

[09:11] <timo> m: .say for "foobar", *.subst(/ :i o /, { ($/.uc, $/.lc, $/.uc ~ $/.lc).pick }, :g) ... *.chars > 10

[09:11] <camelia> rakudo-moar 3efc376a5: OUTPUT: «foobar␤fOoOobar␤fOoOoobar␤fOOOoOOobar␤»

[09:12] <timo> m: .say for "foobar", *.subst(/ :i o /, { ($/.uc, $/.lc, $/.uc ~ $/.lc).pick }, :g) ... *.chars > 20

[09:12] <camelia> rakudo-moar 3efc376a5: OUTPUT: «foobar␤fOobar␤fOoObar␤fOOobar␤foOobar␤fOOoobar␤foOoobar␤fOoOoOobar␤fOOoOooobar␤fOooooOoOobar␤fOoOoOoOoooOobar␤foooOoOooOoOOobar␤fOOoOOOoOOooOOoObar␤fOOOoOoOooOoooOoOOOooOobar␤»

[09:14] *** sena_kun joined
[09:28] <Geth> ¦ rakudo/main: cacc876119 | (Elizabeth Mattijsen)++ | t/05-messages/01-errors.t

[09:28] <Geth> ¦ rakudo/main: Fix spellos in comment text

[09:28] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cacc876119

[09:32] *** sena_kun left
[09:44] <timo> waaaait a minute

[09:44] <timo> why is rakudo-early-build-m using /usr/bin/moar what the heck?

[09:44] <timo> rakudo-m-early-build*

[09:45] <Geth> ¦ nqp/main: fda688110f | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[09:45] <Geth> ¦ nqp/main: Bump MoarVM to get latest fixes

[09:45] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/fda688110f

[09:45] <timo> oh no

[09:46] <timo> i ran Configure with --prefix=/usr? i must have been drunk or something?!?

[09:48] <timo> so now, after maybe a hundred attempts to reproduce this hang in moar, i get it reproduced and i see that it's not using the moar i compiled but the one i installed from the debian package and i don't even have proper debug info >_<

[09:59] <[Tux]> Rakudo v2024.12-13-gcacc87611 (v6.d) on MoarVM 2024.12-8-gf4680765f

[09:59] <[Tux]> csv-test-xs-20      0.143 -  0.146

[09:59] <[Tux]> csv-ip5xs           0.258 -  0.267

[09:59] <[Tux]> test-t --race       0.263 -  0.271

[09:59] <[Tux]> test-t              0.395 -  0.402

[09:59] <[Tux]> csv-ip5xs-20        1.122 -  1.123

[09:59] <[Tux]> test-t-20 --race    1.194 -  1.220

[09:59] <[Tux]> csv-parser          1.493 -  1.538

[09:59] <[Tux]> test                1.855 -  1.941

[09:59] <[Tux]> test-t-20           4.837 -  4.843

[09:59] <[Tux]> https://tux.nl/Talks/CSV6/speed4-20.html / https://tux.nl/Talks/CSV6/speed4.html https://tux.nl/Talks/CSV6/speed.log

[10:00] <Geth> ¦ rakudo/main: cfa01ab4ef | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[10:00] <Geth> ¦ rakudo/main: Bump NQP for latest MoarVM fixes

[10:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cfa01ab4ef

[11:42] <lizmat> m: dd "foobar".trans( "o" => { ++$ }, :c)   # unexpected result

[11:42] <camelia> rakudo-moar cfa01ab4e: OUTPUT: «"1oo333"␤»

[12:03] <Geth> ¦ rakudo/main: 26fbd4c366 | (Elizabeth Mattijsen)++ | 2 files

[12:03] <Geth> ¦ rakudo/main: Remove now unnecessary R:I:ALL_TYPE method

[12:03] <Geth> ¦ rakudo/main: 

[12:03] <Geth> ¦ rakudo/main: Its functionality is actually exposed as the .are(Type) method

[12:03] <Geth> ¦ rakudo/main: nowadays.

[12:03] <Geth> ¦ rakudo/main: 

[12:03] <Geth> ¦ rakudo/main: Found as part of #5488 research

[12:03] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/26fbd4c366

[12:08] *** sjn left
[13:04] <lizmat> m: dd "foobar".trans( "o" => "xyz", :c )

[13:04] <camelia> rakudo-moar 26fbd4c36: OUTPUT: «"xooxxx"␤»

[13:04] *** sjn joined
[13:05] <lizmat> m: dd "foobar".trans( / o / => "xyz", :c )   # I'd argue this is wrong on quite a few levels

[13:05] <camelia> rakudo-moar 26fbd4c36: OUTPUT: «"fxyzxyzbar"␤»

[13:06] <lizmat> 1. it ignores the :c, and takes the whole target string instead of the first char

[18:49] *** sena_kun joined
[22:33] *** sena_kun left
