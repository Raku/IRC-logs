[08:40] <ab5tract> ugexe: regarding meta6.json: this is mixing of "list of either strings or objects" makes parsing in a static language kind of annoying https://gist.github.com/ab5tract/8a491c02fa5626c834ab7c0e3654105f

[09:04] <Geth> ¦ rakudo/main: ccf01a599b | (Elizabeth Mattijsen)++ | t/04-nativecall/06-struct.t

[09:04] <Geth> ¦ rakudo/main: Add test for #3851

[09:04] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ccf01a599b

[09:21] <Geth> ¦ roast: 6e71e5575f | (Elizabeth Mattijsen)++ | S06-operator-overloading/infix.t

[09:21] <Geth> ¦ roast: Add test for #3895

[09:21] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/6e71e5575f

[10:12] <Geth> ¦ rakudo/main: 5680202e28 | (Elizabeth Mattijsen)++ | src/core.c/Int.rakumod

[10:12] <Geth> ¦ rakudo/main: Make Int ** Int up to 15% faster

[10:12] <Geth> ¦ rakudo/main: 

[10:12] <Geth> ¦ rakudo/main: By splitting off the <0 >=0 cases into implementation-detail methods

[10:12] <Geth> ¦ rakudo/main: so that inlining becomes possible for the separate cases.

[10:12] <Geth> ¦ rakudo/main: 

[10:12] <Geth> ¦ rakudo/main: In response to https://github.com/rakudo/rakudo/issues/3910

[10:12] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5680202e28

[10:51] <Geth> ¦ rakudo/main: fa370cb8e2 | (Elizabeth Mattijsen)++ | src/core.c/Int.rakumod

[10:51] <Geth> ¦ rakudo/main: Simplify native coercers

[10:51] <Geth> ¦ rakudo/main: 

[10:51] <Geth> ¦ rakudo/main: Making them up to 50% faster.

[10:51] <Geth> ¦ rakudo/main: 

[10:51] <Geth> ¦ rakudo/main: Sadly .uint and .uint64 still need the workaround in the legacy

[10:51] <Geth> ¦ rakudo/main: grammar.  Once 6.e is out, the workaround can be removed

[10:51] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fa370cb8e2

[11:08] <Geth> ¦ rakudo/main: b7d1089561 | (Elizabeth Mattijsen)++ | t/12-rakuast/xx-fixed-in-rakuast.rakutest

[11:08] <Geth> ¦ rakudo/main: Add test for .uint|uint64 workaround

[11:08] <Geth> ¦ rakudo/main: 

[11:08] <Geth> ¦ rakudo/main: As these appear fixed in RakuAST, most likely due to absence of

[11:08] <Geth> ¦ rakudo/main: static optimizations

[11:08] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b7d1089561

[11:17] <Geth> ¦ roast: 36b4414151 | (Elizabeth Mattijsen)++ | S06-multi/type-based.t

[11:17] <Geth> ¦ roast: Add test for #3920

[11:17] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/36b4414151

[11:25] <Geth> ¦ rakudo/main: 498b91427a | (Elizabeth Mattijsen)++ | t/12-rakuast/xx-fixed-in-rakuast.rakutest

[11:25] <Geth> ¦ rakudo/main: Add test for #3935

[11:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/498b91427a

[11:32] <Geth> ¦ roast: d8f0ad76cb | (Elizabeth Mattijsen)++ | S02-types/signed-unsigned-native.t

[11:32] <Geth> ¦ roast: Add tests for #3936

[11:32] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/d8f0ad76cb

[11:39] <Geth> ¦ roast: 34ac62e0eb | (Elizabeth Mattijsen)++ | S32-exceptions/misc2.t

[11:39] <Geth> ¦ roast: Added test for #3949

[11:39] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/34ac62e0eb

[11:47] <Geth> ¦ nqp/main: 026d4c0d7e | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/HLL/Compiler.nqp

[11:47] <Geth> ¦ nqp/main: Allow --repl-mode even with parameters

[11:47] <Geth> ¦ nqp/main: 

[11:47] <Geth> ¦ nqp/main: As a start of providing a fix for https://github.com/rakudo/rakudo/issues/3952

[11:47] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/026d4c0d7e

[12:45] <Geth> ¦ nqp/main: 724ab6a912 | (Elizabeth Mattijsen)++ | src/HLL/Compiler.nqp

[12:45] <Geth> ¦ nqp/main: Make --repl-mode truly leading

[12:45] <Geth> ¦ nqp/main: 

[12:45] <Geth> ¦ nqp/main: 026d4c0d7ee5812da only checked --repl-mode if there were command

[12:45] <Geth> ¦ nqp/main: line arguments (other than "-").  This broke all of Rakudo's

[12:45] <Geth> ¦ nqp/main: REPL tests

[12:45] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/724ab6a912

[12:54] *** MasterDuke left
[13:09] <Geth> ¦ rakudo/main: 40cbb1944e | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[13:09] <Geth> ¦ rakudo/main: Bump NQP to make --repl-mode leading

[13:09] <Geth> ¦ rakudo/main: 

[13:09] <Geth> ¦ rakudo/main: As part of fixing #3952

[13:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/40cbb1944e

[13:28] <Geth> ¦ nqp/main: 04eab468db | (Elizabeth Mattijsen)++ | src/HLL/Compiler.nqp

[13:28] <Geth> ¦ nqp/main: Give interactive mode also access to command-line arguments

[13:28] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/04eab468db

[13:32] <ugexe> ab5tract: https://github.com/Raku/problem-solving/issues/394

[14:09] <Geth> ¦ rakudo/main: 2825646ae3 | (Elizabeth Mattijsen)++ | 4 files

[14:09] <Geth> ¦ rakudo/main: Allow CLI arguments in the REPL with --repl-mode=interactive

[14:09] <Geth> ¦ rakudo/main: 

[14:09] <Geth> ¦ rakudo/main: This commit:

[14:09] <Geth> ¦ rakudo/main: - Bumps NQP to get "interactive" method to receive CLI args

[14:09] <Geth> ¦ rakudo/main: - Makes sure the default REPL input is from STDIN

[14:09] <Geth> ¦ rakudo/main: - Adjust help message: only -e overrides --repl-mode

[14:09] <Geth> ¦ rakudo/main: - Add test for REPL with additional CLI arguments visible in @*ARGS

[14:09] <Geth> ¦ rakudo/main: 

[14:09] <Geth> ¦ rakudo/main: Fixes #3952

[14:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2825646ae3

[14:30] <Geth> ¦ rakudo/main: 91f2f3c19a | (Elizabeth Mattijsen)++ | t/12-rakuast/xx-fixed-in-rakuast.rakutest

[14:30] <Geth> ¦ rakudo/main: Add test for #4062

[14:30] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/91f2f3c19a

[15:00] <tbrowder> lizmat: i have successfully added basic tests for log2 and, thanks to timo, have those passing spec testing. however, i have NOT added tests for the ENTIRE domain of invalid entries, including entries for numbers x <= 0, and the undefined domain for complex numbers.

[15:03] <tbrowder> those will take more time and most likely smarter math ppl. BUT i do have some good links to excellent Wikipedia articles to put in a new or updated issue.

[15:04] <tbrowder> so, i can clean up what i have for the incomplete PR, or leave as is for more work.

[15:05] <tbrowder> my desire is to submit the PR as it is with appropriate caveats.

[16:50] <lizmat> tbrowder++

[17:30] <lizmat> notable6__: weekly

[17:30] <notable6__> lizmat, 4 notes: https://gist.github.com/000dc73712d61c2bef4f1ef251e36df2

[17:30] <timo> still working on that ddebian stuff haha

[17:33] <lizmat> notable6__: weekly reset

[17:33] <notable6__> lizmat, Moved existing notes to “weekly_2024-10-14T17:33:23Z”

[18:35] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/10/14/2024-42-burritonads/

[18:40] <[Coke]> my brain really wants to split that into two words in an unfortnate place. :)

[18:48] <timo> burritornado

[18:49] <lizmat> .oO( a dirty mind is a joy forever )

[18:51] <lizmat> RakuAST **not** being slower: https://github.com/rakudo/rakudo/issues/4133#issuecomment-2411999148

[18:52] <timo> cool

[18:56] <Geth> ¦ roast: 690c9148fb | (Elizabeth Mattijsen)++ | S12-enums/misc.t

[18:56] <Geth> ¦ roast: Add test for #4134

[18:56] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/690c9148fb

[20:31] <bartolin> Oh, I slowly remember where I left off the last time I looked at the jvm backend. precompilation was busted there (and still is). I *think* I pinpointed it to https://github.com/rakudo/rakudo/commit/efeb9d7742. If I'm not mistaken, the underlying problem was that the null checks in 'method pun' didn't work and one got a NQPMu back for 'blob8.^pun'. (As if TWEAK was not executed.)

[20:31] <bartolin> sorry for the rambling, but maybe it rings a bell for someone.

[20:34] <bartolin> m: say blob8.^make_pun  ## same result on jvm

[20:34] <camelia> rakudo-moar 91f2f3c19: OUTPUT: «(Blob[uint8])␤»

[20:35] <bartolin> m: say blob8.pun  ## on jvm: Method 'gist' not found for invocant of class 'NQPMu'

[20:35] <camelia> rakudo-moar 91f2f3c19: OUTPUT: «No such method 'pun' for invocant of type 'Blob[uint8]'␤  in block <unit> at <tmp> line 1␤␤»

[20:35] <bartolin> m: say blob8.^pun  ## on jvm: Method 'gist' not found for invocant of class 'NQPMu'

[20:35] <camelia> rakudo-moar 91f2f3c19: OUTPUT: «(Blob[uint8])␤»

[20:39] <bartolin> oh, I guess, I was very close back than: If I use just the following: 'method pun($target) { $!pun := self.make_pun($target) }' then loading a module works again. Not a clean solution, but at least no longer a strange unknown failure.

[20:40] <bartolin> I think, I was not precise before: It's not precompilation, but module loading in general that's busted.

[22:15] <Geth> ¦ roast/log2-tests: 55c808c89a | (Tom Browder)++ | 2 files

[22:15] <Geth> ¦ roast/log2-tests: Add tests for log2

[22:15] <Geth> ¦ roast/log2-tests: review: https://github.com/Raku/roast/commit/55c808c89a

[22:15] <Geth> ¦ roast: tbrowder++ created pull request #863: Add tests for log2

[22:15] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/863

[22:42] <ab5tract> bartolin++

[22:42] <ab5tract> The JVM surely appreciates the love

[22:42] <ab5tract> *backend

[23:08] <[Coke]> bartolin++

[23:17] <tbrowder> librasteve: i have yr log2 tests on deck  ready for a new PR for roast issue #862. if you have no objections, i'll submit the PR.

[23:18] <tbrowder> and close the issue if its accepter.

[23:18] <tbrowder> *accepted

[23:30] <tbrowder> see new file spec/S32-num/complex-logarithms.t on roast branch 'log2-tests'

[23:33] <tbrowder> probably ought to make new branch...

[23:33] <tbrowder> new branch is 'add-log2-test-file'

[23:34] <tbrowder> .tell librasteve ^^^

[23:34] <tellable6> tbrowder, I'll pass your message to librasteve

