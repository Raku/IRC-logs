[01:14] *** finanalyst left
[01:28] *** lizmat_ joined
[01:32] *** lizmat left
[02:31] <andinus> it's live now currently the script is not added to cron, i need to do that

[02:31] <andinus> librasteve:

[06:41] *** samebchase left
[06:46] *** samebchase joined
[09:37] *** lizmat_ left
[09:37] *** lizmat joined
[10:27] <Geth> ¦ nqp/main: 0d5391f0d4 | (Elizabeth Mattijsen)++ | 4 files

[10:27] <Geth> ¦ nqp/main: Don't compose again if already composed

[10:27] <Geth> ¦ nqp/main: 

[10:27] <Geth> ¦ nqp/main: Since NQP doesn't have augment, having something composed means

[10:27] <Geth> ¦ nqp/main: you don't ever need to do it again.  So check at the start of

[10:27] <Geth> ¦ nqp/main: the compose whether it was done already, and agai check inside

[10:27] <Geth> ¦ nqp/main: the protected blocks whether another thread did the compose while

[10:27] <Geth> ¦ nqp/main: the current thread was waiting for access to the block.

[10:27] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/0d5391f0d4

[10:33] *** finanalyst joined
[10:57] <Geth> ¦ nqp/main: bf46fb5500 | (Elizabeth Mattijsen)++ | 3 files

[10:57] <Geth> ¦ nqp/main: Remove pre-protect block composed checks

[10:57] <Geth> ¦ nqp/main: 

[10:57] <Geth> ¦ nqp/main: Since race connditions *are* rare, 99% of the cases the pre-protect

[10:57] <Geth> ¦ nqp/main: block test will fail anyway, so don't add this overhead to the most

[10:57] <Geth> ¦ nqp/main: common program flow.

[10:57] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/bf46fb5500

[11:12] *** finanalyst left
[11:19] <Geth> ¦ rakudo/main: 2fa69e8789 | (Elizabeth Mattijsen)++ | 2 files

[11:19] <Geth> ¦ rakudo/main: Bump NQP to get latest compose check tweaks

[11:19] <Geth> ¦ rakudo/main: 

[11:19] <Geth> ¦ rakudo/main: Also relax the signature on some (legacy) internals methods that

[11:19] <Geth> ¦ rakudo/main: would now cause test breakage because apparently some legacy

[11:19] <Geth> ¦ rakudo/main: grammar object seeped in.  Since this happens in the legacy

[11:19] <Geth> ¦ rakudo/main: grammar only, not spending more time on it at this point in time.

[11:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2fa69e8789

[12:24] <Geth> ¦ nqp/main: 9c73b41823 | (Elizabeth Mattijsen)++ | 3 files

[12:24] <Geth> ¦ nqp/main: Move multiple instances of name_of_code to Helpers

[12:24] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/9c73b41823

[12:50] <Geth> ¦ nqp/main: 3b65bace0b | (Elizabeth Mattijsen)++ | 7 files

[12:50] <Geth> ¦ nqp/main: Abstract shortname fuctionality into a helper sub

[12:50] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/3b65bace0b

[17:17] *** sena_kun joined
[18:45] <Geth> ¦ nqp/main: b943ebffbc | (Elizabeth Mattijsen)++ | 6 files

[18:45] <Geth> ¦ nqp/main: Make the positional on "method_table" optional

[18:45] <Geth> ¦ nqp/main: 

[18:45] <Geth> ¦ nqp/main: And change all of the calls to "method_table" to not pass any

[18:45] <Geth> ¦ nqp/main: positional argument.

[18:45] <Geth> ¦ nqp/main: 

[18:45] <Geth> ¦ nqp/main: This reduces the footprint of these calls.  This is possible

[18:45] <Geth> ¦ nqp/main: because the positional argument was only there to allow for

[18:45] <Geth> ¦ nqp/main: .^method calls to work from Raku (as far as I can see).

[18:45] <Geth> ¦ nqp/main: 

[18:45] <Geth> ¦ nqp/main: And since this method (as many others) only looks at attributes

[18:45] <Geth> ¦ nqp/main: of the invocant, this will not break any code.

[18:46] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/b943ebffbc

[18:59] <Geth> ¦ nqp/main: e4a0ff47bd | (Elizabeth Mattijsen)++ | src/how/NQPClassHOW.nqp

[18:59] <Geth> ¦ nqp/main: Make the positional on "(is_)array_type" optional

[18:59] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/e4a0ff47bd

[18:59] <Geth> ¦ nqp/main: e6170ed3f0 | (Elizabeth Mattijsen)++ | 3 files

[18:59] <Geth> ¦ nqp/main:  Make the positional on "role_typecheck_list" optional

[18:59] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/e6170ed3f0

[19:06] <Geth> ¦ nqp/main: 1131e1d1ba | (Elizabeth Mattijsen)++ | src/how/NQPClassHOW.nqp

[19:06] <Geth> ¦ nqp/main: Simplify MRO fetching

[19:06] <Geth> ¦ nqp/main: 

[19:06] <Geth> ¦ nqp/main: Since the positional on .mro is ignored, self.mro($foo) is just

[19:06] <Geth> ¦ nqp/main: a long way to say $!mro.  So use the shortcut instead.

[19:06] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/1131e1d1ba

[19:12] <Geth> ¦ nqp/main: 2bf9252a5a | (Elizabeth Mattijsen)++ | src/how/NQPClassHOW.nqp

[19:12] <Geth> ¦ nqp/main:  Make the positional on "mro" optional

[19:12] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/2bf9252a5a

[19:17] <Geth> ¦ nqp/main: 003273243a | (Elizabeth Mattijsen)++ | 2 files

[19:17] <Geth> ¦ nqp/main: Make the positional on "BUILD(ALL)PLAN" optional

[19:17] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/003273243a

[20:17] *** MasterDuke joined
[20:22] <MasterDuke> lizmat: you're probably aware, but rakudo needs a couple methods to have their signature changed to be an optional argument (at least `role_typecheck_list`)

[20:22] <tellable6> 2024-02-16T13:52:03Z #raku-dev <[Coke]> masterduke I'd get rid of "really", and just ask "did you mean"

[20:23] <lizmat> MasterDuke: I'm just working on NQP at the moment... the HOWs in Raku will come later

[20:24] <MasterDuke> yeah, i just pulled nqp and tried to build rakudo, i'll backup a couple commits in nqp

[20:28] <lizmat> ah, I borked Rakudo?

[20:28] <lizmat> hmmm that shouldn't have happened... I'll check

[20:33] <lizmat> MasterDuke: ahh  I see what happened... this is NQP HOW calling Raku HOW  ... interesting, ok... lemme see what would be the best solution

[20:41] <Geth> ¦ nqp/main: 05e593fb5b | (Elizabeth Mattijsen)++ | 7 files

[20:41] <Geth> ¦ nqp/main: Revert the making positionals optional

[20:41] <Geth> ¦ nqp/main: 

[20:41] <Geth> ¦ nqp/main: This needs to be done in the Raku metamodel first

[20:41] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/05e593fb5b

[20:42] <lizmat> MasterDuke ^^

[20:42] <MasterDuke> ++lizmat

[20:44] <lizmat> I'll bump MoarVM in NQP momentarily in NQP, ok MasterDuke?

[20:45] <MasterDuke> sure

[20:53] *** sena_kun left
[20:59] <Geth> ¦ rakudo/main: 87791051e1 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[20:59] <Geth> ¦ rakudo/main: Bump NQP for the latest tweaks

[20:59] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/87791051e1

[21:02] <Geth> ¦ nqp/main: 95f1248434 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[21:02] <Geth> ¦ nqp/main: Bump MoarVM to get latest libuv

[21:02] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/95f1248434

[21:09] <Geth> ¦ rakudo/main: cd7fb5cfa1 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[21:09] <Geth> ¦ rakudo/main: Bump NQP to get latest libuv version on MoarVM

[21:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cd7fb5cfa1

[21:16] <lizmat> and that concludes my hacking for today&

[21:24] <MasterDuke> lizmat: nice. and if you want a question for tomorrow, why here (https://github.com/rakudo/rakudo/blob/main/src/Perl6/bootstrap.c/BOOTSTRAP.nqp#L288) does `$expected.HOW.name($expected)` eq 'Positional', but `nqp::istype($expected, Positional)` != 1? my test code is `class A { method a(@b) { dd @b } }; A.new.a(1)`

[21:30] *** finanalyst joined
