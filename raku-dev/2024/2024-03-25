[01:02] <[Coke]> ls

[01:02] <[Coke]> ... oops

[02:51] <MasterDuke> huh, looks like 3853a0f broke the jvm build:

[02:51] <MasterDuke> +++ Preparing installation

[02:51] <MasterDuke> Could not find Cool::CompUnit::Repository::Staging in:

[02:51] <MasterDuke>     /home/vsts/work/1/rakudo/../install/share/perl6/core

[02:51] <MasterDuke>     CompUnit::Repository::AbsolutePath<1269410273>

[02:51] <MasterDuke>     CompUnit::Repository::NQP<524951396>

[02:51] <MasterDuke>     CompUnit::Repository::Perl5<2069276773>

[02:52] <MasterDuke>     CompUnit::Repository::JavaRuntime<47086169>

[02:52] <MasterDuke>   in throw (gen/jvm/CORE.c.setting:54064)

[07:22] <nine> MasterDuke: but that commit only touches RakuAST code?

[08:13] <lizmat> MasterDuke: feels more likely one of my commits did that

[08:15] *** samebchase left
[08:16] *** samebchase joined
[08:47] <lizmat> nine: running into something really weird

[08:48] <lizmat> working on ConcreteRoleHOW, I realised that once it is composed, it doesn't need to be composed again

[08:49] <lizmat> that appears to save 2 CPU seconds on "make spectest": not a lot, but why not I'd say

[08:49] <lizmat> (1250 -> 1248)

[08:49] <lizmat> however, it consistently breaks the reproducible-build tests

[08:50] <lizmat> ( it was already a bit of a flapper, failing about 1 in 20 times or so)

[08:55] <lizmat> any ideas?

[09:40] *** sena_kun joined
[10:05] *** sena_kun left
[10:27] <Geth> ¦ rakudo/main: 72c491f89e | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/ConcreteRoleHOW.nqp

[10:27] <Geth> ¦ rakudo/main: Streamline Metamodel::ConcreteRoleHOW

[10:27] <Geth> ¦ rakudo/main: 

[10:27] <Geth> ¦ rakudo/main: - give Collision its own new using positionals, and use native attributes

[10:27] <Geth> ¦ rakudo/main:   where possible

[10:27] <Geth> ¦ rakudo/main: - make several methods that change non-scalar attributes threadsafe

[10:27] <Geth> ¦ rakudo/main: - only compose once in the lifetime of the object

[10:27] <Geth> ¦ rakudo/main: - make sure the typecache only contains unique types, which should help

[10:27] <Geth> ¦ rakudo/main:   in memory usages, and runtime for failing nqp::istype checks

[10:27] <Geth> ¦ rakudo/main: 

[10:27] <Geth> ¦ rakudo/main: Also left some debugging code in there (but commented out), because iti

[10:27] <Geth> ¦ rakudo/main: produced some really weird results.

[10:27] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/72c491f89e

[10:54] <lizmat> greppable6: RoleToRoleApplier

[10:54] <greppable6> lizmat, Found nothing!

[10:54] <lizmat> greppable6: .role_to_role_applier_type

[10:54] <greppable6> lizmat, Found nothing!

[11:00] <releasable6> Next release in ≈3 days and ≈7 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[11:16] <Geth> ¦ rakudo/main: 2b6cfaa9b4 | (Elizabeth Mattijsen)++ | 2 files

[11:16] <Geth> ¦ rakudo/main: Don't bother to call applier if there are no roles

[11:16] <Geth> ¦ rakudo/main: 

[11:16] <Geth> ¦ rakudo/main: The applier logic also had a test for that, but since it is only

[11:16] <Geth> ¦ rakudo/main: being called in one location, it made more sense to move the check

[11:16] <Geth> ¦ rakudo/main: there.  Also, since no one is interested in the return value, don't

[11:16] <Geth> ¦ rakudo/main: bother to set anything.

[11:16] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2b6cfaa9b4

[11:18] *** |Tux| left
[11:28] *** |Tux| joined
[11:28] *** Tux__ joined
[11:28] *** Tux__ left
[12:18] *** MasterDuke left
[16:39] <lizmat> notable6: weekly

[16:39] <notable6> lizmat, No notes for “weekly”

[16:43] <nine> lizmat: no idea. It's been a long time since I have looked at that code. But I wonder why we composed twice in the first place. That doesn't sound healthy.

[16:44] <lizmat> well, it turned out that the compose method on a ConcreteRoleHOW is *not* called more than once

[16:45] <lizmat> but in some debugging output I saw the same role name pass by several times, and therefore assumed it was being called more than once

[16:45] <lizmat> but apparently the core has more than one ConcreteRoleHOW for "Callable" and "Iterator", apparently

[16:46] <lizmat> still looking into that

[17:13] <[Coke]> O_o;

[17:27] <nine> Ah, that explains it then. Without composing the order of things probably won't be fixed

[17:31] <lizmat> no, I think my change tickled an underlying issue

[17:31] <lizmat> it's gone back to failing 1/20 times or so

[17:38] *** patrickb_ joined
[17:40] *** djinni`_ joined
[17:46] *** djinni` left
[17:46] *** patrickb left
[17:46] *** patrickb_ is now known as patrickb

[18:24] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/03/25/2024-13-veyoring-again/

[18:32] *** Xliff joined
[18:32] <Xliff> Does raku limit reading from /proc in any way?

[18:34] <lizmat> I would be surprised

[18:43] <Xliff> #5534 updated. See last comment.

[18:52] <Xliff> .tell nine Can you read the last my last comment on #5534 and see if you have any ideas? Thanks.

[18:52] <tellable6> Xliff, I'll pass your message to nine

[18:53] *** Xliff left
[19:24] *** sena_kun joined
[20:02] <jdv> i think there's something breaking the Parameterizable module

[20:02] <jdv> i don't think i can bisect it easily cause it just chews through mem

[20:03] <jdv> (had to kill it while running blin cause it was about to kill my box)

[22:19] <jdv> lizmat: looks like its all yours... https://github.com/rakudo/rakudo/issues/5539

[22:40] <[Coke]> the raku.land links in that blin ticket are wrong. https://raku.land/?q=Parameterizable and https://raku.land/zef:dumarchie/Parameterizable work, but the link is https://modules.raku.org/dist/Parameterizable

[22:40] <[Coke]> probably a holdover from the switch to raku.land

[22:41] <lizmat> jdv: will look at them tomorrow

[22:45] <[Coke]> jdv++ lizmat++

[22:55] *** sena_kun left
[23:10] <jdv> thanks

[23:14] <jdv> can the auth from the meta6.json always be used to create that url?

[23:16] <jdv> looks like no

[23:16] <jdv> maybe fallback to ?q= form if can't

[23:18] <[Coke]> https://github.com/rakudo/rakudo/issues/4525 - can we close this? perf issue on old new-disp

