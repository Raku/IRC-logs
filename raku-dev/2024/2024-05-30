[01:45] <jdv> lizmat: thanks

[06:15] *** lizmat_ joined
[06:19] *** lizmat left
[07:12] <ab5tract> jdv: removed 'Return '' instead of 0 when a uniprop is not found' from Fixes because it was reverted

[07:45] *** finanalyst joined
[07:47] *** lizmat_ left
[07:47] *** lizmat joined
[07:47] <finanalyst> lizmat: I compiled latest rakudo last night and its producing AST for numdefn and table that I was hoping for. thank you.

[07:48] <lizmat> glad to hear!   :-)

[08:38] *** sena_kun joined
[08:39] *** finanalyst left
[10:36] *** raiph joined
[10:44] *** finanalyst joined
[12:07] *** finanalyst left
[12:35] *** finanalyst joined
[13:03] *** raiph left
[13:45] <jdv> ab5tract: thanks.  looks like i copied that to the ignore section with the revert but forgot the removing it from above:(

[13:45] <jdv> starting the releasings now

[13:51] <lizmat> ++jdv

[14:59] *** finanalyst left
[15:12] *** vrurg_ left
[15:24] *** vrurg joined
[15:36] <Geth> ¦ rakudo/release-2024.05: 87afa6400a | (Justin DeVuyst)++ | 3 files

[15:36] <Geth> ¦ rakudo/release-2024.05: Update changelog + announcement

[15:36] <Geth> ¦ rakudo/release-2024.05: 

[15:36] <Geth> ¦ rakudo/release-2024.05: Deliberately not logged:

[15:36] <Geth> ¦ rakudo/release-2024.05: 

[15:36] <Geth> ¦ rakudo/release-2024.05: [735fc4f3][aee3d259][05dcd081][741e6eaf][cdf127b1][f2a7e7d4]

[15:36] <Geth> ¦ rakudo/release-2024.05: [10ee220a][48ef5c3e][539e4d26][b2684c07][0b3d180d][35c6c21b]

[15:36] <Geth> ¦ rakudo/release-2024.05: [dc172ab5][2e05fe4d][5d6a7dfc][1fc67b1f][fa3c633d][cbc4f085]

[15:36] <Geth> ¦ rakudo/release-2024.05: [1ace350e][c021e688]

[15:36] <Geth> ¦ rakudo/release-2024.05: review: https://github.com/rakudo/rakudo/commit/87afa6400a

[16:44] *** finanalyst joined
[17:16] <ab5tract> I always love it when I'm in the middle of writing out an explanation of behavior, then run the test case I'm going to use to demonstrate the behavior, only to subsequently discover that the output of the test case is the opposite of the behavior I expected :)

[17:17] <ab5tract> m: ({ say "this runs?" })()

[17:17] <camelia> rakudo-moar 851aa4903: OUTPUT: «this runs?␤»

[17:18] <ab5tract> this is while writing an explanation about why `... where (* ~~ "this checks?")` doesn't check

[17:19] <ab5tract> maybe I'm just missing a layer of parens..

[17:20] <ab5tract> m: ((*.say))("this says") # looks like that's not the case

[17:20] <camelia> rakudo-moar 851aa4903: OUTPUT: «this says␤»

[17:56] <jdv> ab5tract: so what is the 6.c-errata change for your usage change?

[18:00] <jdv> actually both c and d errata have failures cause of the main/usage changes

[18:02] <ab5tract> ?

[18:03] <jdv> roast - there are 2 branches 6.c-errata and 6.d-errata that need to pass before a release

[18:03] <jdv> they are both broken because of the main stuff and i'm having a hard time figuring it out

[18:04] <ab5tract> Why would we run branches for old versions against changes that fix the broken parts of those versions?

[18:04] <ab5tract> I guess I was supposed to wrap the fixes in some 6.e guards?

[18:05] <ab5tract> Let me give it a shot locally so I cane be more helpful

[18:06] <jdv> the test files have "use v6.c".  i'm not entirely sure about the whole versioning thing. i'm not sure anyone is.

[18:06] <jdv> lizmat: got any ideas here?

[18:06] <lizmat> actually, not right now... have every confidence ab5tract will be able to help

[18:15] <jdv> as i understand it the roast branch 6.c should run clean when that branch was cut and 6.c-errata should run clean anytime after that when using v6.c

[18:17] <ab5tract> I see the issue.

[18:17] <ab5tract> or at least, I think I do..

[18:18] <ab5tract> it's `t/spec/S06-other/main-usage.t` that is failing, right?

[18:19] <jdv> looks like in c yes

[18:20] <jdv> in d i had another issue but i think main-usage, main, and main-refactored maybe failed

[18:21] <ab5tract> jesus

[18:21] <jdv> trying to pick stuff off... its probably the most annoying part of releasing.  meh.

[18:24] <jdv> running d now - maybe i'll get a clearer picture in a few minutes

[18:25] <ab5tract> yeah, I can imagine...

[18:26] <ab5tract> next time a blin issue is raised, I'll try to manually run against these branches to be less surprised .. while packing for vacation :_)

[18:30] <jdv> https://gist.github.com/jdv/63cd582222437b4665706339c9690486

[18:33] <jdv> normally i'd just cherry pick and fix it up but i'm not sure what your change is about esp wrt lang versions so i thought i'd ask if you were around to expedite it

[18:35] <ab5tract> well, it's certainly not an urgent set of fixes.. but they are indeed fixes..

[18:37] <ab5tract> one changes the return code from 0 to 2 when USAGE is called

[18:39] <ab5tract> the other makes enums that (unwisely, perhaps) overshadow CORE types to work

[18:41] <Geth> ¦ roast/6.c-errata: f76c917a30 | (Justin DeVuyst)++ | S02-types/int-uint.t

[18:41] <Geth> ¦ roast/6.c-errata: Untodo some passing todos

[18:41] <Geth> ¦ roast/6.c-errata: review: https://github.com/Raku/roast/commit/f76c917a30

[18:42] <jdv> the other passing todo in c and d is a flapper which is more fun than i'm touching

[18:42] <ab5tract> go ahead and revert the main stuff, it's more than I have the headspace for at the moment

[18:43] <jdv> nah, its not that bad:)  i'll try to butcher roast well enough.

[18:43] <jdv> thanks for the try.

[18:50] <Geth> ¦ roast/6.c-errata: ad49a14d47 | (Justin DeVuyst)++ | S06-other/main-usage.t

[18:50] <Geth> ¦ roast/6.c-errata: Adjust to "return 2 when USAGE is called"

[18:50] <Geth> ¦ roast/6.c-errata: review: https://github.com/Raku/roast/commit/ad49a14d47

[19:20] <ugexe> that is_run seems to be quite a bit behind the is-run in rakudo. the former tests status whereas the later tests exitcode

[19:25] <Geth> ¦ roast/6.d-errata: 59e05b2048 | (Justin DeVuyst)++ | 3 files

[19:25] <Geth> ¦ roast/6.d-errata: Adjust to "return 2 when USAGE is called"

[19:25] <Geth> ¦ roast/6.d-errata: review: https://github.com/Raku/roast/commit/59e05b2048

[19:26] *** raiph joined
[19:38] <jdv> ab5tract: all "fixed up"

[19:39] <ab5tract> cheers!

[19:39] <lizmat> jdv++ ab5tract++

[19:39] <lizmat> .oO( a holiday well earned! )

[19:39] <ab5tract> like I said earlier, I'll try to get in front of this a bit ahead of time next go round

[19:41] <jdv> holiday sounds good

[19:49] <jdv> lizmat: there's a flapping todo test in at least 6.c-errata and 6.d-errata (not sure about master) and there's a test that stalls out in 6.d-errata but that only seems to happen when test test suite is run with a higher TEST_JOBS.  should i file a bug on rakudo or on roast or something else?

[19:51] <lizmat> yeah, data points are always good

[19:52] <lizmat> on rakudo I'dsay

[19:52] <jdv> ok

[19:59] <Geth> ¦ nqp/main: 60229df932 | (Justin DeVuyst)++ | tools/templates/MOAR_REVISION

[19:59] <Geth> ¦ nqp/main: [release] Bump MoarVM revision to 2024.05

[19:59] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/60229df932

[19:59] <Geth> ¦ nqp/main: a534e01409 | (Justin DeVuyst)++ | VERSION

[19:59] <Geth> ¦ nqp/main: [release] Bump VERSION to 2024.05

[19:59] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/a534e01409

[19:59] <Geth> ¦ rakudo/release-2024.05: ec3d5a5559 | (Justin DeVuyst)++ | tools/templates/NQP_REVISION

[19:59] <Geth> ¦ rakudo/release-2024.05: [release] Bump NQP revision to 2024.05

[20:00] <Geth> ¦ rakudo/release-2024.05: review: https://github.com/rakudo/rakudo/commit/ec3d5a5559

[20:00] <Geth> ¦ rakudo/release-2024.05: 509335d828 | (Justin DeVuyst)++ | VERSION

[20:00] <Geth> ¦ rakudo/release-2024.05: [release] Bump VERSION to 2024.05

[20:00] <Geth> ¦ rakudo/release-2024.05: review: https://github.com/rakudo/rakudo/commit/509335d828

[20:03] <Geth> ¦ rakudo: jdv++ created pull request #5585: Release 2024.05

[20:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5585

[20:04] <Geth> ¦ rakudo/main: 4 commits pushed by (Justin DeVuyst)++

[20:04] <Geth> ¦ rakudo/main: 87afa6400a | Update changelog + announcement

[20:04] <Geth> ¦ rakudo/main: ec3d5a5559 | [release] Bump NQP revision to 2024.05

[20:04] <Geth> ¦ rakudo/main: 509335d828 | [release] Bump VERSION to 2024.05

[20:04] <Geth> ¦ rakudo/main: 33d0feaf8b | Merge pull request #5585 from rakudo/release-2024.05

[20:04] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/851aa49030b3...33d0feaf8bb4

[20:04] <lizmat> whee!   jdv++

[20:30] <jdv> patrickb: the may release happened

[20:30] <jdv> .tell El_Che the may release happened

[20:30] <tellable6> jdv, I'll pass your message to El_Che

[20:31] <jdv> all done.  have fun.  later:)

[21:02] *** finanalyst left
[21:41] <ab5tract> jdv: sorry to bother you again, but is there an intermediate step required for the release to become available via the URLs in these pipelines? https://github.com/Raku/docker/pull/66

[22:02] <jdv> i think that depends on rakudo star, right?

[22:03] <jdv> that's someone else.  i'm just the root of the release tree so to speak

[22:03] <jdv> patrickb and El_Che do some and there are others that do others

[22:04] <jdv> anyone else remember who does rakudo star releases?

[22:05] <jdv> ab5tract: ^

[22:07] <ab5tract> ah, that makes (some) sense. I saw some connection to Rakudo Star but I assumed `Raku/docker` only depended on Raku releases

[22:07] <jdv> it might be antonoks

[22:07] <jdv> yeah, its a decentralized fun time

[22:07] <jdv> well, kinda

[22:08] <ab5tract> does the Rakudo release automatically update links and whatnot at rakudo.org?

[22:08] <jdv> the source releases are all updated by me

[22:08] <jdv> so github, rakudo.org, and moarvm.org

[22:08] <ab5tract> got it

[22:17] <Geth> ¦ rakudo/main: 3f804996d9 | ab5tract++ | t/12-rakuast/xx-fixed-in-rakuast.rakutest

[22:17] <Geth> ¦ rakudo/main: RakuAST: Add test case for stubbed packages defined withn parent package scope

[22:17] <Geth> ¦ rakudo/main: 

[22:17] <Geth> ¦ rakudo/main: This resolves R#4925 (#4925)

[22:17] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3f804996d9

[22:17] <linkable6> R#4925 [open]: https://github.com/rakudo/rakudo/issues/4925 [Fixed in RakuAST] "Conflicted" namespaced stubs inside a class don't resolve

[22:17] <Geth> ¦ rakudo/main: 9c53c92e79 | ab5tract++ | t/12-rakuast/xx-fixed-in-rakuast.rakutest

[22:17] <Geth> ¦ rakudo/main: RakuAST: Fix plan

[22:17] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/9c53c92e79

[22:23] *** sena_kun left
[22:47] <Geth> ¦ rakudo/coke/release-announce: 8b6d293615 | (Will Coleda)++ | tools/create-release-announcement.raku

[22:47] <Geth> ¦ rakudo/coke/release-announce: Use inclusive TPF alias.

[22:47] <Geth> ¦ rakudo/coke/release-announce: review: https://github.com/rakudo/rakudo/commit/8b6d293615

[22:48] <Geth> ¦ rakudo: coke++ created pull request #5586: Use inclusive TPF alias.

[22:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5586

[23:01] <Geth> ¦ rakudo/main: 271f83204b | (Will Coleda)++ (committed by ab5tract) | tools/create-release-announcement.raku

[23:01] <Geth> ¦ rakudo/main: Use inclusive TPF alias.

[23:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/271f83204b

