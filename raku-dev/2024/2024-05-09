[07:27] *** finanalyst joined
[08:14] *** finanalyst left
[08:24] *** sena_kun joined
[09:56] *** finanalyst joined
[10:39] *** Xliff_ joined
[10:39] <Xliff_> Raku-GLib suite timing statistics for Raku 2024.04.73.g.335.a.0.b.0.ce

[10:39] <Xliff_> Using the following processor: 13th Gen Intel(R) Core(TM) i9-13900K

[10:39] <Xliff_> Total number of projects: 34 (479771 loc)

[10:39] <Xliff_> Total non-parallel compile times: 6642.630 (195.371 avg)

[10:39] <Xliff_> Total parallel compile times: 1150.877 (33.849 avg) 5.772x speedup

[10:40] <Xliff_> lizmat: A full 500 second improvement on the non-parallel times, thanks!

[10:42] <lizmat> Nice!

[10:48] <lizmat> Xliff_: did you ever find out what caused the readings at https://irclogs.raku.org/raku-dev/2023-12-26.html#04:45-0004 ?

[10:50] <Xliff_> Nope. I have no clue why parallel times are still as high as they are. It might have something to do with file locking.

[10:51] <lizmat> so 9% improvement on non-parallel, and 1.7% on parallel

[10:52] <Xliff_> Thereabouts.

[10:53] <Xliff_> Getting the non-parallel under 7000 is still a hell of an achievement. Thank you!

[11:00] <lizmat> you're very much welcome!

[12:32] *** finanalyst left
[12:44] <Xliff_> lizmat: FYI -- DBDish::mysql needs a "use NativeCall" after your latest changes.

[12:45] *** finanalyst joined
[14:15] *** finanalyst left
[14:49] *** vrurg_ joined
[14:51] *** vrurg left
[16:44] <lizmat> Xliff_: interesting...   I thought I fixed that later on again?

[17:04] <Xliff_> Yeah. Tried to update from upstream and it said I was up to date. That was prior to my change.

[17:05] <lizmat> hmmm

[17:08] <lizmat> hmmm perhaps my fix did not fix NativeLibs after all

[17:08] <lizmat> Xliff_: what is the error ?

[17:09] <Xliff_> It can't find "Pointer"

[17:24] <lizmat> ok. where did you add the "use NativeCall" to get around it?

[17:24] <lizmat> could you turn that into a PR ?

[18:15] <nine> Geth down?

[18:16] <nine> Anyway, we're at 1036

[18:16] <lizmat> Geth is up

[18:18] *** Geth left
[18:18] *** Geth joined
[18:18] <Geth> ¦ rakudo/rakuast-phase-cleanup: 29 commits pushed by (Jonathan Worthington)++, (Stefan Seifert)++

[18:18] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/compare/7821a60d71bf...797dbc29c38a

[18:19] <lizmat> not sure what was going on, Geth seemed healthy on this end

[18:19] <lizmat> nine: ^^ that what you expected ?

[18:30] <nine> yes

[18:36] <Geth> ¦ rakudo/main: 35c6c21bc0 | (Elizabeth Mattijsen)++ | src/core.c/Dateish.rakumod

[18:36] <Geth> ¦ rakudo/main: Allow sep => ":" as arg in .yyyy-mm-dd and friends

[18:36] <Geth> ¦ rakudo/main: 

[18:36] <Geth> ¦ rakudo/main: As discussed in https://github.com/Raku/problem-solving/issues/419

[18:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/35c6c21bc0

[18:43] <nine> lizmat: please let's not go there. We now have code that it less readable and less maintainable nqp stuff in the name of performance just to tank that same performance by mapping this named argument to the positional.

[18:43] <nine> And that just because one user refuses to accept that nameds and positionals are very different things.

[18:44] <Geth> ¦ rakudo/main: dc172ab5e0 | (Elizabeth Mattijsen)++ | src/core.c/Dateish.rakumod

[18:44] <Geth> ¦ rakudo/main: Revert "Allow sep => ":" as arg in .yyyy-mm-dd and friends"

[18:44] <Geth> ¦ rakudo/main: 

[18:44] <Geth> ¦ rakudo/main: This reverts commit 35c6c21bc0b77f5f267b73fe9bfa1525b516918b.

[18:44] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/dc172ab5e0

[18:46] <lizmat> afk&

[19:49] <Xliff_> lizmat: Yes, I can turn it into a PR.

[20:03] <nine> Xliff_: I'm curious. How did it break?

[20:07] <Xliff_> No definition for "Pointer" in DBD::mysql

[20:07] <ugexe> https://github.com/raku-community-modules/DBIish/blob/a8b4676c3efb005e207397dfa08b445cde2e6f71/lib/DBDish/mysql.rakumod#L59

[20:08] <ugexe> it seems correct to add `use NativeCall;`, but how it worked before doesn't immediately make sense to me

[20:08] <Xliff_> Sometimes definitions leak without the need for a use statement if used in an already loaded compunit.

[20:08] <Xliff_> That's from my experience with my GLib stuff.

[20:09] <Xliff_> Reorganizing the compunits or a raku upgrade can suddenly unmask the need for a "use" statement when there was no need before.

[20:10] <Xliff_> My attempts to golf the issue yielded no root cause.

[20:12] <nine> Well the stash hierarchy is global

[20:12] <nine> But I don't see how a top-level name like Pointer could escape

[20:15] <Geth> ¦ DBIish/main: c078719f70 | (Clifton Wood)++ | lib/DBDish/mysql.rakumod

[20:15] <Geth> ¦ DBIish/main: - Fixes issue where DBD::mysql could not find the definition of the

[20:15] <Geth> ¦ DBIish/main: 

[20:15] <Geth> ¦ DBIish/main: "Pointer" type

[20:15] <Geth> ¦ DBIish/main: review: https://github.com/raku-community-modules/DBIish/commit/c078719f70

[20:17] <Xliff_> Well, there is the fix.

[20:17] <Xliff_> For some reason I could only Sync, it would not let me PR.

[20:55] *** Xliff_ left
[22:49] *** djinni` left
[23:13] *** djinni` joined
[23:24] *** sena_kun left
[23:55] *** Xliff_ joined
[23:58] <Xliff_> This used to work...

[23:58] <Xliff_> m: my $a = "(b)"; my $b = $a.encode; $b.^name.say; use NativeCall; my $ca = CArray[uint8].new($b)

[23:58] <camelia> rakudo-moar dc172ab5e: OUTPUT: «utf8␤This representation (VMArray) does not support attribute storage (for type utf8)␤  in method new at /home/camelia/rakudo-m-inst-1/share/perl6/core/sources/8A1789A97523B057340ADD4E705DFDA1F6CD45A7 (NativeCall::Types) line 410␤  in block <uni…»

[23:58] <Xliff_> This is done -all throughout- my code, over several projects where I can offer a variety of ways to convert Str to something usable by C

[23:58] <Xliff_> This is a HUGE deal. Someone please respond.

