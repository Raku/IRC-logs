[00:50] *** MasterDuke joined
[05:25] *** [Coke]_ joined
[05:27] *** [Coke] left
[06:19] *** Voldenet left
[06:20] *** Voldenet joined
[07:32] *** sena_kun joined
[08:00] *** sena_kun left
[08:52] <[Tux]> Rakudo v2024.06-48-g3766ef2d4 (v6.d) on MoarVM 2024.06-14-gab56007b4

[08:52] <[Tux]> csv-test-xs-20      0.142 -  0.144

[08:52] <[Tux]> csv-ip5xs           0.260 -  0.265

[08:52] <[Tux]> test-t --race       0.272 -  0.272

[08:52] <[Tux]> test-t              0.409 -  0.414

[08:52] <[Tux]> csv-ip5xs-20        1.124 -  1.131

[08:52] <[Tux]> test-t-20 --race    1.247 -  1.265

[08:52] <[Tux]> csv-parser          1.504 -  1.543

[08:52] <[Tux]> test                1.849 -  1.902

[08:52] <[Tux]> test-t-20           4.878 -  4.913

[08:52] <[Tux]> https://tux.nl/Talks/CSV6/speed4-20.html / https://tux.nl/Talks/CSV6/speed4.html https://tux.nl/Talks/CSV6/speed.log

[08:52] <[Tux]> That is pretty neat, isn't it?

[08:53] <[Tux]>  5 2024-04-18 10:08:44 test-t 0.416

[08:53] <[Tux]>  4 2024-07-16 10:51:43 test-t 0.414

[08:53] <[Tux]>  3 2024-07-16 10:50:50 test-t 0.409

[08:53] <[Tux]>  2 2024-07-10 09:44:21 test-t 0.407

[08:53] <[Tux]>  1 2024-07-10 09:43:29 test-t 0.407

[08:53] <[Tux]> 20240418 0.416❙20240716 0.414❙20240716 0.409❙20240710 0.407❙20240710 0.407❙

[12:14] <lizmat> so RakuAST already has support for $.foo

[12:14] <lizmat> but it codegens that directly to:   self.foo.item

[12:14] <lizmat> which looks really bad in .raku and deparsing

[12:15] <lizmat> so I thought I'd create a wrapper class RakuAST::Var::Attribute::Public

[12:15] <lizmat> which would store the name and create the AST to do self.foo.item

[12:16] <lizmat> and then convert to QAST just for the self.foo.item logic

[12:16] <lizmat> https://gist.github.com/lizmat/e6723770d2d7d880ae7497630c952ca4

[12:16] <lizmat> .raku and deparsing are ok, but running the code fails with:

[12:17] <lizmat> This element has not been resolved. Type: RakuAST::Term::Self

[12:17] <lizmat> nine ab5tract what am I missing ?

[12:50] *** vrurg left
[12:50] *** vrurg joined
[12:55] *** vrurg left
[13:00] *** vrurg joined
[13:00] *** vrurg left
[13:01] *** vrurg joined
[13:07] <nine> missing visit-children

[13:07] *** vrurg left
[13:08] *** vrurg joined
[13:09] <nine> But is this really a good idea in the first place? On the one hand it does retain some more information in the AST which seems to be useful for deparse. On the other hand every other consumer of the AST will also need to know what this is and deal with it accordingly.

[13:09] <lizmat>     method visit-children(Code $visitor) {

[13:09] <lizmat>         $visitor($!expression);

[13:09] <lizmat>     }

[13:09] <lizmat> ??

[13:09] <nine> yep

[13:10] <lizmat> tried that before...lemme try that again

[13:11] <lizmat> fwiw, not only deparsing, but making it simpler for ad-hoc tree building

[13:12] <lizmat> *and* the potential to QAST a direct attribute access if the accessor is generated locally

[13:12] <lizmat> "Cannot find method 'visit-children' on object of type BOOTStr"

[13:12] <lizmat> that error confused the heck out of me

[13:16] <nine> Btw. i don't see the need for the PERFORM-CHECK method

[13:17] <lizmat> https://gist.github.com/lizmat/887e739c43dd5f0a3c9599a9699e9d83

[13:17] <lizmat> so also no CheckTime ?

[13:17] <nine> yep

[13:18] <nine> line 80 of your diff

[13:19] <lizmat> yes?

[13:19] <lizmat> aaah....  ok

[13:19] <nine> needs to be a RakuAST::Name

[13:19] <lizmat> gotcha  

[13:19] <nine> In hindsight I should have pushed through the change to the RakuAST compiler that would add actual type checks for arguments. Would make debugging this kind of issue so much easier.

[13:20] <nine> But it'd require us to be stricter with regards to NQP vs. Raku types

[13:20] *** [Coke] joined
[13:22] <lizmat> *phew* I knew it had to be something simple

[13:22] *** [Coke]_ left
[13:25] <lizmat> nine++

[14:03] <Geth> ¦ rakudo/main: 527b9788d9 | (Elizabeth Mattijsen)++ | 5 files

[14:03] <Geth> ¦ rakudo/main: RakuAST: introduce ::Var::Attribute::Public

[14:03] <Geth> ¦ rakudo/main: 

[14:03] <Geth> ¦ rakudo/main: The syntax "$.foo" is generally thought of as accessing that attribute

[14:03] <Geth> ¦ rakudo/main: in a class, but it is really just "self.foo.item" and was as such

[14:03] <Geth> ¦ rakudo/main: codegenned in the Actions.

[14:03] <Geth> ¦ rakudo/main: 

[14:03] <Geth> ¦ rakudo/main: This has the disadvantage it not being able to be deparsed easily.

[14:03] <Geth> ¦ rakudo/main: <…commit message has 10 more lines…>

[14:03] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/527b9788d9

[14:04] <lizmat> it needed a few more tweaks, but there it is  :-)

[14:10] <Geth> ¦ rakudo/main: 3ab6c96b8d | (Elizabeth Mattijsen)++ | lib/RakuAST/Deparse/Highlight.rakumod

[14:10] <Geth> ¦ rakudo/main: RakuAST: more things disallowed in safe mode highlighting

[14:10] <Geth> ¦ rakudo/main: 

[14:10] <Geth> ¦ rakudo/main: - use nqp;

[14:10] <Geth> ¦ rakudo/main: - use MONKEY

[14:10] <Geth> ¦ rakudo/main: - use MONKEY-GUTS

[14:10] <Geth> ¦ rakudo/main: 

[14:10] <Geth> ¦ rakudo/main: Previously all pragmas were allowed.

[14:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3ab6c96b8d

[15:08] <Geth> ¦ rakudo/main: 509ee1b609 | (Elizabeth Mattijsen)++ | src/Raku/ast/type.rakumod

[15:08] <Geth> ¦ rakudo/main: RakuAST: ::Type::Definedness.name method for convenience

[15:08] <Geth> ¦ rakudo/main: 

[15:08] <Geth> ¦ rakudo/main: So that we don't need to check whether a type is wrapped in a :D

[15:08] <Geth> ¦ rakudo/main: or :U type smiley to get its ::Name object

[15:08] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/509ee1b609

[15:10] <Geth> ¦ rakudo/main: 8a1380383f | (Elizabeth Mattijsen)++ | 3 files

[15:10] <Geth> ¦ rakudo/main: RakuAST: properly check for pragmas in highlighting

[15:10] <Geth> ¦ rakudo/main: 

[15:10] <Geth> ¦ rakudo/main: Also default the color of pragmas to "green" as they are really

[15:10] <Geth> ¦ rakudo/main: something system dependent, just a types.  This should set them

[15:10] <Geth> ¦ rakudo/main: apart from actual module loading "use" statements.

[15:10] <Geth> ¦ rakudo/main: 

[15:10] <Geth> ¦ rakudo/main: Add and adapt tests accordingly

[15:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/8a1380383f

[15:14] *** MasterDuke left
[17:15] *** [Coke] left
[17:15] *** [Coke] joined
[18:05] *** vrurg left
[18:05] *** vrurg joined
[18:08] *** sena_kun joined
[19:17] *** finanalyst joined
[20:00] *** JRaspass left
[20:00] *** JRaspass joined
[21:53] *** [Coke] left
[21:56] *** [Coke] joined
[22:06] *** sena_kun left
[22:52] *** finanalyst left
[23:06] *** camelia left
[23:10] *** MasterDuke joined
[23:31] *** sjn left
[23:31] *** sjn joined
