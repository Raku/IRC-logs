[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:30] *** MasterDuke joined
[00:40] <MasterDuke> ab5tract++, nice find/fix

[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:16] *** kjp left
[06:18] *** kjp joined
[07:50] <Geth> ¦ rakudo/main: 541a9c7db3 | (Stefan Seifert)++ | src/Raku/ast/resolver.rakumod

[07:50] <Geth> ¦ rakudo/main: RakuAST: Report filename for unknown symbol exceptions

[07:50] <Geth> ¦ rakudo/main: 

[07:50] <Geth> ¦ rakudo/main: This also fixes warnings when creating the exception message.

[07:50] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/541a9c7db3

[07:50] <Geth> ¦ rakudo/main: c9c2197d9b | (Stefan Seifert)++ | src/Raku/ast/resolver.rakumod

[07:50] <Geth> ¦ rakudo/main: RakuAST: bring back suggestions for unknown routines

[07:50] <Geth> ¦ rakudo/main: 

[07:51] <Geth> ¦ rakudo/main: This also fixes warnings when creating the exception message.

[07:51] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c9c2197d9b

[07:54] *** sena_kun joined
[08:20] <Geth> ¦ rakudo/main: d7ded45937 | (Stefan Seifert)++ | src/Raku/Actions.nqp

[08:20] <Geth> ¦ rakudo/main: RakuAST: don't include colonpairs in method names for calls

[08:20] <Geth> ¦ rakudo/main: 

[08:20] <Geth> ¦ rakudo/main: Apparently colonpairs on method names should be ignored, e.g.  [].grep:Str

[08:20] <Geth> ¦ rakudo/main: should just call .grep. However there are only two tests in repl.t that

[08:20] <Geth> ¦ rakudo/main: require this and the call will still fail, so we may want to re-visit

[08:20] <Geth> ¦ rakudo/main: this later.

[08:20] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d7ded45937

[08:21] <Geth> ¦ rakudo/main: 76f0278c0a | (Stefan Seifert)++ | t/02-rakudo/repl.t

[08:21] <Geth> ¦ rakudo/main: RakuAST: Un-todo a passing test in repl.t when running with RAKUDO_RAKUAST set

[08:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/76f0278c0a

[08:25] <Geth> ¦ rakudo/main: 34cb94e072 | (Stefan Seifert)++ | t/05-messages/01-errors.t

[08:25] <Geth> ¦ rakudo/main: Remove unintended m: prefix from a test case

[08:25] <Geth> ¦ rakudo/main: 

[08:25] <Geth> ¦ rakudo/main: Looks like this test was copied from an IRC message and the m: prefix

[08:25] <Geth> ¦ rakudo/main: for the eval-bot was kept.

[08:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/34cb94e072

[10:13] *** sena_kun left
[10:14] *** sena_kun joined
[11:00] <releasable6_> Next release in ≈3 days and ≈7 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[11:00] <releasable6> Next release in ≈3 days and ≈7 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:07] *** MasterDuke left
[12:25] <nine> Many of the t/05-messages/*-errors.t failures look quite straight forward to fix. It's often just about throwing a more targeted exception.

[13:18] *** nine left
[13:19] *** nine joined
[13:52] <[Coke]> (release) Did we ever figure out why the Red failure didn't show up in blin?

[13:53] <[Coke]> We should probably at least ping the red developer to test it manually while blin is going on.

[13:57] <SmokeMachine> I would test if that happens... I'm planning on trying to run my github actions daily with main rakudo... but I'm not sure on how doing that an didn't have time to start investigating thayet

[14:50] <ab5tract> SmokeMachine: you might find some inspiration from the GTK-Simple repo

[14:52] <SmokeMachine> ab5tract: thaks, I'll take a look

[16:21] <jdv> I thought it was AttrX::Mooish that we don't know why blin didn't hit it?

[16:27] <Geth> ¦ rakudo/main: 326dc12b12 | (Stefan Seifert)++ | src/Raku/ast/signature.rakumod

[16:27] <Geth> ¦ rakudo/main: RakuAST: fix concrete values slipping into Parameter's $!type attribute

[16:27] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/326dc12b12

[16:27] <Geth> ¦ rakudo/main: dbe698c4c3 | (Stefan Seifert)++ | src/Raku/ast/signature.rakumod

[16:27] <Geth> ¦ rakudo/main: RakuAST: add post-constraints for type-like parameter values

[16:28] <Geth> ¦ rakudo/main: 

[16:28] <Geth> ¦ rakudo/main: In `sub foo(LittleEndian) {...}` LittleEndian looks like a type and

[16:28] <Geth> ¦ rakudo/main: parses as one but it's actually a value that the parameter must match.

[16:28] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/dbe698c4c3

[16:28] <Geth> ¦ rakudo/main: abc1a5f512 | (Stefan Seifert)++ | src/Raku/ast/signature.rakumod

[16:28] <Geth> ¦ rakudo/main: RakuAST: ensure we check type-like values for parameters

[16:28] <Geth> ¦ rakudo/main: 

[16:28] <Geth> ¦ rakudo/main: In `sub foo(LittleEndian) {...}` LittleEndian looks like a type and

[16:28] <Geth> ¦ rakudo/main: parses as one but it's actually a value that the parameter must match.

[16:28] <Geth> ¦ rakudo/main: Generate the ParamTypeCheck for calling ACCEPTS on that value.

[16:28] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/abc1a5f512

[16:28] <nine> 1055

[16:28] <[Coke]> jdv: oh, is that a Red dep?

[16:30] <jdv> got me.  i only heard about that one though.  not Red.

[16:30] <jdv> i'll try both in a bit

[16:39] <SmokeMachine> No, Red is not related to Attraction::Mooish… but I suppose both play with Metamodel…

[16:56] <jdv> what would that even be?

[16:58] <SmokeMachine> jdv: https://docs.raku.org/type/Metamodel/ClassHOW

[16:59] <jdv> i meant "Attraction::Mooish"

[17:03] <jdv> Attraction::Mooish tests out fine on head

[17:03] <jdv> gah, "AttrX::Mooish" i meant

[17:04] <jdv> how does one fix this type of issue again?:  "===> Failed to find dependencies: pq:ver<5>:from<native>"

[17:04] <ab5tract> lol

[17:04] <jdv> is that another name for libpq-dev or whatever?

[17:05] <jdv> that's what "zef install Red" ends with for me at the moment

[17:06] <SmokeMachine> (attraction was a wrong autocomplete)

[17:08] <SmokeMachine> Red is also passing on head... the problem is with the 2 last released vwersons

[17:08] <ab5tract> jdv: I

[17:08] <ab5tract> I think that’s a missing native lib error

[17:09] <SmokeMachine> (sorry, I'm still getting used to my new keyboard...

[17:11] <SmokeMachine> that's an error on a dependency of DBIish (if I remember it correctly) that's a Red dependency...

[17:12] <jdv> hmm, maybe that's what tripped up blin...

[17:19] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/04/22/2024-17-abaacab-xabddcabaacab/

[17:25] *** nativecallable6_ left
[17:25] *** quotable6_ left
[17:25] *** linkable6_ left
[17:25] *** statisfiable6 left
[17:25] *** releasable6_ left
[17:25] *** sourceable6_ left
[17:25] *** coverable6_ left
[17:25] *** evalable6_ left
[17:25] *** bisectable6_ left
[17:25] *** benchable6_ left
[17:25] *** unicodable6_ left
[17:25] *** tellable6_ left
[17:25] *** squashable6 left
[17:25] *** shareable6_ left
[17:25] *** committable6_ left
[17:25] *** greppable6_ left
[17:25] *** bloatable6_ left
[17:25] *** notable6_ left
[17:25] *** reportable6 left
[17:26] *** evalable6_ joined
[17:26] *** bisectable6_ joined
[17:26] *** unicodable6_ joined
[17:26] *** statisfiable6 joined
[17:26] *** squashable6 joined
[17:27] *** coverable6_ joined
[17:27] *** tellable6_ joined
[17:27] *** shareable6_ joined
[17:27] *** sourceable6_ joined
[17:27] *** bloatable6_ joined
[17:27] *** committable6_ joined
[17:27] *** reportable6 joined
[17:27] *** quotable6_ joined
[17:27] *** benchable6_ joined
[17:28] *** nativecallable6_ joined
[17:28] *** greppable6_ joined
[17:28] *** linkable6_ joined
[17:28] *** notable6_ joined
[17:29] *** releasable6_ joined
[17:32] <ab5tract> lizmat++

[17:44] <jdv> and Red tests out fine on head

[17:45] <lizmat> *phew*

[17:47] <[Coke]> jdv++

[17:54] *** finanalyst_ left
[17:54] *** finanalyst left
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:51] *** kjp left
[18:52] <ab5tract> deciding to take poke at R#5486

[18:52] <linkable6> R#5486 [open]: https://github.com/rakudo/rakudo/issues/5486 [Unicode] Test for Unicode `General_Category` does not work with `L`

[18:52] *** finanalyst joined
[18:52] *** finanalyst_ joined
[18:53] *** linkable6_ left
[18:54] *** linkable6_ joined
[18:54] <ab5tract> A bit unnerving that the only difference in QAST seems totally reasonable: https://gist.github.com/ab5tract/c6b7eea8e6c8bb961953a4eb45e3266c

[18:55] <ab5tract> (this is in the RakuAST branch, as I was hoping for it to be easier to chase down there)

[19:15] <ab5tract> also: looking for feedback on potentially adding this `dump_reg` method to QASTCompilerMAST.nqp -- https://gist.github.com/ab5tract/c6b7eea8e6c8bb961953a4eb45e3266c#file-2-dump_reg-proposal

[20:57] *** linkable6_ left
[21:00] *** linkable6_ joined
[21:24] *** sena_kun left
[21:36] *** finanalyst_ left
[21:36] *** finanalyst left
[21:52] *** sena_kun joined
[22:36] <ab5tract> m: { "Ll" }.ACCEPTS(Nil).say. # kind of weird

[22:36] <camelia> rakudo-moar abc1a5f51: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unsupported use of .  to concatenate strings.  In Raku please use: ~.␤at <tmp>:1␤------> "Ll" }.ACCEPTS(Nil).say. # kind of weird⏏<EOL>␤»

[22:37] <ab5tract> m: ({ "Ll" }).ACCEPTS(Nil).say. # kind of weird

[22:37] <camelia> rakudo-moar abc1a5f51: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unsupported use of .  to concatenate strings.  In Raku please use: ~.␤at <tmp>:1␤------> Ll" }).ACCEPTS(Nil).say. # kind of weird⏏<EOL>␤»

[22:37] <ab5tract> oops, duh..

[22:37] <ab5tract> m: { "Ll" }.ACCEPTS(Nil).say # kind of weird

[22:37] <camelia> rakudo-moar abc1a5f51: OUTPUT: «Ll␤»

[22:39] *** guifa joined
[23:12] *** MasterDuke joined
[23:40] *** sena_kun left
