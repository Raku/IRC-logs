[00:46] <timo> is just three digits for the FD enough?

[01:08] <ugexe> 3 levels of ternary ðŸ˜¬

[01:10] <ugexe> 4

[04:53] <patrickb> quick googling gives I'd need 5 digits

[05:14] <patrickb> I have tests failing on x86 macos with MoarVM panic: Internal error: zeroed target thread ID in work pass t/02-rakudo/12-proto-arity-count.t

[05:15] <patrickb> MoarVM panic: Internal error: zeroed target thread ID in work pass t/02-rakudo/12-proto-arity-count.t

[05:15] <patrickb> that blocks the precomp release.

[05:37] <timo> please try with a moar built with --asan

[05:37] <timo> check the --help of Configure.pl for the additional env var you need to set

[06:51] <patrickb> I don't have a Mac. That's on Azure

[09:06] *** finanalyst joined
[10:05] *** finanalyst left
[10:22] <Geth> Â¦ nqp/main: 5bf8ae18ea | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[10:22] <Geth> Â¦ nqp/main: Bump MoarVM for libuv bump, dogbert++

[10:22] <Geth> Â¦ nqp/main: review: https://github.com/Raku/nqp/commit/5bf8ae18ea

[10:35] <Geth> Â¦ rakudo/main: a0626a20c7 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[10:35] <Geth> Â¦ rakudo/main: Bump NQP for libuv bump on MoarVM, dogbert++

[10:35] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a0626a20c7

[10:39] <Geth> Â¦ rakudo/main: 83fc678835 | (Elizabeth Mattijsen)++ | t/12-rakuast/xx-fixed-in-rakuast.rakutest

[10:39] <Geth> Â¦ rakudo/main: Add test for #5649

[10:39] <Geth> Â¦ rakudo/main: 

[10:39] <Geth> Â¦ rakudo/main: To make sure we don't revert to the legacy behaviour

[10:39] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/83fc678835

[11:45] *** sena_kun joined
[13:40] <jdv> somehow the last blin container ended up 11GB.  i think its normally more like 3GB.  wonder what happened...

[14:15] <timo> do you still have the files?

[15:22] <jdv> nope.  was cleaning up my disk.

[15:22] <jdv> maybe next month ill take a gander

[15:24] <ugexe> tbrowder: have you tried just copying what the dependency using that library does for its github action? https://github.com/pdf-raku/Font-FreeType-raku/blob/master/.github/workflows/macos.yml

[15:25] <ugexe> notably it looks like you are not setting LD_LIBRARY_PATH to where ever homebrew installs libraries

[15:26] <ugexe> so probably need export LD_LIBRARY_PATH=/opt/homebrew/opt/freetype/lib/

[16:00] <Geth> Â¦ rakudo/main: 6edab9f9e0 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/Order.rakumod

[16:00] <Geth> Â¦ rakudo/main: Add :by to .min/.max/.minmax

[16:00] <Geth> Â¦ rakudo/main: 

[16:00] <Geth> Â¦ rakudo/main: The sub versions of min/max/minmax take a :by named argument to indicate

[16:00] <Geth> Â¦ rakudo/main: the comperator.  However, the method versions take an optional positional

[16:00] <Geth> Â¦ rakudo/main: argument and ignore any :by specification (because of the implicit *%_

[16:00] <Geth> Â¦ rakudo/main: in the method signature.

[16:00] <Geth> Â¦ rakudo/main: 

[16:00] <Geth> Â¦ rakudo/main: <â€¦commit message has 6 more linesâ€¦>

[16:00] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6edab9f9e0

[16:07] <lizmat> ugexe: it was my understanding that setting LD_LIBRARY_PATH is *not* enough MacOS

[16:07] <lizmat> ?

[16:11] <ugexe> all i did was look at the actions on that repo and they are passing on macOS, so it certainly seems to be what needs to be done

[16:12] <ugexe> the latest commit even calls out fixing macos specifically - https://github.com/pdf-raku/Font-FreeType-raku/commit/634063716bd5dbad97ca7932f6b83cd62204676c

[16:15] <lizmat> that *copies* the native lib to the current directory ?

[16:21] <ugexe> among other things sure, but that is getting off track. it would need to be set regardless and that is not done in their existing github action. my originally suggestion was to copy what was done in the demonstratably working repo of the dependency itself

[16:22] <lizmat> ok, so I recently worked on GD::Raw

[16:22] <lizmat> brew install GD

[16:22] <ugexe> to be clear i am not trying to debug this issue. i just asked myself if anyone else had this working, checked, and saw they indeed do. so i suggest others to look at that for installation

[16:23] <lizmat> then run "ensure-symlink-for libgd.3" from MacOS::NativeLib

[16:23] <lizmat> and the tests of GD::Raw pass on MacOS

[16:24] <lizmat> no need to set LD_LIBRARY_PATH or amything else

[16:24] <ugexe> well to be fair i dont know what "ensure-lylink-for" is or what it does. i can see what the code I linked to does

[16:25] <lizmat> it puts a symlink in the install/lib dir of the executable to the library in /opt/homebrew/...

[16:29] <ugexe> first as someone either reading the CI stuff or writing it for my modules that may not be raku, I don't want to learn some special tool. native library stuff like this is going to be mostly the same across different languages so i would want to do things in the more generalized way. next, i dont think the description you gave is even correct (which i could verify when just writing the actual

[16:29] <ugexe> commands instead) since i thought homebrew uses different paths for x86 and arm

[16:30] <lizmat> for the CI of GD::Raw, I added: raku -e 'symlink "/opt/homebrew/lib/libgd.3.dylib".IO, $*EXECUTABLE.parent.sibling("lib/libgd.3.dylib")'

[16:31] <lizmat> I didn't want to add another dependency

[16:36] <ugexe> yeah i just dont really know enough about or have enough experience with the underlying issue to give any actual insights

[17:16] <timo> i'm not having the greatest success with comma-2.0 haha

[17:45] <[Coke]> jdv - there was a bug in a module that would have corrupted the local zef listing and made a bunch of stuff break. Possible that after the zef fix now you're just testing more modules.

[17:49] <jdv> wut now

[17:51] <jdv> if thats true maybe the tprf should shoulder the blin cost

[17:51] <jdv> 11 to 12h is a bit much

[17:52] <jdv> a huge aws box can probably do it in < 3h

[17:53] <jdv> for ~$30 a run or so

[17:58] <jdv> i used to do it in ~2h for ~$20

[17:58] <jdv> but im poor now...

[18:01] <jdv> and if the tprf could get back to me anytime this year thatd be great *grumble*

[18:01] <jdv> *sigh*

[18:01] <timo> it would be interesting to know how much of the time is spent in the "automatically bisect rakudo commits for changes in models" step, maybe there's a lot of time to save there until someone actually needs to know where exactly the change happened, like sometimes it's obvious

[18:05] *** rba_ joined
[18:06] *** summerisle joined
[18:07] <ab5tract> timo: what trouble are you having with comma?

[18:08] <ab5tract> Also, I take comma problems seriously, they are no laughing matter ;)

[18:10] *** bloatable6__ left
[18:10] *** rba left
[18:10] *** eof left
[18:10] *** jdv left
[18:10] *** rba_ is now known as rba

[18:11] *** bloatable6__ joined
[18:11] *** jdv joined
[18:11] <[Coke]> timo;almost no time is spent there.

[18:12] <[Coke]> it's drowned out by the sheet number of tests we run, esp. on those that are failing both ends

[18:13] <jdv> youz guyz...

[18:22] <timo> ab5tract: not sure how much you can reasonably do about the things i see here haha

[18:24] <ab5tract> I donâ€™t get whatâ€™s so funny, so maybe you could share?

[18:24] <ab5tract> Iâ€™ve fixed a lot of bugs, I am pretty confident I can fix more

[18:26] <jdv> youz guyz...

[18:28] <timo> well, right now i'm looking at a frozen IDEA :)

[18:29] <timo> the jvisualvm next to it is for some reason also frozen now

[18:31] <timo> when i open something that automatically adds a pair of parenthesis and hit enter, it seems like the closing paren gets 

[18:32] <timo> put on column 0, and when i put my cursor in front and hit tab, it does the "jump out of parens" action, which is expected and would be correct if i didn't explicitly want to (/ have to) indent the closing paren

[18:32] <timo> in the grammar previewer panel i get "failed to parse grammar" or so and i don't think i see a way to get the actual error. which is extra un-fun because rakudo itself compiles that grammar just fine

[18:35] <timo> https://gist.github.com/timo/578ba3a54764b1cf4c9d6bd64ee565a9 maybe this gives a hint, maybe not

[18:38] <ab5tract> Regarding the grammar panel, I have to admit I havenâ€™t had a chance to look at that yet

[18:38] <ab5tract> Iâ€™ve never used it even I. The original comma, so I need to go back and see whatâ€™s actually supposed to work

[18:41] <ab5tract> The parents thing Iâ€™m familiar with, I donâ€™t think itâ€™s a comma specific thing but i will take a look at it

[18:42] <timo> the grammar preview thing might also be unhappy about "unit grammar"

[18:43] <ab5tract> Did it freeze while engaging with the grammar preview?

[18:51] <timo> no, there i was following a use statement to the source of a module

[18:58] <ab5tract> Got it

[18:58] <ab5tract> Would you mind filing some issues? An example broken grammar would be helpful

[19:27] <timo> gonna have to circle back to you on that

[19:35] *** doomlord joined
[19:36] *** finanalyst joined
[20:13] *** doomlord left
[20:13] *** doomlord joined
[20:18] *** doomlord left
[20:24] <timo> oh, Pair isn't Cool

[20:51] * timo sent two pull requests to Data::Dump::Tree

[20:52] <ab5tract> timo: your intellij version is 2024.2+, right? I think it should fail to install otherwise but I wanted to double check

[20:59] <timo> 2024.2.3

[21:07] <ab5tract> Excellent, thanks for checking

[21:46] *** finanalyst left
[22:29] *** sena_kun left
