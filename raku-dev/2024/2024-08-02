[05:05] *** jjatria left
[05:05] *** sivoais left
[05:05] *** leont left
[05:05] *** andinus left
[05:05] *** gfldex left
[05:05] *** camelia left
[05:06] *** jjatria joined
[05:06] *** sivoais joined
[05:06] *** leont joined
[05:06] *** andinus joined
[05:06] *** gfldex joined
[05:06] *** camelia joined
[05:06] *** nine left
[05:06] *** zostay left
[05:06] *** coleman left
[05:06] *** JRaspass left
[05:06] *** nine joined
[05:06] *** zostay joined
[05:06] *** coleman joined
[05:06] *** JRaspass joined
[07:49] *** sena_kun joined
[08:41] *** sena_kun left
[09:01] *** finanalyst joined
[09:09] *** finanalyst left
[11:13] *** MasterDuke left
[14:31] *** [Coke] left
[14:33] *** [Coke] joined
[19:16] <ab5tract> So today I was once again reminded of how awkward it is to declare subsets for non-required attributes and named arguments (which are supposed to be optional unless specified otherwise)

[19:16] <ab5tract> I don’t have a solid view of how to fix this, but I know it has frustrated more people than just myself

[20:00] <Geth> ¦ rakudo/rakuast-phase-cleanup: 43 commits pushed by (Jonathan Worthington)++, (Stefan Seifert)++

[20:00] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/compare/0bde6ae8810b...a11fd270ca20

[20:00] <nine> Only t/12-rakuast/origins.rakutest remaining to be fixed.

[20:01] <ab5tract> Nice!

[20:01] <nine> This rebase push ^^^ kinda hides one of the more interesting commits: https://github.com/rakudo/rakudo/commit/a11fd270ca2088720d9bf89a0ea31e70b3196c15

[20:02] <nine> This gets rid of something that I have never liked since I introduced it: that role bodies got parsed and generated as Blocks which then got morphed into Subs.

[20:06] <lizmat> interesting...  

[20:07] <lizmat> ah, a sub with benefits  :-)

[20:16] <nine> Apparently that origin test is just bogus.

[20:18] <nine> In `say "line ", ($line = 2)` it tries to locate-node the node at the position of the $line = 2 expression. It expects to get a RakuAST::Statement::Expression which is indeed what's inside those parens. But the comment above the locate-node method says "Find the narrowest key origin node for an original position". While there is a statement there, an ApplyInfix expression is covering the whole statement.

[20:18] <nine> Indeed, we do now get that ApplyInfix, making the test fail. But from my reading it's just a wrong expectation there.

[20:18] <nine> vrurg_: can you confirm?

[20:20] <vrurg_> Unfortunately, I can't. It was too long ago, I don't remember the details.

[20:21] <nine> Does my analysis at least make sense?

[20:22] <nine> What is a "key origin node" even?

[20:22] <vrurg_> It's the one which is reported in messages. If an expressions spans across several lines then the key node origin will be reported.

[20:30] <nine> Ha! The test is indeed wrong. The reason it fails now is my fix for origins of infix expressions: https://github.com/rakudo/rakudo/commit/206e9d26bdbc1be996afacd12851a7e914ebeafd

[20:33] <Geth> ¦ rakudo/rakuast-phase-cleanup: 10 commits pushed by (Stefan Seifert)++

[20:33] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/compare/a11fd270ca20...f12788b331ba

[20:34] <nine> With this rakuast-phase-cleanup is strictly better than main :) Will give it a last look-over tomorrow and then merge

[20:46] <lizmat> whee!

[21:02] *** djinni` left
[21:26] *** sena_kun joined
[21:29] *** djinni` joined
[21:36] <ab5tract> Exciting times :D

[21:45] *** sena_kun left
[23:13] *** MasterDuke joined
