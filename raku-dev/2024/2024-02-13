[01:36] *** sjn_ joined
[01:36] *** sivoais_ joined
[01:36] *** andinus2 joined
[01:40] *** bloatable6 left
[01:40] *** quotable6 left
[01:40] *** releasable6 left
[01:40] *** shareable6 left
[01:40] *** committable6 left
[01:40] *** notable6 left
[01:40] *** linkable6 left
[01:40] *** epony left
[01:40] *** sivoais left
[01:40] *** sjn left
[01:40] *** tellable6 left
[01:40] *** unicodable6 left
[01:40] *** evalable6 left
[01:40] *** andinus left
[01:40] *** shareable6 joined
[01:40] *** releasable6 joined
[01:40] *** committable6 joined
[01:40] *** bloatable6 joined
[01:40] *** quotable6 joined
[01:40] *** unicodable6 joined
[01:40] *** evalable6 joined
[01:40] *** tellable6 joined
[01:40] *** notable6 joined
[01:41] *** epony joined
[01:41] *** linkable6 joined
[02:59] *** MasterDuke joined
[03:01] <MasterDuke> my rakudo build (at 2024.01-32-g5c9156e26) is now dying because of the OOM killer when compiling CORE.c

[03:01] <tellable6> 2024-02-12T09:12:56Z #raku-dev <nine> MasterDuke: pushed a fix for unsigned num

[03:03] <MasterDuke> i even restarted because i thought it might have been because of a recent kernel update, but still happens after the restart. i can see the rss quickly climbing and i only have 32gb on this machine

[03:16] <japhb> MasterDuke: If you just build the previous release (meaning 2024.01) does it do the same?

[03:17] <MasterDuke> well, i assume it's a commit from the past ~30h, i was able to build yesterday afternoon

[03:22] <MasterDuke> build with moarvm at HEAD and nqp at 94ee052770e28adc03e217b66210c8e5956c448d and rakudo at e93208ce71c3c51ea3b0c2bf9414d2000139f14c (i.e., latest moarvm, but right before the most recent nqp bump)

[03:22] <linkable6> (2024-02-12) https://github.com/Raku/nqp/commit/94ee052770 Bump MoarVM for the latest tweaks/optimizations

[03:22] <linkable6> (2024-02-11) https://github.com/rakudo/rakudo/commit/e93208ce71 Remove read lock on MRO

[03:24] <japhb> MasterDuke: I was just talking about ruling out something on your system *other* than Rakudo/NQP/MoarVM changes, and giving a solid starting point for bisection.

[03:25] <japhb> Habit, sorry.  :-)

[03:26] <MasterDuke> i did suspect the kernel-related stuff, but now i think it's the nqp/rakudo changes

[03:28] <MasterDuke> 3291cb41ce862163cb186b00900a864cf5766c7a looks like a decent possibility

[03:28] <linkable6> (2024-02-12) https://github.com/Raku/nqp/commit/3291cb41ce Streamline NQPClassHOW

[03:31] <MasterDuke> nqp doesn't seem to use a lot of ram to build

[04:08] <MasterDuke> unfortunately i can't see what's happening with heaptrack

[04:17] <MasterDuke> backing up to the working build, we coerce a lot of largish ints to strs when compiling CORE.c (e.g.,  coerced 6445646954776 to a str 3314 times)

[04:18] <MasterDuke> and heaptrack reports a max rss of 2g

[04:18] *** epony left
[04:21] <MasterDuke> we also coerce 64 to a str 42k times. maybe we should increase MVM_INT_TO_STR_CACHE_SIZE from 64 to 65

[04:25] <MasterDuke> i'm guessing those large numbers are pointer addresses for WHICHes, but i don't know why we coerce the same ones multiple times

[04:28] <MasterDuke> anyway, off to sleep &

[04:33] *** andinus2 left
[04:34] *** andinus joined
[05:55] *** andinus left
[05:55] *** andinus joined
[06:31] *** MasterDuke left
[09:11] *** sena_kun joined
[09:29] *** sjn_ is now known as sjn

[10:52] <lizmat> MasterDuke: that's probably my work on NQP streamlining NQPClassHOW  :-(

[10:52] <tellable6> lizmat, I'll pass your message to MasterDuke

[10:53] <lizmat> MasterDuke: sadly, the problem didn't expose itself in NQP itself  :-(

[10:53] <tellable6> lizmat, I'll pass your message to MasterDuke

[10:53] <lizmat> MasterDuke: am working on it

[10:53] <tellable6> lizmat, I'll pass your message to MasterDuke

[11:19] *** epony joined
[12:07] *** finanalyst joined
[12:14] <lizmat> MasterDuke: fwiw, 6445646954776 appears to be an objectid    this is used as a key in the typecache, and thus needs stringification

[12:14] <tellable6> lizmat, I'll pass your message to MasterDuke

[12:15] <lizmat> perhaps the typecache could be a list

[12:43] <lizmat> MasterDuke: looks like the issue in rakudo is caused by some circularity in setting up the type cache: a class having roles having classes that have the same roles or some such

[12:43] <tellable6> lizmat, I'll pass your message to MasterDuke

[12:56] *** epony left
[13:03] <Geth> ¦ nqp/main: 23194f5714 | (Elizabeth Mattijsen)++ | src/how/NQPClassHOW.nqp

[13:03] <Geth> ¦ nqp/main: Only add unique types to the typecache

[13:03] <Geth> ¦ nqp/main: 

[13:03] <Geth> ¦ nqp/main: One of the changes in 3291cb41ce862163cb18 was that recursion on

[13:03] <Geth> ¦ nqp/main: roles in the typecache was unlimited, rather than only one level

[13:03] <Geth> ¦ nqp/main: deep.  This tripped something in the Rakudo build causing it to

[13:03] <Geth> ¦ nqp/main: infiniloop on the build, presumably because of a type having a

[13:03] <Geth> ¦ nqp/main: role having that same type, etc. etc.

[13:03] <Geth> ¦ nqp/main: <…commit message has 5 more lines…>

[13:03] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/23194f5714

[13:25] <Geth> ¦ rakudo/main: 93f0d69675 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[13:25] <Geth> ¦ rakudo/main: Bump NQP to get latest NQPClassHOW tweaks

[13:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/93f0d69675

[13:25] <lizmat> MasterDuke: all should be well again now

[13:25] <tellable6> lizmat, I'll pass your message to MasterDuke

[13:35] <Geth> ¦ nqp/main: 57311710fa | (Elizabeth Mattijsen)++ | src/how/NQPClassHOW.nqp

[13:35] <Geth> ¦ nqp/main: Add support for TWEAK method

[13:35] <Geth> ¦ nqp/main: 

[13:35] <Geth> ¦ nqp/main: By popular demand, should be helpful in the Rakudo metamodel and

[13:35] <Geth> ¦ nqp/main: bootstrap

[13:35] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/57311710fa

[13:36] *** sena_kun left
[13:38] *** sena_kun joined
[13:46] <Geth> ¦ rakudo/main: febe8ee862 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[13:46] <Geth> ¦ rakudo/main: Bump NQP to get support for TWEAK in NQP

[13:46] <Geth> ¦ rakudo/main: 

[13:46] <Geth> ¦ rakudo/main: For use in the metamodel and possibly bootstrap

[13:46] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/febe8ee862

[14:00] *** Altai-man joined
[14:01] *** sena_kun left
[14:04] <Geth> ¦ nqp/main: 6f65509180 | (Elizabeth Mattijsen)++ | src/how/NQPAttribute.nqp

[14:04] <Geth> ¦ nqp/main: Streamline NQPAttribute

[14:04] <Geth> ¦ nqp/main: 

[14:04] <Geth> ¦ nqp/main: - mostly cosmetic

[14:04] <Geth> ¦ nqp/main: - remove unnecessary tests for !nqpisnull(foo) && foo: if foo is

[14:04] <Geth> ¦ nqp/main:   trueish, it cannot be nqp::isnull, so the first part of the check

[14:04] <Geth> ¦ nqp/main:   doesn't make sense, so remove it

[14:04] <Geth> ¦ nqp/main: - add some comments

[14:04] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/6f65509180

[14:16] *** finanalyst left
[14:38] *** epony joined
[16:03] *** epony left
[16:08] *** epony joined
[16:20] *** epony left
[16:36] *** epony joined
[17:32] *** finanalyst joined
[17:40] *** epony left
[17:57] *** epony joined
[19:05] <Geth> ¦ nqp/main: bd14e3d0df | (Elizabeth Mattijsen)++ | 2 files

[19:05] <Geth> ¦ nqp/main: Generalize handling of TWEAK

[19:05] <Geth> ¦ nqp/main: 

[19:05] <Geth> ¦ nqp/main: Adds a $!tweaks attribute to NQPClassHOW: a list with codeblocks to

[19:05] <Geth> ¦ nqp/main: be executed at the end of the local BUILDPLAN.  This should allow

[19:05] <Geth> ¦ nqp/main: TWEAK blocks from roles to be added to a class, and thus provide

[19:05] <Geth> ¦ nqp/main: a consistent means to initialize attributes of a role that is

[19:05] <Geth> ¦ nqp/main: consumed by a class.

[19:05] <Geth> ¦ nqp/main: 

[19:05] <Geth> ¦ nqp/main: Also add some basic testing of BUILD / TWEAK: they did not appear

[19:05] <Geth> ¦ nqp/main: to be tested as such yet.

[19:05] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/bd14e3d0df

[19:07] *** epony left
[19:08] *** epony joined
[19:40] *** finanalyst left
[20:16] *** epony left
[20:17] *** epony joined
[21:42] *** librasteve_ joined
[22:46] *** epony left
[22:47] *** epony joined
[23:38] *** Altai-man left
