[00:48] <timo> i've gotta take a closer look at this r3tool

[08:45] *** sena_kun joined
[09:31] <Geth> ¦ roast: 3a463fe779 | (Elizabeth Mattijsen)++ | S32-list/reverse.t

[09:31] <Geth> ¦ roast: Add test for #3595

[09:31] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/3a463fe779

[09:44] <Geth> ¦ rakudo/main: ce5e02cd20 | (Elizabeth Mattijsen)++ | src/core.c/Range.rakumod

[09:44] <Geth> ¦ rakudo/main: Make Inf .. xxx produce Nils

[09:44] <Geth> ¦ rakudo/main: 

[09:44] <Geth> ¦ rakudo/main: Fixes #3596

[09:44] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ce5e02cd20

[09:44] <Geth> ¦ roast: 2010266f68 | (Elizabeth Mattijsen)++ | S02-types/range.t

[09:44] <Geth> ¦ roast: Tests for #3596

[09:44] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/2010266f68

[10:06] <Geth> ¦ roast: 8d5e3cd1b3 | (Elizabeth Mattijsen)++ | S06-advanced/dispatching.t

[10:06] <Geth> ¦ roast: Add test for #3611

[10:06] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/8d5e3cd1b3

[10:28] <Geth> ¦ rakudo/main: dd62b98e09 | (Elizabeth Mattijsen)++ | t/12-rakuast/xx-fixed-in-rakuast.rakutest

[10:28] <Geth> ¦ rakudo/main: Add test for #3626

[10:28] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/dd62b98e09

[10:48] <Geth> ¦ rakudo/lizmat-uniname: 5f71b3a253 | (Elizabeth Mattijsen)++ | src/core.c/unicodey.rakumod

[10:48] <Geth> ¦ rakudo/lizmat-uniname: Make Int.uniname return a Failure on unassigned codepoints

[10:48] <Geth> ¦ rakudo/lizmat-uniname: 

[10:48] <Geth> ¦ rakudo/lizmat-uniname: As discussed in https://github.com/rakudo/rakudo/issues/3636

[10:48] <Geth> ¦ rakudo/lizmat-uniname: 

[10:48] <Geth> ¦ rakudo/lizmat-uniname: This however breaks tests in t/spec/S15-unicode-information/uniname.t

[10:48] <Geth> ¦ rakudo/lizmat-uniname: so a decision needs to be made.

[10:48] <Geth> ¦ rakudo/lizmat-uniname: review: https://github.com/rakudo/rakudo/commit/5f71b3a253

[10:48] <Geth> ¦ rakudo: lizmat++ created pull request #5658: Make Int.uniname return a Failure on unassigned codepoints

[10:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5658

[11:09] <Geth> ¦ rakudo/main: 258a1b54bc | (Elizabeth Mattijsen)++ | src/core.c/Range.rakumod

[11:09] <Geth> ¦ rakudo/main: Make +((5..2).reverse) produce correct value

[11:09] <Geth> ¦ rakudo/main: 

[11:09] <Geth> ¦ rakudo/main: Namely 0

[11:09] <Geth> ¦ rakudo/main: 

[11:09] <Geth> ¦ rakudo/main: In response to https://github.com/rakudo/rakudo/issues/3637

[11:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/258a1b54bc

[12:42] <Geth> ¦ rakudo: lizmat self-assigned `printf` doesn't honor `%f` widths https://github.com/rakudo/rakudo/issues/3733

[13:09] <Geth> ¦ rakudo/main: 6adcecd939 | (Elizabeth Mattijsen)++ | src/core.c/Rational.rakumod

[13:09] <Geth> ¦ rakudo/main: Make sure the numerator is shown on N / 0

[13:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6adcecd939

[14:06] *** notna joined
[14:12] *** bartolin joined
[16:18] *** notna left
[17:03] <Geth> ¦ rakudo/main: 53a5ba759c | (Elizabeth Mattijsen)++ | src/core.c/Rational.rakumod

[17:03] <Geth> ¦ rakudo/main: Centralize creation of 0 denominator Rats

[17:03] <Geth> ¦ rakudo/main: 

[17:03] <Geth> ¦ rakudo/main: To make it easier to add additional logic

[17:03] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/53a5ba759c

[17:33] <bartolin> hi, #raku-dev! I haven't been around for a long time. Seeing the flood of notifications about closed issues (lizmat++) made me think I should try to get involved again

[17:37] <bartolin> one conrete question: on my vm (FreeBSD 14.1) integration/advent2012-day21.t hogged up all memory very fast. is that a known problem? (it's part of the make target "stresstest")

[17:45] <timo> oh hai bartolin 

[17:48] <bartolin> hej timo. I noticed your commit that sped up raku-ast-compiler.nqp for the jvm backend. very, very nice :)

[17:49] <timo> yeah that was fun to investigate

[17:49] <bartolin> timo++ (also for caring for the package for Debian)

[17:49] <timo> <3

[17:58] <timo> unfortunately, the ram usage for building rakudo-jvm is a bit too much for the default azure vms we get on our pipelines, so we can't really get to testing that

[18:07] <bartolin> yeah, I noticed that the Xmx for the build had to be increased again. the ram usage was one of the many things I wanted to give a look. but I don't have relevant experience with profiling, so it never made it to the top of my list

[18:40] <Geth> ¦ rakudo/lizmat-saneRats: 82e0cfb01c | (Elizabeth Mattijsen)++ | 2 files

[18:40] <Geth> ¦ rakudo/lizmat-saneRats: Make Rationals remember where they divided by 0

[18:40] <Geth> ¦ rakudo/lizmat-saneRats: 

[18:40] <Geth> ¦ rakudo/lizmat-saneRats: Inspired by https://github.com/rakudo/rakudo/issues/3738

[18:40] <Geth> ¦ rakudo/lizmat-saneRats: 

[18:40] <Geth> ¦ rakudo/lizmat-saneRats: This stores a handled Failure with the location where the Rational

[18:40] <Geth> ¦ rakudo/lizmat-saneRats: was created, and throws that whenever it is being stringified.

[18:40] <Geth> ¦ rakudo/lizmat-saneRats: 

[18:40] <Geth> ¦ rakudo/lizmat-saneRats: <…commit message has 14 more lines…>

[18:40] <Geth> ¦ rakudo/lizmat-saneRats: review: https://github.com/rakudo/rakudo/commit/82e0cfb01c

[18:40] <Geth> ¦ rakudo: lizmat++ created pull request #5659: Make Rationals remember where they divided by 0

[18:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5659

[18:57] <Geth> ¦ roast: a6983a6d03 | (Elizabeth Mattijsen)++ | 2 files

[18:57] <Geth> ¦ roast: Add test for #3777

[18:57] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/a6983a6d03

[19:01] <[Coke]> R#3702 was closed as completed, but I don't see a merged PR or commit that addressed it?

[19:01] <linkable6> R#3702 [closed]: https://github.com/rakudo/rakudo/issues/3702 [CLI] USAGE statements should be formatted by default

[19:02] <[Coke]> tbrowder gave it a thumbs up...

[19:04] <lizmat> I closed it in favour of #4223

[19:04] <lizmat> R#4223

[19:04] <linkable6> R#4223 [open]: https://github.com/rakudo/rakudo/issues/4223 [CLI] --help output for scripts with subcommands

[19:22] <[Coke]> ah, thanks

[21:05] *** lizmat left
[21:07] *** lizmat joined
[21:30] *** MasterDuke joined
[21:33] <MasterDuke> m: say (reduce * * *, (1993 xx 10_000)) %% 2

[21:33] <camelia> rakudo-moar 53a5ba759: OUTPUT: «False␤»

[21:34] <MasterDuke> m: say (reduce * * *, (1 .. 10_000)) %% 2

[21:34] <camelia> rakudo-moar 53a5ba759: OUTPUT: «True␤»

[21:36] <MasterDuke> those have interesting profiles. they take pretty much the same amount of time (it's mostly spent in the multiplication), but the allocations are wildly different

[21:38] <MasterDuke> the `xx` version has 19985 Ints as the top allocated and then 1144 BOOTHashes. the `..` version has 103380 BOOTHashes and then 69920 Ints and then 41314 Scalars

[21:38] <MasterDuke> `xx` version: In total, 8181 call frames were entered and exited by the profiled code. Inlining eliminated the need to create 26738 call frames (that's 76.57%).

[21:39] <MasterDuke> the `..` version: In total, 208319 call frames were entered and exited by the profiled code. Inlining eliminated the need to create 68261 call frames (that's 24.68%).

[21:45] <MasterDuke> the optimized qast doesn't look terribly different

[21:48] <MasterDuke> those BOOTHashes in the `..` version are mostly coming from

[21:48] <MasterDuke> reify-at-least, SETTING::src/core.c/List.rakumod:40, 50005

[21:48] <MasterDuke> push-exactly, SETTING::src/core.c/Iterator.rakumod:28,40004

[21:48] <MasterDuke> push-exactly, SETTING::src/core.c/Rakudo/Iterator.rakumod:2137, 10001

[22:35] *** guest555 joined
[22:35] <Geth> ¦ rakudo/main: 9b31d7c66a | (Elizabeth Mattijsen)++ | t/12-rakuast/xx-fixed-in-rakuast.rakutest

[22:35] <Geth> ¦ rakudo/main: Add test for #3786

[22:35] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/9b31d7c66a

[22:48] <Geth> ¦ roast: 4bb9f2f2f7 | (Elizabeth Mattijsen)++ | S32-num/rat.t

[22:48] <Geth> ¦ roast: Remove debug code

[22:48] <Geth> ¦ roast: 

[22:48] <Geth> ¦ roast: Spotted by bartolin++

[22:48] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/4bb9f2f2f7

[22:54] <tbrowder> please remind me how to run tests and skip the #? tests

[23:07] *** guest555 left
[23:08] *** [Coke] left
[23:11] <timo> fudgeandrun is responsible for implementing #?

[23:11] <timo> what do you need exactly?

[23:12] <timo> "make spectest" will `fudgeall` for you before running the tests

[23:13] *** [Coke] joined
[23:40] <tbrowder> i was just trying to run the two i’m working on.

[23:40] <tbrowder> but i can run them all, thnx

[23:47] <timo> "make t/spec/bla/foo.t" should also fudge and run it

[23:50] <tbrowder> ah, thnx, that’s what i was looking for, haven’t done that in a long time!

