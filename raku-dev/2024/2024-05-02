[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:47] *** rba left
[00:48] *** rba joined
[02:44] *** MasterDuke joined
[02:45] <MasterDuke> anyone else seeing this?

[02:45] <MasterDuke> ok 59 - hash variable with a where guard (failing initializer)

[02:45] <MasterDuke> Dubious, test returned 1 (wstat 256, 0x100)

[02:45] <MasterDuke> Failed 1/59 subtests

[02:45] <MasterDuke> Test Summary Report

[02:45] <MasterDuke> -------------------

[02:45] <MasterDuke> t/12-rakuast/var.rakutest (Wstat: 256 (exited 1) Tests: 59 Failed: 1)

[02:45] <MasterDuke>   Failed test:  1

[02:45] <MasterDuke>   Non-zero exit status: 1

[04:49] *** squashable6 left
[04:50] *** squashable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:15] *** MasterDuke left
[06:48] *** sena_kun joined
[06:57] *** sena_kun left
[08:00] <Geth> ¦ rakudo/main: c0c5e9edac | (Stefan Seifert)++ | 2 files

[08:00] <Geth> ¦ rakudo/main: RakuAST: support attribute aliases without twigil

[08:00] <Geth> ¦ rakudo/main: 

[08:00] <Geth> ¦ rakudo/main: Like: class Foo { has $foo; method get-foo() { $foo } };

[08:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c0c5e9edac

[08:00] <Geth> ¦ rakudo/main: 4e547d17d5 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[08:00] <Geth> ¦ rakudo/main: RakuAST: allow binding to attribute aliases

[08:00] <Geth> ¦ rakudo/main: 

[08:00] <Geth> ¦ rakudo/main: class Foo { has $foo; method set() { $foo := 1 } }

[08:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4e547d17d5

[08:00] <Geth> ¦ rakudo/main: 5a1e016199 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[08:00] <Geth> ¦ rakudo/main: RakuAST: allow binding to our scoped variables

[08:01] <Geth> ¦ rakudo/main: 

[08:01] <Geth> ¦ rakudo/main: In our $foo; $foo := 1; what is bound is not the package-variable but

[08:01] <Geth> ¦ rakudo/main: the lexical alias. I.e. the link between this alias and the

[08:01] <Geth> ¦ rakudo/main: package-variable is severed.

[08:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5a1e016199

[08:18] <nine> MasterDuke: yes https://irclogs.raku.org/raku-dev/2024-05-01.html#18:50

[08:18] <tellable6> nine, I'll pass your message to MasterDuke

[08:18] <tellable6_> nine, I'll pass your message to MasterDuke

[08:24] <nine> We're at 1063 btw

[08:37] <lizmat> [Coke]: looks like JJ did this already in https://github.com/JJ/p6-math-constants/blob/master/lib/Math/Constants.pm6

[08:48] <lizmat> nine: this looks like low hanging RakuAST fruit:

[08:48] <lizmat> m: sub a(--> "foo") { }; dd a

[08:48] <camelia> rakudo-moar 5a1e01619: OUTPUT: «"foo"␤»

[08:49] <lizmat> in RakuAST: Return value after --> may only be a type or a constant

[08:49] <lizmat> 1063 confirmed BTW  :-)

[08:49] *** sena_kun joined
[08:51] <Geth> ¦ rakudo/main: a3907c3ac4 | (Elizabeth Mattijsen)++ | lib/NativeCall.rakumod

[08:51] <Geth> ¦ rakudo/main: Unbreak quite a few "make test" tests with RakuAST

[08:51] <Geth> ¦ rakudo/main: 

[08:51] <Geth> ¦ rakudo/main: Looks like --> "foo" is not supported in RakuAST yet

[08:51] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a3907c3ac4

[09:38] <Geth> ¦ rakudo/main: 4de8e84abb | (Elizabeth Mattijsen)++ | lib/NativeCall.rakumod

[09:38] <Geth> ¦ rakudo/main: Streamline NativeCall (part 7/N)

[09:38] <Geth> ¦ rakudo/main: 

[09:38] <Geth> ¦ rakudo/main: - some helper subs

[09:38] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4de8e84abb

[10:21] <Geth> ¦ nqp/main: b1c0c48dd0 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[10:21] <Geth> ¦ nqp/main: Bump MoarVM to get MasterDuke17++ itoa fixes

[10:21] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/b1c0c48dd0

[10:46] <Geth> ¦ rakudo/main: 539e4d26de | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[10:46] <Geth> ¦ rakudo/main: Bump NQP to get MasterDuke17++ itoa fixes

[10:46] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/539e4d26de

[10:59] <Geth> ¦ rakudo/main: d374dbb2bd | (Elizabeth Mattijsen)++ | lib/NativeCall.rakumod

[10:59] <Geth> ¦ rakudo/main: Streamline NativeCall (part 7/N)

[10:59] <Geth> ¦ rakudo/main: 

[10:59] <Geth> ¦ rakudo/main: - make private helper subs realy private

[10:59] <Geth> ¦ rakudo/main: - reduce scope of the NativeCall module further

[10:59] <Geth> ¦ rakudo/main: - more ternaries instead if if/elsif/else

[10:59] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d374dbb2bd

[11:06] <lizmat> greppable6: NativeCall::cglobal

[11:06] <greppable6> lizmat, Found nothing!

[11:06] <lizmat> greppable6: cglobal

[11:06] <greppable6> lizmat, 45 lines, 16 modules: https://gist.github.com/ad54fb9682c9eb4c5bc4fd45023f00a0

[11:06] <lizmat> greppable6: NativeCall::nativecast

[11:06] <greppable6> lizmat, Found nothing!

[11:06] <lizmat> greppable6: nativecast

[11:06] <greppable6> lizmat, 382 lines, 49 modules: https://gist.github.com/2e9b2039719edf921209ddebc7b41ca3

[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:08] <Geth> ¦ rakudo/main: 894075587d | (Elizabeth Mattijsen)++ | lib/NativeCall.rakumod

[12:08] <Geth> ¦ rakudo/main: Streamline NativeCall (part 8/N)

[12:08] <Geth> ¦ rakudo/main: 

[12:08] <Geth> ¦ rakudo/main: Make Native role the only thing in the NativeCall module.  And fix

[12:08] <Geth> ¦ rakudo/main: indenting, now there's not a lot of code in it

[12:08] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/894075587d

[12:22] <[Coke]> JJ++

[12:31] <Geth> ¦ rakudo/main: 14bde02567 | (Elizabeth Mattijsen)++ | lib/NativeCall.rakumod

[12:31] <Geth> ¦ rakudo/main: Streamline NativeCall (part 9/N)

[12:31] <Geth> ¦ rakudo/main: 

[12:31] <Geth> ¦ rakudo/main: Move NativeCall module up in the code to a more logical location

[12:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/14bde02567

[12:41] <[Tux]> Rakudo v2024.04-37-g14bde0256 (v6.d) on MoarVM 2024.04-3-g62e64677e

[12:41] <[Tux]> csv-test-xs-20      0.142 -  0.142

[12:41] <[Tux]> csv-ip5xs           0.256 -  0.262

[12:41] <[Tux]> test-t --race       0.274 -  0.275

[12:41] <[Tux]> test-t              0.426 -  0.430

[12:41] <[Tux]> csv-ip5xs-20        1.129 -  1.153

[12:41] <[Tux]> test-t-20 --race    1.223 -  1.260

[12:41] <[Tux]> csv-parser          1.563 -  1.580

[12:41] <[Tux]> test                1.908 -  1.978

[12:41] <[Tux]> test-t-20           5.184 -  5.198

[13:04] <Geth> ¦ rakudo/main: 9ef2df5bca | (Elizabeth Mattijsen)++ | lib/NativeCall.rakumod

[13:04] <Geth> ¦ rakudo/main: Streamline NativeCall (part 10/N)

[13:04] <Geth> ¦ rakudo/main: 

[13:04] <Geth> ¦ rakudo/main: - move all local roles together

[13:04] <Geth> ¦ rakudo/main: - make all subs "my", even if they're exported, as they weren't part

[13:04] <Geth> ¦ rakudo/main:   of the NativeCall namespace anymore either

[13:04] <Geth> ¦ rakudo/main: - add prototype if applicable

[13:04] <Geth> ¦ rakudo/main: - reduce number of "is exports"

[13:04] <Geth> ¦ rakudo/main: - single candidate multis become an only

[13:04] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/9ef2df5bca

[13:07] <nine> Seems to me like map_return_type should have gone the other way: multi sub map_return_type(Mu $type) { Mu }; multi sub map_return_type(Int $type) { Int }; multi sub map_return_type(Num $type) { Num }; multi sub map_return_type($type) { $type }

[13:08] <lizmat> good point!  

[13:08] <lizmat> Actually, the Mu would be the fallback

[13:10] <nine> ah yes

[13:10] <lizmat> my multi sub map_return_type(Mu  $type        ) { $type }

[13:10] <lizmat> my multi sub map_return_type(Int $type --> Int) {       }

[13:10] <lizmat> my multi sub map_return_type(Num $type --> Num) {       }

[13:12] <lizmat> actually:

[13:13] <lizmat> my multi sub map_return_type(Int --> Int) {       }

[13:13] <lizmat> my multi sub map_return_type(Num --> Num) {       }

[13:25] <Geth> ¦ rakudo/main: 586c783224 | (Elizabeth Mattijsen)++ | lib/NativeCall.rakumod

[13:25] <Geth> ¦ rakudo/main: Streamline NativeCall (part 11/N)

[13:25] <Geth> ¦ rakudo/main: 

[13:25] <Geth> ¦ rakudo/main: Re-imagine map_return_type, nine++

[13:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/586c783224

[13:31] *** Altai-man joined
[13:34] *** sena_kun left
[14:14] <nine> lizmat: re commit fff197957ad04090e01b24cb2064f9125c7bce57 using $*LANG there cannot work as that code won't get executed during the parse, thus $*LANG will be in a completely different state

[14:14] <linkable6> (2023-02-10) https://github.com/rakudo/rakudo/commit/fff197957a Make "use fatal" operational

[14:15] *** linkable6_ left
[14:15] <nine> That's the good reason for why the RakuAST precompiler did not even support dynamic variables until recently

[14:15] *** linkable6_ joined
[15:39] <Geth> ¦ rakudo/main: 80ae959aa1 | (Stefan Seifert)++ | src/Raku/ast/expressions.rakumod

[15:39] <Geth> ¦ rakudo/main: RakuAST: fix BEGIN time execution of thunked expressions

[15:39] <Geth> ¦ rakudo/main: 

[15:39] <Geth> ¦ rakudo/main: We need to create a thunk's QAST from a place where we have access to

[15:39] <Geth> ¦ rakudo/main: the expression its thunking. The code stub doesn't have that.

[15:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/80ae959aa1

[15:39] <Geth> ¦ rakudo/main: 4988fb37ba | (Stefan Seifert)++ | 4 files

[15:39] <Geth> ¦ rakudo/main: RakuAST: avoid deparsing when we have access to the source.

[15:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4988fb37ba

[16:56] <Geth> ¦ Algorithm-Diff: antononcube++ created pull request #22: Correct results of diff and sdiff

[16:56] <Geth> ¦ Algorithm-Diff: review: https://github.com/raku-community-modules/Algorithm-Diff/pull/22

[17:09] *** linkable6_ left
[17:11] *** linkable6_ joined
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:13] <Geth> ¦ Algorithm-Diff/main: e146870541 | (Anton Antonov)++ (committed using GitHub Web editor) | 2 files

[18:13] <Geth> ¦ Algorithm-Diff/main: Correct results of diff and sdiff

[18:13] <Geth> ¦ Algorithm-Diff/main: 

[18:13] <Geth> ¦ Algorithm-Diff/main: Also correct license.

[18:13] <Geth> ¦ Algorithm-Diff/main: review: https://github.com/raku-community-modules/Algorithm-Diff/commit/e146870541

[18:16] <Geth> ¦ Algorithm-Diff/main: 50a20665de | (Elizabeth Mattijsen)++ | 2 files

[18:16] <Geth> ¦ Algorithm-Diff/main: 0.0.3

[18:16] <Geth> ¦ Algorithm-Diff/main: review: https://github.com/raku-community-modules/Algorithm-Diff/commit/50a20665de

[19:57] *** Altai-man left
[19:59] *** sena_kun joined
[20:21] <Geth> ¦ rakudo/main: 331f0192f7 | (Stefan Seifert)++ | src/Raku/ast/expressions.rakumod

[20:21] <Geth> ¦ rakudo/main: RakuAST: detect a case of double closure

[20:21] <Geth> ¦ rakudo/main: 

[20:21] <Geth> ¦ rakudo/main: Detects {* + 1}(1) which is {{$_ + 1}}(1) which won't do what's

[20:21] <Geth> ¦ rakudo/main: intended.

[20:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/331f0192f7

[20:21] <Geth> ¦ rakudo/main: 1d5cd34f12 | (Stefan Seifert)++ | src/Raku/ast/checktime.rakumod

[20:21] <Geth> ¦ rakudo/main: RakuAST: set file and line on sorries and worries (i.e. compile time exceptions)

[20:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1d5cd34f12

[21:23] *** squashable6 left
[21:26] *** squashable6 joined
[22:36] *** MasterDuke joined
[23:06] *** sena_kun left
