[07:42] *** Geth left
[07:43] *** Geth joined
[08:33] *** finanalyst joined
[08:51] <timo> slightly puzzled by "zef update" ending in a "No such method 'lines' for invocant of type 'X::AdHoc'"

[08:53] <timo> https://gist.github.com/timo/c4d5b7e9094986e3ec6c8b8e6cdcd110

[08:53] <timo> but i don't know how exactly .first-callable works, maybe this is normal?

[08:55] <timo> oh, first-callable is how .first is implemented when you pass a callable

[08:57] <timo> oh i think i was just looking too late in the output, and it really is getting an X::AdHoc in the "stderr" supply that it's actually trying to call .lines on, expecting it to be a Str or similar

[09:20] *** dawids joined
[09:20] *** dawids left
[09:35] *** sena_kun joined
[10:08] <timo> fascinating. in this docker container i built so i can easily test stuff out, %*ENV<SHELL> is actually not set, and the "shell" core sub doesn't take "no arguments" to mean "just give an interactive shell to the user"

[10:08] *** finanalyst left
[10:09] <timo> so "zef look" creates the folder and then can't launch a shell in it because you can't "shell(Any)"

[11:00] <lizmat> hmmmm I wonder if that could be an attach vector: writing code to a file called "Any", then do a "zef look"

[11:00] <lizmat> ah

[11:02] * lizmat is reminded of the MS-DOS days, and a prank: create a file "secret.txt" with "Access Denied" as its contents  :-)

[13:07] <timo> how do typical unzip programs on windows react to a file in the zip being called COM or COM1? :D

[14:29] <jdv> changelogs are up.  i'll pause for a bit.  probably start the releasings in an hour or 2.

[14:57] * lizmat looks

[14:59] * lizmat can't think of anything to change

[15:16] *** japhb left
[15:35] <jdv> ok then.  it starts now.

[15:43] <lizmat> ++jdv

[15:43] <jdv> just noticed I'm now the longest running release mamager with this release being my 25th

[15:43] <jdv> looks like altai-man did 24

[15:48] *** japhb joined
[15:48] <[Coke]> I am probably *-1

[15:48] <lizmat> jdv++

[15:48] <[Coke]> How are you checking?

[15:49] <[Coke]> (I'm curious what the list looks like!)

[15:49] <jdv> its at the bottom of hte relesase guide

[15:50] <jdv> https://github.com/rakudo/rakudo/blob/main/docs/release_guide.pod

[15:56] <Geth> ¦ rakudo/release-2024.09: 63d6d451fc | (Justin DeVuyst)++ | 3 files

[15:56] <Geth> ¦ rakudo/release-2024.09: Update changelog + announcement

[15:56] <Geth> ¦ rakudo/release-2024.09: 

[15:56] <Geth> ¦ rakudo/release-2024.09: Deliberately not logged:

[15:56] <Geth> ¦ rakudo/release-2024.09: 

[15:56] <Geth> ¦ rakudo/release-2024.09: [361cf231][bd85145e][23da1ce1][fd309af8][e335344c][dc5117f4]

[15:56] <Geth> ¦ rakudo/release-2024.09: [67be9271][1a7b8460][0b6c7dc6]

[15:56] <Geth> ¦ rakudo/release-2024.09: review: https://github.com/rakudo/rakudo/commit/63d6d451fc

[16:06] <timo> it feels like i've done a million things and none are changeloggable :D

[16:07] <timo> did we ever have like, a decision about changelog entries that refer to a change made to a change that was also in the changelog?

[16:08] <timo> like, if we have one commit that introudces A, then a second commit that fixes something in A, should we leave that out of the changelog and instead describe what A looks like after the fix, if it is different at all

[16:09] <timo> jdv: is it too late to change a line or two in the moarvm changelog?

[16:10] <lizmat> If I know of such cases, then I would change it to something like: "Introduce A" and then list all associated commits

[16:12] <jdv> timo: yup.  its a done deal:(

[16:13] <timo> hehe, ok

[16:13] <jdv> i usually just tack the sha on the first commits line

[16:13] <timo> well, they don't have to stay untouched after the release

[16:13] <jdv> i think there are a couple in this month's rakudo changelog

[16:14] <timo> i don't have to nitpick :)

[16:14] <jdv> i normally say when i've gen'd the changelogs and give a bit of time for review.  maybe next time:)

[16:14] <jdv> moarvm release is almost done, alas

[16:15] <timo> no problem. appreciate your work!

[16:15] <timo> oh, in the nqp release, can you look if the fasttool folder ends up with only the readme in it?

[16:16] <timo> i was looking at the deb package we build and it doesn't have the jar there, but i think it's also set up to remove anything that's only the jvm backend?

[16:16] <jdv> the nqp release is almost completely automated 

[16:16] <jdv> i'm not sure to be honest

[16:17] <timo> OK no problem, it's not causing any trouble

[16:17] <jdv> https://github.com/rakudo/rakudo/blob/main/tools/releasable/Akefile#L109-L110 ?

[16:25] <timo> hm?

[16:28] <jdv> that's about my involvment with nqp for the release.  i run that.

[16:41] <timo> oh, hehe.

[16:42] <jdv> randomly, it is running at this moment;)

[17:08] <[Coke]> looks like some mojibake in that release guide!

[17:09] <[Coke]> Rakudo #94, e.g.

[17:12] <[Coke]> jdv: how annoying would it be to rename the release guide to *.rakudoc ?

[17:13] <timo> https://github.com/rakudo/rakudo/blob/main/docs/release_guide.pod - you mean the first line here?

[17:13] <timo> "release, itâ€™s a good idea"

[17:14] <jdv> [Coke]: if it makes you happy...

[17:14] <timo> "need resolvingâ€� is left to"

[17:14] <timo> ah you mean: Rakudo #94 "ÐºÐ¾Ð»ÐµÐ´Ð°"

[17:15] <jdv> will that render on gh?  i don't care but some might.

[17:20] <[Coke]> Looks fine on disk.

[17:23] <[Coke]> guess we need some git attributes set?

[17:27] <[Coke]> jdv: safe to commit to main now?

[17:28] <jdv> not yet.  in a 1/2h probably.

[17:28] <[Coke]> ok.

[17:37] <Geth> ¦ rakudo/release-2024.09: f72f8d707d | (Justin DeVuyst)++ | tools/templates/NQP_REVISION

[17:37] <Geth> ¦ rakudo/release-2024.09: [release] Bump NQP revision to 2024.09

[17:37] <Geth> ¦ rakudo/release-2024.09: review: https://github.com/rakudo/rakudo/commit/f72f8d707d

[17:37] <Geth> ¦ rakudo/release-2024.09: f1fac3e192 | (Justin DeVuyst)++ | VERSION

[17:37] <Geth> ¦ rakudo/release-2024.09: [release] Bump VERSION to 2024.09

[17:37] <Geth> ¦ rakudo/release-2024.09: review: https://github.com/rakudo/rakudo/commit/f1fac3e192

[17:37] <Geth> ¦ nqp/main: c3f97bae9d | (Justin DeVuyst)++ | tools/templates/MOAR_REVISION

[17:37] <Geth> ¦ nqp/main: [release] Bump MoarVM revision to 2024.09

[17:37] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/c3f97bae9d

[17:37] <Geth> ¦ nqp/main: 245c692e15 | (Justin DeVuyst)++ | VERSION

[17:37] <Geth> ¦ nqp/main: [release] Bump VERSION to 2024.09

[17:37] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/245c692e15

[17:39] <Geth> ¦ rakudo: jdv++ created pull request #5650: Release 2024.09

[17:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5650

[17:39] <Geth> ¦ rakudo/main: 4 commits pushed by (Justin DeVuyst)++

[17:39] <Geth> ¦ rakudo/main: 63d6d451fc | Update changelog + announcement

[17:39] <Geth> ¦ rakudo/main: f72f8d707d | [release] Bump NQP revision to 2024.09

[17:39] <Geth> ¦ rakudo/main: f1fac3e192 | [release] Bump VERSION to 2024.09

[17:39] <Geth> ¦ rakudo/main: 194227f73d | Merge pull request #5650 from rakudo/release-2024.09

[17:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/3ca83dc13883...194227f73db6

[17:54] <jdv> the release is all done

[17:54] <jdv> [Coke]: ^

[17:54] <jdv> patrickb: the 2024.09 release happened

[17:55] <jdv> .tell El_Che the 2024.09 release happened

[17:55] <tellable6__> jdv, I'll pass your message to El_Che

[17:55] <Geth> ¦ rakudo/main: 0732084c6b | (Will Coleda)++ | docs/.gitattributes

[17:55] <Geth> ¦ rakudo/main: Try to fix mojibake rendering on github.com

[17:55] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0732084c6b

[17:56] <[Coke]> ... did nothing.

[17:57] <Geth> ¦ rakudo/main: d56a34ae79 | (Will Coleda)++ | 2 files

[17:57] <Geth> ¦ rakudo/main: Use top level .gitattributes file

[17:57] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d56a34ae79

[17:58] <[Coke]> ah well.

[18:18] <Geth> ¦ rakudo/main: 1c96328c52 | (Will Coleda)++ | docs/release_guide.pod

[18:18] <Geth> ¦ rakudo/main: fix encoding

[18:18] <Geth> ¦ rakudo/main: 

[18:18] <Geth> ¦ rakudo/main: (match suggested value in `perldoc perlpod`)

[18:18] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1c96328c52

[18:18] <[Coke]> my followup suggestion: if we can't have .rakudoc (this is an old school pod file), let's convert it to markdown.

[18:19] <[Coke]> then at least we get better rendering on github.

[18:19] <[Coke]> (none of my attempts there worked)

[19:12] *** vrurg joined
[19:12] *** andinus2 joined
[19:19] *** Geth left
[19:19] *** andinus left
[19:19] *** vrurg_ left
[19:19] *** [Tux] left
[19:20] *** Geth joined
[19:20] *** [Tux] joined
[19:39] <jdv> is rakudoc stable and usable?  

[19:40] <[Coke]> sorry - no. but that file is pod, not pod6

[19:41] <[Coke]> and if we can't have *pod6* rendering on github (which we can't, and rakudoc will be even further behind)... why use p5 pod?

[19:41] <[Coke]> made sense pre-christmas, but not now

[19:41] <jdv> i was gonna say itd be nice to get gh to support whatever we have but i guess noy

[19:45] <jdv> is pod6 not rakudoc?  i seem to be drifting out of date.

[19:47] <[Coke]> pod6 is what we launched with. rakudoc is a new standard that finanlyst is working on with liz & damian

[19:47] <jdv> ah

[19:49] <[Coke]> not to be confused with foo.rakudoc, which is a pod6 file! :)

[19:49] <ab5tract> jdv: fwiw the shifts between pod6 and rakudoc seem pretty nuanced to me

[20:09] <jdv> iirc the problem with pod6 is it requires raku

[20:10] <jdv> which id guess is why randos like gh wont

[20:12] <[Coke]> I think the most raku/github friendly combo is to have source in raku markup, but have a built markdown file we can check in that gets rendered.

[20:12] <[Coke]> App::Mi6 enables this for modules, we could steal it for rakudo itself.

[20:12] <[Coke]> it==the process

[20:39] <patrickb> Hopefully the RakuDoc on GitHub issue is soon a thing of the past. There are cunning plans in progress.

[20:41] <tbrowder> can anyone running macos and using home brew tell me how to get libfreetype  installed successfully in a workflows/macos.yml file?

[20:44] <tbrowder> my version can be seen at https://github.com/tbrowder/PDF-NameTags/blob/.github/workflows/macos.yml

[20:46] <tbrowder> bad link...correcting...

[20:51] <tbrowder> https://github.com/tbrowder/PDF-NameTags/blob/master/.github/workflows/macos.yml

[20:52] <tbrowder> link checks ok

[20:52] <tbrowder> afk&

[21:02] *** japhb left
[21:06] *** japhb joined
[21:25] *** finanalyst joined
[21:27] *** sena_kun left
[21:50] <Geth> ¦ rakudo: patrickbkr++ created pull request #5651: Proc::Async PTY support

[21:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5651

[21:50] *** finanalyst left
[21:52] <patrickb> ^ has a long way to go. But it does work! \o/

[21:55] <patrickb> Next step is putting https://raku.land/zef:japhb/Terminal::ANSIParser in front of that thing and hooking it up to Terminal::Widgets.

