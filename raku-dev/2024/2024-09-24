[01:30] *** nine left
[01:30] *** nine joined
[05:03] *** [Coke] left
[05:06] *** [Coke] joined
[07:00] <releasable6> Next release in ‚âà2 days and ‚âà11 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[07:46] *** sena_kun joined
[08:37] <ab5tract> https://github.com/Raku/problem-solving/issues/440

[09:10] <timo> i think to make all of this make sense, what we really need to do is allow abritrarily deeply nested protos

[09:10] *** finanalyst joined
[09:11] <timo> so that you can have as many "multi proto" as you need, and to constrain the protos themselves you can have a proto proto

[09:11] <timo> and when that doesn't suffice, just have a few multi proto proto, with optionally a proto proto proto to guide them

[09:12] <timo> then i think i want to build somethig i'd call The Proto Compiler which turns your entire program into one arbitrarily deeply nested and branched proto^n

[09:12] <timo> every program will then just be a single multi dispatch call. remarkably simple!

[09:25] <ab5tract> üòø

[09:36] <ab5tract> timo: I can't totally tell whether that's intended as a critique of having protos act as constraints on their candidates or not

[09:40] *** finanalyst left
[11:01] <timo> no just a bit of sillyness

[11:01] <timo> unicodable6__: üòø

[11:01] <unicodable6__> timo, U+1F63F CRYING CAT FACE [So] (üòø)

[11:02] <timo> i couldn't tell what that was because it's so small

[11:02] <timo> i didn't mean to make fun of you, sorry if it came across that way

[11:04] <timo> i can tell why it makes sense for the return value of the proto to be different from the candidates, but the example you cited in the issue is definitely not very convincing

[11:34] <ab5tract> If a proto wants to support arbitrary return values, why specify one in the first place?

[11:35] <ab5tract> Anyway, if you have

[11:35] <ab5tract> The tuits to share a more convincing example on the ticket, I think it would definitely help the conversation

[13:05] <timo> i'm sure there's good examples out there, but i'm having a hard time coming up with one on the spot

[13:14] <timo> hm, so the "wrestling-with-dispatch" blog post is kind of about how installing a new proto in a scope is how we handle "a multi candidate only has an effect while it's in lexical scope", right?

[13:15] <Geth> ¬¶ nqp/main: 782c3a0d4c | (Justin DeVuyst)++ | tools/templates/MOAR_REVISION

[13:15] <Geth> ¬¶ nqp/main: Bump MoarVM for release testing

[13:15] <Geth> ¬¶ nqp/main: review: https://github.com/Raku/nqp/commit/782c3a0d4c

[13:15] <Geth> ¬¶ rakudo/main: 0b6c7dc69d | (Justin DeVuyst)++ | tools/templates/NQP_REVISION

[13:15] <Geth> ¬¶ rakudo/main: Bump NQP for release testing

[13:15] <Geth> ¬¶ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0b6c7dc69d

[13:16] <timo> oh i think i might have skipped over the interesting bits of that post

[13:24] <timo> m: multi sub hi(Any $a) { say "Any" }; multi sub hi(Int $a) { say "Inty" }; my $thing; { multi sub hi(Int $a where * > 10) { say "big inty" }; say "from inside"; hi(99); $thing = &hi }; say "from outside"; hi(99); say "thing from outside:"; $thing(99);

[13:24] <camelia> rakudo-moar 2ee68bffd: OUTPUT: ¬´from inside‚ê§big inty‚ê§from outside‚ê§Inty‚ê§thing from outside:‚ê§big inty‚ê§¬ª

[13:57] <lizmat> unexpected CI failure: https://github.com/lizmat/Updown/actions/runs/11015255201/job/30587852041

[13:57] <lizmat> MoarVM panic: Heap corruption detected: pointer 0x5676a04ce48 to past fromspace

[14:00] <lizmat> not repeatable

[14:05] <patrickb> timo: The comment and reply in that blog post are important to notice.

[18:35] <jdv> weird, the blin proc died.  thats not normal.

[18:36] <jdv> might mean a oom or similar:(

[18:38] <jdv> the release may be delayed or aborted...

[19:00] <timo> on linux, you may see the reason for the process quit in the journal or if it's an oom even in dmesg

[19:01] <timo> if it did a crashing, look if "coredumpctl list" has something recent for you, if that's what's set up on your system

[19:23] *** sena_kun left
[19:30] <[Coke]> jdv: did you update your blin checkout before running?

[19:30] <[Coke]> either way, you might want to consider reversing that before trying again.

[19:31] <[Coke]> Apologies if it was my blin testing that caused your issue.

[19:43] <jdv> nope, the docker image is unchanged for a while.

[20:02] <timo> the other day i saw fedora-messaging, a publically readable AMQP message broker that shares events from all parts of the fedora infrastructure and beyond, like things happening on github for example; https://fedora-messaging.readthedocs.io/en/stable/user-guide/schemas.html has the kinds of events that go on it and each of the sections links to the datagrepper web UI tool where you can look at

[20:02] <timo> historical data: https://apps.fedoraproject.org/datagrepper/v2/search?rows_per_page=1&delta=127800

[20:02] <timo> i thought that's kinda cool

[20:02] <timo> not sure if it really applies to raku or would give much value, especially at first before much is hooked up to it

[20:24] *** finanalyst joined
[23:50] *** finanalyst left
