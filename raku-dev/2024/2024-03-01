[00:26] <japhb> jdv++

[01:35] *** MasterDuke joined
[01:36] <MasterDuke> jdv++

[01:37] <MasterDuke> i just tested the jvm build at 2024.01 and rakudo builds successfully with openjdk 11

[01:38] <MasterDuke> trying with openjdk21 now

[01:39] <MasterDuke> but it looks like the rakudo build broke somewhere between 2024.01 and 2024.02. i'll try to bisect it, but it'll take quite a while

[02:35] <MasterDuke> oh interesting, i get the `java.nio.BufferOverflowException in consume-line-chars (gen/jvm/stage2/NQPCORE.setting:830)` with openjdk 21 on 2024.01

[02:45] *** MasterDuke left
[02:54] *** MasterDuke joined
[03:10] *** MasterDuke left
[03:26] *** londoed joined
[03:26] *** londoed_ joined
[03:28] *** londoed_ left
[04:28] *** londoed left
[04:29] *** londoed joined
[04:33] *** nine left
[04:33] *** camelia left
[04:37] *** nine joined
[04:39] *** camelia joined
[05:21] *** londoed left
[09:30] <Geth> ¦ rakudo/main: 50fc728476 | (Elizabeth Mattijsen)++ | src/Perl6/bootstrap.c/BOOTSTRAP.nqp

[09:30] <Geth> ¦ rakudo/main: Streamline Attribute.new in bootstrap

[09:30] <Geth> ¦ rakudo/main: 

[09:30] <Geth> ¦ rakudo/main: Makes it about 5% faster.

[09:30] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/50fc728476

[09:30] <Geth> ¦ rakudo/main: eea99c2bd7 | (Elizabeth Mattijsen)++ | src/Perl6/bootstrap.c/BOOTSTRAP.nqp

[09:30] <Geth> ¦ rakudo/main: Some comment fixes

[09:30] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/eea99c2bd7

[09:31] <Geth> ¦ rakudo/main: 586f32cf3f | (Elizabeth Mattijsen)++ | src/core.c/Parameter.rakumod

[09:31] <Geth> ¦ rakudo/main: Add Parameter.of method

[09:31] <Geth> ¦ rakudo/main: 

[09:31] <Geth> ¦ rakudo/main: So that dd Parameter.new doesn't die

[09:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/586f32cf3f

[09:31] *** sena_kun joined
[09:56] *** sena_kun left
[10:10] <Geth> ¦ rakudo/main: 704fda6082 | (Elizabeth Mattijsen)++ | src/Perl6/bootstrap.c/BOOTSTRAP.nqp

[10:10] <Geth> ¦ rakudo/main: Streamline some bootstrap helper subs

[10:10] <Geth> ¦ rakudo/main: 

[10:10] <Geth> ¦ rakudo/main: Only helps with building of the bootstrap, but since I do that a

[10:10] <Geth> ¦ rakudo/main: lot...  :-)

[10:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/704fda6082

[10:25] <Geth> ¦ rakudo/main: 96c0a5d5db | (Elizabeth Mattijsen)++ | src/Perl6/bootstrap.c/BOOTSTRAP.nqp

[10:25] <Geth> ¦ rakudo/main: Streamline Signature.is_generic in bootstrap

[10:25] <Geth> ¦ rakudo/main: 

[10:25] <Geth> ¦ rakudo/main: Should probably be an attribute, set at build time, but this will

[10:25] <Geth> ¦ rakudo/main: do for now.

[10:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/96c0a5d5db

[10:43] <Geth> ¦ rakudo/main: 485fc8668b | (Elizabeth Mattijsen)++ | src/Perl6/bootstrap.c/BOOTSTRAP.nqp

[10:43] <Geth> ¦ rakudo/main: Streamline try_bind_sig helper sub in bootstrap

[10:43] <Geth> ¦ rakudo/main: 

[10:43] <Geth> ¦ rakudo/main: Allowing it to be inlined sooner

[10:43] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/485fc8668b

[14:53] *** finanalyst left
[15:04] <[Coke]> in an ideal world, it would be nice if jvm was always master clean, but I wonder if we could at least have a secondary branch that was for clean JVM builds that updated from master when the build (or make test) was clean.

[15:05] <[Coke]> Something to help reduce friction for our small number of JVM devs without adding too much friction for moarvm

[15:25] <Geth> ¦ rakudo/main: a4ac172076 | (Elizabeth Mattijsen)++ | src/Perl6/bootstrap.c/BOOTSTRAP.nqp

[15:25] <Geth> ¦ rakudo/main: Streamline general bind logic in bootstrap

[15:25] <Geth> ¦ rakudo/main: 

[15:25] <Geth> ¦ rakudo/main: - mostly for readability

[15:25] <Geth> ¦ rakudo/main: - re-arranged native type checking for smaller bytecode size

[15:25] <Geth> ¦ rakudo/main: - added some comments now that I understand it better

[15:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a4ac172076

[15:35] <patrickb> jdv: Precompiled release archives have been uploaded to rakudo.org. And now that I have my key back, I did the signing myself! \o/

[15:38] <[Coke]> patrickb++ jdv++

[15:58] *** vrurg_ joined
[16:01] *** vrurg left
[16:06] <jdv> patrickb: thanks!

[16:12] *** codesections1 joined
[16:17] *** japhb left
[16:21] *** japhb joined
[16:28] *** japhb left
[16:38] *** japhb joined
[16:42] *** codesections1 left
[16:43] *** japhb left
[17:34] *** japhb joined
[17:46] *** finanalyst joined
[17:48] *** japhb left
[17:52] *** japhb joined
[17:57] *** japhb left
[18:13] *** sena_kun joined
[18:23] *** japhb joined
[18:29] *** japhb left
[18:40] *** japhb joined
[18:47] *** japhb left
[18:49] *** finanalyst left
[19:12] *** japhb joined
[19:14] <[Coke]> it's been so long, do I need to setup a higher memory limit when building with jvm or should it default?

[19:16] <[Coke]> Trying the sample JAVA_OPTS from the readme.

[19:17] *** japhb left
[19:53] *** japhb joined
[19:59] *** japhb left
[20:17] <[Coke]> ... a networked git bisect where devs can register as part of a dev farm, results are saved with good/bad and then provisionally trusted (for these very long jvm bisects)

[20:22] <[Coke]> (I feel like AD's bot farm is already doing 99% of this)

[20:24] *** japhb joined
[20:31] <[Coke]> .tell masterduke - Tried building HEAD and 2024.01, both die with guarantee(requested_word_size <= chunklevel::MAX_CHUNK_WORD_SIZE) failed: Requested size too large (620714) - max allowed size per allocation is 524288.

[20:31] <tellable6> [Coke], I'll pass your message to MasterDuke

[20:31] <[Coke]> .tell Masterduke this on OSX w/ javac 20.0.2

[20:31] <tellable6> [Coke], I'll pass your message to MasterDuke

[21:00] *** lizmat_ left
[21:00] *** lizmat joined
[21:12] *** notna joined
[21:16] *** notna left
[23:19] *** japhb left
[23:35] <coleman> I am wondering if these emails to documentation@raku are a phishing attempt. See attached screenshot: https://github.com/Raku/infra/issues/47

[23:58] *** japhb joined
