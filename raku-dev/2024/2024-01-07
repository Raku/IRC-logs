[01:04] <jdv> i dont get this "it hasnt been updated..." so its not good thing

[01:05] <jdv> feels like it gotten worse in the last ~10y

[01:05] <japhb> lizmat: Wasn't it already, in the R::I form?

[01:08] <jdv> its almost as if "good enuf" is a foreign concept

[06:51] *** epony left
[06:58] *** epony joined
[08:14] *** epony left
[10:46] *** sena_kun joined
[10:59] *** sena_kun left
[11:00] *** sena_kun joined
[13:39] <Geth> ¦ rakudo/main: 3c7057c0f0 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Deparse.rakumod

[13:39] <Geth> ¦ rakudo/main: RakuAST: revise deparsing of meta ops

[13:39] <Geth> ¦ rakudo/main: 

[13:39] <Geth> ¦ rakudo/main: Instigated by Nahuel Pacheco's Pull Request #5511, it became clear

[13:39] <Geth> ¦ rakudo/main: that there were a number of thinko's regarding the deparsing of

[13:39] <Geth> ¦ rakudo/main: meta infix operators, such as double deparsings and improper

[13:39] <Geth> ¦ rakudo/main: highlighting handling.  These are nonw fixed.

[13:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3c7057c0f0

[13:47] <Geth> ¦ rakudo/main: c389de26a1 | Nahuel2998++ (committed by Elizabeth Mattijsen) | t/12-rakuast/meta-operators.rakutest

[13:47] <Geth> ¦ rakudo/main: RakuAST: add test for RakuAST::MetaInfix::Negate

[13:47] <Geth> ¦ rakudo/main: 

[13:47] <Geth> ¦ rakudo/main: Seems like there was no test for it, which led to the deparsing of !infix as infix! slipping away.

[13:47] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c389de26a1

[14:30] <Geth> ¦ rakudo/main: e1fef67314 | (Elizabeth Mattijsen)++ | 2 files

[14:30] <Geth> ¦ rakudo/main: RakuAST: properly handle a single whenever

[14:30] <Geth> ¦ rakudo/main: 

[14:30] <Geth> ¦ rakudo/main: Adds "any whenevers" and "single-list-whenever" helper methods to

[14:30] <Geth> ¦ rakudo/main: ::StatementList, to not have to wrap/unwrap statements being checked.

[14:30] <Geth> ¦ rakudo/main: 

[14:30] <Geth> ¦ rakudo/main: Adapts the expression QAST creation logic using these methods.  Not

[14:30] <Geth> ¦ rakudo/main: sure whether this will also need to be done for the supply case.

[14:30] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e1fef67314

[14:31] <lizmat> +1  985    brings back t/spec/S17-channel/basic.t

[14:33] *** epony joined
[14:39] *** epony left
[15:50] *** epony joined
[16:14] <Geth> ¦ nqp/main: e2d9c877ff | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[16:14] <Geth> ¦ nqp/main: Bump MoarVM for MasterDuke's native int_u fixes

[16:14] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/e2d9c877ff

[16:24] <Geth> ¦ rakudo/main: c0340fc7b7 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[16:24] <Geth> ¦ rakudo/main: Bump NQP to get MasterDuke++ native uint fixes

[16:24] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c0340fc7b7

[18:10] <Geth> ¦ rakudo/main: 4bfde24c43 | (Elizabeth Mattijsen)++ | src/Raku/ast/statements.rakumod

[18:10] <Geth> ¦ rakudo/main: RakuAST: fix thinkos in single-last-whenever

[18:10] <Geth> ¦ rakudo/main: 

[18:10] <Geth> ¦ rakudo/main: - handle empty statement lists without dying

[18:10] <Geth> ¦ rakudo/main: - actually *return* True if there is a single last whenever

[18:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4bfde24c43

[18:19] <Geth> ¦ rakudo/main: 91c157d2a9 | (Elizabeth Mattijsen)++ | src/Raku/ast/statementprefixes.rakumod

[18:19] <Geth> ¦ rakudo/main: RakuAST: give supply the same treatment as react

[18:19] <Geth> ¦ rakudo/main: 

[18:19] <Geth> ¦ rakudo/main: Introduce a ::StatementPrefix::Wheneverable base class for handling

[18:19] <Geth> ¦ rakudo/main: whenevers both in "react" as well as "supply".

[18:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/91c157d2a9

[18:20] <lizmat> this loses one file, but at least doesn't make the spectest hang anymore

[18:51] <Geth> ¦ rakudo/main: 3f6fff74a1 | (Elizabeth Mattijsen)++ | 3 files

[18:51] <Geth> ¦ rakudo/main: RakUAST: hopefully final tweak on wheneve detection

[18:51] <Geth> ¦ rakudo/main: 

[18:51] <Geth> ¦ rakudo/main: - add ::Block.any-whenevers helper method as a shortcut

[18:51] <Geth> ¦ rakudo/main: - add tests for whenevers embedded in blocks, recursively

[18:51] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3f6fff74a1

[18:57] <Geth> ¦ rakudo/main: 4 commits pushed by (Nick Logan)++

[18:57] <Geth> ¦ rakudo/main: cd231798d1 | Fix extra word in message

[18:57] <Geth> ¦ rakudo/main: 4d797bbb7b | Use more appropriate .raku/.gist for Distribution::Resource

[18:57] <Geth> ¦ rakudo/main: 7ac9aeab4d | Deprecate all Distribution::Resource IO::Path methods

[18:57] <Geth> ¦ rakudo/main: 225533d6f2 | Merge pull request #5507 from rakudo/ugexe/deprecate-more-resources-stuff

[18:57] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/3f6fff74a1af...225533d6f2a2

[19:47] *** AlexDaniel joined
[19:47] <AlexDaniel> c: HEAD say 42

[19:47] <committable6> AlexDaniel, ¦HEAD(4e68b53): «42␤»

[19:48] <AlexDaniel> o_o

[19:52] *** releasable6 left
[19:52] *** shareable6 left
[19:52] *** benchable6 left
[19:52] *** sourceable6 left
[19:52] *** bisectable6 left
[19:52] *** committable6 left
[19:53] <discord-raku-bot> <nemokosch> it worked!

[19:54] *** greppable6 joined
[19:55] *** bisectable6 joined
[19:55] *** sourceable6 joined
[19:55] *** coverable6 joined
[19:55] *** linkable6 joined
[19:55] *** unicodable6 joined
[19:55] *** quotable6 joined
[19:55] *** notable6 joined
[19:55] *** bloatable6 joined
[19:55] <AlexDaniel> it was a strange situation. All of my services were not responding and I couldn't even ssh into the box

[19:56] <AlexDaniel> but the bots were working… huh?

[19:56] *** nativecallable6 joined
[19:56] <AlexDaniel> at least some of them

[19:56] *** evalable6 joined
[19:56] *** benchable6 joined
[19:56] <lizmat> .tell lizmat I'm not schizo

[19:57] <lizmat> tellable still seems awol though ?

[19:57] *** shareable6 joined
[19:57] *** releasable6 joined
[19:57] *** committable6 joined
[19:57] *** tellable6 joined
[19:58] <AlexDaniel> .tell lizmat they join with a random delay for reasons™

[19:58] <tellable6> AlexDaniel, I'll pass your message to lizmat

[19:58] <discord-raku-bot> <nemokosch> awolnation

[19:58] <discord-raku-bot> <nemokosch> m: say 'L'

[19:58] <evalable6> nemokosch, rakudo-moar 4e68b5387: OUTPUT: «L␤»

[19:58] <discord-raku-bot> <Raku eval>  L 

[19:59] <discord-raku-bot> <nemokosch> dang

[19:59] <AlexDaniel> hm

[19:59] <tellable6> 2023-12-07T18:57:51Z #raku <nemokosch> AlexDaniel: what happened here?

[19:59] <discord-raku-bot> <nemokosch> legit

[19:59] <AlexDaniel> so what's up with that double eval?

[20:00] <lizmat> I guess evalable6 seeing that camelia didn't answer, answer for her

[20:01] <lizmat> *answered

[20:02] <AlexDaniel> hmmm

[20:02] <AlexDaniel> right

[20:02] <AlexDaniel> and where's camelia?

[20:03] <lizmat> m: say "here"

[20:03] <camelia> rakudo-moar 225533d6f: OUTPUT: «here␤»

[20:03] <lizmat> camelia isn't smart enough to recognize a m: from the discord-raku-bot 

[20:07] <AlexDaniel> ok, so all correct, but discord has its own eval now?

[20:07] <lizmat> apparently, yes

[20:08] <AlexDaniel> should evalable then not respond to m: from discord? Please make a PR to whateverable then

[20:17] <lizmat> possibly, ideally I would like to see camelia also recognize the discord-raku-bot's m:

[20:17] <lizmat> so that Discord wouldn't need to run its own eval bot

[20:18] <lizmat> so that evallable would be camelia's backup as beore

[20:18] <lizmat> *before

[20:18] <gfldex> Dicord usernames are not well defined anymore.

[20:20] <AlexDaniel> what do you mean? The bot shows up as discord-raku-bot quite consistently

[20:22] <gfldex> Discord dropped requirements from usernames. They used to be quite simple and always got a suffix of '#' and 4 digits. That is not the case anymore. So a username might contain '>'.

[20:57] <discord-raku-bot> <nemokosch> I mean to be fair the Discord eval is a kinda outdated container

[20:58] <discord-raku-bot> <nemokosch> I submitted an issue to bump the version - that was half a year ago, nothing is really happening

[20:58] <discord-raku-bot> <nemokosch> it's stuck at like 2022.02

[21:02] <AlexDaniel> so if evalable is doing the job, then just drop it?

[21:16] <discord-raku-bot> <nemokosch> yes, I think that might actually be a better solution now

[21:17] <discord-raku-bot> <nemokosch> or at least hooking into evalable some way, rather than having a completely separate setup

[22:54] *** sena_kun left
