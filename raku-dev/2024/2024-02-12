[01:04] *** benchable6 left
[01:04] *** bisectable6 left
[01:04] *** coverable6 left
[01:05] *** nativecallable6 left
[01:07] *** nativecallable6 joined
[01:07] *** coverable6 joined
[01:07] *** benchable6 joined
[01:07] *** bisectable6 joined
[01:08] *** MasterDuke left
[06:19] *** bartolin left
[07:46] *** sena_kun joined
[09:12] <nine> MasterDuke: pushed a fix for unsigned num

[09:12] <tellable6> nine, I'll pass your message to MasterDuke

[09:46] <lizmat> ugexe++

[10:10] *** sena_kun left
[11:04] <patrickb> That was an accidental push. Good to revert. Apart from that: Wow, a pure Raku parse tree export! *That's* a feature worth having. I'm looking forward to what comes of it. I hope this work won't block on the age old issue of BEGIN blocks executing during compilation. (GitHub won't allow user code to run and rightly so. So its always been an issue that Raku calls BEGIN blocks while parsing.)

[11:07] <lizmat> any Raku parsing that does not run BEGIN blocks, will be incomplete

[11:07] <lizmat> but it may get very close  :-)

[11:33] <patrickb> Yeah, no fancy need like monitor and other Slsyntax changing goodness. We do need a solution for the syntax highlighting / IDE domain that

[11:34] <patrickb> - works without begin

[11:34] <patrickb> - is robust wrt non valid Raku code

[12:04] <[Tux]> Rakudo v2024.01-31-ge93208ce7 (v6.d) on MoarVM 2024.01-4-g504a4d7b8

[12:04] <[Tux]> csv-test-xs-20      0.143 -  0.143

[12:04] <[Tux]> csv-ip5xs           0.267 -  0.272

[12:04] <[Tux]> test-t --race       0.291 -  0.305

[12:04] <[Tux]> test-t              0.433 -  0.434

[12:04] <[Tux]> csv-ip5xs-20        1.146 -  1.192

[12:04] <[Tux]> test-t-20 --race    1.225 -  1.251

[12:04] <[Tux]> csv-parser          1.595 -  1.618

[12:04] <[Tux]> test                1.954 -  1.974

[12:04] <[Tux]> test-t-20           5.251 -  5.311

[14:17] <Geth> ¦ nqp/main: 94ee052770 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[14:17] <Geth> ¦ nqp/main: Bump MoarVM for the latest tweaks/optimizations

[14:17] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/94ee052770

[14:32] <Geth> ¦ rakudo/main: 5c9156e268 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[14:32] <Geth> ¦ rakudo/main: Bump NQP to get latest MoarVM tweaks

[14:32] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5c9156e268

[14:38] <Geth> ¦ nqp/main: 3291cb41ce | (Elizabeth Mattijsen)++ | src/how/NQPClassHOW.nqp

[14:38] <Geth> ¦ nqp/main: Streamline NQPClassHOW

[14:38] <Geth> ¦ nqp/main: 

[14:38] <Geth> ¦ nqp/main: - make sure access to data structures is atomic as much as possible

[14:38] <Geth> ¦ nqp/main:   as there is no NQPLock yet at this stage, so there's no way to

[14:38] <Geth> ¦ nqp/main:   actually protect updates

[14:38] <Geth> ¦ nqp/main: - add some helper subs

[14:38] <Geth> ¦ nqp/main: - change for loops to while loops: clearer where accesses are made

[14:38] <Geth> ¦ nqp/main:   and while loops are faster on arrays than for loops

[14:39] <Geth> ¦ nqp/main: - added more comments (not nearly enough yet, though)

[14:39] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/3291cb41ce

[14:39] <Geth> ¦ nqp/main: 5ba8a74121 | (Elizabeth Mattijsen)++ | 11 files

[14:39] <Geth> ¦ nqp/main: Rebootstrap to be on the safe side

[14:39] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/5ba8a74121

[14:40] *** kjp left
[14:40] *** sivoais left
[14:40] *** leont left
[14:41] *** leont joined
[14:41] *** kjp joined
[14:50] *** sivoais joined
[15:47] <patrickb> Random info: One of the things that slowly makes it to the top of my to-do list is writing a Raku Lexer in Raku. My current idea is to reproduce https://github.com/alecthomas/chroma/blob/master/lexers/raku.go in Raku. (the chroma Lexer is the most advanced there is atm) I'm definitely going to look at the comma sources once they are released if there is anything to steal. Purpose of such a 

[15:47] <patrickb> lexer: just as written above, we do need a solution for syntax highlighting. We have quite some solutions for different editors/technologies, but none in Raku. This hurts building Raku tooling in Raku, amongst those: raku.land, docs.raku.org and the Raku TUI debugger frontend I plan to work on.

[15:50] <japhb> patrickb: You said the magic word 'TUI' ... what toolkit are you going to use for that?

[15:57] *** epony left
[16:01] <patrickb> japhb: Terminal::Widgets all the way. Not sure you remember, but that was on my core summit wish list...

[16:06] <japhb> Oh, there's a *lot* going on in T::W right now, so good to hear.

[16:07] <japhb> I haven't been able to push a lot because a fair amount of it is trying to get some APIs right, but I feel like that's falling into place.

[16:07] <japhb> Actually, I should rearrange my patches and at least push the ones that were pure bug fixes ....

[17:24] <Geth> ¦ nqp/main: 94b3eda428 | (Elizabeth Mattijsen)++ | src/how/NQPClassHOW.nqp

[17:24] <Geth> ¦ nqp/main: Add missing increment

[17:24] <Geth> ¦ nqp/main: 

[17:24] <Geth> ¦ nqp/main: Apparently this path is not taken in NQP, but *is* taken in Rakudo

[17:24] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/94b3eda428

[17:26] <jdv> is a tui much better than a gui?  idk.  its still not automatable.

[18:26] <lizmat> notable6: weekly

[18:26] <notable6> lizmat, 2 notes: 2024-02-10T16:38:25Z <lizmat>: https://twitter.com/gugod/status/1756321207396512118  ;  2024-02-12T05:56:08Z <antononcube>: https://rakuforprediction.wordpress.com/2024/02/12/llm-aids-for-processing-of-the-first-carlson-putin-interview/

[18:31] <lizmat> notable6: weekly reset

[18:31] <notable6> lizmat, Moved existing notes to “weekly_2024-02-12T18:31:01Z”

[18:42] *** sena_kun joined
[18:59] <patrickb> japhb: Please don't feel pushed. Working on the debugger is not that far up on my todo list. First need to get the Rakudo cibot running. And that has turned out to be a multi year project... :-P All of those Cro fixes, the epic supplies fix, my work on return vs leave are all bugfixes to get the cibot stable.

[19:01] <patrickb> At the moment the bot is segfaulting about every ten minutes. But I think I'm slowly approaching the ENOMOREBUGS moment.

[19:35] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/02/12/2024-07-dr-raku/

[19:44] *** epony joined
[20:07] <nine> lizmat++

[20:16] *** finanalyst joined
[21:53] *** finanalyst left
[22:15] *** sena_kun left
[22:36] <japhb> patrickb: \o/

