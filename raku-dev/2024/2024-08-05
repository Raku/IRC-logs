[03:15] *** vrurg joined
[03:16] *** vrurg_ left
[03:34] *** vrurg left
[03:34] *** vrurg joined
[07:11] *** sena_kun joined
[07:37] *** donaldh joined
[08:29] <Geth> ¦ rakudo/main: c5267fc7b7 | (Stefan Seifert)++ | src/Raku/ast/code.rakumod

[08:29] <Geth> ¦ rakudo/main: RakuAST: fix duplicate declaration checks not done in subs

[08:29] <Geth> ¦ rakudo/main: 

[08:29] <Geth> ¦ rakudo/main: Accidentally overwrote PERFORM-CHECK without calling the super class'

[08:29] <Geth> ¦ rakudo/main: one.

[08:29] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c5267fc7b7

[08:29] <Geth> ¦ rakudo/main: 05a9907e44 | (Stefan Seifert)++ | 5 files

[08:29] <Geth> ¦ rakudo/main: RakuAST: support use fatal

[08:29] <Geth> ¦ rakudo/main: 

[08:29] <Geth> ¦ rakudo/main: This replaces the previous attempt to support the fatal pragma.

[08:29] <Geth> ¦ rakudo/main: Fatalization is something that needs to happen on the caller side, not

[08:29] <Geth> ¦ rakudo/main: in the callee. An active fatal pragma in a scope means that any

[08:29] <Geth> ¦ rakudo/main: expressions yielding a Failure should throw an exception right there.

[08:29] <Geth> ¦ rakudo/main: Callees returning those Failures may be defined in completely different

[08:29] <Geth> ¦ rakudo/main: <…commit message has 12 more lines…>

[08:29] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/05a9907e44

[08:29] <nine> 1069

[08:39] <Geth> ¦ nqp/main: 8a9d65e23b | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[08:39] <Geth> ¦ nqp/main: Bump NQP for short string concat optimization

[08:39] <Geth> ¦ nqp/main: 

[08:39] <Geth> ¦ nqp/main: MasterDuke++

[08:39] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/8a9d65e23b

[08:48] <lizmat> nine: I assume the new sub &CORE::fatalize is something that will stay  ??

[08:51] <lizmat> 1069 confirmed   but breakage in make test

[08:55] *** sena_kun left
[09:01] <lizmat> nine: couldn't we codegen the call to &fatalize as a method call on a .fatalize method, and add a method fatalize to Failure (throwing the exception) and Mu (not doing anything) ?

[09:01] <lizmat> I'd rather not pollute the core names space with more subs

[09:02] <lizmat> wouldn't that make more sense ?

[09:06] <nine> Arguably that would be the worse kind of pollution as it would add a fatalize method to every object. As it is we specifically look up fatalize in the setting, so someone declaring their own fatalize sub would not interfere in any way

[09:07] <lizmat> ok, but then it would have to be ALLCAPS like all of the other core subs

[09:07] <lizmat> I'll make the necessary change ok ?

[09:09] <nine> Ok, thanks!

[09:09] <lizmat> OOC, isn't this a better solution?  https://github.com/rakudo/rakudo/blob/05a9907e4485fe481fdc3914cb3ece5a0e954a85/src/core.c/Block.rakumod#L33-L37

[09:17] <nine> No, it's actually quite wrong. As I tried to explain in the commit message, fatal is something that needs to happen at the caller's side. A POST phaser cannot make `dd 1 div 0` or `my str @a[1]; @a[2]` explode.

[09:18] <lizmat> ok, so the method is really bogus then...  hmmm

[09:18] <nine> Also even with fatal active, boolean context is supposed to defuse the failure:

[09:18] <nine> m: use fatal; if 1 div 0 { } else { say "survived" }

[09:18] <camelia> rakudo-moar 05a9907e4: OUTPUT: «survived␤»

[09:18] <lizmat> right, or .defined   yes

[09:19] <Geth> ¦ rakudo/main: 056c25e7ea | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[09:19] <Geth> ¦ rakudo/main: Bump NQP for short string concat optimization on MoarVM

[09:19] <Geth> ¦ rakudo/main: 

[09:19] <Geth> ¦ rakudo/main: MasterDuke++

[09:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/056c25e7ea

[09:21] <lizmat> make compilation about 2% faster

[09:35] <Geth> ¦ rakudo/main: 1c912bc5aa | (Elizabeth Mattijsen)++ | 11 files

[09:35] <Geth> ¦ rakudo/main: s/&fatalize/&FATALIZE/

[09:35] <Geth> ¦ rakudo/main: 

[09:35] <Geth> ¦ rakudo/main: System subs of this kind are ALLCAPS and marker "implementation-detail"

[09:35] <Geth> ¦ rakudo/main: if possible.  Also fix tests.

[09:35] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1c912bc5aa

[09:50] *** donaldh left
[09:54] <Geth> ¦ rakudo/main: aa0ad4c6e5 | (Elizabeth Mattijsen)++ | src/core.c/Block.rakumod

[09:54] <Geth> ¦ rakudo/main: RakuAST: remove simplistic approach to "use fatal"

[09:54] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/aa0ad4c6e5

[10:01] <Geth> ¦ nqp/main: 28d0522f34 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[10:01] <Geth> ¦ nqp/main: Bump MoarVM to get inadvertent debug info fix

[10:01] <Geth> ¦ nqp/main: 

[10:01] <Geth> ¦ nqp/main: Timo++

[10:01] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/28d0522f34

[10:09] <lizmat> nine: possbly another approach to "use fatal", that *would* be using a POST-like phaser

[10:09] <lizmat> an "arm" method on Failure that would throw the exception as soon as it is being used?  and that would be ignored by .Bool and .defined  ?

[10:10] <lizmat> and the POST phaser setting the "arm" flag ?

[10:11] <Geth> ¦ rakudo/main: 8fc83b3341 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[10:11] <Geth> ¦ rakudo/main: Bump NQP to get inadvertent debug info fix

[10:11] <Geth> ¦ rakudo/main: 

[10:11] <Geth> ¦ rakudo/main: Timo++

[10:11] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/8fc83b3341

[10:21] <nine> How would that make `use fatal; dd 1 div 0` explode?

[10:26] *** MasterDuke left
[10:38] <lizmat> well.. dd is a bad example: it does its best to show the real thing

[10:38] <lizmat> you mean: say 1 div 0 ?

[10:42] <lizmat> and if the "armed" setting would be exposed, then dd could check for that and explode

[11:02] <nine> Doesn't matter. You could also just take use fatal; my $i = 1 div 0;

[11:03] <lizmat> aah... ok, gotcha  :-)

[11:39] <patrickb> It just occurred to me, that freezing p6c was probably postponed to give authors some more time to adapt.

[11:40] <patrickb> It's been a while. Maybe now is a good time to actually do the freezing?

[11:41] <lizmat> yeah, I've been building up the courage for that

[11:42] <timo> be nice to the p6 corgi :o

[11:42] <lizmat> I guess the first step would be to exclude p6c from zef's default config

[12:19] <lizmat> notable6: weekly

[12:19] <notable6> lizmat, No notes for “weekly”

[12:24] <ugexe> p6c has been disabled in zef for over 2 years - https://github.com/ugexe/zef/commit/16e2e6414a4576d9abd9a0bdc65f9cf8dc48be30

[12:25] <lizmat> aha. so I should really remove p6c from the REA harvester  :-)

[12:43] *** patrickb left
[12:44] *** greenfork left
[12:44] *** greenfork joined
[12:44] *** patrickb joined
[12:55] <[Tux]> Rakudo v2024.07-67-g8fc83b334 (v6.d) on MoarVM 2024.07-7-g39b9b88c8

[12:55] <[Tux]> csv-test-xs-20      0.142 -  0.143

[12:55] <[Tux]> csv-ip5xs           0.259 -  0.261

[12:55] <[Tux]> test-t --race       0.264 -  0.269

[12:55] <[Tux]> test-t              0.399 -  0.407

[12:55] <[Tux]> csv-ip5xs-20        1.067 -  1.111

[12:55] <[Tux]> test-t-20 --race    1.156 -  1.161

[12:55] <[Tux]> csv-parser          1.491 -  1.496

[12:55] <[Tux]> test                1.853 -  1.908

[12:55] <[Tux]> test-t-20           4.842 -  4.936

[12:55] <[Tux]> https://tux.nl/Talks/CSV6/speed4-20.html / https://tux.nl/Talks/CSV6/speed4.html https://tux.nl/Talks/CSV6/speed.log

[12:55] <lizmat> alas, no new record  :-( 

[12:55] <lizmat> thanks [Tux] for running it

[12:56] <[Tux]> Cannot help that

[12:56] <lizmat> nope, you can't  :)

[12:58] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/08/05/2024-32-de-python/

[15:24] *** vrurg_ joined
[15:25] *** vrurg__ joined
[15:27] *** vrurg left
[15:29] *** vrurg_ left
[15:40] <Geth> ¦ rakudo/CREDITS: d9db4167da | (Will Coleda)++ | CREDITS

[15:40] <Geth> ¦ rakudo/CREDITS: Update CREDITS for Coke

[15:40] <Geth> ¦ rakudo/CREDITS: review: https://github.com/rakudo/rakudo/commit/d9db4167da

[15:40] <Geth> ¦ rakudo: coke++ created pull request #5616: Update CREDITS for Coke

[15:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5616

[15:58] <Geth> ¦ rakudo/main: 5068524f59 | (Will Coleda)++ (committed using GitHub Web editor) | CREDITS

[15:58] <Geth> ¦ rakudo/main: Update CREDITS for Coke

[15:58] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5068524f59

[16:08] <Geth> ¦ rakudo/main: a445da42f9 | (Patrick Böker)++ (committed using GitHub Web editor) | 2 files

[16:08] <Geth> ¦ rakudo/main: Fix precomp build

[16:08] <Geth> ¦ rakudo/main: 

[16:08] <Geth> ¦ rakudo/main: mirrorlist.centos.org is discontinued.

[16:08] <Geth> ¦ rakudo/main: https://serverfault.com/a/1161847

[16:08] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a445da42f9

[16:53] <lizmat> PSA: I have disabled updates of the Raku Ecosystem Archive for modules still living in p6c

[16:53] <lizmat> ugexe ^^

[16:53] <lizmat> afk&

[16:55] *** lizmat_ joined
[17:00] *** lizmat left
[17:36] *** sena_kun joined
[18:28] *** lizmat_ left
[18:28] *** lizmat joined
[19:26] *** vrurg__ left
[19:27] *** vrurg joined
[20:55] *** Altai-man joined
[20:57] *** sena_kun left
[21:22] *** Altai-man left
[21:57] *** MasterDuke joined
