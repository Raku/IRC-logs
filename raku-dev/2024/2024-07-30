[00:43] *** MasterDuke joined
[02:36] <MasterDuke> are there any concrete plans for the cardiff summit?

[03:08] *** vrurg joined
[03:10] *** vrurg_ left
[03:12] *** vrurg_ joined
[03:12] *** vrurg left
[08:08] *** sena_kun joined
[08:10] <lizmat> concrete as in: a possible date:   28/29 Ocober

[08:22] *** sena_kun left
[08:24] *** sena_kun joined
[08:25] *** sena_kun left
[08:29] <Geth> ¦ rakudo/rakuast-phase-cleanup: 44 commits pushed by (Jonathan Worthington)++, (Stefan Seifert)++

[08:29] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/compare/c987ce13d1e7...2abcda61b2b8

[08:29] <nine> just a rebase

[10:21] *** nine left
[10:21] *** nine joined
[10:52] *** rypervenche left
[10:52] *** rypervenche joined
[11:36] <patrickb> Re. RCS/2024, I'd love to be there, but I move the weekend 26/27. Maybe I can still somehow manage, but all bets are off.

[11:37] <lizmat> patrickb: understood...

[12:09] *** MasterDuke left
[12:28] <Geth> ¦ rakudo/main: 3cf2071790 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Deparse.rakumod

[12:28] <Geth> ¦ rakudo/main: RakuAST: fix deparsing of types on parameters

[12:28] <Geth> ¦ rakudo/main: 

[12:28] <Geth> ¦ rakudo/main: Move the check for Any to the original, unhighlighted name for now

[12:28] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3cf2071790

[13:38] <[Coke]> I will probably not be able to get there in time/take the time off. :sadface:

[13:38] <[Coke]> (I know it's a weekend but I have a slight bit of travel involved. :)

[13:39] <lizmat> well, the LPW is on Sat., the meeting is planned on Mon/Tue

[13:40] <lizmat> provisionally

[13:47] <[Coke]> OH, I looked at september, not october.

[13:48] <[Coke]> (having an extra month to wrangle PTO does help)

[14:59] *** vrurg_ left
[15:08] *** vrurg joined
[15:19] *** vrurg_ joined
[15:21] *** vrurg left
[15:57] *** vrurg joined
[15:58] *** vrurg_ left
[17:12] <[Coke]> seeing a bunch of Use of Nil in string context in any PERFORM-CHECK at src/Raku/ast/doc-block.rakumod line 164

[17:12] <[Coke]> (running xt/ tests in raku/doc)

[17:50] <[Coke]> echo "=begin pod\nC<<>>\n=end pod" | RAKUDO_RAKUAST=1 raku --doc -

[17:50] <[Coke]> Use of Nil in string context in any PERFORM-CHECK at src/Raku/ast/doc-block.rakumod line 164

[17:50] <[Coke]> lizmat: ^^

[17:52] <[Coke]> I think it's probably a document error, and should be C«<>», but also AST probably shouldn't be stringifying a nil.

[18:10] <nine> I get the impression that on the main branch RakuAST sometimes just works due to brute force, i.e. calling stuff multiple times and converging on a result. rakuast-phase-cleanup tries to replace this with a predictable model, but it's hard...

[18:11] *** sena_kun joined
[18:47] <Geth> ¦ rakudo/rakuast-phase-cleanup: 06096b7672 | (Stefan Seifert)++ | 2 files

[18:47] <Geth> ¦ rakudo/rakuast-phase-cleanup: RakuAST: fix implicits not found when applying role bodies

[18:47] <Geth> ¦ rakudo/rakuast-phase-cleanup: 

[18:47] <Geth> ¦ rakudo/rakuast-phase-cleanup: Fixes role R { my $.e; }; class C does R { }

[18:47] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/commit/06096b7672

[19:04] <[Coke]> lizmat: want me to open a ticket for that?

[19:08] <nine> Point in case, for: class Foo { has $.a; has $.b = $!a; } we call resolve-with on the RakuAST::Term::Self no less than 5 times and only the last call succeeds in resolving 'self'

[19:13] <lizmat> but self wouldn't resolve there?

[19:22] <lizmat> ah, for the $!a which becomes a nqp::getattr(self...)

[19:52] <Geth> ¦ nqp/main: db266cfe6b | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[19:52] <Geth> ¦ nqp/main: Bump MoarVM to get in-situ short strings

[19:52] <Geth> ¦ nqp/main: 

[19:52] <Geth> ¦ nqp/main: Co-production by Timo Paulssen, Bart Wiemans and Daniel Green

[19:52] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/db266cfe6b

[20:04] <Geth> ¦ rakudo/main: 934e861054 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[20:04] <Geth> ¦ rakudo/main: Bump NQP to get in-situ short strings on MoarVM

[20:04] <Geth> ¦ rakudo/main: 

[20:04] <Geth> ¦ rakudo/main: Co-production by Timo Paulssen, Bart Wiegmans and Daniel Green

[20:04] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/934e861054

[20:07] <nine> That's actually a really tricky problem. The RakuAST::VarDeclaration::Implicit::Self that this would resolve to is created as an implicit declaration of the method. The method itself is created synthetically to wrap the initializer and this happens at the variable declarations BEGIN time. This is after the variable access Parse time where we try to resolve it.

[20:13] <timo> so, fix-point-iteration? more proper dependency tracking/modeling?

[20:24] <ab5tract> I’ve definitely noticed the brute force-ness ( or at the very least, crazy redundant call count) before when tracing execution

[21:00] <nine> I think this is a case where we really have to try again at check time. Or maybe just cheat

[21:38] *** MasterDuke joined
[21:58] *** sena_kun left
