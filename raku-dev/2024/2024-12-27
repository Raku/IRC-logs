[08:53] *** [Tux] left
[08:57] *** [Tux] joined
[10:15] <lizmat> hmmm I seem to be missing something obvious

[10:17] <lizmat> dd $*REPO.candidates("Foo::Bar").head    # how do I get to the bytecode file from there ?

[10:17] <evalable6> lizmat, rakudo-moar 79fb513a1: OUTPUT: «Nil  = Nil␤Saw 1 occurrence of deprecated code.…»

[10:17] <evalable6> lizmat, Full output: https://gist.github.com/2e56e9c6623506ec1f0de67a8d97d904

[10:18] <lizmat> ugexe ^^   

[10:31] *** sena_kun joined
[10:40] <lizmat> (if any, of course)

[11:17] <lizmat> I'd like to be able to use a module name as an argument to https://raku.land/zef:lizmat/MoarVM::Bytecode .new

[11:39] <Geth> ¦ rakudo/main: b2dd11850e | (Elizabeth Mattijsen)++ | src/vm/js/CompUnit/Repository/FileSystemWithRecording.rakumod

[11:39] <Geth> ¦ rakudo/main: Fix obsolete reference to CompUnit::PrecompilationStore::File

[11:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b2dd11850e

[11:39] * lizmat wonders whether nine could give some pointers

[12:24] *** finanalyst joined
[12:33] *** finanalyst left
[12:34] *** finanalyst joined
[12:54] <finanalyst> [Coke] I want to test an update to Rainbow (the syntax highlighter) on docs-dev branch, but it is way behind main. Would you object to me deleting the docs-dev branch in order to clear it out?

[13:01] <Geth> ¦ rakudo/main: f57a989a1f | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Fixups.rakumod

[13:01] <Geth> ¦ rakudo/main: Make  A, P, and Δ = Capital Greek Delta) produce AST like markup X

[13:01] <Geth> ¦ rakudo/main: 

[13:01] <Geth> ¦ rakudo/main: Fixes #5721

[13:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f57a989a1f

[13:20] <Geth> ¦ nqp/main: ea21704bc7 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[13:20] <Geth> ¦ nqp/main: Bump NQP to get gdb extensions fix

[13:20] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/ea21704bc7

[13:22] <finanalyst> .tell [Coke] I want to test an update to Rainbow (the syntax highlighter) on docs-dev branch, but it is way behind main. Would you object to me deleting the docs-dev branch in order to clear it out?

[13:40] <guifa> So I'm going to probably add one more argument to IO::Socket::Async.bind-udp, nqp::asyncudp, and MVM_io_socket_udp_async

[13:41] <lizmat> ++guifa

[13:43] <guifa> When compiling NQP I cannot seem to get it to recognize that new number of arguments -- I've updated things in asyncsocketudp.c, asyncsocketudp.h, interp.c

[13:45] <lizmat> guifa: perhaps it needs tweaking in nqp/src/vm/moar/QAST/QASTOperationsMAST.nqp

[13:46] <guifa> yeah that's where it's erroring out

[13:46] <lizmat> lines 2284 and later

[14:06] <guifa> I'm not seeing what I need to change there -- the only reference I can see  to asyncudp anywhere is in the list of ops to be mapped.  The error is coming from line 153 in that file

[14:06] <guifa> Trying to work backwards to figure out where it's getting the list.

[14:08] <lizmat> maybe asyncudp is in the wrong map now ?

[14:39] <guifa> I don't think so.  Going from 6 to 7 args but returning the same value I don't think should shift that

[14:43] <lizmat> then I'm out of suggestions

[14:43] <lizmat> perhaps ask on #moarvm

[16:12] <[Tux]> Rakudo v2024.12-28-gf57a989a1 (v6.d) on MoarVM 2024.12-10-g1c2ea87e7

[16:12] <[Tux]> csv-test-xs-20      0.142 -  0.142

[16:12] <[Tux]> test-t --race       0.266 -  0.276

[16:12] <[Tux]> csv-ip5xs           0.259 -  0.269

[16:12] <[Tux]> test-t              0.412 -  0.414

[16:12] <[Tux]> csv-ip5xs-20        1.123 -  1.174

[16:12] <[Tux]> test-t-20 --race    1.281 -  1.303

[16:12] <[Tux]> csv-parser          1.519 -  1.520

[16:12] <[Tux]> test                1.889 -  1.891

[16:12] <[Tux]> test-t-20           5.047 -  5.133

[16:12] <[Tux]> https://tux.nl/Talks/CSV6/speed4-20.html / https://tux.nl/Talks/CSV6/speed4.html https://tux.nl/Talks/CSV6/speed.log

[18:04] <[Coke]> finanalyst: that's fine

[18:05] <finanalyst> [Coke] thanks.

[19:00] <coleman> finanalyst: When your first build is pushed to docs-dev, I will need to hit a switch on the server to turn autodeploy back on. Right now docs-dev is tracking main

[19:01] <coleman> https://buildkite.com/raku/doc-website/builds?branch=docs-dev is where your build will show up.

[21:42] <finanalyst> coleman: can we have a conversation about this? I want to do what should be a relatively minor change to main, but docs-dev is definitely not in sync with main

[21:51] <coleman> you can feel free to it with --force

[21:51] <coleman> that will reset it to whatever your local branch is. it won't affect production.

[21:52] <coleman> after that initial force push you can push normally. 

[21:53] <coleman> alternatively, you can push your work to a branch with a different name. send me that name and I can do the hard reset stuff on your behalf at first 

[22:03] <coleman> finanalyst: I sent you an email with a few example git commands you can run to get docs-dev in sync with the latest main. Feel free to reply in email or here on IRC. I'll see it.

[22:04] <finanalyst> coleman: reading it now. thanks. I'll get back if I need to.

[22:04] <coleman> sounds good

[22:15] <coleman> I see that docs-dev is currently building. I'll update the auto-deploy mechanism after it succeeds.

[22:26] <lizmat> timo ab5tract about the DYNAMIC trick yesterday: I couldn't resist: https://raku.land/zef:lizmat/auto-dynamic

[22:27] <timo> do you think we should make a namespace in our ecosystem called SCNR?

[22:28] <lizmat> Selective Non-Catalytic Reduction

[22:28] <lizmat> ?

[22:29] <ab5tract> Super Nominative Coalescing Revolution!

[22:35] <ab5tract> Oops, got the c and r swapped

[22:35] <ab5tract> *c and n

[22:36] <timo> Superb Capybaras and Normal Rhinoceri

[22:40] <finanalyst> coleman: I followed your instructions, seems to have worked on my end. 

[22:41] <finanalyst> Just created a PR to make the small changes to the syntax highlighter

[22:41] <timo> lizmat: i actually meant "Sorry, Could Not Resist"

[22:42] <Geth> ¦ nqp/main: 9a843dc6ed | (Timo Paulssen)++ (committed by timo) | src/vm/moar/QAST/QASTCompilerMAST.nqp

[22:42] <Geth> ¦ nqp/main: Verify some sizes in qast compiler mast

[22:42] <Geth> ¦ nqp/main: 

[22:42] <Geth> ¦ nqp/main: If any of the section offsets overflow the 32bit offset

[22:42] <Geth> ¦ nqp/main: number that we write to the file, we throw an exception.

[22:42] <Geth> ¦ nqp/main: 

[22:42] <Geth> ¦ nqp/main: If any frame has more than 65534 locals or lexicals,

[22:42] <Geth> ¦ nqp/main: we throw an exception.

[22:42] <Geth> ¦ nqp/main: If there are more than 65534 frames, we throw an

[22:42] <Geth> ¦ nqp/main: exception as well.

[22:42] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/9a843dc6ed

[22:46] <coleman> finanalyst: your updates to docs-dev will deploy themselves in ~15 minutes. I'll be watching to make sure it works. Your PR looks good at first glance. Now we wait for the build.

[23:10] <finanalyst> coleman: the docs-dev build succeeded. I looked at docs-dev.raku.org, the changes have gone through correctly

[23:11] <finanalyst> [Coke]++ has reviewed them, so I am merging to main

[23:11] <coleman> finanalyst: go for it

[23:11] <finanalyst> coleman: thank you.

[23:12] <coleman> What changes should we look for 

[23:12] <coleman> the new rainbow highlighter upgrade?

[23:12] *** sena_kun left
[23:18] <timo> it's not actually a big impact on startup time, but nqp::numcpus or what it's called uses uv_cpu_info which gets detailed information about every CPU core you have, even though all we want is the total number of CPUs

[23:18] <timo> looks funny in a syscall tracer

[23:19] <timo> the more cores your cpu has, the more syscalls we do at startup, which is also a thing that that benchmark from the other day counts

[23:19] <coleman> we were middle of the road on syscalls, though

[23:20] <timo> well, it also depends on how many cores the person who ran the has :D

[23:22] <finanalyst> coleman: In a code block, say the first code snippet in https://docs-dev.raku.org/language/pod there are `span` elements with classes like RAKUDOC_TEXT instead of POD_TEXT

[23:23] <finanalyst> Currently, I haven't colored them, so all RAKUDOC_TExT is black, but it could be styled differently

[23:25] <finanalyst> take a look at the first code block after https://finanalyst.github.io/samples/rakudoc#Placement%20links

[23:31] <timo> rakudoc now with TeX support? :)

[23:31] <coleman> Your changes should be on https://docs-dev.raku.org as well as production

[23:31] <coleman> I triggered a prod deploy

[23:34] <timo> https://gist.github.com/timo/114ec972bd7468d52cf5ed8128bc4e68 here's the syscalls with absolute timings (and time spent inside the syscall in parenthesis next to it)

[23:34] <timo> you can see the uv_cpu_info is not taking much time

[23:40] <timo> hm, i'm not sure why i don't see filenames here of the moarvm bytecode files that we must be opening for reading here

[23:41] <timo> i guess that's what i get from "perf trace record" vs "perf trace"

[23:45] <timo> 4.210 into the run time i see the statx for perl6/runtime/perl6.moarvm, 0.010 later the openat; 4.318 is ModuleLoader.moarvm, 7.257 might be the last bit of nqp's pieces, which is nqp/lib/MASTNodes.moarvm

[23:46] <timo> ah, no P5QRegex and P6QRegex come a bit later

[23:46] <timo> as a dependency of Perl6/Grammar.moarvm

[23:47] <lizmat> would merging P5QRegerx and P6QRegex into a single bytecode file help with startup ?

[23:48] <timo> 35.883 is when we look for and load the CORE.d.setting.moarvm file

[23:48] <timo> i don't think it would noticeably help

[23:50] <Geth> ¦ rakudo/main: f12ff834d1 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[23:50] <Geth> ¦ rakudo/main: Bump NQP to get gdb extensions fix

[23:50] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f12ff834d1

[23:50] <timo> for some reason we are looking for/at ModuleLoader.moarvm multiple times over the course of the runtime. maybe to see if it's changed since the last time?

[23:51] <lizmat> the whole module loader bootstrap is .... interesting

[23:51] <timo> :)

[23:52] <lizmat> I also wonder whether it would make sense to create a single bytecode files for 6.c / 6.c + 6.d / 6.c + 6.d + 6.e /

[23:53] <lizmat> loading the 6.d setting over the 6.c setting needs to do the same work over and over again for every startup

[23:54] <timo> ok, so dependencies+deserialize is generated to first loadbytecode("ModuleLoader.moarvm")

[23:57] <timo> and the first thing it does is look through the libpath to see where the correct ModuleLoader.moarvm lives

[23:57] <timo> that's exactly why it shows up in the syscalls

[23:58] <timo> after it finds the actual path, it sees that we've already loaded it and goes on with its lif

[23:59] <Geth> ¦ rakudo/main: 0bf65ec794 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[23:59] <Geth> ¦ rakudo/main: Bump NQP to get size checks in qast compiler mast

[23:59] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0bf65ec794

[23:59] <timo> the time it takes to do that is really not much

