[00:41] *** finanalyst left
[00:42] *** finanalyst joined
[01:04] *** finanalyst left
[08:45] *** sena_kun joined
[09:55] *** finanalyst joined
[11:27] <lizmat> MasterDuke: I have no ided

[11:27] <lizmat> *idea

[11:48] *** finanalyst left
[14:40] *** timo left
[15:10] <Geth> ¦ nqp/main: c80b1f7916 | (Elizabeth Mattijsen)++ | 3 files

[15:10] <Geth> ¦ nqp/main: Streamline NQPCapture

[15:10] <Geth> ¦ nqp/main: 

[15:10] <Geth> ¦ nqp/main: - remove BUILD method, bind to attributes directly

[15:10] <Geth> ¦ nqp/main: - rename internal name from @!array to `@list, to match method naming

[15:10] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/c80b1f7916

[15:27] <Geth> ¦ rakudo/main: 70efd5f3ce | (Elizabeth Mattijsen)++ | 2 files

[15:27] <Geth> ¦ rakudo/main: Bump NQP to get NQPCapture streamlining

[15:27] <Geth> ¦ rakudo/main: 

[15:27] <Geth> ¦ rakudo/main: Also fix a naught poke into NQPCapture internals in Raku

[15:27] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/70efd5f3ce

[15:41] <Geth> ¦ nqp/main: e466ce5254 | (Elizabeth Mattijsen)++ | 2 files

[15:41] <Geth> ¦ nqp/main: Streamline NQPMu

[15:41] <Geth> ¦ nqp/main: 

[15:41] <Geth> ¦ nqp/main: - readability

[15:41] <Geth> ¦ nqp/main: - don't bother using .CREATE

[15:41] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/e466ce5254

[15:59] *** MasterDuke left
[16:59] <Geth> ¦ nqp/main: 96d8640dae | (Elizabeth Mattijsen)++ | src/core/NQPRoutine.nqp

[16:59] <Geth> ¦ nqp/main: Streamline NQPRoutine

[16:59] <Geth> ¦ nqp/main: 

[16:59] <Geth> ¦ nqp/main: And NQPSignature, RegexCaptures and NQPRegex

[16:59] <Geth> ¦ nqp/main: 

[16:59] <Geth> ¦ nqp/main: Mostly replacing <foo> by atkey(..,'foo') and [42] by atpos(..., 42)

[16:59] <Geth> ¦ nqp/main: where possible (prefix increment in hashes requires <foo> lookup).

[16:59] <Geth> ¦ nqp/main: Also prevent repeated array and hash lookups as much as possble.

[16:59] <Geth> ¦ nqp/main: 

[16:59] <Geth> ¦ nqp/main: I wonder why these knowhows don't live in the src/how directory

[16:59] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/96d8640dae

[18:27] <Geth> ¦ nqp/main: d3a20aa4d3 | (Elizabeth Mattijsen)++ | src/core/Regex.nqp

[18:27] <Geth> ¦ nqp/main: Streamline match() / subst()

[18:27] <Geth> ¦ nqp/main: 

[18:27] <Geth> ¦ nqp/main: - while loops instead of for loops

[18:27] <Geth> ¦ nqp/main: - handle invokable seperately from non-invokable

[18:27] <Geth> ¦ nqp/main: - use native string array for result of subst

[18:27] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/d3a20aa4d3

[18:31] * japhb idly wonders if all this NQP hacking (lizmat++) will mean that things like the inlining threshold would need a tune as well

[18:51] <Geth> ¦ nqp/main: f9ef9d7cf3 | (Elizabeth Mattijsen)++ | src/core/testing.nqp

[18:51] <Geth> ¦ nqp/main: Streamline testing logic

[18:51] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/f9ef9d7cf3

[19:52] <Geth> ¦ nqp/main: 0fe437c877 | (Elizabeth Mattijsen)++ | src/QRegex/Cursor.nqp

[19:52] <Geth> ¦ nqp/main: First part of streamlining NQPMatchRole

[19:52] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/0fe437c877

[19:54] <lizmat> japhb: possibly

[20:18] *** MasterDuke joined
[20:18] <MasterDuke> ugh, my internet connection has gotten so flaky

[21:09] *** finanalyst joined
[21:26] *** timo joined
[21:51] <MasterDuke> huh. i'm in gdb at the nqp::istype (https://github.com/MoarVM/MoarVM/blob/main/src/core/interp.c#L1720) of `if nqp::istype($expected, Positional) {` and `p MVM_6model_get_debug_name(tc, obj)` is 'Positional', but `p MVM_6model_get_debug_name(tc, type)` is 'NQPMu'

[21:56] <MasterDuke> maybe because Positional is a role?

[22:31] <vrurg> No, it means the name is not in the scope.

[22:31] <vrurg> NQP fallbacks to NQPMu when can't resolve a symbol.

[22:36] <MasterDuke> hm. any other way than string checking the name then?

[22:37] <MasterDuke> doh, couple lines above is `if nqp::eqaddr($param_type, $Positional)`, i'll try that

[22:38] <vrurg> Exactly. 

[22:38] <vrurg> Actually, particular solution depends on where the code is located. In your case it looks like grammar, or actions, or World case.

[22:39] <MasterDuke> signature binder in the bootstrap

[22:40] <vrurg> Hm, the link you provided above points into error reporting. I see no Positional somewhere around.

[22:40] <MasterDuke> it's the error if the bind fails

[22:41] <vrurg> Anyway, here is the answer how it gets there: https://github.com/rakudo/rakudo/blob/70efd5f3cedf72a50fedde436b88fe014d140c15/src/Perl6/bootstrap.c/BOOTSTRAP.nqp#L176

[22:41] <MasterDuke> yep. i'm working down at line 288

[22:42] <vrurg> The point is that bootstrap doesn't declare Raku roles. So, they don't exists there.

[22:42] <vrurg> The only way for it to know about any role is either via hllsym API, or by manually registering them by the CORE code.

[22:52] <MasterDuke> looks like this is working now. will run a last spectest and create the PR later tonight

[22:52] <MasterDuke> thanks

[23:04] *** timo left
[23:04] *** timo joined
[23:20] *** timo left
[23:22] *** timo joined
