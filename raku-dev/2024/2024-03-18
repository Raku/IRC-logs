[02:12] *** MasterDuke joined
[02:15] <MasterDuke> .

[02:15] <tellable6> 2024-03-17T13:10:53Z #raku-dev <lizmat> MasterDuke you broke the build of NQP on MacOS

[02:15] <tellable6> 2024-03-17T13:12:12Z #raku-dev <lizmat> MasterDuke and thus the build of Rakudo  :-(

[02:16] <tellable6> 2024-03-17T13:15:02Z #raku-dev <lizmat> MasterDuke: https://gist.github.com/lizmat/16321bbfe4ac89628ae252ef87c97467

[02:17] <MasterDuke> lizmat: doh. i got so excited i figured it out i pushed without even thinking about other platform. it also broke on windows. my bad

[02:18] <MasterDuke> vrurg: is there a way to do platform-dependent stuff in the makefile template?

[02:18] <vrurg> MasterDuke: not sure. Let me see.

[02:19] <vrurg> Ah, of course!

[02:19] <MasterDuke> or is there a way to get make to check the modification times of the sources files instead of the generated file?

[02:19] <vrurg> @if(platform!=windows

[02:20] <vrurg> Generated files must depend on the sources they're made of.

[02:20] <vrurg> And they do, unless something is missing.

[02:21] <vrurg> Check for receipts with GEN_CAT 

[02:22] *** MasterDuke48 joined
[02:22] <MasterDuke48> ugh, /me is annoyed with this usb wifi adapter

[02:23] <vrurg> Have you seen my replies?

[02:23] <MasterDuke48> hm. i'm not sure what you mean by 'check for receipts'?

[02:23] <MasterDuke48> have you seen what happened yesterday+today?

[02:24] <vrurg> Makefile receipt is the commands a target is executing to be fulfilled. 

[02:24] *** MasterDuke left
[02:24] <vrurg> No, I barely follow IRC these days.

[02:25] <MasterDuke48> https://github.com/Raku/nqp/blob/main/tools/templates/Makefile-backend-common.in#L137-L141 runs every time you `make test`. it recompiles P5QREGEX

[02:27] <MasterDuke48> because it GEN_CATs the files and so of course the new file has a newer modification date and gets recompiled. i tried to fix this by `touch`ing the generated file's modification date to the newest of the sources files

[02:27] <vrurg> Ah, this part. Well, back then when I was implementing the templates, it was confusing me too. I tried to closely reproduce the previous makefile approach. It's likely that it was always they way it is.

[02:28] <vrurg> Touching is a very bad idea.

[02:28] <MasterDuke48> but if there's a way to get make to rely on the modification dates of the source files instead of the generated file i wouldn't have to do that

[02:45] <vrurg> It has to depend on other files. One just must find out which ones exactly. Maybe I overlooked something and added something extra?

[02:48] <vrurg> What I see is that it (for moar backend) depends on nqp-m and nqp.moarvm.

[02:48] <vrurg> Perhaps this is what triggers rebuilds?

[02:51] <vrurg> MasterDuke48: Try removing @bsm(NQP)@ in Makefile-backend-common.in. It also worth replacing @bpm(BUILD_RUNNER)@ with @bpm(BUILD_RUNNER_BIN)@. 

[02:52] <vrurg> Though the latter is anyway depends on BUILD_RUNNER, but it's more reliable to have direct dependency on what the actual recepipt is using.

[02:54] <MasterDuke48> that seems to be working...

[02:57] <vrurg> Good. It was giving me some headaches back then, I was happy to get it working somehow. :)

[03:20] *** kjp left
[03:23] *** kjp joined
[03:30] <Geth> ¦ nqp: MasterDuke17++ created pull request #815: Don't (re)compile P5QREGEX every time test are run

[03:30] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/815

[07:42] *** MasterDuke48 left
[07:49] *** sena_kun joined
[09:39] <Geth> ¦ rakudo/main: cf474c929a | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/MethodContainer.nqp

[09:39] <Geth> ¦ rakudo/main: Streamline Metamodel::MethodContainer role

[09:39] <Geth> ¦ rakudo/main: 

[09:39] <Geth> ¦ rakudo/main: - change for loops into while loops where possible

[09:39] <Geth> ¦ rakudo/main: - abstract error handling into separate method

[09:39] <Geth> ¦ rakudo/main: - reduce null checks, they appear to not be necessary

[09:39] <Geth> ¦ rakudo/main: - simplify "handles" check

[09:39] <Geth> ¦ rakudo/main: - simplify caching logic

[09:39] <Geth> ¦ rakudo/main: - abstract method introspection logic into a sub

[09:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cf474c929a

[09:56] <Geth> ¦ rakudo/main: ae5262543c | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/PrivateMethodContainer.nqp

[09:56] <Geth> ¦ rakudo/main: Streamline Metamodel::PrivateMethodContainer

[09:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ae5262543c

[10:54] <lizmat> greppable: @!multi_methods_to_incorporate

[10:54] <greppable6> lizmat, Found nothing!

[11:13] *** sjn left
[11:13] *** sjn joined
[11:26] <Geth> ¦ rakudo/main: 9395af5d88 | (Elizabeth Mattijsen)++ | t/harness6

[11:26] <Geth> ¦ rakudo/main: Unbreak t/harness

[11:26] <Geth> ¦ rakudo/main: 

[11:26] <Geth> ¦ rakudo/main: It was broken since fa9cd8ef55 and nobody noticed :-(

[11:26] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/9395af5d88

[11:36] <lizmat> greppable6: add_multi_method

[11:36] <greppable6> lizmat, 20 lines, 5 modules: https://gist.github.com/9923394219340854b485d706255227a3

[12:34] *** Geth left
[12:35] *** Geth joined
[12:35] <Geth> ¦ rakudo/main: 57c929695d | (Elizabeth Mattijsen)++ | 2 files

[12:35] <Geth> ¦ rakudo/main: Add a Metamodel::Locking role

[12:35] <Geth> ¦ rakudo/main: 

[12:35] <Geth> ¦ rakudo/main: This provides a "protect" method that will ensure that any code

[12:35] <Geth> ¦ rakudo/main: given will be executed by one thread at a time for a given

[12:35] <Geth> ¦ rakudo/main: metamodel class instance.

[12:35] <Geth> ¦ rakudo/main: 

[12:35] <Geth> ¦ rakudo/main: This just adds the logic, it is not being used anywhere yet.

[12:35] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/57c929695d

[12:36] <Geth> ¦ rakudo/main: a55e7fd033 | (Elizabeth Mattijsen)++ | 2 files

[12:36] <Geth> ¦ rakudo/main: Apply locking to Metamodel::Composing role

[12:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a55e7fd033

[12:54] <Geth> ¦ Template6: paultcochrane++ created pull request #29: Link to initial mention of Template Toolkit in README

[12:54] <Geth> ¦ Template6: review: https://github.com/raku-community-modules/Template6/pull/29

[12:55] <Geth> ¦ Template6/main: 2106f47656 | (Paul Cochrane)++ (committed using GitHub Web editor) | lib/Template6.rakumod

[12:55] <Geth> ¦ Template6/main: Link to initial mention of Template Toolkit in README (#29)

[12:55] <Geth> ¦ Template6/main: 

[12:55] <Geth> ¦ Template6/main: ... so that it's easier to navigate to the relevant background

[12:55] <Geth> ¦ Template6/main: information when reading the README online.

[12:55] <Geth> ¦ Template6/main: review: https://github.com/raku-community-modules/Template6/commit/2106f47656

[13:06] <Geth> ¦ Template6: paultcochrane++ created pull request #30: Link to internal modules mentioned in README

[13:06] <Geth> ¦ Template6: review: https://github.com/raku-community-modules/Template6/pull/30

[13:13] <Geth> ¦ Template6/main: 3bbe60033e | (Paul Cochrane)++ (committed using GitHub Web editor) | lib/Template6.rakumod

[13:13] <Geth> ¦ Template6/main: Link to internal modules mentioned in README (#30)

[13:13] <Geth> ¦ Template6/main: 

[13:13] <Geth> ¦ Template6/main: ... so that it's easier to navigate to the relevant file when viewing

[13:13] <Geth> ¦ Template6/main: the README online.

[13:13] <Geth> ¦ Template6/main: review: https://github.com/raku-community-modules/Template6/commit/3bbe60033e

[13:16] <Geth> ¦ Template6: paultcochrane++ created pull request #31: Format code-like text as code in README

[13:16] <Geth> ¦ Template6: review: https://github.com/raku-community-modules/Template6/pull/31

[13:19] <Geth> ¦ Template6/main: ed33ac13e8 | (Paul Cochrane)++ (committed using GitHub Web editor) | lib/Template6.rakumod

[13:19] <Geth> ¦ Template6/main: Format code-like text as code in README (#31)

[13:19] <Geth> ¦ Template6/main: 

[13:19] <Geth> ¦ Template6/main: ... so that it stands out in the docs more obviously as code and thus

[13:19] <Geth> ¦ Template6/main: the context is implicitly clearer when reading the docs.

[13:19] <Geth> ¦ Template6/main: review: https://github.com/raku-community-modules/Template6/commit/ed33ac13e8

[13:47] <Geth> ¦ rakudo/main: dce688d43a | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/Configuration.nqp

[13:47] <Geth> ¦ rakudo/main: Streamline Metamodel::Configuration

[13:47] <Geth> ¦ rakudo/main: 

[13:47] <Geth> ¦ rakudo/main: - centralize/optimize null state

[13:47] <Geth> ¦ rakudo/main: - use more ternaries

[13:47] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/dce688d43a

[14:03] <Geth> ¦ rakudo/main: 7ab1bba3b6 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/Concretization.nqp

[14:03] <Geth> ¦ rakudo/main: Move Metamodel::Concretization to use ::Locking

[14:03] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7ab1bba3b6

[14:03] <Geth> ¦ rakudo/main: 68628fe35b | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/ParametricRoleHOW.nqp

[14:03] <Geth> ¦ rakudo/main: Move Metamodel::ParametricRoleHOW to use ::Locking

[14:03] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/68628fe35b

[14:30] <Geth> ¦ rakudo/main: cf46bd5ecd | (Elizabeth Mattijsen)++ | 4 files

[14:30] <Geth> ¦ rakudo/main: Move Metamodel::C3MRO to use ::Locking

[14:30] <Geth> ¦ rakudo/main: 

[14:30] <Geth> ¦ rakudo/main: And added ::Locking role to classes that now need it

[14:30] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cf46bd5ecd

[14:43] <Geth> ¦ rakudo/main: 20fbb0f106 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/MetaMethodContainer.nqp

[14:43] <Geth> ¦ rakudo/main: Move Metamodel::MetaMethodContainer to use ::Locking

[14:43] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/20fbb0f106

[15:05] <Geth> ¦ rakudo/main: 67c3b6628d | (Elizabeth Mattijsen)++ | 2 files

[15:05] <Geth> ¦ rakudo/main: Ensure Metamodel::MethodContainer uses protection

[15:05] <Geth> ¦ rakudo/main: 

[15:05] <Geth> ¦ rakudo/main: Also make sure Metamodel::EnumHOW does the ::Locking role, as it's

[15:05] <Geth> ¦ rakudo/main: also a consumer of Metamodel::MethodContainer

[15:05] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/67c3b6628d

[15:19] <Geth> ¦ rakudo/main: be990a2ea1 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/PrivateMethodContainer.nqp

[15:19] <Geth> ¦ rakudo/main: Ensure Metamodel::PrivateMethodContainer uses protection

[15:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/be990a2ea1

[16:01] <Geth> ¦ rakudo/main: efeb9d7742 | (Elizabeth Mattijsen)++ | 3 files

[16:01] <Geth> ¦ rakudo/main: Streamline Metamodel::RolePunning

[16:01] <Geth> ¦ rakudo/main: 

[16:01] <Geth> ¦ rakudo/main: - replace flag for "pun made" by nqp::null flag on the $!pun attribute

[16:01] <Geth> ¦ rakudo/main: - make sure punning uses protection in .pun (.make_pun still free)

[16:01] <Geth> ¦ rakudo/main: - simplify a lot of logic using nqp::ifnull

[16:01] <Geth> ¦ rakudo/main: 

[16:01] <Geth> ¦ rakudo/main: Also make sure ::ParametricRoleGroupHOW and ::CurriedRoleHOW know

[16:01] <Geth> ¦ rakudo/main: how to protect

[16:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/efeb9d7742

[16:03] <lizmat> vrurg: I have good hopes that ^^ fixes a lot crashes with parallel IO

[16:21] <Geth> ¦ rakudo/main: b110ebb7bc | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/RolePunning.nqp

[16:21] <Geth> ¦ rakudo/main: Can use lexical instead of attribute here

[16:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b110ebb7bc

[17:55] <lizmat> notable6: weekly

[17:55] <notable6> lizmat, 6 notes: https://gist.github.com/5cdbe41570c540cbd8bfebcc9d0a6ff2

[18:09] <lizmat> notable6: weekly reset

[18:09] <notable6> lizmat, Moved existing notes to “weekly_2024-03-18T18:09:12Z”

[18:40] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/03/18/2024-12-open-comma/

[23:45] *** sena_kun left
