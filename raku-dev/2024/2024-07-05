[07:55] *** sena_kun joined
[11:21] *** finanalyst joined
[11:57] *** sena_kun left
[12:11] <lizmat> meh, looks like recent changes borked some RakuAST stuff

[12:11] <lizmat> m: say Q|("a",).duckmap({$_ ~~ Str})|.AST

[12:11] <camelia> rakudo-moar 4085432e7: OUTPUT: «RakuAST::StatementList.new(␤  RakuAST::Statement::Expression.new(␤    expression => RakuAST::ApplyPostfix.new(␤      operand => RakuAST::ApplyListInfix.new(␤        infix    => RakuAST::Infix.new(","),␤        operands => (␤          RakuA…»

[12:11] <lizmat> m: say Q|("a",).duckmap({$_ ~~ Str})|.AST.EVAL

[12:11] <camelia> rakudo-moar 4085432e7: OUTPUT: «(signal SEGV)»

[12:15] <lizmat> *phew* looks like 18d128ab1b2d1f1d47b is *not* to blame

[12:15] <linkable6> (2024-06-17) https://github.com/rakudo/rakudo/commit/18d128ab1b Check expectations of `.deepmap` / `.duckmap` / `.nodemap` (#5592)

[12:30] <Geth> ¦ rakudo/main: 1bd985a303 | (Elizabeth Mattijsen)++ | src/core.c/Any-iterable-methods.rakumod

[12:30] <Geth> ¦ rakudo/main: Remove the signature check from .duckmap for now

[12:30] <Geth> ¦ rakudo/main: 

[12:30] <Geth> ¦ rakudo/main: Basically reverts af6df816016f7113 .  This caused a segfault on

[12:30] <Geth> ¦ rakudo/main: RakuAST.  But since this code is nowhere near anything specific to

[12:30] <Geth> ¦ rakudo/main: RakuAST, it felt safer to remove this optimization for now

[12:30] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1bd985a303

[14:32] <Geth> ¦ rakudo/main: 3e55eb62d7 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/LegacyPodify.rakumod

[14:32] <Geth> ¦ rakudo/main: RakuAST: fix regression in handling of E<> in $=pod

[14:32] <Geth> ¦ rakudo/main: 

[14:32] <Geth> ¦ rakudo/main: This was missed with the changes made in 5b44a64b2d8190614c22d

[14:32] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3e55eb62d7

[15:01] <Geth> ¦ rakudo/main: 17f0148ae1 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/LegacyPodify.rakumod

[15:01] <Geth> ¦ rakudo/main: RakuAST: fix issue in podification of V<>

[15:01] <Geth> ¦ rakudo/main: 

[15:01] <Geth> ¦ rakudo/main: This was apparently introduced quite a while ago already, not sure

[15:01] <Geth> ¦ rakudo/main: why this wasn't spotted earlier

[15:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/17f0148ae1

[15:33] *** [Coke] left
[15:35] *** [Coke] joined
[16:20] <Geth> ¦ rakudo/main: 025267848c | (Elizabeth Mattijsen)++ | src/Raku/ast/origins.rakumod

[16:20] <Geth> ¦ rakudo/main: RakuAST: Streamlining origins handling (Part 1/N)

[16:20] <Geth> ¦ rakudo/main: 

[16:20] <Geth> ¦ rakudo/main: For now, work on comments only

[16:20] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/025267848c

[17:03] <lizmat> m: dd "foo bar baz".index(/b\w+/)    # any idea why this isn't implemented?

[17:03] <camelia> rakudo-moar fd72fc3e1: OUTPUT: «Cannot resolve caller index(Str:D: Regex:D); none of these signatures matches:␤    (List:D $:: Cool:D $needle, *%_)␤    (Cool:D $:: Cool:D $needle, :i(:$ignorecase)!, :m(:$ignoremark), *%_ --> Int:D)␤    (Cool:D $:: Cool:D $needle, :m(:$ignorema…»

[17:04] <lizmat> m: dd "foo bar baz".indices(/b\w+/)    # or this, for that matter ?

[17:04] <camelia> rakudo-moar fd72fc3e1: OUTPUT: «Cannot resolve caller indices(Str:D: Regex:D); none of these signatures matches:␤    (List:D $:: Cool:D \needle, *%_)␤    (Cool:D $:: Cool:D $needle, :i(:$ignorecase)!, :m(:$ignoremark), :$overlap, *%_)␤    (Cool:D $:: Cool:D $needle, :m(:$ignor…»

[17:41] <lizmat> I guess because we have

[17:41] <lizmat> m: dd "foo bar baz".match(/b\w+/).from

[17:41] <camelia> rakudo-moar fd72fc3e1: OUTPUT: «4␤»

[17:41] <lizmat> mind you, some benchmarking shows that a dedicated .index(Regex) would be about 50% faster

[17:42] <lizmat> because it wouldn't have to make Match objects

[17:43] <Geth> ¦ rakudo/main: fd72fc3e18 | (Elizabeth Mattijsen)++ | src/Raku/ast/origins.rakumod

[17:43] <Geth> ¦ rakudo/main: RakuAST: Streamlining origins handling (Part 2/N)

[17:43] <Geth> ¦ rakudo/main: 

[17:43] <Geth> ¦ rakudo/main: Moved the line-endings search to ::Origin::Source.new, and streamlined

[17:43] <Geth> ¦ rakudo/main: a bit because it replaces frequent attribute lookups with lexicals

[17:43] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fd72fc3e18

[17:44] <lizmat> wow, that took a while, pushed that about an hour ago

[18:49] *** sena_kun joined
[22:04] *** sena_kun left
[23:33] *** finanalyst left
