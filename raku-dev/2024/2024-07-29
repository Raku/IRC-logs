[08:50] *** finanalyst joined
[11:42] *** finanalyst left
[14:34] <lizmat> could someone confirm for me that JSON::Fast currently does not install on Windows ?

[14:34] <lizmat> https://github.com/lizmat/App-Rak/actions/runs/10146319904/job/28054089893

[14:44] <[Coke]> how recent a raku do I need to test with? :)

[14:45] <[Coke]> I already have it installed on windows, doing a forced install

[14:50] <[Coke]> just did an install on git bash on windows with raku v2023.10+

[14:51] <[Coke]> looks like I'll need to test with something more recent.

[15:15] <lizmat> well, I guess it's more important to test it with the most recent version of zef

[15:17] <[Coke]> updating rakudo, will update zef, then try to reinstall

[15:17] <[Coke]> (Been a while, forgot how I was doing the builds on windows here)

[15:19] <[Coke]> seeing lots of new(?) compier warnings in winbase.h that I don't recall seeing before

[15:19] <[Coke]> (which is something on the OS, not rakudo)

[15:31] *** vrurg joined
[15:34] *** vrurg_ left
[15:36] *** MasterDuke left
[15:37] <lizmat> looks like Github CI is using zef 0.22.0 rather than 0.22.1

[16:00] <[Coke]> I get the same error with rakudo-latest, zef latest, and trying to install JSON::Fast 0.19

[16:01] <[Coke]> I'm on a win 10 box.

[16:07] *** sena_kun joined
[16:09] <ugexe> what is the actual failure? you'll have to use --verbose or --debug

[16:09] <ugexe> nevermind, see it in lizmats link

[16:09] <ugexe> ye old path length issue

[16:10] <ugexe> it looks to be using the `C:\Users\RUNNER~1\AppData\Local\Temp\.zef` temp directory and not /tmp, so maybe that isn't set correctly?

[16:11] <[Coke]> agreed - this avoids the issue until the next path increase:

[16:11] <[Coke]> mkdir C:\tmp; SET TEMP=C:\tmp; zef install JSON::Fast

[16:12] <[Coke]> I had a similar tmp dir here

[16:13] <lizmat> I wonder whether the path length issue has to do with the fact that the module lives on CPAN ?

[16:15] <[Coke]> Anything we do to avoid it is just a stopgap, need to fix the actual root cause or it'll keep showing up

[16:15] <[Coke]> (in fact, use C:\t to avoid it for two more characters)

[16:17] <[Coke]> I know we had some WIP on this, I ended up avoiding needing it as a user by moving my scripts that were dying to it to run on mac instead.

[16:19] <lizmat> notable6: weekly

[16:19] <notable6> lizmat, 1 note: 2024-07-27T18:23:16Z <antononcube>: https://youtu.be/LmLk9UB4_Ak

[16:19] <lizmat> notable6: weekly reset

[16:19] <notable6> lizmat, Moved existing notes to “weekly_2024-07-29T16:19:55Z”

[16:28] <ugexe> lizmat: it has to due with every part of those paths being relatively long

[16:29] <lizmat> but I have other modules with long names that work fine on Windows CI

[16:30] <ugexe> what matters is the total path length, and the path length is also influenced by the compunit repository that backs it, i.e. what the path prefix is

[16:30] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/07/29/2024-31-mondrianally/

[16:31] <ugexe> for instance how we use sha1s in many spots when something shorter might technically work

[16:31] <ugexe> of course the real fix here is to make long paths work on windows

[16:32] <ugexe> https://github.com/MoarVM/MoarVM/pull/1776 for instance

[16:35] <lizmat> we definitely have a too low bus factor there  :-(

[17:06] <Geth> ¦ rakudo/main: 6e6ce83a5c | (Elizabeth Mattijsen)++ | tools/contributors.raku

[17:06] <Geth> ¦ rakudo/main: Include contributions to doc website as well

[17:06] <Geth> ¦ rakudo/main: 

[17:06] <Geth> ¦ rakudo/main: This would have included Richard Hainsworth as a contributor to the

[17:06] <Geth> ¦ rakudo/main: 2024.07 release

[17:06] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6e6ce83a5c

[17:06] <lizmat> jdv: ^^ fyi

[17:27] <jdv> cool

[17:28] <jdv> i didn't know there was that distinction

[17:48] <[Coke]> lizmat++ finanlyst++

[19:19] *** finanalyst joined
[19:55] *** dawids joined
[19:58] <Geth> ¦ rakudo/rakuast-phase-cleanup: c987ce13d1 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[19:58] <Geth> ¦ rakudo/rakuast-phase-cleanup: RakuAST: fix generated accessor methods looking at wrong signature

[19:58] <Geth> ¦ rakudo/rakuast-phase-cleanup: 

[19:58] <Geth> ¦ rakudo/rakuast-phase-cleanup: Current scope for the method and it's signature's BEGIN handlers was the

[19:58] <Geth> ¦ rakudo/rakuast-phase-cleanup: surrounding scope (usually the package) of the declaration, not the

[19:58] <Geth> ¦ rakudo/rakuast-phase-cleanup: method itself.

[19:58] <Geth> ¦ rakudo/rakuast-phase-cleanup: review: https://github.com/rakudo/rakudo/commit/c987ce13d1

[19:58] *** vrurg_ joined
[19:59] <nine> Turns out, I was completely off in my earlier attempt to fix role R { my $.e; } in rakuast-phase-cleanup. Sometimes a two month break and a fresh start can help a lot :)

[20:01] *** dawids left
[20:03] *** vrurg left
[20:27] <[Coke]> ^_^

[21:19] *** sena_kun left
[22:16] *** finanalyst left
