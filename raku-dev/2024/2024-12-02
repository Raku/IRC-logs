[00:41] <ugexe> i'm curious how long it takes other languages to compile one million conditionals

[03:03] *** MasterDuke joined
[03:12] <MasterDuke> some random thoughts about about sorted_keys. here's a graph of it's running time https://imgur.com/uVOuWic

[03:13] <MasterDuke> the shape seems correct, but the actual run times might need some work

[03:18] <MasterDuke> my test was copying out `sorted_keys()` from the nqp source and then running it against a hash composed of keys that were `'lowered_lex_' ~ $i`, where $i was 0..n

[03:20] <MasterDuke> it spent 33% of it's time in MVM_string_compare. my test got quite a bit faster if i changed the keys to `nqp::indexingoptimized('lowered_lex_' ~ $i)`

[03:29] <MasterDuke> it got faster if i changed the keys to `'ll_' ~ $i`. some of that is probably because there's less string to compare against, but also now almost all of them were in-situ-8 strings, instead of just "regular" 8-bit strings

[03:36] <MasterDuke> maybe `sorted_keys()` should be implemented as a merge sort instead of a heap sort, since that should reduce the number of comparisons performed

[03:40] *** kjp left
[03:41] *** kjp joined
[03:44] <MasterDuke> it looks like MVM_string_compare could be sped up by adding specialized versions of the final comparison (if/when chars are found to differ at some index less than the scan length) for each string type

[03:46] <MasterDuke> from ~470ms to ~370ms for `'lowered_lex_' ~ $i` and from ~400ms to ~330ms for `'ll_' ~ $i` (all using `nqp::indexingoptimized`)

[04:21] <ugexe> nice 

[08:14] <Geth> ¦ rakudo/azure_improvements_squashed: c0819d38f7 | (Patrick Böker)++ | azure-pipelines.yml

[08:14] <Geth> ¦ rakudo/azure_improvements_squashed: Allow re-runs by renaming artifacts on each retry

[08:14] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/c0819d38f7

[08:31] <Geth> ¦ rakudo/azure_improvements_squashed: 6d7ea08904 | (Patrick Böker)++ | azure-pipelines.yml

[08:31] <Geth> ¦ rakudo/azure_improvements_squashed: different var accces

[08:31] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/6d7ea08904

[08:48] *** sena_kun joined
[09:00] <Geth> ¦ rakudo/azure_improvements_squashed: e7928e839c | (Timo Paulssen)++ (committed by Patrick Böker) | 2 files

[09:00] <Geth> ¦ rakudo/azure_improvements_squashed: Reimagine Azure CI

[09:00] <Geth> ¦ rakudo/azure_improvements_squashed: 

[09:00] <Geth> ¦ rakudo/azure_improvements_squashed: - Prettier output (using the JUnit test result formatter)

[09:00] <Geth> ¦ rakudo/azure_improvements_squashed: - Restructure making better use of parameters

[09:00] <Geth> ¦ rakudo/azure_improvements_squashed: - Disable OOMing Win_JMV

[09:00] <Geth> ¦ rakudo/azure_improvements_squashed: - Speed up CI on Windows by working around the compiler search

[09:00] <Geth> ¦ rakudo/azure_improvements_squashed: - More granular output using `echo` commands

[09:00] <Geth> ¦ rakudo/azure_improvements_squashed: - add a nodelay & blocking spec test run

[09:00] <Geth> ¦ rakudo/azure_improvements_squashed: - persist build artifacts

[09:01] <Geth> ¦ rakudo/azure_improvements_squashed: - Speed up testing by running tests in parallel

[09:01] <Geth> ¦ rakudo/azure_improvements_squashed: - Bump the OS versions to latest as of now

[09:01] <Geth> ¦ rakudo/azure_improvements_squashed: review: https://github.com/rakudo/rakudo/commit/e7928e839c

[09:01] <Geth> ¦ rakudo/main: 4 commits pushed by (Patrick Böker)++, (Timo Paulssen)++

[09:01] <Geth> ¦ rakudo/main: 2208db214f | Fix nativecall tests on Windows/cl/enabled debugging

[09:01] <Geth> ¦ rakudo/main: 81f2dbe45a | Deal with long paths in moar runner

[09:01] <Geth> ¦ rakudo/main: e7928e839c | Reimagine Azure CI

[09:01] <Geth> ¦ rakudo/main: dd45859fea | Merge pull request #5706 from rakudo/azure_improvements_squashed

[09:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/530e20597d82...dd45859feaa1

[09:01] <patrickb> timo: It is done! ^

[09:01] <timo> hooray!

[09:18] <ab5tract> patrickb++ !

[09:57] *** sena_kun left
[10:00] *** sena_kun joined
[10:06] *** sena_kun left
[10:49] *** gfldex left
[10:49] <Geth> ¦ PrettyDump/pd-fix-and-improvement: 447beb12a1 | (Patrick Böker)++ | lib/PrettyDump.rakumod

[10:49] <Geth> ¦ PrettyDump/pd-fix-and-improvement: Fix `pd` to print the results out, as it should

[10:49] <Geth> ¦ PrettyDump/pd-fix-and-improvement: review: https://github.com/raku-community-modules/PrettyDump/commit/447beb12a1

[10:49] <Geth> ¦ PrettyDump/pd-fix-and-improvement: 3010484511 | (Patrick Böker)++ | lib/PrettyDump.rakumod

[10:49] <Geth> ¦ PrettyDump/pd-fix-and-improvement: Make `pd` return it's input

[10:49] <Geth> ¦ PrettyDump/pd-fix-and-improvement: 

[10:49] <Geth> ¦ PrettyDump/pd-fix-and-improvement: This allows putting pd in the middle of a pipeline.

[10:49] <Geth> ¦ PrettyDump/pd-fix-and-improvement: review: https://github.com/raku-community-modules/PrettyDump/commit/3010484511

[10:56] <Geth> ¦ PrettyDump: patrickbkr++ created pull request #2: Pd fix and improvement

[10:56] <Geth> ¦ PrettyDump: review: https://github.com/raku-community-modules/PrettyDump/pull/2

[11:25] *** librasteve_ left
[12:07] <lizmat> notable6: weekly

[12:07] <notable6> lizmat, 2 notes: 2024-11-28T19:32:04Z <antononcube>: https://youtu.be/S_3e7liz4KM  ;  2024-12-01T18:10:32Z <antononcube>: https://rakuforprediction.wordpress.com/2024/12/01/graph-neat-examples-in-raku-set-1/

[12:07] <lizmat> notable6: weekly reset

[12:07] <notable6> lizmat, Moved existing notes to “weekly_2024-12-02T12:07:43Z”

[12:12] <Geth> ¦ roast: 59ebbc1666 | (Christian Bartolomäus)++ | S32-hash/adverbs.t

[12:12] <Geth> ¦ roast: [JVM] Fudge failing tests for X::Adverb

[12:12] <Geth> ¦ roast: 

[12:12] <Geth> ¦ roast: As described in https://github.com/rakudo/rakudo/issues/5709 these

[12:12] <Geth> ¦ roast: tests don't work anymore, because the wrong multi is selected.

[12:12] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/59ebbc1666

[12:48] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/12/02/2024-49-advention/

[13:15] *** gfldex joined
[13:51] <timo> lizmat: i think the CI part should read that patrickb finished the work i started on re-imagining the CI stuff

[13:51] <timo> and the big integer issue was in debug helper code that is meant to be run from gdb or lldb, not in the moar remote debugger :)

[13:53] <lizmat> so fixed, thanks for the headsup!

[14:48] <|Tux|> Rakudo v2024.10-65-gdd45859fe (v6.d) on MoarVM 2024.10-40-gac58731d4

[14:48] <|Tux|> csv-test-xs-20      0.143 -  0.144

[14:48] <|Tux|> csv-ip5xs           0.261 -  0.262

[14:48] <|Tux|> test-t --race       0.274 -  0.275

[14:48] <|Tux|> test-t              0.398 -  0.400

[14:49] <|Tux|> csv-ip5xs-20        1.107 -  1.109

[14:49] <|Tux|> test-t-20 --race    1.232 -  1.244

[14:49] <|Tux|> csv-parser          1.485 -  1.488

[14:49] <|Tux|> test                1.860 -  1.863

[14:49] <|Tux|> test-t-20           4.728 -  4.736

[14:49] <|Tux|> https://tux.nl/Talks/CSV6/speed4-20.html / https://tux.nl/Talks/CSV6/speed4.html https://tux.nl/Talks/CSV6/speed.log

[14:51] *** MasterDuke left
[14:58] <Geth> ¦ rakudo: usev6++ created pull request #5710: [JVM] Add extra check for GLOBAL being null

[14:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5710

[15:18] <Geth> ¦ URI-Encode/main: 664569aaf9 | (Elizabeth Mattijsen)++ | 15 files

[15:18] <Geth> ¦ URI-Encode/main: CI test for update as Raku community module

[15:18] <Geth> ¦ URI-Encode/main: review: https://github.com/raku-community-modules/URI-Encode/commit/664569aaf9

[15:20] <Geth> ¦ URI-Encode/main: c37a137667 | (Elizabeth Mattijsen)++ | 2 files

[15:20] <Geth> ¦ URI-Encode/main: 0.1

[15:20] <Geth> ¦ URI-Encode/main: review: https://github.com/raku-community-modules/URI-Encode/commit/c37a137667

[15:53] <Geth> ¦ Test-When/main: 3cb9cde0bc | (Elizabeth Mattijsen)++ | 18 files

[15:53] <Geth> ¦ Test-When/main: CI test for update as Raku community module

[15:53] <Geth> ¦ Test-When/main: review: https://github.com/raku-community-modules/Test-When/commit/3cb9cde0bc

[15:58] <Geth> ¦ rakudo: usev6++ created pull request #5711: Move test file that dies on JVM to t/09-moar

[15:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5711

[15:59] <Geth> ¦ Test-When/main: 86c4267ffb | (Elizabeth Mattijsen)++ | 2 files

[15:59] <Geth> ¦ Test-When/main: 1.1

[15:59] <Geth> ¦ Test-When/main: review: https://github.com/raku-community-modules/Test-When/commit/86c4267ffb

[16:52] <Geth> ¦ Test-Stream/main: b80d50935b | (Elizabeth Mattijsen)++ | 60 files

[16:52] <Geth> ¦ Test-Stream/main: CI test for update as Raku community module

[16:52] <Geth> ¦ Test-Stream/main: review: https://github.com/raku-community-modules/Test-Stream/commit/b80d50935b

[16:56] <Geth> ¦ rakudo/lower-bound-for-revision-gating: 0a03eab1af | ab5tract++ | t/02-rakudo/12-multi-revision-gated.t

[16:56] <Geth> ¦ rakudo/lower-bound-for-revision-gating: Add test names, remove unnecessary :err matcher

[16:56] <Geth> ¦ rakudo/lower-bound-for-revision-gating: review: https://github.com/rakudo/rakudo/commit/0a03eab1af

[17:01] <Geth> ¦ Test-Stream/main: 0b3a5b26e4 | (Elizabeth Mattijsen)++ | 4 files

[17:01] <Geth> ¦ Test-Stream/main: CI tweaks

[17:01] <Geth> ¦ Test-Stream/main: review: https://github.com/raku-community-modules/Test-Stream/commit/0b3a5b26e4

[17:13] <Geth> ¦ rakudo: usev6++ created pull request #5712: Fix type when binding attribute for RealPolymod

[17:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5712

[17:30] <Geth> ¦ Test-Stream/main: 12bc5af330 | (Elizabeth Mattijsen)++ | 5 files

[17:30] <Geth> ¦ Test-Stream/main: 0.1

[17:30] <Geth> ¦ Test-Stream/main: review: https://github.com/raku-community-modules/Test-Stream/commit/12bc5af330

[17:52] <Geth> ¦ roast: f87c8ae15b | (Christian Bartolomäus)++ | S10-packages/precompilation.t

[17:52] <Geth> ¦ roast: [JVM] Unfudge now passing test

[17:52] <Geth> ¦ roast: 

[17:52] <Geth> ¦ roast: I'm not sure when this started to work. Probably at some point during

[17:52] <Geth> ¦ roast: the last 14 months.

[17:52] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/f87c8ae15b

[18:15] <Geth> ¦ Test-Notice/main: fd8d825322 | (Elizabeth Mattijsen)++ | 14 files

[18:15] <Geth> ¦ Test-Notice/main: CI test for update as Raku community module

[18:15] <Geth> ¦ Test-Notice/main: review: https://github.com/raku-community-modules/Test-Notice/commit/fd8d825322

[18:17] <Geth> ¦ Test-Notice/main: 44314408fe | (Elizabeth Mattijsen)++ | 2 files

[18:17] <Geth> ¦ Test-Notice/main: 1.1

[18:17] <Geth> ¦ Test-Notice/main: review: https://github.com/raku-community-modules/Test-Notice/commit/44314408fe

[18:20] <[Coke]> bartolin++

[18:31] <Geth> ¦ Terminal-Width/main: 55d3bb5cbe | (Elizabeth Mattijsen)++ | 14 files

[18:31] <Geth> ¦ Terminal-Width/main: CI test for update as Raku community module

[18:31] <Geth> ¦ Terminal-Width/main: review: https://github.com/raku-community-modules/Terminal-Width/commit/55d3bb5cbe

[18:38] <Geth> ¦ Terminal-Width/main: f0f41f7b79 | (Elizabeth Mattijsen)++ | 3 files

[18:38] <Geth> ¦ Terminal-Width/main: CI fix

[18:38] <Geth> ¦ Terminal-Width/main: 

[18:38] <Geth> ¦ Terminal-Width/main: Just try loading the module in CI environment, as there probably

[18:38] <Geth> ¦ Terminal-Width/main: isn't a TTY available here anyway

[18:38] <Geth> ¦ Terminal-Width/main: review: https://github.com/raku-community-modules/Terminal-Width/commit/f0f41f7b79

[18:40] <Geth> ¦ Terminal-Width/main: 75fdd303a1 | (Elizabeth Mattijsen)++ | 2 files

[18:40] <Geth> ¦ Terminal-Width/main: 1.1

[18:40] <Geth> ¦ Terminal-Width/main: review: https://github.com/raku-community-modules/Terminal-Width/commit/75fdd303a1

[18:55] *** sena_kun joined
[19:22] *** librasteve_ joined
[20:28] *** sjn left
[20:49] *** sena_kun left
[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: 92b05ea7ed | ab5tract++ | 2 files

[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: Provide adverbial forms of map

[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: 

[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: This commit opens a different way of specifying map variants.

[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: This is mostly for cosmetic reasons and operates under the

[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: impression that named argument adverbs, had they been available,

[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: would have been used over the smashedcase versions we currently

[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: offer.

[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: 

[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: * [flatmap](https://github.com/Raku/problem-solving/issues/430)

[22:38] <Geth> ¦ rakudo/adverb-the-map-vairants: review: https://github.com/rakudo/rakudo/commit/92b05ea7ed

[22:39] <Geth> ¦ rakudo: ab5tract++ created pull request #5713: Provide adverbial forms of map

[22:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5713

[23:00] <ab5tract> anybody else ever wish we could specify adverbs a la `$x.method:adverb: |@args` ?

[23:27] *** donaldh_ joined
[23:28] *** donaldh left
[23:51] <timo> interesting

[23:56] <ab5tract> only my makers can explain why I prefer `.map:flat:` over `.flatmap:` as much as I do ... and I'm pretty sure my poor old parents would just look at me in utter confusion if I asked

[23:57] <timo> map:<flat> :)

[23:57] <ab5tract> (though if I were really trying to rock my druthers, I'd ask Santa for `.map:flat &block`, meaning that adding an adverb would alread trigger "colon mode"

[23:59] <timo> m: role Test { method map:<flat>(|c) { say "flat"; self.flatmap(|c) }; method map:<duck>(|c) { say "duck"; self.duckmap(|c) } }; my $in = [1, [2, "a", 3, "b"], 4, "x"] but Test; $in.map:<flat>({ say "^$_^" }); $in.map:<duck>({ say "quack $_" });

[23:59] <camelia> rakudo-moar dd45859fe: OUTPUT: «flat␤^1^␤^2 a 3 b^␤^4^␤^x^␤duck␤quack 1␤quack 2 a 3 b␤quack 4␤quack x␤»

[23:59] <ab5tract> timo: intriguing! unfortunately it doesn't seem to dispatch as expected

[23:59] <ab5tract> oh .... wow

[23:59] <ab5tract> I have never seen a method named that way!

