[08:58] *** sena_kun joined
[10:36] *** finanalyst joined
[12:41] <Geth> ¦ rakudo/main: 692677ff33 | (Elizabeth Mattijsen)++ | 4 files

[12:41] <Geth> ¦ rakudo/main: RakuAST: introducing RakuAST::Deparse::Highlight

[12:41] <Geth> ¦ rakudo/main: 

[12:41] <Geth> ¦ rakudo/main: This exports a single sub "highlight" that provides Raku-based syntax

[12:41] <Geth> ¦ rakudo/main: highlighting based on first parsing the given code to RakuAST objects

[12:41] <Geth> ¦ rakudo/main: using the Raku grammar with a dedicated set of actions that *also*

[12:41] <Geth> ¦ rakudo/main: process any inline comments.

[12:41] <Geth> ¦ rakudo/main: 

[12:41] <Geth> ¦ rakudo/main: <…commit message has 21 more lines…>

[12:41] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/692677ff33

[12:42] <lizmat> finanalyst: ^^

[17:46] *** MasterDuke left
[17:49] <patrickb> lizmat: This will run begin time code during parse, correct?

[17:51] <lizmat> patrickb: what will ?

[17:51] <lizmat> you mean 692677ff33 ?

[17:51] <linkable6> (2024-07-07) https://github.com/rakudo/rakudo/commit/692677ff33 RakuAST: introducing RakuAST::Deparse::Highlight

[18:13] <patrickb> Yeah, that commit I was referencing.

[18:13] <lizmat> you would need to do a "use RakuAST::Deparse::Highlight" before anything happens

[18:14] <lizmat> it really is just a module that subclasses two RakuAST core classes

[18:55] <patrickb> Phrased differently: It's not safe to highlight adversarial code, right?

[18:58] <lizmat> It parses he code, so yes, in that respect it *will* run BEGIN time code

[18:58] <lizmat> at least at the moment

[18:59] <lizmat> I guess we could build in a "no compile-time-code" pragma

[18:59] <lizmat> that would die on any BEGIN time execution

[19:00] <lizmat> and prefix that to any code that needs highlighting

[19:00] <lizmat> afk&

[19:25] <patrickb> Thanks for the info and enjoy the evening!

[21:19] *** MasterDuke joined
[23:03] *** sena_kun left
[23:06] *** finanalyst left
