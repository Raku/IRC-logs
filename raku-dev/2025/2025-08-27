[00:45] <jdv> anyone know where "This container does not reference a native integer" is coming from on moarvm?

[00:46] <jdv> i can't find it.  i onely see it in some jvm related files.

[00:47] <jdv> oh nevermind

[01:55] *** apogee_ntv joined
[03:00] <releasable6> Next release in ≈1 day and ≈15 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:27] *** apogee_ntv left
[03:29] *** apogee_ntv joined
[04:13] *** librasteve_ left
[05:27] *** kjp left
[05:29] *** kjp joined
[06:48] *** librasteve_ joined
[07:26] *** finanalyst joined
[09:16] *** finanalyst left
[11:13] *** apogee_ntv left
[12:45] *** apogee_ntv joined
[15:09] <jdv> huh, where's the git bot thing?

[15:09] <jdv> .tell MasterDuke I reverted it.

[15:09] <tellable6> jdv, I'll pass your message to MasterDuke

[15:12] <jdv> is it called Geth?

[15:14] <jdv> lizmat: ^ you signed off on that PR so maybe you know how to fix it later...

[15:16] <jdv> all clear for a release tomorrow

[16:35] *** [Tux] left
[16:35] *** [Tux] joined
[18:37] <ab5tract> Anyone else find this a bit awkward?

[18:37] <ab5tract> m: module M { enum OK is export <ok ko>; enum OKOK is export <ok ko> }; import M; 

[18:37] <camelia> rakudo-moar 451be071c: OUTPUT: «===SORRY!===␤A symbol 'ko' has already been exported␤»

[18:38] <ab5tract> I'd prefer the default action of enum Foo is export to be that Foo is now available in the importing namespace, rather than all of the values of Foo

[18:39] <ab5tract> Barring that as it feels unlikely, I'd like some way to achieve the desired end goal

[19:28] <[Coke]> m: enum OK <ok ko>; enum KO <ok ko>

[19:28] <camelia> rakudo-moar 451be071c: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol 'ok and ko'.␤    at <tmp>:1␤    ------> enum OK <ok ko>; enum KO <ok ko><HERE><EOL>␤»

[19:29] <[Coke]> also, that error message is LTA.

[19:29] <[Coke]> that's how enums work, though, those tokens are in the namespace.

[19:40] <[Coke]> Not sure if we could make the export/import version of that also be a "potential" issue and not die.

[19:40] <[Coke]> m: enum OK <ok ko>; enum KO <ok ko>; dd ok; # have to use it to die here.

[19:40] <camelia> rakudo-moar 451be071c: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol 'ok and ko'.␤    at <tmp>:1␤    ------> enum OK <ok ko>; enum KO <ok ko><HERE>; dd ok; # have to use it to die here.␤Failure.new(exception => X::PoisonedAlias.new(alias => "ok", package-type …»

[19:40] <[Coke]> s/die/fail/

[21:03] *** samebchase left
[21:03] *** samebchase joined
[21:18] <lizmat> ab5tract: sub EXPORT { Map.new: "OK" => OK, "OKOK" => OKOK }

[21:18] <lizmat> ??

[21:41] *** rba left
[21:42] *** rba joined
[23:00] <releasable6> Next release in ≈19 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

