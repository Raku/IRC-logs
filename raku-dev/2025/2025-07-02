[01:56] <[Coke]> ok, I ran blin again, this time saving the output.

[01:57] <[Coke]> I had it in a tmux session, and did 2>&1 | tee blin.out on the runner I used, and it just stopped at 🥞🥞🥞 Testing Pod::Usage (new)

[01:57] <[Coke]> *AND* the tmux window closed.

[01:58] <[Coke]> it wasn't just left in bash. another tmux window was open in the session running htop.

[04:32] <lizmat> guifa: if an attribute is:   $.a is rw    you do *not* have to provide a method with a proxy to be able to write to the attribute

[04:33] <lizmat> m: class A { has $.a is rw = 42 }; my $a = A.new; dd $a.a; $a.a = 666; dd $a.a

[04:33] <camelia> rakudo-moar 5a1f70139: OUTPUT: «$!a = 42␤$!a = 666␤»

[04:33] <guifa> lizmat: i was trying to show what it was effectively doing

[04:34] <guifa> but I may have misspoken too during presentation -- i didn't get a chance to practice or double check before presenting, unfortunately

[04:34] <lizmat> hmmm....  I guess you wanted to avoid the concept of containers ?

[04:35] <guifa> yeah I didn't want to touch that 

[04:35] <guifa> Containers honestly could make for a nice short talk next year tho

[04:40] <guifa> oh crap, it's waay later than i thought it was

[04:41] * guifa is off to bed ... if you find any other mistakes i'll see in the morning :-)

[04:41] <lizmat> sleep well!

[05:08] <Xliff> m: say 2 X 3

[05:08] <camelia> rakudo-moar 5a1f70139: OUTPUT: «((2 3))␤»

[05:09] <Xliff> ???

[05:09] <Xliff> m: say ^2 X ^3

[05:09] <camelia> rakudo-moar 5a1f70139: OUTPUT: «((0 0) (0 1) (0 2) (1 0) (1 1) (1 2))␤»

[05:09] <Xliff> Oh

[06:37] *** Xliff left
[06:58] <[Tux]> Rakudo v2025.06.1-3-g5a1f70139 (v6.d) on MoarVM 2025.06-3-gab053f644

[06:58] <[Tux]> csv-test-xs-20      0.115 -  0.116

[06:58] <[Tux]> csv-ip5xs           0.261 -  0.267

[06:58] <[Tux]> test-t --race       0.283 -  0.283

[06:58] <[Tux]> test-t              0.443 -  0.447

[06:58] <[Tux]> csv-parser          1.101 -  1.111

[06:58] <[Tux]> csv-ip5xs-20        1.087 -  1.110

[06:58] <[Tux]> test-t-20 --race    1.399 -  1.418

[06:59] <[Tux]> test                1.900 -  1.915

[06:59] <[Tux]> test-t-20           5.644 -  5.886

[06:59] <[Tux]> https://tux.nl/Talks/CSV6/speed4-20.html / https://tux.nl/Talks/CSV6/speed4.html https://tux.nl/Talks/CSV6/speed.log

[06:59] <lizmat> that looks like 10% slower ?

[06:59] <[Tux]> The increase *might* have to do with what I am working on (hash key order stability for CSV headers), but that is not finished yet

[07:00] <lizmat> I wonder whether the return priorization code might have something to do with that patrickb timo ?

[07:00] <[Tux]> Been away from raku too long to make that a smooth process. I have one failing test in fragments left

[07:01] <[Tux]> I can push, but then new install fail because of that test

[07:01] <lizmat> [Tux]: gist ?

[07:01] <[Tux]> I can push a branch. One minute

[07:04] <patrickb> The return prioritization is a possibility. I tried to make sure, that implicit returns are not affected, but explicit returns do observe a (small) overhead. But 10% sounds a bit too much. Hm...

[07:05] <lizmat> Text::CSV uses a lot of explicit returns in my recollection

[07:06] <timo> the return prioritisation code should only actually kick in when a return is triggered when a return happens while returning is already in motion

[07:07] <timo> i think a return using the return sub shouldn't cause that?

[07:07] <[Tux]> pushed to branch type-and-order

[07:15] *** donaldh left
[07:18] <[Tux]> If this work (on types) surfaces possible optimisations in Raku, that on itself is worth the effort

[07:23] *** kjp joined
[07:29] *** kjp left
[07:30] *** kjp joined
[09:21] *** donaldh joined
[11:29] <[Tux]> `dd self` does not show its content. Neither does `dd self.raku`. What was the syntax again to show the content of self?

[11:35] <[Tux]> same for .gist and .perl (but I did expect that after the result of .raku)

[11:48] <[Tux]> use Data::Dump; $*ERR.print: Dump (self, :skip-methods);

[12:02] *** guifa left
[12:08] *** guifa joined
[13:08] *** librasteve_ joined
[13:29] <Geth> ¦ rakudo: lizmat self-assigned Inconsistent results with complex numbers and infinities https://github.com/rakudo/rakudo/issues/5923

[15:12] <jdv> [Coke]: that's impressive.  how'd you manage that one?

[17:46] <[Coke]> ¯\_(ツ)_/¯

[23:38] *** librasteve_ left
