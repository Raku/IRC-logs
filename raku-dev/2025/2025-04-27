[08:55] <gfldex> .tell Xliff https://www.spansh.co.uk/dumps

[08:55] <tellable6> gfldex, I'll pass your message to Xliff

[09:03] *** finanalyst joined
[10:06] *** finanalyst left
[10:07] *** finanalyst joined
[10:47] *** finanalyst left
[10:55] *** finanalyst joined
[11:16] *** sjn left
[11:38] *** finanalyst left
[13:36] *** finanalyst joined
[14:26] *** sjn joined
[14:56] *** finanalyst left
[15:22] <jdv> either the "relocatable stuff" is a bit off or i am

[15:22] <jdv> https://gist.github.com/jdv/78a7d43c1e9c6f7519ea86ecd9245ca8

[15:22] <jdv> does that look familiar to anyone?

[15:34] <[Coke]> jdv: zef --version?

[15:34] <jdv> head

[15:34] <jdv> i don't know about this stuff well

[15:35] <[Coke]> And you're trying to install zef itself?

[15:35] <jdv> it looks like someone wants Inline::Perl5 installed in a rando dir but rakudo/zef/? don't can't use that and the normal spot for dists

[15:36] <jdv> because, look, i force installed Inline::Perl5 in the rando spot...

[15:36] <jdv> and then https://gist.github.com/jdv/479357aa3bf38386669724653fb0f05a

[15:37] <jdv> i think maybe ugexe or nine or patrickb can shed some light maybe?

[15:37] <jdv> at least i figured out some of it:|

[15:40] <jdv> besides source/git(hub) diving, is there any good places to get info on this relocatable/dist/cur/whatever pathing stuff?

[15:44] <jdv> but ./rakudo-m -I 'inst#./install/share/perl6/core' -e 'use Inline::Perl5' works

[15:44] <jdv> cool; wut

[15:46] <ugexe> i personally don't know the answer, but the fact your example shows both rakudo/site and build_rakudo_home/site is going to be the issue. which also would explain why explicitly adding 'inst#./install/share/perl6/core' works since your example also references build_rakudo_home/core

[15:48] <ugexe> i dont think `gen/build_rakudo_home/...` should be showing up as repository locations at all

[15:48] <jdv> i see it "around"

[15:50] <ugexe> raku -e 'say CompUnit::RepositoryRegistry.repository-for-name("core")'

[15:51] <ugexe> like if that is showing build_rakudo_home/ then it feels like some step was missed to finish setting up your rakudo in the build process somewhere

[15:52] <ugexe> the fact you're running ./rakudo-m also kind of suggests that might be the case

[15:53] <ugexe> er, rather that you're running the executable out of some location of where all the files are

[15:53] <ugexe> but anyways i agree it is probably related to relocatable

[15:55] <jdv> i guess i don't get why there are 2 sets of binaries

[15:55] <jdv> https://gist.github.com/jdv/651e9bb12c7e49d7e3e13f105b97179e

[15:55] <jdv> why that diff?

[15:56] <jdv> t/harness5 uses the one at the root so that's why i'm trying to figure it out

[16:00] <jdv> afk for a bit;  laundry day &

[17:34] *** melezhik joined
[17:36] *** melezhik left
[18:34] <ugexe> im a bit concerned about the optics of openssl being in the community modules and prs being merged into it with little or no scrutiny. i don't have a better answer for it as my time is already quite limited, but i know we would consider such things as a negative at $work

[18:35] <ugexe> to be clear im mostly concerned about the *optics*

[18:36] <ugexe> and also to be clear it would be seen as a negative if it appeared mostly abandoned

[18:37] <ugexe> the best answer might be to have it in the core honestly

[18:37] <ugexe> that largely implies a higher degree of scrutiny as well as that it is not abandoned

[19:15] <jdv> ssl isn't in core p5 is it?

[19:15] <jdv> lizmat: i think the "as regex" option on irclogs has been broken for a while

[19:30] <ugexe> It is or will be yes 

[19:55] <ugexe> the last thing i've found mentioning it is https://www.nntp.perl.org/group/perl.perl5.porters/2024/12/msg269322.html

[20:50] <nine> Ideally you don't want any locally installed modules to screw with your spectest and you also want to be able to run all tests before doing make install. That's why there's a special binary with an added repo

[21:23] *** MasterDuke joined
[21:23] <MasterDuke> m: sub a(Str() $s, Int $i, Int $n = 50) { say $s.chars < $i + $n }; my &b = &a.assuming(*, 4); b("sdf")

[21:23] <camelia> rakudo-moar b527cefcb: OUTPUT: «Type check failed in binding to parameter '$n'; expected Int but got Nil (Nil)␤  in sub a at <tmp> line 1␤  in sub __PRIMED_ANON at EVAL_2 line 4␤  in sub __PRIMED_ANON at EVAL_2 line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:24] <MasterDuke> m: sub a(Str:D() $s, Int $i) { say $s.chars < $i }; my &b = &a.assuming(*, 4); b("sdf")

[21:24] <camelia> rakudo-moar b527cefcb: OUTPUT: «===SORRY!=== Error while compiling /home/camelia/EVAL_2␤Invalid typename 'D' in parameter declaration.␤at /home/camelia/EVAL_2:1␤------>  $res = (my proto __PRIMED_ANON ((Any):D<HERE> $s --> Mu) { {*} });␤»

[21:24] <MasterDuke> should those ^^^ work?

[21:25] <jdv> but its not an added repo, its replaced.

[21:25] <jdv> well, nevermind.  that's wrong.

[21:26] <jdv> I guess NativeCall and Test should be in that "added repo" then, right?

[21:30] <jdv> nine: good point.  thanks

[21:38] *** MasterDuke left
[22:08] <lizmat> jdv: that would mean that it has been broken for a *very* long time as I haven't touched the code in years

[22:33] <jdv> okie

[22:34] <jdv> https://irclogs.raku.org/search.html?query=ssl&type=matches&ignorecase=True&nicks=&channel=raku-dev&message-type=&from-yyyymmdd=2025-04-01&to-yyyymmdd=2025-04-27

[22:36] <jdv> lizmat: ^

[22:37] <lizmat> ok, that triggers an execution error, thanks for the golf  :-)

[22:38] <lizmat> looks like something's producing a Nil result, for the needle

[22:40] <jdv> don't mean to make sork

[22:40] <jdv> *work

[22:40] <jdv> i'd fix it if i could

[22:40] <lizmat> hmmm...  looks like it doesn't matter what the string is...

[22:41] <lizmat> will look at it the coming days, I guess  :-)

[22:41] <lizmat> or at least remove the option  :-(

[22:41] <lizmat> for now, sleep&

[22:41] <jdv> nite

