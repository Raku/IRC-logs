[11:24] *** MasterDuke joined
[11:28] <MasterDuke> i think https://github.com/rakudo/rakudo/pull/5887 is good to go

[11:28] <tellable6> hey MasterDuke, you have a message: https://gist.github.com/1ade18f7594e01343175fa49a5ffb630

[11:31] <MasterDuke> nine: however, i'm not sure what the rules are for when an (UN)WRAP can be removed. with the PR as is, all the same spectests pass (with RAKUDO_RAKUAST=1) as on main

[11:33] <MasterDuke> but there are at least some UNWRAPs that i can currently remove, but istr you said shouldn't be, because the function could be overridden in HLL/user code

[11:35] <MasterDuke> is a simple heuristic that the return value of every not-all-uppercase method needs to be UNWRAPped correct?

[11:37] <MasterDuke> e.g., `my @foo = self.IMPL-UNWRAP-LIST($bar.this-could-be-overridden-and-must-be-UNWRAPped)`, but `@my foo = $bar.NO-NEED-TO-UNWRAP-THIS)`?

[11:54] *** MasterDuke left
[12:26] <ab5tract> MasterDuke: how big are the performance gains from these changes? Unless it is significant, I think it’s a lot easier to reason about as is rather than having some instances where unwrapping is necessary and others where it isn’t

[12:26] <tellable6> ab5tract, I'll pass your message to MasterDuke

[13:35] <ab5tract> nine: is the wrapping stuff something that could be addressed in a RakuAST based optimizer? Or is the surface area too opaque to be able to know when wrapping   can be skipped?

[19:02] *** sivoais left
[19:04] *** sivoais joined
[23:17] *** MasterDuke joined
[23:20] <MasterDuke> ab5tract: they're not very significant. but they are a simplification in the sense that they're removing code. fwiw, i'm willing to pay a decently high price for better performance, especially since the rakuast frontend is currently quite a bit slower

[23:23] *** MasterDuke left
[23:23] *** MasterDuke joined
[23:49] *** MasterDuke left
