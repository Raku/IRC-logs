[01:03] *** guifa joined
[01:37] *** guifa left
[03:11] *** guifa joined
[03:16] *** guifa left
[04:19] *** Xliff joined
[04:19] <Xliff> \o

[04:35] *** guifa joined
[04:53] *** guifa left
[07:29] <patrickb> That script wrapper fix up PR is showing a CI test failure where `raku -V` is erring out. I can't repro it locally. Has anyone seen this before?

[09:05] <lizmat> works fine here

[09:27] <Geth> ¦ UK/main: 9d37049675 | (Elizabeth Mattijsen)++ | 16 files

[09:27] <Geth> ¦ UK/main: Initial commit from L10N.fresh-distribution

[09:27] <Geth> ¦ UK/main: review: https://github.com/Raku-L10N/UK/commit/9d37049675

[09:31] <Geth> ¦ .github/main: 455c0f4f0d | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | profile/README.md

[09:31] <Geth> ¦ .github/main: Update README.md

[09:31] <Geth> ¦ .github/main: review: https://github.com/Raku-L10N/.github/commit/455c0f4f0d

[09:34] <Geth> ¦ UK/main: cd93d67c0b | (Elizabeth Mattijsen)++ | 2 files

[09:34] <Geth> ¦ UK/main: Update README and META6.json

[09:34] <Geth> ¦ UK/main: review: https://github.com/Raku-L10N/UK/commit/cd93d67c0b

[09:37] <Geth> ¦ RO/main: 716cbb783c | (Elizabeth Mattijsen)++ | 16 files

[09:37] <Geth> ¦ RO/main: Initial commit from L10N.fresh-distribution

[09:37] <Geth> ¦ RO/main: review: https://github.com/Raku-L10N/RO/commit/716cbb783c

[09:39] <Geth> ¦ L10N/main: 50ee107ee0 | (Elizabeth Mattijsen)++ | 3 files

[09:39] <Geth> ¦ L10N/main: 0.1.4

[09:39] <Geth> ¦ L10N/main: review: https://github.com/Raku-L10N/L10N/commit/50ee107ee0

[09:43] <Geth> ¦ CZ/main: 92a023aa98 | (Elizabeth Mattijsen)++ | 16 files

[09:43] <Geth> ¦ CZ/main: Initial commit from L10N.fresh-distribution

[09:43] <Geth> ¦ CZ/main: review: https://github.com/Raku-L10N/CZ/commit/92a023aa98

[09:45] <Geth> ¦ SK/main: 52bd4c9dca | (Elizabeth Mattijsen)++ | 16 files

[09:45] <Geth> ¦ SK/main: Initial commit from L10N.fresh-distribution

[09:45] <Geth> ¦ SK/main: review: https://github.com/Raku-L10N/SK/commit/52bd4c9dca

[09:47] <Geth> ¦ SV/main: feb3f61bd5 | (Elizabeth Mattijsen)++ | 16 files

[09:47] <Geth> ¦ SV/main: Initial commit from L10N.fresh-distribution

[09:47] <Geth> ¦ SV/main: review: https://github.com/Raku-L10N/SV/commit/feb3f61bd5

[09:49] <Geth> ¦ NO/main: 31066f7ce1 | (Elizabeth Mattijsen)++ | 16 files

[09:49] <Geth> ¦ NO/main: Initial commit from L10N.fresh-distribution

[09:49] <Geth> ¦ NO/main: review: https://github.com/Raku-L10N/NO/commit/31066f7ce1

[09:50] <Geth> ¦ DA/main: 6849ee3f7b | (Elizabeth Mattijsen)++ | 16 files

[09:50] <Geth> ¦ DA/main: Initial commit from L10N.fresh-distribution

[09:50] <Geth> ¦ DA/main: review: https://github.com/Raku-L10N/DA/commit/6849ee3f7b

[09:52] <Geth> ¦ FI/main: 2409e8ca8a | (Elizabeth Mattijsen)++ | 16 files

[09:52] <Geth> ¦ FI/main: Initial commit from L10N.fresh-distribution

[09:52] <Geth> ¦ FI/main: review: https://github.com/Raku-L10N/FI/commit/2409e8ca8a

[09:53] <Geth> ¦ ET/main: 797566b742 | (Elizabeth Mattijsen)++ | 16 files

[09:53] <Geth> ¦ ET/main: Initial commit from L10N.fresh-distribution

[09:53] <Geth> ¦ ET/main: review: https://github.com/Raku-L10N/ET/commit/797566b742

[09:55] <Geth> ¦ LV/main: 3d712ed582 | (Elizabeth Mattijsen)++ | 16 files

[09:55] <Geth> ¦ LV/main: Initial commit from L10N.fresh-distribution

[09:55] <Geth> ¦ LV/main: review: https://github.com/Raku-L10N/LV/commit/3d712ed582

[09:56] <Geth> ¦ LT/main: 78978d5622 | (Elizabeth Mattijsen)++ | 16 files

[09:56] <Geth> ¦ LT/main: Initial commit from L10N.fresh-distribution

[09:56] <Geth> ¦ LT/main: review: https://github.com/Raku-L10N/LT/commit/78978d5622

[09:58] <Geth> ¦ PL/main: fc7d71eb0b | (Elizabeth Mattijsen)++ | 16 files

[09:58] <Geth> ¦ PL/main: Initial commit from L10N.fresh-distribution

[09:58] <Geth> ¦ PL/main: review: https://github.com/Raku-L10N/PL/commit/fc7d71eb0b

[10:00] <Geth> ¦ SL/main: ef6f2431f9 | (Elizabeth Mattijsen)++ | 16 files

[10:00] <Geth> ¦ SL/main: Initial commit from L10N.fresh-distribution

[10:00] <Geth> ¦ SL/main: review: https://github.com/Raku-L10N/SL/commit/ef6f2431f9

[10:01] <Geth> ¦ HR/main: da643176b0 | (Elizabeth Mattijsen)++ | 16 files

[10:01] <Geth> ¦ HR/main: Initial commit from L10N.fresh-distribution

[10:01] <Geth> ¦ HR/main: review: https://github.com/Raku-L10N/HR/commit/da643176b0

[10:04] <Geth> ¦ BG/main: 747ed13461 | (Elizabeth Mattijsen)++ | 16 files

[10:04] <Geth> ¦ BG/main: Initial commit from L10N.fresh-distribution

[10:04] <Geth> ¦ BG/main: review: https://github.com/Raku-L10N/BG/commit/747ed13461

[10:05] <Geth> ¦ EL/main: d6893eb49a | (Elizabeth Mattijsen)++ | 16 files

[10:05] <Geth> ¦ EL/main: Initial commit from L10N.fresh-distribution

[10:05] <Geth> ¦ EL/main: review: https://github.com/Raku-L10N/EL/commit/d6893eb49a

[10:06] <Geth> ¦ TR/main: a7ab6cb5f7 | (Elizabeth Mattijsen)++ | 16 files

[10:06] <Geth> ¦ TR/main: Initial commit from L10N.fresh-distribution

[10:06] <Geth> ¦ TR/main: review: https://github.com/Raku-L10N/TR/commit/a7ab6cb5f7

[10:08] <Geth> ¦ SQ/main: f0b55fdc42 | (Elizabeth Mattijsen)++ | 16 files

[10:08] <Geth> ¦ SQ/main: Initial commit from L10N.fresh-distribution

[10:08] <Geth> ¦ SQ/main: review: https://github.com/Raku-L10N/SQ/commit/f0b55fdc42

[10:11] <Geth> ¦ GA/main: eac9f144c9 | (Elizabeth Mattijsen)++ | 16 files

[10:11] <Geth> ¦ GA/main: Initial commit from L10N.fresh-distribution

[10:11] <Geth> ¦ GA/main: review: https://github.com/Raku-L10N/GA/commit/eac9f144c9

[10:17] <lizmat> ok, enough noise here for now

[12:11] <Geth> ¦ L10N/main: 8a3b9e9242 | (Elizabeth Mattijsen)++ | 7 files

[12:11] <Geth> ¦ L10N/main: Add informational methods

[12:11] <Geth> ¦ L10N/main: review: https://github.com/Raku-L10N/L10N/commit/8a3b9e9242

[12:48] *** guifa joined
[13:34] <[Coke]> OK, putting a slide together for a lightning talk on "what's in 6.e". 

[13:39] <[Coke]> ... dammit, I just lost my WIP

[13:59] <[Coke]> patrickb: can you give me a one liner on why 'script wrapper" is good in relation to 6.e?

[14:00] <[Coke]> any thoughts on mentioning an EU TRF?

[14:05] <patrickb> [Coke]: The new script wrappers fix argument processing on Windows. Without it, all use of CLI applications is limited. A prominent case: with zef it's impossible to install specific versions of modules, as it's impossible to pass < and > chars. (i.e. :version<1.0.0>)

[14:06] <[Coke]> p6c is the "just give us a github URL" eco list, yes?

[14:08] *** guifa left
[14:16] <patrickb> correct

[14:16] *** guifa joined
[14:37] * [Coke] is here with 0rir who just pinged me on https://github.com/0rir/touch/issues/2

[14:39] <[Coke]> Touch – MissingDependency – Dependency “v6” was not resolved (ok, but Touch doesn't depend on v6?)

[14:41] <[Coke]> ah, HEAD != release.

[14:43] <[Coke]> so I don't think I can use blin to test this easily. Can probably just use bisectable by hand, though, I guess.

[15:14] *** guifa left
[15:22] <[Coke]> .seen finanalyst

[15:22] <tellable6> [Coke], I saw finanalyst 2025-05-27T18:20:57Z in #raku-dev: <finanalyst> would `zef` need to change? or would simply adding in doc-provides in the Meta6 be suffcient?

[15:39] <[Coke]> japhb: what's our current unicode version, which one are you working on now, and we'll get 17 right after it drops in 2025, yes?

[15:39] <[Coke]> latest p5 has U16 support

[15:41] <[Coke]> for 6.e stuff: features: "it's a spec", AST, L10N, rakudoc v2, U17, language cleanup (maybe remove some stuff)

[15:42] <[Coke]> non-features: web sites, docs (use rakudoc v2), docs (maybe do translations), blin (essentials), script wrappers

[15:43] <[Coke]> AST is the big one.

[15:43] <[Coke]> I only have 5 minutes, so it's just high level everything

[15:45] <[Coke]> also we need to make cartouches work; karl isn't sure if that works in p5

[15:46] <[Coke]> :)

[15:50] <[Coke]> lizmat, patrickb, timo, nine, etc.: any notes on the "6.e" list?

[16:02] <[Coke]> japhb: karl from p5 also mentioned new line breaking algorithms that he had to implement based on specs.

[17:01] *** guifa joined
[17:39] *** guifa left
[17:40] <jdv> patrickb: first how did this happen and what guarantees are there that its fixed?

[17:41] <jdv> the release process isnt cheap and downstreams still have to do their bit agai.

[17:43] <jdv> also, what is the impact of the issue?  it needs to be pretty serious to trigger a point release.  there will be another release in about a month...

[17:44] <patrickb> jdv: don't make a release yet. There is still an open question I need to clarify. I'll get to this later in the evening (currently on the road)

[17:55] *** guifa joined
[18:12] <[Coke]> https://github.com/rakudo/rakudo/commit/cc15340f41db2c1a111b4c5af626c23d21011ffb - this should have been done behind a language version change.

[18:22] <[Coke]> m: ls

[18:22] <camelia> rakudo-moar 58a7b820c: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared routine:␤    ls used at line 1. Did you mean 'lc'?␤␤»

[18:22] <[Coke]> m: run('ls')

[18:22] <camelia> rakudo-moar 58a7b820c: OUTPUT: «Inline-Perl5␤META6.json␤Perlito␤bin␤bla␤dalek-queue␤evalbot␤file.txt␤lib␤log␤mbox␤nqp-js␤p1␤p2␤precomp␤rakudo-j-1␤rakudo-j-2␤rakudo-j-inst␤rakudo-j-inst-1␤rakudo-j-inst-2␤rakudo-m-1␤rakudo-m-2␤rakudo-m-inst…»

[18:23] <[Coke]> hurm. what files exist where bisectable is run, I wonder.

[18:23] <[Coke]>  bisectable6: run('ls')

[18:24] <timo> we do have directory listing builtins you know :P

[18:24] <[Coke]> don't bash shame me!

[18:24] <[Coke]> bisectable6: run('ls')

[18:24] <bisectable6> [Coke], Will bisect the whole range automagically because no endpoints were provided, hang tight

[18:25] <bisectable6> [Coke], ¦6c (92 commits): «3rdparty␤Akefile␤CONTRIBUTING.md␤Dockerfile␤LICENSE␤META6.json␤README.md␤compose.yaml␤config-default.json␤data␤lib␤maintenance␤sandbox␤services␤xbin␤xt␤»

[18:25] <bisectable6> [Coke], Nothing to bisect!

[18:30] <[Coke]> (language version change) - hurm, maybe not. It's hidden inside the Instant class.

[18:36] <lizmat> yeah, I thought it was carefully hidden ?

[18:46] <[Coke]> There's a C interface here, so I'm guessing he needs to be careful with the result, but I can't see right now how he's creating it.

[18:46] <[Coke]> ... and I should be writing my talk. :)

[18:46] <[Coke]> but this is probably fixable with a patch to Touch.

[18:46] <[Coke]> to warn you: it doesn't work on Mac, in case you got curious.

[18:46] <[Coke]> Also: would love a simple sample showing how to get AST out of some code.

[18:51] <lizmat> m: say Q|say "Foo"|.AST

[18:51] <camelia> rakudo-moar 58a7b820c: OUTPUT: «RakuAST::StatementList.new(␤  RakuAST::Statement::Expression.new(␤    expression => RakuAST::Call::Name::WithoutParentheses.new(␤      name => RakuAST::Name.from-identifier("say"),␤      args => RakuAST::ArgList.new(␤        RakuAST::QuotedS…»

[18:54] <[Coke]> why doesn't that need an env var or a use?

[18:55] <lizmat> because  :-)

[18:55] <lizmat> it doesn't interfere with anything

[18:56] <nine> Just keep in mind that this is not an interface that is likely to stay forever

[18:57] <[Coke]> Yup, that's part of my 5m.

[18:57] <[Coke]> TBD: Review

[18:57] <[Coke]> lizmat: I just installed L10N::JA but don't have "ryuuu" as an executable.

[18:58] <lizmat> and ryuu  ?

[19:05] <lizmat> (only 2 u's

[19:05] <lizmat> )

[19:09] <[Coke]> ah, there it is

[19:10] <[Coke]> in that case https://raku.land/zef:l10n/L10N::JA has a typo in the README

[19:12] <[Coke]> also the second example doesn't work?

[19:12] <[Coke]> Undeclared routine: 言う used at line 2

[19:14] <[Coke]> similar issue with L10N::NL's second example

[19:14] <[Coke]> Undeclared routine: zeg used at line 2

[19:14] <[Coke]> FYI. Will simplify the example shown to the working ::NL one. :)

[19:15] <[Coke]> also: dutku -e 'zeg "Hallo Wereld"' emits an extra newline before saying Hallo

[19:15] <[Coke]> sorry for all the bug reports here.

[19:30] *** guifa left
[20:00] <patrickb> jdv: The fallout is pretty serious. When using a relocatable rakudo build, it's not possible to install any module that contains any bin/ files.

[20:01] <patrickb> This includes zef. This also means there won't be any compiled release.

[20:02] <patrickb> The fix is a pretty small change. Testing the fix is as simple as trying to install zef in a relocatable rakudo build.

[20:06] <patrickb> re How did it happen? The offending PR changes how our script executables are generated when installing a module. I've tested this on Windows, MacOS and Linux, but did not do so in different build variations. I.e. I always did non-relocatable builds.

[20:07] <patrickb> The issue only shows in relocatable builds. That's why it only surfaced after the source release when trying to do the binary release.

[20:10] <patrickb> Why is the PR that fixes this not merged? - There is a newly breaking test in the CI. I'm currently looking into that. But so far it seems it's the CI setup that has somehow changed.

[20:34] * japhb returns from 2.5 days AFK ...

[20:35] <japhb> [Coke]: I realize this is late for your lightning talk, but:

[20:36] <japhb> We currently have Unicode v15.0 (This is available as `Unicode.version` directly in Raku)

[20:37] <japhb> We need to upgrade across 15.1, 16.0, and (in September at the latest) 17.0

[20:38] <japhb> 16.0 had some significant changes, including changing file formats, additional data files, and the new indic line breaking algorithm (probably what "karl from p5" was talking about).

[20:39] <japhb> 17.0 rearranges the directory tree similar to how 13.0 did (in a way that makes more sense, but also means that the tools need to adapt to it yet again).

[20:40] <japhb> I have more to do before I can get the current data files to parse correctly and emit the correct C files; I am also working on maintainer documentation of how to do all this next year.

[20:41] <patrickb> I have the MacOS CI fallout tracked down: https://github.com/rakudo/rakudo/issues/5921

[20:42] <patrickb> japhb++ Writing documentation for this is very kind to the future people.

[20:43] <japhb> There is more documentation needed for the C data structures that are produced (and presumably the MoarVM, nqp, and/or Rakudo algorithms that operate on them), but I haven't even made it to the point I can do a good job of that yet.

[20:45] <japhb> Thanks patrickb.  Yeah, it's clear that this whole area needs to be improved from a maintainability point of view, where the "maintainability" in question doesn't just consist of "can fix a bug in interpretation of *existing* Unicode rules", since the Unicode Consortium -- despite having lots of stability rules -- appears to be excellent and punishing implementors.

[20:45] <japhb> *excellent at

[21:38] <Geth> ¦ JA/main: 3bbd624ddf | (Elizabeth Mattijsen)++ | 3 files

[21:38] <Geth> ¦ JA/main: Fix documentation of the ryuu executable, Will Coleda++

[21:38] <Geth> ¦ JA/main: review: https://github.com/Raku-L10N/JA/commit/3bbd624ddf

[21:50] <Geth> ¦ rakudo: patrickbkr++ created pull request #5922: Fix `raku -V` on strange non-standard MacOS

[21:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5922

[21:53] <Geth> ¦ rakudo/main: 2223dc4c70 | (Patrick Böker)++ | src/core.c/CompUnit/Repository/Installation.rakumod

[21:53] <Geth> ¦ rakudo/main: Fix wrapper installation in relocatable installations

[21:53] <Geth> ¦ rakudo/main: 

[21:53] <Geth> ¦ rakudo/main: `<abs-slash>` is not a valid command for program arg in our wrapper

[21:53] <Geth> ¦ rakudo/main: generator. Doesn't make much sense either. The program path needs to be

[21:53] <Geth> ¦ rakudo/main: understood by the OS, so it requires platform separators.

[21:53] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2223dc4c70

[21:53] <Geth> ¦ rakudo/main: 2d60b20179 | (Patrick Böker)++ | src/core.c/Main.rakumod

[21:53] <Geth> ¦ rakudo/main: Fix program name in USAGE

[21:53] <Geth> ¦ rakudo/main: 

[21:54] <Geth> ¦ rakudo/main: With the new script wrappers the script is not executable anymore. With

[21:54] <Geth> ¦ rakudo/main: the new wrappers we always generate two files, a wrapper program that is

[21:54] <Geth> ¦ rakudo/main: executable and a .raku script that is not executable. Thus the path

[21:54] <Geth> ¦ rakudo/main: shortening logic isn't triggered anymore. Fix by additionally detecting

[21:54] <Geth> ¦ rakudo/main: such wrapper + script combinations and shortening them respectively as

[21:54] <Geth> ¦ rakudo/main: <…commit message has 6 more lines…>

[21:54] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2d60b20179

[21:54] <Geth> ¦ rakudo/main: 51fb0954aa | (Patrick Böker)++ (committed using GitHub Web editor) | 2 files

[21:54] <Geth> ¦ rakudo/main: Merge pull request #5920 from patrickbkr/script-wrapper-fixes

[21:54] <Geth> ¦ rakudo/main: 

[21:54] <Geth> ¦ rakudo/main: Script wrapper fixes

[21:54] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/51fb0954aa

[21:55] <patrickb> jdv: The fix for the script installation issue in relocatable builds is now merged.

[22:08] <lizmat> [Coke]: cannot reproduce the extra line

[22:08] <lizmat> *can* reproduce the slangification issue

[22:08] <lizmat> :-(

[22:11] <lizmat> will look at that tomorrow, thanks for the nudge!

[22:14] <[Coke]> japhb: thanks for the info, appreciate it!

[22:14] <[Coke]> lizmat: I'll file a ticket on the whitespace issue with sw_vers, etc.

[22:17] <[Coke]> lizmat: the extra whitespace is *in the sample code in the readme*

[22:18] <[Coke]> if I cut and paste it from the readme? whitespace. type it by hand? nope

[22:19] <[Coke]> ... and only if I do it weird, I guess.

[22:19] <[Coke]> I did open https://github.com/Raku-L10N/NL/issues/1, though. :)

[22:19] <[Coke]> so ignore the whitespace thing, was just freaking out before the talk.

[23:20] <[Coke]> What units are Instant:1751239187.226795467

[23:20] <[Coke]> is that a fractional number of epoch seconds?

