[01:41] *** coleman left
[01:42] *** coleman joined
[01:46] *** coleman left
[01:47] *** coleman joined
[12:09] <[Coke]> coleman: any idea on infra for the examples site?

[12:09] <[Coke]> I suspect it hasn't been regenerated in ages.

[12:11] <[Coke]> I already asked about this: https://github.com/Raku/examples/issues/83 back in 2021. :)

[13:02] *** lizmat left
[13:10] *** lizmat joined
[13:22] *** socrates1298 joined
[13:25] *** socrates1298 left
[13:27] *** socrates1298 joined
[13:31] *** socrates1298 left
[13:39] <Geth> ¦ rakudo/main: 283f6bf603 | (Daniel Green)++ | 20 files

[13:39] <Geth> ¦ rakudo/main: Remove a lot of uses of IMPL-WRAP-LIST

[13:39] <Geth> ¦ rakudo/main: 

[13:39] <Geth> ¦ rakudo/main: In UPPERCASE methods we can make assumptions we can't about lowercase

[13:39] <Geth> ¦ rakudo/main: methods.

[13:39] <Geth> ¦ rakudo/main: 

[13:39] <Geth> ¦ rakudo/main: "[Lower case names are] a public API that can be implemented in HLL

[13:39] <Geth> ¦ rakudo/main: code and therefore potentially returns a Raku List instead of a

[13:39] <Geth> ¦ rakudo/main: VMArray."

[13:39] <Geth> ¦ rakudo/main:  - https://irclogs.raku.org/raku-dev/2025-06-01.html#17:34

[13:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/283f6bf603

[13:39] <Geth> ¦ rakudo/main: a317ba42f7 | (Daniel Green)++ | 4 files

[13:39] <Geth> ¦ rakudo/main: UNWRAP the results of get-implicit-lookups() before indexing

[13:39] <Geth> ¦ rakudo/main: 

[13:40] <Geth> ¦ rakudo/main: "[It] is a public API and as such can be overridden by a Raku class

[13:40] <Geth> ¦ rakudo/main: which would return a List, not a VMArray. Thus we really should

[13:40] <Geth> ¦ rakudo/main: IMPL-UNWRAP-LIST the result before indexing into it."

[13:40] <Geth> ¦ rakudo/main:  - https://github.com/rakudo/rakudo/pull/5887#discussion_r2106109015

[13:40] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a317ba42f7

[13:40] <Geth> ¦ rakudo/main: 94457945e4 | MasterDuke17++ (committed using GitHub Web editor) | 20 files

[13:40] <Geth> ¦ rakudo/main: Merge pull request #5887 from MasterDuke17/remove_a_lot_of_IMPL-UNWRAP-LISTs

[13:40] <Geth> ¦ rakudo/main: 

[13:40] <Geth> ¦ rakudo/main: RakuAST: Remove a lot of uses of IMPL-WRAP-LIST where it's safe to assume they aren't needed.

[13:40] <Geth> ¦ rakudo/main: 

[13:40] <Geth> ¦ rakudo/main: Also *add* some uses of IMPL-UNWRAP-LIST that were missing.

[13:40] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/94457945e4

[13:42] *** socrates1298 joined
[14:02] *** socrates1298 left
[16:03] <jdv> is this month rakuast?

[16:20] <[Coke]> I seriously doubt it.

[16:20] <[Coke]> pretty sure 'make install' doesn't work yet, some speed issues...

[16:52] <coleman> Coke it might be a git checkout on the OpenBSD server where Raku.org lives. looking 

[16:55] <coleman> actually probably not. needs to be redeployed

[16:56] <coleman> I will check in a Docker build

[17:13] <jdv> ok

[17:14] <timo> when's the perfect time for my desktop to drop off the 'net? :)

[17:25] *** finanalyst joined
[17:33] <timo> the script that runs on that machine that prints its `ip a l` output to a file over ssh is still running, but the ipv6 address i have in the output i can't even ping >:(

[17:33] <timo> now what

[17:34] <timo> i was ssh'd into that machine just fine an hour ago

[17:35] <timo> until it stopped working, of course

[17:48] <[Coke]> coleman: I switched the main branch to main

[17:49] <[Coke]> I'm also making a bunch of changes, so HEAD (which was already failing 'make html') might be borked.

[17:49] <[Coke]> If you have any issues, ping me and I'll address them ASAP

[19:20] *** finanalyst left
[20:27] <Geth> ¦ rakudo/bootstrap-rakuast: 8 commits pushed by (Stefan Seifert)++

[20:27] <Geth> ¦ rakudo/bootstrap-rakuast: bc0d70bd89 | RakuAST: work around serialization problem with static code object

[20:27] <Geth> ¦ rakudo/bootstrap-rakuast: fae30cbc24 | RakuAST: work around bootstrapping issues with CORE:: lookups

[20:27] <Geth> ¦ rakudo/bootstrap-rakuast: 145e014459 | RakuAST: work around parse error

[20:27] <Geth> ¦ rakudo/bootstrap-rakuast: 6b62c06b1e | RakuAST: work around self not found in lambdas declared in BEGIN block

[20:27] <Geth> ¦ rakudo/bootstrap-rakuast: 6179060542 | RakuAST: remove workaround needed by the old compiler frontend

[20:27] <Geth> ¦ rakudo/bootstrap-rakuast: 12871a1322 | RakuAST: work around indirect lookups not available early enough in the bootstrap

[20:27] <Geth> ¦ rakudo/bootstrap-rakuast: 0c1a699354 | RakuAST: work around segfaults trying to access a non-existing outer

[20:27] <Geth> ¦ rakudo/bootstrap-rakuast: 44da2e48f5 | Fix bootstrap issues with Buf

[20:27] <Geth> ¦ rakudo/bootstrap-rakuast: review: https://github.com/rakudo/rakudo/compare/a490748582fe...44da2e48f575

[20:37] <[Coke]> nine++

[20:40] <Geth> ¦ rakudo: MasterDuke17++ created pull request #5894: RakuAST: Bootstrap rakuast fix no lexical with name $_

[20:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5894

[20:46] <timo> DOM::Tiny:ver<0.5.2>:auth<github:zostay> - seems to be failing a test, /cc [Coke] 

[21:24] <timo> well, i have a change that makes it not b-rk any more

[21:38] <timo> m: sub testit($/, $x) { if $x { make Empty } else { make () } }; "hi" ~~ /./; testit($/, False); say $/.made.raku; say $/.made eqv Empty; testit($/, True); say $/.made.raku; say $/.made eqv Empty

[21:38] <camelia> rakudo-moar 94457945e: OUTPUT: «()␤False␤Empty␤True␤»

[21:39] <timo> bisectable6: sub testit($/, $x) { if $x { make Empty } else { make () } }; "hi" ~~ /./; testit($/, False); say $/.made.raku; say $/.made eqv Empty; testit($/, True); say $/.made.raku; say $/.made eqv Empty

[21:39] <bisectable6> timo, Will bisect the whole range automagically because no endpoints were provided, hang tight

[21:40] <bisectable6> timo, Output on all releases: https://gist.github.com/e8b2872a91ae0c516ceb8326523926e3

[21:40] <bisectable6> timo, Bisecting by exit code (old=2019.07.1 new=2019.11). Old exit code: 1

[21:40] <bisectable6> timo, bisect log: https://gist.github.com/8c4b88412dedc66da9fa585735eefcde

[21:40] <bisectable6> timo, (2019-11-01) https://github.com/rakudo/rakudo/commit/7cf73de0d47f3f4a0a96a4108194d93c0a81e7ad

[21:40] <bisectable6> timo, Bisecting by output (old=2017.05 new=2017.06) because on both starting points the exit code is 1

[21:41] <bisectable6> timo, bisect log: https://gist.github.com/a7f8b0d9f278658a4618c996f5e0ce14

[21:41] <bisectable6> timo, (2017-06-01) https://github.com/rakudo/rakudo/commit/7cf01296d95ef7abd4369db25e996f656b955cd7

[21:41] <bisectable6> timo, Bisecting by output (old=2016.09 new=2016.10) because on both starting points the exit code is 1

[21:41] <timo> haha, not quite what i wanted

[21:41] <bisectable6> timo, bisect log: https://gist.github.com/ec247b167c5c32d327eb2983829a9b4d

[21:41] <bisectable6> timo, Output on all releases and bisected commits: https://gist.github.com/70bc5ad75643ed5db2c6c3bd2e0daf3c

[21:42] <timo> that's really my fault

[21:43] <timo> bisectable6: sub testit($/, $x) { if $x { make Empty } else { make () } }; "hi" ~~ /./; testit($/, False); say $/.made.perl; say $/.made eqv Empty; testit($/, True); say $/.made.perl; say $/.made eqv Empty

[21:43] <bisectable6> timo, Will bisect the whole range automagically because no endpoints were provided, hang tight

[21:44] <bisectable6> timo, Output on all releases: https://gist.github.com/e32ce47b4008934b4ba2911679a6940f

[21:44] <bisectable6> timo, Bisecting by output (old=2016.12 new=2017.01) because on both starting points the exit code is 0

[21:44] <bisectable6> timo, bisect log: https://gist.github.com/9f29b5e7bba97564d2fb40f9f0b6bea3

[21:44] <bisectable6> timo, (2017-01-08) https://github.com/rakudo/rakudo/commit/ec0258a44d9878d613a76bfa7518c60f04425dff

[21:44] <bisectable6> timo, Output on all releases and bisected commits: https://gist.github.com/cb2d1bd164778992938f86ec66fb138a

[22:26] <[Coke]> timo: DOM::Tiny – AlwaysFail - so last blin run it faild both old and new

[22:26] <timo> OK, as I thought

[22:26] <timo> i do have a pull request almost there

[22:27] <timo> there's another PR from AlexDaniel in the same repo that didn't get a response unfortunately

