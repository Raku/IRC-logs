[00:00] *** kjp left
[00:01] *** kjp joined
[00:11] *** kjp left
[00:11] *** kjp joined
[01:34] <jdv> cream?

[07:54] <lizmat> brilliant

[08:31] *** RakuIRCLogger left
[08:38] *** librasteve_ joined
[09:53] *** camelia joined
[09:53] <nine> m: say "I'm back, sorry for the delay"

[09:53] <camelia> rakudo-moar f56482941: OUTPUT: «I'm back, sorry for the delay␤»

[09:59] <lizmat> nine++

[11:47] *** lizmat left
[11:48] *** lizmat joined
[13:23] <patrickb> lizmat: https://www.heise.de/news/Cyber-Resilience-Act-Initiative-der-Eclipse-Foundation-hilft-bei-Compliance-10525852.html?wt_mc=rss.red.ho.ho.rdf.beitrag.beitrag

[13:24] <patrickb> This sounds highly relevant to our (currently mostly driven by you) CRA efforts.

[13:24] <lizmat> meh, paywalled

[13:24] <patrickb> wut?

[13:24] <lizmat> or I must agree to all cookies

[13:24] <patrickb> should not be. I'm confused.

[13:25] <lizmat> say gather ( (1 ,"a"), (2, "b"), (3, "c")).map( { state @left; state @right; @left.push(.[0]); @right.push(.[1]); LAST { take @left.List; take @right.List } } )

[13:25] <evalable6> lizmat, rakudo-moar f56482941: OUTPUT: «((1 2 3) (a b c))␤»

[13:25] <lizmat> oops, ww

[13:25] <lizmat> Data processing by advertising providers including personalised advertising with profilingConsent required for free use

[13:25] <lizmat> With our Pur subscription you can use heise.de without tracking, external banner and video advertising for €4.95 / month.

[13:26] <lizmat> sounds like a paywall to me

[13:26] <patrickb> https://web.archive.org/web/20250814123735/https://www.heise.de/news/Cyber-Resilience-Act-Initiative-der-Eclipse-Foundation-hilft-bei-Compliance-10525852.html?wt_mc=rss.red.ho.ho.rdf.beitrag.beitrag

[13:26] <patrickb> haha! \o/

[13:28] <lizmat> nice  (what I could gather from it)

[14:59] <patrickb> Working on Rainbow (the syntax highlighter) again. I think there is no way to reliably differentiate term and operator position without "ticking" through the entire code. Right? I.e. looking at a random position in some code there is no way to know if this is term or op by only looking at the immediate context, right?

[15:08] <lizmat> I don't think so, but am not 100% sure

[15:09] <patrickb> To give a specific example: When I see a '<' I can't reliably (or at least with high accuracy) know if it's a comparator or a quote list opener.

[15:09] <lizmat> indeed... and that's a source of fun in the grammar  :-)

[15:11] <patrickb> "my enum Expecting <Header Payload>" is a difficult example. I'd need to understand the `my` declaratory syntax to make sense of this.

[20:05] *** [Coke] left
[20:05] *** coleman left
[20:05] *** rba left
[20:05] *** samebchase left
[20:05] *** gfldex left
[20:05] *** SmokeMachine left
[20:05] *** leont left
[20:05] *** sjn left
[20:05] *** zostay left
[20:05] *** eof left
[20:05] *** coverable6 left
[20:05] *** greppable6 left
[20:05] *** tellable6 left
[20:05] *** linkable6 left
[20:05] *** bloatable6 left
[20:05] *** JRaspass left
[20:07] *** coleman joined
[20:07] *** rba joined
[20:07] *** samebchase joined
[20:07] *** gfldex joined
[20:07] *** SmokeMachine joined
[20:07] *** leont joined
[20:07] *** sjn joined
[20:07] *** zostay joined
[20:07] *** eof joined
[20:09] *** coverable6 joined
[20:09] *** greppable6 joined
[20:09] *** tellable6 joined
[20:09] *** linkable6 joined
[20:09] *** bloatable6 joined
[20:09] *** JRaspass joined
[20:09] *** [Coke] joined
[20:22] *** rakkable left
[20:22] *** rakkable joined
[23:32] *** guifa left
[23:48] *** guifa joined
[23:57] *** guifa left
