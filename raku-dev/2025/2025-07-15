[03:47] *** guifa left
[09:17] <ab5tract> I'm getting a 503 from docs.raku.org

[09:17] <lizmat> yeah, its been down for the past 3 hours  :-(

[09:17] <lizmat> I've alerted infra on #infra

[09:18] <ab5tract> ah, gotcha

[09:18] <ab5tract> here's an alternative https://raku-knowledge-base.podlite.org/doc/introduction

[09:21] <ab5tract> hmm, that's pretty broken too :(

[09:22] <ab5tract> this is a really telling situation though, that the "only" way to read the docs is an online source

[10:27] *** guifa joined
[10:31] *** librasteve_ joined
[11:00] *** guifa left
[11:06] <lizmat> bisectable6: old=2023.01 say (1,2,3).are(Int)

[11:06] <bisectable6> lizmat, Cannot find revision “2023.01” (did you mean “2025.01”?)

[11:06] <lizmat> bisectable6: old=2024.01 say (1,2,3).are(Int)

[11:06] <bisectable6> lizmat, Bisecting by exit code (old=2024.01 new=f52cc92). Old exit code: 1

[11:06] <bisectable6> lizmat, bisect log: https://gist.github.com/5eb2d6ab6a26d8b87918165decbc6627

[11:06] <bisectable6> lizmat, (2024-05-26) https://github.com/rakudo/rakudo/commit/23b94de650ece6d40569216a7c8b97fe9274c392

[12:18] *** guifa joined
[13:40] <Geth> ¦ rakudo/andthen-orelse: 1499dafcd3 | ab5tract++ | src/core.c/Promise.rakumod

[13:40] <Geth> ¦ rakudo/andthen-orelse: Use self.result and await in synchronous mode

[13:40] <Geth> ¦ rakudo/andthen-orelse: review: https://github.com/rakudo/rakudo/commit/1499dafcd3

[16:03] *** gfldex left
[16:05] *** gfldex joined
[18:03] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: 712477c98c | (Timo Paulssen)++ | 2 files

[18:03] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: Load only Perl6:: or Raku:: Grammar and Actions

[18:03] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: 

[18:03] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: currently setup-RakuAST-WHO breaks when trying to run anything with

[18:03] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: RAKUDO_RAKUAST=1, haven't figured that out yet.

[18:03] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: review: https://github.com/rakudo/rakudo/commit/712477c98c

[21:53] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: 821e27e4cc | (Timo Paulssen)++ | 2 files

[21:53] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: Load only Perl6:: or Raku:: Grammar and Actions

[21:53] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: 

[21:53] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: currently setup-RakuAST-WHO breaks when trying to run anything with

[21:53] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: RAKUDO_RAKUAST=1, haven't figured that out yet.

[21:53] <Geth> ¦ rakudo/rakudo_load_only_one_grammar: review: https://github.com/rakudo/rakudo/commit/821e27e4cc

[22:12] <Geth> ¦ problem-solving: lizmat assigned to codesections Issue Add a "use-targets" item to META6.json https://github.com/Raku/problem-solving/issues/485

[22:12] <Geth> ¦ problem-solving: lizmat unassigned from codesections Issue Add a "use-targets" item to META6.json https://github.com/Raku/problem-solving/issues/485

[22:19] <ugexe> seems problematic. -Ilib would still include them, and presumably you would still want to test the private modules which requires `use`ing them

[22:19] <ugexe> i agree it would be nice to have private modules though

[22:21] <ugexe> in golang you put such modules in a special directory i.e. internal/

[22:30] *** librasteve_ left
[22:35] <ugexe> i also don't see why we wouldnt have a private-provides or some such. having provides act different based on the presence of some other field seems confusing

[22:36] <ugexe> using `use` in the name doesn't make sense at all since modules can be loaded by file name, need, require, etc

[22:39] <ugexe> and as one final nit pick, the issue title should describe the problem not describe a proposed solution

[22:40] <ugexe> "Allow for private modules within a distribution" would be accurate

