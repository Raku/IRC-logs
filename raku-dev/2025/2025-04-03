[01:48] *** vrurg left
[01:48] *** vrurg joined
[02:10] <Geth> ¦ rakudo: MasterDuke17++ created pull request #5839: RakuAST: add some more suggestions to exception messages

[02:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5839

[03:19] *** japhb left
[03:26] *** japhb joined
[07:43] *** [Tux] left
[07:49] *** [Tux] joined
[08:33] *** finanalyst joined
[08:37] *** sena_kun joined
[08:49] *** finanalyst left
[08:52] <Geth> ¦ rakudo/main: a3709f3f94 | (Elizabeth Mattijsen)++ | src/Raku/Actions.nqp

[08:52] <Geth> ¦ rakudo/main: RakuAST: make "Foo sub { }" set up returns in signature

[08:52] <Geth> ¦ rakudo/main: 

[08:52] <Geth> ¦ rakudo/main: Before, this would only happen if there was an actual () in the

[08:52] <Geth> ¦ rakudo/main: sub's signature

[08:52] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a3709f3f94

[08:56] *** finanalyst joined
[09:08] *** finanalyst left
[09:10] <Geth> ¦ rakudo/main: 299206eb44 | (Daniel Green)++ (committed by Stefan Seifert) | 4 files

[09:10] <Geth> ¦ rakudo/main: RakuAST: add some more suggestions to exception messages

[09:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/299206eb44

[09:17] <Geth> ¦ rakudo/main: b857f36b38 | (Stefan Seifert)++ | src/Raku/ast/scoping.rakumod

[09:17] <Geth> ¦ rakudo/main: RakuAST: add missing RakuAST::UndeclaredSymbolDescription::Type

[09:17] <Geth> ¦ rakudo/main: 

[09:17] <Geth> ¦ rakudo/main: forgot to save the file before committing

[09:17] <Geth> ¦ rakudo/main: ENOCOFFEE

[09:17] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b857f36b38

[09:32] <Geth> ¦ rakudo/main: 261fbad865 | (Stefan Seifert)++ | src/Raku/ast/scoping.rakumod

[09:32] <Geth> ¦ rakudo/main: RakuAST: treat subsets like every other type of package

[09:32] <Geth> ¦ rakudo/main: 

[09:32] <Geth> ¦ rakudo/main: Turns out, there is no reason for special casing subset declarations in

[09:32] <Geth> ¦ rakudo/main: any way. Removing the special case lets us report redeclarations of

[09:32] <Geth> ¦ rakudo/main: other types as subsets.

[09:32] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/261fbad865

[10:21] <Geth> ¦ rakudo/main: 49c5dc47a1 | (Stefan Seifert)++ | src/Raku/ast/scoping.rakumod

[10:21] <Geth> ¦ rakudo/main: RakuAST: report redeclarations of packages with multi-part names

[10:21] <Geth> ¦ rakudo/main: 

[10:21] <Geth> ¦ rakudo/main: Fixes: class A::B { }; class A::B { } # to fail

[10:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/49c5dc47a1

[10:21] <Geth> ¦ rakudo/main: 27f47363c3 | (Stefan Seifert)++ | src/Raku/ast/term.rakumod

[10:21] <Geth> ¦ rakudo/main: RakuAST: name the pseudo-package we're trying to bind to in error message

[10:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/27f47363c3

[10:54] <[Tux]> Rakudo v2025.03-149-g27f47363c (v6.d) on MoarVM 2025.03-9-g5f399c640

[10:54] <[Tux]> csv-test-xs-20      0.136 -  0.139

[10:54] <[Tux]> csv-ip5xs           0.263 -  0.265

[10:54] <[Tux]> test-t --race       0.271 -  0.278

[10:54] <[Tux]> test-t              0.410 -  0.421

[10:54] <[Tux]> csv-parser          1.102 -  1.109

[10:54] <[Tux]> csv-ip5xs-20        1.081 -  1.121

[10:55] <[Tux]> test-t-20 --race    1.233 -  1.237

[10:55] <[Tux]> test                1.871 -  1.976

[10:55] <[Tux]> test-t-20           5.013 -  5.128

[10:55] <[Tux]> https://tux.nl/Talks/CSV6/speed4-20.html / https://tux.nl/Talks/CSV6/speed4.html https://tux.nl/Talks/CSV6/speed.log

[11:13] <Geth> ¦ rakudo/main: 8246458c09 | (Stefan Seifert)++ | src/Raku/ast/expressions.rakumod

[11:13] <Geth> ¦ rakudo/main: RakuAST: don't compile time check when trying to assign to literal

[11:13] <Geth> ¦ rakudo/main: 

[11:13] <Geth> ¦ rakudo/main: If someone tries to assign to a literal, we'll get a more

[11:13] <Geth> ¦ rakudo/main: descriptive error message later.

[11:13] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/8246458c09

[11:13] <Geth> ¦ rakudo/main: 6a97c889ff | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[11:13] <Geth> ¦ rakudo/main: RakuAST: fix error in can-be-bound-to when type is set by of trait

[11:13] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6a97c889ff

[11:27] <Geth> ¦ rakudo/main: 8e998ae45d | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[11:27] <Geth> ¦ rakudo/main: RakuAST: prohibit declaring variables with ? twigil

[11:27] <Geth> ¦ rakudo/main: 

[11:27] <Geth> ¦ rakudo/main: ? twigil is for compiler variables, thus they are reserved

[11:27] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/8e998ae45d

[11:27] <Geth> ¦ rakudo/main: 09a085a0a1 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[11:27] <Geth> ¦ rakudo/main: RakuAST: prohibit declaring variable with indirect names

[11:27] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/09a085a0a1

[11:30] *** JimmyZhuo joined
[12:02] *** patrickb left
[12:02] *** greenfork left
[12:04] *** patrickb joined
[12:05] *** greenfork joined
[12:08] <Geth> ¦ rakudo/main: 81c863a726 | (Elizabeth Mattijsen)++ | src/core.c/Mu.rakumod

[12:08] <Geth> ¦ rakudo/main: Make error message handle nameless declarator targets better

[12:08] <Geth> ¦ rakudo/main: 

[12:08] <Geth> ¦ rakudo/main: Specifically the case of unnamed subs

[12:08] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/81c863a726

[12:09] <Geth> ¦ roast: 008ba76f1b | (Stefan Seifert)++ | S12-class/augment-supersede.t

[12:09] <Geth> ¦ roast: Fix accidental re-declaration of our-scoped constant in same package

[12:09] <Geth> ¦ roast: 

[12:09] <Geth> ¦ roast: Classes are our-scoped by default. While an EVAL is a different

[12:09] <Geth> ¦ roast: lexical scope, it doesn't change the current package. So running two

[12:09] <Geth> ¦ roast: EVALs, each declaring the same our-scoped class should yield a

[12:09] <Geth> ¦ roast: redeclaration error. However, rakudo did not check for this condition

[12:09] <Geth> ¦ roast: and silently replaced the old stash entry with the new one.

[12:09] <Geth> ¦ roast: 

[12:09] <Geth> ¦ roast: Similar to commit 172634a3cdce36f07123c58afb3f2375e3476180

[12:09] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/008ba76f1b

[12:10] <Geth> ¦ rakudo/main: 16c4fc4f3f | (Stefan Seifert)++ | 2 files

[12:10] <Geth> ¦ rakudo/main: RakuAST: report error when trying to augment role

[12:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/16c4fc4f3f

[12:36] <Geth> ¦ rakudo/main: bf6ba28e13 | (Stefan Seifert)++ | src/Raku/ast/signature.rakumod

[12:36] <Geth> ¦ rakudo/main: RakuAST: fix copy pasta in error message

[12:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/bf6ba28e13

[12:36] <Geth> ¦ rakudo/main: 4271ccc0fb | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[12:36] <Geth> ¦ rakudo/main: RakuAST: prohibit placeholder vars with upper case single letter names

[12:36] <Geth> ¦ rakudo/main: 

[12:36] <Geth> ¦ rakudo/main: Avoids confusion with Perl 5 magic variables.

[12:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4271ccc0fb

[13:02] *** finanalyst joined
[13:07] <lizmat> nine: looks like the failures in t/spec/S26-documentation/why-*  are caused by the set-WHY being called in ::VarDeclaration::Simple.new only

[13:07] <lizmat> and that's not set yet then

[13:08] <lizmat> figuring out where to insert the appropriate set-WHY now

[13:08] <lizmat> which should hopefully give us those 3 files

[13:10] <nine> That'd be awesome :)

[13:12] <lizmat> but first afk for a few hours&

[13:13] *** leont_ joined
[13:14] *** nine left
[13:15] *** nine joined
[13:17] *** rakkable__ joined
[13:17] *** leont left
[13:17] *** rakkable left
[13:17] *** leont_ is now known as leont

[13:23] <finanalyst> [Coke] pls have a look at https://finanalyst.org/REPL.html

[13:40] <nine> Variables are stubbed before we parse the initializer. So maybe a set-WHY in method variable-declarator would do the trick already?

[13:49] *** JimmyZhuo left
[13:56] <[Coke]> Util++ for his work on the mailing list, man.

[14:01] <Geth> ¦ rakudo/main: 156aeef3ef | (Stefan Seifert)++ | src/Raku/ast/variable-access.rakumod

[14:01] <Geth> ¦ rakudo/main: RakuAST: prohibit virtual calls in attribute initializers

[14:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/156aeef3ef

[14:22] <Geth> ¦ rakudo/main: ad9be7bc52 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[14:22] <Geth> ¦ rakudo/main: RakuAST: promote declaring attributes in a module to a sorry

[14:22] <Geth> ¦ rakudo/main: 

[14:22] <Geth> ¦ rakudo/main: There is an exception for when we're in an EVAL at runtime (or the class

[14:22] <Geth> ¦ rakudo/main: is imported). Don't know why this is needed, but there's a spectest

[14:22] <Geth> ¦ rakudo/main: requiring this.

[14:22] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ad9be7bc52

[14:35] *** Xliff joined
[14:35] <Xliff> ]

[14:43] <Geth> ¦ rakudo/main: fbf25da77e | (Stefan Seifert)++ | 2 files

[14:43] <Geth> ¦ rakudo/main: RakuAST: complain about invalid sub scope

[14:43] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fbf25da77e

[14:43] <Geth> ¦ rakudo/main: e50a90a306 | (Stefan Seifert)++ | src/Raku/ast/package.rakumod

[14:43] <Geth> ¦ rakudo/main: RakuAST: complain about invalid scope for package

[14:43] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e50a90a306

[14:43] <nine> 10 sounds a lot more manageable than 54 :)

[14:53] <[Coke]> releasable6: next

[14:53] <releasable6> [Coke], Next release in ≈16 days and ≈4 hours. 1 blocker. 159 out of 159 commits logged

[14:53] <releasable6> [Coke], Details: https://gist.github.com/8bb2a76ff751cdc22a3ddb686f2a79b8

[14:54] <[Coke]> .. how can it be only 16 days?

[15:44] *** codesections joined
[15:53] *** codesections left
[16:19] <Geth> ¦ rakudo/main: 4 commits pushed by (Stefan Seifert)++

[16:19] <Geth> ¦ rakudo/main: a8292bd02a | RakuAST: use correct declarator for X::Anon::Multi exception

[16:19] <Geth> ¦ rakudo/main: b8f45617fe | RakuAST: prohibit augmenting anonymous package

[16:19] <Geth> ¦ rakudo/main: c162b163a5 | RakuAST: complain about trying to augment unknown type

[16:19] <Geth> ¦ rakudo/main: 4582cf635d | RakuAST: tell what's missing on constant without initializer

[16:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/e50a90a306df...4582cf635ddf

[16:37] <Geth> ¦ rakudo/main: af7ed31eb4 | (Stefan Seifert)++ | src/Raku/ast/resolver.rakumod

[16:37] <Geth> ¦ rakudo/main: RakuAST: collect multiple stubbed errors into a single exception

[16:37] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/af7ed31eb4

[16:53] *** rakkable__ left
[16:53] *** rakkable joined
[16:57] <Geth> ¦ rakudo/main: 55c894c9fc | (Stefan Seifert)++ | src/Raku/ast/variable-access.rakumod

[16:57] <Geth> ¦ rakudo/main: RakuAST: lose the & when reporting undeclared &routine

[16:57] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/55c894c9fc

[16:57] *** finanalyst left
[17:09] <[Coke]> https://github.com/rakudo/rakudo/issues/5836 - lizmat, were you able to reproduce the Image:: failure there either?

[17:10] <[Coke]> that one looks weirder, couldn't extra a META6.json file.

[17:11] <lizmat> Image::PNG::Portable installs without issue for me

[17:12] <Geth> ¦ rakudo/main: 4992824e67 | (Stefan Seifert)++ | src/Raku/ast/resolver.rakumod

[17:12] <Geth> ¦ rakudo/main: RakuAST: fix suggestions for type names missing their initial character

[17:12] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4992824e67

[17:12] <[Coke]> lizmat: OK, thanks.

[17:13] <[Coke]> releasable6: next

[17:13] <releasable6> [Coke], Next release in ≈16 days and ≈1 hour. There are no known blockers. 167 out of 167 commits logged

[17:14] <[Coke]> Will do another blin run this week, but cannot promise it will successfully include Red.

[17:14] <[Coke]> (weekend)

[17:34] <Geth> ¦ rakudo/main: d29d7c488b | (Stefan Seifert)++ | 3 files

[17:34] <Geth> ¦ rakudo/main: RakuAST: also suggest attributes on unknown variable name

[17:34] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d29d7c488b

[17:34] <nine> And that boys and girls was t/spec/S32-exceptions/misc2.t

[17:34] <nine> 1334

[17:45] <[Coke]> \o/

[17:51] <[Coke]> seeing test failures just with 'make test' after build on HEAD

[17:54] <[Coke]> still at 145/166 there for ast

[17:54] <[Coke]> at 161 for default

[17:56] <ugexe> [Coke]: the Image::PNG::Portable failed because the tar command exceeded the timeout

[17:57] <ugexe> actually n/m 

[17:58] <ugexe> time out would mention a time out. but for whatever reason the tar command failed, potentially in a flakey way

[18:03] *** sena_kun left
[18:03] *** sena_kun joined
[18:06] *** Altai-man joined
[18:09] *** sena_kun left
[18:39] *** finanalyst joined
[18:44] <Xliff> <Xliff> What is the RakuAST node for a `need` statement?

[18:47] <Xliff> n/m: RakuAST::Statement::Need

[19:02] <[Coke]> the fact that the extract worked once but not twice seemed flaky, yes

[19:02] <lizmat> m: say Q|need "foo"|.AST.statements.head

[19:02] <camelia> rakudo-moar d29d7c488: OUTPUT: «===SORRY!=== Error while compiling EVAL_0␤Undeclared routine:␤    need used at line 1 (in Raku please use "v" prefix and "use" for pragma (e.g., "use v6;", "use v6.c;") instead)␤␤»

[19:02] <lizmat> heh

[19:05] <lizmat> m: say Q|need foo|.AST.statements.head

[19:05] <camelia> rakudo-moar d29d7c488: OUTPUT: «===SORRY!===␤Could not find foo in:␤    /home/camelia/.raku␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6/core␤    CompUnit::Repository…»

[19:05] <lizmat> m: say Q|need Test|.AST.statements.head

[19:05] <camelia> rakudo-moar d29d7c488: OUTPUT: «RakuAST::Statement::Need.new(␤  module-names => (␤    RakuAST::Name.from-identifier("Test"),␤  )␤)␤»

[20:10] *** finanalyst left
[20:12] *** sena_kun joined
[20:14] *** Altai-man left
[20:40] <Geth> ¦ rakudo/main: a995e80502 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[20:40] <Geth> ¦ rakudo/main: RakuAST: compile time check types of attribute default values

[20:40] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a995e80502

[20:40] <nine> 1335

[20:54] <lizmat> nine: nice, was look at that.  But why only for attributes

[20:55] <lizmat> m: my Str $a = 24

[20:55] <camelia> rakudo-moar a995e8050: OUTPUT: «Type check failed in assignment to $a; expected Str but got Int (24)␤  in block <unit> at <tmp> line 1␤␤»

[20:55] <lizmat> shouldn't that be a compile time error as well ?

[21:59] *** guifa joined
[22:13] *** sena_kun left
