[00:10] *** finanalyst left
[14:19] <Geth> ¦ rakudo/lizmat-post2025.01: 82b055b0a1 | (Elizabeth Mattijsen)++ | src/core.c/Date.rakumod

[14:19] <Geth> ¦ rakudo/lizmat-post2025.01: Make sure cloning a Date works for subclasses

[14:19] <Geth> ¦ rakudo/lizmat-post2025.01: 

[14:19] <Geth> ¦ rakudo/lizmat-post2025.01: As found in the research for #1238.  Also re-worked some of the

[14:19] <Geth> ¦ rakudo/lizmat-post2025.01: internals to make it more performant in the new-disp situation

[14:19] <Geth> ¦ rakudo/lizmat-post2025.01: (as most of that code was optimized for the pre-new-disp situation).

[14:19] <Geth> ¦ rakudo/lizmat-post2025.01: 

[14:19] <Geth> ¦ rakudo/lizmat-post2025.01: Makes Date creation (except Date.today) between 25% faster (basic

[14:19] <Geth> ¦ rakudo/lizmat-post2025.01: cases) and 3.5x as fast (for subclasses of Date)

[14:19] <Geth> ¦ rakudo/lizmat-post2025.01: review: https://github.com/rakudo/rakudo/commit/82b055b0a1

[14:19] <lizmat> on to DateTime  :-)

[15:55] <Geth> ¦ rakudo/lizmat-post2025.01: aa0a16efbf | (Elizabeth Mattijsen)++ | 2 files

[15:55] <Geth> ¦ rakudo/lizmat-post2025.01: Remove SET-DAYCOUNT private method

[15:55] <Geth> ¦ rakudo/lizmat-post2025.01: 

[15:55] <Geth> ¦ rakudo/lizmat-post2025.01: It no longer serves a purpose, as the "daycount" check nowadays

[15:55] <Geth> ¦ rakudo/lizmat-post2025.01: depends on it not being 0 (rather than not being nqp::null).

[15:55] <Geth> ¦ rakudo/lizmat-post2025.01: 

[15:55] <Geth> ¦ rakudo/lizmat-post2025.01: Part of the #1238 fixes for DateTime

[15:55] <Geth> ¦ rakudo/lizmat-post2025.01: review: https://github.com/rakudo/rakudo/commit/aa0a16efbf

[16:54] <[Coke]> ... I see why you wanted a potentially earlier release. :)

[16:54] <lizmat> heh  :-)

[16:54] <lizmat> no worries  :-)

[17:05] <[Coke]> lizmat:  will the code coverage tools you wrote also work on core?

[17:05] <[Coke]> wondering if we could do a spec test run to find things that might be unused.

[17:05] <lizmat> not yet, but it should be possible soon

[17:06] <lizmat> dinner&

[17:06] <[Coke]> ooooh

[17:47] <lizmat> meh, looks my latest Date changes trigger some dispatch issue:

[17:47] <lizmat> assign requires a concrete object (got a Callable[Numeric] type object instead)

[17:47] <lizmat>    at src/vm/moar/dispatchers.nqp:222 

[17:47] <lizmat> wtf is a Callable[Numeric] type object ?

[18:44] <Geth> ¦ rakudo/lizmat-post2025.01: 4ba95d3fa4 | (Elizabeth Mattijsen)++ | src/core.c/Date.rakumod

[18:44] <Geth> ¦ rakudo/lizmat-post2025.01: Fix issue with Date.today and Date.clone

[18:44] <Geth> ¦ rakudo/lizmat-post2025.01: 

[18:44] <Geth> ¦ rakudo/lizmat-post2025.01: That were somehow missed in a previous spectest  :-(

[18:44] <Geth> ¦ rakudo/lizmat-post2025.01: 

[18:44] <Geth> ¦ rakudo/lizmat-post2025.01: Date.today called without a :formatter argument, would initialize

[18:44] <Geth> ¦ rakudo/lizmat-post2025.01: the &!formatter attribute without a container, which would cause

[18:44] <Geth> ¦ rakudo/lizmat-post2025.01: a very obscure issue in the dispatcher when trying to .clone such

[18:44] <Geth> ¦ rakudo/lizmat-post2025.01: <…commit message has 6 more lines…>

[18:44] <Geth> ¦ rakudo/lizmat-post2025.01: review: https://github.com/rakudo/rakudo/commit/4ba95d3fa4

[18:57] *** finanalyst left
[19:47] <ab5tract> lizmat++

[19:47] <ab5tract> That commit sounds like it was a bit of an adventure

[19:51] <lizmat> yeah, it was

[19:52] <lizmat> it would only fail on the Date.today fast path

[19:52] <lizmat> which would not check values for year / month / day, as we can be sure that nqp::localtime produces valid values

[19:56] <lizmat> greppable6: BUILDALL

[19:57] <greppable6> lizmat, 23 lines, 13 modules: https://gist.github.com/53deece8ab620118ba5430b53dec2b84

[19:59] <lizmat> meh

[20:12] *** finanalyst joined
[20:13] <[Coke]> I see some comments, a jnthn, a zef, ...

[20:16] <ugexe> that is searching old code, not just every modules current version

[20:17] <ugexe> for instance there is not a single .rakumod file listed

[20:35] <ab5tract> Following the link for zef, I landed at a copy of that repository inside of lizmat’s raku-all-modules

[20:35] <ab5tract> https://github.com/lizmat/raku-all-modules/blob/1a21efff55918653216f6cd745fad8fa76b945e9/cpan/UGEXE/zef/lib/Zef/Distribution.pm6#L59

[20:37] <ab5tract> That’s true for a few other links as well. but not all of them. My spot check revealed the OO::Monitors to point to the community module repo

[20:37] <ugexe> that repo hasnt been updated in 4 years

[20:38] <ugexe> oh nevermind, the link was from an old tree

[22:06] *** coleman left
[22:07] *** coleman joined
[22:34] <ab5tract> apparently that’s the repo greppable6 is designed to search in, according to its help page

[22:35] <ab5tract> greppable6: help

[22:35] <greppable6> ab5tract, Like this: greppable6: password # See wiki for more examples: https://github.com/Raku/whateverable/wiki/Greppable

[22:35] <ab5tract> Seems like this bot could stand for a few more knobs and/or buttons

[22:48] *** coleman left
[22:48] *** coleman joined
[22:58] <lizmat> wow, I completely had forgotten about that repo

[22:59] <lizmat> yeah, looks like I inherited that from moritz

[22:59] <lizmat> my only commit is to adapt the README  :-)

[23:00] <releasable6> Next release in ≈19 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:00] <lizmat> fwiw, I think a subset of the REA would be a more appropriate haystack

[23:00] <lizmat> will mull about that  :-)

[23:48] *** finanalyst left
