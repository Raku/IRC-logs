[00:23] *** librasteve_ left
[01:04] *** socrates1298 joined
[05:28] *** socrates1298 left
[08:51] <nine> If the name part before :: is null, it means the package is unspecified and must be searched for. Generally this means that an initial :: following the main sigil is a no-op on names that are known at compile time, though ::() can also be used to introduce an interpolation. Also, in the absence of another sigil, :: can serve as its own sigil indicating intentional use of a not-yet-declared package name.

[08:51] <nine> That's from the docs. Maybe I just mis-remembered

[08:53] <nine> The design docs are even clearer:

[08:53] <nine> Since there are no barewords in Perl 6, package names must be predeclared. Alternatively, the sigil-like ::PackageName syntax may be used to indicate that the type will be supplied some other way, however this syntax is not valid in declarative scenarios, especially parameter lists where it has entirely different semantics. The :: prefix does not imply globalness as it does in Perl 5. (Use GLOBAL:: for 

[08:53] <nine> that.)

[08:57] <nine> https://github.com/Raku/old-design-docs/blob/master/S10-packages.pod

[10:04] *** patrickb_ joined
[10:14] *** coleman left
[10:14] *** camelia left
[10:14] *** patrickb left
[10:14] *** patrickb_ is now known as patrickb

[10:19] *** coleman joined
[10:25] *** camelia joined
[10:36] <[Coke]> .seen softmoth

[10:36] <tellable6> [Coke], I saw softmoth 2021-05-04T17:59:00Z in #raku: <softmoth> It's probably too cute but something like DateTime::Ex::Gregorian

[10:37] <[Coke]> https://github.com/softmoth/raku-Pod-To-Markdown/ - is there a newer/maintained module for generating markdown?

[11:31] *** librasteve_ joined
[12:03] <[Coke]> anyone here try to run raku.land locally recently?

[12:17] <Geth> ¦ old-design-docs: 1c4e6039a1 | (Will Coleda)++ | 27 files

[12:17] <Geth> ¦ old-design-docs: Remove Larry's email address.

[12:17] <Geth> ¦ old-design-docs: 

[12:17] <Geth> ¦ old-design-docs: Courtesy to prevent unnecessary emails & spam.

[12:17] <Geth> ¦ old-design-docs: review: https://github.com/Raku/old-design-docs/commit/1c4e6039a1

[12:17] <[Coke]> Hopefully that's cool.

[12:47] <[Coke]> it would be nice if the raku-land docker container didn't have to reinstall raku deps on every 'make dev'

[12:52] <nine> ~

[12:52] <nine> .OAOAOBOB

[12:53] <nine> [Coke]: you mean it would be nice if people hadn't given up on proper dependency management and instead just inflicted that container crap on all of us 

[13:09] <Geth> ¦ rakudo/main: bedb0cc0f3 | (Elizabeth Mattijsen)++ | 5 files

[13:09] <Geth> ¦ rakudo/main: Update IRC log links

[13:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/bedb0cc0f3

[13:09] <[Coke]> I do not have a problem a priori with containers, no

[13:10] <nine> And I had you in such high regards :P

[13:11] <[Coke]> ... Thank you for that small fib. :)

[13:25] <[Coke]> (and, having said that, it seems to be recognizing it on some runs? blah)

[14:01] *** librasteve_ left
[14:01] * [Coke] opens https://github.com/Raku/Blin/issues/41 

[14:02] <Geth> ¦ Blin: coke self-assigned Create a skiplist https://github.com/Raku/Blin/issues/41

[14:19] <Geth> ¦ rakudo/main: d8486be9c5 | (Stefan Seifert)++ | src/Raku/ast/variable-access.rakumod

[14:19] <Geth> ¦ rakudo/main: Fix "This type (RakuAST::ArgList) does not support elems" in make test

[14:19] <Geth> ¦ rakudo/main: 

[14:19] <Geth> ¦ rakudo/main: postfix.args is an ArgList object, not an array, so no wrapping

[14:19] <Geth> ¦ rakudo/main: necessary and indeed wrapping would create a broken List object.

[14:19] <Geth> ¦ rakudo/main: 

[14:19] <Geth> ¦ rakudo/main: Fixes regression caused by commit 283f6bf60376f54a5a941ab79dd7b90ae5e7d239

[14:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d8486be9c5

[14:19] <nine> lizmat: ^^^

[14:20] <lizmat> nine++

[15:10] <Geth> ¦ nqp/main: 4255a19a26 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[15:10] <Geth> ¦ nqp/main: Bump MoarVM to get latest fixes

[15:10] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/4255a19a26

[15:15] *** socrates1298 joined
[15:15] *** socrates1298 left
[15:23] <Geth> ¦ rakudo/main: f3ffa8648c | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[15:23] <Geth> ¦ rakudo/main: Bump NQP for latest MoarVM fixes

[15:23] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f3ffa8648c

[15:28] *** camelia left
[15:41] <[Coke]> .seen masterduke

[15:41] <tellable6> [Coke], I saw masterduke 2025-06-02T23:25:21Z in #moarvm: <MasterDuke> possible alternative/addition/complement to spesh and/or the jit

[15:59] *** camelia joined
[16:42] *** camelia left
[16:55] *** camelia joined
[18:18] <Geth> ¦ rakudo/main: 313dfb7df0 | (Elizabeth Mattijsen)++ | 2 files

[18:18] <Geth> ¦ rakudo/main: RakuAST: add origin source file path to bytecode

[18:18] <Geth> ¦ rakudo/main: 

[18:18] <Geth> ¦ rakudo/main: By making the $?FILE compiler constant live in the compunit as

[18:18] <Geth> ¦ rakudo/main: a lexical constant, and change and references to $?FILE to a lookup.

[18:18] <Geth> ¦ rakudo/main: 

[18:18] <Geth> ¦ rakudo/main: This should allow the MoarVM debugger to more easily access the

[18:18] <Geth> ¦ rakudo/main: source code out of which the bytecode was created.

[18:18] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/313dfb7df0

[18:26] <nine> lizmat: isn't RakuAST::Var::Compiler::File unused and obsolete now?

[18:58] *** librasteve_ joined
[19:03] <Geth> ¦ rakudo/main: a7453b1dce | (Elizabeth Mattijsen)++ | 2 files

[19:03] <Geth> ¦ rakudo/main: RakuAST: introduce $?SOURCE and $?CHECKSUM

[19:03] <Geth> ¦ rakudo/main: 

[19:03] <Geth> ¦ rakudo/main: This is achieved by adding a '$!source` attribute to ::CompUnit

[19:03] <Geth> ¦ rakudo/main: and add the $?SOURCE and $?CHECKSUM variables in the add produce

[19:03] <Geth> ¦ rakudo/main: implicit declarations logic.

[19:03] <Geth> ¦ rakudo/main: 

[19:03] <Geth> ¦ rakudo/main: $?SOURCE contains the source code that produced the bytecode that

[19:03] <Geth> ¦ rakudo/main: <…commit message has 7 more lines…>

[19:03] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a7453b1dce

[19:39] <[Coke]> ugh. some modules failing in blin that are working with 'zef look XX'... 'zef test .' on the same box

[20:10] *** MasterDuke joined
[20:16] <Geth> ¦ rakudo/main: ab0231a002 | (Elizabeth Mattijsen)++ | 3 files

[20:16] <Geth> ¦ rakudo/main: RakuAST: move checking of RAKUDO_OMIT_SOURCE to main.nqp

[20:16] <Geth> ¦ rakudo/main: 

[20:16] <Geth> ¦ rakudo/main: So that it is as external as possible.  However, since we *do*

[20:16] <Geth> ¦ rakudo/main: want the $?CHECKSUM to be always available (even if we do not

[20:16] <Geth> ¦ rakudo/main: want the source), the addition of a $!checksum attribute (and

[20:16] <Geth> ¦ rakudo/main: associated handling) was needed in RakuAST::CompUnit.

[20:16] <Geth> ¦ rakudo/main: 

[20:16] <Geth> ¦ rakudo/main: nine++ for pointing this out

[20:16] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ab0231a002

[20:39] <[Coke]> (ah, didn't mention here, it's basically the same  JSON::Class error from April)

[21:13] *** donaldh joined
[21:19] *** donaldh left
[21:48] *** MasterDuke left
[22:03] <timo> https://storage.fiebig.nl/s/b9wnceMkwe2tKxF this is what it could look like

[22:03] <timo> (it's running in the actual interface, but it's a local copy i have on my computer, not the official godbolt.org website. i'll need to pull-request that.)

[22:03] <timo>  /cc japhb :)

[22:26] <Geth> ¦ nqp/main: 608dafb830 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[22:26] <Geth> ¦ nqp/main: Bump MoarVM for timo++'s slurp / normalization fixes

[22:26] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/608dafb830

[22:35] <Geth> ¦ rakudo/main: b43c63d328 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[22:35] <Geth> ¦ rakudo/main: Bump NQP to get timo++'s slurp / normalizecodes improvements

[22:35] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b43c63d328

[23:14] <japhb> timo: Oooh, aaaah ...  :-)

[23:27] <timo> japhb: https://storage.fiebig.nl/s/C3o5Jo3ffLomBAc and another :)

