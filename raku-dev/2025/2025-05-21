[00:08] *** Guest72 left
[00:08] *** Guest72 joined
[00:15] <ab5tract> nine: any further thoughts on R#5875?

[00:15] <linkable6> R#5875 [closed]: https://github.com/rakudo/rakudo/issues/5875 [good first issue][enumerations][objects] Success in enum resolution during &MAIN invocation depends on declaration scope of the enum.

[00:15] <ab5tract> oops, wrong ticket

[00:16] <ab5tract> R#5879

[00:16] <linkable6> R#5879 [open]: https://github.com/rakudo/rakudo/pull/5879 Enhance feedback around named subset parameters

[00:19] <ab5tract> I tried chasing down those undefined value exceptions but I've lost patience. It doesn't happen with add-sorry instead

[00:44] *** [Coke]_ joined
[00:46] *** [Coke] left
[00:57] <Geth> ¦ rakudo: coke assigned to MasterDuke17 Issue Unable to build 2025.04 on Alpine Linux https://github.com/rakudo/rakudo/issues/5864

[02:19] *** Guest72 left
[03:46] *** Guest72 joined
[07:20] *** librasteve_ joined
[09:25] *** finanalyst left
[09:34] <Geth> ¦ nqp/main: 136a90a3d4 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[09:34] <Geth> ¦ nqp/main: Bump NQP to get latest MoarVM fixes

[09:34] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/136a90a3d4

[09:39] <lizmat> argh... Bump MoarVM ... *sigh*

[09:50] *** librasteve_ left
[09:56] <Geth> ¦ rakudo/main: fdd3bdc560 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[09:56] <Geth> ¦ rakudo/main: Bump NQP to get latest MoarVM fixes

[09:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fdd3bdc560

[10:17] <nine> ab5tract: when I had to track down where an exception was coming from, I added an nqp::die to the Resolver's build-exception method. Or if it's not generated by RakuAST code, the exception's constructor

[10:22] <ab5tract> Sounds reasonable..

[12:12] <[Coke]_> Now that we've done the bump, rakudo might be broken on alpine again

[12:13] *** [Coke]_ is now known as [Coke]

[12:24] <ab5tract> R#5882 — is this a bug or just natural fallout from disabling the special casing of single args for meta op left?

[12:24] <linkable6> R#5882 [open]: https://github.com/rakudo/rakudo/issues/5882 "Triangular comma" metaoperator [\,] unexpectedly puts first element inside a list

[12:31] *** librasteve_ joined
[12:46] <ab5tract> unrelated, but bummed to find out that CLion does absolutely nothing interesting for highlighting MoarVM source code

[12:47] <ab5tract> I have to imagine that normally it knows how to highlight user-defined types and constants

[13:05] <ab5tract> ah, nice, these aren't exceptions per se but uses of warn in Mu.rakumod

[13:10] *** Guest72 left
[13:24] <ab5tract> nope, don't have the tuits for chasing this, sorry

[13:30] <ab5tract> right now *nothing* is output unless I do `use fatal`, at which point it does barf but not in any useful way

[13:34] <ab5tract> it does look like print_exception is doing something silly with stringification

[13:37] <ab5tract> aside: with any luck R#5882 will turn out to be simply removing a compensation that was added to work around the previous special-casing :)

[13:37] <linkable6> R#5882 [open]: https://github.com/rakudo/rakudo/issues/5882 "Triangular comma" metaoperator [\,] unexpectedly puts first element inside a list

[13:46] <ab5tract> ahhhhhh

[13:46] <ab5tract> it's the line number generator

[13:46] <ab5tract> and the Exception details dilly

[13:48] *** finanalyst joined
[14:32] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: ddc8a40f71 | ab5tract++ | 3 files

[14:32] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: Enhance feedback around named subset parameters

[14:32] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: 

[14:32] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: Adding a worry here provides users with a bit of

[14:32] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: helpful feedback when they define an optional

[14:32] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: named parameter with a subset type but fail to

[14:32] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: provide a valid default value.

[14:32] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: review: https://github.com/rakudo/rakudo/commit/ddc8a40f71

[14:32] <ab5tract> nine: okay, I *think* that covers it

[14:32] <ab5tract> only question left is whether we would want to use a different wording than `at line <anon>`

[14:49] <nine> Well the actual line number would be nice :)

[14:51] <ab5tract> there is no line number

[14:52] <ab5tract> unless we want to default to 1 when it is passed as undefined

[14:52] <ab5tract> honestly, I'm out of patience with it

[14:53] <ab5tract> not a good justification for merging, but hey, it's honest

[14:53] <nine> But the problem is in source code and thus there is a line number? Do you mean that the proper line number doesn't get set on the Exception object?

[14:54] <ab5tract> this is happening while testing via a -e invocation

[14:54] <ab5tract> so there is no proper line number

[14:54] <nine> Even there, the line number is usually just 1

[14:54] <nine> > rakudo -e 'die "here"'

[14:54] <nine> here in block <unit> at -e line 1

[14:55] <ab5tract> well, it's not set here

[14:55] *** finanalyst left
[14:56] <ab5tract> the code is essentially the same between add-worry and add-sorry, though, so I'm not grokking why there would be issues with one and not the other

[14:56] <ab5tract> and this is perhaps the single most boring issue I've chased down in half a decade or more :)

[14:58] <nine> Well I've done a few hundred of these so I can't offer very much sympathy :)

[14:59] <ab5tract> :D

[15:18] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: b1dda4ae31 | ab5tract++ | 2 files

[15:18] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: Add the defaults to add-worry/add-sorry

[15:18] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: review: https://github.com/rakudo/rakudo/commit/b1dda4ae31

[15:18] <ab5tract> nine: ^^ reasonable?

[15:27] <nine> The problem is that RakuAST::Parameter objects don't get their origin set. The parameter Actions method doesn't call the usual self.attach (which calls SET-NODE-ORIGIN) and instead just does make $parameter; The signature method just collects those objects and passes them to the RakuAST::Signature constructor

[15:28] <nine> Probably method parameter doesn't call attach to avoid a premature call to .to-begin-time. Ostensibly that would be the correct time for such a call, but setting up parameters and signatures and routines is a very, very, *very* intricate dance, so I wouldn't experiment with the timing in any way.

[15:29] <nine> Thus the proper course of action seems to be to just call SET-NODE-ORIGIN in method parameter like we do in statement-control:sym<use>.

[15:32] <ab5tract> ok

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: bc85c88ec2 | ab5tract++ | 2 files

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: Call SET-NODE-ORIGIN from Actions' parameter method

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: 

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: This was probably a simple oversight, as `SET-NODE-ORIGIN`

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: is usually called "automatically" when an action method

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: calls `attach`.

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: 

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: Due to intricacies in setting up parameters, signatures,

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: and routines, we won't add an `attach` call but will

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: instead call `SET-NODE-ORIGIN` directly just prior

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: to calling `make`.

[15:46] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: review: https://github.com/rakudo/rakudo/commit/bc85c88ec2

[15:58] <ab5tract> done and done :)

[16:00] <nine> Does the bootstrap-rakuast branch still build with these changes?

[16:21] * ab5tract checks

[16:58] <ab5tract> nine: it does indeed

[16:58] *** librasteve_ left
[17:15] <nine> \o/

[17:28] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: 17 commits pushed by (Tim Nelson)++, rir++, (Elizabeth Mattijsen)++, (Jimmy Zhuo)++, (Justin DeVuyst)++, ab5tract++

[17:28] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: review: https://github.com/rakudo/rakudo/compare/bc85c88ec2fc...5fe5057d23e5

[17:44] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: 8add471ef1 | ab5tract++ | t/12-rakuast/xx-fixed-in-rakuast.rakutest

[17:44] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: Fix expected type name

[17:44] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: review: https://github.com/rakudo/rakudo/commit/8add471ef1

[17:45] *** notna joined
[17:58] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: 360a598b60 | ab5tract++ | 3 files

[17:58] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: Enhance feedback around named subset parameters

[17:58] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: 

[17:58] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: Adding a worry here provides users with a bit of

[17:58] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: helpful feedback when they define an optional

[17:58] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: named parameter with a subset type but fail to

[17:58] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: provide a valid default value.

[17:58] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: review: https://github.com/rakudo/rakudo/commit/360a598b60

[17:58] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: 4453801552 | ab5tract++ | 3 files

[17:59] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: Call SET-NODE-ORIGIN from Actions' parameter method

[17:59] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: 

[17:59] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: This was probably a simple oversight, as `SET-NODE-ORIGIN`

[17:59] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: is usually called "automatically" when an action method

[17:59] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: calls `attach`.

[17:59] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: 

[17:59] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: Due to intricacies in setting up parameters, signatures,

[17:59] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: <…commit message has 5 more lines…>

[17:59] <ab5tract> sometimes these bots feel a bit too expressive

[17:59] <Geth> ¦ rakudo/enhance-named-param-subset-feedback: review: https://github.com/rakudo/rakudo/commit/4453801552

[17:59] <ab5tract> if there's any way to recognize a forced push, it would be super helpful

[18:07] <ab5tract> I guess it's somewhere in the webhooks settings. Which of course don't fall under Actions and therefore invisible to the likes of me

[18:12] <lizmat> https://github.com/raku/Geth   :-)

[18:13] <nine> I don't think you can limit this in the settings. There's a ton of events to select from, but just one for Push in general

[18:18] <ab5tract> boo

[18:19] <ab5tract> lizmat: I was looking at the source. got there via `/msg Geth help` , which mentions 'Send me everything'

[18:19] <lizmat> yeah, it would need to be handled in Geth, perhaps there's a settting in the JSON that can be interrogated

[18:19] <ab5tract> detecting it on Geth's side sounds near impossible

[18:19] <lizmat> why?

[18:19] <lizmat> Geth doesn't push all of the events it gets

[18:19] <ab5tract> because there is no differentiation on GH's side

[18:20] <lizmat> if there isn't, then tough luck

[18:20] <lizmat> I was thinking maybe there is?

[18:20] *** notna left
[18:20] <ab5tract> partly it seems tricky to subscribe locally to the hose

[18:21] <ab5tract> but I haven't looked at Geth's internal docs yet

[18:22] <lizmat> fwiw, it's been a while since I looked at that as well

[18:22] <ab5tract> lizmat: did you see the latest note on R#5882?

[18:22] <linkable6> R#5882 [open]: https://github.com/rakudo/rakudo/issues/5882 "Triangular comma" metaoperator [\,] unexpectedly puts first element inside a list

[18:23] <ab5tract> I'd love to wow this newcomer with a quick fix

[18:23] <ab5tract> (the original reporter of the issue, I mean)

[18:23] <Geth> ¦ rakudo: lizmat self-assigned "Triangular comma" metaoperator [\,] unexpectedly puts first element inside a list https://github.com/rakudo/rakudo/issues/5882

[18:24] <lizmat> will look at it tomorrow

[18:59] *** Guest72 joined
[19:31] <Geth> ¦ rakudo/main: 5f6d6e05d2 | ab5tract++ | 3 files

[19:31] <Geth> ¦ rakudo/main: Enhance feedback around named subset parameters

[19:31] <Geth> ¦ rakudo/main: 

[19:31] <Geth> ¦ rakudo/main: Adding a worry here provides users with a bit of

[19:31] <Geth> ¦ rakudo/main: helpful feedback when they define an optional

[19:31] <Geth> ¦ rakudo/main: named parameter with a subset type but fail to

[19:31] <Geth> ¦ rakudo/main: provide a valid default value.

[19:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5f6d6e05d2

[19:31] <Geth> ¦ rakudo/main: 46ed7b4037 | ab5tract++ | 3 files

[19:32] <Geth> ¦ rakudo/main: Call SET-NODE-ORIGIN from Actions' parameter method

[19:32] <Geth> ¦ rakudo/main: 

[19:32] <Geth> ¦ rakudo/main: This was probably a simple oversight, as `SET-NODE-ORIGIN`

[19:32] <Geth> ¦ rakudo/main: is usually called "automatically" when an action method

[19:32] <Geth> ¦ rakudo/main: calls `attach`.

[19:32] <Geth> ¦ rakudo/main: 

[19:32] <Geth> ¦ rakudo/main: Due to intricacies in setting up parameters, signatures,

[19:32] <Geth> ¦ rakudo/main: <…commit message has 5 more lines…>

[19:32] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/46ed7b4037

[22:03] *** Guest72 left
[22:03] *** Guest72 joined
[22:55] *** Guest72 left
[22:56] *** Guest72 joined
