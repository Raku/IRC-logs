[05:54] *** Xliff left
[07:11] <patrickb> lizmat, ab5tract: Currently the problem is not powering it on, but having it show up on the network. Possibly my tests have been faulty and the thing actually does not connect to network before logging in. That's where the JetKVM will help, because it will give me a screen and keyboard, even when the PC itself isn't on the network yet.

[07:18] <patrickb> jdv: For some, probably purely emotional reason, I dislike having my signing key leave the house / be in potentially unsafe environments. (It has a pretty long passphrase, but the dislike is decidedly unimpressed.)

[07:21] <patrickb> lizmat: The JetKVM is both, a remote power switch and a HDMI / Keyboard / Mouse <-> Ethernet converter. The combination should allow me to recover from about any mess up. (Well, except if I have to reinstall the entire machine.)

[09:04] *** finanalyst joined
[09:11] <lizmat> TIL

[10:06] *** finanalyst left
[11:00] <gfldex> I just hit "Too many local variables in MAST::Frame. Up to 65534 are allowed. This frame (<unit>) has 640626". We may want to document that raku source files got a size limit that is not all that big.

[11:30] <timo> that's just per frame, you can have more locals if you make more frames for them to be in

[11:30] <timo> the question is what the locals are used for

[12:20] <lizmat> feels to me something should be in an array or a hash ?

[13:21] <gfldex> It's a 37MB source file containing a singe large hash. The idea is to stick that into a module to get it precompiled. So it's not really up to me to decide what goes into what frame.

[13:22] <gfldex> As a side node, I'm trying the same in Nim now. The Nim compilier is compiling for 90 minutes now. So at least we are much faster at not getting it done. :)

[13:37] *** finanalyst joined
[13:48] <jdv> what is in this 37M hash?

[14:03] <timo> yeah i would really recommend making a BEGIN statement that constructs the hash from the source data instead of generating raku source code

[14:03] *** finanalyst left
[14:04] <timo> someone recently pointed out that jnthn wasn't fond of optimizing the compiler for "extreme cases" such as when you generate source code

[14:11] *** finanalyst joined
[14:12] <jdv> any general idea why?

[14:13] <jdv> on principle, waste of time, lack of interest?

[14:18] *** MasterDuke joined
[14:29] <timo> i would assume "waste of time", maybe optimizing for something weird can cost us in other more common cases. just speculating

[14:35] <timo> you can look at liz's module, i think Text::Emoji is the name, it has a huge hash of name to emoji mappings and back

[14:42] <gfldex> jdv: It's a small subset of mappings of star system names and 3d coordinates of Elite Dangerous. Because space ships are best ships!

[14:48] <jdv> nice

[15:11] *** MasterDuke left
[15:18] *** finanalyst left
[15:22] *** finanalyst joined
[15:36] *** finanalyst left
[15:58] *** finanalyst joined
[16:37] <[Coke]> releasable6__: next

[16:37] <releasable6__> [Coke], Next release in ≈21 days and ≈2 hours. There are no known blockers. 7 out of 7 commits logged

[16:42] *** finanalyst left
[17:29] <jdv> [Coke]: did you ever figure out https://github.com/rakudo/rakudo/issues/5775 ?

[18:04] *** MasterDuke joined
[18:24] <MasterDuke> did t/02-rakudo/15-gh_1202.t get fixed?

[18:30] *** MasterDuke left
[18:34] *** MasterDuke joined
[18:37] <MasterDuke> https://github.com/rakudo/rakudo/issues/2287 is an interesting one, `say class Foo does Real {}.new == 42` crashed my kde session

[19:01] *** greppable6 left
[19:01] *** greppable6 joined
[19:01] *** linkable6 left
[19:01] <MasterDuke> timo: https://github.com/timo/moarperf/pull/19

[19:01] *** finanalyst joined
[19:01] *** linkable6 joined
[19:28] *** MasterDuke left
[19:34] <timo> infinite recursion i bet

[19:57] *** finanalyst left
[20:03] *** japhb left
[20:11] *** japhb joined
[22:19] *** Xliff joined
[22:19] <Xliff> gfldex: Was lurking and saw your Elite Dangerous comment. What form does the 37M hash originate from?

[22:35] <[Coke]> jdv: nope, would have closed it if so. :)

[22:36] <[Coke]> It's also happening just running spectest in a checkout and following the instructions from make

[22:46] <jdv> yup.  i put a little time into it.  maybe tomorrow.

[22:51] <Geth> ¦ rakudo/coke/releng-archive-master: 5a442c55d7 | (Will Coleda)++ | tools/releasable/Akefile

[22:51] <Geth> ¦ rakudo/coke/releng-archive-master: RELENG use master from t/spec for archive

[22:51] <Geth> ¦ rakudo/coke/releng-archive-master: 

[22:51] <Geth> ¦ rakudo/coke/releng-archive-master: Fixes #5829

[22:51] <Geth> ¦ rakudo/coke/releng-archive-master: review: https://github.com/rakudo/rakudo/commit/5a442c55d7

[22:52] <Geth> ¦ rakudo: coke++ created pull request #5866: RELENG use master from t/spec for archive

[22:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5866

[22:53] <[Coke]> jdv: Cool, happy to leave that one to you. :)

[22:57] <Xliff> .tell gfldex Was lurking and saw your Elite Dangerous comment. What form does the 37M hash originate from?.

[22:57] <tellable6> Xliff, I'll pass your message to gfldex

[22:57] *** Xliff left
