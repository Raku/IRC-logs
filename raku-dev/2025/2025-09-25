[01:02] *** kjp left
[01:03] *** kjp joined
[01:04] *** kjp left
[01:05] *** kjp joined
[01:35] *** CultOfTheGlenda joined
[04:07] *** CultOfTheGlenda left
[06:27] <ab5tract> Anyone still running 16.04 can use an older build of rakudo

[06:28] <ab5tract> I don't think there is any reason whatsoever to cater to a (likely imaginary) corner of the user base who for some reason needs to run an completely exploitable version of an operating system

[06:35] <ab5tract> I feel the same about 32-bit ISAs, fwiw

[06:35] <ab5tract> But at least supporting that doesn't involve using a decade old version of Ubuntu to build things

[06:36] <ab5tract> what about the codegen from gcc? Are we sure that we aren't missing out on improvements to the compiler that were introduced in the last 10 years?

[08:59] <Geth> ¦ nqp/main: 71757cefad | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[08:59] <Geth> ¦ nqp/main: Bump MoarVM to get uint JIT fix, MasterDuke++

[08:59] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/71757cefad

[09:10] <Geth> ¦ rakudo/main: 4307ec0149 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[09:10] <Geth> ¦ rakudo/main: Bump NQP to get uint JIT fix, MasterDuke++

[09:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4307ec0149

[09:26] <Geth> ¦ roast: b822369da2 | (Elizabeth Mattijsen)++ | S02-types/signed-unsigned-native.t

[09:26] <Geth> ¦ roast: Add test for #5954

[09:26] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/b822369da2

[09:29] <Geth> ¦ rakudo/main: 7192f67afb | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | lib/Test.rakumod

[09:29] <Geth> ¦ rakudo/main: Add exit-ok to Test module

[09:29] <Geth> ¦ rakudo/main: 

[09:29] <Geth> ¦ rakudo/main: As promised in https://github.com/Raku/problem-solving/issues/492#issuecomment-3263735792

[09:29] <Geth> ¦ rakudo/main: the "exit-ok" subroutine takes a Callable (which is expected to call

[09:29] <Geth> ¦ rakudo/main: exit() ), an integer value (0 by default), and an optional description.

[09:29] <Geth> ¦ rakudo/main: 

[09:30] <Geth> ¦ rakudo/main: If the code performs an "exit", then the value will be checked: it

[09:30] <Geth> ¦ rakudo/main: will be judged ok if the value matches, else it will be a nok.

[09:30] <Geth> ¦ rakudo/main: 

[09:30] <Geth> ¦ rakudo/main: If the code does not execute an "exit", then it will also be a nok.

[09:30] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7192f67afb

[10:24] *** lizmat left
[10:24] *** guifa_ joined
[10:24] *** lizmat joined
[10:24] *** guifa left
[10:24] *** leont left
[10:24] *** zostay left
[10:24] *** leont joined
[10:24] *** zostay joined
[14:15] *** [Tux] left
[14:15] *** [Tux] joined
[15:07] <Geth> ¦ rakudo/r5855-finish-shenigans: 99017a23f4 | ab5tract++ | 2 files

[15:07] <Geth> ¦ rakudo/r5855-finish-shenigans: RakuAST - Make UNIT implicits available to dynamic code

[15:07] <Geth> ¦ rakudo/r5855-finish-shenigans: 

[15:07] <Geth> ¦ rakudo/r5855-finish-shenigans: This fixes R#5855 (#5855), where `$=finish` was not

[15:07] <Geth> ¦ rakudo/r5855-finish-shenigans: available during `BEGIN/CHECK` time.

[15:07] <Geth> ¦ rakudo/r5855-finish-shenigans: 

[15:07] <Geth> ¦ rakudo/r5855-finish-shenigans: Ensuring that all of the compunit's implicit declarations

[15:07] <Geth> ¦ rakudo/r5855-finish-shenigans: (that know how to IMPL-QAST-DECL) are available during

[15:07] <linkable6> R#5855 [open]: https://github.com/rakudo/rakudo/issues/5855 [RAKUDO_RAKUAST=1] Could not find a compile-time-value for lexical $=finish

[15:07] <Geth> ¦ rakudo/r5855-finish-shenigans: <…commit message has 5 more lines…>

[15:07] <Geth> ¦ rakudo/r5855-finish-shenigans: review: https://github.com/rakudo/rakudo/commit/99017a23f4

[16:37] <ugexe> "the user base who for some reason needs to run an completely exploitable version of an operating system" if this is the measuring stick then we shouldnt support windows at all

[16:38] <ugexe> mostly /s

[16:58] <ab5tract> ugexe: fair :)

[17:10] <[Coke]> ab5tract: feel free to reopen that PR or perhaps a problem-solving ticket.

[17:10] <[Coke]> Sounds like a reasonable discussion to be had there.

[18:03] <Geth> ¦ rakudo/r5855-finish-shenigans: 85f436b8ec | ab5tract++ | 2 files

[18:03] <Geth> ¦ rakudo/r5855-finish-shenigans: RakuAST - Make UNIT implicits available to dynamic code

[18:03] <Geth> ¦ rakudo/r5855-finish-shenigans: 

[18:03] <Geth> ¦ rakudo/r5855-finish-shenigans: This fixes R#5855 (#5855), where `$=finish` was not

[18:03] <Geth> ¦ rakudo/r5855-finish-shenigans: available during `BEGIN/CHECK` time.

[18:03] <Geth> ¦ rakudo/r5855-finish-shenigans: 

[18:03] <Geth> ¦ rakudo/r5855-finish-shenigans: Ensuring that all of the compunit's implicit declarations

[18:03] <Geth> ¦ rakudo/r5855-finish-shenigans: (that know how to IMPL-QAST-DECL) are available during

[18:03] <linkable6> R#5855 [open]: https://github.com/rakudo/rakudo/issues/5855 [RAKUDO_RAKUAST=1] Could not find a compile-time-value for lexical $=finish

[18:03] <Geth> ¦ rakudo/r5855-finish-shenigans: <…commit message has 5 more lines…>

[18:03] <Geth> ¦ rakudo/r5855-finish-shenigans: review: https://github.com/rakudo/rakudo/commit/85f436b8ec

[18:07] <ab5tract> [Coke]: I feel I expressed myself a bit too strongly before. At least, I actually feel so passionately about it to make any more of a fuss

[18:07] <ab5tract> *actually don't

[18:08] <ab5tract> Maybe I'll try benchmarking and/or analyzing for any real consequence to the codegen

[18:12] <patrickb> ab5tract Did you see my reply here?: https://github.com/rakudo/rakudo/pull/5956#issuecomment-3332852550

[18:13] <ab5tract> patrickb: ah, I'd totally missed that, thank you

[18:14] <ab5tract> I wonder if zig could be leveraged here. It's cross compilation story is frankly out of control

[18:16] <ab5tract> re: your reply on GH -- that makes sense, I'm on board with the principle of supporting older glibc versions

[18:17] <ab5tract> I'll put my energy into seeing whether we can find a different approach for the same outcome

[18:21] <Geth> ¦ rakudo/main: 4d7234ca77 | ab5tract++ | 2 files

[18:21] <Geth> ¦ rakudo/main: RakuAST - Make UNIT implicits available to dynamic code

[18:21] <Geth> ¦ rakudo/main: 

[18:21] <Geth> ¦ rakudo/main: This fixes R#5855 (#5855), where `$=finish` was not

[18:21] <Geth> ¦ rakudo/main: available during `BEGIN/CHECK` time.

[18:21] <Geth> ¦ rakudo/main: 

[18:21] <Geth> ¦ rakudo/main: Ensuring that all of the compunit's implicit declarations

[18:21] <Geth> ¦ rakudo/main: (that know how to IMPL-QAST-DECL) are available during

[18:22] <linkable6> R#5855 [open]: https://github.com/rakudo/rakudo/issues/5855 [RAKUDO_RAKUAST=1] Could not find a compile-time-value for lexical $=finish

[18:22] <Geth> ¦ rakudo/main: <…commit message has 5 more lines…>

[18:22] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4d7234ca77

[18:23] <ab5tract> hmm, it looks promising https://hansott.codes/blog/cross-compiling-rust-with-zig-for-older-glibc-47

[19:08] *** [Coke] left
[19:10] *** [Coke] joined
[19:18] <patrickb> ab5tract: Back when I first set up the pre built release pipeline, I did some research into the different ways to pull it off. From what I recall there were two or three alternatives. I vaguely remember cross compiling and including glibc itself in the build. All alternatives were pretty finicky to set up and get running reliably, which is why I chose the "stupid but time efficient" approach 

[19:18] <patrickb> of compiling on an old OS.

[19:18] <patrickb> I'm pretty sure zig was not an approach I knew about.

[19:19] <ab5tract> I don't know for how long the cross compilation has been so good

[19:19] <ab5tract> Theoretically it can also compile windows binaries without much effort

[19:21] <ab5tract> I'll poke at it. I've been meaning to polish up some branches that add zig as a compiler option anyway

[19:21] <patrickb> I'm not at all opposed to finding alternatives to how we do the pre compiled binaries. So :thumbs_up:

[19:45] <Geth> ¦ rakudo/main: 47746a84ec | ab5tract++ | src/Raku/ast/code.rakumod

[19:45] <Geth> ¦ rakudo/main: RakuAST: Doc clarification of fix for #5855 (R#5855)

[19:45] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/47746a84ec

[19:45] <linkable6> R#5855 [closed]: https://github.com/rakudo/rakudo/issues/5855 [RAKUDO_RAKUAST=1] Could not find a compile-time-value for lexical $=finish

[23:54] *** djinni` left
