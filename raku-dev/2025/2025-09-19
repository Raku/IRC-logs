[01:25] <[Coke]> jdv also fine with no release this month.

[06:03] *** Voldenet left
[06:03] *** Voldenet joined
[08:03] <ab5tract> today's rubber ducking update: the issue appears to lie somewhere in the way we resolve pseudo packages (or at least the UNIT pseudo package)

[08:03] <ab5tract> written down, that comes across as quite obvious :)

[08:03] <ab5tract> but at least I'm in the right part of the internals now

[09:29] <SmokeMachine> Does anyone know what this error is about? I installed rakudo on iSH on my iPhone and when I run that, it get that error… https://usercontent.irccloud-cdn.com/file/IpNJB9AL/1758274104.JPG

[09:32] <SmokeMachine> Adding —ll-exception does not change the output

[09:48] <lizmat> feels like a question you should ask on #moarvm

[10:11] *** El_Che left
[11:11] *** sivoais_ left
[11:11] *** sivoais joined
[11:16] <nine> I guess whatever that iSH thing is, it defines __APPLE__ but unlike MacOS doesn't support pthread_getname_np so we fail in 3rdparty/libuv/src/unix/thread.c:956

[11:28] *** ab5tract_ joined
[11:35] *** ugexe left
[11:35] *** ab5tract left
[11:35] *** ab5tract_ is now known as ab5tract

[11:35] *** ab5tract left
[11:35] *** ab5tract joined
[11:40] <ab5tract> nine: afaict the issue with $=finish is that the CHECK code is running prior to the compunit installing its lexicals

[11:40] *** ugexe joined
[11:40] <ab5tract> But from there, I have very little clue for how to proceed

[11:41] <ab5tract> I have a naive fix but obviously fixing the underlying problem would be much preferred

[11:46] <nine> ab5tract: What exactly do you mean by "installing its lexicals"? How did you determine that it hasn't done that yet?

[11:48] <ab5tract> what I mean is that they don't appear to be in the QAST. for instance, see this https://github.com/rakudo/rakudo/pull/5953/files#diff-d37b602fa73ad079530b94a2ca1b412f0eada968f002a29307452238b26a1af8R305

[11:49] <ab5tract> but that's the "papered over" solution

[11:50] <ab5tract> one other dynamic I've observed is that PsuedoStash's $!ctx is null during the CHECK-time resolution

[11:54] <nine> Are they never included in the QAST at all?

[11:54] <ab5tract> nine: no they are in place by INIT

[11:55] <nine> But, but, but the QAST is only generated once and then cached

[11:55] <ab5tract> hmm

[11:55] <ab5tract> then I guess that line of thought is probably a red herring

[11:56] <ab5tract> The PsuedoStash missing a `$!ctx` is probably a more fruitful avenue for me to investigate

[11:57] <ab5tract> when it's null, the relevant sub returns Nil

[11:59] <ab5tract> (the relevant code for that is in core.e/PseudoStash.rakumod)

[12:29] <ab5tract> ah, this is interesting.. $!ctx *is* defined at first. but when we search for the context that has !UNIT_MARKER, it becomes null

[12:30] <ab5tract> so maybe the CHECK is running prior to PRODUCE-IMPLICIT-DECLARATIONS?  (still doesn't make much sense)

[13:40] <ab5tract> okay, this is getting weird. I've put in some debug code https://gist.github.com/ab5tract/15cdd3d7d55b60ca652c2b0d926d2932

[13:40] <ab5tract> now, I expected the !UNIT_MARKER check to fail for `CHECK UNIT::<$=finish>`

[13:41] * ab5tract sees flaw in debug code

[13:48] <ab5tract> this is better: https://gist.github.com/ab5tract/15cdd3d7d55b60ca652c2b0d926d2932

[13:49] <ab5tract> So yeah, it seems that the implicit declarations aren't in place during CHECK

[14:29] <Geth> ¦ rakudo/r5855-finish-shenigans: 4d934ec4df | ab5tract++ | 2 files

[14:29] <Geth> ¦ rakudo/r5855-finish-shenigans: working!

[14:29] <Geth> ¦ rakudo/r5855-finish-shenigans: review: https://github.com/rakudo/rakudo/commit/4d934ec4df

[14:29] <Geth> ¦ rakudo/r5855-finish-shenigans: d76f8e56a7 | ab5tract++ | src/Raku/ast/code.rakumod

[14:29] <Geth> ¦ rakudo/r5855-finish-shenigans: Make UNIT implicits available to dynamic code

[14:29] <Geth> ¦ rakudo/r5855-finish-shenigans: review: https://github.com/rakudo/rakudo/commit/d76f8e56a7

[14:42] <Geth> ¦ rakudo/r5855-finish-shenigans: 019b117f79 | ab5tract++ | 3 files

[14:42] <Geth> ¦ rakudo/r5855-finish-shenigans: RakuAST - Make UNIT implicits available to dynamic code

[14:42] <Geth> ¦ rakudo/r5855-finish-shenigans: 

[14:42] <Geth> ¦ rakudo/r5855-finish-shenigans: This fixes R#5855 (#5855), where `$=finish` was not

[14:42] <Geth> ¦ rakudo/r5855-finish-shenigans: available during `BEGIN/CHECK` time.

[14:42] <Geth> ¦ rakudo/r5855-finish-shenigans: 

[14:42] <Geth> ¦ rakudo/r5855-finish-shenigans: Ensuring that all of the compunit's implicit declarations

[14:42] <Geth> ¦ rakudo/r5855-finish-shenigans: are available during dynamic code execution addresses the

[14:42] <linkable6> R#5855 [open]: https://github.com/rakudo/rakudo/issues/5855 [RAKUDO_RAKUAST=1] Could not find a compile-time-value for lexical $=finish

[14:42] <Geth> ¦ rakudo/r5855-finish-shenigans: <…commit message has 5 more lines…>

[14:42] <Geth> ¦ rakudo/r5855-finish-shenigans: review: https://github.com/rakudo/rakudo/commit/019b117f79

[14:45] <Geth> ¦ rakudo/r5855-finish-shenigans: e9b593d9d5 | ab5tract++ | 2 files

[14:45] <Geth> ¦ rakudo/r5855-finish-shenigans: RakuAST - Make UNIT implicits available to dynamic code

[14:45] <Geth> ¦ rakudo/r5855-finish-shenigans: 

[14:45] <Geth> ¦ rakudo/r5855-finish-shenigans: This fixes R#5855 (#5855), where `$=finish` was not

[14:45] <Geth> ¦ rakudo/r5855-finish-shenigans: available during `BEGIN/CHECK` time.

[14:45] <Geth> ¦ rakudo/r5855-finish-shenigans: 

[14:45] <Geth> ¦ rakudo/r5855-finish-shenigans: Ensuring that all of the compunit's implicit declarations

[14:46] <Geth> ¦ rakudo/r5855-finish-shenigans: are available during dynamic code execution addresses the

[14:46] <linkable6> R#5855 [open]: https://github.com/rakudo/rakudo/issues/5855 [RAKUDO_RAKUAST=1] Could not find a compile-time-value for lexical $=finish

[14:46] <Geth> ¦ rakudo/r5855-finish-shenigans: <…commit message has 5 more lines…>

[14:46] <Geth> ¦ rakudo/r5855-finish-shenigans: review: https://github.com/rakudo/rakudo/commit/e9b593d9d5

[14:54] <ab5tract> turns out my first patch wasn't too far off :D

[15:04] <ab5tract> I could see this still being off, though.. the number of items in UNIT::.keys during CHECK is a small fraction of what it is at run time

[15:06] <ab5tract> It feels like the right way for this to work would be `$resolver.create-scope-implicits`. It does not work, unfortunately

[15:21] *** librasteve_ joined
[17:04] <nine> ab5tract: nice work on that PR!

[17:11] <ab5tract> Unfortunately it falls down in testing :(

[17:56] *** librasteve_ left
[17:57] <ab5tract> something is trying to re-introduce `$=data` (and I assume other doc vars)

[18:34] *** ugexe left
[18:34] *** ugexe joined
[19:11] *** Pixi` joined
[19:14] *** JRaspass left
[19:15] *** JRaspass joined
[19:15] *** Pixi left
[19:16] <ab5tract> also getting: Object of type NativeCall in QAST::WVal, but not in SC

[19:16] <ab5tract> in t/02-rakudo/16-begin-time-eval.t

[23:17] *** guifa joined
[23:24] <japhb> ab5tract: In your patch, you delete lines 383 and 384, which together did an ensure-sc on the current-package.  Is that intentional?

