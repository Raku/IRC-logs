[01:41] *** japhb left
[01:41] *** japhb joined
[01:51] *** japhb left
[02:02] *** japhb joined
[03:51] *** guifa left
[09:19] *** lizmat left
[11:38] *** guifa joined
[15:42] *** librasteve_ joined
[16:01] *** MasterDuke joined
[16:10] <MasterDuke> nine: any idea why trying to explicitly put something into GLOBAL (in an EVAL) wouldn't be working?

[16:10] <tellable6> 2025-06-27T18:46:29Z #raku-dev <[Coke]> masterduke17 great to see you at the RCS

[16:11] <MasterDuke> m: class ev { method foo { q|class GLOBAL::evo { method bar { self.WHAT.^name } }|.EVAL } }; ev.foo; say q|evo.new.bar|.EVAL

[16:11] <camelia> rakudo-moar 5a1f70139: OUTPUT: «evo␤»

[16:12] <MasterDuke> on my branch trying to fix multi-part name installation that fails with `===SORRY!=== Error while compiling EVAL_1

[16:12] <MasterDuke> Undeclared routine:

[16:12] <MasterDuke>     evo used at line 1`

[16:14] <MasterDuke> [Coke]: likewise. i had hoped to go to the conference in SC also, but it turned out it would have required taking way too much time off, it was much less convenient to get to than i hoped, given it's also on the east coast

[16:16] <[Coke]> I ended up driving two days to get there and back, so yes, lots of time off

[16:16] <[Coke]> (each)

[16:36] *** MasterDuke left
[19:05] *** guifa left
[20:56] *** MasterDuke joined
[20:59] <MasterDuke> nine: this is interesting. in the resolver.install-in-scope call for `GLOBAL::evo`, the `$name` is `GLOBAL::evo`, but the `$full-name` is just `evo`. so that explains why this particular example breaks on my branch. but what explains why they have those values...

[21:42] *** lizmat joined
[21:42] <lizmat> .

[21:42] <tellable6> hey lizmat, you have a message: https://gist.github.com/2c20c1b162e9d5b40b622cc60fd31b4f

[22:05] <MasterDuke> heh, i now have it not dying, but printing `GLOBAL::evo`, with an extra `GLOBAL` key in the `GLOBAL` namespace. one step forward, one step back...

[22:22] *** librasteve_ left
[22:26] *** MasterDuke left
[23:57] *** guifa joined
