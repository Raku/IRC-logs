[00:37] <[Coke]> tbrowder: https://github.com/rakudo/rakudo/wiki/modf-routine - this should probably get moved to problem solving?

[00:40] <tbrowder> sounds good to me! i thought this was  lost in antiquity.

[00:41] <tbrowder> is there a way to do that easily?

[00:42] *** finanalyst left
[00:44] <coleman> maybe you can copy it verbatim into an issue in problem solving, then delete the source material

[00:49] <tbrowder> ok, maybe tomorrow. gotta a serious florida hard freeze tonight to fret about…

[01:05] *** guifa left
[01:44] *** guifa joined
[03:45] *** guifa left
[09:12] *** sena_kun joined
[10:03] *** sena_kun left
[10:37] *** finanalyst joined
[12:04] <lizmat> notable6: weekly

[12:04] <notable6> lizmat, 3 notes: https://gist.github.com/7c28486e00fe05bdee392bc57c317792

[12:07] *** finanalyst left
[12:59] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2025/01/20/2025-03-cro-released/

[12:59] <lizmat> notable6: weekly reset

[12:59] <notable6> lizmat, Moved existing notes to “weekly_2025-01-20T12:59:34Z”

[13:35] <[Coke]> So the changelog for folks to work on in the wiki, the first pass of that is entirely manual, yes? no tool?

[13:37] <lizmat> jdv knows: I think there's a tool to start it off

[13:39] <[Coke]> Are we up to date on moar/nqp bumps?

[13:40] <[Coke]> ah, I can check myself, don't mean to make that someone else's job.

[13:40] <lizmat> [Coke]: afaik yes, I think https://github.com/MoarVM/MoarVM/pull/1892 can wait to post release

[13:41] <lizmat> afk for a few hours&

[13:42] <[Coke]> lizmat: agreed.

[13:44] <[Coke]> aha, found it, it's part of one of the bots outputs.

[13:51] <[Coke]> editing a git clone of the wiki repo now...

[13:58] *** guifa joined
[13:58] <jdv> its largely manual - changelog generation - i have a script somewhere that just automates it a little

[14:01] <jdv> but it starts with "git log --graph --pretty='[%h] %s %d' --abbrev=8 2024.10.."

[14:02] <timo> i kind of wish we had some kind of convention for marking that one commit fixes / continues an earlier commit

[14:03] <timo> it usually looks odd in the changelog to see "fix worbles with non-integer florbs" when the commit that introduces worbles in the first place is also part of the release

[14:17] <[Coke]> jdv: one of the bots gives m: https://gist.github.com/Whateverable/bf8125bfe91286d0f8d7741d8584332f

[14:17] <jdv> i think it only does that for rakudo

[14:18] <jdv> timo: its an artform morese i'd say.  people do all sorts of commit patterns that don't exactly fit that

[14:19] <[Coke]> jdv: ah, I hadn't thought of that. do the nqp/moar changelogs go in the same draft wiki page?

[14:19] <timo> they have their own ones

[14:19] <[Coke]> or does each release get its own changelog?

[14:19] <jdv> [Coke]: and that view doesn't show how commits play wrt to merges

[14:19] <[Coke]> but there is only one draft wiki page for editing?

[14:20] <jdv> there's only a moarvm and rakudo changelog

[14:20] <jdv> https://github.com/MoarVM/MoarVM/wiki/ChangeLog-Draft

[14:21] <jdv> the "nqp release" is just part of the rakudo relese.  there's a release guide and a changelog for moarvm and rakudo.

[14:21] <[Coke]> ah, OK.

[14:22] <jdv> afk til tomorrow

[18:01] *** sjn left
[19:00] <releasable6> Next release in ≈4 days and ≈23 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[19:00] <[Coke]> ^^ That's not updated yet, apologies!

[19:24] <lizmat> m: say "foobar".split(/ o <( o )> b /)

[19:24] <camelia> rakudo-moar b4d798329: OUTPUT: «(f ar)␤»

[19:24] <lizmat> for some reason, I'd expect that to be (fo bar)

[19:25] <lizmat> appears to be an underlying issue to R#5761

[19:25] <linkable6> R#5761 [open]: https://github.com/rakudo/rakudo/issues/5761 [regression] `.trans` doesn't honor capture markers (`<(` and `)>`) in regexes anymore

[19:27] <lizmat> bisectable6: old=2020.01  say "foobar".split(/ o <( o )> b /)

[19:27] <bisectable6> lizmat, Bisecting by output (old=2020.01 new=b4d7983) because on both starting points the exit code is 0

[19:31] <lizmat> m: say "foobar" ~~ / o <( o )> b /   # does the right thing

[19:31] <camelia> rakudo-moar b4d798329: OUTPUT: «｢o｣␤»

[19:32] *** bisectable6 left
[19:34] <lizmat> meh

[19:38] *** sjn joined
[19:47] *** bisectable6 joined
[19:47] *** bisectable6 left
[19:47] *** bisectable6 joined
[20:09] *** sena_kun joined
[20:32] <lizmat> m: say "foobar".trans(/ <.after o> o <.before b> / => "z")

[20:32] <camelia> rakudo-moar b4d798329: OUTPUT: «fozbar␤»

[20:33] <lizmat> this is the functional equivalent of:

[20:33] <lizmat> m: say "foobar".split(/ o <( o )> b /)

[20:33] <camelia> rakudo-moar b4d798329: OUTPUT: «(f ar)␤»

[20:33] <lizmat> but a bit verbose in the syntax

[20:33] <lizmat> I wonder if we could translate the RakuAST for the <( )> cases to <.after and <.before cases

[21:30] *** finanalyst joined
[22:56] *** kjp left
[22:57] *** kjp joined
[23:02] *** kjp left
[23:02] *** kjp joined
[23:20] *** sena_kun left
