[00:22] *** librasteve_ left
[01:33] *** guifa joined
[08:25] <patrickb> The binary release is done. Thanks everyone!

[08:26] <patrickb> I guess now is the time to merge the return prioritization changes then.

[08:28] <patrickb> And it's in.

[08:29] <patrickb> What's the policy with respect to when the respective roast tests should be merged? Can they be merged right away?

[08:40] <timo> i think usually liz or someone else bumps the revisions in the nqp and rakudo repositories

[08:57] *** apogee_ntv left
[09:18] <lizmat> yeah,. bumping them now

[09:21] <Geth> ¦ nqp/main: 4604c6664e | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[09:21] <Geth> ¦ nqp/main: Bump MoarVM to get return prioritization fixes, patrickb++

[09:21] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/4604c6664e

[09:27] <Geth> ¦ rakudo/main: c85a7c5cca | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[09:27] <Geth> ¦ rakudo/main: Bump NQP to get return priorization fixes, patrickb++

[09:27] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c85a7c5cca

[09:28] <lizmat> patrickb: you're good to go!

[09:29] <patrickb> Yay! Thank you! So it's safe to merge the roast tests now?

[09:30] <lizmat> think so

[09:30] <Geth> ¦ roast: 07e9098849 | (Patrick Böker)++ | 2 files

[09:30] <Geth> ¦ roast: Test return prioritization

[09:30] <Geth> ¦ roast: 

[09:30] <Geth> ¦ roast: Discussed in https://github.com/Raku/problem-solving/issues/417

[09:30] <Geth> ¦ roast: 

[09:30] <patrickb> Done.

[09:30] <Geth> ¦ roast: Depends on these three PRs:

[09:30] <Geth> ¦ roast: 

[09:30] <Geth> ¦ roast: - https://github.com/MoarVM/MoarVM/pull/1782

[09:30] <Geth> ¦ roast: - https://github.com/MoarVM/MoarVM/pull/1785

[09:30] <Geth> ¦ roast: - https://github.com/MoarVM/MoarVM/pull/1788

[09:30] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/07e9098849

[09:30] <Geth> ¦ roast: feb493462a | (Patrick Böker)++ (committed using GitHub Web editor) | 2 files

[09:30] <Geth> ¦ roast: Merge pull request #851 from patrickbkr/return-prioritization

[09:30] <Geth> ¦ roast: 

[09:30] <Geth> ¦ roast: Test return prioritization

[09:30] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/feb493462a

[09:31] <patrickb> [Coke]: Can you do a blin run in the next few days? The return prioritization changes are in.

[09:57] *** apogee_ntv joined
[10:08] <lizmat> m: enum foo (BEGIN <a b c>); say c; say +c    # TIL

[10:09] <camelia> rakudo-moar c85a7c5cc: OUTPUT: «c␤2␤»

[10:09] <lizmat> but this doesn't work:

[10:09] <lizmat> m: enum foo BEGIN <a b c>; say c; say +c    # TIL

[10:09] <camelia> rakudo-moar c85a7c5cc: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤An enum must supply an expression using <>, «», or ()␤at <tmp>:1␤------> enum foo<HERE> BEGIN <a b c>; say c; say +c    # TIL␤»

[15:37] <[Coke]> patrickb: sure, will kick off a run right now

[15:40] <jdv> lizmat: any ideas about that symbol merge thing?

[15:42] <[Coke]> nifty to have - a rakudo bisect that also bisected mainly over rakudo but then also into nqp and moarvm commits as necessary when bumping.

[15:43] <[Coke]> (could probably layer over rakubrew)

[15:43] <jdv> iirc timo maybe looked into that but idk what happened.  i know someone did at least.

[15:44] <[Coke]> (blin) oops, upgrading to a new rakudo because I lost my "clean" version after doing that bisect to track down rir's problem.

[15:44] <jdv> i'm blocked on that old issue rebuilding blin with SSL symbol merge conflict or whatever

[15:44] <[Coke]> IIRC we fixed it by cleaning up some dependencies in the ecosystem - guessing someone updated one of those deps but not another and now we're hitting it again but with different versions than the last time

[15:45] <[Coke]> ... and crap, now my blin is borked by the same thing because I had to reinstall deps.

[15:45] <jdv> still confused why that happens as the 2 ssl modules' "long names" are different.  i thought that seperated modules with the same "short name" enough that that shouldn't really happen

[15:46] <[Coke]> I think it's the top level SSL:: part

[15:46] <[Coke]> ... which makes my recollection of how we fixed it sketchy.

[15:46] <[Coke]> ok, let me see if I can switch back to a working version of rakudo I have installed on this box. :(

[15:46] <jdv> then how can you have 2 modules of different long names?

[15:48] <[Coke]> yah, don't trust my memory on this one, I guess.

[15:49] <[Coke]> OK, thankfully I found a version of raku I already have installed with rakubrew so I can still do blin runs.

[15:49] <[Coke]> but if I ever want to upgrade rakudo on that box, I'm screwed. Wonder if 

[15:50] <[Coke]> jdv - when I get home, I'll find the ticket on this that got closed.

[15:51] <[Coke]> patrickb: kicked off that blin run

[15:51] <jdv> i know the tickets.  they involve Whateverable, IO::Socket::SSL, and IRC::Client and its a mess

[15:52] <[Coke]> whoops, with 2022 as a start point. :|

[15:52] <jdv> but, to my dumb understanding, lexical imports "shouldn't" let that happen  or at least I thought that was part of the point of them.

[15:53] <jdv> always good to test backcompat:)

[15:58] <[Coke]> ok, rekicked off. (running it off master instead of the coke/cleanup branch, just in case)

[15:59] <[Coke]> jdv: once it's done, I'll also poke around this working install of raku and see what I did.

[15:59] <[Coke]> ⏳ 29 out of 2350 modules processed (1.23%)

[16:34] <jdv> i how i can hack around it.  i want to understand it and get it actually fixed.

[16:35] <jdv> *kno

[16:35] <jdv> gah.  *know

[16:59] <lizmat> jdv: I'm not sure which merging issue we're exactly talking about here...  do you have a golf ?

[17:08] <jdv> it happens when doing "zef install Whateverable"

[17:08] <jdv> but there is a golf in a ticket by coke.  justa moment.

[17:09] <jdv> is think its https://github.com/raku-community-modules/IO-Socket-Async-SSL/issues/77

[17:10] <lizmat> the golf is clean for me

[17:10] <lizmat> use IRC::Client; use IO::Socket::Async::SSL

[17:12] <lizmat> the most recent version of IRC::Client has IO::Socket::Async::SSL:ver<0.8.0+> as the dependency

[17:12] <lizmat> so shouldn't be an issue ?

[17:12] <jdv> its the last comment in that ticket

[17:12] <jdv> using 2 different long names of the same module

[17:13] <lizmat> yeah, that's a generic problem with multi-level names and different versions

[17:13] <lizmat> to be able to fix that, would require dynamic stashes, and a lot of work and breakage

[17:13] <lizmat> I don't see that fixed before 6.e

[17:15] <jdv> so i guess the "bandaid" is to unpin IRC::Client, no?

[17:15] <jdv> because IRC::Client is forcing ver<0.8.0+> but something else is pulling in another ver

[17:16] <lizmat> well, that would have to be a lower version then

[17:16] <jdv> so, just to be clear.  lexical imports do not work as advertised at the moment?

[17:17] <lizmat> well, it's complicated

[17:18] <lizmat> it becomes more complicated with multi level namespaces

[17:18] <jdv> ok.  what's the fix then?

[17:19] <jdv> i just want Blin to work without hacking it.  which requires "zef install Whateverable" to work.

[17:19] <lizmat> if we use a Foo::Bar:auth<foo>  and a Foo::Bar:auth<bar>,    the Foo namespace now needs to store Bar, but which one?

[17:20] <lizmat> so either the Bar entries should differentiate on auth / version / api as well

[17:20] <lizmat> but at the moment, the key in the stash can only be the name

[17:20] <lizmat> and then you have a merge conflict

[17:22] <lizmat> well, looking at Whateverable;s META, no versions have been pinned

[17:23] <jdv> i'm running a blin zef install now so maybe i'll catch at least the other ver.  the merge error didn't give much info.

[17:25] <lizmat> zef install . --deps-only works for me in the Whateverable repo

[17:25] <jdv> ok

[17:26] <lizmat> so it's within Whateverable itself

[17:29] <Geth> ¦ whateverable: a671ffca20 | (Elizabeth Mattijsen)++ | lib/Whateverable.pm6

[17:29] <Geth> ¦ whateverable: Make Whateverable install again

[17:29] <Geth> ¦ whateverable: 

[17:29] <Geth> ¦ whateverable: The conflict was in the Message shortcut: changed that to IRC-Message

[17:29] <Geth> ¦ whateverable: to avoid the conflict.  Still not sure how that conflict comes about

[17:29] <Geth> ¦ whateverable: but at least Whateverable works out of the box again.

[17:29] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/a671ffca20

[17:34] <jdv> something pulled in IO::Socket::Async::SSL:ver<0.7.14>

[17:36] <jdv> which was IRC::Client:ver<4.0.9>

[17:36] <jdv> what a delight!

[17:36] <lizmat> are you installing with zef, or from a local fork?

[17:37] <jdv> zef

[17:37] <jdv> from inside a blin repo

[17:37] <jdv> be neat if zef could give the dep graph instead of a blurry view of it:)

[17:37] <[Coke]> wow. /me wonders how liz found that one.

[17:38] <[Coke]> App::Zef-Deps maybe?

[17:38] <[Coke]> there's some graphivz output option there.

[17:38] <lizmat> no, I first installed all the deps to make sure it wasn't in the deps

[17:38] <lizmat> and it wasn't

[17:39] <lizmat> then did a zef install .

[17:39] <lizmat> and that gave me a line number:

[17:39] <lizmat> Redeclaration of symbol 'Message'.

[17:39] <lizmat> at /Users/liz/Github/whateverable/site#sources/FFCE30B7629EBB9BF4F889999F97C35CAC8EA91C (Whateverable):36

[17:40] <jdv> that's the last error we had before the ssl one

[17:41] <lizmat> and also, Whateverable should be migrated to zef

[17:41] <jdv> fez?

[17:41] <lizmat> but not today, at least not by me  :-_

[17:41] <lizmat> I mean, off off p6c

[17:41] <jdv> iirc its only on rea

[17:42] <lizmat> I don't see the last change on the REA

[17:43] * [Coke] opens https://github.com/Raku/whateverable/issues/397

[17:43] <jdv> and there we have it

[17:44] <jdv> the Whateverable on rea depends on IRC::Client:ver<4.0.9> which depends on IO::Socket::Async::SSL:ver<0.7.14>

[17:44] <jdv> wow.  so something else is pulling the newer SSL dist.  didn't see that coming but makes sense why this is so confusing:)

[17:45] <lizmat> ok, moving it to zef should fix that

[17:45] <lizmat> as a workaround: clone the repo, and zef install . from there

[17:45] <jdv> you mean releasing a new version to fez, right?

[17:45] <[Coke]> ... that may be how I fixed my original copy, was a manual install of W*

[17:45] <lizmat> yes, so it will see the more lax dependencies

[17:46] <jdv> cool.  the point is to make blin installable again by anyone.  how do we get it moved to fez and all?

[17:46] <jdv> coke and i have hacked it long enough!

[17:46] <jdv> progress...

[17:47] <lizmat> consider it be near the top of my list, so if no-one beats me to it, I will get around to it in the next week or so

[17:47] <[Coke]> If it's already in Raku/ should be pretty straightforward, I think.

[17:48] <[Coke]> lizmat++ Appreciate it.

[17:48] <lizmat> I assume as a community module then, right?

[17:49] <[Coke]> it's already under Raku/

[17:50] <[Coke]> but for the auth? sure

[17:50] <[Coke]> I think anything under raku/ could also have community auth

[17:50] <lizmat> ack

[17:52] <[Coke]> no?

[17:52] <lizmat> probably

[17:54] <jdv> lizmat: cool, thanks.  let me know if i can be of assistance.

[17:54] <lizmat> by nudging me in a week or so if I haven't done it yet  :-)

[17:55] <[Coke]> ... one thing that may break: our ability to just commit to master to restart all the bots.

[17:55] <jdv> is p6c even used/available anymore?

[17:56] <[Coke]> .ask alexdaniel - can you commit on the plan to move whateverable to fez instead of the old "listing of github repos" ?

[17:56] <tellable6> [Coke], I'll pass your message to AlexDaniel

[17:56] <jdv> why would that break?  

[17:56] <lizmat> https://raku.land/stats  shows still 372 modules in p6c

[17:56] <[Coke]> jdv: maybe it's using the old ecosystem to track instead of master itself.

[17:56] <lizmat> although effectlively those are being served by zef from the REA

[17:56] <[Coke]> .ask alexdaniel - I mean comment

[17:56] <tellable6> [Coke], I'll pass your message to AlexDaniel

[17:57] <jdv> but commits aren't necessary tracked at p6c, right?

[17:57] <lizmat> only raku.land is still looking at updates there, which is annoying  :-)

[17:58] <jdv> yeah i thought zef stopped by default a while ago

[17:59] <jdv> p6c just looks at META6.json files so the restart hook should be fine i'd think

[18:00] <jdv> or, i see what you mean.  nevermind.

[18:00] <jdv> if it does it would be interesting to know how its implemented

[18:05] * [Coke] wonders how he can setup a pipeline to fill whateverable with macos builds.

[18:09] <patrickb> x64 or arm?

[18:10] <patrickb> For arm I have access to a cloud box. So if you put together a smallish script to build loads of releases and pushes them somewhere, you're good to go.

[18:11] <[Coke]> arm64

[18:11] <[Coke]> cool.

[18:11] <[Coke]> patrickb++

[18:16] <patrickb> Coke: Ping me once you need access. a

[18:49] *** guifa left
[18:52] *** guifa joined
[18:58] <Geth> ¦ rakudo/main: 5a1f70139a | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/DateTime.rakumod

[18:58] <Geth> ¦ rakudo/main: Make DateTime.(modified-)julian-date take timezone into account (#5886)

[18:58] <Geth> ¦ rakudo/main: 

[18:58] <Geth> ¦ rakudo/main: In response to https://github.com/rakudo/rakudo/issues/5884

[18:58] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5a1f70139a

[18:58] *** guifa left
[19:19] *** Xliff left
[19:57] *** Xliff joined
[19:58] <[Coke]> got home to find the blin run I kicked off ... finished? 

[19:58] <[Coke]> that's about 10 hours too soon.

[21:35] *** guifa joined
