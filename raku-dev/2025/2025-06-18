[00:11] <[Coke]> just tried to build HEAD with ast enabled, got:

[00:11] <[Coke]> Class X::Redeclaration+{X::Comp} cannot inherit from X::Redeclaration because the parent is not composed yet

[00:48] <Geth> ¦ rakudo/main: 2c9ad45c40 | ab5tract++ | 2 files

[00:48] <Geth> ¦ rakudo/main: Make MetaPostfix::Hyper a WhateverApplicable

[00:48] <Geth> ¦ rakudo/main: 

[00:48] <Geth> ¦ rakudo/main: This fixes R#5901 (#5901). Pretty exciting that the

[00:48] <Geth> ¦ rakudo/main: WhateverApplicable implementation is robust enough

[00:48] <Geth> ¦ rakudo/main: that no real special treatment is required here.

[00:48] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2c9ad45c40

[00:48] <linkable6> R#5901 [open]: https://github.com/rakudo/rakudo/issues/5901 RakuAST: `*>>.foo` producing incorrect (Q)AST

[00:51] <ab5tract> I'm pretty sure that there is no fallout from this commit, but I get confused as to what test files are still expected to fail

[07:34] *** donaldh- left
[08:01] <nine> [Coke]: that's expected. You need to revert 3dad1a55ae1587cee58df8e10474a1551cf97741 to build with RAKUDO_RAKUAST=1

[08:01] <linkable6> (2025-06-07) https://github.com/rakudo/rakudo/commit/3dad1a55ae Revert "RakuAST: remove workaround needed by the old compiler frontend"

[08:20] *** finanalyst left
[09:13] <nine> MasterDuke: any progress on the RakuAST fix?

[09:13] <tellable6> nine, I'll pass your message to MasterDuke

[09:40] *** donaldh joined
[11:31] <Geth> ¦ rakudo/main: f2ffa8fbf3 | (Elizabeth Mattijsen)++ | lib/RakuAST/L10N.rakumod

[11:31] <Geth> ¦ rakudo/main: RakuAST: actually handle localization of core enums

[11:31] <Geth> ¦ rakudo/main: 

[11:31] <Geth> ¦ rakudo/main: This moves already added core enums from the "term-" section to

[11:31] <Geth> ¦ rakudo/main: a new "enum-" section, and adds support for the Endian and SeekType

[11:31] <Geth> ¦ rakudo/main: enums.

[11:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f2ffa8fbf3

[11:31] <Geth> ¦ rakudo/main: 7866988179 | (Elizabeth Mattijsen)++ | 3 files

[11:31] <Geth> ¦ rakudo/main: RakuAST: add RakuAST::Enum class for handling enums

[11:31] <Geth> ¦ rakudo/main: 

[11:31] <Geth> ¦ rakudo/main: Intended to be used for core enums, but could also be used for

[11:31] <Geth> ¦ rakudo/main: custom ones.  Is in fact a very shallow subclass of ::Term::Name,

[11:31] <Geth> ¦ rakudo/main: but allows for better deparsing and better readability.

[11:31] <Geth> ¦ rakudo/main: 

[11:31] <Geth> ¦ rakudo/main: Also added a "from-identifier" instantiator method to ::Term::Name

[11:31] <Geth> ¦ rakudo/main: to make it easier to create ::Term::Name objects that have simple

[11:31] <Geth> ¦ rakudo/main: identifiers, such as "True" and "False"

[11:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7866988179

[11:31] <Geth> ¦ rakudo/main: f30501c481 | (Elizabeth Mattijsen)++ | 4 files

[11:31] <Geth> ¦ rakudo/main: RakuAST: final fixes for handling enums specifically

[11:31] <Geth> ¦ rakudo/main: 

[11:31] <Geth> ¦ rakudo/main: Add enum- handling to highlighting, .raku and deparsing

[11:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f30501c481

[11:49] <Geth> ¦ EN/main: 284100653b | (Elizabeth Mattijsen)++ | 5 files

[11:49] <Geth> ¦ EN/main: 0.0.3

[11:49] <Geth> ¦ EN/main: review: https://github.com/Raku-L10N/EN/commit/284100653b

[11:57] <nine> lizmat: I'd have called it RakuAST::Term::Enum to differentiate it more clearly from RakuAST::Type::Enum

[11:57] <lizmat> ok, will do

[12:02] <lizmat> I was in doubt about ::Enum or ::Term::Enum already  :-)

[12:08] <Geth> ¦ rakudo/main: 92068d9b46 | (Elizabeth Mattijsen)++ | 4 files

[12:08] <Geth> ¦ rakudo/main: RakuAST: rename RakuAST::Enum to RakuAST::Term::Enum

[12:08] <Geth> ¦ rakudo/main: 

[12:08] <Geth> ¦ rakudo/main: to more clearly distinguish it from RakuAST::Type::Enum

[12:08] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/92068d9b46

[12:20] <Geth> ¦ DE/main: e5be650e09 | (Elizabeth Mattijsen)++ | 17 files

[12:20] <Geth> ¦ DE/main: Initial commit after splitting off of L10N repo

[12:20] <Geth> ¦ DE/main: review: https://github.com/Raku-L10N/DE/commit/e5be650e09

[12:23] <Geth> ¦ DE/main: a7f387f68f | (Elizabeth Mattijsen)++ | 4 files

[12:23] <Geth> ¦ DE/main: CI test prior to release

[12:23] <Geth> ¦ DE/main: review: https://github.com/Raku-L10N/DE/commit/a7f387f68f

[12:25] <Geth> ¦ DE/main: dc781c1300 | (Elizabeth Mattijsen)++ | 2 files

[12:25] <Geth> ¦ DE/main: 0.0.2

[12:25] <Geth> ¦ DE/main: review: https://github.com/Raku-L10N/DE/commit/dc781c1300

[12:47] <Geth> ¦ FR/main: 5792cf35e9 | (Elizabeth Mattijsen)++ | 17 files

[12:47] <Geth> ¦ FR/main: Initial commit after splitting off of L10N repo

[12:47] <Geth> ¦ FR/main: review: https://github.com/Raku-L10N/FR/commit/5792cf35e9

[12:47] <Geth> ¦ FR/main: 8b78003545 | (Elizabeth Mattijsen)++ | 7 files

[12:47] <Geth> ¦ FR/main: CI test prior to release

[12:47] <Geth> ¦ FR/main: review: https://github.com/Raku-L10N/FR/commit/8b78003545

[12:50] <Geth> ¦ FR/main: 0cd5c2470f | (Elizabeth Mattijsen)++ | 2 files

[12:50] <Geth> ¦ FR/main: 0.0.2

[12:50] <Geth> ¦ FR/main: review: https://github.com/Raku-L10N/FR/commit/0cd5c2470f

[13:06] <Geth> ¦ HU/main: 1030c8302a | (Elizabeth Mattijsen)++ | 17 files

[13:06] <Geth> ¦ HU/main: Initial commit after splitting off of L10N repo

[13:06] <Geth> ¦ HU/main: review: https://github.com/Raku-L10N/HU/commit/1030c8302a

[13:07] <Geth> ¦ HU/main: 8679b01273 | (Elizabeth Mattijsen)++ | 2 files

[13:07] <Geth> ¦ HU/main: 0.0.2

[13:07] <Geth> ¦ HU/main: review: https://github.com/Raku-L10N/HU/commit/8679b01273

[13:21] <timo> m: say "don't stop me now"

[13:21] <camelia> rakudo-moar 92068d9b4: OUTPUT: «don't stop me now␤»

[13:39] <timo> single quotes are of the devil

[13:39] <timo> > ++ READLINE_LINE='raku -e '\''say "don'\''\'\'''\''t stop me now"'\'''

[13:49] <Geth> ¦ IT/main: 770054ab85 | (Elizabeth Mattijsen)++ | 17 files

[13:49] <Geth> ¦ IT/main: Initial commit after splitting off of L10N repo

[13:49] <Geth> ¦ IT/main: review: https://github.com/Raku-L10N/IT/commit/770054ab85

[13:52] <Geth> ¦ IT/main: 7e19600f52 | (Elizabeth Mattijsen)++ | 2 files

[13:52] <Geth> ¦ IT/main: 0.0.2

[13:52] <Geth> ¦ IT/main: review: https://github.com/Raku-L10N/IT/commit/7e19600f52

[13:53] <lizmat> hmm... whyis it sayin DE here?

[13:53] <lizmat> ah, backscroll issue  *phew*

[14:06] <Geth> ¦ PT/main: 9226bfe1f7 | (Elizabeth Mattijsen)++ | 17 files

[14:06] <Geth> ¦ PT/main: Initial commit after splitting off of L10N repo

[14:06] <Geth> ¦ PT/main: review: https://github.com/Raku-L10N/PT/commit/9226bfe1f7

[14:08] <Geth> ¦ PT/main: 4b38c25cb4 | (Elizabeth Mattijsen)++ | 2 files

[14:08] <Geth> ¦ PT/main: 0.0.2

[14:08] <Geth> ¦ PT/main: review: https://github.com/Raku-L10N/PT/commit/4b38c25cb4

[14:35] <jdv> at this recent summit, which i didn't even know about, was there anything discussed regarding parsing perf?

[14:36] <nine> don't think so

[14:36] <jdv> or is that just "part of the post rakuast" stuff for a way later time kinda thing?

[14:37] <jdv> ok

[14:39] <[Coke]> https://github.com/rakudo/rakudo/issues/5905

[14:39] <[Coke]> "Get core setting compile performance to an acceptable level"

[14:40] <jdv> i read that as just getting rakuast close(r) to legacy

[15:01] <Geth> ¦ L10N/main: 4cb625cfcb | (Elizabeth Mattijsen)++ | 89 files

[15:01] <Geth> ¦ L10N/main: CI test before release

[15:01] <Geth> ¦ L10N/main: review: https://github.com/Raku-L10N/L10N/commit/4cb625cfcb

[15:14] <Geth> ¦ L10N/main: c2595357b2 | (Elizabeth Mattijsen)++ | 5 files

[15:14] <Geth> ¦ L10N/main: 0.0.3

[15:14] <Geth> ¦ L10N/main: review: https://github.com/Raku-L10N/L10N/commit/c2595357b2

[15:29] <[Coke]> So, let's double check with a wider audience here: My take is we can't switch to RAKUAST if the performance goes down when we do it.

[15:30] <[Coke]> (primary blocker right now is still getting the install working, as I understand)

[15:30] <[Coke]> (not performance blocker, just in general)

[15:32] <jdv> maybe it should be renamed RAKUFAST

[15:53] <lizmat> [Coke]: agree, but with s/goes down/goes down too much/ at which I think slowdown of 20% would be acceptable for a first release

[15:55] <[Coke]> I think from a marketing standpoint that'd be ungood.

[15:56] <lizmat> the thing is, that without a release, people won't actually start using it extensively

[15:57] <lizmat> perhaps we should create a separate release with RakuAST soon, so it would be easy for people to use it (once we get make install type issues fixed, clearly)

[15:59] <[Coke]> folks, I'll be at TRPC this month and am happy to try to get a lightning talk in about Raku (probably 6.e related items). Please feel free to throw any potential topics at me.

[15:59] <[Coke]> like a pre-release? Sure, that works.

[16:00] <[Coke]> then especially need to fix install. :)

[16:14] <lizmat> yeah, that'd be a prerequisite

[16:25] <nine> To be honest, I find all the talk about marketing or release related to RakuAST kinda moot. It's been almost 2 1/2 months since I concluded my RakuAST work and in this time only a single one of the 3 issues I've found in make install has been fixed. And that was the trivial 2 lines fix.

[16:26] <nine> And that's just make install. We're not even talking yet about zef or blin.

[16:26] <Geth> ¦ problem-solving: lizmat self-assigned Towards a Raku Foundation https://github.com/Raku/problem-solving/issues/477

[16:27] <nine> Which frankly, I don't understand. People are clearly interested in RakuAST. And there has been work around RakuAST. Even a recent bug report about something in RakuAST has quickly seen a fix.

[16:28] <nine> So why is there so little work on the main path to an eventual release?

[16:30] <nine> I could understand people just not being interested. Or people not having the time. Or people being too intimidated to try to fix anything. But none of these seem to apply :)

[16:37] <nine> Note that this should in no way belittle the efforts that have been made. I'm super happy about the work that MasterDuke did at the RCS and the preliminary investigations into compiler performance.

[16:41] * [Coke] adds https://github.com/rakudo/rakudo/issues/5906

[16:41] <[Coke]> I am surprised there wasn't a ticket for it.

[16:41] <lizmat> hmmm... that's a new failure mode

[16:42] <nine> That's https://github.com/rakudo/rakudo/issues/5854 which is what MasterDuke++ is working on

[16:42] <nine> [Coke]: there's no overall ticket. I created 3 tickets for the individual problems I've found instead

[16:43] <lizmat> they can be made sub-issues  :-)

[16:45] <[Coke]> added as sub issue - thanks, nine. Was looking specifically for 'make install' in the text.

[17:46] <japhb> nine: In my particular case, I have bandwidth for just one major Rakudo-improvement project, so I'm working on one that I know a bit about already and that no one has touched in 2 years.

[17:56] *** El_Che joined
[17:57] <El_Che> hallo, sadly rakudo 2025.05 still has the same problem with mimalloc of 2025.04: https://gist.github.com/nxadm/8cd284952966a0e252cbc86601e23b10

[17:59] <El_Che> it breaks specifically alpine builds, I suspect the most popular container distro

[18:01] <timo> i think the commit that checked out the specific version of mimalloc that didn't have the problem was backed out right after the release? did we not put it back for last month's release?

[18:07] <El_Che> I am no aware of specific checkouts or rollbacks. When I tried to do it myself, it broke all over the place in my builds

[18:07] <El_Che> (I mean in my local copy)

[18:08] <El_Che> if there is no know security problem with the old one, maybe revert to it and bump it when it passes all tests?

[18:38] <[Coke]> it was backed out and then someone added it back in

[18:45] <[Coke]> in their defense, it looked like the backout was accidental.

[19:32] *** nine left
[19:32] *** nine joined
[21:10] *** mandrillone joined
[21:16] *** mandrillone left
