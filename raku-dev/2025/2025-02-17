[00:11] <SmokeMachine> (should if return the list? ^^)

[02:04] *** NavyUnicorn91 joined
[02:58] *** NavyUnicorn91 left
[03:01] *** NavyUnicorn91 joined
[03:11] <Geth> ¦ nqp: MasterDuke17++ created pull request #836: Use locals intead of class variables

[03:11] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/836

[03:39] *** NavyUnicorn91 left
[07:41] *** patrickb left
[07:41] *** greenfork left
[07:41] *** patrickb joined
[07:41] *** greenfork joined
[08:56] *** sena_kun joined
[09:00] *** sena_kun left
[09:02] *** sena_kun joined
[09:25] <Geth> ¦ rakudo/main: 174729f923 | (Stefan Seifert)++ | src/Raku/Actions.nqp

[09:25] <Geth> ¦ rakudo/main: RakuAST: fix .= accidentally compiled as normal method call

[09:25] <Geth> ¦ rakudo/main: 

[09:25] <Geth> ¦ rakudo/main: The parser lands in very different places depending on whether .= is

[09:25] <Geth> ¦ rakudo/main: followed by white space or not. In the latter case we compiled it to a

[09:25] <Geth> ¦ rakudo/main: postfix method call when it should be an infix call assign instead.

[09:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/174729f923

[09:25] <Geth> ¦ rakudo/main: 138ba249ed | (Stefan Seifert)++ | src/Raku/ast/expressions.rakumod

[09:25] <Geth> ¦ rakudo/main: RakuAST: don't sink the result of .=

[09:25] <Geth> ¦ rakudo/main: 

[09:25] <Geth> ¦ rakudo/main: Spectest requires this

[09:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/138ba249ed

[09:25] <nine> 1170

[09:48] <lizmat> SmokeMachine: your query tickled an error in pasting :-(

[09:48] <lizmat> will look at it shortly

[09:48] <SmokeMachine> Sorry for that…

[09:51] *** rakkable left
[09:51] *** rakkable joined
[09:52] <lizmat> rakkable: eco-pr Stash

[09:52] <rakkable> lizmat, Running: eco-provides Stash, please be patient!

[09:52] <rakkable> lizmat, Found 50 lines in 16 files (13 distributions):

[09:52] <rakkable> lizmat, https://gist.github.com/786cb4680e2952a92607d0fc9d503232

[09:52] <lizmat> SmokeMachine: ^^

[10:17] <SmokeMachine> lizmat: thanks! I’m trying to find out how to do an EXPORT sub to return a big name type… something like `sub EXPORT(—> Map()) { “Bla::Ble::Bli” => class :: {} }` (but on my real case I’m using .^new_type to create the class) do you know how I should do that?

[10:23] *** sena_kun left
[10:45] <lizmat> how should that be different from class :: { }  ?

[11:13] *** |Tux| joined
[11:26] *** |Tux| left
[11:31] <SmokeMachine> I mean, with the class keyword I wouldn’t need to export it…

[11:33] *** |Tux| joined
[11:33] <lizmat> ah, in that case:

[11:34] <lizmat> sub export() { Map.new( "Bla::Ble::Bli" => foo.^new_type ) }

[11:34] <lizmat> should work ?

[12:41] <Geth> ¦ nqp: MasterDuke17++ created pull request #837: Use new MacOS and Ubuntu versions in CI

[12:41] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/837

[13:10] <Geth> ¦ nqp/main: 992d867b80 | (Daniel Green)++ | azure-pipelines.yml

[13:10] <Geth> ¦ nqp/main: Use new MacOS and Ubuntu versions in CI

[13:10] <Geth> ¦ nqp/main: 

[13:10] <Geth> ¦ nqp/main: MoarVM and Rakudo have more combinations of older and newer versions,

[13:10] <Geth> ¦ nqp/main: but NQP sees fewer changes, so it's probably not as important to try

[13:10] <Geth> ¦ nqp/main: everything.

[13:10] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/992d867b80

[13:10] <Geth> ¦ nqp/main: a3bddac744 | MasterDuke17++ (committed using GitHub Web editor) | azure-pipelines.yml

[13:10] <Geth> ¦ nqp/main: Merge pull request #837 from MasterDuke17/use_new_oses_in_CI

[13:10] <Geth> ¦ nqp/main: 

[13:10] <Geth> ¦ nqp/main: Use new MacOS and Ubuntu versions in CI

[13:10] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/a3bddac744

[13:42] <lizmat> notable6: weekly

[13:42] <notable6> lizmat, 2 notes: 2025-02-04T09:17:18Z <melezhik>: https://sparrowdo.wordpress.com/2025/02/04/harden-syslog-conf-by-sparrow-checks/  ;  2025-02-07T09:12:42Z <melezhik>: https://sparrowdo.wordpress.com/2025/02/06/sparrowdo-cookbook/

[13:44] <lizmat> notable6: weekly reset

[13:44] <notable6> lizmat, Moved existing notes to “weekly_2025-02-17T13:44:00Z”

[13:47] *** dawids_ joined
[13:48] *** dawids_ left
[15:17] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2025/02/17/2025-07-unexpected-quora/

[16:23] *** librasteve_ joined
[16:44] <Geth> ¦ rakudo: 0rir++ created pull request #5784: Test Instant.from-posix-nanos against .from-posix

[16:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5784

[17:37] <SmokeMachine> lizmat: when I tried that and tied listing things on :: (like `say ::.keys`) it listed as key the whole name (instead of neasted) than I assumed that was wrong (sorry for the delay, I had to take my wife to the gp…)

[17:37] <Geth> ¦ nqp: MasterDuke17++ created pull request #838: Use a local for a somewhat hot class member access

[17:37] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/838

[17:37] <Geth> ¦ rakudo: MasterDuke17++ created pull request #5785: Use a local for a somewhat hot class member access

[17:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5785

[17:39] <lizmat> SmokeMachine: ah, yes...   hmmm

[17:42] <lizmat> SmokeMachine: how about: module Foo::Bar { }; Foo::Bar::{"Baz"} := class A { }; sub EXPORT() { Map.new( "Foo" => Foo ) }    ??

[17:44] <SmokeMachine> I tried too… and I couldn’t make it work…

[17:45] <SmokeMachine> I also tested a mult level map with no luck

[17:45] <lizmat> that works for me?

[17:45] <SmokeMachine> And then I was going to test stash…

[17:45] <lizmat> how did that not work for you?

[17:45] <SmokeMachine> Great! Let me test it here…

[17:46] <SmokeMachine> Sorry, that was not the way I tested, thank you very much! I’ll test that here

[17:49] <Geth> ¦ rakudo: 0rir++ created pull request #5786: Test if Instant.from-posix and -nanos match.

[17:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5786

[17:50] <SmokeMachine> lizmat: thank you very much! Its working on glót.io, I suppose it will work on my real problem… I’ll let you know… I am needing it to avoid circular dependency

[17:54] <[Coke]> https://github.com/rakudo/rakudo/issues/5783 - looks like we still have an open issue for MasterDuke?

[17:54] <[Coke]> ^^ Blin run, potential release blocker.

[17:54] <lizmat> [Coke]: which one ?

[17:55] <lizmat> they are all marked as done atm ?

[17:57] <[Coke]> Pinged @MasterDuke17 on the issue caused by 3b06479

[17:58] <lizmat> that has been resolved ?

[17:58] <lizmat> by Timo

[17:58] <[Coke]> If you're all set, though, awesome!

[17:58] <[Coke]> jdv: All clear on Blin.

[17:59] <[Coke]> lizmat++ timo++

[17:59] <lizmat> https://github.com/rakudo/rakudo/issues/5783#issuecomment-2657855890

[17:59] <jdv> woohoo!

[18:03] <Geth> ¦ rakudo/main: 02c43edc2d | MasterDuke17++ (committed using GitHub Web editor) | src/Perl6/bootstrap.c/BOOTSTRAP.nqp

[18:03] <Geth> ¦ rakudo/main: Use a local for a somewhat hot class member access

[18:03] <Geth> ¦ rakudo/main: 

[18:03] <Geth> ¦ rakudo/main: No need to repeat the `.possible` call for every iteration.

[18:03] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/02c43edc2d

[18:44] *** sena_kun joined
[19:00] <releasable6> Next release in ≈4 days and ≈23 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[19:01] <jdv> we'll see about that

[19:01] <jdv> sena_kun: sup?

[19:02] <lizmat> sena_kun appears / disappears regularly, but I doubt Oleksander is actually watching

[19:02] <jdv> i feel ignored:(

[19:02] <lizmat> jdv: sup?

[19:02] <jdv> its not new to me;)

[19:03] <jdv> not much.  thanks for asking.  the release will happen on sat.

[19:05] <[Coke]> jdv++ jdv++

[20:15] <Geth> ¦ rakudo/main: c151ca3786 | (Elizabeth Mattijsen)++ | src/core.e/array_multislice.rakumod

[20:15] <Geth> ¦ rakudo/main: Fix multi-dim array slices with lazy indices in 6.e

[20:15] <Geth> ¦ rakudo/main: 

[20:15] <Geth> ¦ rakudo/main: Before this commit, something like @foo[1..*; 2] would hang because

[20:15] <Geth> ¦ rakudo/main: it would continue to produce values for index 2 on Any as soon as

[20:15] <Geth> ¦ rakudo/main: the first dimension was exhausted.  This was reported in #5122.

[20:15] <Geth> ¦ rakudo/main: 

[20:15] <Geth> ¦ rakudo/main: This fix consists of checking whether an outer index is a lazy

[20:15] <Geth> ¦ rakudo/main: <…commit message has 6 more lines…>

[20:15] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c151ca3786

[20:24] <Geth> ¦ roast: 41c275cb4a | (Elizabeth Mattijsen)++ | S32-hash/multislice-6e.t

[20:24] <Geth> ¦ roast: Added tests for #5122

[20:24] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/41c275cb4a

[20:27] <SmokeMachine> lizmat: That almost worked... But I'm betting problems conflicting namespaces... :(

[20:28] <lizmat> yeah, maybe this should be made an issue (if it isn't already)

[20:28] <lizmat> and fixed at the EXPORT output handling code

[20:28] <SmokeMachine> I think that makes sense... I'll open the issue

[20:28] <lizmat> or maybe nine has a better idea  :-)

[20:29] <SmokeMachine> ok, I'll wait nine's opinion... :)

[20:30] <lizmat> I meant: after the issue is made  :-)   about the idea of fixing the EXPORT handling  code

[20:31] <lizmat> afk&

[20:32] <SmokeMachine> Should it go on problem solving?

[21:08] <SmokeMachine> https://github.com/Raku/problem-solving/issues/466

[21:25] <sena_kun> jdv, I'm here, yes

[21:25] <tellable6> 2025-02-07T00:13:21Z #raku <jdv> sena_kun https://github.com/rakudo/rakudo/commit/b0caab5b

[21:27] <sena_kun> .tell jdv this was 3.5 years ago, but my best guess is "something on Blin got broken and we reverted it"

[21:27] <tellable6> sena_kun, I'll pass your message to jdv

[21:33] *** sena_kun left
[21:33] *** sena_kun joined
[21:56] <Geth> ¦ nqp/main: 382844fff9 | (Daniel Green)++ | src/QAST/Node.nqp

[21:56] <Geth> ¦ nqp/main: Use a local for a somewhat hot class member access

[21:56] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/382844fff9

[21:56] <Geth> ¦ nqp/main: ce6ddc0356 | MasterDuke17++ (committed using GitHub Web editor) | src/QAST/Node.nqp

[21:56] <Geth> ¦ nqp/main: Merge pull request #838 from MasterDuke17/make_a_local_for_another_somewhat_hot_class_member_access

[21:56] <Geth> ¦ nqp/main: 

[21:56] <Geth> ¦ nqp/main: Use a local for a somewhat hot class member access

[21:56] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/ce6ddc0356

[22:02] <Geth> ¦ rakudo/main: a8fe6d8ad2 | (Daniel Green)++ | tools/templates/NQP_REVISION

[22:02] <Geth> ¦ rakudo/main: Bump NQP for some nano-optimizations

[22:02] <Geth> ¦ rakudo/main: 

[22:02] <Geth> ¦ rakudo/main: Using local variables instead of class members.

[22:02] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a8fe6d8ad2

[22:16] *** sena_kun left
[23:32] *** sena_kun joined
[23:38] *** sena_kun left
[23:51] <Geth> ¦ nqp: MasterDuke17++ created pull request #839: Use a local for a somewhat hot class member access

[23:51] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/839

