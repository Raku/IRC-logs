[01:18] *** codesections joined
[01:59] *** codesections left
[02:23] *** codesections joined
[02:29] *** codesections left
[06:56] <patrickb> MasterDuke: Thanks for the solo term link. That might prove helpful as a reference.

[06:56] <tellable6> patrickb, I'll pass your message to MasterDuke

[06:58] <patrickb> MasterDuke: Are you aware that there already is a minimal but kinda working raku terminal emulator library? https://sr.ht/~patrickb/Anolis/

[06:58] <tellable6> patrickb, I'll pass your message to MasterDuke

[07:40] *** finanalyst joined
[08:14] <Xliff_> There's also https://github.com/Xliff/p6-VTE :)

[08:28] *** finanalyst left
[08:47] *** sena_kun joined
[08:56] *** sena_kun left
[09:17] *** sena_kun joined
[09:21] *** sena_kun left
[10:14] *** finanalyst joined
[12:07] <lizmat> notable6: weekly

[12:07] <notable6> lizmat, 3 notes: https://gist.github.com/1ea30d1aceea47843fb4e0454016d4ad

[12:07] <lizmat> notable6: weekly reset

[12:07] <notable6> lizmat, Moved existing notes to “weekly_2025-03-31T12:07:37Z”

[12:08] <lizmat> [Coke]: re Whateverable gists: https://gist.github.com/Whateverable says 5000+

[12:17] <[Coke]> releasable6: next

[12:17] <releasable6> [Coke], Next release in ≈19 days and ≈6 hours. 1 blocker. 102 out of 102 commits logged

[12:17] <releasable6> [Coke], Details: https://gist.github.com/5eeeabf3c2eada120799a4cb7b0a4c38

[12:17] <[Coke]> ... in private it was saying 100/102. :P

[12:25] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2025/03/31/2025-13-a-component-journey/

[12:35] <jdv> what is 209 again?

[12:37] <jdv> only ~20 tests in both suites to go - that's amazing

[12:40] <lizmat> m: say (209 * 7) / 12

[12:40] <camelia> rakudo-moar 44c365513: OUTPUT: «121.916667␤»

[12:40] <lizmat> m: say (209 * 7) / 365.25

[12:40] <camelia> rakudo-moar 44c365513: OUTPUT: «4.005476␤»

[12:42] <lizmat> jdv: it's actually test-files, but yeah amazing!   nine++

[12:45] * jdv hasnt had coffee yet

[12:46] <nine> Adding warnings about sink context reveals a few benign coding errors in the setting and also:

[12:46] <nine> Useless use of .take xx ($seconds / 1e9) in sink context

[12:46] <nine> Now my immediate reaction would be to not warn on a sunk xx as it obviously can have desired side effects.

[12:47] <nine> But then.... it *is* an expression with a result and that result is unused. Personally I don't like this construct for this reason.

[12:47] *** JimmyZhuo joined
[12:47] <nine> We e.g. have this syntax available: .take for ^($seconds / 1e9)

[12:47] <lizmat> yeah, that's probably why it should keep this warning: so people don't use that construct

[12:48] <nine> To me this would be more clear, that it's just a loop

[12:48] <JimmyZhuo> at /home/jimmyz/rakudo/t/spec/integration/advent2013-day10.t:27

[12:48] <JimmyZhuo>     ------> est-strings(:greet<Hello> :person«$user»⏏);

[12:48] <JimmyZhuo>     Ambiguous use of >>; use » instead to mean hyper, or insert whitespace before >> to mean a quote terminator (or use different delimiters?)

[12:48] <JimmyZhuo>     at /home/jimmyz/rakudo/t/spec/integration/advent2013-day10.t:28

[12:48] <JimmyZhuo>     ------> t-strings(:greet<Hello> :person<<$user>>⏏);

[12:48] <JimmyZhuo> ...

[12:48] <JimmyZhuo> Ambiguous use of »; use >> instead to mean hyper, or insert whitespace before » to mean a quote terminator (or use different delimiters?)

[12:48] <JimmyZhuo>     at /home/jimmyz/rakudo/t/spec/integration/advent2013-day10.t:27

[12:48] <JimmyZhuo>     ------> est-strings(:greet<Hello> :person«$user»⏏);

[12:48] <JimmyZhuo>     Ambiguous use of >>; use » instead to mean hyper, or insert whitespace before >> to mean a quote terminator (or use different delimiters?)

[12:48] <JimmyZhuo>     at /home/jimmyz/rakudo/t/spec/integration/advent2013-day10.t:28

[12:48] <JimmyZhuo>     ------> t-strings(:greet<Hello> :person<<$user>>⏏);

[12:48] <JimmyZhuo> full message

[13:05] *** JimmyZhuo left
[16:09] *** rakkable left
[16:09] *** rakkable joined
[16:32] <lizmat> m: say Q|my $a; ++$a; 42|.AST.EVAL    # probably known to nine already

[16:32] <camelia> rakudo-moar 44c365513: OUTPUT: «Potential difficulties:␤    Useless use of $a in sink context␤    at EVAL_0:1␤42␤»

[16:52] <lizmat> m: BEGIN CORE::

[16:52] <camelia> rakudo-moar 44c365513: ( no output )

[16:52] <lizmat> nine: put "BEGIN CORE::" in a .rakumod file, and try to load it with precompilation, and get:

[16:52] <lizmat> Missing serialize REPR function for REPR MVMContext (BOOTContext)

[16:53] <lizmat> legacy and RakuAST

[16:53] <lizmat> looks like PseudoStashes need some barriers when called at compile time ?

[16:53] <lizmat> vrurg ^^  ideas ?

[17:28] <nine> Well a PseudoStash does store an nqp::ctx in an attribute

[17:30] <lizmat> but UNIT:: and SETTING:: do also, and they aren't a problem for some reason

[17:32] <lizmat> nine: the right fix would be to put nqp::scwbdisable; / nqp::scwbenable;  at the right places, right?

[17:34] <nine> Can't tell. After all then some value would not be in the precomp file and I don't know how it will cope with that

[17:34] <nine> Might just push the error further down the line

[17:37] <lizmat> well, generally we'd want a value from the PseudoStash, not the whole PseudoStash

[17:40] <nine> Well with CORE:: you do get a PseudoStash :)

[17:56] <lizmat> true: but that was the golf

[17:57] <lizmat> &CORE::prompt   was the original case

[18:01] *** sena_kun joined
[18:23] <lizmat> nine: do we have a way to find out whether we're precomping user code  (as opposed to the setting itself) ?

[18:24] <nine> $*COMPILING_CORE_SETTING?

[18:37] *** rakkable left
[18:38] *** rakkable joined
[18:48] *** notna joined
[18:53] *** notna left
[19:48] <Geth> ¦ rakudo/bootstrap-rakuast: 22 commits pushed by (Stefan Seifert)++

[19:48] <Geth> ¦ rakudo/bootstrap-rakuast: review: https://github.com/rakudo/rakudo/compare/b3333b7f05fe...61ca7ac09a2b

[19:48] <nine> bootstrap works again

[21:59] <finanalyst> .tell [Coke] would you please look at the edit function on new-raku.

[21:59] <tellable6> finanalyst, I'll pass your message to [Coke]

[22:09] <[Coke]> 145/166 (make test), and 1331/1350 (make spectest)  # these still right?

[22:09] <[Coke]> (for RakuAST)

[22:41] *** sena_kun left
[22:53] *** finanalyst left
