[04:37] *** guifa left
[09:47] *** sena_kun joined
[10:10] *** finanalyst joined
[10:17] *** sena_kun left
[10:40] <Geth> ¦ rakudo/main: c890ea594a | (Elizabeth Mattijsen)++ | src/core.c/metaops.rakumod

[10:40] <Geth> ¦ rakudo/main: Make left triangle metaop ([\op]) 45% faster

[10:40] <Geth> ¦ rakudo/main: 

[10:40] <Geth> ¦ rakudo/main: in the 2 arg case (which is most common) by replacing the use of

[10:40] <Geth> ¦ rakudo/main: gather/take by a proper iterator.  Part of research into #1705

[10:40] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c890ea594a

[10:56] *** finanalyst left
[12:22] <Geth> ¦ rakudo/main: 399fea1d79 | (Elizabeth Mattijsen)++ | src/core.c/metaops.rakumod

[12:22] <Geth> ¦ rakudo/main: Make left triangle metaop ([\op]) 45% faster (>2)

[12:22] <Geth> ¦ rakudo/main: 

[12:22] <Geth> ¦ rakudo/main: in the > 2 arg case by replacing the use of gather/take by a proper

[12:22] <Geth> ¦ rakudo/main: iterator.  Part of research into #1705

[12:22] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/399fea1d79

[13:56] <Geth> ¦ rakudo/main: 880503720d | (Elizabeth Mattijsen)++ | src/core.c/metaops.rakumod

[13:56] <Geth> ¦ rakudo/main: Streamline left metaop

[13:56] <Geth> ¦ rakudo/main: 

[13:56] <Geth> ¦ rakudo/main: This is mostly micro-opt, except for the N > 2 case, where the

[13:56] <Geth> ¦ rakudo/main: support to handle slips has been removed, and the code a bit

[13:56] <Geth> ¦ rakudo/main: more nqp-ified for performance.  The slip support could be

[13:56] <Geth> ¦ rakudo/main: removed because the iterator for the +values signature already

[13:56] <Geth> ¦ rakudo/main: expands slips.

[13:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/880503720d

[14:29] <Geth> ¦ rakudo/main: b7f47a2a68 | (Elizabeth Mattijsen)++ | src/core.c/metaops.rakumod

[14:29] <Geth> ¦ rakudo/main: Remove support for Slip in [\op] N > 2

[14:29] <Geth> ¦ rakudo/main: 

[14:29] <Geth> ¦ rakudo/main: As noted in 880503720d, support for Slips is not needed as the

[14:29] <Geth> ¦ rakudo/main: iterator for the +values signature handles Slips already.  Part

[14:29] <Geth> ¦ rakudo/main: of research into #1705

[14:29] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b7f47a2a68

[16:33] *** finanalyst joined
[16:36] <finanalyst> I tried to access the IRC chat from the website. It's 404'ing

[16:38] <finanalyst> I thought it was a temporary issue, but the last time I tried I got the same problem

[16:40] *** Guest40 joined
[16:40] <Guest40> web.libera.chat LGTM, what are you using?

[16:40] <finanalyst> Has anyone used Google's protocol-buffer ?

[16:40] *** Guest40 left
[16:41] <finanalyst> I'm just clicking on chat from the web site

[16:41] <finanalyst> It now shows a host error

[16:41] <timo> looks like kiwiirc.com is completely down, not just a 404

[16:42] <timo> maybe we should be linking to web.libera.chat instead

[16:42] <finanalyst> what would be the url?

[16:42] <[Coke]> finanalyst: which site?

[16:42] <finanalyst> docs.raku.org

[16:42] <[Coke]> chat link on top menu of docs?

[16:43] <finanalyst> click on chat at the top

[16:43] <[Coke]> that's going to https://kiwiirc.com/client/irc.libera.chat/#raku which is hanging for me as well

[16:43] <timo> i saw one in the main text

[16:43] <finanalyst> that's the one

[16:43] <[Coke]> it's the same link as on raku.org/community/irc

[16:44] <timo> i don't know if web.libera.chat lets you put a channel in the URL

[16:44] <finanalyst> If we can find a better URL, I'll change the links on the docs page

[16:45] <timo> https://libera.chat/guides/webchat#linking-or-embedding

[16:45] <[Coke]> tried hitting front page of that site - it eventually came up but was VERY slow

[16:46] <finanalyst> https://web.libera.chat/gamja/#raku

[16:46] <finanalyst> ?

[16:47] <timo> that's for gamja, which is a lightweight client, compared to kiwiirc which i'm not sure is very heavyweight to begin with

[16:47] *** finanalyst left
[16:48] *** Guest40 joined
[16:48] <[Coke]> don't use gamja.

[16:48] <[Coke]> https://web.libera.chat/#raku

[16:48] <Guest40> oh someone has experience? :)

[16:48] *** finanalyst joined
[16:49] <finanalyst> I just tried the link I found. I had to logout here first. 

[16:49] <Guest40> what does "share when i'm typing a message" do, i wonder

[16:49] <finanalyst> But I got SASL authentication failed

[16:49] <timo> you were trying to use your username and password?

[16:50] <finanalyst> Yes. I could have used another username, but I wanted to see if mine would wokr

[16:51] *** Guest40 left
[16:51] <[Coke]> most of the users coming through there will be using Guest, I'm betting

[16:51] <timo> we could put something like "RakuGuest" as the suggested default, it will add numbers if needed

[16:53] <timo> is kiwiirc much work to host? does it have anything that has to actually run on the server?

[16:53] <timo> well, i can't look it up on their website right now LOL

[16:53] <finanalyst> https://web.libera.chat/gamja/?nick=RakuGuest#raku    Testing

[16:54] <timo> if it's no performance cost on the server to host, and if someone has lots of time left over, we could maybe have one or two little customizations for a kiwiirc that would be hosted on perl6.org, for example something that makes discord-bridged users a little less odd looking, and something for the output of our eval bots

[16:56] *** RakuGuest joined
[16:56] <finanalyst> I was fooled for a minute because I couldn't see any activity on #raku

[16:57] <finanalyst> (i'm not an IRC guru)

[16:57] <finanalyst> [Coke] would you be OK with me changing the chat URL for the website to the above?

[17:03] <timo> not gamja, finanalyst 

[17:03] <timo> well, that's what coke said while you were briefly off line

[17:04] *** RakuGuest left
[17:04] <finanalyst> https://web.libera.chat/?nick=RakuGuest#raku     This one? testing 

[17:04] *** RakuGuest joined
[17:05] <RakuGuest> Ok this one works too, but the gamja response was way quickeer

[17:05] <finanalyst> RakuGuest == finanalyst

[17:06] <[Coke]> I would not specify a guest name

[17:06] <timo> it does look like both gamja and kiwiirc do need a little server component that talks websocket to the browser and IRC to the irc server

[17:06] <[Coke]> https://web.libera.chat/#raku should be fine, IMO

[17:06] <timo> there are irc servers that can accept websocket connections, but i don't see an indication that libera.chat is configured that way

[17:06] <RakuGuest> I'll create a PR in a mo

[17:07] <[Coke]> ... I'd rather have the nicer looking one advertised for guests.

[17:07] <RakuGuest> I think we should have something that works,

[17:07] <[Coke]> obviously we can use whatever for our personal connections.

[17:07] <[Coke]> ... It does work?

[17:08] <RakuGuest> I'm using it now

[17:08] <[Coke]> *shrug* I don't have a veto on this, feel free.

[17:08] <[Coke]> I'm saying that the one I suggested does work - I inferred you were saying it didn't

[17:08] <finanalyst> https://web.libera.chat/#raku     no pre-suggested nic one? testing 

[17:09] <[Coke]> Please also update raku.org if you can. (or open a ticket if you only change the docs one, so we can keep it in sync)

[17:09] <timo> did you have a particular reason against gamja, coke? or kiwiirc just looks nicer?

[17:09] *** RakuGuest left
[17:14] <[Coke]> "A simple IRC web client.

[17:14] <[Coke]> "

[17:14] <[Coke]> the simple (and then the UI) makes me prefer the default. I am fine if I'm outvoted, no worries.

[17:15] <[Coke]> (I think https://web.libera.chat/ is the same as the old one we linked, except it's hosted -at- libera instead of kiwiirc.

[17:17] <finanalyst> [Coke] where is raku.org repo? I havent looked at the repo for a while

[17:18] <finanalyst> found it

[17:19] <timo> who is Group Contact for the Raku Community on libera.chat? i would like to request a project cloak

[17:22] <[Coke]> https://www.bbc.com/news/articles/cly7n2jm5m5o "Will young developers take on key open source software?

[17:22] <[Coke]> lizmat?

[17:22] <[Coke]> (for group contact)

[17:24] <timo> lizmat is definitely set as the Founder in the #raku channel, i assume that means something

[17:25] <timo> https://www.freewear.org/PerlandRaku oh i had no idea!

[17:28] <finanalyst> [Coke] I dont have a commit bit for raku.org. I've raised an issue there with the edit needed

[17:30] <finanalyst> Has anyone used the API for Google translate? 

[17:30] <finanalyst> There seem to be wrappers for Perl, but not for Raku

[17:32] <finanalyst> I'm just reading up on the API, and it appears that Google has some form of `protocol-buffer` that's language neutral

[17:34] <timo> right, protocol buffer is a specification with which you generate code that parses or writes the specified format

[17:34] <timo> unlike json or yaml it doesn't self-describe

[17:35] <finanalyst> since I've seen some blogs about LLMs, have others used the protocol buffer for other projects?

[17:37] <finanalyst> The documentation about other languages has three wrappers for Perl

[17:37] <timo> i'm not aware that the LLM related APIs tend to use protocol buffers

[17:38] <finanalyst> i dont know if they do. The Google documentation for translation implied the pbuffers are used across Google Cloud

[17:41] <timo> hm, is grpc generally biased slightly towards protobuf?

[17:43] <finanalyst> again, I'm only just getting into the topic, so I'm not sure I understand. But, the translation documentation states that protobuf is multiple times faster than using REST

[17:45] <ugexe> for communicating to a translation api serialization is not going to be a bottle neck

[17:45] <finanalyst> FYI, This is the start of work to create 1st draft translations of web sites, such as the Raku documentation web site.

[17:45] <timo> using REST with json over an HTTP2 connection is probably slower than going over a GRPC2 connection (which is kind-of sort-of HTTP2 compatible) with protobufs, but it really depends on many factors. for example what ugexe just pointed out

[17:47] <finanalyst> understood. Also this is not for real-time translation, just a one-off 1st draft, with the expectation of human editing

[17:47] <timo> i'm not sure what the worth of machine translated documentation will be. i imagine that if it's not very clear when the user is reading something that was automatically translated vs what a real person reviewed and corrected

[17:48] <timo> i guess everybody works differently when it comes to making translations, and someone may work better with a rough initial draft, even if 90% has to be thrown away

[17:48] <finanalyst> timo: Completely true! Which is why I have said `1st draft`

[17:49] <timo> but also also, i don't think i would volunteer time to do translation work. i would think i'm not good at it, and i'm not sure if i would enjoy it

[17:49] <timo> so if i'm not going to contribute, i shouldn't stand in the way of someone who would

[17:49] <finanalyst> Also, my plan is to have synronchisation at the section level between the canonical language and the translated language. This needs a template to be established that is then modified

[17:50] <timo> not sure what synchronisation means here

[17:50] <timo> kind of like "section headers stay in the same order, content stays in their section"

[17:51] <finanalyst> Suppose you are half-way down a page and you just want to see what the Englist/French says for that paragraph. Synchronisation means being able to go to that section in another language and then switch back

[17:52] <finanalyst> And also, the UX language does not change

[17:52] <timo> oh ok

[17:53] <finanalyst> I have a proof of concept working at https://new-raku.finanalyst.org/language/operators

[17:54] <finanalyst> Try 'Switch UI' for Welsh, Japanese. Dutch, French

[17:54] <finanalyst> Again these are `1st draft`

[17:54] <timo> that changes the UI as well as the text on the page if it's available?

[17:54] <finanalyst> Only changes the UI, not the text

[17:55] <finanalyst> So far, only English content available

[17:55] <timo> oh ok

[17:55] <timo> i imagine sections where a translated version is available might have something to the side that lets you switch, kind of like tabs

[17:56] <ugexe> have you tried using browsers built in translation?

[17:56] <ugexe> i think lizmat suggested that a month or so ago

[17:56] <finanalyst> timo: yes. I was thinking of right click on a section heading

[17:56] <ugexe> in firefox you open the hamburger menu then click "Translate page"

[17:56] <[Coke]> finanalyst: I don't see a raku.org issue on https://github.com/Raku/raku.org/issues

[17:56] <[Coke]> no need, I'll just make the same change.

[17:57] <timo> [Coke]: it accidentally went into rakudo.org repo

[17:57] <timo> i'm not a big fan of overriding the native right-click menu on websites

[17:58] <finanalyst> ugexe: built-in translations are already possible, but there are some things for which human input is needed

[18:00] <finanalyst> timo: I've not yet decided on the correct UI. May be a floating language changer? The syncronisation is the difficult bit, especially since I want for the URLs to be in the content language too

[18:01] <finanalyst> ugexe: humans like to invent jargon to fool translators, like young people change their speech 

[18:01] <timo> it's nice that the translation in at least firefox runs on-device, but it's also a rather small model

[18:34] <ugexe> is jargon invented to fool translators a problem for the docs? i would assume no

[18:35] <ugexe> i can understand sometimes the browser translator might not be sufficient. however it is possible that for our use case it is. i personally have no idea because i have not spent time checking, but if i *were* spending time in this area I would probably investigate it

[18:37] <ugexe> i do suspect it wouldn't be sufficient though since there is going to be text that it should not translate (like identifiers)

[18:37] <ugexe> which i doubt it is smart enough to not translte

[18:38] <ugexe> yeah for instance it does not translate Str.trans, but does translate StrDistance. we dont want either of these translated

[18:43] <[Coke]> We know about the source documents here, we might be able to have the rakudoc be smart enough that the translation can avoid that

[18:43] <[Coke]> (that's a lot more work than 'translate the whole page', ofc.)

[18:49] <[Coke]> https://gist.github.com/coke/234179e4fab7527296aa7291d99e673e - the difference between creating release tarballs in moar & rakudo

[18:50] <[Coke]> Looks like we could simplify the moarvm one quite a bit.

[19:10] <ab5tract> ugexe: can I trouble you to please update R#5485 when you get a chance?

[19:10] <linkable6> R#5485 [open]: https://github.com/rakudo/rakudo/pull/5485 [IO][6.e]  Deprecate IO subs that operate on multiple paths in 6.e

[19:10] <ab5tract> ahhh, I see there is a thumbs-up that I didn't see before

[19:11] <ab5tract> unfortunately emoji don't trigger an "updated" status

[19:20] *** sena_kun joined
[19:41] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: f8cc6bf027 | (Nick Logan)++ (committed by ab5tract) | 6 files

[19:41] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: Deprecate IO subs that operate on multiple paths in 6.e

[19:41] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: 

[19:41] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: While convienient, being able to pass multiple paths to e.g. &rmdir

[19:41] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: is problematic because there isn't a blessed way to handle what to

[19:41] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: do when an exception or failure occurs, i.e. should it try to rmdir

[19:41] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: every entry even if some things fail, or stop on the first failure?

[19:41] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: 

[19:41] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: <…commit message has 30 more lines…>

[19:41] <Geth> ¦ rakudo/ugexe/deprecate-multi-file-operations: review: https://github.com/rakudo/rakudo/commit/f8cc6bf027

[19:44] <ab5tract> ugexe: so I'm inclined to view your thumbs up as an overall approval, but I'll let it simmer for a day or two in case there are any additions or changes to be made before merging

[19:51] <ugexe> Yeah I'm good with it. I just generally don't explicitly approve my own PRs as that seems wrong and probably also disincentivizes someone who did not write any of the code to review it

[21:17] <ab5tract> ugexe: Fair enough! I submitted my own review on this one mostly out of cheekiness

[21:19] <ab5tract> well, entirely out of cheekiness :O)

[21:19] <Geth> ¦ rakudo/main: cd34688a8d | (Nick Logan)++ (committed by ab5tract) | 6 files

[21:19] <Geth> ¦ rakudo/main: Deprecate IO subs that operate on multiple paths in 6.e

[21:19] <Geth> ¦ rakudo/main: 

[21:19] <Geth> ¦ rakudo/main: While convienient, being able to pass multiple paths to e.g. &rmdir

[21:19] <Geth> ¦ rakudo/main: is problematic because there isn't a blessed way to handle what to

[21:19] <Geth> ¦ rakudo/main: do when an exception or failure occurs, i.e. should it try to rmdir

[21:19] <Geth> ¦ rakudo/main: every entry even if some things fail, or stop on the first failure?

[21:19] <Geth> ¦ rakudo/main: 

[21:19] <Geth> ¦ rakudo/main: <…commit message has 30 more lines…>

[21:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cd34688a8d

[21:40] *** librasteve_ joined
[22:46] *** sena_kun left
[22:57] *** vrurg left
[23:00] *** vrurg joined
[23:07] *** Geth left
[23:07] *** RakuIRCLogger left
[23:44] *** lizmat_ left
[23:44] *** lizmat joined
