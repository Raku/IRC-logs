[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[00:23] *** [Coke]_ joined
[00:23] *** [Coke] left
[00:34] *** [Coke] joined
[00:35] *** [Coke]_ left
[02:19] *** cbk joined
[02:38] *** MasterDuke joined
[02:56] *** frost joined
[02:57] *** [Coke]_ joined
[02:58] *** cbk left
[02:59] *** cbk joined
[02:59] *** [Coke] left
[02:59] *** cbk left
[03:35] *** epony left
[03:38] *** epony joined
[03:39] *** [Coke]_ left
[03:41] *** [Coke] joined
[03:49] *** [Coke]_ joined
[03:51] *** [Coke] left
[04:16] *** frost left
[04:55] *** discord-raku-bot left
[04:55] *** discord-raku-bot joined
[05:51] *** elcaro joined
[05:51] <discord-raku-bot> <elcaro> Liz has you covered: https://raku.land/zef:lizmat/Adverb::Eject

[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:13] *** [Coke]_ left
[06:16] *** [Coke] joined
[06:25] <Geth> ¦ roast: 503f521e29 | usev6++ | 4 files

[06:25] <Geth> ¦ roast: [JVM] Skip tests for broken multi dispatch

[06:25] <Geth> ¦ roast: 

[06:25] <Geth> ¦ roast: See https://github.com/rakudo/rakudo/issues/5037

[06:25] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/503f521e29

[06:53] *** [Coke] left
[06:56] *** [Coke] joined
[07:04] *** [Coke]_ joined
[07:06] *** [Coke] left
[08:03] *** sena_kun joined
[09:21] *** frost joined
[09:28] *** [Coke]_ left
[09:30] *** [Coke] joined
[09:54] *** frost left
[10:07] *** [Coke] left
[10:09] *** [Coke] joined
[10:18] *** [Coke]_ joined
[10:20] *** [Coke] left
[10:26] <patrickb> o/ Quickly dropping by. Still have very limited time at hand (my first child was born three weeks ago and we had a rough start). If someone needs to reach out for me, I do look at my mail regularly and skim IRC, but can't guarantee that some ping on IRC won't slip through.

[10:27] *** frost joined
[10:31] <patrickb> Where can I read up on how distributions and the stuff in META6.json is meant to work? I'm wondering, why resources and modules are explicitly stated, while scripts (stuff in bin/) and tests (stuff in t/ and xt/) is implicit. I guess this isn't an accident, but don't manage to think of a reason why this should be so.

[10:32] <lizmat> not sure why scripts aren't mentioned: I think that would actually be helpful for introspection

[10:32] <lizmat> as to tests: I feel that's an internal thing, really shouldn't matter on the actual content of the distribution on usage

[10:33] <lizmat> so I completely understand why that is not in the META

[10:34] <lizmat> patrickb: https://docs.raku.org/language/modules#index-entry-META6.json-META6.json is the only thing I could find quickly

[10:36] <patrickb> Thanks.

[10:41] <nine> I'm to blame for the implicit bin/ thing. Seemed like a good idea at the time, but I probably would do it differently today.

[10:42] <patrickb> I'm waiting for someone to set up a subdomain on rakudo.org (See https://github.com/Raku/RakudoCIBot/issues/1#issuecomment-1219143800). Anyone knows who to ping? Progress on the RCB isn't blocked by this, but I do not like working with a temporary domain longer term. Links will start appearing and then back compat is an issue.

[10:42] <patrickb> Hi nine! Hope you have / had a good vacation.

[10:44] <lizmat> patrickb: pinged the RSC

[10:45] <patrickb> nine: So that files in bin/ are scripts and installed as such isn't an accident, but a behavior that one can rely on? It always felt like a not-entirely-implemented-yet thing to me.

[10:45] <patrickb> lizmat: Thanks!

[10:54] <nine> patrickb: yes, that behavior is now set in stone. At least for this META version. We may want to be more explicit in a future version, but that must be clearly marked thus.

[10:55] <patrickb> ok, thanks for clarifying.

[10:58] *** frost left
[11:38] *** Kaipei joined
[11:39] *** tellable6 left
[11:40] *** squashable6 left
[11:40] *** rypervenche left
[11:42] *** tellable6 joined
[11:43] *** linkable6 left
[11:43] *** committable6 left
[11:43] *** bloatable6 left
[11:43] *** notable6 left
[11:43] *** sourceable6 left
[11:43] *** committable6 joined
[11:43] *** statisfiable6 left
[11:44] *** notable6 joined
[11:44] *** releasable6 left
[11:46] *** [Coke]_ left
[11:46] *** reportable6 left
[11:46] *** unicodable6 left
[11:46] *** nativecallable6 left
[11:46] *** quotable6 left
[11:46] *** greppable6 left
[11:46] *** bisectable6 left
[11:46] *** Kaiepi left
[11:46] *** shareable6 left
[11:48] *** rypervenche joined
[11:49] *** notable6 left
[11:52] *** discord-raku-bot left
[11:52] *** MasterDuke left
[11:52] *** japhb left
[11:52] *** bartolin_ left
[11:52] *** camelia left
[11:52] *** leont left
[11:52] *** zostay left
[11:52] *** kawaii_ left
[11:52] *** kjp left
[11:52] *** samcv left
[11:52] *** gfldex left
[11:52] *** tailgate left
[11:54] *** discord-raku-bot joined
[11:54] *** MasterDuke joined
[11:54] *** japhb joined
[11:54] *** kjp joined
[11:54] *** kawaii_ joined
[11:54] *** zostay joined
[11:54] *** leont joined
[11:54] *** camelia joined
[11:54] *** bartolin_ joined
[11:54] *** samcv joined
[11:54] *** tailgate joined
[11:54] *** gfldex joined
[11:54] *** rypervenche left
[11:54] *** linkable6_ joined
[11:54] *** [Coke]_ joined
[11:54] *** reportable6 joined
[11:54] *** unicodable6 joined
[11:54] *** nativecallable6 joined
[11:54] *** quotable6 joined
[11:54] *** greppable6 joined
[11:54] *** bisectable6 joined
[11:54] *** rypervenche joined
[11:55] *** discord-raku-bot left
[11:55] *** MasterDuke left
[11:55] *** japhb left
[11:58] *** CIAvash left
[11:58] *** crystalfrost[m] left
[11:58] *** AlexDaniel left
[12:00] *** discord-raku-bot joined
[12:00] *** MasterDuke joined
[12:00] *** japhb joined
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[12:12] <Kaipei> i'm looking into whether or not [List|Array].STORE multis can be simplified while making *all* of them delegate to just one that does over-iterator

[12:13] <Kaipei> it's a bit tricky - it wants to reify at least the eager values, and i'm not very familiar with how Array does containers

[12:18] *** AlexDaniel joined
[12:18] *** CIAvash joined
[12:23] *** crystalfrost[m] joined
[12:41] *** shareable6 joined
[12:41] *** releasable6 joined
[12:42] *** statisfiable6 joined
[12:42] *** squashable6 joined
[12:44] *** [Coke]_ left
[12:46] *** [Coke] joined
[12:46] *** notable6 joined
[12:51] *** bloatable6 joined
[12:51] *** sourceable6 joined
[13:28] *** vrurg left
[13:29] *** vrurg joined
[14:56] *** japhb left
[15:07] *** japhb joined
[15:30] *** sena_kun left
[15:52] *** sena_kun joined
[16:14] *** [Coke] left
[16:16] *** [Coke] joined
[16:36] *** [Coke]_ joined
[16:37] *** [Coke] left
[16:48] *** [Coke] joined
[16:49] *** [Coke]_ left
[17:10] *** sena_kun left
[17:21] *** sena_kun joined
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[19:12] *** [Coke] left
[19:15] *** [Coke] joined
[19:23] <Geth> ¦ roast: 36cc3ad363 | usev6++ | 9 files

[19:23] <Geth> ¦ roast: [JVM] Fudge new failing test

[19:23] <Geth> ¦ roast: 

[19:23] <Geth> ¦ roast: This should make "make spectest" usable again and should help with

[19:23] <Geth> ¦ roast: catching further regressions.

[19:23] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/36cc3ad363

[19:33] *** sena_kun left
[19:36] <gfldex> lizmat: would it make sense to special case method splice for Junctions to speed things up?

[19:37] <lizmat> splice is already a multi dispatch nightmare

[19:37] <lizmat> if I remember correctly

[19:37] <gfldex> aye :)

[19:38] <gfldex> That's why I was asking. I do like reading Rakudos source. But not all of it at once. :->

[19:39] <lizmat> it could be well worth implementing a new implementation for 6.e, to allow for easy comparison

[19:40] <gfldex> m: my @a = 1,2,3,4; @a.splice(1|2,1); say @a;

[19:40] <camelia> rakudo-moar 2070ceebb: OUTPUT: «[1 3]␤»

[19:40] <gfldex> That is much nicer then:

[19:40] <gfldex> m: my @a = 1,2,3,4; @a.[1,2]:delete; say @a;

[19:40] <camelia> rakudo-moar 2070ceebb: OUTPUT: «[1 (Any) (Any) 4]␤»

[19:41] <gfldex> m: my @a = 1,2,3,4; @a.[1,2]:delete; say @a.join(‘♥’);

[19:41] <camelia> rakudo-moar 2070ceebb: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤1♥♥♥4␤  in block <unit> at <tmp> line 1␤»

[19:41] <gfldex> I wish SemiLists would be a real type, not a grammar level construct.

[19:42] <lizmat> if they could be a real type, they could be developed in module space  :-)

[19:43] <gfldex> And they could be used in subs. They are really useful and it's a shame they only work in subscripts.

[19:49] <lizmat> my mind is more in rak territory atm, but if you could describe in more detail in a gist, that would be great  :-)

[19:49] <lizmat> perhaps even a blog post ?

[19:50] <gfldex> The :sdelete/:but/splice(Junction)-thing is first on the blog-list.

[19:51] *** [Coke] left
[19:54] *** [Coke] joined
[20:04] *** [Coke] left
[20:07] *** [Coke] joined
[20:17] *** sena_kun joined
[21:17] <Geth> ¦ rakudo: 90709d5334 | (Christian Bartolomäus)++ | t/02-rakudo/18-pseudostash.t

[21:17] <Geth> ¦ rakudo: [JVM] Un-todo now passing tests for pseudostash

[21:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/90709d5334

[22:19] *** sena_kun left
[22:25] *** [Coke]_ joined
[22:26] *** [Coke] left
[23:05] *** [Coke] joined
[23:07] *** [Coke]_ left
[23:18] *** [Coke]_ joined
[23:19] *** [Coke] left
