[00:04] <moon-child> I wouldn't be surprised if it were actually that slow

[00:05] <moon-child> try this: [^100].map({$_ ==> map(&say.assuming("a", "b"))}).say.  It goes so slowly you can watch it think

[00:07] *** reportable6 left
[00:25] *** sena_kun left
[00:33] *** sena_kun joined
[01:08] *** reportable6 joined
[01:53] *** frost joined
[03:52] *** frost left
[04:21] *** squashable6 left
[05:24] *** squashable6 joined
[06:06] *** reportable6 left
[06:07] *** reportable6 joined
[07:17] *** TheAthlete joined
[07:18] <Geth> ¦ LWP-Simple: 71c43aaf20 | (Steve Dondley)++ | README.md

[07:18] <Geth> ¦ LWP-Simple: encourage others to document

[07:18] <Geth> ¦ LWP-Simple: review: https://github.com/raku-community-modules/LWP-Simple/commit/71c43aaf20

[07:18] <Geth> ¦ LWP-Simple: 686524e48f | (Steve Dondley)++ | README.md

[07:18] <Geth> ¦ LWP-Simple: document get method more fully

[07:18] <Geth> ¦ LWP-Simple: review: https://github.com/raku-community-modules/LWP-Simple/commit/686524e48f

[07:18] <Geth> ¦ LWP-Simple: a355846b42 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | README.md

[07:18] <Geth> ¦ LWP-Simple: Merge pull request #48 from sdondley/documentation

[07:18] <Geth> ¦ LWP-Simple: 

[07:18] <Geth> ¦ LWP-Simple: documentation improvements

[07:18] <Geth> ¦ LWP-Simple: review: https://github.com/raku-community-modules/LWP-Simple/commit/a355846b42

[07:36] *** qorg11 left
[07:37] *** qorg11 joined
[09:19] *** [Tux] left
[09:19] <lizmat> moon-child: .assuming is currently very slow as it first creates code, then EVALs it

[09:20] <lizmat> Files=1351, Tests=117094, 288 wallclock secs (35.18 usr  9.60 sys + 4018.62 cusr 329.62 csys = 4393.02 CPU)

[09:24] *** [Tux] joined
[10:52] *** TheAthlete left
[10:56] <Geth> ¦ rakudo/rakuast: 66bb3e5331 | (Jonathan Worthington)++ | 2 files

[10:56] <Geth> ¦ rakudo/rakuast: RakuAST node and compilation of radix numbers

[10:56] <Geth> ¦ rakudo/rakuast: 

[10:56] <Geth> ¦ rakudo/rakuast: For the non-literal forms.

[10:56] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/66bb3e5331

[11:10] <lizmat> whee!   

[11:25] <sjn> what's that about? ^

[11:26] <lizmat> first RakuAST push in a long time ?

[11:27] <sjn> aah

[11:48] <Geth> ¦ rakudo/lizmat-NYI-as-sub: 33 commits pushed by 7 authors

[11:48] <Geth> ¦ rakudo/lizmat-NYI-as-sub: review: https://github.com/rakudo/rakudo/compare/63d5ef1ba79a...5e2dce38d8ae

[11:51] <Geth> ¦ rakudo: 94456edfef | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 31 files

[11:51] <Geth> ¦ rakudo: Introduce NYI as a sub (#4716)

[11:51] <Geth> ¦ rakudo: 

[11:51] <Geth> ¦ rakudo: Many places in the core setting use:

[11:51] <Geth> ¦ rakudo: 

[11:51] <Geth> ¦ rakudo:    Failure.new: X::NYI.new: feature => "unimplemented feature"

[11:51] <Geth> ¦ rakudo: 

[11:51] <Geth> ¦ rakudo: in relatively hot code.  Another often occurring idiom is:

[11:51] <Geth> ¦ rakudo: <…commit message has 17 more lines…>

[11:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/94456edfef

[11:52] *** linkable6 left
[12:01] <Geth> ¦ rakudo: 45090c91d2 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 2 files

[12:01] <Geth> ¦ rakudo: Make Int.roll/pick act as (^Int).roll/pick on 6.e (#4695)

[12:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/45090c91d2

[12:07] *** reportable6 left
[12:08] *** reportable6 joined
[12:24] <Geth> ¦ rakudo: 6222a14c9e | (Elizabeth Mattijsen)++ | src/core.e/Int.pm6

[12:24] <Geth> ¦ rakudo: Make Int.roll/pick about 6x as fast in v6.e

[12:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6222a14c9e

[12:25] *** frost joined
[12:26] *** frost left
[12:35] *** TheAthlete joined
[12:42] <Geth> ¦ rakudo: 21ee1fa0a3 | (Elizabeth Mattijsen)++ | src/core.c/Range.pm6

[12:42] <Geth> ¦ rakudo: Make ^Int:D about 14x as fast

[12:42] <Geth> ¦ rakudo: 

[12:42] <Geth> ¦ rakudo: By directly creating a Range object in NQP

[12:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/21ee1fa0a3

[12:54] *** linkable6 joined
[13:04] *** frost joined
[13:30] *** carlmasak joined
[13:31] <carlmasak> good *, #raku-dev

[13:35] <Geth> ¦ rakudo: 8fbe6c0a1c | (Elizabeth Mattijsen)++ | src/core.c/Range.pm6

[13:35] <Geth> ¦ rakudo: Make creation of Int .. Int object about 14x as fast

[13:35] <Geth> ¦ rakudo: 

[13:35] <Geth> ¦ rakudo: Applies to infix:<..>, infix:<^..>, infix:<..^> and infix:<^..^>.

[13:35] <Geth> ¦ rakudo: This is purely about the creation of the Range object itself.

[13:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8fbe6c0a1c

[13:35] <lizmat> carlmasak  0/

[13:43] <Geth> ¦ rakudo: 522155d56b | (Daniel Sockwell)++ (committed using GitHub Web editor) | 2 files

[13:43] <Geth> ¦ rakudo: Specify base of non base 10 invalid numbers (#4717)

[13:43] <Geth> ¦ rakudo: 

[13:43] <Geth> ¦ rakudo: Raku prints numbers in base 10 even when they were entered in another

[13:43] <Geth> ¦ rakudo: base.  As a result, entering invalid numbers in other bases would

[13:43] <Geth> ¦ rakudo: result in mildly entertaining (but also LTA) error messages such as

[13:43] <Geth> ¦ rakudo: 

[13:43] <Geth> ¦ rakudo:     0b42;

[13:43] <Geth> ¦ rakudo: <…commit message has 10 more lines…>

[13:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/522155d56b

[13:44] *** frost left
[13:44] *** linkable6 left
[13:46] *** linkable6 joined
[13:52] <MasterDuke> m: my $a; say ~$a     # i'd say this error is LTA

[13:52] <camelia> rakudo-moar 522155d56: OUTPUT: «Use of uninitialized value $a of type Any in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤␤  in block <unit> at <tmp> line 1␤»

[13:53] <MasterDuke> ha. i have a local change. ignore me

[13:54] <MasterDuke> m: my $a; say $a ~ ""     # but this one *is* LTA, it's using 'element' as the name of the variable

[13:54] <camelia> rakudo-moar 522155d56: OUTPUT: «Use of uninitialized value element of type Any in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤␤  in block <unit> at <tmp> line 1␤»

[13:56] <MasterDuke> bisectable6: old=2018.06 new=2018.08 my $a; say $a ~ ""

[13:56] <bisectable6> MasterDuke, Bisecting by output (old=2018.06 new=2018.08) because on both starting points the exit code is 0

[13:56] <bisectable6> MasterDuke, bisect log: https://gist.github.com/a4c715d47992551518d3b3f2b358f422

[13:56] <bisectable6> MasterDuke, (2018-06-13) https://github.com/rakudo/rakudo/commit/93a8ec66553b78405052b71fa793f062e073b109

[13:57] <MasterDuke> bisectable6: old=2019.03.1 new=2019.07.1 my $a; say $a ~ ""

[13:57] <bisectable6> MasterDuke, Bisecting by output (old=2019.03.1 new=2019.07.1) because on both starting points the exit code is 0

[13:57] <bisectable6> MasterDuke, bisect log: https://gist.github.com/55abc821a84117d0b2b1954f94fb7c89

[13:57] <bisectable6> MasterDuke, (2019-05-28) https://github.com/rakudo/rakudo/commit/2b0ac401af75544b3db711b70ef996f17cc483db

[14:01] *** carlmasak53 joined
[14:01] *** carlmasak53 left
[14:03] *** carlmasak left
[14:15] *** frost joined
[14:28] <lizmat> and that concludes my core hacking for today

[15:15] *** linkable6 left
[15:17] *** frost left
[16:27] *** evalable6 left
[17:18] *** linkable6 joined
[17:48] *** dogbert11 left
[18:06] *** reportable6 left
[18:07] *** reportable6 joined
[19:07] *** linkable6 left
[19:30] *** evalable6 joined
[20:43] *** Xliff joined
[20:50] *** TheAthlete left
[20:59] *** Colt left
[21:44] <gfldex> Over on discord stevied asked how to donate money to the project. I tried to find a link on raku.org and didn't find any. I believe that to be wrong.

[22:20] <Geth> ¦ rakudo/rakuast: 735a6b1c81 | (Jonathan Worthington)++ | src/Raku/ast/pair.rakumod

[22:20] <Geth> ¦ rakudo/rakuast: Fix stray comma that broke :!a arg compilation

[22:20] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/735a6b1c81

[22:29] <moon-child> hmm funding comes from yas right?  Would that be the right place to go?

[22:39] <Geth> ¦ rakudo/rakuast: 5dc19c0e73 | (Jonathan Worthington)++ | src/core.c/Str.pm6

[22:39] <Geth> ¦ rakudo/rakuast: Align compile and runtime <...> semantics

[22:39] <Geth> ¦ rakudo/rakuast: 

[22:39] <Geth> ¦ rakudo/rakuast: In the current Rakudo compiler the quote words construct would either:

[22:39] <Geth> ¦ rakudo/rakuast: 

[22:39] <Geth> ¦ rakudo/rakuast: * If the string was known at compile time, use a HLL::Grammar provided

[22:39] <Geth> ¦ rakudo/rakuast:   function to do the word splitting, which was entirely conformant with

[22:39] <Geth> ¦ rakudo/rakuast:   spectest

[22:39] <Geth> ¦ rakudo/rakuast: <…commit message has 5 more lines…>

[22:39] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/5dc19c0e73

[23:08] *** linkable6 joined
[23:31] <Geth> ¦ nqp: MasterDuke17++ created pull request #758: Register `decont_u` as an op

[23:31] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/758

[23:35] <Geth> ¦ rakudo: MasterDuke17++ created pull request #4736: Eliminate p6decontrv ops caused by `*_u` ops

[23:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4736

