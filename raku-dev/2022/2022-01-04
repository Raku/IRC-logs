[00:07] *** reportable6 left
[00:10] *** reportable6 joined
[00:35] *** kjp left
[02:18] *** sourceable6 left
[02:18] *** bloatable6 left
[02:18] *** notable6 left
[02:18] *** bisectable6 left
[02:18] *** benchable6 left
[02:18] *** unicodable6 left
[02:18] *** greppable6 left
[02:18] *** squashable6 left
[02:18] *** linkable6 left
[02:18] *** statisfiable6 left
[02:18] *** quotable6 left
[02:18] *** shareable6 left
[02:18] *** tellable6 left
[02:18] *** evalable6 left
[02:18] *** coverable6 left
[02:18] *** nativecallable6 left
[02:18] *** releasable6 left
[02:18] *** reportable6 left
[02:18] *** committable6 left
[02:19] *** bisectable6 joined
[02:19] *** greppable6 joined
[02:19] *** quotable6 joined
[02:19] *** notable6 joined
[02:20] *** unicodable6 joined
[02:20] *** coverable6 joined
[02:20] *** shareable6 joined
[02:20] *** reportable6 joined
[03:19] *** bloatable6 joined
[03:19] *** evalable6 joined
[03:19] *** committable6 joined
[03:20] *** statisfiable6 joined
[03:21] *** linkable6 joined
[03:21] *** sourceable6 joined
[03:50] <Geth> ¦ rakudo: vrurg++ created pull request #4698: Additional fixes and improvements of smartmatch optimizations

[03:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4698

[04:05] <Geth> ¦ roast: vrurg++ created pull request #782: Adjust some smartmatch and given/when tests

[04:05] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/782

[04:08] *** kjp joined
[04:20] *** tellable6 joined
[04:20] *** nativecallable6 joined
[04:20] *** releasable6 joined
[04:20] *** benchable6 joined
[05:22] *** evalable6 left
[05:22] *** committable6 left
[05:22] *** tellable6 left
[05:22] *** nativecallable6 left
[05:22] *** greppable6 left
[05:22] *** benchable6 left
[05:22] *** bisectable6 left
[05:22] *** statisfiable6 left
[05:22] *** releasable6 left
[05:22] *** notable6 left
[05:22] *** sourceable6 left
[05:22] *** linkable6 left
[05:22] *** reportable6 left
[05:22] *** bloatable6 left
[05:22] *** shareable6 left
[05:22] *** quotable6 left
[05:22] *** unicodable6 left
[05:22] *** coverable6 left
[05:23] *** coverable6 joined
[05:23] *** unicodable6 joined
[05:23] *** bisectable6 joined
[05:24] *** committable6 joined
[05:24] *** quotable6 joined
[05:24] *** sourceable6 joined
[05:25] *** benchable6 joined
[05:25] *** evalable6 joined
[05:25] *** linkable6 joined
[05:25] *** releasable6 joined
[06:24] *** tellable6 joined
[06:25] *** notable6 joined
[06:25] *** nativecallable6 joined
[06:57] *** bartolin left
[06:59] *** bartolin joined
[07:21] *** squashable6 joined
[08:23] *** statisfiable6 joined
[08:24] *** greppable6 joined
[08:25] *** bloatable6 joined
[09:08] *** reportable6 joined
[09:25] *** shareable6 joined
[10:27] *** frost left
[10:33] <lizmat> Files=1351, Tests=117886, 321 wallclock secs (35.67 usr  9.76 sys + 4518.70 cusr 357.20 csys = 4921.33 CPU)

[10:37] *** frost joined
[10:40] <Geth> ¦ rakudo: c56c578cb4 | Moonchild++ | 3 files

[10:40] <Geth> ¦ rakudo: disallow creating Uni with out-of-range codepoints

[10:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c56c578cb4

[10:40] <Geth> ¦ rakudo: 6a265eab87 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 3 files

[10:40] <Geth> ¦ rakudo: Merge pull request #4511 from moon-chilled/master

[10:40] <Geth> ¦ rakudo: 

[10:40] <Geth> ¦ rakudo: Disallow creating Uni with out-of-range codepoints

[10:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6a265eab87

[11:24] <Geth> ¦ rakudo/rat-upgrade-class: 816 commits pushed by 36 authors

[11:24] <Geth> ¦ rakudo/rat-upgrade-class: review: https://github.com/rakudo/rakudo/compare/05ee91f0efa4...143de6c730a1

[11:35] *** sjn left
[11:48] <Geth> ¦ rakudo/rat-upgrade-class: fe73a61911 | (Elizabeth Mattijsen)++ | 2 files

[11:48] <Geth> ¦ rakudo/rat-upgrade-class: Rename to $*RAT-OVERFLOW

[11:48] <Geth> ¦ rakudo/rat-upgrade-class: review: https://github.com/rakudo/rakudo/commit/fe73a61911

[11:56] <Geth> ¦ rakudo: ef35db0624 | (Elizabeth Mattijsen)++ | src/core.c/Uni.pm6

[11:56] <Geth> ¦ rakudo: Fix off-by-one error

[11:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ef35db0624

[12:03] <Geth> ¦ rakudo: f737b0801c | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 5 files

[12:03] <Geth> ¦ rakudo: Introducing $*RAT-UPGRADE-CLASS (#4299)

[12:03] <Geth> ¦ rakudo: 

[12:03] <Geth> ¦ rakudo: Introducing $*RAT-OVERFLOW

[12:03] <Geth> ¦ rakudo: 

[12:03] <Geth> ¦ rakudo: This dynamic variable indicates the *class* in which an UPGRADE-RAT

[12:03] <Geth> ¦ rakudo: method will be called whenever a Rat has a denominator that does not

[12:03] <Geth> ¦ rakudo: fit in a 64bit native integer.

[12:03] <Geth> ¦ rakudo: <…commit message has 26 more lines…>

[12:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f737b0801c

[12:03] <lizmat> hmmm... I thought I'd fixed the title   :-(

[12:03] <lizmat> $*RAT-OVERFLOW  it is

[12:04] *** reportable6 left
[12:04] *** linkable6 left
[12:05] *** linkable6 joined
[12:06] *** reportable6 joined
[12:34] <sena_kun> I'm pretty sure https://github.com/rakudo/rakudo/pull/4447 can be merged.

[12:37] <Geth> ¦ rakudo: c9b2e0b4a7 | (Elizabeth Mattijsen)++ | src/core.c/Uni.pm6

[12:37] <Geth> ¦ rakudo: Revert "Fix off-by-one error"

[12:37] <Geth> ¦ rakudo: 

[12:37] <Geth> ¦ rakudo: This reverts commit ef35db062446b04a7171f70b028c7badd7154c23.

[12:37] <Geth> ¦ rakudo: 

[12:37] <Geth> ¦ rakudo: Turns out, the test was actually wrong, after consulting with

[12:37] <Geth> ¦ rakudo: our resident Unicode guru Samantha McVey.

[12:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c9b2e0b4a7

[12:39] <Geth> ¦ roast: f096695fa3 | (Elizabeth Mattijsen)++ | 2 files

[12:39] <Geth> ¦ roast: Fix problem in test generation

[12:39] <Geth> ¦ roast: 

[12:39] <Geth> ¦ roast: 0xd800 is *not* a surrogate.  Didn't run the generation script again

[12:39] <Geth> ¦ roast: as that depends on now too new Unicode data files.

[12:39] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/f096695fa3

[12:40] <Geth> ¦ rakudo: 36af7d0efd | Altai-man++ (committed using GitHub Web editor) | t/05-messages/03-errors.t

[12:40] <Geth> ¦ rakudo: Add two tests for proper error messages (#4447)

[12:40] <Geth> ¦ rakudo: 

[12:40] <Geth> ¦ rakudo: One is for printing something to a close handle.

[12:40] <Geth> ¦ rakudo: Two is for a weird case of adverbing.

[12:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/36af7d0efd

[12:41] *** linkable6 left
[12:41] <moon-child> clearly, I never make off-by-one errors :) 

[12:44] <lizmat> moon-child++

[12:51] <Geth> ¦ rakudo: 4b2fc66fce | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/Cool.pm6

[12:51] <Geth> ¦ rakudo: Add Cool.Order "coercer" (#4473)

[12:51] <Geth> ¦ rakudo: 

[12:51] <Geth> ¦ rakudo: Convert a Cool value to the associated Order enum:

[12:51] <Geth> ¦ rakudo: - < 0  -> Less

[12:51] <Geth> ¦ rakudo: -   0  -> Same

[12:51] <Geth> ¦ rakudo: - > 0  -> More

[12:51] <Geth> ¦ rakudo: 

[12:51] <Geth> ¦ rakudo: The only other way to currently do this, is by basically writing the

[12:51] <Geth> ¦ rakudo: ORDER (implementation-detail) subroutine again, or just do a call to

[12:51] <Geth> ¦ rakudo: ORDER.  This allows syntactic sugar to not have to do it like that.

[12:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4b2fc66fce

[12:57] <MasterDuke> lizmat: while you're on a roll, https://www.nntp.perl.org/group/perl.perl6.users/2021/12/msg10343.html seems sort of up your alley

[12:58] <moon-child> hmm.  Str case should obviously be handled.  Float is harder.  Should it truncate and then divide, or divide and then truncate?

[12:59] <MasterDuke> i haven't looked into it enough to know, perhaps the answer is that current situation is correct

[13:05] *** sjn joined
[13:06] <lizmat> yeah, I'll wait for someone to make an issue / PR for that  :-)

[13:07] <lizmat> I'm just going through stale PRs atm

[13:27] <Geth> ¦ rakudo/sparse-array-raku: 687 commits pushed by 30 authors

[13:27] <Geth> ¦ rakudo/sparse-array-raku: review: https://github.com/rakudo/rakudo/compare/484baa6a57f2...3801f0375fac

[13:40] *** frost left
[13:42] <Geth> ¦ rakudo/master: 15 commits pushed by (Jonathan Worthington)++

[13:42] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/4b2fc66fce2e...d4fde77d2a08

[13:43] *** linkable6 joined
[13:43] <Geth> ¦ rakudo: 026c51a045 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/Pair.pm6

[13:43] <Geth> ¦ rakudo: Fix the behaviour of Pair ~~ Pair (#4671)

[13:43] <Geth> ¦ rakudo: 

[13:43] <Geth> ¦ rakudo: Apparently, this was borked since d8f7e8b8d6ea25b about 6 years ago.

[13:43] <Geth> ¦ rakudo: 

[13:43] <Geth> ¦ rakudo: See discussion at https://logs.liz.nl/moarvm/2021-12-15.html#16:32-0003

[13:43] <Geth> ¦ rakudo: 

[13:43] <Geth> ¦ rakudo: This breaks test #177 of t/spec/S02-types/pair.t

[13:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/026c51a045

[13:44] *** linkable6 left
[13:45] *** linkable6 joined
[13:46] *** Geth left
[13:46] *** Geth joined
[13:50] <lizmat> hmmm... looks like IRC::Client ping / msg handling still needs some tweaking  -(

[13:54] <Geth> ¦ roast: 0a5c36a90e | (Elizabeth Mattijsen)++ | S02-types/pair.t

[13:54] <Geth> ¦ roast: Adapt to correct behaviour of Pair.ACCEPTS(Pair)

[13:54] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/0a5c36a90e

[13:57] *** Geth left
[13:57] *** Geth joined
[14:01] *** Geth left
[14:01] *** Geth joined
[14:05] *** Geth left
[14:05] *** Geth joined
[14:10] *** Geth left
[14:10] *** Geth joined
[14:14] *** Geth left
[14:14] *** Geth joined
[15:30] <Geth> ¦ rakudo: 586f2f3cc7 | (Elizabeth Mattijsen)++ | src/core.c/Complex.pm6

[15:30] <Geth> ¦ rakudo: Make Complex.new about 30x as fast

[15:30] <Geth> ¦ rakudo: 

[15:30] <Geth> ¦ rakudo: Turned out, !SET-SELF was not inlineable.  By doing the dirty work

[15:30] <Geth> ¦ rakudo: inside .new (and some new candidates), it *is* all inlineable and

[15:30] <Geth> ¦ rakudo: that in turn, makes things a *lot* faster!

[15:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/586f2f3cc7

[15:36] <MasterDuke> aren't methods with conversion types a lot faster now after new-disp? could those last two multi's be one with Num:D(Real:D)?

[15:42] <nine> I wonder why SET-SELF is not inlineable?

[15:45] * lizmat scrolls back

[15:45] <lizmat> target has a :noinline instruction - ins: sp_assertparamcheck

[15:59] <MasterDuke> m: multi foo(Num:D(Real:D) $a = 0) { $a + 2e1 }; my $b = 1_000_000.rand; say foo($b)    # didn't expect this

[15:59] <camelia> rakudo-moar 586f2f3cc: OUTPUT: «Ambiguous call to 'foo(Num)'; these signatures all match:␤  (Num:D(Real:D):D $a = 0)␤  (Num:D(Real:D):D $a = 0)␤  in block <unit> at <tmp> line 1␤␤»

[16:00] <Geth> ¦ rakudo: 4f3ff58095 | (Elizabeth Mattijsen)++ | src/core.c/IO/Path.pm6

[16:00] <Geth> ¦ rakudo: Scrape off 100 bytes from IO::Path!SET-SELF

[16:00] <Geth> ¦ rakudo: 

[16:00] <Geth> ¦ rakudo: Sadly, not enough to get it inlined just yet

[16:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4f3ff58095

[16:22] <Geth> ¦ rakudo: efdc1a9e85 | (Elizabeth Mattijsen)++ | src/core.c/IO/Path.pm6

[16:22] <Geth> ¦ rakudo: Get IO::Path!SET-SELF below inlining limit

[16:22] <Geth> ¦ rakudo: 

[16:22] <Geth> ¦ rakudo: Sadly, that is not making things a lot faster :-(

[16:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/efdc1a9e85

[16:35] <[Tux]> Rakudo v2021.12-62-gefdc1a9e8 (v6.d) on MoarVM 2021.12-11-g39e9a6be0

[16:35] <[Tux]> csv-test-xs-20      0.414 -  0.423

[16:35] <[Tux]> csv-ip5xs           0.860 -  0.875

[16:35] <[Tux]> test-t --race       0.967 -  0.976

[16:35] <[Tux]> test-t              1.668 -  1.694

[16:35] <[Tux]> csv-parser          4.109 -  4.246

[16:35] <[Tux]> csv-ip5xs-20        5.337 -  5.361

[16:35] <[Tux]> test                6.871 -  6.975

[16:36] <[Tux]> test-t-20 --race    7.244 -  7.407

[16:36] <[Tux]> test-t-20          24.532 - 24.626

[16:53] <Geth> ¦ rakudo: 03065e2967 | (Martin Kealey)++ (committed using GitHub Web editor) | src/core.c/Complex.pm6

[16:53] <Geth> ¦ rakudo: $x ** ±Inf is sometimes 0 (#4226)

[16:53] <Geth> ¦ rakudo: 

[16:53] <Geth> ¦ rakudo: inside_unit_circle ** Inf == 0

[16:53] <Geth> ¦ rakudo: outside_unit_circle ** -Inf == 0

[16:53] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/03065e2967

[16:54] *** linkable6 left
[16:54] *** linkable6 joined
[16:57] *** Geth left
[16:57] *** Geth joined
[18:07] *** reportable6 left
[20:10] *** reportable6 joined
[20:35] *** [Coke] left
[20:39] *** [Coke] joined
[22:13] *** sena_kun left
[22:15] *** sena_kun joined
[22:55] <Geth> ¦ rakudo: 2a3f61ef14 | (Vadim Belman)++ | 2 files

[22:55] <Geth> ¦ rakudo: Additional fixes and improvements of smartmatch optimizations

[22:55] <Geth> ¦ rakudo: 

[22:55] <Geth> ¦ rakudo: - Better detection of invocations, method calls wrapped into `hllize`

[22:55] <Geth> ¦ rakudo:   are considered now.

[22:55] <Geth> ¦ rakudo: - Better detection of possible return value type for an AST node.

[22:55] <Geth> ¦ rakudo: - As a result of the above two items, smartmatches with method calls can

[22:55] <Geth> ¦ rakudo:   now be optimized too.

[22:55] <Geth> ¦ rakudo: <…commit message has 15 more lines…>

[22:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2a3f61ef14

[22:55] <Geth> ¦ rakudo: 7b1653bbf9 | (Vadim Belman)++ (committed using GitHub Web editor) | 2 files

[22:55] <Geth> ¦ rakudo: Merge pull request #4698 from vrurg/problem-solving-297-1

[22:55] <Geth> ¦ rakudo: 

[22:55] <Geth> ¦ rakudo: Additional fixes and improvements of smartmatch optimizations

[22:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7b1653bbf9

[22:55] <Geth> ¦ roast/master: 6 commits pushed by (Vadim Belman)++

[22:55] <Geth> ¦ roast/master: 6172fdb8ba | Additional tests for given/when with explicit condition

[22:55] <Geth> ¦ roast/master: 1982c1d13e | Message typo fix

[22:55] <Geth> ¦ roast/master: e98ee42da2 | Added tests for negated smartmatch

[22:55] <Geth> ¦ roast/master: 45009cdf14 | Made test more robust

[22:56] <Geth> ¦ roast/master: 1a6ffb7b6b | Removed a redundant test

[22:56] <Geth> ¦ roast/master: 8a9f5a4ca4 | Merge pull request #782 from vrurg/problem-solving-297-1

[22:56] <Geth> ¦ roast/master: review: https://github.com/Raku/roast/compare/0a5c36a90e0f...8a9f5a4ca4f9

[23:14] <Geth> ¦ rakudo: 1b5c0b9516 | (Daniel Green)++ | src/vm/moar/runner/main.c

[23:14] <Geth> ¦ rakudo: Don't use MVM_free if we didn't use MVM_malloc

[23:14] <Geth> ¦ rakudo: 

[23:14] <Geth> ¦ rakudo: Since we're likely about to use a new allocator in MoarVM for the MVM_*

[23:14] <Geth> ¦ rakudo: allocation functions, they have to match up.

[23:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1b5c0b9516

