[00:08] *** reportable6 left
[00:09] *** reportable6 joined
[00:21] *** Kaiepi left
[00:47] *** Kaiepi joined
[01:11] *** frost joined
[02:27] *** sourceable6 left
[02:27] *** greppable6 left
[02:27] *** committable6 left
[02:27] *** unicodable6 left
[02:27] *** benchable6 left
[02:27] *** bisectable6 left
[02:27] *** releasable6 left
[02:27] *** statisfiable6 left
[02:27] *** reportable6 left
[02:27] *** quotable6 left
[02:27] *** linkable6 left
[02:27] *** coverable6 left
[02:27] *** evalable6 left
[02:27] *** notable6 left
[02:27] *** bloatable6 left
[02:27] *** shareable6 left
[02:27] *** nativecallable6 left
[02:27] *** releasable6 joined
[02:27] *** benchable6 joined
[02:27] *** nativecallable6 joined
[02:27] *** quotable6 joined
[02:28] *** evalable6 joined
[02:28] *** greppable6 joined
[02:28] *** sourceable6 joined
[02:28] *** statisfiable6 joined
[02:28] *** bisectable6 joined
[02:28] *** coverable6 joined
[02:28] *** notable6 joined
[02:28] *** reportable6 joined
[02:29] *** linkable6 joined
[02:29] *** committable6 joined
[02:30] *** shareable6 joined
[02:30] *** bloatable6 joined
[02:30] *** unicodable6 joined
[03:30] *** evalable6 left
[03:30] *** linkable6 left
[03:32] *** linkable6 joined
[03:32] *** evalable6 joined
[05:29] *** linkable6 left
[05:29] *** evalable6 left
[05:30] *** linkable6 joined
[05:31] *** evalable6 joined
[06:08] *** reportable6 left
[06:08] *** reportable6 joined
[07:08] *** benchable6 left
[07:08] *** quotable6 left
[07:08] *** releasable6 left
[07:08] *** nativecallable6 left
[07:08] *** shareable6 left
[07:08] *** reportable6 left
[07:08] *** evalable6 left
[07:08] *** bloatable6 left
[07:08] *** greppable6 left
[07:08] *** linkable6 left
[07:08] *** sourceable6 left
[07:08] *** bisectable6 left
[07:08] *** unicodable6 left
[07:08] *** coverable6 left
[07:08] *** committable6 left
[07:09] *** greppable6 joined
[07:09] *** linkable6 joined
[07:09] *** shareable6 joined
[07:10] *** bisectable6 joined
[07:10] *** bloatable6 joined
[07:10] *** reportable6 joined
[07:10] *** benchable6 joined
[07:11] *** sourceable6 joined
[07:11] *** unicodable6 joined
[07:11] *** nativecallable6 joined
[07:11] *** committable6 joined
[07:11] *** quotable6 joined
[07:11] *** coverable6 joined
[07:11] *** releasable6 joined
[07:12] *** evalable6 joined
[08:18] *** committable6 left
[08:18] *** evalable6 left
[08:18] *** coverable6 left
[08:18] *** nativecallable6 left
[08:18] *** benchable6 left
[08:18] *** releasable6 left
[08:18] *** quotable6 left
[08:18] *** unicodable6 left
[08:18] *** sourceable6 left
[08:18] *** bisectable6 left
[08:18] *** statisfiable6 left
[08:18] *** bloatable6 left
[08:18] *** linkable6 left
[08:18] *** notable6 left
[08:18] *** greppable6 left
[08:18] *** reportable6 left
[08:18] *** shareable6 left
[08:19] *** benchable6 joined
[08:19] *** greppable6 joined
[08:19] *** shareable6 joined
[08:19] <lizmat> Files=1352, Tests=117130, 287 wallclock secs (35.03 usr  9.43 sys + 4035.40 cusr 315.99 csys = 4395.85 CPU)

[08:19] *** quotable6 joined
[08:19] *** notable6 joined
[08:20] *** sourceable6 joined
[08:20] *** committable6 joined
[08:20] *** evalable6 joined
[08:20] *** linkable6 joined
[08:20] *** statisfiable6 joined
[08:20] *** nativecallable6 joined
[08:20] *** bisectable6 joined
[08:21] *** coverable6 joined
[08:21] *** unicodable6 joined
[08:21] *** releasable6 joined
[08:21] <lizmat> wasn't that low since Feb 22  and now there's more tests

[08:21] *** reportable6 joined
[08:22] <lizmat> I guess some of the work on Actions.nqp paid off a little bit at least

[08:22] *** bloatable6 joined
[08:34] <Geth> ¦ rakudo: 76035de096 | (Antonio Juan Querol)++ (committed using GitHub Web editor) | 2 files

[08:34] <Geth> ¦ rakudo: Add INSIDE_EMACS environment variable (#4842)

[08:34] <Geth> ¦ rakudo: 

[08:34] <Geth> ¦ rakudo: * Do not use line editors while inside Emacs

[08:34] <Geth> ¦ rakudo: 

[08:34] <Geth> ¦ rakudo: * add docs

[08:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/76035de096

[08:35] *** linkable6 left
[08:38] *** linkable6 joined
[09:04] <Geth> ¦ rakudo/rakuast: 05d878fb12 | (Stefan Seifert)++ | src/vm/moar/dispatchers.nqp

[09:04] <Geth> ¦ rakudo/rakuast: Fix compilation of proxy readers

[09:04] <Geth> ¦ rakudo/rakuast: 

[09:04] <Geth> ¦ rakudo/rakuast: Failed because there's no stage "optimize" yet in the RakuAST based compiler.

[09:04] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/05d878fb12

[09:17] <Geth> ¦ rakudo/CURS.candidates: 53a6ef198b | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository.pm6

[09:17] <Geth> ¦ rakudo/CURS.candidates: Smalle CUR.repo-chain optimization

[09:17] <Geth> ¦ rakudo/CURS.candidates: review: https://github.com/rakudo/rakudo/commit/53a6ef198b

[09:17] <lizmat> oops, wrong branch

[09:18] <Geth> ¦ rakudo: 687b702dbc | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository.pm6

[09:18] <Geth> ¦ rakudo: Small CUR.repo-chain optimization

[09:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/687b702dbc

[09:21] <nine> Oh, a colonpair is not a pair of colons i.e. :: but a Pair constructed with colon syntax i.e. :$foo

[09:42] <lizmat> yup  , well in Raku grammar speak yes

[10:00] *** linkable6 left
[10:00] *** evalable6 left
[10:01] *** linkable6 joined
[10:01] *** evalable6 joined
[10:30] *** frost left
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:25] <Geth> ¦ rakudo/rakuast: 2e01452a28 | (Jonathan Worthington)++ | src/Raku/Actions.nqp

[12:25] <Geth> ¦ rakudo/rakuast: Have package body consistently be a block

[12:25] <Geth> ¦ rakudo/rakuast: 

[12:25] <Geth> ¦ rakudo/rakuast: It's typed that way already in the AST definition, although we don't

[12:25] <Geth> ¦ rakudo/rakuast: yet enforce these type constraints. We could in principle arrange for

[12:25] <Geth> ¦ rakudo/rakuast: something a bit like RakuAST::Blorst (that doesn't apply here since it's

[12:25] <Geth> ¦ rakudo/rakuast: a block or statement list). However, it seems more expedient to define a

[12:25] <Geth> ¦ rakudo/rakuast: unit package (or unit sub main) as sugar for a package or sub with a

[12:25] <Geth> ¦ rakudo/rakuast: block whose content extends to the end of the current file.

[12:25] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/2e01452a28

[12:34] <SmokeMachine> Hi! does anyone have any idea of why https://gist.github.com/FCO/415e4de3ac20fbab7496a193af59a254 is giving me `===SORRY!===\nRequired named parameter 'refinee' not passed`? I'm using the default SubsetHOW for testing, and if I replace submodel with subset it works. Is that a bug?

[12:54] <SmokeMachine> it seems to be using `pkg_create_mo` instead of `create_subset`...

[13:09] <Geth> ¦ rakudo/rakuast: c93096611c | (Jonathan Worthington)++ | 4 files

[13:09] <Geth> ¦ rakudo/rakuast: Implement =finish support in RakuAST

[13:09] <Geth> ¦ rakudo/rakuast: 

[13:09] <Geth> ¦ rakudo/rakuast: And use it in the RakuAST-based compiler. This matches the current

[13:09] <Geth> ¦ rakudo/rakuast: implementation's behavior of giving Mu if there's no finish content,

[13:09] <Geth> ¦ rakudo/rakuast: although it'd seem at least a warning could be nice (could be done by

[13:09] <Geth> ¦ rakudo/rakuast: implementing RakuAST::CheckTime in the Finish code).

[13:09] <Geth> ¦ rakudo/rakuast: 

[13:09] <Geth> ¦ rakudo/rakuast: <…commit message has 5 more lines…>

[13:09] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/c93096611c

[13:16] <Geth> ¦ rakudo/CURS.candidates: 0f33b87e29 | (Elizabeth Mattijsen)++ | lib/CompUnit/Repository/Staging.rakumod

[13:16] <Geth> ¦ rakudo/CURS.candidates: Add :replace attribute to CURS

[13:16] <Geth> ¦ rakudo/CURS.candidates: 

[13:16] <Geth> ¦ rakudo/CURS.candidates: When specified, the CURS will completely replace the parent CURI

[13:16] <Geth> ¦ rakudo/CURS.candidates: in both the registration by name, as well as in the $*REPO chain.

[13:16] <Geth> ¦ rakudo/CURS.candidates: 

[13:16] <Geth> ¦ rakudo/CURS.candidates: Calling .self-destruct will now also restore the original CURI by

[13:16] <Geth> ¦ rakudo/CURS.candidates: name and in the $*REPO chain.

[13:16] <Geth> ¦ rakudo/CURS.candidates: review: https://github.com/rakudo/rakudo/commit/0f33b87e29

[13:45] *** evalable6 left
[13:45] *** linkable6 left
[13:47] *** linkable6 joined
[13:48] *** evalable6 joined
[15:03] *** discord-raku-bot left
[15:04] *** discord-raku-bot joined
[15:40] <SmokeMachine> Could some one help me to understand that? `type_declarator:sym<subset>` uses `<sym>` to match the first token, so how should it match other stuff when `package EXPORTHOW { package DECLARE { constant something_else = Metamodel::SubsetHOW } }` is set? And I can't see any mention of `$*LANG.how` there... or does `<sym>` changes accordingly to `$*LANG.how`?

[15:41] <SmokeMachine> I'm trying to find out why this (https://gist.github.com/FCO/415e4de3ac20fbab7496a193af59a254) is giving `===SORRY!===\nRequired named parameter 'refinee' not passed`

[15:43] <SmokeMachine> or is it being parsed somewhere else and that the reason for the error?

[15:43] *** sena_kun left
[15:44] *** sena_kun joined
[15:52] <Geth> ¦ rakudo: 94f2ba5d40 | Coke++ | docs/line-editor.pod

[15:52] <Geth> ¦ rakudo: typo

[15:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/94f2ba5d40

[16:15] <SmokeMachine> I can't find where `something_else` is being matched when I do `package EXPORTHOW { package DECLARE { constant something_else = Metamodel::SubsetHOW } }` but it's being parsed (but it's not passing a `refinee` named argument to Metamodel::SubsetHOW.new_type...)

[16:30] *** sena_kun left
[16:31] *** sena_kun joined
[16:54] *** sena_kun left
[16:55] *** sena_kun joined
[17:57] <Xliff> https://github.com/Xliff/raku-GWeather (latest Project!)

[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[18:20] <lizmat> Xliff++

[19:03] *** sena_kun left
[19:04] *** sena_kun joined
[20:32] *** evalable6 left
[20:32] *** linkable6 left
[20:33] *** linkable6 joined
[20:34] *** [Coke]_ joined
[20:35] *** evalable6 joined
[20:35] *** [Coke] left
[20:52] <Geth> ¦ rakudo/rakuast: e4944b8762 | (Stefan Seifert)++ | 5 files

[20:52] <Geth> ¦ rakudo/rakuast: Support package variables

[20:52] <Geth> ¦ rakudo/rakuast: 

[20:52] <Geth> ¦ rakudo/rakuast: Introduces RakuAST::Var::Package for representing access to a package variable.

[20:52] <Geth> ¦ rakudo/rakuast: For declaration to work, we need $?PACKAGE to actually contain the package we

[20:52] <Geth> ¦ rakudo/rakuast: are in. Then packages need to actually add the declarations to their body

[20:52] <Geth> ¦ rakudo/rakuast: block.

[20:52] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/e4944b8762

[21:04] *** vrurg_ is now known as vrurg

[21:16] <Geth> ¦ problem-solving/docs-website: 8b951c04cb | (Daniel Sockwell)++ | solutions/documentation/new-documentation-frontends.md

[21:16] <Geth> ¦ problem-solving/docs-website: Solution for Raku/doc/issues/1246

[21:16] <Geth> ¦ problem-solving/docs-website: 

[21:16] <Geth> ¦ problem-solving/docs-website: This PR proposes a solution to Raku/doc/issues/1246.  (I now realize

[21:16] <Geth> ¦ problem-solving/docs-website: that issue was in the doc repo rather than the problem-solving one and

[21:16] <Geth> ¦ problem-solving/docs-website: thus _technically_ I should open an issue in this repo and discuss the

[21:16] <Geth> ¦ problem-solving/docs-website: matter here before opening a PR.  Since that issue has been active for

[21:16] <Geth> ¦ problem-solving/docs-website: 5 years and has generated the a similar discussion as it would have as

[21:16] <Geth> ¦ problem-solving/docs-website: <…commit message has 12 more lines…>

[21:16] <Geth> ¦ problem-solving/docs-website: review: https://github.com/Raku/problem-solving/commit/8b951c04cb

[21:19] <Geth> ¦ problem-solving: codesections++ created pull request #320: Solution for Raku/doc/issues/1246

[21:19] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/pull/320

[21:27] <Geth> ¦ problem-solving/docs-website: 2147c097b0 | (Daniel Sockwell)++ | solutions/documentation/new-documentation-frontends.md

[21:27] <Geth> ¦ problem-solving/docs-website: fix typo

[21:27] <Geth> ¦ problem-solving/docs-website: review: https://github.com/Raku/problem-solving/commit/2147c097b0

[21:28] *** [Coke]_ is now known as [Coke]

