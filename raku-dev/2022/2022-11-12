[00:06] *** reportable6 left
[00:08] *** reportable6 joined
[01:09] *** Kaiepi left
[02:48] *** sortiz left
[03:35] <Geth> ¦ rakudo: vrurg++ created pull request #5101: Fix smartmatch in EVAL regression

[03:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5101

[04:04] <Geth> ¦ rakudo: 0a9e201447 | (Vadim Belman)++ | src/Perl6/Optimizer.nqp

[04:04] <Geth> ¦ rakudo: Fix Operand's `can-be` method

[04:04] <Geth> ¦ rakudo: 

[04:04] <Geth> ¦ rakudo: It was a stupid error of doing one-way type check because if, say, we

[04:04] <Geth> ¦ rakudo: ask if a `Real`-typed entity can be `Int` then the answer is 'yes'

[04:04] <Geth> ¦ rakudo: because eventually it can. But the same applies to an `IntStr`-typed

[04:04] <Geth> ¦ rakudo: entity because, in fact, it is already `Int`.

[04:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0a9e201447

[04:05] <Geth> ¦ rakudo: 2702b001a5 | (Vadim Belman)++ | src/Perl6/Optimizer.nqp

[04:05] <Geth> ¦ rakudo: Fix wrongful check for `Pair` instead of `Associative`

[04:05] <Geth> ¦ rakudo: 

[04:05] <Geth> ¦ rakudo: Fixes a regression discussed on #raku-dev

[04:05] <Geth> ¦ rakudo: https://irclogs.raku.org/raku-dev/2022-11-11.html#08:39

[04:05] <Geth> ¦ rakudo: 

[04:05] <Geth> ¦ rakudo:     my %h = a => 1, b => 2; EVAL("say %h ~~ :2b");

[04:05] <Geth> ¦ rakudo:     # No such method 'b' for invocant of type 'Hash'

[04:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2702b001a5

[04:05] <Geth> ¦ rakudo: 5e1f092f51 | (Vadim Belman)++ (committed using GitHub Web editor) | src/Perl6/Optimizer.nqp

[04:05] <Geth> ¦ rakudo: Merge pull request #5101 from vrurg/fix-sm-EVAL-regression

[04:05] <Geth> ¦ rakudo: 

[04:05] <Geth> ¦ rakudo: Fix smartmatch in EVAL regression

[04:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5e1f092f51

[05:57] *** CIAvash left
[05:57] *** AlexDaniel left
[06:00] *** AlexDaniel joined
[06:00] *** CIAvash joined
[06:07] *** reportable6 left
[06:09] *** reportable6 joined
[06:53] *** Kaiepi joined
[06:59] *** Kaipei joined
[07:02] *** Kaiepi left
[10:19] *** sena_kun joined
[10:33] *** linkable6 left
[10:35] *** linkable6 joined
[11:03] <Geth> ¦ rakudo/rakuast: 6 commits pushed by (Stefan Seifert)++

[11:03] <Geth> ¦ rakudo/rakuast: 676aa173fb | RakuAST: give <unit> a proper RakuAST::Block object

[11:03] <Geth> ¦ rakudo/rakuast: 9ab08d3ba6 | RakuAST: move settings loading code to pre_deserialize

[11:03] <Geth> ¦ rakudo/rakuast: b0f61734fa | RakuAST: don't generate fixups precompiling BEGIN time EVAL

[11:03] <Geth> ¦ rakudo/rakuast: 61b01140fa | RakuAST: Share context between outer and inner CompUnits

[11:03] <Geth> ¦ rakudo/rakuast: a02e49917f | RakuAST: Share necessary data between inner and outer resolver

[11:03] <Geth> ¦ rakudo/rakuast: 1ced02359c | RakuAST: ensure we always un-stub clonse of dynamically compiled code objects

[11:03] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/compare/e27af06629f6...1ced02359c2e

[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:55] *** epony left
[14:00] *** epony joined
[14:10] *** codesections joined
[14:12] *** epony left
[14:14] *** epony joined
[14:21] *** codesections left
[14:30] *** codesections joined
[15:36] <Geth> ¦ rakudo/rakuast: 59943271c2 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[15:36] <Geth> ¦ rakudo/rakuast: RakuAST: generate accessors for lexical class variables $.foo

[15:36] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/59943271c2

[16:37] *** evalable6 left
[16:37] *** linkable6 left
[16:38] *** evalable6 joined
[16:38] *** linkable6 joined
[16:46] *** Kaipei left
[16:57] *** sena_kun left
[16:59] *** sena_kun joined
[18:06] *** reportable6 left
[18:09] *** reportable6 joined
[18:21] *** Kaipei joined
[19:55] *** Kaipei left
[20:46] *** Kaipei joined
[21:55] *** epony left
[22:22] *** epony joined
[22:32] *** linkable6 left
[22:34] *** linkable6 joined
[22:44] *** Kaipei left
[22:56] *** sena_kun left
