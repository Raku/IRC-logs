[00:07] *** reportable6 left
[01:09] *** reportable6 joined
[02:15] *** unicodable6 left
[02:15] *** benchable6 left
[02:15] *** committable6 left
[02:15] *** releasable6 left
[02:15] *** greppable6 left
[02:15] *** reportable6 left
[02:15] *** sourceable6 left
[02:15] *** coverable6 left
[02:15] *** evalable6 left
[02:15] *** nativecallable6 left
[02:15] *** bloatable6 left
[02:15] *** bisectable6 left
[02:15] *** quotable6 left
[02:15] *** tellable6 left
[02:15] *** statisfiable6 left
[02:15] *** notable6 left
[02:15] *** squashable6 left
[02:15] *** shareable6 left
[02:16] *** tellable6 joined
[02:16] *** unicodable6 joined
[02:16] *** benchable6 joined
[02:17] *** reportable6 joined
[02:18] *** squashable6 joined
[02:18] *** statisfiable6 joined
[02:18] *** bisectable6 joined
[02:18] *** releasable6 joined
[03:16] *** sourceable6 joined
[03:17] *** greppable6 joined
[03:17] *** bloatable6 joined
[03:18] *** notable6 joined
[03:26] <Geth> ¦ rakudo: vrurg++ created pull request #4721: Implement smartmatch as a dispatcher

[03:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4721

[04:15] *** evalable6 joined
[04:16] *** shareable6 joined
[04:18] *** coverable6 joined
[05:16] *** nativecallable6 joined
[06:08] *** reportable6 left
[06:11] *** reportable6 joined
[06:18] *** committable6 joined
[06:35] *** linkable6 joined
[07:06] *** squashable6 left
[07:09] *** squashable6 joined
[07:16] *** quotable6 joined
[08:17] *** squashable6 left
[08:19] *** squashable6 joined
[08:20] *** squashable6 left
[08:50] <Geth> ¦ nqp/fix_unsigned_for_merge: 6 commits pushed by (Elizabeth Mattijsen)++, niner++, (Stéphane Payrard)++, (Stefan Seifert)++

[08:50] <Geth> ¦ nqp/fix_unsigned_for_merge: 5e5502ecb1 | Bump MoarVM to get the latest goodies

[08:50] <Geth> ¦ nqp/fix_unsigned_for_merge: 609d071659 | Merge pull request #756 from Raku/fix_unsigned_for_merge

[08:50] <Geth> ¦ nqp/fix_unsigned_for_merge: 4aaf06e204 | sethllconfig doc

[08:50] <Geth> ¦ nqp/fix_unsigned_for_merge: aeaab3153c | fix up link for hll MoarVM testfile

[08:50] <Geth> ¦ nqp/fix_unsigned_for_merge: 3c9500e7d0 | Use uint64 registers for unsigned arguments in dispatch

[08:50] <Geth> ¦ nqp/fix_unsigned_for_merge: 4cd196ec30 | Rebootstrap to get proper handling of unsigned args into stage0

[08:50] <Geth> ¦ nqp/fix_unsigned_for_merge: review: https://github.com/Raku/nqp/compare/42adc9185cda...4cd196ec308e

[08:53] <Geth> ¦ nqp: niner++ created pull request #757: Fix handling of unsigned native integers

[08:53] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/757

[09:31] *** squashable6 joined
[11:14] <gfldex> Signature.new and Parameternew are not in roast. Are those implementation details or is this an ENOSPEC?

[11:18] <gfldex> I'm asking because Template::Classic takes a Signature-object in a function you have to call all the time and without speccing Signature.new one has to EVAL.

[11:19] <nine> m: say :($a, $b).^name

[11:19] <camelia> rakudo-moar fb909efce: OUTPUT: «Signature␤»

[11:21] <nine> I guess it's just ENOSPEC

[11:27] <moon-child> has anyone tried checking a code coverage report of compiler/core on spectest?

[12:07] *** reportable6 left
[12:10] <lizmat> m: class A { has Int:D $.a is rw = 0 }; my $a = A.new; $a.a = True; dd $a   # I understand why, but it feels meh

[12:10] <camelia> rakudo-moar fb909efce: OUTPUT: «A $a = A.new(a => Bool::True)␤»

[12:14] <Voldenet> aaaa

[12:14] <Voldenet> oops

[13:08] <Geth> ¦ rakudo/fix_unsigned_for_merge: 11 commits pushed by (Stefan Seifert)++

[13:08] <Geth> ¦ rakudo/fix_unsigned_for_merge: review: https://github.com/rakudo/rakudo/compare/19be217ffdbb...550c1c9e5d70

[14:08] *** reportable6 joined
[14:39] *** nebuchad` left
[15:46] <ugexe> zef seems to be randomly getting a "No such private method 'SET-SELF' on Map" error in CI fairly often

[15:47] <ugexe> https://app.circleci.com/pipelines/github/ugexe/zef/330/workflows/9f45e796-6d34-4352-8a20-100be3a013c2/jobs/316?invite=true#step-103-119

[15:47] <ugexe> something like 20% of the CI runs give this error

[15:55] <lizmat> line in question: with try Zef::Distribution.new(|%($meta)) -> $dist {

[15:55] <lizmat> so, is the exception leaking out of the try ?

[15:55] <ugexe> i dont think that error should be occuring at all

[17:46] *** Kaiepi left
[18:01] *** Kaiepi joined
[18:07] *** reportable6 left
[19:00] <releasable6> Next release in ≈4 days and ≈23 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[19:07] *** evalable6 left
[19:07] *** linkable6 left
[19:09] *** evalable6 joined
[19:10] *** linkable6 joined
[19:15] *** discord-raku-bot left
[19:15] *** discord-raku-bot joined
[19:20] *** discord-raku-bot left
[19:20] *** discord-raku-bot joined
[19:21] *** Kaiepi left
[19:22] *** Kaiepi joined
[19:52] *** discord-raku-bot left
[19:52] *** discord-raku-bot joined
[19:56] *** discord-raku-bot left
[19:57] *** discord-raku-bot joined
[20:00] <Geth> ¦ nqp: 22e80c33fb | (Stéphane Payrard)++ | .github/workflows/markdown-link-checker.yml

[20:01] <Geth> ¦ nqp: add action to check up markdown liinls

[20:01] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/22e80c33fb

[20:01] <Geth> ¦ nqp: c72ed7a5bc | (Stéphane Payrard)++ | 45 files

[20:01] <Geth> ¦ nqp: Merge branch 'master' of https://github.com/Raku/nqp

[20:01] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/c72ed7a5bc

[20:04] <cognominal> Oops how come viscose pushed that without asking

[20:06] <lizmat> that's indeed quite an oops  :-(

[20:08] <lizmat> in light of recent mixups, /me pages nine

[20:08] <Geth> ¦ rakudo: gfldex++ created pull request #4723: implement sub hyper/race

[20:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4723

[20:09] <cognominal> I want to experiment with actions but I was supposed to to that on my local copy.

[20:13] <japhb> Cairo test failure: https://gist.github.com/japhb/efb7da856b0694f1b440b02b57f10864

[20:14] <lizmat> could your gist raku --ll-exception t/text.t  ?

[20:16] <japhb> lizmat: give me a sec, I'll see what I can manage

[20:18] *** discord-raku-bot left
[20:18] *** discord-raku-bot joined
[20:21] <japhb> lizmat: Added to the gist.

[20:22] *** gfldex left
[20:22] *** gfldex joined
[20:22] <lizmat> japhb: wow: that does not rung any bell with me...  feels more like something in #moarvm

[20:22] <japhb> Yeah, could be, trying over there

[20:23] *** discord-raku-bot left
[20:23] *** discord-raku-bot joined
[21:10] *** reportable6 joined
[21:19] *** discord-raku-bot left
[21:19] *** discord-raku-bot joined
[21:22] *** gfldex left
[21:22] *** gfldex joined
[21:41] *** Kaiepi left
[21:42] *** Kaiepi joined
[21:46] *** sena_kun left
[21:46] *** sena_kun joined
[21:50] *** Xliff joined
[21:50] <Xliff> \v

[21:50] <Xliff> \o, even

[21:50] <Xliff> Getting this error when attempting to brew a fresh raku: /home/cbwood/Projects/rakudobrew/versions/moar-blead/install/include/moar/moar.h:29:10: fatal error: mimalloc.h: No such file or directory

[21:51] <Xliff> https://github.com/microsoft/mimalloc ??

[21:54] <[Coke]> should have been picked up in your moar config step

[21:54] <MasterDuke> Xliff: yeah, moarvm just switched to using mimalloc by default. lizmat also had a similar problem when building from her already-checked-out repo. i'm not sure why (it's been fine for me), but a fresh clone worked for her

[22:09] <moon-child> try 'git submodule init; git submodule update'

[22:13] *** discord-raku-bot left
[22:13] *** discord-raku-bot joined
[22:15] <Xliff> (MasterDuke moon-child).»succ

[22:16] * Xliff suddenly realizes that might not sound as complimentary as intended...

[22:16] <moon-child> haha

[22:16] <MasterDuke> Xliff: heh. btw, i'm curious to see if there's any sort of noticeable improvement in your compile times now we're using mimalloc

[22:17] <Xliff> MasterDuke: Funny that. I was rebuilding with the intent of making the next weekly run.

[22:17] *** discord-raku-bot left
[22:18] <Xliff> Still having issues with this .SET-SELF crap. I'm wondering why I'm the only one running into it, and if that would explain the lack of urgency in fixing it.

[22:18] *** discord-raku-bot joined
[22:18] <MasterDuke> ugexe just mentioned something similar

[22:18] <Xliff> I haven't been able to do Parallel timings for over 9 weeks because of it.

[22:18] <MasterDuke> you do also stress compilation (compared to runtime) more than most...

[22:18] <Xliff> The non-Parallel times take a hit because of the double or even triple recompilations.

[22:19] <Xliff> MasterDuke: Yep. I get it.

[22:19] <Xliff> And... their off! [Timings started]

[22:21] <MasterDuke> istr, there was some talk that in-process precomp might be easier to get working now that new-disp has landed

[22:22] <Xliff> Yeah, but that still might not solve the issue.

[22:22] <Xliff> And... there it is.

[22:22] <Xliff> So... 10 weeks. No Parallel timings.

[22:52] <Xliff> MasterDuke: First project in timing list suffered 30 second increase with 1 recompile due to SET-SELF error

[22:52] <Xliff> Last week it was 3 recompiles.

[22:52] <Xliff> That

[22:52] <Xliff> means that whatever performace increase was expected from mimalloc might have been eaten by recent commits.

