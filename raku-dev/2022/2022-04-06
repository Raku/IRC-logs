[00:13] *** qorg11 left
[00:14] *** qorg11 joined
[00:56] *** frost joined
[03:06] *** evalable6 left
[03:07] *** linkable6 left
[03:07] *** evalable6 joined
[03:08] *** linkable6 joined
[04:16] *** benchable6 left
[04:16] *** bloatable6 left
[04:16] *** evalable6 left
[04:16] *** sourceable6 left
[04:16] *** linkable6 left
[04:16] *** greppable6 left
[04:16] *** notable6 left
[04:16] *** coverable6 left
[04:16] *** shareable6 left
[04:16] *** unicodable6 left
[04:16] *** reportable6 left
[04:16] *** committable6 left
[04:16] *** quotable6 left
[04:16] *** releasable6 left
[04:16] *** statisfiable6 left
[04:16] *** nativecallable6 left
[04:16] *** bisectable6 left
[04:16] *** bisectable6 joined
[04:16] *** quotable6 joined
[04:17] *** releasable6 joined
[04:17] *** reportable6 joined
[04:17] *** bloatable6 joined
[04:17] *** benchable6 joined
[04:17] *** greppable6 joined
[04:17] *** coverable6 joined
[04:18] *** notable6 joined
[04:18] *** nativecallable6 joined
[04:19] *** sourceable6 joined
[04:19] *** statisfiable6 joined
[04:19] *** evalable6 joined
[04:19] *** linkable6 joined
[04:19] *** unicodable6 joined
[04:19] *** committable6 joined
[04:19] *** shareable6 joined
[06:06] *** reportable6 left
[06:09] *** reportable6 joined
[08:05] <lizmat> Files=1352, Tests=117183, 292 wallclock secs (40.11 usr 11.29 sys + 4058.31 cusr 326.80 csys = 4436.51 CPU)

[08:25] *** casaca left
[08:27] *** ilogger2 left
[08:27] *** Geth left
[08:27] *** Geth__ joined
[08:32] *** Geth__ left
[08:32] *** Geth joined
[08:38] *** rypervenche left
[08:38] *** rypervenche joined
[08:40] *** ilogger2 joined
[09:07] <Geth> ¦ rakudo: 4b9c315c6b | (Elizabeth Mattijsen)++ | 2 files

[09:07] <Geth> ¦ rakudo: Add "api" attribute to CompUnit

[09:07] <Geth> ¦ rakudo: 

[09:07] <Geth> ¦ rakudo: This was apparently missed when the "api" selector on identities

[09:07] <Geth> ¦ rakudo: was introduced.

[09:07] <Geth> ¦ rakudo: 

[09:07] <Geth> ¦ rakudo: Adapt calls where "api" is available accordingly.

[09:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4b9c315c6b

[09:37] <Geth> ¦ rakudo: e3ab530917 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6

[09:37] <Geth> ¦ rakudo: Lose one private method in CURI

[09:37] <Geth> ¦ rakudo: 

[09:37] <Geth> ¦ rakudo: Move the local class definitions of LazyDistribution and friends

[09:37] <Geth> ¦ rakudo: up in the code, so that we do not need a method call to create a

[09:37] <Geth> ¦ rakudo: LazyDistribution object.

[09:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e3ab530917

[09:43] <Geth> ¦ rakudo: ec1c001a54 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6

[09:43] <Geth> ¦ rakudo: Fix double worded comment

[09:43] <Geth> ¦ rakudo: 

[09:43] <Geth> ¦ rakudo: Was in the original comment twice already, but it survived reformatting.

[09:43] <Geth> ¦ rakudo: MasterDuke++ for the spot

[09:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ec1c001a54

[09:54] *** discord-raku-bot left
[09:54] *** discord-raku-bot joined
[11:01] <Geth> ¦ rakudo: 943c443c9c | (Elizabeth Mattijsen)++ | src/core.c/Slip.pm6

[11:01] <Geth> ¦ rakudo: Also shortcut Empty.sort

[11:01] <Geth> ¦ rakudo: 

[11:01] <Geth> ¦ rakudo: The actual sorting routines already have an internal short-cut for

[11:01] <Geth> ¦ rakudo: empty lists, but if we know beforehand it's Empty, then why even

[11:01] <Geth> ¦ rakudo: bother.

[11:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/943c443c9c

[11:04] *** frost left
[11:15] *** Geth left
[11:15] *** Geth joined
[11:15] *** Altai-man joined
[11:35] <Geth> ¦ roast: bea51148db | (Elizabeth Mattijsen)++ | S32-list/toggle.t

[11:35] <Geth> ¦ roast: Remove over-specific test on Empty.toggle

[11:35] <Geth> ¦ roast: 

[11:35] <Geth> ¦ roast: One could argue the other tests for ().Seq are also too specific.

[11:35] <Geth> ¦ roast: 

[11:35] <Geth> ¦ roast: Also use .raku instead of .perl for diagnostics.

[11:35] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/bea51148db

[11:38] *** Geth left
[11:38] *** Geth joined
[11:38] <Geth> ¦ rakudo: 1afc3f4f1a | (Elizabeth Mattijsen)++ | src/core.c/Slip.pm6

[11:38] <Geth> ¦ rakudo: Add Empty shortcuts for many more methods

[11:38] <Geth> ¦ rakudo: 

[11:38] <Geth> ¦ rakudo: Basically the remaining Any-iterable methods, specifically:

[11:38] <Geth> ¦ rakudo: 

[11:38] <Geth> ¦ rakudo: are, batch, deepmap, duckmap, maxpairs, minpairs, nodemap, pairup,

[11:38] <Geth> ¦ rakudo: repeated, rotor, skip, squish, toggle, unique

[11:38] <Geth> ¦ rakudo: 

[11:38] <Geth> ¦ rakudo: Also put these in alphabetical order for maintainability

[11:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1afc3f4f1a

[12:08] *** reportable6 left
[12:09] *** ggoebel left
[12:09] *** ggoebel joined
[12:09] *** reportable6 joined
[12:11] <Geth> ¦ DBIish: massa++ created pull request #225: Add :$connection-timeout option to MySQL/MariaDB connections

[12:11] <Geth> ¦ DBIish: review: https://github.com/raku-community-modules/DBIish/pull/225

[12:12] *** frost joined
[12:42] *** casaca joined
[12:42] *** Altai-man left
[12:43] *** Altai-man joined
[12:57] *** notna joined
[13:09] *** frost left
[13:25] <Geth> ¦ rakudo: 32b7d3303f | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6

[13:25] <Geth> ¦ rakudo: Streamline CURI.candidates

[13:25] <Geth> ¦ rakudo: 

[13:25] <Geth> ¦ rakudo: - don't use returns, let the failed if return Empty

[13:25] <Geth> ¦ rakudo: - only create Pairs for entries that actually match, rather than

[13:25] <Geth> ¦ rakudo:   creating a Pair with a meta hash for each entry, and then grepping

[13:25] <Geth> ¦ rakudo:   on the matchers firing

[13:25] <Geth> ¦ rakudo: - don't use samewith in the slow path candidate

[13:25] <Geth> ¦ rakudo: 

[13:25] <Geth> ¦ rakudo: This also removes support for level 0 repositories.  The chance

[13:25] <Geth> ¦ rakudo: that there is still an un-updated repo from before January 2016

[13:25] <Geth> ¦ rakudo: in production, is deemed to low to warrant keeping supporting it.

[13:25] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/32b7d3303f

[13:25] <lizmat> hmmm... actually February 2016... but still  :-)

[13:26] *** frost joined
[13:32] *** frost left
[13:48] <MasterDuke> lizmat: re removing the level 0 support, think that's safe given what we just found out about the default WSL rakudo (which iirc was from 2014)? but then again i don't really know what the levels mean, so take my question with a grain of salt

[13:51] <lizmat> well, if it was form 2014, then it had no real precomp support at all

[13:51] <lizmat> that was created in the 6 months before Christmas 2015

[13:52] <lizmat> prior to that, re-compiling a changed setting meant needing to **re-install** all modules that you had

[13:59] <MasterDuke> ah

[14:06] <[Coke]> ... that may explain why I have my overkill script on windows: I'm old.

[14:13] *** qorg11 left
[14:26] *** qorg11 joined
[14:27] <Geth> ¦ rakudo: fe829e075f | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/FileSystem.pm6

[14:27] <Geth> ¦ rakudo: Streaming CURF!matching-dist

[14:27] <Geth> ¦ rakudo: 

[14:27] <Geth> ¦ rakudo: In the same way as CURS!matching-dist

[14:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fe829e075f

[15:20] <Geth> ¦ rakudo: 43521e36e1 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6

[15:20] <Geth> ¦ rakudo: Streamline CURS!precomp-stores

[15:20] <Geth> ¦ rakudo: 

[15:20] <Geth> ¦ rakudo: - use fast nqp::ifnull to check whether initialized

[15:20] <Geth> ¦ rakudo: - do actual initializetion in another method for better inlineability

[15:20] <Geth> ¦ rakudo:   of !precomp-stores

[15:20] <Geth> ¦ rakudo: - don't build the whole repo-chain first

[15:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/43521e36e1

[15:28] *** [Coke] left
[15:30] *** [Coke] joined
[15:35] <Geth> ¦ rakudo: ca61b56590 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository.pm6

[15:35] <Geth> ¦ rakudo: Use one var less in CUR.repo-chain

[15:35] <Geth> ¦ rakudo: 

[15:35] <Geth> ¦ rakudo: Every little bit helps

[15:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ca61b56590

[15:56] <Geth> ¦ rakudo: 1b3d39f4ae | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6

[15:56] <Geth> ¦ rakudo: Streamline CURS.precomp-store a bit

[15:56] <Geth> ¦ rakudo: 

[15:56] <Geth> ¦ rakudo: Using an nqp::ifnull check.

[15:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1b3d39f4ae

[16:00] *** notna left
[16:22] <Geth> ¦ rakudo: 7c72a30326 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6

[16:22] <Geth> ¦ rakudo: Streamline CURS!prefix-writeable

[16:22] <Geth> ¦ rakudo: 

[16:22] <Geth> ¦ rakudo: - use fast nqp::ifnull check

[16:22] <Geth> ¦ rakudo: - do actual initialization in another private method for better

[16:22] <Geth> ¦ rakudo:   inlineability of !prefix-writeable

[16:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7c72a30326

[16:25] <bartolin> just as a quick note: on 4b9c315c6b the jvm backend is very broken. a lot of spectests and installation fail with "Method 'stringified' not found for invocant of class 'CompUnit::DependencySpecification'". For the spectests it seems to happen when compiling Test::Util. Unfortunately I don't have time to look closer.

[16:25] *** linkable6 left
[16:26] *** linkable6 joined
[16:26] <lizmat> bartolin: thanks for the nudge, will look into it

[16:27] <lizmat> bartolin: is it exact that commit?  or could it be an earlier one ?

[16:29] *** notna joined
[16:30] <Geth> ¦ rakudo: c4e4e5c851 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6

[16:30] <Geth> ¦ rakudo: Streamline CURS.remove-dist-from-short-name-lookup-files

[16:30] <Geth> ¦ rakudo: 

[16:30] <Geth> ¦ rakudo: - bind variables rather than assigning

[16:30] <Geth> ¦ rakudo: - just if, don't have an explicit return

[16:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c4e4e5c851

[16:30] *** notna left
[16:50] *** ggoebel left
[17:19] <bartolin> lizmat: no, could well be an earlier commit. last run I had was on c917f32c1 (that one was good). maybe something sticks out? &

[17:31] <lizmat> ah... that's quite a while ago  :-(

[17:32] <lizmat> in number of commits  :-(

[17:34] <Geth> ¦ rakudo: d258957e1d | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6

[17:34] <Geth> ¦ rakudo: Streamline CURS!read-dist and add "api" support

[17:34] <Geth> ¦ rakudo: 

[17:34] <Geth> ¦ rakudo: - use hash at compile time

[17:34] <Geth> ¦ rakudo: - bind variables instead of assigning

[17:34] <Geth> ¦ rakudo: 

[17:34] <Geth> ¦ rakudo: Also streamline CURS!file-id by taking native strings

[17:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d258957e1d

[17:34] <lizmat> bartolin: I'm doing a lot of smallerish commits for better bisectability

[17:37] *** Altai-man left
[18:05] *** reportable6 left
[18:06] *** reportable6 joined
[18:31] <Geth> ¦ rakudo: d3cc4e9117 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6

[18:31] <Geth> ¦ rakudo: Streamline CURS.uninstall

[18:31] <Geth> ¦ rakudo: 

[18:31] <Geth> ¦ rakudo: - set up variables only when they are needed

[18:31] <Geth> ¦ rakudo: - copy private method into uninstall code, only called in 1 place

[18:31] <Geth> ¦ rakudo: - set up constant list with script extensions used

[18:31] <Geth> ¦ rakudo: - take unlink logic out of the method, useful elsewhere

[18:31] <Geth> ¦ rakudo: - clearer signature

[18:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d3cc4e9117

[18:47] *** sena_kun left
[18:48] *** sena_kun joined
[19:55] <Geth> ¦ rakudo: 6e21b22bb0 | (Elizabeth Mattijsen)++ | 2 files

[19:55] <Geth> ¦ rakudo: Revert "Add "api" attribute to CompUnit"

[19:55] <Geth> ¦ rakudo: 

[19:55] <Geth> ¦ rakudo: This reverts commit 4b9c315c6b1a0cebbfdd8e9f06c8d5f9749fb782.

[19:55] <Geth> ¦ rakudo: 

[19:55] <Geth> ¦ rakudo: This causes unnecessary dependency checksum tests, significantly

[19:55] <Geth> ¦ rakudo: slowing down loading of modules with many dependencies (such as

[19:55] <Geth> ¦ rakudo: e.g. Cro).  Apparently the additional api attribute is messing with

[19:55] <Geth> ¦ rakudo: the sha calculations.  More research is needed, so reverting for

[19:55] <Geth> ¦ rakudo: now.

[19:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6e21b22bb0

[19:56] <lizmat> bartolin: I've reverted 4b9c315c6b1a0cebbf as it (also) caused a performance regression

[20:12] <Geth> ¦ rakudo/rakuast: 0686333e5a | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[20:12] <Geth> ¦ rakudo/rakuast: Fix uninitialized package variables in nested compilation not retaining outside value

[20:12] <Geth> ¦ rakudo/rakuast: 

[20:12] <Geth> ¦ rakudo/rakuast: package M { our $var = 1; say EVAL 'our $var; $var' } should output 1 but

[20:12] <Geth> ¦ rakudo/rakuast: didn't. Instead of the attach target, use the resolver's current-package method

[20:12] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/0686333e5a

[20:12] <Geth> ¦ rakudo/rakuast: 0c8ffcde4f | (Stefan Seifert)++ | src/Raku/Actions.nqp

[20:12] <Geth> ¦ rakudo/rakuast: Fix compilation of variables without longname

[20:12] <Geth> ¦ rakudo/rakuast: 

[20:12] <Geth> ¦ rakudo/rakuast: $/ doesn't have a longname, thus unconditionally accessing <longname><name>.ast

[20:12] <Geth> ¦ rakudo/rakuast: must fail

[20:12] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/0c8ffcde4f

[20:20] *** sena_kun left
[20:21] *** sena_kun joined
[20:22] <bartolin> lizmat: I think the commit that started the trouble for the jvm backend was 1b75e3fa0c. The following code blows up then: 'use lib "t/spec/packages/Test-Helpers"; use Test::Util'

[20:23] <bartolin> https://gist.github.com/usev6/141ec892ee3c4e91db4a37c41a729f3e

[20:24] <bartolin> oh, the CI also had this error (since it does a 'make install'): https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=2517&view=logs&j=c6029080-725b-5cac-140d-8eb32d1e932f&t=e661041f-7cfe-57fb-f671-7cbf417ae738

[22:49] <lizmat> bartolin: cool., that will give me something to work on tomorrow

[23:23] <gfldex> What does ». actually dispatch to?

[23:42] <gfldex> Found it. It's .list .

