[00:00] *** frost joined
[00:05] *** reportable6 left
[00:07] *** reportable6 joined
[00:13] <Xliff> Is there a way to get zef to unmute the output of rakudo subprocesses?

[00:36] <vrurg> Xliff: tests? --verbose --debug

[00:37] <vrurg> Just --debug, actually.

[01:17] *** linkable6 left
[01:17] *** evalable6 left
[01:19] *** evalable6 joined
[01:20] *** linkable6 joined
[03:20] *** evalable6 left
[03:20] *** linkable6 left
[03:20] *** linkable6 joined
[03:21] *** frost left
[03:22] *** evalable6 joined
[04:22] *** evalable6 left
[04:22] *** linkable6 left
[04:23] *** evalable6 joined
[04:23] *** linkable6 joined
[05:18] *** Geth left
[06:05] *** reportable6 left
[06:06] *** reportable6 joined
[07:39] <lizmat> Files=1352, Tests=117183, 291 wallclock secs (35.34 usr  9.90 sys + 4058.11 cusr 331.18 csys = 4434.53 CPU)

[07:54] *** frost joined
[09:04] *** sena_kun left
[09:07] *** sena_kun joined
[09:37] <lizmat> I wish Azure could tell me WTF is wrong with PRs: https://github.com/rakudo/rakudo/pull/4855/checks?check_run_id=5882849026

[09:37] <lizmat> "PowerShell exited with code '1'."  somehow does not give me enough information :-(

[09:39] <moon-child> don't some cis let you ssh in and poke around when a test fails?

[09:39] <moon-child> (though I guess you wouldn't get that on windows anyway...)

[09:43] <nine> Geth down?

[09:52] * lizmat checks

[09:52] *** Geth joined
[09:52] * lizmat should really spend some TLC on the Geth code

[09:53] <lizmat> nine: any specific repo I should look at re-issuing push messages ?

[09:54] <nine> rakudo/rakuast

[09:54] <lizmat> what time approx?

[09:55] <nine> Today starting 10:28:17 2022 +0200

[09:56] <Geth> ¦ rakudo/rakuast: befb3026e8 | (Stefan Seifert)++ | 3 files

[09:56] <Geth> ¦ rakudo/rakuast: Fix EXPORT_SYMBOL not finding @*PACKAGES

[09:56] <Geth> ¦ rakudo/rakuast: 

[09:56] <Geth> ¦ rakudo/rakuast: Instead of having the package stack in a dynvar, in RakuAST, the resolver

[09:56] <Geth> ¦ rakudo/rakuast: carries the package stack.

[09:56] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/befb3026e8

[09:56] <lizmat> that one?

[09:57] <nine> also fe78b5c689789d51dbcc660c55e5c69f0013ca5f

[09:57] <Geth> ¦ rakudo/rakuast: fe78b5c689 | (Stefan Seifert)++ | src/Raku/ast/code.rakumod

[09:57] <Geth> ¦ rakudo/rakuast: Fix getcodename requires a concrete object when applying traits

[09:57] <Geth> ¦ rakudo/rakuast: 

[09:57] <Geth> ¦ rakudo/rakuast: The export trait wants to ask the Routine for its name, but this requires $!do

[09:57] <Geth> ¦ rakudo/rakuast: to be initialized. Since traits are run at BEGIN time, we don't have the proper

[09:57] <Geth> ¦ rakudo/rakuast: routine body in place yet, so instead add a stub carrying the name.

[09:57] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/fe78b5c689

[10:00] *** Geth left
[10:00] *** Geth joined
[10:50] *** Altai-man joined
[11:19] <lizmat> so what is this mythical NULL.c setting ?   /me has been unable to find a way to have an attempt at loading

[11:34] <[Tux]> Rakudo v2022.03-161-g86927cba5 (v6.d) on MoarVM 2022.03-15-g43e1b00a6

[11:34] <[Tux]> csv-test-xs-20      0.394 -  0.430

[11:34] <[Tux]> csv-ip5xs           0.787 -  0.810

[11:34] <[Tux]> test-t --race       0.829 -  0.896

[11:34] <[Tux]> test-t              1.456 -  1.478

[11:34] <[Tux]> csv-parser          3.526 -  4.880

[11:34] <[Tux]> csv-ip5xs-20        5.114 -  5.221

[11:34] <[Tux]> test-t-20 --race    6.866 - 10.190

[11:34] <[Tux]> test                7.084 -  7.190

[11:34] <[Tux]> test-t-20          20.376 - 21.300

[12:05] *** reportable6 left
[12:07] *** reportable6 joined
[12:17] *** frost left
[12:25] <Geth> ¦ DBIish/rbt.mysql-options: 13f0db1820 | (Humberto Massa)++ (committed by Rod Taylor) | 3 files

[12:25] <Geth> ¦ DBIish/rbt.mysql-options: Add options to MySQL/MariaDB connections

[12:25] <Geth> ¦ DBIish/rbt.mysql-options: 

[12:25] <Geth> ¦ DBIish/rbt.mysql-options: :$connection-timeout

[12:25] <Geth> ¦ DBIish/rbt.mysql-options: :$read-timeout

[12:25] <Geth> ¦ DBIish/rbt.mysql-options: :$write-timeout

[12:25] <Geth> ¦ DBIish/rbt.mysql-options: 

[12:25] <Geth> ¦ DBIish/rbt.mysql-options: Author:    Humberto Massa <humbertomassa@gmail.com>

[12:25] <Geth> ¦ DBIish/rbt.mysql-options: review: https://github.com/raku-community-modules/DBIish/commit/13f0db1820

[12:27] <Geth> ¦ DBIish/rbt.mysql-options: 123936f57d | (Humberto Massa)++ (committed by Rod Taylor) | 3 files

[12:27] <Geth> ¦ DBIish/rbt.mysql-options: Add options to MySQL/MariaDB connections

[12:27] <Geth> ¦ DBIish/rbt.mysql-options: 

[12:27] <Geth> ¦ DBIish/rbt.mysql-options: :$connection-timeout

[12:27] <Geth> ¦ DBIish/rbt.mysql-options: :$read-timeout

[12:27] <Geth> ¦ DBIish/rbt.mysql-options: :$write-timeout

[12:27] <Geth> ¦ DBIish/rbt.mysql-options: 

[12:27] <Geth> ¦ DBIish/rbt.mysql-options: Author:    Humberto Massa

[12:27] <Geth> ¦ DBIish/rbt.mysql-options: Minor adjustments: Rod Taylor

[12:27] <Geth> ¦ DBIish/rbt.mysql-options: review: https://github.com/raku-community-modules/DBIish/commit/123936f57d

[12:30] <Geth> ¦ DBIish/rbt.mysql-options: b2a6e37652 | (Humberto Massa)++ (committed by Rod Taylor) | 3 files

[12:30] <Geth> ¦ DBIish/rbt.mysql-options: Add options to MySQL/MariaDB connections

[12:30] <Geth> ¦ DBIish/rbt.mysql-options: 

[12:30] <Geth> ¦ DBIish/rbt.mysql-options: :$connection-timeout

[12:30] <Geth> ¦ DBIish/rbt.mysql-options: :$read-timeout

[12:30] <Geth> ¦ DBIish/rbt.mysql-options: :$write-timeout

[12:30] <Geth> ¦ DBIish/rbt.mysql-options: 

[12:30] <Geth> ¦ DBIish/rbt.mysql-options: Author:    Humberto Massa

[12:30] <Geth> ¦ DBIish/rbt.mysql-options: Minor adjustments: Rod Taylor

[12:30] <Geth> ¦ DBIish/rbt.mysql-options: review: https://github.com/raku-community-modules/DBIish/commit/b2a6e37652

[12:41] <Geth> ¦ DBIish/rbt.doc-fix: 51016a03f4 | (Rod Taylor)++ | README.md

[12:41] <Geth> ¦ DBIish/rbt.doc-fix: Mention mariadb library lookup in docs

[12:41] <Geth> ¦ DBIish/rbt.doc-fix: review: https://github.com/raku-community-modules/DBIish/commit/51016a03f4

[12:42] <Geth> ¦ DBIish/main: b2a6e37652 | (Humberto Massa)++ (committed by Rod Taylor) | 3 files

[12:42] <Geth> ¦ DBIish/main: Add options to MySQL/MariaDB connections

[12:42] <Geth> ¦ DBIish/main: 

[12:42] <Geth> ¦ DBIish/main: :$connection-timeout

[12:42] <Geth> ¦ DBIish/main: :$read-timeout

[12:42] <Geth> ¦ DBIish/main: :$write-timeout

[12:42] <Geth> ¦ DBIish/main: 

[12:42] <Geth> ¦ DBIish/main: Author:    Humberto Massa

[12:42] <Geth> ¦ DBIish/main: Minor adjustments: Rod Taylor

[12:42] <Geth> ¦ DBIish/main: review: https://github.com/raku-community-modules/DBIish/commit/b2a6e37652

[12:43] <Geth> ¦ DBIish/rbt.mysql-connection-settings: 37 commits pushed by (Ancient Wizard)++, (Rod Taylor)++, (Vadim Belman)++, rbt++, (Humberto Massa)++

[12:43] <Geth> ¦ DBIish/rbt.mysql-connection-settings: review: https://github.com/raku-community-modules/DBIish/compare/e3ea4d22571d...b2a6e3765211

[12:45] <Geth> ¦ DBIish/rbt.doc-fix: 7e9f981d8d | (Rod Taylor)++ | README.md

[12:45] <Geth> ¦ DBIish/rbt.doc-fix: Mention mariadb library lookup in docs

[12:45] <Geth> ¦ DBIish/rbt.doc-fix: 

[12:45] <Geth> ¦ DBIish/rbt.doc-fix: This was an oversight in ddfa8b5.

[12:45] <Geth> ¦ DBIish/rbt.doc-fix: review: https://github.com/raku-community-modules/DBIish/commit/7e9f981d8d

[12:47] <Geth> ¦ rakudo: 2cadc4d869 | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp

[12:47] <Geth> ¦ rakudo: Streamlining some module / setting loading logic

[12:47] <Geth> ¦ rakudo: 

[12:47] <Geth> ¦ rakudo: - give bootstrap loading its own method.  This was done for code

[12:47] <Geth> ¦ rakudo:   clarity and the hope that the alternate path would be inlineable.

[12:47] <Geth> ¦ rakudo:   The alternate path is apparently only used for loading modules

[12:47] <Geth> ¦ rakudo:   from nqp, like "use QAST:from<NQP>".

[12:47] <Geth> ¦ rakudo: - if setting "d" is loaded already, then we don't need to check for

[12:47] <Geth> ¦ rakudo:   previous settings, as these have then already been loaded as well

[12:47] <Geth> ¦ rakudo:   when the "d" setting was loaded.

[12:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2cadc4d869

[12:47] <lizmat> afk for a few hours&

[12:52] <MasterDuke> lizmat: if you click through to see the build logs, you get https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=2548&view=logs&j=1bbd921f-2da8-56be-a1c6-2e0444a912f9&t=d2b19f08-027d-59da-ee6d-1106d293566a&l=83 `src\moar.h(44): fatal error C1083: Cannot open include file: 'stdatomic.h': No such file or directory`

[13:07] <Geth> ¦ DBIish: massa++ created pull request #226: Solve problems with NULL columns

[13:07] <Geth> ¦ DBIish: review: https://github.com/raku-community-modules/DBIish/pull/226

[13:14] *** frost joined
[13:40] *** carlmasak joined
[13:46] *** frost left
[13:58] <Geth> ¦ DBIish/main: 7e9f981d8d | (Rod Taylor)++ | README.md

[13:58] <Geth> ¦ DBIish/main: Mention mariadb library lookup in docs

[13:58] <Geth> ¦ DBIish/main: 

[13:58] <Geth> ¦ DBIish/main: This was an oversight in ddfa8b5.

[13:58] <Geth> ¦ DBIish/main: review: https://github.com/raku-community-modules/DBIish/commit/7e9f981d8d

[14:10] <Geth> ¦ rakudo/rakuast: b59ce45da7 | (Jonathan Worthington)++ | 3 files

[14:10] <Geth> ¦ rakudo/rakuast: RakuAST node for 2⁴⁵ postfixes

[14:10] <Geth> ¦ rakudo/rakuast: 

[14:10] <Geth> ¦ rakudo/rakuast: And support it in the RakuAST-based compiler.

[14:10] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/b59ce45da7

[14:58] <Geth> ¦ DBIish/rbt.mysql-blob: 4 commits pushed by (Humberto Massa)++, (Rod Taylor)++

[14:58] <Geth> ¦ DBIish/rbt.mysql-blob: d224ee558c | The return of the null-blob problem

[14:58] <Geth> ¦ DBIish/rbt.mysql-blob: d2cfa86630 | Minor tidying of the file

[14:58] <Geth> ¦ DBIish/rbt.mysql-blob: 7c10180909 | WIP   Blob fix

[14:58] <Geth> ¦ DBIish/rbt.mysql-blob: 0d95ec6490 | Use newer mysql_exec_statement API whenever possible

[14:58] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/compare/d224ee558c21^...0d95ec6490c4

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: 61f9aff816 | (Rod Taylor)++ | t/26-mysql-blob.t

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: Minor tidying of the file

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/61f9aff816

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: a15ff9d011 | (Rod Taylor)++ | t/26-mysql-blob.t

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: WIP   Blob fix

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: 

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: .prepare.execute() and .execute() work differently. They shouldn't.

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/a15ff9d011

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: fef8b69033 | (Rod Taylor)++ | 2 files

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: Use newer mysql_exec_statement API whenever possible

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: 

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: There are a very small number of statements which fail under this API, such as LOCK TABLE. In nearly every other case it provides an improved interface for correctness. For consistency in things like NULL handling, which are tricky to fully test otherwise, always try this API and fallback if it fails with the specific 'This command is not supported in the prepared statement protocol yet' message.

[14:59] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/fef8b69033

[15:00] <Geth> ¦ DBIish/rbt.mysql-blob: 4d11ed0fcf | (Rod Taylor)++ | t/26-mysql-blob.t

[15:00] <Geth> ¦ DBIish/rbt.mysql-blob: Add additional NULL testing for blob column

[15:00] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/4d11ed0fcf

[15:00] <Geth> ¦ DBIish/rbt.mysql-blob: 781fcd363d | (Rod Taylor)++ | 2 files

[15:00] <Geth> ¦ DBIish/rbt.mysql-blob: Use newer mysql_exec_statement API whenever possible

[15:00] <Geth> ¦ DBIish/rbt.mysql-blob: 

[15:00] <Geth> ¦ DBIish/rbt.mysql-blob: There are a very small number of statements which fail under this API, such as LOCK TABLE. In nearly every other case it provides an improved interface for correctness. For consistency in things like NULL handling, which are tricky to fully test otherwise, always try this API and fallback if it fails with the specific 'This command is not supported in the prepared statement protocol yet' message.

[15:00] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/781fcd363d

[15:07] <Geth> ¦ DBIish/rbt.mysql-blob: 4 commits pushed by (Rod Taylor)++

[15:07] <Geth> ¦ DBIish/rbt.mysql-blob: 61f9aff816 | Minor tidying of the file

[15:07] <Geth> ¦ DBIish/rbt.mysql-blob: 4d11ed0fcf | Add additional NULL testing for blob column

[15:07] <Geth> ¦ DBIish/rbt.mysql-blob: 0e933afe89 | Styling according to Comma

[15:07] <Geth> ¦ DBIish/rbt.mysql-blob: 34b55c1ede | Use mysql_exec_statement API whenever possible

[15:07] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/compare/61f9aff81659^...34b55c1ede23

[15:09] <Geth> ¦ DBIish/rbt.mysql-blob: 4 commits pushed by (Rod Taylor)++

[15:09] <Geth> ¦ DBIish/rbt.mysql-blob: 4ff42a7bc7 | Use subtests and tidy the file

[15:09] <Geth> ¦ DBIish/rbt.mysql-blob: 05b0e5c58b | Add additional NULL testing for blob column

[15:09] <Geth> ¦ DBIish/rbt.mysql-blob: cb4f29e3b8 | Styling according to Comma

[15:09] <Geth> ¦ DBIish/rbt.mysql-blob: d3635f5617 | Use mysql_exec_statement API whenever possible

[15:09] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/compare/34b55c1ede23...d3635f5617b2

[15:11] <lizmat> MasterDuke: from https://github.com/rakudo/rakudo/pull/4856 I don't see a link that gets me to the page you showed

[15:16] <Geth> ¦ rakudo/rakuast: df9b0a2571 | (Jonathan Worthington)++ | 2 files

[15:16] <Geth> ¦ rakudo/rakuast: Fix topic var and placeholder signature semantics

[15:16] <Geth> ¦ rakudo/rakuast: 

[15:16] <Geth> ¦ rakudo/rakuast: For { :$^foo } we would end up generating an optional `$_` parameter

[15:16] <Geth> ¦ rakudo/rakuast: instead of just binding the outer value into the block's `$_`. This was

[15:16] <Geth> ¦ rakudo/rakuast: observable because the `$_` parameter that was mistakenly generated was

[15:16] <Geth> ¦ rakudo/rakuast: optional but code gen'd before the required `$^foo`, which in turn blew

[15:16] <Geth> ¦ rakudo/rakuast: up bytecode compilation. The previous approach failed to work due to

[15:16] <Geth> ¦ rakudo/rakuast: timing: the implicit delcarations are needed earlier. Even if it wasn't

[15:16] <Geth> ¦ rakudo/rakuast: for that timing issue, however, blocks should still get a `$_` bound to

[15:16] <Geth> ¦ rakudo/rakuast: the outer scope's one.

[15:16] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/df9b0a2571

[15:21] <Geth> ¦ DBIish/rbt.mysql-blob: dc42a21725 | (Rod Taylor)++ | 2 files

[15:21] <Geth> ¦ DBIish/rbt.mysql-blob: Use mysql_exec_statement API whenever possible

[15:21] <Geth> ¦ DBIish/rbt.mysql-blob: 

[15:21] <Geth> ¦ DBIish/rbt.mysql-blob: The list of statements supported by the prepared statement API includes most things:

[15:21] <Geth> ¦ DBIish/rbt.mysql-blob: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html#prepared-statements-permitted

[15:21] <Geth> ¦ DBIish/rbt.mysql-blob: 

[15:21] <Geth> ¦ DBIish/rbt.mysql-blob: Consistently using this API when possible provides consistency with NULL handling and potentially other divergences which we've not yet discovered.

[15:21] <Geth> ¦ DBIish/rbt.mysql-blob: 

[15:21] <Geth> ¦ DBIish/rbt.mysql-blob: A few, such as LOCK TABLE or LOAD TABLE or SHOW WARNINGS, are yet supported so fallback to the older query mechanism when required. If performance with this type of query is an issue, peaking at the first word might be possible rather than relying strictly on the try/catch.

[15:21] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/dc42a21725

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: 9baab1eee0 | (Rod Taylor)++ | 5 files

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: Improve MySQL error handling

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: The current addition is only the sqlstate, though other pieces such as the statement are available.

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: Model this off the PostgreSQL error handling.

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/9baab1eee0

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: 8d030cab79 | (Rod Taylor)++ | 2 files

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: Use mysql_exec_statement API whenever possible

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: The list of statements supported by the prepared statement API includes most things:

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html#prepared-statements-permitted

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: Consistently using this API when possible provides consistency with NULL handling and potentially other divergences which we've not yet discovered.

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: A few, such as LOCK TABLE or LOAD TABLE or SHOW WARNINGS, are yet supported so fallback to the older query mechanism when required. If performance with this type of query is an issue, peaking at the first word might be possible rather than relying strictly on the try/catch.

[16:05] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/8d030cab79

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: 174eefdac3 | (Rod Taylor)++ | 5 files

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: Improve MySQL error handling

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: The current addition is only the sqlstate, though other pieces such as the statement are available. Additional diagnostics information will be added in the future.

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: Model this off the PostgreSQL error handling.

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/174eefdac3

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: 8d49f22fde | (Rod Taylor)++ | 2 files

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: Use mysql_exec_statement API whenever possible

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:07] <Geth> ¦ DBIish/rbt.mysql-blob: The list of statements supported by the prepared statement API includes most things:

[16:08] <Geth> ¦ DBIish/rbt.mysql-blob: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html#prepared-statements-permitted

[16:08] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:08] <Geth> ¦ DBIish/rbt.mysql-blob: Consistently using this API when possible provides consistency with NULL handling and potentially other divergences which we've not yet discovered.

[16:08] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:08] <Geth> ¦ DBIish/rbt.mysql-blob: A few, such as LOCK TABLE or LOAD TABLE or SHOW WARNINGS, are yet supported so fallback to the older query mechanism when required. If performance with this type of query is an issue, peaking at the first word might be possible rather than relying strictly on the try/catch.

[16:08] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/8d49f22fde

[16:33] <Geth> ¦ DBIish/rbt.mysql-blob: 4 commits pushed by (Rod Taylor)++

[16:33] <Geth> ¦ DBIish/rbt.mysql-blob: 452c89bb64 | Add server-side NULL testing for blob column

[16:33] <Geth> ¦ DBIish/rbt.mysql-blob: dd57efd00a | Styling according to Comma

[16:33] <Geth> ¦ DBIish/rbt.mysql-blob: 269434408d | Improve MySQL error handling

[16:33] <Geth> ¦ DBIish/rbt.mysql-blob: 0778fc5bd4 | Use mysql_exec_statement API whenever possible

[16:33] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/compare/8d49f22fde68...0778fc5bd422

[16:43] <Geth> ¦ rakudo: 4b8f674171 | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp

[16:43] <Geth> ¦ rakudo: Simplify stash_hash logic

[16:43] <Geth> ¦ rakudo: 

[16:43] <Geth> ¦ rakudo: No extra variables needed

[16:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4b8f674171

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: e7435fba97 | (Rod Taylor)++ | 6 files

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: Improve MySQL error handling

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: The current addition is only the sqlstate, though other pieces such as the statement are available. Additional diagnostics information will be added in the future.

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: Model this off the PostgreSQL error handling.

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/e7435fba97

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: a6557343ef | (Rod Taylor)++ | 3 files

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: Use mysql_exec_statement API whenever possible

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: The list of statements supported by the prepared statement API includes most things:

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html#prepared-statements-permitted

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: Consistently using this API when possible provides consistency with NULL handling and potentially other divergences which we've not yet discovered.

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: 

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: A few, such as LOCK TABLE or LOAD TABLE or SHOW WARNINGS, are yet supported so fallback to the older query mechanism when required. If performance with this type of query is an issue, peaking at the first word might be possible rather than relying strictly on the try/catch.

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/a6557343ef

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: 002140e285 | (Rod Taylor)++ | Changes

[16:55] <Geth> ¦ DBIish/rbt.mysql-blob: Changes message for b2a6e37

[16:56] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/002140e285

[16:58] <Geth> ¦ rakudo: 93402f1813 | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp

[16:58] <Geth> ¦ rakudo: Remove some superstitious parentheses

[16:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/93402f1813

[17:11] <Geth> ¦ rakudo/rakuast: 6a63ae3268 | (Jonathan Worthington)++ | src/Raku/ast/operator-properties.rakumod

[17:11] <Geth> ¦ rakudo/rakuast: Add some missing operator properties

[17:11] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/6a63ae3268

[17:11] <Geth> ¦ rakudo/rakuast: 888ad5f305 | (Jonathan Worthington)++ | 4 files

[17:11] <Geth> ¦ rakudo/rakuast: Start to improve undeclared symbol reporting

[17:11] <Geth> ¦ rakudo/rakuast: 

[17:11] <Geth> ¦ rakudo/rakuast: * Gather nodes during CHECK time that are marked as unresolved

[17:11] <Geth> ¦ rakudo/rakuast: * Some basic mechanism for constructing exceptions (although will

[17:11] <Geth> ¦ rakudo/rakuast:   need more work to handle suggestions and to aggregate by line, so

[17:11] <Geth> ¦ rakudo/rakuast:   this API likely changes)

[17:11] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/888ad5f305

[17:16] <Geth> ¦ DBIish/rbt.mysql-blob: 0e2008806e | (Rod Taylor)++ | 6 files

[17:16] <Geth> ¦ DBIish/rbt.mysql-blob: Improve MySQL error handling

[17:16] <Geth> ¦ DBIish/rbt.mysql-blob: 

[17:16] <Geth> ¦ DBIish/rbt.mysql-blob: The current addition is only the sqlstate, though other pieces such as the statement are available. Additional diagnostics information will be added in the future.

[17:16] <Geth> ¦ DBIish/rbt.mysql-blob: 

[17:16] <Geth> ¦ DBIish/rbt.mysql-blob: Model this off the PostgreSQL error handling.

[17:16] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/0e2008806e

[17:16] <Geth> ¦ DBIish/rbt.mysql-blob: 502e1265df | (Rod Taylor)++ | 3 files

[17:16] <Geth> ¦ DBIish/rbt.mysql-blob: Use mysql_exec_statement API whenever possible

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: 

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: The list of statements supported by the prepared statement API includes most things:

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html#prepared-statements-permitted

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: 

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: Consistently using this API when possible provides consistency with NULL handling and potentially other divergences which we've not yet discovered.

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: 

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: A few, such as LOCK TABLE or LOAD TABLE or SHOW WARNINGS, are yet supported so fallback to the older query mechanism when required. If performance with this type of query is an issue, peaking at the first word might be possible rather than relying strictly on the try/catch.

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/502e1265df

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: ff5eea415e | (Rod Taylor)++ | Changes

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: Changes message for b2a6e37

[17:17] <Geth> ¦ DBIish/rbt.mysql-blob: review: https://github.com/raku-community-modules/DBIish/commit/ff5eea415e

[17:17] *** Altai-man left
[17:18] *** carlmasak left
[17:23] <Geth> ¦ DBIish/main: 6 commits pushed by (Rod Taylor)++

[17:23] <Geth> ¦ DBIish/main: 4ff42a7bc7 | Use subtests and tidy the file

[17:23] <Geth> ¦ DBIish/main: 452c89bb64 | Add server-side NULL testing for blob column

[17:23] <Geth> ¦ DBIish/main: dd57efd00a | Styling according to Comma

[17:23] <Geth> ¦ DBIish/main: 0e2008806e | Improve MySQL error handling

[17:23] <Geth> ¦ DBIish/main: 502e1265df | Use mysql_exec_statement API whenever possible

[17:23] <Geth> ¦ DBIish/main: ff5eea415e | Changes message for b2a6e37

[17:23] <Geth> ¦ DBIish/main: review: https://github.com/raku-community-modules/DBIish/compare/7e9f981d8de5...ff5eea415ef0

[17:28] *** Xliff left
[18:05] *** reportable6 left
[18:07] *** reportable6 joined
[18:33] <Geth> ¦ nqp/faster_sorted_keys: 9be5f71c07 | (Elizabeth Mattijsen)++ | src/core/Hash.nqp

[18:33] <Geth> ¦ nqp/faster_sorted_keys: Speed up "sorted_keys" sub for < 3 elements

[18:33] <Geth> ¦ nqp/faster_sorted_keys: 

[18:33] <Geth> ¦ nqp/faster_sorted_keys: - check number of elements in hash before doing anything

[18:33] <Geth> ¦ nqp/faster_sorted_keys: - if zero, don't do anything

[18:33] <Geth> ¦ nqp/faster_sorted_keys: - if more than zero, fetch the *keys* instead of pairs

[18:33] <Geth> ¦ nqp/faster_sorted_keys: - if 1 element, we're done

[18:33] <Geth> ¦ nqp/faster_sorted_keys: - if 2 elements, swap if necessary

[18:33] <Geth> ¦ nqp/faster_sorted_keys: <…commit message has 5 more lines…>

[18:33] <Geth> ¦ nqp/faster_sorted_keys: review: https://github.com/Raku/nqp/commit/9be5f71c07

[18:33] <Geth> ¦ nqp: lizmat++ created pull request #769: Speed up "sorted_keys" sub for < 3 elements

[18:33] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/769

[18:59] *** sena_kun left
[19:08] *** sena_kun joined
[22:38] *** nebuchadnezzar left
[22:59] <Geth> ¦ rakudo: lizmat self-assigned Zef stopped installing packages https://github.com/rakudo/rakudo/issues/4857

[23:10] *** Xliff joined
