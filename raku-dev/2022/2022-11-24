[00:07] *** reportable6 left
[00:10] *** reportable6 joined
[00:17] *** epony joined
[01:12] <Geth> ¦ rakudo/rakuast: 0b6e76f9fb | (Vadim Belman)++ | tools/templates/Makefile-backend-common.in

[01:12] <Geth> ¦ rakudo/rakuast: Unify ast.nqp generation with other recipes

[01:12] <Geth> ¦ rakudo/rakuast: 

[01:12] <Geth> ¦ rakudo/rakuast: Make it a little more aesthetically appealing.

[01:12] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/0b6e76f9fb

[01:38] <Geth> ¦ CoreHackers-Sourcery: 2colours++ created pull request #9: Removing parameterless method-call candidate

[01:38] <Geth> ¦ CoreHackers-Sourcery: review: https://github.com/raku-community-modules/CoreHackers-Sourcery/pull/9

[01:53] *** Xliff joined
[03:04] *** Kaiepi joined
[04:57] *** sortiz joined
[05:58] *** sortiz left
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[07:01] *** squashable6 left
[07:02] *** squashable6 joined
[10:03] *** sena_kun joined
[11:30] *** sena_kun left
[11:31] *** sena_kun joined
[12:08] *** reportable6 left
[12:11] *** reportable6 joined
[12:34] *** frost19 joined
[13:21] *** frost19 left
[14:23] <Geth> ¦ DBIish/rbt.better-bigint-roundtrip-mysql: ed66c7e486 | (Rod Taylor)++ | lib/DBDish/mysql/StatementHandle.rakumod

[14:23] <Geth> ¦ DBIish/rbt.better-bigint-roundtrip-mysql: Improve Int encoding

[14:23] <Geth> ¦ DBIish/rbt.better-bigint-roundtrip-mysql: 

[14:23] <Geth> ¦ DBIish/rbt.better-bigint-roundtrip-mysql: As per discussion in #233, this code should have better performance and fixes the boundaries (which I messed up).

[14:23] <Geth> ¦ DBIish/rbt.better-bigint-roundtrip-mysql: review: https://github.com/raku-community-modules/DBIish/commit/ed66c7e486

[15:01] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: e39b26fbc8 | (Rod Taylor)++ | lib/DBDish/mysql/StatementHandle.rakumod

[15:01] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: Shorten comment and fix lower boundary

[15:01] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: review: https://github.com/raku-community-modules/DBIish/commit/e39b26fbc8

[15:02] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: 199dac846f | (Rod Taylor)++ | lib/DBDish/mysql/StatementHandle.rakumod

[15:02] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: Shorten comment and fix lower boundary

[15:02] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: 

[15:02] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: As per discussion in #233.

[15:02] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: review: https://github.com/raku-community-modules/DBIish/commit/199dac846f

[15:02] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: eceaee5c2e | (Rod Taylor)++ | lib/DBDish/mysql/StatementHandle.rakumod

[15:02] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: Shorten comment and fix lower boundary

[15:02] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: 

[15:02] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: As per discussion about 642c062 in #233.

[15:02] <Geth> ¦ DBIish/rbt.improve-mysql-large-numbers: review: https://github.com/raku-community-modules/DBIish/commit/eceaee5c2e

[15:26] <Geth> ¦ DBIish/main: eceaee5c2e | (Rod Taylor)++ | lib/DBDish/mysql/StatementHandle.rakumod

[15:26] <Geth> ¦ DBIish/main: Shorten comment and fix lower boundary

[15:26] <Geth> ¦ DBIish/main: 

[15:26] <Geth> ¦ DBIish/main: As per discussion about 642c062 in #233.

[15:26] <Geth> ¦ DBIish/main: review: https://github.com/raku-community-modules/DBIish/commit/eceaee5c2e

[15:35] *** nine left
[15:35] *** nine joined
[16:05] *** linkable6 left
[16:06] *** linkable6 joined
[16:10] *** Kaiepi left
[16:33] *** [Tux] left
[16:41] *** [Tux] joined
[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 33460bfba3 | (Rod Taylor)++ | 2 files

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Move JSON specific test to a -json named file

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Since all tests in this file are skipped if a JSON module is not installed, leave the generic filename for testing other datatypes

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/33460bfba3

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: ca696beb3a | (Rod Taylor)++ | 2 files

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Handle Num and Rat as MYSQL_TYPE_DOUBLE

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: This matches the behaviour of the perl DBD::mysql driver.

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: The test confirms that the fields are created as "double", and that strings which look like numbers remain a string.

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/ca696beb3a

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 5531cb7baa | (Rod Taylor)++ | lib/DBDish/mysql/StatementHandle.rakumod

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: fixup! Handle Num and Rat as MYSQL_TYPE_DOUBLE

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/5531cb7baa

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: b8e35ddc38 | (Rod Taylor)++ | 2 files

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Handle Num and Rat as MYSQL_TYPE_DOUBLE

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: This matches the behaviour of the perl DBD::mysql driver.

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: The test confirms that the fields are created as "double", and that strings which look like numbers remain a string.

[16:44] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/b8e35ddc38

[16:55] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 994284acac | (Rod Taylor)++ | t/24-mysql-types.t

[16:55] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: fixup! Handle Num and Rat as MYSQL_TYPE_DOUBLE

[16:55] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/994284acac

[17:02] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: efa9b71d0f | (Rod Taylor)++ | 2 files

[17:02] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Handle Num and Rat as MYSQL_TYPE_DOUBLE

[17:02] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[17:02] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: This matches the behaviour of the perl DBD::mysql driver.

[17:02] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[17:02] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: The test confirms that the fields are created as "double", and that strings which look like numbers remain a string.

[17:02] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/efa9b71d0f

[17:04] *** epony left
[17:06] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 51b913b280 | (Rod Taylor)++ | 2 files

[17:06] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Handle Num and Rat as MYSQL_TYPE_DOUBLE

[17:06] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[17:06] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: This matches the behaviour of the perl DBD::mysql driver.

[17:06] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[17:06] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: The test confirms that the fields are created as "double", and that strings which look like numbers remain a string.

[17:06] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/51b913b280

[17:07] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: ab424310c2 | (Rod Taylor)++ | 2 files

[17:07] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Handle Num and Rat as MYSQL_TYPE_DOUBLE

[17:07] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[17:07] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: This matches the behaviour of the perl DBD::mysql driver.

[17:07] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[17:07] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: The test confirms that the fields are created as "double", and that strings which look like numbers remain a string.

[17:07] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/ab424310c2

[17:08] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 5a76c80e11 | (Rod Taylor)++ | 2 files

[17:08] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Handle Num and Rat as MYSQL_TYPE_DOUBLE

[17:08] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[17:08] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: This matches the behaviour of the perl DBD::mysql driver.

[17:08] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 

[17:08] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: The test confirms that the fields are created as "double", and that strings which look like numbers remain a string.

[17:08] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/5a76c80e11

[17:09] *** MasterDuke joined
[17:10] <japhb> Person working on DBIish -- Would you mind either not sending webhooks on non-main branch pushes, or not pushing multiple versions of every commit?  (I'm assuming you're using the CI for testing, but if not ....)

[17:10] <japhb> The first one is probably the most valuable (not sending a webhook for non-main pushes)

[18:06] <lizmat> japhb: this could also be handled at the bot level

[18:07] <lizmat> although I must admit not looking forward to work on the Geth code  :-)

[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[18:27] <japhb> lizmat: Most of the other places people are pushing to non-main it's not a problem; we actually care what's going on in the rakuast branch, for instance.

[18:27] <japhb> But in this case it's repetitive noise.

[18:27] <japhb> I suppose we could elide consecutive pushes with the same message ...

[18:28] <lizmat> I wonder why we see that repetitiveness 

[18:28] <lizmat> I mean, they have different commit IDs

[18:28] <lizmat> are they forced updates ?

[18:28] <japhb> Although this morning there were alternating pushes with alternating messages, so simple smushing won't by itself work.

[18:28] <japhb> Yeah, that's my guess, forced pushes

[18:29] <lizmat> I wonder if Geth can check for that

[18:29] *** Kaiepi joined
[18:29] <discord-raku-bot> <Nemokosch> Well, I hope my Sourcery PR didn't go completely unnoticed 😛

[18:30] <lizmat> Nemokosch: would you like a commit bit ?

[18:30] <tellable6> lizmat, I'll pass your message to Nemokosch

[18:32] <discord-raku-bot> <Nemokosch> what is a commit bit?

[18:32] <lizmat> the right to commit to a repo

[18:32] <lizmat> directly

[18:34] <lizmat> sent you an invite :)

[18:35] <discord-raku-bot> <Nemokosch> oh. Well, it's honoring. I can't promise I will be very active on Sourcery but if I come across something while using it...

[18:35] <discord-raku-bot> <Nemokosch> thank you 🙂

[18:36] <lizmat> you're welcome: may you use your new powers wisely!

[19:22] <nine> Why do we even get commits to some modules reported here?

[19:29] <lizmat> because the settings of the repo said they should

[19:30] <lizmat> Geth will happily send messages to whatever channels it is on and it is told to

[19:31] <[Coke]> ah, it's a community module?

[20:08] <lizmat> yup

[20:25] *** sena_kun left
[20:43] *** Xliff left
[23:01] *** linkable6 left
[23:01] *** evalable6 left
[23:03] *** evalable6 joined
[23:04] *** linkable6 joined
[23:09] *** epony joined
