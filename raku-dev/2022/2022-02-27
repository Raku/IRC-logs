[00:06] *** reportable6 left
[00:08] *** reportable6 joined
[00:32] *** coverable6 joined
[00:33] *** squashable6 joined
[00:34] *** tellable6 joined
[01:33] *** sourceable6 joined
[02:32] *** committable6 joined
[02:39] *** [Coke] joined
[02:56] *** frost joined
[05:25] *** tellable6 left
[05:25] *** coverable6 left
[05:25] *** notable6 left
[05:25] *** committable6 left
[05:25] *** benchable6 left
[05:25] *** bisectable6 left
[05:25] *** releasable6 left
[05:25] *** reportable6 left
[05:25] *** nativecallable6 left
[05:25] *** linkable6 left
[05:25] *** squashable6 left
[05:25] *** evalable6 left
[05:25] *** greppable6 left
[05:25] *** sourceable6 left
[05:25] *** bloatable6 left
[05:25] *** quotable6 left
[05:25] *** unicodable6 left
[05:25] *** statisfiable6 left
[05:25] *** shareable6 left
[05:27] *** releasable6 joined
[05:27] *** benchable6 joined
[05:27] *** shareable6 joined
[05:27] *** committable6 joined
[05:28] *** evalable6 joined
[05:28] *** coverable6 joined
[05:29] *** tellable6 joined
[06:07] *** reportable6 joined
[06:26] *** greppable6 joined
[06:29] *** unicodable6 joined
[07:26] *** squashable6 joined
[07:26] *** bloatable6 joined
[07:26] *** notable6 joined
[07:28] *** sourceable6 joined
[07:28] *** bisectable6 joined
[08:27] *** nativecallable6 joined
[08:28] *** linkable6 joined
[09:26] *** statisfiable6 joined
[10:39] *** nativecallable6 left
[10:39] *** reportable6 left
[10:39] *** statisfiable6 left
[10:39] *** bloatable6 left
[10:39] *** notable6 left
[10:39] *** unicodable6 left
[10:39] *** releasable6 left
[10:39] *** sourceable6 left
[10:39] *** greppable6 left
[10:39] *** squashable6 left
[10:39] *** bisectable6 left
[10:39] *** benchable6 left
[10:39] *** evalable6 left
[10:39] *** coverable6 left
[10:39] *** tellable6 left
[10:39] *** linkable6 left
[10:39] *** shareable6 left
[10:39] *** committable6 left
[10:39] *** benchable6 joined
[10:40] *** sourceable6 joined
[10:40] *** evalable6 joined
[10:40] *** greppable6 joined
[10:41] *** nativecallable6 joined
[10:41] *** tellable6 joined
[10:41] *** squashable6 joined
[10:41] *** notable6 joined
[10:42] *** bisectable6 joined
[10:42] *** coverable6 joined
[10:52] <[Tux]> Rakudo v2022.02-82-g8fb0a66dc (v6.d) on MoarVM 2022.02-7-g2b96d1828

[10:52] <[Tux]> csv-test-xs-20      0.409 -  0.411

[10:52] <[Tux]> csv-ip5xs           0.756 -  0.808

[10:52] <[Tux]> test-t --race       0.860 -  0.893

[10:52] <[Tux]> test-t              1.572 -  1.575

[10:52] <[Tux]> csv-parser          3.762 -  3.868

[10:52] <[Tux]> csv-ip5xs-20        4.923 -  4.924

[10:52] <[Tux]> test                6.646 -  6.715

[10:52] <[Tux]> test-t-20 --race    7.081 -  7.289

[10:52] <[Tux]> test-t-20          22.444 - 22.810

[11:27] *** sena_kun left
[11:41] *** linkable6 joined
[11:41] *** releasable6 joined
[11:45] *** sena_kun joined
[11:54] <lizmat> Files=1351, Tests=117115, 288 wallclock secs (35.11 usr  9.79 sys + 4027.02 cusr 326.52 csys = 4398.44 CPU)

[12:27] *** quotable6 joined
[12:27] *** squashable6 left
[12:40] *** bloatable6 joined
[12:40] *** unicodable6 joined
[12:41] *** shareable6 joined
[13:41] *** linkable6 left
[13:41] *** evalable6 left
[13:42] *** committable6 joined
[13:42] *** evalable6 joined
[13:44] *** linkable6 joined
[13:54] *** carlmasak joined
[14:42] *** statisfiable6 joined
[14:57] *** frost left
[15:08] *** reportable6 joined
[15:18] *** carlmasak left
[15:28] *** squashable6 joined
[18:09] *** reportable6 left
[18:40] *** Xliff joined
[19:53] *** Kaiepi left
[19:55] *** Kaiepi joined
[20:29] <bartolin_> do you remember the recent discussion from https://colabti.org/irclogger/irclogger_log/raku-dev?date=2022-02-20#l153 about the following code (which blows up on the JVM backend)?

[20:30] <bartolin_> m: my int $ = my str $ = "123"

[20:30] <camelia> rakudo-moar 8fb0a66dc: ( no output )

[20:30] <bartolin_> I wrote down some observations in https://github.com/rakudo/rakudo/issues/4732#issuecomment-1053668415 and would be interested to get more insights

[20:31] <bartolin_> m: (my int $x = 42) = 47; say $x ## should this work?

[20:31] <camelia> rakudo-moar 8fb0a66dc: OUTPUT: «Cannot modify an immutable Int (42)␤  in block <unit> at <tmp> line 1␤␤»

[20:32] <bartolin_> (If I'm not mistaken, assign_i, assign_s, etc. just return a native value on MoarVM.)

[20:33] <MasterDuke> committable6: releases (my int $x = 42) = 47; say $x       # did it work in the past?

[20:33] <committable6> MasterDuke, https://gist.github.com/63c84a4e9f3abca711b50cec5258802e

[20:33] <MasterDuke> looks like the answer is no

[20:37] <MasterDuke> bartolin_: i recommend pinging nine and jnthn in that issue

[20:38] <bartolin_> Thanks, will do that.

[20:41] <bartolin_> well, stupid question: you mean ot just mention them -- or is there another way to ping someone else in a github issue?

[20:41] <bartolin_> *to

[20:41] <MasterDuke> just mention. or a .tell here

[20:42] <bartolin_> oki, thanks again.

[20:42] <MasterDuke> np

[21:12] *** reportable6 joined
[22:15] *** Kaiepi left
[22:16] *** Kaiepi joined
[23:37] <gfldex> m: use Test; is 1,1, '#';

[23:37] <camelia> rakudo-moar 8fb0a66dc: OUTPUT: «ok 1 -  \#␤»

