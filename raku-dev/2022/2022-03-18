[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:04] *** MasterDuke left
[00:12] *** japhb left
[00:13] *** japhb joined
[01:13] *** nativecallable6 left
[01:13] *** reportable6 left
[01:13] *** quotable6 left
[01:13] *** bloatable6 left
[01:13] *** squashable6 left
[01:13] *** greppable6 left
[01:13] *** bisectable6 left
[01:13] *** coverable6 left
[01:13] *** evalable6 left
[01:13] *** statisfiable6 left
[01:13] *** unicodable6 left
[01:13] *** sourceable6 left
[01:13] *** notable6 left
[01:13] *** committable6 left
[01:13] *** linkable6 left
[01:13] *** shareable6 left
[01:13] *** benchable6 left
[01:13] *** releasable6 left
[01:13] *** squashable6 joined
[01:13] *** committable6 joined
[01:14] *** bloatable6 joined
[01:14] *** evalable6 joined
[01:14] *** greppable6 joined
[01:14] *** benchable6 joined
[01:15] *** bisectable6 joined
[01:15] *** reportable6 joined
[01:15] *** unicodable6 joined
[01:15] *** releasable6 joined
[01:16] *** shareable6 joined
[02:14] *** nativecallable6 joined
[02:15] *** statisfiable6 joined
[02:16] *** linkable6 joined
[03:02] *** nine left
[03:02] *** nine joined
[03:14] *** coverable6 joined
[03:14] *** quotable6 joined
[03:15] *** notable6 joined
[04:15] *** sourceable6 joined
[06:00] *** reportable6 left
[07:55] *** frost joined
[08:02] *** frost left
[08:34] *** MasterDuke joined
[08:40] <lizmat> Files=1351, Tests=117115, 301 wallclock secs (36.15 usr  9.93 sys + 4175.40 cusr 336.99 csys = 4558.47 CPU)

[09:35] <jdv> mornin

[09:41] <MasterDuke> jdv: i just merged and bumped a nativecall fix last night. are you able to do another blin run before the release?

[09:50] <jdv> sure

[09:52] <jdv> not that it matters much but whoever manages releasable6 might want to look into why it thinks github is down.

[09:53] <MasterDuke> huh, github was down yesterday, but then came back up

[09:59] *** sena_kun left
[10:00] *** reportable6 joined
[10:01] *** sena_kun joined
[10:02] <jdv> uh, looks like its more serious - blin can't get a build...

[10:04] <jdv> https://gist.github.com/jdv/680a5c337f45afa6eb530d60b3737989

[10:04] <jdv> who manages the whateverable stuff?

[10:05] *** MasterDuke left
[10:26] *** frost joined
[10:27] *** Xliff joined
[10:29] *** MasterDuke joined
[10:29] <jdv> i guess the release is "on hold" until a blin run can happen

[10:29] <lizmat> :(

[10:30] <jdv> its always something:)

[10:33] <MasterDuke> i think i saw something about 'no space left on device' in a recent releaseable backtrace

[10:33] <MasterDuke> AlexDaniel: ping

[10:36] *** frost left
[11:10] <lizmat> nine ugexe is there a reason why we just shouldn't install a module, then test, and uninstall again if test failed ?

[11:31] *** ggoebel joined
[11:38] <ugexe> for one because it changes runtime behavior of existing code that may get run

[11:42] <ugexe> installing a module may do that either way yea, but unavoidable. but the uninstall after makes figuring out what blew up your production systems pretty difficul

[11:43] <ugexe> it also implies `zef test .` would need to install all your modules to test your code in a way that is consistent with `zef install .`

[11:44] <Geth> Â¦ Test-Stream/master: 6 commits pushed by (JJ Merelo)++

[11:44] <Geth> Â¦ Test-Stream/master: 0fb3613717 | Adds license, refs #1

[11:44] <Geth> Â¦ Test-Stream/master: 6b58e4186b | :see_no_evil: really add license #1

[11:44] <Geth> Â¦ Test-Stream/master: 56840c3291 | Fixed module paths, closes #2

[11:44] <Geth> Â¦ Test-Stream/master: f589d21523 | License added and mentioned, closes #1

[11:44] <Geth> Â¦ Test-Stream/master: 78e668ae53 | Fixes type unmatches refs #3

[11:44] <Geth> Â¦ Test-Stream/master: 49596d90f0 | Working towards #3

[11:44] <Geth> Â¦ Test-Stream/master: review: https://github.com/raku-community-modules/Test-Stream/compare/0465ea8b04d0...49596d90f07f

[11:44] <ugexe> CURS exists to solve these problems, but doesnt work for non default repos (and maybe only site at all)

[11:45] <lizmat> but we don't use that yet in zef, right ?

[11:47] <ugexe> i've had a branch using CURS for maybe a year now. but as i've said it only really works for one very specific workflow, and that workflow is different enough for the workflow used for everything else that it wouldn't make sense to implement both and pick one conditionally

[11:48] <lizmat> question: is this statement correct:  before installing a distribution, we do not know the internal dependencies between the use targets of that distribution.  *after* pre-compilation we *do* know, but all internal references are just sha's that cannot be traced back (easily) to the original use targets ?

[11:49] <ugexe> there can also be runtime dependencies

[11:50] <lizmat> well, I guess .install not doing pre-compilation, would turn everything into runtime dependencies, would it not ?

[11:51] *** Altai-man joined
[11:52] <ugexe> not sure, because the `use` statements are still occuring before all `require ::($foo)`

[11:55] <lizmat> Hmmm... how about "zef test" without any additional parameters, run the tests without "-I" statement ?

[11:59] <lizmat> could you just move binary files from a CURS to a CURI ?

[11:59] <ugexe> it'd have to be a bit more complex to be generally useful... like running the tests while hiding the lib/ folder

[11:59] <lizmat> would the shas still match ?

[11:59] <ugexe> since because will `use lib "lib"`

[12:00] *** reportable6 left
[12:00] <lizmat> well, people should not use any "lib" inside a test file

[12:00] <ugexe> i agree, and doing what i said would expose that

[12:00] <lizmat> unless it is to be able to load other modules with test functionality

[12:01] <ugexe> if we don't hide lib/ then the test itself is adding back in a CURFS that will prevent the CURI code from loading

[12:01] <lizmat> right

[12:02] *** reportable6 joined
[12:02] <ugexe> sure. but technically CURS does the same thing, but better

[12:02] <lizmat> and "use lib" is a pragma  

[12:02] <ugexe> s/technically/theoretically/

[12:03] <lizmat> well  theoretically, atm it is just a small shim around CURI is it not ?

[12:04] <lizmat> and afaics, the short-id of CURS is part of the sha, so any sha would not be usable inside a CURI

[12:04] <ugexe> all its doing is extending whatever its target repo is to another location (so new modules can live in a different path but be treated as being in e.g. site) 

[12:04] <lizmat> right

[12:08] <ugexe> it doesn't need to be much more

[12:08] *** Altai-man left
[12:11] *** Altai-man joined
[12:11] <lizmat> hmmm...  if Staging could provide a map of use-target -> sha it created, wouldn't we be able to create a Staging sha -> Installation sha mapping ?

[12:15] <nine> The SHAs are the same. Otherwise this would make the whole point of Staging moot. It is explicitly intended so you can take the generated files and drop them into a CURI and everything just works.

[12:15] <nine> Because that's what RPM packaging a Raku module does: install into a temporary Staging location, zip up the files and on installation of the RPM package just extract them onto the file system

[12:17] <nine> ugexe: in which use cases does it not work?

[12:17] <ugexe> installing to non default locations

[12:17] <nine> Well it can only work for named repos (home, site, vendor, core), so much is clear

[12:18] <nine> I wonder....could we give non-default location repos a name?

[12:19] <nine> Even a generated one like custom:/path/to/repo

[12:20] <ugexe> you must mean nqp::sha1(custom:path/to/repo)

[12:20] <ugexe> because why not

[12:20] <nine> Embrace the SHA!

[12:21] <ugexe> but yeah i *think* i tried doing exactly that the one time i tried to get CURS to work with non named repos

[12:21] <ugexe> i dont remember learning if it would actually work or not though

[12:28] <ugexe> although its name would still need to match for the repo its shadowing

[12:29] <ugexe> or so i think

[12:30] <nine> Of course, but zef knows what repo it's shadowing and can generate the appropriate name

[12:30] <nine> Or even ask the repo directly

[12:30] <nine> After all the name is a public property of the CURI

[12:31] <ugexe> https://github.com/ugexe/zef/commit/a35016c2a8622791a83024a6170879fdda736356#diff-ce8c28f9dea1b3a9564d014c152d6d9b424f55715ee6ab3bb87c84f559824709R957-R961

[12:32] <nine> exactly

[13:07] *** ggoebel left
[15:01] *** ggoebel joined
[15:11] *** Util left
[15:24] *** discord-raku-bot left
[15:25] *** discord-raku-bot joined
[15:36] *** ggoebel left
[15:43] <jdv> at this point it's approaching the end of my availability window to get a release done today:(

[15:45] <jdv> next window for me is sunday so aiming for that now.

[15:47] *** ggoebel joined
[15:52] <MasterDuke> unfortunately i can't find my login info for his server, so we'll have to wait until AlexDaniel can take a look

[16:21] *** ggoebel left
[16:21] *** ggoebel joined
[16:48] <Geth> Â¦ Test-Stream: a5b2a2d62b | (JJ Merelo)++ | t/400-tap-formatter.t

[16:48] <Geth> Â¦ Test-Stream: Eliminated tests until we understand what they do

[16:48] <Geth> Â¦ Test-Stream: review: https://github.com/raku-community-modules/Test-Stream/commit/a5b2a2d62b

[17:15] *** Kaiepi left
[17:49] <AlexDaniel> Just ran out of space on the server for a brief moment, all back to normal now I hope

[17:50] <AlexDaniel> Ping me if any bots are unhappy

[17:51] <lizmat> AlexDaniel++

[17:53] <Altai-man> AlexDaniel++

[17:58] <AlexDaniel> Ahh, I didn't see MasterDuke's messages because, well ... my server was out of space

[17:59] <AlexDaniel> And I also can't read them because colabti is not recording the logs anymore?

[17:59] <AlexDaniel> Ok, how did you know what was the issue, which bot complained?

[18:00] <AlexDaniel> .tell lizmat test

[18:00] <AlexDaniel> .seen lizmat

[18:00] <lizmat> .

[18:00] <AlexDaniel> Hmmm

[18:02] *** Kaiepi joined
[18:04] <AlexDaniel> Ugh ðŸ˜©

[18:04] <AlexDaniel> Tellable ate it's own files again

[18:04] <AlexDaniel> That's not good

[18:05] <AlexDaniel> Ok good luck to me to restore that... :'(

[18:07] <AlexDaniel> Basically, it runs out of space, tries to write the files, writes them partially and runs out of space

[18:07] <AlexDaniel> There's a reason it was called FootgunDB I guess

[18:07] <AlexDaniel> OK I need to run now, later tonight I'll see what's the closest backup

[18:08] *** reportable6 left
[18:10] *** Altai-man left
[18:10] *** reportable6 joined
[19:24] <Geth> Â¦ Test-Stream/master: 4 commits pushed by (JJ Merelo)++

[19:24] <Geth> Â¦ Test-Stream/master: c70024cfc8 | Eliminated some tests until I figure out what's wrong

[19:24] <Geth> Â¦ Test-Stream/master: 3f71ef8b8b | Putting a CR again because tests are brittle

[19:24] <Geth> Â¦ Test-Stream/master: 30e8e3b385 | :arrow_up: to release #1

[19:24] <Geth> Â¦ Test-Stream/master: cc3d04a46d | Add CI :white_check_mark:

[19:24] <Geth> Â¦ Test-Stream/master: review: https://github.com/raku-community-modules/Test-Stream/compare/a5b2a2d62b33...cc3d04a46d20

[19:30] <Geth> Â¦ Test-Stream: e39dab7ea8 | (JJ Merelo)++ | META6.json

[19:30] <Geth> Â¦ Test-Stream: Fixes :poop:

[19:30] <Geth> Â¦ Test-Stream: review: https://github.com/raku-community-modules/Test-Stream/commit/e39dab7ea8

[19:39] <Geth> Â¦ Test-Stream: a2d0374304 | (JJ Merelo)++ | README.md

[19:39] <Geth> Â¦ Test-Stream: Badge up

[19:39] <Geth> Â¦ Test-Stream: review: https://github.com/raku-community-modules/Test-Stream/commit/a2d0374304

[20:32] *** Util joined
[21:25] *** discord-raku-bot left
[21:25] *** discord-raku-bot joined
