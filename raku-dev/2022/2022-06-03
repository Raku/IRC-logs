[00:08] *** reportable6 left
[00:09] *** reportable6 joined
[00:41] *** ggoebel left
[00:51] *** ggoebel joined
[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: 4e56f241d8 | (Elizabeth Mattijsen)++ (committed by Vadim Belman) | src/core.c/ThreadPoolScheduler.pm6

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: Add :max_threads(*|Inf) as option to ThreadPoolScheduler

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: 

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: For those of us brave enough to not want to be stopped by a maximum

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: number of OS threads.  Specifying * or Inf will internally store the

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: value 9223372036854775807 (aka the current maximum value for an uint

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: attribute).  The accessor will return Inf if this value is found.

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: review: https://github.com/rakudo/rakudo/commit/4e56f241d8

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: 49172cb140 | (Vadim Belman)++ | src/core.c/ThreadPoolScheduler.pm6

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: Support for setting unlimited max_threads from environment

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: 

[01:31] <Geth> ¦ rakudo/vrurg-unlimited-threads: Extending PR #4941.

[01:32] <Geth> ¦ rakudo/vrurg-unlimited-threads: 

[01:32] <Geth> ¦ rakudo/vrurg-unlimited-threads: Aside of just setting `$!max_threads` to a specific number via

[01:32] <Geth> ¦ rakudo/vrurg-unlimited-threads: `RAKUDO_MAX_THREADS` environment variable the following special cases

[01:32] <Geth> ¦ rakudo/vrurg-unlimited-threads: are now supported too:

[01:32] <Geth> ¦ rakudo/vrurg-unlimited-threads: <…commit message has 23 more lines…>

[01:32] <Geth> ¦ rakudo/vrurg-unlimited-threads: review: https://github.com/rakudo/rakudo/commit/49172cb140

[01:35] <Geth> ¦ rakudo: vrurg++ created pull request #4941: Allow setting ThreadPoolScheduler's max_threads to semi-infinite value

[01:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4941

[01:35] <Geth> ¦ rakudo/vrurg-unlimited-threads: b0ebb5e610 | (Vadim Belman)++ | src/core.c/ThreadPoolScheduler.pm6

[01:35] <Geth> ¦ rakudo/vrurg-unlimited-threads: Support for setting unlimited max_threads from environment

[01:35] <Geth> ¦ rakudo/vrurg-unlimited-threads: 

[01:35] <Geth> ¦ rakudo/vrurg-unlimited-threads: Extending PR #4931.

[01:35] <Geth> ¦ rakudo/vrurg-unlimited-threads: 

[01:35] <Geth> ¦ rakudo/vrurg-unlimited-threads: Aside of just setting `$!max_threads` to a specific number via

[01:35] <Geth> ¦ rakudo/vrurg-unlimited-threads: `RAKUDO_MAX_THREADS` environment variable the following special cases

[01:35] <Geth> ¦ rakudo/vrurg-unlimited-threads: are now supported too:

[01:36] <Geth> ¦ rakudo/vrurg-unlimited-threads: <…commit message has 23 more lines…>

[01:36] <Geth> ¦ rakudo/vrurg-unlimited-threads: review: https://github.com/rakudo/rakudo/commit/b0ebb5e610

[01:49] *** Kaiepi left
[02:02] *** ggoebel left
[03:08] *** Kaiepi joined
[04:08] *** bisectable6 left
[04:08] *** reportable6 left
[04:08] *** bloatable6 left
[04:08] *** unicodable6 left
[04:08] *** sourceable6 left
[04:08] *** committable6 left
[04:08] *** notable6 left
[04:08] *** evalable6 left
[04:08] *** benchable6 left
[04:08] *** shareable6 left
[04:08] *** nativecallable6 left
[04:08] *** greppable6 left
[04:08] *** releasable6 left
[04:08] *** tellable6 left
[04:08] *** coverable6 left
[04:08] *** linkable6 left
[04:08] *** quotable6 left
[04:08] *** statisfiable6 left
[04:09] *** sourceable6 joined
[04:09] *** coverable6 joined
[04:09] *** quotable6 joined
[04:09] *** unicodable6 joined
[04:09] *** benchable6 joined
[04:09] *** statisfiable6 joined
[04:09] *** greppable6 joined
[04:10] *** releasable6 joined
[04:10] *** tellable6 joined
[04:10] *** shareable6 joined
[04:10] *** nativecallable6 joined
[04:11] *** linkable6 joined
[04:11] *** evalable6 joined
[04:11] *** bloatable6 joined
[04:11] *** notable6 joined
[04:11] *** bisectable6 joined
[04:11] *** reportable6 joined
[04:12] *** committable6 joined
[05:12] *** unicodable6 left
[05:12] *** coverable6 left
[05:12] *** greppable6 left
[05:12] *** benchable6 left
[05:12] *** bisectable6 left
[05:12] *** committable6 left
[05:12] *** shareable6 left
[05:12] *** releasable6 left
[05:12] *** evalable6 left
[05:12] *** bloatable6 left
[05:12] *** tellable6 left
[05:12] *** quotable6 left
[05:12] *** linkable6 left
[05:12] *** reportable6 left
[05:12] *** sourceable6 left
[05:12] *** notable6 left
[05:12] *** nativecallable6 left
[05:12] *** statisfiable6 left
[05:12] *** nativecallable6 joined
[05:12] *** benchable6 joined
[05:12] *** committable6 joined
[05:12] *** bisectable6 joined
[05:12] *** bloatable6 joined
[05:12] *** quotable6 joined
[05:13] *** linkable6 joined
[05:13] *** evalable6 joined
[05:13] *** shareable6 joined
[05:14] *** tellable6 joined
[05:14] *** notable6 joined
[05:14] *** reportable6 joined
[05:14] *** coverable6 joined
[05:14] *** greppable6 joined
[05:14] *** releasable6 joined
[05:15] *** unicodable6 joined
[05:15] *** statisfiable6 joined
[05:15] *** sourceable6 joined
[06:04] *** Kaiepi left
[06:07] *** reportable6 left
[06:09] *** reportable6 joined
[06:24] *** japhb joined
[06:41] *** lizmat joined
[07:00] <releasable6> Next release in ≈2 days and ≈11 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[10:37] <dogbert17> lizmat: are you still happy with your M1 Mac Mini or have any problems surfaced?

[10:58] <dogbert17> I was a bit interested in the performance of test-t now that you have a faster CPU but no jit

[11:23] *** ggoebel joined
[11:25] <lizmat> dogbert17: old MBP / new MacMini:   .867 / .837

[11:28] <lizmat> the version with 200K lines:  11.476 / 12.791

[11:28] <lizmat> so I'd say for longer running processes, the JIT still makes a difference

[11:29] <lizmat> with JIT disabled on the old MBP: 1.26

[11:30] <lizmat> m: say .867 / 1.26

[11:30] <camelia> rakudo-moar ab8ef0bfc: OUTPUT: «0.688095␤»

[11:30] <lizmat> m: say 1.26 / .867

[11:30] <camelia> rakudo-moar ab8ef0bfc: OUTPUT: «1.453287␤»

[11:30] <lizmat> so the JIT makes the 10K ine about 45% faster

[11:31] <lizmat> for the 200K version:

[11:32] <lizmat> m: say 19.92 / 11.476

[11:32] <camelia> rakudo-moar ab8ef0bfc: OUTPUT: «1.735796␤»

[11:32] <lizmat> 70% faster or the 200K version

[12:03] *** Kaiepi joined
[12:06] *** reportable6 left
[12:07] *** reportable6 joined
[12:36] <dogbert17> interesting stats

[12:38] *** MasterDuke joined
[13:16] *** ggoebel left
[13:16] *** ggoebel_ joined
[13:37] <vrurg> greppable6: initial_threads

[13:37] <greppable6> vrurg, 5 lines, 4 modules: https://gist.github.com/22d4da0d466bc021f784819308f51883

[14:03] *** ggoebel_ left
[14:14] *** lizmat left
[14:29] <Geth> ¦ rakudo/vrurg-unlimited-threads: febff8fb7c | (Vadim Belman)++ | src/core.c/ThreadPoolScheduler.pm6

[14:29] <Geth> ¦ rakudo/vrurg-unlimited-threads: Fix JVM build

[14:29] <Geth> ¦ rakudo/vrurg-unlimited-threads: 

[14:29] <Geth> ¦ rakudo/vrurg-unlimited-threads: This would be more correct approach for MoarVM backend too.

[14:29] <Geth> ¦ rakudo/vrurg-unlimited-threads: 

[14:29] <Geth> ¦ rakudo/vrurg-unlimited-threads: - Removed `$.initial_threads` attribute because it is only used at the

[14:29] <Geth> ¦ rakudo/vrurg-unlimited-threads:   construction stage and is not needed otherwise.

[14:29] <Geth> ¦ rakudo/vrurg-unlimited-threads: review: https://github.com/rakudo/rakudo/commit/febff8fb7c

[15:30] *** ggoebel_ joined
[15:41] *** ggoebel_ left
[16:19] *** ggoebel_ joined
[16:30] *** ggoebel_ left
[17:25] *** lizmat joined
[17:25] *** ggoebel_ joined
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[20:32] *** japhb left
[21:00] <Geth> ¦ rakudo/master: 4 commits pushed by (Elizabeth Mattijsen)++, (Vadim Belman)++

[21:00] <Geth> ¦ rakudo/master: 4e56f241d8 | Add :max_threads(*|Inf) as option to ThreadPoolScheduler

[21:00] <Geth> ¦ rakudo/master: b0ebb5e610 | Support for setting unlimited max_threads from environment

[21:00] <Geth> ¦ rakudo/master: febff8fb7c | Fix JVM build

[21:00] <Geth> ¦ rakudo/master: 77bc030475 | Merge pull request #4941 from rakudo/vrurg-unlimited-threads

[21:00] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/ab8ef0bfce0c...77bc030475cf

[21:48] *** lizmat left
[22:48] *** unicodable6 left
[22:48] *** coverable6 left
[22:48] *** notable6 left
[22:48] *** nativecallable6 left
[22:48] *** sourceable6 left
[22:48] *** evalable6 left
[22:48] *** releasable6 left
[22:48] *** committable6 left
[22:48] *** tellable6 left
[22:48] *** bisectable6 left
[22:48] *** benchable6 left
[22:48] *** linkable6 left
[22:48] *** reportable6 left
[22:48] *** statisfiable6 left
[22:48] *** bloatable6 left
[22:48] *** quotable6 left
[22:48] *** shareable6 left
[22:48] *** greppable6 left
[22:49] *** evalable6 joined
[22:49] *** unicodable6 joined
[22:49] *** linkable6 joined
[22:49] *** benchable6 joined
[22:50] *** bloatable6 joined
[22:50] *** releasable6 joined
[22:50] *** quotable6 joined
[22:50] *** sourceable6 joined
[22:50] *** bisectable6 joined
[22:50] *** greppable6 joined
[22:51] *** reportable6 joined
[22:51] *** notable6 joined
[22:51] *** committable6 joined
[22:51] *** tellable6 joined
[22:51] *** nativecallable6 joined
[22:51] *** coverable6 joined
[22:51] *** statisfiable6 joined
[22:51] *** shareable6 joined
