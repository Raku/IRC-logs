[00:08] *** reportable6 left
[00:09] *** reportable6 joined
[00:18] <SmokeMachine> vrurg: thanks!

[00:21] <jdv> i did a blin y'day and it was slim/clean

[00:21] <tellable6> 2022-02-16T02:42:27Z #raku-dev <vrurg> jdv do you know if Blin runs against zef ecosystem modules? I just realized that Config::BINDish must be failing for as long back as since 2021.10. But it's never been reported.

[00:21] <jdv> vrurg: i do not

[00:25] <jdv> MasterDuke: https://github.com/rakudo/rakudo/issues/4811

[00:32] <jdv> vrurg: it appears blin only looks at p6c.  i'll look into "fixing that

[00:32] <jdv> "

[00:33] <jdv> no, that's wrong.  it should be including all ecos.

[00:34] <vrurg> jdv: Looks like it. I think I found the cause of my problem later.

[00:35] <vrurg> With regard to blin, it looks like there're a couple of issues with the today's NQP bump.

[00:35] <jdv> it likely ends up in "AlwaysFail" - just a count though tere

[00:38] <jdv> ok.  i'll do another run.  can't run it for every change.  sometimes it takes many hours...

[00:41] <vrurg> I'll see if I can do it on my side.

[00:43] <jdv> started.  best case ~2h.  could be up to 9h ime so far.

[00:48] <vrurg> Maybe next time I could do it myself. Last time I tried it behaved strange and I haven't tried anymore.

[00:55] <jdv> cool.  i had a few tweaks in my build cause some things were broken.

[00:55] <jdv> i'll try to get that ironed out soon 

[00:56] <jdv> s/had/have/

[02:04] <vrurg> Ah, now I remember what was it wrong for me. Nearly every module is marked as "AlwaysFail". :(

[02:24] *** djinni` left
[02:41] *** djinni` joined
[03:01] <jdv> vrurg: https://github.com/rakudo/rakudo/issues/4813

[03:01] <jdv> nite

[03:41] *** evalable6 left
[03:41] *** linkable6 left
[03:42] *** evalable6 joined
[04:42] *** bloatable6 left
[04:42] *** benchable6 left
[04:42] *** squashable6 left
[04:42] *** evalable6 left
[04:42] *** coverable6 left
[04:42] *** nativecallable6 left
[04:42] *** sourceable6 left
[04:42] *** statisfiable6 left
[04:42] *** committable6 left
[04:42] *** unicodable6 left
[04:42] *** shareable6 left
[04:42] *** notable6 left
[04:42] *** bisectable6 left
[04:42] *** releasable6 left
[04:42] *** tellable6 left
[04:42] *** reportable6 left
[04:43] *** releasable6 joined
[04:44] *** bisectable6 joined
[04:44] *** reportable6 joined
[04:44] *** squashable6 joined
[04:44] *** unicodable6 joined
[05:43] *** tellable6 joined
[05:43] *** notable6 joined
[05:44] *** linkable6 joined
[05:44] *** sourceable6 joined
[05:44] *** shareable6 joined
[05:44] *** committable6 joined
[05:45] *** benchable6 joined
[06:43] *** evalable6 joined
[06:43] *** nativecallable6 joined
[06:44] *** bloatable6 joined
[06:45] *** statisfiable6 joined
[07:45] *** coverable6 joined
[08:11] *** Shane__ left
[08:21] *** frost joined
[08:58] <MasterDuke> jdv: thanks

[09:15] <Geth> ¦ nqp: 83d86b3f6e | (Daniel Green)++ | tools/templates/MOAR_REVISION

[09:15] <Geth> ¦ nqp: Bump MoarVM for more unsigned fixes

[09:15] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/83d86b3f6e

[09:16] <Geth> ¦ rakudo: 430d3dd423 | (Daniel Green)++ | tools/templates/NQP_REVISION

[09:16] <Geth> ¦ rakudo: Bump NQP for more unsigned fixes

[09:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/430d3dd423

[09:20] *** discord-raku-bot left
[09:31] *** discord-raku-bot joined
[09:39] *** discord-raku-bot left
[09:39] *** discord-raku-bot joined
[10:59] <Geth> ¦ rakudo: 6383014298 | (Elizabeth Mattijsen)++ | 2 files

[10:59] <Geth> ¦ rakudo: Fix issue with native array.splice

[10:59] <Geth> ¦ rakudo: 

[10:59] <Geth> ¦ rakudo: Spotted in blin run

[10:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6383014298

[12:27] *** evalable6 left
[12:27] *** linkable6 left
[12:56] *** Kaipi left
[12:59] *** Kaipi joined
[13:08] *** frost left
[13:27] *** evalable6 joined
[13:30] *** linkable6 joined
[13:46] *** frost joined
[13:50] <Geth> ¦ rakudo: 6d04cc395b | (Elizabeth Mattijsen)++ | 3 files

[13:50] <Geth> ¦ rakudo: Fix issue with Net::Curl

[13:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6d04cc395b

[14:07] *** frost left
[15:49] *** evalable6 left
[15:49] *** linkable6 left
[15:49] *** evalable6 joined
[15:51] *** linkable6 joined
[16:01] *** melezhik joined
[16:02] <melezhik> lizmat I am talking about average time for ado build testspec which is about 20-25 minutes now - https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=2389&view=logs&j=176c5e73-58fc-5e11-dd47-dbb5da07635c&t=5a34e01d-60c7-58a0-5553-da324385256b

[16:02] <melezhik> Files=1351, Tests=117115, 1336 wallclock secs (28.78 usr  5.63 sys + 2318.16 cusr 180.80 csys = 2533.37 CPU)

[16:03] <melezhik> if one run test spec on their more powerful machine of course the time could be less, but for ado build it's about 20 minutes or more now

[16:04] <melezhik> https://github.com/melezhik/fastspec aims to beat that to maybe 10 minutes a build maybe even less, I am working on this right now

[16:05] <melezhik> basically the idea to run test spec in parallel  on sparky cluster - https://github.com/melezhik/fastspec/blob/master/sparky/fastspec/sparrowfile#L24-L47 splitting tests by chunks and run every chunk in parrallel

[16:06] <melezhik> sparky would use azure container instance with per seconds price  - https://github.com/melezhik/fastspec/blob/master/price.txt

[16:06] <melezhik> sparky would run all required instance in cluster, run tests on them and them kill them - https://github.com/melezhik/fastspec/blob/master/sparrowfile#L15

[16:07] <melezhik> https://github.com/melezhik/fastspec/blob/master/sparky/fastspec/sparrowfile#L98

[16:07] <melezhik> I am prototyping right now, I maybe will be able to show something in the next week or so

[16:08] <melezhik> here is another link - https://azure.microsoft.com/en-us/pricing/details/container-instances/

[16:09] <melezhik> I know that Ado uses linux VMs of 7GB with 2 cores

[16:23] *** melezhik left
[16:34] <Geth> ¦ rakudo: f1eccb396f | Coke++ | docs/windows.md

[16:34] <Geth> ¦ rakudo: Note mimalloc issue in windows config

[16:34] <Geth> ¦ rakudo: 

[16:34] <Geth> ¦ rakudo: Also, remove unneeded specification of tools (config defaults things correctly)

[16:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f1eccb396f

[16:36] <MasterDuke> [Coke]: that should be `--no-mimalloc` (note the '-')

[16:57] <[Coke]> bah

[16:58] <Geth> ¦ rakudo: 3bde138cbb | Coke++ | docs/windows.md

[16:58] <Geth> ¦ rakudo: fix typo

[16:58] <Geth> ¦ rakudo: 

[16:58] <Geth> ¦ rakudo: MasterDuke++

[16:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3bde138cbb

[16:58] <[Coke]> Thanks!

[16:58] <MasterDuke> np

[18:19] *** discord-raku-bot left
[18:37] <[Tux]> Rakudo v2022.02-98-g3bde138cb (v6.d) on MoarVM 2022.02-36-ga1a45e57e

[18:37] <[Tux]> csv-test-xs-20      0.413 -  0.414

[18:37] <[Tux]> csv-ip5xs           0.830 -  0.846

[18:37] <[Tux]> test-t --race       0.981 -  1.135

[18:37] <[Tux]> test-t              1.477 -  1.528

[18:37] <[Tux]> csv-parser          3.464 -  3.665

[18:37] <[Tux]> csv-ip5xs-20        5.198 -  5.397

[18:37] <[Tux]> test                6.449 -  6.690

[18:37] <[Tux]> test-t-20 --race    6.919 -  7.361

[18:37] <[Tux]> test-t-20          21.112 - 21.554

[19:07] <lizmat> m: my $a; my $b is default(42); ($a,$b) = "foo".split(":"); say $b

[19:07] <camelia> rakudo-moar 3bde138cb: OUTPUT: «42␤»

[19:07] <lizmat> m: my $a; my $b is default(42); ($a,$b) = "foo".split(":"); say $b

[19:07] <camelia> rakudo-moar 3bde138cb: OUTPUT: «42␤»

[19:07] <lizmat> m: my ($a, $b is default(42)) = "foo".split(":"); say $b

[19:07] <camelia> rakudo-moar 3bde138cb: OUTPUT: «(Any)␤»

[19:07] <lizmat> shouldn't those need to be equivalent ?

[19:07] *** ShaneC joined
[19:15] *** [Coke] left
[19:17] *** [Coke] joined
[19:31] *** discord-raku-bot joined
[20:28] *** ShaneC left
[20:28] *** ShaneC joined
[22:07] *** notna joined
[22:16] *** notna left
[23:41] *** leont left
[23:42] *** leont joined
[23:43] *** [Tux] left
[23:43] *** AlexDaniel left
[23:55] *** [Tux] joined
[23:56] *** AlexDaniel joined
