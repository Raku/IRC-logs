[00:06] *** reportable6 left
[01:06] *** benchable6 left
[01:06] *** greppable6 left
[01:06] *** committable6 left
[01:06] *** bisectable6 left
[01:06] *** nativecallable6 left
[01:06] *** statisfiable6 left
[01:06] *** squashable6 left
[01:06] *** unicodable6 left
[01:06] *** sourceable6 left
[01:06] *** linkable6 left
[01:06] *** quotable6 left
[01:06] *** evalable6 left
[01:06] *** shareable6 left
[01:06] *** tellable6 left
[01:06] *** coverable6 left
[01:06] *** notable6 left
[01:06] *** releasable6 left
[01:06] *** bloatable6 left
[01:07] *** releasable6 joined
[01:08] *** notable6 joined
[01:08] *** evalable6 joined
[01:08] *** benchable6 joined
[01:08] *** linkable6 joined
[01:08] *** greppable6 joined
[01:10] *** sourceable6 joined
[01:27] *** frost joined
[01:47] *** frost left
[01:50] *** frost joined
[02:06] *** frost left
[02:07] *** shareable6 joined
[02:07] *** statisfiable6 joined
[02:08] *** squashable6 joined
[02:08] *** frost joined
[02:08] *** bloatable6 joined
[02:08] *** reportable6 joined
[02:09] *** nativecallable6 joined
[02:13] *** frost left
[02:59] *** frost joined
[03:07] *** coverable6 joined
[03:07] *** quotable6 joined
[04:07] *** linkable6 left
[04:07] *** releasable6 left
[04:07] *** notable6 left
[04:07] *** greppable6 left
[04:07] *** sourceable6 left
[04:07] *** benchable6 left
[04:07] *** evalable6 left
[04:07] *** nativecallable6 left
[04:07] *** bloatable6 left
[04:07] *** quotable6 left
[04:07] *** coverable6 left
[04:07] *** squashable6 left
[04:07] *** reportable6 left
[04:07] *** statisfiable6 left
[04:07] *** shareable6 left
[04:08] *** quotable6 joined
[04:08] *** nativecallable6 joined
[04:08] *** shareable6 joined
[04:09] *** notable6 joined
[04:09] *** statisfiable6 joined
[04:09] *** unicodable6 joined
[04:09] *** tellable6 joined
[04:09] *** committable6 joined
[04:10] *** sourceable6 joined
[05:08] *** releasable6 joined
[05:08] *** bloatable6 joined
[05:09] *** greppable6 joined
[05:09] *** reportable6 joined
[05:11] *** squashable6 joined
[05:13] <japhb> Red failure bisecting is getting close.  rakudo-moar-2022.02-24-gb67d38c4e : PASS, rakudo-moar-2021.12-206-gdf09bef0b (first commit on branch) : PASS, rakudo-moar-2022.02-27-gfafcca315 (merge commit) : FAIL

[05:13] <japhb> Building the remaining commit on the branch now.

[05:50] <japhb> Looks like I found it.  rakudo-moar-2021.12-207-gc50f51f95 : FAIL

[05:50] <japhb> vrurg: ^^

[05:51] <japhb> This commit is the first on which Red won't build anymore.

[06:08] *** reportable6 left
[06:08] *** linkable6 joined
[06:58] *** squashable6 left
[07:07] *** bisectable6 joined
[07:47] *** discord-raku-bot left
[07:47] *** discord-raku-bot joined
[07:59] *** squashable6 joined
[08:10] *** benchable6 joined
[08:10] *** evalable6 joined
[08:11] *** reportable6 joined
[08:12] *** Shane__ left
[09:01] <lizmat> Files=1351, Tests=117115, 297 wallclock secs (35.35 usr  9.93 sys + 4115.01 cusr 335.79 csys = 4496.08 CPU)

[09:35] <Geth> ¦ nqp: 6a1c69981f | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[09:35] <Geth> ¦ nqp: Bump MoarVM to get unsigned int spesh fixes

[09:35] <Geth> ¦ nqp: 

[09:35] <Geth> ¦ nqp: MasterDuke++

[09:35] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/6a1c69981f

[09:49] <Geth> ¦ rakudo: 54f98fd76c | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[09:49] <Geth> ¦ rakudo: Bump NQP to get MoarVM unsigned int spesh fixes

[09:49] <Geth> ¦ rakudo: 

[09:49] <Geth> ¦ rakudo: MasterDuke++

[09:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/54f98fd76c

[10:09] *** coverable6 joined
[11:09] *** evalable6 left
[11:09] *** linkable6 left
[11:11] *** linkable6 joined
[11:25] <nine> releasable6: status

[11:25] <releasable6> nine, Next release in ≈11 days and ≈7 hours. There are no known blockers. Changelog for this release was not started yet

[11:25] <releasable6> nine, Details: https://gist.github.com/fb5e454a142694f1fa395dc7456ae141

[12:06] *** reportable6 left
[12:10] *** evalable6 joined
[12:44] <Geth> ¦ nqp: 0fd161cdc4 | (Stefan Seifert)++ | 3 files

[12:44] <Geth> ¦ nqp: Fix all returned native integers getting treated as signed

[12:44] <Geth> ¦ nqp: 

[12:44] <Geth> ¦ nqp: Use the new ops for dispatching with unsigned result and returning native

[12:44] <Geth> ¦ nqp: unsinged integers on MoarVM

[12:44] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/0fd161cdc4

[12:44] <Geth> ¦ nqp: 096fa9929c | niner++ (committed using GitHub Web editor) | 3 files

[12:44] <Geth> ¦ nqp: Merge pull request #767 from Raku/fix_all_returned_native_integers_getting_treated_as_signed

[12:44] <Geth> ¦ nqp: 

[12:44] <Geth> ¦ nqp: Fix all returned native integers getting treated as signed

[12:44] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/096fa9929c

[12:49] *** TempIRCLogger joined
[12:58] *** squashable6 left
[13:09] *** reportable6 joined
[13:10] <Geth> ¦ rakudo: 0831a3b5fd | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[13:10] <Geth> ¦ rakudo: Bump NQP to get returned unsigned int fix

[13:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0831a3b5fd

[13:54] *** frost left
[13:54] <lizmat> notable6: weekly

[13:54] <notable6> lizmat, 4 notes: https://gist.github.com/7a52d7f175791d7edb6b5fc821c1f532

[14:14] <lizmat> notable6: weekly reset

[14:14] <notable6> lizmat, Moved existing notes to “weekly_2022-03-07T14:14:26Z”

[14:26] <vrurg> japhb: can you elaborate on the problem with Red? An issue would be the best.

[14:36] <japhb> Sure, give me a few

[14:45] <japhb> vrurg: https://github.com/rakudo/rakudo/issues/4809

[14:48] <vrurg> japhb: thanks, will try to have a look when have time. BTW, don't format commit hashes, github makes them convenient links.

[14:48] <japhb> D'oh!  Should have assumed that

[14:54] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/03/07/2022-09-10-universally-promoted/

[14:58] <sena_kun> lizmat++

[15:00] *** squashable6 joined
[15:38] <vrurg> lizmat: correction: Log::Dispatch is a new module. I just had to bump its version two times. :)

[15:40] <lizmat> fixed!  vrurg++

[15:46] <vrurg> lizmat: thanks! And, most of all – for the dedication!

[15:47] <lizmat> you're welcome!

[15:47] <lizmat> afk for a few hours&

[18:01] *** Shane__ joined
[18:07] *** reportable6 left
[18:32] <[Tux]> Rakudo v2022.02-91-g0831a3b5f (v6.d) on MoarVM 2022.02-34-geb4480d88

[18:32] <[Tux]> csv-test-xs-20      0.422 -  0.438

[18:32] <[Tux]> csv-ip5xs           0.768 -  0.809

[18:32] <[Tux]> test-t --race       0.889 -  0.889

[18:32] <[Tux]> test-t              1.441 -  1.492

[18:32] <[Tux]> csv-parser          3.463 -  3.542

[18:32] <[Tux]> csv-ip5xs-20        5.053 -  5.121

[18:32] <[Tux]> test                6.988 -  7.383

[18:32] <[Tux]> test-t-20 --race    6.904 -  7.391

[18:32] <[Tux]> test-t-20          21.301 - 21.448

[18:32] <lizmat> pretty cool!

[18:41] <japhb> Woah!

[19:11] <SmokeMachine> my %column = :references, :model-name; say so(%column{<model-name model-type>.none}:exists) == so(%column{<model-name model-type>.all}:!exists) # is that expected to have changed to false? (that's breaking Red)

[19:11] <evalable6> SmokeMachine, rakudo-moar 0831a3b5f: OUTPUT: «False␤»

[19:13] <japhb> vrurg: ^^

[19:14] <vrurg> I saw, was about to type a reply.

[19:14] <vrurg> SmokeMachine: please, add to the issue.

[19:14] <japhb> Ah, sorry, didn't mean to jump the gun.  (And yeah, I asked him to ping the issue too.  ;-) )

[19:15] <japhb> *add to the issue

[19:15] <japhb> (Sorry, have been pinging so many people for $day-job today that I feel like a sonar station.)

[19:16] <vrurg> japhb: :D

[19:19] <vrurg> Hopefully, I could be able to take care of this as I have mounted so many postponed tasks that it starts affecting my mood. :(

[20:09] *** reportable6 joined
[20:55] <SmokeMachine> it seems there is something else wrong as well...

[20:56] <SmokeMachine> on 2021.12, raku -e 'say "yes" if (|<1 2 3>).any ~~ -> Any $_ { .HOW.?name($_) }' prints "yes"

[20:56] <SmokeMachine> m: say "yes" if (|<1 2 3>).any ~~ -> Any $_ { .HOW.?name($_) }

[20:56] <camelia> rakudo-moar 0831a3b5f: OUTPUT: «Cannot find method 'not' on object of type BOOTStr␤  in block <unit> at <tmp> line 1␤␤»

[21:13] *** Shane__ left
[21:35] <vrurg> SmokeMachine: I have replied to the issue. It actually works as it has to.

[21:38] <SmokeMachine> vrurg: yes, I agree that's a fix, thanks! What about this "new" one? ☝️ 

[21:38] <vrurg> Oh, I thought you're experimenting with that one... Trying not to get too deep as I'm tight on spare time. :(

[21:39] <SmokeMachine> vrurg: ok, thanks! :)

[21:40] <vrurg> SmokeMachine: BOOTStr must not leak, that's certainly a bug.

[21:40] <vrurg> But why .?name ?

[21:57] <vrurg> SmokeMachine: with .^name you wouldn't have the problem.

[21:58] <vrurg> But the question is why .?name doesn't hllize.

[21:58] <SmokeMachine> it wasn't name... I just used name for testing...

[21:59] <SmokeMachine> vrurg: this was my real case: https://github.com/FCO/Red/blob/master/lib/Red/Driver/CommonSQL.pm6#L780

[21:59] <vrurg> Then it looks like .? doesn't hllize if invoked on a NQP class though it has to.

[22:00] <SmokeMachine> sorry, that's after "fixed"...

[22:00] *** Shane__ joined
[22:01] <SmokeMachine> it was like this: https://github.com/FCO/Red/commit/f664df0a16d761c6631b09bd44fcc1bda31bd1e0#diff-7d6223d011d58b25774d68344def62859d3d82740aa563cb180352519a16b7d6L780

[22:03] <vrurg> SmokeMachine: why sorry? It's a bug, after all. 

[22:03] <SmokeMachine> I mean sorry because I sent the wrong link...

[22:05] <vrurg> Ah, ignore me then.

[22:05] <vrurg> ;)

[22:20] <SmokeMachine> :)

[22:27] <Geth> ¦ rakudo: vrurg++ created pull request #4810: Workaround for cases where ACCEPTS may return non-Raku object

[22:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4810

[22:27] <vrurg> SmokeMachine: ^^

[22:49] *** melezhik joined
[22:56] <vrurg> We need a blin run. Looks like the latest fixes of unsigneds resulted in modules fallout.

[23:05] <MasterDuke> jdv: could we get a blin run? tia

[23:11] <Geth> ¦ rakudo: f1f5d5cdba | (Vadim Belman)++ | src/vm/moar/dispatchers.nqp

[23:11] <Geth> ¦ rakudo: Workaround for cases where ACCEPTS may return non-Raku object

[23:11] <Geth> ¦ rakudo: 

[23:11] <Geth> ¦ rakudo: This may happen with `Code` objects on RHS, for example.

[23:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f1f5d5cdba

[23:11] <Geth> ¦ rakudo: 26e77d987f | (Vadim Belman)++ (committed using GitHub Web editor) | src/vm/moar/dispatchers.nqp

[23:11] <Geth> ¦ rakudo: Merge pull request #4810 from vrurg/workaround-non-hll-ACCEPTS-return

[23:11] <Geth> ¦ rakudo: 

[23:11] <Geth> ¦ rakudo: Workaround for cases where ACCEPTS may return non-Raku object

[23:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/26e77d987f

[23:26] *** melezhik left
[23:52] *** discord-raku-bot left
[23:53] *** discord-raku-bot joined
