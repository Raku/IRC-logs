[00:09] *** reportable6 left
[01:12] *** reportable6 joined
[03:17] *** evalable6 left
[03:41] <Geth> ¦ rakudo: vrurg++ created pull request #4777: Defuse a Failure

[03:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4777

[04:38] *** linkable6 joined
[04:46] *** japhb left
[04:57] *** japhb joined
[05:16] *** frost joined
[05:19] *** evalable6 joined
[06:09] *** reportable6 left
[07:02] *** frost left
[07:11] *** reportable6 joined
[07:44] <Geth> ¦ rakudo: 65738a2195 | (Vadim Belman)++ | src/core.c/Exception.pm6

[07:44] <Geth> ¦ rakudo: Defuse a Failure

[07:44] <Geth> ¦ rakudo: 

[07:44] <Geth> ¦ rakudo: Minor fix to the fix in #4774. It's not sufficient to react to a

[07:44] <Geth> ¦ rakudo: failure. The failure has to be defused too.

[07:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/65738a2195

[07:44] <Geth> ¦ rakudo: 74e1dcc65f | niner++ (committed using GitHub Web editor) | src/core.c/Exception.pm6

[07:44] <Geth> ¦ rakudo: Merge pull request #4777 from vrurg/method-not-found-on-my-class

[07:44] <Geth> ¦ rakudo: 

[07:44] <Geth> ¦ rakudo: Defuse a Failure

[07:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/74e1dcc65f

[07:45] *** linkable6 left
[07:45] *** linkable6 joined
[08:33] *** frost joined
[08:42] <lizmat> Files=1351, Tests=117097, 288 wallclock secs (34.57 usr  9.76 sys + 4015.16 cusr 332.25 csys = 4391.74 CPU)

[08:55] <Geth> ¦ rakudo: 05447137f0 | (Elizabeth Mattijsen)++ | src/core.c/Exception.pm6

[08:55] <Geth> ¦ rakudo: Don't take the long road to defusing a Failure

[08:55] <Geth> ¦ rakudo: 

[08:55] <Geth> ¦ rakudo: .so is not a Failure method, .Bool is.

[08:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/05447137f0

[09:47] *** frost left
[09:48] *** frost joined
[10:24] *** frost left
[10:25] *** cognominal joined
[10:26] *** cognominal left
[11:29] <jdv> vrurg: next time please hold off until the release is over

[11:58] *** sena_kun joined
[12:07] *** reportable6 left
[12:08] *** frost joined
[12:50] *** frost left
[12:51] *** squashable6 left
[13:01] *** frost joined
[13:05] *** Voldenet left
[13:10] <[Coke]> we can revert if needed

[13:10] <lizmat> jdv: actually vrurg only did a PR, it was nine who merged

[13:11] *** Voldenet joined
[13:12] <jdv> lizmat: is that what https://github.com/rakudo/rakudo/pull/4774 says?

[13:13] <lizmat> heh, I was going  by what Geth said:

[13:13] <jdv> [Coke]: that's but i'm already past that point:)

[13:13] <lizmat> [08:44:29]  <Geth>	¦ rakudo: 74e1dcc65f | niner++ (committed using GitHub Web editor) | src/core.c/Exception.pm6

[13:14] <lizmat> Ah, I was thinking you talked about #4777

[13:15] <jdv> i believe they are related and kinda proves my point that a freeze would be nicer

[13:17] <jdv> hopefully it doesn't break anything:)

[13:19] * lizmat too

[13:31] <gfldex> m: sub wut($c is rw where { $c := 'oi‽']) {}; wut(42);

[13:31] <camelia> rakudo-moar 05447137f: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Cannot bind to '$c' because it was bound in a signature and variables␤bound in signatures cannot be rebound unless they were declared with the␤'is rw' or 'is copy' traits␤at <tmp>:1␤------> su…»

[13:31] <gfldex> I can see the `is rw` quite clearly…

[13:32] <gfldex> m: sub wut($c is rw where { $c := 'oi‽'}) {}; wut(42);

[13:32] <camelia> rakudo-moar 05447137f: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Cannot bind to '$c' because it was bound in a signature and variables␤bound in signatures cannot be rebound unless they were declared with the␤'is rw' or 'is copy' traits␤at <tmp>:1␤------> su…»

[13:33] <gfldex> m: sub wut($c is copy where { $c := 'oi‽' }) { say $c }; wut(42);

[13:33] <camelia> rakudo-moar 05447137f: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Cannot bind to '$c' because it was bound in a signature and variables␤bound in signatures cannot be rebound unless they were declared with the␤'is rw' or 'is copy' traits␤at <tmp>:1␤------> su…»

[13:33] <gfldex> m: sub wut($c is copy where { $c = 'oi‽' }) { say $c }; wut(42);

[13:33] <camelia> rakudo-moar 05447137f: OUTPUT: «oi‽␤»

[13:34] <jdv> that looks like a change in the last release

[13:35] <jdv> part of codesections work on immutables or something

[13:36] <[Coke]> jdv: (past) oops!

[13:36] <[Coke]> at one point I pushed for having a release branch so we didn't have to worry about master, but folks at the time were not interested.

[13:37] <[Coke]> if it's something you want to consider, you're free to, of course. Pros: you decide what's going in the release and anyone committing to master can't break it. Cons: there's cleanup merge work after the release.

[13:37] <[Coke]> (I am sure there are other cons.)

[13:39] <jdv> yeah...

[13:52] *** frost left
[13:54] <gfldex> bisectable6: sub wut($c is copy where { $c := 'oi‽' }) { say $c }; wut(42);

[13:54] <bisectable6> gfldex, Will bisect the whole range automagically because no endpoints were provided, hang tight

[13:54] <bisectable6> gfldex, Output on all releases: https://gist.github.com/2bee9308a4f475e2cd890ed62994f9bb

[13:54] <jdv> anyone else see IO::Socket::Async::SSL's tests fail?

[13:54] <bisectable6> gfldex, Bisecting by output (old=2021.10 new=2021.12) because on both starting points the exit code is 1

[13:54] <bisectable6> gfldex, bisect log: https://gist.github.com/4f163d2592dc303d2aaffadadd94bd55

[13:54] <bisectable6> gfldex, (2021-11-07) https://github.com/rakudo/rakudo/commit/32e307b6f5b685ec58665c4df6a2d8175ae9dabc

[13:55] <bisectable6> gfldex, Output on all releases and bisected commits: https://gist.github.com/af3a7b02c7f03d7c2cff42303e4f2bcd

[13:58] <jdv> and after forcing that one then Cro::TLS test's fail

[13:59] <lizmat> :-(

[13:59] <lizmat> it was mention yesterday on #cro  

[13:59] <lizmat> *mentioned

[14:00] <jdv> does anyone know if those modules issues or rakudo issues?

[14:00] <jdv> s/those/those are/

[14:01] *** discord-raku-bot left
[14:01] <japhb> jdv: Jonathan was of the opinion it was more likely a Rakudo regression

[14:02] <japhb> (The Cro::TLS one, at least)

[14:02] *** discord-raku-bot joined
[14:03] <jdv> lovely

[14:04] <japhb> https://logs.liz.nl/cro/2022-02-10.html

[14:04] <japhb> A problem with Blin's categorization, perhaps

[14:05] <japhb> (Meaning, that's why Blin runs didn't point it out sooner.)

[14:05] <lizmat> japhb: irclogs.raku.org  nowadays  :-)

[14:06] <jdv> i imagine a rakudo release that can't run Cro is a blocker

[14:06] <japhb> lizmat: Oh sorry, I've had those tabs in my saved set for so long ....

[14:06] <japhb> jdv: Yeah, I'd agree

[14:07] <jdv> which is great to find out mid-releasing

[14:07] <japhb> Yeah, my apologies for not having brought the red flag over from #cro

[14:08] <jdv> ideally it would be noted in a blocker issue on rakudo.  hmm...

[14:08] <japhb> (Though given the importance of it, I'd recommend release managers join #cro; it's relatively low traffic.)

[14:08] *** reportable6 joined
[14:21] <jdv> all the blin runs since 2021.12 have Cro::$something as zeffail

[14:26] <sena_kun> it's not a problem while the rakudo itself is not released, we can just create a blocker ticker, if it's resolved quickly on the rakudo side - release with the fix, if it's a VM one than we can release a moar point, which is not that bad, and proceed with rakudo on the point.

[14:27] <jdv> yeah...  meh.

[14:32] <sena_kun> s/ticker/ticket/

[14:39] <jdv> can anyone in here help figure out this cro rakudo regression?

[14:48] <jdv> my best guess is it might have someting to do with IO::Socket::Async::SSL...

[14:49] <lizmat> comfirm that I cannot install IO::Socket::Async::SSL on MacOS on head

[14:49] <lizmat> *confirm

[14:50] <lizmat> https://gist.github.com/lizmat/5a976b30c8274194df1274062cff5036

[15:06] <jdv> nine: around?  there's a guess the uint work may be involved in this regression

[15:22] *** MasterDuke left
[15:25] <jdv> i guess the release is on hold for now

[15:32] *** frost joined
[15:51] <gfldex> m: say [].sum;

[15:51] <camelia> rakudo-moar 05447137f: OUTPUT: «0␤»

[15:53] <gfldex> m: say Int.sum;

[15:53] <camelia> rakudo-moar 05447137f: OUTPUT: «Cannot resolve caller sum(Int:U: ); none of these signatures matches:␤    (Any:D: *%_)␤  in block <unit> at <tmp> line 1␤␤»

[16:15] *** frost left
[16:33] *** Xliff left
[16:37] *** Kaipi left
[16:38] *** Kaipi joined
[16:52] *** squashable6 joined
[17:05] <gfldex> I can't find any test for sum of the empty List or Array in roast. Is this just emergent behaviour?

[17:06] <gfldex> m: say [].abs;

[17:06] <camelia> rakudo-moar 05447137f: OUTPUT: «0␤»

[17:07] <lizmat> gfldex: that last one is just number of elements in the empty array

[17:08] <lizmat> same for .sum: nothing to add, so the result is 0

[17:08] <lizmat> Int.sum is illegal, so I think the error is correct fwiw

[17:09] <gfldex> That's more of a docs issue. `.abs` and friends state that the invocant is coerst to Numeric.

[17:10] <gfldex> I'm asking because it bit me with `sub MAIN(*@a) {…}`. 

[17:13] <lizmat> coercing a [] to numeric yields the number of elements

[17:13] <lizmat> so [].abs is the same as 0.abs

[17:15] <[Coke]> m: say Int.Numeric

[17:15] <camelia> rakudo-moar 05447137f: OUTPUT: «Use of uninitialized value of type Int in numeric context␤0␤  in block <unit> at <tmp> line 1␤»

[17:48] *** sena_kun left
[18:04] <jdv> lizmat: can you edit https://en.wikipedia.org/wiki/MoarVM for the new version?

[18:05] <lizmat> "You are currently unable to edit Wikipedia."   :-(

[18:05] <jdv> aparrently i can't cause my ips are blocked...  both my phone and my other inet.

[18:05] <jdv> wut...

[18:06] <lizmat> some nonsense about an open Proxy / webhost

[18:06] <jdv> can anyone do that?

[18:06] <jdv> [Coke]: can you?

[18:08] *** reportable6 left
[18:10] *** reportable6 joined
[18:12] <Geth> ¦ Benchmark/main: f651c26268 | (Elizabeth Mattijsen)++ | 14 files

[18:12] <Geth> ¦ Benchmark/main: 1.0

[18:12] <Geth> ¦ Benchmark/main: review: https://github.com/raku-community-modules/Benchmark/commit/f651c26268

[18:13] <lizmat> that's one less community module without version + migrated to zef

[18:16] <jdv> [Coke]: nevermind - i got a rando friend to do it

[18:18] <Geth> ¦ Benchmark/main: 81d4701606 | (Elizabeth Mattijsen)++ | .github/workflows/test.yml

[18:18] <Geth> ¦ Benchmark/main: Fix Github Actions CI

[18:18] <Geth> ¦ Benchmark/main: review: https://github.com/raku-community-modules/Benchmark/commit/81d4701606

[18:26] <Geth> ¦ rakudo/release-2022.02: e04b0b2cb5 | (Justin DeVuyst)++ | README.md

[18:26] <Geth> ¦ rakudo/release-2022.02: Minimal Copyright update

[18:26] <Geth> ¦ rakudo/release-2022.02: review: https://github.com/rakudo/rakudo/commit/e04b0b2cb5

[18:26] <Geth> ¦ rakudo/release-2022.02: 9b4f4d1381 | (Justin DeVuyst)++ | 3 files

[18:26] <Geth> ¦ rakudo/release-2022.02: Update changelog + announcement

[18:26] <Geth> ¦ rakudo/release-2022.02: 

[18:26] <Geth> ¦ rakudo/release-2022.02: Deliberately not logged:

[18:26] <Geth> ¦ rakudo/release-2022.02: 

[18:26] <Geth> ¦ rakudo/release-2022.02: [36716b18][0935f5b2][ef35db06][c9b2e0b4][3aa23bf9][ba723099][fb909efc]

[18:26] <Geth> ¦ rakudo/release-2022.02: [67906e48][25562dd8][28f8dddc][7227512c][acc093c1][de06617c][2ee3a46e]

[18:26] <Geth> ¦ rakudo/release-2022.02: [36af7d0e][ac009507][fca7a6f9][0cd05ca0][b9ffbb97][8bba2aec][d743ebfd]

[18:26] <Geth> ¦ rakudo/release-2022.02: <…commit message has 6 more lines…>

[18:26] <Geth> ¦ rakudo/release-2022.02: review: https://github.com/rakudo/rakudo/commit/9b4f4d1381

[18:26] <lizmat> jdv: isn't there an nqp release as well ?

[18:27] <nine> jdv: sorry, just came home

[18:27] <jdv> nine: jnthn got it

[18:28] <jdv> lizmat: yeah, getting to it.  i think this is just the order the "Ake" thing wants

[18:28] <lizmat> jdv  ok, just checking :-)

[18:29] <jdv> let me know if somehting blows up though:)

[18:29] <lizmat> will do, but first dinner&

[18:29] <jdv> nine: thanks though

[18:33] <nine> Ah, so it was a module error after all? So the release is back on track?

[18:34] <jdv> yes, the fix was tiny.  it is...underway again

[18:35] <nine> Cool.... jnthn++, jdv++

[19:28] <jdv> seems there's a bunch of roast errata fails - some todos, some not.

[19:31] <lizmat> could you gist them ?

[19:36] <jdv> https://gist.github.com/jdv/5d662beb26ad5227298e920388879f31

[19:39] <jdv> the todos don't have to block release, right?

[19:40] <jdv> otherwise its just 7 or 8 depending on the branch

[19:41] <lizmat> todo's shouldn't block, I don't thnk

[19:41] <lizmat> so that leaves t/spec/S12-meta/primitives.t t/spec/S15-nfg/grapheme-break.t

[19:41] <lizmat> t/spec/S26-documentation/block-leading.t   t/spec/S26-documentation/block-trailing.t 

[19:42] <lizmat> t/spec/S26-documentation/why-both.t  t/spec/S26-documentation/why-leading.t   t/spec/S26-documentation/why-trailing.t

[19:44] <jdv> right

[19:47] <jdv> and t/spec/S02-types/pair.rakudo.moar, no?

[19:50] <lizmat> oops, yes

[19:51] <jdv> all except grapheme-break.t have recent changes on master

[20:00] <Geth> ¦ Test-Class/main: c094abc080 | (Elizabeth Mattijsen)++ | 19 files

[20:00] <Geth> ¦ Test-Class/main: Initial migration work

[20:00] <Geth> ¦ Test-Class/main: review: https://github.com/raku-community-modules/Test-Class/commit/c094abc080

[20:00] <Geth> ¦ Test-Class/main: e6573cd1a4 | (Elizabeth Mattijsen)++ | Changes

[20:00] <Geth> ¦ Test-Class/main: 1.0

[20:00] <Geth> ¦ Test-Class/main: review: https://github.com/raku-community-modules/Test-Class/commit/e6573cd1a4

[20:01] <lizmat> jdv: hmmm

[20:02] *** discord-raku-bot left
[20:02] *** discord-raku-bot joined
[20:04] <lizmat> afk&

[20:37] <jdv> i think i have fixes for all but grapheme-break.t on 6.c-errata

[20:37] <jdv> any ideas?

[20:42] <jdv> Invalid surrogate codepoint 55296 in block <unit> at t/spec/S15-nfg/grapheme-break.t line 61

[20:45] <Geth> ¦ roast/6.c-errata-fixups-2022.02: 1509be59e2 | (Vadim Belman)++ (committed by Justin DeVuyst) | 5 files

[20:45] <Geth> ¦ roast/6.c-errata-fixups-2022.02: Make sure role group delegates .WHY to its default candidate

[20:45] <Geth> ¦ roast/6.c-errata-fixups-2022.02: 

[20:45] <Geth> ¦ roast/6.c-errata-fixups-2022.02: This required to remove tests which were testing for `Role.WHY`

[20:45] <Geth> ¦ roast/6.c-errata-fixups-2022.02: returning `Nil`. But as was suggested in this comment:

[20:45] <Geth> ¦ roast/6.c-errata-fixups-2022.02: 

[20:45] <Geth> ¦ roast/6.c-errata-fixups-2022.02: https://github.com/rakudo/rakudo/pull/3549#issuecomment-687587580

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: 

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: <…commit message has 10 more lines…>

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: review: https://github.com/Raku/roast/commit/1509be59e2

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: 1e444f8129 | (Vadim Belman)++ (committed by Justin DeVuyst) | S12-meta/primitives.t

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: Fix incorrect tests

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: 

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: Interaction of a few errors made the test erroneously passing:

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: 

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: - typechecking cache was initialized incorrectly

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: - omitted typing with Mu of some meta-class method parameters resulted

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02:   in hidden calls to type_check method

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: <…commit message has 8 more lines…>

[20:46] <Geth> ¦ roast/6.c-errata-fixups-2022.02: review: https://github.com/Raku/roast/commit/1e444f8129

[20:46] <Geth> ¦ roast/6.d-errata-fixups-2022.02: 1a2fc4a055 | (Vadim Belman)++ (committed by Justin DeVuyst) | 5 files

[20:46] <Geth> ¦ roast/6.d-errata-fixups-2022.02: Make sure role group delegates .WHY to its default candidate

[20:46] <Geth> ¦ roast/6.d-errata-fixups-2022.02: 

[20:46] <Geth> ¦ roast/6.d-errata-fixups-2022.02: This required to remove tests which were testing for `Role.WHY`

[20:46] <Geth> ¦ roast/6.d-errata-fixups-2022.02: returning `Nil`. But as was suggested in this comment:

[20:46] <Geth> ¦ roast/6.d-errata-fixups-2022.02: 

[20:46] <Geth> ¦ roast/6.d-errata-fixups-2022.02: https://github.com/rakudo/rakudo/pull/3549#issuecomment-687587580

[20:46] <Geth> ¦ roast/6.d-errata-fixups-2022.02: 

[20:46] <Geth> ¦ roast/6.d-errata-fixups-2022.02: <…commit message has 10 more lines…>

[20:46] <Geth> ¦ roast/6.d-errata-fixups-2022.02: review: https://github.com/Raku/roast/commit/1a2fc4a055

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: cce470d0e6 | (Elizabeth Mattijsen)++ (committed by Justin DeVuyst) | S02-types/pair.t

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: Adapt to correct behaviour of Pair.ACCEPTS(Pair)

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: review: https://github.com/Raku/roast/commit/cce470d0e6

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: e525fc141a | (Vadim Belman)++ (committed by Justin DeVuyst) | S12-meta/primitives.t

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: Fix incorrect tests

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: 

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: Interaction of a few errors made the test erroneously passing:

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: 

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: - typechecking cache was initialized incorrectly

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: - omitted typing with Mu of some meta-class method parameters resulted

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02:   in hidden calls to type_check method

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: <…commit message has 8 more lines…>

[20:47] <Geth> ¦ roast/6.d-errata-fixups-2022.02: review: https://github.com/Raku/roast/commit/e525fc141a

[20:47] <Geth> ¦ roast: jdv++ created pull request #796: 6.c errata fixups 2022.02

[20:47] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/796

[20:48] <Geth> ¦ roast: jdv++ created pull request #797: 6.d errata fixups 2022.02

[20:48] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/797

[20:50] <jdv> does anyone have ability to merge at roast?  it appears i do not.

[20:52] <nine> me neither :/

[20:55] <jdv> welp, i guess the release is blocking on those being merged and someone figuring out what is up with 6.c-errata t/spec/S15-nfg/grapheme-break.t

[20:56] <jdv> or should i just move on without that stuff?...

[20:56] <nine> I think you can continue anyway

[20:57] <jdv> ok

[20:57] <nine> I think those release steps are there to ensure that we don't accidentally break older language versions. We do it on purpose in this case and once those PRs are merged, the tests will be happy again

[20:58] <jdv> except that grapheme one.  but yeah cool.

[21:04] <nine> Invalid surrogate codepoint 55296

[21:04] <nine> Is what that ends in

[21:05] <jdv> saw that.  still no ideas:)

[21:09] <nine> Test file has been removed in master in a commit named: Remove duplicate test and testgen. GraphemeBreakTest.t provides the same and has been updated for Unicode 9.0

[21:09] <jdv> oh, looks purely vestigal cause master and 6.d don't have it

[21:10] <jdv> ah, right.  i'll try that.  thanks.

[21:15] <nine> It's surrogate-D800 it doesn't like. Every test that includes this code point fails. And D800 is 55296 in decimal

[21:16] <nine> U+D800 is not a valid Unicode code point / character.

[21:17] <nine> It belongs to the "High Surrogates" block which goes from 0xD800 to 0xDB7F but is not defined in the Unicode 9.0 database of code points.

[21:17] <nine> http://www.unicode-symbol.com/u/D800.html

[21:21] <nine> This commit probably caused the test failures: https://github.com/rakudo/rakudo/commit/c9b2e0b4a7e5791523f057f058040e98d339ec58

[21:21] <nine> Commit message says: "Turns out, the test was actually wrong, after consulting with

[21:21] <nine> our resident Unicode guru Samantha McVey."

[21:22] <nine> I think one could infer from this, that U+D800 is indeed invalid and we're correct in throwing that error and that it's a simple oversight that the 6.c-errata branch wasn't updated accordingly.

[21:26] <nine> surrogate-D800 was still present in the Unicode 8 test file the test was originally based on: https://www.unicode.org/Public/8.0.0/ucd/auxiliary/GraphemeBreakTest.txt but was removed in Unicode 12

[21:28] <nine> The reason they disappeared was: "Surrogate code points were moved from Control to XX for the Grapheme_Cluster_Break property, to eliminate the need to have isolated surrogate code points in the test cases." https://www.unicode.org/versions/Unicode12.0.0/#Database_Changes

[21:49] *** moon-child is now known as bowl-of-petunias

[21:49] *** bowl-of-petunias is now known as moon-child

[21:54] *** linkable6 left
[21:55] *** linkable6 joined
[21:59] *** linkable6 left
[22:07] <[Coke]> jdv++ sorry my IRC attention is very spotty.

[22:12] <Geth> ¦ roast/6.c-errata-fixups-2022.02: 61ef05b92c | (Justin DeVuyst)++ | 6 files

[22:12] <Geth> ¦ roast/6.c-errata-fixups-2022.02: Fix "grapheme break" test.

[22:12] <Geth> ¦ roast/6.c-errata-fixups-2022.02: 

[22:12] <Geth> ¦ roast/6.c-errata-fixups-2022.02: See https://github.com/Raku/roast/commit/db27cf25.

[22:12] <Geth> ¦ roast/6.c-errata-fixups-2022.02: review: https://github.com/Raku/roast/commit/61ef05b92c

[22:13] <jdv> nine: ^ that might be sufficient

[22:14] <Geth> ¦ nqp: 59df321e04 | (Justin DeVuyst)++ | tools/templates/MOAR_REVISION

[22:14] <Geth> ¦ nqp: [release] Bump MoarVM revision to 2022.02

[22:14] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/59df321e04

[22:14] <Geth> ¦ nqp: 13861d6670 | (Justin DeVuyst)++ | VERSION

[22:14] <Geth> ¦ nqp: [release] Bump VERSION to 2022.02

[22:14] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/13861d6670

[22:14] <Geth> ¦ rakudo/release-2022.02: 7f21bbd8ff | (Justin DeVuyst)++ | tools/templates/NQP_REVISION

[22:14] <Geth> ¦ rakudo/release-2022.02: [release] Bump NQP revision to 2022.02

[22:14] <Geth> ¦ rakudo/release-2022.02: review: https://github.com/rakudo/rakudo/commit/7f21bbd8ff

[22:14] <Geth> ¦ rakudo/release-2022.02: 7c08c5fedb | (Justin DeVuyst)++ | VERSION

[22:14] <Geth> ¦ rakudo/release-2022.02: [release] Bump VERSION to 2022.02

[22:14] <Geth> ¦ rakudo/release-2022.02: review: https://github.com/rakudo/rakudo/commit/7c08c5fedb

[22:31] <Geth> ¦ rakudo: jdv++ created pull request #4781: Release 2022.02

[22:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4781

[22:34] <Geth> ¦ rakudo/master: 5 commits pushed by (Justin DeVuyst)++

[22:34] <Geth> ¦ rakudo/master: e04b0b2cb5 | Minimal Copyright update

[22:34] <Geth> ¦ rakudo/master: 9b4f4d1381 | Update changelog + announcement

[22:34] <Geth> ¦ rakudo/master: 7f21bbd8ff | [release] Bump NQP revision to 2022.02

[22:34] <Geth> ¦ rakudo/master: 7c08c5fedb | [release] Bump VERSION to 2022.02

[22:34] <Geth> ¦ rakudo/master: 0b11a143f9 | Merge pull request #4781 from rakudo/release-2022.02

[22:34] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/05447137f012...0b11a143f9b3

[22:46] <jdv> okie dokie then.  I believe the release is over.

[22:47] <jdv> if someone could merge this - https://github.com/rakudo/rakudo.org/pull/77 - that'd be great

[22:48] <jdv> patrickb: release

[22:49] <vrurg> jdv: merged

[22:50] <jdv> oh, one more thing...

[22:50] <jdv> vrurg: can you try to edit https://en.wikipedia.org/wiki/Rakudo to update it?

[22:50] <jdv> i'm blocked.  as is liz.  ...

[22:51] <vrurg> jdv: nope. I don't have an account with them.

[22:54] <lizmat> jdv++

[22:57] <jdv> who is "A"?... https://github.com/rakudo/rakudo/releases/tag/2022.02

[22:57] <jdv> i have no idea what that is all about 

[22:57] <jdv> vrurg: you might be able to anon style

[22:58] <jdv> but thanks for the merge

[23:02] <jdv> in any case, nite.  i'm out.

