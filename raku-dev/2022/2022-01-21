[00:07] *** reportable6 left
[01:08] *** reportable6 joined
[01:24] *** squashable6 left
[01:25] *** squashable6 joined
[01:35] *** Kaiepi left
[04:26] *** frost joined
[04:46] *** frost left
[04:47] *** sena_kun left
[04:57] *** sena_kun joined
[05:01] *** frost joined
[05:18] *** squashable6 left
[05:19] *** squashable6 joined
[05:26] *** frost15 joined
[05:26] *** frost15 left
[05:26] *** frost21 joined
[05:27] *** frost21 left
[05:27] *** frost31 joined
[05:29] *** frost left
[05:30] *** frost31 is now known as frost

[05:41] *** frost left
[05:55] *** frost joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:22] *** kjp left
[06:22] *** kjp joined
[07:19] *** frost left
[07:30] *** frost joined
[07:41] <nine> MasterDuke: yeah, sounds like I may just not be worth it

[07:45] *** frost left
[08:37] *** lucs_ left
[08:42] *** kjp left
[08:46] *** lucs joined
[08:46] *** kjp joined
[09:20] *** kjp left
[09:21] *** kjp joined
[09:46] *** lucs left
[09:47] *** lucs joined
[11:07] <Geth> ¦ rakudo: 510c24ed18 | (Elizabeth Mattijsen)++ | IN-MEMORIAM.md

[11:07] <Geth> ¦ rakudo: Finally add in memoriam for David Adler

[11:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/510c24ed18

[11:09] <Geth> ¦ rakudo: 7227512c04 | (Elizabeth Mattijsen)++ | IN-MEMORIAM.md

[11:09] <Geth> ¦ rakudo: Sometimes a period is important.

[11:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7227512c04

[11:12] *** Geth left
[11:12] *** Geth joined
[12:07] *** reportable6 left
[12:07] *** reportable6 joined
[12:14] <nine> God damn it mi6, why do you insist on creating invalid META6.json?

[12:17] <lizmat> ah?   never been able to do that  :-)

[12:17] <lizmat> I guess skaji would be interested in a bug report ?

[12:17] <lizmat> or could well be an issue in an underlying lib :-)

[12:19] <nine> It replaces my perfectly valid META6.json with an outdated version 0 one. And even if I clean it up afterwards, when releasing, it inserts those unneeded and unspecced test-depends and build-depends keys again and commits them right away

[12:19] <nine> Seems like not much has changed since I first gave up on mi6 :/

[13:07] *** linkable6 left
[13:07] *** evalable6 left
[13:31] *** kjp left
[13:32] *** kjp joined
[13:47] *** frost joined
[14:09] *** evalable6 joined
[14:12] *** Util joined
[14:15] *** frost left
[14:18] *** kjp left
[14:30] *** frost joined
[14:43] *** frost left
[14:56] <Geth> ¦ nqp/fix_unsigned_for_merge: 5fef8aea0d | (Stefan Seifert)++ | 2 files

[14:56] <Geth> ¦ nqp/fix_unsigned_for_merge: unbox_u op on JVM

[14:56] <Geth> ¦ nqp/fix_unsigned_for_merge: review: https://github.com/Raku/nqp/commit/5fef8aea0d

[14:56] <Geth> ¦ nqp/fix_unsigned_for_merge: 76b6ea0e77 | (Stefan Seifert)++ | 2 files

[14:56] <Geth> ¦ nqp/fix_unsigned_for_merge: Stub for dispatch op on JVM

[14:56] <Geth> ¦ nqp/fix_unsigned_for_merge: review: https://github.com/Raku/nqp/commit/76b6ea0e77

[14:56] <Geth> ¦ nqp/fix_unsigned_for_merge: e0d3d41bae | (Stefan Seifert)++ | 23 files

[14:56] <Geth> ¦ nqp/fix_unsigned_for_merge: Bring uint improvements to the JVM

[14:56] <Geth> ¦ nqp/fix_unsigned_for_merge: review: https://github.com/Raku/nqp/commit/e0d3d41bae

[14:56] <Geth> ¦ rakudo/fix_unsigned_for_merge: b315556aef | (Stefan Seifert)++ | 3 files

[14:56] <Geth> ¦ rakudo/fix_unsigned_for_merge: Bring uint improvements to the JVM

[14:56] <Geth> ¦ rakudo/fix_unsigned_for_merge: review: https://github.com/rakudo/rakudo/commit/b315556aef

[14:57] <nine> I'm pretty sure JVM builds and tests no worse than before with these :) There are a hand full of spec test issues, but they look entirely unrelated.

[15:02] <Geth> ¦ nqp/master: 5 commits pushed by (Stefan Seifert)++

[15:02] <Geth> ¦ nqp/master: 98565031ab | Use uint64 registers for unsigned arguments in dispatch

[15:02] <Geth> ¦ nqp/master: 0e0053f738 | Rebootstrap to get proper handling of unsigned args into stage0

[15:02] <Geth> ¦ nqp/master: 39b8ac4aff | unbox_u op on JVM

[15:02] <Geth> ¦ nqp/master: bfd4ef454b | Stub for dispatch op on JVM

[15:02] <Geth> ¦ nqp/master: d372bb1e61 | Bring uint improvements to the JVM

[15:02] <Geth> ¦ nqp/master: review: https://github.com/Raku/nqp/compare/c72ed7a5bc84...d372bb1e6111

[15:04] *** Geth left
[15:04] *** Geth joined
[15:09] *** linkable6 joined
[15:09] <MasterDuke> nine: are you going to merge the rakudo pr soon?

[15:12] <Geth> ¦ rakudo/master: 12 commits pushed by (Stefan Seifert)++

[15:12] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/7227512c04a9...27f3b719ff6f

[15:12] <nine> MasterDuke: just about now :D

[15:13] <MasterDuke> cool

[15:17] <MasterDuke> interesting, stage parse seems to have increased by 1-2s

[15:18] * lizmat pulls and builds and tests

[15:18] <nine> Considering the 3038 insertions(+), 724 deletions(-), I'm not terribly surprised

[15:19] <MasterDuke> ah, didn't realize it was that much for rakudo

[15:24] <Geth> ¦ roast: vrurg++ created pull request #785: Add negation tests

[15:24] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/785

[15:26] <vrurg> I remember my first look into uint problem and how it scared me away. But now I see that it was underestimation of the amount of changes...

[15:26] <nine> As did I...as did I

[15:27] <vrurg> Mine spectest is good, 4 TODO passed.

[15:27] <nine> But it's been nagging me for years, and now we can finally fix those issues. Remember that this is still mostly just the base for being able to look into individual issues.

[15:28] <vrurg> I think we'd need to reconsider UInt at some point. 

[15:28] <vrurg> Not yet, but at some language boundary.

[15:29] <nine> Considering that pretty much all I did was ensure that we always know whether we deal with a signed or unsigned int, having UInt just be a subset sounds like its asking for trouble

[15:30] *** kjp joined
[15:30] <lizmat> concur: clean + 4 TODO's passed

[15:33] <vrurg> nine: Absolutely. But I expect there be some rough edges we'd need to mull over. So, some usage statistics first.

[15:34] <lizmat> .oO( The Great Uintification Refactor is reaching its conclusion )

[15:36] <Geth> ¦ roast: 60ae54dab4 | (Vadim Belman)++ | S03-smartmatch/00-sanity.t

[15:36] <Geth> ¦ roast: Add negation tests

[15:36] <Geth> ¦ roast: 

[15:36] <Geth> ¦ roast: Negated smartmatch must always boolify

[15:36] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/60ae54dab4

[15:36] <Geth> ¦ roast: 5e19a7a68a | (Vadim Belman)++ (committed using GitHub Web editor) | S03-smartmatch/00-sanity.t

[15:36] <Geth> ¦ roast: Merge pull request #785 from vrurg/new-disp-smartmatch

[15:36] <Geth> ¦ roast: 

[15:36] <Geth> ¦ roast: Add negation tests

[15:36] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/5e19a7a68a

[15:37] <lizmat> vrurg: OOC, why do they need to boolify ?

[15:37] <vrurg> Because negation is an explicit boolean context.

[15:38] <vrurg> But for now I only added testing over regex matches.

[15:39] <vrurg> Yet anyway, I currently can't think of any case where a negated SM can resulting in anything but true/false

[15:39] <vrurg> *can result

[15:45] <Geth> ¦ rakudo: 3823f88ce3 | (Stefan Seifert)++ | src/core.c/Buf.pm6

[15:45] <Geth> ¦ rakudo: Fix "This container does not reference a native unsigned integer"

[15:45] <Geth> ¦ rakudo: 

[15:45] <Geth> ¦ rakudo: When working with bufs and e.g. initializing them with lists of integers that

[15:45] <Geth> ¦ rakudo: do not match in signedness, we need to give the runtime a chance to convert.

[15:45] <Geth> ¦ rakudo: This happens automatically if the value is fetched into a scalar before passing

[15:45] <Geth> ¦ rakudo: it to an nqp op. This is a bit less efficient than binding, but a sufficiently

[15:45] <Geth> ¦ rakudo: advanced runtime can still optimize away the scalar container.

[15:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3823f88ce3

[15:46] <nine> jdv: the Blin regressions caused by my uint work should be fixed now that the rest is merged. Of course it's quite possible that there are new regressions :)

[15:47] <nine> jdv: JVM is ok as well

[16:03] <[Tux]> Rakudo v2021.12-141-g3823f88ce (v6.d) on MoarVM 2021.12-80-gb585b5e32

[16:03] <[Tux]> csv-test-xs-20      0.402 -  0.410

[16:03] <[Tux]> test-t --race       0.897 -  0.903

[16:03] <[Tux]> csv-ip5xs           0.906 -  0.939

[16:03] <[Tux]> test-t              1.594 -  1.716

[16:03] <[Tux]> csv-parser          3.871 -  4.215

[16:03] <[Tux]> csv-ip5xs-20        5.289 -  5.380

[16:03] <[Tux]> test-t-20 --race    7.107 -  7.251

[16:03] <[Tux]> test                6.658 -  7.116

[16:03] <[Tux]> test-t-20          22.744 - 23.359

[16:37] *** linkable6 left
[16:37] *** evalable6 left
[16:38] *** linkable6 joined
[16:38] *** evalable6 joined
[16:43] <Geth> ¦ Testo: b29bba1669 | (JJ Merelo)++ | META6.json

[16:43] <Geth> ¦ Testo: :arrow_up: for elimination of deprecated code

[16:43] <Geth> ¦ Testo: review: https://github.com/raku-community-modules/Testo/commit/b29bba1669

[16:43] <Geth> ¦ Testo: 44524201b8 | (JJ Merelo)++ | README.md

[16:43] <Geth> ¦ Testo: Badge up

[16:43] <Geth> ¦ Testo: review: https://github.com/raku-community-modules/Testo/commit/44524201b8

[16:43] <Geth> ¦ Testo: e83e05547c | (JJ Merelo)++ | META6.json

[16:43] <Geth> ¦ Testo: Update Meta for new release

[16:43] <Geth> ¦ Testo: review: https://github.com/raku-community-modules/Testo/commit/e83e05547c

[16:46] <Geth> ¦ Test-Output: edd59e5f48 | (JJ Merelo)++ | .gitignore

[16:46] <Geth> ¦ Test-Output: :see_no_evil:

[16:46] <Geth> ¦ Test-Output: review: https://github.com/raku-community-modules/Test-Output/commit/edd59e5f48

[16:46] <Geth> ¦ Test-Output: e837f72ff3 | (JJ Merelo)++ | .github/workflows/test.yaml

[16:46] <Geth> ¦ Test-Output: No need to check out

[16:46] <Geth> ¦ Test-Output: review: https://github.com/raku-community-modules/Test-Output/commit/e837f72ff3

[16:46] <Geth> ¦ Test-Output/task/reproduce-error: 005ae5c8be | (JJ Merelo)++ | .gitignore

[16:46] <Geth> ¦ Test-Output/task/reproduce-error: :see_no_evil:

[16:46] <Geth> ¦ Test-Output/task/reproduce-error: review: https://github.com/raku-community-modules/Test-Output/commit/005ae5c8be

[17:00] <jdv> nine: cool, thanks!

[17:41] *** dogbert11 joined
[17:43] *** dogbert17 left
[18:07] *** reportable6 left
[19:09] *** reportable6 joined
[20:01] *** djinni`_ left
[20:32] *** djinni` joined
[21:57] *** linkable6 left
[21:57] *** evalable6 left
[21:59] *** evalable6 joined
[22:00] <Geth> ¦ tap-harness6/cwd: 14 commits pushed by (Leon Timmermans)++

[22:00] <Geth> ¦ tap-harness6/cwd: review: https://github.com/Raku/tap-harness6/compare/9b63ace2a3f5...dab83dcae038

[22:29] <Geth> ¦ tap-harness6/master: 16 commits pushed by (Leon Timmermans)++

[22:29] <Geth> ¦ tap-harness6/master: review: https://github.com/Raku/tap-harness6/compare/c1c3c4015580...0d80d8b728ad

[22:32] *** Geth left
[22:32] *** Geth joined
[22:36] *** Geth left
[22:36] *** Geth joined
[22:41] *** Geth left
[22:41] *** Geth joined
[23:39] <Geth> ¦ tap-harness6/ugexe-patch-1: cc04f2e7b5 | (Nick Logan)++ (committed using GitHub Web editor) | META6.json

[23:39] <Geth> ¦ tap-harness6/ugexe-patch-1: Replace perl6 with raku where appropriate

[23:39] <Geth> ¦ tap-harness6/ugexe-patch-1: review: https://github.com/Raku/tap-harness6/commit/cc04f2e7b5

[23:39] <Geth> ¦ tap-harness6: ugexe++ created pull request #55: Replace perl6 with raku where appropriate in META6.json

[23:39] <Geth> ¦ tap-harness6: review: https://github.com/Raku/tap-harness6/pull/55

[23:46] <Geth> ¦ tap-harness6: 56eca8aedb | (Nick Logan)++ (committed by Leon Timmermans) | META6.json

[23:46] <Geth> ¦ tap-harness6: Replace perl6 with raku where appropriate

[23:46] <Geth> ¦ tap-harness6: review: https://github.com/Raku/tap-harness6/commit/56eca8aedb

