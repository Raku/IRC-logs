[00:00] *** evalable6 joined
[00:06] *** reportable6 left
[00:07] *** reportable6 joined
[01:14] *** frost joined
[03:34] *** linkable6 left
[03:34] *** evalable6 left
[03:34] *** quotable6 left
[03:34] *** greppable6 left
[03:34] *** squashable6 left
[03:34] *** unicodable6 left
[03:34] *** tellable6 left
[03:34] *** notable6 left
[03:34] *** bisectable6 left
[03:34] *** coverable6 left
[03:34] *** statisfiable6 left
[03:34] *** bloatable6 left
[03:34] *** releasable6 left
[03:34] *** benchable6 left
[03:34] *** reportable6 left
[03:34] *** sourceable6 left
[03:34] *** committable6 left
[03:34] *** nativecallable6 left
[03:34] *** shareable6 left
[03:34] *** releasable6 joined
[03:34] *** statisfiable6 joined
[03:35] *** quotable6 joined
[03:35] *** tellable6 joined
[03:36] *** unicodable6 joined
[03:36] *** bisectable6 joined
[03:36] *** evalable6 joined
[03:36] *** committable6 joined
[03:36] *** reportable6 joined
[03:36] *** greppable6 joined
[03:36] *** nativecallable6 joined
[03:37] *** bloatable6 joined
[03:37] *** squashable6 joined
[03:37] *** notable6 joined
[03:37] *** benchable6 joined
[03:37] *** linkable6 joined
[03:37] *** coverable6 joined
[03:37] *** sourceable6 joined
[03:37] *** shareable6 joined
[06:07] *** reportable6 left
[06:09] *** reportable6 joined
[06:10] <Xliff> \o

[06:10] <tellable6> 2022-09-04T11:31:05Z #raku-dev <lizmat> Xliff: wow, that's.... unexpected

[06:10] <tellable6> 2022-09-04T11:32:08Z #raku-dev <lizmat> Xliff: oddly enough, I don't see any slow down in core compilation 

[06:10] <tellable6> 2022-09-04T12:00:51Z #raku-dev <lizmat> Xliff: could you golf a piece of code that compiles noticeably slower: I cannot reproduce what you see locally  :-(

[06:11] <Xliff> lizmat: Sorry. All I can pass along are my weekly compilation logs that I aborted, yesterday.

[06:12] <Xliff> lizmat: Can you confirm stage parse time on your end? What time are you seeing?

[06:48] <lizmat> no change

[06:49] <lizmat> 30 sec for stage parse of 6.c core

[06:49] <lizmat> on my M1 mini

[06:58] *** nebuchadnezzar joined
[07:17] <Xliff> OK, I am getting 71 seconds. Last week it was 35 and fine.

[07:17] <Xliff> So  maybe I need to *sigh* nuke my moar blead.

[07:18] <Xliff> Might be something environmental since I've recently had lots of system instability.

[07:20] <Xliff> Another compile takes 70.511

[07:25] <Xliff> So another 71.133 seconds after a nuke

[07:25] <Xliff> And this is moar-blead

[07:25] <Xliff> lizmat: Have often do you compile from git?

[07:47] <lizmat> well... if I'm working on core stuff, several times a day

[07:47] <lizmat> lately I've been focusing more on App::Rak...

[07:48] *** sena_kun joined
[08:26] <lizmat> core build time on my Intel mac also are normal  

[08:33] <Xliff> lizmat: Thanks. So it's more than likely environmental.

[08:33] <Xliff> Wheee.

[08:33] <lizmat> Xliff: *or* your code is using some feature that tickles something that slows things down

[08:34] <lizmat> you are sure it is caused by the commit you mentioned ?

[08:34] <Xliff> I don't think I mentioned a specific commit.

[08:34] <Xliff> 'And this is rakudo.

[08:34] <Xliff> When CORE.c compile time comes in at over 40 seconds, I worry.

[08:34] <Xliff> It generally hovers between 29 and 39 seconds.

[08:35] <Xliff> And while I'm not actually documenting Raku compiles (and perhaps I should) I have been doing these weekly compiles for almost 2 years.

[08:36] <Xliff> new-disp growing pains not withstanding. :)

[08:36] <Xliff> So if there was a regression, it was done within the last week. Previous weeks compile times ran fine.

[08:36] <Xliff> Not doing them this week because of the visible regression.

[08:37] <Xliff> p6-GLib usually hovers in at around 345 seconds. Yesterday it took over 700!

[08:37] <Xliff> Fortunately, I can still focus on $dayJob, which I have turned into a Raku-leaning position.

[08:41] <lizmat> Xliff++

[08:41] <lizmat> Xliff: do you happen to use a lot of generics in your code ?

[08:42] <lizmat> vrurg ^^

[08:50] <Xliff> lizmat: A moderate bit, yes. However not so much for my work in $dayJob, which has also been slightly affected.

[09:08] *** evalable6 left
[09:08] *** linkable6 left
[09:08] <nine> You sure you're running an optimized build of MoarVM?

[09:09] *** linkable6 joined
[09:10] *** evalable6 joined
[09:36] *** sena_kun left
[09:39] <Xliff> nine: Yes. Again, I've been running these compiles for over 2 years.

[09:39] <Xliff> So the process is unchanging from week to week

[09:39] <Xliff> So I now have to assume it is due to recent problems with the environment itself. Those are harder to debug.

[09:52] <Geth> ¦ nqp: c25f65458b | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[09:52] <Geth> ¦ nqp: Bump MoarVM for latest fixes

[09:52] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/c25f65458b

[10:09] *** sena_kun joined
[10:13] <Geth> ¦ rakudo: 7342d9dc28 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[10:13] <Geth> ¦ rakudo: Bump NQP to get the latest MoarVM fixes

[10:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7342d9dc28

[10:44] *** gfldex left
[10:44] *** nine left
[10:44] *** tailgate left
[10:49] *** gfldex joined
[10:49] *** nine joined
[10:49] *** tailgate joined
[10:54] *** Xliff left
[12:09] *** reportable6 left
[12:10] *** reportable6 joined
[12:31] *** frost left
[12:35] *** Kaiepi left
[12:36] *** Kaiepi joined
[12:50] <lizmat> notable6: weekly

[12:50] <notable6> lizmat, No notes for “weekly”

[13:15] <vrurg> I'm a little bit lost about Xliff issues. Are they about compiling Rakudo? Or compiling gtk?

[13:25] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/09/05/2022-36-coming-in-at-50/

[13:26] <lizmat> vrurg: Xliff is seeing up to 2x slower compilation times in their code, /me does not see that in core compilation

[13:27] <lizmat> however, it appears Xliff's code is using some generics, and since you worked on that recently, I thought I'd ping you on this

[13:29] <sena_kun> lizmat++

[13:31] <vrurg> There is possible slowdown on run-time when generics are used, but that's because generics as such are nearly run-time only feature. But there is no chance it could affect Rakudo core compile times.

[13:32] <lizmat> well, It *isn't* about core compile times, but Xliff library compile times

[13:32] <vrurg> Neither compilation of modules should be affected because that would mean the core is using a lot of generics which is not true.

[13:33] <lizmat> well... something changed in the past week...  :-)

[13:34] <vrurg> The only way to find out is to bisect.

[13:34] <lizmat> yeah  :-)

[13:35] <lizmat> Unfortunately, Xliff is the only one with code to bisect

[13:36] *** linkable6 left
[13:36] *** evalable6 left
[13:36] *** evalable6 joined
[13:37] *** linkable6 joined
[13:41] <vrurg> I just've refreshed my memory. The slowdown is possible due to the need to instantiate a generic if used as return type. And dispatching over a generic needs one extra guard over routine's return type because it is not something static per-signature.

[13:42] <vrurg> But I don't see how this could cause 2x slowdown on compile times. BEGIN with lots of generics? Even then...

[14:28] <|Tux|> Rakudo v2022.07-35-g7342d9dc2 (v6.d) on MoarVM 2022.07-9-g740f3bcbe

[14:28] <|Tux|> csv-test-xs-20      0.406 -  0.407

[14:28] <|Tux|> csv-ip5xs           0.795 -  0.811

[14:28] <|Tux|> test-t --race       0.826 -  0.827

[14:28] <|Tux|> test-t              1.380 -  1.407

[14:28] <|Tux|> csv-parser          3.476 -  3.800

[14:28] <|Tux|> csv-ip5xs-20        5.094 -  5.330

[14:28] <|Tux|> test                6.222 -  6.403

[14:28] <|Tux|> test-t-20 --race    6.369 -  6.511

[14:28] <|Tux|> test-t-20          20.868 - 21.982

[14:58] *** linkable6 left
[14:58] *** evalable6 left
[14:58] *** evalable6 joined
[14:58] *** linkable6 joined
[17:17] *** sena_kun left
[17:49] *** sena_kun joined
[17:53] *** melezhik joined
[18:06] *** reportable6 left
[18:08] *** reportable6 joined
[18:31] *** epony left
[18:33] *** epony joined
[19:09] *** sena_kun left
[19:11] *** melezhik left
[19:11] *** sena_kun joined
[19:36] *** squashable6 left
[19:38] *** squashable6 joined
[20:38] *** linkable6 left
[20:38] *** evalable6 left
[20:39] *** linkable6 joined
[20:41] *** evalable6 joined
[20:41] *** sena_kun left
[20:49] *** sena_kun joined
[20:49] *** sena_kun left
[23:04] *** sourceable6 left
[23:04] *** coverable6 left
[23:04] *** statisfiable6 left
[23:04] *** nativecallable6 left
[23:04] *** unicodable6 left
[23:04] *** benchable6 left
[23:04] *** quotable6 left
[23:04] *** linkable6 left
[23:04] *** evalable6 left
[23:04] *** greppable6 left
[23:04] *** squashable6 left
[23:04] *** releasable6 left
[23:04] *** tellable6 left
[23:04] *** committable6 left
[23:04] *** bisectable6 left
[23:04] *** releasable6 joined
[23:05] *** linkable6 joined
[23:05] *** benchable6 joined
[23:05] *** quotable6 joined
[23:05] *** squashable6 joined
[23:05] *** sourceable6 joined
[23:05] *** statisfiable6 joined
[23:06] *** nativecallable6 joined
[23:06] *** bisectable6 joined
[23:06] *** tellable6 joined
[23:06] *** coverable6 joined
[23:06] *** greppable6 joined
[23:06] *** unicodable6 joined
[23:07] *** committable6 joined
[23:07] *** evalable6 joined
[23:57] *** squashable6 left
[23:59] *** squashable6 joined
