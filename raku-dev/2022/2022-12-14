[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:24] <Geth> ¦ problem-solving: 2colours assigned to codesections Issue Handling of non-breaking spaces when splitting to words https://github.com/Raku/problem-solving/issues/357

[00:46] <Geth> ¦ nqp/main: 0724fd6ab1 | (Will Coleda)++ | docs/ops.markdown

[00:46] <Geth> ¦ nqp/main: these ops are not in js

[00:46] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/0724fd6ab1

[04:48] *** MasterDuke joined
[05:11] <Geth> ¦ rakudo: vrurg++ created pull request #5135: Implement a reliable approach to experimental RakuAST

[05:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5135

[05:12] <vrurg> lizmat: ^^^

[05:12] <vrurg> lizmat: Without this PR something like `say RakuAST::Node` would still work.

[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[08:00] *** linkable6 left
[08:00] *** reportable6 left
[08:00] *** coverable6 left
[08:00] *** notable6 left
[08:00] *** unicodable6 left
[08:00] *** bloatable6 left
[08:00] *** greppable6 left
[08:00] *** statisfiable6 left
[08:00] *** nativecallable6 left
[08:00] *** committable6 left
[08:00] *** sourceable6 left
[08:00] *** shareable6 left
[08:00] *** bisectable6 left
[08:00] *** releasable6 left
[08:00] *** benchable6 left
[08:00] *** evalable6 left
[08:00] *** quotable6 left
[08:00] *** squashable6 left
[08:00] *** shareable6 joined
[08:00] *** bloatable6 joined
[08:00] *** linkable6 joined
[08:00] *** reportable6 joined
[08:00] *** bisectable6 joined
[08:01] *** notable6 joined
[08:01] *** sourceable6 joined
[08:01] *** quotable6 joined
[08:01] *** greppable6 joined
[08:01] *** statisfiable6 joined
[08:02] *** evalable6 joined
[08:02] *** unicodable6 joined
[08:02] *** committable6 joined
[08:03] *** benchable6 joined
[08:03] *** nativecallable6 joined
[08:03] *** coverable6 joined
[08:03] *** releasable6 joined
[08:03] *** squashable6 joined
[08:27] *** Xliff joined
[08:27] <Xliff> Timings for the p6-GLib suite have been absent for the past few weeks due to an error in the dependency resolution code.This has now been fixed.

[08:27] <tellable6> 2022-12-13T20:09:38Z #raku <vrurg> Xliff make use you have rakudo correctly installed. call.t passes for me.

[08:27] <tellable6> 2022-12-13T20:59:50Z #raku <vrurg> Xliff Correction. For test to work with RAKUDO_RAKUAST env RakuAST must fully or nearly fully complete which is far the case. Tests in 12-rakuast are for already implemented nodes only.

[08:28] <Xliff> P6-GLib suite timing statistics for Raku 2022.12.1.gd.52342.eb.0

[08:28] <Xliff> Total number of projects: 33 (502427 loc)

[08:28] <Xliff> Total non-parallel compile times: 8754.460 (265.287 avg)

[08:28] <Xliff> Total parallel compile times: 1748.927 (52.998 avg) 5.006x speedup

[09:32] <lizmat> vrurg: that's untrue:

[09:32] <lizmat> say RakuAST::Node'

[09:32] <lizmat> Must do a 'use experimental :rakuast' to access RakuAST::Node

[09:32] <lizmat> m: say RakuAST::Node

[09:32] <camelia> rakudo-moar d52342eb0: OUTPUT: «Could not find symbol '&Node' in 'GLOBAL::RakuAST'␤  in block <unit> at <tmp> line 1␤␤»

[09:34] <lizmat> ah, looks like camelia is stuck

[09:34] <lizmat> probably the master -> main change

[10:52] <lizmat> m: say RakuAST::Node

[10:52] <camelia> rakudo-moar 7d4c4ae07: OUTPUT: «Must do a 'use experimental :rakuast' to access RakuAST::Node␤  in block <unit> at <tmp> line 1␤␤»

[10:52] <lizmat> m: use experimental :rakuast; say RakuAST::Node

[10:52] <camelia> rakudo-moar 7d4c4ae07: OUTPUT: «(Node)␤»

[10:52] <lizmat> moritz++

[10:52] <lizmat> vrurg ^^

[11:01] *** epony left
[11:15] *** epony joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:57] <Xliff> Hmmm

[12:57] <Xliff> lizmat: Error while importing from 'experimental': no such tag 'rakuast'

[13:16] *** Xliff left
[13:17] *** Xliff joined
[13:23] <Xliff> OK, found out I was on the wrong rakudo vversion. Switched to the right one and 12-rakuast is working.

[14:40] *** tellable6 left
[14:40] *** bisectable6 left
[14:40] *** reportable6 left
[14:40] *** statisfiable6 left
[14:40] *** committable6 left
[14:40] *** shareable6 left
[14:40] *** quotable6 left
[14:40] *** sourceable6 left
[14:40] *** linkable6 left
[14:40] *** unicodable6 left
[14:40] *** releasable6 left
[14:41] *** tellable6 joined
[14:41] *** committable6 joined
[14:41] *** bisectable6 joined
[14:42] *** shareable6 joined
[14:42] *** reportable6 joined
[14:42] *** quotable6 joined
[14:42] *** statisfiable6 joined
[14:42] *** unicodable6 joined
[14:43] *** linkable6 joined
[14:43] *** sourceable6 joined
[14:43] *** releasable6 joined
[15:33] <lizmat> Xliff: *phew*

[15:43] *** linkable6 left
[15:43] *** evalable6 left
[15:43] <Xliff> P6-GLib suite timing statistics for Raku 2022.12.762.g.7.d.4.c.4.ae.07

[15:43] <Xliff> Total parallel compile times: 1631.155 (49.429 avg) 

[15:44] <Xliff> So the latest raku lost almost 120 seconds in parallel seconds to the one from the week before.

[15:44] *** evalable6 joined
[15:45] *** linkable6 joined
[15:47] <Xliff> You can see the raw tracking data here: https://github.com/Xliff/p6-GLib/blob/main/doc/Perl6%20Projects%20Line%20Counts.ods?raw=true

[15:47] <Xliff> On the sheet "Parallel Timints 2", last 2 columns.

[15:48] *** Xliff left
[17:05] *** statisfiable6 left
[17:05] *** unicodable6 left
[17:05] *** bloatable6 left
[17:05] *** nativecallable6 left
[17:05] *** greppable6 left
[17:05] *** shareable6 left
[17:05] *** quotable6 left
[17:05] *** reportable6 left
[17:05] *** sourceable6 left
[17:05] *** linkable6 left
[17:05] *** committable6 left
[17:05] *** notable6 left
[17:05] *** benchable6 left
[17:05] *** coverable6 left
[17:05] *** squashable6 left
[17:05] *** tellable6 left
[17:05] *** bisectable6 left
[17:05] *** releasable6 left
[17:05] *** evalable6 left
[17:06] *** shareable6 joined
[17:06] *** releasable6 joined
[17:06] *** linkable6 joined
[17:06] *** quotable6 joined
[17:06] *** coverable6 joined
[17:07] *** nativecallable6 joined
[17:07] *** unicodable6 joined
[17:07] *** tellable6 joined
[17:07] *** notable6 joined
[17:07] *** benchable6 joined
[17:07] *** reportable6 joined
[17:07] *** bisectable6 joined
[17:07] *** bloatable6 joined
[17:07] *** statisfiable6 joined
[17:08] *** greppable6 joined
[17:08] *** committable6 joined
[17:08] *** sourceable6 joined
[17:08] *** squashable6 joined
[17:08] *** evalable6 joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:46] *** sena_kun joined
[19:08] *** squashable6 left
[19:10] *** squashable6 joined
[19:13] <Geth> ¦ rakudo/main: 7e69a6de5d | (Elizabeth Mattijsen)++ | src/core.c/List.pm6

[19:13] <Geth> ¦ rakudo/main: Make List.head() about 2.4x as fast

[19:13] <Geth> ¦ rakudo/main: 

[19:13] <Geth> ¦ rakudo/main: Which now makes @foo.head 1.5x as fast as @foo[0], whereas before

[19:13] <Geth> ¦ rakudo/main: @foo.head was 1.5x as *slow* as @foo[0]

[19:13] <Geth> ¦ rakudo/main: 

[19:13] <Geth> ¦ rakudo/main: Done by adding a dedicated List.head candidate.

[19:13] <Geth> ¦ rakudo/main: 

[19:13] <Geth> ¦ rakudo/main: Curious observation: about 15% of performance gained by marking

[19:13] <Geth> ¦ rakudo/main: the method as "is raw" and doing the decont explicitely.

[19:13] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7e69a6de5d

[19:13] <lizmat> fg

[19:14] <lizmat> mmeh

[19:40] *** Xliff joined
[20:28] *** sena_kun left
[20:29] *** sena_kun joined
[20:30] *** sena_kun left
[20:31] *** sena_kun joined
[20:43] *** sena_kun left
[20:46] *** sena_kun joined
[20:55] *** melezhik joined
[20:59] *** melezhik left
[21:16] *** melezhik joined
[21:22] *** melezhik left
[22:23] *** sena_kun left
