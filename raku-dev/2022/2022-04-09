[00:05] *** reportable6 left
[00:06] *** reportable6 joined
[01:06] *** evalable6 left
[01:06] *** committable6 left
[01:06] *** reportable6 left
[01:06] *** notable6 left
[01:06] *** linkable6 left
[01:06] *** statisfiable6 left
[01:06] *** coverable6 left
[01:06] *** releasable6 left
[01:06] *** nativecallable6 left
[01:06] *** shareable6 left
[01:06] *** bisectable6 left
[01:06] *** benchable6 left
[01:06] *** bloatable6 left
[01:06] *** unicodable6 left
[01:06] *** greppable6 left
[01:06] *** sourceable6 left
[01:06] *** quotable6 left
[01:07] *** benchable6 joined
[01:07] *** notable6 joined
[01:07] *** linkable6 joined
[01:07] *** sourceable6 joined
[01:07] *** statisfiable6 joined
[01:07] *** coverable6 joined
[01:08] *** evalable6 joined
[01:08] *** reportable6 joined
[01:08] *** shareable6 joined
[01:08] *** committable6 joined
[01:08] *** bisectable6 joined
[01:08] *** greppable6 joined
[01:08] *** quotable6 joined
[01:08] *** nativecallable6 joined
[01:09] *** bloatable6 joined
[01:09] *** releasable6 joined
[01:09] *** unicodable6 joined
[01:20] *** japhb left
[01:23] *** japhb joined
[03:19] *** linkable6 left
[03:19] *** evalable6 left
[03:22] *** evalable6 joined
[03:22] *** linkable6 joined
[04:22] *** benchable6 left
[04:22] *** coverable6 left
[04:22] *** sourceable6 left
[04:22] *** notable6 left
[04:22] *** releasable6 left
[04:22] *** greppable6 left
[04:22] *** committable6 left
[04:22] *** statisfiable6 left
[04:22] *** linkable6 left
[04:22] *** unicodable6 left
[04:22] *** shareable6 left
[04:22] *** evalable6 left
[04:22] *** nativecallable6 left
[04:22] *** bisectable6 left
[04:22] *** reportable6 left
[04:22] *** bloatable6 left
[04:22] *** quotable6 left
[04:22] *** greppable6 joined
[04:23] *** quotable6 joined
[04:23] *** nativecallable6 joined
[04:23] *** bloatable6 joined
[04:23] *** sourceable6 joined
[04:23] *** notable6 joined
[04:23] *** unicodable6 joined
[04:23] *** benchable6 joined
[04:23] *** reportable6 joined
[04:23] *** committable6 joined
[04:24] *** linkable6 joined
[04:24] *** bisectable6 joined
[04:24] *** statisfiable6 joined
[04:25] *** releasable6 joined
[04:25] *** coverable6 joined
[04:25] *** evalable6 joined
[04:25] *** shareable6 joined
[05:27] *** frost joined
[05:27] *** frost left
[05:51] *** frost joined
[06:07] *** reportable6 left
[06:07] *** reportable6 joined
[08:28] <lizmat> Files=1352, Tests=117183, 289 wallclock secs (35.30 usr 10.06 sys + 4042.03 cusr 333.80 csys = 4421.19 CPU)

[08:30] <Geth> ¦ rakudo/rakuast: c8b5b5297f | (Stefan Seifert)++ | 2 files

[08:30] <Geth> ¦ rakudo/rakuast: Parse sub trait_mod:<is>(...) { ... }

[08:30] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/c8b5b5297f

[08:30] <Geth> ¦ rakudo/rakuast: 997c4f20b2 | (Stefan Seifert)++ | 2 files

[08:30] <Geth> ¦ rakudo/rakuast: Fix trait stumbling over unresolved types in signature

[08:30] <Geth> ¦ rakudo/rakuast: 

[08:30] <Geth> ¦ rakudo/rakuast: We have to fully resolve a routine's signature before applying traits as the

[08:30] <Geth> ¦ rakudo/rakuast: latter may want to access e.g. parameter types. However, naively doing so

[08:30] <Geth> ¦ rakudo/rakuast: revealed a timing problem. Signatures and parameters tuned their behaviour

[08:30] <Geth> ¦ rakudo/rakuast: according to whether they were attached to a (methodish) routine. This broke

[08:30] <Geth> ¦ rakudo/rakuast: as at the time we're applying traits, the signature is not attached yet.

[08:30] <Geth> ¦ rakudo/rakuast: 

[08:30] <Geth> ¦ rakudo/rakuast: Follow the "tell, don't ask" principle of object oriented design and instead

[08:30] <Geth> ¦ rakudo/rakuast: of signatures and parameters querying their owner, have the owner tell them

[08:30] <Geth> ¦ rakudo/rakuast: how to behave via the new set-is-on-method and set-default-type methods.

[08:31] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/997c4f20b2

[09:49] <Geth> ¦ rakudo: 88abddcaba | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6

[09:49] <Geth> ¦ rakudo: Probably fix installability test in CURI

[09:49] <Geth> ¦ rakudo: 

[09:49] <Geth> ¦ rakudo: As described in https://github.com/rakudo/rakudo/issues/4857

[09:49] <Geth> ¦ rakudo: 

[09:49] <Geth> ¦ rakudo: Unfortunately, I was not able to reproduce the issue.  So not 100%

[09:49] <Geth> ¦ rakudo: this is the fix.  It is in any case closer to the original code.

[09:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/88abddcaba

[10:05] <nine> lizmat: that's prone to a race condition. Why not use try like the original?

[10:06] <lizmat> nine: why the try?  the most lethal thing mkdir can return is a Failure ?

[10:07] <lizmat> and afaics, that is the original semantics I restored, so I also restored the race condition ?

[10:08] <Geth> ¦ rakudo: a72313445c | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp

[10:08] <Geth> ¦ rakudo: Reduce number of method calls in stub check

[10:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a72313445c

[10:08] <nine> Ah, yes, mkdir catches the VM's exception

[10:08] <nine> So....ignore my comment then :)

[10:09] <lizmat> fwiw, I still don't understand how that commit could be the reason, but I hope this fixes it.  If not, I will look into it further

[10:10] <lizmat> and apparently this fixed the issue

[10:10] <MasterDuke> lizmat: btw, have you looked at the "checks" tab of PRs? that's where you can find the links to the build logs

[10:11] <MasterDuke> "View more details on Azure Pipelines "

[10:12] <MasterDuke> speaking of PRs, think https://github.com/Raku/nqp/pull/768 looks any better nine?

[10:15] <lizmat> ok, I'm pretty sure I tried it before... works now

[10:15] <lizmat> maybe a temp glitch on the Azure end

[10:17] <MasterDuke> yeah, i occasionally couldn't access it before, but it's been fine for a while now

[10:36] *** linkable6 left
[10:39] *** linkable6 joined
[11:07] <Geth> ¦ rakudo: e42044c722 | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp

[11:07] <Geth> ¦ rakudo: Streamline ModuleLoader.merge_globals

[11:07] <Geth> ¦ rakudo: 

[11:07] <Geth> ¦ rakudo: - don't populate known symbols if there's nothing to merge

[11:07] <Geth> ¦ rakudo: - don't special case both sides stubbed anymore

[11:07] <Geth> ¦ rakudo: - only check for stubbing on each side once

[11:07] <Geth> ¦ rakudo: - remove "P6M" from die message: it seems unnecessary now

[11:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e42044c722

[11:23] <Geth> ¦ rakudo/rakuast: 781d2a4c16 | (Stefan Seifert)++ | 2 files

[11:23] <Geth> ¦ rakudo/rakuast: Parse multi declarators

[11:23] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/781d2a4c16

[11:26] <Geth> ¦ rakudo: 458df44dfe | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp

[11:26] <Geth> ¦ rakudo: Abstract known symbols lookup logic into a sub

[11:26] <Geth> ¦ rakudo: 

[11:26] <Geth> ¦ rakudo: And optimize it so that we don't need to create NQP pair objects.

[11:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/458df44dfe

[11:38] *** sena_kun left
[11:39] *** sena_kun joined
[11:43] <[Tux]> Rakudo v2022.03-168-g458df44df (v6.d) on MoarVM 2022.03-15-g43e1b00a6

[11:43] <[Tux]> csv-test-xs-20      0.397 -  0.398

[11:43] <[Tux]> csv-ip5xs           0.890 -  0.975

[11:43] <[Tux]> test-t --race       0.968 -  1.026

[11:43] <[Tux]> test-t              1.578 -  1.755

[11:43] <[Tux]> csv-parser          3.694 -  3.711

[11:43] <[Tux]> csv-ip5xs-20        5.531 -  6.038

[11:43] <[Tux]> test-t-20 --race    6.246 -  6.485

[11:43] <[Tux]> test                6.806 -  7.130

[11:43] <[Tux]> test-t-20          20.922 - 21.080

[12:06] *** reportable6 left
[12:08] *** reportable6 joined
[12:12] <Geth> ¦ rakudo/rakuast: 896dd2d643 | (Jonathan Worthington)++ | src/Raku/ast/compunit.rakumod

[12:12] <Geth> ¦ rakudo/rakuast: Correct Rat literal construction

[12:12] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/896dd2d643

[12:56] <Geth> ¦ nqp/master: 5 commits pushed by (Daniel Green)++, MasterDuke17++

[12:56] <Geth> ¦ nqp/master: 49f11e918c | Bump MoarVM for MAST::Bytecode.write_uint16_at

[12:56] <Geth> ¦ nqp/master: 3c4527d32b | Presize $!mbc and write at offsets instead of pushing

[12:56] <Geth> ¦ nqp/master: c563f667a4 | Write each frame directly to the MAST bytecode file...

[12:56] <Geth> ¦ nqp/master: 9483577001 | Simplify with some lexical subs

[12:56] <Geth> ¦ nqp/master: f08af11bc1 | Merge pull request #768 from MasterDuke17/some_mast_bytecode_writing_optimizations

[12:56] <Geth> ¦ nqp/master: review: https://github.com/Raku/nqp/compare/27d6a33abc3b...f08af11bc195

[13:03] <Geth> ¦ rakudo: f66bcf6ebc | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp

[13:03] <Geth> ¦ rakudo: Streamline ModuleLoader.merge_globals_lexically

[13:03] <Geth> ¦ rakudo: 

[13:03] <Geth> ¦ rakudo: - revert known symbols abstraction, turned out it wasn't general enough

[13:03] <Geth> ¦ rakudo: - rename is_stub to is_HOW_stub, it doesn't take HOWs anymore

[13:03] <Geth> ¦ rakudo: - don't do anything if there's nothing to do

[13:03] <Geth> ¦ rakudo: - group actions together and simplify checking logic

[13:03] <Geth> ¦ rakudo: - remove P6M from error message

[13:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f66bcf6ebc

[13:16] <Geth> ¦ rakudo: 1ad97a687d | (Daniel Green)++ | tools/templates/NQP_REVISION

[13:16] <Geth> ¦ rakudo: Bump NQP for a change/optimization to how bytecode is written to files

[13:16] <Geth> ¦ rakudo: 

[13:16] <Geth> ¦ rakudo: The buffer for each frame is now pre-allocated and each frame is written

[13:16] <Geth> ¦ rakudo: to the file directly, instead of building them all up into one large

[13:16] <Geth> ¦ rakudo: buffer. Given the speed of modern SSDs, this is the same as or only

[13:16] <Geth> ¦ rakudo: slightly slower than doing it all at once and saves on total memory

[13:16] <Geth> ¦ rakudo: used.

[13:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1ad97a687d

[13:44] <Geth> ¦ rakudo: b249a56ff5 | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp

[13:44] <Geth> ¦ rakudo: Remove unused named variable from previous_setting_name

[13:44] <Geth> ¦ rakudo: 

[13:44] <Geth> ¦ rakudo: It was not / no longer being used anywhere.  Removed code is

[13:44] <Geth> ¦ rakudo: debugged code :)

[13:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b249a56ff5

[14:51] *** dogbert17 joined
[15:09] *** frost left
[15:45] *** sena_kun left
[15:46] *** sena_kun joined
[16:57] *** sena_kun left
[16:58] *** sena_kun joined
[18:04] *** discord-raku-bot left
[18:05] *** discord-raku-bot joined
[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[18:09] <Geth> ¦ rakudo: 0f7c042256 | (Elizabeth Mattijsen)++ | src/Perl6/World.nqp

[18:09] <Geth> ¦ rakudo: Streamline World.find_single_symbol

[18:09] <Geth> ¦ rakudo: 

[18:09] <Geth> ¦ rakudo: - turn existskey / atkey pairs into nqp::isnull(nqp::atkey) so that

[18:09] <Geth> ¦ rakudo:   a found key only needs to be looked up once.

[18:09] <Geth> ¦ rakudo: - don't repeat dynamic variable lookups

[18:09] <Geth> ¦ rakudo: - reduce number of lexicals

[18:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0f7c042256

[19:11] *** linkable6 left
[19:13] *** linkable6 joined
[19:34] <Geth> ¦ rakudo: 93ebde2dae | (Elizabeth Mattijsen)++ | src/Perl6/World.nqp

[19:34] <Geth> ¦ rakudo: Streamline symbol lookup in setting

[19:34] <Geth> ¦ rakudo: 

[19:34] <Geth> ¦ rakudo: - rename method to "find_single_symbol_in_setting" to

[19:34] <Geth> ¦ rakudo:   "find_single_symbol_in_unloaded_setting" as this method is only

[19:34] <Geth> ¦ rakudo:   called for symbol lookup if the setting for the World object

[19:34] <Geth> ¦ rakudo:   actually hasn't been loaded yet.

[19:34] <Geth> ¦ rakudo: - replace existkey/atkey with nqp::isnull(atkey) logic

[19:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/93ebde2dae

[20:17] <Geth> ¦ rakudo: 3b692b1b34 | (Elizabeth Mattijsen)++ | src/Perl6/World.nqp

[20:17] <Geth> ¦ rakudo: Add World.find_single_symbol_in_setting method

[20:17] <Geth> ¦ rakudo: 

[20:17] <Geth> ¦ rakudo: - fast-path to finding common symbols from the setting, such as

[20:17] <Geth> ¦ rakudo:   Mu, Any, Pair, etc.

[20:17] <Geth> ¦ rakudo: - one less named param in call

[20:17] <Geth> ¦ rakudo: - revert to slow-path if not found

[20:17] <Geth> ¦ rakudo: - Adapt calls in World to use this where possible

[20:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3b692b1b34

[20:20] *** Geth left
[20:20] *** Geth joined
[20:39] <Geth> ¦ rakudo: 9a860ca85d | (Elizabeth Mattijsen)++ | src/Perl6/Actions.nqp

[20:39] <Geth> ¦ rakudo: Use new World.find_single_symbol_in_setting in Actions

[20:39] <Geth> ¦ rakudo: 

[20:39] <Geth> ¦ rakudo: Feels to me there are a lot more calls that could be fast-pathed

[20:39] <Geth> ¦ rakudo: to settings only.  But that's for another day

[20:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9a860ca85d

[22:05] *** discord-raku-bot left
[22:06] *** discord-raku-bot joined
[23:54] *** reportable6 left
[23:54] *** committable6 left
[23:54] *** bloatable6 left
[23:54] *** nativecallable6 left
[23:54] *** linkable6 left
[23:54] *** releasable6 left
[23:54] *** benchable6 left
[23:54] *** quotable6 left
[23:54] *** shareable6 left
[23:54] *** sourceable6 left
[23:54] *** statisfiable6 left
[23:54] *** bisectable6 left
[23:54] *** coverable6 left
[23:54] *** evalable6 left
[23:54] *** greppable6 left
[23:54] *** unicodable6 left
[23:54] *** notable6 left
[23:54] *** reportable6 joined
[23:55] *** linkable6 joined
[23:55] *** greppable6 joined
[23:55] *** bloatable6 joined
[23:56] *** coverable6 joined
[23:56] *** bisectable6 joined
[23:56] *** quotable6 joined
[23:56] *** releasable6 joined
[23:56] *** benchable6 joined
[23:56] *** nativecallable6 joined
[23:56] *** committable6 joined
[23:56] *** sourceable6 joined
[23:57] *** notable6 joined
[23:57] *** statisfiable6 joined
[23:57] *** evalable6 joined
[23:57] *** unicodable6 joined
[23:57] *** shareable6 joined
