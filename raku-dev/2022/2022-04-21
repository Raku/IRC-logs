[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[00:44] <[Coke]> I'm not a sparrow user - what's the spawned bash script doing (that's where the segfault is, yes)

[01:25] *** discord-raku-bot left
[01:25] *** discord-raku-bot joined
[01:49] *** Voldenet_ joined
[01:49] *** Voldenet left
[01:49] *** Voldenet_ is now known as Voldenet

[02:18] *** frost joined
[02:24] <melezhik> .tell SmokeMachine hopefully I fixed SparkyCI performance and false negative issues , please try to run new builds for Red and let me know if you have any issue

[02:24] <tellable6> melezhik, I'll pass your message to SmokeMachine

[02:25] <melezhik> the service is still in deep development, so things may happen )))

[03:00] <releasable6> Next release in ≈1 day and ≈15 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:08] *** melezhik left
[08:16] *** lizmat left
[08:16] *** lizmat joined
[09:00] <lizmat> Files=1353, Tests=117192, 290 wallclock secs (35.28 usr 10.12 sys + 4035.75 cusr 336.58 csys = 4417.73 CPU)

[09:02] *** sena_kun left
[09:03] *** Geth joined
[09:03] *** sena_kun joined
[09:23] <Geth> ¦ rakudo/lizmat-unitemize-meta: 9ed4fae856 | (Elizabeth Mattijsen)++ | 2 files

[09:23] <Geth> ¦ rakudo/lizmat-unitemize-meta: Restore .meta behaviour

[09:23] <Geth> ¦ rakudo/lizmat-unitemize-meta: 

[09:23] <Geth> ¦ rakudo/lizmat-unitemize-meta: on CompUnit::Repository::Distribution and Distribution::Path.

[09:23] <Geth> ¦ rakudo/lizmat-unitemize-meta: 

[09:23] <Geth> ¦ rakudo/lizmat-unitemize-meta: These were recently changed to return an unitemized hash, but

[09:23] <Geth> ¦ rakudo/lizmat-unitemize-meta: apparently there's code out there that depended on the itemization

[09:23] <Geth> ¦ rakudo/lizmat-unitemize-meta: behaviour.

[09:23] <Geth> ¦ rakudo/lizmat-unitemize-meta: review: https://github.com/rakudo/rakudo/commit/9ed4fae856

[09:23] <Geth> ¦ rakudo: lizmat++ created pull request #4896: Restore .meta behaviour

[09:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4896

[09:46] <Geth> ¦ IO-Path-ChildSecure/main: 577168a00c | (Elizabeth Mattijsen)++ | 9 files

[09:46] <Geth> ¦ IO-Path-ChildSecure/main: First commit of updated module

[09:46] <Geth> ¦ IO-Path-ChildSecure/main: review: https://github.com/raku-community-modules/IO-Path-ChildSecure/commit/577168a00c

[09:50] <Geth> ¦ IO-Path-ChildSecure/main: 48e6c21c9b | (Elizabeth Mattijsen)++ | 2 files

[09:50] <Geth> ¦ IO-Path-ChildSecure/main: 1.1

[09:50] <Geth> ¦ IO-Path-ChildSecure/main: review: https://github.com/raku-community-modules/IO-Path-ChildSecure/commit/48e6c21c9b

[09:51] <lizmat> [Coke] ^^  :-)

[10:43] *** linkable6 left
[10:43] *** evalable6 left
[10:44] *** evalable6 joined
[10:45] *** linkable6 joined
[10:59] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: 7df9c34341 | (Elizabeth Mattijsen)++ | tools/cleanup-precomps.raku

[10:59] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: Say how many bytes in files were freed

[10:59] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: 

[10:59] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: Typically 27 MB for just one setting re-compilation for yours truly

[10:59] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: review: https://github.com/rakudo/rakudo/commit/7df9c34341

[11:40] <Geth> ¦ DBIish/main: 88264f6d70 | (Rod Taylor)++ | .github/workflows/test.yml

[11:40] <Geth> ¦ DBIish/main: Improve dependency installation success?

[11:40] <Geth> ¦ DBIish/main: 

[11:40] <Geth> ¦ DBIish/main: Dependency installation regularly fails during the cron'd time but succeeds if rerun. I presume starting on-the-hour results in busy servers, so try starting at a less standard minute (a largish prime) instead.

[11:40] <Geth> ¦ DBIish/main: review: https://github.com/raku-community-modules/DBIish/commit/88264f6d70

[12:04] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: ea647c2d41 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/PrecompilationRepository.pm6

[12:04] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: Fix repo-chain changes check

[12:04] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: 

[12:04] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: It was incorrectly checking the compilation unit ID against the

[12:04] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: what is considered the original first REPO.id in the chain.  It

[12:04] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: should be checking against the *current* first REPO.id!

[12:04] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: review: https://github.com/rakudo/rakudo/commit/ea647c2d41

[12:04] <Geth> ¦ rakudo: lizmat++ created pull request #4897: Fix repo-chain changes check

[12:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4897

[12:08] *** reportable6 left
[12:10] *** reportable6 joined
[12:14] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: d64686fc5a | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/PrecompilationRepository.pm6

[12:14] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: Make sure the RAKUDO_MODULE_DEBUG output matches

[12:14] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: review: https://github.com/rakudo/rakudo/commit/d64686fc5a

[12:20] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: 02556e87a0 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/PrecompilationRepository.pm6

[12:20] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: Actually refer to an existing variable  :-(

[12:20] <Geth> ¦ rakudo/lizmat-fix-repo-chain-check: review: https://github.com/rakudo/rakudo/commit/02556e87a0

[12:28] <[Coke]> lizmat: that commit changed the whole repo, it seems

[12:29] <lizmat> ??

[12:29] <lizmat> ah, you mean ChildSecure

[12:30] <lizmat> yes... basically it is now a distrubution handled by App::Mi6

[12:30] <lizmat> *distribution

[13:20] <[Coke]> but it also changed it from nqp to raku at the same time, yes?

[13:20] <lizmat> yup

[13:35] *** discord-raku-bot left
[13:36] *** discord-raku-bot joined
[13:41] *** frost left
[14:16] <jdv> just started hopefully the last blin run

[14:22] *** londoed left
[14:31] *** londoed joined
[15:00] <japhb> lizmat: 7df9c34341 defines gross-bytes but doesn't use it ... is that in preparation for a followup?

[15:08] *** londoed left
[15:08] *** londoed_ joined
[15:40] <[Coke]> jdv: any errors in the nqp test suite?

[16:45] *** linkable6 left
[16:47] *** linkable6 joined
[16:51] <jdv> i don't run that before the release usually

[16:51] <jdv> just blin

[16:57] <jdv> looks like there's still something up with Text::CodeProcessing and now Cro::ZeroMQ is unhappy too - latest blin

[16:58] <jdv> lizmat: do you think we should just ticket the T::CP one and leave it at that?

[16:59] <jdv> lizmat: also, could part of that C::ZMQ one be from the module work you've been busy at?

[17:08] <jdv> i'm gettin the feelin we might need to defer the release...

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: a827fcae5e | (Elizabeth Mattijsen)++ | tools/cleanup-precomps.raku

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: Remove dead code, japhb++ for noticing

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: 

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: Originally I planned to report the actual size of the blocks freed

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: but at least on (my) MacOS the reported block size and the number

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: of blocks freed, was at least a factor 8 too large (which could

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: very well be it reporting a block size of 4096, but actually working

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: with 512 byte blocks).  So I returned to just report the sum of the

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: file sizes of the files removed.  And forgot to remove the code that

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: tried to calculate the raw size freed.

[17:08] <Geth> ¦ rakudo/lizmat-constantize-compiler-info: review: https://github.com/rakudo/rakudo/commit/a827fcae5e

[17:09] * lizmat checks for a new blin run

[17:10] <lizmat> jdv: will look at Text::CodeProcessing again, glad that Jupyter::Kernel is clean now (although it *was* naughty(

[17:10] <lizmat> ))

[17:11] <jdv> thanks

[17:11] <jdv> what do you think about the other one?

[17:11] <jdv> i'm a bit more concerned at that

[17:11] <jdv> s/at/about/

[17:13] <lizmat> I will look at that after I had a look at T:CP   but it looks like it's a repo based issue, and I've been doing a lot in that area recently (although not on CURFS or CURI

[17:17] <lizmat> I plan on working on this the coming 2.5 hours...  if not fixed by then, I'll let you know

[17:22] *** timo left
[17:43] <lizmat> m: $answer ** 2

[17:43] <camelia> rakudo-moar 530e17848: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '$answer' is not declared.  Perhaps you forgot a 'sub' if this␤was intended to be part of a signature?␤at <tmp>:1␤------> <BOL>⏏$answer ** 2␤»

[17:43] <lizmat> jdv ^^^ that error message has changed, and T::CP is checking for the *exact* error message.

[17:43] <lizmat> I will make an issue

[17:46] <lizmat> bisectable6: old=2021.12 $answer ** 2

[17:46] <bisectable6> lizmat, Bisecting by output (old=2021.12 new=522c5fc) because on both starting points the exit code is 1

[17:47] <bisectable6> lizmat, bisect log: https://gist.github.com/b5bdbec72e11a21dc25e4365036f0e86

[17:47] <bisectable6> lizmat, (2022-03-23) https://github.com/rakudo/rakudo/commit/a56d239d0ce115d60caa772a30acafce933274f0

[17:47] <jdv> lizmat: oh... thanks

[17:48] <lizmat> https://github.com/antononcube/Raku-Text-CodeProcessing/issues/2

[17:48] <lizmat> I'm leaving to the author how they want to fix that in a version independent way  :-)

[17:49] <jdv> nice

[17:50] <lizmat> first, going to watch a SpaceX launch  :-)

[17:50] <lizmat> T-01:40

[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:20] *** linkable6 left
[18:21] *** linkable6 joined
[18:22] *** Geth left
[18:22] *** Geth joined
[18:26] *** Geth left
[18:26] *** Geth joined
[18:46] <lizmat> https://github.com/croservices/cro-zeromq/pull/4

[18:47] <lizmat> jdv ^^

[18:47] <lizmat> the problem was caused by a defective META6.json file that was previously not seen because the tests used -Ilib rather than -I.

[18:48] *** linkable6 left
[18:51] *** linkable6 joined
[18:56] <jdv> lizmat: thanks

[18:57] <jdv> draft changelogs are up

[18:57] * lizmat looks

[18:58] * lizmat edits

[18:59] <jdv> note i left my working list for your chunk at the bottom in case that helps

[18:59] <lizmat> jdv: did we always include PR numbers in commit messages ?

[18:59] <jdv> aside from spelling i normally take the pr and/or commit msg verbatim

[19:00] <jdv> i'm guessing that's from gh squashings?...

[19:00] <lizmat> yeah... I don't think they make much sense in a changelog, if you also specify the commit(s)

[19:00] <jdv> i don't think so though

[19:05] <[Coke]> jdv: do you run 'make test' in rakudo before the release?

[19:07] <jdv> of course

[19:09] <jdv> lizmat: are you editting now?  cause i forgot to run releaseable to finish up and i need to add a few more.

[19:09] <jdv> [Coke]: just not a lot of free time, you know;)

[19:22] <lizmat> jdv: just stopped editing for now

[19:25] <lizmat> jdv: going to be afk for a bit...  will be back in ~ 2 hours

[19:27] <jdv> lizmat: cool, thanks

[19:33] <jdv> lizmat: i'm done

[20:21] <patrickb> jdv: Did you notice https://github.com/rakudo/rakudo.org/pull/78 ?

[20:25] <Geth> ¦ WebService-GitHub/main: 6 commits pushed by (Patrick Böker)++

[20:25] <Geth> ¦ WebService-GitHub/main: 9e0aba909d | Remove completely broken Makefile

[20:25] <Geth> ¦ WebService-GitHub/main: bcc4c8151b | Lots of cleanup in META6.json

[20:25] <Geth> ¦ WebService-GitHub/main: ccacf6356e | Some perl6 -> raku

[20:25] <Geth> ¦ WebService-GitHub/main: e635a253ea | Rename generate-code -> generate-module

[20:25] <Geth> ¦ WebService-GitHub/main: f103e89b48 | Add missing files to META6.json

[20:25] <Geth> ¦ WebService-GitHub/main: ea5d8c64d6 | Short doc on how to do a release

[20:25] <Geth> ¦ WebService-GitHub/main: review: https://github.com/raku-community-modules/WebService-GitHub/compare/31cebadb70ed...ea5d8c64d68a

[21:53] *** melezhik joined
[22:01] <jdv> patrickb: i did, but like [Coke], i'm not sure i have much to add.

[22:02] <jdv> i don't know zoffix's key either

[22:07] <jdv> what is non-typical about it?  my key is on a keyserver somewhere.  not sure what is meant by listing a key on a gh profile page.  i know mine is at gh and i believe people can query it somehow if they wish - not sure why they would...

[22:26] <Geth> ¦ rakudo: c029308938 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 2 files

[22:26] <Geth> ¦ rakudo: Restore .meta behaviour

[22:26] <Geth> ¦ rakudo: 

[22:26] <Geth> ¦ rakudo: on CompUnit::Repository::Distribution and Distribution::Path.

[22:26] <Geth> ¦ rakudo: 

[22:26] <Geth> ¦ rakudo: These were recently changed to return an unitemized hash, but

[22:26] <Geth> ¦ rakudo: apparently there's code out there that depended on the itemization

[22:27] <Geth> ¦ rakudo: behaviour.

[22:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c029308938

[22:27] <Geth> ¦ rakudo: 4a7da9a161 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/CompUnit/PrecompilationRepository.pm6

[22:27] <Geth> ¦ rakudo: Fix repo-chain changes check

[22:27] <Geth> ¦ rakudo: 

[22:27] <Geth> ¦ rakudo: It was incorrectly checking the compilation unit ID against the

[22:27] <Geth> ¦ rakudo: what is considered the original first REPO.id in the chain.  It

[22:27] <Geth> ¦ rakudo: should be checking against the *current* first REPO.id!

[22:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4a7da9a161

[22:53] *** evalable6 left
[22:53] *** linkable6 left
[22:54] *** evalable6 joined
[22:55] *** linkable6 joined
[23:00] <releasable6> Next release in ≈19 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

