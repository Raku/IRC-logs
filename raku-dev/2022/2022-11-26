[00:00] *** discord-raku-bot left
[00:01] *** discord-raku-bot joined
[00:08] *** reportable6 left
[00:09] *** reportable6 joined
[00:16] *** discord-raku-bot left
[00:32] *** discord-raku-bot joined
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 20e2d2b602 | (Rod Taylor)++ | 3 files
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Handle Num, Rat, and FatRat as numbers
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Num can always use MYSQL_TYPE_DOUBLE.
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Rat can sometimes use MYSQL_TYPE_DOUBLE (when it fits into Num) but sometimes needs to be sent as MYSQL_TYPE_NEWDECIMAL. Prefer to use the Double as it should be considerably cheaper (CPU vs bandwidth) despite the extra tests to see fit though I did not use a benchmark to prove that.
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: FatRat always uses MYSQL_TYPE_NEWDECIMAL. We can assume numbers are very large based on the developers type choice.
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/20e2d2b602
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 598ece3366 | (Rod Taylor)++ | lib/DBDish/mysql/StatementHandle.rakumod
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Mark very large integers as NEWDECIMAL
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Using a numeric type, rather than string, should reduce any potential issues with very large integers.
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/598ece3366
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: cb5565f326 | (Rod Taylor)++ | 2 files
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Move large-value tests to types file
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: This file has started testing boundary cases for other datatypes, which is also the goal of the integer and string tests. They can all be in one place since the special JSON test was moved earlier.
[00:47] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/cb5565f326
[00:58] *** Kaiepi left
[01:20] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: e691a24ed8 | (Rod Taylor)++ | 2 files
[01:20] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Move large-value tests to types file
[01:20] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[01:20] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: This file has started testing boundary cases for other datatypes, which is also the goal of the integer and string tests. They can all be in one place since the special JSON test was moved earlier.
[01:20] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/e691a24ed8
[01:21] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 2fd588c908 | (Rod Taylor)++ | 2 files
[01:21] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Move large-value tests to types file
[01:21] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[01:21] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: This file has started testing boundary cases for other datatypes, which is also the goal of the integer and string tests. They can all be in one place since the special JSON test was moved earlier.
[01:21] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/2fd588c908
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 5ae836fc82 | (Rod Taylor)++ | 2 files
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Handle Num, Rat, and FatRat as numbers
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Num can always use MYSQL_TYPE_DOUBLE.
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Rat can sometimes use MYSQL_TYPE_DOUBLE (when it fits into Num) but sometimes needs to be sent as MYSQL_TYPE_NEWDECIMAL. Prefer to use the Double as it should be considerably cheaper (CPU vs bandwidth) despite the extra tests to see fit though I did not use a benchmark to prove that.
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: FatRat always uses MYSQL_TYPE_NEWDECIMAL. We can assume numbers are very large based on the developers type choice.
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/5ae836fc82
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: c55543fb2f | (Rod Taylor)++ | lib/DBDish/mysql/StatementHandle.rakumod
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Mark very large integers as NEWDECIMAL
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Using a numeric type, rather than string, should reduce any potential issues with very large integers.
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/c55543fb2f
[01:25] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 64004841d8 | (Rod Taylor)++ | 2 files
[01:26] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: Move large-value tests to types file
[01:26] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: 
[01:26] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: This file has started testing boundary cases for other datatypes, which is also the goal of the integer and string tests. They can all be in one place since the special JSON test was moved earlier.
[01:26] <Geth> ¦ DBIish/rbt.mysql-numbers-are-numbers: review: https://github.com/raku-community-modules/DBIish/commit/64004841d8
[01:44] *** sortiz left
[03:12] *** Kaiepi joined
[06:09] *** reportable6 left
[06:10] *** reportable6 joined
[07:10] *** statisfiable6 left
[07:10] *** committable6 left
[07:10] *** quotable6 left
[07:10] *** evalable6 left
[07:10] *** bisectable6 left
[07:10] *** releasable6 left
[07:10] *** reportable6 left
[07:10] *** shareable6 left
[07:11] *** statisfiable6 joined
[07:12] *** reportable6 joined
[07:12] *** evalable6 joined
[07:13] *** quotable6 joined
[07:13] *** committable6 joined
[07:13] *** bisectable6 joined
[07:13] *** releasable6 joined
[07:13] *** shareable6 joined
[08:50] *** bisectable6 left
[08:50] *** greppable6 left
[08:50] *** coverable6 left
[08:50] *** benchable6 left
[08:50] *** shareable6 left
[08:50] *** notable6 left
[08:50] *** reportable6 left
[08:50] *** statisfiable6 left
[08:50] *** committable6 left
[08:50] *** evalable6 left
[08:50] *** quotable6 left
[08:50] *** releasable6 left
[08:50] *** squashable6 left
[08:50] *** sourceable6 left
[08:50] *** bloatable6 left
[08:50] *** nativecallable6 left
[08:50] *** tellable6 left
[08:51] *** nativecallable6 joined
[08:51] *** greppable6 joined
[08:51] *** statisfiable6 joined
[08:51] *** bloatable6 joined
[08:51] *** sourceable6 joined
[08:51] *** bisectable6 joined
[08:51] *** evalable6 joined
[08:52] *** releasable6 joined
[08:52] *** quotable6 joined
[08:52] *** shareable6 joined
[08:52] *** benchable6 joined
[08:52] *** reportable6 joined
[08:52] *** coverable6 joined
[08:53] *** tellable6 joined
[08:53] *** notable6 joined
[08:53] *** squashable6 joined
[08:53] *** committable6 joined
[09:09] <Geth> ¦ WWW: 9750d0e82f | (JJ Merelo)++ | README.md
[09:09] <Geth> ¦ WWW: :memo:, this was good enough to stand the test of time
[09:09] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/9750d0e82f
[09:10] <Geth> ¦ WWW: 1886c86eee | (JJ Merelo)++ | 2 files
[09:10] <Geth> ¦ WWW: :coffin:
[09:10] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/1886c86eee
[09:15] <Geth> ¦ WWW: bb5e8a7eed | (JJ Merelo)++ | 4 files
[09:15] <Geth> ¦ WWW: IDE things should not go in the repo
[09:15] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/bb5e8a7eed
[09:44] *** Kaiepi left
[09:57] *** discord-raku-bot left
[09:58] *** discord-raku-bot joined
[10:05] *** Kaiepi joined
[11:45] *** squashable6 left
[11:47] *** squashable6 joined
[11:56] <Geth> ¦ WWW: a05289d643 | (JJ Merelo)++ | .github/workflows/test.yaml
[11:56] <Geth> ¦ WWW: Eliminates testing of dependencies to avoid errors
[11:56] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/a05289d643
[11:58] <Geth> ¦ WWW: f54f730b06 | (JJ Merelo)++ | .github/workflows/test.yaml
[11:58] <Geth> ¦ WWW: use latest version
[11:58] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/f54f730b06
[12:04] <Geth> ¦ WWW: e7784e47d0 | (JJ Merelo)++ | .github/workflows/test.yaml
[12:04] <Geth> ¦ WWW: Need to install tests too
[12:04] <Geth> ¦ WWW: 
[12:04] <Geth> ¦ WWW: --/test eliminates test installation, it's not that it does not do tests
[12:04] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/e7784e47d0
[12:06] <Geth> ¦ WWW: 5022c1d942 | (JJ Merelo)++ | .github/workflows/test.yaml
[12:06] <Geth> ¦ WWW: Test with this, just in case
[12:06] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/5022c1d942
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:12] <Geth> ¦ WWW: 0dbf286539 | (JJ Merelo)++ | .github/workflows/test.yaml
[12:12] <Geth> ¦ WWW: Test with serial
[12:12] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/0dbf286539
[12:13] <Geth> ¦ WWW: 3b95a4398d | (JJ Merelo)++ | .github/workflows/test.yaml
[12:13] <Geth> ¦ WWW: Just disable network testing
[12:13] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/3b95a4398d
[12:33] <Geth> ¦ WWW: 7f6b37736d | (JJ Merelo)++ | META6.json
[12:33] <Geth> ¦ WWW: Included by default
[12:33] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/7f6b37736d
[12:33] <Geth> ¦ WWW: 0f784226f3 | (JJ Merelo)++ | 2 files
[12:33] <Geth> ¦ WWW: Add Dockerfile and its automatic uploading #22
[12:33] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/0f784226f3
[12:44] <Geth> ¦ WWW: 3957286b1b | (JJ Merelo)++ | .github/workflows/test-upload-ghcr.yaml
[12:44] <Geth> ¦ WWW: Push to the correct repo
[12:44] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/3957286b1b
[12:46] <Geth> ¦ WWW: 527559c25f | (JJ Merelo)++ | .github/workflows/test.yaml
[12:46] <Geth> ¦ WWW: Reduce testing to only when needed
[12:46] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/527559c25f
[12:57] <Geth> ¦ WWW/master: 4 commits pushed by (JJ Merelo)++
[12:57] <Geth> ¦ WWW/master: e6361d1667 | Adds documentation
[12:57] <Geth> ¦ WWW/master: 08cba77a16 | Exclude test
[12:57] <Geth> ¦ WWW/master: 18a9cbbb24 | Add status badge
[12:57] <Geth> ¦ WWW/master: 5276ee96b8 | Docker image added to test file closes #22
[12:57] <Geth> ¦ WWW/master: review: https://github.com/raku-community-modules/WWW/compare/527559c25fb1...5276ee96b8c9
[12:58] <Geth> ¦ WWW: 78b17c2dd3 | (JJ Merelo)++ | lib/WWW.pm6
[12:58] <Geth> ¦ WWW: :coffin:
[12:58] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/78b17c2dd3
[13:33] <Geth> ¦ WWW: b70101866c | (JJ Merelo)++ | .github/workflows/test-upload-ghcr.yaml
[13:33] <Geth> ¦ WWW: This is also a condition for running it
[13:33] <Geth> ¦ WWW: review: https://github.com/raku-community-modules/WWW/commit/b70101866c
[13:54] *** epony left
[14:08] *** melezhik joined
[14:16] *** melezhik left
[17:01] *** Kaiepi left
[17:02] *** Kaiepi left
[17:06] *** Kaiepi joined
[17:14] *** Kaiepi left
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:27] *** Kaiepi joined
[18:49] *** epony joined
[19:49] *** sourceable6 left
[19:49] *** releasable6 left
[19:49] *** coverable6 left
[19:49] *** benchable6 left
[19:49] *** evalable6 left
[19:49] *** quotable6 left
[19:49] *** squashable6 left
[19:49] *** nativecallable6 left
[19:49] *** tellable6 left
[19:49] *** greppable6 left
[19:49] *** bisectable6 left
[19:49] *** notable6 left
[19:49] *** committable6 left
[19:49] *** statisfiable6 left
[19:49] *** bloatable6 left
[19:49] *** shareable6 left
[19:49] *** reportable6 left
[19:49] *** squashable6 joined
[19:49] *** greppable6 joined
[19:49] *** nativecallable6 joined
[19:49] *** benchable6 joined
[19:49] *** bisectable6 joined
[19:49] *** sourceable6 joined
[19:49] *** reportable6 joined
[19:50] *** shareable6 joined
[19:50] *** committable6 joined
[19:50] *** bloatable6 joined
[19:51] *** coverable6 joined
[19:51] *** statisfiable6 joined
[19:51] *** tellable6 joined
[19:51] *** notable6 joined
[19:52] *** quotable6 joined
[19:52] *** releasable6 joined
[19:52] *** evalable6 joined
[21:04] *** hythm joined
[21:41] *** discord-raku-bot left
[21:42] *** discord-raku-bot joined
[22:19] *** hythm left
[23:54] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: c195494a26 | (Rod Taylor)++ | 5 files
[23:54] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: Use FatRat for database Numeric values
[23:54] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: 
[23:54] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: Numeric is a database datatype which is known to be slow in order to preserve exact numbers. Raku should work in the same spirit when reading data from columns of that type (prefer correctness above speed).
[23:54] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: 
[23:54] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: The previous use of Rat would cause very long decimal values to be corrupted during the read process.
[23:54] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: review: https://github.com/raku-community-modules/DBIish/commit/c195494a26
[23:57] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: c349f6737e | (Rod Taylor)++ | 5 files
[23:57] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: Use FatRat for database Numeric values
[23:57] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: 
[23:57] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: Numeric is a database datatype which is known to be slow in order to preserve exact numbers. Raku should work in the same spirit when reading data from columns of that type (prefer correctness above speed).
[23:57] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: 
[23:57] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: The previous use of Rat would cause very long decimal values to be corrupted during the read process.
[23:57] <Geth> ¦ DBIish/rbt.maintain-numeric-precision: review: https://github.com/raku-community-modules/DBIish/commit/c349f6737e
