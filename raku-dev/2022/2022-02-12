[00:08] *** reportable6 left
[00:09] *** reportable6 joined
[00:22] <JRaspass> It let me update the wiki page without logging in, hopefully I did it right

[00:22] <JRaspass> "2022.02" #153 [1] / February 11, 2022; 1 day ago

[00:24] *** frost joined
[00:27] <jdv> JRaspass++

[00:42] <japhb> lizmat: IRC::Client hard-depends on the broken version of IO::Socket::Async::SSL; would you mind bumping that?

[00:58] *** frost left
[01:01] *** linkable6 joined
[03:00] <releasable6> Next release in ≈34 days and ≈15 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:05] *** linkable6 left
[03:05] *** releasable6 left
[03:05] *** evalable6 left
[03:06] *** linkable6 joined
[04:06] *** releasable6 joined
[04:58] *** frost joined
[05:08] *** evalable6 joined
[05:49] *** frost left
[06:08] *** reportable6 left
[06:09] *** reportable6 joined
[07:18] *** squashable6 left
[07:18] *** quotable6 left
[07:18] *** notable6 left
[07:18] *** greppable6 left
[07:18] *** evalable6 left
[07:18] *** committable6 left
[07:18] *** linkable6 left
[07:18] *** coverable6 left
[07:18] *** bloatable6 left
[07:18] *** shareable6 left
[07:18] *** unicodable6 left
[07:18] *** tellable6 left
[07:18] *** bisectable6 left
[07:18] *** benchable6 left
[07:18] *** reportable6 left
[07:18] *** statisfiable6 left
[07:18] *** nativecallable6 left
[07:18] *** sourceable6 left
[07:18] *** releasable6 left
[07:18] *** greppable6 joined
[07:18] *** notable6 joined
[07:19] *** unicodable6 joined
[07:19] *** reportable6 joined
[07:19] *** squashable6 joined
[07:20] *** nativecallable6 joined
[07:20] *** evalable6 joined
[07:20] *** shareable6 joined
[07:21] *** sourceable6 joined
[08:18] *** statisfiable6 joined
[08:19] *** quotable6 joined
[08:19] *** tellable6 joined
[08:19] *** linkable6 joined
[08:19] *** coverable6 joined
[08:20] *** bloatable6 joined
[08:20] *** committable6 joined
[08:20] *** bisectable6 joined
[08:22] <nine> No known blockers? Quick! Let's do a release!

[09:20] *** releasable6 joined
[09:21] *** benchable6 joined
[09:31] <lizmat> Files=1351, Tests=117097, 287 wallclock secs (34.90 usr  9.56 sys + 4013.63 cusr 332.17 csys = 4390.26 CPU)

[09:46] <lizmat> japhb: done

[09:49] <Geth> ¦ rakudo: lizmat self-assigned hours,minutes and seconds doesn't work with Date.new('2022-02-12').later() https://github.com/rakudo/rakudo/issues/4783

[10:22] <Geth> ¦ rakudo: 7f00f79894 | (Elizabeth Mattijsen)++ | src/core.c/Date.pm6

[10:22] <Geth> ¦ rakudo: Make error on Date.later(:hour|minute|second) more awesome

[10:22] <Geth> ¦ rakudo: 

[10:22] <Geth> ¦ rakudo: In response to #4783

[10:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7f00f79894

[10:23] *** linkable6 left
[10:54] <Geth> ¦ nqp: 68042d7e9c | MasterDuke17++ (committed using GitHub Web editor) | 5 files

[10:54] <Geth> ¦ nqp: Remove some not-needed `try`s, or convert to `nqp::can` + the method call (#764)

[10:54] <Geth> ¦ nqp: 

[10:54] <Geth> ¦ nqp: No need to `try` using a possibly non-existant dyn variable and convert `try` to faster `nqp::can` + method call

[10:54] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/68042d7e9c

[10:59] <Geth> ¦ rakudo: 0949d67c39 | MasterDuke17++ (committed using GitHub Web editor) | 5 files

[10:59] <Geth> ¦ rakudo: Remove some unnecessary `try`s (#4773)

[10:59] <Geth> ¦ rakudo: 

[10:59] <Geth> ¦ rakudo: Now an error caught by the try just causes the tests to fail and doesn't

[10:59] <Geth> ¦ rakudo: leak into the output.

[10:59] <Geth> ¦ rakudo: 

[10:59] <Geth> ¦ rakudo: Remove some unnecessary `try`s and replace them with `nqp::can` + the method call.

[10:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0949d67c39

[11:10] <Geth> ¦ rakudo: 83b2417ab5 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[11:10] <Geth> ¦ rakudo: Bump NQP to get NQP's try fixes

[11:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/83b2417ab5

[11:11] <Geth> ¦ rakudo: cccc3e8c99 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 2 files

[11:11] <Geth> ¦ rakudo: Give .chomp the possibility to specify a needle (#4739)

[11:11] <Geth> ¦ rakudo: 

[11:11] <Geth> ¦ rakudo: Basically:

[11:11] <Geth> ¦ rakudo: 

[11:11] <Geth> ¦ rakudo:     say "foobar".chomp("bar");  # foo

[11:11] <Geth> ¦ rakudo:     say "foobar".chomp("baz");  # foobar

[11:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cccc3e8c99

[11:13] *** squashable6 left
[11:24] *** linkable6 joined
[11:41] *** [Tux] left
[11:46] *** [Tux] joined
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[12:42] <Geth> ¦ rakudo: ceaa38fc3e | (Elizabeth Mattijsen)++ | 2 files

[12:42] <Geth> ¦ rakudo: Make native array generator work for uint arrays

[12:42] <Geth> ¦ rakudo: 

[12:42] <Geth> ¦ rakudo: In the 2022.02 release some manual post-processing was needed.

[12:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ceaa38fc3e

[12:51] <[Tux]> Rakudo v2022.02-6-gceaa38fc3 (v6.d) on MoarVM 2022.02-1-g0539ead63

[12:51] <[Tux]> csv-test-xs-20      0.409 -  0.412

[12:51] <[Tux]> csv-ip5xs           0.800 -  0.854

[12:51] <[Tux]> test-t --race       0.859 -  0.863

[12:51] <[Tux]> test-t              1.513 -  1.614

[12:51] <[Tux]> csv-parser          3.929 -  3.938

[12:51] <[Tux]> csv-ip5xs-20        4.935 -  5.002

[12:51] <[Tux]> test                6.788 -  6.850

[12:51] <[Tux]> test-t-20 --race    7.573 -  7.608

[12:51] <[Tux]> test-t-20          22.467 - 23.136

[13:13] *** squashable6 joined
[13:31] <Geth> ¦ rakudo: 4d61a582e4 | (Elizabeth Mattijsen)++ | 2 files

[13:31] <Geth> ¦ rakudo: First batch of moving to uint

[13:31] <Geth> ¦ rakudo: 

[13:31] <Geth> ¦ rakudo: Not for performance, but for code clarity and intent.  Also removed

[13:31] <Geth> ¦ rakudo: some deadcode and other cleanup

[13:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4d61a582e4

[14:01] <bartolin_> lizmat: looking at your last commit I wonder if 'my uint $i = -1' instead of 'my int $i = -1' really makes the code clearer. It looks a bit strange to me -- but maybe it's only me.

[14:26] *** Kaipi left
[14:27] *** Kaipi joined
[14:31] <ugexe> yeah i don't follow assigning a signed value to an unsigned integer

[14:34] <ugexe> i guess because soon after its incremented. but having to figure that out kind of suggest its not very clear unless you're already familiar with whats going on

[15:27] *** evalable6 left
[15:27] *** linkable6 left
[16:27] *** releasable6 left
[16:27] *** quotable6 left
[16:27] *** benchable6 left
[16:27] *** squashable6 left
[16:27] *** greppable6 left
[16:27] *** coverable6 left
[16:27] *** unicodable6 left
[16:27] *** bisectable6 left
[16:27] *** tellable6 left
[16:27] *** notable6 left
[16:27] *** statisfiable6 left
[16:27] *** nativecallable6 left
[16:27] *** shareable6 left
[16:27] *** sourceable6 left
[16:27] *** committable6 left
[16:27] *** reportable6 left
[16:27] *** bloatable6 left
[16:28] *** evalable6 joined
[16:28] *** notable6 joined
[16:29] *** unicodable6 joined
[16:29] *** bisectable6 joined
[16:29] *** quotable6 joined
[16:29] *** greppable6 joined
[16:29] *** sourceable6 joined
[16:29] *** statisfiable6 joined
[16:29] *** shareable6 joined
[17:28] *** benchable6 joined
[17:28] *** reportable6 joined
[17:29] *** nativecallable6 joined
[17:31] <Geth> ¦ rakudo: 28a734d196 | (Elizabeth Mattijsen)++ | 2 files

[17:31] <Geth> ¦ rakudo: Use uint for AT/ASSIGN-POS on native arrays

[17:31] <Geth> ¦ rakudo: 

[17:31] <Geth> ¦ rakudo: Changed the int candidate to uint case and removed the bounds

[17:31] <Geth> ¦ rakudo: check.  Note that this does only have minimal performance

[17:31] <Geth> ¦ rakudo: implications now.  The native int case will now be handled

[17:31] <Geth> ¦ rakudo: by the Int:D candidate and currently actually improve

[17:31] <Geth> ¦ rakudo: performance.  In the (near) future when a "uint" is no

[17:31] <Geth> ¦ rakudo: <…commit message has 5 more lines…>

[17:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/28a734d196

[17:51] *** Altai-man left
[17:52] *** sena_kun joined
[18:01] <Geth> ¦ rakudo: codesections++ created pull request #4784: Make &[max] and &[min] return RHS for ties

[18:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4784

[18:07] *** reportable6 left
[18:07] *** reportable6 joined
[18:24] <japhb> lizmat: Thanks for fixing the IRC::Client depends -- I now managed to do a full rebuild for the first time in a *while*.

[18:24] <lizmat> Good to hear  :-)

[18:27] *** coverable6 joined
[18:27] *** squashable6 joined
[18:28] *** tellable6 joined
[18:28] *** bloatable6 joined
[18:29] *** releasable6 joined
[18:58] <Geth> ¦ rakudo: 74cca3332e | (Elizabeth Mattijsen)++ | src/core.c/Exception.pm6

[18:58] <Geth> ¦ rakudo: Un =my= X::Comp::Group

[18:58] <Geth> ¦ rakudo: 

[18:58] <Geth> ¦ rakudo: Otherwise the static optimizer can not find it, which makes it error

[18:58] <Geth> ¦ rakudo: trying to report an error.

[18:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/74cca3332e

[18:58] <Geth> ¦ rakudo: 548c2550ed | (Elizabeth Mattijsen)++ | 2 files

[18:58] <Geth> ¦ rakudo: All of the uinting on native arrays for now

[18:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/548c2550ed

[19:27] *** linkable6 joined
[19:40] <Geth> ¦ rakudo: 167c239453 | (Elizabeth Mattijsen)++ | 2 files

[19:40] <Geth> ¦ rakudo: Add uint postcircumfix:<[ ]> candidates for native arrays

[19:40] <Geth> ¦ rakudo: 

[19:40] <Geth> ¦ rakudo: And some cleanup wrt to the generator script

[19:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/167c239453

[20:11] *** MasterDuke joined
[20:15] <patrickb> jdv: Thanks for doing the release! The binary release is now done as well.

[21:11] *** evalable6 left
[21:11] *** linkable6 left
[21:12] *** evalable6 joined
[21:50] <JRaspass> https://hub.docker.com/repository/docker/rakuland/raku images were rebuilt too, going all the way back to 2017.07!

[21:51] <japhb> lizmat: 548c2550ed has a couple places where it sets an Int to a uint *before* checking whether that Int was negative

[21:52] <japhb> jdv++ patrickb++ JRaspass++

[21:54] *** dogbert11 joined
[21:56] *** dogbert17 left
[22:13] *** linkable6 joined
[22:18] *** dogbert17 joined
[22:20] *** dogbert11 left
[22:27] *** committable6 joined
[22:53] *** dogbert11 joined
[22:54] <lizmat> japhb: which one(s) specifically?

[22:55] *** dogbert17 left
[23:03] <japhb> lizmat: 387, 991, 1637, ...  I'm assuming it's that way in a template, so got expanded in multiple places

[23:04] <lizmat> good catch

[23:32] <Geth> ¦ rakudo: 72b9e1c285 | (Elizabeth Mattijsen)++ | 2 files

[23:32] <Geth> ¦ rakudo: Fix premature uinting, spotted by japhb++

[23:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/72b9e1c285

[23:55] *** linkable6 left
[23:55] *** evalable6 left
