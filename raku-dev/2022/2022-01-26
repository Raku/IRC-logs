[00:06] *** reportable6 left
[00:08] *** reportable6 joined
[01:16] *** linkable6 left
[01:16] *** evalable6 left
[01:32] <gfldex> I got 2 implementations for .assuming that are way faster then what we got right now: https://gist.github.com/647eb0925ec65bdba11107381557d974

[03:18] *** linkable6 joined
[04:18] *** evalable6 joined
[04:37] <moon-child> https://www.reddit.com/r/perl6/comments/apksgq/i_made_a_partial_applicator/  I did this a while ago

[04:37] <moon-child> idk performance nor compatibility, but it doesn't use EVAL

[05:01] *** Altai-man joined
[05:03] *** sena_kun left
[06:06] *** reportable6 left
[06:47] *** Xliff left
[07:07] *** reportable6 joined
[07:07] *** Util left
[07:20] *** Util joined
[07:42] *** TheAthlete joined
[08:21] <Geth> ¦ nqp: c4b121432a | (Daniel Green)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[08:21] <Geth> ¦ nqp: Register `decont_u` as an op

[08:21] <Geth> ¦ nqp: 

[08:21] <Geth> ¦ nqp: Missed in the recent unsigned work.

[08:21] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/c4b121432a

[08:21] <Geth> ¦ nqp: 1fcf95ef90 | MasterDuke17++ (committed using GitHub Web editor) | src/vm/moar/QAST/QASTOperationsMAST.nqp

[08:21] <Geth> ¦ nqp: Merge pull request #758 from MasterDuke17/register_decont_u_as_an_op

[08:21] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/1fcf95ef90

[08:27] <Geth> ¦ rakudo: b3a71fbc61 | (Daniel Green)++ | tools/templates/NQP_REVISION

[08:27] <Geth> ¦ rakudo: Bump NQP to pick up `decont_u` registered as an op

[08:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b3a71fbc61

[08:27] <Geth> ¦ rakudo: e5b67c1d86 | (Daniel Green)++ | src/Perl6/Optimizer.nqp

[08:27] <Geth> ¦ rakudo: Eliminate p6decontrv ops caused by `*_u` ops

[08:27] <Geth> ¦ rakudo: 

[08:27] <Geth> ¦ rakudo: Otherwise `my uint $a; sub foo { $a = 0 }` gives

[08:27] <Geth> ¦ rakudo: `===SORRY!===

[08:27] <Geth> ¦ rakudo: p6decontrv expects a QAST::WVal as its first child`.

[08:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e5b67c1d86

[08:27] <Geth> ¦ rakudo: 9a17526341 | MasterDuke17++ (committed using GitHub Web editor) | 2 files

[08:27] <Geth> ¦ rakudo: Merge pull request #4736 from MasterDuke17/eliminate_p6decontrv_ops_caused_by__u_ops

[08:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9a17526341

[08:59] *** evalable6 left
[08:59] *** linkable6 left
[09:19] <Geth> ¦ rakudo: lizmat self-assigned Various methods in CompUnit::RepositoryRegistry are not thread safe https://github.com/rakudo/rakudo/issues/4737

[10:10] <Geth> ¦ rakudo/lizmat-fix-custom-lib-race: 2be3bc6bfa | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/RepositoryRegistry.pm6

[10:10] <Geth> ¦ rakudo/lizmat-fix-custom-lib-race: Fix custom-lib race

[10:10] <Geth> ¦ rakudo/lizmat-fix-custom-lib-race: 

[10:10] <Geth> ¦ rakudo/lizmat-fix-custom-lib-race: As described in #4737

[10:10] <Geth> ¦ rakudo/lizmat-fix-custom-lib-race: review: https://github.com/rakudo/rakudo/commit/2be3bc6bfa

[10:10] <Geth> ¦ rakudo: lizmat++ created pull request #4738: Fix custom-lib race

[10:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4738

[11:00] *** evalable6 joined
[11:02] <Geth> ¦ rakudo/lizmat-chomp-needle: 667ab79cfa | (Elizabeth Mattijsen)++ | 2 files

[11:02] <Geth> ¦ rakudo/lizmat-chomp-needle: Give .chomp the possibility to specify a needle

[11:02] <Geth> ¦ rakudo/lizmat-chomp-needle: 

[11:02] <Geth> ¦ rakudo/lizmat-chomp-needle: Basically:

[11:02] <Geth> ¦ rakudo/lizmat-chomp-needle: 

[11:02] <Geth> ¦ rakudo/lizmat-chomp-needle:     say "foobar".chomp("bar");  # foo

[11:02] <Geth> ¦ rakudo/lizmat-chomp-needle:     say "foobar".chomp("baz");  # foobar

[11:02] <Geth> ¦ rakudo/lizmat-chomp-needle: review: https://github.com/rakudo/rakudo/commit/667ab79cfa

[11:02] <Geth> ¦ rakudo: lizmat++ created pull request #4739: Give .chomp the possibility to specify a needle

[11:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4739

[11:34] *** TheAthlete left
[12:01] *** linkable6 joined
[12:07] *** reportable6 left
[12:33] <Geth> ¦ rakudo/lizmat-fix-custom-lib-race: 8e034779d4 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/RepositoryRegistry.pm6

[12:33] <Geth> ¦ rakudo/lizmat-fix-custom-lib-race: s/register-custom-lib-repo/register-custom-lib-repository

[12:33] <Geth> ¦ rakudo/lizmat-fix-custom-lib-race: review: https://github.com/rakudo/rakudo/commit/8e034779d4

[13:08] *** [Coke] left
[13:08] *** sena_kun joined
[13:53] *** discord-raku-bot left
[13:54] *** discord-raku-bot joined
[14:09] *** reportable6 joined
[14:39] <Geth> ¦ rakudo/master: 5 commits pushed by (Vadim Belman)++

[14:39] <Geth> ¦ rakudo/master: 2486960b70 | Further improvements to smartmatch dispatch

[14:39] <Geth> ¦ rakudo/master: abfb9f861d | Use smartmatch dispatcher for as chained fallback

[14:39] <Geth> ¦ rakudo/master: 6148b75c7a | Remove unused statement

[14:39] <Geth> ¦ rakudo/master: cd20a2bc34 | Allow optimizations over negated chained smartmatch

[14:39] <Geth> ¦ rakudo/master: 4365d9b6d4 | Merge pull request #4735 from vrurg/new-disp-smartmatch-2

[14:39] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/9a17526341f9...4365d9b6d456

[14:39] <Geth> ¦ roast/master: 4 commits pushed by (Vadim Belman)++

[14:39] <Geth> ¦ roast/master: bb95336dce | Fix incorrect tests

[14:39] <Geth> ¦ roast/master: d40dd18445 | Implement randomized order of indirect smartmatch tests

[14:39] <Geth> ¦ roast/master: 3a138500e3 | Add more tests for negated smartmatch

[14:39] <Geth> ¦ roast/master: 82594845a8 | Merge pull request #787 from vrurg/new-disp-smartmatch-2

[14:39] <Geth> ¦ roast/master: review: https://github.com/Raku/roast/compare/b28a53b19eaf...82594845a83b

[15:17] *** sena_kun left
[15:17] *** sena_kun joined
[15:37] *** TheAthlete joined
[17:08] *** TempIRCLogger__ joined
[17:09] *** TempIRCLogger left
[17:10] *** lizmat left
[17:11] *** lizmat joined
[17:11] *** [Tux] left
[17:15] *** lizmat left
[17:15] *** lizmat joined
[17:18] *** [Coke] joined
[17:21] *** Geth left
[17:23] *** [Tux] joined
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:24] *** sena_kun left
[19:07] *** TheAthlete left
[20:07] *** squashable6 left
[20:07] *** evalable6 left
[20:07] *** quotable6 left
[20:07] *** notable6 left
[20:07] *** linkable6 left
[20:07] *** reportable6 left
[20:07] *** unicodable6 left
[20:07] *** shareable6 left
[20:07] *** sourceable6 left
[20:07] *** statisfiable6 left
[20:07] *** committable6 left
[20:07] *** coverable6 left
[20:07] *** releasable6 left
[20:07] *** nativecallable6 left
[20:07] *** greppable6 left
[20:07] *** tellable6 left
[20:07] *** bloatable6 left
[20:07] *** bisectable6 left
[20:07] *** benchable6 left
[20:08] *** releasable6 joined
[20:08] *** shareable6 joined
[20:09] *** evalable6 joined
[20:09] *** benchable6 joined
[20:09] *** unicodable6 joined
[20:09] *** sourceable6 joined
[20:10] *** greppable6 joined
[20:10] *** notable6 joined
[20:10] *** tellable6 joined
[20:23] <[Tux]> Rakudo v2021.12-161-g4365d9b6d (v6.d) on MoarVM 2021.12-87-gec1ddee66

[20:23] <[Tux]> csv-test-xs-20      0.398 -  0.410

[20:23] <[Tux]> csv-ip5xs           0.755 -  0.791

[20:23] <[Tux]> test-t --race       0.838 -  0.850

[20:23] <[Tux]> test-t              1.525 -  1.531

[20:23] <[Tux]> csv-parser          3.880 -  3.975

[20:23] <[Tux]> csv-ip5xs-20        4.938 -  5.059

[20:23] <[Tux]> test                6.498 -  6.521

[20:23] <[Tux]> test-t-20 --race    7.554 -  7.599

[20:23] <[Tux]> test-t-20          22.627 - 22.704

[20:24] <[Tux]>  5 2021-11-08 13:21:09 test-t 1.540

[20:24] <[Tux]>  4 2021-10-29 17:47:15 test-t 1.536

[20:24] <[Tux]>  3 2021-10-28 16:30:08 test-t 1.534

[20:24] <[Tux]>  2 2022-01-26 20:04:45 test-t 1.531

[20:24] <[Tux]>  1 2022-01-26 20:06:28 test-t 1.525

[20:24] <[Tux]> 20211108 1.540❙20211029 1.536❙20211028 1.534❙20220126 1.531❙20220126 1.525❙

[20:39] <MasterDuke> nice

[21:04] <japhb> MasterDuke, nine: Looks like Digest still doesn't work at HEAD.  Updated https://gist.github.com/japhb/68dded3c8576a1d8fcf968fee0c2ff79  (-145 is Rakudo before the p6decontrv fix, -161 is after; now it looks like a uint problem.)

[21:07] <MasterDuke> "Cannot unbox negative bigint into native unsigned integer" i wonder if it's doing something wrong that just happened to work before

[21:08] *** nativecallable6 joined
[21:08] *** bloatable6 joined
[21:09] *** squashable6 joined
[21:09] *** reportable6 joined
[21:13] <MasterDuke> m: use nqp; my str $s = (100..1_000).pick.Str; my int $i; my $n = now; $i = $s for ^10_000_000; say now - $n; say $i

[21:13] <camelia> rakudo-moar 4365d9b6d: OUTPUT: «0.394074819␤161␤»

[21:14] <MasterDuke> a pretty simple change just about halves ^^^ runtime and gets rid of 10m temporary allocations, and i think it should be not too difficult to get even faster

[21:17] <MasterDuke> and in a related question, wouldn't it be convenient for MVMStrings to both know their size and be null terminated? then, depending on encoding of course, the storage could be passed directly to C functions

[21:19] <MasterDuke> guess it depends on how frequently we actually call C functions on strings to determine if the extra overhead (space, code complexity, etc) is worth it

[21:19] <MasterDuke> but iirc, that's how D does it. or maybe C#?

[21:24] <MasterDuke> oh, that would have made more sense over in #moarvm

[22:09] *** linkable6 joined
[22:10] *** coverable6 joined
[22:10] *** quotable6 joined
[22:11] *** committable6 joined
[22:47] *** timo1 joined
[22:48] *** timo left
