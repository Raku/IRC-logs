[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[00:38] *** uzl[m] left
[00:39] *** AlexDaniel left
[00:39] *** crystalfrost[m] left
[00:39] *** CIAvash left
[01:04] *** uzl[m] joined
[01:06] *** frost joined
[01:33] *** AlexDaniel joined
[01:55] *** crystalfrost[m] joined
[02:07] *** CIAvash joined
[02:43] *** Kaipei left
[04:06] *** Kaipei joined
[05:26] *** reportable6 left
[05:26] *** coverable6 left
[05:26] *** evalable6 left
[05:26] *** statisfiable6 left
[05:26] *** tellable6 left
[05:26] *** committable6 left
[05:26] *** nativecallable6 left
[05:26] *** greppable6 left
[05:26] *** quotable6 left
[05:26] *** bloatable6 left
[05:26] *** notable6 left
[05:26] *** releasable6 left
[05:26] *** bisectable6 left
[05:26] *** sourceable6 left
[05:26] *** benchable6 left
[05:26] *** unicodable6 left
[05:26] *** shareable6 left
[05:26] *** linkable6 left
[05:27] *** evalable6 joined
[05:27] *** benchable6 joined
[05:27] *** bloatable6 joined
[05:27] *** releasable6 joined
[05:27] *** committable6 joined
[05:28] *** unicodable6 joined
[05:28] *** greppable6 joined
[05:28] *** sourceable6 joined
[05:28] *** coverable6 joined
[05:28] *** bisectable6 joined
[05:28] *** nativecallable6 joined
[05:28] *** notable6 joined
[05:29] *** statisfiable6 joined
[05:29] *** shareable6 joined
[05:29] *** reportable6 joined
[05:29] *** linkable6 joined
[05:29] *** quotable6 joined
[05:29] *** tellable6 joined
[05:47] *** samcv left
[05:47] *** samcv joined
[06:07] *** reportable6 left
[06:10] *** reportable6 joined
[06:55] *** nine left
[06:56] *** nine joined
[08:36] <lizmat> Files=1353, Tests=117197, 285 wallclock secs (35.61 usr  9.82 sys + 3987.06 cusr 331.93 csys = 4364.42 CPU)

[08:58] <lizmat> m: say "aabbcc" ~~ / b ** 1..3 /

[08:58] <camelia> rakudo-moar 530e17848: OUTPUT: «｢bb｣␤»

[08:58] <lizmat> m: say "aabbcc" ~~ / b ** 0..3 /   # this is wrong, I think

[08:58] <camelia> rakudo-moar 530e17848: OUTPUT: «｢｣␤»

[09:42] *** linkable6 left
[09:42] *** evalable6 left
[09:42] *** evalable6 joined
[09:42] *** linkable6 joined
[10:21] *** Altai-man left
[10:24] *** sena_kun joined
[12:06] *** tellable6 left
[12:06] *** benchable6 left
[12:06] *** committable6 left
[12:06] *** releasable6 left
[12:06] *** greppable6 left
[12:06] *** quotable6 left
[12:06] *** coverable6 left
[12:06] *** reportable6 left
[12:06] *** statisfiable6 left
[12:06] *** unicodable6 left
[12:06] *** notable6 left
[12:06] *** nativecallable6 left
[12:06] *** bisectable6 left
[12:06] *** evalable6 left
[12:06] *** linkable6 left
[12:06] *** sourceable6 left
[12:06] *** bloatable6 left
[12:06] *** shareable6 left
[12:07] *** tellable6 joined
[12:07] *** sourceable6 joined
[12:07] *** statisfiable6 joined
[12:07] *** benchable6 joined
[12:07] *** unicodable6 joined
[12:07] *** reportable6 joined
[12:08] *** notable6 joined
[12:08] *** evalable6 joined
[12:08] *** nativecallable6 joined
[12:08] *** quotable6 joined
[12:08] *** releasable6 joined
[12:08] *** shareable6 joined
[12:08] *** bloatable6 joined
[12:09] *** bisectable6 joined
[12:09] *** coverable6 joined
[12:09] *** greppable6 joined
[12:09] *** committable6 joined
[12:09] *** linkable6 joined
[12:48] <Geth> ¦ rakudo/rakuast: 5 commits pushed by (Stefan Seifert)++

[12:48] <Geth> ¦ rakudo/rakuast: 65b8b16fdd | Add generated code objects to SC and the QAST::CompUnit's code_ref_blocks

[12:48] <Geth> ¦ rakudo/rakuast: 312039fc0d | Create an EXPORT package and lexical for storing exports

[12:48] <Geth> ¦ rakudo/rakuast: 99e9067f20 | Generate call to ctxsave in a module's unit

[12:48] <Geth> ¦ rakudo/rakuast: c0e2e930e5 | Allow for importing the exact same symbol with same value again

[12:48] <Geth> ¦ rakudo/rakuast: 88619b152e | Implement simple case of symbol merging on import

[12:48] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/compare/497496832893...88619b152eed

[13:03] *** vrurg_ joined
[13:05] *** vrurg left
[14:05] *** vrurg_ is now known as vrurg

[14:14] <Geth> ¦ rakudo/rakuast: 27c8f6e115 | (Stefan Seifert)++ | 3 files

[14:14] <Geth> ¦ rakudo/rakuast: Introduce RakuAST::Type::Coercion for generating coercion types

[14:14] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/27c8f6e115

[14:27] *** frost left
[15:26] <Geth> ¦ rakudo/rakuast: b54be06c53 | (Stefan Seifert)++ | 2 files

[15:26] <Geth> ¦ rakudo/rakuast: Support is copy on parameters

[15:26] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/b54be06c53

[15:28] <Geth> ¦ rakudo/rakuast_wip: 4 commits pushed by (Stefan Seifert)++

[15:28] <Geth> ¦ rakudo/rakuast_wip: 745d8ac6d5 | Parse signature declarations

[15:28] <Geth> ¦ rakudo/rakuast_wip: 174dae9208 | Parse post constraints

[15:28] <Geth> ¦ rakudo/rakuast_wip: 60bf674c6b | DO NOT PUSH - implement a bit of NQP support

[15:28] <Geth> ¦ rakudo/rakuast_wip: aef1635b3f | Support is copy on parameters

[15:28] <Geth> ¦ rakudo/rakuast_wip: review: https://github.com/rakudo/rakudo/compare/745d8ac6d5cc^...aef1635b3fd3

[15:28] <Geth> ¦ rakudo/rakuast_wip: 0caad6653f | (Stefan Seifert)++ | 2 files

[15:28] <Geth> ¦ rakudo/rakuast_wip: Parse signature declarations

[15:28] <Geth> ¦ rakudo/rakuast_wip: review: https://github.com/rakudo/rakudo/commit/0caad6653f

[15:28] <Geth> ¦ rakudo/rakuast_wip: 8a972ff427 | (Stefan Seifert)++ | src/Raku/Grammar.nqp

[15:28] <Geth> ¦ rakudo/rakuast_wip: Parse post constraints

[15:28] <Geth> ¦ rakudo/rakuast_wip: review: https://github.com/rakudo/rakudo/commit/8a972ff427

[15:28] <Geth> ¦ rakudo/rakuast_wip: eec63715af | (Stefan Seifert)++ | 3 files

[15:28] <Geth> ¦ rakudo/rakuast_wip: DO NOT PUSH - implement a bit of NQP support

[15:28] <Geth> ¦ rakudo/rakuast_wip: review: https://github.com/rakudo/rakudo/commit/eec63715af

[15:29] *** evalable6 left
[15:29] *** linkable6 left
[15:31] *** linkable6 joined
[15:31] *** evalable6 joined
[16:00] <[Tux]> Rakudo v2022.04-42-ge9de06b85 (v6.d) on MoarVM 2022.04-2-g99730293f

[16:00] <[Tux]> csv-test-xs-20      0.392 -  0.400

[16:00] <[Tux]> test-t --race       0.862 -  0.867

[16:00] <[Tux]> csv-ip5xs           0.807 -  1.012

[16:00] <[Tux]> test-t              1.489 -  1.514

[16:00] <[Tux]> csv-parser          3.528 -  3.910

[16:00] <[Tux]> csv-ip5xs-20        5.305 -  5.320

[16:00] <[Tux]> test-t-20 --race    6.858 -  6.949

[16:00] <[Tux]> test                6.666 -  7.015

[16:01] <[Tux]> test-t-20          21.828 - 22.653

[17:52] *** vrurg left
[18:03] <SmokeMachine> lizmat: does the callable -> RakuAST method for Red's usage makes sense to you?

[18:06] *** vrurg joined
[18:08] *** reportable6 left
[18:10] *** reportable6 joined
[18:11] <lizmat> actually, no  :-)

[18:11] <lizmat> please enlighten me  :-)

[18:11] *** vrurg left
[19:11] *** notable6 left
[19:11] *** shareable6 left
[19:11] *** benchable6 left
[19:11] *** greppable6 left
[19:11] *** tellable6 left
[19:11] *** committable6 left
[19:11] *** bisectable6 left
[19:11] *** nativecallable6 left
[19:11] *** releasable6 left
[19:11] *** linkable6 left
[19:11] *** sourceable6 left
[19:11] *** statisfiable6 left
[19:11] *** coverable6 left
[19:11] *** bloatable6 left
[19:11] *** quotable6 left
[19:11] *** unicodable6 left
[19:11] *** evalable6 left
[19:11] *** evalable6 joined
[19:12] *** benchable6 joined
[19:12] *** committable6 joined
[19:12] *** bisectable6 joined
[19:12] *** notable6 joined
[19:12] *** unicodable6 joined
[19:13] *** tellable6 joined
[19:13] *** statisfiable6 joined
[19:13] *** linkable6 joined
[19:13] *** sourceable6 joined
[19:13] *** greppable6 joined
[19:13] *** shareable6 joined
[19:14] *** quotable6 joined
[19:14] *** coverable6 joined
[19:14] *** releasable6 joined
[19:14] *** nativecallable6 joined
[19:14] *** bloatable6 joined
[19:40] *** vrurg joined
[19:44] *** vrurg left
[19:50] <Geth> ¦ rakudo/lizmat-ISO8601: 26a8707640 | (Elizabeth Mattijsen)++ | src/core.c/DateTime.pm6

[19:50] <Geth> ¦ rakudo/lizmat-ISO8601: Re-imagine DateTime.new(Str) / Str.DateTime

[19:50] <Geth> ¦ rakudo/lizmat-ISO8601: 

[19:50] <Geth> ¦ rakudo/lizmat-ISO8601: - makes DateTime.new(YYYY-MM-DDTHH:MM:SS) 1.9x as fast

[19:50] <Geth> ¦ rakudo/lizmat-ISO8601: - makes DateTime.new(YYYY-MM-DDTHH:MM:SS+TZ) about 1.3x as fast

[19:50] <Geth> ¦ rakudo/lizmat-ISO8601: - makes DateTime.new(YYYY-MM-DD) possible

[19:50] <Geth> ¦ rakudo/lizmat-ISO8601: - makes DateTime.new(YYYY-MM-DD) 1.15x as fast as Date.new().DateTime

[19:50] <Geth> ¦ rakudo/lizmat-ISO8601: - offloads some error handling to additional private methods to allow

[19:50] <Geth> ¦ rakudo/lizmat-ISO8601: <…commit message has 6 more lines…>

[19:50] <Geth> ¦ rakudo/lizmat-ISO8601: review: https://github.com/rakudo/rakudo/commit/26a8707640

[19:50] <Geth> ¦ rakudo: lizmat++ created pull request #4923: Re-imagine DateTime.new(Str) / Str.DateTime

[19:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4923

[20:13] <Geth> ¦ rakudo: 39298f1001 | (Elizabeth Mattijsen)++ | src/core.c/Date.pm6

[20:13] <Geth> ¦ rakudo: Make Date.new(Str) a few % faster

[20:13] <Geth> ¦ rakudo: 

[20:13] <Geth> ¦ rakudo: Mostly by generating less bytecode to begin with by making sure that

[20:13] <Geth> ¦ rakudo: the nqp::ops actually work on a native str rather than a Str:D

[20:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/39298f1001

[20:41] *** vrurg joined
[20:46] *** vrurg left
[21:16] *** londoed left
[21:16] *** londoed joined
[21:31] *** sena_kun left
[21:32] *** sena_kun joined
[23:37] *** sjn left
[23:59] *** vrurg joined
