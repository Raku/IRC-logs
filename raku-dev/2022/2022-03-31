[01:32] *** japhb left
[01:35] *** japhb joined
[02:01] *** nine left
[02:02] *** nine joined
[06:39] *** kjp_ left
[06:55] *** kjp joined
[07:37] <lizmat> Files=1352, Tests=117129, 305 wallclock secs (36.37 usr  9.77 sys + 4209.73 cusr 338.54 csys = 4594.41 CPU)

[08:21] <MasterDuke> 305 is slower than usual, right?

[09:00] *** MitarashiDango[m left
[09:16] <lizmat> yes, but for now I think it's a fluke.  We'll know tomorrow

[09:16] <lizmat> I run these unattended at night when my computer is cold and not doing anything else (apart from backups, and that may have interfered)

[09:42] *** ggoebel left
[10:09] <Geth> ¦ rakudo: 5dd82a62d5 | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp

[10:09] <Geth> ¦ rakudo: Protect setting loading with a lock

[10:09] <Geth> ¦ rakudo: 

[10:09] <Geth> ¦ rakudo: There is at least a potential race on the %settings_loaded hash,

[10:09] <Geth> ¦ rakudo: and who knows inside of that block of code.  Sadly, not enough to

[10:09] <Geth> ¦ rakudo: fix #1920, but it seems to now succeed more often, or *hang* more

[10:09] <Geth> ¦ rakudo: often.

[10:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5dd82a62d5

[10:41] *** [Tux] left
[10:57] *** [Tux] joined
[11:02] *** ggoebel joined
[11:22] *** ggoebel left
[11:31] *** ggoebel joined
[11:49] <Geth> ¦ rakudo: 07d3030a78 | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp

[11:49] <Geth> ¦ rakudo: Make sure we release the lock on exception

[11:49] <Geth> ¦ rakudo: 

[11:49] <Geth> ¦ rakudo: jnthn++ for the nudge

[11:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/07d3030a78

[12:13] *** ggoebel left
[12:55] *** ggoebel joined
[13:26] <lizmat> meh, looks like we lost bisectable6 ?   AlexDaniel ??

[13:26] <lizmat> nine?

[13:27] <lizmat> .seen bisectable6

[14:02] <Geth> ¦ rakudo/treat-unequal-special: 0d8052572d | (Elizabeth Mattijsen)++ | src/Perl6/Actions.nqp

[14:02] <Geth> ¦ rakudo/treat-unequal-special: Treat <<!=>> special

[14:02] <Geth> ¦ rakudo/treat-unequal-special: 

[14:02] <Geth> ¦ rakudo/treat-unequal-special: In response to https://github.com/rakudo/rakudo/issues/4838

[14:02] <Geth> ¦ rakudo/treat-unequal-special: 

[14:02] <Geth> ¦ rakudo/treat-unequal-special: The applied fix feels hacky, but != *is* the only op that is

[14:02] <Geth> ¦ rakudo/treat-unequal-special: actually implemented as an op, and not as meta-handling applied

[14:02] <Geth> ¦ rakudo/treat-unequal-special: to an op.  Suggestions for better fix welcome!

[14:02] <Geth> ¦ rakudo/treat-unequal-special: review: https://github.com/rakudo/rakudo/commit/0d8052572d

[14:02] <Geth> ¦ rakudo: lizmat++ created pull request #4839: Treat <<!=>> special

[14:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4839

[15:02] *** discord-raku-bot left
[15:03] *** discord-raku-bot joined
[15:24] <Geth> ¦ rakudo: bf50105f80 | (Elizabeth Mattijsen)++ | 7 files

[15:24] <Geth> ¦ rakudo: Trailing whitespace spring-cleaning

[15:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bf50105f80

[15:25] <Geth> ¦ roast: ed50f3c48d | (Elizabeth Mattijsen)++ | 206 files

[15:25] <Geth> ¦ roast: Trailing whitespace spring-cleaning

[15:25] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/ed50f3c48d

[15:29] <Geth> ¦ rakudo: 540c73655c | (Jonathan Worthington)++ | src/core.c/Match.pm6

[15:29] <Geth> ¦ rakudo: Relax `make`'s type check on `$/`

[15:29] <Geth> ¦ rakudo: 

[15:29] <Geth> ¦ rakudo: It seems that Inline::Perl5 uses the Raku `make` on an NQPMatch, and

[15:29] <Geth> ¦ rakudo: that - due to a dubious optimization - that actually works out. For now,

[15:29] <Geth> ¦ rakudo: relax it to permit NQP match objects too, so we can keep the improved

[15:29] <Geth> ¦ rakudo: error without regressing Inline::Perl5.

[15:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/540c73655c

[15:43] <AlexDaniel> I'm here, I'll check

[15:43] <AlexDaniel> Ah-ha

[15:44] <AlexDaniel> Ok that was kinda expected

[15:44] *** committable6 joined
[15:44] *** bisectable6 joined
[15:44] *** sourceable6 joined
[15:44] *** bisectable6 left
[15:45] *** quotable6 joined
[15:45] <AlexDaniel> commit: help

[15:45] <committable6> AlexDaniel, Like this: committable6: f583f22,HEAD say ‘hello’; say ‘world’ # See wiki for more examples: https://github.com/Raku/whateverable/wiki/Committable

[15:45] <AlexDaniel> Should be back up soon

[15:45] *** coverable6 joined
[15:45] *** linkable6 joined
[15:46] *** notable6 joined
[15:46] *** nativecallable6 joined
[15:46] *** releasable6 joined
[15:46] *** bloatable6 joined
[15:47] *** reportable6 joined
[15:47] *** bisectable6 joined
[15:49] <AlexDaniel> bisect: help

[15:49] <bisectable6> AlexDaniel, Like this: bisectable6: old=2015.12 new=HEAD exit 1 if (^∞).grep({ last })[5] // 0 == 4 # See wiki for more examples: https://github.com/Raku/whateverable/wiki/Bisectable

[15:50] <AlexDaniel> lizmat: please check. Fixing tellable is still my weekend project though

[15:51] <lizmat> AlexDaniel++

[15:51] <lizmat> bisectable6: say @a «!=» @a;

[15:51] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[15:51] <bisectable6> lizmat, Sorry kid, that's not my department.

[15:51] <bisectable6> lizmat, Bisecting by output (old=2022.03 new=540c736) because on both starting points the exit code is 1

[15:52] <AlexDaniel> Damn

[15:52] <AlexDaniel> :-/ ok sry will need to fix that too

[15:53] <AlexDaniel> That feels like something is wrong with it's GitHub access

[15:53] <AlexDaniel> Its*, come on autocorrect :D

[15:54] <lizmat> no worries: I actually have a PR for that code, but was just curious if it was a regression at some point

[15:58] <Geth> ¦ rakudo/rakuast: 454 commits pushed by (Jonathan Worthington)++, (Moritz Lenz)++, (Elizabeth Mattijsen)++, (Timo Paulssen)++, (Brad Gilbert)++, (Daniel Green)++

[15:58] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/compare/b330e2a8f53d...03d039c84b41

[16:09] <Geth> ¦ rakudo: f3b1e95d05 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/Perl6/Actions.nqp

[16:09] <Geth> ¦ rakudo: Treat <<!=>> special (#4839)

[16:09] <Geth> ¦ rakudo: 

[16:09] <Geth> ¦ rakudo: In response to https://github.com/rakudo/rakudo/issues/4838

[16:09] <Geth> ¦ rakudo: 

[16:09] <Geth> ¦ rakudo: The applied fix feels hacky, but != *is* the only op that is

[16:09] <Geth> ¦ rakudo: actually implemented as an op, and not as meta-handling applied

[16:09] <Geth> ¦ rakudo: to an op.  Suggestions for better fix welcome!

[16:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f3b1e95d05

[16:10] <Geth> ¦ rakudo/rakuast: 5c6f961ecc | (Jonathan Worthington)++ | src/Raku/Grammar.nqp

[16:10] <Geth> ¦ rakudo/rakuast: Add $*BORG bits for missing block

[16:10] <Geth> ¦ rakudo/rakuast: 

[16:10] <Geth> ¦ rakudo/rakuast: So we get missing block errors rather than an error about calling

[16:10] <Geth> ¦ rakudo/rakuast: missing block with the wrong number of arguments.

[16:10] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/5c6f961ecc

[16:11] *** linkable6 left
[16:14] *** linkable6 joined
[16:20] <Geth> ¦ roast: fc80cf6b3a | (Elizabeth Mattijsen)++ | S03-metaops/hyper.t

[16:20] <Geth> ¦ roast: Add test for #4838

[16:20] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/fc80cf6b3a

[17:00] <Geth> ¦ rakudo/rakuast: 3c008bb3a2 | (Jonathan Worthington)++ | src/Raku/Grammar.nqp

[17:00] <Geth> ¦ rakudo/rakuast: Attach position information to parse errors

[17:00] <Geth> ¦ rakudo/rakuast: 

[17:00] <Geth> ¦ rakudo/rakuast: So far, the RakuAST-based compiler hasn't been reporting the location of

[17:00] <Geth> ¦ rakudo/rakuast: syntax errors. The way this is factored in the current compiler mixes

[17:00] <Geth> ¦ rakudo/rakuast: the concerns of assembling the exception object with extracting various

[17:00] <Geth> ¦ rakudo/rakuast: bits and pieces that it's the parser's job to know about. In RakuAST we

[17:00] <Geth> ¦ rakudo/rakuast: need something a bit cleaner, and less coupled to any particular parser.

[17:00] <Geth> ¦ rakudo/rakuast: <…commit message has 7 more lines…>

[17:00] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/3c008bb3a2

[17:12] <Geth> ¦ rakudo/rakuast: 5a0aae5edc | (Jonathan Worthington)++ | src/Raku/Grammar.nqp

[17:12] <Geth> ¦ rakudo/rakuast: Parse multiline comments in RakuAST-based compiler

[17:12] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/5a0aae5edc

[18:00] <Geth> ¦ rakudo: 556855720b | (Elizabeth Mattijsen)++ | src/Perl6/Actions.nqp

[18:00] <Geth> ¦ rakudo: Make Actions.wanted us some more temporary variables

[18:00] <Geth> ¦ rakudo: 

[18:00] <Geth> ¦ rakudo: Rather than keeping calling methods again and again.  Shaves off

[18:00] <Geth> ¦ rakudo: about .3 seconds from building the 6.c setting (out of ~50 seconds)

[18:00] <Geth> ¦ rakudo: It's not a lot, but it was an easy gain that is applicable to *all*

[18:00] <Geth> ¦ rakudo: parsing / precompilation (about .6%).

[18:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/556855720b

[18:16] *** reportable6 left
[18:17] *** reportable6 joined
[18:18] <Geth> ¦ rakudo: 397145a612 | (Elizabeth Mattijsen)++ | src/Perl6/Actions.nqp

[18:18] <Geth> ¦ rakudo: Make Actions.unwanted use some more temporary variables

[18:18] <Geth> ¦ rakudo: 

[18:18] <Geth> ¦ rakudo: Rinse and repeat from 556855720b

[18:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/397145a612

[18:20] *** casaca joined
[19:14] <Geth> ¦ rakudo/show-WHY: d61b4d2beb | (Elizabeth Mattijsen)++ | src/core.c/Exception.pm6

[19:14] <Geth> ¦ rakudo/show-WHY: Improve typecheck errors on e.g. subsets

[19:14] <Geth> ¦ rakudo/show-WHY: 

[19:14] <Geth> ¦ rakudo/show-WHY: Check whether there's a WHY on the expected value, and show the

[19:14] <Geth> ¦ rakudo/show-WHY: WHY if there is one in the message.  Example:

[19:14] <Geth> ¦ rakudo/show-WHY: 

[19:14] <Geth> ¦ rakudo/show-WHY:     #| Only "foo" is acceptable!

[19:14] <Geth> ¦ rakudo/show-WHY:     subset Foo of Str where $_ eq "foo";

[19:14] <Geth> ¦ rakudo/show-WHY: <…commit message has 5 more lines…>

[19:14] <Geth> ¦ rakudo/show-WHY: review: https://github.com/rakudo/rakudo/commit/d61b4d2beb

[19:14] <Geth> ¦ rakudo: lizmat++ created pull request #4840: Improve typecheck errors on e.g. subsets

[19:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4840

[19:33] <lizmat> that concludes my hacking for today&

[20:00] *** statisfiable6 joined
[20:01] *** bisectable6 left
[20:02] *** bisectable6 joined
[20:03] *** benchable6 joined
[20:03] *** squashable6 joined
[20:04] *** unicodable6 joined
[20:04] *** evalable6 joined
[20:04] *** evalable6 left
[20:04] *** benchable6 left
[20:04] *** bisectable6 left
[20:04] *** squashable6 left
[20:04] *** statisfiable6 left
[20:04] *** releasable6 left
[20:04] *** linkable6 left
[20:04] *** coverable6 left
[20:04] *** quotable6 left
[20:04] *** bloatable6 left
[20:04] *** notable6 left
[20:04] *** unicodable6 left
[20:04] *** sourceable6 left
[20:04] *** nativecallable6 left
[20:04] *** reportable6 left
[20:04] *** committable6 left
[20:04] *** linkable6 joined
[20:04] *** sourceable6 joined
[20:04] *** squashable6 joined
[20:04] *** greppable6 joined
[20:05] *** reportable6 joined
[20:05] *** statisfiable6 joined
[20:05] *** shareable6 joined
[20:05] *** notable6 joined
[20:05] *** coverable6 joined
[20:05] *** evalable6 joined
[20:06] *** committable6 joined
[20:06] *** unicodable6 joined
[20:06] *** nativecallable6 joined
[20:06] *** squashable6 left
[20:07] *** quotable6 joined
[20:07] *** bloatable6 joined
[20:07] *** benchable6 joined
[20:07] *** bisectable6 joined
[20:07] *** releasable6 joined
[20:07] <patrickb> [Coke], jdv: Did you notice my questions in https://github.com/rakudo/rakudo.org/pull/78 ?

[20:09] <AlexDaniel> bisectable6: say @a «!=» @a;

[20:09] <bisectable6> AlexDaniel, Will bisect the whole range automagically because no endpoints were provided, hang tight

[20:10] <bisectable6> AlexDaniel, Output on all releases: https://gist.github.com/0e842b28f43f7298cf0c29fc7ca8535c

[20:10] <bisectable6> AlexDaniel, Bisecting by output (old=2022.03 new=397145a) because on both starting points the exit code is 1

[20:10] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/90baae527b17a619c45e308bc2a0a732

[20:10] <bisectable6> AlexDaniel, (2022-03-23) https://github.com/rakudo/rakudo/commit/a56d239d0ce115d60caa772a30acafce933274f0

[20:10] <bisectable6> AlexDaniel, Output on all releases and bisected commits: https://gist.github.com/9682e4bdb55230f6df6683ee5809af3c

[20:10] <AlexDaniel> lizmat: ok, it works now... It was a precomp issue

[20:11] <AlexDaniel> I kinda remember it, if you update a lib you have to remove precomp files

[20:12] <AlexDaniel> That sounds wrong of course, but it gets complicated because bots actually are not allowed to write anything

[20:12] <AlexDaniel> So they can't update the precomp files if anything changed

[20:12] <AlexDaniel> Therefore all these weird bugs

[20:13] <AlexDaniel> Fixed by removing precomp files, then letting then write them, and then restarting again

[22:38] *** discord-raku-bot left
[22:38] *** discord-raku-bot joined
[22:38] *** gfldex left
[22:41] *** gfldex joined
[22:44] *** discord-raku-bot left
[22:45] *** discord-raku-bot joined
