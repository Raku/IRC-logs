[00:08] *** reportable6 left
[00:29] *** ggoebel joined
[02:10] *** reportable6 joined
[02:34] *** djinni` left
[02:47] *** djinni` joined
[03:57] *** linkable6 left
[03:57] *** evalable6 left
[03:59] *** linkable6 joined
[03:59] *** evalable6 joined
[04:04] *** Geth left
[04:04] *** TempIRCLogger__ left
[04:04] *** RakuIRCLogger left
[04:06] *** lizmat left
[04:07] *** lizmat joined
[05:53] *** quotable6 left
[05:53] *** statisfiable6 left
[05:53] *** nativecallable6 left
[05:53] *** benchable6 left
[05:53] *** coverable6 left
[05:53] *** evalable6 left
[05:53] *** sourceable6 left
[05:53] *** unicodable6 left
[05:53] *** bisectable6 left
[05:53] *** linkable6 left
[05:53] *** reportable6 left
[05:53] *** releasable6 left
[05:53] *** notable6 left
[05:53] *** committable6 left
[05:53] *** bloatable6 left
[05:53] *** greppable6 left
[05:53] *** squashable6 left
[05:53] *** shareable6 left
[05:53] *** evalable6 joined
[05:54] *** bisectable6 joined
[05:54] *** releasable6 joined
[05:55] *** shareable6 joined
[05:55] *** greppable6 joined
[05:55] *** nativecallable6 joined
[05:55] *** committable6 joined
[05:56] *** benchable6 joined
[05:56] *** sourceable6 joined
[05:56] *** quotable6 joined
[05:56] *** coverable6 joined
[06:10] *** reportable6 joined
[06:54] *** unicodable6 joined
[06:54] *** bloatable6 joined
[06:54] *** squashable6 joined
[06:56] *** notable6 joined
[07:00] *** lizmat left
[07:00] *** Geth joined
[07:04] *** RakuIRCLogger left
[07:04] *** RakuIRCLogger joined
[07:08] *** RakuIRCLogger left
[07:08] *** RakuIRCLogger joined
[07:12] <lizmat> Files=1352, Tests=117129, 295 wallclock secs (35.10 usr  9.75 sys + 4101.30 cusr 332.28 csys = 4478.43 CPU)
[07:12] *** TempIRCLogger joined
[07:13] *** RakuIRCLogger left
[07:13] *** RakuIRCLogger joined
[07:17] *** TempIRCLogger left
[07:17] *** TempIRCLogger joined
[07:57] *** [Coke] left
[08:46] *** [Coke] joined
[08:56] *** statisfiable6 joined
[09:53] *** linkable6 joined
[11:06] *** TempIRCLogger left
[11:40] *** hankache joined
[11:48] <Geth> ¦ rakudo/add-Compiler.cver: 4bfe57b5dd | (Elizabeth Mattijsen)++ | 2 files
[11:48] <Geth> ¦ rakudo/add-Compiler.cver: Add implementation-detail Compiler.cver method
[11:48] <Geth> ¦ rakudo/add-Compiler.cver: 
[11:48] <Geth> ¦ rakudo/add-Compiler.cver: The raw string version of the Compiler.new.version is needed in
[11:48] <Geth> ¦ rakudo/add-Compiler.cver: several places.  This commit introduces a new Compiler.cver method
[11:48] <Geth> ¦ rakudo/add-Compiler.cver: that returns that raw string, and removes the private $!cver attribute
[11:48] <Geth> ¦ rakudo/add-Compiler.cver: from CURI, as it was basically just the raw compiler version.
[11:48] <Geth> ¦ rakudo/add-Compiler.cver: 
[11:49] <Geth> ¦ rakudo/add-Compiler.cver: No functional changes, just less copy-and-paste and a little less
[11:49] <Geth> ¦ rakudo/add-Compiler.cver: memory use for CURI instances (not that we have many of them).
[11:49] <Geth> ¦ rakudo/add-Compiler.cver: review: https://github.com/rakudo/rakudo/commit/4bfe57b5dd
[11:49] <Geth> ¦ rakudo: lizmat++ created pull request #4832: Add implementation-detail Compiler.cver method
[11:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4832
[11:59] *** hankache left
[12:00] *** hankache joined
[12:08] *** reportable6 left
[12:10] *** reportable6 joined
[12:17] *** hankache left
[12:30] *** hankache joined
[12:32] *** hankache left
[12:38] <Geth> ¦ rakudo: da54063c23 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6
[12:38] <Geth> ¦ rakudo: Streamline the checks for prefix writeability in CURI
[12:38] <Geth> ¦ rakudo: 
[12:38] <Geth> ¦ rakudo: They were incorrectly indented and smelled of Perl  :-)
[12:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/da54063c23
[12:53] *** hankache joined
[12:58] <Geth> ¦ rakudo: f4cba21c67 | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/Internals.pm6
[12:58] <Geth> ¦ rakudo: Make sure we serialize exports
[12:58] <Geth> ¦ rakudo: 
[12:58] <Geth> ¦ rakudo: This is a brute force attempt at #1920.  It makes this script
[12:58] <Geth> ¦ rakudo: display "DONE" rather than segfault.  The original script uses
[12:58] <Geth> ¦ rakudo: (require ::($module)), and that still usually segfaults.
[12:58] <Geth> ¦ rakudo: 
[12:58] <Geth> ¦ rakudo:     class TestMe {
[12:58] <Geth> ¦ rakudo: <…commit message has 14 more lines…>
[12:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f4cba21c67
[12:58] *** hankache left
[12:59] *** linkable6 left
[13:02] *** linkable6 joined
[14:00] *** [Coke]_ joined
[14:02] *** [Coke] left
[14:03] *** ggoebel left
[14:07] *** hankache joined
[14:15] *** discord-raku-bot left
[14:15] <gfldex> greppable6: ^compose
[14:15] <greppable6> gfldex, 9 lines, 2 modules: https://gist.github.com/cba81c9a7c237f128b058e1ddf04ee81
[14:15] *** discord-raku-bot joined
[14:22] <gfldex> greppable6: \^compose
[14:22] *** hankache left
[14:22] <greppable6> gfldex, 62 lines, 22 modules: https://gist.github.com/3702e423695ac9f0df017f25ab11c9f4
[14:45] <gfldex> Is there an alternative to phaser COMPOSE (that is NYI)?
[14:46] <lizmat> .^compose I guess ?
[14:46] <gfldex> I want to have a class method called when the role is composed. (As the phaser would do.)
[14:50] <gfldex> Do I have to provide my own RoleHOW or is there a shortcut?
[14:50] <lizmat> class Foo { }; BEGIN { Foo.method; Foo.^compose }
[14:51] <lizmat> that is, if that method would change anything in the way the class would compose
[14:51] <lizmat> if not, then BEGIN Foo.method would be enough ?
[14:52] <gfldex> I may be asking for the wrong thing and shall rethink my question. :-)
[14:55] <gfldex> greppable6: method \^
[14:55] <greppable6> gfldex, 4 lines, 3 modules: https://gist.github.com/b4c84f7d22944b26ccc25149ca6c7d06
[15:37] *** discord-raku-bot left
[15:37] *** discord-raku-bot joined
[15:55] *** hankache joined
[16:00] *** hankache left
[16:11] *** AlexDanielIRC joined
[16:15] *** ggoebel joined
[16:30] *** ggoebel left
[16:30] *** ggoebel joined
[17:05] *** [Coke]_ is now known as [Coke]
[17:15] *** sena_kun left
[17:16] *** sena_kun joined
[17:19] <Geth> ¦ whateverable: AlexDaniel++ created pull request #381: Switch the IRC host to libera
[17:19] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/pull/381
[17:26] <Geth> ¦ rakudo: 1fd2d84359 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Repository/Installation.pm6
[17:26] <Geth> ¦ rakudo: Remove dead wood
[17:26] <Geth> ¦ rakudo: 
[17:26] <Geth> ¦ rakudo: Turns out the CURI $!cver attribute was basically unused
[17:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1fd2d84359
[17:28] <Geth> ¦ whateverable: AlexDaniel++ created pull request #382: Fix FootgunDB to write into a temp file first
[17:28] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/pull/382
[17:29] <AlexDaniel> Now, if you're wondering why am I submitting pull requests to whateverable, it's because I don't have access to the repo
[17:29] <AlexDaniel> so please review and merge :)
[17:31] <Geth> ¦ whateverable: bb135ac850 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | lib/Whateverable.pm6
[17:31] <Geth> ¦ whateverable: Switch the IRC host to libera (#381)
[17:31] <Geth> ¦ whateverable: 
[17:31] <Geth> ¦ whateverable: Because freenode is no longer a thing (and everything moved to libera).
[17:31] <Geth> ¦ whateverable: Note that this tweak was hastily applied on the server and remained
[17:31] <Geth> ¦ whateverable: uncommitted, so actually this commit changes nothing, it's just about
[17:31] <Geth> ¦ whateverable: committing what is already there.
[17:31] <Geth> ¦ whateverable: 
[17:31] <Geth> ¦ whateverable: <…commit message has 7 more lines…>
[17:31] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/bb135ac850
[17:32] <Geth> ¦ whateverable: 14dfd36e49 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | lib/Whateverable/FootgunDB.pm6
[17:32] <Geth> ¦ whateverable: Fix FootgunDB to write into a temp file first (#382)
[17:32] <Geth> ¦ whateverable: 
[17:32] <Geth> ¦ whateverable: The comment in the code should explain everything. Without this the
[17:32] <Geth> ¦ whateverable: bots can trash their own files when the system runs out of space.
[17:32] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/14dfd36e49
[17:34] <AlexDaniel> lizmat: thanks! In the future please merge instead of squashing
[17:35] <lizmat> I seem to never do the right thing in that respect  :-(
[17:35] <lizmat> why merge instead of squash?
[17:36] <AlexDaniel> keeps gpg signatures, keeps commits, keeps commit descriptions, makes it possible to easily have a local version of master with some commits that are not merged yet
[17:36] <lizmat> ok, next time I'll ask first :-)
[17:38] <AlexDaniel> I guess that's the right way, yeah. Some people use git just to dump the changed files, others will craft by hand each commit and separate things if they belong to different commits… and then when it's squashed we're like, yeah… great, thank :D
[17:38] <AlexDaniel> thanks*
[17:38] <AlexDaniel> but all good no worries
[17:40] <AlexDaniel> OK now the good part of restoring tellable… finding the right backups :)
[17:40] <AlexDaniel> ha, `git: 'restore' is not a git command.`, really 😆
[17:40] <lizmat> ++AlexDaniel 
[18:07] *** reportable6 left
[18:45] *** sena_kun left
[18:46] *** sena_kun joined
[18:57] <Geth> ¦ rakudo: 412c4625d5 | (Elizabeth Mattijsen)++ | 2 files
[18:57] <Geth> ¦ rakudo: Streamline R:I.EXPORT_SYMBOL a bit
[18:57] <Geth> ¦ rakudo: 
[18:57] <Geth> ¦ rakudo: - abstract the actual binding in a sub
[18:57] <Geth> ¦ rakudo: - don't do method calls / hash lookups more than once
[18:57] <Geth> ¦ rakudo: - use AT-KEY / BIND-KEY for further speedup
[18:57] <Geth> ¦ rakudo: - remove one now unnecessary decont
[18:57] <Geth> ¦ rakudo: - improve readability by using better variable names
[18:57] <Geth> ¦ rakudo: 
[18:57] <Geth> ¦ rakudo: This code probably never get hot enough to be speshed or inlined.
[18:57] <Geth> ¦ rakudo: Any effects will only be seen at compile time for the various "is"
[18:58] <Geth> ¦ rakudo: traits.
[18:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/412c4625d5
[19:03] <Geth> ¦ whateverable/raiph-patch-1: fdb6574578 | raiph++ (committed using GitHub Web editor) | lib/Whateverable.pm6
[19:03] <Geth> ¦ whateverable/raiph-patch-1: Fix comment bitrot
[19:03] <Geth> ¦ whateverable/raiph-patch-1: 
[19:03] <Geth> ¦ whateverable/raiph-patch-1: ❤️ Alex, Liz
[19:03] <Geth> ¦ whateverable/raiph-patch-1: review: https://github.com/Raku/whateverable/commit/fdb6574578
[19:04] <Geth> ¦ whateverable: raiph++ created pull request #383: Fix comment bitrot
[19:04] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/pull/383
[19:04] <AlexDaniel> thanks :)
[19:05] <Geth> ¦ whateverable: 1f7beb0eba | raiph++ (committed using GitHub Web editor) | lib/Whateverable.pm6
[19:05] <Geth> ¦ whateverable: Fix comment bitrot (#383)
[19:05] <Geth> ¦ whateverable: 
[19:05] <Geth> ¦ whateverable: ❤️ Alex, Liz
[19:05] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/1f7beb0eba
[19:09] <Geth> ¦ rakudo: 624b9271d9 | (Elizabeth Mattijsen)++ | src/Perl6/bootstrap.c/BOOTSTRAP.nqp
[19:09] <Geth> ¦ rakudo: Use better variable name
[19:09] <Geth> ¦ rakudo: 
[19:09] <Geth> ¦ rakudo: This was probably copy-pasted from the Array version.  But seeing
[19:09] <Geth> ¦ rakudo: $array.BIND-KEY() just feels wrong, and only leads to wasting time
[19:09] <Geth> ¦ rakudo: (it did for me).  So make sure nobody will do that in the future.
[19:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/624b9271d9
[19:16] <Geth> ¦ whateverable: AlexDaniel++ created pull request #384: Improve Tellable's .seen normalization on startup
[19:16] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/pull/384
[19:24] *** lizmat_ joined
[19:25] *** lizmat left
[19:26] *** TempIRCLogger joined
[19:28] <Geth> ¦ whateverable: 915225c4ad | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/Tellable.p6
[19:28] <Geth> ¦ whateverable: Improve Tellable's .seen normalization on startup
[19:28] <Geth> ¦ whateverable: 
[19:28] <Geth> ¦ whateverable: Tellable stores a dict of all latest messages by all users that it has
[19:28] <Geth> ¦ whateverable: seen. However, the keys in that dict are not exact nicknames. Instead,
[19:28] <Geth> ¦ whateverable: they are intentionally mangled simplified versions of nicknames. The
[19:28] <Geth> ¦ whateverable: goal of the normalization is to allow users to change their nicknames
[19:28] <Geth> ¦ whateverable: slightly and still receive messages, and have `.seen` that DWIMs.
[19:28] <Geth> ¦ whateverable: <…commit message has 12 more lines…>
[19:28] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/915225c4ad
[19:28] <Geth> ¦ whateverable: 29bfa38a7f | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | xbin/Tellable.p6
[19:29] <Geth> ¦ whateverable: Merge pull request #384 from AlexDaniel/improve-tellable-renormalization
[19:29] <Geth> ¦ whateverable: 
[19:29] <Geth> ¦ whateverable: Improve Tellable's .seen normalization on startup
[19:29] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/29bfa38a7f
[19:41] *** lizmat_ left
[19:42] *** lizmat joined
[19:53] *** hankache joined
[19:53] *** hankache left
[20:23] <AlexDaniel> I see that there is some action in #raku-beginner. Should the bots join that channel too?
[20:25] <AlexDaniel> also, what's the name of the discord bot now?
[20:25] <AlexDaniel> my constant DISCORD-BRIDGE = any(‘raku-bridge’, ‘raku-bridge1’);
[20:25] <AlexDaniel> that's wrong, yes?
[20:27] <AlexDaniel> I think the last bot name is discord-raku-bot. Can anybody also tell me its fallback name (if discord-raku-bot is taken)?
[20:27] <AlexDaniel> reason why it matters: bots understand commands from the discord bot, m:, .tell, bisect: and all others
[20:27] <AlexDaniel> but for that they need to know the nickname
[20:38] <MasterDuke> gfldex: ^^^ questions re discord-raku-bot
[20:39] *** discord-raku-bot left
[20:40] *** discord-raku-bot joined
[20:40] <gfldex> AlexDaniel: the bot is called discord-raku-bot
[20:41] <gfldex> I don't think we should move all the bots over there. It's a beginner channel after all.
[20:42] <AlexDanielIRC> cool, no means no :)
[20:42] <AlexDanielIRC> gfldex: what's its backup name?
[20:45] *** discord-raku-bot left
[20:45] *** discord-raku-bot joined
[20:46] <MasterDuke> tellable would probably be good there
[20:46] <AlexDanielIRC> based on the logs, either it has never used it, or it is set to something that doesn't start with discord-raku-bot
[20:47] <AlexDanielIRC> MasterDuke: well, we should perhaps take some bots down anyway
[20:48] <AlexDanielIRC> squashable6: what is your purpose today?
[20:48] <squashable6> AlexDanielIRC, I cannot recognize this command. See wiki for some examples: https://github.com/Raku/whateverable/wiki/Squashable
[20:48] <MasterDuke> linkable6 doesn't work right now, but i wish it did, that's a useful one
[20:48] <AlexDanielIRC> linkable6: help
[20:48] <linkable6> AlexDanielIRC, Like this: R#1946 D#1234 MOAR#768 NQP#509 SPEC#242 RT#126800 S09:320 524f98cdc # See wiki for more examples: https://github.com/Raku/whateverable/wiki/Linkable
[20:48] <MasterDuke> bloatable6 probably isn't needed everywhere
[20:48] <AlexDanielIRC> R#1946
[20:49] <AlexDanielIRC> why doesn't it work though 🤔
[20:49] *** linkable6 left
[20:49] <AlexDanielIRC> well, that's very telling.
[20:49] *** sena_kun left
[20:50] <AlexDanielIRC> have no idea why it just left
[20:51] *** sena_kun joined
[20:51] <AlexDanielIRC> damn, most of these bots were so useful. Reportable I think wasn't touched in a while but it was a really cool one I think
[20:52] <MasterDuke> i think it makes sense to keep them all in #whateverable, just maybe not all the other channels
[20:53] <AlexDanielIRC> gfldex: so, what's the backup name? There has to be something that it uses if the main one is taken. Most bots in that situation will continue to use the backup name until restarted, don't know if that one is smarter
[20:53] <AlexDanielIRC> easiest way to test – kill it, take its name, start it, see what's the result
[21:18] <gfldex> It uses the default alternate nick of IRC::Client, defined here: https://github.com/lizmat/IRC-Client/blob/main/lib/IRC/Client.rakumod#L350
[21:37] <Geth> ¦ whateverable: AlexDaniel++ created pull request #385: Fix the list of discord bridge bot names
[21:37] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/pull/385
[21:37] <AlexDanielIRC> gfldex: thanks!
[22:06] *** AlexDanielIRC left
[22:52] *** AlexDanielIRC joined
[23:26] *** TempIRCLogger left
[23:37] *** AlexDanielIRC left
[23:55] *** [Coke] left
