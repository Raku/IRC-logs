[00:07] *** reportable6 left
[00:07] *** reportable6 joined
[01:43] *** benchable6 left
[01:43] *** quotable6 left
[01:43] *** sourceable6 left
[01:43] *** unicodable6 left
[01:43] *** committable6 left
[01:43] *** greppable6 left
[01:43] *** reportable6 left
[01:43] *** bisectable6 left
[01:43] *** releasable6 left
[01:43] *** shareable6 left
[01:43] *** notable6 left
[01:43] *** statisfiable6 left
[01:43] *** linkable6 left
[01:43] *** coverable6 left
[01:43] *** bloatable6 left
[01:43] *** nativecallable6 left
[01:43] *** evalable6 left
[01:43] *** tellable6 left
[01:43] *** shareable6 joined
[01:44] *** nativecallable6 joined
[01:44] *** coverable6 joined
[01:44] *** bisectable6 joined
[01:45] *** reportable6 joined
[01:45] *** tellable6 joined
[01:45] *** greppable6 joined
[01:45] *** quotable6 joined
[01:45] *** evalable6 joined
[01:45] *** sourceable6 joined
[01:45] *** releasable6 joined
[01:45] *** unicodable6 joined
[01:45] *** benchable6 joined
[01:45] *** linkable6 joined
[01:46] *** bloatable6 joined
[01:46] *** statisfiable6 joined
[01:46] *** notable6 joined
[01:46] *** committable6 joined
[02:46] *** bloatable6 left
[02:46] *** committable6 left
[02:46] *** benchable6 left
[02:46] *** notable6 left
[02:46] *** greppable6 left
[02:46] *** coverable6 left
[02:46] *** tellable6 left
[02:46] *** nativecallable6 left
[02:46] *** statisfiable6 left
[02:46] *** unicodable6 left
[02:46] *** evalable6 left
[02:46] *** bisectable6 left
[02:46] *** linkable6 left
[02:46] *** reportable6 left
[02:46] *** shareable6 left
[02:46] *** quotable6 left
[02:46] *** sourceable6 left
[02:46] *** releasable6 left
[02:46] *** tellable6 joined
[02:46] *** linkable6 joined
[02:47] *** evalable6 joined
[02:47] *** benchable6 joined
[02:47] *** releasable6 joined
[02:47] *** bisectable6 joined
[02:48] *** committable6 joined
[02:48] *** bloatable6 joined
[02:48] *** unicodable6 joined
[02:48] *** notable6 joined
[02:48] *** coverable6 joined
[02:48] *** sourceable6 joined
[02:49] *** greppable6 joined
[02:49] *** shareable6 joined
[02:49] *** nativecallable6 joined
[02:49] *** quotable6 joined
[02:49] *** reportable6 joined
[02:49] *** statisfiable6 joined
[03:00] *** Kaiepi left
[04:28] *** Kaiepi joined
[06:10] *** reportable6 left
[06:11] *** reportable6 joined
[07:40] <Kaiepi> i can't compile CORE.d.setting on the jvm

[07:40] <Kaiepi> # A fatal error has been detected by the Java Runtime Environment:

[07:40] <Kaiepi> #

[07:40] <Kaiepi> #  Internal Error (metaspaceArena.cpp:86), pid=18933, tid=18934

[07:40] <Kaiepi> #  guarantee(requested_word_size <= chunklevel::MAX_CHUNK_WORD_SIZE) failed: Requested size too large (558709) - max allowed size per allocation is 524288.

[07:40] <Kaiepi> #

[07:40] <Kaiepi> # JRE version: OpenJDK Runtime Environment (18.0.1+10) (build 18.0.1+10-suse-1.4-x8664)

[07:40] <Kaiepi> # Java VM: OpenJDK 64-Bit Server VM (18.0.1+10-suse-1.4-x8664, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)

[07:41] <Kaiepi> ah https://github.com/rakudo/rakudo/issues/4952

[07:47] *** sena_kun joined
[07:59] *** discord-raku-bot left
[08:32] *** dogbert11 left
[08:32] *** dogbert17 joined
[09:16] *** sena_kun left
[09:18] *** sena_kun joined
[10:18] *** evalable6 left
[10:18] *** linkable6 left
[10:19] *** linkable6 joined
[10:19] *** evalable6 joined
[10:26] <AlexDaniel> what's wrong with bisectable

[10:26] <AlexDaniel> bisectable6: old=2019.11 say Date.new('2015-11-24').last-date-in-month;

[10:26] <bisectable6> AlexDaniel, Bisecting by exit code (old=2019.11 new=aa5e680). Old exit code: 1

[10:27] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/9b30d8bd628a42a87dcca1a1b5804c16

[10:27] <bisectable6> AlexDaniel, (2020-04-17) https://github.com/rakudo/rakudo/commit/2fb7198f3da8ec0b76d1995ae0775378951717fe

[10:27] <AlexDaniel> 🤷

[10:40] <lizmat> AlexDaniel++

[10:41] <AlexDaniel> I didn't do anything though 🤔

[10:41] <AlexDaniel> it just… works now? I don't understand the previous error

[10:42] <AlexDaniel> it could be that github returned an error while it was trying to gist the output

[10:42] <AlexDaniel> and the error was: “The 'For…” the rest we can't see😆

[10:43] <lizmat> i guess... anyways, I was able to answer Mohammad's tweet  :-)

[10:44] <lizmat> and because of that got an idea for another feature in rak

[11:00] <releasable6> Next release in ≈3 days and ≈7 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[11:29] *** evalable6 left
[11:29] *** linkable6 left
[11:31] *** linkable6 joined
[11:31] *** evalable6 joined
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[13:07] *** Kaiepi left
[13:08] *** Kaiepi joined
[13:26] *** [Coke] left
[13:27] *** [Coke] joined
[14:11] <Geth> ¦ rakudo/lizmat-smartcase: 249f2a05cc | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[14:11] <Geth> ¦ rakudo/lizmat-smartcase: Introduce :smartcase named argument

[14:11] <Geth> ¦ rakudo/lizmat-smartcase: 

[14:11] <Geth> ¦ rakudo/lizmat-smartcase: In principle for all string related functions that also have :ignorecase.

[14:11] <Geth> ¦ rakudo/lizmat-smartcase: In this commit, only "starts-with" has been equipped with it.  Basically

[14:11] <Geth> ¦ rakudo/lizmat-smartcase: it operates as :ignorecase if the needle does **not** have any uppercase

[14:11] <Geth> ¦ rakudo/lizmat-smartcase: characters.  Otherwise it is ignored.

[14:11] <Geth> ¦ rakudo/lizmat-smartcase: 

[14:11] <Geth> ¦ rakudo/lizmat-smartcase: <…commit message has 5 more lines…>

[14:11] <Geth> ¦ rakudo/lizmat-smartcase: review: https://github.com/rakudo/rakudo/commit/249f2a05cc

[14:11] <Geth> ¦ rakudo: lizmat++ created pull request #5005: Introduce :smartcase named argument

[14:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5005

[14:27] *** linkable6 left
[14:27] *** evalable6 left
[14:29] *** linkable6 joined
[14:30] *** evalable6 joined
[14:50] *** vrurg left
[14:54] *** vrurg joined
[15:10] *** discord-raku-bot joined
[15:39] *** camelia left
[15:39] *** nine_ joined
[15:40] *** nine left
[15:48] *** camelia joined
[16:15] *** sena_kun left
[16:15] *** sena_kun joined
[16:30] <AlexDaniel> OK I have a request :)

[16:31] <AlexDaniel> please remove review requests from me on these two pulls: https://github.com/rakudo/rakudo/pull/1884 https://github.com/Raku/raku.org/pull/138

[16:31] <AlexDaniel> and perhaps do something with this PR: https://github.com/Raku/roast/pull/527

[16:32] <AlexDaniel> reason being is that I keep seeing these PRs on https://github.com/pulls, but I can do absolutely nothing about them

[16:32] <AlexDaniel> I can't unassign myself, I can't work on these PRs

[16:33] <AlexDaniel> oh, and that too, please: https://github.com/MoarVM/MoarVM/pull/659

[16:34] <sena_kun> AlexDaniel, done!

[16:37] <AlexDaniel> good, thanks, if you can also remove the “@” sign in this comment it'd be perfect: https://github.com/Raku/roast/pull/527#issuecomment-481468718

[16:37] <AlexDaniel> it's OK to mention me but that specific mention with @ in a long-standing PR just makes it show up for me indefinitely

[16:38] <sena_kun> wow, didn't know that

[16:38] <sena_kun> done doo. :)

[16:38] <AlexDaniel> thank you!

[16:42] <sena_kun> AlexDaniel, you're welcome!

[18:06] *** reportable6 left
[18:08] *** reportable6 joined
[18:18] <Geth> ¦ rakudo/lizmat-died-naturally: 376b0a7055 | (Elizabeth Mattijsen)++ | src/main.nqp

[18:18] <Geth> ¦ rakudo/lizmat-died-naturally: s/DIED/DONE/

[18:18] <Geth> ¦ rakudo/lizmat-died-naturally: 

[18:18] <Geth> ¦ rakudo/lizmat-died-naturally: vrurg++ for the suggestion

[18:18] <Geth> ¦ rakudo/lizmat-died-naturally: review: https://github.com/rakudo/rakudo/commit/376b0a7055

[18:27] *** Kaipei joined
[18:30] *** Kaiepi left
[18:42] <Geth> ¦ rakudo: 4fc3d455b0 | (Elizabeth Mattijsen)++ | lib/CompUnit/Repository/Staging.rakumod

[18:42] <Geth> ¦ rakudo: Revert "Add CUR::Staging.candidates method"

[18:42] <Geth> ¦ rakudo: 

[18:42] <Geth> ¦ rakudo: This reverts commit 50025c1a48dd194696d275acadb9c7fd5b82f9a2.

[18:42] <Geth> ¦ rakudo: 

[18:42] <Geth> ¦ rakudo: In response to #4949, will revisit this at a later time, most likely

[18:42] <Geth> ¦ rakudo: post RakuAST merge

[18:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4fc3d455b0

[18:43] *** linkable6 left
[18:44] *** linkable6 joined
[18:54] *** melezhik joined
[18:54] <melezhik> o/

[18:55] <melezhik> in a light of upcoming release, I let a comment for this issue - https://github.com/rakudo/rakudo/issues/4278 , but have not received any feedback ...

[18:55] <melezhik> https://github.com/rakudo/rakudo/issues/4278#issuecomment-1193486846

[19:08] <melezhik> lizmat I saw you comment , so I marked issue as open in R3 list , thanks

[19:12] *** melezhik left
[19:15] <Geth> ¦ rakudo: 621d69e0e2 | (Elizabeth Mattijsen)++ | src/core.c/DateTime.pm6

[19:15] <Geth> ¦ rakudo: Make DateTime.ACCEPTS a multi, as it should be

[19:15] <Geth> ¦ rakudo: 

[19:15] <Geth> ¦ rakudo: Fixes DateTime(Str).ACCEPTS(True), which was the new reason why the

[19:15] <Geth> ¦ rakudo: code of https://github.com/rakudo/rakudo/issues/4278 failed.

[19:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/621d69e0e2

[19:21] <lizmat> jdv: please make sure that https://github.com/rakudo/rakudo/commit/4fc3d455b0 and https://github.com/rakudo/rakudo/commit/621d69e0e2 are included in the release

[19:27] <lizmat> bisectable6: old=2022.01 "2019.02-06".DateTime

[19:27] <bisectable6> lizmat, Cannot find revision “2022.01” (did you mean “2022.06”?)

[19:27] <lizmat> bisectable6: old=2022.02 "2019.02-06".DateTime

[19:27] <bisectable6> lizmat, On both starting points (old=2022.02 new=621d69e) the exit code is 1 and the output is identical as well

[19:27] <bisectable6> lizmat, Output on both points: «Invalid DateTime string '2019.02-06'; use an ISO 8601 timestamp (yyyy-mm-ddThh:mm:ssZ or yyyy-mm-ddThh:mm:ss+01:00) instead␤  in block <unit> at /tmp/LC090Ph3Ow line 1␤␤»

[19:29] <lizmat> bisectable6: old=2022.01 say DateTime.new: "2019.02-06"

[19:29] <bisectable6> lizmat, Cannot find revision “2022.01” (did you mean “2022.06”?)

[19:29] <lizmat> bisectable6: old=2022.02 say DateTime.new: "2019.02-06"

[19:29] <bisectable6> lizmat, On both starting points (old=2022.02 new=621d69e) the exit code is 1 and the output is identical as well

[19:29] <bisectable6> lizmat, Output on both points: «Invalid DateTime string '2019.02-06'; use an ISO 8601 timestamp (yyyy-mm-ddThh:mm:ssZ or yyyy-mm-ddThh:mm:ss+01:00) instead␤  in block <unit> at /tmp/DQDEm8uIZL line 1␤␤»

[19:29] <lizmat> bisectable6: old=2022.02 say DateTime.new: "2019-02-06"

[19:29] <bisectable6> lizmat, Bisecting by exit code (old=2022.02 new=621d69e). Old exit code: 1

[19:30] <bisectable6> lizmat, bisect log: https://gist.github.com/7947f15e8845e2fa758a62818bfb9ede

[19:30] <bisectable6> lizmat, (2022-06-09) https://github.com/rakudo/rakudo/commit/aa462b41c1ef50bb75b5f137523c34fc857cc493

[19:32] <jdv> lizmat: i mean its in master, no?

[19:32] <lizmat> yes

[19:32] <jdv> so very probably:)

[19:32] <jdv> haha

[19:32] <lizmat> ok... just wanted to be sure  :-)

[19:32] <jdv> thank you

[19:32] <lizmat> ++jdv for doing a release!

[19:40] *** gfldex left
[19:40] *** discord-raku-bot left
[19:42] *** discord-raku-bot joined
[19:44] *** gfldex joined
[19:50] <Geth> ¦ Test-Stream: cbc5ed988d | (Elizabeth Mattijsen)++ | 2 files

[19:50] <Geth> ¦ Test-Stream: Remove tests for now for 2022.07+

[19:50] <Geth> ¦ Test-Stream: review: https://github.com/raku-community-modules/Test-Stream/commit/cbc5ed988d

[20:11] *** sivoais left
[20:13] *** sena_kun left
[20:14] *** sena_kun joined
[20:30] *** melezhik joined
[20:31] <melezhik> Hi lizmat - you have some comment on r3 report format in https://github.com/rakudo/rakudo/issues/4278#issuecomment-1195943508 , we can discuss then there or if you want - drop a ticket in r3 repo, anyway I feel like I  need some informal explanation here ...

[20:32] <lizmat> sure, go ahead

[20:32] <melezhik> ok, give me some time ...

[20:34] <lizmat> no hurry :-)

[20:37] <melezhik> "[bash: main.build.pre] :: " - r3 tools runs tests as Sparrow tasks, even thought from .spakyci.yaml point of view there are not - https://github.com/melezhik/r3tool/blob/master/.sparkyci.yaml#L14 , so every Sparrow task output line is prepended by some meaningful header which more or less describes a task  , like in case of this code

[20:37] <melezhik> https://github.com/melezhik/r3tool/blob/master/.sparkyci.yaml#L13-L19 it's converted into Sparrow task with a header ("bash: main.build.pre") which basically means execute bash code for sparkyci `main.pre.build` section - https://github.com/melezhik/sparkyci/blob/main/docs/dsl.md#build-hooks , does it help ?

[20:38] <melezhik> it's possible to change such a header , however I am just explaining why a header appears in output ...

[20:40] <lizmat> Q: who need to look at these reports if something goes wrong?

[20:41] <melezhik> on this - https://github.com/rakudo/rakudo/issues/4278#issuecomment-1195946178 - the same logic applies - one just sees an output from "main.per.build" section , and this section is just a simple Bash code that sets RAKUBIN variable, installs Tomty - underlying test framework and runs tests ... - it's pretty much described here btw -

[20:41] <melezhik> https://github.com/melezhik/r3tool#usage

[20:42] <melezhik> A: Rakudo developers and GH issues authors (remember r3 runs tests based on Rakudo GH bugs ?)

[20:43] <lizmat> so, humans, right?

[20:43] <melezhik> Now, I am ready to accept that outout format isa bit unusual for the first users, but I can't agree that it is very hard to understand ... Yes, human beings

[20:43] *** sivoais joined
[20:43] <melezhik> first -> first time

[20:44] <lizmat> well, the format is too verbose for first time users, from my perspective: it may be telling all the things it has done, and then *somewhere* in all of those lines, it actually tells what the error was

[20:45] <lizmat> it may be clear to you quickly, but it took me at least 30 seconds just to find where to look for the actual error

[20:45] <lizmat> and by that time, I'm annoyed and want to do something else  :-)

[20:47] <lizmat> and that means that first time users will never take the trouble of finding out how useful your tool is]

[20:47] <lizmat> which is a pity

[20:51] <melezhik> I don't know what to say, you are entitled to have this impression ... however on my view you exaggerate here - the report has maybe 15 Iines of output form test preparation section, which I can't find "too verbose", more over - it could be adjusted , every tools has it's first user threshold - well 30 seconds spent for the one time ( you are not

[20:51] <melezhik> going to this time again and again one you understand the idea  )  - is not that bad result ...

[20:53] <lizmat> "you can never get a second chance to make a first impression"  :-)

[20:55] <melezhik> that's all right - I just would not apply your first impression to everyone else , like I said you are entitle to have your own judgement , I just don't see your point of saying that tool is hard to use/read just because you've seen 15 lines of output from test preparation section, moreover this things are well documented and easy to track ...

[20:56] <lizmat> as a core developer / module author, I just get the issues / error reports of the tool

[20:56] <lizmat> I'm not interested in the tool itself per se

[20:57] <lizmat> so maybe the problem is, that *you* created the tests for App::Rak to be helpful

[20:57] <lizmat> but for me (at this moment) it just means extra work without any clear benefits

[20:58] <lizmat> compare this to https://github.com/rakudo/rakudo/issues/5002

[20:58] <melezhik> I see that , I still don't see the point - the tools btw already revealed some bugs in Rakudo and other raku modules, what other usefulness you need ?

[20:59] <lizmat> that shows a clear summary of things that failed, with options to look at old and new output

[20:59] <melezhik> | it just means extra work without any clear benefits - how does that relate to the tool? The tool just found bugs in App-Raku , I don't understand your point ...

[21:00] <lizmat> well, it produced an error report that was hard to understand, and that I could not reproduce locally because it is still unclear what and how you're exactly testing

[21:00] <lizmat> so to me, at this point, it has been extra work without any clear benefits

[21:02] <melezhik> lizmat I am not sure it's productive to continue this discussion, you keep telling me that you dislike tool A just because you like tolls X, Y, Z , it's not productive ... You keep telling me that _you_ find hard it understand the tool report format, after I've tried to help you to understand , and you keep telling about you don't see benefits.

[21:02] <melezhik> Well if you get bug reported in you software , what other benefits you need?

[21:05] <melezhik> I can't and should not course you into anything , I am absolute OK if people like or dislike things I've don't I just don't get when you say some arguments in a scope of your preferences and try to "sell it" as technical arguments, meanwhile I am trying to get a discussion in pure technical scope of view , it's not fair 😉

[21:06] <lizmat> melezhik: please, I appreciate what you're doing

[21:06] <melezhik> course -> coerce , sorry for the typo

[21:07] <lizmat> no worries

[21:07] <vrurg> If it's the same tool, I was looking into, then must admit I had some hard time trying to get what it would like to tell me. Due to lack of time I did not try to analyze it more through.

[21:07] *** sena_kun left
[21:08] <lizmat> melezhik: ^^ my point

[21:09] <lizmat> melezhik: I'm trying to make you understand that your tools could be even better

[21:09] <melezhik> vrurg what exactly you found hard to understand ? if this the same as Liz, I hope my answers gave you some clarity ...

[21:09] <lizmat> they are great at finding issues

[21:10] <lizmat> melezhik: if you need to teach your people how to read a report

[21:10] <lizmat> you've lost 99% of your potential audience already

[21:10] <lizmat> your tools are not great at *reporting* issues in a way in which a non-proficient reader of the reports, can work with

[21:12] <vrurg> melezhik: As I mentioned, I didn't have much time on my hands. So, just looked into, noticed that it mentions DateTime, and then gave up because didn't know what to do with it.

[21:12] <melezhik> lizmat  "I'm trying to make you understand that your tools could be even better" - saying I am not going to use your tools does not help at all , not sure why you convey this as a help, also being categorical in numbers does not help also, indeed it takes opposite effect

[21:12] <lizmat> also: I'm getting the impression that you consider my comments as a personal attack

[21:13] <lizmat> you are not your software

[21:13] <vrurg> lizmat++

[21:13] <melezhik> I am consider them as I no nice way to make your point, because they sound way too categorical

[21:14] <vrurg> Perhaps what is needed is easy access to the test source code in first place. Then it needs more consideration, what else could be of use. Detailed reports with stack traces, perhaps.

[21:15] <melezhik> lizmat -  am not, however , it does not feel nice as I said you ...

[21:18] <melezhik> if you'd try not pose you opinion as everyone's else one, that what made your comments more productive and not categorical, however I feel like you don't bother to covey your comments that way ...

[21:22] <lizmat> melezhik: I'm sorry to hear you feel that way

[21:23] <lizmat> I was trying to convey that in its current state, it is not very appealing nor useful to *me*

[21:23] <lizmat> and now I'm going to go away from this discussion and have some sleep over it

[21:23] <lizmat> &

[21:52] *** maettu left
[22:04] *** maettu joined
[22:15] *** melezhik left
[22:47] <Kaipei> i can make it a little bit further into a JVM build than CORE.d.setting, but only on alpine, weirdly

[22:48] <Kaipei> CompUnit::Repository::FileSystem runs into problems of some sort because of its use of atomics

[22:48] <Kaipei> in the final installation

[22:48] <Kaipei> (on the counter branch, need to try master)

[22:50] <Kaipei> likes to hang, but i say that because i've seen null exceptions in nqp::atomicload

[22:51] <Kaipei> originating from there

[22:51] *** Kaipei is now known as Kaiepi

