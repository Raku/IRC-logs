[00:06] *** reportable6 left
[00:10] *** linkable6 joined
[03:13] *** frost joined
[04:08] *** reportable6 joined
[04:24] *** [Coke] left
[04:24] *** [Coke] joined
[06:08] *** reportable6 left
[06:10] *** reportable6 joined
[09:55] *** evalable6 left
[09:55] *** linkable6 left
[09:55] *** evalable6 joined
[09:56] *** linkable6 joined
[10:05] <lizmat> Files=1351, Tests=117094, 325 wallclock secs (36.65 usr  9.96 sys + 4536.90 cusr 359.92 csys = 4943.43 CPU)

[10:05] <lizmat> vrurg: so yeah, the 346 wallclock secs was a fluke

[10:06] <lizmat> although we seem to have lost about 800 tests since the last time?

[10:56] *** evalable6 left
[10:56] *** linkable6 left
[10:56] *** linkable6 joined
[10:58] *** evalable6 joined
[11:30] *** Altai-man joined
[11:41] *** Altai-man left
[11:42] *** Altai-man joined
[12:07] *** reportable6 left
[13:10] *** reportable6 joined
[14:04] <Geth> ¦ nqp: 2ea01db9dd | (Stefan Seifert)++ | 2 files

[14:04] <Geth> ¦ nqp: Map new ops for unsigned handling

[14:04] <Geth> ¦ nqp: 

[14:04] <Geth> ¦ nqp: New ops: bindpos_u, atpos_u, atposref_u, iscont_u, assign_u and captureposarg_u

[14:04] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/2ea01db9dd

[14:24] <vrurg> lizmat: ot

[14:24] <vrurg> lizmat: sorry... No, it's a fake. I just wrapped some into subtests within a test-assertion.

[14:27] <vrurg> https://github.com/Raku/roast/commit/250a246ded 

[14:29] *** frost left
[15:44] <lizmat> I see  :-)

[15:53] *** shinto joined
[16:34] *** carlmasak joined
[16:59] <Geth> ¦ nqp: 7c20873fa4 | (Stefan Seifert)++ | 14 files

[16:59] <Geth> ¦ nqp: Replace flatnamed arg flag by flat | named

[16:59] <Geth> ¦ nqp: 

[16:59] <Geth> ¦ nqp: No need to have a separate flag when the combination of the existing flags

[16:59] <Geth> ¦ nqp: means the same thing. Will free up the flag for other use in MoarVM.

[16:59] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/7c20873fa4

[17:08] *** Core5549 joined
[17:11] *** shinto left
[17:16] *** shinto joined
[17:16] *** Core5549 left
[17:18] *** shinto left
[17:25] *** shinto joined
[17:52] *** carlmasak100 joined
[17:54] *** carlmasak left
[18:01] *** carlmasak100 is now known as carlmasak

[18:01] *** carlmasak left
[18:08] *** reportable6 left
[18:17] *** nine_ is now known as nine

[19:09] *** reportable6 joined
[19:11] *** Core6356 joined
[19:11] *** shinto left
[19:12] *** shinto joined
[19:14] *** Core2487 joined
[19:15] *** Core4335 joined
[19:15] *** Core6356 left
[19:16] *** Core9796 joined
[19:17] *** shinto left
[19:18] *** Core2487 left
[19:19] *** Core4335 left
[19:29] *** Altai-man left
[20:29] *** evalable6 left
[20:29] *** linkable6 left
[20:31] *** evalable6 joined
[20:45] *** shinto joined
[20:46] *** Core3143 joined
[20:49] *** Core9796 left
[20:50] *** shinto left
[21:54] <gfldex> m: sub s(\l where *.^can('rotor'|'iterator')) {}; s([]);

[21:54] <camelia> rakudo-moar f77fda7d1: OUTPUT: «This type cannot unbox to a native string: P6opaque, Junction␤  in sub s at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:54] <gfldex> Am I asking for to much?

[21:58] <lizmat> yes

[21:59] <lizmat> that basically winds up in NQP land, and NQP land doesn't know about Junctions really

[22:19] <Geth> ¦ problem-solving: vrurg++ created pull request #310: Add resolution document for #135

[22:19] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/pull/310

[22:23] <vrurg> greppable6: ValueList

[22:23] <greppable6> vrurg, 35 lines, 3 modules: https://gist.github.com/23ab16ee883767983c75f0fc82b437dc

[22:24] <vrurg> greppable6: ValueMap

[22:24] <greppable6> vrurg, Found nothing!

[22:26] <japhb> vrurg: Shouldn't that be *Scalar* decontainerization?  Or were you implying converting sub-Arrays to sub-ValueLists recursively?

[22:29] <vrurg> japhb: I was keeping in mind "Scalar", as it was always implied by the discussion surrounding Map conversion to non-value type. But you made me confused now...

[22:30] <japhb> Oh dear, I'm now an agent of chaos.

[22:30] <vrurg> You are my dear, you are... :D

[22:30] <japhb> :-D

[22:31] <vrurg> Though I tend to make it scalar only. Because if go as deep as deconting arrays and hashes, then why stopping there? And where stop then? 

[22:33] <vrurg> At deeper level we may consider introducing a protocol of converting an object type into a value type.

[22:35] <vrurg> But this would require some additional theoretical work. In the mean time it is sufficient for Value* structures to know that they contain the same array, no matter what is Array's content.

[22:35] <japhb> Actually, deep conversion of data structures in both directions would be a useful thing, but yeah, needs thought.

[22:36] <japhb> Right.  So maybe specify Scalar decontainerization in this doc, and leave other sub-container types open for future expansion?

[22:36] <vrurg> Oh, I'm recalling that codesections started working on immutable data types. That might eliminate the need for deep value-fication. 

[22:37] <vrurg> Yep, thanks for reminding me. I lost track and forgot to update the resolution. :)

[22:41] <japhb> Heh

[22:45] <vrurg> Done.

[23:03] <vrurg> Updated with parameterization section and that's probably it for today.

[23:30] *** linkable6 joined
