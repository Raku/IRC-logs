[00:07] *** reportable6 left
[00:10] <Xliff> MasterDuke: Seeing improvements over last week after the first project. More than made up the 30 seconds list.

[00:10] <Xliff> s/list/lost/

[00:10] <MasterDuke> nice

[00:10] <Xliff> Will post whole summary when done. Takes about 4 hours total.

[00:11] <gfldex> m: (^∞).grep(*.is-prime).is-lazy.say; (^∞).hyper.grep(*.is-prime).is-lazy.say;

[00:11] <camelia> rakudo-moar fb909efce: OUTPUT: «True␤False␤»

[00:11] <gfldex> Is this intentional?

[00:20] <Voldenet> you don't even need grep

[00:20] <Voldenet> m: (^∞).is-lazy.say; (^∞).hyper.is-lazy.say;

[00:20] <camelia> rakudo-moar fb909efce: OUTPUT: «True␤False␤»

[00:21] <gfldex>  method is-lazy(--> False) { } # can be found in ParallelSequence.pm6

[00:21] <gfldex> And I don't get why it has to be.

[00:35] <Voldenet> gfldex: related commit, when you look at the history it was added around hyperseq rework https://github.com/rakudo/rakudo/commit/836761129c379a8505f0596374463a1482406843

[00:40] *** Geth__ joined
[00:40] *** TempIRCLogger__ joined
[00:40] *** lizmat_ joined
[00:40] *** Geth left
[00:41] *** RakuIRCLogger left
[00:42] *** TempIRCLogger left
[00:42] *** lizmat left
[00:44] *** TempIRCLogger__ left
[00:44] *** TempIRCLogger joined
[01:09] *** reportable6 joined
[01:50] *** linkable6 left
[01:51] *** linkable6 joined
[02:50] *** dogbert11 joined
[02:54] *** dogbert17 left
[03:52] *** frost joined
[04:56] *** frost left
[05:56] *** linkable6 left
[05:56] *** evalable6 left
[05:57] *** linkable6 joined
[05:59] *** evalable6 joined
[06:07] *** reportable6 left
[06:08] *** nebuchadnezzar joined
[06:17] <Xliff> MasterDuke: This weeks compile times were 98.63% of last weeks

[06:18] <Xliff> It is worth noting that last week were 102.16% above the week prior to that.

[06:19] <Xliff> p6-GLib Projects Total Compile time: 13437,31s over 31 projects

[06:20] <Xliff> Parallel compile times cancelled again due to #4655

[07:55] <nine> Xliff: FWIW I consider all such bugs as urgent. Fixing them still depends on having time, being able to reproduce and having any idea at all what the hell is going wrong...

[07:56] <Xliff> nine: Fair enough. However there has been no indication of progress on the bug report. 

[07:57] <Xliff> I figure after another few weeks I'll have enough data to figure out where the bug might be introduced by my code, given its intermittent nature.

[07:57] <Xliff> Still it is nice to hear someone is still working on it.

[07:57] <Xliff> nine: I did make a mention in the report about the possibility CompUnit::Util

[07:58] <Xliff> CompUnit::Util's re-export() involed. Has anyone looked into that?

[07:59] <nine> Not me. I've been pretty busy with the whole unsigned native ints fixing business.

[08:07] <Xliff> Oh. Does this mean I will no longer get signed integers for unsigned values?

[08:08] <nine> lizmat_: nqp repo looks quite ok to me

[08:08] *** lizmat_ left
[08:08] *** lizmat joined
[08:11] <nine> Xliff: At some point. I've gotten it far enought that fixing such issues will finally be possible. It took some 8k lines of diff to teach the whole stack that ints and uints are different things. With that in place we will be able to look at individual places that need to distinguish.

[08:11] <lizmat> Files=1351, Tests=117094, 295 wallclock secs (35.53 usr 10.96 sys + 3971.34 cusr 340.15 csys = 4357.98 CPU)

[08:12] <nine> Basically I'm fixing a design mistake in a well established code base. That's quite a lot of work

[08:12] <Xliff> nine++ - Thanks!

[08:12] <lizmat> that's the lowest spectest time I've seen since April 2021

[08:13] <lizmat> I think MasterDuke's mimalloc work could be involved in that  :-)

[08:15] <Xliff> I just noticed that change, yesterday. I had to reinit the submodules to update rakudo.

[09:10] *** reportable6 joined
[09:36] *** kjp left
[09:59] *** kjp joined
[10:39] <lizmat> notable6: weekly

[10:39] <notable6> lizmat, 2 notes: 2022-01-12T18:28:12Z <El_Che>: https://www.youtube.com/watch?v=dQw4w9WgXcQ  ;  2022-01-12T18:30:04Z <lizmat>: https://rakuforprediction.wordpress.com/2021/12/31/introduction-to-data-wrangling-with-raku/

[10:39] <lizmat> notable6: weekly reset

[10:39] <notable6> lizmat, Moved existing notes to “weekly_2022-01-17T10:39:55Z”

[11:04] *** dogbert11 left
[11:44] *** MasterDuke left
[11:53] *** dogbert17 joined
[12:08] *** reportable6 left
[12:10] *** reportable6 joined
[13:01] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/01/17/2022-03-rakucon-how/

[13:02] <sena_kun> lizmat++

[13:10] *** linkable6 left
[13:10] *** evalable6 left
[13:12] *** linkable6 joined
[13:12] *** evalable6 joined
[13:22] *** MasterDuke joined
[13:33] *** [Coke] left
[13:42] *** [Coke] joined
[14:04] *** dogbert11 joined
[14:04] *** dogbert17 left
[14:37] *** qorg11 left
[14:40] *** qorg11 joined
[14:56] *** [Coke]_ joined
[14:57] *** [Coke] left
[14:57] *** kjp left
[14:58] *** kjp joined
[15:00] <releasable6> Next release in ≈4 days and ≈3 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:00] *** Kaiepi left
[16:00] <jdv> MasterDuke: did you look at MessagePack blin failure?

[16:00] <jdv> i think it bisected to your ternary thing and it was a segv or something like that

[16:03] <jdv> can someone look at the Trait::Traced and SAT::Solver::MiniSAT blin failures?

[16:06] <MasterDuke> jdv: yeah, my new code isn't actually to blame for the segv, it just uncovered some other bug. but i haven't figured out/fixed the real bug yet. and given https://github.com/rakudo/rakudo/issues/4719, there's a good chance we'll need to revert the ternary warning (at least) for the release

[16:07] <jdv> ah, ok

[16:10] <MasterDuke> jdv: that bisect for SAT::Solver::MiniSAT doesn't look right

[16:11] <jdv> i got snowed in upstate and i don't have access to most of my stuff up here:(  hopefully i can do a bit more tomorrow.

[16:11] <MasterDuke> oh fun. hopefully you can get in some skiing/snowboarding?

[16:13] <jdv> likely not this time.  still not feeling great from the last bout with covid...

[16:13] <Xliff> jdv: :(

[16:15] <jdv> mostly better though

[16:16] <jdv> i think the Trait::Traced might be the easiest...  it looks like maybe just some rejiggering.  there's info if you look back through the bisected commits stuff from jnthn.

[16:17] <jdv> *commit's

[17:14] *** [Coke] joined
[17:15] *** [Coke]_ left
[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[18:36] *** kjp left
[18:44] *** kjp joined
[20:12] *** Kaiepi joined
[21:10] <[Coke]> jdv: upstate sounds like you might be in a 6 hour drive from me. :)

[22:05] *** [Coke]_ joined
[22:07] *** [Coke] left
[22:30] *** Kaiepi left
[22:33] *** andinus left
[22:36] *** Kaiepi joined
[22:50] *** Kaiepi left
[22:51] *** Kaiepi joined
[22:59] <patrickb> fg

[23:00] * patrickb is off to bed

[23:00] <patrickb> o/

[23:28] *** [Coke]_ left
[23:31] *** [Coke] joined
