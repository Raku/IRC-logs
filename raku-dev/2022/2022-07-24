[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[01:09] *** sourceable6 left
[01:09] *** releasable6 left
[01:09] *** linkable6 left
[01:09] *** quotable6 left
[01:09] *** tellable6 left
[01:09] *** statisfiable6 left
[01:09] *** greppable6 left
[01:09] *** bloatable6 left
[01:09] *** coverable6 left
[01:09] *** evalable6 left
[01:09] *** nativecallable6 left
[01:09] *** reportable6 left
[01:09] *** committable6 left
[01:09] *** unicodable6 left
[01:09] *** bisectable6 left
[01:09] *** shareable6 left
[01:09] *** benchable6 left
[01:09] *** notable6 left
[01:09] *** sourceable6 joined
[01:10] *** bloatable6 joined
[01:10] *** nativecallable6 joined
[01:10] *** benchable6 joined
[01:10] *** linkable6 joined
[01:10] *** coverable6 joined
[01:10] *** greppable6 joined
[01:10] *** evalable6 joined
[01:10] *** tellable6 joined
[01:11] *** notable6 joined
[01:11] *** reportable6 joined
[01:11] *** shareable6 joined
[01:11] *** quotable6 joined
[01:11] *** unicodable6 joined
[01:12] *** releasable6 joined
[01:12] *** committable6 joined
[01:12] *** bisectable6 joined
[01:12] *** statisfiable6 joined
[02:12] *** notable6 left
[02:12] *** evalable6 left
[02:12] *** coverable6 left
[02:12] *** greppable6 left
[02:12] *** quotable6 left
[02:12] *** releasable6 left
[02:12] *** shareable6 left
[02:12] *** statisfiable6 left
[02:12] *** sourceable6 left
[02:12] *** benchable6 left
[02:12] *** bloatable6 left
[02:12] *** nativecallable6 left
[02:12] *** tellable6 left
[02:12] *** reportable6 left
[02:12] *** bisectable6 left
[02:12] *** committable6 left
[02:12] *** linkable6 left
[02:12] *** unicodable6 left
[02:12] *** coverable6 joined
[02:13] *** linkable6 joined
[02:13] *** releasable6 joined
[02:13] *** reportable6 joined
[02:13] *** notable6 joined
[02:13] *** tellable6 joined
[02:13] *** bisectable6 joined
[02:13] *** benchable6 joined
[02:14] *** committable6 joined
[02:14] *** unicodable6 joined
[02:14] *** bloatable6 joined
[02:14] *** statisfiable6 joined
[02:14] *** sourceable6 joined
[02:14] *** quotable6 joined
[02:14] *** greppable6 joined
[02:14] *** evalable6 joined
[02:14] *** shareable6 joined
[02:15] *** nativecallable6 joined
[03:29] *** quotable6 left
[03:29] *** sourceable6 left
[03:29] *** coverable6 left
[03:29] *** tellable6 left
[03:29] *** benchable6 left
[03:29] *** notable6 left
[03:29] *** bisectable6 left
[03:29] *** linkable6 left
[03:29] *** bloatable6 left
[03:29] *** statisfiable6 left
[03:29] *** greppable6 left
[03:29] *** shareable6 left
[03:29] *** evalable6 left
[03:29] *** committable6 left
[03:29] *** nativecallable6 left
[03:29] *** unicodable6 left
[03:29] *** releasable6 left
[03:29] *** reportable6 left
[03:29] *** reportable6 joined
[03:29] *** committable6 joined
[03:30] *** bloatable6 joined
[03:30] *** unicodable6 joined
[03:30] *** notable6 joined
[03:30] *** releasable6 joined
[03:30] *** sourceable6 joined
[03:30] *** bisectable6 joined
[03:30] *** quotable6 joined
[03:31] *** nativecallable6 joined
[03:31] *** statisfiable6 joined
[03:31] *** greppable6 joined
[03:31] *** benchable6 joined
[03:31] *** evalable6 joined
[03:31] *** tellable6 joined
[03:31] *** linkable6 joined
[03:31] *** shareable6 joined
[03:32] *** coverable6 joined
[04:32] *** coverable6 left
[04:32] *** evalable6 left
[04:32] *** notable6 left
[04:32] *** tellable6 left
[04:32] *** bisectable6 left
[04:32] *** greppable6 left
[04:32] *** linkable6 left
[04:32] *** bloatable6 left
[04:32] *** committable6 left
[04:32] *** statisfiable6 left
[04:32] *** sourceable6 left
[04:32] *** reportable6 left
[04:32] *** nativecallable6 left
[04:32] *** unicodable6 left
[04:32] *** benchable6 left
[04:32] *** shareable6 left
[04:32] *** releasable6 left
[04:32] *** quotable6 left
[04:32] *** notable6 joined
[04:33] *** statisfiable6 joined
[04:33] *** benchable6 joined
[04:33] *** unicodable6 joined
[04:33] *** nativecallable6 joined
[04:33] *** bisectable6 joined
[04:34] *** evalable6 joined
[04:34] *** reportable6 joined
[04:34] *** shareable6 joined
[04:34] *** linkable6 joined
[04:34] *** tellable6 joined
[04:34] *** greppable6 joined
[04:35] *** sourceable6 joined
[04:35] *** bloatable6 joined
[04:35] *** quotable6 joined
[04:35] *** committable6 joined
[04:35] *** releasable6 joined
[04:35] *** coverable6 joined
[06:06] *** reportable6 left
[06:07] *** reportable6 joined
[06:49] <Geth> ¦ nqp: Kaiepi++ created pull request #776: Make some enhancements to atomic integers

[06:49] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/776

[06:50] <Geth> ¦ rakudo: Kaiepi++ created pull request #5000: Make some enhancements to atomic integers

[06:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5000

[06:58] <japhb> Have been using idle time to work my way backwards on the Getopt::Long failure.  Back as far as e7acf4930 it won't install.  At 934f9895e, I get hangs trying to install an earlier module in my test list; I suspect fixing that was exactly was the e7acf4930 merge was *for*.

[06:58] *** linkable6 left
[06:59] *** linkable6 joined
[07:00] <japhb> Looks like 5a8aa66bc was the last commit before one that was later reverted; checking there next (despite it being a bit of a jump back)

[07:00] *** linkable6 left
[07:02] *** linkable6 joined
[07:16] *** djinni` left
[07:29] *** djinni` joined
[07:45] <Geth> ¦ JSON-Unmarshal: CIAvash++ created pull request #3: Fix is unmarshalled-by trait issue

[07:45] <Geth> ¦ JSON-Unmarshal: review: https://github.com/raku-community-modules/JSON-Unmarshal/pull/3

[07:55] <japhb> Well 5a8aa66bc got *much* further in building things, but it hung testing Cro::HTTP, so that's a fail for a new reason

[07:58] * japhb tries 6dc2f92c9 in between

[07:58] <japhb> SIGH

[07:59] *** linkable6 left
[08:01] *** linkable6 joined
[08:04] <japhb> It being after 1 AM, I think I'm going to sleep while that builds (or attempts to, at least).  See y'all in a few hours.  :-)

[08:52] *** sena_kun joined
[09:25] <Kaiepi> LAPTOP-7I9RCT0C% raku --ll-exception -e 'say Counter(IntStr.new: 0, "ayy") ~~ Cool'

[09:25] <Kaiepi> True

[09:25] <Kaiepi> nqp can manage a *little* more than Any

[09:25] <Kaiepi> takes a bit of convincing to do CALL-ME, though

[09:29] *** discord-raku-bot left
[09:30] *** discord-raku-bot joined
[09:34] *** ab5tract joined
[09:34] *** discord-raku-bot left
[09:34] *** discord-raku-bot joined
[10:15] <Kaiepi> oh, i can spare CALL-ME if i let hllization do its thing

[10:19] <Kaiepi> nvm, i need it

[10:52] <Geth> ¦ rakudo: 3d3966b0c4 | (Elizabeth Mattijsen)++ | src/core.c/Main.pm6

[10:52] <Geth> ¦ rakudo: Fix lone "-" in MAIN handling with :named-anywhere

[10:52] <Geth> ¦ rakudo: 

[10:52] <Geth> ¦ rakudo: This resulted in an execution error:

[10:52] <Geth> ¦ rakudo: 

[10:52] <Geth> ¦ rakudo:     my %*SUB-MAIN-OPTS = :named-anywhere; sub MAIN(|) { }; @*ARGS = "-"

[10:52] <Geth> ¦ rakudo: 

[10:52] <Geth> ¦ rakudo: Without :named-anywhere, the lone "-" was already considered a

[10:52] <Geth> ¦ rakudo: positional argument.

[10:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3d3966b0c4

[11:13] <Geth> ¦ JSON-Unmarshal/main: 1778fb8e0c | (Siavash Askari Nasr)++ (committed using GitHub Web editor) | lib/JSON/Unmarshal.rakumod

[11:13] <Geth> ¦ JSON-Unmarshal/main: Fix is unmarshalled-by trait issue (#3)

[11:13] <Geth> ¦ JSON-Unmarshal/main: 

[11:13] <Geth> ¦ JSON-Unmarshal/main: Fixes #2

[11:13] <Geth> ¦ JSON-Unmarshal/main: 

[11:13] <Geth> ¦ JSON-Unmarshal/main: It seems putting `use JSON::Name` after `unit module` causes the

[11:13] <Geth> ¦ JSON-Unmarshal/main: issue.

[11:13] <Geth> ¦ JSON-Unmarshal/main: review: https://github.com/raku-community-modules/JSON-Unmarshal/commit/1778fb8e0c

[11:23] *** evalable6 left
[11:26] *** evalable6 joined
[11:42] *** discord-raku-bot left
[11:43] *** discord-raku-bot joined
[11:43] <lizmat> m: sub MAIN(|c) { dd c }; @*ARGS = "--="   # this feels like an odd thing to allow ?

[11:43] <camelia> rakudo-moar 3d3966b0c: OUTPUT: «\("" => IntStr.new(0, ""))␤»

[11:43] <lizmat> m: sub MAIN(|c) { dd c }; @*ARGS = "--=22"   # this feels like an odd thing to allow ?

[11:43] <camelia> rakudo-moar 3d3966b0c: OUTPUT: «\("" => IntStr.new(22, "22"))␤»

[11:48] *** discord-raku-bot left
[11:48] *** discord-raku-bot joined
[11:58] *** discord-raku-bot left
[11:58] *** discord-raku-bot joined
[12:07] *** reportable6 left
[12:08] *** reportable6 joined
[13:12] <Geth> ¦ rakudo: 31779f4701 | (Elizabeth Mattijsen)++ | src/core.c/DateTime.pm6

[13:12] <Geth> ¦ rakudo: Add ACCEPTS method for DateTime

[13:12] <Geth> ¦ rakudo: 

[13:12] <Geth> ¦ rakudo: Fixes #5001

[13:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/31779f4701

[13:13] *** linkable6 left
[13:15] *** linkable6 joined
[13:34] *** ab5tract left
[14:11] *** Xliff joined
[14:11] <Xliff> P6-GLib suite timing statistics for Raku 2022.06.60.ga.7.e.9.b.1938

[14:11] <Xliff> Total number of projects: 33 (483208 loc)

[14:11] <Xliff> Total non-parallel compile times: 8905.310 (269.858 avg)

[14:11] <Xliff> Total parallel compile times: 1505.717 (45.628 avg) 5.914x speedup

[14:12] <Xliff> Still seeing an odd recompilation issue with one of my projects which is sucking an extra 100 seconds away from record timings. 

[15:50] *** vrurg_ joined
[15:50] *** vrurg left
[16:05] *** sena_kun left
[16:07] *** ab5tract joined
[16:09] *** sena_kun joined
[17:20] *** sena_kun left
[17:27] *** Kaiepi left
[17:34] *** sena_kun joined
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:26] <japhb> FINALLY: "Welcome to Rakudo™ v2022.06-33-g6dc2f92c9."

[18:30] * japhb inches forward to try 4fedb6f05

[18:58] *** Kaiepi joined
[18:59] *** dogbert11 joined
[18:59] *** dogbert17 left
[19:00] <releasable6> Next release in ≈4 days and ≈23 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[19:01] *** [Coke]_ joined
[19:02] *** [Coke] left
[19:21] <japhb> Hmmm, that one also hung on Cro::HTTP.  I wonder if that's just a flaky test, or whether this range of Rakudo commits has a hang bug.

[19:21] * japhb retries on same version

[19:29] *** [Coke]_ left
[19:37] *** [Coke] joined
[20:28] *** ab5tract left
[20:28] <japhb> Yep, retry worked

[20:30] <japhb> OK, time to split Vadim's branch I think.  Trying b4a26fbe4.

[20:53] <japhb> Boom, Getopt::Long fail.  Closing in!

[21:08] <japhb> Same failure at 4ab617201.  Time to try the last one: 7774c331c

[21:17] *** sena_kun left
[21:23] <japhb> Yup, that one fails too.

[21:24] <japhb> vrurg_: Looks like the Getopt::Long failures are caused by "7774c331c - Implement coercion via new-disp" (and not fixed by any later patches)

[21:25] <japhb> Don't know if that's a bug in the coercion changes or a fragility in Getopt::Long, but at least now you have a place to look ....

[21:35] <vrurg_> japhb: interesting as I use Getopt::Long pretty heavily in my work project. Any details?

[21:35] *** vrurg_ is now known as vrurg

[21:40] <japhb> vrurg: https://gist.github.com/japhb/fc7aea8417fd395a88c3b18b5806cfe5

[21:44] <vrurg> Interesting, does it mean I didn't reinstall it since the new-disp implementation? :)

[21:45] <japhb> *chuckle*

[21:49] <vrurg> I don't get the idea behind the test. What happens there? I don't use that feature of Getopt::Long and can't grok what is being tested.

[21:50] * japhb shrugs -- I just threw spare compute and disk space at narrowing down the failure introduction.  I haven't actually looked at Getopt::Long itself.  :-)

[21:51] <vrurg> But it looks like it's a bug in the test. Seemingly, the option must produce a Foo, but parameter's type is Signature(Str).

[21:56] <vrurg> Or Foo is cached by new-disp somehow because guards told it so...

[22:20] <jdv> i think  there's a bunch related to coercion

[22:21] <jdv> trying to curate the blin report atm

[22:22] <vrurg> If I'm right (and I seem to be) the problem is likely to affect many cases. Will work on it today.

[22:27] <jdv> looks like about 4 failures

[22:32] <jdv> vrurg: https://github.com/rakudo/rakudo/issues/5002

[22:33] <jdv> lizmat: the 2 at the top of that blin report look like they are related to changes of yours

[22:33] <jdv> did we ever address the issue that broke the ORM last release?

[22:35] *** evalable6 left
[22:35] *** linkable6 left
[22:36] *** linkable6 joined
[22:36] *** evalable6 joined
[23:13] *** [Coke] left
[23:15] *** [Coke] joined
[23:26] *** melezhik joined
[23:34] *** melezhik left
