[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[03:17] *** vrurg_ joined
[03:20] *** vrurg left
[06:07] *** reportable6 left
[06:10] *** reportable6 joined
[07:10] *** bloatable6 left
[07:10] *** evalable6 left
[07:10] *** committable6 left
[07:10] *** quotable6 left
[07:10] *** benchable6 left
[07:10] *** sourceable6 left
[07:10] *** releasable6 left
[07:10] *** greppable6 left
[07:10] *** shareable6 left
[07:10] *** statisfiable6 left
[07:10] *** reportable6 left
[07:10] *** nativecallable6 left
[07:10] *** bisectable6 left
[07:10] *** linkable6 left
[07:10] *** coverable6 left
[07:10] *** notable6 left
[07:10] *** tellable6 left
[07:10] *** unicodable6 left
[07:11] *** greppable6 joined
[07:11] *** evalable6 joined
[07:11] *** committable6 joined
[07:11] *** bisectable6 joined
[07:12] *** nativecallable6 joined
[07:12] *** linkable6 joined
[07:12] *** shareable6 joined
[07:12] *** notable6 joined
[07:12] *** reportable6 joined
[07:12] *** sourceable6 joined
[07:12] *** unicodable6 joined
[07:12] *** coverable6 joined
[07:13] *** quotable6 joined
[07:13] *** statisfiable6 joined
[07:13] *** benchable6 joined
[07:13] *** tellable6 joined
[07:14] *** releasable6 joined
[07:14] *** bloatable6 joined
[08:02] <lizmat> Files=1353, Tests=117192, 288 wallclock secs (35.16 usr  9.74 sys + 4021.91 cusr 334.12 csys = 4400.93 CPU)

[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:49] *** Xliff joined
[13:06] *** [Coke] left
[13:18] *** [Coke] joined
[13:36] *** discord-raku-bot left
[13:36] *** discord-raku-bot joined
[15:21] *** coverable6 left
[15:21] *** shareable6 left
[15:21] *** bisectable6 left
[15:21] *** benchable6 left
[15:21] *** tellable6 left
[15:21] *** linkable6 left
[15:21] *** notable6 left
[15:21] *** unicodable6 left
[15:21] *** committable6 left
[15:21] *** quotable6 left
[15:21] *** reportable6 left
[15:21] *** nativecallable6 left
[15:21] *** sourceable6 left
[15:21] *** greppable6 left
[15:21] *** greppable6 joined
[15:21] *** reportable6 joined
[15:22] *** quotable6 joined
[15:22] *** coverable6 joined
[15:22] *** bisectable6 joined
[15:22] *** shareable6 joined
[15:23] *** linkable6 joined
[15:23] *** benchable6 joined
[15:24] *** notable6 joined
[15:24] *** committable6 joined
[15:24] *** unicodable6 joined
[15:24] *** nativecallable6 joined
[15:24] *** sourceable6 joined
[15:24] *** tellable6 joined
[16:40] *** linkable6 left
[16:40] *** linkable6 joined
[17:16] <Geth> ¦ rakudo/lizmat-revert-CATCH-removal: b290d8a908 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/Loader.pm6

[17:16] <Geth> ¦ rakudo/lizmat-revert-CATCH-removal: Reinstate CATCH versus LEAVE

[17:16] <Geth> ¦ rakudo/lizmat-revert-CATCH-removal: 

[17:16] <Geth> ¦ rakudo/lizmat-revert-CATCH-removal: Alhough the code with LEAVE is much simpler and clearer, it *does*

[17:16] <Geth> ¦ rakudo/lizmat-revert-CATCH-removal: impose the overhead of having to execute a phaser on the most common

[17:16] <Geth> ¦ rakudo/lizmat-revert-CATCH-removal: execution path.  And since both a CATCH block or a LEAVE phaser will

[17:16] <Geth> ¦ rakudo/lizmat-revert-CATCH-removal: inhibit inlining of a block, from a performance point of view a

[17:16] <Geth> ¦ rakudo/lizmat-revert-CATCH-removal: CATCH is better, as that will only be executed when something actually

[17:16] <Geth> ¦ rakudo/lizmat-revert-CATCH-removal: goes wrong (which hopefully is not the most common execution path).

[17:16] <Geth> ¦ rakudo/lizmat-revert-CATCH-removal: review: https://github.com/rakudo/rakudo/commit/b290d8a908

[17:16] <Geth> ¦ rakudo: lizmat++ created pull request #4903: Reinstate CATCH versus LEAVE

[17:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4903

[18:08] *** reportable6 left
[18:11] *** reportable6 joined
[18:49] <bartolin> lizmat: I'll try with 'has Str $!stringified' in a few minutes (re https://github.com/rakudo/rakudo/commit/ef68d4ad4c) ... (the JVM backend is sloooow)

[18:49] <tellable6> 2020-05-15T21:53:00Z #moarvm <patrickz> .tell bartolin The previous failure is solved. Now I have a new JVM error: https://github.com/rakudo/rakudo/issues/3695 Help appreciated!

[18:49] <lizmat> bartolin 

[18:50] <lizmat> bartolin: maybe the JVM just cannot handle uninitialized private native string attributes ?

[18:50] *** TempIRCLogger joined
[18:52] <lizmat> bartolin: golf:

[18:52] <lizmat> class A { has str $!a; method foo() { $!a ?? $!a !! "foo" } }; dd A.new.foo

[18:52] <evalable6> lizmat, rakudo-moar 4a7da9a16: OUTPUT: «"foo"␤»

[18:52] <tellable6> 2019-08-19T16:18:00Z #moarvm <AlexDaniel> .tell evalable6 test test

[18:54] <lizmat> bartolin: if that is the issue, then maybe a JVM only init on $!stringified = ""; in TWEAK could be a solution

[18:54] *** TempIRCLogger left
[18:54] *** TempIRCLogger joined
[18:55] <bartolin> hmm. That works fine ("foo"). I suspect that it only blows up when precompilation is involved.

[18:56] <lizmat> and an init in TWEAK ?

[19:00] <bartolin> I'll report back a bit later.

[19:01] <lizmat> okido

[19:21] <bartolin> neither 'has Str $!stringified' nor initializing in TWEAK helped :(

[19:21] <lizmat> weird

[19:24] <lizmat> bartolin: and with this: https://gist.github.com/lizmat/4c95beb2c2e6834ce92e2279980f1642

[19:24] <lizmat> ?

[19:27] <bartolin> That's basically https://github.com/rakudo/rakudo/commit/ef68d4ad4c#commitcomment-71979377, but with keeping the (unused) attribute, right? I'll try ...

[19:27] <lizmat> well, yeah...

[19:35] <lizmat> afk&

[19:40] <bartolin> interestingly keeping the unused attribute still leads to the error.

[19:42] <bartolin> ooc I tried another thing and made the attribute public (and kept everything else like it is on master). That made the error go away, too.

[19:46] *** sena_kun left
[19:48] *** sena_kun joined
[20:48] *** evalable6 left
[20:48] *** linkable6 left
[20:48] *** linkable6 joined
[20:49] *** evalable6 joined
[22:40] <Geth> ¦ rakudo: c9b0da74b9 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/DependencySpecification.pm6

[22:40] <Geth> ¦ rakudo: Fix JVM build

[22:40] <Geth> ¦ rakudo: 

[22:40] <Geth> ¦ rakudo: Investigated by bartolin++

[22:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c9b0da74b9

