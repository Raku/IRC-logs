[00:06] *** reportable6 left
[00:08] *** reportable6 joined
[00:15] *** pamplemousse joined
[00:20] *** pamplemousse left
[00:23] *** pamplemousse joined
[00:26] *** pamplemousse left
[00:30] *** pamplemousse joined
[00:30] <Geth> ¦ rakudo: 7ddb90ce98 | (Vadim Belman)++ | src/Perl6/Grammar.nqp
[00:30] <Geth> ¦ rakudo: Don't blindly make a Version object for vN
[00:30] <Geth> ¦ rakudo: 
[00:30] <Geth> ¦ rakudo: First look up whether there's a lexical symbol for it, and use that if
[00:30] <Geth> ¦ rakudo: we found it.
[00:30] <Geth> ¦ rakudo: 
[00:30] <Geth> ¦ rakudo: Fixes #3919
[00:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7ddb90ce98
[00:30] <Geth> ¦ rakudo: 6c948e0068 | (Vadim Belman)++ (committed using GitHub Web editor) | src/Perl6/Grammar.nqp
[00:30] <Geth> ¦ rakudo: Merge pull request #5020 from rakudo/lizmat-v-check
[00:30] <Geth> ¦ rakudo: 
[00:30] <Geth> ¦ rakudo: Don't blindly make a Version object for vN
[00:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6c948e0068
[00:31] *** linkable6 left
[00:32] *** linkable6 joined
[00:39] *** pamplemousse left
[00:41] *** pamplemousse joined
[00:43] *** pamplemousse left
[02:37] *** melezhik joined
[02:44] <melezhik> few r3 test failed for rakudo 2022.06 - https://gistcdn.githack.com/melezhik/b53803dc06690973ce5795f0a1abd6df/raw/a33ff6b8a314ef05b5e713354ef3889b2b133b35/report.html changed report format , hopefully more readable and simple now , HTH
[02:49] *** RakuIRCLogger left
[02:50] *** pamplemousse joined
[02:52] *** pamplemousse left
[02:53] *** melezhik left
[03:55] *** greppable6 left
[03:55] *** sourceable6 left
[03:55] *** releasable6 left
[03:55] *** nativecallable6 left
[03:55] *** bisectable6 left
[03:55] *** statisfiable6 left
[03:55] *** tellable6 left
[03:55] *** reportable6 left
[03:55] *** linkable6 left
[03:55] *** committable6 left
[03:55] *** quotable6 left
[03:55] *** squashable6 left
[03:55] *** benchable6 left
[03:55] *** evalable6 left
[03:55] *** coverable6 left
[03:55] *** notable6 left
[03:55] *** shareable6 left
[03:55] *** unicodable6 left
[03:55] *** bloatable6 left
[03:55] *** coverable6 joined
[03:56] *** bloatable6 joined
[03:56] *** bisectable6 joined
[03:56] *** quotable6 joined
[03:56] *** tellable6 joined
[03:56] *** sourceable6 joined
[03:56] *** reportable6 joined
[03:56] *** linkable6 joined
[03:56] *** releasable6 joined
[03:56] *** greppable6 joined
[03:56] *** unicodable6 joined
[03:57] *** notable6 joined
[03:57] *** statisfiable6 joined
[03:57] *** evalable6 joined
[03:57] *** benchable6 joined
[03:58] *** nativecallable6 joined
[03:58] *** squashable6 joined
[03:58] *** shareable6 joined
[03:58] *** committable6 joined
[04:58] *** notable6 left
[04:58] *** committable6 left
[04:58] *** evalable6 left
[04:58] *** quotable6 left
[04:58] *** tellable6 left
[04:58] *** nativecallable6 left
[04:58] *** coverable6 left
[04:58] *** unicodable6 left
[04:58] *** statisfiable6 left
[04:58] *** linkable6 left
[04:58] *** reportable6 left
[04:58] *** releasable6 left
[04:58] *** sourceable6 left
[04:58] *** squashable6 left
[04:58] *** greppable6 left
[04:58] *** bisectable6 left
[04:58] *** benchable6 left
[04:58] *** bloatable6 left
[04:58] *** shareable6 left
[04:58] *** sourceable6 joined
[04:58] *** linkable6 joined
[04:59] *** nativecallable6 joined
[04:59] *** quotable6 joined
[04:59] *** notable6 joined
[04:59] *** greppable6 joined
[04:59] *** committable6 joined
[04:59] *** shareable6 joined
[04:59] *** evalable6 joined
[05:00] *** releasable6 joined
[05:00] *** unicodable6 joined
[05:00] *** bisectable6 joined
[05:00] *** squashable6 joined
[05:01] *** bloatable6 joined
[05:01] *** benchable6 joined
[05:01] *** coverable6 joined
[05:01] *** reportable6 joined
[05:01] *** tellable6 joined
[05:01] *** statisfiable6 joined
[06:05] *** reportable6 left
[06:06] *** reportable6 joined
[06:42] *** nebuchadnezzar joined
[08:13] *** sena_kun joined
[09:13] *** squashable6 left
[09:13] *** bloatable6 left
[09:13] *** evalable6 left
[09:13] *** bisectable6 left
[09:13] *** quotable6 left
[09:13] *** coverable6 left
[09:13] *** sourceable6 left
[09:13] *** statisfiable6 left
[09:13] *** committable6 left
[09:13] *** notable6 left
[09:13] *** tellable6 left
[09:13] *** nativecallable6 left
[09:13] *** linkable6 left
[09:13] *** unicodable6 left
[09:13] *** reportable6 left
[09:13] *** greppable6 left
[09:13] *** shareable6 left
[09:13] *** releasable6 left
[09:13] *** benchable6 left
[09:14] *** reportable6 joined
[09:14] *** notable6 joined
[09:14] *** bloatable6 joined
[09:14] *** nativecallable6 joined
[09:14] *** benchable6 joined
[09:14] *** quotable6 joined
[09:15] *** shareable6 joined
[09:15] *** tellable6 joined
[09:15] *** greppable6 joined
[09:15] *** linkable6 joined
[09:15] *** coverable6 joined
[09:15] *** evalable6 joined
[09:15] *** sourceable6 joined
[09:16] *** committable6 joined
[09:16] *** squashable6 joined
[09:16] *** unicodable6 joined
[09:16] *** statisfiable6 joined
[09:16] *** releasable6 joined
[09:16] *** bisectable6 joined
[09:39] <lizmat> tbrowder: on /foo/bar.tar.gz, stem would be "bar" and suffix would be "tar.gz" ?
[09:58] <Geth> ¦ rakudo/lizmat-stem-suffix: 567dc02e3a | (Elizabeth Mattijsen)++ | 2 files
[09:58] <Geth> ¦ rakudo/lizmat-stem-suffix: Add .stem and .suffix methods to IO::Patyh for 6.e
[09:58] <Geth> ¦ rakudo/lizmat-stem-suffix: 
[09:58] <Geth> ¦ rakudo/lizmat-stem-suffix: - stem: anything in basename before first ".", basename if no "."
[09:58] <Geth> ¦ rakudo/lizmat-stem-suffix: - suffix: anything in basename after first ".", "" if no "."
[09:58] <Geth> ¦ rakudo/lizmat-stem-suffix: review: https://github.com/rakudo/rakudo/commit/567dc02e3a
[09:59] <Geth> ¦ rakudo: lizmat++ created pull request #5031: Add .stem and .suffix methods to IO::Patyh for 6.e
[09:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5031
[09:59] <lizmat> tbrowder ^^
[10:23] <tbrowder> lizmat: good start! um, say we have a basename with two dots: foo.bar.baz; at the moment we would have "foo", "bar.baz"; i expected "foo.bar", "baz". that's the order .extension works (tail to head)
[10:24] <tbrowder> rindex
[10:25] <tbrowder> that's if i read yr pr correctly
[10:26] <lizmat> well, I guess that's *exactly* the reason why this is not in core  :-)
[10:26] <lizmat> the notion of "extension" is so vague
[10:29] <tbrowder> no argument except it is so natural in my experience. i do think windows knows extension very well. what do they call the remainder?
[10:30] <tbrowder> i think when i first saw basename in raku it was without the extension.
[10:30] <lizmat> afaik basename has always been with the extension(s0
[10:30] <lizmat> maybe we just need a method to do this with the number of parts as an argument:
[10:31] <lizmat> m: dd .basename.chomp("." ~ .extension(:2parts)) with "foo.tar.gz".IO
[10:31] <camelia> rakudo-moar 6c948e006: OUTPUT: «"foo"␤»
[10:31] <tbrowder> yes, in raku for sure.
[10:32] <tbrowder> yes, that's what i would expect
[10:32] <lizmat> BTW, I've just realized that in my App:Rak presentation I've conflated App::Rak's extended help features with what CLI::Help offers by default
[10:32] <lizmat> I'll issue a new release of CLI::Help later today to correct
[10:34] <tbrowder> and i just realized, after reading app::rak, how useful it is--so much pain in shell find, and i look fwd to rak, installing now...
[10:35] <lizmat> the rak module is just plumbing... App::Rak is the CLI
[10:37] <lizmat> but glad you're enthusiastic  :-)
[10:38] <tbrowder> yes, looks so good.  btw, your cli presento should be in the docs
[10:39] <tbrowder> excellent best practices like requiring exact module specs, i think that also speeds up installation
[10:50] <tbrowder> btw, according to my search for windows file extensions, the part *before* the extension is called " file name"
[10:51] <tbrowder> that's one clue to my thought process re file parts
[10:52] <lizmat> I don't think that meaning is accepted in the Unix / Linux world  :-)
[10:54] <Geth> ¦ rakudo/lizmat-stem-suffix: 1e63cf1993 | (Elizabeth Mattijsen)++ | src/core.e/IO/Path.pm6
[10:54] <Geth> ¦ rakudo/lizmat-stem-suffix: Remove suffix, adapt stem
[10:54] <Geth> ¦ rakudo/lizmat-stem-suffix: 
[10:54] <Geth> ¦ rakudo/lizmat-stem-suffix: Suffix we basically already have, with the "extension" method.
[10:54] <Geth> ¦ rakudo/lizmat-stem-suffix: 
[10:54] <Geth> ¦ rakudo/lizmat-stem-suffix: Adapted "stem" to take the number of extension levels to remove.
[10:54] <Geth> ¦ rakudo/lizmat-stem-suffix: By default all, * and Inf accepted as arguments.
[10:55] <Geth> ¦ rakudo/lizmat-stem-suffix: 
[10:55] <Geth> ¦ rakudo/lizmat-stem-suffix:     say "foo/bar.tar.gz".IO.stem;    # bar
[10:55] <Geth> ¦ rakudo/lizmat-stem-suffix:     say "foo/bar.tar.gz".IO.stem(1);  # bar.tar
[10:55] <Geth> ¦ rakudo/lizmat-stem-suffix: review: https://github.com/rakudo/rakudo/commit/1e63cf1993
[10:55] <lizmat> tbrowder ^^
[10:55] <tbrowder> cool
[10:58] <tbrowder> btw, i tried to use * on IO::Path.parents and couldn't make it work. should it? it would be nice
[10:58] <tbrowder> *parent
[10:59] <tbrowder> same with .parts
[11:00] *** evalable6 left
[11:00] *** linkable6 left
[11:01] <tbrowder> anyhoo one of more of those other path methods
[11:01] *** evalable6 joined
[11:03] *** linkable6 joined
[11:05] <lizmat> hmmm.... I need to rethink porting stuff from App::Rak to CLI::Help a bit more, because of META::constants
[11:07] <lizmat> or maybe not  :-)
[11:17] <tbrowder> ref basename parts: name.extension
[11:24] <lizmat> I'm going to postpone CLI::Help until I get App::Rak refurbished using the new rak plumbing
[11:58] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: cf03497b53 | (Elizabeth Mattijsen)++ | src/core.c/Main.pm6
[11:58] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: Make numeric suffix check less CPU intensive
[11:58] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: review: https://github.com/rakudo/rakudo/commit/cf03497b53
[12:08] *** reportable6 left
[12:08] *** reportable6 joined
[12:20] <tbrowder> the Make manual has several path functions whose terminology may be better. but it does use suffix instead of extension.
[12:27] <tbrowder> how about: basename = (base + extension) OR (name + extension?
[12:27] <lizmat> we're talking documentation now, right ?
[12:27] <lizmat> if so, perhaps better on the #raku-doc channel ?
[12:48] <tbrowder> no, just revisiting yr stem vs suff mod
[12:50] <tbrowder> looking for “prior art” for basename parts
[12:51] <tbrowder> trying to make you happier about terms
[13:08] *** evalable6 left
[13:08] *** linkable6 left
[13:08] *** linkable6 joined
[13:09] *** evalable6 joined
[14:22] *** committable6 left
[14:22] *** linkable6 left
[14:22] *** bisectable6 left
[14:22] *** benchable6 left
[14:22] *** squashable6 left
[14:22] *** quotable6 left
[14:22] *** shareable6 left
[14:22] *** statisfiable6 left
[14:22] *** nativecallable6 left
[14:22] *** unicodable6 left
[14:22] *** evalable6 left
[14:22] *** coverable6 left
[14:22] *** greppable6 left
[14:22] *** reportable6 left
[14:22] *** bloatable6 left
[14:22] *** sourceable6 left
[14:22] *** tellable6 left
[14:22] *** notable6 left
[14:22] *** releasable6 left
[14:22] *** statisfiable6 joined
[14:22] *** sourceable6 joined
[14:23] *** coverable6 joined
[14:23] *** tellable6 joined
[14:23] *** committable6 joined
[14:23] *** unicodable6 joined
[14:23] *** shareable6 joined
[14:23] *** quotable6 joined
[14:23] *** reportable6 joined
[14:23] *** linkable6 joined
[14:23] *** benchable6 joined
[14:23] *** releasable6 joined
[14:23] *** squashable6 joined
[14:24] *** nativecallable6 joined
[14:24] *** evalable6 joined
[14:24] *** bloatable6 joined
[14:24] *** notable6 joined
[14:25] *** greppable6 joined
[14:25] *** bisectable6 joined
[14:47] *** lucs_ is now known as lucs
[16:15] *** linkable6 left
[16:15] *** evalable6 left
[16:16] *** evalable6 joined
[16:18] *** linkable6 joined
[17:03] *** vrurg_ joined
[17:06] *** vrurg left
[17:47] *** ilogger2 joined
[18:09] *** reportable6 joined
[18:10] *** sena_kun joined
[18:22] *** melezhik joined
[18:23] <melezhik> looks like all issues are fixed after the latest commit, besides https://github.com/rakudo/rakudo/issues/4949  - https://gistcdn.githack.com/melezhik/0458c30c29282fe383dfbd5c08bb94f5/raw/3f117126916c43e9f889abbada55b7e37880d7de/report.html
[18:23] <melezhik> Method 'need' must be implemented by CompUnit::Repository because it is required by roles: CompUnit::Repository.
[18:33] *** melezhik left
[19:31] *** sena_kun left
[19:33] *** sena_kun joined
[20:54] *** samcv joined
[21:27] *** melezhik joined
[21:30] *** melezhik left
[21:48] *** sena_kun left
[21:59] *** pamplemousse joined
[22:01] *** pamplemousse left
[22:02] *** pamplemousse joined
[22:38] *** samcv left
[22:38] *** samcv joined
[23:23] *** Xliff joined
