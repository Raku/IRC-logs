[00:07] *** reportable6 left
[00:08] *** reportable6 joined
[00:49] <SmokeMachine> vrurg_: no, I’m surprised with the id of a block changing because of a assuming

[00:50] <vrurg_> SmokeMachine: then I have bad news for you. assuming is unreliable in many ways. It re-assembles the code by EVALing newly generated wrapper.

[00:50] <vrurg_> Hence the new id.

[00:50] *** vrurg_ is now known as vrurg

[00:50] <vrurg> You get a new routine in place of the original one.

[00:52] <SmokeMachine> But shouldn’t it only “mess” with the returned routine? And let the original one alone?

[00:53] <SmokeMachine> Why would assuming change anything on the original routine?

[00:54] <SmokeMachine> m: my &bla := -> $a, $b, $c {}; say bag ^50 .map: { my $id = &bla.id; &bla.clone.assuming: 1; $id} # let me try cloning it…

[00:54] <camelia> rakudo-moar 7e300e615: OUTPUT: «Bag(6373731752024(2) 6373797087424(47) 6373874660704)␤»

[00:58] <vrurg> SmokeMachine: I can't at the moment tell you what exactly happens inside assuming. And neither have time to look into it. Besides, it will be changed with something more sensible when RakuAST comes.

[00:58] <SmokeMachine> I’m not testing the id of the returned Code, but the original’s one

[00:58] <vrurg> Until then I wouldn't rely on it much. It's a huge performance killer too.

[00:59] <vrurg> The ID is, actually, nothing but address of the actual bytecode. Guess, same warning as to .WHERE applies: you can't rely on it.

[00:59] <SmokeMachine> vrurg: yes… I saw that taking very long to run for a very small number of times on my tests…

[01:00] <SmokeMachine> I get the same behaviour with .WHERE…

[01:01] <vrurg> Objects are moving in memory. Perhaps .WHICH is what you better use?

[01:01] <vrurg> It is using objectid which doesn't depend on the actual allocation.

[01:02] <vrurg> Anyway, have to do my job now.

[01:02] <SmokeMachine> I think that’s very odd… it has an id, then I call assuming once, it changes the id… then I call it again, it maintains the id, if I call it again, it changes again and maintains that no meter how many times I call it again…

[01:02] <SmokeMachine> Thanks!

[01:03] <SmokeMachine> I think I’ll wait for RakuAST for that too…

[01:03] <SmokeMachine> Good night

[01:14] *** frost joined
[02:18] *** committable6 left
[02:18] *** evalable6 left
[02:18] *** bisectable6 left
[02:18] *** linkable6 left
[02:18] *** coverable6 left
[02:18] *** quotable6 left
[02:18] *** statisfiable6 left
[02:18] *** tellable6 left
[02:18] *** sourceable6 left
[02:18] *** notable6 left
[02:18] *** benchable6 left
[02:18] *** bloatable6 left
[02:18] *** greppable6 left
[02:18] *** reportable6 left
[02:18] *** shareable6 left
[02:18] *** unicodable6 left
[02:18] *** releasable6 left
[02:18] *** nativecallable6 left
[02:19] *** bisectable6 joined
[02:19] *** unicodable6 joined
[02:19] *** greppable6 joined
[02:19] *** statisfiable6 joined
[02:19] *** coverable6 joined
[02:19] *** quotable6 joined
[02:19] *** nativecallable6 joined
[02:19] *** reportable6 joined
[02:20] *** linkable6 joined
[02:20] *** sourceable6 joined
[02:20] *** committable6 joined
[02:20] *** bloatable6 joined
[02:20] *** evalable6 joined
[02:21] *** shareable6 joined
[02:21] *** benchable6 joined
[02:21] *** tellable6 joined
[02:22] *** releasable6 joined
[02:22] *** notable6 joined
[04:24] *** bloatable6 left
[04:24] *** coverable6 left
[04:24] *** reportable6 left
[04:24] *** evalable6 left
[04:24] *** greppable6 left
[04:24] *** nativecallable6 left
[04:24] *** releasable6 left
[04:24] *** benchable6 left
[04:24] *** sourceable6 left
[04:24] *** bisectable6 left
[04:24] *** shareable6 left
[04:24] *** committable6 left
[04:24] *** quotable6 left
[04:24] *** statisfiable6 left
[04:24] *** unicodable6 left
[04:24] *** notable6 left
[04:24] *** tellable6 left
[04:24] *** linkable6 left
[04:24] *** shareable6 joined
[04:25] *** committable6 joined
[04:25] *** greppable6 joined
[04:25] *** bloatable6 joined
[04:25] *** unicodable6 joined
[04:25] *** quotable6 joined
[04:25] *** tellable6 joined
[04:26] *** bisectable6 joined
[04:26] *** coverable6 joined
[04:26] *** benchable6 joined
[04:26] *** nativecallable6 joined
[04:26] *** sourceable6 joined
[04:27] *** evalable6 joined
[04:27] *** notable6 joined
[04:27] *** releasable6 joined
[04:27] *** linkable6 joined
[04:27] *** reportable6 joined
[04:27] *** statisfiable6 joined
[05:14] *** Kaiepi left
[06:08] *** reportable6 left
[06:10] *** reportable6 joined
[06:14] *** reportable6 left
[06:14] *** statisfiable6 left
[06:14] *** linkable6 left
[06:14] *** notable6 left
[06:14] *** sourceable6 left
[06:14] *** nativecallable6 left
[06:14] *** benchable6 left
[06:14] *** coverable6 left
[06:14] *** bisectable6 left
[06:14] *** tellable6 left
[06:14] *** quotable6 left
[06:14] *** greppable6 left
[06:14] *** committable6 left
[06:14] *** shareable6 left
[06:14] *** ilogger2 left
[06:17] *** reportable6 joined
[06:17] *** statisfiable6 joined
[06:17] *** linkable6 joined
[06:17] *** notable6 joined
[06:17] *** sourceable6 joined
[06:17] *** nativecallable6 joined
[06:17] *** benchable6 joined
[06:17] *** coverable6 joined
[06:17] *** bisectable6 joined
[06:17] *** quotable6 joined
[06:17] *** committable6 joined
[06:17] *** ilogger2 joined
[07:12] *** shareable6 joined
[07:12] *** greppable6 joined
[07:16] *** tellable6 joined
[07:40] <nine> Why wait? Speed it up by contributing!

[08:10] <SmokeMachine> nine: I'm more worried by the id changing than by the speed...

[08:13] <nine> I meant speed up RakuAST's arrival

[08:13] *** sena_kun joined
[08:14] <SmokeMachine> nine: I'd love to have enough knowledge and time for helping on that...

[08:16] <SmokeMachine> (and I really need to get used to RakuAST... Red will really need that)

[08:17] <nine> It actually doesn't require that much knowledge. Sure, there are hard bits like BEGIN time execution, but I have already pretty much taken care of that. There's also lots of low hanging fruit still left.

[10:03] *** sourceable6 left
[10:03] *** releasable6 left
[10:03] *** tellable6 left
[10:03] *** statisfiable6 left
[10:03] *** benchable6 left
[10:03] *** unicodable6 left
[10:03] *** shareable6 left
[10:03] *** notable6 left
[10:03] *** nativecallable6 left
[10:03] *** reportable6 left
[10:03] *** committable6 left
[10:03] *** quotable6 left
[10:03] *** coverable6 left
[10:03] *** linkable6 left
[10:03] *** evalable6 left
[10:03] *** bloatable6 left
[10:03] *** greppable6 left
[10:03] *** bisectable6 left
[10:03] *** committable6 joined
[10:03] *** bisectable6 joined
[10:03] *** quotable6 joined
[10:04] *** reportable6 joined
[10:04] *** linkable6 joined
[10:04] *** notable6 joined
[10:04] *** greppable6 joined
[10:05] *** releasable6 joined
[10:05] *** benchable6 joined
[10:05] *** tellable6 joined
[10:05] *** statisfiable6 joined
[10:05] *** sourceable6 joined
[10:05] *** shareable6 joined
[10:06] *** evalable6 joined
[10:06] *** unicodable6 joined
[10:06] *** nativecallable6 joined
[10:06] *** coverable6 joined
[10:06] *** bloatable6 joined
[10:12] *** sena_kun left
[10:13] *** sena_kun joined
[10:29] <Geth> ¦ JSON-Unmarshal: jonathanstowe++ created pull request #1: Add an opt-in option to unmarshal

[10:29] <Geth> ¦ JSON-Unmarshal: review: https://github.com/raku-community-modules/JSON-Unmarshal/pull/1

[10:52] *** sivoais left
[10:53] *** sivoais joined
[11:23] *** frost left
[11:40] *** frost joined
[12:06] *** frost left
[12:08] *** reportable6 left
[12:10] *** reportable6 joined
[12:19] *** dogbert17 joined
[12:33] *** frost joined
[13:00] *** frost left
[15:46] *** |Tux| left
[16:03] *** |Tux| joined
[16:03] *** Tux__ joined
[16:06] *** Tux__ left
[18:07] *** reportable6 left
[18:10] *** reportable6 joined
[19:38] *** melezhik joined
[20:05] *** melezhik left
[20:41] *** sena_kun left
[20:42] *** sena_kun joined
[20:58] *** melezhik joined
[21:00] *** melezhik left
[21:07] *** sena_kun left
[21:45] *** sena_kun joined
[21:52] *** sena_kun left
