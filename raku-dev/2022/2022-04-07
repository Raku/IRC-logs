[00:06] *** reportable6 left
[00:07] *** reportable6 joined
[01:23] *** frost joined
[01:38] *** Kaipi left
[02:19] *** [Coke] left
[02:22] *** [Coke] joined
[04:53] *** Kaiepi joined
[05:38] *** frost left
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[07:50] <lizmat> Files=1352, Tests=117183, 287 wallclock secs (35.37 usr  9.79 sys + 4026.36 cusr 327.13 csys = 4398.65 CPU)

[08:20] <Geth> ¦ rakudo: ef68d4ad4c | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/DependencySpecification.pm6

[08:20] <Geth> ¦ rakudo: Hopefully fix problem in JVM backend\

[08:20] <Geth> ¦ rakudo: 

[08:20] <Geth> ¦ rakudo: Apparently caused by 1b75e3fa0c .  If this fixes it, then maybe the

[08:20] <Geth> ¦ rakudo: JVM backend cannot handle native str return constraints?

[08:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ef68d4ad4c

[08:20] <lizmat> bartolin ^^

[08:49] *** frost joined
[09:17] <Geth> ¦ rakudo: ffc06bb9ae | (Elizabeth Mattijsen)++ | tools/nuke-precomps.raku

[09:17] <Geth> ¦ rakudo: Add a script to empty out all precomp in the repo chain

[09:17] <Geth> ¦ rakudo: 

[09:17] <Geth> ¦ rakudo: Intended to be used by core developers who research / maintain

[09:17] <Geth> ¦ rakudo: the precompilation process in Rakudo.

[09:17] <Geth> ¦ rakudo: 

[09:17] <Geth> ¦ rakudo: Please note that removing all precomp files does *not* change

[09:17] <Geth> ¦ rakudo: functionality of an installation: it will merely free up a lot of

[09:17] <Geth> ¦ rakudo: diskspace of you're a core developer compiling the setting over and

[09:17] <Geth> ¦ rakudo: over again.  And it will slow down every first load of a compilation

[09:17] <Geth> ¦ rakudo: unit.

[09:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ffc06bb9ae

[10:23] <Geth> ¦ rakudo: 5658f4da07 | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/Supply.pm6

[10:23] <Geth> ¦ rakudo: Fix race condition in Rakudo::Supply::BlockState

[10:23] <Geth> ¦ rakudo: 

[10:23] <Geth> ¦ rakudo: Fixes #4853

[10:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5658f4da07

[10:24] *** linkable6 left
[10:26] *** linkable6 joined
[10:33] *** sena_kun left
[10:34] *** sena_kun joined
[10:59] <Geth> ¦ rakudo: d059eaffdb | (Elizabeth Mattijsen)++ | tools/nuke-precomps.raku

[10:59] <Geth> ¦ rakudo: Go after the precomp dirs, not the stores

[10:59] <Geth> ¦ rakudo: 

[10:59] <Geth> ¦ rakudo: But keep the uppermost "precomp" dir itself

[10:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d059eaffdb

[11:44] <lizmat> PSA: on a fresh Rakudo checkout, "make install" currently does not correctly install Rakudo

[11:44] <lizmat> investigating

[11:49] *** linkable6 left
[11:49] *** evalable6 left
[11:50] *** linkable6 joined
[11:52] *** evalable6 joined
[12:06] *** reportable6 left
[12:07] *** reportable6 joined
[12:35] <lizmat> PSA: false alarm, was a local snafu

[13:22] <[Tux]> Rakudo v2022.03-160-gd059eaffd (v6.d) on MoarVM 2022.03-15-g43e1b00a6

[13:22] <[Tux]> csv-test-xs-20      0.400 -  0.415

[13:22] <[Tux]> csv-ip5xs           0.798 -  0.801

[13:22] <[Tux]> test-t --race       0.818 -  0.851

[13:22] <[Tux]> test-t              1.379 -  1.399

[13:22] <[Tux]> csv-parser          3.543 -  3.754

[13:22] <[Tux]> csv-ip5xs-20        5.134 -  5.163

[13:22] <[Tux]> test                6.433 -  6.645

[13:22] <[Tux]> test-t-20 --race    6.808 -  7.292

[13:22] <[Tux]> test-t-20          20.971 - 21.339

[13:25] <MasterDuke> 1.379, is that a new record?

[13:25] <vrurg> Looks like it!

[13:34] *** evalable6 left
[13:34] *** linkable6 left
[13:37] *** linkable6 joined
[13:37] *** evalable6 joined
[13:39] <[Tux]> Nope

[13:40] <[Tux]> 20220307 1.399❙20220324 1.393❙20220322 1.386❙20220407 1.379❙20220324 1.359❙

[13:40] <[Tux]> 24-03 was 1.359

[13:40] *** linkable6 left
[13:42] *** linkable6 joined
[13:46] <lizmat> still #2 is nice

[14:07] *** frost left
[14:11] *** Geth left
[14:40] <lizmat> m: dd $?COMPILATION-ID   #  is that a implementation detail ?

[14:40] <camelia> rakudo-moar 530e17848: OUTPUT: «"C64B70F20F185B1FB98E5D17CECB016F02F5892B"␤»

[14:40] <lizmat> *an

[14:40] <lizmat> it does not appear to be documented

[14:42] <lizmat> nor are there tests for it

[14:44] <lizmat> in fact, it doesn't appear to be referenced anywhere but in VM.pm6

[14:46] <lizmat> seems to have been introduced in 3b94378276

[14:46] <japhb> lizmat: Possibly implicit?  If the value changes with each compile, it may be doing nothing but forcing the compiled data to change.

[14:46] *** linkable6 left
[14:47] <japhb> m: dd $?COMPILATION-ID

[14:47] <camelia> rakudo-moar 530e17848: OUTPUT: «"C64B70F20F185B1FB98E5D17CECB016F02F5892B"␤»

[14:47] <japhb> Ah, interesting, it's the same again

[14:47] <lizmat> it's a constant

[14:48] <japhb> Oh, yeah, now looking at that commit.  It's clearly based on the compiler's compilation-id

[14:50] *** linkable6 joined
[15:05] <lizmat> ah, it is tested in make test

[15:10] <lizmat> but spectest is otherwise clean

[15:34] *** TempIRCLogger left
[15:37] *** Geth joined
[15:37] <Geth> ¦ rakudo: lizmat++ created pull request #4854: Remove the $?COMPILATION-ID constant

[15:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4854

[15:42] *** melezhik joined
[15:45] *** qorg11 left
[15:45] *** TempIRCLogger joined
[15:47] *** qorg11 joined
[15:49] *** TempIRCLogger left
[15:50] *** TempIRCLogger joined
[15:51] *** melezhik left
[16:22] *** sena_kun left
[16:22] *** sena_kun joined
[16:41] <[Coke]> lizmat: what about the method compilation-id ?

[16:42] <lizmat> that lives in NQP

[16:43] <lizmat> as part of HLL::Compiler afaics

[16:43] <[Coke]> src/Perl6/Compiler.nqp has one

[16:44] <[Coke]> don't see it called anywhere in rakudo.

[16:44] <lizmat> ah duh, should be looking for compilation-id not compiler-id  :-)

[16:45] <[Coke]> doesn't look like that's called in roast, either.

[16:46] <[Coke]> (checked master)

[16:47] <lizmat> ok, that can go as well then  :-)  good spot

[16:47] <[Coke]> yay, deleted code is debugged code.

[16:48] <lizmat> m: BEGIN say $*W.handle

[16:48] <camelia> rakudo-moar 530e17848: OUTPUT: «BBDF497A86F06A2D0E6651DFF6F465EEA9F6BB71␤»

[16:48] <lizmat> I do think we're going to need *some* abstraction for that, as src/Perl6/World.nqp will not survive the RakuAST branch

[16:50] *** jdv left
[16:50] *** jdv joined
[16:59] <Geth> ¦ rakudo/remove-COMPILATION-ID: a852ad423a | (Elizabeth Mattijsen)++ | src/Perl6/Compiler.nqp

[16:59] <Geth> ¦ rakudo/remove-COMPILATION-ID: Can also remove Perl6::Compiler.compilation-id

[16:59] <Geth> ¦ rakudo/remove-COMPILATION-ID: 

[16:59] <Geth> ¦ rakudo/remove-COMPILATION-ID: Spotted by Coke++

[16:59] <Geth> ¦ rakudo/remove-COMPILATION-ID: review: https://github.com/rakudo/rakudo/commit/a852ad423a

[18:04] *** discord-raku-bot left
[18:04] *** discord-raku-bot joined
[18:05] *** reportable6 left
[18:06] *** reportable6 joined
[18:37] <Geth> ¦ rakudo/CATCH-at-start: 64d397da9e | (Elizabeth Mattijsen)++ | 23 files

[18:37] <Geth> ¦ rakudo/CATCH-at-start: Put CATCH blocks at the start of the scope

[18:37] <Geth> ¦ rakudo/CATCH-at-start: 

[18:37] <Geth> ¦ rakudo/CATCH-at-start: CATCH blocks affect the **entire** scope they're in.  So they should

[18:37] <Geth> ¦ rakudo/CATCH-at-start: be as close to the start of the scope they're in, so that you realize

[18:37] <Geth> ¦ rakudo/CATCH-at-start: that they can fire well before you think they'd might fire.

[18:37] <Geth> ¦ rakudo/CATCH-at-start: 

[18:37] <Geth> ¦ rakudo/CATCH-at-start: This did not change the Rakudo::Internals::JSON class, as that is

[18:37] <Geth> ¦ rakudo/CATCH-at-start: being kept in sync with JSON::Fast.

[18:37] <Geth> ¦ rakudo/CATCH-at-start: review: https://github.com/rakudo/rakudo/commit/64d397da9e

[18:37] <Geth> ¦ rakudo: lizmat++ created pull request #4855: Put CATCH blocks at the start of the scope

[18:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4855

[19:21] <MasterDuke> weekly: https://lwn.net/Articles/889312/

[19:21] <notable6> MasterDuke, Noted! (weekly)

[19:35] <Geth> ¦ rakudo: 86927cba53 | (Elizabeth Mattijsen)++ | 2 files

[19:35] <Geth> ¦ rakudo: Make repo upgrade test faster

[19:35] <Geth> ¦ rakudo: 

[19:35] <Geth> ¦ rakudo: - make the upgrade script take multiple args

[19:35] <Geth> ¦ rakudo: - adapt the makefile to only call it once, with 3 parameters

[19:35] <Geth> ¦ rakudo: 

[19:35] <Geth> ¦ rakudo: Saves about 280 msecs for every core build.  Yes, it's not a lot

[19:35] <Geth> ¦ rakudo: but I do that a *lot*.

[19:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/86927cba53

[19:37] *** Kaipi joined
[19:38] *** Kaiepi left
[19:41] *** Kaipi left
[21:20] <Geth> ¦ rakudo/rakuast: 7475888262 | (Jonathan Worthington)++ | src/Raku/ast/variable-declaration.rakumod

[21:20] <Geth> ¦ rakudo/rakuast: Fix mis-compile of state intializer

[21:20] <Geth> ¦ rakudo/rakuast: 

[21:20] <Geth> ¦ rakudo/rakuast: In the case where we're not initializing the state variable, we should

[21:20] <Geth> ¦ rakudo/rakuast: still evaluate to the l-value.

[21:20] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/7475888262

[21:40] *** evalable6 left
[21:40] *** linkable6 left
[21:41] *** evalable6 joined
[21:43] *** linkable6 joined
[21:52] <Geth> ¦ rakudo/update-core-meta: 93e6b1acbe | (Elizabeth Mattijsen)++ | 2 files

[21:52] <Geth> ¦ rakudo/update-core-meta: Update the meta info of the core

[21:52] <Geth> ¦ rakudo/update-core-meta: 

[21:52] <Geth> ¦ rakudo/update-core-meta: - in Compiler, auth to Yet Another Society, the official name of TPF

[21:52] <Geth> ¦ rakudo/update-core-meta: - in install-core-dist.raku, use the info from Compiler

[21:52] <Geth> ¦ rakudo/update-core-meta: 

[21:52] <Geth> ¦ rakudo/update-core-meta: Mostly because it felt better to have the info in the META match

[21:52] <Geth> ¦ rakudo/update-core-meta: what is in Compiler, and to be more specific in Compiler now that

[21:52] <Geth> ¦ rakudo/update-core-meta: there is no Perl in the name anymore.

[21:52] <Geth> ¦ rakudo/update-core-meta: review: https://github.com/rakudo/rakudo/commit/93e6b1acbe

[21:52] <Geth> ¦ rakudo: lizmat++ created pull request #4856: Update the meta info of the core

[21:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4856

[21:56] <[Coke]> lizmat++

