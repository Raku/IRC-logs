[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[00:54] *** frost joined
[01:50] *** frost left
[02:36] *** MasterDuke left
[03:40] *** quotable6 left
[03:40] *** evalable6 left
[03:40] *** bisectable6 left
[03:40] *** reportable6 left
[03:40] *** linkable6 left
[03:40] *** benchable6 left
[03:40] *** releasable6 left
[03:40] *** sourceable6 left
[03:40] *** shareable6 left
[03:40] *** bloatable6 left
[03:40] *** unicodable6 left
[03:40] *** greppable6 left
[03:40] *** coverable6 left
[03:40] *** statisfiable6 left
[03:40] *** tellable6 left
[03:40] *** squashable6 left
[03:40] *** committable6 left
[03:40] *** nativecallable6 left
[03:40] *** notable6 left
[03:41] *** bisectable6 joined
[03:42] *** reportable6 joined
[03:42] *** bloatable6 joined
[03:43] *** committable6 joined
[03:43] *** releasable6 joined
[03:43] *** statisfiable6 joined
[04:41] *** sourceable6 joined
[04:42] *** unicodable6 joined
[04:42] *** squashable6 joined
[04:42] *** coverable6 joined
[04:43] *** benchable6 joined
[04:43] *** notable6 joined
[04:43] *** nativecallable6 joined
[04:43] *** quotable6 joined
[05:43] *** sourceable6 left
[05:43] *** benchable6 left
[05:43] *** squashable6 left
[05:43] *** coverable6 left
[05:43] *** committable6 left
[05:43] *** nativecallable6 left
[05:43] *** quotable6 left
[05:43] *** releasable6 left
[05:43] *** bloatable6 left
[05:43] *** bisectable6 left
[05:43] *** unicodable6 left
[05:43] *** statisfiable6 left
[05:43] *** reportable6 left
[05:43] *** notable6 left
[05:44] *** evalable6 joined
[05:44] *** unicodable6 joined
[05:44] *** nativecallable6 joined
[05:44] *** reportable6 joined
[05:45] *** squashable6 joined
[05:46] *** releasable6 joined
[05:46] *** committable6 joined
[05:46] *** bloatable6 joined
[05:47] *** coverable6 joined
[06:09] *** reportable6 left
[06:45] *** quotable6 joined
[06:45] *** notable6 joined
[07:11] *** reportable6 joined
[07:44] *** statisfiable6 joined
[07:47] *** bisectable6 joined
[08:47] *** TheAthlete joined
[09:38] *** qorg11 left
[09:41] *** tellable6 joined
[09:41] *** qorg11 joined
[09:42] *** linkable6 joined
[09:44] *** sourceable6 joined
[09:46] *** benchable6 joined
[09:59] <lizmat> Files=1351, Tests=117094, 289 wallclock secs (34.82 usr  9.87 sys + 3992.99 cusr 324.95 csys = 4362.63 CPU)

[10:00] <lizmat> yeah, yesterday's timing was an outlier

[10:20] <lizmat> notable6: weekly

[10:20] <notable6> lizmat, No notes for “weekly”

[10:26] *** TheAthlete left
[10:42] *** shareable6 joined
[10:42] *** greppable6 joined
[11:37] *** Altai-man joined
[12:08] *** reportable6 left
[12:09] *** reportable6 joined
[12:10] *** frost joined
[12:20] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/01/24/2022-04-unsigned-merge/

[12:50] *** frost left
[12:56] <discord-raku-bot> <Anton Antonov#7232> This is great: "Elizabeth Mattijsen made the .unique, .repeated and .squish methods on native arrays about 3x as fast."

[13:03] *** frost joined
[13:03] *** TheAthlete joined
[13:52] *** discord-raku-bot left
[13:53] *** discord-raku-bot joined
[14:09] *** frost left
[14:12] *** frost joined
[14:27] <Geth> ¦ rakudo: 2ee3a46e3e | (Patrick Böker)++ | CREDITS

[14:27] <Geth> ¦ rakudo: CREDITS: Update Patrick Böker e-mail and usernames

[14:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2ee3a46e3e

[15:32] *** frost left
[15:54] *** qorg11 left
[15:55] *** qorg11 joined
[16:37] *** sena_kun_ joined
[16:37] *** Altai-man left
[16:44] *** andinus joined
[17:56] *** Altai-man joined
[17:58] *** sena_kun_ left
[18:06] *** reportable6 left
[18:06] *** reportable6 joined
[18:26] *** Altai-man left
[19:34] *** lizmat left
[20:06] <Geth> ¦ LWP-Simple: sdondley++ created pull request #48: encourage others to document

[20:06] <Geth> ¦ LWP-Simple: review: https://github.com/raku-community-modules/LWP-Simple/pull/48

[20:31] *** lizmat joined
[20:46] *** TheAthlete left
[22:02] *** MasterDuke joined
[22:53] <Geth> ¦ rakudo/rakuast: 69c9ca2323 | (Jonathan Worthington)++ | 3 files

[22:53] <Geth> ¦ rakudo/rakuast: Compile literal radix numbers to RakuAST

[22:53] <Geth> ¦ rakudo/rakuast: 

[22:53] <Geth> ¦ rakudo/rakuast: We don't introduce a new AST node type for the literal forms, since they

[22:53] <Geth> ¦ rakudo/rakuast: are really just another way of writing an IntLiteral or RatLiteral (so

[22:53] <Geth> ¦ rakudo/rakuast: it's the same as how we don't have a special AST form for 0xBEEF). (The

[22:53] <Geth> ¦ rakudo/rakuast: non-literal forms, however, will require the addition of further AST

[22:53] <Geth> ¦ rakudo/rakuast: node types.)

[22:53] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/69c9ca2323

[22:59] <MasterDuke> new rakuast commits, nice

[23:07] <japhb> I was just thinking the same thing.  jnthn++  :-)

[23:10] <Geth> ¦ rakudo: vrurg++ created pull request #4735: Further improvements to smartmatch dispatcher

[23:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4735

[23:24] *** sena_kun left
[23:25] <Geth> ¦ roast: vrurg++ created pull request #787: Adjust tests to better work with improved smartmatch dispatcher on MoarVM

[23:25] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/787

[23:43] <gfldex> can anybody please confirm or deny surprising lowness of https://gist.github.com/b15f95ea9444f341617c5182860da461 please?

[23:45] <gfldex> The profiler doesn't like it either.

[23:45] <gfldex> Specialized Frames0.41% (4204)

[23:50] *** sena_kun joined
[23:56] <MasterDuke> that is...not fast

[23:56] <gfldex> Am I in Rakudobug territory?

[23:57] <MasterDuke> well, assuming is known to be quite slow

[23:57] <MasterDuke> but that slow...

[23:59] <MasterDuke> i think it just kills all inlining. and inlining is a pretty large part of what spesh does

