[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[00:23] *** Xliff joined
[00:48] *** Kaipei joined
[00:52] *** Kaiepi left
[01:21] *** Xliff left
[01:31] *** Kaiepi joined
[01:33] *** Kaipei left
[02:28] *** vrurg joined
[02:28] *** vrurg_ left
[02:31] *** Xliff joined
[02:31] <Xliff> P6-GLib suite timing statistics for Raku 2022.07.13.g.10.feda.116

[02:31] <Xliff> Total number of projects: 33 (483289 loc)

[02:31] <tellable6> 2022-08-15T01:58:53Z #raku <guifa_> Xliff: https://github.com/alabamenhu/PolyglotRegexen

[02:31] <Xliff> Total non-parallel compile times: 8972.550 (271.895 avg)

[02:31] <Xliff> Total parallel compile times: 1757.284 (53.251 avg) 5.106x speedup

[02:31] <Xliff> This is a serious performance regression from last week. Times increased by 5% (non-parallel) and 17% (parallel)

[03:05] *** pamplemousse joined
[03:20] *** pamplemousse left
[04:14] *** pamplemousse joined
[04:19] *** pamplemousse left
[05:02] *** leont left
[05:02] *** leont joined
[05:16] *** samcv left
[05:17] *** samcv joined
[06:01] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: 6df088ab09 | (Elizabeth Mattijsen)++ | src/core.c/Main.pm6

[06:01] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: Introduce SUB-MAIN-OPTS<numeric-suffix-as-value>

[06:01] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: 

[06:01] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: This allows CLI arguments of the form -j2 to be interpreted as

[06:01] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: --j=2, making it more compatible with "normal" CLI argument interpreters

[06:01] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: review: https://github.com/rakudo/rakudo/commit/6df088ab09

[06:01] <Geth> ¦ rakudo: lizmat++ created pull request #5025: Introduce SUB-MAIN-OPTS<numeric-suffix-as-value>

[06:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5025

[06:06] *** reportable6 left
[06:08] *** reportable6 joined
[06:10] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: 05e48713b7 | (Elizabeth Mattijsen)++ | src/core.c/Main.pm6

[06:10] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: Only do conversion for single letter args

[06:10] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: review: https://github.com/rakudo/rakudo/commit/05e48713b7

[06:31] *** |Tux| left
[06:36] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: 900664d89c | (Elizabeth Mattijsen)++ | src/core.c/Main.pm6

[06:36] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: Allow only numeric suffixes, not anything else after that

[06:36] <Geth> ¦ rakudo/lizmat-numeric-suffix-as-value: review: https://github.com/rakudo/rakudo/commit/900664d89c

[06:45] <Geth> ¦ rakudo/lizmat-expand-single-letter-options: 4111513a51 | (Elizabeth Mattijsen)++ | src/core.c/Main.pm6

[06:45] <Geth> ¦ rakudo/lizmat-expand-single-letter-options: Introduce SUB-MAIN-OPTS<expand-single-letter-options>

[06:45] <Geth> ¦ rakudo/lizmat-expand-single-letter-options: 

[06:45] <Geth> ¦ rakudo/lizmat-expand-single-letter-options: When activated, allows specification of -abc to be equivalent to

[06:45] <Geth> ¦ rakudo/lizmat-expand-single-letter-options: --a --b --c

[06:45] <Geth> ¦ rakudo/lizmat-expand-single-letter-options: review: https://github.com/rakudo/rakudo/commit/4111513a51

[06:45] <Geth> ¦ rakudo: lizmat++ created pull request #5026: Introduce SUB-MAIN-OPTS<expand-single-letter-options>

[06:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5026

[07:29] *** sena_kun joined
[08:58] *** evalable6 left
[08:58] *** linkable6 left
[08:59] *** linkable6 joined
[08:59] *** evalable6 joined
[09:16] *** sena_kun left
[10:23] *** sena_kun joined
[11:38] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/08/15/2022-33-2nd-conf-succeeded/

[11:42] *** Xliff left
[12:06] *** reportable6 left
[12:08] *** reportable6 joined
[12:16] <sena_kun> lizmat++

[13:21] *** squashable6 left
[13:23] *** squashable6 joined
[14:38] *** linkable6 left
[14:38] *** evalable6 left
[14:40] *** linkable6 joined
[14:41] *** evalable6 joined
[15:13] *** nebuchadnezzar left
[15:37] *** melezhik joined
[15:42] *** melezhik left
[16:05] *** lizmat_ joined
[16:06] *** Kaipei joined
[16:08] *** Kaiepi left
[16:09] *** lizmat left
[16:20] *** lizmat_ left
[16:20] *** lizmat joined
[16:28] *** Xliff joined
[17:12] <Geth> ¦ rakudo/lizmat-ask: 7ed022b8d9 | (Elizabeth Mattijsen)++ | src/core.e/control.pm6

[17:12] <Geth> ¦ rakudo/lizmat-ask: Add "ask" as an alias to "prompt" in 6.e

[17:12] <Geth> ¦ rakudo/lizmat-ask: review: https://github.com/rakudo/rakudo/commit/7ed022b8d9

[17:13] <Geth> ¦ rakudo: lizmat++ created pull request #5028: Add "ask" as an alias to "prompt" in 6.e

[17:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5028

[17:22] <tbrowder> lizmat: thanks, but i'm not trying to be "butt-headed" (well, mayn

[17:23] <tbrowder> *maybe a bit :-)

[17:23] <lizmat> well, I wanted to make it concrete about what we're talking about  :-)

[17:23] <lizmat> no worries

[17:23] * lizmat is still not convinced...  :-)

[17:24] <tbrowder> i really do like your CLI::Help and am using on a new module

[17:25] <lizmat> :-)

[17:26] <tbrowder> on another subject, IO::Path. i would really to see something symmetric with method extension on basename.

[17:27] <tbrowder> something like stem, maybe.

[17:28] <tbrowder> OR a pair: IO::Path.basename.parts

[17:29] <tbrowder> that would return (stem, suffix)

[17:31] <lizmat> doesn't something like that not already exist in the ecosystem ?

[17:31] <tbrowder> the issue of multiple dot separators would have to be handled as a named arg

[17:32] *** sena_kun left
[17:32] <tbrowder> i'm not sure but i'll look...

[17:36] <tbrowder> yes, Path::Util, I'll revisit and see how that works for the doc change before i make any more hasty comments

[17:37] <lizmat> :-)

[18:06] *** reportable6 left
[18:06] *** reportable6 joined
[18:13] *** sena_kun joined
[18:31] <[Tux]> Rakudo v2022.07-13-g10feda116 (v6.d) on MoarVM 2022.07-2-g5e3ea9ce8

[18:31] <[Tux]> csv-test-xs-20      0.411 -  0.412

[18:31] <[Tux]> test-t --race       0.775 -  0.810

[18:31] <[Tux]> test-t              1.335 -  1.413

[18:31] <[Tux]> csv-parser          3.565 -  3.737

[18:31] <[Tux]> test                6.260 -  6.360

[18:31] <[Tux]> test-t-20 --race    6.918 -  6.938

[18:31] <[Tux]> test-t-20          19.187 - 20.735

[19:15] *** pamplemousse joined
[19:23] *** pamplemousse left
[19:26] *** pamplemousse joined
[19:29] *** pamplemousse left
[19:29] *** pamplemousse joined
[19:29] <tbrowder> Path::Util uses a regex get the basename without extension so I don't think it helps on the doc example. likewise, getting the basename without extension by setting the current extension as [Coke] suggested seems like as much of a hack as any other.

[19:30] <tbrowder> *setting the current extension to ""...

[19:31] <tbrowder> in sum, i think we're missing something in core of IO::Path

[19:33] <tbrowder> in perl and C++ i used to call them stem and suffix

[19:35] <tbrowder> (i'm sure i got that terminology from somewhere other than myself, probably perl newsgroup or perl monks or brlcad.org)

[19:44] *** pamplemousse left
[19:46] *** pamplemousse joined
[19:49] *** pamplemousse left
[19:58] *** [Coke] left
[19:58] <lizmat> tbrowder: on /foo/bar.txt, stem would be "bar" and suffix would be "txt" ?

[19:59] *** pamplemousse joined
[20:04] *** pamplemousse left
[20:06] <sena_kun> lizmat, likely so

[20:06] <sena_kun> this case appears to me like a more rare one compared to all the others, so de-huffmanization at work maybe

[20:08] <sena_kun> or the opposite, huffmanized syntax is at it again

[20:08] <JRaspass> FWIW Raku Land does the .extension("").basename dance in a good half a dozen places too, I would very much welcome a better method

[20:08] <tellable6> 2021-01-11T02:35:00Z #raku <melezhik> .tell JRaspass I wonder how long does it take for raku.land to index a new version of a module, Sparky new version 0.30.0 is already seen on modules.raku.org ...

[20:08] <tellable6> 2021-07-08T12:56:00Z #raku-dev <tbrowder> .tell JRaspass ^^^

[20:08] <tellable6> hey JRaspass, you have a message: https://gist.github.com/d752612ff86b82cd03a64440f1be38e4

[20:11] <tbrowder> lizmat: yes, for methods on basename

[20:13] <sena_kun> an util sub to factor out .extension("").basename?

[20:13] <tbrowder> i now have my "real" doc example looking pretty good for my take on existing methods, and it includes a pretty "hack" for the "stem". i just need to tidy the "# OUTPUT" stuff.

[20:14] <tbrowder> sena_kun: yes, something like that

[20:15] <sena_kun> tbrowder++

[20:15] *** [Coke] joined
[20:16] <tbrowder> maybe i'm the only one in the world to often the "stem" ofn

[20:16] <tbrowder> of basenames, but i

[20:18] <tbrowder> i use them for renames of children. also handy when you have dirnames with dots

[20:18] *** pamplemousse joined
[20:18] <sena_kun> "stem" gives off an image of "the base of the word in a linguistic sense", not the "name without extension" to me

[20:19] <tbrowder> most of the $coding and $fun coding in my life has been text filtering and transformation

[20:21] <tbrowder> sena_kun: that's probable where the coding use comes from. dr knuth i think may have used those words.

[20:21] <tbrowder> or larry back in the day

[20:22] <tbrowder> TeX or LaTeX

[20:26] *** pamplemousse left
[20:26] <tbrowder> ah, Make? see full Make manual

[20:27] <tbrowder> going to real computer now for doc PR update...

[20:27] *** pamplemousse joined
[20:44] *** pamplemousse left
[20:45] <Kaipei> m: say qx/raku --version/; sub (\ is readonly) { }(1)

[20:45] <camelia> rakudo-moar 10feda116: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Invalid typename 'is' in parameter declaration.␤at <tmp>:1␤------> say qx/raku --version/; sub (\ is⏏ readonly) { }(1)␤»

[20:45] <Kaipei> m: say qx/raku --version/

[20:45] <camelia> rakudo-moar 10feda116: OUTPUT: «␤»

[20:45] <Kaipei> welp

[20:46] <Kaipei> oh wait i'm already on master

[20:47] *** pamplemousse joined
[20:49] <tbrowder> ok, ready for re-review

[20:51] <Geth> ¦ rakudo: vrurg++ created pull request #5030: Make World's `is_type` method more reliable

[20:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5030

[20:53] <Geth> ¦ roast: vrurg++ created pull request #816: Add more tests for sigilless declarations

[20:53] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/816

[20:58] *** pamplemousse left
[21:01] *** pamplemousse joined
[21:04] *** pamplemousse left
[21:08] *** pamplemousse joined
[21:11] *** pamplemousse left
[21:26] *** pamplemousse joined
[21:28] *** pamplemousse left
[21:32] <Geth> ¦ rakudo/lizmat-v-check: 7ddb90ce98 | (Vadim Belman)++ | src/Perl6/Grammar.nqp

[21:32] <Geth> ¦ rakudo/lizmat-v-check: Don't blindly make a Version object for vN

[21:32] <Geth> ¦ rakudo/lizmat-v-check: 

[21:32] <Geth> ¦ rakudo/lizmat-v-check: First look up whether there's a lexical symbol for it, and use that if

[21:32] <Geth> ¦ rakudo/lizmat-v-check: we found it.

[21:32] <Geth> ¦ rakudo/lizmat-v-check: 

[21:32] <Geth> ¦ rakudo/lizmat-v-check: Fixes #3919

[21:32] <Geth> ¦ rakudo/lizmat-v-check: review: https://github.com/rakudo/rakudo/commit/7ddb90ce98

[21:35] *** pamplemousse joined
[21:40] *** pamplemousse left
[21:49] *** pamplemousse joined
[21:50] *** pamplemousse left
[22:01] <lizmat> vrurg++

[22:16] <Geth> ¦ rakudo: 13f7416c1c | (Vadim Belman)++ | src/Perl6/World.nqp

[22:16] <Geth> ¦ rakudo: Make World's `is_type` method more reliable

[22:16] <Geth> ¦ rakudo: 

[22:16] <Geth> ¦ rakudo: Sometimes it was treating a lexical sigilless as a type causing obscure

[22:16] <Geth> ¦ rakudo: compiler errors.

[22:16] <Geth> ¦ rakudo: 

[22:16] <Geth> ¦ rakudo: Fixes #5027

[22:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/13f7416c1c

[22:16] <Geth> ¦ rakudo: 2c1e1bfd33 | (Vadim Belman)++ (committed using GitHub Web editor) | src/Perl6/World.nqp

[22:16] <Geth> ¦ rakudo: Merge pull request #5030 from vrurg/rakudo-5027

[22:16] <Geth> ¦ rakudo: 

[22:16] <Geth> ¦ rakudo: Make World's `is_type` method more reliable

[22:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2c1e1bfd33

[22:16] <Geth> ¦ roast: 75f1bf6d77 | (Vadim Belman)++ | S04-declarations/my-6c.t

[22:16] <Geth> ¦ roast: Add more tests for sigilless declarations

[22:16] <Geth> ¦ roast: 

[22:16] <Geth> ¦ roast: Related to rakudo/rakudo#3919 and rakudo/rakudo#5027

[22:16] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/75f1bf6d77

[22:16] <Geth> ¦ roast: 147874f3b4 | (Vadim Belman)++ (committed using GitHub Web editor) | S04-declarations/my-6c.t

[22:16] <Geth> ¦ roast: Merge pull request #816 from vrurg/sigilless-declarations

[22:16] <Geth> ¦ roast: 

[22:16] <Geth> ¦ roast: Add more tests for sigilless declarations

[22:16] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/147874f3b4

[22:17] *** linkable6 left
[22:19] *** linkable6 joined
[22:37] *** sena_kun left
[22:53] *** pamplemousse joined
[22:56] *** pamplemousse left
[22:57] *** sena_kun joined
[22:58] *** Xliff left
[22:58] *** Xliff joined
[22:59] *** Xliff left
[22:59] *** sena_kun left
[23:49] *** pamplemousse joined
[23:51] *** pamplemousse left
