[00:00] *** reportable6 left
[00:00] *** gfldex joined
[00:01] *** reportable6 joined
[00:10] <Geth> ¦ rakudo: 683ddf4767 | (Vadim Belman)++ | tools/templates/NQP_REVISION

[00:10] <Geth> ¦ rakudo: Bump NQP

[00:10] <Geth> ¦ rakudo: 

[00:10] <Geth> ¦ rakudo: Prepare for #4993.

[00:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/683ddf4767

[00:11] *** linkable6 left
[00:13] *** linkable6 joined
[00:27] *** gfldex left
[00:27] *** gfldex joined
[01:12] <Geth> ¦ rakudo: 71de22321d | (Vadim Belman)++ | 25 files

[01:12] <Geth> ¦ rakudo: Implement nominalizable transparency for definites

[01:12] <Geth> ¦ rakudo: 

[01:12] <Geth> ¦ rakudo: The following will now produce correct true output:

[01:12] <Geth> ¦ rakudo: 

[01:12] <Geth> ¦ rakudo:     subset Foo of Int();

[01:12] <Geth> ¦ rakudo:     say Foo:D.^archetypes.coercive;

[01:12] <Geth> ¦ rakudo: 

[01:12] <Geth> ¦ rakudo: <…commit message has 25 more lines…>

[01:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/71de22321d

[01:12] <Geth> ¦ rakudo: 9b13a55a12 | (Vadim Belman)++ (committed using GitHub Web editor) | 25 files

[01:12] <Geth> ¦ rakudo: Merge pull request #4993 from vrurg/make-generics-better

[01:12] <Geth> ¦ rakudo: 

[01:12] <Geth> ¦ rakudo: Implement nominalizable transparency for definites

[01:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9b13a55a12

[02:16] *** bloatable6 left
[02:16] *** reportable6 left
[02:16] *** statisfiable6 left
[02:16] *** evalable6 left
[02:16] *** sourceable6 left
[02:16] *** coverable6 left
[02:16] *** bisectable6 left
[02:16] *** linkable6 left
[02:16] *** committable6 left
[02:16] *** nativecallable6 left
[02:16] *** releasable6 left
[02:16] *** benchable6 left
[02:16] *** unicodable6 left
[02:16] *** notable6 left
[02:16] *** greppable6 left
[02:16] *** shareable6 left
[02:16] *** quotable6 left
[02:17] *** quotable6 joined
[02:17] *** notable6 joined
[02:17] *** sourceable6 joined
[02:17] *** nativecallable6 joined
[02:17] *** unicodable6 joined
[02:17] *** statisfiable6 joined
[02:17] *** evalable6 joined
[02:18] *** coverable6 joined
[02:18] *** releasable6 joined
[02:18] *** committable6 joined
[02:18] *** linkable6 joined
[02:18] *** benchable6 joined
[02:18] *** bisectable6 joined
[02:19] *** greppable6 joined
[02:19] *** bloatable6 joined
[02:19] *** reportable6 joined
[02:19] *** shareable6 joined
[03:04] *** frost joined
[04:31] *** nativecallable6 left
[04:31] *** coverable6 left
[04:31] *** greppable6 left
[04:31] *** statisfiable6 left
[04:31] *** shareable6 left
[04:31] *** bisectable6 left
[04:31] *** linkable6 left
[04:31] *** evalable6 left
[04:31] *** releasable6 left
[04:31] *** reportable6 left
[04:31] *** notable6 left
[04:31] *** committable6 left
[04:31] *** unicodable6 left
[04:31] *** bloatable6 left
[04:31] *** sourceable6 left
[04:31] *** quotable6 left
[04:31] *** benchable6 left
[04:31] *** greppable6 joined
[04:31] *** coverable6 joined
[04:32] *** committable6 joined
[04:32] *** releasable6 joined
[04:32] *** nativecallable6 joined
[04:32] *** quotable6 joined
[04:33] *** evalable6 joined
[04:33] *** notable6 joined
[04:33] *** shareable6 joined
[04:33] *** unicodable6 joined
[04:33] *** bloatable6 joined
[04:34] *** reportable6 joined
[04:34] *** linkable6 joined
[04:34] *** bisectable6 joined
[04:34] *** sourceable6 joined
[04:34] *** benchable6 joined
[04:34] *** statisfiable6 joined
[05:59] *** quotable6 left
[05:59] *** statisfiable6 left
[05:59] *** committable6 left
[05:59] *** notable6 left
[05:59] *** sourceable6 left
[05:59] *** evalable6 left
[05:59] *** linkable6 left
[05:59] *** nativecallable6 left
[05:59] *** greppable6 left
[05:59] *** reportable6 left
[05:59] *** coverable6 left
[05:59] *** bisectable6 left
[05:59] *** benchable6 left
[05:59] *** shareable6 left
[05:59] *** bloatable6 left
[05:59] *** releasable6 left
[05:59] *** unicodable6 left
[05:59] *** reportable6 joined
[05:59] *** bloatable6 joined
[05:59] *** unicodable6 joined
[06:00] *** reportable6 left
[06:00] *** statisfiable6 joined
[06:00] *** greppable6 joined
[06:00] *** coverable6 joined
[06:00] *** nativecallable6 joined
[06:01] *** bisectable6 joined
[06:01] *** benchable6 joined
[06:01] *** committable6 joined
[06:01] *** evalable6 joined
[06:01] *** quotable6 joined
[06:02] *** notable6 joined
[06:02] *** releasable6 joined
[06:02] *** shareable6 joined
[06:02] *** sourceable6 joined
[06:02] *** linkable6 joined
[06:03] *** reportable6 joined
[07:03] *** shareable6 left
[07:03] *** notable6 left
[07:03] *** benchable6 left
[07:03] *** sourceable6 left
[07:03] *** releasable6 left
[07:03] *** coverable6 left
[07:03] *** committable6 left
[07:03] *** linkable6 left
[07:03] *** quotable6 left
[07:03] *** bisectable6 left
[07:03] *** nativecallable6 left
[07:03] *** statisfiable6 left
[07:03] *** greppable6 left
[07:03] *** reportable6 left
[07:03] *** bloatable6 left
[07:03] *** evalable6 left
[07:03] *** unicodable6 left
[07:03] *** statisfiable6 joined
[07:03] *** coverable6 joined
[07:04] *** shareable6 joined
[07:04] *** bloatable6 joined
[07:04] <nine> vrurg: which archetypes method actually uses the $obj parameter? I still cannot find any

[07:04] *** linkable6 joined
[07:05] *** reportable6 joined
[07:05] *** benchable6 joined
[07:05] *** bisectable6 joined
[07:05] *** quotable6 joined
[07:05] *** unicodable6 joined
[07:05] *** evalable6 joined
[07:05] *** greppable6 joined
[07:05] *** nativecallable6 joined
[07:05] <lizmat> @vrurg all Inline::Perl5 tests in roast fail for me after pull / rebuild

[07:05] *** sourceable6 joined
[07:05] *** releasable6 joined
[07:06] <lizmat>  @vrurg all Inline::Perl5 tests in roast fail for me after pull / rebuild

[07:06] *** notable6 joined
[07:06] *** committable6 joined
[07:13] <nine> That's the backwards incompatibility we're talking about.

[07:42] <lizmat> meh

[07:44] <lizmat> so that implies any installation running with Inline::Perl5 will break if they upgrade to Rakudo 2022.08 without upgrading Inline::Perl5 as well ?

[07:54] <nine> yes

[07:54] <lizmat> meh again :-(

[07:54] <nine> And I do not even understand why that change is needed. Why pass a parameter to a method when it doesn't get used?

[07:55] <lizmat> so that you can customize it with that parameter ?

[07:55] <nine> But none of the archetypes methods does that.

[07:56] <lizmat> well, we still have a few weeks to revert...

[07:56] <lizmat> or change

[08:04] *** sena_kun joined
[08:26] <Kaiepi> i double checked the hs_log_* produced by the CORE.d.setting failure on the jvm

[08:27] <Kaiepi> usually i kinda gloss over module loader errors because they can happen for entirely unrelated reasons at times, but i noticed this was happening a bit later than is normal for one of those

[08:28] <Kaiepi> it happens in the nqp::loadbytecode op, but not until attempting to get a constructor for a loaded class

[08:29] <Kaiepi> or rather, at a different time

[08:31] <Kaiepi> this line in particular https://github.com/Raku/nqp/blob/9858768b7720d26e803fe1a0bfdc6b738826ae36/src/vm/jvm/runtime/org/raku/nqp/runtime/LibraryLoader.java#L71

[08:32] <Kaiepi> thing i don't get is this is happening rather late in the loading of bytecode... why such a huge chunk of memory?

[08:32] <Kaiepi> the files are already loaded, and decompressed

[09:33] *** sena_kun left
[10:31] *** sena_kun joined
[11:12] *** frost left
[11:40] *** sena_kun left
[11:40] *** sena_kun joined
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:05] *** frost joined
[12:07] <Geth> ¦ rakudo: 49e04c6193 | (Tom Browder)++ (committed using GitHub Web editor) | CREDITS

[12:07] <Geth> ¦ rakudo: Update CREDITS

[12:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/49e04c6193

[12:08] *** frost left
[12:18] *** [Coke] joined
[12:21] *** [Coke]_ left
[12:23] *** frost joined
[12:49] *** frost left
[13:07] <vrurg> lizmat, nine: archetypes has to have a parameters otherwise there is no solution for examples in the PR (https://github.com/rakudo/rakudo/pull/4993)

[13:10] <vrurg> Unfortunately, in many locations where generics are instantiated, either additional checks for definites are to be introduced (performance), or a single "unused" attribute of archetypes makes the cost much smaller.

[13:13] <vrurg> The problem is that definites implemented as parameterizations. Therefore, in order to determine archetypes of underlying type of a definite, one has to have the type itself to resolve its parameters. Since definites are ubiquitous, parameterization spares us memory and performances on creating new metamodel object for each new definite.

[13:22] <vrurg> lizmat, nine: Ah, and one more. This is another reason why I see Inline::Perl5 as a part of Rakudo. As long as spectests depend on it to be complete.

[14:10] <nine> vrurg: I do see the effect of your change, i.e. the difference between passing that argument and not. But I can't for the life of mine find the place in the code that actually uses that parameter.

[14:11] <nine> Ah, god damn it, there it is: https://github.com/rakudo/rakudo/pull/4993/commits/71de22321da04acc9ea17ec3ebea59f6b3f71749#diff-e5da03237c80dbafc3cac534f561692087205733d2b633fc3f8cc3d1292c1278R11

[14:12] <vrurg> I see... Right, that's the place.

[14:13] <vrurg> BTW, speaking of backward compat, archetypes are not specced and therefore remain implementation detail, as most of the metamodel is.

[15:22] *** japhb left
[15:29] *** japhb joined
[15:49] *** Kaiepi left
[16:19] *** vrurg left
[16:19] *** vrurg_ joined
[16:57] <Geth> ¦ rakudo: pamplemoussecache++ created pull request #5015: Update all ranged copyrights from 2021 to 2022

[16:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5015

[17:07] *** sena_kun left
[17:18] *** discord-raku-bot joined
[17:31] *** discord-raku-bot left
[17:32] *** discord-raku-bot joined
[17:38] *** Geth left
[17:38] *** Geth joined
[17:39] <Geth> ¦ rakudo: 36b0a635ff | (Madeleine Goebel)++ (committed using GitHub Web editor) | 8 files

[17:39] <Geth> ¦ rakudo: Update all ranged copyrights from 2021 to 2022 (#5015)

[17:39] <Geth> ¦ rakudo: 

[17:39] <Geth> ¦ rakudo: Co-authored-by: Madeleine Goebel <mgoebel@biocircuit.com>

[17:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/36b0a635ff

[17:39] *** Kaiepi joined
[17:40] *** linkable6 left
[17:41] *** linkable6 joined
[17:44] *** pamplemoussecach joined
[17:44] *** pamplemoussecach is now known as pamplemousse

[17:57] *** sena_kun joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:57] *** pamplemousse left
[19:09] *** vrurg_ is now known as vrurg

[19:14] *** vrurg_ joined
[19:16] *** vrurg left
[20:04] *** vrurg_ is now known as vrurg

[20:10] *** pamplemousse joined
[20:13] *** pamplemousse left
[20:21] *** pamplemousse joined
[20:23] *** pamplemousse left
[20:49] *** Kaiepi left
[20:51] *** Kaiepi joined
[21:04] *** pamplemousse joined
[21:04] *** pamplemousse left
[21:15] *** sena_kun left
[21:43] *** melezhik joined
[21:50] *** melezhik left
[21:55] *** melezhik joined
[22:00] *** pamplemousse joined
[22:01] *** melezhik left
[22:06] *** sena_kun joined
[22:12] *** pamplemousse left
[22:25] *** sena_kun left
[22:28] *** pamplemousse joined
[22:29] *** pamplemousse left
[22:36] *** pamplemousse joined
[23:45] *** pamplemousse left
[23:56] *** pamplemousse joined
