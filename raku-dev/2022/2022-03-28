[00:05] *** [Coke] joined
[01:43] *** hankache joined
[01:52] *** hankache left
[04:33] *** unicodable6 left
[04:33] *** evalable6 left
[04:33] *** releasable6 left
[04:33] *** benchable6 left
[04:33] *** quotable6 left
[04:33] *** notable6 left
[04:33] *** bloatable6 left
[04:33] *** squashable6 left
[04:33] *** shareable6 left
[04:33] *** greppable6 left
[04:33] *** nativecallable6 left
[04:33] *** coverable6 left
[04:33] *** bisectable6 left
[04:33] *** statisfiable6 left
[04:33] *** sourceable6 left
[04:33] *** committable6 left
[05:40] <Xliff> p6-GLib-Suite compile times:

[05:40] <Xliff> Total non-parallel compile times: 9164.94s

[05:40] <Xliff> Total parallel compile times: 1644.62896181s

[05:41] <Xliff> The regression from last week looks to be resolved. Thank you, lizmat!

[05:59] *** Xliff left
[06:42] <lizmat> Thank you, Xliff, but I don't think I did anything to fix that

[06:44] <Geth> ¦ whateverable: fd87ed7145 | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable/Discordable.pm6

[06:44] <Geth> ¦ whateverable: Fix the list of discord bridge bot names

[06:44] <Geth> ¦ whateverable: 

[06:44] <Geth> ¦ whateverable: The bot was renamed a long time ago, so the list needs to be changed

[06:44] <Geth> ¦ whateverable: accordingly. All whateverable bots understand commands sent through the

[06:44] <Geth> ¦ whateverable: bridge, but only if they know the nickname of the bot that implements

[06:44] <Geth> ¦ whateverable: the bridge.

[06:44] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/fd87ed7145

[06:44] <Geth> ¦ whateverable: 2bd990d275 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | lib/Whateverable/Discordable.pm6

[06:44] <Geth> ¦ whateverable: Merge pull request #385 from AlexDaniel/fix-discord-bot-name

[06:44] <Geth> ¦ whateverable: 

[06:44] <Geth> ¦ whateverable: Fix the list of discord bridge bot names

[06:44] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/2bd990d275

[06:58] <lizmat> Files=1352, Tests=117129, 299 wallclock secs (36.27 usr  9.84 sys + 4111.11 cusr 331.89 csys = 4489.11 CPU)

[07:19] *** CIAvash left
[07:19] *** AlexDaniel left
[07:19] *** uzl[m] left
[07:19] *** MitarashiDango[m left
[07:19] *** crystalfrost[m] left
[07:24] *** AlexDaniel joined
[07:33] *** uzl[m] joined
[07:33] *** CIAvash joined
[07:33] *** crystalfrost[m] joined
[07:33] *** MitarashiDango[m joined
[07:40] *** hankache joined
[07:40] *** hankache left
[08:23] <Geth> ¦ rakudo: ec20a3f010 | (Elizabeth Mattijsen)++ | src/core.c/stubs.pm6

[08:23] <Geth> ¦ rakudo: Make &DYNAMIC take a native str

[08:23] <Geth> ¦ rakudo: 

[08:23] <Geth> ¦ rakudo: Because that now makes it slightly better optimizable and produces

[08:23] <Geth> ¦ rakudo: smaller bytecode (390 -> 374).  Sadly, it won't inline because of

[08:23] <Geth> ¦ rakudo: the nqp::getlexdyns.  It used to not inline because it was too big.

[08:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ec20a3f010

[08:46] *** MasterDuke left
[08:52] *** sena_kun left
[08:53] *** sena_kun joined
[08:56] <Geth> ¦ rakudo: 173a75b07e | (Elizabeth Mattijsen)++ | src/Perl6/bootstrap.c/EXPORTHOW.nqp

[08:56] <Geth> ¦ rakudo: Speedup / fix race condition on EXPORTHOW

[08:56] <Geth> ¦ rakudo: 

[08:56] <Geth> ¦ rakudo: Reduce the number of nqp::how calls, and put a lock around it to

[08:56] <Geth> ¦ rakudo: make sure it isn't a race condition on changing the underlying hash.

[08:56] <Geth> ¦ rakudo: 

[08:56] <Geth> ¦ rakudo: For some reason, this gets called on *every* Raku startup.  One would

[08:56] <Geth> ¦ rakudo: sorta expect this to be compile time somehow.

[08:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/173a75b07e

[09:10] <Geth> ¦ rakudo: 34d2816426 | (Elizabeth Mattijsen)++ | 3 files

[09:10] <Geth> ¦ rakudo: Change name of ContainerDescriptor::BindHashPos to ..Key

[09:10] <Geth> ¦ rakudo: 

[09:10] <Geth> ¦ rakudo: This container descriptor logic applies to hashes, and with hashes

[09:10] <Geth> ¦ rakudo: we refer to "keys" rather than to "positions".  Probably a copy-pasto.

[09:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/34d2816426

[10:07] *** sena_kun left
[10:08] *** sena_kun joined
[11:05] *** uzl[m] left
[11:05] *** AlexDaniel left
[11:05] *** CIAvash left
[11:05] *** crystalfrost[m] left
[11:07] *** MitarashiDango[m left
[12:48] <lizmat> notable6: weekly

[12:49] *** AlexDaniel joined
[12:57] <nine> lizmat: I do see why that EXPORTHOW code runs on every startup: it's just part of the setting's mainline

[12:57] *** CIAvash joined
[12:57] *** uzl[m] joined
[12:57] *** crystalfrost[m] joined
[12:57] *** MitarashiDango[m joined
[12:59] <lizmat> ok, so then there wouldn't be an issue with putting the initializing in a BEGIN block

[13:06] *** Xliff joined
[13:06] <Xliff> lizmat: I see your change where you attempt to precompile in dependency order.

[13:07] <Xliff> Why not asssume META6.json is in that order and then make tools to minimize the work needed for that to happen?

[13:08] <lizmat> because the META6.json<provides> is a hash without inherent order

[13:08] <Xliff> Oh, crap.

[13:08] <Xliff> I keep forgetting that.

[13:08] <Xliff> Well, I do have this: [8:41 AM] Lakeena Bruno

[13:08] <Xliff> Good Morning. Please have Joe contact the PM to request contract project codes.  Thank you

[13:08] <Xliff> Fahrfignugen. Wrong paste.

[13:08] <lizmat> hehe

[13:08] <Xliff> https://github.com/Xliff/p6-GtkPlus/blob/master/scripts/dependencies.pl6 # right link

[13:09] <Xliff> Would it be helpful to have provides either specified as a list of pairs or a hash?

[13:09] <Xliff> If given as a list of Pairs, then you can assume dependency order?

[13:09] <lizmat> yes... but we need to distinguish two cases, really:

[13:10] <lizmat> initial compilation, and re-compilation after a setting update

[13:10] <lizmat> in the latter case, we *know* the dependencies

[13:12] <Xliff> A provides using "[]" instead of "{}" would work in both cases, neh?

[13:13] <lizmat> Xliff: in any case, I've been doing a lot of testing out of ideas in the past days, and will come back with some a problem solving issue most likely

[13:13] <Xliff> OK. Works for me!

[13:13] <lizmat> which should describe a path in which testing and installing would only require precompilation once

[13:13] <Xliff> Oh. That makes me so happy.

[13:14] <lizmat> the only tricky bit is really getting rid of "use lib" in test-files

[13:28] *** hankache joined
[13:32] *** hankache left
[14:56] *** ggoebel left
[15:00] *** ggoebel joined
[16:08] *** MasterDuke joined
[16:53] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/03/28/2022-13-roadmapping/

[17:28] *** sena_kun left
[17:29] *** sena_kun joined
[17:51] *** sena_kun left
[17:51] <sjn> lizmat++ #RWN

[17:52] *** sena_kun joined
[18:33] *** hankache joined
[18:53] *** hankache left
[23:19] *** Xliff left
