[00:07] *** reportable6 left
[00:10] *** reportable6 joined
[00:44] <lizmat> nine: OOC, could you explain why reverting 6b50a940af7721 fixes a problem?

[00:44] *** linkable6 left
[00:45] <lizmat> cause I'd like to understand what I did wrong!

[00:45] *** linkable6 joined
[01:42] *** vrurg left
[01:42] *** vrurg_ joined
[02:42] *** reportable6 left
[02:42] *** bloatable6 left
[02:42] *** evalable6 left
[02:42] *** benchable6 left
[02:42] *** releasable6 left
[02:42] *** bisectable6 left
[02:42] *** nativecallable6 left
[02:42] *** shareable6 left
[02:42] *** tellable6 left
[02:42] *** quotable6 left
[02:42] *** linkable6 left
[02:42] *** notable6 left
[02:42] *** sourceable6 left
[02:42] *** greppable6 left
[02:42] *** committable6 left
[02:42] *** coverable6 left
[02:42] *** unicodable6 left
[02:42] *** statisfiable6 left
[02:42] *** squashable6 left
[02:42] *** statisfiable6 joined
[02:43] *** sourceable6 joined
[02:43] *** notable6 joined
[02:43] *** benchable6 joined
[02:43] *** bloatable6 joined
[02:43] *** linkable6 joined
[02:43] *** greppable6 joined
[02:43] *** shareable6 joined
[02:43] *** tellable6 joined
[02:44] *** coverable6 joined
[02:44] *** releasable6 joined
[02:44] *** quotable6 joined
[02:44] *** reportable6 joined
[02:44] *** bisectable6 joined
[02:44] *** nativecallable6 joined
[02:45] *** committable6 joined
[02:45] *** squashable6 joined
[02:45] *** unicodable6 joined
[02:45] *** evalable6 joined
[03:12] *** vrurg joined
[03:12] *** vrurg_ left
[04:36] *** vrurg left
[04:37] *** vrurg joined
[04:46] *** vrurg_ joined
[04:46] *** vrurg left
[05:27] *** vrurg joined
[05:27] *** vrurg_ left
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[07:08] *** unicodable6 left
[07:08] *** quotable6 left
[07:08] *** bloatable6 left
[07:08] *** committable6 left
[07:08] *** reportable6 left
[07:08] *** releasable6 left
[07:08] *** linkable6 left
[07:08] *** squashable6 left
[07:08] *** tellable6 left
[07:08] *** bisectable6 left
[07:08] *** sourceable6 left
[07:08] *** coverable6 left
[07:08] *** shareable6 left
[07:08] *** nativecallable6 left
[07:08] *** benchable6 left
[07:08] *** evalable6 left
[07:08] *** greppable6 left
[07:08] *** notable6 left
[07:08] *** statisfiable6 left
[07:09] *** linkable6 joined
[07:09] *** sourceable6 joined
[07:09] *** bisectable6 joined
[07:09] *** squashable6 joined
[07:09] *** tellable6 joined
[07:09] *** quotable6 joined
[07:09] *** releasable6 joined
[07:09] *** nativecallable6 joined
[07:10] *** coverable6 joined
[07:10] *** shareable6 joined
[07:10] *** statisfiable6 joined
[07:10] *** reportable6 joined
[07:10] *** committable6 joined
[07:11] *** unicodable6 joined
[07:11] *** evalable6 joined
[07:11] *** benchable6 joined
[07:11] *** notable6 joined
[07:11] *** greppable6 joined
[07:11] *** bloatable6 joined
[07:56] *** vrurg_ joined
[07:56] *** vrurg left
[08:07] *** vrurg joined
[08:07] *** vrurg_ left
[08:17] *** vrurg_ joined
[08:17] *** vrurg left
[08:26] *** vrurg joined
[08:26] *** vrurg_ left
[08:32] <nine> lizmat: I'd have hoped the commit message explains it? Or did you mean reverting "Add CUR::Staging.candidates method"?

[08:37] *** vrurg_ joined
[08:37] *** vrurg left
[08:46] *** vrurg joined
[08:46] *** vrurg_ left
[08:57] *** vrurg_ joined
[08:57] *** vrurg left
[09:09] *** sena_kun joined
[09:13] *** frost joined
[09:31] <Geth> ¦ rakudo/master: 5 commits pushed by (Ben Davies)++, (Christian Bartolomäus)++

[09:31] <Geth> ¦ rakudo/master: 018e549b34 | [JVM] Set UseTransparentHugePages and AggressiveHeaps java flags

[09:31] <Geth> ¦ rakudo/master: 5a57f84e6d | [JVM] Allow parallel class definitions

[09:31] <Geth> ¦ rakudo/master: 18122e023b | [JVM] Remove burdensome UseTransparentHugePages flag

[09:31] <Geth> ¦ rakudo/master: a78033f1d6 | [JVM] Do not produce debug symbols

[09:31] <Geth> ¦ rakudo/master: 30a9d3a40a | Merge pull request #5016 from Kaiepi/jvm-necromancy

[09:31] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/cc7193d0a6d9...30a9d3a40a1b

[10:28] <nine> I still see errors like: Could not open /home/abuild/rpmbuild/BUILDROOT/perl6-Cro-TLS-0.8.7-2.206.x86_64/usr/share/perl6/vendor/sources/B2B08F2B66FB431BA3673FD5666577402EEDE723. Failed to stat file: no such file or directory

[10:50] *** frost left
[10:52] <lizmat> nine: ok, I think I see it now...  but I think there is still an issue if there is a $*REPO in the call stack that is not PROCESS::<$REPO> ?

[10:53] <lizmat> so shouldn't that be: my $precomp = self.precomp-repository;   ??

[11:00] <nine> That's exactly what it is?            my $precomp = self.precomp-repository;

[11:10] <nine> To clarify, I get the "Failed to stat file: no such file directory" errors with "Add CUR::Staging.candidates method" restored, but one of the bugs in it fixed.

[11:10] <nine> So there's yet another one.

[11:14] <nine> And given the error message and what that commit does, I think it's at the heart of the implementation, the new candidate method. This method can now return dists that are contained in the shadowed repository. But candidates is also used by !matching-dist which is in turn used by need.

[11:15] <nine> And need will take a candidate, assume it's one of its own (because why wouldn't it be) and construct paths like my $source-file-name := %meta<source>; my $loader     := $.prefix.add('sources').add($source-file-name);

[11:15] <nine> Of course this path does not point to a file because its using the wrong prefix. lizmat: how is this supposed to work?

[11:18] <lizmat> hmm... that was not in the revert: I was looking at that, so that at least is correct

[11:19] <nine> In which revert?

[11:20] <lizmat> your commit message said it was a revert of 6b50a940af77211709ef87256

[11:20] <lizmat> so I was looking at that, not at the current state of the CURIU code

[11:20] <lizmat> *CURI

[11:20] <nine> No, that's the one commit that I didn't actually revert. I said that my commit was fixing a regression caused by 6b50a940af77211709ef87256

[11:21] <nine> The rest of the packaging problems is caused by "Add CUR::Staging.candidates method"

[11:21] *** linkable6 left
[11:21] <nine> Which I did revert on master. I'm now trying to find out what's actually wrong with it and so far have found two issues and one of them makes me question the whole commit.

[11:24] *** linkable6 joined
[11:26] <lizmat> looking at 50025c1a48dd19 and not having all of that in my quick access memory, I'd say I reacted to a potential issue that ugexe spotted

[11:27] <nine> But what was the plan for loading one of these additional candidates?

[11:28] <lizmat> as it said in the commit message: The candidates should *also* take into account any candidates from the CURI repository it is shadowing.  Spotted by ugexe++

[11:29] <lizmat> and as candidates is not supposed to just return the first, it would return all it could find ?

[11:29] <nine> But how would the winning candidate be loaded if its from a different repo? You can't just have one repo load a candidate from a different repo

[11:30] <lizmat> well, then the API of candidates is abused I guess... because .candidates is just supposed to return all candidates from all repos, is it not ?

[11:44] <nine> I wouldn't know. candidates is not part of the original design. But it has been used for !matching-dist since it's introduction in commit 2d007bf431c173c70bc6f964c5cb8d2da0e5bdae

[11:45] *** linkable6 left
[11:47] <lizmat> not part of the design?  I remember distinctly writing that https://design.perl6.org/S22.html#candidates

[11:48] <nine> It isn't mentioned in https://github.com/rakudo/rakudo/blob/master/docs/module_management.md

[11:48] *** linkable6 joined
[11:51] <lizmat> well, it is mentioned in S22, which is from 2014

[11:52] *** sena_kun left
[11:54] <nine> Anyway as implemented, this just cannot work.

[11:54] *** sena_kun joined
[12:04] <nine> Btw. the commit actually introduces two totally unrelated features and the commit message explains for neither why they would be needed.

[12:07] *** reportable6 left
[12:08] *** reportable6 joined
[12:08] <lizmat> clearly I do not understand the problem, so I'm recusing myself from the CUR* namespace

[12:09] <lizmat> if you feel it is better to revert all of the work I've done there, please do!

[12:09] <nine> Do we leave "Add CUR::Staging.candidates method" reverted then?

[12:09] <lizmat> by all means, If you think it is the better way

[12:09] <lizmat> as I said, I'm recusing myself from the CUR* namespace 

[12:10] <nine> Well I don't have a good idea to make it work as intended. But maybe ugexe does.

[12:10] <lizmat> Well, I thought I had an idea, but clearly I don't understand the problem space properly

[12:19] <lizmat> meanwhile, Inline::Perl5 tests are now skipped when spectesting on master while Inline::Perl5 is installed

[12:22] <lizmat> can't reinstall either  :-(  https://gist.github.com/lizmat/28bc69c2a315b00de0df48179baded45

[12:22] <lizmat> nine ^^

[12:38] <nine> But what's the failure?

[12:39] <nine> zef --debug?

[12:39] <lizmat> gist updated

[12:42] <nine> That output is not helpful :/ Can you try to build it manually?

[12:49] <lizmat> nine: https://gist.github.com/lizmat/01892c51416f6702e5c43026ba8bd023

[12:50] <nine> Doesn't like nice but it's just warnings

[12:51] <lizmat> just added make install output

[12:55] <nine> Can you please try rakudo /path/to/your/rakudo/tools/install-dist.p6 --to=home

[12:56] <lizmat> only output: make: Nothing to be done for `all'.

[12:56] <lizmat> seems to have installed

[12:56] <nine> No output is actually good.

[12:57] <nine> Then I have no idea what zef's problem is

[13:01] <lizmat> pretty sure it used to work until a few rakudo commits ago... want me to check that ?

[13:01] <nine> Please, yes. Would be nice to get to a stable state again.

[13:04] <lizmat> % zef uninstall Inline::Perl5

[13:04] <lizmat> ===> Uninstalled from inst#/Users/liz/.raku

[13:04] <lizmat> Inline::Perl5:ver<0.60>:auth<github:niner>

[13:04] <lizmat> that's correct, right?

[13:06] <nine> yep

[13:08] *** linkable6 left
[13:08] *** evalable6 left
[13:08] <lizmat> on 90709d5334d59f2e292fd "make install" fails

[13:10] *** evalable6 joined
[13:11] *** linkable6 joined
[13:18] <lizmat> looks like installing Inline::Perl5 stopped working at 7342d9dc28f7f3056f574b9f841064e2f396eb7d

[13:18] <lizmat> at least

[13:19] *** linkable6 left
[13:19] <lizmat> I don't want to go further back, as that will completely screw up my local installation :-(

[13:21] *** linkable6 joined
[13:21] *** sena_kun left
[13:53] <nine> at or before?

[13:54] <nine> For such tests I just use a separate installation.

[13:54] <lizmat> at

[13:56] <nine> That commit brings just one nqp commit which is a MoarVM bump which brings the fallback resolver and Add missing :deoptallpoint flags to invokish ops

[13:57] <lizmat> right

[13:57] <nine> No hypothesis how any of that can break Inline::Perl5. Much less only on your system.

[14:00] <nine> lizmat: can you try going back on those individual MoarVM commits?

[14:00] <lizmat> well, if it is only me, I can live with that

[14:01] <lizmat> no, not right now: trying to wrap up App::Rak 0.1 at the moment... and I don't want to deal with further breakage at

[14:01] <lizmat> *atm

[14:03] <lizmat> maybe tomorrow after the Weekly

[14:16] *** dogbert17 joined
[15:36] *** vrurg_ left
[15:37] *** vrurg joined
[16:47] *** vrurg_ joined
[16:47] *** vrurg left
[17:39] *** hythm joined
[17:42] <hythm> Speaking of "Add CUR::Staging.candidates method" commit, Staging Inline::Perl5 started failing for me and complaining about not able to find `dist` file. the error was coming from `Inline::Perl5::Interpreter` module.

[17:42] <hythm> so I created a minimal example of `Inline::Perl5::Interpreter` to minimize the code. now after reverting "Add CUR::Staging.candidates method" staging Inline::Perl5 started working again, but the minimal example , now showing different error:

[17:42] <hythm> `Cannot locate native library '/tmp/workdir/stage/resources/lib705D783E180D440A8BE0A0832525197FF9B9FF6C..so'`

[17:43] <hythm> looks like it is calling `platform-library-name` on the already compiled resource. Its confusing so I'm not sure if it's a genuine bug or I messed something when creating the minimal example of `Inline::Perl5::Interpreter`. more information is on this comment https://github.com/rakudo/rakudo/issues/4949#issuecomment-1261577747

[18:06] *** reportable6 left
[18:07] *** reportable6 joined
[18:40] *** sena_kun joined
[19:11] *** sena_kun left
[19:11] *** sena_kun joined
[19:14] *** Altai-man joined
[19:16] *** sena_kun left
[19:28] *** vrurg joined
[19:28] *** vrurg_ left
[19:43] *** epony left
[19:52] *** vrurg_ joined
[19:52] *** vrurg left
[19:57] <Geth> ¦ nqp: ebff3c7aba | (Christian Bartolomäus)++ | 2 files

[19:57] <Geth> ¦ nqp: [JVM] Handle unicode numbers in nqp::radix(_I)

[19:57] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/ebff3c7aba

[19:57] <Geth> ¦ nqp: bddcbca4b7 | (Christian Bartolomäus)++ | src/vm/jvm/runtime/org/raku/nqp/runtime/Ops.java

[19:57] <Geth> ¦ nqp: [JVM] Support unicode numbers in Rakudo better

[19:57] <Geth> ¦ nqp: 

[19:57] <Geth> ¦ nqp: This is everything but a proper implementation of getuniprop_str and

[19:57] <Geth> ¦ nqp: unipropcode. But it makes the evaluations mentioned in

[19:57] <Geth> ¦ nqp: https://github.com/rakudo/rakudo/issues/4760 work on the JVM backend.

[19:57] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/bddcbca4b7

[20:37] *** epony joined
[20:50] <nine> hythm: it should work fine on rakudo master

[21:33] <hythm> nine: rephrasing my previous statements, this gist https://gist.github.com/hythm7/d41cdd318cbc236fe14c6966786c1e20 is an attempt to reproduce an issue I saw during staging Inline::Perl5.

[21:33] <hythm> at this commit 50025c1a "Add CUR::Staging.candidates method" it gives this error: "Failed to open file /home/hythm/.raku/dist/0A9FF6017CA75303FC6271D4E739E7D0C7AC83FB: No such file or directory". on master (just built now) gives a different error "Cannot locate native library

[21:33] <hythm> '/tmp/workdir/stage/resources/lib705D783E180D440A8BE0A0832525197FF9B9FF6C..so': /tmp/workdir/stage/resources/lib705D783E180D440A8BE0A0832525197FF9B9FF6C..so: cannot open shared object file: No such file or directory".

[21:33] <hythm> so staging Inline::Perl5 at "Add CUR::Staging.candidates method" commit fails, on master works. while, the gist mentioned above at "Add CUR::Staging.candidates method" fails, and on master, gives a different error. so I'm trying to know if its a genuine bug, or I just messed something when making the minimal example (of Inline::Perl5::Interpreter)

[21:33] <hythm> in the gist.

[21:34] *** linkable6 left
[21:36] *** linkable6 joined
[22:36] *** linkable6 left
[22:36] *** evalable6 left
[22:38] *** evalable6 joined
[22:39] *** linkable6 joined
[22:48] *** Altai-man left
[23:04] *** epony left
