[00:01] *** samcv joined
[00:07] <Geth> ¦ rakudo: codesections++ created pull request #4788: Fix typo'd missing : in .nominal_type signature
[00:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4788
[00:07] *** reportable6 left
[01:07] *** reportable6 joined
[02:21] *** nativecallable6 left
[02:21] *** unicodable6 left
[02:21] *** committable6 left
[02:21] *** bloatable6 left
[02:21] *** greppable6 left
[02:21] *** shareable6 left
[02:21] *** notable6 left
[02:21] *** releasable6 left
[02:21] *** bisectable6 left
[02:21] *** squashable6 left
[02:21] *** quotable6 left
[02:21] *** benchable6 left
[02:21] *** evalable6 left
[02:21] *** sourceable6 left
[02:21] *** reportable6 left
[02:21] *** tellable6 left
[02:21] *** linkable6 left
[02:21] *** statisfiable6 left
[02:21] *** coverable6 left
[02:21] *** nativecallable6 joined
[02:22] *** coverable6 joined
[02:22] *** reportable6 joined
[02:22] *** quotable6 joined
[02:22] *** benchable6 joined
[02:22] *** tellable6 joined
[02:23] *** unicodable6 joined
[02:23] *** notable6 joined
[02:23] *** greppable6 joined
[02:23] *** statisfiable6 joined
[02:23] *** committable6 joined
[02:23] *** squashable6 joined
[02:24] *** releasable6 joined
[02:35] *** Kaipi left
[02:35] *** Kaipi joined
[03:14] *** frost joined
[03:21] *** evalable6 joined
[03:22] *** shareable6 joined
[03:22] *** linkable6 joined
[03:23] *** bisectable6 joined
[03:41] *** frost left
[04:06] *** discord-raku-bot left
[04:07] *** discord-raku-bot joined
[04:10] <Geth> ¦ roast: codesections++ created pull request #799: Un-todo passing test
[04:10] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/799
[05:03] *** Kaipi left
[05:04] *** Kaipi joined
[05:22] *** bloatable6 joined
[05:51] *** camelia left
[05:51] *** zostay left
[05:51] *** kjp left
[05:51] *** Geth left
[05:51] *** codesections left
[05:51] *** maettu left
[05:51] *** ilogger2 left
[05:52] *** dogbert11 left
[05:52] *** ilogger2 joined
[05:52] *** maettu joined
[05:52] *** codesections joined
[05:52] *** Geth joined
[05:52] *** kjp joined
[05:52] *** zostay joined
[05:53] *** bloatable6 joined
[05:53] *** Kaipi joined
[05:53] *** discord-raku-bot joined
[05:53] *** bisectable6 joined
[05:53] *** linkable6 joined
[05:53] *** shareable6 joined
[05:53] *** evalable6 joined
[05:53] *** releasable6 joined
[05:53] *** squashable6 joined
[05:53] *** committable6 joined
[05:53] *** statisfiable6 joined
[05:53] *** greppable6 joined
[05:53] *** notable6 joined
[05:53] *** unicodable6 joined
[05:53] *** tellable6 joined
[05:53] *** benchable6 joined
[05:53] *** quotable6 joined
[05:53] *** reportable6 joined
[05:53] *** coverable6 joined
[05:53] *** nativecallable6 joined
[05:53] *** samcv joined
[05:53] *** AlexDaniel joined
[05:53] *** CIAvash joined
[05:53] *** Altai-man joined
[05:53] *** nebuchadnezzar joined
[05:53] *** dogbert11 joined
[05:53] *** MasterDuke joined
[05:53] *** [Tux] joined
[05:53] *** Voldenet joined
[05:53] *** japhb joined
[05:53] *** andinus joined
[05:53] *** qorg11 joined
[05:53] *** vrurg joined
[05:53] *** [Coke] joined
[05:53] *** elcaro joined
[05:53] *** timo joined
[05:53] *** tbrowder joined
[05:53] *** sivoais joined
[05:53] *** RakuIRCLogger joined
[05:53] *** lizmat joined
[05:53] *** TempIRCLogger joined
[05:53] *** nine joined
[05:53] *** sjn joined
[05:53] *** djinni` joined
[05:53] *** moon-child joined
[05:53] *** JRaspass joined
[05:53] *** jdv joined
[05:53] *** masak joined
[05:53] *** leont joined
[05:53] *** kawaii_ joined
[05:53] *** rba joined
[05:53] *** tonyo joined
[05:53] *** bartolin_ joined
[05:53] *** gfldex joined
[05:53] *** lucs joined
[05:53] *** patrickb joined
[05:53] *** SmokeMachine joined
[05:53] *** ugexe joined
[05:53] *** eof joined
[05:53] *** jjatria joined
[05:53] *** rypervenche joined
[05:53] *** Util joined
[05:53] *** samebchase joined
[05:54] *** zostay joined
[05:55] *** jjatria left
[05:55] *** jjatria joined
[06:02] *** camelia joined
[06:08] *** reportable6 left
[06:54] <Geth> ¦ nqp: 025cb0404d | (Christian Bartolomäus)++ | src/vm/jvm/runtime/org/raku/nqp/runtime/Ops.java
[06:54] <Geth> ¦ nqp: [JVM] Add missing methods (bind|get)lex_u_si
[06:54] <Geth> ¦ nqp: 
[06:54] <Geth> ¦ nqp: At least getlex_u_si is called in S09-typed-arrays/native-int.t and
[06:54] <Geth> ¦ nqp: friends after recent uintificatation of native arrays in Rakudo.
[06:54] <Geth> ¦ nqp: The methods behave exactly like the *_i_si versions for now.
[06:54] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/025cb0404d
[06:54] <Geth> ¦ nqp: dd42216e7f | niner++ (committed using GitHub Web editor) | src/vm/jvm/runtime/org/raku/nqp/runtime/Ops.java
[06:54] <Geth> ¦ nqp: Merge pull request #765 from usev6/jvm_getlex_u_si
[06:54] <Geth> ¦ nqp: 
[06:54] <Geth> ¦ nqp: [JVM] Add missing methods (bind|get)lex_u_si
[06:54] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/dd42216e7f
[07:08] *** evalable6 left
[07:08] *** linkable6 left
[07:10] *** reportable6 joined
[07:10] *** linkable6 joined
[07:36] <bartolin_> good morning, just wanted to note that seemingly de9eeeb2cb broke a lot of spectests on the jvm backend. (e.g. S03-sequence/misc.t). It complains with 'java.lang.ClassCastException: class java.lang.Long cannot be cast to class org.raku.nqp.sixmodel.SixModelObject' in AT_POS_CONTAINER. I don't have time to look closer atm, but wanted to report it quickly.
[07:37] *** linkable6 left
[08:10] *** frost joined
[08:38] <patrickb> o/
[08:39] <patrickb> jdv, MasterDuke, rba: I just requested an increase of parallel jobs on Azure CI for all three of our projects (rakudo, nqp and MoarVM).
[08:40] *** linkable6 joined
[08:44] *** frost left
[08:48] *** squashable6 left
[09:08] <lizmat> Files=1351, Tests=117098, 292 wallclock secs (35.56 usr 10.16 sys + 4050.11 cusr 341.90 csys = 4437.73 CPU)
[09:08] <lizmat> bartolin_ : ok, will fix
[09:10] *** frost joined
[09:11] <Geth> ¦ rakudo: 59dcca66f1 | (Daniel Sockwell)++ (committed using GitHub Web editor) | src/core.c/Parameter.pm6
[09:11] <Geth> ¦ rakudo: Fix typo'd missing : in .nominal_type signature (#4788)
[09:11] <Geth> ¦ rakudo: 
[09:11] <Geth> ¦ rakudo: The Parameter.nominal_type method had a signature that clearly
[09:11] <Geth> ¦ rakudo: intended to constrain the invocant to be :D, but was missing the
[09:11] <Geth> ¦ rakudo: trailing :
[09:11] <Geth> ¦ rakudo: 
[09:11] <Geth> ¦ rakudo: Fixing this issue causes a TODO'ed Roast test to pass.
[09:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/59dcca66f1
[09:11] *** linkable6 left
[09:13] <Geth> ¦ rakudo: a71ec34592 | (Elizabeth Mattijsen)++ | src/core.c/Array.pm6
[09:13] <Geth> ¦ rakudo: Hopefully fix JVM breakage
[09:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a71ec34592
[09:14] <lizmat> j: my int $a = 42; sub a(uint $b) { dd }; a $a
[09:14] <camelia> rakudo-jvm : OUTPUT: «Can't open perl script "/home/camelia/rakudo-j-inst/bin/eval-client.pl": No such file or directory␤»
[09:14] <lizmat> meh
[09:14] <lizmat> bartolin_: could you check if "my int $a = 42; sub a(uint $b) { dd }; a $a" fails on the JVM ?  if so, then a71ec34592 should fix breakage
[09:17] <Geth> ¦ roast: 938a77f299 | (Daniel Sockwell)++ (committed using GitHub Web editor) | S09-hashes/objecthash.t
[09:17] <Geth> ¦ roast: Un-todo passing test (#799)
[09:17] <Geth> ¦ roast: 
[09:17] <Geth> ¦ roast: After fixing a Rakudo bug, the todo'ed test of using Mu as a Hash key
[09:17] <Geth> ¦ roast: now passes.
[09:17] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/938a77f299
[09:18] <nine> lizmat: int is certainly correct there since AT_POS_CONTAINER is called with an int and ContainerDescriptor::BindArrayPos's $!pos is also int
[09:19] <lizmat> maybe that should be an uint as well ?
[09:22] *** sourceable6 joined
[09:26] <nine> Nah, because it's used as argument for bindpos which takes an int
[09:27] <nine> In theory that could become a uint as well. But it's unsure if it's worth the hassle
[09:30] <lizmat> that cannot be a uint unless we want to break the regex engine afaik
[09:30] <lizmat> m: use nqp; my $l := nqp::list(1,2,3); nqp::bindpos($l,-1,42); dd $l
[09:30] <camelia> rakudo-moar fafcca315: OUTPUT: «(1, 2, 42)␤»
[09:30] <lizmat> nqp uses this old Perl feature internally extensively afaik
[09:36] *** frost left
[09:48] *** squashable6 joined
[09:54] <nine> So that'd be another elaborate project
[10:02] <lizmat> yeah, it would...
[11:09] *** evalable6 joined
[11:13] *** linkable6 joined
[11:27] *** sena_kun joined
[12:08] *** reportable6 left
[12:09] *** reportable6 joined
[13:08] *** discord-raku-bot left
[13:08] *** discord-raku-bot joined
[15:12] *** quotable6 left
[15:12] *** committable6 left
[15:12] *** bloatable6 left
[15:12] *** nativecallable6 left
[15:12] *** reportable6 left
[15:12] *** bisectable6 left
[15:12] *** greppable6 left
[15:12] *** notable6 left
[15:12] *** shareable6 left
[15:12] *** tellable6 left
[15:12] *** benchable6 left
[15:12] *** linkable6 left
[15:12] *** coverable6 left
[15:12] *** releasable6 left
[15:12] *** unicodable6 left
[15:12] *** evalable6 left
[15:12] *** squashable6 left
[15:12] *** statisfiable6 left
[15:12] *** sourceable6 left
[15:12] *** evalable6 joined
[15:13] *** notable6 joined
[15:13] *** committable6 joined
[15:13] *** statisfiable6 joined
[15:14] *** shareable6 joined
[15:14] *** sourceable6 joined
[15:14] *** tellable6 joined
[15:15] *** bisectable6 joined
[15:15] *** releasable6 joined
[15:18] <lizmat> notable6: weekly
[15:18] <notable6> lizmat, 3 notes: https://gist.github.com/59809324aececc5fad799210dd0d2d15
[15:24] <lizmat> notable6: weekly reset
[15:24] <notable6> lizmat, Moved existing notes to “weekly_2022-02-14T15:24:01Z”
[15:57] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/02/14/2022-07-unsigned-released/
[16:13] *** squashable6 joined
[16:14] *** coverable6 joined
[16:14] *** bloatable6 joined
[16:14] *** nativecallable6 joined
[16:14] *** benchable6 joined
[16:14] *** quotable6 joined
[16:55] <codesections> bisectable6: my :($a, $b)
[16:55] <bisectable6> codesections, Will bisect the whole range automagically because no endpoints were provided, hang tight
[16:55] <bisectable6> codesections, ¦6c (61 commits): «4===SORRY!4=== Error while compiling /tmp/981BJBHDXV␤Malformed my␤at /tmp/981BJBHDXV:1␤------> 3my8⏏4 :($a, $b)␤ «exit code = 1»»
[16:55] <bisectable6> codesections, Nothing to bisect!
[16:58] <codesections> S02 says "Declarators generally make the colon optional:    my ($a,$b,$c);      # parsed as signature", but from ^^^^ it looks like it's not **optional**, it's forbidden.  Does anyone know if that's intentional or a bug?
[17:12] *** greppable6 joined
[17:14] *** linkable6 joined
[17:32] <Geth> ¦ roast: codesections++ created pull request #800: Add tests for re-binding
[17:32] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/800
[18:08] *** reportable6 joined
[18:18] <Geth> ¦ Pythonic-Str/main: 12 commits pushed by (Zoffix Znet)++, (Elizabeth Mattijsen)++
[18:18] <Geth> ¦ Pythonic-Str/main: review: https://github.com/raku-community-modules/Pythonic-Str/compare/27e9de7dd1bb^...6688ff33bff7
[18:19] <lizmat> que?
[18:21] *** sena_kun left
[18:26] <ugexe> branch master -> main rename maybe?
[18:30] <leont> Yeah, I was thinking the same
[18:33] <bartolin_> lizmat: a71ec34592 helped with most spectest breakage. There is still something off -- 'for ^1 -> int $from { }' fails with the same error I've postead this morning. That's probably ce07254a85 -- it doesn't happen with --optimize=off
[18:33] <bartolin_> and btw, thanks for yet another weekly :)
[18:34] <Geth> ¦ rakudo: b5f49ace1d | (Elizabeth Mattijsen)++ | src/Perl6/Optimizer.nqp
[18:34] <Geth> ¦ rakudo: Revert "Optimize simple ^42 loops with uint rather than int"
[18:34] <Geth> ¦ rakudo: 
[18:34] <Geth> ¦ rakudo: This reverts commit ce07254a857e5868a6d1c4f31bbeb2943a201317.
[18:34] <Geth> ¦ rakudo: 
[18:34] <Geth> ¦ rakudo: The JVM backend is not ready for it
[18:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b5f49ace1d
[18:35] <lizmat> ugexe  leont I've renamed branches before in raku-community-modules, it never did that before
[18:35] <lizmat> hence my que?
[19:01] <Geth> ¦ Pythonic-Str/main: 836600d8cf | (Elizabeth Mattijsen)++ | 16 files
[19:01] <Geth> ¦ Pythonic-Str/main: Migrated to zef ecosystem
[19:01] <Geth> ¦ Pythonic-Str/main: review: https://github.com/raku-community-modules/Pythonic-Str/commit/836600d8cf
[19:04] <Geth> ¦ Pythonic-Str/main: e6e77276af | (Elizabeth Mattijsen)++ | 2 files
[19:04] <Geth> ¦ Pythonic-Str/main: 1.1
[19:04] <Geth> ¦ Pythonic-Str/main: review: https://github.com/raku-community-modules/Pythonic-Str/commit/e6e77276af
[19:13] *** unicodable6 joined
[19:17] *** vrurg left
[19:18] *** vrurg joined
[19:18] *** vrurg left
[19:18] *** vrurg joined
[19:18] *** vrurg left
[19:19] *** vrurg joined
[19:24] <MasterDuke> patrickb: thanks, looks like things are good now
[19:26] *** vrurg left
[20:25] *** vrurg joined
[20:25] *** vrurg left
[21:19] <[Tux]> Rakudo v2022.02-29-ga71ec3459 (v6.d) on MoarVM 2022.02-1-g0539ead63
[21:19] <[Tux]> csv-test-xs-20      0.414 -  0.418
[21:19] <[Tux]> csv-ip5xs           0.768 -  0.785
[21:19] <[Tux]> test-t --race       0.857 -  0.858
[21:19] <[Tux]> test-t              1.487 -  1.507
[21:19] <[Tux]> csv-parser          3.889 -  3.989
[21:19] <[Tux]> csv-ip5xs-20        4.909 -  4.966
[21:19] <[Tux]> test                6.599 -  6.753
[21:19] <[Tux]> test-t-20 --race    7.229 -  7.233
[21:19] <[Tux]> test-t-20          22.275 - 22.493
[21:19] <[Tux]>  5 2022-01-31 17:20:41 test-t 1.494
[21:19] <[Tux]>  4 2022-01-31 17:22:22 test-t 1.493
[21:19] <[Tux]>  3 2022-02-13 10:34:59 test-t 1.492
[21:19] <[Tux]>  2 2022-02-13 10:36:39 test-t 1.490
[21:19] <[Tux]>  1 2022-02-14 19:32:28 test-t 1.487
[21:24] <japhb> [Tux]: Did you get a chance to check which CPU frequency governor you were using on that box?
[21:24] <[Tux]> I did not see a question about that. How to check?
[21:24] <lizmat> nice!
[21:25] <[Tux]> Before every test run I execute this: `sudo cpupower frequency-set -g performance`
[21:25] <japhb> Ah, that answers that question.  :-)
[21:26] <japhb> I was about to say cpupower frequency-info or cpufreq-info will both answer that question, but if you're setting it directly, that covers that.
[21:35] *** linkable6 left
[21:38] *** linkable6 joined
[22:04] <gfldex> Is there a reason why Channel got a method iterator but doesn't Iterable? (That caused an ENODOC.)
[22:08] *** linkable6 left
[22:10] *** linkable6 joined
[22:16] <leont> Making it Iterable would make it do interesting things wrt single-arg rule, right?
[22:37] <gfldex> Not really. +@ is also looking for .VAR so Iterable stuff is passed on as a single value.
[22:48] <leont> Right
[23:16] <Geth> ¦ rakudo: 65507b89d0 | (Elizabeth Mattijsen)++ | 2 files
[23:16] <Geth> ¦ rakudo: Generate the SignedBuf/UnsignedBuf roles
[23:16] <Geth> ¦ rakudo: 
[23:16] <Geth> ¦ rakudo: So that we only need to maintain one set of code
[23:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/65507b89d0
[23:17] <Geth> ¦ roast: 4018fb3e3f | (Elizabeth Mattijsen)++ | S09-hashes/objecthash.t
[23:17] <Geth> ¦ roast: UnTODO now passing test
[23:17] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/4018fb3e3f
[23:38] <Geth> ¦ rakudo: codesections++ created pull request #4790: Allow optional : on LHS of signature binding declaration
[23:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4790
