[16:58] *** Geth left
[16:58] *** Geth joined
[17:00] <Geth> ¦ rakudo/main: dacdebeb6d | (Elizabeth Mattijsen)++ | 2 files

[17:00] <Geth> ¦ rakudo/main: RakuAST: fix several aspects of colonpairs handling

[17:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/dacdebeb6d

[17:00] <Geth> ¦ rakudo/main: 1e5de1231d | (Elizabeth Mattijsen)++ | src/Raku/ast/expressions.rakumod

[17:00] <Geth> ¦ rakudo/main: RakuAST: make adverbs on array indices work

[17:00] <Geth> ¦ rakudo/main: 

[17:00] <Geth> ¦ rakudo/main: Apparently, these were simply forgotten to be added

[17:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1e5de1231d

[17:01] <lizmat> 968  +7  !!

[17:29] *** Geth left
[17:29] *** Geth joined
[17:41] <Geth> ¦ rakudo/main: 0c5f5ddb2c | (Elizabeth Mattijsen)++ | t/12-rakuast/postfix.rakutest

[17:41] <Geth> ¦ rakudo/main: RakuAST: add tests for postfixes with colonpairs

[17:41] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0c5f5ddb2c

[18:03] <ab5tract_> lizmat++

[18:03] <ab5tract_> nice one!

[18:17] *** bartolin left
[18:22] *** bartolin joined
[18:39] <ab5tract_> ok, the `FIRST` PR now has tests, doesn't use intrusive approaches to (not) sinking, and has working `FIRST` wherever state variables are sold

[18:40] <ab5tract_> oh, and `my $uid = FIRST unique-id` is working too

[20:06] <Geth> ¦ roast: usev6++ created pull request #844: Add test for issue 4700 in old issue tracker

[20:06] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/844

[20:37] <bartolin> I'd like to hear some opinions about the topic "PR vs. committing directly". Being influenced by $day-job (and maybe/hopefully also due to becoming a bit wiser) I lean towards creating a PR for nearly everything. But then resources are scarce and creating pull requests just to watch them getting of age doesn't help much. (No offense meant.)

[20:38] <bartolin> Probably the question is too generic, so the most sensible answer is "it depends"?

[20:44] <bartolin> But to take some examples: The above PR, https://github.com/rakudo/rakudo/pull/5379 or https://github.com/Raku/nqp/pull/809: Would you be fine with me committing such things directly or do you prefer pull requests? (Related: Do you do a kind of "post review" for commits to main anyway, so that really bad patches would be caught?)

[20:51] <codesections> I'd like others to weigh in too, but bartolin imo PRs for non-trivial changes are a good idea **but** merging your own PR after a few days of non-objection is fine too

[20:52] <codesections> iirc lizmat changed from mostly commiting directly to mostly (always?) opening a PR

[21:12] <bartolin> Thanks for the first feedback. Sounds reasonable to me. Let's see if there are other opinions.

[21:25] <lizmat> I most definitely only make PRs for something I think might be controversial

[21:25] <lizmat> I get that wrong sometimes

[22:14] *** Geth left
[22:14] *** Geth joined
[22:18] *** Geth left
[22:18] *** Geth joined
[22:48] <ugexe> i like PRs because they show you if your code works via the CI. i don't even run the spec tests locally anymore cause the CI runs one

