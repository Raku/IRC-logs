[04:08] *** [Coke] left
[04:15] *** [Coke] joined
[04:41] *** dogbert11 left
[07:32] <ab5tract_> this test file is failing for me in `main`: `t/spec/6.c/S32-io/file-tests.t`
[07:32] <ab5tract_> is this affecting anyone else?
[07:33] <ab5tract_> (`RAKUDO_RAKUAST=1`)
[07:35] <ab5tract_> nine: I don't know about that. the thingies I'm unsinking seem to have been sunk already. Otherwise my unsinking would get re-sunk, no?
[07:37] <ab5tract_> anyway, here's the approach I took: https://github.com/rakudo/rakudo/pull/5409/commits/047d366b61d8bb8829831673669c2a5625a9ba4d
[08:06] <ab5tract_> but something's wrong there
[08:45] *** sena_kun joined
[09:44] *** sena_kun left
[09:49] <Geth> ¦ File-Find/2colours-CI-patch: 8b767353f2 | (Márton Polgár)++ (committed using GitHub Web editor) | .github/workflows/windows-spec.yml
[09:49] <Geth> ¦ File-Find/2colours-CI-patch: More useful CI for Windows
[09:49] <Geth> ¦ File-Find/2colours-CI-patch: review: https://github.com/raku-community-modules/File-Find/commit/8b767353f2
[09:49] <Geth> ¦ File-Find: 2colours++ created pull request #46: More useful CI for Windows
[09:49] <Geth> ¦ File-Find: review: https://github.com/raku-community-modules/File-Find/pull/46
[09:51] <Geth> ¦ File-Find/2colours-CI-patch: 6afeda46c1 | (Márton Polgár)++ (committed using GitHub Web editor) | .github/workflows/macos.yml
[09:51] <Geth> ¦ File-Find/2colours-CI-patch: More useful CI for Mac
[09:51] <Geth> ¦ File-Find/2colours-CI-patch: review: https://github.com/raku-community-modules/File-Find/commit/6afeda46c1
[09:51] <Geth> ¦ File-Find/2colours-CI-patch: 035a2f9708 | (Márton Polgár)++ (committed using GitHub Web editor) | .github/workflows/linux.yml
[09:51] <Geth> ¦ File-Find/2colours-CI-patch: More usful CI for Ubuntu
[09:51] <Geth> ¦ File-Find/2colours-CI-patch: review: https://github.com/raku-community-modules/File-Find/commit/035a2f9708
[09:52] <Geth> ¦ File-Find/main: 4 commits pushed by (Márton Polgár)++
[09:52] <Geth> ¦ File-Find/main: 8b767353f2 | More useful CI for Windows
[09:52] <Geth> ¦ File-Find/main: 6afeda46c1 | More useful CI for Mac
[09:52] <Geth> ¦ File-Find/main: 035a2f9708 | More usful CI for Ubuntu
[09:52] <Geth> ¦ File-Find/main: 8e82faaf0e | Merge pull request #46 from raku-community-modules/2colours-CI-patch
[09:52] <Geth> ¦ File-Find/main: review: https://github.com/raku-community-modules/File-Find/compare/4f1318dc54d6...8e82faaf0e52
[10:01] <Geth> ¦ rakudo/main: dd24f978be | (Elizabeth Mattijsen)++ | 3 files
[10:01] <Geth> ¦ rakudo/main: RakuAST: unbreak POST phaser
[10:01] <Geth> ¦ rakudo/main: 
[10:01] <Geth> ¦ rakudo/main: This was borked in 934f806358b5233f
[10:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/dd24f978be
[10:37] <Geth> ¦ rakudo/main: a5d947d90e | (Elizabeth Mattijsen)++ | 3 files
[10:37] <Geth> ¦ rakudo/main: RakuAST: colonpairs in postfix ops no .raku|DEPARSE ok
[10:37] <Geth> ¦ rakudo/main: 
[10:37] <Geth> ¦ rakudo/main: This required allowing :colonpairs to be specified on several postfixy
[10:37] <Geth> ¦ rakudo/main: ops to allow for a single statement .raku representation.
[10:37] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a5d947d90e
[10:47] <Geth> ¦ rakudo/main: 5 commits pushed by (Elizabeth Mattijsen)++
[10:47] <Geth> ¦ rakudo/main: ee062e9d0d | * (create postfix.rakutest)
[10:47] <Geth> ¦ rakudo/main: fa812743dd | * (keep operators.rakutest)
[10:47] <Geth> ¦ rakudo/main: ca1f20c92d | * (merge)
[10:47] <Geth> ¦ rakudo/main: ea1ea2d122 | Copied (with git history):
[10:47] <Geth> ¦ rakudo/main: 8bc5bdd5a3 | RakuAST: finalize splitting off postfix op tests
[10:47] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/a5d947d90e8d...8bc5bdd5a3c5
[10:47] <[Tux]> Rakudo v2023.09-82-g934f80635 (v6.d) on MoarVM 2023.09-1-g7abf85f94
[10:47] <[Tux]> csv-test-xs-20      0.356 -  0.384
[10:47] <[Tux]> csv-ip5xs           0.838 -  0.861
[10:47] <[Tux]> test-t --race       0.842 -  0.917
[10:47] <[Tux]> test-t              1.446 -  1.635
[10:47] <[Tux]> csv-parser          3.715 -  4.004
[10:47] <[Tux]> csv-ip5xs-20        5.530 -  6.378
[10:47] <[Tux]> test                6.395 -  7.584
[10:47] <[Tux]> test-t-20 --race    7.119 -  7.585
[10:47] <[Tux]> test-t-20          20.075 - 20.868
[11:02] <Geth> ¦ rakudo/main: aa5f512ba2 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Deparse.rakumod
[11:02] <Geth> ¦ rakudo/main: RakuAST: deparse colonpairs only once
[11:02] <Geth> ¦ rakudo/main: 
[11:02] <Geth> ¦ rakudo/main: Each postfix op is responsible for its colonpairs, so don't also do
[11:02] <Geth> ¦ rakudo/main: this when applying one
[11:02] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/aa5f512ba2
[11:38] *** ilogger2 joined
[13:31] <Geth> ¦ Benchmark/main: a62fce1d7d | (Márton Polgár)++ (committed using GitHub Web editor) | .github/workflows/test.yml
[13:31] <Geth> ¦ Benchmark/main: CI shouldn't fail fast
[13:31] <Geth> ¦ Benchmark/main: 
[13:31] <Geth> ¦ Benchmark/main: Updating here as well because I often take this workflow as a reference...
[13:31] <Geth> ¦ Benchmark/main: review: https://github.com/raku-community-modules/Benchmark/commit/a62fce1d7d
[13:44] *** Nemokosch joined
[13:50] *** Nemokosch left
[13:50] *** Nemokosch joined
[14:12] *** Nemokosch left
[14:36] <discord-raku-bot> <nemokosch> ugexe: do you have an idea about this failure? https://github.com/2colours/Term-TablePrint-p6/actions/runs/6484013113/job/17606871883
[14:36] <discord-raku-bot> <nemokosch> succeeds with Mac+latest Rakudo, fails with Mac+august Rakudo
[14:37] <discord-raku-bot> <nemokosch> with fail-fast: false
[14:39] <ugexe> https://github.com/rakudo/rakudo/issues/5357
[14:39] <ugexe> that latest version of zef works around that issue, so you'd have to update zef in that CI or not test on that version of rakudo (which comes with the older zef)
[14:40] <discord-raku-bot> <nemokosch> gotcha
[15:27] <ab5tract_> nine: sooo.... it looks like we are going to have to fudge a bit for DEPARSE and AST to round trip `FIRST` blocks
[15:53] <ab5tract_> I suppose its probably not for the first time
[15:58] <lizmat> ab5tract_: it isn't, see the POST phaser
[16:52] *** RakuIRCLogger joined
[16:57] *** RakuIRCLogger left
[16:57] *** RakuIRCLogger joined
[16:58] *** Geth left
[16:58] *** Geth joined
[17:00] <Geth> ¦ rakudo/main: dacdebeb6d | (Elizabeth Mattijsen)++ | 2 files
[17:00] <Geth> ¦ rakudo/main: RakuAST: fix several aspects of colonpairs handling
[17:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/dacdebeb6d
[17:00] <Geth> ¦ rakudo/main: 1e5de1231d | (Elizabeth Mattijsen)++ | src/Raku/ast/expressions.rakumod
[17:00] <Geth> ¦ rakudo/main: RakuAST: make adverbs on array indices work
[17:00] <Geth> ¦ rakudo/main: 
[17:00] <Geth> ¦ rakudo/main: Apparently, these were simply forgotten to be added
[17:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1e5de1231d
[17:01] <lizmat> 968  +7  !!
[17:29] *** Geth left
[17:29] *** Geth joined
[17:41] <Geth> ¦ rakudo/main: 0c5f5ddb2c | (Elizabeth Mattijsen)++ | t/12-rakuast/postfix.rakutest
[17:41] <Geth> ¦ rakudo/main: RakuAST: add tests for postfixes with colonpairs
[17:41] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0c5f5ddb2c
[18:03] <ab5tract_> lizmat++
[18:03] <ab5tract_> nice one!
[18:17] *** bartolin left
[18:22] *** bartolin joined
[18:39] <ab5tract_> ok, the `FIRST` PR now has tests, doesn't use intrusive approaches to (not) sinking, and has working `FIRST` wherever state variables are sold
[18:40] <ab5tract_> oh, and `my $uid = FIRST unique-id` is working too
[20:06] <Geth> ¦ roast: usev6++ created pull request #844: Add test for issue 4700 in old issue tracker
[20:06] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/844
[20:37] <bartolin> I'd like to hear some opinions about the topic "PR vs. committing directly". Being influenced by $day-job (and maybe/hopefully also due to becoming a bit wiser) I lean towards creating a PR for nearly everything. But then resources are scarce and creating pull requests just to watch them getting of age doesn't help much. (No offense meant.)
[20:38] <bartolin> Probably the question is too generic, so the most sensible answer is "it depends"?
[20:44] <bartolin> But to take some examples: The above PR, https://github.com/rakudo/rakudo/pull/5379 or https://github.com/Raku/nqp/pull/809: Would you be fine with me committing such things directly or do you prefer pull requests? (Related: Do you do a kind of "post review" for commits to main anyway, so that really bad patches would be caught?)
[20:51] <codesections> I'd like others to weigh in too, but bartolin imo PRs for non-trivial changes are a good idea **but** merging your own PR after a few days of non-objection is fine too
[20:52] <codesections> iirc lizmat changed from mostly commiting directly to mostly (always?) opening a PR
[21:12] <bartolin> Thanks for the first feedback. Sounds reasonable to me. Let's see if there are other opinions.
[21:25] <lizmat> I most definitely only make PRs for something I think might be controversial
[21:25] <lizmat> I get that wrong sometimes
[22:14] *** Geth left
[22:14] *** Geth joined
[22:18] *** Geth left
[22:18] *** Geth joined
[22:48] <ugexe> i like PRs because they show you if your code works via the CI. i don't even run the spec tests locally anymore cause the CI runs one
