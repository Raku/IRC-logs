[00:01] *** reportable6 left
[00:02] *** reportable6 joined
[00:07] *** sena_kun left
[00:09] *** sena_kun joined
[01:00] *** sena_kun left
[01:24] <vrurg> greppable6: ParametricRoleHOW

[01:24] <greppable6> vrurg, 8 lines, 6 modules: https://gist.github.com/9f273db44a3e9926cf6251da36424ccb

[02:05] *** linkable6 left
[02:05] *** evalable6 left
[02:06] *** evalable6 joined
[02:08] *** linkable6 joined
[05:03] *** statisfiable6 left
[05:03] *** coverable6 left
[05:03] *** quotable6 left
[05:03] *** benchable6 left
[05:03] *** nativecallable6 left
[05:03] *** squashable6 left
[05:03] *** evalable6 left
[05:03] *** unicodable6 left
[05:03] *** tellable6 left
[05:03] *** committable6 left
[05:03] *** notable6 left
[05:03] *** shareable6 left
[05:03] *** linkable6 left
[05:03] *** reportable6 left
[05:03] *** greppable6 left
[05:03] *** bisectable6 left
[05:03] *** bloatable6 left
[05:03] *** sourceable6 left
[05:03] *** releasable6 left
[05:03] *** shareable6 joined
[05:03] *** nativecallable6 joined
[05:03] *** sourceable6 joined
[05:03] *** tellable6 joined
[05:03] *** statisfiable6 joined
[05:04] *** reportable6 joined
[05:04] *** notable6 joined
[05:04] *** bisectable6 joined
[05:04] *** evalable6 joined
[05:05] *** bloatable6 joined
[05:05] *** linkable6 joined
[05:05] *** greppable6 joined
[05:05] *** benchable6 joined
[05:05] *** releasable6 joined
[05:05] *** committable6 joined
[05:05] *** unicodable6 joined
[05:05] *** quotable6 joined
[05:06] *** squashable6 joined
[05:06] *** coverable6 joined
[05:40] *** Kaipii left
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[08:16] *** linkable6 left
[08:16] *** evalable6 left
[08:17] *** evalable6 joined
[08:19] *** linkable6 joined
[09:19] *** linkable6 left
[09:19] *** evalable6 left
[09:21] *** linkable6 joined
[09:22] *** evalable6 joined
[09:41] *** sena_kun joined
[10:19] *** Kaipii joined
[11:00] *** epony left
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:30] <lizmat> when everybody is back from holiday, I'd like to convene a discussion / jitsi meet on how to progress on RakuAST in 2023

[13:53] <gfldex> fast progress would be nice :)

[13:56] <Geth> ¦ rakudo/main: 5 commits pushed by (Stefan Seifert)++

[13:56] <Geth> ¦ rakudo/main: 6d7b357f4b | RakuAST: Add minimal quotewords support to canonicalizing strings

[13:56] <Geth> ¦ rakudo/main: 512ef78ad1 | RakuAST: First support for custom operators

[13:56] <Geth> ¦ rakudo/main: 7102dc7728 | RakuAST: Set proper operator properties on custom ops

[13:56] <Geth> ¦ rakudo/main: 10894226ad | RakuAST: Add imported categoricals to the grammar

[13:56] <Geth> ¦ rakudo/main: 88b8060a2c | RakuAST: implement isms pragma

[13:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/ddecbe687a62...88b8060a2c6d

[13:56] <nine> That's 600 passing spectests!

[13:57] <nine> lizmat: unfortunately make tests seems to have regressed quite a bit. git bisect points at the "Implement use experimental :rakuast" commit

[14:02] <nine> s/make test/make test/

[14:04] <discord-raku-bot> <Nemokosch> to be honest, the RakuAST frontend doesn't seem very hard to grasp. It might even be easier than the previous way of doing things

[14:04] <discord-raku-bot> <Nemokosch> the thing is - alas, as usual - it's *heavily underdocumented*

[14:10] <nine> It is definitely much easier than the previous iteration. The hardest part of developing RakuAST is really finding out what the heck the old frontend does.

[16:27] * guifa is committed to documenting RakuAST nodes when he finishes the new version of Intl::Format::Number

[16:27] <guifa> I've been using already a number of them that don't have tests — so I'll also add those

[16:49] <discord-raku-bot> <Nemokosch> an example is: say, you know what piece of code you would like to cover, behavior-wise. It's not at all obvious what AST object structure belongs to it

[16:49] <discord-raku-bot> <Nemokosch> from names like Declaration::Simple

[17:06] *** Kaipii left
[17:08] *** epony joined
[17:09] *** Kaipii joined
[17:28] <guifa> Nemokosch: that might require an longer tutorial.  I think the best approach is to write something starting from literals, basic ops, and going up from there in small building blocks.  At least, that was the approach I took for the advent post

[17:28] <tellable6> guifa, I'll pass your message to Nemokosch

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:13] *** Kaipii left
[18:35] *** [Coke] left
[18:44] *** discord-raku-bot left
[18:44] *** discord-raku-bot joined
[19:15] *** Kaiepi joined
[19:55] <lizmat> guifa: I'm working on RakuAST::Heredoc testing

[19:56] <lizmat> nine: 0f86d6f72a7d05fbdfda32a8193f59c5d34f7278 basically got reverted, so I don't understand how that could matter?

[20:25] <Geth> ¦ rakudo/main: 4535adc087 | (Elizabeth Mattijsen)++ | t/12-rakuast/TODO

[20:25] <Geth> ¦ rakudo/main: Mark RakuAST::Categorical for tests

[20:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4535adc087

[20:47] <lizmat> m: dd val "42\n"    # /me wonders whether the "\n" should be in the string representation 

[20:47] <camelia> rakudo-moar 4535adc08: OUTPUT: «IntStr.new(42, "42\n")␤»

[21:44] *** linkable6 left
[21:44] *** evalable6 left
[21:44] *** linkable6 joined
[21:46] *** evalable6 joined
[22:09] <nine> lizmat: maybe my bisection result was bogus. Had to skip a few commits because they were on the old master branch where I obviously couldn't run those rakuast tests. What I can definitely say is that between my last commit in December and these new ones from today several tests broke.

[22:49] *** sena_kun left
[23:09] *** NemokoschKiwi joined
[23:26] *** kjp left
[23:29] *** kjp joined
