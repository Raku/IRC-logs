[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[03:15] *** evalable6 left
[03:15] *** linkable6 left
[03:15] *** linkable6 joined
[03:17] *** evalable6 joined
[04:50] *** coverable6 left
[04:50] *** nativecallable6 left
[04:50] *** releasable6 left
[04:50] *** sourceable6 left
[04:50] *** committable6 left
[04:50] *** statisfiable6 left
[04:50] *** tellable6 left
[04:50] *** squashable6 left
[04:50] *** quotable6 left
[04:50] *** shareable6 left
[04:50] *** benchable6 left
[04:50] *** notable6 left
[04:50] *** unicodable6 left
[04:50] *** greppable6 left
[04:50] *** bisectable6 left
[04:50] *** bloatable6 left
[04:50] *** evalable6 left
[04:50] *** reportable6 left
[04:51] *** committable6 joined
[04:51] *** coverable6 joined
[04:51] *** sourceable6 joined
[04:51] *** quotable6 joined
[04:51] *** releasable6 joined
[04:51] *** notable6 joined
[04:52] *** evalable6 joined
[04:52] *** greppable6 joined
[04:52] *** unicodable6 joined
[04:52] *** bloatable6 joined
[04:52] *** nativecallable6 joined
[04:52] *** shareable6 joined
[04:53] *** bisectable6 joined
[04:53] *** squashable6 joined
[04:53] *** tellable6 joined
[04:53] *** reportable6 joined
[04:53] *** benchable6 joined
[04:53] *** statisfiable6 joined
[05:42] *** samebchase joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[07:37] *** sena_kun joined
[09:02] *** Nemokosch joined
[09:02] <Nemokosch> bisectable6: say(1 S+ 2 S+ 3)

[09:02] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[09:02] <tellable6> 2023-04-08T07:42:01Z #raku-dev <nine> Nemokosch: no?

[09:02] <tellable6> 2023-04-08T07:42:35Z #raku-dev <nine> Nemokosch: disregard, ENOCOFFEE

[09:02] <tellable6> 2023-04-13T11:04:46Z #raku <patrickb> Nemokosch: v36 only contains the fix for updating ARM MacOS. But since the code for the update process is run in the installed version and not in the new version one needs to do this one update manually.

[09:02] <tellable6> 2023-04-13T11:54:04Z #raku <Voldenet> Nemokosch: in fact I wonder why Positional role isn't iterable, which is a lot wider than Blob (and is supported by Blob)

[09:03] <bisectable6> Nemokosch, Output on all releases: https://gist.github.com/2f6230393d0b914f119f10dfc5b36278

[09:03] <bisectable6> Nemokosch, Bisecting by output (old=2016.02 new=2016.03) because on both starting points the exit code is 1

[09:03] <bisectable6> Nemokosch, bisect log: https://gist.github.com/b81e5e9d52c6ecd922de8d1ade6716b0

[09:03] <bisectable6> Nemokosch, (2016-03-14) https://github.com/rakudo/rakudo/commit/42fb81d3b7c5d989668f534fd1bd001294ecddc1

[09:03] <bisectable6> Nemokosch, Output on all releases and bisected commits: https://gist.github.com/87a454b7069d68b2be0faf9bb976df51

[09:04] <Nemokosch> https://docs.raku.org/language/operators.html#Sequential_operators how is this supposed to work?

[09:05] <Nemokosch> The example actually just yields an empty all junction

[09:05] *** Nemokosch left
[09:38] *** sena_kun left
[10:21] <lizmat> notable6: weekly

[10:21] <notable6> lizmat, 1 note: 2023-04-01T14:13:25Z <lizmat>: https://gist.github.com/FCO/def7e030c05d7285d210aac4b8fce0e4

[10:21] <lizmat> notable6: weekly reset

[10:21] <notable6> lizmat, Moved existing notes to “weekly_2023-04-17T10:21:58Z”

[10:26] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/04/17/2023-16-student-win/

[11:21] <Geth> ¦ rakudo/main: f31a6d56dc | (Elizabeth Mattijsen)++ | 3 files

[11:21] <Geth> ¦ rakudo/main: Move the fix to Range.Bool to 6.e

[11:21] <Geth> ¦ rakudo/main: 

[11:21] <Geth> ¦ rakudo/main: There appears to be modules in the ecosystem that depend on the old

[11:21] <Geth> ¦ rakudo/main: behaviour (0..-1).Bool returning True, when it should be False.  So

[11:21] <Geth> ¦ rakudo/main: make this corrected behaviour part of 6.e

[11:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f31a6d56dc

[11:21] <Geth> ¦ roast: e196a929ec | (Elizabeth Mattijsen)++ | S02-types/range.t

[11:21] <Geth> ¦ roast: Mark tests that need 6.e as todo

[11:21] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/e196a929ec

[11:23] <lizmat> jdv ^^

[11:47] <lizmat> afk&

[11:51] <|Tux|> Rakudo v2023.02-328-gf31a6d56d (v6.d) on MoarVM 2023.02-3-g6adfc376c

[11:51] <|Tux|> csv-test-xs-20      0.397 -  0.424

[11:51] <|Tux|> csv-ip5xs           0.904 -  1.016

[11:51] <|Tux|> test-t --race       0.981 -  1.188

[11:51] <|Tux|> test-t              1.582 -  1.724

[11:51] <|Tux|> csv-parser          3.677 -  3.746

[11:51] <|Tux|> csv-ip5xs-20        5.467 -  5.673

[11:51] <|Tux|> test                6.418 -  6.576

[11:51] <|Tux|> test-t-20 --race    6.428 -  6.846

[11:51] <|Tux|> test-t-20          20.695 - 21.738

[11:51] <|Tux|> Hmm. I'm not even working on the box currently

[11:58] *** evalable6 left
[11:58] *** linkable6 left
[11:58] *** linkable6 joined
[12:00] *** reportable6 left
[12:00] *** evalable6 joined
[12:03] *** reportable6 joined
[12:50] <nine> T-30 min on the Starship launch for those who are interested!

[13:13] <nine> And it's a scrub

[13:46] *** |Tux| left
[13:48] <jdv> lizmat: thanks

[13:49] <jdv> i guess friday is a go for release, so far

[14:01] *** |Tux| joined
[14:01] *** Tux__ joined
[14:23] *** Tux__ left
[14:35] <[Coke]> jdv++

[15:00] <releasable6> Next release in ≈4 days and ≈3 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:06] *** |Tux| left
[15:08] *** |Tux| joined
[15:08] *** Tux__ joined
[15:08] *** Tux__ left
[16:08] *** committable6 left
[16:08] *** statisfiable6 left
[16:08] *** bisectable6 left
[16:08] *** bloatable6 left
[16:08] *** releasable6 left
[16:08] *** squashable6 left
[16:08] *** shareable6 left
[16:08] *** sourceable6 left
[16:08] *** linkable6 left
[16:08] *** unicodable6 left
[16:08] *** quotable6 left
[16:08] *** benchable6 left
[16:08] *** tellable6 left
[16:08] *** nativecallable6 left
[16:08] *** coverable6 left
[16:08] *** notable6 left
[16:08] *** reportable6 left
[16:08] *** evalable6 left
[16:08] *** greppable6 left
[16:09] *** quotable6 joined
[16:09] *** coverable6 joined
[16:09] *** tellable6 joined
[16:10] *** bloatable6 joined
[16:10] *** sourceable6 joined
[16:10] *** shareable6 joined
[16:10] *** squashable6 joined
[16:10] *** bisectable6 joined
[16:10] *** benchable6 joined
[16:10] *** greppable6 joined
[16:10] *** statisfiable6 joined
[16:11] *** committable6 joined
[16:11] *** unicodable6 joined
[16:11] *** evalable6 joined
[16:11] *** releasable6 joined
[16:11] *** notable6 joined
[16:11] *** linkable6 joined
[16:12] *** nativecallable6 joined
[16:12] *** reportable6 joined
[16:18] <discord-raku-bot> <Nemokosch> m: say Rakudo::Metaops.MapperForOp(&[+])

[16:18] <discord-raku-bot> <Raku eval>  -> \list { #`(Block|4656272394000) ... } 

[16:18] <discord-raku-bot> <Nemokosch> so this does work

[16:18] <discord-raku-bot> <Nemokosch> https://github.com/rakudo/rakudo/blob/f31a6d56dcb39aec1286f79018379e8f8a705b27/src/core.c/Rakudo/Metaops.pm6#L86

[16:19] <discord-raku-bot> <Nemokosch> I'm trying to trace down the calls being made

[16:19] <discord-raku-bot> <Nemokosch> m: say &[+].associative

[16:19] <discord-raku-bot> <Raku eval>  Exit code: 1 No such method 'associative' for invocant of type 'Sub+{is-pure}+{Precedence}'   in block <unit> at main.raku line 1  

[16:19] <discord-raku-bot> <Nemokosch> how can it find that when invoking that method but not here on its own?

[16:39] <discord-raku-bot> <Nemokosch> damn, wrong example: &[+] actually has a preset value in the hash

[16:39] <discord-raku-bot> <Nemokosch> but the behavior is the same for all operators

[16:39] <discord-raku-bot> <Nemokosch> m: say &[^].associative

[16:39] <discord-raku-bot> <Raku eval>  Exit code: 1 No such method 'associative' for invocant of type 'Sub+{is-pure}+{Precedence}'   in block <unit> at main.raku line 1  

[16:39] <discord-raku-bot> <Nemokosch> m: say Rakudo::Metaops.MapperForOp(&[^])

[16:39] <discord-raku-bot> <Raku eval>  -> \list { #`(Block|4814984857432) ... } 

[17:28] *** squashable6 left
[17:29] *** squashable6 joined
[17:45] <lizmat> m: =head1 E<zzz>

[17:45] <camelia> rakudo-moar f31a6d56d: OUTPUT: «Potential difficulties:␤    "zzz" is not a valid HTML5 entity.␤    at <tmp>:1␤    ------> =head1 E<zzz>⏏<EOL>␤    "zzz" is not a valid HTML5 entity.␤    at <tmp>:1␤    ------> =head1 E<zzz>⏏<EOL>␤    "zzz" is not a vali…»

[17:45] <lizmat> three for the price of one!

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:16] *** sena_kun joined
[19:26] <discord-raku-bot> <Nemokosch> so the way I understand it, reduction makes no conceptual sense for list associative operators

[19:27] <discord-raku-bot> <Nemokosch> and if && is really list associative, its sub form should have infix:<&&> (1, 2, 3, 4) return 4, not the list again

[19:27] <discord-raku-bot> <Nemokosch> m: say infix:<&&> (1, 2, 3, 4)

[19:27] <discord-raku-bot> <Raku eval>  (1 2 3 4) 

[19:27] <discord-raku-bot> <Nemokosch> https://github.com/rakudo/rakudo/issues/5227

[20:39] <Geth> ¦ rakudo/main: 4 commits pushed by (Stefan Seifert)++

[20:39] <Geth> ¦ rakudo/main: 6df32e8bb4 | RakuAST: properly support interpolating constants into variable names

[20:39] <Geth> ¦ rakudo/main: 159cd628e7 | RakuAST: fix role signature declarations in wrong scope

[20:39] <Geth> ¦ rakudo/main: 150200c280 | RakuAST: fix EXPORT package getting added in the wrong place

[20:39] <Geth> ¦ rakudo/main: 1fd667cf7a | RakuAST: implement import statement

[20:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/f31a6d56dcb3...1fd667cf7a72

[21:48] *** Xliff joined
[22:12] *** sena_kun left
[23:20] *** vrurg left
[23:40] *** vrurg joined
