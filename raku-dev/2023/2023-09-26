[00:46] *** vrurg left
[00:47] *** vrurg joined
[05:43] *** sena_kun joined
[10:33] <discord-raku-bot> <nemokosch> hah, it's kind of reassuring that vrurg came to a very similar conclusion about versioning

[10:33] <discord-raku-bot> <nemokosch> Reassuring but not exactly relieving

[11:12] <Geth> ¦ rakudo/main: d9f2767c27 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Deparse.rakumod

[11:12] <Geth> ¦ rakudo/main: RakuAST: cleanup deparsing of simple RegexDeclarations

[11:12] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d9f2767c27

[12:11] *** jgaz joined
[12:18] <lizmat> m: default { say "default" }; say "not seen"

[12:18] <camelia> rakudo-moar d9f2767c2: OUTPUT: «default␤»

[12:19] <lizmat> that was a bit unexpected   :-)

[12:23] <discord-raku-bot> <nemokosch> Well, that's the charm of when

[12:24] <discord-raku-bot> <nemokosch> Actually I wish succeed existed outside of when stuff

[12:24] <lizmat> I sorta expected it to be a compile-time error without any when

[12:26] <discord-raku-bot> <nemokosch> Hm, can it even be resumed?

[12:27] <discord-raku-bot> <nemokosch> m: default { say 'that is a funny way to introduce a block'; proceed; } say 'the temple of consumption'

[12:27] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Strange text after block (missing semicolon or comma?) at /home/glot/main.raku:1 ------> ny way to introduce a block'; proceed; }⏏ say 'the temple of consumption' 

[12:28] <discord-raku-bot> <nemokosch> Right, the semicolon

[12:28] <discord-raku-bot> <nemokosch> m: default { say 'that is a funny way to introduce a block'; proceed; }; say 'the temple of consumption'

[12:28] <discord-raku-bot> <Raku eval>  that is a funny way to introduce a block the temple of consumption 

[12:40] <discord-raku-bot> <nemokosch> For the record with that pull request: https://en.wikipedia.org/wiki/Nonsense usually if I write an "essay" of a comment, I wouldn't want to ruin it with random insults, sometimes one just has to invoke a definition

[12:45] <discord-raku-bot> <nemokosch> By the way, I wonder

[12:46] <discord-raku-bot> <nemokosch> m: my \if = 5; if.succ.say

[12:46] <discord-raku-bot> <Raku eval>  6 

[12:46] <discord-raku-bot> <nemokosch> :DD

[12:47] <lizmat> m: sub if($a) { say $a }; if 42

[12:47] <camelia> rakudo-moar d9f2767c2: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> sub if($a) { say $a }; if 42⏏<EOL>␤    expecting any of:␤        block or pointy block␤»

[12:47] <discord-raku-bot> <nemokosch> m: my \if = 5; say if + 4;

[12:47] <lizmat> m: sub if($a) { say $a }; if(42)

[12:47] <camelia> rakudo-moar d9f2767c2: OUTPUT: «42␤»

[12:47] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Unsupported use of bare "say".  In Raku please use: .say if you meant to call it as a method on $_, or use an explicit invocant or argument, or use &say to refer to the function as a noun. at /home/glot/main.raku:1 ------> my \if = 5; say⏏ if + 4; 

[12:48] <discord-raku-bot> <nemokosch> Aalmoost

[12:48] <discord-raku-bot> <nemokosch> m: my \if = 5; dd if + 4;

[12:48] <discord-raku-bot> <Raku eval>  block <unit>() 

[12:48] <discord-raku-bot> <nemokosch> Hm

[12:49] <discord-raku-bot> <nemokosch> Does Raku even have reserved words?

[12:51] <lizmat> yes, syntax consists of fixed strings in the grammar

[13:13] <discord-raku-bot> <nemokosch> I think this is like approaching the same broader phenomenon from two directions

[13:13] <discord-raku-bot> <nemokosch> there are words that have special meaning in the Raku grammar, that's for sure

[13:14] <discord-raku-bot> <nemokosch> but those words can (seemingly) also appear in contexts (within the same slang) where they don't retain the special meaning

[13:15] <lizmat> m: "foo" "bar"

[13:15] <camelia> rakudo-moar d9f2767c2: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> "foo"⏏ "bar"␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier␤        statement m…»

[13:15] <lizmat> depends on whether they are in a term position or not

[13:18] *** Xliff joined
[13:18] <Xliff> 58.18671

[13:18] <Xliff> 48.3895

[13:18] <Xliff> 19.32329

[13:18] <Xliff> 16.74337

[13:18] <Xliff> 18.96529

[13:18] <Xliff> 89.14353

[13:18] <Xliff> 20.0511

[13:18] <Xliff> 8.3518

[13:18] <Xliff> 44.73086

[13:18] <Xliff> 10.17522

[13:18] <Xliff> 35.16032

[13:18] <Xliff> 27.81778

[13:18] <Xliff> 36.40519

[13:18] <Xliff> 193.4173

[13:18] <Xliff> 22.96845

[13:18] <Xliff> 51.43319

[13:18] <Xliff> 52.14229

[13:19] <Xliff> 13.82014

[13:19] <Xliff> 41.72478

[13:19] <Xliff> 31.29072

[13:19] <Xliff> 30.25855

[13:19] <Xliff> 21.61069

[13:19] <Xliff> 19.343

[13:19] <discord-raku-bot> <nemokosch> then the question would more accurately be: are there words that cannot be used as terms?

[13:19] <Xliff> 62.8221

[13:19] <Xliff> 10.53869

[13:19] <Xliff> 23.90838

[13:19] <Xliff> 111.47869

[13:19] <Xliff> 3.14051

[13:19] <Xliff> 4.90335

[13:19] <Xliff> 13.4291

[13:19] <Xliff> 30.62174

[13:19] <Xliff> 21.35918

[13:19] <Xliff> 9.55734

[13:19] <Xliff> 7.73768

[13:19] <Xliff> Oops...

[13:19] <Xliff> Raku-GLib suite timing statistics for Raku 2023.09.9.gb.58.c.3203.cc

[13:19] <Xliff> Using the following processor: 13th Gen Intel(R) Core(TM) i9-13900K

[13:19] <Xliff> Total number of projects: 34 (518011 loc)

[13:19] <Xliff> Total non-parallel compile times: 7343.420 (215.983 avg)

[13:19] <Xliff> Total parallel compile times: 1208.283 (35.538 avg) 6.078x speedup

[16:00] <vrurg> Xliff: In your GLib it looks like using something like `submethod BUILD (:$hash-table, :$!type) { $!h = $hash-table }` is a common pattern. Why not safer `submethod TWEAK(:hash-table($!h), :$!type) {}`?

[16:21] <discord-raku-bot> <nemokosch> what exactly is BUILD for? what uses it?

[16:48] <Geth> ¦ rakudo/main: f4ceaf95d9 | (Elizabeth Mattijsen)++ | lib/RakuAST/Deparse/L10N/NL.rakumod

[16:48] <Geth> ¦ rakudo/main: RakuAST: tweak some of the NL L10N

[16:48] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f4ceaf95d9

[16:48] <Xliff> vrurg: Thanks for noticing. PRs welcome! You'll find that there is a lot of that all over this and subsequent releases. Mainly becuase I haven't touch that code in years. My style has changed since then and you will notice your pattern cropping up in later releases.

[16:49] <Xliff> If you feel like it, please create an issue and I'll get to it when I can.

[16:49] <Xliff> Thanks for looking at GLib!

[20:52] *** AlexDaniel joined
[21:49] *** sena_kun left
[22:54] *** MasterDuke left
