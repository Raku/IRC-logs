[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:05] <Geth> ¦ Web-Template/main: b7f898ceb3 | (Polgár Márton)++ | 5 files

[00:05] <Geth> ¦ Web-Template/main: 2.0

[00:05] <Geth> ¦ Web-Template/main: review: https://github.com/raku-community-modules/Web-Template/commit/b7f898ceb3

[00:11] <discord-raku-bot> <Nemokosch> sorry for the spam, I wanted to sort out known issues at least

[01:32] *** melezhik joined
[01:42] *** melezhik left
[02:08] *** MasterDuke left
[03:21] *** epony joined
[03:35] *** Xliff joined
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[07:03] *** shareable6 left
[07:03] *** tellable6 left
[07:03] *** committable6 left
[07:03] *** benchable6 left
[07:03] *** notable6 left
[07:03] *** coverable6 left
[07:03] *** greppable6 left
[07:03] *** quotable6 left
[07:03] *** statisfiable6 left
[07:03] *** evalable6 left
[07:03] *** squashable6 left
[07:03] *** bloatable6 left
[07:03] *** linkable6 left
[07:03] *** nativecallable6 left
[07:03] *** sourceable6 left
[07:03] *** unicodable6 left
[07:03] *** releasable6 left
[07:03] *** bisectable6 left
[07:03] *** reportable6 left
[07:03] *** committable6 joined
[07:03] *** sourceable6 joined
[07:04] *** greppable6 joined
[07:04] *** bloatable6 joined
[07:04] *** releasable6 joined
[07:05] *** benchable6 joined
[07:05] *** bisectable6 joined
[07:05] *** linkable6 joined
[07:05] *** notable6 joined
[07:05] *** quotable6 joined
[07:05] *** reportable6 joined
[07:05] *** unicodable6 joined
[07:05] *** coverable6 joined
[07:06] *** tellable6 joined
[07:06] *** shareable6 joined
[07:06] *** nativecallable6 joined
[07:06] *** statisfiable6 joined
[07:06] *** squashable6 joined
[07:06] *** evalable6 joined
[07:54] *** discord-raku-bot left
[07:54] *** discord-raku-bot joined
[08:23] *** discord-raku-bot left
[08:23] *** discord-raku-bot joined
[09:18] *** ab5tract joined
[09:36] *** sena_kun joined
[10:08] <Geth> ¦ rakudo/main: a525e4870e | (Elizabeth Mattijsen)++ | t/12-rakuast/statementprefixes.rakutest

[10:08] <Geth> ¦ rakudo/main: Add another CATCH block test

[10:08] <Geth> ¦ rakudo/main: 

[10:08] <Geth> ¦ rakudo/main: Which sadly has a todo now for some reason

[10:08] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a525e4870e

[10:09] <Geth> ¦ rakudo/main: 80241850a1 | (Elizabeth Mattijsen)++ | 2 files

[10:09] <Geth> ¦ rakudo/main: Normalize naming of statementprefixes test file

[10:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/80241850a1

[10:11] <Geth> ¦ rakudo/main: 16bc5008a0 | (Elizabeth Mattijsen)++ | 2 files

[10:11] <Geth> ¦ rakudo/main: Normalize naming of statements test file

[10:11] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/16bc5008a0

[10:16] <Geth> ¦ rakudo/main: 5 commits pushed by (Elizabeth Mattijsen)++

[10:16] <Geth> ¦ rakudo/main: f7412d1c79 | * (create statement-phaser.rakutest)

[10:16] <Geth> ¦ rakudo/main: b09f11c856 | * (keep statement.rakutest)

[10:16] <Geth> ¦ rakudo/main: 23c6f597d0 | * (merge)

[10:16] <Geth> ¦ rakudo/main: b1e40e6481 | Copied (with git history):

[10:16] <Geth> ¦ rakudo/main: fa23dd4b75 | Final step of splitting statement -> statement / statement-phaser

[10:16] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/16bc5008a01d...fa23dd4b755a

[10:21] <Geth> ¦ rakudo/main: c3e81a776a | (Elizabeth Mattijsen)++ | 2 files

[10:21] <Geth> ¦ rakudo/main: Move phaser tests to correct file

[10:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c3e81a776a

[10:30] *** sena_kun left
[10:45] <Geth> ¦ rakudo/main: f0bcdcd2b0 | (Elizabeth Mattijsen)++ | src/Raku/ast/statementprefixes.rakumod

[10:45] <Geth> ¦ rakudo/main: Normalise RakuAST class specifications (5/N)

[10:45] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f0bcdcd2b0

[11:11] *** sena_kun joined
[11:14] <nine> lizmat: a proper .raku might be nice, but it can wait until RakuAST is done. The scope of this project is large enough as it is :)

[11:15] <lizmat> well, it would help getting more people involved, I think

[11:15] <lizmat> and it would basically be just another implementation of RakuAST::Deparse

[11:16] <lizmat> which could be copy-pasted, and then adapted

[11:16] <lizmat> it would help me also writing tests for RakuAST

[11:16] <nine> lizmat: IMPL-CHECK is run at CHECK time, except when it isn't, i.e. when BEGIN time effects require it (e.g. when we need to actually run that code)

[11:17] <lizmat> ok, so there is no way to create compile time errors out of RakuAST nodes

[11:17] <lizmat> ones that would actually show where the error is, I mean

[11:17] <nine> If it's a net gain, then of course I'm all for it. It just sounds like a lot of additional effort that could be spent on implementing RakuAST itself

[11:17] <nine> Why isn't there?

[11:18] <lizmat> m: use MONKEY; EVAL Q/ ENTER say "hello" /.AST

[11:18] <camelia> rakudo-moar f0bcdcd2b: OUTPUT: «No exception handler located for catch␤   at SETTING::src/core.c/Exception.pm6:570  (/home/camelia/rakudo-m-inst-2/share/perl6/runtime/CORE.c.setting.moarvm:print_exception)␤ from SETTING::src/core.c/Exception.pm6:626  (/home/camelia/rakudo-m-inst…»

[11:24] <nine> I have gotten plenty of proper error messages from RakuAST. Of course there can be cases where something is broken

[11:24] <lizmat> I just wondered if it was a problem or a NYI

[11:24] <lizmat> m: use MONKEY; EVAL Q/ LEAVE say "goodbye" /.AST

[11:25] <camelia> rakudo-moar f0bcdcd2b: ( no output )

[11:25] <lizmat> hmmm

[11:25] <lizmat> m: use MONKEY; EVAL Q/ { LEAVE say "goodbye" } /.AST

[11:25] <camelia> rakudo-moar f0bcdcd2b: OUTPUT: «goodbye␤»

[11:25] <lizmat> m: use MONKEY; EVAL Q/ { ENTER say "hello" } /.AST

[11:25] <camelia> rakudo-moar f0bcdcd2b: OUTPUT: «No exception handler located for catch␤   at SETTING::src/core.c/Exception.pm6:570  (/home/camelia/rakudo-m-inst-2/share/perl6/runtime/CORE.c.setting.moarvm:print_exception)␤ from SETTING::src/core.c/Exception.pm6:626  (/home/camelia/rakudo-m-inst…»

[11:26] <lizmat> seems like compunit needs some scope added or checks for phasers added

[11:26] <nine> Ah, that is actually an error while trying to report a missing method. It's trying to create suggestions and fails and then crashes

[11:27] <lizmat> what method is missing ?

[11:28] <nine> Oh, wait. It may be a different thing.

[11:50] <Geth> ¦ rakudo/main: ed8d70d475 | (Elizabeth Mattijsen)++ | 3 files

[11:50] <Geth> ¦ rakudo/main: Add deparsing and tests for RakuAST::StatementPrefix::Phaser::Leave

[11:50] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ed8d70d475

[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:01] <Geth> ¦ rakudo/main: ee21efd8a4 | (Elizabeth Mattijsen)++ | 2 files

[12:01] <Geth> ¦ rakudo/main: Add tests for RakuAST::StatementPrefix::Phaser::End

[12:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ee21efd8a4

[12:03] <lizmat> nine: looks like CHECK and INIT phasers suffer from same

[12:05] <lizmat> ah, looks like all of the other thunky phasers suffer from it

[12:26] <nine> Are they even implemented yet?

[12:37] <Geth> ¦ XML/support-io-names: 99c5b63748 | (Polgár Márton)++ | 2 files

[12:37] <Geth> ¦ XML/support-io-names: Support IO::Path as the type of filenames

[12:37] <Geth> ¦ XML/support-io-names: review: https://github.com/raku-community-modules/XML/commit/99c5b63748

[12:57] <lizmat> nine: I don't know  :-)

[12:59] <lizmat> I guess not

[13:00] * lizmat turns her attention away from phasers for the moment

[13:03] <lizmat> nine: if you could spare a mo, could you look at what is obviously wrong with the code in 1e384b2a7c ?

[13:12] <nine> lizmat: well there is nothing that would call IMPL-CHECK on those args. That isn't an issue with literals, but now you're creating something more complex

[13:14] <lizmat> why is IMPL-CHECK needed ?

[13:14] <nine> Because that's what will resolve those names

[13:16] <nine> I'd say have RakuAST::Stub do ImplicitLookup and have it look up X::StubCode itself and pass the result as an arg

[13:17] <lizmat> hmmm... I guess I don't grok ImplicitLookup yet  :-)

[13:17] * lizmat looks

[13:19] *** linkable6 left
[13:19] *** evalable6 left
[13:20] *** evalable6 joined
[13:20] <nine> lizmat: look at RakuAST::Term::Reduce for an example. PRODUCE-IMPLICIT-LOOKUPS and get-implicit-lookups

[13:21] *** linkable6 joined
[14:53] <lizmat> nine: I seem to have forgotten how to write QAST for a named argument with a QAST that is the value

[14:58] <vrurg> lizmat: Just add :named<param-name> to .new

[15:01] <lizmat> so I have nqp::push( $qast, $value-qast)

[15:01] <lizmat> so I guess I need to add the :named to the $value-qast somehow?

[15:01] <lizmat> could be a WVal, could be an expression, could be whatever you're allowed to give with:

[15:01] <lizmat> ...

[15:02] <lizmat> or !!! or ???

[15:02] <lizmat> $qast is basically already the "X::Stubcode.new"

[15:02] <lizmat> aka, I need to change the positional into a namde

[15:02] <lizmat> *named

[15:08] *** melezhik joined
[15:15] <Geth> ¦ XML/support-io-names: 349c1e05fe | (Polgár Márton)++ | 2 files

[15:15] <Geth> ¦ XML/support-io-names: Fix method call typings

[15:15] <Geth> ¦ XML/support-io-names: review: https://github.com/raku-community-modules/XML/commit/349c1e05fe

[15:17] <vrurg> lizmat: If you need to change a QAST then $qast.named('name').

[15:17] <vrurg> $!named is an attribute on QAST::Node. Anything what could be an argument could be a named one.

[15:19] <lizmat> check!

[15:20] *** melezhik left
[15:22] <Geth> ¦ XML: 2colours++ created pull request #67: Support IO::Path filenames

[15:22] <Geth> ¦ XML: review: https://github.com/raku-community-modules/XML/pull/67

[15:22] *** epony left
[15:24] <Geth> ¦ XML/main: 99c5b63748 | (Polgár Márton)++ | 2 files

[15:24] <Geth> ¦ XML/main: Support IO::Path as the type of filenames

[15:24] <Geth> ¦ XML/main: review: https://github.com/raku-community-modules/XML/commit/99c5b63748

[15:24] <Geth> ¦ XML/main: 349c1e05fe | (Polgár Márton)++ | 2 files

[15:24] <Geth> ¦ XML/main: Fix method call typings

[15:24] <Geth> ¦ XML/main: review: https://github.com/raku-community-modules/XML/commit/349c1e05fe

[15:24] <Geth> ¦ XML/main: a5643f5815 | (Márton Polgár)++ (committed using GitHub Web editor) | 2 files

[15:24] <Geth> ¦ XML/main: Merge pull request #67 from raku-community-modules/support-io-names

[15:24] <Geth> ¦ XML/main: 

[15:24] <Geth> ¦ XML/main: Support IO::Path filenames

[15:24] <Geth> ¦ XML/main: review: https://github.com/raku-community-modules/XML/commit/a5643f5815

[15:25] *** melezhik joined
[15:29] <Geth> ¦ XML/main: e1f48fc262 | (Polgár Márton)++ | 2 files

[15:29] <Geth> ¦ XML/main: 0.3.3

[15:29] <Geth> ¦ XML/main: review: https://github.com/raku-community-modules/XML/commit/e1f48fc262

[15:29] *** melezhik left
[16:06] <Geth> ¦ rakudo/main: 4b11fea796 | (Elizabeth Mattijsen)++ | 3 files

[16:06] <Geth> ¦ rakudo/main: Implement X::Stub correctly

[16:06] <Geth> ¦ rakudo/main: 

[16:06] <Geth> ¦ rakudo/main: - by having it call die/warn/fail with an X::StubCode object

[16:06] <Geth> ¦ rakudo/main: - only use implict lookups, no other classes

[16:06] <Geth> ¦ rakudo/main: - generate QAST directly

[16:06] <Geth> ¦ rakudo/main: - remove a lot of now dead code and comments

[16:06] <Geth> ¦ rakudo/main: - simplify deparsing (no "real-args" needed anymore)

[16:06] <Geth> ¦ rakudo/main: <…commit message has 6 more lines…>

[16:06] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4b11fea796

[16:30] <nine> lizmat: if it causes test regressions, why do you push it?

[16:36] <lizmat> because I was happy to see have it pass the stub tests, and because it gained two files in "make test"

[16:37] <lizmat> I will now work on helper module that will keep track of regressions, so that you can easily know what files we lost

[16:41] <nine> And who will fix those regressions?

[16:42] <lizmat> I will

[16:43] <lizmat> nine: we did establish that we cannot create proper compile time errors from RakuAST::Node classes, right?

[16:44] *** NemokoschKiwi joined
[16:44] <lizmat> if anytihing, we would need to provide some sanity-check in the action, and if failed, create a worry there

[16:44] <nine> No, we didn't.

[16:46] <nine> See RakuAST::Resolver's add-sorry and add-worry

[16:46] <lizmat> but those can only be run at CHECK time ?

[16:47] <lizmat> I mean, when the action does a Raku::Heredoc.new(....)    it doesn't have a resolver, so how would that be able to do an "add-worry' ?

[16:47] <nine> Why shouldn't it have a resolver?

[16:48] <nine> Or rather what errors would that throw?

[16:49] <lizmat> well, for improperly indenting your heredoc

[16:49] <lizmat> q:to/FOO/\nbar\n    FOO

[16:49] <nine> Isn't that a CHECK time thing?

[16:49] <lizmat> nope, it isn't atm

[16:50] <nine> The old frontend not being a good example for anything is the reason why we completely rewrite it

[16:50] <lizmat> Potential difficulties:

[16:50] <lizmat>     Asked to remove 4 spaces, but the shortest indent is 0 spaces

[16:50] <lizmat>     at /Users/liz/Github/rakudo/3:5

[16:50] <lizmat>     ------>     FOO⏏

[16:52] <lizmat> hmmm... looks it *is* check time

[16:53] <lizmat> ok, will look at check time again  :-)

[16:54] <lizmat> ok, the verdict is in: looks like my change *gained* two make spectest files and lost 4

[16:55] <nine> I get 618 passing before and 614 passing after the change

[16:56] <lizmat> I get 616

[16:57] <lizmat> going to check each fail / pass now separately

[16:57] <nine> And the error is that you're assuming that an ArgList object will always contain args, which is just not true.

[16:58] <lizmat> aha... ok

[16:59] <lizmat> testing a fix now

[17:17] <Geth> ¦ rakudo/main: 56705f35c6 | (Elizabeth Mattijsen)++ | 2 files

[17:17] <Geth> ¦ rakudo/main: Fix regression

[17:17] <Geth> ¦ rakudo/main: 

[17:17] <Geth> ¦ rakudo/main: Caused by the erroneous assumption that an ArgList would always

[17:17] <Geth> ¦ rakudo/main: contain at least one element.

[17:17] <Geth> ¦ rakudo/main: 

[17:17] <Geth> ¦ rakudo/main: Brings us to 101/138   and....   620/1355

[17:17] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/56705f35c6

[17:17] <lizmat> nine ^^

[17:17] <lizmat> dinner&

[17:46] <Geth> ¦ XML/main: 8b075d9d57 | (Polgár Márton)++ | 15 files

[17:46] <Geth> ¦ XML/main: rakufication of content

[17:46] <Geth> ¦ XML/main: review: https://github.com/raku-community-modules/XML/commit/8b075d9d57

[17:46] <Geth> ¦ XML/main: 3887476d70 | (Polgár Márton)++ | 20 files

[17:46] <Geth> ¦ XML/main: Rakufying file extensions

[17:46] <Geth> ¦ XML/main: review: https://github.com/raku-community-modules/XML/commit/3887476d70

[17:51] <Geth> ¦ XML/main: 8429634926 | (Polgár Márton)++ | META6.json

[17:51] <Geth> ¦ XML/main: fix META6.json with the new file extensions

[17:51] <Geth> ¦ XML/main: review: https://github.com/raku-community-modules/XML/commit/8429634926

[17:59] *** NemokoschKiwi left
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:13] *** sena_kun left
[18:23] *** japhb left
[18:30] *** japhb joined
[18:52] *** sena_kun joined
[18:52] <Geth> ¦ rakudo/main: 5b8f0fe9dd | (Elizabeth Mattijsen)++ | src/core.c/Int.pm6

[18:52] <Geth> ¦ rakudo/main: Oops, empty line snuck in

[18:52] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5b8f0fe9dd

[19:03] <Geth> ¦ rakudo/main: 1c966e570b | (Elizabeth Mattijsen)++ | t/12-rakuast/TODO

[19:03] <Geth> ¦ rakudo/main: These classes are already being tested

[19:03] <Geth> ¦ rakudo/main: 

[19:03] <Geth> ¦ rakudo/main: or cannot be tested as they're base classes

[19:03] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1c966e570b

[19:03] <lizmat> which brings us to 49 RakuAST classes still needing to have tests

[19:06] <lizmat> afk again&

[19:54] <[Coke]> nine++ lizmat++

[22:11] *** linkable6 left
[22:11] *** evalable6 left
[22:13] *** linkable6 joined
[22:14] *** evalable6 joined
[22:59] *** japhb left
[22:59] *** japhb joined
[23:15] *** codesections joined
[23:18] *** sena_kun left
[23:21] *** japhb left
[23:22] *** japhb joined
