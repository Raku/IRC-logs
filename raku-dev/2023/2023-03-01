[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:34] *** NemokoschKiwi left
[00:58] *** AlexDaniel left
[02:57] *** samebchase2 joined
[02:58] *** samebchase left
[02:58] *** samebchase2 is now known as samebchase

[03:01] <MasterDuke> yeah, --target=optimize is different for int vs uint in this case. uint is actually calling `&infix:<..>`, but int is getting turned into a while loop

[03:16] <MasterDuke> huh, a minor change in Optimizer.nqp and a profile shows the same runtime, but `time` shows ~1.1s for uint and ~0.2s for int

[03:16] <MasterDuke> and --target=optimize looks the same

[03:20] <MasterDuke> ha. so the --target=optimize is now the same, but wallclock is slower?! because before my change, time reports ~0.6s for uint (and the same ~0.2s for int)

[03:21] <MasterDuke> and before my change a profile reports uint being *much* slower

[03:21] <MasterDuke> so now it looks like we're also in some spesh/jit differences

[04:42] <Geth> Â¦ nqp/main: 953b0ee3a6 | (Daniel Green)++ | CREDITS

[04:42] <Geth> Â¦ nqp/main: Add myself to the credits

[04:42] <Geth> Â¦ nqp/main: review: https://github.com/Raku/nqp/commit/953b0ee3a6

[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:49] *** squashable6 left
[06:52] *** squashable6 joined
[09:10] *** sena_kun joined
[09:50] *** sena_kun left
[10:14] *** sena_kun joined
[10:18] *** sena_kun left
[10:55] *** sena_kun joined
[10:56] <Geth> Â¦ rakudo/lizmat-Rat-Str-digits: 5a1abdc618 | (Elizabeth Mattijsen)++ | src/core.c/Rational.pm6

[10:56] <Geth> Â¦ rakudo/lizmat-Rat-Str-digits: Introduce Rational.Str(:digits)

[10:56] <Geth> Â¦ rakudo/lizmat-Rat-Str-digits: 

[10:56] <Geth> Â¦ rakudo/lizmat-Rat-Str-digits: Allows one to specify number of digits for stringification of

[10:56] <Geth> Â¦ rakudo/lizmat-Rat-Str-digits: Rat/FatRats.  Inspired by discussion by tadzik++ at

[10:56] <Geth> Â¦ rakudo/lizmat-Rat-Str-digits: 

[10:56] <Geth> Â¦ rakudo/lizmat-Rat-Str-digits:   https://irclogs.raku.org/raku/2023-03-01.html#10:19

[10:56] <Geth> Â¦ rakudo/lizmat-Rat-Str-digits: review: https://github.com/rakudo/rakudo/commit/5a1abdc618

[10:56] <Geth> Â¦ rakudo: lizmat++ created pull request #5223: Introduce Rational.Str(:digits)

[10:56] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5223

[11:53] *** codesections left
[11:57] <Geth> Â¦ rakudo/main: 376eb9180e | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Raku.pm6

[11:57] <Geth> Â¦ rakudo/main: RakuAST: don't bother with () if there are no arguments

[11:57] <Geth> Â¦ rakudo/main: 

[11:57] <Geth> Â¦ rakudo/main: In the .raku handling of arguments to methods.

[11:57] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/376eb9180e

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:11] *** thundergnat joined
[12:14] *** thundergnat left
[12:43] *** jdv left
[12:44] *** jdv joined
[12:56] *** epony left
[12:56] *** linkable6 left
[12:56] *** samcv left
[12:56] *** nativecallable6 left
[12:56] *** tellable6 left
[12:56] *** benchable6 left
[12:56] *** sourceable6 left
[12:56] *** bloatable6 left
[12:56] *** unicodable6 left
[12:56] *** statisfiable6 left
[12:56] *** bartolin_ left
[12:56] *** japhb left
[12:56] *** jjatria left
[12:56] *** sivoais left
[12:56] *** nebuchadnezzar left
[13:01] *** epony joined
[13:01] *** linkable6 joined
[13:01] *** samcv joined
[13:01] *** nativecallable6 joined
[13:01] *** tellable6 joined
[13:01] *** benchable6 joined
[13:01] *** sourceable6 joined
[13:01] *** bloatable6 joined
[13:01] *** unicodable6 joined
[13:01] *** statisfiable6 joined
[13:01] *** bartolin_ joined
[13:01] *** japhb joined
[13:01] *** jjatria joined
[13:01] *** sivoais joined
[13:01] *** nebuchadnezzar joined
[13:04] *** epony left
[13:05] *** epony joined
[13:20] *** epony left
[13:30] *** nebuchad` joined
[13:31] *** nebuchadnezzar left
[13:35] <lizmat> looking at taking a stab at moving Code.assuming to RakuAST

[13:36] <lizmat> and it makes me wonder whether we need a way to take a Parameter object, and turn it into a RakuAST::Parameter object

[13:37] <lizmat> or otherwise create a RakuAST::Parameter object that would just take the Parameter object as the product of PRODUCE-META-OBJECT

[13:53] *** epony joined
[13:55] <lizmat> also: maybe "use v6.e.PREVIEW" should imply "use experimental :rakuast", as the PREVIEW in itself is not set in stone yet either ?

[14:22] * sjn wonders what point of "PREVIEW" is. If the list of "PREVIEW" features today is different from "PREVIEW" features next week, then this name doesn't help much in distinguishing between them, does it?

[14:28] <vrurg> PREVIEW means you're ready to experiment.

[14:28] <vrurg> lizmat: I'd be ++ for implying.

[14:28] <discord-raku-bot> <Nemokosch> yes... PREVIEW is not a version, it's a disclaimer ðŸ˜›

[14:29] <vrurg> Well said.

[14:29] <vrurg> It is indeed.

[14:29] <discord-raku-bot> <Nemokosch> it actually goes well with the things that "need to be shouted"

[14:30] <[Coke]> lizmat++ adding rakust to 6.e seems fine to me.

[14:43] *** Altai-man joined
[14:44] *** sena_kun left
[15:52] *** epony left
[15:53] *** epony joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:08] <Geth> Â¦ rakudo/lizmat-RakuAST-EVAL: 349a7fbcaa | (Elizabeth Mattijsen)++ | 2 files

[18:08] <Geth> Â¦ rakudo/lizmat-RakuAST-EVAL: Allow EVAL of RakuAST::Nodes without MONKEY

[18:08] <Geth> Â¦ rakudo/lizmat-RakuAST-EVAL: 

[18:08] <Geth> Â¦ rakudo/lizmat-RakuAST-EVAL: Since there is no danger of injection with RakuAST::Node, there's

[18:08] <Geth> Â¦ rakudo/lizmat-RakuAST-EVAL: no need for "use MONKEY-SEE-NO-EVAL" if you're EVALling RakuAST nodes.

[18:08] <Geth> Â¦ rakudo/lizmat-RakuAST-EVAL: 

[18:08] <Geth> Â¦ rakudo/lizmat-RakuAST-EVAL: Originally, this was a compile time error.  Now it is a run-time error,

[18:08] <Geth> Â¦ rakudo/lizmat-RakuAST-EVAL: because we cannot see the difference between a string and a RakuAST

[18:08] <Geth> Â¦ rakudo/lizmat-RakuAST-EVAL: <â€¦commit message has 7 more linesâ€¦>

[18:08] <Geth> Â¦ rakudo/lizmat-RakuAST-EVAL: review: https://github.com/rakudo/rakudo/commit/349a7fbcaa

[18:08] <Geth> Â¦ rakudo: lizmat++ created pull request #5224: Allow EVAL of RakuAST::Nodes without MONKEY

[18:08] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5224

[18:10] *** Altai-man left
[18:14] <[Coke]> I may reach out to core devs for some documentation requests as we try to slog our way through the backlog.

[18:14] <[Coke]> I will try to keep it to a reasonable number of asks. :)

[18:15] <lizmat> [Coke]: sure, shoot  :-)

[18:17] <[Coke]> First, a general question: we have many asks for docs for things not in roast. I have been putting those at the bottom of the pile, but those might need someone to weigh in with "yes, we should add a test", or "no, this is an implementation detail" or "maybe document it anyway." I imagine most of these are one offs, but a small workflow on what to do there would be good to agree on.

[18:17] <[Coke]> I've been trying to tag these as NONSPECCED when I find them.

[18:18] <lizmat> fwiw, a lot of things *do* need spectests *and* documentation

[18:19] <[Coke]> ok. I wonder if we should have some sort of notation in roast that lets me point to a specific test or set of tests rather than using rak to find the text somewhere in a file.

[18:19] <lizmat> it was basically the difficulty of specifying after which rakudo version some things became available

[18:19] <[Coke]> like some notation of "test that follows is for Object.method" or "language:phaser:CATCH" or something.

[18:20] <[Coke]> (that's a lot of work)

[18:20] <[Coke]> lizmat: we have the same problem in the docs, there's a large discussion about that going on now.

[18:20] <lizmat> and we have a solution for that now, right ?

[18:20] <[Coke]> (revived from a 7 year old ticket.)

[18:20] <lizmat> ah, no solution yet  :-(

[18:20] <[Coke]> I think we're actually having trouble agreeing on the problem.

[18:21] <lizmat> where's the current discussion?

[18:21] <[Coke]> https://github.com/Raku/doc/discussions/4206

[18:22] <[Coke]> btw, using discussions has been a big improvement for doc stuff, although we are having some growing pains figuring out the best way to use the interface.

[18:22] <[Coke]> it's very easy for something non-actionable to languish in a ticket for years, I feel like we're getting some momentum on the talking in discussions.

[18:23] <lizmat> yeah, I like the momentum I'm seeing now  :-)

[18:28] <tonyo> coke++

[18:30] <Geth> Â¦ rakudo/main: 97d15491ae | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Raku.pm6

[18:30] <Geth> Â¦ rakudo/main: RakuAST: add RakuAST::Node.EVAL method

[18:30] <Geth> Â¦ rakudo/main: 

[18:30] <Geth> Â¦ rakudo/main: To allow one to EVAL a RakuAST node without needing to do a

[18:30] <Geth> Â¦ rakudo/main: "use SEE-NO-MONKEY-EVAL", similar to Cool.EVAL

[18:30] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/97d15491ae

[18:35] *** linkable6 left
[18:37] <lizmat> vrurg: re making RakuAST available in 6.e: I think it needs a $*WANT_RAKUAST := 1; somewhere, but I'm at a bit of a loss where

[18:38] *** linkable6 joined
[18:39] <lizmat> [Coke] perhaps Blin-report like issues could be made with things that should be documented ?

[18:39] <[Coke]> can you show me a blin report? not sure what it looks like.

[18:39] <lizmat> so people can tick off stuff done?

[18:39] <[Coke]> we probably already have an xt/ that shows missing methods, at lest.

[18:40] <[Coke]> lizmat: see https://github.com/Raku/doc/issues?q=is%3Aissue+is%3Aopen+label%3Achecklist

[18:40] <[Coke]> there are tons of checklists that JJ (and now me) have added based on the rakudo releases.

[18:40] <lizmat> cool... and checked means done, right ?

[18:41] <[Coke]> We also have https://github.com/Raku/doc/blob/main/xt/check-signatures.rakutest which could probably generate similar checklists for inclusion in tickets. (right now it's just TAP, and lots of it is skipped)

[18:42] <[Coke]> yes. if an item is checked, the docs got merged.

[18:42] <[Coke]> once all the checks on a ticket are done, close the ticket.

[18:43] <lizmat> then why is https://github.com/Raku/doc/issues/2673 still open ?

[18:44] <[Coke]> https://github.com/Raku/doc/issues/2673#issuecomment-683439870

[18:44] <lizmat> ack

[18:45] <[Coke]> yah, some of these are a mess. for some of them, I've closed out old ticket that was 99% done and opened a new one with the one thing left.

[18:46] <lizmat> is there a resolution as to how to indicate something is in 6.e ?

[19:01] <Geth> Â¦ rakudo/main: fcdb78cef2 | (Elizabeth Mattijsen)++ | src/Perl6/World.nqp

[19:01] <Geth> Â¦ rakudo/main: use v6.e.PREVIEW or v6.* implies use experimental :rakuast

[19:01] <Geth> Â¦ rakudo/main: 

[19:01] <Geth> Â¦ rakudo/main: As this indicates people experimenting already, and when 6.e is

[19:01] <Geth> Â¦ rakudo/main: released, RakuAST *will* be fully specced and standardly available.

[19:01] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fcdb78cef2

[19:01] <lizmat> vrurg: found it, I think ^^

[19:02] *** djinni` left
[19:08] *** linkable6 left
[19:09] *** djinni` joined
[19:10] *** linkable6 joined
[19:12] <Geth> Â¦ nqp/main: f14cc22047 | (Ben Davies)++ (committed using GitHub Web editor) | 3 files

[19:12] <Geth> Â¦ nqp/main: [JVM] Implement the objprimunsigned and objprimbits ops (#781)

[19:12] <Geth> Â¦ nqp/main: 

[19:12] <Geth> Â¦ nqp/main: * [JVM] Implement the objprimunsigned op

[19:12] <Geth> Â¦ nqp/main: 

[19:12] <Geth> Â¦ nqp/main: MoarVM has a couple ops related to objprimspec in that they expose

[19:12] <Geth> Â¦ nqp/main: metadata pertaining to anything an object boxes, this being one of them.

[19:12] <Geth> Â¦ nqp/main: Would be nice to have a portable way to determine the sign of an int!

[19:12] <Geth> Â¦ nqp/main: <â€¦commit message has 8 more linesâ€¦>

[19:12] <Geth> Â¦ nqp/main: review: https://github.com/Raku/nqp/commit/f14cc22047

[19:17] *** sena_kun joined
[19:17] <Geth> Â¦ nqp/main: 90ca9a6e82 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[19:17] <Geth> Â¦ nqp/main: Bump MoarVM to get Ben Davies' last fixes

[19:17] <Geth> Â¦ nqp/main: review: https://github.com/Raku/nqp/commit/90ca9a6e82

[19:27] <Geth> Â¦ rakudo/main: b721f0a04c | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[19:27] <Geth> Â¦ rakudo/main: Bump NQP to get Ben Davies' last fixes

[19:27] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b721f0a04c

[19:38] <vrurg> lizmat: that location is ok, but I would make it in the Grammar, right after <lang-version> at line 839

[21:23] *** vrurg left
[21:24] *** vrurg joined
[21:45] *** Xliff joined
[22:56] <[Coke]> aaaahahaha. realized the duplicate word checker in raku/docs was only doing pod6 & md. expanded it to all files. found a duplicate word *in the artistic license*

[22:57] <[Coke]> ah, it's ok, though. "offer to sell, sell"

[22:57] <[Coke]> whew.

[22:57] <lizmat> hehe

[23:00] *** kjp left
[23:04] *** kjp joined
[23:14] *** sena_kun left
