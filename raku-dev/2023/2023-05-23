[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[01:02] *** evalable6 left
[01:02] *** linkable6 left
[01:04] *** linkable6 joined
[01:04] *** evalable6 joined
[02:01] *** kurahaupo_ joined
[02:01] *** kurahaupo left
[02:02] *** kurahaupo_ left
[02:02] *** kurahaupo joined
[02:04] *** kurahaupo left
[02:04] *** kurahaupo_ joined
[02:06] *** kurahaupo joined
[02:09] *** kurahaupo_ left
[02:10] *** kurahaupo left
[02:10] *** kurahaupo_ joined
[02:15] *** squashable6 left
[02:16] *** kurahaupo joined
[02:16] *** kurahaupo_ left
[02:16] *** squashable6 joined
[02:19] *** kurahaupo_ joined
[02:19] *** kurahaupo left
[02:25] *** kurahaupo_ left
[02:26] *** kurahaupo joined
[02:29] *** kurahaupo_ joined
[02:30] *** kurahaupo left
[02:37] *** kurahaupo_ left
[02:38] *** kurahaupo joined
[02:39] *** kurahaupo_ joined
[02:39] *** kurahaupo left
[02:47] *** kurahaupo joined
[02:48] *** kurahaupo left
[02:49] *** kurahaupo joined
[02:50] *** kurahaupo_ left
[02:52] *** kurahaupo_ joined
[02:52] *** kurahaupo left
[02:54] *** kurahaupo joined
[02:55] *** kurahaupo_ left
[02:55] *** kurahaupo left
[02:56] *** kurahaupo joined
[03:03] *** kurahaupo left
[03:04] *** kurahaupo joined
[03:05] *** kurahaupo left
[03:05] *** kurahaupo_ joined
[03:11] *** kurahaupo_ left
[03:11] *** kurahaupo joined
[03:29] *** kurahaupo_ joined
[03:29] *** kurahaupo left
[03:33] *** kurahaupo_ left
[05:54] *** Xliff joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[07:08] *** kjp left
[07:11] *** kjp joined
[07:21] *** sjn left
[07:21] *** sjn joined
[07:52] *** nebuchadnezzar left
[08:09] *** sena_kun joined
[08:28] <Geth> ¦ rakudo/main: 809f84cc28 | (Elizabeth Mattijsen)++ | 2 files

[08:28] <Geth> ¦ rakudo/main: RakuAST: move header detection logic to fixups

[08:28] <Geth> ¦ rakudo/main: 

[08:28] <Geth> ¦ rakudo/main: For =table doc, there are some heuristics to determine whether the

[08:28] <Geth> ¦ rakudo/main: first row should be considered a header.  To allow renderers based

[08:28] <Geth> ¦ rakudo/main: on the RakuAST tree to NOT have to replicate those heuristics, it

[08:28] <Geth> ¦ rakudo/main: felt better to move this logic to fixups.

[08:28] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/809f84cc28

[08:46] <Xliff> 'morning, lizmat!

[08:46] <lizmat> Xliff o.

[08:46] <lizmat> o/ rather :-)

[08:46] <Xliff> :)

[09:08] <Geth> ¦ rakudo/main: 6b5171d679 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/LegacyPodify.pm6

[09:08] <Geth> ¦ rakudo/main: RakuAST: apparently leading is *not* referenced deeper

[09:08] <Geth> ¦ rakudo/main: 

[09:08] <Geth> ¦ rakudo/main: This is to mimic the current (strange) behaviour of pod even closer.

[09:08] <Geth> ¦ rakudo/main: 

[09:08] <Geth> ¦ rakudo/main: sub foo { #= trailing

[09:08] <Geth> ¦ rakudo/main: }

[09:08] <Geth> ¦ rakudo/main: 

[09:08] <Geth> ¦ rakudo/main: will result in leading => ["leading"], trailing => [["trailing"],]

[09:08] <Geth> ¦ rakudo/main: in $=pod.

[09:08] <Geth> ¦ rakudo/main: 

[09:08] <Geth> ¦ rakudo/main: Don't ask me why.

[09:08] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6b5171d679

[09:08] <lizmat> argh... it lost the #|leading in the commit message :-(   duh

[10:10] <Geth> ¦ rakudo/main: e17840d8b8 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Fixups.pm6

[10:10] <Geth> ¦ rakudo/main: RakuAST: a DeclaratorTarget needs its children checked also

[10:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e17840d8b8

[10:31] <Geth> ¦ rakudo/main: cdb9a836ac | (Elizabeth Mattijsen)++ | src/Raku/ast/doc-declarator.rakumod

[10:31] <Geth> ¦ rakudo/main: RakUAST: make the default WHY an Any

[10:31] <Geth> ¦ rakudo/main: 

[10:31] <Geth> ¦ rakudo/main: Otherwise deparsing will break

[10:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cdb9a836ac

[10:49] *** linkable6 left
[10:49] *** evalable6 left
[10:52] *** linkable6 joined
[10:52] *** evalable6 joined
[11:00] <releasable6> Next release in ≈3 days and ≈7 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[11:42] *** squashable6 left
[11:45] *** squashable6 joined
[11:58] <Geth> ¦ rakudo/main: f4fa7318f0 | (Elizabeth Mattijsen)++ | 2 files

[11:58] <Geth> ¦ rakudo/main: RakuAST: add proof-of-concept rakudo renderer

[11:58] <Geth> ¦ rakudo/main: 

[11:58] <Geth> ¦ rakudo/main: Based on a RakuAST tree, rather than Pod:: objects.  One either calls

[11:58] <Geth> ¦ rakudo/main: this as a class method:

[11:58] <Geth> ¦ rakudo/main: 

[11:58] <Geth> ¦ rakudo/main:   use RakuDoc::To::Text;

[11:58] <Geth> ¦ rakudo/main:   say RakuDoc::To::Text.render($ast)

[11:58] <Geth> ¦ rakudo/main: <…commit message has 10 more lines…>

[11:58] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f4fa7318f0

[11:58] <lizmat> argh... rakudoc renderer

[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:13] <lizmat> ^^ tbrowder__ 

[12:43] <tbrowder__> lizmat: ok! (P.S. glad to see i'm not the only person here with bouts of ff (finger fumble) :-D )

[12:44] <lizmat> yeah... :-)

[12:47] <tbrowder__> hm, looking good. but i didn't notice any :config handling. did i miss it higher up somewhere?

[12:48] <tbrowder__> i saw caption

[12:50] <tbrowder__>  :config will be used a lot in my plan

[12:51] <tbrowder__> your code sure is much cleaner than pod grammar!

[12:51] <lizmat> well, the only config it handles is the "header-row" which is set to indicate which row in a table should be marked as header

[12:51] <lizmat> and caption of course, but that is legacy

[12:52] <tbrowder__> yes, are paragraphy and head handlers just for tables?

[12:53] <lizmat> paragraphify is for anything that will need their contents word-wrapped

[12:54] <tbrowder__> now i see the config hook, blank for now

[12:54] <lizmat> yeah... I mimice functionality of Pod::To::Text

[12:55] <tbrowder__> maybe define a config class to handle it?

[12:55] <lizmat> well, this is the default renderer to text

[12:55] <lizmat> do we want it to be fully blown with bells and whistles ?

[12:56] <lizmat> that is a question :-)

[12:56] <lizmat> anyways, when encountered, it should be ignored for now

[12:59] <tbrowder__> i'm trying to think of general text handling but, for my future use case, including all the S26 defs would make the text handler more generally useful for multiple uses imho

[13:00] <tbrowder__> as an intermediate DSL

[13:01] <tbrowder__>  and not just as a renderer of text

[13:06] <tbrowder__> Damian's S26 is a terse but complete description of the pod components. his description of text rendering is a bit looser implying to me other tools should be able to use the same pod for other purposes.

[13:08] <lizmat> I guess I should re-read S26 completely :-)

[13:21] <Geth> ¦ rakudo/main: 7a49b6ec85 | (Elizabeth Mattijsen)++ | lib/RakuDoc/To/Text.rakumod

[13:21] <Geth> ¦ rakudo/main: RakuAST: some =table text rendering tweaks

[13:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7a49b6ec85

[14:32] <Geth> ¦ rakudo/main: b50187e4d5 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Deparse.pm6

[14:32] <Geth> ¦ rakudo/main: RakuAST: fix deparsing of implicit code blocks

[14:32] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b50187e4d5

[14:50] <[Tux]> Rakudo v2023.04-89-g10742c991 (v6.d) on MoarVM 2023.04-1-g965be0af5

[14:50] <[Tux]> csv-test-xs-20      0.381 -  0.391

[14:50] <[Tux]> test-t --race       0.988 -  1.073

[14:50] <[Tux]> csv-ip5xs           0.924 -  1.005

[14:50] <[Tux]> test-t              1.583 -  1.806

[14:50] <[Tux]> csv-parser          3.759 -  4.568

[14:50] <[Tux]> test-t-20 --race    6.426 -  7.746

[14:50] <[Tux]> csv-ip5xs-20        6.397 -  7.695

[14:50] <[Tux]> test                6.855 -  8.044

[14:50] <[Tux]> test-t-20          21.476 - 24.028

[15:20] <Geth> ¦ rakudo/main: 01e8222482 | (Elizabeth Mattijsen)++ | 3 files

[15:20] <Geth> ¦ rakudo/main: Make Int.Str take a :superscript named argument

[15:20] <Geth> ¦ rakudo/main: 

[15:20] <Geth> ¦ rakudo/main: Replaces the Int.superize implementation-detail method.

[15:20] <Geth> ¦ rakudo/main: 

[15:20] <Geth> ¦ rakudo/main:     say 42.Str;                 # 42

[15:20] <Geth> ¦ rakudo/main:     say 42.Str(:superscript);   # ⁴²

[15:20] <Geth> ¦ rakudo/main:     say 42.Str(:!superscript);  # 42

[15:20] <Geth> ¦ rakudo/main: 

[15:20] <Geth> ¦ rakudo/main: By popular request

[15:20] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/01e8222482

[16:22] *** linkable6 left
[16:23] *** linkable6 joined
[16:24] <dogbert17> lizmat: I get the feeling (probably incorrectly) that this commit might have been incorrect if the idea was to get hold of the new libuv version? https://github.com/Raku/nqp/commit/db7d603cd79fee5d9cdf9d57c158c2a47ffa051f

[16:24] <lizmat> aaah... hmmm

[16:26] <lizmat> ok, indeed, a fresh MoarVM clone shows a different git describe

[16:29] <lizmat> yup, got the right libuv now, bumping NQP again

[16:30] <Geth> ¦ nqp/main: 921a73be32 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[16:30] <Geth> ¦ nqp/main: Properly bump MoarVM for libuv update

[16:30] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/921a73be32

[16:39] <Geth> ¦ rakudo/main: 401b77a8a1 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[16:39] <Geth> ¦ rakudo/main: Bump NQP to get libuv update (now for real)

[16:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/401b77a8a1

[16:40] <lizmat> dogbert17++ for following through!

[16:45] <Geth> ¦ rakudo/main: 0248cc3e4d | (Elizabeth Mattijsen)++ | src/core.c/Int.pm6

[16:45] <Geth> ¦ rakudo/main: Add Int.Str(:subscript) for completeness sake

[16:45] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0248cc3e4d

[16:50] <dogbert17> yay, now it works, lizmat++

[17:00] <jdv> so, what kind of hosting/compute resources does this org have?

[17:00] <jdv> this being the 2nd or more'th time I've ran into this issue I think the org should host the builds used by *able bots and blin.

[17:02] <jdv> the release will be defered until this can be resolved - most likely not happening this week.

[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:02] <lizmat> jdv: you could ask on #raku-infra  :-)

[18:05] <sjn> hey, quick question (2nd try); when is the next language spec scheduled to be released?

[18:05] <lizmat> sjn: good question

[18:05] <lizmat> I hope we will be able to be more specific after the Raku Core Summit

[18:06] <sjn> ah, cool

[18:28] *** patrickb left
[18:31] *** patrickb joined
[21:01] *** greppable6 left
[21:01] *** committable6 left
[21:01] *** evalable6 left
[21:01] *** nativecallable6 left
[21:01] *** unicodable6 left
[21:01] *** releasable6 left
[21:01] *** bloatable6 left
[21:01] *** linkable6 left
[21:01] *** notable6 left
[21:01] *** statisfiable6 left
[21:01] *** shareable6 left
[21:01] *** reportable6 left
[21:01] *** benchable6 left
[21:01] *** coverable6 left
[21:01] *** bisectable6 left
[21:01] *** sourceable6 left
[21:01] *** quotable6 left
[21:01] *** tellable6 left
[21:01] *** tellable6 joined
[21:01] *** nativecallable6 joined
[21:01] *** committable6 joined
[21:01] *** bloatable6 joined
[21:02] *** releasable6 joined
[21:02] *** evalable6 joined
[21:02] *** quotable6 joined
[21:02] *** bisectable6 joined
[21:03] *** reportable6 joined
[21:03] *** benchable6 joined
[21:03] *** sourceable6 joined
[21:03] *** greppable6 joined
[21:03] *** linkable6 joined
[21:03] *** statisfiable6 joined
[21:03] *** notable6 joined
[21:03] *** unicodable6 joined
[21:04] *** shareable6 joined
[21:04] *** coverable6 joined
[21:10] *** vrurg left
[21:15] *** sena_kun left
[21:17] *** vrurg joined
[21:28] *** vrurg left
[21:28] *** vrurg joined
[22:03] *** squashable6 left
[22:05] *** squashable6 joined
