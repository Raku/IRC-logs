[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:04] <Geth> ¦ Template6/main: e259e083c1 | (Polgár Márton)++ | 7 files

[00:04] <Geth> ¦ Template6/main: 0.11.3

[00:04] <Geth> ¦ Template6/main: review: https://github.com/raku-community-modules/Template6/commit/e259e083c1

[02:13] *** evalable6 left
[02:13] *** linkable6 left
[02:14] *** linkable6 joined
[02:14] *** evalable6 joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:50] *** coverable6 left
[07:50] *** linkable6 left
[07:50] *** reportable6 left
[07:50] *** unicodable6 left
[07:50] *** quotable6 left
[07:50] *** benchable6 left
[07:50] *** notable6 left
[07:50] *** evalable6 left
[07:50] *** committable6 left
[07:50] *** statisfiable6 left
[07:50] *** bisectable6 left
[07:50] *** squashable6 left
[07:50] *** tellable6 left
[07:50] *** sourceable6 left
[07:50] *** nativecallable6 left
[07:50] *** shareable6 left
[07:50] *** evalable6 joined
[07:50] *** reportable6 joined
[07:50] *** committable6 joined
[07:51] *** unicodable6 joined
[07:51] *** bisectable6 joined
[07:52] *** tellable6 joined
[07:52] *** shareable6 joined
[07:52] *** notable6 joined
[07:52] *** coverable6 joined
[07:52] *** quotable6 joined
[07:53] *** nativecallable6 joined
[07:53] *** squashable6 joined
[07:53] *** linkable6 joined
[07:53] *** benchable6 joined
[07:53] *** statisfiable6 joined
[07:53] *** sourceable6 joined
[09:50] *** ab5tract joined
[09:54] <Geth> ¦ rakudo/main: 500ad5f637 | (Elizabeth Mattijsen)++ | src/core.c/unicodey.pm6

[09:54] <Geth> ¦ rakudo/main: Make Cool.uninames actually work

[09:54] <Geth> ¦ rakudo/main: 

[09:54] <Geth> ¦ rakudo/main: It had a wrong return value type

[09:54] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/500ad5f637

[10:00] *** Nemokosch joined
[10:01] <Nemokosch> bisectable6: sub ponder { next }; for (1..3) { ponder; .say }; say "done"

[10:01] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[10:01] <tellable6> 2023-03-07T22:16:17Z #raku <rf> Nemokosch: How do I clear the stash in Template6

[10:01] <bisectable6> Nemokosch, ¦6c (67 commits): «done␤»

[10:01] <bisectable6> Nemokosch, Nothing to bisect!

[10:01] <Nemokosch> ew

[10:02] *** Nemokosch left
[10:04] <lizmat> m: sub ponder { next }; for (1..3) { ponder; .say }; say "done"

[10:04] <camelia> rakudo-moar 4fa44f8d3: OUTPUT: «done␤»

[10:05] <lizmat> m: sub ponder { next FOO }; FOO: for (1..3) { ponder; .say }; say "done"

[10:05] <camelia> rakudo-moar 4fa44f8d3: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '&FOO' is not declared.  Perhaps you forgot a 'sub' if this␤was intended to be part of a signature?␤at <tmp>:1␤------> sub ponder { next ⏏FOO }; FOO: for (1..3) { ponder; .say };␤»

[10:05] <lizmat> m: FOO: for (1..3) { next FOO; .say }; say "done"

[10:05] <camelia> rakudo-moar 4fa44f8d3: OUTPUT: «done␤»

[10:06] <discord-raku-bot> <Nemokosch> now I'm looking up roast if this case was ever planned for

[10:06] <discord-raku-bot> <Nemokosch> it seems fairly intuitive that next/last stuff should behave like return

[10:08] <lizmat> next / last / redo are control exceptions

[10:09] <lizmat> m: CONTROL { say .^name }; next

[10:09] <camelia> rakudo-moar 4fa44f8d3: OUTPUT: «CX::Next␤next without loop construct␤  in block <unit> at <tmp> line 1␤␤»

[10:09] <lizmat> any loop construct basically sets up a "catcher" for such exceptions

[10:10] <discord-raku-bot> <Nemokosch> I don't think the implementation should matter too much for the expectations

[10:10] <discord-raku-bot> <Nemokosch> A Block acts inlined, a Sub is context-insensitive

[10:10] <lizmat> which is why it is able to say "next without a loop construct" because there's an outer CONTROL block that catches them and puts out the message

[10:11] <lizmat> well, I guess you could call that behaviour another Perl heritage

[10:13] <discord-raku-bot> <Nemokosch> actually this doesn't even sound too bad

[10:13] <discord-raku-bot> <Nemokosch> subs need a CONTROL handler by default, sounds about fixed?

[10:14] <lizmat> except from an optimization point of view

[10:16] <lizmat> BTW, do you want a warning or throwing an exception ?

[10:17] <lizmat> anyways, I think this could be handled easier with a check at the receiving side, checking the outer lexical sub scope: if different warn or throw 

[10:18] <discord-raku-bot> <Nemokosch> > CX::Next␤next without loop construct␤

[10:18] <discord-raku-bot> <Nemokosch> I think this would fit perfectly for these scenarios as well

[10:18] <lizmat> still, that also would impose a performance penalty, but at least it would be for the use of next/last/redo

[10:19] <lizmat> afk&

[10:19] <discord-raku-bot> <Nemokosch> if somebody wants to live on the edge, they can use Block

[10:41] <discord-raku-bot> <Nemokosch> I never knew there was goto in Raku lol

[10:58] <discord-raku-bot> <Nemokosch> once RakuAST is ready, it will become much easier to search code for certain structures

[11:02] <discord-raku-bot> <Nemokosch> by the way, from optimization point of view - in RakuAST, it will be easy to detect if this "guarding handler" is necessary at all

[11:04] *** linkable6 left
[11:04] *** evalable6 left
[11:05] *** evalable6 joined
[11:07] *** linkable6 joined
[11:32] <discord-raku-bot> <Nemokosch> One more thing: I wonder how the specification could handle a change like this. First off, it's not obvious whether this is a change because it doesn't seem to be present in the spectests. But since code might depend on it (and it does, confer doc tests), let's say it is a design-level change.

[11:32] *** guifa left
[11:33] <discord-raku-bot> <Nemokosch> is it even possible to intervene this deeply from core at all?

[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[13:02] *** reportable6 left
[13:02] *** linkable6 left
[13:02] *** quotable6 left
[13:02] *** unicodable6 left
[13:02] *** bisectable6 left
[13:02] *** benchable6 left
[13:02] *** sourceable6 left
[13:02] *** coverable6 left
[13:02] *** squashable6 left
[13:02] *** committable6 left
[13:02] *** tellable6 left
[13:02] *** evalable6 left
[13:02] *** notable6 left
[13:02] *** shareable6 left
[13:02] *** releasable6 left
[13:02] *** nativecallable6 left
[13:02] *** statisfiable6 left
[13:02] *** unicodable6 joined
[13:03] *** bisectable6 joined
[13:03] *** sourceable6 joined
[13:03] *** shareable6 joined
[13:03] *** coverable6 joined
[13:03] *** quotable6 joined
[13:03] *** nativecallable6 joined
[13:04] *** tellable6 joined
[13:04] *** evalable6 joined
[13:04] *** benchable6 joined
[13:04] *** releasable6 joined
[13:05] *** statisfiable6 joined
[13:05] *** squashable6 joined
[13:05] *** linkable6 joined
[13:05] *** reportable6 joined
[13:05] *** committable6 joined
[13:05] *** notable6 joined
[14:25] <Geth> ¦ rakudo/main: e8f419aefb | (Stefan Seifert)++ | 4 files

[14:25] <Geth> ¦ rakudo/main: RakuAST: fix colonpairs silently getting dropped from identifiers

[14:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e8f419aefb

[14:25] <nine> I don't like this, but it improves things...

[14:37] *** squashable6 left
[14:38] *** squashable6 joined
[16:16] *** Geth left
[16:16] *** Geth joined
[16:19] <Geth> ¦ rakudo/main: af0c88cc2a | (Elizabeth Mattijsen)++ | src/core.c/unicodey.pm6

[16:19] <Geth> ¦ rakudo/main: Make Cool.uniname actually match the documentation

[16:19] <Geth> ¦ rakudo/main: 

[16:19] <Geth> ¦ rakudo/main: There do not appear to be any tests :-(

[16:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/af0c88cc2a

[16:19] <lizmat> wow, that took a while

[16:26] <vrurg> Oh, was stepping on this rake long ago...

[16:26] <vrurg> *I was

[16:45] *** normietotechie[m joined
[17:57] *** thundergnat joined
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:02] *** thundergnat left
[19:46] *** vrurg left
[20:11] *** vrurg joined
[20:29] *** vrurg left
[20:32] *** vrurg joined
[20:42] *** lucs left
[20:47] *** vrurg left
[20:48] *** vrurg joined
[22:03] *** ab5tract left
[22:14] *** squashable6 left
[22:15] *** squashable6 joined
[23:15] *** evalable6 left
[23:15] *** linkable6 left
[23:16] *** evalable6 joined
[23:16] *** linkable6 joined
[23:31] *** NemokoschKiwi joined
[23:40] *** NemokoschKiwi left
