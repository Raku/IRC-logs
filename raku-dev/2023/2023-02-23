[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[01:50] *** squashable6 left
[01:51] *** squashable6 joined
[03:01] *** discord-raku-bot left
[03:01] *** discord-raku-bot joined
[04:32] *** codesections left
[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[08:03] *** frost joined
[08:05] *** frost left
[08:32] *** squashable6 left
[08:32] *** squashable6 joined
[09:31] *** sena_kun joined
[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: 4695cbe50e | (Elizabeth Mattijsen)++ | 2 files

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: Provide better error message for my %h = Callable

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: 

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: If it is the *only* value stored in a Map, and it is a Callable,

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: provide an error message that points to the use of ; vs , in the

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: contents of the Callable ({ :a; :b } versus { :a, :b }).

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: 

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: Addresses https://github.com/rakudo/rakudo/issues/5170

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: 

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: This change may actually be a performance improvement, as it

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: reduces the binary size of the STORE methods involved, making

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: it more likely they can be inlined.

[11:00] <Geth> ¦ rakudo/lizmat-store-Callable: review: https://github.com/rakudo/rakudo/commit/4695cbe50e

[11:01] <Geth> ¦ rakudo: lizmat++ created pull request #5213: Provide better error message for my %h = Callable

[11:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5213

[11:02] <Geth> ¦ roast: c7049326de | (Elizabeth Mattijsen)++ | S03-operators/context.t

[11:02] <Geth> ¦ roast: Make test less specific

[11:02] <Geth> ¦ roast: 

[11:02] <Geth> ¦ roast: Otherwise https://github.com/rakudo/rakudo/pull/5213 will cause

[11:02] <Geth> ¦ roast: a failed test.

[11:02] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/c7049326de

[11:10] *** SmokeMac` joined
[11:10] *** ab5tract joined
[11:13] *** SmokeMac` is now known as SmokeMachine_erc

[11:19] *** SmokeMac` joined
[11:23] *** SmokeMac` is now known as SmokeMachineERC

[11:27] *** SmokeMachine_erc left
[11:29] *** SmokeMachineERC left
[11:32] *** SmokeMachineERC joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:51] *** ab5tract left
[14:05] *** SmokeMachineERC left
[15:15] *** ab5tract joined
[15:37] *** ab5tract left
[15:57] *** El_Che joined
[15:57] <El_Che> hello, if someone is inclined, I have some nice failing tests and build stuff: https://github.com/nxadm/rakudo-pkg/actions/runs/4254268028/jobs/7400292959

[15:57] <El_Che> t/09-moar/01-profilers.t   failed on many distros

[15:58] <El_Che> and some had this: "my sub" not yet implemented at /__w/rakudo-pkg/rakudo-pkg/rakudo/3rdparty/nqp-configure/lib/NQP/Config.pm line 1522.

[15:58] <El_Che> probably related to newer perl versions?

[16:00] <El_Che> the my subs error I saw on ubunut 16.04 and redhat/centos 7, the oldest from the bunch

[16:00] <vrurg> El_Che: there is no 'my sub' at that line!

[16:01] <El_Che> debian 9 as well

[16:01] <vrurg> Interesting, there is one on the HEAD of the module. How do you do the build? Do you checkout the submodule?

[16:02] <El_Che> https://github.com/nxadm/rakudo-pkg/blob/master/actions/build.sh#L29

[16:02] <El_Che> clone: https://github.com/nxadm/rakudo-pkg/blob/master/actions/download.sh#L11

[16:04] <El_Che> for eacht the 2023.03 version is checked out

[16:06] <El_Che> vrurg: debian 9: https://pipelines.actions.githubusercontent.com/serviceHosts/2d0ef5b4-d153-4d13-935d-5817283dedf1/_apis/pipelines/1/runs/860/signedlogcontent/12?urlExpires=2023-02-23T16%3A07%3A01.3526200Z&urlSigningMethod=HMACV1&urlSignature=gZzdV8OTO4vzVNyq7nvNeaMQeckUVjncJs%2BMLpUysfI%3D

[16:07] <El_Che> that's the build

[16:08] <vrurg> El_Che: somehow you get `nqp-configure` submodule HEAD instead what is the current bound commit. The HEAD does have `my sub`, which is bad due to it only available since 5.18 and, apparently, many distros consider it too modern and unreliable.

[16:08] <El_Che> looking at the log to figure out that happens

[16:10] <vrurg> Hm, now I am confused. My macOS build do have that version of submodule. Linux build is using an older one. What the...

[16:11] <vrurg> Anyway, the `my sub` has to be eliminated. No idea how do these distros manage to live with archeologically dated versions of Perl, but...

[16:12] <El_Che> sadly the log does not have the checkout info

[16:12] <El_Che> but in short: git clone --recurse-submodules https://github.com/raku/nqp.git && cd nqp && git checkout $NQP_VERSION

[16:12] <El_Che> so nothing weird there

[16:15] <El_Che> vrurg: ah, here is the clone log: https://pipelines.actions.githubusercontent.com/serviceHosts/2d0ef5b4-d153-4d13-935d-5817283dedf1/_apis/pipelines/1/runs/860/signedlogcontent/2?urlExpires=2023-02-23T16%3A15%3A55.7074129Z&urlSigningMethod=HMACV1&urlSignature=c0oT55kAYzTmXwTOsnfIvsm2rdjNmXpqGJN4LZBLQ7E%3D

[16:15] <El_Che> ctrl+f for nqp

[16:15] <El_Che> does what expected there

[16:15] <vrurg> It gets what's expected. Looks like Perl's version is not what is expected.

[16:16] <El_Che> well, the rakudo-pkg scripts didn't change between 2022.12 and today, and probably neither the distros

[16:16] <vrurg> I used a lexical sub totally automatically, because I can, because this is normal. I'm pissed off with people being so conservative!

[16:16] <El_Che> certainly old ones like rhel 7 and ubuntu 16.04

[16:17] <El_Che> vrurg: there I a reason I wrote that in bourne shell instead of raku (!), perl or bash :)

[16:21] <vrurg> El_Che: there is a quick workaround, if you wish and can apply a patch. I guess, you can. Simply remove `my` for both entries. This will result in a warning, but it is harmless.

[16:22] <vrurg> Proper fix would take a little time and will require a patch release which I'm not particularly happy about. :(

[16:24] <El_Che> 2 places?

[16:24] <El_Che> "my sub" not yet implemented at /__w/rakudo-pkg/rakudo-pkg/rakudo/3rdparty/nqp-configure/lib/NQP/Config.pm line 1522.

[16:24] <El_Che> that's 1

[16:25] <El_Che> I see them

[16:25] <El_Che> my sub on_stdout and on_stderr

[16:25] <El_Che> I'll patch them quick and dirty to release the packages

[16:25] <vrurg> Oh, even better. I forgot it works this way!

[16:26] <El_Che> but others will hit it as well

[16:26] <vrurg> `my $on_stdout = sub {... ` – and the same for on_stderr. Then just replace \&on_ below with $on_

[16:26] <El_Che> on the second issue, I often have flippers and have to run several build to make them all pass

[16:27] <El_Che> but the profilers.t is the first one in a long time that failed on so many at the same time

[16:27] <El_Che> is it time based?

[16:28] <vrurg> I don't know, never looked into what it does. 

[16:28] <El_Che> will removing the my won't be enough?

[16:28] <El_Che> does sub in sub work?

[16:28] <El_Che> probably not

[16:29] <El_Che> it does not matter, what you propose is simple enough

[16:29] <vrurg> Removing `my` works, but leaves you with a worthless warning. The `my $on_ = sub {` is a flawless solution.

[16:29] <vrurg> I will commit it later today, but have to go now.

[16:32] <El_Che> i will do several runs to see if the profilers test if a flapper before patching. Thx for the help

[16:32] <El_Che> aid

[16:47] <El_Che> (reran everything again: so only ubuntu 16.04, ubi 7 (rhel/centos/...) and debian 9 hit the bug

[17:09] <Geth> ¦ rakudo/lizmat-store-Callable: 21ec434f86 | (Elizabeth Mattijsen)++ | src/core.c/Map.pm6

[17:09] <Geth> ¦ rakudo/lizmat-store-Callable: Elaborated in error message:

[17:09] <Geth> ¦ rakudo/lizmat-store-Callable: 

[17:09] <Geth> ¦ rakudo/lizmat-store-Callable: Cannot use a Callable as the only argument to store in a Hash.  If the

[17:09] <Geth> ¦ rakudo/lizmat-store-Callable: intent was to store the contents of a Hash, one should probably use the

[17:09] <Geth> ¦ rakudo/lizmat-store-Callable: %( ) hash constructor instead of { }.  Causes of { } misinterpretation:

[17:09] <Geth> ¦ rakudo/lizmat-store-Callable: - using ';' instead of ',' to separate values, as these imply statements

[17:09] <Geth> ¦ rakudo/lizmat-store-Callable: - using '$_' or any placeholder variable, as they imply a block scope

[17:09] <Geth> ¦ rakudo/lizmat-store-Callable: review: https://github.com/rakudo/rakudo/commit/21ec434f86

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:37] <nine> Is there even a point to building on such old distro version_

[18:38] <lizmat> I'd say: yes

[18:38] <lizmat> if MoarVM otherwise builds, yes

[18:44] <El_Che> (for the record, I haven't seen such a flapper failing so much in ages [profilers.t])

[18:44] <[Coke]> ubuntu 16.04 supported through 2026, but they have $$. :)

[18:45] <El_Che> nine: my idea is to build on what's supported.

[18:45] <El_Che> (in the hope people use raku when they can't or don't want to upgrade the os)

[18:46] <El_Che> there is huge rhel/centos7 install base out there, certainly with Redhat killing centos 8

[18:46] <El_Che> they still have until next year to figure out where to go next

[18:47] <El_Che> ("they" is also me, I still have a few services on centos 7) 

[18:48] <jdv> (the gig im bouncing from at the end of the month is still on centos 6:|)

[18:56] *** sena_kun left
[19:21] *** sena_kun joined
[20:21] *** benchable6 left
[20:21] *** squashable6 left
[20:21] *** linkable6 left
[20:21] *** reportable6 left
[20:21] *** releasable6 left
[20:21] *** tellable6 left
[20:21] *** committable6 left
[20:21] *** quotable6 left
[20:21] *** unicodable6 left
[20:21] *** statisfiable6 left
[20:21] *** shareable6 left
[20:21] *** notable6 left
[20:21] *** sourceable6 left
[20:21] *** notable6 joined
[20:22] *** unicodable6 joined
[20:22] *** sourceable6 joined
[20:22] *** quotable6 joined
[20:22] *** benchable6 joined
[20:22] *** committable6 joined
[20:22] *** shareable6 joined
[20:22] *** reportable6 joined
[20:23] *** squashable6 joined
[20:23] *** tellable6 joined
[20:23] *** statisfiable6 joined
[20:23] *** releasable6 joined
[20:23] *** linkable6 joined
[20:35] *** codesections joined
[20:37] <lizmat> meh: RakuAST::Type::Definedness takes 2 positionals, breaking the contract of 1 positional or nameds: method new(RakuAST::Type $base-type, Bool $definite) {

[20:39] <lizmat> same for RakuAST::Type::Coercion

[20:41] <lizmat> and RakuAST::Type::Parameterized

[20:46] <lizmat> argh, and RakuAST::Var::Package takes a positional *and* a named

[21:28] <Geth> ¦ nqp-configure/main: 1b4ae93d39 | (Vadim Belman)++ | lib/NQP/Config.pm

[21:28] <Geth> ¦ nqp-configure/main: Fix compatibility with older Perl versions

[21:28] <Geth> ¦ nqp-configure/main: 

[21:28] <Geth> ¦ nqp-configure/main: `my sub` is only available since 5.18. But we still can compile on

[21:28] <Geth> ¦ nqp-configure/main: distros which where earlier versions of Perl are the default.

[21:28] <Geth> ¦ nqp-configure/main: review: https://github.com/Raku/nqp-configure/commit/1b4ae93d39

[21:30] <Geth> ¦ rakudo: vrurg++ created pull request #5214: Bump nqp-configure submodule version

[21:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5214

[21:33] <Geth> ¦ nqp/main: 7d6de1e54a | (Vadim Belman)++ | 3rdparty/nqp-configure

[21:33] <Geth> ¦ nqp/main: Bump nqp-configure submodule version

[21:33] <Geth> ¦ nqp/main: 

[21:33] <Geth> ¦ nqp/main: Fix compatibility with older Perl versions

[21:33] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/7d6de1e54a

[21:35] *** evalable6 left
[21:35] *** linkable6 left
[21:36] *** linkable6 joined
[21:37] *** evalable6 joined
[22:08] *** codesections left
