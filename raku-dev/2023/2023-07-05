[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:41] *** [Coke] left
[01:38] *** linkable6 joined
[02:57] *** quotable6 joined
[04:45] *** reportable6 left
[04:45] *** linkable6 left
[04:45] *** greppable6 left
[04:45] *** quotable6 left
[04:45] *** nativecallable6 left
[04:45] *** notable6 left
[04:45] *** bisectable6 left
[04:45] *** coverable6 left
[04:45] *** evalable6 left
[04:45] *** squashable6 left
[04:45] *** releasable6 left
[04:45] *** benchable6 left
[04:45] *** sourceable6 left
[04:45] *** bloatable6 left
[04:45] *** tellable6 left
[04:45] *** shareable6 left
[04:45] *** unicodable6 left
[04:45] *** statisfiable6 left
[04:45] *** committable6 left
[04:45] *** reportable6 joined
[04:45] *** greppable6 joined
[04:46] *** coverable6 joined
[04:46] *** releasable6 joined
[04:47] *** notable6 joined
[04:47] *** bisectable6 joined
[04:48] *** tellable6 joined
[04:48] *** squashable6 joined
[04:48] *** sourceable6 joined
[05:48] *** quotable6 joined
[06:00] *** reportable6 left
[06:01] *** committable6 joined
[06:31] <lizmat> ugexe re 	Impossible coercion from BOOTInt into Int: value is of unacceptable type BOOTInt    any idea where that happened?

[06:50] *** shareable6 joined
[06:51] *** nativecallable6 joined
[06:53] *** benchable6 joined
[06:54] *** statisfiable6 joined
[06:55] *** unicodable6 joined
[06:57] *** evalable6 joined
[07:08] *** reportable6 joined
[07:16] <Geth> ¦ rakudo/main: e36ac593fe | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[07:16] <Geth> ¦ rakudo/main: RakuAST: now that =finish is a directive

[07:16] <Geth> ¦ rakudo/main: 

[07:16] <Geth> ¦ rakudo/main: We no longer need to check for it explicitely

[07:16] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e36ac593fe

[07:21] *** ab5tract left
[07:58] *** linkable6 joined
[08:22] *** sena_kun joined
[09:04] *** bloatable6 joined
[09:13] <Geth> ¦ roast: da2685d8d5 | (Elizabeth Mattijsen)++ | S26-documentation/04-code.t

[09:13] <Geth> ¦ roast: Fix incorrect test for implicit code block

[09:13] <Geth> ¦ roast: 

[09:13] <Geth> ¦ roast: https://github.com/finanalyst/Rakudoc-BETA/issues/20#issuecomment-1621287124

[09:13] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/da2685d8d5

[09:13] <lizmat> 885!

[09:19] <Geth> ¦ rakudo/main: a05c4061ad | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Fixups.pm6

[09:19] <Geth> ¦ rakudo/main: RakuAST: =cell will also honor implicit code blocks

[09:19] <Geth> ¦ rakudo/main: 

[09:19] <Geth> ¦ rakudo/main: https://github.com/finanalyst/Rakudoc-BETA/issues/20#issuecomment-1621287124

[09:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a05c4061ad

[09:24] *** sena_kun left
[09:30] *** sena_kun joined
[09:34] *** sena_kun left
[10:23] <Geth> ¦ rakudo/main: cf29e292a6 | (Elizabeth Mattijsen)++ | src/core.c/Version.pm6

[10:23] <Geth> ¦ rakudo/main: Streamline Version a bit

[10:23] <Geth> ¦ rakudo/main: 

[10:23] <Geth> ¦ rakudo/main: - newdisp makes verbatim dispatch faster, so use that for the common

[10:23] <Geth> ¦ rakudo/main:   occurring version values

[10:23] <Geth> ¦ rakudo/main: - remove nqp::stmts at the outer level, they're not needed

[10:23] <Geth> ¦ rakudo/main: - expand )))  for better readability

[10:23] <Geth> ¦ rakudo/main: 

[10:23] <Geth> ¦ rakudo/main: No functional changes, just some old maintenance and preparation for

[10:23] <Geth> ¦ rakudo/main: some new features.

[10:23] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cf29e292a6

[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:06] <ugexe> lizmat: https://gist.github.com/ugexe/c92c193064a3a2ca41ea71f540b59265

[12:08] <lizmat> multi method indent(Cool:D: $steps) { self.Str.indent($steps) }   ??

[12:08] <lizmat> could it be it's going awry while trying to produce an error ?

[12:18] <Geth> ¦ rakudo/main: 2184c5a83e | (Elizabeth Mattijsen)++ | 2 files

[12:18] <Geth> ¦ rakudo/main: RakuAST: C<> markup implies verbatimizing

[12:18] <Geth> ¦ rakudo/main: 

[12:18] <Geth> ¦ rakudo/main: https://github.com/finanalyst/Rakudoc-BETA/issues/25#issuecomment-1621448351

[12:18] <Geth> ¦ rakudo/main: 

[12:18] <Geth> ¦ rakudo/main: Basically move the flattening of V<> and C<> to "from-string" by

[12:18] <Geth> ¦ rakudo/main: first having the string parsed, and then verbatimizing any V<> and

[12:18] <Geth> ¦ rakudo/main: C<> markup codes.  Adapt podifying accordingly.

[12:18] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2184c5a83e

[12:21] <ugexe> I'm not sure.  But if its producing an error before encountering this one then there is at least two errors

[12:21] <lizmat> indeed :-(

[12:21] <ugexe> i'm kind of assuming it would be related to rakuast in some way

[12:22] <lizmat> well, typically some implicit conversions that are handled by MoarVM, aren't handled by the JVM backend

[12:22] <lizmat> there's some conditionals in the core handling that

[12:23] <lizmat> I would assume something new got added to the core that isn't properly "escaped" for the JVM backend

[16:38] *** notna joined
[17:31] <gfldex> If I would write `use Foo::Module; #= zef install Foo;`, could Rakudo display that hint instead of just complaining about unfindable modules?

[17:32] *** sena_kun joined
[17:43] <ugexe> im not sure that is a great idea, it could very well be the module is provided in a location that isn't being provided in the current e.g. RAKULIB

[17:47] <ugexe> some CURs aren't "installs (CURFS), and some CURs don't need to install (CompUnit::Repository::Github)

[17:50] <ugexe> it could make sense to add some note to the general message though, like "maybe you need to install Foo::Module"

[17:52] <ugexe> i guess what i'm saying is I don't trust users to provide technically accurate messages, although we could come up with something generic

[17:54] <ugexe> like if i saw "you may need to `zef install Foo`" i think thats fine, but "you need to `zef install Foo`" not so much

[17:55] <ugexe> of course keeping those custom messages in sync with the version/api/auth would quite redundant, i.e. `use Foo:auth<xxx>:ver<1>:api<1>; #= zef install "Foo:auth<xxx>:ver<1>:api<1>"`

[17:55] <ugexe> even then there might be quoting differences between e.g. linux and windows cmd.exe

[17:56] <ugexe> perl -e 'use Dfasfd'

[17:56] <ugexe> Can't locate Dfasfd.pm in @INC (you may need to install the Dfasfd module) (@INC contains:

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:22] <gfldex> I was thinking of stand-alone scripts that might not be shipped via zef or other such means. It would be nice to allow them to display a message when even compiling the script fails, not just when a module is not found. I always found it rather cumbersome to hunt down deps for perl-scripts.

[18:37] <ugexe> it honestly would probably be just as easy to provide a META6.json that just lists the dependencies of the stand alone script, treating it like a lock file

[18:40] <ugexe> so the mechanism is already there in a way. do we really want multiple ways of doing this, that could also potentially conflict with each other?

[18:41] <ugexe> maybe conflict isn't the best way to put it

[19:47] *** notna left
[21:38] <Geth> ¦ rakudo/main: 4a66191130 | (Nick Logan)++ | src/vm/moar/ModuleLoaderVMConfig.nqp

[21:38] <Geth> ¦ rakudo/main: Remove nqp/lib from vm search paths

[21:38] <Geth> ¦ rakudo/main: 

[21:38] <Geth> ¦ rakudo/main: The removed comment suggests that this code shouldn't be needed

[21:38] <Geth> ¦ rakudo/main: anymore, since `:from<NQP>` was implemented at some point. The

[21:38] <Geth> ¦ rakudo/main: passing `make test` and `make spectest` also suggest this code is

[21:38] <Geth> ¦ rakudo/main: not needed anymore. However, to be clear, I'm not sure why the

[21:38] <Geth> ¦ rakudo/main: `:from<NQP>` adverb might make this library inclusion required.

[21:38] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4a66191130

[21:38] <Geth> ¦ rakudo/main: 64fef8049f | (Nick Logan)++ | src/vm/moar/ModuleLoaderVMConfig.nqp

[21:39] <Geth> ¦ rakudo/main: Remove rakudo-home/lib from vm_search_path

[21:39] <Geth> ¦ rakudo/main: 

[21:39] <Geth> ¦ rakudo/main: rakudo-home/lib is provided elsewhere, and thus this search path

[21:39] <Geth> ¦ rakudo/main: isn't needed. This makes the vm_search_path return an empty array,

[21:39] <Geth> ¦ rakudo/main: similar to the JS backend. Note that we don't get rid of the

[21:39] <Geth> ¦ rakudo/main: vm_search_path method altogether because the JVM can return a non

[21:39] <Geth> ¦ rakudo/main: empty array of paths.

[21:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/64fef8049f

[21:39] <Geth> ¦ rakudo/main: 04bf4f719a | (Nick Logan)++ (committed using GitHub Web editor) | src/vm/moar/ModuleLoaderVMConfig.nqp

[21:39] <Geth> ¦ rakudo/main: Merge pull request #5304 from rakudo/ugexe/remove-unneeded-nqp-lib

[21:39] <Geth> ¦ rakudo/main: 

[21:39] <Geth> ¦ rakudo/main: Remove nqp-home/lib and rakudo-home/lib from vm search paths

[21:39] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/04bf4f719a

[21:47] *** sena_kun left
[21:59] *** [Coke] joined
[22:28] <ugexe> lizmat: it looks like jvm stopped building with https://github.com/rakudo/rakudo/commit/e9f438f5aab716017d2a63c1e093273f8101db6b

[22:29] <ugexe> that was awhile ago though, so we can't infer if thats what the current error is from

[22:57] <ugexe> i was able to rerun the ci test on that commit though so we should get to see what the first jvm error was (the original build log on that commit is gone on azure pipelines)

[23:42] <ugexe> doh, its the java heap error that i only recently fixed

[23:42] <ugexe> which i guess is good in that there might not be very much to fix to get the jvm to work, but bad in that we have no idea when the non-heap space error started

