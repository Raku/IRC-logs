[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:57] *** ab5tract left
[00:57] *** jgaz left
[01:02] *** jgaz joined
[01:30] *** nine left
[01:30] *** jgaz left
[01:32] *** nine joined
[02:32] *** bisectable6 left
[02:32] *** quotable6 left
[02:32] *** notable6 left
[02:32] *** reportable6 left
[02:32] *** greppable6 left
[02:32] *** statisfiable6 left
[02:32] *** releasable6 left
[02:32] *** sourceable6 left
[02:32] *** nativecallable6 left
[02:32] *** coverable6 left
[02:32] *** tellable6 left
[02:32] *** committable6 left
[02:32] *** linkable6 left
[02:32] *** unicodable6 left
[02:32] *** shareable6 left
[02:32] *** evalable6 left
[02:32] *** squashable6 left
[02:32] *** benchable6 left
[02:32] *** bloatable6 left
[02:32] *** evalable6 joined
[02:32] *** sourceable6 joined
[02:32] *** tellable6 joined
[02:32] *** reportable6 joined
[02:33] *** bloatable6 joined
[02:33] *** squashable6 joined
[02:33] *** bisectable6 joined
[02:33] *** benchable6 joined
[02:33] *** unicodable6 joined
[02:33] *** notable6 joined
[02:33] *** shareable6 joined
[02:33] *** committable6 joined
[02:33] *** linkable6 joined
[02:33] *** greppable6 joined
[02:34] *** quotable6 joined
[02:34] *** nativecallable6 joined
[02:34] *** coverable6 joined
[02:34] *** statisfiable6 joined
[02:35] *** releasable6 joined
[03:06] *** squashable6 left
[03:08] *** squashable6 joined
[04:13] *** squashable6 left
[04:16] *** squashable6 joined
[05:48] *** notable6 left
[05:48] *** tellable6 left
[05:48] *** evalable6 left
[05:48] *** bisectable6 left
[05:48] *** releasable6 left
[05:48] *** statisfiable6 left
[05:48] *** quotable6 left
[05:48] *** reportable6 left
[05:48] *** greppable6 left
[05:48] *** benchable6 left
[05:48] *** bloatable6 left
[05:48] *** shareable6 left
[05:48] *** sourceable6 left
[05:48] *** coverable6 left
[05:48] *** nativecallable6 left
[05:48] *** linkable6 left
[05:48] *** squashable6 left
[05:48] *** committable6 left
[05:48] *** unicodable6 left
[05:48] *** nativecallable6 joined
[05:49] *** linkable6 joined
[05:49] *** releasable6 joined
[05:49] *** unicodable6 joined
[05:49] *** committable6 joined
[05:49] *** evalable6 joined
[05:49] *** reportable6 joined
[05:49] *** benchable6 joined
[05:50] *** shareable6 joined
[05:50] *** notable6 joined
[05:50] *** coverable6 joined
[05:50] *** bloatable6 joined
[05:50] *** sourceable6 joined
[05:50] *** squashable6 joined
[05:50] *** greppable6 joined
[05:50] *** bisectable6 joined
[05:51] *** tellable6 joined
[05:51] *** statisfiable6 joined
[05:51] *** quotable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:21] *** djinni` left
[06:35] *** djinni` joined
[06:59] *** sena_kun joined
[07:59] *** quotable6 left
[07:59] *** benchable6 left
[07:59] *** tellable6 left
[07:59] *** unicodable6 left
[07:59] *** notable6 left
[07:59] *** statisfiable6 left
[07:59] *** coverable6 left
[07:59] *** bisectable6 left
[07:59] *** sourceable6 left
[07:59] *** reportable6 left
[07:59] *** shareable6 left
[07:59] *** squashable6 left
[07:59] *** bloatable6 left
[07:59] *** releasable6 left
[07:59] *** committable6 left
[07:59] *** nativecallable6 left
[07:59] *** linkable6 left
[07:59] *** evalable6 left
[07:59] *** greppable6 left
[07:59] *** linkable6 joined
[08:00] *** greppable6 joined
[08:00] *** shareable6 joined
[08:00] *** bloatable6 joined
[08:01] *** committable6 joined
[08:01] *** reportable6 joined
[08:01] *** nativecallable6 joined
[08:01] *** benchable6 joined
[08:01] *** unicodable6 joined
[08:01] *** tellable6 joined
[08:01] *** coverable6 joined
[08:01] *** sourceable6 joined
[08:01] *** bisectable6 joined
[08:02] *** notable6 joined
[08:02] *** evalable6 joined
[08:02] *** statisfiable6 joined
[08:02] *** quotable6 joined
[08:02] *** releasable6 joined
[08:02] *** squashable6 joined
[10:15] <Geth> ¦ rakudo/main: 09a16585c3 | (Elizabeth Mattijsen)++ | 6 files

[10:15] <Geth> ¦ rakudo/main: RakuAST: add basic support for whenever

[10:15] <Geth> ¦ rakudo/main: 

[10:15] <Geth> ¦ rakudo/main: - add a RakuAST::Statement::Whenever class

[10:15] <Geth> ¦ rakudo/main: - adds support in grammar and actions

[10:15] <Geth> ¦ rakudo/main: - add deparsing and rakufication

[10:15] <Geth> ¦ rakudo/main: - adjust supply / react tests to use whenever

[10:15] <Geth> ¦ rakudo/main: - no optimizations yet

[10:15] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/09a16585c3

[10:16] <lizmat> now at 917 tests passing, so +18  :-)

[10:16] <lizmat> so now more than 2/3 of the roast tests are passing :-)

[10:31] *** linkable6 left
[10:31] *** evalable6 left
[10:31] *** linkable6 joined
[10:32] *** evalable6 joined
[10:54] *** frost joined
[10:57] *** frost left
[11:11] <nine> Woah, nice!

[11:12] <nine> I also think react/whenever was the last major piece of the grammar missing

[11:25] <[Tux]> Saw 1 occurrence of deprecated code.

[11:25] <[Tux]> ================================================================================

[11:25] <[Tux]> .pm file extension in raku library path seen at:

[11:25] <[Tux]>   file#/pro/3gl/CPAN/Text-CSV6/lib, line 0

[11:25] <[Tux]> Please use the .rakumod extension for raku modules, or include a META6.json file that explicitly declares each raku module file instead.

[11:25] <[Tux]> --------------------------------------------------------------------------------

[11:25] <[Tux]> Please contact the author to have these occurrences of deprecated code

[11:25] <[Tux]> adapted, so that this message will disappear!

[11:25] <[Tux]> Should I take actiions?

[11:33] <lizmat> [Tux]: just rename lib/Text/CSV.pm to lib/Text/CSV.rakumod

[11:33] <lizmat> and you will be fine

[11:33] <discord-raku-bot> <nemokosch> that was actually a great move tbh

[11:34] <[Tux]> Rakudo v2023.06-187-g09a16585c (v6.d) on MoarVM 2023.06-4-g75fe055c2

[11:34] <[Tux]> csv-test-xs-20      0.403 -  0.415

[11:34] <[Tux]> test-t --race       0.839 -  0.858

[11:34] <[Tux]> csv-ip5xs           0.911 -  1.045

[11:34] <[Tux]> test-t              1.401 -  1.684

[11:34] <[Tux]> csv-parser          3.711 -  4.140

[11:34] <[Tux]> csv-ip5xs-20        5.268 -  6.037

[11:34] <[Tux]> test-t-20 --race    6.175 -  7.202

[11:34] <[Tux]> test                6.252 -  7.561

[11:34] <[Tux]> test-t-20          22.030 - 22.223

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:06] <lizmat> looks like Slang::Tuxic will also need an update

[12:09] <ugexe> alternatively one could use -I. instead of -Ilib (which everyone should be doing anyway), but if you're making a change might as well change the extensions

[12:09] <lizmat> yeah  :-)

[12:10] <lizmat> eh

[12:11] <lizmat> ah, yeah, the test file uses "use lib 'lib'" which it shouldn't anyways

[12:11] <lizmat> anyways, we will need to adapt that module for RakuAST probably

[12:22] <discord-raku-bot> <nemokosch> do you have an idea how to get modules to a PC that cannot be connected to the internet? is there a reasonably simple way to collect them so that I can copy them to that machine?

[12:23] <lizmat> put the tar-files on a USB-stick ?

[12:23] <lizmat> untar them, then do "zef install ." inside the tar dir ?

[12:26] <discord-raku-bot> <nemokosch> yeah well, the question is, how do I get the tar files? if a module has 10 dependencies, do I have to manually download all of them? or where are they stored?

[12:27] <lizmat> the unpacked tar files live in ~/.zef/store  if that helps ?

[12:28] <discord-raku-bot> <nemokosch> that probably does, one way or another

[12:28] <lizmat> clean it out, install a distribution locally, and ~/.zef/store contains all the deps ?

[12:28] <[Tux]> Rakudo v2023.06-187-g09a16585c (v6.d) on MoarVM 2023.06-4-g75fe055c2

[12:28] <[Tux]> csv-test-xs-20      0.392 -  0.417

[12:28] <[Tux]> test-t --race       0.837 -  0.846

[12:28] <[Tux]> csv-ip5xs           0.791 -  0.900

[12:28] <[Tux]> test-t              1.380 -  1.405

[12:28] <[Tux]> csv-parser          3.664 -  3.957

[12:28] <[Tux]> csv-ip5xs-20        5.519 -  5.689

[12:28] <[Tux]> test-t-20 --race    6.855 -  6.915

[12:28] <[Tux]> test                7.012 -  7.070

[12:28] <[Tux]> test-t-20          20.429 - 21.120

[12:29] <[Tux]> (rakumod change pushed)

[12:32] <discord-raku-bot> <nemokosch> will those deps resolve properly if I just copy the whole thing to another machine?

[12:52] <discord-raku-bot> <nemokosch> all the more fun, this is windows and I have no clue where "~/.zef" would be

[12:54] <lizmat> [Tux]  could you also bump the version, please  :-)

[13:00] <discord-raku-bot> <nemokosch> okay great, it generated in the Users folder

[13:04] <[Coke]> You can use something like App::Zef-Deps (sp?) to get all the deps on a connected machine.

[13:06] <discord-raku-bot> <nemokosch> for now I will try to "hack" the .zef/store folder with the things installed on a different machine

[13:06] <discord-raku-bot> <nemokosch> using zef --/rea --/fez --force-fetch install .

[13:08] <[Tux]> done

[13:08] <lizmat> [Tux]++

[13:15] <discord-raku-bot> <nemokosch> App::Rak::Complete depends on sourcery:ver<0.0.4> that fails tests now

[13:27] <lizmat> nemokosch uploaded new version of App::Rak::Complete with fixes

[13:56] <discord-raku-bot> <nemokosch> thankies

[13:58] *** NemokoschKiwi joined
[14:09] *** jgaz joined
[14:13] <Geth> ¦ rakudo: vrurg++ created pull request #5331: Fix a coercion in `Range` constructor

[14:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5331

[14:19] *** ab5tract joined
[14:19] <discord-raku-bot> <nemokosch> well, that didn't work out

[14:20] <discord-raku-bot> <nemokosch> they don't resolve when I copy the whole cluster to the other machine. Tried to mangle with the manifest.zef file but I don't even know if that's what one should do

[14:20] <discord-raku-bot> <nemokosch> either way, it was of no use

[14:49] *** NemokoschKiwi left
[14:51] *** ab5tract left
[14:54] <discord-raku-bot> <nemokosch> maybe it wouldn't work with Windows at all...

[16:20] <ugexe> `zef update cached`/`zef update` would update the MANIFEST.zef file

[16:21] <ugexe> `zef list cached` would tell you what distributions the cache contains

[17:35] *** linkable6 left
[17:35] *** evalable6 left
[17:35] *** evalable6 joined
[17:37] *** linkable6 joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[21:05] <discord-raku-bot> <nemokosch> thanks, I will probably have to return to it at some point; for now I'm just getting around with Rakudo Star built-ins

[22:29] *** sena_kun left
[23:00] *** hythm joined
[23:14] <hythm> fwiw if one needs to install dists without internet access, and open to use Pakku, if there is a collection of dists in local directory (e.g C:\Users\grunt-win\my-local-dists\), one can install dists by running:

[23:14] <hythm> pakku config new; # create config file

[23:15] <hythm> pakku config recman my-local-dists set location C:\Users\grunt-win\my-local-dists\; # add local recommendation manager

[23:15] <hythm> pakku config recman pakku disable  # to disable default (online) recommendation manager if needed

[23:18] <hythm> pakku add MyDist ## will install MyDist and its dependencies, assuming MyDist and (its dependencies) directories exist in my-local-dists

[23:44] <Geth> ¦ rakudo/main: b4b779525f | (Vadim Belman)++ | src/core.c/Range.pm6

[23:44] <Geth> ¦ rakudo/main: Fix a coercion in `Range` constructor

[23:44] <Geth> ¦ rakudo/main: 

[23:44] <Geth> ¦ rakudo/main: It used to accept any input causing the `(Real, WhateverCode)`

[23:44] <Geth> ¦ rakudo/main: candidate to throw. Make it only accept `Cool` as it is more likely to

[23:44] <Geth> ¦ rakudo/main: be what is really expected.

[23:44] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b4b779525f

[23:44] <Geth> ¦ rakudo/main: 7432c7abcc | (Vadim Belman)++ (committed using GitHub Web editor) | src/core.c/Range.pm6

[23:44] <Geth> ¦ rakudo/main: Merge pull request #5331 from vrurg/range-constructor-coercion-fix

[23:44] <Geth> ¦ rakudo/main: 

[23:44] <Geth> ¦ rakudo/main: Fix a coercion in `Range` constructor

[23:44] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7432c7abcc

