[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:04] *** squashable6 left
[00:07] *** squashable6 joined
[00:30] <ugexe> with #5295 and #5296 we should be able to allow people to work around windows issues related to precomp, so people could use github actions with a modern rakudo again
[00:31] <ugexe> (by disabling precomp)
[01:07] *** linkable6 left
[01:07] *** evalable6 left
[01:07] *** linkable6 joined
[01:09] *** evalable6 joined
[02:16] *** evalable6 left
[02:16] *** linkable6 left
[02:17] *** linkable6 joined
[02:18] *** evalable6 joined
[03:31] *** hythm left
[04:09] *** greatgustavo[m] joined
[05:19] *** greppable6 left
[05:19] *** unicodable6 left
[05:19] *** committable6 left
[05:19] *** tellable6 left
[05:19] *** sourceable6 left
[05:19] *** bisectable6 left
[05:19] *** coverable6 left
[05:19] *** statisfiable6 left
[05:19] *** evalable6 left
[05:19] *** notable6 left
[05:19] *** releasable6 left
[05:19] *** quotable6 left
[05:19] *** benchable6 left
[05:19] *** bloatable6 left
[05:19] *** squashable6 left
[05:19] *** shareable6 left
[05:19] *** nativecallable6 left
[05:19] *** reportable6 left
[05:19] *** linkable6 left
[05:20] *** linkable6 joined
[05:20] *** evalable6 joined
[05:20] *** committable6 joined
[05:20] *** reportable6 joined
[05:20] *** squashable6 joined
[05:20] *** releasable6 joined
[05:21] *** bloatable6 joined
[05:21] *** shareable6 joined
[05:21] *** nativecallable6 joined
[05:21] *** unicodable6 joined
[05:21] *** quotable6 joined
[05:22] *** tellable6 joined
[05:22] *** bisectable6 joined
[05:22] *** notable6 joined
[05:22] *** sourceable6 joined
[05:22] *** greppable6 joined
[05:22] *** benchable6 joined
[05:22] *** statisfiable6 joined
[05:22] *** coverable6 joined
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[07:03] *** squashable6 left
[07:03] *** linkable6 left
[07:03] *** bisectable6 left
[07:03] *** bloatable6 left
[07:03] *** evalable6 left
[07:03] *** nativecallable6 left
[07:03] *** greppable6 left
[07:03] *** statisfiable6 left
[07:03] *** notable6 left
[07:03] *** quotable6 left
[07:03] *** benchable6 left
[07:03] *** coverable6 left
[07:03] *** unicodable6 left
[07:03] *** sourceable6 left
[07:03] *** committable6 left
[07:03] *** shareable6 left
[07:03] *** tellable6 left
[07:03] *** releasable6 left
[07:03] *** reportable6 left
[07:03] *** nativecallable6 joined
[07:03] *** notable6 joined
[07:04] *** bloatable6 joined
[07:04] *** reportable6 joined
[07:04] *** benchable6 joined
[07:04] *** evalable6 joined
[07:04] *** bisectable6 joined
[07:05] *** sourceable6 joined
[07:05] *** coverable6 joined
[07:05] *** greppable6 joined
[07:05] *** tellable6 joined
[07:05] *** squashable6 joined
[07:05] *** committable6 joined
[07:05] *** quotable6 joined
[07:05] *** unicodable6 joined
[07:05] *** linkable6 joined
[07:05] *** statisfiable6 joined
[07:05] *** releasable6 joined
[07:06] *** shareable6 joined
[08:38] *** sena_kun joined
[10:07] <discord-raku-bot> <nemokosch> hythm: that's definitely good to know ^^
[10:15] *** NemokoschKiwi joined
[10:23] *** NemokoschKiwi left
[10:24] *** vrurg_ joined
[10:26] *** vrurg left
[11:15] <lizmat> should make this a worry in RakuAST:
[11:16] <lizmat> m: sub a($ is rw) { }; a 42
[11:16] <camelia> rakudo-moar 7432c7abc: OUTPUT: «Parameter '<anon>' expects a writable container (variable) as an␤argument, but got '42' (Int) as a value without a container.␤  in sub a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»
[11:21] <discord-raku-bot> <nemokosch> i.e promote it to compile-time?
[11:27] <lizmat> yes, a worry is a compile time warning
[11:27] <lizmat> hmmm.. come to think, it should probably be a sorry, just like:
[11:27] <lizmat> m: foo(42)
[11:27] <camelia> rakudo-moar 7432c7abc: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared routine:␤    foo used at line 1␤␤»
[11:36] *** linkable6 left
[11:36] *** evalable6 left
[11:39] *** linkable6 joined
[11:39] *** evalable6 joined
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[13:46] *** sena_kun left
[13:47] *** sena_kun joined
[13:59] *** greatgustavo[m] left
[14:04] *** Altai-man joined
[14:05] *** Geth left
[14:07] *** sena_kun left
[14:33] *** NemokoschKiwi joined
[14:54] *** RakuIRCLogger left
[14:54] *** Geth joined
[14:54] *** RakuIRCLogger joined
[14:55] <Geth> ¦ rakudo/main: 41ae15a017 | (Nick Logan)++ | src/core.c/CompUnit/Repository/Installation.pm6
[14:55] <Geth> ¦ rakudo/main: Respect CUPR.may-precomp() in CURI
[14:55] <Geth> ¦ rakudo/main: 
[14:55] <Geth> ¦ rakudo/main: CompUnit::PrecompilationRepository.may-precomp() can be used
[14:55] <Geth> ¦ rakudo/main: to check if something should try to precompile using said repo.
[14:55] <Geth> ¦ rakudo/main: It is used in CUPR in its try-load method to determine if it should
[14:55] <Geth> ¦ rakudo/main: try to precompile a file when loading, which often happens with
[14:55] <Geth> ¦ rakudo/main: a CURFS type repository. However, CURI.install also tries to
[14:56] <Geth> ¦ rakudo/main: <…commit message has 6 more lines…>
[14:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/41ae15a017
[14:56] <Geth> ¦ rakudo/main: e4b4bdeb57 | (Nick Logan)++ (committed using GitHub Web editor) | src/core.c/CompUnit/Repository/Installation.pm6
[14:56] <Geth> ¦ rakudo/main: Merge pull request #5296 from rakudo/ugexe/curi-use-may-precomp
[14:56] <Geth> ¦ rakudo/main: 
[14:56] <Geth> ¦ rakudo/main: Respect CUPR.may-precomp() in CURI
[14:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e4b4bdeb57
[14:58] <Geth> ¦ rakudo/ugexe/may-precomp-environment-variable: 6750ab31fa | (Nick Logan)++ | src/core.c/CompUnit/PrecompilationRepository.pm6
[14:58] <Geth> ¦ rakudo/ugexe/may-precomp-environment-variable: Add support for RAKUDO_NO_PRECOMPILATION environment variable
[14:58] <Geth> ¦ rakudo/ugexe/may-precomp-environment-variable: 
[14:58] <Geth> ¦ rakudo/ugexe/may-precomp-environment-variable: This adds a mechanism that allows users to disable precompilation
[14:58] <Geth> ¦ rakudo/ugexe/may-precomp-environment-variable: via an environment variable. It prevents rakudo from using
[14:58] <Geth> ¦ rakudo/ugexe/may-precomp-environment-variable: precompilation files as well as from generating them.
[14:58] <Geth> ¦ rakudo/ugexe/may-precomp-environment-variable: review: https://github.com/rakudo/rakudo/commit/6750ab31fa
[14:58] *** RakuIRCLogger left
[14:58] *** RakuIRCLogger joined
[15:48] <Geth> ¦ rakudo/main: 6750ab31fa | (Nick Logan)++ | src/core.c/CompUnit/PrecompilationRepository.pm6
[15:48] <Geth> ¦ rakudo/main: Add support for RAKUDO_NO_PRECOMPILATION environment variable
[15:48] <Geth> ¦ rakudo/main: 
[15:48] <Geth> ¦ rakudo/main: This adds a mechanism that allows users to disable precompilation
[15:48] <Geth> ¦ rakudo/main: via an environment variable. It prevents rakudo from using
[15:48] <Geth> ¦ rakudo/main: precompilation files as well as from generating them.
[15:48] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6750ab31fa
[15:48] <Geth> ¦ rakudo/main: 1d100f8e74 | (Nick Logan)++ (committed using GitHub Web editor) | src/core.c/CompUnit/PrecompilationRepository.pm6
[15:48] <Geth> ¦ rakudo/main: Merge pull request #5295 from rakudo/ugexe/may-precomp-environment-variable
[15:48] <Geth> ¦ rakudo/main: 
[15:48] <Geth> ¦ rakudo/main: Add support for RAKUDO_NO_PRECOMPILATION environment variable
[15:48] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1d100f8e74
[15:54] <ugexe> tbrowder__: in the next release of rakudo setting RAKUDO_NO_PRECOMPILATION=1 on windows should work around the long path issue and thus let github CI actions work on modern rakudo again. Of course things will also be slower since there will be no precompilation, but at least you'll know if your code works :/
[15:55] <lizmat> ugexe++
[16:39] *** linkable6 left
[16:39] *** evalable6 left
[16:40] *** evalable6 joined
[16:41] *** linkable6 joined
[16:53] <lizmat> starting to wonder whether END blocks *should* return their value after all
[16:53] <lizmat> m: END {say END 42}
[16:53] <camelia> rakudo-moar 1d100f8e7: OUTPUT: «WARNINGS for <tmp>:␤Nil␤Useless use of constant integer 42 in sink context (line 1)␤»
[17:37] <tbrowder__> ugexe++  👍🏻
[17:40] *** NemokoschKiwi left
[17:52] <ugexe> i may have spoke too soon heh
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:37] <ugexe> m: module Foo { my $lock = Lock.new; role FooRole { say $lock } }; class XXX does Foo::FooRole {}
[18:37] <camelia> rakudo-moar 1d100f8e7: OUTPUT: «(Any)␤»
[18:37] <ugexe> m: module Foo { BEGIN my $lock = Lock.new; role FooRole { say $lock } }; class XXX does Foo::FooRole {}
[18:37] <camelia> rakudo-moar 1d100f8e7: OUTPUT: «Lock.new␤»
[18:38] <ugexe> is it ok to use BEGIN with a lock like that?
[18:38] <ugexe> I'm guessing no
[18:47] <ugexe> ah, but I think using INIT would be fine...
[18:57] <Geth> ¦ rakudo/ugexe/fix-5333: 96bf86ad76 | (Nick Logan)++ | lib/NativeCall.rakumod
[18:57] <Geth> ¦ rakudo/ugexe/fix-5333: Ensure lock is created before NativeCall role is setup
[18:57] <Geth> ¦ rakudo/ugexe/fix-5333: 
[18:57] <Geth> ¦ rakudo/ugexe/fix-5333: Fixes #5333
[18:57] <Geth> ¦ rakudo/ugexe/fix-5333: review: https://github.com/rakudo/rakudo/commit/96bf86ad76
[19:00] <Geth> ¦ rakudo: ugexe++ created pull request #5334: Ensure lock is created before NativeCall role is setup
[19:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5334
[19:02] *** evalable6 left
[19:03] *** evalable6 joined
[19:31] *** ab5tract joined
[20:06] *** ab5tract left
[20:47] *** ab5tract joined
[21:17] *** ab5tract left
[21:20] <lizmat> .tell ab5tract https://irclogs.raku.org/cro/live.html
[21:20] <tellable6> lizmat, I'll pass your message to ab5tract
[21:32] <Geth> ¦ rakudo/main: a4a2bbd24e | (Nick Logan)++ (committed using GitHub Web editor) | lib/NativeCall.rakumod
[21:32] <Geth> ¦ rakudo/main: Ensure lock is created before NativeCall role is setup (#5334)
[21:32] <Geth> ¦ rakudo/main: 
[21:32] <Geth> ¦ rakudo/main: Fixes #5333
[21:32] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a4a2bbd24e
[22:32] *** ab5tract joined
[22:43] *** ab5tract left
[22:51] *** Altai-man left
[23:51] *** evalable6 left
[23:51] *** unicodable6 left
[23:51] *** greppable6 left
[23:51] *** nativecallable6 left
[23:51] *** committable6 left
[23:51] *** tellable6 left
[23:51] *** quotable6 left
[23:51] *** releasable6 left
[23:51] *** shareable6 left
[23:51] *** coverable6 left
[23:51] *** squashable6 left
[23:51] *** benchable6 left
[23:51] *** notable6 left
[23:51] *** bisectable6 left
[23:51] *** sourceable6 left
[23:51] *** statisfiable6 left
[23:51] *** linkable6 left
[23:51] *** bloatable6 left
[23:51] *** reportable6 left
[23:51] *** quotable6 joined
[23:51] *** benchable6 joined
[23:51] *** committable6 joined
[23:51] *** coverable6 joined
[23:52] *** tellable6 joined
[23:52] *** statisfiable6 joined
[23:52] *** linkable6 joined
[23:52] *** greppable6 joined
[23:52] *** reportable6 joined
[23:52] *** squashable6 joined
[23:52] *** nativecallable6 joined
[23:52] *** notable6 joined
[23:52] *** unicodable6 joined
[23:53] *** evalable6 joined
[23:53] *** shareable6 joined
[23:53] *** bloatable6 joined
[23:54] *** releasable6 joined
[23:54] *** sourceable6 joined
[23:54] *** bisectable6 joined
