[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: 924386f508 | (Nick Logan)++ | src/core.c/CompUnit/Repository/FileSystem.pm6

[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: Make extensions for CURFS configurable

[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: 

[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: When using CURFS that isn't pointed at a directory containing a

[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: META6.json file (i.e. -Ilib) it will consider .rakumod .pm6 and

[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: .pm files as raku modules. However, some users might want to

[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: opt out of e.g. .pm files getting treated in this way.

[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: 

[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: This adds the ability for users to define which extensions a CURFS

[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: will scan for using the CompUnit::Repository::Spec format. For

[02:02] <Geth> ¦ rakudo/ugexe/curfs-extensions: example: file#extensions<.rakumod .pm6>#lib would only scan for

[02:03] <Geth> ¦ rakudo/ugexe/curfs-extensions: files with the .rakumod and .pm6 extension of the lib directory.

[02:03] <Geth> ¦ rakudo/ugexe/curfs-extensions: review: https://github.com/rakudo/rakudo/commit/924386f508

[02:03] <Geth> ¦ rakudo: ugexe++ created pull request #5279: Make extensions for CURFS configurable

[02:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5279

[03:59] *** kurahaupo left
[04:59] *** nativecallable6 left
[04:59] *** bloatable6 left
[04:59] *** linkable6 left
[04:59] *** greppable6 left
[04:59] *** tellable6 left
[04:59] *** committable6 left
[04:59] *** reportable6 left
[04:59] *** squashable6 left
[04:59] *** statisfiable6 left
[04:59] *** releasable6 left
[04:59] *** quotable6 left
[04:59] *** unicodable6 left
[04:59] *** benchable6 left
[04:59] *** sourceable6 left
[04:59] *** notable6 left
[04:59] *** shareable6 left
[04:59] *** coverable6 left
[04:59] *** evalable6 left
[04:59] *** bisectable6 left
[04:59] *** tellable6 joined
[04:59] *** linkable6 joined
[04:59] *** committable6 joined
[04:59] *** bloatable6 joined
[05:00] *** greppable6 joined
[05:00] *** benchable6 joined
[05:00] *** quotable6 joined
[05:00] *** releasable6 joined
[05:00] *** reportable6 joined
[05:00] *** evalable6 joined
[05:01] *** nativecallable6 joined
[05:01] *** notable6 joined
[05:01] *** shareable6 joined
[05:01] *** squashable6 joined
[05:01] *** statisfiable6 joined
[05:01] *** sourceable6 joined
[05:01] *** unicodable6 joined
[05:01] *** coverable6 joined
[05:02] *** bisectable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[07:33] <|Tux|> Rakudo v2023.05-98-ge8b477b58 (v6.d) on MoarVM 2023.05-6-gb039b913b

[07:33] <|Tux|> csv-test-xs-20      0.391 -  0.406

[07:33] <|Tux|> test-t --race       0.851 -  0.915

[07:33] <|Tux|> csv-ip5xs           0.852 -  0.874

[07:33] <|Tux|> test-t              1.450 -  1.453

[07:33] <|Tux|> csv-parser          3.725 -  3.802

[07:33] <|Tux|> csv-ip5xs-20        5.267 -  5.364

[07:33] <|Tux|> test-t-20 --race    6.264 -  6.668

[07:33] <|Tux|> test                6.676 -  6.957

[07:33] <|Tux|> test-t-20          21.757 - 23.31

[07:35] *** sena_kun joined
[08:06] *** sena_kun left
[08:07] *** sena_kun joined
[08:13] *** squashable6 left
[08:14] *** squashable6 joined
[08:33] <Geth> ¦ rakudo/main: 75bdcd649a | (Elizabeth Mattijsen)++ | 2 files

[08:33] <Geth> ¦ rakudo/main: RakuAST: make sure unit scoped packages deparse ok

[08:33] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/75bdcd649a

[08:51] *** Xliff joined
[09:00] <Geth> ¦ rakudo/main: 4 commits pushed by (Stefan Seifert)++

[09:00] <Geth> ¦ rakudo/main: 432c1d6208 | RakuAST: avoid spam on STDERR by literalize

[09:00] <Geth> ¦ rakudo/main: 158c0c75a1 | RakuAST: recognize more complex indirect lookups

[09:00] <Geth> ¦ rakudo/main: 37e0a0b6d9 | RakuAST: Fix mis-parse of pseudo-package names as calls

[09:00] <Geth> ¦ rakudo/main: e0ec27495a | RakuAST: allow for runtime replacement of compile time looked up names

[09:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/75bdcd649a35...e0ec27495a4d

[09:06] *** kurahaupo joined
[09:11] <Xliff> \o, nine

[09:11] <Xliff> nine: Are you still using the first -I item as the global precomp store? 

[09:14] <Xliff> nine: Is there a reason we can't add a moar::precompdir and set that to <bindir>/../.precomp, which has the benefit of now allowing all of the precomp files to live with the running verion of Rakudo? 

[09:14] <Xliff> If this is easier for you to discuss in problem-solving, I can move it there. Thanks.

[09:19] *** sena_kun left
[09:35] *** jjatria left
[09:35] *** jjatria joined
[10:13] <nine> Xliff: I'm not aware of any changes. Right now I'm focussing 100 % on RakuAST

[11:22] *** nebuchadnezzar left
[11:22] *** nebuchadnezzar joined
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[13:14] <vrurg> Xliff: This is not how things work. Precomp directory is not any business of MoarVM, it's up to CompUnit classes to decide.

[13:23] *** samebchase left
[13:24] *** samebchase joined
[13:24] *** timo left
[13:24] *** timo joined
[13:25] <Xliff> vrurg: OK, but if my first -I listing has a .precomp that is over 74G! That's awfully arbitrary. I'm saying the existing way no longer makes sense. Wherever this decision is being made, might my suggestion be a better way for future progress?

[13:26] <vrurg> Xliff: of course, this is discussible. I'm only afraid we barely have anybody to deal with it in the code. :( 

[13:27] <vrurg> But at least there is hope to get somebody for it in the future.

[13:27] <nine> <bindir>/../.precomp would violate the FHS even more than we do already and would often be not writable

[13:28] <vrurg> Oh, I'm still sleepy, haven't noticed the <bindir>. That is a bad idea, no doubt.

[13:30] <Xliff> nine: Sorry, that was a terrible description for what I was trying to say. My <bindir> is moar::bindir=/home/cbwood/.rakubrew/versions/moar-blead/install/bin

[13:30] <Xliff> So .precomp in this case would be /home/cbwood/.rakubrew/versions/moar-blead/install/.precomp

[13:31] <Xliff> Which has the advantage of isolating .precomp blobs in the moar-blead version of Raku if using rakubrew.

[13:31] <Xliff> That is writeable, but I did not think about the situation if it were using the system rakudo

[13:31] <nine> Solves one case, breaks others. Par for the course for suggestions about where to store precomp files

[13:32] <nine> You are not the first one to be annoyed by this :)

[13:32] <Xliff> OK. Let me give it some more thought. Would problem-solving be a better place for it?

[13:32] <vrurg> Xliff: absolutely.

[13:32] <nine> That is a far more interesting question than it looks like :D

[13:33] <Xliff> Fair enough.

[13:33] <nine> lizmat: I kinda forgot. What was the results of problem solving the problem solving at the summit?

[13:33] <lizmat> we need to spend more time on it?

[13:42] <nine> Xliff: one requirement for a solution, I've already told you: that it has to work for a non-root user with a system rakudo. Another one is that dependencies of a precomp file must be available for loading once we've determined that the precomp file is up-to-date.

[13:42] <nine> Then there's quite a big headache: it must support distro packaging modules including their precomp files.

[13:57] <nine> I think a step forward would be to differentiate precomp files generated by module installation and precomp files generated on-demand.

[14:14] <Xliff> nine: Thanks for the extra information.

[14:20] <lizmat> and yet another Rakudo Weekly hits the Net: https://rakudoweekly.blog/2023/06/12/2023-23-4-at-48/

[14:20] <lizmat> notable6: weekly

[14:20] <notable6> lizmat, 3 notes: https://gist.github.com/7c8ea3e25bfc419698834bd6bbe7767d

[14:21] <lizmat> notable6: weekly reset

[14:21] <notable6> lizmat, Moved existing notes to “weekly_2023-06-12T14:21:02Z”

[15:05] *** sjn left
[16:00] *** kurahaupo left
[16:29] <japhb> nine: Of note, Python has long had the "system package versus pip package" problem, and apparently they can mark certain packages as being system-managed, and pip will refuse to install into the system directories if the system package manager is in charge.

[16:44] <nine> We've never had that particular problem since we inherited Perl's core vs. vendor vs site structure

[16:45] <nine> But yes, people keep ignoring the things Perl got right and run into problems... surprise :)

[17:01] *** kurahaupo joined
[17:25] <leont> Yeah

[17:37] <japhb> TRUE

[17:41] *** sena_kun joined
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[19:50] *** Xliff left
[20:33] *** sena_kun left
[21:22] *** [Tux] left
[21:22] *** [Tux] joined
[21:36] *** kurahaupo left
[21:41] *** kurahaupo joined
[21:54] <ugexe> I wonder if we could get away with apply some more limits to CURFS when it has to discover files. for instance: only recurse X folders deep

[21:55] <ugexe> (with an option for increasing that limit)

[22:04] <ugexe> another more extreme example would be to not recurse into a directory called perl5/

[22:04] <ugexe> but that is only correct 99.9% of the time

[22:14] <ugexe> maybe we should just throw a warning once the directory recursion has passed a certain threshold, to let the user know they may want to organize their code differently or use a more precise library path

[22:25] *** kurahaupo left
[22:38] *** [Coke] left
[22:38] *** [Coke] joined
[23:14] *** m6502 joined
[23:28] <Geth> ¦ rakudo/ugexe/sha1-resource-files: 6ddbf68a37 | (Nick Logan)++ | src/core.c/CompUnit/Repository/FileSystem.pm6

[23:28] <Geth> ¦ rakudo/ugexe/sha1-resource-files: Include resource files when calculating CURFS repository id

[23:28] <Geth> ¦ rakudo/ugexe/sha1-resource-files: 

[23:28] <Geth> ¦ rakudo/ugexe/sha1-resource-files: We sha1 the source code of module files for CURFS so we can tell

[23:28] <Geth> ¦ rakudo/ugexe/sha1-resource-files: when source code has changed. Since source code can rely on files

[23:28] <Geth> ¦ rakudo/ugexe/sha1-resource-files: in resources/ we should also sha1 those files as well.

[23:28] <Geth> ¦ rakudo/ugexe/sha1-resource-files: review: https://github.com/rakudo/rakudo/commit/6ddbf68a37

[23:29] <Geth> ¦ rakudo: ugexe++ created pull request #5280: Include resource files when calculating CURFS repository id

[23:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5280

