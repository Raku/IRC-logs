[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[02:08] *** unicodable6 left
[02:08] *** bloatable6 left
[02:08] *** sourceable6 left
[02:08] *** tellable6 left
[02:08] *** sourceable6 joined
[02:10] *** unicodable6 joined
[02:10] *** tellable6 joined
[02:11] *** bloatable6 joined
[02:37] *** lizmat left
[02:37] *** lizmat_ joined
[04:03] *** guifa joined
[04:06] *** guifa_ left
[05:06] *** linkable6 left
[05:06] *** evalable6 left
[05:07] *** evalable6 joined
[05:09] *** linkable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:28] <Geth__> ¦ rakudo/main: 458c0fc30e | (Stefan Seifert)++ | 2 files

[06:28] <Geth__> ¦ rakudo/main: RakuAST: fix role groups not knowing their full name

[06:28] <Geth__> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/458c0fc30e

[06:28] *** eponym joined
[06:28] *** epony left
[06:31] *** eponym left
[06:36] *** epony joined
[06:49] <Geth__> ¦ rakudo/main: 03db26142c | (Stefan Seifert)++ | src/Raku/ast/type.rakumod

[06:49] <Geth__> ¦ rakudo/main: RakuAST: make subset's stashes now their full name, too

[06:49] <Geth__> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/03db26142c

[07:54] *** epony left
[08:00] *** epony joined
[09:10] *** guifa left
[09:11] *** guifa joined
[10:34] *** linkable6 left
[10:34] *** evalable6 left
[10:34] *** sourceable6 left
[10:34] *** bloatable6 left
[10:34] *** notable6 left
[10:34] *** nativecallable6 left
[10:34] *** statisfiable6 left
[10:34] *** bisectable6 left
[10:34] *** reportable6 left
[10:34] *** squashable6 left
[10:34] *** releasable6 left
[10:34] *** committable6 left
[10:34] *** benchable6 left
[10:34] *** tellable6 left
[10:34] *** quotable6 left
[10:34] *** unicodable6 left
[10:34] *** coverable6 left
[10:34] *** greppable6 left
[10:34] *** shareable6 left
[10:35] *** statisfiable6 joined
[10:35] *** releasable6 joined
[10:35] *** linkable6 joined
[10:35] *** reportable6 joined
[10:35] *** unicodable6 joined
[10:35] *** shareable6 joined
[10:35] *** sourceable6 joined
[10:35] *** bloatable6 joined
[10:35] *** bisectable6 joined
[10:36] *** quotable6 joined
[10:36] *** notable6 joined
[10:36] *** nativecallable6 joined
[10:36] *** squashable6 joined
[10:36] *** greppable6 joined
[10:36] *** tellable6 joined
[10:37] *** evalable6 joined
[10:37] *** committable6 joined
[10:37] *** coverable6 joined
[10:37] *** benchable6 joined
[10:41] <Geth__> ¦ rakudo/main: ed7aca5f9b | (Stefan Seifert)++ | src/Raku/ast/expressions.rakumod

[10:41] <Geth__> ¦ rakudo/main: RakuAST: enable currying of postfix expressions

[10:41] <Geth__> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ed7aca5f9b

[10:55] *** Geth__ left
[10:55] *** Geth joined
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:44] *** lizmat_ left
[12:44] *** lizmat joined
[13:04] <lizmat> nine: I just noticed that rule package_def does have a enter/leave-package-scope, but only a leave-block-scope and no enter-block-scope

[13:04] <lizmat> that feels...   odd ?

[13:06] <lizmat> ah, maybe enter-block-scope is misnamed and it should be called enter-callable-block-scope

[13:07] <lizmat> still, that looks like package_def *is* doing a $*R.leave-scope();  but not a $*R.enter-scope();

[13:08] <nine> It's just well hidden. I think I came across the same a week or two ago

[13:10] <lizmat> hmmm..  not in the Actions, and not in the Grammar afaics

[13:11] <lizmat> and not in /ast either

[13:40] <lizmat> whee....  just noticed:  750!

[13:42] <lizmat> anyways, package_def not calling enter-block-scope explained to me why the declarator doc on packages didn't work yet :-)

[13:47] <nine> lizmat: if we do more leave-scopes than enter-scopes, why doesn't it break? After all scopes are a stack stored in a VMArray and leave-scope pops from that array and calls a method on the returned value

[13:48] <lizmat> indeed...  

[13:48] <lizmat> it's just that it isn't clear from the code, and I prefer it to be clear from the code  :-)

[13:50] <nine> lizmat: see src/Raku/ast/package.rakumod:226

[13:52] <lizmat> ack, thanks *phew*

[14:27] <lizmat> hmmm... looks like the default type of a Parameter is codegenned as a lexical Any, rather than as a SETTING::<Any>

[14:52] <vrurg> lizmat: it's a common issue in the legacy grammar. I even had plans of reviewing the lookups.

[14:54] <lizmat> m: my constant Any = Int; sub a($) { dd }; a "foo"   # indeed

[14:54] <camelia> rakudo-moar ed7aca5f9: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Calling a(Str) will never work with declared signature (Int)␤at <tmp>:1␤------> my constant Any = Int; sub a($) { dd }; ⏏a "foo"   # indeed␤»

[15:10] <nine> It's quite hard to say where it is on purpose that basic types can be overridden lexically and where it is incidental.

[15:11] <lizmat> m: my constant Any = Int; sub a(Any $) { dd }; a "foo"    # this should refer to the lexical Any

[15:11] <camelia> rakudo-moar ed7aca5f9: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Calling a(Str) will never work with declared signature (Int)␤at <tmp>:1␤------> onstant Any = Int; sub a(Any $) { dd }; ⏏a "foo"    # this should refer to the le␤»

[15:12] <lizmat> so the error is correct

[15:12] <lizmat> m: my constant Any = Int; sub a($) { dd }; a "foo"    # without an explicit mention, it should be the SETTING::<Any> I think

[15:12] <camelia> rakudo-moar ed7aca5f9: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Calling a(Str) will never work with declared signature (Int)␤at <tmp>:1␤------> my constant Any = Int; sub a($) { dd }; ⏏a "foo"    # without an explicit mention␤»

[16:31] *** evalable6 left
[16:31] *** linkable6 left
[16:33] *** evalable6 joined
[16:33] *** linkable6 joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:38] <Geth> ¦ rakudo/main: ae5c20fa40 | (Stefan Seifert)++ | 2 files

[18:38] <Geth> ¦ rakudo/main: RakuAST: fix WhateverCode currying of postfixes on parenthesised expressions

[18:38] <Geth> ¦ rakudo/main: 

[18:38] <Geth> ¦ rakudo/main: Fixes e.g. (*²)² where the curried expression is contained in

[18:38] <Geth> ¦ rakudo/main: parentheses.

[18:38] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ae5c20fa40

[19:36] <Geth> ¦ rakudo/main: fd8d76e3aa | (Stefan Seifert)++ | src/Raku/ast/expressions.rakumod

[19:36] <Geth> ¦ rakudo/main: RakuAST: support currying of prefix operations

[19:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fd8d76e3aa

[19:37] <nine> LOL... you spend days and tons of brane on getting a single test file just a little closer to passing. And then there's a literal no brainer copy and paste job like ^^^ which gains us 11 (!) more passing files.

[20:00] *** epony left
[20:03] *** epony joined
[20:38] <lizmat> 761 confirmed!

[21:13] *** evalable6 left
[21:13] *** linkable6 left
[21:15] *** linkable6 joined
[21:16] *** evalable6 joined
[22:23] <MasterDuke> lizmat: did you catch my last privmsg?

[23:18] *** linkable6 left
[23:18] *** evalable6 left
[23:19] *** evalable6 joined
[23:20] *** linkable6 joined
