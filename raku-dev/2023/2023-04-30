[00:00] *** reportable6 left
[00:01] *** codesections joined
[00:02] *** reportable6 joined
[00:12] *** djinni` joined
[01:27] *** codesections left
[03:08] *** MasterDuke left
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:26] *** benchable6 left
[07:26] *** greppable6 left
[07:26] *** bisectable6 left
[07:26] *** sourceable6 left
[07:26] *** quotable6 left
[07:26] *** statisfiable6 left
[07:26] *** releasable6 left
[07:26] *** committable6 left
[07:26] *** coverable6 left
[07:26] *** notable6 left
[07:26] *** shareable6 left
[07:26] *** reportable6 left
[07:26] *** evalable6 left
[07:26] *** linkable6 left
[07:26] *** nativecallable6 left
[07:26] *** tellable6 left
[07:26] *** unicodable6 left
[07:26] *** notable6 joined
[07:26] *** evalable6 joined
[07:27] *** reportable6 joined
[07:27] *** releasable6 joined
[07:27] *** linkable6 joined
[07:27] *** nativecallable6 joined
[07:28] *** bisectable6 joined
[07:28] *** benchable6 joined
[07:28] *** coverable6 joined
[07:28] *** committable6 joined
[07:28] *** shareable6 joined
[07:28] *** quotable6 joined
[07:29] *** statisfiable6 joined
[07:29] *** greppable6 joined
[07:29] *** tellable6 joined
[07:29] *** sourceable6 joined
[07:29] *** unicodable6 joined
[08:20] *** Xliff joined
[08:30] *** sena_kun joined
[10:15] *** sourceable6 left
[10:15] *** unicodable6 left
[10:15] *** benchable6 left
[10:15] *** linkable6 left
[10:15] *** nativecallable6 left
[10:15] *** evalable6 left
[10:15] *** reportable6 left
[10:15] *** shareable6 left
[10:15] *** greppable6 left
[10:15] *** releasable6 left
[10:15] *** statisfiable6 left
[10:15] *** committable6 left
[10:15] *** quotable6 left
[10:15] *** tellable6 left
[10:15] *** coverable6 left
[10:15] *** squashable6 left
[10:15] *** notable6 left
[10:15] *** bloatable6 left
[10:15] *** bisectable6 left
[10:15] *** reportable6 joined
[10:15] *** tellable6 joined
[10:15] *** sourceable6 joined
[10:15] *** squashable6 joined
[10:16] *** releasable6 joined
[10:16] *** shareable6 joined
[10:16] *** committable6 joined
[10:16] *** evalable6 joined
[10:16] *** bisectable6 joined
[10:16] *** benchable6 joined
[10:16] *** statisfiable6 joined
[10:17] *** bloatable6 joined
[10:17] *** coverable6 joined
[10:17] *** nativecallable6 joined
[10:17] *** notable6 joined
[10:17] *** greppable6 joined
[10:18] *** quotable6 joined
[10:18] *** linkable6 joined
[10:18] *** unicodable6 joined
[11:24] *** unicodable6 left
[11:24] *** bloatable6 left
[11:24] *** sourceable6 left
[11:24] *** reportable6 left
[11:24] *** notable6 left
[11:24] *** nativecallable6 left
[11:24] *** shareable6 left
[11:24] *** tellable6 left
[11:24] *** statisfiable6 left
[11:24] *** quotable6 left
[11:24] *** benchable6 left
[11:24] *** evalable6 left
[11:24] *** greppable6 left
[11:24] *** committable6 left
[11:24] *** squashable6 left
[11:24] *** releasable6 left
[11:24] *** bisectable6 left
[11:24] *** coverable6 left
[11:24] *** linkable6 left
[11:25] *** bloatable6 joined
[11:25] *** nativecallable6 joined
[11:25] *** squashable6 joined
[11:25] *** benchable6 joined
[11:25] *** evalable6 joined
[11:25] *** bisectable6 joined
[11:26] *** linkable6 joined
[11:26] *** sourceable6 joined
[11:26] *** unicodable6 joined
[11:26] *** greppable6 joined
[11:26] *** notable6 joined
[11:26] *** coverable6 joined
[11:26] *** committable6 joined
[11:27] *** reportable6 joined
[11:27] *** statisfiable6 joined
[11:27] *** releasable6 joined
[11:27] *** tellable6 joined
[11:27] *** shareable6 joined
[11:27] *** quotable6 joined
[11:32] <Geth> ¦ rakudo/main: a72af165c4 | (Stefan Seifert)++ | 8 files
[11:32] <Geth> ¦ rakudo/main: RakuAST: Report illegal postdeclaration of normal variables
[11:32] <Geth> ¦ rakudo/main: 
[11:32] <Geth> ¦ rakudo/main: Makes my $i; { $i++; my $i; } fail properly
[11:32] <Geth> ¦ rakudo/main: 
[11:32] <Geth> ¦ rakudo/main: This replaces the mechanism previously used for finding illegal post
[11:32] <Geth> ¦ rakudo/main: declarations of dymanic variables. Instead of relying on the order that
[11:32] <Geth> ¦ rakudo/main: nodes are attached to the tree, we instead piggy back on the traversal
[11:32] <Geth> ¦ rakudo/main: <…commit message has 6 more lines…>
[11:32] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a72af165c4
[11:33] <nine> Oh boy, that one was seriously hard to get to. I hope this is the final version
[12:00] *** reportable6 left
[12:00] <Geth> ¦ rakudo/main: 3b302c06be | (Elizabeth Mattijsen)++ | 3 files
[12:00] <Geth> ¦ rakudo/main: RakuAST: make StatementList.code-statements an attribute
[12:00] <Geth> ¦ rakudo/main: 
[12:00] <Geth> ¦ rakudo/main: This is being used in several locations over the lifetime of the
[12:00] <Geth> ¦ rakudo/main: object, so better make it a full citizen (although a method to be
[12:00] <Geth> ¦ rakudo/main: used only internally).
[12:00] <Geth> ¦ rakudo/main: 
[12:00] <Geth> ¦ rakudo/main: Basicall, use StatementList.add-statement to add a statement, and
[12:00] <Geth> ¦ rakudo/main: StatementList.add-doc-block to add a Doc block.  No external changes.
[12:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3b302c06be
[12:00] <Geth> ¦ rakudo/main: 904d312645 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Fixups.pm6
[12:00] <Geth> ¦ rakudo/main: RakuAST: add special handling of X<> doc markup
[12:00] <Geth> ¦ rakudo/main: 
[12:00] <Geth> ¦ rakudo/main: It was not being handled properly before
[12:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/904d312645
[12:02] *** reportable6 joined
[13:02] *** bisectable6 left
[13:02] *** statisfiable6 left
[13:02] *** notable6 left
[13:02] *** squashable6 left
[13:02] *** nativecallable6 left
[13:02] *** linkable6 left
[13:02] *** reportable6 left
[13:02] *** quotable6 left
[13:02] *** releasable6 left
[13:02] *** committable6 left
[13:02] *** greppable6 left
[13:02] *** unicodable6 left
[13:02] *** bloatable6 left
[13:02] *** benchable6 left
[13:02] *** shareable6 left
[13:02] *** evalable6 left
[13:02] *** sourceable6 left
[13:02] *** greppable6 joined
[13:02] *** releasable6 joined
[13:02] *** bloatable6 joined
[13:03] *** reportable6 joined
[13:03] *** nativecallable6 joined
[13:03] *** linkable6 joined
[13:03] *** committable6 joined
[13:03] *** notable6 joined
[13:03] *** shareable6 joined
[13:03] *** evalable6 joined
[13:04] *** sourceable6 joined
[13:04] *** quotable6 joined
[13:04] *** unicodable6 joined
[13:04] *** bisectable6 joined
[13:05] *** benchable6 joined
[13:05] *** squashable6 joined
[13:05] *** statisfiable6 joined
[14:05] *** evalable6 left
[14:05] *** linkable6 left
[14:07] <Geth> ¦ roast: eaba690eb5 | (Stefan Seifert)++ | S02-names-vars/variables-and-packages.t
[14:07] <Geth> ¦ roast: Fix some error tests containing unrelated errors
[14:07] <Geth> ¦ roast: 
[14:07] <Geth> ¦ roast: These tests depended on the exact order the compiler detects error
[14:07] <Geth> ¦ roast: conditions. They are not about how to properly declare unit scoped
[14:07] <Geth> ¦ roast: packages, so fix that mistake and only test handling the interesting
[14:07] <Geth> ¦ roast: error.
[14:07] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/eaba690eb5
[14:07] *** evalable6 joined
[14:08] *** linkable6 joined
[14:18] <Geth> ¦ rakudo/main: eef4a7caec | (Stefan Seifert)++ | 4 files
[14:18] <Geth> ¦ rakudo/main: RakuAST: get more canonicalization of names correct
[14:18] <Geth> ¦ rakudo/main: 
[14:18] <Geth> ¦ rakudo/main: Now correctly canoniclizes $today:foo["a","b"]:bar:baz["😂"] to
[14:18] <Geth> ¦ rakudo/main: $today:foo<a b>:bar:baz<😂>
[14:18] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/eef4a7caec
[14:18] <Geth> ¦ rakudo/main: 97325f6511 | (Stefan Seifert)++ | src/Raku/Grammar.nqp
[14:18] <Geth> ¦ rakudo/main: RakuAST: restore detection of Perl5 variable usage
[14:18] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/97325f6511
[14:18] <Geth> ¦ rakudo/main: 9ca2e9d168 | (Stefan Seifert)++ | src/Raku/Grammar.nqp
[14:18] <Geth> ¦ rakudo/main: RakuAST: restore proper error message on accidental sigilless declarations
[14:18] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/9ca2e9d168
[14:19] <nine> The only failures remaining in t/spec/S02-names-vars/varnames.rakudo.moar are now due to the RakuAST frontend reporting an additional error on my a = 10; It reports that a is not known as a type in addition to the malformed my.
[14:22] <nine> Oh, I think that can be fixed by changing the order in the grammar :)
[14:28] <Geth> ¦ rakudo/main: f4f6166343 | (Stefan Seifert)++ | src/Raku/Grammar.nqp
[14:28] <Geth> ¦ rakudo/main: RakuAST: avoid additional sorry on accidental sigilless declarations
[14:28] <Geth> ¦ rakudo/main: 
[14:28] <Geth> ¦ rakudo/main: Fixes my a; reporting unknown type a + the malformed my error. The
[14:28] <Geth> ¦ rakudo/main: latter is enough.
[14:28] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f4f6166343
[14:47] <Geth> ¦ rakudo/main: 38cdaf3c1f | (Elizabeth Mattijsen)++ | 5 files
[14:47] <Geth> ¦ rakudo/main: RakuAST: move podification to RakuAST::LegacyPodify
[14:47] <Geth> ¦ rakudo/main: 
[14:47] <Geth> ¦ rakudo/main: For now, no functional changes.  But in the not too distant future
[14:47] <Geth> ¦ rakudo/main: it should be possible to plug in another logic to create RakuDoc
[14:47] <Geth> ¦ rakudo/main: objects from the provided RakuAST::Doc classes, and thus be able
[14:47] <Geth> ¦ rakudo/main: to customize what winds up in $=pod.
[14:47] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/38cdaf3c1f
[15:01] <lizmat> nine: seems t/spec/S32-array/splice.t regressed ?
[15:18] <nine> That one has never passed for me?
[15:20] <nine> Oh, wait, it's t/spec/S32-array/splice.rakudo.moar in the test log
[15:20] <lizmat> sorry, yeah...  
[15:24] <nine> I seem to have missed that regression in RakuAST: get more canonicalization of names correct
[15:27] *** tellable6 left
[15:27] *** coverable6 left
[15:27] *** sena_kun left
[15:27] *** djinni` left
[15:27] *** rypervenche left
[15:27] *** zostay left
[15:27] *** tellable6 joined
[15:27] *** coverable6 joined
[15:27] *** sena_kun joined
[15:27] *** zostay joined
[15:28] *** rypervenche joined
[15:28] *** rypervenche left
[15:28] *** rypervenche joined
[15:29] *** djinni` joined
[15:35] <nine> Huh... it's the new IMPL-INTERPRET in RakuAST::Circumfix::ArrayComposer
[15:35] *** [TuxCM] left
[15:35] <nine> Which totally makes sense. After all for a one-elememnt list it just returns that element instead of an array holding that element
[15:36] *** [TuxCM] joined
[15:41] <nine> Yeah, need to pass the result to Array.new
[15:42] <Geth> ¦ rakudo/main: e253ce4542 | (Elizabeth Mattijsen)++ | 2 files
[15:42] <Geth> ¦ rakudo/main: RakuAST: fix empty =begin foo␤=end foo
[15:42] <Geth> ¦ rakudo/main: 
[15:42] <Geth> ¦ rakudo/main: The problem was caused by the = on the next line already having
[15:42] <Geth> ¦ rakudo/main: been eaten by doc-configuration.
[15:42] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e253ce4542
[15:42] <lizmat> sadly no new passing tests :-(
[15:48] <Geth> ¦ rakudo/main: 3a80128533 | (Stefan Seifert)++ | src/Raku/ast/circumfix.rakumod
[15:48] <Geth> ¦ rakudo/main: RakuAST: fix interpretation of ArrayComposer returning non-Array
[15:48] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3a80128533
[15:48] <nine> 797! Sorry for the noise
[15:52] <lizmat> nine: I think I found a bunch of LHF in t/spec/S26-documentation/01-delimited.t and friends
[15:52] <lizmat> it currently fails with: Cannot resolve caller postcircumfix:<[; ]>(Array:D, Int:D); none of these signatures matches:
[15:53] <lizmat> and it fails on:
[15:53] <lizmat> $=pod[0]
[15:53] <lizmat> the odd thing is, that if I put a line before that with just:
[15:53] <lizmat> $=pod
[15:53] <lizmat> the following tests are ok, until the next time $=pod[N] is done
[15:54] <lizmat> putting a $=pod before that, fixes those tests
[15:54] <lizmat> etc etc
[15:56] <lizmat> golfed to:
[15:56] <lizmat> =begin foo
[15:56] <lizmat> =end foo
[15:56] <lizmat> say $=pod[0];
[15:56] <evalable6> lizmat, rakudo-moar e253ce454: OUTPUT: «(Any)␤»
[15:58] <lizmat> ok, RakuAST codegens it to a call &postcircumfix:<[; ]>
[15:58] <lizmat> legacy correctly codegens this to call &postcircumfix:<[ ]>
[16:01] <lizmat> nine: any idea on where to look for that ?
[16:05] <lizmat> think I found it
[16:05] <lizmat> testing...
[16:17] <Geth> ¦ rakudo/main: edaa90ac6d | (Elizabeth Mattijsen)++ | src/Raku/ast/expressions.rakumod
[16:17] <Geth> ¦ rakudo/main: RakuAST: correctly determine type of postcircumfix op
[16:17] <Geth> ¦ rakudo/main: 
[16:17] <Geth> ¦ rakudo/main: Having pod blocks in there, caused the wrong decision to be made.
[16:17] <Geth> ¦ rakudo/main: So look at the number of statements with code only.
[16:17] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/edaa90ac6d
[16:17] <lizmat> 798!
[16:17] <nine> nice!
[16:17] <nine> Have you looked at other places where .statements is called?
[16:17] <lizmat> this unbreaks most of the pod tests, which now fail for very small content differences
[16:18] <lizmat> I thought I had covered them all already  :-(
[16:18] <lizmat> aah... more places  
[16:34] <Geth> ¦ rakudo/main: 654fb38007 | (Elizabeth Mattijsen)++ | 4 files
[16:34] <Geth> ¦ rakudo/main: RakuAST: fix some more places where code-statements should be used
[16:34] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/654fb38007
[16:34] <lizmat> no change in # of tests
[16:42] <Geth> ¦ rakudo/main: eddff44ea3 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/LegacyPodify.pm6
[16:42] <Geth> ¦ rakudo/main: RakuAST: correct Doc::Para.contents generation
[16:42] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/eddff44ea3
[16:42] <lizmat> fixes quite a few tests, but no complete files yet
[16:47] *** linkable6 left
[16:47] *** evalable6 left
[16:48] *** evalable6 joined
[16:49] *** linkable6 joined
[17:01] *** [TuxCM] left
[17:02] *** [TuxCM] joined
[17:09] *** [TuxCM] left
[17:33] *** [TuxCM] joined
[17:44] *** lucs_ is now known as lucs
[17:59] <timo> looks like Pod::To::HTML is failing its tests?
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:06] <lizmat> ah?
[18:06] <lizmat> recently?
[18:07] <timo> no idea tbh
[18:30] <[Coke]> https://github.com/Raku/Pod-To-HTML is passing tests in git clone here.
[18:42] <Geth> ¦ rakudo/main: 8d74e4e775 | (Stefan Seifert)++ | 4 files
[18:42] <Geth> ¦ rakudo/main: RakuAST: support the is-dynamic pragma
[18:42] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/8d74e4e775
[19:04] <timo> https://gist.github.com/timo/45a0e190a81df7d521087bc7509bf6be [Coke] this is what i see locally
[19:08] <[Coke]> timo: OS, raku version?
[19:09] <timo> Implementing the Raku® Programming Language v6.d.
[19:09] <timo> Built on MoarVM version 2023.02-3-g6adfc376c.
[19:09] <timo> i'm on a fedora kinoite 38-prerelease inside a toolbox with the registry.fedoraproject.org/fedora-toolbox:38 image
[19:10] <timo> Welcome to Rakudo™ v2023.02-302-g30e15f040.
[19:10] <timo> .2 sounds a little old, huh
[19:11] <timo> ah, but the commit is only like 2 weeks old
[19:13] <[Coke]> yah, we skipped 3 and did 4, I think.
[19:13] <[Coke]> wonder if it's a recent commit to Pod2html that fixed something.
[19:13] <[Coke]> can you try running the tests in the git clone?
[19:13] <timo> ah, between a release and the main branch
[19:13] <timo> i'm now rebuilding my raku with a newer version %)
[19:14] <[Coke]> ok
[19:14] <timo> ok i did git clone [email@hidden.address] then cd into that and run "zef test ." and i get exceptions
[19:14] <timo> ok i did git clone git@github.com:Raku/Pod-To-Html then cd into that and run "zef test ." and i get exceptions
[19:20] <timo> any reason the toc calculator would no longer know what to do with Pod::Declarator? or a reason why it wouldn't have been asked to try that before?
[19:22] <[Coke]> working for me on 2023.02 - trying latest...
[19:22] <Geth> ¦ rakudo/main: 80c35e4273 | (Stefan Seifert)++ | src/Raku/ast/variable-access.rakumod
[19:22] <Geth> ¦ rakudo/main: RakuAST: support binding to pseudo package variables
[19:22] <Geth> ¦ rakudo/main: 
[19:22] <Geth> ¦ rakudo/main: E.g. $CALLER::foo := 1;
[19:22] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/80c35e4273
[19:22] <nine> 800!
[19:22] <timo> * 531049679 - Revert "Introduce Pod::Declarator class" (2 weeks ago) <Elizabeth Mattijsen>
[19:23] <timo> this may have introduced this declarator class and there needed to be an addition to Pod::To::HTML to deal with it
[19:23] <timo> nine: way cool!
[19:23] *** linkable6 left
[19:25] *** linkable6 joined
[19:25] <timo> i now see the "Revert" in there %)
[19:28] <timo> not sure if the right fix is just to copy the implementation of find-headings(Pod::Block,...) and match Pod::Declarator but it does get the tests working (writing more tests could be wise):
[19:49] <timo> a new version of JSON::Fast is up, it now allows parsing jsonc, i.e. "json with c-style line and block comments" when the allow-jsonc option is turned on
[19:50] <timo> much thanks to lizmat for the work
[20:39] <timo> and another new release with support for a custom argument to sorted-keys that will be passed to .sort, so can be a one- or two-arity function
[20:58] *** evalable6 left
[20:58] *** linkable6 left
[20:59] *** linkable6 joined
[21:00] *** evalable6 joined
[21:08] <timo> in an EXPORT sub do we have access to things that are already in the scope we're exporting into?
[21:08] <timo> i'm thinking of letting a sub be passed by local name into "use JSON::Fast" for sorted keys and also a new secret fun feature
[21:08] <timo> but of course use only takes strings
[21:15] *** hythm joined
[21:18] *** vrurg left
[21:23] <timo> nine: what happened here? ` sub ***@***.*** = [] but DefaultValue) {`
[21:23] <timo> that's a very interesting name for a sub
[21:31] *** vrurg joined
[22:20] *** hythm left
[22:22] *** sena_kun left
[22:53] <timo> we have no nqp op that would empty out a nqp::hash?((
