[00:00] *** ugexe left
[00:00] *** squashable6 left
[00:00] *** vrurg left
[00:00] *** sourceable6 left
[00:00] *** coverable6 left
[00:00] *** shareable6 left
[00:00] *** quotable6 left
[00:00] *** bisectable6 left
[00:00] *** committable6 left
[00:00] *** lucs left
[00:00] *** Geth left
[00:00] *** bartolin left
[00:00] *** elcaro left
[00:00] *** unicodable6 left
[00:00] *** benchable6 left
[00:00] *** greppable6 left
[00:00] *** nativecallable6 left
[00:00] *** nine left
[00:00] *** sjn left
[00:00] *** Voldenet left
[00:00] *** sjn joined
[00:00] *** reportable6 left
[00:00] *** vrurg joined
[00:01] *** ugexe joined
[00:05] *** Voldenet joined
[00:05] *** nine joined
[00:05] *** lucs joined
[00:05] *** bartolin joined
[00:05] *** elcaro joined
[01:00] *** nativecallable6 joined
[01:00] *** benchable6 joined
[01:01] *** coverable6 joined
[01:02] *** committable6 joined
[01:02] *** quotable6 joined
[01:07] *** reportable6 joined
[02:05] *** sourceable6 joined
[02:07] *** bisectable6 joined
[02:28] *** unicodable6 joined
[03:15] *** kjp left
[03:18] *** squashable6 joined
[03:26] *** greppable6 joined
[04:22] *** MasterDuke left
[04:32] *** shareable6 joined
[05:32] *** linkable6 left
[05:32] *** statisfiable6 left
[05:32] *** evalable6 left
[05:32] *** sourceable6 left
[05:32] *** greppable6 left
[05:32] *** reportable6 left
[05:32] *** unicodable6 left
[05:32] *** shareable6 left
[05:32] *** bisectable6 left
[05:32] *** squashable6 left
[05:32] *** committable6 left
[05:32] *** tellable6 left
[05:32] *** releasable6 left
[05:32] *** coverable6 left
[05:32] *** notable6 left
[05:32] *** benchable6 left
[05:32] *** nativecallable6 left
[05:32] *** quotable6 left
[05:32] *** bisectable6 joined
[05:33] *** squashable6 joined
[05:33] *** linkable6 joined
[05:33] *** greppable6 joined
[05:33] *** sourceable6 joined
[05:34] *** nativecallable6 joined
[05:34] *** coverable6 joined
[05:34] *** notable6 joined
[05:35] *** benchable6 joined
[05:35] *** releasable6 joined
[06:38] *** statisfiable6 joined
[06:42] *** evalable6 joined
[06:43] *** quotable6 joined
[06:44] *** unicodable6 joined
[07:42] *** committable6 joined
[07:58] *** Geth joined
[07:59] <Geth> ¦ rakudo/main: cacefa6a20 | (Elizabeth Mattijsen)++ | 2 files

[07:59] <Geth> ¦ rakudo/main: RakuAST: streamline ternary handling

[07:59] <Geth> ¦ rakudo/main: 

[07:59] <Geth> ¦ rakudo/main: No need to change structures, let the action fetch the values from

[07:59] <Geth> ¦ rakudo/main: the right places

[07:59] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cacefa6a20

[08:02] <lizmat> ab5tract: I just remember there is a potential easy win also in figuring out why initializing a lock in an INIT phaser broke all of NativeCall tests

[08:02] <lizmat> caused by a4a2bbd24e

[08:03] *** linkable6 left
[08:04] <ab5tract> thanks for the heads up :)

[08:19] *** reportable6 joined
[08:22] *** summerisle left
[08:22] *** summerisle joined
[08:29] <Xliff> \o

[08:29] <Xliff> I just wrote a Raku-controlled WebKit-based browser that I can use to control unmanned requests to the Qualys SSL Labs tests.

[08:30] <lizmat> wow  :-)

[08:30] <Xliff> Much of that work is for $dayjob.

[08:34] <lizmat> would be cool if that could be in the ecosystem :-)

[08:35] *** ab5tract left
[08:35] *** ab5tract joined
[08:36] <Xliff> Would be cool if the problems I have noted about CURI could be fixed!

[08:36] <Xliff> For those interested in the code: https://github.com/Xliff/p6-WebkitGTK/blob/main/t/05-progressive-loading.t

[08:37] <Xliff> lizmat: The intent is to get it into the ecosystem, but as per the conversation you and I had a long time ago I feel the current installation process lacks a lot of information that should be conveyed to the user. First time users to my code might be put off due to the excessively long install times for even the smallest of my projects.

[08:38] <Xliff> I've tried to make these changes myself to no avail. 

[08:38] <Xliff> And life is currently keeping me away from doing anything else, ATM.

[08:39] <lizmat> understood

[08:40] <Xliff> lizmat: Also understand -- this is frustrating me to no end. I'd rather be releasing.

[08:40] <lizmat> again, understood  :-(

[08:40] <Xliff> 's all I can ask for.

[08:47] <Geth> ¦ rakudo/main: e41ffda4e7 | (Elizabeth Mattijsen)++ | src/Raku/ast/expressions.rakumod

[08:47] <Geth> ¦ rakudo/main: RakuAST: make sure Rinfix has correct properties

[08:47] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e41ffda4e7

[09:16] *** Xliff left
[09:16] *** tellable6 joined
[09:43] <lizmat> notable6: weekly

[09:43] <notable6> lizmat, No notes for “weekly”

[09:51] <discord-raku-bot> <nemokosch> the best you can do with the CURI for your sanity is to pretend it doesn't exist

[11:40] <Geth> ¦ rakudo/main: 4f13da10df | (Elizabeth Mattijsen)++ | src/Raku/Actions.nqp

[11:40] <Geth> ¦ rakudo/main: RakuAST: streamline regex adverb handling

[11:40] <Geth> ¦ rakudo/main: 

[11:40] <Geth> ¦ rakudo/main: - only use one hash built at compile time

[11:40] <Geth> ¦ rakudo/main: - which allows simplification to a single lookup, instead of first

[11:40] <Geth> ¦ rakudo/main:   one to see if there's something special, and then figuring out

[11:40] <Geth> ¦ rakudo/main:   what kind of special

[11:40] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4f13da10df

[11:50] <jdv> [Coke]: cool

[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:05] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/09/11/2023-37-issuing/

[12:18] <Geth> ¦ rakudo/main: 8832f11c34 | (Elizabeth Mattijsen)++ | src/Raku/Actions.nqp

[12:18] <Geth> ¦ rakudo/main: RakuAST: streamline quotepair action method

[12:18] <Geth> ¦ rakudo/main: 

[12:18] <Geth> ¦ rakudo/main: Reduce if/elsif structure to ternaries in arguments

[12:18] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/8832f11c34

[12:21] *** [Coke] left
[12:21] *** [Coke] joined
[13:59] *** shareable6 joined
[14:16] *** camelia left
[14:18] *** nine left
[14:21] *** linkable6 joined
[14:24] *** nine joined
[14:36] *** camelia joined
[15:47] <jdv> didnt we used to do use v6 and then we didnt and now we want to bring it back?

[15:49] <jdv> smells like indecision.  in any case i dont get why the absence meaning current is bad.

[15:50] <discord-raku-bot> <nemokosch> because that makes the behavior of the code shift from the time of authoring to the time of execution, which is never desirable

[15:51] <jdv> its worked for ?most? langs so far

[15:51] <discord-raku-bot> <nemokosch> it doesn't happen for most languages

[15:51] <jdv> ok

[15:52] <discord-raku-bot> <nemokosch> I don't know for what languages it would happen at all. Maybe compiled languages, once you recompile the code

[15:52] <discord-raku-bot> <nemokosch> but that's a bit different because the produced binary format is one of the most stable formats in IT history

[15:52] <jdv> php, ruby, python, bash, etc...

[15:53] <discord-raku-bot> <nemokosch> 1. I don't think Bash is a good example of anything

[15:53] <discord-raku-bot> <nemokosch> 2. those situations are fairly different, because the language is equated to the official runtime, and the runtime has proper support cycles

[15:53] <jdv> its a pratical example of the real world

[15:54] <discord-raku-bot> <nemokosch> no I mean, Bash never worked will

[15:54] <discord-raku-bot> <nemokosch> *well

[15:54] <discord-raku-bot> <aerbil313> Python is not a good example either. 2to3 anyone?

[15:54] <jdv> ivory tower is nice but rarely directly applicable

[15:55] <discord-raku-bot> <nemokosch> by the way, yes, if you release a .py or .rb file out in the open wild, that's also not going to work out well

[15:56] <jdv> note that despite the 2,3 shenanigans python reigns.  does raku want to be "better" and irrelevant or good nuf and thrive.

[15:58] <discord-raku-bot> <nemokosch> these comparisons are always going to be messy. We should deal with our own baggage. And as long as we are still fixing stuff like "what should be the truth value of an infinite Range", and Rakudo has no particular release or support strategy, the language is not stable enough to just shove all the responsibility onto the user.

[16:01] <jdv> our baggage?  how about despite 20+ years the lang arguably languishes.

[16:02] <jdv> forest for trees and all...

[16:03] <discord-raku-bot> <nemokosch> so what follows? another bad practice cannot hurt, or what?

[16:04] <jdv> as soon as grammars are fast and mem leaks are vanquished ill use rake in prod.

[16:04] <jdv> *raku

[16:05] <discord-raku-bot> <nemokosch> I'm not sure what this has to do with the omission of use... but regardless, it's a reasonable approach.

[16:06] <jdv> priorities and man power, etc...

[16:07] <discord-raku-bot> <nemokosch> it's a no-brainer to add a warning for the lack of use v.., I'm pretty sure

[16:07] <jdv> anyway, back to "work":)

[16:08] <discord-raku-bot> <nemokosch> anyway, let's say, in order for that performance to be reached, there needs to be work on the runtime part of the compiler, that's a reasonable assumption

[16:09] <discord-raku-bot> <nemokosch> who is both able to and willing to work on it? who is gonna coordinate or validate the effort? who is willing to educate others to be able to efficiently work on it?

[16:14] <discord-raku-bot> <nemokosch> a couple of black-belt veterans are contributing to MoarVM, JVM doesn't even work currently, and it would only take the absence of 2 or 3 people for the same to happen with MoarVM

[17:50] *** jgaz left
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:37] <[Coke]> jvm does work.

[18:38] <[Coke]> nemo - maybe it would be helpful if you identified a way to attract and train more people instead of complaining that we're not attracting and training more people.

[18:39] <[Coke]> I appreciate that it's a problem, but we've talked about non-fungible resources before, and I think we demonstrably don't have folks that are good at increasing the talent pool (while we do, as you've said, have some people that are very good at hacking on things.)

[18:39] <[Coke]> We have a very similar situation in docs.

[18:41] <[Coke]> (how to attract more people) I also get that maybe you aren't fungible in this regard either.

[18:44] <[Coke]> alternative way of phrasing, I guess: when you say that we need more people... what are you asking for, specifically? For the existing people to work on that?

[18:45] <[Coke]> for RSC, maybe?

[18:51] <Geth> ¦ rakudo/main: c4cd9af105 | (Elizabeth Mattijsen)++ | src/Raku/Actions.nqp

[18:51] <Geth> ¦ rakudo/main: RakuAST: streamline type-for-name logic

[18:51] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c4cd9af105

[19:06] *** MasterDuke joined
[19:14] <discord-raku-bot> <nemokosch> if it works, that's the event of the last couple of days

[19:14] <discord-raku-bot> <nemokosch> after months of not working

[19:16] <discord-raku-bot> <nemokosch> the VMs, at least MoarVM since that's what everybody cares about, should be documented. What is the architecture, how do concepts map to actual code, this sort of stuff.

[19:17] <discord-raku-bot> <nemokosch> It should also have at least a conceptual workflow of dealing with issues or evaluating the severity of them, or who wants/can work on them

[19:18] <discord-raku-bot> <nemokosch> and arguably it should also have some testing and benchmarking

[19:18] <discord-raku-bot> <nemokosch> it's not easy when pretty much all of this should have been done long ago by Jonathan Worthington

[19:20] <lizmat> before I took on the job of adding pod support for RakuAST, I was a complete grammar noob

[19:20] <lizmat> that didn't stop me from taking this on, and documenting stuff on the fly

[19:21] <lizmat> now, did I document enough?   I'll be able to tell you in a year or so  :-)

[19:21] <lizmat> anyways, what I'm saying is: nobody is stopping you from (trying to) write documentation on systems

[19:22] <lizmat> I'm pretty sure that if it is incorrect, someone will tell you and help you fix it

[19:22] <lizmat> afk&

[19:25] <discord-raku-bot> <nemokosch> I got into a rather heated argument yesterday with an online mate, a friend if you will, about "doing whatever project comes along", because he had this criteria to "believe in the project" and whatnot while I found that vague and arbitrary

[19:26] <discord-raku-bot> <nemokosch> but he was wrong. There are tasks I'm not volunteering for, and especially not volunteering for if the very people who were responsible for it couldn't care to do it, even though it would have been easier for them by magnitudes

[20:27] <Geth> ¦ rakudo: usev6++ created pull request #5379: Add extra check for GLOBAL being null

[20:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5379

[21:00] <Geth> ¦ roast: c9eea510b7 | (Christian Bartolomäus)++ | S32-str/format.t

[21:00] <Geth> ¦ roast: Fix variable name in test description

[21:00] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/c9eea510b7

[22:31] *** unicodable6 left
[22:31] *** tellable6 left
[22:31] *** notable6 left
[22:31] *** squashable6 left
[22:31] *** coverable6 left
[22:31] *** linkable6 left
[22:31] *** statisfiable6 left
[22:31] *** greppable6 left
[22:31] *** releasable6 left
[22:31] *** shareable6 left
[22:31] *** sourceable6 left
[22:31] *** benchable6 left
[22:31] *** evalable6 left
[22:31] *** reportable6 left
[22:31] *** bisectable6 left
[22:31] *** nativecallable6 left
[22:31] *** quotable6 left
[22:31] *** committable6 left
[22:31] *** bloatable6 left
[22:33] *** nativecallable6 joined
[22:33] *** evalable6 joined
[22:33] *** notable6 joined
[22:34] *** squashable6 joined
[22:34] *** shareable6 joined
[22:35] *** bisectable6 joined
[23:33] *** unicodable6 joined
[23:35] *** greppable6 joined
[23:36] *** reportable6 joined
[23:36] *** tellable6 joined
[23:36] *** quotable6 joined
[23:37] *** bloatable6 joined
