[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:29] *** epony left
[02:38] *** epony joined
[05:04] *** [Coke]_ joined
[05:04] *** [Coke] left
[05:44] *** Kaiepi left
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[07:03] *** greppable6 left
[07:03] *** evalable6 left
[07:03] *** bloatable6 left
[07:03] *** coverable6 left
[07:03] *** committable6 left
[07:03] *** statisfiable6 left
[07:03] *** releasable6 left
[07:03] *** bisectable6 left
[07:03] *** benchable6 left
[07:03] *** unicodable6 left
[07:03] *** notable6 left
[07:03] *** sourceable6 left
[07:03] *** squashable6 left
[07:03] *** quotable6 left
[07:03] *** nativecallable6 left
[07:03] *** reportable6 left
[07:03] *** tellable6 left
[07:03] *** linkable6 left
[07:03] *** shareable6 left
[07:03] *** bloatable6 joined
[07:03] *** statisfiable6 joined
[07:04] *** committable6 joined
[07:04] *** tellable6 joined
[07:04] *** evalable6 joined
[07:04] *** releasable6 joined
[07:04] *** greppable6 joined
[07:04] *** linkable6 joined
[07:04] *** shareable6 joined
[07:05] *** notable6 joined
[07:05] *** quotable6 joined
[07:05] *** reportable6 joined
[07:05] *** nativecallable6 joined
[07:05] *** benchable6 joined
[07:05] *** coverable6 joined
[07:05] *** squashable6 joined
[07:06] *** sourceable6 joined
[07:06] *** bisectable6 joined
[07:06] *** unicodable6 joined
[09:26] *** sena_kun joined
[10:05] *** sena_kun left
[10:10] *** sena_kun joined
[10:10] *** sena_kun left
[10:44] *** Kaiepi joined
[11:09] *** sena_kun joined
[12:00] *** reportable6 left
[12:01] <Geth> ¦ rakudo/main: 683648cd51 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Deparse.pm6

[12:01] <Geth> ¦ rakudo/main: Fix some deparsing issues

[12:01] <Geth> ¦ rakudo/main: 

[12:01] <Geth> ¦ rakudo/main: - add support for Signature.returns

[12:01] <Geth> ¦ rakudo/main: - don't parenthesize calls to: say, note, return, emit as these

[12:01] <Geth> ¦ rakudo/main:   are generally put in code without parentheses

[12:01] <Geth> ¦ rakudo/main: - add a subclassable 'dont-parenthesize' method, which is expected

[12:01] <Geth> ¦ rakudo/main:   to return an Associative with the names of the subs to not put

[12:01] <Geth> ¦ rakudo/main:   () around their args

[12:02] <Geth> ¦ rakudo/main: - make sure a trailing } is not parenthesized with an end-of-line

[12:02] <Geth> ¦ rakudo/main:   inbetween

[12:02] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/683648cd51

[12:02] <Geth> ¦ rakudo/main: 468bdb2836 | (Elizabeth Mattijsen)++ | t/12-rakuast/code.rakutest

[12:02] <Geth> ¦ rakudo/main: Add deparsing tests for code

[12:02] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/468bdb2836

[12:02] *** reportable6 joined
[12:05] <nine> "don't parenthesize calls to: say, note, return, emit as these" I think that's a pointless complication of the code. The point of deparse is _not_ to reproduce the input.

[12:07] <lizmat> nine: how do you see things like Raku::Tidy evolve then ?

[12:13] <nine> That will want to overwrite many of the standard deparsing functions anyway to cater to different preferences.

[12:14] <lizmat> well, which subs to not parenthesize, is now configurable by subclass

[12:15] <lizmat> It's going to be hard enough to make a Raku::Tidy, so why make it more difficult?

[12:16] <lizmat> I mean, the deparsing already made decisions on deparsing with indents of 4 spaces, instead of a tab

[12:16] <lizmat> (which is also customizable already, mind you)

[12:16] <lizmat> and having a space after a comma in a list

[12:17] <lizmat> etc.

[12:19] <nine> What is the job of deparse in the setting?

[12:20] <lizmat> Good question, it appears we have different ideas about it

[12:20] <lizmat> 1. provide a round-trippable version of an AST

[12:21] <lizmat> 2. provide a representation of an AST for debugging / module developers wanting to use RakuAST

[12:22] <lizmat> 3. provide a customizable interface for ASTs for code tidying

[12:22] <lizmat> that would be my list of goals there

[12:22] <lizmat> you seem to have added: 4. provide source representation of regexes

[12:22] <lizmat> inside the setting, as a regex apparently carries around its source representation

[12:25] <nine> m: Q/say(1,2),3/.AST.DEPARSE.say

[12:25] <camelia> rakudo-moar 468bdb283: OUTPUT: «say 1, 2, 3␤␤»

[12:25] <nine> And it's wrong

[12:31] <lizmat> ok, fair point

[12:31] <lizmat> will remove the dont-parenthesize feature

[12:32] <lizmat> although the example is... a bit artificial  :-)

[12:34] <nine> Well, deparse doesn't have to do many things, but create correct code is definitely one of them.

[12:35] <lizmat> true

[12:41] <discord-raku-bot> <Nemokosch> well the parens could be put differently, for what it's worth 😛

[12:41] <discord-raku-bot> <Nemokosch> and regarding syntax, that's actually more descriptive. Lisp masterrace

[12:42] <Geth> ¦ nqp/main: aa7fbea48c | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[12:42] <Geth> ¦ nqp/main: Bump MoarVM to get Unicode 15.0 support

[12:42] <Geth> ¦ nqp/main: 

[12:42] <Geth> ¦ nqp/main: Kudos to thundergnat++

[12:42] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/aa7fbea48c

[12:50] <discord-raku-bot> <Nemokosch> is it okay for implementation-details to leak into core?

[12:50] <discord-raku-bot> <Nemokosch> like SignedBlob and UnsignedBlob in this particular case

[12:50] <lizmat> i'd say, yes?

[12:50] <lizmat> they're marked "implementation-detail", right ?

[12:50] <discord-raku-bot> <Nemokosch> yes

[12:51] <lizmat> that basically means that there was no way to hide these from you, and that's why they're marked as such

[12:52] <discord-raku-bot> <Nemokosch> is there something (other than the source) that tells a user user this, should they come across it for whatever reason?

[12:52] <nine> I'm not even sure if these two should be marked implementation-detail. Doing that was basically avoiding to make that decision.

[12:53] <discord-raku-bot> <Nemokosch> I was about to say they should be documented when I noticed that they are marked implementation-detail

[12:57] <lizmat> I would be fine with documenting them, as nine said: they were marked as implementation-detail as a sort of soft "experimental"

[12:58] <lizmat> and apart from documenting, they would also need spectests then

[12:59] *** guifa left
[13:00] *** guifa joined
[13:00] <Geth> ¦ rakudo/main: 42823691eb | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[13:00] <Geth> ¦ rakudo/main: Bump NQP to get support for Unicode 15.0 on MoarVM

[13:00] <Geth> ¦ rakudo/main: 

[13:00] <Geth> ¦ rakudo/main: Kudos to thundergnat++

[13:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/42823691eb

[13:00] <nine> Unless of course someone has a better idea on how to support signedness in blobs and bufs. I just went with what worked for me. I didn't think about language design or other lofty goals.

[13:02] <discord-raku-bot> <Nemokosch> Could the gist method give you that kind of hint that you are dealing with an implementation-detail?

[13:51] <Geth> ¦ tap-harness6/master: 8 commits pushed by (Leon Timmermans)++

[13:51] <Geth> ¦ tap-harness6/master: 8f69ade5b7 | Add env attribute to Source::Proc

[13:51] <Geth> ¦ tap-harness6/master: 20f9be912b | Use RAKULIB instead of -I for include dirs

[13:51] <Geth> ¦ tap-harness6/master: 24df217af4 | Merge Source::Proc's path and args attributes into command

[13:51] <Geth> ¦ tap-harness6/master: b80fd7e39d | Make SourceHandler.can-handle use an IO::Handle as its argument

[13:51] <Geth> ¦ tap-harness6/master: f81daebf04 | Clarify Source attributes

[13:51] <Geth> ¦ tap-harness6/master: 9aa541e978 | Normalize Volume values to Normal

[13:51] <Geth> ¦ tap-harness6/master: b5b0827e27 | Change test extension to rakutest

[13:51] <Geth> ¦ tap-harness6/master: e185c9dc2b | 0.3.12

[13:51] <Geth> ¦ tap-harness6/master: review: https://github.com/Raku/tap-harness6/compare/6639bbd1c769...e185c9dc2bbd

[13:58] <Geth> ¦ rakudo/main: 37826798b4 | thundergnat++ (committed by Elizabeth Mattijsen) | 4 files

[13:58] <Geth> ¦ rakudo/main: Upgrade Rakudo tests to Unicode 15.0

[13:58] <Geth> ¦ rakudo/main: 

[13:58] <Geth> ¦ rakudo/main: This is a manual merge of https://github.com/rakudo/rakudo/pull/5150

[13:58] <Geth> ¦ rakudo/main: which was sadly based on the master branch.

[13:58] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/37826798b4

[13:59] <Geth> ¦ roast: d413f43e9e | thundergnat++ (committed using GitHub Web editor) | 61 files

[13:59] <Geth> ¦ roast: Update to Unicode 15.0

[13:59] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/d413f43e9e

[14:10] <Geth> ¦ rakudo/main: 47ec76bdec | (Elizabeth Mattijsen)++ | t/09-moar/UnipropCheck.rakumod

[14:10] <Geth> ¦ rakudo/main: Adapt new boundary values

[14:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/47ec76bdec

[14:12] <lizmat> and that should conclude Rakudo's upgrade to Unicode 15

[14:12] *** epony left
[14:15] <lizmat> supporting 5327 new codepoints, 7 new scripts, 57 new emojis and 4193 (Chinese, Japanase, Korean) new ideographs

[14:15] <lizmat> https://unicode.org/versions/Unicode14.0.0/  and https://unicode.org/versions/Unicode15.0.0/

[14:22] *** epony joined
[14:44] <Geth> ¦ rakudo/main: 6a04f8f59a | (Elizabeth Mattijsen)++ | 2 files

[14:44] <Geth> ¦ rakudo/main: Remove dont-parenthesize feature from deparsing

[14:44] <Geth> ¦ rakudo/main: 

[14:44] <Geth> ¦ rakudo/main: Omitting parentheses should be done at a higher abstraction level:

[14:44] <Geth> ¦ rakudo/main: this approach was too simple and could cause unparseable code.

[14:44] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6a04f8f59a

[14:50] <Geth> ¦ rakudo/main: 43298c90e0 | (Elizabeth Mattijsen)++ | t/12-rakuast/contextualizer.rakutest

[14:50] <Geth> ¦ rakudo/main: Add deparsing tests for contextualizers

[14:50] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/43298c90e0

[15:25] *** Kaiepi left
[15:32] *** Kaiepi joined
[15:35] <Geth> ¦ rakudo/main: 90df8d8164 | (Elizabeth Mattijsen)++ | t/12-rakuast/regex.rakutest

[15:35] <Geth> ¦ rakudo/main: Add deparse tests for regexes

[15:35] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/90df8d8164

[16:05] *** melezhik joined
[16:15] *** melezhik left
[16:21] *** epony left
[16:22] *** epony joined
[16:27] *** sena_kun left
[16:37] <Geth> ¦ rakudo/main: 0b0d4ecbc9 | (Elizabeth Mattijsen)++ | 2 files

[16:37] <Geth> ¦ rakudo/main: Added tests for RakuAST::StatementModifier::When

[16:37] <Geth> ¦ rakudo/main: 

[16:37] <Geth> ¦ rakudo/main: Also removed RakuAST::StatementModifier::Condition and

[16:37] <Geth> ¦ rakudo/main: RakuAST::StatementModifier::Loop from the TODO list, as these don't

[16:37] <Geth> ¦ rakudo/main: exist on their own, being a base class and all

[16:37] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0b0d4ecbc9

[17:08] *** epony left
[17:10] *** epony joined
[17:12] *** sena_kun joined
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[19:21] <Geth> ¦ rakudo/main: 08f3995e04 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Deparse.pm6

[19:21] <Geth> ¦ rakudo/main: Make sure that statements deparse with any attached labels

[19:21] <Geth> ¦ rakudo/main: 

[19:21] <Geth> ¦ rakudo/main: Sadly, actual runtime support for labels appears to not work yet

[19:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/08f3995e04

[19:21] <Geth> ¦ rakudo/main: 83fb251848 | (Elizabeth Mattijsen)++ | 2 files

[19:21] <Geth> ¦ rakudo/main: Add tests for RakuAST::Statement::Empty

[19:21] <Geth> ¦ rakudo/main: 

[19:21] <Geth> ¦ rakudo/main: Also remove RakuAST::StatementModifier::For::Thunk from the TODO

[19:21] <Geth> ¦ rakudo/main: list, as this appears to be some flag that appears only in .AST

[19:21] <Geth> ¦ rakudo/main: output, but does not appear to be necessary otherwise in manually

[19:21] <Geth> ¦ rakudo/main: built ASTs

[19:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/83fb251848

[19:48] <Geth> ¦ rakudo/main: 1adc2ab1e5 | (Elizabeth Mattijsen)++ | src/Raku/ast/base.rakumod

[19:48] <Geth> ¦ rakudo/main: Make IMPL-UNWRAP-LIST handle non-Listy things

[19:48] <Geth> ¦ rakudo/main: 

[19:48] <Geth> ¦ rakudo/main: By dropping them into a nqp::list.  This should make manual specification

[19:48] <Geth> ¦ rakudo/main: of RakuAST nodes a bit more user-friendly, you wouldn't need to wrap them

[19:48] <Geth> ¦ rakudo/main: into a [foo] or (foo,) if you only have a single thing to add

[19:48] <Geth> ¦ rakudo/main: 

[19:48] <Geth> ¦ rakudo/main: Please revert if this is considered to be a bad idea.

[19:48] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1adc2ab1e5

[20:30] <Geth> ¦ rakudo/main: 16cc1702eb | (Elizabeth Mattijsen)++ | src/Raku/ast/statements.rakumod

[20:30] <Geth> ¦ rakudo/main: Normalise RakuAST class specifications

[20:30] <Geth> ¦ rakudo/main: 

[20:30] <Geth> ¦ rakudo/main: In the sense that all roles are mentioned *under* the class specification,

[20:30] <Geth> ¦ rakudo/main: each on their own line.  This at least makes reading these a lot easier

[20:30] <Geth> ¦ rakudo/main: for *me*.

[20:30] <Geth> ¦ rakudo/main: 

[20:30] <Geth> ¦ rakudo/main: No functional changes.  Please revert if you think it's a bad idea.

[20:30] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/16cc1702eb

[21:00] <Geth> ¦ rakudo/main: a6ee8bce9e | (Elizabeth Mattijsen)++ | src/Raku/ast/statements.rakumod

[21:00] <Geth> ¦ rakudo/main: RakuAST::Statement::Use can also take labels

[21:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a6ee8bce9e

[21:00] <Geth> ¦ rakudo/main: 86c0f401d0 | (Elizabeth Mattijsen)++ | t/12-rakuast/label.rakutest

[21:00] <Geth> ¦ rakudo/main: Add extensive RakuAST::Label tests

[21:00] <Geth> ¦ rakudo/main: 

[21:00] <Geth> ¦ rakudo/main: Make sure that deparsing works as expected.  Sadly, only the

[21:00] <Geth> ¦ rakudo/main: RakuAST::Statement::Loop classes produce executable code.  All of

[21:00] <Geth> ¦ rakudo/main: the other ones cause an issue in MAST production:

[21:00] <Geth> ¦ rakudo/main: 

[21:01] <Geth> ¦ rakudo/main:   Object of type Label in QAST::Var value, but not in SC

[21:01] <Geth> ¦ rakudo/main: 

[21:01] <Geth> ¦ rakudo/main: These tests have been disabled in the meantime

[21:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/86c0f401d0

[21:02] <Geth> ¦ rakudo/main: 3439c9adfb | (Elizabeth Mattijsen)++ | 3 files

[21:02] <Geth> ¦ rakudo/main: Normalize TAP output to use Str instead of DEPARSE

[21:02] <Geth> ¦ rakudo/main: 

[21:02] <Geth> ¦ rakudo/main: As the EVAL is using Str in that case, not an AST node

[21:02] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3439c9adfb

[21:24] <Geth> ¦ rakudo/main: 54984602c0 | (Elizabeth Mattijsen)++ | 2 files

[21:24] <Geth> ¦ rakudo/main: Implement deparse support for RakuAST::FunctionInfix

[21:24] <Geth> ¦ rakudo/main: 

[21:24] <Geth> ¦ rakudo/main: Also remove some other classes from the TODO that are deemed to

[21:24] <Geth> ¦ rakudo/main: be untestable by themselves

[21:24] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/54984602c0

[21:24] <Geth> ¦ rakudo/main: 436e0d876e | (Elizabeth Mattijsen)++ | t/12-rakuast/operators.rakutest

[21:24] <Geth> ¦ rakudo/main: Add basic test for RakuAST::FunctionInfix

[21:24] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/436e0d876e

[21:28] <lizmat> and that concludes my hacking for today&

[22:11] *** discord-raku-bot left
[22:11] *** discord-raku-bot joined
[22:29] *** discord-raku-bot left
[22:30] *** discord-raku-bot joined
[22:53] *** discord-raku-bot left
[22:53] *** discord-raku-bot joined
[23:35] *** vrurg_ is now known as vrurg

[23:37] *** sena_kun left
[23:49] *** hythm left
