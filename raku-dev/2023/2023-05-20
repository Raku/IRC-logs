[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:45] *** kjp left
[00:52] *** kjp joined
[01:58] *** coverable6 left
[01:58] *** greppable6 left
[01:58] *** benchable6 left
[01:58] *** notable6 left
[01:58] *** statisfiable6 left
[01:58] *** evalable6 left
[01:58] *** shareable6 left
[01:58] *** tellable6 left
[01:58] *** linkable6 left
[01:59] *** statisfiable6 joined
[01:59] *** linkable6 joined
[01:59] *** greppable6 joined
[01:59] *** notable6 joined
[02:00] *** shareable6 joined
[02:00] *** tellable6 joined
[02:00] *** benchable6 joined
[02:01] *** coverable6 joined
[02:01] *** evalable6 joined
[02:19] *** kurahaupo left
[02:19] *** kurahaupo_ joined
[02:19] *** kurahaupo_ left
[03:00] <releasable6> Next release in ≈6 days and ≈15 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:49] *** linkable6 left
[03:49] *** evalable6 left
[03:49] *** releasable6 left
[03:50] *** evalable6 joined
[03:51] *** linkable6 joined
[03:51] *** releasable6 joined
[04:51] *** statisfiable6 left
[04:51] *** squashable6 left
[04:51] *** sourceable6 left
[04:51] *** benchable6 left
[04:51] *** evalable6 left
[04:51] *** linkable6 left
[04:51] *** committable6 left
[04:51] *** bloatable6 left
[04:51] *** reportable6 left
[04:51] *** bisectable6 left
[04:51] *** unicodable6 left
[04:51] *** reportable6 joined
[04:52] *** unicodable6 joined
[04:52] *** benchable6 joined
[04:52] *** evalable6 joined
[04:52] *** sourceable6 joined
[04:52] *** bisectable6 joined
[04:52] *** statisfiable6 joined
[04:53] *** linkable6 joined
[04:53] *** bloatable6 joined
[04:53] *** squashable6 joined
[04:54] *** committable6 joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:29] *** sena_kun joined
[07:49] *** sena_kun left
[08:59] <Geth> ¦ roast: 24f41fd423 | (Elizabeth Mattijsen)++ | 2 files

[08:59] <Geth> ¦ roast: Move .subst test to .subst testing file

[08:59] <Geth> ¦ roast: 

[08:59] <Geth> ¦ roast: Instead of being out of place in a .substr testing file

[08:59] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/24f41fd423

[08:59] <lizmat> 825!  :-)

[10:05] <Geth> ¦ rakudo/main: 8039722595 | (Elizabeth Mattijsen)++ | 4 files

[10:05] <Geth> ¦ rakudo/main: RakuAST: issue a worry over leading declarator doc

[10:05] <Geth> ¦ rakudo/main: 

[10:05] <Geth> ¦ rakudo/main: If at the end of compilation no declarand could be found for the

[10:05] <Geth> ¦ rakudo/main: leading declarator doc that was collected.

[10:05] <Geth> ¦ rakudo/main: 

[10:05] <Geth> ¦ rakudo/main: Also turn the X::Syntax::Doc::DeclaratorTrailing::MissingDeclarand

[10:05] <Geth> ¦ rakudo/main: class into a more general X::Syntax::Doc::Declarator::MissingDeclarand

[10:05] <Geth> ¦ rakudo/main: class, defaulting to "trailing".

[10:05] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/8039722595

[10:36] *** camelia left
[10:36] *** nine left
[10:38] *** nine joined
[10:40] *** camelia joined
[10:46] *** camelia left
[10:46] *** nine left
[10:46] *** nine joined
[10:56] *** camelia joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:15] *** kurahaupo joined
[12:17] *** kurahaupo left
[12:17] *** kurahaupo joined
[13:31] *** sivoais left
[13:42] *** sivoais joined
[13:49] *** guifa joined
[14:09] <lizmat> nine: is the $!context of compunit always correct?

[14:10] <lizmat> I'm trying to fix the CHECK phasers, and two new test fails could be explained by either the resolver or the context not being correct

[14:29] <lizmat> nine: sanity check: is QAST produced during CHECK time, or after that?

[14:47] <lizmat> nine: seeing anything explicitely wrong with this?  https://gist.github.com/lizmat/9ca500602105cb84cbe327ab5b89d096

[14:50] <lizmat> the current implementation really treats CHECK phasers as INIT phasers, so they get pre-compiled and run every time

[14:51] <lizmat> instead of just after compile time

[14:54] <nine> QAST comes after CHECK

[14:57] <nine> I would expect CHECK phasers to be run by a node's IMPL-CHECK

[14:57] <nine> or by extension PERFORM-CHECK

[14:57] <lizmat> hmmmm

[14:58] <lizmat> interesting.... ok, lemme try taht

[14:59] <nine> Since CHECK phasers can only be on blocks or comp units, those ought to do CheckTime and have a PERFORM-CHECK that runs those phasers

[14:59] <lizmat> which sorta implies they don't need to be collected in the compunit either

[15:00] <nine> No, only INIT needs that as it's part of the runtime

[15:01] <nine> BEGIN is as early during compilation as possible, CHECK as late during compilation as possible and INIT is as early in runtime as possible with END being as late in runtime as possible.

[15:02] <nine> Ha! That's even what the docs say :)

[15:03] <lizmat> it all makes sense now  :-)

[15:04] <lizmat> testing now

[15:12] <Geth> ¦ rakudo/main: a3f0f36584 | (Elizabeth Mattijsen)++ | 2 files

[15:12] <Geth> ¦ rakudo/main: RakuAST: make CHECK phasers really run at CHECK time

[15:12] <Geth> ¦ rakudo/main: 

[15:12] <Geth> ¦ rakudo/main: Rather than that they basically act as INIT phasers

[15:12] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a3f0f36584

[15:12] <lizmat> sadly, no additional test files

[15:13] <lizmat> which implies there are definitely no precomp tests for CHECK phasers

[15:22] *** sena_kun joined
[15:28] <lizmat> nine: I just found out that in RakuAST::Compunit.check, $!mainline is always a block with an empty statementlinst

[15:28] <lizmat> that doesn't seem right ?

[15:34] <lizmat> aahh..there's also a statementlist attribute... what's their relation?

[15:34] <lizmat> would have expected the statement list to be living inside the mainline?

[15:42] <lizmat> m: CHECK { say $*CU.statement-list }

[15:42] <camelia> rakudo-moar a3f0f3658: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤An exception X::Dynamic::NotFound occurred while evaluating a CHECK: Dynamic variable $*CU not found␤at <tmp>:1␤Exception details:␤  Dynamic variable $*CU not found␤    in block  at <tmp> line 1…»

[15:43] <lizmat> that's weird?  works locally on that commit ?

[15:44] <lizmat> aaah... duh

[15:45] <lizmat> nine: do we agree that CHECK phasers should not live in the statementlist ?

[15:45] <lizmat> aka: CHECK { say $*CU.statement-list }

[15:45] <lizmat> should show an empty statement list\

[15:47] <nine> As with all oddities, compunit's $!mainline weirdness is due to BEGIN time stuff

[15:47] <nine> See commit 676aa173fbd47a971dc56068e65d871995c952f6

[15:48] <nine> m: say CHECK { 1 }

[15:48] <camelia> rakudo-moar a3f0f3658: OUTPUT: «1␤»

[15:48] <nine> AT least their result has to be available

[15:49] <lizmat> I get that, but shouldn't $!statement-list be the statement list of $!mainline ?

[15:50] <lizmat> yeah, that's all working already

[15:50] <nine> If it helps, I guess yes.

[16:33] <lizmat> hmmm... that breaks imports

[16:33] <lizmat> guess that will need further investigation

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:25] <Geth> ¦ nqp/main: db7d603cd7 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[18:25] <Geth> ¦ nqp/main: Bump MoarVM to get the latest libuv version

[18:25] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/db7d603cd7

[18:41] <Geth> ¦ rakudo/main: fac61c28ed | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[18:41] <Geth> ¦ rakudo/main: Bump NQP to get latest libuv version

[18:41] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fac61c28ed

[22:17] *** kurahaupo left
[22:17] *** kurahaupo_ joined
[22:29] *** sena_kun left
[23:00] <releasable6> Next release in ≈5 days and ≈19 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:42] *** evalable6 left
[23:42] *** releasable6 left
[23:42] *** linkable6 left
[23:43] *** linkable6 joined
[23:43] *** evalable6 joined
[23:43] *** releasable6 joined
