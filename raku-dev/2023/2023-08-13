[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[01:03] *** committable6 left
[01:03] *** bloatable6 left
[01:03] *** bisectable6 left
[01:03] *** tellable6 left
[01:03] *** releasable6 left
[01:03] *** benchable6 left
[01:03] *** quotable6 left
[01:03] *** evalable6 left
[01:03] *** statisfiable6 left
[01:03] *** reportable6 left
[01:03] *** shareable6 left
[01:03] *** nativecallable6 left
[01:03] *** sourceable6 left
[01:03] *** linkable6 left
[01:03] *** coverable6 left
[01:03] *** unicodable6 left
[01:03] *** squashable6 left
[01:03] *** greppable6 left
[01:03] *** notable6 left
[01:03] *** bisectable6 joined
[01:03] *** evalable6 joined
[01:03] *** statisfiable6 joined
[01:03] *** squashable6 joined
[01:03] *** notable6 joined
[01:04] *** nativecallable6 joined
[01:04] *** tellable6 joined
[01:04] *** quotable6 joined
[01:04] *** shareable6 joined
[01:04] *** benchable6 joined
[01:05] *** releasable6 joined
[01:05] *** coverable6 joined
[01:05] *** unicodable6 joined
[01:05] *** sourceable6 joined
[01:05] *** linkable6 joined
[01:05] *** committable6 joined
[01:05] *** bloatable6 joined
[01:05] *** reportable6 joined
[01:06] *** greppable6 joined
[01:19] <[Coke]> just tried a fresh config of rakudo, getting ===SORRY!=== No moar executable

[01:20] <[Coke]> ... helps if i understand the error. nevermind

[01:29] <Geth> ¦ rakudo/linenoise: c92a1526d7 | (Will Coleda)++ | src/core.c/REPL.pm6

[01:29] <Geth> ¦ rakudo/linenoise: Change REPL recommendation order

[01:29] <Geth> ¦ rakudo/linenoise: 

[01:29] <Geth> ¦ rakudo/linenoise: Part of #5311

[01:29] <Geth> ¦ rakudo/linenoise: review: https://github.com/rakudo/rakudo/commit/c92a1526d7

[01:30] <Geth> ¦ rakudo: coke++ created pull request #5339: Change REPL recommendation order

[01:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5339

[01:45] <[Coke]> ^^ doesn't work, oops

[04:36] *** evalable6 left
[04:36] *** linkable6 left
[04:37] *** evalable6 joined
[04:39] *** linkable6 joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:02] *** codesections left
[07:40] <[Tux]> Rakudo v2023.06-211-gc1f7e4d48 (v6.d) on MoarVM 2023.06-4-g75fe055c2

[07:40] <[Tux]> csv-test-xs-20      0.448 -  0.478

[07:40] <[Tux]> test-t --race       0.810 -  0.990

[07:40] <[Tux]> csv-ip5xs           0.772 -  1.066

[07:40] <[Tux]> test-t              1.376 -  1.587

[07:40] <[Tux]> csv-parser          3.698 -  3.785

[07:40] <[Tux]> csv-ip5xs-20        5.275 -  5.751

[07:40] <[Tux]> test-t-20 --race    6.884 -  7.169

[07:40] <[Tux]> test                6.974 -  7.394

[07:40] <[Tux]> test-t-20          19.972 - 20.483

[07:43] *** sena_kun joined
[08:27] <Geth> ¦ rakudo/main: 941143d4f9 | (Elizabeth Mattijsen)++ | src/core.c/Rational.pm6

[08:27] <Geth> ¦ rakudo/main: RakuAST: workaround *weird* issue with -Inf

[08:27] <Geth> ¦ rakudo/main: 

[08:27] <Geth> ¦ rakudo/main: For some reason, under RakuAST, Rat.new(-1,0).Num would return Inf

[08:27] <Geth> ¦ rakudo/main: rather than -Inf.  I've checked all of the input values to the

[08:27] <Geth> ¦ rakudo/main: nqp::div_In call, and they're correct.  Somehow nqp::div_In does

[08:27] <Geth> ¦ rakudo/main: the wrong thing in RakuAST, which I find really weird as what HLL

[08:27] <Geth> ¦ rakudo/main: grammar is being used, should **NOT** affect how nqp ops work.

[08:27] <Geth> ¦ rakudo/main: 

[08:27] <Geth> ¦ rakudo/main: I've now spent way too much time on this, so am going for this

[08:27] <Geth> ¦ rakudo/main: workaround.  Hope someone else will find the reason why it is doing

[08:27] <Geth> ¦ rakudo/main: this some day.

[08:27] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/941143d4f9

[08:27] <lizmat> 920  (+2)

[08:40] <Geth> ¦ roast: b9b9d12296 | (Elizabeth Mattijsen)++ | S32-list/map.t

[08:40] <Geth> ¦ roast: Test more precisely what is wanted to be tested

[08:40] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/b9b9d12296

[08:40] <lizmat> 921 (+1)

[09:34] <Geth> ¦ roast: f1914867ac | (Elizabeth Mattijsen)++ | S32-io/io-special.t

[09:34] <Geth> ¦ roast: Simplify loop spec

[09:34] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/f1914867ac

[09:35] <lizmat> 922 (+1)

[11:07] <Geth> ¦ roast: 4e7ef6c3d5 | (Elizabeth Mattijsen)++ | S32-io/io-path.t

[11:07] <Geth> ¦ roast: Make building of tests a bit clearer

[11:07] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/4e7ef6c3d5

[11:10] <Geth> ¦ rakudo/main: 011d2ce74e | (Elizabeth Mattijsen)++ | src/Raku/ast/name.rakumod

[11:10] <Geth> ¦ rakudo/main: RakuAST: fix ::Name.is-empty and add ::Name::Part::Empty.name

[11:10] <Geth> ¦ rakudo/main: 

[11:10] <Geth> ¦ rakudo/main: The latter for convenience really, as handling of ::Name::Part::Empty

[11:10] <Geth> ¦ rakudo/main: and an empty string of one of the parts in ::Name should be the same.

[11:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/011d2ce74e

[11:10] <lizmat> 930 (+8)

[11:52] <discord-raku-bot> <nemokosch> lizmat: perhaps perl6 -v could be removed from the Rakudo issue template, it has been roughly 4 years

[11:52] <discord-raku-bot> <nemokosch> or replaced to rakudo -v

[11:54] <lizmat> good point, looking at where to change that

[11:59] <Geth> ¦ rakudo/main: 6d43651e2a | (Elizabeth Mattijsen)++ | .github/ISSUE_TEMPLATE.md

[11:59] <Geth> ¦ rakudo/main: Update issue template, nemokosch++

[11:59] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6d43651e2a

[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[13:56] <Geth> ¦ rakudo/main: 519ec6e81c | (Elizabeth Mattijsen)++ | src/Raku/ast/code.rakumod

[13:56] <Geth> ¦ rakudo/main: RakuAST: don't install methods with "our" scope

[13:56] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/519ec6e81c

[13:56] <lizmat> 931 (+1)

[14:00] *** evalable6 left
[14:00] *** linkable6 left
[14:01] *** linkable6 joined
[14:02] *** evalable6 joined
[14:26] <discord-raku-bot> <vendethiel> That’s a funny looking and :P

[14:57] *** vrurg_ joined
[14:57] *** vrurg left
[15:23] *** Xliff joined
[15:23] <Xliff> Raku-GLib suite timing statistics for Raku 2023.06.213.g.7.bc.98.ec.415

[15:23] <Xliff> Using the following processor: AMD Ryzen 9 5950X 16-Core Processor

[15:23] <Xliff> Total number of projects: 34 (506509 loc)

[15:23] <Xliff> Total non-parallel compile times: 11482.250 (337.713 avg)

[15:23] <Xliff> Total parallel compile times: 2405.092 (70.738 avg) 4.774x speedup

[16:32] *** linkable6 left
[16:32] *** evalable6 left
[16:34] *** linkable6 joined
[16:35] *** evalable6 joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:15] <lizmat> m: my %h; dd %h.of; my %o{Int}; dd %o.of   # this feels inconsistent

[18:15] <camelia> rakudo-moar 519ec6e81: OUTPUT: «Mu␤Any␤»

[18:15] <lizmat> m: my %h = 12 => Mu; dd %h

[18:15] <camelia> rakudo-moar 519ec6e81: OUTPUT: «Hash %h = {"12" => Mu}␤»

[18:15] <lizmat> m: my %h{Int} = 12 => Mu; dd %h

[18:15] <camelia> rakudo-moar 519ec6e81: OUTPUT: «Type check failed for an element of %h; expected Any but got Mu (Mu)␤  in block <unit> at <tmp> line 1␤␤»

[18:19] <japhb> That is odd, yes.

[18:29] <lizmat> m: my %h; %h{"a"|"b"|"c"} = 42; dd %h

[18:29] <camelia> rakudo-moar 519ec6e81: OUTPUT: «Hash %h = {:a(42), :b(42), :c(42)}␤»

[18:30] <lizmat> m: my %h{Str}; %h{"a"|"b"|"c"} = 42; dd %h

[18:30] <camelia> rakudo-moar 519ec6e81: OUTPUT: «Hash[Any,Str %h = (my Any %{Str} = :a(42), :b(42), :c(42))␤»

[18:31] <lizmat> hmmm...

[18:31] * lizmat is going to mull over this

[21:04] *** Altai-man joined
[21:05] *** sena_kun left
[21:35] *** Altai-man left
[21:37] *** sena_kun joined
[22:28] *** sena_kun left
[22:39] *** Xliff left
