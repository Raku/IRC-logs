[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:42] <Geth> ¦ rakudo/main: 52bf2b4b3f | (Nick Logan)++ (committed using GitHub Web editor) | src/Raku/ast/compunit.rakumod

[00:42] <Geth> ¦ rakudo/main: Remove leftover debugging code

[00:42] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/52bf2b4b3f

[01:30] *** nine left
[01:30] *** nine joined
[03:57] <Geth> ¦ Lingua-Conjunction: packy++ created pull request #2: Fix bug in :str parameter

[03:57] <Geth> ¦ Lingua-Conjunction: review: https://github.com/raku-community-modules/Lingua-Conjunction/pull/2

[04:34] *** guifa left
[04:34] *** guifa_ joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:33] *** sena_kun joined
[08:41] *** NemokoschKiwi joined
[08:48] *** NemokoschKiwi left
[09:00] <Geth> ¦ Lingua-Conjunction/main: 09e66a609b | (Packy Anderson)++ (committed using GitHub Web editor) | lib/Lingua/Conjunction.rakumod

[09:00] <Geth> ¦ Lingua-Conjunction/main: Fix bug in :str parameter

[09:00] <Geth> ¦ Lingua-Conjunction/main: 

[09:00] <Geth> ¦ Lingua-Conjunction/main: Currently, the documentation says :str "can use special sequence [|] (e.g. octop[us|i]) where string to the left of the | will be used when the list contains just one item and the string to the right will be used otherwise," but it uses the left of the | when the list contains one OR TWO items.

[09:00] <Geth> ¦ Lingua-Conjunction/main: 

[09:00] <Geth> ¦ Lingua-Conjunction/main: This change corrects the behavior to conform with the documentation.

[09:00] <Geth> ¦ Lingua-Conjunction/main: review: https://github.com/raku-community-modules/Lingua-Conjunction/commit/09e66a609b

[09:00] <Geth> ¦ Lingua-Conjunction/main: 6c860063c9 | (Packy Anderson)++ (committed using GitHub Web editor) | lib/Lingua/Conjunction.rakumod

[09:00] <Geth> ¦ Lingua-Conjunction/main: Merge pull request #1 from packy/packy-patch-1

[09:00] <Geth> ¦ Lingua-Conjunction/main: 

[09:00] <Geth> ¦ Lingua-Conjunction/main: Fix bug in :str parameter

[09:00] <Geth> ¦ Lingua-Conjunction/main: review: https://github.com/raku-community-modules/Lingua-Conjunction/commit/6c860063c9

[09:00] <Geth> ¦ Lingua-Conjunction/main: 372d37c38b | (Márton Polgár)++ (committed using GitHub Web editor) | lib/Lingua/Conjunction.rakumod

[09:00] <Geth> ¦ Lingua-Conjunction/main: Merge pull request #2 from packy/main

[09:00] <Geth> ¦ Lingua-Conjunction/main: 

[09:00] <Geth> ¦ Lingua-Conjunction/main: Fix bug in :str parameter

[09:00] <Geth> ¦ Lingua-Conjunction/main: review: https://github.com/raku-community-modules/Lingua-Conjunction/commit/372d37c38b

[09:03] <Geth> ¦ Lingua-Conjunction/main: ff5971b50c | (Polgár Márton)++ | 4 files

[09:03] <Geth> ¦ Lingua-Conjunction/main: 1.1.1

[09:03] <Geth> ¦ Lingua-Conjunction/main: review: https://github.com/raku-community-modules/Lingua-Conjunction/commit/ff5971b50c

[09:09] <lizmat> m: my int $a = 0; for ^10_000_000 { $a++ }; say now - INIT now;

[09:09] <camelia> rakudo-moar 52bf2b4b3: OUTPUT: «0.08178685␤»

[09:10] <lizmat> m: my int $a = 0; for ^10_000_000 { $a++ }; say now - INIT now;

[09:10] <camelia> rakudo-moar 52bf2b4b3: OUTPUT: «0.073605638␤»

[09:10] <lizmat> m: my int $a = 0; for ^10_000_000 { $a++ }; say now - INIT now;

[09:10] <camelia> rakudo-moar 52bf2b4b3: OUTPUT: «0.075644316␤»

[09:10] <lizmat> m: my int $a = 0; for ^10_000_000 -> int $_ { $a++ }; say now - INIT now;

[09:10] <camelia> rakudo-moar 52bf2b4b3: OUTPUT: «0.075035974␤»

[09:10] <lizmat> m: my int $a = 0; for ^10_000_000 -> int $_ { $a++ }; say now - INIT now;

[09:10] <camelia> rakudo-moar 52bf2b4b3: OUTPUT: «0.074155608␤»

[09:10] <lizmat> hmmm

[09:23] <lizmat> there's a pronounced difference on an M1

[09:28] <lizmat> I guess JIT hides the difference on Intel CPUs]

[11:23] *** explorer joined
[11:39] *** MasterDuke joined
[11:43] <MasterDuke> has anyone else noticed that the output of `make m-test m-spectest` is now interleaved a bit? it used to complete the rakudo tests and then start the spectest, but now it'll start the spectest a little before the rakudo tests finish

[11:47] <lizmat> I never run them like that, actually: I run "make test" usually before running "make spectest" as the former finishes faster, and if it find problems, then it usually doesn't make sense to run "make spectest" anyway

[11:47] <lizmat> *finds

[11:53] <MasterDuke> i'm 99.9% pretty sure it'll also stop if the `m-test` fails my way also, i think they're almost equivalent

[12:00] *** reportable6 left
[12:00] <lizmat> TIL  :-)

[12:03] *** reportable6 joined
[12:18] *** jgaz left
[13:39] *** linkable6 left
[13:39] *** evalable6 left
[13:40] *** linkable6 joined
[13:40] *** evalable6 joined
[13:44] <Geth> ¦ rakudo/main: 512f5cc467 | (Elizabeth Mattijsen)++ | src/Raku/ast/compunit.rakumod

[13:44] <Geth> ¦ rakudo/main: RakuAST: better document the --doc logic

[13:44] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/512f5cc467

[13:46] <vrurg_> MasterDuke: make -j1 would be your solution, I think.

[13:46] *** vrurg_ is now known as vrurg

[13:50] <Geth> ¦ rakudo/lizmat-use-rakumod: a62d4012e7 | (Elizabeth Mattijsen)++ | 16 files

[13:50] <Geth> ¦ rakudo/lizmat-use-rakumod: Fix mention of .pm6 in many scripts

[13:50] <Geth> ¦ rakudo/lizmat-use-rakumod: review: https://github.com/rakudo/rakudo/commit/a62d4012e7

[14:40] *** jgaz joined
[15:46] *** benchable6 left
[15:46] *** squashable6 left
[15:46] *** coverable6 left
[15:46] *** tellable6 left
[15:46] *** releasable6 left
[15:46] *** bisectable6 left
[15:46] *** shareable6 left
[15:46] *** linkable6 left
[15:46] *** reportable6 left
[15:46] *** evalable6 left
[15:46] *** bloatable6 left
[15:46] *** committable6 left
[15:46] *** notable6 left
[15:46] *** greppable6 left
[15:46] *** sourceable6 left
[15:46] *** statisfiable6 left
[15:46] *** nativecallable6 left
[15:46] *** quotable6 left
[15:46] *** unicodable6 left
[15:47] *** greppable6 joined
[15:47] *** nativecallable6 joined
[15:47] *** statisfiable6 joined
[15:47] *** unicodable6 joined
[15:48] *** coverable6 joined
[15:48] *** evalable6 joined
[15:48] *** committable6 joined
[15:48] *** sourceable6 joined
[15:48] *** bloatable6 joined
[15:48] *** releasable6 joined
[15:48] *** linkable6 joined
[15:48] *** bisectable6 joined
[15:49] *** tellable6 joined
[15:49] *** quotable6 joined
[15:49] *** shareable6 joined
[15:49] *** reportable6 joined
[15:49] *** notable6 joined
[15:49] *** squashable6 joined
[15:49] *** benchable6 joined
[17:40] *** evalable6 left
[17:40] *** linkable6 left
[17:43] *** linkable6 joined
[17:43] *** evalable6 joined
[18:00] *** reportable6 left
[18:02] *** squashable6 left
[18:03] *** reportable6 joined
[18:05] *** squashable6 joined
[18:11] <Geth> ¦ rakudo/lizmat-use-rakumod: c3bae076b6 | (Elizabeth Mattijsen)++ | CREDITS

[18:11] <Geth> ¦ rakudo/lizmat-use-rakumod: Restore Ingy's D:

[18:11] <Geth> ¦ rakudo/lizmat-use-rakumod: review: https://github.com/rakudo/rakudo/commit/c3bae076b6

[18:11] <lizmat> aah...  Github webhooks working again :-)

[18:17] <[Coke]> We used to have assign/unassign ticket notices generating alerts, yes?

[18:17] <[Coke]> (make not on raku/doc)

[18:17] <[Coke]> *maybe*

[18:19] <lizmat> yeah, they are on 

[18:19] <lizmat> it's just that Github is about 30 minutes late pushing them to Geth at the moment

[18:22] <[Coke]> ahhh

[18:23] <[Coke]> then I apologize for the flood to #raku-doc that's coming

[18:54] <MasterDuke> vrurg: yeah, but i never used to have to use `-j1`

[18:59] <[Coke]> do you have TEST_JOBS set?

[19:00] <MasterDuke> yeah, to 12. but my env has been mostly unchanged for years

[19:08] <ugexe> MasterDuke: i wonder if its https://github.com/rakudo/rakudo/commit/1dc496add7f7f77b120f7037bea7c3d2c37e49f0

[19:09] <ugexe> i dont see how it would be that commit, it just looks like the most likely out of any recent commits to that Makefile.in

[19:19] <MasterDuke> nope, just tried with that change reverted and same behavior

[19:30] <ugexe> you regenerated the Makefile yeah?

[19:30] <ugexe> cause i probably wouldn't have :P

[19:34] <MasterDuke> i assume `perl Configure.pl --prefix=/home/dan/Source/perl6/install/ --backend=moar` will, because that's what i always run first

[19:35] <MasterDuke> oh wow. i just reverted the revert (so i'm on the HEAD of my use_new_stat_syscall_in_DirRecurse branch), and now i got something i've never seen before during `+++ Installing files`

[19:36] <MasterDuke> https://gist.github.com/MasterDuke17/896541312e01182dcc5bfa43deda35b1

[19:43] <MasterDuke> i didn't do a make clean, or clear out my precomp dirs, but i do always run Configure.pl

[19:43] <vrurg> MasterDuke: you started having that behavior when I resolved all dependencies and allowed parallelism in Rakudo Makefile. I'm pretty sure this is the moment. But up to my memory, make doesn't care where it got its targets from, it would behave the same. 

[19:49] <MasterDuke> when was that? because i'm pretty sure this started in the past couple months

[19:55] <vrurg> Not sure. > half a year ago, perhaps.

[19:56] <vrurg> Found. The last December is when I commended out .NOTPARALLEL

[20:01] <vrurg> MasterDuke: BTW, you can uncomment .NOTPARALLEL in tools/tampltes/Makefile-common-rules.in and try again. Don't forget ./Configure.pl, of course! :)

[20:02] <vrurg> On my side (macOS, GNU Make v4.4.1) it seemingly executes both targets sequentially. 

[20:04] <MasterDuke> as is right now? or with that uncommented?

[20:06] <vrurg> As is, but I was wrong. The illusion of sequentiality was created by m-test finishing before m-spectest managed to finish preparing and start.

[20:06] <MasterDuke> ha

[20:07] <MasterDuke> guess you have a faster machine than i

[20:07] <vrurg> Likely so, M2 Ultra.

[20:09] <MasterDuke> yep, uncommenting that brings back the behavior i'm used to. e.g., test finishes then spectest starts

[20:10] <vrurg> Anyway, I don't see this behavior as a problem. There is a problem with make which doesn't allow forced-sequential targets and I do miss this on occasion. But otherwise this is not an issue.

[20:11] <MasterDuke> yeah, i think things actually work ok, it just was a change from what i was used to

[20:13] <vrurg> And we always have `make m-test & make m-spectest` is necessary. BTW, I tried -O and -Orecursive (guess, it's the same) but there is no fun in waiting until it collects all spectest output first.

[20:14] <vrurg> Ah, -Oline is no difference because `prove` is the line.

[20:14] <vrurg> OK...

[20:43] *** jgaz left
[20:56] *** jgaz joined
[21:56] *** nativecallable6 left
[21:56] *** reportable6 left
[21:56] *** committable6 left
[21:56] *** coverable6 left
[21:56] *** unicodable6 left
[21:56] *** bloatable6 left
[21:56] *** statisfiable6 left
[21:56] *** releasable6 left
[21:56] *** tellable6 left
[21:56] *** shareable6 left
[21:56] *** notable6 left
[21:56] *** bisectable6 left
[21:56] *** quotable6 left
[21:56] *** sourceable6 left
[21:56] *** greppable6 left
[21:57] *** greppable6 joined
[21:57] *** notable6 joined
[21:57] *** statisfiable6 joined
[21:57] *** shareable6 joined
[21:58] *** bloatable6 joined
[21:58] *** unicodable6 joined
[21:58] *** bisectable6 joined
[21:58] *** reportable6 joined
[21:58] *** releasable6 joined
[21:58] *** nativecallable6 joined
[21:58] *** coverable6 joined
[21:59] *** committable6 joined
[21:59] *** tellable6 joined
[22:00] *** sourceable6 joined
[22:00] *** quotable6 joined
[22:29] *** NemokoschKiwi joined
[22:54] *** sena_kun left
[22:57] *** NemokoschKiwi left
[23:57] *** bisectable6 left
[23:57] *** committable6 left
[23:57] *** notable6 left
[23:57] *** greppable6 left
[23:57] *** releasable6 left
[23:57] *** shareable6 left
[23:57] *** tellable6 left
[23:57] *** statisfiable6 left
[23:57] *** unicodable6 left
[23:57] *** sourceable6 left
[23:57] *** nativecallable6 left
[23:57] *** coverable6 left
[23:57] *** linkable6 left
[23:57] *** squashable6 left
[23:57] *** quotable6 left
[23:57] *** reportable6 left
[23:57] *** bloatable6 left
[23:58] *** bisectable6 joined
[23:58] *** unicodable6 joined
[23:58] *** nativecallable6 joined
[23:58] *** greppable6 joined
[23:58] *** squashable6 joined
[23:58] *** coverable6 joined
[23:59] *** shareable6 joined
[23:59] *** tellable6 joined
[23:59] *** sourceable6 joined
[23:59] *** statisfiable6 joined
