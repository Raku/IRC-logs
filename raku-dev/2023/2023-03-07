[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:35] *** kjp joined
[01:37] *** frost joined
[01:40] *** frost left
[01:51] *** frost joined
[02:00] *** frost left
[04:08] *** evalable6 left
[04:08] *** linkable6 left
[04:08] *** notable6 left
[04:08] *** quotable6 left
[04:08] *** statisfiable6 left
[04:08] *** reportable6 left
[04:08] *** nativecallable6 left
[04:08] *** benchable6 left
[04:08] *** squashable6 left
[04:08] *** coverable6 left
[04:08] *** shareable6 left
[04:08] *** bisectable6 left
[04:08] *** sourceable6 left
[04:08] *** committable6 left
[04:08] *** bloatable6 left
[04:08] *** releasable6 left
[04:08] *** greppable6 left
[04:08] *** unicodable6 left
[04:08] *** tellable6 left
[04:08] *** benchable6 joined
[04:08] *** greppable6 joined
[04:08] *** squashable6 joined
[04:08] *** quotable6 joined
[04:08] *** linkable6 joined
[04:08] *** committable6 joined
[04:09] *** shareable6 joined
[04:09] *** coverable6 joined
[04:09] *** notable6 joined
[04:09] *** unicodable6 joined
[04:09] *** tellable6 joined
[04:09] *** bloatable6 joined
[04:09] *** sourceable6 joined
[04:10] *** releasable6 joined
[04:10] *** bisectable6 joined
[04:10] *** reportable6 joined
[04:10] *** nativecallable6 joined
[04:11] *** evalable6 joined
[04:11] *** statisfiable6 joined
[05:11] *** statisfiable6 left
[05:11] *** tellable6 left
[05:11] *** notable6 left
[05:11] *** evalable6 left
[05:11] *** linkable6 left
[05:11] *** bloatable6 left
[05:11] *** squashable6 left
[05:11] *** unicodable6 left
[05:11] *** reportable6 left
[05:11] *** bisectable6 left
[05:11] *** releasable6 left
[05:11] *** quotable6 left
[05:11] *** benchable6 left
[05:11] *** notable6 joined
[05:12] *** tellable6 joined
[05:12] *** linkable6 joined
[05:12] *** reportable6 joined
[05:12] *** bloatable6 joined
[05:12] *** statisfiable6 joined
[05:13] *** releasable6 joined
[05:13] *** bisectable6 joined
[05:13] *** benchable6 joined
[05:14] *** quotable6 joined
[05:14] *** evalable6 joined
[05:14] *** unicodable6 joined
[05:14] *** squashable6 joined
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[09:24] <Geth> ¬¶ Template6/main: 05d981016d | (Polg√°r M√°rton)++ | 5 files

[09:24] <Geth> ¬¶ Template6/main: 0.11.2

[09:24] <Geth> ¬¶ Template6/main: review: https://github.com/raku-community-modules/Template6/commit/05d981016d

[10:35] *** unicodable6 left
[10:35] *** evalable6 left
[10:35] *** committable6 left
[10:35] *** linkable6 left
[10:35] *** sourceable6 left
[10:35] *** shareable6 left
[10:35] *** coverable6 left
[10:35] *** statisfiable6 left
[10:35] *** quotable6 left
[10:35] *** tellable6 left
[10:35] *** squashable6 left
[10:35] *** bisectable6 left
[10:35] *** benchable6 left
[10:35] *** releasable6 left
[10:35] *** notable6 left
[10:36] *** unicodable6 joined
[10:36] *** tellable6 joined
[10:36] *** releasable6 joined
[10:36] *** notable6 joined
[10:36] *** quotable6 joined
[10:36] *** shareable6 joined
[10:37] *** sourceable6 joined
[10:37] *** bisectable6 joined
[10:37] *** linkable6 joined
[10:37] *** squashable6 joined
[10:37] *** committable6 joined
[10:37] *** benchable6 joined
[10:37] *** coverable6 joined
[10:38] *** evalable6 joined
[10:38] *** statisfiable6 joined
[11:20] *** thundergnat joined
[11:20] *** frost joined
[11:21] *** frost left
[11:25] *** thundergnat left
[11:26] *** frost joined
[11:28] *** frost left
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:06] <lizmat> notable6: weekly

[12:06] <notable6> lizmat, No notes for ‚Äúweekly‚Äù

[12:17] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/03/07/2023-10-toronto/

[14:25] <vrurg> lizmat++!

[14:37] *** evalable6 left
[14:37] *** linkable6 left
[14:38] *** linkable6 joined
[14:39] *** evalable6 joined
[17:31] *** vrurg left
[17:32] *** vrurg joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:22] <nine> What on earth does this mean?::?CLASS:_

[18:23] <nine> What on earth does this mean? ::?CLASS:_

[18:24] <nine> https://github.com/rakudo/rakudo/blob/main/t/02-rakudo/03-cmp-ok.t#L104

[18:24] <discord-raku-bot> <Nemokosch> that's a type smiley, no?

[18:25] <discord-raku-bot> <Nemokosch> :_, as opposed to üòÑ and :U and maybe there is also :T

[18:25] <sjn> ETOOMUCHMAGIC

[18:26] <discord-raku-bot> <Nemokosch> maybe that's the one that says "all are fine" explicitly?

[18:27] <sjn> Code like that should be banned. https://www.laws-of-software.com//laws/kernighan/ applies

[18:28] <sjn> (Kernighan's Law)

[18:29] <discord-raku-bot> <Nemokosch> some Kernighan wisdom aged notoriously badly

[18:30] <discord-raku-bot> <Nemokosch> like mocking Pascal for array size in the type

[18:30] <lizmat> nine: same as Int:_   aka Int

[18:31] <nine> Why do we even have that if it's just the same?

[19:07] <japhb> nine: (wild guesses) Override of concreteness rule in more constrained base type?  Being explicit (and syntax-parallel) when mixing various type smilies heavily?

[19:08] <japhb> (To be clear, that first one was "reasons it might have been in the spec in the first place" as opposed to "way I expect it to work now")

[19:41] <gfldex> Would it be possible to set $_ inside blocks inside a HEREDOC to that very HEREDOC?

[20:11] *** Nemokosch joined
[20:11] <Nemokosch> bisectable6: constant Str @test = <alpha beta gamma>;

[20:11] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[20:12] <tellable6> 2023-02-27T14:23:36Z #raku <Voldenet> Nemokosch: basically, firefox has this theme switching feature (also other browsers) that didn't even require js

[20:12] <tellable6> 2023-02-28T02:05:51Z #raku <guifa_> Nemokosch: I feel like siberia-man may have confused Raku with Ruby 

[20:12] <tellable6> 2023-02-28T17:53:43Z #raku <tonyo> nemokosch: ah, yes, it wasn't as explicit as the pm6 -> rakumod extension change

[20:12] <tellable6> 2023-03-02T17:48:24Z #raku <tonyo> nemokosch: are you 2colours?

[20:12] <tellable6> 2023-03-05T13:32:30Z #raku <Voldenet> Nemokosch: you could consider using ppm/pbm/pgm if you just needed bitmap

[20:12] <tellable6> 2023-03-06T16:31:57Z #raku <dakkar> Nemokosch: I believe so

[20:12] <bisectable6> Nemokosch, ¬¶6c (67 commits): ¬´4===SORRY!4=== Error while compiling /tmp/p2Fm5cTQmq‚ê§Missing initializer on constant declaration‚ê§at /tmp/p2Fm5cTQmq:1‚ê§------> 3constant Str8‚èè4 @test = <alpha beta gamma>;‚ê§ ¬´exit code = 1¬ª¬ª

[20:12] <bisectable6> Nemokosch, Nothing to bisect!

[20:12] <discord-raku-bot> <Nemokosch> Is there no issue for this message?

[20:13] <Voldenet> hmm

[20:13] <Voldenet> m: constant @test = <alpha beta gamma>;

[20:13] <camelia> rakudo-moar 4fa44f8d3: ( no output )

[20:14] <Nemokosch> oh hm https://github.com/rakudo/rakudo/issues/1503

[20:14] <Nemokosch> still, to be honest. This error message is terrible

[20:15] <Voldenet> it is less than useful

[20:16] <Voldenet> m: my Int constant $foo .= new: 42; dd $foo

[20:16] <camelia> rakudo-moar 4fa44f8d3: OUTPUT: ¬´42‚ê§¬ª

[20:17] <Voldenet> m: my Int constant @foo .= new: (42); dd $foo

[20:17] <camelia> rakudo-moar 4fa44f8d3: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Parameterization of constants is forbidden‚ê§at <tmp>:1‚ê§------> my Int constant @foo .= new: (42)‚èè; dd $foo‚ê§¬ª

[20:24] <[Coke]> (42) is better witten as (42,), no?

[20:25] <discord-raku-bot> <Nemokosch> (42) is not a List at all

[20:26] <discord-raku-bot> <Nemokosch> so it might even be an understatement that "it's better written as", more like one will do "the right thing" while the other won't

[20:27] <[Coke]> Sure, was trying to be polite.

[20:28] <discord-raku-bot> <Nemokosch> of course but please make sure to get the point across. The compiler won't be polite, it will just misinterpret it big time.

[20:28] <discord-raku-bot> <Nemokosch> (assuming that the right interpretation is the List version)

[20:29] *** [Coke] left
[20:34] *** Nemokosch left
[20:34] *** Nemokosch joined
[20:36] <Voldenet> doesn't make a difference in the context

[20:38] <Nemokosch> what doesn't?

[20:38] *** Nemokosch left
[20:38] <Voldenet> (42) vs (42,)

[20:38] <Voldenet> m: my Int @foo .= new: (42); dd @foo

[20:38] <camelia> rakudo-moar 4fa44f8d3: OUTPUT: ¬´Array[Int @foo = Array[Int].new(42)‚ê§¬ª

[20:38] <Voldenet> m: my Int @foo .= new: (42,); dd @foo

[20:38] <camelia> rakudo-moar 4fa44f8d3: OUTPUT: ¬´Array[Int @foo = Array[Int].new(42)‚ê§¬ª

[20:42] <discord-raku-bot> <Nemokosch> well, what is the content?

[20:43] <discord-raku-bot> <Nemokosch> context*

[20:43] <Voldenet> that line: > m: my Int constant @foo .= new: (42); dd $foo

[20:44] <discord-raku-bot> <Nemokosch> oh

[20:44] <discord-raku-bot> <Nemokosch> oof

[20:45] <Voldenet> perhaps it is a good habit to keep it as (42,) even when not necessary

[20:45] <discord-raku-bot> <Nemokosch> by the way, sadly the RakuAST regex building doesn't work with v2023.02

[20:49] *** NemokoschKiwi joined
[20:51] <NemokoschKiwi> [Coke]: anyway, sorry, I didn't notice that there was a context in the first place. I thought you just said it as a generic paradigm.

[20:51] <tellable6> NemokoschKiwi, I'll pass your message to [Coke]

[20:52] *** NemokoschKiwi left
[22:50] <lizmat> m: my Int constant $foo = 0e0

[22:50] <camelia> rakudo-moar 4fa44f8d3: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Type check failed in constant declaration of $foo; expected Int but got Num (0e0)‚ê§at <tmp>:1‚ê§------> my Int constant $foo = 0e0‚èè<EOL>‚ê§¬ª

[22:50] <lizmat> what's wrong with that error message?

[22:51] <lizmat> m: say Q|my Int constant $foo = "bar"|.AST(:run)   # looks like the RakuAST version needs some work still

[22:51] <camelia> rakudo-moar 4fa44f8d3: OUTPUT: ¬´bar‚ê§¬ª

[22:53] <discord-raku-bot> <Nemokosch> the problem is constant Int $foo, not my Int constant $foo

[22:54] <lizmat> gotcha

[22:55] <lizmat> still, I wonder whether that wouldn't need to be: "Int constant $foo = 42", as the scope prefix is optional

[22:55] <lizmat> m: my Int constant $foo = 42

[22:55] <camelia> rakudo-moar 4fa44f8d3: ( no output )

[22:56] <lizmat> m: our Int constant $foo = 42

[22:56] <camelia> rakudo-moar 4fa44f8d3: ( no output )

[22:59] <discord-raku-bot> <Nemokosch> well it's definitely a possibility to "sell differently" the constant keyword, not as something essentially like my

[23:39] *** linkable6 left
[23:39] *** evalable6 left
[23:39] *** evalable6 joined
[23:42] *** linkable6 joined
