[00:00] *** evalable6 joined
[00:00] *** reportable6 left
[00:01] *** linkable6 joined
[00:03] *** reportable6 joined
[01:00] <Geth> Â¦ Template6/main: e53f468f98 | (PolgÃ¡r MÃ¡rton)++ | 8 files

[01:00] <Geth> Â¦ Template6/main: 0.14.0

[01:00] <Geth> Â¦ Template6/main: review: https://github.com/raku-community-modules/Template6/commit/e53f468f98

[01:20] *** jgaz left
[01:25] *** jgaz joined
[02:25] *** bloatable6 left
[02:25] *** sourceable6 left
[02:25] *** greppable6 left
[02:25] *** shareable6 left
[02:25] *** coverable6 left
[02:25] *** quotable6 left
[02:25] *** linkable6 left
[02:25] *** notable6 left
[02:25] *** unicodable6 left
[02:25] *** benchable6 left
[02:25] *** committable6 left
[02:25] *** nativecallable6 left
[02:25] *** statisfiable6 left
[02:25] *** evalable6 left
[02:25] *** tellable6 left
[02:25] *** reportable6 left
[02:25] *** releasable6 left
[02:25] *** squashable6 left
[02:25] *** evalable6 joined
[02:26] *** releasable6 joined
[02:26] *** coverable6 joined
[02:26] *** shareable6 joined
[02:27] *** sourceable6 joined
[02:27] *** tellable6 joined
[02:27] *** notable6 joined
[02:27] *** committable6 joined
[02:27] *** statisfiable6 joined
[02:27] *** linkable6 joined
[02:27] *** unicodable6 joined
[02:27] *** bloatable6 joined
[02:28] *** benchable6 joined
[02:28] *** squashable6 joined
[02:28] *** quotable6 joined
[02:28] *** nativecallable6 joined
[02:28] *** reportable6 joined
[02:28] *** greppable6 joined
[03:28] *** notable6 left
[03:28] *** statisfiable6 left
[03:28] *** evalable6 left
[03:28] *** shareable6 left
[03:28] *** nativecallable6 left
[03:28] *** bloatable6 left
[03:28] *** linkable6 left
[03:28] *** unicodable6 left
[03:28] *** greppable6 left
[03:28] *** reportable6 left
[03:28] *** committable6 left
[03:28] *** coverable6 left
[03:28] *** tellable6 left
[03:28] *** squashable6 left
[03:28] *** quotable6 left
[03:28] *** benchable6 left
[03:28] *** releasable6 left
[03:28] *** sourceable6 left
[03:29] *** bloatable6 joined
[03:29] *** linkable6 joined
[03:29] *** coverable6 joined
[03:29] *** shareable6 joined
[03:30] *** tellable6 joined
[03:30] *** greppable6 joined
[03:30] *** committable6 joined
[03:30] *** notable6 joined
[03:30] *** evalable6 joined
[03:30] *** reportable6 joined
[03:30] *** benchable6 joined
[03:30] *** unicodable6 joined
[03:31] *** statisfiable6 joined
[03:31] *** squashable6 joined
[03:31] *** quotable6 joined
[03:31] *** nativecallable6 joined
[03:31] *** sourceable6 joined
[03:31] *** releasable6 joined
[05:25] *** discord-raku-bot left
[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[06:13] *** nebuchadnezzar joined
[07:51] *** sena_kun joined
[08:16] *** heartburn left
[08:39] *** heartburn joined
[08:48] <Geth> Â¦ rakudo/main: 205fb661b5 | (Elizabeth Mattijsen)++ | 2 files

[08:48] <Geth> Â¦ rakudo/main: RakuAST: some more actions/grammar streamlining

[08:48] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/205fb661b5

[09:56] *** evalable6 left
[09:56] *** linkable6 left
[09:59] *** linkable6 joined
[09:59] *** evalable6 joined
[10:31] <Geth> Â¦ rakudo/main: 11334377a4 | (Elizabeth Mattijsen)++ | 2 files

[10:31] <Geth> Â¦ rakudo/main: RakuAST: streamline language version setup

[10:31] <Geth> Â¦ rakudo/main: 

[10:31] <Geth> Â¦ rakudo/main: - only lookup dynamic vars once where possible

[10:31] <Geth> Â¦ rakudo/main: - all dynamic vars are UPPERCASE

[10:31] <Geth> Â¦ rakudo/main: - use more meaningful variable names

[10:31] <Geth> Â¦ rakudo/main: - lots of comments added / reformatted / edited

[10:31] <Geth> Â¦ rakudo/main: - kekab-case where possible

[10:31] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/11334377a4

[11:05] <Geth> Â¦ rakudo/main: 34a6c01dde | (Elizabeth Mattijsen)++ | 4 files

[11:05] <Geth> Â¦ rakudo/main: RakuAST: add ::resolver.setting-constant method

[11:05] <Geth> Â¦ rakudo/main: 

[11:05] <Geth> Â¦ rakudo/main: Mostly to improve readability of:

[11:05] <Geth> Â¦ rakudo/main:     $R.resolve-lexical-constant-in-setting('Str').compile-time-value;

[11:05] <Geth> Â¦ rakudo/main: to:

[11:05] <Geth> Â¦ rakudo/main:     $R.setting-constant('Str');

[11:05] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/34a6c01dde

[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:42] *** sena_kun left
[13:12] <Geth> Â¦ rakudo/main: 375d04e3ac | (Elizabeth Mattijsen)++ | 3 files

[13:12] <Geth> Â¦ rakudo/main: Make X::Syntax::Confused more logical

[13:12] <Geth> Â¦ rakudo/main: 

[13:12] <Geth> Â¦ rakudo/main: What's the point of having a default value for the reason, to use

[13:12] <Geth> Â¦ rakudo/main: that later to have it return 'Confused'.  Make 'Confused' the default

[13:12] <Geth> Â¦ rakudo/main: and be done with it.

[13:12] <Geth> Â¦ rakudo/main: 

[13:12] <Geth> Â¦ rakudo/main: Also apply this to some of the call sites.

[13:12] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/375d04e3ac

[13:40] <jdv> lizmat: are you changing professions to blogger?

[13:41] <jdv> nice series though

[13:41] *** donaldh joined
[13:41] <lizmat> jdv: no, it was just something I had already spent about 2 months on that was just laying there

[13:41] <lizmat> and thank you :-)

[13:42] <lizmat> only 9 episodes left unpublished

[13:43] <jdv> did you pick over the advent stuff?  it all feels like echos of that, to me.

[13:43] <lizmat> in 2019 there was one advent post that contained one chapter of the book

[13:43] <lizmat> I forget which

[13:44] <lizmat> and then there were the 2018 posts on opensource.com of course

[13:44] <jdv> ah

[13:44] <jdv> which book?

[13:45] <lizmat> the book that I was working on late 2019 / early 2020

[13:45] <lizmat> the book that won't get published :-)

[13:49] *** donaldh left
[13:51] <jdv> :)

[13:52] <jdv> guess i missed that bit

[13:53] <lizmat> it's in the first paragraph of the first post :-)

[13:53] <jdv> anything large/breaking this release cycle?

[13:53] <jdv> i skim...:)

[13:53] <lizmat> nah, adding adverbs to .min / .max and :k to sort, are the biggies I guess

[13:54] <jdv> cool

[14:16] <jdv> why didn't you do the book, maybe a a mini thing with some place like leanpub or whatever like bdfoy does for "perl news"

[14:17] <lizmat> many reasons..  some will be revealed in the final blog posr

[14:17] <lizmat> *post

[14:17] <jdv> should i get popcorn?  i can't wait!

[14:18] <lizmat> no, it's more nostalgia

[14:40] <jdv> hmm, i didn't know KEEP and LEAVE depended on the return value

[14:40] <jdv> that's not what the docs say, imho

[14:41] <jdv> i had assumed it had to do with whether an exception was thrown or something like that

[14:44] <lizmat> KEEP / UNDO depend on return value

[14:44] <lizmat> not LEAVE

[14:46] <jdv> the docs just say "successful/unsuccessfull block exit" but ok 

[14:48] <lizmat> LEAVE is run always

[14:51] <jdv> oh, i wrote LEAVE when i meant UNDO

[14:51] <jdv> ha

[14:51] <jdv> sorry - dooing too many things at once

[14:51] <lizmat> yeah.. that happens  :-)

[14:51] <jdv> also, any reason you left out the other phasers - async/exceptions/control?

[14:53] <lizmat> CATCH / CONTROL have their own blog post

[14:53] <lizmat> DONE will not be handled

[14:54] <jdv> cool 

[15:13] <jdv> ðŸ¥žðŸ¥ž No regressions found, dot file not saved

[15:13] <lizmat> whee!   pancakes!

[15:13] <jdv> no fun this round:(  i guess the release is on for Monday as planned.

[15:13] <lizmat> cool!

[15:20] <Geth> Â¦ rakudo/main: c7ad58de8c | (Elizabeth Mattijsen)++ | 2 files

[15:20] <Geth> Â¦ rakudo/main: RakuAST: Streamline / comment statements section

[15:20] <Geth> Â¦ rakudo/main: 

[15:20] <Geth> Â¦ rakudo/main: - a lot more comments

[15:20] <Geth> Â¦ rakudo/main: - some token / method renaming for clarity

[15:20] <Geth> Â¦ rakudo/main: - some code moving into the proper section

[15:20] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c7ad58de8c

[15:44] *** NemokoschKiwi joined
[17:19] *** jgaz left
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:24] *** Geth left
[18:30] *** Geth joined
[18:57] <[Coke]> jdv: JVM is broken.

[18:57] <[Coke]> but I think it's been broken for several releases now. :|

[19:06] <jdv> yup

[19:07] <jdv> afaik thats not a blocker, unless someone believes otherwise

[19:07] <[Coke]> lizmat: https://gist.github.com/coke/cd6adb22f7193f64a3680a91dfb837d3 - is this expected behavior, or a rakuast bug?

[19:07] <[Coke]> jdv: I can't say it's a blocker, no

[19:08] <[Coke]> <dad>I'm just disappointed</dad>

[19:08] <lizmat> well, it's not a valid table, but the error is LTA

[19:09] <[Coke]> I believe it's the same error with a valid table.

[19:09] <[Coke]> one sec, will try harder.

[19:09] <[Coke]> (are you sure? it looks very similar to some tables in the raku/doc repo

[19:10] <[Coke]> updated gist with the exact table giving me trouble in the repo

[19:11] <lizmat> well, it's a table with two rows and 1 column

[19:11] <[Coke]> I updated the gist.

[19:12] <[Coke]> So if that's an invalid table, we should be probably consider throwing an error at --doc time. (can you give me an example of a valid table that shouldn't throw an error?)

[19:12] <[Coke]> (--doc works fine on the file containing that table, it's me trying to call .paragraphs that's the problem)

[19:14] <lizmat> yeah, looking at it now

[19:15] <[Coke]> lizmat++

[19:17] <lizmat> ok, I figured it out, now to find a solution

[19:22] <lizmat> testing fix

[19:24] <lizmat> [Coke]: you probably want to do map(*.paragraphs.Slip) if you want to iterate over all paragraphs

[19:24] <lizmat> hmmm...

[19:30] <Geth> Â¦ rakudo/main: e6f33599f0 | (Elizabeth Mattijsen)++ | 3 files

[19:30] <Geth> Â¦ rakudo/main: RakuAST: make ::Statement::IfWith a proper base class

[19:30] <Geth> Â¦ rakudo/main: 

[19:30] <Geth> Â¦ rakudo/main: It was just called ::Statement::If, with ::Statement::With being

[19:30] <Geth> Â¦ rakudo/main: a subclass of that.  This was a bit confusing.

[19:30] <Geth> Â¦ rakudo/main: 

[19:30] <Geth> Â¦ rakudo/main: Also add "set-elsifs" and "set-else" methods, for convenience

[19:30] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e6f33599f0

[19:30] <Geth> Â¦ rakudo/main: 28d266ff47 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Fixups.pm6

[19:30] <Geth> Â¦ rakudo/main: RakuAST: fix issue with ::Doc::Row.raku

[19:30] <Geth> Â¦ rakudo/main: 

[19:30] <Geth> Â¦ rakudo/main: This one escapes the .raku dispatcher, and therefore doesn't set the

[19:30] <Geth> Â¦ rakudo/main: $*INDENT dynamic var if it hasn't been set yet causing an execution

[19:30] <Geth> Â¦ rakudo/main: error with indenting.

[19:30] <Geth> Â¦ rakudo/main: 

[19:30] <Geth> Â¦ rakudo/main: It now sets a $*INDENT if there isn't one yet, so it should *always*

[19:30] <Geth> Â¦ rakudo/main: work now, whether there is an $*INDENT set or not

[19:30] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/28d266ff47

[19:30] <lizmat> [Coke] ^^

[19:34] <[Coke]> thanks

[19:35] <[Coke]> afk

[19:36] <vrurg> lizmat: instead of nqp::istype($*INDENT,Failure) it'd better to use nqp::isnull(nqp::getlexdyn('$*INDENT')). Faster and at least one allocation of Failure less.

[19:36] <lizmat> hmmm...  I guess I could do that if I'm sure it won't be set in PROCESS:: or SETTING::  right ?

[19:37] <lizmat> s/SETTING/GLOBAL

[19:38] <lizmat> still, to be handling threads correctly...  one would have to look up $*PROMISE as well, no ?

[19:38] <vrurg> Yes. But if it can be found there then, perhaps, DYNAMIC::.EXISTS-KEY would still do better.

[19:40] <lizmat> hmmm... I think I'm gonna leave that for another day

[19:45] <lizmat> also: the creation of the Failure would only happen on the first time

[19:46] <Geth> Â¦ rakudo/main: efb5866426 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Raku.pm6

[19:46] <Geth> Â¦ rakudo/main: RakuAST: use "given" instead of "with" to topialize

[19:46] <Geth> Â¦ rakudo/main: 

[19:46] <Geth> Â¦ rakudo/main: As we can be sure now that $*INDENT will always be set

[19:46] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/efb5866426

[20:05] <Geth> Â¦ rakudo/main: 35467a2082 | (Elizabeth Mattijsen)++ | src/Raku/Actions.nqp

[20:05] <Geth> Â¦ rakudo/main: RakuAST: Streamline statement control actions

[20:05] <Geth> Â¦ rakudo/main: 

[20:05] <Geth> Â¦ rakudo/main: - add helper methods to concentrate common logic

[20:05] <Geth> Â¦ rakudo/main: - simplify if/with handling

[20:05] <Geth> Â¦ rakudo/main: - add more comments

[20:05] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/35467a2082

[20:05] <lizmat> and that concludes my hacking for today&

[20:43] *** vrurg_ joined
[20:45] *** vrurg left
[20:45] *** vrurg_ is now known as vrurg

[20:57] *** NemokoschKiwi left
