[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: 57de86291c | (Nick Logan)++ | src/core.c/CompUnit/PrecompilationRepository.pm6

[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: Prevent concurrent hash access

[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: 

[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: Currently two threads can read null from the $resolved hash and

[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: both end up trying to resolve the same thing. Additionally they

[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: can race each other when writing to the hash itself. This restores

[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: the original lock protect scope from before 95fb926 to ensure the

[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: read and write don't have a race condition.

[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: review: https://github.com/rakudo/rakudo/commit/57de86291c

[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: 3fcb00b90b | (Nick Logan)++ | src/core.c/CompUnit/PrecompilationRepository.pm6

[00:07] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: Give each hash their own lock

[00:08] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: 

[00:08] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: There should be no need for the loading mechanism to always block

[00:08] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: the resolve mechanism. This gives the $resolved hash its own lock

[00:08] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: instead of using the lock for the $loaded hash.

[00:08] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: review: https://github.com/rakudo/rakudo/commit/3fcb00b90b

[00:10] <Geth> ¦ rakudo: ugexe++ created pull request #5299: Fix potential concurrent hash access race condition

[00:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5299

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: f3888c0531 | (Nick Logan)++ | src/core.c/CompUnit/PrecompilationRepository.pm6

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: Prevent concurrent hash access

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: 

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: Currently two threads can read null from the $resolved hash and

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: both end up trying to resolve the same thing. This restores the

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: original lock protect scope from before 95fb926 to ensure read

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: and write don't have a race condition.

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: review: https://github.com/rakudo/rakudo/commit/f3888c0531

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: 3b25a7fe37 | (Nick Logan)++ | src/core.c/CompUnit/PrecompilationRepository.pm6

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: Give each hash their own lock

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: 

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: There should be no need for the loading mechanism to always block

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: the resolve mechanism. This gives the $resolved hash its own lock

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: instead of using the lock for the $loaded hash.

[00:36] <Geth> ¦ rakudo/ugexe/readd-original-protect-block: review: https://github.com/rakudo/rakudo/commit/3b25a7fe37

[01:00] <[Coke]> ugexe++

[01:28] *** evalable6 left
[01:28] *** linkable6 left
[01:30] *** nine left
[01:30] *** evalable6 joined
[01:31] *** linkable6 joined
[01:31] *** nine joined
[01:48] *** MasterDuke left
[03:27] *** vrurg left
[03:58] *** vrurg joined
[05:04] *** linkable6 left
[05:04] *** evalable6 left
[05:06] *** linkable6 joined
[05:06] *** evalable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[07:00] *** elcaro left
[07:00] *** elcaro joined
[07:03] *** codesections1 joined
[07:04] *** codesections left
[07:04] *** codesections1 is now known as codesections

[07:09] *** codesections1 joined
[07:10] *** codesections left
[07:10] *** codesections1 is now known as codesections

[07:19] <Geth> ¦ rakudo/main: 7 commits pushed by (Elizabeth Mattijsen)++

[07:19] <Geth> ¦ rakudo/main: 120d929bac | Add sprintf(Format:D) candidate for now

[07:19] <Geth> ¦ rakudo/main: 474ca30c82 | Add format.directives method

[07:19] <Geth> ¦ rakudo/main: 3e5a3fb667 | * (create Format.pm6)

[07:19] <Geth> ¦ rakudo/main: 2cdab74475 | * (keep Formatter.pm6)

[07:19] <Geth> ¦ rakudo/main: 18963a7b22 | * (merge)

[07:19] <Geth> ¦ rakudo/main: 672999fd3e | Copied (with git history):

[07:19] <Geth> ¦ rakudo/main: 91f221f0b8 | Final step of moving Format class to own file

[07:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/ec622b9366f2...91f221f0b81e

[07:29] <Geth> ¦ rakudo/main: 5 commits pushed by (Elizabeth Mattijsen)++

[07:29] <Geth> ¦ rakudo/main: 6eef82f685 | * (create Formatter/Grammar.pm6)

[07:29] <Geth> ¦ rakudo/main: f6762fa37c | * (keep Formatter.pm6)

[07:29] <Geth> ¦ rakudo/main: f73a6d6cf5 | * (merge)

[07:29] <Geth> ¦ rakudo/main: 85c83adeb2 | Copied (with git history):

[07:29] <Geth> ¦ rakudo/main: ae149fccf5 | Final step of moving Formatter::Grammar class to own file

[07:29] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/compare/91f221f0b81e...ae149fccf5c6

[07:54] *** ab5tract joined
[08:27] <[Tux]> Rakudo v2023.06-13-gae149fccf (v6.d) on MoarVM 2023.06-1-g63af27399

[08:27] <[Tux]> csv-test-xs-20      0.381 -  0.434

[08:27] <[Tux]> csv-ip5xs           0.953 -  1.043

[08:27] <[Tux]> test-t --race       1.010 -  1.081

[08:27] <[Tux]> test-t              1.572 -  1.724

[08:27] <[Tux]> csv-parser          3.872 -  3.880

[08:27] <[Tux]> csv-ip5xs-20        6.187 -  6.551

[08:27] <[Tux]> test                6.498 -  6.879

[08:27] <[Tux]> test-t-20 --race    6.158 -  7.276

[08:27] <[Tux]> test-t-20          19.709 - 22.361

[08:34] *** sena_kun joined
[08:46] <Geth> ¦ rakudo/main: 64e4499a28 | (Elizabeth Mattijsen)++ | src/core.e/Format.pm6

[08:46] <Geth> ¦ rakudo/main: Allow class specification with Format.new

[08:46] <Geth> ¦ rakudo/main: 

[08:46] <Geth> ¦ rakudo/main: This is probably temporary, or at least an implementation detail,

[08:46] <Geth> ¦ rakudo/main: to allow easier development / maintenance on the Formatter class

[08:46] <Geth> ¦ rakudo/main: (without needing to re-compile the core setting every time).

[08:46] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/64e4499a28

[09:32] *** sena_kun left
[11:06] *** bloatable6 left
[11:06] *** committable6 left
[11:06] *** shareable6 left
[11:06] *** linkable6 left
[11:06] *** unicodable6 left
[11:06] *** coverable6 left
[11:06] *** evalable6 left
[11:06] *** benchable6 left
[11:06] *** notable6 left
[11:06] *** releasable6 left
[11:06] *** reportable6 left
[11:06] *** bisectable6 left
[11:06] *** greppable6 left
[11:06] *** statisfiable6 left
[11:06] *** squashable6 left
[11:07] *** unicodable6 joined
[11:07] *** coverable6 joined
[11:07] *** bisectable6 joined
[11:07] *** committable6 joined
[11:07] *** statisfiable6 joined
[11:07] *** squashable6 joined
[11:08] *** shareable6 joined
[11:08] *** reportable6 joined
[11:08] *** bloatable6 joined
[11:08] *** linkable6 joined
[11:08] *** evalable6 joined
[11:09] *** benchable6 joined
[11:09] *** notable6 joined
[11:09] *** greppable6 joined
[11:09] *** releasable6 joined
[11:10] <lizmat> hmmm.. I seem to recall that we have an exception type to wrap another exception... but I can't seem to find it?

[11:10] <lizmat> use case: something went wrong with sprintf: I'd like to report the format used, and the values given

[11:11] <lizmat> before reporting the actual error

[11:51] *** ab5tract left
[11:51] *** ab5tract joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:20] <lizmat> TIL that any block with a CATCH { } in it, is by definition too large too inline

[12:50] <discord-raku-bot> <nemokosch> is there a formal description of Raku regexes somewhere? That syntax would be nice to have at other places as well

[12:56] <lizmat> closest is https://design.raku.org/S05.html I guess

[13:09] <Geth> ¦ rakudo/main: fe788b0a9f | (Elizabeth Mattijsen)++ | 2 files

[13:09] <Geth> ¦ rakudo/main: Re-imagine Formatter + Format updates

[13:09] <Geth> ¦ rakudo/main: 

[13:09] <Geth> ¦ rakudo/main: - Formatter now produces a Callable with a Signature reflecting

[13:09] <Geth> ¦ rakudo/main:   the actual number of arguments expected

[13:09] <Geth> ¦ rakudo/main: - Removed ad-hoc number of args / type checking: this is now done

[13:09] <Geth> ¦ rakudo/main:   by the actual code itself

[13:09] <Geth> ¦ rakudo/main: - results from .AST can now be EVALled later in different contexts

[13:09] <Geth> ¦ rakudo/main: <…commit message has 12 more lines…>

[13:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fe788b0a9f

[13:11] *** vrurg left
[13:13] *** vrurg joined
[13:28] <leont> Interesting commit. Insightful in how to approach creating good Callables.

[14:08] <Geth> ¦ rakudo/main: 90ccaeb512 | (Elizabeth Mattijsen)++ | src/core.e/Format.pm6

[14:08] <Geth> ¦ rakudo/main: Be smarter on getting the count, japhb++

[14:08] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/90ccaeb512

[14:51] <Geth> ¦ roast: 1f44995f40 | (Elizabeth Mattijsen)++ | S32-str/format.t

[14:51] <Geth> ¦ roast: Add Format.signature/arity tests

[14:51] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/1f44995f40

[14:54] *** Voldenet_ joined
[14:55] *** Voldenet left
[14:55] *** Voldenet_ is now known as Voldenet

[15:06] <Geth> ¦ rakudo/main: dd55ffe27b | (Elizabeth Mattijsen)++ | 2 files

[15:06] <Geth> ¦ rakudo/main: RakuAST: improve deparsing of nested ternaries

[15:06] <Geth> ¦ rakudo/main: 

[15:06] <Geth> ¦ rakudo/main: And add test for nested ternaries

[15:06] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/dd55ffe27b

[15:17] *** kurahaupo left
[15:30] <Geth> ¦ rakudo/main: 0550ae7632 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Deparse.pm6

[15:30] <Geth> ¦ rakudo/main: RakuAST: fix deparsing of (foo,bar).baz

[15:30] <Geth> ¦ rakudo/main: 

[15:30] <Geth> ¦ rakudo/main: It was being deparsed as

[15:30] <Geth> ¦ rakudo/main: 

[15:30] <Geth> ¦ rakudo/main:     foo,bar.baz

[15:30] <Geth> ¦ rakudo/main: 

[15:30] <Geth> ¦ rakudo/main: which is *not* the same.

[15:30] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0550ae7632

[15:59] *** [Coke]_ joined
[16:01] *** [Coke] left
[17:36] <Geth> ¦ rakudo/main: 68dbf92930 | (Elizabeth Mattijsen)++ | 2 files

[17:36] <Geth> ¦ rakudo/main: Fix some cases of improper language revision tests

[17:36] <Geth> ¦ rakudo/main: 

[17:36] <Geth> ¦ rakudo/main: Internally numbers are used nowadays.

[17:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/68dbf92930

[17:42] *** sena_kun joined
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:57] *** [Coke]_ is now known as [Coke]

[18:58] <[Coke]> O_o;

[21:20] *** evalable6 left
[21:20] *** linkable6 left
[21:22] *** evalable6 joined
[21:22] *** linkable6 joined
[21:34] *** sena_kun left
[22:49] *** linkable6 left
[22:49] *** evalable6 left
[22:49] *** linkable6 joined
[22:50] *** evalable6 joined
[22:51] *** ab5tract left
[22:52] *** ab5tract joined
[23:38] *** squashable6 left
[23:40] *** squashable6 joined
[23:54] *** codesections left
[23:58] *** codesections joined
