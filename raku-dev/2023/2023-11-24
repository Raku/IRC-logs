[08:41] *** discord-raku-bot left
[08:42] *** discord-raku-bot joined
[09:57] *** sena_kun joined
[09:58] *** sena_kun left
[11:59] <Geth> ¦ rakudo/main: 4e0bd4f974 | (Elizabeth Mattijsen)++ | lib/Test.rakumod

[11:59] <Geth> ¦ rakudo/main: Update link to IRC chat logs

[11:59] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4e0bd4f974

[13:04] *** [TuxCM] left
[13:10] <Geth> ¦ rakudo/main: d31e4f62bb | (Patrick Böker)++ | src/core.c/Rakudo/Supply.rakumod

[13:10] <Geth> ¦ rakudo/main: Fix rare deadlocks during supply setup

[13:10] <Geth> ¦ rakudo/main: 

[13:10] <Geth> ¦ rakudo/main: In https://github.com/rakudo/rakudo/commit/26a9c313297a21c11ac30f02349497822686f507

[13:10] <Geth> ¦ rakudo/main: a mechanism to solve deadlocks during supply / whenever setup was

[13:10] <Geth> ¦ rakudo/main: introduced. In that implementation whenever a lock during setup

[13:10] <Geth> ¦ rakudo/main: was hit a continuation would be taken and put into a list for later

[13:10] <Geth> ¦ rakudo/main: processing. That list was then processed in order. If new locks were

[13:10] <Geth> ¦ rakudo/main: <…commit message has 18 more lines…>

[13:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d31e4f62bb

[13:10] <Geth> ¦ rakudo/main: 6fe163274a | (Patrick Böker)++ | 2 files

[13:10] <Geth> ¦ rakudo/main: Fix raciness in supply processing

[13:10] <Geth> ¦ rakudo/main: 

[13:10] <Geth> ¦ rakudo/main: Supply blocks are blocked by a lock from being entered in parallel.

[13:10] <Geth> ¦ rakudo/main: During recursion, which can happen when supply blocks directly

[13:10] <Geth> ¦ rakudo/main: contain `emit`s and with nested `whenever`s, the

[13:10] <Geth> ¦ rakudo/main: `Lock::Async::protect-or-queue-on-recursion` method queues the code

[13:10] <Geth> ¦ rakudo/main: to be run after the supply block is available again. That code is then

[13:10] <Geth> ¦ rakudo/main: <…commit message has 25 more lines…>

[13:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6fe163274a

[13:10] <Geth> ¦ rakudo/main: 9b65e880cd | (Patrick Böker)++ (committed using GitHub Web editor) | 3 files

[13:10] <Geth> ¦ rakudo/main: Merge pull request #5202 from patrickbkr/supply-whenever-no-bawa

[13:10] <Geth> ¦ rakudo/main: 

[13:10] <Geth> ¦ rakudo/main: Fix rare deadlocks during supply setup

[13:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/9b65e880cd

[13:10] <Geth> ¦ roast: 26298a1fc7 | (Patrick Böker)++ | S17-supply/construction-recursion.t

[13:10] <Geth> ¦ roast: Test supply setup with a blocking recursion

[13:10] <Geth> ¦ roast: 

[13:10] <Geth> ¦ roast: Having a supply that recurses back to itself during construction and

[13:10] <Geth> ¦ roast: forcing a (temporary) blocking of that supply has proven to be a corner

[13:10] <Geth> ¦ roast: case that's difficult to get right. Thus add a test for it.

[13:10] <Geth> ¦ roast: 

[13:10] <Geth> ¦ roast: https://github.com/rakudo/rakudo/issues/5141 tells the full story of

[13:10] <Geth> ¦ roast: how this test came to be.

[13:11] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/26298a1fc7

[13:11] <Geth> ¦ roast: 32c0607d6c | (Patrick Böker)++ (committed using GitHub Web editor) | S17-supply/construction-recursion.t

[13:11] <Geth> ¦ roast: Merge pull request #833 from patrickbkr/supply-recursion-block-test

[13:11] <Geth> ¦ roast: 

[13:11] <Geth> ¦ roast: Test supply setup with a blocking recursion

[13:11] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/32c0607d6c

[13:29] <[Tux]> Rakudo v2023.11-12-g9b65e880c (v6.d) on MoarVM 2023.11-1-gbe03e26fc

[13:29] <[Tux]> csv-test-xs-20      0.139 -  0.140

[13:29] <[Tux]> csv-ip5xs           0.258 -  0.264

[13:29] <[Tux]> test-t --race       0.273 -  0.289

[13:29] <[Tux]> test-t              0.429 -  0.462

[13:29] <[Tux]> csv-ip5xs-20        1.134 -  1.136

[13:29] <[Tux]> test-t-20 --race    1.215 -  1.248

[13:29] <[Tux]> csv-parser          1.483 -  1.590

[13:29] <[Tux]> test                1.958 -  2.005

[13:29] <[Tux]> test-t-20           5.111 -  5.193

[15:02] *** underscore joined
[15:59] *** underscore left
[19:53] *** melezhik joined
[19:54] *** melezhik left
[20:18] *** melezhik joined
[20:25] *** melezhik left
[21:40] *** sena_kun joined
[23:03] <tbrowder__> can anyone tell me the oldest macos version we support?

[23:03] <tellable6> 2023-11-24T20:18:32Z #raku <melezhik> tbrowder__:  TX, the woodlands

[23:26] *** sena_kun left
