[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[01:15] *** uzl[m] joined
[01:38] *** samcv left
[01:38] *** samcv joined
[01:45] *** epony left
[03:27] *** epony joined
[03:31] *** epony left
[03:36] *** epony joined
[03:47] *** epony left
[04:13] *** lucs left
[04:13] *** lucs joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:39] *** sena_kun joined
[08:54] *** sena_kun left
[09:16] *** sena_kun joined
[09:30] *** sena_kun left
[10:57] *** NemokoschKiwi joined
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:04] *** NemokoschKiwi left
[12:14] *** NemokoschKiwi joined
[12:20] <lizmat> m: dd enum Foo <A B C>   # TIL that an enum definition returns its Map, rather than the type

[12:20] <camelia> rakudo-moar 3fb68b354: OUTPUT: «Map.new((:A(0),:B(1),:C(2)))␤»

[12:20] <lizmat> m: dd Foo

[12:20] <camelia> rakudo-moar 3fb68b354: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared name:␤    Foo used at line 1␤␤»

[12:20] <lizmat> m: dd enum Foo <A B C>; dd Foo

[12:20] <camelia> rakudo-moar 3fb68b354: OUTPUT: «Map.new((:A(0),:B(1),:C(2)))␤Foo␤»

[12:26] <lizmat> this sorta feels wrong ?

[12:27] *** NemokoschKiwi left
[13:17] <nine> It's certainly surprising

[14:00] *** MasterDuke joined
[14:01] <MasterDuke> .

[14:01] <tellable6> 2023-04-13T14:50:49Z #raku-dev <nine> MasterDuke: have you ever gotten somewhere with the migrate_colonpairs madness?

[14:02] <MasterDuke> nine: don't remember doing anything with migrate_colonpairs, but still working on making the deftrap (e.g., `sub one { 1 }; one;` error only happen for core stuff

[14:05] <MasterDuke> i have *something* happening in PERFORM-CHECK, but once i get the *correct* thing to happen i guess i need to not throw the exception in the grammar anymore

[14:05] *** japhb joined
[14:21] <[Coke]> (enum) is the surprising part that the Map "leaks" or that they're different, or that we get no indication it's an enum in one or both cases?

[14:23] * [Coke] reads back a few lines and sees lizmat explicitly say what the surprise is, oops.

[14:39] <nine> MasterDuke: ah, ok. I have started working on that colonpair thing in any case. FWIW it's about {:a:b:c} being equivalent to {:a, :b, :c}

[14:43] *** Xliff left
[17:07] *** evalable6 left
[17:07] *** linkable6 left
[17:08] *** linkable6 joined
[17:08] *** evalable6 joined
[17:26] <tbrowder__> hi

[17:28] <tbrowder__> having just had trouble with loading a module, i would like to see a mod to Raku so the user can see errors when a module isn't loaded.

[17:30] <tbrowder__> i know one can do the docs thing for each module, but a pragma or a raku run flag or env var would be very handy during development.

[17:30] <lizmat> what errors do you mean?

[17:32] <tbrowder__> hi, liz. i mean something like forgetting a "use lib..." when a module isn't in the zef places, etc.

[17:34] <tbrowder__> i get no specific error, just fallout errors like unfound methods which fool me into thinking it's another problem

[17:34] <lizmat> so you're saying that a "use Foo" doesn't bomb in some cases ?

[17:34] <tbrowder__> when it's just a dumb mistake and a missing lib

[17:34] <tbrowder__> yes

[17:35] <lizmat> I thought it would always bombs?

[17:35] <lizmat> m: use Foo

[17:35] <camelia> rakudo-moar 3fb68b354: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Could not find Foo in:␤    /home/camelia/.raku␤    /home/camelia/rakudo-m-inst-1/share/perl6/site␤    /home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-1/share/per…»

[17:35] <lizmat> m: try use Foo; dd "alive"

[17:35] <camelia> rakudo-moar 3fb68b354: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Could not find Foo in:␤    /home/camelia/.raku␤    /home/camelia/rakudo-m-inst-1/share/perl6/site␤    /home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-1/share/per…»

[17:35] <lizmat> m: BEGIN try use Foo; dd "alive"

[17:35] <camelia> rakudo-moar 3fb68b354: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Could not find Foo in:␤    /home/camelia/.raku␤    /home/camelia/rakudo-m-inst-1/share/perl6/site␤    /home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-1/share/per…»

[17:37] <tbrowder__> ok, maybe it's because i'm upgrading a module and it's not seeing the upgraded one. i guess you can't cure stupid ;-(

[17:38] <lizmat> well, if you can produce a golf, than we can look at fixing it  :-)

[17:39] <tbrowder__> no, i know that's the problem. sorry for the false alarm

[17:44] <MasterDuke> in RakuAST, what's the best/right way to say that two compile-time-value's are the same?

[17:45] *** sena_kun joined
[17:45] <lizmat> how the same would you like to test?

[17:46] <MasterDuke> in this particular case, that the sub i'm calling is the same as the sub of the same name in the core

[17:46] <lizmat> nqp::eqaddr?

[17:46] <MasterDuke> =:= doesn't seem to work

[17:47] <MasterDuke> yeah, was wondering if that was the right now

[17:47] <lizmat> then they're not the same?

[17:47] <MasterDuke> *one

[17:47] <lizmat> =:= is syntactic sugar for nqp::eqaddr though

[17:47] <MasterDuke> they are though

[17:48] <lizmat> if they're not the same with nqp::eqaddr, then they're not the same?   decont needed maybe ?

[17:48] <MasterDuke> hm, will give that a try

[18:00] <MasterDuke> getting closer. seems like maybe actually getting the right exception thrown is the next step

[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[19:06] <Geth> ¦ rakudo/main: b817812bfb | (Elizabeth Mattijsen)++ | 5 files

[19:06] <Geth> ¦ rakudo/main: RakuAST: fix some edge cases when setting up $=pod

[19:06] <Geth> ¦ rakudo/main: 

[19:06] <Geth> ¦ rakudo/main: - make sure missing declarand worry is issued only if it is really

[19:06] <Geth> ¦ rakudo/main:   correct.  The grammar can call the "add-trailing" method multiple

[19:06] <Geth> ¦ rakudo/main:   times, sometimes *before* the declarand is actually set.  Introduce

[19:06] <Geth> ¦ rakudo/main:   a $*DECLARAND-WORRIES hash that keeps potential issues, and issue

[19:06] <Geth> ¦ rakudo/main:   the worries in there when a declarand is set, and the declarand is

[19:06] <Geth> ¦ rakudo/main: <…commit message has 13 more lines…>

[19:06] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b817812bfb

[19:22] *** NemokoschKiwi joined
[19:23] *** linkable6 left
[19:23] *** linkable6 joined
[20:05] *** sena_kun left
[20:06] *** sena_kun joined
[20:24] *** NemokoschKiwi left
[21:17] <Geth> ¦ nqp/configure_warn_p5mod_missing: a895e6029b | (Timo Paulssen)++ | Configure.pl

[21:17] <Geth> ¦ nqp/configure_warn_p5mod_missing: Warn about missing perl5 libs in Configure instead of just crashing

[21:17] <Geth> ¦ nqp/configure_warn_p5mod_missing: 

[21:17] <Geth> ¦ nqp/configure_warn_p5mod_missing: On a system where some of the standard library is chopped off into

[21:17] <Geth> ¦ nqp/configure_warn_p5mod_missing: modules, Configure --help would crash with the not-too-scrutible

[21:17] <Geth> ¦ nqp/configure_warn_p5mod_missing: error message that perl5 gives when a module isn't installed,

[21:17] <Geth> ¦ nqp/configure_warn_p5mod_missing: so i'm thinking a friendly message would be nice

[21:17] <Geth> ¦ nqp/configure_warn_p5mod_missing: review: https://github.com/Raku/nqp/commit/a895e6029b

[21:17] <Geth> ¦ nqp: timo++ created pull request #801: Warn about missing perl5 libs in Configure instead of just crashing

[21:17] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/801

[21:19] <Geth> ¦ rakudo/configure_warn_p5mod_missing: 7ee407ebf3 | (Timo Paulssen)++ | Configure.pl

[21:19] <Geth> ¦ rakudo/configure_warn_p5mod_missing: Warn about missing perl5 mods instead of crashing

[21:19] <Geth> ¦ rakudo/configure_warn_p5mod_missing: 

[21:19] <Geth> ¦ rakudo/configure_warn_p5mod_missing: There even was already a bit of code in here to get an earlier crash

[21:19] <Geth> ¦ rakudo/configure_warn_p5mod_missing: if FindBin, an essential module for this script, is missing, but

[21:19] <Geth> ¦ rakudo/configure_warn_p5mod_missing: with this patch there's a nicer error message, and earlier bailout

[21:19] <Geth> ¦ rakudo/configure_warn_p5mod_missing: if stuff is missing

[21:19] <Geth> ¦ rakudo/configure_warn_p5mod_missing: review: https://github.com/rakudo/rakudo/commit/7ee407ebf3

[21:19] <Geth> ¦ rakudo: timo++ created pull request #5244: Warn about missing perl5 mods instead of crashing

[21:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5244

[21:31] <timo1> even put a little comment in the PRs that show the pain that is trying to get Configure to run on systems with this particular oddity

[21:31] *** timo1 is now known as timo

[22:31] *** sena_kun left
