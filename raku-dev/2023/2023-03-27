[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[01:02] *** linkable6 left
[01:02] *** evalable6 left
[01:03] *** linkable6 joined
[01:05] *** evalable6 joined
[01:50] *** frost joined
[01:59] *** frost left
[02:55] *** frost joined
[03:06] *** frost left
[04:34] *** frost joined
[04:58] *** frost left
[05:32] *** frost joined
[05:35] *** frost left
[06:00] *** heartburn left
[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[06:00] *** heartburn joined
[07:05] *** sena_kun joined
[09:35] *** sena_kun left
[11:00] *** MasterDuke left
[11:27] <Geth> ¦ rakudo/main: cacd8bba93 | (Elizabeth Mattijsen)++ | 4 files

[11:27] <Geth> ¦ rakudo/main: RakuAST: add deparsing/.raku/test for RakuAST::Var::Pod::Finish

[11:27] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cacd8bba93

[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:09] <lizmat> notable6: weekly

[12:09] <notable6> lizmat, No notes for “weekly”

[13:30] <lizmat> nine: re https://irclogs.raku.org/raku-dev/2023-03-13.html#07:35   is there a bit of a plan already?

[13:31] <lizmat> would we need to create something like a PodTarget class to hang inline pod off from?

[13:37] <nine> No plan yet

[13:40] <lizmat> ok   well, that's easy then  :-)

[13:42] <lizmat> I guess I will have to familiarize myself with more rakudoc innards then  :-)

[13:42] <lizmat> Q: shouldn't we call the RakuAST classes something with Rakudoc or just Doc instead of Pod ?

[13:43] <nine> Well "pod" is quite well entrenched, e.g. $=pod or even =pod

[13:46] <lizmat> well, yes, but do we need to entrench this even further ?

[13:49] <nine> Why not? What's there to be gained by changing the name?

[13:50] <vrurg> If we don't plan to rename POD then why creating extra confusion?

[13:51] <lizmat> but that's just the point: in the Raku documentation, pod files now have the .rakudoc extensions

[13:51] <vrurg> Extensions, not the concept/term itself.

[13:53] <lizmat> I think the documentation team has different ideas about it, long term

[13:53] <lizmat> [Coke] ^^

[13:58] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/03/27/2023-13-finitely/

[14:38] *** linkable6 left
[14:38] *** evalable6 left
[14:41] *** linkable6 joined
[14:41] *** evalable6 joined
[15:13] <lizmat> ok, pod it is :-)

[15:29] <lizmat> I think I'm going to start by adding some .raku methods to classes in src/core.c/Pod.pm6

[15:30] <lizmat> to be able to better understand how these classes are built

[15:45] <nine> That's so.....sensible. Why do you want to make your life so easy?

[15:51] <lizmat> heh... turns out I only needed to remove some BUILD methods and make some attributes public

[15:52] <lizmat> also: can someone explain to me why Pod::Block::Declarator is a Pod::Block  ??

[15:52] <lizmat> I don't see any syntax for giving it any config or contents ?

[15:54] *** japhb left
[15:56] *** japhb joined
[16:04] * nine does not have the slightest idea about any Pod related stuff at all...

[16:04] * lizmat neither

[16:12] <Geth> ¦ rakudo/main: 1a86348a28 | (Elizabeth Mattijsen)++ | src/core.c/Pod.pm6

[16:12] <Geth> ¦ rakudo/main: Remove some unnecessary BUILD methods

[16:12] <Geth> ¦ rakudo/main: 

[16:12] <Geth> ¦ rakudo/main: And make some attributes public, so .raku will see them.

[16:12] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1a86348a28

[16:50] <Geth> ¦ rakudo/main: cd3c58573a | (Elizabeth Mattijsen)++ | src/core.c/Pod.pm6

[16:50] <Geth> ¦ rakudo/main: Streamline Pod::Block classes a bit

[16:50] <Geth> ¦ rakudo/main: 

[16:50] <Geth> ¦ rakudo/main: - complete signature

[16:50] <Geth> ¦ rakudo/main: - use pointy block binding where possible

[16:50] <Geth> ¦ rakudo/main: - use ternaries where possible

[16:50] <Geth> ¦ rakudo/main: - move coercion into signature

[16:50] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cd3c58573a

[16:57] <[Coke]> (pod vs. rakudoc) I don't care, I'm just trying to track what the core team does.

[16:57] <[Coke]> rakudoc was listed as the preferred version ages ago, we finally got around to updating the raku/doc infra to deal with it

[17:19] *** ab5tract joined
[17:56] <tonyo> how does rakudoc work? after a fresh install `rakudoc IO::Path.add` shows nothing (even after `rakudoc -b`)

[18:00] <Geth> ¦ rakudo/main: 3080103bb6 | (Elizabeth Mattijsen)++ | 3 files

[18:00] <Geth> ¦ rakudo/main: RakuAST: add stubs for pod handling

[18:00] <Geth> ¦ rakudo/main: 

[18:00] <Geth> ¦ rakudo/main: - RakuAST::Pod, RakuAST::Pod::Block, RakuAST::Pod::Declarator

[18:00] <Geth> ¦ rakudo/main: - Some streamlining in RakuAST::CompUnit

[18:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3080103bb6

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:22] *** sena_kun joined
[18:40] <[Coke]> tonyo: https://github.com/Raku/rakudoc/issues/25

[19:10] <[Coke]> tonyo: interestingly, this seems to work with the test data in the rakudoc repo.

[19:10] <[Coke]> RAKUDOC=t/test-doc raku -I. bin/rakudoc Hash.classify-list generates the desired result.

[19:10] <[Coke]> (after a rakudoc -b)

[22:57] <[Coke]> tonyo: need to specify the inner doc/ folder, then everything works as expected. (see ticket).

[23:00] <tonyo> ah

[23:13] *** linkable6 left
[23:13] *** evalable6 left
[23:14] *** evalable6 joined
[23:16] *** linkable6 joined
[23:27] <[Coke]> updated the README to note it. it was hidden in there.

