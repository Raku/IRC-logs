[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[03:27] *** quotable6 left
[03:27] *** committable6 left
[03:27] *** unicodable6 left
[03:27] *** greppable6 left
[03:27] *** sourceable6 left
[03:27] *** linkable6 left
[03:27] *** evalable6 left
[03:27] *** greppable6 joined
[03:27] *** committable6 joined
[03:28] *** sourceable6 joined
[03:28] *** unicodable6 joined
[03:29] *** evalable6 joined
[03:29] *** quotable6 joined
[03:29] *** linkable6 joined
[04:26] *** epony left
[05:26] *** bloatable6 left
[05:26] *** sourceable6 left
[05:26] *** linkable6 left
[05:26] *** evalable6 left
[05:26] *** notable6 left
[05:26] *** tellable6 left
[05:26] *** coverable6 left
[05:26] *** nativecallable6 left
[05:26] *** committable6 left
[05:26] *** statisfiable6 left
[05:26] *** bisectable6 left
[05:26] *** shareable6 left
[05:26] *** unicodable6 left
[05:26] *** greppable6 left
[05:26] *** reportable6 left
[05:26] *** squashable6 left
[05:26] *** releasable6 left
[05:26] *** benchable6 left
[05:27] *** greppable6 joined
[05:27] *** benchable6 joined
[05:27] *** reportable6 joined
[05:27] *** notable6 joined
[05:27] *** linkable6 joined
[05:27] *** unicodable6 joined
[05:28] *** nativecallable6 joined
[05:28] *** squashable6 joined
[05:28] *** bisectable6 joined
[05:28] *** shareable6 joined
[05:28] *** sourceable6 joined
[05:28] *** tellable6 joined
[05:28] *** committable6 joined
[05:28] *** statisfiable6 joined
[05:29] *** releasable6 joined
[05:29] *** coverable6 joined
[05:29] *** bloatable6 joined
[05:29] *** evalable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:38] <[Tux]> Rakudo v2022.12-1-gd52342eb0 (v6.d) on MoarVM 2023.02-3-g6adfc376c

[06:38] <[Tux]> csv-test-xs-20      0.410 -  0.414

[06:38] <[Tux]> test-t --race       0.787 -  0.801

[06:38] <[Tux]> csv-ip5xs           0.784 -  0.812

[06:38] <[Tux]> test-t              1.361 -  1.417

[06:38] <[Tux]> csv-parser          3.402 -  3.452

[06:38] <[Tux]> csv-ip5xs-20        5.025 -  5.190

[06:38] <[Tux]> test                6.496 -  6.549

[06:38] <[Tux]> test-t-20 --race    7.020 -  7.131

[06:38] <[Tux]> test-t-20          19.931 - 20.135

[07:39] *** sena_kun joined
[08:43] *** squashable6 left
[08:46] *** squashable6 joined
[10:50] *** epony joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:24] <[Coke]> tux - why is rakudo still reporting as v2022?

[12:24] <[Coke]> (master/main switch not tracked, maybe?)

[12:25] <[Coke]> [Tux], I mean.

[12:42] <[Tux]> possible. I'll have a look

[12:43] *** Altai-man joined
[12:43] *** sena_kun left
[13:19] <[Tux]> indeed, all is master, not main.

[13:20] <lizmat> time to change :-)

[13:20] <lizmat> at least the Rakudo branch

[13:22] <[Tux]> my script updates git using "master" everywhere", so lets see where stuff starts breaking when I switch to "main"

[13:22] <lizmat> I think MoarVM is still on master

[13:23] <lizmat> but nqp and rakudo are on main

[13:23] <[Tux]> time to change :)

[13:38] <[Tux]> Rakudo v2023.02-291-ge68322dbc (v6.d) on MoarVM 2023.02-3-g6adfc376c

[13:38] <[Tux]> csv-test-xs-20      0.403 -  0.421

[13:38] <[Tux]> csv-ip5xs           0.896 -  0.927

[13:38] <[Tux]> test-t --race       1.026 -  1.125

[13:38] <[Tux]> test-t              1.584 -  1.649

[13:38] <[Tux]> csv-parser          3.674 -  3.862

[13:38] <[Tux]> csv-ip5xs-20        5.457 -  5.741

[13:38] <[Tux]> test                7.272 -  7.304

[13:38] <[Tux]> test-t-20 --race    7.463 -  8.125

[13:38] <[Tux]> test-t-20          21.029 - 21.087

[13:38] <[Coke]> ok, but the numbers went in the wrong direction. :)

[13:40] <[Tux]> yes, but it could be that this is during "normal" hours and my box is also used for other tasks

[13:40] <lizmat> I think those increased numbers are mainly additional startup from loading all of the RakuAST stuff

[13:40] <lizmat> and the additional grammar / actions

[13:40] <[Tux]> anyway, well-noticed!

[13:42] <[Coke]> \o/

[14:29] <lizmat> hmmm... it just occurred to me we could potentially have a simplified Rakudoc grammar that would just produce an AST

[14:29] <lizmat> which *could* be the base of translators

[14:30] <lizmat> building the AST for a .rakudoc file would then be:   slurp($file).AST(DocGrammar)

[14:31] <lizmat> or something similar

[14:32] <nine> Wouldn't that have to parse full Raku to even find all the Rakudoc?

[14:32] <lizmat> not if we consider the code an Doc::Ambient

[14:32] <lizmat> as per S26

[14:33] <lizmat> meanwhile, I just found out that Block and PointyBlock are also DeclaratorTargets  :-(

[15:05] <nine> That just says what could happen to source code. But how do you differentiate between POD and Raku mixed in the same file without actually understanding the Raku? What looks like POD could be part of a string for example.

[15:06] <lizmat> true

[15:06] <lizmat> still, I think for pure .rakudoc files, it would be helpful?

[15:07] <lizmat> and safer, as no code can run ?

[16:15] *** Altai-man left
[16:17] *** sena_kun joined
[16:41] *** sena_kun left
[16:41] *** sena_kun joined
[17:45] <Geth> ¦ rakudo/main: 5566049023 | (Stefan Seifert)++ | 2 files

[17:45] <Geth> ¦ rakudo/main: RakuAST: first support for Perl 5 regex dialect

[17:45] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5566049023

[17:46] <nine> Another one of those unexpected wins

[17:58] <[Coke]> (rakudoc) - I would be fine if raku foo.rakudoc implied --doc

[17:59] <[Coke]> it is a little suprising that .rakudoc implies nothing other than .raku

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:05] <lizmat> [Coke]: I think some @ARGS twiddling in src/main.nqp just before $comp.command_line, would do the trick

[19:01] *** sena_kun left
[19:04] *** sena_kun joined
[19:11] <Geth> ¦ rakudo/main: d9dd95c1dd | (Elizabeth Mattijsen)++ | 12 files

[19:11] <Geth> ¦ rakudo/main: RakuAST: complete grammar support for declarator docs

[19:11] <Geth> ¦ rakudo/main: 

[19:11] <Geth> ¦ rakudo/main: Trailing declarator docs can now only be specified if they start on

[19:11] <Geth> ¦ rakudo/main: the same line as the declarand they refer to.  This is a much saner

[19:11] <Geth> ¦ rakudo/main: approach than in the legacy grammar where it was quite uncertain

[19:11] <Geth> ¦ rakudo/main: where (if ever) trailing declarator docs would get attached to.

[19:11] <Geth> ¦ rakudo/main: 

[19:11] <Geth> ¦ rakudo/main: <…commit message has 19 more lines…>

[19:11] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d9dd95c1dd

[19:11] <lizmat> *phew* that took a *lot* of iterations

[19:17] <lizmat> 771!

[19:40] <[Coke]> 771 is a lot of iterations!

[19:45] <nine> Shouldn't this test actually fail? https://github.com/rakudo/rakudo/blob/main/t/04-nativecall/18-routine-sig-sanity.t#L121

[19:46] <nine> It declares an our scoped class A while there already is a class by that name in the outer scope

[20:04] *** evalable6 left
[20:04] *** linkable6 left
[20:04] *** linkable6 joined
[20:05] *** evalable6 joined
[20:51] *** squashable6 left
[20:53] *** squashable6 joined
[21:41] *** sena_kun left
[22:14] <Geth> ¦ rakudo/main: ae0c69a935 | (Elizabeth Mattijsen)++ | 5 files

[22:14] <Geth> ¦ rakudo/main: RakuAST: add .raku / deparsing / tests for RakUAST::Statement::Need

[22:14] <Geth> ¦ rakudo/main: 

[22:14] <Geth> ¦ rakudo/main: Sadly, we need to make "import" work as well to really test it.

[22:14] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ae0c69a935

[22:41] <Geth> ¦ rakudo/main: 01abff7599 | (Elizabeth Mattijsen)++ | 3 files

[22:41] <Geth> ¦ rakudo/main: RakuAST: add missing parts for doc declarators on ::(Pointy)Block

[22:41] <Geth> ¦ rakudo/main: 

[22:41] <Geth> ¦ rakudo/main: So that declarator docs now also work on (pointy) blocks

[22:41] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/01abff7599

[23:25] *** evalable6 left
[23:25] *** linkable6 left
[23:26] *** evalable6 joined
[23:27] *** linkable6 joined
