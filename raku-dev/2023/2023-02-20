[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[01:36] *** evalable6 left
[01:36] *** linkable6 left
[01:37] *** linkable6 joined
[01:39] *** evalable6 joined
[02:22] *** frost joined
[03:59] *** codesections joined
[04:31] *** codesections left
[04:31] *** codesections joined
[04:52] *** codesections left
[04:52] *** codesections joined
[05:21] *** codesections left
[05:23] *** codesections joined
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[06:38] <bartolin_> c: 2018.09 role WithStub { method a() { ... } }; class C2901 does WithStub { multi method a() { "OHAI" } }

[06:38] <committable6> bartolin_, ¦2018.09: «4===SORRY!4=== Error while compiling /tmp/KhpOPSbAtb␤Method 'a' must be implemented by C2901 because it is required by roles: WithStub.␤at /tmp/KhpOPSbAtb:1␤ «exit code = 1»»

[06:38] <bartolin_> c: 2018.10 role WithStub { method a() { ... } }; class C2901 does WithStub { multi method a() { "OHAI" } }

[06:38] <committable6> bartolin_, ¦2018.10: «»

[06:40] <Geth> ¦ roast: usev6++ created pull request #831: Test implementing non-multi method stubbed in role

[06:40] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/831

[07:19] *** frost left
[07:45] *** sena_kun joined
[08:08] *** frost joined
[08:24] *** frost left
[09:43] *** ab5tract joined
[09:59] *** ab5tract left
[10:30] *** sena_kun left
[11:06] *** sena_kun joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:04] *** codesections left
[12:18] *** Xliff joined
[12:19] <Xliff> P6-GLib suite timing statistics for Raku 2022.12.1219.g.760.e.21.c.18

[12:19] <Xliff> Total number of projects: 33 (502844 loc)

[12:19] <Xliff> Total non-parallel compile times: 9018.770 (273.296 avg)

[12:19] <Xliff> Total parallel compile times: 1694.587 (51.351 avg) 5.322x speedup

[12:20] <lizmat> https://irclogs.raku.org/raku-dev/search.html?type=words&query=speedup&nicks=Xliff

[12:22] <Xliff> 18% increase in parallel from last week.

[12:24] <lizmat> yeah, but if I look at the commits of last week, nothing stands out

[12:27] <Xliff> lizmat: File locking may be a bit chaotic.

[12:28] <Xliff> Also... environment. Although I try to keep things as free as possible when I do timings.

[12:28] <lizmat> yeah, I wonder how much of the variation we see over the weeks, is actually noise

[12:28] <Xliff> I would not be surprised if that is significant.

[12:28] <lizmat> also: I still wonder if some versions of Rakudo are inherently slower than others because of a bad case of hash randomization

[12:28] <Xliff> That's the reason I do these across the weeks. Hoping that over time the noise can be filtered out.

[12:29] <Xliff> Hash randomization?

[12:29] <lizmat> the ways the buckets are dealt out in a hash

[12:31] <Xliff> Ah.

[12:39] *** Xliff left
[14:23] <Geth> ¦ roast: 1c7224ada5 | (Christian Bartolomäus)++ | S14-roles/stubs.t

[14:23] <Geth> ¦ roast: Test implementing non-multi method stubbed in role

[14:23] <Geth> ¦ roast: 

[14:23] <Geth> ¦ roast: ... as multi method in class. Compare

[14:23] <Geth> ¦ roast: https://github.com/Raku/old-issue-tracker/issues/2901

[14:23] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/1c7224ada5

[14:23] <Geth> ¦ roast: 937a093bb4 | (Vadim Belman)++ (committed using GitHub Web editor) | S14-roles/stubs.t

[14:23] <Geth> ¦ roast: Merge pull request #831 from usev6/old_issues_2901

[14:23] <Geth> ¦ roast: 

[14:23] <Geth> ¦ roast: Test implementing non-multi method stubbed in role

[14:23] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/937a093bb4

[15:03] <lizmat> notable6: weekly

[15:03] <notable6> lizmat, 1 note: 2023-02-15T23:23:00Z <guifa_>: https://arstechnica.com/information-technology/2023/02/451-malicious-packages-available-in-pypi-contained-crypto-stealing-malware/?comments=1&comments-page=1  <-- speaking of modules ha

[15:10] <lizmat> notable6: weekly reset

[15:10] <notable6> lizmat, Moved existing notes to “weekly_2023-02-20T15:10:50Z”

[15:10] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/02/20/2023-08-gherkining/

[16:31] *** ab5tract joined
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:11] *** sena_kun left
[19:02] *** sena_kun joined
[19:46] <tbrowder> lizmat++

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS: d8e177d86b | (Elizabeth Mattijsen)++ | 2 files

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS: Refactor significantly:

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS: 

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS: - return "warn" sub to its previous state

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS: - put .WARN logic into the control exception handler (this was the

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS:   place I was looking for earlier, it could use a different name)

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS: - the .WARN methods are now also expected to receive a Backtrace

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS:   object as the second positional argument

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS: - this restores the capability of having a CONTROL block catching

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS:   warnings if $*WARNINGS is something else than CX::Warn

[20:03] <Geth> ¦ rakudo/lizmat-WARNINGS: review: https://github.com/rakudo/rakudo/commit/d8e177d86b

[22:08] *** evalable6 left
[22:08] *** linkable6 left
[22:08] *** evalable6 joined
[22:11] *** linkable6 joined
[22:14] *** ab5tract left
[22:30] *** NemokoschKiwi joined
[22:44] *** sena_kun left
[22:59] *** NemokoschKiwi left
[23:26] <Geth> ¦ rakudo/lizmat-WARNINGS: 39e8a26416 | (Elizabeth Mattijsen)++ | src/core.c/control.pm6

[23:26] <Geth> ¦ rakudo/lizmat-WARNINGS: Remove trailing whitespace

[23:26] <Geth> ¦ rakudo/lizmat-WARNINGS: review: https://github.com/rakudo/rakudo/commit/39e8a26416

[23:27] <Geth> ¦ rakudo/main: c3b3701105 | (Elizabeth Mattijsen)++ | 2 files

[23:27] <Geth> ¦ rakudo/main: Remove trailing whitespace

[23:27] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c3b3701105

