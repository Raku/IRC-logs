[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[01:03] *** reportable6 left
[01:03] *** greppable6 left
[01:03] *** bloatable6 left
[01:03] *** squashable6 left
[01:03] *** linkable6 left
[01:03] *** sourceable6 left
[01:03] *** shareable6 left
[01:03] *** coverable6 left
[01:03] *** statisfiable6 left
[01:03] *** nativecallable6 left
[01:03] *** releasable6 left
[01:03] *** unicodable6 left
[01:03] *** evalable6 left
[01:03] *** quotable6 left
[01:03] *** bisectable6 left
[01:03] *** committable6 left
[01:03] *** committable6 joined
[01:03] *** quotable6 joined
[01:03] *** linkable6 joined
[01:03] *** sourceable6 joined
[01:03] *** nativecallable6 joined
[01:03] *** squashable6 joined
[01:03] *** releasable6 joined
[01:04] *** bisectable6 joined
[01:05] *** coverable6 joined
[01:05] *** unicodable6 joined
[01:05] *** statisfiable6 joined
[01:05] *** evalable6 joined
[01:05] *** shareable6 joined
[01:05] *** reportable6 joined
[01:06] *** greppable6 joined
[01:06] *** bloatable6 joined
[01:29] *** squashable6 left
[01:32] *** squashable6 joined
[02:47] *** frost joined
[03:06] *** frost left
[04:46] *** evalable6 left
[04:46] *** nativecallable6 left
[04:46] *** statisfiable6 left
[04:46] *** linkable6 left
[04:46] *** notable6 left
[04:46] *** greppable6 left
[04:46] *** coverable6 left
[04:46] *** sourceable6 left
[04:46] *** benchable6 left
[04:46] *** bisectable6 left
[04:46] *** releasable6 left
[04:46] *** quotable6 left
[04:46] *** committable6 left
[04:46] *** unicodable6 left
[04:46] *** tellable6 left
[04:46] *** shareable6 left
[04:46] *** evalable6 joined
[04:46] *** quotable6 joined
[04:46] *** notable6 joined
[04:46] *** sourceable6 joined
[04:46] *** coverable6 joined
[04:46] *** unicodable6 joined
[04:47] *** statisfiable6 joined
[04:47] *** committable6 joined
[04:47] *** linkable6 joined
[04:47] *** bisectable6 joined
[04:47] *** greppable6 joined
[04:48] *** tellable6 joined
[04:48] *** benchable6 joined
[04:48] *** nativecallable6 joined
[04:48] *** shareable6 joined
[04:49] *** releasable6 joined
[05:49] *** bloatable6 left
[05:49] *** nativecallable6 left
[05:49] *** notable6 left
[05:49] *** coverable6 left
[05:49] *** unicodable6 left
[05:49] *** quotable6 left
[05:49] *** committable6 left
[05:49] *** statisfiable6 left
[05:49] *** sourceable6 left
[05:49] *** squashable6 left
[05:49] *** reportable6 left
[05:49] *** linkable6 left
[05:49] *** benchable6 left
[05:49] *** evalable6 left
[05:49] *** greppable6 left
[05:49] *** tellable6 left
[05:49] *** bisectable6 left
[05:49] *** shareable6 left
[05:49] *** releasable6 left
[05:49] *** bisectable6 joined
[05:49] *** quotable6 joined
[05:50] *** committable6 joined
[05:50] *** reportable6 joined
[05:50] *** coverable6 joined
[05:50] *** evalable6 joined
[05:50] *** shareable6 joined
[05:50] *** squashable6 joined
[05:51] *** releasable6 joined
[05:51] *** linkable6 joined
[05:51] *** benchable6 joined
[05:51] *** nativecallable6 joined
[05:51] *** bloatable6 joined
[05:51] *** sourceable6 joined
[05:51] *** greppable6 joined
[05:51] *** tellable6 joined
[05:52] *** unicodable6 joined
[05:52] *** statisfiable6 joined
[05:52] *** notable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:29] *** camelia left
[06:29] *** leont left
[06:29] *** SmokeMachine left
[06:29] *** SmokeMachine joined
[06:31] *** heartburn left
[06:32] *** heartburn joined
[06:41] *** lucs left
[06:41] *** lucs joined
[06:44] *** leont joined
[07:05] <nine> What do you mean by "doesn't work"?

[07:08] *** squashable6 left
[07:09] *** squashable6 joined
[07:24] *** ab5tract left
[07:36] *** ab5tract joined
[07:47] *** sena_kun joined
[07:49] *** ab5tract left
[07:53] *** camelia joined
[08:00] *** frost92 joined
[08:10] *** frost92 left
[08:34] *** ab5tract joined
[08:35] *** frost98 joined
[08:37] *** frost98 left
[08:49] *** frost3 joined
[09:02] *** ab5tract left
[09:11] *** frost3 left
[10:37] *** |Tux| left
[10:40] *** |Tux| joined
[10:40] *** Tux__ joined
[10:44] *** |Tux| left
[11:25] <Geth> ¦ rakudo/main: bfb1fe31dc | (Elizabeth Mattijsen)++ | 2 files

[11:25] <Geth> ¦ rakudo/main: RakuAST: more =table tweaks

[11:25] <Geth> ¦ rakudo/main: 

[11:25] <Geth> ¦ rakudo/main: - bring back original <ws> semantics, instead of just space (0x20)

[11:25] <Geth> ¦ rakudo/main: - re-implement legacy podify sanitation into a single pass nqp

[11:25] <Geth> ¦ rakudo/main:   codepoint check, while adding support for removing backslashes

[11:25] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/bfb1fe31dc

[11:38] <lizmat> m: dd $=pod␤=begin pod␤=config foo :bar␤=end pod

[11:38] <camelia> rakudo-moar bfb1fe31d: OUTPUT: «[Pod::Block::Named.new(name => "pod", config => {}, contents => [Pod::Config.new(type => "foo", config => {:bar(Bool::True)})])]␤»

[11:39] <lizmat> TIL that there is a =config type :params statement

[11:39] <lizmat> doesn't appear to be documented, but it is tested

[11:41] <lizmat> this is different from other =foo pod statements, as it takes the first token to be the type, and the rest as config

[11:44] *** linkable6 left
[11:44] *** evalable6 left
[11:45] *** evalable6 joined
[11:46] *** linkable6 joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:05] <lizmat> nine: Invalid to edge 0 in NFA statelist   does that ring any bell ?

[12:21] <lizmat> nvm

[12:46] <Geth> ¦ roast: 943c20e4ed | (Elizabeth Mattijsen)++ | S26-documentation/09-configuration.t

[12:46] <Geth> ¦ roast: Fix test on pod config

[12:46] <Geth> ¦ roast: 

[12:46] <Geth> ¦ roast: :feist<1 2 3 4> was specified in the config.  That *should* be a List

[12:46] <Geth> ¦ roast: with the same semantics as <1 2 3 4>, yet the test was for Str, while

[12:46] <Geth> ¦ roast: the associated issue mentions that it should be a string.  Weird.

[12:46] <Geth> ¦ roast: 

[12:46] <Geth> ¦ roast: This is fixed in RakuAST, so todo the test in the meantime.

[12:46] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/943c20e4ed

[12:55] <Geth> ¦ rakudo/main: ad422bb6c2 | (Elizabeth Mattijsen)++ | 4 files

[12:55] <Geth> ¦ rakudo/main: RakuAST: add support for undocumented =config feature

[12:55] <Geth> ¦ rakudo/main: 

[12:55] <Geth> ¦ rakudo/main: - add token / action to handle =config

[12:55] <Geth> ¦ rakudo/main: - add legacy podifying logic for =config

[12:55] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ad422bb6c2

[13:19] *** kurahaupo left
[13:33] <Tux__> Rakudo v2023.04-72-gbfb1fe31d (v6.d) on MoarVM 2023.04-1-g965be0af5

[13:33] <Tux__> csv-test-xs-20      0.382 -  0.453

[13:33] <Tux__> csv-ip5xs           0.885 -  0.923

[13:33] <Tux__> test-t --race       0.992 -  1.001

[13:33] <Tux__> test-t              1.658 -  1.698

[13:33] <Tux__> csv-parser          3.446 -  3.613

[13:33] <Tux__> csv-ip5xs-20        5.419 -  5.993

[13:33] <Tux__> test                6.306 -  7.161

[13:33] <Tux__> test-t-20 --race    6.746 -  6.861

[13:33] <Tux__> test-t-20          19.335 - 19.935

[14:06] <lizmat> m: say "foo"\␤

[14:06] <camelia> rakudo-moar ad422bb6c: ( no output )

[14:06] <lizmat> TIL that a trailing \ at the end of code, will basically disable a whole program

[14:07] <lizmat> m: say "foo"\

[14:07] <camelia> rakudo-moar ad422bb6c: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> say "foo"\⏏<EOL>␤    expecting any of:␤        postfix␤»

[14:07] <lizmat> ah, and a ␤

[14:46] <Geth> ¦ roast: 1aa92c2010 | (Elizabeth Mattijsen)++ | S26-documentation/07a-tables.t

[14:46] <Geth> ¦ roast: Change tests for column dividers as text in pod tables

[14:46] <Geth> ¦ roast: 

[14:46] <Geth> ¦ roast: To satisfy a more sane behaviour in RakuAST.

[14:46] <Geth> ¦ roast: 

[14:46] <Geth> ¦ roast: In the legacy grammar, there is some magic logic that will interpret

[14:46] <Geth> ¦ roast: a "+" or "|" at the start of a line with only whitespace to the right

[14:46] <Geth> ¦ roast: until the next column divider, as a character.  This allows:

[14:46] <Geth> ¦ roast: <…commit message has 44 more lines…>

[14:46] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/1aa92c2010

[14:47] <lizmat> 814!

[15:13] <lizmat> notable6: weekly

[15:13] <notable6> lizmat, No notes for “weekly”

[15:15] *** guifa joined
[15:16] *** guifa_ left
[15:25] *** kurahaupo joined
[15:40] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/05/15/2023-20-so-survey/

[17:27] <lizmat> nine: wouldn't it be nice if RakuAST::SemiList would have a method that would return a List with constant values if all expression in the SemiList evaluated to constant values ?

[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:23] <nine> Getting a compile time constant value in general is prettey awkward right now

[18:36] <lizmat> yes, I am finding that out the hard way with pod config specifications

[19:39] *** heartburn left
[19:47] *** heartburn joined
[21:27] *** patrickb left
[21:27] *** patrickb joined
[21:53] *** squashable6 left
[21:54] *** sena_kun left
[21:56] *** squashable6 joined
[23:08] *** explorer joined
[23:23] *** explorer left
