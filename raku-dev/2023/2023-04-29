[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[02:29] <MasterDuke> nine: huh, thanks. will attempt that

[03:18] <MasterDuke> hm. so i added `has int $!p5isms;` and `nqp::bindattr_i($obj, int, '$!p5isms', $p5isms ?? 1 !! 0);` to RakuAST::Call::Name and then `p5isms => $*LANG.pragma('p5isms')` to all the places (i think) a RakuAST::Call::Name is created in src/Raku/Actions.nqp and rakudo builds, but i get `P6opaque: no such attribute '$!p5isms' on type int in a

[03:18] <MasterDuke> RakuAST::Call::Name when trying to bind a value` when running `RAKUDO_RAKUAST=1 raku -e 'use isms <Perl5>; say'`

[03:26] <MasterDuke> nevermind, `nqp::bindattr_i($obj, int, '$!p5isms', $p5isms ?? 1 !! 0);` should be `nqp::bindattr_i($obj, RakuAST::Call::Name, '$!p5isms', $p5isms ?? 1 !! 0);`

[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[07:18] *** reportable6 left
[07:18] *** evalable6 left
[07:18] *** nativecallable6 left
[07:18] *** linkable6 left
[07:18] *** greppable6 left
[07:18] *** bisectable6 left
[07:18] *** releasable6 left
[07:18] *** shareable6 left
[07:18] *** notable6 left
[07:18] *** sourceable6 left
[07:18] *** quotable6 left
[07:18] *** coverable6 left
[07:18] *** unicodable6 left
[07:18] *** tellable6 left
[07:18] *** benchable6 left
[07:18] *** statisfiable6 left
[07:18] *** reportable6 joined
[07:18] *** greppable6 joined
[07:18] *** evalable6 joined
[07:18] *** bisectable6 joined
[07:19] *** quotable6 joined
[07:19] *** unicodable6 joined
[07:19] *** coverable6 joined
[07:20] *** tellable6 joined
[07:20] *** notable6 joined
[07:20] *** statisfiable6 joined
[07:20] *** releasable6 joined
[07:20] *** nativecallable6 joined
[07:21] *** linkable6 joined
[07:21] *** sourceable6 joined
[07:21] *** shareable6 joined
[07:21] *** benchable6 joined
[07:48] <nine> lizmat: how early do you need core.c?

[08:01] *** kjp left
[08:01] *** kjp joined
[08:15] <Geth> ¦ rakudo/main: 134418bd16 | (Stefan Seifert)++ | src/Raku/Grammar.nqp

[08:15] <Geth> ¦ rakudo/main: RakuAST: fix regression in BEGIN time EVAL processing

[08:15] <Geth> ¦ rakudo/main: 

[08:15] <Geth> ¦ rakudo/main: Commit a7571cb482847267c176455e9d1b6680c0511a4c removed the old POD

[08:15] <Geth> ¦ rakudo/main: implementation from the grammar, but also removed an unrelated line

[08:15] <Geth> ¦ rakudo/main: leading to the regression.

[08:15] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/134418bd16

[08:19] *** sena_kun joined
[08:45] *** ab5tract joined
[08:50] *** [TuxCM] left
[08:51] *** [TuxCM] joined
[09:22] <lizmat> nine++   

[09:23] <lizmat> nine: *before* any code is encountered

[09:23] <lizmat> during parsing

[09:26] *** [TuxCM] left
[09:30] *** [TuxCM] joined
[09:30] <Geth> ¦ rakudo/main: 2dd66bcb85 | (Stefan Seifert)++ | 2 files

[09:30] <Geth> ¦ rakudo/main: RakuAST: load CORE.c setting early for POD parsing

[09:30] <Geth> ¦ rakudo/main: 

[09:30] <Geth> ¦ rakudo/main: Parsing of POD needs classes defined in the CORE.c setting, so load it

[09:30] <Geth> ¦ rakudo/main: early and unconditionally. Any other setting will be loaded on top of

[09:30] <Geth> ¦ rakudo/main: that anyway.

[09:30] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2dd66bcb85

[09:31] <nine> lizmat: you're not out of the water yet. $*CU.pod-content.push($_.value.make-legacy-pod); will fail because there's no $*CU yet

[09:31] <lizmat> nine: well, that's temporary anyway

[09:32] <lizmat> it will need to create the legacy pod at CHECK time anyway

[09:32] <lizmat> otherwise you won't be able to create custom RakuAST::Doc::Block nodes

[09:34] *** ab5tract left
[09:34] *** ab5tract joined
[09:41] <nine> I'll leave that in your capable hands :)

[09:48] <nine> And another broken spectest: throws-like { EVAL 'module MY;' }

[09:48] <nine> It's only coincidence that we throw the expected expection before realizing that the "unit" is missing

[09:49] *** [TuxCM] left
[09:52] <lizmat> m: say␤=head1 FOO␤$=pod

[09:52] <camelia> rakudo-moar 2dd66bcb8: OUTPUT: «===SORRY!===␤Argument to "say" seems to be malformed␤at <tmp>:1␤------> say⏏<EOL>␤Other potential difficulties:␤    Unsupported use of bare "say".  In Raku please use: .say if you meant␤    to call it as a method on $_, or u…»

[09:52] <nine> m: unit module MY;

[09:52] <camelia> rakudo-moar 2dd66bcb8: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Cannot use pseudo package MY in package name␤at <tmp>:1␤------> unit module MY⏏;␤    expecting any of:␤        generic role␤»

[09:52] <nine> m: package Foo { module MY { } }

[09:52] <camelia> rakudo-moar 2dd66bcb8: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Cannot use pseudo package MY in package name␤at <tmp>:1␤------> package Foo { module MY⏏ { } }␤    expecting any of:␤        generic role␤»

[09:52] <nine> m: module Foo::MY { }

[09:52] <camelia> rakudo-moar 2dd66bcb8: ( no output )

[09:53] <lizmat> MEH

[09:53] <lizmat> m: say␤=head1 FOO␤␤$=pod

[09:53] <camelia> rakudo-moar 2dd66bcb8: OUTPUT: «[Pod::Heading{:level("1")}␤  Pod::Block::Para␤    FOO␤]␤»

[09:53] <lizmat> TIL that you can have pod blocks in the middle of a statement

[09:54] <lizmat> nine: did you know that ?

[09:54] * nine is a total POD newb

[09:54] * lizmat was as well

[09:55] <lizmat> it's because pod blocks are basically the same as whitespace

[10:10] *** [TuxCM] joined
[10:35] <Geth> ¦ rakudo/main: b29e108487 | (Elizabeth Mattijsen)++ | src/Raku/Actions.nqp

[10:35] <Geth> ¦ rakudo/main: RakuAST: reorganize Actions.statement a bit

[10:35] <Geth> ¦ rakudo/main: 

[10:35] <Geth> ¦ rakudo/main: Move the common code to the end of the method, for readability,

[10:35] <Geth> ¦ rakudo/main: but mostly to allow common statement actions to be done in one

[10:35] <Geth> ¦ rakudo/main: place.  Also add some comments for clarity.

[10:35] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b29e108487

[10:37] <Geth> ¦ rakudo/main: aedeadf988 | (Stefan Seifert)++ | src/Raku/ast/name.rakumod

[10:37] <Geth> ¦ rakudo/main: RakuAST: treat COMPILING as pseudo-package

[10:37] <Geth> ¦ rakudo/main: 

[10:37] <Geth> ¦ rakudo/main: COMPILING seems to be a reserved name and should be prohibited for

[10:37] <Geth> ¦ rakudo/main: declarations as pseudo-package, even though it's not actually

[10:37] <Geth> ¦ rakudo/main: implemented as such.

[10:37] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/aedeadf988

[10:37] <Geth> ¦ rakudo/main: 8b462b40a6 | (Stefan Seifert)++ | 4 files

[10:37] <Geth> ¦ rakudo/main: RakuAST: prohibit using pseudo-package names in declarations

[10:37] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/8b462b40a6

[11:16] *** ab5tract left
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:17] <[TuxCM]> https://github.com/rakudo/rakudo/issues/2483 extended with my yesterday findings

[12:27] *** sena_kun left
[12:27] *** lucs_ joined
[12:38] *** lucs left
[12:40] *** sena_kun joined
[15:11] *** codesections joined
[15:27] *** coleman left
[15:39] *** coleman joined
[15:40] *** codesections left
[17:08] *** linkable6 left
[17:08] *** evalable6 left
[17:10] *** linkable6 joined
[17:11] *** evalable6 joined
[17:44] <lizmat> nine: ok, so I have the rakudoc blocks being added to the statement lists

[17:44] <lizmat> however, it looks like they don't have their PERFORM-CHECK methods getting called

[17:46] <lizmat> m: use v6.*; dd RakuAST::StatementList ~~ RakuAST::CheckTime

[17:46] <camelia> rakudo-moar 8b462b40a: OUTPUT: «Bool::False␤»

[17:46] <lizmat> meh

[17:55] <nine> Are those blocks RakuAST::CheckTime?

[17:56] <lizmat> the RakuAST::Doc::Blocks are

[17:57] <lizmat> think I found it

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:02] <nine> What was it?

[18:02] <lizmat> yup, StatementList.visit-children was explicitely ignoring RakuAST::Doc::Blocks

[18:03] <nine> Oh, yes, that can't be good.

[18:31] *** codesections joined
[18:32] <lizmat> codesections o/

[18:37] <lizmat> apparently we have spectests for pod inside code

[18:37] <lizmat> inside a statement

[18:37] <lizmat> apparently, having pod inside a {   } intended to be a hash, now codegens as a block

[18:38] <lizmat> also: having t/spec/S26-documentation/07b-tables.t pass until now, was a false positive

[18:38] *** Altai-man joined
[18:38] <lizmat> it only contains 4 dies-ok tests, and one of them doesn't die anymore

[18:40] <lizmat> nine: re the block / hash test, any idea where I should look for that?

[18:41] *** sena_kun left
[18:49] *** codesections left
[18:56] <lizmat> I'm inclined to push even though tests are +1 -1

[18:57] <lizmat> with the note that the passing of S02-lexical-conventions/pod-in-multi-line-exprs.t before was a false positive

[18:57] <lizmat> nine: ^^  ok with that ?

[19:06] *** codesections joined
[19:09] *** [TuxCM] left
[19:24] *** [TuxCM] joined
[19:48] <nine> lizmat: block-or-hash in src/Raku/ast/code.rakumod

[19:49] *** codesections left
[19:50] *** codesections joined
[20:07] *** codesections left
[20:09] <nine>  If the test previously passing was just a false positive, "regressing" it is ok, I'd say

[20:31] *** [TuxCM] left
[20:31] *** [TuxCM] joined
[21:17] <vrurg> I wonder, if a BOOTHash corruption is the primary suspect of a problem, is there a way to track it down somehow? Worst case, it's a memory corruption, but could be something else.

[21:29] *** [TuxCM] left
[21:31] *** [TuxCM] joined
[21:54] <Geth> ¦ rakudo/main: 2bd735225e | (Elizabeth Mattijsen)++ | 6 files

[21:54] <Geth> ¦ rakudo/main: RakuAST: RakuDoc blocks now interpreted correctly

[21:54] <Geth> ¦ rakudo/main: 

[21:54] <Geth> ¦ rakudo/main: Legacy pod blocks are now correctly created in $=pod from RakuAST

[21:54] <Geth> ¦ rakudo/main: objects, by moving the creation of the legace pod objects from the

[21:54] <Geth> ¦ rakudo/main: grammar to the CHECK time phase.

[21:54] <Geth> ¦ rakudo/main: 

[21:54] <Geth> ¦ rakudo/main: In the grammar, RakuDoc blocks are first stored in a dynamic array

[21:54] <Geth> ¦ rakudo/main: <…commit message has 9 more lines…>

[21:54] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2bd735225e

[21:54] <lizmat> 794!

[21:55] <lizmat> *phew*!

[21:55] <lizmat> sleep&

[22:31] *** linkable6 left
[22:31] *** evalable6 left
[22:33] *** evalable6 joined
[22:33] *** linkable6 joined
[23:13] *** Altai-man left
[23:34] *** [TuxCM] left
[23:48] *** [TuxCM] joined
[23:57] *** djinni` left
