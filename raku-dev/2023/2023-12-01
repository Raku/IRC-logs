[00:55] *** MasterDuke joined
[03:15] <Geth> ¬¶ rakudo: vrurg++ created pull request #5480: Minor cleanups for #5477

[03:15] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/5480

[03:15] <linkable6> RAKUDO#5477 [closed]: https://github.com/rakudo/rakudo/pull/5477 Move closer to complete generics instantiation

[06:08] *** MasterDuke left
[09:24] *** sena_kun joined
[09:42] *** sena_kun left
[12:02] *** [Tux] left
[12:04] *** [Tux] joined
[13:07] <[Coke]> DOCS#1234

[13:07] <linkable6> DOCS#1234 [closed]: https://github.com/Raku/doc/pull/1234 Docs for ‚â§ ‚â• ‚â† unicode ops

[13:07] <[Coke]> huh.

[13:07] <[Coke]> I assume that's an AlexDaniel++

[13:08] <lizmat> yeah, many of the bots are functional again

[13:08] <lizmat> like 17e3d0e6c75863ee090d2

[13:08] <linkable6> (2023-11-23) https://github.com/rakudo/rakudo/commit/17e3d0e6c7 RakuAST: don't apply pragma semantics to native types

[15:34] <Geth> ¬¶ rakudo/revert-5477-complete-generic-instantiation: 1b73d18d85 | (Vadim Belman)++ (committed using GitHub Web editor) | 30 files

[15:34] <Geth> ¬¶ rakudo/revert-5477-complete-generic-instantiation: Revert "Move closer to complete generics instantiation"

[15:34] <Geth> ¬¶ rakudo/revert-5477-complete-generic-instantiation: review: https://github.com/rakudo/rakudo/commit/1b73d18d85

[15:35] <Geth> ¬¶ rakudo: vrurg++ created pull request #5481: Revert "Move closer to complete generics instantiation"

[15:35] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/5481

[15:36] <Geth> ¬¶ rakudo/main: 1b73d18d85 | (Vadim Belman)++ (committed using GitHub Web editor) | 30 files

[15:36] <Geth> ¬¶ rakudo/main: Revert "Move closer to complete generics instantiation"

[15:36] <Geth> ¬¶ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1b73d18d85

[15:36] <Geth> ¬¶ rakudo/main: 73470580c9 | (Vadim Belman)++ (committed using GitHub Web editor) | 30 files

[15:36] <Geth> ¬¶ rakudo/main: Merge pull request #5481 from rakudo/revert-5477-complete-generic-instantiation

[15:36] <Geth> ¬¶ rakudo/main: 

[15:36] <Geth> ¬¶ rakudo/main: Revert "Move closer to complete generics instantiation"

[15:36] <Geth> ¬¶ rakudo/main: review: https://github.com/rakudo/rakudo/commit/73470580c9

[16:14] *** donaldh joined
[16:19] <donaldh> I was looking at https://docs.raku.org today and sadly I found it pretty darn unusable.

[16:19] <donaldh> There's a significant delay between each char as I try to type into the search box. 

[16:21] <donaldh> When searching for Str, the result for the Str class is not visible until you scroll far down the results. I followed the first Str result which took me to https://docs.raku.org/routine/Str and left me very confused.

[16:22] <donaldh> There seem to be 2 scrollbars and trying to page down after selecting a search result only moves the outer scroll region. I thought there was no more content until I clicked to focus on the inner region and was able to scroll further down.

[16:24] <donaldh> If I type "string" in the search box, I don't get any results for the Str class.

[16:26] <donaldh> If I didn't already know there was a page for Str with docs for all its methods, I would have given up. I'm a reasonably experienced Raku user so I persevered. I think this would be a bit horrifying for a newcomer.

[16:29] <discord-raku-bot> <nemokosch> This is the usual "fix something and something else breaks" situation

[16:29] <discord-raku-bot> <nemokosch> currently, all search results are fetched, therefore anything very short will cause a hang

[16:30] <discord-raku-bot> <nemokosch> previously, only the first N results were fetched and there was no way to even access the rest

[16:31] <discord-raku-bot> <nemokosch> I think on average it's not that bad - as long as you can accept that the first 1-2 characters will always cause a couple seconds freeze

[16:31] <donaldh> Maybe shouldn't send a search for a single character. It's also blocking the browser from showing the typed chars, which should be avoidable.

[16:31] <discord-raku-bot> <nemokosch> If you are searching for something that has a gazillion results, that's always going to be bad; ideas are welcome for that

[16:32] <discord-raku-bot> <nemokosch> I was thinking about running a timer before fetching anything so that intermediary searches can be prevented

[16:32] <discord-raku-bot> <nemokosch> the thing is, knowing the little human resources the doc site is running on, I didn't really want to bring it up

[16:32] <discord-raku-bot> <nemokosch> kind of a "patches welcome" situation

[16:33] <donaldh> Yeah. I realise there are valid single-char searches when searching for raku operators, but a time delay or a min 3 chars before sending any search could be a workable solution.

[16:34] <discord-raku-bot> <nemokosch> there should be some solution for sure

[16:34] <discord-raku-bot> <nemokosch> you could also bring this up at #raku-doc or open an issue in the Raku/doc-website github repo

[16:38] <discord-raku-bot> <nemokosch> you know, the current position is a result of steps that always seemed to be in the right direction. Knowing that "from the A to the Z", I'm kind of content with the way it works, knowing the current states and the tradeoffs. Freezing for a couple of seconds is more acceptable to me than a chaotic order or bad navigability of the results

[16:39] <donaldh> Sure. I've not been active in the raku community for a few years so I just jumped on here 'cos it's still in my IRC. I'll join #raku-doc and if I have time I might be able to contribute a fix or two.

[16:39] <discord-raku-bot> <nemokosch> Sure, it could be better but that's how it went the whole time: changing something in a direction that "we" (whoever was more involved in a particular change) thought was better. This is how it goes normally.

[16:40] <discord-raku-bot> <nemokosch> Not having a lot of people with UX and frontend development experience, it's kind of a stumbly process

[16:41] <discord-raku-bot> <nemokosch> And as much as the problem is legit, if you understand why it happens, I would say it doesn't seem so dramatic. If there was a full site load, you'd have to wait a similar amount of time without responsivity

[16:43] <discord-raku-bot> <nemokosch> full matches should be prioritized over something that is just contained, though

[16:44] <discord-raku-bot> <nemokosch> that's for sure

[16:44] <discord-raku-bot> <nemokosch> after all, the order of the results is the main value provided by a search

[16:46] <donaldh> The search UX is not my main concern ‚Äì it's more that the docs for Str seem buried and hard to "discover". I think there are a couple of things that would help: 1. Add a page for strings that would appear at the top of the search results under "Language". It should match for "Str" and "string. 2. Add more links from pages to the page for class Str.

[16:48] <discord-raku-bot> <nemokosch> I wouldn't say "hard to discover", not to something like that

[16:48] <discord-raku-bot> <nemokosch> it's not something you accidentally type, you probably know what you are looking for

[16:49] <discord-raku-bot> <nemokosch> and if you do, it's pretty easy to find; actually, probably easier without search than with it

[16:49] <donaldh> If I were a new user to the language and I wanted to learn how to work with strings, I would type "string" into the search box.

[16:49] <donaldh> The results are not helpful.

[16:50] <discord-raku-bot> <nemokosch> the problem is, the "doc site" is not one thing

[16:50] <discord-raku-bot> <nemokosch> it's two at least

[16:50] <donaldh> > probably easier without search than with it

[16:50] <discord-raku-bot> <nemokosch> it is a reference on one hand, and I'd expect that somebody who types "Str" wants that use

[16:51] <donaldh> I agree, the Types page gets me there quicker. But it's still buried at the bottom of the page and that takes me back to the scroll problem. Page down does not work.

[16:51] <discord-raku-bot> <nemokosch> and it is kind of a guide on the other hand, and that is really hard to look up indeed, but it's also pretty hard to mitigate

[16:52] <discord-raku-bot> <nemokosch> my usual stance on the guide usage is that there should simply be a lot of cross-referencing

[16:52] <discord-raku-bot> <nemokosch> it helps more than trying to make it into some lookup-table style

[16:54] <discord-raku-bot> <nemokosch> page down does work... if you click into that view. This is another "problem caused by a solution" situation

[16:55] <discord-raku-bot> <nemokosch> I would naively assume, though, that the middle, "content" view could be just made smaller, and then the whole site should fit into one page, leaving only one scroll bar

[16:56] <discord-raku-bot> <nemokosch> anyway, I'm already late for something, gotta go üòÖ

[16:56] <donaldh> üëç

[16:57] <lizmat> donaldh please make a doc issue with your findings and suggestions

[17:05] <donaldh> I will do. I'll hopefully manage to contribute some PRs as well.

[17:07] <lizmat> donaldh: would you be interested in writing an Advent post ?

[17:33] <donaldh> lizmat: hmm, not sure I have a topic in mind, or the time to do something worthy.

[17:34] <lizmat> donaldh: no worries...  thanks for at least considering :-)

[17:36] <donaldh> I see there are quite a few days free. 

[17:37] <El_Che> donaldh: it can be yours for the right price!

[18:29] <[Coke]> added a feature request for doc-website so that if someone searches for, e.g. "string", that "Str" would be considered a match as well. (and to make it configurable so we can guide other searches as well)

[18:29] <[Coke]> Feel free to follow up on that in raku-doc

[18:45] *** sena_kun joined
[22:37] *** sena_kun left
