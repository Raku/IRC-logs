[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[01:00] *** linkable6 left
[01:00] *** evalable6 left
[01:01] *** evalable6 joined
[01:02] *** linkable6 joined
[01:54] <japhb> [Coke]: Missing UTF-16 garbled Windows Terminal screenshot fixed.  Thanks for the reminder.  :-)

[01:55] <[Coke]> 👍

[02:02] *** evalable6 left
[02:02] *** linkable6 left
[02:02] *** linkable6 joined
[02:03] *** evalable6 joined
[02:27] *** MasterDuke joined
[05:16] *** epony joined
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[07:13] *** coverable6 left
[07:13] *** reportable6 left
[07:13] *** committable6 left
[07:13] *** sourceable6 left
[07:13] *** squashable6 left
[07:13] *** releasable6 left
[07:13] *** shareable6 left
[07:13] *** bloatable6 left
[07:13] *** statisfiable6 left
[07:13] *** notable6 left
[07:13] *** tellable6 left
[07:13] *** benchable6 left
[07:13] *** unicodable6 left
[07:13] *** quotable6 left
[07:13] *** benchable6 joined
[07:13] *** coverable6 joined
[07:14] *** notable6 joined
[07:14] *** unicodable6 joined
[07:14] *** sourceable6 joined
[07:14] *** statisfiable6 joined
[07:14] *** quotable6 joined
[07:15] *** reportable6 joined
[07:15] *** tellable6 joined
[07:15] *** releasable6 joined
[07:15] *** bloatable6 joined
[07:15] *** squashable6 joined
[07:15] *** shareable6 joined
[07:16] *** committable6 joined
[08:06] *** nine left
[08:06] *** nine joined
[08:22] *** sena_kun joined
[11:08] <lizmat> m: say v6c cmp v6.c TIL

[11:08] <camelia> rakudo-moar e6e287619: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> say v6c cmp v6.c⏏ TIL␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤        statement mod…»

[11:08] <lizmat> m: say v6c cmp v6.c  # TIL

[11:08] <camelia> rakudo-moar e6e287619: OUTPUT: «Same␤»

[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:04] <Geth> ¦ rakudo/main: 88e479f888 | (Stefan Seifert)++ | 4 files

[12:04] <Geth> ¦ rakudo/main: RakuAST: give correct error message when accessing non-existing package variable

[12:04] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/88e479f888

[13:42] <lizmat> So making progress on getting declarator docs working

[13:42] <lizmat>     token comment:sym<#|> {

[13:42] <lizmat>         '#|' \h $<attachment>=[\N*]

[13:42] <lizmat>         { nqp::push(@*LEADING-DOC, ~$<attachment>) }

[13:42] <lizmat>     }

[13:42] <lizmat> nine: any idea why that would be called 3 times when just having:

[13:42] <lizmat> #| This is a sub

[13:42] <lizmat> sub a() { }

[13:45] <lizmat> ah, this only appears to happen at the compunit scope

[14:31] <Geth> ¦ rakudo/main: 7dd3696b56 | (Stefan Seifert)++ | src/Raku/ast/code.rakumod

[14:31] <Geth> ¦ rakudo/main: RakuAST: fix package subs not found before their lexical location in code

[14:31] <Geth> ¦ rakudo/main: 

[14:31] <Geth> ¦ rakudo/main: Fixes: Foo::foo; package Foo { our sub foo() {} }

[14:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7dd3696b56

[14:31] <Geth> ¦ rakudo/main: bd084fc3e4 | (Stefan Seifert)++ | src/Raku/ast/variable-declaration.rakumod

[14:31] <Geth> ¦ rakudo/main: RakuAST: fix package variables being VMNull before their lexical location

[14:31] <Geth> ¦ rakudo/main: 

[14:31] <Geth> ¦ rakudo/main: Fixes: Foo::foo; package Foo { our $x = 1; our sub foo() { $x.defined } }

[14:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/bd084fc3e4

[14:55] *** epony left
[15:01] *** epony joined
[15:23] <lizmat> nine: re pod strings: I wonder whether we really need to make them all StrLiterals

[15:24] <lizmat> the result of all pod strings is basically a big WVal array in $=pod

[16:04] <[Tux]> where is "where" documented for "multi method foo (Int:D $x where ...)"? (I want this case to only allow 0..5)

[16:05] <[Tux]> I scanned docs.raku.org for "where" but to no avail

[16:06] <lizmat> https://docs.raku.org/language/signatures.html#Type_constraints

[16:08] <[Tux]> So my guessed "(Int:D $x where { 0 <= * <= 5 })" should be correct

[16:11] <[Coke]> you need $_ there, inside the {}s

[16:12] <[Coke]> m: sub x(Int:D $x where 0 <= * <=5) { $x.say }; x(-3)

[16:12] <camelia> rakudo-moar bd084fc3e: OUTPUT: «Constraint type check failed in binding to parameter '$x'; expected anonymous constraint to be met but got Int (-3)␤  in sub x at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:12] <[Coke]> without the {}

[16:12] <[Coke]> you can use the *

[16:12] <lizmat> m: sub a (Int:D $x where 0 <= * <= 5) { }

[16:12] <camelia> rakudo-moar bd084fc3e: ( no output )

[16:13] <lizmat> m: sub a (Int:D $x where { 0 <= $_  <= 5 }) { }

[16:13] <camelia> rakudo-moar bd084fc3e: ( no output )

[16:47] <ugexe> Should https://github.com/rakudo/rakudo/blob/bd084fc3e42f9aeac894e9805b6287b0756cc89c/src/core.c/Exception.pm6#L88-L89 should start with `my $!;`?

[16:48] <ugexe> there are a couple of other instances of checking global `$!` after a `try` in there as well

[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:13] <Geth> ¦ rakudo/main: 00d35fbd89 | (Elizabeth Mattijsen)++ | src/Raku/ast/doc-declarator.rakumod

[18:13] <Geth> ¦ rakudo/main: RakuAST: add RakuAST::Doc::DeclaratorTarget.set-leading/trailing

[18:13] <Geth> ¦ rakudo/main: 

[18:13] <Geth> ¦ rakudo/main: For completeness

[18:13] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/00d35fbd89

[18:13] <Geth> ¦ rakudo/main: f7a0caeae4 | (Elizabeth Mattijsen)++ | 3 files

[18:13] <Geth> ¦ rakudo/main: RakuAST: initial stab at integrating declarator blocks

[18:13] <Geth> ¦ rakudo/main: 

[18:14] <Geth> ¦ rakudo/main: - Add X::Syntax::Pod::DeclaratorTrailing::MissingDeclarand error

[18:14] <Geth> ¦ rakudo/main:   class to mark trailing declarator doc that cannot be attached to

[18:14] <Geth> ¦ rakudo/main:   anything

[18:14] <Geth> ¦ rakudo/main: - Add tokens for #| #|(...) #= #=(...) declarator docs to grammar

[18:14] <Geth> ¦ rakudo/main: - Add associated methods to actions

[18:14] <Geth> ¦ rakudo/main: <…commit message has 16 more lines…>

[18:14] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f7a0caeae4

[18:32] <lizmat> https://gist.github.com/lizmat/24de913b31bf5e6e6492d77c4e422c10   so is this a trailing declarator doc bug ??

[18:59] <Geth> ¦ rakudo/main: a930b3ba2f | (Elizabeth Mattijsen)++ | 2 files

[18:59] <Geth> ¦ rakudo/main: RakuAST: multiple calls to tokens are apperently normal

[18:59] <Geth> ¦ rakudo/main: 

[18:59] <Geth> ¦ rakudo/main: The legacy grammar had a way to make sure that each leading or trailing

[18:59] <Geth> ¦ rakudo/main: declarator doc was only added once.  Copy the same mechanism into the

[18:59] <Geth> ¦ rakudo/main: Raku grammar

[18:59] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/a930b3ba2f

[19:12] <nine> LOL

[19:12] <nine> nine@sphinx:~/rakudo (main =)> RAKUDO_RAKUAST=1 ./rakudo-m --ll-exception -e 'class Bar::Tap { }; say Bar::Tap.WHO'

[19:12] <nine> Tap

[19:13] <nine> nine@sphinx:~/rakudo (main =)> RAKUDO_RAKUAST=1 ./rakudo-m --ll-exception -e 'class Bar::Foo { }; say Bar::Foo.WHO'

[19:13] <nine> Bar::Foo

[19:13] <lizmat> so it's looking up the parts in the setting ?

[19:13] <lizmat> m: say Q|class Bar::Tap { }; say Bar::Tap.WHO|.AST.EVAL

[19:13] <camelia> rakudo-moar a930b3ba2: OUTPUT: «===SORRY!=== Error while compiling ␤Confused␤------> class Bar::Tap { }; say Bar::Tap.WHO⏏<EOL>␤»

[19:14] <lizmat> meh

[19:15] <nine> Lexically:

[19:15] <nine> nine@sphinx:~/rakudo (main =)> RAKUDO_RAKUAST=1 ./rakudo-m --ll-exception -e 'class Foo { }; class Bar::Foo { }; say Bar::Foo.WHO'

[19:15] <nine> Foo

[19:54] <Geth> ¦ rakudo/main: 679d5c41c6 | (Stefan Seifert)++ | src/Raku/ast/scoping.rakumod

[19:54] <Geth> ¦ rakudo/main: RakuAST: fix wrongful stealing of stashes

[19:54] <Geth> ¦ rakudo/main: 

[19:54] <Geth> ¦ rakudo/main: With multi-part package names, we could have found the final part of the

[19:54] <Geth> ¦ rakudo/main: name lexically and then went on to steal that totally unrelated

[19:54] <Geth> ¦ rakudo/main: package's WHO.

[19:54] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/679d5c41c6

[19:54] <nine> That's got to be my most favourite commit title of all time :)

[19:56] *** linkable6 left
[19:56] *** evalable6 left
[19:56] <lizmat> hehe

[19:58] <Geth> ¦ rakudo/main: f380b87ba7 | (Elizabeth Mattijsen)++ | 3 files

[19:58] <Geth> ¦ rakudo/main: RakuAST: fix .raku of Rakuast::Doc::DeclaratorTarget objects

[19:58] <Geth> ¦ rakudo/main: 

[19:58] <Geth> ¦ rakudo/main: Creating a .raku representation of object 1 that has an object 2 as

[19:58] <Geth> ¦ rakudo/main: an attribute, that has object 1 as an attribute, it is a bit of a

[19:58] <Geth> ¦ rakudo/main: challenge to prevent infinilooping.

[19:58] <Geth> ¦ rakudo/main: 

[19:58] <Geth> ¦ rakudo/main: This adds a "declarator-docs" method to DeclaratorTargets, which

[19:58] <Geth> ¦ rakudo/main: <…commit message has 7 more lines…>

[19:58] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f380b87ba7

[19:59] *** evalable6 joined
[19:59] *** linkable6 joined
[20:16] *** Geth__ joined
[20:16] *** lizmat_ joined
[20:16] *** RakuIRCLogger left
[20:18] *** Geth left
[20:18] *** lizmat left
[20:18] *** lizmat_ left
[20:19] *** lizmat joined
[20:29] *** discord-raku-bot joined
[21:33] *** heartburn left
[21:40] *** heartburn joined
[22:17] *** lizmat left
[22:18] *** lizmat joined
[22:21] *** lizmat left
[22:21] *** lizmat joined
