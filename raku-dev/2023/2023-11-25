[03:13] *** Voldenet_ joined
[03:14] *** Voldenet left
[03:14] *** Voldenet_ is now known as Voldenet

[04:13] *** Voldenet_ joined
[04:14] *** Voldenet left
[04:14] *** Voldenet_ is now known as Voldenet

[06:00] <[Coke]> tbrowder__: I don't think there's an official supported version. if someone reportsd a bug in an older version, it's best effort.

[09:44] *** sena_kun joined
[09:58] *** japhb left
[10:53] *** sena_kun left
[12:15] <tbrowder__> ok, but does that mean,

[12:18] <tbrowder__>  **** is there any guess as to how new a version is needed? i'm considering getting a refurb mac laptop (for my wife of course!) and wonder how cheap i can get one os-version-wise) and use Raku on it.

[12:20] <lizmat> bisectable6: say grammar A { token TOP { <.print>+ } }.parse("foo")

[12:20] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[12:21] <bisectable6> lizmat, More than 3 changes to bisect, please try a narrower range like old=2023.10 new=HEAD

[12:21] <bisectable6> lizmat, Output on all releases: https://gist.github.com/30066099f15010d0ef7117ff0e75bae1

[12:21] <lizmat> bisectable6: old=2022.01 say grammar A { token TOP { <.print>+ } }.parse("foo")

[12:21] <bisectable6> lizmat, Cannot find revision “2022.01” (did you mean “2022.12”?)

[12:21] <lizmat> bisectable6: old=2022.02 say grammar A { token TOP { <.print>+ } }.parse("foo")

[12:21] <bisectable6> lizmat, Bisecting by exit code (old=2022.02 new=9b65e88). Old exit code: 1

[12:22] <bisectable6> lizmat, bisect log: https://gist.github.com/bc3983f959a3962c55df8c817525d29c

[12:22] <bisectable6> lizmat, (2023-11-10) https://github.com/rakudo/rakudo/commit/bd2c719ed4126a5738cda52e114906accf6d9b3c

[12:59] *** japhb joined
[13:04] *** japhb left
[13:23] <[Tux]> Rakudo v2023.11-12-g9b65e880c (v6.d) on MoarVM 2023.11-1-gbe03e26fc

[13:23] <[Tux]> csv-test-xs-20      0.140 -  0.140

[13:23] <[Tux]> csv-ip5xs           0.260 -  0.282

[13:23] <[Tux]> test-t --race       0.282 -  0.288

[13:23] <[Tux]> test-t              0.421 -  0.440

[13:23] <[Tux]> csv-ip5xs-20        1.131 -  1.148

[13:23] <[Tux]> test-t-20 --race    1.217 -  1.222

[13:23] <[Tux]> csv-parser          1.587 -  1.588

[13:23] <[Tux]> test                1.934 -  2.019

[13:23] <[Tux]> test-t-20           5.171 -  5.181

[14:10] *** japhb joined
[14:17] *** japhb left
[14:28] <vrurg_> What is the fastest way to create most simple closure with the legacy compiler? Like the World.create_thunk, but capturing?'

[14:28] *** vrurg_ is now known as vrurg

[14:31] <lizmat> I have nooo idea 

[14:36] <vrurg> I guess so. :) 

[14:37] <vrurg> Dammit, very simple solution to a really big problem with instantiating generics – and I'm stuck in implementing it because of the gaps in my knowledge. :(

[14:50] *** sena_kun joined
[15:45] <coleman> tbrowder__ I think the only constraint on how old a Raku a mac could support would be compiler tools.

[15:46] <coleman> I would be very surprised if you had any trouble. Worst case scenario is you would have to compile things yourself. But Rakudo compilation is easy.

[15:59] <discord-raku-bot> <nemokosch> https://github.com/Raku/raku.org/pull/184 who would review and merge this? What is needed for it?

[16:24] <coleman> It looks good to go. But it's late in Mumbai for andinus, and I'd rather merge while he's chipper

[16:26] <discord-raku-bot> <nemokosch> fair, thank you

[16:26] <discord-raku-bot> <nemokosch> I don't mean to rush things, it's just often not obvious who the "person of contact" is

[16:40] <coleman> No problem. I think it will be a nice improvement to move onto a new framework

[16:40] <ab5tract> I’ve been playing with Raku / Zig interop. There’s an advent post with the frame story coming in a week or two but in the mean time I thought folks might be interested to read some timings and see some example code: https://gist.github.com/ab5tract/61e08cfaf0bb3e67b3a3dc009fa3cc7a#file-run-notes-md

[16:44] <discord-raku-bot> <nemokosch> this is very educational

[16:45] <discord-raku-bot> <nemokosch> did you have to do anything on the Zig side for C ABI compatibility?

[16:49] <ab5tract> Beyond declaring the struct `extern`, nothing at all :)

[16:51] <ab5tract> there’s some conversion from the C-style strings to the more common spans, using for example `std.mem.span(address)` to conform to the signatures of the Zig sodlib.

[16:51] <ab5tract> *stdlib

[16:51] <ab5tract> But that’s just normal pointer juggling in Zig

[16:55] <discord-raku-bot> <nemokosch> so Str is mapped to char* basically?

[16:56] <ab5tract> Precisely

[16:57] <ab5tract> in zig that’s `[*:0]const u8` a pointer to a zero-terminated array of unknown length

[16:58] <ab5tract> Of _knowable_, but unknown, length

[16:58] <discord-raku-bot> <nemokosch> gotcha

[18:04] *** japhb joined
[18:19] *** japhb left
[18:19] *** japhb joined
[18:43] *** japhb left
[18:48] *** japhb joined
[18:56] *** japhb left
[18:57] *** japhb joined
[20:34] <Geth> ¦ rakudo/main: ecea487844 | (Patrick Böker)++ | src/core.c/Promise.rakumod

[20:34] <Geth> ¦ rakudo/main: Microoptimize Promise.then(:synchronous)

[20:34] <Geth> ¦ rakudo/main: 

[20:34] <Geth> ¦ rakudo/main: Thanks to japhb for idea and implementation.

[20:34] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ecea487844

[21:48] *** sena_kun left
[21:49] *** sena_kun joined
[22:23] *** AlexDaniel joined
[22:56] *** sena_kun left
[23:25] *** AlexDaniel left
