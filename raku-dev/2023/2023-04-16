[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[01:00] *** unicodable6 left
[01:00] *** nativecallable6 left
[01:00] *** tellable6 left
[01:00] *** statisfiable6 left
[01:00] *** bloatable6 left
[01:00] *** reportable6 left
[01:00] *** linkable6 left
[01:00] *** committable6 left
[01:00] *** evalable6 left
[01:00] *** sourceable6 left
[01:00] *** notable6 left
[01:00] *** squashable6 left
[01:00] *** greppable6 left
[01:00] *** benchable6 left
[01:00] *** shareable6 left
[01:00] *** releasable6 left
[01:00] *** bisectable6 left
[01:00] *** quotable6 left
[01:01] *** greppable6 joined
[01:01] *** evalable6 joined
[01:01] *** tellable6 joined
[01:02] *** bisectable6 joined
[01:02] *** sourceable6 joined
[01:02] *** squashable6 joined
[01:02] *** releasable6 joined
[01:02] *** nativecallable6 joined
[01:02] *** reportable6 joined
[01:03] *** linkable6 joined
[01:03] *** notable6 joined
[01:03] *** quotable6 joined
[01:03] *** benchable6 joined
[01:03] *** statisfiable6 joined
[01:03] *** shareable6 joined
[01:03] *** unicodable6 joined
[01:03] *** bloatable6 joined
[01:03] *** committable6 joined
[03:56] *** sourceable6 left
[03:56] *** linkable6 left
[03:56] *** committable6 left
[03:56] *** bisectable6 left
[03:56] *** bloatable6 left
[03:56] *** squashable6 left
[03:56] *** reportable6 left
[03:56] *** evalable6 left
[03:56] *** unicodable6 left
[03:56] *** greppable6 left
[03:56] *** releasable6 left
[03:56] *** quotable6 left
[03:56] *** statisfiable6 left
[03:56] *** benchable6 left
[03:56] *** notable6 left
[03:56] *** coverable6 left
[03:56] *** nativecallable6 left
[03:56] *** shareable6 left
[03:56] *** squashable6 joined
[03:57] *** unicodable6 joined
[03:57] *** notable6 joined
[03:57] *** benchable6 joined
[03:57] *** sourceable6 joined
[03:58] *** quotable6 joined
[03:58] *** evalable6 joined
[03:58] *** coverable6 joined
[03:58] *** linkable6 joined
[03:58] *** committable6 joined
[03:59] *** statisfiable6 joined
[03:59] *** nativecallable6 joined
[03:59] *** releasable6 joined
[03:59] *** reportable6 joined
[03:59] *** greppable6 joined
[03:59] *** bloatable6 joined
[03:59] *** shareable6 joined
[03:59] *** bisectable6 joined
[04:59] *** quotable6 left
[04:59] *** committable6 left
[04:59] *** notable6 left
[04:59] *** tellable6 left
[04:59] *** statisfiable6 left
[04:59] *** reportable6 left
[04:59] *** releasable6 left
[04:59] *** shareable6 left
[04:59] *** squashable6 left
[04:59] *** greppable6 left
[04:59] *** benchable6 left
[04:59] *** bloatable6 left
[04:59] *** bisectable6 left
[04:59] *** sourceable6 left
[04:59] *** unicodable6 left
[04:59] *** evalable6 left
[04:59] *** notable6 joined
[05:00] *** squashable6 joined
[05:00] *** statisfiable6 joined
[05:00] *** tellable6 joined
[05:00] *** shareable6 joined
[05:01] *** bloatable6 joined
[05:01] *** sourceable6 joined
[05:01] *** quotable6 joined
[05:01] *** committable6 joined
[05:01] *** greppable6 joined
[05:01] *** releasable6 joined
[05:02] *** benchable6 joined
[05:02] *** bisectable6 joined
[05:02] *** reportable6 joined
[05:02] *** evalable6 joined
[05:02] *** unicodable6 joined
[05:57] *** tonyo left
[05:59] *** tonyo joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:48] *** notable6 left
[07:48] *** reportable6 left
[07:48] *** evalable6 left
[07:48] *** releasable6 left
[07:48] *** sourceable6 left
[07:48] *** committable6 left
[07:48] *** unicodable6 left
[07:48] *** shareable6 left
[07:48] *** tellable6 left
[07:48] *** benchable6 left
[07:48] *** squashable6 left
[07:48] *** bisectable6 left
[07:48] *** bloatable6 left
[07:48] *** quotable6 left
[07:48] *** statisfiable6 left
[07:48] *** greppable6 left
[07:48] *** nativecallable6 left
[07:48] *** coverable6 left
[07:48] *** linkable6 left
[07:48] *** linkable6 joined
[07:48] *** tellable6 joined
[07:48] *** benchable6 joined
[07:49] *** bloatable6 joined
[07:49] *** shareable6 joined
[07:49] *** nativecallable6 joined
[07:49] *** squashable6 joined
[07:49] *** unicodable6 joined
[07:49] *** evalable6 joined
[07:49] *** quotable6 joined
[07:50] *** releasable6 joined
[07:50] *** reportable6 joined
[07:50] *** notable6 joined
[07:50] *** sourceable6 joined
[07:50] *** bisectable6 joined
[07:51] *** committable6 joined
[07:51] *** statisfiable6 joined
[07:51] *** greppable6 joined
[07:51] *** coverable6 joined
[08:01] *** samebchase left
[08:19] *** sena_kun joined
[08:30] *** ab5tract left
[11:21] *** MasterDuke left
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:01] <Geth> Â¦ rakudo/main: c4ab78b47d | (Elizabeth Mattijsen)++ | 8 files

[12:01] <Geth> Â¦ rakudo/main: RakuAST: make $=pod / $=finish actual lexical lookups

[12:01] <Geth> Â¦ rakudo/main: 

[12:01] <Geth> Â¦ rakudo/main: - introduce RakuAST::VarDeclaration::Implicit::Doc role

[12:01] <Geth> Â¦ rakudo/main: - introduce RakuAST::VarDeclaration::Implicit::Doc::Pod class

[12:01] <Geth> Â¦ rakudo/main: - introduce RakuAST::VarDeclaration::Implicit::Doc::Finish class

[12:01] <Geth> Â¦ rakudo/main: - add two attributes to RakuAST::CompUnit, to keep the

[12:01] <Geth> Â¦ rakudo/main:   RakuAST::VarDeclaration::Implicit::Doc::xxx objects and make

[12:01] <Geth> Â¦ rakudo/main: <â€¦commit message has 6 more linesâ€¦>

[12:01] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c4ab78b47d

[12:47] <lizmat> TIL that Rakudo actually has a complete HTML5 entity table in memory

[12:49] <lizmat> hidden in src/Perl6/Pod.nqp

[12:51] *** bartolin left
[13:03] *** tonyo left
[13:05] *** tonyo joined
[13:31] <discord-raku-bot> <Nemokosch> How come? ðŸ¤«

[13:31] <discord-raku-bot> <Nemokosch> Bad emoji

[13:35] <lizmat> because of the E< > pod formatting code

[13:36] <lizmat> https://docs.raku.org/language/pod.html#Unicode

[13:36] <lizmat> "Raku makes considerable use of the E<laquo> and E<raquo> characters."

[14:29] <Geth> Â¦ rakudo/main: f040293a91 | (Stefan Seifert)++ | src/Raku/Actions.nqp

[14:29] <Geth> Â¦ rakudo/main: RakuAST: fix &?ROUTINE lookup in regex, token and rule

[14:29] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f040293a91

[14:32] <discord-raku-bot> <Nemokosch> Is there even a HTML5 entity list?

[14:46] <guifa> yes

[14:46] <guifa> https://html.spec.whatwg.org/multipage/named-characters.html

[15:35] *** notna joined
[15:42] <nine> Oh darn, I ran the wrong test file. The latest commit doesn't actually fix that

[16:08] <Geth> Â¦ rakudo/main: 36ec8e33b3 | (Elizabeth Mattijsen)++ | src/Raku/ast/variable-declaration.rakumod

[16:08] <Geth> Â¦ rakudo/main: RakuAST: properly look up compunit with "attach"

[16:08] <Geth> Â¦ rakudo/main: 

[16:08] <Geth> Â¦ rakudo/main: nine: "The find-attach-target should be in a method attach. That's

[16:08] <Geth> Â¦ rakudo/main: the only point where the resolver is guaranteed to be in the right

[16:08] <Geth> Â¦ rakudo/main: state to find the correct attach target."

[16:08] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/36ec8e33b3

[16:11] <discord-raku-bot> <Nemokosch> oh right, sorry I got confused

[16:11] <discord-raku-bot> <Nemokosch> what I actually missed is a list of valid HTML tags

[16:20] <Geth> Â¦ rakudo/main: b8763c3552 | (Stefan Seifert)++ | src/Raku/Actions.nqp

[16:20] <Geth> Â¦ rakudo/main: Revert "RakuAST: fix &?ROUTINE lookup in regex, token and rule"

[16:20] <Geth> Â¦ rakudo/main: 

[16:20] <Geth> Â¦ rakudo/main: This reverts commit f040293a918775e66bfcb541e214518bbfdc3ca6.

[16:20] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b8763c3552

[16:20] <Geth> Â¦ rakudo/main: b8e1ba3b4e | (Stefan Seifert)++ | src/Raku/ast/code.rakumod

[16:20] <Geth> Â¦ rakudo/main: RakuAST: actually add &?ROUTINE to regex declarations

[16:20] <Geth> Â¦ rakudo/main: 

[16:20] <Geth> Â¦ rakudo/main: Previous fixing attempt wasn't enough

[16:20] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b8e1ba3b4e

[17:31] <Geth> Â¦ rakudo/main: 351f053d79 | (Elizabeth Mattijsen)++ | 3 files

[17:31] <Geth> Â¦ rakudo/main: Introduce Str.htmlparse

[17:31] <Geth> Â¦ rakudo/main: 

[17:31] <Geth> Â¦ rakudo/main: This will try to interprete the string as an HTML entity, and return

[17:31] <Geth> Â¦ rakudo/main: the string associated with it, for example: &aacute;".htmlparse -> Ã¡

[17:31] <Geth> Â¦ rakudo/main: 

[17:31] <Geth> Â¦ rakudo/main: This introduces a rather large lookup table, which in fact already

[17:31] <Geth> Â¦ rakudo/main: lives in src/Perl6/Pod.nqp.  But since all src/Perl6 files are on

[17:31] <Geth> Â¦ rakudo/main: <â€¦commit message has 11 more linesâ€¦>

[17:31] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/351f053d79

[17:32] <guifa> lizmat: no need to generate an updated list.  "This list is static and will not be expanded or changed in the future."

[17:32] <Geth> Â¦ rakudo/main: 262cc42e4a | (Stefan Seifert)++ | src/Raku/Grammar.nqp

[17:32] <Geth> Â¦ rakudo/main: RakuAST: support local subs overriding quoters

[17:32] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/262cc42e4a

[17:33] <lizmat> guifa: never say never  :-)

[17:37] *** evalable6 left
[17:37] *** linkable6 left
[17:39] *** evalable6 joined
[17:40] *** linkable6 joined
[17:40] <Geth> Â¦ rakudo/lizmat-Int-html-entity: f36821f227 | (Elizabeth Mattijsen)++ | src/core.c/htmlparse.pm6

[17:40] <Geth> Â¦ rakudo/lizmat-Int-html-entity: Introduce Int.html-entity

[17:40] <Geth> Â¦ rakudo/lizmat-Int-html-entity: 

[17:40] <Geth> Â¦ rakudo/lizmat-Int-html-entity: Attempts to return the HTML entity associated with the integer value

[17:40] <Geth> Â¦ rakudo/lizmat-Int-html-entity: (assumed to be a codepoint).  Returns Nil if there is no such entity.

[17:40] <Geth> Â¦ rakudo/lizmat-Int-html-entity: 

[17:40] <Geth> Â¦ rakudo/lizmat-Int-html-entity: Lazily builds the lookup hash from the Str.htmlparse lookup table

[17:41] <Geth> Â¦ rakudo/lizmat-Int-html-entity: the first time the Int.html-entity method is invoked, so this won't

[17:41] <Geth> Â¦ rakudo/lizmat-Int-html-entity: increase build/startup time significantly, while being able to

[17:41] <Geth> Â¦ rakudo/lizmat-Int-html-entity: provide a very nice feature when it is needed.

[17:41] <Geth> Â¦ rakudo/lizmat-Int-html-entity: review: https://github.com/rakudo/rakudo/commit/f36821f227

[17:41] <Geth> Â¦ rakudo: lizmat++ created pull request #5245: Introduce Int.html-entity

[17:41] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5245

[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:11] *** notna left
[18:28] <Geth> Â¦ rakudo/main: 5feb7f7f4e | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[18:28] <Geth> Â¦ rakudo/main: Add Str.leading/trailing-whitespace implemementation-detail

[18:28] <Geth> Â¦ rakudo/main: 

[18:28] <Geth> Â¦ rakudo/main: Returns any leading / trailing whitespace of the string, which would

[18:28] <Geth> Â¦ rakudo/main: be the empty string if there is no leading/trailing whitespace, or

[18:28] <Geth> Â¦ rakudo/main: the string itself if it only consists of whitespace or is empty.

[18:28] <Geth> Â¦ rakudo/main: 

[18:28] <Geth> Â¦ rakudo/main: The Str.leading-whitespace will be used in RakuAST rakudoc block

[18:28] <Geth> Â¦ rakudo/main: parsing and codegenning.  Str.trailing-whitespace added for consistency.

[18:28] <Geth> Â¦ rakudo/main: 

[18:28] <Geth> Â¦ rakudo/main: Both are marked implementation-detail for now, unless we agree on

[18:28] <Geth> Â¦ rakudo/main: making it a public API.

[18:28] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5feb7f7f4e

[18:31] *** MasterDuke joined
[18:34] <MasterDuke> hm. do RakuAST nodes/classes/roles/etc have access to methods in src/Raku/Actions.nqp?

[18:35] <jdv> i thought we weren't going to commit to main a lot anymore?

[18:36] <jdv> its making it harder to run blin cause it takes a while for a build to happen

[18:36] <lizmat> jdv: there's constantly work on RakuAST that is on main nowadays

[18:36] <lizmat> and the above is in support of that

[18:36] <MasterDuke> can you tell blin to just stay on one particular commit?

[18:38] <jdv> yes, blin can take explicit commits endpoints

[18:40] <jdv> iirc there were reasons that we moved from everyone pushing to main to using PRs or branches or whatever

[18:40] <jdv> when will rakuast dev falll into that zone - its a bit confusing and a bit annoying

[18:41] <lizmat> well, there are currently 2 people working quite a lot of hours on getting RakuAST completed

[18:41] <jdv> i know that, so?

[18:42] <jdv> anyway, not a big deal i guess - just odd

[18:42] <lizmat> I'll make it a discussion point for resolution at the Raku Core Summit

[18:43] <jdv> its going to make releasings, perhaps minorly, more complicated methinks

[18:43] <jdv> ok

[19:00] <releasable6> Next release in â‰ˆ4 days and â‰ˆ23 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[19:20] <MasterDuke> ah ha! getting significantly closer to a/the better implementation of https://github.com/rakudo/rakudo/pull/5242

[19:22] <MasterDuke> but likely afk for a while. hopefully final cleanup+testing tomorrow evening

[19:23] <Geth> Â¦ rakudo/main: 72b8b8b0b6 | (Elizabeth Mattijsen)++ | src/core.c/htmlparse.pm6

[19:23] <Geth> Â¦ rakudo/main: Rename Str.htmlparse to Str.html-entity-parse

[19:23] <Geth> Â¦ rakudo/main: 

[19:23] <Geth> Â¦ rakudo/main: To prevent confusion with regards to the offered functionality

[19:23] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/72b8b8b0b6

[19:56] <vrurg> lizmat: I've left a comment to the commit, but would have it here too. I don't think HTML-related stuff belongs to the core. And I agree to jdv with regard to this kind of changes: these are certainly better be PRs in first place so we can discuss them if necessary.

[19:59] <discord-raku-bot> <Nemokosch> now that this came up: not to underestimate and banter the work of the few dedicated people who took up on RakuAST work but probably once it works at all, there should be another round of planning for the final interface

[20:00] <discord-raku-bot> <Nemokosch> it's arguably harder to get something working from scratch than to polish the user-facing interface once there is a working foundation

[21:22] <MasterDuke> re html stuff, it feels sort of the same to me as the built-in json stuff. maybe if we were starting over it wouldn't be in the core, but it is now. and if we don't plan to remove it, why not make in accessible somehow? maybe they could/should be moved to a "core" lib, like `Test`? so `use core::JSON` or `use core::HTML` would give you the built-in

[21:22] <MasterDuke> `(from|to)-json` and `html-entity-parse`

[21:23] <MasterDuke> unrelated to the previous comment, but what is a semiarglist?

[21:41] *** sena_kun left
[21:54] <lizmat> vrurg: but that's the point: it is already in core

[22:03] <lizmat> MasterDuke: the inside of a signature ?

[22:03] <Geth> Â¦ rakudo/main: 2d66116b6b | (Elizabeth Mattijsen)++ | src/core.c/htmlparse.pm6

[22:03] <Geth> Â¦ rakudo/main: Mark Str.html-entity-parse as an implementation-detail

[22:03] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2d66116b6b

[22:12] <vrurg> lizmat: am I overlooking something?

[22:12] <lizmat> src/Perl6/Pod.nqp maybe ?

[22:13] <vrurg> Documentation-related stuff is an exception here for obvious reasons. But Str?

[22:14] <vrurg> It could even be a module in lib/. But certainly it's not about Str as such.

[22:14] <lizmat> formatting code E<comma> renders as ,

[22:14] <lizmat> because of this table living in src/Perl6/Pod.nqp

[22:15] <vrurg> Let it live there then. 

[22:15] <lizmat> which is part of the core ??

[22:17] <lizmat> the thing is that E<comma> needs to be instantiated as Pod::FormattingCode.new(type => "E", meta => ["comma"], contents => [","])

[22:17] <lizmat> so it must be part of the core

[22:17] <vrurg> Yes, in a way. :) As I said, Pod is about documentation and thus can do some HTML-related stuff. But Str is pure data.

[22:18] <lizmat> if you have a source file with pod in it, and the pod has an E<comma> in it, then it *must* do that translation before it winds up in $=pod

[22:18] <lizmat> I didn't make this up, this is what $=pod is

[22:19] <vrurg> Ok, but why should this involve Str and Int?

[22:19] <lizmat> in core is just Str.html-entity-parse

[22:20] <lizmat> the Int.html-entity is a PR

[22:20] <lizmat> which is now closed

[22:21] <vrurg> Why the method can't be on Pod?

[22:21] <lizmat> because it takes a string ?

[22:22] <vrurg> I mean, let's imagine we add support for PostScript or RTF to Pod. Should elements of that support end up in Str too? Why HTML is so exceptional? 

[22:22] <lizmat> it converts an HTML entity string into a string representation based on its codepoint

[22:23] <vrurg> Many methods take a string. It doean't make them eligible for Str.

[22:23] <lizmat> HTML is exceptional because we support that in E< > formatting codes

[22:23] <lizmat> again, I didn't make this up: this is what the spec for pod  is

[22:24] <lizmat> and it currently lives in NQP in src/Perl6/Pod.nqp

[22:24] <vrurg> Then what if we add other kinds of formatting, as I mentioned? Then we also provide interface in Str? E<> is a Pod thing â€“ let pod handle it.

[22:38] *** nebuchadnezzar left
[22:42] <jdv> lizmat: blin fails look like your stuff - let me know

[22:45] <lizmat> jdv: which stuff ?

[22:45] <jdv> https://github.com/rakudo/rakudo/issues/5246

[22:50] <Geth> Â¦ rakudo/main: d965820269 | (Elizabeth Mattijsen)++ | 4 files

[22:50] <Geth> Â¦ rakudo/main: Move Str.html-entity-parse to RakuAST::HTML::Entities.parse

[22:50] <Geth> Â¦ rakudo/main: 

[22:50] <Geth> Â¦ rakudo/main: As per popular demand

[22:50] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d965820269

[22:50] <vrurg> lizmat++

[22:51] <lizmat> now, later, when people ask if Raku can convert HTML entities to strings, we can tell them to use RakuAST::HTML::Entities.parse instead of Str.html-entity-parse

[22:51] <lizmat> which then makes a lot of sense  *sigh*

[22:53] <vrurg> I would first look for a module anyway.

[22:56] <lizmat> in Python it's in the standard library:

[22:56] <lizmat> Python 2.6-3.3

[22:56] <lizmat> You can use HTMLParser.unescape() from the standard library:

[22:56] <lizmat> just saying

[22:57] <Geth> Â¦ rakudo/main: 5310496790 | (Elizabeth Mattijsen)++ | src/core.c/Pod.pm6

[22:57] <Geth> Â¦ rakudo/main: Revert "Introduce Pod::Declarator class"

[22:57] <Geth> Â¦ rakudo/main: 

[22:57] <Geth> Â¦ rakudo/main: This reverts commit ef05ef1e2b46cc16c5b0dcb361ce8c9c2e3a66e2.

[22:57] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5310496790

[22:58] <lizmat> jdv: will look at the other one tomorrow

[22:58] <lizmat> sleep&

[22:59] <vrurg> lizmat: that what I meany by having a module in lib/

[22:59] <vrurg> *meant

