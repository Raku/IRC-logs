[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[03:11] *** nativecallable6 left
[03:11] *** notable6 left
[03:11] *** sourceable6 left
[03:11] *** greppable6 left
[03:11] *** benchable6 left
[03:11] *** committable6 left
[03:11] *** squashable6 left
[03:11] *** statisfiable6 left
[03:11] *** bloatable6 left
[03:11] *** coverable6 left
[03:11] *** bisectable6 left
[03:11] *** linkable6 left
[03:11] *** unicodable6 left
[03:11] *** quotable6 left
[03:11] *** tellable6 left
[03:11] *** reportable6 left
[03:11] *** releasable6 left
[03:11] *** evalable6 left
[03:11] *** shareable6 left
[03:11] *** bisectable6 joined
[03:11] *** linkable6 joined
[03:11] *** notable6 joined
[03:11] *** shareable6 joined
[03:11] *** committable6 joined
[03:11] *** greppable6 joined
[03:12] *** statisfiable6 joined
[03:12] *** sourceable6 joined
[03:12] *** reportable6 joined
[03:12] *** unicodable6 joined
[03:12] *** bloatable6 joined
[03:12] *** releasable6 joined
[03:13] *** quotable6 joined
[03:13] *** nativecallable6 joined
[03:13] *** benchable6 joined
[03:13] *** tellable6 joined
[03:13] *** coverable6 joined
[03:14] *** squashable6 joined
[03:14] *** evalable6 joined
[04:14] *** unicodable6 left
[04:14] *** greppable6 left
[04:14] *** benchable6 left
[04:14] *** reportable6 left
[04:14] *** shareable6 left
[04:14] *** committable6 left
[04:14] *** bloatable6 left
[04:14] *** evalable6 left
[04:14] *** squashable6 left
[04:14] *** sourceable6 left
[04:14] *** tellable6 left
[04:14] *** notable6 left
[04:14] *** bisectable6 left
[04:14] *** coverable6 left
[04:14] *** nativecallable6 left
[04:14] *** quotable6 left
[04:14] *** statisfiable6 left
[04:14] *** releasable6 left
[04:14] *** linkable6 left
[04:14] *** tellable6 joined
[04:14] *** notable6 joined
[04:14] *** evalable6 joined
[04:14] *** nativecallable6 joined
[04:15] *** shareable6 joined
[04:15] *** unicodable6 joined
[04:15] *** coverable6 joined
[04:15] *** linkable6 joined
[04:15] *** bisectable6 joined
[04:15] *** statisfiable6 joined
[04:15] *** committable6 joined
[04:16] *** sourceable6 joined
[04:16] *** releasable6 joined
[04:16] *** bloatable6 joined
[04:16] *** benchable6 joined
[04:17] *** greppable6 joined
[04:17] *** reportable6 joined
[04:17] *** squashable6 joined
[04:17] *** quotable6 joined
[05:17] *** shareable6 left
[05:17] *** tellable6 left
[05:17] *** nativecallable6 left
[05:17] *** squashable6 left
[05:17] *** bloatable6 left
[05:17] *** notable6 left
[05:17] *** greppable6 left
[05:17] *** statisfiable6 left
[05:17] *** linkable6 left
[05:17] *** reportable6 left
[05:17] *** unicodable6 left
[05:17] *** committable6 left
[05:17] *** coverable6 left
[05:17] *** quotable6 left
[05:17] *** evalable6 left
[05:17] *** benchable6 left
[05:17] *** bisectable6 left
[05:17] *** releasable6 left
[05:17] *** sourceable6 left
[05:17] *** reportable6 joined
[05:17] *** coverable6 joined
[05:18] *** nativecallable6 joined
[05:18] *** greppable6 joined
[05:18] *** evalable6 joined
[05:18] *** bloatable6 joined
[05:18] *** notable6 joined
[05:18] *** committable6 joined
[05:19] *** squashable6 joined
[05:19] *** sourceable6 joined
[05:19] *** bisectable6 joined
[05:19] *** statisfiable6 joined
[05:19] *** shareable6 joined
[05:19] *** linkable6 joined
[05:19] *** quotable6 joined
[05:19] *** benchable6 joined
[05:19] *** tellable6 joined
[05:19] *** unicodable6 joined
[05:20] *** releasable6 joined
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[10:38] <Geth> ¦ rakudo/main: 3e81831a8e | (Elizabeth Mattijsen)++ | 2 files

[10:38] <Geth> ¦ rakudo/main: RakuAST: move "whenever" to block- section for translation

[10:38] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3e81831a8e

[11:00] <Geth> ¦ rakudo/main: 8c2062c273 | (Elizabeth Mattijsen)++ | 2 files

[11:00] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 1

[11:00] <Geth> ¦ rakudo/main: 

[11:00] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "if" or "elsif",

[11:00] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[11:00] <Geth> ¦ rakudo/main: 

[11:00] <Geth> ¦ rakudo/main: Part 1 covers the block- and constraint- version as found in

[11:00] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[11:00] <Geth> ¦ rakudo/main: 

[11:00] <Geth> ¦ rakudo/main: Problematic tokens where the if/with elsif/orwith / else group

[11:00] <Geth> ¦ rakudo/main: (which needed action methods to store the type), and while/until

[11:00] <Geth> ¦ rakudo/main: because these groups are handled by a single rule in the grammar.

[11:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/8c2062c273

[11:49] <nine> While the issues individually don't seem to be much of a problem, they become one in combination. It comes down to the question of how we know whether to generate a runtime lexical lookup for a declaration or a constant value.

[11:49] <nine> We need lexical lookups for everything that resolved to a declaration within the dynamically compiled comp unit and constant values for everything found outside.

[11:51] <nine> The resolver would know where it found something. But the resolver may be run at a time where we don't know that something will be compiled dynamically.

[11:51] <Geth> ¦ rakudo/main: cbfdaeec9c | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[11:51] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 2

[11:51] <Geth> ¦ rakudo/main: 

[11:51] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "and" or "cmp",

[11:51] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[11:51] <Geth> ¦ rakudo/main: 

[11:51] <Geth> ¦ rakudo/main: Part 2 covers the infix- section as found in

[11:51] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[11:51] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cbfdaeec9c

[11:51] <nine> The QAST generating code knows about dynamic compilation but does not get the memo about where it was actually found.

[11:57] <nine> Of course the latter could be fixed by spreading a lot of attach methods around

[11:58] <nine> lizmat: wasn't jnthn working on changing the whole attach thing?

[11:59] <lizmat> not sure...

[12:00] *** reportable6 left
[12:01] <Geth> ¦ rakudo/main: f9de816082 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[12:01] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 2

[12:01] <Geth> ¦ rakudo/main: 

[12:01] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "so" or "not",

[12:01] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[12:01] <Geth> ¦ rakudo/main: 

[12:01] <Geth> ¦ rakudo/main: Part 3 covers the prefix- section as found in

[12:01] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[12:01] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f9de816082

[12:03] *** reportable6 joined
[12:26] <lizmat> Part 3 obviously, duh

[12:35] <Geth> ¦ rakudo/main: b7a59287a8 | (Elizabeth Mattijsen)++ | 2 files

[12:35] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 4

[12:35] <Geth> ¦ rakudo/main: 

[12:35] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "BEGIN" or "END",

[12:35] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[12:35] <Geth> ¦ rakudo/main: 

[12:35] <Geth> ¦ rakudo/main: Part 4 covers the phaser- section as found in

[12:35] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[12:35] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b7a59287a8

[13:10] <Geth> ¦ rakudo/main: d08c2f9891 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[13:10] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 5

[13:10] <Geth> ¦ rakudo/main: 

[13:10] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "for" or "given",

[13:10] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[13:10] <Geth> ¦ rakudo/main: 

[13:10] <Geth> ¦ rakudo/main: Part 5 covers the modifier- section as found in

[13:10] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[13:10] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d08c2f9891

[13:20] *** evalable6 left
[13:20] *** linkable6 left
[13:21] *** evalable6 joined
[13:23] *** linkable6 joined
[13:27] <Geth> ¦ rakudo/main: 4d1ff7324a | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[13:27] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 6

[13:27] <Geth> ¦ rakudo/main: 

[13:27] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "proto" or "multi",

[13:27] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[13:27] <Geth> ¦ rakudo/main: 

[13:27] <Geth> ¦ rakudo/main: Part 6 covers the multi- section as found in

[13:27] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[13:27] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4d1ff7324a

[13:34] <Geth> ¦ rakudo/main: d6b2a46569 | (Elizabeth Mattijsen)++ | 2 files

[13:34] <Geth> ¦ rakudo/main: RakuAST: add hooks for "knowhow" and "native"

[13:34] <Geth> ¦ rakudo/main: 

[13:34] <Geth> ¦ rakudo/main: Which are also (internal) package declarators

[13:34] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d6b2a46569

[13:48] <Geth> ¦ rakudo/main: cdc7c1d5bf | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[13:48] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 7

[13:48] <Geth> ¦ rakudo/main: 

[13:48] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "class" or "grammar",

[13:48] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[13:48] <Geth> ¦ rakudo/main: 

[13:48] <Geth> ¦ rakudo/main: Part 7 covers the package- section as found in

[13:48] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[13:48] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cdc7c1d5bf

[14:03] <Geth> ¦ rakudo/main: 714f2f6d93 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[14:03] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 8

[14:03] <Geth> ¦ rakudo/main: 

[14:03] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "sub" or "method",

[14:03] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[14:03] <Geth> ¦ rakudo/main: 

[14:03] <Geth> ¦ rakudo/main: Part 8 covers the routine- section as found in

[14:03] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[14:03] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/714f2f6d93

[14:15] <Geth> ¦ rakudo/main: 783c7900d9 | (Elizabeth Mattijsen)++ | 2 files

[14:15] <Geth> ¦ rakudo/main: RakuAST: add hooks for "augment" and "supersede"

[14:15] <Geth> ¦ rakudo/main: 

[14:15] <Geth> ¦ rakudo/main: These are internally considered to be scopes

[14:15] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/783c7900d9

[14:24] <Geth> ¦ rakudo/main: bc3cc07a28 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[14:24] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 9

[14:24] <Geth> ¦ rakudo/main: 

[14:24] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "my" or "our",

[14:24] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[14:24] <Geth> ¦ rakudo/main: 

[14:24] <Geth> ¦ rakudo/main: Part 9 covers the scope- section as found in

[14:24] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[14:24] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/bc3cc07a28

[14:38] *** linkable6 left
[14:38] *** evalable6 left
[14:38] *** evalable6 joined
[14:38] *** linkable6 joined
[14:44] <Geth> ¦ rakudo/main: c716de92ce | (Elizabeth Mattijsen)++ | 2 files

[14:44] <Geth> ¦ rakudo/main: RakuAST: add hook for "supply"

[14:44] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c716de92ce

[15:02] *** ab5tract joined
[15:56] <leont> I don't understand how the termish rule works in the grammar, so I don't understand how to use its result

[16:00] <leont> Only action named termish is in RegexAction, while I was expecting it in the main actions class

[16:09] <discord-raku-bot> <nemokosch> https://github.com/Raku/nqp/blob/6669ea2ec434677f21dc4e93c36d5ec29ded4e73/src/HLL/Actions.nqp#L147

[16:09] <discord-raku-bot> <nemokosch> are you looking for this?

[16:11] <Geth> ¦ rakudo/main: e3f2389628 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[16:11] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 10

[16:11] <Geth> ¦ rakudo/main: 

[16:11] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "do" or "quietly",

[16:11] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[16:11] <Geth> ¦ rakudo/main: 

[16:11] <Geth> ¦ rakudo/main: Part 10 covers the stmt-prefix- section as found in

[16:11] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[16:11] <Geth> ¦ rakudo/main: 

[16:11] <Geth> ¦ rakudo/main: Sadly using stmt-prefix-do causes a regression, so don'y actually

[16:11] <Geth> ¦ rakudo/main: apply that right now

[16:11] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e3f2389628

[16:14] <leont> Probably, yes

[16:16] <leont> Though isn't that nqp instead of raku?

[16:16] <lizmat> leont: the Raku grammar still is a subclass of HLL::Grammar

[16:17] <leont> Ah, that makes sense

[16:17] <lizmat> I'm working on removing this dependence

[16:17] <lizmat> *y

[16:17] <lizmat> rewriting EXPR was ....  interesting  :-)

[16:19] <Geth> ¦ rakudo/main: 9da6db8f75 | (Elizabeth Mattijsen)++ | 2 files

[16:19] <Geth> ¦ rakudo/main: RakuAST: add hook for "handles"

[16:19] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/9da6db8f75

[16:27] *** jgaz joined
[16:34] <Geth> ¦ rakudo/main: 1e797d64d1 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[16:34] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 11

[16:34] <Geth> ¦ rakudo/main: 

[16:34] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "is" or "does",

[16:34] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[16:34] <Geth> ¦ rakudo/main: 

[16:34] <Geth> ¦ rakudo/main: Part 11 covers the trait- section as found in

[16:34] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[16:34] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1e797d64d1

[17:00] <Geth> ¦ rakudo/main: cdcd9c58df | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[17:00] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 12

[17:00] <Geth> ¦ rakudo/main: 

[17:00] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "enum" or "subset",

[17:00] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[17:00] <Geth> ¦ rakudo/main: 

[17:00] <Geth> ¦ rakudo/main: Part 12 covers the typer- section as found in

[17:00] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[17:00] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/cdcd9c58df

[17:20] <Geth> ¦ rakudo/main: c776e55a88 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[17:20] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 13

[17:20] <Geth> ¦ rakudo/main: 

[17:20] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "use" or "require",

[17:20] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[17:20] <Geth> ¦ rakudo/main: 

[17:20] <Geth> ¦ rakudo/main: Part 13 covers the use- section as found in

[17:20] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[17:20] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c776e55a88

[17:21] <lizmat> and that leaves the elephant in the room, aka the "core-" section

[17:29] <Geth> ¦ rakudo/main: 19bd308947 | (Elizabeth Mattijsen)++ | 2 files

[17:29] <Geth> ¦ rakudo/main: RakuAST: remove some unnecessary <sym> captures

[17:29] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/19bd308947

[17:38] <Geth> ¦ rakudo/main: 35bdbbc619 | (Elizabeth Mattijsen)++ | 2 files

[17:38] <Geth> ¦ rakudo/main: RakuAST: don't bother using especially named captures

[17:38] <Geth> ¦ rakudo/main: 

[17:38] <Geth> ¦ rakudo/main: For the handling of if / with / elsif / orwith

[17:38] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/35bdbbc619

[17:58] <Geth> ¦ rakudo/main: 446591057c | (Elizabeth Mattijsen)++ | 2 files

[17:58] <Geth> ¦ rakudo/main: RakuAST: add support for the new "nano" term

[17:58] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/446591057c

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:31] <Geth> ¦ rakudo/main: f4fc256b04 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[18:31] <Geth> ¦ rakudo/main: RakuAST: get rid of <tok> token

[18:31] <Geth> ¦ rakudo/main: 

[18:31] <Geth> ¦ rakudo/main: The <end-keyword> token is good enough

[18:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f4fc256b04

[18:34] <leont> I think my problem is in RakuAST::Term::Capture.IMPL-EXPR-QAST, I'm starting to get a hunch on how to fix it

[18:53] <Geth> ¦ rakudo/main: d6fd0f60c4 | (Elizabeth Mattijsen)++ | 3 files

[18:53] <Geth> ¦ rakudo/main: RakuAST: add "term-" section in L10N

[18:53] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d6fd0f60c4

[19:01] *** evalable6 left
[19:01] *** linkable6 left
[19:02] *** linkable6 joined
[19:04] *** evalable6 joined
[19:17] *** ab5tract left
[19:18] <Geth> ¦ rakudo/main: 65cc4b660d | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[19:18] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 14

[19:18] <Geth> ¦ rakudo/main: 

[19:18] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "time" or "self",

[19:18] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[19:18] <Geth> ¦ rakudo/main: 

[19:18] <Geth> ¦ rakudo/main: Part 14 covers the term- section as found in

[19:18] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[19:18] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/65cc4b660d

[19:26] *** ab5tract joined
[19:29] <Geth> ¦ rakudo/main: 150488c117 | (Elizabeth Mattijsen)++ | 3 files

[19:29] <Geth> ¦ rakudo/main: RakuAST: add translation hooks for statement "also"

[19:29] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/150488c117

[19:42] <Geth> ¦ rakudo/main: 65d84a4d56 | (Elizabeth Mattijsen)++ | 3 files

[19:42] <Geth> ¦ rakudo/main: RakuAST: add "meta-" section in L10N

[19:42] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/65d84a4d56

[19:50] <Geth> ¦ rakudo/main: 1702a8e273 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[19:50] <Geth> ¦ rakudo/main: RakuAST: ready grammar/actions for translation, Part 15

[19:50] <Geth> ¦ rakudo/main: 

[19:50] <Geth> ¦ rakudo/main: Instead of checking for literal strings such as "R" or "X",

[19:50] <Geth> ¦ rakudo/main: replace these by sub-classable tokens.

[19:50] <Geth> ¦ rakudo/main: 

[19:50] <Geth> ¦ rakudo/main: Part 15 covers the meta- section as found in

[19:50] <Geth> ¦ rakudo/main: lib/RakuAST/Deparse/L10N/CORE.rakumod

[19:50] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/1702a8e273

[20:13] <Geth> ¦ rakudo/main: b70ca769f1 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[20:13] <Geth> ¦ rakudo/main: RakuAST: make a lot of <sym>s non-capturing

[20:13] <Geth> ¦ rakudo/main: 

[20:13] <Geth> ¦ rakudo/main: As these captures are not needed

[20:13] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b70ca769f1

[20:13] <lizmat> and that concludes my hacking for today&

