[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[01:04] *** squashable6 left
[01:05] *** squashable6 joined
[02:42] *** Voldenet_ joined
[02:42] *** Voldenet left
[02:42] *** Voldenet_ is now known as Voldenet

[03:42] *** Voldenet_ joined
[03:44] *** Voldenet left
[03:44] *** Voldenet_ is now known as Voldenet

[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[06:35] *** sena_kun joined
[08:10] *** Geth left
[08:10] *** Geth joined
[08:16] <Geth> ¦ JSON-Unmarshal/issue-7: 3ecf11e353 | (Jonathan Stowe)++ | lib/JSON/Unmarshal.rakumod

[08:16] <Geth> ¦ JSON-Unmarshal/issue-7: Simplify the where of the (%, Mu) candidate

[08:16] <Geth> ¦ JSON-Unmarshal/issue-7: 

[08:16] <Geth> ¦ JSON-Unmarshal/issue-7: The order of the smartmatch is non-obvious, but it doesn't work the

[08:16] <Geth> ¦ JSON-Unmarshal/issue-7: other way round.

[08:16] <Geth> ¦ JSON-Unmarshal/issue-7: review: https://github.com/raku-community-modules/JSON-Unmarshal/commit/3ecf11e353

[09:02] *** [TuxCM] left
[09:13] <discord-raku-bot> <nemokosch> why is it that RAKUDO_RAKUAST=1 raku --target=ast -e 'my \a = 2' produces an output that keeps talking about my \\a ?

[09:15] <lizmat> some rendering artefact probably some .raku.raku

[09:16] <lizmat> m: say "\\a".raku

[09:16] <camelia> rakudo-moar a9e83a93a: OUTPUT: «"\\a"␤»

[09:16] <lizmat> m: say "\\a"

[09:16] <camelia> rakudo-moar a9e83a93a: OUTPUT: «\a␤»

[11:32] <Geth> ¦ rakudo/main: 6c345f4f07 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[11:32] <Geth> ¦ rakudo/main: RakuAST: document the quote-lang method

[11:32] <Geth> ¦ rakudo/main: 

[11:32] <Geth> ¦ rakudo/main: - mostly for my own understanding

[11:32] <Geth> ¦ rakudo/main: - renamed internal subs to more closely reflect what they are doing

[11:32] <Geth> ¦ rakudo/main: - don't cache stuff that we won't check for being cached anyway

[11:32] <Geth> ¦ rakudo/main: - make sure the quote lang cache is thread-safe

[11:32] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/6c345f4f07

[11:57] *** linkable6 left
[11:57] *** evalable6 left
[11:58] *** evalable6 joined
[11:58] *** linkable6 joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:16] <Geth> ¦ rakudo/main: d923a4f5a2 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[12:16] <Geth> ¦ rakudo/main: RakuAST: make q:o// q:format// negatable: q:!o//

[12:16] <Geth> ¦ rakudo/main: 

[12:16] <Geth> ¦ rakudo/main: Makes more sense than making it a compile time error.

[12:16] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d923a4f5a2

[12:30] *** sivoais left
[13:01] *** sivoais joined
[13:02] <Geth> ¦ rakudo/main: b390e203d7 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Fixups.pm6

[13:02] <Geth> ¦ rakudo/main: RakuAST: make :allow a purely renderer thing

[13:02] <Geth> ¦ rakudo/main: 

[13:02] <Geth> ¦ rakudo/main: This means that any RakuDoc (apart from =comment and =data) will

[13:02] <Geth> ¦ rakudo/main: have its paragraphs checked for Markup codes, and generate the

[13:02] <Geth> ¦ rakudo/main: associated Markup objects.  It is then up to the renderer to look

[13:02] <Geth> ¦ rakudo/main: at any :allow setting (or absence of that) to determine whether

[13:02] <Geth> ¦ rakudo/main: the Markup should be interpreted, or just be stringified.

[13:02] <Geth> ¦ rakudo/main: 

[13:02] <Geth> ¦ rakudo/main: The requirement for a valid Markup letter is now having "Lu" as

[13:02] <Geth> ¦ rakudo/main: the general Unicode property.  So this will allow Δ<> markup.

[13:02] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b390e203d7

[13:22] <Geth> ¦ rakudo/main: defca25f39 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[13:22] <Geth> ¦ rakudo/main: RakuAST: make quote-lang cache updates truly thread-safe

[13:22] <Geth> ¦ rakudo/main: 

[13:22] <Geth> ¦ rakudo/main: As creating the same type more than once may cause problems

[13:22] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/defca25f39

[13:37] <Geth> ¦ rakudo/main: 60a96bb6e0 | (Elizabeth Mattijsen)++ | src/Perl6/Grammar.nqp

[13:37] <Geth> ¦ rakudo/main: Backport threadsafe update of quote-lang cache

[13:37] <Geth> ¦ rakudo/main: 

[13:37] <Geth> ¦ rakudo/main: from RakuAST.

[13:37] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/60a96bb6e0

[13:43] *** Xliff joined
[13:43] <Xliff> Raku-GLib suite timing statistics for Raku 2023.06.114.ga.9.e.83.a.93.a.9

[13:43] <Xliff> Using the following processor: AMD Ryzen 9 5950X 16-Core Processor

[13:43] <Xliff> Total number of projects: 34 (506509 loc)

[13:43] <Xliff> Total non-parallel compile times: 11115.940 (326.939 avg)

[13:43] <Xliff> Total parallel compile times: 2287.341 (67.275 avg) 4.860x speedup

[13:59] <Xliff> Raku-GLib suite timing statistics for Raku 2023.06.100.g.1.c.25.d.071.a.8

[13:59] <Xliff> Using the following processor: 13th Gen Intel(R) Core(TM) i9-13900K

[13:59] <Xliff> Total number of projects: 34 (505521 loc)

[13:59] <Xliff> Total non-parallel compile times: 5736.590 (168.723 avg)

[13:59] <Xliff> Total parallel compile times: 1073.805 (31.583 avg) 5.342x speedup

[14:00] <Xliff> Ah, felgercarb!

[14:00] <Xliff> Didn't rebuild the raku binary. It's why I include the version hash now. :)

[14:01] <lizmat> yuu can say "crap" here  :-)

[14:01] <tellable6> 2023-07-23T11:03:59Z #raku <tbrowder__> lizmat thank you! i'll pass it on

[15:27] *** heartburn left
[15:50] *** heartburn joined
[16:31] <Geth> ¦ rakudo/main: b58bf6db30 | (Elizabeth Mattijsen)++ | src/core.c/DateTime.pm6

[16:31] <Geth> ¦ rakudo/main: Fix thinko introduced in e6c0b5e919

[16:31] <Geth> ¦ rakudo/main: 

[16:31] <Geth> ¦ rakudo/main: Accessing attributes in Subclassed objects of DateTime should refer

[16:31] <Geth> ¦ rakudo/main: to the original class, **not** to the subclass type.

[16:31] <Geth> ¦ rakudo/main: 

[16:31] <Geth> ¦ rakudo/main: Xliff++ for spotting the problem with the Interval module.

[16:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/b58bf6db30

[17:05] <Xliff> Raku-GLib suite timing statistics for Raku 2023.06.119.g.60.a.96.bb.6.e.0

[17:05] <Xliff> Using the following processor: 13th Gen Intel(R) Core(TM) i9-13900K

[17:05] <Xliff> Total number of projects: 34 (505521 loc)

[17:05] <Xliff> Total non-parallel compile times: 5762.820 (169.495 avg)

[17:05] <Xliff> Total parallel compile times: 1023.256 (30.096 avg) 5.632x speedup

[17:44] *** linkable6 left
[17:44] *** evalable6 left
[17:44] *** evalable6 joined
[17:45] *** linkable6 joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:30] *** notna joined
[18:34] *** notna left
[18:35] *** notna joined
[19:18] *** notna left
[19:54] <Geth> ¦ rakudo/main: 947b49c90d | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/LegacyPodify.pm6

[19:54] <Geth> ¦ rakudo/main: RakuAST: fix issues with $=pod generation and markup

[19:54] <Geth> ¦ rakudo/main: 

[19:54] <Geth> ¦ rakudo/main: This moves the :allow functionality to the legacy podification as

[19:54] <Geth> ¦ rakudo/main: "renderer".  Fixes many of the tests in the "doc" repository.

[19:54] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/947b49c90d

[20:00] *** codesections joined
[20:32] <MasterDuke> you know what i find kind of annoying? when even `--ll-exception` doesn't have the backtrace i expect. e.g., `raku -e 'symlink("foo", "bar")`, when "bar" already exists

[20:32] <MasterDuke>    at SETTING::src/core.c/Exception.pm6:65  (/home/dan/Source/perl6/install/share/perl6/runtime/CORE.c.setting.moarvm:throw)

[20:32] <MasterDuke>  from SETTING::src/core.c/Failure.pm6:65  (/home/dan/Source/perl6/install/share/perl6/runtime/CORE.c.setting.moarvm:throw)

[20:32] <MasterDuke>  from SETTING::src/core.c/Failure.pm6:120  (/home/dan/Source/perl6/install/share/perl6/runtime/CORE.c.setting.moarvm:sink)

[20:32] <MasterDuke>  from -e:1  (<ephemeral file>:<unit>

[20:33] <MasterDuke> i assume because it's a `fail` inside a `CATCH` https://github.com/rakudo/rakudo/blob/main/src/core.c/IO/Path.pm6#L517-L520

[20:34] <MasterDuke> i'd still somehow like to see the symlink method and sub in the backtrace

[21:06] <Geth> ¦ roast: 88d26efd0e | (Daniel Green)++ | S32-num/rat.t

[21:06] <Geth> ¦ roast: Add missing comma between arguments

[21:06] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/88d26efd0e

[21:19] <MasterDuke> ah ha. after some debugging (and noticing my t/spec wasn't pulling because of some local conflicting edits), my two branches now pass a spectest. and calling `.rwx` on a file a million times drops from 3.7s to 1.5s

[21:34] <[Coke]> MasterDuke++

[22:28] *** sena_kun left
[23:39] *** reportable6 left
[23:39] *** squashable6 left
[23:39] *** tellable6 left
[23:39] *** greppable6 left
[23:39] *** bloatable6 left
[23:39] *** bisectable6 left
[23:39] *** sourceable6 left
[23:39] *** statisfiable6 left
[23:39] *** nativecallable6 left
[23:39] *** notable6 left
[23:39] *** quotable6 left
[23:39] *** linkable6 left
[23:39] *** coverable6 left
[23:39] *** benchable6 left
[23:39] *** shareable6 left
[23:39] *** unicodable6 left
[23:39] *** committable6 left
[23:39] *** releasable6 left
[23:39] *** evalable6 left
[23:39] *** sourceable6 joined
[23:39] *** bloatable6 joined
[23:39] *** greppable6 joined
[23:39] *** shareable6 joined
[23:39] *** unicodable6 joined
[23:40] *** coverable6 joined
[23:40] *** squashable6 joined
[23:40] *** benchable6 joined
[23:40] *** tellable6 joined
[23:40] *** committable6 joined
[23:41] *** evalable6 joined
[23:41] *** linkable6 joined
[23:41] *** notable6 joined
[23:41] *** bisectable6 joined
[23:41] *** nativecallable6 joined
[23:41] *** reportable6 joined
[23:42] *** quotable6 joined
[23:42] *** releasable6 joined
[23:42] *** statisfiable6 joined
