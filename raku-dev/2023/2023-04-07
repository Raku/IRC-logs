[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:23] <MasterDuke> how do i print stuff when debugging rakuast changes? `nqp::say($foo.raku)`?

[00:23] <tellable6> 2023-04-06T08:55:39Z #raku-dev <lizmat> MasterDuke: I did

[00:34] <MasterDuke> hm. testing with `RAKUDO_RAKUAST=1 raku -e 'my sub one { 1 }; say one;'`, in my added `RakuAST::Call::Name.PERFORM-CHECK`, `$resolver.resolve-lexical($name);` is returning `Nil` and `$name` is 'one'

[00:44] <MasterDuke> fwiw, so is `$resolver.resolve-lexical-constant-in-setting($name);`, but i'm trying to take one thing at a time...

[01:51] *** squashable6 left
[01:54] *** squashable6 joined
[03:21] *** linkable6 left
[03:22] *** linkable6 joined
[04:58] *** linkable6 left
[04:58] *** squashable6 left
[04:58] *** reportable6 left
[04:58] *** benchable6 left
[04:58] *** unicodable6 left
[04:58] *** committable6 left
[04:58] *** nativecallable6 left
[04:58] *** sourceable6 left
[04:58] *** greppable6 left
[04:58] *** statisfiable6 left
[04:58] *** coverable6 left
[04:58] *** bloatable6 left
[04:58] *** tellable6 left
[04:58] *** quotable6 left
[04:58] *** shareable6 left
[04:58] *** releasable6 left
[04:58] *** unicodable6 joined
[04:58] *** linkable6 joined
[04:58] *** nativecallable6 joined
[04:59] *** coverable6 joined
[04:59] *** sourceable6 joined
[04:59] *** benchable6 joined
[04:59] *** releasable6 joined
[04:59] *** shareable6 joined
[04:59] *** reportable6 joined
[04:59] *** committable6 joined
[05:00] *** greppable6 joined
[05:00] *** tellable6 joined
[05:00] *** statisfiable6 joined
[05:01] *** squashable6 joined
[05:01] *** bloatable6 joined
[05:01] *** quotable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:58] *** kjp left
[07:01] *** kjp joined
[09:09] *** sena_kun joined
[09:39] *** lizmat_ joined
[09:43] *** lizmat left
[09:47] *** lizmat_ left
[09:47] *** lizmat joined
[09:51] <Geth> ¦ rakudo/main: d1fe3fee89 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp

[09:51] <Geth> ¦ rakudo/main: RakuAST: update deperecated proto syntax in grammar

[09:51] <Geth> ¦ rakudo/main: 

[09:51] <Geth> ¦ rakudo/main: The Raku grammar is a modern grammar, so don't have any outdated

[09:51] <Geth> ¦ rakudo/main: stuff in it

[09:51] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d1fe3fee89

[10:47] *** linkable6 left
[10:47] *** evalable6 left
[10:49] *** linkable6 joined
[10:50] *** evalable6 joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:40] <lizmat> so I'm battling getting grammar support for declarator docs on packages working, and seeing all sorts of weird things

[12:40] <lizmat> only to find out that declarator pod parsing is really unreliable

[12:40] <lizmat> in the legacy grammar

[12:42] <lizmat> m: dd $=pod; class A {␤has $.a;␤}␤#= trailing

[12:42] <camelia> rakudo-moar d1fe3fee8: OUTPUT: «[Pod::Block::Declarator.new(WHEREFORE => Any, leading => [], trailing => [["trailing"],])]␤»

[12:42] <lizmat> note that the declarator WHEREFORE is Any, so it's not attached to anything, whereas it should be attached to the class

[12:42] <lizmat> m: dd $=pod; class A {␤}␤#= trailing

[12:43] <camelia> rakudo-moar d1fe3fee8: OUTPUT: «[Pod::Block::Declarator.new(WHEREFORE => Any, leading => [], trailing => [["trailing"],])]␤»

[12:44] <lizmat> m: dd $=pod; sub a {␤}␤#= trailing

[12:44] <camelia> rakudo-moar d1fe3fee8: OUTPUT: «[Pod::Block::Declarator.new(WHEREFORE => Any, leading => [], trailing => [["trailing"],])]␤»

[12:45] <lizmat> m: dd $=pod; sub a {␤#= trailing␤}

[12:45] <camelia> rakudo-moar d1fe3fee8: OUTPUT: «[Pod::Block::Declarator.new(WHEREFORE => Any, leading => [], trailing => [["trailing"],])]␤»

[12:46] <lizmat> bisectable6: old=2023.01 dd $=pod; class A {␤has $.a;␤}␤#= trailing

[12:46] <bisectable6> lizmat, Cannot find revision “2023.01” (did you mean “2023.02”?)

[12:47] <lizmat> bisectable6: old=2023.02 dd $=pod; class A {␤has $.a;␤}␤#= trailing

[12:47] <bisectable6> lizmat, Bisecting by output (old=2023.02 new=d1fe3fe) because on both starting points the exit code is 0

[12:47] <bisectable6> lizmat, bisect log: https://gist.github.com/fa7f9a18aaec23b8f0751f6198a6f141

[12:47] <bisectable6> lizmat, (2023-03-27) https://github.com/rakudo/rakudo/commit/1a86348a2885a456767e31c4b8c6a4855c1b26e6

[12:48] <lizmat> bisectable6: old=2023.02 dd $=pod.head.WHEREFORE; class A {␤has $.a;␤}␤#= trailing

[12:48] <bisectable6> lizmat, On both starting points (old=2023.02 new=d1fe3fe) the exit code is 0 and the output is identical as well

[12:48] <bisectable6> lizmat, Output on both points: «Any␤»

[12:48] <lizmat> bisectable6: old=2023.02 dd $=pod.head.WHEREFORE; class A {␤}␤#= trailing

[12:48] <bisectable6> lizmat, On both starting points (old=2023.02 new=d1fe3fe) the exit code is 0 and the output is identical as well

[12:48] <bisectable6> lizmat, Output on both points: «Any␤»

[12:48] <lizmat> bisectable6: dd $=pod.head.WHEREFORE; class A {␤}␤#= trailing

[12:48] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[12:49] <bisectable6> lizmat, Output on all releases: https://gist.github.com/a8172577d749b45139b38ed8a2b0b289

[12:49] <bisectable6> lizmat, Bisecting by exit code (old=2016.09 new=2016.10). Old exit code: 1

[12:49] <bisectable6> lizmat, bisect log: https://gist.github.com/0f9ff26312f85b3a3c42661480a1b2dc

[12:49] <bisectable6> lizmat, (2016-09-19) https://github.com/rakudo/rakudo/commit/96df2d7148cef0c8243bd7a2a1b66b8c22e356eb

[12:49] <bisectable6> lizmat, Output on all releases and bisected commits: https://gist.github.com/ada211bb31a53c0063233b6bd56b961e

[12:49] <lizmat> bisectable6: dd $=pod[0].WHEREFORE; class A {␤}␤#= trailing

[12:49] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[12:50] <bisectable6> lizmat, ¦6c (67 commits): «Any␤»

[12:50] <bisectable6> lizmat, Nothing to bisect!

[12:50] <lizmat> ok, so broken from the start  :-(

[12:52] <lizmat> m: dd $=pod; sub a {␤}␤#= trailing␤

[12:52] <camelia> rakudo-moar d1fe3fee8: OUTPUT: «[Pod::Block::Declarator.new(WHEREFORE => Any, leading => [], trailing => [["trailing"],])]␤»

[12:53] <lizmat> m: dd $=pod; #| heading␤sub a {␤}␤#= trailing␤

[12:53] <camelia> rakudo-moar d1fe3fee8: OUTPUT: «[Pod::Block::Declarator.new(WHEREFORE => sub a { #`(Sub|6452520897792) ... }, leading => ["heading"], trailing => [["trailing"],])]␤»

[12:54] <lizmat> and that appears to only work if there's also heading doc declarators

[12:59] <lizmat> s/heading/leading

[13:11] <lizmat> nine: https://irclogs.raku.org/raku-dev/2023-03-13.html#07:35    grrrr  :-)

[13:16] <lizmat> afk for some ruminating

[17:16] *** linkable6 left
[17:16] *** evalable6 left
[17:17] *** evalable6 joined
[17:17] *** linkable6 joined
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[19:16] <nine> lizmat: I guess.....my guess was wrong :)

[20:32] *** Nemokosch joined
[20:33] <Nemokosch> bisectable6: class Dummy { has $.lmao; method gist { $.lmao xx 2 } };my $foo = Dummy.new: :12lmao; say "The answer is ", $foo

[20:33] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[20:33] <bisectable6> Nemokosch, Output on all releases: https://gist.github.com/e4c96de673fd61c3e9c42ddafdf73a85

[20:33] <bisectable6> Nemokosch, Bisecting by output (old=2017.02 new=2017.03) because on both starting points the exit code is 1

[20:33] <bisectable6> Nemokosch, bisect log: https://gist.github.com/0ea965724df5034690ea025a8c9ec8db

[20:33] <bisectable6> Nemokosch, (2017-03-08) https://github.com/rakudo/rakudo/commit/1eb7b1f796214870b53c7ed055907cb29076dc78

[20:34] <bisectable6> Nemokosch, Bisecting by output (old=2016.04 new=2016.05) because on both starting points the exit code is 1

[20:34] <bisectable6> Nemokosch, bisect log: https://gist.github.com/eb9856ce0ec959812ac16fd0ce07e815

[20:34] <bisectable6> Nemokosch, (2016-05-12) https://github.com/rakudo/rakudo/commit/33ef5a95459b95bf7256391a053550d4efe221de

[20:34] <bisectable6> Nemokosch, Output on all releases and bisected commits: https://gist.github.com/2df7591a7b6339e84312a6dce61308f9

[20:38] <Nemokosch> Hm, never worked

[20:38] <Nemokosch> ... but why not?

[20:39] <vrurg> gist is required to return a Str. Nothing else is expected from it.

[20:40] <vrurg> It's like .Str would return a Numeric.

[20:40] *** sjn is now known as sjn_

[20:41] <Nemokosch> oh oops

[20:41] *** sjn_ is now known as sjn

[20:41] <Nemokosch> I messed up the string multiplication without noticing

[20:42] <Nemokosch> bisectable6: class Dummy { has $.lmao; method gist { $.lmao x 2 } };my $foo = Dummy.new: :12lmao; say "The answer is ", $foo

[20:42] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[20:42] <bisectable6> Nemokosch, ¦6c (67 commits): «The answer is 1212␤»

[20:42] <bisectable6> Nemokosch, Nothing to bisect!

[20:44] <Nemokosch> cool

[20:44] *** Nemokosch left
[20:59] <MasterDuke> nine: did you catch my question/comment about `.resolve-lexical`?

[21:06] *** Nemokosch joined
[21:06] <Nemokosch> okay, next one...

[21:06] <Nemokosch> bisectable6: my ($foo = 1, $bar = 2); say "$foo $bar";

[21:06] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[21:07] <bisectable6> Nemokosch, Output on all releases: https://gist.github.com/f65e7d8f32f1094c1d0a4a70aba2e7eb

[21:07] <bisectable6> Nemokosch, More than 4 changes to bisect, please try a narrower range like old=2019.11 new=HEAD

[21:08] <Nemokosch> if the apparent "default values" don't set anything, why are they allowed?

[21:16] <Nemokosch> seems to be the same issue as https://github.com/rakudo/rakudo/issues/4522

[21:17] *** Nemokosch left
[21:17] *** sena_kun left
