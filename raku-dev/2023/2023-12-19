[02:34] *** MasterDuke joined
[07:00] <releasable6> Next release in ≈2 days and ≈11 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[07:58] *** frost joined
[08:12] *** frost68 joined
[08:14] *** frost left
[08:36] *** frost68 left
[08:36] *** frost joined
[09:21] *** sena_kun joined
[09:39] *** frost left
[10:41] <lizmat> hmmmm  getting roast failures on Sonoma  :-(

[10:42] <lizmat> looks like some new security feature

[10:44] <lizmat> tcgetattr/ioctl: Operation not supported on socket

[10:44] <Geth> ¦ rakudo/main: ccd375b316 | (Elizabeth Mattijsen)++ | src/Perl6/Compiler.nqp

[10:44] <Geth> ¦ rakudo/main: Make sure help message fits in 80 columns

[10:44] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ccd375b316

[10:58] <lizmat> both failing tests use the "run-with-tty" test helper

[11:11] <lizmat> there are only two tests with that helper in roast

[11:15] <lizmat> and since these occurred without any change except the upgrade to Sonoma, I'm going to "todo" these tests for Sonoma for nonw

[11:15] <lizmat> *now

[11:30] <Geth> ¦ roast: 68705c09fd | (Elizabeth Mattijsen)++ | 2 files

[11:30] <Geth> ¦ roast: Mark failing tests on Sonoma as "todo" for now

[11:30] <Geth> ¦ roast: 

[11:30] <Geth> ¦ roast: These tests appear to fail because of some changes with the "script"

[11:30] <Geth> ¦ roast: OS utility on Sonoma, possibly related to new security features.

[11:30] <Geth> ¦ roast: The Raku functionality they try to test, does *not* appear to be

[11:30] <Geth> ¦ roast: affected, so todoing the tests feels like the right thing to do

[11:30] <Geth> ¦ roast: just before the 2023.12 release.

[11:30] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/68705c09fd

[12:55] *** [Tux] joined
[15:52] <Geth> ¦ rakudo: vrurg++ created pull request #5501: Complete generic instantiation 5

[15:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5501

[16:37] <Geth> ¦ L10N/main: 8b37f7ff2e | (Elizabeth Mattijsen)++ | 19 files

[16:37] <Geth> ¦ L10N/main: First commit for L10N collection logic

[16:37] <Geth> ¦ L10N/main: review: https://github.com/Raku/L10N/commit/8b37f7ff2e

[16:50] <Geth> ¦ L10N/main: bb747af2eb | (Elizabeth Mattijsen)++ | 2 files

[16:50] <Geth> ¦ L10N/main: 0.0.1

[16:50] <Geth> ¦ L10N/main: review: https://github.com/Raku/L10N/commit/bb747af2eb

[16:54] <Geth> ¦ L10N/main: c51c926aac | (Elizabeth Mattijsen)++ | 22 files

[16:54] <Geth> ¦ L10N/main: 0.0.2

[16:54] <Geth> ¦ L10N/main: review: https://github.com/Raku/L10N/commit/c51c926aac

[17:38] *** japhb left
[17:48] *** japhb joined
[19:21] *** Altai-man joined
[19:22] *** leont left
[19:22] *** ab5tract left
[19:22] *** leont joined
[19:22] *** ab5tract joined
[19:22] *** guifa left
[19:24] *** guifa joined
[19:24] *** kjp left
[19:24] *** sena_kun left
[19:25] *** kjp joined
[21:38] <Geth> ¦ rakudo/main: 4d38d698f9 | (Vadim Belman)++ | src/Perl6/Metamodel/ClassHOW.nqp

[21:38] <Geth> ¦ rakudo/main: One more measure to prevent MoarVM crash on Apple Silicon

[21:38] <Geth> ¦ rakudo/main: 

[21:38] <Geth> ¦ rakudo/main: Previous fix has lowered the chances of SIGSEGV in MoarVM, but they were

[21:38] <Geth> ¦ rakudo/main: still sufficiently high for it to happen regularly. I'm reluctant to say

[21:38] <Geth> ¦ rakudo/main: this commit fixes the problem, but things are looking way more stable

[21:38] <Geth> ¦ rakudo/main: now.

[21:38] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/4d38d698f9

[21:38] <Geth> ¦ rakudo/main: 69dd7d66ea | (Vadim Belman)++ | 5 files

[21:38] <Geth> ¦ rakudo/main: Be more selective when re-parameterizing hashes and arrays

[21:38] <Geth> ¦ rakudo/main: 

[21:38] <Geth> ¦ rakudo/main: Strip off not all mixing but generic ones only. Normally this would

[21:38] <Geth> ¦ rakudo/main: simply remove `Array::Types`, `Hash::Typed`, or `Hash::Object` mixins

[21:38] <Geth> ¦ rakudo/main: leaving the base classes.

[21:38] <Geth> ¦ rakudo/main: 

[21:38] <Geth> ¦ rakudo/main: The change is needed because if generic is a parameterization of user

[21:38] <Geth> ¦ rakudo/main: <…commit message has 6 more lines…>

[21:38] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/69dd7d66ea

[21:38] <Geth> ¦ rakudo/main: f562e6b123 | (Vadim Belman)++ (committed using GitHub Web editor) | 6 files

[21:38] <Geth> ¦ rakudo/main: Merge pull request #5501 from vrurg/complete-generic-instantiation-5

[21:38] <Geth> ¦ rakudo/main: 

[21:38] <Geth> ¦ rakudo/main: Complete generic instantiation 5

[21:38] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/f562e6b123

[21:41] *** epony left
[22:48] *** Altai-man left
