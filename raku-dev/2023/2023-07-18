[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:48] *** sena_kun joined
[08:11] *** squashable6 left
[08:13] *** squashable6 joined
[08:58] *** squashable6 left
[08:58] *** squashable6 joined
[09:26] <Geth> ¦ roast: f81f6d83cf | (Elizabeth Mattijsen)++ | S26-documentation/04-code.t

[09:26] <Geth> ¦ roast: Fix implicit code block tests

[09:26] <Geth> ¦ roast: 

[09:26] <Geth> ¦ roast: - marked as TODO for now

[09:26] <Geth> ¦ roast: - https://github.com/finanalyst/Rakudoc-BETA/issues/33#issuecomment-1639120735

[09:26] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/f81f6d83cf

[09:33] <Geth> ¦ roast: 2bad65a76a | (Elizabeth Mattijsen)++ | S26-documentation/01-delimited.t

[09:33] <Geth> ¦ roast: Remove bogus tests

[09:33] <Geth> ¦ roast: 

[09:33] <Geth> ¦ roast: https://github.com/finanalyst/Rakudoc-BETA/issues/33#issuecomment-1639120735

[09:33] <Geth> ¦ roast: established that all of those paragraphs are implicit code blocks, because

[09:33] <Geth> ¦ roast: abbreviated blocks such as =head1 do *not* set the margin

[09:33] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/2bad65a76a

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[13:11] <[Coke]> I wonder if some kind of overall project plan-style document would be helpful. (what projects do people consider to be on their individual lists, are there dependencies, is there an overall plan that they are part of.

[14:28] <discord-raku-bot> <nemokosch> Well, if it's not too much effort, it's almost certainly better to at least know where people are heading, even if there is no straightforward path to get there

[14:29] <discord-raku-bot> <nemokosch> I still think that an organized effort for tooling would be a game changer, with relatively little Raku-specific knowledge I guess

[14:32] *** evalable6 left
[14:32] *** linkable6 left
[14:32] *** evalable6 joined
[14:34] *** linkable6 joined
[15:55] <[Coke]> What kind of tooling?

[15:56] <[Coke]> lizmat: is there a list of "these things must be completed before we can release 6.e"? I assume RakuAST is on that list, but not, e.g. "macro re-write in rakuast"

[16:19] <lizmat> being able to build the core setting with the RakuAST grammar, is a hard prerequisite I'd say

[16:23] *** evalable6 left
[16:23] *** linkable6 left
[16:24] *** evalable6 joined
[16:25] *** linkable6 joined
[17:29] * [Coke] throws this against the wall: https://gist.github.com/coke/83ea82167f7531e99db1c25e014e5c81

[17:29] <[Coke]> Comments and additions welcome

[17:51] <jdv> i thought ast was a ways off from being stable

[17:51] <lizmat> what has been implemented, has been pretty stable

[17:51] <jdv> doe that mean 6.e is "a ways off"?

[17:51] <jdv> i mean like not experimental, mostly done.

[17:55] <lizmat> if you do: 'use v6.e.PREVIEW' it's already not experimental anymore  :-)

[17:55] <lizmat> or 'use v6.*'

[17:56] <[Coke]> I imagine we need a changelog for 6.e itself

[18:00] *** reportable6 left
[18:01] <lizmat> yeah, that's going to be quite a job in of itself... but could be started now already

[18:03] *** reportable6 joined
[18:05] <discord-raku-bot> <nemokosch> I have vague recollections that it wasn't clear what will be a distinct RakuAST node and what simply a property of an existing node, there are things like this

[18:06] <discord-raku-bot> <nemokosch> I've said this before but it's better to not jinx that it's stable when probably clearing up the interface will be a much easier, yet more impactful part than getting to a working prototype

[18:08] <discord-raku-bot> <nemokosch> Re [Coke] tooling: highlighter, editor plugins, LSP, profiler, this sort of stuff

[18:09] <discord-raku-bot> <nemokosch> btw a cool "core hacker" tool that might come from RakuAST is a syntax-based grepper

[18:13] *** squashable6 left
[18:16] *** squashable6 joined
[18:37] *** sena_kun left
[18:38] *** sena_kun joined
[19:01] * [Coke] finds https://github.com/bscan/RakuNavigator

[19:03] <[Coke]> (speaking of LSP)

[19:03] <discord-raku-bot> <nemokosch> yep, we talked about it a couple of times

[19:38] *** evalable6 left
[19:38] *** linkable6 left
[19:39] *** evalable6 joined
[19:40] *** linkable6 joined
[21:38] *** sena_kun left
[22:20] *** japhb left
[22:38] *** japhb joined
[23:09] <Geth> ¦ JSON-Unmarshal/add-some-safety: 4 commits pushed by (Vadim Belman)++

[23:09] <Geth> ¦ JSON-Unmarshal/add-some-safety: 96b2d1d200 | Be more explicit about Associative arguments

[23:09] <Geth> ¦ JSON-Unmarshal/add-some-safety: 2974ad39fc | Allow deserializing into non-Any types

[23:09] <Geth> ¦ JSON-Unmarshal/add-some-safety: 7045f3bfe5 | Add optional safety in form of :warn and :die (or :throw) arguments

[23:09] <Geth> ¦ JSON-Unmarshal/add-some-safety: 4a749c9716 | Add plan to all tests

[23:09] <Geth> ¦ JSON-Unmarshal/add-some-safety: review: https://github.com/raku-community-modules/JSON-Unmarshal/compare/96b2d1d200ea^...4a749c9716e3

[23:13] <Geth> ¦ JSON-Unmarshal: vrurg++ created pull request #6: Add some safety

[23:13] <Geth> ¦ JSON-Unmarshal: review: https://github.com/raku-community-modules/JSON-Unmarshal/pull/6

[23:29] *** MasterDuke joined
[23:56] *** squashable6 left
[23:57] *** squashable6 joined
