[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:12] <lizmat> ab5tract: nope, it's after BEGIN time
[00:12] <lizmat> m: BEGIN say "begin"; CHECK say "check"
[00:12] <camelia> rakudo-moar 4a6ea806c: OUTPUT: «begin␤check␤»
[00:12] <lizmat> m: CHECK say "check"; BEGIN say "begin"
[00:12] <camelia> rakudo-moar 4a6ea806c: OUTPUT: «begin␤check␤»
[00:23] <ab5tract> that was an easy proof, wish I had thought of that
[00:24] <lizmat> sleep&
[00:24] <ab5tract> do we have anything earlier than begin-time available in RakuAST? I'm running into scenarios where the lookup of names into package stashes is happening prior to the installation into package stashes
[00:24] <ab5tract> enjoy!
[00:26] <ab5tract> nine: I've pushed my attempt at an IMPL-RESOLVE-NAME-IN-PACKAGES that looks into name parts. Though after looking at the implementations of other IMPL-RESOLVE methods, I realized that I think I'm just duplicating that
[00:33] *** melezhik joined
[00:39] *** NemokoschKiwi joined
[00:39] *** melezhik left
[00:43] *** NemokoschKiwi left
[01:24] *** ab5tract left
[04:14] *** shareable6 left
[04:14] *** benchable6 left
[04:14] *** unicodable6 left
[04:14] *** statisfiable6 left
[04:14] *** bloatable6 left
[04:14] *** notable6 left
[04:14] *** nativecallable6 left
[04:14] *** bisectable6 left
[04:14] *** evalable6 left
[04:14] *** tellable6 left
[04:14] *** coverable6 left
[04:14] *** linkable6 left
[04:14] *** reportable6 left
[04:14] *** squashable6 left
[04:14] *** releasable6 left
[04:14] *** greppable6 left
[04:14] *** sourceable6 left
[04:14] *** shareable6 joined
[04:14] *** reportable6 joined
[04:14] *** sourceable6 joined
[04:14] *** evalable6 joined
[04:14] *** statisfiable6 joined
[04:15] *** bisectable6 joined
[04:15] *** squashable6 joined
[04:15] *** nativecallable6 joined
[04:15] *** unicodable6 joined
[04:15] *** notable6 joined
[04:15] *** releasable6 joined
[04:16] *** linkable6 joined
[04:16] *** greppable6 joined
[04:16] *** coverable6 joined
[04:17] *** tellable6 joined
[04:17] *** bloatable6 joined
[04:17] *** benchable6 joined
[05:17] *** sourceable6 left
[05:17] *** linkable6 left
[05:17] *** evalable6 left
[05:17] *** shareable6 left
[05:17] *** notable6 left
[05:17] *** squashable6 left
[05:17] *** tellable6 left
[05:17] *** statisfiable6 left
[05:17] *** reportable6 left
[05:17] *** greppable6 left
[05:17] *** unicodable6 left
[05:17] *** bisectable6 left
[05:17] *** benchable6 left
[05:17] *** coverable6 left
[05:17] *** releasable6 left
[05:17] *** bloatable6 left
[05:17] *** quotable6 left
[05:17] *** nativecallable6 left
[05:17] *** committable6 left
[05:17] *** committable6 joined
[05:17] *** sourceable6 joined
[05:17] *** squashable6 joined
[05:17] *** greppable6 joined
[05:18] *** releasable6 joined
[05:18] *** linkable6 joined
[05:18] *** benchable6 joined
[05:18] *** unicodable6 joined
[05:18] *** bisectable6 joined
[05:18] *** bloatable6 joined
[05:19] *** quotable6 joined
[05:19] *** evalable6 joined
[05:19] *** tellable6 joined
[05:19] *** shareable6 joined
[05:19] *** nativecallable6 joined
[05:20] *** notable6 joined
[05:20] *** coverable6 joined
[05:20] *** reportable6 joined
[05:20] *** statisfiable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[08:09] <nine> ab5tract there is is-begin-performed-before-children and the corresponding PERFORM-BEGIN-BEFORE-CHILDREN. That's about the earliest one can do something. Worst case is the grammar having to do something. Alternative is to figure out a way to defer those lookups
[08:35] *** sena_kun joined
[09:26] <Geth> ¦ rakudo/main: dbc994398f | (Christian Bartolomäus)++ (committed using GitHub Web editor) | 3 files
[09:26] <Geth> ¦ rakudo/main: Streamline comments about CORE-SETTING-REV
[09:26] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/dbc994398f
[09:30] *** ab5tract joined
[09:32] <ab5tract> hmmm, it's not working with PERFORM-BEGIN-BEFORE-CHILDREN..
[09:33] <ab5tract> later on today I will try with doing it directly in Actions (I assume that's what you meant about doing it directly in the grammar). The defer thingy sounds interesting but complex
[09:45] <nine> What exactly is the problem you're facing?
[09:48] <ab5tract> the installation (and creation of packages) is happening after the grammar for assignment calls resolve-name 
[09:49] <ab5tract> so we get a malformed my error on things like 'subset P::F where 5; my P::F $f = 5'
[09:51] <nine> Oh....yes, you need to call IMPL-CHECK manually from the action, just like in package_def
[09:52] <ab5tract> ok, will take a look at that after my appointment. thanks!
[09:59] <ab5tract> "No such method 'IMPL-QAST-DECL' for invocant of type 'RakuAST::Declaration::External::Constant'" :)
[09:59] <ab5tract> alright, appointment time
[10:01] <ab5tract> the above is probably related to my attempt to get the resolver to use name parts to check packages.
[10:03] <ab5tract> nope, it still happens when I've got my new code commented out. hmmm
[10:03] <ab5tract> okay, really leaving now
[10:07] *** ab5tract left
[11:24] <lizmat> notable6: weekly
[11:24] <notable6> lizmat, 1 note: 2023-01-31T22:36:06Z <NemokoschKiwi>: https://5ab5traction5.bearblog.dev/i-raku-easy-subroutine-shortcuts-to-class-constructors/
[11:30] <lizmat> notable6: weekly reset
[11:30] <notable6> lizmat, Moved existing notes to “weekly_2023-02-06T11:30:48Z”
[11:39] *** raschip joined
[11:43] *** Xliff joined
[11:53] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/02/06/2023-06-ben-davies/
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:08] <nine> lizmat++
[12:46] <Geth> ¦ nqp/main: 848bf1b2ff | (Christian Bartolomäus)++ (committed using GitHub Web editor) | 3 files
[12:46] <Geth> ¦ nqp/main: [JVM] Add op jvmgetunicodeversion (#797)
[12:46] <Geth> ¦ nqp/main: 
[12:46] <Geth> ¦ nqp/main: The idea is to use this op in Rakudo's src/core.e/core_prologue.pm6 to
[12:46] <Geth> ¦ nqp/main: set $?UNICODE-VERSION.
[12:46] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/848bf1b2ff
[12:59] <Geth> ¦ rakudo/main: c8f12210a3 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION
[12:59] <Geth> ¦ rakudo/main: Bump NQP to get nqp::jvmgetunicodeversion support
[12:59] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c8f12210a3
[12:59] *** ab5tract joined
[12:59] <Geth> ¦ rakudo/main: ee277f6568 | (Christian Bartolomäus)++ (committed using GitHub Web editor) | src/core.e/core_prologue.pm6
[12:59] <Geth> ¦ rakudo/main: [JVM] Add support for $?UNICODE-VERSION (#5188)
[12:59] <Geth> ¦ rakudo/main: 
[12:59] <Geth> ¦ rakudo/main: The op "uniprop" isn't available on the JVM backend yet. But since we
[12:59] <Geth> ¦ rakudo/main: rely on Java's Unicode support anyway, we could derive the supported
[12:59] <Geth> ¦ rakudo/main: Unicode version from the Java version. This is hidden in a NQP op,
[12:59] <Geth> ¦ rakudo/main: which is specific for the JVM backend.
[12:59] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/ee277f6568
[13:03] <Geth> ¦ rakudo: lizmat self-assigned set op doesn't preserve class inheritance https://github.com/rakudo/rakudo/issues/5190
[14:20] *** NemokoschKiwi joined
[14:35] *** NemokoschKiwi left
[15:33] <patrickb> I just noticed that the GSoC org applications deadline is tomorrow evening. Is there willingness among the 2021 Mentors to Mentor in 2023 AS well? If yes, we might manage to push the application through. I'm willing to throw time at this. But it only makes sense to do so if we have mentor(s). here is the ideas list of 2021: https://github.com/perl-foundation-outreach/gsoc-2021-ideas/tree/main/raku
[15:37] <patrickb> ^ ping nine, JJ, tony-o, finanalyst, lizmat, donaldh, MasterDuke
[15:37] <discord-raku-bot> <Nemokosch> patrickb++
[15:39] <patrickb> JJ, [Coke]: Do you have time available to wrangle the application form itself or at least provide me with credentials?
[16:01] *** evalable6 left
[16:01] *** linkable6 left
[16:02] *** evalable6 joined
[16:04] *** linkable6 joined
[17:18] <lizmat> patrickb count me in
[17:22] <tonyo> patrickb: i'm willing
[17:22] <tellable6> 2023-02-06T00:45:29Z #raku <guifa> tonyo: melezhik is interested in how to disable tar in fez config
[17:22] <tonyo> guifa: i left a .tell for melezhik in #raku
[17:53] *** notna joined
[17:58] <ab5tract> okay, I'm at a total loss for how to proceed with the remaining subset issues.
[17:59] <ab5tract> I'll be back but first I've got to give the old brain a rest
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:21] <Geth> ¦ rakudo/main: 586466e921 | (Elizabeth Mattijsen)++ | 3 files
[18:21] <Geth> ¦ rakudo/main: Hopefully fix all inheritance issues with set operators
[18:21] <Geth> ¦ rakudo/main: 
[18:21] <Geth> ¦ rakudo/main: In response to https://github.com/rakudo/rakudo/issues/5190
[18:21] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/586466e921
[18:24] <Geth> ¦ roast: a647a0ecae | (Elizabeth Mattijsen)++ | S02-types/bag.t
[18:24] <Geth> ¦ roast: Add test for #5190
[18:24] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/a647a0ecae
[18:45] *** gfldex left
[18:45] *** gfldex joined
[18:54] <Geth> ¦ nqp/main: 51d20a5532 | (Christian Bartolomäus)++ (committed using GitHub Web editor) | docs/ops.markdown
[18:54] <Geth> ¦ nqp/main: Fix link to documentation of jvmgetunicodeversion
[18:54] <Geth> ¦ nqp/main: 
[18:54] <Geth> ¦ nqp/main: The reference to the anchor was missing a trailing ```-jvm```.
[18:54] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/51d20a5532
[18:56] <ab5tract> my changes have caused a number of NativeCall tests to start failing. I'm not sure if it's because I uncovered a subtle bug when I fixed adding nominalizable constraints for parameters
[18:56] <ab5tract> 'No such method 'ACCEPTS' for invocant of type '::?CLASS:D''
[19:00] <ab5tract> I have a feeling that the regression in passing tests in my branch is due to these "post constraints" being ignored before
[19:03] <Geth> ¦ rakudo/lizmat-Unicode-version: ca4daf98d2 | (Elizabeth Mattijsen)++ | 6 files
[19:03] <Geth> ¦ rakudo/lizmat-Unicode-version: Replace $?UNICODE-VERSION by Unicode.version
[19:03] <Geth> ¦ rakudo/lizmat-Unicode-version: 
[19:03] <Geth> ¦ rakudo/lizmat-Unicode-version: - creates a Unicode class to keep info about Unicode versions
[19:03] <Geth> ¦ rakudo/lizmat-Unicode-version: - add a Unicode.version class method with former $?UNICODE-VERSION value
[19:03] <Geth> ¦ rakudo/lizmat-Unicode-version: - add a Unicode.NFG class method indicating support for NFG
[19:03] <Geth> ¦ rakudo/lizmat-Unicode-version: - adapt tests accordingly
[19:03] <Geth> ¦ rakudo/lizmat-Unicode-version: review: https://github.com/rakudo/rakudo/commit/ca4daf98d2
[19:03] <Geth> ¦ rakudo: lizmat++ created pull request #5191: Replace $?UNICODE-VERSION by Unicode.version
[19:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5191
[19:56] <Geth> ¦ nqp: usev6++ created pull request #798: Add --gen-moar/--with-moar to build command
[19:56] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/798
[20:25] *** notna left
[20:57] *** raschip left
[21:08] *** Xliff left
[21:53] <discord-raku-bot> <Nemokosch> okay... so if I understand it correctly, QAST is not meant to contain everything needed to determine the behavior
[21:53] <discord-raku-bot> <Nemokosch> the data structures come from the metamodel, right?
[21:56] *** ab5tract left
[21:57] *** ab5tract joined
[22:05] <Geth> ¦ nqp: usev6++ created pull request #799: Mark t/nqp/063-slurp.t as self-referential
[22:05] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/799
[22:11] <patrickb> Quick call for mentors. It seems that we could actually manage to get our GSoC application through. Having more potential mentors is a good thing (also helps with the application). Whoever fells up to mentoring a project (you don't necessarily need to have a specific project in mind) please speak up in the next 15 hours or so.
[22:14] <discord-raku-bot> <Nemokosch> what does mentoring involve, if I may?
[22:17] <patrickb> If you do have a project idea you are willing to mentor, then type together a description using this https://github.com/perl-foundation-outreach/gsoc-2021-ideas/blob/main/project_template.md template (the repo is not yet up, but please just mail me at [email@hidden.address]
[22:17] <patrickb> If you do have a project idea you are willing to mentor, then type together a description using this https://github.com/perl-foundation-outreach/gsoc-2021-ideas/blob/main/project_template.md template (the repo is not yet up, but please just mail me at patrick.boeker@posteo.de)
[22:17] <patrickb> https://github.com/perl-foundation-outreach/gsoc-2021-ideas/blob/main/mentors-guide.md
[22:17] <patrickb> See here
[22:24] <discord-raku-bot> <Nemokosch> thankies
[22:32] *** ab5tract left
[23:17] *** squashable6 left
[23:20] *** squashable6 joined
[23:32] *** sena_kun left
[23:53] *** rypervenche left
