[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:06] <Geth> Â¦ rakudo/ugexe/remove-unneeded-nqp-lib: 4a66191130 | (Nick Logan)++ | src/vm/moar/ModuleLoaderVMConfig.nqp

[00:06] <Geth> Â¦ rakudo/ugexe/remove-unneeded-nqp-lib: Remove nqp/lib from vm search paths

[00:06] <Geth> Â¦ rakudo/ugexe/remove-unneeded-nqp-lib: 

[00:06] <Geth> Â¦ rakudo/ugexe/remove-unneeded-nqp-lib: The removed comment suggests that this code shouldn't be needed

[00:06] <Geth> Â¦ rakudo/ugexe/remove-unneeded-nqp-lib: anymore, since `:from<NQP>` was implemented at some point. The

[00:06] <Geth> Â¦ rakudo/ugexe/remove-unneeded-nqp-lib: passing `make test` and `make spectest` also suggest this code is

[00:06] <Geth> Â¦ rakudo/ugexe/remove-unneeded-nqp-lib: not needed anymore. However, to be clear, I'm not sure why the

[00:06] <Geth> Â¦ rakudo/ugexe/remove-unneeded-nqp-lib: `:from<NQP>` adverb might make this library inclusion required.

[00:06] <Geth> Â¦ rakudo/ugexe/remove-unneeded-nqp-lib: review: https://github.com/rakudo/rakudo/commit/4a66191130

[00:07] <Geth> Â¦ rakudo: ugexe++ created pull request #5304: Remove nqp/lib from vm search paths

[00:07] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5304

[00:10] <ugexe> ðŸ¤·

[00:15] <Geth> Â¦ rakudo/main: 0e0aae3768 | (Nick Logan)++ (committed using GitHub Web editor) | src/core.c/Any.pm6

[00:15] <Geth> Â¦ rakudo/main: Removed resolved/old comment

[00:15] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0e0aae3768

[00:18] <ugexe> https://github.com/rakudo/rakudo/blob/64c48f6cf32f7c4a333aa57ea4853eaf4cb618e4/src/rakudo-debug.nqp#L449-L452 I wonder which can be deleted -- the comment or the code the comment references...

[00:21] <ugexe> https://github.com/rakudo/rakudo/blob/64c48f6cf32f7c4a333aa57ea4853eaf4cb618e4/docs/architecture.svg?plain=1#L340 -- lol... renamed Perl6 -> Raku, but left Parrot in the architecture

[00:21] <MasterDuke> i think i tried removing that exact code once and something broke, don't remember what though

[00:22] <MasterDuke> hm. or maybe it was an `#if jvm` thing i'm thinking of...

[00:22] <ugexe> ah, probably is referenced by https://github.com/rakudo/rakudo/blob/0e0aae3768785b556b0477e29c3c5cef963d05aa/docs/architecture.html which does say its obsolete

[00:23] <ugexe> oh sorry, you meant the ARGS thing

[00:23] <ugexe> can probably just remove the comment then

[00:25] <ugexe> https://github.com/rakudo/rakudo/blob/0e0aae3768785b556b0477e29c3c5cef963d05aa/src/main.nqp#L81 -- i wonder if this 'transcode' option is used anymore

[00:27] <MasterDuke> oh, i think https://github.com/rakudo/rakudo/blob/0e0aae3768785b556b0477e29c3c5cef963d05aa/src/main.nqp#L59-L67 is what i was thinking of, tried to consolidate them and couldn't

[00:29] <ugexe> that seems familiar... did you maybe try to consolidate those as well as modify the block of code i linked? cause that seems like it would "fix" and discrepancy in behavior at first glance

[00:30] <MasterDuke> re 'transcode', src/HLL/Compiler.nqp:546 looks like maybe it's still relevant

[00:30] <MasterDuke> re ARGS pieces of code, i don't remember what i tried exactly

[00:32] <ugexe> that line calls apply_transcodings which doesn't do anything on any of the backends

[00:32] <ugexe> it just returns the first argument and ignores the second

[00:32] <MasterDuke> ugh...i know why my DirRecurse!pull-one change was causing it to not recurse. 'boot-sycall' ne 'boot-syscall', but it was wrapped in the try and i never saw any error...

[00:32] <ugexe> i.e. https://github.com/Raku/nqp/blob/492fe69d1aea8f8823fa2a5144185284167bce4f/src/vm/moar/HLL/Backend.nqp#L93-L95

[00:32] <MasterDuke> ha

[00:33] <MasterDuke> is it just NYI? or did something else in the past and now doesn't?

[00:33] <ugexe> heh yeah, the only error i was afraid of when i added it was typos in the future

[00:33] <ugexe> my guess is that parrot used it

[00:34] <MasterDuke> new huh. `Failed to stat file: too many symbolic links encountered`

[00:35] <MasterDuke> but it is now recursing...

[00:36] <ugexe> that sounds like a limitation we might enforce in rakudo or moarvm

[00:36] <ugexe> although i guess maybe it could be libuv

[00:36] <MasterDuke> that message is from libuv

[00:37] <MasterDuke> but why didn't we get it before?

[00:38] <timo> are you logging the stat calls? for example with strace?

[00:38] <MasterDuke> sort of, i was just printing them

[00:38] <ugexe> is it from nqp::stat or nqp::lstat

[00:38] <MasterDuke> stat

[00:39] <MasterDuke> more precisely, my new syscall with calls the moarvm implementation function with is_lstat = 0

[00:39] <timo> i think we manually follow links in the dir-recurse code with resolve

[00:39] <MasterDuke> *which calls

[00:41] <ugexe> yeah, that :transcode option was used by parrot. every other backend just returns the first argument

[00:41] <ugexe> https://github.com/Raku/nqp/blob/27bc873706e7d0784194562464e81d5eadce592e/src/vm/parrot/HLL/Backend.nqp#L5-L13

[00:42] <ugexe> do you have a diff of dir-recurse with your changes?

[00:42] <MasterDuke> timo: yeah, https://github.com/rakudo/rakudo/blob/main/src/core.c/Rakudo/Internals.pm6#L1400

[00:43] <MasterDuke> ah, moving is seems to have worked...

[00:43] <MasterDuke> https://gist.github.com/MasterDuke17/1e92035ebf637d98b618e6a062a83de2

[00:44] <ugexe> wouldn't you need to reverse the ACCEPTS / stat call?

[00:44] <ugexe> if ACCEPTS returns false $s wont be set 

[00:44] <MasterDuke> yeah

[00:47] <MasterDuke> `time raku -I . -e 'use Test'` doesn't seem to be any faster

[00:48] <MasterDuke> though we do seem to be calling stat on every entry with '.' and '..' added...

[00:49] <ugexe> don't reverse the ACCEPTS on the directory

[00:49] <ugexe> that will avoid some of those cases

[00:49] <MasterDuke> i didn't

[00:49] <ugexe> oh right, i see

[00:50] <MasterDuke> i think it comes from self!next

[00:50] <MasterDuke> doh. of course it does

[00:55] <MasterDuke> well, adding `(next if $entry eq '.' or $entry eq '..'),` reduced the number of stat calls by ~30k, but didn't seem to change the timing very much

[00:59] <MasterDuke> stock rakudo does ~171k stats. with my initial changes it does ~156k. skipping . and .. it does ~126k

[01:01] <MasterDuke> in a directory where `find . | wc -l` reports ~113k

[01:05] <ugexe> might be nice if someone using a raspberry pi was able to benchmark it

[01:05] <ugexe> i guess they sort of can by just timing for 1..30000 { nqp::stat(...) }

[01:07] <MasterDuke> i could try it in some directory on my spinning rust disk

[01:07] <ugexe> not sure if thats a good benchmark either though based on however filesystems might cache that

[01:22] <ugexe> if i still had a laptop with FUZE on it i'd probably try that as well (i.e. sshfs)

[01:30] <MasterDuke> well, it seems like a worthwhile change regardless of exactly how much faster it is. not a large diff, but does reduce the number of stats by a decent amount

[01:30] <ugexe> agreed

[01:47] <timo> only using one stat on the same file instead of two also helps against inconsistent results inside the recursion itself

[01:48] <timo> though you're still going to get cases where something returned from dir recurse or whatever else can get deleted between when you got the result to when you try to actually open it, that's just the nature of file systems and processes and what not

[01:48] <timo> i wonder if we can do anything for users for this case to make it less painful in general

[01:49] <timo> actually, does DirRecurse die when a folder gets deleted at an inopportune moment while you're iterating over it?

[01:49] <MasterDuke> dunno

[01:49] <timo> easy to do if you pause execution in gdb rather than having to get the timing just right

[01:50] <timo> or doing something like sleep 0.1 in the loop bodyd

[01:51] <MasterDuke> btw. my change doesn't make much of an improvement when run in a directory with 37k files on a spinning disk (though i assume stuff being cached by the os is why)

[02:04] <MasterDuke> huh. even when mounting said directory via sshfs from my slow laptop it still doesn't make a really noticeable difference

[02:04] <MasterDuke> but the numbers are *extremely* variable, so maybe i'm just not getting good measurements

[02:06] *** Util left
[02:07] <ugexe> i guess it would make sense for something like sshfs to cache file attributes and directory contents really aggressively 

[02:07] <MasterDuke> yeah, by my numbers, when run right after each other, vary between 7s and 30s

[02:08] <MasterDuke> so it's not caching everything

[02:08] <MasterDuke> *but my

[03:48] <Geth> Â¦ rakudo/ugexe-patch-1: 53440ad774 | (Nick Logan)++ (committed using GitHub Web editor) | src/Raku/ast/code.rakumod

[03:48] <Geth> Â¦ rakudo/ugexe-patch-1: Fix syntax error when building on JVM

[03:48] <Geth> Â¦ rakudo/ugexe-patch-1: review: https://github.com/rakudo/rakudo/commit/53440ad774

[03:48] <Geth> Â¦ rakudo: ugexe++ created pull request #5305: Fix syntax error when building on JVM

[03:48] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5305

[05:13] *** reportable6 left
[05:13] *** linkable6 left
[05:13] *** committable6 left
[05:13] *** evalable6 left
[05:13] *** notable6 left
[05:13] *** bisectable6 left
[05:13] *** sourceable6 left
[05:13] *** coverable6 left
[05:13] *** greppable6 left
[05:13] *** bloatable6 left
[05:13] *** statisfiable6 left
[05:13] *** shareable6 left
[05:13] *** nativecallable6 left
[05:13] *** squashable6 left
[05:13] *** unicodable6 left
[05:13] *** releasable6 left
[05:13] *** benchable6 left
[05:13] *** quotable6 left
[05:13] *** tellable6 left
[05:14] *** benchable6 joined
[05:14] *** linkable6 joined
[05:14] *** quotable6 joined
[05:14] *** reportable6 joined
[05:15] *** coverable6 joined
[05:15] *** bisectable6 joined
[05:15] *** unicodable6 joined
[05:15] *** shareable6 joined
[05:15] *** nativecallable6 joined
[05:15] *** greppable6 joined
[05:15] *** committable6 joined
[05:15] *** evalable6 joined
[05:16] *** notable6 joined
[05:16] *** squashable6 joined
[05:16] *** releasable6 joined
[05:16] *** tellable6 joined
[05:16] *** statisfiable6 joined
[05:16] *** sourceable6 joined
[05:16] *** bloatable6 joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:02] *** benchable6 left
[07:02] *** coverable6 left
[07:03] *** coverable6 joined
[07:04] *** benchable6 joined
[08:10] <gfldex>  

[08:11] *** sena_kun joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[13:42] <ugexe> https://github.com/Raku/nqp/blob/main/src/core/IO.nqp - i don't think the documentation in some of these files is valid pod or pod6

[14:03] <Geth> Â¦ rakudo/main: 53440ad774 | (Nick Logan)++ (committed using GitHub Web editor) | src/Raku/ast/code.rakumod

[14:03] <Geth> Â¦ rakudo/main: Fix syntax error when building on JVM

[14:03] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/53440ad774

[14:03] <Geth> Â¦ rakudo/main: 9db68fbef1 | (Nick Logan)++ (committed using GitHub Web editor) | src/Raku/ast/code.rakumod

[14:03] <Geth> Â¦ rakudo/main: Merge pull request #5305 from rakudo/ugexe-patch-1

[14:03] <Geth> Â¦ rakudo/main: 

[14:03] <Geth> Â¦ rakudo/main: Fix syntax error when building on JVM

[14:03] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/9db68fbef1

[15:06] *** dogbert17 joined
[15:07] <dogbert17> ESA Euclid Space Mission liftoff is imminent: https://www.youtube.com/watch?v=2OJ6lCFS29Y

[15:17] *** guifa joined
[15:22] <lizmat> it was an excellent launch with excellent views!

[15:26] <dogbert17> indeed it was

[15:27] <Geth> Â¦ rakudo/ugexe/remove-nqp-lib-leftovers: 55537e9b29 | (Nick Logan)++ | 3 files

[15:27] <Geth> Â¦ rakudo/ugexe/remove-nqp-lib-leftovers: Remove deprecated --nqp-lib option

[15:27] <Geth> Â¦ rakudo/ugexe/remove-nqp-lib-leftovers: 

[15:27] <Geth> Â¦ rakudo/ugexe/remove-nqp-lib-leftovers: The --nqp-lib option has had no effect for years, and it was

[15:27] <Geth> Â¦ rakudo/ugexe/remove-nqp-lib-leftovers: supposed to be removed long ago. This removes any remaining

[15:27] <Geth> Â¦ rakudo/ugexe/remove-nqp-lib-leftovers: --nqp-lib option related code.

[15:27] <Geth> Â¦ rakudo/ugexe/remove-nqp-lib-leftovers: review: https://github.com/rakudo/rakudo/commit/55537e9b29

[15:28] <Geth> Â¦ rakudo: ugexe++ created pull request #5306: Remove deprecated --nqp-lib option

[15:28] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5306

[15:32] <dogbert17> payload will be deployed in 19 minutes

[15:40] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: 91fdd538e7 | (Nick Logan)++ | src/core.c/Proc.pm6

[15:40] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: Remove deprecated Proc.status

[15:40] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: 

[15:40] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: Proc.status wasn't intended to be part of the public api and was

[15:40] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: deprecated (see #1366). Per the existing deprecation message, this

[15:40] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: method should have been deleted a year ago. This change follows

[15:40] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: through on the deprecation message and deletes Proc.status.

[15:40] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: review: https://github.com/rakudo/rakudo/commit/91fdd538e7

[15:40] <Geth> Â¦ rakudo: ugexe++ created pull request #5307: Remove deprecated Proc.status

[15:40] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5307

[16:17] *** evalable6 left
[16:18] *** evalable6 joined
[16:33] *** ab5tract joined
[17:05] <Geth> Â¦ rakudo/main: 3c2af23720 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Fixups.pm6

[17:05] <Geth> Â¦ rakudo/main: RakuAST: make sure table errors are reported correctly

[17:05] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/3c2af23720

[17:15] *** ab5tract left
[17:17] <Geth> Â¦ rakudo/main: fed1515d95 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Fixups.pm6

[17:17] <Geth> Â¦ rakudo/main: RakuAST: allow escaped column separators

[17:17] <Geth> Â¦ rakudo/main: 

[17:17] <Geth> Â¦ rakudo/main: in tables with invisible column separators

[17:17] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fed1515d95

[17:36] <[Coke]> lizmat++

[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:31] <Geth> Â¦ rakudo/main: 93dd19f8db | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Fixups.pm6

[18:31] <Geth> Â¦ rakudo/main: RakuAST: make sure X<> is handled correctly

[18:31] <Geth> Â¦ rakudo/main: 

[18:31] <Geth> Â¦ rakudo/main: Borked in e66bcd670c

[18:31] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/93dd19f8db

[19:18] <Geth> Â¦ rakudo/main: fcf1c3ffbb | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Fixups.pm6

[19:18] <Geth> Â¦ rakudo/main: RakuAST: fix implicit code checking

[19:18] <Geth> Â¦ rakudo/main: 

[19:18] <Geth> Â¦ rakudo/main: Multiple implicit code blocks intermixed with text in a single

[19:18] <Geth> Â¦ rakudo/main: block, would only see the first implicit code block.

[19:18] <Geth> Â¦ rakudo/main: 

[19:18] <Geth> Â¦ rakudo/main: This was caused by not resetting the leading whitespace when text

[19:18] <Geth> Â¦ rakudo/main: was encountered.

[19:18] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/fcf1c3ffbb

[19:42] <Geth> Â¦ rakudo/main: 101d3ca5d0 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/LegacyPodify.pm6

[19:42] <Geth> Â¦ rakudo/main: RakuAST: make sure text in markup atoms is sanitized

[19:42] <Geth> Â¦ rakudo/main: 

[19:42] <Geth> Â¦ rakudo/main: when it is rendered to legacy pod

[19:42] <Geth> Â¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/101d3ca5d0

[19:53] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: e8d09805e8 | (Nick Logan)++ | t/04-nativecall/CompileTestLib.rakumod

[19:53] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: Rename variable to actually describe what it is

[19:53] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: review: https://github.com/rakudo/rakudo/commit/e8d09805e8

[19:53] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: b78970bf7f | (Nick Logan)++ | t/04-nativecall/CompileTestLib.rakumod

[19:53] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: Remove use of slurp-rest

[19:53] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: review: https://github.com/rakudo/rakudo/commit/b78970bf7f

[19:53] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: 6fccc7bd7f | (Nick Logan)++ | t/04-nativecall/CompileTestLib.rakumod

[19:53] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: Remove use of Proc.status

[19:53] <Geth> Â¦ rakudo/ugexe/remove-deprecated-proc-status: review: https://github.com/rakudo/rakudo/commit/6fccc7bd7f

[20:00] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: 45e39e61a8 | (Nick Logan)++ | 2 files

[20:00] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: Remove unused transcode compiler option

[20:00] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: 

[20:00] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: This appears to have only been used by Parrot. Every other backend

[20:00] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: has their apply_transcodings function in nqp return the original

[20:00] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: input without any modifications. This change stops passing the

[20:00] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: transpiler option.

[20:00] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: review: https://github.com/rakudo/rakudo/commit/45e39e61a8

[20:09] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: 379bc81aa9 | (Nick Logan)++ | 4 files

[20:09] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: Remove unused apply_transcoding compiler function

[20:09] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: 

[20:09] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: This appears to have only been used by Parrot. Every other backend

[20:09] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: has their apply_transcodings function in nqp return the original

[20:09] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: input without any modifications. This change removes the apply

[20:09] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: transcodings function, and the code that called it.

[20:09] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: review: https://github.com/Raku/nqp/commit/379bc81aa9

[20:10] <Geth> Â¦ nqp: ugexe++ created pull request #804: Remove unused apply_transcoding compiler function

[20:10] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/pull/804

[20:11] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: aca81e9225 | (Nick Logan)++ | 2 files

[20:11] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: Remove unused transcode compiler option

[20:11] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: 

[20:11] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: This appears to have only been used by Parrot. Every other backend

[20:11] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: has their apply_transcodings function in nqp return the original

[20:11] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: input without any modifications. This change stops passing the

[20:11] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: transcoding option.

[20:11] <Geth> Â¦ rakudo/ugexe/remove-unused-transcode-option: review: https://github.com/rakudo/rakudo/commit/aca81e9225

[20:11] <Geth> Â¦ rakudo: ugexe++ created pull request #5308: Remove unused transcode compiler option

[20:11] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5308

[20:12] <ugexe> When do we need to rebootstrap stage0?

[20:12] <ugexe> git grep transcoding

[20:12] <ugexe> Binary file src/vm/jvm/stage0/NQPHLL.jar matches

[20:12] <ugexe> Binary file src/vm/moar/stage0/NQPHLL.moarvm matches

[20:12] <ugexe> (those are matching on a function I removed in the above PRs)

[20:16] <lizmat> nine MasterDuke jnthn might know

[20:18] <ugexe> I suspect I'll be fine in this case since I'm deleting the code that would call that function

[20:19] *** sena_kun left
[20:24] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: 1a48ed20b9 | (Nick Logan)++ | 5 files

[20:24] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: Remove unused transcode compiler option

[20:24] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: 

[20:24] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: This appears to have only been used by Parrot. This change stops

[20:24] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: passing the transcoding option.

[20:24] <Geth> Â¦ nqp/ugexe/remove-unused-transcode-option: review: https://github.com/Raku/nqp/commit/1a48ed20b9

[20:32] <ugexe> patrickb: whats the best way to mark the jvm builds as ignoring failures? and should we?

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: e363cb5657 | (Nick Logan)++ | 35 files

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: Copy modules from lib/ to individual distributions at core-lib/

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: 

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: As the first step of splitting the core modules into multiple

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: distributions we will copy the modules into subdirectories of

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: core-lib/, grouping them in a way that seems logical. In a

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: future step we will incorporate these new paths to various parts

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: of the tooling (since we will need to do -Icore-libs/BUILDPLAN,

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: -Icore-libs/NativeCall, and so on) and delete the still existing

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: lib/ directory.

[21:31] <Geth> Â¦ rakudo/ugexe/distributionfy-core-dists: review: https://github.com/rakudo/rakudo/commit/e363cb5657

[23:11] *** quotable6 left
[23:11] *** reportable6 left
[23:11] *** coverable6 left
[23:11] *** notable6 left
[23:11] *** unicodable6 left
[23:11] *** committable6 left
[23:11] *** benchable6 left
[23:11] *** nativecallable6 left
[23:11] *** sourceable6 left
[23:11] *** linkable6 left
[23:11] *** bisectable6 left
[23:11] *** releasable6 left
[23:11] *** shareable6 left
[23:11] *** tellable6 left
[23:11] *** greppable6 left
[23:11] *** statisfiable6 left
[23:11] *** evalable6 left
[23:11] *** squashable6 left
[23:11] *** bloatable6 left
[23:11] *** shareable6 joined
[23:11] *** statisfiable6 joined
[23:11] *** unicodable6 joined
[23:12] *** notable6 joined
[23:12] *** sourceable6 joined
[23:13] *** coverable6 joined
[23:13] *** greppable6 joined
[23:13] *** squashable6 joined
[23:13] *** releasable6 joined
[23:13] *** quotable6 joined
[23:13] *** bisectable6 joined
[23:13] *** nativecallable6 joined
[23:13] *** tellable6 joined
[23:13] *** committable6 joined
[23:13] *** reportable6 joined
[23:14] *** evalable6 joined
[23:14] *** linkable6 joined
[23:14] *** bloatable6 joined
[23:14] *** benchable6 joined
