[00:01] *** Voldenet left
[00:21] *** Voldenet joined
[00:35] *** buildable6 left
[00:36] *** buildable6 joined
[01:36] *** buildable6 left
[01:39] *** buildable6 joined
[01:51] *** buildable6__ joined
[01:51] *** buildable6 left
[02:39] *** buildable6__ left
[02:43] *** buildable6 joined
[03:43] *** buildable6 left
[03:45] *** buildable6 joined
[03:49] *** buildable6 left
[03:49] *** buildable6 joined
[04:45] *** buildable6 left
[04:48] *** buildable6 joined
[05:48] *** buildable6 left
[05:50] *** buildable6 joined
[06:50] *** buildable6 left
[06:53] *** buildable6 joined
[07:09] <Geth> ¦ rakudo/main: 53a79941f9 | (Christian Bartolomäus)++ (committed using GitHub Web editor) | src/core.c/Backtrace.rakumod
[07:09] <Geth> ¦ rakudo/main: (Re-)align backtraces on JVM with MoarVM (#5421)
[07:09] <Geth> ¦ rakudo/main: 
[07:09] <Geth> ¦ rakudo/main: With 04a3127569 backtraces on the JVM backend started to include
[07:09] <Geth> ¦ rakudo/main: references to NQP's internals. This commit intends to apply the
[07:09] <Geth> ¦ rakudo/main: changes from 04a3127569 to the JVM backend, too.
[07:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/53a79941f9
[07:53] *** buildable6 left
[07:55] *** buildable6 joined
[08:25] *** sena_kun joined
[08:54] *** sjn left
[08:55] *** buildable6 left
[08:56] *** buildable6 joined
[08:58] *** sjn joined
[09:48] <Geth> ¦ rakudo/main: bd5a28c904 | (Elizabeth Mattijsen)++ | 18 files
[09:48] <Geth> ¦ rakudo/main: RakuAST: add localization of quote-lang markers
[09:48] <Geth> ¦ rakudo/main: 
[09:48] <Geth> ¦ rakudo/main: Specifically: m ms q Q qq rx s S ss Ss .
[09:48] <Geth> ¦ rakudo/main: 
[09:48] <Geth> ¦ rakudo/main: Technically, ms ss Ss are really synonyms for m:ss s:ss S:ss respectively
[09:48] <Geth> ¦ rakudo/main: but that proved very hard to solve with the given grammar tokens,
[09:48] <Geth> ¦ rakudo/main: because all of these markers need to check whether there is an entity
[09:48] <Geth> ¦ rakudo/main: <…commit message has 10 more lines…>
[09:48] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/bd5a28c904
[09:56] *** buildable6 left
[10:00] *** buildable6 joined
[10:05] <Geth> ¦ rakudo/main: 05a2c26ef6 | (Elizabeth Mattijsen)++ | 3 files
[10:05] <Geth> ¦ rakudo/main: RakuAST: add missing entries to French localization
[10:05] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/05a2c26ef6
[10:24] <Geth> ¦ rakudo/main: d8d79a323c | (Elizabeth Mattijsen)++ | 5 files
[10:24] <Geth> ¦ rakudo/main: RakuAST: "ss" is not a quoting adverb
[10:24] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d8d79a323c
[11:00] *** buildable6 left
[11:06] *** buildable6 joined
[11:10] *** buildable6 left
[11:10] *** buildable6 joined
[11:38] *** sena_kun left
[11:41] <nine> It's becoming quite obvious that post processing the QAST for BEGIN time execution is actually the only way to go.
[11:42] <nine> There are cases where we generate the QAST before we know that we will execute it at BEGIN time. And there are cases where we execute at BEGIN time and also at runtime which will require different QAST.
[11:43] <nine> This again leaves the question of where to get the static values from when I replace QAST::Vars in post procesing with QAST::WVals.
[11:43] <nine> I think, I may be able to annotate the QAST::Vars with their originating RakuAST nodes. That would give me access to the resolved values.
[11:47] <lizmat> why not annotate them with the constant value to begin with ?
[11:47] <lizmat> ah, too soon I guess  ok
[11:49] <nine> Well....that is actually not a bad question at all.
[11:50] <nine> This could cause some unwanted early processing. The value may e.g. be the meta object. Though I guess we rarely make it through QAST creation without also creating meta objects.
[11:51] <lizmat> unwanted or unneeded ?
[11:55] <Geth> ¦ rakudo/main: 36844606d8 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp
[11:55] <Geth> ¦ rakudo/main: RakuAST: fix issue with < > in regexes
[11:55] <Geth> ¦ rakudo/main: 
[11:55] <Geth> ¦ rakudo/main: Turns out we should simply use $*LANG as the invocant to get the
[11:55] <Geth> ¦ rakudo/main: appropriate quote language inside a regex
[11:55] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/36844606d8
[11:57] <nine> Both I guess :) Unneeded since we should be able to defer getting the resolved value and unwanted because early anything usually triggers the need to do other things earlier.
[12:03] <Geth> ¦ rakudo/main: 2b365ac9e6 | (Elizabeth Mattijsen)++ | 3 files
[12:03] <Geth> ¦ rakudo/main: Rakuast: fix NL localization on qq//
[12:03] <Geth> ¦ rakudo/main: 
[12:03] <Geth> ¦ rakudo/main: It's dq now.  Also use as a test for the functionality of
[12:03] <Geth> ¦ rakudo/main: localizing quote-lang markers.
[12:03] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/2b365ac9e6
[12:06] *** buildable6 left
[12:07] <lizmat> m: $_ = "bar"; say m/ < foo bar >/    # so this works
[12:07] <camelia> rakudo-moar d8d79a323: OUTPUT: «｢bar｣␤»
[12:07] <lizmat> m: $_ = "bar"; say m/ << foo bar >>/ 
[12:07] <camelia> rakudo-moar d8d79a323: OUTPUT: «Potential difficulties:␤    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)␤    at <tmp>:1␤    ------> $_ = "bar"; say m/ << foo⏏…»
[12:07] <lizmat> so why doesn't that ?
[12:09] *** buildable6 joined
[12:09] <ab5tract_> m: Q| $_ = “bar”; say m/<< foo bar >>/ |.AST.EVAL
[12:09] <camelia> rakudo-moar d8d79a323: OUTPUT: «Potential difficulties:␤    Space is not significant here; please use quotes or :s (:sigspace)␤    modifier (or, to suppress this warning, omit the space, or otherwise␤    change the spacing).␤    ------>  $_ = “bar”; say m/<< foo⏏…»
[12:10] <ab5tract_> intriguing
[12:11] <lizmat> yeah, the fix should be easy in the Raku grammar, and I have half a mind to just implement it  :-)
[12:11] <lizmat> but after some fresh air&
[13:09] *** buildable6 left
[13:10] *** buildable6 joined
[14:10] *** buildable6 left
[14:12] *** buildable6 joined
[14:41] <Geth> ¦ nqp/main: 15ad295980 | (Christian Bartolomäus)++ | 2 files
[14:41] <Geth> ¦ nqp/main: Tweak docs for continuations (s/shift/control/)
[14:41] <Geth> ¦ nqp/main: 
[14:41] <Geth> ¦ nqp/main: The remaining references to continuationshift were overlooked back
[14:41] <Geth> ¦ nqp/main: in 2013 in 6cfee5accc (following up on 9aeeadd231).
[14:41] <Geth> ¦ nqp/main: 
[14:41] <Geth> ¦ nqp/main: (Also replace ".perl" with ".raku" in the example code.)
[14:41] <Geth> ¦ nqp/main: review: https://github.com/Raku/nqp/commit/15ad295980
[15:03] <Geth> ¦ rakudo: vrurg++ created pull request #5439: Fix handling of dynamic containers on 6.e PseudoStash
[15:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5439
[15:12] *** buildable6 left
[15:14] <Geth> ¦ rakudo/main: 0479e2fd8b | (Vadim Belman)++ | src/core.e/PseudoStash.rakumod
[15:14] <Geth> ¦ rakudo/main: Fix handling of dynamic containers on 6.e PseudoStash
[15:14] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/663da63ae6
[15:14] <Geth> ¦ rakudo/main: 
[15:14] <Geth> ¦ rakudo/main: Before it was trying to provide support for Array and Hash containers.
[15:14] <Geth> ¦ rakudo/main: But since `.VAR` returns the original object when there is no `Scalar`
[15:14] <Geth> ¦ rakudo/main: container the code was considering as dynamic symbols any kind of symbol
[15:14] <Geth> ¦ rakudo/main: which has a returning true `dynamic` method. Aside of that, attempt to
[15:14] <Geth> ¦ rakudo/main: test for the method on roles was causing them to pun unintentionally.
[15:14] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/0479e2fd8b
[15:14] <Geth> ¦ rakudo/main: 663da63ae6 | (Vadim Belman)++ (committed using GitHub Web editor) | src/core.e/PseudoStash.rakumod
[15:14] <Geth> ¦ rakudo/main: Merge pull request #5439 from vrurg/fix-pseudostash-container-handling
[15:14] <Geth> ¦ rakudo/main: 
[15:14] <Geth> ¦ rakudo/main: Fix handling of dynamic containers on 6.e PseudoStash
[15:15] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/663da63ae6
[15:21] *** buildable6 joined
[15:25] *** buildable6 left
[15:25] *** buildable6 joined
[16:04] <lizmat> m: $_ = "FOO"; say m/ :5i foo /   # /me wonders what the 5 means  :-)
[16:04] <camelia> rakudo-moar 663da63ae: OUTPUT: «｢FOO｣␤»
[16:11] <lizmat> m: $_ = "FOO"; say m/ :i(42) foo /
[16:11] <camelia> rakudo-moar 663da63ae: OUTPUT: «｢FOO｣␤»
[16:11] <lizmat> m: $_ = "FOO"; say m/ :i( 42) foo /
[16:11] <camelia> rakudo-moar 663da63ae: OUTPUT: «Nil␤»
[16:12] <lizmat> weird
[16:14] <ab5tract_> Seriously strange
[16:16] <lizmat> yeah, I'm not going to allow that nonsense in the Raku grammar
[16:16] <lizmat> it's all from NQP's grammar QRegex::P6Regex::Grammar
[16:16] <ab5tract_> lizmat++
[16:18] <lizmat> aahhh.,  I realize what the nonsense is about: allowing :dba(foo)
[16:21] *** buildable6 left
[16:22] *** buildable6 joined
[17:15] *** sena_kun joined
[17:22] *** buildable6 left
[17:23] *** buildable6 joined
[17:28] *** buildable6 left
[17:28] *** buildable6 joined
[17:32] *** buildable6 left
[17:32] *** buildable6 joined
[17:45] <ab5tract_> I’ve been curious what that dba stuff is all about
[17:52] <lizmat> it''s a form of comment
[17:52] <lizmat> doing business as 
[17:52] <lizmat> why it is implemented as a internal modifier, beats me
[17:52] <lizmat> I haven't seen any place it's being introspected internally
[18:23] *** buildable6 left
[18:25] *** buildable6 joined
[18:31] <Geth> ¦ rakudo/main: 9a115ba4f4 | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp
[18:31] <Geth> ¦ rakudo/main: RakuAST: do quote adverb localization at the right place
[18:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/9a115ba4f4
[18:31] <Geth> ¦ rakudo/main: 7fcbfd657c | (Elizabeth Mattijsen)++ | 2 files
[18:31] <Geth> ¦ rakudo/main: RakuAST: add localization of internal regex modifiers
[18:31] <Geth> ¦ rakudo/main: 
[18:31] <Geth> ¦ rakudo/main: - hide token metachar:sym<mod> from NQP with a local implementation
[18:31] <Geth> ¦ rakudo/main: - create a local token metachar:sym<dba> for handling :dba()
[18:31] <Geth> ¦ rakudo/main: - use regex adverb lookup to do internal modifier localization
[18:31] <Geth> ¦ rakudo/main: 
[18:31] <Geth> ¦ rakudo/main: This removes support for the undocumented (and untested) :42i and :i(42)
[18:31] <Geth> ¦ rakudo/main: <…commit message has 7 more lines…>
[18:31] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/7fcbfd657c
[19:25] *** buildable6 left
[19:28] *** buildable6 joined
[20:08] <ab5tract_> Seems that we had a regression in RakuAST: `t/12-rakuast/regex-charclass.rakutest` is failing for me with HEAD
[20:10] <ab5tract_> wait, what
[20:11] <ab5tract_> Ok, seems to be a PEBKAC
[20:21] <ab5tract_> lizmat: I think there might be something broken about the way those tests are written. Why would $foo ~~ $_ return $foo?
[20:22] <ab5tract_> m: $_ = “bar”; dd “foo” ~~ $_
[20:22] <camelia> rakudo-moar 7fcbfd657: OUTPUT: «Bool::False␤»
[20:28] *** buildable6 left
[20:28] <ab5tract_> Ahh, because it is a regex object…
[20:28] <ab5tract_> damnit :(
[20:30] *** buildable6 joined
[20:35] <ab5tract_> Okay, this looks broken to me:
[20:36] <ab5tract_> m: /foo/ ~~ “foo”
[20:36] <camelia> rakudo-moar 7fcbfd657: OUTPUT: «Regex object coerced to string (please use .gist or .raku to do that)␤  in block <unit> at <tmp> line 1␤»
[20:38] <ab5tract_> Why doesn’t a string know how to ACCEPTS a regex without coercion?
[21:08] <discord-raku-bot> <nemokosch> how would a string accept a regex?
[21:12] <ab5tract_> By calling $regex.ACCEPTS(self)
[21:13] <ab5tract_> so yeah, not the right way to go
[21:30] *** buildable6 left
[21:32] *** buildable6 joined
[21:50] <Geth> ¦ rakudo/main: 60f4b8b9fb | (Elizabeth Mattijsen)++ | src/Raku/Grammar.nqp
[21:50] <Geth> ¦ rakudo/main: RakuAST: :dba is not a Raku thing
[21:50] <Geth> ¦ rakudo/main: 
[21:50] <Geth> ¦ rakudo/main: So don't bother looking for it
[21:50] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/60f4b8b9fb
[22:03] <ab5tract_> :dba(“done doing business”) :)
[22:29] *** sena_kun left
[22:32] *** buildable6 left
[22:34] *** buildable6 joined
[22:50] <Geth> ¦ rakudo: ab5tract++ created pull request #5440: RakuAST: Avoid re-declaration of `$_` in sub-sig
[22:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5440
[23:33] *** buildable6 left
[23:34] *** buildable6 joined
