[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:02] *** guifa_ left
[00:53] *** ab5tract left
[01:12] *** ab5tract joined
[02:20] *** evalable6 left
[02:20] *** linkable6 left
[02:22] *** evalable6 joined
[02:23] *** linkable6 joined
[02:25] *** ab5tract left
[05:10] *** bloatable6 left
[05:10] *** reportable6 left
[05:10] *** bisectable6 left
[05:10] *** greppable6 left
[05:10] *** committable6 left
[05:10] *** coverable6 left
[05:10] *** releasable6 left
[05:10] *** benchable6 left
[05:10] *** sourceable6 left
[05:10] *** tellable6 left
[05:10] *** notable6 left
[05:10] *** statisfiable6 left
[05:10] *** nativecallable6 left
[05:10] *** squashable6 left
[05:10] *** quotable6 left
[05:10] *** linkable6 left
[05:10] *** evalable6 left
[05:10] *** unicodable6 left
[05:10] *** shareable6 left
[05:10] *** bisectable6 joined
[05:11] *** quotable6 joined
[05:11] *** shareable6 joined
[05:11] *** releasable6 joined
[05:11] *** coverable6 joined
[05:11] *** sourceable6 joined
[05:11] *** tellable6 joined
[05:11] *** unicodable6 joined
[05:11] *** statisfiable6 joined
[05:12] *** squashable6 joined
[05:12] *** linkable6 joined
[05:12] *** benchable6 joined
[05:12] *** nativecallable6 joined
[05:12] *** reportable6 joined
[05:12] *** notable6 joined
[05:12] *** evalable6 joined
[05:13] *** committable6 joined
[05:13] *** greppable6 joined
[05:13] *** bloatable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[07:19] <Geth> ¦ roast: 86ff4afae0 | (Elizabeth Mattijsen)++ | 15 files

[07:19] <Geth> ¦ roast: Update .pl extension to .raku

[07:19] <Geth> ¦ roast: 

[07:19] <Geth> ¦ roast: And update all references to it

[07:19] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/86ff4afae0

[07:22] *** japhb left
[07:22] *** japhb joined
[07:40] <Geth> ¦ roast: 52b5d46895 | (Elizabeth Mattijsen)++ | S32-list/minmax.t

[07:40] <Geth> ¦ roast: Add testing adverbs on .min / .max

[07:40] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/52b5d46895

[08:09] *** squashable6 left
[08:10] *** squashable6 joined
[08:19] *** finanalyst joined
[09:41] *** NemokoschKiwi joined
[10:00] *** NemokoschKiwi left
[10:06] *** finanalyst_ joined
[10:36] <Geth> ¦ rakudo/main: 5379483368 | (Elizabeth Mattijsen)++ | src/core.c/List.pm6

[10:36] <Geth> ¦ rakudo/main: ().sort(:k) should return () not Empty

[10:36] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/5379483368

[10:46] <Geth> ¦ rakudo/main: c5cc267547 | (Elizabeth Mattijsen)++ | src/core.c/Any-iterable-methods.pm6

[10:46] <Geth> ¦ rakudo/main: Make sure sub versions of min/max handle adverbs

[10:46] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c5cc267547

[10:46] <Geth> ¦ roast: c5faa1259f | (Elizabeth Mattijsen)++ | S32-list/sort.t

[10:46] <Geth> ¦ roast: Add tests for List.sort(:k)

[10:46] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/c5faa1259f

[10:46] <Geth> ¦ roast: da720c14f9 | (Elizabeth Mattijsen)++ | S32-list/minmax.t

[10:46] <Geth> ¦ roast: Add tests for sub min/max with adverbs

[10:46] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/da720c14f9

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:50] *** finanalyst_ left
[12:51] *** finanalyst left
[13:43] <Geth> ¦ rakudo/main: e0a882f07d | (Elizabeth Mattijsen)++ | src/core.c/Any-iterable-methods.pm6

[13:43] <Geth> ¦ rakudo/main: Make sure sub sort takes named args and passes them on

[13:43] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/e0a882f07d

[13:44] <Geth> ¦ roast: 47d6390872 | (Elizabeth Mattijsen)++ | S32-list/sort.t

[13:44] <Geth> ¦ roast: Add tests for sub sort(:k)

[13:44] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/47d6390872

[14:17] *** squashable6 left
[14:18] *** squashable6 joined
[14:39] *** heartburn left
[14:49] *** heartburn joined
[15:51] *** ab5tract joined
[17:35] *** finanalyst joined
[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:05] <lizmat> does anybody have any idea why we have WHAT/HOW/VAR as subs (macro), but not WHERE/WHICH/WHO ?

[18:05] <lizmat> m: WHO

[18:05] <camelia> rakudo-moar e0a882f07: OUTPUT: «===SORRY!===␤Argument to "WHO" seems to be malformed␤at <tmp>:1␤------> WHO⏏<EOL>␤Undeclared name:␤    WHO used at line 1␤␤Other potential difficulties:␤    Function "WHO" may not be called without arguments (please use …»

[18:06] <lizmat> m: WHICH

[18:06] <camelia> rakudo-moar e0a882f07: OUTPUT: «===SORRY!===␤Argument to "WHICH" seems to be malformed␤at <tmp>:1␤------> WHICH⏏<EOL>␤Undeclared name:␤    WHICH used at line 1␤␤Other potential difficulties:␤    Function "WHICH" may not be called without arguments (ple…»

[18:06] <lizmat> m: WHERE

[18:06] <camelia> rakudo-moar e0a882f07: OUTPUT: «===SORRY!===␤Argument to "WHERE" seems to be malformed␤at <tmp>:1␤------> WHERE⏏<EOL>␤Undeclared name:␤    WHERE used at line 1␤␤Other potential difficulties:␤    Function "WHERE" may not be called without arguments (ple…»

[18:06] <lizmat> m: WHERE()

[18:06] <camelia> rakudo-moar e0a882f07: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared name:␤    WHERE used at line 1␤␤»

[19:01] <Geth> ¦ rakudo: lizmat++ created pull request #5336: Add sub versions of WHERE WHICH WHO

[19:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5336

[19:08] <Geth> ¦ rakudo/lizmat-WHERE-WHICH-WHO: 991678cd4f | (Elizabeth Mattijsen)++ | 10 files

[19:08] <Geth> ¦ rakudo/lizmat-WHERE-WHICH-WHO: Add sub versions of WHERE WHICH WHO

[19:08] <Geth> ¦ rakudo/lizmat-WHERE-WHICH-WHO: 

[19:08] <Geth> ¦ rakudo/lizmat-WHERE-WHICH-WHO: They seem to have been forgotten, but are actually mentioned in

[19:08] <Geth> ¦ rakudo/lizmat-WHERE-WHICH-WHO: some error messages.  Feels they should be added for completeness

[19:08] <Geth> ¦ rakudo/lizmat-WHERE-WHICH-WHO: sake.  Also adapts tests accordingly.

[19:08] <Geth> ¦ rakudo/lizmat-WHERE-WHICH-WHO: review: https://github.com/rakudo/rakudo/commit/991678cd4f

[19:25] *** finanalyst left
[20:03] <[Coke]> m: WHO 1

[20:03] <camelia> rakudo-moar e0a882f07: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared name:␤    WHO used at line 1␤␤»

[20:03] <[Coke]> ...whoops, that was a pr

[21:21] *** rypervenche left
[21:21] *** vrurg left
[21:21] *** camelia left
[21:21] *** [Coke] left
[21:21] *** [Coke] joined
[21:21] *** rypervenche joined
[21:21] *** rypervenche left
[21:21] *** rypervenche joined
[21:22] *** vrurg joined
[21:27] *** camelia joined
[21:55] <ab5tract> hmmm... this seems odd to me:

[21:55] <ab5tract> m: my @a = 1, 3, 5; say @a[^3] eqv |@a

[21:55] <camelia> rakudo-moar e0a882f07: OUTPUT: «False␤»

[21:55] <ab5tract> m: my @a = 1, 3, 5; say [@a[^3]] eqv @a

[21:55] <camelia> rakudo-moar e0a882f07: OUTPUT: «True␤»

[21:56] <ab5tract> I guess because in the first case one is a list and the other is a slip?

[21:56] <ab5tract> m: my @a = 1, 3, 5; say @a[^3] ~~ |@a

[21:56] <camelia> rakudo-moar e0a882f07: OUTPUT: «True␤»

[21:56] <discord-raku-bot> <nemokosch> the latter is crystal clear

[21:56] <ab5tract> m: my @a = 1, 3, 5; say @a[^3] ~~ @a

[21:56] <camelia> rakudo-moar e0a882f07: OUTPUT: «True␤»

[21:56] <discord-raku-bot> <nemokosch> the former is, uh...

[21:57] <ab5tract> I don't play much with eqv, probably its just me 

[21:57] <discord-raku-bot> <nemokosch> I don't think so, it's not clear at all what it does

[21:58] <ab5tract> m: my @a = 1, 3, 5; say @a[^3] eqv @a.list

[21:58] <camelia> rakudo-moar e0a882f07: OUTPUT: «False␤»

[21:58] <ab5tract> m: my @a = 1, 3, 5; say @a[^3] eqv @a.Seq

[21:58] <camelia> rakudo-moar e0a882f07: OUTPUT: «False␤»

[21:58] <discord-raku-bot> <nemokosch> https://github.com/rakudo/rakudo/blob/2023.04/src/core.c/Iterable.pm6#L115

[21:59] <discord-raku-bot> <nemokosch> they are apparently mandated to be the same type

[21:59] <discord-raku-bot> <nemokosch> okay, it makes some sense - but given that they are the same interface, not so much

[22:01] <discord-raku-bot> <nemokosch> after a very exhaustive 15 seconds of thinking, I think it's better the way it is

[22:01] <ab5tract> m: my @a = 1, 3, 5; say @a[^3].WHAT; say @a.list.WHAT

[22:01] <camelia> rakudo-moar e0a882f07: OUTPUT: «(List)␤(Array)␤»

[22:01] <ab5tract> m: my @a = 1, 3, 5; say @a[^3].WHAT; say @a.List.WHAT

[22:01] <camelia> rakudo-moar e0a882f07: OUTPUT: «(List)␤(List)␤»

[22:02] <ab5tract> okay, not sure what .list is for anymore :)

[22:02] <ab5tract> yeah, for eqv I think it makes sense

[22:02] <discord-raku-bot> <nemokosch> First, I think it's really not nice that something that succeeds on a List typecheck, still gets changed when .List is called on it

[22:03] <discord-raku-bot> <nemokosch> This causes trouble with Allomorphs

[22:03] <ab5tract> hmmm, yeah, that's a fair point

[22:03] <discord-raku-bot> <nemokosch> you can have fake Ints that pass all your type checks but aren't === (probably not even eqv) with an Int

[22:04] <discord-raku-bot> <nemokosch> m: my Int $funky = <5>; say $funky.Int === $funky; say $funky.Int eqv $funky

[22:04] <discord-raku-bot> <Raku eval>  False False 

[22:04] <discord-raku-bot> <nemokosch> there

[22:04] <discord-raku-bot> <nemokosch> because .Int turns it into the real number 5

[22:05] <discord-raku-bot> <nemokosch> second, I always get mixed up in this but .list is actually the @ contextualizer

[22:05] <discord-raku-bot> <nemokosch> it's what @(foobar) would also call

[22:05] <ab5tract> ah

[22:06] <discord-raku-bot> <nemokosch> and it's the reason why a lot of non Listy, possibly not even Iterable types (like Buf and Blob) can behave like lists

[22:07] <discord-raku-bot> <nemokosch> Any exposes almost the whole List (Array, even) interface and implements it as .list.that-method-call

[22:09] <discord-raku-bot> <nemokosch> I can't miss saying that this is quite a troubling situation; the very bulky Any that provides almost everything from certain classes but not quite, and that ad-hoc types that happen to implement .list will magically behave like @ context candidates...

[22:09] <discord-raku-bot> <nemokosch> but on the prescriptive end of things, it is just how it is

[22:09] <discord-raku-bot> <nemokosch> *descriptive

[22:09] <discord-raku-bot> <nemokosch> Freudian slip

[22:11] <ab5tract> :)

[22:28] *** linkable6 left
[22:28] *** evalable6 left
[22:29] *** evalable6 joined
[22:29] *** linkable6 joined
[23:29] *** squashable6 left
[23:29] *** evalable6 left
[23:29] *** bisectable6 left
[23:29] *** statisfiable6 left
[23:29] *** coverable6 left
[23:29] *** nativecallable6 left
[23:29] *** releasable6 left
[23:29] *** linkable6 left
[23:29] *** unicodable6 left
[23:29] *** notable6 left
[23:29] *** quotable6 left
[23:29] *** reportable6 left
[23:29] *** tellable6 left
[23:29] *** benchable6 left
[23:29] *** shareable6 left
[23:29] *** sourceable6 left
[23:30] *** coverable6 joined
[23:30] *** releasable6 joined
[23:30] *** evalable6 joined
[23:30] *** unicodable6 joined
[23:30] *** bisectable6 joined
[23:31] *** quotable6 joined
[23:31] *** linkable6 joined
[23:32] *** notable6 joined
[23:32] *** tellable6 joined
[23:32] *** statisfiable6 joined
[23:32] *** squashable6 joined
[23:32] *** sourceable6 joined
[23:32] *** shareable6 joined
[23:32] *** benchable6 joined
[23:33] *** nativecallable6 joined
[23:33] *** reportable6 joined
