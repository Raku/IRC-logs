[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:23] <Geth> ¦ rakudo: vrurg++ created pull request #5174: Try to be more explicit when exception reporting dies

[00:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/5174

[01:59] *** bloatable6 left
[01:59] *** coverable6 left
[01:59] *** evalable6 left
[01:59] *** reportable6 left
[01:59] *** greppable6 left
[01:59] *** notable6 left
[01:59] *** releasable6 left
[01:59] *** shareable6 left
[01:59] *** unicodable6 left
[01:59] *** committable6 left
[01:59] *** linkable6 left
[01:59] *** sourceable6 left
[01:59] *** quotable6 left
[01:59] *** squashable6 left
[01:59] *** tellable6 left
[01:59] *** nativecallable6 left
[01:59] *** statisfiable6 left
[01:59] *** benchable6 left
[01:59] *** bisectable6 left
[02:00] *** tellable6 joined
[02:00] *** reportable6 joined
[02:00] *** releasable6 joined
[02:00] *** shareable6 joined
[02:00] *** bloatable6 joined
[02:00] *** greppable6 joined
[02:00] *** coverable6 joined
[02:00] *** sourceable6 joined
[02:00] *** notable6 joined
[02:00] *** evalable6 joined
[02:01] *** statisfiable6 joined
[02:01] *** squashable6 joined
[02:01] *** benchable6 joined
[02:01] *** quotable6 joined
[02:02] *** unicodable6 joined
[02:02] *** committable6 joined
[02:02] *** bisectable6 joined
[02:02] *** nativecallable6 joined
[02:02] *** linkable6 joined
[03:26] *** raschip left
[05:02] *** dogbert11 joined
[05:05] *** dogbert17 left
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[07:18] *** guifa left
[07:19] *** guifa joined
[07:43] *** sena_kun joined
[08:45] <nine> say $_ if $_ %% 2 for 1..10 # this is a hard one

[08:45] <evalable6> nine, rakudo-moar d52342eb0: OUTPUT: «2␤4␤6␤8␤10␤»

[08:46] <nine> The if here is a statement modifier. It wraps the statement's expression in an nqp::if with appropriate return values. The for is also a statement modifier. It thunks the expression and wraps that with appropriate looping code.

[08:48] <nine> The problem is when we have both of them on a statement like in this example. Then the nqp::if wrapper would have to go on the expression, i.e. it must be part of the thunk. Currently instead it wraps the calling of the thunk. This is a problem because a for loop is just a call to .map on the list. This map gets passed the thunk to run. Currently instead we evaluate the nqp::if and pass the result to the 

[08:48] <discord-raku-bot> <Nemokosch> This definitely had bugs

[08:48] <nine> map which gets totally confused.

[08:49] <discord-raku-bot> <Nemokosch> With for + with, I think it was bugged

[10:25] *** Altai-man joined
[10:27] *** sena_kun left
[10:31] *** Altai-man left
[11:06] *** sena_kun joined
[11:47] <Geth> ¦ rakudo/main: 95f6c5b4e9 | (Stefan Seifert)++ | 2 files

[11:47] <Geth> ¦ rakudo/main: RakuAST: fix miscompilation of statements with both condition and loop modifiers

[11:47] <Geth> ¦ rakudo/main: 

[11:47] <Geth> ¦ rakudo/main: Postfix conditions are statement modifiers. They wraps the statement's

[11:47] <Geth> ¦ rakudo/main: expression in the appropriate op (e.g. nqp::if) with appropriate return values.

[11:47] <Geth> ¦ rakudo/main: A postfix for is also a statement modifier. It thunks the expression and wraps

[11:47] <Geth> ¦ rakudo/main: that with appropriate looping code. The problem was when we had both of them on

[11:47] <Geth> ¦ rakudo/main: a statement. Then the condition wrapper would have to go on the expression,

[11:47] <Geth> ¦ rakudo/main: <…commit message has 15 more lines…>

[11:47] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/95f6c5b4e9

[11:48] <nine> This brings us to 121 test and 652 spectest files!

[11:57] *** raschip joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:01] *** samcv joined
[12:01] *** samcv_ left
[12:02] *** sivoais left
[12:03] *** sivoais joined
[12:44] <Geth> ¦ rakudo/main: c3155c0558 | (Stefan Seifert)++ | src/Raku/Actions.nqp

[12:44] <Geth> ¦ rakudo/main: RakuAST: fix regex definitions not finding their package

[12:44] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/c3155c0558

[12:44] <nine> 658 spectests! Confirming that there is still a lot of low hanging fruit

[12:52] *** raschip left
[13:03] *** raschip joined
[13:04] <Geth> ¦ rakudo/main: 349b1a8306 | (Stefan Seifert)++ | src/Raku/Actions.nqp

[13:04] <Geth> ¦ rakudo/main: RakuAST: fix reporting of POD variable NYI errors

[13:04] <Geth> ¦ rakudo/main: 

[13:04] <Geth> ¦ rakudo/main: We didn't make it far enough through compilation to even report the

[13:04] <Geth> ¦ rakudo/main: sorry, so just die instead. It's only there until everything's

[13:04] <Geth> ¦ rakudo/main: implemented anyway.

[13:04] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/349b1a8306

[15:00] <releasable6> Next release in ≈4 days and ≈3 hours. There are no known blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:37] *** NemokoschKiwi joined
[15:38] *** NemokoschKiwi left
[16:09] <Geth> ¦ rakudo/main: 45b1978422 | (Vadim Belman)++ | src/core.c/Exception.pm6

[16:09] <Geth> ¦ rakudo/main: Try to be more explicit when exception reporting dies

[16:09] <Geth> ¦ rakudo/main: 

[16:09] <Geth> ¦ rakudo/main: Currently when this happens at compile time we end up with useless 'No

[16:09] <Geth> ¦ rakudo/main: exception handler found for catch' message providing us with no

[16:09] <Geth> ¦ rakudo/main: information as to what the original cause was. With this commit we would

[16:09] <Geth> ¦ rakudo/main: try to pull out as much info as possible at report it back with no bells

[16:09] <Geth> ¦ rakudo/main: and whistles.

[16:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/45b1978422

[16:09] <Geth> ¦ rakudo/main: d5a839672b | (Vadim Belman)++ (committed using GitHub Web editor) | src/core.c/Exception.pm6

[16:09] <Geth> ¦ rakudo/main: Merge pull request #5174 from vrurg/detailed-runaway-exception

[16:09] <Geth> ¦ rakudo/main: 

[16:09] <Geth> ¦ rakudo/main: Try to be more explicit when exception reporting dies

[16:09] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/d5a839672b

[17:19] *** sena_kun left
[17:53] *** sena_kun joined
[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[20:52] *** epony left
[20:57] *** raschip left
[21:17] *** epony joined
[21:29] <Geth> ¦ rakudo/main: 97a68d10a7 | (Stefan Seifert)++ | 2 files

[21:29] <Geth> ¦ rakudo/main: RakuAST: make SETTING:: actually find the setting

[21:29] <Geth> ¦ rakudo/main: 

[21:29] <Geth> ¦ rakudo/main: !UNIT_MARKER was missing and Pseudostash needed adjusting because

[21:29] <Geth> ¦ rakudo/main: RakuAST compiled comp units don't have the outer-unit frame.

[21:29] <Geth> ¦ rakudo/main: review: https://github.com/rakudo/rakudo/commit/97a68d10a7

[21:30] <nine> And that's 125 passing test files :)

[22:04] <vrurg> nine: !!!

[22:15] *** japhb joined
[23:07] *** Voldenet_ joined
[23:09] *** Voldenet left
[23:09] *** Voldenet_ is now known as Voldenet

[23:29] *** sena_kun left
