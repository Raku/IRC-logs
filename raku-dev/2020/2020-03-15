[00:28] * sjn just read about Jeff :-( :-(

[01:15] *** Altai-man_ joined
[01:17] *** sena_kun left
[01:39] *** titsuki joined
[02:51] *** titsuki left
[02:52] *** titsuki joined
[03:16] *** sena_kun joined
[03:18] *** Altai-man_ left
[04:18] *** nativecallable6 left
[04:18] *** quotable6 left
[04:18] *** squashable6 left
[04:18] *** linkable6 left
[04:18] *** bloatable6 left
[04:18] *** releasable6 left
[04:18] *** unicodable6 left
[04:18] *** reportable6 left
[04:18] *** notable6 left
[04:18] *** bisectable6 left
[04:18] *** shareable6 left
[04:18] *** evalable6 left
[04:18] *** greppable6 left
[04:18] *** benchable6 left
[04:18] *** sourceable6 left
[04:18] *** coverable6 left
[04:18] *** committable6 left
[04:18] *** statisfiable6 left
[04:18] *** tellable6 left
[04:18] *** quotable6 joined
[04:18] *** bisectable6 joined
[04:18] *** tellable6 joined
[04:18] *** greppable6 joined
[04:18] *** nativecallable6 joined
[04:18] *** sourceable6 joined
[04:18] *** squashable6 joined
[04:19] *** reportable6 joined
[04:19] *** statisfiable6 joined
[04:19] *** committable6 joined
[04:19] *** bloatable6 joined
[04:19] *** notable6 joined
[04:20] *** benchable6 joined
[04:20] *** unicodable6 joined
[04:20] *** coverable6 joined
[04:20] *** linkable6 joined
[04:20] *** releasable6 joined
[04:21] *** shareable6 joined
[04:21] *** evalable6 joined
[05:07] *** moon-child is now known as AlexaBot

[05:07] *** AlexaBot is now known as moon-child

[05:15] *** Altai-man_ joined
[05:18] *** sena_kun left
[06:29] *** titsuki left
[07:06] *** leont joined
[07:16] *** sena_kun joined
[07:17] *** Altai-man_ left
[07:37] *** japhb joined
[08:00] *** titsuki joined
[08:12] *** titsuki left
[08:24] <MasterDuke> pmurias: since https://github.com/rakudo/rakudo/pull/3533 helps some circumstances, but was reverted because it slowed down a spectest, maybe just updating the type (and also hopefully method) cache instead of publishing an entire new one would better

[08:25] <MasterDuke> pmurias: unless of course there's a better way to publish those caches in the first place that helps that example code

[08:30] <MasterDuke> or republish in a better way than my PR

[09:15] *** Altai-man_ joined
[09:17] *** sena_kun left
[10:16] <[Tux]> MasterDuke, 10_000 lines with 5 fields each

[10:16] <lizmat> MasterDuke: it didn't slow down a specific spectest, it slowed down "make spectest" by almost 10%

[10:17] <lizmat> MasterDuke: if it had been a single spectest, we would have a target to look at and I wouldn't have reverted

[10:17] <lizmat> Files=1305, Tests=111216, 205 wallclock secs (27.96 usr  8.26 sys + 2890.06 cusr 269.86 csys = 3196.14 CPU)

[10:17] <lizmat> feels like this 1 wallclock less is a fluke, as the CPU is nearly unchanged

[10:24] <nine> MasterDuke: it's not entirely clear that updating a type cache would be faster than publishing an entirely new one. Replacing the type cache can be done by a simple pointer assignment which is thread safe. If the cache can be updated in place, making it thread safe without locking is much harder

[10:28] <[Tux]> Rakudo version 2020.02.1-183-g70ac9b72e - MoarVM version 2020.02.1-45-g2252a95df

[10:28] <[Tux]> csv-test-xs-20      0.371 -  0.372

[10:28] <[Tux]> csv-ip5xs           0.696 -  0.701

[10:28] <[Tux]> test-t --race       0.948 -  0.977

[10:28] <[Tux]> test-t              1.912 -  1.927

[10:29] <[Tux]> csv-ip5xs-20        5.907 -  6.079

[10:29] <[Tux]> test                8.228 -  8.285

[10:29] <[Tux]> test-t-20 --race    9.514 -  9.902

[10:29] <[Tux]> csv-parser         23.977 - 24.604

[10:29] <[Tux]> test-t-20          31.881 - 31.940

[10:34] <MasterDuke> lizmat: yeah, that's what i meant (and assumed you meant), just wasn't very precise in what i said

[10:34] <lizmat> ok...  just wanted to make sure we're on the same page :)

[10:35] <MasterDuke> nine: true. i guess it keeps coming back to finding the right time/place to (re)publish. i just haven't figured out that where/when yet

[10:36] <MasterDuke> lizmat: no worries, if i had noticed that slowdown myself it would have given me pause

[10:41] <Geth> ¦ rakudo: f9ecf6e8a4 | (Elizabeth Mattijsen)++ | src/core.c/Dateish.pm6

[10:41] <Geth> ¦ rakudo: Save upto 2 allocations per Date/DateTime.yyyy-mm-dd

[10:41] <Geth> ¦ rakudo: 

[10:41] <Geth> ¦ rakudo: - and dd-mm-yyyy and mm-dd-yyyy friends

[10:41] <Geth> ¦ rakudo: - 1 Int allocation if month > 9

[10:41] <Geth> ¦ rakudo: - 1 Int allocation if day > 9

[10:41] <Geth> ¦ rakudo: 

[10:41] <Geth> ¦ rakudo: For some reason, *in the core setting*, having a native int attribute

[10:41] <Geth> ¦ rakudo: <…commit message has 6 more lines…>

[10:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f9ecf6e8a4

[10:46] *** leont left
[10:48] <MasterDuke> lizmat: if it is actually a native int you have, why not nqp::coerce_is? i would think that'd be faster than nqp::tostr_I

[10:49] <lizmat> hmmm

[10:50] <MasterDuke> tostr_I is just coerce_Is

[11:15] *** synthmeat joined
[11:16] *** sena_kun joined
[11:18] *** Altai-man_ left
[11:44] <Geth> ¦ rakudo: 6d146b564a | (Elizabeth Mattijsen)++ | src/core.c/Buf.pm6

[11:44] <Geth> ¦ rakudo: Make Blob.list non-lazy

[11:44] <Geth> ¦ rakudo: 

[11:44] <Geth> ¦ rakudo: Since apparently the Blob.list *must* be a list to not explode in

[11:44] <Geth> ¦ rakudo: hypers, there is little point in adding Seq overhead masked in a

[11:44] <Geth> ¦ rakudo: .cache.  So just build the list at once, and return that.  This

[11:44] <Geth> ¦ rakudo: could have some (positive) performance impact.

[11:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6d146b564a

[11:46] <lizmat> jnthn: I wonder if it would make sense to have an nqp::op that converts a nqp::list_i to a nqp::list

[11:47] <lizmat> *or* that we should allow a list_i to be the reified of a List

[11:47] <lizmat> in which case the above code turned into a simple nqp::p6bindattrvinres

[11:50] *** leont joined
[11:52] <sena_kun> .tell rba hi! Can you please install perl-dev (or how is it called) to the blin server, so -lperl flag was supported to build Inline::Perl5 there?

[11:52] <tellable6> sena_kun, I'll pass your message to rba

[12:21] <Geth> ¦ rakudo: aed658d6f2 | (Elizabeth Mattijsen)++ | src/core.c/Buf.pm6

[12:21] <Geth> ¦ rakudo: Remove unneccesary Blob:U.elems candidate

[12:21] <Geth> ¦ rakudo: 

[12:21] <Geth> ¦ rakudo: This is already handled by Any:U.elems

[12:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/aed658d6f2

[13:03] *** pmurias left
[13:09] *** pmurias joined
[13:15] *** Altai-man_ joined
[13:17] *** sena_kun left
[13:18] <lizmat> m: dd Hash.^methods.grep( *.name eq "STORE")   # this surprises me a bit, since the Hash proto should mask the Map proto?

[13:18] <camelia> rakudo-moar aed658d6f: OUTPUT: «(proto method STORE (Hash: |) {*}, proto method STORE (Map:D: |) {*}).Seq␤»

[13:24] <jnthn> lizmat: But .^methods asks for all of the methods up the hierarchy

[13:24] <jnthn> So you see overridden ones too

[13:24] <lizmat> m: dd Hash.^methods(:!all).grep( *.name eq "STORE")   # this surprises me a bit, since the Hash proto should mask the Map proto?

[13:24] <camelia> rakudo-moar aed658d6f: OUTPUT: «(proto method STORE (Hash: |) {*}, proto method STORE (Map:D: |) {*}).Seq␤»

[13:25] <lizmat> m: dd Hash.^methods(:local).grep( *.name eq "STORE")

[13:25] <camelia> rakudo-moar aed658d6f: OUTPUT: «(proto method STORE (Hash: |) {*},).Seq␤»

[13:26] <lizmat> ah, ok, I misgrokked the meaning of the :$all parameter I guess

[13:27] <lizmat> m: dd CORE::.keys.grep( { /^"&"<[A..Z]>/ } ).elems   # number of user visible / callable subs in *any* program that are an implementation detail

[13:27] <camelia> rakudo-moar aed658d6f: OUTPUT: «71␤»

[13:44] *** pmurias left
[14:10] *** lucasb joined
[14:27] <Geth> ¦ rakudo: e152aa6af0 | (Elizabeth Mattijsen)++ | 7 files

[14:27] <Geth> ¦ rakudo: Remove unnecessary implementation detail

[14:27] <Geth> ¦ rakudo: 

[14:27] <Geth> ¦ rakudo: &CMP-SLOW somehow lived in the SETTING:: but didn't need to.  Move

[14:27] <Geth> ¦ rakudo: it inside the infix:<cmp> that needs it and adapt the keys tests

[14:27] <Geth> ¦ rakudo: accordingly.

[14:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e152aa6af0

[15:16] *** sena_kun joined
[15:18] *** Altai-man_ left
[16:00] <MasterDuke> vrurg_: could https://github.com/MasterDuke17/rakudo/blob/master/src/Perl6/Optimizer.nqp#L700-L712 be adapted to also work on takenextdispatcher?

[16:02] *** patrickb joined
[16:24] <Geth> ¦ rakudo: b639221dd7 | (Elizabeth Mattijsen)++ | 8 files

[16:24] <Geth> ¦ rakudo: Remove unnecessary implementation detail

[16:24] <Geth> ¦ rakudo: 

[16:24] <Geth> ¦ rakudo: &GENERATE-ROLE-FROM-VALUE somehow lived in the SETTING:: but

[16:24] <Geth> ¦ rakudo: didn't need to.  Move it to Rakudo::Internals and adapt the

[16:24] <Geth> ¦ rakudo: code and the keys tests accordingly.

[16:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b639221dd7

[17:05] *** MasterDuke left
[17:15] *** Altai-man_ joined
[17:18] *** sena_kun left
[17:18] *** synthmeat left
[17:19] *** synthmeat joined
[17:53] *** MasterDuke joined
[18:22] *** stoned75 joined
[18:23] <stoned75> hi!

[18:24] <stoned75> is it me or something is broken between raku/doc github repo and circleci ? 

[18:25] <stoned75> from https://github.com/Raku/doc/pull/3267 the link https://circleci.com/gh/Raku/doc/434?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link gives a 404 error

[18:58] <Geth> ¦ rakudo: 86bc3b3d29 | (Elizabeth Mattijsen)++ | 7 files

[18:58] <Geth> ¦ rakudo: Remove unnecessary implementation detail

[18:58] <Geth> ¦ rakudo: 

[18:58] <Geth> ¦ rakudo: &INITIALIZE-A-DISTRO-NOW somehow lived in the SETTING:: but

[18:58] <Geth> ¦ rakudo: didn't need to.  Move it to inside the $*DISTRO initialization

[18:58] <Geth> ¦ rakudo: logic and adapt the keys tests accordingly.

[18:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/86bc3b3d29

[19:03] *** vrurg_ is now known as vrurg

[19:04] <vrurg> MasterDuke: it already takes care of takenextdispatcher.

[19:08] *** lucasb left
[19:11] *** cognomin_ joined
[19:15] *** cognominal left
[19:16] *** sena_kun joined
[19:18] *** Altai-man_ left
[19:20] <Geth> ¦ rakudo: 75f34c52c5 | (Elizabeth Mattijsen)++ | 7 files

[19:20] <Geth> ¦ rakudo: Remove unnecessary implementation detail

[19:20] <Geth> ¦ rakudo: 

[19:20] <Geth> ¦ rakudo: &MD-HASH-SLICE-ONE-POSITION somehow lived in the SETTING:: but

[19:20] <Geth> ¦ rakudo: didn't need to.  Move it to inside the &postcircumfix:<{; }>

[19:20] <Geth> ¦ rakudo: logic and adapt the keys tests accordingly.

[19:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/75f34c52c5

[19:20] *** jjatria left
[19:21] *** jjatria joined
[19:21] <leont> Funny how I could guess who wrote those commits from the title alone :-p

[19:21] *** jjatria left
[19:25] *** jjatria joined
[19:37] <MasterDuke> vrurg: ah, i didn't look closely enough, nice

[19:38] <vrurg> MasterDuke: register_takedispatcher is involved.

[19:38] <leont> Being a cleaner is a calling :-)

[19:58] <sena_kun> raku --target=parse -e 'use v6;' gives me `- statementlist: ;`

[19:58] <sena_kun> that's... odd?

[19:59] <sena_kun> while e.g. raku --target=parse -e 'use MONKEY-SEE-NO-EVAL;' is cool, `statementlist: use MONKEY-SEE-NO-EVAL;`

[19:59] <sena_kun> I understand there is a special treatment for language version at the beginning

[19:59] <sena_kun> what I don't understand is this odd `;` statementlist after one

[20:00] <vrurg> sena_kun: it doesn't result in anu QAST.

[20:00] <vrurg> *any

[20:01] <sena_kun> vrurg, hmm, so lang-version is "saved" separately from the AST and AST is like "nothing-nothing semicolon"?

[20:02] <sena_kun> sigh, that's troublesome

[20:03] <vrurg> sena_kun: I'm not sure what exactly parse target returns (sorry), but lang-version token doesn't produce a statement. It only prepares compiler and sets the outer core.

[20:04] <vrurg> Related locations in the source: token lang-version in Grammar, method lang-version in Actions, comp_unit_stage0/1 in World.

[20:04] <sena_kun> yeah, looking there, thanks for points!

[20:05] <vrurg> My wild guess would be that parse target returns what you get from statementlist token which follows lang-version in comp_unit.

[20:17] <MasterDuke> jnthn: how can we know whether a block with a param is actually safe to inline? or, what needs to be done to the block/param to make it so?

[20:22] <jnthn> MasterDuke: Dunno, it's all a bit tricky, 'cus the QAST::Var param will have to be transformed into something else, and then there's the whole "what about the type checks" question...

[20:22] <jnthn> (Of course, we can start off restricting it to untyped)

[20:23] <MasterDuke> ah. sounds like maybe i just punt...

[20:23] <jnthn> I'm not sure, off the top of my head, how best to do it...

[20:24] <jnthn> Or whether code-gen (at the QAST compiler level) changes could make it a lot easier, or if there's a good way without that

[20:25] <MasterDuke> heh, i thought maybe it'd be a quick diversion, but it's not looking so promising now

[20:26] <MasterDuke> but backing up to yesterday and type/method caches, do you have a suggestions as to where to look for better (re?)publishing them?

[20:27] <jnthn> I'm still not clear why compose isn't the right place.

[20:27] <jnthn> Or rather, why the publishing of them in compose ain't happening

[20:27] <jnthn> I'll try and have a dig into it tomorrow. I've had a glance at if it's anything obvious but it ain't.

[20:27] <jnthn> Well, not to me... :)

[20:28] <MasterDuke> cool

[20:28] <MasterDuke> thanks

[20:30] *** rba left
[20:31] *** rba_ joined
[20:31] *** rba_ is now known as rba

[21:15] *** Altai-man_ joined
[21:18] *** sena_kun left
[22:06] *** squashable6 left
[22:07] *** squashable6 joined
[22:24] <Geth> ¦ rakudo: ffad102453 | (Patrick Böker)++ | 3 files

[22:24] <Geth> ¦ rakudo: Move RUN_CLEAN_TARGET_FILES to separate script

[22:24] <Geth> ¦ rakudo: 

[22:24] <Geth> ¦ rakudo: And clean up the logic a lot. The way it looked before it was probably

[22:24] <Geth> ¦ rakudo: broken in multiple ways:

[22:24] <Geth> ¦ rakudo: - PERL6 and PERL6_DEBUG were never deleted, the line was missing a folder.

[22:24] <Geth> ¦ rakudo: - The 'verbose' logic didn't work. There is no 'verbose' variable specified

[22:24] <Geth> ¦ rakudo:   anywhere.

[22:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ffad102453

[22:24] <Geth> ¦ rakudo: 8ae2106f15 | (Vadim Belman)++ (committed using GitHub Web editor) | 3 files

[22:24] <Geth> ¦ rakudo: Merge pull request #3536 from patrickbkr/run-clean-target-files-script2

[22:24] <Geth> ¦ rakudo: 

[22:24] <Geth> ¦ rakudo: Move RUN_CLEAN_TARGET_FILES to separate script

[22:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8ae2106f15

[22:36] *** squashable6 left
[22:40] *** squashable6 joined
[23:14] *** squashable6 left
[23:16] *** sena_kun joined
[23:17] *** squashable6 joined
[23:18] *** Altai-man_ left
[23:42] <patrickb> .tell rba I uploaded rakubrew v6 (https://patszim.volans.uberspace.de/patcloud/index.php/s/qmkreEJLQDZcjbf). Upload at your convenience. :-)

[23:42] <tellable6> patrickb, I'll pass your message to rba

[23:43] <patrickb> .tell rba Also I have a new version of the rakubrew.org website. Can you bump that?

[23:43] <tellable6> patrickb, I'll pass your message to rba

[23:43] *** patrickb left
