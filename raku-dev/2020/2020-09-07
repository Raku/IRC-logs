[00:38] *** nativecallable6 left
[00:38] *** statisfiable6 left
[00:38] *** quotable6 left
[00:38] *** tellable6 left
[00:38] *** greppable6 left
[00:38] *** bloatable6 left
[00:38] *** releasable6 left
[00:38] *** squashable6 left
[00:38] *** benchable6 left
[00:38] *** committable6 left
[00:38] *** evalable6 left
[00:38] *** sourceable6 left
[00:38] *** linkable6 left
[00:38] *** unicodable6 left
[00:38] *** notable6 left
[00:38] *** coverable6 left
[00:38] *** reportable6 left
[00:38] *** bisectable6 left
[00:38] *** shareable6 left
[00:38] *** shareable6 joined
[00:39] *** benchable6 joined
[00:39] *** statisfiable6 joined
[00:39] *** greppable6 joined
[00:39] *** nativecallable6 joined
[00:40] *** sourceable6 joined
[00:40] *** squashable6 joined
[00:40] *** bisectable6 joined
[00:40] *** bloatable6 joined
[00:40] *** coverable6 joined
[00:40] *** reportable6 joined
[00:40] *** linkable6 joined
[00:40] *** committable6 joined
[00:40] *** unicodable6 joined
[00:41] *** releasable6 joined
[00:41] <Xliff> MasterDuke: Don't know. Didn't know about it until you mentioned it.

[00:41] <Xliff> I'll have to take a look at it, later.

[00:41] *** notable6 joined
[00:41] <Xliff> I've been stuck in the weeds for hours with no solution.

[00:41] *** tellable6 joined
[00:41] *** evalable6 joined
[00:41] *** quotable6 joined
[00:42] <Xliff> MasterDuke: Thanks for letting me know, though! :)

[02:35] *** releasable6 left
[02:35] *** bloatable6 left
[02:35] *** unicodable6 left
[02:35] *** tellable6 left
[02:35] *** nativecallable6 left
[02:35] *** benchable6 left
[02:35] *** evalable6 left
[02:35] *** bisectable6 left
[02:35] *** notable6 left
[02:35] *** coverable6 left
[02:35] *** statisfiable6 left
[02:35] *** quotable6 left
[02:35] *** sourceable6 left
[02:35] *** linkable6 left
[02:35] *** reportable6 left
[02:35] *** committable6 left
[02:35] *** shareable6 left
[02:35] *** greppable6 left
[02:35] *** squashable6 left
[02:35] *** greppable6 joined
[02:35] *** nativecallable6 joined
[02:35] *** releasable6 joined
[02:36] *** shareable6 joined
[02:36] *** bisectable6 joined
[02:36] *** notable6 joined
[02:36] *** coverable6 joined
[02:36] *** evalable6 joined
[02:36] *** tellable6 joined
[02:36] *** quotable6 joined
[02:36] *** sourceable6 joined
[02:37] *** committable6 joined
[02:37] *** benchable6 joined
[02:37] *** bloatable6 joined
[02:37] *** reportable6 joined
[02:37] *** statisfiable6 joined
[02:37] *** squashable6 joined
[02:38] *** unicodable6 joined
[02:38] *** linkable6 joined
[04:09] *** notable6 left
[04:09] *** benchable6 left
[04:09] *** linkable6 left
[04:09] *** sourceable6 left
[04:09] *** greppable6 left
[04:09] *** quotable6 left
[04:09] *** committable6 left
[04:09] *** evalable6 left
[04:09] *** shareable6 left
[04:09] *** bisectable6 left
[04:09] *** tellable6 left
[04:09] *** bloatable6 left
[04:09] *** unicodable6 left
[04:09] *** reportable6 left
[04:09] *** statisfiable6 left
[04:09] *** nativecallable6 left
[04:09] *** greppable6 joined
[04:09] *** reportable6 joined
[04:10] *** evalable6 joined
[04:10] *** quotable6 joined
[04:10] *** bisectable6 joined
[04:11] *** shareable6 joined
[04:11] *** nativecallable6 joined
[04:11] *** statisfiable6 joined
[04:11] *** sourceable6 joined
[04:11] *** bloatable6 joined
[04:11] *** notable6 joined
[04:12] *** committable6 joined
[04:12] *** linkable6 joined
[04:12] *** tellable6 joined
[04:12] *** benchable6 joined
[04:12] *** unicodable6 joined
[04:43] *** MasterDuke left
[06:10] *** interwebs left
[06:43] *** codesections left
[06:44] *** codesections joined
[07:03] *** Altai-man joined
[07:19] *** sena_kun joined
[07:21] *** Altai-man left
[08:34] <Xliff> https://gist.github.com/Xliff/b27f77e3353915248ff09e9c28c4ed68 <- Help, please?

[08:36] <nine> Xliff: yes, runtime is too late. Also this sounds like a question better suited for #raku

[08:57] <lizmat> Files=1336, Tests=113586, 223 wallclock secs (29.62 usr  8.48 sys + 3102.68 cusr 288.28 csys = 3429.06 CPU)

[08:57] <Xliff> nine: Thanks. I've posted this twice in raku and no one responded.

[08:58] <Xliff> So I would have to implement a run-time version of handles, then?

[09:19] *** Kaiepi left
[09:21] *** Kaeipi joined
[09:21] <nwc10> Is there an easy Rakudo way to generate the sort of information that is in:

[09:21] <nwc10> This is perl 5, version 16, subversion 3 (v5.16.3) built for ppc64-linux-thread-multi

[09:22] <nwc10> particularly the architecture thingy (versions are boring)

[09:22] <nwc10> alhgough I guess that Perl 5 has more "fun" in its architecture, because "thread" and "multi" are both Configure-time choices

[09:22] <nwc10> whereas MoarVM is MoarVM is MoarVM

[09:28] *** Kaeipi left
[09:29] <lizmat> nwc10: perhaps somewhere in say .key ~ ": " ~ .value for $*VM.config.pairs.sort ?

[09:29] *** Kaiepi joined
[09:31] <nwc10> $*VM.config.<osvers> seems to be the most useful

[09:32] <nwc10> OK, interesting.

[09:32] <nwc10> nothing in $*VM.config seems to be able to report whether MoarVM is built with a 32 or 64 bit ABI

[09:33] <nwc10> that's probably actually a bug.

[09:33] <nwc10> because it's possible to build either on (at least) x86_64, ppc64 and sparc64 (And I assume also mips64 and aarch64)

[09:33] <nwc10> and we have no way of filtering user bug reports based on which way someone else built their MoarVM

[09:35] <nwc10> in that, I have build rakdudo on both 3.10.0-957.27.2.el7.ppc64 and 3.10.0-957.27.2.el7.ppc64  :-)

[09:35] <nwc10> spot the difference.

[09:40] <nwc10> and, even more WTF - I've built it for: 4.19.0

[09:40] <nwc10> (ooh, and my local machine reports 4.9.0)

[09:41] <nwc10> I'm not even sure *where* theose numbers are coming from. I guess I should go did, as they are considerably LTA

[09:41] <nwc10> chocolate-teapot LTA

[10:06] *** Kaeipi joined
[10:07] *** Kaiepi left
[10:10] *** Kaeipi left
[10:20] *** MasterDuke joined
[10:21] <MasterDuke> nwc10: does the `-V` option to raku show anything useful?

[10:22] <lizmat> MasterDuke: afaik, that just dumps $*VM.config 

[10:22] <lizmat> ?

[10:43] <nine> We probably also want to report whether rakudo is build relocatably

[11:05] <Geth> ¬¶ rakudo: lizmat++ created pull request #3907: Parallel module install

[11:05] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/3907

[11:16] <[TuxCM]> Rakudo version 2020.08.2-59-ge65466fcd - MoarVM version 2020.08-91-g590bac47e

[11:16] <[TuxCM]> csv-test-xs-20      0.390 -  0.390

[11:16] <[TuxCM]> test-t --race       0.847 -  0.927

[11:16] <[TuxCM]> csv-ip5xs           0.968 -  0.991

[11:16] <[TuxCM]> test-t              1.899 -  1.928

[11:16] <[TuxCM]> test                7.752 -  7.885

[11:16] <[TuxCM]> test-t-20 --race    9.170 -  9.858

[11:16] <[TuxCM]> csv-ip5xs-20       10.161 - 10.177

[11:16] <[TuxCM]> csv-parser         25.464 - 27.605

[11:16] <[TuxCM]> test-t-20          33.178 - 33.938

[11:18] *** Altai-man joined
[11:20] *** sena_kun left
[11:52] <Geth> ¬¶ problem-solving: tbrowder assigned to rba Issue Add a Raku blog site as "blogs.raku.org" https://github.com/Raku/problem-solving/issues/231

[11:54] <Geth> ¬¶ problem-solving: lizmat unassigned from rba Issue Add a Raku blog site as "blogs.raku.org" https://github.com/Raku/problem-solving/issues/231

[12:16] *** domidumont joined
[12:30] *** Kaeipi joined
[12:31] *** Kaiepi joined
[12:32] *** soularis joined
[12:33] *** soularis left
[12:45] <Kaiepi> with my dns pr, i find myself having to go back and redo chunks of changes every now and then when i change my mind about how parts of it should work, which wastes a lot of time

[12:45] <Kaiepi> i skimmed over jnthn++'s rakuast pr and noticed he hardly does anything like this though... are there things you guys do to avoid this?

[12:57] <ugexe> m: say $*KERNEL.arch

[12:57] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´x86_64‚ê§¬ª

[12:57] <tellable6> 2020-09-01T14:05:54Z #raku <[Coke]> ugexe do you accept tony-o's nomination, btw? 

[13:24] <MasterDuke> Kaiepi: i often change stuff too, but it isn't always visible because i may do a lot of local rebasing/merging/deleting/etc commits before pushing

[13:37] <Kaiepi> ah

[13:38] <nine> Kaiepi: from what I know jnthn takes much time to think things through before starting with the implementation. See for example his design documents for the new dispatching mechanism in MoarVM

[13:42] <nine> Personally I have two distinct modes of operation, depending on my familiarity with the subject. When designing an API I also like to take much time beforehand, preferrably away from the keyboard to get at a good design. This is for an area where I know most of what's involved.

[13:43] <nine> The other way is a kind of exploratory implementation, where I discover mostly through trial and error. That's for areas where I lack most of the expertise like "let's jump in and fix BEGIN time EVAL"

[13:44] <nine> In the latter case git rebase -i is my best friend :)

[13:56] *** domidumont left
[13:56] *** domidumont joined
[14:01] *** domidumont left
[15:19] *** sena_kun joined
[15:20] *** Altai-man left
[15:43] *** domidumont joined
[16:04] *** domidumont left
[16:06] *** domidumont joined
[16:14] <[Coke]> Reminder: Voting for RSC is open

[16:31] <Geth> ¬¶ rakudo/rakuast: 926e02904c | (Jonathan Worthington)++ | 4 files

[16:31] <Geth> ¬¶ rakudo/rakuast: RakuAST handling of dotty infixen (`.`, `.=`)

[16:31] <Geth> ¬¶ rakudo/rakuast: 

[16:31] <Geth> ¬¶ rakudo/rakuast: This handles the cases where they are parsed as infixes.

[16:31] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/926e02904c

[16:48] *** lizmat left
[16:49] *** lizmat joined
[16:57] *** Summertime joined
[17:10] <Geth> ¬¶ rakudo/rakuast: df8f7b28ae | (Jonathan Worthington)++ | 6 files

[17:10] <Geth> ¬¶ rakudo/rakuast: RakuAST handling of capture terms

[17:10] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/df8f7b28ae

[18:39] *** domidumont left
[19:18] *** Altai-man joined
[19:20] *** sena_kun left
[20:49] *** Altai-man left
[21:05] *** wildtrees joined
[21:10] *** wildtrees_ joined
[21:11] *** wildtrees left
[21:14] *** wildtrees__ joined
[21:15] <lizmat> and another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/09/07/2020-36-election-time-again/

[21:17] *** wildtrees_ left
[21:21] *** wildtrees_ joined
[21:21] *** Kaeipi left
[21:21] *** Kaiepi left
[21:23] *** wildtrees__ left
[21:28] *** Kaiepi joined
[21:35] *** wildtrees__ joined
[21:35] *** wildtrees__ left
[21:36] *** wildtrees_ left
[21:36] *** wildtrees joined
[21:37] *** wildtrees left
[21:52] *** pamplemousse joined
[22:07] *** pamplemousse left
[22:10] *** pamplemousse joined
[22:14] <[Coke]> lizmat++

[22:24] *** pamplemousse left
[23:00] *** leont left
[23:23] *** lizmat left
[23:23] *** lizmat joined
