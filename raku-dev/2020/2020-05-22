[00:14] *** maggotbrain joined
[00:27] *** Altai-man_ joined
[00:28] *** sena_kun left
[00:50] *** guifa2 joined
[02:27] *** sena_kun joined
[02:29] *** Altai-man_ left
[04:26] *** Altai-man_ joined
[04:29] *** sena_kun left
[06:27] *** sena_kun joined
[06:28] *** Altai-man_ left
[06:36] <moritz> lizmat: taking it look... somehow the build dir had local modifications, and the build script did not deal gracefully with that.

[06:36] <tellable6> 2020-05-21T22:20:09Z #raku-dev <lizmat> moritz looks like camelia is stuck at 81c0e1454 , now 1.5 days old

[06:36] <linkable6> (2020-05-20) https://github.com/rakudo/rakudo/commit/81c0e1454f Merge pull request #3696 from vrurg/rakudo_3693

[06:41] <moritz> m: say $*VM.version

[06:41] <camelia> rakudo-moar 718d305b8: OUTPUT: «v2020.05␤»

[07:34] <nine> moritz: did you fix camelia?

[08:26] *** Altai-man_ joined
[08:28] *** sena_kun left
[09:37] *** HarmtH joined
[10:01] <moritz> nine: seems like I did, yes :D

[10:09] *** JJMerelo joined
[10:27] *** sena_kun joined
[10:29] *** Altai-man_ left
[11:14] *** MasterDuke left
[11:43] *** MasterDuke joined
[11:49] <Geth> ¦ roast: 799cf54fb2 | (Elizabeth Mattijsen)++ | S32-io/io-path.t

[11:49] <Geth> ¦ roast: Make too specific error checking less specific

[11:49] <Geth> ¦ roast: 

[11:49] <Geth> ¦ roast: Checking for a X::Multi::NoMatch is a code smell anyway, as that error

[11:49] <Geth> ¦ roast: message can be very confusing and on the border of LTA, especially for

[11:49] <Geth> ¦ roast: newbies.

[11:49] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/799cf54fb2

[11:52] <Geth> ¦ rakudo: f93ce8754b | (Elizabeth Mattijsen)++ | src/core.c/IO/Path.pm6

[11:52] <Geth> ¦ rakudo: Make IO::Path.parent(N) about 2x as fast

[11:52] <Geth> ¦ rakudo: 

[11:52] <Geth> ¦ rakudo: - don't use UInt:D in the signature, it slows down dispatch

[11:52] <Geth> ¦ rakudo: - test for values < 0 specifically, and generate a specific error if wrong

[11:52] <Geth> ¦ rakudo: - use low-level loop instead of xx with .=

[11:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f93ce8754b

[12:11] <JJMerelo> Should we maybe update answers to this question? https://stackoverflow.com/questions/27178599/how-can-i-compile-perl6-file-to-exe

[12:13] <JJMerelo> This is maybe a bit more recent https://www.reddit.com/r/rakulang/comments/f95r2o/how_to_create_a_binary_executable_in_raku/

[12:22] *** Prince213 joined
[12:26] *** Altai-man_ joined
[12:26] *** JJMerelo left
[12:28] *** sena_kun left
[12:36] *** Prince213 left
[12:37] *** Prince213 joined
[12:37] *** Prince213 left
[12:54] *** Prince213 joined
[12:55] *** Prince213 left
[13:06] *** sivoais left
[13:32] *** sivoais joined
[13:43] *** ShimmerFairy joined
[13:43] <ShimmerFairy> You know, I'm starting to think this 2013 tutorial on how to write your own language compiler in nqp is a little out of date.

[13:44] <ShimmerFairy> From what I gather, this should work, but passing some "code" with -e falls apart: https://gist.github.com/ShimmerFairy/ffd0c5f5f42a85c02980544e552a67a5

[13:45] <ShimmerFairy> REPL works, though.

[13:45] <MasterDuke> ShimmerFairy: yeah, it at least needs to be updated to reflect that nqp now defaults to integer operations, instead of num

[13:46] <ShimmerFairy> Also, switching from *@ARGS to @ARGS like NQP and rakudo do for the moar backend just breaks it more.

[13:46] <MasterDuke> assuming you're talking about the edument one?

[13:46] <ShimmerFairy> Yeah. The rubyish example in the NQP repo itself does work exactly as you'd expect.

[13:48] <lizmat> ShimmerFairy o/   looong time no see!

[13:48] <ShimmerFairy> lizmat o/

[13:51] <ShimmerFairy> Question: if you really changed the name to Raku, how come there's no NQR ???

[13:54] <lizmat> Well.. that's been discussed

[13:54] <lizmat> but it was felt that NQP as a noun, could well continue to live

[13:55] <lizmat> and frankly, changing all of core and ecosystem fixing all of nqp:: ops into nqr:: ops

[13:55] <lizmat> felt even more daunting

[13:55] <lizmat> and NQP is still Not Quite Perl anyway  :-)

[13:55] <ShimmerFairy> That's fine, I was only joking anyway :P

[13:56] <lizmat> internally, there's still a lot of renaming to do

[13:56] <lizmat> but that's tentatively scheduled around merging time of the RakuAST work

[13:57] <ShimmerFairy> Is RakuAST "macros finally", or "QAST is now part of the standard"?

[13:57] <lizmat> hopefully both

[13:59] <jnthn> Well, not really the second, since it's an AST that models Raku language concepts, where as QAST is far more low level

[13:59] <ShimmerFairy> btw, I just copied rubyish's eval method from the Compiler class, and now -e works, so I'm very confused as to a) why NQP & rakudo need @ARGS and not *@ARGS for MoarVM, and b) why those two don't need to redefine eval()

[13:59] <jnthn> But certainly "an AST for Raku that is part of the standard"

[14:00] <ShimmerFairy> That makes sense

[14:27] *** sena_kun joined
[14:28] *** Altai-man_ left
[14:30] <raku-bridge> <Snoofkin> Revisiting jnthn's performance update last year, specifically regarding short-lived objects, I'm wondering how much progress has been made toward eliding Hash construction in object construction

[14:45] <timotimo> that may not have progressed very much

[15:01] <timotimo> i myself haven't touched the PEA implementation at all yet

[15:02] <timotimo> https://github.com/MoarVM/MoarVM/blob/master/src/spesh/pea.c#L275 - this "try_track_allocation" will see "if this is something we can potentially avoid really allocating"

[15:03] <timotimo> it currently only has a path for P6opaque REPRs, which does not include the low-level hash kind that we'd get for slurpy named parameters

[15:35] *** Kaiepi left
[15:39] *** Kaiepi joined
[15:47] <Geth> ¦ nqp/new-disp: 5daf56c377 | (Jonathan Worthington)++ | t/moar/53-dispatch.t

[15:47] <Geth> ¦ nqp/new-disp: Add basic userspace dispatcher tests

[15:47] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/5daf56c377

[16:15] <[Tux]> Rakudo version 2020.05.1-166-gf93ce8754 - MoarVM version 2020.05-15-g644533ad1

[16:15] <[Tux]> csv-test-xs-20      0.384 -  0.415

[16:15] <[Tux]> csv-ip5xs           0.826 -  0.833

[16:15] <[Tux]> test-t --race       0.894 -  1.322

[16:15] <[Tux]> test-t              1.912 -  1.970

[16:15] <[Tux]> csv-ip5xs-20        7.928 -  8.070

[16:15] <[Tux]> test                7.582 -  8.166

[16:15] <[Tux]> test-t-20 --race    8.990 - 12.965

[16:15] <[Tux]> csv-parser         26.186 - 26.589

[16:15] <[Tux]> test-t-20          30.913 - 36.826

[16:26] *** Altai-man_ joined
[16:29] *** sena_kun left
[16:56] <Geth> ¦ rakudo: c821bbc55e | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/Internals.pm6

[16:56] <Geth> ¦ rakudo: Simplify R:I.FILETEST_x methods

[16:56] <Geth> ¦ rakudo: 

[16:56] <Geth> ¦ rakudo: All of these methods return a native uint, and will throw when a path does

[16:56] <Geth> ¦ rakudo: not exist in some cases (the ones using nqp::stat) or just return 0.  It

[16:56] <Geth> ¦ rakudo: does not make sense to check for weird values, when such values indicate a

[16:56] <Geth> ¦ rakudo: deeper issue.

[16:56] <Geth> ¦ rakudo: 

[16:56] <Geth> ¦ rakudo: <…commit message has 5 more lines…>

[16:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c821bbc55e

[16:59] <lizmat> afk for a few hours&

[17:26] <Geth> ¦ nqp/new-disp: ebad2a5a89 | (Jonathan Worthington)++ | t/moar/53-dispatch.t

[17:26] <Geth> ¦ nqp/new-disp: Dispatcher capture manipulation tests

[17:26] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/ebad2a5a89

[18:27] *** sena_kun joined
[18:29] *** Altai-man_ left
[19:22] *** HarmtH left
[19:41] *** wildtrees joined
[20:06] *** MasterDuke left
[20:25] *** MasterDuke joined
[20:26] *** Altai-man_ joined
[20:28] *** sena_kun left
[20:34] <Geth> ¦ rakudo: 4387f28005 | (Elizabeth Mattijsen)++ | 4 files

[20:34] <Geth> ¦ rakudo: Introducing IO::Path::Parts

[20:34] <Geth> ¦ rakudo: 

[20:34] <Geth> ¦ rakudo: - takes a volume, dirname and basename into a single object

[20:34] <Geth> ¦ rakudo: - should replace List of Pairs approach used by IO::Spec::X.split

[20:34] <Geth> ¦ rakudo: - completely compatible with List of Pairs interface for now

[20:34] <Geth> ¦ rakudo: 

[20:34] <Geth> ¦ rakudo: Did not use the improved interface in IO::Path yet.  Since this commit

[20:34] <Geth> ¦ rakudo: is spectest clean, it proves that the List of Pairs interface is working.

[20:34] <Geth> ¦ rakudo: Any ecosystem module out there should also have the benefit of this

[20:34] <Geth> ¦ rakudo: interface, which should probably need to have an official deprecation

[20:34] <Geth> ¦ rakudo: cycle.

[20:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4387f28005

[20:34] <lizmat> this needs a reconfig as a new file was added

[21:32] <Geth> ¦ roast: c92be5fd06 | (Elizabeth Mattijsen)++ | S32-io/io-path.t

[21:32] <Geth> ¦ roast: Make IO::Path.parts test a bit less restrictive

[21:32] <Geth> ¦ roast: 

[21:32] <Geth> ¦ roast: It was checking for Map, but the important thing is that it does

[21:32] <Geth> ¦ roast: the Associative role.

[21:32] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/c92be5fd06

[21:39] <Geth> ¦ rakudo: 187312b813 | (Elizabeth Mattijsen)++ | src/core.c/IO/Path/Parts.pm6

[21:39] <Geth> ¦ rakudo: Make sure IO::Path::Parts is also Associative

[21:39] <Geth> ¦ rakudo: 

[21:39] <Geth> ¦ rakudo: So that it can be used in IO::Path.parts as such.

[21:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/187312b813

[21:39] <Geth> ¦ rakudo: e9ea048b84 | (Elizabeth Mattijsen)++ | src/core.c/IO/Path/Parts.pm6

[21:39] <Geth> ¦ rakudo: Simplify the iterator method

[21:39] <Geth> ¦ rakudo: 

[21:39] <Geth> ¦ rakudo: Just build a List, and iterate from that.  No need to build our own

[21:39] <Geth> ¦ rakudo: Iterate class.

[21:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e9ea048b84

[21:39] <Geth> ¦ rakudo: 30ae200fae | (Elizabeth Mattijsen)++ | 2 files

[21:39] <Geth> ¦ rakudo: Use the new IO::Path::Parts interface in core

[21:39] <Geth> ¦ rakudo: 

[21:39] <Geth> ¦ rakudo: So no more List of Pairs being turned into a Map to AT-KEY on.  Just

[21:39] <Geth> ¦ rakudo: an object with accessor methods.

[21:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/30ae200fae

[22:19] <Geth> ¦ rakudo: f89fad877d | (Elizabeth Mattijsen)++ | src/core.c/IO/Spec/Unix.pm6

[22:19] <Geth> ¦ rakudo: Make IO::Spec::Unix.basename/extension about 1.7x as fast

[22:19] <Geth> ¦ rakudo: 

[22:19] <Geth> ¦ rakudo: - convert to native string in signature

[22:19] <Geth> ¦ rakudo: - use nqp ops

[22:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f89fad877d

[22:23] *** b2gills left
[22:27] *** sena_kun joined
[22:28] *** b2gills joined
[22:29] *** Altai-man_ left
[22:34] <Geth> ¦ rakudo: a2860ead8a | (Elizabeth Mattijsen)++ | src/core.c/IO/Spec/Unix.pm6

[22:34] <Geth> ¦ rakudo: Make IO::Spec::Unix.tmpdir about 1.8x as fast

[22:34] <Geth> ¦ rakudo: 

[22:34] <Geth> ¦ rakudo: - use for loop with return instead of first()

[22:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a2860ead8a

[23:32] <Geth> ¦ rakudo: tbrowder++ created pull request #3709: Add '--doc-fmt=preserve' compiler option

[23:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3709

