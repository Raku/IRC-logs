[00:20] * sena_kun has broke blin, oh, how wise of you, sena_kun, how wise...

[00:20] <tellable6> 2020-01-08T22:00:06Z #raku-dev <lizmat> sena_kun: also, the default .gist is calling .raku

[00:21] *** lucasb left
[00:31] *** MasterDuke left
[01:52] *** Altai-man_ joined
[01:54] *** sena_kun left
[02:08] *** ufobat__ joined
[02:12] *** ufobat_ left
[03:24] <Xliff> .tell vrurg I've got an issue I will need your help with. It looks like Method::Also is now no longer working on method overrides.

[03:24] <tellable6> Xliff, I'll pass your message to vrurg

[03:25] <vrurg> Xliff: ping me tomorrow. 

[03:25] <Xliff> vrurg: Will do.

[03:25] <tellable6> 2020-01-08T16:51:58Z #raku-dev <patrickb> Xliff Did you try nuking your zef Repo store? I seem to recall this is another instance of the infamous ecosystem-doesn't-support-real-versions problem.

[03:25] <tellable6> 2020-01-08T17:26:32Z #raku-dev <patrickb> Xliff: jnthn++ has just uploaded a new version. When you try again it should just work.

[03:25] <tellable6> hey Xliff, you have a message: https://gist.github.com/1be2c294b257755dae605798456cff62

[03:53] *** sena_kun joined
[03:55] *** Altai-man_ left
[04:58] *** quotable6 left
[04:58] *** nativecallable6 left
[04:58] *** shareable6 left
[04:58] *** evalable6 left
[04:58] *** statisfiable6 left
[04:58] *** bloatable6 left
[04:58] *** notable6 left
[04:58] *** committable6 left
[04:58] *** reportable6 left
[04:58] *** benchable6 left
[04:58] *** tellable6 left
[04:58] *** releasable6 left
[04:58] *** greppable6 left
[04:58] *** squashable6 left
[04:58] *** sourceable6 left
[04:58] *** coverable6 left
[04:58] *** bisectable6 left
[04:58] *** unicodable6 left
[04:59] *** bisectable6 joined
[04:59] *** greppable6 joined
[04:59] *** tellable6 joined
[04:59] *** bloatable6 joined
[04:59] *** committable6 joined
[04:59] *** unicodable6 joined
[04:59] *** squashable6 joined
[05:00] *** evalable6 joined
[05:00] *** sourceable6 joined
[05:00] *** quotable6 joined
[05:00] *** releasable6 joined
[05:00] *** nativecallable6 joined
[05:00] *** statisfiable6 joined
[05:01] *** benchable6 joined
[05:01] *** shareable6 joined
[05:01] *** notable6 joined
[05:01] *** coverable6 joined
[05:01] *** reportable6 joined
[05:52] *** Altai-man_ joined
[05:55] *** sena_kun left
[07:19] *** ufobat__ is now known as ufobat

[07:40] *** domidumont joined
[07:53] <lizmat> :Files=1294, Tests=109644, 211 wallclock secs (28.53 usr  8.46 sys + 2954.98 cusr 278.25 csys = 3270.22 CPU)

[07:53] *** sena_kun joined
[07:55] *** Altai-man_ left
[09:30] <Geth> ¬¶ Blin: 3f3a3e8c99 | Altai-man++ | bin/blin.p6

[09:30] <Geth> ¬¶ Blin: Fix condition

[09:30] <Geth> ¬¶ Blin: 

[09:30] <Geth> ¬¶ Blin: The smart one-liner

[09:30] <Geth> ¬¶ Blin: Did not consider Mu means `all modules`

[09:30] <Geth> ¬¶ Blin: A silly mistake

[09:30] <Geth> ¬¶ Blin: review: https://github.com/Raku/Blin/commit/3f3a3e8c99

[09:52] *** Altai-man_ joined
[09:55] *** sena_kun left
[10:31] <jnthn> lizmat: Hm, if I'd had to guess I'd have thought the WhateverCode form would come out the same of potentially even a bit simpler...

[10:31] <jnthn> (e.g. simpler generated code so maybe a tad faster)

[10:32] <jnthn> Can't be much different though; 3% is pretty small :)

[10:46] *** scovit joined
[10:52] <|Tux|> Rakudo version 2019.11-414-g66cf6f811 - MoarVM version 2020.01-15-g1fa9764bf

[10:52] <|Tux|> csv-test-xs-20      0.423 -  0.429

[10:52] <|Tux|> csv-ip5xs           0.725 -  0.742

[10:52] <|Tux|> test-t --race       0.834 -  0.913

[10:52] <|Tux|> test-t              1.763 -  1.763

[10:52] <|Tux|> csv-ip5xs-20        6.222 -  6.364

[10:52] <|Tux|> test                7.362 -  7.386

[10:52] <|Tux|> test-t-20 --race    9.223 -  9.271

[10:53] <|Tux|> csv-parser         22.663 - 23.486

[10:53] <|Tux|> test-t-20          29.555 - 30.486

[10:53] <|Tux|> test-t diff 0.000 :)

[11:00] *** Guest38485 left
[11:07] *** domidumont left
[11:53] *** sena_kun joined
[11:55] *** Altai-man_ left
[11:57] *** AlexDaniel joined
[11:57] *** AlexDaniel left
[11:57] *** AlexDaniel joined
[12:07] <lizmat> jnthn: yeah, but in a lot of potentially hot code

[12:08] <lizmat> but yeah, I would have figured the WhateverCode version would be faster, as it also has fewer allocations

[12:08] <lizmat> so it feels to me there is room for (hopefully) simple optimization

[12:13] <nine> Then it's probably just some small issue preventing better performance. However "small" doesn't necessarily mean "easy to fix". Could e.g. require PEA to be finished.

[12:17] <lizmat> nine: but what I understand about WhateverCode, is that it can never have any outside references

[12:18] <lizmat> or am I wrong there ?

[12:21] <nine> That was just an example for illustrative purposes :)

[12:44] *** Guest78373 joined
[12:46] *** titsuki left
[13:01] <Xliff> nine: Well, initial work on the parallel builder has tentatively yielded a 3-fold decrease in compile times across whole projects, however I still think I'm doing some things wrong.

[13:06] <Xliff> Not quite sure what this error means: "P6M Merging GLOBAL symbols failed: duplicate definition of symbol gobject"

[13:16] <jnthn> lizmat: It can close other things, for sure

[13:21] *** domidumont joined
[13:52] *** Altai-man_ joined
[13:54] *** sena_kun left
[14:22] <AlexDaniel> lizmat: what about https://github.com/Raku/please-turn-off-the-autowatch-feature

[14:22] <AlexDaniel> nine: ‚Üë

[14:22] <AlexDaniel> here's my plan. New members are added to the ‚ÄúEveryone‚Äù team, which only has access to this repo

[14:22] <AlexDaniel> meaning that immediately they're subscribed to it, and receive a notification

[14:23] <lizmat> feels like a plan

[14:23] <AlexDaniel> after some time we can auto add them to the Raku team, which will give them access to a lot of stuff

[14:23] <AlexDaniel> by that time I guess they've had their chance to turn off the feature

[14:24] <lizmat> m: (1/10000000000).base(3)

[14:24] <camelia> rakudo-moar 66cf6f811: ( no output )

[14:24] <lizmat> m: say (1/10000000000).base(3)

[14:24] <camelia> rakudo-moar 66cf6f811: OUTPUT: ¬´0.0000000000000000000010‚ê§¬ª

[14:24] <lizmat> I think that trailing 0 is incorrect, do we agree?  AlexDaniel jnthn nine 

[14:25] <AlexDaniel> yeah

[14:25] <AlexDaniel> c: all say (1/10000000000).base(3)

[14:25] <AlexDaniel> m: put (1/10000000000).base(3)

[14:25] <camelia> rakudo-moar 66cf6f811: OUTPUT: ¬´0.0000000000000000000010‚ê§¬ª

[14:25] <committable6> AlexDaniel, ¬¶all (62 commits): ¬´0.0000000000000000000010‚ê§¬ª

[14:25] <AlexDaniel> it's not entirely incorrect but it shouldn't be there

[14:26] <lizmat> well, I'm refactoring Rat.base and my solution doesn't have the 0 at the end, but spectest says it should

[14:26] <lizmat> but that test also has the comment: # is the trailing zero correct?

[14:26] <AlexDaniel> lizmat: interesting. Link to the spectest?

[14:26] <AlexDaniel> I guess someone was writing the test based on the current behavior

[14:26] <lizmat> S32-num/base.t line 44

[14:27] <jnthn> Yeah, that trailing 0 feels odd to me also

[14:27] <lizmat> ok, fixing the test  :-)

[14:31] *** scovit left
[14:35] <AlexDaniel> tyil: I have an idea

[14:35] <AlexDaniel> tyil: I'm a bit tired of setting up webhooks for every repo, so, can't we use an org webhook for that?

[14:35] <AlexDaniel> tyil: however, I think it means that Geth will receive same payloads more than once

[14:36] <AlexDaniel> tyil: so if we can have a little feature that makes wait a bit before announcing org payloads, it'll be awesome!

[14:36] <AlexDaniel> makes it*

[14:37] <AlexDaniel> I guess the default channel should be #raku

[14:39] <tyil> AlexDaniel: that would be better, I agree

[14:40] <tyil> I currently have a number of other projects I'm spending time on, but I'll add it to my todo list

[14:41] <tyil> idk if I can even differentiate between org and project payloads, btw

[14:42] <AlexDaniel> tyil: we can use a different link

[14:45] <tyil> that should work

[14:48] *** MasterDuke joined
[15:18] <lizmat> m: say (1/10000000000).base(3)   # turns out this is actually correct

[15:18] <camelia> rakudo-moar 66cf6f811: OUTPUT: ¬´0.0000000000000000000010‚ê§¬ª

[15:19] <lizmat> hmmm... or maybe not

[15:36] <nine> AlexDaniel: that's an epic solution! Many thanks!

[15:38] <nine> Xliff: so you've changed the locking in rakudo?

[15:38] <nine> Xliff: that message means exactly what it says: we're trying to import a global symbol from a computation unit, but discover that one by that name is already there

[15:39] <lizmat> nine: compilation ?

[15:46] <Guest78373> lizmat: https://wims.unice.fr/wims/en_tool~number~baseconv.en.html

[15:48] <lizmat> Guest78373: thanks, but it is not about the actual calculation, it's about how many digits should be represented

[15:49] <Guest78373> aha

[15:55] *** sena_kun joined
[15:55] *** Altai-man_ left
[16:19] <nine> lizmat: yeah

[16:20] <lizmat> *phew*  thought I had missed a memo somewhere  :-)

[16:31] *** domidumont left
[16:49] *** lucasb joined
[16:56] <AlexDaniel> hmm is tony-o around?

[16:57] <Geth> ¬¶ problem-solving: AlexDaniel assigned to JJ Issue SEO for the keyword "rakulang" seems poor https://github.com/Raku/problem-solving/issues/147

[17:08] *** AlexDaniel left
[17:21] <lizmat> m: say (1/10000000000).base(3,*)    # this shouldn't hang, should it ?

[17:21] <camelia> rakudo-moar 66cf6f811: OUTPUT: ¬´(timeout)¬ª

[17:22] <lucasb> ^^ https://github.com/rakudo/rakudo/issues/1872

[17:22] <lizmat> m: say (1/3).base(10,*)   # simpler case

[17:22] <camelia> rakudo-moar 66cf6f811: OUTPUT: ¬´(timeout)¬ª

[17:23] <lizmat> generating 2**63 digits feels meh to me

[17:25] <lizmat> I mean, generating more digits than can be represented faithfully in a Rat, feels a little more catholic than the Pope

[17:34] <lizmat> dinner&

[17:52] *** Altai-man_ joined
[17:55] *** sena_kun left
[18:21] *** AlexDaniel joined
[18:22] *** AlexDaniel left
[18:22] *** AlexDaniel joined
[18:26] <AlexDaniel`> hmmmmmm https://github.com/perl6/contribute

[18:38] <Geth> ¬¶ old-design-docs: AlexDaniel unassigned from zoffixznet Issue Add warning noting these are now historical documents https://github.com/Raku/old-design-docs/issues/110

[18:38] <AlexDaniel`> Moving some repos, trying to see if something breaks üòá

[18:43] *** domidumont joined
[18:57] *** AlexDaniel left
[18:59] <AlexDaniel`> moritz: I don't remember, what happened to https://github.com/perl6/coding-contest-2019 ? Do we still need the repo?

[19:01] <AlexDaniel`> timotimo: what's https://github.com/perl6/nqp-inversion-list ?

[19:01] <jdv79> [Coke]: where?  albany?

[19:01] <jdv79> nine: after i actually pulled your changes they worked.  thanks!

[19:02] <moritz> AlexDaniel`: no, we can delete that

[19:03] <timotimo> we didn't get far with that, did we ...

[19:03] <moritz> no

[19:04] <timotimo> AlexDaniel`:feel free to delete it, i just forked it over to my user

[19:05] <AlexDaniel`> thanks!

[19:05] <AlexDaniel`> I was just wondering what to do with them

[19:05] <AlexDaniel`> I'm moving some stuff to Raku and some to https://github.com/raku-community-modules

[19:06] <AlexDaniel`> also if anybody has a better name for https://github.com/Raku/old-design-docs please feel free

[19:06] <AlexDaniel`> not touching nqp, roast and other important repos for now

[19:07] <AlexDaniel`> first let's see if anything breaks when moving other repos :)

[19:10] <[Coke]> jdv79: albany-ish, yes.

[19:10] <[Coke]> (about 15m south, across the river)

[19:17] <Xliff> nine: Yes. I've made a small change that I think does the right thing.

[19:17] <nine> Cool!

[19:18] <Xliff> Still needed directory locking, but that has much less of an impact. Still worrying that that error message means I'm not doing something right, though.

[19:22] <jdv79> troy?

[19:28] <Xliff> Is S10 hanging for anyone else?

[19:53] <tony-o> AlexDaniel`: you can likely ignore pluggable

[19:53] <tellable6> hey tony-o, you have a message: https://gist.github.com/55439caead605fb0065de631d2275b8b

[19:53] *** sena_kun joined
[19:53] <tony-o> AlexDaniel`: you available to help me test some stuff using zef as a module maintenance system? (or anyone with a few modules and some time)

[19:55] <tony-o> tbrowder: you do need to create manually and then the yaml file - i don't have an auto generator for sqlite yet

[19:55] *** Altai-man_ left
[19:55] <tony-o> .tell tbrowder you do need to create manually and then the yaml file - i don't have an auto generator for sqlite yet

[19:55] <tellable6> tony-o, I'll pass your message to tbrowder

[19:57] <tbrowder> tony-o: thnx!

[19:58] *** domidumont left
[20:03] *** patrickb joined
[20:29] *** lucasb left
[20:51] *** MasterDuke left
[20:51] <sena_kun> https://gist.github.com/Altai-man/900017ce2744020617d864daceb00dce totally looks like a bad thing, right?

[20:52] <sena_kun> ping lizmat ^

[20:53] <AlexDaniel`> tony-o: I'm not really available right now, and I don't know what you're talking about :T

[20:53] <lizmat> sena_kun: yeah, but caused by me

[20:54] <lizmat> I guess we need a fallback for .perlseen as well

[20:55] <lizmat> sena_kun: give me a min

[20:55] <AlexDaniel`> tony-o: any reason you're not accepting your invite to the Raku org?

[20:55] <AlexDaniel`> tony-o: https://github.com/Raku

[20:58] <AlexDaniel`> tony-o: I noticed when I tried to add you to the reviewers team in the raku org (which is used for giving access to locked tickets and stuff)

[20:58] <lizmat> sena_kun: running spectest with fix now

[21:09] <Geth> ¬¶ rakudo: aa9c824d06 | (Elizabeth Mattijsen)++ | src/core.c/Mu.pm6

[21:09] <Geth> ¬¶ rakudo: Some module authors used ".perlseen"

[21:09] <Geth> ¬¶ rakudo: 

[21:09] <Geth> ¬¶ rakudo: So provide a forwarder for ".perlseen" to ".rakuseen".

[21:09] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/aa9c824d06

[21:09] <lizmat> .tell sena_kun aa9c824d06 contains a fix 

[21:09] <tellable6> lizmat, I'll pass your message to sena_kun

[21:12] <sena_kun> squashable6, status

[21:12] <squashable6> sena_kun, Next SQUASHathon in 22 days and ‚âà6 hours (2020-02-02 UTC-12‚åÅUTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[21:26] <Geth> ¬¶ rakudo/release-2020.01: 2caee0e964 | Altai-man++ | docs/release_guide.pod

[21:26] <Geth> ¬¶ rakudo/release-2020.01: Update new release date

[21:26] <Geth> ¬¶ rakudo/release-2020.01: review: https://github.com/rakudo/rakudo/commit/2caee0e964

[21:26] <Geth> ¬¶ rakudo/release-2020.01: 9d57d35210 | Altai-man++ | 2 files

[21:26] <Geth> ¬¶ rakudo/release-2020.01: Log all changes (+ announcement)

[21:26] <Geth> ¬¶ rakudo/release-2020.01: 

[21:26] <Geth> ¬¶ rakudo/release-2020.01: Deliberately not logged:

[21:26] <Geth> ¬¶ rakudo/release-2020.01: 

[21:26] <Geth> ¬¶ rakudo/release-2020.01: 7f15a57 2c5c013 3802cdf 1ec69e1 654d6a1 aa06d32 044b339

[21:26] <Geth> ¬¶ rakudo/release-2020.01: 88db15f 1d84c64 1d84c64 726c38f d36c2e5 a62d9c7 bbcc342

[21:26] <Geth> ¬¶ rakudo/release-2020.01: e03f013 830400f 9528bd0 da03d10 9fa4396 f608a7a 82bd9c2

[21:26] <Geth> ¬¶ rakudo/release-2020.01: <‚Ä¶commit message has 22 more lines‚Ä¶>

[21:27] <Geth> ¬¶ rakudo/release-2020.01: review: https://github.com/rakudo/rakudo/commit/9d57d35210

[21:27] <Geth> ¬¶ rakudo/release-2020.01: 9a215e26b3 | Altai-man++ | 2 files

[21:27] <Geth> ¬¶ rakudo/release-2020.01: Remove reverted commit

[21:27] <Geth> ¬¶ rakudo/release-2020.01: 

[21:27] <Geth> ¬¶ rakudo/release-2020.01: Deliberately not logged: [c63d8a87]

[21:27] <Geth> ¬¶ rakudo/release-2020.01: review: https://github.com/rakudo/rakudo/commit/9a215e26b3

[21:27] <lizmat> sena_kun: you probably want to cherry pick aa9c824d06 for the release

[21:28] <sena_kun> lizmat, I am not sure how I'll merge it afterwards, and even if I can cut a release out of some branch that won't be merged, that won't be very cool in terms of build reproducibility...

[21:28] <sena_kun> anyway, the Blin output looks a bit better, but still has ways for improvement. somehow ADT module was broken. :S

[21:46] <AlexDaniel`> sena_kun: what do you mean build reproducibility?

[21:46] <AlexDaniel`> you can cherry-pick any commit into the release branch

[21:46] <AlexDaniel`> the release branch needs to be merged into master at some point anyway

[21:46] <sena_kun> AlexDaniel`, cherry-picking creates a new commit, no?

[21:46] <AlexDaniel`> yes, the same commit will exist on master twice

[21:46] <sena_kun> I don't want that.

[21:46] <AlexDaniel`> it's totally ok

[21:49] <AlexDaniel`> a single commit doesn't hurt, and that's the only way to do it anyway

[21:49] <AlexDaniel`> once master diverges from the release branch you don't have any other choice, really

[21:49] <AlexDaniel`> like, you have to get the fixes into the release branch and you can't always rebase

[21:50] <sena_kun> well, when I can rebase - I rebase.

[21:50] <AlexDaniel`> sena_kun: there was a case when somebody rebased a feature branch incorrectly

[21:50] <sena_kun> I suppose it is a matter of preference when there are no "blockers" for either approach.

[21:51] <AlexDaniel`> sena_kun: and brought hundreds of duplicated commits when the branch was merged

[21:51] <AlexDaniel`> ah, sure, if you can, then yeah

[21:52] <AlexDaniel`> at my time the choice was usually 1) cherry-pick and just live with the dup commit

[21:52] <AlexDaniel`> or 2) bring new untested commits into the release

[21:52] *** Altai-man_ joined
[21:53] <AlexDaniel`> first option does no harm besides triggering someone's OCD :)

[21:55] <Altai-man_> AlexDaniel`, I am kind of ok with bringing more commits, because from my point of view, a relatively complex "fix" can not only fix the regression, but also break some other module, so you need to test everything, and if you have to, why be afraid with grabbing new commits.

[21:55] *** sena_kun left
[21:55] <AlexDaniel`> Altai-man_: yeah

[21:55] <AlexDaniel`> well, it depends

[21:56] <Altai-man_> anyway, I am starting to create patterns of how to process Blin results, so hopefully I'll master it some day.

[21:56] <AlexDaniel`> not everything can be caught in a timely manner

[21:56] <AlexDaniel`> we just need to fix whateverable to build branches

[21:56] <Altai-man_> would be really awesome to release this weekend, though I am not sure in anything right now

[21:56] <AlexDaniel`> and then we'd be able to continuously test the release branch without any issues

[21:57] <Altai-man_> I also find a situation when the module fails in blin, but installs just ok locally, with or without local blin installation.

[21:57] <tony-o> AlexDaniel`: i think i did accept that invite?

[21:58] <tony-o> AlexDaniel`: oh, apparently i just clicked on it in the email - just accepted it.  sorry, thought i'd done that weeks ago

[21:58] <Altai-man_> this amount of false positives is distracting but I have no idea where to start, because the errors are different.

[21:58] <AlexDaniel`> tony-o: yes! Now it's OK!

[21:58] <AlexDaniel`> tony-o:  thank you!

[21:58] <AlexDaniel`> Altai-man_: I only cared about bisected results

[21:58] <Geth> ¬¶ rakudo: 97e7cdbd54 | (Elizabeth Mattijsen)++ | src/core.c/Rational.pm6

[21:58] <Geth> ¬¶ rakudo: Make Rational.base at least 2.5x as fast

[21:58] <Geth> ¬¶ rakudo: 

[21:58] <Geth> ¬¶ rakudo: - completely re-imagined into a multi-method for better optimizing

[21:58] <Geth> ¬¶ rakudo: - use a native string array to assemble components of the result

[21:58] <Geth> ¬¶ rakudo: - much faster than 2.5x for values with more fractional digits

[21:58] <Geth> ¬¶ rakudo: - introducing a :no-trailing-zeroes named parameter.

[21:58] <Geth> ¬¶ rakudo: 

[21:58] <tony-o> pluggable predates the CUR stuff nine did

[21:58] <Geth> ¬¶ rakudo: <‚Ä¶commit message has 10 more lines‚Ä¶>

[21:58] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/97e7cdbd54

[21:59] <AlexDaniel`> as long as the number of AlwaysFails is low, you don't really need to look at them

[21:59] <AlexDaniel`> and if it's not low then we're fucked anyway

[22:00] <tony-o> AlexDaniel`: do you recall anyone else that was interested in a separate ecosystem stuff?  i have a plugin for zef that allows uploading modules to a zef ecosystem and allows zef to search/download/install them from said eco

[22:00] <AlexDaniel`> tony-o: hmmm‚Ä¶ not really?

[22:00] <lizmat> tony-o: is that a recommendation manager ?

[22:00] <Altai-man_> AlexDaniel`, disregarding Sparrowdo failures (which are reported), I had 320 last time, with false positives like cro.

[22:01] <tony-o> lizmat: yes it can double as that

[22:01] <AlexDaniel`> Altai-man_: oh, 320 sounds alright!

[22:01] <AlexDaniel`> Altai-man_:  just about 100 more than we should have

[22:01] * Altai-man_ dreams of a better analogue of haskell's slack

[22:01] <lizmat> tony-o: can you tell us more about that alternate eco-system ?  blog post maybe ?

[22:01] <Altai-man_> AlexDaniel`, is it an irony? :>

[22:01] <tony-o> lizmat: for sure, i'll do a write up

[22:02] <AlexDaniel`> Altai-man_: what's that?

[22:02] <AlexDaniel`> Altai-man_: no, no irony, 320 is pretty close

[22:02] <tony-o> probably later tonight, i need to ride my bike before the sun gets away

[22:02] <AlexDaniel`> Altai-man_: see https://github.com/perl6/ecosystem-unbitrot/issues

[22:02] <AlexDaniel`> Altai-man_: these are pretty much known to fail

[22:02] <Altai-man_> AlexDaniel`, ah, ok, "just 100 more than we should have" sounded a bit playful to me. :)

[22:03] <AlexDaniel`> Altai-man_: what's that about hasell's slack?

[22:03] <Altai-man_> anyway, let's hope a for release this weekend, I plan to dedicate a lot of time then.

[22:03] <Altai-man_> AlexDaniel`, sorry, it was a typo of "stack".

[22:04] <AlexDaniel`> ah

[22:04] <Altai-man_> and haskell's stack is cool because they freeze the ecosystem at some point and you know the stuff _WORKS_.

[22:04] <AlexDaniel`> nice

[22:04] <AlexDaniel`> (or doesn't, if there are new fixes)

[22:05] <Altai-man_> now when you are making a release and the author of the module breaks something (because take latest from git! is the solution right now), you are like "Hmm, ok, that's not a regression in rakudo, but it is broken now, hmm"

[22:06] <Altai-man_> yeah, if you need something more fresh, you have to wait, that's the downside. :)

[22:06] <Altai-man_> e.g. an author once abandoned a module, another person decided to patch the things and I had to wait like a half of year to get to the new snapshot and to apply some goodies.

[22:07] <AlexDaniel`> but then it doesn't show up as a regression in Blin

[22:07] <Altai-man_> AlexDaniel`, the not cool thing is that Blin can give false negatives. :S

[22:07] <Altai-man_> for example, take ADT module

[22:08] <AlexDaniel`> yeaaaaaaaaah‚Ä¶

[22:08] <Altai-man_> it is broken on release branch for sure, it surely works on 2019.11, but what breaks it - no idea.

[22:08] <AlexDaniel`> wait but then how is that a false negative?

[22:09] <Altai-man_> AlexDaniel`, ah, sorry, I mean "false negative" in "doesn't show up as a regression, just as a failure sense", not the "it passes, but is in fact broken" sense.

[22:09] <Altai-man_> kind of harder when you have more than two states.

[22:09] <Altai-man_> :P

[22:09] <Altai-man_> ok, I am running away to get some sleep

[22:09] <AlexDaniel`> hmm

[22:10] * Altai-man_ afk&

[22:58] <Geth> ¬¶ roast: b3cd406ea2 | (Elizabeth Mattijsen)++ | S32-num/base.t

[22:58] <Geth> ¬¶ roast: Fix erroneous test

[22:58] <Geth> ¬¶ roast: 

[22:58] <Geth> ¬¶ roast: Since https://github.com/rakudo/rakudo/commit/97e7cdbd54 this test

[22:58] <Geth> ¬¶ roast: would fail.  Since the test involved *no* specific number of digits,

[22:58] <Geth> ¬¶ roast: any trailing 0 should be removed.  The new implementation does that

[22:58] <Geth> ¬¶ roast: in this case, the old implementation of Rational.base did not.

[22:58] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/b3cd406ea2

[22:59] <lizmat> sleep&

[23:53] *** sena_kun joined
[23:55] *** Altai-man_ left
