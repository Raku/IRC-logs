[02:54] *** andres_ joined
[02:56] *** andres_ left
[05:08] *** Kaiepi left
[05:09] *** Kaiepi joined
[07:31] *** sena_kun joined
[08:00] <nine> '/home/nine/rakudo/install/bin/nqp-m' --module-path=blib --ll-exception --target=mbc --output=blib/Perl6/World.moarvm gen/moar/World.nqp

[08:00] <nine> Missing or wrong version of dependency 'gen/moar/stage2/NQPHLL.nqp' (from 'gen/moar/Pod.nqp')

[08:00] *** Kaiepi left
[08:00] <nine> So...the build is broken again?

[08:07] *** jmerelo joined
[08:08] <jmerelo> Distribution in age groups of responders of the Raku survey through the years https://github.com/Raku/survey/blob/master/illos/age-groups-years.png

[08:10] <jmerelo> Biggest difference seems to be in the 18 thru 40 age group, which has lost ~20% In fact, that pretty much explains the difference in total number of answers

[08:17] *** domidumont joined
[08:20] <jmerelo> And prior use of Perl https://github.com/Raku/survey/blob/master/illos/use-perl-years.png Those tho have used Perl have decreased more than those who haven't, but it's still the bigger majority

[08:21] <sena_kun> nine, I wonder if nqp wants the same treatment as https://github.com/rakudo/rakudo/commit/a56ce834e8046385210793f888d11eeff7810242

[08:24] *** domidumont left
[08:57] <nine> m: package Foo { package Our::Bar {}; package Their { package Baz {} } }; say Foo::Our.^name; say Foo::Their.^name

[08:57] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´Our‚ê§Foo::Their‚ê§¬ª

[08:57] <nine> I dare say this difference in names (one without and one with the containing package as a prefix) is a bug. And one that causes some of the remaining issues with in-process precompilation

[09:55] <lizmat> Files=1336, Tests=113586, 241 wallclock secs (30.78 usr  9.36 sys + 3328.17 cusr 319.26 csys = 3687.57 CPU)

[10:06] <nine> Well the fix looks simple and passes tests and spectests

[10:09] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: dae8383a20 | (Stefan Seifert)++ | src/Perl6/World.nqp

[10:09] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: Fix stub packages in multi part declarations only knowing part of their name

[10:09] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: 

[10:09] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: In package Foo { package Bar::Baz { } } the created stub package for Bar had

[10:09] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: only "Bar" as longname instead of the expected "Foo::Bar" like you'd get if the

[10:09] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: Bar package was created explicitly. Fix by using the target package's name as

[10:09] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: starting point when assembling the longname.

[10:09] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: review: https://github.com/rakudo/rakudo/commit/dae8383a20

[10:09] <Geth> ¬¶ rakudo: niner++ created pull request #3926: Fix stub packages in multi part declarations only knowing part of the‚Ä¶

[10:09] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/3926

[10:12] *** jmerelo left
[11:02] *** Altai-man joined
[11:05] *** sena_kun left
[11:43] <Geth> ¬¶ rakudo/rakuast: 301f2d1890 | (Elizabeth Mattijsen)++ | src/Raku/ast/expressions.rakumod

[11:43] <Geth> ¬¶ rakudo/rakuast: Remove unnecessary whitespace

[11:43] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/301f2d1890

[11:43] <Geth> ¬¶ rakudo/rakuast: fed18ca0a5 | (Elizabeth Mattijsen)++ | t/12-rakuast/var.t

[11:43] <Geth> ¬¶ rakudo/rakuast: Test deparsing most of variable declarations

[11:43] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/fed18ca0a5

[11:44] <nine> Simple...but not actually entirely correct

[11:44] <lizmat> ?

[11:45] <nine> package GLOBAL::Foo { } should still be called Foo

[11:48] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: 51db5341a7 | (Stefan Seifert)++ | src/Perl6/World.nqp

[11:48] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: Fix stub packages in multi part declarations only knowing part of their name

[11:48] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: 

[11:48] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: In package Foo { package Bar::Baz { } } the created stub package for Bar had

[11:48] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: only "Bar" as longname instead of the expected "Foo::Bar" like you'd get if the

[11:48] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: Bar package was created explicitly. Fix by using the target package's name as

[11:48] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: starting point when assembling the longname.

[11:48] <Geth> ¬¶ rakudo/fix_name_of_stub_packages_in_multi_part_declarations: review: https://github.com/rakudo/rakudo/commit/51db5341a7

[11:48] <nine> This works better

[11:49] <lizmat> good catch!

[13:22] <[Tux]> This one is still from yesterday:

[13:22] <[Tux]> Rakudo version 2020.08.2-79-gb857aee9d - MoarVM version 2020.08-93-g1fdfdf59c

[13:22] <[Tux]> csv-test-xs-20      0.387 -  0.387

[13:22] <[Tux]> test-t --race       0.846 -  0.860

[13:22] <[Tux]> csv-ip5xs           0.941 -  0.993

[13:22] <[Tux]> test-t              1.868 -  1.879

[13:22] <[Tux]> test                7.776 -  7.970

[13:22] <[Tux]> test-t-20 --race    8.859 -  9.261

[13:22] <[Tux]> csv-ip5xs-20       10.174 - 10.221

[13:22] <[Tux]> csv-parser         24.989 - 26.079

[13:22] <[Tux]> test-t-20          31.573 - 32.294

[13:36] <[Tux]> Rakudo version 2020.08.2-81-g8e6f7f0d2 - MoarVM version 2020.08-93-g1fdfdf59c

[13:36] <[Tux]> csv-test-xs-20      0.386 -  0.401

[13:36] <[Tux]> test-t --race       0.848 -  0.874

[13:36] <[Tux]> csv-ip5xs           0.992 -  1.016

[13:36] <[Tux]> test-t              1.908 -  2.001

[13:36] <[Tux]> test                7.919 -  8.567

[13:36] <[Tux]> test-t-20 --race    9.271 - 10.099

[13:36] <[Tux]> csv-ip5xs-20        9.892 - 10.580

[13:36] <[Tux]> csv-parser         26.387 - 28.251

[13:36] <[Tux]> test-t-20          33.216 - 33.934

[13:55] <timotimo> so how exactly does relocatable rakudo work?

[13:55] <timotimo> right now i get "NQP_HOME is invalid"

[13:57] <timotimo> hum.

[13:57] <timotimo> setting rakudo and nqp home env vars is fine and all, but now it's trying to invoke a rakudo from a wrong path to do precomp or something?

[14:00] <timotimo> ok, i got further this time, cool.

[14:59] <nine> Down to 3 spectest and 2 test files failing with in-process precomp

[15:01] <MasterDuke> is it noticeably faster??

[15:03] *** sena_kun joined
[15:04] <nine> Core module installation in 8.1s vs. 11s on master

[15:05] *** Altai-man left
[15:06] <MasterDuke> nice. and it's profileable now, right?

[15:09] <nine> think so

[15:10] <MasterDuke> cool beans

[15:20] <timotimo> yo MasterDuke you wanna test a random thing i made?

[15:21] <MasterDuke> i probably can

[15:24] <nine> Type parameterization is still an issue when multiple files are precompiled by the same process. A parameterization of a setting type (like Hash[Any:D,List:D]) created during one precompilation is also found when a later compilation needs that type. But it will already have been added to a different SC

[15:27] <timotimo> so we need many parameterization caches

[15:27] <timotimo> one for anything used in the compiler

[15:27] <timotimo> and one for each compilee?

[15:29] <nine> There's another factor: the cache is not just for performance. It's also there so that we do get the same type object for a parameterization, otherwise those types wouldn't match

[15:29] <timotimo> yeah

[15:29] <nine> I wonder though why it won't just be recorded as a dependency and instead I get STable Perl6::Metamodel::ClassHOW+\{<anon>}+\{<anon>} does not exist in serialization context

[15:30] <timotimo> nine, got a minute to run a binary for me?

[15:30] <nine> sure

[15:30] <timotimo> https://u.setxkbmap.de/#xHBkV2CqBsD2rJHzZEgDDA

[15:32] <nine> ===SORRY!=== Error while compiling /tmp/.mount_MoarPe5H1oFu/usr/rakuapp/service.p6

[15:32] <nine> Failed to spawn process /usr/rakudo/bin/rakudo: no such file or directory (error code -2)

[15:34] <timotimo> now why would it go ahead and do that

[15:35] <timotimo> i fixed that by removing -I . from the commandline

[15:35] <nine> To distract me from noticing your evil rootkit taking over my machine?

[15:35] <timotimo> i wonder if it just found it in my global system instead

[15:35] <timotimo> it's a rakuutkit

[15:36] <timotimo> what does RAKUDO_MODULE_DEBUG look like?

[15:36] <nine> https://gist.github.com/niner/48dfe68f3b9d124fbad331f844aae6f0

[15:38] <timotimo> https://u.setxkbmap.de/#6-i34xea2w82N20l2ha5LQ

[15:39] <timotimo>  1 RMD: Precompiling /tmp/.mount_MoarPe5QqXwT/usr/bin/../rakudo/share/perl6/site/sources/6D2B9EAD4DC4FCDFF835D33B0CA4F37530A7DDCE into /home/nine/.raku/precomp/2B6602E5A8534CC907DE2D4F2BA95B45CA492917/6D/6D2B9EAD4DC4FCDFF835D33B0CA4F37530A7DDCE.bc (   )

[15:39] <timotimo> well that isn't good

[15:39] <timotimo> it should(. do that, right?

[15:40] <timotimo> it doesn't seem to load from my home directory on my machine

[15:41] <nine> Probably because you don't have a conflicting cro version installed into your home repo

[15:42] <timotimo> got a suggestion how i should proceed?

[15:42] <timotimo> if you want, you can put --appimage-extract as argument and it'll unpack a folder called "squash-fs-root" or so, and you can ./squashfs-root/AppRun to run the thing

[15:43] <timotimo> it'll go blah-root/usr/bin/moarperf-launcher-script or whatever i called it

[15:44] <nine> if the goal is to provide AppImages of rakudo based apps, you got to get rid of that home repo in the repo chain

[15:44] <timotimo> right, is there a way to do that without patching the rakudo i build?

[15:44] <timotimo> though i can of course do that

[15:44] <nine> I don't think there is one yet

[15:47] <timotimo> oh, what does RAKUDO_PRECOMP_WITH do?

[15:48] <nine> That's used to pass on the current repo chain to precomp processes

[15:48] <nine> It's part of what I'm trying to get rid of :D

[15:48] <timotimo> ah

[16:03] <timotimo> looks like my patch successfully tosses out home dir precmomp

[16:04] <MasterDuke> isn't that a pokemon?

[16:07] *** MasterDuke left
[16:16] <timotimo> nine: https://github.com/timo/moarperf/releases/download/untagged-4d7ddf784884848bf4fa/MoarPerf-.glibc2.14-x86_64.AppImage - if you would like to give it another try

[16:18] *** MasterDuke joined
[16:23] <nine> up and running :)

[16:24] <timotimo> damn

[16:24] <timotimo> that's pretty cool

[16:25] <timotimo> i'm glad i spent the last three days agonizingly slowly inching towards this

[16:26] <timotimo> now it has to be made plug-and-play for arbitrary raku modules / apps

[16:27] <timotimo> and, well, rakudo itself without any special added stuff i guess :)

[16:27] <MasterDuke> cool

[16:27] <timotimo> https://github.com/timo/moarperf/releases/download/untagged-4d7ddf784884848bf4fa/MoarPerf-.glibc2.14-x86_64.AppImage - did you grab the link from backlog, MasterDuke?

[16:28] <MasterDuke> i hadn't yet, thanks

[16:31] <MasterDuke> nice, now i can run moarperf even when i've currently broken my rakudo (like right now, when my moarvm is on my MVMSpeshCandidate_as_REPR branch)

[16:31] <timotimo> heck yeah

[17:09] *** patrickb joined
[18:41] *** patrickb left
[19:00] *** AlexDaniel joined
[19:00] *** AlexDaniel left
[19:00] *** AlexDaniel joined
[19:02] *** Altai-man joined
[19:05] *** sena_kun left
[19:54] <Geth> ¬¶ rakudo/rakuast: e0ced0d21b | (Elizabeth Mattijsen)++ | 3 files

[19:54] <Geth> ¬¶ rakudo/rakuast: Fixup Signature and Parameter deparsing

[19:54] <Geth> ¬¶ rakudo/rakuast: 

[19:54] <Geth> ¬¶ rakudo/rakuast: Plus some tweaks in other places

[19:54] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/e0ced0d21b

[19:54] <Geth> ¬¶ rakudo/rakuast: 0cd07cf00f | (Elizabeth Mattijsen)++ | t/12-rakuast/signature.t

[19:54] <Geth> ¬¶ rakudo/rakuast: Adapted tests for Signature/Parameter deparsing

[19:54] <Geth> ¬¶ rakudo/rakuast: 

[19:55] <Geth> ¬¶ rakudo/rakuast: Got stuck on handling slurpy, will revisit tomorrow

[19:55] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/0cd07cf00f

[19:55] *** squashable6 left
[19:56] *** squashable6 joined
[19:58] <lizmat> afk&

[19:59] *** squashable6 left
[20:01] *** squashable6 joined
[20:06] *** patrickb joined
[20:16] *** patrickb left
[21:29] *** Altai-man left
