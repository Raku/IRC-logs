[01:47] *** frost-lab joined
[01:54] <vrurg_> .

[01:54] <tellable6> 2020-10-20T18:56:54Z #raku-dev <tbrowder> vrurg requested changes have been made

[01:54] *** vrurg_ is now known as vrurg

[01:55] <vrurg> tbrowder: I saw it merged by lizmat. So, it's probably too late to look into. :)

[01:56] <tbrowder> roger, thnx

[01:57] *** Kaiepi left
[02:39] *** Kaiepi joined
[02:39] *** Kaiepi left
[02:39] *** Kaiepi joined
[04:23] *** MasterDuke left
[07:20] *** sena_kun joined
[07:22] <Geth> Â¦ rakudo: 5a30d6d209 | (Patrick BÃ¶ker)++ | tools/templates/NQP_REVISION

[07:22] <Geth> Â¦ rakudo: Bump NQP (and indirectly MoarVM)

[07:22] <Geth> Â¦ rakudo: 

[07:22] <Geth> Â¦ rakudo: This pulls in a function in moar that allows resetting its STD IO handles.

[07:22] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5a30d6d209

[07:22] <Geth> Â¦ rakudo: 708d0ca61e | (Patrick BÃ¶ker)++ | 6 files

[07:22] <Geth> Â¦ rakudo: Don't die when using stdout with `rakuw.exe`

[07:22] <Geth> Â¦ rakudo: 

[07:22] <Geth> Â¦ rakudo: On Windows executables that use the "windows"-subsystem don't have their

[07:22] <Geth> Â¦ rakudo: STD handles connected. Trying to write to them (Yes, that includes `say`.)

[07:22] <Geth> Â¦ rakudo: will cause the process to immediately abort. Fix this by fixing up the

[07:22] <Geth> Â¦ rakudo: STD handles by connecting them to the `NUL:` device. (That's comparable to

[07:22] <Geth> Â¦ rakudo: `/dev/null` on POSIX systems.)

[07:22] <Geth> Â¦ rakudo: 

[07:23] <Geth> Â¦ rakudo: Fixes #3961

[07:23] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/708d0ca61e

[07:23] <linkable6> RAKUDO#3961 [closed]: https://github.com/rakudo/rakudo/issues/3961 Windows `rakudow.exe` dies when writing to STDOUT/STDERR

[07:23] <Geth> Â¦ rakudo: b30fa3a715 | (Patrick BÃ¶ker)++ (committed using GitHub Web editor) | 7 files

[07:23] <Geth> Â¦ rakudo: Merge pull request #3968 from patrickbkr/subsys-win-no-die-on-stdout

[07:23] <Geth> Â¦ rakudo: 

[07:23] <Geth> Â¦ rakudo: Don't die when using stdout with `rakuw.exe`

[07:23] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b30fa3a715

[07:31] *** sena_kun left
[07:54] *** sena_kun joined
[09:10] *** frost-lab left
[10:25] *** sena_kun left
[10:30] *** sena_kun joined
[11:00] <releasable6> Next release in â‰ˆ3 days and â‰ˆ7 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[12:19] *** domidumont joined
[13:17] <tbrowder> lizmat: note i've removed File::Copy from cpan, and it should never have been there in the first place (my bad). it's experimental.

[13:22] <lizmat> tbrowder: no worries

[14:40] <Kaiepi> heyooooooo https://openjdk.java.net/jeps/380

[14:40] <Kaiepi> java 16's getting unix socket support!

[14:53] *** domidumont left
[15:02] <[Tux]> Working at $home sometimes has serious impact on timing. When I looked at the "current" process load, teams was highest (I'm not surprised), but several browser tabs required for $work

[15:02] <[Tux]> also consume serious resources and I cannot close them as they are part of $work :(

[15:03] <[Tux]> I killed teams as timing hit 2.2 :(

[15:06] <[Tux]> csv-test-xs-20      0.390 -  0.398

[15:06] <[Tux]> csv-ip5xs           0.832 -  0.843

[15:06] <[Tux]> test-t --race       0.856 -  0.866

[15:06] <[Tux]> test-t              1.955 -  2.022

[15:06] <[Tux]> csv-ip5xs-20        8.336 -  8.417

[15:07] <[Tux]> test                8.044 -  8.514

[15:07] <[Tux]> test-t-20 --race    9.564 -  9.662

[15:07] <[Tux]> csv-parser         26.241 - 26.586

[15:07] <[Tux]> test-t-20          33.572 - 36.47

[15:07] * [Tux] does like the output format of Â«raku --versionÂ»

[15:07] <codesections> [Tux]: agreed.  I've sometimes gone as far as to expel chat/work apps from my main computer altogether and instead run them from a laptop (and either use them directly on the laptop or via a remote X connection)

[15:29] <[Tux]> I cannot move them apart, as it involves file sharing. Besides that, my laptop is (very) busy with other stuff

[16:29] <timotimo> renice the hell out of 'em :)

[17:13] *** domidumont joined
[17:14] *** MasterDuke joined
[17:16] *** raku-bridge joined
[17:16] *** raku-bridge left
[17:16] *** raku-bridge joined
[17:26] *** Kaeipi joined
[17:26] *** Kaiepi left
[17:29] *** Kaeipi left
[17:29] *** Kaeipi joined
[17:31] *** domidumont left
[17:37] <tbrowder> question: would i be allowed to use any of the .circleci, .travis.yml, and azure pipeline test harnesses for my own public modules?

[17:38] <codesections> don't most of those have free tiers for open source projects anyway?

[17:41] <lizmat> that was my impression as well ?

[18:46] *** sena_kun left
[18:49] <tbrowder> yes, but i thought you may still have to have an account with them. i'll try adding them first and see if the wheel sqeaks!

[18:54] <timotimo> right, just adding the file doesn't do anything, you'll also need to hook up github and the service in question so one notifies the other

[18:57] *** MasterDuke left
[19:06] <tbrowder> yep, a little more setup but i'll keep plugging...

[19:57] *** MasterDuke joined
[22:33] *** maggotbrain left
[22:35] *** maggotbrain joined
[22:48] *** MasterDuke left
[23:02] <Kaeipi> when i was first getting started with the IP6NS grant, one of the things i did was make ProtocolFamily/SocketType/ProtocolType's values independent of backend values for them, since i couldn't think of a good way to get those on the jvm

[23:03] <Kaeipi> they became an issue again while working on problem-solving #111, since ProtocolType's values are specced and get involved with WKS DNS queries, unlike the others

[23:03] <Kaeipi> i think it's time i get those sorted out...

