[00:04] *** |Tux| left
[00:30] *** atta joined
[00:32] *** atta left
[00:42] *** sena_kun left
[00:56] *** sena_kun joined
[01:09] *** |Tux| joined
[01:47] <AlexDaniel> moritz: I don't want to be running in circles later when I'd need to tweak something

[01:50] <AlexDaniel> jnthn: then what about this (it's an old channel, and TimToady doesn't have the same privs on #perl6 anyway): flags #perl6-dev TimToady -F

[01:50] <AlexDaniel> jnthn: also please let me know who should have +F on #raku and #raku-dev, currently it's just me and mst

[01:51] <AlexDaniel> well, I guess you should :

[01:51] <AlexDaniel> :)

[01:52] <AlexDaniel> done

[01:57] <Geth_> ¦ nqp/master: 6 commits pushed by (Daniel Green)++, MasterDuke17++

[01:57] <Geth_> ¦ nqp/master: 69d7c5ad85 | Put variable declaration inside relevant #ifndef

[01:57] <Geth_> ¦ nqp/master: bb638b13c6 | Give variable default value

[01:57] <Geth_> ¦ nqp/master: c2f0111c56 | Put variable declarations inside relevant #ifndef

[01:57] <Geth_> ¦ nqp/master: 10106367fd | Set variables inside relevant #ifndef

[01:57] <Geth_> ¦ nqp/master: b456be6e4d | Put variable declaration inside relevant #ifdef

[01:57] <Geth_> ¦ nqp/master: 7c2e42895a | Merge pull request #593 from MasterDuke17/fix_compiler_warnings_in_main_runner

[01:57] <Geth_> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/d69855343c8d...7c2e42895a33

[02:22] <AlexDaniel> interesting, there does not seem to be a real limit for org invitations

[02:23] <AlexDaniel> let's see if it gets me banned :)

[02:25] <vrurg> "I'd jump from a cliff. Let's see if I survive..."?? ;)

[02:26] <AlexDaniel> vrurg: it's an alright sacrifice, if I survive everyone gets invited to Raku org :

[02:26] <AlexDaniel> :)

[02:26] <AlexDaniel> without me having to run it every day for a week

[02:27] *** |Tux| left
[02:27] <vrurg> I was and have accepted already.

[02:27] <vrurg> BTW, shall I migrate nqp-configure meanwhile?

[02:28] <AlexDaniel> no

[02:28] <AlexDaniel> well… let's wait a bit

[02:28] <AlexDaniel> “302 pending invitations”

[02:29] <AlexDaniel> vrurg: one issue we've seen with the too early doc repo move was that all assignments were gone

[02:29] <AlexDaniel> because you can't be assigned unless you're part of the org

[02:29] <AlexDaniel> … or have the privileges in some other way, but you get the point

[02:29] <vrurg> Oh, sure...

[02:30] <AlexDaniel> so ideally we should wait for people to accept the invites, and then we can move

[02:30] <vrurg> Ok, can wait for until most people accepts the invitations and other things are settled down.

[02:30] <AlexDaniel> of course not everyone will accept them in a timely manner, but let's at least wait a few days…

[02:30] <vrurg> For a month or two if necessary.

[02:30] *** |Tux| joined
[02:30] <AlexDaniel> well, I just want the most active users to accept :)

[02:31] <vrurg> Best if it would be possible to determine that unaccepted ones are the most long inactive ones.

[02:31] <vrurg> Ok, we think almost synchronously. ;)

[02:31] <AlexDaniel> vrurg: btw can you check https://github.com/Raku/p6rt/issues?q=is%3Aissue+sort%3Aupdated-desc+is%3Aclosed ?

[02:32] <AlexDaniel> see if things make sense to you

[02:32] <AlexDaniel> though I guess you didn't use RT much

[02:32] <vrurg> More like I never used whatsoever.

[02:33] <vrurg> I joined when GH had already like 800 open issues.

[02:33] * vrurg is half-away committing a fix for attribute accessors.

[02:33] <AlexDaniel> alright :)

[02:33] <AlexDaniel> squashable6: status

[02:33] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 1 day and ≈1 hour (2020-01-04 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[02:34] <AlexDaniel> mmm there's no good way to cancel a squashathon :D

[02:34] <AlexDaniel> if I set the date to 2020-01-01 it'll become active…

[02:36] *** travis-ci joined
[02:36] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Split Supply.unique into 2 multi's

[02:36] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/631648623 https://github.com/rakudo/rakudo/compare/83423ea01d6f...d38cfef3899b

[02:36] *** travis-ci left
[02:42] *** sena_kun left
[02:50] <Geth_> ¦ roast: rbt++ created pull request #609: Enable nanosecond times

[02:50] <Geth_> ¦ roast: review: https://github.com/perl6/roast/pull/609

[02:51] <Geth_> ¦ rakudo: rbt++ created pull request #3396: Allow DateTime to nanoseconds.

[02:51] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3396

[02:52] <Geth_> ¦ rakudo: vrurg++ created pull request #3397: Prioritize class attributes/method over those from roles

[02:52] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3397

[02:54] <Geth_> ¦ rakudo: rbt++ created pull request #3398: Correct URL in readme

[02:54] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3398

[02:57] <Geth_> ¦ roast: vrurg++ created pull request #610: Add tests for class stuff prioritzing over role's

[02:57] <Geth_> ¦ roast: review: https://github.com/perl6/roast/pull/610

[02:58] *** sena_kun joined
[03:14] <vrurg> Appveyor is broken because can't fetch strawberry... :(

[03:22] <Geth_> ¦ rakudo: 2463777268 | (Rod Taylor)++ | README.md

[03:22] <Geth_> ¦ rakudo: Correct URL in readme.

[03:22] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2463777268

[03:22] <Geth_> ¦ rakudo: f00a9fc99e | (Vadim Belman)++ (committed using GitHub Web editor) | README.md

[03:22] <Geth_> ¦ rakudo: Merge pull request #3398 from rbt/f.readme

[03:22] <Geth_> ¦ rakudo: 

[03:22] <Geth_> ¦ rakudo: Correct URL in readme

[03:22] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f00a9fc99e

[03:41] <toddr> So there are about 300 migrated RT issues you guys can look at at here https://github.com/Raku/p6rt/issues

[03:42] <toddr> If you're ok with them, I'm ready to migrate everything. It should only take a couple of hours and then robert will finalize the re-directs.

[03:54] <AlexDaniel> toddr: so, what about labels? :)

[03:54] <AlexDaniel> https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-01-01#l40

[03:54] <toddr> I'm happy to label based on some trait in the ticket.

[03:55] <toddr> what is it you want labeled?

[03:55] <AlexDaniel> toddr: I mean the [ ] in ticket titles

[03:55] <toddr> I didn't find extensive use of labels like perl5 did

[03:56] <toddr> it's actually easier to migrate them then search for [BUG] and label them all if everything is in the title

[03:56] <toddr> but lemme look at the titles. how many labels are we talking about?

[03:57] <AlexDaniel> if you look here you'll see some numbers: https://web.archive.org/web/20181121184441/https://fail.rakudo.party/

[03:58] <toddr> and all of these are in the subject of the RT?

[03:58] <toddr> that should be easily done.

[03:58] <toddr> do you want me to take it out of the subject if I'm labeling the tickets?

[04:05] <AlexDaniel> toddr: yes and yes

[04:06] <AlexDaniel> if it's not too hard :

[04:06] <AlexDaniel> :)

[04:12] <toddr> ok the biggest problem will be getting the full label list. gimme a few

[04:15] <toddr> How should the labels be?  PATCH, patch, Patch ?

[04:16] <toddr> you can rename them later but better to do it right from the start

[04:22] <AlexDaniel> toddr: all lowercase is fine

[04:22] <toddr> ok

[04:24] <AlexDaniel> toddr: this is a weird ticket: https://github.com/Raku/p6rt/issues/248

[04:24] <AlexDaniel> I wonder what was there originally

[04:24] <toddr> click through and look?

[04:25] <AlexDaniel> that's a new website, not RT

[04:25] <toddr> https://rt.perl.org/Public/Bug/Display.html?id=57986

[04:25] <AlexDaniel> ah, there

[04:25] <toddr> GIGO :D

[04:25] <AlexDaniel> ok, well, then it's correct :)

[04:25] <AlexDaniel> toddr: thank you for working on this

[04:26] <toddr> np

[04:42] *** sena_kun left
[04:57] *** sena_kun joined
[05:57] *** evalable6 left
[06:00] *** evalable6 joined
[06:42] *** sena_kun left
[06:51] *** travis-ci joined
[06:51] <travis-ci> Rakudo build passed. Vadim Belman 'Merge pull request #3398 from rbt/f.readme

[06:51] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/631733085 https://github.com/rakudo/rakudo/compare/d38cfef3899b...f00a9fc99e3d

[06:51] *** travis-ci left
[06:55] *** Xliff left
[06:57] *** sena_kun joined
[07:20] *** Tux__ joined
[07:23] *** [TuxCM] left
[07:35] *** [TuxCM] joined
[07:36] *** Tux__ left
[08:11] *** sena_kun left
[08:12] *** sena_kun joined
[08:24] *** [TuxCM] left
[08:42] *** sena_kun left
[08:55] *** sena_kun joined
[10:04] <lizmat> Files=1294, Tests=109633, 211 wallclock secs (28.58 usr  8.22 sys + 2966.97 cusr 272.60 csys = 3276.37 CPU)

[10:15] *** timotimo left
[10:24] <bartolin> .tell vrurg If you have some spare minutes, maybe you could take a quick look at https://github.com/rakudo/rakudo/issues/3399? I'm still searching for a fix, but I'm mostly in the dark. Maybe you have a quick idea and can give me a pointer in what direction to look.

[10:24] <tellable6> bartolin, I'll pass your message to vrurg

[10:27] *** |Tux| left
[10:34] <Geth_> ¦ rakudo: cde92b4974 | (Elizabeth Mattijsen)++ | 3 files

[10:34] <Geth_> ¦ rakudo: Modernize extension of snapper.pm6

[10:34] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cde92b4974

[10:35] *** sena_kun left
[10:36] <Geth_> ¦ rakudo: 09f349a804 | (Elizabeth Mattijsen)++ | 3 files

[10:36] <Geth_> ¦ rakudo: Modernize extension of Telemetry.pm6

[10:36] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/09f349a804

[10:39] *** bartolin left
[10:39] *** camelia left
[10:42] <Geth_> ¦ rakudo: 13e3419905 | (Elizabeth Mattijsen)++ | 3 files

[10:42] <Geth_> ¦ rakudo: Modernize extension of experimental.pm6

[10:42] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/13e3419905

[10:47] *** bartolin joined
[10:47] <Geth_> ¦ rakudo: 59e70e950b | (Elizabeth Mattijsen)++ | 3 files

[10:47] <Geth_> ¦ rakudo: Modernize extension of MoarVM/Profiler.pm6

[10:47] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/59e70e950b

[10:48] <Geth_> ¦ rakudo: 72bbc5832b | (Elizabeth Mattijsen)++ | 2 files

[10:48] <Geth_> ¦ rakudo: Modernize extension of Spesh.pm6

[10:48] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/72bbc5832b

[10:49] *** camelia joined
[10:50] *** sena_kun joined
[10:56] <Geth_> ¦ rakudo: e0b29370f6 | (Elizabeth Mattijsen)++ | 3 files

[10:56] <Geth_> ¦ rakudo: Modernize extension of newline.pm6

[10:56] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e0b29370f6

[11:02] <Geth_> ¦ rakudo: 5197952658 | (Elizabeth Mattijsen)++ | 3 files

[11:02] <Geth_> ¦ rakudo: Modernize extension of Test.pm6

[11:02] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5197952658

[11:03] <Geth_> ¦ problem-solving: lizmat assigned to jnthn Issue Generalization of the "settings" concept https://github.com/perl6/problem-solving/issues/143

[11:07] *** |Tux| joined
[11:11] <Geth_> ¦ rakudo: 1e316db362 | (Elizabeth Mattijsen)++ | 3 files

[11:11] <Geth_> ¦ rakudo: Modernize extension of CompUnit/Repository/Staging.pm6

[11:11] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1e316db362

[11:17] <Geth_> ¦ rakudo: 8a0742eeb3 | (Elizabeth Mattijsen)++ | 3 files

[11:17] <Geth_> ¦ rakudo: Modernize extension of Pod/To/Text.pm6

[11:17] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8a0742eeb3

[11:37] *** Kaiepi joined
[12:24] <|Tux|> Rakudo version 2019.11-338-g8a0742eeb - MoarVM version 2019.11-103-g2ac1fa27f

[12:24] <|Tux|> csv-test-xs-20      0.418 -  0.431

[12:24] <|Tux|> csv-ip5xs           0.762 -  0.770

[12:24] <|Tux|> test-t --race       0.797 -  0.810

[12:24] <|Tux|> test-t              1.766 -  1.826

[12:24] <|Tux|> csv-ip5xs-20        6.439 -  6.673

[12:24] <|Tux|> test                7.348 -  7.698

[12:24] <|Tux|> test-t-20 --race    9.145 -  9.675

[12:24] <|Tux|> test-t-20          30.617 - 31.208

[12:24] <|Tux|> csv-parser         38.884 - 40.324

[12:42] *** sena_kun left
[12:56] *** sena_kun joined
[13:01] <lizmat> nine: please see https://gist.github.com/lizmat/cbd2141b4f061bb6e9c0b880058fdc3f

[13:01] <lizmat> isn't it strange that NativeCall/Types occurs twice in there ?

[13:02] <lizmat> the only real difference appears to be the source-line-number ?

[13:05] <nine> And now I know why I've never liked having source-line-number in the dependency specification. Time to throw it out

[13:06] <nine> Where do we usually get the current line number from for exceptions thrown in compilation?

[13:08] <lizmat> out of the Match object, I think ?

[13:08] <nine> Looks like we usually declare a $*LINE_NO

[13:10] <lizmat> nine: so you're saying this is a generic issue, and not related to my renaming extensions ?

[13:12] <nine> yes

[13:12] <nine> Can't see how that would cause any problems

[13:23] *** lucasb joined
[13:28] <lizmat> hmmm... indeed: in NativeCall.pm6, NativeCall:Types is use from line 4, in NativeCall/Compiler/* it is on line 3

[13:28] <lizmat> so what does it mean to have these two entries?  That it is trying to load the same precomp file for every different line number ?

[13:28] <lizmat> and then finding out it is loaded already ?

[13:29] <lizmat> hmm... the SHA's look identical though ?

[13:33] *** Xliff joined
[13:37] <nine> It will tell the store to load the unit a second time but the store will find it in the cache

[13:40] <lizmat> yeah, so extra, unnnecessary work

[13:40] <lizmat> changing CompUnit::DependencySpecification.perl now

[13:44] <lizmat> nine: should version|auth|api-matcher be part of this string or not ?

[13:44] <lizmat> feels to me it shouldn't either ?

[13:44] <lizmat> or am I misunderstanding ?

[13:45] <lizmat> the only thing really that's needed, is the short-name and the from ?

[13:46] <nine> Those definitely must be there! They The whole CompUnit::DependencySpecification part is used to re-check the dependency after the repository's contents changed. This mechanism keeps us from re-compiling everything after every single module installation

[13:51] <lizmat> ok

[13:52] <lizmat> spectesting a change now

[14:00] <Geth_> ¦ rakudo: bda8dcb00a | (Elizabeth Mattijsen)++ | 2 files

[14:00] <Geth_> ¦ rakudo: Don't use .perl in serialization ID creation

[14:00] <Geth_> ¦ rakudo: 

[14:00] <Geth_> ¦ rakudo: The source-line of 'use' statements is part of .perl output of

[14:00] <Geth_> ¦ rakudo: CompUnit::DependencySpecification, which was used to create serialization

[14:00] <Geth_> ¦ rakudo: ID's stored in .precomp files.  This adds a "serialization-id" method that

[14:00] <Geth_> ¦ rakudo: creates a shorter, but still readable string that is actually valid Raku

[14:00] <Geth_> ¦ rakudo: code, but does not contain the source-line number.  This should, possibly

[14:00] <Geth_> ¦ rakudo: drastically, reduce the number of attempts to load the same module.

[14:00] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bda8dcb00a

[14:01] <lizmat> nine: ^^

[14:10] <lizmat> it also looks like this change makes the NativeCall.pm6 -> .rakumod test pass

[14:13] <nine> lizmat: I just finished a patch that removes the source-line-number as it should never have been part of the DependencySpecification in the first place. It does not specify a dependency after all

[14:13] <lizmat> nine: feels to me I beat you to it ?

[14:14] <nine> Also that string is NOT intended for human consumption. It is solely used as input for EVAL.

[14:14] <lizmat> ok, well, then my patch should also be ok  :-)

[14:15] <lizmat> why EVAL?  

[14:15] <lizmat> why not some JSON like structure ?

[14:15] <nine> Please revert that patch. It definitely breaks things

[14:15] <lizmat> it passed make test and make spectest and it fixed the rename issue ?

[14:15] <nine> https://github.com/rakudo/rakudo/commit/bda8dcb00a#diff-fcc9fcf3c8512c8b6191619ae873075bL114

[14:16] <lizmat> my patch produces valid Raku code

[14:17] <lizmat> so the EVAL should work (and does afaics)

[14:18] <lizmat> installing / uninstalling modules also works

[14:19] <nine> Does it work with a DependencySpecification like this? CompUnit::DependencySpecification.new(:short-name<Foo>, :version-matcher(1..5.5), :auth-matcher(/foo.*bar/))

[14:20] <lizmat> aaah... ok

[14:20] <lizmat> no, it wouldn't

[14:20] <lizmat> but your patch would ?

[14:21] <nine> If your rename issue is caused by that doubling of the dependency line, then yes

[14:21] <Geth_> ¦ rakudo: 037affddc2 | (Elizabeth Mattijsen)++ | 2 files

[14:21] <Geth_> ¦ rakudo: Revert "Don't use .perl in serialization ID creation"

[14:21] <Geth_> ¦ rakudo: 

[14:21] <Geth_> ¦ rakudo: This reverts commit bda8dcb00a53d1a194c6886dec37220887dd0f80.

[14:21] <Geth_> ¦ rakudo: 

[14:21] <Geth_> ¦ rakudo: nine has a better solution

[14:21] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/037affddc2

[14:21] <lizmat> I know also see the need for EVAL  :-)

[14:25] <lizmat> perhaps get rid of the source-line completely ?

[14:27] <nine> That's what I do

[14:27] <lizmat> oki  :-)

[14:32] *** AlexDani` joined
[14:34] *** AlexDaniel left
[14:41] *** AlexDani` left
[14:42] *** sena_kun left
[14:58] *** sena_kun joined
[15:07] <vrurg> bartolin: replied in the issue. Though it's not much, unfortunately.

[15:07] <tellable6> hey vrurg, you have a message: https://gist.github.com/8d889a4efe93ff53b3a3fc39837fcafa

[15:09] <bartolin> vrurg: thanks, anyway :)

[15:10] <vrurg> bartolin: I'd try to have a look into it, if get some time. It feels like another problem with JVM strikes back.

[15:33] <nine> lizmat: now that I've finished my fix, and it works and is pretty and whatever, I came across an even better solution, proposed by a certain "niner" back in October: https://github.com/rakudo/rakudo/issues/2022#issuecomment-543177164

[15:41] * vrurg is humbly asking nine: perhaps you'd have time to take care of circular deps too?

[15:43] <Geth_> ¦ rakudo/master: 8 commits pushed by (Vadim Belman)++

[15:43] <Geth_> ¦ rakudo/master: f19e2ee5ec | Add Mu type to a parameter

[15:43] <Geth_> ¦ rakudo/master: 2fc87db1f3 | Provide means for setting role applier classes

[15:43] <Geth_> ¦ rakudo/master: 4c265c7c1d | Replace direct use of RoleToClassAplier with use of Configuration class

[15:43] <Geth_> ¦ rakudo/master: 9f2a2f6acd | Clone attribute object if not instnatiating

[15:43] <Geth_> ¦ rakudo/master: 9357eddbc1 | Add attribute $!composed to Attribute class

[15:43] <Geth_> ¦ rakudo/master: 83d26ddd76 | Add has_multi_candidate method

[15:43] <Geth_> ¦ rakudo/master: 55b51a24a3 | Prioritize class attributes and methods over role's

[15:43] <Geth_> ¦ rakudo/master: 3450a91f39 | Merge pull request #3397 from vrurg/rakudo_3382

[15:43] <Geth_> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/037affddc25a...3450a91f39eb

[15:43] <Geth_> ¦ roast: 92b6ff44c6 | (Vadim Belman)++ | S14-roles/attributes.t

[15:43] <Geth_> ¦ roast: Add tests for class stuff prioritzing over role's

[15:43] <Geth_> ¦ roast: 

[15:43] <Geth_> ¦ roast: Also make typeobjects from a previous test lexically-scoped.

[15:43] <Geth_> ¦ roast: 

[15:43] <Geth_> ¦ roast: In support of rakudo/rakudo#3382 and rakudo/rakudo#3397

[15:43] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/92b6ff44c6

[15:43] <Geth_> ¦ roast: aae83964cd | (Vadim Belman)++ (committed using GitHub Web editor) | S14-roles/attributes.t

[15:43] <Geth_> ¦ roast: Merge pull request #610 from vrurg/rakudo_3382

[15:43] <Geth_> ¦ roast: 

[15:43] <Geth_> ¦ roast: Add tests for class stuff prioritzing over role's

[15:43] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/aae83964cd

[16:24] *** AlexDani` joined
[16:28] <nine> Turns out, we already have the whole infrastructure for reporting the location of errors. So getting that is as simple as adding a CATCH { self.rethrow($/, $_); } to Perl6::World::load_module

[16:29] <nine> With this we get a message like "Could not find Foo in: ... at -e:1"

[16:33] *** patrickb joined
[16:36] *** AlexDani` is now known as AlexDaniel

[16:36] *** AlexDaniel left
[16:36] *** AlexDaniel joined
[16:42] *** sena_kun left
[16:43] <nine> *sigh* this runs into spec test issues. Not because it breaks anything, but because we test error messages for things we don't actually care about.

[16:44] <nine> One tests the JSON exception handler's output for "X::CompUnit::UnsatisfiedDependency" when it would now read "X::CompUnit::UnsatisfiedDependency+{X::Comp}"

[16:44] <nine> The other is a regression test ensuring that we don't report precompilation errors twice. But it only checks for 2 "SORRY" which trips over:

[16:44] <nine> ===SORRY!=== Error while compiling -e

[16:44] <nine> ===SORRY!=== Error while compiling /home/nine/rakudo/t/spec/packages/RT127176/lib/RT127176.pm6 (RT127176)

[16:45] <nine> The thing is: I actually like that structure: it clearly shows that there are two compilation errors. The one in the module and the other in the module's user where compilation trips over not being able to load the module

[16:48] <nine> This way we would actually show the whole chain of users. That does sound very useful to me as in a large code base it's often not obvious why some odd module even gets loaded.

[16:56] *** sena_kun joined
[17:00] *** patrickb left
[17:20] <bartolin> vrurg: just a quick question: shouldn't the result of this nqp::findmethod be returned? https://github.com/rakudo/rakudo/commit/93d0575c7434c0ca84d35521a0b86b939742f451#diff-f748ce334303c5530ecbf80981b24fd2R155

[17:48] <vrurg> bartolin: good catch, of course it should!

[17:49] <vrurg> bartolin: BTW, shall I merge the dispatch:<::> fix?

[17:52] *** AlexDani` joined
[17:53] <bartolin> vrurg: (merge) would be nice!

[17:54] *** AlexDaniel left
[17:59] <Geth_> ¦ rakudo: 5648a4f399 | (Christian Bartolomäus)++ | src/core.c/Mu.pm6

[17:59] <Geth_> ¦ rakudo: Check type before looking for qualified method

[17:59] <Geth_> ¦ rakudo: 

[17:59] <Geth_> ¦ rakudo: This fixes a failing test in S12-methods/qualified.t on the JVM

[17:59] <Geth_> ¦ rakudo: backend. The code in src/vm/moar/spesh-plugins.nqp does a similiar

[17:59] <Geth_> ¦ rakudo: check before calling 'find_method_qualified'.

[17:59] <Geth_> ¦ rakudo: 

[17:59] <Geth_> ¦ rakudo: A somewhat golfed version of the failing test would be:

[17:59] <Geth_> ¦ rakudo: <…commit message has 10 more lines…>

[17:59] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5648a4f399

[17:59] <Geth_> ¦ rakudo: 2a4eb56a33 | (Vadim Belman)++ (committed using GitHub Web editor) | src/core.c/Mu.pm6

[17:59] <Geth_> ¦ rakudo: Merge pull request #3394 from usev6/missing_concretization

[17:59] <Geth_> ¦ rakudo: 

[17:59] <Geth_> ¦ rakudo: Check type before looking for qualified method

[17:59] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2a4eb56a33

[18:00] <toddr> AlexDaniel: This is the list of labels. If you want the colors to be something else, let me know.

[18:00] <tellable6> toddr, I'll pass your message to AlexDaniel

[18:00] <toddr> https://gist.github.com/toddr/9e779e61384a61d0cdd6bea95b34bdd8

[18:02] <Geth_> ¦ rakudo/master: 7 commits pushed by (Vadim Belman)++

[18:02] <Geth_> ¦ rakudo/master: 578602694f | Export packages by user given names

[18:02] <Geth_> ¦ rakudo/master: a5b0357b20 | Merge branch 'master' into problem-solving-142

[18:02] <Geth_> ¦ rakudo/master: ccd35231f7 | Cosmetic addition of spaces

[18:02] <Geth_> ¦ rakudo/master: 794a7b0bbe | Provide $*DECLARAION_NAME for other package-y things

[18:02] <Geth_> ¦ rakudo/master: 097961bc82 | Provide support for importing package-y kind of symbols

[18:02] <Geth_> ¦ rakudo/master: 693411ac44 | Fix incorrect setting of $*DECLARATION_NAME for enums

[18:02] <Geth_> ¦ rakudo/master: 9e64167b60 | Merge pull request #3388 from vrurg/problem-solving-142

[18:02] <Geth_> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/2a4eb56a3303...9e64167b6015

[18:03] <Geth_> ¦ roast/master: 4 commits pushed by (Vadim Belman)++

[18:03] <Geth_> ¦ roast/master: 2a0e9e46e4 | Add tests for importing long-named symbols

[18:03] <Geth_> ¦ roast/master: db4eddf4ae | Cover all variants of exported names

[18:03] <Geth_> ¦ roast/master: 6491cfdc04 | Add tests for enums and subsets

[18:03] <Geth_> ¦ roast/master: f229c42b21 | Merge pull request #608 from vrurg/problem-solving-142

[18:03] <Geth_> ¦ roast/master: review: https://github.com/perl6/roast/compare/aae83964cd53...f229c42b2164

[18:06] *** patrickb joined
[18:07] <patrickb> rba: I have created binary builds  for Linux, MacOS and Windows for the rakudo 2019.11 release. They can be downloaded here: https://patszim.volans.uberspace.de/patcloud/index.php/s/qmkreEJLQDZcjbf

[18:07] <patrickb> .tell rba I have created binary builds  for Linux, MacOS and Windows for the rakudo 2019.11 release. They can be downloaded here: https://patszim.volans.uberspace.de/patcloud/index.php/s/qmkreEJLQDZcjbf

[18:07] <tellable6> patrickb, I'll pass your message to rba

[18:08] <patrickb> .tell rba You can put them on https://stage-rakudo.rakulang.site/

[18:08] <tellable6> patrickb, I'll pass your message to rba

[18:09] <patrickb> .tell rba That's the last missing bit that was standing in the way of the new rakudo.org website as far as I know.

[18:09] <tellable6> patrickb, I'll pass your message to rba

[18:10] <patrickb> .tell rba Some testing of those builds would be welcome of course.

[18:10] <tellable6> patrickb, I'll pass your message to rba

[18:13] <Geth_> ¦ rakudo: d9781071aa | (Patrick Böker)++ | docs/release-guide-binary.md

[18:13] <Geth_> ¦ rakudo: Minor changes to the binary release guide commands

[18:13] <Geth_> ¦ rakudo: 

[18:13] <Geth_> ¦ rakudo: - don't include owners and groups in tar archives

[18:13] <Geth_> ¦ rakudo: - make curl follow forwards (rakudo.org is currently forwarding downloads

[18:13] <Geth_> ¦ rakudo: to github)

[18:13] <Geth_> ¦ rakudo: - use `raku` instead of `perl6`

[18:13] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d9781071aa

[18:19] <vrurg> .ask lizmat Could you, please, have a brief look at https://github.com/rakudo/rakudo/pull/3396? I like it but it's more of your area than mine.

[18:19] <tellable6> vrurg, I'll pass your message to lizmat

[18:24] <lizmat> vrurg: will look at it later tonight

[18:27] <vrurg> lizmat: I can make it shorter: do you mind increasing seconds precision in DateTime to 12 digits (pico-seconds)? If no immediate answer then it can surely wait.

[18:28] <lizmat> without changing the default formatter output?  yeah, I could very well live with that   :-)

[18:29] <vrurg> Sure, I pulled the formatter back as I didn't like it too. Ok, I give it the green light.

[18:42] *** sena_kun left
[18:44] <vrurg> .tell Xliff BTW, you might be interested in this: https://github.com/rakudo/rakudo/pull/3397/files#diff-44859f5b2101dbbf9d1bfbb0a4b88429R122 and respectively this: https://github.com/rakudo/rakudo/pull/3397/files#diff-b7ee63ad54aa5d6371a509fc4efb734bR30

[18:44] <tellable6> vrurg, I'll pass your message to Xliff

[18:58] *** sena_kun joined
[19:22] <nine> Ha! The test for the JSON exception handler is not only overly specific, but also not specific enough. While it tests the generated JSON output for certain contents, it doesn't test if the output actually is valid JSON. Thus it misses the "}Saw 1 occurrence of deprecated code." at the end

[19:23] <nine> Turns out, we simply cannot deprecate the PERL6_EXCEPTIONS_HANDLER environment variable, as that is covered by 6.d-errata tests.

[19:37] <nine> Now the hardest part is: how can we properly test JSON output for real in roast? I'm very tempted to use Rakudo::Internals::JSON, but that's obviously LTA

[19:46] <Geth_> ¦ rakudo: d406d834de | (Elizabeth Mattijsen)++ | src/core.c/Mu.pm6

[19:46] <Geth_> ¦ rakudo: Make sure Mu.raku maintains containerness of invocant

[19:46] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d406d834de

[19:52] <lizmat> nine: using "eq"   :-)

[19:53] <Geth_> ¦ rakudo: 62bd2743f9 | (Elizabeth Mattijsen)++ | 45 files

[19:53] <Geth_> ¦ rakudo: Use .raku instead of .perl in the setting

[19:53] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/62bd2743f9

[19:59] <dogbert11> lizmat: is t/spec/S32-num/stress.t supposed to fail some tests. I'm not sure I understood your answer the other day :)

[20:00] <lizmat> I've not seen that fail for many months

[20:00] <lizmat> and I run many spectests a day

[20:00] <lizmat> e.g. for every commit I did today

[20:01] <dogbert11> but isn't that file part of 'make stresstest'

[20:01] <dogbert11> so perhaps it's not run as often

[20:02] <dogbert11> not ok 94 - parsed literal == val()   [.73142176224725044386e235]

[20:02] <lizmat> aaahhhh make stresstest

[20:02] <lizmat> ok

[20:03] <lizmat> lemme check in a few minutes

[20:03] <dogbert11> ++lizmat

[20:15] <nine> lizmat: then we're back to overly specific :)

[20:17] <nine> I could copy&paste the JSON::Tiny grammar: https://modules.raku.org/dist/JSON::Tiny:cpan:MORITZ/lib/JSON/Tiny/Grammar.pm

[20:17] <Geth_> ¦ rakudo: 6bf6d34701 | (Elizabeth Mattijsen)++ | src/core.c/Mu.pm6

[20:17] <Geth_> ¦ rakudo: Oops, we need to allow Mu for the invocant

[20:17] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6bf6d34701

[20:18] <lizmat> nine: yeah, it wouldn't need to be fast  :-)

[20:19] <Geth_> ¦ rakudo: e4efccc6c1 | (Elizabeth Mattijsen)++ | 6 files

[20:19] <Geth_> ¦ rakudo: Change all references of "perlseen" to "rakuseen"

[20:19] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e4efccc6c1

[20:24] <lizmat> .ask moritz I thought old ircloge.perlgeek links would be redirected to colabti?

[20:24] <tellable6> lizmat, I'll pass your message to moritz

[20:24] <lizmat> e.g. https://irclog.perlgeek.de/perl6-dev/2017-05-15#i_14585448

[20:24] <lizmat> or is this something rba should be made aware of ?

[20:27] <nine> It's actually not _that_ bad: :err({ JSON::Tiny::Grammar.parse($_)<value><object><pairlist><pair>[0]<value><object><pairlist><pair>.first(*<string><str> eq 'specification')<value><string><str>.Str eq 'FakeModuleRT129810'; }),

[20:42] *** sena_kun left
[20:56] *** sena_kun joined
[21:11] *** AlexDani` left
[21:11] *** AlexDani` joined
[21:13] <Geth_> ¦ roast: 91fe5d9eb6 | (Stefan Seifert)++ | S10-packages/precompilation.t

[21:13] <Geth_> ¦ roast: Fix overly specific test for precompilation error messages

[21:13] <Geth_> ¦ roast: 

[21:13] <Geth_> ¦ roast: The test failed when 2 compilation errors were reported, not just when the same

[21:13] <Geth_> ¦ roast: error was reported twice.

[21:13] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/91fe5d9eb6

[21:13] <Geth_> ¦ roast: 379b99b33e | (Stefan Seifert)++ | S04-exceptions/exceptions-alternatives.t

[21:13] <Geth_> ¦ roast: Fix test for JSON exception output of module load failure

[21:13] <Geth_> ¦ roast: 

[21:13] <Geth_> ¦ roast: The test was overly specific as it tested the serialized JSON string for a

[21:13] <Geth_> ¦ roast: specific class name which fails as soon as the exception gets some role mixed

[21:13] <Geth_> ¦ roast: in.

[21:13] <Geth_> ¦ roast: The test was also underly specific in that it didn't catch a deprecation

[21:13] <Geth_> ¦ roast: message attached to the JSON output.

[21:13] <Geth_> ¦ roast: Fix by using a real JSON parser.

[21:13] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/379b99b33e

[21:13] <Geth_> ¦ roast/6.d-errata: 2b3f74e53c | (Stefan Seifert)++ | S10-packages/precompilation.t

[21:13] <Geth_> ¦ roast/6.d-errata: Fix overly specific test for precompilation error messages

[21:13] <Geth_> ¦ roast/6.d-errata: 

[21:13] <Geth_> ¦ roast/6.d-errata: The test failed when 2 compilation errors were reported, not just when the same

[21:13] <Geth_> ¦ roast/6.d-errata: error was reported twice.

[21:13] <Geth_> ¦ roast/6.d-errata: review: https://github.com/perl6/roast/commit/2b3f74e53c

[21:13] <Geth_> ¦ roast/6.d-errata: 38d56c968e | (Stefan Seifert)++ | S04-exceptions/exceptions-alternatives.t

[21:13] <Geth_> ¦ roast/6.d-errata: Fix test for JSON exception output of module load failure

[21:13] <Geth_> ¦ roast/6.d-errata: 

[21:13] <Geth_> ¦ roast/6.d-errata: The test was overly specific as it tested the serialized JSON string for a

[21:14] <Geth_> ¦ roast/6.d-errata: specific class name which fails as soon as the exception gets some role mixed

[21:14] <Geth_> ¦ roast/6.d-errata: in.

[21:14] <Geth_> ¦ roast/6.d-errata: The test was also underly specific in that it didn't catch a deprecation

[21:14] <Geth_> ¦ roast/6.d-errata: message attached to the JSON output.

[21:14] <Geth_> ¦ roast/6.d-errata: Fix by using a real JSON parser.

[21:14] <Geth_> ¦ roast/6.d-errata: review: https://github.com/perl6/roast/commit/38d56c968e

[21:18] <Geth_> ¦ rakudo: 6f527cea9a | (Stefan Seifert)++ | 3 files

[21:18] <Geth_> ¦ rakudo: Remove source-line-number from CompUnit::DependencySpecification

[21:18] <Geth_> ¦ rakudo: 

[21:18] <Geth_> ¦ rakudo: The source-line-number was only used for exception messages and should never

[21:18] <Geth_> ¦ rakudo: have been in the DependencySpecification object as it doesn't specify a

[21:18] <Geth_> ¦ rakudo: dependency. It also led to duplicated dependency lines in precomp files as

[21:18] <Geth_> ¦ rakudo: the dependencies are deduplicated by the .perl output of the

[21:18] <Geth_> ¦ rakudo: DependencySpecification object.

[21:18] <Geth_> ¦ rakudo: 

[21:18] <Geth_> ¦ rakudo: Instead, use the existing infrastructure for adding source location information

[21:18] <Geth_> ¦ rakudo: to exceptions.

[21:18] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6f527cea9a

[21:18] <Geth_> ¦ rakudo: b54d83b8b5 | (Stefan Seifert)++ | src/core.c/Exception.pm6

[21:18] <Geth_> ¦ rakudo: Revert deprecation of PERL6_EXCEPTIONS_HANDLER

[21:18] <Geth_> ¦ rakudo: 

[21:18] <Geth_> ¦ rakudo: The PERL6_EXCEPTIONS_HANDLER environment variable is actually part of the 6.d

[21:18] <Geth_> ¦ rakudo: spec, so we cannot remove it. Further the deprecation message went into the same

[21:18] <Geth_> ¦ rakudo: stream as the supposedly machine readable output, potentially disrupting tools

[21:18] <Geth_> ¦ rakudo: that this output was meant for.

[21:18] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b54d83b8b5

[21:40] <nine> lizmat: ^^^

[21:40] *** AlexDani` is now known as AlexDaniel

[21:40] *** AlexDaniel left
[21:40] *** AlexDaniel joined
[21:43] <lizmat> whee!  :-)

[21:53] <AlexDaniel> lizmat: there's no simple mapping from perlgeek logs to colabti

[21:53] <tellable6> 2020-01-02T18:00:06Z #raku-dev <toddr> AlexDaniel: This is the list of labels. If you want the colors to be something else, let me know.

[21:53] <AlexDaniel> lizmat: it used to be done through a redirect service hosted by zoffix

[21:53] <AlexDaniel> lizmat: that went down at some point

[21:54] <lizmat> indeed... but the underlying translation table is also lost ?

[21:54] <lizmat> :-(

[21:54] <AlexDaniel> no, it's somewhere

[21:54] <lizmat> that would be meh

[21:54] <AlexDaniel> I probably have it

[21:54] <lizmat> ok

[21:54] <lizmat> need to be afk atm, I'll be back later&

[21:54] <AlexDaniel> but yeah we do need to bring it back it life

[22:17] <toddr> I'm doing a full import to p6rt so you guys can see what it looks like at this point

[22:17] <toddr> 1/3 done.

[22:26] <patrickb> .tell rba The stage-rakudo.rakulang.site/dl -> github redirect seems to be active again. Can you disable that (for the staging website only) again?

[22:26] <tellable6> patrickb, I'll pass your message to rba

[22:41] *** sena_kun left
[22:55] *** sena_kun joined
[23:07] <Geth_> ¦ rakudo: b7888d79c8 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/RoleToClassApplier.nqp

[23:07] <Geth_> ¦ rakudo: Two more cases of .perl -> .raku

[23:07] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b7888d79c8

[23:07] <AlexDaniel> toddr: the final one will be into the right repo, right? https://github.com/perl6/old-issue-tracker

[23:08] *** Geth_ left
[23:08] <toddr> ¯\_(ツ)_/¯ I can put it wherever.

[23:08] *** Geth joined
[23:08] <toddr> You cannot transfer issues to a different org

[23:08] <toddr> so getting them all into one org first is recommended.

[23:08] <toddr> also the RT re-directs will break if you later move the repo.

[23:14] <lizmat> .tell dogbert11 S32-num/stress.t is a flapper for me

[23:14] <tellable6> lizmat, I'll pass your message to dogbert11

[23:16] <lizmat> .tell dogbert11 failure is typically 1.2873811240847445e-25 vs 1.2873811240847447e-25, aka the last shown digit

[23:16] <tellable6> lizmat, I'll pass your message to dogbert11

[23:18] <lizmat> .tell dogbert11 so it appears there *is* drift when roundtripping, and it is *not* load related

[23:18] <tellable6> lizmat, I'll pass your message to dogbert11

[23:18] <lizmat> good night #raku-dev&

[23:23] <japhb> o/ lizmat

[23:37] *** Kaiepi left
[23:38] *** Kaiepi joined
