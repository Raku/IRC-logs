[00:23] *** Kaeipi joined
[00:24] *** Kaiepi left
[00:32] <Geth> ¦ problem-solving: ToddAndMargo assigned to jnthn Issue uint's confused with int's https://github.com/Raku/problem-solving/issues/154

[00:45] *** sena_kun left
[01:01] *** sena_kun joined
[01:44] *** lucs left
[02:27] *** MasterDuke left
[02:45] *** sena_kun left
[02:59] *** sena_kun joined
[03:21] *** lucasb left
[04:44] *** sena_kun left
[04:59] *** sena_kun joined
[05:27] *** bisectable6 left
[05:28] *** linkable6 joined
[05:28] *** bisectable6 joined
[05:45] <AlexDaniel> #154

[05:45] <AlexDaniel> PS#154

[05:45] <linkable6> PS#154 [open]: https://github.com/Raku/problem-solving/issues/154 [language] uint's confused with int's

[06:45] *** sena_kun left
[06:59] *** sena_kun joined
[08:46] *** sena_kun left
[08:59] *** sena_kun joined
[09:15] *** bisectable6 left
[09:15] *** evalable6 left
[09:15] *** tellable6 left
[09:15] *** bisectable6 joined
[09:16] *** tellable6 joined
[09:17] *** evalable6 joined
[09:45] *** domidumont joined
[09:45] *** MasterDuke joined
[10:45] *** sena_kun left
[10:59] *** sena_kun joined
[11:16] <sena_kun> ping rba

[11:19] <Geth> ¦ rakudo: 392af08b0b | (Elizabeth Mattijsen)++ | src/core.c/Proc.pm6

[11:19] <Geth> ¦ rakudo: Save one Scalar allocation for each run/shell/QX

[11:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/392af08b0b

[11:20] <lizmat> sena_kun: can I be of assistance wrt the release ?

[11:43] *** linkable6 left
[11:44] *** linkable6 joined
[12:45] *** sena_kun left
[12:47] *** Kaiepi joined
[12:49] *** Kaeipi left
[12:50] *** Kaiepi left
[12:50] *** Kaiepi joined
[12:52] <Geth> ¦ rakudo: 3326669414 | (Elizabeth Mattijsen)++ | src/core.c/Proc.pm6

[12:52] <Geth> ¦ rakudo: Make Proc.exitcode default Nil

[12:52] <Geth> ¦ rakudo: 

[12:52] <Geth> ¦ rakudo: This saves one action in the BUILDPLAN for Proc, and it makes

[12:52] <Geth> ¦ rakudo: checking for absence of an exitcode faster, and it more appriopriately

[12:52] <Geth> ¦ rakudo: expresses the absence of an exitcode should the exitcode accessor be

[12:52] <Geth> ¦ rakudo: used prematurely.

[12:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3326669414

[12:59] *** sena_kun joined
[13:02] *** lucasb joined
[14:36] *** lucs joined
[14:46] *** sena_kun left
[14:59] *** domidumont left
[15:00] *** sena_kun joined
[15:16] *** titsuki joined
[15:46] <sena_kun> sadly, 6.c errata is much more broken than it was previously. I wonder if all those regressions appeared since 2019.11, this doesn't seem too super-likely to me somehow.

[15:46] <sena_kun> https://github.com/rakudo/rakudo/issues/3443

[16:11] *** epony left
[16:20] <dogbert11> .seen lizmat

[16:20] <tellable6> dogbert11, I saw lizmat 2020-01-26T12:35:51Z in #raku: <lizmat> the first statement does *not* return, it merely creates an empty list that is sunk, which causes the warning

[16:22] <dogbert11> .ask lizmat should I make a PR for https://github.com/perl6/nqp/issues/559 ?

[16:22] <tellable6> dogbert11, I'll pass your message to lizmat

[16:46] *** sena_kun left
[17:00] *** sena_kun joined
[17:02] *** titsuki left
[17:31] *** domidumont joined
[17:46] <AlexDaniel> sena_kun: it does look “normal” to me

[17:46] <AlexDaniel> that's about the regular amount you'd get per release

[17:52] <sena_kun> AlexDaniel: what do you mean?

[17:53] <sena_kun> or, rather, what's the implications of this being "normal"?

[17:53] <sena_kun> no need to fix 'em?

[17:54] <AlexDaniel> sena_kun: need to figure out each case. Sometimes the tests are just obviously wrong so you can just fix them, other times you may need to revert the change in rakudo

[17:55] <AlexDaniel> one quick way is to look at the commits affecting these files on master

[17:55] <AlexDaniel> for example t/spec/S32-num/base.t

[17:55] <AlexDaniel> https://github.com/perl6/roast/commits/master/S32-num/base.t

[17:55] <AlexDaniel> b3cd406ea2

[17:55] <linkable6> (2020-01-09) https://github.com/perl6/roast/commit/b3cd406ea2 Fix erroneous test

[17:55] <AlexDaniel> so in this case, yeah, the test was obviously wrong

[17:56] <AlexDaniel> so you can cherry-pick this into 6.c-errata and 6.d-errata

[17:56] <sena_kun> cherry-picking it into 6.c-errata?

[17:56] <AlexDaniel> you have access to do that now, I'm pretty sure

[17:56] <sena_kun> I see, thanks

[17:56] <sena_kun> sure, will do, working on examples repo right now

[17:57] <AlexDaniel> charset.t too https://github.com/perl6/roast/commit/34ab3343b42df2eb4e91ed9e5ad5e4a5909cba85

[17:58] <AlexDaniel> the test was just overly specific

[17:59] <sena_kun> .oO ( первый блин комам )

[17:59] <AlexDaniel> yes yes :)

[17:59] <AlexDaniel> lizmat: you can help

[18:00] <AlexDaniel> lizmat: figure out how 6d23891a3a7e and aa4994a7f6b can be applied to 6.c-errata

[18:00] <linkable6> (2020-01-03) https://github.com/perl6/roast/commit/6d23891a3a Some s/perl/raku changes

[18:00] <linkable6> (2020-01-03) https://github.com/perl6/roast/commit/aa4994a7f6 Call method .raku instead of .perl in tests

[18:01] <AlexDaniel> you definitely can't just change perl6→raku as that'll make all previous rakudo releases fail the test

[18:01] <AlexDaniel> although… maybe that's alright?

[18:02] <AlexDaniel> not like any other fixed test is better

[18:03] * sena_kun does cherry-picking

[18:08] * lizmat is back from some cycling

[18:08] <tellable6> 2020-01-26T16:22:14Z #raku-dev <dogbert11> lizmat should I make a PR for https://github.com/perl6/nqp/issues/559 ?

[18:09] <lizmat> .tell dogbert11 yes, a PR for 6d23891a3a7e  https://github.com/perl6/nqp/issues/559 would be great!

[18:09] <linkable6> (2020-01-03) https://github.com/perl6/roast/commit/6d23891a3a Some s/perl/raku changes

[18:09] <tellable6> lizmat, I'll pass your message to dogbert17

[18:10] <lizmat> sena_kun AlexDaniel  not sure what is expected of me

[18:13] <Geth> ¦ roast/6.c-errata: f2f5460c5c | (Elizabeth Mattijsen)++ (committed by Altai-man) | S32-num/base.t

[18:13] <Geth> ¦ roast/6.c-errata: Fix erroneous test

[18:13] <Geth> ¦ roast/6.c-errata: 

[18:13] <Geth> ¦ roast/6.c-errata: Since https://github.com/rakudo/rakudo/commit/97e7cdbd54 this test

[18:13] <Geth> ¦ roast/6.c-errata: would fail.  Since the test involved *no* specific number of digits,

[18:13] <Geth> ¦ roast/6.c-errata: any trailing 0 should be removed.  The new implementation does that

[18:13] <Geth> ¦ roast/6.c-errata: in this case, the old implementation of Rational.base did not.

[18:13] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/f2f5460c5c

[18:13] <Geth> ¦ roast/6.d-errata: 91928e0550 | (Elizabeth Mattijsen)++ (committed by Altai-man) | S32-num/base.t

[18:13] <Geth> ¦ roast/6.d-errata: Fix erroneous test

[18:13] <Geth> ¦ roast/6.d-errata: 

[18:13] <Geth> ¦ roast/6.d-errata: Since https://github.com/rakudo/rakudo/commit/97e7cdbd54 this test

[18:13] <Geth> ¦ roast/6.d-errata: would fail.  Since the test involved *no* specific number of digits,

[18:13] <Geth> ¦ roast/6.d-errata: any trailing 0 should be removed.  The new implementation does that

[18:13] <Geth> ¦ roast/6.d-errata: in this case, the old implementation of Rational.base did not.

[18:13] <Geth> ¦ roast/6.d-errata: review: https://github.com/perl6/roast/commit/91928e0550

[18:15] <Geth> ¦ roast/6.c-errata: 37d944a50c | (Elizabeth Mattijsen)++ (committed by Altai-man) | 2 files

[18:15] <Geth> ¦ roast/6.c-errata: Make tests less language name specific

[18:15] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/37d944a50c

[18:16] <Geth> ¦ roast/6.d-errata: 2a90b8dfab | (Elizabeth Mattijsen)++ (committed by Altai-man) | 2 files

[18:16] <Geth> ¦ roast/6.d-errata: Make tests less language name specific

[18:16] <Geth> ¦ roast/6.d-errata: review: https://github.com/perl6/roast/commit/2a90b8dfab

[18:20] <sena_kun> lizmat: can you look what's wrong with `t/spec/S03-junctions/misc.t` on 6.c-errata branch? I understand it is related to .perl/.raku rename, but https://github.com/perl6/roast/commit/6d23891a3a7e38ebdd0d6ec6b7c79a83a35c7445#diff-3416730d6bd9f33e5718c6944f2fff0a claims this test should pass with any case. are we safe with cherry-picking this commit, isn't it a stone of our backward compatibility?

[18:22] <Geth> ¦ roast/6.c-errata: f283311163 | (Elizabeth Mattijsen)++ (committed by Altai-man) | S17-supply/elems.t

[18:22] <Geth> ¦ roast/6.c-errata: Remove silly test

[18:22] <Geth> ¦ roast/6.c-errata: 

[18:22] <Geth> ¦ roast/6.c-errata: .elems on type objects generally gives "1", so why not here?

[18:22] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/f283311163

[18:22] <Geth> ¦ roast/6.c-errata: ff2fb81dbe | (Elizabeth Mattijsen)++ (committed by Altai-man) | S17-supply/unique.t

[18:22] <Geth> ¦ roast/6.c-errata: Remove silly test

[18:22] <Geth> ¦ roast/6.c-errata: 

[18:22] <Geth> ¦ roast/6.c-errata: .unique on type objects generally gives a Seq with that type object, so

[18:22] <Geth> ¦ roast/6.c-errata: why not here?

[18:22] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/ff2fb81dbe

[18:22] <Geth> ¦ roast/6.c-errata: a4f4cce7c3 | (Elizabeth Mattijsen)++ (committed by Altai-man) | S17-supply/squish.t

[18:22] <Geth> ¦ roast/6.c-errata: You *can* run .squish on a Supply type object

[18:22] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/a4f4cce7c3

[18:23] <Geth> ¦ roast/6.d-errata: 50450b7942 | (Elizabeth Mattijsen)++ (committed by Altai-man) | S17-supply/elems.t

[18:23] <Geth> ¦ roast/6.d-errata: Remove silly test

[18:23] <Geth> ¦ roast/6.d-errata: 

[18:23] <Geth> ¦ roast/6.d-errata: .elems on type objects generally gives "1", so why not here?

[18:23] <Geth> ¦ roast/6.d-errata: review: https://github.com/perl6/roast/commit/50450b7942

[18:23] <Geth> ¦ roast/6.d-errata: d50f543a6a | (Elizabeth Mattijsen)++ (committed by Altai-man) | S17-supply/unique.t

[18:23] <Geth> ¦ roast/6.d-errata: Remove silly test

[18:23] <Geth> ¦ roast/6.d-errata: 

[18:23] <Geth> ¦ roast/6.d-errata: .unique on type objects generally gives a Seq with that type object, so

[18:23] <Geth> ¦ roast/6.d-errata: why not here?

[18:23] <Geth> ¦ roast/6.d-errata: review: https://github.com/perl6/roast/commit/d50f543a6a

[18:23] <Geth> ¦ roast/6.d-errata: 6da26e4032 | (Elizabeth Mattijsen)++ (committed by Altai-man) | S17-supply/squish.t

[18:23] <Geth> ¦ roast/6.d-errata: You *can* run .squish on a Supply type object

[18:23] <Geth> ¦ roast/6.d-errata: review: https://github.com/perl6/roast/commit/6da26e4032

[18:26] <Geth> ¦ nqp: dogbert17++ created pull request #596: Fix for https://github.com/perl6/nqp/issues/559

[18:26] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/596

[18:31] <lizmat> sena_kun: am looking

[18:32] <lizmat> ah, I see the issue: the module provides a multi, but not proto

[18:33] <lizmat> so the proto in Mu is what .raku sees, and decides the module doesn't have its own .perl

[18:33] <sena_kun> are we fixing it by roast fix or rakudo fix?

[18:33] <lizmat> it should probably be a rakudo fix

[18:34] <lizmat> we could fix it in roast now, temporarily, if you don't want to cherry pick anything from master

[18:34] <lizmat> I mean, the workaround is easy: don't use a multi, or provide your own proto

[18:35] <sena_kun> lizmat: I would better cherry pick for rakudo

[18:35] <lizmat> ok, I'll try to come up with a rakudo fix then

[18:35] <sena_kun> I mean, roast is roast, but real people code can be broken, which is not so super probably, but still.

[18:36] <sena_kun> inb4: every fix can break someone's workflow

[18:37] <lizmat> hmmm... maybe it's an issue in Junction  

[18:38] <lizmat> ah, no...  I see the issue; Junction calls .raku, which then looks for .perl and decides it doesn't have one

[18:45] *** sena_kun left
[18:53] <lizmat> .tell sena_kun spec and stresstesting a fix

[18:53] <tellable6> lizmat, I'll pass your message to sena_kun

[18:58] *** sena_kun joined
[19:09] <Geth> ¦ rakudo: 87bc11710e | (Elizabeth Mattijsen)++ | src/core.c/Mu.pm6

[19:09] <Geth> ¦ rakudo: Make determining .raku / .perl switch smarter

[19:09] <Geth> ¦ rakudo: 

[19:09] <Geth> ¦ rakudo: Before this commit, if a module had a "multi method perl" in it,

[19:09] <Geth> ¦ rakudo: or a class (other than Mu) had one, calling .raku on that class

[19:09] <Geth> ¦ rakudo: would wrongly assume the class did *not* have a custom .perl method.

[19:09] <Geth> ¦ rakudo: This caused breakage in roast in the 6.c-errata branch.

[19:09] <Geth> ¦ rakudo: 

[19:09] <Geth> ¦ rakudo: <…commit message has 8 more lines…>

[19:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/87bc11710e

[19:09] <lizmat> sena_kun AlexDaniel ^^^

[19:09] <sena_kun> \o/

[19:09] <tellable6> 2020-01-26T18:53:23Z #raku-dev <lizmat> sena_kun spec and stresstesting a fix

[19:11] <Geth> ¦ rakudo/release-2020.01: f29849b1de | (Elizabeth Mattijsen)++ (committed by Altai-man) | src/core.c/Mu.pm6

[19:11] <Geth> ¦ rakudo/release-2020.01: Make determining .raku / .perl switch smarter

[19:11] <Geth> ¦ rakudo/release-2020.01: 

[19:11] <Geth> ¦ rakudo/release-2020.01: Before this commit, if a module had a "multi method perl" in it,

[19:11] <Geth> ¦ rakudo/release-2020.01: or a class (other than Mu) had one, calling .raku on that class

[19:11] <Geth> ¦ rakudo/release-2020.01: would wrongly assume the class did *not* have a custom .perl method.

[19:11] <Geth> ¦ rakudo/release-2020.01: This caused breakage in roast in the 6.c-errata branch.

[19:11] <Geth> ¦ rakudo/release-2020.01: 

[19:11] <Geth> ¦ rakudo/release-2020.01: <…commit message has 8 more lines…>

[19:11] <Geth> ¦ rakudo/release-2020.01: review: https://github.com/rakudo/rakudo/commit/f29849b1de

[19:12] <sena_kun> lizmat: you are awesome!

[19:15] <Geth> ¦ rakudo/release-2020.01: b76b784b09 | Altai-man++ (committed using GitHub Web editor) | docs/release_guide.pod

[19:15] <Geth> ¦ rakudo/release-2020.01: Update release date

[19:15] <Geth> ¦ rakudo/release-2020.01: 

[19:15] <Geth> ¦ rakudo/release-2020.01: Once again, hopefully this time for sure.

[19:15] <Geth> ¦ rakudo/release-2020.01: review: https://github.com/rakudo/rakudo/commit/b76b784b09

[19:24] <AlexDaniel> lizmat: does it mean we can revert errata changes?

[19:25] <sena_kun> AlexDaniel: the cherry-picks? no, they are fine, and the last broken was fixed in rakudo itself, I've already picked the commit to release branch

[19:26] <lizmat> yeah, that last one was indeed a real issue

[19:26] <AlexDaniel> ah nvm I misunderstood

[19:27] <AlexDaniel> lizmat++ sena_kun++

[19:35] <AlexDaniel> sena_kun: I used to put the next day if it was late, it made me less nervous and my sleep schedule is ÷∞ed anyway

[19:38] <Geth> ¦ rakudo: 0c5a7075a9 | (Elizabeth Mattijsen)++ | src/core.c/Proc/Async.pm6

[19:38] <Geth> ¦ rakudo: Streamline Proc::Async subclass attributes

[19:38] <Geth> ¦ rakudo: 

[19:38] <Geth> ¦ rakudo: Should save 4 scalar containers per Proc::Async object + removes

[19:38] <Geth> ¦ rakudo: the sub BUILD

[19:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0c5a7075a9

[19:41] <sena_kun> AlexDaniel: my sleep schedule is from 9:30 to 1:40 stable, so not sure how the next day date would change my state. I am not really excited about the release process anyway, so no anticipation == no stress. :)

[19:41] <AlexDaniel> right

[19:55] <Geth> ¦ rakudo: ca49dcbd57 | (Elizabeth Mattijsen)++ | src/core.c/Proc/Async.pm6

[19:55] <Geth> ¦ rakudo: Bind a few variables rather than assigning

[19:55] <Geth> ¦ rakudo: 

[19:55] <Geth> ¦ rakudo: As they are immutable anyway in their scope.

[19:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ca49dcbd57

[19:57] *** Kaiepi left
[19:57] *** Kaiepi joined
[20:08] *** domidumont left
[20:27] *** Kaiepi left
[20:27] *** Kaeipi joined
[20:45] *** sena_kun left
[20:46] *** Geth left
[20:47] *** Geth joined
[20:59] *** sena_kun joined
[21:20] <Geth> ¦ rakudo: 356bf3f762 | (Elizabeth Mattijsen)++ | src/core.c/Proc/Async.pm6

[21:20] <Geth> ¦ rakudo: Rework Proc::Async.start internals

[21:20] <Geth> ¦ rakudo: 

[21:20] <Geth> ¦ rakudo: - don't set up arrays when they are not needed

[21:20] <Geth> ¦ rakudo: - bind where we don't need assign

[21:20] <Geth> ¦ rakudo: - don't use named arguments for private methods

[21:20] <Geth> ¦ rakudo: - add some empty lines for readability

[21:20] <Geth> ¦ rakudo: - add some return constraints

[21:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/356bf3f762

[21:34] <Geth> ¦ rakudo: 05916efa52 | (Elizabeth Mattijsen)++ | src/core.c/Proc/Async.pm6

[21:34] <Geth> ¦ rakudo: Use faster nqp::istype instead of ~~

[21:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/05916efa52

[22:44] *** sena_kun left
[22:45] <Geth> ¦ roast/6.d-errata: 3a35e015ac | (Elizabeth Mattijsen)++ (committed by Altai-man) | packages/Advent/GrammarProfiler.pm6

[22:45] <Geth> ¦ roast/6.d-errata: Add reference to method "raku" to prevent infinilooping

[22:45] <Geth> ¦ roast/6.d-errata: 

[22:45] <Geth> ¦ roast/6.d-errata: Not sure why this fixes it, but the module is playing some tricks

[22:45] <Geth> ¦ roast/6.d-errata: with find_method, and so does the Mu.raku/perl logic, so maybe that

[22:45] <Geth> ¦ roast/6.d-errata: is it.

[22:45] <Geth> ¦ roast/6.d-errata: review: https://github.com/perl6/roast/commit/3a35e015ac

[22:47] *** titsuki joined
[22:58] *** sena_kun joined
[23:19] *** moritz left
