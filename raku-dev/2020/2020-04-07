[01:39] <tbrowder> lizmat: ++ ditto

[01:48] *** Altai-man_ joined
[01:51] *** sena_kun left
[01:59] *** hungrydonkey joined
[02:33] *** hungrydonkey left
[02:34] *** hungrydonkey joined
[03:49] *** sena_kun joined
[03:51] *** Altai-man_ left
[05:48] *** Altai-man_ joined
[05:51] *** sena_kun left
[06:21] *** hungryd85 joined
[06:23] *** hungrydonkey left
[06:33] *** hungryd85 left
[06:33] *** hungryd28 joined
[06:43] *** ufobat_ left
[07:03] <lizmat> Files=1306, Tests=111228, 213 wallclock secs (28.64 usr  8.00 sys + 2992.13 cusr 266.92 csys = 3295.69 CPU)

[07:14] *** hungryd28 left
[07:44] *** hungrydonkey joined
[07:49] *** sena_kun joined
[07:51] *** Altai-man_ left
[07:51] *** hungrydonkey left
[07:52] *** hungrydonkey joined
[08:05] *** hungrydonkey left
[08:44] *** [Tux] left
[09:13] *** [Tux] joined
[09:19] *** [Tux] left
[09:19] *** [Tux] joined
[09:20] *** [Tux] left
[09:28] *** [Tux] joined
[09:48] *** Altai-man_ joined
[09:51] *** sena_kun left
[10:05] *** cognomin_ joined
[10:10] *** cognominal left
[10:19] *** jjatria left
[10:20] *** jjatria joined
[10:21] *** jjatria left
[10:21] *** jjatria joined
[10:22] *** jjatria left
[10:22] *** jjatria joined
[11:40] *** MasterDuke left
[11:49] *** sena_kun joined
[11:50] *** Altai-man_ left
[12:50] *** hungrydonkey joined
[13:06] *** hungrydonkey left
[13:09] *** hungrydonkey joined
[13:13] *** hungrydonkey left
[13:22] *** hungrydonkey joined
[13:36] *** hungrydonkey left
[13:48] *** Altai-man_ joined
[13:51] *** sena_kun left
[14:10] *** MasterDuke joined
[14:15] *** hungrydonkey joined
[14:24] *** hungryd47 joined
[14:24] *** hungrydonkey left
[14:27] <vrurg> greppable add_phaser

[14:27] <vrurg> greppable6: add_phaser

[14:27] <greppable6> vrurg, 11 lines, 5 modules: https://gist.github.com/1a4aabf2bb09221e3f2d22b3493dcb9b

[14:28] <jnthn> .oO( I sure hope they're all calling it at BEGIN time... )

[14:35] <nine> So I either compile this code https://github.com/niner/Inline-Perl5/blob/master/t/lib/TestV6.pm#L142 inside a role declaration, then it will fail because of the our scoped sub, or in a class declaration, then the methods will type check the invocant for that class and I can't use them for the actual target class.

[14:35] <nine> Seems like I can't win :/

[14:53] *** Kaiepi left
[14:57] *** Ven`` joined
[15:25] <Xliff> Is anyone here familiar with CompUnit::Util.re-export?

[15:26] <Xliff> https://github.com/LLFourn/p6-CompUnit-Util/blob/master/lib/CompUnit/Util.pm6#L156

[15:33] *** hungryd47 left
[15:38] *** hungrydonkey joined
[15:39] <Geth_> ¦ roast: ace2bed002 | (Elizabeth Mattijsen)++ | S03-sequence/exhaustive.t

[15:39] <Geth_> ¦ roast: Some more exhaustive ... tests

[15:39] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/ace2bed002

[15:49] *** sena_kun joined
[15:51] *** Altai-man_ left
[15:59] *** Xliff left
[16:18] *** hungrydonkey left
[16:20] *** hungrydonkey joined
[16:20] *** Kaiepi joined
[16:27] <nine> I think the actual way to solve my problem is to use ExportHOW to make it syntactically possible to create an Inline::Perl5::ClassHOW based class syntactically, i.e. wrap that code in a p5class { ... }

[16:39] <nine> Of course that leads down to funny errors like "getlex: outer index out of range"

[16:57] <nine> Oh oh...the trouble goes away with no precompilation;

[17:03] *** hungrydonkey left
[17:04] *** hungrydonkey joined
[17:04] *** hungrydonkey left
[17:42] *** maggotbrain joined
[17:48] *** Altai-man_ joined
[17:51] *** sena_kun left
[18:38] <tyil> jjatria: do you need any help with the docker patch for rstar?

[18:39] <tyil> I can apply what you currently have and shave off rough edges tomorrow if that's ok with you

[19:12] <[Tux]> Rakudo version 2020.02.1-295-gafff3b0b2 - MoarVM version 2020.02.1-76-gec53e4dfc

[19:12] <[Tux]> csv-test-xs-20      0.386 -  0.389

[19:12] <[Tux]> csv-ip5xs           0.709 -  0.716

[19:12] <[Tux]> test-t --race       0.960 -  0.978

[19:12] <[Tux]> test-t              1.943 -  2.044

[19:12] <[Tux]> csv-ip5xs-20        6.038 -  6.193

[19:12] <[Tux]> test                7.574 -  7.683

[19:12] <[Tux]> test-t-20 --race    9.594 -  9.745

[19:12] <[Tux]> csv-parser         24.018 - 24.047

[19:12] <[Tux]> test-t-20          31.936 - 32.486

[19:20] <jjatria> tyil: I think what I needed more than anything was time to sit down and teach my git to email :D

[19:20] <jjatria> tyil: But yeah, go ahead. The patch on my gitlab fork is in good enough shape I think

[19:44] <timotimo> what's the best way to check for an intarray / numarray in a signature outside of the native_arrays source file? (where the roles live inside of a class)

[19:49] *** sena_kun joined
[19:51] *** Altai-man_ left
[19:51] <timotimo> checking for "array" seems like a good start. and it should be okay to check the .of in the method body then

[19:56] <jnthn> m: multi m(int @) { say "int" }; multi m(num @) { say "num" }; m(my int @); m(my num @)multi m(int @) { say "int" }; multi m(num @) { say "num" }; m(my int @); m(my num @)

[19:56] <camelia> rakudo-moar afff3b0b2: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3 { say "num" }; m(my int @); m(my num @)7⏏5multi m(int @) { say "int" }; multi m(nu␤    expecting any of:␤        infix␤        infix stopper␤   …»

[19:56] <jnthn> huh

[19:56] <jnthn> oh, copied twice

[19:56] <jnthn> m: multi m(int @) { say "int" }; multi m(num @) { say "num" }; m(my int @); m(my num @)

[19:56] <camelia> rakudo-moar afff3b0b2: OUTPUT: «int␤num␤»

[19:56] <jnthn> timotimo: ^

[19:57] <tyil> jjatria: ack, thanks!

[19:58] <nine> So I guess to support assignable attributes objects of my custom meta class must create the scalar containers for them?

[19:58] <nine> At least that's what I gather from: "assign requires a concrete object (got a VMNull type object instead)"

[19:59] <jnthn> nine: Hm, I'm a little curious how you ended up without them, in so far as the I thought Attribute.new would set up a Scalar container and its descriptor

[20:01] <timotimo> d'oh, that's so obvious

[20:01] <nine> Well, I now EVAL "perl5class GLOBAL::$package { $body }" with $body being the code from: https://github.com/niner/Inline-Perl5/blob/master/t/lib/TestV6.pm#L142

[20:01] *** Ven`` left
[20:01] <timotimo> m: multi m(int @) { say "int" }; multi m(num @) { say "num" }; m(my int8 @); m(my num32 @)

[20:01] <camelia> rakudo-moar afff3b0b2: OUTPUT: «5===SORRY!5===␤Calling m(Positional[int8]) will never work with any of these multi signatures:␤    (int @) ␤    (num @)␤at <tmp>:1␤------> 3 "int" }; multi m(num @) { say "num" }; 7⏏5m(my int8 @); m(my num32 @)␤Calling m(Position…»

[20:02] <nine> I made it past Metamodel::Primitives.compose_type and it recognizes the existence of the attribute now, but apparently it doesn't get initialized for new objects yet

[20:02] <timotimo> hum

[20:02] <jnthn> How did you create the attribute?

[20:03] <nine> My meta class does Metamodel::AttributeContainer and the compiler presumably called add_attribute for me

[20:03] <jnthn> Ah, so not sublcassing ClassHOW

[20:03] <jnthn> You'll need to also participate in BUILDPLAN construction too

[20:03] <jnthn> There's a role, and see ClassHOW for what to call in your compose

[20:04] <nine> So, Perl6::Metamodel::BUILDPLAN and at least self.create_BUILDPLAN($obj);

[20:05] <jnthn> Yeah. Maybe that sufficies even.

[20:05] <jnthn> It's probably been close to a decade since I implemented that, so it's not very hot in the cache. :)

[20:06] <nine> Ah, the fun :) Cannot find method 'lang-rev-before' on object of type Inline::Perl5::ClassHOW

[20:09] <nine> Well self.create_BUILDPLAN was not enough by itself. Will add some more code...

[20:10] <nine> Oh, it could also be the way I create those objects currently

[20:11] <nine> $class.CREATE is probably just not enough (considering it's the _BUILD_PLAN that does the work)

[20:13] <jnthn> Yeah, that's not enough. The default BUILDALL form Mu interprets the build plan

[20:13] <jnthn> We can also compile 'em

[20:13] <jnthn> Though you need to be calling from the compiler for that to work out.

[20:13] <nine> Well switching to .bless which runs BUILDALL is still not enough

[20:15] <nine> Oh....I guess method BUILDALLPLAN($type) { [].FLATTENABLE_LIST } just doesn't cut it anymore :)

[20:16] <nine> Got rid of it as I get it from Metamodel::BUILDPLAN anyway...but still

[20:17] <nine> Hm...BUILDPLAN and BUILDALLPLAN don't look that bad:

[20:17] <nine> ((0, Foo::Bar::TestV6, "\$!name", "name"), (0, Foo::Bar::TestV6, "\$!wrapped-perl5-object", "wrapped-perl5-object"), (10, Foo::Bar::TestV6, "\$!name"), (10, Foo::Bar::TestV6, "\$!wrapped-perl5-object"))

[20:17] <nine> ((0, Foo::Bar::TestV6, "\$!name", "name"), (0, Foo::Bar::TestV6, "\$!wrapped-perl5-object", "wrapped-perl5-object"))

[20:33] *** patrickb joined
[21:46] <timotimo> how icky would y'all think it'd be if we generated code for hyperops right in the Perl6::Optimizer? like we do with junction unfolding and for loop simplification?

[21:48] *** Altai-man_ joined
[21:51] *** sena_kun left
[21:55] *** patrickb left
[21:58] *** lucasb joined
[22:01] <Geth_> ¦ nqp/master: 4 commits pushed by (Patrick Böker)++

[22:01] <Geth_> ¦ nqp/master: 4b46995a59 | Add `static_nqp_home` hll-config var

[22:01] <Geth_> ¦ nqp/master: f073a59103 | Bump nqp-configure to allow '-' in config variables

[22:01] <Geth_> ¦ nqp/master: ffaef02b71 | Fix relocatability

[22:01] <Geth_> ¦ nqp/master: d8cda30162 | Merge pull request #611 from patrickbkr/static-nqp-home-hll-var

[22:01] <Geth_> ¦ nqp/master: review: https://github.com/Raku/nqp/compare/80cc57370013...d8cda301624c

[23:32] *** Xliff joined
[23:45] <Xliff> m: class A is repr<CStruct> { has guint $.a }; class GstObject is repr<CPointer> { * }; my $pa = cast(GstObject, A.new)

[23:45] <camelia> rakudo-moar afff3b0b2: OUTPUT: «5===SORRY!5===␤Type 'guint' is not declared. Did you mean any of these?␤    uint␤    UInt␤␤at <tmp>:1␤------> 3class A is repr<CStruct> { has guint7⏏5 $.a }; class GstObject is repr<CPointer␤Malformed has␤at <tmp>:1␤------>…»

[23:45] <Xliff> m: class A is repr<CStruct> { has uint32 $.a }; class GstObject is repr<CPointer> { * }; my $pa = cast(GstObject, A.new)

[23:45] <camelia> rakudo-moar afff3b0b2: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    cast used at line 1. Did you mean 'last', 'cas'?␤␤»

[23:45] <Xliff> m: class A is repr<CStruct> { has uint32 $.a }; class GstObject is repr<CPointer> { * }; my $pa = nativecast(GstObject, A.new)

[23:45] <camelia> rakudo-moar afff3b0b2: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    nativecast used at line 1␤␤»

[23:45] <Xliff> m: use NativeCall; class A is repr<CStruct> { has uint32 $.a }; class GstObject is repr<CPointer> { * }; my $pa = nativecast(GstObject, A.new)

[23:45] <camelia> rakudo-moar afff3b0b2: ( no output )

[23:45] <Xliff> Hmm....

[23:49] *** sena_kun joined
[23:51] *** Altai-man_ left
