[00:11] *** vrurg_ joined
[00:14] *** vrurg left
[00:39] *** leont left
[00:53] *** Xliff joined
[00:53] <Xliff> \o

[01:36] *** Altai-man_ joined
[01:38] *** sena_kun left
[01:43] <jdv79> on the topic of more org/bureaucracy/etc - how do other volunteer efforts do it?  i don't remember, though i barely paid attention, there being a lot of ceremony around perl's dev efforts

[01:44] <jdv79> iirc there's a pumpkin, others may or may not apply for grants, etc.  is there substantionally more in terms of core dev?

[01:56] <jdv79> one more random thought - if the first person to do some new role doesn't need a dayjob it'd be pretty hard for someone else (who does have a dayjob) to take it up, no?

[03:33] <ShimmerFairy> Sure, but as a counterpoint what if getting the job started demands more work than keeping it going?

[03:36] <jdv79> Sure, but i wasn't making a point;  just a thought - there's no point.

[03:37] *** sena_kun joined
[03:38] *** Altai-man_ left
[04:49] <[Coke]> The grants are really separate from any kind of hierarchy. IME, they're just interested people who wanted to be able to spend more time on the project.

[04:49] <[Coke]> zzz

[05:36] *** Altai-man_ joined
[05:39] *** sena_kun left
[05:50] *** lichtkind joined
[06:55] *** Summertime left
[06:57] *** Summertime joined
[07:21] *** patrickb joined
[07:31] *** MasterDuke joined
[07:37] *** sena_kun joined
[07:38] *** Altai-man_ left
[07:51] *** softmoth left
[08:09] *** squashable6 left
[08:12] *** squashable6 joined
[09:13] *** lichtkind_ joined
[09:14] <lizmat> Files=1306, Tests=111378, 215 wallclock secs (28.96 usr  8.34 sys + 3017.68 cusr 279.19 csys = 3334.17 CPU)

[09:16] *** lichtkind left
[09:36] *** Altai-man_ joined
[09:39] *** sena_kun left
[10:28] *** leont joined
[10:31] <Geth> ¦ rakudo/rakuast: 825bac4800 | (Jonathan Worthington)++ | 5 files

[10:31] <Geth> ¦ rakudo/rakuast: Add RakuAST for (...) and [...] circumfixes

[10:31] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/825bac4800

[10:47] *** lichtkind_ left
[10:53] *** [Tux] left
[10:53] *** [Tux] joined
[11:20] *** cognomin_ joined
[11:21] <Geth> ¦ rakudo: tbrowder self-assigned Add 'truncate-to' as alias for DateTime's  'truncated-to' method https://github.com/rakudo/rakudo/issues/3750

[11:23] *** cognominal left
[11:37] *** sena_kun joined
[11:38] *** Altai-man_ left
[11:41] *** lichtkind joined
[11:46] <Geth> ¦ rakudo/rakuast: 0139dac152 | (Jonathan Worthington)++ | 2 files

[11:46] <Geth> ¦ rakudo/rakuast: Add RakuAST for [...] and {...} postcircumfixes

[11:46] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/0139dac152

[11:47] <lizmat> jnthn: ^^ copy-pasta in commit mess ?

[11:49] <jnthn> ?

[11:50] <jnthn> Looks correct to me

[11:59] <lizmat> aaah...   dyslexics untie!

[12:02] <jnthn> It was quite similar to the previous one, I guess... :)

[12:02] <jnthn> Up to two sanity tests compiling/passing via RakuAST

[12:15] <moritz> \o/

[12:50] *** lichtkind left
[12:50] *** bloatable6 left
[12:51] *** bloatable6 joined
[12:52] *** lichtkind joined
[12:56] *** nativecallable6_ joined
[12:57] *** shareable6_ joined
[13:01] *** [Tux] left
[13:01] *** nativecallable6 left
[13:01] *** shareable6 left
[13:01] *** quotable6 left
[13:01] *** ShimmerFairy left
[13:06] *** [Tux] joined
[13:07] *** NAAI0YG joined
[13:07] *** quotable6 joined
[13:07] *** ShimmerFairy joined
[13:09] *** lue joined
[13:09] *** ShimmerFairy left
[13:22] *** Tux__ left
[13:25] *** lichtkind left
[13:38] *** Altai-man_ joined
[13:38] *** sena_kun left
[13:42] <timotimo> woohoo

[13:43] <Geth> ¦ nqp: 30b1d064da | (Jonathan Worthington)++ | 3 files

[13:43] <Geth> ¦ nqp: Allow more interesting constants in NQP

[13:43] <Geth> ¦ nqp: 

[13:43] <Geth> ¦ nqp: Restrictions are largely like BEGIN blocks: you can't see outer symbols

[13:43] <Geth> ¦ nqp: that aren't types.

[13:43] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/30b1d064da

[13:44] *** lue is now known as ShimmerFairy

[13:44] <Geth> ¦ rakudo/rakuast: ecd55ec016 | (Jonathan Worthington)++ | 2 files

[13:44] <Geth> ¦ rakudo/rakuast: Add a range of ops

[13:44] <Geth> ¦ rakudo/rakuast: 

[13:44] <Geth> ¦ rakudo/rakuast: Including some of the logical ones. Use improved `constant` support in

[13:44] <Geth> ¦ rakudo/rakuast: NQP to have a hash we can look up QAST mappings in for that case of ops

[13:44] <Geth> ¦ rakudo/rakuast: that need more than just the usual lookup-based compilation.

[13:44] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/ecd55ec016

[13:45] <ShimmerFairy> I love seeing rakudo slowly hooking into RakuAST more just through the commits.

[13:46] *** patrickb left
[13:46] <Altai-man_> releasable6, status

[13:46] <releasable6> Altai-man_, Next release in ≈10 days and ≈5 hours. There are no known blockers. 143 out of 266 commits logged (⚠ 4 warnings)

[13:46] <tellable6> 2020-06-09T08:36:21Z #raku-dev <patrickb> Altai-man: This is the raku.org revamp by CIAvash: https://github.com/Raku/problem-solving/issues/158

[13:46] <releasable6> Altai-man_, Details: https://gist.github.com/5e72c9c065184023078abb0ce8aff986

[13:53] <jdv79> whatever happened to PEA?  that's the last large perf item i remember.

[13:59] <jnthn> I got distracted by the rename, then with buying an apartment, then when the dispatch thing came up and I started thinking about it, I realized at least one thing I'd need to do in it would give me a solution to one of the PEA problems, so it made sense to return to it once dispatch stuff is done.

[14:16] *** patrickb joined
[14:18] <Geth> ¦ rakudo/rakuast: 1c546f24f3 | (Jonathan Worthington)++ | 4 files

[14:18] <Geth> ¦ rakudo/rakuast: RakuAST handling of chaining operators

[14:18] <Geth> ¦ rakudo/rakuast: 

[14:18] <Geth> ¦ rakudo/rakuast: Whether something is chaining is a property known by the parser, thus at

[14:18] <Geth> ¦ rakudo/rakuast: the RakuAST level it seems reasonable to have that modeled as a separate

[14:18] <Geth> ¦ rakudo/rakuast: element type. We can't just have a list of chaining ops in the AST, as

[14:18] <Geth> ¦ rakudo/rakuast: we might end up with user-defined chaining ops also. The alternatives

[14:18] <Geth> ¦ rakudo/rakuast: are to pass properties into the RakuAST nodes (but which ones?) or to

[14:18] <Geth> ¦ rakudo/rakuast: interrogate metadata on the op itself (but that's rather painful for

[14:19] <Geth> ¦ rakudo/rakuast: bootstrapping).

[14:19] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/1c546f24f3

[14:21] <jdv79> ah, cool

[14:29] *** Xliff left
[14:37] *** raiph joined
[14:43] *** raiph left
[15:08] <Geth> ¦ rakudo/rakuast: 6602064aab | (Jonathan Worthington)++ | 3 files

[15:08] <Geth> ¦ rakudo/rakuast: Wire up very basic RakuAST parameter handling

[15:08] <Geth> ¦ rakudo/rakuast: 

[15:08] <Geth> ¦ rakudo/rakuast: Just wiring up the grammar/actions to what is implemented in the AST so

[15:08] <Geth> ¦ rakudo/rakuast: far, which is really just positional parameters without any regard to

[15:08] <Geth> ¦ rakudo/rakuast: type.

[15:08] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/6602064aab

[15:32] *** patrickb left
[15:40] *** sena_kun joined
[15:42] *** Altai-man_ left
[16:05] *** lucasb joined
[16:28] <Geth> ¦ rakudo/rakuast: 9800adc5e6 | (Jonathan Worthington)++ | 5 files

[16:28] <Geth> ¦ rakudo/rakuast: Make PointyBlock a kind of Block

[16:28] <Geth> ¦ rakudo/rakuast: 

[16:28] <Geth> ¦ rakudo/rakuast: As well as avoiding some code duplication, this also deals with the

[16:28] <Geth> ¦ rakudo/rakuast: various places that accept both a block and a pointy block, meaning

[16:28] <Geth> ¦ rakudo/rakuast: that `while foo() -> $x { }` now compiles with RakuAST also.

[16:28] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/9800adc5e6

[16:54] *** patrickb joined
[17:00] <Geth> ¦ rakudo/rakuast: eb7f1cfbc5 | (Jonathan Worthington)++ | 4 files

[17:00] <Geth> ¦ rakudo/rakuast: Add basic RakuAST `for` loop support

[17:00] <Geth> ¦ rakudo/rakuast: 

[17:00] <Geth> ¦ rakudo/rakuast: So far doesn't know the optimized forms nor labels, but otherwise does

[17:00] <Geth> ¦ rakudo/rakuast: the right thing (so long as there's a pointy block, at least; blocks

[17:00] <Geth> ¦ rakudo/rakuast: with implicit topics aren't implemented yet).

[17:00] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/eb7f1cfbc5

[17:08] <patrickb> o/

[17:09] <patrickb> Currently the AzureCI configs in raku, nqp and moar are meant to be identical. This "keep them the same" approach stemed from the assumption that identical tests would be run for all three projects just with different ways to reference the respective other repos.

[17:10] <patrickb> But that assumption is not true for MoarVM for which we want to test a set of different compilers and library combinations.

[17:11] *** softmoth joined
[17:11] <patrickb> Now I'm unsure whether I should continue putting repo specific special cases into the one big azure ci config or just give up on that idea and accept that the configs are different.

[17:12] <patrickb> From a maintainance point of view it's difficult to argue for one of the two approaches.

[17:14] <patrickb> https://github.com/MoarVM/MoarVM/blob/master/azure-pipelines.yml#L100 <- That's what we currently have. Lines 100-146 are exlusive for MoarVM.

[17:15] <patrickb> Any opinions on this?

[17:16] <patrickb> I'll be afk for a bit (I need to get some groceries) but will backlog in a bit.

[17:17] <Geth> ¦ rakudo/rakuast: da2d3a0d01 | (Jonathan Worthington)++ | 4 files

[17:17] <Geth> ¦ rakudo/rakuast: Add RakuAST for without statements

[17:17] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/da2d3a0d01

[17:19] <timotimo> is that rakuast for "without" statements, or rakuast "for" but without statements inside? :D

[17:20] <timotimo> (looking at the code makes it clear)

[17:23] <jnthn> haha :D

[17:30] <[Coke]> I admit I may not be thinking of full context, but I would treat the 3 repos separately.

[17:31] <[Coke]> what does .kok stand for?

[17:34] <jnthn> keyword ok, I assume :)

[17:36] <jnthn> (It's straight out of the current grammar, and I think it's a Larryism :))

[17:39] *** Altai-man_ joined
[17:42] *** sena_kun left
[18:06] <nine> .kok reminds me very much of perl's internals with SvIOK, SvROK and friends...

[18:08] <MasterDuke> makes me think of starcraft

[18:19] <softmoth> Hi, friends. I have a GitHub / Travis request. Yesterday I pushed a button on travis-ci.org (.org is important) requesting that it be authorized by the github Raku org. Someone saw that request and approved it. They should not have, since I was in error (we are using travis-ci.COM, not .ORG). I'm not sure where to report this issue. Who tends to github.com/Raku settings, and where do they prefer issues be filed?

[18:21] <Altai-man_> softmoth, I can deny it. Should I?

[18:23] <softmoth> I think it's best. Before, this:(https://travis-ci.org/github/Raku/rakudoc) gave a LTA error saying the repo wasn't available. That's a Travis issue, IMO. But now it gives me an option of activating the repo. But it's already active over on travis-ci.com/Raku/rakudoc, so I think it's best not to allow duplicates.

[18:24] <Altai-man_> Currently: No private access

[18:24] <Altai-man_> softmoth, ^ should be okay now?

[18:24] <softmoth> I'd argue that we should have gone with travis-ci.org/ for github/Raku/* in the first place. But I've only just yesterday learned that there's a distinction, so I could be a victim of severe ignorance here.

[18:26] <softmoth> Altai-man_, hang on, it's still showing but I noticed sometimes I have to log out & back in to travis to see updates.

[18:30] <softmoth> Hmm, it still shows the Activate button now. Ah, but yes, it does fail to activate if I press it. So I think it's okay now.

[18:31] <softmoth> Travis has some LTA error handling here, but that's okay.

[18:31] <softmoth> Thanks, Altai-man++

[18:33] <Altai-man_> softmoth, you are welcome. Answering to a broader question - you can ping me in such situations, I think. When my connection often dies here, I can appear here as `sena_kun` as well, either works fine.

[18:35] <softmoth> ☺

[19:17] <Geth> ¦ rakudo: 272c46369a | (Elizabeth Mattijsen)++ | src/core.c/Match.pm6

[19:17] <Geth> ¦ rakudo: Make Match!MATCH-CAPTURES about 30% faster

[19:17] <Geth> ¦ rakudo: 

[19:17] <Geth> ¦ rakudo: - possibly visible with regexen with a lot of captures

[19:17] <Geth> ¦ rakudo: - simplify indexing into arrays (native str coerces to int automatically)

[19:17] <Geth> ¦ rakudo: - don't use iterator on native str array, just shift from it

[19:17] <Geth> ¦ rakudo: 

[19:17] <Geth> ¦ rakudo: Otherwise, kept the exact flow for now.  Puzzling is why a lot of things

[19:17] <Geth> ¦ rakudo: are allocated (like Arrays instead of native lists).  But that's for the

[19:17] <Geth> ¦ rakudo: next round of improvements.

[19:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/272c46369a

[19:36] <Geth> ¦ rakudo: ed65d733c6 | (Elizabeth Mattijsen)++ | src/core.c/Match.pm6

[19:36] <Geth> ¦ rakudo: Make recursive captures a tiny bit faster

[19:36] <Geth> ¦ rakudo: 

[19:36] <Geth> ¦ rakudo: - add a Match!SUBMATCH method that does not check for setuppedness

[19:36] <Geth> ¦ rakudo: - call that instead of !MATCH inside !MATCH-CAPTURES

[19:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ed65d733c6

[19:40] *** sena_kun joined
[19:42] *** Altai-man_ left
[19:46] *** Altai-man_ joined
[19:48] *** sena_kun left
[19:51] <Geth> ¦ rakudo: e3fa44ab77 | (Elizabeth Mattijsen)++ | src/core.c/Match.pm6

[19:51] <Geth> ¦ rakudo: Make Match!MATCH about 10% faster for repeated lookups

[19:51] <Geth> ¦ rakudo: 

[19:51] <Geth> ¦ rakudo: - use NQPdidMATCH type object as a semaphore, instead of an instantiation

[19:51] <Geth> ¦ rakudo: - use nqp::eqaddr instead of nqp::istype for check

[19:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e3fa44ab77

[20:00] *** maggotbrain left
[20:06] <Altai-man_> committable6, say DateTime.new.truncated-to;

[20:06] <committable6> Altai-man_, Seems like you forgot to specify a revision (will use “v6.c” instead of “say”)

[20:06] <committable6> Altai-man_, https://gist.github.com/624edcdbc4f8778fdd541437d8dfc726

[20:07] <Geth> ¦ rakudo: 7f47db80fa | (Elizabeth Mattijsen)++ | src/core.c/Match.pm6

[20:07] <Geth> ¦ rakudo: Use faster .push rather than .append

[20:07] <Geth> ¦ rakudo: 

[20:07] <Geth> ¦ rakudo: Not sure why a. Array is being used here, and b. why append.  Spectest

[20:07] <Geth> ¦ rakudo: appears clean on using .push instead, opening up the possibility of

[20:07] <Geth> ¦ rakudo: using an nqp::list rather than a HLL Array, which would save a *lot*

[20:07] <Geth> ¦ rakudo: of allocations for captures.

[20:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7f47db80fa

[20:08] <lizmat> afk&

[20:08] <Altai-man_> committable6, v6c DateTime.new(now).truncated-to('seconds')

[20:08] <committable6> Altai-man_, ¦v6c (43 commits): «»

[20:08] <Altai-man_> committable6, v6.c say DateTime.new(now).truncated-to('seconds')

[20:08] <jnthn> I think I've already been down the List instead of Array path for Match, but I forget what happened...

[20:09] <committable6> Altai-man_, https://gist.github.com/3b305846a49a5633451547bdb18a3467

[20:16] <lizmat> jnthn: do you recall why using .append instead of .push ?

[20:20] <lizmat> really afk&

[20:22] <jnthn> lizmat: no, and can't think of why it's doing that

[20:30] <Geth> ¦ nqp: b4ac42ac53 | (Patrick Böker)++ | azure-pipelines.yml

[20:30] <Geth> ¦ nqp: Simplify the Azure CI configuration + Several fixes

[20:30] <Geth> ¦ nqp: 

[20:30] <Geth> ¦ nqp: - Don't try to have one config for rakudo, nqp and MoarVM. This simplifies

[20:30] <Geth> ¦ nqp:   the config a lot.

[20:30] <Geth> ¦ nqp: - Fix building of PRs

[20:30] <Geth> ¦ nqp: - Shorten job names for better readability

[20:30] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/b4ac42ac53

[20:32] <patrickb> There currently is no IRC hook for Azure CI. Is that a blocker for getting rid of Travis / AppVeyor / ... ?

[20:40] <Geth> ¦ nqp: 0e84bf73b5 | (Patrick Böker)++ | 3rdparty/nqp-configure

[20:40] <Geth> ¦ nqp: Update nqp-configure

[20:40] <Geth> ¦ nqp: 

[20:40] <Geth> ¦ nqp: Pulls in a set of Perl6 -> Raku renames and a fix for nmake detection with

[20:40] <Geth> ¦ nqp: non english locales.

[20:40] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/0e84bf73b5

[20:41] *** sena_kun joined
[20:42] *** Altai-man_ left
[20:44] <Geth> ¦ rakudo: fce783a182 | (Patrick Böker)++ | azure-pipelines.yml

[20:44] <Geth> ¦ rakudo: Simplify the Azure CI configuration + Several fixes

[20:44] <Geth> ¦ rakudo: 

[20:44] <Geth> ¦ rakudo: - Don't try to have one config for rakudo, nqp and MoarVM. This simplifies

[20:44] <Geth> ¦ rakudo:   the config a lot.

[20:44] <Geth> ¦ rakudo: - Fix building of PRs

[20:44] <Geth> ¦ rakudo: - Shorten job names for better readability

[20:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fce783a182

[20:44] <Geth> ¦ rakudo: 7bace1bef4 | (Patrick Böker)++ | 3rdparty/nqp-configure

[20:44] <Geth> ¦ rakudo: Update nqp-configure

[20:44] <Geth> ¦ rakudo: 

[20:44] <Geth> ¦ rakudo: Pulls in a set of Perl6 -> Raku renames and a fix for nmake detection with

[20:44] <Geth> ¦ rakudo: non english locales.

[20:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7bace1bef4

[21:57] *** travis-ci joined
[21:57] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Make Match!MATCH about 10% faster for repeated lookups

[21:57] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/696981830 https://github.com/rakudo/rakudo/compare/ed65d733c667...e3fa44ab7788

[21:57] *** travis-ci left
[22:29] *** sena_kun left
[22:48] *** travis-ci joined
[22:48] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Use faster .push rather than .append

[22:48] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/696986718 https://github.com/rakudo/rakudo/compare/e3fa44ab7788...7f47db80fa4b

[22:48] *** travis-ci left
[22:55] <Geth> ¦ rakudo/rakuast: 4b438ecd14 | (Jonathan Worthington)++ | 4 files

[22:55] <Geth> ¦ rakudo/rakuast: Add if/with/elsif/orwith/else to RakuAST

[22:55] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/4b438ecd14

[23:01] *** patrickz joined
[23:02] <Geth> ¦ rakudo: tbrowder self-unassigned Add 'truncate-to' as alias for DateTime's  'truncated-to' method https://github.com/rakudo/rakudo/issues/3750

[23:05] *** patrickb left
[23:22] *** lucasb left
[23:39] *** MasterDuke left
[23:59] *** patrickb joined
