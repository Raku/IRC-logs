[00:25] *** sivoais left
[00:26] *** sivoais joined
[00:31] *** Xliff joined
[00:31] <Xliff> j #webkitgtk

[00:31] <tellable6> 2020-11-17T09:49:13Z #raku <patrickb> xliff: ^ This may be relevant for your GTK modules.

[00:31] <tellable6> 2020-11-17T17:17:14Z #raku <holyghost> Xliff my macbook is back online, no need for the keys, thanks

[01:28] *** Kaiepi joined
[02:29] *** melezhik left
[02:53] *** lucasb left
[04:30] *** Xliff left
[06:58] <Geth> ¦ rakudo: usev6++ created pull request #4044: [JVM] Use archetypes to figure out coerciveness

[06:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4044

[07:30] *** MasterDuke left
[07:47] *** domidumont joined
[08:00] *** frost-lab joined
[08:12] *** TreyHarris left
[08:41] <Geth> ¦ problem-solving: JJ assigned to codesections Issue There's no effective way to communicate something to all people with commit bits in the different Raku repos and organizations https://github.com/Raku/problem-solving/issues/246

[08:50] *** TreyHarris joined
[09:05] *** sena_kun joined
[11:00] <releasable6> Next release in ≈3 days and ≈7 hours. 3 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[11:14] *** squashable6 left
[11:14] *** squashable6 joined
[12:10] *** Altai-man joined
[12:12] *** sena_kun left
[12:49] *** frost-lab left
[13:18] <Geth> ¦ rakudo: 39eedacf07 | (Patrick Böker)++ | docs/running.pod

[13:18] <Geth> ¦ rakudo: Update `docs/running.pod`

[13:18] <Geth> ¦ rakudo: 

[13:18] <Geth> ¦ rakudo: `docs/running.pod` is duplicated in

[13:18] <Geth> ¦ rakudo: `Raku/doc:doc/Programs/03-environment-variables.pod6`. But the two versions

[13:18] <Geth> ¦ rakudo: ran out of sync. Merge the two files again.

[13:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/39eedacf07

[13:18] <Geth> ¦ rakudo: fb32d0ca32 | (Patrick Böker)++ (committed using GitHub Web editor) | docs/running.pod

[13:18] <Geth> ¦ rakudo: Merge pull request #3994 from patrickbkr/update-running-rakudo

[13:18] <Geth> ¦ rakudo: 

[13:18] <Geth> ¦ rakudo: Update `docs/running.pod`

[13:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fb32d0ca32

[13:19] <Geth> ¦ nqp: b606a21da4 | (Patrick Böker)++ | tools/templates/windows/nqp-m-build.c

[13:19] <Geth> ¦ nqp: Build: No need to escape " in C code

[13:19] <Geth> ¦ nqp: 

[13:19] <Geth> ¦ nqp: I'm not entirely sure how the compiler reacts to `'\"'`. Possibly the `\`

[13:19] <Geth> ¦ nqp: is simply ignored. Then the code worked fine before already. But better

[13:19] <Geth> ¦ nqp: be clear about what happens.

[13:19] <Geth> ¦ nqp: Note: The file makes a trip through the templating system, which unescapes

[13:19] <Geth> ¦ nqp: all the double backslashes.

[13:19] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/b606a21da4

[13:19] <Geth> ¦ nqp: 545a988502 | (Patrick Böker)++ (committed using GitHub Web editor) | tools/templates/windows/nqp-m-build.c

[13:19] <Geth> ¦ nqp: Merge pull request #678 from patrickbkr/no-build-runner-double-quoting

[13:19] <Geth> ¦ nqp: 

[13:19] <Geth> ¦ nqp: Build: No need to escape " in C code

[13:19] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/545a988502

[13:19] <Geth> ¦ rakudo: 857fbfd5c4 | (Patrick Böker)++ | tools/templates/moar/rakudo-m-build.c.windows

[13:19] <Geth> ¦ rakudo: Build: No need to escape " in C code

[13:19] <Geth> ¦ rakudo: 

[13:19] <Geth> ¦ rakudo: I'm not entirely sure how the compiler reacts to `'\"'`. Possibly the `\`

[13:19] <Geth> ¦ rakudo: is simply ignored. Then the code worked fine before already. But better

[13:19] <Geth> ¦ rakudo: be clear about what happens.

[13:19] <Geth> ¦ rakudo: Note: The file makes a trip through the templating system, which unescapes

[13:19] <Geth> ¦ rakudo: all the double backslashes.

[13:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/857fbfd5c4

[13:19] <Geth> ¦ rakudo: 9976cab18f | (Patrick Böker)++ (committed using GitHub Web editor) | tools/templates/moar/rakudo-m-build.c.windows

[13:19] <Geth> ¦ rakudo: Merge pull request #3985 from patrickbkr/no-build-runner-double-quoting

[13:19] <Geth> ¦ rakudo: 

[13:19] <Geth> ¦ rakudo: Build: No need to escape " in C code

[13:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9976cab18f

[13:29] <Geth> ¦ rakudo: patrickbkr++ created pull request #4045: Fix building on Windows with MinGW

[13:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4045

[16:03] *** patrickb joined
[16:08] <Geth> ¦ rakudo: f0808da601 | (Patrick Böker)++ | src/vm/moar/runner/main.c

[16:08] <Geth> ¦ rakudo: Prevent a compiler warning about an invalid cast

[16:08] <Geth> ¦ rakudo: 

[16:08] <Geth> ¦ rakudo: `_get_osfhandle` returns an `intptr_t` which can be cast to `HANDLE`, but

[16:08] <Geth> ¦ rakudo: if `io.h` is not included the compiler seems to assume it returns `int` and

[16:08] <Geth> ¦ rakudo: thus rightfully warns.

[16:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f0808da601

[16:08] <Geth> ¦ rakudo: 200821cd90 | (Patrick Böker)++ | 2 files

[16:08] <Geth> ¦ rakudo: Fix building on Windows with MinGW

[16:08] <Geth> ¦ rakudo: 

[16:08] <Geth> ¦ rakudo: The flag `--subsystem=windows` is possibly supported by the gnu linker, but

[16:08] <Geth> ¦ rakudo: it's not by GCC. So we use `-mwindows` which is supported by GCC. It is

[16:08] <Geth> ¦ rakudo: possible that flag also automatically makes GCC link some additional

[16:09] <Geth> ¦ rakudo: libraries, but that won't hurt.

[16:09] <Geth> ¦ rakudo: 

[16:09] <Geth> ¦ rakudo: <…commit message has 5 more lines…>

[16:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/200821cd90

[16:09] <Geth> ¦ rakudo: 8310690d5e | (Patrick Böker)++ (committed using GitHub Web editor) | 2 files

[16:09] <Geth> ¦ rakudo: Merge pull request #4045 from patrickbkr/fix-mingw

[16:09] <Geth> ¦ rakudo: 

[16:09] <Geth> ¦ rakudo: Fix building on Windows with MinGW

[16:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8310690d5e

[16:11] *** sena_kun joined
[16:12] *** Altai-man left
[16:36] *** sena_kun left
[16:36] *** sena_kun joined
[17:08] <Geth> ¦ rakudo/no-fast-native-shaped-access: bd9e15c7b7 | (Elizabeth Mattijsen)++ | src/core.c/native_array.pm6

[17:08] <Geth> ¦ rakudo/no-fast-native-shaped-access: Remove native shaped array fast access

[17:08] <Geth> ¦ rakudo/no-fast-native-shaped-access: 

[17:08] <Geth> ¦ rakudo/no-fast-native-shaped-access: Mainly to be able to test this in Blin for regressions.

[17:08] <Geth> ¦ rakudo/no-fast-native-shaped-access: review: https://github.com/rakudo/rakudo/commit/bd9e15c7b7

[17:08] <lizmat> sena_kun ^^^^ for Blin testing

[17:12] <Geth> ¦ roast: 5aee10dfc3 | (Elizabeth Mattijsen)++ | S32-list/seq.t

[17:12] <Geth> ¦ roast: Add tests for GH#4039

[17:12] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/5aee10dfc3

[17:12] <linkable6> GH#4039 [open]: https://github.com/rakudo/rakudo/issues/4039 [tests needed] Regression? Sequence of junctions wrapped in singleton lists

[17:44] <Geth> ¦ rakudo: f6cdbd8147 | (Elizabeth Mattijsen)++ | 2 files

[17:44] <Geth> ¦ rakudo: Fix regression in Font::FreeType

[17:44] <Geth> ¦ rakudo: 

[17:44] <Geth> ¦ rakudo: Thanks to Altai-man++ and dwarring++ for keeping nudging me.  In the

[17:44] <Geth> ¦ rakudo: end it turned out to be a stupid copy-pasto :-(

[17:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f6cdbd8147

[17:45] <lizmat> ^^ this could have benefitted from a warning of a parameter not being used inside the sub

[17:45] <lizmat> *parameter with a name

[18:09] *** patrickb left
[18:17] *** domidumont left
[19:03] <sena_kun> ⏳ 598 out of 1551 modules processed

[19:19] <Geth> ¦ rakudo: 6dbce0acee | (Christian Bartolomäus)++ | src/vm/jvm/runtime/org/raku/rakudo/Binder.java

[19:19] <Geth> ¦ rakudo: [JVM] Use archetypes to figure out coerciveness

[19:19] <Geth> ¦ rakudo: 

[19:19] <Geth> ¦ rakudo: That matches the way .coercive is used in many other places.

[19:19] <Geth> ¦ rakudo: Fixes https://github.com/rakudo/rakudo/issues/4041

[19:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6dbce0acee

[19:19] <Geth> ¦ rakudo: e074f3c562 | (Christian Bartolomäus)++ (committed using GitHub Web editor) | src/vm/jvm/runtime/org/raku/rakudo/Binder.java

[19:19] <Geth> ¦ rakudo: Merge pull request #4044 from usev6/jvm_gh4041

[19:19] <Geth> ¦ rakudo: 

[19:19] <Geth> ¦ rakudo: [JVM] Use archetypes to figure out coerciveness

[19:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e074f3c562

[19:39] <sena_kun> ⏳ 1097 out of 1551 modules processed

[20:06] <sena_kun> ⏳ 1398 out of 1551 modules processed

[20:06] *** MasterDuke joined
[20:10] *** Altai-man joined
[20:12] *** sena_kun left
[20:33] <Geth> ¦ rakudo: b452566565 | (Vadim Belman)++ | 2 files

[20:33] <Geth> ¦ rakudo: Fix incorrect assignment passing with coercion

[20:33] <Geth> ¦ rakudo: 

[20:33] <Geth> ¦ rakudo: Fix for #4040. `my Rat(Str) $foo = 1` will now fail because `Int` is not

[20:33] <Geth> ¦ rakudo: passing the type check.

[20:33] <Geth> ¦ rakudo: 

[20:33] <Geth> ¦ rakudo: Also made `Metamodel::CoercionHOW::coerce()` more strict about the value

[20:33] <Geth> ¦ rakudo: it's trying to coerce. Now it will throw if it doesn't match against

[20:33] <linkable6> RAKUDO#4040 [closed]: https://github.com/rakudo/rakudo/issues/4040 [JVM] Failing test in S12-coercion/coercion-types.t after switch to new coercion semantics

[20:33] <Geth> ¦ rakudo: `$!constraint_type`. Normally this shouldn't happen to a user unless it

[20:33] <Geth> ¦ rakudo: invokes the method directly, but should be of great help in catching

[20:33] <Geth> ¦ rakudo: core errors.

[20:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b452566565

[20:33] <Geth> ¦ rakudo: 824c5adc06 | (Vadim Belman)++ | 2 files

[20:33] <Geth> ¦ rakudo: Fix a native string passing instead of Str

[20:33] <Geth> ¦ rakudo: 

[20:33] <Geth> ¦ rakudo: It was breaking JVM backend installation.

[20:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/824c5adc06

[20:34] <Geth> ¦ rakudo: 6f314947ea | (Vadim Belman)++ (committed using GitHub Web editor) | 4 files

[20:34] <Geth> ¦ rakudo: Merge pull request #4043 from vrurg/rakudo_4040

[20:34] <Geth> ¦ rakudo: 

[20:34] <Geth> ¦ rakudo: Fix incorrect assignment passing with coercion

[20:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6f314947ea

[21:13] <nine> vrurg: looks like much of our ecosystem depends on our failure to make module loading really lexical. I.e. use Zef; use Zef::Client; and magically you get a Zef::Distribution available as well.

[21:14] <nine> My replacement for globals merging accidentally fixes this bug, but trips up all dists I try :/

[21:17] <vrurg> nine: Too bad. Because this may have side effects if I declare a `my class Zef::MyOwnSomething { }` – and Zef gets it into its namespace to. And if it already has something named same way – ...

[21:19] <vrurg> Ok, if it's my code – I can do something about it. But what if two modules clash?? I see no solution to it whatsoever.

[21:20] <vrurg> I'd say it's better to get some bravery and take care of the failing modules than preserve such a huge pitfall.

[21:21] <nwc10> we can't change from tabs to spaces in makefiles because there are too many users

[21:21] <nwc10> (ish)

[21:27] <nine> Wenn in this non-representative sample we're talking about 80 % of modules

[21:27] <nine> And IO::Socket::Async::SSL's failure mode caused by a missing use statement was a straight segfault

[21:28] <nwc10> fxing this will be easier than trying to get all of CPAN to run with `use strict` enabled by default

[21:29] <nine> Well, I'll still have a look at how to re-create the bug in my implementation. Once I got that I'm pretty sure we can make it language version dependent.

[21:36] <nine> The good news is that I've made it far enough to actually try multiple distributions ;)

[21:47] *** MasterDuke left
[21:48] <vrurg> nine++

[22:01] *** patrickb joined
[22:38] <lizmat> nine: feels to me that this does not need to be version dependent, though

[22:38] <lizmat> as fixes to modules wouldn't break under the old, buggy implementation, would they ?

[22:40] <Altai-man> nine, can you create a branch with the fix so I could blin it?

[22:40] <tellable6> 2020-11-17T20:30:03Z #raku-dev <[Coke]> altai-man: pong.

[23:02] *** Altai-man left
[23:17] *** patrickb left
[23:47] *** travis-ci joined
[23:47] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Fix regression in Font::FreeType

[23:47] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/744481739 https://github.com/rakudo/rakudo/compare/8310690d5ee4...f6cdbd81474c

[23:47] *** travis-ci left
[23:56] *** patrickb joined
[23:57] *** patrickb left
