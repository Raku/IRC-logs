[00:28] *** MasterDuke left
[00:31] *** vrurg_ joined
[00:33] *** vrurg left
[01:01] *** leont left
[01:01] *** donaldh joined
[01:06] *** donaldh left
[01:47] *** AlexDani` joined
[01:49] *** AlexDaniel left
[02:52] *** vrurg joined
[02:54] *** vrurg_ left
[03:03] *** donaldh joined
[03:09] *** donaldh left
[03:09] *** AlexDani` left
[05:15] *** Kaiepi left
[05:15] *** Kaiepi joined
[07:00] <releasable6> Next release in â‰ˆ2 days and â‰ˆ11 hours. 3 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[07:05] *** donaldh joined
[07:09] *** donaldh left
[07:27] *** sena_kun joined
[07:29] *** donaldh joined
[07:31] *** donaldh left
[07:43] <Xliff> Hello. I'm getting a P6M merge error that has me scratching my head. Golf here: https://repl.it/@Xliff/LovingMassiveVendors#C.pm6

[07:43] <Xliff> Is this worth a bug?

[07:45] <sena_kun> releasable6, status

[07:45] <releasable6> sena_kun, Next release in â‰ˆ2 days and â‰ˆ11 hours. 3 blockers. Changelog for this release was not started yet

[07:45] <releasable6> sena_kun, Details: https://gist.github.com/98b4e6079926d69250f20a9bbe14770a

[07:52] *** MasterDuke joined
[08:05] *** domidumont joined
[08:24] *** dogbert11 joined
[08:28] *** dogbert17 left
[09:36] *** leont joined
[09:55] *** Xliff left
[10:12] <Geth> Â¦ rakudo/rakuast: 64b5c005d6 | (Jonathan Worthington)++ | 7 files

[10:12] <Geth> Â¦ rakudo/rakuast: Implement application of traits to routine decls

[10:12] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/64b5c005d6

[10:25] <Geth> Â¦ rakudo/rakuast: 90204bdde1 | (Elizabeth Mattijsen)++ | src/Raku/ast/code.rakumod

[10:25] <Geth> Â¦ rakudo/rakuast: The /ast files are NQP bodies

[10:25] <Geth> Â¦ rakudo/rakuast: 

[10:25] <Geth> Â¦ rakudo/rakuast: They don't know about callsame!

[10:25] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/90204bdde1

[10:27] <lizmat> Xliff: our implies exporting, does it not ?

[10:27] <tellable6> lizmat, I'll pass your message to Xliff

[10:28] <lizmat> hmmm... it does not

[10:30] <lizmat> .tell Xliff have you tried "unit module A; our %RAW-DEFS; %RAW-DEFS<a> = 1" ?

[10:30] <tellable6> lizmat, I'll pass your message to Xliff

[10:38] <lizmat> .tell Xliff confirmed wonkiness there, definitely worth an issue I'd say, if there isn't one for it already

[10:38] <tellable6> lizmat, I'll pass your message to Xliff

[10:47] <Geth> Â¦ rakudo/rakuast: 8ad47bc5de | (Jonathan Worthington)++ | 3 files

[10:47] <Geth> Â¦ rakudo/rakuast: Add routine `return` handler and return type check

[10:47] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/8ad47bc5de

[11:24] *** Altai-man joined
[11:27] *** sena_kun left
[11:34] *** Altai-man left
[11:40] <Geth> Â¦ rakudo/rakuast: 0109545887 | (Elizabeth Mattijsen)++ | src/Raku/ast/call.rakumod

[11:40] <Geth> Â¦ rakudo/rakuast: Use the same logic in DEPARSE as below

[11:40] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/0109545887

[11:40] <Geth> Â¦ rakudo/rakuast: 9668639c7d | (Elizabeth Mattijsen)++ | src/Raku/ast/literals.rakumod

[11:40] <Geth> Â¦ rakudo/rakuast: DEPARSE should call .raku, not Str

[11:40] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/9668639c7d

[11:40] <Geth> Â¦ rakudo/rakuast: 4413281851 | (Elizabeth Mattijsen)++ | t/12-rakuast/literals.t

[11:40] <Geth> Â¦ rakudo/rakuast: Add some DEPARSE tests

[11:40] <Geth> Â¦ rakudo/rakuast: 

[11:40] <Geth> Â¦ rakudo/rakuast: To give jnthn an idea on how that would look.  To be reverted if

[11:40] <Geth> Â¦ rakudo/rakuast: jnthn does not like.  :-)

[11:40] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/4413281851

[11:43] *** sena_kun joined
[11:48] *** domidumont left
[11:54] *** ggoebel left
[11:54] *** ggoebel joined
[12:37] <Geth> Â¦ roast: 382068506c | (Elizabeth Mattijsen)++ | S02-types/capture.t

[12:37] <Geth> Â¦ roast: Make test less sensitive to actual Capture.raku format

[12:37] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/382068506c

[12:43] <Geth> Â¦ rakudo: lizmat++ created pull request #3921: De-huffmanize Capture.raku

[12:43] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3921

[12:57] *** Xliff joined
[13:42] *** vrurg left
[13:50] <Geth> Â¦ rakudo/rakuast: 8209834524 | (Elizabeth Mattijsen)++ | t/12-rakuast/literals.t

[13:50] <Geth> Â¦ rakudo/rakuast: Rework RakuAST::xxxLiteral tests

[13:50] <Geth> Â¦ rakudo/rakuast: 

[13:50] <Geth> Â¦ rakudo/rakuast: Introduces ast-ok to test whether EVALling an AST gives the expected

[13:50] <Geth> Â¦ rakudo/rakuast: result, as well as deparsing the given AST and (string) EVALling that

[13:50] <Geth> Â¦ rakudo/rakuast: gives the same result.

[13:50] <Geth> Â¦ rakudo/rakuast: 

[13:50] <Geth> Â¦ rakudo/rakuast: ast-ok name up for bikeshedding.

[13:50] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/8209834524

[13:51] *** vrurg joined
[13:52] <Xliff> .

[13:52] <tellable6> 2020-09-17T10:27:41Z #raku-dev <lizmat> Xliff: our implies exporting, does it not ?

[13:52] <tellable6> 2020-09-17T10:30:37Z #raku-dev <lizmat> Xliff have you tried "unit module A; our %RAW-DEFS; %RAW-DEFS<a> = 1" ?

[13:52] <tellable6> 2020-09-17T10:38:16Z #raku-dev <lizmat> Xliff confirmed wonkiness there, definitely worth an issue I'd say, if there isn't one for it already

[13:54] <Xliff> lizmat: Well... no. 'our' is more a visibility thing.

[13:54] <lizmat> Xliff: yeah, realized that later  :-)

[13:54] <Xliff> Ah. See that, now. :)

[13:54] <Xliff> Did you catch the golf?

[13:57] <Xliff> lizmat: Can you declare a package of the same name across multiple compunits?

[13:57] <Xliff> Put differently: Does Raku support the concept of partials?

[13:57] <lizmat> I think in Raku that is implemented with the concept of roles

[13:58] <lizmat> a compunit can export a role, and a class can consume multiple roles

[13:58] <Xliff> Now that I think about it... I think augment would be a better match.

[13:58] <Xliff> I'm thinking more of a collection spread across multiple compunits.

[13:59] <Xliff> a "package Abracadabra { }" can be defined in many compunits, but another compunit can't use both definitions, can it?

[14:00] <lizmat> not adaik

[14:00] <lizmat> *afaik

[14:00] <Xliff> OK.

[14:01] <Xliff> I think Raku really needs a namespace concept.

[14:01] <lizmat> I think it has ?

[14:01] <Xliff> Which is more like a package, but parts of it can be scattered across multiple compunits.

[14:01] <Xliff> You "use" the parts you need. That might be a nightmare to implement, though.

[14:03] <lizmat> I think it could be done with an "is mergeable" trait on the class

[14:03] <lizmat> if you're interested in getting stuff together from different files

[14:04] <lizmat> and they're not conflicting, you can already do that by *not* specifying any package

[14:04] <Xliff> And that is what I am doing.

[14:04] <Xliff> The problem is when I try and "use" two compunits that have an our-scoped variable with the same shortname

[14:04] <Xliff> s/variable/symbol/

[14:05] * Xliff goes to bug.

[14:14] <Xliff> https://github.com/rakudo/rakudo/issues/3922

[14:16] <[Coke]> Xliff: rectivied == rectified?

[14:25] <Xliff> [Coke]: LOL -- yes

[14:25] <Xliff> Edited. Thanks.

[15:08] <Xliff> Addendum to R34922

[15:08] <Xliff> https://repl.it/@Xliff/SwelteringEarnestSpof#D.pm6

[15:08] <Xliff> Er.

[15:09] <Xliff> R#3922

[15:09] <linkable6> R#3922 [open]: https://github.com/rakudo/rakudo/issues/3922 P6M Merging error when using non-packaged our-scoped variables with a prefix.

[15:22] *** vrurg left
[15:25] *** Altai-man joined
[15:27] *** sena_kun left
[17:07] *** vrurg joined
[17:38] *** MasterDuke left
[17:59] *** Kaiepi left
[18:14] *** domidumont joined
[18:15] *** Kaiepi joined
[18:16] *** ggoebel left
[18:16] *** domidumont left
[18:36] *** Xliff left
[18:57] *** ccamel left
[19:15] *** camelCaser joined
[19:25] *** sena_kun joined
[19:27] *** Altai-man left
[21:02] <Geth> Â¦ rakudo/rakuast: 4 commits pushed by (Elizabeth Mattijsen)++

[21:02] <Geth> Â¦ rakudo/rakuast: 43183adc3b | RakuAST::QuotedString should not rakuify

[21:02] <Geth> Â¦ rakudo/rakuast: 2a6db2c42d | Add some more DEPARSE logic

[21:02] <Geth> Â¦ rakudo/rakuast: ebf8a13b8c | ast-ok is a one-off due to scoping issues

[21:02] <Geth> Â¦ rakudo/rakuast: 43bd49d1a2 | Add some more DEPARSE testing

[21:02] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/compare/8209834524bd...43bd49d1a2f7

[21:04] *** finsternis left
[21:08] *** MasterDuke joined
[21:16] *** ggoebel joined
[21:28] <lizmat> .tell tbrowder food for thought: https://perlhacks.com/2020/09/blogging-for-perl/

[21:28] <tellable6> lizmat, I'll pass your message to tbrowder

[21:29] <timotimo> "there's more than one way to blog it" reminds me of the POSSE idea from the indieweb community

[21:42] *** finsternis joined
[22:14] *** Kaeipi joined
[22:17] *** Kaiepi left
[22:23] *** sena_kun left
[22:53] <tbrowder> lizmat: i agree with dave, but i'm looking for an easy-to-use public blog site (not wordpress) and so far i haven't found one i like. maybe i'll run my own like codesections, but i'd rather not unless forced to.

[22:53] <tellable6> 2020-09-17T21:28:06Z #raku-dev <lizmat> tbrowder food for thought: https://perlhacks.com/2020/09/blogging-for-perl/

[22:55] <tbrowder> lizmat: btw, how do you search for raku tweets for the weekly?

