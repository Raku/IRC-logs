[00:29] <vrurg> greppable6: Object

[00:30] <greppable6> vrurg, 6013 lines, 218 modules: https://gist.github.com/b0247b2067ea6915341779c0bec63c33

[01:09] *** wildtrees left
[01:23] *** b2gills left
[01:25] *** b2gills joined
[02:08] *** lucasb left
[02:51] *** frost-lab joined
[02:57] *** raku-bridge left
[02:57] *** raku-bridge joined
[03:48] *** melezhik joined
[03:49] <melezhik> hi rakudo devs. I've created an alpha version of RakuPlay - web service to run Raku code snippets in differents OS/Rakudo versions/commits with possibility to use Raku modules in a code - http://100.21.64.139/play/

[03:50] <melezhik> I'd like to get a feedback ... if such a services could be helpful in Raku development ...

[03:50] <melezhik> .tell MasterDuke: ^^

[03:50] <tellable6> melezhik, I'll pass your message to MasterDuke

[03:58] *** Kaeipi left
[03:59] *** Kaeipi joined
[04:04] *** melezhik left
[05:35] *** b2gills left
[05:36] *** b2gills joined
[06:31] *** raku-bridge left
[06:49] <[Tux]> Yesterday:

[06:49] <[Tux]> Rakudo v2020.10-109-g1a6cf7877 (v6.d) on MoarVM 2020.10-31-gb13f6a24c

[06:49] <[Tux]> csv-test-xs-20      0.381 -  0.410

[06:49] <[Tux]> csv-ip5xs           0.841 -  0.847

[06:49] <[Tux]> test-t --race       0.867 -  0.897

[06:49] <[Tux]> test-t              1.921 -  1.968

[06:49] <[Tux]> test                7.877 -  7.958

[06:49] <[Tux]> csv-ip5xs-20        7.879 -  8.247

[06:49] <[Tux]> test-t-20 --race    9.525 -  9.884

[06:49] <[Tux]> csv-parser         26.301 - 26.458

[06:49] <[Tux]> test-t-20          32.850 - 33.629

[07:22] <bartolin> vrurg: on the JVM backend 'my Rat(Str) $foo = 1' dies with X::TypeCheck::Assignment (causing this test failure: https://github.com/Raku/roast/blob/master/S12-coercion/coercion-types.t#L77)

[07:24] <bartolin> vrurg: I suspect the problem to be in https://github.com/rakudo/rakudo/blob/master/src/Perl6/bootstrap.c/BOOTSTRAP.nqp#L1634 The call to .coerce two line below is not reached, because the conditional evaluates to false.

[07:25] <bartolin> vrurg: If I add a ' || $type.HOW.archetypes.coercive' to the if condition the error does not happen. Now this doesn't look like a clean solution, but probably you'll have a better idea.

[07:27] <bartolin> vrurg: (if I'm not mistaken, MoarVM takes a different path and doesn't hit this code (for this example) -- probably because assignment is handled differently.)

[07:27] * bartolin switches to $work &

[07:36] *** frost-lab left
[07:36] *** frost-lab joined
[07:52] *** Kaeipi left
[07:52] *** Kaeipi joined
[08:07] *** domidumont joined
[08:15] *** MasterDuke joined
[08:20] *** Kaeipi left
[08:22] *** Kaeipi joined
[08:26] *** domidumont left
[08:49] *** domidumont joined
[09:12] <lizmat> Files=1340, Tests=114237, 230 wallclock secs (30.11 usr  8.22 sys + 3167.07 cusr 297.12 csys = 3502.52 CPU)

[09:13] <lizmat> Files=1337, Tests=114219, 225 wallclock secs (29.65 usr  8.57 sys + 3113.75 cusr 296.37 csys = 3448.34 CPU)    <---  last one before coercion protocol merge

[09:24] *** Altai-man joined
[09:43] *** patrickb joined
[09:57] *** patrickb left
[10:32] *** Kaeipi left
[10:32] *** Kaiepi joined
[10:44] <Geth> Â¦ rakudo: e78c53badd | (Peter du Marchie van Voorthuysen)++ | src/core.c/array_operators.pm6

[10:44] <Geth> Â¦ rakudo: Don't flatten values passed to push/unshift

[10:44] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e78c53badd

[10:44] <Geth> Â¦ rakudo: 6ed8891413 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/array_operators.pm6

[10:44] <Geth> Â¦ rakudo: Merge pull request #4035 from dumarchie/array_operators

[10:44] <Geth> Â¦ rakudo: 

[10:44] <Geth> Â¦ rakudo: Don't flatten values passed to sub push/unshift

[10:44] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6ed8891413

[10:45] <Geth> Â¦ roast: 48f5c5601c | (Peter du Marchie van Voorthuysen)++ | S02-types/flattening.t

[10:45] <Geth> Â¦ roast: Cover push/unshift with multiple values

[10:45] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/48f5c5601c

[10:45] <Geth> Â¦ roast: 861bc6c8d4 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | S02-types/flattening.t

[10:45] <Geth> Â¦ roast: Merge pull request #698 from dumarchie/array_operators

[10:45] <Geth> Â¦ roast: 

[10:45] <Geth> Â¦ roast: Cover push/unshift with multiple values

[10:45] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/861bc6c8d4

[12:11] *** sena_kun joined
[12:13] *** Altai-man left
[12:21] <lizmat> bisectable6: sub a(--> Bool()) { 1 }; dd a

[12:21] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[12:22] <bisectable6> lizmat, Output on all releases: https://gist.github.com/d6efe979317e307d58b9029ce02742ed

[12:22] <bisectable6> lizmat, Bisecting by exit code (old=2016.08.1 new=2016.09). Old exit code: 1

[12:22] <bisectable6> lizmat, bisect log: https://gist.github.com/935b3a5d2d8621c5753eea3b872998af

[12:22] <bisectable6> lizmat, (2016-09-03) https://github.com/rakudo/rakudo/commit/b508576fc51cfa128a84ed4f302528a3f78bab03

[12:22] <bisectable6> lizmat, Bisecting by output (old=2016.01.1 new=2016.02) because on both starting points the exit code is 1

[12:23] <bisectable6> lizmat, bisect log: https://gist.github.com/799968df0826a1da3bd454d56ac3fdc7

[12:23] <bisectable6> lizmat, (2016-02-18) https://github.com/rakudo/rakudo/commit/9983c2c8434ed81c532a5706996f284283b48d0a

[12:23] <bisectable6> lizmat, Output on all releases and bisected commits: https://gist.github.com/5f82a5e832aaad8b1c06d4096eeeab66

[12:38] <lizmat> bisectable6: say ({ 1 | -1 } ... *)[^3]

[12:38] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[12:39] <bisectable6> lizmat, Output on all releases: https://gist.github.com/3c85f1b4136515c571314e484e7787fb

[12:39] <bisectable6> lizmat, Bisecting by output (old=2019.11 new=2020.01) because on both starting points the exit code is 0

[12:39] <bisectable6> lizmat, bisect log: https://gist.github.com/33d817dffaabb4d5366404576e38833c

[12:39] <bisectable6> lizmat, (2019-12-30) https://github.com/rakudo/rakudo/commit/e1aaa83cc1e28586d3a273b7dd57742284a585fe

[12:39] <bisectable6> lizmat, Output on all releases and bisected commits: https://gist.github.com/ac0f43e6b632cd0a1b8c9d7ef5094b3e

[12:43] *** frost-lab left
[13:11] <Geth> Â¦ rakudo: lizmat self-assigned Regression? Sequence of junctions wrapped in singleton lists https://github.com/rakudo/rakudo/issues/4039

[13:12] <lizmat> afk for a few hours&

[14:29] <vrurg> bartolin: will try to remember to look into it later today. But a general ticket on JVM issues would do better.

[14:29] <vrurg> bartolin: I mean, it's not always easy for me to follow/remember things on IRC.

[14:39] *** MasterDuke left
[15:00] <releasable6> Next release in â‰ˆ4 days and â‰ˆ3 hours. 3 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:03] <sena_kun> releasable6, status

[15:03] <releasable6> sena_kun, Next release in â‰ˆ4 days and â‰ˆ3 hours. 3 blockers. Changelog for this release was not started yet

[15:03] <releasable6> sena_kun, Details: https://gist.github.com/2b46dc8b45e3650f90d685bc0c106a55

[15:50] *** melezhik joined
[15:51] <melezhik> with RakuPlay one can replay unit tests against different commits and compare results. F.e.  http://100.21.64.139/sparky/report/RakuPlay-2/1190 VS http://100.21.64.139/sparky/report/RakuPlay-3/1191

[15:52] <melezhik> for this PR - https://github.com/rakudo/rakudo/pull/4035

[15:53] <melezhik> http://100.21.64.139/sparky/report/RakuPlay-3/1192

[15:59] <melezhik> https://twitter.com/melezhik2/status/1328729061137522690

[16:04] *** MasterDuke joined
[16:10] *** Altai-man joined
[16:12] *** patrickb joined
[16:13] *** sena_kun left
[16:20] *** MasterDuke left
[16:46] *** MasterDuke joined
[17:06] *** lucasb joined
[17:21] *** patrickb left
[17:33] <Geth> Â¦ rakudo: 3e10cc6f8a | (Elizabeth Mattijsen)++ | src/core.c/control.pm6

[17:33] <Geth> Â¦ rakudo: Fix handling of take / take-rw wrt lists

[17:33] <Geth> Â¦ rakudo: 

[17:33] <Geth> Â¦ rakudo: Fixes #4039

[17:33] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3e10cc6f8a

[17:33] <linkable6> RAKUDO#4039 [closed]: https://github.com/rakudo/rakudo/issues/4039 Regression? Sequence of junctions wrapped in singleton lists

[18:19] <melezhik> I fixed rakuplay, so it will print out the last statement result in a code snippet, so that `1.perl` would result `1` in stdout http://100.21.64.139/sparky/report/RakuPlay-1/1208

[18:30] *** Kaiepi left
[18:31] *** domidumont left
[18:45] <[Coke]> heh. I just did a run of 3.perl earlier before you did that. :)

[19:14] <bartolin> vrurg: I see. I've opened an issue for this problem: https://github.com/rakudo/rakudo/issues/4040

[19:29] <bartolin> And a second issue for a different failure mode: https://github.com/rakudo/rakudo/issues/4041 (but that's all)

[19:32] <Altai-man> [Coke], ping.

[19:43] *** finsternis joined
[20:10] <Geth> Â¦ nqp: 4a84c63b57 | (Christian BartolomÃ¤us)++ | t/docs/opcodes.t

[20:10] <Geth> Â¦ nqp: Add add_native_assign_op to keywords

[20:10] <Geth> Â¦ nqp: 

[20:10] <Geth> Â¦ nqp: This results in the following three opcodes being found for

[20:10] <Geth> Â¦ nqp: MoarVM, too:

[20:10] <Geth> Â¦ nqp: 

[20:10] <Geth> Â¦ nqp: * assign_i

[20:10] <Geth> Â¦ nqp: * assign_n

[20:10] <Geth> Â¦ nqp: * assign_s

[20:11] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/4a84c63b57

[20:11] <Geth> Â¦ nqp: 2bada3b59f | (Will Coleda)++ (committed using GitHub Web editor) | t/docs/opcodes.t

[20:11] <Geth> Â¦ nqp: Merge pull request #682 from usev6/doc_native_assign_op

[20:11] <Geth> Â¦ nqp: 

[20:11] <Geth> Â¦ nqp: Add add_native_assign_op to keywords

[20:11] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/2bada3b59f

[20:11] *** sena_kun joined
[20:12] *** Altai-man left
[20:30] <[Coke]> altai-man: pong.

[20:30] <tellable6> [Coke], I'll pass your message to Altai-man

[20:32] <lizmat> bisectable: use Test; dd &trait_mod:<is>(sub { }, :test-assertion)

[20:32] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[20:32] <bisectable6> lizmat, Output on all releases: https://gist.github.com/29ba1b8d4f52634c22f3f593bdb58f76

[20:32] <bisectable6> lizmat, Bisecting by exit code (old=2020.10 new=3e10cc6). Old exit code: 1

[20:32] <bisectable6> lizmat, bisect log: https://gist.github.com/09ff0cb76e366c724c2a7568a376de38

[20:32] <bisectable6> lizmat, (2020-10-30) https://github.com/rakudo/rakudo/commit/585db59c9a33c609beda49b68b76b6ce81c664ab

[20:32] <bisectable6> lizmat, Bisecting by output (old=2018.12 new=2019.03.1) because on both starting points the exit code is 1

[20:33] <bisectable6> lizmat, bisect log: https://gist.github.com/6cf89d74c64866e98a7e544904e73636

[20:33] <bisectable6> lizmat, bisect log: https://gist.github.com/01346386d10839d41063ef9540293a7a

[20:33] <bisectable6> lizmat, bisect log: https://gist.github.com/d5f84d0cc4192fbc16bf8367673210cd

[20:33] <bisectable6> lizmat, âš  New output detected, please review the results manually

[20:33] <bisectable6> lizmat, Output on all releases and bisected commits: https://gist.github.com/c20d851025ed9394547b3bbab24c261f

[20:33] <sena_kun> [Coke], o/

[20:33] <sena_kun> Can I PM?

[20:33] <lizmat> oops, looks like I triggered a worst case

[20:35] <[Coke]> sure

[20:35] <[Tux]> Rakudo v2020.10-113-g3e10cc6f8 (v6.d) on MoarVM 2020.10-31-gb13f6a24c

[20:35] <[Tux]> csv-test-xs-20      0.379 -  0.391

[20:35] <[Tux]> csv-ip5xs           0.837 -  0.854

[20:35] <[Tux]> test-t --race       0.855 -  0.884

[20:35] <[Tux]> test-t              1.957 -  1.985

[20:35] <[Tux]> test                7.664 -  7.825

[20:36] <[Tux]> csv-ip5xs-20        7.993 -  8.606

[20:36] <[Tux]> test-t-20 --race    9.490 -  9.728

[20:36] <[Tux]> csv-parser         25.376 - 26.170

[20:36] <[Tux]> test-t-20          33.078 - 33.896

[21:37] <Geth> Â¦ rakudo: dumarchie++ created pull request #4042: Make cas($target, &code) ~10% faster

[21:37] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4042

[22:01] <Geth> Â¦ roast: 861479b338 | (Daniel Green)++ | S03-operators/repeat.t

[22:01] <Geth> Â¦ roast: Test string repetition + concatenation lives

[22:01] <Geth> Â¦ roast: 

[22:01] <Geth> Â¦ roast: Closes https://github.com/rakudo/rakudo/issues/3660

[22:01] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/861479b338

[22:45] *** sena_kun left
[23:02] <Geth> Â¦ rakudo: usev6 self-assigned [JVM] Failing tests in S06-currying/positional.t after switch to new coercion semantics https://github.com/rakudo/rakudo/issues/4041

[23:49] <Geth> Â¦ rakudo: vrurg++ created pull request #4043: Fix incorrect assignment passing with coercion

[23:49] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4043

[23:56] <Geth> Â¦ roast: vrurg++ created pull request #700: Fix incorrect coercion spectest

[23:56] <Geth> Â¦ roast: review: https://github.com/Raku/roast/pull/700

