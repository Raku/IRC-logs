[00:20] *** evalable6 left
[00:20] *** linkable6 left
[00:20] *** linkable6 joined
[00:21] *** evalable6 joined
[01:13] *** sena_kun joined
[01:14] *** Altai-man_ left
[01:27] <tbrowder> .tell vrurg roast pr #660 has my changes which didn't get into your roast_657 branch merge

[01:27] <tellable6> tbrowder, I'll pass your message to vrurg

[03:11] *** lucasb left
[03:12] *** Altai-man_ joined
[03:14] *** sena_kun left
[03:33] *** maggotbrain left
[03:34] *** maggotbrain joined
[05:00] *** linkable6 left
[05:00] *** quotable6 left
[05:00] *** releasable6 left
[05:00] *** squashable6 left
[05:00] *** coverable6 left
[05:00] *** evalable6 left
[05:00] *** benchable6 left
[05:00] *** sourceable6 left
[05:00] *** shareable6 left
[05:00] *** bisectable6 left
[05:00] *** nativecallable6 left
[05:00] *** greppable6 left
[05:00] *** committable6 left
[05:00] *** unicodable6 left
[05:00] *** statisfiable6 left
[05:00] *** notable6 left
[05:00] *** bloatable6 left
[05:00] *** tellable6 left
[05:00] *** reportable6 left
[05:00] *** unicodable6 joined
[05:00] *** releasable6 joined
[05:00] *** sourceable6 joined
[05:01] *** evalable6 joined
[05:01] *** benchable6 joined
[05:01] *** squashable6 joined
[05:01] *** statisfiable6 joined
[05:01] *** quotable6 joined
[05:01] *** shareable6 joined
[05:01] *** tellable6 joined
[05:02] *** bisectable6 joined
[05:02] *** linkable6 joined
[05:02] *** reportable6 joined
[05:02] *** coverable6 joined
[05:02] *** greppable6 joined
[05:02] *** bloatable6 joined
[05:02] *** notable6 joined
[05:02] *** committable6 joined
[05:03] *** nativecallable6 joined
[05:12] *** sena_kun joined
[05:14] *** Altai-man_ left
[07:09] *** leont joined
[07:12] *** Altai-man_ joined
[07:14] *** sena_kun left
[07:43] <gfldex> raku: say Any.HOW;

[07:43] <evalable6> gfldex, rakudo-moar fcfc60b63: OUTPUT: «Perl6::Metamodel::ClassHOW.new␤»

[07:44] <gfldex> raku: say Any.HOW ~~ Perl6::Metamodel::ClassHOW;

[07:44] <evalable6> gfldex, rakudo-moar fcfc60b63: OUTPUT: «(exit code 1) Could not find symbol '&ClassHOW' in 'Metamodel'␤  in block <unit> at /tmp/I8eZCgorpk line 1␤␤»

[07:44] <gfldex> raku: say Metamodel::ClassHOW.gist;

[07:44] <evalable6> gfldex, rakudo-moar fcfc60b63: OUTPUT: «(ClassHOW)␤»

[07:44] <gfldex> raku: say Metamodel::ClassHOW.^name;

[07:44] <evalable6> gfldex, rakudo-moar fcfc60b63: OUTPUT: «Perl6::Metamodel::ClassHOW␤»

[07:45] <gfldex> is there a reason why .^name on metamodel stuff returns a package that does not exist?

[07:49] *** domidumont joined
[08:04] <nine> gfldex: because that's the class' real name

[08:06] <nine> m: module Foo { constant \Bar := Int; }; Foo::Bar.^name.say # same as this

[08:06] <camelia> rakudo-moar fcfc60b63: OUTPUT: «Int␤»

[08:07] *** JJMerelo joined
[08:08] <JJMerelo> .tell tbrowder not really preferred, but it's quite nice. Here's an explainer https://medium.com/@skaji/setup-raku-for-github-actions-2d16edf60885

[08:08] <tellable6> JJMerelo, I'll pass your message to tbrowder

[09:13] *** sena_kun joined
[09:14] *** Altai-man_ left
[09:46] <gfldex> raku: CORE::.values.elems.say for ^5;

[09:46] <evalable6> gfldex, rakudo-moar fcfc60b63: OUTPUT: «326␤521␤49␤667␤382␤»

[09:46] <gfldex> why is CORE unsure how big it is?

[09:46] <lizmat> gfldex: hash order is indeterminate

[09:47] <lizmat> and one of the values in CORE:: is IterationEnd, which will end the iteration and counting?

[09:47] <gfldex> o.O

[09:47] <lizmat> m: dd CORE::<IterationEnd>

[09:47] <camelia> rakudo-moar fcfc60b63: OUTPUT: «IterationEnd␤»

[09:48] <gfldex> well it's a Seq. So it cant know without counting.

[09:49] <gfldex> I'm trying already to get around IterationEnd in CORE:: by using loop.

[09:49] <gfldex> but loop needs to know when to stop.

[09:50] <lizmat> yeah, I think it has been determined that it is a case of DIHWIDT

[09:51] <gfldex> raku: CORE::.pairs.elems.say for ^5;

[09:51] <evalable6> gfldex, rakudo-moar fcfc60b63: OUTPUT: «691␤691␤691␤691␤691␤»

[09:51] <gfldex> :D

[09:52] <lizmat> yup, that should work  :-)

[09:52] <gfldex> TIMTOWTDI++

[09:53] <gfldex> This was getting in between me and my next blog post. And I can't have this!

[09:53] <lizmat> ah, 4 this week then ?

[09:58] *** dogbert17 left
[10:01] <gfldex> looks like it

[10:02] <gfldex> does `try .isa(Mu)` filter out all objects from nqp-land?

[10:04] <gfldex> raku: say CORE::.isa(Mu);

[10:04] <evalable6> gfldex, rakudo-moar fcfc60b63: OUTPUT: «True␤»

[10:04] <gfldex> raku: say CORE::.WHAT;

[10:04] <evalable6> gfldex, rakudo-moar fcfc60b63: OUTPUT: «(PseudoStash)␤»

[10:04] <gfldex> raku: say CORE.isa(Mu);

[10:04] <evalable6> gfldex, rakudo-moar fcfc60b63: OUTPUT: «(exit code 1) Cannot resolve caller isa(Perl6::…»

[10:04] <evalable6> gfldex, Full output: https://gist.github.com/1002e45bbf8ad40bc1fd1f583403e1ef

[10:05] <tbrowder> JJMerelo: where is the actual github-actions test matrx executed? on github?

[10:05] <tellable6> 2020-08-03T07:45:54Z #raku <JJMerelo> tbrowder I would say a totally new page, but it's probably better if you open an issue anyway and ask for opinions.

[10:05] <tellable6> 2020-08-03T08:08:19Z #raku-dev <JJMerelo> tbrowder not really preferred, but it's quite nice. Here's an explainer https://medium.com/@skaji/setup-raku-for-github-actions-2d16edf60885

[10:05] <gfldex> it's really difficult to get hold of all non-internals with Rakudo

[10:05] <JJMerelo> tbrowder right. 

[10:05] <tbrowder> wow, doesn' that put travis out of business?

[10:08] <lizmat> pretty much, I think

[10:08] <tbrowder> JJMerelo: ref s26 pr, i'll cancel that, and start from updated master. vrurg and i were too far apart and i've never worked on any branch but mine before

[10:08] <JJMerelo> tbrowder I honestly don't know. GitHub actions have lots of advantages; for instance, easy access to GitHub API. It's also faster than pushing somewhere else.

[10:09] <JJMerelo> tbrowder you probably don't need to. The code is fine, but the problem is that if you look up the commits included in it, there are lots of them by vrurg, which probably indicates you did a merge without rebase

[10:09] <tbrowder> ref doc chunk for pod testing, sounds good, thnx

[10:09] <JJMerelo> tbrowder no problem. Anything I can do to help.

[10:10] <JJMerelo> There are many CI services out there, including Azure's. Also, not everyone uses GitHub (lots of people do, though).

[10:11] <JJMerelo> That, combined with the fact that GitHub got its own container registry, well, everything in a single place instead of Travis/Docker Hub/whatever API.

[10:11] <tbrowder> ref 21 advent, yr article on pod looks good to me. don't remember if i saw introspection mentioned.

[10:11] <JJMerelo> tbrowder you've looked at the drafts? It's actually by finanalyst. 

[10:12] <JJMerelo> tbrowder anyway, I prefer people talking about what they love, and know, than not covering new RFCs because any of them has already been mentioned

[10:12] <tbrowder> oh, great. richard is very interested in pod

[10:13] <JJMerelo> I love Travis, it's an European company and has got of stuff going on for it. Lots of community-supported languages, for instance. But sadly, for most new stuff I'm doing it with GitHub actions.

[10:13] <tbrowder> ok, later, working on s26 test...

[10:13] <JJMerelo> tbrowder my point is that if you want to cover one of those RFCs, please feel free. Richard's article is not focused on any one of them, specifically.

[10:14] <tbrowder> we'll see..."honey do" list is in the way...

[10:16] <JJMerelo> :-)  Thanks tbrowder

[10:16] <JJMerelo> tbrowder also thanks for the domain and the premium stuff. It's working nicely :-)

[10:18] <tbrowder> great, and you're welcome. thnx for the shepherding of it

[10:28] *** JJMerelo left
[11:12] *** Altai-man_ joined
[11:14] *** sena_kun left
[11:54] *** lichtkind joined
[12:41] <lizmat> Altai-man_ am I correct in not seeing an update on the --profile issue ?

[12:43] <Altai-man_> lizmat, https://github.com/rakudo/rakudo/issues/3824#issuecomment-666962287 <- is the last news.

[12:43] <lizmat> ack

[12:44] <Altai-man_> Sadly, I cannot fix stuff myself, really, so problem solving does depend on people contributing their time and efforts.

[12:55] <lizmat> yeah  :-(

[12:55] <lizmat> notable6: weekly

[12:55] <notable6> lizmat, No notes for “weekly”

[12:55] <lizmat> looks like a quiet week then

[12:56] <AlexDaniel`> notable: Raku Steering Council election rescheduled

[12:56] <notable6> AlexDaniel`, Noted! (weekly)

[12:57] <AlexDaniel`> lizmat: how about this? :)

[12:57] <lizmat> notable6: weekly reset

[12:57] <notable6> lizmat, Moved existing notes to “weekly_2020-08-03T12:57:30Z”

[12:57] <lizmat> it's already in there

[12:58] <AlexDaniel`> okay. Point is, it wasn't exactly quiet, just nobody weekly-ed anything :)

[12:58] <lizmat> yeah... I know... it's quite a sizeable RWN again :-)

[13:13] *** sena_kun joined
[13:14] *** Altai-man_ left
[13:20] <lizmat>  and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/08/03/2020-31-twentytwenty/

[13:24] <[Coke]> lizmat: that docker demystified book - there's a link to amazon that doesn't work, tried a few of the other links, can't find the book.

[13:51] <rypervenche> Is this the correct link for the ebook? https://gumroad.com/l/BkxwQ

[14:20] *** Xliff left
[14:38] <[Coke]> rypervenche: looks more likely than the other links!

[14:38] <[Coke]> danke.

[15:12] *** Altai-man_ joined
[15:14] *** sena_kun left
[15:26] *** patrickb joined
[15:39] *** raku-bridge left
[15:39] *** raku-bridge joined
[15:39] *** raku-bridge left
[15:39] *** raku-bridge joined
[16:15] <timotimo> core has StopIteration in it

[16:16] <timotimo> oops

[16:23] *** JJMerelo joined
[16:24] <JJMerelo> releasable6: status

[16:24] <releasable6> JJMerelo, Next release in ≈19 days and ≈2 hours. 1 blocker. Changelog for this release was not started yet

[16:24] <releasable6> JJMerelo, Details: https://gist.github.com/529e54eeadc3626f3f854208be756dcf

[16:29] <Geth> ¦ roast: tbrowder++ created pull request #661: S26t12merge

[16:29] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/661

[16:45] *** JJMerelo left
[16:50] <patrickb> timotimo: Can I persuade you to add some documentation for the following ops to nqp/docs/ops.markdown: [bind|get][cur]?hllsym, usecompile[e|r]hllconfig?

[16:51] <lizmat> [Coke]: updated the link

[16:53] <patrickb> Hm. Also how can I store an object so it's available in both nqp and raku land? I. e. I have a class in nqp that's used in nqp and I want to override it in rakudo and then have nqp code only see the overridden class.

[16:54] <timotimo> ok

[16:55] <patrickb> Could bin/gethllsym be used for that?

[16:55] <timotimo> i don't know what needs a moar&jvm and what doesn't

[16:55] <timotimo> this is about the js backend?

[16:57] <patrickb> all of them

[16:59] <patrickb> I have added an HLL::SysConfig class that hands out build config stuff and is used in NQP. Now I subclassed it in Perl6::SysConfig in rakudo and use it there for the same purpose. But I now want nqp to use my overridden class.

[16:59] <patrickb> Currently the code is accessing the class (only static methods) directly. e.g. `Perl6::SysConfig.rakudo-home()`

[17:01] <patrickb> Does `get/bindhllsym` provide some global Compiler independent information store? If yes I could just add a symbol there and overwrite in rakudo.

[17:08] <[Coke]> lizmat: danke!

[17:09] <Geth> ¦ nqp: 39ba5f1de6 | (Timo Paulssen)++ | docs/ops.markdown

[17:09] <Geth> ¦ nqp: doc get/bindhllsym / curhllsym and compiler/compileehllconfig ops

[17:09] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/39ba5f1de6

[17:10] <timotimo> patrickb: the hll configs are two sets, compiler's config and compilee's config

[17:12] <patrickb> Hm. So none of those functions can be used to store stuff both rakudo and nqp can access uniformly. Unless I resurrect the idea of a "default" compiler that does nothing but is used as a hook to hang hllsymbols on. Hm. Not sure how clean that is, but is currently my best bet...

[17:12] *** domidumont left
[17:12] *** sena_kun joined
[17:13] <patrickb> I'll type something together.

[17:14] *** Altai-man_ left
[17:15] <timotimo> IMO, any hack that prevents us from having to build an extra system into moar or nqp just to hold on to a single string would be fine with me

[17:17] *** MasterDuke left
[17:18] <timotimo> d we have something against an environment variable?

[17:18] <patrickb> It shouldn't be user visible...

[17:21] <patrickb> timotimo: I'll finish up a WIP PR. I'd value a review.

[17:21] <timotimo> we can have a ridiculous env var key that a user would never reasonably use and just toss it out at process start time

[17:21] <timotimo> like, ninetynine different whitespace characters

[17:21] <patrickb> Compared to that, what's so bad about having a default compiler object and sticking a hllsym to it?

[17:22] <timotimo> don't think there's anything bad about that

[17:22] <timotimo> may want to set it, enter compilee mode, set it again, leave compilee mode

[17:22] <timotimo> just to be extra sure

[17:25] <patrickb> Not sure I understood that. What's the compilee mode about

[17:25] <patrickb> ?

[17:25] <timotimo> did you see my docs? :)

[17:25] <patrickb> parts :-)

[17:25] <timotimo> the part about usecompilermode/compileemode explains it a little

[17:25] <patrickb> ah, it's a stack

[17:30] <timotimo> a flattened stack, kind of

[17:30] <timotimo> a stack of barrels where every barrel above the second one has a hole in the floor

[17:35] <patrickb> The concept seems similar to what vrurg did with configuration for the build system.

[17:35] <vrurg> Aha, looks familiar. :)

[17:35] <tellable6> 2020-08-03T01:27:53Z #raku-dev <tbrowder> vrurg roast pr #660 has my changes which didn't get into your roast_657 branch merge

[18:20] *** domidumont joined
[18:21] *** lichtkind left
[18:25] *** lichtkind joined
[18:25] *** MasterDuke joined
[18:27] *** domidumont left
[18:48] <Geth> ¦ nqp: patrickbkr++ created pull request #653: Add a HLL::SysConfig class

[18:48] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/653

[18:50] <Geth> ¦ roast/roast_657: 8f544578f6 | (Vadim Belman)++ (committed using GitHub Web editor) | 29 files

[18:50] <Geth> ¦ roast/roast_657: Merge pull request #658 from Raku/roast_657

[18:50] <Geth> ¦ roast/roast_657: 

[18:50] <Geth> ¦ roast/roast_657: Putting a few things in order

[18:50] <Geth> ¦ roast/roast_657: review: https://github.com/Raku/roast/commit/8f544578f6

[18:50] <Geth> ¦ roast/roast_657: 4411b4c660 | (Vadim Belman)++ | spectest.data

[18:50] <Geth> ¦ roast/roast_657: Add S14-traits/package.t

[18:50] <Geth> ¦ roast/roast_657: review: https://github.com/Raku/roast/commit/4411b4c660

[18:50] <Geth> ¦ roast/roast_657: 4473a8016e | (Vadim Belman)++ | 3 files

[18:50] <Geth> ¦ roast/roast_657: Delete obsoleted tests

[18:50] <Geth> ¦ roast/roast_657: review: https://github.com/Raku/roast/commit/4473a8016e

[18:52] <Geth> ¦ roast: vrurg++ created pull request #662: Further cleanup

[18:52] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/662

[18:54] <Geth> ¦ rakudo: vrurg++ created pull request #3837: Fix incorrect method call

[18:54] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3837

[18:54] <Geth> ¦ roast: 4411b4c660 | (Vadim Belman)++ | spectest.data

[18:54] <Geth> ¦ roast: Add S14-traits/package.t

[18:54] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/4411b4c660

[18:54] <Geth> ¦ roast: 4473a8016e | (Vadim Belman)++ | 3 files

[18:54] <Geth> ¦ roast: Delete obsoleted tests

[18:55] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/4473a8016e

[18:55] <Geth> ¦ roast: b64bcd51bc | (Vadim Belman)++ (committed using GitHub Web editor) | 4 files

[18:55] <Geth> ¦ roast: Merge pull request #662 from Raku/roast_657

[18:55] <Geth> ¦ roast: 

[18:55] <Geth> ¦ roast: Further cleanup

[18:55] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/b64bcd51bc

[18:55] <Geth> ¦ rakudo: patrickbkr++ created pull request #3838: Add a Perl6::SysConfig class

[18:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3838

[19:12] *** Altai-man_ joined
[19:14] *** sena_kun left
[20:46] *** yuplushi left
[21:46] <Geth> ¦ rakudo: 02a834428f | (Vadim Belman)++ | src/Perl6/Actions.nqp

[21:46] <Geth> ¦ rakudo: Fix incorrect method call

[21:46] <Geth> ¦ rakudo: 

[21:46] <Geth> ¦ rakudo: `World::throw` needs grammar object as the first parameter

[21:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/02a834428f

[21:46] <Geth> ¦ rakudo: d4bac47ffa | (Vadim Belman)++ (committed using GitHub Web editor) | src/Perl6/Actions.nqp

[21:46] <Geth> ¦ rakudo: Merge pull request #3837 from vrurg/roast_657

[21:46] <Geth> ¦ rakudo: 

[21:46] <Geth> ¦ rakudo: Fix incorrect method call

[21:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d4bac47ffa

[22:13] *** sena_kun joined
[22:14] *** Altai-man_ left
[22:17] *** lichtkind left
[22:48] *** travis-ci joined
[22:48] <travis-ci> Rakudo build failed. Vadim Belman 'Merge pull request #3837 from vrurg/roast_657

[22:48] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/714628450 https://github.com/rakudo/rakudo/compare/fcfc60b63f4a...d4bac47ffadf

[22:48] *** travis-ci left
[23:21] *** patrickz joined
[23:25] *** patrickb left
[23:25] *** yuplushi joined
[23:43] *** toddr left
[23:54] *** patrickz left
