[00:04] *** pamplemousse left
[00:06] *** pamplemousse joined
[00:34] *** patrickz left
[01:06] <Geth> ¬¶ rakudo/hyper_codegen: 5adcc7ce47 | (Timo Paulssen)++ | src/Perl6/Optimizer.nqp

[01:06] <Geth> ¬¶ rakudo/hyper_codegen: put a comment because docs are good

[01:06] <Geth> ¬¶ rakudo/hyper_codegen: review: https://github.com/rakudo/rakudo/commit/5adcc7ce47

[01:06] <Geth> ¬¶ rakudo/hyper_codegen: 371a093cec | (Timo Paulssen)++ | src/Perl6/Optimizer.nqp

[01:06] <Geth> ¬¶ rakudo/hyper_codegen: initial impl of .reverse support

[01:06] <Geth> ¬¶ rakudo/hyper_codegen: review: https://github.com/rakudo/rakudo/commit/371a093cec

[01:48] *** MasterDuke left
[03:44] *** pamplemousse left
[03:56] *** hungrydonkey joined
[04:58] *** hungrydonkey left
[05:20] *** hungrydonkey joined
[05:33] *** hungrydonkey left
[06:56] *** robertle joined
[07:35] *** MasterDuke joined
[08:39] <MasterDuke> hm. nqp can't do multis on scalar vs array?

[08:48] *** jjmerelo joined
[08:51] <timotimo> nqp doesn't have scalars :D

[08:56] <MasterDuke> yeah. i'm "manually" creating multis instead. just functions with different names

[08:56] <lizmat> Files=1305, Tests=111264, 215 wallclock secs (28.86 usr  8.02 sys + 3005.76 cusr 276.56 csys = 3319.20 CPU)

[09:04] *** jjmerelo left
[09:16] <[Tux]> Rakudo version 2020.05-50-gd7ce52bfc - MoarVM version 2020.05-8-ga48790029

[09:16] <[Tux]> csv-test-xs-20      0.386 -  0.389

[09:16] <[Tux]> test-t --race       0.994 -  0.997

[09:16] <[Tux]> csv-ip5xs           1.070 -  1.098

[09:16] <[Tux]> test-t              1.891 -  1.907

[09:16] <[Tux]> test                7.618 -  7.710

[09:16] <[Tux]> csv-ip5xs-20        9.227 -  9.526

[09:16] <[Tux]> test-t-20 --race    9.877 - 10.059

[09:16] <[Tux]> csv-parser         24.816 - 24.858

[09:16] <[Tux]> test-t-20          31.935 - 32.697

[09:30] <timotimo> i forgot the exact details, but nqp supports multi methods that differentiate on just one argument? or only the first argument?

[09:41] *** jjmerelo joined
[09:47] <jjmerelo> I just signed up for the Codespaces beta, by GitHub. I included "Raku" as the language I use.

[09:47] <tellable6> 2020-05-07T21:38:01Z #raku-dev <AlexDaniel> jjmerelo: and yes, please, let's redirect https://docs.perl6.org/

[09:47] <AlexDaniel> jjmerelo: yeah what about that

[09:47] <jjmerelo> Here's the link https://github.com/features/codespaces 

[09:48] <jjmerelo> AlexDaniel if enough of us request it, maybe it will eventually be included.

[09:48] <AlexDaniel> jjmerelo: no I mean the redirect

[09:53] <AlexDaniel> jjmerelo: hello?

[09:53] <AlexDaniel> jjmerelo: can we redirect the docs to raku.org domain?

[09:54] <jjmerelo> AlexDaniel I don't have access to the DNS. I can create a top-level redirect in the .htaccess file

[09:54] <AlexDaniel> jjmerelo: why didn't we do it in the first place?

[09:55] <jjmerelo> Because plans https://github.com/Raku/doc/issues/2983

[09:56] <jjmerelo> Wait, not those plans

[09:57] <jjmerelo> https://github.com/Raku/doc/issues/3046

[09:59] <jjmerelo> "perl 6" is almost totally flat as a search term https://trends.google.es/trends/explore?geo=ES&q=raku,%22perl%206%22

[09:59] <jjmerelo> So I guess it's about time.

[10:00] <jjmerelo> Still, it's more efficient to do a DNS redirect than a http redirect, and I can't do that.

[10:00] <jjmerelo> I'll email rba

[10:05] *** Altai-man_ joined
[10:05] <AlexDaniel> good.

[10:05] <AlexDaniel> .tell rba https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-05-08#l41

[10:05] <tellable6> AlexDaniel, I'll pass your message to rba

[10:06] <nine> jjmerelo: I don't think that Google link tells us anything. For one it's restricted to Spain. More importantly it shows a steady interest in Raku for the past 5 years with no change whatsoever by our language rename

[10:07] <nine> So really you're measuring interest in Perl 6 versus pottery. A comparison that doesn't make us look all that good...

[10:08] <jjmerelo> nine that's right. So, well, I don't know.

[10:09] <jjmerelo> My intention with all this was not to lose targets for the search "perl 6" while gathering some for "raku"

[10:09] <nine> Yeah, never throw away search engine mojo

[10:09] <jjmerelo> Exactly.

[10:09] <jjmerelo> But now, it's a toss up

[10:10] <jjmerelo> Searches for "perl 6" still return docs.perl6.org pages

[10:10] <jjmerelo> Searches for "raku" return both.

[10:11] <jjmerelo> If we redirect ones to the other, we really need to make sure that perl 6 is somewhere, because we'll be penalyzed if we don't

[10:11] <jjmerelo> So, for instance here https://www.google.com/search?client=ubuntu&channel=fs&q=%22perl+6%22+input+output&ie=utf-8&oe=utf-8

[10:11] <AlexDaniel> all I see is that it links to the old version of our docs

[10:12] <AlexDaniel> the one we no longer update

[10:12] <jjmerelo> There's no .raku.org page anywhere. Just imagine that all of a sudden all docs.perl6.org become docs.raku.org

[10:12] <nine> That's definitely an issue

[10:13] <jjmerelo> Then Google, in all its infinite wisedom (wiseness?), slams all .raku.org pages down _together with perl6.org pages_

[10:13] <jjmerelo> That's what I'm afraid of

[10:13] <jjmerelo> the problem is that if by now raku.org pages are not higher up in there, they're never gonna be

[10:14] <jjmerelo> AlexDaniel but there's a note in every one of those pages pointing to the new version, and saying it's deprecated

[10:14] <jjmerelo> I have personally edited many questions and answers in stackoverflow.org to make sure they point to the new pages.

[10:15] <jjmerelo> It's probably a good idea to do the redirect now.

[10:15] <jjmerelo> But along with it it's probably a good idea also to check out our raku pages and see that they become a good search target if people look up "perl6"

[10:15] <AlexDaniel> surely they'll never be there because I keep clicking on perl6 links all the time

[10:15] <jjmerelo> Which they are not now...

[10:15] <jjmerelo> I mean, SEO is an arcane art.

[10:16] <jjmerelo> But so arcane that it might bite you in the backside if you are not careful

[10:16] <AlexDaniel> rba: TL;DR ‚ÄúIt's probably a good idea to do the redirect now.‚Äù

[10:16] *** sena_kun joined
[10:18] <jjmerelo> I'm anyway opening an issue to see if we juice up the docs for the "perl 6" query

[10:18] <jjmerelo> We have tried to so completely erase it, that we might have gone a bit too far, search-engine wise

[10:18] *** Altai-man_ left
[10:24] <jjmerelo> Please help

[10:25] <jjmerelo> https://github.com/Raku/doc/issues/3377

[10:25] <lizmat> could we add "perl6" to the meta of all doc pages ?

[10:25] * lizmat has little current SEO knowledge

[10:33] <jjmerelo> lizmat I think we do already, but let me check

[10:37] <jjmerelo> lizmat um no we don't. Good catch.

[10:47] *** MasterDuke left
[10:49] <nine> I'd be surprised if search engines paid any attention to meta tags

[10:58] <jjmerelo> nine it's the only thing we have control over...

[10:59] <jjmerelo> Also, I'm moving https://github.com/perl6/Pod-To-HTML to the Raku organization. Is it OK for everyone?

[11:03] <lizmat> jjmerelo: +1

[11:04] <jjmerelo> nine they use now BART natural language models and things like that, so they've probably figured out that raku language === Perl 6

[11:04] <jjmerelo> Anyway, site meta data help...

[11:05] <Geth> ¬¶ rakudo: 9f7c9278e7 | (Elizabeth Mattijsen)++ | src/core.c/Supply-coercers.pm6

[11:05] <Geth> ¬¶ rakudo: Add Supply.rotate

[11:05] <Geth> ¬¶ rakudo: 

[11:05] <Geth> ¬¶ rakudo: For consistency: should be "lazy" for positive values of rotation.

[11:05] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/9f7c9278e7

[11:11] <Geth> ¬¶ rakudo: 0ca0f58722 | (Elizabeth Mattijsen)++ | src/core.c/Supply-coercers.pm6

[11:11] <Geth> ¬¶ rakudo: More effective way of handling different rotation values

[11:11] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/0ca0f58722

[11:18] <AlexDaniel> sourceable6: <a b c>.rotate()

[11:18] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/0ca0f58/src/core.c/List.pm6#L1139

[11:29] <robertle> lizmat: in case you didn't see my message yesterday: I have a first sketch of the content store we taked about: https://github.com/robertlemmen/svc-shelve6

[11:29] <lizmat> robertle: didn't miss it, but it did fell through the cracks... will look at it later today

[11:31] <robertle> no worries

[11:31] <AlexDaniel> robertle: don't know if it's of any use for you, but see also https://crai.foldr.nl/

[11:32] <robertle> AlexDaniel: will investigate, looks interesting! thanks

[11:32] <robertle> working on zef and authentication now

[11:32] <AlexDaniel> chloekek: https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-05-08#l111

[11:32] <tellable6> AlexDaniel, I'll pass your message to chloekek

[11:33] <robertle> regarding the SEO: I have no idea about any web stuff, but at work we had a problem with a rebranding, where google down-rated us because the different domains with the same content made it look like link farming. 

[11:33] <AlexDaniel> yeah

[11:34] <robertle> we had to add some html meta info, I think it's this: https://moz.com/learn/seo/canonicalization

[11:34] <AlexDaniel> just adding a redirect should be ok too

[11:35] <robertle> is anyone looking at the statistics from google itself? I guess so...

[11:37] *** MasterDuke joined
[12:15] *** Altai-man_ joined
[12:18] *** sena_kun left
[12:22] *** bloatable6 left
[12:22] *** bloatable6 joined
[13:10] *** jjmerelo left
[13:39] *** pamplemousse joined
[13:44] *** sivoais left
[13:44] *** sivoais joined
[14:07] <MasterDuke> are there a couple .rotate related tests currently expected to fail?

[14:17] *** sena_kun joined
[14:18] *** Altai-man_ left
[14:23] <lizmat> no?

[14:23] <lizmat> MasterDuke: not if you have an up-to-date roast, that is

[14:49] <MasterDuke> oh, i think i just don't have your latest rakudo commits

[14:50] <Geth> ¬¶ nqp: 4da1580a6d | (Patrick B√∂ker)++ | Configure.pl

[14:50] <Geth> ¬¶ nqp: Document `--relocatable` flag

[14:50] <Geth> ¬¶ nqp: 

[14:50] <Geth> ¬¶ nqp: Fixes #627

[14:50] <Geth> ¬¶ nqp: review: https://github.com/Raku/nqp/commit/4da1580a6d

[14:50] <linkable6> NQP#627 [closed]: https://github.com/Raku/nqp/issues/627 Document the --relocatable option in Configure.pl

[15:19] *** jjmerelo joined
[15:19] <Geth> ¬¶ rakudo: patrickbkr++ created pull request #3675: Azure pipelines

[15:19] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/3675

[15:28] *** guifa2 left
[16:16] *** Altai-man_ joined
[16:19] *** sena_kun left
[16:47] *** finsternis joined
[16:48] <Geth> ¬¶ roast: 778aef723c | (Elizabeth Mattijsen)++ | 2 files

[16:48] <Geth> ¬¶ roast: Add tests for Supply.rotate

[16:48] <Geth> ¬¶ roast: review: https://github.com/Raku/roast/commit/778aef723c

[17:35] <jjmerelo> robertle I didn't know about that link. If you do a redirect do you need to add it too?

[17:35] <jjmerelo> robertle I have just looked at google trends.

[17:58] *** patrickb joined
[18:03] <patrickb> ping vrurg

[18:04] <vrurg> pong?

[18:05] <patrickb> Hi :-)

[18:06] <patrickb> I'm hunting another build system bug

[18:06] <vrurg> Hi! :)

[18:06] <patrickb> the config var static-rakudo-home is set in $config (so backend unspecific), but needs to be set to '' on moar when doing a relocatable build.

[18:07] <patrickb> That variable is interpolated in main-version.in

[18:07] <patrickb> That's backend unspecific.

[18:09] <patrickb> https://github.com/rakudo/rakudo/blob/master/tools/lib/NQP/Config/Rakudo.pm#L163

[18:09] <patrickb> ^ That's the evil line that is giving me headaches.

[18:10] <vrurg> patrickb: override it in configure_moar_backend method. Set in $imoar which is {impls}{moar}

[18:12] <patrickb> vrurg: That's already happening: https://github.com/rakudo/rakudo/blob/master/tools/lib/NQP/Config/Rakudo.pm#L350

[18:12] <vrurg> hm, actually, it is set already, line 349

[18:12] <vrurg> Aha

[18:12] <patrickb> AFAIK the problem is that main-version.in is backend unspecific

[18:13] <vrurg> patrickb: we have to make it backend-specific then, if it has to be different for moar.

[18:14] <patrickb> I'm not sure about that anymore.

[18:14] <vrurg> But not all of it.

[18:14] <patrickb> Maybe it's just a mistake to set it unconditionally.

[18:14] <patrickb> I can just set it to '' if it's a relocatable build globaly

[18:15] <vrurg> No. If it's a backend-related condition ‚Äì then it belongs to configure_<backend>_backend. No exceptions.

[18:16] <vrurg> We just need to find out a best way to make individual main-version per backend. 

[18:16] <patrickb> I'm not sure it's a backend-related condition.

[18:16] <vrurg> Why so? As long as you say it is for moar only.

[18:17] *** sena_kun joined
[18:17] <patrickb> Relocatable builds should never need a static-rakudo-home.

[18:18] <patrickb> Currently 'static-rakudo-home' is set to a specific path unconditionally in global context. I'm not sure what I was thinking...

[18:18] *** Altai-man_ left
[18:19] <vrurg> Ok, but we do have the variable in hllconfig already. If it's not relevant we could keep it empty. Or we totally remove it hoping that nobody else started using it.

[18:19] <patrickb> We need it in the non-relocatable case

[18:19] <patrickb> So it's not wrong to have it in hll-config

[18:20] <vrurg> Then relocatable case will have it but empty.

[18:20] <patrickb> Yes. That's how I intended it.

[18:21] <patrickb> https://github.com/rakudo/rakudo/blob/master/src/main.nqp#L35

[18:21] <vrurg> Let's clearly define for ourselves first: what is the right value of the variable? When does it get this value?

[18:21] <patrickb> ^ Notice the || instead of // there

[18:22] <vrurg> patrickb: || is fine and will play nice with '' for relocatables.

[18:22] <patrickb> In non-relocatable builds it should be the path. In relocatable builds it should be ''.

[18:23] <patrickb> From what I think this should always be true. Irrespective of backend.

[18:24] <vrurg> Ok, what's the problem with setting it in configure_refine_vars?

[18:25] <patrickb> I think none.

[18:25] <patrickb> I guess my biggest problem is not remembering what I was thinking.

[18:25] <vrurg> And, BTW, there is a risk of discrepancy here. because same variable is set globally and per-backend. So, if used in a moar template it might differ from what's used in hll_config.

[18:25] <patrickb> Let this be a lesson to me to write better commit messages.

[18:26] <vrurg> Oh, yes! Comments and commit message are our everything! :)

[18:26] <patrickb> vrurg: I'll get rid of that. I suspect I wrote that code when I didn't yet understand the layering thing of our build system.

[18:27] <vrurg> Understandable. It took me time to think it out in first place because it had to cover the layers of the build system.

[18:30] <patrickb> vrurg: I think we hit the problem of backend specific stuff in main-version.in with the static-nqp-home variable.

[18:31] <patrickb> That variable is really backend specific (one could have a non relocatable JVM and a relocatable Moar in the same build).

[18:31] <patrickb> But it's also part of the hll-config.

[18:32] <patrickb> How would I go about fixing that? Just duplicating main-version.in into the backend template folders?

[18:32] <AlexDaniel> patrickb: btw, why don't we do --relocatable by default?

[18:32] <AlexDaniel> patrickb: what's the downside?

[18:32] <patrickb> AlexDaniel: It's not supported on OpenBSD and AIX. So making it the default would be a half backed solution.

[18:32] <vrurg> patrickb: No need to duplicate it. Just make the generation of main.nqp backend specific. In this case the variable will be looked up in a backend layer first.

[18:33] <patrickb> I do that by moving the make rule that does the generation to the backend specific Makefile.in files?

[18:33] <timotimo> whoa, when did a "my" become state-like inside -ne or -pe?

[18:34] <vrurg> And the inclusion macro finds a template in the common directory if it's missing in backend's one.

[18:34] <vrurg> patrickb: Yes, just moving should be sufficient.

[18:34] <patrickb> OK. I'll give it a try. Thank you for thinking this through with me.

[18:35] <vrurg> patrickb: you're always welcome!

[18:36] <timotimo> bisectable6: say run <<perl6 -ne '(my $i)++; END say $i'>>, :in((^20).join("\n"))

[18:36] <bisectable6> timotimo, Bisecting by output (old=2015.12 new=0ca0f58) because on both starting points the exit code is 0

[18:37] <bisectable6> timotimo, bisect log: https://gist.github.com/9d7fd5a1f0e82c3196b01aa7bab3c50a

[18:37] <bisectable6> timotimo, (2016-09-17) https://github.com/rakudo/rakudo/commit/c4fd9f515d49deea06d1462057e820608041eb9b

[18:37] <timotimo> did it wrong

[18:37] <patrickb> vrurg: How is your stress level? I remember you writing you had no time at all for a couple of weeks? DId things calm down a bit?

[18:38] <timotimo> committable6: my $p = run <<perl6 -ne '(my $i)++; END say $i'>>, :in((^20).join("\n")), :out; say $p.out.slurp()

[18:38] <committable6> timotimo, ¬¶my: ¬´Cannot find this revision (did you mean ‚Äúnom‚Äù?)¬ª

[18:38] <timotimo> committable6: HEAD my $p = run <<perl6 -ne '(my $i)++; END say $i'>>, :in((^20).join("\n")), :out; say $p.out.slurp()

[18:38] <committable6> timotimo, ¬¶HEAD(0ca0f58): ¬´(Any)‚ê§‚ê§¬ª

[18:38] <AlexDaniel> timotimo: you can't :in like that

[18:39] <timotimo> aw

[18:39] <AlexDaniel> timotimo: spurt it into /tmp and give it an IO

[18:39] <timotimo> committable6: HEAD my $p = run <<perl6 -ne '(my $i)++; END say $i'>>, :in, :out; $p.in.say($_) for ^20; $p.in.close(); say $p.out.slurp()

[18:39] <committable6> timotimo, ¬¶HEAD(0ca0f58): ¬´20‚ê§‚ê§¬ª

[18:39] <timotimo> bisectable: my $p = run <<perl6 -ne '(my $i)++; END say $i'>>, :in, :out; $p.in.say($_) for ^20; $p.in.close(); say $p.out.slurp()

[18:39] <bisectable6> timotimo, Bisecting by exit code (old=2015.12 new=0ca0f58). Old exit code: 1

[18:39] <timotimo> oops?

[18:39] <vrurg> patrickb: No changes so far. Preparing for my talk at TPCiC. 

[18:40] <timotimo> committable6: 2018.01 my $p = run <<perl6 -ne '(my $i)++; END say $i'>>, :in, :out; $p.in.say($_) for ^20; $p.in.close(); say $p.out.slurp()

[18:40] <committable6> timotimo, ¬¶2018.01: ¬´20‚ê§‚ê§¬ª

[18:40] <timotimo> committable6: 2017.10 my $p = run <<perl6 -ne '(my $i)++; END say $i'>>, :in, :out; $p.in.say($_) for ^20; $p.in.close(); say $p.out.slurp()

[18:40] <committable6> timotimo, ¬¶2017.10: ¬´20‚ê§‚ê§¬ª

[18:40] <vrurg> patrickb: but a GIF at https://github.com/vrurg/raku-Vikna shows a bit of what I have already. :)

[18:40] <patrickb> vrurg: Well, that at least sounds like a fun thing to do.

[18:40] <bisectable6> timotimo, bisect log: https://gist.github.com/72492d043bde332860951f3b24771d3c

[18:40] <bisectable6> timotimo, (2017-04-12) https://github.com/rakudo/rakudo/commit/f1b4af7af4bd0f98a124a7d2c2fbcdd3da367351

[18:40] <patrickb> What's the topic?

[18:40] <timotimo> oh did i get the command wrong perhaps? because i used << >> and a $i in there?!

[18:40] <AlexDaniel> timotimo: slurp-rest is the thing I think

[18:40] <patrickb> Ah! Your event based console library!

[18:40] <vrurg> patrickb: it is.

[18:41] <AlexDaniel> timotimo: run <perl6 -ne>, ÔΩ¢(my $i)++; END say $iÔΩ£

[18:41] <timotimo> sorry for the noise; has this really always worked like that?

[18:41] <AlexDaniel> committable6: 6c my $p = run <<perl6 -ne '(my $i)++; END say $i'>>, :in, :out; $p.in.say($_) for ^20; $p.in.close(); say $p.out.slurp-rest()

[18:41] <AlexDaniel> committable6: 6c my $p = run <perl6 -ne>, ÔΩ¢(my $i)++; END say $iÔΩ£, :in, :out; $p.in.say($_) for ^20; $p.in.close(); say $p.out.slurp-rest()

[18:41] <vrurg> patrickb: And I finally have the basics, can do testing. Today start with basic documentation ‚Äì and then it is time to make a presentation, eventually.

[18:41] <committable6> AlexDaniel, https://gist.github.com/b1f582775d2723c160f72a8026671751

[18:42] <committable6> AlexDaniel, https://gist.github.com/bb91750db8918ed91e436b53385d2ff8

[18:42] <patrickb> vrurg: I'm really looking forward to it!

[18:42] <AlexDaniel> bisect: my $p = run <perl6 -ne>, ÔΩ¢(my $i)++; END say $iÔΩ£, :in, :out; $p.in.say($_) for ^20; $p.in.close(); say $p.out.slurp-rest()

[18:42] <bisectable6> AlexDaniel, Bisecting by output (old=2015.12 new=0ca0f58) because on both starting points the exit code is 0

[18:42] <timotimo> 2016.08 seems to be the first release with it

[18:42] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/52ab151b1683ac122926f79ec792cd6c

[18:42] <bisectable6> AlexDaniel, (2016-08-03) https://github.com/rakudo/rakudo/commit/5e61516a3fd290d93a7e18899483ccb2b9ba3a30

[18:43] <vrurg> patrickb: the biggest thing: there is no native lib backing it. Pure Raku and nqp::ops at few critical places.

[18:43] <AlexDaniel> timotimo: so what should be the right answer? :)

[18:43] <AlexDaniel> timotimo: both feel a bit wrong to me

[18:44] <patrickb> vrurg: So there is no ncurses backing this?

[18:45] <timotimo> it'd be kind of cool not to have to use state definitions in -ne and -pe

[18:45] <vrurg> patrickb: no. I'm currently using Terminal::Print for basic ANSI sequences, but hope to get it fully implemented by a screen driver at some point.

[18:45] * vrurg is away but pingable.

[18:58] <patrickb> vrurg: The make rule for main-version.nqp is in Makefile-backend-common.in which is included in the backend-specific makefiles. Does that mean, that it's already evaluated in the backend specific context?

[19:00] <vrurg> patrickb: yes.

[19:00] <MasterDuke> m: use nqp; BEGIN { say $*W.find_symbol(nqp::list("Bool", "True")) }; say "hi"

[19:00] <camelia> rakudo-moar 0ca0f5872: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a BEGIN‚ê§at <tmp>:1‚ê§Exception details:‚ê§  5===SORRY!5=== Error while compiling ‚ê§  Cannot find method 'shift' on 'BOOTArray': no method cache and no .^fin‚Ä¶¬ª

[19:00] <MasterDuke> m: use nqp; BEGIN { say $*W.find_symbol(nqp::list("Bool")) }; say "hi"

[19:00] <camelia> rakudo-moar 0ca0f5872: OUTPUT: ¬´(Bool)‚ê§hi‚ê§¬ª

[19:00] <patrickb> vrurg: OK. Then it's already fine. Thanks!

[19:00] <MasterDuke> how do i get ^^^ to work with more than one thing?

[19:00] <vrurg> patrickb: welcome and good luck! :)

[19:14] *** jjmerelo left
[19:18] <patrickb> .tell nxadm There is a decent possibility that the 2020.05 release broke relocatability. See here: https://github.com/rakudo/rakudo/issues/3669

[19:18] <tellable6> patrickb, I haven't seen nxadm around, did you mean nadim?

[19:18] <patrickb> .tell El_Che There is a decent possibility that the 2020.05 release broke relocatability. See here: https://github.com/rakudo/rakudo/issues/3669

[19:18] <tellable6> patrickb, I'll pass your message to El_Che

[19:20] <patrickb> .tell El_Che I tested this on windows and it's definitely broken. Changes are high it's also broken on non-windows. I'm working on a fix.

[19:20] <tellable6> patrickb, I'll pass your message to El_Che

[19:37] <Geth> ¬¶ rakudo: 46648b9b32 | (Patrick B√∂ker)++ | tools/lib/NQP/Config/Rakudo.pm

[19:37] <Geth> ¬¶ rakudo: Fix relocatable builds on the moar backend

[19:37] <Geth> ¬¶ rakudo: 

[19:37] <Geth> ¬¶ rakudo: For relocatability to work the config variable `static_rakudo_home`

[19:37] <Geth> ¬¶ rakudo: needs to be empty. It defaulted to the build time rakudo home path

[19:37] <Geth> ¬¶ rakudo: globally. Later on a MoarVM specific config variable with the same name

[19:37] <Geth> ¬¶ rakudo: was set to empty assuming it would overwrite the global variable.

[19:37] <Geth> ¬¶ rakudo: But that's not the case. In backend specific templates the empty

[19:37] <Geth> ¬¶ rakudo: <‚Ä¶commit message has 10 more lines‚Ä¶>

[19:37] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/46648b9b32

[20:16] *** Altai-man_ joined
[20:18] *** sena_kun left
[20:21] *** patrickb left
[20:31] *** pamplemousse left
[20:33] <MasterDuke> timotimo: any idea how to call $*W.find_symbol with a multi-element list in a BEGIN block?

[20:34] <jnthn> MasterDuke: Probably by passing it nqp::list('Foo', 'Bar')

[20:34] <MasterDuke> m: use nqp; BEGIN { say $*W.find_symbol(nqp::list("Bool", "True")) }; say "hi"

[20:34] <camelia> rakudo-moar 46648b9b3: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a BEGIN‚ê§at <tmp>:1‚ê§Exception details:‚ê§  5===SORRY!5=== Error while compiling ‚ê§  Cannot find method 'shift' on 'BOOTArray': no method cache and no .^fin‚Ä¶¬ª

[20:35] <jnthn> Ah, it wants it to be a real NQP array, apparently

[20:35] <jnthn> Not quite sure how to get at one of those, other than finding one you can reach and making a new instance of it.

[20:36] <jnthn> Why are you doing this? :)

[20:36] <MasterDuke> well, i added a new find_single_symbol() that only takes a string (since most calls to find_symbol are with single-element lists)

[20:37] <MasterDuke> but want to benchmark it

[20:37] <MasterDuke> ot

[20:38] <MasterDuke> it's 0.1s faster for 1m calls when there is in fact just a single element. but i also want to check that my changes to find_symbol haven't made it slower for the multi-element case

[20:38] *** cognomin_ joined
[20:39] <MasterDuke> m: use nqp; BEGIN { my $w := $*W;  my $a; $a := $w.find_symbol(nqp::list("Bool")) for ^1_000_000; say $a; say now - ENTER now }; say "hi"

[20:39] <camelia> rakudo-moar 46648b9b3: OUTPUT: ¬´(Bool)‚ê§2.05817767‚ê§hi‚ê§¬ª

[20:39] <MasterDuke> ^^^ is what's 0.1s faster on my machine (and 1m fewer instructions according to callgrind)

[20:41] *** cognominal left
[22:17] *** sena_kun joined
[22:18] *** Altai-man_ left
[22:23] *** cognominal joined
[22:26] *** cognomin_ left
