[00:11] *** travis-ci joined
[00:11] <travis-ci> Rakudo build errored. Daniel Green 'Convert `nqp::istrue` into `nqp::elems`

[00:11] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665335989 https://github.com/rakudo/rakudo/compare/500dc6627b0a...87226876a2d0

[00:11] *** travis-ci left
[01:25] *** Altai-man_ joined
[01:27] *** sena_kun left
[03:00] <releasable6> Next release in ‚âà6 days and ‚âà15 hours. 2 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:26] *** sena_kun joined
[03:28] *** Altai-man_ left
[05:15] *** hungrydonkey joined
[05:25] *** Altai-man_ joined
[05:28] *** sena_kun left
[05:31] *** sena_kun joined
[05:32] *** Altai-man_ left
[06:19] *** hungrydonkey left
[07:30] *** Altai-man_ joined
[07:33] *** sena_kun left
[08:01] *** hungrydonkey joined
[09:08] *** hungrydonkey left
[09:31] *** sena_kun joined
[09:33] *** Altai-man_ left
[10:37] <lizmat> tyil: I think that was nine

[10:38] <tyil> lizmat: thanks!

[10:38] <tyil> that helped me to find the right message again

[10:39] <tyil> https://github.com/rakudo/rakudo/blob/master/tools/install-dist.p6 this was what I was looking for

[11:30] *** Altai-man_ joined
[11:33] *** sena_kun left
[11:37] <lizmat> inspired by: https://github.com/rakudo/rakudo/issues/3561

[11:37] <lizmat> so why does ++$a not return a left  value ?

[11:37] <lizmat> to prevent ++++$a from working ?

[11:38] <lizmat> fwiw, a fix would be easy, but there are spectest expecting ++$a returning a right value

[11:39] <lizmat> and the static optimizer actually bypasses the infix:<++>(int...) candidate completer

[11:39] <lizmat> *completely

[11:40] <MasterDuke> what do you mean bypasses? doesn't do anything with it? or removes it?

[11:42] <lizmat> not sure yet: I only know for sure that with --optimize=0, the int candidate does get called

[11:43] <lizmat> and by default it doesn't

[12:10] <Geth> ¬¶ rakudo: 9286def3c8 | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/SEQUENCE.pm6

[12:10] <Geth> ¬¶ rakudo: Use sub form of take, instead of method form

[12:10] <Geth> ¬¶ rakudo: 

[12:10] <Geth> ¬¶ rakudo: - saves one callframe per value produced

[12:10] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/9286def3c8

[12:10] <lizmat> hmm... that was actually Streamlining Rakudo::SEQUENCE.iterator (7/N)

[12:37] *** hungrydonkey joined
[12:38] <AlexDaniel> Altai-man_: how do you generate that list?

[12:38] <AlexDaniel> Altai-man_: with links to github repos

[12:39] <Altai-man_> AlexDaniel, to my great shame, b-b-by h-hands...

[12:40] <AlexDaniel> Altai-man_: you can just prepend https://modules.raku.org/dist/ to most module names and it almost always works

[12:40] <AlexDaniel> e.g. https://modules.raku.org/dist/JSON::Tiny

[12:41] <AlexDaniel> Altai-man_: in fact we should change Blin to generate github tickets with links

[12:41] <Altai-man_> Can agree that'd be pretty nice to have.

[12:42] <AlexDaniel> it's too bad I learned about macros in emacs many many years ago, it's pretty much the reason why I don't write scripts that generate things in a nice format‚Ä¶

[12:42] <Altai-man_> Though I am not sure about that 100%. Some of "bisected" are flappers, so need to double check. Some of them are false positives for various reasons, so I am not sure it can be done without a human at all.

[12:42] <AlexDaniel> because it tends to be faster to just edit one line and repeat the sequency for everything‚Ä¶

[12:42] <AlexDaniel> sequence*

[12:42] <Altai-man_> Yesh, emacs macroses are AWESOME.

[12:43] <AlexDaniel> Altai-man_: yeah, there are some false results, but so what? I'd usually create a ticket with everything anyway, and just tick the ones that are OK

[12:44] <Altai-man_> If it can automate creating a text using `overview` log, that's good enough, I think. Then one can create a ticket | do tweaks.

[12:44] *** travis-ci joined
[12:44] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Use sub form of take, instead of method form

[12:44] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665457361 https://github.com/rakudo/rakudo/compare/87226876a2d0...9286def3c850

[12:44] *** travis-ci left
[12:45] <Altai-man_> s/text/message template/

[12:45] <AlexDaniel> Altai-man_: why are we getting flappers, btw?

[12:45] <AlexDaniel> Altai-man_: https://github.com/Raku/Blin/blob/b495ad0342bb91c172521b0dc5d38de990fa8225/bin/blin.p6#L23

[12:45] <AlexDaniel> maybe we should just bump this?

[12:46] <Altai-man_> AlexDaniel, no idea, probably that's not enough. Modules like Concurrency::Queue sometimes "bisected", but on a second run it's fine.

[12:47] <lizmat> restarted the one failing job

[12:48] *** travis-ci joined
[12:48] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Use sub form of take, instead of method form

[12:48] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665457361 https://github.com/rakudo/rakudo/compare/87226876a2d0...9286def3c850

[12:48] *** travis-ci left
[12:50] *** travis-ci joined
[12:50] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Use sub form of take, instead of method form

[12:50] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665457361 https://github.com/rakudo/rakudo/compare/87226876a2d0...9286def3c850

[12:50] *** travis-ci left
[12:51] <lizmat> Travis being very informative: https://api.travis-ci.org/v3/job/665457366/log.txt

[12:51] <lizmat> aka: "An error occurred while generating the build script."

[12:51] * lizmat gives up

[13:09] <tyil> .

[13:23] <MasterDuke> jnthn: have you noticed https://github.com/rakudo/rakudo/issues/3560 ? the slowdown happened after the moar-frame-extras branch merge

[13:24] <jnthn> MasterDuke: Yeah. Well, that branch was always a trade-off, though the magnitude of the change here is more significant than I'd expect just from extra allocations of the extras thing.

[13:28] <MasterDuke> the 4.8m calls to MVM_frame_find_lexical_by_name for &postfix:<++> and &infix:¬´<¬ª seems like it might be the slowdown, maybe not any extra allocations

[13:31] *** sena_kun joined
[13:32] <jnthn> Yeah, that sounds like it's not managing to turn those into static lookups

[13:33] *** Altai-man_ left
[13:35] <MasterDuke> know any more debugging i could help with off the top of your head?

[13:36] <jnthn> Well, I guess look at the spesh log and see if you can figure out why it's not rewriting what I figure are getlexstatic instructions into constants...

[13:37] *** lucasb joined
[13:42] <MasterDuke> sp_getspeshslot   r6(9), sslot(50)  # getlexstatic_o of lexical '&postfix:<++>'

[13:42] <MasterDuke> sp_getlex_o      r8(10), lex(idx=1,outers=0,$i)  # expr bail: Cannot get template for: sp_getlex_o

[13:49] <jnthn> Oh...it *has* optimized it then...

[13:49] <jnthn> So why all the lookups..

[13:50] <jnthn> I'm assuming there's a lot more calls to MVM_frame_find_lexical_by_name than before?

[14:03] <MasterDuke> i haven't checked the number of calls before. i can build a rakudo from then and give it a try

[14:15] <MasterDuke> so this code: `class FOO { our proto sub foo($) {*}; multi sub foo(Int $n) { my @a = ^$n; my $b; loop (my $i = 0; $i < $n; $i++) { $b = @a[$i] }; $b }; multi sub foo(Str $s) { foo($s.Int) } }; say FOO::foo(1_000_000)`

[14:16] <MasterDuke> causes 1m calls of MVM_frame_find_lexical_by_name for each of &postcircumfix:<[ ]>, &postfix:<++>, &infix:¬´<¬ª. next most common is $?CLASS with 20.5k

[14:18] <MasterDuke> using rakudo 2017.07-80-g1a74a8c34, there are just 206 calls for &postcircumfix:<[ ]>, &postfix:<++>, &infix:¬´<¬ª and 16.8k for $?CLASS

[14:20] <MasterDuke> i have a runtime of 1.7s at HEAD and 1s at 2017.07-80-g1a74a8c34

[14:37] <MasterDuke> jnthn: and at 2017.07-84-gc1e41f9fb i get the 1m each for &postcircumfix:<[ ]>, &postfix:<++>, &infix:¬´<¬ª and it slows to 1.7s

[14:38] <Geth> ¬¶ rakudo: 439b860956 | (Elizabeth Mattijsen)++ | 8 files

[14:38] <Geth> ¬¶ rakudo: Re-instate &GENERATE-ROLE-FROM-VALUE again

[14:38] <Geth> ¬¶ rakudo: 

[14:38] <Geth> ¬¶ rakudo: This caused unexpected breakage in the MinG module at precompilation,

[14:38] <Geth> ¬¶ rakudo: complaining there was no REPR for BOOTContext objects.  So the

[14:38] <Geth> ¬¶ rakudo: assumption is that the method call somehow added some context into

[14:38] <Geth> ¬¶ rakudo: closures being precompiled that were unexpected.

[14:38] <Geth> ¬¶ rakudo: 

[14:38] <Geth> ¬¶ rakudo: This reverts commit b639221dd7eb3bfa2ff1c5cdf37a4e50628ea98e, but also

[14:38] <Geth> ¬¶ rakudo: marked the sub as "implementation-detail", so it won't show up in any

[14:38] <Geth> ¬¶ rakudo: introspection by default.

[14:38] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/439b860956

[14:58] <Kaiepi> bisectable6, {foo => 'bar'}.HOW ~~ Metamodel::ClassHOW

[14:58] <bisectable6> Kaiepi, Bisecting by output (old=2015.12 new=439b860) because on both starting points the exit code is 1

[14:58] <Kaiepi> oh huh

[14:58] <bisectable6> Kaiepi, bisect log: https://gist.github.com/072376cce16ef6b367bdb52e8d53f901

[14:58] <bisectable6> Kaiepi, (2017-07-08) https://github.com/rakudo/rakudo/commit/1a4d94930c581e915a2351049e8ee12246c4c26c

[15:00] <Kaiepi> m: say Metamodel::Primitives.is_type: {foo => "bar"}.HOW, Mu

[15:00] <camelia> rakudo-moar 439b86095: OUTPUT: ¬´False‚ê§¬ª

[15:19] *** Altai-man_ joined
[15:21] *** sena_kun left
[15:23] *** travis-ci joined
[15:23] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Re-instate &GENERATE-ROLE-FROM-VALUE again

[15:23] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665506121 https://github.com/rakudo/rakudo/compare/9286def3c850...439b86095689

[15:23] *** travis-ci left
[15:26] <jjatria> tyil: I'll be happy to help with the rakudo star docker image, if what you need is an extra pair of hands üí™ 

[16:16] <tyil> jjatria: I'm currently working on writing all new scripts for building rakudo star images (https://home.tyil.nl/git/rakudo-star-2.0/about/)

[16:16] <tyil> jjatria: any feedback and additional testing and a script to create docker images are obviously welcome

[16:16] <jjatria> tyil: Oh, cool. I'll take a look at it

[16:17] <tyil> seems to work on at least Gentoo, Debian and Ubuntu thus far

[16:17] <tyil> just got home, planning to test out alpine and voidlinux later today if I find some spare time

[16:18] <tyil> if it works on all those, my original plan was to do Docker, then (FreeBSD) and contacting hankache to see if he can help out for windows .msi builds

[16:20] <jjatria> So you'd use this as part of the automated build process for the images in the docker registry?

[16:23] <tyil> a command like `rstart build-docker` would fit into the whole process

[16:23] <tyil> if we have support multiple docker base images, `rstar build-docker ubuntu` for instance would build one based on the ubuntu image

[16:25] <jjatria> Yeah, that sounds good

[16:25] *** hungrydonkey left
[16:26] <jjatria> I'll try it out locally, see if I can spot any bugs

[16:26] <tyil> sure, thanks!

[16:27] <tyil> I wrote most of it last night, so I expect to find some bugs once I go testing on more obscure distros

[16:32] <jjatria> Oh, fresh out of the oven. Perfect for a quarantine Sunday

[16:33] <AlexDaniel> 6c: say <foo bar baz>.roll(*)[^10]

[16:33] <committable6> AlexDaniel, https://gist.github.com/edc6d4d0521360bb70dcf805d9315386

[16:33] <AlexDaniel> jjatria: every day is a quarantine Sunday now :P

[16:34] <jjatria> AlexDaniel: Maybe I can trade it for a quarantine sundae

[16:42] <AlexDaniel> jjatria: next Sunday is special because of DST

[16:42] <AlexDaniel> jjatria: clocks will change but the amount of time you'll stay at home is likely to remain the same :D

[16:45] <dogbert17> tough measures in Germany: "Ansammlungen von mehr als zwei Menschen sollen grunds√§tzlich verboten werden" - source spiegel.de

[16:46] <dogbert17> btw, Concurrency::Queue is a flapper. I believe it sometimes manage to trigger a low level bug

[16:52] <dogbert17> if the nursery size is decreased it tends to SEGV

[16:54] <dogbert17> dogbert@dogbert-VirtualBox ~/repos/p6-concurrent-queue $ MVM_SPESH_DISABLE=1  perl6 -Ilib t/stress.t 

[16:54] <dogbert17> *** Error in `-Ilib': corrupted double-linked list: 0x00007f92d07b9060 ***

[17:00] <Altai-man_> dogbert17, is it reported (as a ticket, I mean)?

[17:00] <dogbert17> Altai-man_: no, but I guess it could be :)

[17:01] <Altai-man_> dogbert17, nice volunteered. :)

[17:01] <dogbert17> will fix

[17:17] <dogbert17> Altai-man_: R#3562

[17:17] <linkable6> R#3562 [open]: https://github.com/rakudo/rakudo/issues/3562 The module p6-concurrent-queue has flapping tests

[17:17] <Altai-man_> dogbert17++

[17:20] *** sena_kun joined
[17:22] *** Altai-man_ left
[18:25] <AlexDaniel> .tell Altai-man_ btw you can use #whateverable channel to abuse the bots

[18:25] <tellable6> AlexDaniel, I'll pass your message to Altai-man_

[18:26] <AlexDaniel> .tell Altai-man_ you don't seem to do it often but maybe that's because you don't want to spam on main channels :)

[18:26] <tellable6> AlexDaniel, I'll pass your message to Altai-man_

[18:34] *** cognominal joined
[18:38] *** cognomin_ left
[18:39] <sena_kun> AlexDaniel, thanks for a tip! I know this channel, but I am not bisecting a lot, ee, just because. I mean, if I have some doubts about cases I can spend time on, I do, but I don't have too many opportunities to hack lots with my schedule. :/

[18:40] <AlexDaniel> sena_kun: that's OK, just making sure :)

[18:40] <AlexDaniel> sena_kun: perhaps still a good idea to autojoin it

[18:42] <sena_kun> AlexDaniel, if only I wouldn't so sad with these constant connection drops on this modem I have... I feel bad for causing it on main channels already.

[18:43] <AlexDaniel> sena_kun: if you use ssh for work and stuff, try mosh

[18:43] <AlexDaniel> sena_kun: it'll allow you to drop and switch networks without losing your session

[18:44] <AlexDaniel> sena_kun: as for IRC, I don't know of any easy solution, but there are solutions :)

[18:45] <AlexDaniel> sena_kun: either way I'm pretty sure the bots won't mind you reconnecting :)

[18:46] <sena_kun> fair enough. :)

[19:00] <MasterDuke> jnthn: the current error in Grammar::BNF is from here https://github.com/Raku/nqp/blob/master/src/QRegex/Cursor.nqp#L628 where it's getting an `Array`, "which does not support elems". is there a way to know in NQP when something with an `@` sigil might not be safe to use with `nqp::elems`?

[19:01] <MasterDuke> or will i need to revert a good bunch of my recent changes?

[19:03] <lizmat> MasterDuke: perhaps it needs to be deconted ?

[19:04] <MasterDuke> i'm trying that, but then the question still stands of when do i need to do that?

[19:05] <MasterDuke> also, i would have expected this problem to have shown up during a rakudo build or spectest, but those were all clean

[19:07] <MasterDuke> and nope, adding nqp::decont doesn't change anything

[19:17] <lizmat> MasterDuke: it's my understanding that fates are native integer arrays (nqp::list_i)

[19:17] <lizmat> How does an Array get in there ?

[19:19] <lizmat> afk for a few hours probably&

[19:19] <MasterDuke> haven't figured that out yet

[19:19] *** Altai-man_ joined
[19:21] *** sena_kun left
[20:06] <jnthn> MasterDuke: An Array should not be getting there; I think that's something to fix "at the source" rather than work around

[20:07] <MasterDuke> oh ha! glad to hear it

[20:09] <MasterDuke> it might be beyond me though. https://github.com/tadzik/Grammar-BNF/blob/master/lib/Slang/ABNF.pm#L39 is where the error happens if anybody wants to take a look

[20:58] <timotimo> i wonder if the code has optimized away the getlexstatics but is deoptimizing or for some other reason not entering the OSR'd code

[21:02] *** [Coke]_ is now known as [Coke]

[21:04] *** Kaiepi left
[21:05] *** Kaiepi joined
[21:18] <rba> AlexDaniel: Did you write https://github.com/AlexDaniel/foo-nullbyte-foo/ to challenge the ecosystem update?

[21:18] <AlexDaniel> rba: there are a bunch of Foo modules that challenge tooling

[21:18] <AlexDaniel> rba: see https://modules.raku.org/search/?q=Foo

[21:19] *** Kaiepi left
[21:19] <AlexDaniel> rba: I don't know what's our policy on that kind of stuff

[21:19] <rba> Generates errors in the server/updatelist.pl. blessed structure could not be converted to JSON.

[21:20] <rba> AlexDaniel: This was just a question. All fine :-)

[21:20] <rba> AlexDaniel: I'm not aware of a policy...

[21:20] <AlexDaniel> rba: it's the first time I hear something not working because of one of these modules :)

[21:20] *** sena_kun joined
[21:20] <AlexDaniel> I mean‚Ä¶ ../Foo module has a broken link on https://modules.raku.org itself

[21:20] <rba> AlexDaniel: This is because I sabotaged this part already long time ago, as I had issues...

[21:21] *** Altai-man_ left
[21:21] *** Kaiepi joined
[21:22] <AlexDaniel> oh, the one with the null byte also gives 400 Bad Request

[21:22] <AlexDaniel> pretty cool

[21:22] <MasterDuke> timotimo: re the loop code? any way to test?

[21:23] <AlexDaniel> it's kinda funny that these modules have tests

[21:23] <AlexDaniel> and they pass!

[21:23] <AlexDaniel> I mean‚Ä¶ look! https://github.com/AlexDaniel/foo-nullbyte-foo/blob/master/t/basic.t

[21:23] <AlexDaniel> ha

[21:24] <rba> I have the issue, that autodie adds a blessed autodie::exception to the array to convert to JSON.

[21:49] *** Xliff joined
[21:49] <Xliff> o/

[21:50] <Xliff> nine: After skimming the latest rakudo code regarding precompilation, are you still thinking that avoiding the .precomp lock is possible.

[21:50] <Xliff> nine: I'm seeing more of a double down on locking .precomp rather than making it easier to remove it, so just curious.

[21:51] <Xliff> nine: My original changes are no longer merge-ready due to the latest changes.

[21:51] <rba> AlexDaniel: https://ecosystem-api.p6c.org/errors.json

[21:51] <rba> AlexDaniel: Just to let you know...

[22:01] <timotimo> MasterDuke: well, MVM_dump_bytecode outputs the bytecode that it's currently going through, or at least i hope it does LOL

[22:02] <timotimo> and since we saw speshresolve in there, i'd say what we got dumped back then was not the speshed version

[22:02] <timotimo> however, i don't know how long into the process you dumped it, so could have been before the spesh's time to shine

[22:03] <MasterDuke> i'm pretty sure it was almost the absolute end of the program

[22:05] <timotimo> then we'll have to do a bit more thorough investigation

[22:05] <timotimo> like, does it try to enter a spesh candidate, but doesn't find one? does it enter the spesh candidate and deopt immediately? stuff like that

[22:06] <timotimo> i remember something osr-related where it wouldn't have the same callsite for some reason and keep logging more and more

[22:06] <timotimo> do you still have a spesh log around?

[22:06] <MasterDuke> a profile shows no deopts or osrs

[22:06] <MasterDuke> yep

[22:07] <MasterDuke> it's 25mb though

[22:08] <MasterDuke> a more golfed example is 14mb

[22:08] <MasterDuke> anything i should look for? or want me to send it to you?

[22:09] <timotimo> give me the times it was waiting for data

[22:09] <timotimo> i forgot what it's called, but that's in between the optimizations and updates of stats and such

[22:10] *** Kaiepi left
[22:11] <MasterDuke> there are 853 of the 'Was waiting' messages

[22:11] *** Kaiepi joined
[22:11] <timotimo> the latest ones are the most interesting ones

[22:11] <MasterDuke> the very first one is 'Was waiting 77883us for logs on the log queue.'

[22:11] <MasterDuke> the very last is 'Was waiting 879us for logs on the log queue.'

[22:12] *** Kaiepi left
[22:12] <MasterDuke> longest was 198365us, second longest was that first one

[22:14] *** Kaiepi joined
[22:22] <Xliff> timotimo: Hey there! Long time no type.

[22:37] <timotimo> yo

[22:44] <MasterDuke> timotimo: oh, there does appear to be something odd in the spesh log

[22:46] <MasterDuke> for this code: `class FOO { our proto sub foo($) {*}; multi sub foo(Int $n) { my @a = ^$n; my $b; loop (my $i = 0; $i < $n; $i++) { $b = @a[$i] }; $b }; multi sub foo(Str $s) { foo($s.Int) } }; say FOO::foo(1_000_000)`, there are 1700 instances of `Latest statistics for 'foo'` in the spesh log

[22:46] <MasterDuke> most (maybe all) with 'Total hits: 1'

[22:47] <MasterDuke> increasing 'OSR hits:'. starts at 304 and ends up at 987536

[22:48] <MasterDuke> all the same callsite

[22:55] *** lucasb left
[23:00] <releasable6> Next release in ‚âà5 days and ‚âà19 hours. 2 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:00] <lizmat> .tell Xliff URL of your changes?  I guess I missed that?  :-(

[23:00] <tellable6> lizmat, I'll pass your message to Xliff

[23:01] <Xliff> lizmat: Which changes? The no-precomp ones?

[23:01] <lizmat> the ones my work on precomp made unmergable?

[23:02] <Xliff> Lizmat: Um. I will have to see if I can diff those off of my version. One second.

[23:03] <lizmat> Xliff: I'm asking because a. I want to understand your thinking behind it and b. whether they would be salvagable

[23:04] <Xliff> lizmat: The thinking behind it: If we could remove the lock on the .precomp dir in favor of file level locking, we could have a parallel compiler that would go through a manifest MUCH faster (up to 4-500% for a given build plan) than we do now.

[23:06] <Xliff> However, due to some bug fixes and the doubling down on a .precomp lock ($!update-lock was used sparingly, now it's set right from !lock)

[23:06] <lizmat> ok, well...  it's a bit late for me to dive into it now, and tomorrow is RWN day...  but I'm definitely interested in diving into that

[23:07] <Xliff> I will have to tease the relevant parts out.

[23:07] <jjatria> tyil: I cloned your repo and tried `./bin/rstar install` as it said in the README, but it died with "cp: cannot stat '/home/user/rstar/dist/src/core/moarvm-2020.01.1/."

[23:07] <lizmat> Xliff: please only do that if a. you think that makes sense, and b. you have the tuits and the will to do that 

[23:08] <Xliff> I know how to edit diffs, thanks.

[23:08] <Xliff> For this lil project, especially./

[23:09] <lizmat> ok... looking forward to the fruits of your labor then, tomorrow  :-)

[23:09] <lizmat> meanwhile: sleep&

[23:15] <Xliff> Good night. I am compiling the gist, now.

[23:19] *** Altai-man_ joined
[23:22] *** sena_kun left
[23:23] <Xliff> lizmat: https://gist.github.com/Xliff/a26c3cf04322bb3769bd26a2543efbf2

[23:26] <tyil> jjatria: `./bin/rstar fetch`, those extra sources are to be included in tarball releases, which are ment for end-users

[23:27] <tyil> I'll update the readme to be more clear on this

[23:27] <jjatria> tyil: Ah, cool. Thanks! I'll keep looking for things, but tomorrow I guess

[23:27] <AlexDaniel> jnthn: https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-03-22#l222

[23:29] <jnthn> AlexDaniel: Thanks, but...hmm, the modules I don't see indexed aren't mentioned in there.

[23:47] <AlexDaniel> e: shell ‚Äòcd sandbox; wget https://www.gutenberg.org/files/2701/old/moby10b.txt‚Äô

[23:47] <evalable6> AlexDaniel, rakudo-moar 439b86095: OUTPUT: ¬´--2020-03-23 00:47:42--  https://www.gutenberg.‚Ä¶¬ª

[23:47] <evalable6> AlexDaniel, Full output: https://gist.github.com/40fbd835969770b64573348f10cd86a2

[23:48] <AlexDaniel> 82 MB?

[23:48] <AlexDaniel> am I looking at it wrong?

[23:50] <AlexDaniel> c: HEAD run <perl6 -e>, ÔΩ¢my $cnt=0; $*ARGFILES.words.grep(/whale {++$cnt}/); say $cnt;ÔΩ£, ‚Äòsandbox/moby10b.txt‚Äô

[23:50] <committable6> AlexDaniel, ¬¶HEAD(439b860): ¬´1322‚ê§¬ª

[23:50] <AlexDaniel> c: HEAD run <perl6 -e>, ÔΩ¢my $cnt=0; $*ARGFILES.words.grep(/whale {++$cnt}/); say $cnt;ÔΩ£, ‚Äòsandbox/moby10b.txt‚Äô

[23:50] <committable6> AlexDaniel, ¬¶HEAD(439b860): ¬´1322‚ê§¬ª

[23:50] <AlexDaniel> that's a wrong file isn't it?

[23:50] <AlexDaniel> 6c: run <perl6 -e>, ÔΩ¢my $cnt=0; $*ARGFILES.words.grep(/whale {++$cnt}/); say $cnt;ÔΩ£, ‚Äòsandbox/moby10b.txt‚Äô

[23:51] <committable6> AlexDaniel, https://gist.github.com/5dc090f6efedfd578c7ba7ad066ed1a0

[23:51] <AlexDaniel> e: shell ‚Äòcd sandbox; wget http://www.gutenberg.org/cache/epub/2489/pg2489.txt‚Äô

[23:51] <evalable6> AlexDaniel, rakudo-moar 439b86095: OUTPUT: ¬´--2020-03-23 00:51:14--  http://www.gutenberg.o‚Ä¶¬ª

[23:51] <evalable6> AlexDaniel, Full output: https://gist.github.com/b75b500fc4420518cc1d99bf2e9f78c7

[23:51] <AlexDaniel> oh

[23:51] <AlexDaniel> it was the right file?

[23:51] <AlexDaniel> c: HEAD,HEAD,HEAD,HEAD,HEAD,HEAD,HEAD,HEAD,HEAD,HEAD,HEAD,HEAD run <perl6 -e>, ÔΩ¢my $cnt=0; $*ARGFILES.words.grep(/whale {++$cnt}/); say $cnt;ÔΩ£, ‚Äòsandbox/moby10b.txt‚Äô

[23:52] <committable6> AlexDaniel, ¬¶HEAD(439b860),HEAD(439b860),HEAD(439b860),HEAD(439b860),HEAD(439b860),HEAD(439b860),HEAD(439b860),HEAD(439b860),HEAD(439b860),HEAD(439b860),HEAD(439b860),HEAD(439b860): ¬´1322‚ê§¬ª

[23:52] <AlexDaniel> oooooooooh right it's not showing the signal

[23:52] <AlexDaniel> that's why

[23:53] <AlexDaniel> 6c: my $p = run <perl6 -e>, ÔΩ¢my $cnt=0; $*ARGFILES.words.grep(/whale {++$cnt}/); say $cnt;ÔΩ£, ‚Äòsandbox/moby10b.txt‚Äô; exit $p.signal if $p.signal ‚â† 0; exit $p.exitcode if $p.exitcode ‚â† 0

[23:53] <AlexDaniel> anyway, I'm pretty sure it was fixed

[23:53] <AlexDaniel> Context: R#3564

[23:53] <linkable6> R#3564 [open]: https://github.com/rakudo/rakudo/issues/3564 "Segmentation fault: 11" -- codeblock within a grep regex fails with literal (but not regex) query

[23:54] <committable6> AlexDaniel, https://gist.github.com/8de227f18653c1333ea252a9218dfc62

[23:55] <AlexDaniel> nope.

[23:58] <timotimo> MasterDuke: from what you've said so far that looks very much like the bug i've been describing

[23:59] <MasterDuke> it does sound similar

