[00:45] <melezhik> is it possible to invoke method by symbol link?

[00:46] <melezhik> sorry. meant to ask that in #raku 

[01:03] <Geth> ¦ nqp: c10e950ec5 | (Samantha McVey)++ | tools/templates/MOAR_REVISION

[01:03] <Geth> ¦ nqp: Bump MoarVM for Unicode 13.1

[01:03] <Geth> ¦ nqp: 

[01:03] <Geth> ¦ nqp: Changes: 2020.10..2020.10-20-g70e3608cb

[01:03] <Geth> ¦ nqp: 2cac07c93 Regenerate unicode_db to fix minor comment difference

[01:03] <Geth> ¦ nqp: 1eda12a0a Use `foo(void)` instead of just `foo()` for functions that take no arguments

[01:03] <Geth> ¦ nqp: 004e4bc77 The probe for `pthread_setname_np` needs prototypes from <string.h>

[01:03] <Geth> ¦ nqp: 608b90eb1 No need to MVMROOT `root` twice in `get_attribute`.

[01:03] <Geth> ¦ nqp: <…commit message has 12 more lines…>

[01:03] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/c10e950ec5

[01:09] <Geth> ¦ rakudo: d3acd861a3 | (Samantha McVey)++ | t/09-moar/General_Category__extracted-DerivedGeneralCategory.t

[01:09] <Geth> ¦ rakudo: Fudge unicode test in preparation for Unicode 13.1

[01:09] <Geth> ¦ rakudo: 

[01:09] <Geth> ¦ rakudo: Disabling this, just so all tests still pass after I bump NQP/MoarVM,

[01:09] <Geth> ¦ rakudo: but before the tests are updated.

[01:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d3acd861a3

[01:14] <Geth> ¦ rakudo: 23f67fee0e | (Samantha McVey)++ | tools/templates/NQP_REVISION

[01:14] <Geth> ¦ rakudo: Bump NQP/MoarVM for Unicode 13.1

[01:14] <Geth> ¦ rakudo: 

[01:14] <Geth> ¦ rakudo: Changes: 2020.10..2020.10-63-gc10e950ec

[01:14] <Geth> ¦ rakudo: c10e950ec Bump MoarVM for Unicode 13.1

[01:14] <Geth> ¦ rakudo: 49bd5b2c1 fix some MD formatting

[01:14] <Geth> ¦ rakudo: 9f14b2b6c Add note about HLL to opsdocs

[01:14] <Geth> ¦ rakudo: 27ad522ff Documentation cleanup

[01:14] <Geth> ¦ rakudo: <…commit message has 59 more lines…>

[01:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/23f67fee0e

[01:31] <Geth> ¦ rakudo: bd803d5eda | thundergnat++ | 15 files

[01:31] <Geth> ¦ rakudo: Update tests for Unicode 13.0, 13.1

[01:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bd803d5eda

[01:31] <Geth> ¦ rakudo: 42c4c1ed3e | (Samantha McVey)++ (committed using GitHub Web editor) | 15 files

[01:31] <Geth> ¦ rakudo: Merge pull request #3942 from thundergnat/unicode13

[01:31] <Geth> ¦ rakudo: 

[01:31] <Geth> ¦ rakudo: Update tests for Unicode 13.0, 13.1

[01:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/42c4c1ed3e

[01:40] <Geth> ¦ rakudo: c54193e817 | (Samantha McVey)++ | t/09-moar/General_Category__extracted-DerivedGeneralCategory.t

[01:40] <Geth> ¦ rakudo: Revert "Fudge unicode test in preparation for Unicode 13.1"

[01:40] <Geth> ¦ rakudo: 

[01:40] <Geth> ¦ rakudo: This reverts commit d3acd861a3d371013fcd0786e260d002db699e8e.

[01:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c54193e817

[01:58] <Geth> ¦ roast/master: 4 commits pushed by thundergnat++, (Samantha McVey)++

[01:58] <Geth> ¦ roast/master: d970f86d8e | Update roast for Unicode 13.0, 13.1

[01:58] <Geth> ¦ roast/master: 8ba1a837b5 | Update verbiage about generated tests

[01:58] <Geth> ¦ roast/master: 0aa970a4cf | GraphemeBreakTest: fudge lines and norms again text not line numbers

[01:58] <Geth> ¦ roast/master: e1e2561df6 | Merge pull request #676 from thundergnat/unicode13

[01:58] <Geth> ¦ roast/master: review: https://github.com/Raku/roast/compare/9f069e6379bc...e1e2561df684

[01:59] <samcv> ok. merging unicode 13 is complete. please ping me if anything bad happens :) but that should not happen

[02:21] *** melezhik left
[03:10] *** camelCaser left
[03:15] *** camelCaser joined
[04:49] *** travis-ci joined
[04:49] <travis-ci> Rakudo build failed. Samantha McVey 'Revert "Fudge unicode test in preparation for Unicode 13.1"

[04:49] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/740718742 https://github.com/rakudo/rakudo/compare/42c4c1ed3ead...c54193e8176b

[04:49] *** travis-ci left
[04:54] *** frost-lab joined
[06:26] *** frost-lab left
[07:25] *** frost-lab joined
[08:01] *** sena_kun joined
[08:08] *** Altai-man joined
[08:11] *** sena_kun left
[08:18] <samcv> ^ not sure why `t/02-rakudo/reproducible-builds.t` failed on two apple CI jobs. Does that happen sometimes?

[08:25] *** domidumont joined
[08:32] <nine> Unfortunately, yes. I'm pretty sure that there's at least one bug left but so far haven't been able to reproduce

[09:13] *** MasterDuke joined
[09:29] <samcv> is it a flapper?

[09:56] <lizmat> samcv: t/09-moar/Line_Break__LineBreak.t inconsistently either reports test 1 as TODO and passing, or test 2

[10:10] <Geth> ¦ rakudo: 78f164517c | (Elizabeth Mattijsen)++ | src/core.c/Distro.pm6

[10:10] <Geth> ¦ rakudo: Make MacOS nick lookup hash a constant

[10:10] <Geth> ¦ rakudo: 

[10:10] <Geth> ¦ rakudo: So we don't have to do this at each startup.  And possibly fixes

[10:10] <Geth> ¦ rakudo: non-reproducible build issues on MacOS.

[10:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/78f164517c

[10:19] <Geth> ¦ rakudo: 2ad244b17f | (Elizabeth Mattijsen)++ | src/core.c/Distro.pm6

[10:19] <Geth> ¦ rakudo: Be consistent in how we use my constant $foo =

[10:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2ad244b17f

[11:16] <nine> samcv: yes

[11:21] *** travis-ci joined
[11:21] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Make MacOS nick lookup hash a constant

[11:21] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/740800592 https://github.com/rakudo/rakudo/compare/c54193e8176b...78f164517ce5

[11:21] *** travis-ci left
[11:25] <Geth> ¦ rakudo: 0447b15e8a | (Elizabeth Mattijsen)++ | src/core.c/Match.pm6

[11:25] <Geth> ¦ rakudo: Constantize empty list / hash in Match

[11:25] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0447b15e8a

[11:25] <Geth> ¦ rakudo: 8af0c463b6 | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/Internals.pm6

[11:25] <Geth> ¦ rakudo: Constantize encoding and clean parts lookup

[11:25] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8af0c463b6

[11:29] <[Tux]> WHOT? \o/

[11:29] <[Tux]> Rakudo v2020.10-37-g2ad244b17 (v6.d) on MoarVM 2020.10-20-g70e3608cb

[11:29] <[Tux]> csv-test-xs-20      0.384 -  0.390

[11:29] <[Tux]> csv-ip5xs           0.792 -  0.796

[11:29] <[Tux]> test-t --race       0.812 -  0.855

[11:29] <[Tux]> test-t              1.773 -  1.878

[11:29] <[Tux]> test                7.547 -  7.830

[11:29] <[Tux]> csv-ip5xs-20        7.791 -  7.876

[11:29] <[Tux]> test-t-20 --race    9.383 -  9.937

[11:29] <[Tux]> csv-parser         24.621 - 25.320

[11:29] <[Tux]> test-t-20          30.545 - 31.404

[11:40] <Geth> ¦ roast: 2277f397df | (Elizabeth Mattijsen)++ | 4 files

[11:40] <Geth> ¦ roast: Unmark now passing Unicode tests as TODO

[11:40] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/2277f397df

[11:59] <timotimo> [Tux]: is that a new all-time low?

[11:59] <lizmat> no, it's not afaik

[12:00] <MasterDuke> i think 1.6 is the lowest

[12:02] <MasterDuke> but if so, it was over 180 days ago http://tux.nl/Talks/CSV6/speed4.html

[12:05] <timotimo> we're clawing back the wins we got from a performance regression that was necessary to get things right?

[12:06] <MasterDuke> don't think anybody ever tried to figure out what happened

[12:09] *** sena_kun joined
[12:11] *** Altai-man left
[12:21] <samcv> lizmat, will check that later

[12:23] <[Tux]> timotimo, all time top5: 20190418 1.624❙20190425 1.623❙20190718 1.621❙20190429 1.605❙20190420 1.594❙

[12:24] *** travis-ci joined
[12:24] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Be consistent in how we use my constant $foo ='

[12:24] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/740802122 https://github.com/rakudo/rakudo/compare/78f164517ce5...2ad244b17f76

[12:24] *** travis-ci left
[12:26] * [Tux] hopes for "next" optimization (being goto instead of exception when possible)

[12:33] <MasterDuke> https://i.imgur.com/uiSbtjb.png has some trend lines

[12:35] *** Kaiepi left
[12:43] *** lucasb joined
[12:51] *** patrickb joined
[12:52] <patrickb> [Tux]: How hard would it be to validate the top5 by rerunning/retiming the exact version again?

[13:04] <[Tux]> time-consuming, and I don't have time.

[13:04] <[Tux]> I however can tell someone else exactly what to do

[13:04] <[Tux]> :)

[13:05] <[Tux]> and note that now in corona-times, I am actually working on this box, so the balance of processes is a bit different

[13:05] <[Tux]> Text::CSV has not changed a lot, so that part should be easy

[13:07] <[Tux]> does perl6 have a public accessible smoke box that I could use to setup something like that?

[13:07] <[Tux]> raku, sorry

[13:07] <lizmat> tsk  :-)

[13:13] <[Tux]> ideal would be a tool that could reproduce the complete test environment for a certain situation, like nqp commit x, or MoarVM commit y

[13:14] <[Tux]> than find the closest commit in any of the related projects on or before that point in time and check those out for those

[13:14] <[Tux]> rebuild the whole kaboodle and run the timing

[13:20] <[Tux]> I think nothing really change in Text::CSV since 2018-03-30 that has any influence on these timings

[13:25] <[Coke]> I wonder if we could get azure credits or something via TPF.

[13:25] <[Coke]> I will ask around.

[13:32] <timotimo> getting the right rakudo versions should be possible with sharable6

[13:32] <timotimo> though it will take commit hashes rather than date/time

[13:32] <timotimo> which git can help you with by giving you all commits from one day, or something like that

[13:34] <AlexDaniel`> well, there isn't really a technical reason not to run a benchmark agains every rakudo version

[13:34] <AlexDaniel`> t

[13:35] <AlexDaniel`> so the datetime logic is unnecessary

[13:35] <timotimo> i guess that's fair

[13:36] <AlexDaniel`> and when I say that I mean prebuilt deep rakudo-nqp-moar versions too, although this is not implemented in whateverable just yet :(

[13:38] <timotimo> right; moarvm versions can at least be switched out without much trouble as long as there's compatibility

[13:38] <timotimo> i.e. if you can build the moarvm with the nqp and rakudo version you have, you can drop in that version without running the build again

[13:39] <timotimo> but if you change nqp, rakudo will have to be recompiled completely

[13:39] <timotimo> so the amount of possible duplication would be immense if you wanted to pre-build everything

[13:45] <AlexDaniel`> not talking about switching anything underneath existing installs

[13:46] <AlexDaniel`> it's possible to just take 3 versions, build it, compress it… ??? Profit!

[13:46] <timotimo> ah, that'll work too

[13:46] <AlexDaniel`> nqp and moar bumps are surprisingly linear, it's not even n²

[13:47] <AlexDaniel`> anyway, there's some help here: https://github.com/Raku/whateverable/wiki/Shareable#-how-to-use-these-files

[13:48] <lizmat> notable6: weekly

[13:48] <notable6> lizmat, 2 notes: https://gist.github.com/67216a26f876483aebd9237fc99cf6b1

[13:50] <sena_kun> lizmat, not sure if Comma 2020.10 release was mentioned.

[13:50] <lizmat> aha!  tweet ?  link ??

[13:51] <sena_kun> lizmat, jnthn has asked to do one, I'll ping again.

[13:52] <sena_kun> s/asked/promised/

[13:52] <lizmat> notable6: weekly reset

[13:52] <notable6> lizmat, Moved existing notes to “weekly_2020-11-02T13:52:40Z”

[14:07] *** evalable6 left
[14:07] *** linkable6 left
[14:07] <Geth> ¦ rakudo: ccc50f7ae6 | (Elizabeth Mattijsen)++ | src/core.c/Distro.pm6

[14:07] <Geth> ¦ rakudo: Add support for MacOS 11.0 nick

[14:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ccc50f7ae6

[14:09] *** evalable6 joined
[14:09] *** linkable6 joined
[14:15] * [Coke] updates https://github.com/coke/scripts/blob/master/sw_hist, lizmat+=

[14:15] <[Coke]> lizmat++

[14:15] <[Coke]> lizmat, no support for "Kodiak" in Rakudo? :)

[14:17] <lizmat> nah...  :-)

[14:21] *** frost-lab left
[14:28] *** patrickb left
[14:39] *** Kaiepi joined
[14:42] <lizmat> bisectable6: dd "\x1F62E\x200D\x1F4A8".chars

[14:42] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[14:42] <bisectable6> lizmat, Output on all releases: https://gist.github.com/8aa7d230ff88398afc1b32c4751cd958

[14:42] <bisectable6> lizmat, Bisecting by output (old=2017.06 new=2017.07) because on both starting points the exit code is 0

[14:43] <bisectable6> lizmat, bisect log: https://gist.github.com/b5406b772fe08ee7e3a3926a71442dfe

[14:43] <bisectable6> lizmat, (2017-07-09) https://github.com/rakudo/rakudo/commit/4f5a1e20f9050cb6cee2b37e8f9229ac529c64bf

[14:43] <bisectable6> lizmat, Output on all releases and bisected commits: https://gist.github.com/7306c8c73b5adcec2079bfdf87609ddc

[14:44] <lizmat> ok, so that's not a good test to test support for Emoji 13.1

[14:53] <[Coke]> https://gist.github.com/coke/619e118dbddd65ba0dd79a8c6d8afd02 - some passing TODO tests on rakudo-latest.

[14:54] <[Coke]> (I don't normally run rakudo make test, no clue how long they've been passing)

[14:55] <[Coke]> looks like they rely on UnipropCheck.pm6 for TODO setting.

[14:57] <Geth> ¦ rakudo: 7176cbc357 | Coke++ | 4 files

[14:57] <Geth> ¦ rakudo: track new file name

[14:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7176cbc357

[14:57] <[Coke]> UnipropCheck.rakumod, that is.

[15:07] <[Coke]> .seen skaji

[15:07] <tellable6> [Coke], I saw skaji 2019-04-25T13:24:52Z in #perl6: <skaji> ugexe: https://gist.github.com/skaji/9b90b942bdfa23202f06fa1d7e8660c7

[16:08] *** Altai-man joined
[16:11] *** sena_kun left
[16:38] <nine> Funny what bugs one comes across when investigating in-process-precompilation issues:

[16:38] <nine> m: my $split = IO::Spec::Unix.splitdir("foo/bar"); IO::Spec::Unix.splitdir("wrong/value"); say $split;

[16:38] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(wrong value)␤»

[16:38] <nine> splitdir always modifies and returns the same List object

[16:40] <MasterDuke> doh

[16:41] <nine> Introduced in https://github.com/rakudo/rakudo/commit/6ca702fa3d

[16:41] <[Coke]> good find.

[16:44] <nine> It's not just that it's always the same List. Another question is, if it ought to be a List at all. Before that it returned a Seq, like we usually do

[16:46] <Geth> ¦ roast: 49b5330059 | Coke++ | docs/unicode-generated-tests.asciidoc

[16:46] <Geth> ¦ roast: Track change to filename in rakudo/rakudo

[16:46] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/49b5330059

[16:47] <[Coke]> nine: doesn't look like roast cares about the return type.

[16:47] <[Coke]> easy path: revert zoffix's commit, add a test for splitdir called on the class object, and verify that calling it twice works.

[16:48] <nine> Funny pattern I've seen in much documentation (across multiple languages): it's usually quite well documented what you have to give to a routine, but much less so what a routine actually returns to you

[16:49] <[Coke]> I'd keep it vague where possible (mention the role, not the specific class we're returning today)

[16:49] <[Coke]> (e.g the return type here should be Iterable)

[16:52] <lizmat> and another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/11/02/2020-44-comma-comma/

[16:58] <Geth> ¦ rakudo: 613da571e8 | (Elizabeth Mattijsen)++ | 2 files

[16:58] <Geth> ¦ rakudo: Fix an issue with $*TZ and long-running processes

[16:58] <Geth> ¦ rakudo: 

[16:58] <Geth> ¦ rakudo: This was spotted in production recently: before this commit, $*TZ

[16:58] <Geth> ¦ rakudo: was being set *once* on the first access to $*TZ.  If a long running

[16:58] <Geth> ¦ rakudo: process would cross a DST change, it would report the wrong value

[16:58] <Geth> ¦ rakudo: after that change.

[16:58] <Geth> ¦ rakudo: 

[16:58] <Geth> ¦ rakudo: <…commit message has 5 more lines…>

[16:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/613da571e8

[16:58] <nine> I guess its a good sign that raku processes can run long enough for TZ changes to become an issue :)

[17:00] <lizmat> yup  :-)

[17:00] <lizmat> well, actually DST changes...

[17:00] <lizmat> TZ changes were pretty much covered already  :-)

[17:11] <Geth> ¦ rakudo: 78935ebdc0 | (Elizabeth Mattijsen)++ | src/core.c/DateTime.pm6

[17:11] <Geth> ¦ rakudo: Some fixes and tweaks to $*TZ

[17:11] <Geth> ¦ rakudo: 

[17:11] <Geth> ¦ rakudo: - should set last-minute-seen, duh!  spotted by jnthn++

[17:11] <Geth> ¦ rakudo: - fix spello in variable name, spotted by MasterDuke++

[17:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/78935ebdc0

[17:58] <Geth> ¦ rakudo: 7b2d9af7be | (Elizabeth Mattijsen)++ | src/core.c/PseudoStash.pm6

[17:58] <Geth> ¦ rakudo: Pseudostash code doesn't need a sub

[17:58] <Geth> ¦ rakudo: 

[17:58] <Geth> ¦ rakudo: A Block should do.  This doesn't break any spectests, but maybe these

[17:58] <Geth> ¦ rakudo: aren't tested enough.  Please revert if this causes breakage.

[17:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7b2d9af7be

[18:04] *** domidumont left
[18:06] <lizmat> afk for a few hours&

[18:07] *** [Coke] left
[18:28] *** HarmtH_ left
[19:35] *** [Coke] joined
[19:35] *** [Coke] left
[19:35] *** [Coke] joined
[19:45] *** domidumont joined
[19:49] <Geth> ¦ rakudo: 151fd31083 | (Samantha McVey)++ | t/09-moar/UnipropCheck.rakumod

[19:49] <Geth> ¦ rakudo: Make unicode property tests deterministic

[19:49] <Geth> ¦ rakudo: 

[19:49] <Geth> ¦ rakudo: In these tests, we test thousands of properties and then collect the

[19:49] <Geth> ¦ rakudo: results into two synthetic tests (otherwise the test would be much too

[19:49] <Geth> ¦ rakudo: slow and noisy).

[19:49] <Geth> ¦ rakudo: 

[19:49] <Geth> ¦ rakudo: Add a sort when we iterate the keys so that the tests don't end up

[19:49] <Geth> ¦ rakudo: running in different orders.

[19:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/151fd31083

[19:49] <samcv> lizmat, fixed the test order consistency

[19:50] *** domidumont left
[20:09] *** sena_kun joined
[20:11] *** Altai-man left
[20:34] <lizmat> samcv++

[20:35] * [Coke] wonders why https://twitter.com/cokebot9000 is showing 3 unicode letters as special when those are all the same font.

[20:37] <[Coke]> (some of them were converted to <img> tags for some reason. weird.

[20:37] <lizmat> uninamically they all look like NEGATIVE SQUARED LATIN CAPITAL LETTERs

[20:38] <samcv> [Coke], twitter is converting them to their own icon set. But some letters are not part of the icon set, so display with your font

[20:40] <[Coke]> weird that their icon set has PAO but not LET

[20:42] <samcv> i guess you could check the actual text doesn't contain any special presentation codepoints. otherwise it's probbaly the icon set

[21:03] <Geth> ¦ rakudo: 89211e2eef | (Elizabeth Mattijsen)++ | src/core.c/DateTime.pm6

[21:03] <Geth> ¦ rakudo: Use alternate test for DST change

[21:03] <Geth> ¦ rakudo: 

[21:03] <Geth> ¦ rakudo: As AlexDaniel pointed out, what if there is more than an hour between

[21:03] <Geth> ¦ rakudo: calls?  Fixed by taking the absolute hour value since epoch and compare

[21:03] <Geth> ¦ rakudo: against that.

[21:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/89211e2eef

[21:14] <gfldex> m: sub s($c where Int|Str) {}; s(½);

[21:14] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Constraint type check failed in binding to parameter '$c'; expected anonymous constraint to be met but got Rat (0.5)␤  in sub s at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:14] <gfldex> m: multi sub s($c where Int|Str) {}; s(½);

[21:14] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Cannot resolve caller s(0.5); none of these signatures match:␤    ($c where { ... })␤  in block <unit> at <tmp> line 1␤␤»

[21:15] <gfldex> Would it be possible to show the Junction instead of { ... } in such cases?

[21:15] <gfldex> I'm asking because that would be an awesome error message. :)

[21:22] <MasterDuke> looks like it might be happening here https://github.com/rakudo/rakudo/blob/master/src/core.c/Parameter.pm6#L611

[21:27] <MasterDuke> and i guess it's because the constraint could be anything, it pretty much just punts

[21:30] <lizmat> samcv: so now I get 2 TODO's passed in "make test", how to get rid of the TODO's passed ?

[21:34] <Geth> ¦ rakudo: 5b3691817a | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[21:34] <Geth> ¦ rakudo: Make sure match processing can handle $/ being a Junction

[21:34] <Geth> ¦ rakudo: 

[21:34] <Geth> ¦ rakudo: As reported in R#4002.  The problem was caused by some private methods

[21:34] <Geth> ¦ rakudo: not having a Mu constraint on the $/ container being passed, causing

[21:34] <Geth> ¦ rakudo: them to be called for each of the eigenstates in the Junction.

[21:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5b3691817a

[21:34] <linkable6> R#4002 [open]: https://github.com/rakudo/rakudo/issues/4002 "Cannot modify an immutable Match" after matching junction against m//

[21:36] <AlexDaniel`> timotimo: you aren't getting github notifications, are you? There's a problem-solving PR waiting for your review

[21:38] <AlexDaniel`> I wonder if tony-o is nowadays active. Would've been nice to get it merged without waiting for the timeout

[21:39] <timotimo> oh! yes, i really need to figure out the frickin github notifications

[21:40] <timotimo> done

[21:41] <timotimo> not figuring out the notifications, just that one thing

[22:05] <Geth> ¦ nqp/NotQuiteParadise: d75f48d087 | (Elizabeth Mattijsen)++ | README.pod

[22:05] <Geth> ¦ nqp/NotQuiteParadise: Change NQP to Not Quite Paradise

[22:05] <Geth> ¦ nqp/NotQuiteParadise: review: https://github.com/Raku/nqp/commit/d75f48d087

[22:05] <Geth> ¦ nqp: lizmat++ created pull request #681: Change NQP to Not Quite Paradise

[22:05] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/681

[22:07] <Geth> ¦ rakudo: ede52fb02e | (Elizabeth Mattijsen)++ | src/core.c/DateTime.pm6

[22:07] <Geth> ¦ rakudo: Check for actual changes in DST

[22:07] <Geth> ¦ rakudo: 

[22:07] <Geth> ¦ rakudo: nqp::decodelocaltime actually returns whether we're in DST or not,

[22:07] <Geth> ¦ rakudo: so we only need to check that.

[22:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ede52fb02e

[22:20] <lizmat> and that concludes my hacking for today&

[22:36] *** sena_kun left
[22:51] <Geth> ¦ rakudo: vrurg++ created pull request #4003: Don't inherit mixin class language revision

[22:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4003

[22:51] <Geth> ¦ rakudo/rakudo_3998: 2991016a99 | (Vadim Belman)++ | src/Perl6/Metamodel/Mixins.nqp

[22:51] <Geth> ¦ rakudo/rakudo_3998: Don't inherit mixin class language revision

[22:51] <Geth> ¦ rakudo/rakudo_3998: 

[22:51] <Geth> ¦ rakudo/rakudo_3998: Use the compiler-default. This fixes #3998 and makes the following code

[22:51] <Geth> ¦ rakudo/rakudo_3998: work:

[22:51] <Geth> ¦ rakudo/rakudo_3998: 

[22:51] <Geth> ¦ rakudo/rakudo_3998:     use v6.e.PREVIEW;

[22:51] <Geth> ¦ rakudo/rakudo_3998:     role R { }; my $v = 0 but R;

[22:51] <Geth> ¦ rakudo/rakudo_3998: 

[22:51] <Geth> ¦ rakudo/rakudo_3998: Yet, `$v.^language-revision` will now return `e`, contrary to

[22:51] <Geth> ¦ rakudo/rakudo_3998: `0.^language-revision` returning `c`.

[22:52] <Geth> ¦ rakudo/rakudo_3998: review: https://github.com/rakudo/rakudo/commit/2991016a99

[22:52] <Geth> ¦ rakudo/rakudo_3998: eb454e99ae | (Vadim Belman)++ (committed using GitHub Web editor) | src/Perl6/Metamodel/Mixins.nqp

[22:52] <Geth> ¦ rakudo/rakudo_3998: Merge pull request #4003 from vrurg/rakudo_3998

[22:52] <Geth> ¦ rakudo/rakudo_3998: 

[22:52] <Geth> ¦ rakudo/rakudo_3998: Don't inherit mixin class language revision

[22:52] <Geth> ¦ rakudo/rakudo_3998: review: https://github.com/rakudo/rakudo/commit/eb454e99ae

[23:29] <AlexDaniel`> .seen tony-o

[23:29] <tellable6> AlexDaniel`, I saw tony-o 2020-09-02T15:45:05Z in #raku: <tony-o> [Coke]++

