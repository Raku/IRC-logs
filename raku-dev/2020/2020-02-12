[00:01] *** Kaiepi joined
[00:04] <Geth> ¦ rakudo: ac6c4379f4 | (Patrick Böker)++ | tools/lib/NQP/Config/Rakudo.pm

[00:04] <Geth> ¦ rakudo: Fix Configure.pl --git-cache-dir with generated NQP

[00:04] <Geth> ¦ rakudo: 

[00:04] <Geth> ¦ rakudo: There was a double quoting going on resulting in the actual path not being

[00:04] <Geth> ¦ rakudo: recognized any more.

[00:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ac6c4379f4

[00:06] <Geth> ¦ rakudo: 134441987f | (Elizabeth Mattijsen)++ | src/core.c/Date.pm6

[00:06] <Geth> ¦ rakudo: Oops, Date.new(Instant) did not suffer from this issue

[00:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/134441987f

[00:06] <lizmat> really sleep&

[00:18] *** hungrydonkey joined
[00:26] *** patrickz joined
[00:30] *** patrickb left
[00:55] *** patrickz left
[01:30] *** SqrtNegInf left
[01:34] *** sena_kun left
[01:49] *** sena_kun joined
[03:33] *** sena_kun left
[03:35] *** epony left
[03:36] *** epony joined
[03:37] *** epony left
[03:38] *** epony joined
[03:48] *** sena_kun joined
[04:11] *** ukine joined
[05:17] <nine> [  577s] t/02-rakudo/04-diag.t                                         (Wstat: 256 Tests: 0 Failed: 0)

[05:17] <nine> https://build.opensuse.org/package/live_build_log/home:niner9:rakudo-git/rakudo/openSUSE_Tumbleweed/i586

[05:18] <nine> [  680s] t/02-rakudo/08-inline-native-arith.t                          (Wstat: 256 Tests: 0 Failed: 0)

[05:18] <nine> https://build.opensuse.org/package/live_build_log/home:niner9:rakudo-git/rakudo/openSUSE_Leap_15.2/x86_64

[05:33] *** sena_kun left
[05:48] *** sena_kun joined
[06:29] *** hungryd91 joined
[06:29] *** hungrydonkey left
[06:30] *** epony left
[06:43] *** epony joined
[06:53] *** nebuchadnezzar left
[07:13] <Geth> ¦ rakudo: b32048df51 | (Christian Bartolomäus)++ | src/core.c/Str.pm6

[07:13] <Geth> ¦ rakudo: Unbreak JVM and JS builds

[07:13] <Geth> ¦ rakudo: 

[07:13] <Geth> ¦ rakudo: * Three ternary statments have been borked accidentially by 597288be62.

[07:13] <Geth> ¦ rakudo: 

[07:13] <Geth> ¦ rakudo: * Two instances of '!index-die' have survived the rename to

[07:13] <Geth> ¦ rakudo:   '!die-named' in 49aaa6ff36.

[07:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b32048df51

[07:29] *** domidumont joined
[07:32] *** sena_kun left
[07:47] *** sena_kun joined
[08:29] *** jmerelo joined
[08:29] <jmerelo> Some help with maps and sink context? https://stackoverflow.com/questions/60183997/impossible-to-put-a-map-in-sink-context

[08:57] *** nebuchadnezzar joined
[09:33] *** sena_kun left
[09:36] <lizmat> bartolin++ 

[09:48] *** sena_kun joined
[09:50] <lizmat> Files=1302, Tests=109849, 210 wallclock secs (28.50 usr  8.29 sys + 2924.54 cusr 277.06 csys = 3238.39 CPU)

[09:55] *** hungrydonkey joined
[09:58] *** hungryd91 left
[10:02] <Geth> ¦ rakudo: fa7d3bf7dd | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[10:02] <Geth> ¦ rakudo: Strip out some unneeded candidates

[10:02] <Geth> ¦ rakudo: 

[10:02] <Geth> ¦ rakudo: - remove the mandatory ! from the :m in the :i! :m! candidate

[10:02] <Geth> ¦ rakudo: - let the :i! case be handled by the :i!, :m candidate

[10:02] <Geth> ¦ rakudo: - remove the :i! candidate

[10:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fa7d3bf7dd

[10:27] <Geth> ¦ rakudo: 8876e0353b | (Elizabeth Mattijsen)++ | src/core.c/Date.pm6

[10:27] <Geth> ¦ rakudo: Make Date.today 1.5x as fast again

[10:27] <Geth> ¦ rakudo: 

[10:27] <Geth> ¦ rakudo: By using nqp::decodelocaltime directly, so no need for a lot

[10:27] <Geth> ¦ rakudo: of calculations.

[10:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8876e0353b

[10:28] *** hungryd18 joined
[10:31] *** hungrydonkey left
[10:37] *** hungryd18 left
[10:38] *** hungrydonkey joined
[10:40] <Geth> ¦ rakudo: c5c98dea2b | (Elizabeth Mattijsen)++ | src/core.c/REPL.pm6

[10:40] <Geth> ¦ rakudo: Fix R#3476 and make RAKUDO_HIST work

[10:40] <Geth> ¦ rakudo: 

[10:40] <Geth> ¦ rakudo: - add check for old history file

[10:40] <Geth> ¦ rakudo: - if old exists, and new one doesn't, move the history file

[10:40] <Geth> ¦ rakudo: - use slurp/spurt for moving, rather than rename just in case the

[10:40] <Geth> ¦ rakudo:   new directory happens to be on a different device.

[10:40] <linkable6> R#3476 [open]: https://github.com/rakudo/rakudo/issues/3476 rakudo-history is still written to ~/.perl6

[10:40] <Geth> ¦ rakudo: - fix check for RAKUDO_HIST, it was using the always non-existing

[10:40] <Geth> ¦ rakudo:   $*ENV rather than %*ENV

[10:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c5c98dea2b

[10:42] <Geth> ¦ rakudo: 94713af7e9 | (Elizabeth Mattijsen)++ | src/core.c/REPL.pm6

[10:42] <Geth> ¦ rakudo: RAKUDO_HIST needs an .IO

[10:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/94713af7e9

[11:05] <Geth> ¦ rakudo: 8498774249 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[11:05] <Geth> ¦ rakudo: Support :i(ignorecase) / :m(ignoremark) with Str.contains

[11:05] <Geth> ¦ rakudo: 

[11:05] <Geth> ¦ rakudo: - on MoarVM, uses nqp::indexic / indexim / indexicim ops

[11:05] <Geth> ¦ rakudo: - other backends use foldcase logic for :i(ignorecase)

[11:05] <Geth> ¦ rakudo: - dies on other backends trying to use :m(ignoremark)

[11:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8498774249

[11:05] *** hungryd22 joined
[11:08] *** hungrydonkey left
[11:09] *** domidumont left
[11:30] *** hungrydonkey joined
[11:34] *** sena_kun left
[11:34] *** hungryd22 left
[11:49] *** sena_kun joined
[12:14] <|Tux|> Rakudo version 2020.01-148-gfa7d3bf7d - MoarVM version 2020.01.1-35-gecddb4de5

[12:14] <|Tux|> csv-test-xs-20      0.361 -  0.362

[12:14] <|Tux|> csv-ip5xs           0.709 -  0.731

[12:14] <|Tux|> test-t --race       0.784 -  0.790

[12:14] <|Tux|> test-t              1.766 -  1.768

[12:14] <|Tux|> csv-ip5xs-20        5.966 -  6.054

[12:14] <|Tux|> test                7.238 -  7.300

[12:14] <|Tux|> test-t-20 --race    8.453 -  8.819

[12:14] <|Tux|> csv-parser         22.001 - 23.454

[12:14] <|Tux|> test-t-20          30.085 - 30.182

[12:22] *** Kaiepi left
[12:23] *** Kaiepi joined
[12:25] *** squashable6 left
[12:28] *** squashable6 joined
[12:33] <Geth> ¦ rakudo: 0b2236a15b | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[12:33] <Geth> ¦ rakudo: Normalize the way out-of-range position is handled

[12:33] <Geth> ¦ rakudo: 

[12:33] <Geth> ¦ rakudo: - for index, rindex and contains

[12:33] <Geth> ¦ rakudo: - introducing new private method !fail-oor for handling errors

[12:33] <Geth> ¦ rakudo: - removed !INDEX-OOR and !RINDEX-OOR in favour of !fail-oor

[12:33] <Geth> ¦ rakudo: - some additional tweaks

[12:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0b2236a15b

[12:34] *** domidumont joined
[12:52] <Geth> ¦ rakudo: d91c773a23 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[12:52] <Geth> ¦ rakudo: Support :i(ignorecase) / :m(ignoremark) with Str.substr-eq

[12:52] <Geth> ¦ rakudo: 

[12:52] <Geth> ¦ rakudo: - on MoarVM, uses nqp::indexic / indexim / indexicim ops

[12:52] <Geth> ¦ rakudo: - other backends use foldcase logic for :i(ignorecase)

[12:52] <Geth> ¦ rakudo: - dies on other backends trying to use :m(ignoremark)

[12:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d91c773a23

[13:04] *** squashable6 left
[13:07] *** squashable6 joined
[13:16] <Geth> ¦ rakudo: 2e3c091cb3 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[13:16] <Geth> ¦ rakudo: Prepare rindex for :i / :m addition

[13:16] <Geth> ¦ rakudo: 

[13:16] <Geth> ¦ rakudo: Since there is no rindexic / rindexim / rindexicim yet, stalling for

[13:16] <Geth> ¦ rakudo: now.  Should possibly be later implemented using nqp::flip.  OTOH,

[13:16] <Geth> ¦ rakudo: there has also been discussion on deprecating rindex in favour of

[13:16] <Geth> ¦ rakudo: index(:end).  So procrastinating seems to be the best course of

[13:16] <Geth> ¦ rakudo: action at the moment.

[13:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2e3c091cb3

[13:27] <lizmat> afk for a few hours&

[13:29] *** lucasb joined
[13:33] *** sena_kun left
[13:49] *** sena_kun joined
[14:12] *** jmerelo left
[14:14] *** Xliff left
[14:36] *** ukine1 joined
[14:36] *** ukine left
[15:11] <sena_kun> releasable6: status

[15:11] <releasable6> sena_kun, Next release in ≈10 days and ≈3 hours. 6 blockers. 0 out of 155 commits logged

[15:11] <releasable6> sena_kun, Details: https://gist.github.com/c6bfa71464fa3f08a75ac235850e6873

[15:13] *** |Tux| left
[15:13] *** |Tux| joined
[15:28] <Geth> ¦ rakudo: adb85e443b | (Jonathan Worthington)++ | src/Perl6/Actions.nqp

[15:28] <Geth> ¦ rakudo: Fix closure handling of the s/// construct

[15:28] <Geth> ¦ rakudo: 

[15:28] <Geth> ¦ rakudo: This fixes #3475. It may well also fix more than that, since it turned

[15:28] <Geth> ¦ rakudo: out to be a more general problem with scoping of blocks in thunks.

[15:28] <linkable6> RAKUDO#3475 [closed]: https://github.com/rakudo/rakudo/issues/3475 [BLOCKER][regression] Likely memory corruption in .hyper

[15:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/adb85e443b

[15:29] <jnthn> releasable6: stats

[15:29] <releasable6> jnthn, I cannot recognize this command. See wiki for some examples: https://github.com/Raku/whateverable/wiki/Releasable

[15:29] <jnthn> releasable6: status

[15:29] <releasable6> jnthn, Next release in ≈10 days and ≈3 hours. 5 blockers. 0 out of 155 commits logged

[15:29] <releasable6> jnthn, Details: https://gist.github.com/2d5f0c2d6b3ce07bc1c08b0a2737cccb

[15:29] <jnthn> Now one less blocker ;-)

[15:32] *** sena_kun left
[15:48] *** sena_kun joined
[16:04] *** travis-ci joined
[16:04] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Support :i(ignorecase) / :m(ignoremark) with Str.substr-eq

[16:04] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/649434199 https://github.com/rakudo/rakudo/compare/0b2236a15bf2...d91c773a231a

[16:04] *** travis-ci left
[16:09] <Geth> ¦ nqp: 7d711031ed | (Jonathan Worthington)++ | src/HLL/Grammar.nqp

[16:09] <Geth> ¦ nqp: Recognize `chain` as an assoc

[16:09] <Geth> ¦ nqp: 

[16:09] <Geth> ¦ nqp: And form the tree as if it's left-assoc; the compiler should then make

[16:09] <Geth> ¦ nqp: sure the op type is set to chain. This forms half of a fix for

[16:09] <Geth> ¦ nqp: https://github.com/rakudo/rakudo/issues/3370.

[16:09] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/7d711031ed

[16:10] <Geth> ¦ rakudo: d027ee0cdf | (Jonathan Worthington)++ | 2 files

[16:10] <Geth> ¦ rakudo: Enable user-defined chaining operators to work

[16:10] <Geth> ¦ rakudo: 

[16:10] <Geth> ¦ rakudo: Fixes #3370.

[16:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d027ee0cdf

[16:10] <linkable6> RAKUDO#3370 [closed]: https://github.com/rakudo/rakudo/issues/3370 User Defined `is assoc<chain>` function not acting as expected

[16:11] <Geth> ¦ roast: 31d18298da | (Jonathan Worthington)++ | S06-traits/is-assoc.t

[16:11] <Geth> ¦ roast: Test user-defined chain assoc ops

[16:11] <Geth> ¦ roast: 

[16:11] <Geth> ¦ roast: Covers https://github.com/rakudo/rakudo/issues/3370.

[16:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/31d18298da

[16:34] *** ukine1 left
[16:35] <Geth> ¦ rakudo: 3498c540a6 | (Jonathan Worthington)++ | src/Perl6/Actions.nqp

[16:35] <Geth> ¦ rakudo: Fix internal compiler error on parameter re-decl

[16:35] <Geth> ¦ rakudo: 

[16:35] <Geth> ¦ rakudo: This was reported in #3102 and #2909.

[16:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3498c540a6

[16:35] <linkable6> RAKUDO#3102 [open]: https://github.com/rakudo/rakudo/issues/3102 [LTA][regression] Confusing error message when redeclaring/modifying a read-only variable

[16:35] <linkable6> RAKUDO#2909 [open]: https://github.com/rakudo/rakudo/issues/2909 [LTA][regression] potential regression: sub foo($i) {my $i; say $i}

[16:36] <jnthn> m: use Test; lives-ok { EVAL q|no worries; sub MAIN( :$input ) { my $input //= 1; }| }

[16:37] <jnthn> releasable6: use Test; lives-ok { EVAL q|no worries; sub MAIN( :$input ) { my $input //= 1; }| }

[16:37] <releasable6> jnthn, I cannot recognize this command. See wiki for some examples: https://github.com/Raku/whateverable/wiki/Releasable

[16:37] <sena_kun> мм? :)

[16:37] <jnthn> committable6: use Test; lives-ok { EVAL q|no worries; sub MAIN( :$input ) { my $input //= 1; }| }

[16:37] <committable6> jnthn, ¦use: «Cannot find this revision (did you mean “all”?)»

[16:37] <jnthn> gah

[16:37] <jnthn> committable6: all use Test; lives-ok { EVAL q|no worries; sub MAIN( :$input ) { my $input //= 1; }| }

[16:38] <jnthn> releasable6 doesn't check all releases :)

[16:38] <committable6> jnthn, https://gist.github.com/d971b6824bb54da688942e478e35b94e

[16:38] <japhb> How would I go about scanning a namespace for installed plugins?  In other words, if I know all my plugins will be named 'Foo::Bar::Plugins::*', how do I find them all (quickly, one hopes)?  And then how do I determine which ones were precompiled against the version of 'Foo::Bar' that is currently trying to load them all?

[16:43] <Geth> ¦ roast: 410be65379 | (Jonathan Worthington)++ | S04-declarations/multiple.t

[16:43] <Geth> ¦ roast: Cover redeclaration of a parameter

[16:43] <Geth> ¦ roast: 

[16:43] <Geth> ¦ roast: Covers https://github.com/rakudo/rakudo/issues/2909 and

[16:43] <Geth> ¦ roast: https://github.com/rakudo/rakudo/issues/3102.

[16:43] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/410be65379

[16:43] *** Kaiepi left
[16:44] <jnthn> Two issues for the price of one fix... :)

[16:44] <rba> Anyone knows what is going on with matrix.org IRC bridge?

[16:44] <sena_kun> duplicates are best. :>

[16:46] *** Kaiepi joined
[17:04] <Geth> ¦ rakudo: 6bf227d0be | (Jonathan Worthington)++ | src/core.c/REPL.pm6

[17:04] <Geth> ¦ rakudo: Have the REPL register uncaught exception handler

[17:04] <Geth> ¦ rakudo: 

[17:04] <Geth> ¦ rakudo: In the thread pool scheduler. This means that an exception thrown by a

[17:04] <Geth> ¦ rakudo: thread and unhandled will be reported, but not bring down the REPL.

[17:04] <Geth> ¦ rakudo: Reported in https://github.com/rakudo/rakudo/issues/2947.

[17:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6bf227d0be

[17:14] *** squashable6 left
[17:15] *** squashable6 joined
[17:19] *** Kaiepi left
[17:20] *** Kaiepi joined
[17:27] *** domidumont left
[17:30] <japhb> nine, ugexe: Any thoughts on my plugin question (https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-02-12#l211)?  Everything I've found so far indicates CURI is designed to find candidates given a fixed short name, rather than to iterate over a subspace.

[17:33] *** sena_kun left
[17:39] *** Kaiepi left
[17:41] <jnthn> japhb: `zef list --installed` seems to do this: https://github.com/ugexe/zef/blob/7460e526f8facd35d8864fd4f2e1d557afcc6a04/lib/Zef/Client.pm6#L664

[17:47] *** sena_kun joined
[17:51] *** Kaiepi joined
[18:02] *** hungrydonkey left
[18:19] <nine> japhb: we don't have a good story for namespace searches. I've never had a good idea for the API or how to implement it in a performant way. It also never came up as a big priority, so solutions may ned be as far away as that sounded.

[18:22] <nine> Maybe, just maybe, and I may be just too tired to make useful suggestions, but.... couldn't you name all the plugins Foo::Bar::Plugin and use different :api markers? That way CURI's .candidates can be used to efficiently find them.

[18:47] *** travis-ci joined
[18:47] <travis-ci> Rakudo build passed. Jonathan Worthington 'Enable user-defined chaining operators to work

[18:47] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/649526727 https://github.com/rakudo/rakudo/compare/adb85e443bac...d027ee0cdfbd

[18:47] *** travis-ci left
[18:53] *** nine left
[18:58] *** nine joined
[19:00] *** camelia joined
[19:24] <Geth> ¦ rakudo: 46ef7f482b | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[19:24] <Geth> ¦ rakudo: Reorganize Str.indices

[19:24] <Geth> ¦ rakudo: 

[19:24] <Geth> ¦ rakudo: - in preparation for adding support for :ignorecase and :ignoremark

[19:24] <Geth> ¦ rakudo: - write more Raku code than just nqp::ops

[19:24] <Geth> ¦ rakudo: - normalize handling for out-of-range positions

[19:24] <Geth> ¦ rakudo: - fix some indenting

[19:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/46ef7f482b

[19:34] *** sena_kun left
[19:44] *** travis-ci joined
[19:44] <travis-ci> Rakudo build passed. Jonathan Worthington 'Fix internal compiler error on parameter re-decl

[19:44] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/649539700 https://github.com/rakudo/rakudo/compare/d027ee0cdfbd...3498c540a6ef

[19:44] *** travis-ci left
[19:48] *** squashable6 left
[19:49] *** sena_kun joined
[19:50] *** squashable6 joined
[19:59] <Geth> ¦ rakudo: 9f7100296f | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[19:59] <Geth> ¦ rakudo: Support :i(ignorecase) / :m(ignoremark) with Str.indices

[19:59] <Geth> ¦ rakudo: 

[19:59] <Geth> ¦ rakudo: - on MoarVM, uses nqp::indexic / indexim / indexicim ops

[19:59] <Geth> ¦ rakudo: - other backends use foldcase logic for :i(ignorecase)

[19:59] <Geth> ¦ rakudo: - dies on other backends trying to use :m(ignoremark)

[19:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9f7100296f

[20:37] <Geth> ¦ rakudo: e2ba546f43 | (Elizabeth Mattijsen)++ | 5 files

[20:37] <Geth> ¦ rakudo: RIP nqp::p6decodelocaltime

[20:37] <Geth> ¦ rakudo: 

[20:37] <Geth> ¦ rakudo: It was not being used, and NQP itself provides nqp::decodelocaltime

[20:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e2ba546f43

[20:39] <Geth> ¦ rakudo: 663c427e7f | (Elizabeth Mattijsen)++ | docs/ops.markdown

[20:39] <Geth> ¦ rakudo: Remove documentation of nqp::p6decodelocaltime

[20:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/663c427e7f

[20:45] <Geth> ¦ nqp: c294dee6d7 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[20:45] <Geth> ¦ nqp: Move and update decodelocaltime lemma

[20:45] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/c294dee6d7

[20:51] <japhb> nine: Interesting idea, but wouldn't work for this case.  I don't actually need the plugins myself (it's not how I tend to architect my code), it's to give other programmers a way to deliver new functionality to users *without* involving me, or any central group -- and thus there's no obvious way to avoid API numbering collisions.

[20:54] <lizmat> also: that's not what :apI was intended to be used for  :-)

[21:01] <japhb> lizmat: Yeah, agreed.  I was actually thinking about some way for plugins to declare the core API version they needed, in order to only consider plugins that would be appropriate, but then I realized that was just a subset of the functionality modules already have by 'use'ing the core components they want by long name.

[21:02] <japhb> Hence the thought of just saying "List the modules in this namespace that have been precompiled against myself" -- realizing of course that may be two passes in reality.

[21:19] <Geth> ¦ rakudo: 10e5390ba3 | (Elizabeth Mattijsen)++ | 7 files

[21:19] <Geth> ¦ rakudo: Change references to "Perl 6" to "Raku"

[21:19] <Geth> ¦ rakudo: 

[21:19] <Geth> ¦ rakudo: Only in internal comments and documentation.

[21:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/10e5390ba3

[21:33] *** sena_kun left
[21:41] <dogbert11> can I ask a stupid question wrt this line of code: https://github.com/rakudo/rakudo/blob/master/src/core.c/Str.pm6#L544

[21:41] <dogbert11> why isn't it    :i(:$ignorecase)

[21:42] <lizmat> because I typoed it and raku doesn't complain about it

[21:43] <lizmat> am writing tests atm   :-)

[21:43] <dogbert11> I was just curious :)

[21:44] <dogbert11> I believe there are two of those

[21:44] <lizmat> there are actually more

[21:44] <lizmat> fixing them now

[21:45] <dogbert11> aha

[21:46] *** travis-ci joined
[21:46] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Reorganize Str.indices

[21:46] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/649611106 https://github.com/rakudo/rakudo/compare/6bf227d0be20...46ef7f482b18

[21:46] *** travis-ci left
[21:46] <Geth> ¦ rakudo: 61b416edb9 | (Elizabeth Mattijsen)++ | src/core.c/Compiler.pm6

[21:46] <Geth> ¦ rakudo: Add Compiler.backend method

[21:46] <Geth> ¦ rakudo: 

[21:46] <Geth> ¦ rakudo: So we have an easy way to find out the backend we're running on:

[21:46] <Geth> ¦ rakudo: 

[21:46] <Geth> ¦ rakudo:     $*RAKU.compiler.backend

[21:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/61b416edb9

[21:47] <lizmat> restarted the failing job

[21:49] *** sena_kun joined
[21:52] <MasterDuke> potential optimization? implement passing junctions to some of the string searching routines with Aho-Corasick?

[21:53] <lizmat> not sure I follow ?

[21:55] <Geth> ¦ rakudo: 19576d6c1b | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[21:55] <Geth> ¦ rakudo: Make sure long name nameds also work

[21:55] <Geth> ¦ rakudo: 

[21:55] <Geth> ¦ rakudo: Spotted by MasterDuke++  :i($foo) will just rename the variable

[21:55] <Geth> ¦ rakudo: associated with the named parameter, whereas  :i(:$foo) will also

[21:55] <Geth> ¦ rakudo: allow the alternate name to be used.  Writing tests now  :-)

[21:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/19576d6c1b

[21:56] <MasterDuke> lizmat: fyi, that was dogbert11 who spotted that

[21:56] <lizmat> oops... dogbert11++

[21:56] <lizmat> added comment to the commit

[22:01] <MasterDuke> i was thinking about something like `if $str.contains("abc" | "def" | "xyz") { ... }`. right now that's implemented as three calls to .contains(), correct? what if instead we built an Aho-Corasick dictionary?

[22:01] <MasterDuke> quoting wikipedia "The complexity of the algorithm is linear in the length of the strings plus the length of the searched text plus the number of output matches"

[22:02] <MasterDuke> might only be worth it when searching for lots of things

[22:03] <lizmat> $str.contains("abc") is pretty fast, so autothreading should be pretty fast as well

[22:03] <lizmat> I think you will find it hare to beat that

[22:03] <lizmat> *hard

[22:05] <MasterDuke> yeah, there's probably a large constant factor that's hard to overcome practically

[22:18] *** MasterDuke left
[22:24] <Geth> ¦ roast: 5899cdff59 | (Elizabeth Mattijsen)++ | S32-str/starts-with.t

[22:24] <Geth> ¦ roast: Add tests for Str.starts-with(:i, :m)

[22:24] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5899cdff59

[22:32] <Geth> ¦ roast: 076d5dda6b | (Elizabeth Mattijsen)++ | S32-str/ends-with.t

[22:32] <Geth> ¦ roast: Add tests for Str.ends-with(:i, :m)

[22:32] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/076d5dda6b

[22:51] *** travis-ci joined
[22:51] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Support :i(ignorecase) / :m(ignoremark) with Str.indices

[22:51] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/649624739 https://github.com/rakudo/rakudo/compare/46ef7f482b18...9f7100296f2a

[22:51] *** travis-ci left
[22:51] <Geth> ¦ roast: a445d97b6b | (Elizabeth Mattijsen)++ | S32-str/contains.t

[22:51] <Geth> ¦ roast: Add tests for Str.contains(:i, :m)

[22:51] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a445d97b6b

[22:55] <lizmat> and that concludes my hacking for today&

[23:02] *** MasterDuke joined
[23:08] *** hungrydonkey joined
[23:33] *** sena_kun left
[23:46] *** sena_kun joined
[23:47] *** lucasb left
[23:50] *** AlexDaniel joined
[23:51] *** AlexDaniel left
[23:51] *** AlexDaniel joined
