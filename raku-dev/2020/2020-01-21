[00:12] <jnthn> patrickb: In principle, yes, I can mentor...will have to ponder project ideas a bit.

[00:30] <patrickb> jnthn, samcv, MasterDuke: Thank you for taking the time to think about mentoring and ideas!

[00:44] <patrickb> I'm off to bed. Night everyone!

[00:44] *** patrickb left
[07:15] *** domidumont joined
[07:44] <nine> How much time does mentoring need? How much latency is still OK? I'd be interested, just not 100 % sure I have the time.

[07:46] <nine> As to project ideas, that's much harder. I usually act on my ideas :) The projects I haven't done yet are more on the edge of or even beyond my current abilities, so probably not good for a newbie.

[09:18] *** b2gills left
[09:25] *** sena_kun joined
[09:33] *** b2gills joined
[10:20] <sena_kun> releasable6, status

[10:20] <releasable6> sena_kun, Next release will happen when it's ready. 1 blocker. 0 out of 508 commits logged

[10:20] <releasable6> sena_kun, Details: https://gist.github.com/48a922a744fb4a0105eed81d2cbaa861

[10:21] <nine> I don't think a bug in Documentable is a real blocker for the release

[10:21] <sena_kun> of course. :)

[10:22] <sena_kun> the current state of things is: 1)we are very ready for moarvm point release; 2)right now I am updating the release branch to be up to date; 3)after moarvm release I am cutting a release ASAP

[10:34] *** Altai-man_ joined
[10:36] *** sena_kun left
[10:46] <lizmat> Files=1301, Tests=109805, 210 wallclock secs (28.50 usr  8.04 sys + 2943.37 cusr 241.31 csys = 3221.22 CPU)

[10:47] <lizmat> Altai-man_ ++

[11:03] <Geth> ¬¶ rakudo: e3cbd32c6b | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[11:03] <Geth> ¬¶ rakudo: Add Version coercer to Str

[11:03] <Geth> ¬¶ rakudo: 

[11:03] <Geth> ¬¶ rakudo: This not only allows you to just do `"foo".Version` to get a Version

[11:03] <Geth> ¬¶ rakudo: object, this also allows you to use `Version(Str)` in a signature.

[11:03] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/e3cbd32c6b

[11:16] *** squashable6 left
[11:19] *** squashable6 joined
[11:40] <Geth> ¬¶ rakudo: 11a8d57f6d | (Elizabeth Mattijsen)++ | src/core.c/Perl.pm6

[11:40] <Geth> ¬¶ rakudo: Save 2 Scalar allocations at each startup

[11:40] <Geth> ¬¶ rakudo: 

[11:40] <Geth> ¬¶ rakudo: And make the version cache a little more optimised

[11:40] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/11a8d57f6d

[11:54] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: f7631eb747 | (Timo Paulssen)++ | src/vm/moar/QAST/QASTCompilerMAST.nqp

[11:54] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: "Compress" types of locals and lexicals in serialization

[11:54] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: 

[11:54] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: "obj" registers/lexicals are overwhelmingly common,

[11:54] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: so leaving their data out is worthwhile.

[11:54] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: 

[11:54] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: The result is a 1.85% size reduction of CORE.c.setting

[11:54] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: review: https://github.com/perl6/nqp/commit/f7631eb747

[12:04] <Altai-man_> phew

[12:04] <Altai-man_> changelog is ready, now $dayjob

[12:08] <lizmat> Altai-man_++

[12:28] *** lucasb joined
[12:33] *** MasterDuke left
[12:34] *** sena_kun joined
[12:36] *** Altai-man_ left
[13:14] <lizmat> Looks like "is built(:bind)" needs some extra work:

[13:14] <lizmat> m: role A { has $!a is built(:bind); method TWEAK() { $!a := 42 } }; class B does A { }; dd B.new   # yeah, great!

[13:14] <camelia> rakudo-moar 11a8d57f6: OUTPUT: ¬´B.new(a => 42)‚ê§¬ª

[13:14] <lizmat> m: role A { has $!a is built(:bind) }; class B does A { method TWEAK() { $!a := 42 } }; dd B.new   # not so great

[13:14] <camelia> rakudo-moar 11a8d57f6: OUTPUT: ¬´Type check failed in binding; expected NQPMu but got Int (42)‚ê§  in method TWEAK at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:15] <lizmat> I wonder if it step one causing this issue:

[13:15] <lizmat> m: role A { has $!a is built(:bind); method TWEAK() { $!a := 42 } }; class B does A { }; use BUILDPLAN; note BUILDPLAN(B)

[13:15] <camelia> rakudo-moar 11a8d57f6: OUTPUT: ¬´class B BUILDPLAN:‚ê§ 0: nqp::bindattr(obj,B,'$!a',:$a) if possible‚ê§ 1: vivify nqp::getattr(obj,B,'$!a') if part of a mixin‚ê§ 2: call obj.TWEAK‚ê§¬ª

[13:26] <lizmat> golfed it down to:

[13:26] <lizmat> m: role A { has Int $!a }; class B does A { method TWEAK() { $!a := 42 } }; dd B.new

[13:26] <camelia> rakudo-moar 11a8d57f6: OUTPUT: ¬´Type check failed in binding; expected NQPMu but got Int (42)‚ê§  in method TWEAK at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:27] <lizmat> aka nothing to do with "is built(:bind)"

[13:27] <lizmat> I guess if we don't install a container for the attribute, then there's nothing to type check against, and NQPMu is what we get to match against

[13:27] <lizmat> jnthn ^^^ is that assertion correct ?

[13:30] <lizmat> m: role A { has Int $!a }; class B does A { method TWEAK() { use nqp; nqp::bind($!a,42) } }; dd B.new   # naughty workaround

[13:30] <camelia> rakudo-moar 11a8d57f6: OUTPUT: ¬´B.new‚ê§¬ª

[13:33] <jnthn> lizmat: No, that looks wrong (leaking an NQPMu is certainly wrong)

[13:34] <lizmat> jnthn: it happens somewhere in what p6bindassert generates, afaics

[13:35] <lizmat> I guess $tcr_reg is not set

[13:36] <lizmat> ah no, that's the register that contains the result of the istype I guess

[13:40] <lizmat> bisectable6: role A { has Int $!a }; class B does A { method TWEAK() { $!a := 42 } }; dd B.new

[13:40] <bisectable6> lizmat, Bisecting by exit code (old=2015.12 new=11a8d57). Old exit code: 0

[13:41] <bisectable6> lizmat, bisect log: https://gist.github.com/cd58c67be7403dcaacfdd26aaeb17dc2

[13:41] <bisectable6> lizmat, (2016-11-05) https://github.com/rakudo/rakudo/commit/9409d685b78f83435aa9420f3a76fa79aae73698

[13:42] <lizmat> yeah, well, that's bogus

[13:43] <lizmat> bisectable6: role A { has Int $!a }; class B does A { method a() { $!a := 42 } }; dd B.new.a

[13:43] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=11a8d57) because on both starting points the exit code is 1

[13:44] <lizmat> looks like it has always not worked

[13:44] <bisectable6> lizmat, bisect log: https://gist.github.com/84509d65b72d0a37727c7d603ed47cac

[13:44] <bisectable6> lizmat, (2016-02-18) https://github.com/rakudo/rakudo/commit/9983c2c8434ed81c532a5706996f284283b48d0a

[13:44] <lizmat> yeah, also bogus

[13:47] <lizmat> https://github.com/rakudo/rakudo/issues/3436   # jnthn 

[14:14] <lizmat> afk for a few hours&

[14:23] <|Tux|> Rakudo version 2019.11-510-g11a8d57f6 - MoarVM version 2020.01-17-gefb014f19

[14:23] <|Tux|> csv-test-xs-20      0.364 -  0.372

[14:23] <|Tux|> csv-ip5xs           0.703 -  0.738

[14:23] <|Tux|> test-t --race       0.788 -  0.794

[14:23] <|Tux|> test-t              1.770 -  1.849

[14:23] <|Tux|> csv-ip5xs-20        6.300 -  6.365

[14:23] <|Tux|> test                7.494 -  7.747

[14:23] <|Tux|> test-t-20 --race    8.411 -  8.728

[14:23] <|Tux|> csv-parser         21.876 - 23.206

[14:23] <|Tux|> test-t-20          29.954 - 29.993

[14:34] *** Altai-man_ joined
[14:36] *** sena_kun left
[14:51] *** brrt joined
[14:51] <brrt> .tell patrickb I might mentor again, and maybe a followup project is a good idea, but I'd think it best to reach out to the original GSOC student again

[14:51] <tellable6> brrt, I'll pass your message to patrickb

[15:12] *** squashable6 left
[15:14] *** squashable6 joined
[15:48] *** brrt left
[16:26] *** domidumont left
[16:30] <TreyHarris> I got inadvertently tangled up in terminological conventions on p6-u yesterday -- are we generally calling a multi routine with (possibly sub) definitions that can be usefully called without invocant--as in `.say for lines`--`.lines`, `lines`, `lines()`, or something else?

[16:31] <TreyHarris> On docs.raku.org, the hyperlinks make the question less salient than in straight prose

[16:35] *** sena_kun joined
[16:36] *** Altai-man_ left
[16:38] <nine> TreyHarris: I don't think I understand your question

[16:40] <TreyHarris> nine: If I want to talk about the notional entity discussed in https://docs.raku.org/routine/lines -- composed from many definitions that are interparticipating -- do we have a convention how to refer to it, as `.lines` vs `lines()` would be used in discussing many C-family OOP languages? 

[16:40] *** domidumont joined
[16:40] *** domidumont left
[16:42] <[Coke]> I don't think there's a standard format for a "routine" that has both method & sub forms.

[16:44] *** domidumont joined
[16:44] <TreyHarris> Okay. That's fine; I don't mind not having a convention, I just don't want to be not following it if we did have one

[16:50] <[Coke]> Thanks.

[16:59] *** brrt joined
[18:00] *** patrickb joined
[18:03] *** finsternis joined
[18:05] <patrickb> brrt / samcv: nine asked about the (response) time needed for mentoring. Could you share some experience?

[18:05] <tellable6> 2020-01-21T14:51:30Z #raku-dev <brrt> patrickb I might mentor again, and maybe a followup project is a good idea, but I'd think it best to reach out to the original GSOC student again

[18:06] <patrickb> brrt: Recruting last years student again seems like a very smart move to me. Can you try to get in contact with pamplemousse again?

[18:08] <brrt> I'll try

[18:08] <tellable6> 2020-01-21T16:02:09Z #moarvm <nine> brrt: I posted the link yesterday :)

[18:08] <tellable6> 2020-01-21T16:02:35Z #moarvm <nine> brrt: mere minutes before you joined the channel

[18:09] <patrickb> brrt++

[18:14] *** pochi_ left
[18:15] *** brrt left
[18:17] *** pochi joined
[18:20] <patrickb> vrurg: You there?

[18:20] <vrurg> patrickb: right here! :)

[18:21] <vrurg> patrickb: I saw your request, but unfortunately, I'm useless in that sense. 

[18:22] <patrickb> vrurg: I'm looking at the git-reference PR again. I have little idea about the ins and outs of BEGIN blocks and thus little idea to help me find a nicer way for the BEGIN block debacle...

[18:23] <patrickb> vrurg: That's OK. I just want to make sure people think about it in time and decide whether or not they want to get involved. Two days before the deadline is simply to late for a thought through decision or brainstorming for ideas. That's why I'm actively poking people.

[18:26] <vrurg> patrickb: Let me put it this way about BEGINs: when Foswiki project started long ago as TWiki, people thought: a few lines in a BEGIN block is fine. It all ended up with monstrous, unmanageable, and fragile code which relied on peculiarities of compile-time execution.

[18:26] <vrurg> patrickb: It would even be better if you just run an external script from BEGIN which would do the same task.

[18:28] <patrickb> vrurg: Can you point me into a direction of how to change it? As far as I understand it, the submodule imports need to be done before using the nqp-configure repo, thus the BEGIN block. I'm willing to do that, it's just that the word "even" in that sentence sounds like one should actually come up with a better alternative. :-)

[18:29] <vrurg> In this context 'even' means 'better than big BEGIN' :)

[18:29] * vrurg is thinking about it yet....

[18:32] <vrurg> patrickb: the quick solution is to get the submodule update code, make a script out of it and execute the script within BEGIN. Because the alternative would be extracting all code from Configure.pl into a module and, perhaps, make it a class. Then we'd get more freedom.

[18:32] <vrurg> But the second solution is too time-costly.

[18:33] <patrickb> vrurg: OK, then I'll go for the script. Thanks for the heads up!

[18:33] <vrurg> patrickb: good luck!

[18:34] <vrurg> patrickb: BTW, I think we must start thinking of what to do about perl6- prefixed executables. Time to rename them as well, but have to consider consequences.

[18:34] *** Altai-man_ joined
[18:34] <patrickb> vrurg: You mean about the ones in the build dir?

[18:34] <vrurg> Yes, them. We also install them.

[18:36] <vrurg> And not only moar backend, but jvm and js too which scares me a lot.

[18:36] <patrickb> I'd say there is little potential for any breakage when renaming those. For the ones that are installed I'm a little less confident, as it's difficult to know how users treat the installed files. But my gut feeling says "What could go wrong?"

[18:37] *** sena_kun left
[18:37] <patrickb> I've never done much dabbling in jvm / js. Can't say much about those. :-/

[18:40] <vrurg> patrickb: We'd have to have symlinks for quite some time. But, anyway, I'd like to spare this week for another project and a new post about roles. Hope to get back to this next week. Perhaps, will open an issue to welcome as much discussion as possible.

[18:41] <patrickb> vrurg++

[18:51] <tony-o> AlexDaniel: http::server::async was written before the threading copied context in moar, even :-)

[18:51] <tony-o> i reckon i started that in 2011

[18:52] <tony-o> err, probably 2012

[18:53] <AlexDaniel> sure, but Bisectable was written in 2015 or 2016

[18:53] <tony-o> lizmat: AlexDaniel: is there a new way to getting stuff in the weekly?

[18:54] <AlexDaniel> tony-o: new way? weekly: should work

[18:54] <AlexDaniel> weekly: new exciting stuff! (just a test)

[18:54] <notable6> AlexDaniel, Noted! (weekly)

[18:54] <tony-o> weekly: https://deathbyperl6.com/zef-ecosystem/

[18:54] <notable6> tony-o, Noted! (weekly)

[18:54] <tony-o> ah, ty, dunno why i can't remember that

[18:54] <tony-o> i was referring to your conversation about migrating to cro

[18:55] <tony-o> i would recommend it

[18:55] <AlexDaniel> right :)

[18:58] *** jmerelo joined
[18:58] *** squashable6 left
[18:59] *** squashable6 joined
[19:25] *** brrt joined
[19:39] *** MasterDuke joined
[19:47] *** jmerelo left
[19:56] *** domidumont left
[20:10] <patrickb> vrurg: Mind to have another look at the PRs?

[20:11] <vrurg> patrickb: perhaps later today or tomorrow.

[20:16] *** squashable6 left
[20:18] *** squashable6 joined
[20:34] *** sena_kun joined
[20:37] *** Altai-man_ left
[20:47] <patrickb> .seen rba

[20:47] <tellable6> patrickb, https://gist.github.com/b1d9249455b34adb11916019c61400ac

[20:56] <patrickb> .tell rba If you find the time to have a look at https://github.com/perl6/rakudo.org/pull/32 that'd be great. I'm more and more blocked by that merge...

[20:56] <tellable6> patrickb, I'll pass your message to rba

[20:56] <patrickb> I'm off to bed. Night everyone! o/

[20:57] *** patrickb left
[21:21] <rba> patrickb: will take care of your pr tomorrow. 

[21:21] <tellable6> rba, I'll pass your message to patrickb

[21:21] <Geth> ¬¶ rakudo/release-2020.01: 6 commits pushed by Altai-man++, (Elizabeth Mattijsen)++

[21:21] <Geth> ¬¶ rakudo/release-2020.01: 7a68265173 | Update new release date

[21:21] <Geth> ¬¶ rakudo/release-2020.01: 80b5584a73 | Log all changes (+ announcement)

[21:21] <Geth> ¬¶ rakudo/release-2020.01: c1886501a1 | Remove reverted commit

[21:21] <Geth> ¬¶ rakudo/release-2020.01: b6873e4598 | Make the Mu.perl fallback method a multi

[21:21] <Geth> ¬¶ rakudo/release-2020.01: ffd0865820 | Update changelog

[21:21] <Geth> ¬¶ rakudo/release-2020.01: b800c47503 | Update COPYRIGHT date

[21:21] <Geth> ¬¶ rakudo/release-2020.01: review: https://github.com/rakudo/rakudo/compare/7a68265173b6^...b800c47503b9

[21:23] <Geth> ¬¶ rakudo: Altai-man++ created pull request #3438: Release 2020.01

[21:23] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/3438

[21:24] *** brrt left
[21:34] <samcv> .tell patrickb and nine: well it depends on the mentee I think. But best to set expectations early. But I was not super active, but gave more domain specific knowledge as well as advice on algorithms and way to aproach problems for the student

[21:34] <tellable6> samcv, I'll pass your message to patrickb

[21:35] <samcv> I got a message from jj about mentoring for outreachy. i would be interested, well i'm not sure what to do it on. but i could come up with something if needed. not sure how specific i should be for listing my mentorship, like as far as the tasks

[21:36] <samcv> i'm not sure how much it differs from GSoC. GSoC you need to set out the plan early on

[22:21] *** Xliff joined
[22:34] *** Altai-man_ joined
[22:37] *** sena_kun left
[22:46] *** Altai-man_ left
[22:50] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: c383acd8ed | (Timo Paulssen)++ | src/QAST/Block.nqp

[22:50] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: use base 36 for cuids instead of base10

[22:50] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: 

[22:50] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: longest cuid in the core setting is now 3 digits

[22:50] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: instead of 5 as before. The savings are tiny in

[22:50] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: total, though.

[22:50] <Geth> ¬¶ nqp/compressed_lex_loc_types_serialization: review: https://github.com/perl6/nqp/commit/c383acd8ed

