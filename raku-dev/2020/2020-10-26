[00:27] *** frost-lab joined
[01:20] *** Xliff left
[02:20] *** linkable6 left
[02:20] *** evalable6 left
[02:21] *** evalable6 joined
[02:22] *** linkable6 joined
[03:56] *** Xliff joined
[04:40] *** Xliff left
[05:14] *** Xliff joined
[05:19] *** Xliff left
[06:37] *** sena_kun joined
[07:38] <[Tux]> Rakudo v2020.10-1-g746c5998c (v6.d) on MoarVM 2020.10-3-g5c791a481

[07:38] <[Tux]> csv-test-xs-20      0.397 -  0.400

[07:38] <[Tux]> test-t --race       0.873 -  0.904

[07:38] <[Tux]> csv-ip5xs           0.852 -  1.745

[07:38] <[Tux]> test-t              1.968 -  2.029

[07:38] <[Tux]> test                8.536 -  9.015

[07:38] <[Tux]> csv-ip5xs-20        8.583 -  9.096

[07:38] <[Tux]> test-t-20 --race   10.768 - 11.082

[07:38] <[Tux]> csv-parser         28.927 - 29.193

[07:38] <[Tux]> test-t-20          34.632 - 40.818

[08:54] <Geth> ¦ nqp: 41bbb997f6 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[08:54] <Geth> ¦ nqp: nqp::currentthread doesn't take any args

[08:54] <Geth> ¦ nqp: 

[08:54] <Geth> ¦ nqp: Also consistify the reference to the vm_thread object

[08:54] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/41bbb997f6

[09:18] <Geth> ¦ rakudo: 59d140bfc3 | (Elizabeth Mattijsen)++ | src/core.c/Any.pm6

[09:18] <Geth> ¦ rakudo: Give dd support for BOOTThread objects

[09:18] <Geth> ¦ rakudo: 

[09:18] <Geth> ¦ rakudo: aka vm_thread objects in NQP documentation.

[09:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/59d140bfc3

[09:21] *** Altai-man joined
[09:24] *** sena_kun left
[09:35] <lizmat> notable6: weekly

[09:35] <notable6> lizmat, 2 notes: 2020-10-24T17:52:13Z <El_Che>: updated rakudo-pkg and support for Ubuntu 20.10  ;  2020-10-25T08:39:24Z <El_Che>: linux 2020.10 packages: https://github.com/nxadm/rakudo-pkg/releases/tag/v2020.10

[11:20] <nwc10> Altai-man: as to commit 558fa31e7d689edd669ffb2cb6e2b253c8697e9e on Rakudo on t/04-nativecall/02-simple-args.t

[11:20] <linkable6> (2018-08-21) https://github.com/rakudo/rakudo/commit/558fa31e7d Skip test that fails with clang

[11:21] <nwc10> I think that the problem is actually a bug in dyncall

[11:21] <nwc10> certainly dyncall doesn't correctly cope with unsigned char and unsigned short on sparc64

[11:22] <nwc10> (doesn't pass arguments in in registers correct as per the documented ABI)

[11:22] <Geth> ¦ rakudo: e6787d77c0 | (Elizabeth Mattijsen)++ | src/Perl6/Actions.nqp

[11:22] <Geth> ¦ rakudo: Implement the prefix:<||> operator in postcircumfixes

[11:22] <Geth> ¦ rakudo: 

[11:22] <Geth> ¦ rakudo: - for 6.e and later only

[11:22] <Geth> ¦ rakudo: - described by https://design.raku.org/S09.html#line_419

[11:22] <Geth> ¦ rakudo: - sort of implemented by Wenzel P.P. Peppmeyer in Slippy::Semilist

[11:22] <Geth> ¦ rakudo: - does not actually add a prefix operator: it's just a double slip

[11:22] <Geth> ¦ rakudo: - manipulates the AST in case of a postcircumfix, to select the ; variant

[11:22] <Geth> ¦ rakudo: - the postcircumfix:<{; }> variant does the right thing for prefix:<||>

[11:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e6787d77c0

[11:22] <Geth> ¦ rakudo: 48b1b20fa3 | (Elizabeth Mattijsen)++ | src/Perl6/Actions.nqp

[11:22] <Geth> ¦ rakudo: Move version test later

[11:22] <nwc10> and they have a test in dyncall that comments about PPC32 that seems to suggest that they have the same failing there.

[11:22] <Geth> ¦ rakudo: 

[11:22] <Geth> ¦ rakudo: Not sure what is the cheaper test, but it possibly expresses the

[11:22] <Geth> ¦ rakudo: intent better.  AlexDaniel++

[11:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/48b1b20fa3

[11:22] <Geth> ¦ rakudo: 41d8956ce1 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/Perl6/Actions.nqp

[11:22] <Geth> ¦ rakudo: Merge pull request #3953 from rakudo/prefix-pipe-pipe

[11:22] <Geth> ¦ rakudo: 

[11:22] <Geth> ¦ rakudo: Implement the prefix:<||> operator in postcircumfixes

[11:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/41d8956ce1

[11:23] <lizmat> hmmm.. I probably should have squashed that  :-(

[11:23] <Altai-man> nwc10, ? I am not sure what this case implies for me.

[11:24] <nwc10> you wrote a comment in that commit

[11:24] <nwc10> I think I know more than you did back then,.

[11:24] <Altai-man> ?

[11:24] <nwc10> commit 558fa31e7d689edd669ffb2cb6e2b253c8697e9e

[11:24] <linkable6> (2018-08-21) https://github.com/rakudo/rakudo/commit/558fa31e7d Skip test that fails with clang

[11:24] <Altai-man> I see no comments on this commit, no?

[11:24] <Altai-man> 0 comments on commit 558fa31

[11:24] <nwc10> the comment contains code comments

[11:24] <nwc10> that sort of comment

[11:25] <nwc10> the good old fashioned thing. Not metadata :-)

[11:25] <Altai-man> I see.

[11:25] <nwc10> aha, actually, by 2018, Clang will be x86_64 won't it?

[11:25] <nwc10> I'm ages out of date here

[11:25] <nwc10> been summoned upstairs...

[11:25] <Altai-man> For the record, I am not AlexDaniel.

[11:25] <Altai-man> SO maybe wrong ping?

[11:27] <nwc10> yes, sorry, wrong ping

[11:27] <Altai-man> Phew, I was confused for a moment. :)

[11:27] <nwc10> yes, I am completely confused

[11:27] <nwc10> yes, it was

[11:28] <Altai-man> np

[11:28] <nwc10> AlexDaniel` is AlexDaniel I assume

[11:28] <AlexDaniel`> yeah, it might be a bug

[11:28] <nwc10> and my tab completion is wrong

[11:28] <nwc10> and I don't notice this

[11:28] <nwc10> and apparently it's lunch time

[11:28] <nwc10> and I'm trying to figure out encoding bugs now

[11:29] <AlexDaniel`> the test was already skipped on some platforms so I just made it consistent, but that doesn't mean that the test is wrong :)

[11:29] <AlexDaniel`> so if you have an idea on what's wrong and how to fix that, that's fantastic! Feel free to unskip it

[11:34] <nwc10> upstream dyncall needs changes

[11:41] *** patrickb joined
[11:45] <patrickb> nwc10: From my experience the dyncall devs are friendly and responsive. In the past I just wrote an email to the addresses listed on dyncall.org/contact . So don't hesitate to contact them should the need arise.

[11:46] * Altai-man confirms

[12:00] <lizmat> notable6: weekly reset

[12:00] <notable6> lizmat, Moved existing notes to “weekly_2020-10-26T12:00:50Z”

[13:00] <Geth> ¦ rakudo/nqpif2ternary: 60 commits pushed by 9 authors

[13:00] <Geth> ¦ rakudo/nqpif2ternary: review: https://github.com/rakudo/rakudo/compare/15cd58c120ee...649a80e1989f

[13:00] *** donaldh joined
[13:01] <lizmat> that was just solving a merge conflict

[13:18] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/10/26/2020-43-release-and-star/

[13:19] <Altai-man> lizmat++

[13:21] <nwc10> at the moment I can avoid the bug by buildng with libffi instead. Given that I seem to have a stack of different things to untangle, I'll get back to it once tests are passing

[13:21] <nwc10> and the code is cleaner

[13:22] *** sena_kun joined
[13:24] *** Altai-man left
[13:29] <Geth> ¦ rakudo: b1912d9fcf | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 58 files

[13:29] <Geth> ¦ rakudo: Replace all simple nqp::if(42,foo,bar) with ternaries (#3957)

[13:29] <Geth> ¦ rakudo: 

[13:29] <Geth> ¦ rakudo: If memory serves me well, about 1.5 years ago, optimizations in

[13:29] <Geth> ¦ rakudo: Rakudo made the construct:

[13:29] <Geth> ¦ rakudo: 

[13:29] <Geth> ¦ rakudo:    42 ?? foo !! bar

[13:29] <Geth> ¦ rakudo: 

[13:29] <linkable6> RAKUDO#3957 [closed]: https://github.com/rakudo/rakudo/pull/3957 Replace all simple nqp::if(42,foo,bar) with ternaries

[13:29] <Geth> ¦ rakudo: <…commit message has 12 more lines…>

[13:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b1912d9fcf

[13:41] <[Coke]> lizmat: thanks for poking on the nqp opcode doc test.

[13:41] <lizmat> [Coke] yw  :-)

[13:41] *** patrickb left
[13:41] <Geth> ¦ nqp: 11f88e9373 | Coke++ | docs/ops.markdown

[13:41] <Geth> ¦ nqp: Documentation - fix formatting on decont

[13:41] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/11f88e9373

[13:42] <lizmat> [Coke] and thank you for fixing my formatting booboos

[13:43] <[Coke]> no worries, it's a little esoteric.

[13:43] <[Coke]> happy to get any kind of docs in place and I can do cleanup

[13:43] <lizmat> ok, I have some more lined up after some research  :-)

[13:44] <[Coke]> nqp: nqp::js('wtf');

[13:44] <camelia> nqp-moarvm: OUTPUT: «Running JS NYI on MoarVM␤   at <tmp>:1  (<ephemeral file>:<mainline>)␤ from gen/moar/stage2/NQPHLL.nqp:1945  (/home/camelia/rakudo-m-inst-2/share/nqp/lib/NQPHLL.moarvm:eval)␤ from gen/moar/stage2/NQPHLL.nqp:2150  (/home/camelia/rakudo-m-inst-2/share/nqp/li…»

[13:44] <[Coke]> ... why do we even have that?

[13:44] <lizmat> git blame maybe reveals that ?

[13:44] <[Coke]> We seem very happy to have specific opcodes per VM, so why add one that just dies on purpose?

[13:45] <timotimo> so that the same code will compile on multiple backends without the #?if moar stuff

[13:45] <lizmat> well, it is a NYI, so maybe the idea is to have it be supported at some point ?

[13:45] <[Coke]> was added by pmurias

[13:45] <[Coke]> timotimo: that... is an acceptable reason.

[13:46] <[Coke]> but if we're going to do it, maybe we should do better. :)

[13:46] <lizmat> timotimo: but that just turns a compile time error into a runtime one ?

[13:46] <timotimo> correct

[13:46] <timotimo> but the mere presence of the op somewhere doesn't mean it will die at runtime

[13:46] <timotimo> since it doesn't necessarily have to be called

[13:46] <[Coke]> (You can see a lot of vm-specific opcodes in the docs (and more in the 'not ok's of the doc test output)

[13:46] *** sena_kun left
[13:50] <[Coke]> is there an easy way to sort in NQP?

[13:50] <[Coke]> (no opcode, no method on NQPArray...)

[13:50] <lizmat> not to my knowledge

[13:51] <[Coke]> ok. (I ended up just lifting rakudo's "trim" into the nqp test when I needed it.

[13:51] <[Coke]> Does make me want to rewrite the whole test in Raku (which I think would be fine, but also work)

[13:57] *** lucasb joined
[14:00] *** frost-lab left
[14:38] *** |Tux| left
[14:50] *** domidumont joined
[15:11] <[Coke]> ... huh. was a lot easier this time around. Definitely got stuck the last time I tried this.

[15:11] <[Coke]> (the raku version is much slower, however.)

[15:16] <Geth> ¦ nqp: df6bdceb59 | Coke++ | t/docs/opcodes.t

[15:16] <Geth> ¦ nqp: Convert test to Raku

[15:16] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/df6bdceb59

[15:31] <donaldh> I'm working on updating the macOS homebrew formula for rakudo-star but there's a problem. The brew CICD checks for leakage into the built binaries: "Files were found with references to the Homebrew shims directory"

[15:33] <donaldh> And right enough, for 5 modules that get installed, the entire ENV gets embeded in the precomp bytecode files.

[15:38] <donaldh> The thing in common between the files seems to be "use Test"

[15:39] <lizmat> nine ^^^

[15:49] <donaldh> Easy to reproduce with a file that just contains "use Test": https://gist.github.com/donaldh/02f62b4fd6ad7b76c91eb67fec3b704d

[15:53] <Geth> ¦ nqp/master: 6 commits pushed by Coke++

[15:53] <Geth> ¦ nqp/master: f583238c49 | remove duplicated data

[15:53] <Geth> ¦ nqp/master: d6c4e288e4 | make test executable

[15:53] <Geth> ¦ nqp/master: b0edef807f | sort opcodes

[15:53] <Geth> ¦ nqp/master: 826c3d0234 | remove uneeded var

[15:53] <Geth> ¦ nqp/master: fb5a7acf9e | skip invalid JS opcodes also

[15:53] <Geth> ¦ nqp/master: d7a2fca5e9 | fix join

[15:53] <Geth> ¦ nqp/master: review: https://github.com/Raku/nqp/compare/df6bdceb5948...d7a2fca5e9d4

[15:53] <donaldh> A bit of dissection and I seem to have narrowed it down to this commit: https://github.com/rakudo/rakudo/commit/30e7a67c55546e934ae46ed600e04c1c503cece5

[15:55] <donaldh> Removing "my %ENV := %*ENV;" eliminates the problem environment strings.

[15:56] <lizmat> that would have been my suggestion

[15:56] <lizmat> too bad you didn't try last week  :-(

[15:57] <donaldh> I don't understand why it has that effect though.

[15:58] <lizmat> donaldh: could you please make an issue for this

[15:58] <lizmat> especially since the fix appears to be easy, *and* not understood

[15:59] <lizmat> donaldh: also, could you try *without* the binding ?

[15:59] <lizmat> aka: my %ENV = %*ENV;

[15:59] <lizmat> ?

[15:59] <donaldh> Yes, I can do.

[16:01] <donaldh> Possibly related and probably not desirable: the value of TMPDIR is included in ~150 bytecode files. That's the randomised TMPDIR for the login session that was active during compile.

[16:02] <lizmat> was "use Test" involved in that ?

[16:05] <donaldh> No, that's just an observation I made along teh way.

[16:11] <lizmat> donaldh: perhaps it's also time to remove the PERL6_...  alternatives

[16:22] *** sena_kun joined
[16:24] <nine> Well I think it's pretty clear why the environment lands in the precomp file. A "use Test" will load that module and run its mainline. Any objects created during this mainline run will be added to the serialization context of the current compilation, i.e. Test's user. So Test's user is the actual owner of this my %ENV

[16:26] <nine> So the fix will be to just not create any new reference to the environment. Yes, accessing %*ENV is slower, but we do it 4 times max. Won't cost you a millisecond

[16:27] <lizmat> in a spectest, that's still be more than a second, though, which was the reason I did this

[16:30] <nine> I wonder if the mainline's runtime is even the right time for initializing those variables.

[16:32] <Geth> ¦ nqp: b15a2b9e8d | Coke++ | docs/ops.markdown

[16:32] <Geth> ¦ nqp: Document stringify

[16:32] <Geth> ¦ nqp: 

[16:32] <Geth> ¦ nqp: (was previous in as strify which was incorrect and removed)

[16:32] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/b15a2b9e8d

[16:32] <Geth> ¦ nqp: 20940b6071 | Coke++ | t/docs/opcodes.t

[16:32] <Geth> ¦ nqp: raku autovivifies

[16:32] <Geth> ¦ nqp: 

[16:33] <Geth> ¦ nqp: Remove code that was needed in nqp version

[16:33] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/20940b6071

[16:33] <[Coke]> lizmat: down to 223

[16:33] <[Coke]> (only 204 of those are for Moar)

[16:33] <lizmat> :-)

[16:38] <Geth> ¦ nqp: 0ffba885f3 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[16:38] <Geth> ¦ nqp: Change Perl 6 reference to Raku

[16:38] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/0ffba885f3

[16:42] <lizmat> nine donaldh will be afk for a few hours, will look it again when back

[16:44] <lizmat> nine: you mean it should run at INIT time, or ENTER time ?

[16:44] <lizmat> afk&

[16:50] <nine> It should run when we're actually interested in running tests. Modules that are just after Test's exported functions don't need this code run during their compilation at all.

[16:52] *** domidumont left
[18:01] *** travis-ci joined
[18:01] <travis-ci> NQP build passed. Elizabeth Mattijsen 'Change Perl 6 reference to Raku'

[18:01] <travis-ci> https://travis-ci.org/Raku/nqp/builds/739033044 https://github.com/Raku/nqp/compare/20940b607198...0ffba885f362

[18:01] *** travis-ci left
[18:09] <[Coke]> ... did we just get travis back and then lose it?

[18:10] <nwc10> I *thought* that it was one of those bots that did a "drive by" to report things

[18:10] <[Coke]> didn't report any of my changes.

[18:10] <nwc10> yes, good point

[18:10] <nwc10> oh, passed

[18:11] <[Coke]> so maybe all mine were fails? Iunno

[18:11] <nwc10> did it think that its previous state was "Failed"

[18:55] <lizmat> nine: that's basically saying that every test sub run should do the check ?

[19:15] <Geth> ¦ roast: a7fb735f45 | (Elizabeth Mattijsen)++ | S24-testing/8-die_on_fail.t

[19:15] <Geth> ¦ roast: Test for RAKU_TEST_DIE_ON_FAIL

[19:15] <Geth> ¦ roast: 

[19:15] <Geth> ¦ roast: the new name!

[19:15] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/a7fb735f45

[20:07] *** Altai-man joined
[20:10] *** sena_kun left
[20:17] *** MasterDuke joined
[20:19] <nine> lizmat: yeah...sucks, right?

[20:20] <nine> Some time in the past 10 years we should have given a more rakuish Test some thought

[20:21] <lizmat> well, if we're going to go that way, I'd say: indeed, let's rethink Test internals

[20:24] <nine> I think as a quick workaround that keeps performance up is to just clean the %ENV reference after using it

[20:27] <lizmat> well, we could do some nqp::null / nqp::ifnull

[20:27] <lizmat> tricks, that's pretty cheap

[20:33] <Geth> ¦ rakudo: 7a2264b4dc | (Elizabeth Mattijsen)++ | src/Perl6/Actions.nqp

[20:33] <Geth> ¦ rakudo: Be a little more accepting in %h{|| ... } syntax

[20:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7a2264b4dc

[20:33] <Geth> ¦ roast: 7c85f7429d | (Elizabeth Mattijsen)++ | S32-hash/multislice-6e.t

[20:33] <Geth> ¦ roast: Add %h{|| ... } tests

[20:33] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/7c85f7429d

[20:45] *** ugexe left
[20:45] *** MitarashiDango[m left
[20:45] *** ugexe joined
[20:52] *** MitarashiDango[m joined
[20:58] <Geth> ¦ rakudo: dd0a2a15c6 | (Elizabeth Mattijsen)++ | lib/Test.rakumod

[20:58] <Geth> ¦ rakudo: Don't shortcut access to %*ENV

[20:58] <Geth> ¦ rakudo: 

[20:58] <Geth> ¦ rakudo: It is causing problems in some situations wrt to pre-compilation.

[20:58] <Geth> ¦ rakudo: Also rename some perl6 related variable uses

[20:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/dd0a2a15c6

[20:59] <lizmat> and that concludes my hacking for today

[20:59] *** El_Che left
[21:01] *** sxmx joined
[21:01] <donaldh> lizmat++: thx for the change, you beat me to creating an issue (I was afk)

[21:11] <nwc10> is there any official easy way to determine at runtime whether we're running on a little endian or big endian platform?

[21:11] <nwc10> (without hacks. I can think of hacks)

[21:15] <moritz> I didn't find that info in *$VM.config, which is a bit disappointing

[21:16] <nwc10> good, so I didn't miss anything there :-/

[21:17] <MasterDuke> m: say Kernel.endian

[21:17] <camelia> rakudo-moar 85847d2f1: OUTPUT: «LittleEndian␤»

[21:17] <moritz> MasterDuke++

[21:18] <MasterDuke> though i haven't run that on a bigendian system, so no idea what it will output there

[21:18] <nwc10> OK, you don't get any clue about that one frmo $*KERNEL.raku

[21:19] <moritz> m: say Kernel.endian.^name

[21:19] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Endian␤»

[21:19] <nwc10> BigEndian

[21:19] <moritz> m: say Endian::.keys

[21:19] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(NativeEndian BigEndian LittleEndian)␤»

[21:19] <MasterDuke> m: .name.say for Kernel.^methods

[21:19] <camelia> rakudo-moar 85847d2f1: OUTPUT: «name␤version␤release␤hardware␤arch␤archname␤bits␤hostname␤signals␤signal␤cpu-cores␤cpu-usage␤free-memory␤total-memory␤endian␤Str␤gist␤auth␤signature␤desc␤BUILDALL␤»

[22:03] *** Xliff joined
[22:07] *** vrurg left
[22:12] *** vrurg joined
[22:43] *** Altai-man left
