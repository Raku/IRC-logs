[00:59] *** Kaeipi left
[01:00] *** Kaeipi joined
[01:08] <Geth_> ¦ rakudo: mienaikage++ created pull request #4017: Fix issue preventing CLI handler MAIN from having a type constraint

[01:08] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4017

[01:29] *** leont left
[03:10] *** Kaeipi left
[03:10] *** Kaeipi joined
[03:12] <Geth_> ¦ roast: vrurg++ created pull request #696: Add tests for isa-ok matching against metaclasses

[03:12] <Geth_> ¦ roast: review: https://github.com/Raku/roast/pull/696

[03:12] <Geth_> ¦ rakudo: dbf53c056f | (Vadim Belman)++ | lib/Test.rakumod

[03:12] <Geth_> ¦ rakudo: Fix for isa-ok

[03:12] <Geth_> ¦ rakudo: 

[03:12] <Geth_> ¦ rakudo: It was assuming that the test subject inherits from `Mu` which is

[03:12] <Geth_> ¦ rakudo: sometimes incorrect. For example, it fails on

[03:12] <Geth_> ¦ rakudo: 

[03:12] <Geth_> ¦ rakudo:     isa-ok Any.HOW, Metamodel::ClassHOW;

[03:12] <Geth_> ¦ rakudo: 

[03:12] <Geth_> ¦ rakudo: <…commit message has 6 more lines…>

[03:12] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/dbf53c056f

[03:19] <vrurg> greppable6: lang-ver-before

[03:19] <greppable6> vrurg, Found nothing!

[03:36] <Geth_> ¦ roast: 1b491d146f | (Vadim Belman)++ | S24-testing/1-basic.t

[03:36] <Geth_> ¦ roast: Add tests for isa-ok matching against metaclasses

[03:36] <Geth_> ¦ roast: 

[03:36] <Geth_> ¦ roast: Primarilty to take care of `isa-ok Any.HOW, Metamodel::ClassHOW` case.

[03:36] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/1b491d146f

[03:36] <Geth_> ¦ roast: 54b7dc534a | (Vadim Belman)++ (committed using GitHub Web editor) | S24-testing/1-basic.t

[03:36] <Geth_> ¦ roast: Merge pull request #696 from vrurg/test-isa-ok-on-HOW

[03:36] <Geth_> ¦ roast: 

[03:36] <Geth_> ¦ roast: Add tests for isa-ok matching against metaclasses

[03:37] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/54b7dc534a

[05:36] *** vrurg left
[05:49] *** vrurg joined
[05:55] *** sena_kun joined
[07:54] *** domidumont joined
[08:09] *** Altai-man joined
[08:12] *** sena_kun left
[09:00] *** djinni` left
[09:03] *** djinni` joined
[09:15] *** leont joined
[09:18] *** MasterDuke joined
[09:31] <lizmat> Files=1337, Tests=114195, 225 wallclock secs (29.72 usr  8.70 sys + 3117.14 cusr 297.02 csys = 3452.58 CPU)

[09:57] *** frost-lab joined
[10:41] <Geth_> ¦ rakudo: e3352cdd82 | (Elizabeth Mattijsen)++ | src/core.c/Main.pm6

[10:41] <Geth_> ¦ rakudo: Better check for subness of MAIN

[10:41] <Geth_> ¦ rakudo: 

[10:41] <Geth_> ¦ rakudo: e0e24a8dbfd73b20697  introduced a stupid check that was intended to

[10:41] <Geth_> ¦ rakudo: see if &main could do a "cando" method.  This fixes the check and is

[10:41] <Geth_> ¦ rakudo: a better solution than PR4017.  Daniel Mita++ for spotting!

[10:41] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e3352cdd82

[10:43] <lizmat> e0e24a8dbfd7

[10:43] <linkable6> (2020-10-12) https://github.com/rakudo/rakudo/commit/e0e24a8dbf Produce a better error message for my &MAIN = { }

[10:57] <nine> lizmat: why not .isa(Sub)?

[10:58] <lizmat> because the check should really be about whether something can do the 'cando' method ?

[10:58] <nine> ah, ok

[10:59] <lizmat> because that's what "my &MAIN = -> { }' triggered:

[10:59] <lizmat> m: use nqp; dd nqp::can(-> { }. 'cando'}

[10:59] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of .  to concatenate strings.  In Raku please use: ~.␤at <tmp>:1␤------> 3use nqp; dd nqp::can(-> { }.7⏏5 'cando'}␤»

[10:59] <lizmat> m: use nqp; dd nqp::can(-> { }, 'cando'}

[10:59] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3use nqp; dd nqp::can(-> { }, 'cando'7⏏5}␤»

[10:59] <nine> Ah, that's how you could use a block as &MAIN

[10:59] <lizmat> m: use nqp; dd nqp::can((-> { }), 'cando'}

[10:59] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3use nqp; dd nqp::can((-> { }), 'cando'7⏏5}␤»

[11:00] <lizmat> m: use nqp; dd nqp::can((-> { }), 'cando')

[11:00] <camelia> rakudo-moar 85847d2f1: OUTPUT: «1␤»

[11:00] <lizmat> hmmmmm

[11:00] <lizmat> m: use nqp; dd nqp::can(({ }), 'cando')

[11:00] <camelia> rakudo-moar 85847d2f1: OUTPUT: «0␤»

[11:01] <lizmat> anyways, yeah

[11:19] <gfldex> wordpress says "rakuadvent.wordpress.com doesn’t exist". Is this intentional? 

[11:23] <Altai-man> gfldex, I think url is rakuadventcalendar.wordpress.com, no?

[11:23] <Altai-man> Was it different?

[11:24] <gfldex> there is a redirect to https://raku-advent.blog/

[11:26] *** Kaeipi left
[11:27] <gfldex> I'm asking because I got a first paragraph, a last paragraph and a crazy idea. Not sure yet if I can turn the crazy idea into a whole advent post.

[11:27] *** Kaiepi joined
[11:45] *** MasterDuke left
[12:10] *** sena_kun joined
[12:12] *** Altai-man left
[12:42] *** frost-lab left
[12:52] <Geth_> ¦ rakudo: 2436532fdf | (Elizabeth Mattijsen)++ | 2 files

[12:52] <Geth_> ¦ rakudo: Add "is test-assertion" to some more internal test logic

[12:52] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2436532fdf

[13:03] <lizmat> afk for a few hours&

[13:06] *** squashable6 left
[13:06] *** squashable6 joined
[14:49] *** squashable6 left
[14:52] *** squashable6 joined
[15:30] *** MasterDuke joined
[15:44] *** squashable6 left
[15:45] *** squashable6 joined
[15:45] *** squashable6 left
[15:48] *** squashable6 joined
[16:09] *** Altai-man joined
[16:12] *** sena_kun left
[16:46] *** Kaiepi left
[16:50] *** Kaiepi joined
[17:12] *** Kaiepi left
[17:15] *** Kaiepi joined
[17:40] <Geth_> ¦ roast: cf126dc2c0 | (Elizabeth Mattijsen)++ | 4 files

[17:40] <Geth_> ¦ roast: Untodo now passing tests

[17:40] <Geth_> ¦ roast: 

[17:40] <Geth_> ¦ roast: Looks like the isa-ok improvements made these tests pass, vrurg++

[17:40] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/cf126dc2c0

[17:59] *** MasterDuke left
[18:56] <vrurg> lizmat: thanks, I didn't have time to untodo them.

[18:56] *** domidumont left
[18:56] <lizmat> sure, no pb, glad to be able to do things like that  :)

[19:15] *** MasterDuke joined
[19:35] <Geth_> ¦ rakudo/new-versioning-starts: d2a78178af | (Elizabeth Mattijsen)++ | 2 files

[19:35] <Geth_> ¦ rakudo/new-versioning-starts: Allow new versioning values

[19:35] <Geth_> ¦ rakudo/new-versioning-starts: 

[19:35] <Geth_> ¦ rakudo/new-versioning-starts: This commmit allows for several version specification alternatives

[19:35] <Geth_> ¦ rakudo/new-versioning-starts: *without* changing anything else.  It would merely allow people to

[19:35] <Geth_> ¦ rakudo/new-versioning-starts: refer to the new version values *now*.  Allowed alternatives are:

[19:35] <Geth_> ¦ rakudo/new-versioning-starts: 

[19:35] <Geth_> ¦ rakudo/new-versioning-starts:   v2015          -> v6.c

[19:35] <Geth_> ¦ rakudo/new-versioning-starts: <…commit message has 6 more lines…>

[19:36] <Geth_> ¦ rakudo/new-versioning-starts: review: https://github.com/rakudo/rakudo/commit/d2a78178af

[19:36] <Geth_> ¦ rakudo: lizmat++ created pull request #4018: Allow new versioning values

[19:36] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4018

[19:53] <[Coke]> I ask this every year or so: do we have a guide on how to port nqp to another backend?

[19:59] <MasterDuke> i think the "official" recommendation is to ask jnthn or pmurias

[20:08] <[Coke]> step 1: learn the language i'm trying to port to, I guess. :)

[20:08] <MasterDuke> eh, learn by doing

[20:09] <MasterDuke> thinking of porting nqp to something? for fun?

[20:10] *** sena_kun joined
[20:12] *** Altai-man left
[20:15] <[Coke]> to our work platform. (same reason I wanted a JVM port 10 years ago.)

[20:19] <MasterDuke> cool. what lang?

[20:20] <[Coke]> .NET

[20:20] <[Coke]> (looking like .NET 5, even though that's too new for work as of today)

[20:21] <[Coke]> (no one get excited, we'll see if I make it past the "hey, that'd be nifty" stage. :)

[20:23] <jdv79> you asked and got jvm and it wasn't enough...  what will be?!

[20:32] <ugexe> rise from your grave, Niecza

[20:32] <ugexe> ...did Niecza use nqp though?

[20:34] <[Coke]> no

[20:34] <[Coke]> it was its own thing

[20:35] <[Coke]> it did its own bootstrapping so at some point the build used an old niecza to build itself.

[20:35] <[Coke]> the drive to get JVM pre-dated having docker everywhere.

[20:36] <[Coke]> (though interoperability is nice0

[21:17] *** hoelzro left
[21:38] *** MasterDuke left
[22:32] *** squashable6 left
[22:33] *** squashable6 joined
[22:42] *** sena_kun left
[23:07] <Geth_> ¦ roast: vrurg++ created pull request #697: Fix incorrect use of `isa-ok`

[23:07] <Geth_> ¦ roast: review: https://github.com/Raku/roast/pull/697

[23:07] <Geth_> ¦ roast: 60923f7f99 | (Vadim Belman)++ | 2 files

[23:07] <Geth_> ¦ roast: Fix incorrect use of `isa-ok`

[23:07] <Geth_> ¦ roast: 

[23:07] <Geth_> ¦ roast: Must be plain `is` instead

[23:07] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/60923f7f99

[23:07] <Geth_> ¦ roast: 68d4bdd453 | (Vadim Belman)++ (committed using GitHub Web editor) | 2 files

[23:07] <Geth_> ¦ roast: Merge pull request #697 from vrurg/test-isa-ok-on-HOW

[23:07] <Geth_> ¦ roast: 

[23:07] <Geth_> ¦ roast: Fix incorrect use of `isa-ok`

[23:07] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/68d4bdd453

[23:21] *** eater joined
[23:36] <Geth_> ¦ rakudo: vrurg++ created pull request #4019: New coercion semantics branch

[23:36] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4019

[23:37] <Geth_> ¦ rakudo/raku_1285: 6a2fa586c6 | (Vadim Belman)++ (committed using GitHub Web editor) | 22 files

[23:37] <Geth_> ¦ rakudo/raku_1285: New coercion semantics branch (#4019)

[23:37] <Geth_> ¦ rakudo/raku_1285: 

[23:37] <Geth_> ¦ rakudo/raku_1285: * The first draft of new coercion semantics

[23:37] <Geth_> ¦ rakudo/raku_1285: 

[23:37] <Geth_> ¦ rakudo/raku_1285: This is a research work inspired by rakudo/rakudo#1285. The following

[23:37] <Geth_> ¦ rakudo/raku_1285: changes are included:

[23:37] <linkable6> RAKUDO#1285 [open]: https://github.com/rakudo/rakudo/issues/1285 [RFC] Make coercers work with parametarization of roles

[23:37] <Geth_> ¦ rakudo/raku_1285: 

[23:37] <Geth_> ¦ rakudo/raku_1285: <…commit message has 158 more lines…>

[23:37] <Geth_> ¦ rakudo/raku_1285: review: https://github.com/rakudo/rakudo/commit/6a2fa586c6

[23:39] *** eater left
[23:56] *** eater joined
[23:58] *** eater left
