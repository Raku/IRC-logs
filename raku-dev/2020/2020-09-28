[00:35] *** pamplemousse__ joined
[00:47] *** Geth left
[00:48] *** Geth joined
[00:49] *** pamplemousse__ left
[04:01] <AlexDaniel> sena_kun: fantastic promising news :) https://github.com/hythm7/Pakku/issues/7#issuecomment-699717770

[04:01] <tellable6> AlexDaniel, I'll pass your message to sena_kun

[04:43] *** linkable6 left
[04:43] *** evalable6 left
[04:43] *** tellable6 left
[04:44] *** evalable6 joined
[04:45] *** linkable6 joined
[04:45] *** tellable6 joined
[05:15] *** jmerelo joined
[06:20] <jmerelo> Just a reminder that Hacktoberfest is coming, and we have created a single reference page to show all your issues that are hacktoberfest-friendly https://github.com/Raku/hacktoberfest

[06:55] *** Altai-man joined
[07:16] *** domidumont joined
[07:37] *** maggotbrain left
[08:01] *** Altai-man left
[08:04] *** maggotbrain joined
[09:11] <Geth> ¦ problem-solving: JJ assigned to jnthn Issue What is the philosophy of the Raku language https://github.com/Raku/problem-solving/issues/235

[10:15] <Geth> ¦ rakudo/rakuast: c4a758c3e0 | (Elizabeth Mattijsen)++ | 2 files

[10:15] <Geth> ¦ rakudo/rakuast: Add Deparsing support for while / until / repeat

[10:15] <Geth> ¦ rakudo/rakuast: 

[10:15] <Geth> ¦ rakudo/rakuast: and adapt / add associated tests

[10:15] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/c4a758c3e0

[10:39] <Geth> ¦ rakudo/rakuast: 5aa04d87d8 | (Elizabeth Mattijsen)++ | src/core.c/Any.pm6

[10:39] <Geth> ¦ rakudo/rakuast: Add RakuAST::Node support to dd

[10:39] <Geth> ¦ rakudo/rakuast: 

[10:39] <Geth> ¦ rakudo/rakuast: Basically, since RakuAST::Node.raku doesn't really show anything useful

[10:39] <Geth> ¦ rakudo/rakuast: at the moment, and since it probably never will, it makes more sense to

[10:39] <Geth> ¦ rakudo/rakuast: deparse the given AST and note that.  So instead of:

[10:39] <Geth> ¦ rakudo/rakuast: 

[10:39] <Geth> ¦ rakudo/rakuast:     note $ast.DEPARSE;

[10:39] <Geth> ¦ rakudo/rakuast: <…commit message has 6 more lines…>

[10:39] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/5aa04d87d8

[11:15] <MasterDuke> any objection to merging https://github.com/rakudo/rakudo/pull/3930 ?

[11:20] *** leont joined
[11:28] <Geth> ¦ rakudo: 7192a99e69 | (Daniel Green)++ | src/core.c/Real.pm6

[11:28] <Geth> ¦ rakudo: Remove unnecessary branch in .truncate

[11:28] <Geth> ¦ rakudo: 

[11:28] <Geth> ¦ rakudo: This fixes the difference between `True.truncate` (which returns True)

[11:28] <Geth> ¦ rakudo: and `False.truncate` (which returned 0) so they both return self.

[11:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7192a99e69

[11:28] <Geth> ¦ rakudo: e679775009 | MasterDuke17++ (committed using GitHub Web editor) | src/core.c/Real.pm6

[11:28] <Geth> ¦ rakudo: Merge pull request #3930 from MasterDuke17/simplify_truncate

[11:28] <Geth> ¦ rakudo: 

[11:28] <Geth> ¦ rakudo: Remove unnecessary branch in .truncate

[11:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e679775009

[11:59] *** pamplemousse__ joined
[12:09] *** sena_kun joined
[12:46] *** jmerelo left
[13:05] *** Xliff joined
[13:14] <Kaiepi> m: my blob8:D $blob .= new: 0b10101010; $blob.read-ubits: -1, 0xDADFACE

[13:14] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Can only read from position 0..7 in buffer '$blob', you tried: -1␤  in block <unit> at <tmp> line 1␤␤»

[13:14] <Kaiepi> would X::OutOfRange not fit as a typed exception for this?

[13:20] *** domidumont left
[13:23] *** domidumont joined
[13:28] <Xliff> If no one has the time to look into this one: https://github.com/rakudo/rakudo/issues/3922

[13:28] *** domidumont left
[13:28] <Xliff> Could someone at least take a gander and give me pointers as to where I can start investigating it?

[13:29] <Xliff> It's been 11 days since I submitted it, so....

[13:31] <sena_kun> Xliff, I know nothing about moar/rakudo, but I wonder if me suggesting grepping where error occurs and adding some prints there can shed some light is stupid?

[13:31] <tellable6> 2020-09-28T04:01:17Z #raku-dev <AlexDaniel> sena_kun: fantastic promising news :) https://github.com/hythm7/Pakku/issues/7#issuecomment-699717770

[13:31] <Xliff> sena_kun: Absolutely not stupid. 

[13:31] <Xliff> So I guess that's where I will start.

[13:32] <sena_kun> Xliff, if the error is _always_ reproducible, that's a basic measure I'd attempted to. If not a full solution, you'd have some model on hands, like "So internally this and that happens", that can be very helpful for devs as initial mundane steps are already done.

[13:33] <Xliff> However if this dead-ends (as I suspect) with Stashes, then I am at my limit.

[13:36] <lizmat> perhaps nine has an idea

[13:37] <lizmat> notable6: weekly

[13:37] <notable6> lizmat, 4 notes: https://gist.github.com/9b4331182ba327f7d9e0dfc9d0276db4

[13:42] *** domidumont joined
[13:59] <Xliff> lizmat: When is nine usually available?

[13:59] <Xliff> nine: https://github.com/rakudo/rakudo/issues/3922 -- Your thoughts? Might this be a Stash-related issue?

[14:00] <lizmat> nine is available when he's not terribly busy at $work

[14:00] <Xliff> lizmat: Sounds familiar.

[14:01] <lizmat> or flying a glider  :-)

[14:22] <Geth> ¦ rakudo: a26beb66e0 | (Elizabeth Mattijsen)++ | lib/BUILDPLAN.rakumod

[14:22] <Geth> ¦ rakudo: Make BUILD(ALL)PLAN output a bit clearer

[14:22] <Geth> ¦ rakudo: 

[14:22] <Geth> ¦ rakudo: - fix case when there's only a TWEAK method (was showing as BUILD)

[14:22] <Geth> ¦ rakudo: - mention the package where the TWEAK / BUILD method comes from

[14:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a26beb66e0

[14:30] *** MasterDuke left
[14:33] <Geth> ¦ rakudo/rakuast: a44fb7cc50 | (Elizabeth Mattijsen)++ | 17 files

[14:33] <Geth> ¦ rakudo/rakuast: Add standard vim footer

[14:33] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/a44fb7cc50

[14:40] *** MasterDuke joined
[14:56] *** Altai-man joined
[14:58] *** sena_kun left
[15:30] *** |Tux| joined
[15:42] <nine> Waiting for repl.it...

[15:43] <nine> Ah, there's also a zip file

[16:00] *** pamplemousse__ left
[16:06] <Xliff> nine: Thoughts?

[16:16] *** samcv joined
[16:29] <lizmat> notable6: weekly reset

[16:29] <notable6> lizmat, Moved existing notes to “weekly_2020-09-28T16:29:15Z”

[16:42] *** domidumont left
[16:50] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/09/28/2020-39-the-releaser/

[16:52] <Altai-man> lizmat++

[17:06] *** pamplemousse__ joined
[17:47] *** toddr joined
[18:57] *** sena_kun joined
[18:59] *** Altai-man left
[19:20] <Geth> ¦ nqp: usev6++ created pull request #674: Improve streaming decoder on the JVM backend

[19:20] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/674

[20:11] *** pamplemousse__ left
[20:24] <AlexDaniel> lizmat: “300000x as fast for prime numbers” actually 355.56x as fast according to the commit message

[20:24] <AlexDaniel> $ tools/speedup.raku 12.8 0.036

[20:24] <AlexDaniel> 355.56x as fast

[20:25] <lizmat> yup, you're right

[20:25] <lizmat> fixed

[20:26] <gfldex> It has become quite hard to stress a big CPU with .is-prime.

[20:27] <AlexDaniel> gfldex: not sure what you mean

[20:28] <gfldex> I had to start with fairly big numbers to get my threadripper to 1200% load.

[20:28] <gfldex> Less then 100 places seams to be pretty memory bound now.

[20:32] <dogbert17> threadripper, impressive

[20:37] <Xliff> gfldex: What specs were you running on?

[20:38] <gfldex> AMD Ryzen Threadripper 1900X 8-Core Processor

[20:38] <gfldex> .say for ((1 ~ (0..9).roll(100).join).Int .. ∞).hyper(:batch(1000)).grep(*.is-prime);

[20:39] <gfldex> that stays at 4 cores for quite some time

[20:40] <Xliff> gfldex: Have a test case I can run on an Intel(R) Core(TM) i9-7900X CPU @ 3.30GHz

[20:40] <Xliff> 10 cores with hyperthreading.

[20:40] <Xliff> Ooh! Let me drop the GUI.

[20:41] <MasterDuke> assuming the switch to gmp working on goes through, you'll probably have to increase the size again

[20:42] *** Xliff left
[20:42] * sena_kun gets 800% after some seconds and soon it becomes 1500%

[20:42] <sena_kun> with 24 threads

[20:43] <sena_kun> Still, CPU is at just around 65%.

[20:48] *** Xliff joined
[20:48] <Xliff> \o -- Gone oldskool.

[20:48] <Xliff> epic5 client.

[20:49] <Geth> ¦ rakudo/rakuast: 581f492235 | (Elizabeth Mattijsen)++ | 2 files

[20:49] <Geth> ¦ rakudo/rakuast: Add Deparsing support for loop / for

[20:49] <Geth> ¦ rakudo/rakuast: 

[20:49] <Geth> ¦ rakudo/rakuast: and adapt / add associated tests

[20:49] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/581f492235

[20:50] <lizmat> and that concludes my hacking for today&

[20:51] <Xliff> Unfortunately, I can't easily paste the results.

[20:53] <Xliff> gfldex: How long does this run on your machine?

[20:57] <Xliff> OK. This was fun.

[20:58] <Xliff> Oh, and I didn't suspect there were this number of primes this far up the numbering system.

[20:58] <Xliff> gfldex++

[20:58] *** Xliff left
[20:59] <timotimo> primes get less dense the further up you go, right?

[21:02] *** sena_kun left
[21:09] <MasterDuke> but there are always more that are only two apart. primes are weird

[21:15] *** Xliff joined
[23:19] *** leont left
[23:40] *** ggoebel left
[23:45] *** ggoebel joined
