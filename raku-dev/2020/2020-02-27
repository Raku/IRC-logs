[00:04] *** leont left
[00:05] *** leont joined
[00:22] *** leont left
[00:25] *** sena_kun joined
[00:27] *** Altai-man_ left
[00:32] *** hungrydonkey left
[01:04] *** Kaiepi left
[01:05] *** MasterDuke left
[01:05] *** Kaiepi joined
[01:18] *** lucasb left
[01:28] *** squashable6 left
[01:31] *** squashable6 joined
[01:34] *** Altai-man_ joined
[01:36] *** sena_kun left
[01:41] <Geth> Â¦ rakudo: 8454f8dbff | (Vadim Belman)++ | 3 files

[01:41] <Geth> Â¦ rakudo: Re-revert "Big rewrite of dispatchers and wrapping"

[01:41] <Geth> Â¦ rakudo: 

[01:41] <Geth> Â¦ rakudo: This reverts commit a27005b374f8e55179e27e298b17b543e8124bf5.

[01:41] <Geth> Â¦ rakudo: 

[01:41] <Geth> Â¦ rakudo: It is not the cause of problems with Text::CSV.

[01:41] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8454f8dbff

[01:50] <Geth> Â¦ rakudo: vrurg++ created pull request #3517: Fix problems with nextcallee

[01:50] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3517

[01:50] <Geth> Â¦ rakudo: ac9c8ec802 | (Vadim Belman)++ | 2 files

[01:50] <Geth> Â¦ rakudo: Fix nextcallee breaking the dispatcher chain

[01:50] <Geth> Â¦ rakudo: 

[01:50] <Geth> Â¦ rakudo: Without moarvm/moarvm#1274 the only way to pass current dispatcher to a

[01:50] <Geth> Â¦ rakudo: subsequent one is by wrapping next callee object into a stub which sets

[01:50] <Geth> Â¦ rakudo: `$*NEXT-DISPATCHER`. Hopefully it's just a temporary workaround.

[01:50] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ac9c8ec802

[01:50] <Geth> Â¦ rakudo: 59a86c3a1c | (Vadim Belman)++ | src/Perl6/Metamodel/Dispatchers.nqp

[01:50] <Geth> Â¦ rakudo: Revert to using invocator

[01:50] <Geth> Â¦ rakudo: 

[01:50] <Geth> Â¦ rakudo: Instead of `::?CLASS`. For dynamically generated method objects ::?CLASS

[01:50] <Geth> Â¦ rakudo: may contain not the class it's installed into.

[01:50] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/59a86c3a1c

[01:50] <Geth> Â¦ rakudo: 0f223ac9d4 | (Vadim Belman)++ (committed using GitHub Web editor) | 2 files

[01:50] <Geth> Â¦ rakudo: Merge pull request #3517 from vrurg/rakudo_3499

[01:50] <Geth> Â¦ rakudo: 

[01:50] <Geth> Â¦ rakudo: Fix problems with nextcallee

[01:50] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0f223ac9d4

[02:06] <Geth> Â¦ roast: vrurg++ created pull request #626: Added regression test for nextcallee

[02:06] <Geth> Â¦ roast: review: https://github.com/perl6/roast/pull/626

[02:06] <Geth> Â¦ roast: 17f7e150d9 | (Vadim Belman)++ | S06-advanced/dispatching.t

[02:06] <Geth> Â¦ roast: Added regression test for nextcallee

[02:06] <Geth> Â¦ roast: 

[02:06] <Geth> Â¦ roast: It must not break the dispatcher chain.

[02:06] <Geth> Â¦ roast: review: https://github.com/perl6/roast/commit/17f7e150d9

[02:06] <Geth> Â¦ roast: 23452a31f2 | (Vadim Belman)++ (committed using GitHub Web editor) | S06-advanced/dispatching.t

[02:06] <Geth> Â¦ roast: Merge pull request #626 from vrurg/rakudo_3499

[02:07] <Geth> Â¦ roast: 

[02:07] <Geth> Â¦ roast: Added regression test for nextcallee

[02:07] <Geth> Â¦ roast: review: https://github.com/perl6/roast/commit/23452a31f2

[02:58] *** leont joined
[03:35] *** sena_kun joined
[03:37] *** Altai-man_ left
[03:46] <vrurg> .tell lizmat Just have tested Text::CSV installation again on the HEAD. It works. That include my dispatchers. The git log says that method inlining is reverted. Hope this info helps.

[03:46] <tellable6> vrurg, I'll pass your message to lizmat

[03:52] *** leont left
[05:34] *** Altai-man_ joined
[05:36] *** sena_kun left
[05:50] *** jmerelo joined
[06:53] *** jmerelo left
[07:02] *** cognominal joined
[07:05] *** cognomin_ left
[07:35] *** sena_kun joined
[07:36] *** Altai-man_ left
[07:58] <rba> hankache: Still getting the same error build windows rakudo star: "Cannot chmod 755 perl6:No such file or directory at C:/Perl64/lib/ExtUtils/Command.pm line 284." see https://dev.azure.com/infra0037/raku/_build/results?buildId=43&view=logs&j=022b0a5d-2698-5f72-7610-a845972a8b4c&t=af679cbb-970d-561f-e829-7db8a8c93447&l=1109 Any idea?

[07:58] <tellable6> rba, I'll pass your message to hankache

[08:01] * rba is start using Azure DevOps to automate windows builds. Anyone who like to join, please ping me. It's public viewable at https://dev.azure.com/infra0037/raku

[08:07] *** domidumont joined
[08:23] <lizmat> Files=1304, Tests=111208, 210 wallclock secs (28.52 usr  8.26 sys + 2943.95 cusr 280.90 csys = 3261.63 CPU)

[08:23] <tellable6> 2020-02-27T03:46:27Z #raku-dev <vrurg> lizmat Just have tested Text::CSV installation again on the HEAD. It works. That include my dispatchers. The git log says that method inlining is reverted. Hope this info helps.

[08:42] *** domidumont left
[08:42] <lizmat> ok, I'm now 100%ish sure that the MoarVM bump is responsible for not being able to install any more modules

[08:42] <lizmat> 1. nuke install

[08:42] <lizmat> 2. Configure with bump and build

[08:42] <lizmat> 3. re-install zef

[08:42] <lizmat> 4. try to install Text::CSV: https://gist.github.com/lizmat/9a8d5929b19bda12b801d56e2a17a000

[08:42] <sena_kun> jnthn, perhaps jnthn will be able to investigate it today?

[08:46] <sena_kun> oops, lizmat ^

[08:58] <lizmat> jnthn: for reference, make test and make spectest are *clean* after a bump

[08:59] * lizmat reverts the bump locally, nukes install again and builds again

[09:24] <lizmat> ok, looks like it is an interaction with work I did yesterday and the MoarVM bump

[09:27] <Geth> Â¦ rakudo: dedb7444bc | (Elizabeth Mattijsen)++ | 2 files

[09:27] <Geth> Â¦ rakudo: Revert the work I've done yesterday

[09:27] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/dedb7444bc

[09:34] *** Altai-man_ joined
[09:37] *** sena_kun left
[09:52] <lizmat> with a bumped system now, I get spectest errors that only occur with "make", not when running the test directly with raku

[09:55] <jnthn> make test / make spectest were clean for me, fwiw, and had less problems under spesh stressing than before

[09:56] <lizmat> it's very confusing... but at least make spectest / test are clean for me now *before* the bump

[09:57] <jnthn> I've just pulled Rakudo HEAD so will run a test with that

[09:57] <jnthn> But you've sent me a stack trace that has precomp store at the top, and my pull has a 220 line diff in that, so... :)

[09:59] <lizmat> but installing with zef fails :-(

[09:59] <lizmat> ok, going to revert more of my work of the past days

[10:00] * jnthn runs a `zef install Text::CSV` without the latest Rakudo pull

[10:03] <jnthn> it fails because I typed Test::CSV :P

[10:03] <lizmat> he...

[10:03] <lizmat> it doesn't have to be Text::CSV, P5localtime will also do  :-)

[10:03] <lizmat> or unprint  :-)

[10:04] <jnthn> unprint is a cute name for read :P

[10:04] <jnthn> Or it prints backspaces, or? :)

[10:04] <lizmat> it bypasses $*OUT

[10:06] <jnthn> OK, Rakudo HEAD was make test/spectest clean for me; installing it now

[10:06] <jnthn> Text::CSV installed fine before that

[10:06] <jnthn> Trying unprint

[10:10] <jnthn> Also worked out

[10:11] <jnthn> Only thing I didn't do is install a new zef...

[10:11] <Geth> Â¦ rakudo: cbd75f7230 | (Elizabeth Mattijsen)++ | 3 files

[10:11] <Geth> Â¦ rakudo: Revert more of my work of this week

[10:11] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cbd75f7230

[10:11] <lizmat> it's now stable for me after this commit

[10:11] <lizmat> now trying with a bump again

[10:13] *** domidumont joined
[10:14] <lizmat> my workflow: nuke install, build, cd zef, nuke .precomp in zef, raku -I. bin/zef install . , zef install P5tie

[10:14] <lizmat> if that works, make test and make spectest

[10:18] <lizmat> with the bump, installing zef itself works, but installing a module with it doesn't

[10:18] <lizmat> reverting the bump locally again, to make 200% sure

[10:29] <lizmat> ok, verified, for me at least: HEAD without the bump is stable, passes test / spectest and allows zef to install modules

[10:30] <lizmat> bump MoarVM and zef cannot install modules

[10:30] <lizmat> afk for a few hours&

[10:32] <jnthn> OK. I won't have any time for it this side of GPW.

[10:33] <jnthn> And if I can't repro it, then there's not much I can do. I've too much to do today to nuke my install.

[11:04] *** titsuki joined
[11:20] <|Tux|> Rakudo version 2020.02-68-gcbd75f723 - MoarVM version 2020.02-25-g69951892a

[11:20] <|Tux|> csv-test-xs-20      0.365 -  0.406

[11:20] <|Tux|> csv-ip5xs           0.717 -  0.720

[11:20] <|Tux|> test-t --race       0.804 -  0.816

[11:20] <|Tux|> test-t              1.800 -  1.806

[11:20] <|Tux|> csv-ip5xs-20        5.855 -  5.895

[11:20] <|Tux|> test                7.633 -  7.841

[11:20] <|Tux|> test-t-20 --race    8.748 -  8.785

[11:20] <|Tux|> csv-parser         23.536 - 24.241

[11:20] <|Tux|> test-t-20          30.973 - 31.340

[11:28] *** titsuki left
[11:34] *** leont joined
[11:35] *** sena_kun joined
[11:37] *** Altai-man_ left
[11:47] <lizmat> jnthn: looks like it was an artefact of my own setup...

[11:47] <jnthn> lizmat: Hmm...interesting...details?

[11:48] <lizmat> I used to have a ~/bin dir early in my path with symlinks to zef/ raku etc

[11:49] <lizmat> i've now change that to have install/bin and install/share/perl6/site/bin in my path

[11:49] <lizmat> *changed

[11:49] <lizmat> and not have ~/bin in my path

[11:50] <lizmat> no idea how this was different functionally from your setup

[11:50] <lizmat> but since you couldn't repro and vrurg also couldn't repro

[11:50] <lizmat> I figured the problem was with either MacOS or me

[11:51] <lizmat> and figure /me would be more likely  :)

[11:51] <lizmat> *figured

[11:51] <lizmat> running final spectest now, and then I will bump MoarVM

[11:51] <lizmat> rakudo rather  :-)

[11:52] <Geth> Â¦ rakudo: 4f63764c82 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[11:52] <Geth> Â¦ rakudo: Bump NQP to get latest MoarVM optimizations

[11:52] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4f63764c82

[11:52] <jnthn> Phew!

[11:53] <lizmat> now testing reverting my own reverts 

[11:54] <lizmat> jnthn: BTW, any comments about https://modules.raku.org/dist/ValueType ?

[12:10] <Geth> Â¦ rakudo: 81ac37f88b | (Elizabeth Mattijsen)++ | 3 files

[12:10] <Geth> Â¦ rakudo: Revert "Revert more of my work of this week"

[12:10] <Geth> Â¦ rakudo: 

[12:10] <Geth> Â¦ rakudo: This reverts commit cbd75f7230562cb32605309055efe5f221d5839e.

[12:10] <Geth> Â¦ rakudo: 

[12:10] <Geth> Â¦ rakudo: After a local reorg, this now passes all tests and lets zef

[12:10] <Geth> Â¦ rakudo: keep doing its work.

[12:10] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/81ac37f88b

[12:13] <jnthn> lizmat: Interseting.

[12:19] <lizmat> hmmm... reverting my next revert shows the problem again

[12:19] <lizmat> ===SORRY!=== Error while compiling /Users/liz/Github/rakudo.moar/site#sources/092D7DA0185CE0F1584F42452CD1E526B4B9DE17 (Zef::CLI)

[12:19] <lizmat> New type Perl6::Metamodel::ClassHOW for NQPRoutine is not a mixin type

[12:19] <lizmat> so I guess some of my commits borked stuff

[12:23] *** titsuki joined
[12:24] <nine> lizmat: but please don't push any more reverts or fixes until we know they are gonna stick

[12:25] <lizmat> nine: this is what I'm doing now: for each change, a complete recompile with a nuked install dir and a fresh zef

[12:32] <rba> May I ask to get a commit bit on the rakudo github org? [Coke] can confirm that I have signed the CLA. I play around with build automation and like to give some love to the star release.

[12:37] <lizmat> jnthn: ^^

[12:37] <lizmat> moritz: ^^ ?

[12:38] <jnthn> rba: github username?

[12:39] <jnthn> oh hah, it's just the same as here :)

[12:39] <rba> jnthn: rba

[12:39] <jnthn> Invitation sent

[12:44] <rba> jnthn: Thank you. 

[13:10] <rba> jnthn: Does this give access to the star repo too? (Havenât tried yet.)

[13:15] *** hankache joined
[13:15] <hankache> .seen rba

[13:15] <tellable6> hankache, I saw rba 2020-02-27T13:10:05Z in #raku-dev: <rba> jnthn: Does this give access to the star repo too? (Havenât tried yet.)

[13:17] <Geth> Â¦ roast/RAKULIB: 114738cd50 | (Tom Browder)++ | 2 files

[13:17] <Geth> Â¦ roast/RAKULIB: separate into separate test files to ease removal

[13:17] <Geth> Â¦ roast/RAKULIB: review: https://github.com/perl6/roast/commit/114738cd50

[13:18] <hankache> .tell rba https://github.com/hankache/rakudo-star-win this is what I managed to patch together to build star on windows

[13:18] <tellable6> hankache, I'll pass your message to rba

[13:18] <hankache> .tell rba it needs a lot of work, but for the moment it does the job

[13:18] <tellable6> hankache, I'll pass your message to rba

[13:21] <rba> hankache: got it

[13:22] <jnthn> rba: Yes, I put you in that group also

[13:22] <Geth> Â¦ roast/RAKULIB: 01ea55c721 | (Tom Browder)++ | spectest.data

[13:22] <Geth> Â¦ roast/RAKULIB: add the separate RAKULIB test file

[13:22] <Geth> Â¦ roast/RAKULIB: review: https://github.com/perl6/roast/commit/01ea55c721

[13:29] *** hankache left
[13:35] *** Altai-man_ joined
[13:36] *** sena_kun left
[13:37] <lizmat> na, afaik, it's just the import process looking for a EXPORT associative in the GLOBALish of the thing being imported

[13:49] <lizmat> found the breaking commit, and it's not one that I expected: 747a35ba0b92cb3937a4

[13:52] <jnthn> Yeah, 747s tend to be find, it's the 737s that are broken...

[13:54] * lizmat double double checks

[13:58] <Geth> Â¦ rakudo/master: 4 commits pushed by (Elizabeth Mattijsen)++

[13:58] <Geth> Â¦ rakudo/master: f54ad73236 | Streamline CompUnit::PrecompilationStore::File

[13:58] <Geth> Â¦ rakudo/master: fae4d45d12 | De-hllize the loaded cache

[13:58] <Geth> Â¦ rakudo/master: d55146bd51 | De-hllize the dir-cache and the compiler-cache

[13:58] <Geth> Â¦ rakudo/master: e33fe878bb | Potentially fix problem

[13:58] <Geth> Â¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/81ac37f88b29...e33fe878bbe9

[14:17] * vrurg hopes this will fix broken precomp dependencies too...

[14:19] <lizmat> vrurg: please let me know if it doesn't

[14:20] <vrurg> lizmat: sure. I had to wipe out .precomp after every change yesterday.

[14:21] <lizmat> :-(   sorry

[14:22] <lizmat> I guess our tests of precomping are very insufficient  :-(

[14:25] <vrurg> lizmat: nothing to be sorry about. It's HEAD, things are breaking there! :D

[14:26] <vrurg> BTW, my own fix of re-dispatching seemingly broke my own project. Though it most likely means I did it all wrong in the project. :)

[14:29] <vrurg> lizmat: I couldn't stand but test it again. Unfortunately, deps are still broken. Changing a file causes: Missing or wrong version of dependency '/Users/vrurg/src/Raku/raku-Vikna/lib/Vikna/Widget.rakumod (Vikna::Widget)'

[14:29] <vrurg> But I'd try nuking the whole install first, considering your story.

[14:33] <lizmat> yeah, that's what I'm doing now to test every commit related to precomp

[15:03] *** lucasb joined
[15:07] <vrurg> lizmat: bad news: the deps are still broken. The likely cause is diamond dependecy. Changing a file works fine for a module where deps are linear vs. breaking one where two direct deps require a third one: A -> B -> C (ok) vs. D -> B -> C & D -> E -> C (fails)

[15:11] *** lizmat left
[15:35] *** sena_kun joined
[15:36] *** Altai-man_ left
[15:39] <Geth> Â¦ roast/RAKULIB: d0fcd070ab | (Tom Browder)++ | 4 files

[15:39] <Geth> Â¦ roast/RAKULIB: add missing test for RAKUDOLIB; change module file suffixes to 'rakumod'; update tests require

[15:39] <Geth> Â¦ roast/RAKULIB: review: https://github.com/perl6/roast/commit/d0fcd070ab

[15:53] *** lizmat joined
[16:19] <lizmat> so I'm looking at the code in CompUnit::PrecompilationId 

[16:20] <lizmat> and I wonder, why does that need caching at all?   (except for the new-from-string case)

[16:20] <lizmat> to not have to do the sanity check ?

[16:21] <lizmat> or to have value type semantics?  In the latter case, it would need a proper WHICH 

[16:25] *** hankache joined
[16:27] <lizmat> .ask vrurg how is the precomp going for you ?

[16:27] <tellable6> lizmat, I'll pass your message to vrurg

[16:29] *** hankache left
[16:35] <Geth> Â¦ rakudo: b712789e72 | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/PrecompilationUnit.pm6

[16:35] <Geth> Â¦ rakudo: De-hllize PrecompilationUnitId cache

[16:35] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b712789e72

[16:46] *** lizmat left
[16:47] *** lizmat joined
[16:49] *** hankache joined
[16:49] *** lizmat left
[16:51] <Geth> Â¦ roast/RAKULIB: 87ecddc62c | (Tom Browder)++ | 3 files

[16:51] <Geth> Â¦ roast/RAKULIB: Ensure test files are unique to allow parallel testing

[16:51] <Geth> Â¦ roast/RAKULIB: review: https://github.com/perl6/roast/commit/87ecddc62c

[16:55] *** titsuki left
[17:00] <japhb> Just did a rebuild-all (rakudo from scratch + modules) a few minutes ago, and it died trying to install a module that is normally not a problem: Test::Mock

[17:01] <japhb> Now attempting against 2020.02, to make sure it's not HEAD instability

[17:03] <Geth> Â¦ rakudo: eb19a3d2e5 | (Patrick BÃ¶ker)++ | .circleci/config.yml

[17:03] <Geth> Â¦ rakudo: Revert "Temporarily disable CircleCI building"

[17:03] <Geth> Â¦ rakudo: 

[17:03] <Geth> Â¦ rakudo: The problem has been analyzed, so we enable CircleCI again.

[17:03] <Geth> Â¦ rakudo: 

[17:03] <Geth> Â¦ rakudo: This reverts commit adc61a8f57f38196483dfb5e20ea2e94f1a6551e.

[17:03] <Geth> Â¦ rakudo: This reverts commit efba963910f3f556cc68e172f2e5689487b81386.

[17:03] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/eb19a3d2e5

[17:06] <sena_kun> u: on

[17:06] <unicodable6> sena_kun, U+0021 EXCLAMATION MARK [Po] (!)

[17:06] <sena_kun> )!"

[17:06] <unicodable6> sena_kun, U+0022 QUOTATION MARK [Po] (")

[17:06] <unicodable6> sena_kun, Cowardly refusing to gist more than 5000 lines

[17:06] <sena_kun> u: "

[17:06] <sena_kun> :"

[17:06] <unicodable6> sena_kun, U+0022 QUOTATION MARK [Po] (")

[17:06] <sena_kun> hmm

[17:14] <nine> lizmat: the PrecompilationId cache is just to avoid the costly validity check.

[17:14] <tellable6> nine, I'll pass your message to lizmat

[17:34] *** Altai-man_ joined
[17:36] <vrurg> lizmat: Oh, you didn't see this message from me: bad news: the deps are still broken. The likely cause is diamond dependecy. Changing a file works fine for a module where deps are linear vs. breaking one where two direct deps require a third one: A -> B -> C (ok) vs. D -> B -> C & D -> E -> C (fails)

[17:36] <tellable6> vrurg, I'll pass your message to lizmat

[17:36] *** domidumont left
[17:37] *** sena_kun left
[17:45] *** MasterDuke joined
[18:07] *** domidumont joined
[18:15] <Geth> Â¦ problem-solving: vrurg assigned to jnthn Issue RAKUDOLIB destiny? https://github.com/Raku/problem-solving/issues/167

[18:34] *** hankache left
[18:56] <japhb> BTW, rebuild-all at 2020.02 did *not* fail on Test::Mock.  It did however fail at a later module that seems to have trouble on this particular machine.

[19:32] *** domidumont left
[19:35] *** sena_kun joined
[19:37] *** Altai-man_ left
[19:37] *** lizmat joined
[19:43] <lizmat> japhb: could you create a recipe for the breakage

[19:43] <tellable6> 2020-02-27T17:14:19Z #raku-dev <nine> lizmat: the PrecompilationId cache is just to avoid the costly validity check.

[19:43] <tellable6> hey lizmat, you have a message: https://gist.github.com/b0b9d2b5b7720e5eff966dca575cbcb2

[20:16] *** hankache joined
[20:25] *** lizmat left
[20:50] *** dumarchie joined
[20:51] <dumarchie> My fix for infix:<eqv> between Iterables did not make it into the new release :(

[20:52] <dumarchie> Is there a way to export a custom infix:<eqv> that will be picked up by Test's is-deeply ?

[21:03] <japhb> lizmat: I'm a bit slammed with $dayjob right now, but I'll see what I can do about narrowing it down.

[21:03] <tellable6> japhb, I'll pass your message to lizmat

[21:11] *** dumarchie left
[21:34] *** Altai-man_ joined
[21:37] *** sena_kun left
[22:20] <Geth> Â¦ roast/RAKULIB: 8c5405dae8 | (Tom Browder)++ (committed using GitHub Web editor) | spectest.data

[22:20] <Geth> Â¦ roast/RAKULIB: remove test for env var RAKUDOLIB

[22:20] <Geth> Â¦ roast/RAKULIB: 

[22:20] <Geth> Â¦ roast/RAKULIB: It is Rakudo specific and not part of the Raku specification, thus it is removed from roast.

[22:20] <Geth> Â¦ roast/RAKULIB: review: https://github.com/perl6/roast/commit/8c5405dae8

[22:23] <Geth> Â¦ roast/RAKULIB: 6545551cd2 | (Tom Browder)++ (committed using GitHub Web editor) | S11-modules/rakudolib.t

[22:23] <Geth> Â¦ roast/RAKULIB: Delete RAKUDOLIB test file

[22:23] <Geth> Â¦ roast/RAKULIB: 

[22:23] <Geth> Â¦ roast/RAKULIB: The RAKUDOLIB env var is Rakudo-specific and thus is not part of the Raku language specification or its roast repository.

[22:23] <Geth> Â¦ roast/RAKULIB: review: https://github.com/perl6/roast/commit/6545551cd2

[22:33] *** lizmat joined
[22:35] * lizmat is back from NR.pm meeting

[22:35] <tellable6> 2020-02-27T21:03:14Z #raku-dev <japhb> lizmat: I'm a bit slammed with $dayjob right now, but I'll see what I can do about narrowing it down.

[22:43] <lizmat> .ask vrurg does the problem still exist on HEAD ?

[22:43] <tellable6> lizmat, I'll pass your message to vrurg

[22:48] <vrurg> lizmat: I'm on another bug in dispatchers. Will test when done.

[22:48] <lizmat> oki!

[22:48] <vrurg> thanks!

[22:48] <lizmat> no, thank you!  :-)

[22:51] *** hankache left
[23:03] <vrurg> lizmat: I just've notice there were no more commits. So, the problem is still there.

[23:04] <lizmat> ok

[23:04] <vrurg> The last commit from you is b712789e721ba01f43f7f8174c2ccbe40d4d8f2b

[23:04] <linkable6> (2020-02-27) https://github.com/rakudo/rakudo/commit/b712789e72 De-hllize PrecompilationUnitId cache

[23:04] <vrurg> linkable6: thanks :)

[23:04] <linkable6> vrurg, Anytime!

[23:04] <lizmat> just as a sanity test, could you check if the problem also exists when at 66b78ccbefecd6cb2ff41 ?

[23:04] <linkable6> (2020-02-23) https://github.com/rakudo/rakudo/commit/66b78ccbef Merge pull request #3510 from tinmarino/master

[23:04] * vrurg loves these smart guys!

[23:06] <vrurg> lizmat: rebuilding...

[23:11] <vrurg> lizmat: looks like it's not there. I get an error, but it's runtime and unrelated.

[23:11] <lizmat> could you produce a gist to re-create the problem that you see on HEAD

[23:11] <lizmat> I'll take that on tomorrow morning...  first getting some sleep

[23:12] <vrurg> lizmat: I'd try but can't promise.

[23:12] <lizmat> whatever you can provide me to help me understand how I borked things

[23:13] <vrurg> Sure. I just want to hunt down my bug and have not much time left today.

[23:13] <lizmat> understood...

[23:13] <lizmat> good hunting!

[23:14] <lizmat> sleep&

[23:14] <vrurg> Hope I got the cause right, then it shouldn't be hard to golf down.

[23:14] <vrurg> lizmat: 'night!

[23:16] *** lucasb left
[23:29] <vrurg> .tell lizmat Here is the gist: https://gist.github.com/vrurg/7f190ded041b78d57b987757576dbc4e ; interesting that I can only reproduce it with classes.

[23:29] <tellable6> vrurg, I'll pass your message to lizmat

[23:35] *** sena_kun joined
[23:37] *** Altai-man_ left
