[00:46] *** Xliff joined
[01:33] *** Kaeipi left
[01:33] *** Kaeipi joined
[01:42] *** Xliff left
[01:47] *** leont left
[01:50] *** Kaeipi left
[01:50] *** Kaiepi joined
[03:41] *** Xliff joined
[03:41] *** Xliff left
[03:41] *** Xliff joined
[04:03] *** Xliff left
[05:03] *** maggotbrain left
[05:16] *** maggotbrain joined
[05:35] *** sena_kun joined
[05:41] *** Altai-man joined
[05:44] *** sena_kun left
[08:55] *** [Tux] left
[08:58] *** [Tux] joined
[09:12] *** synopsebot joined
[09:12] *** synopsebot left
[09:42] *** sena_kun joined
[09:43] *** Altai-man left
[10:42] <Geth> ¦ nqp/master: 4 commits pushed by (Christian Bartolomäus)++

[10:42] <Geth> ¦ nqp/master: 98b0db94bd | [JVM] Let decoder work on copy of added bytes

[10:42] <Geth> ¦ nqp/master: ebd31d16e1 | [JVM] Don't indicate EOF in nqp::takeavailablechars

[10:42] <Geth> ¦ nqp/master: 965dbc69d1 | [JVM] Discern preliminary vs final decoding error

[10:42] <Geth> ¦ nqp/master: ff21c24deb | Add more tests for streaming decoder

[10:42] <Geth> ¦ nqp/master: review: https://github.com/Raku/nqp/compare/a2435ee1fb38...ff21c24debe4

[11:12] *** patrickb joined
[11:17] <Geth> ¦ rakudo: 75f92d2bb1 | (Patrick Böker)++ | src/core.c/Main.pm6

[11:17] <Geth> ¦ rakudo: sub MAIN: Negation and explicit values with bundling and single parameter

[11:17] <Geth> ¦ rakudo: 

[11:17] <Geth> ¦ rakudo: When using the %*SUB-MAIN-OPTS<bundling> option negation and explicit

[11:17] <Geth> ¦ rakudo: values are ambiguous when actually bundling multiple params together.

[11:17] <Geth> ¦ rakudo: 

[11:17] <Geth> ¦ rakudo: `-abc=foo` # a = True, b = True, c = "foo"? a = b = c = "foo"?

[11:17] <Geth> ¦ rakudo: 

[11:17] <Geth> ¦ rakudo: <…commit message has 5 more lines…>

[11:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/75f92d2bb1

[11:17] <Geth> ¦ rakudo: 26e046c5bd | (Patrick Böker)++ (committed using GitHub Web editor) | src/core.c/Main.pm6

[11:17] <Geth> ¦ rakudo: Merge pull request #3948 from patrickbkr/sub-main-single-param-bundling

[11:17] <Geth> ¦ rakudo: 

[11:17] <Geth> ¦ rakudo: sub MAIN: Negation and explicit values with bundling and single param

[11:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/26e046c5bd

[11:38] <lizmat> afk for a few hours&

[11:39] *** leont joined
[12:07] *** patrickb left
[12:09] *** patrickb joined
[12:13] *** patrickb left
[12:53] *** camelCaser left
[13:41] *** Altai-man joined
[13:43] *** sena_kun left
[16:43] *** Xliff joined
[17:24] <lizmat> m: sub a(:$a) { }; a :b   # wonder if we can make this a compile-time error in the rakuast branch

[17:24] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Unexpected named argument 'b' passed␤  in sub a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:25] <lizmat> m: multi sub a(:$a) { }; a :b; multi sub a(:$b) { }   # but then it would probably fire on this and that wouldn't be good  :-(

[17:25] <camelia> rakudo-moar 85847d2f1: ( no output )

[17:28] <Geth> ¦ rakudo: 6986ea1d03 | (Elizabeth Mattijsen)++ | src/core.e/hash_slice.pm6

[17:28] <Geth> ¦ rakudo: Implement all supported adverbs for %h{a;b}

[17:28] <Geth> ¦ rakudo: 

[17:28] <Geth> ¦ rakudo: - reduce to one candidate, figuring out how to avoid infinilooping

[17:28] <Geth> ¦ rakudo:   dispatch with this many adverbs and combinations of adverbs, is

[17:28] <Geth> ¦ rakudo:   just madness inducing.

[17:28] <Geth> ¦ rakudo: - all lexical subs share the same substrate

[17:28] <Geth> ¦ rakudo: - should cover all allowed adverb combinations.  If one has been

[17:28] <Geth> ¦ rakudo:   missed, it's just a matter of adding a processor pointy block for

[17:28] <Geth> ¦ rakudo:   it.

[17:28] <Geth> ¦ rakudo: 

[17:28] <Geth> ¦ rakudo: Should fix R#3937

[17:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6986ea1d03

[17:28] <linkable6> R#3937 [open]: https://github.com/rakudo/rakudo/issues/3937 Multi level hash not working with adverbs

[17:29] <timotimo> lizmat: that's why the current implementation of "call will never work" is implemented in the optimizer; though rakuast of course has the "linking"/"resolution"(?) phase, which could be the right place to do this

[17:29] <lizmat> ah, yes, of course  :-)

[17:42] *** sena_kun joined
[17:44] *** Altai-man left
[17:57] <[Tux]> Rakudo version 2020.09-33-g26e046c5b - MoarVM version 2020.09-8-g60070970c

[17:57] <[Tux]> csv-test-xs-20      0.394 -  0.400

[17:57] <[Tux]> csv-ip5xs           0.818 -  0.853

[17:57] <[Tux]> test-t --race       0.833 -  0.863

[17:57] <[Tux]> test-t              1.884 -  1.942

[17:57] <[Tux]> test                7.812 -  7.859

[17:57] <[Tux]> csv-ip5xs-20        8.200 -  8.200

[17:57] <[Tux]> test-t-20 --race    9.450 - 10.275

[17:57] <[Tux]> csv-parser         25.275 - 27.306

[17:57] <[Tux]> test-t-20          31.978 - 32.319

[17:59] <Geth> ¦ nqp/activate-repl-mode: 9ae21eb7e1 | (Elizabeth Mattijsen)++ | src/HLL/Compiler.nqp

[17:59] <Geth> ¦ nqp/activate-repl-mode: Allow --repl-mode even with parameters

[17:59] <Geth> ¦ nqp/activate-repl-mode: 

[17:59] <Geth> ¦ nqp/activate-repl-mode: As a start of providing a fix for https://github.com/rakudo/rakudo/issues/3952

[17:59] <Geth> ¦ nqp/activate-repl-mode: review: https://github.com/Raku/nqp/commit/9ae21eb7e1

[17:59] <Geth> ¦ nqp: lizmat++ created pull request #676: Allow --repl-mode even with parameters

[17:59] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/676

[20:34] *** Xliff left
[21:15] *** sena_kun left
[21:20] *** sena_kun joined
[21:40] *** sena_kun left
[21:50] <Geth> ¦ rakudo: 8a2d9a6128 | (Elizabeth Mattijsen)++ | src/core.e/hash_slice.pm6

[21:50] <Geth> ¦ rakudo: Oops, all %{;} accesses were deconted

[21:50] <Geth> ¦ rakudo: 

[21:50] <Geth> ¦ rakudo: And spectest didn't notice.  Make sure that adverbless cases do not

[21:50] <Geth> ¦ rakudo: decont, and the adverbs that could return a container, decont.

[21:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8a2d9a6128

[21:50] *** patrickb joined
[21:56] *** patrickb left
[22:04] <lizmat> sleep&

[22:06] *** Ernesto joined
[22:07] *** Ernesto is now known as Guest94360

