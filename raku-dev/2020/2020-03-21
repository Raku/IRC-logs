[00:01] <AlexDaniel> Kaiepi: hello

[00:02] <AlexDaniel> Kaiepi: maybe you want to join the Raku org on github… :)

[00:03] <AlexDaniel> I've sent the invitation again

[00:03] <Kaiepi> joined

[00:03] <Kaiepi> thanks

[00:11] *** hungrydonkey left
[00:14] <Geth> ¦ roast: d8a70faf14 | (Ben Davies)++ | S14-roles/mixin.t

[00:14] <Geth> ¦ roast: Add test for typechecking of mixins of routines against Callable

[00:14] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/d8a70faf14

[00:36] <MasterDuke> jnthn: lizmat++ found a nice fix for the shaped native array issue, but the new https://github.com/rakudo/rakudo/issues/3560 bisects  to a big moarvm merge you did back in 2017

[00:52] *** patrickz joined
[00:56] *** patrickb left
[01:05] *** patrickz left
[01:20] *** sena_kun joined
[01:22] *** Altai-man_ left
[01:37] *** tinmarino left
[03:19] *** Altai-man_ joined
[03:21] *** sena_kun left
[04:21] *** greppable6 left
[04:21] *** notable6 left
[04:21] *** squashable6 left
[04:21] *** committable6 left
[04:21] *** sourceable6 left
[04:21] *** statisfiable6 left
[04:21] *** shareable6 left
[04:21] *** linkable6 left
[04:21] *** tellable6 left
[04:21] *** bloatable6 left
[04:21] *** quotable6 left
[04:21] *** benchable6 left
[04:21] *** unicodable6 left
[04:21] *** nativecallable6 left
[04:21] *** coverable6 left
[04:21] *** releasable6 left
[04:21] *** evalable6 left
[04:21] *** reportable6 left
[04:21] *** bisectable6 left
[04:22] *** evalable6 joined
[04:22] *** reportable6 joined
[04:22] *** linkable6 joined
[04:22] *** coverable6 joined
[04:22] *** squashable6 joined
[04:22] *** benchable6 joined
[04:22] *** tellable6 joined
[04:23] *** greppable6 joined
[04:23] *** bloatable6 joined
[04:23] *** nativecallable6 joined
[04:23] *** notable6 joined
[04:23] *** sourceable6 joined
[04:23] *** quotable6 joined
[04:23] *** unicodable6 joined
[04:24] *** statisfiable6 joined
[04:24] *** bisectable6 joined
[04:24] *** releasable6 joined
[04:24] *** committable6 joined
[04:25] *** shareable6 joined
[05:20] *** sena_kun joined
[05:22] *** Altai-man_ left
[07:19] *** Altai-man_ joined
[07:22] *** sena_kun left
[09:20] *** sena_kun joined
[09:21] *** Altai-man_ left
[09:28] *** pmurias left
[09:28] <lizmat> Files=1305, Tests=111218, 205 wallclock secs (28.26 usr  8.37 sys + 2880.88 cusr 272.63 csys = 3190.14 CPU)

[09:36] *** AlexDaniel left
[09:45] <Geth> ¦ rakudo: 0fba27d746 | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/SEQUENCE.pm6

[09:45] <Geth> ¦ rakudo: Streamlining Rakudo::SEQUENCE.iterator (1/N)

[09:45] <Geth> ¦ rakudo: 

[09:45] <Geth> ¦ rakudo: - use binding where possible

[09:45] <Geth> ¦ rakudo: - use nqp::eqaddr instead of =:= or ===

[09:45] <Geth> ¦ rakudo: - use nqp::istype instead of ~~

[09:45] <Geth> ¦ rakudo: - check for Failure, instead of letting .self do the throwing

[09:45] <Geth> ¦ rakudo: - use topic inside worker subs

[09:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0fba27d746

[09:59] <Geth> ¦ rakudo: d68fe5eb02 | (Elizabeth Mattijsen)++ | src/core.c/IterationBuffer.pm6

[09:59] <Geth> ¦ rakudo: Add IterationBuffer.Slip

[09:59] <Geth> ¦ rakudo: 

[09:59] <Geth> ¦ rakudo: Turns out this will become very handy in streamlining Rakudo::SEQUENCE

[09:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d68fe5eb02

[10:11] <lizmat> tyil: looks like the module announcer is awol again  

[10:12] <tyil> ack

[10:12] <tellable6> 2020-03-16T11:10:51Z #raku <chloekek> tyil: I heared you’re on Mastodon. Can I follow you?

[10:12] <tellable6> 2020-03-18T09:17:27Z #raku <patrickb> tyil Do you need help with the rakudo star docker image? jjatria is willing to help!

[10:12] <tyil> heh

[10:13] <tyil> .tell chloekek of course, I'm @tyil@soc.fglt.nl

[10:13] <tellable6> tyil, I'll pass your message to chloekek

[10:13] <tyil> .tell patrickb sure thing, 

[10:13] <tellable6> tyil, I'll pass your message to patrickb

[10:13] <tyil> '

[10:13] <tyil> wops

[10:14] <tyil> .tell patrickb you can refer jjatria to [email@hidden.address] if he wants to contact me, or reach out on irc :>

[10:14] <tellable6> tyil, I'll pass your message to patrickb

[10:18] <tyil> I was wondering how I missed messages, since its not like me to miss highlights on irc, but I see the .tell is shared across the raku channels

[10:18] <tyil> v convenient tbh

[10:48] *** AlexDaniel joined
[10:48] *** AlexDaniel left
[10:48] *** AlexDaniel joined
[11:19] *** Altai-man_ joined
[11:22] *** sena_kun left
[11:24] <MasterDuke> nqp: my @a := nqp::list_i(0,1,2,3,4,5,6,7,8,9); my $b; my int $c := 0; my num $s := nqp::time_n(); while $c++ < 100_000_000 { $b := $c if @a }; say(nqp::sub_n(nqp::time_n(), $s)); say($b)

[11:24] <camelia> nqp-moarvm: OUTPUT: «2.0757856369018555␤100000000␤»

[11:24] <MasterDuke> nqp: my @a := nqp::list_i(0,1,2,3,4,5,6,7,8,9); my $b; my int $c := 0; my num $s := nqp::time_n(); while $c++ < 100_000_000 { $b := $c if nqp::elems(@a) }; say(nqp::sub_n(nqp::time_n(), $s)); say($b)

[11:24] <camelia> nqp-moarvm: OUTPUT: «1.2959961891174316␤100000000␤»

[11:24] <MasterDuke> nqp: my @a := nqp::list_i(); my $b; my int $c := 0; my num $s := nqp::time_n(); while $c++ < 100_000_000 { $b := $c if @a }; say(nqp::sub_n(nqp::time_n(), $s)); say($b)

[11:24] <camelia> nqp-moarvm: OUTPUT: «1.2075092792510986␤␤»

[11:24] <MasterDuke> nqp: my @a := nqp::list_i(); my $b; my int $c := 0; my num $s := nqp::time_n(); while $c++ < 100_000_000 { $b := $c if nqp::elems(@a) }; say(nqp::sub_n(nqp::time_n(), $s)); say($b)

[11:24] <camelia> nqp-moarvm: OUTPUT: «0.39176368713378906␤␤»

[11:25] <lizmat> nqp: my @a := nqp::list_i(); my $b; my int $c := -1; my num $s := nqp::time_n(); while ++$c < 100_000_000 { $b := $c if nqp::elems(@a) }; say(nqp::sub_n(nqp::time_n(), $s)); say($b)

[11:25] <camelia> nqp-moarvm: OUTPUT: «0.36582326889038086␤␤»

[11:26] <lizmat> prefix increment faster still  :)

[11:26] <MasterDuke> true, but i was really comparing `if @a` vs `if nqp::elems(@a)`

[11:35] <lizmat> oki  :-)

[11:35] <lizmat> looks like you've found another winner  :-)

[11:35] <lizmat> fwiw, spectest was down significantly, which may well have been caused by faster parsing

[11:37] <MasterDuke> these are really pico-optimizations though, less than 1s difference for 100m calls

[11:39] <lizmat> they're not so pico if I see results in make spectest

[11:55] *** AlexDaniel left
[13:04] <Geth> ¦ rakudo: 1d57d17da0 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/MethodContainer.nqp

[13:04] <Geth> ¦ rakudo: Hide methods that are an implementation detail

[13:04] <Geth> ¦ rakudo: 

[13:04] <Geth> ¦ rakudo: - add a :implementation-detail parameter to ^methods

[13:04] <Geth> ¦ rakudo: - if set, will *also* show methods that are implementation details

[13:04] <Geth> ¦ rakudo: - by default, will not produce such methods

[13:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1d57d17da0

[13:06] *** travis-ci joined
[13:06] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Streamlining Rakudo::SEQUENCE.iterator (1/N)

[13:06] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665138020 https://github.com/rakudo/rakudo/compare/a381202881d4...0fba27d74685

[13:06] *** travis-ci left
[13:07] <lizmat> hmmm.. 3 jobs failed to run the build script

[13:08] <MasterDuke> yeah, happened on a commit or two of mine. travis seems to be acting up more than usual

[13:08] <lizmat> maybe overload... so many home workers  :-)

[13:13] *** travis-ci joined
[13:13] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Streamlining Rakudo::SEQUENCE.iterator (1/N)

[13:13] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665138020 https://github.com/rakudo/rakudo/compare/a381202881d4...0fba27d74685

[13:13] *** travis-ci left
[13:20] *** sena_kun joined
[13:22] *** Altai-man_ left
[13:37] *** travis-ci joined
[13:37] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Add IterationBuffer.Slip

[13:37] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665139571 https://github.com/rakudo/rakudo/compare/0fba27d74685...d68fe5eb02cb

[13:37] *** travis-ci left
[13:37] <lizmat> same 3 jobs: An error occurred while generating the build script.

[13:39] <lizmat> seems the MacOS backend is borked

[13:54] *** travis-ci joined
[13:54] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Hide methods that are an implementation detail

[13:54] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665173679 https://github.com/rakudo/rakudo/compare/d68fe5eb02cb...1d57d17da09c

[13:54] *** travis-ci left
[13:55] <lizmat> again, all MacOS builds

[13:55] <lizmat> being on MacOS myself, and seeing that a re-configure works fine, going to assume that Travis is borked

[14:13] <lizmat> m: m: use v6.c; say "foo"   # looks like this is borked also

[14:13] <camelia> rakudo-moar 1d57d17da: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Too late to switch language version. Must be used as the very first statement.␤at <tmp>:1␤------> 3m: use v6.c7⏏5; say "foo"   # looks like this is borke␤»

[14:13] <lizmat> m: use v6.c; say "foo"   # looks like this is borked also

[14:13] <camelia> rakudo-moar 1d57d17da: OUTPUT: «Don't know setting RESTRICTED␤   at gen/moar/ModuleLoader.nqp:257  (/home/camelia/rakudo-m-inst-2/share/perl6/lib/Perl6/ModuleLoader.moarvm:previous_setting_name)␤ from gen/moar/ModuleLoader.nqp:261  (/home/camelia/rakudo-m-inst-2/share/perl6/lib/…»

[14:26] <lizmat> bisectable6: use v6.c   # probably ok

[14:26] <bisectable6> lizmat, On both starting points (old=2015.12 new=1d57d17) the exit code is 0 and the output is identical as well

[14:26] <bisectable6> lizmat, Output on both points: «»

[14:27] <sena_kun> hmm, I just did all spec tests (master, 6.c, 6.d) and it was fine?

[14:27] <sena_kun> s/just/a couple of hours ago/

[14:28] <lizmat> sena_kun: it's related to the RESTRICTED setting

[14:36] <Geth> ¦ rakudo: 0c36feb07d | (Elizabeth Mattijsen)++ | src/core.c/PseudoStash.pm6

[14:36] <Geth> ¦ rakudo: PseudoStash introspection omits implementation detail

[14:36] <Geth> ¦ rakudo: 

[14:36] <Geth> ¦ rakudo: - applies to .keys, .values, .kv, .pairs and .elems

[14:36] <Geth> ¦ rakudo: - specify :implementation-detail to include *all* entries

[14:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0c36feb07d

[15:11] <Geth> ¦ rakudo: 8fe30b9c9f | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/SEQUENCE.pm6

[15:11] <Geth> ¦ rakudo: Streamlining Rakudo::SEQUENCE.iterator (2/N)

[15:11] <Geth> ¦ rakudo: 

[15:11] <Geth> ¦ rakudo: - use &producer instead of $code

[15:11] <Geth> ¦ rakudo: - to improve readability

[15:11] <Geth> ¦ rakudo: - to improve pre-inlining performance

[15:11] <Geth> ¦ rakudo: - also remove some unneeded .defined tests

[15:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8fe30b9c9f

[15:11] <lizmat> afk for a few hours&

[15:11] <nine> releasable6: status

[15:11] <releasable6> nine, Next release in ≈7 days and ≈3 hours. 2 blockers. Changelog for this release was not started yet

[15:11] <releasable6> nine, Details: https://gist.github.com/ca47dfe8b3da48e47c8b18d59810488d

[15:15] <sena_kun> Release is next week. So fat it looks pretty ok, though we as usual have a number of regressed modules. The previous ticket was not resolved, so I'll update the blin data soon (hmm, why not start it right now instead of waiting evening). Resolving regressed modules and giving moarvm is in shape for a release, it's a wrap time then.

[15:16] *** grayrider joined
[15:17] <nine> Why is https://github.com/rakudo/rakudo/issues/3559 a blocker for rakudo when it's apparently an issue with rakudo star's build system?

[15:17] <sena_kun> s/fat/far/

[15:19] *** Altai-man_ joined
[15:20] *** travis-ci joined
[15:20] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'PseudoStash introspection omits implementation detail

[15:20] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665200174 https://github.com/rakudo/rakudo/compare/1d57d17da09c...0c36feb07d8a

[15:20] *** travis-ci left
[15:21] <Altai-man_> re blocker: We should move the ticket to star repo, I think. But given our "once in a three month" release is broken for some system, I'd say we want to make a hotfix next month (this one) instead of leaving BSD with a break for another months.

[15:21] <Altai-man_> Of course, if that's possible to do such a "hotfix" for star.

[15:22] *** sena_kun left
[15:22] <Altai-man_> As in, if there are volunteers with enough time on hands.

[15:22] *** grayrider left
[15:23] *** grayrider joined
[15:24] <vrurg> Altai-man_: theoretically, it is possible to stick to make on *BSD. It was rather problematic at some point due to OpenBSD make erh... specific.

[15:25] <vrurg> But I'd rather not as use of GNU make is better for consistency.

[15:27] <Altai-man_> vrurg, I mean, if there is a doable workaround, we can suggest it and that's fine. Otherwise we broke a thing and why not find a solution this release and wrap in a star instead of leaving a ticket hanging around thinking "Star is released not so often, can fix it later".

[15:28] <vrurg> Altai-man_: I understand. My point is that it could be fixed on rakudo side if we always use bsd make on *BSD. 

[15:29] <vrurg> I wouldn't be really happy with this way, but it's possible.

[15:30] <Altai-man_> I (one can argue for another point of view, of course) consider building issues ("It does not build _at all_") a critical bug, as well as reliable segfaults and stuff like that. More than some added technical debt (sadly).

[15:38] <Geth> ¦ rakudo: 4c026ab83c | (Ben Davies)++ | src/Perl6/Metamodel/BUILDPLAN.nqp

[15:38] <Geth> ¦ rakudo: Fix exception when mixing in roles that use `is built` at runtime

[15:38] <Geth> ¦ rakudo: 

[15:38] <Geth> ¦ rakudo: In this case, Metamodel::BUILDPLAN.create_BUILDPLAN would attempt to

[15:38] <Geth> ¦ rakudo: look up Mu through $*W when it no longer exists. Instead, HLLize a

[15:38] <Geth> ¦ rakudo: VMNull to get it.

[15:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4c026ab83c

[15:39] *** tinmarino joined
[15:41] <Geth> ¦ roast: 073986a8f5 | (Ben Davies)++ | S14-roles/mixin.t

[15:41] <Geth> ¦ roast: Add test for mixins of roles that use "is built" at runtime

[15:41] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/073986a8f5

[15:45] <vrurg> Altai-man_: I'll be afk. Too overloaded lately, but keeping my eye on that ticket. Maybe will have a few minutes later today to comment on it.

[15:45] <Altai-man_> vrurg, good luck! No really hurry yet, we have a week ahead.

[16:12] *** travis-ci joined
[16:12] <travis-ci> Rakudo build errored. Ben Davies 'Fix exception when mixing in roles that use `is built` at runtime

[16:12] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665217106 https://github.com/rakudo/rakudo/compare/8fe30b9c9f72...4c026ab83c24

[16:12] *** travis-ci left
[16:31] *** AlexDaniel joined
[16:31] *** AlexDaniel left
[16:31] *** AlexDaniel joined
[16:36] <[Tux]> Rakudo version 2020.02.1-223-g1d57d17da - MoarVM version 2020.02.1-47-g3c3ad0678

[16:36] <[Tux]> csv-test-xs-20      0.360 -  0.362

[16:36] <[Tux]> csv-ip5xs           0.695 -  0.696

[16:36] <[Tux]> test-t --race       0.968 -  0.974

[16:36] <[Tux]> test-t              1.919 -  1.949

[16:36] <[Tux]> csv-ip5xs-20        6.075 -  6.103

[16:36] <[Tux]> test                7.430 -  7.599

[16:36] <[Tux]> test-t-20 --race    9.811 -  9.862

[16:36] <[Tux]> csv-parser         23.748 - 24.774

[16:36] <[Tux]> test-t-20          31.141 - 32.389

[16:58] *** tinmarino left
[17:20] *** sena_kun joined
[17:21] *** Altai-man_ left
[19:19] *** Altai-man_ joined
[19:21] *** sena_kun left
[20:59] <Geth> ¦ rakudo: 58fa99b2ae | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/SEQUENCE.pm6

[20:59] <Geth> ¦ rakudo: Streamlining Rakudo::SEQUENCE.iterator (3/N)

[20:59] <Geth> ¦ rakudo: 

[20:59] <Geth> ¦ rakudo: - use binding where possible

[20:59] <Geth> ¦ rakudo: - make lambda's use the default signature and $_

[20:59] <Geth> ¦ rakudo: - use WhateverCode where possible

[20:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/58fa99b2ae

[21:20] *** sena_kun joined
[21:21] *** Altai-man_ left
[21:26] <Geth> ¦ rakudo: cf6177efa7 | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/SEQUENCE.pm6

[21:26] <Geth> ¦ rakudo: Streamlining Rakudo::SEQUENCE.iterator (4/N)

[21:26] <Geth> ¦ rakudo: 

[21:26] <Geth> ¦ rakudo: - use ternaries in lambda's where possible

[21:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cf6177efa7

[21:27] *** travis-ci joined
[21:27] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Streamlining Rakudo::SEQUENCE.iterator (3/N)

[21:27] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665304117 https://github.com/rakudo/rakudo/compare/4c026ab83c24...58fa99b2aeb6

[21:27] *** travis-ci left
[21:27] <lizmat> MacOS still borked  :-(

[22:01] *** travis-ci joined
[22:01] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Streamlining Rakudo::SEQUENCE.iterator (4/N)

[22:01] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665312085 https://github.com/rakudo/rakudo/compare/58fa99b2aeb6...cf6177efa7fe

[22:01] *** travis-ci left
[22:06] <Geth> ¦ rakudo: 75c6ac349b | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/SEQUENCE.pm6

[22:06] <Geth> ¦ rakudo: Streamlining Rakudo::SEQUENCE.iterator (5/N)

[22:06] <Geth> ¦ rakudo: 

[22:06] <Geth> ¦ rakudo: - use "until" instead of "while !"

[22:06] <Geth> ¦ rakudo: - use nqp::eqaddr instead of =:=

[22:06] <Geth> ¦ rakudo: - use nqp::not_i instead of not

[22:06] <Geth> ¦ rakudo: - use && instead of and

[22:06] <Geth> ¦ rakudo: - use b.ACCEPTS(a) instead of a ~~ b

[22:06] <Geth> ¦ rakudo: - more binding instead of assigning

[22:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/75c6ac349b

[22:23] <Geth> ¦ rakudo: 500dc6627b | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/SEQUENCE.pm6

[22:23] <Geth> ¦ rakudo: Streamlining Rakudo::SEQUENCE.iterator (6/N)

[22:23] <Geth> ¦ rakudo: 

[22:23] <Geth> ¦ rakudo: - use native int for stop / looped semaphores

[22:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/500dc6627b

[22:53] *** MasterDuke left
[23:10] <Geth> ¦ nqp: 6239081e95 | (Daniel Green)++ | 14 files

[23:10] <Geth> ¦ nqp: Convert `nqp::istrue` into `nqp::elems`

[23:10] <Geth> ¦ nqp: 

[23:10] <Geth> ¦ nqp: In the same vein as 75735628a16ba1c2243696623d679ff99c86e8bd, `if %hash`

[23:10] <Geth> ¦ nqp: or `if @array` just ends up checking the number of elems in the hash or

[23:10] <Geth> ¦ nqp: array, so doing it manually in places that get called a lot skips a lot

[23:10] <Geth> ¦ nqp: of calls to MVM_coerce_istrue.

[23:10] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/6239081e95

[23:12] <tyil> a (reasonable) while ago, someone referred me to a very minimal (40 lines or so) sample of Raku code to install a module

[23:12] <Geth> ¦ rakudo: 87226876a2 | (Daniel Green)++ | src/Perl6/World.nqp

[23:12] <Geth> ¦ rakudo: Convert `nqp::istrue` into `nqp::elems`

[23:12] <Geth> ¦ rakudo: 

[23:12] <Geth> ¦ rakudo: See https://github.com/Raku/nqp/commit/6239081e9531e56cdb75c5a17d59299b0cd1fcbe

[23:12] <Geth> ¦ rakudo: for context.

[23:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/87226876a2

[23:12] <tyil> does that someone still know the link and could you please share it again :>

[23:12] *** MasterDuke joined
[23:13] *** travis-ci joined
[23:13] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Streamlining Rakudo::SEQUENCE.iterator (6/N)

[23:13] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665324442 https://github.com/rakudo/rakudo/compare/75c6ac349b0b...500dc6627b0a

[23:13] *** travis-ci left
[23:18] <MasterDuke> those two commits (the `nqp::istrue` related ones) reduce the number of MVM_coerce_istrue calls by 8 million when building rakudo

[23:22] *** sena_kun left
[23:24] *** sena_kun joined
[23:29] <MasterDuke> timotimo: any suggestions for that MVM_frame_find_lexical_by_name problem?

[23:58] *** travis-ci joined
[23:58] <travis-ci> Rakudo build errored. Daniel Green 'Convert `nqp::istrue` into `nqp::elems`

[23:58] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/665335989 https://github.com/rakudo/rakudo/compare/500dc6627b0a...87226876a2d0

[23:58] *** travis-ci left
