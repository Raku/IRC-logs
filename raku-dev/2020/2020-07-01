[00:02] *** sena_kun joined
[00:03] *** Altai-man_ left
[00:07] *** nebuchadnezzar left
[00:25] *** [Coke] left
[00:27] *** [Coke] joined
[00:27] *** [Coke] left
[00:27] *** [Coke] joined
[01:09] *** softmoth_ joined
[01:10] *** MasterDuke left
[01:46] *** HarmtH left
[01:47] *** HarmtH joined
[01:55] *** Kaiepi left
[01:58] *** Kaiepi joined
[02:01] *** Altai-man_ joined
[02:03] *** sena_kun left
[02:27] <[Coke]> timotimo: rakutouille?

[02:29] <timotimo> haha

[02:29] <timotimo> nice one

[02:44] <raku-bridge> <DataKinds> timotimo: works for me too

[04:02] *** sena_kun joined
[04:03] *** Altai-man_ left
[04:23] *** softmoth_ is now known as softmoth

[05:08] <Geth> ¦ problem-solving: Xliff assigned to jnthn Issue Could Raku benefit from a Flags type? https://github.com/Raku/problem-solving/issues/208

[05:10] *** nebuchadnezzar joined
[06:01] *** Altai-man_ joined
[06:03] *** sena_kun left
[06:12] *** squashable6 left
[06:13] *** squashable6 joined
[08:02] *** sena_kun joined
[08:04] *** Altai-man_ left
[08:51] *** nebuchadnezzar left
[09:12] *** nebuchadnezzar joined
[09:40] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Could Raku benefit from a Flags type? https://github.com/Raku/problem-solving/issues/208

[09:47] *** nebuchadnezzar left
[09:53] *** nebuchadnezzar joined
[10:01] *** Altai-man_ joined
[10:04] *** sena_kun left
[10:10] *** softmoth left
[10:12] *** MasterDuke joined
[10:16] <lizmat> bisectable6: old=2020.01 "aaa" ~~ /(.)(.)(.)/; .say for $/

[10:16] <bisectable6> lizmat, Bisecting by exit code (old=2020.01 new=0a86798). Old exit code: 0

[10:16] <bisectable6> lizmat, bisect log: https://gist.github.com/b9e8ca73d0bfa7bf69585fe3392ac394

[10:16] <bisectable6> lizmat, (2020-05-10) https://github.com/rakudo/rakudo/commit/88d98225a4df61473ff5b935561719c56b04d1c2

[10:21] <Geth> ¦ rakudo: 9f546ef6f9 | (Elizabeth Mattijsen)++ | src/core.c/Mu.pm6

[10:21] <Geth> ¦ rakudo: Allow Mu.say/put/note handling objects with NQP methods

[10:21] <Geth> ¦ rakudo: 

[10:21] <Geth> ¦ rakudo: The Match object has a "print" method that lives in NQP.  Calling .say

[10:21] <Geth> ¦ rakudo: (and .put and .note) on a Match object was broken with 88d98225a4df61 .

[10:21] <Geth> ¦ rakudo: This commit fixes that.

[10:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9f546ef6f9

[11:10] <Geth> ¦ rakudo/new-disp: 5d9f53f503 | (Jonathan Worthington)++ | 2 files

[11:10] <Geth> ¦ rakudo/new-disp: Fix qualified method dispatch failure error report

[11:10] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/5d9f53f503

[11:23] *** lichtkind joined
[11:30] *** JJMerelo joined
[11:43] *** JJMerelo left
[11:53] *** stoned75 left
[11:58] *** stoned75 joined
[12:10] *** mst left
[12:10] *** mst joined
[12:16] *** bartolin_ left
[12:29] *** sena_kun joined
[12:29] *** Altai-man_ left
[12:29] *** bartolin joined
[12:32] <Geth> ¦ rakudo/new-disp: 9d0d41ad22 | (Jonathan Worthington)++ | src/vm/moar/dispatchers.nqp

[12:32] <Geth> ¦ rakudo/new-disp: Fix a thinko in qualified method dispatcher

[12:32] <Geth> ¦ rakudo/new-disp: 

[12:32] <Geth> ¦ rakudo/new-disp: Which fixes a test regression we got having moved from the spesh plugin.

[12:32] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/9d0d41ad22

[12:32] <Geth> ¦ rakudo/new-disp: 6164a8298e | (Jonathan Worthington)++ | src/core.c/Mu.pm6

[12:32] <Geth> ¦ rakudo/new-disp: Toss spesh plugin related line in dispatch:<::>

[12:32] <Geth> ¦ rakudo/new-disp: 

[12:32] <Geth> ¦ rakudo/new-disp: We no longer need to come here for error production.

[12:32] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/6164a8298e

[12:43] *** MasterDuke left
[12:56] <Geth> ¦ rakudo/new-disp: 9615d8daba | (Jonathan Worthington)++ | 2 files

[12:56] <Geth> ¦ rakudo/new-disp: Restore 6.c Proxy return decont workaround

[12:56] <Geth> ¦ rakudo/new-disp: 

[12:56] <Geth> ¦ rakudo/new-disp: Since the dispatcher version of this now supports it, we're done

[12:56] <Geth> ¦ rakudo/new-disp: switching over from that spesh plugin.

[12:56] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/9615d8daba

[13:16] <lizmat> m: my class A { die }   # jnthn: what could be a reason that this wouldn't die ?

[13:16] <camelia> rakudo-moar 9f546ef6f: OUTPUT: «Died␤  in block <unit> at <tmp> line 1␤␤»

[13:17] <jnthn> Only if the class body is never run somehow, I guess

[13:18] <jnthn> Did you regress it somehow, or is it golfed down from something?

[13:18] <lizmat> trying to golf it now

[13:20] <lizmat> ah, figured it: my test code runs in the mainline, and depends on code having run in the mainline in the class

[13:21] <lizmat> which by then, hasn't run yet

[13:22] <lizmat> m: class A { ... }; dd A.a; class A { my $a = 42; method a() { $a } }    # basically

[13:22] <camelia> rakudo-moar 9f546ef6f: OUTPUT: «Any␤»

[13:22] <jnthn> Ah, that kind of construction.

[13:22] <jnthn> Solvable with INIT my $a = 42

[13:23] <jnthn> Well, depending if there's anything more involved going on

[13:24] *** toddr joined
[13:25] <lizmat> yeah...  :-)

[13:25] <lizmat> afk for a few hours&

[13:43] <Geth> ¦ rakudo/new-disp: 765e7e9700 | (Jonathan Worthington)++ | src/vm/moar/dispatchers.nqp

[13:43] <Geth> ¦ rakudo/new-disp: Further fill out new multi dispatcher

[13:43] <Geth> ¦ rakudo/new-disp: 

[13:43] <Geth> ¦ rakudo/new-disp: * Do filtering on required named argument

[13:43] <Geth> ¦ rakudo/new-disp: * Record guardability and whether a bind check is required

[13:43] <Geth> ¦ rakudo/new-disp: review: https://github.com/rakudo/rakudo/commit/765e7e9700

[14:01] *** Altai-man_ joined
[14:04] *** sena_kun left
[14:39] *** MasterDuke joined
[16:02] *** sena_kun joined
[16:04] *** Altai-man_ left
[16:29] <nine> I wonder if I should prohibit repossessing Stash in general and instead have the compiler generate code for adding symbols to stashes that's executed on deserialization. Like the other fixups we have.

[16:35] <nine> So when loading Cool::Cat, Cat would get put into Cool.WHO in the deserialize frame, instead of repossessing the setting's Cool.WHO and relying on resolve_repossession_conflicts to merge two different versions of Cool.WHO on load.

[16:36] <nine> This might even turn out to be faster in the end, i.e. a fixed list of hash binds instead of iterating over the list of conflicts and each conflicting stash's keys and then doing the same number of binds

[17:15] *** nine left
[17:15] *** jdv79 left
[17:15] *** leont_ left
[17:15] *** AlexDaniel left
[17:15] *** dogbert17 left
[17:15] *** japhb left
[17:15] *** gugod left
[17:15] *** MasterDuke left
[17:15] *** lucs left
[17:15] *** camelia left
[17:15] *** ShimmerFairy left
[17:15] *** nativecallable6 left
[17:15] *** linkable6 left
[17:15] *** releasable6 left
[17:15] *** unicodable6 left
[17:15] *** kawaii left
[17:15] *** zostay left
[17:15] *** tbrowder left
[17:15] *** reportable6 left
[17:15] *** tellable6 left
[17:15] *** bisectable6 left
[17:15] *** evalable6 left
[17:15] *** committable6 left
[17:15] *** statisfiable6 left
[17:15] *** Geth left
[17:15] *** hoelzro left
[17:15] *** moon-child left
[17:15] *** jnthn left
[17:15] *** nebuchadnezzar left
[17:15] *** squashable6 left
[17:15] *** finsternis left
[17:15] *** greppable6 left
[17:15] *** bloatable6 left
[17:15] *** shareable6 left
[17:15] *** benchable6 left
[17:15] *** sourceable6 left
[17:15] *** notable6 left
[17:15] *** quotable6 left
[17:15] *** coverable6 left
[17:15] *** lizmat left
[17:15] *** raku-bridge left
[17:15] *** TimToady left
[17:15] *** Voldenet left
[17:15] *** TreyHarris left
[17:15] *** go|dfish left
[17:15] *** robertle left
[17:15] *** AlexDaniel` left
[17:15] *** vrurg left
[17:15] *** jjatria left
[17:15] *** gfldex left
[17:15] *** SmokeMachine left
[17:15] *** masak left
[17:15] *** moritz left
[17:15] *** tailgate left
[17:15] *** toddr left
[17:15] *** [Coke] left
[17:15] *** samcv left
[17:16] *** tyil left
[17:16] *** unclechu left
[17:16] *** commavir left
[17:16] *** sena_kun left
[17:16] *** mst left
[17:16] *** Kaiepi left
[17:16] *** sivoais left
[17:16] *** timotimo left
[17:16] *** stoned75 left
[17:16] *** HarmtH left
[17:16] *** krunen left
[17:16] *** literal left
[17:16] *** samebchase- left
[17:16] *** lichtkind left
[17:16] *** Summertime left
[17:16] *** eater left
[17:16] *** chansen_ left
[17:16] *** rypervenche left
[17:16] *** [Tux] left
[17:16] *** rba left
[17:16] *** bartolin left
[17:16] *** camelCaser left
[17:16] *** b2gills left
[17:16] *** klapperl left
[17:16] *** sjn left
[17:19] *** ilogger2 joined
[17:26] *** gugod left
[17:29] *** leont_ joined
[17:29] *** AlexDaniel joined
[17:29] *** dogbert17 joined
[17:29] *** japhb joined
[17:29] *** gugod joined
[18:02] *** Altai-man_ joined
[18:15] *** MasterDuke joined
[18:37] *** MasterDuke left
[19:16] <Geth> ¦ rakudo/match-refactor: 27 commits pushed by (Elizabeth Mattijsen)++

[19:16] <Geth> ¦ rakudo/match-refactor: review: https://github.com/rakudo/rakudo/compare/98ee23e46f52...d3894b2c7c53

[19:50] *** AlexDaniel` joined
[20:03] *** sena_kun joined
[20:04] *** Altai-man_ left
[20:09] <timotimo> blogmao: https://wakelift.de/how-would-you-like-a-1000x-speed-increase/

[20:15] <lizmat> timotimo: will you tweet, or should I?

[20:18] <timotimo> you can write a nice little sentence and i'll reblog it, that sounds better than when i praise my own stuff and post it myself :D

[20:18] <timotimo> that's assuming you have any praise, of course

[20:19] <lizmat> ok, reading now, then tweeting  :_)

[20:24] <lizmat> twat: https://twitter.com/liztormato/status/1278424109031067655

[20:24] <lizmat> like the picture

[20:24] <lizmat> our neighbour has 3 alpaca in the yard, so it looks familiar  :-)

[20:24] <lizmat> *aplacas

[20:24] <lizmat> *alpacas

[20:25] <lizmat> grrr

[20:30] <timotimo> i remember the alpaca!

[20:31] <timotimo> i was also considering looking for a picture a la "shady person with big black coat asks if you'd like to see the wares they've got"

[20:32] <timotimo> oh the muppets one is wearing beige or yellow-ish rather than black

[20:39] <jnthn> timotimo++

[20:50] <[Coke]> weird, search for 'raku ecosystem' on google, shows this as a top hit: https://github.com/hythm7/raku-ecosystem

[20:53] *** Xliff joined
[20:54] <lizmat> this is my top hit: https://github.com/Raku/ecosystem

[20:55] <lizmat> modules.raku.org is the 4th one for me

[20:56] <[Coke]> yah, the hythm7 one was indented for me under the the same top hit you had.

[20:56] <[Coke]> so, google needs to be smarter about forks, maybe?

[20:56] * [Coke] hurls https://github.com/Raku/ecosystem/pull/513

[20:56] <timotimo> interesting

[21:02] <Geth> ¦ rakudo/match-refactor: f9701dc10f | (Elizabeth Mattijsen)++ | src/core.c/Match.pm6

[21:02] <Geth> ¦ rakudo/match-refactor: Add more of the old internal semantics

[21:02] <Geth> ¦ rakudo/match-refactor: 

[21:02] <Geth> ¦ rakudo/match-refactor: - make .MATCH do the vivification, as it used to do

[21:02] <Geth> ¦ rakudo/match-refactor: - mark object with $!match == NQPdidMatch

[21:02] <Geth> ¦ rakudo/match-refactor:   - turns out NQP may reset that in some situations, so just using

[21:02] <Geth> ¦ rakudo/match-refactor:     $!captures as a flag would not work.  Perhaps we should use $!match

[21:02] <Geth> ¦ rakudo/match-refactor:     as the place to keep captures. Hmmm...

[21:02] <Geth> ¦ rakudo/match-refactor: - no captures are marked using the same empty hash

[21:02] <Geth> ¦ rakudo/match-refactor: - added method STR again, Str.match needs it

[21:02] <Geth> ¦ rakudo/match-refactor: - add .captures method (implementation detail) for use in eqv

[21:02] <Geth> ¦ rakudo/match-refactor: review: https://github.com/rakudo/rakudo/commit/f9701dc10f

[21:03] <lizmat> sena_kun I guess I'm ready for another Blin run

[21:03] <lizmat> alas , Inline::Perl5 still borked

[21:09] <lizmat> and that concludes my hacking for today&

[21:19] <sena_kun> lizmat, roger, thanks for all the efforts!

[22:02] *** Altai-man_ joined
[22:04] *** sena_kun left
[22:46] *** TreyHarris left
[22:50] *** TreyHarris joined
[23:10] *** AlexDani` joined
[23:12] *** AlexDaniel left
