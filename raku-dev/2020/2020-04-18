[01:10] *** AlexDaniel left
[01:11] *** AlexDaniel joined
[01:11] *** AlexDaniel left
[01:11] *** AlexDaniel joined
[01:14] *** Altai-man_ joined
[01:17] *** sena_kun left
[02:00] *** softmoth left
[02:01] *** softmoth joined
[02:49] <Geth_> ¦ nqp: 5db59e7973 | Coke++ | docs/ops.markdown

[02:49] <Geth_> ¦ nqp: add unbox_u

[02:49] <Geth_> ¦ nqp: 

[02:49] <Geth_> ¦ nqp: moar variant opcode

[02:49] <Geth_> ¦ nqp: review: https://github.com/Raku/nqp/commit/5db59e7973

[02:51] <[Coke]> Down to 306 nqp doc failures - pick an easy one and doc it, get us below 300! (https://gist.github.com/coke/325a98074f3178957969b07266df7da4)

[03:15] *** sena_kun joined
[03:16] *** Altai-man_ left
[05:14] *** Altai-man_ joined
[05:16] *** sena_kun left
[06:11] *** softmoth left
[07:15] *** sena_kun joined
[07:17] *** Altai-man_ left
[07:27] *** lichtkind joined
[08:05] *** [TuxCM] joined
[09:08] *** pmurias joined
[09:14] *** Altai-man_ joined
[09:16] *** sena_kun left
[09:51] *** Kaiepi left
[09:51] *** Kaeipi joined
[09:53] *** Kaeipi left
[09:53] *** Kaiepi joined
[10:05] <Altai-man_> AlexDaniel, I truly appreciate your blin fixes! It turns https://gist.github.com/Altai-man/50db11ae949d3e04e84023e91209ae80 into https://gist.github.com/Altai-man/5b2e7a1294679f78f2cd16e6ffeaf017

[10:05] <Altai-man_> Which is a very nice improvement to have.

[10:06] *** pmurias left
[10:07] *** pmurias joined
[10:07] <Altai-man_> Slippy::Semilist has a PR, Carp was discussed and fixed, same with Grammar::BNF, CSS::Grammar. November is, erm, very odd one and two ones seem like a regression. I wonder how reproducible would `MoarVM panic: Internal error: invalid thread ID -1469900288 in GC work pass` be, though...

[10:08] <Altai-man_> Xliff++ AlexDaniel++

[10:13] <Altai-man_> By the way, https://gist.github.com/Altai-man/b67996b0c196a1f422a9a1772c88d744 <- I am seeing git-reference warning 17 (!) times when building rakudo, what can be at fault?

[10:20] *** lichtkind left
[10:42] <lizmat> Files=1306, Tests=111236, 214 wallclock secs (28.91 usr  8.19 sys + 3033.63 cusr 264.01 csys = 3334.74 CPU)

[11:06] <AlexDaniel> Altai-man_: “I wonder how reproducible would `MoarVM panic: Internal error: invalid thread ID -1469900288 in GC work pass` be, though...”

[11:06] <AlexDaniel> Altai-man_: you can check the bisect log

[11:07] <AlexDaniel> or, hmm… if it bisected to fdfa6ac85 then maybe it's not reproducible at all

[11:07] <linkable6> (2020-04-17) https://github.com/rakudo/rakudo/commit/fdfa6ac85c Bump NQP

[11:07] <Altai-man_> I tried it locally a couple of times and no luck.

[11:08] <Altai-man_> Which is, of course, not your best test case, but still it is not _so_ reproducible to be easy to catch.

[11:09] <AlexDaniel> right right

[11:09] <AlexDaniel> I see, ok

[11:11] <[TuxCM]> Rakudo version 2020.02.1-332-gfdfa6ac85 - MoarVM version 2020.02.1-96-g4ddc33f3d

[11:11] <[TuxCM]> csv-test-xs-20      0.389 -  0.390

[11:11] <[TuxCM]> csv-ip5xs           0.813 -  0.824

[11:11] <[TuxCM]> test-t --race       0.856 -  1.133

[11:11] <[TuxCM]> test-t              1.946 -  1.959

[11:11] <[TuxCM]> test                7.691 -  7.742

[11:11] <[TuxCM]> csv-ip5xs-20        8.122 -  8.402

[11:11] <[TuxCM]> test-t-20 --race    9.887 - 10.253

[11:12] <[TuxCM]> csv-parser         23.733 - 25.013

[11:12] <[TuxCM]> test-t-20          31.595 - 32.723

[11:12] <AlexDaniel> Altai-man_: OK, that's pretty good, so November is the only one that still has a problem

[11:13] <AlexDaniel> Altai-man_: we're not testing November anyway: https://github.com/Raku/Blin/blob/8dda1b4cf250b0d0c203bee8b15b1658aa9eca76/bin/blin.p6#L43-L61

[11:13] <AlexDaniel> so perhaps we can just move it into another list and skip it altogether

[11:15] *** sena_kun joined
[11:16] *** Altai-man_ left
[11:41] *** dogbert17 joined
[12:13] <nine> AlexDaniel: I think --git-reference got renamed

[12:13] <AlexDaniel> sena_kun: ↑

[12:14] <nine> Superseeded by --git-cache-dir

[12:14] <sena_kun> Seems so, but the question is why don't we have it in rakudo? Or is it not really backward compatible for old git versions? I am even more surprised we have https://github.com/rakudo/rakudo/pull/3474 which updates this option and it's merged.

[13:14] *** Altai-man_ joined
[13:17] *** sena_kun left
[13:22] *** Geth_ left
[13:22] *** Geth joined
[13:23] *** finsternis left
[13:24] *** finsternis joined
[13:33] *** Geth left
[13:34] *** Geth joined
[13:49] *** lichtkind joined
[13:59] <Geth> ¦ nqp: 13de5f5d9b | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/MOAR_REVISION

[13:59] <Geth> ¦ nqp: [MoarVM Bump] Brings 21 commits

[13:59] <Geth> ¦ nqp: 

[13:59] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2020.02.1-86-gab3f19251...2020.02.1-107-gab089e947

[13:59] <Geth> ¦ nqp: ab089e947 Merge branch 'wictory-align_st_size'

[13:59] <Geth> ¦ nqp: 02486a319 fixup! Adding to assertions of alignment invariant to st->size in P6opaque.c

[13:59] <Geth> ¦ nqp: 1eba4e8b3 I missed this align_to before.

[13:59] <Geth> ¦ nqp: e932be9ac This align_to is unnecessary.

[13:59] <Geth> ¦ nqp: <…commit message has 17 more lines…>

[13:59] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/13de5f5d9b

[14:04] <Geth> ¦ rakudo: e5ecdc4382 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/NQP_REVISION

[14:04] <Geth> ¦ rakudo: [NQP Bump] Brings 5 commits

[14:04] <Geth> ¦ rakudo: 

[14:04] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2020.02.1-120-gca5100355...2020.02.1-125-g13de5f5d9

[14:04] <Geth> ¦ rakudo: 13de5f5d9 [MoarVM Bump] Brings 21 commits

[14:04] <Geth> ¦ rakudo: 5db59e797 add unbox_u

[14:04] <Geth> ¦ rakudo: 1f8664432 Document isttyfh op

[14:04] <Geth> ¦ rakudo: b6c4b56f1 document totalmem op

[14:04] <Geth> ¦ rakudo: 25e3ccd00 document jvmgetproperties

[14:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e5ecdc4382

[14:11] *** donaldh left
[14:12] <AlexDaniel> goddamn GitHub PR user interface I hate it

[14:13] <AlexDaniel> you can resolve conflicts (nice!) but then can't choose what's going to happen exactly with the merge (no way to squash or anything like that)

[14:13] <AlexDaniel> if you do it manually then github has no idea that the PR was merged, of course

[14:13] <AlexDaniel> I don't want a line going two years back in git pretty log

[14:19] <Geth> ¦ nqp/master: 4 commits pushed by (Martin Ryan)++, (Aleks-Daniel Jakimenko-Aleksejev)++

[14:19] <Geth> ¦ nqp/master: 185d9a7d2e | Add QAST::Node::dump_indent_string method to produce indent strings

[14:19] <Geth> ¦ nqp/master: 88801ac29f | Modify Node dump routines to use new dump_indent_string method

[14:19] <Geth> ¦ nqp/master: 4eca4bb0f4 | Add guide lines to QAST::Block node dumps

[14:19] <Geth> ¦ nqp/master: a89103f3f8 | Merge branch 'mryan-mryan-ast-debug'

[14:19] <Geth> ¦ nqp/master: review: https://github.com/Raku/nqp/compare/13de5f5d9b73...a89103f3f8c8

[14:22] <AlexDaniel> so one page of PRs in nqp, that's sorta OK

[14:23] <AlexDaniel> two pages in MoarVM, still somewhat fine

[14:23] <AlexDaniel> 106 pull requests in rakudo? Whaaaaat

[14:27] <AlexDaniel> greppable6: PrivateAccessor

[14:27] <greppable6> AlexDaniel, 29 lines, 2 modules: https://gist.github.com/0e28684ce6886671772add84aa58ddf6

[14:44] <AlexDaniel> m: my @​a = 1,2,3,4,5; @​a[1]​:delete; .say for @​a[0..*]

[14:44] <camelia> rakudo-moar e5ecdc438: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Name must begin with alphabetic character␤at <tmp>:1␤------> 3my @7⏏5​a = 1,2,3,4,5; @​a[1]​:delete; .say for␤    expecting any of:␤        constraint␤        infix␤        infix…»

[14:44] <AlexDaniel> what

[14:44] <AlexDaniel> m: my @a = 1,2,3,4,5; @a[1]​:delete; .say for @a[0..*]

[14:44] <camelia> rakudo-moar e5ecdc438: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Bogus postfix␤at <tmp>:1␤------> 3my @a = 1,2,3,4,5; @a[1]7⏏5​:delete; .say for @a[0..*]␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        sta…»

[14:44] <AlexDaniel> m: my @a = 1,2,3,4,5; @a[1]:delete; .say for @a[0..*]

[14:44] <camelia> rakudo-moar e5ecdc438: OUTPUT: «1␤»

[14:44] <AlexDaniel> right

[14:44] <AlexDaniel> m: my @a = 1,2,3,4,5; .say for @a[0..*]

[14:44] <camelia> rakudo-moar e5ecdc438: OUTPUT: «1␤2␤3␤4␤5␤»

[14:44] <AlexDaniel> m: my @a = 1,2,3,4,5; .say for @a[-5..*]

[14:44] <camelia> rakudo-moar e5ecdc438: ( no output )

[14:45] <AlexDaniel> m: my @a = 1,2,3,4,5; .say for @a[-Inf..*]

[14:45] <camelia> rakudo-moar e5ecdc438: OUTPUT: «Cannot convert -Inf to Int: ␤  in block <unit> at <tmp> line 1␤␤»

[14:45] <AlexDaniel> o_o

[14:45] <AlexDaniel> lizmat: can you take a look at this change, please? https://github.com/rakudo/rakudo/pull/1172

[14:45] <AlexDaniel> lizmat: it looks like something you'd normally fix :)

[14:46] <AlexDaniel> lizmat: the `pos.min ~~ -Inf` check is just wrong, I think, so we can't merge it as is

[15:06] <AlexDaniel> sourceable6: 5.5.round()

[15:06] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/e5ecdc4/src/core.c/Rational.pm6#L387

[15:07] <AlexDaniel> sourceable6: (-i).round()

[15:07] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/e5ecdc4/src/core.c/Complex.pm6#L228

[15:07] <AlexDaniel> sourceable6: (5e5).round()

[15:07] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/e5ecdc4/src/core.c/Real.pm6#L41

[15:10] <AlexDaniel> jnthn: I don't have the courage to shut down R#2826 altogether and tell them that it should be done in a module instead, but you might have better luck. If so then it's 1 ticket less :)

[15:10] <linkable6> R#2826 [open]: https://github.com/rakudo/rakudo/issues/2826 [math] Rounding behaviors

[15:15] *** sena_kun joined
[15:16] *** Altai-man_ left
[15:25] *** ufobat__ joined
[15:26] * AlexDaniel looks at whateverable

[15:26] <AlexDaniel> 250 open issues

[15:26] * AlexDaniel closes the tab

[15:30] *** ufobat_ left
[15:56] <AlexDaniel> 6c: Nil for ^10_000_000 + 1

[15:56] *** softmoth joined
[15:58] <committable6> AlexDaniel, https://gist.github.com/c12b3d30db026a777970d3585f2e2a79

[16:03] <AlexDaniel> 6c: Nil for ^10_000_000 + 1; say now - INIT now

[16:03] <AlexDaniel> 6c: Nil for ^10_000_000; say now - INIT now

[16:05] <committable6> AlexDaniel, https://gist.github.com/8f3b64d59221b249319df2b5b32672b7

[16:05] <committable6> AlexDaniel, https://gist.github.com/f359cfbc5bbabb4ee97afc21963453ce

[16:07] <AlexDaniel> 6c: my $x; $x++ for ^10_000_000 + 1; say $x; say now - INIT now

[16:07] <AlexDaniel> 6c: my $x; $x++ for ^10_000_000; say $x; say now - INIT now

[16:11] <committable6> AlexDaniel, https://gist.github.com/61fd9fb1060883ab1400f5ba5f8fdc07

[16:11] <committable6> AlexDaniel, https://gist.github.com/beb90de373a1b07fcace353e83f928f0

[16:14] *** softmoth left
[17:14] *** Altai-man_ joined
[17:17] *** sena_kun left
[17:42] <Geth> ¦ roast: 7033b07bbb | (Christian Bartolomäus)++ | S04-statements/gather.t

[17:42] <Geth> ¦ roast: [JVM] Update reference for skipped test

[17:42] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/7033b07bbb

[18:13] <Geth> ¦ problem-solving: alabamenhu assigned to jnthn Issue Rounding issues https://github.com/Raku/problem-solving/issues/176

[18:23] *** softmoth joined
[18:54] <Kaiepi> uh

[18:54] <Kaiepi> so this line in Perl6::Actions marks variables for lexical usage by default https://github.com/rakudo/rakudo/blob/master/src/Perl6/Actions.nqp#L3897

[18:55] <Kaiepi> but none of Variable's traits set it to False, they set it to True instead

[18:55] <Kaiepi> it's supposed to be set to False here right?

[19:00] <timotimo> what kind of stuff is in late traits?

[19:01] <timotimo> https://github.com/rakudo/rakudo/commit/b41e9f5723babea64a4f7f10ad25bc2c28f5c1aa - did you look at this?

[19:01] <timotimo> that's where you got the "none set it to false"?

[19:04] <Kaiepi> yes

[19:04] <Kaiepi> it's still like that now

[19:07] <Kaiepi> there isn't any code elsewhere that touches that attribute either, according to git grep

[19:15] *** sena_kun joined
[19:16] *** Altai-man_ left
[19:31] *** wildtrees joined
[19:47] *** guifa2 joined
[20:09] <Xliff> Kaiepi: If the variable isn't initialized, it will be Falsy. Those are the only situations in which it is set to be true.

[20:10] <Xliff> Are you saying there's no where in the code where that attribute is even referenced/checked?

[20:11] *** softmoth left
[20:16] <timotimo> i think only written to

[20:16] <timotimo> the optimizer for sure reads it

[20:28] <Xliff> Then you'd only need to write a true. There would be no need to ever set it false.

[20:28] <Xliff> It's not like it's a flag or a sentinel.

[20:28] <Xliff> Right?

[20:29] <timotimo> well, that isn't the only place where traits can be called from

[20:30] <timotimo> this could be about meta-programming situations?

[21:02] *** Xliff left
[21:14] *** Altai-man_ joined
[21:16] *** sena_kun left
[22:03] *** pmurias left
[22:11] *** guifa2 left
[22:37] *** Altai-man_ left
[22:39] <Kaiepi> xliff, i was thinking that what's happening is Perl6::Actions sets this to True -> some traits reassign this to true -> lexical_used_implicitly gets annotated for *all* variables, not just those that get used implicitly by blocks in the `will` traits

[22:39] <Kaiepi> so the optimizer might never be lowering any variables

[22:41] <Kaiepi> i'll check if that's actually the case or not though,gimme a sec

[22:46] <Kaiepi> yeah, when it's set to False using `will check { ... }` will still lower the variable, but not when it's set to True

[22:54] *** lichtkind left
[23:45] *** guifa2 joined
