[00:14] *** melezhik2 joined
[00:22] *** melezhik2 left
[00:24] *** melezhik left
[01:24] *** evalable6 left
[01:24] *** linkable6 left
[01:26] *** linkable6 joined
[01:27] *** evalable6 joined
[01:34] *** lucasb left
[03:09] *** raku-bridge left
[03:09] *** raku-bridge joined
[04:33] *** evalable6 left
[04:33] *** coverable6 left
[04:33] *** linkable6 left
[04:33] *** tellable6 left
[04:33] *** unicodable6 left
[04:33] *** bloatable6 left
[04:33] *** quotable6 left
[04:33] *** squashable6 left
[04:33] *** bisectable6 left
[04:33] *** shareable6 left
[04:33] *** notable6 left
[04:33] *** committable6 left
[04:33] *** releasable6 left
[04:33] *** nativecallable6 left
[04:33] *** greppable6 left
[04:33] *** sourceable6 left
[04:33] *** benchable6 left
[04:33] *** statisfiable6 left
[04:34] *** bloatable6 joined
[04:34] *** releasable6 joined
[04:34] *** linkable6 joined
[04:35] *** tellable6 joined
[04:35] *** notable6 joined
[04:35] *** statisfiable6 joined
[04:35] *** shareable6 joined
[04:35] *** evalable6 joined
[04:35] *** coverable6 joined
[04:35] *** quotable6 joined
[04:36] *** committable6 joined
[04:36] *** sourceable6 joined
[04:36] *** nativecallable6 joined
[04:36] *** bisectable6 joined
[04:36] *** greppable6 joined
[04:36] *** benchable6 joined
[04:37] *** unicodable6 joined
[04:37] *** squashable6 joined
[05:27] *** frost-lab joined
[08:44] <AlexDaniel`> c: sprintf "ux%04x = '%c'\n", $_, $_ for 0x2500 .. 0x25ff; printf "ux%04x = '%c'\n", $_, $_ for 0x2500 .. 0x25ff

[08:44] <committable6> AlexDaniel`, ¦sprintf: «Cannot find this revision (did you mean “Berlin”?)»

[08:45] <AlexDaniel`>  * 6c: sprintf "ux%04x = '%c'\n", $_, $_ for 0x2500 .. 0x25ff; printf "ux%04x = '%c'\n", $_, $_ for 0x2500 .. 0x25ff

[08:45] <AlexDaniel`> uh

[08:45] <AlexDaniel`> 6c: sprintf "ux%04x = '%c'\n", $, $ for 0x2500 .. 0x25ff; printf "ux%04x = '%c'\n", $, $ for 0x2500 .. 0x25ff

[08:45] <committable6> AlexDaniel`, https://gist.github.com/b071d27f42552ee45de7d1df84c552bc

[08:48] <AlexDaniel`> uh, so apparently only in the REPL

[09:04] <AlexDaniel`> 6c: sprintf "ux%04x = '%c'\n", $_, $_ for 0x2500 .. 0x25ff; sprintf "ux%04x = '%c'\n", $_, $_ for 0x2500 .. 0x25ff

[09:04] <committable6> AlexDaniel`, ¦6c (49 commits): «»

[09:35] *** sena_kun joined
[09:49] <lizmat> Files=1345, Tests=117140, 232 wallclock secs (30.29 usr  8.92 sys + 3204.67 cusr 308.04 csys = 3551.92 CPU)

[10:59] *** patrickb joined
[11:01] *** stoned75 joined
[11:03] <Geth_> ¦ rakudo: stoned++ created pull request #4055: Fix typo

[11:03] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4055

[11:06] <stoned75> hi. I was working on adding documentation for env var {RAKU,PERL6}_TEST_TIMES when I found the typo for wich I made the preceding PR

[11:07] <stoned75> Now I'm wondering if the typo should be documented, as it had been out there for more than 6 months :-}

[11:11] <Geth_> ¦ rakudo: d84ed4e946 | (Stoned Elipot)++ | lib/Test.rakumod

[11:11] <Geth_> ¦ rakudo: Fix typo

[11:11] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d84ed4e946

[11:11] <Geth_> ¦ rakudo: 551b679579 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | lib/Test.rakumod

[11:11] <Geth_> ¦ rakudo: Merge pull request #4055 from stoned/test-times-typo

[11:11] <Geth_> ¦ rakudo: 

[11:11] <Geth_> ¦ rakudo: Fix typo

[11:11] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/551b679579

[11:26] <Geth_> ¦ rakudo: 15ec4fe672 | (Elizabeth Mattijsen)++ | t/packages/Test/Helpers.pm6

[11:26] <Geth_> ¦ rakudo: Move "is test-assertion" to candidates

[11:26] <Geth_> ¦ rakudo: 

[11:26] <Geth_> ¦ rakudo: Apparently, it is not being seen if it just lives on the proto,

[11:26] <Geth_> ¦ rakudo: probably because the proto is not seen in callframe walking?

[11:26] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/15ec4fe672

[11:51] <Geth_> ¦ roast: 58b3ad5f16 | (Elizabeth Mattijsen)++ | packages/Test-Helpers/lib/Test/Util.pm6

[11:51] <Geth_> ¦ roast: Move "is test-assertion" from proto to candidates

[11:51] <Geth_> ¦ roast: 

[11:51] <Geth_> ¦ roast: Apparently, the protos are not seen in a callframe walk,

[11:51] <Geth_> ¦ roast: and this causes the "is test-assertion" marker to be missed.

[11:51] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/58b3ad5f16

[12:10] *** Altai-man joined
[12:12] *** sena_kun left
[12:22] <lizmat> stoned75: feels to me the lack of documentation inhibited the widespread adoption of that feature  :-)

[12:22] <lizmat> so no need to document the typo

[12:27] <stoned75> ok understood

[12:27] <stoned75>  

[12:31] <stoned75> I suppose the test timing feature predates 6c, because since 6c a native num var has a NaN default value, thus a timed test with no plan results in an 't=NaN' output

[12:32] <stoned75> try something like env RAKU_TEST_TIMES=1 raku -e 'use Test; pass 1;'

[12:32] <stoned75> vs env RAKU_TEST_TIMES=1 raku -e 'use Test; plan 1; pass 1;'

[12:33] <lizmat> FWIW, at several occassions I was very close to ripping that feature out

[12:33] <lizmat> *occasions 

[12:33] <stoned75> eh :)

[12:33] <lizmat> I'm not sure what it is for, really, or if anybody is using it

[12:42] <patrickb> ping tyil

[12:42] <tyil> pong

[12:43] <patrickb> I want to extend our binary release filenames with the toolchain used (msvc, gcc, clang)

[12:43] <patrickb> so rakudo-moar-2019.11.02-01-linux-x86_64.tar.gz -> rakudo-moar-2019.11.02-01-linux-x86_64-gcc.tar.gz

[12:43] <patrickb> That would also affect the star builds.

[12:44] <tyil> yes, but that should be easily adaptable on my end

[12:44] <patrickb> So you are not against it?

[12:45] <tyil> it should be fine, so go ahead :>

[12:45] <patrickb> I'm in progress of adapting rakudo.org respectively. Plan is to write a small script, that bulk renames all existing releases accordingly.

[12:45] <lizmat> patrickb++ tyil++

[12:45] <tyil> the existing rakudo stars come bundled, so they shouldn't be affected

[12:45] <patrickb> (I'm unsure about the bulk rename though. Has potential for breaking things for users that somehow rely on the old archive names).

[12:45] <tyil> if moarvm 2020.12 has it, I have a full month to update it in rakudo star

[12:46] <tyil> I would suggest against renaming existing tars for that reason, yes

[12:46] <tyil> but it shouldn't affect r* itself

[12:46] <patrickb> tyil: What compilers do you use for the respective platforms?

[12:47] <tyil> I believe its using gcc in all circumstances right now (since I haven't incorporated mac/win builds)

[12:48] <patrickb> the monthly prebuilt releases use: win-msvc, mac-clang, linux-gcc

[12:55] <[Tux]> Rakudo v2020.11-24-g15ec4fe67 (v6.d) on MoarVM 2020.11-1-gca5d19d21

[12:55] <[Tux]> csv-test-xs-20      0.384 -  0.385

[12:55] <[Tux]> csv-ip5xs           0.813 -  0.867

[12:55] <[Tux]> test-t --race       0.853 -  0.867

[12:55] <[Tux]> test-t              1.934 -  1.972

[12:55] <[Tux]> csv-ip5xs-20        7.751 -  7.918

[12:55] <[Tux]> test                7.548 -  7.865

[12:55] <[Tux]> test-t-20 --race    9.622 - 10.087

[12:55] <[Tux]> csv-parser         25.484 - 26.315

[12:55] <[Tux]> test-t-20          32.879 - 33.138

[13:12] *** patrickb left
[13:13] *** frost-lab left
[13:18] <tyil> vrurg: is the RSC meeting next Sunday still going to be using zoom?

[13:21] <Altai-man> releasable6, status

[13:21] <releasable6> Altai-man, Next release in ≈27 days and ≈5 hours. 1 blocker. Changelog for this release was not started yet

[13:21] <releasable6> Altai-man, Details: https://gist.github.com/ebb6fd1bf3c8923e895b9490851b5c5c

[13:30] <lizmat> afk for a few hours&

[14:43] *** domidumont joined
[15:27] *** MasterDuke left
[15:29] *** MasterDuke joined
[15:48] <Geth_> ¦ rakudo: 7c0a81f501 | (Elizabeth Mattijsen)++ | 2 files

[15:48] <Geth_> ¦ rakudo: Make the REPL a little bit smarter

[15:48] <Geth_> ¦ rakudo: 

[15:48] <Geth_> ¦ rakudo: Basically, any line that does *not* create any direct output to

[15:48] <Geth_> ¦ rakudo: STDOUT, becomes part of the code that will be executed whenever

[15:48] <Geth_> ¦ rakudo: the next line is input.  This is a behaviour similar to what is

[15:48] <Geth_> ¦ rakudo: done when a line is deemed incomplete.  The only difference is,

[15:48] <Geth_> ¦ rakudo: is that this new behaviour will not be visible because of a prompt

[15:48] <Geth_> ¦ rakudo: <…commit message has 9 more lines…>

[15:48] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7c0a81f501

[15:52] <MasterDuke> vrurg, timotimo: another example of a performance regression from thundergnat over in #raku. a rough comparison of profiles looks like inlining and scalar replacement. on 2010.10 both were 99%, on HEAD it was 60% and 44%

[15:53] <MasterDuke> also, only one gc on 2020.10 but 300+ on HEAD. and essentially 100% jitted on 2020.10, but only 60% on HEAD

[15:54] <MasterDuke> lizmat++

[16:03] <Altai-man> lizmat++ # just simply awesome

[16:08] <Altai-man> MasterDuke, was commit bisected?

[16:08] <MasterDuke> no(t yet)

[16:12] *** sena_kun joined
[16:13] *** Altai-man left
[16:23] <MasterDuke> sena_kun, vrurg: bisects to the same as dogbert17's example, 1f090e04dcd4ed

[16:23] <linkable6> (2020-11-15) https://github.com/rakudo/rakudo/commit/1f090e04dc Merge pull request #3891 from vrurg/raku_1285

[16:24] <sena_kun> That's something I suspected. :|

[16:45] *** MasterDuke left
[17:12] <Kaiepi> now that the release is made, any comments on https://github.com/Raku/problem-solving/issues/243 ?

[17:42] *** stoned75 left
[19:23] *** Altai-man joined
[19:24] *** TreyHarris left
[19:25] *** sena_kun left
[19:34] *** domidumont left
[19:50] *** MasterDuke joined
[19:53] *** raku-bridge left
[19:53] *** raku-bridge joined
[19:53] *** raku-bridge left
[19:53] *** raku-bridge joined
[20:07] *** patrickb joined
[20:11] *** sena_kun joined
[20:13] *** Altai-man left
[20:22] *** camelia left
[20:25] *** camelia joined
[20:27] *** jdv79 left
[20:28] *** jdv79 joined
[20:42] <patrickb> I do not have access to the rakudo.org repository anymore (access got lost during the Perl6 -> rakudo move I guess).

[20:43] <patrickb> Can someone either give me access again or merge the two open PRs? Please. :-)

[20:45] <vrurg> patrickb: 54 and 55?

[20:45] <vrurg> Ah, same problem. I neither have access now.

[20:47] <patrickb> Whoever does have access: Can you please add vrurg back again as well?

[21:09] *** sena_kun left
[21:12] *** patrickb left
[21:17] <lizmat> lemme see what I can do

[21:19] <lizmat> vrurg patrickb should have access now

[21:20] <vrurg> lizmat: thanks!

[21:20] <lizmat> merged the PRs as well

[22:47] *** morayj joined
[22:49] *** morayj left
[23:07] *** leont joined
[23:26] <Geth_> ¦ rakudo: f2f2cf8246 | (Elizabeth Mattijsen)++ | 44 files

[23:26] <Geth_> ¦ rakudo: Remove all easily removable nqp::stmts

[23:26] <Geth_> ¦ rakudo: 

[23:26] <Geth_> ¦ rakudo: Basically, whenever an nqp::stmts aligned with an outer scope, and

[23:26] <Geth_> ¦ rakudo: it was already laid out in a familiar way (to me at least).  Another

[23:26] <Geth_> ¦ rakudo: step toward de-nqpifying the core setting.

[23:26] <Geth_> ¦ rakudo: 

[23:26] <Geth_> ¦ rakudo: Should not have any semantic changes, nor noticeable performance

[23:26] <Geth_> ¦ rakudo: effects.  Should allow for better error reporting (because an execution

[23:26] <Geth_> ¦ rakudo: error inside an nqp::stmts is reported at the start of the nqp::stmts,

[23:26] <Geth_> ¦ rakudo: which can be a long way off from the actual location of the error).

[23:26] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f2f2cf8246

[23:33] <lizmat> and that concludes my hacking for today&  

[23:49] *** leont left
