[01:24] *** rypervenche left
[01:32] *** rypervenche joined
[02:18] *** Xliff joined
[03:27] *** vrurg left
[03:33] *** vrurg joined
[04:33] *** evalable6 left
[04:36] *** evalable6 joined
[06:19] *** sena_kun joined
[07:38] *** frost-lab joined
[07:41] *** patrickb joined
[07:47] *** zostay left
[07:48] *** zostay joined
[07:56] *** Altai-man joined
[07:59] *** sena_kun left
[08:21] <AlexDaniel`> Altai-man: OK, let's do it this way. I have some deadlines at wörk in February so can't think much about anything else right now. I'll come after that, say March, write the dockerfiles and make it a no-brainer to set up

[08:30] <Altai-man> AlexDaniel`, this will do, absolutely. I can paypal your server cost for these months to make it a bit nicer (just PM me). Good luck with your deadline.

[09:54] <AlexDaniel`> thank you, but no need. I'd be paying for that server regardless of whether whateverable exists :)

[09:56] <AlexDaniel`> I just hope that I do actually get some time for it after/during February

[09:57] *** domidumont joined
[11:42] <Geth> ¦ rakudo: nwc10++ created pull request #4143: Add "Solaris" to $?Perl.KERNELnames

[11:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4143

[11:57] *** sena_kun joined
[11:59] *** Altai-man left
[12:00] <Geth> ¦ roast/five-twelve: fa84309553 | (Nicholas Clark)++ | fudgeall

[12:00] <Geth> ¦ roast/five-twelve: Import `bsd_glob` from File::Glob, not the tag `:bsd_glob`.

[12:00] <Geth> ¦ roast/five-twelve: 

[12:00] <Geth> ¦ roast/five-twelve: The latter is only available in Perl v5.16 (and later), and is a compile

[12:00] <Geth> ¦ roast/five-twelve: time failure on earlier Perls. However, we don't *need* the tag - its

[12:00] <Geth> ¦ roast/five-twelve: purpose is to *override* CORE::glob with `bsd_glob`. As we make a direct

[12:00] <Geth> ¦ roast/five-twelve: call to `bsd_glob` we only need to import *that*, which works all the way

[12:00] <Geth> ¦ roast/five-twelve: back to v5.6.0 or so.

[12:00] <Geth> ¦ roast/five-twelve: 

[12:00] <Geth> ¦ roast/five-twelve: With this change fudgeall works with system Perl on Solaris 5.11, which is

[12:00] <Geth> ¦ roast/five-twelve: v5.12.5.

[12:00] <Geth> ¦ roast/five-twelve: review: https://github.com/Raku/roast/commit/fa84309553

[12:00] <Geth> ¦ roast: nwc10++ created pull request #710: Import `bsd_glob` from File::Glob, not the tag `:bsd_glob`.

[12:00] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/710

[12:33] <Geth> ¦ roast: fa84309553 | (Nicholas Clark)++ | fudgeall

[12:33] <Geth> ¦ roast: Import `bsd_glob` from File::Glob, not the tag `:bsd_glob`.

[12:33] <Geth> ¦ roast: 

[12:33] <Geth> ¦ roast: The latter is only available in Perl v5.16 (and later), and is a compile

[12:33] <Geth> ¦ roast: time failure on earlier Perls. However, we don't *need* the tag - its

[12:33] <Geth> ¦ roast: purpose is to *override* CORE::glob with `bsd_glob`. As we make a direct

[12:33] <Geth> ¦ roast: call to `bsd_glob` we only need to import *that*, which works all the way

[12:33] <Geth> ¦ roast: back to v5.6.0 or so.

[12:33] <Geth> ¦ roast: 

[12:33] <Geth> ¦ roast: With this change fudgeall works with system Perl on Solaris 5.11, which is

[12:33] <Geth> ¦ roast: v5.12.5.

[12:33] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/fa84309553

[12:33] <Geth> ¦ roast: 981c8c1ad4 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | fudgeall

[12:33] <Geth> ¦ roast: Merge pull request #710 from Raku/five-twelve

[12:33] <Geth> ¦ roast: 

[12:33] <Geth> ¦ roast: Import `bsd_glob` from File::Glob, not the tag `:bsd_glob`.

[12:33] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/981c8c1ad4

[12:34] <Geth> ¦ rakudo: f918f0fd94 | (Nicholas Clark)++ | src/core.c/Raku.pm6

[12:34] <Geth> ¦ rakudo: Add "Solaris" to $?Perl.KERNELnames

[12:34] <Geth> ¦ rakudo: 

[12:34] <Geth> ¦ rakudo: Technically "Solaris 2", as SunOS 4 was retconned to "Solaris 1", but

[12:34] <Geth> ¦ rakudo: that's all froth in the Marketing Layer, as the Engineering Layer still

[12:34] <Geth> ¦ rakudo: reports "SunOS 5.x". eg

[12:34] <Geth> ¦ rakudo: 

[12:34] <Geth> ¦ rakudo:     $ uname -sr

[12:34] <Geth> ¦ rakudo:     SunOS 5.11

[12:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f918f0fd94

[12:34] <Geth> ¦ rakudo: 94d685d95d | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/Raku.pm6

[12:34] <Geth> ¦ rakudo: Merge pull request #4143 from nwc10/solaris

[12:34] <Geth> ¦ rakudo: 

[12:34] <Geth> ¦ rakudo: Add "Solaris" to $?Perl.KERNELnames

[12:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/94d685d95d

[12:46] <nwc10> Strange. This sometimes seems to fail:

[12:46] <nwc10> This type (Supplier::Preserving) does not support elems in sub is-run at /home/nick/Perl/rakudo/t/packages/Test/Helpers.pm6 (Test::Helpers) line 35 in block <unit> at t/05-messages/03-errors.t line 53

[12:48] *** frost-lab left
[13:09] *** leont joined
[14:13] <dogbert17> m: say ("a".."z")[(3, (4, (5,)))]

[14:13] <camelia> rakudo-moar 94d685d95: OUTPUT: «(d (e (f)))␤»

[14:14] <dogbert17> lizmat: is the above supposed to work on your faster-slice-access branch?

[14:21] <timotimo> committable6: faster-slice-access

[14:21] <committable6> timotimo, I cannot recognize this command. See wiki for some examples: https://github.com/Raku/whateverable/wiki/Committable

[14:21] <timotimo> committable6: faster-slice-access say ("a".."z")[(3, (4, (5,)))]

[14:21] <committable6> timotimo, ¦faster-slice-access: «MVMArray: Slice index out of bounds␤  in block <unit> at /tmp/oBh92CiHeC line 1␤␤ «exit code = 1»»

[14:24] <dogbert17> cool

[14:37] *** Xliff left
[14:44] <lizmat> dogbert17: could you add a test for that ?

[15:21] <[Tux]> Rakudo v2020.12-21-g94d685d95 (v6.d) on MoarVM 2020.12-9-gb8663f53a

[15:21] <[Tux]> csv-test-xs-20      0.380 -  0.381

[15:21] <[Tux]> csv-ip5xs           0.799 -  0.839

[15:21] <[Tux]> test-t --race       0.908 -  0.946

[15:21] <[Tux]> test-t              1.884 -  1.884

[15:21] <[Tux]> test                7.551 -  8.178

[15:21] <[Tux]> csv-ip5xs-20        8.173 -  8.199

[15:21] <[Tux]> test-t-20 --race    9.476 -  9.723

[15:21] <[Tux]> csv-parser         24.631 - 25.479

[15:21] <[Tux]> test-t-20          30.977 - 31.939

[15:37] <dogbert17> lizmat: sure, in which file do you want it?

[15:38] <lizmat> I have no preference  :-)

[15:47] <dogbert17> ok, will fix

[15:51] *** patrickb left
[15:51] <lizmat> dogbert17++

[15:56] *** Altai-man joined
[15:59] *** sena_kun left
[16:06] <Geth> ¦ roast: dogbert17++ created pull request #711: Add test from https://github.com/Raku/old-issue-tracker/issues/6233

[16:06] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/711

[16:06] <dogbert17> lizmat: ^^

[16:08] <lizmat> thanks!

[16:35] <nine> [6~[6~[6~/win 1

[16:38] <nwc10> That won't get you an entry in the accidental win lottery

[16:39] <nine> ah, too bad

[16:40] <nine> But then I've had an awesome day so far, so I won't complain

[16:42] <nine> I'm on a train back from Salzburg where I spent most of the day snowboarding. Full lockdown can be so nice

[16:46] <nwc10> all the foreign tourists are in Switzerland instead?

[16:46] <nwc10> (or doing a a runner to avoid lockdown, as unlike Tyrol no-one was kind enough to warn them in advance to flee?)

[16:46] <MasterDuke> i'm so very jealous

[16:47] <MasterDuke> probably won't get to go at all this year

[16:51] <nine> It was almost all locals today. Could be that I'm even the one who travelled farthest

[16:56] <MasterDuke> we had maybe a half-step above flurries this morning that quickly turned into rain. 3.5 year old wanted to go skiing

[17:00] * nine can understand

[17:10] *** jmerelo joined
[17:10] <Geth> ¦ rakudo/faster-slice-access: 25 commits pushed by (Vadim Belman)++, (Elizabeth Mattijsen)++

[17:10] <Geth> ¦ rakudo/faster-slice-access: review: https://github.com/rakudo/rakudo/compare/da7d256a9662...525918860bf5

[17:22] <lizmat> notable6:weekly

[17:22] <notable6> lizmat, No notes for “weekly”

[17:41] <nwc10> lizmat: um, should we merge the MoarVM support for Solaris to create more content? :-)

[17:42] <lizmat> nah...  we can leave that for the next one  :-)

[17:42] <nwc10> that actually seems more sensible

[17:42] <lizmat> and we would have to explain what Solaris actually is / was 

[17:42] <nwc10> a novel by Stanislav Lem (IIRC) ;-)

[17:43] <lizmat> with at least 2 movie adaptations, IIRC

[17:48] <Altai-man> The one by Tarkovsky has little to do with the novel, though.

[18:50] *** lucasb joined
[18:56] <lizmat> and the last Rakudo Weekly News of 2020 hits the Net: https://rakudoweekly.blog/2020/12/28/2020-52-rererevolution/

[19:07] <Altai-man> lizmat++

[19:31] *** domidumont left
[19:52] *** jmerelo left
[19:57] *** sena_kun joined
[19:59] *** Altai-man left
[19:59] *** b2gills left
[20:02] *** b2gills joined
[20:39] *** patrickb joined
[20:48] *** sena_kun left
[22:32] *** patrickb left
[23:20] <Geth> ¦ rakudo/faster-slice-access: 3b99df842f | (Elizabeth Mattijsen)++ | 2 files

[23:20] <Geth> ¦ rakudo/faster-slice-access: Micro-optimize Callable.POSITIONS

[23:20] <Geth> ¦ rakudo/faster-slice-access: 

[23:20] <Geth> ¦ rakudo/faster-slice-access: This optimization only applies for the case of %h<a>[*-0] when the

[23:20] <Geth> ¦ rakudo/faster-slice-access: %h<a> key has not been assigned yet.  In that case, the signature

[23:20] <Geth> ¦ rakudo/faster-slice-access: of the Callable does not need to be introspected and checked.

[23:20] <Geth> ¦ rakudo/faster-slice-access: review: https://github.com/rakudo/rakudo/commit/3b99df842f

[23:20] <Geth> ¦ rakudo/faster-slice-access: 600f83337c | (Elizabeth Mattijsen)++ | 2 files

[23:20] <Geth> ¦ rakudo/faster-slice-access: Micro-optimize Callable.POSITIONS

[23:20] <Geth> ¦ rakudo/faster-slice-access: 

[23:20] <Geth> ¦ rakudo/faster-slice-access: This optimization only applies for the case of %h<a>[*-0] when the

[23:20] <Geth> ¦ rakudo/faster-slice-access: %h<a> key has not been assigned yet.  In that case, the signature

[23:20] <Geth> ¦ rakudo/faster-slice-access: of the Callable does not need to be introspected and checked.

[23:20] <Geth> ¦ rakudo/faster-slice-access: review: https://github.com/rakudo/rakudo/commit/600f83337c

[23:20] <Geth> ¦ rakudo/faster-slice-access: cf7e50a635 | (Elizabeth Mattijsen)++ | src/core.c/array_slice.pm6

[23:20] <Geth> ¦ rakudo/faster-slice-access: Short-circuit @a[*-1] and @a[*-1] = foo a bit

[23:20] <Geth> ¦ rakudo/faster-slice-access: 

[23:20] <Geth> ¦ rakudo/faster-slice-access: By directly dispatching on the common case: that an Int was returned

[23:20] <Geth> ¦ rakudo/faster-slice-access: instead of re-dispatching unless a Failure was returned by POSITIONS.

[23:20] <Geth> ¦ rakudo/faster-slice-access: review: https://github.com/rakudo/rakudo/commit/cf7e50a635

