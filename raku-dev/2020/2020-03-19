[00:10] *** Kaiepi left
[00:10] *** Kaiepi joined
[01:08] *** MasterDuke left
[01:20] *** sena_kun left
[01:34] *** sena_kun joined
[01:37] *** [Coke]_ joined
[01:38] *** [Coke]_ left
[01:38] *** [Coke]_ joined
[01:53] *** [Coke]_ is now known as [Coke]

[01:55] *** AlexDani` is now known as AlexDaniel

[01:55] *** AlexDaniel left
[01:55] *** AlexDaniel joined
[03:21] *** sena_kun left
[03:36] *** sena_kun joined
[05:21] *** sena_kun left
[05:36] *** sena_kun joined
[06:58] <Geth> Â¦ nqp: a5619aa1a0 | (Christian BartolomÃ¤us)++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/Ops.java

[06:58] <Geth> Â¦ nqp: [JVM] Return VMNull from context introspection ops

[06:58] <Geth> Â¦ nqp: 

[06:58] <Geth> Â¦ nqp: This avoids explosions in S02-names/pseudo-6e.t (on the JVM backend)

[06:58] <Geth> Â¦ nqp: that seem to be related to the code in 'method ctx()' in

[06:58] <Geth> Â¦ nqp: src/core.e/PseudoStash.pm6. (Compare comments in the closed PR

[06:58] <Geth> Â¦ nqp: https://github.com/rakudo/rakudo/pull/3130.)

[06:58] <Geth> Â¦ nqp: review: https://github.com/perl6/nqp/commit/a5619aa1a0

[07:20] *** sena_kun left
[07:36] *** sena_kun joined
[08:04] *** MasterDuke joined
[08:09] *** SmokeMachine joined
[08:47] <nine> bartolin_: looks like the VMNull object unlocked quite a few fixes on JVM :)

[08:49] <nine> bartolin_: I got the chance to talk to jnthn a bit in Erlangen. Looks like in the long term we'll want to move large parts of spesh up into NQP. This would make it realistic for JVM to get spesh support, too.

[08:50] <nine> bartolin_: the part that will still have to be handled will probably be the collecting of stats which sounds possible to get into the JVM implementation as well.

[08:50] <nine> Same is obviously true for the JS backend

[08:54] *** sena_kun left
[09:05] *** sena_kun joined
[09:06] *** Kaiepi left
[09:08] *** Kaiepi joined
[09:13] *** sena_kun left
[09:14] *** sena_kun joined
[09:20] *** sena_kun left
[09:27] <[Tux]> Rakudo version 2020.02.1-205-g78371bb0c - MoarVM version 2020.02.1-47-g3c3ad0678

[09:27] <[Tux]> csv-test-xs-20      0.373 -  0.380

[09:27] <[Tux]> csv-ip5xs           0.708 -  0.711

[09:27] <[Tux]> test-t --race       0.805 -  1.004

[09:27] <[Tux]> test-t              2.014 -  2.099

[09:27] <[Tux]> csv-ip5xs-20        6.305 -  6.318

[09:28] <[Tux]> test                7.651 -  7.862

[09:28] <[Tux]> test-t-20 --race    9.639 - 10.115

[09:28] <[Tux]> csv-parser         25.664 - 26.256

[09:28] <[Tux]> test-t-20          33.119 - 33.486

[09:34] *** sena_kun joined
[09:38] <lizmat> Files=1305, Tests=111216, 206 wallclock secs (28.25 usr  8.25 sys + 2894.68 cusr 271.49 csys = 3202.67 CPU)

[10:05] *** MasterDuke left
[10:11] *** MasterDuke joined
[10:11] *** [Tux] left
[10:21] *** [Tux] joined
[10:33] *** Ven`` joined
[10:43] *** sena_kun left
[10:50] <Geth> Â¦ rakudo: ea4bdf947a | (Elizabeth Mattijsen)++ | 4 files

[10:50] <Geth> Â¦ rakudo: Move R:I:CHECKSUM back to IO::Path

[10:50] <Geth> Â¦ rakudo: 

[10:50] <Geth> Â¦ rakudo: But mark it as an implementation-detail, so that we're clear on its

[10:50] <Geth> Â¦ rakudo: status.

[10:50] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ea4bdf947a

[13:37] <AlexDaniel> weekly: perl6â†’raku progress: #perl6-dev now also redirects to #raku-dev (finally! #perl6â†’#raku redirection was set in place months ago)

[13:37] <notable6> AlexDaniel, Noted! (weekly)

[14:01] <Geth> Â¦ roast: AlexDaniel unassigned from mryan Issue Investigate absence of tests for :dba adverb https://github.com/Raku/roast/issues/238

[14:01] <Geth> Â¦ nqp: AlexDaniel unassigned from pmichaud Issue Do we need both cclass 'n' and 'nl'? https://github.com/Raku/nqp/issues/82

[14:01] <Geth> Â¦ nqp: AlexDaniel unassigned from pmichaud Issue Make JSON parsing faster https://github.com/Raku/nqp/issues/101

[14:01] <Geth> Â¦ nqp: AlexDaniel unassigned from pmurias Issue Flagged as vulnerable https://github.com/Raku/nqp/issues/437

[14:01] <Geth> Â¦ nqp: AlexDaniel unassigned from pmurias Issue If `token ws` defined by user, we should treat it as declarative https://github.com/Raku/nqp/issues/443

[14:06] <AlexDaniel> weekly: perl6â†’raku progress: nqp, nqp-configure and roast repos were moved: https://github.com/Raku/nqp https://github.com/Raku/nqp-configure https://github.com/Raku/roast

[14:06] <notable6> AlexDaniel, Noted! (weekly)

[14:11] <AlexDaniel> weekly: redirects are in place so there doesn't seem to be a need to do anything, but please change links where possible

[14:11] <notable6> AlexDaniel, Noted! (weekly)

[14:17] <MasterDuke> hm, i don't have permission to push to Raku/nqp?

[14:21] <MasterDuke> AlexDaniel: ping

[14:21] <AlexDaniel> pong

[14:22] <MasterDuke> do i need to do something to get permission to Raku/nqp?

[14:22] <AlexDaniel> https://imgur.com/a/RMuHX7i

[14:22] <AlexDaniel> #softwaregore

[14:23] <Geth> Â¦ nqp: 9266fb5378 | (Daniel Green)++ | src/NQP/Optimizer.nqp

[14:23] <Geth> Â¦ nqp: Set return type of intifying a list or hash

[14:23] <Geth> Â¦ nqp: 

[14:23] <Geth> Â¦ nqp: This optimization was missed when changing the default NQP behavior from

[14:23] <Geth> Â¦ nqp: numifying things to intifying them.

[14:23] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/9266fb5378

[14:25] <MasterDuke> did you do something? or did it just take a little while for permissions/accesses to sync? because ^^^ was another attempt at a push, not a delayed notification of the first

[14:25] <AlexDaniel> no, I did something

[14:25] <AlexDaniel> we should review the permissions at some point

[14:25] <AlexDaniel> currently it defaults to `Read` for everyone which is probably a good default, but then for every repo we have to explicitly give Write to Raku team

[14:26] <AlexDaniel> but that's probably a bit too permissive, I'm not sure

[14:26] <AlexDaniel> not worse than not being able to contribute because you don't have the rights, so it's still good

[14:29] *** sena_kun joined
[14:29] *** sena_kun left
[14:29] *** sena_kun joined
[14:35] *** lucasb joined
[14:40] *** travis-ci joined
[14:40] <travis-ci> NQP build passed. Daniel Green 'Set return type of intifying a list or hash

[14:40] <travis-ci> https://travis-ci.com/Raku/nqp/builds/154097749 https://github.com/Raku/nqp/compare/a5619aa1a028...9266fb537852

[14:40] *** travis-ci left
[15:02] *** Ven`` left
[15:06] <Geth> Â¦ rakudo: 9429728cbd | (Elizabeth Mattijsen)++ | 11 files

[15:06] <Geth> Â¦ rakudo: Remove unnecessary implementation detail

[15:06] <Geth> Â¦ rakudo: 

[15:06] <Geth> Â¦ rakudo: &SLICE_HUH somehow lived in the SETTING:: but didn't need to.

[15:06] <Geth> Â¦ rakudo: Move it to Rakudo::Internals and adapt the code and the keys

[15:06] <Geth> Â¦ rakudo: tests accordingly.

[15:06] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9429728cbd

[15:11] *** sena_kun left
[15:12] *** sena_kun joined
[15:18] *** AlexDani` joined
[15:18] *** AlexDaniel left
[15:21] *** sena_kun left
[15:23] *** AlexDani` left
[15:24] *** AlexDani` joined
[15:31] *** AlexDani` is now known as AlexDaniel

[15:31] *** AlexDaniel left
[15:31] *** AlexDaniel joined
[15:37] <Geth> Â¦ nqp: 019e162fad | (Daniel Green)++ | src/NQP/Optimizer.nqp

[15:37] <Geth> Â¦ nqp: When we're (int|num)ifying a list or hash...

[15:37] <Geth> Â¦ nqp: 

[15:37] <Geth> Â¦ nqp: re-write into an nqp::elems(). Spesh can do this too, but if we can do

[15:37] <Geth> Â¦ nqp: it earlier, why not do so.

[15:37] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/019e162fad

[15:38] <MasterDuke> jnthn: ^^^ anyway to know if the QAST::Var is actually a list or hash if the sigil is '$'?

[15:40] *** Ven`` joined
[15:45] <jnthn> Implement a type inferencer? :)

[15:45] <MasterDuke> i've got a spare 5-10 min, sure, why not

[15:46] *** sena_kun joined
[15:47] <MasterDuke> and if it turns out to take longer than that, instead i guess i'll change all the +$ in nqp to nqp::elems (where appropriate)

[15:49] <MasterDuke> jnthn: oh, and why isn't it safe to unconditionally set the return type of (int|num)ify to int|num? i.e., why is that only done in the case of lists and hashes?

[15:52] <jnthn> MasterDuke: Not sure, maybe it is?

[15:53] <MasterDuke> heh, i'll run a spectest and see what happens

[16:15] <Geth> Â¦ nqp: bb00e60e67 | (Daniel Green)++ | src/NQP/Optimizer.nqp

[16:15] <Geth> Â¦ nqp: Some Optimizer changes

[16:15] <Geth> Â¦ nqp: 

[16:15] <Geth> Â¦ nqp: Move all the op type annotation enrichments together.

[16:15] <Geth> Â¦ nqp: 

[16:15] <Geth> Â¦ nqp: Set num annotation for '_n' ops even if they're not a num_to_int

[16:15] <Geth> Â¦ nqp: candidate.

[16:15] <Geth> Â¦ nqp: 

[16:15] <Geth> Â¦ nqp: <â€¦commit message has 5 more linesâ€¦>

[16:15] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/bb00e60e67

[16:34] *** travis-ci joined
[16:34] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Remove unnecessary implementation detail

[16:34] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/664433437 https://github.com/rakudo/rakudo/compare/ea4bdf947a78...9429728cbd89

[16:34] *** travis-ci left
[16:49] <lizmat> restarted failing job

[16:49] <tellable6> 2020-03-19T13:20:45Z #moarvm <brrt> lizmat what would be vrurg's last work

[17:06] <MasterDuke> jnthn: is there any benefit to using $ instead of @ for a list in nqp? e.g., https://github.com/Raku/nqp/blob/master/src/QRegex/NFA.nqp#L53

[17:10] <jnthn> Don't think so

[17:12] <MasterDuke> so unless there's a fix for spesh, would you prefer changing $'s to @'s (e.g., $!states to @!states) or changing +$ to nqp::elems()?

[17:16] <jnthn> Maybe the @ communicates better that it's an array

[17:17] <MasterDuke> that was my preference also

[17:19] *** Altai-man_ joined
[17:21] *** sena_kun left
[18:31] *** Ven`` left
[18:37] *** Ven`` joined
[18:44] <bartolin_> nine: (plan to move large parts of spesh into nqp) that sounds interesting. thanks for the info!

[19:16] *** Ven`` left
[19:20] *** sena_kun joined
[19:22] *** Altai-man_ left
[19:44] *** Ven`` joined
[19:54] *** lucasb left
[19:56] *** MasterDuke left
[20:04] *** MasterDuke joined
[20:23] <Geth> Â¦ nqp: usev6++ created pull request #606: [JVM] Always provide file and line in backtrace

[20:23] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/pull/606

[20:27] <bartolin_> ^^ spectest is still running, but maybe someone could check if I understood and "translated" this code from MoarVM correctly? https://github.com/MoarVM/MoarVM/blob/3c3ad0678a/src/core/exceptions.c#L555-L572

[20:28] <bartolin_> ("file" in annotations defaults to empty string, "line" defaults to 1)

[21:01] <Geth> Â¦ nqp: e4767444b2 | (Christian BartolomÃ¤us)++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/Ops.java

[21:01] <Geth> Â¦ nqp: [JVM] Fix indentation

[21:01] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/e4767444b2

[21:19] *** Altai-man_ joined
[21:22] *** sena_kun left
[21:33] *** MasterDuke left
[21:45] *** MasterDuke joined
[22:02] *** tinmarino joined
[22:07] <Geth> Â¦ nqp: 05339d1b52 | Coke++ | 3 files

[22:07] <Geth> Â¦ nqp: Track (some) Perl 6 -> Raku changes

[22:07] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/05339d1b52

[22:12] <Geth> Â¦ nqp: 182fb9ed93 | Coke++ | t/docs/opcodes.t

[22:12] <Geth> Â¦ nqp: Track changes to opcode doc file

[22:12] <Geth> Â¦ nqp: 

[22:12] <Geth> Â¦ nqp: Avoids over 100+ false negatives

[22:12] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/182fb9ed93

[22:46] <Geth> Â¦ nqp: e2d8be3b0b | Coke++ | t/docs/opcodes.t

[22:46] <Geth> Â¦ nqp: find more opcodes in moarvm

[22:46] <Geth> Â¦ nqp: 

[22:46] <Geth> Â¦ nqp: This finds some opcodes that were marked as not in moar

[22:46] <Geth> Â¦ nqp: but then also finds more opcodes that now need documentation

[22:46] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/e2d8be3b0b

[23:06] <Kaiepi> i may have found a way to optimize a bunch of small spots in rakudo

[23:06] <Kaiepi> if tests pass, IO::Handle.lines will be 10% faster, for instance

[23:11] <MasterDuke> nice

[23:16] *** Ven`` left
[23:17] *** Ven`` joined
[23:17] *** Ven`` left
[23:20] *** sena_kun joined
[23:21] *** Altai-man_ left
