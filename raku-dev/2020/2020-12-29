[00:47] *** frost-lab joined
[01:13] *** lucasb left
[02:39] *** leont left
[03:39] *** bisectable6 left
[03:39] *** tellable6 left
[03:39] *** sourceable6 left
[03:39] *** greppable6 left
[03:39] *** coverable6 left
[03:39] *** nativecallable6 left
[03:39] *** notable6 left
[03:39] *** statisfiable6 left
[03:39] *** quotable6 left
[03:39] *** linkable6 left
[03:39] *** bloatable6 left
[03:39] *** squashable6 left
[03:39] *** unicodable6 left
[03:39] *** releasable6 left
[03:39] *** evalable6 left
[03:39] *** benchable6 left
[03:39] *** shareable6 left
[03:39] *** committable6 left
[03:40] *** benchable6 joined
[03:40] *** linkable6 joined
[03:40] *** bisectable6 joined
[03:40] *** nativecallable6 joined
[03:40] *** shareable6 joined
[03:40] *** quotable6 joined
[03:40] *** evalable6 joined
[03:40] *** coverable6 joined
[03:41] *** sourceable6 joined
[03:41] *** notable6 joined
[03:41] *** statisfiable6 joined
[03:41] *** bloatable6 joined
[03:41] *** greppable6 joined
[03:41] *** tellable6 joined
[03:41] *** unicodable6 joined
[03:42] *** releasable6 joined
[03:42] *** squashable6 joined
[03:42] *** committable6 joined
[07:38] *** patrickb joined
[07:45] *** sena_kun joined
[07:47] *** patrickb left
[07:56] *** Altai-man joined
[07:58] *** jmerelo joined
[07:59] *** sena_kun left
[08:53] *** domidumont joined
[11:36] *** frost-lab left
[11:57] *** sena_kun joined
[11:59] *** Altai-man left
[12:12] *** jmerelo left
[12:47] *** leont joined
[13:42] <[Tux]> Rakudo v2020.12-21-g94d685d95 (v6.d) on MoarVM 2020.12-14-g78f4f1d9e

[13:42] <[Tux]> csv-test-xs-20      0.385 -  0.388

[13:42] <[Tux]> csv-ip5xs           0.805 -  0.819

[13:42] <[Tux]> test-t --race       0.892 -  0.907

[13:42] <[Tux]> test-t              1.890 -  2.112

[13:42] <[Tux]> test                7.838 -  7.935

[13:42] <[Tux]> csv-ip5xs-20        8.152 -  8.305

[13:42] <[Tux]> test-t-20 --race    9.165 -  9.361

[13:42] <[Tux]> csv-parser         26.333 - 27.142

[13:42] <[Tux]> test-t-20          31.851 - 32.972

[14:52] <dogbert17> lizmat: is stuff like this supposed to work in your new slice impl?

[14:52] <dogbert17> m: dd ("a".."z")[(3, (4, (5,)))]:p

[14:52] <camelia> rakudo-moar 94d685d95: OUTPUT: «(3 => "d",)␤»

[14:52] <dogbert17> i.e. other cases from https://github.com/Raku/old-issue-tracker/issues/6233

[14:54] <lizmat> dogbert17: yes, that should work

[14:55] <lizmat> except that that piece of code runs into another improper use of nqp::slice

[14:59] <dogbert17> yeah, as soon as an adverb is added things seem to go wrong

[15:00] <lizmat> oddly enough, this is *not* picked up by roast :-(

[15:00] <dogbert17> I guess we could borrow the examples from the bug report

[15:01] <dogbert17> although they also exposes errors so we would need to figure out what the correct results should be

[15:06] <lizmat> $ r 'dd ("a".."z")[(3, (4, (5,)))]:p'

[15:06] <lizmat> (3 => "d", (4 => "e", (5 => "f",)))

[15:06] <lizmat> dogbert17 ^^

[15:07] <Geth> ¦ rakudo/faster-slice-access: 563be8dc7a | (Elizabeth Mattijsen)++ | 2 files

[15:07] <Geth> ¦ rakudo/faster-slice-access: Fix other improper uses of nqp::slice

[15:07] <Geth> ¦ rakudo/faster-slice-access: review: https://github.com/rakudo/rakudo/commit/563be8dc7a

[15:07] <dogbert17> since I got a comment on my roast PR yesterday perhaps I should add your case above (and possibly the other array related ones as well) ?

[15:09] <Geth> ¦ rakudo/faster-slice-access: c3c565e216 | (Elizabeth Mattijsen)++ | 2 files

[15:09] <Geth> ¦ rakudo/faster-slice-access: How did that e get there?  grrr

[15:09] <Geth> ¦ rakudo/faster-slice-access: review: https://github.com/rakudo/rakudo/commit/c3c565e216

[15:09] <lizmat> dogbert17: yes please

[15:10] <dogbert17> I guess an amend is in order then

[15:11] * dogbert17 tries

[15:51] *** domidumont1 joined
[15:55] *** domidumont left
[15:56] *** Altai-man joined
[15:59] *** sena_kun left
[16:00] <Geth> ¦ roast: dogbert17++ created pull request #712: Add tests for nested array slices

[16:00] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/712

[16:01] *** domidumont1 left
[16:01] <dogbert17> lizmat: I made an entirely new PR, git was against me :(

[16:01] <lizmat> that's ok  :-)

[16:02] <dogbert17> now all adverbs are tested

[16:03] <lizmat> cool!

[16:15] <dogbert17> lizmat: FYI, running a spectest uncovers errors in t/spec/S32-array/exists-adverb.t and t/spec/S32-array/adverbs.t

[16:17] <dogbert17> haha, so much for all adverbs :-)

[16:38] <dogbert17> m: dd ("a".."z".list)[3, 30, 5]:exists:v

[16:38] <camelia> rakudo-moar 94d685d95: OUTPUT: «Failure.new(exception => X::Adverb.new(what => "slice", source => "Range", unexpected => [], nogo => ["exists", "v"]), backtrace => Backtrace.new)␤»

[16:38] <dogbert17> should stuff like this work?

[16:46] <lizmat> nope: :exists and :v cannot work together as :exists implies no filtering, and :v does

[16:46] <lizmat> :exists:!v should be legal though, that's one of the errors

[17:02] *** squashable6 left
[17:04] *** squashable6 joined
[17:34] <Geth> ¦ rakudo/faster-slice-access: aea57b1840 | (Elizabeth Mattijsen)++ | src/core.c/array_slice.pm6

[17:34] <Geth> ¦ rakudo/faster-slice-access: Rince/repeat on the @a[*-1]:adverb candidates

[17:34] <Geth> ¦ rakudo/faster-slice-access: 

[17:34] <Geth> ¦ rakudo/faster-slice-access: Makes the simple @a[*-1]:adverb about 3.5x as fast, and the compound

[17:34] <Geth> ¦ rakudo/faster-slice-access: @a[*-1]:foo:bar case about 2x as fast.

[17:34] <Geth> ¦ rakudo/faster-slice-access: review: https://github.com/rakudo/rakudo/commit/aea57b1840

[18:05] <Geth> ¦ rakudo/faster-slice-access: ccf4f921df | (Elizabeth Mattijsen)++ | 9 files

[18:05] <Geth> ¦ rakudo/faster-slice-access: Remove SLICE_ONE_LIST and SLICE_MORE_LIST subs

[18:05] <Geth> ¦ rakudo/faster-slice-access: 

[18:05] <Geth> ¦ rakudo/faster-slice-access: These implemenation details are no longer necessary.

[18:05] <Geth> ¦ rakudo/faster-slice-access: review: https://github.com/rakudo/rakudo/commit/ccf4f921df

[18:05] <lizmat> afk for a few hours&

[18:19] *** patrickb joined
[18:36] *** sena_kun joined
[18:37] *** Altai-man left
[18:49] *** patrickb left
[19:39] *** Kaiepi joined
[19:56] *** Altai-man joined
[19:59] *** sena_kun left
[20:00] *** cog left
[20:00] *** cog_ left
[20:58] *** cog_ joined
[21:02] *** sxmx joined
[22:01] *** Altai-man left
[22:03] <Geth> ¦ rakudo: 754b285053 | (Elizabeth Mattijsen)++ | 2 files

[22:03] <Geth> ¦ rakudo: Add "is-implementatio-detail" delegation

[22:03] <Geth> ¦ rakudo: 

[22:03] <Geth> ¦ rakudo: As suggested by vrurg++

[22:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/754b285053

[22:04] <lizmat> argh,... wrong branch

[22:05] <MasterDuke> lizmat: btw, 'rince' -> 'rinse'

[22:05] <lizmat> oops

[22:05] <lizmat> :-)

[22:06] <Geth> ¦ rakudo: eb1eabf6a5 | (Elizabeth Mattijsen)++ | 2 files

[22:06] <Geth> ¦ rakudo: Revert "Add "is-implementatio-detail" delegation"

[22:06] <Geth> ¦ rakudo: 

[22:06] <Geth> ¦ rakudo: This reverts commit 754b285053aed8bc29076ea2622638a9ef70c237.

[22:06] <Geth> ¦ rakudo: 

[22:06] <Geth> ¦ rakudo: Shouldn't have happened on the master branch.

[22:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/eb1eabf6a5

[22:07] <Geth> ¦ rakudo/class-implementation-detail: aa469bd08e | (Elizabeth Mattijsen)++ | 2 files

[22:07] <Geth> ¦ rakudo/class-implementation-detail: Add "is-implementatio-detail" delegation

[22:07] <Geth> ¦ rakudo/class-implementation-detail: 

[22:07] <Geth> ¦ rakudo/class-implementation-detail: As suggested by vrurg++

[22:07] <Geth> ¦ rakudo/class-implementation-detail: review: https://github.com/rakudo/rakudo/commit/aa469bd08e

