[01:41] *** evalable6 left
[01:41] *** linkable6 left
[01:42] *** linkable6 joined
[01:44] *** evalable6 joined
[02:26] *** SmokeMachine left
[02:26] *** SmokeMachine joined
[02:53] *** camelCaser joined
[02:54] *** ccamel left
[06:37] *** sena_kun joined
[06:47] *** frost-lab joined
[07:04] *** leont left
[09:08] *** Altai-man joined
[09:11] *** sena_kun left
[09:27] *** frost-lab left
[09:45] *** domidumont joined
[10:07] <lizmat> cog: I do not know of a way to prevent having to do :!c every single time

[10:08] <lizmat> bisectable6: sub foo() { loop { LAST {say "LAST"}; say "IN"; last } }; foo

[10:08] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[10:08] <bisectable6> lizmat, Output on all releases: https://gist.github.com/bd0fea04b02f860f17e9c57ea001e40e

[10:08] <bisectable6> lizmat, Bisecting by exit code (old=2018.12 new=2016.01.1). Old exit code: 1

[10:08] <bisectable6> lizmat, bisect log: https://gist.github.com/8ad508434235c037e670f0507960191b

[10:08] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=2016.01.1) because on both starting points the exit code is 0

[10:08] <bisectable6> lizmat, Output on all releases and bisected commits: https://gist.github.com/d5a3b77b5f1ae9a3aabfca625d4fe5aa

[10:10] *** domidumont left
[10:25] *** frost-lab joined
[10:49] *** frost-lab left
[11:03] <nine> releasable6: status

[11:03] <releasable6> nine, Next release in ≈7 hours. 1 blocker. 145 out of 146 commits logged

[11:03] <releasable6> nine, Details: https://gist.github.com/639661186a2204da592502315b2f94e7

[12:13] <Geth> ¦ rakudo: 4e645ee5da | (Elizabeth Mattijsen)++ | src/core.c/Any.pm6

[12:13] <Geth> ¦ rakudo: Actually support running dd on native BOOT arrays

[12:13] <Geth> ¦ rakudo: 

[12:13] <Geth> ¦ rakudo: It actually didn't work for BOOT(Int|Num|Str)Array up till now.

[12:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4e645ee5da

[12:13] <lizmat> Altai-man ^^ does not need to be in the release  :-)

[12:22] <Altai-man> lizmat, thanks for noting! The commit with typo fix will be the last included, I think.

[12:22] <lizmat> Altai-man++

[12:27] *** linkable6 left
[12:27] *** evalable6 left
[12:27] *** evalable6 joined
[12:28] *** linkable6 joined
[13:09] *** sena_kun joined
[13:11] *** Altai-man left
[13:17] *** leont joined
[13:23] <sena_kun> Release time.

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: 026ab726db | (Stefan Seifert)++ | lib/NativeCall/Types.rakumod

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: NativeCall workaround for slowdown of calls to routines with generic arguments

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: 

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: If a routine's signature contains any generics (::T), we generate code to check

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: at runtime, if the passed type is coercive. This is very expensive and costs

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: some 70 % of performance in some benchmarks.

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: For NativeCall there is a workaround though: the only generic parameter is

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: ::?CLASS in the signature. Since the typed CArray roles are only known within

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: the CArray class, we can be sure that ::?CLASS is actually CArray or maybe a

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: subclass. Thus we can make the type constraint more concrete.

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: Brings whitenoise.p6 backup up from 45ish fps to > 180 fps

[13:26] <Geth> ¦ rakudo/workaround_generics_slowdown_in_native_call: review: https://github.com/rakudo/rakudo/commit/026ab726db

[13:37] <sena_kun> I wonder what's with this comma in "The next release of Rakudo (#143), is tentatively scheduled for 2021-01-23", it feels so-o out of place somehow.

[13:38] <sena_kun> The script is 5 years old, though, and nobody bothered, it seems.

[13:39] <MasterDuke> nine++, whitenoise.p6 is back to up ~240 fps on that branch

[13:39] <sena_kun> Wow, those are awesome news!

[13:39] <sena_kun> nine++

[13:45] <Geth> ¦ rakudo/release-2020.12: c3953d8d9b | Altai-man++ | 3 files

[13:45] <Geth> ¦ rakudo/release-2020.12: Update changelog + announcement

[13:45] <Geth> ¦ rakudo/release-2020.12: 

[13:45] <Geth> ¦ rakudo/release-2020.12: Deliberately not logged:

[13:45] <Geth> ¦ rakudo/release-2020.12: 

[13:45] <Geth> ¦ rakudo/release-2020.12: a375597 6843f80 604f64f 1b26983 8eb9db3 c63f078 04a5001 214df49

[13:45] <Geth> ¦ rakudo/release-2020.12: 1cd8765 96ab6eb f7ab4f5 737560e 2e33736 1aff2ad b93d9b3 551b679

[13:45] <Geth> ¦ rakudo/release-2020.12: f2ad038 2a44729 e90ed75 22c4bb5 1ccfb09 3202466 4e21ada 3d8e942

[13:45] <Geth> ¦ rakudo/release-2020.12: 734631b 260f015 a89d020 cce2fa2 436437b 1ae0478 ac84c18 79b55ac

[13:45] <Geth> ¦ rakudo/release-2020.12: 5e791d7 1639c78 3808eaa 69f3e95 ce45754 3d46341

[13:45] <Geth> ¦ rakudo/release-2020.12: review: https://github.com/rakudo/rakudo/commit/c3953d8d9b

[13:46] <sena_kun> It is the last chance to glance and tweak something in the announcement/changelog. (yes, the dates about 2021 are checked)

[14:07] <sena_kun> Don't tell me rakudo on master does not pass roast...

[14:10] <sena_kun> So it was a flapper in https://github.com/Raku/roast/blob/master/S09-typed-arrays/native.t

[14:10] <sena_kun> :S

[14:17] *** linkable6 left
[14:17] *** evalable6 left
[14:19] *** linkable6 joined
[14:20] *** evalable6 joined
[14:27] <sena_kun> releasable6, status

[14:27] <releasable6> sena_kun, Next release in ≈4 hours. 1 blocker. 145 out of 147 commits logged

[14:27] <releasable6> sena_kun, Details: https://gist.github.com/efebde3c56b199486e32df7b9fc3b9d8

[14:32] <sena_kun> lizmat, you around?

[14:40] <lizmat> am for about 5 mins

[14:40] <lizmat> sena_kun ^^

[14:41] <sena_kun> lizmat, how it comes I have rakudo master and roast consistently fails 20 tests in S09-typed-arrays/native-int.rakudo.moar?

[14:41] <sena_kun> Is something not pushed to roast?

[14:42] * lizmat stashes what she was working on and builds

[14:43] <sena_kun> So far this is a royal blocker for us.

[14:46] <lizmat> there's quite a few todo's in there, but it doesn't fail for me

[14:47] <lizmat> All tests successful.

[14:47] <lizmat> Files=1, Tests=1833,  3 wallclock secs ( 0.15 usr  0.01 sys +  4.40 cusr  0.28 csys =  4.84 CPU)

[14:47] <sena_kun> https://gist.github.com/Altai-man/f2d4e4196abe73c0adfceeb20cdfd554 <- here is my log

[14:47] <sena_kun> Sigh, this is disturbing.

[14:48] <sena_kun>     # Expected: Cannot delete from a natively typed array

[14:48] <sena_kun>     # Got:      Cannot delete from a native int array

[14:48] <lizmat> and roast does not have an unpushed changes for me

[14:48] <sena_kun> There was a commit to native-num making the change &

[14:48] <lizmat> that error message *did* change in the past month and I did change that

[14:48] <sena_kun> s/&/^/

[14:48] <sena_kun> But not for native-int.t

[14:48] <lizmat> so maybe it's missing from errata ?

[14:48] <sena_kun> https://github.com/Raku/roast/commits/master/S09-typed-arrays/native-int.t <- there are no commits?

[14:49] <sena_kun> lizmat, I am on master history for the file and last commit is dated 23 Oct, am I insane?

[14:49] <lizmat> last one I see is b97dfa098fd2dd8

[14:49] <linkable6> (2020-12-17) https://github.com/Raku/roast/commit/b97dfa098f [JVM] Unfudge some now working tests

[14:49] <lizmat> from 17 Dec

[14:49] <sena_kun> See the URL I posted, https://github.com/Raku/roast/commits/master/S09-typed-arrays/native-int.t

[14:49] <lizmat> dinner is served&

[14:50] * sena_kun investigates

[14:51] * lizmat will be back in 20 mins or so

[14:57] <sena_kun> Hmm, master passes for me when doing `make stresstest`...

[14:58] <sena_kun> t/spec/S09-typed-arrays/native-int.rakudo.moar ................ Dubious, test returned 20 (wstat 5120, 0x1400)

[14:58] <sena_kun> Failed 20/1370 subtests

[15:05] <sena_kun> Ok, so I have no idea, but there is indeed a difference between master and errata.

[15:05] <sena_kun> The question is how we did not notice it in the last release.

[15:07] <sena_kun> What on Earth.

[15:12] <lizmat> sena_kun: is there something I can do ?

[15:13] <sena_kun> lizmat, can you try 6.c-errata roast test?

[15:14] <sena_kun> If it fails for you in the same place, maybe you'll be able to guess what it misses, because I am clearly not.

[15:14] <lizmat> gimme a min  :-)

[15:14] <sena_kun> I restarted the process from scratch for now.

[15:16] *** lucasb joined
[15:18] <lizmat> running spectest now

[15:20] <lizmat> sena_kun: can confirm breakage on native-num and native-int tests on 6-c.errata

[15:21] * lizmat looks deeper

[15:21] <sena_kun> lizmat, native-num is fixed by a commit

[15:21] <sena_kun> one second...

[15:22] <sena_kun> lizmat, https://github.com/Raku/roast/commit/1a84eefa4734019923f7ec2db0639f61e4bd560b <- 

[15:22] <sena_kun> but there is no such commit for native-int.t

[15:22] <lizmat> well, I guess that needs to be applied to 6.c-errata then

[15:22] <sena_kun> So the native-num will be fixed with a cherry-pick of the commit I posted, I just did not push it, but there is nothing to cherry-pick for native-int.t one.

[15:23] <lizmat> hmmm...

[15:24] <lizmat> perhaps 7495dca5755ac78 ?

[15:24] <linkable6> (2015-03-15) https://github.com/Raku/roast/commit/7495dca575 Split off native int|num specific tests

[15:24] <lizmat> ah no

[15:26] <sena_kun> Still the same after a full rebuild of everything.

[15:27] <sena_kun> lizmat, will you push cherry-picked 1a84eefa4734019923f7ec2db0639f61e4bd560b or should I?

[15:27] <linkable6> (2020-12-05) https://github.com/Raku/roast/commit/1a84eefa47 Fix up more exact error message

[15:27] <lizmat> I'll push a single commit with both, ok ?

[15:28] <sena_kun> lizmat, what is the second out of this "both"?

[15:28] <lizmat> the num case ?

[15:28] <sena_kun> Well, the first then?

[15:28] <sena_kun> Do you have a solution for native-int?

[15:29] <lizmat> yeah, it's basically the same fix, with s/num/int/

[15:29] <sena_kun> Can it be broken solely when `use v6.c` is applied?

[15:29] <sena_kun> I mean, for tests to be correct and for rakudo to behave differently under different pragmas.

[15:29] <lizmat> those changes were in c

[15:29] <lizmat> as far as I remember

[15:30] <lizmat> ah, and they should be marked as todo I guess/

[15:30] <sena_kun> How could we release for a whole year with a test which was passing and now without any changes suddenly stopped?

[15:32] <Geth> ¦ roast/6.c-errata: 2ef8cc4092 | (Elizabeth Mattijsen)++ | 2 files

[15:32] <Geth> ¦ roast/6.c-errata: Fix tests because of error message becoming more specific

[15:32] <Geth> ¦ roast/6.c-errata: review: https://github.com/Raku/roast/commit/2ef8cc4092

[15:33] <lizmat> sena_kun: I currently have no answer to your question

[15:33] <lizmat> I only see that since 2020.11 *those* error messages have changed

[15:34] <lizmat> (pretty sure there is no text for the native str case)

[15:34] <lizmat> and I  *did* the adapt the tests in roast, but forgot to do it in 6.c-errata

[15:35] <lizmat> could that be an explanation ?

[15:35] <sena_kun> lizmat, tests were adapted for num case only, not for int case, but on master both pass. I am not blaming or demanding right now, just very curious and trying to guess if we are in trouble.

[15:36] <sena_kun> I mean, yes, it is a common case something is changes on roast master and 6.c-errata/6.d-errata needs cherry-picking. I do it just fine, no sweat.

[15:36] <sena_kun> But here there was nothing to pick.

[15:36] * sena_kun digs into git history more

[15:37] <lizmat> maybe vrurg's merge somehow ate a commit?

[15:39] <sena_kun> bisectable6, uint.^name.say

[15:39] <bisectable6> sena_kun, Will bisect the whole range automagically because no endpoints were provided, hang tight

[15:39] <bisectable6> sena_kun, ¦6c (49 commits): «uint␤»

[15:39] <bisectable6> sena_kun, Nothing to bisect!

[15:40] *** domidumont joined
[15:43] <lizmat> sena_kun: I just noticed that those native int tests seem to have disappeared in roast on master

[15:44] <sena_kun> It seems so.

[15:45] <sena_kun> Ok, I give up.

[15:45] <sena_kun> lizmat, sorry for all the commotion.

[15:47] <lizmat> sena_kun: can you continue now?

[15:48] <sena_kun> lizmat, yeah. I guess 6.d will want the same treatment, but if it's about a simple patch, I can do it myself if you want.

[15:48] <lizmat> sure... then I will be going afk again&

[15:48] <lizmat> ++sena_kun

[15:49] <sena_kun> This is the first time in a year when things have diverged so much between branches.

[15:49] <sena_kun> lizmat, have fun.

[15:49] <lizmat> thanks!

[15:53] *** domidumont left
[16:01] <[Tux]> Rakudo v2020.11-146-g604f64f46 (v6.d) on MoarVM 2020.11-89-g0323c7bce

[16:01] <[Tux]> csv-test-xs-20      0.390 -  0.412

[16:01] <[Tux]> csv-ip5xs           0.843 -  0.883

[16:01] <[Tux]> test-t --race       0.983 -  0.991

[16:01] <[Tux]> test-t              1.930 -  2.058

[16:01] <[Tux]> test                8.187 -  8.384

[16:01] <[Tux]> csv-ip5xs-20        8.191 -  8.536

[16:01] <[Tux]> test-t-20 --race   10.133 - 10.360

[16:01] <[Tux]> csv-parser         27.981 - 28.488

[16:01] <[Tux]> test-t-20          32.697 - 33.998

[16:06] *** Xliff joined
[16:11] <Geth> ¦ nqp: 14bba20011 | Altai-man++ | tools/templates/MOAR_REVISION

[16:11] <Geth> ¦ nqp: [release] Bump MoarVM revision to 2020.12

[16:11] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/14bba20011

[16:11] <Geth> ¦ nqp: 545e8c891b | Altai-man++ | VERSION

[16:11] <Geth> ¦ nqp: [release] Bump VERSION to 2020.12

[16:11] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/545e8c891b

[16:11] <Geth> ¦ rakudo/release-2020.12: ff53954fa5 | Altai-man++ | tools/templates/NQP_REVISION

[16:11] <Geth> ¦ rakudo/release-2020.12: [release] Bump NQP revision to 2020.12

[16:11] <Geth> ¦ rakudo/release-2020.12: review: https://github.com/rakudo/rakudo/commit/ff53954fa5

[16:11] <Geth> ¦ rakudo/release-2020.12: 45b4e6464d | Altai-man++ | VERSION

[16:11] <Geth> ¦ rakudo/release-2020.12: [release] Bump VERSION to 2020.12

[16:11] <Geth> ¦ rakudo/release-2020.12: review: https://github.com/rakudo/rakudo/commit/45b4e6464d

[16:12] <Geth> ¦ rakudo: Altai-man++ created pull request #4126: Release 2020.12

[16:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4126

[16:13] <Geth> ¦ rakudo/master: 4 commits pushed by Altai-man++

[16:13] <Geth> ¦ rakudo/master: c3953d8d9b | Update changelog + announcement

[16:13] <Geth> ¦ rakudo/master: ff53954fa5 | [release] Bump NQP revision to 2020.12

[16:13] <Geth> ¦ rakudo/master: 45b4e6464d | [release] Bump VERSION to 2020.12

[16:13] <Geth> ¦ rakudo/master: 3740319990 | Merge pull request #4126 from rakudo/release-2020.12

[16:13] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/4e645ee5da35...3740319990b9

[16:14] <sena_kun> I guess this is it.

[16:18] <sena_kun> eeeeh

[16:18] <sena_kun> note https://twitter.com/koto_san_kana/status/1340330460388462596

[16:19] <sena_kun> weekly https://twitter.com/koto_san_kana/status/1340330460388462596

[16:19] <sena_kun> notable6, help

[16:19] <notable6> sena_kun, Like this: notable6: weekly rakudo is now 10x as fast # See wiki for more examples: https://github.com/Raku/whateverable/wiki/Notable

[16:20] <sena_kun> notable6: weekly https://twitter.com/koto_san_kana/status/1340330460388462596

[16:20] <notable6> sena_kun, Noted! (weekly)

[16:40] <AlexDaniel`> Congrats for the release! Now is probably the best time, here is the announcement. I am stopping maintenance of the whateverable project, including hosting of the bots and builds. I know the installation instructions are a bit off, but I'm blocked from editing the wiki. It's a project I've put a lot of love into, and this love keeps pulling me back. So, for everyone's interest, that is it. I'll keep them up until 27th

[16:40] <AlexDaniel`> just in case, and the data won't be wiped for some time after that. Let me know if there's anything else I can do for you.

[16:57] <sena_kun> AlexDaniel`, hi. How much does it cost to run?

[16:57] <AlexDaniel`> in terms of what?

[16:57] <sena_kun> AlexDaniel`, in terms of $$$.

[16:58] <sena_kun> Though I have no idea how automated is it.

[16:58] <AlexDaniel`> I'm not sure I understand the question. I am paying 32€/month for the server, but it's my server that also runs other stuff.

[16:59] <AlexDaniel`> if you have another idle machine that can do the work then you'll be fine

[17:00] <AlexDaniel`> there's also a 6lang.org domain that is used for serving the builds, obviously doesn't cost much, but you're probably much better off rewiring it through whateverable.raku.org or something

[17:01] <AlexDaniel`> currently it is using 30GB of storage, that's not much and you probably have more than that available

[17:01] <sena_kun> AlexDaniel`, maybe I don't know enough to make a nice one. I would like to keep whateverable alive, but not sure what resources (time, money, code) are needed to do that and what your "maintenance ends here" implies in practice.

[17:01] <AlexDaniel`> ah I see

[17:02] <AlexDaniel`> well, it implies the bots will be turned off, which also means shareable will be off, which also means Blin won't work

[17:02] <AlexDaniel`> basically I want it off my server

[17:03] <AlexDaniel`> this should've been done much earlier, but there was always an issue of finding a place to host it

[17:03] <sena_kun> AlexDaniel`, that's understandable. I guess my way is to go through instructions (there are some) and host something myself, then re-wire URLs of bots, right-o?

[17:04] <AlexDaniel`> and honestly there wasn't any reason to do that, I think I did pretty good job of doing that for the last 4 years or whatever

[17:05] <AlexDaniel`> sena_kun: yes. There's a PR for a dockerfile, but it is so-so. If I was doing it today I'd write a good one, then also a docker-compose file to run every bot separately

[17:05] <sena_kun> AlexDaniel`, you truly did, I cherish your passion and imagination to do what you have done over all those years.

[17:05] <AlexDaniel`> thank you

[17:06] <sena_kun> AlexDaniel`, roger. Thanks, I'll look into it ASAP, too beaten now after 3 releases in a row.

[17:06] <AlexDaniel`> ideally, the build.p6 script should run in a container with a much older GLIBC version, that would solve some problems that people were having when trying to use the builds

[17:06] <AlexDaniel`> I didn't know how to do any of that back in the day so I didn't

[17:07] <AlexDaniel`> I'd also scrap the idea of using systemd services, just go fully with docker

[17:07] <AlexDaniel`> I also have an uncommitted version that uses zstd instead of lrzip and has a separate bot instead of a build.p6 script

[17:08] <AlexDaniel`> I didn't finish it because my flow was interrupted when I tried to get Cro to consume github webhook payloads…

[17:08] *** Altai-man joined
[17:08] <AlexDaniel`> but that's something you probably know how to do, so I can send you a patch with what I had, if you're interested. It's unfinished and needs work though

[17:10] <Altai-man> "Most data files are available here: https://github.com/perl6/whateverable-data", but no such repo does not exist. : O

[17:10] <AlexDaniel`> but the upcoming features were supposed to be: faster and more tightly packed long-term storage, webhooks for triggering builds

[17:11] *** sena_kun left
[17:11] <AlexDaniel`> Altai-man: forget the repo, it unfortunately didn't happen. There are just three files you need: notes tellable-tell tellable-seen

[17:11] <AlexDaniel`> that's for notable and tellable, everything else is mostly stateless

[17:12] <AlexDaniel`> well, reportable we can probably ignore.

[17:12] <AlexDaniel`> as for the builds, as I said, if I was doing it today I'd let the server crunch through them again so that there's no GLIBC issue

[17:14] <AlexDaniel`> Altai-man: try `ssh [email@hidden.address] it should work for you

[17:14] <Altai-man> yup

[17:14] <Altai-man> I see the repo.

[17:15] *** domidumont joined
[17:15] <AlexDaniel`> there are no valuable unstaged changes, most of the data/ is generated automatically except for the important files I mentioned previously

[17:16] <AlexDaniel`> please do copy config.json though

[17:18] <AlexDaniel`> again, yes running them the same way is probably OK but docker will make you so much happier :)

[17:18] <Altai-man> AlexDaniel`, can I copy it via curl pastie or it has sensitive data inside? "default-stdin" is full of garbage when doing plain cat here.

[17:18] <AlexDaniel`> Altai-man: have you tried sshfs?

[17:18] <Altai-man> not really. :)

[17:19] <AlexDaniel`> Altai-man: sshfs [email@hidden.address] ~/sshfs/bisectable/

[17:19] <AlexDaniel`> need to make sshfs/bisectable locally, or whatever you want to call it

[17:19] <AlexDaniel`> and it'll mount the whole thing

[17:19] <AlexDaniel`> keep in mind though that you won't be able to copy all of the builds this way, because that'd take just too much time over sshfs. But configs and most other files work great!

[17:20] <AlexDaniel`> and yes it does contain access tokens and stuff

[17:20] <AlexDaniel`> now that you say it, there's this github account: https://gist.github.com/Whateverable/

[17:20] <AlexDaniel`> but let's do it step by step, first get the dockerized stuff to run, then we'll figure out the accounts

[17:21] <MasterDuke> you think it'd take too long over sshfs? i've done large downloads with sshfs before, i didn't think it was particularly slow

[17:21] <AlexDaniel`> it's not so much about the size, it's the amount of files :)

[17:21] <Altai-man> MasterDuke, no real reason to, I think.

[17:22] <MasterDuke> pipe through tar or rsync

[17:22] <AlexDaniel`> yes, but that's no longer sshfs is it? :) that's what I'm saying

[17:22] <AlexDaniel`> maybe today it's not that bad, reportable used to store everything in files but then I turned it off at some point

[17:23] <MasterDuke> eh, still easier to use "local" commands

[17:24] <Altai-man> AlexDaniel`, I copied a bunch of text files plus three files from data/ (though they will be outdated on replacement day, I'll try again, though). Going afk now, sorry.

[17:24] <AlexDaniel`> it's cool, let me know if you need more time or whatever

[17:24] <AlexDaniel`> we just have to time in between releases so that Blin is unaffected

[17:24] *** b2gills left
[17:28] <Altai-man> AlexDaniel`, what server specs do you recommend to rent?

[17:28] <AlexDaniel`> SSD for storage will make a big difference I thin

[17:29] <AlexDaniel`> k

[17:29] <Altai-man> Digitalocean offers only SSD storages.

[17:29] <AlexDaniel`> great! How much RAM can you get?

[17:29] <Altai-man> https://www.digitalocean.com/pricing/calculator/

[17:29] <Altai-man> I can get whatever is needed. :)

[17:30] <AlexDaniel`> 32G of RAM would be nice. Rakudo is definitely not forgiving in terms of RAM

[17:31] <Altai-man> Hmm, those are not 30 euro. :S

[17:31] <AlexDaniel`> yeah forget digitalocean

[17:31] <Altai-man> AlexDaniel`, another option?

[17:32] <AlexDaniel`> E3-SSD-1-32 from here: https://www.soyoustart.com/ie/essential-servers/

[17:33] <Altai-man> AlexDaniel`, thank you!

[17:33] <AlexDaniel`> this is what I have from them:     E3-SSD-1-16 Server - E3-1225v2 - 16GB - SoftRaid 3x120GB SSD

[17:34] <AlexDaniel`> although I'm pretty confident that they didn't have 1225v2 and put 1245v2 into my server

[17:34] <AlexDaniel`> yay free upgrade

[17:34] <AlexDaniel`> they bumped the price of mine to 32€/month even though it was 30€/month for a long time

[17:40] <AlexDaniel`> if dockerized properly, you'll be able to use the same machine for all kinds of other stuff for Raku

[17:40] <AlexDaniel`> say crunching roast on PRs or whatever you want

[17:41] <AlexDaniel`> most of the time whateverable is not doing much, although that is of course different if you're creating all the builds from scratch. Expect it to finish in a month or so, but IIRC it's easy to make it build the most recent commits first (after the tags), this way it'll be functional right away and historical stuff will appear over time

[17:45] *** b2gills joined
[17:48] <AlexDaniel`> having dockerized bots actually makes me pretty excited

[17:48] <AlexDaniel`> you should be able to lift the private message limit they currently have

[18:07] <nine> Altai-man: I still got plenty of free resources on my server

[18:27] *** leont left
[18:33] <cog> lizmat, thx about :!c as a default

[18:36] *** domidumont left
[18:49] <Geth> ¦ rakudo: 357a7f300d | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | docs/announce/2020.12.md

[18:49] <Geth> ¦ rakudo: Update 2020.12.md

[18:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/357a7f300d

[18:50] <bartolin> Altai-man lizmat: regarding the tests in S09-typed-arrays/native-int.t: If I'm not mistaken the specific error message (that has changed recently) has been removed back in 2017 by Zoffix: https://github.com/Raku/roast/commit/20fe657466

[18:52] <bartolin> It still was in 6.c-errata, so that needed a fix.

[18:52] <bartolin> the only strange part was the log from https://gist.github.com/Altai-man/f2d4e4196abe73c0adfceeb20cdfd554

[18:55] <bartolin> but since there are 1833 tests nowadays in S09-typed-arrays/native-int.t it looks like a different version of the file was run. Maybe there were unstaged changes and the version from 6.c-errata was run?

[18:56] <Geth> ¦ problem-solving: shishini assigned to JJ Issue Add a forum to support the Raku community and provide a searchable repository of Q&A https://github.com/Raku/problem-solving/issues/251

[18:57] <bartolin> maybe you just changed to master and re-run with the preprocessed version generated from the 6.c-errata branch (native-int.rakudo.moar)?

[18:57] <bartolin> however, I think we are fine now

[19:22] <AlexDaniel`> Altai-man, nine : ideally, shouldn't rba be involved? They were doing a great job at managing community resources, last time I checked

[19:23] <AlexDaniel`> also [Coke] did suggest that there can be funding for whateverable-related machines. I refused it in the past but it doesn't mean that you should :)

[19:55] <Geth> ¦ problem-solving: JJ assigned to rba Issue Add a forum to support the Raku community and provide a searchable repository of Q&A https://github.com/Raku/problem-solving/issues/251

[21:09] *** sena_kun joined
[21:10] *** Altai-man left
[22:24] *** sena_kun left
[23:06] *** Xliff left
[23:07] *** Xliff joined
[23:16] *** lucasb left
[23:36] *** Xliff left
