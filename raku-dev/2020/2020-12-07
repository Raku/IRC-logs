[00:26] *** lucasb left
[01:03] *** ggoebel_ left
[01:24] *** ggoebel_ joined
[03:24] *** leont left
[03:53] *** maggotbrain joined
[06:17] *** MasterDuke left
[07:02] <[Tux]> Yesterday: 

[07:02] <[Tux]> Rakudo v2020.11-101-gd1d2546e6 (v6.d) on MoarVM 2020.11-57-g51cc76c16

[07:02] <[Tux]> csv-test-xs-20      0.388 -  0.394

[07:02] <[Tux]> csv-ip5xs           0.812 -  0.843

[07:02] <[Tux]> test-t --race       0.805 -  0.864

[07:02] <[Tux]> test-t              1.860 -  1.909

[07:02] <[Tux]> csv-ip5xs-20        7.797 -  8.252

[07:02] <[Tux]> test                7.544 -  8.334

[07:02] <[Tux]> test-t-20 --race    9.346 - 10.092

[07:02] <[Tux]> csv-parser         24.894 - 26.065

[07:02] <[Tux]> test-t-20          32.072 - 32.441

[07:38] *** domidumont joined
[07:47] *** patrickb joined
[07:54] <patrickb> .tell rba raku.org is down. Can you have a look?

[07:54] <tellable6> patrickb, I'll pass your message to rba

[07:54] <patrickb> ping rba

[07:54] <tellable6> 2020-12-03T21:30:43Z #raku <samcv> patrickb no I don't use Raku at work, sadly

[07:54] <tellable6> 2020-12-03T22:05:51Z #raku <tony-o> patrickb i'm interested in it, for sure.  ot

[07:54] <tellable6> 2020-12-03T22:06:34Z #raku <tony-o> patrickb it's been kind of a pain in my side, though.  i have a working prototype and the code to run it.  i need to figure out how to make it work in zef.

[07:54] <tellable6> 2020-12-03T22:06:56Z #raku <tony-o> patrickb in response to your ecosystem inquiry.

[07:54] *** patrickb left
[08:14] *** MasterDuke joined
[08:53] <nine> lizmat: Thanks for finding those! That's exactly what I wanted to look into today as raku -e '(^10000).race.map({EVAL "q:to/END/;\nEND\n"}).sink' still fails very rarely with some message about a cursor

[09:25] <nine> Though it looks like those are not actually the reason for the failures I see.

[09:26] <nine> nqp: class Foo { }; role Bar { has $!bar; method set-bar() { $!bar := 1; } }; my $i := 0; my @threads; while $i < 16 { my $thread := nqp::newthread({ while 1 { my $foo := Foo.new; Foo.HOW.mixin($foo, Bar); $foo.set-bar } }, 0); nqp::push(@threads, $thread); nqp::threadrun($thread); $i++ }; nqp::threadjoin(@threads[0]);

[09:26] <camelia> nqp-moarvm: OUTPUT: «(signal XCPU)»

[09:26] <nine> Locally this immediately gives me "Unhandled exception: P6opaque: no such attribute '$!bar' on type Foo+{Bar} in a Foo+{Bar} mixin when trying to bind a value"

[09:27] <nine> Which is the same as during compilation: P6opaque: no such attribute '$!named' on type QAST::IVal+{QAST::SpecialArg} in a QAST::IVal+{QAST::SpecialArg} mixin when trying to bind a value

[10:02] *** frost-lab joined
[10:09] <nine> Oh, it seems like the error happens either immediately or not at all. This suggests that the race condition is in generating the mixin. Once all threads get the type from the parametrics cache it seems to be fine

[10:47] *** domidumont1 joined
[10:49] *** domidumont left
[11:33] *** domidumont1 left
[11:47] *** domidumont joined
[11:48] *** domidumont left
[11:54] *** domidumont joined
[12:06] *** domidumont left
[12:16] <lizmat> Files=1346, Tests=117144, 227 wallclock secs (30.55 usr  7.58 sys + 3150.20 cusr 291.29 csys = 3479.62 CPU)

[12:26] *** domidumont joined
[12:43] *** domidumont left
[13:02] <Geth> ¦ nqp: 84ff7e5edd | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[13:02] <Geth> ¦ nqp: Bump MoarVM to get nwc10's extensive hash work

[13:02] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/84ff7e5edd

[13:04] <Geth> ¦ rakudo: 6792cc425f | (Elizabeth Mattijsen)++ | 2 files

[13:04] <Geth> ¦ rakudo: Use still slightly faster explicit nqp::add_i vs prefix ++

[13:04] <Geth> ¦ rakudo: 

[13:04] <Geth> ¦ rakudo: Looks like the ++$i codegens to a bare IVal, whereas the nqp::add_i

[13:04] <Geth> ¦ rakudo: codegens to a WVal containing an IVal.  Yet the WVal version turns

[13:04] <Geth> ¦ rakudo: out to be about 1% faster in benchmarks still.

[13:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6792cc425f

[13:08] *** morayj joined
[13:10] *** domidumont joined
[13:16] <[Coke]> going forward, would it be worth keeping an optimizations used doc that has things like "using nqp::_add_i instead of ++ for <reason>" so folks looking to make optimizations (and then code updates for readability over speed) have a list?

[13:18] <lizmat> [Coke]: well, this particular case I hope we can fix soon, either by changing the codegen of ++$I to use the WVal form, or even better, figure out why the bare IVal form is slower

[13:20] <Geth> ¦ rakudo: 436437b7bf | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[13:20] <Geth> ¦ rakudo: Bump NQP to get nwc10++ latest hash work on MoarVM

[13:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/436437b7bf

[13:27] *** morayj left
[13:39] *** leont joined
[13:49] *** lucasb joined
[14:06] <Geth> ¦ rakudo: cb8eb68a92 | (Elizabeth Mattijsen)++ | src/core.c/Supply-coercers.pm6

[14:06] <Geth> ¦ rakudo: Add :emit-(once-)on-empty to Suppy.batch(:$seconds)

[14:06] <Geth> ¦ rakudo: 

[14:06] <Geth> ¦ rakudo: With :emit-on-empty, you *will* get an emit even if the batch is empty.

[14:06] <Geth> ¦ rakudo: So that means you will get at least 1 emit for every $seconds.

[14:06] <Geth> ¦ rakudo: 

[14:06] <Geth> ¦ rakudo: With :emit-once-on-empty, you will get an emit once if the batch is

[14:06] <Geth> ¦ rakudo: empyty, and no further emits until more values have been received.

[14:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cb8eb68a92

[14:06] <Geth> ¦ rakudo: 492651ea48 | (Elizabeth Mattijsen)++ | src/core.c/Supply-coercers.pm6

[14:06] <Geth> ¦ rakudo: Add :emit-timed to Supply.batch(:$seconds)

[14:06] <Geth> ¦ rakudo: 

[14:06] <Geth> ¦ rakudo: When :emit-timed is specified, a timer will be running emitting

[14:07] <Geth> ¦ rakudo: whatever is in the batch every given number of seconds *if* there

[14:07] <Geth> ¦ rakudo: is something in the batch.  The default is to only emit if a new

[14:07] <Geth> ¦ rakudo: value is received and it arrives in a new period.

[14:07] <Geth> ¦ rakudo: 

[14:07] <Geth> ¦ rakudo: This removes the previous proposal for :emit-on-empty and :emit-once-on-empty.

[14:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/492651ea48

[14:07] <Geth> ¦ rakudo: 1ae04788c5 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/Supply-coercers.pm6

[14:07] <Geth> ¦ rakudo: Merge pull request #4060 from rakudo/emit-on-empty

[14:07] <Geth> ¦ rakudo: 

[14:07] <Geth> ¦ rakudo: Add :emit-timed to Suppy.batch(:$seconds)

[14:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1ae04788c5

[14:07] <lizmat> argh, should have squashed that

[14:32] *** morayj joined
[14:35] <[Tux]> Rakudo v2020.11-109-g1ae04788c (v6.d) on MoarVM 2020.11-82-g6294b666f

[14:35] <[Tux]> csv-test-xs-20      0.396 -  0.408

[14:35] <[Tux]> csv-ip5xs           0.853 -  0.873

[14:35] <[Tux]> test-t --race       0.887 -  1.017

[14:35] <[Tux]> test-t              2.092 -  2.148

[14:35] <[Tux]> test                8.319 -  8.503

[14:35] <[Tux]> csv-ip5xs-20        8.775 -  9.254

[14:35] <[Tux]> test-t-20 --race    9.290 -  9.451

[14:35] <[Tux]> csv-parser         27.054 - 28.453

[14:35] <[Tux]> test-t-20          36.101 - 36.375

[14:35] *** Kaiepi left
[14:37] *** Kaiepi joined
[14:39] *** frost-lab left
[14:54] *** bazzaar joined
[15:38] *** cog left
[16:07] *** bazzaar left
[16:07] <[Coke]> lizmat: I know you just did a big update to the nqp ops markdown - I updated the "are these opcodes tested" test to be raku as well, lots of misses at the moment. Let me know if you want me to make a ticket out of that or something.

[16:09] *** bazzaar joined
[16:18] *** bazzaar left
[16:18] *** [Tux] left
[16:29] *** [Tux] joined
[16:34] <lizmat> [Coke] are you saying that the update lost documentation?

[16:34] <[Coke]> no.

[16:34] <lizmat> *phew*

[16:34] <[Coke]> I'm saying we have lots of opcodes that aren't being tested

[16:35] <lizmat> tested as in: not having documentation, right ?

[16:35] <lizmat> if so, please make an issue of the current state of undocumentedness

[16:35] <[Coke]> ... no

[16:35] <[Coke]> I mean not in t/

[16:35] <lizmat> aah..  ok

[16:36] <lizmat> still worth making an issue for  :-)

[16:36] <[Coke]> ok. will do

[16:36] <[Coke]> (the missing docs is already a separate ticket)

[16:36] <lizmat> ack

[16:36] <[Coke]> NACK

[16:40] <lizmat> ?

[16:43] <[Coke]> just replying to your ack, nothing.

[16:51] <lizmat> ack :-)

[16:55] <[Coke]> lizmat: added untested/unused opcodes to https://github.com/Raku/nqp/issues/686

[16:56] <[Coke]> though now that I've done that, I see that... sqrt_n shows up in the list, but it's in t/

[16:56] <[Coke]> whoops. :)

[16:58] <lizmat> notable6: weekly

[16:58] <notable6> lizmat, 1 note: 2020-11-30T17:07:08Z <patrickb>: https://github.com/Raku/raku.org/issues/155

[17:02] <lizmat> notable6: weekly reset

[17:02] <notable6> lizmat, Moved existing notes to “weekly_2020-12-07T17:02:42Z”

[17:05] <Geth> ¦ nqp: 0dad491aa2 | Coke++ | t/docs/tests.t

[17:05] <Geth> ¦ nqp: Allow for multiple opcodes per line

[17:05] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/0dad491aa2

[17:06] <[Coke]> lizmat: there, that's about 20 that were being tested or used that we properly track now. still 154 opcodes that are documented and not tested/used in build.

[17:07] <lizmat> [Coke]: thanks, will probably look at that tomorrow

[17:07] <lizmat> working on a pretty big RWN now

[17:08] <[Coke]> thanks. as with everything, I'm cheating there, so "improve the test" is always an option.

[17:52] <MasterDuke> [Coke]: i get `Malformed UTF-8 near bytes 00 00 b2  in block <unit> at t/docs/tests.t line 37` when i try to run that doc test

[17:54] <MasterDuke> nm, it was processing .swp files left over from vim

[18:18] *** domidumont left
[19:03] <[Coke]> MasterDuke: feel free to patch it so it's only getting correct extensions. :)

[19:11] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/12/07/2020-49-shaped-shaping-up/

[19:11] <Geth> ¦ nqp: c79f5feb70 | Coke++ | t/docs/tests.t

[19:11] <Geth> ¦ nqp: Search for opscodes with uppercase also

[19:11] <Geth> ¦ nqp: 

[19:11] <Geth> ¦ nqp: MasterDuke17++

[19:11] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/c79f5feb70

[19:17] <[Coke]> MasterDuke: fixed the case issue you id'd, thanks.

[19:19] *** [Tux] left
[19:29] *** [Tux] joined
[19:30] *** [TuxCM] joined
[19:32] *** [TuxCM] left
[19:33] *** [TuxCM] joined
[19:40] <MasterDuke> [Coke]: thanks, had to take a break for dinner and putting kids to bed

[19:50] <lizmat> afk for a few hours&

[19:59] *** maggotbrain left
[20:06] *** morayj left
[20:45] *** [TuxCM] left
[20:50] *** morayj joined
[20:50] *** [TuxCM] joined
[20:51] *** morayj left
[21:02] <[TuxCM]> I just upped my home PC from openSUSE 15.1 to openSUSE 15.2. I hope it does not have any impact on the timings

[22:02] *** AlexDaniel` left
[22:06] *** morayj joined
[22:09] *** Kaiepi left
[22:10] *** Kaiepi joined
[22:32] *** AlexDaniel` joined
[22:45] *** morayj left
[23:53] *** Xliff left
