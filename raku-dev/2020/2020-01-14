[00:07] *** patrickz joined
[00:10] *** sena_kun joined
[00:11] *** patrickb left
[00:12] *** Altai-man_ left
[00:24] *** patrickz left
[01:27] <AlexDaniel> m: my uint64 $x; $x = 2⁶⁴-1; say $x

[01:27] <camelia> rakudo-moar 0e9f96ea9: OUTPUT: «-1␤»

[01:27] <AlexDaniel> :S

[02:09] *** Altai-man_ joined
[02:12] *** sena_kun left
[04:10] *** sena_kun joined
[04:12] *** Altai-man_ left
[05:28] *** squashable6 left
[05:29] *** squashable6 joined
[05:29] *** squashable6 left
[05:31] *** squashable6 joined
[05:56] *** [Coke] left
[06:09] *** Altai-man_ joined
[06:12] *** sena_kun left
[08:01] *** quotable6 left
[08:01] *** bloatable6 left
[08:01] *** nativecallable6 left
[08:01] *** committable6 left
[08:01] *** sourceable6 left
[08:01] *** releasable6 left
[08:01] *** bisectable6 left
[08:01] *** greppable6 left
[08:01] *** reportable6 left
[08:01] *** notable6 left
[08:01] *** unicodable6 left
[08:01] *** benchable6 left
[08:01] *** coverable6 left
[08:01] *** statisfiable6 left
[08:01] *** shareable6 left
[08:01] *** squashable6 left
[08:02] *** squashable6 joined
[08:02] *** nativecallable6 joined
[08:03] *** sourceable6 joined
[08:03] *** notable6 joined
[08:03] *** committable6 joined
[08:03] *** quotable6 joined
[08:03] *** reportable6 joined
[08:03] *** releasable6 joined
[08:03] *** statisfiable6 joined
[08:04] *** benchable6 joined
[08:04] *** shareable6 joined
[08:04] *** bisectable6 joined
[08:04] *** bloatable6 joined
[08:04] *** coverable6 joined
[08:04] *** greppable6 joined
[08:04] *** unicodable6 joined
[08:10] *** sena_kun joined
[08:12] *** Altai-man_ left
[08:49] <lizmat> Files=1295, Tests=109679, 210 wallclock secs (28.36 usr  8.33 sys + 2937.42 cusr 275.30 csys = 3249.41 CPU)

[10:09] *** Altai-man_ joined
[10:12] *** sena_kun left
[12:10] *** sena_kun joined
[12:12] *** Altai-man_ left
[12:30] <Geth> ¦ rakudo: 8cfa659017 | (Elizabeth Mattijsen)++ | src/core.c/StrDistance.pm6

[12:30] <Geth> ¦ rakudo: Remove unneeded BUILD method

[12:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8cfa659017

[13:15] *** [Coke] joined
[13:15] *** [Coke] left
[13:15] *** [Coke] joined
[13:19] *** domidumont joined
[13:21] *** lucasb joined
[14:03] <Geth> ¦ rakudo/is-built: e76f8e4d3e | (Elizabeth Mattijsen)++ | 7 files

[14:03] <Geth> ¦ rakudo/is-built: Implementation of the "is built" attribute trait

[14:03] <Geth> ¦ rakudo/is-built: 

[14:03] <Geth> ¦ rakudo/is-built: has $!a is built;   # allow setting of private attribute in .new

[14:03] <Geth> ¦ rakudo/is-built:   has $.b is built(False);  # do *not* allow setting of public attribute in new

[14:03] <Geth> ¦ rakudo/is-built: review: https://github.com/rakudo/rakudo/commit/e76f8e4d3e

[14:09] *** Altai-man_ joined
[14:12] *** sena_kun left
[14:25] <lizmat> .tell <uzl[m]> I've left some comments with the gist

[14:25] <tellable6> lizmat, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Tellable

[14:25] <lizmat> .tell uzl[m] I've left some comments with the gist

[14:25] <tellable6> lizmat, I'll pass your message to uzl[m]

[14:35] *** Guest78373 left
[14:50] <Geth> ¦ rakudo/is-built: 98abd6a730 | (Elizabeth Mattijsen)++ | 7 files

[14:50] <Geth> ¦ rakudo/is-built: Rename is_settable attribute to is_built

[14:50] <Geth> ¦ rakudo/is-built: review: https://github.com/rakudo/rakudo/commit/98abd6a730

[14:52] <Geth> ¦ rakudo: lizmat++ created pull request #3423: Is built

[14:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3423

[14:52] <lizmat> argh, that was too quick

[15:07] <vrurg> lizmat: not sure renaming the method would avoid the problem with NQPAttr

[15:13] <vrurg> lizmat: I think the problem is in .say being called on HOW which is a NQP class. NQPAttribute has has_accessor method as a stub – thus everything just worked with has_accessor. 

[15:14] <vrurg> lizmat: you'd either need to add 'is_settable' on NQPAttribute in NQP or check for the attribute type.

[15:17] *** pmurias joined
[15:30] <Kaiepi> m: sub foo(|bar) { }; say &foo.signature.params[0].perl

[15:30] <camelia> rakudo-moar 8cfa65901: OUTPUT: «|bar is raw␤»

[15:30] <Kaiepi> shouldn't this be |bar instead?

[15:31] <lizmat> vrurg: already tried adding a stub to NQPAttribute

[15:31] <lizmat> vrurg: BTW renaming was not intended to fix the problem, just to get more consistency

[15:32] <vrurg> lizmat: I realized it a bit later. :) Just was passing by and saw the commit.

[15:48] *** Guest78373 joined
[15:50] <Geth> ¦ nqp: 6361e0965a | (Elizabeth Mattijsen)++ | src/how/NQPAttribute.nqp

[15:50] <Geth> ¦ nqp: Add NQPAttribute.is_built method

[15:50] <Geth> ¦ nqp: 

[15:50] <Geth> ¦ nqp: This appears to be the reason seeing failures in the 'is-built' Rakudo

[15:50] <Geth> ¦ nqp: branch.

[15:50] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/6361e0965a

[15:54] <lizmat> ok, turns out that adding the method to NQPAttribute *does* fix it

[15:56] <Geth> ¦ rakudo: e81b0b686d | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[15:56] <Geth> ¦ rakudo: Bump NQP to get NQPAttribute.is_built method stub

[15:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e81b0b686d

[15:56] <Geth> ¦ rakudo: e76f8e4d3e | (Elizabeth Mattijsen)++ | 7 files

[15:56] <Geth> ¦ rakudo: Implementation of the "is built" attribute trait

[15:56] <Geth> ¦ rakudo: 

[15:56] <Geth> ¦ rakudo: has $!a is built;   # allow setting of private attribute in .new

[15:56] <Geth> ¦ rakudo:   has $.b is built(False);  # do *not* allow setting of public attribute in new

[15:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e76f8e4d3e

[15:56] <Geth> ¦ rakudo: 98abd6a730 | (Elizabeth Mattijsen)++ | 7 files

[15:56] <Geth> ¦ rakudo: Rename is_settable attribute to is_built

[15:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/98abd6a730

[15:56] <Geth> ¦ rakudo: da9929c89c | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 7 files

[15:56] <Geth> ¦ rakudo: Merge pull request #3423 from rakudo/is-built

[15:56] <Geth> ¦ rakudo: 

[15:56] <Geth> ¦ rakudo: Implementation of the "is built" attribute trait

[15:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/da9929c89c

[16:10] *** sena_kun joined
[16:12] *** Altai-man_ left
[16:13] *** pmurias left
[16:26] *** domidumont left
[16:29] *** Geth left
[16:36] *** Geth joined
[16:43] *** Kaiepi left
[16:44] *** Kaiepi joined
[17:06] *** ab5tract joined
[17:07] <ab5tract> flapping NativeCall tests hurt my brain :(

[17:07] <tellable6> 2019-12-10T11:42:25Z #raku <tbrowder> ab6tract when i actually started designing a check-file sub it was not as simple as i first imagined, but, for my use cases, it's becoming clearer

[17:07] <tellable6> 2019-12-11T12:09:04Z #raku <tbrowder> ab6tract i have a usable version of CheckFile that suits most of my use cases, but it may not suit other users

[17:19] <Xliff> ab5tract: Mine too. I deal with them constantly with p6-GtkPlus...

[17:21] <ab5tract> Xliff: so I shouldn't be taking it personally against my implementation I guess ... 

[17:21] <ab5tract> not sure if that is good or bad news :/

[17:21] <Xliff> nine / jnthn: OK. So what you are telling me is that it's safe to leave .lock files littering the .precomp dir. I *think* I am finally understanding. 

[17:22] <Xliff> nine / jnthn: Are there any facilities for such in nqp, or is it only a Perl6 thing?

[17:23] <lizmat> Perl6 ?

[17:23] <lizmat> :-)

[17:24] <Xliff>  /o\

[17:24] <Xliff> Keep whacking me with that nerfbat, lizmat++.... I will get there eventually.

[17:24] <Xliff> :)

[17:24] <lizmat> :-)

[17:25] <Xliff> So who is going to Texas this summer?

[17:25] <Xliff> lizmat: I take it you are skipping? :(

[17:26] <lizmat> yes, I had 3 reasons not to go

[17:26] <Xliff> You've intimated a few of those. I think.

[17:26] <lizmat> 1 is solved (the name), 3 is being solved (how to handle CoC violations)

[17:27] <lizmat> 2 is not solvable for the foreseeable future, in any case not as long as there's a cheeto in the white house

[17:35] <Xliff> Yup! That's the one. I understand, completely. You are singing to the choir.

[17:35] <Xliff> Hence the reason I think it might be better to get out of the States for a P-R conference.

[17:35] <Xliff> Even though I have to jump through a lot more hoops. The main one being: a valid Passport.

[17:40] <lizmat> yeah, that can be troublesome in the US

[17:41] <Xliff> m: use NativeCall; subset StrOrUint where Str | uint32; my StrOrUint $x = -2.31'

[17:41] <camelia> rakudo-moar da9929c89: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3re Str | uint32; my StrOrUint $x = -2.317⏏5'␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤…»

[17:41] <Xliff> m: use NativeCall; subset StrOrUint where Str | uint32; my StrOrUint $x = -2.31;'

[17:41] <camelia> rakudo-moar da9929c89: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in single quotes; couldn't find final "'" (corresponding starter was at line 1)␤at <tmp>:1␤------> 3 Str | uint32; my StrOrUint $x = -2.31;'7⏏5<EOL>␤    expecting …»

[17:41] <Xliff> m: use NativeCall; subset StrOrUint where Str | uint32; my StrOrUint $x = -2.31;

[17:41] <camelia> rakudo-moar da9929c89: OUTPUT: «Type check failed in assignment to $x; expected StrOrUint but got Rat (-2.31)␤  in block <unit> at <tmp> line 1␤␤»

[17:41] <Xliff> m: use NativeCall; subset StrOrUint where Str | uint32; my StrOrUint $x = '2.31';

[17:41] <camelia> rakudo-moar da9929c89: ( no output )

[17:41] <Xliff> m: use NativeCall; subset StrOrUint where Str | uint32; my StrOrUint $x = -231;

[17:41] <camelia> rakudo-moar da9929c89: OUTPUT: «Type check failed in assignment to $x; expected StrOrUint but got Int (-231)␤  in block <unit> at <tmp> line 1␤␤»

[17:43] <Xliff> m: use NativeCall; subset StrOrUint where Str | uint32; my StrOrUint $x = uint32(-231);

[17:43] <camelia> rakudo-moar da9929c89: OUTPUT: «Cannot invoke this object (REPR: P6int; uint32)␤  in block <unit> at <tmp> line 1␤␤»

[17:43] <Xliff> Hmmm...

[17:43] <Xliff> NativeCall literals for uint/int*??

[17:46] <Xliff> m: use NativeCall; subset StrOrUint where Str | uint32; my uint32 $ni = -231; my StrOrUint $x = $a;

[17:46] <camelia> rakudo-moar da9929c89: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$a' is not declared␤at <tmp>:1␤------> 3my uint32 $ni = -231; my StrOrUint $x = 7⏏5$a;␤»

[17:46] <Xliff> : use NativeCall; subset StrOrUint where Str | uint32; my uint32 $ni = -231; my StrOrUint $x = $ni;

[17:46] <Xliff> m: use NativeCall; subset StrOrUint where Str | uint32; my uint32 $ni = -231; my StrOrUint $x = $ni;

[17:46] <camelia> rakudo-moar da9929c89: OUTPUT: «Type check failed in assignment to $x; expected StrOrUint but got Int (4294967065)␤  in block <unit> at <tmp> line 1␤␤»

[17:46] <Xliff> ?!??!?

[17:46] <Xliff> bisectable: use NativeCall; subset StrOrUint where Str | uint32; my uint32 $ni = -231; my StrOrUint $x = $ni;

[17:46] <bisectable6> Xliff, Bisecting by output (old=2015.12 new=da9929c) because on both starting points the exit code is 1

[17:47] <Xliff> jnthn: Might this be a problem? ^^

[17:48] <bisectable6> Xliff, bisect log: https://gist.github.com/f7ee65db703c389b1e7f295cd1b71e90

[17:48] <bisectable6> Xliff, (2016-02-18) https://github.com/rakudo/rakudo/commit/9983c2c8434ed81c532a5706996f284283b48d0a

[18:09] *** Altai-man_ joined
[18:12] *** sena_kun left
[18:20] <Geth> ¦ roast: 6a14ff87f9 | (Elizabeth Mattijsen)++ | S12-attributes/class.t

[18:20] <Geth> ¦ roast: Add tests for Attribute "is built" trait

[18:20] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6a14ff87f9

[18:23] <Geth> ¦ rakudo: 826c3ead82 | (Elizabeth Mattijsen)++ | src/core.c/Exception.pm6

[18:23] <Geth> ¦ rakudo: Make searching for method name suggestions a bit more resilient

[18:23] <Geth> ¦ rakudo: 

[18:23] <Geth> ¦ rakudo: Some bugs, especially when dealing with the setting and additions,

[18:23] <Geth> ¦ rakudo: can cause strange types of values to occur.  Make sure that StrDistance

[18:23] <Geth> ¦ rakudo: only gets strings, and that the suggestion is stored as a string.

[18:23] <Geth> ¦ rakudo: This should have made searching for the "is_built" problem a *lot*

[18:23] <Geth> ¦ rakudo: easier.

[18:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/826c3ead82

[19:09] <Geth> ¦ rakudo/master: 5 commits pushed by (Elizabeth Mattijsen)++

[19:09] <Geth> ¦ rakudo/master: 53e5235cbb | Split history Supply.pm6 to Supply-factories.pm6

[19:09] <Geth> ¦ rakudo/master: 46d31098d9 | Split history Supply.pm6 to Supply-factories.pm6

[19:09] <Geth> ¦ rakudo/master: 8a505e1082 | Split history Supply.pm6 to Supply-factories.pm6

[19:09] <Geth> ¦ rakudo/master: cca7f568a7 | Split history Supply.pm6 to Supply-factories.pm6

[19:09] <Geth> ¦ rakudo/master: e3a9d641e1 | Separate Supply factories into a separate file

[19:09] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/826c3ead8208...e3a9d641e100

[19:19] <Geth> ¦ rakudo/master: 5 commits pushed by (Elizabeth Mattijsen)++

[19:19] <Geth> ¦ rakudo/master: 1f684771d9 | Split history Supply-factories.pm6 to Supply-coercers.pm6

[19:19] <Geth> ¦ rakudo/master: fa020ab883 | Split history Supply-factories.pm6 to Supply-coercers.pm6

[19:19] <Geth> ¦ rakudo/master: 3a4260c9bb | Split history Supply-factories.pm6 to Supply-coercers.pm6

[19:19] <Geth> ¦ rakudo/master: 717a2a0527 | Split history Supply-factories.pm6 to Supply-coercers.pm6

[19:19] <Geth> ¦ rakudo/master: a81b28a4d4 | Separate Supply coercers into a separate file

[19:19] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/e3a9d641e100...a81b28a4d46e

[19:30] *** rypervenche left
[19:31] *** maettu left
[19:34] *** rypervenche joined
[19:36] <Geth> ¦ rakudo/default-degree: 9fd29cd2c3 | (Elizabeth Mattijsen)++ | src/core.c/Iterable.pm6

[19:36] <Geth> ¦ rakudo/default-degree: Make default degree for hyper/batch make more sense

[19:36] <Geth> ¦ rakudo/default-degree: 

[19:36] <Geth> ¦ rakudo/default-degree: Currently, the default :degree for .hyper / .race is set to 4.  This

[19:36] <Geth> ¦ rakudo/default-degree: may be too high for small single core CPU's, and to small for bigger

[19:36] <Geth> ¦ rakudo/default-degree: beasts (such as my MBP with 2x8 cores).  Set the default to the number

[19:36] <Geth> ¦ rakudo/default-degree: of CPU cores available, and introduce the $*DEGREE dynamic variable

[19:36] <Geth> ¦ rakudo/default-degree: for setting the default for a given scope.

[19:36] <Geth> ¦ rakudo/default-degree: review: https://github.com/rakudo/rakudo/commit/9fd29cd2c3

[19:36] <Geth> ¦ rakudo: lizmat++ created pull request #3424: Make default degree for hyper/batch make more sense

[19:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3424

[20:11] *** sena_kun joined
[20:12] *** Altai-man_ left
[20:12] <Geth> ¦ rakudo/default-degree: 5def05c9a8 | (Elizabeth Mattijsen)++ | src/core.c/Iterable.pm6

[20:12] <Geth> ¦ rakudo/default-degree: Set default degree to cpucores - 1 (with a minumum of 1)

[20:12] <Geth> ¦ rakudo/default-degree: review: https://github.com/rakudo/rakudo/commit/5def05c9a8

[20:44] <nine> Xliff: yes, leaving behind .lock files is OK. But maybe we can do without as we may be able to take the lock on any of the involved files. But if in doubt, use a dedicated lock file. We can always try to get rid of it once we got things working

[20:48] <nine> Xliff: btw. there's actually no good reason for making the lock files hidden. That the repo's one is is just a historical artefact (which is fancy for "I didn't think all that much about it when I did it")

[21:12] *** squashable6 left
[21:13] *** squashable6 joined
[21:19] *** pmurias joined
[21:24] <Geth> ¦ rakudo: 81311a209c | (Ben Davies)++ | src/core.c/Parameter.pm6

[21:24] <Geth> ¦ rakudo: Fix error when calling Parameter.usage-name on unnamed parameters

[21:24] <Geth> ¦ rakudo: 

[21:24] <Geth> ¦ rakudo: This now returns Nil like Parameter.name does in this case.

[21:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/81311a209c

[21:28] *** |Tux| left
[21:28] <Xliff> nine: What about the possibility of using a randomly generated temporary name for the --output phase? This way much of the locking can be avoided?

[21:30] <Xliff> By output phase, I mean here: https://github.com/rakudo/rakudo/blob/master/src/core.c/CompUnit/PrecompilationRepository.pm6#L289

[21:30] <Xliff> Locking would have to be performed, here: https://github.com/rakudo/rakudo/blob/master/src/core.c/CompUnit/PrecompilationRepository.pm6#L351

[21:32] <Geth> ¦ rakudo: f08cd00fcd | (Ben Davies)++ | src/core.c/Parameter.pm6

[21:32] <Geth> ¦ rakudo: Remove redundant "is raw" for capture parameters in Parameter.raku

[21:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f08cd00fcd

[21:33] <Xliff> nine: Temporary name generator implementtion is here: https://gist.github.com/Xliff/ca96e9b018fadf0716e86facf4471502

[21:34] <Xliff> ...and now... I nap!

[21:38] <lizmat> Kaiepi++

[21:39] <Geth> ¦ rakudo: 9b29bcc4bb | (Elizabeth Mattijsen)++ | src/core.c/Supply-factories.pm6

[21:39] <Geth> ¦ rakudo: Implememt fully functional Supply.split

[21:39] <Geth> ¦ rakudo: 

[21:39] <Geth> ¦ rakudo: With the same API as Str.split.  Remove previously prematurely

[21:39] <Geth> ¦ rakudo: optimized version and replace it with a wrapper around Str.split.

[21:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9b29bcc4bb

[21:39] <Geth> ¦ roast: f9ce5c675d | (Elizabeth Mattijsen)++ | S17-supply/split.t

[21:39] <Geth> ¦ roast: Expand Supply.split testing with regexen

[21:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f9ce5c675d

[21:42] <Geth> ¦ rakudo: 68808c54e3 | (Ben Davies)++ | src/core.c/Parameter.pm6

[21:42] <Geth> ¦ rakudo: Fix signature of Parameter.BUILD

[21:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/68808c54e3

[21:47] <Geth> ¦ rakudo/default-degree: 6314277844 | (Elizabeth Mattijsen)++ | src/core.c/Iterable.pm6

[21:47] <Geth> ¦ rakudo/default-degree: Drop the idea of $*DEGREE for now

[21:47] <Geth> ¦ rakudo/default-degree: review: https://github.com/rakudo/rakudo/commit/6314277844

[21:47] <Geth> ¦ rakudo/master: 4 commits pushed by (Elizabeth Mattijsen)++

[21:47] <Geth> ¦ rakudo/master: 9fd29cd2c3 | Make default degree for hyper/batch make more sense

[21:47] <Geth> ¦ rakudo/master: 5def05c9a8 | Set default degree to cpucores - 1 (with a minumum of 1)

[21:47] <Geth> ¦ rakudo/master: 6314277844 | Drop the idea of $*DEGREE for now

[21:47] <Geth> ¦ rakudo/master: bfc7182406 | Merge pull request #3424 from rakudo/default-degree

[21:47] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/68808c54e350...bfc718240693

[21:50] <Geth> ¦ rakudo: 3f51728de1 | (Elizabeth Mattijsen)++ | src/core.c/Iterable.pm6

[21:50] <Geth> ¦ rakudo: Oops, it should be the max, not the min!

[21:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3f51728de1

[22:03] *** |Tux| joined
[22:09] *** Altai-man_ joined
[22:12] *** sena_kun left
[22:19] <Geth> ¦ rakudo: 348d54dfa7 | (Elizabeth Mattijsen)++ | src/core.c/Supply-factories.pm6

[22:19] <Geth> ¦ rakudo: Implement Supply.comb()

[22:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/348d54dfa7

[22:20] <Geth> ¦ roast: d99082d565 | (Elizabeth Mattijsen)++ | S17-supply/comb.t

[22:20] <Geth> ¦ roast: Add tests for Supply.comb()

[22:20] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d99082d565

[22:23] <Geth> ¦ roast: b1d25cfdb7 | (Elizabeth Mattijsen)++ | spectest.data

[22:23] <Geth> ¦ roast: Make sure we run tyhe Supply.comb tests

[22:23] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b1d25cfdb7

[22:25] <lizmat> and that concludes my hacking for today&

[22:42] *** ab5tract left
