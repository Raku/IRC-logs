[00:02] *** reportable6 left
[00:03] *** reportable6 joined
[00:33] *** leont left
[00:47] *** elcaro joined
[00:48] <elcaro> FYI, I rebuilt rakudo, probably last update was on Thursday/Friday. Now running REPL spits out error when it starts

[00:48] <elcaro> Use of uninitialized value element[0] of type Any in string context in any protect at gen/moar/stage2/NQPCORE.setting line 1216

[00:49] <elcaro> so most likely caused by some update in last 2 days

[00:50] <AlexDaniel> m: run ‘perl6’

[00:50] <camelia> rakudo-moar 8ae2106f1: OUTPUT: «5===SORRY!5=== Error while compiling -␤Missing infix inside hyper␤at -:1␤------> 3»7⏏5Wann treffen wir drei wieder zusamm?«␤    expecting any of:␤        infix␤        infix stopper␤The spawned command 'perl6' exited unsucces…»

[00:51] <AlexDaniel> m: run <perl6 -e>, ‘run ‘perl6’’

[00:51] <camelia> rakudo-moar 8ae2106f1: OUTPUT: «5===SORRY!5=== Error while compiling -␤Missing infix inside hyper␤at -:1␤------> 3»7⏏5Wann treffen wir drei wieder zusamm?«␤    expecting any of:␤        infix␤        infix stopper␤The spawned command 'perl6' exited unsucces…»

[00:51] <AlexDaniel> m: slurp; run <perl6 -e>, ‘run ‘perl6’’

[00:51] <camelia> rakudo-moar 8ae2106f1: ( no output )

[00:51] <AlexDaniel> e: slurp; run <perl6 -e>, ‘run ‘perl6’’

[00:51] <evalable6> AlexDaniel, rakudo-moar 8ae2106f1: OUTPUT: «»

[00:52] <AlexDaniel> okay that doesn't work of course

[00:57] <elcaro> rolled back to aed658d and the error's gone... so it's one of the commits in the past 12 hours

[01:00] <AlexDaniel> elcaro: can you bisect it? :)

[01:06] *** squashable6 left
[01:08] *** squashable6 joined
[01:08] <elcaro> will do

[01:09] <elcaro> just listening to my company's COVID-19 updates right now :/

[01:16] *** Altai-man_ joined
[01:18] *** sena_kun left
[01:30] <elcaro> AlexDaniel: 86bc3b3 is the culprit

[01:30] <AlexDaniel> 86bc3b3

[01:30] <AlexDaniel> hmmmm

[01:30] <AlexDaniel> 86bc3b3d29

[01:30] <linkable6> (2020-03-15) https://github.com/rakudo/rakudo/commit/86bc3b3d29 Remove unnecessary implementation detail

[01:30] <AlexDaniel> yeah, too short for the bot to pick up :)

[01:31] <AlexDaniel> elcaro: can you file a ticket?

[01:31] <elcaro> sure

[01:47] <elcaro> #3552

[02:54] <AlexDaniel> R#3552

[02:54] <linkable6> R#3552 [open]: https://github.com/rakudo/rakudo/issues/3552 Errors on REPL launch

[03:09] *** b2gills joined
[03:16] *** sena_kun joined
[03:18] *** Altai-man_ left
[05:16] *** Altai-man_ joined
[05:18] *** sena_kun left
[07:16] *** sena_kun joined
[07:18] *** Altai-man_ left
[07:57] *** leont joined
[08:03] <nine> Looks like repl.t is consistently failing now: https://build.opensuse.org/package/live_build_log/home:niner9:rakudo-git/rakudo/openSUSE_Leap_15.2/x86_64 

[08:03] <nine> https://build.opensuse.org/package/live_build_log/home:niner9:rakudo-git/rakudo/openSUSE_Tumbleweed/x86_64

[08:03] <nine> https://build.opensuse.org/package/live_build_log/home:niner9:rakudo-git/rakudo/openSUSE_Tumbleweed/i586

[08:10] <sena_kun> how can all tests pass when using `prove --jobs=4 -e "raku -Ilib" t/` but with `zef test .` some (not all) tests die with a proper object being treated as, eh, a Stash? going afk before $dayjob, maybe anyone can take a look at https://github.com/Altai-man/perl6-Perl6-Parser ? This is just bizarre and looks like something is wrong with either rakudo or zef (I'd bet on rakudo).

[08:12] <sena_kun> https://gist.github.com/Altai-man/f7931a05752a39e3ce0f38f28a070a45 is the log

[08:19] *** stoned75 left
[08:28] <lizmat> Files=1305, Tests=111216, 207 wallclock secs (28.20 usr  8.38 sys + 2892.74 cusr 275.34 csys = 3204.66 CPU)

[08:47] <leont> Could be a number of things

[08:48] <leont> I think zef sets PERL6LIB, which means its also passed to child processes

[08:48] <leont> What does «PERL6LIB=lib prove --jobs=4 -e raku t/» do?

[08:52] *** stoned75 joined
[09:16] *** Altai-man_ joined
[09:17] <nine> lizmat: first repl.t failure was yesterday 20:05 UTC+1. So must be a change shortly before that

[09:18] *** sena_kun left
[09:18] <lizmat> I think we have an issue and an offending commit: https://github.com/rakudo/rakudo/issues/3552

[09:20] <nine> lizmat: ah, very well. What an odd issue

[09:20] <Geth> ¦ rakudo: d3385e73c4 | (Elizabeth Mattijsen)++ | 7 files

[09:20] <Geth> ¦ rakudo: Revert "Remove unnecessary implementation detail"

[09:20] <Geth> ¦ rakudo: 

[09:20] <Geth> ¦ rakudo: This reverts commit 86bc3b3d296fde7330b9ab17ce74f101ae07b9b9.

[09:20] <Geth> ¦ rakudo: 

[09:20] <Geth> ¦ rakudo: This appears to be breaking REPL startup on linuxen

[09:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d3385e73c4

[09:20] <nine> FWIW I can't reproduce it locally on Linux either, but it fails all the time on the OBS

[09:20] <lizmat> on MacOS it's fine

[09:21] <lizmat> anyways, it was part of a cleanup: we've been living with that "dirt" for many years... so a little longer won't hurt

[09:24] *** hungrydonkey joined
[09:25] * lizmat will be busy with the RWN first

[09:28] <Altai-man_> `PERL6LIB=lib prove --jobs=4 -e raku t/` passes fine. :S

[09:48] <lizmat> afk for a few hours&

[09:53] <rba> sena_kun: I have installed libperl-dev Ubuntu/Debian package on blin server. May you check if this resolved the dependency for Inline::Perl5. (Sorry for the delay...)

[09:53] <tellable6> rba, I'll pass your message to sena_kun

[09:56] <rba> Altai-man_: I have installed libperl-dev Ubuntu/Debian package on blin server. May you check if this resolved the dependency for Inline::Perl5. (Sorry for the delay...)

[09:56] <tellable6> 2020-03-15T11:52:54Z #raku-dev <sena_kun> rba hi! Can you please install perl-dev (or how is it called) to the blin server, so -lperl flag was supported to build Inline::Perl5 there?

[09:56] <tellable6> 2020-03-15T23:42:43Z #raku-dev <patrickb> rba I uploaded rakubrew v6 (https://patszim.volans.uberspace.de/patcloud/index.php/s/qmkreEJLQDZcjbf). Upload at your convenience. :-)

[09:56] <tellable6> 2020-03-15T23:43:08Z #raku-dev <patrickb> rba Also I have a new version of the rakubrew.org website. Can you bump that?

[09:56] <Altai-man_> let's see...

[09:58] *** hungrydonkey left
[09:58] <Altai-man_> rba, installs fine now, thanks!

[09:58] <rba> Altai-man_: cool.

[10:10] *** hungrydonkey joined
[10:13] <rba> patrickb: rakubrew.org is on v6, running on the newest container build from rakubrew.org:master github repo.

[10:13] <tellable6> rba, I'll pass your message to patrickb

[10:16] *** hungrydonkey left
[10:20] *** ufobat joined
[10:55] *** ufobat_ joined
[10:56] *** ufobat left
[10:58] *** ufobat_ left
[11:10] <AlexDaniel> Altai-man_: what a fruitful run!

[11:11] <leont> Also, IMHO people should be using prove6 instead of prove in general. It's silly to depend on perl for raku testing.

[11:13] <AlexDaniel> why

[11:14] <AlexDaniel> we still depend on it to compile rakudo, don't we?

[11:15] <lizmat> AlexDaniel: yeah, and that will have to change

[11:16] *** ufobat joined
[11:16] <lizmat> as the main reason: perl being available on all OSes, is becoming less and less true

[11:16] <AlexDaniel> okay then something changed while I was away :D

[11:16] <AlexDaniel> last time we talked about this everyone was like “meh, it works, no need to change it”

[11:17] *** sena_kun joined
[11:17] <leont> Also, most users of raku shouldn't be compiling their own rakudo

[11:18] <leont> Needing it for testing means the dependency affect many more people

[11:18] *** Altai-man_ left
[11:20] <sena_kun> I don't really mind using prove or prove6 or just running files by hands, the problem is that zef test fails.

[11:20] <tellable6> 2020-03-16T09:53:59Z #raku-dev <rba> sena_kun: I have installed libperl-dev Ubuntu/Debian package on blin server. May you check if this resolved the dependency for Inline::Perl5. (Sorry for the delay...)

[11:21] <sena_kun> While running files on their own is successul, which is... odd.

[11:49] <lizmat> notable6: weekly

[11:49] <notable6> lizmat, 2 notes: 2020-03-13T17:10:30Z <lizmat>: https://grants.perlfoundation.org  ;  2020-03-14T22:18:04Z <lizmat>: https://www.facebook.com/groups/raku.perl6/permalink/2593278287605181/

[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:04] *** MasterDuke left
[13:18] *** sena_kun left
[13:19] *** sena_kun joined
[14:08] *** hungrydonkey joined
[14:29] <[Tux]> Rakudo version 2020.02.1-193-gd3385e73c - MoarVM version 2020.02.1-45-g2252a95df

[14:29] <[Tux]> csv-test-xs-20      0.369 -  0.372

[14:29] <[Tux]> csv-ip5xs           0.720 -  0.786

[14:29] <[Tux]> test-t --race       0.930 -  0.958

[14:29] <[Tux]> test-t              1.950 -  1.982

[14:29] <[Tux]> csv-ip5xs-20        6.238 -  6.268

[14:29] <[Tux]> test                8.463 -  8.948

[14:29] <[Tux]> test-t-20 --race    9.939 - 10.003

[14:29] <[Tux]> csv-parser         26.769 - 27.542

[14:29] <[Tux]> test-t-20          33.041 - 33.405

[14:38] *** leont left
[14:42] *** squashable6 left
[14:45] *** squashable6 joined
[15:18] *** Altai-man_ joined
[15:21] *** sena_kun left
[16:00] *** lucasb joined
[16:16] *** stoned75 left
[16:21] *** hungrydonkey left
[16:43] <lizmat> notable6: weekly reset

[16:43] <notable6> lizmat, Moved existing notes to “weekly_2020-03-16T16:43:48Z”

[17:03] *** stoned75 joined
[17:19] *** sena_kun joined
[17:21] *** Altai-man_ left
[17:36] *** stoned75 left
[17:57] *** Xliff joined
[18:00] <Xliff> Can someone help me with a simple Cro app?

[18:00] <sena_kun> Xliff, maybe I can? also, #cro

[18:00] <Xliff> I have the routes right, but so far I am not getting any output from any of the controllers.

[18:00] <Xliff> sena_kun: http://github.com/Xliff/p6-RouterProject

[18:01] <Xliff> Why are my routes not showing up. I can point to the controllers but I just get a blank page.

[18:02] <sena_kun> Xliff, I don't think that's how `include` work, can you try `include routes1` then `include routes2` etc?

[18:02] <sena_kun> https://github.com/Xliff/p6-RouterProject/blob/master/lib/Routes.pm6#L17

[18:03] <sena_kun> here, instead of passing them as an array

[18:03] <jnthn> I think the array of pairs probably should work, fwiw

[18:03] <jnthn> The key is the prefix to add to the routes

[18:03] <sena_kun> jnthn, even if it should, we can narrow the problem scope if know separate includes work

[18:03] <jnthn> Sure :)

[18:04] <jnthn> Xliff: What URLs are you trying? Blank page suggests 404 (try it with curl -v or some such to see the status code)

[18:04] *** stoned75 joined
[18:05] <Xliff> When I run the app, I can see all pages return 200, but no output.

[18:05] <Xliff> The slip is working.

[18:05] <sena_kun> https://github.com/Xliff/p6-RouterProject/blob/master/lib/Common.pm6#L6 looks suspicious, if you do just `content 'text/plain', 'foo'` it works?

[18:06] <Xliff> Wow. loading takes for ever.

[18:06] <Xliff> OK. Just 'foo' works. Odd.

[18:07] <sena_kun> then `warn $your-code-here` and see what it ends up there

[18:08] <Xliff> :S

[18:08] <Xliff> Does &?ROUTINE work in a pointy block?

[18:09] <jnthn> Well, it means the enclosing routine, and a pointy block is not a routine

[18:09] <jnthn> Did you mean &?BLOCK?

[18:09] <Xliff> my $a = -> 'two', 'three' { &?BLOCK.signature.params.map( *.gist.Str ).join(', ') }; $a('two', 'three')

[18:09] <Xliff> m: my $a = -> 'two', 'three' { &?BLOCK.signature.params.map( *.gist.Str ).join(', ') }; $a('two', 'three')

[18:09] <camelia> rakudo-moar d3385e73c: ( no output )

[18:09] <Xliff> m: my $a = -> 'two', 'three' { &?BLOCK.signature.params.map( *.gist.Str ).join(', ').say }; $a('two', 'three')

[18:09] <camelia> rakudo-moar d3385e73c: OUTPUT: «"two", "three"␤»

[18:10] <Xliff> Excellent!

[18:11] <Xliff> jnthn++: Yep! It was the &?BLOCK instead of &?ROUTINE, and the array is fine! \o/

[18:12] <Xliff> Now... jnthn and sena_kun... what's the best way to remove a route from Cro?

[18:15] *** stoned75 left
[18:16] <sena_kun> based on what I saw in Router.pm6, this isn't really possible

[18:17] <sena_kun> Xliff, what do you want to do?

[18:17] <sena_kun> maybe just a very generic route with a smart `where` clause will do

[18:19] <jnthn> You can't really remove one, but you can probably hide it by writing a `route` block that matches the route you want to hide, and then delegates everything else

[18:19] <jnthn> Then just `not-found` or so in the body of the handler

[18:29] *** ilogger2 joined
[18:37] <jnthn> Xliff: If you want to do this across a bunch of routes, maybe `before { not-found if $hidden }` is better than putting something in all of them

[18:37] *** pmurias joined
[18:37] <pmurias> bartolin_: ping

[18:41] <bartolin_> pmurias: hi

[18:55] * bartolin_ will be back later

[19:18] *** Altai-man_ joined
[19:26] <Xliff> jnthn: Ooh! That's a big help, thanks!

[19:27] <Xliff> jnthn: Does before need to be in the route block?

[19:34] *** MasterDuke joined
[19:35] <jnthn> Yes

[19:36] <Xliff> When I add that, I get "Can only use 'include' with 'route' block, not a Cro::CompositeTransform::WithConnectionState"

[19:38] <Xliff> https://github.com/Xliff/p6-RouterProject/blob/master/lib/Router1.pm6

[19:39] <Xliff> Should before use a pointy?

[19:43] <lizmat> A very sad Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/03/16/2020-11-farewell-good-friend/

[19:43] <Xliff> OMG!

[19:43] <Xliff> :(

[19:55] <jnthn> Xliff: You should use delegate, not include, when doing this

[19:55] <jnthn> dinner, bbl

[19:55] *** pmurias left
[20:01] *** stoned75 joined
[20:51] <Xliff> Does delegate have the ability to accept a block, or does it require a clasS?

[20:53] <Altai-man_> delegate works with Cro::Transform. You can write one yourself if something specific or just use `route` routine and it'll create one for you

[20:55] <Xliff> OK... again, the documents are not very helpful when trying to figure out the details as to how things work.

[20:56] <Xliff> Heres what I want to do: I want to be able to create routes that may NOT be the same between server invocations. And I want the various routes to be able to have the ability to be hidden by a specific group. Each group is has a sub that defines all of the routes.

[20:57] <Xliff> Given the need to use before() for the simple hidden handlers implies the use of delegate.

[20:57] <Xliff> I have to step away for a bit. Altai-man: if you could give me the pointers on how to do above, it would really be appreciated!

[20:57] <Xliff> Thanks!!!

[21:00] <Altai-man_> Xliff, I think you want to have a single generic route handler for all possible urls and do this work yourself, because cro router is not so flexible to add/remove routes on the fly.

[21:01] <Altai-man_> so you have a single route which takes all URL pieces, say `*@path-pieces` in signature, and then in this route you expect headers, cookies, patch pieces to decide if you're returning something to the user or not.

[21:06] *** stoned75 left
[21:14] *** stoned75 joined
[21:19] *** sena_kun joined
[21:21] *** Altai-man_ left
[21:56] *** stoned75 left
[22:26] <Geth> ¦ nqp: f8740ded1f | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[22:26] <Geth> ¦ nqp: Bump Moar to get latest JIT fixes

[22:26] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/f8740ded1f

[22:39] <Geth> ¦ rakudo: 9ebbad3062 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[22:39] <Geth> ¦ rakudo: Bump NQP to get latest MoarVM improvements

[22:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9ebbad3062

[22:39] <lizmat> sleep&

[23:18] *** Altai-man_ joined
[23:21] *** sena_kun left
