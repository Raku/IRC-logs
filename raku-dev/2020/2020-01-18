[00:42] *** sena_kun left
[00:56] *** sena_kun joined
[02:42] *** sena_kun left
[02:56] *** sena_kun joined
[04:42] *** Kaiepi left
[04:42] *** sena_kun left
[04:57] *** sena_kun joined
[05:01] *** Kaiepi joined
[05:14] *** Kaiepi left
[05:22] *** Kaiepi joined
[06:41] *** sena_kun left
[06:56] *** sena_kun joined
[07:34] *** domidumont joined
[07:42] *** domidumont left
[08:21] *** go|dfish left
[08:23] *** go|dfish joined
[08:41] *** sena_kun left
[08:55] *** sena_kun joined
[10:42] *** sena_kun left
[10:57] *** sena_kun joined
[11:09] <lizmat> Files=1297, Tests=109772, 216 wallclock secs (28.02 usr  8.15 sys + 2962.37 cusr 275.04 csys = 3273.58 CPU)

[11:10] <lizmat> that's 6 wallclock and 30 CPU seconds more than yesterday

[11:10] <lizmat> wonder if 4366980681015624bb2c302b0 is responsible for that

[11:12] * sena_kun bumps

[11:31] <sena_kun> bisectable6: enum Foo <bar baz>; say bar ~~ Foo;

[11:31] <bisectable6> sena_kun, On both starting points (old=2015.12 new=5d6c0b6) the exit code is 0 and the output is identical as well

[11:31] <bisectable6> sena_kun, Output on both points: «True␤»

[11:31] <sena_kun> bisectable6: start=2019.11 enum Foo <bar baz>; say bar ~~ Foo;

[11:31] <bisectable6> sena_kun, Bisecting by output (old=2015.12 new=5d6c0b6) because on both starting points the exit code is 1

[11:32] <bisectable6> sena_kun, bisect log: https://gist.github.com/46de5bbdd8f4b9ee9ea99215f28d296f

[11:32] <bisectable6> sena_kun, (2017-10-07) https://github.com/rakudo/rakudo/commit/2dd80c7b0e13b2c876e5a1b30143965f79466491

[11:32] <sena_kun> sigh

[11:35] <Geth> ¦ nqp: 7f7efd65dd | Altai-man++ | tools/templates/MOAR_REVISION

[11:35] <Geth> ¦ nqp: [MoarVM Bump] Brings 14 commits

[11:35] <Geth> ¦ nqp: 

[11:35] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2020.01-1-g105d09d62...2020.01-15-g1fa9764bf

[11:35] <Geth> ¦ nqp: 1fa9764bf Merge pull request #1224 from MasterDuke17/fix_compiler_warnings

[11:35] <Geth> ¦ nqp: 24159f759 Merge pull request #1227 from ZhongnianTao/master

[11:35] <Geth> ¦ nqp: 61ac671ea Update gb18030.c

[11:35] <Geth> ¦ nqp: e46fd6f3e Merge pull request #1 from MoarVM/master

[11:35] <Geth> ¦ nqp: <…commit message has 10 more lines…>

[11:35] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/7f7efd65dd

[11:35] <Geth> ¦ rakudo: 06db4c2499 | Altai-man++ | tools/templates/NQP_REVISION

[11:35] <Geth> ¦ rakudo: [NQP Bump] 7f7efd65d [MoarVM Bump] Brings 14 c […]

[11:35] <Geth> ¦ rakudo: 

[11:35] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2019.11-49-g6361e0965...2019.11-50-g7f7efd65d

[11:35] <Geth> ¦ rakudo: 

[11:35] <Geth> ¦ rakudo: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2020.01-1-g105d09d62...2020.01-15-g1fa9764bf

[11:35] <Geth> ¦ rakudo: 1fa9764bf Merge pull request #1224 from MasterDuke17/fix_compiler_warnings

[11:36] <Geth> ¦ rakudo: 24159f759 Merge pull request #1227 from ZhongnianTao/master

[11:36] <Geth> ¦ rakudo: <…commit message has 12 more lines…>

[11:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/06db4c2499

[12:36] <lizmat> bisectable6: my %h; %h<foo><bar> := my $b; dd %h

[12:36] <bisectable6> lizmat, On both starting points (old=2015.12 new=06db4c2) the exit code is 0 and the output is identical as well

[12:36] <bisectable6> lizmat, Output on both points: «Hash %h = {:foo(${:bar(Any)})}␤»

[12:42] *** sena_kun left
[12:57] *** sena_kun joined
[13:00] <Geth> ¦ roast: 2510c04114 | (Elizabeth Mattijsen)++ | 13 files

[13:00] <Geth> ¦ roast: Batch #21 of roast RT -> GH ticket migration

[13:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/2510c04114

[13:01] <lizmat> only 439 files to go  :-)

[13:03] *** pmurias joined
[13:10] *** lucasb joined
[14:40] <lizmat> AlexDaniel: why did https://github.com/Raku/whateverable/issues/372 get closed ?

[14:40] <lizmat> ah, it's not about Proc::Feed

[14:41] <AlexDaniel> yeah, cuz I fixed it :)

[14:41] <lizmat> so Proc::Feed is just broken?  because it breaks for me reliably

[14:41] *** sena_kun left
[14:45] <AlexDaniel> lizmat: I don't know, in this case it was trying to kill it because of the timeout

[14:56] *** sena_kun joined
[15:02] <Geth> ¦ rakudo: 59f6a031e8 | (Elizabeth Mattijsen)++ | src/core.c/Supply-factories.pm6

[15:02] <Geth> ¦ rakudo: Implement Supply.decode($encoding)

[15:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/59f6a031e8

[15:03] <Geth> ¦ roast: 28bf1fd09c | (Elizabeth Mattijsen)++ | 3 files

[15:03] <Geth> ¦ roast: Add and run tests for Supply.decode

[15:03] <Geth> ¦ roast: 

[15:03] <Geth> ¦ roast: Also some cleanup on the Supply.encode tests

[15:03] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/28bf1fd09c

[15:25] *** pmurias left
[15:26] *** pmurias joined
[15:55] <Geth> ¦ rakudo: ace9853146 | (Elizabeth Mattijsen)++ | src/core.c/Supply-factories.pm6

[15:55] <Geth> ¦ rakudo: Implement Supply.first

[15:55] <Geth> ¦ rakudo: 

[15:55] <Geth> ¦ rakudo: As a frontend of Supply.grep.

[15:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ace9853146

[15:55] <Geth> ¦ roast: b7e2c2ca95 | (Elizabeth Mattijsen)++ | 2 files

[15:55] <Geth> ¦ roast: Add and run Supply.first tests

[15:55] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b7e2c2ca95

[16:19] *** pmurias left
[16:31] <Geth> ¦ roast: ecd28b5478 | (Elizabeth Mattijsen)++ | 2 files

[16:31] <Geth> ¦ roast: Add and run Supply.collate tests

[16:31] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ecd28b5478

[16:31] <Geth> ¦ rakudo: 4079702846 | (Elizabeth Mattijsen)++ | 2 files

[16:31] <Geth> ¦ rakudo: Implement Supply.collate

[16:31] <Geth> ¦ rakudo: 

[16:31] <Geth> ¦ rakudo: Also make it a multi

[16:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4079702846

[16:40] *** pmurias joined
[16:41] *** sena_kun left
[16:56] *** sena_kun joined
[17:46] <MasterDuke> lizmat: any thoughts about the expmod tests?

[17:47] <lizmat> MasterDuke: please remind me which ones  :-)

[17:48] <MasterDuke> https://github.com/perl6/roast/blob/master/S32-num/expmod.t#L25-L37 and https://github.com/perl6/nqp/blob/master/t/nqp/060-bigint.t#L206-L207

[17:49] <MasterDuke> https://github.com/Raku/problem-solving/issues/150

[17:49] <lizmat> the first one is a JVM backend issue, no?

[17:50] <lizmat> so you're saying the default value should be something like NaN or Nil ?

[17:53] <MasterDuke> no, it's that those values now cause an error

[17:53] <MasterDuke> in the libtommath function

[17:55] <MasterDuke> they used to put the libtommath function into an infinite loop, but now it reports "value out of range". but since we don't check for errors, we just give a/the default value as the result

[17:56] *** Guest78373 left
[18:00] <MasterDuke> pmurias: in https://github.com/perl6/nqp/commit/cfddd0cc5c7ae674ff0b2e50e4815cb29ed1b24f, can i assume you don't care what the actual values are, just testing that some negative values for exponents work?

[18:07] <lizmat> MasterDuke: hmmmm

[18:07] <lizmat> so returning NaN in such a case would be appropriate ?

[18:08] <MasterDuke> could be

[18:09] <MasterDuke> in python, `pow(4, -4, 2)` gives `ValueError: base is not invertible for the given modulus`

[18:13] <lizmat> hmmm... since it did put it into an infinite loop before, there is no compatibility issue if we would make that an execution error, right ?

[18:14] <lizmat> die "base is not invertible for the given modulus" # feels like a good one solution

[18:14] <lizmat> hopefully with the offending values being part of the error message

[18:18] <MasterDuke> akf for dinner, back later

[18:25] <Geth> ¦ rakudo: 7925bfd485 | (Elizabeth Mattijsen)++ | src/core.c/Supply-coercers.pm6

[18:25] <Geth> ¦ rakudo: Make Supply.squish a multi

[18:25] <Geth> ¦ rakudo: 

[18:25] <Geth> ¦ rakudo: With some optimizations, specifically for the default &with

[18:25] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7925bfd485

[18:25] <Geth> ¦ roast: dcb3af9508 | (Elizabeth Mattijsen)++ | S17-supply/squish.t

[18:25] <Geth> ¦ roast: You *can* run .squish on a Supply type object

[18:25] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/dcb3af9508

[18:40] <Geth> ¦ rakudo: ff08697ace | (Elizabeth Mattijsen)++ | src/core.c/Supply-coercers.pm6

[18:40] <Geth> ¦ rakudo: Implement Supply.repeated

[18:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ff08697ace

[18:40] <Geth> ¦ roast: 9bf0ab0d31 | (Elizabeth Mattijsen)++ | 2 files

[18:40] <Geth> ¦ roast: Add and run tests for Supply.repeated

[18:40] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/9bf0ab0d31

[18:41] *** Guest78373 joined
[18:41] *** sena_kun left
[18:58] *** sena_kun joined
[19:19] <MasterDuke> lizmat: nqp and moarvm just pass values to libtommath function and all checks at the raku level? so typed exceptions can be thrown?

[19:20] <lizmat> I'll settle for an X::AdHoc, which I think you can throw from MoarVM

[19:21] <MasterDuke> k, i'll see what i can add to my PR. but we still need to change the nqp and roast tests

[19:22] <MasterDuke> afk for a bit again

[19:30] <pmurias> MasterDuke: I'm not sure if I undestand your question

[19:31] <pmurias> MasterDuke: I don't remember 42 being of some particular importance

[19:32] <pmurias> MasterDuke: but what do you want to return other than 0?

[19:35] <pmurias> m: say 7.expmod(-2, 5); 

[19:35] <camelia> rakudo-moar ff08697ac: OUTPUT: «4␤»

[19:35] <pmurias> ^^ why is it 4?

[19:35] <lizmat> -2 + 5 = 3

[19:35] <pmurias> m: say ((7 ** -2) mod 5)

[19:35] <camelia> rakudo-moar ff08697ac: OUTPUT: «Cannot resolve caller infix:<div>(Rat:D, Int:D); none of these signatures match:␤    (Int:D \a, Int:D \b --> Int:D)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»

[19:37] <pmurias> lizmat: I don't understand?

[19:37] <lizmat> no, *I* didn't understand, I have no idea  :-)

[19:38] <pmurias> ahh, so we both don't understand, seem like we have a consensus ;)

[19:39] <pmurias> the explanation why it's 4 in the docs is bogus: https://docs.perl6.org/routine/expmod

[20:12] <Geth> ¦ rakudo: 13c5d04622 | (Nick Logan)++ (committed using GitHub Web editor) | src/core.c/CompUnit/RepositoryRegistry.pm6

[20:12] <Geth> ¦ rakudo: Fix repository name lookup on windows

[20:12] <Geth> ¦ rakudo: 

[20:12] <Geth> ¦ rakudo: When setting up the repositories it will key a hash based (mostly) on normalized absolute file paths such as `inst#/home/perl6/share/site`. It appears RAKUDO_PREFIX or RAKUDO_HOME dont normalize their path separator, and thus `$site` was left with a value of e.g. `inst#/home/perl6\share/site` (which would not match the hash lookup due to the backslash). This would break the following construct inside a module during installation on windows:

[20:12] <Geth> ¦ rakudo: `BEGIN my $v = $?DISTRIBUTION.meta<version>; use MyDist::Bar:ver($v)`

[20:12] <Geth> ¦ rakudo: 

[20:12] <Geth> ¦ rakudo: This normalizes `$prefix` by replacing back slashes with forward slashes on windows such that the hash keys match the format used during lookup by e.g. `$site`.

[20:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/13c5d04622

[20:14] *** pmurias left
[20:17] *** pmurias joined
[20:42] *** sena_kun left
[20:56] *** sena_kun joined
[21:10] <MasterDuke> pmurias: python gives 4 for pow(7, -2, 5)

[21:13] <MasterDuke> pmurias, lizmat: sounds like i can change the nqp test values no problem right away, and then change the roast tests after some minor tweaking to my pr?

[21:14] <lizmat> MasterDuke: sounds like a plan

[21:22] <Geth> ¦ nqp: c7f4dfe9e1 | (Daniel Green)++ | t/nqp/060-bigint.t

[21:22] <Geth> ¦ nqp: Use better negatives values for testing expmod

[21:22] <Geth> ¦ nqp: 

[21:22] <Geth> ¦ nqp: The original ones (randomly chosen) happen to throw an exception in

[21:22] <Geth> ¦ nqp: MoarVM when we add error checking of the underlying libtommath function

[21:22] <Geth> ¦ nqp: return value.

[21:22] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/c7f4dfe9e1

[21:28] <MasterDuke> hm, i can't restart the builds in https://travis-ci.org/MoarVM/MoarVM/builds/638860331?utm_source=github_status&utm_medium=notification, can anybody else?

[21:38] *** travis-ci joined
[21:38] <travis-ci> NQP build failed. Daniel Green 'Use better negatives values for testing expmod

[21:38] <travis-ci> https://travis-ci.org/perl6/nqp/builds/638937157 https://github.com/perl6/nqp/compare/7f7efd65dd33...c7f4dfe9e13d

[21:38] *** travis-ci left
[21:39] <MasterDuke> ha. jvm error. let me take a look...

[21:41] *** pmurias left
[21:57] <Geth> ¦ problem-solving: vrurg assigned to jnthn Issue Visibility of dynamic symbols in async blocks https://github.com/Raku/problem-solving/issues/151

[22:16] *** pmurias joined
[22:42] *** sena_kun left
[22:55] *** sena_kun joined
[22:56] <Geth> ¦ rakudo: 8291337799 | (Elizabeth Mattijsen)++ | 2 files

[22:56] <Geth> ¦ rakudo: Add BUILDPLAN helper library

[22:56] <Geth> ¦ rakudo: 

[22:56] <Geth> ¦ rakudo: This library allows one to quickly see the BUILDPLAN of a class or

[22:56] <Geth> ¦ rakudo: a role.  It is intended to be used for debugging work on the object

[22:56] <Geth> ¦ rakudo: creation logic of Rakudo.  Some example output:

[22:56] <Geth> ¦ rakudo: 

[22:56] <Geth> ¦ rakudo:     use BUILDPLAN;

[22:56] <Geth> ¦ rakudo: <…commit message has 12 more lines…>

[22:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8291337799

[23:03] <lizmat> ok, that should be helpful implementing `has $.a is built(:bind)`

[23:19] *** lucasb left
[23:51] <pmurias> MasterDuke: why is expmod(7, -2, 5) supposed to be 4?

[23:53] <pmurias> MasterDuke: ahh, it seems that python docs have an explanation: https://docs.python.org/3/library/functions.html#pow

[23:54] <pmurias> MasterDuke: Raku docs are wrong for negative values tho

[23:54] <pmurias> https://docs.perl6.org/routine/expmod

