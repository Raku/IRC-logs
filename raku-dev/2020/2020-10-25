[00:26] *** Kaiepi left
[00:30] *** Kaiepi joined
[00:30] *** patrickb left
[01:44] *** linkable6 left
[01:44] *** sourceable6 left
[01:44] *** shareable6 left
[01:44] *** evalable6 left
[01:44] *** coverable6 left
[01:44] *** squashable6 left
[01:44] *** committable6 left
[01:44] *** releasable6 left
[01:44] *** notable6 left
[01:44] *** statisfiable6 left
[01:44] *** nativecallable6 left
[01:44] *** bloatable6 left
[01:44] *** unicodable6 left
[01:44] *** greppable6 left
[01:44] *** quotable6 left
[01:44] *** bisectable6 left
[01:44] *** tellable6 left
[01:44] *** benchable6 left
[01:45] *** unicodable6 joined
[01:45] *** evalable6 joined
[01:45] *** releasable6 joined
[01:45] *** committable6 joined
[01:45] *** bloatable6 joined
[01:45] *** coverable6 joined
[01:46] *** nativecallable6 joined
[01:46] *** squashable6 joined
[01:46] *** notable6 joined
[01:46] *** linkable6 joined
[01:46] *** greppable6 joined
[01:46] *** benchable6 joined
[01:47] *** sourceable6 joined
[01:47] *** quotable6 joined
[01:47] *** statisfiable6 joined
[01:47] *** bisectable6 joined
[01:47] *** shareable6 joined
[01:48] *** tellable6 joined
[04:40] *** frost-lab joined
[05:08] <Geth> ¦ nqp: e414b55805 | Coke++ | docs/ops.markdown

[05:08] <Geth> ¦ nqp: Document sqrt

[05:08] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/e414b55805

[05:53] *** evalable6 left
[05:53] *** linkable6 left
[05:55] *** linkable6 joined
[05:56] *** evalable6 joined
[06:32] *** djinni` left
[06:43] *** djinni` joined
[06:44] *** sena_kun joined
[08:08] *** Kaiepi left
[09:21] *** Altai-man joined
[09:23] *** sena_kun left
[09:48] *** gfldex left
[10:29] <Geth> ¦ Blin/master: 6 commits pushed by (Haytham Elganiny)++, Altai-man++

[10:29] <Geth> ¦ Blin/master: 6cdd25494c | Add --pm option to switch between package managers

[10:29] <Geth> ¦ Blin/master: 20184fcd32 | Remove Pakku from dependencies

[10:29] <Geth> ¦ Blin/master: a3416babd5 | Remove the list of modules I added, since these modules (Except Fcntl)

[10:29] <Geth> ¦ Blin/master: 92dc039814 | Replace BUILD with TWEAK

[10:29] <Geth> ¦ Blin/master: 2003836c06 | Add Pakku to list of dependencies

[10:29] <Geth> ¦ Blin/master: 1438dbdb03 | Merge pull request #26 from hythm7/support-pakku

[10:29] <Geth> ¦ Blin/master: review: https://github.com/Raku/Blin/compare/9ad9b7d2a8d0...1438dbdb0364

[10:58] <Geth> ¦ nqp/master: 5 commits pushed by (Elizabeth Mattijsen)++

[10:58] <Geth> ¦ nqp/master: 02e60932de | Document nqp::atomicbindattr

[10:58] <Geth> ¦ nqp/master: 82b52ec7e5 | Document nqp::isrwcont

[10:58] <Geth> ¦ nqp/master: e8825c4bd1 | Document nqp::decont_i/n/s

[10:58] <Geth> ¦ nqp/master: 763be8819e | Document nqp::objectid

[10:58] <Geth> ¦ nqp/master: 8b0e2c83b4 | Document nqp::captureposelems

[10:58] <Geth> ¦ nqp/master: review: https://github.com/Raku/nqp/compare/e414b5580501...8b0e2c83b411

[11:30] <Altai-man> Doing a Blin run using Pakku.

[11:32] <Altai-man> 446 out of 1507 modules processed

[11:34] <Altai-man> ⏳ 742 out of 1507 modules processed

[11:35] <El_Che> Pakku is a drop in zef replacement?

[11:36] <Altai-man> I think it is an alternative? Don't think it is "drop-in" as it has different commands.

[11:37] <Altai-man> Still, I am very curious about where this unbelievable speedup comes from.

[11:37] <El_Che> I mean it works the same way and it uses the same infra

[11:37] <Altai-man> Yes.

[11:37] <El_Che> like cpan and cpan-minus for Perl

[11:37] <Altai-man> ⏳ 928 out of 1507 modules processed

[11:46] *** gfldex joined
[12:17] <Altai-man> Executed in   50,56 mins

[12:18] <Altai-man> interesting

[12:20] <El_Che> compared to?

[12:21] <Altai-man> 122 minutes is my top result with zef.

[12:21] <Altai-man> The problem is I see a range of warnings. :S

[12:22] <Altai-man> So needs some polishing. I still think it is very promising.

[12:28] <El_Che> it's language use is also kind of geared towards the young :)

[12:36] <ugexe> The speed up, from my understanding, is that it does all the module resolution on the server and/or only uses one source of data (so doesn’t need to make as many version comparisons). This method breaks down when there is any ecosystem (like a dark pan) the remote service doesn’t know of. Ultimate after searching for each batch of dependencies a requery is needed such that the distributions found from

[12:36] <ugexe> the previous dependency affect what the next lookup will decide to take (and not considering everything at once)

[12:36] <ugexe> Which is fine for just getting stuff done, but would soon run into consistency issues in any type of environment/ecosystems it isn’t tied heavily to 

[12:37] <El_Che> thx for the explanation, ugexe 

[12:38] <ugexe> tony-o was investigating how to solve some of these issues remotely while accommodating the points I noted, but it’s a bit harder than just store both ecosystems into one dB and query for everything 

[12:38] <Altai-man> ugexe++

[12:40] <ugexe> zef is really really fast if all dependencies are pinned fwiw 

[12:41] <El_Che> ugexe: that could be a good best practice

[12:43] *** frost-lab left
[13:16] <Geth> ¦ nqp: 3484acfc3d | Coke++ | docs/ops.markdown

[13:16] <Geth> ¦ nqp: Document coerce closer to opcodes

[13:16] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/3484acfc3d

[13:16] <[Coke]> lizmat: ^^ that fixes the coerce opcodes. adding some debug output to the test script so we can report out where it thinks something is documented.

[13:17] <[Coke]> er. where it thinks an opcode is declared.

[13:18] <ugexe> its also got some pretty glaring security issues -- https://github.com/hythm7/Pakku/blob/302acac1047dfc5b9e89b16f6dfb6f50008c6d95/lib/Pakku/Guts.rakumod#L139

[13:18] <[Coke]> does NQP support ENV or MAIN?

[13:18] <ugexe> i can make a dependency that will run any command i want whenever someone runs that code and parses that distribution

[13:21] <ugexe> perhaps not, but none-the-less spawning a process to parse a dependency is not an ideal thing to do

[13:22] *** sena_kun joined
[13:24] *** Altai-man left
[13:24] <ugexe> (and by perhaps not i mean im too lazy to figure out if its parsing of names allows things like ; or |)

[14:25] * [Coke] has a hard time getting a dynamic variable working based off a command line arg in nqp.

[14:30] <[Coke]> Should I even expect dynamic variables to work?

[14:31] <[Coke]> nqp: my $*A=True; sub debug($a) { nqp::say($a) if $*A; }; debug('a');

[14:31] <camelia> nqp-moarvm: OUTPUT: «Assignment ("=") not supported in NQP, use ":=" instead at line 2, near "True; sub ␤   at gen/moar/stage2/NQPHLL.nqp:1053  (/home/camelia/rakudo-m-inst-2/share/nqp/lib/NQPHLL.moarvm:panic)␤ from <unknown>:1  (/home/camelia/rakudo-m-inst-2/share/nqp/lib/nqp.m…»

[14:32] <[Coke]> nqp: my $*A:=True; sub debug($a) { nqp::say($a) if $*A; }; debug('a');

[14:32] <camelia> nqp-moarvm: ( no output )

[14:35] <[Coke]> m: my $*A:=True; sub debug($a) { nqp::say($a) if $*A; }; debug('a');

[14:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Could not find nqp::say, did you forget 'use nqp;' ?␤at <tmp>:1␤------> 3 $*A:=True; sub debug($a) { nqp::say($a)7⏏5 if $*A; }; debug('a');␤»

[14:35] <[Coke]> m: use nqp; my $*A:=True; sub debug($a) { nqp::say($a) if $*A; }; debug('a');

[14:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: «a␤»

[14:36] * [Coke] ponders again turning the nqp opcode doc test into Raku.

[14:42] <[Coke]> nqp: if True { nqp::say('1') }

[14:42] <camelia> nqp-moarvm: ( no output )

[14:42] <[Coke]> ah. there's part of my problem. :P

[14:49] <timotimo> yeah, True doesn't exist in nqp, and any identifier that doesn't exist just gives NQPMu

[14:57] <Geth> ¦ nqp: 0d40a36df8 | Coke++ | t/docs/opcodes.t

[14:57] <Geth> ¦ nqp: Add debug mode to test

[14:57] <Geth> ¦ nqp: 

[14:57] <Geth> ¦ nqp: For now, hardcoded and off. Enable to see where opcode definitions are being found to help with diagnostics

[14:57] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/0d40a36df8

[15:03] <[Coke]> so, the test to check for opcodes finds "if_i" because of this: https://gist.github.com/coke/f87ab505c6cb825db51afcb5cb6a8990 , but if_i doesn't seem to be an opcode. Anyone have a better idea of how to improve the cheating to ignore non-opcodes?

[15:03] <[Coke]> I'd rather just ask nqp what its opcodes are, but that doesn't seem possible.

[15:03] <[Coke]> cast a wide net and then try to execute the opcode in a try block?

[15:04] <[Coke]> Add a deny list and throw out "opcodes" like if_i?

[15:06] <[Coke]> deny list is easiest (I think trying to compile an opcode that doesn't have a handler is not catchable.)

[15:13] <Geth> ¦ nqp: 98777d8774 | Coke++ | t/docs/opcodes.t

[15:13] <Geth> ¦ nqp: Provide a mechanism to skip non-opcodes

[15:13] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/98777d8774

[15:19] <Geth> ¦ nqp: 6a98c3873b | Coke++ | 2 files

[15:19] <Geth> ¦ nqp: Remove some non ops and their docs

[15:19] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/6a98c3873b

[15:21] <[Coke]> src/vm/moar/QAST/QASTOperationsMAST.nqp has this line:

[15:21] <[Coke]> 1922:    %core_op_generators{'takehandlerresult'}($protected_result);

[15:21] <[Coke]> that's not an opcode. Why is it there?

[15:22] <[Coke]> I don't see takehandlerresult anywhere else in the source in nqp or rakudo

[15:24] <[Coke]> ah. it is defined in MoarVM - so we have some "opcodes" that are not user-visible?

[15:24] <[Coke]> (and therefore don't require documentation)

[15:24] <[Coke]> ah. lizmat: the missing nqp opcodes *Are* MoarVM opcodes, but aren't exposed. e.g. MVM_OP_if_i

[15:33] *** Kaiepi joined
[15:47] <Geth> ¦ nqp: 13f4ea3dca | Coke++ | t/docs/opcodes.t

[15:47] <Geth> ¦ nqp: Skip more unexposed opcodes

[15:47] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/13f4ea3dca

[15:51] <[Coke]> back down to 236 failures, and hopefully all the MoarVM ones left are user-exposed. Please pick one from the list and doc it. :) https://gist.github.com/coke/f87ab505c6cb825db51afcb5cb6a8990

[16:29] *** Kaiepi left
[16:33] <nwc10> So... the last sparc64 specific test failure is t/04-nativecall/06-struct.t

[16:34] <nwc10> you can't even create a new InlinedArrayInStruct

[16:34] <nwc10> I can cut the testcase down to:

[16:34] <nwc10> class InlinedArrayInStruct is repr('CStruct') { has int32 $.a is rw; HAS int32 @.b[1] is CArray;

[16:34] <nwc10> }

[16:34] <nwc10> (thank you so much irssi)

[16:34] <nwc10> what's the difference between `has` and `HAS`

[16:35] <nwc10> (the SIGBUS is because the layout we have there has a 32 bit value first, and then it's assuming that it can write a pointer at offset 4, which is a bug)

[16:35] <nwc10> but I don't understand the difference between has and HAS

[17:15] <dogbert17> "CStructs and CUnions can be in turn referenced by—or embedded into—a surrounding CStruct and CUnion. To say the former we use has as usual, and to do the latter we use the HAS declarator instead:"

[17:16] <dogbert17> nwc10: ^^ from the docs

[17:21] *** Altai-man joined
[17:22] *** Kaiepi joined
[17:24] *** sena_kun left
[17:41] <nwc10> thanks

[18:28] <Geth> ¦ nqp: a9e06d020b | (Elizabeth Mattijsen)++ | docs/ops.markdown

[18:28] <Geth> ¦ nqp: Document nqp::box_u

[18:28] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/a9e06d020b

[18:28] <Geth> ¦ nqp: 60954ddb89 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[18:28] <Geth> ¦ nqp: Document nqp::with

[18:28] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/60954ddb89

[18:57] <Xliff> Could someone tell me what I am doing wrong, here?

[18:57] <Xliff> https://repl.it/@Xliff/SadPoliticalForce#main.raku

[18:57] <Xliff> Oh. Wait...

[19:48] <Geth> ¦ nqp: e769dee128 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[19:48] <Geth> ¦ nqp: Document nqp:: thread related opcodes

[19:48] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/e769dee128

[19:49] <Geth> ¦ nqp: 4e1286f503 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[19:49] <Geth> ¦ nqp: Oops, forgot a ]

[19:49] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/4e1286f503

[19:51] <Geth> ¦ nqp: 4f3bc08c7d | (Elizabeth Mattijsen)++ | docs/ops.markdown

[19:51] <Geth> ¦ nqp: Forgot some closing backticks

[19:51] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/4f3bc08c7d

[19:52] <Geth> ¦ nqp: ddaa144b12 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[19:52] <Geth> ¦ nqp: Fix header

[19:52] <Geth> ¦ nqp: 

[19:52] <Geth> ¦ nqp: I guess vim is not the best editor for this type of markdown :-(

[19:52] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/ddaa144b12

[20:11] *** travis-ci joined
[20:11] <travis-ci> NQP build passed. Elizabeth Mattijsen 'Fix header

[20:11] <travis-ci> https://travis-ci.org/Raku/nqp/builds/738787296 https://github.com/Raku/nqp/compare/4f3bc08c7d27...ddaa144b124f

[20:11] *** travis-ci left
[20:52] <Geth> ¦ nqp: 6b5a92ee79 | Coke++ | docs/ops.markdown

[20:52] <Geth> ¦ nqp: move thread docs into thread section

[20:52] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/6b5a92ee79

[20:52] <Geth> ¦ nqp: 2f1555401a | Coke++ | docs/ops.markdown

[20:52] <Geth> ¦ nqp: Document some opcodes as restricted to vms

[20:53] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/2f1555401a

[20:55] <[Coke]> lizmat++ # down to 229 opcodes needing docs

[21:21] <[Coke]> 225

[21:22] *** sena_kun joined
[21:24] *** Altai-man left
[22:33] <Geth> ¦ nqp: 73eed453cd | (Elizabeth Mattijsen)++ | docs/ops.markdown

[22:33] <Geth> ¦ nqp: More logical order in atpos/bindpos docs

[22:33] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/73eed453cd

[22:49] *** Jolbars joined
[22:49] <Jolbars> hello

[22:49] *** Jolbars left
[22:56] *** sena_kun left
