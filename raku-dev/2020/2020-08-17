[00:52] *** sena_kun joined
[00:53] *** Altai-man left
[01:22] *** AlexDani` joined
[01:24] *** AlexDaniel left
[03:30] *** AlexDani` left
[03:30] *** AlexDani` joined
[04:51] *** Altai-man joined
[04:53] *** sena_kun left
[07:38] *** leont joined
[08:08] *** nwc10 joined
[08:08] <nwc10> good *, #raku-dev 

[08:32] <lizmat> Files=1334, Tests=113514, 223 wallclock secs (29.22 usr  8.67 sys + 3113.80 cusr 303.79 csys = 3455.48 CPU)

[08:32] <lizmat> nwc10 o/

[08:51] *** sena_kun joined
[08:53] *** Altai-man left
[09:22] *** hungrydonkey joined
[09:33] *** hungrydonkey left
[09:35] *** hungrydonkey joined
[10:45] *** [TuxCM] joined
[10:59] <[TuxCM]> Rakudo version 2020.07-64-g9d6d8dd7a - MoarVM version 2020.07-19-g9a5203395

[10:59] <[TuxCM]> csv-test-xs-20      0.389 -  0.395

[10:59] <[TuxCM]> test-t --race       0.832 -  0.935

[10:59] <[TuxCM]> csv-ip5xs           0.846 -  0.856

[10:59] <[TuxCM]> test-t              1.826 -  1.951

[10:59] <[TuxCM]> test                7.465 -  7.654

[10:59] <[TuxCM]> csv-ip5xs-20        7.932 -  8.251

[10:59] <[TuxCM]> test-t-20 --race    8.546 -  9.293

[10:59] <[TuxCM]> csv-parser         24.258 - 24.288

[10:59] <[TuxCM]> test-t-20          30.106 - 30.490

[11:09] *** [TuxCM] left
[11:09] *** [TuxCM] joined
[11:39] *** [TuxCM] left
[11:53] *** hungrydonkey left
[12:08] *** hungrydonkey joined
[12:14] <lizmat> notable6: weekly

[12:14] <notable6> lizmat, 2 notes: https://gist.github.com/c5236975850d2cc72a5a825c0808729d

[12:15] <lizmat> .tell demostanis still not sure why this wouldn't need to be in the ecosystem, for ease of installation

[12:15] <tellable6> lizmat, I'll pass your message to demostanis

[12:15] <lizmat> notable6: weekly reset

[12:15] <notable6> lizmat, Moved existing notes to ‚Äúweekly_2020-08-17T12:15:26Z‚Äù

[12:35] <nwc10> does NQP implement todo for tests? Or just skip?

[12:38] *** hungrydonkey left
[12:43] <MasterDuke> looks like it has todo

[12:43] <nwc10> OK, I missed that :-) How/where?

[12:51] *** Altai-man joined
[12:52] *** demostanis joined
[12:52] <demostanis> Hello, world!

[12:52] <tellable6> 2020-08-17T12:15:19Z #raku-dev <lizmat> demostanis still not sure why this wouldn't need to be in the ecosystem, for ease of installation

[12:53] <demostanis> lizmat: It can't be in ecosystem as it requires root to install and to use.

[12:53] *** sena_kun left
[12:54] <lizmat> why does it require root ?

[12:54] <lizmat> I'm not sure I want to promote a product that requires root for something that does not actually requires root access to work

[12:56] <MasterDuke> nwc10: https://github.com/Raku/nqp/blob/master/src/core/testing.nqp#L39-L42

[12:58] <demostanis> lizmat: Its main purpose it to install software from Github, which might need root, for example to install executables in /usr/bin, or for many other reasons. As install instructions will be specified in user-provided rules, they must be root-owned, so that malware/untrusted users/anything else can't modify these rules and thus can't replace rules by something dangerous. It can't prompt for user credentials

[12:58] <demostanis> once the software are getting installed as HubToDate may run inside of a crontab in the future. 

[13:03] <nwc10> thanks

[13:30] *** |Tux| joined
[13:41] *** [TuxCM] joined
[13:49] <Geth> ¬¶ nqp/more-hash-tests: dd6b6fee54 | (Nicholas Clark)++ | t/nqp/108-vmhash.t

[13:49] <Geth> ¬¶ nqp/more-hash-tests: More tests for NQP hash behaviour.

[13:49] <Geth> ¬¶ nqp/more-hash-tests: 

[13:49] <Geth> ¬¶ nqp/more-hash-tests: Tests for iterators, including deleting the hash key corresponding to the

[13:49] <Geth> ¬¶ nqp/more-hash-tests: current iterator position. Tests for exceptions before and after starting

[13:49] <Geth> ¬¶ nqp/more-hash-tests: iteration (which are not yet consistent between the three backends).

[13:49] <Geth> ¬¶ nqp/more-hash-tests: 

[13:49] <Geth> ¬¶ nqp/more-hash-tests: Test `.elems`. More thorough tests for `.kv`.

[13:49] <Geth> ¬¶ nqp/more-hash-tests: 

[13:49] <Geth> ¬¶ nqp/more-hash-tests: Also fix a test description.

[13:49] <Geth> ¬¶ nqp/more-hash-tests: review: https://github.com/Raku/nqp/commit/dd6b6fee54

[13:56] <Geth> ¬¶ nqp: nwc10++ created pull request #657: More tests for NQP hash behaviour.

[13:56] <Geth> ¬¶ nqp: review: https://github.com/Raku/nqp/pull/657

[14:03] <lizmat> and another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/08/17/2020-33-function-types/

[14:05] <[Coke]> nwc++

[14:05] <[Coke]> nwc10++

[14:05] <nwc10> this was why I wanted to build JS

[14:05] <Altai-man> lizmat++

[14:07] <[Coke]> are there instructions for doing the JS build?

[14:07] <[Coke]> I got to the point where I just use the node package because I'm lazy

[14:09] <nwc10> I found that I needed node v10

[14:10] <nwc10> v11 and v12 didn't work, I think because soemting ("us") has pinned npm packages that are too old to deal with v11 or later

[14:10] <nwc10> so I built the most recent v10 release from source and used that

[14:10] <nwc10> on a machine with a new enough gcc

[14:10] <nwc10> (That's linux)

[14:10] <nwc10> seems that it only supports g++ on Linux, and (only?) clang on OS X (and *BSD?)

[14:11] <nwc10> but this might be a constraint from whatever v8 demands.

[14:11] <nwc10> anyway, it's fussy.

[14:12] *** demostanis left
[14:38] *** [TuxCM] left
[14:38] *** [TuxCM] joined
[14:39] *** [TuxCM] left
[14:40] *** [TuxCM] joined
[15:10] *** [TuxCM] left
[15:11] *** [TuxCM] joined
[15:40] *** [TuxCM] left
[15:41] *** [TuxCM] joined
[16:10] *** [TuxCM] left
[16:11] *** [TuxCM] joined
[16:11] *** [TuxCM] left
[16:12] *** [TuxCM] joined
[16:41] <Geth> ¬¶ rakudo/sorting-with-junctions: 410a428783 | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/Sorting.pm6

[16:41] <Geth> ¬¶ rakudo/sorting-with-junctions: Make .sort about 4.4x as fast on Int/Str/Num arrays

[16:41] <Geth> ¬¶ rakudo/sorting-with-junctions: 

[16:41] <Geth> ¬¶ rakudo/sorting-with-junctions: AlexDaniel++ expressed concern about the Junction check causing a

[16:41] <Geth> ¬¶ rakudo/sorting-with-junctions: slow down in sorting.  And he was right.  However, when looking at

[16:41] *** [TuxCM] left
[16:41] <Geth> ¬¶ rakudo/sorting-with-junctions: the profile, it occurred to me that most of the overhead of sorting

[16:41] <Geth> ¬¶ rakudo/sorting-with-junctions: was caused by using the default infix:<cmp> logic.  With the multi

[16:41] <Geth> ¬¶ rakudo/sorting-with-junctions: sub "compare" now inbetween, it was possible to turn this overhead

[16:41] <Geth> ¬¶ rakudo/sorting-with-junctions: <‚Ä¶commit message has 9 more lines‚Ä¶>

[16:41] <Geth> ¬¶ rakudo/sorting-with-junctions: review: https://github.com/rakudo/rakudo/commit/410a428783

[16:42] *** [TuxCM] joined
[16:42] *** [TuxCM] left
[16:42] *** [TuxCM] joined
[16:45] *** AlexDani` is now known as AlexDaniel

[16:45] *** AlexDaniel left
[16:45] *** AlexDaniel joined
[16:52] *** sena_kun joined
[16:53] *** Altai-man left
[17:09] *** [TuxCM] left
[17:12] <AlexDaniel> sourceable6: ‚Äòfoo‚Äô cmp ‚Äòbar‚Äô

[17:12] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9d6d8dd/src/core.c/Str.pm6#L3650

[17:17] <AlexDaniel> sourceable6: <foo> cmp <bar>

[17:17] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9d6d8dd/src/core.c/Str.pm6#L3650

[17:19] <AlexDaniel> sourceable6: <42e1> cmp <42e1>

[17:19] <sourceable6> AlexDaniel, https://github.com/rakudo/rakudo/blob/9d6d8dd/src/core.c/allomorphs.pm6#L184

[17:33] <AlexDaniel> lizmat: I made a review, I hope it's not too long

[17:34] <AlexDaniel> lizmat: but TL;DR is that `compare` multis form their own cmp table just like this one, except that it's different: https://github.com/rakudo/rakudo/blob/9d6d8dd/src/core.c/allomorphs.pm6#L172

[17:35] <AlexDaniel> so basically you're trying to recreate the same thing but fast‚Ä¶ I mean‚Ä¶ yeah, it's something the compiler should do

[17:38] <AlexDaniel> lizmat: if you care about my advice then I'd suggest to talk to jnthn to figure out why a call to `cmp` is not optimized into a simple nqp::cmp_* call

[17:38] <AlexDaniel> or whoever knows about this

[17:53] <[Coke]> m: say e

[17:53] <camelia> rakudo-moar 9d6d8dd7a: OUTPUT: ¬´2.718281828459045‚ê§¬ª

[18:47] *** JRaspass joined
[19:00] <releasable6> Next release in ‚âà4 days and ‚âà23 hours. 2 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[19:44] *** vrurg left
[19:45] *** vrurg joined
[20:19] <Geth> ¬¶ rakudo/sorting-with-junctions: 3f60d0a70b | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/Sorting.pm6

[20:19] <Geth> ¬¶ rakudo/sorting-with-junctions: Emulate exact behaviour on lists with IntStr/NumStr

[20:19] <Geth> ¬¶ rakudo/sorting-with-junctions: 

[20:19] <Geth> ¬¶ rakudo/sorting-with-junctions: First check numerically, if they're the same, then compare as strings.

[20:19] <Geth> ¬¶ rakudo/sorting-with-junctions: review: https://github.com/rakudo/rakudo/commit/3f60d0a70b

[20:33] *** codesections left
[20:51] *** Altai-man joined
[20:53] *** sena_kun left
[21:56] <Altai-man> lizmat, hi! I have moved your RFC article to 19th, hope it isn't wrong for me to move it. Thanks a lot for articles!

[21:56] <Altai-man> Oh, no, this is probably a very bad idea.

[21:57] <Altai-man> Ok, moving it back.

[22:47] <AlexDaniel> lizmat: I'm sorry, but as I said, I don't think an optimization in this particular form can work without sort regressions

[22:47] <AlexDaniel> I think we'll have to figure out something else

[22:54] *** [TuxCM] joined
[23:37] *** leont left
