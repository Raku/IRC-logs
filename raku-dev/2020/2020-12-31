[00:08] *** frost-lab joined
[00:22] <Geth> ¦ nqp: e53c01c48d | (Patrick Böker)++ | 2 files

[00:22] <Geth> ¦ nqp: Adapt tests to new `nqp::spawnprocasync` semantics

[00:22] <Geth> ¦ nqp: 

[00:22] <Geth> ¦ nqp: The op now takes the program name separately instead of implicitly deriving

[00:22] <Geth> ¦ nqp: it from the first arg.

[00:22] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/e53c01c48d

[00:22] <Geth> ¦ nqp: 8afa213447 | (Patrick Böker)++ (committed using GitHub Web editor) | 2 files

[00:22] <Geth> ¦ nqp: Merge pull request #690 from patrickbkr/fix-spawnprocasync-tests

[00:22] <Geth> ¦ nqp: 

[00:22] <Geth> ¦ nqp: Adapt tests to new `nqp::spawnprocasync` semantics

[00:22] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/8afa213447

[00:25] *** patrickb left
[00:38] *** travis-ci joined
[00:38] <travis-ci> NQP build passed. Patrick Böker 'Merge pull request #690 from patrickbkr/fix-spawnprocasync-tests

[00:38] <travis-ci> https://travis-ci.org/Raku/nqp/builds/752207964 https://github.com/Raku/nqp/compare/d65a8c109273...8afa213447ae

[00:38] *** travis-ci left
[00:44] *** lucasb left
[03:29] *** Xliff left
[04:06] *** leont left
[05:24] *** linkable6 left
[05:24] *** evalable6 left
[05:26] *** evalable6 joined
[05:27] *** linkable6 joined
[07:53] *** frost-lab left
[08:20] *** Kaiepi left
[08:20] *** Kaiepi joined
[08:42] *** frost-lab joined
[09:06] *** patrickb joined
[09:11] <patrickb> Yesterdays PR changed `spawnprocasync`, so that the `args` arrays first argument is the program to call. Now it occurred to me that this is not exactly the cleanest way to do that.

[09:12] *** epony left
[09:12] <patrickb> A separate `prog` argument would have been the more obvious choice. Is it worth the hastle to change it again or should I just leave it as is?

[09:13] *** patrickb left
[09:14] *** patrickb joined
[09:22] *** Altai-man joined
[09:29] <lizmat> patrickb: now would be the time to change that

[09:29] <lizmat> please remember XS  :-)

[09:29] <lizmat> Files=1346, Tests=117152, 225 wallclock secs (30.33 usr  8.67 sys + 3112.91 cusr 303.46 csys = 3455.37 CPU)

[09:52] *** epony joined
[10:20] *** klapperl_ left
[10:37] <patrickb>  I'll do that then. Probably some time tomorrow.

[10:37] <patrickb> o/

[10:37] *** patrickb left
[10:40] <gfldex> is there a way for MAIN to tell if it's being called by the runtime or by hand?

[10:44] *** frost-lab left
[10:48] <lizmat> gfldex: callframe should be able to tell you ?

[10:53] <gfldex> that should work

[11:53] <Geth> ¦ problem-solving: JJ assigned to codesections Issue Name (and release date) proposal for 6.e https://github.com/Raku/problem-solving/issues/254

[11:57] *** sena_kun joined
[11:59] *** Altai-man left
[12:31] *** leont joined
[12:37] <Geth> ¦ rakudo/faster-slice-access: 34 commits pushed by (Elizabeth Mattijsen)++

[12:37] <Geth> ¦ rakudo/faster-slice-access: review: https://github.com/rakudo/rakudo/compare/e20c14d21c9b...17d86956ad2e

[12:38] <lizmat> that was a troublesome rebase  :-(    caused by the spawnprocasync changes  :-(

[12:41] *** klapperl joined
[13:15] <Geth> ¦ problem-solving: AlexDaniel self-unassigned There's a huge PR/issue deficit in the Rakudo repo https://github.com/Raku/problem-solving/issues/5

[14:20] *** leont left
[14:47] *** cog_ left
[14:52] *** cog joined
[14:55] *** sena_kun left
[15:04] *** sena_kun joined
[15:06] *** Xliff joined
[15:07] <Xliff> \o

[15:07] <Xliff> I'm getting JSON errors no matter where I run raku. 

[15:07] <Xliff> Invalid JSON: at 60: expected a json object, but got '"],\n    \""'

[15:08] *** sena_kun left
[15:09] <Xliff> Oh piffle. Nevermind. Bad -I directive

[15:39] *** sena_kun joined
[15:57] *** Altai-man joined
[15:59] *** sena_kun left
[18:24] *** finsternis joined
[19:11] <Geth> ¦ rakudo: nwc10++ created pull request #4151: 02-simple-args.c should #include <sys/types.h> to get ssize_t

[19:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4151

[19:51] *** Altai-man left
[20:12] *** b2gills left
[20:20] <Geth> ¦ rakudo: ac10a7a8bb | (Nicholas Clark)++ | t/04-nativecall/02-simple-args.c

[20:20] <Geth> ¦ rakudo: 02-simple-args.c should #include <sys/types.h> to get ssize_t

[20:20] <Geth> ¦ rakudo: 

[20:20] <Geth> ¦ rakudo: Without this the code won't even compile on Solaris.

[20:20] <Geth> ¦ rakudo: 

[20:20] <Geth> ¦ rakudo: I assume that other *nix platforms "leak" the definition of ssize_t when

[20:20] <Geth> ¦ rakudo: other headers are included, hence why it has not been spotted before.

[20:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ac10a7a8bb

[20:20] <Geth> ¦ rakudo: f89863249e | niner++ (committed using GitHub Web editor) | t/04-nativecall/02-simple-args.c

[20:20] <Geth> ¦ rakudo: Merge pull request #4151 from nwc10/need-sys-types-for-ssize_t

[20:20] <Geth> ¦ rakudo: 

[20:20] <Geth> ¦ rakudo: 02-simple-args.c should #include <sys/types.h> to get ssize_t

[20:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f89863249e

[20:41] *** b2gills joined
[22:38] *** sena_kun joined
[23:50] <ugexe> m: say v0.1 ~~ v0.1.1; say v0.1.0 ~~ v0.1.1; say v0.1.1 ~~ v0.1; say v0.1.1 ~~ v0.1.0;

[23:51] <camelia> rakudo-moar f89863249: OUTPUT: «False␤False␤True␤False␤»

[23:51] <tellable6> 2020-12-23T22:04:25Z #raku <patrickb> ugexe: Do I understand correctly, that zef can't install from cpan on Windows, because there is no gzip?

[23:51] <ugexe> feels like those should all be False

[23:54] *** sena_kun left
[23:55] *** Xliff left
[23:56] <ugexe> a long time ago the first result would have been True as well, but I think i fixed that one without fixing the other one.

[23:58] <ugexe> ah yes -- https://github.com/rakudo/rakudo/commit/01dbd874ee5f23fdb3351d2bce1b9af7629caea0

