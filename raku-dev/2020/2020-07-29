[00:19] *** Altai-man_ joined
[00:22] *** sena_kun left
[00:57] *** djinni` left
[00:57] *** greppable6 left
[00:57] *** committable6 left
[00:57] *** bisectable6 left
[00:57] *** reportable6 left
[01:02] *** djinni` joined
[01:02] *** greppable6 joined
[01:02] *** committable6 joined
[01:02] *** bisectable6 joined
[01:02] *** reportable6 joined
[01:03] *** AlexDaniel` left
[01:03] *** unclechu left
[01:07] *** unclechu joined
[01:22] *** AlexDaniel` joined
[01:27] <Geth> ¦ roast/roast_657: 17 commits pushed by (Vadim Belman)++

[01:27] <Geth> ¦ roast/roast_657: review: https://github.com/Raku/roast/compare/07c09e9e9c23...db6ec9a2d937

[01:33] *** sena_kun joined
[01:35] *** Altai-man_ left
[01:49] *** Kaiepi left
[02:42] *** Altai-man_ joined
[02:44] *** sena_kun left
[03:38] *** sena_kun joined
[03:40] *** Altai-man_ left
[04:10] *** [Coke] left
[04:17] *** [Coke] joined
[04:17] *** [Coke] left
[04:17] *** [Coke] joined
[04:22] *** Altai-man_ joined
[04:24] *** sena_kun left
[04:53] *** [Coke]_ joined
[04:54] *** [Coke] left
[05:02] *** sena_kun joined
[05:04] *** Altai-man_ left
[05:13] *** Altai-man_ joined
[05:15] *** sena_kun left
[05:32] *** sena_kun joined
[05:34] *** Altai-man_ left
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:11] *** Altai-man_ joined
[06:14] *** sena_kun left
[06:31] *** patrickb joined
[06:35] *** patrickb left
[06:47] *** patrickb joined
[07:42] *** Kaiepi joined
[07:51] *** [TuxCM] left
[08:12] *** sena_kun joined
[08:14] *** Altai-man_ left
[08:21] *** squashable6 left
[08:23] *** leont joined
[08:24] *** squashable6 joined
[10:01] *** Kaiepi left
[10:02] *** Kaiepi joined
[10:03] *** Kaiepi left
[10:03] *** Kaiepi joined
[10:06] *** JJMerelo joined
[10:08] <JJMerelo> Just a reminder that the call for authors of the 20th anniversary calendar is open https://github.com/Raku/advent/tree/master/20th

[10:08] <tellable6> 2020-07-28T19:31:01Z #raku <[ptc]> JJMerelo having dug a bit further, I've found that the whateverable Travis build uses htmlify in the test section, which no longer exists

[10:08] <tellable6> 2020-07-28T19:31:41Z #raku <[ptc]> JJMerelo should therefore the whateverable part of the build be removed?  I mean, it doesn't work atm anyway...  Maybe better to get rid of dead code?

[10:08] <JJMerelo> .tell [ptc] it's a reasonable option to remove that, yes. It's not running anyway, and hasn't for some time.

[10:08] <tellable6> JJMerelo, I'll pass your message to [ptc]

[10:09] <JJMerelo> There are also a couple of examples now, just in case you need to be inspired https://github.com/Raku/advent/tree/master/20th/articles

[10:11] <JJMerelo> We are looking for short articles that refer to specif RFCs and show how they ended up in the real Raku :-)  Everyone is welcome to participate!

[10:11] *** Altai-man_ joined
[10:13] *** sena_kun left
[10:15] *** MasterDuke left
[10:37] *** TimToady left
[10:44] <JJMerelo> We have almost seven now https://github.com/Raku/advent/tree/master/20th Anyone else?

[10:44] *** TimToady joined
[10:45] * lizmat hopes TimToady could be persuaded to write one

[10:49] <moritz> lizmat: I recommend writing an email to him; he hasn't been very active on IRC lately

[10:50] <lizmat> moritz: TimToady doesn't answer my emails, so that is not an option :-(

[10:50] <lizmat> possibly *any* emails, but that I do not know

[10:51] <moritz> :-(

[11:05] <lizmat> JJMerelo: I'm tempted to do https://raku.org/archive/rfc/28.html but I probably shouldn't

[11:06] <JJMerelo> lizmat double LOL

[11:06] <lizmat> Guess I'm a programmer, so I won't

[11:06] <JJMerelo> lizmat we could email Gloria :-)  Maybe she can be persuaded to write one, too :-)

[11:08] *** JJMerelo left
[11:08] *** JJMerelo joined
[11:13] * JJMerelo has been kicked out again...

[11:13] *** Kaiepi left
[12:12] *** sena_kun joined
[12:14] *** Altai-man_ left
[12:34] *** squashable6 left
[13:10] <[Tux]> Rakudo version 2020.07-46-ga3af5833d - MoarVM version 2020.07-10-g7a2881a85

[13:10] <[Tux]> csv-test-xs-20      0.402 -  0.415

[13:10] <[Tux]> csv-ip5xs           0.824 -  0.866

[13:10] <[Tux]> test-t --race       0.862 -  0.871

[13:10] <[Tux]> test-t              1.999 -  2.159

[13:10] <[Tux]> csv-ip5xs-20        8.281 -  8.678

[13:10] <[Tux]> test                8.309 -  8.756

[13:10] <[Tux]> test-t-20 --race    9.289 -  9.300

[13:10] <[Tux]> csv-parser         24.741 - 28.468

[13:10] <[Tux]> test-t-20          32.528 - 34.046

[13:21] *** Kaiepi joined
[13:30] *** JJMerelo left
[13:46] *** [Coke]_ is now known as [Coke]

[13:46] *** MasterDuke joined
[13:49] <raku-bridge> <Vendethiel> oh, that's an interesting idea.

[14:10] *** lucasb joined
[14:11] *** patrickb left
[14:11] *** Altai-man_ joined
[14:12] *** patrickb joined
[14:14] *** sena_kun left
[14:56] *** sivoais_ joined
[14:58] *** sivoais left
[15:00] *** squashable6 joined
[15:04] *** lichtkind joined
[15:55] *** raku-bridge left
[15:55] *** raku-bridge joined
[15:55] *** raku-bridge left
[15:55] *** raku-bridge joined
[16:01] *** patrickb left
[16:12] *** sena_kun joined
[16:14] *** Altai-man_ left
[16:48] *** lichtkind left
[17:52] <gfldex> is there a Raku-land equivalent to `$/ := nqp::getlexcaller('$/');`?

[17:54] <lizmat> CALLER::<$/> ?

[17:54] *** JJMerelo joined
[17:55] <gfldex> doesnt work in the same way

[17:56] <gfldex> line 23-25 in https://gist.github.com/gfldex/1193b1eaf86f6be0903f92541a0adad3

[17:57] <gfldex> descenting into nqp-land makes line 52-54 possible

[17:58] <gfldex> But I feel dirty already for using augment. :->

[18:00] <gfldex> Do we have a place to grep in all the source of all the modules in the ecosystem?

[18:00] <gfldex> I would like to know how many modules augment and/or `use nqp;`.

[18:00] <timotimo> aye, an irc bot

[18:00] <timotimo> otherwise you can clone perl6-all-modules from mritz' github user

[18:00] <timotimo> greppable6: use nqp

[18:00] <greppable6> timotimo, 134 lines, 85 modules: https://gist.github.com/8315e8af66af09cd8f0ca1c2fc24a9d2

[18:01] <gfldex> greppable6: augment class

[18:01] <greppable6> gfldex, 49 lines, 26 modules: https://gist.github.com/4088b5b8e7b51d94276b15500c240a5f

[18:01] <gfldex> I feel a little less dirty already.

[18:11] *** Altai-man_ joined
[18:13] *** sena_kun left
[18:32] <gfldex> Does the occurrence of ~~ introduce $/ into the local scope?

[18:33] <timotimo> $/ lives in every block, jus tlike $! and $_

[18:35] <gfldex> is that case i might have found a bug

[18:37] <gfldex> https://gist.github.com/gfldex/8a02dd9f9c6005251acedf03e29a5d77 outputs „caller lexicals: ($_)“ unless I uncomment line 50. Then it outputs „caller lexicals: (Exitcode $¢ $/ $=finish ::?PACKAGE GLOBALish $?PACKAGE $! $ex $_ Shell $=pod !UNIT_MARKER EXPORT)“

[18:38] <gfldex> Is the optimiser optimising?

[18:38] <timotimo> it's possible

[18:38] <timotimo> CALLER:: stuff should only be able to access variables that are "is dynamic" i think?

[18:40] <gfldex> I think roast says so. Rakudo is using the nqp-way in Str.match .

[18:48] *** JJMerelo left
[18:59] <gfldex> I got it working by using ‚CALLER::CALLER::<$/> := $/;‘. given/when seams to introduce an additional frame that does not inherit $/

[19:04] <gfldex> Does this qualify as a Rakudobug?

[19:11] *** lichtkind joined
[19:49] <lizmat> gfldex: that's the whole problem with Str.match

[19:50] <lizmat> each method needs to either pass on the original $/, or needs to fetch it from their caller, and be careful about that

[19:50] <lizmat> the fact that you need two CALLER:: to get at the correct $/ feels correct to me

[19:50] <gfldex> Str.pm6 is way longer then it should be …

[19:50] <lizmat> it *is* another frame, is it not

[19:50] <lizmat> gfldex: tell me about it

[19:51] <lizmat> yet separating it into separate files, like I've done with Supply, generally does not sit well by some people  :-(

[19:51] <gfldex> All you do is moving complexety around.

[19:52] <gfldex> I mean the bug part is that this additional frame does hide $/.

[19:52] <gfldex> So it's not really a block.

[19:52] <lizmat> fwiw, I would be very glad if we could lose $/ altogether

[19:53] <lizmat> but then how would $0 and $<foo> work ?

[19:53] <gfldex> Those magic variables are super useful. It's a good thing they are few tho.

[19:54] <lizmat> but having to pass them on is a pain  :-), as you've found out  :-)

[19:54] <gfldex> If it would have been documented, I would likely not spend 3 hours to make it work.

[19:55] <gfldex> OUTER/CALLER/etc are barely mentioned

[19:56] <lizmat> it's mainly because they're really hacks and feel like they should be handled differently

[19:56] <gfldex> If two MMD candidates have the same "precedence", is it defined behaviour which one will win?

[19:56] <lizmat> and they come with performance penalties, as anything doing a CALLER:: basically cannot be optimized, if I remember correctly

[19:59] <gfldex> I believe to remember the first found MMD candidate will win. I'm not sure if that is by design or by implementation.

[20:01] <gfldex> Actually I will just put it into my next blog post. On the internets roviding an answer that is wrong is the fastest way to get the right answer.

[20:12] *** sena_kun joined
[20:14] *** Altai-man_ left
[20:14] *** MasterDuke left
[20:51] *** sivoais_ left
[21:18] *** sivoais joined
[22:11] *** Altai-man_ joined
[22:14] *** sena_kun left
[22:26] *** leont left
[23:06] *** lichtkind left
