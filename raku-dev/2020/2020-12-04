[01:30] *** Xliff_ left
[02:41] *** ggoebel_ left
[03:48] *** evalable6 left
[03:48] *** linkable6 left
[03:48] *** evalable6 joined
[03:49] *** linkable6 joined
[04:05] *** melezhik joined
[04:19] *** melezhik left
[05:55] *** travis-ci joined
[05:55] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Remove postcircumfix[int] candidates

[05:55] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/747458945 https://github.com/rakudo/rakudo/compare/0f4970da2fb8...7c0956b81b4b

[05:55] *** travis-ci left
[06:18] *** domidumont joined
[06:31] *** frost-lab joined
[07:50] <[Tux]> timotimo, which one is twice as fast?

[07:58] *** sena_kun joined
[09:06] *** Altai-man joined
[09:09] *** sena_kun left
[09:53] *** patrickb joined
[10:39] *** Xliff joined
[10:40] <tyil> lizmat: I think I got packages in Gentoo working

[10:41] *** ggoebel_ joined
[10:42] *** moray joined
[10:42] *** moray is now known as morayj

[10:47] <timotimo> as i understand it, if you've got a shaped native 1dimensional array like my int @blerp[99] then "most accesses" will be 2x as fast as when you leave out the [99] part; i imagine 2x as fast means instead of 10000 accesses per second you get 20000 (completely fictitious numbers)

[10:49] <Xliff> m: my @a = gather for ^3 { take (0, 1, 2) }; @a.gist.say

[10:49] <camelia> rakudo-moar 2c5b54576: OUTPUT: «[(0 1 2) (0 1 2) (0 1 2)]␤»

[10:49] <Xliff> m: my @a = gather for ^3 { take |(0, 1, 2) }; @a.gist.say

[10:49] <camelia> rakudo-moar 2c5b54576: OUTPUT: «[(0 1 2) (0 1 2) (0 1 2)]␤»

[10:49] <Xliff> m: my @a = gather for ^3 { my @a = (0, 1, 2); take |@a }; @a.gist.say

[10:49] <camelia> rakudo-moar 2c5b54576: OUTPUT: «[(0 1 2) (0 1 2) (0 1 2)]␤»

[10:49] <Xliff> m: my @a = gather for ^3 { my @a = (0, 1, 2); take |@a.flat }; @a.gist.say

[10:50] <camelia> rakudo-moar 2c5b54576: OUTPUT: «[(0 1 2) (0 1 2) (0 1 2)]␤»

[10:50] <Xliff> Hum.

[11:02] *** patrickb left
[11:14] *** morayj left
[11:31] *** patrickb joined
[12:01] *** Xliff left
[12:35] <moritz> my @a = flat gather for ^3 { my @a = (0, 1, 2); take @a }; say @a

[12:35] <evalable6> moritz, rakudo-moar 2c5b54576: OUTPUT: «[0 1 2 0 1 2 0 1 2]␤»

[12:52] <Geth> ¦ rakudo: 3def3ced38 | (Elizabeth Mattijsen)++ | 2 files

[12:52] <Geth> ¦ rakudo: Properly mark native shaped1 candidates

[12:52] <Geth> ¦ rakudo: 

[12:52] <Geth> ¦ rakudo: Some were missing "is raw", all were missing "is default" to resolve

[12:52] <Geth> ¦ rakudo: dispatch problems with upcoming unshaped native candidates.

[12:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3def3ced38

[13:05] *** lucasb joined
[13:08] *** sena_kun joined
[13:09] *** Altai-man left
[14:04] *** frost-lab left
[14:54] *** patrickb left
[14:55] *** patrickb joined
[15:14] *** melezhik joined
[15:15] <melezhik> hi! do we have a list of GH issue are going to resolved in the next release?

[15:15] <Geth> ¦ rakudo: 705e6e62c5 | (Elizabeth Mattijsen)++ | 4 files

[15:15] <Geth> ¦ rakudo: Give native arrays their own postcircumfix candidates

[15:15] <Geth> ¦ rakudo: 

[15:15] <Geth> ¦ rakudo: This makes native array access about 40% faster, making it now 25%

[15:15] <Geth> ¦ rakudo: faster again than shaped native array access.

[15:15] <Geth> ¦ rakudo: 

[15:15] <Geth> ¦ rakudo: Remove some candidates from the shaped native array circumfixes

[15:15] <Geth> ¦ rakudo: that can be handled by the non-shaped native array access ones.

[15:15] <Geth> ¦ rakudo: 

[15:15] <Geth> ¦ rakudo: Adapted error message test to check for the mention of type of

[15:15] <Geth> ¦ rakudo: native array.

[15:15] <melezhik> to resolve -> to be resolved

[15:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/705e6e62c5

[15:15] <lizmat> the ones marked "blocker: I guess ?

[15:18] <melezhik> https://github.com/rakudo/rakudo/issues?q=is%3Aissue+label%3ABLOCKER+is%3Aopen only 2 issues here?

[15:18] <lizmat> melezhik: yeah, looks like

[15:20] <melezhik> I am looking to the closed ones  - https://github.com/rakudo/rakudo/issues?q=is%3Aissue+is%3Aclosed , which one from this group are going to be included in the next release?

[15:22] <lizmat> basically all that got closed since the last release ?

[15:23] <melezhik> ok, let me put it this way. I am thinking about having all to be shipped as a next release resolved issues in RICH

[15:24] <melezhik> so that devs could take a look at the related RP tests and verify that issues are really gone against HEAD commit

[15:25] <lizmat> that would be very nice... but some issues get closed without any code changes... 

[15:25] <melezhik> so far it's just a set of some (recent) issue I greped from GH issues pages - https://rakudist.raku.org/play/rakudo-issues

[15:25] <lizmat> so I don't think you can automate that so easily

[15:25] <melezhik> yeah, I see. I am only talking about the type of issues where bug fixes and one can verify it through a RP test

[15:26] <melezhik> and this is main point in here - https://sparrowdo.wordpress.com/2020/12/03/rakudo-issues-player/

[15:26] <lizmat> I guess we could think about some standard format in issues

[15:26] <lizmat> to make this easier

[15:27] <melezhik> yeah ... 

[15:27] <lizmat> "Let's  make it easier for Richie"  :-)

[15:27] <melezhik> let's make it easier for everyone :] 

[15:28] <melezhik> so extracting code samples from GH could be a final goal, so far it's just a matter of creating some (unit Test ?) via  RP and named it as "issue-$issue_numer"

[15:29] <melezhik> number

[15:29] <melezhik> after that Sparky cron will start replaying the scenario for all other new commits and have summary at the RICH page

[15:33] <lizmat> cool!

[15:34] <melezhik> http://rakudist.raku.org/sparky/report/RakuPlay-1/2740 just an example. issue-4085 in the build title matters, this is how RICH cron knows it needs to rerun the same build for all new rakudo commits

[16:24] *** melezhik left
[16:30] *** cog joined
[16:57] *** Xliff joined
[17:01] *** domidumont left
[17:07] *** Altai-man joined
[17:09] *** sena_kun left
[17:11] *** moray joined
[17:11] *** moray is now known as morayj

[17:14] <[Tux]> Rakudo v2020.11-93-g705e6e62c (v6.d) on MoarVM 2020.11-54-ga595d9ddc

[17:14] <[Tux]> csv-test-xs-20      0.388 -  0.398

[17:14] <[Tux]> csv-ip5xs           0.832 -  0.839

[17:14] <[Tux]> test-t --race       0.844 -  0.926

[17:14] <[Tux]> test-t              1.884 -  1.893

[17:14] <[Tux]> test                7.571 -  7.860

[17:14] <[Tux]> csv-ip5xs-20        7.880 -  8.673

[17:14] <[Tux]> test-t-20 --race    9.364 -  9.747

[17:14] <[Tux]> csv-parser         24.635 - 25.020

[17:14] <[Tux]> test-t-20          31.972 - 32.423

[17:15] <Geth> ¦ nqp: e7b2b7e0c8 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[17:15] <Geth> ¦ nqp: Some ops documentation reshuffling

[17:15] <Geth> ¦ nqp: 

[17:15] <Geth> ¦ nqp: - moved some lemma's to a proper chapter

[17:15] <Geth> ¦ nqp: - created new "Profiling" and "Introspection" section

[17:15] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/e7b2b7e0c8

[17:15] <Geth> ¦ nqp: 50862433a3 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[17:15] <Geth> ¦ nqp: Restore Miscellaneous section

[17:15] <Geth> ¦ nqp: 

[17:16] <Geth> ¦ nqp: It got clobbered in the last commit

[17:16] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/50862433a3

[17:20] <Geth> ¦ nqp: 04a2ddb79f | (Elizabeth Mattijsen)++ | docs/ops.markdown

[17:20] <Geth> ¦ nqp: Some more moving lemma's around

[17:20] <Geth> ¦ nqp: 

[17:20] <Geth> ¦ nqp: Remove the Variable section, added a Time section

[17:20] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/04a2ddb79f

[18:17] *** morayj left
[18:21] <Geth> ¦ rakudo: 4304e25059 | (Elizabeth Mattijsen)++ | 3 files

[18:21] <Geth> ¦ rakudo: Fixes to native @a[Iterable]

[18:21] <Geth> ¦ rakudo: 

[18:21] <Geth> ¦ rakudo: - Return a list of the same native type, instead of an Opaque one

[18:21] <Geth> ¦ rakudo: - Handle Iterables in containers correctly

[18:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4304e25059

[18:21] *** domidumont joined
[18:24] *** domidumont left
[19:41] *** MasterDuke joined
[20:13] <Geth> ¦ rakudo: 6c7044ec31 | (Elizabeth Mattijsen)++ | 3 files

[20:13] <Geth> ¦ rakudo: Tighten up native @a[] invocant signatures

[20:13] <Geth> ¦ rakudo: 

[20:13] <Geth> ¦ rakudo: Candidates can't handle type objects as invocant, so don't allow that.

[20:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6c7044ec31

[21:05] *** Altai-man left
[21:22] *** patrickb left
[21:23] *** patrickb joined
[23:10] *** leont joined
[23:13] *** patrickb left
