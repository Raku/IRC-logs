[00:59] *** linkable6 left
[00:59] *** evalable6 left
[01:01] *** linkable6 joined
[01:02] *** evalable6 joined
[01:22] *** vrurg left
[01:23] *** vrurg joined
[01:36] *** travis-ci joined
[01:36] <travis-ci> Rakudo build passed. Christian Bartolomäus 'Merge pull request #4044 from usev6/jvm_gh4041

[01:36] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/744498417 https://github.com/rakudo/rakudo/compare/f6cdbd81474c...e074f3c56295

[01:36] *** travis-ci left
[02:13] <Geth> ¦ roast: f5db1287bd | (Vadim Belman)++ | S12-coercion/coercion-types.t

[02:13] <Geth> ¦ roast: Fix incorrect coercion spectest

[02:13] <Geth> ¦ roast: 

[02:13] <Geth> ¦ roast: `1` and `e` are incorrect values for Rat(Str). Replaced with `1.0` and

[02:13] <Geth> ¦ roast: `<2.71>`. The latter as an additional measure to make sure allomorphs

[02:13] <Geth> ¦ roast: are treated correctly.

[02:13] <Geth> ¦ roast: 

[02:14] <Geth> ¦ roast: Also added tests for errors when invalid coerctions are attempted.

[02:14] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/f5db1287bd

[02:14] <Geth> ¦ roast: 20db11fa7d | (Vadim Belman)++ (committed using GitHub Web editor) | S12-coercion/coercion-types.t

[02:14] <Geth> ¦ roast: Merge pull request #700 from vrurg/rakudo_4040

[02:14] <Geth> ¦ roast: 

[02:14] <Geth> ¦ roast: Fix incorrect coercion spectest

[02:14] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/20db11fa7d

[02:50] *** travis-ci joined
[02:50] <travis-ci> Rakudo build failed. Vadim Belman 'Merge pull request #4043 from vrurg/rakudo_4040

[02:50] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/744511853 https://github.com/rakudo/rakudo/compare/e074f3c56295...6f314947ea9e

[02:50] *** travis-ci left
[03:10] *** klapperl left
[03:15] *** klapperl joined
[03:41] *** squashable6 left
[03:41] *** squashable6 joined
[03:43] *** squashable6 left
[03:44] *** squashable6 joined
[03:48] <Geth> ¦ rakudo: vrurg++ created pull request #4046: Provide more improvements to language revision support and more.

[03:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4046

[03:52] <Geth> ¦ roast: vrurg++ created pull request #701: Test for the right exception and don't disable mixins

[03:52] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/701

[04:44] *** linkable6 left
[04:44] *** evalable6 left
[04:46] *** evalable6 joined
[04:46] *** linkable6 joined
[05:23] *** squashable6 left
[05:26] *** squashable6 joined
[05:33] *** frost-lab joined
[05:41] <Geth> ¦ rakudo: Kaiepi++ created pull request #4047: Type IO::Socket::INET family/type/protocol values

[05:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4047

[05:42] <Kaiepi> there are more bits and pieces of problem-solving #111's solution like ^ that don't need to be done in one big pr

[06:14] *** Altai-man joined
[06:16] <Geth> ¦ roast: Kaiepi++ created pull request #702: Add a test for invalid Int:D families for IO::Socket::INET.new

[06:16] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/702

[07:00] <releasable6> Next release in ≈2 days and ≈11 hours. 2 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[07:56] <bartolin> oh noes, more test breakage on the jvm backend. *looking*

[07:59] <Altai-man> bartolin++

[08:00] <bartolin> looks like another case of BOOTStr blowing up where Str is expected. So hopefully not too hard to fix ;)

[08:07] *** domidumont joined
[08:11] *** sena_kun joined
[08:12] *** Altai-man left
[08:53] <lizmat> Files=1340, Tests=114243, 228 wallclock secs (30.24 usr  8.66 sys + 3164.45 cusr 300.10 csys = 3503.45 CPU)

[09:14] *** MasterDuke joined
[10:05] <Geth> ¦ roast: a85a8cfcb1 | (Christian Bartolomäus)++ | S06-currying/positional.t

[10:05] <Geth> ¦ roast: [JVM] Unfudge tests that pass again

[10:05] <Geth> ¦ roast: 

[10:05] <Geth> ¦ roast: Fixed with https://github.com/rakudo/rakudo/pull/4044

[10:05] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/a85a8cfcb1

[11:20] *** Xliff joined
[11:20] <Xliff> \o

[11:21] <Xliff> patrickb: Unfortunately, I haven't seen much improvement. Using zef 0.9.4

[11:21] <tellable6> Xliff, I'll pass your message to patrickb

[11:40] *** vrurg left
[11:43] <Geth> ¦ rakudo: usev6++ created pull request #4048: Avoid BOOTStr being passed to Version.new

[11:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4048

[11:45] <Geth> ¦ rakudo: c015759bc9 | (Christian Bartolomäus)++ | src/Perl6/World.nqp

[11:45] <Geth> ¦ rakudo: Avoid BOOTStr being passed to Version.new

[11:45] <Geth> ¦ rakudo: 

[11:45] <Geth> ¦ rakudo: This fixes 'use v6.e.PREVIEW' on the JVM backend. Without the patch

[11:45] <Geth> ¦ rakudo: it dies with X::Coerce::Impossible ("Impossible coercion from

[11:45] <Geth> ¦ rakudo: 'BOOTStr' into 'Str': value is of unacceptable type BOOTStr").

[11:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c015759bc9

[11:45] <Geth> ¦ rakudo: 5f0da2bdf5 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/Perl6/World.nqp

[11:45] <Geth> ¦ rakudo: Merge pull request #4048 from usev6/bootstr_v6.e.preview

[11:45] <Geth> ¦ rakudo: 

[11:45] <Geth> ¦ rakudo: Avoid BOOTStr being passed to Version.new

[11:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5f0da2bdf5

[11:59] *** MasterDuke left
[12:07] <Geth> ¦ rakudo: e612214ca7 | (Elizabeth Mattijsen)++ | 2 files

[12:07] <Geth> ¦ rakudo: Make setting array shapes more alike

[12:07] <Geth> ¦ rakudo: 

[12:07] <Geth> ¦ rakudo: Between native arrays and "normal" arrays.  This probably shows

[12:07] <Geth> ¦ rakudo: there's more room for simplification, but leaving this as is for

[12:07] <Geth> ¦ rakudo: now.

[12:07] <Geth> ¦ rakudo: 

[12:07] <Geth> ¦ rakudo: This also allows 'my int @a[*]' to work, just like 'my @a[*]' did,

[12:07] <Geth> ¦ rakudo: which was the impetus for this change.

[12:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e612214ca7

[12:10] *** Altai-man joined
[12:12] *** sena_kun left
[12:15] *** camelCaser left
[12:21] *** Geth_ joined
[12:26] *** Kaiepi left
[12:26] *** Kaeipi joined
[12:26] <lizmat> m: my @a[5] = ^5; dd @a; @a = (); dd @a

[12:26] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Array element = Array.new(:shape(5,), [0, 1, 2, 3, 4])␤Array element = Array.new(:shape(5,), [Any, Any, Any, Any, Any])␤»

[12:27] <lizmat> m: my int @a[5] = ^5; dd @a; @a = (); dd @a    # subtly different behaviour

[12:27] <camelia> rakudo-moar 85847d2f1: OUTPUT: «array[int].new(:shape(5,), [0, 1, 2, 3, 4])␤array[int].new(:shape(5,), [0, 1, 2, 3, 4])␤»

[12:27] <lizmat> well, maybe not so subtle

[12:27] <lizmat> m: my @a[5] = ^5; dd @a; @a = 42,666; dd @a   # similarly

[12:27] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Array element = Array.new(:shape(5,), [0, 1, 2, 3, 4])␤Array element = Array.new(:shape(5,), [42, 666, Any, Any, Any])␤»

[12:27] <lizmat> m: my int @a[5] = ^5; dd @a; @a = 42,666; dd @a   # similarly

[12:27] <camelia> rakudo-moar 85847d2f1: OUTPUT: «array[int].new(:shape(5,), [0, 1, 2, 3, 4])␤array[int].new(:shape(5,), [42, 666, 2, 3, 4])␤»

[12:30] *** Geth_ left
[12:30] *** Geth_ joined
[12:31] *** Geth__ joined
[12:31] *** Geth__ left
[12:37] <lizmat> another set of differences :-(   :

[12:37] <lizmat> m: my @a[5]; @a = ^6

[12:37] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Index 5 for dimension 1 out of range (must be 0..4)␤  in block <unit> at <tmp> line 1␤␤»

[12:37] <lizmat> m: my int @a[5]; @a = ^6

[12:37] <camelia> rakudo-moar 85847d2f1: OUTPUT: «This type (List) does not support positional operations␤  in block <unit> at <tmp> line 1␤␤»

[12:37] <lizmat> seems there is a little work to do  :-(

[12:38] <lizmat> Altai-man ^^^ probably won't be ready for this release

[12:40] *** MasterDuke joined
[12:41] <Altai-man> lizmat, is it a regression?

[12:41] <lizmat> don't think so

[12:41] <lizmat> native shaped arrays are just woefully undertested atm

[12:41] <Altai-man> bisectable6, my int @a[5]; @a = ^6

[12:41] <bisectable6> Altai-man, Will bisect the whole range automagically because no endpoints were provided, hang tight

[12:41] * lizmat is writing tests atm

[12:42] <bisectable6> Altai-man, Output on all releases: https://gist.github.com/bb4239e1875d2d98323ed7e68a9ed983

[12:42] <bisectable6> Altai-man, bisect log: https://gist.github.com/0ef22efcd87545bb144ee59f657e390b

[12:42] <bisectable6> Altai-man, bisect log: https://gist.github.com/bac9ea59fd7e00ce82a27747283bc201

[12:42] <bisectable6> Altai-man, Output on all releases and bisected commits: https://gist.github.com/1773081d13d08841f3a78eba4bdab2df

[12:42] <Altai-man> lizmat, not a blocker for sure. Kudos for writing tests and working with this!

[12:43] <lizmat> I think actually that the correct behaviour before 2016.12 was because "int" was syntactically accepted, but didn't do anytihng

[12:43] <lizmat> so I think it's been like this from the beginning

[12:45] *** Geth__ joined
[12:45] *** raku-bridge joined
[12:53] *** Geth_ left
[12:54] *** raku-bridge left
[12:54] *** Geth__ left
[12:57] *** Geth___ joined
[12:58] *** raku-bridge joined
[12:58] *** raku-bridge left
[12:58] *** Geth_ joined
[12:58] *** raku-bridge joined
[12:58] *** raku-bridge left
[12:58] *** raku-bridge joined
[12:58] *** Geth___ left
[13:02] *** raku-bridge left
[13:02] *** raku-bridge joined
[13:02] *** raku-bridge left
[13:02] *** raku-bridge joined
[13:04] *** raku-bridge left
[13:06] *** raku-bridge joined
[13:06] *** raku-bridge left
[13:06] *** raku-bridge joined
[13:13] *** raku-bridge left
[13:13] *** raku-bridge joined
[13:13] *** raku-bridge left
[13:13] *** raku-bridge joined
[13:33] *** raku-bridge left
[13:34] *** raku-bridge joined
[13:35] *** raku-bridge1 joined
[13:36] *** Geth__ joined
[13:37] *** frost-lab left
[13:41] *** raku-bridge left
[13:42] *** Geth__ left
[13:43] *** raku-bridge1 left
[13:43] *** Geth___ joined
[13:44] *** raku-bridge joined
[13:44] *** raku-bridge left
[13:44] *** raku-bridge joined
[13:47] *** raku-bridge1 joined
[13:47] *** raku-bridge1 left
[13:47] *** raku-bridge1 joined
[13:48] *** Geth___ left
[13:49] *** raku-bridge left
[13:50] <lizmat> m: dd Compiler.new.version

[13:50] <camelia> rakudo-moar 85847d2f1: OUTPUT: «v2020.08.2.51.g.85847.d.2.f.1␤»

[13:50] *** raku-bridge1 left
[13:50] <lizmat> wow

[13:50] <lizmat> moritz ^^^

[13:50] *** raku-bridge joined
[13:50] *** raku-bridge left
[13:50] *** raku-bridge joined
[13:50] <lizmat> looks like Camelia is behind a few releases  :-(

[13:51] <lizmat> bisectable6: old=2020.08 my int @a[2,2] = (1,2),(3,4); dd @a.unique

[13:51] <bisectable6> lizmat, Bisecting by exit code (old=2020.08 new=e612214). Old exit code: 0

[13:51] <bisectable6> lizmat, bisect log: https://gist.github.com/f80c7960b7c43a6464cc95d4becd7835

[13:51] <bisectable6> lizmat, (2020-10-23) https://github.com/rakudo/rakudo/commit/c37ffe71bd19f1a1bfaaf12e3fccfa8004bace56

[13:53] *** Geth_ left
[13:54] <lizmat> yuck

[13:54] <lizmat> that *is* a regression

[13:54] *** raku-bridge left
[13:54] *** Geth__ joined
[13:54] *** raku-bridge joined
[13:54] *** raku-bridge left
[13:54] *** raku-bridge joined
[13:56] *** raku-bridge left
[13:57] *** raku-bridge joined
[14:00] <Altai-man> lizmat, a released one... :)

[14:03] *** raku-bridge left
[14:03] *** Geth__ left
[14:10] *** raku-bridge joined
[14:10] *** raku-bridge left
[14:10] *** raku-bridge joined
[14:10] *** Geth_ joined
[14:14] *** Geth_ left
[14:15] *** raku-bridge left
[14:15] *** vrurg joined
[14:16] *** Geth__ joined
[14:23] *** raku-bridge joined
[14:25] <Geth__> ¦ rakudo: 78b03b6260 | (Elizabeth Mattijsen)++ | 2 files

[14:25] <Geth__> ¦ rakudo: Disable optimized .unique/repeated/squish on native arrays

[14:25] <Geth__> ¦ rakudo: 

[14:25] <Geth__> ¦ rakudo: At least for now just before the 2020.11 release.  Introduced

[14:25] <Geth__> ¦ rakudo: in c37ffe71bd19f1a1, it broke those methods on native *shaped*

[14:25] <Geth__> ¦ rakudo: arrays.  Unfortunately, not caught by tests  :-(

[14:25] <Geth__> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/78b03b6260

[14:25] *** raku-bridge left
[14:26] *** raku-bridge joined
[14:26] *** raku-bridge left
[14:26] *** raku-bridge joined
[14:32] *** raku-bridge left
[14:32] *** raku-bridge joined
[14:32] *** raku-bridge left
[14:32] *** raku-bridge joined
[14:34] *** raku-bridge left
[14:34] *** raku-bridge joined
[14:34] *** raku-bridge left
[14:34] *** raku-bridge joined
[14:36] *** raku-bridge left
[14:36] *** raku-bridge joined
[14:36] *** raku-bridge left
[14:36] *** raku-bridge joined
[14:37] *** travis-ci joined
[14:37] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Merge pull request #4048 from usev6/bootstr_v6.e.preview

[14:37] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/744637544 https://github.com/rakudo/rakudo/compare/6f314947ea9e...5f0da2bdf50d

[14:37] *** travis-ci left
[14:48] *** Geth__ left
[14:50] *** raku-bridge left
[15:09] *** Geth___ joined
[15:18] *** raku-bridge joined
[15:27] *** raku-bridge2 joined
[15:27] *** Geth__ joined
[15:32] *** Geth__ left
[15:32] *** raku-bridge2 left
[15:32] *** raku-bridge left
[15:33] *** raku-bridge joined
[15:34] *** raku-bridge left
[15:38] *** Geth__ joined
[15:42] *** raku-bridge joined
[15:42] *** raku-bridge left
[15:42] *** raku-bridge joined
[16:11] *** raku-bridge left
[16:11] *** sena_kun joined
[16:11] *** Geth__ left
[16:12] *** Altai-man left
[16:20] *** Geth_ joined
[16:24] *** Geth_ left
[16:30] *** travis-ci joined
[16:30] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Make setting array shapes more alike

[16:30] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/744640454 https://github.com/rakudo/rakudo/compare/5f0da2bdf50d...e612214ca75c

[16:30] *** travis-ci left
[16:47] <lizmat> aaw  Geth awol  :-(

[16:50] <lizmat> tyil ^^

[16:51] <tyil> lizmat: aye, hetzner (where the servers are located) is having some troubles it looks like

[16:51] <tyil> I'll have to wait until the servers are back up to bring geth back

[16:52] <lizmat> yeah, sure... no pb  :-)

[16:54] <nine> How on earth can a 'return False;' lead to a Type check failed for return value; expected Bool:D but got ForeignCode

[16:55] <moritz> it somebody lexically override False? :D

[16:56] <nine> if only it were something simple like that

[17:02] *** Geth left
[17:03] <lizmat> hmmm... feels like a new coercion protocol issue?

[17:03] <lizmat> m: dd Compiler.new.version

[17:03] <camelia> rakudo-moar 85847d2f1: OUTPUT: «v2020.08.2.51.g.85847.d.2.f.1␤»

[17:03] <lizmat> moritz ^^

[17:04] <lizmat> seems like camelia is stuck in september  :-(

[17:09] <moritz> lizmat: I'm taking a look

[17:09] <lizmat> ++moritz!

[17:10] <Geth___> ¦ roast: 9d3ca2a4a4 | (Elizabeth Mattijsen)++ | 2 files

[17:10] <Geth___> ¦ roast: Initial set of tests one dim native shaped num arrays

[17:10] <Geth___> ¦ roast: review: https://github.com/Raku/roast/commit/9d3ca2a4a4

[17:10] <lizmat> also ba0d5fe53bf854875358

[17:10] <linkable6> (2020-11-19) https://github.com/Raku/roast/commit/ba0d5fe53b Initial set of tests one native shaped int arrays

[17:17] <nine> It's a LEAVE phaser

[17:22] *** Geth___ left
[17:23] *** Geth joined
[17:23] *** raku-bridge joined
[17:23] *** raku-bridge left
[17:23] *** raku-bridge joined
[17:24] <timotimo> make like a tree and get out of here!

[17:25] <nine> Soon....training starts in 20 minutes

[17:26] *** raku-bridge left
[17:27] *** raku-bridge joined
[17:27] *** raku-bridge left
[17:27] *** raku-bridge joined
[17:28] <dogbert17> the new spectest files contains errors, is it WIP?

[17:29] <dogbert17> lizmat: ^^

[17:30] *** raku-bridge left
[17:30] *** Geth left
[17:30] * lizmat double checks

[17:30] <lizmat> they're clean for me?

[17:31] <lizmat> aaah...

[17:31] <lizmat> oops

[17:32] *** Geth joined
[17:32] * lizmat hopes Geth gets it

[17:32] <lizmat> ah, it did not

[17:32] <lizmat> db3ca28e3eaabcc8f0c479

[17:32] <linkable6> (2020-11-19) https://github.com/rakudo/rakudo/commit/db3ca28e3e Handle :exists/delete on 1dim native shaped arrays with int index

[17:33] <lizmat> dogbert17:  ^^ that should make the spectest clean again

[17:33] <dogbert17> that was a very quick fix :-)

[17:33] *** raku-bridge joined
[17:33] *** raku-bridge left
[17:33] *** raku-bridge joined
[17:34] <lizmat> dogbert17: I already had the fix, I had just forgot to push it  :-)

[17:35] <lizmat> found the issue while writing these tests

[17:36] <nine> so spectests should be fine again?

[17:36] <dogbert17> it looks that way

[17:41] <lizmat> nine: yeah, they should be fine

[17:41] *** raku-bridge left
[17:43] *** Geth_ joined
[17:43] *** Geth left
[17:43] *** raku-bridge joined
[17:43] *** raku-bridge left
[17:43] *** raku-bridge joined
[17:44] *** Geth joined
[17:45] <moritz> m: dd Compiler.new.version

[17:45] <camelia> rakudo-moar 78b03b626: OUTPUT: «v2020.10.130.g.78.b.03.b.626␤»

[17:45] *** Geth left
[17:58] <lizmat> moritz++

[18:00] <Geth_> ¦ roast: 1d79e5c9e7 | (Elizabeth Mattijsen)++ | 2 files

[18:00] <Geth_> ¦ roast: Initial set of tests one dim native shaped str arrays

[18:00] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/1d79e5c9e7

[18:01] *** rypervenche left
[18:11] *** rypervenche joined
[18:16] <Geth_> ¦ roast: b292749d13 | (Elizabeth Mattijsen)++ | 2 files

[18:16] <Geth_> ¦ roast: Fix some copy-pastos in comments

[18:16] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/b292749d13

[18:35] <lizmat> https://github.com/Raku/Documentable/issues/145   # sena_kun  not sure that should be considered a blocker or not

[18:38] <lizmat> afk&

[18:41] <jjatria> gugod: Do you think you could bump the version of Cache::LRU? I keep wanting to use associative indexing on it and being unable to, even though the change is already on master

[18:42] <jjatria> Oh damn, that's not yours. Sorry!

[18:48] <nwc10> m: Num(0.777777777777777777777).nude

[18:48] <camelia> rakudo-moar db3ca28e3: OUTPUT: «No such method 'nude' for invocant of type 'Num'.  Did you mean any of␤these: 'none', 'note', 'Num'?␤  in block <unit> at <tmp> line 1␤␤»

[18:48] <nwc10> oops

[18:48] <nwc10> m: Rat(0.777777777777777777777).nude

[18:48] <camelia> rakudo-moar db3ca28e3: ( no output )

[18:48] <nwc10> pah. I'm messing this up...

[18:48] <timotimo> nwc10: send nudes to stdout

[18:48] <nwc10> m: say Rat(0.777777777777777777777).nude

[18:48] <camelia> rakudo-moar db3ca28e3: OUTPUT: «(777777777777777777777 1000000000000000000000)␤»

[18:48] <nwc10> thanks

[18:52] * timotimo snickers like the 13 year old that he is

[18:55] <moritz> a 13 year old snickers likely doesn't taste that good anymore :D

[18:56] <nine> snickers doesn't that as good as when I was 13 years old?

[18:58] <nwc10> I'm not sure what base he is being base in

[18:58] <timotimo> i'm failing to parse what nine wrote

[19:01] <nine> snickers doesn't taste as good as when I was 13 years old?

[19:01] <nine> That's what I wanted to type

[19:29] *** travis-ci joined
[19:29] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Disable optimized .unique/repeated/squish on native arrays

[19:29] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/744663480 https://github.com/rakudo/rakudo/compare/e612214ca75c...78b03b6260e3

[19:29] *** travis-ci left
[20:00] *** domidumont left
[20:07] <Geth_> ¦ rakudo/master: 6 commits pushed by (Vadim Belman)++

[20:07] <Geth_> ¦ rakudo/master: 7de2b15b89 | Fix use of language version/revision terminology

[20:07] <Geth_> ¦ rakudo/master: 9075c7662e | Add replacement mechanizm for P6EX HLL symbol

[20:07] <Geth_> ¦ rakudo/master: b21dd0278e | Try to throw X::Language::IncompatRevisions instead of nqp::die

[20:07] <Geth_> ¦ rakudo/master: 38bb2441e9 | Add method language-revision

[20:07] <Geth_> ¦ rakudo/master: 74faa0a29e | Set mixin class language version based on roles supplied

[20:07] <Geth_> ¦ rakudo/master: ebc9517d33 | Merge pull request #4046 from vrurg/rakudo_4021

[20:07] <Geth_> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/db3ca28e3eaa...ebc9517d3326

[20:08] <Geth_> ¦ roast: a8e49d6c95 | (Vadim Belman)++ | S14-roles/versioning.t

[20:08] <Geth_> ¦ roast: Test for the right exception and don't disable mixins

[20:08] <Geth_> ¦ roast: 

[20:08] <Geth_> ¦ roast: Follow up to rakudo/rakudo#4046. Make the test check for

[20:08] <linkable6> RAKUDO#4046 [closed]: https://github.com/rakudo/rakudo/pull/4046 Provide more improvements to language revision support and fix mixins once more.

[20:08] <Geth_> ¦ roast: `X::Language::IncompatibleRevisions` exception instead of AdHoc.

[20:08] <Geth_> ¦ roast: 

[20:08] <Geth_> ¦ roast: And don't expect cross-language mixins to die because they don't now.

[20:08] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/a8e49d6c95

[20:08] <Geth_> ¦ roast: 132f095ef3 | (Vadim Belman)++ (committed using GitHub Web editor) | S14-roles/versioning.t

[20:08] <Geth_> ¦ roast: Merge pull request #701 from vrurg/rakudo_4021

[20:08] <Geth_> ¦ roast: 

[20:08] <Geth_> ¦ roast: Test for the right exception and don't disable mixins

[20:08] <Geth_> ¦ roast: review: https://github.com/Raku/roast/commit/132f095ef3

[20:10] *** Altai-man joined
[20:13] *** sena_kun left
[20:35] <Geth_> ¦ rakudo: usev6++ created pull request #4049: [JVM] Test if method 'coercive' is available

[20:35] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4049

[20:41] <[Coke]> (snickers) get the teeny ones and freeze them!

[22:01] *** MasterDuke left
[22:04] <Geth_> ¦ rakudo: dumarchie++ created pull request #4050: Optimize some array operators

[22:04] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4050

[22:38] *** raku-bridge left
[22:38] *** raku-bridge joined
[22:38] *** raku-bridge left
[22:38] *** raku-bridge joined
[22:49] *** Altai-man left
