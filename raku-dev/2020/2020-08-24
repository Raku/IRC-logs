[00:02] *** leont left
[00:08] <AlexDaniel> m: sub a(--> <0xf.8*:2[1,0]**0b11/0o200+2.0e2i>) { }

[00:08] <camelia> rakudo-moar 92dc00c20: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed return value␤at <tmp>:1␤------> 3sub a(-->7⏏5 <0xf.8*:2[1,0]**0b11/0o200+2.0e2i>) { }␤»

[00:09] <AlexDaniel> what!

[00:09] <AlexDaniel> how is that malformed

[00:09] <AlexDaniel> m: dd <0xf.8*:2[1,0]**0b11/0o200+2.0e2i>

[00:09] <camelia> rakudo-moar 92dc00c20: OUTPUT: «ComplexStr.new(<0.96875+200i>, "0xf.8*:2[1,0]**0b11/0o200+2.0e2i")␤»

[00:10] <AlexDaniel> it doesn't like allomorphs?

[00:11] <AlexDaniel> m: sub a(--> <-3.1e-23-2.9e-23i>) { }; say +a

[00:11] <camelia> rakudo-moar 92dc00c20: OUTPUT: «-3.1e-23-2.9e-23i␤»

[00:16] <AlexDaniel> m: sub a(--> <0xf8+0b11i>) { }; say +a

[00:16] <camelia> rakudo-moar 92dc00c20: OUTPUT: «248+3i␤»

[00:28] *** yuplushi joined
[00:36] *** dogbert17 joined
[00:39] *** dogbert11 left
[00:57] *** dogbert11 joined
[00:59] *** dogbert17 left
[01:16] *** dogbert17 joined
[01:18] *** dogbert11 left
[01:31] <Geth> ¦ rakudo: 86bac5ad59 | (Timo Paulssen)++ | src/Perl6/Grammar.nqp

[01:31] <Geth> ¦ rakudo: heuristic for reduce metaop: don't get foiled by multiple [

[01:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/86bac5ad59

[01:37] *** dogbert17 left
[01:41] *** dogbert17 joined
[01:44] *** dogbert11 joined
[01:47] *** dogbert17 left
[01:50] *** dogbert17 joined
[01:51] *** dogbert11 left
[01:52] *** dogbert11 joined
[01:53] <Geth> ¦ roast: f59c3e7e84 | (Timo Paulssen)++ | S03-metaops/reduce.t

[01:53] <Geth> ¦ roast: fix for R#2603: [[-1]] confuses rakudo parser

[01:53] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/f59c3e7e84

[01:53] <linkable6> R#2603 [open]: https://github.com/rakudo/rakudo/issues/2603 [grammar and actions][parsing] Errors for "[[-" While Constructing Array

[01:55] *** dogbert17 left
[01:59] *** dogbert11 left
[02:02] *** dogbert11 joined
[02:06] *** dogbert17 joined
[02:09] *** dogbert12 joined
[02:09] *** lucasb left
[02:09] *** dogbert11 left
[02:10] <timotimo> wait, were we going for a "only PRs get to go into master" thing just recently?

[02:10] *** dogbert11 joined
[02:11] *** dogbert17 left
[02:14] *** dogbert12 left
[02:18] *** dogbert17 joined
[02:19] *** dogbert11 left
[02:22] *** dogbert11 joined
[02:25] *** dogbert17 left
[02:29] *** dogbert17 joined
[02:33] *** dogbert11 left
[02:33] *** dogbert11 joined
[02:35] *** dogbert12 joined
[02:38] *** dogbert17 left
[02:38] *** dogbert11 left
[02:38] *** Altai-man joined
[02:40] *** sena_kun left
[02:47] *** AlexDani` joined
[02:49] *** AlexDaniel left
[04:13] *** codesections left
[04:14] *** codesections joined
[04:54] <Geth> ¦ problem-solving: fecundf assigned to jnthn Issue Introspection for operator precedence, associativity https://github.com/Raku/problem-solving/issues/222

[06:39] *** sena_kun joined
[06:41] *** Altai-man left
[06:58] *** dogbert17 joined
[07:02] *** dogbert12 left
[07:10] *** dogbert11 joined
[07:13] *** dogbert17 left
[07:16] <lizmat> timotimo: re "wait, were we going for a "only PRs get to go into master" thing just recently?"

[07:17] <lizmat> no, I don't think there was an official decision, it's just that I decided that *I* will not commit anything directly to master anymore

[07:22] *** dogbert17 joined
[07:24] *** dogbert11 left
[07:45] *** dogbert11 joined
[07:46] *** dogbert17 left
[07:47] *** dogbert17 joined
[07:51] *** dogbert11 left
[08:07] <Geth> ¦ rakudo: 999680e657 | (Elizabeth Mattijsen)++ | src/core.c/Exception.pm6

[08:07] <Geth> ¦ rakudo: Streamline X::Multi::Ambiguous listing

[08:07] <Geth> ¦ rakudo: 

[08:07] <Geth> ¦ rakudo: - remove ":", it does not convey any information, clear it's a signature

[08:07] <Geth> ¦ rakudo: - add two spaces to set it off the first line

[08:07] <Geth> ¦ rakudo: - add "is default" status of the candidate when applicable

[08:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/999680e657

[08:07] <Geth> ¦ rakudo: b8121cecb9 | (Elizabeth Mattijsen)++ | src/core.c/Exception.pm6

[08:07] <Geth> ¦ rakudo: Lose the return constraint

[08:07] <Geth> ¦ rakudo: 

[08:07] <Geth> ¦ rakudo: It is not significant in dispatch, so should not be shown on a

[08:07] <Geth> ¦ rakudo: dispatch error.

[08:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b8121cecb9

[08:07] <Geth> ¦ rakudo: b005230615 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core.c/Exception.pm6

[08:07] <Geth> ¦ rakudo: Merge pull request #3857 from rakudo/ambiguous-is-default

[08:07] <Geth> ¦ rakudo: 

[08:07] <Geth> ¦ rakudo: Streamline X::Multi::Ambiguous listing

[08:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b005230615

[08:10] *** dogbert11 joined
[08:14] *** dogbert17 left
[08:27] *** leont joined
[08:57] <Geth> ¦ rakudo/introducing-allomorph-class: 716cacdc4d | (Elizabeth Mattijsen)++ | 7 files

[08:57] <Geth> ¦ rakudo/introducing-allomorph-class: Introducing the allomorph class

[08:57] <Geth> ¦ rakudo/introducing-allomorph-class: 

[08:57] <Geth> ¦ rakudo/introducing-allomorph-class: - a subclass of Str

[08:57] <Geth> ¦ rakudo/introducing-allomorph-class: - IntStr/NumStr/RatStr/ComplexStr are now subclasses of allomorph

[08:57] <Geth> ¦ rakudo/introducing-allomorph-class: - replaced several nqp::ifs by ternaries

[08:57] <Geth> ¦ rakudo/introducing-allomorph-class: - streamlined many coercions, specifically RatStr.Numeric

[08:57] <Geth> ¦ rakudo/introducing-allomorph-class: - simplified 16 infix:<eqv> candidates into a single one

[08:57] <Geth> ¦ rakudo/introducing-allomorph-class: <…commit message has 8 more lines…>

[08:57] <Geth> ¦ rakudo/introducing-allomorph-class: review: https://github.com/rakudo/rakudo/commit/716cacdc4d

[08:57] <Geth> ¦ rakudo: lizmat++ created pull request #3873: Introducing the allomorph class

[08:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3873

[09:09] *** sena_kun left
[09:11] *** Kaiepi left
[09:15] *** sena_kun joined
[09:19] *** dogbert17 joined
[09:21] *** dogbert11 left
[09:28] *** AlexDani` is now known as AlexDaniel

[09:28] *** AlexDaniel left
[09:28] *** AlexDaniel joined
[09:30] <sena_kun> releasable6, status

[09:30] <releasable6> sena_kun, Next release in ≈26 days and ≈9 hours. 1 blocker. Changelog for this release was not started yet

[09:30] <releasable6> sena_kun, Details: https://gist.github.com/03ae9273799fe867a7233bffaf46b98e

[09:41] *** Kaiepi joined
[09:44] <MasterDuke> ok, looks like there's a cycle in reify-at-least that's causing the 740k calls. AT_POS_SLOW calls reify-at-least 702 times. then reify-at-least (List:40) -> push-at-least (Iterator:49) -> push-exactly (Iterator:28 and Rakudo/Iterator:2028) -> pull-one (List:611) ->  reify-at-least (List:40)

[09:48] <lizmat> MasterDuke: I think you'll find them to be called on different objects

[09:50] <MasterDuke> could be, but there doesn't need to be 740k calls in total

[09:50] <MasterDuke> or you mean something is getting cloned that shouldn't?

[10:38] *** Altai-man joined
[10:40] *** sena_kun left
[10:49] <MasterDuke> m: my @a = ("a" .. "ya")[*]; say @a[(^@a).pick]; say @a.elems;

[10:49] <camelia> rakudo-moar b00523061: OUTPUT: «r␤25␤»

[10:49] <MasterDuke> m: my @a = ("a" .. "za")[*]; say @a[(^@a).pick]; say @a.elems;

[10:49] <camelia> rakudo-moar b00523061: OUTPUT: «va␤677␤»

[10:50] <MasterDuke> m: my @a = ("a" .. "yz")[*]; say @a[(^@a).pick]; say @a.elems;

[10:50] <camelia> rakudo-moar b00523061: OUTPUT: «i␤25␤»

[10:51] <MasterDuke> m: my @a = ("a" .. "yz")[]; say @a[(^@a).pick]; say @a.elems;

[10:51] <camelia> rakudo-moar b00523061: OUTPUT: «p␤25␤»

[10:51] <MasterDuke> m: my @a = ("a" .. "za")[]; say @a[(^@a).pick]; say @a.elems;

[10:51] <camelia> rakudo-moar b00523061: OUTPUT: «tw␤677␤»

[10:58] <MasterDuke> interesting jump. the range goes from 25 to 677 elems

[10:59] <MasterDuke> m: say "yz".succ

[10:59] <camelia> rakudo-moar b00523061: OUTPUT: «za␤»

[11:01] <MasterDuke> same with a sequence

[11:02] <MasterDuke> m: my @a = ("a" ... "za")[*]; say @a[(^@a).pick]; say @a.elems; say now - INIT now

[11:02] <camelia> rakudo-moar b00523061: OUTPUT: «mi␤677␤0.05097049␤»

[11:02] <MasterDuke> m: my @a = ("a" .. "za")[*]; say @a[(^@a).pick]; say @a.elems; say now - INIT now

[11:02] <camelia> rakudo-moar b00523061: OUTPUT: «ls␤677␤5.22678342␤»

[11:29] <lizmat> MasterDuke: I meant that some of those calls are on the Reifier, and others on the List

[11:33] <MasterDuke> sure

[12:41] <MasterDuke> in reify-at-least, self is always a List::Reifier.new

[13:26] *** Kaiepi left
[13:26] *** Kaiepi joined
[13:42] <Geth> ¦ rakudo/negation-of-junctions-not-special: 893c475738 | (Elizabeth Mattijsen)++ | 2 files

[13:42] <Geth> ¦ rakudo/negation-of-junctions-not-special: Remove special handling of ne and != wrt Junctions

[13:42] <Geth> ¦ rakudo/negation-of-junctions-not-special: 

[13:42] <Geth> ¦ rakudo/negation-of-junctions-not-special: This is a proof of concept.  It breaks the following tests:

[13:42] <Geth> ¦ rakudo/negation-of-junctions-not-special: 

[13:42] <Geth> ¦ rakudo/negation-of-junctions-not-special: t/spec/S03-junctions/boolean-context.t                          (Wstat: 256 Tests: 74 Failed: 1)

[13:42] <Geth> ¦ rakudo/negation-of-junctions-not-special:   Failed test:  72

[13:42] <Geth> ¦ rakudo/negation-of-junctions-not-special: t/spec/S03-junctions/autothreading.t                            (Wstat: 768 Tests: 106 Failed: 3)

[13:42] <Geth> ¦ rakudo/negation-of-junctions-not-special: <…commit message has 9 more lines…>

[13:42] <Geth> ¦ rakudo/negation-of-junctions-not-special: review: https://github.com/rakudo/rakudo/commit/893c475738

[13:43] <Geth> ¦ rakudo: lizmat++ created pull request #3874: Remove special handling of ne and != wrt Junctions

[13:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3874

[14:30] *** vrurg_ joined
[14:30] *** vrurg left
[14:32] <lizmat> notable6: weekly

[14:32] <notable6> lizmat, 1 note: 2020-08-17T17:28:54Z <codesections>: http://bsdimp.blogspot.com/2020/08/a-35-year-old-bug-in-patch-found-in.html

[14:34] *** vrurg joined
[14:35] <lizmat> notable6: weekly reset

[14:35] <notable6> lizmat, Moved existing notes to “weekly_2020-08-24T14:35:54Z”

[14:36] *** vrurg_ left
[14:39] *** sena_kun joined
[14:40] *** Altai-man left
[14:52] <timotimo> ooh i can make it into a weekly again \o/

[14:53] <nwc10> this week!

[14:53] <nwc10> it's like the good old days

[14:54] <nwc10> mmm, the worm has turned

[14:54] <timotimo> well, mentioned, not writing it

[14:58] *** Kaeipi joined
[15:00] *** leont_ joined
[15:03] *** Kaiepi left
[15:03] *** leont left
[15:09] *** linkable6_ joined
[15:09] *** linkable6 left
[15:22] *** codesections left
[15:22] *** reportable6_ left
[15:22] *** djinni` left
[15:22] *** evalable6 left
[15:22] *** tbrowder left
[15:28] *** codesections joined
[15:33] *** reportable6_ joined
[15:33] *** djinni` joined
[15:34] *** evalable6 joined
[15:34] *** bloatable6 joined
[15:34] *** notable6 joined
[15:34] *** committable6 joined
[15:34] *** coverable6 joined
[15:34] *** releasable6 joined
[15:34] *** AlexDaniel` joined
[15:34] *** tbrowder joined
[15:38] <[Tux]> Rakudo version 2020.08.1-5-gb00523061 - MoarVM version 2020.08-4-g0e7417add

[15:38] <[Tux]> csv-test-xs-20      0.396 -  0.402

[15:38] <[Tux]> csv-ip5xs           0.826 -  0.852

[15:38] <[Tux]> test-t --race       0.839 -  0.858

[15:38] <[Tux]> test-t              1.947 -  1.962

[15:38] <[Tux]> csv-ip5xs-20        8.140 -  8.377

[15:38] <[Tux]> test                7.795 -  8.167

[15:38] <[Tux]> test-t-20 --race    9.492 -  9.943

[15:38] <[Tux]> csv-parser         27.502 - 27.515

[15:38] <[Tux]> test-t-20          32.899 - 33.455

[16:16] *** sena_kun left
[16:16] *** Altai-man joined
[16:22] <Geth> ¦ rakudo/rakuast: fcec447693 | (Jonathan Worthington)++ | 4 files

[16:22] <Geth> ¦ rakudo/rakuast: Basic RakuAST resolution of multi-part type names

[16:22] <Geth> ¦ rakudo/rakuast: 

[16:22] <Geth> ¦ rakudo/rakuast: Meaning that things like `say Proc::Async` now compile correctly.

[16:22] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/fcec447693

[16:22] <Geth> ¦ rakudo/rakuast: be43baea3b | (Jonathan Worthington)++ | src/Raku/Grammar.nqp

[16:22] <Geth> ¦ rakudo/rakuast: Add Pod grammar rules into RakuAST-based grammar

[16:22] <Geth> ¦ rakudo/rakuast: 

[16:22] <Geth> ¦ rakudo/rakuast: No actions to go with them for now, but this lets us parse a bunch more

[16:22] <Geth> ¦ rakudo/rakuast: spectests, since Pod is used widely throughout them.

[16:22] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/be43baea3b

[16:22] <Geth> ¦ rakudo/rakuast: b6af8b2d79 | (Jonathan Worthington)++ | src/Raku/ast/call.rakumod

[16:22] <Geth> ¦ rakudo/rakuast: Add missing visit-children methods on call nodes

[16:22] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/b6af8b2d79

[17:30] <Geth> ¦ rakudo/rakuast: e5c74e067e | (Jonathan Worthington)++ | 3 files

[17:30] <Geth> ¦ rakudo/rakuast: Do some missing Str => RakuAST::Name bits

[17:30] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/e5c74e067e

[17:30] <Geth> ¦ rakudo/rakuast: 2feebc64ce | (Jonathan Worthington)++ | src/Raku/ast/scoping.rakumod

[17:30] <Geth> ¦ rakudo/rakuast: Fix code declaration walking

[17:30] <Geth> ¦ rakudo/rakuast: 

[17:30] <Geth> ¦ rakudo/rakuast: When we have an immediate block user, we still need to walk the

[17:30] <Geth> ¦ rakudo/rakuast: condition part of the AST to find code objects to emit the code for.

[17:30] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/2feebc64ce

[18:25] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/08/24/2020-34-another-survey-time/

[18:29] *** patrickb joined
[18:39] *** sena_kun joined
[18:40] *** Altai-man left
[18:53] *** brrt joined
[19:18] <samcv> lizmat++

[19:19] *** patrickb left
[19:19] *** patrickb joined
[19:42] *** brrt left
[19:55] <moritz> lizmat++

[20:17] <lucs> lizmat++ jjmerelo++

[20:22] <patrickb> Oh! A new weekly! lizmat++

[20:34] <Geth> ¦ rakudo: 038fbc44a1 | (Patrick Böker)++ | tools/build/create-jvm-runner.pl

[20:34] <Geth> ¦ rakudo: Improve the JVM relocatability situation

[20:34] <Geth> ¦ rakudo: 

[20:34] <Geth> ¦ rakudo: The logic to turn the third party jars into relative paths was broken.

[20:34] <Geth> ¦ rakudo: 

[20:34] <Geth> ¦ rakudo: Also utilize the ${NQP_HOME} prefix in the non-relocatable case.

[20:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/038fbc44a1

[20:34] <Geth> ¦ rakudo: c990124684 | (Patrick Böker)++ | tools/build/create-jvm-runner.pl

[20:34] <Geth> ¦ rakudo: Implement $PERL6_HOME fallback in the JVM runner

[20:34] <Geth> ¦ rakudo: 

[20:35] <Geth> ¦ rakudo: The fallback for the $PERL6_HOME env var was missing in the JVM runner

[20:35] <Geth> ¦ rakudo: script.

[20:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c990124684

[20:35] <Geth> ¦ rakudo: c1784bda13 | (Patrick Böker)++ (committed using GitHub Web editor) | tools/build/create-jvm-runner.pl

[20:35] <Geth> ¦ rakudo: Merge pull request #3862 from patrickbkr/jvm-fixes

[20:35] <Geth> ¦ rakudo: 

[20:35] <Geth> ¦ rakudo: Make JVM honor $PERL6_HOME env variable

[20:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c1784bda13

[20:39] <Geth> ¦ rakudo/rakuast: 42ce04337d | (Jonathan Worthington)++ | src/Raku/ast/scoping.rakumod

[20:39] <Geth> ¦ rakudo/rakuast: Fix typo; MasterDuke++

[20:39] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/42ce04337d

[20:48] *** patrickb left
[21:00] *** leont_ left
[21:16] <[Coke]> ugexe++

[21:22] *** dogbert11 joined
[21:24] *** dogbert17 left
[21:45] *** rypervenche left
[21:52] *** rypervenche joined
[22:38] *** Altai-man joined
[22:40] *** sena_kun left
[23:59] *** finsternis joined
[23:59] *** Altai-man left
