[00:55] *** sourceable6 left
[00:55] *** unicodable6 left
[00:55] *** quotable6 left
[00:55] *** coverable6 left
[00:55] *** evalable6 left
[00:55] *** benchable6 left
[00:55] *** shareable6 left
[00:55] *** releasable6 left
[00:55] *** squashable6 left
[00:55] *** greppable6 left
[00:55] *** tellable6 left
[00:55] *** committable6 left
[00:55] *** statisfiable6 left
[00:55] *** nativecallable6 left
[00:55] *** notable6 left
[00:55] *** bloatable6 left
[00:55] *** reportable6 left
[00:55] *** bisectable6 left
[00:55] *** greppable6 joined
[00:55] *** nativecallable6 joined
[00:55] *** releasable6 joined
[00:56] *** bisectable6 joined
[00:56] *** benchable6 joined
[00:56] *** reportable6 joined
[00:56] *** evalable6 joined
[00:56] *** coverable6 joined
[00:57] *** bloatable6 joined
[00:57] *** statisfiable6 joined
[00:57] *** notable6 joined
[00:57] *** tellable6 joined
[00:58] *** shareable6 joined
[00:58] *** quotable6 joined
[00:58] *** committable6 joined
[00:58] *** sourceable6 joined
[00:58] *** squashable6 joined
[00:58] *** unicodable6 joined
[01:52] *** Altai-man_ joined
[01:54] *** sena_kun left
[02:00] <Geth> ¦ roast/revert-608-problem-solving-142: 9763b3048b | (Vadim Belman)++ (committed using GitHub Web editor) | 3 files

[02:00] <Geth> ¦ roast/revert-608-problem-solving-142: Revert "Test for export of long names"

[02:00] <Geth> ¦ roast/revert-608-problem-solving-142: review: https://github.com/perl6/roast/commit/9763b3048b

[02:00] <Geth> ¦ roast: vrurg++ created pull request #611: Revert "Test for export of long names"

[02:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/611

[02:01] <Geth> ¦ roast: 9763b3048b | (Vadim Belman)++ (committed using GitHub Web editor) | 3 files

[02:01] <Geth> ¦ roast: Revert "Test for export of long names"

[02:01] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/9763b3048b

[02:01] <Geth> ¦ roast: 93a61e6f04 | (Vadim Belman)++ (committed using GitHub Web editor) | 3 files

[02:01] <Geth> ¦ roast: Merge pull request #611 from perl6/revert-608-problem-solving-142

[02:01] <Geth> ¦ roast: 

[02:01] <Geth> ¦ roast: Revert "Test for export of long names"

[02:01] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/93a61e6f04

[03:18] *** AlexDaniel left
[03:22] *** squashable6 left
[03:25] *** squashable6 joined
[03:53] *** sena_kun joined
[03:55] *** Altai-man_ left
[04:38] *** unicodable6 left
[04:38] *** tellable6 left
[04:38] *** benchable6 left
[04:38] *** evalable6 left
[04:38] *** statisfiable6 left
[04:38] *** coverable6 left
[04:39] *** evalable6 joined
[04:39] *** tellable6 joined
[04:39] *** benchable6 joined
[04:39] *** unicodable6 joined
[04:39] *** coverable6 joined
[04:40] *** statisfiable6 joined
[05:40] *** unicodable6 left
[05:40] *** releasable6 left
[05:40] *** benchable6 left
[05:40] *** coverable6 left
[05:40] *** nativecallable6 left
[05:40] *** squashable6 left
[05:40] *** committable6 left
[05:40] *** reportable6 left
[05:40] *** quotable6 left
[05:40] *** greppable6 left
[05:40] *** statisfiable6 left
[05:40] *** sourceable6 left
[05:40] *** notable6 left
[05:40] *** bloatable6 left
[05:40] *** shareable6 left
[05:40] *** bisectable6 left
[05:41] *** releasable6 joined
[05:41] *** coverable6 joined
[05:41] *** committable6 joined
[05:41] *** statisfiable6 joined
[05:41] *** greppable6 joined
[05:42] *** benchable6 joined
[05:42] *** bisectable6 joined
[05:43] *** squashable6 joined
[05:43] *** notable6 joined
[05:43] *** reportable6 joined
[05:43] *** quotable6 joined
[05:43] *** nativecallable6 joined
[05:44] *** sourceable6 joined
[05:44] *** bloatable6 joined
[05:44] *** unicodable6 joined
[05:44] *** shareable6 joined
[05:52] *** Altai-man_ joined
[05:55] *** sena_kun left
[06:28] *** AlexDaniel joined
[06:28] *** AlexDaniel left
[06:28] *** AlexDaniel joined
[07:53] *** sena_kun joined
[07:55] *** Altai-man_ left
[09:52] *** Altai-man_ joined
[09:55] *** sena_kun left
[10:29] *** cognomin_ joined
[10:33] *** cognominal left
[10:42] *** pmurias_ joined
[10:53] <|Tux|> Rakudo version 2019.11-403-g5d5701171 - MoarVM version 2020.01-1-g105d09d62

[10:53] <|Tux|> csv-test-xs-20      0.433 -  0.433

[10:53] <|Tux|> csv-ip5xs           0.706 -  0.726

[10:53] <|Tux|> test-t --race       0.798 -  0.825

[10:53] <|Tux|> test-t              1.752 -  1.760

[10:53] <|Tux|> csv-ip5xs-20        6.260 -  6.712

[10:53] <|Tux|> test                7.082 -  7.384

[10:53] <|Tux|> test-t-20 --race    8.967 -  9.429

[10:53] <|Tux|> csv-parser         23.590 - 23.637

[10:53] <|Tux|> test-t-20          29.668 - 29.700

[11:25] *** Guest38485 joined
[11:48] <lizmat> Files=1294, Tests=109644, 211 wallclock secs (28.20 usr  8.29 sys + 2950.20 cusr 274.81 csys = 3261.50 CPU)

[11:53] *** sena_kun joined
[11:55] *** Altai-man_ left
[12:02] *** cognomin_ left
[12:02] <Geth> ¦ rakudo: 960b0a1fe2 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[12:02] <Geth> ¦ rakudo: Fix Str.is-identifier and make it at least 6x as fast

[12:02] <Geth> ¦ rakudo: 

[12:02] <Geth> ¦ rakudo: It didn't quite handle all of the identifier semantics yet, like being

[12:02] <Geth> ¦ rakudo: able to using numbers (as long as they're not the first character of

[12:02] <Geth> ¦ rakudo: an alphanumeric part), and underscores being allowed anywhere.

[12:02] <Geth> ¦ rakudo: 

[12:03] <Geth> ¦ rakudo: Geoff Broadwell++ for spotting that.

[12:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/960b0a1fe2

[12:03] *** cognominal joined
[12:05] *** cognominal left
[12:37] *** pmurias_ left
[12:38] *** pmurias_ joined
[12:39] *** lucasb joined
[12:55] <lizmat> m: my %s is SetHash[Str,Int,Num]; dd %s   # how bad do we think it is that it is silently ignoring additional parameters ?

[12:55] <camelia> rakudo-moar 960b0a1fe: OUTPUT: «SetHash[Str].new()␤»

[13:07] <jnthn> Not ideal, that's for sure

[13:08] <jdv79> nine: now i get this:  https://nopaste.xyz/?36eec0cbc2e7ccab#z1EP14Wc+LHE3ZrsIpKMw+vvMrMYmyA4SViEZuMUzSs=

[13:08] <jdv79> but i'm gonna upgade my laptop as soon as i get a chance since fedora 25 is eol...

[13:27] <Guest38485> jdv79: your MoarVM version implies that you're not using nine's fix from yesterday

[13:28] <sena_kun> I'll bump now

[13:28] <Guest38485> ++sena_kun

[13:28] <sena_kun> if nobody says "No, don't!"

[13:28] <sena_kun> oki

[13:29] *** |Tux| left
[13:35] *** |Tux| joined
[13:39] <Geth> ¦ rakudo: 2261ef11fd | (Elizabeth Mattijsen)++ | src/core.c/allomorphs.pm6

[13:39] <Geth> ¦ rakudo: Make IntStr.raku about 2x as fast

[13:39] <Geth> ¦ rakudo: 

[13:39] <Geth> ¦ rakudo: - use low level concat

[13:39] <Geth> ¦ rakudo: - evade .Int, nqp::tostr_I will do the right thing

[13:39] <Geth> ¦ rakudo: - evade .Str, just fetch the attribute directly

[13:39] <Geth> ¦ rakudo: - at 2/3rds of the number of allocations

[13:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2261ef11fd

[13:52] <Geth> ¦ rakudo: e262da1d11 | (Elizabeth Mattijsen)++ | src/core.c/allomorphs.pm6

[13:52] <Geth> ¦ rakudo: Make NumStr.raku about 60% faster

[13:52] <Geth> ¦ rakudo: 

[13:52] <Geth> ¦ rakudo: - use low level concat

[13:52] <Geth> ¦ rakudo: - evade .Int, just fetch the attribute directly

[13:52] <Geth> ¦ rakudo: - evade .Str, just fetch the attribute directly

[13:52] <Geth> ¦ rakudo: - at 70% of the number of allocations

[13:52] *** Altai-man_ joined
[13:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e262da1d11

[13:54] *** sena_kun left
[13:56] *** squashable6 left
[13:59] *** squashable6 joined
[14:15] <jdv79> oh, i thought it was bumped in. it wasn't?  i just ran git pull and rebuilt.

[14:16] <Geth> ¦ nqp: 47238e2ce2 | Altai-man++ | tools/templates/MOAR_REVISION

[14:16] <Geth> ¦ nqp: [MoarVM Bump] Brings 3 commits

[14:16] <Geth> ¦ nqp: 

[14:16] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2019.11-113-g703f023d5...2020.01-1-g105d09d62

[14:16] <Geth> ¦ nqp: 105d09d62 Fix NativeCall libraries losing state during repossession

[14:16] <Geth> ¦ nqp: b49cb0fa7 Bump VERSION for release

[14:16] <Geth> ¦ nqp: 83393ef5a Update release name in ChangeLog

[14:16] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/47238e2ce2

[14:16] <Geth> ¦ rakudo: 2f94362d82 | Altai-man++ | tools/templates/NQP_REVISION

[14:16] <Geth> ¦ rakudo: [NQP Bump] Brings 3 commits

[14:16] <Geth> ¦ rakudo: 

[14:16] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2019.11-44-g7333514ff...2019.11-47-g47238e2ce

[14:16] <Geth> ¦ rakudo: 47238e2ce [MoarVM Bump] Brings 3 commits

[14:16] <Geth> ¦ rakudo: f00c47590 [JVM] Fix readfh for (buffered) input from TTY

[14:16] <Geth> ¦ rakudo: 413f71ef0 Merge pull request #594 from Altai-man/master

[14:16] <Geth> ¦ rakudo: 

[14:16] <jdv79> saw some moarvm git noise and assumed...  i'll check again in 8h again...

[14:16] <Geth> ¦ rakudo: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2019.11-113-g703f023d5...2020.01-1-g105d09d62

[14:16] <Geth> ¦ rakudo: 105d09d62 Fix NativeCall libraries losing state during repossession

[14:16] <Geth> ¦ rakudo: b49cb0fa7 Bump VERSION for release

[14:16] <Geth> ¦ rakudo: 83393ef5a Update release name in ChangeLog

[14:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2f94362d82

[14:16] <Altai-man_> I just did a bump

[14:16] <Altai-man_> couldn't do it yesterday because there was a broken test in spec

[14:18] <Geth> ¦ rakudo: a4b62fb139 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[14:18] <Geth> ¦ rakudo: Make Str.raku about 7x as fast

[14:18] <Geth> ¦ rakudo: 

[14:18] <Geth> ¦ rakudo: - for pure alphanumeric strings

[14:18] <Geth> ¦ rakudo: - at about 15% of allocations

[14:18] <Geth> ¦ rakudo: - bypassing the char-by-char checks completely

[14:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a4b62fb139

[14:18] <lizmat> afk for a few hours&

[14:33] <|Tux|> Rakudo version 2019.11-406-ge262da1d1 - MoarVM version 2020.01-1-g105d09d62

[14:33] <|Tux|> csv-test-xs-20      0.422 -  0.423

[14:33] <|Tux|> csv-ip5xs           0.707 -  0.715

[14:33] <|Tux|> test-t --race       0.861 -  0.863

[14:33] <|Tux|> test-t              1.736 -  1.785

[14:33] <|Tux|> csv-ip5xs-20        6.374 -  6.493

[14:33] <|Tux|> test                7.287 -  7.306

[14:33] <|Tux|> test-t-20 --race    9.205 -  9.434

[14:33] <|Tux|> csv-parser         23.091 - 23.135

[14:33] <|Tux|> test-t-20          29.743 - 29.977

[14:42] *** MasterDuke joined
[14:48] *** toddr left
[15:00] <nine> I don't know what argument I could bring against "I as the sole author of the tool only I have used so far will be more responsive and reliable than this corporate backed team of 17 people who tend to software that has been in mission critical use for 12 years". Logic doesn't seem to apply...

[15:00] <nine> https://github.com/perl6/problem-solving/issues/144#issuecomment-571573363

[15:01] <[Coke]> I've worked with teams that do more R&D style development and deployment, but we've had to productize not only the app but the support as well.

[15:04] <MasterDuke> nine: any further comments on https://github.com/MoarVM/MoarVM/pull/1224 ?

[15:10] <[Coke]> ah, didn't realize this was not a $dayjob conversation at first.

[15:24] *** pmurias_ left
[15:41] <|Tux|> Rakudo version 2019.11-408-ga4b62fb13 - MoarVM version 2020.01-1-g105d09d62

[15:41] <|Tux|> csv-test-xs-20      0.421 -  0.431

[15:41] <|Tux|> csv-ip5xs           0.704 -  0.732

[15:41] <|Tux|> test-t --race       0.849 -  0.883

[15:41] <|Tux|> test-t              1.724 -  1.739

[15:41] <|Tux|> csv-ip5xs-20        6.369 -  6.461

[15:41] <|Tux|> test                6.257 -  7.569

[15:41] <|Tux|> test-t-20 --race    9.143 -  9.205

[15:41] <|Tux|> csv-parser         22.783 - 22.803

[15:41] <|Tux|> test-t-20          29.095 - 30.188

[15:41] <|Tux|> (again because of the .Str speedup)

[15:45] *** ufobat joined
[15:53] *** sena_kun joined
[15:55] *** pmurias joined
[15:55] *** Altai-man_ left
[16:10] <japhb> |Tux|: test-t seems strangely resistant to optimization these days; very little seems to affect it much.

[16:11] <|Tux|> it might be micro-speedgains. I expect huge wins in optimizing breaks

[16:12] <|Tux|> breaks being next, last and the like

[16:12] * |Tux| => PM

[16:28] *** sjn left
[17:38] *** [TuxCM] joined
[17:46] *** sjn joined
[17:49] <Geth> ¦ rakudo: 29260acb19 | (Elizabeth Mattijsen)++ | 2 files

[17:49] <Geth> ¦ rakudo: Make Srt.is-identifier to Pair local sub

[17:49] <Geth> ¦ rakudo: 

[17:49] <Geth> ¦ rakudo: This makes Pair.raku about 10% slower.  Fixes #3408

[17:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/29260acb19

[17:53] *** Altai-man_ joined
[17:55] *** sena_kun left
[18:47] <lizmat> do we have a way to stub an enum ??

[18:53] <japhb> You mean BOOSTRAP style, like the Bool magic?

[18:54] <lizmat> well, like a class really

[18:54] <lizmat> m: class A { ... }; class A { has $.b = 42 }; dd A.new.b

[18:54] <camelia> rakudo-moar 29260acb1: OUTPUT: «42␤»

[18:55] <lizmat> thing is: I want to add a new enum to the setting, but I need it *before* we actually have a Pair class

[19:04] *** travis-ci joined
[19:04] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Make Srt.is-identifier to Pair local sub

[19:04] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/633882099 https://github.com/rakudo/rakudo/compare/a4b62fb13973...29260acb19d3

[19:04] *** travis-ci left
[19:07] <lizmat> a flapper in t/02-rakudo/repl.t 

[19:07] <lizmat> restarted job

[19:53] *** sena_kun joined
[19:54] *** Altai-man_ left
[19:56] <Geth> ¦ rakudo: 27d1c4b5d5 | (Elizabeth Mattijsen)++ | src/core.c/Enumeration.pm6

[19:56] <Geth> ¦ rakudo: Fix typo in comment

[19:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/27d1c4b5d5

[20:01] <Geth> ¦ rakudo/index-improved: 561d1ba2f1 | (Elizabeth Mattijsen)++ | src/core.c/core_epilogue.pm6

[20:01] <Geth> ¦ rakudo/index-improved: Allow Str.(r)index searches on character classes

[20:01] <Geth> ¦ rakudo/index-improved: 

[20:01] <Geth> ¦ rakudo/index-improved: This adds 2 enums: UnicodeClass and NotUnicodeClass, and a range of

[20:01] <Geth> ¦ rakudo/index-improved: values matching the nqp::const::CCLASS_xxx constants.

[20:01] <Geth> ¦ rakudo/index-improved: 

[20:01] <Geth> ¦ rakudo/index-improved: It also adds some candidates to Str.index and Str.rindex, that will

[20:01] <Geth> ¦ rakudo/index-improved: dispatch on specifying a value of either of these two enums.  This

[20:01] <Geth> ¦ rakudo/index-improved: <…commit message has 11 more lines…>

[20:01] <Geth> ¦ rakudo/index-improved: review: https://github.com/rakudo/rakudo/commit/561d1ba2f1

[20:03] <Geth> ¦ rakudo: lizmat++ created pull request #3409: [WIP] Allow Str.(r)index searches on character classes

[20:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3409

[20:04] <Geth> ¦ problem-solving: lizmat assigned to jnthn Issue Expose nqp::findcclass and nqp::notfindclass functionality https://github.com/perl6/problem-solving/issues/146

[20:08] <nine> MasterDuke: ACK

[20:10] <nine> And yes, I went through all the new commits. Your work is just great!

[20:16] *** Xliff joined
[20:21] <Xliff> o/

[20:21] <Xliff> Here's another open ended question / notice / WTF from me.

[20:22] <Xliff> So when you get a chance, please take a look and respond via .tell

[20:23] <Xliff> So I've created a parallel build program here: https://github.com/Xliff/p6-GtkPlus/blob/gtk-compat-types-split/scripts/dependency-build.pl6

[20:25] <Xliff> It does a few things: 1) builds a dependency tree out of all modules it finds in a project (including all dependencies), 2) computes an optimal bottom-up build order, 3) attempts a parallel build using that optimal build order by: a) starting up parallel rakudo builds up to max cores and b) waiting to add then next item into the build scheduler when it's dependency list is empty

[20:26] <Xliff> Here's the latest build log from that script for p6-GIO: https://github.com/Xliff/p6-GIO/blob/master/stats/LastBuildResults-20200107

[20:27] <Xliff> HRM!

[20:27] <Xliff> Scratch that... looks like the log was truncated! :(

[20:31] <Xliff> Ah. Now untruncated! :D

[20:32] <Xliff> If someone needs me to explain that format, then feel free to ask questions.

[20:32] <Xliff> If you look at this line: https://github.com/Xliff/p6-GIO/blob/master/stats/LastBuildResults-20200107#L2171

[20:32] <Xliff> You will notice that the precomp only takes 1.6 seconds, but the actual parse time is almost 40 seconds. Are some of my rakudo threads hanging due to some form of thread locking?

[20:33] <Xliff> That's it. Just thought I'd share some of the things I've noticed in my projects, lately.

[20:33] <Xliff> Thanks!!

[20:35] <Xliff> If you do want to see this for yourself, you can use p6-GLib instead of p6-GIO

[20:35] <Xliff> git clone https://github.com/Xliff/p6-GLib.git

[20:35] <Xliff> cd p6-GLib

[20:36] <Xliff> zef install --deps-only .

[20:36] *** timotimo left
[20:36] <Xliff> scripts/dependency-build.sh

[20:40] <nine> Xliff: well as you discovered yourself, yes rakudo locks the precomp directory

[20:40] <nine> So you'll probably not get as much parallelism out of it as you'd wish.

[20:41] <nine> The good news is, that this could be changed quite easily. Instead of having a lock file per precomp store, we could take a lock on the individual precomp files. That shouldn't even be hard to do, it just never made it to the top of my todo list.

[20:42] * Xliff makes anime eyes at nine.

[20:42] <Xliff> Seriously, I'm seeing quite an improvement on compile times with this lock.

[20:42] <Xliff> Without it, things will seriously scream and I can start working on getting things into release form .

[20:43] <AlexDaniel> moritz: hello! I'm moving some repos and at the same time trying to clean some things up. Can you move https://github.com/perl6/rakudo.de to your own github account? I don't think we need it

[20:44] <nine> Xliff: sorry, eyes won't work, I'll not be the one to do this. You seem to have the motivation, the capability, the test case and even the time to do it!

[20:44] <nine> Xliff: https://github.com/rakudo/rakudo/blob/master/src/core.c/CompUnit/PrecompilationRepository.pm6#L231 and https://github.com/rakudo/rakudo/blob/master/src/core.c/CompUnit/PrecompilationStore/File.pm6#L193

[20:45] <Xliff> Yeek!

[20:45] <Xliff> Will take a look then. Someone is gonna have to help me with a test case that's suitable for spectest and roast!

[20:45] *** timotimo joined
[20:45] <nine> Nothing about this is harder than the parallel build thing you already did :)

[20:45] <Xliff> Hah.

[20:46] <nine> And I'll be happy to answer any questions about this code and assist.

[20:46] <Xliff> Is there a way to rakudobrew your own commit hash?

[20:46] <Xliff> That will make my testing easier.

[20:46] <nine> I'd just not use rakudobrew

[20:47] <Xliff> :(

[20:47] <Xliff> I'd rather not have to use a VM. I might do it under another account then. *sigh*

[20:47] <nine> Why? Just clone the rakudo repo and install it into a different prefix

[20:50] <nine> I'm off to bed now. I backlog #raku-dev and #moarvm

[20:51] <AlexDaniel> tony-o: there are two repos for pluggable, which one is maintained? https://github.com/perl6/perl6-pluggable

[20:54] <AlexDaniel> what's better, a repo called `examples` or `raku-examples` ?

[20:55] <Xliff> nine: Good point. I think I will start on this, soonish.

[20:55] <AlexDaniel> same question for modules, `lwp-simple` or `raku-lwp-simple`?

[21:00] *** [TuxCM] left
[21:02] <moritz> AlexDaniel: (rakudo.de move) done

[21:02] <AlexDaniel> thanks!

[21:05] *** MasterDuke left
[21:11] *** pmurias left
[21:12] *** AlexDaniel left
[21:14] *** Kaeipi joined
[21:14] *** Kaiepi left
[21:38] *** AlexDaniel joined
[21:38] *** AlexDaniel left
[21:38] *** AlexDaniel joined
[21:42] <Geth> ¦ nqp: 0d91c6b561 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[21:42] <Geth> ¦ nqp: Show what the CLASS_xxx constants apply to

[21:42] <Geth> ¦ nqp: 

[21:42] <Geth> ¦ nqp: As far as could be determined from the MoarVM codebase.

[21:42] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/0d91c6b561

[21:53] *** Altai-man_ joined
[21:54] *** sena_kun left
[21:56] <Geth> ¦ rakudo: 5d8ef435d7 | (Elizabeth Mattijsen)++ | src/core.c/Pair.pm6

[21:56] <Geth> ¦ rakudo: Simplify identifier logic

[21:56] <Geth> ¦ rakudo: 

[21:56] <Geth> ¦ rakudo: CLASS_WORD actually is CLASS_ALPHANUMERIC + underscore.

[21:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5d8ef435d7

[22:14] <Geth> ¦ Blin: Altai-man++ created pull request #18: Use latest sources for obtaining module lists

[22:14] <Geth> ¦ Blin: review: https://github.com/Raku/Blin/pull/18

[22:19] <Geth> ¦ Blin: 6f57b722c5 | Altai-man++ (committed using GitHub Web editor) | bin/blin.p6

[22:19] <Geth> ¦ Blin: Use latest sources for obtaining module lists

[22:19] <Geth> ¦ Blin: review: https://github.com/Raku/Blin/commit/6f57b722c5

[22:19] <Geth> ¦ Blin: 06717ac0ae | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | bin/blin.p6

[22:19] <Geth> ¦ Blin: Merge pull request #18 from Altai-man/patch-1

[22:19] <Geth> ¦ Blin: 

[22:19] <Geth> ¦ Blin: Use latest sources for obtaining module lists

[22:19] <Geth> ¦ Blin: review: https://github.com/Raku/Blin/commit/06717ac0ae

[22:23] *** Xliff left
[22:42] *** Xliff joined
[23:06] *** stoned75 joined
[23:07] <stoned75> hi. I have a trivial fix for Blin/issues/17

[23:15] <Altai-man_> stoned75, can you help me out then? :)

[23:17] <stoned75> I can't make a PR: if it's processed and if things are configured as stated in doc/README.md, a new version of the container image should end up on docker's hub

[23:19] <Altai-man_> stoned75, so casting the image author is the right thing?

[23:20] <stoned75> sorry, I'm not sure what you mean

[23:20] *** MasterDuke joined
[23:20] <Altai-man_> stoned75, as far as I understand, you are suggesting the image should be updated, and the author can do it, right?

[23:21] <stoned75> ok I did get you right :)

[23:21] <stoned75> whell docker/README.md implies that docker's hub had been setup to automagically build image from commit into Blin repository

[23:21] <Altai-man_> \o/

[23:22] <stoned75> s/whell/well/

[23:25] <stoned75> ah. I can't push a branch to perl6/Blin. lemme push it somewhere else ;-)

[23:27] <stoned75> oh Blin repo  had already moved to Raku org ?

[23:28] <Altai-man_> yes

[23:28] <stoned75> nice

[23:28] <Geth> ¦ Blin: stoned++ created pull request #19: Fix Blin container image usage

[23:28] <Geth> ¦ Blin: review: https://github.com/Raku/Blin/pull/19

[23:29] <stoned75> I the meantime I'm uploading an image I had built with this fix on docker's hub, if you'd like to try

[23:30] <stoned75> but this image is huge... so it will take a while

[23:31] <stoned75> alternatively you could build it yourself

[23:31] <stoned75> grab my patch, apply it, and run from the top of Blin repo: podman build -t myblin -f docker/Dockerfile .

[23:31] <Altai-man_> stoned75, will see, if the PR will be accepted and it'll fix the issue, that'd be awesome. thanks!

[23:32] <stoned75> then test it with something like podman run --rm -ti -v /var/tmp/Blin-volume:/mnt:z myblin --nproc=8 HTTP::UserAgent

[23:33] <stoned75> sure

[23:34] <MasterDuke> nine: i wish i could say thanks, but 99% of what i did was just accepting the suggestions of gcc and clang

[23:50] *** MasterDuke left
[23:55] *** Altai-man_ left
[23:57] *** squashable6 left
[23:59] *** squashable6 joined
