[01:20] *** MasterDuke left
[02:41] *** frost-lab joined
[03:02] *** leont left
[04:12] *** squashable6 left
[04:14] *** squashable6 joined
[04:51] *** maggotbrain joined
[04:54] *** melezhik joined
[04:54] *** Kaiepi left
[04:54] *** Kaiepi joined
[04:55] <melezhik> Hi devs! I've dropped a proposal for RIP - Rakudo Issues Player - https://www.reddit.com/r/rakulang/comments/k5qp5m/rakudo_issues_player/ I'd appreciate any feedback. 

[04:55] <melezhik> this is what earlier was referred as automation testing system for known Rakudo issues ... cc [Coke]

[05:29] *** melezhik left
[06:12] *** frost-lab left
[08:01] <lizmat> Files=1346, Tests=117143, 229 wallclock secs (29.80 usr  8.28 sys + 3096.27 cusr 279.94 csys = 3414.29 CPU)

[08:12] *** domidumont joined
[08:35] *** sena_kun joined
[08:49] *** MasterDuke joined
[09:07] *** Altai-man joined
[09:10] *** sena_kun left
[09:32] <MasterDuke> why do https://github.com/rakudo/rakudo/blob/master/src/core.c/List.pm6#L96-L137 and https://github.com/rakudo/rakudo/blob/master/src/core.c/List.pm6#L618-L645 allocate BOOTHashes? 

[09:39] <lizmat> to catch any additional named parameters ?   Like any method ?

[09:39] <lizmat> FWIW, a few months ago I tried to write a pragma that would make the implicit *%_ in method signatures optional

[09:40] <MasterDuke> oh yeah, the number of BOOTHash allocations from it exactly matches the number of calls to it

[09:40] <lizmat> I forget why that didn't work out...probably something deep in the setting compilation depended on it

[09:43] *** maggotbrain left
[09:59] *** squashable6 left
[10:02] *** squashable6 joined
[10:17] *** frost-lab joined
[10:36] <Geth> Â¦ rakudo: 65f24a8dbd | (Elizabeth Mattijsen)++ | 8 files

[10:36] <Geth> Â¦ rakudo: Change SET-SELF object init to use standard .new

[10:36] <Geth> Â¦ rakudo: 

[10:36] <Geth> Â¦ rakudo: There no longer is a performance reason to do so.  However, in many

[10:36] <Geth> Â¦ rakudo: places in the core, this is not as simple to do, as using the

[10:36] <Geth> Â¦ rakudo: "is built" attribute trait there causes bootstrap issues.

[10:36] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/65f24a8dbd

[10:41] *** MasterDuke left
[10:58] *** MasterDuke joined
[11:21] *** MasterDuke left
[11:39] *** MasterDuke joined
[11:46] <Geth> Â¦ rakudo: c02c9cdb85 | (Elizabeth Mattijsen)++ | src/core.c/native_array.pm6

[11:46] <Geth> Â¦ rakudo: Make array::(int|num|str)array dispatchable

[11:46] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c02c9cdb85

[11:55] *** MasterDuke left
[12:12] <Geth> Â¦ rakudo: 46e9468feb | (Elizabeth Mattijsen)++ | 2 files

[12:12] <Geth> Â¦ rakudo: Make the native array code generation easier

[12:12] <Geth> Â¦ rakudo: 

[12:12] <Geth> Â¦ rakudo: Just run the file, dammit!

[12:12] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/46e9468feb

[12:16] <Geth> Â¦ rakudo: 82d31e0d43 | (Elizabeth Mattijsen)++ | 2 files

[12:16] <Geth> Â¦ rakudo: Make the native shaped array code generation easier

[12:16] <Geth> Â¦ rakudo: 

[12:16] <Geth> Â¦ rakudo: Just run the file, dammit!

[12:16] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/82d31e0d43

[12:23] <Geth> Â¦ rakudo: 137d49b02b | (Elizabeth Mattijsen)++ | 2 files

[12:23] <Geth> Â¦ rakudo: Make the native shaped array postcircumfix generation easier

[12:23] <Geth> Â¦ rakudo: 

[12:23] <Geth> Â¦ rakudo: Just run the file, dammit!

[12:23] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/137d49b02b

[12:28] *** leont joined
[12:43] *** |Tux| joined
[12:45] <Geth> Â¦ rakudo: 53ad24af5d | (Elizabeth Mattijsen)++ | 2 files

[12:45] <Geth> Â¦ rakudo: Native shaped postcircumfixes do not need to be indented

[12:45] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/53ad24af5d

[12:47] *** |Tux| left
[12:51] *** lucasb joined
[12:52] *** |Tux| joined
[12:55] *** MasterDuke joined
[13:07] *** sena_kun joined
[13:09] *** Altai-man left
[13:21] *** MasterDuke left
[13:21] *** |Tux| left
[13:22] *** |Tux| joined
[13:23] *** frost-lab left
[13:30] <Geth> Â¦ rakudo: 0f4970da2f | (Elizabeth Mattijsen)++ | 2 files

[13:30] <Geth> Â¦ rakudo: Add missing candidats for 1dim shaped native arrays

[13:30] <Geth> Â¦ rakudo: 

[13:30] <Geth> Â¦ rakudo: :kv :p :k :v were missing.  Sadly there qre no tests to signal this

[13:30] <Geth> Â¦ rakudo: absence (yet, anyway).

[13:30] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0f4970da2f

[13:31] <lizmat> afk for a few hours&

[14:22] *** leont left
[14:58] *** travis-ci joined
[14:58] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Make array::(int|num|str)array dispatchable'

[14:58] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/747401818 https://github.com/rakudo/rakudo/compare/65f24a8dbd1e...c02c9cdb8588

[14:58] *** travis-ci left
[15:07] <lizmat> hmmm.. wonder if that was a flapper in repl.t

[15:40] *** lucasb left
[16:17] *** ggoebel joined
[16:35] <Geth> Â¦ rakudo: 7c0956b81b | (Elizabeth Mattijsen)++ | 3 files

[16:35] <Geth> Â¦ rakudo: Remove postcircumfix[int] candidates

[16:35] <Geth> Â¦ rakudo: 

[16:35] <Geth> Â¦ rakudo: Turns out calling an [int] candidate with an native int **CURRENTLY**

[16:35] <Geth> Â¦ rakudo: does not have any intlexref/intposref elimination, which in turn makes

[16:35] <Geth> Â¦ rakudo: the code un-inlineable.  So remove these candidates for now until we

[16:35] <Geth> Â¦ rakudo: *do* have proper optimizations for this (hint: if you're looking for

[16:35] <Geth> Â¦ rakudo: some cool stuff to dig your teeth into, there's it!).

[16:35] <Geth> Â¦ rakudo: 

[16:35] <Geth> Â¦ rakudo: This makes @a[$i] with $i being a native int, about 2x as fast.

[16:35] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7c0956b81b

[17:00] *** |Tux| left
[17:07] *** Altai-man joined
[17:09] *** sena_kun left
[17:32] *** moray joined
[17:32] *** moray is now known as morayj

[17:40] *** |Tux| joined
[17:59] <Geth> Â¦ rakudo: 02e48d8127 | (Elizabeth Mattijsen)++ | 2 files

[17:59] <Geth> Â¦ rakudo: Add support for > 1 adverb to 1dim native shaped arrays

[17:59] <Geth> Â¦ rakudo: 

[17:59] <Geth> Â¦ rakudo: To make them work just like the unshaped ones.  Specifically

[17:59] <Geth> Â¦ rakudo: :exists:(kv|p) and :delete:(kv|p)

[17:59] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/02e48d8127

[18:18] *** domidumont left
[18:46] *** ggoebel left
[18:52] *** ggoebel joined
[19:04] <Geth> Â¦ rakudo: 42fceb0855 | (Elizabeth Mattijsen)++ | 2 files

[19:04] <Geth> Â¦ rakudo: Add basic slice candidate to native 1dim shaped arrays

[19:04] <Geth> Â¦ rakudo: 

[19:04] <Geth> Â¦ rakudo: To make these type of accesses work directly without any intervening

[19:04] <Geth> Â¦ rakudo: AT-POS logic

[19:04] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/42fceb0855

[19:11] <Geth> Â¦ rakudo: 2c5b545760 | (Elizabeth Mattijsen)++ | 2 files

[19:11] <Geth> Â¦ rakudo: Add basic Callable candidate to native 1dim shaped arrays

[19:11] <Geth> Â¦ rakudo: 

[19:11] <Geth> Â¦ rakudo: To make these type of accesses work directly without any intervening

[19:11] <Geth> Â¦ rakudo: AT-POS logic

[19:11] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2c5b545760

[19:11] <lizmat> well, that should make most accesses to native shaped 1dim arrays about 2x as fast as accessing unshaped native arrays

[19:12] <lizmat> (before jnthns fixes and these fixes, they were about 8x as slow)

[19:12] <lizmat> afk for a few hours&

[19:38] *** morayj left
[20:26] <[Tux]> Rakudo v2020.11-91-g2c5b54576 (v6.d) on MoarVM 2020.11-54-ga595d9ddc

[20:26] <[Tux]> csv-test-xs-20      0.385 -  0.390

[20:26] <[Tux]> csv-ip5xs           0.812 -  0.831

[20:26] <[Tux]> test-t --race       0.830 -  0.849

[20:26] <[Tux]> test-t              1.881 -  1.929

[20:26] <[Tux]> test                7.832 -  8.238

[20:26] <[Tux]> csv-ip5xs-20        8.122 -  8.769

[20:26] <[Tux]> test-t-20 --race    8.978 -  9.503

[20:26] <[Tux]> csv-parser         24.590 - 25.724

[20:26] <[Tux]> test-t-20          31.843 - 31.877

[20:34] *** morayj joined
[21:07] *** sena_kun joined
[21:10] *** Altai-man left
[21:59] *** finsternis left
[22:44] *** morayj left
[22:52] <timotimo> oh wow! 2x as fast that's amazing!

[22:52] <timotimo> i did not expect it to pass unshaped in performance this quickly

[22:55] *** sena_kun left
[22:56] <[Coke]> nice.

[23:38] *** ggoebel_ joined
[23:40] *** ggoebel left
