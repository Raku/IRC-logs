[01:08] <samcv> [TuxCM], have you ever tried running it with the FIFO priority and higher IO priority to see how much difference it makes? If the timings are pretty close, then it's likely other processes on the computer are not affecting it much.

[01:31] <samcv> You can live dangerously and just do `sudo chrt -f 1 ionice -c 2 -n 0 MYCOMMAND.raku` or if you want to do it safer, and run as your own user with only the capabilities needed (cap_sys_nice): 

[01:32] <samcv> `_USER=$USER _HOME=$HOME sudo -E capsh --keep=1 --user=$USER --inh=cap_sys_nice --addamb=cap_sys_nice -- -c 'export USER=$_USER HOME=$_HOME; chrt -f 1 ionice -c 2 -n 0 whoami'` The variable exporting and setting is not needed for security reasons. `whoami` confirms it is the correct user, it's just sudo command tries to be helpful by setting environment variables, while capsh changes the user, but doesn't touch the environment

[01:34] <samcv> This sets the lowest FIFO (realtime) mode (on a scale of 1 to 100, one is the lowest). While it sets the highest io niceness within the normal io priority system. There is a realtime io priority as well, but i didn't use it, since cap_sys_nice does not seem to grant that right

[02:19] *** lucasb left
[02:19] *** frost-lab joined
[03:19] *** linkable6 left
[03:19] *** evalable6 left
[03:22] *** linkable6 joined
[03:22] *** evalable6 joined
[03:59] *** leont left
[04:03] <Geth> Â¦ rakudo: vrurg++ created pull request #4096: Implement invocation protocol for roles

[04:03] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4096

[05:53] *** b2gills left
[05:57] <Geth> Â¦ nqp: 779fc8e66c | Coke++ | 5 files

[05:57] <Geth> Â¦ nqp: match 3-digits of test file

[05:57] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/779fc8e66c

[05:57] <Geth> Â¦ nqp: 70fac46e3d | Coke++ | t/nqp/117-strs.t

[05:57] <Geth> Â¦ nqp: Add tests for nqp::x

[05:57] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/commit/70fac46e3d

[05:58] <[Coke]> ok, I did the easy one. :)

[05:58] <[Coke]> zzz

[06:28] *** squashable6 left
[06:30] *** squashable6 joined
[06:35] *** [Coke] left
[06:37] *** [Coke] joined
[06:37] *** [Coke] left
[06:37] *** [Coke] joined
[06:59] *** maggotbrain joined
[07:00] *** sena_kun joined
[07:36] <[TuxCM]> Rakudo v2020.11-109-g1ae04788c (v6.d) on MoarVM 2020.11-82-g6294b666f

[07:36] <[TuxCM]> csv-test-xs-20      0.395 -  0.438

[07:36] <[TuxCM]> test-t --race       0.860 -  0.881

[07:36] <[TuxCM]> csv-ip5xs           0.853 -  0.953

[07:36] <[TuxCM]> test-t              1.919 -  2.190

[07:36] <[TuxCM]> test                8.151 -  8.493

[07:36] <[TuxCM]> csv-ip5xs-20        8.709 -  8.900

[07:36] <[TuxCM]> test-t-20 --race    9.561 -  9.662

[07:36] <[TuxCM]> csv-parser         25.044 - 25.078

[07:36] <[TuxCM]> test-t-20          34.077 - 35.231

[07:38] <[TuxCM]> samv I run "cpupower frequency-set -g performance", other suggestions welcome

[07:49] <sena_kun> releasable6, status

[07:49] <releasable6> sena_kun, Next release in â‰ˆ11 days and â‰ˆ11 hours. 1 blocker. 0 out of 109 commits logged

[07:49] <releasable6> sena_kun, Details: https://gist.github.com/3d94dbfeb403805b1714efb90f075827

[08:16] *** domidumont joined
[08:58] *** domidumont left
[09:00] *** domidumont joined
[09:04] *** domidumont left
[09:07] *** Altai-man joined
[09:10] *** sena_kun left
[09:18] <lizmat> Files=1346, Tests=117144, 223 wallclock secs (30.22 usr  8.56 sys + 3109.99 cusr 294.15 csys = 3442.92 CPU)

[09:18] *** domidumont joined
[09:26] *** patrickb joined
[09:32] <[TuxCM]> Rakudo v2020.11-109-g1ae04788c (v6.d) on MoarVM 2020.11-82-g6294b666f

[09:32] <[TuxCM]> csv-test-xs-20      0.381 -  0.382

[09:32] <[TuxCM]> csv-ip5xs           0.805 -  0.811

[09:32] <[TuxCM]> test-t --race       0.811 -  0.815

[09:32] <[TuxCM]> test-t              1.916 -  1.922

[09:32] <[TuxCM]> test                7.405 -  7.752

[09:32] <[TuxCM]> csv-ip5xs-20        8.007 -  8.272

[09:32] <[TuxCM]> test-t-20 --race    9.153 -  9.382

[09:32] <[TuxCM]> csv-parser         24.029 - 26.047

[09:32] <[TuxCM]> test-t-20          32.731 - 32.872

[09:40] *** patrickb left
[10:12] *** Xliff joined
[11:16] *** Xliff left
[11:17] *** [Tux] left
[11:29] <Geth> Â¦ rakudo: bd944e7cfe | (Elizabeth Mattijsen)++ | 2 files

[11:29] <Geth> Â¦ rakudo: Add support for native shaped1 slice assignment from native

[11:29] <Geth> Â¦ rakudo: 

[11:29] <Geth> Â¦ rakudo: This makes @a[@i] = @j on a shaped 1-dimensional native array about

[11:29] <Geth> Â¦ rakudo: 15% faster, and a few % faster than on an unshaped native array.

[11:29] <Geth> Â¦ rakudo: Difference caused by not having to check indices for < 0 values,

[11:29] <Geth> Â¦ rakudo: as that is done internally for shaped arrays.

[11:29] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bd944e7cfe

[11:30] *** [Tux] joined
[11:47] *** frost-lab left
[11:47] *** [Tux] left
[12:05] *** [Tux] joined
[13:08] *** sena_kun joined
[13:09] *** Altai-man left
[13:12] *** MasterDuke left
[13:25] *** leont joined
[13:27] *** MasterDuke joined
[13:40] *** b2gills joined
[13:58] *** finsternis left
[13:59] *** finsternis joined
[14:10] *** cog joined
[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 2af4e1cff0 | (Stefan Seifert)++ | src/QAST/Block.nqp

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: Fix parallel compilation occasionally losing frames

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: CUIDs must as their name suggest be unique within a computation unit. We rely

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: on this when we use CUIDs as keys for lookup hashes for the static frames into

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: which we compile blocks.

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: When multiple compilations (like EVAL) are run in parallel, it was possible

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: <â€¦commit message has 7 more linesâ€¦>

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: review: https://github.com/Raku/nqp/commit/2af4e1cff0

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 2c79b30814 | (Stefan Seifert)++ | src/how/NQPClassHOW.nqp

[15:45] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: Remove long obsolete code

[15:46] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 

[15:46] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 8 years ago in commit b6c88ffae3de22ead132d5751ab11517ebacd4dc the %caches

[15:46] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: lexical was turned into an attribute. Since now every instance of the meta

[15:46] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: class has its own caches hash, there was actually no longer a need to retain

[15:46] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: the nested hash keyed on the meta object's memory address. The cache method

[15:46] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: was adapted accordingly, but the obsolete initialization in add_method was

[15:46] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: kept needlessly. Lay it to rest, finally.

[15:46] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: review: https://github.com/Raku/nqp/commit/2c79b30814

[15:46] <Geth> Â¦ rakudo/rakuast: 11f489d814 | (Jonathan Worthington)++ | 8 files

[15:46] <Geth> Â¦ rakudo/rakuast: Implement contextualizers in RakuAST

[15:46] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/11f489d814

[15:53] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 4454625470 | (Stefan Seifert)++ | src/how/NQPClassHOW.nqp

[15:53] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: Remove superfluous setting of debugtypename on mixins

[15:53] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 

[15:53] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: The debug type name is alreay set in new_type which is called from

[15:53] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: generate_mixin. Cached mixins will keep their debug type name. There's no need

[15:53] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: to set it again. I just didn't realize this when trying to find all places

[15:53] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: where we were still missing a debug type name.

[15:53] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: review: https://github.com/Raku/nqp/commit/4454625470

[15:53] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: bf6bdf5538 | (Stefan Seifert)++ | src/how/NQPParametricRoleHOW.nqp

[15:53] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: Fix "no such attribute" errors on mixin created by concurrent code

[15:54] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 

[15:54] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: When multiple thread create the same mixin type at the same time, they will

[15:54] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: all create types, but only the winner's will make it into the mixin cache and

[15:54] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: will be used by all competing threads. However, NQPParametricRoleHOW's

[15:54] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: specialize method was not thread safe.

[15:54] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 

[15:54] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: <â€¦commit message has 6 more linesâ€¦>

[15:54] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: review: https://github.com/Raku/nqp/commit/bf6bdf5538

[16:00] <Geth> Â¦ nqp: niner++ created pull request #687: Fix multithreaded compilation issues

[16:00] <Geth> Â¦ nqp: review: https://github.com/Raku/nqp/pull/687

[16:03] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: abef8549c2 | (Stefan Seifert)++ | src/how/NQPParametricRoleHOW.nqp

[16:03] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: Fix "no such attribute" errors on mixin created by concurrent code

[16:03] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 

[16:03] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: When multiple thread create the same mixin type at the same time, they will

[16:03] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: all create types, but only the winner's will make it into the mixin cache and

[16:03] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: will be used by all competing threads. However, NQPParametricRoleHOW's

[16:03] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: specialize method was not thread safe.

[16:03] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: 

[16:03] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: <â€¦commit message has 6 more linesâ€¦>

[16:03] <Geth> Â¦ nqp/fix-multithreaded-compilation-issues: review: https://github.com/Raku/nqp/commit/abef8549c2

[16:14] *** morayj joined
[16:16] <lizmat> nine++

[16:16] <jdv79> here i thought raku make multithreading easier;)

[16:17] <jdv79> nine++ # maybe that fixed some familar sounding errors i've randomly seen

[16:17] <lizmat> this is part of the torturing core devs  :-)

[16:29] <leont> nine++ # I know how difficult these issues are

[16:35] <Geth> Â¦ rakudo/rakuast: 104677bc78 | (Jonathan Worthington)++ | 5 files

[16:35] <Geth> Â¦ rakudo/rakuast: Implement quoted method calls in RakuAST

[16:35] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/104677bc78

[16:53] *** patrickb joined
[17:07] *** Altai-man joined
[17:09] *** sena_kun left
[17:12] <Geth> Â¦ rakudo/rakuast: dd2ff3b270 | (Jonathan Worthington)++ | 5 files

[17:12] <Geth> Â¦ rakudo/rakuast: Implement meta method calls in RakuAST

[17:12] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/dd2ff3b270

[17:35] *** maggotbrain left
[18:11] *** morayj left
[18:13] *** morayj joined
[18:20] <Geth> Â¦ rakudo/rakuast: 225b07792a | (Jonathan Worthington)++ | 5 files

[18:20] <Geth> Â¦ rakudo/rakuast: Start on RakuAST statement modifier support

[18:20] <Geth> Â¦ rakudo/rakuast: 

[18:20] <Geth> Â¦ rakudo/rakuast: This adds plumbing for them, along with if/unless condition modifiers

[18:20] <Geth> Â¦ rakudo/rakuast: and while/until loop modifiers. No AST tests or deparse support yet.

[18:20] <Geth> Â¦ rakudo/rakuast: The other modifiers are trickier, needing setting the topic or,

[18:20] <Geth> Â¦ rakudo/rakuast: potentially, a thunk.

[18:20] <Geth> Â¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/225b07792a

[18:47] *** domidumont left
[18:57] *** sivoais left
[19:41] <Geth> Â¦ rakudo: f6c7ddb286 | (Elizabeth Mattijsen)++ | src/core.c/Rakudo/Iterator.pm6

[19:41] <Geth> Â¦ rakudo: Introduce Rakudo::Iterator.TailWith

[19:41] <Geth> Â¦ rakudo: 

[19:41] <Geth> Â¦ rakudo: This basically takes an iterator and a value, and will start producing

[19:41] <Geth> Â¦ rakudo: the value indefinitely after the given iterator is exhausted.

[19:41] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f6c7ddb286

[19:42] *** morayj left
[19:44] <Geth> Â¦ rakudo: 2274aa85a0 | (Elizabeth Mattijsen)++ | 2 files

[19:44] <Geth> Â¦ rakudo: Fix issue with 1dim native shaped array initialization

[19:44] <Geth> Â¦ rakudo: 

[19:44] <Geth> Â¦ rakudo: Before this, @a = 1,2,3 would not initialize any elements that were

[19:44] <Geth> Â¦ rakudo: not consistently set.  So it would actually be an implicit splice

[19:44] <Geth> Â¦ rakudo: into the array.  This is now rectified.

[19:44] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2274aa85a0

[19:48] <Geth> Â¦ roast: d21cb937c4 | (Elizabeth Mattijsen)++ | 3 files

[19:48] <Geth> Â¦ roast: Untodo now passing tests

[19:48] <Geth> Â¦ roast: review: https://github.com/Raku/roast/commit/d21cb937c4

[19:52] *** leont left
[19:52] *** leont joined
[20:50] *** patrickb left
[21:08] *** sena_kun joined
[21:10] *** Altai-man left
[22:09] *** sena_kun left
[22:14] <Geth> Â¦ roast: vrurg++ created pull request #709: Make test conform to the new coercion semantics and role invocation

[22:14] <Geth> Â¦ roast: review: https://github.com/Raku/roast/pull/709

[22:29] *** HarmtH joined
[23:25] *** dogbert17 left
[23:35] *** cog_ left
[23:36] *** cog_ joined
