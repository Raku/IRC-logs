[00:01] *** travis-ci joined
[00:01] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Disable failing test for now'

[00:01] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/648657065 https://github.com/rakudo/rakudo/compare/5a4a3be4a4c5...ffabf8d5cf25

[00:01] *** travis-ci left
[00:04] *** vrurg joined
[00:24] *** SqrtNegInf left
[00:36] *** lucasb left
[00:50] *** AlexDaniel joined
[00:51] *** AlexDaniel left
[00:51] *** AlexDaniel joined
[01:34] *** sena_kun left
[01:43] *** titsuki joined
[01:45] *** epony left
[01:45] *** epony joined
[01:47] *** sena_kun joined
[01:56] *** Kaiepi left
[01:56] *** Kaiepi joined
[02:12] *** ufobat__ joined
[02:16] *** ufobat_ left
[03:04] *** finsternis left
[03:06] *** finsternis joined
[03:14] *** finsternis left
[03:15] *** finstern1s joined
[03:22] *** finstern1s is now known as finsternis

[03:34] *** sena_kun left
[03:39] *** Geth left
[03:48] *** sena_kun joined
[03:59] *** moon-child left
[04:04] *** moon-child joined
[04:17] *** hungryd87 joined
[04:20] *** hungrydonkey left
[04:40] *** moritz left
[04:40] *** moritz joined
[04:53] *** squashable6 left
[04:55] *** squashable6 joined
[05:34] *** sena_kun left
[05:46] *** sjn joined
[05:48] *** sena_kun joined
[06:00] *** ufobat__ left
[06:34] *** titsuki left
[07:27] *** stoned75 left
[07:33] *** stoned75 joined
[07:33] *** sena_kun left
[07:38] *** domidumont joined
[07:41] *** hungrydonkey joined
[07:43] *** hungryd87 left
[07:47] *** hungryd16 joined
[07:47] *** sena_kun joined
[07:49] *** hungrydonkey left
[07:53] *** hungrydonkey joined
[07:54] *** stoned75 left
[07:56] *** hungryd16 left
[08:09] *** patrickb joined
[08:20] *** Ven`` joined
[09:01] *** hungryd15 joined
[09:01] *** hungrydonkey left
[09:06] *** Voldenet left
[09:11] *** Voldenet joined
[09:11] *** Voldenet left
[09:11] *** Voldenet joined
[09:33] *** sena_kun left
[09:46] *** sena_kun joined
[10:03] <jnthn> lizmat: But that makes it harder for other implementations, because to be a drop-in replacement they have to emulate something with RAKUDO in its name.

[10:32] <MasterDuke> theses are the changes i made to related to rand_I for the ltm v1.2.0 update. https://github.com/MoarVM/MoarVM/pull/1221/files#diff-da7d01bcfced11bccf24e9234758e807L1151-L1206 and https://github.com/MoarVM/libtommath/commit/628cf8407a49af620197af278dbf00c210deac64

[10:34] <MasterDuke> i'm not entirely sure how srand was effecting it before

[10:34] <MasterDuke> maybe the ltm functions were calling rand?

[10:35] <MasterDuke> but if they aren't now, then maybe we need to not use them at all, since it doesn't look like they can be seeded

[10:37] <MasterDuke> ah ha. the ltm v1.1.0 changelog has: "mp_rand() has now several native random provider implementations and doesn't rely on `rand()` anymore"

[10:46] <nine> Could we use mp_rand() by default and switch over to rand() once srand has been used?

[10:51] <MasterDuke> is there an easy way to tell if srand has been used? or do we need to do something like set some flag hanging off tc?

[10:53] <MasterDuke> or should we just also use our tinymt for rand_I (which we use for rand_n)?

[10:54] <MasterDuke> https://github.com/MoarVM/MoarVM/blob/master/src/io/procops.c#L1082-L1090, and then we can not use srand() at all

[11:17] *** timotimo left
[11:17] *** timotimo joined
[11:34] *** sena_kun left
[11:42] *** squashable6 left
[11:45] *** squashable6 joined
[11:47] *** sena_kun joined
[12:08] <patrickb> jnthn: I think the underlying question is whether the WHATEVERLIB env var is a rakudo specific feature / implementation detail or something we consider part of Raku in general. If it's something Raku should have in general then it should be called RAKULIB. If we consider it to be an implementation detail, then a replacement shouldn't need to

[12:08] <patrickb> implement it.

[12:15] <lizmat> Files=1302, Tests=109841, 209 wallclock secs (28.36 usr  8.27 sys + 2922.59 cusr 275.88 csys = 3235.10 CPU)

[12:16] <jnthn> patrickb: PERL6LIB is covered by the spectest, and so was part of the language specification

[12:16] <jnthn> Well, is part of...

[12:16] <jnthn> So at a language design level, we'd be saying that we plan to deprecate it and not replace it

[12:16] <jnthn> And that it's implementation-defined

[12:17] <jnthn> We can, but that probably warrants discussion of why

[12:17] <patrickb> It it the thing corresponding to `-Isomelibfolder`? If yes then my gut feeling tells me it's very much a Raku thing and every implementation should support it.

[12:17] <jnthn> Yes, it's the env var version of -Ifoo

[12:17] <jnthn> My gut feeling matches yours, I'm just aware I may have missed a discussion that had reasons to do otherwise :)

[12:19] <patrickb> I have had several such discussions in the past months, but IIRC all about other parameters (e.g. PERL6_HOME -> RAKUDO_HOME).

[12:21] <jnthn> RAKUDO_HOME is perhaps reasonable in so far as iiuc it's a detail of how Rakudo deals with relocatability, and we'd probably not want to tie every impl into that

[12:21] <patrickb> If I interpret git history correctly, both PERL6LIB and RAKUDOLIB have been supported for a long time. I'd guess the corresponding RAKULIB alias for PERL6LIB was missed in the past rename refactors.

[12:22] <jnthn> Ah, interesting.

[12:25] <patrickb> jnthn: WRT RAKUDO_HOME That's how I see it as well. Having that as a general Raku variable would mean we'd force different implementations to install into the same folder. That's just provoking collisions. We don't want to do that.

[12:28] <jnthn> Yeah, makes sense.

[12:29] <jnthn> OK, so it looks like it's simply that nobody added a RAKULIB yet, not that RAKUDOLIB was chosen over it. 

[12:29] <jnthn> patrickb++

[12:29] <|Tux|> Rakudo version 2020.01-118-gffabf8d5c - MoarVM version 2020.01.1-33-g571c731ff

[12:29] <|Tux|> csv-test-xs-20      0.364 -  0.365

[12:29] <|Tux|> csv-ip5xs           0.694 -  0.698

[12:29] <|Tux|> test-t --race       0.792 -  0.794

[12:29] <|Tux|> test-t              1.746 -  1.766

[12:29] <|Tux|> csv-ip5xs-20        5.732 -  5.970

[12:29] <|Tux|> test   Rakudo version 2020.01-118-gffabf8d5c - MoarVM version 2020.01.1-33-g571c731ff

[12:30] <|Tux|> csv-test-xs-20      0.364 -  0.365

[12:30] <|Tux|> csv-ip5xs           0.694 -  0.698

[12:30] <|Tux|> test-t --race       0.792 -  0.794

[12:30] <|Tux|> test-t              1.746 -  1.766

[12:30] <|Tux|> csv-ip5xs-20        5.732 -  5.970

[12:30] <|Tux|> test                7.226 -  7.303

[12:30] <|Tux|> test-t-20 --race    8.464 -  8.509

[12:30] <|Tux|> csv-parser         22.671 - 23.398

[12:30] <|Tux|> test-t-20          29.773 - 29.966             7.226 -  7.303

[12:30] <|Tux|> test-t-20 --race    8.464 -  8.509

[12:30] <|Tux|> csv-parser         22.671 - 23.398

[12:30] <|Tux|> test-t-20          29.773 - 29.966

[12:31] *** MasterDuke left
[12:42] *** SqrtNegInf joined
[13:10] <lizmat> hmm... had just t/spec/S10-packages/basic.t fail in 47-48 and 50 and crash on 51

[13:11] <lizmat> oddly enough 47 and following tests issue warnings for uninitialized values of $repo-id in string context

[13:11] <lizmat> so feels to me we still have some gremlins in there related to throwing exceptions

[13:12] *** lucasb joined
[13:16] <lizmat> hmmm... looks like we lost Geth again, pinging tyil 

[13:17] <tyil> o/

[13:17] *** Geth joined
[13:17] * lizmat just pushed https://github.com/rakudo/rakudo/commit/255318ecc1e6b5ffae5430ebae

[13:17] *** rypervenche left
[13:21] *** rypervenche joined
[13:24] *** Ven`` left
[13:25] <Geth> ¦ nqp: e8afe42a73 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[13:25] <Geth> ¦ nqp: Document nqp::decodelocaltime

[13:25] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/e8afe42a73

[13:33] *** sena_kun left
[13:40] * lizmat wonders where nqp::p6decodelocaltime is being used

[13:44] <nine> lizmat: probably not at all any more

[13:44] <nine> lizmat: which you seem to have discovered already about a year ago :)

[13:44] <lizmat> yeah, I had a vague feeling of deja vu  :-)

[13:48] *** sena_kun joined
[14:15] *** AlexDaniel left
[14:22] <Geth> ¦ rakudo: b19c4eec8e | (Elizabeth Mattijsen)++ | 2 files

[14:22] <Geth> ¦ rakudo: Make R:I.get-local-timezone-offset about 19x as fast

[14:22] <Geth> ¦ rakudo: 

[14:22] <Geth> ¦ rakudo: - by bypassing DateTime object creation altogether

[14:22] <Geth> ¦ rakudo: - directly using the nqp::decodelocaltime / time_i ops

[14:22] <Geth> ¦ rakudo: - changed API to accept the epoch value to use

[14:22] <Geth> ¦ rakudo: - adapted *TZ setting to give the epoch value to use

[14:22] <Geth> ¦ rakudo: 

[14:22] <Geth> ¦ rakudo: <…commit message has 5 more lines…>

[14:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b19c4eec8e

[14:26] <lizmat> Working on this, I realized two things:

[14:26] <lizmat> - $*TZ is a misleading name, it should probably be $*TZ-OFFSET

[14:26] <lizmat>   as it does not contain any actual (named) timezone information

[14:26] <lizmat> - is constant once set

[14:26] <lizmat>   so would be incorrect after a DST change during the run of a process

[14:30] <jnthn> I thought the idea was that $*TZ can be any object, so long as it numifies appropriately?

[14:31] <jnthn> So you could use a module that provides more enriched values, but CORE only needs its numeric nature for actual calculations.

[14:32] <lizmat> the documentation currently does not reflect that

[14:32] <lizmat> but if that's the intent, then I will document as such  :-)

[14:39] <nine> And another one: [  139s] Unhandled exception in code scheduled on thread 4

[14:39] <nine> [  139s] push_o requires a concrete object (got a ThreadPoolScheduler::Queue type object instead)

[14:39] <nine> https://build.opensuse.org/package/live_build_log/devel:languages:perl6/perl6-Cro-HTTP/openSUSE_Factory/i586

[15:03] <Geth> ¦ rakudo: f4ad0c2efd | (Mikhail Khorkov)++ | lib/Test.rakumod

[15:03] <Geth> ¦ rakudo: #2364 Make throws-like throw an exception on Bool:D matchers

[15:03] <Geth> ¦ rakudo: 

[15:03] <Geth> ¦ rakudo: Now, throws-like and fails-like Test subs throw an Exception in case the matcher uses Bool:D as matcher value instead of explicit Bool:D check. The behavior is similar to .grep(True).

[15:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f4ad0c2efd

[15:03] <linkable6> RAKUDO#2364 [open]: https://github.com/rakudo/rakudo/issues/2364 [Test.pm][easy to resolve] throws-like should die on Bool:D matchers

[15:03] <Geth> ¦ rakudo: 50f084d834 | (Mikhail Khorkov)++ | lib/Test.rakumod

[15:03] <Geth> ¦ rakudo: #2364 Fix review

[15:03] <Geth> ¦ rakudo: 

[15:03] <Geth> ¦ rakudo: Now check uses smartmatching over identity operator.

[15:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/50f084d834

[15:04] <Geth> ¦ rakudo: f2b3091976 | (Vadim Belman)++ (committed using GitHub Web editor) | lib/Test.rakumod

[15:04] <Geth> ¦ rakudo: Merge pull request #3464 from atroxaper/2364-throws-like-bool

[15:04] <Geth> ¦ rakudo: 

[15:04] <Geth> ¦ rakudo: Make throws-like throw an exception on Bool:D matchers

[15:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f2b3091976

[15:04] <Geth> ¦ roast: c923109df6 | (Mikhail Khorkov)++ | S24-testing/fails-like.t

[15:04] <Geth> ¦ roast: Add tests for fails-like with Bool:D matcher

[15:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c923109df6

[15:04] <Geth> ¦ roast: 5aca1aa55d | (Vadim Belman)++ (committed using GitHub Web editor) | S24-testing/fails-like.t

[15:04] <Geth> ¦ roast: Merge pull request #616 from atroxaper/2364-throws-like-bool

[15:04] <Geth> ¦ roast: 

[15:04] <Geth> ¦ roast: Add tests for fails-like with Bool:D matcher

[15:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5aca1aa55d

[15:34] *** sena_kun left
[15:47] *** sena_kun joined
[16:11] <Geth> ¦ rakudo: vrurg++ created pull request #3473: Correct the order of checks in Bool condition

[16:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3473

[16:11] <Geth> ¦ rakudo: 5696dbd1d4 | (Vadim Belman)++ | lib/Test.rakumod

[16:11] <Geth> ¦ rakudo: Correct the order of checks in Bool condition

[16:11] <Geth> ¦ rakudo: 

[16:11] <Geth> ¦ rakudo: DEFINIED must go first.

[16:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5696dbd1d4

[16:11] <Geth> ¦ rakudo: cdc907b205 | (Vadim Belman)++ (committed using GitHub Web editor) | lib/Test.rakumod

[16:11] <Geth> ¦ rakudo: Merge pull request #3473 from vrurg/test-matcher-bool

[16:11] <Geth> ¦ rakudo: 

[16:11] <Geth> ¦ rakudo: Correct the order of checks in Bool condition

[16:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cdc907b205

[16:12] <Geth> ¦ roast: ebf9054656 | (Vadim Belman)++ | S05-metasyntax/regex.t

[16:12] <Geth> ¦ roast: Make correct Bool matchers

[16:12] <Geth> ¦ roast: 

[16:12] <Geth> ¦ roast: :attr(? *) instead of just :attr

[16:12] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ebf9054656

[16:15] <Geth> ¦ rakudo: 8dcf1a8e2b | (Jeremy Studer)++ | src/Perl6/Grammar.nqp

[16:15] <Geth> ¦ rakudo: Change err msg for pos after named in signature

[16:15] <Geth> ¦ rakudo: 

[16:15] <Geth> ¦ rakudo: If putting a positional paramater after a named parameter in a

[16:15] <Geth> ¦ rakudo: signature, the error previously stated that you cannot have a positional

[16:15] <Geth> ¦ rakudo: after a variadic. Change to be more accurate.

[16:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8dcf1a8e2b

[16:15] <Geth> ¦ rakudo: ab9c1ffa64 | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/Perl6/Grammar.nqp

[16:15] <Geth> ¦ rakudo: Merge pull request #3467 from jstuder-gh/named_param_lta_error_msg

[16:15] <Geth> ¦ rakudo: 

[16:15] <Geth> ¦ rakudo: Change err msg for pos after named in signature

[16:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ab9c1ffa64

[16:17] <Geth> ¦ rakudo: ca1e51c83f | (Daniel Green)++ | src/core.c/Stash.pm6

[16:17] <Geth> ¦ rakudo: Add the Stash's name to the Failure when trying...

[16:17] <Geth> ¦ rakudo: 

[16:17] <Geth> ¦ rakudo: to look up a non-existent symbol in the Stash.

[16:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ca1e51c83f

[16:17] <Geth> ¦ rakudo: 774a839c4d | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/core.c/Stash.pm6

[16:17] <Geth> ¦ rakudo: Merge pull request #3465 from MasterDuke17/add_some_more_context_to_could_not_find_symbol_failure

[16:17] <Geth> ¦ rakudo: 

[16:17] <Geth> ¦ rakudo: Add the Stash's name to the Failure when trying...

[16:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/774a839c4d

[16:18] *** patrickb left
[16:23] <Geth> ¦ rakudo: 6fbfc4a0c3 | (Konrad Bucheli)++ | src/core.c/Channel.pm6

[16:23] <Geth> ¦ rakudo: properly close Channel Supply

[16:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6fbfc4a0c3

[16:23] <Geth> ¦ rakudo: 8390016495 | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/core.c/Channel.pm6

[16:23] <Geth> ¦ rakudo: Merge pull request #3471 from kbucheli/propberly_close_channel_supply

[16:23] <Geth> ¦ rakudo: 

[16:23] <Geth> ¦ rakudo: properly close Channel Supply

[16:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8390016495

[16:23] <japhb> (merge fest)++

[16:23] <Geth> ¦ roast: b458b1db40 | (Konrad Bucheli)++ | S17-channel/basic.t

[16:23] <Geth> ¦ roast: channel elements not yet consumed in the supply should still be accessible

[16:23] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b458b1db40

[16:23] <Geth> ¦ roast: e4ffee22ec | (Jonathan Worthington)++ (committed using GitHub Web editor) | S17-channel/basic.t

[16:23] <Geth> ¦ roast: Merge pull request #617 from kbucheli/properly_close_channel_supply

[16:23] <Geth> ¦ roast: 

[16:23] <Geth> ¦ roast: channel elements not yet consumed in the supply should still be accessible

[16:23] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e4ffee22ec

[16:25] *** domidumont left
[16:29] *** patrickb joined
[16:47] *** hungryd15 left
[16:50] *** Phi joined
[16:51] <Phi> Hello, has anyone tried to compile Raku on Termux 

[16:52] <Phi> ?

[16:59] <nine> Phi: you mean on Android?

[16:59] <nine> Then the answer is yes

[17:00] *** Phi left
[17:09] <Geth> ¦ rakudo: 50ca2ed986 | (Jonathan Worthington)++ | src/Perl6/Grammar.nqp

[17:09] <Geth> ¦ rakudo: s/// parts should be thunks, not lexical scopes

[17:09] <Geth> ¦ rakudo: 

[17:09] <Geth> ¦ rakudo: This difference became observable when a placeholder parameter was used

[17:09] <Geth> ¦ rakudo: in either the match or the substitution part, and then tried to attach

[17:09] <Geth> ¦ rakudo: to the wrong place. Fixes #3358.

[17:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/50ca2ed986

[17:09] <linkable6> RAKUDO#3358 [closed]: https://github.com/rakudo/rakudo/issues/3358 Odd behavior when using `$^a` within a substitution regex

[17:10] <Geth> ¦ roast: f48ebe0159 | (Jonathan Worthington)++ | S05-substitution/subst.t

[17:10] <Geth> ¦ roast: Test placeholder params used in S/// construct

[17:10] <Geth> ¦ roast: 

[17:10] <Geth> ¦ roast: Covers https://github.com/rakudo/rakudo/issues/3358.

[17:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f48ebe0159

[17:33] *** sena_kun left
[17:37] <Geth> ¦ rakudo: 4a954cbc2b | (Jonathan Worthington)++ | src/core.c/ShapedArray.pm6

[17:37] <Geth> ¦ rakudo: Fix clone of multi-dim array to be deep enough

[17:37] <Geth> ¦ rakudo: 

[17:37] <Geth> ¦ rakudo: We could potentially optimize this with a STORE that has to do a bit

[17:37] <Geth> ¦ rakudo: less checking, because the shape is already good. However, in the

[17:37] <Geth> ¦ rakudo: meantime, better to actually be correct!

[17:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4a954cbc2b

[17:38] <Geth> ¦ roast: 87b4553e3a | (Jonathan Worthington)++ | S09-multidim/methods.t

[17:38] <Geth> ¦ roast: Test clone of a shaped array

[17:38] <Geth> ¦ roast: 

[17:38] <Geth> ¦ roast: It should retain the shape and have independent Scalar containers.

[17:38] <Geth> ¦ roast: Covers https://github.com/rakudo/rakudo/issues/3334.

[17:38] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/87b4553e3a

[17:42] <Geth> ¦ nqp-configure: patrickbkr++ created pull request #16: Rename `--git-reference` to `--git-cache-dir`

[17:42] <Geth> ¦ nqp-configure: review: https://github.com/perl6/nqp-configure/pull/16

[17:44] <Geth> ¦ nqp-configure: 03b3757066 | (Patrick Böker)++ | lib/NQP/Config.pm

[17:44] <Geth> ¦ nqp-configure: Rename `--git-reference` to `--git-cache-dir`

[17:44] <Geth> ¦ nqp-configure: 

[17:44] <Geth> ¦ nqp-configure: This more accurately reflects what it does as the option automatically

[17:44] <Geth> ¦ nqp-configure: fills the cache dir and keeps it up to date.

[17:44] <Geth> ¦ nqp-configure: review: https://github.com/perl6/nqp-configure/commit/03b3757066

[17:44] <Geth> ¦ nqp-configure: f6b9606d91 | (Patrick Böker)++ (committed using GitHub Web editor) | lib/NQP/Config.pm

[17:44] <Geth> ¦ nqp-configure: Merge pull request #16 from patrickbkr/git-cache-dir-option

[17:44] <Geth> ¦ nqp-configure: 

[17:44] <Geth> ¦ nqp-configure: Rename `--git-reference` to `--git-cache-dir`

[17:44] <Geth> ¦ nqp-configure: review: https://github.com/perl6/nqp-configure/commit/f6b9606d91

[17:48] *** sena_kun joined
[17:58] <Geth> ¦ rakudo: 3a86272ed5 | (Jonathan Worthington)++ | src/Perl6/bootstrap.c/BOOTSTRAP.nqp

[17:58] <Geth> ¦ rakudo: Ensure Foo(...) coercers make Raku objects

[17:58] <Geth> ¦ rakudo: 

[17:58] <Geth> ¦ rakudo: Str($*USER) was producing a BOOTStr because we return an unboxed `str`

[17:58] <Geth> ¦ rakudo: in `IntStr.Str` (which is fine), and since the caller was NQP code it

[17:58] <Geth> ¦ rakudo: then ended up boxed as a BOOTStr. Fixes #3308.

[17:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3a86272ed5

[17:58] <linkable6> RAKUDO#3308 [closed]: https://github.com/rakudo/rakudo/issues/3308 [data types] BOOTStr issue

[17:59] <Geth> ¦ roast: 2eb6c1814b | (Jonathan Worthington)++ | S02-literals/allomorphic.t

[17:59] <Geth> ¦ roast: Cover bug where Str($*USER) gave a bad result

[17:59] <Geth> ¦ roast: 

[17:59] <Geth> ¦ roast: Covers https://github.com/rakudo/rakudo/issues/3308.

[17:59] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/2eb6c1814b

[18:03] <jnthn> Well, there's some PRs and issues down...

[18:05] <sena_kun> jnthn++

[18:15] <Geth> ¦ rakudo: 8c995febda | (Patrick Böker)++ | tools/build/binary-release/build-debian.sh

[18:15] <Geth> ¦ rakudo: Add a binary release build script that works on Debian

[18:15] <Geth> ¦ rakudo: 

[18:15] <Geth> ¦ rakudo: This can / will be used when building for ARM architectures. The decision

[18:15] <Geth> ¦ rakudo: fell on Debian 9, as it is the distro with the oldest glibc, while being

[18:15] <Geth> ¦ rakudo: mainstream and still supported on armhf / arm64 architecture.

[18:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8c995febda

[18:29] <Geth> ¦ rakudo: patrickbkr++ created pull request #3474: Implement `--git-cache-dir` Configure.pl option

[18:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3474

[18:49] *** camelia left
[18:56] *** vrurg left
[18:58] *** jmerelo joined
[18:59] <jmerelo> Hi, I'm trying to compile Rakudo in a Debian docker container, doing this perl Configure.pl --gen-moar --gen-nqp --backends=moar

[18:59] <jmerelo> It says this: "Can't locate NQP/Config.pm in @INC (you may need to install the NQP::Config module)"

[18:59] <jmerelo> It's likely the README.md in Rakudo is outdated, but I can't figure it out...

[19:00] <patrickb> jmerelo: did you put "./" before "Configure.pl"?

[19:01] <jmerelo> patrickb: hum

[19:02] <patrickb> thinking about it this shouldn't make a difference...

[19:02] <jmerelo> patrickb: No, I use directly the line above, so perl Configure.pl gets the file in the current directory

[19:03] <patrickb> ah!

[19:03] <patrickb> do you have git installed?

[19:03] <patrickb> that Config.pm is part of the nqp-configure submodule

[19:03] <patrickb> that has to be cloned first

[19:04] <patrickb> Configure.pl should do that automatically first thing, but I suspect it somehow didn't on your machine

[19:04] <jmerelo> patrickb: it's a fork of the official Rakudo docker container, it downloads the tarfile directly

[19:04] <jmerelo> patrickb: from here https://github.com/rakudo/rakudo/archive/${rakudo_version}.tar.gz

[19:05] <jmerelo> patrickb: should I try and use the build-debian.sh you just uploaded?

[19:05] <patrickb> is the 3rd-party/nqp-configure folder in the rakudo folder empty?

[19:06] <lizmat> hmmm... t/spec/S07-hyperrace/basics.t started failing for me (test 84)

[19:06] <lizmat> can anyone confirm ?

[19:06] <jmerelo> patrickb: no, it's not

[19:08] <patrickb> uh... Then I'm out of clues. Configure.pl line 28 should add the needed includes just fine...

[19:09] <patrickb> Just double checking, there is a rakudo/3rdparty/nqp-configure/lib/NQP/Config.pm file?

[19:10] <jmerelo> patrickb: no, that's empty

[19:10] <jmerelo> patrickb: the tarfile does not include the submodule...

[19:10] <patrickb> I think you got the wrong file

[19:11] <jmerelo> patrickb: It's this one https://github.com/rakudo/rakudo/archive/${rakudo_version}.tar.gz

[19:11] <patrickb> on github there are "rakudo-2020.01.tar.gz" files. Those are the right ones.

[19:11] <patrickb> Those are the ones that the releaser actually created.

[19:11] <jmerelo> patrickb: OK, I'll try that

[19:12] <patrickb> The 2020.01.tar.gz are automatically created archives of the repository. Don't use those.

[19:13] <Geth> ¦ nqp: 9084b28c78 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[19:13] <Geth> ¦ nqp: Bump Moar to get --git-cache-dir support

[19:13] <Geth> ¦ nqp: 

[19:13] <Geth> ¦ nqp: Patrick Böker++

[19:13] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9084b28c78

[19:13] <lizmat> patrickb ^^ take it away!

[19:13] <patrickb> whoot!

[19:13] <jmerelo> patrickb: it's likely that the rakudo-star dockerfiles are busted, then... 

[19:13] <jmerelo> patrickb: seems to be working fine now. Thanks!

[19:13] <Geth> ¦ nqp: e77b938802 | (Patrick Böker)++ | 3 files

[19:13] <Geth> ¦ nqp: Implement `--git-cache-dir` Configure.pl option

[19:13] <Geth> ¦ nqp: 

[19:13] <Geth> ¦ nqp: This option makes the configure process create / update git repositories

[19:13] <Geth> ¦ nqp: for all of its submodules and MoarVM in the given folders and use those

[19:13] <Geth> ¦ nqp: as reference repos. The option is forwarded to a potential MoarVM

[19:13] <Geth> ¦ nqp: sub-build.

[19:13] <Geth> ¦ nqp: 

[19:13] <Geth> ¦ nqp: Also remove stale documentation for a not anymore implemented

[19:13] <Geth> ¦ nqp: `--git-reference` option. I suspect it was lost during the great build

[19:13] <Geth> ¦ nqp: system refactor.

[19:13] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/e77b938802

[19:14] <Geth> ¦ nqp: c46b54e309 | (Patrick Böker)++ | 3rdparty/nqp-configure

[19:14] <Geth> ¦ nqp: Pull in new nqp-configure with support for --git-cache-dir

[19:14] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/c46b54e309

[19:14] <Geth> ¦ nqp: 849971e2ee | (Patrick Böker)++ (committed using GitHub Web editor) | 4 files

[19:14] <Geth> ¦ nqp: Merge pull request #595 from patrickbkr/git-reference-option

[19:14] <Geth> ¦ nqp: 

[19:14] <Geth> ¦ nqp: Implement `--git-cache-dir` Configure.pl option

[19:14] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/849971e2ee

[19:16] <patrickb> Hm... Given we previously had an option called `--git-reference` and that option broke a year ago or so and has since then just been a noop.

[19:16] <patrickb> Should we continue to support it, as to not break tools that pass that option?

[19:17] <lizmat> if it was a noop, I guess it should stay a noop for the foreseeable future, with maybe a warning ?

[19:18] <patrickb> OK, then I just broke NQP in exactly that manner. Fix coming up...

[19:29] *** Xliff joined
[19:29] <Xliff> o/

[19:29] <Xliff> Is it TEST_JOBS or NUM_JOBS for parallel spectest?

[19:31] *** vrurg joined
[19:31] <lizmat> TEST_JOBS

[19:31] <Xliff> vrurg - \o

[19:31] <Xliff> lizmat++

[19:31] <Xliff> I am actually paying for a very large image on AWS.

[19:31] <Xliff> Just for shiz and giggles.

[19:32] <vrurg> Xliff: o/ :)

[19:33] *** sena_kun left
[19:34] <Xliff> vrurg: How are things?

[19:35] <Geth> ¦ nqp: patrickbkr++ created pull request #598: Don't fail with `--git-reference` Configure.pl parameter

[19:35] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/598

[19:36] <vrurg> Xliff: all the same, stuck in Vikna devel...

[19:36] <Xliff> :)

[19:36] <vrurg> Xliff: thinking of the clashing module problem time after time, but no time for it.

[19:36] <Xliff> Refactoring all of my p6-GLib projects for consistency, here...

[19:37] <Xliff> ?!?

[19:37] <vrurg> Xliff: 👍🏻

[19:37] <Xliff> Inline::Perl5 tests are failing.

[19:37] <patrickb> vrurg: Nice to see you!

[19:37] <patrickb> vrurg: Mind to have a very short look at the above PR?

[19:39] *** jmerelo left
[19:39] <vrurg> patrickb: I'd move the warning into 'configure_from_options'.

[19:40] <vrurg> Just to keep Configure.pl as uncluttered as only possible.

[19:41] <patrickb> vrurg: In the nqp-configure sub-module or just the tools/lib/NQP/Config/NQP.pm?

[19:41] <Xliff> Now they pass with --serial. Hmmm...

[19:42] <vrurg> patrickb: if you do the same for rakudo (and I presume you're going to), then it makes sense to add it to nqp-configure.

[19:42] <patrickb> OK

[19:45] <Xliff> Hmmm.... my spectest run wen 109857 tests in 48 seconds and is now hanging.

[19:45] <Xliff> Interesting.

[19:46] <Xliff> Hung on S15-normalization/nfc-concat.t, although S32-io/lock.t was right before it.

[19:46] *** sena_kun joined
[19:47] <Geth> ¦ nqp-configure: patrickbkr++ created pull request #17: Warn about no-op --git-reference option

[19:47] <Geth> ¦ nqp-configure: review: https://github.com/perl6/nqp-configure/pull/17

[19:48] <Geth> ¦ nqp-configure: 403f0a6742 | (Patrick Böker)++ | lib/NQP/Config.pm

[19:48] <Geth> ¦ nqp-configure: Warn about no-op --git-reference option.

[19:48] <Geth> ¦ nqp-configure: review: https://github.com/perl6/nqp-configure/commit/403f0a6742

[19:48] <Geth> ¦ nqp-configure: 326895a2e4 | (Patrick Böker)++ (committed using GitHub Web editor) | lib/NQP/Config.pm

[19:48] <Geth> ¦ nqp-configure: Merge pull request #17 from patrickbkr/git-reference-back-compat

[19:48] <Geth> ¦ nqp-configure: 

[19:48] <Geth> ¦ nqp-configure: Warn about no-op --git-reference option

[19:48] <Geth> ¦ nqp-configure: review: https://github.com/perl6/nqp-configure/commit/326895a2e4

[19:49] <Geth> ¦ nqp: bc94cc7052 | (Patrick Böker)++ | 2 files

[19:49] <Geth> ¦ nqp: Don't fail with `--git-reference` Configure.pl parameter

[19:49] <Geth> ¦ nqp: 

[19:49] <Geth> ¦ nqp: This makes it backwards compatible. The option has been a no-op for quite

[19:49] <Geth> ¦ nqp: some time, so we don't need to actually implement it.

[19:49] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/bc94cc7052

[19:49] <patrickb> And with that NQP should be good again even when --git-reference is passed again.

[19:50] <vrurg> patrickb: BTW, it just crossed my mind that you use 'print' for the warning. There is method 'note' on NQP::Configure for this: $self->note("WARNING!", "line1\n", "line2\n")

[19:50] <vrurg> patrickb: non-critical, obviously. :)

[19:52] <[Tux]> Rakudo version 2020.01-136-g8c995febd - MoarVM version 2020.01.1-35-gecddb4de5

[19:52] <[Tux]> csv-test-xs-20      0.360 -  0.398

[19:52] <[Tux]> csv-ip5xs           0.706 -  0.725

[19:52] <[Tux]> test-t --race       0.874 -  0.946

[19:52] <[Tux]> test-t              1.863 -  1.899

[19:52] <[Tux]> csv-ip5xs-20        5.855 -  5.970

[19:52] <[Tux]> test                7.465 -  7.765

[19:52] <[Tux]> test-t-20 --race    8.847 -  9.273

[19:52] <[Tux]> csv-parser         22.992 - 24.852

[19:52] <[Tux]> test-t-20          29.754 - 31.337

[20:07] <lizmat> m: sub a(Cool:D $a) { $a.Str }; a(42) for ^10000000; say now - INIT now

[20:08] <lizmat> ah, looks like we lost camelia  :-(

[20:08] <lizmat> p6: sub a(Cool:D $a) { $a.Str }; a(42) for ^10000000; say now - INIT now

[20:08] <lizmat> and the fallback as well   :-(

[20:09] <lizmat>  r 'sub a(Cool:D $a) { $a.Str }; a("42") for ^10000000; say now - INIT now'

[20:09] <lizmat> 0.318394

[20:09] <lizmat>  r 'sub a(Cool:D $a) { $a.Str }; a(42) for ^10000000; say now - INIT now'

[20:09] <lizmat> 0.29575214

[20:09] <lizmat> this feels counter-intuitive

[20:09] <lizmat> coercing a Str to a Str is slower than coercing an Int to a Str ?

[20:21] <lizmat> shorter version:

[20:21] <lizmat> $ r '"42".Str for ^100000000; say now - INIT now'

[20:21] <lizmat> 0.8582568

[20:21] <lizmat> $ r '42.Str for ^100000000; say now - INIT now'

[20:21] <lizmat> 0.69737759

[20:21] <lizmat> jnthn:  ^^ any ideas ?

[20:30] <Geth> ¦ rakudo/master: 4 commits pushed by (Patrick Böker)++

[20:30] <Geth> ¦ rakudo/master: 4ffd8df989 | Bump NQP

[20:30] <Geth> ¦ rakudo/master: 443772322c | Pull in new nqp-configure which supports --git-cache-dir

[20:30] <Geth> ¦ rakudo/master: 322b095edc | Implement `--git-cache-dir` Configure.pl option

[20:30] <Geth> ¦ rakudo/master: 2b04eea7d2 | Merge pull request #3474 from patrickbkr/git-reference-option

[20:30] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/8c995febda33...2b04eea7d2a0

[20:50] <patrickb> rba: Ping. I have a bit time left today. So throw at me whatever you have to do.

[20:58] <rba> Patrickb: through 🐪

[20:59] <rba> patrickb: give me a sec

[21:11] *** Kaiepi left
[21:12] *** Kaiepi joined
[21:27] *** rba_ joined
[21:29] <rba> patrickb: Are you still around for a discussion?

[21:29] <patrickb> rba: I'm here!

[21:30] <rba> patrickb: Yay!

[21:33] *** sena_kun left
[21:43] <rba> patrickb: Do you read PM too?

[21:44] <patrickb> Uhm... dunno. Might have to consult my IRC client where it shows them... I guess you sent one...

[21:46] <rba> patrickb: 🤨

[21:47] <rba> patrickb: like to share a tmate session with you. yet not public is the wrong place.

[21:47] <rba> patrickb: In PM you are away. Strange.

[21:47] <patrickb> grrr....

[21:48] *** sena_kun joined
[22:00] *** MasterDuke joined
[22:03] <MasterDuke> m: my $a; my $b = 99.rand.Int; say $b; my $s = now; $a = $b.Str for ^10_000_000; say now - $s; say $a

[22:04] <MasterDuke> oh right, camelia is down

[22:04] <Geth> ¦ rakudo: 597288be62 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[22:04] <Geth> ¦ rakudo: Support :i(ignorecase) / :m(ignoremark) with Str.index

[22:04] <Geth> ¦ rakudo: 

[22:04] <Geth> ¦ rakudo: - on MoarVM, uses nqp::indexic / indexim / indexicim ops

[22:04] <Geth> ¦ rakudo: - other backends use foldcase logic for :i(ignorecase)

[22:04] <Geth> ¦ rakudo: - dies on other backends trying to use :m(ignoremark)

[22:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/597288be62

[22:04] <lizmat> who runs camelia again ?

[22:05] <MasterDuke> lizmat: anyway, the above example takes ~3.3s for me, but $b = 99.rand.Int.Str only takes ~1.9s

[22:05] <MasterDuke> moritz or nine i think?

[22:05] <MasterDuke> oh, and my numbers are for ^100_000_000

[22:06] <lizmat> hmmm...  

[22:28] *** Kaiepi left
[22:30] *** Kaeipi joined
[22:34] <jnthn> lizmat: That's odd....please make an issue, otherwise I'll probably forget to investigate :)

[22:36] <sena_kun> is it annoying when I am tagging everything as blockers these days? :)

[22:37] <lizmat> sena_kun: no

[22:37] <lizmat> :-)

[22:38] <Geth> ¦ rakudo: Altai-man assigned to jnthn Issue Likely memory corruption in .hyper https://github.com/rakudo/rakudo/issues/3475

[22:42] <Xliff> Hmmm... I have spun up several VMs at both AWS and Google and can't get the performance increases I am seeing on my local machine with the .precomp lock removed. :/

[22:42] <Xliff> Of course, I am running a higher number of threads. 

[22:46] *** rba_ left
[22:55] <Geth> ¦ rakudo: 49aaa6ff36 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[22:55] <Geth> ¦ rakudo: Support :i(ignorecase) / :m(ignoremark) with Str.starts-with

[22:55] <Geth> ¦ rakudo: 

[22:55] <Geth> ¦ rakudo: - on MoarVM, uses nqp::indexic / indexim / indexicim ops

[22:55] <Geth> ¦ rakudo: - other backends use foldcase logic for :i(ignorecase)

[22:55] <Geth> ¦ rakudo: - dies on other backends trying to use :m(ignoremark)

[22:55] <Geth> ¦ rakudo: - refactored private die method for more general usage

[22:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/49aaa6ff36

[23:02] *** lucasb left
[23:15] <Geth> ¦ rakudo: 60b0d86a11 | (Elizabeth Mattijsen)++ | src/core.c/Str.pm6

[23:15] <Geth> ¦ rakudo: Support :i(ignorecase) / :m(ignoremark) with Str.ends-with

[23:15] <Geth> ¦ rakudo: 

[23:15] <Geth> ¦ rakudo: - on MoarVM, uses nqp::indexic / indexim / indexicim ops

[23:15] <Geth> ¦ rakudo: - other backends use foldcase logic for :i(ignorecase)

[23:15] <Geth> ¦ rakudo: - dies on other backends trying to use :m(ignoremark)

[23:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/60b0d86a11

[23:19] <Geth> ¦ rakudo: 7a2d68f827 | (Elizabeth Mattijsen)++ | src/core.c/Date.pm6

[23:19] <Geth> ¦ rakudo: Fix timezone dependency

[23:19] <Geth> ¦ rakudo: 

[23:19] <Geth> ¦ rakudo: Earlier optimizations caused DateTime.new(Instant) and DateTime.today

[23:19] <Geth> ¦ rakudo: to not take the current timezone into account.  This caused tests to

[23:19] <Geth> ¦ rakudo: fail only between midnight and 1am.  Adding $*TZ into the mix was

[23:19] <Geth> ¦ rakudo: enough to have the tests pass all the time.

[23:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7a2d68f827

[23:20] <lizmat> and that concludes my hacking for today

[23:20] <lizmat> sleep&

[23:34] *** sena_kun left
[23:47] *** sena_kun joined
[23:59] *** Kaeipi left
