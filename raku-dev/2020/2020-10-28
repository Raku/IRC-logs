[01:48] *** Xliff joined
[01:48] <Xliff> Hi all...

[01:48] <Xliff> https://gist.github.com/Xliff/525a931eecdc146d10c3c2a9ae212e1c

[01:49] *** Xliff left
[03:52] *** lucasb left
[03:53] *** Xliff joined
[03:53] <Xliff> .

[03:53] <tellable6> 2020-10-28T01:59:14Z #raku <[Coke]> xliff are you memory constrained on that win build?

[03:53] <Xliff> [Coke]: No. I have 64 gigs on this machine.

[04:00] <Xliff> .tell [Coke] No, I have 64 gig on this box. I just reran it again. Memory never grew above 10.1 total gigs usage

[04:00] <tellable6> Xliff, I'll pass your message to [Coke]

[04:16] *** Xliff left
[04:19] *** Xliff joined
[05:10] *** Kaiepi left
[05:20] *** frost-lab joined
[05:41] *** MasterDuke left
[06:37] *** nebuchadnezzar joined
[07:35] *** Altai-man joined
[07:56] *** Altai-man left
[07:56] *** Altai-man joined
[08:08] *** sena_kun joined
[08:10] *** Altai-man left
[09:58] *** domidumont joined
[10:32] <lizmat> is Geth AWOL again?   tyil ?

[10:33] <tyil> kicking geth ~

[10:33] *** Geth joined
[10:54] <Geth> ¦ rakudo: Altai-man assigned to lizmat Issue New Trademark font characters are right-clipped in the REPL producing an unfortunate visual result https://github.com/rakudo/rakudo/issues/3986

[11:29] *** frost-lab left
[11:34] *** Kaiepi joined
[11:35] *** Kaiepi left
[11:37] *** Kaiepi joined
[11:46] *** Kaiepi left
[11:47] *** Kaiepi joined
[11:48] *** Kaiepi left
[12:07] *** Altai-man joined
[12:08] *** Kaiepi joined
[12:10] *** sena_kun left
[14:31] *** Xliff left
[15:07] <[Coke]> lizmat: did you see the / @keywords / vs. .contains(any(@keywords)) speed diff?

[15:07] <tellable6> 2020-10-28T04:00:21Z #raku-dev <Xliff> [Coke] No, I have 64 gig on this box. I just reran it again. Memory never grew above 10.1 total gigs usage

[15:11] <lizmat> [Coke]: no

[15:11] <[Coke]> lizmat: my script went from 120s to 5s.

[15:11] <[Coke]> (for the opcode tests)

[15:11] <lizmat> ah, yes, well  INTERPOLATE is a bitch  :-)

[15:12] <[Coke]> https://github.com/Raku/nqp/commit/d1b2c12d836d51e366f6da4836d19974bf034cb5

[15:12] <[Coke]> it also didn't help to extract the regex creation outside of the loop

[15:12] <[Coke]> in NQP, this was still very fast.

[15:13] <lizmat> hmmm... well, I guess that's because it cannot know that @keywords didn;'t change inbetween?

[15:13] <Geth> ¦ rakudo: 329e47f435 | (Elizabeth Mattijsen)++ | src/Perl6/Compiler.nqp

[15:13] <Geth> ¦ rakudo: Give "raku -v" a pure ASCII version

[15:13] <Geth> ¦ rakudo: 

[15:13] <Geth> ¦ rakudo: The message displayed when starting the REPL stays the same.

[15:13] <Geth> ¦ rakudo: This is a slightly hacky use of the :short-versions flag, but

[15:13] <Geth> ¦ rakudo: I guess it will do for now at least.

[15:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/329e47f435

[15:15] <[Coke]> if I did my $re = / @keywords /  I would not expect that to track changes in @keywords

[15:16] <lizmat> I would have to check, but if you didn't see a difference there, I'd suspect it would be interpolating the array every time again

[15:17] <[Coke]> raku: my @keywords = < this that>; my $re = / @keywords /; dd "this is fun" ~~ $re; dd "what is fun" ~~ $re; @keywords.push: 'what'; dd "what is fun" ~~ $re;

[15:17] <evalable6> [Coke], rakudo-moar 87ef76ae3: OUTPUT: «Match.new(:orig("this is fun"), :from(0), :pos(4))␤Nil␤Match.new(:orig("what is fun"), :from(0), :pos(4))␤»

[15:17] <[Coke]> ... so yah, it is doing it every time.... that feels like a bug to me

[15:19] *** domidumont left
[15:19] <lizmat> [Coke]: please make an issue if there isn't one already :-)

[15:20] <[Coke]> rakudo or ps?

[15:21] <lizmat> ah... hmmm....   

[15:21] <lizmat> rakudo for now, I'd say

[15:27] <[Coke]> lizmat: https://github.com/rakudo/rakudo/issues/3988

[15:28] <ugexe> i'm not immediately sure how it could Do The Right Thing in regards to multithreads

[15:28] <ugexe> similar to once/state

[15:29] <[Coke]> if it's "works as intended", I'll just make sure we update the variable interpolation regex section in the docs.

[15:29] <[Coke]> (and make sure we have a test, I guess)

[15:29] <ugexe> although i agree this behavior is not intuitive

[15:29] <ugexe> yea i dunno if its intended. it just feels like it might be a consequence of other design decisions

[15:30] <lizmat> if @keywords can be proven to be a value type, it could not repeat the interpolation, I guess

[15:31] <lizmat> but sadly, even <foo bar> is not a value type  :-(

[15:31] <Geth> ¦ nqp: b64cd90dce | Coke++ | docs/ops.markdown

[15:31] <Geth> ¦ nqp: Document sub_i64 (js)

[15:31] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/b64cd90dce

[15:31] <Geth> ¦ nqp: 4b95f4e604 | Coke++ | t/docs/opcodes.t

[15:31] <Geth> ¦ nqp: only create junction once

[15:31] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/4b95f4e604

[15:31] <[Coke]> that shaves a second off my runtimes.

[15:33] <lizmat> yup, not having to do the same work every time helps  :-)

[15:33] <[Coke]> :)

[15:34] <[Coke]> do we have any thoughts about being able to disable the diag output on failing tests in Raku via an env var?

[15:35] <[Coke]> (I don't need the line number of the failing test for the kind of tests I'm running, where it's 100 instances of the same test at the same line)

[15:40] <ugexe> you could just write the TAP output yourself

[15:41] <ugexe> although maybe it does make sense for a harness, not Test, to output that extra info

[15:47] <[Coke]> easy enough to make a PR for folks to point at.

[15:47] <[Coke]> (working on it.)

[15:48] <[Coke]> RAKU_TEST_DIAG_LINE_ON_FAIL=0 make test...

[16:07] <Geth> ¦ rakudo/coke/testdiag: b7e902c628 | Coke++ | lib/Test.rakumod

[16:07] <Geth> ¦ rakudo/coke/testdiag: Add RAKU_TEST_DIAG_LINE_ON_FAIL

[16:07] <Geth> ¦ rakudo/coke/testdiag: 

[16:07] <Geth> ¦ rakudo/coke/testdiag: Defaults to 1. If set to empty/0, disables the diag output in testing

[16:07] <Geth> ¦ rakudo/coke/testdiag: that adds file/line number information on failed tests.

[16:07] <Geth> ¦ rakudo/coke/testdiag: review: https://github.com/rakudo/rakudo/commit/b7e902c628

[16:08] *** sena_kun joined
[16:10] *** Altai-man left
[16:14] <Geth> ¦ rakudo: coke++ created pull request #3989: Add RAKU_TEST_DIAG_LINE_ON_FAIL

[16:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3989

[16:15] <[Coke]> ^^

[16:36] *** Kaiepi left
[16:37] *** sena_kun left
[17:50] <[Coke]> 10 more ops to go to get under 200

[17:50] <[Coke]> (for docs)

[18:04] <Geth> ¦ rakudo: 39c5159573 | (Elizabeth Mattijsen)++ | src/core.e/array_multislice.pm6

[18:04] <Geth> ¦ rakudo: Slight refactor of v6.e postcircumfix[;]

[18:04] <Geth> ¦ rakudo: 

[18:04] <Geth> ¦ rakudo: - better fast pathing of simple cases

[18:04] <Geth> ¦ rakudo: - simplification of recursive cases

[18:04] <Geth> ¦ rakudo: - deleting non-existing elements returns Nil

[18:04] <Geth> ¦ rakudo: - add support for :!exists

[18:04] <Geth> ¦ rakudo: - fix several decont issues

[18:04] <Geth> ¦ rakudo: 

[18:04] <Geth> ¦ rakudo: Instigated by seeing results of writing extensive tests.

[18:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/39c5159573

[18:04] <lizmat> afk for a few hours&

[18:29] *** patrickb joined
[19:26] *** Xliff joined
[20:00] *** camelCaser left
[20:03] *** camelCaser joined
[20:08] *** camelCaser left
[20:10] *** lichtkind joined
[20:22] *** camelCaser joined
[20:25] *** camelCaser left
[20:26] *** camelCaser joined
[20:31] *** MasterDuke joined
[20:45] *** camelCaser left
[20:47] *** camelCaser joined
[20:55] *** camelCaser left
[20:57] *** camelCaser joined
[21:07] *** ccamel joined
[21:07] *** camelCaser left
[21:59] *** timotimo left
[21:59] *** sivoais left
[21:59] *** sivoais joined
[21:59] *** timotimo joined
[22:16] *** Xliff left
[22:23] *** patrickb left
[23:17] *** Kaiepi joined
[23:32] *** Kaiepi left
