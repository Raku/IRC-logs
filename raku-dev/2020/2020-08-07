[00:20] *** leont left
[00:21] *** MasterDuke left
[01:14] *** Altai-man_ joined
[01:16] *** sena_kun left
[03:20] *** lucasb left
[04:14] *** sena_kun joined
[04:16] *** Altai-man_ left
[06:14] *** Altai-man_ joined
[06:16] *** sena_kun left
[07:49] *** leont joined
[07:58] *** oddp joined
[07:59] *** patrickb joined
[08:16] <Altai-man_> AlexDaniel, pong

[08:31] *** [Tux] left
[08:33] *** JJMerelo joined
[08:33] <JJMerelo> releasable6: status

[08:33] <releasable6> JJMerelo, Next release in ‚âà15 days and ‚âà10 hours. 1 blocker. Changelog for this release was not started yet

[08:33] <tellable6> 2020-08-06T17:06:13Z #raku <guifa> jjmerelo: I‚Äôll work on it as soon as I get done fighting with this stupid localtime/gmttime algorithm.  I‚Äôve got‚Ä¶ something‚Ä¶¬†off even though I‚Äôve sworn I‚Äôve translated the code exactly

[08:33] <releasable6> JJMerelo, Details: https://gist.github.com/09e1b3c6aab166279743d8b97f37fa67

[08:37] <JJMerelo> .tell p6steve you ready to upload your article, or you want me to upload it for you?

[08:37] <tellable6> JJMerelo, I'll pass your message to p6steve

[08:39] *** [Tux] joined
[09:00] *** JJMerelo left
[09:14] *** Altai-man joined
[09:16] *** Altai-man_ left
[09:33] *** JJMerelo joined
[09:35] <JJMerelo> Today's 20th anniversary post is out https://raku-advent.blog/2020/08/07/rfc-168-by-johan-vromans-built-in-functions-should-be-functions/, by lizmat

[09:35] <tellable6> 2020-08-07T09:04:26Z #raku <ab5tract> JJMerelo so the good news is that my last few days have been deeply steeped in rational numbers. just need to get it all down now :)

[09:35] <tellable6> hey JJMerelo, you have a message: https://gist.github.com/d027e060b8ec790144485aa2ea15cd84

[09:36] <JJMerelo> .tell ab5tract amazing. Good luck.

[09:36] <tellable6> JJMerelo, I'll pass your message to ab5tract

[09:39] <Altai-man> JJMerelo, hi! Around?

[09:40] <JJMerelo> Yes

[11:14] *** sena_kun joined
[11:16] *** Altai-man left
[11:33] *** JJMerelo left
[11:55] *** Voldenet left
[13:14] *** Altai-man joined
[13:16] *** sena_kun left
[13:30] *** lucasb joined
[14:03] <tbrowder> .ask ugexe happy with my roast pr #663?

[14:03] <tellable6> tbrowder, I'll pass your message to ugexe

[14:04] *** Voldenet joined
[14:04] *** Voldenet left
[14:04] *** Voldenet joined
[14:04] *** patrickb left
[14:04] <ugexe> yes, very good

[14:14] *** patrickb joined
[14:16] <patrickb> .tell vrurg Can you have another look at https://github.com/rakudo/rakudo/pull/3838 ? I have addressed your remarks, but also changed the SysConfig class to be stateful and have an object. I'd like to merge this soon-ish to not be in the situation again to merge something like this shortly before a release.

[14:16] <tellable6> patrickb, I'll pass your message to vrurg

[14:16] <patrickb> releasable6: status

[14:16] <releasable6> patrickb, Next release in ‚âà15 days and ‚âà4 hours. 2 blockers. Changelog for this release was not started yet

[14:16] <releasable6> patrickb, Details: https://gist.github.com/90a1dfa8b30be2fd45454b87f52bf28a

[14:17] *** patrickb left
[14:17] <vrurg> patrickb: Unfortunately, I'm not sure I will have time for this soon. We've got a disaster at work, lost whole data center.

[14:17] <tellable6> vrurg, I'll pass your message to patrickb

[15:14] *** sena_kun joined
[15:16] *** Altai-man left
[15:43] <Geth_> ¬¶ rakudo: 491e1defba | (Elizabeth Mattijsen)++ | src/core.c/Map.pm6

[15:43] <Geth_> ¬¶ rakudo: Remove (()) from Map.new.raku

[15:43] <Geth_> ¬¶ rakudo: 

[15:43] <Geth_> ¬¶ rakudo: There is no need for them, so just don't create them.

[15:43] <Geth_> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/491e1defba

[15:43] <Geth_> ¬¶ rakudo: 798614cb78 | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/core.c/Map.pm6

[15:43] <Geth_> ¬¶ rakudo: Merge pull request #3826 from rakudo/shorter-Map-raku

[15:43] <Geth_> ¬¶ rakudo: 

[15:43] <Geth_> ¬¶ rakudo: Remove (()) from Map.new.raku

[15:43] <Geth_> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/798614cb78

[15:44] <lizmat> finally  :-)

[15:44] <lizmat> I was wondering how long it would take for *anybody* to merge that

[16:18] *** JJMerelo joined
[16:43] <AlexDaniel> lizmat: in some places people just agree that at least one approving review is enough and the author can merge it at any time

[16:44] <AlexDaniel> because rakudo devs don't really use branches and PRs for everything there is just no policy for that

[16:45] <lizmat> clearly

[16:45] <lizmat> but I have been accused of committing to master willy nilly

[16:45] <lizmat> so I've stopped doing that

[16:47] <lizmat> I have also been the source of premature merges, so I won't do any merges either anymore

[16:50] <AlexDaniel> I think it's better for the author to merge when they feel it's ready

[16:50] <lizmat> then why the PR?

[16:51] <AlexDaniel> for reviews, CI, polishing, etc.

[16:51] <AlexDaniel> also better for release management

[16:51] <AlexDaniel> at least in the way we have it now

[16:52] <AlexDaniel> that said I wonder if those who have no commit bit can merge their own PRs‚Ä¶

[16:52] <AlexDaniel> probably not‚Ä¶

[16:53] <lizmat> "I think it's better for the author to merge when they feel it's ready"

[16:53] <lizmat> do you think I think it is not ready for merging when I make a PR that is not a WIP ?

[16:53] <AlexDaniel> yeah, because they know better if there are any other PRs that need to go in together, in which order, they know if it's fully ready or not, etc.

[16:55] <AlexDaniel> lizmat: ‚Äúdraft PR‚Äù feature doesn't exactly work that good

[16:55] <AlexDaniel> for example, say you made a PR, then realized that further changes are needed

[16:55] <AlexDaniel> as far as I know there's no way to turn it into a draft, only to close it

[16:56] <AlexDaniel> or are you talking about editing the title and adding [WIP] in there?

[16:57] <lizmat> I'm talking about the BS in the statement "I think it's better for the author to merge when they feel it's ready"

[17:01] *** JJMerelo left
[17:02] <AlexDaniel> it's a common workflow, it works

[17:02] <ugexe> its what we do on our team at $work

[17:03] <AlexDaniel> ugexe: just curious, how many reviews do you require?

[17:07] <ugexe> for our team we we require 1 reviewer for basic stuff. projects that get into PCI require 2. anything that touches security requires an additional security review. anything changing or using infrastructure in a new way usually requires an additional SRE approval

[17:08] <ugexe> note however that in a company there is a natural barrier to rubber stamping PRs too, since approving a lot of bad PRs will not look well during employee review

[17:08] <ugexe> there isn't really anything stopping me from approving stuff i dont know about in rakudo

[17:09] <ugexe> we just have to hope people who dont know about what is going on in a PR will leave comments like +1 instead of approving

[17:09] <AlexDaniel> what's PCI?

[17:09] <ugexe> payment card industry compliance

[17:12] <AlexDaniel> yeah, that workflow sounds very familiar, though it seems to be a bit more advanced because you seem to have different ‚Äúlevels‚Äù

[17:12] <AlexDaniel> ugexe: question! Is there anything preventing people from rubber stamping PRs from experienced devs (those who were in the company for years)?

[17:19] <ugexe> that generally results in one of three things: 1) other experienced devs chime in -- this is easier when the PR submitter is interested in fielding responses and not just getting the approval 2) a dev with sufficient political clout will ensure they get their way (like someone from another team who would not have seen these changes, who then makes moves that results in that team needing to redo their work).

[17:19] <ugexe> Luckily this seems to work for the better at $work even though it sounds a bit bad. and finally 3) people are here to get paid, not build a 100 year product, and thus people get over bad, unfutureproof decisions sooner than later

[17:20] <raku-bridge> <Vendethiel> AlexDaniel: you can turn a PR back into a draft now

[17:21] <AlexDaniel> how?

[17:22] <AlexDaniel> Ah, I see it now!

[17:22] <AlexDaniel> ‚ÄúStill in progress? Convert to draft‚Äù

[17:22] <AlexDaniel> thanks

[17:33] <[Tux]> Rakudo version 2020.07-56-g798614cb7 - MoarVM version 2020.07-14-g656142e21

[17:33] <[Tux]> csv-test-xs-20      0.394 -  0.395

[17:33] <[Tux]> csv-ip5xs           0.811 -  0.834

[17:33] <[Tux]> test-t --race       0.814 -  0.825

[17:33] <[Tux]> test-t              1.861 -  1.898

[17:33] <[Tux]> test                7.528 -  7.932

[17:33] <[Tux]> csv-ip5xs-20        7.806 -  7.966

[17:33] <[Tux]> test-t-20 --race    8.735 -  9.127

[17:33] <[Tux]> csv-parser         25.446 - 26.911

[17:33] <[Tux]> test-t-20          31.150 - 32.207

[17:40] <Geth_> ¬¶ roast: d234faf21d | (Tom Browder)++ (committed using GitHub Web editor) | 5 files

[17:40] <Geth_> ¬¶ roast: Improve tests by reducing EVAL blocks, refactoring & merging test files (#663)

[17:40] <Geth_> ¬¶ roast: 

[17:40] <Geth_> ¬¶ roast: * Improve tests by minimizing EVAL blocks and refactoring and merging test files

[17:40] <Geth_> ¬¶ roast: 

[17:40] <Geth_> ¬¶ roast: This commit:

[17:40] <Geth_> ¬¶ roast: 

[17:40] <linkable6> ROAST#663 [closed]: https://github.com/Raku/roast/pull/663 Improve tests by reducing EVAL blocks, refactoring & merging test files

[17:40] <Geth_> ¬¶ roast: + Merges contents of file '11-non-breaking-space.t' into file '12-non-breaking-space.t'

[17:40] <Geth_> ¬¶ roast: <‚Ä¶commit message has 24 more lines‚Ä¶>

[17:40] <Geth_> ¬¶ roast: review: https://github.com/Raku/roast/commit/d234faf21d

[18:14] *** Altai-man joined
[18:17] *** sena_kun left
[18:46] *** MasterDuke joined
[19:12] *** finsternis joined
[19:49] *** lichtkind joined
[20:14] *** sena_kun joined
[20:17] *** Altai-man left
[20:44] *** Xliff joined
[21:11] *** oddp left
[21:13] *** oddp joined
[22:14] *** Altai-man joined
[22:16] *** sena_kun left
[22:24] *** lichtkind left
[23:06] *** leont left
