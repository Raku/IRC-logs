[01:55] <Geth> ¦ problem-solving: autarch assigned to rba Issue Need a "Raku" download button/link for US Patent on Raku https://github.com/Raku/problem-solving/issues/193

[04:25] *** HarmtH left
[04:27] *** guifa2 joined
[04:31] <guifa2> .tell lizmat I finally figured out what was going on with the slang.  Or at least, a better idea of the problem.  The problem wasn't in the grammar or the actions, but rather the call to HLL::Compiler.lineof().  Commented it out and violà I could declare methods with other syms

[04:31] <tellable6> guifa2, I'll pass your message to lizmat

[06:27] *** jjmerelo joined
[08:20] *** sena_kun joined
[08:21] <Geth> ¦ problem-solving: AlexDaniel unassigned from rba Issue Need a "Raku" download button/link for US Trademark on Raku https://github.com/Raku/problem-solving/issues/193

[08:21] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue Need a "Raku" download button/link for US Trademark on Raku https://github.com/Raku/problem-solving/issues/193

[08:34] <sena_kun> .seen patrickb

[08:34] <tellable6> sena_kun, I saw patrickb 2020-05-08T19:00:28Z in #raku-dev: <patrickb> vrurg: OK. Then it's already fine. Thanks!

[08:37] <sena_kun> AlexDaniel, ping?

[08:37] <AlexDaniel> pong

[08:38] <sena_kun> AlexDaniel, hi. In your opinion, is https://github.com/rakudo/rakudo/issues/3669 worth a point?

[08:39] <AlexDaniel> sena_kun: how many relocatable releases did we have? :)

[08:39] <jjmerelo> sena_kun (my own unrequested opinion). Yes, so that a rakudo star distro can be made out of it (for Windows)

[08:40] <AlexDaniel> latest star release wos 2020.01

[08:40] <sena_kun> Hmm, is it time for rakudo star already...

[08:40] <AlexDaniel> was*

[08:40] <AlexDaniel> so yeah, I'm also wondering if anybody is going to make star out of 2020.05

[08:41] * lizmat hopes tyil will find the time

[08:41] <tellable6> hey lizmat, you have a message: https://gist.github.com/92ef15662522794575641bc098b19909

[08:42] <sena_kun> By the way, there wasn't an email announcement as I waited for builds, d'oh.

[08:42] <tyil> I didn't even know there was a 2020.05 for rakudo

[08:42] <AlexDaniel> sena_kun: I think yeah, probably, if you have the time

[08:42] <sena_kun> I seem like the worst person for this position.

[08:43] <AlexDaniel> sena_kun: quite the opposite actually

[08:43] <jjmerelo> sena_kun you're doing fine :-)  Kudos.

[08:43] <tyil> I was originally waiting for a rakudo 2020.04 to make a star bundle out of that

[08:43] <AlexDaniel> humans generally suck for work like this, which is why we should automate most of it. The Sakefile is meant to send emails but I never managed to find time to implement it

[08:44] <AlexDaniel> then I also made undersightable6 that can do more checks

[08:44] <AlexDaniel> which later bitrotted and doesn't even start now

[08:45] <AlexDaniel> so in the absence of full automation we just need someone who is responsible, and I can't think of a better person than you, sena_kun

[08:45] <sena_kun> Ok, let's do some things then. 1)I'll post (sadly delayed) email announcement; 2)I'll intimidate someone here to add us tests for relocatability making it a next release blocker; 3)Do a rakudo point.

[08:46] <jjmerelo> (y) 

[08:46] <AlexDaniel> number 2 is actually very important, a point release by itself doesn't really fix the underlying issue (which is us not being able to detect relocatability regressions)

[08:49] <AlexDaniel> lizmat: can you perhaps leave a comment on PS#193 saying what you think?

[08:49] <linkable6> PS#193 [open]: https://github.com/Raku/problem-solving/issues/193 [language] Need a "Raku" download button/link for US Trademark on Raku

[08:50] <AlexDaniel> lizmat: am I just out of the loop or something?

[08:50] <tyil> AlexDaniel: is there going to be a point release soon or can I build a rakudo-star from rakudo 2020.05?

[08:50] <AlexDaniel> sena_kun: ↑

[08:50] <sena_kun> tyil, there will be a point release today which fixes Windows.

[08:51] <tyil> alright

[08:51] <tyil> hit me when it's done, I'll start work on star

[08:51] <sena_kun> tyil, in a couple of hours depending on how trash my morning will be today. :)

[08:51] <sena_kun> tyil, will do, thanks!

[08:51] <tyil> Im here all day :)

[08:52] <tyil> so no need to hurry on my part

[08:52] <nine> sena_kun: will the point release change anything for Linux?

[08:52] <sena_kun> nine, no.

[08:52] <sena_kun> nine, or, ahem... I want to cherry-pick https://github.com/rakudo/rakudo/commit/46648b9b321c9c2c8d11a75a380a86aa1afcd636

[08:53] <AlexDaniel> tyil: what's the difference between https://github.com/Raku/rakudo-star and https://github.com/rakudo/star

[08:54] <tyil> AlexDaniel: rakudo/star is no longer maintained as far as I'm aware https://github.com/rakudo/rakudo/issues/3559#issuecomment-617086336

[08:55] <[Tux]> Rakudo version 2020.05-55-g7a902b5e4 - MoarVM version 2020.05-10-g5fe4a8114

[08:55] <[Tux]> csv-test-xs-20      0.383 -  0.390

[08:55] <[Tux]> csv-ip5xs           0.830 -  0.850

[08:55] <[Tux]> test-t --race       0.977 -  0.982

[08:55] <[Tux]> test-t              1.882 -  1.966

[08:55] <[Tux]> test                7.281 -  7.481

[08:55] <[Tux]> csv-ip5xs-20        8.157 -  8.191

[08:55] <[Tux]> test-t-20 --race    9.113 -  9.982

[08:55] <[Tux]> csv-parser         23.557 - 24.160

[08:55] <[Tux]> test-t-20          31.135 - 31.952

[08:56] <nine> sena_kun: I'd guess this affects all platforms. But it's irrelevant for me as distro packages don't build relocatable anyway

[08:57] <sena_kun> Oh, it makes sense, that's why we didn't spot in with El_Che.

[08:59] *** jjmerelo left
[09:03] <AlexDaniel> tyil: hmmmm… okay, okay. And now what?

[09:03] <tyil> who knows

[09:03] <tyil> not sure what you want to hear

[09:03] <tyil> you want me to stop working on rstar because Im not pushing to the correct github repo?

[09:04] <AlexDaniel> tyil: we can merge two repos so that the latest state is the one you have

[09:04] <AlexDaniel> tyil: this will preserve tags and everything, with the only downside of having two git roots

[09:04] <tyil> mine is a complete rewrite, from scratch

[09:05] <AlexDaniel> I understand

[09:05] <AlexDaniel> but it's still rakudo star isn't it :)

[09:05] <tyil> I could've called it anything else, I only kept the name because that's what people expect it to be called

[09:06] <AlexDaniel> so, any reason not to do the git trick?

[09:07] <tyil> I don't see any added value

[09:08] <AlexDaniel> I'm not okay with two repos. It's confusing

[09:08] <tyil> feel free to purge the repo from the Raku namespace if it's too confusing

[09:09] <tyil> I'm just working on rstar because I like doing so

[09:09] <AlexDaniel> if I merge them for you, will you be use the main repo?

[09:09] <AlexDaniel> using*

[09:09] <tyil> the "main repo" is in ~/.local/git/rakudo-star for me

[09:10] <tyil> I'm not sure what you understand as "the main repo"

[09:10] <tyil> as said in the github issue I linked, I'm only putting it up on GitHub for ease of *other* people looking for it

[09:10] <AlexDaniel> but you do keep it in sync, yes?

[09:11] <tyil> not rakudo/star, I don't think I have push access there to begin with

[09:11] <AlexDaniel> well I can resolve that

[09:11] <tyil> I keep my version in sync with the mirrors I have access to

[09:11] <AlexDaniel> okay. I'll do the thing and will ping you later

[09:12] <tyil> I don't think rakudo/star is the best location for it anymore anyway, since it's not solely a Rakudo project

[09:12] <AlexDaniel> that I agree with

[09:12] <tyil> I'm not even part of the rakudo team, nor is hankache as far as I know

[09:12] <AlexDaniel> I'll see if there's anything I can do about it

[09:13] <AlexDaniel> I mean, push access isn't a problem

[09:17] *** jjmerelo joined
[09:58] <nine> tbrowder: https://github.com/Raku/roast/issues/640

[10:06] <Geth> ¦ roast: c2666ff0c3 | (Stefan Seifert)++ | S03-metaops/misc.t

[10:06] <Geth> ¦ roast: Fix S03-metaops/misc.t depending on Rakudo

[10:06] <Geth> ¦ roast: 

[10:06] <Geth> ¦ roast: The rakudo specific Test::Helpers module is not actually needed for this test.

[10:06] <Geth> ¦ roast: Remove it to fix the test failing when run outside of rakudo's source

[10:06] <Geth> ¦ roast: directory.

[10:06] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/c2666ff0c3

[10:08] <Geth> ¦ roast: niner assigned to dwarring Issue Roast depends on Rakudo when it shouldn't https://github.com/Raku/roast/issues/640

[10:08] <Geth> ¦ roast: niner assigned to tbrowder Issue Roast depends on Rakudo when it shouldn't https://github.com/Raku/roast/issues/640

[10:09] <tbrowder>  erg. i'll take a look, but before i do, can we not put that helper in roast?

[10:11] <nine> Looks like it's only used by that one spec test file

[10:14] <tbrowder> ok

[10:16] *** Altai-man_ joined
[10:18] *** sena_kun left
[10:27] <tbrowder> since the existing test is for a rakudo env var triggering a grammar action, where should the test really be? probably with rakudo for now maybe? i want to make it triggered through a mod to the run options but i haven't solved that yet.

[10:30] <nine> tbrowder: yes, that test doesn't belong in roast at all

[10:31] <nine> Even if we ignore the environment variable, the test poses a question: are compiler arguments part of the language specification?

[10:31] <tbrowder> but even with the run option that's still rakudo isn't it? yes, that's my question, too.

[10:33] <tbrowder> imho you could make a case for either. most c compilers i know have similare run options. why could they not be standardized?

[10:34] <tbrowder> *similar

[10:34] <nine> It would require a language implementation to provide a command line compiler in the first place. I'm not sure there's consensus for that for our 100 year language

[10:35] <tbrowder> this metaphysical question is way above my pay grade!

[10:37] <tbrowder> at this point isn't  it "once in roast, forever in roast?"

[10:39] <nine> Only if it's part of an actual language release. And even there' there's -errata branches for when we were just wrong when writing the test

[10:39] <Altai-man_> tbrowder, as long as it is not frozen in 6.*-errata branch tests can be adjusted.

[10:39] <AlexDaniel> tyil: ok, can you take a look at this? https://github.com/rakudo/star

[10:39] <AlexDaniel> tyil: if it looks fine I can transfer it to rakudo-star

[10:40] <AlexDaniel> tyil: I'll have to delete it first, but it shouldn't affect you in any way. On your side a simple `git pull` will make it in sync

[10:41] <tbrowder> is the grammar raku or rakudo?

[10:43] <Geth> ¦ roast: JJ++ created pull request #641: Fix external dependency

[10:43] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/641

[10:46] <tyil> ugh, now it has all the submodules again

[10:46] <tbrowder> raku i think, but it gets modified on the rakudo side during compilation doesn't it?

[10:47] <AlexDaniel> tyil: sorry, where are you seeing this?

[10:48] <jjmerelo> tbrowder I have just moved the routine, and done a PR for it.

[10:48] <tyil> after I pulled in rakudo/star, when I try to pull, it's warning me about all the old submodules that I never used in my version

[10:48] <tbrowder> so what should i do? if left to me i will try to move the helper into roast.

[10:49] <jjmerelo> tbrowder check out my PR

[10:49] <AlexDaniel> tyil: how does the warning look like?

[10:49] <tyil> warning: 5a9358143a4a4c209e0cdc13e4b3ed555696b5ee:.gitmodules, multiple configurations found for 'submodule.modules/file-find.url'. Skipping second one!

[10:49] <tbrowder> thnx jj (i'm working on reply to yr kind email)

[10:50] <jjmerelo> (y) 

[10:51] <Altai-man_> >Users of other platforms or those who don't need relocatability should continue to consider Rakudo 2020.05 release to be latest stable.

[10:51] <Altai-man_> Sounds sane?

[10:51] <Altai-man_> *the latest stable

[10:52] <AlexDaniel> tyil: interesting. I tried pulling the merged repo from your repo and didn't see any warning. Tried it again and still don't see it, hmmm. I think after the pull you should be fine given that there are no submodules in master?

[10:52] <AlexDaniel> tyil: well, I mean not anymore on HEAD

[10:52] <tyil> I don't know, but I'm not going to spend my afternoon figuring out why `git push all` is spewing out 1500 warnings

[10:53] <Geth> ¦ roast: 51f90e3e88 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | S26-documentation/block-leading-user-format.t

[10:53] <Geth> ¦ roast: Fix external dependency (#641)

[10:53] <Geth> ¦ roast: 

[10:53] <Geth> ¦ roast: By putting it in here. Closes #640.

[10:53] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/51f90e3e88

[10:53] <linkable6> ROAST#641 [closed]: https://github.com/Raku/roast/pull/641 Fix external dependency

[10:53] <linkable6> ROAST#640 [closed]: https://github.com/Raku/roast/issues/640 Roast depends on Rakudo when it shouldn't

[10:53] <jjmerelo> Er... Maybe I shouldn't have said close

[10:53] <jjmerelo> Let me check

[10:56] <AlexDaniel> tyil: so Raku/rakudo-star just lost a commit, right?

[10:56] <lizmat> tyil: I think the new module bot is AWOL

[10:56] <lizmat> tyil I just added https://modules.raku.org/dist/Rake

[10:57] <tyil> lizmat: I kicked it

[10:57] <AlexDaniel> ah, even two

[10:57] <tyil> should be back soon, I'll double-check the processes in charge of checking for updates

[10:57] <AlexDaniel> 7159e581905 and 9600d177c

[10:57] <linkable6> (2020-05-10) https://github.com/rakudo/star/commit/7159e58190 Add GitHub mirror to README

[10:57] <linkable6> (2020-04-19) https://github.com/rakudo/star/commit/9600d177cd Update list of repository mirrors in README

[10:58] <tyil> ye, I reset --hard back to my local version and pushed that

[10:58] <tyil> I'm not going to look at over a 1000 lines of warnings every time I push

[10:59] <AlexDaniel> I have my limits, you know

[10:59] <tyil> so do I

[11:00] <tyil> the only reason I'm getting your complaints is because I made a repo for it in the new namespace, something I talked about about 3 weeks ago

[11:00] <tyil> if I would not try to include the people on github, I wouldn't have had any complaints

[11:01] <AlexDaniel> or vice versa, if you just pushed to github it would've been easier

[11:01] <tyil> not really

[11:01] <tyil> because I dont have push access there to begin with

[11:01] <AlexDaniel> I've tried multiple git remotes thing in the past, it doesn't really work

[11:01] <tyil> nor do I like github, because its a terrible centralized "service"

[11:01] <AlexDaniel> well, I mean, it does, but you need to actively maintain it

[11:01] <tyil> could also just not have a rakudo star at all, of course

[11:02] <AlexDaniel> and what's the problem with access? It's a matter of simple “hey can I have access to …” message here

[11:02] <AlexDaniel> I never said no to anyone

[11:02] <tyil> because I'd have to sign some DCO or whatever, and again, I dislike github because it's an atrocious platform

[11:03] <AlexDaniel> so when you see the warnings, do you have a .gitmodules file?

[11:04] <tyil> idk

[11:04] <AlexDaniel> can you please check?

[11:04] <tyil> I reset --hard the stuff back to just my own commits

[11:05] <tyil> doesn't look like it

[11:05] <Geth> ¦ roast: JJ++ created pull request #642: Fixes integration test

[11:05] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/642

[11:06] <Geth> ¦ rakudo/2020.05.1-release: fe14bcb7a9 | (Patrick Böker)++ (committed by Altai-man) | tools/lib/NQP/Config/Rakudo.pm

[11:06] <Geth> ¦ rakudo/2020.05.1-release: Fix relocatable builds on the moar backend

[11:06] <Geth> ¦ rakudo/2020.05.1-release: 

[11:06] <Geth> ¦ rakudo/2020.05.1-release: For relocatability to work the config variable `static_rakudo_home`

[11:06] <Geth> ¦ rakudo/2020.05.1-release: needs to be empty. It defaulted to the build time rakudo home path

[11:06] <Geth> ¦ rakudo/2020.05.1-release: globally. Later on a MoarVM specific config variable with the same name

[11:06] <Geth> ¦ rakudo/2020.05.1-release: was set to empty assuming it would overwrite the global variable.

[11:06] <Geth> ¦ rakudo/2020.05.1-release: But that's not the case. In backend specific templates the empty

[11:06] <Geth> ¦ rakudo/2020.05.1-release: <…commit message has 10 more lines…>

[11:06] <Geth> ¦ rakudo/2020.05.1-release: review: https://github.com/rakudo/rakudo/commit/fe14bcb7a9

[11:06] <Geth> ¦ rakudo/2020.05.1-release: 0d238d89e8 | Altai-man++ | docs/release_guide.pod

[11:07] <Geth> ¦ rakudo/2020.05.1-release: Add point and fix next release date

[11:07] <Geth> ¦ rakudo/2020.05.1-release: review: https://github.com/rakudo/rakudo/commit/0d238d89e8

[11:07] <Geth> ¦ rakudo/2020.05.1-release: 40fdfee1de | Altai-man++ | 2 files

[11:07] <Geth> ¦ rakudo/2020.05.1-release: Changelog + release announcement

[11:07] <Geth> ¦ rakudo/2020.05.1-release: review: https://github.com/rakudo/rakudo/commit/40fdfee1de

[11:07] <AlexDaniel> tyil: hmm, maybe you can just ignore the warnings? You wouldn't see them later because there are no submodules in master anymore

[11:07] <tyil> ...

[11:08] <AlexDaniel> I'm curiouus why you saw them anyway, because I definitely can't reproduce it

[11:08] <tyil> I should bend over backwards to please you, but not the other way around

[11:08] <tyil> got it

[11:08] <tyil> reverting back to just my commits

[11:08] <tyil> feel free to just remove the raku/rakudo-star repo in that case

[11:08] <AlexDaniel> lizmat: I'll let you take it from here

[11:08] <tyil> so we can stop this

[11:16] <tyil> lizmat: bot logs indicate it should've announced your Rake module

[11:18] <lizmat> 0.02 ?  or 0.01

[11:19] <Geth> ¦ rakudo: Altai-man++ created pull request #3680: 2020.05.1 release

[11:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3680

[11:39] <Altai-man_> AlexDaniel, if you're around... It is true I can just prepare rakudo archive for the point branch and no need to make a nqp point if only rakudo was changed, right?

[11:43] <AlexDaniel> Altai-man_: interesting question

[11:44] <AlexDaniel> Altai-man_: you don't need a release for NQP, that's right

[11:44] <AlexDaniel> Altai-man_: ah, I see

[11:45] <AlexDaniel> Altai-man_: there's `all-rakudo-only` target in the sakefile

[11:46] <Altai-man_> AlexDaniel, yes, but it has `sake nqp` target as well as `human-2` which includes `nqp-sign rakudo-bump-nqp rakudo-bump` which seems redundant to me.

[11:47] <Altai-man_> oops, rakudo-bump is nice, of course.

[11:47] <AlexDaniel> Altai-man_: yeah but https://github.com/rakudo/rakudo/blob/7a902b5e458e00333f20a8d8e4f1991524d3b7e0/tools/releasable/Sakefile#L410

[11:47] <Altai-man_> Right.

[11:47] <AlexDaniel> so yes it will run those steps and will create a tar for NQP :D

[11:48] <AlexDaniel> but you can just discard it

[11:48] * Altai-man_ will just go for rakudo tar

[11:48] <Altai-man_> Ok, thanks.

[11:49] <AlexDaniel> yeah, and normally I'd double check the generated commits and stuff to make sure it did what I asked it to do

[11:49] <AlexDaniel> but I definitely used this target before, so it should work :)

[11:49] <AlexDaniel> Altai-man_: btw later people will ask why there's rakudo .1 but no nqp or moar point release

[11:49] <AlexDaniel> which is fine :)

[11:52] <Altai-man_> AlexDaniel, better than questions like "So you had a point, then delayed a release and now you have another point, what's your CV again so we'd blacklist it in our company?". :P

[11:53] <AlexDaniel> Altai-man_: do you know about 2017.04.3?

[11:53] <Altai-man_> yesh

[11:54] <AlexDaniel> the one after which we said “ok it is still broken but we're not doing more point releases this month”

[11:54] <AlexDaniel> :)

[11:54] <AlexDaniel> anyway

[11:54] * AlexDaniel &

[11:54] <Altai-man_> o7

[11:54] <Altai-man_> Thanks for your help!

[12:07] *** MasterDuke left
[12:17] *** sena_kun joined
[12:18] *** jjmerelo left
[12:18] *** Altai-man_ left
[12:33] *** MasterDuke joined
[12:45] <Geth> ¦ rakudo/2020.05.1-release: 002acb1be2 | Altai-man++ | VERSION

[12:45] <Geth> ¦ rakudo/2020.05.1-release: [release] Bump VERSION to 2020.05.1

[12:45] <Geth> ¦ rakudo/2020.05.1-release: review: https://github.com/rakudo/rakudo/commit/002acb1be2

[12:52] <Geth> ¦ rakudo/master: 5 commits pushed by (Patrick Böker)++, Altai-man++

[12:52] <Geth> ¦ rakudo/master: fe14bcb7a9 | Fix relocatable builds on the moar backend

[12:52] <Geth> ¦ rakudo/master: 0d238d89e8 | Add point and fix next release date

[12:52] <Geth> ¦ rakudo/master: 40fdfee1de | Changelog + release announcement

[12:52] <Geth> ¦ rakudo/master: 002acb1be2 | [release] Bump VERSION to 2020.05.1

[12:52] <Geth> ¦ rakudo/master: 25f8395cf5 | Merge pull request #3680 from rakudo/2020.05.1-release

[12:52] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/7a902b5e458e...25f8395cf59e

[12:53] <sena_kun> tyil, 2020.05.1 release tarballs are released. Thank you very much for working on star so far!

[13:00] <tyil> sena_kun: ack, I'll start on the 2020.05.1 star bundle

[13:00] <sena_kun> tyil++

[13:07] <tyil> sena_kun: https://dist.tyil.nl/raku/rakudo-star/rakudo-star-2020.05-rc1.tar.gz

[13:08] <tyil> I'm going to install it on all my machine and wait for gitlab-ci's test results, if those are all acceptable I'll announce it to perl6-users for testing for a week

[13:08] <tyil> if no issues pop up, I'll drop the -rc1

[13:08] <tyil> and announce it as a proper release

[13:09] <tyil> I'll send an email to hankache too for the windows build

[13:22] <sena_kun> tyil, thanks! Is there anything I should help with from now on?

[13:22] <tyil> download, install and see if anything breaks in your standard workflows, or module tests

[13:53] <timotimo> oh hey tyil, can the irc/discord bridge be kicked again? i think my access isn't working right at the moment

[13:53] <tyil> timotimo: sure

[13:54] *** discord6 joined
[13:54] *** discord6 left
[13:54] *** discord6 joined
[14:05] <El_Che> dot releae out? time to release pkgs :)

[14:10] <sena_kun> El_Che, not necessary for non-windows.

[14:11] <sena_kun> And given Linux packages are not very helpful on Windows... :)

[14:14] <El_Che> sena_kun: relocatable is also broken on linux

[14:14] <sena_kun> El_Che, what, what?

[14:14] <sena_kun> fuck

[14:14] <El_Che> I wrote it above

[14:14] <El_Che> let me look it up

[14:15] <El_Che> ttps://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-05-09#l98

[14:15] <El_Che> https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-05-09#l98

[14:15] <El_Che> I looked up the Windows issue, did the same test en relocable linux binaries

[14:16] *** Altai-man_ joined
[14:16] <El_Che> I could test it because besides native pkgs, rakudo-pkg also has compiled tar.gzs for amd64 and i386

[14:18] *** sena_kun left
[14:18] <El_Che> Altai-man_: about releases. My 2c that is easier to have one version marked as the latest (the latest dot release) instead of a matrix per platform OS. Builds are automated anyways

[14:19] <Altai-man_> El_Che, sorry, what are you referrying to?

[14:20] <Altai-man_> El_Che, you mean on the website or?

[14:21] <El_Che> Altai-man_: https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-05-10#l141

[14:22] <Altai-man_> I think the point of this line in announcement was to not bother users who don't have a breakage with "Huh, do I need to update again?". If we didn't have a general breakage, I mean.

[14:23] <El_Che> ok

[14:53] <El_Che> I am now building relocatable on Linux to see if the problem is fixed there as well

[14:53] <El_Che> it should be done soon

[15:00] <El_Che> done. The problem is fixed for relocatable linux as well.

[15:00] <El_Che> .tell patrickb: The problem is fixed for relocatable linux as well. patrickb++

[15:00] <tellable6> El_Che, I'll pass your message to patrickb

[15:39] *** jjmerelo joined
[15:45] *** jjmerelo left
[15:46] *** jjmerelo joined
[15:52] *** AlexDaniel left
[16:02] *** lichtkind joined
[16:16] *** sena_kun joined
[16:18] *** Altai-man_ left
[17:11] <timotimo> lizmat: do you think native array's reverse function should return a Seq with intposref so that assigning into it changes the original like it happens for regular arrays? i think so. there'll be a not so great performance hit of course :<

[17:15] <lizmat> timotimo: that's the semantics that we have for non-native arrays as well

[17:15] <lizmat> m: my @a = ^10; my int $b = 42; $_ = ++$b for @a.reverse; dd @a

[17:15] <camelia> rakudo-moar 25f8395cf: OUTPUT: «Array @a = [52, 51, 50, 49, 48, 47, 46, 45, 44, 43]␤»

[17:16] <timotimo> right, that's why we should make it so

[17:17] <timotimo> will just be much more expensive than just cloning the int_array or whatever and pushing values directly

[17:17] <lizmat> well... making it return containers makes for different versions between List and Array

[17:18] <timotimo> i ran into it while implementing .reverse for the hyper codegen optimization

[17:18] <lizmat> so personally, I wouldn't mind if .reverse (or .rotate for that matter) would decont

[17:18] <timotimo> we don't have native lists, so that shouldn't be an issue?

[17:19] <timotimo> oh, you mean they should all behave like list does

[17:20] <lizmat> well, yes, but that would break some spectests

[17:23] *** El_Che left
[17:50] <lizmat> do we have a way to change an `nqp::list` to an IterationBuffer ?

[17:50] <lizmat> they are both BOOTArrays afaik

[17:51] <lizmat> and both repr("VMArray")

[18:04] *** jjmerelo left
[18:16] *** Altai-man_ joined
[18:18] *** sena_kun left
[18:21] <timotimo> lizmat: maybe a nqp::rebless can do it? but i don't know if that works for any repr besides p6opaque

[18:21] <timotimo> and BOOTArray is at the same "level" as IterationBuffer i believe, i.e. both are types

[18:22] *** discord6 left
[18:22] <lizmat> m: use nqp; dd nqp::rebless(nqp::list,IterationBuffer)   # alas

[18:22] <camelia> rakudo-moar 25f8395cf: OUTPUT: «This REPR cannot change type␤  in block <unit> at <tmp> line 1␤␤»

[18:22] *** raku-bridge joined
[18:22] *** raku-bridge left
[18:22] *** raku-bridge joined
[18:31] <timotimo> it would be incredible if we could rebless from an int64 list to an int8 list and back

[18:35] <Altai-man_>  

[18:37] <timotimo> so should i make a copy before doing the rest of the calculation

[18:46] <timotimo> for now i just removed the support for reverse

[18:51] <timotimo> no i'm not so certain what i should do next

[19:25] <MasterDuke> nativecast it?

[19:36] <lizmat> hmmm... looks like Geth is awol again

[19:37] <lizmat> tyil ^^

[20:17] *** sena_kun joined
[20:18] *** Altai-man_ left
[20:46] <Geth> ¦ rakudo: ef0c457bab | (Elizabeth Mattijsen)++ | 10 files

[20:46] <Geth> ¦ rakudo: Remove return constraint from identity methods

[20:46] <Geth> ¦ rakudo: 

[20:46] <Geth> ¦ rakudo: These would be the methods that always return "self".  By removing

[20:46] <Geth> ¦ rakudo: this constraint, these methods became about 1.5x as fast.  Now, they

[20:46] <Geth> ¦ rakudo: didn't do much to begin with, so in absolute numbers this probably

[20:46] <Geth> ¦ rakudo: won't matter much.  But in some cases, such as Str.gist, this may

[20:46] <Geth> ¦ rakudo: actually be noticeable in some applications that do a lot of "say"

[20:46] <timotimo> you can't nativecast a VMArray

[20:46] <Geth> ¦ rakudo: on strings.

[20:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ef0c457bab

[20:46] <Geth> ¦ rakudo: 88d98225a4 | (Elizabeth Mattijsen)++ | 5 files

[20:46] <Geth> ¦ rakudo: Normalizing IO::Handle.say/put/print/note, part 2

[20:46] <Geth> ¦ rakudo: 

[20:46] <Geth> ¦ rakudo: The &say sub now performs all of the .gist + newline logic and then

[20:46] <Geth> ¦ rakudo: dispatches to .print.  The advantage of this is that we do not need

[20:46] <Geth> ¦ rakudo: any additional logic / checks for modules that pretend to be $*OUT.

[20:46] <Geth> ¦ rakudo: 

[20:46] <Geth> ¦ rakudo: This also removes the IO::Handle.say(Str:D) candidate: even though a

[20:46] <Geth> ¦ rakudo: <…commit message has 12 more lines…>

[20:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/88d98225a4

[21:03] <Geth> ¦ rakudo: 627b39b849 | (Elizabeth Mattijsen)++ | src/core.c/IO/Handle.pm6

[21:03] <Geth> ¦ rakudo: Oops, forgot to remove a proto

[21:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/627b39b849

[21:16] <Geth> ¦ rakudo: 438c1d2fa6 | (Elizabeth Mattijsen)++ | 4 files

[21:16] <Geth> ¦ rakudo: Normalizing IO::Handle.say/put/print/note, part 3

[21:16] <Geth> ¦ rakudo: 

[21:16] <Geth> ¦ rakudo: Basically rince / repeat for .put, like in 88d98225a4

[21:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/438c1d2fa6

[21:37] <Geth> ¦ rakudo: 483cac3ab3 | (Elizabeth Mattijsen)++ | 2 files

[21:37] <Geth> ¦ rakudo: Normalizing IO::Handle.say/put/print/note, part 4

[21:37] <Geth> ¦ rakudo: 

[21:37] <Geth> ¦ rakudo: Basically rince / repeat for .note, like in 88d98225a4, except that

[21:37] <Geth> ¦ rakudo: no changes were needed for IO::Handle, as note is just say, but

[21:37] <Geth> ¦ rakudo: writing to $*ERR instead of $*OUT.

[21:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/483cac3ab3

[22:01] <Geth> ¦ rakudo: 2b38666f98 | (Elizabeth Mattijsen)++ | 4 files

[22:01] <Geth> ¦ rakudo: Normalizing IO::Handle.say/put/print/note, part 5

[22:01] <Geth> ¦ rakudo: 

[22:01] <Geth> ¦ rakudo: Basically rince / repeat for .print, like in 88d98225a4

[22:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2b38666f98

[22:06] <lizmat> and that concludes my hacking for today

[22:16] *** Altai-man_ joined
[22:18] *** sena_kun left
[22:49] <guifa2> lizmat ++

[22:49] <guifa2> timotimo : re int64 to int8 um, yes.  I'd love that.  

[22:50] <guifa2> (i'm assuming you mean int64.elems = 8 * int8.elems type coercion)

[22:54] *** Kaiepi joined
[22:56] *** lichtkind left
[23:01] *** Altai-man_ left
[23:58] *** raku-bridge1 joined
