[00:46] *** leont left
[01:23] *** ggoebel joined
[01:25] *** ggoebel_ joined
[01:27] *** ggoebel left
[01:37] *** squashable6 left
[01:38] *** squashable6 joined
[02:23] *** AlexDani` joined
[02:27] *** AlexDaniel left
[02:44] *** AlexDani` is now known as AlexDaniel

[02:44] *** AlexDaniel left
[02:44] *** AlexDaniel joined
[03:56] *** Kaiepi left
[03:56] *** Kaiepi joined
[04:29] *** Kaiepi left
[04:29] *** Kaiepi joined
[04:48] *** Kaiepi left
[04:48] *** Kaiepi joined
[05:13] *** Kaeipi joined
[05:14] *** Kaiepi left
[05:27] *** squashable6 left
[05:30] *** squashable6 joined
[06:36] *** jmerelo joined
[06:36] <jmerelo> releasable6:status

[06:36] <tellable6> 2020-09-24T13:30:59Z #raku <[Coke]> jmerelo - why use the unlicense? If someone is submitting something through that site on the way to another repo, we don't want to have a license mismatch.

[06:36] <releasable6> jmerelo, Next release will happen when it's ready. 3 blockers. Changelog for this release was not started yet

[06:36] <releasable6> jmerelo, Details: https://gist.github.com/13b584cf05ee1e7f7518a5d6dd22de89

[06:36] <jmerelo> .tell [coke] it's a license for the repo itself. It's a markdown file, doesn't make a lot of sense to make it GPL.

[06:36] <tellable6> jmerelo, I'll pass your message to [Coke]

[06:43] *** domidumont joined
[06:47] <nwc10> "I ran out of inodes again" - oh my.

[06:47] <nwc10> Not that that privately, and at $ork the sysadmins seem to have asked this sort of question early enough to avoid problems

[06:55] *** MasterDuke joined
[07:03] <Geth> ¦ nqp: usev6++ created pull request #669: Move all tests for streaming decoder to t/nqp

[07:03] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/669

[07:12] *** raku-bridge left
[07:13] *** raku-bridge joined
[07:13] *** raku-bridge left
[07:13] *** raku-bridge joined
[07:34] *** Altai-man joined
[07:55] <jmerelo> m: class Boo { has @.bar }; Boo.new.bar := (33)

[07:55] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use bind operator with this left-hand side␤at <tmp>:1␤------> 3s Boo { has @.bar }; Boo.new.bar := (33)7⏏5<EOL>␤»

[07:55] <jmerelo> m: class Boo { has @.bar }; Boo.new.bar = (33)

[07:55] <camelia> rakudo-moar 85847d2f1: ( no output )

[07:58] <MasterDuke> jmerelo: i agree gpl wouldn't make sense for the hacktoberfest repo, but i suspect he was wondering why not artistic, since that's what all the other repos are

[08:16] <jmerelo> MasterDuke: it's just documentation. It does not have anything to do with the repos it points to. But I can change it to artistic, no problem. 

[08:17] <jmerelo> ... as soon as someone adds a row (or two) to the list of hacktoberfest-friendly issues :-)

[08:54] <jmerelo> I just posted this in StackOverflow https://stackoverflow.com/questions/64060917/access-resources-for-a-different-distribution

[08:54] <jmerelo> But I think that the problem is not so much technical as pragmatic: are resources part of the API of a distribution?

[08:55] <jmerelo> This is mainly a yak-shaving away from what I'm trying to do originally, which is fixing my raku-river distribution.

[08:56] <jmerelo> raku-river downloads metadata for all distributions in the ecosystem, trying to get dependency chains and assign, based on that, a "river" score for them.

[08:56] <jmerelo> Low score means low reverse dependencies, high score lots o them. I think JSON::Fast is one of the distribution with the highest score.

[08:58] <jmerelo> The thing is I need to know where to find those dependencies, which are nicely wrapped in a JSON file as a zef resource.

[08:59] <jmerelo> So, to what extent this can be considered part of the API, and thus can be expected to have the same format and stay in the same "key"

[09:01] *** lizmat_ joined
[09:03] *** lizmat__ joined
[09:04] *** lizmat left
[09:04] *** lizmat___ joined
[09:07] *** lizmat_ left
[09:07] *** lizmat__ left
[09:08] *** lizmat___ is now known as lizmat

[09:40] *** sena_kun joined
[09:42] *** Altai-man left
[09:43] <Geth> ¦ nqp/master: 4 commits pushed by (Christian Bartolomäus)++, (Jonathan Worthington)++

[09:43] <Geth> ¦ nqp/master: cb28641ce0 | Unify tests for streaming decoder

[09:43] <Geth> ¦ nqp/master: bb97ec4e9c | Run five more decoder tests on all backends

[09:43] <Geth> ¦ nqp/master: 2944fc6682 | Run two more decoder tests on all backends

[09:43] <Geth> ¦ nqp/master: 37963db1b2 | Merge pull request #669 from usev6/jvm_decoder

[09:43] <Geth> ¦ nqp/master: review: https://github.com/Raku/nqp/compare/3199f99aaf0b...37963db1b22f

[09:43] <jmerelo> Guess the previous question fell in sink context.

[09:44] <jmerelo> So I ask again: are resources part of the API of a distribution? Should they be? Context: see above.

[09:48] <lizmat> jmerelo: it's a good question: if there is no problem-solving issue for it yet, I think there should be

[09:57] <jmerelo> lizmat: OK, I'll take it there.

[10:18] <[Tux]> Rakudo version 2020.08.2-83-gef0ecec34 - MoarVM version 2020.08-103-g34e0fb55e

[10:18] <[Tux]> csv-test-xs-20      0.395 -  0.396

[10:18] <[Tux]> test-t --race       0.858 -  0.894

[10:18] <[Tux]> csv-ip5xs           0.913 -  0.959

[10:18] <[Tux]> test-t              1.894 -  1.936

[10:18] <[Tux]> test                7.693 -  7.869

[10:18] <[Tux]> csv-ip5xs-20        8.910 - 10.344

[10:18] <[Tux]> test-t-20 --race    9.037 -  9.796

[10:18] <[Tux]> csv-parser         26.899 - 28.365

[10:18] <[Tux]> test-t-20          31.976 - 32.161

[10:21] *** Kaeipi left
[10:21] *** Merfont joined
[10:40] <Geth> ¦ problem-solving: JJ assigned to jnthn Issue To what extent are resources part of the API of a distribution? https://github.com/Raku/problem-solving/issues/234

[10:40] <jmerelo> lizmat: done. ^^^

[10:41] *** leont joined
[11:00] <sena_kun> Anyone feel brave for Test::Fuzz blocker?

[11:01] <lizmat> sena_kun: after I'm done with the rakuast work I have planned for today, I will have a look at it (again)

[11:02] <sena_kun> lizmat++ thanks! This is appreciated.

[11:18] <jmerelo> sena_kun: will give it a try. Basic thing is to check out where regression ocurred, right?

[11:19] <jmerelo> but if lizmat didn't find it, I'm probably hopeless.

[11:19] <lizmat> jmerelo is many things, hopeless is not one of them!

[11:20] * lizmat is hoping for an aha erlebnis when  looking at Test::Fuxx

[11:34] <jmerelo> lizmat: Well, I always give stuff a try. In this case, I'm not sure the failed code depends on the regression. Could be, but I doubt it.

[11:35] <jmerelo> Will try to take a look this afternoon... 

[11:36] <jmerelo> although you probably call it evening somewhere else in Europe.

[11:49] <Geth> ¦ nqp: usev6++ created pull request #670: [JVM] Use singleton object for VMnull

[11:49] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/670

[12:01] <gfldex> still no luck with my PR on Test:META. It's 13 days so I have send an email after it.

[12:18] <Geth> ¦ problem-solving: jnthn self-unassigned To what extent are resources part of the API of a distribution? https://github.com/Raku/problem-solving/issues/234

[12:29] *** jmerelo left
[12:40] <Geth> ¦ rakudo/rakuast: 68ab933a9a | (Elizabeth Mattijsen)++ | 8 files

[12:40] <Geth> ¦ rakudo/rakuast: Completed moving all DEPARSE methods from src/Raku/ast

[12:40] <Geth> ¦ rakudo/rakuast: 

[12:40] <Geth> ¦ rakudo/rakuast: into RakuAST::Deparse

[12:40] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/68ab933a9a

[12:48] <Geth> ¦ nqp: fc058f84ee | (Christian Bartolomäus)++ | 3 files

[12:48] <Geth> ¦ nqp: [JVM] Use singleton object for vmnull

[12:48] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/fc058f84ee

[12:48] <Geth> ¦ nqp: 41f143f685 | (Jonathan Worthington)++ (committed using GitHub Web editor) | 3 files

[12:48] <Geth> ¦ nqp: Merge pull request #670 from usev6/nqp_singleton

[12:48] <Geth> ¦ nqp: 

[12:48] <Geth> ¦ nqp: [JVM] Use singleton object for VMnull

[12:48] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/41f143f685

[12:54] <Geth> ¦ rakudo/rakuast: 74d795907c | (Elizabeth Mattijsen)++ | 4 files

[12:54] <Geth> ¦ rakudo/rakuast: Move RakuAST::Deparse into core

[12:54] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/74d795907c

[13:10] *** pamplemousse joined
[13:40] *** Altai-man joined
[13:43] *** sena_kun left
[13:43] *** lucasb joined
[14:02] *** sjn left
[14:27] <Geth> ¦ nqp: MasterDuke17++ created pull request #671: Adapt to simplified isprime_I

[14:27] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/671

[14:28] <Geth> ¦ rakudo: MasterDuke17++ created pull request #3932: Adapt to simplified nqp::isprime_I

[14:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3932

[14:42] *** Merfont left
[14:42] *** Kaiepi joined
[14:51] *** Kaeipi joined
[14:51] *** Kaiepi left
[14:54] *** pamplemousse left
[15:10] *** AlexDani` joined
[15:11] *** finsternis left
[15:12] *** AlexDaniel left
[15:23] *** pamplemousse joined
[15:31] <Geth> ¦ rakudo/rakuast: a7d85a3686 | (Elizabeth Mattijsen)++ | 3 files

[15:31] <Geth> ¦ rakudo/rakuast: Add DEPARSE support for CompUnit and simple traits

[15:31] <Geth> ¦ rakudo/rakuast: 

[15:31] <Geth> ¦ rakudo/rakuast: - also several tweaks

[15:31] <Geth> ¦ rakudo/rakuast: - all tests in code.t / var.t now have DEPARSE tests added

[15:31] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/a7d85a3686

[15:32] *** pamplemousse_ joined
[15:37] *** pamplemousse__ joined
[15:40] *** pamplemousse_ left
[16:04] <Geth> ¦ rakudo/rakuast: 82ec0b6183 | (Elizabeth Mattijsen)++ | src/core.c/RakuAST/Deparse.pm6

[16:04] <Geth> ¦ rakudo/rakuast: Final DEPARSEing tweaks for now

[16:04] <Geth> ¦ rakudo/rakuast: 

[16:04] <Geth> ¦ rakudo/rakuast: All t/12-rakuast tests should now be clean again

[16:04] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/82ec0b6183

[16:45] *** pamplemousse left
[16:47] <lizmat> Altai-man what was the commit again that supposedly broke Test::Fuzz ?

[16:50] <Altai-man> Give me a second...

[16:51] <Altai-man> Blin believes it was https://github.com/rakudo/rakudo/commit/df5b3d5308bd175739a6ac9319cdeb1bc9e47f66

[16:51] <Altai-man> I'll re-run it now.

[16:51] <lizmat> no need. it's still borked

[16:51] <Altai-man> Well, maybe it'll give another commit and then we're in trouble...

[16:51] <Altai-man> By the way, any reasons not to bump?

[16:52] <lizmat> not as far as I know

[16:52] <[Coke]> .tell jmerlo - I did not suggest GPL

[16:52] <tellable6> [Coke], I haven't seen jmerlo around, did you mean jmerelo?

[16:53] <[Coke]> .tell jmerelo - I did not suggest GPL - but as long as there's never any code submitted to this repo, that's fine.

[16:53] <tellable6> [Coke], I'll pass your message to jmerelo

[16:54] * Altai-man bumps

[16:54] <Geth> ¦ nqp: 95b85c5f65 | Altai-man++ | tools/templates/MOAR_REVISION

[16:54] <Geth> ¦ nqp: [MoarVM Bump] Brings 13 commits

[16:54] <Geth> ¦ nqp: 

[16:54] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2020.08-91-g590bac47e...2020.08-104-g25c70bfe0

[16:54] <Geth> ¦ nqp: 25c70bfe0 Hash tables must also resize if the max probe distance is hit on an empty slot.

[16:54] <Geth> ¦ nqp: 34e0fb55e Merge pull request #1343 from MoarVM/sparc

[16:54] <Geth> ¦ nqp: 39743de41 Merge pull request #1347 from MoarVM/MVMHash-copy_to-marking-bug

[16:54] <Geth> ¦ nqp: 738024f9c Merge pull request #1341 from patrickbkr/fix-root-file-executable

[16:54] <Geth> ¦ nqp: <…commit message has 9 more lines…>

[16:54] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/95b85c5f65

[16:54] <Geth> ¦ rakudo: 1282d6605e | Altai-man++ | tools/templates/NQP_REVISION

[16:54] <Geth> ¦ rakudo: [NQP Bump] Brings 10 commits

[16:54] <Geth> ¦ rakudo: 

[16:54] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2020.08.2-18-gb28db8914...2020.08.2-28-g95b85c5f6

[16:54] <Geth> ¦ rakudo: 95b85c5f6 [MoarVM Bump] Brings 13 commits

[16:54] <Geth> ¦ rakudo: 41f143f68 Merge pull request #670 from usev6/nqp_singleton

[16:54] <Geth> ¦ rakudo: 37963db1b Merge pull request #669 from usev6/jvm_decoder

[16:54] <Geth> ¦ rakudo: 2944fc668 Run two more decoder tests on all backends

[16:54] <Geth> ¦ rakudo: <…commit message has 21 more lines…>

[16:54] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1282d6605e

[16:55] <lizmat> Altai-man: well, I've now confirmed that reverting df5b3d5308bd175739a6ac9319cdeb1bc9e47f66 makes Test::Fuzz pass

[16:55] <linkable6> (2020-08-23) https://github.com/rakudo/rakudo/commit/df5b3d5308 Externalize suggestions and tips

[16:56] <Altai-man> lizmat, oh, this is interesting. I thought about reverting at first, but saw the commit was in a middle of PR which did something, so was not sure if it is safe to revert just this one leaving others alone.

[16:58] * lizmat pulls the bump and recompiles

[16:58] * Altai-man finishes stresstest

[16:59] *** domidumont left
[17:00] <Altai-man> Fails for t/spec/S17-procasync/kill.t and t/spec/MISC/bug-coverage-stress.rakudo.moar, sigh, the usual ones.

[17:03] <Altai-man> Test::Fuzz – Fail, Bisected: df5b3d5308bd175739a6ac9319cdeb1bc9e47f66

[17:04] <Altai-man> It bisects to the same commit, so double-confirm. :)

[17:04] <Altai-man> I'm ready to run blin tonight as well.

[17:06] <Altai-man> Wait.

[17:07] <Altai-man> Hmm, no, failed one is fudged.

[17:07] <Altai-man> Never mind.

[17:23] <lizmat> Altai-man: have a fix to get Test::Fuzz to pass

[17:23] <lizmat> now checking spectest

[17:24] <Altai-man> lizmat++

[17:24] <lizmat> apparently, Test::Fuzz doesn't like that X::Method::Exception uses TWEAK

[17:24] <Altai-man> I'm ready to run Blin as soon as the fix will be built.

[17:24] <lizmat> *X::Method::NotFoun

[17:24] <lizmat> d

[17:24] <lizmat> argh

[17:25] <lizmat> make test fail

[17:25] <Altai-man> Sigh.

[17:38] <lizmat> something spooky going on in X::Method::NotFound

[17:38] *** pamplemousse joined
[17:39] <lizmat> the @!suggestions attribute is being set, but the .suggestions method returns an empty array

[17:39] <lizmat> aaaahhh...  

[17:39] <lizmat> hmmm

[17:41] *** sena_kun joined
[17:43] *** Altai-man left
[17:43] <lizmat> make test clean now, running spectest

[17:44] *** pamplemousse left
[17:46] *** sjn joined
[17:47] <lizmat> make spectest also

[17:48] *** AlexDani` is now known as AlexDaniel

[17:48] *** AlexDaniel left
[17:48] *** AlexDaniel joined
[17:51] <Geth> ¦ rakudo: 8c0155844c | (Elizabeth Mattijsen)++ | src/core.c/Exception.pm6

[17:51] <Geth> ¦ rakudo: Fix regression in Test::Fuzz

[17:51] <Geth> ¦ rakudo: 

[17:51] <Geth> ¦ rakudo: For some reason still unclear to me, Test::Fuzz's internals are affected

[17:51] <Geth> ¦ rakudo: by df5b3d5308bd175739a6 .  For some reason, this appears to be related

[17:51] <Geth> ¦ rakudo: to the use of a TWEAK method in the BUILDPLAN of X::Method::NotFound.

[17:51] <Geth> ¦ rakudo: So instead of using TWEAK, put the code of TWEAK into a private method

[17:51] <Geth> ¦ rakudo: and call that as appropriate, to get the same result.

[17:51] <Geth> ¦ rakudo: 

[17:51] <Geth> ¦ rakudo: Note therefore that this is *really* a workaround.  Further research

[17:51] <Geth> ¦ rakudo: would be needed to really get to the bottom of this.

[17:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8c0155844c

[17:51] <lizmat> sena_kun: ^^  

[17:52] <lizmat> so Blin away!

[17:52] <sena_kun> lizmat, thank you! Now waiting for the commit build.

[18:11] <sena_kun> releasable6, status

[18:11] <releasable6> sena_kun, Next release will happen when it's ready. 3 blockers. Changelog for this release was not started yet

[18:11] <releasable6> sena_kun, Details: https://gist.github.com/69807b9f1f2f5c38bfb6d18f83920ff2

[18:12] <sena_kun> 53 out of 1530 modules processed

[18:52] <gfldex> I am very happy to report to have found RabidGravy alive and well.

[18:53] <lizmat> :-)

[18:54] <sena_kun> 557 out of 1530 modules processed

[18:54] * sena_kun goes afk

[19:20] <Geth> ¦ rakudo/rakuast: 60f937d4d8 | (Elizabeth Mattijsen)++ | 2 files

[19:20] <Geth> ¦ rakudo/rakuast: Add DEPARSE tests to meta-operators

[19:20] <Geth> ¦ rakudo/rakuast: 

[19:20] <Geth> ¦ rakudo/rakuast: Also tweak MetaInfix::Assign deparse

[19:20] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/60f937d4d8

[19:21] <sena_kun> 813 out of 1530 modules processed

[19:23] *** pamplemousse__ left
[20:17] <Geth> ¦ roast: jjatria++ created pull request #675: Test FIRST statement in loop does not warn

[20:17] <Geth> ¦ roast: review: https://github.com/Raku/roast/pull/675

[20:23] *** evalable6 left
[20:23] *** linkable6 left
[20:25] *** evalable6 joined
[20:25] *** linkable6 joined
[20:30] <sena_kun> Anyone roast-wise to check https://github.com/Raku/roast/pull/675 please? :)

[20:33] <Geth> ¦ rakudo/rakuast: 663ea249dc | (Elizabeth Mattijsen)++ | 2 files

[20:33] <Geth> ¦ rakudo/rakuast: Add missing DEPARSE tests for operators

[20:33] <Geth> ¦ rakudo/rakuast: 

[20:33] <Geth> ¦ rakudo/rakuast: And tweak deparsing for QuotedStrings

[20:33] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/663ea249dc

[20:34] <lizmat> m: loop { FIRST "foo"; last }

[20:34] <camelia> rakudo-moar 85847d2f1: ( no output )

[20:34] <lizmat> looks to me that code doesn't warn, or was that the point ?

[20:36] <sena_kun> lizmat, it was earlier.

[20:36] <sena_kun> Before the fix.

[20:36] <sena_kun> 2020.02: loop { FIRST "foo"; last }

[20:36] <sena_kun> I wonder if it works like that...

[20:36] <sena_kun> m: 2020.02 loop { FIRST "foo"; last }

[20:36] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing semicolon␤at <tmp>:1␤------> 032020.027⏏5 loop { FIRST "foo"; last }␤»

[20:37] <MasterDuke> c: 2020.02 loop { FIRST "foo"; last }

[20:37] <committable6> MasterDuke, ¦2020.02: «»

[20:37] <sena_kun> commented on 4 Jun 2018 <- I'm afraid it is even older...

[20:38] <sena_kun> c: 2018.02 loop { FIRST "foo"; last }

[20:38] <committable6> sena_kun, ¦2018.02: «»

[20:38] <sena_kun> c: 2018.06 loop { FIRST "foo"; last }

[20:38] <committable6> sena_kun, ¦2018.06: «WARNINGS for /tmp/Gn02HzMEI6:␤Useless use of LOOP_BLOCK_1 symbol in sink context (line 1)␤»

[20:38] <sena_kun> ^ this

[21:43] *** sena_kun left
[21:43] <jjatria> For extra context: https://stackoverflow.com/questions/52227631/useless-use-of-loop-block-1-symbol-in-sink-context

[21:44] <jjatria> I recently noticed that it had been fixed sometime since then

[21:52] <[Coke]> m: run('uptime')

[21:52] <camelia> rakudo-moar 85847d2f1: OUTPUT: « 23:52:28  up 21 days  6:45,  1 user,  load average: 0.00, 0.00, 0.00␤»

[23:10] *** dogbert17 left
[23:27] *** reportable6 left
[23:47] <Geth> ¦ rakudo/rakuast: b98dcf72eb | (Jonathan Worthington)++ | 7 files

[23:47] <Geth> ¦ rakudo/rakuast: RakuAST handling of term parameters (\foo)

[23:47] <Geth> ¦ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/b98dcf72eb

