[00:26] <[Coke]> crowd here might care to know: I've stepped down as the TPF Grants Committee Secretary.

[01:20] *** klapperl joined
[01:21] *** klapperl_ left
[01:25] <jdv79> why?

[05:44] <Geth> ¦ rakudo: 2b81f97819 | (Christian Bartolomäus)++ | src/core.c/Rakudo/Internals/JSON.pm6

[05:44] <Geth> ¦ rakudo: [JVM] Don't use native string arrays in setting

[05:44] <Geth> ¦ rakudo: 

[05:44] <Geth> ¦ rakudo: As already pointed out in e22aeafb50 these blow up on the

[05:44] <Geth> ¦ rakudo: JVM backend.

[05:44] <Geth> ¦ rakudo: 

[05:44] <Geth> ¦ rakudo: This should fix https://github.com/rakudo/rakudo/issues/3695.

[05:44] <Geth> ¦ rakudo: 

[05:44] <Geth> ¦ rakudo: The problem only surfaced during installation on Windows, because

[05:44] <Geth> ¦ rakudo: there pathes contain backslashes that need to be escaped in JSON.

[05:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2b81f97819

[05:51] *** synthmeat left
[05:53] *** synthmeat joined
[05:54] *** synthmeat left
[05:54] *** synthmeat joined
[06:32] *** Altai-man_ joined
[06:49] <Altai-man_> Awesome to have everything passing CI. \o/

[07:00] *** domidumont joined
[07:08] <lizmat> Files=1306, Tests=111304, 213 wallclock secs (28.76 usr  8.34 sys + 2992.84 cusr 274.13 csys = 3304.07 CPU)

[08:12] *** donaldh joined
[08:27] *** sena_kun joined
[08:29] *** Altai-man_ left
[10:26] *** Altai-man_ joined
[10:28] *** sena_kun left
[10:43] <[Tux]> Rakudo version 2020.05.1-144-g2b81f9781 - MoarVM version 2020.05-13-g03c9154e8

[10:43] <[Tux]> csv-test-xs-20      0.459 -  0.532

[10:43] <[Tux]> csv-ip5xs           0.957 -  0.968

[10:43] <[Tux]> test-t --race       1.008 -  1.361

[10:43] <[Tux]> test-t              2.374 -  2.471

[10:43] <[Tux]> test                8.483 -  9.496

[10:43] <[Tux]> csv-ip5xs-20        9.558 -  9.617

[10:43] <[Tux]> test-t-20 --race   11.544 - 12.280

[10:43] <[Tux]> csv-parser         30.887 - 34.534

[10:43] <[Tux]> test-t-20          35.848 - 37.974

[10:43] <lizmat> wot?

[10:43] <[Tux]> Oops (timings done during teams meeting) or explainable?

[10:44] <[Tux]> I'll run it again after meeting

[10:44] <lizmat> not explainable

[10:44] <lizmat> looking at the commit log

[10:46] <Altai-man_> sigh

[10:47] <lizmat> sigh?  for now I'm pretty sure it's a fluke

[10:50] <Altai-man_> quite possibly, I'd say. just was thinking it was at around 1.8 for some days and I am unused already. :)

[10:51] <Altai-man_> Or, rather, *not used to it anymore

[10:56] *** Kaiepi joined
[12:09] *** squashable6 left
[12:11] *** squashable6 joined
[12:26] *** Xliff joined
[12:27] *** sena_kun joined
[12:28] *** Altai-man_ left
[12:29] <Xliff> .tell nine I think it was one of your bug fixes, that again required the use of a full directory lock. I think it was the .repo-id situation you fixed in f5ce80e1a6d60a6a51a898da85f3100bb088dfb4

[12:29] <linkable6> (2020-02-13) https://github.com/rakudo/rakudo/commit/f5ce80e1a6 Fix concurrency issue with re-checking a precomp file's dependencies

[12:29] <tellable6> Xliff, I'll pass your message to nine

[13:30] <[Coke]> jdv79: just moving on. no drama.

[13:55] *** [Tux] left
[14:00] *** [Tux] joined
[14:04] *** Kaiepi left
[14:09] *** Kaiepi joined
[14:26] *** Altai-man_ joined
[14:28] *** sena_kun left
[14:43] <[Tux]> After the reboot …

[14:43] <[Tux]> Rakudo version 2020.05.1-144-g2b81f9781 - MoarVM version 2020.05-13-g03c9154e8

[14:43] <[Tux]> csv-test-xs-20      0.390 -  0.413

[14:43] <[Tux]> csv-ip5xs           0.807 -  0.813

[14:43] <[Tux]> test-t --race       0.811 -  0.879

[14:43] <[Tux]> test-t              1.864 -  1.874

[14:43] <[Tux]> test                7.317 -  7.726

[14:43] <[Tux]> csv-ip5xs-20        7.807 -  7.827

[14:43] <[Tux]> test-t-20 --race    9.221 -  9.800

[14:43] <[Tux]> csv-parser         24.657 - 26.264

[14:43] <[Tux]> test-t-20          30.398 - 33.730

[14:47] <lizmat> ah, much better  :-)

[14:50] <Altai-man_> [Tux]++

[14:55] <Geth> ¦ nqp/new-disp: 090d67c189 | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[14:55] <Geth> ¦ nqp/new-disp: Only re-use arg registers until after dispatch

[14:55] <Geth> ¦ nqp/new-disp: 

[14:55] <Geth> ¦ nqp/new-disp: The code here was nabbed from that for emitting invoke instructions, but

[14:55] <Geth> ¦ nqp/new-disp: since we now no longer copy the arguments into a buffer, but instead

[14:55] <Geth> ¦ nqp/new-disp: just have a list of registers to source them from, we musn't reuse those

[14:55] <Geth> ¦ nqp/new-disp: registers until after the dispatch is done.

[14:55] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/090d67c189

[14:58] <Geth> ¦ nqp/new-disp: ae04baf5e2 | (Jonathan Worthington)++ | t/moar/53-dispatch.t

[14:58] <Geth> ¦ nqp/new-disp: Basic tests for boot-code-constant dispatcher

[14:58] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/ae04baf5e2

[14:59] <Geth> ¦ rakudo: 2eec62feef | (Elizabeth Mattijsen)++ | src/core.c/Code.pm6

[14:59] <Geth> ¦ rakudo: Reduce overhead of Code.ACCEPTS(value) by 20%

[14:59] <Geth> ¦ rakudo: 

[14:59] <Geth> ¦ rakudo: Not a lot, but it this code gets hot pretty easily for e.g. dir()

[14:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2eec62feef

[15:43] *** jmerelo joined
[15:44] *** patrickb joined
[15:46] <[Coke]> installed valgrind on osx to see if that helped with the abort trap I was seeing in cro. forgot how slow that is. :)

[16:02] *** patrickb33 joined
[16:05] *** patrickb left
[16:06] *** patrickb33 left
[16:09] *** patrickb joined
[16:27] <moritz> with things being slow and starting witih v, I first read virtualbox, not valgrind :D

[16:27] *** sena_kun joined
[16:28] <[Coke]> yah, this feels like it froze and is not going to throw the abort trap

[16:29] *** Altai-man_ left
[17:18] *** jmerelo left
[17:22] *** go|dfish left
[17:24] *** go|dfish joined
[17:30] <Geth> ¦ rakudo/master: 4 commits pushed by (Vadim Belman)++

[17:30] <Geth> ¦ rakudo/master: 8bb0235bb0 | Update INSTALL.txt for the latest changes

[17:30] <Geth> ¦ rakudo/master: e1db95e8cb | Take into account a few correction from @patrickbkr

[17:30] <Geth> ¦ rakudo/master: bd5e19e41a | Add a note about Perl 5.22 on Windows

[17:30] <Geth> ¦ rakudo/master: 81c0e1454f | Merge pull request #3696 from vrurg/rakudo_3693

[17:30] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/2eec62feef03...81c0e1454f04

[17:56] *** Kaiepi left
[18:26] *** Altai-man_ joined
[18:28] *** sena_kun left
[18:35] *** lichtkind joined
[18:37] *** TreyHarris joined
[18:54] *** camelia left
[18:54] *** camelia joined
[18:55] *** domidumont left
[19:43] *** camelia left
[19:44] *** camelia joined
[20:08] *** lichtkind left
[20:13] *** Kaiepi joined
[20:22] *** lichtkind joined
[20:27] *** sena_kun joined
[20:28] *** Altai-man_ left
[21:30] *** Geth left
[21:30] *** Geth joined
[21:43] *** rypervenche left
[21:46] *** rypervenche joined
[22:02] <Xliff> m: my ($x, $y, $w, $h) = 5 xx 4; ($w, $h) »-=» ( 2 * $x, 2 * $y); ($w, $h).say

[22:02] <camelia> rakudo-moar 81c0e1454: OUTPUT: «(-5 -5)␤»

[22:02] <Xliff> m: my ($x, $y, $w, $h) = 5 xx 4; ($w, $h) »-» ( 2 * $x, 2 * $y); ($w, $h).say

[22:02] <camelia> rakudo-moar 81c0e1454: OUTPUT: «Potential difficulties:␤    Useless use of »-» in sink context␤    at <tmp>:1␤    ------> 3my ($x, $y, $w, $h) = 5 xx 4; ($w, $h) 7⏏5»-» ( 2 * $x, 2 * $y); ($w, $h).say␤(5 5)␤»

[22:18] <Xliff> m: my $r = 0..1; say 0.5 ~~ $r

[22:18] <camelia> rakudo-moar 81c0e1454: OUTPUT: «True␤»

[22:18] <Xliff> m: my $r = 0..1; say 0.5 ~~ $r; $r.min.say; $r.max.say

[22:18] <camelia> rakudo-moar 81c0e1454: OUTPUT: «True␤0␤1␤»

[22:20] *** donaldh left
[22:26] *** Altai-man_ joined
[22:29] *** sena_kun left
[22:54] *** Altai-man_ left
[23:29] *** lichtkind left
[23:51] *** patrickz joined
[23:55] *** patrickb left
