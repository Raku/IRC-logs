[01:08] *** lichtkind left
[01:11] *** lucasb left
[01:26] *** Xliff left
[01:50] *** raiph left
[04:52] *** moon-child left
[04:53] *** moon-child joined
[07:43] *** JJMerelo joined
[08:12] <JJMerelo> Could maybe someone take a look at old issues? https://github.com/Raku/old-issue-tracker/ Since there's still some time left for the new release, it would be great if some of them could be solved.

[08:12] <tellable6> 2020-05-29T11:50:47Z #raku <uzl[m]> jmerelo I think  some doc issues that were addressed by respective PRs and could thus be closed. From the top of my head: https://github.com/Raku/doc/issues/3389 , https://github.com/Raku/doc/issues/3308 

[08:15] <JJMerelo> .tell uzl[m] OK, done, but please include closing statements in the PRs and/or commits you're doing for them in the future.

[08:15] <tellable6> JJMerelo, I'll pass your message to uzl[m]

[08:38] <JJMerelo> m: class N { method text { return Proxy.new​: FETCH => method () { say 'fetch​: ', ++$ },STORE => method ($new) { say "$new​: ", ++$ } } }; N.text; N.text = 'blah';

[08:38] <camelia> rakudo-moar 6ead4ce16: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Bogus postfix␤at <tmp>:1␤------> 3class N { method text { return Proxy.new7⏏5​: FETCH => method () { say 'fetch​: ', ␤    expecting any of:␤        infix␤        infix stopper␤    …»

[08:40] <JJMerelo> m: class N { method text { return Proxy.new: FETCH => method () { say 'fetch​: ', ++$ },STORE => method ($new) { say "$new​: ", ++$ } } }; N.text; N.text = 'blah';

[08:40] <camelia> rakudo-moar 6ead4ce16: OUTPUT: «fetch​: 1␤Cannot assign to a readonly variable or a value␤  in block <unit> at <tmp> line 1␤␤fetch​: 1␤»

[08:40] <JJMerelo> m: class N { method text { return-rw Proxy.new: FETCH => method () { say 'fetch​: ', ++$ },STORE => method ($new) { say "$new​: ", ++$ } } }; N.text; N.text = 'blah';

[08:40] <camelia> rakudo-moar 6ead4ce16: OUTPUT: «fetch​: 1␤fetch​: 2␤fetch​: 3␤blah​: 1␤»

[10:32] *** sena_kun joined
[10:52] <tbrowder> hi, just filed an issue on spectest

[10:53] <tbrowder> if roast on perl6 and raku aren't synced behind the scenes aren't we asking for trouble?

[10:54] <tbrowder> or am i missing something?

[10:55] <tbrowder> some github magic maybe?

[10:58] <sena_kun> tbrowder, I think the repo is moved, no? I mean, there are no two copies, but only a single one with symlinks.

[10:59] <tbrowder> ok, i hope so, but the tooling still needs updating: raku instead of perl6

[10:59] <sena_kun> yes

[11:19] <Geth> ¦ rakudo: JJ self-assigned "make spectest" pulls from github:perl6 instead of github:raku https://github.com/rakudo/rakudo/issues/3729

[11:27] <Geth> ¦ rakudo: JJ self-unassigned "make spectest" pulls from github:perl6 instead of github:raku https://github.com/rakudo/rakudo/issues/3729

[11:32] <JJMerelo> tbrowder sena_kun after looking at this for a while, can't figure out where that is set

[11:33] <Geth> ¦ rakudo/set_equality: dbd69ba726 | (Elizabeth Mattijsen)++ | 2 files

[11:33] <Geth> ¦ rakudo/set_equality: Simplify Setty/Baggy.ACCEPTS

[11:33] <Geth> ¦ rakudo/set_equality: 

[11:33] <Geth> ¦ rakudo/set_equality: Now that we have a set equality op, we can use that.

[11:33] <Geth> ¦ rakudo/set_equality: 

[11:33] <Geth> ¦ rakudo/set_equality: Also fix up the Setty/Baggy infix:<eqv> check on object identity:

[11:33] <Geth> ¦ rakudo/set_equality: the should always decont before checking.

[11:33] <JJMerelo> tbrowder perl6/roast is for the time being automatically redirected to Raku/roast, which is why it works.

[11:33] <Geth> ¦ rakudo/set_equality: review: https://github.com/rakudo/rakudo/commit/dbd69ba726

[11:34] <JJMerelo> tbrowder but beyond that, there's a labyrinth of Perl code, Makefile.in macros and git configuration where I am lost. I've taken notes in the issue. 

[11:35] <lizmat> vrurg patrickb would probably know better where to look / fix

[11:36] <JJMerelo> AlexDaniel` found it here: https://github.com/Raku/nqp-configure/blob/7c343d49176e627e1aa4ba9dbeaf2f544d287443/lib/NQP/Config.pm#L153-L156

[11:37] <JJMerelo> Really I had no idea we had to look there too...

[11:38] <tbrowder> yep, that's why i gave up on fixing tooling years ago, hat's off to vrurg and others for improving it!

[11:39] <tbrowder> *hats

[11:40] <ShimmerFairy> The clear and obvious solution is to simply switch over to CMake. Then nothing would be complicated ever again.

[11:40] <tbrowder> it would be cool to gradually move away from reliance on perl, too

[11:42] <ShimmerFairy> Speaking of build issues, 'make install' builds all of Raku's modules, not the 'make' step like you'd expect. This wouldn't be much of an issue except that the created '.precomp' folder and all its contents belong to root when you do 'sudo make install', making it a pain to deal with when you reconfigure (since configure tries to delete .precomp)

[11:43] <tbrowder> second the motion on CMake, but that's a steep learning curve, too

[11:44] <ShimmerFairy> cmake is cool, but boy howdy are they allergic to clear documentation sometimes.

[11:44] <tbrowder> yep, i even bought the book...

[11:46] <ShimmerFairy> And it's worth keeping in mind that CMake (or any other tooling system) would require a lot of custom plumbing, since they're geared more towards major languages.

[11:46] <tbrowder> the brlcad.org project move to cmake a few years ago and i think it was done too early before the top devs understood it well enough. i think you need to really prepare well before the transition.

[11:50] *** JJMerelo left
[12:02] <[Tux]> Rakudo version 2020.05.1-207-g6ead4ce16 - MoarVM version 2020.05-18-g157387214

[12:02] <[Tux]> csv-test-xs-20      0.376 -  0.377

[12:02] <[Tux]> csv-ip5xs           0.816 -  0.821

[12:02] <[Tux]> test-t --race       0.883 -  0.914

[12:02] <[Tux]> test-t              1.919 -  1.926

[12:02] <[Tux]> test                7.230 -  7.658

[12:02] <[Tux]> csv-ip5xs-20        8.322 -  8.605

[12:02] <[Tux]> test-t-20 --race    8.933 -  9.077

[12:02] <[Tux]> csv-parser         25.961 - 26.197

[12:02] <[Tux]> test-t-20          30.696 - 30.718

[12:04] <tbrowder> thnx for clarification on roast...bye

[12:27] *** Altai-man_ joined
[12:30] *** sena_kun left
[14:15] *** lucasb joined
[14:20] *** maggotbrain left
[14:25] *** Xliff joined
[14:28] *** sena_kun joined
[14:30] *** Altai-man_ left
[14:56] *** patrickb joined
[15:40] *** domidumont joined
[15:41] *** finsternis left
[15:46] *** finsternis joined
[16:27] *** Altai-man_ joined
[16:28] *** domidumont left
[16:30] *** sena_kun left
[17:04] <Geth> ¦ nqp: a2878ef2f5 | (Patrick Böker)++ | tools/templates/MOAR_REVISION

[17:04] <Geth> ¦ nqp: Bump MoarVM

[17:04] <Geth> ¦ nqp: 

[17:04] <Geth> ¦ nqp: This pulls in a change that fixes a test in t\nqp/019-file-ops.t

[17:04] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/a2878ef2f5

[17:04] <Geth> ¦ rakudo: sumanstats++ created pull request #3730: Perl6 to Raku and many more

[17:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3730

[17:49] *** JJMerelo joined
[17:51] <Geth> ¦ nqp: sumanstats++ created pull request #641: Perl6 to raku + fix links

[17:51] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/641

[18:10] *** travis-ci joined
[18:10] <travis-ci> NQP build passed. sumanstats 'Fix the links

[18:10] <travis-ci> https://travis-ci.com/sumanstats/nqp/builds/168863588 https://github.com/sumanstats/nqp/compare/f32354a7841f...dd2865a7c621

[18:10] *** travis-ci left
[18:12] *** lichtkind joined
[18:28] *** sena_kun joined
[18:30] *** Altai-man_ left
[18:38] <patrickb> I want to use `nqp::execname()` in an nqp test. That opcode does not exist on JVM. Using an `if` to guard that op does not work as the compiler will still trip on the non existing op. What can I do?

[18:43] <MasterDuke> how easy is it to eval in nqp?

[18:44] *** JJMerelo left
[18:47] <MasterDuke> npq: my $comp := nqp::getcomp('nqp'); $comp.eval('say(nqp::execname())')

[18:47] <MasterDuke> nqp: my $comp := nqp::getcomp('nqp'); $comp.eval('say(nqp::execname())')

[18:47] <camelia> nqp-moarvm: OUTPUT: «/home/camelia/rakudo-m-inst-1/bin/nqp-m␤»

[18:48] <patrickb> That could actually work!

[18:48] <patrickb> Thanks!

[18:48] <MasterDuke> np

[19:41] <Geth> ¦ rakudo: c9e94623bc | (Sylvain Colinet)++ | 2 files

[19:41] <Geth> ¦ rakudo: Make the 'is' routine in Test not throwing an error on failure when the type can't be stringified, falling back on .raku instead.

[19:41] <Geth> ¦ rakudo: 

[19:41] <Geth> ¦ rakudo: A good example is the Buf type that has a Str routine that fail to encourage the user to use encode instead.

[19:41] <Geth> ¦ rakudo: 

[19:41] <Geth> ¦ rakudo: is Buf.new(42), Buf.new(43)

[19:41] <Geth> ¦ rakudo: 

[19:41] <Geth> ¦ rakudo: This will fail with the error :

[19:41] <Geth> ¦ rakudo: Cannot use a Buf as a string, but you called the Stringy method on it

[19:41] <Geth> ¦ rakudo: instead of the regular got, expected message.

[19:41] <Geth> ¦ rakudo: 

[19:41] <Geth> ¦ rakudo: This fix issue #3535

[19:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c9e94623bc

[19:41] <linkable6> RAKUDO#3535 [closed]: https://github.com/rakudo/rakudo/issues/3535 Comparing Buf with the is routine from Test does not behave well

[19:41] <Geth> ¦ rakudo: 9a7d0e6c62 | (Vadim Belman)++ (committed using GitHub Web editor) | 2 files

[19:41] <Geth> ¦ rakudo: Merge pull request #3613 from Skarsnik/master

[19:41] <Geth> ¦ rakudo: 

[19:41] <Geth> ¦ rakudo: Fix for 'Comparing Buf with the is routine from Test does not behave well', closes #3535

[19:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9a7d0e6c62

[19:53] <patrickb> MasterDuke: How would I go about retrieving the result of the eval?

[20:00] <Geth> ¦ nqp-configure: 889df0206a | (Vadim Belman)++ | lib/NQP/Config.pm

[20:00] <Geth> ¦ nqp-configure: Change default github community from perl6 to Raku

[20:00] <Geth> ¦ nqp-configure: 

[20:00] <Geth> ¦ nqp-configure: Fixes git URLs for roast and NQP. Closes rakudo/rakudo#3729

[20:00] <Geth> ¦ nqp-configure: review: https://github.com/Raku/nqp-configure/commit/889df0206a

[20:00] <linkable6> RAKUDO#3729 [closed]: https://github.com/rakudo/rakudo/issues/3729 "make spectest" pulls from github:perl6 instead of github:raku

[20:07] <MasterDuke> patrickb: don't know. dirty hack, but maybe just pass in the test, dying if it succeeds and use dies-ok

[20:08] <patrickb> MasterDuke: I think I don't understand.

[20:11] <MasterDuke> well, there's a `sub dies-ok` defined in a couple of the nqp tests. at least once it's given a block that includes a $comp.eval. so either define a `sub lives-ok` or just negate the dies-ok

[20:12] <MasterDuke> something like `#if !jvm lives-ok({ $comp.eval('<whatever your test is>') })`

[20:12] <patrickb> So you are suggesting putting the entire test in a giant eval?

[20:13] <MasterDuke> yeah. it's a hack, but gets around the jvm backend compiler complaining about not having nqp::execname

[20:17] <patrickb> MasterDuke can you have a look at https://github.com/Raku/nqp/blob/master/t/nqp/114-pod-panic.t <- Do you think putting everything in an eval a viable solution in that case?

[20:20] <MasterDuke> run-command is what does the nqp::execname?

[20:21] <patrickb> MasterDuke: https://github.com/patrickbkr/nqp/blob/azure-ci/t/nqp/114-pod-panic.t <- Sorry, wrong link. That's the version including the execname

[20:23] <MasterDuke> heh. would be easier if $cmd could just get the result of an eval...

[20:24] <patrickb> it seems that's actually possible on the JS backend, but not on the others.

[20:24] <MasterDuke> nqp: my $comp := nqp::getcomp("nqp"); my $e := $comp.eval("say(nqp::execname())"); say($e)

[20:24] <camelia> nqp-moarvm: OUTPUT: «/home/camelia/rakudo-m-inst-1/bin/nqp-m␤␤»

[20:25] <MasterDuke> nqp: my $comp := nqp::getcomp("nqp"); my $e := $comp.eval("say(\"execname = \" ~ nqp::execname())"); print($e)

[20:25] <camelia> nqp-moarvm: OUTPUT: «execname = /home/camelia/rakudo-m-inst-1/bin/nqp-m␤»

[20:26] <MasterDuke> you just have to say or print what you want the result to be in the eval

[20:26] <MasterDuke> oh hm. wait

[20:26] <MasterDuke> nope

[20:27] *** Altai-man_ joined
[20:30] *** sena_kun left
[20:30] <patrickb> Would just moving it to t/moar be a sane solution?

[20:31] <MasterDuke> well, copying with a note in each that the other version is the same except for how it get the name?

[20:31] <patrickb> The test is skipped on JVM already...

[20:37] <MasterDuke> nqp: my $comp := nqp::getcomp("nqp"); my $e := try { $comp.eval("nqp::die(nqp::execname())"); CATCH { say("from eval: " ~ $_) } }

[20:37] <camelia> nqp-moarvm: OUTPUT: «from eval: /home/camelia/rakudo-m-inst-1/bin/nqp-m␤»

[20:38] <MasterDuke> patrickb: ^^^ even dirtier hack, but looks like it would work

[20:38] <patrickb> I'm giving it a try

[20:53] <patrickb> MasterDuke: It's looking good so far. I have triggered a CI run to see how it goes on JVM. Thanks for your help!

[20:54] * patrickb is booting into Windows to find another test failure

[20:54] *** patrickb left
[20:54] <MasterDuke> np

[20:58] *** patrickb joined
[21:05] *** lichtkind left
[21:06] *** lichtkind joined
[21:36] *** patrickb left
[21:37] *** patrickb joined
[21:52] <Geth> ¦ nqp: 476642f34b | (Patrick Böker)++ | t/nqp/019-file-ops.t

[21:52] <Geth> ¦ nqp: Correct a wrong skip count on Windows

[21:52] <Geth> ¦ nqp: 

[21:52] <Geth> ¦ nqp: Also remove a bogus check for backends that don't exist. There currently

[21:52] <Geth> ¦ nqp: are only moar, js and jvm.

[21:52] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/476642f34b

[22:28] *** sena_kun joined
[22:30] <Geth> ¦ nqp: 35267b4abd | (Patrick Böker)++ | tools/templates/MOAR_REVISION

[22:30] <Geth> ¦ nqp: Bump MoarVM

[22:30] <Geth> ¦ nqp: 

[22:30] <Geth> ¦ nqp: Pulls in another fix for dir handling on Windows.

[22:30] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/35267b4abd

[22:30] *** Altai-man_ left
[22:50] <Geth> ¦ nqp: c4fcc6438d | (Patrick Böker)++ | t/nqp/114-pod-panic.t

[22:50] <Geth> ¦ nqp: Fix t/nqp/114-pod-panic with a relocated `nqp` executable

[22:50] <Geth> ¦ nqp: 

[22:50] <Geth> ¦ nqp: As `nqp::execname` is an op code not available on JVM and thus resulting

[22:50] <Geth> ¦ nqp: in a compile time error, a quite dirty workaround is used. We hide the op

[22:50] <Geth> ¦ nqp: in an eval and retrieve the value via `die`.

[22:50] <Geth> ¦ nqp: 

[22:50] <Geth> ¦ nqp: Also there is no sane way to retrieve the current nqp executable name

[22:50] <Geth> ¦ nqp: available on the JVM, so skip that test there.

[22:50] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/c4fcc6438d

[22:50] <Geth> ¦ nqp: a5f90ae55e | (Patrick Böker)++ (committed using GitHub Web editor) | t/nqp/114-pod-panic.t

[22:50] <Geth> ¦ nqp: Merge pull request #640 from patrickbkr/fix-114-pod-panic-with-reloc

[22:50] <Geth> ¦ nqp: 

[22:50] <Geth> ¦ nqp: Fix t/nqp/114-pod-panic with a relocated `nqp` executable

[22:50] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/a5f90ae55e

[23:02] *** Kaiepi left
[23:05] *** Kaiepi joined
[23:06] *** patrickz joined
[23:10] *** patrickb left
[23:11] *** sena_kun left
[23:12] *** lichtkind left
[23:35] *** patrickz left
[23:45] *** lucasb left
