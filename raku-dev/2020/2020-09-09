[00:29] *** finsternis joined
[01:06] *** AlexDani` joined
[01:08] *** AlexDaniel left
[01:22] *** maggotbrain777 joined
[01:25] *** maggotbrain left
[02:18] *** maggotbrain777 left
[02:19] *** maggotbrain joined
[02:27] *** maggotbrain left
[02:28] *** maggotbrain joined
[02:42] *** maggotbrain left
[02:43] *** maggotbrain joined
[02:47] *** maggotbrain777 joined
[02:47] *** maggotbrain left
[03:11] *** MasterDuke left
[03:13] *** maggotbrain777 left
[03:14] *** maggotbrain joined
[03:22] *** maggotbrain left
[03:34] *** maggotbrain joined
[03:50] *** maggotbrain777 joined
[03:52] *** maggotbrain left
[03:55] *** [Coke]_ joined
[03:55] *** [Coke]_ left
[03:55] *** [Coke]_ joined
[03:57] *** Geth left
[03:57] *** Geth joined
[03:58] *** [Coke] left
[03:58] *** sjn left
[03:58] *** sjn joined
[04:26] *** [Coke]_ left
[04:35] *** [Coke] joined
[04:35] *** [Coke] left
[04:35] *** [Coke] joined
[05:28] *** squashable6 left
[05:31] *** squashable6 joined
[06:30] <Xliff> Is anyone seeing this? 

[06:30] <Xliff> cp: cannot create regular file '/home/cbwood/Projects/rakudobrew/versions/moar-blead/install/bin/perl6': Text file busy

[06:44] *** domidumont joined
[06:53] *** Altai-man joined
[07:19] *** sena_kun joined
[07:21] *** Altai-man left
[07:49] *** maggotbrain777 left
[07:52] *** maggotbrain joined
[08:12] *** domidumont left
[08:16] *** domidumont joined
[09:35] <lizmat> Files=1336, Tests=113586, 222 wallclock secs (29.23 usr  8.46 sys + 3095.30 cusr 289.30 csys = 3422.29 CPU)

[09:35] <lizmat> Xliff: not me

[09:55] <Xliff> lizmat: ?

[09:55] <Xliff> lizmat: Responding to my PM?

[09:55] <lizmat> no, responding to: <Xliff>	Is anyone seeing this? 

[09:56] <Xliff> Oh. OK.

[09:56] <Xliff> I'm getting that from 'rakudobrew build moar-blead'

[09:58] <lizmat> feels like w Windows thing to me

[09:58] <lizmat> *a

[09:58] <Xliff> Linux

[09:58] <lizmat> hmmm...

[09:59] <lizmat> https://stackoverflow.com/questions/16764946/what-generates-the-text-file-busy-message-in-unix 

[10:00] <Xliff> Odd. There should be no other build processes running.

[10:00] <Xliff> lizmat: Not getting it with 'rakudobrew moar-blead HEAD~~'

[10:03] <timotimo> Xliff: normally it means that a process using this binary is still running

[10:03] <Xliff> lizmat: 'rakudobrew build moar-blead HEAD~' is also fine.

[10:04] <Xliff> *sigh* -- Someone may want to get nine to look into R#3861

[10:04] <linkable6> R#3861 [closed]: https://github.com/rakudo/rakudo/pull/3861 Precomp store parallelism

[10:05] <Xliff> Looks like the parallelism code may be affecting the installation process. That is just a guess based on the above results.

[10:07] *** Kaiepi left
[10:09] *** Kaiepi joined
[10:21] <[TuxCM]> Rakudo version 2020.08.2-59-ge65466fcd - MoarVM version 2020.08-91-g590bac47e

[10:21] <[TuxCM]> csv-test-xs-20      0.390 -  0.397

[10:21] <[TuxCM]> test-t --race       0.834 -  0.841

[10:21] <[TuxCM]> csv-ip5xs           0.981 -  1.003

[10:21] <[TuxCM]> test-t              1.856 -  1.902

[10:21] <[TuxCM]> test                7.741 -  7.889

[10:21] <[TuxCM]> test-t-20 --race    9.041 -  9.351

[10:21] <[TuxCM]> csv-ip5xs-20        9.891 - 10.207

[10:21] <[TuxCM]> csv-parser         24.827 - 26.619

[10:21] <[TuxCM]> test-t-20          32.006 - 32.557

[10:27] <Xliff> [TuxCM] You were able to build latest rakudo-blead?

[10:30] <Xliff> HUH! 

[10:30] <Xliff> Had a zombie process running!

[10:32] <Xliff> OK. moar-blead built successfully! Sorry for the false alarm.

[10:37] <lizmat> ahh... zombies   

[10:39] <[TuxCM]> Xliff, I didn't check if it was rebuilt. Is that version old(ish)?

[10:40] <[TuxCM]> trying again

[10:40] <Xliff> [TuxCM] - Nope was having problems building moar-blead. Trouble was I had a zombie process preventing the executable from being updated and it was causing the process to fail.

[10:40] <Xliff> You don't need to try again.

[10:41] <Xliff> My version string now matches yours.

[10:42] <[TuxCM]> üëçüëçüëçüëçüëç

[11:18] *** Kaiepi left
[11:18] *** Altai-man joined
[11:21] *** sena_kun left
[11:26] *** Kaiepi joined
[11:37] *** Kaiepi left
[11:39] *** leont joined
[11:50] <Geth> ¬¶ rakudo/ugexe-cur-emulates: 30e8c9ac13 | (Nick Logan)++ | src/core/CompUnit/Repository/FileSystem.pm6

[11:50] <Geth> ¬¶ rakudo/ugexe-cur-emulates: Add `emulates` support for CURFS

[11:50] <Geth> ¬¶ rakudo/ugexe-cur-emulates: 

[11:50] <Geth> ¬¶ rakudo/ugexe-cur-emulates: Implements `emulates` support as described in s22. Note this can

[11:50] <Geth> ¬¶ rakudo/ugexe-cur-emulates: only work for a distribution with a META6.json since this info

[11:50] <Geth> ¬¶ rakudo/ugexe-cur-emulates: cannot be inferred like many other fields.

[11:50] <Geth> ¬¶ rakudo/ugexe-cur-emulates: review: https://github.com/rakudo/rakudo/commit/30e8c9ac13

[11:50] <Geth> ¬¶ rakudo/ugexe-cur-emulates: 02c46a96b4 | (Nick Logan)++ | src/core/CompUnit/Repository/Installation.pm6

[11:51] <Geth> ¬¶ rakudo/ugexe-cur-emulates: Add `emulates` support for CURI

[11:51] <Geth> ¬¶ rakudo/ugexe-cur-emulates: review: https://github.com/rakudo/rakudo/commit/02c46a96b4

[11:51] <Geth> ¬¶ rakudo/ugexe-cur-emulates: 363e2a4861 | (Elizabeth Mattijsen)++ | 2 files

[11:51] <Geth> ¬¶ rakudo/ugexe-cur-emulates: Merge branch 'cur-emulates' of https://github.com/ugexe/rakudo into ugexe-cur-emulates

[11:51] <Geth> ¬¶ rakudo/ugexe-cur-emulates: review: https://github.com/rakudo/rakudo/commit/363e2a4861

[11:51] <lizmat> ok, I'm confused now

[11:52] <lizmat> this was supposed to fix the conflicts on https://github.com/rakudo/rakudo/pull/2732

[11:52] <lizmat> except, I didn't see any conflicts

[11:52] * lizmat still does not like branchs

[11:53] <lizmat> ugexe: I tried

[12:21] <ugexe> ah, the PR came from my fork

[12:23] <lizmat> afk for a few hours&

[12:48] *** dogbert17 left
[13:10] *** brrt joined
[15:19] *** sena_kun joined
[15:21] *** Altai-man left
[15:53] <Geth> ¬¶ rakudo/rakuast: 9f562c1a57 | (Jonathan Worthington)++ | 5 files

[15:53] <Geth> ¬¶ rakudo/rakuast: RakuAST hash composer, block vs. hash distinction

[15:53] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/9f562c1a57

[15:56] *** Kaiepi joined
[16:04] *** Kaiepi left
[16:56] <Geth> ¬¶ rakudo/rakuast: 51820000f7 | (Jonathan Worthington)++ | src/Raku/ast/scoping.rakumod

[16:56] <Geth> ¬¶ rakudo/rakuast: Add missing generate-lookup implementation

[16:56] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/51820000f7

[16:56] <Geth> ¬¶ rakudo/rakuast: 381b58a901 | (Jonathan Worthington)++ | 4 files

[16:56] <Geth> ¬¶ rakudo/rakuast: Implement tagged imports

[16:56] <Geth> ¬¶ rakudo/rakuast: 

[16:56] <Geth> ¬¶ rakudo/rakuast: Adding enough to be able to interpret the tags (in the current compiler

[16:56] <Geth> ¬¶ rakudo/rakuast: they entail compilation to bytecode).

[16:56] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/381b58a901

[17:03] *** MasterDuke joined
[17:14] *** brrt left
[18:30] *** Kaiepi joined
[19:15] <timotimo> is there a way to do IMPL-INTERPRET testing besides using a BEGIN prefix? like EVAL could in theory take a named argument / option to interpret instead of bytecode-compile

[19:15] <timotimo> not sure if a user can just create their own InterpContext from scratch

[19:16] <timotimo> oh ... that is a pretty empty class ... completely empty actually

[19:17] <timotimo> i mean, it has IMPL in the name, so clearly not user-facing

[19:18] *** Altai-man joined
[19:21] *** sena_kun left
[19:24] <timotimo> ok, RakuAST::Call::Name not being implemented for interpretation would probably be hit by a lot of code i guess, so why not have a quick little look at how that would look

[19:25] *** Altai-man left
[19:35] <timotimo> ah, perform-begin gets a working Resolver passed in, so that doesn't have an equivalent for interpreting without BEGIN

[20:32] *** domidumont left
[20:33] *** brrt joined
[20:33] *** domidumont joined
[20:33] *** domidumont left
[20:37] <timotimo> env RAKUDO_RAKUAST=1 ./rakudo-m --ll-exception --stagestats -e 'my $ctx = RakuAST::IMPL::InterpContext.new; BEGIN say 99'

[20:37] <timotimo> outputs 99

[20:37] <timotimo> well, creating the ctx is left-over from earlier stuff

[20:47] *** AlexDani` left
[20:52] <timotimo> anyway, say 99 is good, but say 99 + 5 would be *better*

[20:58] *** MasterDuke left
[21:09] <timotimo> hm. does ApplyInfix need something to put named arguments for adverbs and such

[21:13] *** MasterDuke joined
[21:30] <timotimo> neat, i can output 99 + 5 now

[21:31] <Geth> ¬¶ rakudo/rakuast: afdb7c5e9e | (Timo Paulssen)++ | 2 files

[21:31] <Geth> ¬¶ rakudo/rakuast: naive begin-time interpret for infixes and named sub calls

[21:31] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/afdb7c5e9e

[21:36] <MasterDuke> cool

[21:43] <timotimo> so, we want to get most of the BEGIN time stuff from the core setting interpretable

[21:44] <timotimo> one of the very first things is a nqp::bindhllsym call :D

[21:44] <timotimo> and so far we can only reach nqp ops by having it in compilation somewhere

[21:56] <timotimo> of course at any time we can fall back to a full compile-and-execute cycle

[22:01] *** [Coke] left
[22:04] *** [Coke] joined
[22:04] *** [Coke] left
[22:04] *** [Coke] joined
[22:06] <timotimo> getting all the trait_mod subs working with interpretation will, of course, be worth a lot

[22:29] *** brrt left
