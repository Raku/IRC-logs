[00:01] *** sena_kun joined
[00:03] *** Altai-man_ left
[00:55] *** Xliff joined
[01:30] *** softmoth joined
[02:01] *** Altai-man_ joined
[02:03] *** sena_kun left
[02:21] *** softmoth left
[02:22] *** softmoth joined
[04:02] *** sena_kun joined
[04:03] *** Altai-man_ left
[04:53] *** sena_kun left
[04:54] *** sena_kun joined
[06:01] *** Altai-man_ joined
[06:04] *** sena_kun left
[06:49] *** Xliff left
[06:57] *** Kaeipi left
[07:00] *** Kaiepi joined
[07:11] *** softmoth left
[07:45] <nine> AlexDaniel: hello?

[07:53] <MasterDuke> nine: i think he was pinging about https://github.com/rakudo/rakudo/issues/3769

[08:01] *** sena_kun joined
[08:03] *** Altai-man_ left
[08:13] *** JJMerelo joined
[08:26] <timotimo> how come nothing ever exploded due to missing frames?

[08:26] <timotimo> they are only present, but not useful, perhaps?

[08:45] <nine> yes

[08:45] <nine> I.e. they are only run during compilation

[08:55] <timotimo> ah, bummer that we can't get rid of them

[09:00] <timotimo> unless we can, somehow

[09:12] *** JJMerelo left
[09:18] <nine> We probably could. But why invest the time?

[09:20] <timotimo> i cry a little inside when i think of all the times i tried to make core setting size smaller :D

[09:21] <nine> Making the stuff we read smaller certainly helps as we have to read less. But stuff that we don't actually read shouldn't cause any issues and indeed I haven't seen any benchmarks getting worse

[09:23] <timotimo> right. just a thing of install size

[09:52] <nine> Which hasn't been a topic previously

[10:01] *** Altai-man_ joined
[10:03] *** sena_kun left
[10:42] *** JJMerelo joined
[11:28] <AlexDaniel> whatever

[11:28] <AlexDaniel> you want to slap 13M on top of the installation, feel free

[11:28] <AlexDaniel> I'm just maintaining the bots

[11:44] *** patrickb joined
[11:52] <Altai-man_> I suspect this change wasn't done on a whim "Oh let's add something into our precomp files", but has technical reasoning behind it.

[11:56] *** lichtkind joined
[11:58] <nine> The gist is: I had good reason for the change. I'm pretty sure we could reduce the size gains or even eliminate them completely. I'm also sure it's going to be complicated and cause a couple of headaches.

[11:58] <nine> Thus I think my time is better spent on in-process precompilation as that seems to be able to cut compilation times by 1/3 for multi-file code bases.

[12:01] <lizmat> nine++

[12:01] *** sena_kun joined
[12:02] <ShimmerFairy> space is pretty cheap nowadays, I'd be shocked if rakudo's size became a serious issue.

[12:03] <timotimo> we do have one build for every commit

[12:03] *** Altai-man_ left
[12:03] <nine> It can matter on embedded systems like WiFi routers. But on mine, where I run FHEM for home automation which is written in Perl, even perl is too large and I had to move it onto an attached disk.

[12:06] <ShimmerFairy> That's true, I forgot about embedded systems. .oO(and I suppose space isn't all that cheap on SSDs either)

[12:07] <lizmat> timotimo: bzipping reduces by 50+% ?

[12:08] <timotimo> we use zstd; would have to ask AD how the builds compare compressed

[12:09] <nine> Nah, even if you use super fast storage, you end up at about 120 Euros per TB. So storing a 57 MB rakudo installation on super fast NVME costs about 0.7 Euro Cents.

[12:13] <ShimmerFairy> Last I checked, HDDs are still incredibly cheap for the storage.

[12:14] <nine> Yeah, they cost practically nothing

[12:28] *** JJMerelo left
[12:45] *** Kaiepi left
[12:48] *** Kaiepi joined
[12:51] <Kaiepi> gonna start testing out my dns changes on more platforms once windows update finishes up

[12:51] <Kaiepi> they perform fairly well on my own machine, but not so much my freebsd box

[12:52] <Kaiepi> could be a configuration thing or st, not quite sure until i see how it does on linux and windows

[13:02] *** Kaeipi joined
[13:06] *** Kaiepi left
[13:13] *** Kaeipi left
[13:49] <AlexDaniel> timotimo: well, you can check it yourself

[13:49] <AlexDaniel> shareable6: HEAD

[13:49] <shareable6> AlexDaniel, https://whateverable.6lang.org/HEAD

[13:49] <AlexDaniel> shareable6: 537f8877034^

[13:49] <shareable6> AlexDaniel, https://whateverable.6lang.org/537f8877034^

[13:50] <AlexDaniel> that's a difference of 0.5M per build

[13:51] <AlexDaniel> but then, for older stuff, multiple builds are compressed with long-range compression, so it's possible that it doesn't matter at all

[13:52] <AlexDaniel> for me that is

[13:53] <AlexDaniel> but then if you want to talk about it, then first get me a server with this cheap magical 1 TB SSD, and then we can have a discussion

[13:54] <AlexDaniel> I know I can buy it for my own computers, but I'm not using my own computers to run whateverable

[13:55] <AlexDaniel> sena_kun: it's not about doing it on a whim, but we have to acknowledge that nobody knew that this change increases installation size by 13M

[13:57] *** softmoth joined
[13:58] <sena_kun> AlexDaniel, fair enough. I suspect dispatcher overhaul can have some positive influence on space, since bytecode promises to be shorter. No idea how much until it's done, though.

[13:58] *** lucasb joined
[13:59] <AlexDaniel> thing is, you can make it 1 GB per installation and then claim that the space is cheap, I don't care anymore

[13:59] <nine> sena_kun: my guess, a few %, nothing major

[13:59] <nine> AlexDaniel: what machine does whateverable run on?

[14:00] <AlexDaniel> nine: it's my server

[14:00] <AlexDaniel> well, a dedicated server I pay for

[14:01] *** Altai-man_ joined
[14:01] <Altai-man_> nine, well, then not so much. I was under an impression raku bytecode is heavy on calls, though maybe it is not _so_ heavy considering inlining and other tricks.

[14:01] <nine> AlexDaniel: my server's got some 750G unclaimed space left. Would that help with anything?

[14:01] <AlexDaniel> nine: Xeon E3-1245 V2, 3x 120GB SSDs in RAID1, 16GB of RAM

[14:02] <AlexDaniel> bots take around 10GB of RAM I think

[14:02] <AlexDaniel> and less than 40GB of storage

[14:02] <AlexDaniel> if that's 750G of space on SSDs then it will make bisectable a tiny bit faster

[14:03] *** sena_kun left
[14:04] <AlexDaniel> (because I won't be compressing builds as aggressively)

[14:08] <AlexDaniel> if you're willing to run the bots then I can perhaps dockerize them a bit better so that it's easier for you

[14:10] <nine> Sadly it's still HDD. It's an i7-2600 CPU @ 3.40GHz, 32 GB RAM and 2x3T hard drives. Really can't complain for 32,27 Euros per month.

[14:12] <AlexDaniel> mine is also 32‚Ç¨ per month

[14:21] *** b2gills left
[14:55] *** Xliff joined
[14:55] *** Kaiepi joined
[14:56] *** Xliff left
[15:02] <Geth> ¬¶ rakudo/match-refactor: 11 commits pushed by (Elizabeth Mattijsen)++

[15:02] <Geth> ¬¶ rakudo/match-refactor: review: https://github.com/rakudo/rakudo/compare/19f0f53e0bc9...c8677f337de6

[15:03] * lizmat hates branches

[15:11] <Altai-man_> lizmat, o/

[15:11] <lizmat> Altai-man_ o/

[15:11] <lizmat> and?  Blin results ?

[15:11] <Altai-man_> https://gist.github.com/Altai-man/757af6b66da3e4233537edaa35641767 <- the match-refactor branch output. There are quite a lot of modules, so pick one which sounds the easier.

[15:12] <lizmat> Altai-man_: thanks!

[15:12] <Altai-man_> Yup, just recalled that because of the branch notion, guess they are not so bad. :)

[15:12] <Altai-man_> You are welcome, ping me anytime if anything else can be be helpful.

[15:12] <lizmat> I will!

[15:16] *** b2gills joined
[15:27] *** Kaiepi left
[15:27] <AlexDaniel> Altai-man_: oh, that's Blin running for a branch? It works?

[15:27] <AlexDaniel> awesome

[15:27] <AlexDaniel> I wasn't entirely sure if I actually made it work

[15:28] <AlexDaniel> let me know if there are any issues

[15:28] <Altai-man_> AlexDaniel, yeah, just worked fine thanks to your patches. :)

[15:28] <Altai-man_> AlexDaniel, sure! Thank you for working on it.

[15:28] <AlexDaniel> ‚ô•

[15:29] <Geth> ¬¶ rakudo/match-refactor: f49982c991 | (Elizabeth Mattijsen)++ | src/core.c/Match.pm6

[15:29] <Geth> ¬¶ rakudo/match-refactor: Apparently, we can directly work with Cool values

[15:29] <Geth> ¬¶ rakudo/match-refactor: 

[15:29] <Geth> ¬¶ rakudo/match-refactor: This fixes Template::Mustache

[15:29] <Geth> ¬¶ rakudo/match-refactor: review: https://github.com/rakudo/rakudo/commit/f49982c991

[15:31] <AlexDaniel> c: match-refactor say 42

[15:31] <committable6> AlexDaniel, ¬¶match-refactor: ¬´42‚ê§¬ª

[15:31] <AlexDaniel> lizmat: you can also do that ‚Üë

[15:33] <AlexDaniel> c: match-refactor say $*PERL.compiler.version

[15:33] <committable6> AlexDaniel, ¬¶match-refactor: ¬´v2020.06.14.g.19.f.0.f.53.e.0‚ê§¬ª

[15:34] <AlexDaniel> hmm I don't know what it does for force pushes

[15:34] <AlexDaniel> but please start using it and tell me about the problems, I'll fix it

[15:37] <lizmat> AlexDaniel: thanks, but for me it's more important to run things on HEAD to compare, so I just use camelia for that privately

[15:38] <AlexDaniel> hmmmmmmmmmmmm

[15:38] <AlexDaniel> lizmat: what if evalable was answering your private messages?

[15:38] <AlexDaniel> and committable

[15:39] <lizmat> that would be nice

[15:39] <AlexDaniel> lizmat: do you have a cloak?

[15:40] <AlexDaniel> lizmat: e.g. try `/whois AlexDaniel` it'll say (~user@perl6/developer/alexdaniel)

[15:41] <lizmat> don't think I have one ?

[15:41] <AlexDaniel> mst: can you give a raku/developer cloak to lizmat?

[15:41] <AlexDaniel> mst: moreover can you change existing ones from perl6 to raku?

[15:50] *** Kaiepi joined
[16:01] *** sena_kun joined
[16:03] *** Altai-man_ left
[16:24] *** JJMerelo joined
[16:29] <Geth> ¬¶ rakudo/match-refactor: 3a37f876c7 | (Elizabeth Mattijsen)++ | src/core.c/Match.pm6

[16:29] <Geth> ¬¶ rakudo/match-refactor: Make the .from and .to method private

[16:29] <Geth> ¬¶ rakudo/match-refactor: 

[16:29] <Geth> ¬¶ rakudo/match-refactor: This is one of the disadvantages of having merged the Cursor into the

[16:29] <Geth> ¬¶ rakudo/match-refactor: Match.  Because .from is now a HLL method, it was shadowing a rule with

[16:29] <Geth> ¬¶ rakudo/match-refactor: the same name in any grammar.

[16:29] <Geth> ¬¶ rakudo/match-refactor: 

[16:29] <Geth> ¬¶ rakudo/match-refactor: Match eqv Match now checks from/to attribute directly.

[16:29] <Geth> ¬¶ rakudo/match-refactor: 

[16:29] <Geth> ¬¶ rakudo/match-refactor: Fixes Docker::File.

[16:29] <Geth> ¬¶ rakudo/match-refactor: review: https://github.com/rakudo/rakudo/commit/3a37f876c7

[16:34] *** Kaiepi left
[16:58] <AlexDaniel> c: match-refactor say 42

[16:58] <committable6> AlexDaniel, ¬¶match-refactor: ¬´42‚ê§¬ª

[16:59] <AlexDaniel> c: match-refactor say $*PERL.compiler.version

[16:59] <committable6> AlexDaniel, ¬¶match-refactor: ¬´v2020.06.27.g.3.a.37.f.876.c‚ê§¬ª

[16:59] <AlexDaniel> oh, it's working

[16:59] <AlexDaniel> nice

[16:59] <AlexDaniel> btw, one interesting thing the bots can do

[16:59] <AlexDaniel> is

[16:59] <AlexDaniel> bisectable6: vars

[16:59] <bisectable6> AlexDaniel, Will bisect the whole range automagically because no endpoints were provided, hang tight

[16:59] <AlexDaniel> :|

[16:59] <AlexDaniel> okay maybe it doesn't work after all

[16:59] <AlexDaniel> committable6: vars

[16:59] <committable6> AlexDaniel, timeout=10

[16:59] <bisectable6> AlexDaniel, ¬¶6c (44 commits): ¬´04===SORRY!04=== Error while compiling /tmp/KwIPDlQ3cP‚ê§Undeclared routine:‚ê§    vars used at line 1. Did you mean 'VAR'?‚ê§‚ê§ ¬´exit code = 1¬ª¬ª

[16:59] <bisectable6> AlexDaniel, Nothing to bisect!

[17:00] <AlexDaniel> committable6: timeout=50

[17:00] <committable6> AlexDaniel, timeout is now set to ‚Äú50‚Äù (default value is ‚Äú10‚Äù)

[17:00] <AlexDaniel> it used to be half-broken because of the %*BOT-ENV thing, but with an upcoming commit it'll be fixed

[17:00] <AlexDaniel> bisectable6: timeout=20

[17:00] <bisectable6> AlexDaniel, Will bisect the whole range automagically because no endpoints were provided, hang tight

[17:01] <AlexDaniel> okay some kind of priority issue

[17:01] <bisectable6> AlexDaniel, ¬¶6c (44 commits): ¬´04===SORRY!04=== Error while compiling /tmp/JrC13tlJA3‚ê§Undeclared routine:‚ê§    timeout used at line 1‚ê§‚ê§ ¬´exit code = 1¬ª¬ª

[17:01] <bisectable6> AlexDaniel, Nothing to bisect!

[17:01] <AlexDaniel> releasable6: vars

[17:01] <releasable6> AlexDaniel, branch=master; timeout=10

[17:02] <AlexDaniel> sena_kun: ‚Üë for example, this way you can set releasable to complain about some other branch (release branch) instead of master

[17:03] <AlexDaniel> let's actually see if this works

[17:03] <AlexDaniel> evalable6: vars

[17:03] <evalable6> AlexDaniel, commit=HEAD; timeout=10

[17:03] <AlexDaniel> evalable6: commit=match-refactor

[17:03] <evalable6> AlexDaniel, commit is now set to ‚Äúmatch-refactor‚Äù (default value is ‚ÄúHEAD‚Äù)

[17:03] <AlexDaniel> evalable6: say $*PERL.compiler.version

[17:03] <evalable6> AlexDaniel, rakudo-moar 3a37f876c: OUTPUT: ¬´v2020.06.27.g.3.a.37.f.876.c‚ê§¬ª

[17:03] <sena_kun> Hm-hm, this is very interesting.

[17:03] <AlexDaniel> lizmat: ‚Üë

[17:03] <AlexDaniel> so evalable6 is one command away from tracking a different branch

[17:05] <lizmat> :-)

[17:05] <AlexDaniel> and any constant can be easily turned into a variable, so we can make these bots as configurable as you want

[17:06] <AlexDaniel> evalable6: commit=HEAD

[17:06] <evalable6> AlexDaniel, commit is now set to ‚ÄúHEAD‚Äù (default value is ‚ÄúHEAD‚Äù)

[17:06] <AlexDaniel> actually

[17:07] <AlexDaniel> evalable6: reset commit

[17:07] <evalable6> AlexDaniel, rakudo-moar f1960baa9: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/tMWMbf45Wo‚ê§Undeclared routines:‚ê§    commit used at line 1‚ê§    reset used at line 1‚ê§‚ê§¬ª

[17:07] <AlexDaniel> hmm don't remember how to do that :D

[17:07] <AlexDaniel> evalable6: commit=reset

[17:07] <evalable6> AlexDaniel, commit is now set to its default value ‚ÄúHEAD‚Äù

[17:07] <AlexDaniel> ah, this is how

[17:09] <AlexDaniel> the changes only last till the bot is restarted, so don't worry about breaking anything

[17:19] *** MasterDuke left
[17:59] *** JJMerelo left
[18:01] *** Altai-man_ joined
[18:03] *** sena_kun left
[20:01] *** sena_kun joined
[20:03] *** Altai-man_ left
[20:35] *** finsternis joined
[21:10] <Geth> ¬¶ rakudo/match-refactor: 47124c44e9 | (Elizabeth Mattijsen)++ | src/core.c/INTERPOLATE.pm6

[21:10] <Geth> ¬¶ rakudo/match-refactor: Simplify !cursor_pass logic in INTERPOLATE

[21:10] <Geth> ¬¶ rakudo/match-refactor: 

[21:10] <Geth> ¬¶ rakudo/match-refactor: - only do the bare essentials, which is all what INTERPOLATE needs

[21:10] <Geth> ¬¶ rakudo/match-refactor: review: https://github.com/rakudo/rakudo/commit/47124c44e9

[21:22] <Geth> ¬¶ rakudo/match-refactor: ab75e253d8 | (Elizabeth Mattijsen)++ | src/core.c/INTERPOLATE.pm6

[21:22] <Geth> ¬¶ rakudo/match-refactor: Move lack of support for hashes into a separate candidate

[21:22] <Geth> ¬¶ rakudo/match-refactor: review: https://github.com/rakudo/rakudo/commit/ab75e253d8

[21:30] *** softmoth left
[21:33] *** softmoth joined
[21:40] *** softmoth left
[21:45] <Geth> ¬¶ rakudo/match-refactor: ee0174ac9f | (Elizabeth Mattijsen)++ | src/core.c/INTERPOLATE.pm6

[21:45] <Geth> ¬¶ rakudo/match-refactor: Turn a condition around

[21:45] <Geth> ¬¶ rakudo/match-refactor: 

[21:45] <Geth> ¬¶ rakudo/match-refactor: Saves 1 not per INTERPOLATE

[21:45] <Geth> ¬¶ rakudo/match-refactor: review: https://github.com/rakudo/rakudo/commit/ee0174ac9f

[22:01] *** Altai-man_ joined
[22:03] *** sena_kun left
[22:03] <Altai-man_> lizmat, want another blin run?

[22:04] <lizmat> yes, please :-)

[22:05] <lizmat> it will still contain fails, like Inline::Perl5, but others may be fixed other than the ones I specifically checked

[22:05] <Altai-man_> started

[22:05] <lizmat> Altai-man++

[22:05] <Altai-man_> yes, think will help to narrow things down a bit

[22:12] *** nebuchadnezzar left
[22:48] *** lucasb left
[23:35] *** nebuchadnezzar joined
[23:47] *** patrickb left
