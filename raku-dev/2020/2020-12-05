[01:05] *** lucasb left
[01:05] *** leont left
[01:51] *** Xliff left
[02:10] *** finsternis joined
[03:13] *** JJAtria[m] left
[03:13] *** kawaii left
[03:18] *** JJAtria[m] joined
[03:18] *** kawaii joined
[04:18] *** benchable6 left
[04:18] *** nativecallable6 left
[04:18] *** sourceable6 left
[04:18] *** evalable6 left
[04:18] *** coverable6 left
[04:18] *** linkable6 left
[04:18] *** tellable6 left
[04:18] *** shareable6 left
[04:18] *** unicodable6 left
[04:18] *** statisfiable6 left
[04:18] *** releasable6 left
[04:18] *** bloatable6 left
[04:18] *** greppable6 left
[04:18] *** committable6 left
[04:18] *** quotable6 left
[04:18] *** notable6 left
[04:18] *** squashable6 left
[04:18] *** bisectable6 left
[04:19] *** sourceable6 joined
[04:20] *** statisfiable6 joined
[04:20] *** releasable6 joined
[04:20] *** notable6 joined
[04:20] *** linkable6 joined
[04:20] *** unicodable6 joined
[04:20] *** bloatable6 joined
[04:20] *** evalable6 joined
[04:20] *** coverable6 joined
[04:20] *** benchable6 joined
[04:21] *** shareable6 joined
[04:21] *** quotable6 joined
[04:21] *** greppable6 joined
[04:21] *** committable6 joined
[04:21] *** tellable6 joined
[04:21] *** nativecallable6 joined
[04:21] *** squashable6 joined
[04:21] *** bisectable6 joined
[05:00] *** frost-lab joined
[05:11] *** frost-lab left
[05:20] *** frost-lab joined
[06:14] *** Altai-man joined
[08:20] *** Altai-man left
[08:29] *** patrickb joined
[08:39] *** Xliff joined
[08:40] <Xliff> m: say 42.?"bbb"()

[08:40] <camelia> rakudo-moar 6c7044ec3: OUTPUT: «Nil␤»

[08:40] <Xliff> m: say 42.?"sin"()

[08:40] <camelia> rakudo-moar 6c7044ec3: OUTPUT: «-0.9165215479156338␤»

[10:30] *** Altai-man joined
[11:55] <[Tux]> is JJ here on IRC?

[11:57] <[Tux]> ignore that question. tickets are already on github

[12:50] <Geth> ¦ rakudo/expose-junction-type: befb03df26 | (Elizabeth Mattijsen)++ | src/core.c/Junction.pm6

[12:50] <Geth> ¦ rakudo/expose-junction-type: Expose the type of a Junction

[12:50] <Geth> ¦ rakudo/expose-junction-type: 

[12:50] <Geth> ¦ rakudo/expose-junction-type: any <any all none one>

[12:50] <Geth> ¦ rakudo/expose-junction-type: review: https://github.com/rakudo/rakudo/commit/befb03df26

[12:51] <Geth> ¦ rakudo: lizmat++ created pull request #4087: Expose the type of a Junction

[12:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4087

[13:07] *** sena_kun joined
[13:09] *** Altai-man left
[14:08] *** frost-lab left
[14:16] <sena_kun> Is there anything like Hash::Concurrent?

[14:50] <lizmat> I think jnthn implemented something like that ?

[14:51] <lizmat> ah, no, Concurrent::Iterator

[14:59] *** ugexe joined
[14:59] <ugexe> 6c: my @needles = "foo"; do given any(@needles) { when "foo" { say "OK" }; default { say "wut" }; };

[15:00] <committable6> ugexe, https://gist.github.com/f51e3cccd5cde992d536ff9954eb1238

[15:00] <ugexe> bisectable6: my @needles = "foo"; do given any(@needles) { when "foo" { say "OK" }; default { say "wut" }; };

[15:00] <bisectable6> ugexe, Will bisect the whole range automagically because no endpoints were provided, hang tight

[15:00] <bisectable6> ugexe, Output on all releases: https://gist.github.com/5691f8317eef4abfd04c8eb33e60c698

[15:00] <bisectable6> ugexe, Bisecting by output (old=2020.11 new=6c7044e) because on both starting points the exit code is 0

[15:00] <bisectable6> ugexe, bisect log: https://gist.github.com/9177f3864738a3cc95e015c0eb6a41c7

[15:00] <bisectable6> ugexe, (2020-11-15) https://github.com/rakudo/rakudo/commit/c080e59404ed1b27e8841249e1c71d7e013c09ca

[15:01] <bisectable6> ugexe, Output on all releases and bisected commits: https://gist.github.com/6654304382f29b778f2db7e816a45f89

[15:01] <ugexe> MasterDuke: ^

[15:03] <ugexe> that causes the --verbose --debug etc flags of zef to be ignored

[15:23] <ugexe> https://github.com/rakudo/rakudo/issues/4089

[15:46] *** domidumont joined
[16:23] *** moray joined
[16:23] *** moray is now known as morayj

[16:25] <MasterDuke> ugexe: hm, have a possible fix for that to try, but maybe the whole thing needs to be scrapped. will probably give it a go today or tomorrow

[16:32] <lizmat> MasterDuke: shall I revert the commit for now then?

[16:32] <lizmat> to reduce the pressure on you ?

[16:42] <MasterDuke> lizmat: i actually have a couple min now to work on it, but if it doesn't work then yeah

[16:57] *** Xliff left
[16:57] <MasterDuke> lizmat: are errors in t/spec/S09-typed-arrays/native-num.rakudo.moar expected right now?

[16:57] <MasterDuke> # Expected: Cannot delete from a natively typed array

[16:57] <MasterDuke> # Got:      Cannot delete from a native num array

[16:57] <lizmat> I think you missed a roast update ?

[16:58] <lizmat> nooo... I forgot to do a commit and a push

[16:58] <MasterDuke> cd t/spec && git pull --ff-onlyAlready up to date.

[16:59] <Geth> ¦ roast: 1a84eefa47 | (Elizabeth Mattijsen)++ | S09-typed-arrays/native-num.t

[16:59] <Geth> ¦ roast: Fix up more exact error message

[16:59] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/1a84eefa47

[16:59] <lizmat> MasterDuke++  thanks for the headsup

[16:59] <MasterDuke> heh, glad it wasn't a problem with my fix

[17:06] *** Altai-man joined
[17:09] *** sena_kun left
[17:12] <Geth> ¦ rakudo: lizmat self-assigned calling an undeclared routine in the REPL undeclares all variables https://github.com/rakudo/rakudo/issues/4088

[17:18] *** leont joined
[17:19] <MasterDuke> ok, looks like the fix works

[17:31] <[Coke]> MasterDuke++ lizmat++

[17:32] <[Coke]> Nothing like a 6am saturday prod rollout for $dayjob...

[17:37] <ugexe> i know the pain... this is the first weekend i've had off in weeks -_-

[17:46] *** domidumont left
[17:58] <Geth> ¦ rakudo: MasterDuke17++ created pull request #4091: Use Raku instead of NQP ops for literals in a when

[17:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4091

[18:01] <Altai-man> releasable6, status

[18:01] <releasable6> Altai-man, Next release in ≈14 days and ≈0 hours. 3 blockers. 0 out of 95 commits logged

[18:01] <releasable6> Altai-man, Details: https://gist.github.com/56ea33f5d3360e6b67f94860fab2bc62

[18:06] <ugexe> oh, was that regression in the last release?

[18:06] <ugexe> ah nope, the commit is that old but it wasnt merged till after

[18:07] <Altai-man> rba, ping?

[18:43] <Geth> ¦ rakudo: 6f7718cef2 | (Elizabeth Mattijsen)++ | src/core.c/REPL.pm6

[18:43] <Geth> ¦ rakudo: Only reset "before" code in the REPL when we can

[18:43] <Geth> ¦ rakudo: 

[18:43] <Geth> ¦ rakudo: Fixes #4088

[18:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6f7718cef2

[18:43] <linkable6> RAKUDO#4088 [closed]: https://github.com/rakudo/rakudo/issues/4088 calling an undeclared routine in the REPL undeclares all variables

[18:51] *** morayj left
[19:28] <Geth> ¦ problem-solving: Altai-man assigned to JJ Issue Documentation search categories are not standartized https://github.com/Raku/problem-solving/issues/250

[19:41] *** ggoebel_ left
[19:53] <ugexe> Im starting to think IO::Path.relative() and Spec.abs2rel are not thread safe

[19:54] <ugexe> https://github.com/rakudo/rakudo/blob/6f7718cef2e054addd5a888ba7bc64218deb78c7/src/core.c/IO/Spec/Unix.pm6#L214-L218

[19:54] <ugexe> https://github.com/rakudo/rakudo/blob/6f7718cef2e054addd5a888ba7bc64218deb78c7/src/core.c/IO/Spec/Unix.pm6#L271-L273

[19:56] <ugexe> the code in the first link calls into the code in the second. my guess is that $*CWD in the second link can become stale

[20:04] <ugexe> `zef install HTTP::UserAgent --test-degree=2` occasionally triggers an error where one of the first tests cant find some file because its prefixed with an additional ../../

[20:08] <MasterDuke> so https://github.com/rakudo/rakudo/pull/4091 passes all tests (and gives the correct result for the example in https://github.com/rakudo/rakudo/issues/4088), but the example in the PR where i originally introduced the change now warns 'Use of Nil in numeric context'

[20:08] <MasterDuke> https://github.com/rakudo/rakudo/commit/c080e59404ed1b27e8841249e1c71d7e013c09ca

[20:09] <MasterDuke> because we're returning a `Nil` instead of a `Failure`

[20:11] <MasterDuke> and with the nqp:: ops i was first using it didn't match, but also didn't warn

[20:11] <MasterDuke> (and didn't warn before my changes either)

[20:12] <MasterDuke> i could return `Empty` instead, but is that really a good choice?

[20:12] <MasterDuke> m: say Empty == 5; say Nil == 5

[20:12] <camelia> rakudo-moar 6f7718cef: OUTPUT: «False␤Use of Nil in numeric context␤False␤  in block <unit> at <tmp> line 1␤»

[20:17] *** Xliff joined
[20:32] <MasterDuke> nope, because Empty == 0

[20:32] <MasterDuke> so does False

[20:35] <MasterDuke> oh, and NaN also breaks my proposed fix

[20:35] <MasterDuke> m: say NaN == NaN; say NaN ~~ NaN

[20:35] <camelia> rakudo-moar 6f7718cef: OUTPUT: «False␤True␤»

[20:36] *** unclechu left
[20:37] *** AlexDaniel` left
[20:37] *** JJAtria[m] left
[20:37] *** MitarashiDango[m left
[20:43] <MasterDuke> `Mu` seems to work

[21:02] *** unclechu joined
[21:06] *** JJAtria[m] joined
[21:07] *** AlexDaniel` joined
[21:07] *** sena_kun joined
[21:09] *** Altai-man left
[21:12] <ugexe> regarding the thread safety of IO::Path.relative i mentioned earlier... it was happening for me on 2020.06, i golfed it to this https://gist.github.com/ugexe/50f056eedbc7caba5df58b2ced2a8cda and then discovered it must already be fixed cause i cant get it to die on HEAD

[21:14] *** MitarashiDango[m joined
[21:17] <ugexe> it seems like spawning a process in a specific cwd was required to make it happen

[21:52] <ugexe> indeed the bug exists in 2020.11, so it was fixed very recently

[22:23] <Geth> ¦ rakudo: b3a255801c | (Daniel Green)++ | 3 files

[22:23] <Geth> ¦ rakudo: Use Raku instead of NQP ops for literals in a when

[22:23] <Geth> ¦ rakudo: 

[22:23] <Geth> ¦ rakudo: Otherwise Junctions won't autothread and we could get the wrong result.

[22:23] <Geth> ¦ rakudo: Requires returning `Mu` instead of `Nil` when `val()` fails, otherwise

[22:23] <Geth> ¦ rakudo: you get a warning about 'Use of Nil in numeric context'.

[22:23] <Geth> ¦ rakudo: 

[22:23] <Geth> ¦ rakudo: Fixes #4089

[22:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b3a255801c

[22:23] <linkable6> RAKUDO#4089 [closed]: https://github.com/rakudo/rakudo/issues/4089 [BLOCKER][regression] 'when' no longer working with junctions

[22:23] <Geth> ¦ rakudo: cce2fa26e2 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 3 files

[22:23] <Geth> ¦ rakudo: Merge pull request #4091 from MasterDuke17/gen_raku_ops_not_nqp_ops_for_literal_when_comparisons

[22:23] <Geth> ¦ rakudo: 

[22:23] <Geth> ¦ rakudo: Use Raku instead of NQP ops for literals in a when

[22:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cce2fa26e2

[22:29] *** patrickb left
[22:51] *** ggoebel_ joined
[22:59] <Geth> ¦ rakudo: c4c4ba98cc | (Elizabeth Mattijsen)++ | src/core.c/Capture.pm6

[22:59] <Geth> ¦ rakudo: Make the while loop in NQP

[22:59] <Geth> ¦ rakudo: 

[22:59] <Geth> ¦ rakudo: This fixes the problem that Blin found with Trait::Traced.

[22:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c4c4ba98cc

[23:01] *** sena_kun left
