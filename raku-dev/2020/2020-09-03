[00:00] <codesections> will do

[00:09] *** sena_kun left
[00:33] <codesections> timotimo: wait, how do I add a file to core.d?  I thought I could follow the model of the existing files, which seemed to be just adding a couple of lines to the Makefile

[00:33] <codesections> but that didn't seem to do the trick.  Do you happen to know what else I need to do?

[00:40] <timotimo> i haven't tried it yet myself

[00:41] <codesections> Hmm, ok I'll keep experimenting thanks

[00:47] <timotimo> i would recommend looking at the git log for some of the files in that folder with the -u option to get the diffs

[00:47] <timotimo> like git log -u -- src/core.d/one-of-the-files.rakumod

[00:48] <timotimo> though the renaming of pm6 to rakumod could be trouble

[00:48] <codesections> good idea, thanks

[01:40] *** nebuchadnezzar left
[02:36] <Geth> Â¦ rakudo: codesections++ created pull request #3903: Revise deprecation warnings to show only on v6.d

[02:36] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3903

[06:00] *** domidumont joined
[06:01] *** nebuchadnezzar joined
[06:03] *** vrurg_ joined
[06:05] *** vrurg left
[06:15] *** sjn__ is now known as sjn

[06:34] <Geth> Â¦ rakudo: usev6++ created pull request #3904: Start to use nqp::execname on the JVM backend

[06:34] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3904

[07:34] *** MasterDuke joined
[08:01] *** yuplushi left
[08:09] *** sena_kun joined
[08:41] *** domidumont left
[08:52] *** yuplushi joined
[09:06] *** MasterDuke left
[09:25] *** MasterDuke joined
[09:58] *** yuplushi left
[10:34] <lizmat> Files=1336, Tests=113586, 221 wallclock secs (29.67 usr  7.85 sys + 3121.60 cusr 270.75 csys = 3429.87 CPU)

[10:56] *** yuplushi joined
[11:01] *** MasterDuke left
[11:09] <Geth> Â¦ rakudo/IO-Notification-Change-ValueObjAt: 17f352f510 | (Elizabeth Mattijsen)++ | src/core.c/IO/Notification.pm6

[11:09] <Geth> Â¦ rakudo/IO-Notification-Change-ValueObjAt: Make IO::Notification::Change a value type

[11:09] <Geth> Â¦ rakudo/IO-Notification-Change-ValueObjAt: 

[11:09] <Geth> Â¦ rakudo/IO-Notification-Change-ValueObjAt: Which should make it better to filter for it, e.g. with

[11:09] <Geth> Â¦ rakudo/IO-Notification-Change-ValueObjAt: Supply.unique(expires => X).

[11:09] <Geth> Â¦ rakudo/IO-Notification-Change-ValueObjAt: review: https://github.com/rakudo/rakudo/commit/17f352f510

[11:09] <Geth> Â¦ rakudo: lizmat++ created pull request #3905: Make IO::Notification::Change a value type

[11:09] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3905

[11:12] *** finsternis left
[11:13] *** finsternis joined
[11:28] *** MasterDuke joined
[11:45] *** Altai-man joined
[11:47] *** sena_kun left
[12:08] *** [TuxCM] left
[12:15] *** [TuxCM] joined
[12:44] <MasterDuke> i think we have a sort of Shlemiel the painter's algorithm situation going on with the whatever slice and reify-at-least

[12:48] <MasterDuke> if i dd $!reified (using the char range example in this case) i get output like: (), (), ("a"), (), ("a"), ("a", "b"), (), ("a"), ("a", "b"), ("a", "b", "c"), (), ("a"), ("a", "b"), ("a", "b", "c"), ("a", "b", "c", "d")

[12:49] <MasterDuke> i.e., it seems to keep recreating it one longer each time, instead of just appending to the existing

[12:49] <timotimo> what on earth? :) :)

[12:50] <timotimo> could you paste that including tracebacks at every output point?

[12:52] <MasterDuke> add something like `Backtrace.new.Str`?

[12:52] <timotimo> i think so. perhaps .full

[12:57] <MasterDuke> hm. that causes a hang in stage optimize. but the original dd didn't cause any output there...

[12:58] <MasterDuke> oh. do i need to move Backtrace.pm6 in core_sources?

[13:01] <MasterDuke> nope. same thing

[13:01] *** Kaeipi left
[13:03] <MasterDuke> what's another way to accomplish this? catch a die?

[13:05] *** Kaiepi joined
[13:26] *** domidumont joined
[13:32] *** Geth left
[13:33] *** Geth joined
[13:50] <timotimo> oh!

[13:51] <timotimo> of course

[13:51] <timotimo> in order to print out a stack trace

[13:51] <timotimo> guess what it has to do

[13:51] <timotimo> iterate over the stack frames :)

[13:56] *** lucasb joined
[14:08] <MasterDuke> been distracted. any other way to do it?

[14:08] <timotimo> hmm

[14:08] <timotimo> put nqp::sin_n(0e0) and breakpoint in gdb

[14:08] <timotimo> the MVM_dump_backtrace function doesn't do raku-level iteration

[14:09] <MasterDuke> ugh, going to be so many...

[14:12] <timotimo> how do you mean?

[14:12] <timotimo> you know you can make gdb do it automatically, including resuming :)

[14:12] <timotimo> commands

[14:12] <timotimo> call MVM_dump_backtrace(tc)

[14:12] <timotimo> c

[14:12] <timotimo> end

[14:12] <MasterDuke> oh, right. forgot about that

[14:13] <timotimo> i need it so often ... :D

[14:14] <MasterDuke> huh. `b sin` doesn't break

[14:18] <timotimo> yeah, you'll want to breakpoint that in interp.c

[14:18] <timotimo> sin would also not have tc available

[14:23] <MasterDuke> got a 3.5mb log file

[14:23] <MasterDuke> 33k lines

[14:23] <MasterDuke> partial output

[14:24] <timotimo> it'll probably be extremely duplicatious

[14:26] <MasterDuke> https://gist.github.com/MasterDuke17/81ba79ec60eebb491c1e61746d122ae2 some of the output

[14:30] <timotimo> i kind of feel like just looking at the code near those lines should give us a good idea of what's going on

[14:30] <timotimo> it does seem like what you said

[14:30] <timotimo> like it's re-making the range into a list every time it grabs a new value

[14:31] <timotimo> and it goes via AT-POS, maybe that's the wrong?

[14:32] <MasterDuke> https://github.com/rakudo/rakudo/blob/master/src/core.c/List.pm6#L40

[14:34] <MasterDuke> looks like 4 reify-at-least for every AT-POS

[14:42] <timotimo> aw dang, the tampermonkey script is still confused by the core.c lines and thinks they're moarvm code

[14:44] <MasterDuke> easy to just hardcode them?

[14:46] <timotimo> fixed it

[14:46] <timotimo> just needed to allow for `.[a-zA-Z]`

[14:48] <timotimo> and updated the gist with the script in it

[14:48] * MasterDuke is going to be distracted for a bit, currently have both the three-year-old and the two-month-old by myself

[14:48] <timotimo> :)

[14:49] <timotimo> i kind of hate that in order to see the function names at the end of the lines i have to horizontally scroll in the gist

[14:49] <MasterDuke> hm, tampermonkey doesn't see any updates available

[14:50] <MasterDuke> yeah, too bad that box isn't resizeable

[14:51] <timotimo> https://gist.github.com/timo/7cfe71a667bbdfa0dbd1510431da45a4 - perhaps have to redownload this dunno

[14:52] <timotimo> next step: allow the user to embed a little iframe with the source code in it

[14:54] <timotimo> maybe easier to generate a vim quicklist so you can use your favourite editor to navigate these backtraces

[14:54] <MasterDuke> updated, timotimo++

[15:46] *** sena_kun joined
[15:47] *** Altai-man left
[15:48] *** squashable6 left
[15:49] *** squashable6 joined
[17:16] *** MasterDuke left
[18:15] *** Xliff joined
[18:16] <Xliff> .

[18:16] <Xliff> \o

[18:21] <nwc10> o/

[18:56] *** domidumont left
[18:56] *** domidumont joined
[18:57] *** domidumont left
[18:57] *** domidumont joined
[18:57] *** domidumont left
[19:04] <Kaiepi> blegh

[19:05] <Kaiepi> nvm this is more a moarvm thing

[19:15] *** MasterDuke joined
[19:45] *** Altai-man joined
[19:47] *** sena_kun left
[20:27] *** literal_ is now known as literal

[21:25] *** pamplemousse joined
[21:30] *** pamplemousse left
[21:32] <MasterDuke> that reify-at-least code is old. most recent change is three years ago and the bulk of it is four years old

[21:40] *** pamplemousse joined
[21:44] *** Xliff left
[22:57] *** leont left
[23:13] *** pamplemousse_ joined
[23:17] *** pamplemousse left
[23:20] *** Altai-man left
[23:21] *** MasterDuke left
[23:40] *** Kaiepi left
[23:47] *** Kaiepi joined
