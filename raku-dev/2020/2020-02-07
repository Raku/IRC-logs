[01:33] *** sena_kun left
[01:47] *** sena_kun joined
[03:32] *** sena_kun left
[03:48] *** sena_kun joined
[04:47] *** hungryd94 joined
[04:49] *** hungrydonkey left
[05:15] *** hungryd94 left
[05:16] *** hungrydonkey joined
[05:19] *** hungrydonkey30 joined
[05:19] *** hungrydonkey30 is now known as cstist

[05:22] *** hungrydonkey left
[05:32] *** sena_kun left
[05:46] *** sena_kun joined
[06:01] *** hungrydonkey joined
[06:02] *** hungrydonkey is now known as boooot

[06:03] *** cstist left
[06:13] *** boooot left
[06:15] *** hungrydonkey joined
[06:40] *** hungrydonkey2 joined
[06:42] *** hungrydonkey left
[06:51] *** vrurg joined
[06:53] *** hungrydonkey2 left
[07:24] *** domidumont joined
[07:33] *** sena_kun left
[07:39] *** hungrydonkey joined
[07:39] *** hungrydonkey left
[07:49] <nine> [   87s] push_o requires a concrete object (got a ThreadPoolScheduler::Queue type object instead)

[07:49] <tellable6> 2020-02-06T20:33:34Z #raku <[Coke]> nine same as https://github.com/Raku/doc/issues/2896

[07:49] <tellable6> hey nine, you have a message: https://gist.github.com/aa579f52bb7ccefbb51fa7a0c2aff40f

[07:49] *** sena_kun joined
[07:49] <nine> https://build.opensuse.org/package/live_build_log/home:niner9:rakudo-git/perl6-Cro-HTTP/openSUSE_Tumbleweed/x86_64

[07:56] <nine> [Coke]: why does this Build.pm6 copy any files at all? Any static files the module ships are resources and must be listed in META6.json's resources section. The installer will then import them into the repository.

[09:33] *** sena_kun left
[09:48] *** sena_kun joined
[10:27] *** AlexDaniel` left
[10:27] *** CIAvash left
[10:48] *** nebuchadnezzar left
[11:23] *** unclechu joined
[11:23] *** AlexDaniel` joined
[11:23] *** CIAvash joined
[11:25] *** discord6 left
[11:25] *** discord6 joined
[11:25] *** discord6 left
[11:25] *** discord6 joined
[11:32] *** sena_kun left
[11:35] *** Kaiepi left
[11:36] *** Kaiepi joined
[11:38] *** Kaiepi left
[11:39] *** Kaiepi joined
[11:41] *** Kaiepi left
[11:41] *** Kaiepi joined
[11:47] *** sena_kun joined
[12:01] *** ufobat joined
[12:05] *** MasterDuke left
[12:08] *** Kaiepi left
[12:11] <Geth> Â¦ rakudo: dumarchie++ created pull request #3463: Box result of nqp::time_n() in DateTime.now

[12:11] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3463

[12:13] *** Kaiepi joined
[13:00] <jnthn> Interesting...I ended up putting in `auth` in my META6.json something like "Foo [email@hidden.address] and then it gets installed unversioned (discovered because I incremented the version number and it claimed I was installing the same thing).

[13:00] <jnthn> Not sure if this is something going on at Rakudo level or zef level?

[13:00] *** AlexDaniel joined
[13:00] *** AlexDaniel left
[13:00] *** AlexDaniel joined
[13:02] *** squashable6 left
[13:04] *** nebuchadnezzar joined
[13:06] *** squashable6 joined
[13:15] *** lucasb joined
[13:15] *** Kaiepi left
[13:21] *** Kaiepi joined
[13:31] *** sena_kun left
[13:46] *** sena_kun joined
[13:46] *** Kaiepi left
[13:48] <[Coke]> nine: that code is very old, relatively.

[13:50] <nine> Proper handling of ressources has been there for 4 years now.

[13:52] <[Coke]> yah, this looks like it's from '14.

[13:53] <[Coke]> Thank you for the tip, I'll see if I can fix it.

[13:58] *** patrickb joined
[14:05] <patrickb> ping rba

[14:17] <[Coke]> nine - looks like when you run p6doc the first time, it tries to build an index for later use. I assume we're going to want to do that at install time, not at first run time.

[14:19] <nine> definitely

[14:20] <rba> patrickb: ping back

[14:20] <nine> A good assumption is that after installation you're never ever allowed to write to the file system again. After all it's a doc _reader_

[14:23] <patrickb> rba: https://patszim.volans.uberspace.de/patcloud/index.php/s/qmkreEJLQDZcjbf now contains a rakubrew-1.tgz with a new release. Can you put them on rakubrew.org?

[14:23] <rba> patrickb: I'm doing it right now.

[14:24] <patrickb> :-) Thanks!

[14:24] <[Coke]> nine: :)

[14:24] <[Coke]> My biggest concern is that we will have to manually update META6.json with our list of doc files to install. (but we can write a test for tit.)

[14:24] <[Coke]> *it

[14:27] <rba> patrickb: I put the 1 into the release directory. May you please let me know what you're testing now?

[14:27] <rba> patrickb: 1=v1 ?

[14:27] <patrickb> rba: Looking good. :-)

[14:27] <patrickb> Yes

[14:28] <patrickb> The website already shows it at the top

[14:28] <patrickb> nine: Did you see my comment on this PR: https://github.com/MoarVM/MoarVM/pull/1228

[14:28] <rba> patrickb: Is this just a incremented version based on the directories? 

[14:29] <patrickb> rba: Yes. It determines the version number based on the directory name.

[14:29] <patrickb> So each new version will be a new directory with the number increased.

[14:29] <nine> patrickb: oh...yes, makes sense

[14:36] <patrickb> rba: Is there some way I can put the release fiels on the server myself?

[14:39] <rba> patrickb: I'm working on this. rakubrew.org is my pilot project, where I try to manage all with the docker containers. This needs some more work from my side, which I hope to do in the next few weeks. 

[14:40] <rba> patrickb: I guess I will try to sync the docker volume which contain the persistent data for the container. Alternatively we can glue the data in a container as well.

[14:41] <patrickb> Can you do another upload in 15 minutes or so?

[14:43] *** hungrydonkey joined
[14:45] <[Coke]> looks like we still have to move stuff around. now instead of trying to fake moving doc into lib/, we have to actually move doc files in resources/

[14:51] *** bartolin left
[14:52] <nine> [Coke]: pardon my ignorance about how p6doc works, but why not have the files live in resources in the first place?

[14:57] <rba> Patrickb: sure

[14:58] <patrickb> Upload just finished. There should now be a rakubrew-2.tgz on that uberspace site

[14:59] <rba> patrickb: Will be back in front of my notebook in 30 mind. 

[15:01] *** hungrydonkey left
[15:02] <[Coke]> nine: yup, that's possible. Just trying to get one single file to install and work and then will clean it up.

[15:02] <[Coke]> I don't think resources/ existed at the time.

[15:03] <nine> Sounds like p6doc really needs a do-over to arrive in the post 6.c release time

[15:03] <nine> Also explains why I feel like p6doc is always trying to fight the system instead of using it

[15:05] <[Coke]> have a bin that is just dd'ing %?RESOURCES - it returns Nil both installed and locally.

[15:06] * [Coke] tries to do a zef uninstall and not just install over the existing install to see if that helps

[15:06] <nine> %?RESOURCES is not a Hash

[15:07] <nine> But it also shouldn't just be Nil if you have resources defined in your META6.json

[15:07] <[Coke]> ah, you have to know the specific resource you're asking for?

[15:08] <[Coke]> I do have a single resource in META6.json, yes.

[15:08] <nine> It's a Distribution::Resources object

[15:08] <[Coke]> I am still getting Nil, though.

[15:10] <[Coke]> heh. the docs in language/modules specifically say: "through the %?RESOURCES Hash"

[15:11] <nine> docs are wrong

[15:12] <[Coke]> Yes, that's what I'm saying.

[15:12] <[Coke]> opened #3205

[15:15] <nine> [Coke]: https://gist.github.com/niner/f83e07bd4f5818bbd8738fa922d0da57

[15:15] <[Coke]> Do we have any docs somewhere on Distribution::Resources? (not mentioned in p6doc)

[15:16] <[Coke]> do you have to be in a module for %?RESOURCES to work? I was just dumping it from a bin/foo 

[15:16] <nine> yes

[15:17] <[Coke]> Ok.

[15:17] <nine> %?RESOURCES is NYI for scripts

[15:17] <Geth> Â¦ problem-solving: jnthn self-assigned The development experience around the generate-and-export pattern has shortcomings https://github.com/Raku/problem-solving/issues/159

[15:21] <[Coke]> nine - thanks. now getting a non Nil value.

[15:27] *** Ven_de_Thiel joined
[15:27] *** hungrydonkey joined
[15:32] <[Coke]> nine -is there a way to install everything that's in resources/ ? Or do you have to list them out in the META6?

[15:33] *** sena_kun left
[15:38] <rba> patrickb: rakubrew-2.tgz deployed.

[15:43] <patrickb> rba: Thanks!

[15:44] <patrickb> With that I'm now inviting everyone to give rakubrew a try and give feedback what works and what is broken: https://rakubrew.org/

[15:44] <patrickb> It should work on MacOS, Windows and about everything else that has perl installed.

[15:45] <nine> [Coke]: no, they have to be listed

[15:46] <patrickb> I'm especially interested in MacOS testers, as I don't own a MacOS machine to test myself.

[15:47] *** Kaiepi joined
[15:47] <[Coke]> nine - cool. I have the bare minimum here that installs a single pod6 file in resources and then dumps it out based on %?RESOURCES. Should be able to use this as a basis to fix the installer.

[15:47] <[Coke]> Thanks for the help. I will no doubt have more questions later. :)

[15:48] <nine> [Coke]: feel free :) I'm glad p6doc finally embraces our CompUnit::Repository overloads!

[15:48] *** sena_kun joined
[16:12] <Geth> Â¦ rakudo: atroxaper++ created pull request #3464: Make throws-like throw an exception on Bool:D matchers

[16:12] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3464

[16:13] <Geth> Â¦ roast: atroxaper++ created pull request #616: Add tests for fails-like with Bool:D matcher

[16:13] <Geth> Â¦ roast: review: https://github.com/perl6/roast/pull/616

[16:46] <patrickb> I just noticed that the install instructions for MacOS are wrong (they are the ones for linux). On MacOS one should instead do: `curl https://rakubrew.org/install-on-macos.sh | sh`

[16:47] <[Coke]> nine: I do not represent p6doc any more, I guess. I'll see what I can do once I figure out what jj's roadmap is.

[16:50] <patrickb> rba: You can update the rakubrew.org website at your convenience. There was a but in OS detection that made it show wrong instructions on MacOS machines.

[16:50] <patrickb> I'm off for today. o/

[16:50] *** patrickb left
[17:32] *** sena_kun left
[17:43] <[Coke]> is there an easy way to remove all files installed with zef? I have a local p6 install, a zef on top of that, and want to just wipe everything so I can be sure I'm starting with a clean slate (trying to avoid having to re-install raku, but I can do that if it's the easiest)

[17:45] * [Coke] will just nuke everything for right now

[17:45] <nine> [Coke]: rm -rf ~/.perl6 and $RAKUDO-INSTALL-DIR/share/site

[17:46] <[Coke]> nine++

[17:48] *** sena_kun joined
[17:55] <rypervenche> Or ~/.raku if you're on 2020.01 or later.

[17:55] <nine> Wait, what?

[17:56] <[Coke]> when I am running 'zef install', is it going to ~/.raku or $RAKUDO-INSTALL-DIR ?

[17:56] <[Coke]> I imagine switching that is going to break a lot of people who upgrade

[17:57] <nine> Yep, that's a clear regression that slipped through :(

[17:57] <rypervenche> Am I wrong? When I installed 2020.01 it defaulted to using ~/.raku, even though I had modules in ~/.perl6. I had to delete the newly-created ~/.raku and move ~/.perl6 to it to get my modules back.

[17:57] <nine> Doesn't look like the change is intended even

[17:58] <nine> It's part of a huge commit that replaced .perl calls with .raku

[18:00] *** Ven_de_Thiel left
[18:02] *** hungrydonkey left
[18:27] <[Coke]> Should we shoot for a point release?

[18:27] <[Coke]> And also we need to test that, apparently. :|

[18:30] <sena_kun> well, this release is not cut as a rakudo star. the next release is in two weeks.

[18:31] <nine> First we need to find a way to make this backwards compatible

[18:31] <sena_kun> those who use latest probably can deal with the issue, so I'd say it is odd to ship a point and then ship a new one in two weeks

[19:16] *** domidumont left
[19:19] *** domidumont joined
[19:33] *** sena_kun left
[19:36] *** lucasb left
[19:45] <vrurg> m: '().grep: True'

[19:45] <camelia> rakudo-moar 495ddcc1f: OUTPUT: Â«WARNINGS for <tmp>:â¤Useless use of constant string "().grep: True" in sink context (line 1)â¤Â»

[19:45] <vrurg> Is it only me considering this error message obscure?

[19:46] <vrurg> Oh, wrong message...

[19:46] <vrurg> m: 'say ().grep: True'

[19:46] <camelia> rakudo-moar 495ddcc1f: OUTPUT: Â«WARNINGS for <tmp>:â¤Useless use of constant string "say ().grep: True" in sink context (line 1)â¤Â»

[19:46] <vrurg> m: ().grep: True

[19:46] <camelia> rakudo-moar 495ddcc1f: OUTPUT: Â«Cannot use Bool as Matcher with '.grep'.  Did you mean to use $_ inside a block?â¤  in block <unit> at <tmp> line 1â¤â¤Â»

[19:46] <vrurg> ^ this one

[19:47] <[Coke]> m: say 1 ~~ True

[19:47] <camelia> rakudo-moar 495ddcc1f: OUTPUT: Â«Potential difficulties:â¤    Smartmatch against True always matches; if you mean to test the topic for truthiness, use :so or *.so or ?* insteadâ¤    at <tmp>:1â¤    ------> 3say 1 ~~ 7â5Trueâ¤Trueâ¤Â»

[19:47] <[Coke]> there's a related one

[19:47] <[Coke]> (in case there's verbage to steal)

[19:49] *** sena_kun joined
[19:52] <vrurg> [Coke]: Yours is much better, I know it. I wonder if it makes sense to change what grep reports.

[20:01] *** domidumont left
[20:35] <Geth> Â¦ rakudo: 076ef98bdb | (Elizabeth Mattijsen)++ | src/core.c/DateTime.pm6

[20:35] <Geth> Â¦ rakudo: DateTime!new-from-positional doesn't need named parameters

[20:35] <Geth> Â¦ rakudo: 

[20:35] <Geth> Â¦ rakudo: It's fully internal, so we're in complete control, so we don't need

[20:35] <Geth> Â¦ rakudo: the overhead of named parameters.

[20:35] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/076ef98bdb

[20:46] *** AlexDaniel left
[20:53] <jnthn> vrurg: Yes; anything ~~ True is always True, so such a grep is a no-op

[20:56] <Geth> Â¦ rakudo: ced67b83d9 | (Elizabeth Mattijsen)++ | src/core.c/DateTime.pm6

[20:56] <Geth> Â¦ rakudo: Move out-of-range reporting into a private method

[20:56] <Geth> Â¦ rakudo: 

[20:56] <Geth> Â¦ rakudo: - to make the fast path smaller, better optimizable

[20:56] <Geth> Â¦ rakudo: - makes DateTime.new a percent or so faster

[20:56] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ced67b83d9

[21:06] <[Coke]> jnthn: does it make sense to unify those warnings?

[21:26] <jnthn> [Coke]: Well, not directly, in so far as the value passed may be False, not True.

[21:26] <jnthn> The "$_ in a block" is not really clear though

[21:26] <jnthn> So there's something to be improved there

[21:27] <jnthn> Also referencing smartmatch isn't immediately helpful, in so far as while it's true that's what grep uses, there's not a ~~ operator to be seen, and that's also liable to cause confusion

[21:32] *** sena_kun left
[21:43] <Geth> Â¦ rakudo: 578935e66a | (Elizabeth Mattijsen)++ | src/core.c/DateTime.pm6

[21:43] <Geth> Â¦ rakudo: Make DateTime.new(Str) about 30% faster

[21:43] <Geth> Â¦ rakudo: 

[21:43] <Geth> Â¦ rakudo: - simplify the regex, only one level of captures

[21:43] <Geth> Â¦ rakudo: - only call .subst when actually needed

[21:43] <Geth> Â¦ rakudo: - bind instead of assign

[21:43] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/578935e66a

[21:48] *** sena_kun joined
[21:48] <Geth> Â¦ nqp: 1a5eb92ef1 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[21:48] <Geth> Â¦ nqp: Bump MoarVM to get the latest libuv

[21:48] <Geth> Â¦ nqp: review: https://github.com/perl6/nqp/commit/1a5eb92ef1

[21:56] <Geth> Â¦ rakudo: 37b1be7e7c | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[21:56] <Geth> Â¦ rakudo: Bump NQP to get latest libuv and some NQP fixes

[21:56] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/37b1be7e7c

[22:19] *** travis-ci joined
[22:19] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Move out-of-range reporting into a private method

[22:19] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/647509012 https://github.com/rakudo/rakudo/compare/076ef98bdb91...ced67b83d963

[22:19] *** travis-ci left
[22:25] <vrurg> jnthn: '$_ inside a block' part is the most confusing, but I'm lacking terminology to re-word it. So far, the best one I came up with was 'Did you mean to use a boolean prefix op with $_?' But I don't like this one either.

[22:38] <lizmat> weird: the travis page says all green ?

[22:38] <vrurg> lizmat: I have restarted the failed task

[22:39] <vrurg> it was a github-side fetch error.

[22:39] *** AlexDaniel joined
[22:39] *** AlexDaniel left
[22:39] *** AlexDaniel joined
[22:49] <dogbert11> m: say is-prime(-2) # new mathematical discovery

[22:49] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«Trueâ¤Â»

[22:50] <lizmat> m: use nqp; say nqp::isprime(-2)

[22:50] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«===SORRY!===â¤No registered operation handler for 'isprime'â¤Â»

[22:50] <lizmat> m: use nqp; say nqp::is-prime(-2)

[22:50] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Undeclared routine:â¤    prime used at line 1. Did you mean 'print', 'trim'?â¤â¤Â»

[22:50] <lizmat> m: use nqp; say nqp::is-prime_I(-2)

[22:50] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Undeclared routine:â¤    prime_I used at line 1â¤â¤Â»

[22:51] <lizmat> m: use nqp; say nqp::isprime_I(-2)

[22:51] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«===SORRY!===â¤Arg count 1 doesn't equal required operand count 3 for op 'isprime_I'â¤Â»

[22:51] <lizmat> m: use nqp; say nqp::isprime_I(-2,100)

[22:51] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«1â¤Â»

[22:51] <lizmat> hmmm

[22:52] <lizmat> feels like a bug in the nqp::isprime_I implementation?

[22:52] <dogbert11> so you don't think it's an incredible discovery :)

[22:53] <lizmat> eh... no... an unfortunate discovery?

[22:53] <lizmat> or something very disco ?

[22:53] * lizmat realizes she need to get some sleep

[22:53] <lizmat> afk&

[22:53] <dogbert11> yeah, perhaps a bisect might be in order

[22:53] * dogbert11 has his suspicions

[22:54] <lizmat> bisectable6: say is-prime -2

[22:54] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=37b1be7) because on both starting points the exit code is 0

[22:54] <bisectable6> lizmat, bisect log: https://gist.github.com/c86a1f988e16c125fd8ea334adfb5142

[22:54] <bisectable6> lizmat, (2020-02-05) https://github.com/rakudo/rakudo/commit/f8b9d027594b385e8d5c646f62f799e703777ba9

[22:54] <lizmat> whee!

[22:55] <lizmat> seems libtommath has found it, or our interface to it

[22:55] <lizmat> .tell MasterDuke  https://github.com/rakudo/rakudo/commit/f8b9d027594b385e8d5c646f62f799e703777ba9 made is-prime -2 return True

[22:55] <tellable6> lizmat, I'll pass your message to MasterDuke

[22:55] <lizmat> really afk&

[22:55] <dogbert11> good night lizmat

[22:56] <jnthn> m: say (-1 ... -10).map(*.is-prime)

[22:56] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«Error checking primality of a big integer: Value out of rangeâ¤  in block <unit> at <tmp> line 1â¤â¤Â»

[22:56] <jnthn> m: say (-1 ... -10).map(&is-prime)

[22:56] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«Error checking primality of a big integer: Value out of rangeâ¤  in block <unit> at <tmp> line 1â¤â¤Â»

[22:56] <jnthn> Curious

[22:56] <jnthn> m: say is-prime -1

[22:56] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«Falseâ¤Â»

[22:56] <jnthn> m: say is-prime -2

[22:56] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«Trueâ¤Â»

[22:56] <jnthn> m: say is-prime -3

[22:56] <camelia> rakudo-moar ced67b83d: OUTPUT: Â«Error checking primality of a big integer: Value out of rangeâ¤  in block <unit> at <tmp> line 1â¤â¤Â»

[22:57] <jnthn> At a first guess form that, it may be cheating by checking bit size and not paying attention to the sign bit.

[22:57] <dogbert11> the library?

[23:10] <jnthn> Dunno :)

[23:20] <jnthn> We don't check negatives here: https://github.com/MoarVM/MoarVM/blob/master/src/math/bigintops.c#L1352

[23:20] <jnthn> We only quickly check it's not 1

[23:21] <jnthn> m: say is-prime -4

[23:21] <camelia> rakudo-moar ced67b83d: ( no output )

[23:21] <jnthn> No output?

[23:21] <jnthn> m: say is-prime -4

[23:21] <camelia> rakudo-moar ced67b83d: ( no output )

[23:21] <jnthn> huh

[23:21] <jnthn> m: say is-prime 4

[23:21] <camelia> rakudo-moar ced67b83d: ( no output )

[23:22] <jnthn> m: say "anything"

[23:22] <camelia> rakudo-moar ced67b83d: ( no output )

[23:22] <jnthn> Ah, it's busted

[23:22] <jnthn> I suspect https://github.com/libtom/libtommath/blob/develop/mp_prime_is_prime.c#L26 filters out the 1 and 2 cases though

[23:22] <jnthn> ohh

[23:22] <jnthn> And it doesn't check the sign bit in that shortcut

[23:24] <jnthn> https://github.com/libtom/libtommath/commit/a218ddce9ba3b61a69a90db9f7dc86642667a41d added the shortcuts

[23:32] *** sena_kun left
[23:37] *** reportable6 left
[23:38] *** reportable6 joined
[23:39] <AlexDaniel> reportable6: snapshot

[23:39] <reportable6> AlexDaniel, OK! Working on it. This will take around 5 minutes.

[23:42] <reportable6> AlexDaniel, Done!

[23:42] <AlexDaniel> now that it doesn't need to look at RT it no longer needs to take forever

[23:48] *** sena_kun joined
