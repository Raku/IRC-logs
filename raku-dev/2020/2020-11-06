[00:09] *** Altai-man joined
[00:11] *** sena_kun left
[00:14] *** Altai-man left
[00:50] *** frost-lab joined
[01:07] *** MasterDuke left
[01:48] *** frost-lab left
[01:50] <vrurg_> .ask Altai-man do you know why blin always dies with "terminated by signal SIGKILL (Forced quit)"? Each time it's a little above 1000 passed tests.

[01:50] <tellable6> vrurg_, I'll pass your message to Altai-man

[02:13] <timotimo> vrurg_: check dmesg for the oom killer?

[02:14] *** vrurg_ is now known as vrurg

[02:15] <vrurg> timotimo: that's it. Thanks! Now I need to find out what's this. :)

[02:15] <timotimo> not good :(

[02:16] <vrurg> Ok, the VM needs more memory.

[02:16] <vrurg> Not bad either. It's a blin-dedicated disposable VM.

[02:17] <timotimo> there's stuff moarvm could do "better" in cases where parts of working memory tend to be swapped out

[02:18] <timotimo> though now that i think about it, it's probably not easy at all

[02:21] <vrurg> Things like "MoarVM panic: Internal error: invalid thread ID 193 in GC work pass" worry me more for now.

[02:21] <timotimo> yes, that's more not good

[02:21] <vrurg> As I currently running a LOT of tests in parallel, I see moar panicing one way or another too many.

[02:22] <vrurg> But more fun are recent errors of this kind: "No such method 'append' for invocant of type 'Array[Str:D]'.  Did you mean 'append'?"

[02:24] <timotimo> uh oh

[02:25] <vrurg> Overall, as I spent last two weeks fixing concurrency in Test::Async and Async::Workers, the picture is rather depressing. I saw ThreadPoolScheduler re-invoking continuations, realloc issue, SIGSEGV, broken react/whenever... 

[02:26] <timotimo> realloc issue and sigsegv can both be a sign of general memory corruption

[02:26] <timotimo> so out-of-bounds accesses and concurrent access to non-concurrency-safe structures

[02:28] <timotimo> i assume you're on 2020.10 versions?

[02:28] <vrurg> Sure. I'm not doing C for too long now, but I'm a concurrency fun since writing some threaded utils for OS/2. :)

[02:28] <vrurg> Right, 2020.10

[02:28] <vrurg> s/fun/fan/

[02:35] *** go|dfish left
[02:37] *** lucasb left
[02:40] *** go|dfish joined
[02:42] <vrurg> 5 rakudo/moar failures over 20000 runs. Neither terrible nor good.

[02:45] <timotimo> do you happen to have core dumps? though they are usually too late to actually be helpful

[03:53] <vrurg> timotimo: unfortunately, no. I'm forgetting to allow core dumps.

[03:55] <vrurg> timotimo: pardon me, I was looking in a wrong place. I do have like 4.1 gigs of those.

[06:02] *** greppable6 left
[06:02] *** unicodable6 left
[06:02] *** quotable6 left
[06:02] *** linkable6 left
[06:02] *** coverable6 left
[06:02] *** squashable6 left
[06:02] *** nativecallable6 left
[06:02] *** bloatable6 left
[06:02] *** tellable6 left
[06:02] *** benchable6 left
[06:02] *** bisectable6 left
[06:02] *** committable6 left
[06:02] *** sourceable6 left
[06:02] *** releasable6 left
[06:02] *** notable6 left
[06:02] *** evalable6 left
[06:02] *** shareable6 left
[06:02] *** statisfiable6 left
[06:03] *** statisfiable6 joined
[06:03] *** coverable6 joined
[06:03] *** squashable6 joined
[06:03] *** evalable6 joined
[06:03] *** notable6 joined
[06:04] *** unicodable6 joined
[06:04] *** releasable6 joined
[06:04] *** greppable6 joined
[06:04] *** bloatable6 joined
[06:04] *** sourceable6 joined
[06:04] *** linkable6 joined
[06:04] *** benchable6 joined
[06:05] *** tellable6 joined
[06:05] *** quotable6 joined
[06:05] *** bisectable6 joined
[06:05] *** shareable6 joined
[06:05] *** nativecallable6 joined
[06:05] *** committable6 joined
[06:20] *** raku-bridge1 joined
[06:20] *** raku-bridge1 left
[06:20] *** raku-bridge1 joined
[06:21] *** raku-bridge left
[06:21] *** raku-bridge1 is now known as raku-bridge

[07:52] *** Altai-man joined
[07:56] *** patrickb joined
[08:09] *** sena_kun joined
[08:11] *** Altai-man left
[08:20] *** domidumont joined
[08:52] *** jmerelo joined
[08:52] <jmerelo> I just created the rakulang group in GitLab, after Gitlab donated a "gold" subscription to us. In principle, the intention was to use it to hold pipelines, but of course we can use it for anything.

[08:53] <jmerelo> (raku was already taken by a dude since 2017)

[08:53] <jmerelo> Please dm or email me your Gitlab account so that I can add you with the appropriate permissions.

[08:55] <jmerelo> I'm sending invitations to a few of you I know are there (jjatria, tyil) also. 

[08:56] <tyil> jmerelo: ack :>

[08:58] <tyil> jmerelo: is there any particular reason or goal with the gitlab namespace (as compared to the github one that's already in use)

[08:58] <jmerelo> tyil: I can bump you up to owner if you want, since you are more familiar with it.

[08:59] *** nebuchadnezzar left
[08:59] <tyil> I'm not against it, but I need to know what to do with it ;~;

[08:59] *** nebuchadnezzar joined
[08:59] <jmerelo> tyil: as said above, we entered a mini-panic when we realized we were over the free tier in Travis, which we use heavily. So we tried to get CI resources elsewhere. In principle, it's mainly for that kind of thing.

[09:00] <tyil> ah ok

[09:00] <tyil> I know some gitlab CI if you want help with that, and I heavily use gitlab registries at work for docker too

[09:01] <jmerelo> We can think about creating mirrors there if needed. But there are other things that are possible: adopting modules that are hosted in GitLab (not a lot are, but there are a few) if it's required by the owner, for instance.

[09:01] <jmerelo> tyil: I didn't even know there were gitlab docker registries...

[09:02] <tyil> jmerelo: mirroring the module list for zef might be nice, so people can add their modules either on github or gitlab (if thats not the case yet)

[09:02] <jmerelo> BTW, welcome to the RSC, tyil++

[09:02] <jmerelo> tyil: definitely _not_ the case. It should be a two-way mirror, then.

[09:03] <jmerelo> tyil: it would probably be so much easier to just have two different lists...

[09:06] <tyil> hmm yeah, that's probably true

[09:06] <tyil> also thanks :>

[09:10] *** lizmat left
[09:10] *** lizmat joined
[10:34] <lizmat> Files=1337, Tests=114215, 225 wallclock secs (29.46 usr  8.62 sys + 3098.12 cusr 301.85 csys = 3438.05 CPU)

[10:45] *** frost-lab joined
[11:20] *** Kaiepi left
[11:41] <lizmat> bisectable6 

[11:41] <lizmat> bisectable6: role A[*@types] does Positional {method new(*@a) { self.CREATE }; method STORE(*@a) { } }; my @b is A[Int,Int] = 42,666; dd @b

[11:41] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[11:41] <bisectable6> lizmat, Output on all releases: https://gist.github.com/2cd4b0f3591917f5514e68f9f9e58378

[11:41] <bisectable6> lizmat, Bisecting by exit code (old=2020.05.1 new=2020.06). Old exit code: 1

[11:42] <bisectable6> lizmat, bisect log: https://gist.github.com/caa13fd91be47ede1ca8e4d2276ad1c9

[11:42] <bisectable6> lizmat, (2020-05-12) https://github.com/rakudo/rakudo/commit/de43f193af81c69eb4063970aad1ae5ff3690813

[11:42] <bisectable6> lizmat, Bisecting by output (old=2018.12 new=2019.03.1) because on both starting points the exit code is 1

[11:42] <bisectable6> lizmat, bisect log: https://gist.github.com/b0d6c86f917201c88663d8e6d8dcd13e

[11:42] <bisectable6> lizmat, Bisecting by output (old=2018.06 new=2018.08) because on both starting points the exit code is 1

[11:43] <bisectable6> lizmat, bisect log: https://gist.github.com/e9ea84a5dc7721ec2a99cdca18aa363e

[11:43] <bisectable6> lizmat, (2018-07-19) https://github.com/rakudo/rakudo/commit/e9e8cd550786da6aadea08cf50cbc9c636fb166a

[11:43] <bisectable6> lizmat, Output on all releases and bisected commits: https://gist.github.com/9afd1a40f0c6f321dbf4d0607e26cc19

[11:48] <nine> releasable6: status

[11:48] <releasable6> nine, Next release in ≈15 days and ≈7 hours. 1 blocker. Changelog for this release was not started yet

[11:48] <releasable6> nine, Details: https://gist.github.com/802a476b08fe5ead03016f9605f7cb1f

[11:49] <nine> I'm gonna merge https://github.com/MoarVM/MoarVM/pull/1373 to give it enough time before the release

[12:07] <lizmat> nine: will you bump NQP / Rakudo as well?

[12:07] <lizmat> or should I?

[12:08] <nine> feel free :)

[12:09] *** Altai-man joined
[12:11] <lizmat> oki

[12:11] *** frost-lab left
[12:12] *** sena_kun left
[12:17] <Geth_> ¦ nqp: 217d541512 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[12:17] <Geth_> ¦ nqp: Bump MoarVM to get nine++ internment fixes

[12:17] <Geth_> ¦ nqp: review: https://github.com/Raku/nqp/commit/217d541512

[12:18] <Altai-man> nine, the branch can be deleted?

[12:18] <tellable6> 2020-11-06T01:50:37Z #raku-dev <vrurg_> Altai-man do you know why blin always dies with "terminated by signal SIGKILL (Forced quit)"? Each time it's a little above 1000 passed tests.

[12:18] <nine> guess so

[12:19] <Altai-man> done

[12:19] <Altai-man> nine++

[12:29] <Geth_> ¦ rakudo: 5552434572 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[12:29] <Geth_> ¦ rakudo: Bump NQP to get nine++ internment fixes

[12:29] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5552434572

[13:59] *** patrickb left
[14:03] <jmerelo> The Raku group in gitlab is already provisioned with the Gold subscription. Anyone wants to be added to the group, just let me know.

[14:03] *** jmerelo left
[14:13] <[Coke]> .tell jmerelo - I am @coke on gitlab

[14:13] <tellable6> [Coke], I'll pass your message to jmerelo

[14:50] <[Coke]> Do we need to setup gitlab repos that mirror the github ones?

[14:53] <ugexe> why was there a mini panic over travis? the entire reason i added circle-ci support was because back then i said travis was going downhill and we should just stop using it. combined with patrickbs CI work I dont really see an issue with travis

[14:56] <ugexe> and you can add a module from gitlab/farthub whatever to the regular ecosystem list. META.list is just a list of links to META6.json, nothing else

[14:58] <ugexe> if instead its some sort of stallman-esq requirement to host the projects.json on gitlab then any user can already modify the zef config to point to some other gitlab instance

[15:03] <ugexe> imo i dont think we really gain a significant number of developers by complicating or changing our toolset/workflow compared to the number we potentially lose due to increased complexity and lower recognition from recruiters (they dont care if you prefer github, they know github and thats what they will check) 

[15:05] <[Coke]> I thought the github work was to get access to other CI tooling if we wanted it, not to move the module list, but it's hard to get full context from irc.

[15:05] <[Coke]> sigh. the "gitlab" work.

[15:06] <ugexe> we have azure CI and OBS for CI (as well as circle ci which will probably go away)

[15:06] <ugexe> we don't really need a 6th CI 

[15:07] <[Coke]> fair enough.

[15:08] <[Coke]> Would probably help if we had all the various extant options documented.

[15:08] <[Coke]> regarding Azure - is it through an org?

[15:08] <[Coke]> (and if so, do we have some kind of extra credit as an oss project?)

[15:09] <ugexe> i believe so. patrickb is basically the master CI orchestrator right now

[15:14] <[Coke]> .ask patrickb can you clue me in to the current Azure setup we have (and/or permit me to the subscription?)

[15:14] <tellable6> [Coke], I'll pass your message to patrickb

[15:16] <ugexe> https://github.com/rakudo/rakudo/pull/4000/checks?check_run_id=1339370387

[15:16] <ugexe> example azure results in github

[15:17] <ugexe> https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=657&view=results (and one of the examples directly on azure)

[15:21] <ugexe> https://github.com/rakudo/rakudo/blob/master/azure-pipelines.yml -- the CI file... although this one is not very basic since it tests lots of variations like relocating rakudo etc

[15:48] <[Tux]> Rakudo v2020.10-53-g555243457 (v6.d) on MoarVM 2020.10-31-gb13f6a24c

[15:48] <[Tux]> csv-test-xs-20      0.383 -  0.387

[15:48] <[Tux]> test-t --race       0.820 -  0.932

[15:48] <[Tux]> csv-ip5xs           0.825 -  0.836

[15:48] <[Tux]> test-t              1.785 -  1.815

[15:48] <[Tux]> test                7.591 -  7.652

[15:48] <[Tux]> csv-ip5xs-20        7.813 -  8.004

[15:48] <[Tux]> test-t-20 --race    9.653 -  9.717

[15:48] <[Tux]> csv-parser         25.241 - 25.327

[15:48] <[Tux]> test-t-20          30.625 - 30.684

[16:00] *** Kaiepi joined
[16:09] *** sena_kun joined
[16:11] *** Altai-man left
[16:18] *** domidumont left
[17:08] *** domidumont joined
[19:00] *** domidumont left
[19:13] *** vrurg left
[19:36] *** vrurg joined
[20:05] *** MasterDuke joined
[20:05] <MasterDuke> j: say "works"

[20:05] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «works␤»

[20:06] <MasterDuke> j: my $a = 42; my $b = 42; $a does role { method Str() { "foo" } }; $b.Str.say

[20:06] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «foo␤»

[20:06] <MasterDuke> j: my $a = 1; my int $b = 1; $a does role { method Str() { "foo" } }; $b.Str.say

[20:06] <camelia> rakudo-jvm 08b449e1a: OUTPUT: «1␤»

[20:07] <MasterDuke> m: my $a = 42; my $b = 42; $a does role { method Str() { "foo" } }; $b.Str.say

[20:07] <camelia> rakudo-moar 85847d2f1: OUTPUT: «foo␤»

[20:07] <MasterDuke> m: my $a = 1; my int $b = 1; $a does role { method Str() { "foo" } }; $b.Str.say

[20:07] <camelia> rakudo-moar 85847d2f1: OUTPUT: «foo␤»

[20:07] <MasterDuke> we should probably decide which is correct and write some tests

[20:07] <timotimo> yeah, we have a cache for small integers

[20:08] <[Coke]> cache or no cache, I think leaking that role is wrong

[20:08] <tellable6> 2020-11-06T17:58:24Z #raku <jmerelo> [Coke] on its way

[20:08] <timotimo> there could probably be a double-check when getting an object out of that cache if the type actually matches

[20:08] <timotimo> if it doesn't match, nuke the cache entry

[20:09] *** Altai-man joined
[20:09] <[Coke]> I assume the cache is required speed wise? (have we tested that recently)

[20:10] <timotimo> shouldn't be difficult to take it out, there's a few ops that spesh emits that directly go to the cache, though

[20:11] <nwc10> I've been having a look already - hence the question

[20:11] <nwc10> but not "take it out" - see if there's a better plan

[20:11] *** sena_kun left
[20:12] <MasterDuke> yeah, there was a small, but noticeable slower and increase in mem used if the cache was disabled

[20:12] <MasterDuke> *slowdown

[20:13] <timotimo> oh, only a small slowdown?

[20:13] <timotimo> what was the test workload like?

[20:14] <MasterDuke> nine and i were chatting about this a day or two ago. i think 0.5s slower to parse CORE.c and 20mb more ram used

[20:15] <MasterDuke> starting here https://colabti.org/irclogger/irclogger_log/moarvm?date=2020-11-03#l36

[20:19] <timotimo> i somehow completely missed that

[20:21] *** MasterDuke left
[20:37] *** MasterDuke joined
[20:51] *** patrickb joined
[20:57] <patrickb> ugexe, [Coke]: Azure provides its service for free for OSS projects without any limits. The current Azure CI setup tests all build combinations that Travis, CircleCI and AppVeyor tested. So from a coverage point of view Azure replaces all the others. The others are only still active because we didn't disable them yet and to gain some experience with Azure.

[20:57] <tellable6> 2020-11-06T15:14:04Z #raku-dev <[Coke]> patrickb can you clue me in to the current Azure setup we have (and/or permit me to the subscription?)

[20:57] <tellable6> 2020-11-06T16:03:58Z #raku <melezhik> patrickb: Config::Parser::toml test  OK on Rakudist - http://rakudist.raku.org/sparky/report/debian/912 , which version of Rakudo do you use? 

[20:57] <timotimo> patrickb: you don't happen to have a setup to test raku builds on mingw? well, just moarvm should be enough

[20:59] <patrickb> timotimo: I don't. But I think it should be doable. If you want you can give it a try. Azure has a nice web editor for it's configuration file. :-)

[21:02] <patrickb> [Coke]: We currently have three separate organizations registered on Azure: MoarVM, Raku and Rakudo (named identical to their GitHub counterpart).

[21:03] <patrickb> [Coke]: The owner of each of these orgs is [email@hidden.address] that's an account currently maintained by rba.

[21:04] <patrickb> [Coke]: The interesting part of the configuration is done by editing the azure-pipelines.yml present in each of the rakudo, nqp and MoarVM repo though.

[21:06] <patrickb> [Coke] Do you have an Azure account? I can invite you in each of the orgs.

[21:13] <patrickb> ugexe, [Coke]: I detailed my plan for our CI in https://github.com/Raku/problem-solving/pull/219 In short: I'm actively working on a tool to act as an intermediary between GitHub and Azure + OBS. This will make the OBS test results visible and hopefully allow us to implement a reasonable, reliable and usable CI workflow.

[21:15] <MasterDuke> patrickb: is it possible to restart individual azure jobs? sometimes there's a fail because of a network timeout or something like that and it'd be nice to be able to restart, but i don't see that option now

[21:15] <patrickb> melezhik: I think tyil already has a lead on what might have been wrong. In fact I managed to test the module successfully as well after manually installing its dependencies.

[21:15] <tellable6> patrickb, I'll pass your message to melezhik

[21:15] <[Coke]> patrickb: [email@hidden.address]
[21:16] <patrickb> MasterDuke: I think there is. I'm just unsure if one needs to be logged in to azure to have access to the button.

[21:16] <[Coke]> patrickb: do you find we have enough azure cycles to get things done? 

[21:16] <patrickb> (The tool I'm working on will automate restarting jobs, so this will be a non-problem then.)

[21:17] <MasterDuke> cool

[21:17] <patrickb> [Coke]: Not sure I understand the question. Azure does not impose any limits. Neither on number of parallel jobs, nor on maximum hours per month.

[21:19] <[Coke]> Sorry, used to the sub model where you pay for everything.

[21:20] <patrickb> [Coke] I invited you to all three orgs.

[21:20] <[Coke]> patrickb: thanks.

[21:20] <patrickb> Have to leave. Please do ask questions wrt our CI and the plans for it. I'm very willing to explain.

[21:20] <patrickb> (and I do backlog)

[21:21] <patrickb> \o

[21:21] *** patrickb left
[21:21] <[Coke]> patrickb: clicked on the "join now" in each email, in each case, taken to a page that gives me a 401 not allowed. (all mentioning my [email@hidden.address] account)

[21:21] <tellable6> [Coke], I'll pass your message to patrickb

[21:21] <[Coke]> o/

[21:23] <[Coke]> signed out and back in, same error.

[21:23] <[Coke]> 401 - Uh-oh, you do not have access.

[21:35] *** squashable6 left
[21:38] *** squashable6 joined
[21:50] *** squashable6 left
[21:50] <ugexe> MasterDuke: you can restart jobs within the github interface for azure jobs (like the little icons that show red or green for prs) but the button does not show up unless its a failed build

[21:51] *** squashable6 joined
[21:58] <MasterDuke> hm, i've looked around but never seen a way. let me try again

[22:00] <MasterDuke> ugexe: so right on this page i should be able to https://github.com/MoarVM/MoarVM/pull/1344 ?

[22:01] <MasterDuke> the red x's aren't clickable for me

[22:01] <ugexe> click on 'Details'

[22:01] <ugexe> (the red x is on the left, 'Details' is on the right)

[22:02] <ugexe> i dont have write perms to moarvm though so i don't see the button on these specifically

[22:02] <ugexe> https://github.com/MoarVM/MoarVM/pull/1344/checks?check_run_id=1246602657

[22:03] <MasterDuke> oh, now i see the 're-run'. thanks

[22:11] *** MasterDuke left
[22:24] *** finsternis joined
[23:33] *** Altai-man left
