[00:01] *** frost-lab joined
[00:44] *** lucasb left
[03:20] *** frost-lab left
[04:16] *** leont left
[04:54] *** japhb left
[04:54] *** japhb joined
[05:08] *** eater left
[05:09] *** eater joined
[06:36] *** nativecallable6 left
[06:36] *** unicodable6 left
[06:36] *** tellable6 left
[06:36] *** notable6 left
[06:36] *** sourceable6 left
[06:36] *** squashable6 left
[06:36] *** evalable6 left
[06:36] *** bisectable6 left
[06:36] *** benchable6 left
[06:36] *** bloatable6 left
[06:36] *** coverable6 left
[06:37] *** bisectable6 joined
[06:37] *** unicodable6 joined
[06:38] *** notable6 joined
[06:38] *** evalable6 joined
[06:38] *** bloatable6 joined
[06:38] *** benchable6 joined
[06:38] *** nativecallable6 joined
[06:39] *** squashable6 joined
[06:39] *** sourceable6 joined
[06:39] *** coverable6 joined
[06:40] *** tellable6 joined
[07:50] *** squashable6 left
[07:51] *** squashable6 joined
[08:53] *** Altai-man joined
[09:10] *** sena_kun joined
[09:11] *** Altai-man left
[09:30] *** squashable6 left
[09:31] *** squashable6 joined
[10:00] <nine> sena_kun: the offer to host those bots on my server still stands. We could give them their own VM, so it'd be easy to duplicate their current setup without any major changes

[10:02] <sena_kun> nine, we have plenty of resources (there is the blin server from our infra folks, your server, I can rent one without issues), just nobody to do the migration / setup work.

[10:03] <nine> Why is docker necessary?

[10:06] <sena_kun> I believe it makes maintaining easier (replicas, restarts), is more secure (that's when you execute someone's code on your machine), plus fixes some glibc issue if old enough distro is used.

[10:10] <nine> systemd takes care of the first one and the other two are covered by having your own VM

[10:11] <sena_kun> So be it, whatever floats the bot!

[10:11] <nine> At least tkll we find someone with the time to properly care for them

[10:36] <MasterDuke> nine: how much free ssd space does it have?

[10:38] <nine> well, no ssd

[10:47] <MasterDuke> hm, not even sure we've tested them on non-ssd. wonder if that would make dwarfs even more attractive since it would use the kernel's file cache, which would theoretically be more helpful for spinning rust

[11:01] <nine> How much IO do these bots do?

[11:09] <rba> - The blin server only runs docker container for security reason.

[11:09] <rba> - I can take the lead with migration, but I need help.

[11:09] <rba> - As I understand some bots are cpu hungry and some are disk hungry.

[11:17] <nine> help in what form?

[11:46] <MasterDuke> nine: not much sustained io. but lots of random access to extract the individual commit builds from their archives

[11:47] <MasterDuke> rba: i wouldn't say any particular bot is cpu or disk hungry. it's all the builds that the bots use that take up a lot of disk space

[11:47] <MasterDuke> of course depending on what code people run, a bot may use a bunch of cpu for a little while

[12:35] *** leont joined
[13:09] *** Altai-man joined
[13:11] *** sena_kun left
[13:25] <timotimo> docker isn't a security mechanism

[13:36] <moritz> that's halfway true

[13:36] <moritz> docker makes it easy to use cgroups, which in turn can be a security feature

[13:37] <moritz> and namespaces for lots of stuff, like PIDs

[13:55] *** lucasb joined
[15:24] *** squashable6 left
[15:24] *** coverable6 left
[15:24] *** benchable6 left
[15:24] *** notable6 left
[15:24] *** sourceable6 left
[15:24] *** tellable6 left
[15:24] *** bloatable6 left
[15:24] *** unicodable6 left
[15:24] *** quotable6 left
[15:24] *** nativecallable6 left
[15:24] *** bisectable6 left
[15:24] *** evalable6 left
[15:24] *** greppable6 left
[15:24] *** shareable6 left
[15:24] *** statisfiable6 left
[15:24] *** releasable6 left
[15:24] *** linkable6 left
[15:24] *** committable6 left
[15:24] *** benchable6 joined
[15:24] *** linkable6 joined
[15:25] *** nativecallable6 joined
[15:25] *** greppable6 joined
[15:25] *** sourceable6 joined
[15:25] *** statisfiable6 joined
[15:25] *** unicodable6 joined
[15:25] *** evalable6 joined
[15:25] *** coverable6 joined
[15:25] *** bisectable6 joined
[15:26] *** notable6 joined
[15:26] *** tellable6 joined
[15:26] *** squashable6 joined
[15:26] *** releasable6 joined
[15:26] *** bloatable6 joined
[15:26] *** quotable6 joined
[15:26] *** committable6 joined
[15:26] *** shareable6 joined
[15:46] *** leont left
[16:04] <Geth> Â¦ nqp/getlex_fallback: d81725d3ac | (Stefan Seifert)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[16:04] <Geth> Â¦ nqp/getlex_fallback: Fix try_get_bind_scope not stopping on undefined outer

[16:04] <Geth> Â¦ nqp/getlex_fallback: 

[16:04] <Geth> Â¦ nqp/getlex_fallback: The check for type BlockInfo always succeeds, because BlockInfo is actually not

[16:04] <Geth> Â¦ nqp/getlex_fallback: yet declared at that point, so it evaluates to NQPMu from which all types are

[16:04] <Geth> Â¦ nqp/getlex_fallback: derived. So the loop doesn't actually stop when outer is empty. Fix by checking

[16:04] <Geth> Â¦ nqp/getlex_fallback: for definedness instead.

[16:04] <Geth> Â¦ nqp/getlex_fallback: review: https://github.com/Raku/nqp/commit/d81725d3ac

[16:04] <Geth> Â¦ nqp/getlex_fallback: 64f05f8b8e | (Stefan Seifert)++ | 13 files

[16:04] <Geth> Â¦ nqp/getlex_fallback: Support HLL fallback versions of ops looking for lexicals by name

[16:04] <Geth> Â¦ nqp/getlex_fallback: review: https://github.com/Raku/nqp/commit/64f05f8b8e

[17:10] *** sena_kun joined
[17:11] *** Altai-man left
[21:09] *** Altai-man joined
[21:11] *** sena_kun left
[23:15] *** Altai-man left
