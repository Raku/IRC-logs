[00:22] *** leont left
[00:29] *** squashable6 left
[00:31] *** squashable6 joined
[00:43] *** mst left
[00:44] *** mst joined
[00:55] *** sena_kun joined
[00:56] *** bisectable6 left
[00:56] *** bisectable6 joined
[00:56] <AlexDaniel> so it's live now

[00:56] <AlexDaniel> bisect: dd "SOMETHING".Date

[00:56] <bisectable6> AlexDaniel, Will bisect the whole range automagically because no endpoints were provided, hang tight

[00:57] <bisectable6> AlexDaniel, 

[00:57] *** Altai-man_ left
[00:57] <bisectable6> AlexDaniel, Bisecting by output (old=2020.02.1 new=2020.05.1) because on both starting points the exit code is 1

[00:57] <AlexDaniel> …

[00:57] <AlexDaniel> now what was that…

[00:58] <AlexDaniel> who wants to bet that deleting precomp files will fix that :)

[01:02] *** unicodable6 left
[01:02] *** bloatable6 left
[01:02] *** quotable6 left
[01:02] *** squashable6 left
[01:02] *** committable6 left
[01:02] *** sourceable6 left
[01:02] *** bisectable6 left
[01:02] *** reportable6 left
[01:02] *** shareable6 left
[01:02] *** benchable6 left
[01:02] *** releasable6 left
[01:02] *** coverable6 left
[01:02] *** nativecallable6 left
[01:02] *** linkable6 left
[01:02] *** greppable6 left
[01:02] *** statisfiable6 left
[01:02] *** notable6 left
[01:02] *** tellable6 left
[01:02] *** evalable6 left
[01:03] *** greppable6 joined
[01:03] *** releasable6 joined
[01:03] *** notable6 joined
[01:03] *** coverable6 joined
[01:03] *** committable6 joined
[01:04] *** linkable6 joined
[01:04] *** squashable6 joined
[01:04] *** quotable6 joined
[01:04] *** unicodable6 joined
[01:04] *** reportable6 joined
[01:04] *** bloatable6 joined
[01:04] *** nativecallable6 joined
[01:04] *** tellable6 joined
[01:05] *** evalable6 joined
[01:05] *** bisectable6 joined
[01:05] *** shareable6 joined
[01:05] *** statisfiable6 joined
[01:06] *** sourceable6 joined
[01:06] <AlexDaniel> bisect: dd "SOMETHING".Date

[01:06] <bisectable6> AlexDaniel, Will bisect the whole range automagically because no endpoints were provided, hang tight

[01:06] <bisectable6> AlexDaniel, Output on all releases: https://gist.github.com/53c1691079edb365516971ae0d5efe90

[01:06] <bisectable6> AlexDaniel, Bisecting by output (old=2020.02.1 new=2020.05.1) because on both starting points the exit code is 1

[01:06] <AlexDaniel> told ya!

[01:06] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/55b46efbe3f3aa6f55729659a8c0f6d1

[01:06] <bisectable6> AlexDaniel, (2020-02-29) https://github.com/rakudo/rakudo/commit/d95d218f3192b06f0bb52bceb90e43d198747f09

[01:06] <bisectable6> AlexDaniel, Bisecting by output (old=2017.05 new=2017.06) because on both starting points the exit code is 1

[01:07] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/b7d7eb947cfeb80641e72df1667cf2a8

[01:07] <bisectable6> AlexDaniel, (2017-06-01) https://github.com/rakudo/rakudo/commit/7cf01296d95ef7abd4369db25e996f656b955cd7

[01:07] <bisectable6> AlexDaniel, Bisecting by output (old=2016.09 new=2016.10) because on both starting points the exit code is 1

[01:07] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/c5d07d9a5b24e85cd5851e62036f582a

[01:07] <bisectable6> AlexDaniel, (2016-09-27) https://github.com/rakudo/rakudo/commit/222d16b0b94911fdedb06ee6ad817d0f14b9c05c

[01:07] <bisectable6> AlexDaniel, Output on all releases and bisected commits: https://gist.github.com/5693dccf20877f45d66d5f59cad6d62a

[01:08] <AlexDaniel> OK, I know, not that impressive at all because I already showed that in the past. But look, it's committed now! And the code is not as horrible as it was!

[01:09] <AlexDaniel> anyway, expect a bit of a bumpy road at first because I can't really know if this is going to work in real world :)

[01:09] <AlexDaniel> there are some quirks I know about, but we'll see if anybody notices… :)

[02:54] *** Altai-man_ joined
[02:57] *** sena_kun left
[04:48] *** MasterDuke left
[04:55] *** sena_kun joined
[04:56] *** Altai-man_ left
[05:55] <nine> AlexDaniel: but deleting precomp files should never be necessary?

[06:25] <Geth> ¦ nqp: usev6++ created pull request #643: [JVM] Make gather work with last/next/redo in loop

[06:25] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/pull/643

[06:34] <[Tux]> Rakudo version 2020.05.1-289-gf11d75084 - MoarVM version 2020.05-95-gc177e85cc

[06:34] <[Tux]> csv-test-xs-20      0.380 -  0.388

[06:34] <[Tux]> csv-ip5xs           0.797 -  0.816

[06:34] <[Tux]> test-t --race       0.827 -  0.934

[06:34] <[Tux]> test-t              1.910 -  1.912

[06:34] <[Tux]> csv-ip5xs-20        7.676 -  7.852

[06:34] <[Tux]> test                7.973 -  8.048

[06:34] <[Tux]> test-t-20 --race    9.041 -  9.594

[06:34] <[Tux]> csv-parser         25.641 - 26.846

[06:34] <[Tux]> test-t-20          31.610 - 31.713

[06:34] <bartolin_> my above PR tackles a problem I've tried to fix (or at least understand) since more than five years. I guess, I've worked hundreds of hours on it (over the years). When I started out I've never heard about Java bytecode, so I guess I've learned one or two things ;)

[06:54] *** Altai-man_ joined
[06:55] <nine> Woah, bartolin_++

[06:57] *** sena_kun left
[07:13] <moritz> bartolin_++ indeed

[08:34] *** leont joined
[08:43] *** ShimmerFairy left
[08:44] *** ShimmerFairy joined
[08:51] <Geth> ¦ problem-solving: b0601e0a8a | (JJ Merelo)++ | solutions/ecosystem-versioning.md

[08:51] <Geth> ¦ problem-solving: Solution for issue #72

[08:51] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/b0601e0a8a

[08:51] <Geth> ¦ problem-solving: a13560b211 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | solutions/ecosystem-versioning.md

[08:51] <Geth> ¦ problem-solving: Merge pull request #202 from JJ/master

[08:51] <Geth> ¦ problem-solving: 

[08:51] <Geth> ¦ problem-solving: Solution for issue #72: spin off module publishing tutorial in the documentation.

[08:51] <Geth> ¦ problem-solving: No one has spoken against, or actually seem to care, so I guess I could as well merge it.

[08:51] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/a13560b211

[08:55] *** sena_kun joined
[08:57] *** Altai-man_ left
[08:58] <lizmat> Files=1306, Tests=111382, 217 wallclock secs (28.93 usr  8.60 sys + 3029.01 cusr 287.12 csys = 3353.66 CPU)

[09:13] *** lichtkind_ joined
[09:15] *** lichtkind left
[10:30] <Geth> ¦ nqp/new-disp: c0d4f2f289 | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[10:30] <Geth> ¦ nqp/new-disp: Ensure dispatch upholds flattening ordering rules

[10:30] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/c0d4f2f289

[10:54] *** Altai-man_ joined
[10:57] *** sena_kun left
[11:15] <AlexDaniel> nine: that is correct, but it doesn't change the fact that it solves issues sometimes

[11:18] <Geth> ¦ problem-solving/revert-202-master: c6710b85f1 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | solutions/ecosystem-versioning.md

[11:18] <Geth> ¦ problem-solving/revert-202-master: Revert "Solution for issue #72: spin off module publishing tutorial in the documentation."

[11:18] <Geth> ¦ problem-solving/revert-202-master: review: https://github.com/Raku/problem-solving/commit/c6710b85f1

[11:18] <Geth> ¦ problem-solving: AlexDaniel++ created pull request #205: Revert "Solution for issue #72: spin off module publishing tutorial in the documentation."

[11:18] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/pull/205

[11:18] <Geth> ¦ problem-solving: c6710b85f1 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | solutions/ecosystem-versioning.md

[11:18] <Geth> ¦ problem-solving: Revert "Solution for issue #72: spin off module publishing tutorial in the documentation."

[11:18] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/c6710b85f1

[11:18] <Geth> ¦ problem-solving: f616d5fd48 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | solutions/ecosystem-versioning.md

[11:18] <Geth> ¦ problem-solving: Merge pull request #205 from Raku/revert-202-master

[11:18] <Geth> ¦ problem-solving: 

[11:18] <Geth> ¦ problem-solving: Revert "Solution for issue #72: spin off module publishing tutorial in the documentation."

[11:18] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/f616d5fd48

[11:19] *** JJMerelo joined
[11:20] <JJMerelo> AlexDaniel what's the problem with merging that? It's been 19 days with no feedback, positive or negative.

[11:20] <AlexDaniel> JJMerelo: that's exactly the problem

[11:20] <AlexDaniel> JJMerelo: jnthn said “Please do; I'll review the solution.”, did he do that?

[11:21] <AlexDaniel> if so, he was supposed to indicate that the PR is ready, or something

[11:21] <AlexDaniel> just because something didn't get a response doesn't mean it's good

[11:21] <AlexDaniel> kinda the opposite really

[11:23] <JJMerelo> AlexDaniel don't want to add additional load to the repo people, jnthn is the last of them. 

[11:23] <JJMerelo> But really, it's less work to review the proposal than reverting the commit. 

[11:23] <AlexDaniel> if jnthn said he'll review the solution then he's ok reviewing the solution

[11:24] <JJMerelo> Process is important, but it's only as important as what's at stake here. 

[11:24] <JJMerelo> which is, basically, creating an issue in another repo.

[11:24] <AlexDaniel> but if you violate the process all the time then there's no process at all

[11:26] <JJMerelo> You have mentioned that 14 days have passed, so it can be merged

[11:26] <JJMerelo> I really don't care about opening it back. You want to do that, feel free.

[11:27] <AlexDaniel> my understanding has always been that it's 14 days once it is ready. That is when somebody says “ok, it's ready now, please review”

[11:28] <AlexDaniel> otherwise it's hard to know if you should review it at all, “draft” feature for PRs is relatively new and people don't use it as often

[11:28] <AlexDaniel> which is maybe why you didn't get any reviews, by the way

[11:30] <AlexDaniel> so to make it clear, you just submitted a PR, never indicated that it's ready, never pinged any reviewers, didn't wait for jnthn to give you the promised review, then went ahead and decided to merge it yourself

[11:30] <AlexDaniel> do you understand that this way you can merge pretty much any change, no matter how wrong or right it is?

[11:30] <JJMerelo> not to get too picky on this, but your PR to revert my merge should have followed the same process https://github.com/Raku/problem-solving/pull/205

[11:30] <JJMerelo> It didn't

[11:31] <JJMerelo> So what you're basically saying is that only you can merge (or revert) any change, no matter how wrong or right it is.

[11:31] <AlexDaniel> you're going to tell me how I violated the process I designed after you did it?

[11:31] <AlexDaniel> you had no assignee, so I'd say it was self-assigned. You called for a shortcut and merged it without following the process.

[11:32] <AlexDaniel> I object. Meaning that the change can be reverted

[11:32] <AlexDaniel> that's according to the process, if it's not clear

[11:32] <nine> JJMerelo: that the revert was in the form of a PR doesn't mean that the full process has to apply. That's just a technical means to retroactively rejecting.

[11:33] <nine> AlexDaniel: following the process is important of course. This particular issue doesn't look like it really needed the problem-solving process in the first place though.

[11:33] <nine> After all the merged "solution" was really just an elaborate "we'll improve the docs"

[11:33] <JJMerelo> As a matter of fact, it does. Because it's not taking the repo to the initial state, which would have been PR open and waiting for feedback.

[11:33] <AlexDaniel> nine: I agree, but there was a PR, so what do we do

[11:34] <nine> I suggest relaxing a little :) The damage if any is quite minimal

[11:34] <AlexDaniel> nine: ideally someone should've just said “OK this particular idea doesn't need a PR so just go ahead and work on it”

[11:34] <nine> absolutely, yes

[11:34] <AlexDaniel> there's no damage, but let's not start complaining that the PR was reverted

[11:34] <nine> JJMerelo: btw. I'm all for improving our module author's docs. Please do :)

[11:34] <JJMerelo> AlexDaniel or "this particular idea does not need a PR so it's not a big deal that it's been merged"

[11:35] <JJMerelo> nine we need to do that. Badly.

[11:35] <JJMerelo> I'm not going to restore the PR. I'm going to do what was requested in the unmerged repo, which was basically that.

[11:35] <nine> I understand that the problem-solving process is a hot topic. After all I was in the middle of the recent discussions. I do concur that we need to stick to a process until we decide to change the process.

[11:36] <nine> As for this particluar issue, I'd say lets put it to rest.

[11:56] <JJMerelo> Suppose you want to extract all use/need/require statements from a distro. What do you think would be the best way? Regexes? Using Perl6::Parser? Is there anything in core that allows you to do that already?

[11:57] <JJMerelo> I think it would be very convenient to have a Test::Dependencies in the ecosystem that would test that what you have in META6.json is actually what you are using, and you've not left some boilerplate or old stuff there.

[12:00] <lizmat> perhaps install a custom $*REPO that will records all requests for loading a given module

[12:00] <lizmat> but that would imply all that is needed should already be available

[12:01] <lizmat> but I guess in this case that would be ok, since you want to check whether a *working* module has all of its dependencies recorded in its META6.json

[12:03] <JJMerelo> Right

[12:10] <JJMerelo> m: my $*REPO = $*REPO but "say $_"; use Test; say $*REPO

[12:10] <camelia> rakudo-moar f11d75084: OUTPUT: «Unexpected named argument 'value' passed␤  in block <unit> at <tmp> line 1␤␤»

[12:10] <JJMerelo> I guess I'll have to find a way to create a custom $*REPO. If I can't figure it out, there's always regexen.

[12:12] <JJMerelo> using $*REPO.need, I guess https://docs.raku.org/language/compilation#$*REPO

[12:27] <nine> JJMerelo: create a class doing the CompUnit::Repository role. The `need` method can record the dependency and forward the request to self.next-repo

[12:28] <JJMerelo> That's what I'm trying to do... Don't know about forwarding the request, really, after all, we don't really want to load the dependency, right?

[12:30] <nine> Sure you do. Otherwise the test file won't be able to continue compiling

[12:31] *** MasterDuke joined
[12:33] <JJMerelo> nine I'm trying this https://github.com/JJ/my-raku-examples/blob/ab90b53c27364e788fa174da579abda721aba36d/custom-repo.p6

[12:34] <JJMerelo> nine and I get the error in "use Test": Too few positionals passed; expected 3 arguments but got 2

[12:35] <nine> Because $precomp ought to be optional and have a default

[12:36] <JJMerelo> nine right!

[12:36] <JJMerelo> Got it working. Thanks!

[12:55] *** sena_kun joined
[12:57] *** Altai-man_ left
[13:04] *** JJMerelo left
[14:02] <Geth> ¦ rakudo: afe851108f | (Elizabeth Mattijsen)++ | src/core.c/ForeignCode.pm6

[14:02] <Geth> ¦ rakudo: Simplify EVAL(:check) handling

[14:02] <Geth> ¦ rakudo: 

[14:02] <Geth> ¦ rakudo: No need to coerce to Bool or set up a default, as Any is also falsy.

[14:02] <Geth> ¦ rakudo: Won't help much with performance, but every little bit helps.

[14:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/afe851108f

[14:10] <sena_kun> releasable6, status

[14:10] <releasable6> sena_kun, Next release in ≈4 days and ≈4 hours. 1 blocker. 143 out of 290 commits logged (⚠ 4 warnings)

[14:10] <releasable6> sena_kun, Details: https://gist.github.com/4a5be11a68f9266cf5024b72fbc97903

[14:16] *** ShimmerFairy left
[14:16] *** ShimmerFairy joined
[14:54] *** Altai-man_ joined
[14:57] *** sena_kun left
[15:00] <releasable6> Next release in ≈4 days and ≈3 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[15:42] *** JJMerelo joined
[16:40] <nine> Oh, this actually makes sense. The first object pulling in t/02-rakudo/03-corekeys-6c.t as a dependency of Test::Helpers.pm6 is the "Test" Stash. Both the script and Test::Helpers use this module and it gets repossessed into Test::Helpers

[16:55] *** sena_kun joined
[16:56] <nine> Which unfortunately brings me back to MoarVM refusing to load modules multiple times. Because of this we of course get the same objects for such symbols which causes them to get repossessed which inevitably drags in those dependencies.

[16:56] *** Altai-man_ left
[17:00] <jnthn> If it did load the bytecode multiple times, the SC handle would still be identical

[17:00] <jnthn> So you'd still not solve anything

[17:01] <jnthn> At least, not only by making it not do that

[17:02] <nine> Yes, that's why I gave up on that approach yesterday. I don't really have any other idea though :/

[17:03] <jnthn> I guess our separate compilation ain't as separate as we'd wish...

[17:04] <jnthn> Each thing having its own GLOBALish only solves the problem one level deep

[17:05] <nine> Indeed, as these different GLOBALishs already share the same values

[17:06] <nine> Incidentally that's the same restriction as lexical module loading

[17:06] <jnthn> Yup

[17:06] <jnthn> .WHO hangs off the stable, which hangs off the type object, and we expect there to be one of those...

[17:07] <jnthn> Well, do a degree we do

[17:07] <jnthn> *to

[17:07] <jnthn> I wonder how far that's really true

[17:12] <nine> Would it be possible to create a repossession barrier? I.e. tell the VM to not repossess objects that were created before that point but just clone them into the current SC?

[17:13] <jnthn> Hmm...but then we end up with multiple of the same object in memory?

[17:14] <jnthn> Or did we want to throw them all away again after precomp?

[17:14] <nine> We do...at least for now

[17:50] *** maggotbrain joined
[18:01] *** leont left
[18:08] *** leont joined
[18:33] *** JJMerelo left
[18:54] *** Altai-man_ joined
[18:57] *** sena_kun left
[20:45] * lizmat likes to be reminded why the Match object isn't a value type?

[20:45] <lizmat> I mean, it *is* immutable, ls it not ?

[20:48] <moritz> it's .ast is mutable at least

[20:48] <moritz> the rest shouldn't be, after it's finished

[20:49] <lizmat> hmmm...

[20:51] <lizmat> ok, not a value type then  :-)

[20:52] <lizmat> FWIW, /me is working on a version of Match that is *not* a child class of Capture, and which does *not* have any additional attributes

[20:53] <lizmat> which basically means it won't need any post-processing when it is returned from NQP

[20:55] *** sena_kun joined
[20:57] *** Altai-man_ left
[21:02] <Geth> ¦ nqp: 7b67febc70 | (Christian Bartolomäus)++ | src/vm/jvm/QAST/Compiler.nqp

[21:02] <Geth> ¦ nqp: [JVM] Minimal fix for comment and alignment

[21:02] <Geth> ¦ nqp: 

[21:02] <Geth> ¦ nqp: (Those extra spaces have distracted me far too often, so they

[21:02] <Geth> ¦ nqp: have to go.)

[21:02] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/7b67febc70

[21:52] *** Altai-man_ joined
[21:54] *** sena_kun left
[22:03] *** notable6 left
[22:03] *** notable6_ joined
[22:03] *** statisfiable6 left
[22:04] *** lichtkind__ joined
[22:04] *** statisfiable6 joined
[22:04] *** lichtkind__ left
[22:04] *** AlexDaniel` left
[22:05] *** [Tux] left
[22:05] *** [Tux] joined
[22:06] *** committable6 left
[22:06] *** committable6 joined
[22:06] *** lichtkind_ left
[22:12] *** AlexDaniel` joined
[22:30] *** AlexDaniel` left
[22:33] *** nativecallable6 left
[22:33] *** coverable6 left
[22:33] *** jjatria left
[22:33] *** committable6 left
[22:33] *** [Tux] left
[22:33] *** nebuchadnezzar left
[22:33] *** b2gills left
[22:33] *** nine left
[22:33] *** jdv79 left
[22:33] *** tailgate left
[22:33] *** [Coke] left
[22:33] *** MasterDuke left
[22:33] *** Altai-man_ left
[22:33] *** sivoais left
[22:33] *** Geth left
[22:33] *** krunen left
[22:33] *** lucs left
[22:33] *** gugod left
[22:33] *** japhb left
[22:33] *** gfldex left
[22:33] *** zostay left
[22:33] *** SmokeMachine left
[22:33] *** klapperl_ left
[22:33] *** pochi left
[22:33] *** masak left
[22:33] *** moritz left
[22:33] *** ShimmerFairy left
[22:33] *** shareable6 left
[22:33] *** bisectable6 left
[22:33] *** evalable6 left
[22:33] *** releasable6 left
[22:33] *** greppable6 left
[22:33] *** vrurg left
[22:33] *** dogbert17 left
[22:33] *** Kaiepi left
[22:33] *** Summertime left
[22:33] *** maggotbrain left
[22:33] *** AlexDaniel left
[22:33] *** tyil left
[22:33] *** statisfiable6 left
[22:33] *** notable6_ left
[22:33] *** unclechu left
[22:33] *** eater left
[22:33] *** mst left
[22:33] *** HarmtH left
[22:33] *** tbrowder left
[22:33] *** lizmat left
[22:33] *** raku-bridge left
[22:33] *** literal left
[22:33] *** samebchase- left
[22:33] *** moon-child left
[22:33] *** synthmeat left
[22:33] *** jnthn left
[22:33] *** leont left
[22:33] *** sourceable6 left
[22:33] *** tellable6 left
[22:33] *** bloatable6 left
[22:33] *** reportable6 left
[22:33] *** unicodable6 left
[22:33] *** quotable6 left
[22:33] *** squashable6 left
[22:33] *** linkable6 left
[22:33] *** TimToady left
[22:33] *** Voldenet left
[22:33] *** camelCaser left
[22:33] *** kawaii left
[22:33] *** TreyHarris left
[22:33] *** go|dfish left
[22:33] *** robertle left
[22:33] *** rypervenche left
[22:33] *** chansen_ left
[22:33] *** hoelzro left
[22:33] *** rba left
[22:33] *** finsternis left
[22:33] *** camelia left
[22:33] *** commavir left
[22:33] *** sjn left
[22:33] *** kubrat left
[22:37] *** [Coke] joined
[22:37] *** nebuchadnezzar joined
[22:37] *** b2gills joined
[22:37] *** nine joined
[22:37] *** jdv79 joined
[22:37] *** Altai-man_ joined
[22:37] *** sivoais joined
[22:37] *** Geth joined
[22:37] *** krunen joined
[22:37] *** lucs joined
[22:37] *** gugod joined
[22:37] *** japhb joined
[22:37] *** statisfiable6 joined
[22:37] *** notable6_ joined
[22:37] *** unclechu joined
[22:37] *** eater joined
[22:37] *** mst joined
[22:37] *** HarmtH joined
[22:37] *** rypervenche joined
[22:37] *** chansen_ joined
[22:37] *** hoelzro joined
[22:37] *** rba joined
[22:37] *** unclechu left
[22:37] *** maggotbrain joined
[22:37] *** AlexDaniel joined
[22:37] *** tyil joined
[22:37] *** tailgate joined
[22:37] *** tbrowder joined
[22:37] *** lizmat joined
[22:37] *** raku-bridge joined
[22:37] *** literal joined
[22:37] *** samebchase- joined
[22:38] *** gfldex joined
[22:38] *** zostay joined
[22:38] *** SmokeMachine joined
[22:38] *** klapperl_ joined
[22:38] *** pochi joined
[22:38] *** masak joined
[22:38] *** moritz joined
[22:38] *** nativecallable6 joined
[22:38] *** coverable6 joined
[22:38] *** jjatria joined
[22:38] *** leont joined
[22:38] *** sourceable6 joined
[22:38] *** tellable6 joined
[22:38] *** bloatable6 joined
[22:38] *** reportable6 joined
[22:38] *** unicodable6 joined
[22:38] *** quotable6 joined
[22:38] *** squashable6 joined
[22:38] *** linkable6 joined
[22:38] *** TimToady joined
[22:38] *** Voldenet joined
[22:38] *** camelCaser joined
[22:38] *** TreyHarris joined
[22:38] *** go|dfish joined
[22:38] *** robertle joined
[22:38] *** committable6 joined
[22:38] *** [Tux] joined
[22:38] *** vrurg joined
[22:38] *** dogbert17 joined
[22:38] *** Kaiepi joined
[22:38] *** Summertime joined
[22:38] *** ShimmerFairy joined
[22:38] *** shareable6 joined
[22:38] *** bisectable6 joined
[22:38] *** evalable6 joined
[22:38] *** releasable6 joined
[22:38] *** greppable6 joined
[22:38] *** moon-child joined
[22:38] *** synthmeat joined
[22:38] *** jnthn joined
[22:38] *** MasterDuke joined
[22:38] *** sjn joined
[22:40] *** kawaii joined
[22:42] *** camelia joined
[22:42] *** kubrat joined
[22:44] *** commavir joined
[22:44] *** finsternis joined
[22:46] *** sivoais left
[22:46] *** sivoais joined
[22:51] *** AlexDaniel` joined
[22:55] *** sena_kun joined
[22:57] *** Altai-man_ left
[22:57] *** unclechu joined
[23:12] *** HarmtH left
[23:14] *** HarmtH joined
[23:58] *** leont left
