[03:00] <releasable6> Next release in ≈6 days and ≈15 hours. 2 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:20] *** evalable6 left
[03:20] *** linkable6 left
[03:22] *** linkable6 joined
[03:23] *** evalable6 joined
[04:17] *** maggotbrain joined
[06:32] *** frost-lab joined
[07:53] *** evalable6 left
[07:53] *** linkable6 left
[07:55] *** linkable6 joined
[07:56] *** evalable6 joined
[08:08] *** Altai-man joined
[08:35] <Geth> ¦ roast: 44685318d2 | (Christian Bartolomäus)++ | S10-packages/precompilation.t

[08:35] <Geth> ¦ roast: [JVM] Skip test that started to fail recently

[08:35] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/44685318d2

[08:43] <Geth> ¦ rakudo: usev6++ created pull request #4110: [JVM] Make optional coercive parameter work again

[08:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4110

[08:53] *** stoned75 joined
[09:09] *** sena_kun joined
[09:10] *** Altai-man left
[13:05] <Geth> ¦ rakudo: 1c43c46efb | (Elizabeth Mattijsen)++ | 7 files

[13:05] <Geth> ¦ rakudo: Remove return Sig from .elems methods

[13:05] <Geth> ¦ rakudo: 

[13:05] <Geth> ¦ rakudo: We can be pretty sure that these will either return an Int or a

[13:05] <Geth> ¦ rakudo: Failure.  So there's no real need to check here.  This appears to

[13:05] <Geth> ¦ rakudo: have a positive effect, typically on multi-dimensional shaped array

[13:05] <Geth> ¦ rakudo: accesses, hence the reason for doing this (typically from 15% of

[13:05] <Geth> ¦ rakudo: total to 15% of total effort).

[13:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1c43c46efb

[13:08] *** Altai-man joined
[13:10] *** sena_kun left
[13:36] <Geth> ¦ nqp: f7be5c5932 | (Nicholas Clark)++ | t/nqp/019-file-ops.t

[13:36] <Geth> ¦ nqp: floating point atime should be compared with integer atime, not mtime.

[13:36] <Geth> ¦ nqp: 

[13:36] <Geth> ¦ nqp: Similarly ctime with ctime, not mtime.

[13:36] <Geth> ¦ nqp: 

[13:36] <Geth> ¦ nqp: This appears to be a copy-paste thinko that dates back to when the test was

[13:36] <Geth> ¦ nqp: originally added in 2016 by commit 37862cd52d63eb61:

[13:36] <Geth> ¦ nqp:     Add subsecond file time ops stat_time and lstat_time

[13:36] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/f7be5c5932

[13:36] <Geth> ¦ nqp: a083615656 | (Jonathan Worthington)++ (committed using GitHub Web editor) | t/nqp/019-file-ops.t

[13:36] <Geth> ¦ nqp: Merge pull request #688 from Raku/atime-with-atime

[13:36] <Geth> ¦ nqp: 

[13:36] <Geth> ¦ nqp: floating point atime should be compared with integer atime, not mtime.

[13:36] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/a083615656

[13:51] *** MasterDuke left
[13:51] *** lucasb joined
[14:20] *** MasterDuke joined
[14:40] *** sxmx left
[14:44] *** sxmx joined
[16:13] <Geth> ¦ roast: 9c443ac27d | (Christian Bartolomäus)++ | S17-supply/syntax.t

[16:13] <Geth> ¦ roast: [JVM] Unfudge tests (no UnwindException anymore)

[16:13] <Geth> ¦ roast: 

[16:13] <Geth> ¦ roast: It's not clear what made the UnwindException go away, but the tests

[16:13] <Geth> ¦ roast: seem to run fine now.

[16:13] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/9c443ac27d

[16:49] *** stoned75 left
[17:09] *** sena_kun joined
[17:10] *** Altai-man left
[17:35] *** leont joined
[18:30] <Geth> ¦ rakudo: nwc10++ created pull request #4111: Use `exec` instead of `system` and then exiting with the return code.

[18:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/4111

[18:30] <nwc10> that totally doesn't fit the PR template :-)

[18:30] <nwc10> or :-(

[18:47] <Geth> ¦ rakudo: 856dfb2d2e | (Christian Bartolomäus)++ | src/vm/jvm/runtime/org/raku/rakudo/Binder.java

[18:47] <Geth> ¦ rakudo: [JVM] Make optional coercive parameter work again

[18:47] <Geth> ¦ rakudo: 

[18:47] <Geth> ¦ rakudo: Fixes https://github.com/rakudo/rakudo/issues/4092 for the JVM backend.

[18:47] <Geth> ¦ rakudo: Inspired by https://github.com/rakudo/rakudo/commit/44cc88b54c.

[18:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/856dfb2d2e

[18:47] <Geth> ¦ rakudo: 5e791d7995 | (Christian Bartolomäus)++ (committed using GitHub Web editor) | src/vm/jvm/runtime/org/raku/rakudo/Binder.java

[18:47] <Geth> ¦ rakudo: Merge pull request #4110 from usev6/jvm_coercive_optional

[18:47] <Geth> ¦ rakudo: 

[18:47] <Geth> ¦ rakudo: [JVM] Make optional coercive parameter work again

[18:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5e791d7995

[18:56] <Geth> ¦ nqp: b12517b062 | (Christian Bartolomäus)++ | src/vm/jvm/QAST/Compiler.nqp

[18:56] <Geth> ¦ nqp: [JVM] Make gather work with last/next/redo in loop

[18:56] <Geth> ¦ nqp: 

[18:56] <Geth> ¦ nqp: This helps with a long standing bug on the JVM backend:

[18:56] <Geth> ¦ nqp: https://github.com/rakudo/rakudo/issues/3634

[18:56] <Geth> ¦ nqp: 

[18:56] <Geth> ¦ nqp: If last/next/redo were called within an extra block (marked as

[18:56] <Geth> ¦ nqp: 'immediate' or 'immediate_static'), that call was translated to

[18:56] <Geth> ¦ nqp: <…commit message has 8 more lines…>

[18:56] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/b12517b062

[19:45] *** Xliff joined
[19:45] <Xliff> Oh my....

[19:46] <Xliff> IRC looks brilliant on my new 86" TV

[19:47] <Xliff> An actual on-topic question: Has anyone run into a "too many open files" error when precompiling nested modules?

[19:48] <Xliff> In my larger work, I am trying to run a script, go 7 extra levels down (modules requiring other modules...) and can trigger this error.

[19:48] <Xliff> If not, will try to golf and reproduce.

[19:50] <Xliff> Bumping ulimit fixed it. Is raku leaking file handles?

[20:28] <MasterDuke> that's not a tv, that's a small wall

[20:33] <lizmat> Xliff: possibly

[20:33] <Xliff> MasterDuke: :)

[20:34] <Xliff> lizmat: I've been looking at my system. I think it MIGHT not be rakudo

[20:34] <Xliff> My browsers are memory and file hungry beasts.

[20:35] <Xliff> If I see the problem again, I will golf and bug.

[20:38] <MasterDuke> Xliff: maybe check lsof close to the end of your precompilation? see if raku/moar have a lot of files open

[20:43] <Xliff> That's pretty much what I did. Except I counted files without raku running.

[20:43] <Xliff> Previous ulimit was 1024 files

[20:43] <Xliff> Now it's 2048.

[20:44] <Xliff> Browsers had close to 1000 files open!

[20:44] <MasterDuke> ha

[20:45] <Xliff> Exactly!

[20:50] *** stoned75 joined
[20:52] <stoned75> Hi

[20:52] <stoned75> I'm looking https://github.com/rakudo/rakudo/blob/master/src/core.c/Signature.pm6#L21

[20:52] <stoned75> and I'm wondering if the final comma is a typo or if it serves a specific purpose ?

[20:57] <MasterDuke> looks like a typo

[21:00] <Xliff> Yeah. A typo that stumbles into the right behavior because the value is sunk?

[21:08] *** Altai-man joined
[21:08] <Xliff> Noticing a definite slide in rakudo compile times over the last 4 weeks

[21:11] *** sena_kun left
[21:11] <lizmat> stoned75: yup, a harmless typo

[21:12] <Geth> ¦ rakudo: 6843f80330 | (Elizabeth Mattijsen)++ | src/core.c/Signature.pm6

[21:12] <Geth> ¦ rakudo: Fix harmless typo

[21:12] <Geth> ¦ rakudo: 

[21:12] <Geth> ¦ rakudo: Spotted by stoned75++

[21:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6843f80330

[21:13] <Xliff> https://docs.google.com/spreadsheets/d/1M3S9hqD9PkT_kkbBI3D9hrcYUhE9jj9TfPRMpQcUpmE/edit?usp=sharing

[21:13] <Xliff> Note the 2 timings tabs

[21:13] <lizmat> Xliff: sadly not visible for the Google login impaired

[21:14] <stoned75> lizmat: yeah, I had to recompile rakudo a few times to convince myself it was harmless, ... as I've been mislead by Signature.new's caveat wrt to its count parameter's type :-}

[21:14] <Xliff> lizmat: I'll see what I can do.

[21:15] <Xliff> lismat: Does this work? https://docs.google.com/spreadsheets/d/1M3S9hqD9PkT_kkbBI3D9hrcYUhE9jj9TfPRMpQcUpmE/edit?usp=sharing

[21:19] <Xliff> lizmat ^^

[21:20] <lizmat> yup

[21:21] <lizmat> Xliff: O and P ?

[21:22] <Xliff> lizmat: where?

[21:22] <lizmat> looking at https://docs.google.com/spreadsheets/d/1M3S9hqD9PkT_kkbBI3D9hrcYUhE9jj9TfPRMpQcUpmE/edit#gid=2044890947  I'm not sure what to look for ?

[21:23] <lizmat> ah, wrong tab

[21:23] <Xliff> Yah. tabs ending in "timings"

[21:25] <Xliff> Even with GIO and ATK removed from 11/16 numbers that still would be the fastest timing in 4 weeks

[21:30] <Geth> ¦ rakudo: e1f09cfaf8 | (Elizabeth Mattijsen)++ | src/core.c/Parameter.pm6

[21:30] <Geth> ¦ rakudo: Fix copy-pasto, also spotted by stoned75++

[21:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e1f09cfaf8

[21:31] <lizmat> Xliff: you *are* saying that compilation is taking *longer*, right ?

[21:37] <stoned75> lizmat: I wonder if I should ask you to describe Parameter.usage-name in one sentence or if I go on trying to double check my understanding of it and spot other typos and pastos ;-)

[21:41] <lizmat> m: sub a(:a(:$b)) { }; dd &a.signature.params.head.usage-name

[21:41] <camelia> rakudo-moar 6843f8033: OUTPUT: «"b"␤»

[21:43] <lizmat> so I guess it's the name of the parameter inside the scope?   Without its sigil

[21:43] <Xliff> lizmat: Yes.

[21:44] <Xliff> m: sub a(:$a) { }; dd &a.signature.params.head.usage-name

[21:44] <camelia> rakudo-moar 6843f8033: OUTPUT: «"a"␤»

[21:44] <Xliff> m: sub a($b, :$a, :xliff(:$c)) { }; dd &a.signature.params.map( *.usage-name)

[21:44] <camelia> rakudo-moar 6843f8033: OUTPUT: «("b", "a", "c").Seq␤»

[21:45] <lizmat> stoned75: looks like it really is an implementation detail

[21:45] <Xliff> lizmat: Ah! Cool.

[21:46] <lizmat> Xliff: not sure where that was an answer to

[21:46] <Xliff> <lizmat> Xliff: you *are* saying that compilation is taking *longer*, right ?

[21:47] <lizmat> well... it taking longer I wouldn't describe as "Cool"  :-(

[21:48] <Xliff> lizmat: Oh. No. The "Cool" was for .usage-name

[21:48] <lizmat> ah, right, ok  :-)

[21:48] <stoned75> lizmat: ok. but it's only used once in rakudo's sources, and btw it was added by you ;-)

[21:49] <lizmat> could well be

[21:50] <lizmat> hmmm...  my git blame says Ben Davies ?

[21:50] <stoned75> https://github.com/rakudo/rakudo/commit/676ad669c9ae92f5c9890aed90d2e5f90616d8c0

[21:51] <lizmat> ah, ok,  :-)  almost 5 years ago  :)

[21:51] *** patrickb joined
[21:53] <lizmat> ok, in that light, for people wanting to generate their own USAGE message, it's probably wise to document this as user-facing

[21:54] <stoned75> that's what I'm doing. but I wanted to understand its implementation and well... I got carried away :-}

[21:58] <stoned75> as now I'm wondering how a parameter could have a * or ! or . twigil

[22:02] *** maggotbrain left
[22:07] <lizmat> m: sub a(*@a) { dd @a };  a 1,2,3, <a b c>

[22:07] <camelia> rakudo-moar e1f09cfaf: OUTPUT: «Array element = [1, 2, 3, "a", "b", "c"]␤»

[22:07] <lizmat> m: sub a($*FOO) { dd $*FOO }; a 42

[22:07] <camelia> rakudo-moar e1f09cfaf: OUTPUT: «42␤»

[22:17] <stoned75> m: say Parameter.new(name => '$^a').usage-name

[22:17] <camelia> rakudo-moar e1f09cfaf: OUTPUT: «^a␤»

[22:17] <stoned75> hum so now this seems wrong

[22:17] <lizmat> yup that's wrong

[22:18] <lizmat> m: otoh, I don't think you can actually create such a parameter in plain Raku code

[22:18] <camelia> rakudo-moar e1f09cfaf: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3ly create such a parameter in plain Raku7⏏5 code␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement en…»

[22:18] <lizmat> m: my $b = { $^a }; dd $b.signature.params.head.usage-name

[22:18] <camelia> rakudo-moar e1f09cfaf: OUTPUT: «"a"␤»

[22:20] <lizmat> { $^a } is syntactic sugar for -> $a { $a }

[22:21] <stoned75> sure

[22:22] <Xliff> lizmat: Did you ever get a chance to comment on: https://gist.github.com/Xliff/f4af67ed380d1024a19d68975e4ed759

[22:23] <lizmat> I think I said a PR would be nice?  "Any thoughts? If you'd rather this be a PR, I'll have to work more on it."   

[22:24] <Xliff> Ah. OK.

[22:24] <Xliff> I need to finish writing the tests for it, anyway.

[22:25] <lizmat> ++Xliff 

[22:41] *** Altai-man left
[22:42] *** patrickb left
[23:00] <releasable6> Next release in ≈5 days and ≈19 hours. 2 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

