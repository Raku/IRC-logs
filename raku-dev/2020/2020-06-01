[00:06] *** lichtkind left
[02:31] *** unclechu left
[02:32] *** AlexDaniel` left
[02:41] *** unclechu joined
[02:55] *** AlexDaniel` joined
[09:31] <lizmat> hmmm... https://raku.org/downloads still mentions 2020.01 Rakudo Star 

[09:31] <lizmat> as does https://rakudo.org/star/

[09:33] *** sena_kun joined
[09:34] <sena_kun> I did a blin check twice and both times there are more or less modules (a couple of dozens!) with "Could not obtain blocking, exclusive lock: Failed to lock filehandle: 35", anything rings the bell?

[09:35] <rba> so far there is only a a src and linux binary release of rakudo star.

[09:35] <tellable6> 2020-05-31T15:30:33Z #raku-dev <patrickb> rba https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-05-31#l191

[09:38] <lizmat> ok, I'm going to pull the R* announcement from this weeks RWN

[09:43] <rba> s/linux binary release/windows binary release/

[09:55] <lizmat> notable6: weekly

[09:55] <notable6> lizmat, 8 notes: https://gist.github.com/344af4d0c7ece502b4256429f21cb02f

[10:02] <lizmat> notable6: weekly reset

[10:02] <notable6> lizmat, Moved existing notes to ‚Äúweekly_2020-06-01T10:02:06Z‚Äù

[10:09] *** Altai-man_ joined
[10:12] *** sena_kun left
[11:44] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/06/01/2020-21-22-four-by-wenzel/

[11:45] <Kaiepi> m: proto sub succ(|) {*}; multi sub succ(Int:D $x) { $x + 1 }; multi sub succ(**@xs) { @xs.map(*.succ) }; say succ 1

[11:45] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´2‚ê§¬ª

[11:45] <Kaiepi> does the Int:D candidate here get selected at compile-time?

[11:56] *** leont joined
[11:56] <Kaiepi> ah, forgot i could add stuff to the proto body to check

[12:01] <lizmat> afk for a few hours&

[12:10] *** sena_kun joined
[12:12] *** Altai-man_ left
[12:31] <timotimo> it randomly occurs to me that we may want to offer loading a module with a specific structure for stringification in the REPL, controllable via an environment variable (OTOH, security concerns)

[12:31] <timotimo> (after seeing RAKU_REPL_OUTPUT_METHOD in the weekly)

[12:46] *** camelCaser left
[12:47] *** camelCaser joined
[13:21] *** lichtkind joined
[13:24] <Geth> ¬¶ rakudo/rakuast: 41 commits pushed by (Jonathan Worthington)++

[13:24] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/compare/cc44b48b4430...e9c0ae462af8

[13:25] <jnthn> Just a rebase

[13:35] <Geth> ¬¶ rakudo: tbrowder self-assigned docs/compiler_overview.pod needs updating https://github.com/rakudo/rakudo/issues/3734

[13:52] *** bazzaar joined
[13:57] <[Coke]> m: dd "SOMETHING".Date

[13:57] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Invalid Date string 'SOMETHING'; use yyyy-mm-dd instead‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:57] <[Coke]> Can someone invoke a bot and tell me when that changed?

[13:58] <timotimo> bisectable6: dd "SOMETHING".Date

[13:58] <bisectable6> timotimo, Bisecting by output (old=2015.12 new=62adc88) because on both starting points the exit code is 1

[13:59] <bisectable6> timotimo, bisect log: https://gist.github.com/8c087e89ff98de84bf112403e2edc9e0

[13:59] <bisectable6> timotimo, (2016-09-27) https://github.com/rakudo/rakudo/commit/222d16b0b94911fdedb06ee6ad817d0f14b9c05c

[13:59] <AlexDaniel`> 6c: dd "SOMETHING".Date

[13:59] <committable6> AlexDaniel`, https://gist.github.com/c1422803ddb5cfb5b9a68ad3beb2d8cd

[14:00] <AlexDaniel`> [Coke]: ‚Üë which change are you interested in?

[14:02] <AlexDaniel`> if the most recent one, then

[14:02] <AlexDaniel`> b: old=2020.02.1 dd "SOMETHING".Date

[14:02] <bisectable6> AlexDaniel`, Bisecting by output (old=2020.02.1 new=62adc88) because on both starting points the exit code is 1

[14:02] <bisectable6> AlexDaniel`, bisect log: https://gist.github.com/c6e13f4023a676e0b6966c73969a48e8

[14:02] <bisectable6> AlexDaniel`, (2020-02-29) https://github.com/rakudo/rakudo/commit/d95d218f3192b06f0bb52bceb90e43d198747f09

[14:02] <[Coke]> we have a doc test that augments Str by adding Date; It is currently failing.

[14:03] <[Coke]> was trying to figure out if this was a change in Rakudo - doesn't look like it, and this test has been there since 2016, so something weird going on

[14:03] <[Coke]> https://github.com/Raku/doc/issues/3455

[14:06] <AlexDaniel`> [Coke]: yes, it's caused by a change in rakudo

[14:06] <AlexDaniel`> bisectable can reliably tell when something changed, that is as long as your question is correct

[14:07] <AlexDaniel`> when you don't know if it changed at all it's the wrong tool to use

[14:07] <AlexDaniel`> look at the output of committable, it gives the output on all releases, so it's much easier to see the picture

[14:08] <AlexDaniel`> after that it's easier to ask bisectable for the thing you're interested in by providing a narrower range

[14:08] <AlexDaniel`> so your answer is (2020-02-29) https://github.com/rakudo/rakudo/commit/d95d218f3192b06f0bb52bceb90e43d198747f09

[14:09] *** Altai-man_ joined
[14:09] <AlexDaniel`> just always use committable first

[14:11] <AlexDaniel`> arguably bisectable6 and committable6 should trigger at the same time, or maybe both bots should be combined into one

[14:11] <[Coke]> ... this is why I asked someone else to do it. :)

[14:11] *** sena_kun left
[14:12] <AlexDaniel`> yes yes that's very nice, I'm just curious why timotimo triggered bisectable and then disappeared üòá

[14:13] <[Coke]> AlexDaniel`++

[14:14] <AlexDaniel`> I should really fix the user interface of the bots one day, people always use bisectable first which nowadays gives misleading results because the range is so wide (from 2015 to 2020)

[14:14] <[Coke]> AlexDaniel`: so if I had picked something that didn't *fail*, that would have been better, but since it just failed *differently*, that didn't help?

[14:14] <AlexDaniel`> maybe it's time to change the default

[14:15] <AlexDaniel`> [Coke]: generally, yes. Then it would've used the exit code, and bisecting by exit code is always more predictable than bisection by output (because any change in the error message will be considered different and as such ‚Äúnew‚Äù)

[14:16] <jnthn> Could bissectable always run commitable too, and if it changed more than once in the range of commits being considered, then it can say "oh btw, this result might not be what you want"

[14:17] <AlexDaniel`> jnthn: yeah, something like that, are we willing to wait though? :)

[14:18] <AlexDaniel`> that is, currently committable is testing 43 revisions

[14:18] <AlexDaniel`> and bisectable on average tests about 12 or 13 I think

[14:18] <AlexDaniel`> unless it hits a lot of unbuildable commits

[14:19] <[Coke]> (yay doc testing that found this was no longer a good example!)

[14:19] <AlexDaniel`> of course I can parallelize it but then perf bisection is at risk, which I used to do relatively often

[14:20] <jnthn> Ah, logarithms end up being too awesome once again... :)

[14:21] <jnthn> .oO( just bissect on the commitable release commits too )

[14:21] <AlexDaniel`> yeah, and committable is getting slower over time while bisectable is remaining the same

[14:22] <AlexDaniel`> because even doubling the amount of commits in the range will only require one more test, while committable will get twice slower. Logarithms are nice indeed

[14:24] <AlexDaniel`> hmmm

[14:24] <AlexDaniel`> jnthn: I mean‚Ä¶ let's see if I can do it in one evening‚Ä¶

[14:25] <AlexDaniel`> I'll keep existing functionality the same but will add autobisect: feature

[14:32] <AlexDaniel`> ok I'll also change what bisectable does by default when you address it‚Ä¶

[14:32] <AlexDaniel`> or maybe what it does by default in general‚Ä¶

[14:37] *** lucasb joined
[15:57] *** Xliff joined
[15:59] <Xliff> jnthn: Hi there! How can you access rows using Spreadsheet::XLSX? I can see columns and cells, but not rows. 

[16:03] <Xliff> m: my @a[3;2];

[16:03] <camelia> rakudo-moar 62adc88c6: ( no output )

[16:04] <jnthn> You mean row metadata, or the cells in a row?

[16:04] <Xliff> The cells in the row

[16:04] <jnthn> You need to index the cells

[16:04] <jnthn> .cells[$row;$col]

[16:05] <jnthn> There's not yet any sugar for pulling out a whole row at once

[16:05] <Xliff> Ah. So that's a rakudo limitation?

[16:05] <Xliff> Is that something that is just NYI?

[16:05] <jnthn> Probably something the module should provide

[16:06] <Xliff> m: my @a[3;2] = [ rand xx 2 ] xx 2; @a.gist.say

[16:06] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´[[0.6994475307350786 0.3987772143997744]‚ê§ [0.445755831174833 0.8148259960965093]‚ê§ [(Any) (Any)]]‚ê§¬ª

[16:06] <Xliff> m: my @a[3;2] = [ rand xx 3 ] xx 2; @a.gist.say

[16:06] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Index 2 for dimension 2 out of range (must be 0..1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:06] <Xliff> m: my @a[3;2] = [ rand xx 2 ] xx 3; @a.gist.say

[16:06] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´[[0.6824559234434973 0.8812132385490395]‚ê§ [0.37053142664719985 0.794236344412102]‚ê§ [0.007650594138133071 0.7298466325525138]]‚ê§¬ª

[16:06] <Xliff> m: my @a[3;2] = [ rand xx 3 ] xx 2; @a[1].gist.say

[16:06] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Index 2 for dimension 2 out of range (must be 0..1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:06] <Xliff> m: my @a[3;2] = [ rand xx 3 ] xx 2; @a[1;1,2].gist.say

[16:06] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Index 2 for dimension 2 out of range (must be 0..1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:06] <Xliff> m: my @a[3;2] = [ rand xx 3 ] xx 2; @a[1;0,1].gist.say

[16:06] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Index 2 for dimension 2 out of range (must be 0..1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:07] <jnthn> m: my @a[3;2] = [ rand xx 3 ] xx 2; say @a[3;*]

[16:07] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Index 2 for dimension 2 out of range (must be 0..1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:07] <Xliff> m: my @a[3;2] = [ rand xx 3 ] xx 2; @a[1;0].gist.say

[16:07] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Index 2 for dimension 2 out of range (must be 0..1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:07] <jnthn> m: my @a[3;2] = [ rand xx 2 ] xx 3; say @a[3;*]

[16:07] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Partially dimensioned views of shaped arrays not yet implemented. Sorry.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:07] <jnthn> That's what I was looking for.

[16:07] <jnthn> Yeah, that isn't implemented yet

[16:07] <jnthn> m: my @a[3;2] = [ rand xx 2 ] xx 3; say @a[3]

[16:07] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Partially dimensioned views of shaped arrays not yet implemented. Sorry.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:07] <Xliff> OK, thanks!

[16:07] <jnthn> And that is a Rakudo-level limitation

[16:09] <Xliff> jnthn: So what's the best way to get the actual size of the worksheet?

[16:09] <jnthn> Implement support for dimensions, I guess :)

[16:10] *** sena_kun joined
[16:11] <Xliff> LOL. Just found out Cells doesn't implement .shape, so yeah.

[16:11] <jnthn> Yeah, it's there in the XML, just nothing pulls it out yet

[16:12] *** Altai-man_ left
[16:12] <Geth> ¬¶ rakudo/rakuast: 308f398ae7 | (Jonathan Worthington)++ | 6 files

[16:12] <Geth> ¬¶ rakudo/rakuast: Add basic RakuAST support for calls

[16:12] <Geth> ¬¶ rakudo/rakuast: 

[16:12] <Geth> ¬¶ rakudo/rakuast: The new RakuAST::Name node will be used in a few further places that

[16:12] <Geth> ¬¶ rakudo/rakuast: currently use strings also. For now, only non-flattening positional

[16:12] <Geth> ¬¶ rakudo/rakuast: arguments are supported.

[16:12] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/308f398ae7

[16:17] <Xliff> jnthn: Oh! I see that, now.

[16:17] <Xliff> (Looking at the source as we talk)

[16:21] <Xliff> jnthn: Your solution is rather elegant in a lazy-loading way. To get the dimensions might actually require a full document walk.

[16:21] <jnthn> Xliff: But some document generators tell us up front by emitting a dimensions tag, which would save that :)

[16:22] <Xliff> Ah. Need to find that tag in the specs.

[16:23] <jnthn> grmbl, there's a really nice site with the spec and I can never find it if I don't have it open in a tab

[16:27] <Xliff> jnthn: Getting this when attempting to read my spreadsheet: Missing attribute 'spans' on 'row'

[16:29] <Xliff> jnthn: Full backtrace, here: https://pastebin.com/am0d2tZe

[16:29] <jnthn> Hm, that ain't mandatory? :/

[16:30] <jnthn> (Excel always emits it...)

[16:30] <Xliff> Yeah, these were generated by an online tool

[16:30] <jnthn> Ah...hmm. That could be a small nuisance

[16:30] <Xliff> I can give you an example if you give me a second to sanitize the data. This is for $dayJob

[16:33] <Xliff> Ah, damn. To save it, I'd have to go through OpenOffice and it would recreate the file...possibly eliminating the evidence.

[16:33] <Xliff> :/

[16:34] <Xliff> jnthn: Do you mean this one? http://download.microsoft.com/download/3/E/3/3E3435BD-AA68-4B32-B84D-B633F0D0F90D/SpreadsheetMLBasics.ppt

[16:50] <Geth> ¬¶ rakudo/rakuast: ad93a0f7c4 | (Jonathan Worthington)++ | 2 files

[16:50] <Geth> ¬¶ rakudo/rakuast: Implement basic method calls in RakuAST

[16:50] <Geth> ¬¶ rakudo/rakuast: review: https://github.com/rakudo/rakudo/commit/ad93a0f7c4

[16:52] <Xliff> Hmmm... isn't there an easy way to take column "ABC" and turn it into a decimal index?

[16:54] <jnthn> Xliff: No...that's just a high-level overview.

[16:54] <jnthn> I think I've got the other one at home on a browser tab...will add a reference to it in the module

[16:54] <jnthn> Can't believe that the most detailed reference I found for it is so hard to re-find...

[16:56] <Xliff> my $c = 'ABC'; my $posV = 26 ** ($c.chars - 1); my $index = 0; for $c.comb -> { $index += (.ord - 64 * $posV); $posV /= 26 }; $index.say 

[16:56] <Xliff> m: my $c = 'ABC'; my $posV = 26 ** ($c.chars - 1); my $index = 0; for $c.comb -> { $index += (.ord - 64 * $posV); $posV /= 26 }; $index.say 

[16:56] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Too many positionals passed; expected 0 arguments but got 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:56] <Xliff> m: my $c = 'ABC'; my $posV = 26 ** ($c.chars - 1); my $index = 0; for $c.comb -> { $index += (ord($_) - 64 * $posV); $posV /= 26 }; $index.say 

[16:56] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Too many positionals passed; expected 0 arguments but got 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:57] <Xliff> m: my $c = 'ABC'; my $posV = 26 ** ($c.chars - 1); my $index = 0; for $c.comb { $index += (.ord - 64) * $posV); $posV /= 26 }; $index.say 

[16:57] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3 $c.comb { $index += (.ord - 64) * $posV7‚èè5); $posV /= 26 }; $index.say‚ê§    expecting any of:‚ê§        statement end‚ê§        statement modifier‚ê§       ‚Ä¶¬ª

[16:57] <Xliff> m: my $c = 'ABC'; my $posV = 26 ** ($c.chars - 1); my $index = 0; for $c.comb { $index += (.ord - 64) * $posV; $posV /= 26 }; $index.say 

[16:57] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´731‚ê§¬ª

[16:57] <Xliff> m: my $c = 'Z'; my $posV = 26 ** ($c.chars - 1); my $index = 0; for $c.comb { $index += (.ord - 64) * $posV; $posV /= 26 }; $index.say 

[16:57] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´26‚ê§¬ª

[16:57] <Xliff> m: my $c = 'AA'; my $posV = 26 ** ($c.chars - 1); my $index = 0; for $c.comb { $index += (.ord - 64) * $posV; $posV /= 26 }; $index.say 

[16:57] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´27‚ê§¬ª

[16:57] <Xliff> m: my $c = 'AZ'; my $posV = 26 ** ($c.chars - 1); my $index = 0; for $c.comb { $index += (.ord - 64) * $posV; $posV /= 26 }; $index.say 

[16:57] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´52‚ê§¬ª

[16:58] <Xliff> m: my $c = 'AAA'; my $posV = 26 ** ($c.chars - 1); my $index = 0; for $c.comb { $index += (.ord - 64) * $posV; $posV /= 26 }; $index.say 

[16:58] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´703‚ê§¬ª

[16:58] <Xliff> m: my $c = 'BA'; my $posV = 26 ** ($c.chars - 1); my $index = 0; for $c.comb { $index += (.ord - 64) * $posV; $posV /= 26 }; $index.say 

[16:58] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´53‚ê§¬ª

[16:58] <Xliff> \o/

[16:58] *** bazzaar left
[17:05] <jnthn> home time &

[18:09] *** Altai-man_ joined
[18:12] *** sena_kun left
[18:17] *** Xliff left
[18:23] *** MasterDuke left
[18:28] *** jjatria left
[18:31] *** jjatria joined
[18:35] *** AlexDaniel` left
[18:36] <tyil> .tell hankache maybe you can help here https://stackoverflow.com/questions/62137280/warnings-while-building-rakudo-in-windows

[18:36] <tellable6> tyil, I'll pass your message to hankache

[18:37] *** MasterDuke joined
[18:39] *** MasterDuke left
[18:39] *** MasterDuke joined
[18:42] *** unclechu left
[19:18] *** AlexDaniel` joined
[19:33] *** unclechu joined
[19:41] *** MasterDuke left
[19:56] <lizmat> weekly: https://perlmonks.org/?node_id=11117564

[19:56] <notable6> lizmat, Noted! (weekly)

[20:10] *** sena_kun joined
[20:12] *** Altai-man_ left
[20:14] *** lichtkind_ joined
[20:15] *** lichtkind left
[20:16] *** MasterDuke joined
[20:22] *** sena_kun left
[20:22] <[Coke]> <hagrid>I Shouldn't'a read that</hagrid>

[21:33] *** AlexDaniel joined
[21:34] *** AlexDaniel left
[21:34] *** AlexDaniel joined
[22:38] *** sena_kun joined
[23:00] *** sena_kun left
