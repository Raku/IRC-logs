[00:02] *** pamplemousse left
[00:25] *** titsuki joined
[00:30] *** Kaiepi left
[00:30] *** Kaiepi joined
[00:53] <Geth> ¦ nqp: ed8d95082a | (Vadim Belman)++ | tools/templates/Makefile-backend-common.in

[00:53] <Geth> ¦ nqp: Make stage 2 always fully rebuild upon changes in sources

[00:53] <Geth> ¦ nqp: 

[00:53] <Geth> ¦ nqp: As has been discussed here: https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-05-04#l312

[00:53] <Geth> ¦ nqp: stage 2 also tests the ability of stage 1 NQP to compile itself. Thus

[00:53] <Geth> ¦ nqp: full rebuild of it is required.

[00:53] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/ed8d95082a

[00:53] <Geth> ¦ nqp: 70c1ac1e61 | (Vadim Belman)++ | tools/templates/Makefile-backend-common.in

[00:53] <Geth> ¦ nqp: Fix JVM backend build

[00:53] <Geth> ¦ nqp: 

[00:53] <Geth> ¦ nqp: JVM runtime was skipped without STAGE0_DIR dependency.

[00:53] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/70c1ac1e61

[00:53] <Geth> ¦ nqp: a0e2995f51 | (Vadim Belman)++ (committed using GitHub Web editor) | tools/templates/Makefile-backend-common.in

[00:53] <Geth> ¦ nqp: Merge pull request #625 from vrurg/stage2-full-rebuild

[00:53] <Geth> ¦ nqp: 

[00:53] <Geth> ¦ nqp: Make stage 2 always fully rebuild upon changes in sources

[00:53] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/a0e2995f51

[01:03] *** titsuki left
[01:19] *** pamplemousse joined
[01:26] <timotimo> linkable6: 4cec44a3

[01:26] <linkable6> (2020-02-23) https://github.com/rakudo/rakudo/commit/4cec44a30f Implement index(string, @needles)

[01:28] <timotimo> linkable6: aaaaaa

[01:28] <timotimo> linkable6: 00000

[01:28] <timotimo> linkable6: 0000

[01:29] <timotimo> linkable6: 000

[02:59] *** pamplemousse left
[06:16] <AlexDaniel> timotimo: there are hundreds of commits like this, it simply refuses to link them x)

[06:24] *** anatofuz joined
[06:25] *** anatofuz_ joined
[06:26] *** anatofuz left
[06:27] *** anatofuz_ left
[06:28] *** anatofuz joined
[06:33] <Geth> ¦ rakudo: c0b5fb282c | (Elizabeth Mattijsen)++ | src/core.c/Instant.pm6

[06:33] <Geth> ¦ rakudo: Make Instant.perl a bit less noisy

[06:33] <Geth> ¦ rakudo: 

[06:33] <Geth> ¦ rakudo: By removing the "Bool::False" when it is not needed, and use normal

[06:33] <Geth> ¦ rakudo: stringification for the Rat representing the posix value.

[06:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c0b5fb282c

[06:33] <Geth> ¦ rakudo: c2dc0e57ce | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 397 files

[06:33] <Geth> ¦ rakudo: Merge branch 'master' into instant-perl

[06:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c2dc0e57ce

[06:33] <Geth> ¦ rakudo: 8989eb9118 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | src/core.c/Instant.pm6

[06:33] <Geth> ¦ rakudo: Merge pull request #3279 from rakudo/instant-perl

[06:33] <Geth> ¦ rakudo: 

[06:33] <Geth> ¦ rakudo: Make Instant.perl a bit less noisy

[06:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8989eb9118

[06:44] <nine> tbrowder: can you show me what you've got so far?

[07:02] *** samcv left
[07:03] *** samcv joined
[07:05] *** MasterDuke joined
[07:09] *** jjatria left
[07:09] *** sivoais left
[07:09] *** masak left
[07:09] *** moritz left
[07:13] *** Geth left
[07:13] *** Geth joined
[07:15] *** jjatria joined
[07:15] *** sivoais joined
[07:15] *** masak joined
[07:15] *** moritz joined
[07:21] *** sivoais left
[07:22] *** sivoais joined
[07:48] *** sena_kun joined
[07:57] <AlexDaniel> c: WHY-on-role-group say 42

[07:57] <committable6> AlexDaniel, ¦WHY-on-role-group: «42␤»

[07:57] <AlexDaniel> jnthn: there's your pull request :) https://github.com/rakudo/rakudo/pull/3549

[08:07] *** Kaiepi left
[08:08] *** Kaiepi joined
[08:23] <Geth> ¦ rakudo/master: 9 commits pushed by (Suman Khanal)++, (Aleks-Daniel Jakimenko-Aleksejev)++

[08:23] <Geth> ¦ rakudo/master: 627ffd4277 | change raku to rakudo executable

[08:23] <Geth> ¦ rakudo/master: 3d6756b3d8 | fix link to Raku Roast

[08:23] <Geth> ¦ rakudo/master: eab17e7ac7 | Reflect perl6 to raku rename

[08:23] <Geth> ¦ rakudo/master: 43c1f50f84 | reflect the migration of nqp

[08:23] <Geth> ¦ rakudo/master: 18ecb60485 | Remove a paragraph on p6alert service

[08:23] <Geth> ¦ rakudo/master: 2cff6dd95c | Remove the paragraph on different compilers

[08:23] <Geth> ¦ rakudo/master: 77b2f2a59c | add details on backends of rakudo

[08:23] <Geth> ¦ rakudo/master: b39bbc71e7 | Merge branch 'sumanstats-master'

[08:23] <Geth> ¦ rakudo/master: 5965cc3198 | Remove trailing whitespace

[08:23] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/8989eb911805...5965cc319857

[08:51] *** jjmerelo joined
[08:52] *** sena_kun left
[08:52] *** sena_kun joined
[08:53] <sena_kun>  

[08:53] <tellable6> 2020-05-05T07:14:34Z #moarvm <nine> sena_kun: you do know about MoarVM/tools/release?

[08:54] <sena_kun> nine, no idea, I used `make release VERSION=2020.05` which is used in the release guide.

[08:55] <sena_kun> And release make target is just `./tools/release.sh $(VERSION)` so I guess.

[08:57] *** jjmerelo left
[09:02] <jnthn> AlexDaniel: Yeah, not sure what to do with that. I guess maybe the best way is to version it and update the tests... I'm fine if somebody else picks it up and does that bit, given I'm on with quite a few other things :)

[09:07] *** Altai-man_ joined
[09:09] *** sena_kun left
[09:33] <AlexDaniel> lizmat: t/spec/S02-types/instants-and-durations.t ?

[09:34] *** jjmerelo joined
[09:34] <AlexDaniel> lizmat: in 6.d-errata branch too

[09:34] <jjmerelo> Hi again

[09:34] <AlexDaniel> o/

[09:34] <Altai-man_> releasable6, status

[09:34] <releasable6> Altai-man_, Release date for Rakudo 2020.05 is listed in “Planned future releases”, but it was already released.

[09:35] <releasable6> Altai-man_, and I oop! Backtrace: https://gist.github.com/d3fdc4b65feee7ad8ed4be923d3302dc

[09:35] <jjmerelo> The application for season of docs has been submitted

[09:35] <Altai-man_> nooooo

[09:35] <jjmerelo> Altai-man_ ++, great job with this new release.

[09:36] <Altai-man_> >2020-05-30   Rakudo #136 (Altai-man + Releasable)

[09:36] <Altai-man_> >Release date for Rakudo 2020.05 is listed in “Planned future releases”, but it was already released.

[09:36] <Altai-man_> I am kinda confused

[09:36] <lizmat> Files=1305, Tests=111245, 213 wallclock secs (28.73 usr  8.42 sys + 2992.34 cusr 278.88 csys = 3308.37 CPU)

[09:36] <lizmat> ^^ before release

[09:37] <Altai-man_> pls don't be bad

[09:41] <AlexDaniel> Altai-man_: “The next release of Rakudo (#136), is tentatively scheduled for 2020-05-30.”

[09:41] <Altai-man_> Yup, and?

[09:42] <AlexDaniel> how can we have two 2015.05 releases?

[09:42] <AlexDaniel> sorry 2020.05 releases*

[09:42] <Altai-man_> d'oh

[09:42] <Altai-man_> Ugh

[09:43] <Altai-man_> So next release would be in almost two months again?

[09:43] <AlexDaniel> Altai-man_: I think the date is just wrong, that's it

[09:43] <AlexDaniel> the announcement was also a bit too optimistic but don't worry about it

[09:44] <Altai-man_> I mean, we release now to avoid waiting for 3-4 damn weeks more, but that means we have to either move all the next release dates to start of the month or wait another two of them.

[09:45] <AlexDaniel> third Saturday of June is 20th

[09:45] <AlexDaniel> so 1.5 months away

[09:46] <AlexDaniel> sounds totally OK?

[09:46] <Altai-man_> *shrugs*

[09:47] <MasterDuke> might get some of the new dispatcher work in then

[09:47] <Altai-man_> That's the plan, I think.

[09:50] <Geth> ¦ rakudo: 4f672c2756 | (Ben Davies)++ (committed by Aleks-Daniel Jakimenko-Aleksejev) | lib/NativeCall/Compiler/GNU.rakumod

[09:50] <Geth> ¦ rakudo: Improve GNU C++ name mangling

[09:50] <Geth> ¦ rakudo: 

[09:50] <Geth> ¦ rakudo: This makes it so the symbol is not assumed to be a constructor when it

[09:50] <Geth> ¦ rakudo: includes new unless it's the last part of the symbol and infers whether

[09:50] <Geth> ¦ rakudo: or not the symbol is a constructor by checking if the last two parts of

[09:50] <Geth> ¦ rakudo: it are identical.

[09:50] <Geth> ¦ rakudo: 

[09:50] <Geth> ¦ rakudo: This also mangles Str, Pointer, and CArray attributes with the rw or

[09:50] <Geth> ¦ rakudo: cpp-const traits properly.

[09:50] <Geth> ¦ rakudo: 

[09:50] <Geth> ¦ rakudo: Closes #2884.

[09:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4f672c2756

[09:50] <linkable6> RAKUDO#2884 [closed]: https://github.com/rakudo/rakudo/pull/2884 Improve GNU C++ name mangling

[09:55] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue A way to control Rat's behavior when it is running out of range for its denominator https://github.com/Raku/problem-solving/issues/185

[09:56] <AlexDaniel> 2 more PRs to get down to 3 pages

[10:15] <lizmat> bisectable6: old=2020.01 my $i := Instant.from-posix(33/7, False); is-deeply $i, $i.raku.EVAL

[10:15] <bisectable6> lizmat, On both starting points (old=2020.01 new=4f672c2) the exit code is 1 and the output is identical as well

[10:15] <bisectable6> lizmat, Output on both points: «04===SORRY!04=== Error while compiling /tmp/WQn5i46JjO␤Undeclared routine:␤    is-deeply used at line 1␤␤»

[10:15] <lizmat> bisectable6: old=2020.01 use Test; my $i := Instant.from-posix(33/7, False); is-deeply $i, $i.raku.EVAL

[10:15] <bisectable6> lizmat, Bisecting by exit code (old=2020.01 new=4f672c2). Old exit code: 0

[10:15] <bisectable6> lizmat, bisect log: https://gist.github.com/03324aa7eccad626e5f2246bd85aa975

[10:15] <bisectable6> lizmat, (2019-11-05) https://github.com/rakudo/rakudo/commit/c0b5fb282ce29ddc01bd0401d50fedc20aae971d

[10:17] <lizmat> How can a commit from before 2020.01 be the cause when bisecting from 2020.01 ?

[10:17] <lizmat> AlexDaniel ^^  ??

[10:17] <lizmat> ah, it got merged ?

[10:17] <AlexDaniel> lizmat: it's just a date, yeah

[10:18] <AlexDaniel> # expected: Instant.from-posix(4.714286)

[10:18] <AlexDaniel> #      got: Instant.from-posix(4.714286)

[10:18] * AlexDaniel squints

[10:18] <AlexDaniel> I… don't see any difference??

[10:20] <AlexDaniel> m: my $i := Instant.from-posix(33/7, False); dd $i; dd $i.raku.EVAL

[10:20] <camelia> rakudo-moar 4f672c275: OUTPUT: «Instant.from-posix(4.714286)␤Instant.from-posix(4.714286)␤»

[10:20] <lizmat> yeah...  its 33/7, which doesn't represent as a float, so some kind of rounding issue

[10:29] *** dogbert17 joined
[10:29] *** timotimo left
[10:29] *** ccamel left
[10:29] *** dogbert11 left
[10:29] *** camelCaser joined
[10:30] *** timotimo joined
[10:40] <tbrowder> nine: yes, i'll put it up on my fork this morning. i'm struggling with the actual tests. i'm trying to "testify" the two short scripts into a working two tests which die-ok and live-ok but no luck so far.

[10:41] <Geth> ¦ rakudo: f506cc039d | (Elizabeth Mattijsen)++ | src/core.c/Instant.pm6

[10:41] <Geth> ¦ rakudo: Fix Instant.raku for Rational values

[10:41] <Geth> ¦ rakudo: 

[10:41] <Geth> ¦ rakudo: Instant.raku was internally depending on Instant.Str, which uses .gist,

[10:41] <Geth> ¦ rakudo: which creates issues for values such as 33/7

[10:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f506cc039d

[10:41] <Geth> ¦ nqp/new-disp: 65eaa1bbcd | (Jonathan Worthington)++ | 2 files

[10:41] <Geth> ¦ nqp/new-disp: Mark literal call arguments in callsites

[10:41] <Geth> ¦ nqp/new-disp: review: https://github.com/Raku/nqp/commit/65eaa1bbcd

[10:42] <Geth> ¦ rakudo: ee005d8ba4 | (Ben Davies)++ | 2 files

[10:42] <Geth> ¦ rakudo: Improve X::Syntax::Variable::MissingInitializer's message

[10:42] <Geth> ¦ rakudo: 

[10:42] <Geth> ¦ rakudo: This makes the messages it can give more consistent. On top of that,

[10:42] <Geth> ¦ rakudo: attributes now get referred to as attributes instead of variables and

[10:42] <Geth> ¦ rakudo: the "is required" trait now gets mentioned with them.

[10:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ee005d8ba4

[10:42] <Geth> ¦ rakudo: a601e7f38b | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 2 files

[10:42] <Geth> ¦ rakudo: Merge pull request #3589 from Kaiepi/attribute-missing-initializer

[10:42] <Geth> ¦ rakudo: 

[10:42] <Geth> ¦ rakudo: Improve X::Syntax::Variable::MissingInitializer's message

[10:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a601e7f38b

[10:51] <Geth> ¦ roast: c2ae95f082 | (Ben Davies)++ | S02-types/subset-6e.t

[10:51] <Geth> ¦ roast: Update tests WRT X::Syntax::Variable::MissingInitializer's new msgs

[10:51] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/c2ae95f082

[10:51] <Geth> ¦ roast: 66c48fb802 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | S02-types/subset-6e.t

[10:51] <Geth> ¦ roast: Merge pull request #632 from Kaiepi/attribute-missing-initializer

[10:51] <Geth> ¦ roast: 

[10:51] <Geth> ¦ roast: Update tests WRT X::Syntax::Variable::MissingInitializer's new msgs

[10:51] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/66c48fb802

[10:52] *** squashable6 left
[10:53] *** squashable6 joined
[11:07] *** sena_kun joined
[11:09] *** Altai-man_ left
[11:30] <Geth> ¦ rakudo: 37646b869b | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/PrecompilationStore/File.pm6

[11:30] <Geth> ¦ rakudo: Add CACHEDIR.TAG to mark cache dirs as cache

[11:30] <Geth> ¦ rakudo: 

[11:30] <Geth> ¦ rakudo: As suggested in https://github.com/rakudo/rakudo/pull/1796 , but

[11:30] <Geth> ¦ rakudo: that PR bitrotted, so this commit implements the idea.

[11:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/37646b869b

[11:37] <lizmat> argh... was too focussed on it not breaking installation of modules, that I forgot to run spectests :-(

[11:38] <Geth> ¦ rakudo: c3bdb617cb | (Elizabeth Mattijsen)++ | t/02-rakudo/reproducible-builds.t

[11:38] <Geth> ¦ rakudo: Make sure we remove the CACHEDIR.TAG file as well

[11:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c3bdb617cb

[11:44] <lizmat> nine: I'me seeing t/spec/S01-perl-5-integration/method.t pass test #2 after this

[11:45] <lizmat> "blessed # TODO P5 classes not yet shadowed in P6"

[11:47] <nine> sena_kun: tools/release automates the first 6 steps of the release guide (sans the actual cleaning up of commits in the ChangeLog). I guess we should adapt the release guide to replace those steps with a call to the script

[11:47] <nine> Most of all it makes the tests with NFG_DEBUG painless

[11:47] <sena_kun> nine, is there anything I've done wrong or?

[11:49] <nine> lizmat: it's Inline::Perl5 0.48 which implemented the tested functionality

[11:49] <nine> sena_kun: nah, you could have just saved some time

[11:50] <lizmat> Ah, I guess I just reinstalled an updated Inline::Perl5 then

[11:51] <lizmat> after I nuked my install to test the CACHEDIR.TAG functionality

[11:52] <Geth> ¦ roast: 6587491dfd | (Elizabeth Mattijsen)++ | S32-exceptions/misc.t

[11:52] <Geth> ¦ roast: Update faulty test count

[11:52] <Geth> ¦ roast: review: https://github.com/Raku/roast/commit/6587491dfd

[11:54] <tbrowder> .tell nine PR pushed just now

[11:54] <tellable6> tbrowder, I'll pass your message to nine

[12:01] <lizmat> a strange performance difference:

[12:01] <lizmat> m: my @a = ^1000; for ^1000 { my @b = @a.map: * + 1 }; say now - INIT now

[12:01] <camelia> rakudo-moar c3bdb617c: OUTPUT: «0.346152␤»

[12:01] <lizmat> m: my @a = ^1000; for ^1000 { my @b = @a.rotate(3) }; say now - INIT now

[12:01] <camelia> rakudo-moar c3bdb617c: OUTPUT: «0.8259712␤»

[12:02] <lizmat> the slowdown appears to come from https://github.com/rakudo/rakudo/blob/master/src/core.c/Array.pm6#L31

[12:02] <lizmat> not getting speshed, inlined or JITted

[12:03] <lizmat> and taking 50%+ of CPU in that benchmark

[12:04] <lizmat> feels like LHF for someone  :-)

[12:05] <AlexDaniel> c: 2020.05 say 42

[12:05] <committable6> AlexDaniel, ¦2020.05: «Cannot test this commit (Commit exists, but an executable could not be built for it)»

[12:05] <AlexDaniel> hmm

[12:05] <AlexDaniel> perhaps just bad luck

[12:05] <lizmat> perhaps it should automatically try for the next commit that *did* build ?

[12:06] <jnthn> Hm, when building Rakudo I'm seeing a flood of stuff like:

[12:06] <jnthn> Use of uninitialized value $str in substitution (s///) at /home/jnthn/dev/rakudo/3rdparty/nqp-configure/lib/NQP/Config.pm line 1402.

[12:06] <[Tux]> Moving into the right direction …

[12:06] <[Tux]> Rakudo version 2020.05-41-gc3bdb617c - MoarVM version 2020.05-2-g60b567089

[12:06] <[Tux]> csv-test-xs-20      0.378 -  0.386

[12:06] <[Tux]> csv-ip5xs           0.821 -  0.835

[12:06] <[Tux]> test-t --race       0.882 -  0.964

[12:06] <[Tux]> test-t              1.965 -  1.985

[12:06] <[Tux]> test                7.608 -  7.614

[12:06] <[Tux]> csv-ip5xs-20        8.322 -  8.412

[12:06] <[Tux]> test-t-20 --race    9.573 -  9.801

[12:06] <[Tux]> csv-parser         24.811 - 26.056

[12:06] <[Tux]> test-t-20          31.317 - 33.059

[12:07] <jnthn> Hm, and the installed result is broken...wonder if that's local changes or not

[12:07] <lizmat> jnthn: I'm not seeing that and I just rebuild completely from scratch after nuking  my install dir

[12:07] <sena_kun> ayaya, test-t looks healthy, that's a good sign

[12:07] <AlexDaniel> damn I should've checked the output first before removing the build

[12:08] <AlexDaniel> lizmat: first of all it shouldn't fail to build something that's buildable…

[12:08] <jnthn> ohh...I was sat on the rakuast branch and didn't notice :)

[12:08] <lizmat> AlexDaniel: que?

[12:09] <AlexDaniel> lizmat: it was re “perhaps it should automatically try for the next commit that *did* build”

[12:09] <lizmat> ah, ok

[12:10] <AlexDaniel> c: 2020.05 say 42

[12:10] <committable6> AlexDaniel, ¦2020.05: «42␤»

[12:11] <AlexDaniel> c: 2020.05^,2020.05^^,2020.05^^^,2020.05^^^^,2020.05^^^^^ say 42

[12:11] <committable6> AlexDaniel, ¦2020.05^: «Cannot test this commit (Commit exists, but an executable could not be built for it)» ¦2020.05^^,2020.05^^^,2020.05^^^^,2020.05^^^^^: «42␤»

[12:11] <AlexDaniel> shareable6: 2020.05^

[12:11] <shareable6> AlexDaniel, https://whateverable.6lang.org/2020.05^

[12:12] <AlexDaniel> error: pathspec '2020.05' did not match any file(s) known to git

[12:12] <AlexDaniel> oh

[12:13] * sena_kun looks at 2020.05 tag

[12:14] <AlexDaniel> something about tags being pushed at different times, I think

[12:14] <AlexDaniel> it's OK now, it just failed to build for these two commits

[12:17] *** anatofuz left
[12:19] <lizmat> R3664   # so it doesn't fall through the cracks

[12:19] <lizmat> R#3664   # so it doesn't fall through the cracks

[12:19] <linkable6> R#3664 [open]: https://github.com/rakudo/rakudo/issues/3664 ArrayReificationTarget.push not speshing

[12:31] <jjmerelo> The application for Google's summer of docs is in, but we can still add ideas to the repository https://perl-foundation-outreach.github.io/season-of-docs-ideas/ Anything that's Raku-related is game. Just create a PR

[12:32] <jjmerelo> There're again only 50 slots, so it's going to be difficult to get in. Main thing working in our favor is that our application got rejected last year. Still, 50 slots are too few...

[12:33] <jjmerelo> So, anyway, a diversity and quantity of documentation projects will also help us, so please feel free to add

[12:34] <lizmat> afk for a few hours&

[12:38] <jjmerelo> I'll be in a few minutes...

[12:43] * jjmerelo goes afk for lunch and siesta

[12:45] <MasterDuke> huh, a profile of the code in R#3664 shows that push not being speshed or jitted, but a spesh log disagrees

[12:45] <linkable6> R#3664 [open]: https://github.com/rakudo/rakudo/issues/3664 [performance] ArrayReificationTarget.push not speshing

[12:46] <MasterDuke> no lego jit bails, and there is an 'after' spesh

[12:47] <MasterDuke> a perf report does look a little odd though. 2nd most expensive is MVM_spesh_arg_guard_run at 5.2% and next is resolve_using_guards also at 5.2%

[12:47] *** jjmerelo left
[12:48] <nine> tbrowder: that's still 5 times as many LOC as the whole of Inline::Perl5 :/

[12:48] <tellable6> 2020-05-05T11:54:08Z #raku-dev <tbrowder> nine PR pushed just now

[12:49] <tbrowder> yep, it will take some time to trim more

[12:51] <tbrowder> and a lot more effort.

[12:52] <tbrowder> if you have the fix on a branch i can test my prog with it before maybe wasting time on trimming

[12:53] <tbrowder> we could also keep it zipped until build/test time

[12:55] <tbrowder> i mean just store the zipped file in github

[12:56] <tbrowder> i'm willing to work on the trimming but i can't guarantee any size target

[12:57] <tbrowder> or time table

[12:57] <nine> Looks like all that was needed was https://github.com/niner/Inline-Perl5/commit/b21371e4cd93c05030f35d059e5bf0338b221162#diff-bd5008bff3a738c6ff255b5e6a38d39c

[13:00] <tbrowder> cool! maybe i can create a simpler test without all tha Excel overhead

[13:01] <tbrowder> in the meantime i can press on with my pressing project--thanks!

[13:07] *** Altai-man_ joined
[13:09] *** pamplemousse joined
[13:09] *** sena_kun left
[13:12] <Geth> ¦ nqp: 45aedacdfd | (Timo Paulssen)++ (committed by timo) | 18 files

[13:12] <Geth> ¦ nqp: Don't bind an int attribute to 0 directly after construction

[13:12] <Geth> ¦ nqp: 

[13:12] <Geth> ¦ nqp: since we construct objects null-initialized anyway.

[13:12] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/45aedacdfd

[13:14] <timotimo> i thought after the release this is probably just fine to merge

[13:29] <tbrowder>  nine: will you require a test to release the fix?

[13:35] <Geth> ¦ rakudo: 48e073e2db | (Ben Davies)++ | 3 files

[13:35] <Geth> ¦ rakudo: Allow debuggers to be specified by environment variables

[13:35] <Geth> ¦ rakudo: 

[13:35] <Geth> ¦ rakudo: This makes it so gdb/lldb/valgrind are used by default, but may be

[13:35] <Geth> ¦ rakudo: overridden by RAKUDO_GDB/RAKUDO_LLDB/RAKUDO_VALGRIND environment

[13:35] <Geth> ¦ rakudo: variables.

[13:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/48e073e2db

[13:35] <Geth> ¦ rakudo: b01b0120bc | (Ben Davies)++ | tools/templates/moar/rakudo-gdb-m.in

[13:35] <Geth> ¦ rakudo: Default to using egdb when possible in rakudo-gdb-m

[13:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b01b0120bc

[13:35] <Geth> ¦ rakudo: 6a79e18fbc | (Vadim Belman)++ (committed using GitHub Web editor) | 3 files

[13:35] <Geth> ¦ rakudo: Merge pull request #3489 from Kaiepi/debugger-overrides

[13:35] <Geth> ¦ rakudo: 

[13:35] <Geth> ¦ rakudo: Allow debuggers to be specified by environment variables

[13:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6a79e18fbc

[13:39] <Geth> ¦ problem-solving: Skarsnik assigned to AlexDaniel Issue Nativecall, native trait library usage rework https://github.com/Raku/problem-solving/issues/186

[13:45] *** squashable6 left
[13:45] *** squashable6 joined
[14:18] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue Nativecall, native trait library usage rework https://github.com/Raku/problem-solving/issues/186

[14:18] <Geth> ¦ problem-solving: AlexDaniel self-unassigned Nativecall, native trait library usage rework https://github.com/Raku/problem-solving/issues/186

[14:48] *** jjmerelo joined
[15:07] *** sena_kun joined
[15:09] *** Altai-man_ left
[15:45] <Geth> ¦ problem-solving: JJ assigned to jnthn Issue Use a grammar for command line options https://github.com/Raku/problem-solving/issues/187

[16:09] <jjmerelo> OK, I need a bit of help with testing rakudo stuff

[16:09] <jjmerelo> I'm trying to carry over this PR https://github.com/rakudo/rakudo/pull/368/files

[16:10] <jjmerelo> It adds a couple of named arguments to ok, so it's not critical, I guess, so good choice to cut my teeth there.

[16:11] <jjmerelo> Also, not core, so adding a feature not such a big deal. Right now also the oldest open PR

[16:19] <jjmerelo> OK, what I've done is to test in on S24/1-basic.t, which *already* had tests for it, and they pass; they didn't

[16:19] <jjmerelo> ... before. So I'll do it as a PR anyway, just to be on the safe side. OK?

[16:20] <AlexDaniel> jjmerelo: don't merge it

[16:22] <jjmerelo> I wasn't thinking about doing it. I'm creating a new PR for it.

[16:22] <Geth> ¦ rakudo: JJ++ created pull request #3665: Incorporates @paultcochrane patch for ok with named args.

[16:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3665

[16:23] <AlexDaniel> jjmerelo: and don't merge your own PR also

[16:23] <jjmerelo> OK.

[16:25] <jjmerelo> Anyway, my point is that would be the way to proceed. Change, test with roast, PR if you're not sure, right?

[16:25] <AlexDaniel> it adds a named argument that nobody really needs

[16:25] <AlexDaniel> and it does so for just `ok`

[16:25] <jjmerelo> `is` needs it too..

[16:25] <AlexDaniel> I don't even see any justification, it looks like there are some speculated tests or something?

[16:25] <jjmerelo> Correct

[16:26] <AlexDaniel> we shouldn't add features just because, first discuss it in problem-solving if there's a problem at all

[16:26] <jjmerelo> But in this case, tests are already in roast

[16:26] <jjmerelo> so it's spec

[16:26] <AlexDaniel> if they're TODO-ed then I don't consider it spec

[16:27] <AlexDaniel> a lot of these old tests are no longer relevant

[16:27] <jjmerelo> It's these tests https://github.com/Raku/roast/blob/master/S24-testing/1-basic.t#L27-L31

[16:28] <AlexDaniel> no, just the last two

[16:28] <AlexDaniel> ah… wait so these already pass?

[16:28] <AlexDaniel> simply because :todo is ignored?

[16:29] <jjmerelo> No, 2 to 5 don't pass 

[16:29] <jjmerelo> any of them with desc or todo

[16:29] <jjmerelo> Unexpected named argument 'desc' passed

[16:29] <jjmerelo> ... They do now...

[16:30] <AlexDaniel> ? O_o

[16:30] <AlexDaniel> do we skip this whole file or something?

[16:31] <jjmerelo> Beats me

[16:31] <AlexDaniel> yeah, it's not in spectest.data

[16:31] <jjmerelo> It does not have any fudge mark...

[16:31] <jjmerelo> So tests are not tested?

[16:31] <AlexDaniel> jjmerelo: yeah, some files are not used at all

[16:31] <jjmerelo> :O 

[16:32] <jjmerelo> So

[16:32] <AlexDaniel> anyway, close both PRs, open a problem-solving ticket discussing whether we need :todo named arg at all

[16:32] <AlexDaniel> and we'll reject it from there… :D

[16:32] <jjmerelo> OK, but does not _really_ solve the side problem

[16:33] <jjmerelo> why is 1-basic.t excluded?

[16:33] <jjmerelo> Anyway, doing that.

[16:33] <AlexDaniel> I guess it's easier than fudging all tests in it?

[16:33] <[Coke]> if a file is not in any variant of spectest.data, there is definitely an argument to remove the file

[16:34] <jjmerelo> AlexDaniel some tests definitely pass...

[16:34] <AlexDaniel> jjmerelo: yeah, some basic ones pass, that's fine

[16:35] <AlexDaniel> does anybody know the justification for :todo? Where does it come from?

[16:35] <[Coke]> AlexDaniel: what do you mean, justification?

[16:35] <AlexDaniel> I checked S24 but it doesn't seem to be there

[16:35] <AlexDaniel> https://design.raku.org/S24.html

[16:35] <[Coke]> of todo tests at all?

[16:36] <[Coke]> prior testing art.

[16:36] <[Coke]> "Here's a test that we can run. we want to know when it passes as soon as it starts passing."

[16:36] <[Coke]> as opposed to skip: "here's a test we can't even run, so leave it here but don't try to execute it."

[16:36] <AlexDaniel> [Coke]: I'm talking about the :todo named arg, see these tests: https://github.com/Raku/roast/blob/6587491dfd97660324e8770d09f5bea8d494c964/S24-testing/1-basic.t#L30-L31

[16:37] <AlexDaniel> [Coke]: seems like somebody looked at the tests and implemented it: https://github.com/rakudo/rakudo/pull/368

[16:37] <AlexDaniel> and I'm like… why? why do we need a named arg like this?

[16:38] <AlexDaniel> “We need to test that these functions produce 'not ok' at the right times,

[16:38] <AlexDaniel> too.  Here, we do that by abusing :todo to mean "supposed to fail."  Thus,

[16:38] <AlexDaniel> no ":todo" failure indicates a missing feature.”

[16:38] <AlexDaniel> what?

[16:38] <[Coke]> It's not implemented just to support that comment.

[16:39] <[Coke]> is your argument that we already have todo(), so we don't need a per-test version?

[16:39] <AlexDaniel> sorry I'm dense, what does that mean?

[16:39] <[Coke]> (per-test == named arg for a particular test invocation)

[16:40] <AlexDaniel> [Coke]: yeah, I just want to know why we need a per-test version

[16:40] <AlexDaniel> do we need :skip also?

[16:41] <[Coke]> I don't think so, since a skipped test sometimes can't even be declared, let alone executed.

[16:41] <[Coke]> s/declared/compiled/

[16:41] <Geth> ¦ problem-solving: JJ assigned to jnthn Issue Should we have named arguments in test routines? https://github.com/Raku/problem-solving/issues/188

[16:41] <AlexDaniel> right

[16:42] <[Coke]> so, :todo to me is a convenience.

[16:42] <[Coke]> also timtowtdi

[16:43] <[Coke]> with :todo, you don't have to take extra care when re-ordering tests

[16:43] <jjmerelo> [Coke] also, tests are already there. Maybe check out the commit that created them...

[16:43] <[Coke]> AlexDaniel can do that if he likes, sure.

[16:43] <jjmerelo> Well, not very informative, but... https://github.com/Raku/roast/commit/472a495b8731965cc0c16f9dfdd8e549867ad85f

[16:44] <[Coke]> those are adding the tests themselves, not the implementation of :todo.

[16:44] <[Coke]> (in case anyone else is digging)

[16:45] <AlexDaniel> jjmerelo: I edited the ticket dramatically to remove mentions of :desc :)

[16:46] <AlexDaniel> jjmerelo: we already have :desc, it's not a question

[16:47] <AlexDaniel> oh, so we need to dig it in mu repo

[16:47] <jjmerelo> AlexDaniel not as named argument, but OK

[16:47] <[Coke]> So I missed some initial context: we don't have :todo yet, this test is implicitly proposing we add it?

[16:47] <AlexDaniel> jjmerelo: oh right, yeah I guess

[16:47] <AlexDaniel> [Coke]: exactly

[16:48] <[Coke]> I wouldn't add it, then.

[16:48] <AlexDaniel> [Coke]: and then somebody submitted a PR adding it, so we're trying to decide what to do with the PR

[16:49] <[Coke]> It's a convenience, but I don't think it's required. Do we have anyone who currently "owns" testing?

[16:49] <jjmerelo> OK, timeline is: somebody wanted it and created tests for it 10 years ago (or more). Paul Cochrane created a PR 5 years ago that added it. I reproduced it again, found the tests, they pass, and created another PR... 

[16:51] <[Coke]> "because we are using this module to test Pugs itself, 

[16:52] <[Coke]> which I think dates the test files and then the PRs based on them.

[16:52] * jjmerelo feels it's dejá vu all over again when AlexDaniel reopens issues/PRs I've closed...

[16:52] <AlexDaniel> x) I marked it as a Draft

[16:53] <[Coke]> I also don't think abusing TODO would work with something like prove. an unexpected pass is NOT a failure.

[16:54] <AlexDaniel> https://github.com/perl6/mu/commit/d6da37b6f7b7daf631886bb6eab6cf50551d534e

[16:55] <AlexDaniel> d6da37b6f7b7

[16:55] <linkable6> (2009-06-25) https://github.com/perl6/mu/commit/d6da37b6f7 [ere-smo] added &is to Test.pm

[16:55] <AlexDaniel> 2687c304438cc

[16:55] <linkable6> https://gist.github.com/b35f39b8cab70754c98b49b7d483c254

[16:55] <AlexDaniel> (2006-07-09) https://github.com/perl6/mu/commit/2687c30443 added t/02-test-pm/ which consolidates tests for …

[16:56] <AlexDaniel> 71db8dd7e4

[16:56] <linkable6> (2005-08-11) https://github.com/perl6/mu/commit/71db8dd7e4 ...undo...

[16:56] <AlexDaniel> 26e52f822b0

[16:56] <linkable6> (2005-08-11) https://github.com/perl6/mu/commit/26e52f822b Initial Pugs checkin.

[16:56] <AlexDaniel> cb75ba229e

[16:56] <linkable6> (2005-04-22) https://github.com/perl6/mu/commit/cb75ba229e start of the removal of todo_* functions; see ext/Test/ChangeLog for details;

[16:57] <jjmerelo> Basically the original ok did have them

[16:59] <AlexDaniel> .tell jnthn perhaps another opportunity to reject a feature that nobody is asking for: https://github.com/Raku/problem-solving/issues/188

[16:59] <tellable6> AlexDaniel, I'll pass your message to jnthn

[17:02] <jjmerelo> AlexDaniel But some commit from 15 years ago wants that!

[17:07] *** Altai-man_ joined
[17:09] *** sena_kun left
[17:22] *** softmoth joined
[17:23] *** Xliff joined
[17:35] *** Xliff left
[18:08] <timotimo> my rewrite of the hyper codegen optimizer pass now handles this properly: @result = (@input1 Z+ @input2) >>+<< @input2

[18:08] <timotimo> with differently-sized input arrays

[18:28] <MasterDuke> nice

[19:08] *** sena_kun joined
[19:09] *** Altai-man_ left
[19:20] *** lucasb joined
[19:48] <Geth> ¦ nqp: 39b348c6c9 | Coke++ | docs/ops.markdown

[19:48] <Geth> ¦ nqp: add simplistic docs for buffertocu

[19:48] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/39b348c6c9

[19:51] <tbrowder> .tell nine that commit fixed issue #147--i owe you a test file. thanks!

[19:51] <tellable6> tbrowder, I'll pass your message to nine

[19:52] <Geth> ¦ rakudo/hyper_codegen: 587d514c87 | (Timo Paulssen)++ | src/Perl6/Optimizer.nqp

[19:52] <Geth> ¦ rakudo/hyper_codegen: implement proper size check and zip metaop

[19:52] <Geth> ¦ rakudo/hyper_codegen: review: https://github.com/rakudo/rakudo/commit/587d514c87

[20:22] *** jjmerelo left
[20:40] <Geth> ¦ nqp: c758eb3999 | Coke++ | docs/ops.markdown

[20:40] <Geth> ¦ nqp: Revert "add simplistic docs for buffertocu"

[20:40] <Geth> ¦ nqp: 

[20:40] <Geth> ¦ nqp: This reverts commit 39b348c6c9f2e976d86e65be109a25ce69ea920e.

[20:40] <Geth> ¦ nqp: 

[20:40] <Geth> ¦ nqp: Incorrect docs.

[20:40] <Geth> ¦ nqp: review: https://github.com/Raku/nqp/commit/c758eb3999

[20:59] *** Kaiepi left
[20:59] *** Kaeipi joined
[20:59] *** Kaeipi left
[21:00] *** Kaeipi joined
[21:02] <timotimo> [JSON::JWT] ===SORRY!=== Error while compiling /home/timo/.zef/store/P6-JSON-JWT.git/18114226e9c4475ce70d23974a8286e562b4c650/t/02-encode.t

[21:02] <timotimo> [JSON::JWT] Could not find JSON::JWT in:

[21:02] <timotimo> [JSON::JWT]     file#/home/timo/.zef/store/P6-JSON-JWT.git/18114226e9c4475ce70d23974a8286e562b4c650

[21:02] <timotimo> the heck is happening

[21:02] <timotimo> oh, the version i got has a META.info, could that be the problem?

[21:02] <timotimo> that it's not a META6.json?

[21:03] <sena_kun> timotimo, maybe it assumes `-Ilib` or something? Not updated META.info tells something about bitrot.

[21:04] <timotimo> it's got a meta6 in the github repo

[21:04] <timotimo> i'm probably getting it from cpan?

[21:04] <sena_kun> hmmm

[21:04] <sena_kun> Is it on CPAN?

[21:06] <timotimo> Commits on Apr 20, 2018

[21:06] <timotimo>     Rename META file 

[21:06] <timotimo> it *is* pulling from github what the heck

[21:06] <timotimo> i'll just nuke zef's store

[21:07] *** Altai-man_ joined
[21:08] <timotimo> that fixed it

[21:09] *** sena_kun left
[21:14] *** Altai-man_ left
[21:14] *** softmoth_ joined
[21:16] *** softmoth__ joined
[21:17] *** softmoth left
[21:19] *** softmoth_ left
[21:27] *** softmoth__ left
[21:27] *** softmoth__ joined
[21:33] *** softmoth joined
[21:35] *** softmoth__ left
[21:36] *** softmoth_ joined
[21:38] *** softmoth left
[21:42] *** softmoth_ left
[22:29] *** lucasb left
[23:10] <Geth> ¦ rakudo: ef90599e2b | (Elizabeth Mattijsen)++ | src/core.c/CompUnit/PrecompilationStore/File.pm6

[23:10] <Geth> ¦ rakudo: Make sure newly created dir is writeable

[23:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ef90599e2b

[23:17] *** Xliff joined
[23:29] *** squashable6 left
[23:30] *** squashable6 joined
[23:30] *** squashable6 left
[23:31] *** squashable6 joined
[23:41] *** softmoth joined
