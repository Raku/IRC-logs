[00:20] *** lizmat left
[00:26] *** lizmat joined
[00:26] *** p6bannerbot sets mode: +v lizmat

[02:07] *** stmuk joined
[02:08] *** p6bannerbot sets mode: +v stmuk

[02:09] *** stmuk_ left
[02:24] *** jimi|ansible joined
[02:25] *** jimi|ansible left
[02:26] *** da5idRl joined
[02:27] *** da5idRl left
[02:50] *** ufobat_ joined
[02:51] *** p6bannerbot sets mode: +v ufobat_

[02:54] *** ufobat left
[03:14] *** datasundae___ joined
[03:14] *** datasundae___ left
[04:19] *** Ven` joined
[04:19] *** p6bannerbot sets mode: +v Ven`

[04:23] *** Ven` left
[04:34] *** Ven` joined
[04:35] *** p6bannerbot sets mode: +v Ven`

[04:39] *** Ven` left
[04:44] *** robertle_ joined
[04:45] *** p6bannerbot sets mode: +v robertle_

[04:52] *** robertle left
[04:52] *** gfldex_ left
[04:52] *** x[LGWs4x4i]uG2N0 left
[04:57] *** gfldex_ joined
[04:57] *** x[LGWs4x4i]uG2N0 joined
[04:57] *** niven.freenode.net sets mode: +vv gfldex_ x[LGWs4x4i]uG2N0

[04:57] *** p6bannerbot sets mode: +v gfldex_

[04:57] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[05:43] *** AlexDaniel left
[05:56] *** fake_space_whale left
[06:45] *** benchable6 left
[06:46] *** AlexDaniel joined
[06:47] *** p6bannerbot sets mode: +v AlexDaniel

[06:50] *** AlexDaniel left
[07:36] *** benchable6 joined
[07:37] *** p6bannerbot sets mode: +v benchable6

[07:41] *** sonneqO joined
[07:42] *** sonneqO left
[07:44] *** AlexDaniel joined
[07:45] *** p6bannerbot sets mode: +v AlexDaniel

[07:45] <AlexDaniel> squashable6: status

[07:45] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in ‚âà2 hours (2018-10-06 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:48] *** reportable6 left
[07:48] *** shareable6 left
[07:48] *** committable6 left
[07:48] *** reportable6 joined
[07:48] *** bisectable6 joined
[07:48] *** shareable6 joined
[07:48] *** undersightable6 left
[07:48] *** committable6 joined
[07:48] *** ChanServ sets mode: +v committable6

[07:48] *** evalable6 left
[07:48] *** undersightable6 joined
[07:48] *** ChanServ sets mode: +v undersightable6

[07:48] *** releasable6 joined
[07:48] *** evalable6 joined
[07:49] *** p6bannerbot sets mode: +v reportable6

[07:49] *** p6bannerbot sets mode: +v bisectable6

[07:49] *** p6bannerbot sets mode: +v shareable6

[07:49] *** p6bannerbot sets mode: +v committable6

[07:49] *** p6bannerbot sets mode: +v undersightable6

[07:49] *** p6bannerbot sets mode: +v releasable6

[07:49] *** p6bannerbot sets mode: +v evalable6

[07:55] *** cognominal-p6 left
[07:59] *** robertle_ left
[08:01] *** robertle joined
[08:02] *** p6bannerbot sets mode: +v robertle

[08:15] *** robertle left
[08:16] *** [TuxCM] joined
[08:17] *** p6bannerbot sets mode: +v [TuxCM]

[08:21] *** robertle joined
[08:21] *** p6bannerbot sets mode: +v robertle

[08:28] *** robertle left
[08:37] *** robertle joined
[08:38] *** p6bannerbot sets mode: +v robertle

[08:48] *** MasterDuke left
[08:51] *** dalek left
[09:00] *** bonestorm joined
[09:01] *** p6bannerbot sets mode: +v bonestorm

[09:03] *** bonestorm left
[09:33] *** pmurias joined
[09:33] *** p6bannerbot sets mode: +v pmurias

[09:33] <pmurias> jnthn: what would the process for mergin in the js backend be?

[09:33] <yoleaux> 4 Oct 2018 21:17Z <Zoffix> pmurias: that's my understanding yes. --encoding tells the compiler what encoding to use when parsing code to run (source files, EVAL, and I'm guessing `-e` too). But I'm no expert on this. This is just going off the speculations. I forget which one it was by IIRC it got something there

[09:35] <pmurias> .tell Zoffix it's not used for -e, only for the source files that are passed *directly* on the command line

[09:35] <yoleaux> pmurias: I'll pass your message to Zoffix.

[09:35] <pmurias> .tell Zoffix do you object to be making EVAL on Blob stop using --encoding?

[09:35] <yoleaux> pmurias: I'll pass your message to Zoffix.

[09:38] *** ivank joined
[09:38] *** madsushi joined
[09:39] *** p6bannerbot sets mode: +v ivank

[09:39] *** p6bannerbot sets mode: +v madsushi

[09:40] *** ivank left
[09:41] *** pmurias left
[09:41] <lizmat> Files=1255, Tests=75814, 339 wallclock secs (15.52 usr  5.45 sys + 2369.61 cusr 253.42 csys = 2644.00 CPU)

[09:42] *** pmurias joined
[09:42] *** p6bannerbot sets mode: +v pmurias

[09:42] *** AlexDaniel left
[09:43] *** madsushi left
[09:44] <jnthn> pmurias: There's no formal process really; you're the second person to ever do this (the other 2 times it was me). But basically, make sure it doesn't break existing backends, and then state intent to do it and make sure there's no objections (or at least, try and get +1s from a few key people).

[09:44] <[TuxCM]> Rakudo version 2018.09-72-g687a3cbb0 - MoarVM version 2018.09-123-g0191bd9cf

[09:44] <[TuxCM]> csv-test-xs-20      0.439 -  0.458

[09:44] <[TuxCM]> test-t --race       0.810 -  0.815

[09:44] <[TuxCM]> csv-ip5xs           0.906 -  0.929

[09:44] <[TuxCM]> test-t              1.716 -  1.810

[09:44] <[TuxCM]> csv-ip5xs-20        7.393 -  7.552

[09:44] <[TuxCM]> test                8.148 -  8.604

[09:44] <[TuxCM]> test-t-20 --race   10.940 - 11.000

[09:44] <[TuxCM]> csv-parser         21.372 - 21.922

[09:44] <[TuxCM]> test-t-20          29.955 - 30.758

[09:45] <[TuxCM]> (note that the system has been very busy *before* the test, so it might have been warmer than usual)

[09:45] * [TuxCM] had to dig into perl5 smoke failures. Found, explained, and fixed

[09:45] <pmurias> jnthn: do you think it would make sense to merge the changes outside of src/vm/js and that aren't ifdef'ed separately?

[09:58] <jnthn> pmurias: No, I'd probably bring it all in with one merge

[10:40] *** ExtraCrispy joined
[10:40] *** p6bannerbot sets mode: +v ExtraCrispy

[10:53] *** brrt joined
[10:53] *** p6bannerbot sets mode: +v brrt

[10:54] *** AndreasKLE joined
[10:55] *** AlexDaniel joined
[10:55] *** p6bannerbot sets mode: +v AndreasKLE

[10:55] *** p6bannerbot sets mode: +v AlexDaniel

[10:56] *** AndreasKLE left
[10:59] *** Geth left
[11:01] *** creeschGJ joined
[11:01] *** p6bannerbot sets mode: +v creeschGJ

[11:04] *** creeschGJ left
[11:14] *** brrt left
[11:22] *** magnushgV joined
[11:23] *** magnushgV left
[11:24] <tbrowder__> hi, folks

[11:26] <pmurias> tbrowder__: hi

[11:26] <tbrowder__> moritz: do you have an opinion on my use of grammar assertion?

[11:26] <moritz> tbrowder__: why should I have an opinion about that?

[11:26] <yoleaux> 4 Oct 2018 21:57Z <tbrowder__> moritz: assuming i get the ~~ correct, is the assertion part correct?

[11:27] <tbrowder__> pmurias: hi, are

[11:27] <moritz> usage of assertions isn't really a contentious topic

[11:27] <moritz> or did I miss something?

[11:27] <moritz> the more interesting question is: does it work?

[11:27] <tbrowder__> moritz: does that part look like correct usage?

[11:27] <moritz> yes

[11:28] <tbrowder__> it may not be contentious but i haven‚Äôt seen much documented about it

[11:29] <tbrowder__> i just wanted an expert‚Äôs eyes on it before i start running with it. thanks!

[11:30] <pmurias> tbrowder__: ?

[11:31] *** [TuxCM] left
[11:31] <tbrowder__> er, sorry, finger fumble. do i see a big move with js in the works?

[11:44] *** brrt joined
[11:45] *** p6bannerbot sets mode: +v brrt

[11:46] *** zdzichu joined
[11:47] *** p6bannerbot sets mode: +v zdzichu

[11:48] *** zdzichu left
[11:59] <pmurias> tbrowder__: I want to merge it into master, I'm also working on (REPLish thing) perl6.github.io/6pad so that you can try rakudo.js without installing it

[12:00] <tbrowder__> great!

[12:02] *** [TuxCM] joined
[12:02] *** p6bannerbot sets mode: +v [TuxCM]

[12:03] <pmurias> the current goal is to get it to the "early adopters toy" stage

[12:06] <lizmat> jnthn: are the CX:: classes an implementation detail or not?

[12:07] <pmurias> lizmat: roast has tests for CX:: classes

[12:09] <lizmat> ack, so I guess we should document them then

[12:09] *** stmuk_ joined
[12:10] *** p6bannerbot sets mode: +v stmuk_

[12:11] <jnthn> No, they're user-facing

[12:11] <jnthn> Otherwise you can't write a CONTROL block to just handle CX::Warn, for example

[12:11] *** stmuk left
[12:12] <pmurias> jnthn: do you have an opinion on what --encoding should do?

[12:12] *** pmurias left
[12:12] <jnthn> Go away? :)

[12:12] <lizmat> +1

[12:12] *** pmurias joined
[12:12] *** p6bannerbot sets mode: +v pmurias

[12:13] <pmurias> jnthn: currently it changes the behavior of eval(Blob) and the way files on the command line are parsed

[12:13] *** stmuk joined
[12:14] *** p6bannerbot sets mode: +v stmuk

[12:14] *** brrt left
[12:14] <jnthn> I expected the latter, the former is...well, a bit action at a distance-y

[12:15] *** brrt joined
[12:15] <pmurias> jnthn: I'll remove the the eval(Blob) behavior

[12:15] *** p6bannerbot sets mode: +v brrt

[12:16] *** stmuk_ left
[12:30] <tbrowder__> jnthn: if in rakudo nqp i create some dynamic vars to hold values during object contruction, is that an acceptable practice?

[12:34] <tbrowder__> as an example, having direct access to pod config key/value pairs would be very helpful. as it is, they get wrapped into colon pairs and then later they have to be painfully unpacked.

[12:35] <tbrowder__> it would be kind of like message passing

[12:37] *** pmurias left
[12:37] *** pmurias joined
[12:37] *** p6bannerbot sets mode: +v pmurias

[12:40] *** [TuxCM] left
[12:57] <jnthn> tbrowder__: It's normally cleaner to do that via the .ast mechanism and actions, but if that's not possible then yes, it's also an option to do it that way

[12:57] <timotimo> another option is to declare a dynamic variable further out and put data into that

[13:06] <tbrowder__> further out meaning at the top like the LANG vars and such?

[13:07] <timotimo> yeah, but not as far as LANG

[13:07] <timotimo> well, not necessarily at least

[13:08] <tbrowder__> also, ref ast, where could that be influenced. i‚Äôve tried hunting back to HLL and back but haven‚Äôt yet found what ast actually means in rakudo nqp land

[13:08] <timotimo> ast is an attribute on match objects

[13:09] <timotimo> so you can literally just $/.ast = "hi" anywhere in the regex or action method

[13:09] <timotimo> and stuff like $<submatch>.ast as well

[13:09] <tbrowder__> so i can use make to save stuff on the match as in p6 land?

[13:10] <timotimo> i believe so

[13:10] <tbrowder__> ok, all that is.

[13:11] <tbrowder__> is very helpful! thnx jnthn and timotimo

[13:12] <timotimo> NP

[13:17] *** brrt left
[13:36] <lizmat> afk&

[13:41] <pmurias> https://github.com/rakudo/rakudo/pull/2342 - Pull request to merge in the js backend

[13:43] <pmurias> I'll happily adress any question/suggestion/etc. in regards to the pull request ;)

[13:44] *** Te3-BloodyIronPX joined
[13:45] *** p6bannerbot sets mode: +v Te3-BloodyIronPX

[13:47] <tyil> pmurias+++

[13:48] *** Te3-BloodyIronPX left
[14:19] *** [TuxCM] joined
[14:20] *** p6bannerbot sets mode: +v [TuxCM]

[14:21] <tbrowder__> another question on rakudo nqp for experts here: can a ‚Äúcompile_time_value‚Äù be unpacked? is that the same as unboxing? or is the object just a string in a well-known format?

[14:21] <jnthn> If you're compiling Perl 6 code, then it'll just be a Perl 6 object

[14:38] <tbrowder__> ok, si

[14:38] <jnthn> And if it's something primitive like a Str then you can nqp::unbox_s(...) that in NQP

[14:40] <tbrowder__> ok, so you test if its a Str, and then unbox it

[14:41] <jnthn> Yeah

[14:41] <jnthn> nqp::istype($the_thing.compile_time_value, $*W.find_symbol(['Str'])) or some such

[14:43] <tbrowder__> one more: in rakudo nqp, is the ast attribute always a scalar? if not, do we use nqp::istype on it for more unpacking?

[14:45] <tbrowder__> by scalar i meant int num or string

[14:45] <jnthn> The .ast type will typically be a QAST node

[14:45] <jnthn> There's some exceptions here and there, I guess

[14:46] <tbrowder__> aha! maybe the keys to the kingdom, thanks!

[14:48] *** escimoOB joined
[14:49] *** p6bannerbot sets mode: +v escimoOB

[14:50] <tbrowder__> to me what‚Äôs missing in zoffix‚Äôs tutorials is how to deal with qast nodes programmatically inside  grammar and actions. it‚Äôs not obvious when stuff gets magically made into qast.

[14:51] <tbrowder__> jnthn: i have used the latest scribus to take your nqp course slides and turned them into us letter pages with two slides per page.

[14:52] <tbrowder__> would you approve letting me put the two sessions somewhere on perl6 site?

[14:53] *** escimoOB left
[14:53] <jnthn> tbrowder__: Or submit a PR to https://github.com/edumentab/rakudo-and-nqp-internals-course/tree/gh-pages with it and then they're with the other PDFs o the course

[14:55] <tbrowder__> ok, will do

[15:13] *** pmurias left
[15:15] *** pmurias joined
[15:15] *** p6bannerbot sets mode: +v pmurias

[15:17] *** Zoffix joined
[15:17] *** p6bannerbot sets mode: +v Zoffix

[15:18] <Zoffix> tbrowder__: it's missing because there is no magic to turn anything into QAST. It's the same .make call you use in regular Perl 6 grammars that is given a QAST::Node object you construct yourself.

[15:18] <yoleaux> 09:35Z <pmurias> Zoffix: it's not used for -e, only for the source files that are passed *directly* on the command line

[15:18] <yoleaux> 09:35Z <pmurias> Zoffix: do you object to be making EVAL on Blob stop using --encoding?

[15:19] <Zoffix> .tell pmurias what's the point of removing it? If you have source in one encoding, why would you want an evaled blob always be in some other encoding instead of using what you're already using?

[15:19] <yoleaux> Zoffix: I'll pass your message to pmurias.

[15:21] <Zoffix> .tell pmurias or put differently: why have EVAL(Blob) then? May as well get rid of it, if it's not affected by encoding

[15:21] <yoleaux> Zoffix: I'll pass your message to pmurias.

[15:25] <pmurias> Zoffix: EVAL(Blob) might make sense for languages other then Perl 6

[15:25] <yoleaux> 15:19Z <Zoffix> pmurias: what's the point of removing it? If you have source in one encoding, why would you want an evaled blob always be in some other encoding instead of using what you're already using?

[15:25] <yoleaux> 15:21Z <Zoffix> pmurias: or put differently: why have EVAL(Blob) then? May as well get rid of it, if it's not affected by encoding

[15:26] <pmurias> Zoffix: the --encoding is the encoding of the source file I'm passing to rakudo

[15:26] <pmurias> I don't see why I would want to decode the Blob that way

[15:27] <pmurias> we will parse the Blob as Rakudo handles a regular file it loads

[15:27] <Zoffix> pmurias: it's doing that right now. 

[15:27] <Zoffix> pmurias: if you remove --encoding handling, you won't any longer handle that blob as rakudo handles a regular file it loads.

[15:28] <pmurias> does 'use' handle encoding

[15:28] *** fake_space_whale joined
[15:28] <Zoffix> I'd expect it to.

[15:28] <pmurias> it doesn't

[15:28] <Zoffix> Then it's broken.

[15:29] <pmurias> that depends what we want it do to

[15:29] *** p6bannerbot sets mode: +v fake_space_whale

[15:29] <Zoffix> I want to write my code in encoding other than UTF-8 and have the program work correctly.

[15:30] <pmurias> should modules from CPAN break if you use --encoding?

[15:30] <Zoffix> So far, I've understood your argument that that should only work for a single file I'm giving on the command line and not for the binary data I'm evaling. And you're making your case by saying that's the way it should be because my modules aren't being parsed with correct encoding either

[15:30] <pmurias> I view the option as parse *only* the files on the command line with that encoding

[15:31] <Zoffix> pmurias: that'd be already precompiled.

[15:31] <pmurias> not as some evil global switch

[15:31] <Zoffix> pmurias: but what makes the files on command line (bin/app.p6) more special than a module (lib/Foo.pm6)?

[15:31] <Zoffix> Why is one treated specially but not the other?

[15:31] <jnthn> fwiw, what I asked was whether there's any point to the --encoding=... option at all

[15:32] <jnthn> e.g. I was proposing complete removal, rather than suggesting selective removal of bits of what it does

[15:32] <tbrowder__> Zoffix: is there a method somewhere to interpret a QAST object into nqp code, or at least to interpret it enough to rewrite it with new or added info?

[15:32] <Zoffix> Yeah, complete removal sounds good.

[15:32] <pmurias> removing it altogether seems fine to me

[15:33] <Zoffix> tbrowder__: "to interpret a QAST object into nqp code" I don't understand what you mean by that

[15:33] <jnthn> I'm not sure why we'd want to let people write Perl 6 source in something other than UTF-8.

[15:33] <Zoffix> tbrowder__: QAST nodes are just regular objects: https://github.com/perl6/nqp/tree/master/src/QAST

[15:34] <pmurias> jnthn: the interactive mode respects --encoding

[15:34] <jnthn> Interactive mode might make more sense for it

[15:34] <jnthn> Though not sure right off

[15:34] <pmurias> got to go &

[15:35] <tbrowder__> ok, i mean some class that can let the user get programmatic access to the QAST object.  let me look at the link you just sent...

[15:35] <Zoffix> tbrowder__: some of them can be treated as lists to iterate over positional children and some have "properties" you can access with a method call.   my $qast := QAST::Op.new(:op<callmethod>, :name<say>, QAST::WVal.new(:value(42))  <--  $qast[0] gives you that QAST::WVal; $qast.op gives you string "callmethod"; $qast.name gives you string "say"

[15:36] <Zoffix> m: use QAST:from<NQP>; BEGIN $*W.compile_time_evaluate: $, QAST::Op.new: :op<call>, :name<&say>, QAST::SVal.new: :value<meows>

[15:36] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´meows‚ê§¬ª

[15:36] <Zoffix> And in Grammar/Actions you'd .make that QAST::whatever and then access it elsewhere with .ast (or .made) call

[15:37] <tbrowder__> ok, that‚Äôs a good pointer, thanks so much!

[15:37] <Zoffix> And you can call .dump method to dump a QAST tree to see what's in it

[15:37] <Zoffix> m: use QAST:from<NQP>; say QAST::Op.new(:op<call>, :name<&say>, QAST::SVal.new: :value<meows>).dump

[15:37] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´- QAST::Op(call &say) ‚ê§  - QAST::SVal(meows) ‚ê§‚ê§¬ª

[15:42] *** Zoffix left
[15:48] *** lukropAT joined
[15:49] *** p6bannerbot sets mode: +v lukropAT

[15:50] *** lukropAT left
[16:21] *** stmuk_ joined
[16:22] *** p6bannerbot sets mode: +v stmuk_

[16:24] *** stmuk left
[16:26] *** TimToady left
[16:26] *** TimToady joined
[16:26] *** barjavel.freenode.net sets mode: +v TimToady

[16:26] *** p6bannerbot sets mode: +v TimToady

[16:31] *** patrickb joined
[16:32] *** p6bannerbot sets mode: +v patrickb

[16:34] *** firezep joined
[16:35] *** p6bannerbot sets mode: +v firezep

[16:36] *** firezep left
[16:36] *** robertle left
[16:39] *** ggoebel joined
[16:40] *** p6bannerbot sets mode: +v ggoebel

[17:32] *** newnixhg joined
[17:33] *** newnixhg left
[18:05] *** Kaiepi left
[18:05] *** [TuxCM] left
[18:07] *** Kaiepi joined
[18:08] *** p6bannerbot sets mode: +v Kaiepi

[18:38] <samcv> docs.perl6.org doesn't seem to have updated based on my changes 8 hours ago

[18:39] <timotimo> huh, there haven't been any logs in /build-log since 2018-07-24

[19:02] *** synopsebot left
[19:02] *** SourceBaby_ left
[19:02] *** p6lert left
[19:02] *** dalek joined
[19:02] *** ChanServ sets mode: +v dalek

[19:02] *** Geth joined
[19:02] *** ChanServ sets mode: +v Geth

[19:02] *** p6lert joined
[19:02] *** synopsebot joined
[19:02] *** ChanServ sets mode: +v synopsebot

[19:03] *** p6bannerbot sets mode: +v dalek

[19:03] *** p6bannerbot sets mode: +v Geth

[19:03] *** p6bannerbot sets mode: +v p6lert

[19:03] *** p6bannerbot sets mode: +v synopsebot

[19:23] *** lizmat left
[19:27] *** lizmat joined
[19:27] *** p6bannerbot sets mode: +v lizmat

[19:31] <Geth> ¬¶ rakudo/js: e31a480be1 | (Pawe≈Ç Murias)++ | lib/Test.pm6

[19:31] <Geth> ¬¶ rakudo/js: Stop using unneeded 'use MONKEY-SEE-NO-EVAL'

[19:31] <Geth> ¬¶ rakudo/js: review: https://github.com/rakudo/rakudo/commit/e31a480be1

[19:31] <pmurias> lizmat: thanks for the review, I answered all the questions

[19:32] *** pmurias left
[19:33] *** pmurias joined
[19:33] *** p6bannerbot sets mode: +v pmurias

[19:53] *** pmurias left
[19:57] *** pmurias joined
[19:57] *** p6bannerbot sets mode: +v pmurias

[20:00] *** Kaiepi left
[20:01] *** Kaiepi joined
[20:02] *** p6bannerbot sets mode: +v Kaiepi

[20:06] *** pmurias left
[20:07] *** pmurias joined
[20:07] *** p6bannerbot sets mode: +v pmurias

[20:09] *** pmurias left
[20:39] *** dct left
[22:20] *** MasterDuke joined
[22:20] *** p6bannerbot sets mode: +v MasterDuke

[22:20] *** MasterDuke left
[22:20] *** MasterDuke joined
[22:20] *** herbert.freenode.net sets mode: +v MasterDuke

[22:20] *** p6bannerbot sets mode: +v MasterDuke

[22:22] *** patrickb left
[22:31] <Geth> ¬¶ rakudo/js: 2ba1cff822 | (Pawe≈Ç Murias)++ | src/Perl6/Grammar.nqp

[22:31] <Geth> ¬¶ rakudo/js: Revert "[js] Add a workaround for known nqp bug. Works on moarvm for some reason I haven't fully investigated yet."

[22:31] <Geth> ¬¶ rakudo/js: 

[22:31] <Geth> ¬¶ rakudo/js: This reverts commit b956e062a73834dd80f246d0e2f5377e405b3883.

[22:31] <Geth> ¬¶ rakudo/js: review: https://github.com/rakudo/rakudo/commit/2ba1cff822

[22:33] <Geth> ¬¶ rakudo/js: 512dbe6e54 | (Pawe≈Ç Murias)++ | src/vm/js/perl6-runtime/package.json

[22:33] <Geth> ¬¶ rakudo/js: [js] Use https:// instead of https:// in urls

[22:33] <Geth> ¬¶ rakudo/js: review: https://github.com/rakudo/rakudo/commit/512dbe6e54

[22:35] *** Ven`` joined
[22:36] *** p6bannerbot sets mode: +v Ven``

[22:36] *** Ven`` left
[22:49] *** tronikOM joined
[22:49] *** tronikOM left
[23:30] *** meepmeep22bC joined
[23:35] *** meepmeep22bC left
