[00:09] <tbrowder> .tell AlexDaniel i'm getting close to a useful nqp sub run-command based on Zoffix's code + jnthn's insights and help. it uses spawnprocasync and i would like to eventually submit it as a PR sub addition to nqp/src/core/IO.nqp. it will have tests, and it will be used for testing my previous nqp PR on the improved pod panic message. it runs successfully now, captures both stdout and stderr for use (but only if

[00:09] <yoleaux> tbrowder: I'll pass your message to AlexDaniel.

[00:09] <tbrowder> requested). i just need to clean it up a bit.

[00:10] <AlexDaniel> k

[00:10] <yoleaux> 00:09Z <tbrowder> AlexDaniel: i'm getting close to a useful nqp sub run-command based on Zoffix's code + jnthn's insights and help. it uses spawnprocasync and i would like to eventually submit it as a PR sub addition to nqp/src/core/IO.nqp. it will have tests, and it will be used for testing my previous nqp PR on the improved pod panic message. it runs successfully now, captures both stdout and stderr for use (but only if

[01:37] <tbrowder> i’m getting segfault trying to build master branch nqp

[01:39] <timotimo> yeah, known, there was a too-early version bump

[01:43] <AlexDaniel> the segfault should go away with MVM_JIT_EXPR_DISABLE=1

[01:43] <MasterDuke> or if you pull master MoarVM

[01:45] <AlexDaniel> MasterDuke: oh, so we can rebump?

[01:45] <MasterDuke> yeah. https://github.com/MoarVM/MoarVM/commit/a01cdb449c

[01:49] <Geth> ¦ nqp: 03bb36a3b4 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[01:49] <Geth> ¦ nqp: [MoarVM Bump] a01cdb449 Disable getlexstatic_o […]

[01:49] <Geth> ¦ nqp:

[01:49] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.01-88-gc6519f4c3...2018.01-89-ga01cdb449

[01:49] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/03bb36a3b4

[01:49] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.01-88-gc6519f4c3...2018.01-89-ga01cdb449

[01:49] <Geth> ¦ rakudo: ad8823eedf | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[01:49] <Geth> ¦ rakudo: [NQP Bump] Brings 8 commits

[01:49] <Geth> ¦ rakudo:

[01:49] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.01-60-g2c51764...2018.01-68-g03bb36a3b

[01:49] <Geth> ¦ rakudo: 03bb36a3b [MoarVM Bump] a01cdb449 Disable getlexstatic_o […]

[01:49] <Geth> ¦ rakudo: 4c9302764 correct  return values for ```decoderempty```,  they were reversed

[01:49] <Geth> ¦ rakudo: 51b9df0a8 [MoarVM Bump] Brings 6 commits

[01:49] <Geth> ¦ rakudo: 135154876 [js] eslint --fix

[01:49] <Geth> ¦ rakudo: 48dcb3f30 [js] Start taking grapheme boundaries into account more

[01:49] <Geth> ¦ rakudo: fc524076c [js] Make enumcharlist work better with graphemes

[01:49] <Geth> ¦ rakudo: 4c8ea814c [js] Strip marks more correctly in weird cases

[01:49] <Geth> ¦ rakudo: 9d664e6d6 [js] Scan in regexes by graphemes not by bytes

[01:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ad8823eedf

[01:49] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.01-60-g2c51764...2018.01-68-g03bb36a3b

[02:04] <travis-ci> NQP build passed. Aleks-Daniel Jakimenko-Aleksejev '[MoarVM Bump] a01cdb449 Disable getlexstatic_o […]

[02:04] <travis-ci> https://travis-ci.org/perl6/nqp/builds/340771205 https://github.com/perl6/nqp/compare/4c9302764027...03bb36a3b40e

[02:05] <AlexDaniel> yay

[02:37] <travis-ci> Rakudo build passed. Aleks-Daniel Jakimenko-Aleksejev '[NQP Bump] Brings 8 commits

[02:37] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/340771233 https://github.com/rakudo/rakudo/compare/c83202db0a67...ad8823eedf98

[04:56] <Geth> ¦ nqp: tbrowder++ created pull request #411: add a new built-in sub: run-command

[04:56] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/411

[05:10] <AlexDaniel> tbrowder: don't have time to review right now but that looks very complicated for what it does

[10:17] <dogbert11> AlexDaniel: have you had time to test your bots against the latest fixes?

[11:30] <tbrowder> .tell AlexDaniel maybe, but the scaffolding required to capture stderr or stderr is not very intuitive, is easy to get wrong, and IMHO, the wrapping is useful. it can certainly be simplified such as always returning both streams, and probably a better way to return the streams’ output.

[11:30] <yoleaux> tbrowder: I'll pass your message to AlexDaniel.

[14:14] <Geth> ¦ rakudo: 555db42a37 | (Zoffix Znet)++ | src/core/Backtrace.pm

[14:14] <Geth> ¦ rakudo: Make Backtrace.gist more helpful

[14:14] <Geth> ¦ rakudo:

[14:14] <Geth> ¦ rakudo: Fixes R#1521 https://github.com/rakudo/rakudo/issues/1521

[14:14] <Geth> ¦ rakudo:

[14:14] <Geth> ¦ rakudo: Currently we go through Mu.gist, which is just Mu.perl, which

[14:14] <synopsebot> R#1521 [open]: https://github.com/rakudo/rakudo/issues/1521 [LHF] Backtrace.gist could be better

[14:14] <Geth> ¦ rakudo: just gives "Backtrace.new", leading users to believe it's an empty

[14:14] <Geth> ¦ rakudo: backtrace.

[14:14] <Geth> ¦ rakudo: <…commit message has 7 more lines…>

[14:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/555db42a37

[14:14] <AlexDaniel> heh, whateverable has 14534 rakudo builds :D

[14:14] <yoleaux> 11:30Z <tbrowder> AlexDaniel: maybe, but the scaffolding required to capture stderr or stderr is not very intuitive, is easy to get wrong, and IMHO, the wrapping is useful. it can certainly be simplified such as always returning both streams, and probably a better way to return the streams’ output.

[14:15] <Geth> ¦ roast: ca8c23ae77 | (Zoffix Znet)++ | integration/error-reporting.t

[14:15] <Geth> ¦ roast: Spec Backtrace.gist

[14:15] <Geth> ¦ roast:

[14:15] <Geth> ¦ roast: R#1521: https://github.com/rakudo/rakudo/issues/1521

[14:15] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/555db42a37

[14:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ca8c23ae77

[14:15] <AlexDaniel> all that taking 31G only, fun stuff

[14:17] <Zoffix> ZOFVM: Files=1289, Tests=153214, 145 wallclock secs (20.14 usr  3.34 sys + 3079.15 cusr 154.43 csys = 3257.06 CPU)

[14:19] <dogbert2> AlexDaniel: have you tested jnthn's fixes against your bots?

[14:20] <AlexDaniel> dogbert2: not yet, and that's a good idea I think

[14:20] * AlexDaniel looks at maxed out swap

[14:21] <Zoffix> Alright. Totally burnt out. Time to retreat to the land of Fallout 4 and ignore all github and social media notifications.

[14:21] <AlexDaniel> Zoffix++

[14:21] <Zoffix> AlexDaniel: I'll be away for a few weeks, ignoring all notifications, so if I broke something I won't know about it, someone else will need to fix it

[14:21] <dogbert2> Zoffix--: get a good game and have a well deserved rest

[14:22] <Zoffix> \o

[14:22] <jnthn> Take care Zoffix o/

[14:22] <dogbert2> oops Zoffix+++

[14:22] <AlexDaniel> Zoffix: that's ok, take care

[14:27] <AlexDaniel> dogbert2: we'll see how it goes :)

[14:28] <dogbert2> very interesting

[14:29] <Kaiepi> can yall rec me some good advice on how to get into perl dev?

[14:29] <AlexDaniel> Kaiepi: what are you interested in specifically?

[14:30] <Kaiepi> i'm looking to fix some bugs that break callbacks in nativecall on openbsd and freebsd has issues with dns resolution

[14:31] <Kaiepi> it's a fun project because it gives me a chance to learn more about how moar, nqp, and rakudo work

[14:32] <Kaiepi> but i don't understand moarvm very well as i'm only just jumping

[14:33] <Kaiepi> i think i should pay more attention to the github issues and pullreqs to find out where i should be looking for and learn what does what

[14:34] <dogbert2> Kaipei: a good first step is to fork https://github.com/rakudo/rakudo and then download and compile it on your system. nqp and moarvm will be pulled in as well

[14:34] <Kaiepi> i already do that

[14:35] <dogbert2> but perhaps you've already done that

[14:35] <dogbert2> :-)

[14:36] <Kaiepi> ./Configure.pl --prefix $HOME/.perl6 --debug=3 --optimize=0

[14:36] <dogbert2> and then 'make install ...'

[14:36] <Kaiepi> yep

[14:37] <Kaiepi> i've learned how to automate this

[14:37] <dogbert2> cool

[14:37] <dogbert2> have you tried running spectest's and stresstest's as well

[14:38] <Kaiepi> yep

[14:38] <Kaiepi> those are what i really want to fix

[14:38] <dogbert2> what kind of errors are you getting, testfails, SEGV's or panics

[14:39] <Kaiepi> segfaults on the callback tests from rakudo

[14:39] <dogbert2> gdb time

[14:39] <Kaiepi> damn right

[14:39] <Kaiepi> i'm slowly getting the hang of it

[14:40] <dogbert2> ./perl6-gdb-m <failing test file>

[14:40] <jnthn> Kaiepi: MoarVM can be built with two different libraries for handling native calling; it may be worth compiling it with the alternative one to at least try to rule out an issue with that

[14:40] <Kaiepi> the alternative?

[14:41] <jnthn> I think dyncall is the default everywhere, but a system libffi may also be used

[14:41] <jnthn> It's a configure-time option

[14:42] <Kaiepi> ah

[14:42] <Kaiepi> i'll try that about

[14:42] <Kaiepi> s/about/out/g

[14:48] <AlexDaniel> oh gosh I might need to restart the bots again…

[14:52] <MasterDuke> Kaiepi: have you seen https://github.com/edumentab/rakudo-and-nqp-internals-course ? it helped me get more familiar with how some of the stuff worked when i was just getting into it

[14:53] <Kaiepi> OH

[14:53] <Kaiepi> THAT'D BE REALLY HELPFUL

[14:53] <Kaiepi> THANK YOU

[14:54] <MasterDuke> sure, and jnthn++ for creating it

[14:54] <tadzik> yep, that course is fantastic

[14:54] <Kaiepi> bless you jnthn++

[14:57] <Kaiepi> at somepoint i'll get those issues with dns on freebsd and the nativecall callbacks not working on openbsd

[14:57] <Kaiepi> those are what i need to be able to get the lang to work proparly

[14:58] <MasterDuke> dns?

[14:59] <Kaiepi> dns resolution

[14:59] <Kaiepi> on freebsd i couldn't get perl to resolve any

[15:12] <dogbert2> AlexDaniel: what happened to the bots?

[15:12] <AlexDaniel> dogbert2: what do you mean? :)

[15:12] <dogbert2> :)

[15:13] <dogbert2> they seem to have been restarted

[15:13] <AlexDaniel> well, if you're asking about the leak, then I think it's too early to talk about that

[15:13] <AlexDaniel> as for the second restart, I found a bug :)

[15:14] <AlexDaniel> if anybody is wondering why some bots are still not up, they will be in a few minutes once the test suite gets to them…

[15:15] <AlexDaniel> (and if anybody wonders why the test suite matters, it's because it creates precomp files which bots are not allowed to write… stuff is complicatedly weird)

[15:17] <Kaiepi> dw i'm working on the freebsd and openbsd build bots

[15:18] <Kaiepi> and finish the Net::DNS port

[15:22] <Kaiepi> you've been a great help, thank you for the support

[15:36] <Geth> ¦ rakudo: ash++ created pull request #1522: Remove the Bridge method from the numeric classes

[15:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1522

[16:06] <AlexDaniel> dogbert2: I think I'm seeing some extra segfaults :D

[16:06] <dogbert2> interesting

[16:08] <lizmat> travelling&

[16:13] <AlexDaniel> greppable6: Bridge

[16:13] <greppable6> AlexDaniel, 36 lines, 9 modules: https://gist.github.com/1160653db1dc2969dc1c9448b45cbd6c

[16:34] <Geth> ¦ nqp: tbrowder++ created pull request #412: add a test for stderr in spawnprocasync

[16:34] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/412

[16:46] <pmurias> are there any benefits to fetching an str attribute with nqp::getattr instead of nqp::getattr_s?

[16:47] <jnthn> No

[16:49] <pmurias> Do we depend on nqp::getattr working (boxing) for native attributes?

[16:49] <Geth> ¦ nqp/master: 5 commits pushed by pmurias++

[16:49] <Geth> ¦ nqp/master: 7653b59bea | [js] Fix utf8-c8 bug

[16:49] <Geth> ¦ nqp/master: bc476c1422 | [js] Stop monkey-patching Function

[16:49] <Geth> ¦ nqp/master: 351f0fc857 | [js] Use NQPNum for native nums in nqp instead of using monkey patching

[16:49] <Geth> ¦ nqp/master: 697e95cffd | Test serializing an integer array with uninitialized elements

[16:49] <Geth> ¦ nqp/master: 70d1359b1b | Fetch a str attribute with nqp::getattr_s instead of nqp::getattr

[16:49] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/03bb36a3b4...70d1359b1b

[17:14] <Kaiepi> anyway i'm not clear on how the tisket system works compared to github issues

[17:14] <jnthn> pmurias: Not on purpose; the mechanism is actually for a longer-term feature (complex value types)

[17:15] <jnthn> Which we don't yet support

[17:15] * jnthn bbl

[17:20] * AlexDaniel clickbaits http://news.perlfoundation.org/2018/02/grant-proposal-curating-and-im.html

[17:21] <AlexDaniel> I… am not sure how I feel about this…

[17:21] <AlexDaniel> at first I was so happy that someone is going to put so much work into the doc repo, but now I'm reading details

[17:21] <AlexDaniel> and it's so weird

[17:22] <AlexDaniel> “Contribute 1 entry-level tutorial per week, to be published preferably on non-perl publications (Medium, dev.to, hackernoon).”

[17:23] <AlexDaniel> so instead of contributing it to the doc repo it's going to be published somewhere else? That may be ok for marketing but not exactly what I'm expecting to see in terms of improving the docs

[17:23] <AlexDaniel> “Day 7: identify core of people working on the documentation and create an open channel of communication, for instance, a Telegram channel with the GitHub bot connected”

[17:23] <AlexDaniel> telegram channel?… seriously?

[17:25] <AlexDaniel> and so on and so forth

[17:26] <AlexDaniel> otherwise this is very promising

[17:37] <AlexDaniel> bisect: say rand

[17:37] <bisectable6> AlexDaniel, Bisecting by output (old=2015.12 new=555db42) because on both starting points the exit code is 0

[17:37] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/61d21a6a522e8d5a9b42f5de0b8abcdc

[17:37] <bisectable6> AlexDaniel, (2015-12-25) https://github.com/rakudo/rakudo/commit/07fecb52eb1fd07397659f19a5cf36dc61f84053

[17:37] <bisectable6> AlexDaniel, The result looks a bit unrealistic, doesn't it? Most probably the output is different on every commit (e.g. ｢bisect: say rand｣)

[17:37] <AlexDaniel> bisect: say rand

[17:37] <bisectable6> AlexDaniel, Bisecting by output (old=2015.12 new=555db42) because on both starting points the exit code is 0

[17:38] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/bfe2507a92483bca89bfa49a37810b21

[17:38] <bisectable6> AlexDaniel, (2015-12-25) https://github.com/rakudo/rakudo/commit/07fecb52eb1fd07397659f19a5cf36dc61f84053

[17:38] <bisectable6> AlexDaniel, The result looks a bit unrealistic, doesn't it? Most probably the output is different on every commit (e.g. ｢bisect: say rand｣)

[17:39] <AlexDaniel> dogbert2: do you feel adventurous?

[17:47] <[Coke]> AlexDaniel: as someone on the GC and someone on the perl6 doc project, I have similar questions to you about that grant in particular; I'd appreciate it if you can add any of your questions you'd care to share as public comments on the proposal.

[17:48] <AlexDaniel> [Coke]: ok

[17:48] <[Coke]> Thank you, I appreciate it.

[18:07] <dogbert11> AlexDaniel: what kind of adventures are you referring to?

[18:09] <AlexDaniel> dogbert11: I was thinking maybe you'll be able to play with that recent segfault, but now I'm realizing that it's probably a bit difficult to reproduce it locally

[18:09] <AlexDaniel> sooo nevermind

[18:16] <dogbert11> perhaps MasterDuke can investigate

[18:17] <dogbert11> btw, what about memory usage

[18:17] <AlexDaniel> shareable6: uptime

[18:17] <shareable6> AlexDaniel, 3 hours and 18 minutes, 398.015625MiB maxrss. This is Rakudo version 2018.01-191-g555db42a3 built on MoarVM version 2018.01-89-ga01cdb449 implementing Perl 6.c.

[18:18] <AlexDaniel> bisectable6: uptime

[18:18] <bisectable6> AlexDaniel, 3 hours, 18 minutes, and 43 seconds, 236.292969MiB maxrss. This is Rakudo version 2018.01-191-g555db42a3 built on MoarVM version 2018.01-89-ga01cdb449 implementing Perl 6.c.

[18:18] <dogbert11> is that good or bad

[18:18] <AlexDaniel> dogbert11: so far it's great, but I think I'll be able to tell after like 24 hours

[18:18] <dogbert11> cool

[18:27] <Kaiepi> where should i look if i want to implenet utf32?

[18:28] <lizmat> Kaiepi: I'm not sure how jnthn's stance is on this

[18:28] <Kaiepi> i'll wait to ask him

[18:28] <lizmat> feels to me it should be as low level as possible for a "standard" encoding

[18:29] <lizmat> having said that, it should be possible to implement it in pure userland with the new encoder/decoder API

[18:29] <Kaiepi> yeah, i seems like something moarvm' doing

[18:29] <lizmat> unfortunately, a. I'm still very foggy minded, and b. even if I weren't, I actually haven't looked at that API myself yet

[18:29] <Kaiepi> what's the irc mailbot?

[18:30] <lizmat> you mean, for asking a question?

[18:30] <Kaiepi> yeah

[18:30] <lizmat> ".ask"

[18:30] <lizmat> ".ask jnthn the question"

[18:30] <lizmat> .ask lizmat where are you at ?

[18:30] <yoleaux> lizmat: Talking to yourself is the first sign of madness.

[18:30] <Kaiepi> sorry i cuolnd't find his nick in the convo

[18:31] <lizmat> most irc clients have auto-complete

[18:31] <lizmat> jn TAB is usually enough for me

[18:34] <Kaiepi> it helps when servers has frooms with dadaist keyboar dsmashing for titles

[18:46] <|Tux|> Rakudo version 2018.01-191-g555db42a3 - MoarVM version 2018.01-91-g1c79ca35d

[18:46] <|Tux|> csv-test-xs-20      0.530 -  0.557

[18:46] <|Tux|> csv-ip5xs           0.793 -  0.795

[18:46] <|Tux|> test-t --race       1.040 -  1.067

[18:46] <|Tux|> test-t              2.531 -  2.550

[18:46] <|Tux|> csv-ip5xs-20        7.399 -  7.517

[18:46] <|Tux|> test                8.570 -  8.717

[18:46] <|Tux|> csv-parser         11.449 - 11.514

[18:46] <|Tux|> test-t-20 --race   15.897 - 16.551

[18:46] <|Tux|> test-t-20          45.016 - 45.907

[19:02] <Kaiepi> so for the github bots

[19:02] <Kaiepi> githooks are what i'll rely on right?

[19:03] <Kaiepi> seems simpla

[19:03] <lizmat> Kaiepi: I think so, yes

[19:04] <Kaiepi> perfect, i've tinkered with them before

[19:41] <Geth> ¦ rakudo: e7af9a6a90 | (Elizabeth Mattijsen)++ | src/core/Cool.pm

[19:41] <Geth> ¦ rakudo: Fix ($ = 42) vs ($ = "42).subst-mutate

[19:41] <Geth> ¦ rakudo:

[19:41] <Geth> ¦ rakudo: As reported by lucasb: there should not be a difference in return value

[19:41] <Geth> ¦ rakudo: in case of a failed match.

[19:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e7af9a6a90

[20:11] <lucasb> Can the line https://github.com/rakudo/rakudo/blob/master/src/core/Cool.pm#L184 be changed to "$value-to-subst-mutate = $str if $match" to avoid changing the type of the variable if the match failed?

[20:15] <lizmat> lucasb: looking at that now

[20:16] <lizmat> running spectest now

[20:19] <lizmat> $match can be an empty string, right?  so "if $match" wouldn't cut it

[20:19] <lucasb> isn't it a match object?

[20:21] <lizmat> ah... good point

[20:34] <Geth> ¦ rakudo: 6101552658 | (Elizabeth Mattijsen)++ | src/core/Cool.pm

[20:34] <Geth> ¦ rakudo: Cool.subst-mutate only mutates if there's a match

[20:34] <Geth> ¦ rakudo:

[20:34] <Geth> ¦ rakudo: So the original Cool object remains unaltered if there was no match.  Which

[20:34] <Geth> ¦ rakudo: is probably better for many reasons.  lucasb++ for spotting/suggesting.

[20:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6101552658

[20:36] <lucasb> yay! thank you, lizmat

[21:24] <Geth> ¦ rakudo: 77794a28aa | (Elizabeth Mattijsen)++ | src/core/Str.pm

[21:24] <Geth> ¦ rakudo: Make Str.subst-mutate always return a List on :g

[21:24] <Geth> ¦ rakudo:

[21:24] <Geth> ¦ rakudo: Partial fix for GH #1523, tests needed

[21:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/77794a28aa

[21:24] <synopsebot> RAKUDO#1523 [open]: https://github.com/rakudo/rakudo/issues/1523 .subst/.subst-mutate should always return a List when :g is specified

[21:24] <lizmat> situation with .subst is slightly more complicated

[21:24] <lizmat> commuting&

[21:28] <Kaiepi> what kind of detailed guides out theere for gdb?

[21:29] <Kaiepi> i starting to work out how to use it, but there must be more

[21:32] <Kaiepi> i'll chack the man page more lcosely but if you get any lemme know

[21:36] <MasterDuke> heh, if you find a good one let me know

[21:37] <MasterDuke> Kaiepi: timotimo knows a bunch about gdb, and he's created some helper scripts for doing rakudo/moarvm dev with it, might want to ping him

[21:37] <timotimo> Kaiepi: o/

[21:37] <timotimo> it me

[21:42] <lucasb> to propose changes, can I open an issue on rakudo repo or on 6.d-prep ?

[21:42] <lucasb> I want num vars to default to 0e0

[21:42] <lucasb> m: say my num $

[21:42] <camelia> rakudo-moar 77794a28a: OUTPUT: «NaN␤»

[21:43] <lucasb> is there any chances of this changing?

[21:44] <lucasb> and, would it need to wait 6.d or it can change before it (if there is consensus)?

[21:48] <[Coke]> in general, anything that is tested in the 6.c spec needs to go into 6.d if it's a change.

[21:50] <lucasb> I don't think "my num" is tested in roast, but I'm not sure

[21:50] <[Coke]> https://github.com/perl6/roast/blob/6.c-errata/S02-types/native.t#L12-L17

[21:51] <lucasb> oh, right, it's there. thanks

[21:58] <timotimo> ugh, i said i was here and then i disappeared

[21:58] <timotimo> well, it's dinnertime now

[21:58] <jnthn> lucasb: It's consistent with object variables being initialized to a type object: NaN is the undefined of num. It's like that by choice rather than by accident.

[21:59] <jnthn> (Doesn't mean you can't request it be reconsidered, of course. But it was at least considered and intended.)

[22:01] <lucasb> jnthn: I see, thanks

[22:03] <lucasb> if there was at least a tiny chance, yes, I would request it to be reconsidered, but IDK what's the general feeling of other people

[22:03] <lucasb> to me, it just feels strange. native int defaults to 0, so I would expect native num to default to 0e0

[22:04] <lucasb> if I understand correctly, file static float/double variables in C also defaults to 0e0

[22:04] <jnthn> No, it defaults to junk

[22:04] <jnthn> oh, file static

[22:05] <jnthn> Hmm...I always initilaize such things explicitly

[22:05] * jnthn bbl

[22:06] <geekosaur> portability suggests you should initialize. security suggests it will be zeroed

[22:06] <Kaiepi> there's something i noticed when working on the freebsd travis boto yesterday

[22:06] <geekosaur> (but there's a stinger there as well: while modern CPUs will treat memory zeroes as value zeroes, there are possible value representations where that isn't true.)

[22:06] <Kaiepi> my router has no ipv6 support without don't something like janking

[22:07] <Kaiepi> buy anyway i tried to resolve an ipv6 domain name and failed

[22:07] <Kaiepi> should there be a watning for that when that happens?

[22:08] <geekosaur> resolving domain names shouldn't be affected by router ipv6 support. although if you are using the router's built-in DNS cache/forwarder then ti might not have AAAA record support

[22:08] <Kaiepi> i am

[22:08] <Kaiepi> port forwarding is also broken

[22:09] <lucasb> geekosaur: I think the C standard says that file static vars *are* initialized. (dunno if all compilers are compliant)

[22:09] <Kaiepi> might need to flash it with some custom firmware to make it work for me

[22:10] <geekosaur> you can point directly to an external DNS source (e.g. google's) instead of the router. you can also use something like HE's ipv6 tunnels

[22:11] <Kaiepi> using gooog'es dns sounds good

[22:12] <Kaiepi> the ones my isp provides breal a lot

[22:29] <lucasb> I submitted the proposal: Change the default value of native num variables from NaN to 0e0

[22:29] <lucasb> https://github.com/perl6/6.d-prep/issues/4

[22:29] <Kaiepi> i'm not a huge fan of nan

[22:29] <lucasb> It's a little detail. I hope it changes, but it's ok if it gets rejected.

[22:30] <lucasb> Please, leave you opinion there. Thanks people.

[22:30] <Kaiepi> flashbacks to manually garabge collecting by making vals numb so its garbagec ollector can notice its dead

[22:31] <Kaiepi> that gc is something else

[23:03] <Kaiepi> aha

[23:04] <Kaiepi> got more detailed crash info on the native callbacks thing
