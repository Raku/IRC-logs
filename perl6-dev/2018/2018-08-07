[00:12] <MasterDuke> huh. i rebased nqp master onto my default_to_int branch just so it wouldn't get too out of date, but now it won't build, dying on the very first file with `Bytecode validation error at offset 108, instruction 18: operand type 64 does not match register type 32    at gen/moar/stage2/nqpmo.nqp:853  (src/vm/moar/stage0/nqpmo.moarvm:compose)`

[00:27] <Geth> ¬¶ rakudo: xelak6++ created pull request #2188: Prevent REPL from writing to filehandle when opening a file.

[00:27] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/2188

[00:27] <MasterDuke> oh, it isn't only a rebase which is a problem. i reverted the rebase and it still won't build. i guess it's the new moarvm that's the real culprit

[00:28] <MasterDuke> and i get the same thing trying to make new bootstrap files

[00:29] <MasterDuke> anyone have any suggestions?

[00:43] <MasterDuke> timotimo: ping

[00:48] <timotimo> pong

[00:48] <MasterDuke> i feel you might have an idea re my recent question

[00:50] <timotimo> hum, a "make clean" doesn't fix it?

[00:51] <MasterDuke> nope

[00:51] <timotimo> o_O

[00:53] <timotimo> i don't seem to remember changes that required a rebootstrap

[00:54] <timotimo> i mean, perhaps an op has changed one of its register types?

[00:54] <MasterDuke> my rename of getstrfromnames

[00:54] <timotimo> can you look up what 32 and 64 are, respectively?

[00:54] <timotimo> renames shouldn't make a difference, as long as the op code number is the same

[00:54] <MasterDuke> how do i find the op code number?

[00:55] <timotimo> i'd just go into gdb and print MVM_OP_getstrfromnames

[00:55] <timotimo> but it's more interesting what 32 and 64 are as register kinds

[00:57] *** Kaiepi left
[00:58] <MasterDuke> No symbol "MVM_OP_getstrfromnames" in current context.

[00:58] <MasterDuke> same with "MVM_OP_strfromnames"

[00:59] <MasterDuke> how do i see the register kind?

[01:01] <timotimo> looking for defines for that number i guess

[01:02] <timotimo> MVM_operand_ and friends perhaps?

[01:05] <MasterDuke> looks like 32 is MVM_operand_int64

[01:06] <MasterDuke> and 64 is MVM_operand_obj

[01:09] <timotimo> ok, maybe by breakpointing we can figure out what the opcode is that it's trying and failing to verify

[01:10] <MasterDuke> val=0x7fffffffd600 in validate_operand at src/core/validation.c:364

[01:12] <MasterDuke> is there some other info i need?

[01:16] <timotimo> i think so

[01:17] <timotimo> could it be found in src_cur_op?

[01:17] <timotimo> or cur_op maybe?

[01:17] <timotimo> aha, cur_info should have all info, like ->name

[01:17] <timotimo> so val->cur_info->name perhaps?

[01:19] <MasterDuke> (gdb) p val->cur_info->name $1 = 0x7ffff77164f6 "sp_guard"

[01:21] <timotimo> that is *not* supposed to be in a precompiled file

[01:21] <timotimo> i mean, the validator only runs on code that's loaded from a file

[01:21] <timotimo> and those aren't allowed to have spesh ops in them

[01:22] <timotimo> what's the opcode for sp_guard? perhaps it's confused by offsets and is seeing an operand as an opcode instead

[01:22] <timotimo> like, off-by-one or two bytes

[01:23] <MasterDuke> (gdb) p MVM_OP_sp_guard $2 = 807

[01:26] <timotimo> hum

[01:26] <timotimo> m: say 807.base(16)

[01:26] <camelia> rakudo-moar f8b79306c: OUTPUT: ¬´327‚ê§¬ª

[01:26] <timotimo> m: say :16("27")

[01:26] <camelia> rakudo-moar f8b79306c: OUTPUT: ¬´39‚ê§¬ª

[01:27] <timotimo> i'm not seeing what's going on

[01:28] *** astj joined
[01:29] *** p6bannerbot sets mode: +v astj

[01:32] <MasterDuke> i do get slightly different values for offset and instruction in the error message after i rebase master

[01:37] *** bray90820_ joined
[01:37] *** p6bannerbot sets mode: +v bray90820_

[01:38] *** bray90820_ left
[02:30] *** AlexDaniel joined
[02:30] *** p6bannerbot sets mode: +v AlexDaniel

[02:31] *** AlexDaniel left
[02:31] *** AlexDaniel joined
[02:31] *** barjavel.freenode.net sets mode: +v AlexDaniel

[02:31] *** p6bannerbot sets mode: +v AlexDaniel

[02:45] *** bairdmich joined
[02:46] *** p6bannerbot sets mode: +v bairdmich

[02:47] *** bairdmich left
[03:09] *** Kaiepi joined
[03:09] *** p6bannerbot sets mode: +v Kaiepi

[03:14] *** sud012 joined
[03:14] *** p6bannerbot sets mode: +v sud012

[03:18] *** sud012 left
[03:19] *** FROGGS left
[03:19] *** FROGGS joined
[03:20] *** FROGGS left
[03:20] *** FROGGS joined
[03:21] *** p6bannerbot sets mode: +v FROGGS

[03:28] *** FROGGS left
[03:29] *** FROGGS joined
[03:29] *** p6bannerbot sets mode: +v FROGGS

[03:32] *** FROGGS left
[03:32] *** FROGGS joined
[03:33] *** p6bannerbot sets mode: +v FROGGS

[03:42] *** FROGGS left
[03:42] *** FROGGS joined
[03:43] *** p6bannerbot sets mode: +v FROGGS

[03:45] *** FROGGS left
[03:46] *** FROGGS joined
[03:46] *** p6bannerbot sets mode: +v FROGGS

[03:56] *** KleinerMann joined
[03:56] *** KleinerMann left
[03:56] *** mfa29818 joined
[03:57] *** p6bannerbot sets mode: +v mfa29818

[03:57] *** mfa29818 left
[04:15] *** sst6621 joined
[04:15] *** sst6621 left
[05:05] *** FROGGS left
[05:06] *** FROGGS joined
[05:06] *** p6bannerbot sets mode: +v FROGGS

[05:51] *** FROGGS left
[05:52] *** FROGGS joined
[05:52] *** p6bannerbot sets mode: +v FROGGS

[05:54] *** FROGGS left
[05:54] *** FROGGS joined
[05:55] *** p6bannerbot sets mode: +v FROGGS

[06:07] *** robertle joined
[06:08] *** p6bannerbot sets mode: +v robertle

[06:18] *** FROGGS left
[06:18] *** FROGGS joined
[06:19] *** p6bannerbot sets mode: +v FROGGS

[06:33] *** Kaiepi left
[06:34] *** PufferBot joined
[06:35] *** p6bannerbot sets mode: +v PufferBot

[06:41] *** FROGGS left
[06:41] *** FROGGS joined
[06:42] *** p6bannerbot sets mode: +v FROGGS

[06:44] *** Kaiepi joined
[06:45] *** p6bannerbot sets mode: +v Kaiepi

[06:59] *** Pici22 joined
[07:00] *** p6bannerbot sets mode: +v Pici22

[07:01] <Geth> ¬¶ nqp: 031a78dffe | ÈôàÊ¢ìÁ´ã++ (committed using GitHub Web editor) | tools/build/gen-version.pl

[07:01] <Geth> ¬¶ nqp: satisfy warnings

[07:01] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/031a78dffe

[07:06] *** Pici22 left
[07:07] *** travis-ci joined
[07:07] *** travis-ci left
[07:09] *** Vlad14 joined
[07:09] *** Vlad14 left
[07:24] <[Tux]> Rakudo version 2018.06-333-gf8b79306c - MoarVM version 2018.06-380-gac3d3c769

[07:24] <[Tux]> csv-test-xs-20      0.453 -  0.474

[07:24] <[Tux]> test-t --race       0.983 -  1.007

[07:24] <[Tux]> csv-ip5xs           1.046 -  1.081

[07:24] <[Tux]> test-t              2.343 -  2.354

[07:24] <[Tux]> csv-ip5xs-20        7.619 -  7.882

[07:24] <[Tux]> test               10.177 - 10.311

[07:24] <[Tux]> test-t-20 --race   13.470 - 13.594

[07:24] <[Tux]> csv-parser         25.231 - 27.237

[07:24] <[Tux]> test-t-20          41.583 - 42.224

[07:33] *** ascheel14 joined
[07:33] *** ascheel14 left
[08:05] *** Ven` joined
[08:06] *** p6bannerbot sets mode: +v Ven`

[08:22] *** baweaver16 joined
[08:23] *** p6bannerbot sets mode: +v baweaver16

[08:24] *** baweaver16 left
[08:28] <Geth> ¬¶ star: 9feb960ef2 | (Steve Mynott)++ | tools/star/release-guide.pod

[08:28] <Geth> ¬¶ star: doc manual steps needed in rakudo.org repo

[08:28] <Geth> ¬¶ star: review: https://github.com/rakudo/star/commit/9feb960ef2

[08:55] *** crayon2 joined
[08:56] *** p6bannerbot sets mode: +v crayon2

[08:56] *** crayon2 left
[09:14] <lizmat> Files=1247, Tests=75961, 377 wallclock secs (16.20 usr  5.68 sys + 2680.93 cusr 239.19 csys = 2942.00 CPU)

[09:19] *** Ven` left
[09:21] *** Ven` joined
[09:22] *** p6bannerbot sets mode: +v Ven`

[09:40] *** robertle left
[09:41] *** robertle joined
[09:42] *** p6bannerbot sets mode: +v robertle

[09:45] *** Zord10 joined
[09:46] *** p6bannerbot sets mode: +v Zord10

[09:51] *** Zord10 left
[10:46] <Geth> ¬¶ rakudo: 07d00db148 | (Alexius Korzinek)++ | 2 files

[10:46] <Geth> ¬¶ rakudo: Prevent REPL from writing to filehandle when opening a file.

[10:46] <Geth> ¬¶ rakudo: 

[10:46] <Geth> ¬¶ rakudo: This is a fix for issue #2184.

[10:46] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/07d00db148

[10:46] <Geth> ¬¶ rakudo: 7c08ba7443 | (Zoffix Znet)++ (committed using GitHub Web editor) | 2 files

[10:46] <Geth> ¬¶ rakudo: Merge pull request #2188 from xelak6/master

[10:46] <synopsebot> RAKUDO#2184 [open]: https://github.com/rakudo/rakudo/issues/2184 [easy to resolve][good first issue][regression][‚ö† blocker ‚ö†] open() fails in REPL

[10:46] <Geth> ¬¶ rakudo: 

[10:46] <Geth> ¬¶ rakudo: Prevent REPL from writing to filehandle when opening a file.

[10:46] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/7c08ba7443

[10:50] *** astj left
[10:52] *** robertle left
[10:54] *** robertle joined
[10:55] *** p6bannerbot sets mode: +v robertle

[10:55] *** DrForr left
[11:03] *** DrForr joined
[11:03] *** astj joined
[11:03] *** p6bannerbot sets mode: +v DrForr

[11:04] *** p6bannerbot sets mode: +v astj

[11:08] *** astj left
[11:21] *** nate joined
[11:22] *** p6bannerbot sets mode: +v nate

[11:23] *** nate left
[11:28] *** Ven` left
[11:42] <tbrowder_> o/ #perl6-dev

[11:42] <tbrowder_> i‚Äôm still looking for someone to discuss pod with. o

[11:46] <tbrowder_> rakudo GH #1893 has an interesting slant. as i‚Äôve been looking at moving pod to a new slang, why does it have to be part of the main compiler at all? treat it like whitespace and, as TisonKun says, use another program to handle the pod.

[11:49] <tbrowder_> seems like that would: (1) make p6 parsing faster,  (2) use less memory, and (3) make pod easier to treat properly.

[11:49] <ilmari> tbrowder_: aren't there metamethods that give you access to the pod?

[11:52] <tbrowder_> yes, if i understand your question, but they still come from the main p6 compiler. TisonKun and i think a separate program should do the parsing and provide the equivalent of the current $=pod object.

[11:52] *** robertle left
[11:52] <tbrowder_> the main compiler would ignore pod.

[11:55] <tbrowder_> so it would still have to have some pod knowledge, but not nearly as much as now.

[11:57] <tbrowder_>  i don‚Äôt have a clue if that is feasible, but it sounds to me like it could work.

[12:05] <tbrowder_> or maybe the current method would be better if it would have a separate pod slang but ignore the pod unless an optional p6 switch was turned on.

[12:07] *** Zoffix joined
[12:07] *** p6bannerbot sets mode: +v Zoffix

[12:08] <Zoffix> tbrowder_: you mentioned going to the printers regarding Intro. Perl 6 brochure. Note that it's size is A5, not A4, and US equivalent is "Half US Letter"

[12:09] <tbrowder_> ah, okay, thanks!

[12:10] <Zoffix> And 19 out of 20 pages will have to be edited to make it fit to US format natively.

[12:11] *** Ven` joined
[12:11] *** p6bannerbot sets mode: +v Ven`

[12:12] <tbrowder_> i understand. from the one i printed i think a little scaling on half-letter won‚Äôt look too bad.

[12:13] <tbrowder_> maybe print it on colored paper‚Äîwe‚Äôll see what magic the printer can do.

[12:14] <Zoffix> .oO( 80lb gloss )

[12:15] <tbrowder_> ok. is the indd file the adobe source?

[12:15] <Zoffix> Yes

[12:15] <tbrowder_> thnx

[12:18] <tbrowder_> have you tried scribus on an indd file?

[12:18] <Zoffix> No, and I highly doubt it would work.

[12:20] <Zoffix> Doesn't even come up in the list of supported files; at least with Scribus 1.4.1.svn (which is ancient)

[12:21] <tbrowder_> apparently if the indesign prog saves the file as .ps or .eps scribus can use it.

[12:23] <Zoffix> What about IDML?

[12:23] <Zoffix> EPS, it just creates 20 separate EPS files, one for each page

[12:25] <Zoffix> And they aren't even editable. Just imported as an image

[12:25] <Zoffix> Ah, nm, if you ungrop it ungroups it, but all the text is single letters grouped together

[12:29] <Zoffix> tbrowder_: this article claims newer Scribuses can open IDML: https://opensource.com/article/18/7/adobe-indesign-open-source-tools

[12:30] <Zoffix> tbrowder_: here's an IDML of the brochure: http://temp.perl6.party/Introducing-Perl6-Brochure--PRINT-QUALITY--NO-BLEED.idml

[12:30] <Zoffix> It'll probably ask for links to fonts/images, those are in the marketing repo

[12:31] <Zoffix> Document fonts and Links: https://github.com/perl6/marketing/tree/master/Brochures/Introducing-Perl6-Brochure--1516098660

[12:31] * Zoffix &

[12:31] *** Zoffix left
[12:47] *** tharkun26 joined
[12:48] *** p6bannerbot sets mode: +v tharkun26

[12:48] *** tharkun26 left
[12:49] *** a3f_ joined
[12:49] *** p6bannerbot sets mode: +v a3f_

[12:50] *** a3f left
[12:50] *** camelia left
[12:52] *** shareable6 left
[12:52] *** nativecallable6 left
[12:54] *** reportable6 left
[12:54] *** benchable6 left
[12:54] *** statisfiable6 left
[12:54] *** greppable6 left
[12:54] <tbrowder_>  thank you :-D

[12:56] *** camelia joined
[12:57] <tbrowder_> btw, if you saved as .ps it should just ceate one file afaik, an .eps is by design to be inserted into .ps or other compatible format filed.

[12:57] *** p6bannerbot sets mode: +v camelia

[12:57] *** robertle joined
[12:58] *** p6bannerbot sets mode: +v robertle

[12:59] *** sulvone8 joined
[12:59] *** sulvone8 left
[13:11] *** sekizo3 joined
[13:11] <robertle> all the marketing material discussions reminded me of something: where can I get a camelia sticker?

[13:11] *** p6bannerbot sets mode: +v sekizo3

[13:13] *** sekizo3 left
[13:14] <robertle> if none exist already then I'll volunteer and get some printed...

[13:15] <timotimo> liz and woolfy have stacks of 'em

[13:15] <timotimo> they bring them to every conference they attend

[13:15] <robertle> awesome

[13:15] <timotimo> there are different stickers as well as buttons in multiple sizes

[13:15] <timotimo> the one i like most has kind of an extra tab on the outside of one of the wings that says "perl6" or "perl6.org"

[13:33] <lizmat> robertle: if you would come to the Amsterdam.PM meeting later today at TechInc

[13:33] <lizmat> we could get you some and then some other Perl 6 paraphernalia :-)

[13:34] * lizmat now goes outside to spend ~ 2 hours in a hot car on a hot road

[13:34] *** lizmat left
[13:34] *** Ven` left
[13:35] *** Ven` joined
[13:36] *** p6bannerbot sets mode: +v Ven`

[13:50] *** reportable6 joined
[13:51] *** p6bannerbot sets mode: +v reportable6

[14:00] *** skids joined
[14:01] *** p6bannerbot sets mode: +v skids

[14:14] *** pmurias joined
[14:15] *** p6bannerbot sets mode: +v pmurias

[14:15] <pmurias> jnthn: what are the benefits of passing around a global context on the jvm backend instead of storing stuff in static variables?

[14:15] *** Zoffix joined
[14:15] *** p6bannerbot sets mode: +v Zoffix

[14:15] <Zoffix> releasable6: status

[14:15] <releasable6> Zoffix, Next release in ‚âà11 days and ‚âà4 hours. 4 blockers. 81 out of 335 commits logged (‚ö† 9 warnings)

[14:15] <releasable6> Zoffix, Details: https://gist.github.com/f00d714671af95d89e87c2f43bb00b66

[14:15] <Zoffix> Reminder that the release is coming up and there are some blockers that need to be resolved.

[14:16] *** Zoffix left
[14:26] <jnthn> pmurias: I think that multiple instances within the same JVM were possible

[14:26] <jnthn> pmurias: Which is used to run the spectest faster

[14:26] <jnthn> I don't recall that being passed around though, I thought just the threadcontext was

[14:34] <Geth> ¬¶ nqp: 488ba3c2e6 | (Jonathan Worthington)++ | 2 files

[14:34] <Geth> ¬¶ nqp: Allow specification of repr with `stub` declarator

[14:34] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/488ba3c2e6

[14:34] <Geth> ¬¶ nqp: 96f58597fc | (Jonathan Worthington)++ | src/NQP/Actions.nqp

[14:34] <Geth> ¬¶ nqp: Whitespace correction

[14:34] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/96f58597fc

[14:37] <|Tux|> Rakudo version 2018.06-335-g7c08ba744 - MoarVM version 2018.06-383-g67a9afef6

[14:37] <|Tux|> csv-test-xs-20      0.448 -  0.514

[14:37] <|Tux|> csv-ip5xs           0.950 -  0.958

[14:37] <|Tux|> test-t --race       0.945 -  0.977

[14:37] <|Tux|> test-t              2.159 -  2.218

[14:37] <|Tux|> csv-ip5xs-20        7.804 -  8.206

[14:37] <|Tux|> test                8.708 -  8.954

[14:37] <|Tux|> test-t-20 --race   12.677 - 13.109

[14:37] <|Tux|> csv-parser         24.144 - 24.568

[14:37] <|Tux|> test-t-20          38.101 - 38.343

[14:37] <|Tux|> looks like running it on the box while actually using it as a desktop causes some slowdown

[14:38] <|Tux|> 2018-08-06 13:34:27 test-t 2.205

[14:38] <|Tux|> 2018-07-17 13:19:48 test-t 2.203

[14:38] <|Tux|> 2018-08-03 16:57:31 test-t 2.197

[14:38] <|Tux|> 2018-08-03 17:01:13 test-t 2.175

[14:38] <|Tux|> 2018-08-07 16:28:38 test-t 2.159

[14:38] <jnthn> Hm, 2.159 would be a new low, yes? :)

[14:39] <|Tux|> that is why the second table is posted: it is the top-5

[14:39] *** travis-ci joined
[14:39] *** travis-ci left
[14:39] <jnthn> aha :)

[14:39] <pmurias> jnthn: that's passed on the threadcontext

[14:40] * jnthn wonders if he can get it below 2 :)

[14:42] * |Tux| knows

[14:43] <|Tux|> I think it might get a lot under 2 if ¬´break;¬ª could be optimized to a goto (or if there is something like break that is not an exception)

[14:44] <|Tux|> I think it might get a lot under 2 if ¬´next;¬ª could be optimized to a goto (or if there is something like next that is not an exception)

[14:44] <|Tux|> (sorry)

[14:44] <|Tux|> my mainloop has about 50 next's

[14:46] <jnthn> That already happens in some cases :)

[14:46] <jnthn> (Not looked at if the opt is done in your particular case)

[14:47] <|Tux|> 34, but still, a lot

[14:48] *** brrt joined
[14:48] *** p6bannerbot sets mode: +v brrt

[14:59] *** FROGGS left
[15:00] *** FROGGS joined
[15:00] *** p6bannerbot sets mode: +v FROGGS

[15:01] *** FROGGS left
[15:01] *** FROGGS joined
[15:02] *** p6bannerbot sets mode: +v FROGGS

[15:03] <timotimo> i think it requires the loop body to be inlined into the containing frame that has the loop's control structure?

[15:04] <timotimo> for that, we may want to slightly alter the size conditions for inlining; if the containing frame is pretty small, but the contained one is very big, we should say "ok, that's fine. it's as if we were inlining the outer frame into the inner one"

[15:09] *** ABIX_Adamj joined
[15:10] *** p6bannerbot sets mode: +v ABIX_Adamj

[15:11] *** ABIX_Adamj left
[15:15] *** diakopter left
[15:28] *** brrt left
[15:29] *** davidfg413 joined
[15:29] *** davidfg413 left
[15:29] *** ollien12 joined
[15:30] *** p6bannerbot sets mode: +v ollien12

[15:30] *** ollien12 left
[15:36] *** diakopter joined
[15:36] *** p6bannerbot sets mode: +v diakopter

[15:58] *** lizmat joined
[15:59] *** brrt joined
[15:59] *** p6bannerbot sets mode: +v lizmat

[15:59] *** p6bannerbot sets mode: +v brrt

[16:00] *** Geth left
[16:01] *** Geth joined
[16:01] *** ChanServ sets mode: +v Geth

[16:01] *** p6bannerbot sets mode: +v Geth

[16:10] <Geth> ¬¶ nqp/speshplugin_guardstaticcode: 2f1cf4fbd6 | (Timo Paulssen)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[16:10] <Geth> ¬¶ nqp/speshplugin_guardstaticcode: bind speshguardgetstaticcode

[16:10] <Geth> ¬¶ nqp/speshplugin_guardstaticcode: 

[16:10] <Geth> ¬¶ nqp/speshplugin_guardstaticcode: requires https://github.com/MoarVM/MoarVM/pull/932

[16:10] <Geth> ¬¶ nqp/speshplugin_guardstaticcode: review: https://github.com/perl6/nqp/commit/2f1cf4fbd6

[16:11] *** robertle left
[16:12] <Geth> ¬¶ nqp: timo++ created pull request #495: bind speshguardgetstaticcode

[16:12] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/pull/495

[16:13] <Geth> ¬¶ rakudo/speshplugin_guardstaticcode: 5b881e9f24 | (Timo Paulssen)++ | src/vm/moar/spesh-plugins.nqp

[16:13] <Geth> ¬¶ rakudo/speshplugin_guardstaticcode: teach "assign" spesh plugin about Proxy

[16:13] <Geth> ¬¶ rakudo/speshplugin_guardstaticcode: 

[16:13] <Geth> ¬¶ rakudo/speshplugin_guardstaticcode: requires https://github.com/perl6/nqp/pull/495

[16:13] <Geth> ¬¶ rakudo/speshplugin_guardstaticcode: review: https://github.com/rakudo/rakudo/commit/5b881e9f24

[16:13] <Geth> ¬¶ rakudo: timo++ created pull request #2189: teach "assign" spesh plugin about Proxy

[16:13] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/2189

[16:26] <Geth> ¬¶ rakudo/tune-hash: 656b763d8d | (Jonathan Worthington)++ | src/Perl6/Metamodel/BOOTSTRAP.nqp

[16:26] <Geth> ¬¶ rakudo/tune-hash: Generalize attribute default mechanism

[16:26] <Geth> ¬¶ rakudo/tune-hash: 

[16:26] <Geth> ¬¶ rakudo/tune-hash: So that we'll be able to use it for cases that are not Scalar, e.g.

[16:26] <Geth> ¬¶ rakudo/tune-hash: making the storage of Hash automatically be an nqp::hash instead of

[16:26] <Geth> ¬¶ rakudo/tune-hash: having to do repeated checks of that.

[16:26] <Geth> ¬¶ rakudo/tune-hash: review: https://github.com/rakudo/rakudo/commit/656b763d8d

[16:26] <Geth> ¬¶ rakudo/tune-hash: 0b1e6d54f7 | (Jonathan Worthington)++ | 2 files

[16:26] <Geth> ¬¶ rakudo/tune-hash: Make Map/Hash $!storage always init to nqp::hash

[16:26] <Geth> ¬¶ rakudo/tune-hash: review: https://github.com/rakudo/rakudo/commit/0b1e6d54f7

[16:26] <Geth> ¬¶ rakudo/tune-hash: 99f7f4cc85 | (Jonathan Worthington)++ | 2 files

[16:26] <Geth> ¬¶ rakudo/tune-hash: Tune Map/Hash for $!storage changes, and more

[16:26] <Geth> ¬¶ rakudo/tune-hash: 

[16:26] <Geth> ¬¶ rakudo/tune-hash: This is mostly a case of kicking out nqp::isconcrete instructions,

[16:26] <Geth> ¬¶ rakudo/tune-hash: but we can also use some the new and cheaper instruction for making a

[16:26] <Geth> ¬¶ rakudo/tune-hash: Scalar container with an initial value.

[16:26] <Geth> ¬¶ rakudo/tune-hash: review: https://github.com/rakudo/rakudo/commit/99f7f4cc85

[16:26] *** FROGGS left
[16:27] *** FROGGS joined
[16:27] *** p6bannerbot sets mode: +v FROGGS

[16:30] *** [TuxCM] joined
[16:31] *** p6bannerbot sets mode: +v [TuxCM]

[16:44] *** robertle joined
[16:44] *** p6bannerbot sets mode: +v robertle

[16:48] *** Ven` left
[16:49] <Geth> ¬¶ rakudo/tune-hash: 1f65bf243f | (Jonathan Worthington)++ | 3 files

[16:49] <Geth> ¬¶ rakudo/tune-hash: Don't have p6scalarfromvalue check for definedness

[16:49] <Geth> ¬¶ rakudo/tune-hash: 

[16:49] <Geth> ¬¶ rakudo/tune-hash: Since we now always promise we will always provide a descriptor that

[16:49] <Geth> ¬¶ rakudo/tune-hash: is defined to it. Results in rather more compact code.

[16:49] <Geth> ¬¶ rakudo/tune-hash: review: https://github.com/rakudo/rakudo/commit/1f65bf243f

[16:49] <Geth> ¬¶ rakudo/tune-hash: 37c7e6e558 | (Jonathan Worthington)++ | 2 files

[16:49] <Geth> ¬¶ rakudo/tune-hash: Further redundant check removals in Map/Hash

[16:49] <Geth> ¬¶ rakudo/tune-hash: review: https://github.com/rakudo/rakudo/commit/37c7e6e558

[16:54] <timotimo> nothing is certain but desc and taxes

[16:56] <Geth> ¬¶ rakudo/tune-hash: 90f678f3da | (Jonathan Worthington)++ | 2 files

[16:56] <Geth> ¬¶ rakudo/tune-hash: Avoid more unrequired descriptor checks

[16:56] <Geth> ¬¶ rakudo/tune-hash: review: https://github.com/rakudo/rakudo/commit/90f678f3da

[17:00] <lizmat> jnthn: would that also work for QuantHashes having a Rakudo::Internals::IterationSet ?

[17:02] <lizmat> jnthn: in any case, way cool  :-)

[17:02] <jnthn> Probably there's more places it can be applied :)

[17:02] <jnthn> Please forge ahead and do so; I'm just showing the way on the hottest things :-)

[17:02] <lizmat> yeah... can't wait to do that  :-)

[17:03] <lizmat> shouldn't I wait for hte merge ?

[17:03] <jnthn> Yeah, it just passed spectest so I'll merge very soon :)

[17:03] <jnthn> https://gist.github.com/jnthn/196263d7e888278863d5a4b2e42b2008 runs in half the time it used to thanks to that branch :)

[17:04] <lizmat> so: "has Rakudo::Internals::IterationSet $!elems" 

[17:04] <lizmat> is all that it is needed to have it auto-vivify the attrinbute ?

[17:04] <jnthn> Ah, no, see the stuff I did in BOOTSTRAP

[17:04] <lizmat> :-(

[17:05] <jnthn> Well, I mean, that'll viv it to the type object as usual :)

[17:06] <lizmat> well,one of the reasons of using an IterationSet is that I wanted to be able to pass them around without them being HLLized

[17:06] <lizmat> otherwise it is just an VMHash repr

[17:06] <jnthn> Yeah, you can do that :)

[17:06] <lizmat> I can do what ?

[17:06] <jnthn> Actually I put in a change to NQP earlier today so we can set up IterationBuffer early enough with the correct repr

[17:07] <diakopter> I vaguely remember bumping against that circularity issue a few years ago

[17:07] <lizmat> then I would like to set IterationSet also in there  :-)

[17:07] <jnthn> I was originally going to look at doing the $!storage trick I've done with Map on List

[17:07] <jnthn> But it turns out it's a bit harder there, so I figured I'd get it working for the easier case first :)

[17:08] <Geth> ¬¶ rakudo/master: 7 commits pushed by (Jonathan Worthington)++

[17:08] <Geth> ¬¶ rakudo/master: 656b763d8d | Generalize attribute default mechanism

[17:08] <Geth> ¬¶ rakudo/master: 0b1e6d54f7 | Make Map/Hash $!storage always init to nqp::hash

[17:08] <Geth> ¬¶ rakudo/master: 99f7f4cc85 | Tune Map/Hash for $!storage changes, and more

[17:08] <Geth> ¬¶ rakudo/master: 1f65bf243f | Don't have p6scalarfromvalue check for definedness

[17:08] <Geth> ¬¶ rakudo/master: 37c7e6e558 | Further redundant check removals in Map/Hash

[17:08] <Geth> ¬¶ rakudo/master: 90f678f3da | Avoid more unrequired descriptor checks

[17:08] <Geth> ¬¶ rakudo/master: a2c34504ad | Merge branch 'tune-hash'

[17:08] <Geth> ¬¶ rakudo/master: review: https://github.com/rakudo/rakudo/compare/7c08ba7443af...a2c34504adba

[17:16] *** FROGGS left
[17:17] *** FROGGS joined
[17:17] *** p6bannerbot sets mode: +v FROGGS

[17:18] <lizmat> jnthn: something like "my $other := nqp::getattr(map,Map,'$!storage')" would that vivify the $!storage in 'map' ?

[17:18] *** Kaiepi left
[17:18] <Geth> ¬¶ nqp: 7cd46f0b4c | (Zoffix Znet)++ | src/QRegex/Cursor.nqp

[17:18] <Geth> ¬¶ nqp: Don't check var until we actually gonna use it

[17:18] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/7cd46f0b4c

[17:21] <jnthn> Yes

[17:22] <jnthn> Well, at the moment :)

[17:22] *** Kaiepi joined
[17:23] *** p6bannerbot sets mode: +v Kaiepi

[17:23] <lizmat> ok so I can take checks out for that then

[17:24] <lizmat> reduce:               nqp::defined(nqp::getattr(self,Map,'$!storage')) && nqp::existskey(nqp::getattr(self,Map,'$!storage'),key.WHICH)

[17:24] <lizmat> to:

[17:25] <lizmat> nqp::existskey(nqp::getattr(self,Map,'$!storage'),key.WHICH)

[17:25] <jnthn> Darn, getting array assignment below the inline size is tricky

[17:25] <jnthn> I can sorta kinda get it close-ish

[17:25] <lizmat> jnthn: so I could do that type of reduction ?  ^^

[17:25] <jnthn> lizmat: Should be able to, yes

[17:26] <lizmat> ok, will do that then for object hashes

[17:29] <[TuxCM]> Rakudo version 2018.06-342-ga2c34504a - MoarVM version 2018.06-383-g67a9afef6

[17:29] <[TuxCM]> csv-test-xs-20      0.467 -  0.491

[17:29] <[TuxCM]> test-t --race       0.938 -  0.949

[17:29] <[TuxCM]> csv-ip5xs           1.018 -  1.154

[17:29] <[TuxCM]> test-t              2.178 -  2.269

[17:29] <[TuxCM]> csv-ip5xs-20        7.598 -  7.851

[17:29] <[TuxCM]> test                8.720 -  8.801

[17:29] <[TuxCM]> test-t-20 --race   12.465 - 13.006

[17:29] <[TuxCM]> csv-parser         24.676 - 24.937

[17:29] <[TuxCM]> test-t-20          38.391 - 39.521

[17:29] <[TuxCM]> (on request)

[17:33] <Kaiepi> PufferBot, help

[17:33] <PufferBot> Kaiepi, address me with 'build', 'test', 'spectest', or 'stresstest' to test building Rakudo, running tests, and running Roast's test suite respectively on openbsd. Address me with 'all' to attempt to run a full build with all tests.

[17:33] <Kaiepi> PufferBot, all

[17:33] <PufferBot> [openbsd] Running complete Rakudo build and tests (this will take a while)...

[17:33] <jnthn> Ah, goodness, the return type check handling is still rather bulky in the code it spits out

[17:33] <jnthn> Not to mention that it partly duplicates the kind of checks that decontrv does

[17:34] <Geth> ¬¶ nqp: 5b87dc34b1 | (Zoffix Znet)++ | src/HLL/Grammar.nqp

[17:34] <Geth> ¬¶ nqp: Micro-opt method LANG

[17:34] <Geth> ¬¶ nqp: 

[17:34] <Geth> ¬¶ nqp: - Get rid of variables we don't really need

[17:34] <Geth> ¬¶ nqp: - Most of LANG calls don't use extra args, so swap the always-slip

[17:34] <Geth> ¬¶ nqp:     version to a ternary that makes argless calls ~2.2x faster,

[17:34] <Geth> ¬¶ nqp:     while slowing down argful calls within noise (~1.5%)

[17:34] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/5b87dc34b1

[17:34] <Kaiepi> would it be worthwhile to include nqp tests for RakudoBot?

[17:35] <PufferBot> [openbsd] Failed to build Rakudo and run all tests... See the output at http://fpaste.scsys.co.uk/581365

[17:35] * jnthn notices the time and goes home for dinner :)

[17:35] <jnthn> bbl

[17:37] <AlexDaniel> Kaiepi: heh that looks bad. Is everything alright with the bot setup?

[17:38] *** travis-ci joined
[17:38] *** travis-ci left
[17:39] <Kaiepi> looks like i might need to remove the quotes in the flags i use

[17:41] *** PufferBot_ joined
[17:42] <Geth> ¬¶ nqp: f8d218659b | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[17:42] <Geth> ¬¶ nqp: [MoarVM Bump] Brings 3 commits

[17:42] <Geth> ¬¶ nqp: 

[17:42] <Geth> ¬¶ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.06-380-gac3d3c769...2018.06-383-g67a9afe

[17:42] <Geth> ¬¶ nqp: 67a9afe Have sp_fastcreate do a direct nursery allocation

[17:42] <Kaiepi> PufferBot_, all

[17:42] <Geth> ¬¶ nqp: 2f36e26 Add branch hint macros to nursery allocation

[17:42] <Geth> ¬¶ nqp: 7507090 Make spesh thread more GC-responsive

[17:42] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/f8d218659b

[17:42] <Geth> ¬¶ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.06-380-gac3d3c769...2018.06-383-g67a9afe

[17:42] <Geth> ¬¶ rakudo: a6edf511d8 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[17:42] <Geth> ¬¶ rakudo: [NQP Bump] Brings 6 commits

[17:42] <Geth> ¬¶ rakudo: 

[17:42] <Geth> ¬¶ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.06-137-g001d1a756...2018.06-143-gf8d2186

[17:42] <Geth> ¬¶ rakudo: f8d2186 [MoarVM Bump] Brings 3 commits

[17:42] <Geth> ¬¶ rakudo: 5b87dc3 Micro-opt method LANG

[17:42] <Geth> ¬¶ rakudo: 7cd46f0 Don't check var until we actually gonna use it

[17:42] <Geth> ¬¶ rakudo: 96f5859 Whitespace correction

[17:42] *** p6bannerbot sets mode: +v PufferBot_

[17:42] <Geth> ¬¶ rakudo: <‚Ä¶commit message has 7 more lines‚Ä¶>

[17:42] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/a6edf511d8

[17:42] <Geth> ¬¶ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.06-137-g001d1a756...2018.06-143-gf8d2186

[17:43] *** PufferBot_ left
[17:43] *** PufferBot left
[17:44] *** PufferBot joined
[17:44] <Kaiepi> PufferBot, all

[17:44] <Kaiepi> PufferBot, help

[17:44] <Kaiepi> hm

[17:45] *** p6bannerbot sets mode: +v PufferBot

[17:45] <Kaiepi> ah that's it

[17:45] <Kaiepi> it's building atm

[17:45] <PufferBot> [openbsd] Failed to build Rakudo and run all tests... See the output at http://fpaste.scsys.co.uk/581366

[17:46] *** travis-ci joined
[17:46] *** travis-ci left
[17:46] *** PufferBot left
[17:46] <Geth> ¬¶ rakudo: 6e661e9e4f | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[17:46] <Geth> ¬¶ rakudo: Simplify object hash access

[17:46] <Geth> ¬¶ rakudo: 

[17:46] <Geth> ¬¶ rakudo: Because of work on the tune-hash branch

[17:46] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/6e661e9e4f

[17:47] *** See joined
[17:47] *** See left
[17:50] *** [TuxCM] left
[17:51] *** FROGGS left
[17:52] *** FROGGS joined
[17:53] *** p6bannerbot sets mode: +v FROGGS

[17:56] <Kaiepi> i'll check if the build fails when i try it manually

[17:56] *** Eduard_Munteanu2 joined
[17:57] *** p6bannerbot sets mode: +v Eduard_Munteanu2

[17:58] *** Eduard_Munteanu2 left
[18:11] *** FROGGS left
[18:11] *** FROGGS joined
[18:12] *** p6bannerbot sets mode: +v FROGGS

[18:14] *** [TuxCM] joined
[18:14] *** p6bannerbot sets mode: +v [TuxCM]

[18:18] *** pheizax joined
[18:18] *** p6bannerbot sets mode: +v pheizax

[18:18] *** pheizax left
[18:19] *** PufferBot joined
[18:19] *** Alex`26 joined
[18:19] *** p6bannerbot sets mode: +v PufferBot

[18:19] *** p6bannerbot sets mode: +v Alex`26

[18:20] <Kaiepi> PufferBot, all

[18:20] <PufferBot> [openbsd] Running complete Rakudo build and tests (this will take a while)...

[18:21] <PufferBot> [openbsd] Failed to build Rakudo and run all tests... See the output at http://fpaste.scsys.co.uk/581367

[18:21] *** BeastieBot joined
[18:22] *** p6bannerbot sets mode: +v BeastieBot

[18:22] <Geth> ¬¶ rakudo: 0f1b36a7a5 | (Elizabeth Mattijsen)++ | src/core/Stash.pm6

[18:22] <Geth> ¬¶ rakudo: Greatly simplify Stash.package_at_key

[18:22] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/0f1b36a7a5

[18:24] <Kaiepi> BeastieBot, all

[18:24] <BeastieBot> [freebsd] Running complete Rakudo build and tests (this will take a while)...

[18:24] *** Alex`26 left
[18:25] <Kaiepi> ok so running ./Configure.pl on openbsd manually works, so it's an issue with the bot

[18:25] <Kaiepi> odd though, it didn't used to do that

[18:27] <Kaiepi> now that it's built manually though...

[18:27] <Kaiepi> PufferBot, all

[18:27] <PufferBot> [openbsd] Running complete Rakudo build and tests (this will take a while)...

[18:28] <Kaiepi> if i can afford it, i might set up a netbsd vps for another bot like this as well

[18:28] <Kaiepi> can't use the netbsd vm on my machine unless you're willing to wait a full day for it to finish

[18:33] <Geth> ¬¶ nqp: 82790f9892 | (Zoffix Znet)++ | 4 files

[18:33] <Geth> ¬¶ nqp: Skip trailing whitespace

[18:33] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/82790f9892

[18:34] <Geth> ¬¶ nqp: 5872eda888 | (Zoffix Znet)++ | 13 files

[18:34] <Geth> ¬¶ nqp: Swap post-inc/dec into pre-int/dec

[18:34] <Geth> ¬¶ nqp: 

[18:34] <Geth> ¬¶ nqp: Timing difference drowns in noise, but by dumping MAST I see

[18:34] <Geth> ¬¶ nqp: there's one fewer `set` ops in pre version. I also changed

[18:34] <Geth> ¬¶ nqp: `$x := $x + 1` into `++$x`; dumping MAST for that one shows

[18:34] <Geth> ¬¶ nqp: the two are identical

[18:34] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/5872eda888

[18:39] *** travis-ci joined
[18:39] *** travis-ci left
[18:40] *** FROGGS left
[18:41] *** FROGGS joined
[18:41] <Geth> ¬¶ rakudo: b308db24d3 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[18:41] <Geth> ¬¶ rakudo: [NQP Bump] Brings 2 commits

[18:41] <Geth> ¬¶ rakudo: 

[18:41] <Geth> ¬¶ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.06-143-gf8d2186...2018.06-145-g5872eda

[18:41] <Geth> ¬¶ rakudo: 5872eda Swap post-inc/dec into pre-int/dec

[18:41] <Geth> ¬¶ rakudo: 82790f9 Skip trailing whitespace

[18:41] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/b308db24d3

[18:41] <Geth> ¬¶ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.06-143-gf8d2186...2018.06-145-g5872eda

[18:41] *** p6bannerbot sets mode: +v FROGGS

[18:43] *** Zoffix joined
[18:43] *** p6bannerbot sets mode: +v Zoffix

[18:43] *** ChanServ sets mode: +o Zoffix

[18:44] *** p6bannerbot left
[18:44] *** p6bannerbot joined
[18:44] *** Zoffix sets mode: +o p6bannerbot

[18:44] *** Zoffix left
[18:45] *** brrt left
[18:46] <PufferBot> [openbsd] Failed to build Rakudo and run all tests... See the output at http://fpaste.scsys.co.uk/581368

[18:48] *** FROGGS left
[18:49] *** FROGGS joined
[18:49] *** p6bannerbot sets mode: +v FROGGS

[18:52] <Geth> ¬¶ rakudo: bc2ca535f1 | (Elizabeth Mattijsen)++ | src/core/control.pm6

[18:52] <Geth> ¬¶ rakudo: Some more simplification

[18:52] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/bc2ca535f1

[18:53] *** FROGGS left
[18:53] *** FROGGS joined
[18:54] <Kaiepi> last two tests that openbsd failed are easily fixable, first might be a flapper i'd have to check

[18:54] *** p6bannerbot sets mode: +v FROGGS

[18:56] *** FROGGS left
[18:57] *** FROGGS joined
[18:58] *** p6bannerbot sets mode: +v FROGGS

[19:00] <Kaiepi> sorry for asking again, but how do i check which tests are flappers again?

[19:00] *** FROGGS left
[19:01] *** FROGGS joined
[19:01] <BeastieBot> [freebsd] Failed to build Rakudo and run all tests... See the output at http://fpaste.scsys.co.uk/581369

[19:01] *** p6bannerbot sets mode: +v FROGGS

[19:02] <timotimo> i usually ask on the channel %)

[19:02] <timotimo> but if you have the irclogs, you can search "ZOFFLOP"

[19:10] *** FROGGS left
[19:11] *** FROGGS joined
[19:11] *** p6bannerbot sets mode: +v FROGGS

[19:17] *** FROGGS left
[19:17] *** FROGGS joined
[19:18] *** p6bannerbot sets mode: +v FROGGS

[19:21] *** Harzilein27 joined
[19:22] *** FROGGS left
[19:22] *** p6bannerbot sets mode: +v Harzilein27

[19:23] *** FROGGS joined
[19:23] *** Harzilein27 left
[19:23] *** FROGGS left
[19:41] *** AlexDaniel left
[19:42] *** AlexDaniel joined
[19:42] *** AlexDaniel left
[19:42] *** AlexDaniel joined
[19:42] *** p6bannerbot sets mode: +v AlexDaniel

[19:42] *** p6bannerbot sets mode: +v AlexDaniel

[19:51] *** x[LGWs4x4i]uG2N0 left
[19:55] *** x[LGWs4x4i]uG2N0 joined
[19:55] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[19:56] <Geth> ¬¶ rakudo: 36d37cbc8b | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[19:56] <Geth> ¬¶ rakudo: Simplify my Int %h.ASSIGN-KEY

[19:56] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/36d37cbc8b

[19:57] *** skids left
[20:01] *** benchable6 joined
[20:01] *** [TuxCM] left
[20:01] *** p6bannerbot sets mode: +v benchable6

[20:11] *** PufferBot left
[20:15] <Geth> ¬¶ rakudo: 81a5e4ba89 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[20:15] <Geth> ¬¶ rakudo: Simplify my Int %h{Any}.AT-KEY|ASSIGN-KEY|BIND-KEY

[20:15] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/81a5e4ba89

[20:31] <Geth> ¬¶ rakudo: 1cd654a224 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[20:31] <Geth> ¬¶ rakudo: Manually inline Hash!AT-POS-CONTAINER

[20:31] <Geth> ¬¶ rakudo: 

[20:31] <Geth> ¬¶ rakudo: It became small enough to do so now with recent changes.

[20:31] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/1cd654a224

[20:32] <timotimo> did you mean AT-KEY-CONTAINER there?

[20:33] <lizmat> argh

[20:33] <lizmat> yeah

[20:33] <lizmat> comment added to commit

[20:42] *** travis-ci joined
[20:42] *** p6bannerbot sets mode: +v travis-ci

[20:42] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Simplify my Int %h{Any}.AT-KEY|ASSIGN-KEY|BIND-KEY'

[20:42] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/413291662 https://github.com/rakudo/rakudo/compare/36d37cbc8b47...81a5e4ba89fb

[20:42] *** travis-ci left
[20:42] <buggable> [travis build above] ‚ò† All failures are due to: failed make test (1 failure). Across all jobs, only t/04-nativecall/12-sizeof.t test file failed.

[20:45] <diakopter> lizmat: sorry if it's a dumb question, but doesn't it still need the AT-KEY-CONTAINER method for other stuff

[20:49] <MasterDuke> m: my @a; my Int $b = 2**65; @a[$b] = 3; # huh, i just assumed this would work

[20:49] <camelia> rakudo-moar 81a5e4ba8: OUTPUT: ¬´Cannot unbox 66 bit wide bigint into native integer‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:50] <jnthn> lol, that'd need a lot of memory :D

[20:50] <timotimo> i don't think we can give malloc or mmap more than 64bits for the size ;)

[20:50] <timotimo> and that array would have 8 times that size, because it stores pointers

[20:51] <jnthn> diakopter: It's a private method, so if it were wanted somewhere else, it'd be a compile error

[20:54] <diakopter> m: my @a[9999999999999999]

[20:54] <camelia> rakudo-moar 1cd654a22: OUTPUT: ¬´Illegal dimension in shape: 9999999999999999. All dimensions must be integers bigger than 0‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:56] <diakopter> m: my @a[] = BEGIN { @a = () }

[20:56] <camelia> rakudo-moar 1cd654a22: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a BEGIN‚ê§at <tmp>:1‚ê§Exception details:‚ê§  Cannot resolve caller STORE(Array: List); none of these signatures match:‚ê§      (Array:D: Iterable:D \iterable, *%_‚Ä¶¬ª

[20:56] <diakopter> m: my @a[] = BEGIN { @a = [] }

[20:56] <camelia> rakudo-moar 1cd654a22: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a BEGIN‚ê§at <tmp>:1‚ê§Exception details:‚ê§  Cannot resolve caller STORE(Array: Array); none of these signatures match:‚ê§      (Array:D: Iterable:D \iterable, *%‚Ä¶¬ª

[20:59] *** [TuxCM] joined
[21:00] *** p6bannerbot sets mode: +v [TuxCM]

[21:01] <MasterDuke> how much memory would it take? at work i have access to serves with 768gb of ram, and while i don't use perl 6 for stuff, i frequently just stick all the data i'm working on in memory because why not

[21:03] <lizmat> need to go away now, will look at stuff tomorrow&

[21:03] *** lizmat left
[21:03] <MasterDuke> though usually i'm using hashes, i assume they have the same limit to the number of keys?

[21:06] <MasterDuke> jnthn: btw, when you've got some free time, maybe you'll have a suggestion about http://colabti.org/irclogger/irclogger_log/perl6-dev?date=2018-08-07#l1 (tldr, i can no longer build my branch of nqp that defaults to int operations, which incidentally, i wouldn't mind people taking a look at to see if what i've done so far looks reasonable)

[21:08] <MasterDuke> https://github.com/MasterDuke17/nqp/tree/default_vars_and_ops_to_int_instead_of_num

[21:12] *** robertle left
[21:14] <MasterDuke> timotimo: or if you have any other debugging suggestions

[21:14] <MasterDuke> or anybody else

[21:15] <MasterDuke> bueller?...

[21:17] *** ripdog8 joined
[21:17] *** ripdog8 left
[21:20] *** trisk18 joined
[21:20] *** trisk18 left
[21:29] *** rej4 joined
[21:30] *** p6bannerbot sets mode: +v rej4

[21:31] *** rej4 left
[21:44] *** nativecallable6 joined
[21:45] *** p6bannerbot sets mode: +v nativecallable6

[22:16] *** pmurias left
[22:27] *** Kaiepi left
[22:27] *** Kaiepi joined
[22:28] *** p6bannerbot sets mode: +v Kaiepi

[22:28] <Geth> ¬¶ roast: xelak6++ created pull request #461: Add new test for issue #2158.

[22:28] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/pull/461

[22:29] *** bisectable6 joined
[22:30] *** p6bannerbot sets mode: +v bisectable6

[22:47] *** Zoffix joined
[22:47] *** p6bannerbot sets mode: +v Zoffix

[22:49] <Zoffix> MasterDuke: I'm assuming you have tried full build? Like, with make realclean, perl Configure and so on? For both rakudo and nqp

[22:50] <Geth> ¬¶ nqp: 56f163fa64 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[22:50] <Geth> ¬¶ nqp: [MoarVM Bump] Brings 2 commits

[22:50] <Geth> ¬¶ nqp: 

[22:50] <Geth> ¬¶ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.06-383-g67a9afe...2018.06-385-g3e679da

[22:50] <Geth> ¬¶ nqp: 3e679da Merge pull request #934 from xelak6/master

[22:50] <Geth> ¬¶ nqp: 448e75b Get the number of bytes to be processed from the current buffer and not from the header.

[22:50] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/56f163fa64

[22:50] <Geth> ¬¶ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.06-383-g67a9afe...2018.06-385-g3e679da

[22:50] <Geth> ¬¶ rakudo: 28df1bb0df | (Zoffix Znet)++ | tools/build/NQP_REVISION

[22:50] <Geth> ¬¶ rakudo: [NQP Bump] 56f163f [MoarVM Bump] Brings 2 commits

[22:50] <Geth> ¬¶ rakudo: 

[22:50] <Geth> ¬¶ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.06-145-g5872eda...2018.06-146-g56f163f

[22:50] <Geth> ¬¶ rakudo: 

[22:50] <Geth> ¬¶ rakudo: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.06-383-g67a9afe...2018.06-385-g3e679da

[22:50] <Geth> ¬¶ rakudo: 3e679da Merge pull request #934 from xelak6/master

[22:50] <Geth> ¬¶ rakudo: 448e75b Get the number of bytes to be processed from the current buffer and not from the header.

[22:50] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/28df1bb0df

[22:50] <Geth> ¬¶ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.06-145-g5872eda...2018.06-146-g56f163f

[22:51] <Zoffix> ZOFFLOP: t/spec/S17-supply/syntax.t You planned 83 tests but ran 74.

[22:51] <Zoffix> ZOFVM: Files=1303, Tests=152979, 171 wallclock secs (25.43 usr  3.35 sys + 3715.08 cusr 169.06 csys = 3912.92 CPU)

[22:52] <Zoffix> R#2158 now segfaults for me :/

[22:52] <synopsebot> R#2158 [open]: https://github.com/rakudo/rakudo/issues/2158 [regression][‚ö† blocker ‚ö†] :enc<utf8-c8> on Proc appears to drop a lot of content

[22:53] <Geth> ¬¶ roast: 8496358550 | (Alexius Korzinek)++ | S32-encoding/decoder.t

[22:53] <Geth> ¬¶ roast: Add new test for issue #2158.

[22:53] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/8496358550

[22:53] <Geth> ¬¶ roast: 44f31e533b | (Zoffix Znet)++ (committed using GitHub Web editor) | S32-encoding/decoder.t

[22:53] <Geth> ¬¶ roast: Merge pull request #461 from xelak6/master

[22:53] <Geth> ¬¶ roast: 

[22:53] <Geth> ¬¶ roast: Add new test for issue #2158.

[22:53] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/44f31e533b

[22:53] *** travis-ci joined
[22:53] *** p6bannerbot sets mode: +v travis-ci

[22:53] <travis-ci> NQP build failed. Zoffix Znet '[MoarVM Bump] Brings 2 commits

[22:53] <travis-ci> https://travis-ci.org/perl6/nqp/builds/413348787 https://github.com/perl6/nqp/compare/5872eda8884d...56f163fa64f3

[22:53] *** travis-ci left
[22:55] <Geth> ¬¶ rakudo: 677f23fb35 | (Zoffix Znet)++ | t/spectest.data

[22:55] <Geth> ¬¶ rakudo: Add S32-encoding/decoder.t to list of files

[22:55] <Geth> ¬¶ rakudo: 

[22:55] <Geth> ¬¶ rakudo: Added on S#461 https://github.com/perl6/roast/pull/461

[22:55] <Geth> ¬¶ rakudo: Partially covers R#2158 https://github.com/rakudo/rakudo/issues/2158

[22:55] <Geth> ¬¶ rakudo: (the encoding issue is covered, but the OP code in the Issue now

[22:55] <Geth> ¬¶ rakudo: segfaults for me, which the test doesn't cover)

[22:55] <synopsebot> S#461 [closed]: https://github.com/perl6/roast/pull/461 Add new test for issue #2158.

[22:55] <synopsebot> R#2158 [open]: https://github.com/rakudo/rakudo/issues/2158 [regression][‚ö† blocker ‚ö†] :enc<utf8-c8> on Proc appears to drop a lot of content

[22:55] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/677f23fb35

[22:56] <Zoffix> travis died 'cause: "Error while compiling op strfromname (source text: "nqp::strfromname(~$/)"), no registered operation handler"

[22:59] *** cheshire_cat joined
[22:59] <Zoffix> damn SEGV in t/spec/S32-io/open.t

[22:59] <Zoffix> ZOFFLOP: t/spec/S32-io/open.t SEGV

[22:59] *** p6bannerbot sets mode: +v cheshire_cat

[22:59] <Zoffix> ZOFFLOP: t/spec/S32-io/io-path-extension.t exit status 17

[22:59] *** cheshire_cat left
[23:01] <MasterDuke> Zoffix: well, i never got rakudo to build before, but yeah, for nqp did make realclean, Configure, etc

[23:03] <MasterDuke> #6  get_all_in_buffer (tc=tc@entry=0x555555559c80, ds=0x55555818dcf0) at src/strings/decode_stream.c:481

[23:04] <MasterDuke> #7  0x00007ffff7a6d28a in MVM_string_decodestream_get_all (tc=tc@entry=0x555555559c80, ds=<optimized out>) at src/strings/decode_stream.c:495

[23:04] <MasterDuke> from ` perl6-gdb-m 'run("curl", :enc<utf8-c8>, :out, "-s", "https://www.google.com").out.slurp.chars.say'`

[23:05] <Zoffix> Comment on https://github.com/rakudo/rakudo/issues/2158#issuecomment-411230232

[23:21] <Zoffix> I get "Program received signal SIGSEGV, Segmentation fault.

[23:21] <Zoffix> 0x00007ffff704e4d8 in _int_free (av=0x7ffff737a620 <main_arena>, p=<optimized out>, have_lock=0) at malloc.c:3996

[23:21] <Zoffix> 3996    malloc.c: No such file or directory.

[23:21] *** astj joined
[23:22] *** p6bannerbot sets mode: +v astj

[23:23] <timotimo> that smells like earlier memory corruption

[23:23] <Zoffix> How did MasterDuke get better output?

[23:23] <timotimo> running the program with valgrind can often give more details

[23:23] <timotimo> that comes from a gdb session

[23:23] <timotimo> oh, you are in gdb

[23:23] <timotimo> you need to "bt" and if you want a lot of spam, "bt all"

[23:24] <timotimo> no

[23:24] <MasterDuke> Zoffix: is your moarvm built with --debug=3?

[23:24] <timotimo> "bt full" is the command

[23:24] <Zoffix> MasterDuke: I think so

[23:24] <timotimo> to have fewer "<optimized out>" you'll also need --optimize=0

[23:24] <MasterDuke> valgrind is throwing errors i've never seen before

[23:24] <timotimo> :D

[23:24] <MasterDuke> it won't even run the code

[23:25] <timotimo> oh?

[23:25] <MasterDuke> oh, it won't even run 'say "hi"'

[23:25] <Zoffix> I got --no-optimize

[23:25] <Zoffix> Is that the same?

[23:25] <Zoffix> `--no-optimize --debug` is what I use

[23:26] <MasterDuke> https://gist.github.com/MasterDuke17/563b6d65baf1474767148bb62adfaac4

[23:26] <MasterDuke> i leave optimization on, but --debug=3

[23:27] <Zoffix> same error

[23:27] <Zoffix> but btfull gives more stuff

[23:28] <MasterDuke> let me try clang...

[23:28] <timotimo> https://bugs.archlinux.org/task/59551

[23:28] <timotimo> if you want valgrind to work again, downgrade your glibc below 2.28-1

[23:29] <MasterDuke> ah, thanks

[23:29] <Zoffix> 4  0x00007ffff7618fcb in MVM_decoder_take_all_chars (tc=0x603a30, decoder=0x7ffff1a06698) at src/6model/reprs/Decoder.c:263

[23:29] <Zoffix>         result = 0x0

[23:29] <timotimo> The Control-flow Enforcement Technology behavior can be changed for SHSTK/IBT at run-time through the "GLIBC_TUNABLES" environment variable. 

[23:29] <timotimo> perhaps with that you can temporarily disable it and make valgrind run again

[23:38] <Zoffix> valgrind outpuit: https://github.com/rakudo/rakudo/issues/2158#issuecomment-411236460

[23:44] *** Zoffix left
[23:54] *** VM_ joined
[23:54] *** p6bannerbot sets mode: +v VM_

[23:54] *** VM_ left
