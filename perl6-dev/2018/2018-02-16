[01:01] <tbrowder> AlexDaniel: nqp PR #414 fixed, passing all checks

[01:14] <japhb> Fresh build of latest rakudo segfaults during zef package install:

[01:14] <japhb> 216379 Segmentation fault      (core dumped) zef --/tap-harness --/cached install URI File::Temp p6doc Terminal::ANSIColor Term::termios Debugger::UI::CommandLine JSON::Tiny DBIish Linenoise Inline::Perl5 Inline::Python IRC::Client OO::Monitors Grammar::Debugger App::Mi6 cro

[01:15] <japhb> (I've not yet made any attempt to wittle that down, but it came after several recursions of the dependency search, right after this line:

[01:15] <japhb> ===> Searching for missing dependencies: Digest

[01:20] <AlexDaniel> tbrowder: will check once I have time

[01:20] <AlexDaniel> japhb: dang it

[01:23] <Geth> ¦ roast: d63090c18d | (Zoffix Znet)++ | MISC/bug-coverage-stress.t

[01:23] <Geth> ¦ roast: Cover segfault in a `for` loop + some ops

[01:23] <Geth> ¦ roast:

[01:23] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1483 R#1483

[01:23] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d63090c18d

[01:23] <synopsebot> R#1483 [open]: https://github.com/rakudo/rakudo/issues/1483 [SEGV][regression][testneeded] Cross-HLL inlining segfault 

[01:25] <AlexDaniel> japhb: if you have any details please comment on https://github.com/rakudo/rakudo/issues/1527

[01:43] <AlexDaniel> also, what is this? https://travis-ci.org/rakudo/rakudo/jobs/342094793#L1600

[03:14] <Zoffix> ZOFFLOP: t/spec/S17-supply/batch.t

[03:14] <Zoffix> ZOFVM: Files=1289, Tests=153218, 148 wallclock secs (20.16 usr  3.30 sys + 3160.22 cusr 157.94 csys = 3341.62 CPU)

[03:30] <Geth> ¦ rakudo/post-release: 8b7385d810 | (Zoffix Znet)++ | src/core/Uni.pm

[03:30] <Geth> ¦ rakudo/post-release: Optimize Uni.list

[03:30] <Geth> ¦ rakudo/post-release:

[03:30] <Geth> ¦ rakudo/post-release: - Use custom iterator with .push-all and .[count|bool]-only

[03:30] <Geth> ¦ rakudo/post-release: - Makes reifying 15x faster and .count-only 653x faster (on 10000-char str)

[03:30] <Geth> ¦ rakudo/post-release: - Speeds up Str.ords

[03:30] <Geth> ¦ rakudo/post-release: review: https://github.com/rakudo/rakudo/commit/8b7385d810

[03:31] <Geth> ¦ roast/post-release: d43b90d70c | (Zoffix Znet)++ | S32-str/ords.t

[03:31] <Geth> ¦ roast/post-release: Cover Uni.list optimization

[03:31] <Geth> ¦ roast/post-release:

[03:31] <Geth> ¦ roast/post-release: Covers https://github.com/rakudo/rakudo/commit/8b7385d810

[03:31] <Geth> ¦ roast/post-release: review: https://github.com/perl6/roast/commit/d43b90d70c

[03:34] <Geth> ¦ roast/post-release: e2b662a4aa | (Zoffix Znet)++ | S32-str/ords.t

[03:34] <Geth> ¦ roast/post-release: Fix up counter in test description

[03:34] <Geth> ¦ roast/post-release: review: https://github.com/perl6/roast/commit/e2b662a4aa

[10:41] <AlexDaniel> it would be great if someone can merge this: https://github.com/sergot/http-useragent/pull/188

[10:41] <AlexDaniel> because otherwise I seem to get a lot of modules unsucced in toaster

[10:45] <AlexDaniel> at least that's my current mid-sleep hypothesis

[11:19] <Geth> ¦ rakudo/post-release: ba6b84bd0c | (Zoffix Znet)++ | src/core/Rakudo/Internals.pm

[11:19] <Geth> ¦ rakudo/post-release: Make Str.perl 43x faster for some chars

[11:19] <Geth> ¦ rakudo/post-release:

[11:19] <Geth> ¦ rakudo/post-release: Those that give +uniprop($ord,'Canonical_Combining_Class') > 0

[11:19] <Geth> ¦ rakudo/post-release: in particular.

[11:19] <Geth> ¦ rakudo/post-release:

[11:19] <Geth> ¦ rakudo/post-release: The change from lower-case hex to upper-case hex is intentional.

[11:19] <Geth> ¦ rakudo/post-release: I think it doesn't matter much. We could also skip the hexafication

[11:19] <Geth> ¦ rakudo/post-release: of ords and simply use the `\c[]` escape, but perhaps decimal

[11:19] <Geth> ¦ rakudo/post-release: character codes are less familiar to humans reading the output?

[11:19] <Geth> ¦ rakudo/post-release: review: https://github.com/rakudo/rakudo/commit/ba6b84bd0c

[11:26] <lizmat> Files=1235, Tests=76220, 312 wallclock secs (14.77 usr  5.40 sys + 2141.29 cusr 214.86 csys = 2376.32 CPU)

[11:27] <dogbert2> lizmat: welcome back :-)

[11:27] <lizmat> physically, yes

[11:27] <lizmat> still recovering from my bad cold  :-(

[11:28] <dogbert2> aha

[11:28] <dogbert2> did you get it during your vacation or when you got back?

[12:16] <|Tux|> Rakudo version 2018.01-204-gbeaad7b97 - MoarVM version 2018.01-94-gc7774e37d

[12:16] <|Tux|> csv-test-xs-20      0.484 -  0.500

[12:16] <|Tux|> csv-ip5xs           0.784 -  0.805

[12:16] <|Tux|> test-t --race       1.047 -  1.090

[12:16] <|Tux|> test-t              2.532 -  2.568

[12:16] <|Tux|> csv-ip5xs-20        7.435 -  7.468

[12:16] <|Tux|> test                8.460 -  9.120

[12:16] <|Tux|> csv-parser         11.198 - 11.487

[12:16] <|Tux|> test-t-20 --race   15.909 - 16.110

[12:16] <|Tux|> test-t-20          45.483 - 45.709

[12:40] <timotimo> releasable6: status

[12:40] <releasable6> timotimo, Next release in 1 day and ≈6 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[12:40] <releasable6> timotimo, Details: https://gist.github.com/5c0330f577337462e1f14374f6447d09

[12:41] <timotimo> i should probably post to perl6-users or something to get feedback on the udp datagram api?

[15:05] <dogbert2> heh, ===SORRY!===

[15:05] <dogbert2> Iteration past end of iterator

[15:06] <dogbert2> i get this when I run: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 ./perl6 t/spec/S32-str/windows-1251-windows-1252-encode-decode.t

[15:08] <dogbert2> the same goes for t/spec/S11-modules/import.t

[15:55] <AlexDaniel> treegrep: t/080-ua.t

[15:55] <greppable6> AlexDaniel, https://gist.github.com/f32bf894124f6e371c2ddc01d5ded205

[15:55] <AlexDaniel> treegrep: t\/080-ua.t

[15:56] <greppable6> AlexDaniel, https://gist.github.com/9d78d03982dda078f42008deecec644c

[15:56] <AlexDaniel> treegrep: t\/080\-ua.t

[15:56] <greppable6> AlexDaniel, https://gist.github.com/1c2fe0cc86aff460a8fe3130081ce597

[15:57] <AlexDaniel> MasterDuke: ok, hmmm… that file hangs without a fix ↑

[15:57] <AlexDaniel> but I thought I tried HTTP::UserAgent tests and they were green?

[16:06] <AlexDaniel> if anybody is wondering, here's a summary: a recent change to HTTP::UserAgent makes it go into an infinite loop. There are many modules depending on that module, so not only they fail in toaster, but collectively they bog down the cpu when toaster is running…

[16:07] <dogbert2> AlexDaniel: are your bots still suffering from SEGV's?

[16:07] <AlexDaniel> dogbert2: yes

[16:08] <dogbert2> have you applied brrt's fixes?

[16:08] <AlexDaniel> yes

[16:08] <dogbert2> :(

[16:08] <dogbert2> found some new errors above if you're interested

[16:09] <AlexDaniel> dogbert2: it's this, by the way: https://github.com/rakudo/rakudo/issues/1259

[16:10] <AlexDaniel> not going to call that a blocker obviously because it was spotted in November and I'm the only person complaining :)

[16:14] <dogbert2> :)

[18:02] <AlexDaniel> notable6: release

[18:02] <notable6> AlexDaniel, No notes for “release”

[21:56] <AlexDaniel> fwiw I know about at least one potential blocker, golfing it right now

[21:57] <AlexDaniel> (and meanwhile toaster is crunching its stuff with proper HTTP::UserAgent this time)

[22:03] <dogbert17> AlexDaniel: is it possible to run bisectbot with e.g. MVM_SPESH_DISABLE env var set?

[22:03] <AlexDaniel> sure

[22:03] <AlexDaniel> dogbert2: I am doing it right now, but… do you have access to the server?

[22:04] <AlexDaniel> if not please give me your ssh key and you'll be able to play with it yourself

[22:04] <dogbert17> like, bisect MVM_SPESH_DISABLE=1 t/spec/S32-str/windows-1251-windows-1252-encode-decode.t

[22:04] <AlexDaniel> aaaaaaaaaaaaaaaaaaaah you're talking about this…

[22:04] <dogbert17> and I meant MVM_SPESH_NODELAY=1 :-)

[22:05] <AlexDaniel> c: MVM_SPESH_NODELAY=1 HEAD say %*ENV<MVM_SPESH_NODELAY>

[22:05] <committable6> AlexDaniel, ¦HEAD(beaad7b): «1␤»

[22:05] <AlexDaniel> IIRC bisectable does not support it, but

[22:05] <AlexDaniel> I have a trick up my sleeve for that too.

[22:06] <dogbert17> I think there's a regression hiding here

[22:07] <AlexDaniel> c: HEAD run ‘perl6’, ‘sandbox/roast/S32-str/windows-1251-windows-1252-encode-decode.t’

[22:07] <committable6> AlexDaniel, ¦HEAD(beaad7b): «1..4␤ok 1 - Test encoding from Unicode to windows-1252␤ok 2 - Test decoding from windows-1252 to Unicode␤ok 3 - Test encoding from Unicode to windows-1251␤ok 4 - Test decoding from windows-1251 to Unicode␤»

[22:07] <AlexDaniel> c: HEAD run ENV=>%(MVM_SPESH_DISABLE=>1), ‘perl6’, ‘sandbox/roast/S32-str/windows-1251-windows-1252-encode-decode.t’

[22:07] <committable6> AlexDaniel, ¦HEAD(beaad7b): «Unexpected named argument 'ENV' passed␤  in block <unit> at /tmp/LP9DS4ZRPQ line 1␤␤ «exit code = 1»»

[22:07] <AlexDaniel> c: HEAD run env=>%(MVM_SPESH_DISABLE=>1), ‘perl6’, ‘sandbox/roast/S32-str/windows-1251-windows-1252-encode-decode.t’

[22:07] <committable6> AlexDaniel, ¦HEAD(beaad7b): «The spawned command 'perl6' exited unsuccessfully (exit code: 1)␤  in block <unit> at /tmp/B42EdwQPCV line 1␤␤ «exit code = 1»»

[22:07] <dogbert17> MVM_SPESH_NODELAY=1 !!!

[22:08] <AlexDaniel> c: HEAD run ENV=>%(%*ENV, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘sandbox/roast/S32-str/windows-1251-windows-1252-encode-decode.t’

[22:08] <committable6> AlexDaniel, ¦HEAD(beaad7b): «Unexpected named argument 'ENV' passed␤  in block <unit> at /tmp/TQ8WYP1ulT line 1␤␤ «exit code = 1»»

[22:08] <AlexDaniel> c: HEAD run env=>%(%*ENV, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘sandbox/roast/S32-str/windows-1251-windows-1252-encode-decode.t’

[22:08] <committable6> AlexDaniel, ¦HEAD(beaad7b): «===SORRY!===␤Iteration past end of iterator␤The spawned command 'perl6' exited unsuccessfully (exit code: 1)␤  in block <unit> at /tmp/w5q0vV_29w line 1␤␤ «exit code = 1»»

[22:08] <dogbert17> there is the error

[22:08] <AlexDaniel> c: 6c run env=>%(%*ENV, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘sandbox/roast/S32-str/windows-1251-windows-1252-encode-decode.t’

[22:09] <committable6> AlexDaniel, https://gist.github.com/9072719b4b955519cfae5a82d78c564b

[22:09] <AlexDaniel> dogbert17: now what?

[22:10] <AlexDaniel> dogbert17: we can bisect this change, but “Error encoding Windows-1252 string: could not encode codepoint 8250” does not look like the right result?

[22:11] <dogbert17> try this instead t/spec/MISC/bug-coverage.t

[22:12] <dogbert17> several files failed with the same message

[22:12] <AlexDaniel> btw please ignore this nonsense about writability of precomp files

[22:12] <AlexDaniel> c: 2018.01,HEAD run env=>%(%*ENV, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘sandbox/roast/MISC/bug-coverage.t’

[22:12] <committable6> AlexDaniel, https://gist.github.com/040675d3281fecf3a9467e763bd3a736

[22:13] <dogbert17> argh’

[22:13] <AlexDaniel> it's ok, one sec…

[22:13] <dogbert17> no Test::Util

[22:13] <AlexDaniel> c: 2018.01,HEAD run env=>%(%*ENV, PERL6LIB=>‘sandbox/roast/packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘sandbox/roast/MISC/bug-coverage.t’

[22:13] <committable6> AlexDaniel, https://gist.github.com/75de5004739cd4a679d5260e98dcf560

[22:14] <AlexDaniel> that's ok too

[22:14] <AlexDaniel> c: 2018.01,HEAD chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘MISC/bug-coverage.t’

[22:14] <committable6> AlexDaniel, https://gist.github.com/d4d4e8ce8f06c95dedcef0bb2174e899

[22:14] <AlexDaniel> there

[22:14] <AlexDaniel> c: 6c chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘MISC/bug-coverage.t’

[22:14] <dogbert17> i see the error again

[22:15] <AlexDaniel> “Unhandled kind 1” isn't that much better :)

[22:15] <dogbert17> nope

[22:15] <AlexDaniel> let's bisect anyway, maybe that will give some clue…

[22:15] <AlexDaniel> bisect: old=2018.01 chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘MISC/bug-coverage.t’

[22:16] <bisectable6> AlexDaniel, Bisecting by output (old=2018.01 new=beaad7b) because on both starting points the exit code is 1

[22:16] <committable6> AlexDaniel, https://gist.github.com/1c700696e32be7b7c5cde3cfd15c76dc

[22:16] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/9c8efff87c539933b628858af0147536

[22:16] <bisectable6> AlexDaniel, (2018-01-25) https://github.com/rakudo/rakudo/commit/d1a48efc975a1eeba954a50dad05aad451fd0fb6

[22:17] <AlexDaniel> dogbert17: is there a ticket already?

[22:17] <dogbert17> no, let me write one ...

[22:17] <AlexDaniel> c: d1a48efc97^,d1a48efc97 chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘MISC/bug-coverage.t’

[22:18] <committable6> AlexDaniel, https://gist.github.com/71209dcc1127a1519dd9c5b3083970a1

[22:18] <AlexDaniel> oh, that looks different?

[22:19] <AlexDaniel> c: d1a48efc97^,d1a48efc97 chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘S32-str/windows-1251-windows-1252-encode-decode.t’

[22:19] <committable6> AlexDaniel, https://gist.github.com/ec8a15b2ccc7ebe8b8538e3be44dfaf8

[22:19] <AlexDaniel> bisect: old=2018.01 chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘S32-str/windows-1251-windows-1252-encode-decode.t’

[22:19] <bisectable6> AlexDaniel, Bisecting by output (old=2018.01 new=beaad7b) because on both starting points the exit code is 1

[22:20] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/48deadf085d67157c66284bd34fc2e85

[22:20] <bisectable6> AlexDaniel, (2018-02-01) https://github.com/rakudo/rakudo/commit/4507a5654108fdaff0254f439a7f593ce90a1849

[22:20] <AlexDaniel> c: 4507a5654108^,4507a5654108 chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘S32-str/windows-1251-windows-1252-encode-decode.t’

[22:20] <committable6> AlexDaniel, https://gist.github.com/83ccbcbf6d40bb084b3d2ca2e679adcd

[22:20] <AlexDaniel> c: 4507a5654108^,4507a5654108,HEAD chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘S32-str/windows-1251-windows-1252-encode-decode.t’

[22:20] <committable6> AlexDaniel, https://gist.github.com/8c0b6c4b0d4dbc31ba737fe22631915f

[22:21] <AlexDaniel> dogbert17: are you following? :)

[22:21] <dogbert17> AlexDaniel: https://github.com/MoarVM/MoarVM/issues/804

[22:21] <AlexDaniel> look at the last link

[22:21] <AlexDaniel> bisect: old=4507a5654108 chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘S32-str/windows-1251-windows-1252-encode-decode.t’

[22:21] <bisectable6> AlexDaniel, Bisecting by exit code (old=4507a56 new=beaad7b). Old exit code: 0

[22:21] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/05b65bad784f3c48f4efa621ae0fdaa0

[22:21] <bisectable6> AlexDaniel, (2018-02-16) https://github.com/rakudo/rakudo/commit/beaad7b979f99d07f546efa0d48b701e6372d9ae

[22:22] <AlexDaniel> oh that's bad

[22:22] <AlexDaniel> that's HEAD :D

[22:22] <AlexDaniel> c: beaad7b979f^,beaad7b979f chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘S32-str/windows-1251-windows-1252-encode-decode.t’

[22:22] <committable6> AlexDaniel, https://gist.github.com/ec3e52f2c72cad3243b5fc951768b2b3

[22:22] <dogbert17> uh oh

[22:22] <AlexDaniel> OK! THERE

[22:22] <AlexDaniel> finally

[22:23] <AlexDaniel> lol all that pain just to realize that the very HEAD commit is at fault :D

[22:23] <dogbert17> lol

[22:23] <Geth> ¦ rakudo/post-release: 6ac56cc081 | (Zoffix Znet)++ | 2 files

[22:23] <Geth> ¦ rakudo/post-release: Optimize Str.perl and uniprop(Int, Str)

[22:23] <Geth> ¦ rakudo/post-release:

[22:23] <Geth> ¦ rakudo/post-release: - Make uniprop(Int, Str) 2.7x faster

[22:23] <Geth> ¦ rakudo/post-release:     (measured with uniprop(0x308, "Canonical_Combining_Class")

[22:24] <Geth> ¦ rakudo/post-release: - It's used by Str.perl for chars with ords above 256, so for

[22:24] <Geth> ¦ rakudo/post-release:     such Strs, .perl comes out 20% faster

[22:24] <Geth> ¦ rakudo/post-release:     (measured with unroped `"\c[3000]" x 1000`)

[22:24] <Geth> ¦ rakudo/post-release: review: https://github.com/rakudo/rakudo/commit/6ac56cc081

[22:24] <dogbert17> there are a lot of commits in that merge

[22:25] <dogbert17> could it be the SEGV fix?

[22:25] <AlexDaniel> just one commit actually, I think. Yes: https://github.com/MoarVM/MoarVM/commit/c7774e37d2a08726aa51ab8c6262677f5369f982

[22:26] <AlexDaniel> it could be something else but I doubt it

[22:26] <dogbert17> oh well :-)

[22:29] <AlexDaniel> dogbert17: I filed RT#1534 also

[22:29] <AlexDaniel> omg

[22:29] <dogbert17> cool

[22:29] <AlexDaniel> GH#1534 I mean

[22:29] <synopsebot> GH#1534 [open]: https://github.com/rakudo/rakudo/issues/1534 [⚠ blocker ⚠] “Iteration past end of iterator” issue

[22:29] <dogbert17> a blocker, that's a shocker :-)

[22:31] <AlexDaniel> c: beaad7b979f^,beaad7b979f chdir ‘sandbox/roast’; run env=>%(%*ENV, PERL6LIB=>‘packages’, MVM_SPESH_NODELAY=>1), ‘perl6’, ‘MISC/bug-coverage.t’

[22:31] <committable6> AlexDaniel, https://gist.github.com/9b94475c34efa52cbc27088fb95f3b5f

[22:32] <Zoffix> So what constitutes a "regression"? I would've thought it's anything that used to work and then got broken in some release. But looks like only "behaviour changed" qualifier is used instead, which probably covers 90% of bugs

[22:34] <AlexDaniel> Zoffix: I tend to put “regression” label on “behaviour changed” issues when I simply don't know if the current behavior is broken or not

[22:36] <AlexDaniel> assuming that someone with more information can remove the label if I'm wrong

[22:37] <AlexDaniel> Zoffix: is that wrong?

[22:38] <AlexDaniel> .oO( can we eliminate 90% of bug reports if we stop committing? )

[22:39] <Zoffix> Not wrong. It's just interefering with my idea of me being perfect :)

[22:40] <Zoffix> ZofBot: a Zoffix never regresses!

[22:40] <ZofBot> Zoffix, 1

[22:40] <Zoffix> ZofBot++

[23:00] <AlexDaniel> pfffffffffffffft

[23:00] <Zoffix> :)

[23:01] <AlexDaniel> got a 100% reproducible segfault when trying to golf something different

[23:02] <AlexDaniel> oh… but it could be my fault

[23:02] <AlexDaniel> no, does not look like it

[23:21] <Zoffix> releasable6: status

[23:21] <releasable6> Zoffix, Next release in ≈19 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[23:21] <releasable6> Zoffix, Details: https://gist.github.com/6da93f66bee8d9fb6630e15f8f5d1734

[23:22] <AlexDaniel> eh releasable6, you should learn about https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:23] <AlexDaniel> it's not finished but saying that it was not started at all is a bit rude :)

[23:33] <AlexDaniel> nine: any thoughts? https://github.com/rakudo/rakudo/issues/1535

[23:37] <AlexDaniel> ooooooooooooh

[23:37] <AlexDaniel> I see now…

[23:37] <AlexDaniel> maybe

[23:37] <AlexDaniel> I think implicit return is so much faster that the issue goes away

[23:40] <AlexDaniel> no.

[23:40] <AlexDaniel> nevermind what I just said
