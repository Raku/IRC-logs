[00:19] <MasterDuke> nqp-j: nqp::say(nqp::sec_n(3.4))

[00:55] *** BenGoldberg joined
[01:13] <Geth> ¦ rakudo: 513577c3dc | (Tom Browder)++ (committed using GitHub Web editor) | src/Perl6/Pod.nqp

[01:13] <Geth> ¦ rakudo: add TODO for deprecation warning for version 6.d

[01:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/513577c3dc

[02:01] <samcv> do we want a warning if someone tries to insert into a hash while it's still in an iterator?

[02:04] <AlexDaniel> .tell lizmat how can I get nth element of a Seq without caching it?

[02:04] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[02:05] <samcv> AlexDaniel: any thoughts on this? perl 5 does this

[02:05] *** Zoffix joined
[02:05] <Zoffix> AlexDaniel: there's .skip method

[02:06] <AlexDaniel> samcv: how does that look like in code?

[02:07] <samcv> AlexDaniel: uh well i just implemented it in moarvm on a local branch but. do you mean in moarvm?

[02:07] <AlexDaniel> Zoffix: ah right

[02:07] <AlexDaniel> Zoffix: thanks

[02:07] <samcv> also for now i just added a print to stderr, but idk if there's any way for moarvm to give a warning to perl6 that isn't an exception

[02:07] <AlexDaniel> .tell lizmat nevermind, forgot about .skip

[02:07] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[02:08] <samcv> but it works https://gist.github.com/1dff1d2acb7e32ba7a68f8a0231ac01f pretty nicely

[02:09] <samcv> but it piggy backs off the new insertion randomization code which determines if a key is inserted at the first place in the linked list or the second

[02:10] <samcv> BUCKET -> [a] # before insertion

[02:11] <samcv> well: BUCKET -> [b] -> [a] # then we try and insert [c] and get BUCKET -> [c] -> [b] -> [a] so it's predictable

[02:12] <AlexDaniel> samcv: I was thinking about user code that would trigger the warning, or am I misunderstanding something?

[02:12] <samcv> with the change it'll randomly choose to do what we do now, or insert like BUCKET -> [b] -> [c] -> [a], so they get randomized within a bucket. the goal is to randomize order of iteration

[02:12] <samcv> see the gist

[02:12] <AlexDaniel> ah, looking at the gist now

[02:12] <samcv> m: my @list; sub add-to (@list, $item) { if 2.rand.Int && @list { splice @list, 1, 0, $item } else { unshift @list, $item }}; for ^10 {add-to(@list, $_)}; say @list

[02:12] <camelia> rakudo-moar 513577c3d: OUTPUT: «[7 9 8 5 6 0 4 3 2 1]␤»

[02:12] <AlexDaniel> ohhh now I understand

[02:12] <samcv> yeah

[02:14] <Geth> ¦ nqp/truffle: afa9494b2a | Unknown++ (committed by Daniel Green) | 14 files

[02:14] <Geth> ¦ nqp/truffle: [truffle] Implement a bunch of _n trigonometric ops

[02:14] <Geth> ¦ nqp/truffle: 

[02:14] <Geth> ¦ nqp/truffle: nqp::<asec asin acos atan atan2 cos cosh sin sinh sec sech tan tanh>

[02:14] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/afa9494b2a

[02:14] <Geth> ¦ nqp/truffle: 079c024884 | Unknown++ (committed by Daniel Green) | 2 files

[02:14] <Geth> ¦ nqp/truffle: [truffle] Implement nqp::isnanorinf

[02:14] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/079c024884

[02:14] <Geth> ¦ nqp/truffle: e7f48ecb20 | (Daniel Green)++ | nqp-truffle.nqp

[02:14] <samcv> now it'll *usually* give you all already existing keys, and *some* of the ones you've added

[02:14] <Geth> ¦ nqp/truffle: [truffle] Return AST to coerce VOID to CALL_ARG

[02:14] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/e7f48ecb20

[02:19] *** Zoffix left
[02:22] <MasterDuke> .tell pmurias with my latest commits t/nqp/083-math.t should pass, but right now it dies with `java.lang.RuntimeException: Can't find lexical: &ok` because of the call to ok() inside is_approx()

[02:22] <yoleaux> MasterDuke: I'll pass your message to pmurias.

[02:22] <AlexDaniel> samcv: personally I wouldn't mind a proper exception there

[02:23] *** lizmat left
[02:24] <samcv> when we grab HASH_ITER_FIRST_ITEMit we set ht->bucket_rand_last = ht->bucket_rand;

[02:24] <samcv> every time a key is added it does ht->bucket_rand++, and so when we do HASH_ITER_NEXT_ITEM it compares the two and we can nicely figure out

[02:25] <AlexDaniel> shouldn't we try to do that on rakudo level?

[02:26] <samcv> no i don't think we should. it's a vm operation. and the vm handles the hash impl

[02:27] <samcv> also how would that work if you're adding items from another thread?

[02:27] <samcv> would it still detect it properly? it seems like a pain. i mean it's really the vm that needs to worry about it

[02:28] <AlexDaniel> samcv: maybe file a ticket and we'll all discuss?

[02:29] <AlexDaniel> a warning that comes from VM is perhaps LTA because how do you silence that?

[02:29] <samcv> well that is the question

[02:30] <AlexDaniel> I know that we like warnings that cannot be turned off… looking at you, “potential difficulties” :)

[02:30] <samcv> hah

[02:31] <samcv> but my point is that it's a deficiency with the hash implementation, and there could be others that are designed to insert while iterating

[02:31] <samcv> but that's just my opinion.

[02:31] <samcv> and in the vm it'll basically be free

[02:34] <AlexDaniel> I'd say open a ticket and we'll figure it out :)

[02:35] <samcv> and i'm not sure how we'd do it in perl6. we do nqp::shift_s on an iterator to get the next key

[02:35] <samcv> but i guess we can figure it out. i think it's a good feature

[03:21] <samcv> AlexDaniel: i still think there should be some way for the VM to send a warning to rakudo, though i'm not sure how that'd look

[03:36] *** BenGoldberg left
[04:43] *** Ven` joined
[04:48] *** Ven` left
[04:51] *** skids left
[05:04] <samcv> looks like there's some roast tests that assume every hash will have the same key order. so gonna correct these

[05:37] *** ufobat joined
[06:36] *** robertle joined
[06:39] <[TuxCM]> Rakudo version 2018.06-62-g513577c3d - MoarVM version 2018.06-98-g7547dd800

[06:39] <[TuxCM]> csv-test-xs-20      0.457 -  0.460

[06:39] <[TuxCM]> csv-ip5xs           0.918 -  0.918

[06:39] <[TuxCM]> test-t --race       0.978 -  1.049

[06:39] <[TuxCM]> test-t              2.288 -  2.361

[06:39] <[TuxCM]> csv-ip5xs-20        7.600 -  7.686

[06:39] <[TuxCM]> test                8.884 -  8.887

[06:39] <[TuxCM]> test-t-20 --race   14.321 - 14.744

[06:39] <[TuxCM]> csv-parser         24.414 - 25.812

[06:39] <[TuxCM]> test-t-20          40.423 - 42.571

[07:47] *** pmurias joined
[07:48] <pmurias> MasterDuke: the &ok not being seen inside subs is caused by lack of closures

[07:48] <yoleaux> 02:22Z <MasterDuke> pmurias: with my latest commits t/nqp/083-math.t should pass, but right now it dies with `java.lang.RuntimeException: Can't find lexical: &ok` because of the call to ok() inside is_approx()

[08:02] *** pmurias left
[08:13] *** dogbert17 joined
[08:14] *** robertle left
[08:14] *** robertle joined
[08:14] *** pmurias joined
[08:14] *** [Coke] joined
[08:15] *** [Coke] left
[08:15] *** [Coke] joined
[08:32] *** Ven` joined
[08:35] *** lizmat joined
[09:03] *** pmurias left
[09:03] *** pmurias joined
[09:14] *** lizmat left
[10:23] *** MasterDuke left
[10:51] *** Ven` left
[11:08] *** gfldex left
[11:25] *** brrt joined
[11:51] <tbrowder_> g’day #perl6-dev!

[11:53] <tbrowder_> Zoffix: i’m working on deprecation of defining a pod table caption in the %config hash. i see no reason to not start warning of such deprecation now instead of waiting till 6.d is released. what say you?

[11:54] <tbrowder_> the use will generate an exception in version 6.e.

[12:12] <tbrowder_> .tell Zoffix see my blurb at 0600 ish (CDT, Z-5)

[12:12] <yoleaux> tbrowder_: I'll pass your message to Zoffix.

[12:12] *** brrt left
[12:28] <Geth> ¦ star: 16eb5edd99 | (Steve Mynott)++ | tools/build/Makefile.in

[12:28] <Geth> ¦ star: single quote PATH in order to fix #114

[12:28] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/16eb5edd99

[12:37] *** brrt joined
[12:40] *** Ven` joined
[12:50] *** j3nnn1 joined
[12:51] *** Ven` left
[12:53] *** Ven` joined
[13:45] *** brrt left
[13:51] *** scovit joined
[14:07] *** Zoffix joined
[14:09] *** brrt joined
[14:09] <Zoffix> .tell tbrowder_ I was wanting to barn on it now implies no one uses it. Is there any reason for the rush?

[14:09] <yoleaux> Zoffix: I'll pass your message to tbrowder_.

[14:12] <brrt> \o

[14:12] <yoleaux> 14:08Z <Zoffix> brrt: yeah, that's fine. I figured out Good Enough instructions for WSL for now and no longer need the execstack option

[14:12] <brrt> Zoffix++

[14:30] *** Zoffix left
[14:32] *** skids joined
[14:40] <Geth> ¦ rakudo/rescalar: b5a5d5bc76 | (Jonathan Worthington)++ | 2 files

[14:40] <Geth> ¦ rakudo/rescalar: Add a spesh plugin for return value decont

[14:40] <Geth> ¦ rakudo/rescalar: 

[14:40] <Geth> ¦ rakudo/rescalar: Which both reduces the generated bytecode size for this operation, as

[14:40] <Geth> ¦ rakudo/rescalar: well as allowing us to provide optimized variants for a number of the

[14:40] <Geth> ¦ rakudo/rescalar: different cases that show up.

[14:40] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/b5a5d5bc76

[15:12] *** gfldex joined
[15:22] <tbrowder_> Zoffix: i think (i’ll check again) that Pod::To::* and docs htmlify may use the old-style.

[15:22] <yoleaux> 14:09Z <Zoffix> tbrowder_: I was wanting to barn on it now implies no one uses it. Is there any reason for the rush?

[15:33] <Geth> ¦ rakudo/rescalar: adb00ba7d3 | (Jonathan Worthington)++ | src/vm/moar/spesh-plugins.nqp

[15:33] <Geth> ¦ rakudo/rescalar: Only look up Iterable once

[15:33] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/adb00ba7d3

[15:37] <tbrowder_> yes, Pod::To::Text expects the old-style caption only. i haven’t looked at any actual pod tables other than my own.

[15:47] *** pmurias left
[16:18] *** robertle left
[16:44] *** MasterDuke joined
[16:44] <MasterDuke> .

[16:45] <MasterDuke> .tell pmurias i suspected so. at this point i don't know enough to contribute toward implementing closures, so good luck!

[16:45] <yoleaux> MasterDuke: I'll pass your message to pmurias.

[16:46] *** lizmat joined
[17:10] <lizmat> .

[17:10] <yoleaux> 09:17Z <sarna> lizmat: oh, it's even your post. I meant a link to IRC logs, here: http://colabti.org/irclogger/irclogger_log/perl6-dev?date=2017-07-10#l134

[17:10] <yoleaux> 09:19Z <sarna> lizmat: and why didn't I privmsg them - I didn't want to bother them if they were done with contributing. I shouldn't really bring this up in the first place, my bad

[17:20] <lizmat> .tell sarna that's all water under the bridge

[17:20] <yoleaux> lizmat: I'll pass your message to sarna.

[17:21] *** brrt left
[17:39] <tbrowder_>  Zoffix: i’ll finish my PR and ask for review. PR will fix Pod::To::Text, too.

[18:31] *** brrt joined
[18:31] *** brrt left
[18:51] *** Ven` left
[18:58] *** kanopis joined
[19:16] *** kanopis left
[19:29] *** lizmat left
[19:39] *** lizmat joined
[19:46] *** lizmat left
[20:54] *** AlexDaniel joined
[21:10] *** skids left
[21:11] *** DrForr joined
[21:16] *** Kaiepi joined
[21:16] <AlexDaniel> squashable6: next

[21:16] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 2 days and ≈12 hours (2018-07-07 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[21:31] <Geth> ¦ rakudo/ugexe-patch-1: 57f8c61b40 | (Nick Logan)++ (committed using GitHub Web editor) | src/Perl6/Grammar.nqp

[21:31] <Geth> ¦ rakudo/ugexe-patch-1: Fix potential race condition in EVAL

[21:31] <Geth> ¦ rakudo/ugexe-patch-1: review: https://github.com/rakudo/rakudo/commit/57f8c61b40

[21:31] <Geth> ¦ rakudo: ugexe++ created pull request #2015: Fix potential race condition in EVAL

[21:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2015

[22:01] <Geth> ¦ rakudo/ugexe-patch-1: 0bbd7bc69a | (Nick Logan)++ (committed using GitHub Web editor) | src/Perl6/Grammar.nqp

[22:01] <Geth> ¦ rakudo/ugexe-patch-1: Use NQPLock

[22:01] <Geth> ¦ rakudo/ugexe-patch-1: review: https://github.com/rakudo/rakudo/commit/0bbd7bc69a

[22:45] *** cog joined
[22:46] <Geth> ¦ rakudo: 80bbfbb36a | (Nick Logan)++ (committed using GitHub Web editor) | src/Perl6/Grammar.nqp

[22:46] <Geth> ¦ rakudo: Fix potential race condition in EVAL (#2015)

[22:46] <Geth> ¦ rakudo: 

[22:46] <Geth> ¦ rakudo: Fix potential race condition in EVAL

[22:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/80bbfbb36a

[23:11] *** cog left
[23:12] *** cog joined
[23:19] <Geth> ¦ nqp: cec76ff79e | (Daniel Green)++ | tools/build/MOAR_REVISION

[23:19] <Geth> ¦ nqp: Bump MoarVM

[23:19] <Geth> ¦ nqp: 

[23:19] <Geth> ¦ nqp: af455397f Refactor inline logging; detect missed inlines

[23:19] <Geth> ¦ nqp: 7ac061092 Correct a mis-placed `break` statement

[23:19] <Geth> ¦ nqp: 9745f9216 Add facts to attributes in spesh plugin guards

[23:19] <Geth> ¦ nqp: bd8361e2f [JIT] Fix ARG6 for windows better

[23:19] <Geth> ¦ nqp: 2592774c5 Make minor alterations to some exprjit templates

[23:19] <Geth> ¦ nqp: <…commit message has 64 more lines…>

[23:19] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/cec76ff79e

[23:19] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.06-34-g411f73f...2018.06-103-gaf455397f

[23:19] *** Kaiepi left
[23:21] *** Kaiepi joined
[23:21] <Geth> ¦ rakudo: b659a9c2f8 | (Daniel Green)++ | tools/build/NQP_REVISION

[23:21] <Geth> ¦ rakudo: Bump NQP

[23:21] <Geth> ¦ rakudo: 

[23:21] <Geth> ¦ rakudo: cec76ff79 Bump MoarVM

[23:21] <Geth> ¦ rakudo: dbee32dc1 Just typo fixes in comments

[23:21] <Geth> ¦ rakudo: 2d5d8868c Merge pull request #478 from perl6/W4anD0eR96-patch-2

[23:21] <Geth> ¦ rakudo: 28908b2d5 Update 114-pod-panic.t

[23:22] <Geth> ¦ rakudo: 0d797a89f Merge pull request #480 from perl6/W4anD0eR96-patch-1

[23:22] <Geth> ¦ rakudo: <…commit message has 7 more lines…>

[23:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b659a9c2f8

[23:22] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.06-15-g93fdb10...2018.06-27-gcec76ff79

[23:58] <japhb> Wheeee, lots of commits in those bumps

