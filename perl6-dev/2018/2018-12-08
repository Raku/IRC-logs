[00:13] *** lizmat_ joined
[00:13] *** p6bannerbot sets mode: +v lizmat_

[00:14] *** TimToady joined
[00:15] *** p6bannerbot sets mode: +v TimToady

[00:18] *** lizmat left
[01:05] *** Kaypie left
[01:05] *** Kaypie joined
[01:06] *** p6bannerbot sets mode: +v Kaypie

[01:13] *** Kaypie left
[01:13] *** Kaypie joined
[01:14] *** p6bannerbot sets mode: +v Kaypie

[01:21] *** lucasb left
[01:57] *** Kaypie is now known as Kaiepi

[02:08] <AlexDaniel> samcv: ↑

[02:46] <Geth> ¦ rakudo: FCO++ created pull request #2526: Make Attribute.get_value rw. Fixes #2521

[02:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2526

[03:28] *** ufobat_ joined
[03:28] *** p6bannerbot sets mode: +v ufobat_

[03:31] *** ufobat left
[05:25] *** AlexDaniel left
[08:43] *** lizmat_ left
[08:48] *** lizmat joined
[08:48] *** p6bannerbot sets mode: +v lizmat

[10:55] *** lucasb joined
[10:55] *** p6bannerbot sets mode: +v lucasb

[11:53] <Geth> ¦ rakudo: mornfall++ created pull request #2527: Fix use of uninitialized value in IO::Notification

[11:53] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2527

[12:51] *** literal joined
[12:52] *** p6bannerbot sets mode: +v literal

[13:26] *** Kaiepi left
[13:27] *** Kaiepi joined
[13:28] *** p6bannerbot sets mode: +v Kaiepi

[13:48] <[Tux]> Rakudo version 2018.11-13-gdd0301454 - MoarVM version 2018.11-12-gd7a4c4c56

[13:48] <[Tux]> csv-test-xs-20      0.424 -  0.436

[13:49] <[Tux]> test-t --race       0.782 -  0.804

[13:49] <[Tux]> csv-ip5xs           0.927 -  0.936

[13:49] <[Tux]> test-t              1.737 -  1.749

[13:49] <[Tux]> test                7.176 -  7.806

[13:49] <[Tux]> csv-ip5xs-20        6.988 -  7.360

[13:49] <[Tux]> test-t-20 --race    9.591 - 10.016

[13:49] <[Tux]> csv-parser         22.822 - 22.855

[13:49] <[Tux]> test-t-20          31.184 - 32.147

[13:51] <Geth> ¦ roast: 33afc20817 | (Jan-Olof Hendig)++ | S32-str/encode.t

[13:51] <Geth> ¦ roast: Add tests for R#2421

[13:51] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/33afc20817

[13:51] <Geth> ¦ roast: ca8952031f | dogbert17++ (committed using GitHub Web editor) | S32-str/encode.t

[13:51] <Geth> ¦ roast: Merge pull request #501 from dogbert17/test-R2421

[13:51] <Geth> ¦ roast: 

[13:51] <Geth> ¦ roast: Add tests for R#2421

[13:51] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ca8952031f

[14:00] <Geth> ¦ nqp/master: 6 commits pushed by (Paweł Murias)++

[14:00] <Geth> ¦ nqp/master: 527aab28e0 | [js] Exit with right exit code in parceled-under-node.js mode

[14:00] <Geth> ¦ nqp/master: 2c9eb7c9b3 | [js] Also release source maps when publishing nqp-js-on-js

[14:00] <Geth> ¦ nqp/master: 725067cb54 | [js] Pass nqp to loaded generated code

[14:00] <Geth> ¦ nqp/master: 839a7dbf02 | [js] Bump versions to 0.28.0

[14:00] <Geth> ¦ nqp/master: 35c5d42a49 | [js] Delete commented out code

[14:00] <Geth> ¦ nqp/master: bf95dd057e | [js] Add missing /*async*/ and /*await*/

[14:00] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/ff5c851151f9...bf95dd057ea8

[14:30] *** lizmat left
[14:42] *** Kaiepi left
[14:43] *** Kaiepi joined
[14:44] *** p6bannerbot sets mode: +v Kaiepi

[14:48] *** Kaiepi left
[14:48] *** Kaiepi joined
[14:49] *** p6bannerbot sets mode: +v Kaiepi

[15:11] <Geth> ¦ roast: dogbert17++ created pull request #502: Add test for R#2176

[15:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/502

[15:22] *** lizmat joined
[15:22] *** p6bannerbot sets mode: +v lizmat

[15:36] *** Kaiepi left
[15:37] *** Kaiepi joined
[15:38] *** p6bannerbot sets mode: +v Kaiepi

[16:03] <lucasb> sub func(Foo $arg) {...}   # <-- func *cares* that $arg is of Foo type, right?

[16:03] <lucasb> that's the point of type checking, catching type error :)

[16:04] <lucasb> but coercion types 'sub f(Foo(Bar) $arg) {...}', they don't care what $arg.Foo returns, they blindly assumes it's of Foo type

[16:05] <lucasb> in addition to coercing the argument, wouldn't it be nice if it also *checks* if the argument is of the right type?

[16:06] <lucasb> afterall the simpler signature 'func(Foo $arg)' already does that, then why can't 'func(Foo(Bar) $arg)' also check?

[16:11] <lucasb> m: class Foo {}; class Bar { method Foo { 'alright' } }; sub func(Foo(Bar) $x) { dd $x }; func(Bar)

[16:11] <camelia> rakudo-moar dd0301454: OUTPUT: «"alright"␤»

[16:21] <gfldex> lucasb: you might invoke a conundrum with that. The Foo a module knows that provides a class with .Foo might not be the same Foo as the caller expects.

[16:22] <gfldex> lucasb: Fundamentally Perl 6 is a dynamic language.

[16:49] <lucasb> I may not have understood you, gfldex. Are you saying that bescause P6 is dynamic it shouldn't have type checking in subroutine/method parameters?

[16:50] <lucasb> to me, a signature :(Foo $arg) and :(Foo(Bar) $arg) should have the same type checking with regard it's argument, shouldn't it?

[16:52] <lucasb> do you see them as different (except for the fact that the coercion does a convenient implicit method call) ?

[17:04] *** Ven`` joined
[17:05] *** p6bannerbot sets mode: +v Ven``

[17:24] *** Ven`` left
[17:34] *** cognominal joined
[17:35] *** p6bannerbot sets mode: +v cognominal

[17:38] *** cognomin_ left
[17:51] *** Kaiepi left
[17:52] <Geth> ¦ roast: 683abe27c3 | (Jan-Olof Hendig)++ | S05-capture/match-object.t

[17:52] <Geth> ¦ roast: Add test for R#2176

[17:52] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/683abe27c3

[17:52] <Geth> ¦ roast: bbb233b73c | dogbert17++ (committed using GitHub Web editor) | S05-capture/match-object.t

[17:52] <Geth> ¦ roast: Merge pull request #502 from dogbert17/test-r2176

[17:52] <Geth> ¦ roast: 

[17:52] <Geth> ¦ roast: Add test for R#2176

[17:52] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/bbb233b73c

[17:53] *** Ven`` joined
[17:53] *** p6bannerbot sets mode: +v Ven``

[17:58] *** leont joined
[17:59] *** Ven`` left
[17:59] *** p6bannerbot sets mode: +v leont

[18:04] <gfldex> lucasb: I don't think it should be needed. A coersion method that returns the wrong type is just a bug. If at all it should be triggered by a pragma.

[18:13] *** Kaiepi joined
[18:14] *** p6bannerbot sets mode: +v Kaiepi

[18:44] <lucasb> The definition of coersion method is one that shares the same name as another class or role? I don't think this convention should be imposed. Just because I decide to name a method "FooBar" doesn't mean it should return a FooBar object otherwise it's a bug.

[18:45] <lucasb> IMO, the responsibility for type-checking is on the sub/method signature

[20:19] <Geth> ¦ roast: dogbert17++ created pull request #503: Add tests for R#2361

[20:19] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/503

[20:31] <Geth> ¦ roast: 64f38c8a48 | (Jan-Olof Hendig)++ | S32-exceptions/misc2.t

[20:31] <Geth> ¦ roast: Add tests for R#2361

[20:31] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/64f38c8a48

[20:31] <Geth> ¦ roast: 8d2728989b | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | S32-exceptions/misc2.t

[20:31] <Geth> ¦ roast: Merge pull request #503 from dogbert17/test-r2361

[20:31] <Geth> ¦ roast: 

[20:31] <Geth> ¦ roast: Add tests for R#2361

[20:31] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8d2728989b

[20:39] <Geth> ¦ rakudo: a5411e4518 | (Elizabeth Mattijsen)++ | src/core/Attribute.pm6

[20:39] <Geth> ¦ rakudo: Give full access with Attribute.get/set_value

[20:39] <Geth> ¦ rakudo: 

[20:39] <Geth> ¦ rakudo: The idea being that these methods are sufficiently low-level that they should

[20:39] <Geth> ¦ rakudo: give direct raw access to the attribute.  Also slightly optimized it for the

[20:39] <Geth> ¦ rakudo: most common case of an object with an Opaque representation.  Fixes R#2521

[20:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a5411e4518

[20:43] <Geth> ¦ rakudo: 83d0056b5f | (Petr Rockai)++ | src/core/IO/Notification.pm6

[20:43] <Geth> ¦ rakudo: Fix use of uninitialized value in IO::Notification

[20:43] <Geth> ¦ rakudo: 

[20:43] <Geth> ¦ rakudo: When libuv returns a NULL path (which it does for directory

[20:43] <Geth> ¦ rakudo: notifications on kqueue/kevent systems, at minimum), the path returned

[20:43] <Geth> ¦ rakudo: from nqp::watchfile turns into an undef Str. Hence do not try to concat

[20:43] <Geth> ¦ rakudo: this undef with the directory path.

[20:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/83d0056b5f

[20:43] <Geth> ¦ rakudo: 9fe7d64316 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core/IO/Notification.pm6

[20:43] <Geth> ¦ rakudo: Merge pull request #2527 from mornfall/fix-io-notification

[20:43] <Geth> ¦ rakudo: 

[20:43] <Geth> ¦ rakudo: Fix use of uninitialized value in IO::Notification

[20:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9fe7d64316

[20:45] <Geth> ¦ rakudo: 869b9e5813 | Skarsnik++ (committed using GitHub Web editor) | src/core/Exception.pm6

[20:45] <Geth> ¦ rakudo: Add the definition of arguments in Multi::NoMatch exception

[20:45] <Geth> ¦ rakudo: 

[20:45] <Geth> ¦ rakudo: Add a U or D if the parameter is defined or not. This make easier to notice a mismatch because of that, eg you pass an undef value when a defined value is expected.

[20:45] <Geth> ¦ rakudo: fix #2494

[20:45] <Geth> ¦ rakudo: 

[20:45] <Geth> ¦ rakudo: EG :

[20:45] <Geth> ¦ rakudo: `perl6 -e 'my buf8 $foo; $foo.append("foo".encode("latin1"));'`

[20:45] <Geth> ¦ rakudo: <…commit message has 18 more lines…>

[20:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/869b9e5813

[20:45] <Geth> ¦ rakudo: abfb9a4050 | Skarsnik++ (committed using GitHub Web editor) | src/core/Exception.pm6

[20:45] <Geth> ¦ rakudo: Remove the def/undef part for array?

[20:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/abfb9a4050

[20:45] <Geth> ¦ rakudo: 1d597fa510 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core/Exception.pm6

[20:45] <Geth> ¦ rakudo: Merge pull request #2495 from Skarsnik/patch-1

[20:45] <Geth> ¦ rakudo: 

[20:45] <Geth> ¦ rakudo: Add the definition of arguments in Multi::NoMatch exception

[20:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1d597fa510

[20:47] *** dogbert11 joined
[20:48] *** p6bannerbot sets mode: +v dogbert11

[20:50] *** dogbert17 left
[21:04] *** ufobat_ left
[21:06] *** ufobat_ joined
[21:07] *** p6bannerbot sets mode: +v ufobat_

[21:28] *** SqrtNegInf left
[21:29] *** cognomin_ joined
[21:30] *** p6bannerbot sets mode: +v cognomin_

[21:32] *** cognominal left
[21:32] <dogbert11> there's a test (#24 - fails multi sigs reports call profile) failing in t/spec/S06-signature/errors.t

[21:49] <dogbert11> m: say Match.^roles

[21:49] <camelia> rakudo-moar 1d597fa51: OUTPUT: «No such method 'gist' for invocant of type 'NQPMatchRole'. Did you mean 'ast'?␤  in block <unit> at <tmp> line 1␤␤»

[22:21] <Geth> ¦ rakudo: mornfall++ created pull request #2529: Cancel the watchfile task when its supply closes

[22:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2529

[22:27] *** cognominal joined
[22:28] *** p6bannerbot sets mode: +v cognominal

[22:30] *** cognomin_ left
[22:40] <Geth> ¦ rakudo: mornfall++ created pull request #2530: Ignore shared library versions on OpenBSD.

[22:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2530

[22:44] *** Ven`` joined
[22:45] *** p6bannerbot sets mode: +v Ven``

[22:50] *** ufobat_ left
[23:22] <SmokeMachine> I totally agree with lucasb

[23:32] *** Ven`` left
