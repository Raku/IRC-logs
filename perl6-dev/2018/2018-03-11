[00:15] <MasterDuke> jnthn, timotimo, lizmat: any thoughts on https://github.com/rakudo/rakudo/pull/1317 ?

[00:25] <jnthn> MasterDuke: I suspect more effective would be a set of candidates like (Slip:D), (Any) for one-item, and (Slip:D, Slip:D), (Slip:D, Any), (Any, Slip:D) and (Any, Any) for the two argument case

[00:25] <jnthn> Those would deal with a lot more cases

[00:26] <jnthn> And specialize decently into the Int/Int and Str/Str ones

[00:28] <jnthn> m: say Slip ~~ Cool

[00:29] <camelia> rakudo-moar 2a3947816: OUTPUT: «True␤»

[00:29] <jnthn> lizmat: ^^

[00:29] <jnthn> (wrt the comment you just put on the ticket)

[00:29] <lizmat> hehe...  there's no escaping, I'm being watched  :-)

[00:29] <lizmat> would have been nice if the commit message had mentioned the reason  :-)

[00:30] * lizmat is back from travelling for 3 days and goes to get some rest in a good bed for a change

[00:30] <timotimo> have a good one!

[00:31] <jnthn> Rest well

[00:31] <lizmat> thanks all!

[00:31] <jnthn> As I noted above, though, adding candidates for handling Slip would help

[00:37] <timotimo> mostly for handling anything but slips?

[00:40] <jnthn> timotimo: If there's a candidate for Slip, it's tighter than the one for Any, so it means the Any ones know there's no Slip

[00:41] <timotimo> yeah

[00:45] <jnthn> 'night o/

[02:05] <AlexDaniel> releasable6: next

[02:05] <releasable6> AlexDaniel, Next release in 6 days and ≈16 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[02:05] <releasable6> AlexDaniel, Details: https://gist.github.com/0bb2234029a2a03e691aa53a5a9e1f14

[02:55] <jstuder> timotimo: I updated the statevar init PR (https://github.com/rakudo/rakudo/pull/1542) with the spectest info we spoke about earlier. It appears that the test did not actually fail but I read the results wrong.

[07:13] <samcv> nice! i got open() working with a replacement character when an unencodable character is encountered for windows-1252/1

[08:50] <pmurias> geekosaur: It's still does a dynamic lookup, just that we have extra fallback to a global semantics when it fails

[10:35] <nine> m: multi foo() { say "none" }; multi foo(|args) { say "many" }; multi foo(*@args, *%args) { say "named" }; foo(a => 1)

[10:35] <camelia> rakudo-moar 2a3947816: OUTPUT: «Unexpected named argument 'a' passed␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[10:36] <nine> jnthn: what's going on here ^^^?

[11:33] <MasterDuke> .tell pmurias i added that @*comp_line_directives stuff when i was adding support for `#line 2 SETTING::src/core/core_prologue.pm6` (so error message gave the real file instead of gen/moar/CORE.setting). but i barely knew what i was doing, so feel free to do something better

[11:33] <yoleaux> MasterDuke: I'll pass your message to pmurias.

[12:16] <AlexDaniel> Zoffix: fwiw just as a thought, maybe eventually we should start recommending to install rakudo from the official distro repos. Ubuntu Artful (17.10) and Bionic (upcoming in a month) have 2017.06, but their LTS version has 2015.11 (oh no!), Debian stable has 2016.12 which is not bad at all, Debian testing has 2017.06. Fedora should have at least 2017.06 starting from f26. But all versions of Linux Mint have 2015.11 I think…

[12:16] <AlexDaniel> so I guess eventually = not now, but perhaps we should keep in mind that this will be possible soon

[12:17] <AlexDaniel> or, I don't know, am I the only one who likes when the download page says “just do `apt install thiscoolthing`”?

[12:18] <AlexDaniel> and, um… I guess there's no good way to detect a distro using JS

[12:25] <nine> AlexDaniel: openSUSE Tumbleweed currently ships 2018.01 and so does the upcoming openSUSE Leap 15.0

[12:32] <Geth> ¦ nqp: a6b9e845f4 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/io/FileHandle.java

[12:32] <Geth> ¦ nqp: [JVM] Support opening files with :read and :append

[12:32] <Geth> ¦ nqp:

[12:32] <Geth> ¦ nqp: Makes some more test in S32-io/open.t pass. Compare also RT #131145.

[12:32] <Geth> ¦ nqp:

[12:32] <Geth> ¦ nqp: Thanks to cygx++ for giving a pointer on how this could be done.

[12:32] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a6b9e845f4

[12:32] <synopsebot> RT#131145 [open]: https://rt.perl.org/Ticket/Display.html?id=131145 [JVM] Modes for IO::Handle.open need clarification

[13:00] <Geth> ¦ features: JJ++ created pull request #7: Eliminates niecza refs closes #6 when accepted

[13:00] <Geth> ¦ features: review: https://github.com/perl6/features/pull/7

[13:18] <MasterDuke> jnthn and anyone else: i would have thought this patch would work, but there are a lot of test failures. https://gist.github.com/MasterDuke17/86c7c0e294a33e026a2d7d29cec3d9e8

[14:31] <timotimo> MasterDuke: you're not slipping the slips at all there

[14:31] <timotimo> m: say (|(1, 2, 3), |(9, 9, 9)).perl

[14:31] <camelia> rakudo-moar 2a3947816: OUTPUT: «(1, 2, 3, 9, 9, 9)␤»

[14:31] <timotimo> oh, d'oh

[14:31] <timotimo> you are binding a reifier there

[14:32] <timotimo> i see a problem with the second candidate, though

[14:33] <timotimo> you're binding b to the second slot, but what if the slip in a has more than one element?

[14:34] <timotimo> MasterDuke: could that be the problem?

[14:36] <MasterDuke> i didn't correctly follow what was happening (in the original code) when there was a Slip, so yeah, i definitely need to change something

[14:36] <MasterDuke> but i don't think the number of elements in the slip matter, right?

[14:37] <MasterDuke> m: use nqp; sub a(Any \b, Slip:D \c) { say nqp::elems(nqp::p6argvmarray()) }; my @d = <a b c>; a(4, @d.Slip)

[14:37] <camelia> rakudo-moar 2a3947816: OUTPUT: «2␤»

[14:37] <MasterDuke> m: use nqp; sub a(Any \b, Slip:D \c) { say nqp::elems(nqp::p6argvmarray()) }; my @d = <a b c>; a(4, |@d)

[14:37] <camelia> rakudo-moar 2a3947816: OUTPUT: «Too many positionals passed; expected 2 arguments but got 4␤  in sub a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:39] <timotimo> well, you're binding into slot 2 of the reification target

[14:39] <timotimo> when the slip gets slipped, its contents will spill into the reification target, too

[14:42] <MasterDuke> hm, i guess the `Slip:D \a, Any \b` candidate shouldn't actually bind b at all

[14:43] <timotimo> i agree

[15:37] <Geth> ¦ nqp/master: 7 commits pushed by pmurias++

[15:37] <Geth> ¦ nqp/master: 8fe1415429 | [js] When faking missing lexical scopes handle contvars correctly

[15:37] <Geth> ¦ nqp/master: 642e96dcf9 | [js] Handle native return values from type_check correctly

[15:37] <Geth> ¦ nqp/master: 277876571d | [js] When compiling other languages the nqp just pass the ctx as nqp::curlexpad

[15:37] <Geth> ¦ nqp/master: 040b9d450b | [js] Remove some old source map stuff that's causing problems but doesn't seem to have a direct sue

[15:37] <Geth> ¦ nqp/master: e0f6dc4616 | [js] Change backtrace message format

[15:37] <Geth> ¦ nqp/master: 0b24131045 | [js] Remove dead code

[15:38] <Geth> ¦ nqp/master: ee53bfc18e | [js] Support source maps when writing code to file

[15:38] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/a6b9e845f429...ee53bfc18ed8

[17:34] <AlexDaniel> hmm, how can I make synopsebot bot #whateverable?

[17:34] <AlexDaniel> join*

[17:35] <MasterDuke> synopsebot: help

[17:35] <synopsebot> MasterDuke, See: https://github.com/perl6/synopsebot

[17:36] <MasterDuke> just add #whateverable here? https://github.com/perl6/synopsebot/blob/master/synopsebot.p6#L15

[17:37] <Geth> ¦ synopsebot: d02bfb7932 | (Aleks-Daniel Jakimenko-Aleksejev)++ | synopsebot.p6

[17:37] <Geth> ¦ synopsebot: Add #whateverable to the list

[17:37] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/d02bfb7932

[17:38] <timotimo> i'm not sure synopsebot has any "check out the source regularly" mechanisms in place; didn't when i last touched it, which may have been sufficiently long ago for this message to not matter at all

[17:39] <AlexDaniel> `ssh hack.p6c.org` – hmm, can I have access to that?

[17:48] <Geth> ¦ features: 5ad23566e3 | (JJ Merelo)++ | 3 files

[17:48] <Geth> ¦ features: Eliminates niecza refs closes #6 when accepted

[17:48] <Geth> ¦ features: review: https://github.com/perl6/features/commit/5ad23566e3

[17:48] <Geth> ¦ features: ee7fbb17da | (Moritz Lenz)++ (committed using GitHub Web editor) | 3 files

[17:48] <Geth> ¦ features: Merge pull request #7 from JJ/master

[17:48] <Geth> ¦ features:

[17:48] <Geth> ¦ features: Eliminates niecza refs closes #6

[17:48] <Geth> ¦ features: review: https://github.com/perl6/features/commit/ee7fbb17da

[17:50] <Geth> ¦ roast: ronaldxs++ created pull request #399: Fix attribute mutator tests and add comment discouraging use

[17:50] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/399

[18:25] <mr_ron> From what I can figure out a fix for the attribute mutator roast test could have been done a long time ago with subs but there was a hangup over using methods.  Why is it not OK to solve with subs until we understand exactly how methods fit this case?

[19:09] <AlexDaniel> timotimo: maybe you can just follow the steps here for me? https://github.com/perl6/synopsebot#pulling-changes-and-restarting-the-bot

[19:09] <AlexDaniel> or anybody else who has enough privs

[19:10] <Zoffix> Yeah, I can

[19:10] <AlexDaniel> thanks!

[19:11] <Zoffix> AlexDaniel: actually, I'll create an account and you can do it yourself. What username/key?

[19:12] <AlexDaniel> Zoffix: these two keys: https://github.com/AlexDaniel.keys

[19:12] <AlexDaniel> Zoffix: username “alex” if available

[19:12] <AlexDaniel> alexdaniel otherwise

[19:14] <Zoffix> AlexDaniel: I added you to sudoers and msg'ed you the pass. I didn't setup the key. I think you'd be able to set it up on your own.

[19:15] <Zoffix> Are you able to log in and pull-restart synopsebot?

[19:16] <Zoffix> AlexDaniel: note that perms on your home dir are drwxr-xr-x. That's the default adduser makes but I changed mine to be 0 for the world

[19:17] <AlexDaniel> Zoffix: OK, that works! Thank you very much!

[19:18] <Zoffix> ok

[19:28] <Geth> ¦ geth: be7c31d75e | (Zoffix Znet)++ (committed using GitHub Web editor) | README.md

[19:28] <Geth> ¦ geth: Add info on webhook/code locations

[19:28] <Geth> ¦ geth: review: https://github.com/perl6/geth/commit/be7c31d75e

[20:02] <MasterDuke> m: use nqp; sub a(\b) { say nqp::elems(b) }; sub c(|) { a(nqp::list(nqp::p6argvmarray())) }; c(1,2)

[20:02] <camelia> rakudo-moar 2a3947816: OUTPUT: «This type (List) does not support elems␤  in sub a at <tmp> line 1␤  in sub c at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[20:03] <MasterDuke> i am thinking very slowly today. how do it make ^^^ work? changing \b to $b or @b doesn't help

[20:09] <Geth> ¦ nqp: 46fbb5e9d8 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/Ops.java

[20:09] <Geth> ¦ nqp: [JVM] Let seekfh return null, not file handle

[20:09] <Geth> ¦ nqp:

[20:09] <Geth> ¦ nqp: This avoids errors in S32-io/seek.t caused by missing method 'sink' for

[20:09] <Geth> ¦ nqp: BOOTIO when nqp::seekfh is the last command in a block. This mirrors

[20:09] <Geth> ¦ nqp: the behaviour of MoarVM.

[20:09] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/46fbb5e9d8

[20:13] <Zoffix> MasterDuke: looks like it gets hllized when it goes from one sub to another.

[20:13] <Zoffix> m: use nqp; sub a(\b) { say nqp::elems(nqp::getattr(b, List, '$!reified')) }; sub c(|) { a nqp::p6argvmarray }; c 1,2

[20:13] <camelia> rakudo-moar 2a3947816: OUTPUT: «2␤»

[20:13] <Zoffix> Don't know how solid that is, to poke into List guts that way (and assuming it's reified)

[20:13] <timotimo> you can get around hllization with some trickery; not sure what exactly, perhaps involving findmethod

[20:14] <Zoffix> m: use nqp; sub a(\b) { say nqp::elems(b) }; sub c(|) { nqp::callstatic(&a, nqp::p6argvmarray) }; c 1,2

[20:14] <camelia> rakudo-moar 2a3947816: OUTPUT: «This type (List) does not support elems␤  in sub a at <tmp> line 1␤  in sub c at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[20:19] <timotimo> oh, right, not a method

[20:19] <timotimo> i wonder if what i'm thinking of is even still relevant or if it's already years old

[20:28] <MasterDuke> Zoffix++, timotimo++

[20:28] <timotimo> what if you type the argument Mu?

[20:28] <MasterDuke> same

[20:50] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1608: Make 2 elem infix:<,> special cases more generic

[20:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1608

[22:05] <AlexDaniel> releasable6: status

[22:05] <releasable6> AlexDaniel, Next release in 5 days and ≈20 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[22:05] <releasable6> AlexDaniel, Details: https://gist.github.com/613eeadedea306d0774e730b03b7dacd

[22:35] <Kaiepi> where would be the appropriate place to put tests for Perl6::Metamodel::Naming?

[22:35] <yoleaux> 10 Mar 2018 06:42Z <Zoffix> Kaiepi: not 100% sure, but this seems to do the trick, without regexes: https://gist.github.com/zoffixznet/da3b0ceef133b9ff505803f8483b2f05

[22:39] <Kaiepi> would writing some for rakudo's test suite be needed, or just ones for roast?

[23:01] <Zoffix> Kaiepi: just for roast. Tests in rakudo's suite are just for stuff we don't want to be part of the language spec.

[23:01] <Zoffix> Maybe in S14-roles/mixin.t, unless you already found a good place. Seems there's already a test for a similar thing: S14-roles/mixin.t:229:        "mixing in a role from a deeper namespace doesn't clobber the targets shortname";
