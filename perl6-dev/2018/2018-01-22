[00:19] <Geth> ¦ roast/post-release: 0527e51619 | (Zoffix Znet)++ | S12-attributes/defaults.t

[00:19] <Geth> ¦ roast/post-release: Remove trailing whitespace

[00:19] <Geth> ¦ roast/post-release: review: https://github.com/perl6/roast/commit/0527e51619

[00:38] <jnthn> 'night o/

[01:36] <Geth> ¦ nqp/post-release: a8ca35aff9 | (Zoffix Znet)++ | docs/ops.markdown

[01:36] <Geth> ¦ nqp/post-release: Document getlexref_*

[01:36] <Geth> ¦ nqp/post-release:

[01:36] <Geth> ¦ nqp/post-release: Per explanation at

[01:36] <Geth> ¦ nqp/post-release: https://irclog.perlgeek.de/moarvm/2018-01-21#i_15717659

[01:36] <Geth> ¦ nqp/post-release: review: https://github.com/perl6/nqp/commit/a8ca35aff9

[03:34] <Geth> ¦ nqp/post-release: 71658ad859 | (Zoffix Znet)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[03:34] <Geth> ¦ nqp/post-release: Make certain conditionals with natives 2.1x faster

[03:34] <Geth> ¦ nqp/post-release:

[03:34] <Geth> ¦ nqp/post-release: Addresses some cases in https://github.com/rakudo/rakudo/issues/1416

[03:34] <Geth> ¦ nqp/post-release:

[03:34] <Geth> ¦ nqp/post-release: getlexref is expensive compared to plain getlex, so if we know

[03:34] <Geth> ¦ nqp/post-release: we're not gonna use the conditional, try coercing it to a simpler value.

[03:34] <Geth> ¦ nqp/post-release: This gets rid of lexref and if we got native-type value, goes to use

[03:34] <Geth> ¦ nqp/post-release: <…commit message has 7 more lines…>

[03:34] <Geth> ¦ nqp/post-release: review: https://github.com/perl6/nqp/commit/71658ad859

[03:38] <Geth> ¦ roast/post-release: 103cc9c460 | (Zoffix Znet)++ | S32-io/open.t

[03:38] <Geth> ¦ roast/post-release: Adjust throw-in-read-in-a-mode test

[03:38] <Geth> ¦ roast/post-release:

[03:38] <Geth> ¦ roast/post-release: The test is not[^1] part of 6.c-errata.

[03:38] <Geth> ¦ roast/post-release:

[03:38] <Geth> ¦ roast/post-release: We don't actually bother to read if we reached EOF, which is the case

[03:38] <Geth> ¦ roast/post-release: with empty file the test uses, so no throwage would occur just Nil/empty buf

[03:38] <Geth> ¦ roast/post-release: would be returned (which I'm personally fine with).

[03:38] <Geth> ¦ roast/post-release:

[03:38] <Geth> ¦ roast/post-release: Adjust test to use .slurp for reading which still does throw in :a open mode.

[03:38] <Geth> ¦ roast/post-release:

[03:38] <Geth> ¦ roast/post-release: [1] https://github.com/perl6/roast/commit/091931a717aa0507d04fcef10b81

[03:38] <Geth> ¦ roast/post-release: review: https://github.com/perl6/roast/commit/103cc9c460

[04:02] <Geth> ¦ nqp/post-release: 7417743ce4 | (Zoffix Znet)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[04:02] <Geth> ¦ nqp/post-release: Simplify conditional variant lookup

[04:02] <Geth> ¦ nqp/post-release:

[04:02] <Geth> ¦ nqp/post-release: We already know we'll need _o because we test the op's kind on

[04:02] <Geth> ¦ nqp/post-release: entry to the branch, so just use those without lookup. No idea

[04:02] <Geth> ¦ nqp/post-release: why they're reversed ("if" takes an "unless_o"), but that was the

[04:02] <Geth> ¦ nqp/post-release: case before I touched this part of the codebase.

[04:02] <Geth> ¦ nqp/post-release: review: https://github.com/perl6/nqp/commit/7417743ce4

[05:42] <Geth> ¦ roast: d1900a8524 | (Zoffix Znet)++ | MISC/bug-coverage-6.d.t

[05:42] <Geth> ¦ roast: Test non-lexical whenever throws in 6.d

[05:42] <Geth> ¦ roast:

[05:42] <Geth> ¦ roast: Covers case in https://github.com/rakudo/rakudo/issues/1428

[05:42] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d1900a8524

[05:45] <Geth> ¦ rakudo: 0ec8e088c2 | (Zoffix Znet)++ | 2 files

[05:45] <Geth> ¦ rakudo: Permit non-lexical whenever in 6.c language

[05:45] <Geth> ¦ rakudo:

[05:45] <Geth> ¦ rakudo: Phixes https://github.com/rakudo/rakudo/issues/1428

[05:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0ec8e088c2

[05:45] <Geth> ¦ roast/6.c-errata: 6e724f1274 | (Zoffix Znet)++ | S17-supply/syntax.t

[05:45] <Geth> ¦ roast/6.c-errata: Remove trailing whitespace

[05:45] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/6e724f1274

[05:45] <Geth> ¦ roast/6.c-errata: 27424bdde7 | (Zoffix Znet)++ | S17-supply/syntax.t

[05:45] <Geth> ¦ roast/6.c-errata: Test non-lexical whenever works

[05:45] <Geth> ¦ roast/6.c-errata:

[05:45] <Geth> ¦ roast/6.c-errata: Closes https://github.com/rakudo/rakudo/issues/1428

[05:45] <Geth> ¦ roast/6.c-errata: Rakudo fix: https://github.com/rakudo/rakudo/commit/0ec8e088c2

[05:45] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/27424bdde7

[05:51] <Geth> ¦ rakudo: 35df90b364 | (Zoffix Znet)++ | t/spectest.data

[05:51] <Geth> ¦ rakudo: Add MISC/bug-coverage-6.d.t to list of test files

[05:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/35df90b364

[06:58] <AlexDaniel> fwiw the changelog is pretty much done so feedback is welcome: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[06:58] <AlexDaniel> (or just edit right away)

[07:09] <Zoffix> AlexDaniel: I see EmptySeq constant is listed as an addition, but IIRC it was meant to be reverted. Here's the talk about that; dunno if I missed any later discussions: https://irclog.perlgeek.de/perl6-dev/2018-01-07#i_15662659

[07:56] <Geth> ¦ rakudo/post-release: a35cd4e652 | (Zoffix Znet)++ | src/Perl6/Grammar.nqp

[07:56] <Geth> ¦ rakudo/post-release: Fix crash with colonpaired variables declarations

[07:56] <Geth> ¦ rakudo/post-release:

[07:56] <Geth> ¦ rakudo/post-release: Fixes RT#128712: https://rt.perl.org/Ticket/Display.html?id=128712

[07:56] <Geth> ¦ rakudo/post-release:

[07:56] <Geth> ¦ rakudo/post-release: When we reference a variable inside the colonpair, the declaration

[07:56] <Geth> ¦ rakudo/post-release: marker from the variable we're declaring is still set, so the lookup

[07:56] <Geth> ¦ rakudo/post-release: inside the colonpair explodes because scope is not set. Fix by

[07:56] <synopsebot> RT#128712 [new]: https://rt.perl.org/Ticket/Display.html?id=128712 [LTA] quote colon form in identifier lacks line number

[07:56] <Geth> ¦ rakudo/post-release: resetting that marker when we start parsing the colonpair circumfix.

[07:56] <Geth> ¦ rakudo/post-release: review: https://github.com/rakudo/rakudo/commit/a35cd4e652

[07:57] <Geth> ¦ roast/post-release: cd24eb0310 | (Zoffix Znet)++ | S02-names-vars/names.t

[07:57] <Geth> ¦ roast/post-release: Test can use variables in colonpaired var decls

[07:57] <Geth> ¦ roast/post-release:

[07:57] <Geth> ¦ roast/post-release: RT#128712: https://rt.perl.org/Ticket/Display.html?id=128712

[07:57] <Geth> ¦ roast/post-release: Rakudo fix: https://github.com/rakudo/rakudo/commit/a35cd4e652

[07:57] <Geth> ¦ roast/post-release: review: https://github.com/perl6/roast/commit/cd24eb0310

[09:05] <Geth> ¦ rakudo/post-release: 44ff0a2a4c | (Zoffix Znet)++ | src/core/Any-iterable-methods.pm

[09:05] <Geth> ¦ rakudo/post-release: Fix Any.skip: *-1 crash

[09:05] <Geth> ¦ rakudo/post-release:

[09:05] <Geth> ¦ rakudo/post-release: We evaluate the callable and pass the result to .tail, but .tail

[09:05] <Geth> ¦ rakudo/post-release: only wants an Any:D.

[09:05] <Geth> ¦ rakudo/post-release:

[09:05] <Geth> ¦ rakudo/post-release: Since .tail uses .iterator, just toss :D and accept :_. Also, since

[09:05] <Geth> ¦ rakudo/post-release: .skip(*-1) is equivalent to .tail(*-1), just pass the .skip directly

[09:05] <Geth> ¦ rakudo/post-release: to .tail() without doing anything else ourselves.

[09:05] <Geth> ¦ rakudo/post-release: review: https://github.com/rakudo/rakudo/commit/44ff0a2a4c

[09:06] <Geth> ¦ roast/post-release: 01c4e4ebe9 | (Zoffix Znet)++ | S32-list/skip.t

[09:06] <Geth> ¦ roast/post-release: Test Any:U.skip: Callable does not crash

[09:06] <Geth> ¦ roast/post-release:

[09:06] <Geth> ¦ roast/post-release: Closes https://github.com/rakudo/rakudo/issues/1384

[09:06] <Geth> ¦ roast/post-release: Rakudo fix: https://github.com/rakudo/rakudo/commit/44ff0a2a4c

[09:06] <Geth> ¦ roast/post-release: review: https://github.com/perl6/roast/commit/01c4e4ebe9

[09:07] <Geth> ¦ rakudo/post-release: ba675971c6 | (Zoffix Znet)++ | 2 files

[09:07] <Geth> ¦ rakudo/post-release: Fix crashes in degenerate .tail(Callable)

[09:07] <Geth> ¦ rakudo/post-release:

[09:07] <Geth> ¦ rakudo/post-release: Phixes: https://github.com/rakudo/rakudo/issues/1429

[09:07] <Geth> ¦ rakudo/post-release: review: https://github.com/rakudo/rakudo/commit/ba675971c6

[09:08] <Geth> ¦ roast/post-release: a5a95d2492 | (Zoffix Znet)++ | S32-list/tail.t

[09:08] <Geth> ¦ roast/post-release: Test degenerate .tail(Callable)

[09:08] <Geth> ¦ roast/post-release:

[09:08] <Geth> ¦ roast/post-release: Closes https://github.com/rakudo/rakudo/issues/1429

[09:08] <Geth> ¦ roast/post-release: Rakudo fix: https://github.com/rakudo/rakudo/commit/ba675971c6

[09:08] <Geth> ¦ roast/post-release: review: https://github.com/perl6/roast/commit/a5a95d2492

[09:13] <AlexDaniel> ah, didn't know about that

[09:23] <AlexDaniel> e: ‘foo’.IO.open: :buffer

[09:23] <evalable6> AlexDaniel, rakudo-moar 35df90b36: OUTPUT: «(exit code 1) 'foo' is a directory, cannot do '.open' on a directory␤  in block <unit> at …»

[09:23] <evalable6> AlexDaniel, Full output: https://gist.github.com/0bc9cbbc9be5f27c04fbc5be68777568

[09:23] <AlexDaniel> e: ‘blahblah’.IO.open: :buffer

[09:23] <evalable6> AlexDaniel, rakudo-moar 35df90b36: OUTPUT: «(exit code 1) Failed to open file /home/bisectable/git/whateverable/blahblah: No such file…»

[09:23] <evalable6> AlexDaniel, Full output: https://gist.github.com/a480743e097f57cc08dcda88ed843177

[09:25] <Geth> ¦ rakudo: f415d61e66 | (Aleks-Daniel Jakimenko-Aleksejev)++ | src/core/IO/Handle.pm

[09:25] <Geth> ¦ rakudo: Remove :buffer arg in IO::Handle.open

[09:25] <Geth> ¦ rakudo:

[09:25] <Geth> ¦ rakudo: Promised to be removed in 2018.01.

[09:25] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f415d61e66

[09:29] <AlexDaniel> reportable6: list

[09:29] <reportable6> AlexDaniel, https://gist.github.com/d199ed2aae1c1040422395cbdd2bffbf

[09:29] <AlexDaniel> reportable6: 2018-01-15T00:00:00Z 2018-01-22T00:00:00Z

[09:29] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[09:30] <reportable6> AlexDaniel, https://gist.github.com/ca1a8f2d98ebdf55eaa12cfe69e2b977

[09:56] <samcv> so the bsd issues are fixed?

[10:08] <AlexDaniel> samcv: yes, everything seems to be alright

[10:12] <AlexDaniel> stmuk++

[10:13] <Geth> ¦ rakudo: 6bea8cff26 | (Aleks-Daniel Jakimenko-Aleksejev)++ | README.md

[10:13] <Geth> ¦ rakudo: Bump the year in README.md

[10:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6bea8cff26

[10:17] <samcv> ok good!

[10:20] <Geth> ¦ rakudo: 0a1641e945 | (Aleks-Daniel Jakimenko-Aleksejev)++ | README.md

[10:20] <Geth> ¦ rakudo: I ♥ Unicode (README.md)

[10:20] <Geth> ¦ rakudo:

[10:20] <Geth> ¦ rakudo: ©, nbsp, some quotes. Also changed it a little so that it makes

[10:20] <Geth> ¦ rakudo: clear that it's “Perl 6” and not just “Perl”.

[10:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0a1641e945

[12:36] <AlexDaniel> hmm

[12:36] <AlexDaniel> I get this sometimes

[12:36] <AlexDaniel> t/spec/S12-construction/destruction.rakudo.moar                 (Wstat: 0 Tests: 6 Failed: 0)

[12:36] <AlexDaniel> TODO passed:   3-4

[12:36] <AlexDaniel> 

[12:37] <AlexDaniel> or maybe always, but last time I checked manually it wasn't passing

[12:37] <lizmat> AlexDaniel: fwiw, I've never seen that

[12:41] <AlexDaniel> anyway, releasable is still doing its excessive tests, but everything looks good to me

[12:42] <AlexDaniel> I don't think I'd be able to dig up any issue

[12:43] <AlexDaniel> timotimo: insert your “how many point releases this time?” joke here :)

[13:00] <jnthn> .oO( How many point releases does it take to change a lightbulb? )

[13:01] <lizmat> .oO( as many as needed to be lit )

[13:05] <timotimo> AlexDaniel: Made infix: with bools up to 2x faster [f99943d3]

[13:05] <timotimo> Made infix: with bools up to 16x faster [ca4fcaca]

[13:05] <timotimo> were those supposed to have something in between < > there?

[13:09] <lizmat> m: my $s = "1"; dd uniprop($s,"White_Space")  # this feels wrong ??

[13:09] <camelia> rakudo-moar 0a1641e94: OUTPUT: «Bool::True␤»

[13:10] <AlexDaniel> timotimo: thanks, fixed

[13:10] <AlexDaniel> unintentional markdown :)

[13:10] <timotimo> yeah, happens all the damn time

[13:10] <AlexDaniel> .oO( accidental! )

[13:10] <timotimo> same with wordpress eating <foo> as well

[13:11] <AlexDaniel> 6c: my $s = "1"; dd uniprop($s,"White_Space")  # this feels wrong ??

[13:11] <committable6> AlexDaniel, https://gist.github.com/e8ed03240561f640ca290bc2add53506

[13:11] <AlexDaniel> lizmat: ↑ ouch

[13:11] <AlexDaniel> bisect: old=2017.08 my $s = "1"; dd uniprop($s,"White_Space")  # this feels wrong ??

[13:11] <bisectable6> AlexDaniel, Bisecting by output (old=2017.08 new=0a1641e) because on both starting points the exit code is 0

[13:11] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/d14478c88139ad51edab285dc8f9c357

[13:11] <bisectable6> AlexDaniel, (2017-08-30) https://github.com/rakudo/rakudo/commit/64dd94c250c72c23f6e82f0fedcda39ace551468

[13:12] <AlexDaniel> c: 64dd94c250c7^,64dd94c250c7 my $s = "1"; dd uniprop($s,"White_Space")  # this feels wrong ??

[13:12] <committable6> AlexDaniel, ¦64dd94c250c7^: «Bool::False␤» ¦64dd94c: «Bool::True␤»

[13:12] <AlexDaniel> samcv: ↑

[13:12] <AlexDaniel> propdump: 1

[13:12] <unicodable6> AlexDaniel, https://gist.github.com/3a46e34522cb35bc85776dd39866ec79

[13:13] <AlexDaniel> c: 2017.08,64dd94c250c7^,64dd94c250c7,2017.09 my $s = "1"; dd uniprop($s,"White_Space")  # this feels wrong ??

[13:13] <committable6> AlexDaniel, ¦2017.08,64dd94c250c7^: «Bool::False␤» ¦64dd94c,2017.09: «Bool::True␤»

[13:13] <lizmat> AlexDaniel: this would not be a  blocker for me as it clearly has been wrong for quite a bit

[13:13] <AlexDaniel> lizmat: yes, but I'm submitting a ticket anyway

[13:14] <lizmat> yes, please  :-)

[13:15] <AlexDaniel> GH#1430

[13:15] <synopsebot> GH#1430 [open]: https://github.com/rakudo/rakudo/issues/1430 [regression] “1” is whitespace according to uniprop

[13:15] <AlexDaniel> samcv: ↑

[13:24] <|Tux|> Rakudo version 2017.12-284-g0a1641e94 - MoarVM version 2017.12.1-62-ga04d1099b

[13:25] <|Tux|> csv-test-xs-20      0.456 -  0.483

[13:25] <|Tux|> csv-ip5xs           1.096 -  1.123

[13:25] <|Tux|> test-t --race       1.193 -  1.231

[13:25] <|Tux|> test-t              2.719 -  2.785

[13:25] <|Tux|> test               10.596 - 11.106

[13:25] <|Tux|> csv-parser         11.935 - 11.943

[13:25] <|Tux|> csv-ip5xs-20       12.440 - 12.947

[13:25] <|Tux|> test-t-20 --race   16.525 - 16.527

[13:25] <|Tux|> test-t-20          48.674 - 48.756

[13:32] <AlexDaniel> releasable is happy

[13:32] <AlexDaniel> anyway, I'll be afk for a few hours

[13:32] <AlexDaniel> see you later!

[15:31] <dogbert2> m: my $l = (1, 2, 3); say (0, $l.Slip).perl

[15:31] <camelia> rakudo-moar 0a1641e94: OUTPUT: «(0, 1, 2, 3)␤»

[18:16] <samcv> AlexDaniel: yeah that is wrong. and weird

[18:19] <samcv> i'll figure it out though

[18:43] <samcv> AlexDaniel: i found the problem

[21:54] <samcv> well i fixed that AlexDaniel and i also fixed <:space> for reals

[21:54] <samcv> turned out the test for <:space> was wrong since it tested "\t \t" ~~ /<:space>/ 's result was just the space not any tabs

[22:10] <gfldex> m: dd 1 => 1; dd (x => 1).^name;

[22:10] <camelia> rakudo-moar 0a1641e94: OUTPUT: «1 => 1␤"Pair"␤»

[22:10] <gfldex> m: (1 => 1).^name.say; (x => 1).^name.say;

[22:10] <camelia> rakudo-moar 0a1641e94: OUTPUT: «Pair␤Pair␤»

[22:47] <Geth> ¦ rakudo/post-release: 0a32e51bf5 | (Zoffix Znet)++ | src/core/Rakudo/Internals.pm

[22:47] <Geth> ¦ rakudo/post-release: Fix crash in `temp`/`let` with parametarized hashes

[22:47] <Geth> ¦ rakudo/post-release:

[22:47] <Geth> ¦ rakudo/post-release: Fixes RT#127291: https://rt.perl.org/Ticket/Display.html?id=127291

[22:47] <Geth> ¦ rakudo/post-release:

[22:47] <Geth> ¦ rakudo/post-release: When we stash the hash for later restoration, we copy it into

[22:47] <Geth> ¦ rakudo/post-release: a non-parametarized hash that stringifies the keys, causing a crash

[22:47] <Geth> ¦ rakudo/post-release: when it's later restored into parametarized container.

[22:47] <synopsebot> RT#127291 [new]: https://rt.perl.org/Ticket/Display.html?id=127291 [BUG] temp fails to set hashes with non-string key type constraints

[22:47] <Geth> ¦ rakudo/post-release:

[22:47] <Geth> ¦ rakudo/post-release: Fix by stashing the hash into Mu/Mu parameterized hash that

[22:47] <Geth> ¦ rakudo/post-release: leaves values untouched.

[22:47] <Geth> ¦ rakudo/post-release: review: https://github.com/rakudo/rakudo/commit/0a32e51bf5

[22:47] <Geth> ¦ roast/post-release: 321c54f3ed | (Zoffix Znet)++ | 2 files

[22:47] <Geth> ¦ roast/post-release: Test `temp`/`let` work with parametarized hashes

[22:47] <Geth> ¦ roast/post-release:

[22:47] <Geth> ¦ roast/post-release: RT#127291: https://rt.perl.org/Ticket/Display.html?id=127291

[22:47] <Geth> ¦ roast/post-release: Rakudo fix: https://github.com/rakudo/rakudo/commit/0a32e51bf5

[22:47] <Geth> ¦ roast/post-release: review: https://github.com/perl6/roast/commit/321c54f3ed

[23:13] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/01/22/2018-04-its-time-for-optimism/
