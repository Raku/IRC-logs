[00:02] <tbrowder> AlexDaniel: i made the change to nqp PR #397 as you requested.

[00:32] <Zoffix> ZofBot: status

[00:32] <ZofBot> Zoffix, She said 'Good evening,' too, tying the score

[00:50] <AlexDaniel> psch: post-release I think

[00:54] <Zoffix> I'm guessing "foo {"bar"}" wrapping that QAST::Block into QAST::Stmts is an error... gonna remove em

[00:56] <samcv> i'm getting failures on t/spec/S32-io/IO-Socket-Async.t

[00:56] <samcv> Parse errors: Bad plan.  You planned 26 tests but ran 17

[00:57] <samcv> seems like it's not completing all of the tests. i ran it again to check and same thing

[00:57] <Zoffix> samcv: is it immediate failure or does it sit and wait?

[00:57] <samcv> Zoffix: immediate

[00:57] <Zoffix> ah no idea then

[00:58] <samcv> Unhandled exception in code scheduled on thread 4

[00:58] <samcv> Unhandled exception in code scheduled on thread 6

[01:15] <samcv> MoarVM 2018.01 has been released 🎉

[01:18] <Zoffix> AlexDaniel: ^ :)

[01:18] <AlexDaniel> yey!

[01:18] <AlexDaniel> samcv++

[01:20] <AlexDaniel> [Coke]: fwiw you tend to appear twice as a contributor. “Will "Coke" Coleda” and “Will Coleda”

[01:20] <AlexDaniel> perhaps you want to fix that

[01:20] <AlexDaniel> I mean, fix your name in one of the configurations :)

[01:20] <samcv> you can add to the rakudo changelog that cf, sc, STerm, Upper, space and White_Space properties were fixed

[01:21] <samcv> or i guess i'll add it to the draft :) https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[01:21] <AlexDaniel> hehe whoops :)

[01:21] <samcv> oh. where does it live? see nothing there

[01:21] <AlexDaniel> because I was about to commit it

[01:22] <samcv> :)

[01:23] <AlexDaniel> ok added

[01:28] <samcv> pretty happy i have all properties resolving right now though :) i fixed the property values during my grant but now both are fixed@

[01:29] <samcv> was much easier to do now do to the huge cleanup of ucd2c.pl i did this last month

[01:35] <Geth> ¦ rakudo: c359312b13 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 3 files

[01:35] <Geth> ¦ rakudo: Log all changes (+ announcement)

[01:35] <Geth> ¦ rakudo:

[01:35] <Geth> ¦ rakudo: Deliberately not logged:

[01:35] <Geth> ¦ rakudo:

[01:35] <Geth> ¦ rakudo:     c51f1796 7df750a1 8275c03d bbf95dbc cf7b01ef e5c38ad6 1f99aa14

[01:35] <Geth> ¦ rakudo:     8943f7c5 57d164b4 f10e8b13 b7f93bee ec0021bb 9606aea2 9cb2170b

[01:35] <Geth> ¦ rakudo:     98be6ab5 1ac1a125 ff34ab35 d9ce5e9b f35d0203 8746b534 e5bb9bd2

[01:35] <Geth> ¦ rakudo: <…commit message has 16 more lines…>

[01:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c359312b13

[01:36] <AlexDaniel> hm wow

[01:36] <AlexDaniel> one of these does not show up as a commit

[01:37] <Geth> ¦ rakudo: 016b0c561c | (Aleks-Daniel Jakimenko-Aleksejev)++ | docs/release_guide.pod

[01:37] <Geth> ¦ rakudo: Fix release date

[01:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/016b0c561c

[01:46] <Zoffix> 'cause it's too short, there's another commit with same sha

[01:46] <Zoffix> *same short sha

[01:47] <Zoffix> maybe :) only one shows up in git log grep

[01:49] <Zoffix> works here tho https://github.com/rakudo/rakudo/commit/1ed8f5de5

[01:49] <AlexDaniel> some time ago I wanted to bump the sha length in the next changelog, but for some reason decided against it

[02:24] <Zoffix> m: my $m := Int; say "42".$m

[02:24] <camelia> rakudo-moar 016b0c561: OUTPUT: «42␤»

[02:24] <Zoffix> TIL

[02:25] <Zoffix> ah, it just invokes it as a coercer. nm

[02:29] <Geth> ¦ nqp: b0c3964659 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[02:29] <Geth> ¦ nqp: [release] Bump MoarVM revision to 2018.01

[02:29] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/b0c3964659

[02:29] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.12.1-65-gcd902eb58... No newline at end of file

[02:29] <Geth> ¦ nqp: b9878442ef | (Aleks-Daniel Jakimenko-Aleksejev)++ | VERSION

[02:29] <Geth> ¦ nqp: [release] Bump VERSION to 2018.01

[02:29] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/b9878442ef

[02:29] <Geth> ¦ rakudo: c82a698bc2 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[02:29] <Geth> ¦ rakudo: [release] Bump NQP revision to 2018.01

[02:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c82a698bc2

[02:29] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.12-91-g45d46a9ee...2018.01

[02:29] <Geth> ¦ rakudo: fa4db18c76 | (Aleks-Daniel Jakimenko-Aleksejev)++ | VERSION

[02:29] <Geth> ¦ rakudo: [release] Bump VERSION to 2018.01

[02:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fa4db18c76

[02:30] <AlexDaniel> \o/

[02:31] <Zoffix> wooo. AlexDaniel++

[02:32] <Zoffix> would be cool to have a debug mode that annotates each QAST::Node with file/location of where it was created.

[02:34] <Geth> ¦ nqp: zoffixznet++ created pull request #399: Post release

[02:34] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/399

[02:35] <Geth> ¦ nqp/master: 9 commits pushed by (Zoffix Znet)++

[02:35] <Geth> ¦ nqp/master: e34595c66c | Avoid using variables where we don't need any

[02:35] <Geth> ¦ nqp/master: c11e211c94 | Merge branch 'master' into post-release

[02:35] <Geth> ¦ nqp/master: df45cb8ce9 | Fix crashes with native types in conditionals

[02:35] <Geth> ¦ nqp/master: a8ca35aff9 | Document getlexref_*

[02:35] <Geth> ¦ nqp/master: 71658ad859 | Make certain conditionals with natives 2.1x faster

[02:35] <Geth> ¦ nqp/master: 7417743ce4 | Simplify conditional variant lookup

[02:35] <Geth> ¦ nqp/master: 3ce69943cf | Merge branch 'master' into post-release

[02:35] <Geth> ¦ nqp/master: 0264b23793 | Easyfy matching Block WVals with their QAST::Blocks…

[02:35] <Geth> ¦ nqp/master: dd8b1adc03 | Merge pull request #399 from perl6/post-release

[02:35] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/b9878442ef...dd8b1adc03

[02:35] <AlexDaniel> bah thunderbird wrapped the lines excessively in my email again. I thought that I fixed that…

[02:35] <AlexDaniel> Zoffix++ # post-release branch

[02:54] <Zoffix> hm, weird. pulled all repos, rebuild all the things, but still getting "This is Rakudo version 2018.01 built on MoarVM version 2017.12.1-34-g4a0a912"

[02:54] <Zoffix> oh, nm, confused zscript commands and was only doing moarvm recompile and not rebuild (with configure run)

[03:00] <Zoffix> ZOFVM: Files=1287, Tests=152969, 159 wallclock secs (21.69 usr  3.20 sys + 3399.60 cusr 178.38 csys = 3602.87 CPU)

[03:08] <Zoffix> ZOFVM: Files=1287, Tests=153127, 159 wallclock secs (21.40 usr  3.27 sys + 3418.56 cusr 179.32 csys = 3622.55 CPU)

[04:42] <AlexDaniel> releasable6: status

[04:42] <releasable6> AlexDaniel, Next release in 23 days and ≈14 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[04:42] <releasable6> AlexDaniel, Details: https://gist.github.com/e84bc43f84c6b582461b505699ac49ad

[08:11] <El_Che> releasable6: status

[08:11] <releasable6> El_Che, Next release in 23 days and ≈10 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[08:11] <releasable6> El_Che, Details: https://gist.github.com/391d6e04ad840e6e117f4e084c3532d9

[08:11] <El_Che> ah, 2018.01 released? nice

[08:19] <[Tux]> Rakudo version 2018.01-26-g7c8bbc8da - MoarVM version 2018.01-17-g39928851f

[08:19] <[Tux]> csv-test-xs-20      0.429 -  0.441

[08:19] <[Tux]> csv-ip5xs           0.998 -  1.031

[08:19] <[Tux]> test-t --race       1.144 -  1.346

[08:19] <[Tux]> test-t              2.740 -  2.818

[08:19] <[Tux]> csv-ip5xs-20       10.684 - 10.704

[08:19] <[Tux]> test               10.881 - 11.199

[08:19] <[Tux]> csv-parser         11.542 - 11.620

[08:19] <[Tux]> test-t-20 --race   16.778 - 19.003

[08:19] <[Tux]> test-t-20          47.903 - 48.695

[08:58] <lizmat> csv-ip5xs < 1  whee!

[09:00] <travis-ci> Rakudo build passed. Aleks-Daniel Jakimenko-Aleksejev '[NQP Bump] Brings 11 commits

[09:00] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/332640077 https://github.com/rakudo/rakudo/compare/7361fe2b6d8f...49dce163e818

[09:23] <nine> lizmat: csv-ip5xs-20 went down 2 seconds :)

[10:17] <jnthn> nine++ # nice opt work :)

[10:26] <stmuk> is the moar release RSN?

[10:28] <Geth> ¦ star/master: 6 commits pushed by (Steve Mynott)++

[10:28] <Geth> ¦ star/master: 775fe3ad45 | bump submodules

[10:28] <Geth> ¦ star/master: 011e894b2d | import new announce & tweak docs

[10:28] <Geth> ¦ star/master: 2532884594 | import http-useragent as intended replacement for LWP::Simple.

[10:28] <Geth> ¦ star/master: c689dfe797 | Deprecation notices

[10:28] <Geth> ¦ star/master: 03341ed511 | minor typo fixed

[10:28] <Geth> ¦ star/master: 4b4e5e3fca | bump moar, nqp and rakudo

[10:28] <Geth> ¦ star/master: review: https://github.com/rakudo/star/compare/ffad40efd9...4b4e5e3fca

[11:19] <psch> hrm, looking over nqp/docs/jvminterop-goals.md i feel like i didn't really implement anything at all yet hah

[11:20] <psch> j: use java::util::ArrayList:from<JavaRuntime>; my $a = ArrayList.new; $a.add("foo"); $a.add("bar"); say $_ for $a

[11:20] <camelia> rakudo-jvm a92950fb4: ( no output )

[11:20] <psch> j: use java::util::ArrayList:from<JavaRuntime>; my $a = ArrayList.new; $a.add("foo"); $a.add("bar"); say $_ for $a

[11:20] <camelia> rakudo-jvm a92950fb4: OUTPUT: «[foo, bar]␤»

[11:20] <El_Che> I see there is a new rakudo release, but no matching moarvm release

[11:20] <El_Che> is this intended

[11:20] <El_Che> ?

[11:20] <psch> j: use java::util::ArrayList:from<JavaRuntime>; my $a = ArrayList.new; $a.add("foo"); $a.add("bar"); say $_ for $a.iterator()

[11:21] <camelia> rakudo-jvm a92950fb4: OUTPUT: «java.lang.NullPointerException␤  in block <unit> at <tmp> line 1␤␤»

[11:21] <El_Che> (there is also a new nqp release)

[11:23] <psch> j: use java::util::ArrayList:from<JavaRuntime>; my $a = ArrayList.new; $a.add("foo"); $a.add("bar"); say $_ for $a.toArray

[11:23] <camelia> rakudo-jvm a92950fb4: OUTPUT: «List interop NYI after GLR␤  in block <unit> at <tmp> line 1␤␤»

[11:23] <psch> oh right, there was something there...

[11:24] <lizmat> El_Che: afaik there's a new MoarVM release as well

[11:25] <lizmat> except that http://moarvm.org/releases.html is not updated yet, and http://moarvm.org hasn't been for a few months :-(

[11:25] <psch> 2018.01 is tagged on github at least

[11:25] <stmuk> http://moarvm.org/releases/ is empty

[11:26] <stmuk> well not actually empty at all

[11:28] <El_Che> lizmat: my build scripts retrieves that tars from https://moarvm.org/releases/

[11:28] <El_Che> lizmat: is has worked sinds I started building packages

[11:28] <lizmat> El_Che: ok, noted, perhaps ping samcv / jnthn on #moarvm

[11:28] <El_Che> thx

[11:29] <El_Che> left a note there

[12:13] <psch> hrm, either my approach of mimicking List.new in RakudoJavaInterop to fix list marshalling is wrong or i need IterationBuffer during bootstrap to add it to GlobalExt

[12:15] <psch> somewhat related: is ListIter still around?

[12:15] <psch> m: say ListIter

[12:15] <camelia> rakudo-moar 7c8bbc8da: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    ListIter used at line 1␤␤»

[12:18] <lizmat> psch: no, ListIter is pre GLR afaik

[12:20] <psch> we're still carrying it around in GlobalExt is all, guess i can toss it there

[12:23] <lizmat> sounds like it, but I'm a JVM backend noob

[12:24] <psch> yeah, it's an empty field during runtime in the GlobalExt instance we have in the GlobalContext

[12:26] <psch> the eventual port to java 1.9 is gonna be lotsa fun too :/

[12:26] <psch> cause sun.misc.Unsafe gets replaced :x

[12:37] <psch> huh.  i have a perl6 compiler during the interop wrapper generation for ArrayList, but i don't have the perl6 hll and thus can't get IterationBuffer via gethllsym :/

[12:38] <psch> ah, no, term just cut off output, never mind

[12:38] <psch> so i have the hll perl6 but IterationBuffer isn't registered as a symbol

[12:38] <lizmat> psch: in the setting IterationBuffer is first stubbed with a REPR, and then later actually defined

[12:39] <lizmat> perhaps that is related ?

[12:40] <psch> lizmat: i'm not sure.  as in, i don't know how far through the settings we are any way

[12:40] <psch> lizmat: fwiw, the hll syms i have are the following:

[12:40] <psch> main[2] print tc.gc.hllSyms.get("perl6").keySet()

[12:40] <psch> tc.gc.hllSyms.get("perl6").keySet() = "[ModuleLoader, $!ARGITER, MD_Pos, MD_PBF, PROCESS, GLOBAL, $COMPILER_CONFIG, JavaModuleLoader, &THE_END, P6EX, @END_PHASERS]"

[12:41] <psch> lizmat: which, to me, looks like either we're not done with the setting yet, or hllsyms wouldn't have what i need in the first place

[12:41] <psch> lizmat: ideally i'd have IterationBuffer in GlobalExt, but we register types there during BOOTSTRAP, and IterationBuffer isn't in BOOTSTRAP

[12:42] <psch> i think we did have ListIter in BOOTSTRAP, but i don't wanna assume that moving IterationBuffer there is fine and dandy

[12:43] <psch> jnthn: does https://gist.github.com/anonymous/31f1d15bafdd64b691931f9a644eaa28 -- with moving IterationBuffer to BOOTSTRAP -- seem sensible to you?

[12:44] <psch> err, and replacing the getcurhllsym call with a GlobalExt field lookup too... :)

[13:07] <psch> ooh, android oreo finally got indy.  i totally missed that

[13:07] <psch> well, something equivalent at least

[13:12] <jnthn> psch: I'd prefer not to move it to BOOTSTRAP if we don't have to, but we can still register it with GlobalExt without doing that perhaps?

[13:16] <psch> jnthn: i think we'd need a new op to register it later than BOOTSTRAP?  like, either similar to p6setitertype but for IterationBuffer, or something more generic which would have to rely on reflection to map type to gcx field

[13:17] <psch> maybe turning GlobalExt into a Map makes sense to not need reflection, though that gives lots slower lookups, probably

[13:25] <jnthn> psch: Ah, may need an op for it, yes

[13:26] <psch> jnthn: right, i'll do that then, thanks :)

[13:26] <Geth> ¦ rakudo: 8ffbc43b41 | (Elizabeth Mattijsen)++ | src/Perl6/Grammar.nqp

[13:26] <Geth> ¦ rakudo: Give a bare 'fc' the same treatment as bare 'lc' or 'uc'

[13:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8ffbc43b41

[13:30] <[Coke]> AlexDaniel: what is the list of configurations where I have to verify the listing?

[13:31] <[Coke]> (I thought our canonical listing was the rakudo contributor's list.

[13:31] <[Coke]> )

[13:32] <AlexDaniel> [Coke]: it's from a commit to rakudo/nqp/moarvm/doc/roast repo I think, so I guess one of the PCs (or OS) you use has something different in git config

[13:32] * AlexDaniel looks

[13:34] <[Coke]> ah. so this isn't part of what you're doing to get a list of names for a release email

[13:35] <[Coke]> May be the web commits vs. actual clones/pushes

[13:35] <[Coke]> I don't care about that level of consistency. email address is fine.

[13:35] <AlexDaniel> Str $author = "Will \"Coke\" Coleda"

[13:35] <AlexDaniel> Str $author = "Will Coleda"

[13:35] <AlexDaniel> from the doc repo

[13:36] <[Coke]> Sure, that's fine. don't care unless it's making your life difficult.

[13:36] <AlexDaniel> [Coke]: well, I have to touch the file manually to delete the duplicate…

[13:36] <AlexDaniel> I did not notice once IIRC

[13:36] <[Coke]> which filie?

[13:36] <AlexDaniel> the announcement

[13:36] <[Coke]> why are you pulling names directly from there and not using the contributors file with the preferred names?

[13:36] <[Coke]> (pretty sure that's how that worked back in the day)

[13:37] <AlexDaniel> I use tools/create-release-announcement.pl6, it lists you twice

[13:37] <[Coke]> (if it's docs, it's almost certainly web commits vs. not)

[13:37] <AlexDaniel> i.e. it creates an announcement that has you listed twice

[13:38] <[Coke]> ok. it's a bug in contributors.pl6 then. I'll see if I can get you a patch.

[13:40] <[Coke]> sorry, CREDITS is the file I'm thinking of.

[13:40] <[Coke]> logic I'm thinking is: you get the email from the commit message, look it up in that list; if you find it, use that Name; else use the name from github.

[13:42] <[Coke]> (yah, the 2015.12 version used the CREDITS file...)

[13:42] <[Coke]> (but probably didn't check enough repos)

[13:42] <AlexDaniel> another option is to add “U: Will Coleda” I think

[13:45] <[Coke]> ah, looking for the right filename, there is a CREDITS in there! Sure, if adding an alias works, please do.

[13:45] <AlexDaniel> [Coke]: but I like your proposal

[13:45] <[Coke]> U is "username" though, which is coke ?

[13:46] <AlexDaniel> yes, but you can have more than one it seems

[13:46] <[Coke]> ok. I opened a ticket for that logic, will poke at it tonight.

[13:46] <[Coke]> "will coleda" isn't my username though

[13:46] <[Coke]> even with the web edits. (that's name which is something else, I think)

[13:47] <[Coke]> but yah, let me try to see if I can patch contributors to be more concise.

[13:49] <psch> ugh, i apparently forgot my ssh key passphrase :l

[13:50] <AlexDaniel> [Coke]: fwiw, a warning if two different names for the same email are found should be good enough too

[13:50] <Geth> ¦ nqp: b88de49aad | (Pepe Schwarz)++ | 3 files

[13:50] <Geth> ¦ nqp: [jvm] Add some cleanup when intercepting exits.

[13:50] <Geth> ¦ nqp:

[13:50] <Geth> ¦ nqp: The EvalServer adds a few minor headaches with memory usage, which we have to

[13:50] <Geth> ¦ nqp: take care off manually.  There's probably other ways still out there to reduce

[13:50] <Geth> ¦ nqp: memory usage, but this set at least finishes the Perl 6 spectest without hangs

[13:50] <Geth> ¦ nqp: or notable OutOfMemory exceptions.

[13:50] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/b88de49aad

[13:50] <psch> keepassx++ >_>

[13:51] <jnthn> .oO( Version 10 of the best tool for keeping your donkey! )

[13:52] <Geth> ¦ rakudo: 1676359bcd | (Pepe Schwarz)++ | tools/build/NQP_REVISION

[13:52] <Geth> ¦ rakudo: Bump NQP_REVISION for nqp-j memory improvements

[13:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1676359bcd

[13:52] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.01-9-gdd8b1ad...2018.01-10-gb88de49aa

[13:52] <Geth> ¦ rakudo: a2499c90fc | (Pepe Schwarz)++ | 4 files

[13:52] <Geth> ¦ rakudo: Fix basic list marshalling

[13:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a2499c90fc

[13:52] <jnthn> psch++ # tending the JVM backend

[13:52] <lizmat> psch++ indeed

[13:53] <psch> :)

[13:56] <DrForr> jnthn: Aha, found you here :)

[13:58] <jnthn> ?

[13:58] <yoleaux> 13:53Z <DrForr> jnthn: 'static $filename;' ignores encoding, at least for UTF-8 HTML files. I'm using "content 'text/html', slurp $filename;" as a workaround.

[13:58] <yoleaux> 13:54Z <DrForr> jnthn: (at least for Cro)

[13:59] <jnthn> Hm, I think you can also tell static how to map extensions into content-type, and override it that way

[14:00] <jnthn> If you think it should be doing something smarter, please file an issue

[14:01] <DrForr> The content-type is getting mapped correctly, but it appears that it's being sent over the wire as Latin-1 when the file is UTF-8.

[14:03] <DrForr> I'm doing some React work (didn't initially see your React+Cro tutorial, hastily abandoned most of what I was doing and rewrote with that, many thankks)

[14:07] <jnthn> Are you sure it's being sent over the write that way rather than just no charset being set in the Content-type header?

[14:07] <DrForr> No, I'm not. Let me recreate the error, oe mo.

[14:07] <DrForr> *one

[14:10] <Geth> ¦ nqp: tbrowder++ created pull request #400: add new test file for nqp using perl

[14:10] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/400

[14:11] <DrForr> Claims that no character encoding was set, but .. Ah. I missed it when I moved to your static/index.html file. I'd set <meta content-type...> out of habit, not so much in the sample app.

[14:13] <DrForr> My bug, although if ou want I'll file a bug against the sample React app...

[14:13] <jnthn> Well, mebbe static should be doing something more sensible too

[14:14] <DrForr> I think HTML should default to UTF-8 unless overridden by the content-type heder, but I'd want to reread the spe to confirm.

[14:14] <DrForr> *spec

[14:15] <psch> j: use nqp; my $a = { a => 1 }.keyof; say $a; say nqp::eqaddr($a, {a => 1}.keyof) # wow RT#132694 is weird :l

[14:16] <camelia> rakudo-jvm a92950fb4: OUTPUT: «(Str(Any))␤0␤»

[14:16] <synopsebot> RT#132694 [new]: https://rt.perl.org/Ticket/Display.html?id=132694 [JVM] Coercion type Str(Any) returned from .keyof is not the same object as Str(Any)

[14:16] <geekosaur> I would not want to bet on that. Browsers will do what they will do, and assuming sanity is not a safe option

[14:16] <DrForr> Oh, of course, browsers can and will do what they want with text, but the spec is at least a starting point.

[14:19] <DrForr> Adding the <meta/> tag cleans things up.

[14:20] <DrForr> I'd suggest adding it to the demo, just as a preventative measure though.

[14:21] <DrForr> And it *does* let me get a tour.golang.org quasi-lookalike working with React+MUI-CSS and a working sidebar.

[14:23] <DrForr> And jnthn++ # I really wasn't looking forward to sorting out React toolchain stuff on my ow.

[14:23] <DrForr> *own

[14:26] <jnthn> I think "ow" is also right :P

[14:29] <DrForr> Oh, agreed. I started sorting through it, and I think a few times my reaction was "*really*? So much for *that* idea..."

[14:33] <Geth> ¦ nqp: tbrowder++ created pull request #401: improve pod panic msg

[14:33] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/401

[14:42] <psch> humm, that coercer bug seems to be about serialization contexts?

[14:45] <jnthn> DrForr: I thought I was in for an easy task as a year or so back I'd been on a react-using project at $dayjob. But no, the right way to do things had changed in that time.

[14:48] <DrForr> Yeah. I'm using MUI for this project because I want a responsive UI that I can run on a tablet, but squaring what I have in the HTML and the React code and what jnthn is doing makes that obvious. jnthn++'s stuff works fine, and I'm happy to use it as a demo for what I'm doing, but it's definitely a different lyout than I'd anticipated.

[14:56] <tbrowder> Zoffix: where should nqp tests be placed when they need perl ?

[15:00] <Zoffix> tbrowder: TBH, I don't see why they *need* perl

[15:01] <tbrowder> ok, how then do i exec nqp with nqp to test the failure msg! spawn

[15:02] <tbrowder> nqp::spawn is gone, nqp::spawnasyncproc is too much overhead (and it’s not documented).

[15:03] <Zoffix> tbrowder: did you see my comment on your PR? It links to a run_command routine that captures STDOUT. Just copy it and modify it to capture STDERR

[15:03] <tbrowder> looking...

[15:03] <Zoffix> tbrowder: https://github.com/perl6/nqp/blob/b88de49aadefc1fe758197d51a71cc8173064dbf/src/vm/js/HLL/Backend.nqp#L4-L69

[15:04] <Zoffix> tbrowder: "stdout_bytes" would be "stderr_bytes": https://github.com/perl6/nqp/blob/b88de49aadefc1fe758197d51a71cc8173064dbf/src/vm/js/HLL/Backend.nqp#L27

[15:05] <psch> aha, the CoercionHOW root doesn't have the setting Str(Any) for some reason..?

[15:07] <tbrowder> i’ll see what i can do...

[15:08] <travis-ci> Rakudo build canceled. Aleks-Daniel Jakimenko-Aleksejev 'Fix release date'

[15:08] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/333077599 https://github.com/rakudo/rakudo/compare/c359312b13e5...016b0c561c8b

[15:08] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[15:09] <Zoffix> tbrowder: basically, I see this as an argument of all maintainers need to learn a whole new language to maintain the tests vs. a test writer needs to learn how to write STDERR capture routine in NQP. The latter is a much smaller maintenance burden. Also, if we later decide to swap Configure.pl to some other system we won't need Perl 5 for anything, but with tests requiring multiple languages we would.

[15:11] <jnthn> If this is something needed in multiple tests, I don't have a problem with this going into NQP's setting, fwiw

[15:36] <psch> hm, so when we run into e.g. the Str(Any) coercer in the mainline on r-j we have a CoercionHOW on the root type that has an empty VMHashInstance as its WHO..?

[15:37] <psch> i feel like that shouldn't be empty, but contain e.g. the setting Str(Any) coercer

[15:38] <psch> oh, nevermind, it has at least the root

[15:46] <Geth> ¦ nqp: b930e35e2c | (Stefan Seifert)++ | src/NQP/World.nqp

[15:46] <Geth> ¦ nqp: No need to load ModuleLoader multiple times

[15:46] <Geth> ¦ nqp:

[15:46] <Geth> ¦ nqp: When loading a setting we can just check if the ModuleLoader is already

[15:46] <Geth> ¦ nqp: loaded. When loading a module we have already loaded a setting and thus

[15:46] <Geth> ¦ nqp: the ModuleLoader must be available already.

[15:46] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/b930e35e2c

[15:46] <nine> timotimo: ^^^

[15:46] <nine> No measurable difference though

[15:52] <tbrowder> Zoffix: what about the DRY principal? why can’t we add the spawn command back to nqp?

[15:53] <tbrowder> and shell...

[15:54] <tbrowder> *principle

[16:09] <timotimo> 0.54 before, 0.26 after

[16:13] <japhb> timotimo: What do those numbers represent?

[16:15] <timotimo> miliseconds spent doing stat and lstat calls

[16:15] <timotimo> for perl6 -e ''

[16:21] <japhb> Oh, that's a nice savings!

[16:21] <japhb> Is this with a kernel updated post-spectre/meltdown?

[16:24] <nine> timotimo: sooo..it does save a quarter of a millisecond? At least you could measure it :D

[16:24] <timotimo> nine: *shrug*, plus/minus overhead from tracing with perf trace?

[16:29] <japhb> I'll take 100 of those quarter-millisecond improvements, please.  That would be *great*.

[16:30] <japhb> Also, there's just something that chafes in my mind knowing that we're doing a lot of completely wasted effort somewhere.

[16:30] <japhb> Even if the total time spent on it "isn't that big".

[16:30] <nine> japhb: do you need it gift wrapped?

[16:30] <japhb> I mean, perl5 starts in like 3ms, so saving you saved almost 10% of a perl5 startup.  ;-)

[16:31] <japhb> japhb: With a bow, thanks.  ;-)

[16:32] <timotimo> perf says MVM_validate_static_frame takes 1.85% of time in perl6 -e '', someone want to optimize the bytecode validator? :P

[16:32] <timotimo> maybe come up with some vectorization opportunities or something

[17:04] <lizmat> m: my @a; @a[4] = 42; dd @a; my @b = reverse @a; dd @b  # this feels like a bug

[17:04] <camelia> rakudo-moar a2499c90f: OUTPUT: «Array @a = [Any, Any, Any, Any, 42]␤Array @b = [42, Mu, Mu, Mu, Mu]␤»

[17:05] <lizmat> my @a; @a[4] = 42; dd @a; my @b = reverse @a; @b[10] = 666; dd @b

[17:05] <lizmat> m: my @a; @a[4] = 42; dd @a; my @b = reverse @a; @b[10] = 666; dd @b

[17:05] <camelia> rakudo-moar a2499c90f: OUTPUT: «Array @a = [Any, Any, Any, Any, 42]␤Array @b = [42, Mu, Mu, Mu, Mu, Any, Any, Any, Any, Any, 666]␤»

[17:10] <lizmat> GH #1444

[17:29] <lizmat> PSA: I won't be able to do the Perl 6 Weekly on 5 February

[17:30] <lizmat> timotimo won't be able to do it either because of personal situation (yeah, timing is bad)

[17:30] <lizmat> is there someone here who would want to try to do the Perl 6 Weekly once?

[17:31] <lizmat> If we can't find anybody, then we'll have to make it a bi-weekly once  :)

[17:56] <Zoffix> lizmat: Yeah, I can do it. I'd need access to post on the weekly blog tho.

[17:57] <Zoffix> wordpress username @zoffix

[17:57] <lizmat> Zoffix: cool!

[17:58] <[Coke]> Zoffix++

[17:58] <El_Che> Zoffix: you're change to rename the "_Perl 6_ weekly news"

[17:58] <El_Che> I mean, alias

[17:58] <El_Che> ;)

[18:04] <timotimo> Zoffix: check your emails or something :)

[18:05] <lizmat> Zoffix: to be clear, the 29 January one I'll do still

[18:07] <Zoffix> timotimo: got the invite. Thanks.

[18:07] <Zoffix> lizmat: understood.

[18:16] <Zoffix> There's no easy way to set a dynvar for just the first arg of an op, is there? I need to mark first arg of `andthen` as $*IN_STMT_MOD := 1;

[18:21] * lizmat draws a blank

[18:21] <lizmat> perl -E 'say length "🦋"'   # 4

[18:21] <lizmat> *sigh*

[18:22] <ilmari> $ perl -Mutf8 -E 'say length "🦋"'

[18:22] <ilmari> 1

[18:23] <Zoffix> :)

[18:23] <lizmat> aaaaahh

[18:23] <lizmat> ilmari++

[18:26] <lizmat> dinner&

[19:28] <stmuk> http://pl6anet.org/drop/rakudo-star-2018.01-RC0.tar.gz

[19:28] <stmuk> (I may have to add some more test deps for HTTP::UserAgent in RC1)

[20:13] <nine> Why on earth do we assemble strings representing our standard repositories just to parse them again when we assemble the repository list? Could anything be more wasteful? And why have I stared at this code for 2 years without realizing that?

[20:14] <geekosaur> because this was all slapped together rapidly post-Christmas >.>

[20:27] <AlexDaniel> stmuk++

[20:34] <[Coke]> nine++

[21:05] <dogbert17> AlexDaniel: hasn't GH #1430 been fixed?

[21:27] <AlexDaniel> GH#1430

[21:27] <synopsebot> GH#1430 [open]: https://github.com/rakudo/rakudo/issues/1430 [UNI][regression] “1” is whitespace according to uniprop

[21:27] <AlexDaniel> yeees

[21:28] <AlexDaniel> samcv: ↑

[21:28] <AlexDaniel> I marked it as testneeded because I don't know if there's a test

[22:01] <lizmat> hmmm... do we have a link to an explanation of how precompilation works in Rakudo Perl 6 ?

[22:01] <lizmat> Google only comes up with https://docs.perl6.org/programs/00-running#Affecting_Precompilation

[22:02] <lizmat> and a bunch of (old) bug reports about precompilation

[22:03] <stmuk> lizmat: I found https://www.youtube.com/watch?v=uu8auCKCUN4 useful

[22:49] <travis-ci> Rakudo build passed. Zoffix Znet '[NQP Bump] Brings 9 commits

[22:49] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/333092649 https://github.com/rakudo/rakudo/compare/fa4db18c7603...d1a48efc975a

[22:53] * lizmat calls it a day&

[23:33] <samcv> AlexDaniel: there is a test

[23:33] <AlexDaniel> samcv: yeah, Zoffix++ found it already

[23:33] <samcv> cool :)

[23:33] <AlexDaniel> thanks!

[23:33] <samcv> i'm working on a script that will update the moarvm.org page after release. since it doesnt have any automated way to do it

[23:34] <AlexDaniel> awesome!

[23:48] <samcv> woo http://moarvm.org/releases.html

[23:48] <samcv> i think everything should be ok.

[23:49] <samcv> had to modify ChangeLog to make it render properly with a MD rederer and make it retain the same format
