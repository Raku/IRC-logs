[00:10] <Geth> ¦ rakudo: 879b33405e | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[00:10] <Geth> ¦ rakudo: Fix crash in loop + FIRST + LAST when it's wanted

[00:10] <Geth> ¦ rakudo:

[00:10] <Geth> ¦ rakudo: Fixes R#1623 https://github.com/rakudo/rakudo/issues/1623

[00:10] <Geth> ¦ rakudo:

[00:10] <Geth> ¦ rakudo: When we gen Seq.from-loop, we don't anticipate that the body of

[00:10] <synopsebot> R#1623 [open]: https://github.com/rakudo/rakudo/issues/1623 Phasers FIRST/LAST in sub-loop doesn't compile: Cannot reference undeclared local 'LOOP_BLOCK_1'

[00:10] <Geth> ¦ rakudo: the loop was rewritten and there are other bits outside the `while`

[00:10] <Geth> ¦ rakudo: op that we need to take care of, so we end up moving the `call` on

[00:10] <Geth> ¦ rakudo: <…commit message has 17 more lines…>

[00:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/879b33405e

[00:12] <Geth> ¦ roast: dab963752c | (Zoffix Znet)++ | S04-phasers/in-loop.t

[00:12] <Geth> ¦ roast: Test loop + FIRST + LAST as last statement in subs don't crash

[00:12] <Geth> ¦ roast:

[00:12] <Geth> ¦ roast: Closes R#1623 https://github.com/rakudo/rakudo/issues/1623

[00:12] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/879b33405e

[00:12] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/dab963752c

[00:38] <Geth> ¦ roast: 0cc147d9fe | (Zoffix Znet)++ | 2 files

[00:38] <Geth> ¦ roast: Split up tests into two files

[00:38] <Geth> ¦ roast:

[00:38] <Geth> ¦ roast: A single file takes ages to run

[00:38] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/0cc147d9fe

[00:38] <Geth> ¦ rakudo: 13382cc8a8 | (Zoffix Znet)++ | t/spectest.data

[00:38] <Geth> ¦ rakudo: Add S32-exceptions/misc2.t to list of test files to run

[00:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/13382cc8a8

[01:35] <Zoffix> ZOFFLOP: t/spec/S11-modules/perl6lib.t

[02:05] <Geth> ¦ roast: 27f5112b9a | (Zoffix Znet)++ | MISC/bug-coverage.t

[02:05] <Geth> ¦ roast: No segfaults in sub call with ternary

[02:05] <Geth> ¦ roast:

[02:05] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1645 R#1645

[02:05] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/27f5112b9a

[02:05] <synopsebot> R#1645 [open]: https://github.com/rakudo/rakudo/issues/1645 [SEGV][regression][testneeded] Very simple spesh-related segfault

[02:10] <Geth> ¦ roast: a8dbf575ee | (Zoffix Znet)++ | S03-operators/is-divisible-by.t

[02:10] <Geth> ¦ roast: No crashes with bigint args in %% and % ops

[02:10] <Geth> ¦ roast:

[02:10] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1640 R#1640

[02:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a8dbf575ee

[02:10] <synopsebot> R#1640 [open]: https://github.com/rakudo/rakudo/issues/1640 [regression][testneeded] %% fails with bigInt, bigInt arguments 

[02:15] <Geth> ¦ roast: faea349d53 | (Zoffix Znet)++ | S04-statements/once.t

[02:15] <Geth> ¦ roast: Remove trailing whitespace

[02:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/faea349d53

[02:16] <Geth> ¦ roast: 37548511d8 | (Zoffix Znet)++ | S04-statements/once.t

[02:16] <Geth> ¦ roast: Test `once` does not containerize its values

[02:16] <Geth> ¦ roast:

[02:16] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1610 R#1610

[02:16] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/37548511d8

[02:16] <synopsebot> R#1610 [closed]: https://github.com/rakudo/rakudo/issues/1610 [testneeded] `once` places the return value into unwanted Scalar container

[02:20] <Geth> ¦ roast: 1719f50a3d | (Zoffix Znet)++ | S16-io/comb.t

[02:20] <Geth> ¦ roast: Move cleanup closer to creation of file

[02:20] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1719f50a3d

[02:33] <Geth> ¦ roast: f464b68b3e | (Zoffix Znet)++ | 3 files

[02:33] <Geth> ¦ roast: Test comb(Regex) returns Seq

[02:33] <Geth> ¦ roast:

[02:33] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1564 R#1564

[02:33] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f464b68b3e

[02:33] <synopsebot> R#1564 [open]: https://github.com/rakudo/rakudo/issues/1564 [testneeded] The Str "comb" method (Regex candidate) returns List instead of Seq

[02:48] <Geth> ¦ roast: e70ee88b61 | (Zoffix Znet)++ | MISC/bug-coverage-stress.t

[02:48] <Geth> ¦ roast: Cover async issue from R#1535

[02:48] <Geth> ¦ roast:

[02:48] <Geth> ¦ roast: https://github.com/rakudo/rakudo/issues/1535

[02:48] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e70ee88b61

[02:48] <synopsebot> R#1535 [open]: https://github.com/rakudo/rakudo/issues/1535 [regression][testneeded] Some difference between implicit and explicit return

[07:09] <nine> .tell jnthn Can you please have a look at this? https://github.com/rakudo/rakudo/issues/1535 I'm flabbergasted about this

[07:09] <yoleaux> nine: I'll pass your message to jnthn.

[07:23] <Zoffix> ZOFVM: Files=1294, Tests=153283, 155 wallclock secs (21.76 usr  3.22 sys + 3290.90 cusr 171.14 csys = 3487.02 CPU)

[07:28] <Geth> ¦ rakudo: f174d4b406 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[07:28] <Geth> ¦ rakudo: Make unwrapped dispatch:<var> curriable

[07:28] <Geth> ¦ rakudo:

[07:28] <Geth> ¦ rakudo: - Makes invocation of *.&uc 7.6x faster; the more candidates the

[07:28] <Geth> ¦ rakudo:     routine has the more fasterer the gain will be

[07:28] <Geth> ¦ rakudo: - Fixes https://github.com/rakudo/rakudo/issues/1694 R#1694

[07:28] <Geth> ¦ rakudo:     We used to avoid unwrapping dispatch:<var> with curries, but the

[07:28] <synopsebot> R#1694 [open]: https://github.com/rakudo/rakudo/issues/1694 [regression][⚠ blocker ⚠] WhateverCode no longer curries `.&{ }`

[07:28] <Geth> ¦ rakudo:     check only checked if the immediate invocant was a curry. This

[07:28] <Geth> ¦ rakudo:     didn't cover cases like `*.foo.&bar`, so we ended up trying to

[07:28] <Geth> ¦ rakudo:     curry unwrapped dispatch:<var> and the currier didn't know how

[07:28] <Geth> ¦ rakudo:     to do that. Fix by teaching it.

[07:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f174d4b406

[07:29] <Geth> ¦ roast: b5b85c1843 | (Zoffix Znet)++ | S02-types/whatever.t

[07:29] <Geth> ¦ roast: Test curried .& calls

[07:29] <Geth> ¦ roast:

[07:29] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1694 R#1694

[07:29] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/f174d4b406

[07:29] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b5b85c1843

[07:39] <Geth> ¦ rakudo: ae9486c767 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[07:39] <Geth> ¦ rakudo: Use better conditional

[07:39] <Geth> ¦ rakudo:

[07:39] <Geth> ¦ rakudo: In case we ever get stuff with curriable-call-offset of zero

[07:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ae9486c767

[07:47] <Geth> ¦ rakudo: c103459d87 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[07:47] <Geth> ¦ rakudo: Use better conditional

[07:47] <Geth> ¦ rakudo:

[07:47] <Geth> ¦ rakudo: In case we ever get stuff with curriable-call-offset of zero

[07:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c103459d87

[07:58] <Zoffix> We should get an IRC bot reporting AppVeyor failures

[08:02] <Geth> ¦ rakudo: ee5150e424 | (Moritz Lenz)++ | t/02-rakudo/scoping-regression.t

[08:02] <Geth> ¦ rakudo: Test for RT#127869: a variable can be both true and false

[08:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ee5150e424

[08:02] <synopsebot> RT#127869 [open]: https://rt.perl.org/Ticket/Display.html?id=127869 [BUG] if my $match is True and False

[08:04] <Geth> ¦ nqp: 05f45eba26 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[08:04] <Geth> ¦ nqp: [MoarVM Bump] Brings 2 commits

[08:04] <Geth> ¦ nqp:

[08:04] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03-94-gd115bf7...2018.03-96-gfa16746

[08:04] <Geth> ¦ nqp: fa16746 Define INFINITY for MVC

[08:04] <Geth> ¦ nqp: d44fa89 Fix loading bytecode on big endian systems

[08:04] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/05f45eba26

[08:04] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03-94-gd115bf7...2018.03-96-gfa16746

[08:04] <Geth> ¦ rakudo: 5b229d71d3 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[08:04] <Geth> ¦ rakudo: [NQP Bump] Brings 2 commits

[08:05] <Geth> ¦ rakudo:

[08:05] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.03-55-g6689823...2018.03-57-g05f45eb

[08:05] <Geth> ¦ rakudo: 05f45eb [MoarVM Bump] Brings 2 commits

[08:05] <Geth> ¦ rakudo: e20fdaa Revert "Implement `cvalue` method for [NIS]Val QAST Nodes"

[08:05] <Geth> ¦ rakudo:

[08:05] <Geth> ¦ rakudo: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03-94-gd115bf7...2018.03-96-gfa16746

[08:05] <Geth> ¦ rakudo: fa16746 Define INFINITY for MVC

[08:05] <Geth> ¦ rakudo: d44fa89 Fix loading bytecode on big endian systems

[08:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5b229d71d3

[08:05] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-55-g6689823...2018.03-57-g05f45eb

[08:05] <moritz> yay, rt.perl.org now uses auth0 for login, so one can log in with github

[08:05] <moritz> ... where I have 2FA

[08:06] <Zoffix> ohhh. I didn't realize you could use github

[08:06] <Zoffix> Ah, I don't have my github email address as RT email address, so I'd not be linked to my old anyway account

[08:06] <Zoffix> .oO( did I just have a race condition in my typing? )

[08:07] <Zoffix> moritz: how come you put that test into rakudo instead of roast?

[08:09] <moritz> Zoffix: it looked very rakudo-specific to me. I know I've put such things into roast in the past, but I'm not convinced anymore that this is desirable

[08:09] <travis-ci> Rakudo build failed. Zoffix Znet 'Make unwrapped dispatch:<var> curriable

[08:09] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/363425991 https://github.com/rakudo/rakudo/compare/54137e8b14bc...f174d4b406ff

[08:09] <moritz> so basically "it's a whim"

[08:09] <buggable> [travis build above] ☠ All failures are due to: failed make test (1 failure). Across all jobs, only t/06-telemetry/03-thread.t test file failed.

[08:09] <Zoffix> moritz: I see zero rakudo-specific things in it.

[08:10] <moritz> Zoffix: where do you think would be a better location?

[08:11] <Zoffix> moritz: anywhere in roast, even if just in MISC/bug-coverage.t

[08:13] <Geth> ¦ roast: 9c6d9ac006 | (Moritz Lenz)++ | MISC/bug-coverage.t

[08:13] <Geth> ¦ roast: Test for RT#127869, $m should not be true and false

[08:13] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/9c6d9ac006

[08:13] <synopsebot> RT#127869 [resolved]: https://rt.perl.org/Ticket/Display.html?id=127869 [BUG] if my $match is True and False

[08:14] <Geth> ¦ rakudo: 77c3a9c5d2 | (Moritz Lenz)++ | t/02-rakudo/scoping-regression.t

[08:14] <Geth> ¦ rakudo: Revert "Test for RT#127869: a variable can be both true and false"

[08:14] <Geth> ¦ rakudo:

[08:14] <Geth> ¦ rakudo: This reverts commit ee5150e4247ab99a2c2aa769b3837bbfde6c8315.

[08:14] <Geth> ¦ rakudo: The test has been added to roast instead in

[08:14] <Geth> ¦ rakudo: https://github.com/perl6/roast/commit/9c6d9ac006

[08:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/77c3a9c5d2

[08:14] <moritz> Zoffix: moved it

[08:23] <Zoffix> moritz++

[08:56] <Zoffix> wtf. Can't build latest and greatest. Says "Found /home/zoffix/R/install/bin/moar version 2018.03-95-gd44fa8941, which is too old. Wanted at least 2018.03-96-gfa16746"

[08:56] <Zoffix> m: say $*PERL.version

[08:56] <camelia> rakudo-moar c8364d696: OUTPUT: «v6.c␤»

[08:56] <Zoffix> m: say $*PERL.compiler.version

[08:56] <camelia> rakudo-moar c8364d696: OUTPUT: «v2018.03.164.gc.8364.d.696␤»

[08:57] <Zoffix> that's like from a day ago

[08:57] <Zoffix> j: say $*PERL.compiler.version

[08:58] <camelia> rakudo-jvm 77c3a9c5d: OUTPUT: «v2018.03.176.g.77.c.3.a.9.c.5.d␤»

[08:58] <Zoffix> .tell nine JVM camelia now updates, thanks, but MoarVM camelia is stuck on a day-old commit

[08:58] <yoleaux> Zoffix: I'll pass your message to nine.

[08:59] <Zoffix> e: say $*PERL.compiler.version

[08:59] <evalable6> Zoffix, rakudo-moar 77c3a9c5d: OUTPUT: «v2018.03.176.g.77.c.3.a.9.c.5.d␤»

[09:02] <Zoffix> hm, ok, might've been a desynchronized build or something; nuking my Z-Script build dir and re-initializing fixed the problem

[09:13] <timotimo> do we have an rfc ticket for things like sub ($foo ||= "default if false") { } in signatures?

[09:14] <AlexDaniel> I've never seen anything like that

[09:14] <timotimo> you think you can grep for something like that in the irclogs?

[09:15] <Zoffix> timotimo: yeah, we have and that construct is problematic as it'll treat Failures as missing args

[09:15] <Zoffix> R#1245

[09:15] <synopsebot> R#1245 [open]: https://github.com/rakudo/rakudo/issues/1245 [RFC] Nil ignores default value in parameter list

[09:16] <Zoffix> And jnthn's reply: https://github.com/rakudo/rakudo/issues/1245#issuecomment-343577834

[09:16] <timotimo> ah, that's what was up

[09:16] <AlexDaniel> oh wow, on github

[09:16] <Zoffix> well, the Issue is about //= , but the same problem shows up with ||=

[09:18] <nine> ~~

[09:18] <yoleaux> 08:58Z <Zoffix> nine: JVM camelia now updates, thanks, but MoarVM camelia is stuck on a day-old commit

[09:19] <nine> Zoffix: Updating submodules ....................................     git error: fatal: destination path '/home/camelia/rakudo-m-1/nqp/MoarVM/3rdparty/libatomic_ops' already exists and is not an empty directory.

[09:20] <lizmat> nuke that dir and retry

[09:20] <Zoffix> nine: ah, need to nuke that dir

[09:20] <lizmat> been there done that :-)

[09:21] <travis-ci> Rakudo build passed. Zoffix Znet '[NQP Bump] Brings 2 commits

[09:21] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/363431708 https://github.com/rakudo/rakudo/compare/ee5150e4247a...5b229d71d31c

[09:26] <Geth> ¦ alerts: e91e1cc82d | (Zoffix Znet)++ (committed using GitHub Web editor) | README.md

[09:26] <Geth> ¦ alerts: List available severity levels

[09:26] <Geth> ¦ alerts: review: https://github.com/perl6/alerts/commit/e91e1cc82d

[09:31] <lizmat> Zoffix: perhaps a low-level P6alert is in order for the 3rdparty nuke issue ?

[09:31] <Zoffix> lizmat: I'm right in the middle of typing one :)

[09:31] <lizmat> Zoffix++

[09:32] <nine> m: say $*PERL.compiler.version

[09:32] <camelia> rakudo-moar 77c3a9c5d: OUTPUT: «Resource temporarily unavailable»

[09:32] <nine> m: say $*PERL.compiler.version

[09:32] <camelia> rakudo-moar 77c3a9c5d: OUTPUT: «v2018.03.176.g.77.c.3.a.9.c.5.d␤»

[09:33] <Zoffix> nine++

[09:44] <jnthn> morning o/

[09:44] <yoleaux> 07:09Z <nine> jnthn: Can you please have a look at this? https://github.com/rakudo/rakudo/issues/1535 I'm flabbergasted about this

[09:46] <timotimo> o/

[09:46] <Zoffix> \o

[09:47] <jnthn> D'oh, I suggested doing the submodule in a different directory name just in case something like this happened

[09:49] <jnthn> nine: huh...odd indeed

[09:51] <Geth> ¦ rakudo: 1f98b1bb3d | (Elizabeth Mattijsen)++ | src/core/array_slice.pm6

[09:51] <Geth> ¦ rakudo: Use Bool() on postcircumfix:<[ ]> adverbs params

[09:51] <Geth> ¦ rakudo:

[09:51] <Geth> ¦ rakudo: Saves one Scalar allocation per @foo[bar]:exists and the like.

[09:51] <Geth> ¦ rakudo: Inspired by 74b755992d7d43e2feb5d

[09:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1f98b1bb3d

[09:57] <travis-ci> Rakudo build passed. Moritz Lenz 'Revert "Test for RT#127869: a variable can be both true and false"

[09:57] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/363433833 https://github.com/rakudo/rakudo/compare/5b229d71d31c...77c3a9c5d264

[09:57] <synopsebot> RT#127869 [resolved]: https://rt.perl.org/Ticket/Display.html?id=127869 [BUG] if my $match is True and False

[10:01] <Geth> ¦ rakudo: 5d554ba37b | (Jonathan Worthington)++ | src/core/IO/Handle.pm6

[10:01] <Geth> ¦ rakudo: Fix error for .native-descriptor on closed handle

[10:01] <Geth> ¦ rakudo:

[10:01] <Geth> ¦ rakudo: Addresses issue #1699.

[10:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5d554ba37b

[10:01] <synopsebot> RAKUDO#1699 [open]: https://github.com/rakudo/rakudo/issues/1699 [LTA] LTA Error when Proc::Async.bind-stdout/err get unopened IO::Handle

[10:09] <Geth> ¦ rakudo: c6c251596c | (Zoffix Znet)++ | t/05-messages/03-errors.t

[10:09] <Geth> ¦ rakudo: Test bind Proc::Async to unopened handle gives useful error

[10:09] <Geth> ¦ rakudo:

[10:09] <Geth> ¦ rakudo: Closes https://github.com/rakudo/rakudo/issues/1699 R#1699

[10:09] <Geth> ¦ rakudo: Rakudo fix: https://github.com/rakudo/rakudo/commit/5d554ba37b

[10:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c6c251596c

[10:41] <Geth> ¦ rakudo: fc1922122e | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[10:41] <Geth> ¦ rakudo: Fix QAST::Block migration in `with` + loop-comprehended `for`

[10:41] <Geth> ¦ rakudo:

[10:41] <Geth> ¦ rakudo: Fixes R#1695 https://github.com/rakudo/rakudo/issues/1695

[10:41] <Geth> ¦ rakudo:

[10:41] <Geth> ¦ rakudo: The special handling of with/andthen rakes for blocks in the first

[10:41] <Geth> ¦ rakudo: arg, but wasn't expecting to get a QAST::Want, which we have in

[10:41] <synopsebot> R#1695 [open]: https://github.com/rakudo/rakudo/issues/1695 [⚠ blocker ⚠] In `for` loop nested inside `with` modifier, the topic $_ becomes a "null object"

[10:41] <Geth> ¦ rakudo: the Issue's code. Fix by teaching it to descend into those.

[10:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fc1922122e

[10:42] <Geth> ¦ roast: 3594ad57f6 | (Zoffix Znet)++ | MISC/bug-coverage.t

[10:42] <Geth> ¦ roast: Remove trailing whitespace

[10:42] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3594ad57f6

[10:42] <Geth> ¦ roast: 52edb03dae | (Zoffix Znet)++ | MISC/bug-coverage.t

[10:42] <Geth> ¦ roast: Test var scoping with/for/andthen combinations

[10:42] <Geth> ¦ roast:

[10:42] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1695 R#1695

[10:42] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/fc1922122e

[10:42] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/52edb03dae

[10:51] <Geth> ¦ roast: 38c9dc5fd5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-names/is_default.t

[10:51] <Geth> ¦ roast: Add extra tests for typed:D attributes

[10:51] <Geth> ¦ roast:

[10:51] <Geth> ¦ roast: Closes RT#126318. A lot of tests for typed attributes were added in

[10:51] <Geth> ¦ roast: ce1a5a2e6b5b199c0df69a83cf66f1b830ee47e8, but the ticket also

[10:51] <Geth> ¦ roast: mentions :D constraints so this commit should top it off.

[10:51] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/38c9dc5fd5

[10:51] <synopsebot> RT#126318 [open]: https://rt.perl.org/Ticket/Display.html?id=126318 [BUG] trait 'is default' on attributes has no effect

[11:06] <Geth> ¦ roast: 82d3a883a5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-types/whatever.t

[11:06] <Geth> ¦ roast: Extra test for compile time Whatever curry

[11:06] <Geth> ¦ roast:

[11:06] <Geth> ¦ roast: Tests for the issue were added in 79dff96fc9f383616dd192ef016725395323887b,

[11:06] <Geth> ¦ roast: topping it off with one extra test to close RT#130505.

[11:06] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/82d3a883a5

[11:06] <Geth> ¦ roast: 75897d5070 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-names/is_default.t

[11:06] <Geth> ¦ roast: Use %() instead of {} in recently committed test

[11:06] <synopsebot> RT#130505 [open]: https://rt.perl.org/Ticket/Display.html?id=130505 [LTA] double SORRY (BEGIN (1, 2)[*-1])

[11:06] <Geth> ¦ roast:

[11:06] <Geth> ¦ roast: Doesn't make any difference, I just like it better this way.

[11:06] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/75897d5070

[11:08] <Geth> ¦ roast: dogbert17++ created pull request #410: Add tests for RT #129142

[11:08] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/410

[11:08] <synopsebot> RT#129142 [open]: https://rt.perl.org/Ticket/Display.html?id=129142 [BUG] Parse error when coercing an enum from a coercion of an enum from an int

[11:14] <dogbert17> Zoffix: fixed (I think), i.e. https://github.com/perl6/roast/pull/410

[11:14] <Geth> ¦ rakudo: d3eefa21c3 | (Elizabeth Mattijsen)++ | src/core/hash_slice.pm6

[11:14] <Geth> ¦ rakudo: Give %h<a>:delete and %h<a>:delete their own candidate

[11:14] <Geth> ¦ rakudo:

[11:14] <Geth> ¦ rakudo: Saves 2 allocations per call.  Makes the postcircumfix:<[]> in these

[11:14] <Geth> ¦ rakudo: cases about 1.5x as fast.

[11:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d3eefa21c3

[11:22] <Geth> ¦ nqp: e8fdc66564 | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTRegexCompilerMAST.nqp

[11:22] <Geth> ¦ nqp: Clean up some odd naming in QAST regex compiler

[11:22] <Geth> ¦ nqp:

[11:22] <Geth> ¦ nqp: Also clean up some mis-indentation.

[11:22] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/e8fdc66564

[11:25] <timotimo> lizmat: looks like the two things in that commit message are the same?

[11:26] <timotimo> %h<a>:delete and %h<a>:delete?

[11:26] <lizmat> argh s:2nd/delete/exists/

[11:28] <timotimo> :)

[11:36] <Geth> ¦ roast: jstuder-gh++ created pull request #411: Rakudo Issue 1622: Test empty negative char class doesn't fail

[11:36] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/411

[11:49] <Geth> ¦ roast: 8dfa2644d0 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-names/is_default.t

[11:49] <Geth> ¦ roast: Rework the test using throws-like

[11:49] <Geth> ¦ roast:

[11:49] <Geth> ¦ roast: Not only we now test the actual exception, it'll also be faster.

[11:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8dfa2644d0

[11:52] <Geth> ¦ roast: 933382e1c9 | (Zoffix Znet)++ | S02-names/is_default.t

[11:52] <Geth> ¦ roast: Remove unneeded Test::Util use

[11:52] <Geth> ¦ roast:

[11:52] <Geth> ¦ roast: (missing `use lib` for it in the first place)

[11:52] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/933382e1c9

[11:53] <Geth> ¦ roast: e7047f191a | (Zoffix Znet)++ | S04-statements/for.t

[11:53] <Geth> ¦ roast: Remove trailing whitespace

[11:53] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e7047f191a

[11:53] <Geth> ¦ nqp: 03a59be5f4 | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTRegexCompilerMAST.nqp

[11:53] <Geth> ¦ nqp: Only load cclass constants if they are needed

[11:53] <Geth> ¦ nqp:

[11:53] <Geth> ¦ nqp: We loaded them into registers at the start of every single regex that

[11:53] <Geth> ¦ nqp: was compiled, even though a fraction of the regexes use them. This thus

[11:54] <Geth> ¦ nqp: saves a couple of instructions (though ones that spesh would kick out)

[11:54] <Geth> ¦ nqp: per regex. Reduces the size of the NQP grammar's compiled output by 3KB.

[11:54] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/03a59be5f4

[11:55] <Geth> ¦ roast: 7ef189a3db | (Jeremy Studer)++ | S05-mass/stdrules.t

[11:55] <Geth> ¦ roast: Test empty negative char class doesn't fail

[11:55] <Geth> ¦ roast:

[11:55] <Geth> ¦ roast: Doesn't throw 'Iteration past end of iterator'.

[11:55] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7ef189a3db

[11:55] <Geth> ¦ roast: e784cd0807 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | S05-mass/stdrules.t

[11:55] <Geth> ¦ roast: Merge pull request #411 from jstuder-gh/empty_neg_cclass

[11:55] <Geth> ¦ roast:

[11:55] <Geth> ¦ roast: Rakudo Issue 1622: Test empty negative char class doesn't fail

[11:55] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e784cd0807

[12:00] <Geth> ¦ roast: 3b1e5fb4f1 | dogbert17++ (committed by Aleks-Daniel Jakimenko-Aleksejev) | S12-enums/basic.t

[12:00] <Geth> ¦ roast: Test nested enum coercion 

[12:00] <Geth> ¦ roast:

[12:00] <Geth> ¦ roast: Adds tests for RT#129142

[12:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3b1e5fb4f1

[12:00] <synopsebot> RT#129142 [open]: https://rt.perl.org/Ticket/Display.html?id=129142 [BUG] Parse error when coercing an enum from a coercion of an enum from an int

[12:11] <lizmat> m: dd True ^^ True  # although semantically correct, I think that should be False instead, right ?

[12:11] <camelia> rakudo-moar d3eefa21c: OUTPUT: «Nil␤»

[12:22] <Geth> ¦ nqp: jstuder-gh++ created pull request #435: [RFC] Panic when given empty character class <[ ]>

[12:22] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/435

[12:28] <AlexDaniel> m: say False ^^ 0

[12:28] <camelia> rakudo-moar d3eefa21c: OUTPUT: «0␤»

[12:28] <AlexDaniel> lizmat: “Returns the last argument if all arguments are false”

[12:29] <AlexDaniel> although… well…

[12:29] <AlexDaniel> that doesn't explain anything

[12:29] <AlexDaniel> m: say False ^^ Nil

[12:29] <camelia> rakudo-moar d3eefa21c: OUTPUT: «Nil␤»

[12:29] <AlexDaniel> m: say True ^^ True

[12:29] <camelia> rakudo-moar d3eefa21c: OUTPUT: «Nil␤»

[12:32] <Geth> ¦ rakudo: 6ad6dcbb83 | (Elizabeth Mattijsen)++ | src/core/array_slice.pm6

[12:32] <Geth> ¦ rakudo: Give @a[1]:delete and @a[1]:exists their own candidates

[12:32] <Geth> ¦ rakudo:

[12:32] <Geth> ¦ rakudo: Saves 2 allocations per call.  Makes the postcircumfix:<[]> in these

[12:32] <Geth> ¦ rakudo: cases about 1.5x as fast.

[12:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6ad6dcbb83

[12:51] <Zoffix> m: use QAST:from<NQP>; BEGIN { my $want := QAST::Want.new: QAST::Op.new(:op<call>, :name<&say>, QAST::SVal.new: :value<unvoid>), 'v', QAST::Op.new: :op<call>, :name<&say>, QAST::SVal.new: :value<void>; $want.sunk: 1; $*W.compile_time_evaluate: $, $want }

[12:51] <camelia> rakudo-moar d3eefa21c: OUTPUT: «unvoid␤»

[12:51] <Zoffix> Shouldn't it use the 'v' variant?

[12:55] <Zoffix> m: use QAST:from<NQP>; BEGIN { my $want := QAST::Want.new: QAST::Op.new(:op<call>, :name<&say>, QAST::SVal.new: :value<unvoid>), 'v', QAST::Op.new: :op<call>, :name<&say>, QAST::SVal.new: :value<void>; $want.sunk: 1; $*W.compile_time_evaluate: $, QAST::Stmts.new($want, QAST::Stmt.new) }

[12:55] <camelia> rakudo-moar 6ad6dcbb8: OUTPUT: «void␤»

[12:55] <Zoffix> ah, k, it don't give two bits about .sunk

[13:04] <Geth> ¦ roast: 1a42efd4ce | (Aleks-Daniel Jakimenko-Aleksejev)++ | S03-operators/repeat.t

[13:04] <Geth> ¦ roast: Test xx not keeping containers around

[13:04] <Geth> ¦ roast:

[13:04] <Geth> ¦ roast: Closes RT#130941.

[13:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1a42efd4ce

[13:04] <synopsebot> RT#130941 [open]: https://rt.perl.org/Ticket/Display.html?id=130941 infix:<xx> keeps containers around since October, resulting in confusing behaviour

[13:23] <Geth> ¦ nqp: e56d07ae08 | (Elizabeth Mattijsen)++ | src/QRegex/Cursor.nqp

[13:23] <Geth> ¦ nqp: Micro-opt in CAPHASH

[13:23] <Geth> ¦ nqp:

[13:23] <Geth> ¦ nqp: Doing an nqp::defined on a native str will only box unnecessarily.

[13:23] <Geth> ¦ nqp: So the isnull_s check is sufficient.

[13:23] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/e56d07ae08

[13:30] <Zoffix> Making it care about it, results in gazillion failures :) https://gist.github.com/zoffixznet/bccbf93c8c982c3b89edc2842e4115e5

[13:30] <Geth> ¦ roast: 40edf6d2c9 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-io/out-buffering.t

[13:30] <Geth> ¦ roast: Test that open handles are autoclosed on exit

[13:30] <Geth> ¦ roast:

[13:30] <Geth> ¦ roast: Resolves RT#132030.

[13:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/40edf6d2c9

[13:30] <Zoffix> BUT fixes R#1693

[13:30] <Zoffix> :)

[13:30] <synopsebot> RT#132030 [open]: https://rt.perl.org/Ticket/Display.html?id=132030 [TESTNEEDED] [REGRESSION] Broken Text::CSV tests and possibly other ecosystem fallout (buffering)

[13:30] <synopsebot> R#1693 [open]: https://github.com/rakudo/rakudo/issues/1693 [regression][⚠ blocker ⚠] Cannot find method 'Nil'

[13:32] <Geth> ¦ nqp: dcde8c1fc1 | (Elizabeth Mattijsen)++ | src/QRegex/Cursor.nqp

[13:32] <Geth> ¦ nqp: Remove apparently unused helper method

[13:32] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/dcde8c1fc1

[13:37] <Geth> ¦ nqp: 4268a25332 | (Elizabeth Mattijsen)++ | src/QRegex/Cursor.nqp

[13:37] <Geth> ¦ nqp: Prevent boxing of native str

[13:37] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/4268a25332

[13:50] <Geth> ¦ roast: a469bf2b84 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-io/out-buffering.t

[13:50] <Geth> ¦ roast: Bump test plan

[13:50] <Geth> ¦ roast:

[13:50] <Geth> ¦ roast: Oops.

[13:50] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a469bf2b84

[14:00] <Geth> ¦ nqp: a3bf10912f | (Elizabeth Mattijsen)++ | src/QRegex/Cursor.nqp

[14:00] <Geth> ¦ nqp: Prevent another unnecessary boxing

[14:00] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a3bf10912f

[14:00] <Geth> ¦ nqp: 17382e6b65 | (Elizabeth Mattijsen)++ | src/QRegex/Cursor.nqp

[14:00] <Geth> ¦ nqp: Optimize cursor_push_cstack a bit

[14:00] <Geth> ¦ nqp:

[14:00] <Geth> ¦ nqp: - don't use temporary variables we don't need

[14:00] <Geth> ¦ nqp: - don't use if ! { } else { } but if { } else { } and change the blocks around

[14:00] <Geth> ¦ nqp: - don't box native strings

[14:00] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/17382e6b65

[14:01] <dogbert17> are error messages starting with ===SORRY!=== runtime errors of kind LTA?

[14:13] <AlexDaniel> dogbert17: these typically have no line number, so LTA indeed

[14:14] <dogbert17> I'm trying to write test(s) for RT #131623 now I have to figure out where to put them

[14:14] <synopsebot> RT#131623 [open]: https://rt.perl.org/Ticket/Display.html?id=131623 [BUG] Range + detached method + map with &sub = "Cannot find method 'count' on object of type NQPMu"

[14:15] <dogbert17> I guess that a lives-ok is the proper thing to use here

[14:16] <Geth> ¦ nqp: 9b75f678e1 | (Elizabeth Mattijsen)++ | src/QRegex/Cursor.nqp

[14:16] <Geth> ¦ nqp: Optimize a loop in MATCH

[14:16] <Geth> ¦ nqp:

[14:16] <Geth> ¦ nqp: - don't box strings

[14:16] <Geth> ¦ nqp: - don't make variables we don't need

[14:16] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9b75f678e1

[14:33] <Geth> ¦ rakudo: 617624f592 | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[14:33] <Geth> ¦ rakudo: Bump NQP to get the latest micro-ops I did

[14:33] <Geth> ¦ rakudo:

[14:33] <Geth> ¦ rakudo: Perhaps some people will notice in some applications

[14:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/617624f592

[14:33] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-57-g05f45eb...2018.03-65-g9b75f67

[15:09] <Geth> ¦ roast: d78f33966c | (Aleks-Daniel Jakimenko-Aleksejev)++ | S04-statements/for.t

[15:09] <Geth> ¦ roast: Test assignment to holes when iterating arrays

[15:09] <Geth> ¦ roast:

[15:09] <Geth> ¦ roast: Closes RT#126312.

[15:09] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d78f33966c

[15:09] <synopsebot> RT#126312 [open]: https://rt.perl.org/Ticket/Display.html?id=126312 [BUG] `for @a` is not creating containers for uninitialized elements

[15:18] <Geth> ¦ rakudo: edbbc44262 | TimToady++ | src/core/Numeric.pm6

[15:18] <Geth> ¦ rakudo: infix:<->($n) should not negate

[15:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/edbbc44262

[15:27] <Geth> ¦ roast: f259c5e323 | TimToady++ | S03-operators/u2212-minus.t

[15:27] <Geth> ¦ roast: single arg version of subtraction shouldn't negate

[15:27] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f259c5e323

[16:39] <Geth> ¦ roast: jstuder-gh++ created pull request #412: Add subtest for lazy array cmp

[16:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/412

[16:43] <Geth> ¦ roast: c42516bf6d | (Jeremy Studer)++ | S03-operators/cmp.t

[16:43] <Geth> ¦ roast: Add subtest for lazy array cmp

[16:43] <Geth> ¦ roast:

[16:43] <Geth> ¦ roast: Make sure lazies behave the same as their eager counterparts.

[16:43] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c42516bf6d

[16:43] <Geth> ¦ roast: be3649424f | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | S03-operators/cmp.t

[16:43] <Geth> ¦ roast: Merge pull request #412 from jstuder-gh/lazy_arr_cmp

[16:43] <Geth> ¦ roast:

[16:43] <Geth> ¦ roast: Add subtest for lazy array cmp

[16:43] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/be3649424f

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: 36c92d58f8 | (Tobias Leich)++ | 4 files

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: Support shapes for HAS scoped attributes

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray:

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: The shape declaration on an attributes was parsed correctly since a while,

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: but now this information is passed to the repr composition. The following

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: is now supported fo CStructs and CPPStructs:

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray:

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: use NativeCall;

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: <…commit message has 6 more lines…>

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: review: https://github.com/rakudo/rakudo/commit/36c92d58f8

[22:49] <Geth> ¦ roast: ronaldxs++ created pull request #413: Update S02-types/hash_ref.t test for RT #132238

[22:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/413

[22:50] <synopsebot> RT#132238 [new]: https://rt.perl.org/Ticket/Display.html?id=132238 [LTA] $<> and “Corresponding … was at line”
