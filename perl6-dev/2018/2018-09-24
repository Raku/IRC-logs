[00:07] <Geth> ¦ rakudo/normalized-ZDRs: 6d70346cbf | (Zoffix Znet)++ | src/core/Rational.pm6

[00:07] <Geth> ¦ rakudo/normalized-ZDRs: Check for ZDRs in .floor/.ceiling

[00:07] <Geth> ¦ rakudo/normalized-ZDRs: 

[00:07] <Geth> ¦ rakudo/normalized-ZDRs: This way we generate a good error message instead of relying on

[00:07] <Geth> ¦ rakudo/normalized-ZDRs: `div` doing that for us with a normalized numerator

[00:07] <Geth> ¦ rakudo/normalized-ZDRs: 

[00:07] <Geth> ¦ rakudo/normalized-ZDRs: Also fixes .floor `fail`ing, but `.ceiling` `die`ing due to an

[00:07] <Geth> ¦ rakudo/normalized-ZDRs: extra operation. Now we constistently `fail`

[00:07] <Geth> ¦ rakudo/normalized-ZDRs: review: https://github.com/rakudo/rakudo/commit/6d70346cbf

[00:08] <Geth> ¦ roast/normalized-ZDRs: 17761c2e48 | (Zoffix Znet)++ | S32-num/rat.t

[00:08] <Geth> ¦ roast/normalized-ZDRs: Spec Rational.floor/.ceiling fail for ZDRs

[00:08] <Geth> ¦ roast/normalized-ZDRs: 

[00:08] <Geth> ¦ roast/normalized-ZDRs: Rakudo fix: https://github.com/rakudo/rakudo/commit/6d70346cbf

[00:08] <Geth> ¦ roast/normalized-ZDRs: review: https://github.com/perl6/roast/commit/17761c2e48

[00:09] <Geth> ¦ rakudo/normalized-ZDRs: c5a2eb81f0 | (Zoffix Znet)++ | src/core/Rat.pm6

[00:09] <Geth> ¦ rakudo/normalized-ZDRs: Make `==` with Rationals up to 1.55x as fast

[00:09] <Geth> ¦ rakudo/normalized-ZDRs: review: https://github.com/rakudo/rakudo/commit/c5a2eb81f0

[00:20] *** Zoffix joined
[00:20] *** p6bannerbot sets mode: +v Zoffix

[00:20] <Zoffix> ZOFFLOP: t/spec/S17-promise/lock-async-stress2.t 

[00:20] <Zoffix> That's R#2261

[00:20] <synopsebot> R#2261 [open]: https://github.com/rakudo/rakudo/issues/2261 [ASYNC] Crashes in t/spec/S17-promise/lock-async-stress2.t

[00:20] *** Zoffix left
[00:21] *** geekosaur left
[00:21] <Geth> ¦ rakudo/normalized-ZDRs: 97e8413b4f | (Zoffix Znet)++ | src/core/Rat.pm6

[00:21] <Geth> ¦ rakudo/normalized-ZDRs: Make Rational `===` Rational 2.47x as fast

[00:21] <Geth> ¦ rakudo/normalized-ZDRs: 

[00:21] <Geth> ¦ rakudo/normalized-ZDRs: We now normalize all the Rationals, so we can simplify things

[00:21] <Geth> ¦ rakudo/normalized-ZDRs: review: https://github.com/rakudo/rakudo/commit/97e8413b4f

[00:23] *** MasterDuke joined
[00:23] *** p6bannerbot sets mode: +v MasterDuke

[00:24] *** MasterDuke left
[00:24] *** MasterDuke joined
[00:24] *** herbert.freenode.net sets mode: +v MasterDuke

[00:24] *** p6bannerbot sets mode: +v MasterDuke

[00:27] *** geekosaur joined
[00:28] *** p6bannerbot sets mode: +v geekosaur

[00:31] <Geth> ¦ rakudo: zoffixznet++ created pull request #2314: Normalize ZDRs

[00:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2314

[00:31] <Geth> ¦ rakudo/master: 9 commits pushed by (Zoffix Znet)++

[00:31] <Geth> ¦ rakudo/master: d2f9b6fc21 | Remove trailing whitespace

[00:31] <Geth> ¦ rakudo/master: 671c41156a | Normalize ZDRs on Rational creation

[00:31] <Geth> ¦ rakudo/master: 75ec2248ce | Add missing decont in Rational.new for ZDRs

[00:31] <Geth> ¦ rakudo/master: a639fa9cdd | Proactively die on Rational.Str for ZDRs

[00:31] <Geth> ¦ rakudo/master: 70ea883016 | Teach DIVIDE_NUMBERS helper to normalize ZDRs

[00:31] <Geth> ¦ rakudo/master: 6d70346cbf | Check for ZDRs in .floor/.ceiling

[00:31] <Geth> ¦ rakudo/master: c5a2eb81f0 | Make `==` with Rationals up to 1.55x as fast

[00:31] <Geth> ¦ rakudo/master: 97e8413b4f | Make Rational `===` Rational 2.47x as fast

[00:31] <Geth> ¦ rakudo/master: 75cf8be723 | Merge pull request #2314 from rakudo/normalized-ZDRs

[00:31] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/d3ba449fa81e...75cf8be723b6

[00:31] <Geth> ¦ roast: zoffixznet++ created pull request #475: Normalize ZDRs

[00:31] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/475

[00:31] <Geth> ¦ roast/master: 5 commits pushed by (Zoffix Znet)++

[00:31] <Geth> ¦ roast/master: 3a34299eb6 | Change expectation of non-normalization of ZDRs

[00:31] <Geth> ¦ roast/master: 95c19bc4b7 | Don't expect .numerator to be set in DivByZero exceptions.

[00:32] <Geth> ¦ roast/master: c4c673c7c9 | Mod propspec for normalization of ZDRs

[00:32] <Geth> ¦ roast/master: 17761c2e48 | Spec Rational.floor/.ceiling fail for ZDRs

[00:32] <Geth> ¦ roast/master: 30ad4de10f | Merge pull request #475 from perl6/normalized-ZDRs

[00:32] <Geth> ¦ roast/master: review: https://github.com/perl6/roast/compare/84974bf372d8...30ad4de10fef

[00:33] <Geth> ¦ 6.d-prep: 11266ec8c8 | (Zoffix Znet)++ | 2 files

[00:33] <Geth> ¦ 6.d-prep: Make ZDR normalization as completed

[00:33] <Geth> ¦ 6.d-prep: 

[00:33] <Geth> ¦ 6.d-prep: POV: https://github.com/rakudo/rakudo/pull/2314

[00:33] <Geth> ¦ 6.d-prep: Propspec: https://github.com/perl6/roast/pull/475

[00:33] <Geth> ¦ 6.d-prep: Docs: https://github.com/perl6/doc/pull/2327

[00:33] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/11266ec8c8

[00:36] *** buggable left
[00:36] *** buggable joined
[00:36] *** ChanServ sets mode: +v buggable

[00:37] *** p6bannerbot sets mode: +v buggable

[01:09] *** fake_space_whale left
[01:20] *** agk18 joined
[01:23] *** calbers18 joined
[01:24] *** agk18 left
[01:25] *** calbers18 left
[01:28] *** ZzZombo left
[02:20] *** ZzZombo joined
[02:20] *** p6bannerbot sets mode: +v ZzZombo

[03:05] *** pgervase joined
[03:07] *** pgervase left
[03:27] *** seanicus0 joined
[03:32] *** seanicus0 left
[04:44] *** lizmat left
[06:19] *** robertle joined
[06:20] *** p6bannerbot sets mode: +v robertle

[06:45] <[Tux]> Rakudo version 2018.09-24-g75cf8be72 - MoarVM version 2018.09

[06:45] <[Tux]> csv-test-xs-20      0.427 -  0.435

[06:45] <[Tux]> test-t --race       0.911 -  0.917

[06:45] <[Tux]> csv-ip5xs           0.907 -  0.945

[06:45] <[Tux]> test-t              2.107 -  2.123

[06:45] <[Tux]> csv-ip5xs-20        7.178 -  7.639

[06:46] <[Tux]> test                8.887 -  8.956

[06:46] <[Tux]> test-t-20 --race   11.798 - 12.311

[06:46] <[Tux]> csv-parser         24.272 - 24.797

[06:46] <[Tux]> test-t-20          37.446 - 37.890

[06:46] <[Tux]> yeah, disappointing numbers. I'll run a second one later today over ssh when not working on the box

[07:03] *** [TuxCM] left
[07:22] *** stmuk_ joined
[07:22] *** p6bannerbot sets mode: +v stmuk_

[07:24] *** stmuk left
[07:27] *** patrickb joined
[07:27] *** p6bannerbot sets mode: +v patrickb

[07:31] *** stmuk joined
[07:32] *** p6bannerbot sets mode: +v stmuk

[07:33] *** stmuk_ left
[08:03] *** robertle left
[08:05] *** robertle joined
[08:06] *** p6bannerbot sets mode: +v robertle

[08:23] *** robertle_ joined
[08:23] *** lizmat joined
[08:23] *** p6bannerbot sets mode: +v lizmat

[08:23] <lizmat> Files=1254, Tests=76151, 338 wallclock secs (15.81 usr  5.37 sys + 2375.57 cusr 221.43 csys = 2618.18 CPU)

[08:23] *** p6bannerbot sets mode: +v robertle_

[08:24] *** robertle1 joined
[08:24] *** p6bannerbot sets mode: +v robertle1

[08:24] *** robertle left
[08:25] *** Ven` joined
[08:25] *** p6bannerbot sets mode: +v Ven`

[08:50] *** stmuk_ joined
[08:51] *** p6bannerbot sets mode: +v stmuk_

[08:52] *** stmuk left
[08:56] *** [TuxCM] joined
[08:57] *** p6bannerbot sets mode: +v [TuxCM]

[09:03] *** [TuxCM] left
[09:12] *** pmurias joined
[09:12] *** p6bannerbot sets mode: +v pmurias

[09:24] *** kroovy joined
[09:29] *** kroovy left
[09:45] *** ExtraCrispy left
[09:55] *** brrt joined
[09:56] *** p6bannerbot sets mode: +v brrt

[10:11] *** r_hector20 joined
[10:13] *** ZzZombo left
[10:13] *** r_hector20 left
[10:14] *** Ven` left
[10:34] *** Skarn19 joined
[10:35] *** jnthn is now known as jnthn-nomsg

[10:42] *** Skarn19 left
[10:43] *** ExtraCrispy joined
[10:44] *** p6bannerbot sets mode: +v ExtraCrispy

[10:53] *** brrt left
[11:24] *** ZzZombo joined
[11:24] *** p6bannerbot sets mode: +v ZzZombo

[11:33] *** Guest36318 joined
[11:38] *** pmurias left
[11:39] *** pmurias joined
[11:39] *** p6bannerbot sets mode: +v pmurias

[11:41] *** Guest36318 left
[11:41] *** Ven` joined
[11:42] *** p6bannerbot sets mode: +v Ven`

[11:46] <lizmat> notable6: weekly

[11:46] <notable6> lizmat, 6 notes: https://gist.github.com/6971560dee95933cab1968391ca4f94b

[12:12] *** Windy joined
[12:12] <lizmat> reportable: 2018-09-10T00:00:00Z 2018-09-17T00:00:00Z

[12:12] <reportable6> lizmat, OK, working on it! This may take up to 40 seconds

[12:13] <lizmat> reportable: 2018-09-17T00:00:00Z 2018-09-24T00:00:00Z

[12:13] <lizmat> I guess reportable6 only does one at at time

[12:13] <reportable6> lizmat, OK, working on it! This may take up to 40 seconds

[12:13] <reportable6> lizmat, https://gist.github.com/1aa8c212c09739d7f5239bd5f5a54562

[12:14] <reportable6> lizmat, https://gist.github.com/f36ec025ec52f11b2b17d806784fb42c

[12:14] <lizmat> notable6: weekly reset

[12:14] <notable6> lizmat, Moved existing notes to “weekly_2018-09-24T12:14:26Z”

[12:16] *** Windy left
[12:26] *** hoonetorg8 joined
[12:27] <Geth> ¦ 6.d-prep: 824e24a000 | (Christopher Bottoms)++ (committed using GitHub Web editor) | TODO/COMPLETED/completed-FEATURES.md

[12:27] <Geth> ¦ 6.d-prep: (minor) fixed link path

[12:27] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/824e24a000

[12:31] *** hoonetorg8 left
[12:33] <AlexDaniel> lizmat: 2018-09-17T00:00:00Z 2018-09-24T00:00:00Z

[12:33] <AlexDaniel> oops

[12:33] <AlexDaniel> wrong bot :)

[12:33] <AlexDaniel> reportable6: 2018-09-17T00:00:00Z 2018-09-24T00:00:00Z

[12:33] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[12:33] <lizmat> AlexDaniel: thanks, but I just it myself  :-)

[12:34] <AlexDaniel> lizmat: yes, but I deleted the spam

[12:34] <reportable6> AlexDaniel, https://gist.github.com/16d41d838a90999b130dba67a8de3089

[12:34] <lizmat> ah?  ok

[12:34] <AlexDaniel> yeah, there was one spammy RT ticket

[12:34] <lizmat> I see

[12:34] <lizmat> ok

[12:34] <AlexDaniel> lizmat++

[12:51] *** Ven` left
[12:52] *** Ven` joined
[12:53] *** p6bannerbot sets mode: +v Ven`

[13:07] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/09/24/2018-39-less-than-two/

[13:10] <cognominal-p6> yea

[13:12] <jnthn-nomsg> ooh, earlier than usual today :)

[13:13] <lizmat> yeah, have some other stuff to do the rest of the day

[13:58] <|Tux|> Rakudo version 2018.09-24-g75cf8be72 - MoarVM version 2018.09

[13:58] <|Tux|> csv-test-xs-20      0.421 -  0.430

[13:58] <|Tux|> test-t --race       0.875 -  0.886

[13:58] <|Tux|> csv-ip5xs           0.913 -  0.953

[13:58] <|Tux|> test-t              1.997 -  2.040

[13:58] <|Tux|> csv-ip5xs-20        7.249 -  7.343

[13:58] <|Tux|> test                8.475 -  8.502

[13:58] <|Tux|> test-t-20 --race   11.704 - 11.737

[13:58] <|Tux|> csv-parser         22.126 - 22.394

[13:58] <|Tux|> test-t-20          35.176 - 35.956

[13:59] <timotimo> sweet, there's another sub-2 time

[14:00] <|Tux|> it shows the noise-window of actively working on the desktop and doing it remote as nothing changed in between these two timings

[14:02] *** holla12 joined
[14:04] *** holla12 left
[14:08] *** edmoore5 joined
[14:14] *** edmoore5 left
[14:22] *** Ven` left
[14:25] *** ndowens4 joined
[14:29] *** ndowens4 left
[14:33] <Geth> ¦ nqp: bc5099ddce | (Elizabeth Mattijsen)++ | tools/build/MOAR_REVISION

[14:33] <Geth> ¦ nqp: Bump Moar for *many* changes

[14:33] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/bc5099ddce

[14:33] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.09...2018.09-69-gdeba2e1

[14:35] *** Ven` joined
[14:35] *** p6bannerbot sets mode: +v Ven`

[14:45] <Geth> ¦ rakudo: 43919c6b84 | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[14:45] <Geth> ¦ rakudo: Bump NQP for latest (big) batch of MoarVM goodies

[14:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/43919c6b84

[14:45] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.09...2018.09-1-gbc5099d

[14:46] <lizmat> my test-t timing dropped from 1.821 to 1.632

[14:47] <lizmat> 1.581

[14:47] <lizmat> 1.542

[14:47] <lizmat> m; say 1.821 / 1542

[14:47] <lizmat> m: say 1.821 / 1.542

[14:47] <camelia> rakudo-moar 75cf8be72: OUTPUT: «1.180934␤»

[14:48] <lizmat> so about 18% faster  :-)

[14:48] <lizmat> [Tux] : ^^

[14:48] <jnthn-nomsg> That's quite nice :)

[14:48] <lizmat> and that's without the escape analysis bits, right ?

[14:49] <lizmat> FWIW, I don't really see a change with --race: I guess we're running into the warmup limits there

[14:50] <jnthn-nomsg> Yeah, pea is at a very early stage and still in a branch :)

[14:51] <dogbert2> wasn't there some postrelease-opts in Rakudo as well?

[14:51] <lizmat> post-release-2018.08 is the latest I saw

[14:52] <dogbert2> aha

[14:54] <dogbert2> what about fixes like https://github.com/rakudo/rakudo/commit/5f55d762725df426c267641fcea38b6432b610a8 are they already merged?

[14:55] <lizmat> yeah, that one was already in master afak

[14:55] <lizmat> afaik

[14:56] <dogbert2> cool

[15:07] *** scott-ph13 joined
[15:10] *** scott-ph13 left
[15:25] *** fake_space_whale joined
[15:26] *** p6bannerbot sets mode: +v fake_space_whale

[15:30] *** Zoffix joined
[15:30] *** p6bannerbot sets mode: +v Zoffix

[15:30] <Geth> ¦ rakudo: 2bdf2b35a1 | (Elizabeth Mattijsen)++ | src/core/List.pm6

[15:30] <Geth> ¦ rakudo: Make 'my @a is List = 1,2,3' work

[15:30] <Geth> ¦ rakudo: 

[15:30] <Geth> ¦ rakudo: Add a candidate for LIST.STORE(:$initialize!), which does not interfere

[15:30] <Geth> ¦ rakudo: with the normal use of List.STORE that is used for ($a,$b,$c) = 1,2,3

[15:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2bdf2b35a1

[15:41] *** patrickb left
[15:48] <Zoffix> ZOFFLOP: t/spec/S12-class/stubs.t (SEGV during last test)

[15:54] <Zoffix> ZOFVM: Files=1310, Tests=153194, 166 wallclock secs (27.58 usr  3.75 sys + 3624.71 cusr 160.92 csys = 3816.96 CPU)

[15:58] *** jnthn-nomsg is now known as jnthn

[16:12] <AlexDaniel> Zoffix: segvs are rare, no? Maybe file a ticket right away

[16:14] <Zoffix> Rare? Most of ZOFFLOPs are SEGV I think

[16:15] * Zoffix is too lazy to file

[16:15] <AlexDaniel> I should run spectest more often :)

[16:16] <AlexDaniel> or stress even

[16:18] *** robertle1 left
[16:18] *** robertle_ left
[16:32] <pmurias> nqp-truffle just started being able to load a (partial) NQP setting using the ModuleLoader (rather then have in concated on in string form) :), got to clean it up and cut it up into commits

[16:36] <dogbert17> AlexDaniel: perhaps you could to a toaster run in order to give the new opts a workout

[16:37] <dogbert17> *do

[16:39] *** fake_space_whale left
[16:46] <Zoffix> Cue in reels of "crazy emoji operators" discussions in 3... 2... 1...

[16:46] <Zoffix> In Perl 6 6.d you're now able to harness the Power of The Atom! Thread-safe atomic operations on a new atomicint type! https://marketing.perl6.org/id/1537803105/pdf_digital

[16:47] <timotimo> we'll still want to figure out the thing where if you put a variant selector on the atom symbol it won't be recognized

[16:48] *** Kaiepi joined
[16:48] <Zoffix> .oO( make variant selector offer different features :P )

[16:49] *** p6bannerbot sets mode: +v Kaiepi

[16:50] *** Zoffix left
[17:35] <Geth> ¦ rakudo: b537ce2e5a | (Elizabeth Mattijsen)++ | 2 files

[17:35] <Geth> ¦ rakudo: Allow for initializations of "is List" attributes

[17:35] <Geth> ¦ rakudo: 

[17:35] <Geth> ¦ rakudo: This commit makes it possible to assign to attributes marked as "is List",

[17:35] <Geth> ¦ rakudo: so that you can create Listy attributes that are immutable.

[17:35] <Geth> ¦ rakudo: 

[17:35] <Geth> ¦ rakudo:     class A {

[17:35] <Geth> ¦ rakudo:         has @.foo is List

[17:35] <Geth> ¦ rakudo: <…commit message has 6 more lines…>

[17:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b537ce2e5a

[17:35] <lizmat> dinner&

[17:35] <AlexDaniel> dogbert17: anyone can do that

[17:37] <AlexDaniel> I'm running out of GCE credit :D

[17:38] <AlexDaniel> but my next generation toaster should run at a fraction of cpu time, I just need to finish it

[17:38] <AlexDaniel> the issue with it currently is that whateverable blocks on the release path whenever it runs anything

[17:38] <AlexDaniel> so I can't parallelize it, but it's trivial to fix

[17:38] *** patrickb joined
[17:39] <AlexDaniel> in fact I should've fixed it earlier because Quotable already does this: https://github.com/perl6/whateverable/blob/a7ddc02ac2c5e159bff41072fe2e8d376ca50fa6/xbin/Quotable.p6#L35-L60

[17:39] *** p6bannerbot sets mode: +v patrickb

[17:39] <AlexDaniel> so it tests on HEAD, HEAD^, HEAD^^, etc. in parallel so that it's not locked :D

[17:40] <AlexDaniel> also once we get code from JSON::Fast into rakudo it will help both toasters

[17:41] <AlexDaniel> as a lot of it is spent on zef doing json parsing, as far as I can see

[17:41] <AlexDaniel> s/release path/build path/g

[17:42] *** Ven` left
[17:49] *** brrt joined
[17:50] *** p6bannerbot sets mode: +v brrt

[18:05] <tony-o> same here, not enough log history in my irc

[18:12] *** travis-ci joined
[18:12] *** p6bannerbot sets mode: +v travis-ci

[18:12] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Allow for initializations of "is List" attributes

[18:12] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/432583987 https://github.com/rakudo/rakudo/compare/2bdf2b35a142...b537ce2e5ac3

[18:12] *** travis-ci left
[18:12] <buggable> [travis build above] ✓ All failures are due to: timeout (1 failure).

[18:33] <Geth> ¦ nqp/truffle: 09448ffc7f | (Paweł Murias)++ | 19 files

[18:33] <Geth> ¦ nqp/truffle: [truffle] Load a NQP setting properly using a ModuleLoader

[18:33] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/09448ffc7f

[18:33] <Geth> ¦ nqp/truffle: 76652d25b7 | (Paweł Murias)++ | 6 files

[18:33] <Geth> ¦ nqp/truffle: [truffle] Remove a bunch of debugging print statements

[18:33] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/76652d25b7

[18:33] <Geth> ¦ nqp/truffle: 7ec3a18ab7 | (Paweł Murias)++ | src/vm/jvm/runtime/org/perl6/nqp/truffle/nodes/expression/NQPElemsNode.java

[18:33] <Geth> ¦ nqp/truffle: [truffle] Support nqp::elems on hashes

[18:33] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/7ec3a18ab7

[18:52] *** AlexDaniel left
[18:52] *** AlexDaniel joined
[18:52] *** p6bannerbot sets mode: +v AlexDaniel

[18:54] *** kloinka28 joined
[18:55] <Geth> ¦ nqp: dec8bd79b4 | (Elizabeth Mattijsen)++ | tools/build/MOAR_REVISION

[18:55] <Geth> ¦ nqp: Bump MoarVM to get fork-safety patches

[18:55] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/dec8bd79b4

[18:55] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.09-69-gdeba2e1...2018.09-83-gdb11d5f

[19:00] *** kloinka28 left
[19:13] <Geth> ¦ nqp/truffle: b2677b52b0 | (Paweł Murias)++ | nqp-truffle.nqp

[19:13] <Geth> ¦ nqp/truffle: [truffle] Load our truffle setting from java when using nqp-truffle

[19:13] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/b2677b52b0

[19:13] <Geth> ¦ nqp/truffle: 782330a4fd | (Paweł Murias)++ | src/vm/jvm/bin/run_tests.pl

[19:13] <Geth> ¦ nqp/truffle: [truffle] Run passing test 11

[19:13] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/782330a4fd

[19:19] <Geth> ¦ nqp/truffle: d696271314 | (Paweł Murias)++ | src/vm/jvm/runtime/org/perl6/nqp/truffle/NQPScopeWithFrame.java

[19:19] <Geth> ¦ nqp/truffle: [truffle] Remove null checks for something that is never a null now

[19:19] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/d696271314

[19:19] <Geth> ¦ nqp/truffle: 651bb3a1b1 | (Paweł Murias)++ | src/vm/jvm/runtime/org/perl6/nqp/truffle/NQPScopeWithFrame.java

[19:19] <Geth> ¦ nqp/truffle: Revert "[truffle] Remove null checks for something that is never a null now"

[19:19] <Geth> ¦ nqp/truffle: 

[19:19] <Geth> ¦ nqp/truffle: Doesn't really pass :(

[19:19] <Geth> ¦ nqp/truffle: 

[19:19] <Geth> ¦ nqp/truffle: This reverts commit d696271314b8a145cef68040dc26abed225b5198.

[19:19] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/651bb3a1b1

[19:21] <jdv79> c: 2018.06,2018.06,2018.06,HEAD,HEAD,HEAD https://gist.github.com/AlexDaniel/7102bb2e70835f28851b992a41ea121f

[19:21] <committable6> jdv79, https://gist.github.com/a691ea56320d97ec53e08341123f9dc5

[19:26] <Geth> ¦ rakudo: 02fbbc0c02 | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[19:26] <Geth> ¦ rakudo: Bump NQP to get Moar's fork-safety patches

[19:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/02fbbc0c02

[19:26] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.09-1-gbc5099d...2018.09-2-gdec8bd7

[19:28] <brrt> oh,yay, thanks lizmat++

[19:28] <brrt> now I can actually implement the fork() opcode as well

[19:36] <lizmat> also on JVM ?  :-)

[19:47] *** brrt left
[19:54] *** MasterDuke left
[19:56] <pmurias> lizmat: I don't think calling the fork() systemcall is a good idea on the js/jvm/truffle backends :/

[19:56] * lizmat neither

[19:56] <lizmat> I guess that will be MoarVM / POSIX only

[19:59] <Geth> ¦ nqp/truffle: 09439dd8d1 | (Paweł Murias)++ | src/vm/jvm/bin/run_tests.pl

[19:59] <Geth> ¦ nqp/truffle: Revert "[truffle] Run passing test 11"

[19:59] <Geth> ¦ nqp/truffle: 

[19:59] <Geth> ¦ nqp/truffle: This reverts commit 782330a4fd34b0f4a7f3454bf2393700146cb527.

[19:59] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/09439dd8d1

[19:59] <Geth> ¦ nqp/truffle: 0049539e41 | (Paweł Murias)++ | src/vm/jvm/runtime/org/perl6/nqp/truffle/NQPScopeWithFrame.java

[19:59] <Geth> ¦ nqp/truffle: Revert "Revert "[truffle] Remove null checks for something that is never a null now""

[19:59] <Geth> ¦ nqp/truffle: 

[19:59] <Geth> ¦ nqp/truffle: This reverts commit 651bb3a1b1ffb273ba345ae55f734941206586f7.

[19:59] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/0049539e41

[19:59] <Geth> ¦ nqp/truffle: 2badb7fa02 | (Paweł Murias)++ | src/vm/jvm/Truffle.nqp

[19:59] <Geth> ¦ nqp/truffle: [truffle] Refactor QAST::Var compilation

[19:59] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/2badb7fa02

[20:05] *** brrt joined
[20:05] *** p6bannerbot sets mode: +v brrt

[20:09] <Geth> ¦ rakudo: 2dd02751da | (Elizabeth Mattijsen)++ | src/Perl6/Optimizer.nqp

[20:09] <Geth> ¦ rakudo: Make "for ^10 .reverse" just as fast as "for ^10"

[20:09] <Geth> ¦ rakudo: 

[20:09] <Geth> ¦ rakudo: Literal ranges in for loops are heavily optimized.  However, looping

[20:09] <Geth> ¦ rakudo: over a reverted Range was only optimized at the Range.reverse method

[20:09] <Geth> ¦ rakudo: level.  This commit statically optimizes "for ^10 .reverse" in the

[20:09] <Geth> ¦ rakudo: same way as "for ^10".  This makes it about 6x faster.

[20:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2dd02751da

[20:12] <lizmat> inspired by https://stackoverflow.com/questions/52483994/how-to-make-a-range-with-but-counting-down

[20:33] <Geth> ¦ rakudo: 645eeb52dd | (Elizabeth Mattijsen)++ | src/Perl6/Optimizer.nqp

[20:33] <Geth> ¦ rakudo: A slightly more correct handling of ^10 .reverse

[20:33] <Geth> ¦ rakudo: 

[20:33] <Geth> ¦ rakudo: We should first check for the .reverse, *the* check for nqp::stmts

[20:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/645eeb52dd

[20:33] <lizmat> *then  (bloody n on my keyboard)

[20:33] *** patrickb left
[20:36] *** Zeising4 joined
[20:39] *** Zoffix joined
[20:39] *** p6bannerbot sets mode: +v Zoffix

[20:40] <Zoffix> lizmat: I thought we couldn't optimize methodcalls in static optimizer like that because we don't know if they'd be modified by runtime?

[20:40] <Zoffix> timotimo: is that right? They're latebound something something

[20:41] <lizmat> Zoffix: in this case, this is about a *literal* ^10

[20:41] <lizmat> that would mean overriding prefix:<^>

[20:42] <lizmat> I think we're pretty safe in this case

[20:42] <Zoffix> lizmat: but how do you know .reverse on a Range object does sub_i stuff?

[20:42] <lizmat> because it is a "^10" thing

[20:42] * Zoffix doesn't follow

[20:43] <lizmat> ^10 normally is a Range

[20:43] <lizmat> but in the context of "for ^10" it never becomes a Range object because the opt rewrites the optree

[20:44] <Zoffix> lizmat: but does that mean we can optimize a ton of other stuff. I mean `42.cos` is also on a literal, for example

[20:44] <timotimo> depends on what we want monkey-patchers to get

[20:44] <lizmat> well, if that "42" is a unmixed-in Int, then I would say yes

[20:45] <timotimo> but to be fair, cos 42 could also be "unsafe" if someone went and changed Int early enough

[20:45] <lizmat> I mean: in Perl 5 you can change "undef" to 42

[20:45] <lizmat> and that messes up a *lot*  :-)

[20:46] *** Zeising4 left
[20:46] <lizmat> FWIW, if consensus says that the reverse opt shouldn't happen, then I'm fine with that too

[20:46] <Zoffix> How about this: we optimize all we can until someone complains and brights forth a real-life useful usecase for when it's useful to have `42.cos` on mutated Int, and then we stick all these opts under some pragma/trait or something?

[20:47] <Zoffix> s/brights/brings/;

[20:47] <lizmat> sounds like a plan to me

[20:48] <timotimo> "use soft" is a thing iirc

[20:50] <TimToady> yes, the compiler is allowed to make assumptions in the absence of declarations before CHECK time

[20:52] <Geth> ¦ nqp/truffle: 2ba515521e | (Paweł Murias)++ | nqp-truffle.nqp

[20:52] <Geth> ¦ nqp/truffle: [truffle] Make nqp-truffle.nqp set module-path too

[20:52] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/2ba515521e

[20:52] <Geth> ¦ nqp/truffle: 08367fe4d6 | (Paweł Murias)++ | 12 files

[20:52] <Geth> ¦ nqp/truffle: [truffle] Teach the DSL about FrameSlot contextSlot arguments and get rid of a bunch of boilerplate

[20:52] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/08367fe4d6

[20:53] <lizmat> perhaps it is safer to actually perform this optimization on "10 ... 1"

[20:53] <lizmat> and tell people to use that ?

[20:54] <timotimo> it'd be cool to also optimize ones with a custom "step"

[20:54] <pmurias> lizmat: that is safer

[20:55] <lizmat> that would make 10 ... 1 about 75x faster  :-)

[20:55] *** mst is now known as mSt

[20:56] <Zoffix> \o/

[20:56] *** mSt is now known as mst

[20:56] <lizmat> ok, will look at that tomorrow and revert the .reverse opt

[20:56] <pmurias> lizmat: the reverse opt should happen, but it feels like something should be done at runtime or else filthy monkey patchers will get into trouble if they augument Int

[20:56] <timotimo> it's not really possible to do that optimization at run time

[20:56] <diakopter> patch those filthy monkeys!

[20:56] <Zoffix> lizmat: but shouldn't we keep the .reverse opt, based on what we discussed above? 

[20:56] <timotimo> apart from inlining all parts of the iterator and the body

[20:57] <Zoffix> The monkey patchers will have to use a pragma if they want to throw away those opts

[20:57] <lizmat> ok, then I'll keep the .reverse opt

[20:57] <pmurias> timotimo: it's possible I just need to get the truffle backend working so we can do it ;)

[20:58] <timotimo> :)

[21:02] <pmurias> Zoffix: re real-life useful usecase, monkey patching builtin types in general is super doubious

[21:15] *** pmurias left
[21:21] *** brrt left
[21:41] *** Zoffix left
[21:49] *** MasterDuke joined
[21:49] *** p6bannerbot sets mode: +v MasterDuke

[21:49] *** MasterDuke left
[21:49] *** MasterDuke joined
[21:49] *** herbert.freenode.net sets mode: +v MasterDuke

[21:49] *** p6bannerbot sets mode: +v MasterDuke

[22:40] <Geth> ¦ rakudo: zoffixznet self-assigned Core dump when dividing some Rats with denominator 2**30 by -2 https://github.com/rakudo/rakudo/issues/2280

[23:09] *** ilogger2 joined
[23:09] *** p6bannerbot sets mode: +v thesherpa27

[23:10] *** p6bannerbot sets mode: +v ilogger2

