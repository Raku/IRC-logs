[00:00] <timotimo> it surely needs the .c rebuilt

[00:00] <MasterDuke> yeah, i always run Configure.pl first

[00:01] <timotimo> that's good

[00:03] <Zoffix> oh wait, it wasn't a SEGV, it was just a 255 exit code

[00:04] <MasterDuke> i just did `make realclean; <configure>, make install` in all three repos, still the same segv

[00:05] <MasterDuke> fwiw, i'm getting it on both my kubuntu 18.04 and my arch linux machines. gcc version 7.3.0 (Ubuntu 7.3.0-16ubuntu3) and gcc version 8.2.1 20180831 (GCC) respectively

[00:06] <MasterDuke> afk for a bit

[00:06] <Zoffix> Filed R#2261

[00:06] <synopsebot> R#2261 [open]: https://github.com/rakudo/rakudo/issues/2261 [ASYNC] Crashes in t/spec/S17-promise/lock-async-stress2.t

[00:07] *** Zoffix left
[00:24] *** lizmat joined
[00:25] *** p6bannerbot sets mode: +v lizmat

[00:25] <Geth> ¦ roast: a3e197822c | (Zoffix Znet)++ | packages/Test/Iterator.pm6

[00:25] <Geth> ¦ roast: [v6.d REVIEW] Test actual values instead of stringified shadow

[00:25] <Geth> ¦ roast: 

[00:25] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/b9dee81d5

[00:25] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a3e197822c

[00:26] <Geth> ¦ roast: 68e84e7447 | (Zoffix Znet)++ | S32-list/iterator.t

[00:26] <Geth> ¦ roast: Remove trailing whitespace

[00:26] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/68e84e7447

[00:28] <Geth> ¦ roast: 17db6d7112 | (Zoffix Znet)++ | S32-list/iterator.t

[00:28] <Geth> ¦ roast: Fudge .keys on shaped arrays test

[00:28] <Geth> ¦ roast: 

[00:28] <Geth> ¦ roast: The only reason it was passing is because the test routine was

[00:28] <Geth> ¦ roast: too loose and was checking only stringified versions of the data.

[00:28] <Geth> ¦ roast: Fixed in https://github.com/perl6/roast/commit/a3e197822c

[00:28] <Geth> ¦ roast: 

[00:28] <Geth> ¦ roast: Reported in https://github.com/rakudo/rakudo/issues/2262 R#2262

[00:28] <synopsebot> R#2262 [open]: https://github.com/rakudo/rakudo/issues/2262 .keys on shaped arrays adds a a list around returned values

[00:28] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/17db6d7112

[01:07] *** Zoffix joined
[01:07] *** p6bannerbot sets mode: +v Zoffix

[01:08] <Zoffix> nine: MasterDuke: FWIW, I'm getting the same issue on hack's SourceBaby build now: consistent SEGV at stage parse even after `make realclean` and nuking `install` dir.

[01:08] <Zoffix> Weird my google VM didn't have it

[01:10] <Zoffix> m: say $*PERL.compiler.version

[01:10] <camelia> rakudo-moar 3272207ae: OUTPUT: «v2018.08.60.g.3272207.ae␤»

[01:10] <Zoffix> c: HEAD say $*PERL.compiler.version

[01:10] <committable6> Zoffix, ¦HEAD(3272207): «Cannot test this commit (Commit exists, but a perl6 executable could not be built for it)»

[01:11] <Zoffix> looks like camelia got built, but committable segved too

[01:18] <Zoffix> Filed R#2263

[01:18] <synopsebot> R#2263 [open]: https://github.com/rakudo/rakudo/issues/2263 [SEGV] Consistent SEGV at stage parse during build

[01:50] *** cognominal-p6 joined
[01:51] *** p6bannerbot sets mode: +v cognominal-p6

[01:55] *** cognominal-p6 left
[01:55] *** cognominal-p6 joined
[01:56] *** p6bannerbot sets mode: +v cognominal-p6

[02:12] *** epony joined
[02:12] *** p6bannerbot sets mode: +v epony

[02:14] *** cognominal-p6 left
[02:30] <MasterDuke> huh, `Optimizer: No lexical $!initial_threads found`, from this `if $symbols.find_lexical_symbol($node.name) -> $vname {` (that i've added as part of my wip)

[02:32] <MasterDuke> and this `) for ^$!initial_threads;` is what's causing it https://github.com/rakudo/rakudo/blob/master/src/core/ThreadPoolScheduler.pm6#L821

[02:33] <MasterDuke> (i'm trying to re-write it into a while, like is done for literal/constant/native

[03:00] <releasable6> Next release in ≈6 days and ≈15 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:58] <Zoffix> wow, it's release time already

[03:58] <yoleaux> 03:33Z <samcv> Zoffix: it's guarenteed to be the same as long as you don't *add* anything.

[03:58] <Zoffix> thanks

[04:01] *** Zoffix left
[04:23] <Geth> ¦ roast: 9935fecaf5 | (Zoffix Znet)++ | packages/Test/Iterator.pm6

[04:23] <Geth> ¦ roast: [v6.d REVIEW] Remove protocol-violating iterator tests

[04:23] <Geth> ¦ roast: 

[04:23] <Geth> ¦ roast: We're not meant to be pulling after receiving IterationEnd or

[04:23] <Geth> ¦ roast: after skipping far enough to exhaust iterator

[04:23] <Geth> ¦ roast: 

[04:23] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/93c356a9e

[04:23] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/9935fecaf5

[04:24] <Geth> ¦ roast: 48bf592b5c | (Zoffix Znet)++ | packages/Test/Iterator.pm6

[04:24] <Geth> ¦ roast: [v6.d REVIEW] Fix apparent typo in var name

[04:24] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/48bf592b5c

[04:30] <Geth> ¦ roast: cbd2caf2d6 | (Zoffix Znet)++ | S17-promise/nonblocking-await.t

[04:30] <Geth> ¦ roast: [v6.d REVIEW] Don't spec X::AdHoc as thrown exception

[04:30] <Geth> ¦ roast: 

[04:30] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/c8e03430d

[04:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/cbd2caf2d6

[04:38] <Geth> ¦ roast: 11a3dfacc3 | (Zoffix Znet)++ | S05-metasyntax/longest-alternative.t

[04:38] <Geth> ¦ roast: Remove trailing whitespace

[04:38] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/11a3dfacc3

[04:38] <Geth> ¦ roast: 3562be2d25 | (Zoffix Znet)++ | S05-metasyntax/longest-alternative.t

[04:38] <Geth> ¦ roast: [v6.d REVIEW] Localize test class name

[04:38] <Geth> ¦ roast: 

[04:38] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/bb73a8947

[04:38] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3562be2d25

[04:40] <Geth> ¦ roast: 6ae596a117 | (Zoffix Znet)++ | S05-substitution/subst.t

[04:40] <Geth> ¦ roast: [v6.d REVIEW] Expand S/// in map test

[04:40] <Geth> ¦ roast: 

[04:40] <Geth> ¦ roast: Make more than 1 substitution in the test

[04:40] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/1ed4d128d

[04:40] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6ae596a117

[04:43] <Geth> ¦ roast: 6913c07695 | (Zoffix Znet)++ | S02-types/range.t

[04:43] <Geth> ¦ roast: [v6.d REVIEW] Explain why Complex ~~ Range cases are true

[04:43] <Geth> ¦ roast: 

[04:43] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/490dbe463

[04:43] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6913c07695

[04:46] <Geth> ¦ roast: de0bebeaf3 | (Zoffix Znet)++ | S32-list/sort.t

[04:46] <Geth> ¦ roast: [v6.d REVIEW] Test actual type in sort tests

[04:46] <Geth> ¦ roast: 

[04:46] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/874acb12c

[04:46] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/de0bebeaf3

[04:47] <Geth> ¦ roast: 6373bc97f3 | (Zoffix Znet)++ | S32-list/sort.t

[04:47] <Geth> ¦ roast: [v6.d REVIEW] Use more precise is-eqv for sort test

[04:47] <Geth> ¦ roast: 

[04:47] <Geth> ¦ roast: is-deeply doesn't differentiate between Seqs and Lists

[04:47] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6373bc97f3

[05:06] <Geth> ¦ roast: 5c60b79a9f | (Zoffix Znet)++ | S32-num/base.t

[05:06] <Geth> ¦ roast: [v6.d REVIEW] Use better routine for Failure in .base

[05:06] <Geth> ¦ roast: 

[05:06] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/4bcf18fd3

[05:06] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5c60b79a9f

[05:07] <Geth> ¦ roast: 336bc6166e | (Zoffix Znet)++ | S32-num/base.t

[05:07] <Geth> ¦ roast: [v6.d REVIEW] Use better routine for Failure in .base

[05:07] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/336bc6166e

[05:08] <Geth> ¦ roast: c39c048b34 | (Zoffix Znet)++ | S32-io/IO-Socket-Async.t

[05:08] <Geth> ¦ roast: [v6.d REVIEW] Test actual object of Supply.list

[05:08] <Geth> ¦ roast: 

[05:08] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/c7abae472

[05:08] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c39c048b34

[05:10] *** cognominal-p6 joined
[05:10] *** p6bannerbot sets mode: +v cognominal-p6

[05:10] <Geth> ¦ roast: 90b36e3f31 | (Zoffix Znet)++ | S03-smartmatch/any-num.t

[05:10] <Geth> ¦ roast: [v6.d REVIEW] Add signed zero tests to Str ~~ Num

[05:10] <Geth> ¦ roast: 

[05:10] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/70dc42140

[05:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/90b36e3f31

[05:11] *** cognominal-p6 left
[05:12] *** cognominal-p6 joined
[05:12] *** p6bannerbot sets mode: +v cognominal-p6

[05:19] <Geth> ¦ roast: ee49319e52 | (Zoffix Znet)++ | S32-num/base.t

[05:19] <Geth> ¦ roast: [v6.d REVIEW] Use more precise routine for .base failures

[05:19] <Geth> ¦ roast: 

[05:19] <Geth> ¦ roast: Also fudge one test that revealed wrong behaviour:

[05:19] <Geth> ¦ roast: R#2266 https://github.com/rakudo/rakudo/issues/2266

[05:19] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/e2039dbb6

[05:19] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ee49319e52

[05:27] <Geth> ¦ roast: 5c16428524 | (Zoffix Znet)++ | 2 files

[05:27] <Geth> ¦ roast: [v6.d REVIEW] Exactify Rational.ceiling test description

[05:27] <Geth> ¦ roast: 

[05:27] <Geth> ¦ roast: Do not imply that the produced Rational is unreduced, since we

[05:27] <Geth> ¦ roast: now mandate Rational reduction on creation.

[05:27] <Geth> ¦ roast: 

[05:27] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/50e33352e

[05:27] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5c16428524

[05:33] *** cognominal-p6 left
[05:37] <Geth> ¦ 6.d-prep: 1970b98fce | (Zoffix Znet)++ | 2 files

[05:37] <Geth> ¦ 6.d-prep: Restructure deferred deprecations

[05:37] <Geth> ¦ 6.d-prep: 

[05:37] <Geth> ¦ 6.d-prep: They're deferred to 6.e because we don't have the machinery

[05:37] <Geth> ¦ 6.d-prep: in rakudo to issue deprecation warnings, however shouldn't be

[05:37] <Geth> ¦ 6.d-prep: stopping us from deprecating those features on the language level

[05:37] <Geth> ¦ 6.d-prep: and documenting them as deprecated.

[05:37] <Geth> ¦ 6.d-prep: 

[05:37] <Geth> ¦ 6.d-prep: We'll simply keep them around for longer than features we can issue

[05:37] <Geth> ¦ 6.d-prep: deprecation warnings for.

[05:37] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/1970b98fce

[05:42] <Geth> ¦ roast: f9816505de | (Zoffix Znet)++ | 2 files

[05:42] <Geth> ¦ roast: [v6.d REVIEW] Document what unreduced .norm is about

[05:42] <Geth> ¦ roast: 

[05:42] <Geth> ¦ roast: Since now we spec Rationals must always be reduced, it doesn't

[05:42] <Geth> ¦ roast: make sense to have something "unreduced"

[05:42] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/7d0daf528

[05:42] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f9816505de

[06:35] <timotimo> MasterDuke: i don't think you can find a $!foo using find_lexical_symbol, actually

[06:46] *** MasterDuke left
[07:33] <nine> I can't for the life of mine reproduce that segfault :/

[07:44] <nine> rakudo build and spectest succeeds with MVM_SPESH_BLOCKING=1. MVM_SPESH_NODELAY=1 breaks the build, but that seems to have started before my commits: Error while compiling, type X::Attribute::Undeclared

[07:48] <timotimo> yeah, nodelay is known to not be stable

[07:48] <timotimo> not necessarily a problem

[07:53] <lizmat> Files=1249, Tests=76080, 337 wallclock secs (15.17 usr  5.22 sys + 2349.51 cusr 226.40 csys = 2596.30 CPU)

[08:00] <lizmat> after pulling latest:

[08:00] <lizmat> Stage start      :   0.000

[08:00] <lizmat> Stage parse      : make: *** [CORE.setting.moarvm] Segmentation fault:

[08:00] <lizmat> :-(

[08:01] <lizmat> also with MVM_SPESH_BLOCKING=1 :-(

[08:01] <nine> lizmat: does it go away with MVM_JIT_DISABLE=1?

[08:02] <nine> lizmat: if yes, can you bisect MoarVM? I guess it would be in 954bdf88bc5d6909c8e37b9133355696751f0b67..ef4743315dc9993f40b433f5beda72d0dfd5cc1b

[08:03] <lizmat> looks like it is not crashing immediately after that

[08:04] <lizmat> yep, builds ok with MVM_JIT_DISABLE=1

[08:06] <lizmat> BTW, what is the difference between hllbool and hllboolfor  (apart from the 2nd parameter) ?

[08:07] <lizmat> when would you use one and when the other ?

[08:11] <lizmat> also tests ok with MVM_JIT_DISABLE=1

[08:13] <lizmat> nine: ef4743315dc9993f40b433f5beda72d0dfd5cc1b isn't known in my MoarVM checkout ?

[08:14] <lizmat> scratch that

[08:20] <nine> lizmat: hllboolfor is used by NQP code that nevertheless wants to return Perl 6 True and False, i.e. meta model code

[08:21] <lizmat> aha, ok

[08:22] *** dct joined
[08:22] *** p6bannerbot sets mode: +v dct

[08:30] *** cognominal-p6 joined
[08:30] *** p6bannerbot sets mode: +v cognominal-p6

[08:35] *** Kaiepi joined
[08:35] <lizmat> grr...  can't get it to work with lldb

[08:36] *** p6bannerbot sets mode: +v Kaiepi

[08:36] <lizmat> and there apparently no longer is an explanation on to how to use an already installed nqp :-(

[08:36] <lizmat> "Alternatively, feel free to git clone https://github.com/perl6/nqp and

[08:36] <lizmat> https://github.com/MoarVM/MoarVM manually and install them individually."

[08:37] <lizmat> and as I haven't had breakfast yet, that is what I'm going to do now

[08:37] <lizmat> &

[08:38] *** brrt joined
[08:39] *** p6bannerbot sets mode: +v brrt

[08:42] *** cognominal-p6 left
[08:43] *** cognominal-p6 joined
[08:43] *** p6bannerbot sets mode: +v cognominal-p6

[08:49] <Geth> ¦ nqp: 31c92dbeff | (Elizabeth Mattijsen)++ | tools/build/MOAR_REVISION

[08:49] <Geth> ¦ nqp: Bump Moar

[08:49] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/31c92dbeff

[08:49] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.08-45-gef47433...2018.08-46-gfb8976a

[08:51] *** dct left
[08:51] *** fake_space_whale left
[08:54] *** cognominal-p6 left
[08:55] <Geth> ¦ rakudo: 18a6968b98 | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[08:55] <Geth> ¦ rakudo: Bump NQP to fix build on MacOS

[08:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/18a6968b98

[08:55] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.08-46-gdb0f117...2018.08-47-g31c92db

[09:05] *** lizmat_ joined
[09:06] *** p6bannerbot sets mode: +v lizmat_

[09:08] *** lizmat left
[09:24] <[Tux]> today will have no timing: I'm upgrading my box from openSUSE 42.3 to openSUSE 15.0

[09:25] <timotimo> sounds like a downgrade worth about 30 years of yearly releases :)

[09:25] *** travis-ci joined
[09:25] *** p6bannerbot sets mode: +v travis-ci

[09:25] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Bump NQP to fix build on MacOS'

[09:25] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/426291523 https://github.com/rakudo/rakudo/compare/3272207ae52a...18a6968b98f4

[09:25] *** travis-ci left
[09:26] <[Tux]> theis release numbers suck

[09:27] <timotimo> i hope their releases don't get better with rising numbers like they do on windows

[09:30] <[Tux]> 4036 packages to upgrade, 58 to downgrade, 572 new, 1 to reinstall, 122 to remove, 65  to change vendor, 7 to change arch.

[09:30] <[Tux]> Overall download size: 3.25 GiB. Already cached: 0 B. After the operation, additional 1.8 GiB will be used.

[10:40] *** brrt left
[11:47] *** MasterDuke joined
[11:47] *** p6bannerbot sets mode: +v MasterDuke

[11:47] *** MasterDuke left
[11:47] *** MasterDuke joined
[11:47] *** herbert.freenode.net sets mode: +v MasterDuke

[11:47] *** p6bannerbot sets mode: +v MasterDuke

[11:50] *** cognominal-p6 joined
[11:50] *** cognominal-p6 left
[11:51] *** cognominal-p6 joined
[11:51] *** p6bannerbot sets mode: +v cognominal-p6

[11:59] <MasterDuke> timotimo: huh, interesting

[12:02] *** brrt joined
[12:03] *** p6bannerbot sets mode: +v brrt

[12:10] *** brrt left
[12:14] *** cognominal-p6 left
[12:18] <MasterDuke> if i'm creating a QAST::Op for nqp::add_I, how do i do the third param, the type?

[12:50] *** [Tux] joined
[12:51] *** [Tux] is now known as _Tux_

[12:51] *** p6bannerbot sets mode: +v _Tux_

[13:18] *** Zoffix joined
[13:18] *** p6bannerbot sets mode: +v Zoffix

[13:18] <Zoffix> MasterDuke: it'd be just another positional argument, a QAST::WVal node

[13:18] <Zoffix> m: use QAST:from<NQP>; BEGIN $*W.compile_time_evaluate: $, QAST::Op.new: :op<call>, :name<&say>, QAST::Op.new: :op<add_I>, QAST::WVal.new(:value(42)), QAST::WVal.new(:value(100)), QAST::WVal.new(:value(Int))

[13:18] <camelia> rakudo-moar 18a6968b9: OUTPUT: «142␤»

[13:22] *** Zoffix left
[13:43] *** [Tux] joined
[13:44] *** p6bannerbot sets mode: +v [Tux]

[13:46] *** [Tux] left
[13:47] *** [Tux] joined
[13:47] *** p6bannerbot sets mode: +v [Tux]

[13:49] *** lizmat_ left
[13:50] <[Tux]> timing running. expect it to be slower. Lots of things changed, and I probably lost support of some older ruby versions

[13:54] *** lizmat joined
[13:54] *** p6bannerbot sets mode: +v lizmat

[13:55] <Geth> ¦ roast: 6f3f776980 | (Zoffix Znet)++ | S32-array/create.t

[13:55] <Geth> ¦ roast: [v6.d REVIEW] Expand Array.clone tests

[13:55] <Geth> ¦ roast: 

[13:55] <Geth> ¦ roast: Also test modifying the arrays at their heads

[13:55] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/a460cdc7a

[13:55] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6f3f776980

[14:01] <Geth> ¦ roast: ec193640f6 | (Zoffix Znet)++ | 2 files

[14:01] <Geth> ¦ roast: [v6.d REVIEW] Move enormous number of combiners test to APPENDICES

[14:01] <Geth> ¦ roast: 

[14:01] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/00c3c0439

[14:01] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ec193640f6

[14:01] <Geth> ¦ rakudo: bd8e50b4ce | (Zoffix Znet)++ | t/spectest.data

[14:01] <Geth> ¦ rakudo: Add APPENDICES/A01-limits/misc.t to list of test files

[14:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bd8e50b4ce

[14:02] <[Tux]> Rakudo version 2018.08-61-g18a6968b9 - MoarVM version 2018.08-46-gfb8976ab1

[14:02] <[Tux]> csv-test-xs-20      0.411 -  0.504

[14:02] <[Tux]> csv-ip5xs           0.933 -  0.945

[14:02] <[Tux]> test-t --race       0.882 -  0.978

[14:02] <[Tux]> test-t              2.229 -  2.286

[14:02] <[Tux]> csv-ip5xs-20        7.222 -  7.660

[14:02] <[Tux]> test                9.283 -  9.348

[14:02] <[Tux]> test-t-20 --race   12.049 - 13.030

[14:03] <[Tux]> csv-parser         22.519 - 23.243

[14:03] <[Tux]> test-t-20          37.069 - 37.077

[14:04] <timotimo> wow, that's quite a bit slower indeed

[14:05] <Geth> ¦ roast: b9c2b7500d | (Zoffix Znet)++ | 3 files

[14:05] <Geth> ¦ roast: [v6.d REVIEW] APPENDIXify bad arg .lines/.words

[14:05] <Geth> ¦ roast: 

[14:05] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/c4ccaa4ce

[14:05] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b9c2b7500d

[14:05] <[Tux]> don't know that for sure yet. there is a lot of other things going on right now

[14:06] <[Tux]> and somehow my letsencrypt is broken, so I do not have https anymore :(

[14:16] *** _Tux_ left
[14:28] <Geth> ¦ rakudo: 3ffacb9f74 | (Elizabeth Mattijsen)++ | src/core/Iterator.pm6

[14:28] <Geth> ¦ rakudo: Introducing PredictiveIterator role

[14:28] <Geth> ¦ rakudo: 

[14:28] <Geth> ¦ rakudo: After some discussion with Jonathan after the SPW, he felt it was better to

[14:28] <Geth> ¦ rakudo: move the "count-only" and "bool-only" functionality into a separate role,

[14:28] <Geth> ¦ rakudo: which could then be used to smartmatch / MMD on, rather than having to see

[14:28] <Geth> ¦ rakudo: whether it is possible to call a method before calling it.

[14:28] <Geth> ¦ rakudo: 

[14:28] <Geth> ¦ rakudo: This commit creates that role, with "bool-only" defaulting to booleanizing

[14:28] <Geth> ¦ rakudo: the result of "count-only".

[14:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3ffacb9f74

[14:28] <Geth> ¦ rakudo: be07f30016 | (Elizabeth Mattijsen)++ | t/spectest.data

[14:28] <Geth> ¦ rakudo: Merge branch 'master' of https://github.com/rakudo/rakudo

[14:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/be07f30016

[14:56] <lizmat> m: use nqp; nqp::hllbool(9999999999999999999999999999)  # is this supposed to happen, nine ?

[14:56] <camelia> rakudo-moar be07f3001: OUTPUT: «Cannot unbox 94 bit wide bigint into native integer␤  in block <unit> at <tmp> line 1␤␤»

[15:04] *** brrt joined
[15:05] *** p6bannerbot sets mode: +v brrt

[15:05] <Geth> ¦ rakudo: 5cbbcc6e5c | (Elizabeth Mattijsen)++ | 2 files

[15:05] <Geth> ¦ rakudo: s/Iterator/PredictiveIterator/ for native shaped arrays

[15:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5cbbcc6e5c

[15:05] <Geth> ¦ rakudo: 842d4b3276 | (Elizabeth Mattijsen)++ | src/core/Rakudo/Iterator.pm6

[15:05] <Geth> ¦ rakudo: s/Iterator/PredictiveIterator for many standard iterators

[15:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/842d4b3276

[15:07] <Geth> ¦ rakudo/master: 4 commits pushed by (Elizabeth Mattijsen)++

[15:07] <Geth> ¦ rakudo/master: 78ae90289c | s/Iterator/PredictiveIterator for Quanthashes

[15:07] <Geth> ¦ rakudo/master: 000ac81e60 | s/Iterator/PredictiveIterator for Baggy

[15:07] <Geth> ¦ rakudo/master: c2c9df1c43 | s/Iterator/PredictiveIterator for Range

[15:07] <Geth> ¦ rakudo/master: cdf65305f8 | s/Iterator/PredictiveIterator for 1dim shaped arrays

[15:07] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/842d4b327661...cdf65305f877

[15:08] <Geth> ¦ rakudo: ad64c757fe | (Elizabeth Mattijsen)++ | src/core/Str.pm6

[15:08] <Geth> ¦ rakudo: s/Iterator/PredictiveIterator for Str

[15:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ad64c757fe

[15:08] <Geth> ¦ rakudo: eefbe6e13e | (Elizabeth Mattijsen)++ | src/core/Uni.pm6

[15:08] <Geth> ¦ rakudo: s/Iterator/PredictiveIterator for Uni

[15:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/eefbe6e13e

[15:08] <Geth> ¦ rakudo: da663afd6d | (Elizabeth Mattijsen)++ | src/core/metaops.pm6

[15:08] <Geth> ¦ rakudo: s/Iterator/PredictiveIterator for metaops

[15:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/da663afd6d

[15:09] *** pmurias joined
[15:10] *** cognominal-p6 joined
[15:10] *** p6bannerbot sets mode: +v pmurias

[15:10] <pmurias> lizmat: yep, nqp::hllbool takes a native integer

[15:10] <lizmat> ok, good to know

[15:10] *** p6bannerbot sets mode: +v cognominal-p6

[15:11] <lizmat> I guess I got misguided by the "hll" prefix

[15:12] <pmurias> lizmat: nqp::hllbool test: https://github.com/perl6/nqp/blob/master/t/nqp/097-hll.t#L227

[15:14] * pmurias is reminded that nqp::hllbool needs docs (and other docs too)

[15:15] <pmurias> visiting grandparents&

[15:22] *** dogbert17 joined
[15:22] *** p6bannerbot sets mode: +v dogbert17

[15:23] <dogbert17> lizmat: are you working on t/08-performance/01-iterators.t ?

[15:23] *** cognominal-p6 left
[15:24] *** cognominal-p6 joined
[15:24] *** p6bannerbot sets mode: +v cognominal-p6

[15:34] *** cognominal-p6 left
[15:36] *** travis-ci joined
[15:36] *** p6bannerbot sets mode: +v travis-ci

[15:36] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 's/Iterator/PredictiveIterator for many standard iterators'

[15:36] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/426360651 https://github.com/rakudo/rakudo/compare/be07f3001618...842d4b327661

[15:36] *** travis-ci left
[15:36] <buggable> [travis build above] ☠ All failures are due to: failed make test (6 failures). Across all jobs, only t/08-performance/01-iterators.t test file failed.

[15:49] <Geth> ¦ rakudo: e717e21be9 | (Elizabeth Mattijsen)++ | 2 files

[15:49] <Geth> ¦ rakudo: Make default PredictiveIterator.boolonly more HLLiish

[15:49] <Geth> ¦ rakudo: 

[15:49] <Geth> ¦ rakudo: This should unbreak Travis / make test

[15:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e717e21be9

[15:56] *** Zoffix joined
[15:56] *** p6bannerbot sets mode: +v Zoffix

[15:56] <Zoffix> So there's no longer an nqp::p6bool, but nqp::hllbool doesn't handle all the values anymore?

[15:57] <Zoffix> c: 2018.08 use nqp; dd nqp::p6bool(Scalar)

[15:57] <committable6> Zoffix, ¦2018.08: «Bool::False␤»

[15:57] <Zoffix> m: use nqp; dd nqp::p6bool(Scalar)

[15:57] <camelia> rakudo-moar da663afd6: OUTPUT: «===SORRY!===␤No registered operation handler for 'p6bool'␤»

[15:57] <Zoffix> m: use nqp; dd nqp::hllbool(Scalar)

[15:57] <camelia> rakudo-moar da663afd6: OUTPUT: «Cannot unbox a type object (Scalar) to int.␤  in block <unit> at <tmp> line 1␤␤»

[15:57] <Zoffix> We're getting rid of all the extops now, right?

[15:57] <Zoffix> m: use nqp; dd nqp::hllbool(nqp::istrue(Scalar))

[15:57] <camelia> rakudo-moar da663afd6: OUTPUT: «Bool::False␤»

[15:58] <timotimo> we'll now always have to get the truth value manually, it seems like

[15:58] <Zoffix> noted

[15:58] <timotimo> i mean, we turn "if_o" into "istrue" + "if_i" in spesh already anyway

[15:59] <timotimo> so the end result isn't that different i guess. which could of course also mean that we should introduce hllbool_o and hllboolfor_o which get split up like the other thing, too

[15:59] <Zoffix> less typing and avoiding bugs is certainly welcome

[16:00] <Zoffix> (bugs where you use hllbool but forget to intify the value I mean)

[16:01] <timotimo> hm. but how was p6bool implemented such that it was able to take objects? did it force us to first build Int objects if we had an int register that we wanted to boolify? that doesn't seem right

[16:02] <Zoffix> 2018.08 was 7 days ago?

[16:02] <Zoffix> releasable6: status

[16:02] <releasable6> Zoffix, Next release in ≈6 days and ≈2 hours. 1 blocker. 0 out of 74 commits logged

[16:02] <releasable6> Zoffix, Details: https://gist.github.com/5ed21235cc2fb320d7edcdeb5f49521d

[16:03] <Zoffix> And the next release is in 6 days? That's really short

[16:03] <timotimo> yeah, we've got a little bit of a hiccup

[16:04] <AlexDaniel> IMO no big issue with that, a quick release before another set of breaking changes is merged :)

[16:05] *** travis-ci joined
[16:05] *** p6bannerbot sets mode: +v travis-ci

[16:05] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 's/Iterator/PredictiveIterator for metaops'

[16:05] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/426361082 https://github.com/rakudo/rakudo/compare/cdf65305f877...da663afd6d42

[16:05] *** travis-ci left
[16:05] *** epony left
[16:06] <buggable> [travis build above] ☠ All failures are due to: failed make test (6 failures). Across all jobs, only t/08-performance/01-iterators.t test file failed.

[16:06] *** [Tux] left
[16:06] *** [Tux] joined
[16:07] *** epony joined
[16:07] *** p6bannerbot sets mode: +v epony

[16:07] *** p6bannerbot sets mode: +v [Tux]

[16:07] *** brrt left
[16:10] *** [Tux] left
[16:13] *** lizmat left
[16:15] *** Zoffix left
[16:18] *** [Tux] joined
[16:18] <Geth> ¦ roast: 639df3e7f7 | (Zoffix Znet)++ | S32-io/other.t

[16:18] <Geth> ¦ roast: [v6.d REVIEW] Test actual value of IO::Special:U.Str

[16:18] <Geth> ¦ roast: 

[16:18] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/63370fe05

[16:18] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/639df3e7f7

[16:19] *** p6bannerbot sets mode: +v [Tux]

[16:20] <Geth> ¦ roast: 4be8cc3e62 | (Zoffix Znet)++ | 2 files

[16:20] <Geth> ¦ roast: [v6.d REVIEW] Move 13s stresstest to a stress test file

[16:20] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/4be8cc3e62

[16:21] <Geth> ¦ rakudo: 53e82c9ab4 | (Zoffix Znet)++ | t/spectest.data

[16:21] <Geth> ¦ rakudo: Add S32-io/other-stress.t to list of test files

[16:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/53e82c9ab4

[16:39] *** ggoebel_ joined
[16:39] *** p6bannerbot sets mode: +v ggoebel_

[17:02] *** AlexDani` joined
[17:03] *** p6bannerbot sets mode: +v AlexDani`

[17:06] *** AlexDaniel left
[17:07] *** travis-ci joined
[17:07] *** p6bannerbot sets mode: +v travis-ci

[17:07] <travis-ci> Rakudo build passed. Zoffix Znet 'Add S32-io/other-stress.t to list of test files'

[17:07] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/426376937 https://github.com/rakudo/rakudo/compare/e717e21be9c8...53e82c9ab4f3

[17:07] *** travis-ci left
[17:12] *** AlexDani` is now known as AlexDaniel

[17:12] *** AlexDaniel left
[17:12] *** AlexDaniel joined
[17:12] *** hitchcock.freenode.net sets mode: +v AlexDaniel

[17:12] *** p6bannerbot sets mode: +v AlexDaniel

[17:20] *** brrt joined
[17:21] *** p6bannerbot sets mode: +v brrt

[17:46] <japhb> Zoffix++  # Massive v6.d review and test improvement campaign

[17:59] *** ExtraCrispy left
[18:08] <timotimo> aye! very good work

[18:16] <brrt> indeed

[18:29] <pmurias> timotimo: re how was p6bool implemented when going from QAST to MAST different boolification code was inserted

[18:30] *** cognominal-p6 joined
[18:30] *** p6bannerbot sets mode: +v cognominal-p6

[18:31] *** cognominal-p6 left
[18:32] *** cognominal-p6 joined
[18:32] *** p6bannerbot sets mode: +v cognominal-p6

[18:34] <pmurias> I would say having less magic is a win

[18:53] <nine> Yes, hllbool is less magical than p6bool. Turned out that the places where magic was actually needed were few and it was rather obvious what had to be done. So I thought having more explicit code there was better and may help with optimization

[18:54] *** cognominal-p6 left
[19:07] <brrt> nine++ #sanity

[19:07] <brrt> i'm fairly happy about the move away from extops

[19:15] *** brrt left
[19:31] *** fake_space_whale joined
[19:32] *** p6bannerbot sets mode: +v fake_space_whale

[19:40] *** lizmat joined
[19:40] <Geth> ¦ roast: 920f1b8ac3 | (Zoffix Znet)++ | S03-metaops/cross.t

[19:40] <Geth> ¦ roast: [v6.d REVIEW] Fix wrong `X` test desc

[19:40] <Geth> ¦ roast: 

[19:40] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/9c4b56391

[19:40] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/920f1b8ac3

[19:41] *** p6bannerbot sets mode: +v lizmat

[19:43] <Geth> ¦ roast: 7c643a3d71 | (Zoffix Znet)++ | S06-signature/slurpy-params.t

[19:43] <Geth> ¦ roast: [v6.d REVIEW] Simplify lazy pos param tests

[19:43] <Geth> ¦ roast: 

[19:43] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/3fdfcc0ca

[19:43] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7c643a3d71

[19:46] <Geth> ¦ roast: 2e25fbb2ca | (Zoffix Znet)++ | S32-str/uniparse.t

[19:46] <Geth> ¦ roast: [v6.d REVIEW] Use preciser test routine for .uniparse

[19:46] <Geth> ¦ roast: 

[19:46] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/5679afffa

[19:46] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/2e25fbb2ca

[19:49] <Geth> ¦ roast: a756998aba | (Zoffix Znet)++ | S32-str/split.t

[19:49] <Geth> ¦ roast: [v6.d REVIEW] More precise test for .split

[19:49] <Geth> ¦ roast: 

[19:49] <Geth> ¦ roast: `is-deeply` treats Seqs as Lists

[19:49] <Geth> ¦ roast: 

[19:49] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/9010363b6

[19:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a756998aba

[19:52] <Geth> ¦ 6.d-prep: 58640eb267 | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/README.md

[19:52] <Geth> ¦ 6.d-prep: Update Zoffix's review commit reached and log weakness Compunit review

[19:52] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/58640eb267

[19:57] *** robertle left
[20:26] *** dct joined
[20:26] *** p6bannerbot sets mode: +v dct

[20:38] *** fake_space_whale left
[21:39] <Geth> ¦ roast: 500bbda286 | (Elizabeth Mattijsen)++ | S32-list/seq.t

[21:39] <Geth> ¦ roast: Only a PredictiveIterator supports count-only

[21:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/500bbda286

[21:41] <Geth> ¦ roast: 117a3a9459 | (Elizabeth Mattijsen)++ | S32-list/tail.t

[21:41] <Geth> ¦ roast: Only a PredictiveIterator supports count-only

[21:41] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/117a3a9459

[21:44] <Geth> ¦ rakudo: b1c645ed19 | (Elizabeth Mattijsen)++ | src/core/Baggy.pm6

[21:44] <Geth> ¦ rakudo: Fix Baggy.pick(n).count-only

[21:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b1c645ed19

[21:44] <Geth> ¦ rakudo: bd83206192 | (Elizabeth Mattijsen)++ | src/core/Shaped1Array.pm6

[21:44] <Geth> ¦ rakudo: Correct count-only in 1dim shaped arrays

[21:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bd83206192

[21:46] *** dct left
[21:50] *** cognominal-p6 joined
[21:51] *** p6bannerbot sets mode: +v cognominal-p6

[22:03] *** MasterDuke left
[22:05] *** cognominal-p6 left
[22:05] *** cognominal-p6 joined
[22:06] *** p6bannerbot sets mode: +v cognominal-p6

[22:09] <Geth> ¦ rakudo/master: 5 commits pushed by (Elizabeth Mattijsen)++

[22:09] <Geth> ¦ rakudo/master: 708ff62407 | Simplify Uni.list.count-only

[22:09] <Geth> ¦ rakudo/master: 5f3c2bfcc1 | Correct native array.iterator.count-only

[22:09] <Geth> ¦ rakudo/master: 2a011a0e75 | Correct various Str.iterator.count-only's

[22:09] <Geth> ¦ rakudo/master: faed3a9c73 | Fix various R:Iterator.count-only's

[22:09] <Geth> ¦ rakudo/master: ca5825b4fc | Use the new PredictiveIterator logic

[22:09] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/bd8320619218...ca5825b4fc68

[22:13] *** cognominal-p6 left
[22:32] *** pmurias left
[22:52] *** reportable6 left
[22:52] *** reportable6 joined
[22:52] *** ChanServ sets mode: +v reportable6

[22:53] *** p6bannerbot sets mode: +v reportable6

[23:00] <releasable6> Next release in ≈5 days and ≈19 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:05] *** reportable6 left
[23:05] *** reportable6 joined
[23:05] *** ChanServ sets mode: +v reportable6

[23:06] *** p6bannerbot sets mode: +v reportable6

[23:41] *** MasterDuke joined
[23:41] *** p6bannerbot sets mode: +v MasterDuke

[23:42] *** MasterDuke left
[23:42] *** MasterDuke joined
[23:42] *** herbert.freenode.net sets mode: +v MasterDuke

[23:42] *** p6bannerbot sets mode: +v MasterDuke

