[00:02] <samcv> \o/ i now have perl6 working on Solaris

[00:25] <MasterDuke> nice

[02:09] <MasterDuke> huh

[02:09] <MasterDuke> where do you see that?

[02:10] <MasterDuke> do you have your own openbsd install?

[02:10] <samcv> yeah

[02:10] <samcv> it's when compiling nqp

[02:11] <Kaiepi> just to be clear on the usage of nativecall expliticly-manage

[02:11] <samcv> pretty unlikely my changes could cause that but i can double check on a master

[02:11] <Kaiepi> it's meant for strings that the compiler shouldn't gc right?

[02:16] <samcv> MasterDuke: https://cry.nu/p/7iwo

[02:19] <MasterDuke> samcv: huh, don't even know where to start with that

[02:20] <samcv> yeah. no issues on freebsd though

[02:21] <samcv> though openbsd does a lot of things different afaik

[03:58] <MasterDuke> m: my ($a, $b); for (^1_000_000).kv -> $i, $v { $a = $i; $b = $v }; say "$a $b"; say now - INIT now

[03:58] <camelia> rakudo-moar affeaa798: OUTPUT: «999999 999999␤2.05613357␤»

[03:58] <MasterDuke> my ($a, $b); my $i; for ^1_000_000 -> $v { $a = $i++; $b = $v }; say "$a $b"; say now - INIT now

[03:58] <evalable6> MasterDuke, rakudo-moar affeaa798: OUTPUT: «999999 999999␤0.3695138␤»

[03:58] <MasterDuke> why does the first call sink-all?

[04:06] <samcv> https://github.com/MoarVM/MoarVM/commit/ef4e6fe945 this should help with problems with rakudobrew failing to update

[04:06] <samcv> it seems it only happens if there are stray files left over. and rakudobrew doesn't clean them up i suppose.

[04:07] <samcv> but it'll now show a message telling the user what folder to delete and to run it again after they delet it

[06:39] <nine> Kaiepi: yes

[07:16] <[Tux]> Rakudo version 2018.03-221-gaffeaa798 - MoarVM version 2018.03-105-gef4e6fe94

[07:16] <[Tux]> csv-test-xs-20      0.446 -  0.484

[07:16] <[Tux]> csv-ip5xs           0.911 -  0.936

[07:16] <[Tux]> test-t --race       1.046 -  1.127

[07:16] <[Tux]> test-t              2.524 -  2.536

[07:16] <[Tux]> csv-ip5xs-20        9.054 -  9.071

[07:16] <[Tux]> test                9.366 -  9.552

[07:16] <[Tux]> test-t-20 --race   15.460 - 15.763

[07:16] <[Tux]> csv-parser         38.301 - 40.196

[07:16] <[Tux]> test-t-20          45.022 - 45.582

[07:26] <AlexDaniel> releasable6: next

[07:26] <releasable6> AlexDaniel, Next release in ≈10 days and ≈11 hours. 6 blockers. 0 out of 221 commits logged (⚠ 9 warnings)

[07:26] <releasable6> AlexDaniel, Details: https://gist.github.com/1ff9ef5a27d38211092f183eab907c88

[07:28] <AlexDaniel> Zoffix: re “(no changelog)” in commit title, you can also include that in the description of the commit instead of a title, as I end up reading these anyway

[07:29] <AlexDaniel> Zoffix: alternatively you can just go to https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft and include that commit in IGNORE&DELETE section

[07:53] <Zoffix> AlexDaniel: "AlexDanielZoffix: re “(no changelog)” in commit title" what are you talking about?

[07:54] <AlexDaniel> Zoffix: https://github.com/rakudo/rakudo/commit/a0ee718d

[07:56] <Zoffix> Ah

[08:19] <AlexDaniel> undersightable6: check

[08:19] <undersightable6> AlexDaniel, OK! Working on it…

[08:21] <undersightable6> AlexDaniel, 0 errors, 7 warnings: https://gist.github.com/3c0391b202618000711268e72b6a0398

[08:21] <AlexDaniel> Geth:

[08:21] <AlexDaniel> undersightable6 you are wrong.

[08:21] <AlexDaniel> undersightable6: check

[08:21] <undersightable6> AlexDaniel, OK! Working on it…

[08:22] <undersightable6> AlexDaniel, 0 errors, 7 warnings: https://gist.github.com/b22fb8401cb3e449bbc7432d2e0c7b6c

[08:23] <AlexDaniel> idiot.

[08:24] <AlexDaniel> there's no dalek and Geth

[08:31] <Zoffix> synopsebot: help

[08:31] <synopsebot> Zoffix, See: https://github.com/perl6/synopsebot

[08:32] <Zoffix> weird that it's still running

[08:46] <lizmat> Files=1239, Tests=76295, 318 wallclock secs (16.17 usr  5.55 sys + 2197.59 cusr 219.91 csys = 2439.22 CPU)

[08:51] <Geth> ¦ rakudo: zoffixznet self-assigned When coercing to an unknown type, error is "Unable to parse expression in typename; couldn't find final  ')'" https://github.com/rakudo/rakudo/issues/1723

[09:03] <pmurias> TimToady: are 32bit implementations required to emulate int64 and uint64? the roast "spec" isn't clear on that

[09:11] <Zoffix> ZOFFLOP: t/spec/S32-io/io-cathandle.t

[09:43] <Geth> ¦ nqp: 4039aebbe3 | pmurias++ | src/vm/js/Compiler.nqp

[09:43] <Geth> ¦ nqp: [js] Fix uint16

[09:43] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/4039aebbe3

[09:43] <Geth> ¦ nqp: be655367c6 | pmurias++ | 5 files

[09:43] <Geth> ¦ nqp: [js] Add support for uint32

[09:43] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/be655367c6

[09:51] <pmurias> Zoffix: we have tests that storing 2 ** 33 in a uint8 doesn't throw

[09:51] <pmurias> Zoffix: how do we handle that?

[09:52] <pmurias> Zoffix: we also have fudged tests that it *does* throw

[09:52] <Zoffix> You mean like my uint8 $ = 2**33? I'd expect that to throw

[09:53] <Zoffix> Well, not just I; that was discussed that `my native $foo = too-big => throw; and my native $foo = ok-sized; $foo++ => overflow`

[09:54] <lizmat> yeah, assignment would throw, manipulating value in it would overflow / underflow silently

[09:55] <lizmat> as that is what many algorithms expect

[09:55] <pmurias> https://github.com/perl6/roast/blob/master/S02-types/native.t#L304

[09:56] <pmurias> https://github.com/perl6/roast/blob/master/S02-types/native.t#L329 - more extreme assignment

[09:57] <pmurias> lizmat: that semantics make sense, I'm not sure what we do about the current tests

[09:58] <lizmat> perhaps creating an issue would help so the discussion gets concentrated ?

[09:59] <Zoffix> m: my uint8 $u8; $u8 = 2 ** 32; dd $u8

[09:59] <camelia> rakudo-moar affeaa798: OUTPUT: «0␤»

[09:59] <Zoffix> m: my uint8 $u8; $u8 = 2 ** 33+1; dd $u8

[09:59] <camelia> rakudo-moar affeaa798: OUTPUT: «1␤»

[10:01] <travis-ci> NQP build passed. pmurias '[js] Add support for uint32'

[10:01] <travis-ci> https://travis-ci.org/perl6/nqp/builds/365029385 https://github.com/perl6/nqp/compare/a609b5656e29...be655367c671

[10:01] <Zoffix> m: my uint64 $u8 = 2**66; dd $u8

[10:01] <camelia> rakudo-moar affeaa798: OUTPUT: «Cannot unbox 67 bit wide bigint into native integer␤  in block <unit> at <tmp> line 1␤␤»

[10:01] <Zoffix> Makes sense to me to deem those tests wrong and toss them.

[10:09] <Geth> ¦ rakudo/fix-R1723: fb7d5defbd | (Zoffix Znet)++ | 2 files

[10:09] <Geth> ¦ rakudo/fix-R1723: Stash partial fix for R#1723

[10:09] <Geth> ¦ rakudo/fix-R1723: review: https://github.com/rakudo/rakudo/commit/fb7d5defbd

[10:09] <synopsebot> R#1723 [open]: https://github.com/rakudo/rakudo/issues/1723 When coercing to an unknown type, error is "Unable to parse expression in typename; couldn't find final  ')'"

[10:09] <pmurias> Zoffix: what's a procedure for tossing wrong tests?

[10:10] <lizmat> If we agree that they are wrong, they should also be changed in

[10:10] <Geth> ¦ roast: 0d51cc6c18 | (Zoffix Znet)++ | S12-coercion/coercion-types.t

[10:10] <Geth> ¦ roast: Fudged tests for good error in mistyped types in coercers

[10:10] <Geth> ¦ roast:

[10:10] <Geth> ¦ roast: R#1723 https://github.com/rakudo/rakudo/issues/1723

[10:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/0d51cc6c18

[10:10] <lizmat> / fudged in 6.c-errata

[10:11] <lizmat> GH R#1724   # Inconsistent handling of Cool -> Str migration

[10:11] <synopsebot> R#1724 [open]: https://github.com/rakudo/rakudo/issues/1724 [@LARRY] Inconsistent handling of Cool -> Str migration

[10:11] <Zoffix> pmurias: no written procedures yet. If there's good agreement the tests are wrong, then just change them in master and cherry pick the change to 6.c-errata. Otherwise, PR the change and ping @LARRY to review whether the change is acceptable

[10:11] * Zoffix &

[10:56] <pmurias> https://github.com/rakudo/rakudo/issues/1725 - issue for our integer problem

[15:19] <pmurias> do we need the EVAL: https://github.com/perl6/roast/blob/master/S02-types/int-uint.t#L10 ?

[15:23] <Geth> ¦ roast: 5a11a77618 | usev6++ | S32-io/IO-Socket-INET.t

[15:23] <Geth> ¦ roast: [JVM] Fudge newly added test

[15:23] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5a11a77618

[18:39] <lizmat> pmurias: the alternative would be some kind of array that lists supported int types in core?

[18:39] <lizmat> int1 int2 int4 are specced, but NYI

[20:32] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1727: Use explicit native types in some places

[20:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1727

[20:35] <Geth> ¦ rakudo: 9d52444d8e | (Daniel Green)++ | 4 files

[20:35] <Geth> ¦ rakudo: Use explicit native types in some places

[20:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9d52444d8e

[20:35] <Geth> ¦ rakudo: 72c7c5bf46 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 4 files

[20:35] <Geth> ¦ rakudo: Merge pull request #1727 from MasterDuke17/use_explicit_native_types_in_some_places

[20:35] <Geth> ¦ rakudo:

[20:35] <Geth> ¦ rakudo: Use explicit native types in some places

[20:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/72c7c5bf46

[21:24] <MasterDuke> lizmat: re https://github.com/rakudo/rakudo/pull/1722 do you think any part of it is good?

[21:24] <lizmat> MasterDuke: may I get back to you on that tomorrow?

[21:25] <MasterDuke> sure, no pressing need

[21:25] * lizmat is pretty tired from a lot of stuff today and is only capable of menial work atm  (or zonk out in front of the TV)

[21:25] <lizmat> please ping me in case I forget  :-)

[21:25] <lizmat> good night, #perl6-dev!

[21:25] <MasterDuke> k
