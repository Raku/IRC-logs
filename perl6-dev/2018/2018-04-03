[00:39] <Zoffix> New TPF Grant Proposal has been posted: "Perl 6: Bugfixing and Performance of Rationals Fixing Constraints on Constants": http://news.perlfoundation.org/2018/04/grant-proposal-perl-6-bugfixin.html  Please leave your comments

[00:41] <Zoffix> k, modules.perl6.org is now fully back in business, with rebuilt DB, switched to master and re-enabled cron

[00:43] <AlexDaniel> Zoffix++ # everything

[02:26] <AlexDaniel> squashable6: next

[02:26] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 3 days and ≈7 hours (2018-04-07 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[04:01] <Zoffix> w00t... Zoffix 32.0 has been released \o/

[04:01] <Zoffix> ZofBot: grab a piece of upgrade cake, bruh

[04:01] <ZofBot> Zoffix, github

[04:22] <AlexDaniel> 🍰 \o/

[04:22] <AlexDaniel> Zoffix: congratz! I hope lots of bug fixes and no regressions ;)

[04:41] <Geth> ¦ nqp: 0edf50db6a | (Elizabeth Mattijsen)++ | tools/build/MOAR_REVISION

[04:41] <Geth> ¦ nqp: Get samcv++ latest strand improvements

[04:41] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/0edf50db6a

[04:41] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03-68-ged4201e...2018.03-75-g156a7a6

[04:42] <samcv> :) yay

[04:52] <Kaiepi> i have to say the optimization work you guys have been doing is really impressive

[04:53] <samcv> Kaiepi: thank you!

[04:58] <Geth> ¦ rakudo: 19626e6cb3 | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[04:58] <Geth> ¦ rakudo: Bump NQP to get latest strand improvements, samcv++

[04:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/19626e6cb3

[04:58] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-47-gdd513ea...2018.03-49-g0edf50d

[05:06] <Zoffix> samcv++

[06:02] <Geth> ¦ rakudo: de68bfc109 | (Elizabeth Mattijsen)++ | src/core/List.pm6

[06:02] <Geth> ¦ rakudo: Make List.pick about 30% faster

[06:02] <Geth> ¦ rakudo:

[06:02] <Geth> ¦ rakudo: - use nqp ops directly to get random value

[06:02] <Geth> ¦ rakudo: - use lexicals instead of attributes where this makes sense

[06:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/de68bfc109

[06:41] <Geth> ¦ rakudo: c53fde3eb8 | (Elizabeth Mattijsen)++ | src/core/List.pm6

[06:41] <Geth> ¦ rakudo: Make List.roll about 20x faster

[06:41] <Geth> ¦ rakudo:

[06:41] <Geth> ¦ rakudo: - use nqp ops to create random values

[06:41] <Geth> ¦ rakudo: - use native ints instead of full blown Ints

[06:41] <Geth> ¦ rakudo:

[06:41] <Geth> ¦ rakudo: For some reason, Num.floor was taking up more than half of the CPU.

[06:41] <Geth> ¦ rakudo: This is now bypassed completely.  Using native ints makes up for the

[06:41] <Geth> ¦ rakudo: rest of the improvement.  --profile can be very informative sometimes.

[06:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c53fde3eb8

[06:51] <[Tux]> Rakudo version 2018.03-152-gde68bfc10 - MoarVM version 2018.03-76-g21d6c5470

[06:51] <[Tux]> csv-test-xs-20      0.456 -  0.473

[06:51] <[Tux]> csv-ip5xs           0.897 -  0.911

[06:51] <[Tux]> test-t --race       1.033 -  1.039

[06:51] <[Tux]> test-t              2.430 -  2.565

[06:51] <[Tux]> csv-ip5xs-20        8.672 -  9.206

[06:51] <[Tux]> test                9.439 -  9.620

[06:51] <[Tux]> test-t-20 --race   15.151 - 15.249

[06:51] <[Tux]> csv-parser         37.105 - 38.598

[06:51] <[Tux]> test-t-20          43.437 - 43.857

[10:06] <timotimo> holy wow, the List.roll thing

[14:11] <Geth> ¦ rakudo: 6a6bb23dc0 | (Elizabeth Mattijsen)++ | 2 files

[14:11] <Geth> ¦ rakudo: Make Map/TypedHash.roll about 30% faster

[14:11] <Geth> ¦ rakudo:

[14:11] <Geth> ¦ rakudo: - get the random number in NQP

[14:11] <Geth> ¦ rakudo: - avoid HLL .rand.floor

[14:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6a6bb23dc0

[14:24] <Geth> ¦ rakudo: 5981f81b63 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[14:24] <Geth> ¦ rakudo: Oops, remove trailing garbage, Masterduke++ for spotting

[14:24] <Geth> ¦ rakudo:

[14:24] <Geth> ¦ rakudo: Weird thing is, settings compiled without issue and spectest ran fine

[14:24] <Geth> ¦ rakudo: as well  :-(

[14:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5981f81b63

[18:24] <[TuxCM]> samcv, does p6 support (or plan tyo support) iso-6937/2 ? https://en.wikipedia.org/wiki/ISO/IEC_6937

[18:25] <samcv> i had no plans but i can add support if someone wants it

[18:26] <[TuxCM]> <jidding>I dare you :)</kidding>

[18:26] <samcv> so you don't actually want it hah?

[18:26] <[TuxCM]> (I'd use it in tooling)

[18:27] <[TuxCM]> it currently still is *the* encoding used in inter-local-community government communications

[18:27] <[TuxCM]> in the Netherlands

[18:27] <samcv> ah ok

[18:28] <[TuxCM]> the "problem" is that the diacritical indicators come in front of the base character instead of after the base character

[18:28] <[TuxCM]> each supported character is one or two bytes

[18:29] <samcv> [TuxCM]: what do you use currently for converting to/from this format?

[18:35] <samcv> hmm this encoding doesn't seem too complex. at least from the wikipedia page.

[18:37] <FROGGS> .oO( digitus )

[19:00] <AlexDaniel> releasable6: uptime

[19:00] <releasable6> AlexDaniel, 1 day, 4 hours, 35 minutes, and 12 seconds, 1556.488281MiB maxrss. This is Rakudo version 2018.03-134-g20495f097 built on MoarVM version 2018.03-56-g85fc758ce implementing Perl 6.c.

[19:01] <AlexDaniel> reportable6: uptime

[19:01] <reportable6> AlexDaniel, 4 days, 1 hour, 11 minutes, and 23 seconds, 1307.859375MiB maxrss. This is Rakudo version 2018.03-134-g20495f097 built on MoarVM version 2018.03-56-g85fc758ce implementing Perl 6.c.

[19:01] <AlexDaniel> hmmmm…

[19:02] <AlexDaniel> only three bots leaked… but that's something new

[21:29] <pmurias> .msg jnthn a big problem with the current parameter interning is that paramaterized types are registered when they are deserialized, and objects are deserialized lazily

[21:29] <yoleaux> pmurias: Sorry, this command is admin-only.

[21:30] <pmurias> .tell jnthn a big problem with the current parameter interning is that paramaterized types are registered when they are deserialized, and objects are deserialized lazily

[21:30] <yoleaux> pmurias: I'll pass your message to jnthn.

[21:33] <samcv> [Tux]: can you provide me we samples of  iso-6937/2

[22:02] <[Tux]> sure

[22:04] <[Tux]> https://tux.nl/Files/iso6737.tgz : diac.tst is all allowed characters in 6937, diac.utf is the same in utf-8

[22:05] <[Tux]> samv, I currently use perl5 and C (both use state machine and translation tables)

[22:06] <[Tux]> in C it is a huge nested case statement

[22:50] <Zoffix> Any way to get camelia up to date with JVM? What's blocking it building latest and greatest, like it does with moar?

[22:50] <yoleaux> 13:32Z <jdv79> Zoffix: oh yeah.  forgot about that.  that's about as much interest metacp6an got.

[22:54] <timotimo> someone got a windows and could run a very short snippet of perl6 code for me?

[22:54] <Zoffix> timotimo: yeah I can

[22:55] <timotimo> cool, try this please:

[22:56] <timotimo> first set $path to a random file on your hard drive

[22:56] <timotimo> say run("CertUtil.exe", "-hashfile", $path, "SHA256", :out).out.slurp.subst(" ", "");

[22:56] <timotimo> probably want to :close that slurp, too

[22:56] <Zoffix> $path is what? PATH?

[22:57] <timotimo> Do not use it for new code. Use .slurp method method instead.

[22:57] <timotimo> no, a random file

[22:57] <timotimo> just to see if the output is as expected

[23:00] <Zoffix> timotimo: https://gist.github.com/zoffixznet/3d4fcc38fa3dd8ff0eacc4e05b0d8083

[23:05] <timotimo> ok so the output is those three lines huh?

[23:05] <timotimo> oh, no, the other two line are stderr?

[23:06] <timotimo> i'm hoping we can use this for GTK::Simple

[23:07] <Zoffix> timotimo: no, that's all on STDOUT. More precisely, there are also two blank lines. Here's a run with :!err: https://gist.github.com/zoffixznet/3214b046917c6edc0fcc83ce824f7b74

[23:08] <timotimo> shouldn't the subst have removed all the spaces in there?

[23:08] <timotimo> it would need :g?

[23:08] <Zoffix> It'd need :g for that yeah.

[23:08] <timotimo> i was under the impression that the hash would be output as two hex digits at a time with spaces in between

[23:09] <Zoffix> timotimo: that was a run on Win10. Here's a run on Win7, that indeed has pairs of hex digits: https://gist.github.com/zoffixznet/90bb0adfdae21f92a0fc07f4afc932b7

[23:10] <timotimo> m: say "7c29dfc0784ddfa8e5af1fd917581ee2acd954c40136835a64c8edf7d1f96f9f".chars

[23:10] <camelia> rakudo-moar 5981f81b6: OUTPUT: «64␤»

[23:10] <timotimo> say run("CertUtil.exe", "-hashfile", $path, "SHA256", :out).out.slurp(:close).subst(" ", "", :g).lines.grep(/^[A..F a..f 0..9] ** 64$/).head()

[23:10] <timotimo> that should do it, right?

[23:10] <Zoffix> timotimo: here're runs with `:g` https://gist.github.com/zoffixznet/9debbcad5e8f963589aa27f6e3fc2232

[23:12] <Zoffix> timotimo: that gives warnings from the regex. But using <:hexdigit> does work: https://gist.github.com/zoffixznet/3eb148323098d80088ff3ef1bc46eeca

[23:13] <timotimo> i forgot to put < > around the []

[23:13] <timotimo> man i'm tired

[23:13] <Zoffix> Also can just do `.first` instead of `.grep.head`

[23:15] <timotimo> i wasn't sure if .first also has a mode without a matcher

[23:16] <Zoffix> It doesn't but I meant you could use .first(/..../) instead of .grep(/..../).head

[23:16] <Zoffix> err

[23:16] <timotimo> oh, of course

[23:16] <Zoffix> It DOES

[23:16] <timotimo> well, that's even better

[23:16] <timotimo> m: say [].first

[23:16] <Zoffix> :)

[23:16] <camelia> rakudo-moar 5981f81b6: OUTPUT: «Nil␤»

[23:16] <Zoffix> m: say <a b c>.first

[23:16] <camelia> rakudo-moar 5981f81b6: OUTPUT: «a␤»

[23:16] <timotimo> thanks for the assist

[23:17] <timotimo> m: say "foo" ~~ / <hexdigit> /

[23:17] <camelia> rakudo-moar 5981f81b6: OUTPUT: «No such method 'hexdigit' for invocant of type 'Match'. Did you mean 'xdigit'?␤  in block <unit> at <tmp> line 1␤␤»

[23:17] <timotimo> m: say "foo" ~~ / <xdigit> /

[23:17] <camelia> rakudo-moar 5981f81b6: OUTPUT: «｢f｣␤ xdigit => ｢f｣␤»

[23:17] <timotimo> is xdigit the same as :hexdigit?

[23:17] <Zoffix> no idea

[23:19] <timotimo> anyway, i pushed a gtk-simple

[23:23] <timotimo> one day i'll be proficient enough to just write working perl 6 code even when i'm this tired :P

[23:24] <Zoffix> "Unhandled exception: failed to load library 'dynext/perl6_ops_moar.dll'"

[23:24] <timotimo> um

[23:25] <timotimo> how did you get that to happen?

[23:25] <Zoffix> Full output: https://gist.github.com/zoffixznet/4780654931d9a966a0a0866645f9fcc2

[23:25] <Zoffix> something to do with R#1662 maybe

[23:25] <synopsebot> R#1662 [open]: https://github.com/rakudo/rakudo/issues/1662 [⚠ blocker ⚠] Windows Issues with "Replace error-prone file timestamp check by checksum when loading deps"

[23:25] <Zoffix> releasable6: next

[23:25] <releasable6> Zoffix, Next release in ≈17 days and ≈19 hours. 4 blockers. 0 out of 155 commits logged (⚠ 9 warnings)

[23:26] <releasable6> Zoffix, Details: https://gist.github.com/23e55c8f221407680f83cf394894d77c

[23:31] <timotimo> it's surprising that you could even run zef if it fails to find the dynext file

[23:32] <Zoffix> .tell bartolin FWIW, this commit used 309 as scale (citing perf loss concerns), but I imagine 17 is good enough, as doubles have at most 18 significant figures. Looking at openjdk's impl of BigInteger.divide, there's even a fast path when scale is < 18. Perhaps something to investigate, to improve perf? https://github.com/perl6/nqp/commit/b9f195cf8df62153cd1cfaa7698a586650695165

[23:32] <yoleaux> Zoffix: I'll pass your message to bartolin.

[23:33] <Zoffix> .tell bartolin err, I meant BigDecimal.divide's impl

[23:33] <yoleaux> Zoffix: I'll pass your message to bartolin.

[23:37] <timotimo> Zoffix: btw, isprime takes as second argument the number of miller-rabin tests to do; 100 is extremely wasteful. maybe if people keep using is-prime as a benchmark we should reduce that a little

[23:38] <timotimo> just pinging you as a random bystander m)

[23:41] * timotimo goes to bed

[23:41] <MasterDuke> Zoffix: happy birthday! (it was my daughter's first birthday today, so easy to remember)

[23:56] <Zoffix> Hah. Cool. Thanks :)
