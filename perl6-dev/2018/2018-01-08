[01:18] <AlexDaniel> releasable6: next

[01:18] <releasable6> AlexDaniel, Next release in 12 days and ≈17 hours. No blockers. Unknown changelog format

[03:13] <Geth> ¦ nqp: 92d1d56831 | (Jeremy Studer)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[03:13] <Geth> ¦ nqp: MoarVM: Allow 'chain' op to use child as callee

[03:13] <Geth> ¦ nqp:

[03:13] <Geth> ¦ nqp: Modify the 'chain' op to allow the option to use the first child as the

[03:13] <Geth> ¦ nqp: callee. Before the name of the op served as the operator sub and the

[03:13] <Geth> ¦ nqp: children the operands. This modification makes it so that, if there is

[03:13] <Geth> ¦ nqp: no name provided to the chain, child 0 serves as the operator and

[03:13] <Geth> ¦ nqp: children 1 and 2 the operands.

[03:13] <Geth> ¦ nqp: <…commit message has 5 more lines…>

[03:13] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/92d1d56831

[03:13] <Geth> ¦ nqp: ec345715b7 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/vm/moar/QAST/QASTOperationsMAST.nqp

[03:13] <Geth> ¦ nqp: Merge pull request #387 from jstuder-gh/neg_chaining

[03:13] <Geth> ¦ nqp:

[03:13] <Geth> ¦ nqp: Rakudo Issue 1304: Preserve operator chaining when operators negated

[03:13] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/ec345715b7

[03:13] <Geth> ¦ rakudo: ba111cfed4 | (Jeremy Studer)++ | src/Perl6/Actions.nqp

[03:13] <Geth> ¦ rakudo: Preserve operator chaining when operators negated

[03:13] <Geth> ¦ rakudo:

[03:13] <Geth> ¦ rakudo: If the behavior on the base operator is to allow 'chaining' (as it is

[03:13] <Geth> ¦ rakudo: for '<' and '>' in the grammar) and the metaop is '!', then preserve

[03:13] <Geth> ¦ rakudo: chaining on the op wrapping the metaop and baseop.

[03:13] <Geth> ¦ rakudo:

[03:13] <Geth> ¦ rakudo: Previously, applying the negation metaoperator toward operators that

[03:14] <Geth> ¦ rakudo: <…commit message has 7 more lines…>

[03:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ba111cfed4

[03:14] <Geth> ¦ rakudo: 7b4a3b11c1 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/Perl6/Actions.nqp

[03:14] <Geth> ¦ rakudo: Merge pull request #1375 from jstuder-gh/neg_chaining

[03:14] <Geth> ¦ rakudo:

[03:14] <Geth> ¦ rakudo: Issue 1304: Preserve operator chaining when operators negated

[03:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7b4a3b11c1

[03:20] <Geth> ¦ rakudo: 14c2cdb314 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[03:20] <Geth> ¦ rakudo: [NQP Bump] Brings 16 commits

[03:20] <Geth> ¦ rakudo:

[03:20] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2017.12-28-g41e36ea...2017.12-44-gec34571

[03:20] <Geth> ¦ rakudo: ec34571 Merge pull request #387 from jstuder-gh/neg_chaining

[03:20] <Geth> ¦ rakudo: 92d1d56 MoarVM: Allow 'chain' op to use child as callee

[03:20] <Geth> ¦ rakudo: 5b80052 [jvm] Remove dead code

[03:20] <Geth> ¦ rakudo: f6bccf7 [jvm] Look inside containers for parametric type

[03:21] <Geth> ¦ rakudo: <…commit message has 12 more lines…>

[03:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/14c2cdb314

[03:21] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.12-28-g41e36ea...2017.12-44-gec34571

[03:22] <Geth> ¦ roast: bfe44db948 | (Zoffix Znet)++ | S03-operators/relational.t

[03:22] <Geth> ¦ roast: Unfudge now-passing tests

[03:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/bfe44db948

[04:20] <travis-ci> Rakudo build failed. Zoffix Znet 'Merge pull request #1375 from jstuder-gh/neg_chaining

[04:20] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/326214511 https://github.com/rakudo/rakudo/compare/b4df753dfcd4...7b4a3b11c1bc

[04:20] <buggable> [travis build above] ☠ All failures are due to: failed make test (3 failures). Across all jobs, 3 unique test files failed.

[10:43] <|Tux|> Rakudo version 2017.12-140-g14c2cdb31 - MoarVM version 2017.12-22-gc2de234c4

[10:43] <|Tux|> csv-test-xs-20      0.441 -  0.467

[10:43] <|Tux|> csv-ip5xs           1.090 -  1.103

[10:43] <|Tux|> test-t --race       1.150 -  1.205

[10:43] <|Tux|> test-t              2.854 -  2.857

[10:43] <|Tux|> test               11.299 - 11.431

[10:43] <|Tux|> csv-parser         12.285 - 12.508

[10:43] <|Tux|> csv-ip5xs-20       13.022 - 13.133

[10:43] <|Tux|> test-t-20 --race   17.556 - 18.403

[10:43] <|Tux|> test-t-20          50.585 - 52.314

[11:06] <tbrowder> AlexDaniel: i’m going to try another way to handle the bigint concern.

[13:01] <tbrowder> nqp question, please: in many nqp ops signatures there is a “Mu:T” specified. what/where are they defined or otherwise identified?

[13:02] <tbrowder> i am fiddling with getting a bigint from a string value and the ops i am trying to use need those types as args.

[13:12] <ilmari> tbrowder: * Mu:T      - a type object, e.g. `Int`

[13:13] <ilmari> looks like it corresponds to Mu:U in rakudo

[13:15] <geekosaur> Any:U, probably. at perl 6 level, Mu is mainly used when you are dealing directly with Junctions

[13:16] <geekosaur> (a Junction passed as Any and subclasses thereof gets autothreaded; Mu prevents this and you get the Junction itself)

[13:17] <tbrowder> yes, but the problem i’m having is the string is too long to convert to an Int using nqp ops, but the hint to look at rakudo types is good, thanks!

[13:24] <tbrowder> here’s the nqp::op signature i want to use in rakudo/src/Perl6/Pod.nqp: “fromstr_I(str $val, Mu:T $type —> Int)” what do i use for “$type”?

[13:26] <tbrowder> the only nqp native types i know are str, int, int32, int64.

[13:26] <tbrowder> hm, going back to the sandbox again...

[13:27] <ilmari> Int?

[13:28] <ilmari> it claims to convert to a Big Integer of the given type, but also to only return Int

[13:32] <ilmari> looks like the docs should say --> $type (if that's legal)

[13:54] <tbrowder> using Int doesn’t work. nor does unboxing the Str to a str and using  it as the $val with str as the type. i’ll try “chaining” the args...

[13:55] <timotimo> in your situation i'd check the nqp test suite for uses of fromstr_I

[14:02] <tbrowder> arg! can’t get past “can’t unbox...”!

[14:02] <tbrowder> timotimo: excellent suggestion!

[14:08] <tbrowder> timotimo: thnx! there is a wealth of heretofore unknown info in the tests, and it looks like the solution to my prob is there, too!

[14:08] <timotimo> yay

[14:08] <timotimo> the nqp tests are rather thorough; pmurias is to thank for like three quarters :)

[14:09] <masak> pmurias++

[15:14] <tbrowder> if i were sharper than a dull tack i would have thought of looking at tests  :-D

[15:15] <tbrowder> earlier, that is...

[15:32] <timotimo> eh, it took me a while to figure out that the nqp tests are a good source of info

[15:35] <tbrowder> i’m very glad you figured it out!

[15:36] <timotimo> me, too :)

[18:22] <El_Che> just reported this to keep track of the failing Linux builds of 2017.12: https://github.com/rakudo/rakudo/issues/1377

[18:49] <b2gills> m: 'abc'.ords.rotor(2=>-1,:partial) # noticed this doesn't work, will report bug later

[18:49] <camelia> rakudo-moar 14c2cdb31: OUTPUT: «Cannot invoke this object (REPR: Uninstantiable; Callable)␤  in block <unit> at <tmp> line 1␤␤»

[19:02] <dogbert17> m: say 'abc'.ords.WHAT

[19:02] <camelia> rakudo-moar 14c2cdb31: OUTPUT: «(Seq)␤»

[19:09] <Geth> ¦ roast: 543af90d8c | usev6++ | 2 files

[19:09] <Geth> ¦ roast: [jvm] Skip newly failing tests (GH #1304)

[19:09] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/543af90d8c

[19:30] <Geth> ¦ roast: caca8f1dbd | usev6++ | 2 files

[19:30] <Geth> ¦ roast: [jvm] Unfudge now passing tests

[19:30] <Geth> ¦ roast:

[19:30] <Geth> ¦ roast: Fixed with nqp commit f6bccf79d8

[19:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/caca8f1dbd

[20:18] <Geth> ¦ roast: 6a7280a8a0 | usev6++ | 2 files

[20:18] <Geth> ¦ roast: [jvm] Update todo message RT #32694

[20:18] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6a7280a8a0

[20:19] <synopsebot> RT#32694 [rejected]: https://rt.perl.org/Ticket/Display.html?id=32694 FwD: Mail_Delivery_failure

[20:19] <bartolin> oops, should have been RT #132694

[20:19] <synopsebot> RT#132694 [new]: https://rt.perl.org/Ticket/Display.html?id=132694 [JVM] Coercion type Str(Any) returned from .keyof is not the same object as Str(Any)

[21:51] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/01/08/2018-02-fosdem-nearing/

[21:58] <pmurias> lizmat: the copywrite in NQP is only mentioned in the README: "NQP is Copyright (C) 2009-2018 by The Perl Foundation. See F<LICENSE> for licensing details."

[21:58] <pmurias> * copyright

[21:58] <jnthn> lizmat++ # weekly

[21:58] <jnthn> Maybe this week I'll find energy to do something...

[21:59] <lizmat> then add the contents of the LICENSE of the code you want to use to the NQP LICENSE file, something like:

[21:59] <lizmat> Portions Copyright (c) 2011 Alexander Shtuchkin, followed by the rest of the text

[22:02] <Geth> ¦ nqp/master: 4 commits pushed by pmurias++

[22:02] <Geth> ¦ nqp/master: 07e2b03bda | [js] Add "use strict"

[22:02] <Geth> ¦ nqp/master: fc728ac98f | [js] Improve encoding support

[22:02] <Geth> ¦ nqp/master: dd15d19f32 | Add tests for nqp::encoderep and the windows-1252 encoding

[22:02] <Geth> ¦ nqp/master: 0423d294b8 | [js] Mention that we have some code adapted from iconv-lite

[22:02] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/ec345715b7...0423d294b8

[22:03] <pmurias> lizmat: thank you for help, legal stuff is super weird/alien for me ;)

[22:03] <lizmat> pmurias: it also was to me, at one point in my life

[22:04] <lizmat> once you get dragged to court for trademark like issues, you get to know a lot  :-(

[22:10] <lizmat> https://books.google.nl/books?id=RRAX68WyUoMC&pg=PA185&lpg=PA185&dq=xxlink+vs+xlink+court+case&source=bl&ots=bhNK6FkWQ9&sig=tu7ks-jsm3MWi3n9xu3RbyRtihM&hl=en&sa=X&ved=0ahUKEwi39JTPsMnYAhVMKFAKHXxmBTIQ6AEIKTAA#v=onepage&q=xxlink%20vs%20xlink%20court%20case&f=false  in case you're interested  :-)

[22:20] <travis-ci> NQP build failed. pmurias '[js] Mention that we have some code adapted from iconv-lite'

[22:20] <travis-ci> https://travis-ci.org/perl6/nqp/builds/326572942 https://github.com/perl6/nqp/compare/ec345715b797...0423d294b851

[22:20] <pmurias> getting dragged into court for ~5 lines borrowed from a MIT licensed library would be super upsetting ;)

[22:25] <lizmat> yeah, won't happen

[22:25] <lizmat> especially with an MIT license

[22:32] <lizmat> afk&
