[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a can of WD40!

[00:01] *** Kaiepi left
[00:02] *** Kaiepi joined
[00:35] *** fake_space_whale joined
[01:23] <Geth> ¦ rakudo: 72bac67080 | (Zoffix Znet)++ | 3 files

[01:23] <Geth> ¦ rakudo: [6.d] Deprecate `undefine`

[01:23] <Geth> ¦ rakudo: 

[01:23] <Geth> ¦ rakudo: Per 6.d-prep

[01:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/72bac67080

[01:24] <Geth> ¦ roast: e325718ca2 | (Zoffix Znet)++ | MISC/misc-6.d.t

[01:24] <Geth> ¦ roast: Spec `undefine` is deprecated in 6.d

[01:24] <Geth> ¦ roast: 

[01:24] <Geth> ¦ roast: Rakudo impl: https://github.com/rakudo/rakudo/commit/72bac67080

[01:24] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e325718ca2

[01:35] <Geth> ¦ 6.d-prep: cceda20dea | (Zoffix Znet)++ | 2 files

[01:35] <Geth> ¦ 6.d-prep: Mark `undefine` deprecation as completed

[01:35] <Geth> ¦ 6.d-prep: 

[01:35] <Geth> ¦ 6.d-prep: Closes https://github.com/perl6/6.d-prep/issues/5

[01:35] <Geth> ¦ 6.d-prep: Rakudo impl: https://github.com/rakudo/rakudo/commit/72bac67080

[01:35] <Geth> ¦ 6.d-prep: Propspec:    https://github.com/perl6/roast/commit/e325718ca2

[01:35] <Geth> ¦ 6.d-prep: Docs:        https://github.com/perl6/doc/commit/f544565048

[01:35] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/cceda20dea

[01:39] *** spirit_pact joined
[01:40] *** spirit_pact left
[01:46] *** johnny5615 joined
[01:47] *** justyns joined
[01:47] <justyns> With our IRC ad service you can reach a global audience of entrepreneurs and fentanyl addicts with extraordinary engagement rates! https://williampitcock.com/

[01:47] <justyns> I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[01:47] <justyns> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[01:47] <justyns> A fascinating blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[01:47] *** justyns left
[01:48] *** johnny5615 left
[01:51] *** lizmat left
[01:55] *** Ben6429 joined
[01:55] <Ben6429> With our IRC ad service you can reach a global audience of entrepreneurs and fentanyl addicts with extraordinary engagement rates! https://williampitcock.com/

[01:55] <Ben6429> I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[01:55] <Ben6429> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[01:55] <Ben6429> A fascinating blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[01:55] *** MetaNova16 joined
[01:55] <[Coke]> *sigh*

[01:55] <MetaNova16> With our IRC ad service you can reach a global audience of entrepreneurs and fentanyl addicts with extraordinary engagement rates! https://williampitcock.com/

[01:55] <MetaNova16> I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[01:55] <MetaNova16> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[01:55] <MetaNova16> A fascinating blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[01:55] *** JStoker24 joined
[01:55] <JStoker24> With our IRC ad service you can reach a global audience of entrepreneurs and fentanyl addicts with extraordinary engagement rates! https://williampitcock.com/

[01:55] <JStoker24> I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[01:56] <JStoker24> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[01:56] <JStoker24> A fascinating blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[01:56] *** Zoffix joined
[01:56] *** ChanServ sets mode: +o Zoffix

[01:56] *** Ben6429 left
[01:56] *** Zoffix sets mode: +r
 
[01:56] *** Zoffix sets mode: -o Zoffix

[01:57] *** Zoffix left
[01:57] *** MetaNova16 left
[01:58] *** JStoker24 left
[01:59] <[Coke]> Zoffix++

[02:52] *** Kaiepi left
[02:54] *** Kaiepi joined
[03:29] *** fake_space_whale left
[07:14] <[Tux]> Rakudo version 2018.06-296-g72bac6708 - MoarVM version 2018.06-329-g21ea40f68

[07:14] <[Tux]> csv-test-xs-20      0.461 -  0.475

[07:14] <[Tux]> test-t --race       0.973 -  0.987

[07:14] <[Tux]> csv-ip5xs           1.123 -  1.304

[07:14] <[Tux]> test-t              2.353 -  2.478

[07:14] <[Tux]> csv-ip5xs-20        8.193 -  8.419

[07:14] <[Tux]> test               10.643 - 10.764

[07:14] <[Tux]> test-t-20 --race   13.455 - 14.028

[07:15] <[Tux]> csv-parser         26.008 - 26.305

[07:15] <[Tux]> test-t-20          42.910 - 45.153

[07:22] *** [TuxCM] left
[07:30] *** AlexDaniel left
[07:52] *** lizmat joined
[08:13] *** jsimonet1 left
[08:39] <lizmat> weekly https://opensource.com/article/18/8/migrating-perl-5-perl-6

[08:56] *** llfourn left
[09:24] *** ilmari[m] joined
[09:25] *** ilmari[m] is now known as ilmari_

[09:28] *** a3f_ left
[09:35] <lizmat> Files=1246, Tests=76341, 382 wallclock secs (16.35 usr  5.29 sys + 2686.70 cusr 264.35 csys = 2972.69 CPU)

[09:46] <Geth> ¦ rakudo: 42595c27d1 | (Elizabeth Mattijsen)++ | 2 files

[09:46] <Geth> ¦ rakudo: Slightly change semantics of (&) on QuantHashes

[09:46] <Geth> ¦ rakudo: 

[09:46] <Geth> ¦ rakudo: If the left-hand side of the (&) (also known as ∩) is mutable, then the

[09:46] <Geth> ¦ rakudo: resulting QuantHash object will also be mutable.  If it is immutable,

[09:46] <Geth> ¦ rakudo: it will stay immutable as before.

[09:46] <Geth> ¦ rakudo: 

[09:46] <Geth> ¦ rakudo: This should allow us to better optimize things like:

[09:46] <Geth> ¦ rakudo: <…commit message has 9 more lines…>

[09:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/42595c27d1

[09:46] *** Kaiepi left
[09:48] <Geth> ¦ roast: 60eb7ae4a2 | (Elizabeth Mattijsen)++ | S03-operators/set_intersection.t

[09:48] <Geth> ¦ roast: Adapt to slightly changed (&) semantics

[09:48] <Geth> ¦ roast: 

[09:48] <Geth> ¦ roast: As described in https://github.com/rakudo/rakudo/commit/42595c27d1

[09:48] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/60eb7ae4a2

[10:00] *** AlexDaniel joined
[11:00] *** robertle joined
[11:16] <Geth> ¦ rakudo: f1693f261a | (Elizabeth Mattijsen)++ | src/core/set_multiply.pm6

[11:16] <Geth> ¦ rakudo: Slightly change semantics of (.) on QuantHashes

[11:16] <Geth> ¦ rakudo: 

[11:16] <Geth> ¦ rakudo: If the left-hand side of the (.) (also known as ⊍) is mutable, then the

[11:16] <Geth> ¦ rakudo: resulting QuantHash object will also be mutable.  If it is immutable,

[11:16] <Geth> ¦ rakudo: it will stay immutable as before.

[11:16] <Geth> ¦ rakudo: 

[11:16] <Geth> ¦ rakudo: This should allow us to better optimize things like:

[11:16] <Geth> ¦ rakudo: <…commit message has 9 more lines…>

[11:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f1693f261a

[11:17] <Geth> ¦ roast: 908159d55b | (Elizabeth Mattijsen)++ | S03-operators/set_multiply.t

[11:17] <Geth> ¦ roast: Adapt to slightly changed (&) semantics

[11:17] <Geth> ¦ roast: 

[11:17] <Geth> ¦ roast: As described in https://github.com/rakudo/rakudo/commit/f1693f261a

[11:17] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/908159d55b

[11:44] *** Kaiepi joined
[12:14] <Geth> ¦ rakudo: 64ab717982 | (Elizabeth Mattijsen)++ | src/core/set_symmetric_difference.pm6

[12:14] <Geth> ¦ rakudo: Slightly change semantics of (^) on QuantHashes

[12:14] <Geth> ¦ rakudo: 

[12:14] <Geth> ¦ rakudo: If the left-hand side of the (^) (also known as ⊖) is mutable, then the

[12:14] <Geth> ¦ rakudo: resulting QuantHash object will also be mutable.  If it is immutable,

[12:14] <Geth> ¦ rakudo: it will stay immutable as before.

[12:14] <Geth> ¦ rakudo: 

[12:14] <Geth> ¦ rakudo: This should allow us to better optimize things like:

[12:14] <Geth> ¦ rakudo: <…commit message has 9 more lines…>

[12:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/64ab717982

[12:15] <Geth> ¦ roast: f0f8529bfc | (Elizabeth Mattijsen)++ | S03-operators/set_symmetric_difference.t

[12:15] <Geth> ¦ roast: Adapt to slightly changed (^) semantics

[12:15] <Geth> ¦ roast: 

[12:15] <Geth> ¦ roast: As described in https://github.com/rakudo/rakudo/commit/64ab717982

[12:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f0f8529bfc

[12:18] <Geth> ¦ rakudo: zoffixznet self-assigned Wrong math in Int + Int https://github.com/rakudo/rakudo/issues/2157

[12:21] *** AlexDaniel left
[12:23] *** AlexDaniel joined
[12:23] *** AlexDaniel left
[12:24] *** AlexDaniel joined
[12:36] *** Zoffix joined
[12:41] <dogbert17> ZOFFLOP: t/spec/S03-operators/set_symmetric_difference.t

[12:41] <dogbert17> perhaps lizmat is up to something here

[12:41] <Zoffix> dogbert17: or you don't have the latest and greatest rakudo + roast :)

[12:42] <dogbert17> and Zoffix is correct

[12:42] * dogbert17 hides

[12:42] * lizmat looks for dogbert17 

[12:42] <lizmat> .oO( e's gone! :-)

[12:42] <Zoffix> :)

[12:45] *** ChanServ sets mode: +o mst

[12:48] *** ExtraCrispy left
[12:48] *** literal left
[12:48] *** cognominal left
[12:48] *** tailgate left
[12:50] <dogbert17> I'm back and now everything is working again. lizmat++

[12:51] *** yoleaux left
[12:51] *** reportable6 left
[12:51] *** squashable6 left
[12:51] *** undersightable6 left
[12:51] *** statisfiable6 left
[12:51] *** greppable6 left
[12:51] *** benchable6 left
[12:51] *** nativecallable6 left
[13:07] <Geth> ¦ rakudo: 2999d4fc95 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[13:07] <Geth> ¦ rakudo: Document magic number in $?BITS

[13:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2999d4fc95

[13:10] *** Zoffix left
[13:13] <Geth> ¦ rakudo: fec1bd74f9 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[13:13] <Geth> ¦ rakudo: Fix wrong math with largish Ints

[13:13] <Geth> ¦ rakudo: 

[13:13] <Geth> ¦ rakudo: Fixes R#2157 https://github.com/rakudo/rakudo/issues/2157

[13:13] <Geth> ¦ rakudo: 

[13:13] <Geth> ¦ rakudo: The cause of the bug is NQP apparently uses doubles to handle its

[13:13] <Geth> ¦ rakudo: ints[^1]. 2**52 is the limit under which every number is representable

[13:13] <synopsebot> R#2157 [open]: https://github.com/rakudo/rakudo/issues/2157 [math][regression][⚠ blocker ⚠] Wrong math in Int + Int

[13:13] <Geth> ¦ rakudo: in a double, which is why when we bumped up[^2] the point at which we

[13:13] <Geth> ¦ rakudo: <…commit message has 9 more lines…>

[13:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fec1bd74f9

[13:14] <Geth> ¦ roast: 1667fb44d6 | (Zoffix Znet)++ | S32-num/int.t

[13:14] <Geth> ¦ roast: Cover Int math for non-double-representables

[13:14] <Geth> ¦ roast: 

[13:14] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/2157 R#2157

[13:14] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/fec1bd74f9

[13:14] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1667fb44d6

[13:15] <MasterDuke> Zoffix++

[13:23] *** mst sets mode: +s
 
[13:23] *** mst sets mode: -o mst

[13:26] <Geth> ¦ rakudo: 8e2c70fa15 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[13:26] <Geth> ¦ rakudo: Fix largish Int math on hex ints

[13:26] <Geth> ¦ rakudo: 

[13:26] <Geth> ¦ rakudo: This change was accidentally omitted from previous commit

[13:26] <Geth> ¦ rakudo: https://github.com/rakudo/rakudo/commit/fec1bd74f97e257d4c88673cd62fdcae39f587a3

[13:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8e2c70fa15

[13:26] <Geth> ¦ roast: e59fbd9d87 | (Zoffix Znet)++ | S32-num/int.t

[13:26] <Geth> ¦ roast: Cover largish Int math on hex, bin, and octals

[13:26] <Geth> ¦ roast: 

[13:26] <Geth> ¦ roast: Part of cover for R#2157 https://github.com/rakudo/rakudo/issues/2157

[13:26] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e59fbd9d87

[13:26] <synopsebot> R#2157 [closed]: https://github.com/rakudo/rakudo/issues/2157 [math][regression][⚠ blocker ⚠] Wrong math in Int + Int

[13:30] <Geth> ¦ rakudo: 342c5a9c65 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/Perl6/Actions.nqp

[13:30] <Geth> ¦ rakudo: Fix typo in comment

[13:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/342c5a9c65

[13:32] *** ChanServ sets mode: +o mst

[13:33] <mst> AlexDaniel: see if that lets them join here?

[13:35] *** notable6 left
[13:35] *** nativecallable6 joined
[13:35] *** ChanServ sets mode: +v nativecallable6

[13:37] <AlexDaniel> mst: I don't think it works

[13:37] <AlexDaniel> mst: but fwiw there are two IPs, one ipv4 and another ipv6

[13:37] <Geth> ¦ rakudo: 8cedbbd18b | (Elizabeth Mattijsen)++ | src/core/set_union.pm6

[13:37] <Geth> ¦ rakudo: Slightly change semantics of (|) on QuantHashes

[13:37] <Geth> ¦ rakudo: 

[13:37] <Geth> ¦ rakudo: If the left-hand side of the (|) (also known as ∪) is mutable, then the

[13:37] <Geth> ¦ rakudo: resulting QuantHash object will also be mutable.  If it is immutable,

[13:37] <Geth> ¦ rakudo: it will stay immutable as before.

[13:37] <Geth> ¦ rakudo: 

[13:37] <Geth> ¦ rakudo: This should allow us to better optimize things like:

[13:38] <Geth> ¦ rakudo: <…commit message has 9 more lines…>

[13:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8cedbbd18b

[13:38] <mst> AlexDaniel: er, nativecallable6 just joined?

[13:38] <mst> oh but that on'es logged in

[13:38] <AlexDaniel> mst: I think it managed to get a slot and logged in, yeah

[13:39] <AlexDaniel> undersightable6 was able to join #whateverable only

[13:39] <Geth> ¦ roast: 851e358a00 | (Elizabeth Mattijsen)++ | 2 files

[13:39] <Geth> ¦ roast: Adapt to slightly changed (|) semantics

[13:39] <Geth> ¦ roast: 

[13:39] <Geth> ¦ roast: As described in https://github.com/rakudo/rakudo/commit/8cedbbd18b

[13:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/851e358a00

[13:41] <AlexDaniel> mst: also, it's not that big of a deal if this crap doesn't last forever

[13:41] <mst> sec

[13:42] <mst> AlexDaniel: try now?

[13:43] <AlexDaniel> mst: doesn't work

[13:43] <mst> hrmf

[13:43] *** mst sets mode: -r
 
[13:43] *** mst sets mode: +b $~a

[13:43] <mst> AlexDaniel: again?

[13:43] *** undersightable6 joined
[13:43] <AlexDaniel> yeah, that works

[13:44] <AlexDaniel> mst: #moarvm also please?

[13:44] <AlexDaniel> ah ok

[13:45] *** undersightable6 left
[13:45] <mst> and #perl6

[13:46] *** greppable6 joined
[13:46] *** reportable6 joined
[13:46] *** statisfiable6 joined
[13:47] *** notable6 joined
[13:47] <samcv> AlexDaniel: that makes only registered users able to talk?

[13:47] *** squashable6 joined
[13:47] *** benchable6 joined
[13:47] <AlexDaniel> samcv: well, previously unregistered users were not even able to join the channel

[13:48] <samcv> ah yeah because it's -r

[13:48] <samcv> +r is joining the channel?

[13:48] <AlexDaniel> mst: thanks! All bots are up now

[13:48] <samcv> i forgot if it was relating to joining or speaking

[13:48] <mst> we're back to 'unregistered can't join, unless exempted'

[13:49] <mst> but the bots are now exempted

[13:49] *** undersightable6 joined
[13:53] <AlexDaniel> \o/ https://gist.github.com/Whateverable/075d3878549141e0a345965d5eda83cf#irc-bots

[13:53] <AlexDaniel> pinged dpk about yoleaux, it should be able to join

[13:53] <AlexDaniel> and yeah, ilbot3 should be removed from the list :'(

[13:57] *** AlexDaniel` left
[14:00] <samcv> mst: can unregistered user still join in #perl6?

[14:01] <mst> samcv: no

[14:01] <samcv> hopefully that can be removed asap since people often join who are new to perl6...

[14:03] <mst> right now, your choices are this, or being spammed

[14:03] <mst> well, or getting somebody to write or run a voicebot, maybe

[14:03] *** mst sets mode: -o mst

[14:05] <samcv> well, though we may block the spam, we block legitimate users as well

[14:05] <samcv> normal users can ignore spam, but they cannot get around the block

[14:07] <samcv> i'd prefer #perl6 allowed non-reg'd users, all other channels could be reg only. But real people shouldn't be unable to use #perl6

[14:08] <mst> I was asked to fix #perl6. I did it the least intrusive way available. if you want to start a discussion in there about which option is better and the consensus is "accept the spam so the newbies can still get in" I'll be happy to rejig the permissions appropriately

[14:09] <mst> I tend to try and provide mechanism, not policy :)

[14:09] <timotimo> i'd be blindly +1 on letting newbs back in

[14:09] <samcv> that is a policy I support as well

[14:11] <[Coke]> my 2¢: I would rather we block the spam at the moment.

[14:12] *** pmurias joined
[14:13] <lizmat> so, can we let newbies in without them being able to say anything?

[14:13] <lizmat> and change the message to mention that due to spam, they can only actually participate if they're registered ?

[14:26] <AlexDaniel> we will have let users join during the squashathon

[14:26] <AlexDaniel> squashable6: next

[14:26] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 1 day and ≈19 hours (2018-08-04 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:26] <AlexDaniel> on #perl6 only fwiw

[14:27] <AlexDaniel> have to*

[14:29] <AlexDaniel> although now that https://perl6.org/irc works I'm no longer sure :)

[14:46] <Geth> ¦ rakudo: df5d82e8f8 | (Elizabeth Mattijsen)++ | src/core/Str.pm6

[14:46] <Geth> ¦ rakudo: Make my @a = $string.comb about 25% faster

[14:46] <Geth> ¦ rakudo: 

[14:46] <Geth> ¦ rakudo: By giving the iterator its own push-all.

[14:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/df5d82e8f8

[14:47] <timotimo> nice.

[14:48] <lizmat> to make it 2x as fast still: $string.comb.iterator.push-all(my str @letters)

[14:50] <lizmat> oops, no, only 1.2x as fast

[14:50] <lizmat> compared to my str @letters = $string.comb

[14:51] <timotimo> mhh

[15:12] *** robertle left
[15:14] *** Kaiepi left
[15:22] *** travis-ci joined
[15:22] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Slightly change semantics of (|) on QuantHashes

[15:22] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/410814014 https://github.com/rakudo/rakudo/compare/342c5a9c65c7...8cedbbd18b11

[15:22] *** travis-ci left
[15:45] *** a3f joined
[15:55] <Geth> ¦ rakudo: JJ++ created pull request #2163: Change to non-native type

[15:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2163

[15:59] <Geth> ¦ rakudo: 651c4750d4 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | src/core/Enumeration.pm6

[15:59] <Geth> ¦ rakudo: Change to non-native type

[15:59] <Geth> ¦ rakudo: 

[15:59] <Geth> ¦ rakudo: Native types in roles are still affected by this bug: https://rt.perl.org/Public/Bug/Display.html?id=126120. It maybe changed back when that's solved.

[15:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/651c4750d4

[15:59] <Geth> ¦ rakudo: 3c8c6006ab | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core/Enumeration.pm6

[15:59] <Geth> ¦ rakudo: Merge pull request #2163 from JJ/patch-2

[15:59] <Geth> ¦ rakudo: 

[15:59] <Geth> ¦ rakudo: Change to non-native type

[15:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3c8c6006ab

[16:02] <Geth> ¦ rakudo: 0ac4276121 | (Elizabeth Mattijsen)++ | src/core/Enumeration.pm6

[16:02] <Geth> ¦ rakudo: Revert "Change to non-native type"

[16:02] <Geth> ¦ rakudo: 

[16:02] <Geth> ¦ rakudo: This reverts commit 651c4750d43d4c0130cf05cbda64d3d5911e9bd0.

[16:02] <Geth> ¦ rakudo: 

[16:02] <Geth> ¦ rakudo: Alas, the PR does not seem to be ready yet :-(

[16:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0ac4276121

[16:14] *** travis-ci joined
[16:14] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Make my @a = $string.comb about 25% faster

[16:14] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/410845273 https://github.com/rakudo/rakudo/compare/8cedbbd18b11...df5d82e8f8b4

[16:14] *** travis-ci left
[16:27] *** perlpilot joined
[16:29] *** pmurias left
[16:36] *** perlpilot left
[16:54] *** lizmat left
[18:02] *** undersightable6 left
[18:02] *** undersightable6 joined
[18:02] *** squashable6 left
[18:02] *** reportable6 left
[18:02] *** greppable6 left
[18:03] *** statisfiable6 left
[18:26] *** AlexDaniel left
[20:09] *** lizmat joined
[20:41] *** dct joined
[20:49] *** AlexDaniel joined
[21:06] *** Kaiepi joined
[21:16] *** Kaiepi left
[21:19] *** PufferBot left
[21:23] *** statisfiable6 joined
[21:26] <lizmat> so I thought I had a brainwave for an "is strict" trait on methods to disallow unrecognized named variables

[21:26] <lizmat> multi sub trait_mod:<is>(Method:D $m, :$strict) is export {

[21:26] <lizmat>     nqp::pop(nqp::getattr($m.signature,Signature,'@!params'));

[21:26] <lizmat> }

[21:26] *** Kaiepi joined
[21:27] <lizmat> that *does* remove *%_ from the signature, but not from the lexpad

[21:27] <lizmat> so I guess that gets codegenned first

[22:18] *** Zoffix joined
[22:28] <Zoffix> m: https://gist.github.com/zoffixznet/ed40eec3ecc00969e05999fbe3b8c1f9

[22:28] <camelia> rakudo-moar 0ac427612: OUTPUT: «No lexical found with name '%_'␤  in method z at <tmp> line 36␤  in block <unit> at <tmp> line 35␤␤»

[22:28] <Zoffix> lizmat: ^ that was my attempt :) Doesn't work, but maybe gives some ideas

[22:28] *** Zoffix left
[22:51] *** Kaiepi left
[23:23] *** stmuk joined
[23:23] *** stmuk_ left
