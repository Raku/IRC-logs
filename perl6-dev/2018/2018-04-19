[01:14] <MasterDuke> Kaiepi: american

[01:16] <Kaiepi> gthanks

[01:16] <Kaiepi> s/g//

[05:56] <[TuxCM]> Rakudo version 2018.03-241-g9e6ae276a - MoarVM version 2018.03-121-g4e129a4ec

[05:56] <[TuxCM]> csv-test-xs-20      0.442 -  0.479

[05:56] <[TuxCM]> csv-ip5xs           0.904 -  0.904

[05:56] <[TuxCM]> test-t --race       1.038 -  1.043

[05:56] <[TuxCM]> test-t              2.500 -  2.507

[05:56] <[TuxCM]> csv-ip5xs-20        8.651 -  8.859

[05:56] <[TuxCM]> test                8.905 -  9.634

[05:56] <[TuxCM]> test-t-20 --race   16.082 - 16.781

[05:56] <[TuxCM]> csv-parser         36.567 - 37.017

[05:56] <[TuxCM]> test-t-20          44.367 - 45.134

[06:10] <mryan> geekosaur: I guess you could put it that way...

[07:48] <lizmat_> Files=1239, Tests=76301, 318 wallclock secs (15.79 usr  5.47 sys + 2191.47 cusr 219.04 csys = 2431.77 CPU)

[10:20] <nine> |Tux|: https://gist.github.com/niner/fc6d15e881c5a3ba6df33a7d03175e6d

[15:24] <Geth> ¦ nqp: 4138401de3 | (Jonathan Worthington)++ | src/QRegex/Cursor.nqp

[15:24] <Geth> ¦ nqp: Use tryfindmethod in reduce_with_match

[15:24] <Geth> ¦ nqp:

[15:24] <Geth> ¦ nqp: Bringing it in line with reduce. This saves a double lookup of the

[15:24] <Geth> ¦ nqp: method.

[15:24] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/4138401de3

[16:07] <Geth> ¦ rakudo/better-sink-code-gen: d53fe90acc | (Jonathan Worthington)++ | src/vm/moar/Perl6/Ops.nqp

[16:07] <Geth> ¦ rakudo/better-sink-code-gen: Use new tryfindmeth op for the sink code-gen

[16:07] <Geth> ¦ rakudo/better-sink-code-gen:

[16:07] <Geth> ¦ rakudo/better-sink-code-gen: It results in slightly smaller code, saving around 10KB on the compiled

[16:07] <Geth> ¦ rakudo/better-sink-code-gen: output of CORE.setting. More significantly, it saves a duplicate hash

[16:07] <Geth> ¦ rakudo/better-sink-code-gen: lookup in the unoptimized path for each sink (previously, we had one

[16:07] <Geth> ¦ rakudo/better-sink-code-gen: for `can` and one for `findmeth` on the same key). While it was true

[16:07] <Geth> ¦ rakudo/better-sink-code-gen: that spesh could deal with this in many cases, this gives us better

[16:07] <Geth> ¦ rakudo/better-sink-code-gen: <…commit message has 6 more lines…>

[16:07] <Geth> ¦ rakudo/better-sink-code-gen: review: https://github.com/rakudo/rakudo/commit/d53fe90acc

[16:12] <nine> 3 million cycles saved. That's...... 1 millisecond. That's not to diminish this feat but more about how amazingly fast our CPUs are these days. It's pretty much beyond imagination what 3 GHz really means.

[16:12] <jnthn> Yeah, it's not wallclock measurable at all

[16:13] <jnthn> The code size improvement is probably worth more :)

[16:13] <timotimo> yeah, should make a little difference in maxresidentk in some cases, too?

[16:13] <jnthn> Tiny one, yeah

[16:13] <timotimo> does the generated code from that also use fewer registers maybe?

[16:13] <jnthn> No, the register use of the existing code was already pretty tight

[16:13] <timotimo> well, that's good

[16:14] <jnthn> Mostly I wanted to make sure spesh would do sensible things with tryfindmeth

[16:14] <jnthn> What I want to do next is look at doing code-gen of calling action methods directly into roles/tokens

[16:14] <jnthn> And will use tryfindmeth there

[16:15] <jnthn> At the moment it all goes through reduce which means its megamorphic there

[16:15] <jnthn> Well, I guess I could also look at trying to see if I can get it to inline and then propagate I guess

[16:16] <jnthn> That'd be the cool way, and probably have other similar benefits :)

[16:17] <jnthn> Anyway, now it's time to go cook :)

[16:17] <timotimo> i like the sound of that, both the cooking and the optimization :)

[16:19] <lizmat> I guess this will all be merged post 2018.04, right ?

[16:20] <japhb> optimized cooking?

[16:20] <timotimo> likely, lizmat

[16:20] <timotimo> seeing how the release might happen tomorrow or the day after?

[16:20] <lizmat> yeah

[16:21] <lizmat> well, I won't have much time after today anyway until Monday

[17:55] <AlexDaniel> shareable6: uptime

[17:55] <shareable6> AlexDaniel, 1 day, 21 hours, 16 minutes, and 45 seconds, 404.890625MiB maxrss. This is Rakudo version 2018.03 built on MoarVM version 2018.03 implementing Perl 6.c.

[17:55] <AlexDaniel> squashable6: uptime

[17:55] <squashable6> AlexDaniel, 1 day, 21 hours, 16 minutes, and 52 seconds, 360.292969MiB maxrss. This is Rakudo version 2018.03 built on MoarVM version 2018.03 implementing Perl 6.c.

[17:55] <AlexDaniel> undersightable6: uptime

[17:55] <undersightable6> AlexDaniel, 1 day, 21 hours, 16 minutes, and 57 seconds, 336.644531MiB maxrss. This is Rakudo version 2018.03 built on MoarVM version 2018.03 implementing Perl 6.c.

[17:55] <AlexDaniel> statisfiable6: uptime

[17:55] <statisfiable6> AlexDaniel, 1 day, 21 hours, 17 minutes, and 17 seconds, 251.867188MiB maxrss. This is Rakudo version 2018.03 built on MoarVM version 2018.03 implementing Perl 6.c.

[17:56] * AlexDaniel looks at https://irclog.perlgeek.de/perl6-dev/2018-04-17#i_16058361

[17:56] <AlexDaniel> nativecallable6: uptime

[17:56] <nativecallable6> AlexDaniel, 1 day, 21 hours, 17 minutes, and 57 seconds, 228.046875MiB maxrss. This is Rakudo version 2018.03 built on MoarVM version 2018.03 implementing Perl 6.c.

[17:56] <AlexDaniel> reportable6: uptime

[17:56] <reportable6> AlexDaniel, 1 day, 21 hours, 18 minutes, and 8 seconds, 266.582031MiB maxrss. This is Rakudo version 2018.03 built on MoarVM version 2018.03 implementing Perl 6.c.

[17:57] <AlexDaniel> I don't think there's any significant difference?

[17:58] <AlexDaniel> yeah

[18:03] <AlexDaniel> releasable6: status

[18:03] <releasable6> AlexDaniel, Next release in ≈2 days and ≈0 hours. 4 blockers. 224 out of 241 commits logged

[18:03] <releasable6> AlexDaniel, Details: https://gist.github.com/0ce5187e8d0668db87065d0a171402c2

[18:09] <Geth> ¦ nqp: c84f2fa206 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[18:09] <Geth> ¦ nqp: [MoarVM Bump] Brings 3 commits

[18:09] <Geth> ¦ nqp:

[18:09] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03-121-g4e129a4...2018.03-124-gdeaffb2de

[18:09] <Geth> ¦ nqp: deaffb2de Make tryfindmeth not throw in some cases it did

[18:09] <Geth> ¦ nqp: e88b24b4b Mark thread blocked around getaddrinfo

[18:09] <Geth> ¦ nqp: 80fe576e5 Correct lazy static lexical deserialization

[18:09] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/c84f2fa206

[18:09] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03-121-g4e129a4...2018.03-124-gdeaffb2de

[18:09] <Geth> ¦ rakudo: b0cc354340 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[18:09] <Geth> ¦ rakudo: [NQP Bump] Brings 2 commits

[18:09] <Geth> ¦ rakudo:

[18:09] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.03-81-g1832172...2018.03-83-gc84f2fa20

[18:09] <Geth> ¦ rakudo: c84f2fa20 [MoarVM Bump] Brings 3 commits

[18:09] <Geth> ¦ rakudo: 4138401de Use tryfindmethod in reduce_with_match

[18:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b0cc354340

[18:10] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-81-g1832172...2018.03-83-gc84f2fa20

[18:33] <AlexDaniel> reportable6: status

[18:33] <reportable6> AlexDaniel, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Reportable

[18:33] <AlexDaniel> releasable6:: status

[18:33] <releasable6> AlexDaniel, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Releasable

[18:33] <AlexDaniel> releasable6: status

[18:33] <releasable6> AlexDaniel, Next release in ≈2 days and ≈0 hours. 3 blockers. 224 out of 242 commits logged

[18:33] <releasable6> AlexDaniel, Details: https://gist.github.com/05446d2769754a02fdf054c9a0ce7025

[18:33] <AlexDaniel> Zoffix: \o/

[19:00] <releasable6> Next release in ≈1 day and ≈23 hours. 3 blockers. Please log your changes in the ChangeLog

[20:10] <Zoffix> AlexDaniel: what?

[20:37] <AlexDaniel> jnthn++ fixed the segfault

[20:38] <jnthn> Yay, thanks for verifying :)

[20:52] <AlexDaniel> nine++ # debian issues

[20:54] <Geth> ¦ nqp/nqpmake: 10 commits pushed by (Stefan Seifert)++

[20:54] <Geth> ¦ nqp/nqpmake: review: https://github.com/perl6/nqp/compare/20d1249bdab4...fb78ef8c471a
