[01:11] <Geth> ¦ roast/grisu: 8a8ecf89b1 | (Zoffix Znet)++ | S02-names-vars/perl.t

[01:11] <Geth> ¦ roast/grisu: Remove trailing whitespace

[01:11] <Geth> ¦ roast/grisu: review: https://github.com/perl6/roast/commit/8a8ecf89b1

[01:18] <Geth> ¦ rakudo/no-unneeded-java: 6419a7e53a | (Aleks-Daniel Jakimenko-Aleksejev)++ | .travis.yml

[01:18] <Geth> ¦ rakudo/no-unneeded-java: Don't install jdk when building for moar

[01:18] <Geth> ¦ rakudo/no-unneeded-java:

[01:18] <Geth> ¦ rakudo/no-unneeded-java: When building with backends=moar there is no need to install

[01:18] <Geth> ¦ rakudo/no-unneeded-java: oracle-java8-installer, and installing it regardless may result in 404

[01:18] <Geth> ¦ rakudo/no-unneeded-java: failures because the 3rd party source is sometimes unavailable.

[01:18] <Geth> ¦ rakudo/no-unneeded-java:

[01:18] <Geth> ¦ rakudo/no-unneeded-java: Resolves #1646.

[01:18] <Geth> ¦ rakudo/no-unneeded-java: review: https://github.com/rakudo/rakudo/commit/6419a7e53a

[01:21] <Geth> ¦ roast/grisu: 39d4ac68ef | (Zoffix Znet)++ | S03-metaops/hyper.t

[01:21] <Geth> ¦ roast/grisu: Fix incorrect nodality tests for reduce/produce

[01:21] <Geth> ¦ roast/grisu:

[01:21] <Geth> ¦ roast/grisu: Closes https://github.com/rakudo/rakudo/issues/1633

[01:21] <Geth> ¦ roast/grisu:

[01:21] <Geth> ¦ roast/grisu: The tests' description say they're testing that reduce/produce

[01:21] <Geth> ¦ roast/grisu: are nodal, and it makes sense for them to be nodal, however, the

[01:21] <Geth> ¦ roast/grisu: $expected specified in the tests indicates the non-nodal behaviour.

[01:21] <Geth> ¦ roast/grisu:

[01:21] <Geth> ¦ roast/grisu: Likely, the $expected was simply copy-pasted from the output of

[01:21] <Geth> ¦ roast/grisu: running the $got code and plugged into the test, without noticing

[01:21] <Geth> ¦ roast/grisu: that the result is incorrect.

[01:21] <Geth> ¦ roast/grisu: review: https://github.com/perl6/roast/commit/39d4ac68ef

[01:21] <Geth> ¦ roast/grisu: 07b82763db | (Zoffix Znet)++ | S03-metaops/hyper.t

[01:21] <Geth> ¦ roast/grisu: Merge branch 'master' into grisu

[01:21] <Geth> ¦ roast/grisu: review: https://github.com/perl6/roast/commit/07b82763db

[01:22] <Geth> ¦ rakudo: AlexDaniel++ created pull request #1650: Don't install jdk when building for moar

[01:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1650

[01:26] <AlexDaniel> ah, I see

[01:28] <Geth> ¦ rakudo/no-unneeded-java: de53040e71 | (Aleks-Daniel Jakimenko-Aleksejev)++ | .travis.yml

[01:28] <Geth> ¦ rakudo/no-unneeded-java: Don't install jdk when building for moar

[01:28] <Geth> ¦ rakudo/no-unneeded-java:

[01:28] <Geth> ¦ rakudo/no-unneeded-java: When building with backends=moar there is no need to install

[01:28] <Geth> ¦ rakudo/no-unneeded-java: oracle-java8-installer, and installing it regardless may result in 404

[01:28] <Geth> ¦ rakudo/no-unneeded-java: failures because the 3rd party source is sometimes unavailable.

[01:28] <Geth> ¦ rakudo/no-unneeded-java:

[01:28] <Geth> ¦ rakudo/no-unneeded-java: Resolves #1646.

[01:28] <Geth> ¦ rakudo/no-unneeded-java: review: https://github.com/rakudo/rakudo/commit/de53040e71

[01:34] <Geth> ¦ rakudo/no-unneeded-java: 958613eb41 | (Aleks-Daniel Jakimenko-Aleksejev)++ | .travis.yml

[01:34] <Geth> ¦ rakudo/no-unneeded-java: Retrigger (cuz no other way)

[01:34] <Geth> ¦ rakudo/no-unneeded-java:

[01:34] <Geth> ¦ rakudo/no-unneeded-java: This commit won't be merged.

[01:34] <Geth> ¦ rakudo/no-unneeded-java: review: https://github.com/rakudo/rakudo/commit/958613eb41

[01:35] <AlexDaniel> gah! OK now it's rolling

[02:53] <Geth> ¦ roast/grisu: 6a2e0399e8 | (Zoffix Znet)++ | S32-num/rounders.t

[02:53] <Geth> ¦ roast/grisu: Use correct test routines for Rat.round tests / Unfudge JVM

[02:53] <Geth> ¦ roast/grisu:

[02:53] <Geth> ¦ roast/grisu: 1) Compare the numbers as tests actually claim to compare:

[02:53] <Geth> ¦ roast/grisu:     using numeric semantics, not string semantics which `is` uses

[02:53] <Geth> ¦ roast/grisu: 2) For .round(1e-5) test, use approximately equals operator:

[02:53] <Geth> ¦ roast/grisu:     it was fudged on JVM and passing on MoarVM for the wrong reason.

[02:54] <Geth> ¦ roast/grisu:     The result of rounding is a Num (value 123.45679000000001e0),

[02:54] <Geth> ¦ roast/grisu: <…commit message has 9 more lines…>

[02:54] <Geth> ¦ roast/grisu: review: https://github.com/perl6/roast/commit/6a2e0399e8

[02:55] <Geth> ¦ roast/6.c-errata: f6e070bff2 | (Zoffix Znet)++ | S32-num/rounders.t

[02:55] <Geth> ¦ roast/6.c-errata: Use correct test routines for Rat.round tests / Unfudge JVM

[02:55] <Geth> ¦ roast/6.c-errata:

[02:55] <Geth> ¦ roast/6.c-errata: 1) Compare the numbers as tests actually claim to compare:

[02:55] <Geth> ¦ roast/6.c-errata:     using numeric semantics, not string semantics which `is` uses

[02:55] <Geth> ¦ roast/6.c-errata: 2) For .round(1e-5) test, use approximately equals operator:

[02:55] <Geth> ¦ roast/6.c-errata:     it was fudged on JVM and passing on MoarVM for the wrong reason.

[02:55] <Geth> ¦ roast/6.c-errata:     The result of rounding is a Num (value 123.45679000000001e0),

[02:55] <Geth> ¦ roast/6.c-errata: <…commit message has 9 more lines…>

[02:55] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/f6e070bff2

[03:05] <Geth> ¦ roast/grisu: a4a3c76205 | (Zoffix Znet)++ | integration/advent2013-day15.t

[03:05] <Geth> ¦ roast/grisu: Remove trailing whitespace

[03:05] <Geth> ¦ roast/grisu: review: https://github.com/perl6/roast/commit/a4a3c76205

[03:18] <Geth> ¦ roast/grisu: e1d14f4006 | (Zoffix Znet)++ | integration/advent2013-day15.t

[03:19] <Geth> ¦ roast/grisu: Fix incorrect Num sequence test / Unfudge JVM

[03:19] <Geth> ¦ roast/grisu:

[03:19] <Geth> ¦ roast/grisu: The way JVM stringifies is accurate and the reason more stringifies

[03:19] <Geth> ¦ roast/grisu: the way the author of the test tested it is due to loss of precision bug.

[03:19] <Geth> ¦ roast/grisu:

[03:19] <Geth> ¦ roast/grisu: While MoarVM's current stringification is used by `python2` and `perl`,

[03:19] <Geth> ¦ roast/grisu: I don't believe it's correct for our purposes:

[03:19] <Geth> ¦ roast/grisu: <…commit message has 19 more lines…>

[03:19] <Geth> ¦ roast/grisu: review: https://github.com/perl6/roast/commit/e1d14f4006

[03:20] <Geth> ¦ roast/6.c-errata: f0d6e49049 | (Zoffix Znet)++ | integration/advent2013-day15.t

[03:20] <Geth> ¦ roast/6.c-errata: Fix incorrect Num sequence test / Unfudge JVM

[03:20] <Geth> ¦ roast/6.c-errata:

[03:20] <Geth> ¦ roast/6.c-errata: The way JVM stringifies is accurate and the reason more stringifies

[03:20] <Geth> ¦ roast/6.c-errata: the way the author of the test tested it is due to loss of precision bug.

[03:20] <Geth> ¦ roast/6.c-errata:

[03:20] <Geth> ¦ roast/6.c-errata: While MoarVM's current stringification is used by `python2` and `perl`,

[03:20] <Geth> ¦ roast/6.c-errata: I don't believe it's correct for our purposes:

[03:20] <Geth> ¦ roast/6.c-errata: <…commit message has 19 more lines…>

[03:20] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/f0d6e49049

[03:28] <Geth> ¦ roast/grisu: 4546862703 | (Zoffix Znet)++ | S32-exceptions/misc.t

[03:28] <Geth> ¦ roast/grisu: Loosen Num-in-sink warning text message match test

[03:28] <Geth> ¦ roast/grisu:

[03:28] <Geth> ¦ roast/grisu: Mostly to make master roast pass with Grisu3 Num stringification

[03:28] <Geth> ¦ roast/grisu: on MoarVM. After the change, the value comes out as

[03:29] <Geth> ¦ roast/grisu: `6.0221408999999994e+23`. My C-only impl of the Grisu3 algo doesn't

[03:29] <Geth> ¦ roast/grisu: have this issue, and I suspect the cause is the Num parsing bug

[03:29] <Geth> ¦ roast/grisu: and/or nqp::div_In issue with denormals is to blame for this.

[03:29] <Geth> ¦ roast/grisu: <…commit message has 6 more lines…>

[03:29] <Geth> ¦ roast/grisu: review: https://github.com/perl6/roast/commit/4546862703

[03:41] <Geth> ¦ roast/grisu: dba0ce1656 | (Zoffix Znet)++ | S02-names-vars/perl.t

[03:41] <Geth> ¦ roast/grisu: Temp-fudge Num roundtrip test for Moar

[03:41] <Geth> ¦ roast/grisu:

[03:41] <Geth> ¦ roast/grisu: Fixing Num stringification bugs on MoarVM made this test more

[03:41] <Geth> ¦ roast/grisu: sensitive to the Num parsing bugs we had.

[03:41] <Geth> ¦ roast/grisu:

[03:41] <Geth> ¦ roast/grisu: I'm fairly confident I can fix the parsing bugs before the release,

[03:41] <Geth> ¦ roast/grisu: so I'm fudging this test on `master` so stringification bug

[03:41] <Geth> ¦ roast/grisu: fixes could land in to rakudo/MoarVM master.

[03:41] <Geth> ¦ roast/grisu: review: https://github.com/perl6/roast/commit/dba0ce1656

[04:14] <Geth> ¦ nqp: a116cfb6df | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[04:14] <Geth> ¦ nqp: [MoarVM Bump] Brings 5 commits

[04:14] <Geth> ¦ nqp:

[04:14] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03-12-gb5b6968...2018.03-17-gb8d7082

[04:14] <Geth> ¦ nqp: b8d7082 Merge pull request #823 from MoarVM/grisu

[04:14] <Geth> ¦ nqp: af2eb8a More post-Grisu3 Num renderer polishing

[04:14] <Geth> ¦ nqp: 49b7389 Generalize mp_get_double()

[04:14] <Geth> ¦ nqp: 8841c42 Mod post-Grisu3 Num renderer…

[04:14] <Geth> ¦ nqp: 067c059 Stringify Num using Grisu3 algo

[04:14] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a116cfb6df

[04:14] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03-12-gb5b6968...2018.03-17-gb8d7082

[04:14] <Geth> ¦ rakudo: a2a2a745c4 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[04:15] <Geth> ¦ rakudo: [NQP Bump] a116cfb [MoarVM Bump] Brings 5 commits

[04:15] <Geth> ¦ rakudo:

[04:15] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.03-17-gd6e7d93...2018.03-18-ga116cfb

[04:15] <Geth> ¦ rakudo:

[04:15] <Geth> ¦ rakudo: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03-12-gb5b6968...2018.03-17-gb8d7082

[04:15] <Geth> ¦ rakudo: b8d7082 Merge pull request #823 from MoarVM/grisu

[04:15] <Geth> ¦ rakudo: af2eb8a More post-Grisu3 Num renderer polishing

[04:15] <Geth> ¦ rakudo: 49b7389 Generalize mp_get_double()

[04:15] <Geth> ¦ rakudo: 8841c42 Mod post-Grisu3 Num renderer…

[04:15] <Geth> ¦ rakudo: 067c059 Stringify Num using Grisu3 algo

[04:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a2a2a745c4

[04:15] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-17-gd6e7d93...2018.03-18-ga116cfb

[04:15] <Geth> ¦ roast: zoffixznet++ created pull request #406: Fixes/Fudges for Grisu3 Num stringification

[04:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/406

[04:15] <Geth> ¦ roast/master: 8 commits pushed by (Zoffix Znet)++

[04:15] <Geth> ¦ roast/master: 8a8ecf89b1 | Remove trailing whitespace

[04:15] <Geth> ¦ roast/master: 07b82763db | Merge branch 'master' into grisu

[04:15] <Geth> ¦ roast/master: 6a2e0399e8 | Use correct test routines for Rat.round tests / Unfudge JVM

[04:15] <Geth> ¦ roast/master: a4a3c76205 | Remove trailing whitespace

[04:15] <Geth> ¦ roast/master: e1d14f4006 | Fix incorrect Num sequence test / Unfudge JVM

[04:15] <Geth> ¦ roast/master: 4546862703 | Loosen Num-in-sink warning text message match test

[04:15] <Geth> ¦ roast/master: dba0ce1656 | Temp-fudge Num roundtrip test for Moar

[04:15] <Geth> ¦ roast/master: fab5926267 | Merge pull request #406 from perl6/grisu

[04:15] <Geth> ¦ roast/master: review: https://github.com/perl6/roast/compare/39d4ac68efe6...fab592626771

[04:31] <Kaiepi> what would i need to do to implement support for wchar_t as a type for nativecall?

[04:41] <Kaiepi> never mind, i think i worked out what i need to do

[07:14] <Geth> ¦ nqp: 8b5d8e3d10 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[07:14] <Geth> ¦ nqp: [MoarVM Bump] Brings 2 commits

[07:14] <Geth> ¦ nqp:

[07:14] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03-17-gb8d7082...2018.03-19-ga5ed7ea

[07:14] <Geth> ¦ nqp: a5ed7ea Tweak naming of double mantissa size define

[07:14] <Geth> ¦ nqp: 4d3fc28 Fix handling of denormals in nqp::div_In

[07:14] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/8b5d8e3d10

[07:14] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03-17-gb8d7082...2018.03-19-ga5ed7ea

[07:14] <Geth> ¦ rakudo: 63617a8d52 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[07:14] <Geth> ¦ rakudo: [NQP Bump] 8b5d8e3 [MoarVM Bump] Brings 2 commits

[07:14] <Geth> ¦ rakudo:

[07:14] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.03-18-ga116cfb...2018.03-19-g8b5d8e3

[07:14] <Geth> ¦ rakudo:

[07:14] <Geth> ¦ rakudo: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03-17-gb8d7082...2018.03-19-ga5ed7ea

[07:14] <Geth> ¦ rakudo: a5ed7ea Tweak naming of double mantissa size define

[07:14] <Geth> ¦ rakudo: 4d3fc28 Fix handling of denormals in nqp::div_In

[07:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/63617a8d52

[07:14] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-18-ga116cfb...2018.03-19-g8b5d8e3

[07:40] <samcv> can anyone tell my what i'm doing wrong with nqp::iterator and hash's?

[07:40] <samcv> nqp: my %hash := nqp::hash('what', 'here'); my $iter := nqp::iterator(%hash); say(nqp::iterkey_s($iter));

[07:40] <camelia> nqp-moarvm: OUTPUT: «You have not advanced to the first item of the hash iterator, or have gone past the end␤   at <tmp>:1  (<ephemeral file>:<mainline>)␤ from gen/moar/stage2/NQPHLL.nqp:1585  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/NQPHLL.moarvm:eval)␤ from gen/moar/stag…»

[07:41] <samcv> nqp: my %hash := nqp::hash('what', 'here'); for %hash { say(nqp::iterkey_s($_)) }

[07:41] <camelia> nqp-moarvm: OUTPUT: «what␤»

[07:41] <samcv> this seems to work though

[07:45] <samcv> ah it seems I need to use nqp::shift. I should add that to the nqp documentation since that isn't that clear

[07:54] <Geth> ¦ nqp: e0be6c62af | (Samantha McVey)++ | docs/ops.markdown

[07:54] <Geth> ¦ nqp: [doc] Make it clear to use nqp::shift for hash iterator's

[07:54] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/e0be6c62af

[07:54] <Geth> ¦ nqp: 1684794ebc | (Samantha McVey)++ | docs/ops.markdown

[07:54] <Geth> ¦ nqp: [doc] Use perl6 fenced code blocks instead of just 'perl'

[07:54] <Geth> ¦ nqp:

[07:54] <Geth> ¦ nqp: Should highlight better on github or compatible renderers.

[07:54] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/1684794ebc

[09:24] <Geth> ¦ rakudo: 8422d7b4e2 | pmurias++ (committed by Zoffix Znet) | src/Perl6/Actions.nqp

[09:24] <Geth> ¦ rakudo: Parse scientific notation numbers using div_In

[09:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8422d7b4e2

[09:24] <Geth> ¦ rakudo: 17446fc131 | (Zoffix Znet)++ | src/core/allomorphs.pm6

[09:24] <Geth> ¦ rakudo: Fix parsing of denormal Nums in &val

[09:24] <Geth> ¦ rakudo:

[09:24] <Geth> ¦ rakudo: We can't just raise 10 into a power to a magnitude of a Num,

[09:24] <Geth> ¦ rakudo: as denormals' magnitude would not fit into a normal double.

[09:24] <Geth> ¦ rakudo:

[09:24] <Geth> ¦ rakudo: Fix by using an Int instead and then producing the Num with

[09:24] <Geth> ¦ rakudo: nqp::div_In op. This aligns the parsing in &val with the

[09:24] <Geth> ¦ rakudo: parsing done in the grammar for literal numbers.

[09:25] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/17446fc131

[09:35] <Geth> ¦ roast: ec20be04b6 | (Zoffix Znet)++ | S32-num/stringify.t

[09:35] <Geth> ¦ roast: Remove trailing whitespace

[09:35] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ec20be04b6

[10:05] <travis-ci> Rakudo build failed. Zoffix Znet 'Fix parsing of denormal Nums in &val

[10:05] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/358003954 https://github.com/rakudo/rakudo/compare/63617a8d5250...17446fc1318f

[10:05] <buggable> [travis build above] ☠ All failures are due to: failed make test (1 failure). Across all jobs, only t/04-nativecall/09-nativecast.t test file failed.

[11:50] <[Tux]> Rakudo version 2018.03-70-g17446fc13 - MoarVM version 2018.03-24-gd322741ce

[11:50] <[Tux]> csv-test-xs-20      0.440 -  0.486

[11:50] <[Tux]> csv-ip5xs           0.818 -  0.888

[11:50] <[Tux]> test-t --race       1.056 -  1.465

[11:50] <[Tux]> test-t              2.498 -  2.799

[11:50] <[Tux]> csv-ip5xs-20        7.775 -  8.855

[11:50] <[Tux]> test                9.677 -  9.783

[11:50] <[Tux]> test-t-20 --race   15.591 - 19.062

[11:50] <[Tux]> csv-parser         39.683 - 40.060

[11:50] <[Tux]> test-t-20          44.439 - 48.628

[11:58] <Geth> ¦ nqp: be7fd36188 | (Stefan Seifert)++ | 4 files

[11:58] <Geth> ¦ nqp: Make NQP's source digest available through the compiler config

[11:58] <Geth> ¦ nqp:

[11:58] <Geth> ¦ nqp: This gives NQP's user precise information about the NQP version used and makes

[11:58] <Geth> ¦ nqp: it possible to detect any change in NQP's sources.

[11:58] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/be7fd36188

[12:11] <Geth> ¦ rakudo: d91e930edf | (Stefan Seifert)++ | 4 files

[12:11] <Geth> ¦ rakudo: Force a rebuild of compiler and modules on changes to NQP

[12:11] <Geth> ¦ rakudo:

[12:11] <Geth> ¦ rakudo: We use the NQP compiler's new source-digest to detect any changes to NQP.

[12:11] <Geth> ¦ rakudo: Changes will trigger a rebuild of rakudo and also affect the Perl 6 compiler's

[12:11] <Geth> ¦ rakudo: ID. Thus precomp files will be outdated accordingly and can be recompiled for

[12:11] <Geth> ¦ rakudo: the new NQP dependencies.

[12:11] <Geth> ¦ rakudo:

[12:12] <Geth> ¦ rakudo: With this the need for a manual "make clean" after NQP updates and "Missing or

[12:12] <Geth> ¦ rakudo: wrong version of dependency" errors in general should be greatly reduced.

[12:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d91e930edf

[12:13] <MasterDuke> nine++

[12:21] <dogbert11> make: *** No rule to make target 'tools/build/check-nqp-version.pl', needed by 'check_nqp_version'.  Stop.

[12:22] <dogbert11> where do I get this tool?

[12:24] <timotimo> cool

[12:24] <timotimo> dogbert11: did you Configure.pl before this?

[12:25] <timotimo> oh, of course

[12:26] <dogbert11> yes I did: perl Configure.pl --gen-moar --gen-nqp --backends=moar

[12:27] <MasterDuke> nine: is there a tools/build/check-nqp-version.pl that you forgot to check in?

[12:27] <timotimo> that must be it, yeah

[12:29] <travis-ci> Rakudo build failed. Stefan Seifert 'Force a rebuild of compiler and modules on changes to NQP

[12:29] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/358035133 https://github.com/rakudo/rakudo/compare/17446fc1318f...d91e930edf4c

[12:30] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[12:42] <Geth> ¦ rakudo: 5298b7aaed | (Samantha McVey)++ | 2 files

[12:42] <Geth> ¦ rakudo: Make sure .encode and .decode accept the same encoding aliases

[12:42] <Geth> ¦ rakudo:

[12:42] <Geth> ¦ rakudo: Internals.pm6 (used for .decode method) was missing utf-8-c8 alias which

[12:42] <Geth> ¦ rakudo: was worked with .encode but not .decode.

[12:42] <Geth> ¦ rakudo:

[12:42] <Geth> ¦ rakudo: Registry.pm6 was missing windows1252 and windows1251 although they

[12:42] <Geth> ¦ rakudo: worked with .decode they did not work with .encode

[12:42] <Geth> ¦ rakudo: <…commit message has 6 more lines…>

[12:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5298b7aaed

[12:44] <samcv> night all o/

[12:51] <FROGGS> night samcv

[12:52] <Geth> ¦ rakudo: 265180550c | (Stefan Seifert)++ | tools/build/check-nqp-version.pl

[12:52] <Geth> ¦ rakudo: Add missing tools/build/check-nqp-version.pl

[12:52] <Geth> ¦ rakudo:

[12:52] <Geth> ¦ rakudo: Thanks to MasterDuke++ for the reminder

[12:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/265180550c

[12:52] <nine> Always the same, whenever I create a new file...

[12:53] <timotimo> :)

[13:00] <travis-ci> Rakudo build failed. Samantha McVey 'Make sure .encode and .decode accept the same encoding aliases

[13:00] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/358041911 https://github.com/rakudo/rakudo/compare/d91e930edf4c...5298b7aaedc8

[13:00] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[13:13] <travis-ci> Rakudo build failed. Stefan Seifert 'Add missing tools/build/check-nqp-version.pl

[13:13] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/358044132 https://github.com/rakudo/rakudo/compare/5298b7aaedc8...265180550c98

[13:14] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[13:14] <MasterDuke> nine: make: *** No rule to make target 'gen/nqp-version', needed by 'blib/Perl6/ModuleLoader.moarvm'.  Stop.

[13:15] <nine> MasterDuke: did it run tools/build/check-nqp-version.pl?

[13:15] <MasterDuke> yeah

[13:16] <nine> Oooh...probably needs an NQP bump

[13:16] <nine> I explicitly tested it without but of course did not remove the gen/nqp-version file that was already there

[13:16] <MasterDuke> i get the same thing locally at HEAD/HEAD/HEAD

[13:17] <nine> MasterDuke: did you run NQP's Configure.pl, too?

[13:17] <MasterDuke> yeah

[13:17] <MasterDuke> same error after a `make clean` in rakudo

[13:17] <Geth> ¦ rakudo: 2365b558af | (Stefan Seifert)++ | tools/build/NQP_REVISION

[13:17] <Geth> ¦ rakudo: Bump NQP version for source-digest compiler config

[13:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2365b558af

[13:17] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-19-g8b5d8e3...2018.03-22-gbe7fd3618

[13:18] <nine> MasterDuke: what does nqp --show-config | grep source-digest give you?

[13:18] <MasterDuke> nqp::source-digest=c4431924123b8e16a26e3acc95be5977fba2666b

[13:18] <nine> And there's no gen/nqp-version file even after check-nqp-version.pl ran?

[13:19] <MasterDuke> no gen/nqp-version

[13:21] <MasterDuke> nine: i think i know what it is

[13:22] <MasterDuke> check-nqp-version.pl does `my @config = qx(nqp --show-config);`

[13:22] <MasterDuke> which calls my system installed nqp

[13:22] <MasterDuke> which is 2017.06

[13:23] <MasterDuke> it should call the one in whatever --prefix i set with Configure.pl

[13:31] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1652: Rename tools/install-dist.pl to install-dist.p6

[13:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1652

[13:35] <travis-ci> Rakudo build failed. Stefan Seifert 'Bump NQP version for source-digest compiler config'

[13:35] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/358049674 https://github.com/rakudo/rakudo/compare/265180550c98...2365b558af52

[13:35] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[13:50] <Geth> ¦ rakudo: eb71edccfd | (Stefan Seifert)++ | 4 files

[13:50] <Geth> ¦ rakudo: Use correct nqp binary instead of relying on $PATH

[13:50] <Geth> ¦ rakudo:

[13:50] <Geth> ¦ rakudo: Fixes build when using a different nqp than the one in $PATH

[13:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/eb71edccfd

[13:52] <nine> MasterDuke: should work now

[14:19] <MasterDuke> nine++ working now (had to do a make clean first though)

[14:30] <travis-ci> Rakudo build passed. Stefan Seifert 'Use correct nqp binary instead of relying on $PATH

[14:30] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/358056625 https://github.com/rakudo/rakudo/compare/2365b558af52...eb71edccfd94

[15:06] <Geth> ¦ nqp/master: 9 commits pushed by pmurias++

[15:06] <Geth> ¦ nqp/master: a0fef765bc | [js] Implement the windows-1251 codec.

[15:06] <Geth> ¦ nqp/master: bd83ef562c | [js] Implement nqp::encoderepconf with a null_s replacement

[15:06] <Geth> ¦ nqp/master: 80bf81c20e | [js] Fix !DELEGATE_ACCEPTS returning a native int after refactor

[15:06] <Geth> ¦ nqp/master: fa6ac60ba1 | Test nqp::encoderep with a nqp::null_s

[15:06] <Geth> ¦ nqp/master: b53ec51cf3 | [js] Add js-runner-default and js-runner-default-install Makefile actions

[15:06] <Geth> ¦ nqp/master: 01954e6940 | [js] Fix nqp::eqatim and nqp::eqaticim return values

[15:06] <Geth> ¦ nqp/master: 0904ae96e0 | [js] Implement nqp::where/nqp::objectid on boxed native ints

[15:06] <Geth> ¦ nqp/master: 11539c68b5 | [js] Fix if ... -> @*param {...}

[15:06] <Geth> ¦ nqp/master: 631aa2db59 | [js] Dumping js with source maps to stdout works

[15:06] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/be7fd3618877...631aa2db5943

[15:07] <Geth> ¦ nqp: 4580760b56 | pmurias++ | src/vm/js/nqp-runtime/reprs.js

[15:07] <Geth> ¦ nqp: [js] Make nqp::rebless check that the new type is compatible

[15:07] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/4580760b56

[15:07] <Geth> ¦ nqp: a62cef7dfa | pmurias++ | t/nqp/093-oo-ops.t

[15:07] <Geth> ¦ nqp: Add some test for forbidden reblessing

[15:07] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a62cef7dfa

[19:21] <Geth> ¦ rakudo/iterator_mixin_re-use: 9f8231c62d | (Timo Paulssen)++ | src/core/Rakudo/Iterator.pm6

[19:21] <Geth> ¦ rakudo/iterator_mixin_re-use: re-use parameterizations for *OnlyDelegate

[19:21] <Geth> ¦ rakudo/iterator_mixin_re-use:

[19:21] <Geth> ¦ rakudo/iterator_mixin_re-use: until now, every call to

[19:21] <Geth> ¦ rakudo/iterator_mixin_re-use: delegate-iterator-opt-methods would create a

[19:21] <Geth> ¦ rakudo/iterator_mixin_re-use: completely new mixin, as it was parameterized

[19:21] <Geth> ¦ rakudo/iterator_mixin_re-use: on a value rather than a type.

[19:21] <Geth> ¦ rakudo/iterator_mixin_re-use:

[19:21] <Geth> ¦ rakudo/iterator_mixin_re-use: Using an attribute for this instead means we

[19:22] <Geth> ¦ rakudo/iterator_mixin_re-use: always hit the cache if the type we're mixing

[19:22] <Geth> ¦ rakudo/iterator_mixin_re-use: into matches.

[19:22] <Geth> ¦ rakudo/iterator_mixin_re-use: review: https://github.com/rakudo/rakudo/commit/9f8231c62d

[19:45] <timotimo> passes spectests, anyone want to test with user programs?

[20:11] <AlexDaniel> timotimo: IMO just merge it, more time on master means higher probability that we'll notice issues before the release

[20:12] <timotimo> OK

[20:12] <Geth> ¦ rakudo: 9f8231c62d | (Timo Paulssen)++ | src/core/Rakudo/Iterator.pm6

[20:12] <Geth> ¦ rakudo: re-use parameterizations for *OnlyDelegate

[20:12] <Geth> ¦ rakudo:

[20:12] <Geth> ¦ rakudo: until now, every call to

[20:12] <Geth> ¦ rakudo: delegate-iterator-opt-methods would create a

[20:12] <Geth> ¦ rakudo: completely new mixin, as it was parameterized

[20:12] <Geth> ¦ rakudo: on a value rather than a type.

[20:12] <Geth> ¦ rakudo:

[20:12] <Geth> ¦ rakudo: Using an attribute for this instead means we

[20:12] <Geth> ¦ rakudo: always hit the cache if the type we're mixing

[20:12] <Geth> ¦ rakudo: into matches.

[20:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9f8231c62d

[20:19] <timotimo> i'll also look if this same thing can be done in other places as well

[20:20] <timotimo> nothing at first quick glance

[20:22] <Geth> ¦ nqp: 27b252516f | pmurias++ | src/vm/js/nqp-runtime/sixmodel.js

[20:22] <Geth> ¦ nqp: [js] Fix nqp::istype

[20:22] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/27b252516f

[20:27] <timotimo> AlexDaniel: do you think it's a good idea to put "ed" in the list of editors? after all, it's *the* editor!

[20:28] <AlexDaniel> timotimo: probably not :)

[20:28] <AlexDaniel> timotimo: but feel free to add tools and other stuff

[20:28] <AlexDaniel> like, does github provide .gitignore for perl6 scripts?

[20:29] <AlexDaniel> can ack filter perl6 files?

[20:29] <AlexDaniel> etc.

[20:33] <AlexDaniel> timotimo: maybe this is the right upstream ticket for notepad++? https://sourceforge.net/p/scintilla/feature-requests/1207/

[20:34] <timotimo> oh, perhaps it is

[20:37] <AlexDaniel> “Notepad++ on Windows and Geany on Linux are two widely used lightweight editors that use Scintilla for syntax highlighting.”

[20:38] <AlexDaniel> so I guess the same ticket applies to Geany also?

[20:41] <timotimo> could be!

[20:42] <AlexDaniel> “gedit includes syntax highlighting via GtkSourceView”

[20:42] <AlexDaniel> and pluma is based on gedit 2 I think

[20:43] <AlexDaniel> https://wiki.gnome.org/Projects/GtkSourceView

[20:51] <AlexDaniel> OK I wrote that down

[20:51] <AlexDaniel> for anyone wondering, we're talking about https://github.com/perl6/marketing/issues/10

[21:18] <Geth> ¦ rakudo: 72dfddfa21 | (Timo Paulssen)++ | src/core/Rakudo/Iterator.pm6

[21:18] <Geth> ¦ rakudo: fix accidental private methods

[21:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/72dfddfa21

[21:24] <lizmat> nine: thanks for fixing the build issue, I can non build again

[21:24] <lizmat> I nuked by install directory, but that didn't fix it :-

[21:24] <lizmat> and now I'm trying to install Inline::Perl5 from scratch with zef

[21:25] <lizmat> and now it appears to hang in t/modify_array.t for 5 minutes already  :-

[21:25] <lizmat> (

[22:41] <Zoffix> nine: I can't build: make: *** No rule to make target 'gen/nqp-version', needed by 'blib/Perl6/ModuleLoader.moarvm'.  Stop.

[22:41] <Zoffix> nine: that's with fresh checkouts of master/master/master

[22:44] <MasterDuke> Zoffix: i would have expected a fresh checkout to be ok, but i had to run a `make clean` first in the rakudo dir

[22:45] <Zoffix> MasterDuke: that just bypasses the step, doesn't it?

[22:49] <Zoffix> Just nuked everything again and tried to build again and still fails: https://gist.github.com/zoffixznet/d2aef2eda412b09b7d6e226d06a5d287

[22:49] <Zoffix> Yes, `make clean` after a failed build gets it going, but it breaks again if I do a full build, like when doing bumps.

[22:52] <Zoffix> scratch the last part. Looks like bumps are now working, so only the fresh build is busted

[22:55] <Zoffix> :/

[22:55] <Zoffix> and only if you build the stuff separately it seems. Just running this seems to not have the issue: cd $(mktemp -d) && git clone https://github.com/rakudo/rakudo/ . && perl Configure.pl --gen-moar --gen-nqp --backends=moar && make && make test && make install

[22:56] <MasterDuke> huh, weird

[22:56] <Geth> ¦ nqp: ce0263e3f4 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[22:56] <Geth> ¦ nqp: [MoarVM Bump] Brings 7 commits

[22:56] <Geth> ¦ nqp:

[22:56] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03-19-ga5ed7ea...2018.03-26-gb1f64db

[22:56] <Geth> ¦ nqp: b1f64db Add missing include for Grisu3 dtoa function

[22:56] <Geth> ¦ nqp: 67e5093 only suspend on actually must-suspend breakpoints

[22:56] <Geth> ¦ nqp: d322741 Merge pull request #820 from samcv/shiftjis

[22:56] <Geth> ¦ nqp: edfde24 Use windows-932 instead of shiftjis for enc name

[22:56] <Geth> ¦ nqp: 62cfb2f Make sure to throw in shiftjis decode if byte after lead

[22:56] <Geth> ¦ nqp: d44d7d1 Ensure a failed JIS result is distinct from 0

[22:57] <Geth> ¦ nqp: e8fdb35 Add shiftjis decode and decodestream support

[22:57] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/ce0263e3f4

[22:57] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03-19-ga5ed7ea...2018.03-26-gb1f64db

[22:57] <Geth> ¦ rakudo: 97677a792c | (Zoffix Znet)++ | tools/build/NQP_REVISION

[22:57] <Geth> ¦ rakudo: [NQP Bump] Brings 13 commits

[22:57] <Geth> ¦ rakudo:

[22:57] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.03-22-gbe7fd3618...2018.03-35-gce0263e

[22:57] <Geth> ¦ rakudo: ce0263e [MoarVM Bump] Brings 7 commits

[22:57] <Geth> ¦ rakudo: 27b2525 [js] Fix nqp::istype

[22:57] <Geth> ¦ rakudo: a62cef7 Add some test for forbidden reblessing

[22:57] <Geth> ¦ rakudo: 4580760 [js] Make nqp::rebless check that the new type is compatible

[22:57] <Geth> ¦ rakudo: <…commit message has 18 more lines…>

[22:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/97677a792c

[22:57] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-22-gbe7fd3618...2018.03-35-gce0263e

[22:57] <Zoffix> ZOFVM: Files=1277, Tests=153160, 148 wallclock secs (20.39 usr  3.40 sys + 3130.95 cusr 166.26 csys = 3321.00 CPU)

[22:58] <Zoffix> timotimo: BTW, here's another place where we do the parametarize-on-args thing: https://github.com/rakudo/rakudo/blob/72dfddfa2/src/core/operators.pm6#L788-L793

[22:59] <timotimo> that looks like we can have that cached, though

[23:07] <Zoffix> Well, now I'm stumped. I essentially copied the commands Z-Script runs and ran them manually in a temp dir and didn't have any install issues :S https://gist.github.com/zoffixznet/6a869b2dcfe19cbc5b44351887889ce9

[23:08] * Zoffix hopes the bump fixed something and tries zscript again

[23:09] <Zoffix> nope

[23:12] <Zoffix> Ohhh

[23:13] <Zoffix> it's 'cause zscript stops as soon as it gets a failed exit code. I still get "make: *** No rule to make target 'gen/nqp-version', needed by 'blib/Perl6/ModuleLoader.moarvm'.  Stop." but I ignore the exit code

[23:13] <Zoffix> *I still get that message in manual runs I mean

[23:14] <MasterDuke> i assume you're doing a make clean or something like that? cause i don't see that anymore just doing a git pull and then Configure + make install

[23:14] <dogbert11> Zoffix: just a heads up, your latest work might have fixed RT's 128912-4

[23:16] <Zoffix> MasterDuke: it's from fresh checkouts of everything. Nothing to clean

[23:16] <Zoffix> Even if I nuke rakudo dir only but leave install dir untouched, I no longer get the error

[23:16] <MasterDuke> ah

[23:17] <timotimo> what about ~/.perl6 and friends?

[23:17] <timotimo> i wonder if they are involved at all?

[23:17] <timotimo> strace -e open could surely tell you

[23:19] <Zoffix> dogbert11: thanks. yeah, there should be a bunch. I'm yet to go through them and write tests and close

[23:19] <Zoffix> "Segmentation fault" on build nice

[23:20] <Zoffix> oh "fatal: sha1 file '/tmp/tmp.8B5iw2f661/nqp/.git/objects/pack/tmp_idx_uUckES' write error: No space left on device" :)

[23:20] <timotimo> oops, ouch :) :)

[23:22] <dogbert11> Zoffix: RT #128817 might be another

[23:22] <synopsebot> RT#128817 [open]: https://rt.perl.org/Ticket/Display.html?id=128817 [BUG] Num.perl doesn't round-trip numeric value

[23:22] <Zoffix> yeah

[23:23] <dogbert11> RT #126826

[23:23] <synopsebot> RT#126826 [new]: https://rt.perl.org/Ticket/Display.html?id=126826 [BUG] Numeric precision not arbitrary

[23:23] <dogbert11> perhaps

[23:24] <Zoffix> No, that'll be addressed by CaR Grant, if it's approved

[23:25] <Zoffix> well, maybe the output of .perl changed, but that code is producing a Rat, which shouldn't have denominators over 64 bit and the user is assuming it should have arbitrary precision

[23:27] <Zoffix> uhh

[23:27] <Zoffix> c: 2018.03 say 0.99999999999999999999999 < 1

[23:27] <committable6> Zoffix, ¦2018.03: «True␤»

[23:30] <Zoffix> c: 2017.03 say 0.99999999999999999999999 < 1

[23:30] <Zoffix> lag

[23:30] <committable6> Zoffix, ¦2017.03: «False␤»

[23:31] <Zoffix> right, the bug itself was fixed by https://rt.perl.org/Ticket/Display.html?id=126826

[23:33] <Zoffix> .tell nine any build jobs that build MoarVM/nqp/rakudo separately from scratch and check exit code fail now after this message " No rule to make target 'gen/nqp-version', needed by 'blib/Perl6/ModuleLoader.moarvm'". You can repro with this set of commands: https://gist.github.com/zoffixznet/03fac7a814057919574f703525db42a8

[23:33] <yoleaux> Zoffix: I'll pass your message to nine.
