[00:03] *** epony left
[00:10] *** epony joined
[00:10] *** p6bannerbot sets mode: +v epony

[00:15] *** lizmat left
[00:21] *** epony left
[00:40] *** epony joined
[00:40] *** p6bannerbot sets mode: +v epony

[01:13] *** Ven` joined
[01:14] *** p6bannerbot sets mode: +v Ven`

[01:18] *** Ven` left
[01:29] *** ZzZombo left
[02:34] *** ZzZombo joined
[02:34] *** p6bannerbot sets mode: +v ZzZombo

[02:35] *** Ven` joined
[02:36] *** p6bannerbot sets mode: +v Ven`

[02:41] *** Ven` left
[02:45] *** ufobat___ joined
[02:46] *** p6bannerbot sets mode: +v ufobat___

[02:48] *** ufobat_ left
[03:24] *** MasterDuke left
[04:51] *** Ven` joined
[04:52] *** p6bannerbot sets mode: +v Ven`

[04:56] *** Ven` left
[05:04] *** Ven` joined
[05:05] *** p6bannerbot sets mode: +v Ven`

[05:09] *** Ven` left
[05:16] *** fake_space_whale left
[06:44] *** patrickb joined
[06:44] *** p6bannerbot sets mode: +v patrickb

[06:45] <pmurias> [Coke]: looking into it

[06:46] <pmurias> [Coke]: that's a too old node.js, I should a check for it to Configure.pl

[06:53] <nine> Looks like NQP doesn't check non-primitive argument types anyway.

[06:56] *** brrt joined
[06:57] *** p6bannerbot sets mode: +v brrt

[07:08] <Geth> ¦ nqp: 1f6e45abbe | (Paweł Murias)++ | src/vm/js/nqp-runtime/runtime.js

[07:08] <Geth> ¦ nqp: [js] Throw a proper nqp exception when we can't convert to num.

[07:08] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/1f6e45abbe

[07:08] <Geth> ¦ nqp: 209b20eb08 | (Paweł Murias)++ | src/vm/js/nqp-runtime/io.js

[07:08] <Geth> ¦ nqp: [js] Remove a check for a method that's uneeded in our model

[07:08] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/209b20eb08

[07:08] <Geth> ¦ nqp: 2209f00c81 | (Paweł Murias)++ | README.pod

[07:08] <Geth> ¦ nqp: [js] Update in README version of node I'm using

[07:08] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/2209f00c81

[07:13] <Geth> ¦ nqp/jvm-global-clean: adf3722d7f | tison++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/ExceptionHandling.java

[07:13] <Geth> ¦ nqp/jvm-global-clean: [jvm] clean ExceptionHandling

[07:13] <Geth> ¦ nqp/jvm-global-clean: review: https://github.com/perl6/nqp/commit/adf3722d7f

[07:15] <Geth> ¦ nqp: TisonKun++ created pull request #507: [WIP] [jvm] global clean

[07:15] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/507

[07:23] <Geth> ¦ nqp/jvm-global-clean: 6d70009a06 | tison++ | 15 files

[07:23] <Geth> ¦ nqp/jvm-global-clean: [jvm] interface is public by default

[07:23] <Geth> ¦ nqp/jvm-global-clean: review: https://github.com/perl6/nqp/commit/6d70009a06

[07:32] *** brrt left
[07:57] *** pmurias left
[08:04] *** brrt joined
[08:04] *** p6bannerbot sets mode: +v brrt

[08:20] <nine> I now managed to get a profile of the MAST stage using a patched --profile-stage, but the profile is too large even for the QT frontend :/

[08:26] *** Ven` joined
[08:27] *** p6bannerbot sets mode: +v Ven`

[08:45] <nine> timotimo++ # moarperf works beautifully with this huge profile :)

[08:45] <Geth> ¦ nqp/jvm-global-clean: c4c141eb7d | 陈梓立++ | 2 files

[08:45] <Geth> ¦ nqp/jvm-global-clean: [jvm] clean IOOps.java

[08:45] <Geth> ¦ nqp/jvm-global-clean: review: https://github.com/perl6/nqp/commit/c4c141eb7d

[08:47] <nine> And it showed a nice opportunity for performance improvement: I completely forgot that I still pass the serialized data base64 encoded back from the VM to NQP and have to decode it there. Seems to be about 20 % of the runtime

[08:48] <jnthn> Hm, and you needed 50% to break even, and that was before you had 3s off yesterday? :)

[08:51] <nine> I'm just shy of 19s now and need to get it down to 11

[08:52] <jnthn> m: say 0.2 * 19

[08:52] <camelia> rakudo-moar 7e86d4e30: OUTPUT: «3.8␤»

[08:52] <jnthn> Will help :)

[08:58] *** lizmat joined
[08:58] *** p6bannerbot sets mode: +v lizmat

[09:08] *** brrt left
[09:12] <lizmat> Files=1255, Tests=75811, 342 wallclock secs (15.78 usr  5.19 sys + 2395.49 cusr 258.31 csys = 2674.77 CPU)

[09:22] <|Tux|> Rakudo version 2018.09-382-g7e86d4e30 - MoarVM version 2018.09-124-g588873f7a

[09:22] <|Tux|> csv-test-xs-20      0.427 -  0.434

[09:22] <|Tux|> test-t --race       0.798 -  0.810

[09:22] <|Tux|> csv-ip5xs           0.923 -  0.969

[09:22] <|Tux|> test-t              1.700 -  1.743

[09:22] <|Tux|> csv-ip5xs-20        7.273 -  7.330

[09:22] <|Tux|> test                8.171 -  8.354

[09:22] <|Tux|> test-t-20 --race   10.826 - 10.845

[09:22] <|Tux|> csv-parser         20.770 - 21.185

[09:22] <|Tux|> test-t-20          29.354 - 29.959

[09:24] *** robertle joined
[09:24] *** p6bannerbot sets mode: +v robertle

[09:43] <Geth> ¦ nqp: f1fa4603b8 | (Paweł Murias)++ | src/vm/moar/QAST/QASTCompilerMAST.nqp

[09:43] <Geth> ¦ nqp: [moar] Add coercions from int32, int16, int8, uint32, uint16, uint8 to num

[09:43] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/f1fa4603b8

[09:43] <Geth> ¦ nqp: b2e4c4da0a | (Paweł Murias)++ | t/nqp/109-coercions.t

[09:43] <Geth> ¦ nqp: Test coercions from int32, int16, int8, uint32, uint16, uint8 to num

[09:43] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/b2e4c4da0a

[09:58] <timotimo> nine: let me know what you're missing; of course there's lots still missing and the UI is currently clunky until i make the data fetching logic more appropriate ...

[10:00] *** cognominal-p6 left
[10:02] <timotimo> nine: how many GC runs does it do in that stage? i wonder if taking a heap snapshot is out of the question %)

[10:08] *** patrickb left
[10:13] *** ZzZombo left
[10:19] <Geth> ¦ rakudo: 0425d927f8 | (Elizabeth Mattijsen)++ | src/core/CompUnit/RepositoryRegistry.pm6

[10:19] <Geth> ¦ rakudo: Initialize CU:RepositoryRegistry at setting compile time

[10:19] <Geth> ¦ rakudo: 

[10:19] <Geth> ¦ rakudo: There is no need to go through the motions of adding a CU:Repository

[10:19] <Geth> ¦ rakudo: thread-safely *each* time at startup when we can also do this at

[10:19] <Geth> ¦ rakudo: setting compile time.  This should help a bit with startup times.

[10:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0425d927f8

[10:24] *** brrt joined
[10:25] *** p6bannerbot sets mode: +v brrt

[10:27] <nine> lizmat++ # fighting the startup time battle

[10:31] *** cognominal-p6 joined
[10:32] *** cognominal-p6 left
[10:33] *** cognominal-p6 joined
[10:34] *** p6bannerbot sets mode: +v cognominal-p6

[10:50] <nine> timotimo: I somehow can't get GC run information anymore though it worked just fine when I looked through the profile the first time.

[10:51] <nine> timotimo: I've already deleted the .sqlite3 file, but that didn't change anything. Routine tab works just fine but GC only shows "nothing"

[11:00] <timotimo> how does the cro app react to "get gc data"? an exception?

[11:03] <nine> timotimo: only error I see is ⚠ moarperf [ERROR] 403 /css/bootstrap.css.map - 127.0.0.1

[11:03] <nine> Only network request I see when switching to the GC tab is http://localhost:20000/js/gcoverview.bundle.js

[11:03] <nine> which is 1.53MB

[11:04] <timotimo> it should have a request for the gc data, too

[11:04] <timotimo> oh, it doesn't show the button, i expect?

[11:06] *** pmurias joined
[11:06] *** p6bannerbot sets mode: +v pmurias

[11:07] <nine> Oh, you mean the "Get GC overview" button?

[11:07] <nine> That gives me a giant red smiley

[11:07] *** pmurias left
[11:08] <nine> TypeError: d is null[Learn More] GCOverview.jsx:148:65 

[11:09] <timotimo> does the cro app output anything then?

[11:09] *** pmurias joined
[11:09] *** p6bannerbot sets mode: +v pmurias

[11:10] <timotimo> MFW the code that has d in it is either .filter(d => d !== null) or something after that

[11:10] <timotimo> or maybe the line numbers have diverged

[11:11] *** pmurias left
[11:14] *** pmurias joined
[11:14] *** pmurias left
[11:18] *** cognominal-p6 left
[11:20] *** pmurias joined
[11:20] *** p6bannerbot sets mode: +v pmurias

[11:21] *** pmurias left
[11:22] <Geth> ¦ nqp/master: 4 commits pushed by (Paweł Murias)++

[11:22] <Geth> ¦ nqp/master: 8375d7be73 | [moar] Implement int32 to str conversion

[11:22] <Geth> ¦ nqp/master: 34d8b131b5 | [moar] Implement num to int32 conversion

[11:22] <Geth> ¦ nqp/master: 74dfc7562a | Test num to int32 and int32 to str conversions

[11:22] <Geth> ¦ nqp/master: 7fa07a74ed | [moar] Implement unary ! on int32s

[11:22] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/b2e4c4da0a68...7fa07a74ed39

[11:22] <nine> No, cro is silent

[11:23] <nine> timotimo: I can upload that profile if you want to take a look

[11:23] <timotimo> tbh i don't know how sqlite3 reacts when you delete the file, but if that were to blame, there ought to be exceptions

[11:23] <timotimo> yeah, gimme :)

[11:23] <timotimo> surely it'll compress very well

[11:24] *** ZzZombo joined
[11:24] *** p6bannerbot sets mode: +v ZzZombo

[11:26] *** pmurias joined
[11:26] *** p6bannerbot sets mode: +v pmurias

[11:31] <nine> timotimo: http://niner.name/files/profile.sql.zst

[11:37] <timotimo> ah, got it already btw

[11:38] <nine> Btw. DBIish is missing in the requirements

[11:38] *** travis-ci joined
[11:38] *** p6bannerbot sets mode: +v travis-ci

[11:38] <travis-ci> NQP build failed. Paweł Murias '[moar] Implement unary ! on int32s'

[11:38] <travis-ci> https://travis-ci.org/perl6/nqp/builds/439085483 https://github.com/perl6/nqp/compare/b2e4c4da0a68...7fa07a74ed39

[11:38] *** travis-ci left
[11:38] <timotimo> whoops, good catch

[11:39] *** patrickb joined
[11:39] *** p6bannerbot sets mode: +v patrickb

[11:44] *** lizmat left
[11:56] *** cognominal-p6 joined
[11:57] *** p6bannerbot sets mode: +v cognominal-p6

[12:03] *** cognominal-p6 left
[12:03] *** cognominal-p6 joined
[12:04] *** p6bannerbot sets mode: +v cognominal-p6

[12:20] *** cognominal-p6 left
[12:43] *** pmurias left
[12:43] *** pmurias joined
[12:43] *** p6bannerbot sets mode: +v pmurias

[12:44] *** pmurias left
[12:45] *** brrt left
[12:48] *** pmurias joined
[12:48] *** p6bannerbot sets mode: +v pmurias

[13:04] <timotimo> nine: https://i.imgur.com/tHgYzPY.png - i can get it just fine, though?

[13:06] *** cognominal-p6 joined
[13:06] *** cognominal-p6 left
[13:06] *** cognominal-p6 joined
[13:07] *** p6bannerbot sets mode: +v cognominal-p6

[13:10] <timotimo> nine: POS looks fun. it allocates P6num. it's probably not supposed to :)

[13:10] <timotimo> oh, but that's base64 anyway, you've cut that out already i believe?

[13:19] <AlexDaniel> huggable: star

[13:19] <huggable> AlexDaniel, Estimated Rakudo Star releases: .01, .04, .07 & .10

[13:21] <SyrupThinker> AlexDaniel: So it seems, I think I found the reason for that and am currently testing a fix for it.

[13:21] <AlexDaniel> nice

[13:21] *** pmurias left
[13:26] <nine> timotimo: not yet, but it's the first thing to go

[13:26] <timotimo> OK

[13:26] *** pmurias joined
[13:26] *** p6bannerbot sets mode: +v pmurias

[13:30] *** cognominal-p6 left
[13:36] <pmurias> do we have a review process for putting new methods/adverbs into Perl 6?

[13:38] <Geth> ¦ nqp: d62a03d648 | (Paweł Murias)++ | t/nqp/109-coercions.t

[13:38] <Geth> ¦ nqp: Fix test count

[13:38] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/d62a03d648

[13:43] *** pmurias left
[13:46] *** pmurias joined
[13:46] *** p6bannerbot sets mode: +v pmurias

[13:51] *** lizmat joined
[13:51] *** p6bannerbot sets mode: +v lizmat

[13:54] *** travis-ci joined
[13:54] *** p6bannerbot sets mode: +v travis-ci

[13:54] <travis-ci> NQP build passed. Paweł Murias 'Fix test count'

[13:54] <travis-ci> https://travis-ci.org/perl6/nqp/builds/439142056 https://github.com/perl6/nqp/compare/7fa07a74ed39...d62a03d6487a

[13:54] *** travis-ci left
[14:02] *** pmurias left
[14:04] <lizmat> m: say "{   }"   # perhaps we should constant fold this ?

[14:04] <camelia> rakudo-moar 0425d927f: OUTPUT: «Use of Nil in string context␤␤  in block <unit> at <tmp> line 1␤»

[14:11] *** pmurias joined
[14:11] *** p6bannerbot sets mode: +v pmurias

[14:16] *** pmurias left
[14:16] *** pmurias joined
[14:16] *** p6bannerbot sets mode: +v pmurias

[14:24] *** pmurias left
[14:24] *** pmurias joined
[14:24] *** p6bannerbot sets mode: +v pmurias

[14:34] *** brrt joined
[14:35] *** p6bannerbot sets mode: +v brrt

[14:38] *** pmurias left
[14:39] *** pmurias joined
[14:39] *** p6bannerbot sets mode: +v pmurias

[14:43] <pmurias> lizmat: if we find a way optimize .sum so that there isn't such a drastic difference do we need .sum(:wrap)?

[14:44] <lizmat> I guess not

[14:45] <lizmat> lemme see how much difference there is now

[14:46] *** pmurias left
[14:47] <lizmat> pmurias: for a 1000 element native int array, :wrap is still about 4x as fast

[14:49] *** pmurias joined
[14:49] *** p6bannerbot sets mode: +v pmurias

[14:50] *** pmurias left
[14:56] *** pmurias joined
[14:56] *** p6bannerbot sets mode: +v pmurias

[14:58] <pmurias> does Moar do the fancy speculate that bigint are in fact small optimizations nowadays?

[14:58] <jnthn> Depends what you mean by fancy :)

[14:59] <jnthn> It stores those in a 32-bit range without a real big integer representation

[14:59] <jnthn> And a handful of ops are JIT in such a way as to just do the operation and then test the overflow flag

[15:00] *** epony left
[15:04] <pmurias> jnthn: I was wondering if we will eventually get to the point where .sum() and .sum(:wrap) will have similiar performance (when an overflow doesn't happen) and if so is the :wrap flag something we want to have long term

[15:05] *** epony joined
[15:05] *** p6bannerbot sets mode: +v epony

[15:05] <jnthn> pmurias: Well, a test/branch is always a test/branch I guess

[15:10] *** epony left
[15:11] *** fake_space_whale joined
[15:11] *** p6bannerbot sets mode: +v fake_space_whale

[15:13] *** Ven` left
[15:22] *** Ven` joined
[15:23] *** p6bannerbot sets mode: +v Ven`

[15:23] *** epony joined
[15:23] *** p6bannerbot sets mode: +v epony

[15:25] *** brrt left
[15:37] <AlexDaniel> lizmat: it is possible that your last commit is causing this: https://travis-ci.org/perl6/doc/jobs/439195605#L1163-L1165

[15:42] *** ufobat___ left
[15:44] *** patrickb left
[15:54] *** fake_space_whale left
[15:56] <Geth> ¦ roast: 716331c35d | (Paweł Murias)++ | S09-typed-arrays/native-int.t

[15:56] <Geth> ¦ roast: [js] Fudge a test that assume 64bit ints

[15:56] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/716331c35d

[15:56] <Geth> ¦ roast: 32cc19f857 | (Paweł Murias)++ | S06-macros/unquoting.t

[15:56] <Geth> ¦ roast: [js] Fudge test that's broken on moar too

[15:56] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/32cc19f857

[15:59] <lizmat> AlexDaniel: I would be surprised :-(

[15:59] <lizmat> but definitely possible

[16:01] <lizmat> ok, reproed locally  :-(

[16:09] <Geth> ¦ rakudo: 8e1cd01aa7 | (Elizabeth Mattijsen)++ | src/core/CompUnit/RepositoryRegistry.pm6

[16:09] <Geth> ¦ rakudo: Unbreak zef

[16:09] <Geth> ¦ rakudo: 

[16:09] <Geth> ¦ rakudo: Apparently we're not allowed to initaliaze the mapping of short-id to

[16:09] <Geth> ¦ rakudo: class at BEGIN time.  Perhaps the stubs got compiled in?

[16:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8e1cd01aa7

[16:09] <lizmat> AlexDaniel: ^^^

[16:10] <AlexDaniel> I restarted the failed travis job, we'll see

[16:22] <lizmat> hmmm... the classes seem to arrive in piece...  maybe some scoping issue so that the added "perl" key is not seen

[16:24] *** AlexDaniel left
[16:24] *** AlexDaniel joined
[16:24] *** asimov.freenode.net sets mode: +v AlexDaniel

[16:24] *** p6bannerbot sets mode: +v AlexDaniel

[16:26] *** cognominal-p6 joined
[16:26] *** lizmat left
[16:26] *** p6bannerbot sets mode: +v cognominal-p6

[16:27] *** cognominal-p6 left
[16:27] *** Ven` left
[16:27] *** cognominal-p6 joined
[16:28] *** p6bannerbot sets mode: +v cognominal-p6

[16:30] *** lizmat joined
[16:30] *** p6bannerbot sets mode: +v lizmat

[16:34] *** AlexDaniel` left
[16:34] *** AlexDaniel` joined
[16:34] *** moon.freenode.net sets mode: +v AlexDaniel`

[16:34] *** p6bannerbot sets mode: +v AlexDaniel`

[17:19] <Geth> ¦ rakudo: f234b9afa4 | (Elizabeth Mattijsen)++ | src/core/Main.pm6

[17:19] <Geth> ¦ rakudo: Remove unnecessary ?

[17:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f234b9afa4

[17:44] <Geth> ¦ rakudo: SyrupThinker++ created pull request #2357: Use the actual object instance instead of a type object - Fixes #2352

[17:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2357

[17:44] <synopsebot> RAKUDO#2352 [open]: https://github.com/rakudo/rakudo/issues/2352 [regression][shaped][⚠ blocker ⚠] Indexing does not work for shaped arrays with a dimension higher than 3

[17:44] <lizmat> m: say ᱁𑛂೩᮴୫᱆᥍𑇘᱙꘠ eq 1234567890   # surprising

[17:44] <camelia> rakudo-moar f234b9afa: OUTPUT: «True␤»

[17:45] <Geth> ¦ rakudo: 0307c36671 | (Valentin Anger)++ | src/core/ShapedArray.pm6

[17:45] <Geth> ¦ rakudo: Use the actual object instance instead of a type object

[17:45] <Geth> ¦ rakudo: 

[17:45] <Geth> ¦ rakudo: This is probably a copy paste error

[17:45] <Geth> ¦ rakudo: as there are similar constructor calls where \array

[17:45] <Geth> ¦ rakudo: was taken as the object.

[17:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0307c36671

[17:45] <Geth> ¦ rakudo: de27792024 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core/ShapedArray.pm6

[17:45] <Geth> ¦ rakudo: Merge pull request #2357 from SyrupThinker/shaped_array

[17:45] <Geth> ¦ rakudo: 

[17:45] <Geth> ¦ rakudo: Use the actual object instance instead of a type object - Fixes #2352

[17:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/de27792024

[17:45] <SyrupThinker> Well that was quick

[17:48] *** pmurias left
[17:53] *** x[LGWs4x4i]uG2N0 left
[17:56] <lizmat> SyrupThinker: yeah, looking at the diff it was a no-brainer

[17:56] <lizmat> I guess the next thing we need are tests ?  *nudge* *nudge* :-)

[17:56] <SyrupThinker> Already have those

[17:57] <SyrupThinker> But I can now bump up the limit

[17:57] <lizmat> SyrupThinker++

[18:04] <Geth> ¦ roast: daa986c2d5 | (Valentin Anger)++ | S02-types/multi_dimensional_array.t

[18:04] <Geth> ¦ roast: Bump up the maximum dimension for the up to n dim shaped array test

[18:04] <Geth> ¦ roast: 

[18:04] <Geth> ¦ roast: Because https://github.com/rakudo/rakudo/issues/2352 has been fixed.

[18:04] <Geth> ¦ roast: With a limit of six 879 tests would be run which might be a few too many.

[18:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/daa986c2d5

[18:10] <dogbert17> ZOFFLOP: t/spec/S11-modules/export.t, test #47

[18:10] <dogbert17> Type check failed in assignment to ; expected Hash[Str] but got Hash (${:ak("ak")})

[18:16] *** patrickb joined
[18:17] *** p6bannerbot sets mode: +v patrickb

[18:19] <AlexDaniel> weekly: SyrupThinker++ worked on issues with shaped arrays (e.g. https://github.com/rakudo/rakudo/issues/2352 )

[18:19] <notable6> AlexDaniel, Noted!

[18:19] <lizmat> weekly: aka Valentin Anger

[18:19] <notable6> lizmat, Noted!

[18:24] <lizmat> #2358

[18:24] <lizmat> R#2358

[18:24] <synopsebot> R#2358 [open]: https://github.com/rakudo/rakudo/issues/2358 [@LARRY][GAO][UNI][detrap][needs research] say ᱁𑛂೩᮴୫᱆᥍𑇘᱙꘠ eq 1234567890    # True

[18:27] <Geth> ¦ rakudo: e48e750039 | (Elizabeth Mattijsen)++ | src/core/Main.pm6

[18:27] <Geth> ¦ rakudo: Remove apparently unused/undocumented param from MAIN_HELPER

[18:27] <Geth> ¦ rakudo: 

[18:27] <Geth> ¦ rakudo: Because it is in the way of creating a sustainable API for MAIN_HELPER

[18:27] <Geth> ¦ rakudo: or whatever we want to provide there.

[18:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e48e750039

[18:56] <Geth> ¦ rakudo: f30b64709f | (Elizabeth Mattijsen)++ | src/core/Main.pm6

[18:56] <Geth> ¦ rakudo: Revert "Remove apparently unused/undocumented param from MAIN_HELPER"

[18:56] <Geth> ¦ rakudo: 

[18:56] <Geth> ¦ rakudo: This reverts commit e48e75003909fc89d29d8fccb89d153e76378367.

[18:56] <Geth> ¦ rakudo: 

[18:56] <Geth> ¦ rakudo: Apparently this *is* being used???

[18:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f30b64709f

[19:18] *** ufobat___ joined
[19:19] *** brrt joined
[19:19] *** p6bannerbot sets mode: +v ufobat___

[19:19] <lizmat> .ask I'm thinking of adding a IterationBuffer.List and Array method

[19:19] <yoleaux> lizmat: What kind of a name is "I'm"?!

[19:19] *** p6bannerbot sets mode: +v brrt

[19:20] <lizmat> .ask jnthn  I'm thinking of adding a IterationBuffer.List and Array method, which would basically do a nqp::p6bindattrinvres(nqp::create(List),List,'$!reified',$buf)

[19:20] <yoleaux> lizmat: I'll pass your message to jnthn.

[19:20] <lizmat> .tell jnthn s/$buf/self/ , and replace a lot of those calls throughout the setting: for clearer code and possibly smaller candidates

[19:20] <yoleaux> lizmat: I'll pass your message to jnthn.

[19:21] <lizmat> .ask jnthn do you think that's a good idea ?

[19:21] <yoleaux> lizmat: I'll pass your message to jnthn.

[19:24] *** AlexDaniel left
[19:24] *** AlexDaniel joined
[19:25] *** p6bannerbot sets mode: +v AlexDaniel

[19:29] <Geth> ¦ rakudo: 35f3d83dc4 | (Elizabeth Mattijsen)++ | src/core/Main.pm6

[19:29] <Geth> ¦ rakudo: Simplify / readablize code in MAIN_HELPER

[19:29] <Geth> ¦ rakudo: 

[19:29] <Geth> ¦ rakudo: - change one letter variable names to meaningful names

[19:29] <Geth> ¦ rakudo: - let the parser return a Capture, rather than a List / Hash

[19:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/35f3d83dc4

[19:33] *** dct joined
[19:33] *** p6bannerbot sets mode: +v dct

[19:36] *** AlexDaniel left
[19:36] *** AlexDaniel joined
[19:37] *** p6bannerbot sets mode: +v AlexDaniel

[19:47] *** robertle_ joined
[19:47] *** p6bannerbot sets mode: +v robertle_

[19:57] <lizmat> .tell pmurias https://stackoverflow.com/questions/52727279/how-can-you-call-javascript-builtins-from-perl-6-with-the-new-js-backend

[19:57] <yoleaux> lizmat: I'll pass your message to pmurias.

[20:07] *** patrickb left
[20:10] *** brrt left
[20:10] *** travis-ci joined
[20:10] *** p6bannerbot sets mode: +v travis-ci

[20:10] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Remove apparently unused/undocumented param from MAIN_HELPER

[20:10] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/439278398 https://github.com/rakudo/rakudo/compare/de27792024a0...e48e75003909

[20:10] *** travis-ci left
[20:11] <buggable> [travis build above] ☠ All failures are due to: failed make test (6 failures). Across all jobs, 6 unique test files failed.

[20:11] <lizmat> yeah, already fixed

[20:22] *** brrt joined
[20:23] *** p6bannerbot sets mode: +v brrt

[20:24] <Geth> ¦ rakudo: 8c10da6abd | (Elizabeth Mattijsen)++ | 11 files

[20:24] <Geth> ¦ rakudo: Add IterationBuffer.List method

[20:24] <Geth> ¦ rakudo: 

[20:24] <Geth> ¦ rakudo: - because Lists are nowadays built with $!reified being an IterationBuffer

[20:24] <Geth> ¦ rakudo: - it seemed handy to have

[20:24] <Geth> ¦ rakudo: - it makes a lot of code easier to read

[20:24] <Geth> ¦ rakudo: - and creates smaller candidates that potentially inline better

[20:24] <Geth> ¦ rakudo: - and the new call should inline pretty quickly

[20:24] <Geth> ¦ rakudo: 

[20:24] <Geth> ¦ rakudo: And apply this to the setting where appropriate.

[20:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8c10da6abd

[20:26] <AlexDaniel> releasable6: status

[20:26] <releasable6> AlexDaniel, Next release in ≈10 days and ≈22 hours. 4 blockers. 0 out of 390 commits logged

[20:26] <releasable6> AlexDaniel, Details: https://gist.github.com/7887977454c8f0a2a522c8e368129f4a

[20:42] *** robertle_ left
[20:44] <Geth> ¦ rakudo: 84311b77a2 | (Elizabeth Mattijsen)++ | 7 files

[20:44] <Geth> ¦ rakudo: s/IterationBuffer.new/nqp::create(IterationBuffer)/

[20:44] <Geth> ¦ rakudo: 

[20:44] <Geth> ¦ rakudo: IterationBuffers are a low level thing.  There is no need to go through

[20:44] <Geth> ¦ rakudo: the whole Mu.new code path to create an IterationBuffer.

[20:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/84311b77a2

[20:56] <Geth> ¦ rakudo: 1d41213652 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[20:56] <Geth> ¦ rakudo: Remove one nqp::isnull straggler

[20:56] <Geth> ¦ rakudo: 

[20:56] <Geth> ¦ rakudo: Hashes now *always* have a descriptor

[20:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1d41213652

[21:18] <Geth> ¦ rakudo: 7c9b2955db | (Elizabeth Mattijsen)++ | src/core/Main.pm6

[21:18] <Geth> ¦ rakudo: Simplify the MAIN_HELPER code some more

[21:18] <Geth> ¦ rakudo: 

[21:18] <Geth> ¦ rakudo: - remove unnecessary variables

[21:18] <Geth> ¦ rakudo: - merge several if's into an if / elsif / else sequence

[21:18] <Geth> ¦ rakudo: - remove now unnecessary return statements

[21:18] <Geth> ¦ rakudo: - change a .grep to a .first, as we need a boolean anyway

[21:18] <Geth> ¦ rakudo: - use a Set instead of a Z=> 1 xx *

[21:18] <Geth> ¦ rakudo: - lose scope on loop

[21:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7c9b2955db

[21:39] *** brrt left
[21:54] *** stmuk_ joined
[21:54] *** p6bannerbot sets mode: +v stmuk_

[21:56] *** stmuk left
[22:00] *** cognominal-p6 left
[22:03] *** cognominal-p6 joined
[22:04] *** p6bannerbot sets mode: +v cognominal-p6

[22:23] *** ggoebel left
[22:34] *** travis-ci joined
[22:34] *** p6bannerbot sets mode: +v travis-ci

[22:34] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Remove one nqp::isnull straggler

[22:34] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/439348606 https://github.com/rakudo/rakudo/compare/84311b77a2a1...1d412136526b

[22:34] *** travis-ci left
[22:50] *** ggoebel joined
[22:51] *** p6bannerbot sets mode: +v ggoebel

[23:00] *** dct left
[23:03] *** cognominal-p6 left
[23:37] <[Coke]> .tell pmurias - https://github.com/rakudo/rakudo/issues/2359 - REPL borked

[23:37] <yoleaux> [Coke]: I'll pass your message to pmurias.

