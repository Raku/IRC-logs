[00:16] *** MasterDuke joined
[00:16] *** p6bannerbot sets mode: +v MasterDuke

[00:16] *** MasterDuke left
[00:16] *** MasterDuke joined
[00:16] *** herbert.freenode.net sets mode: +v MasterDuke

[00:16] *** p6bannerbot sets mode: +v MasterDuke

[01:14] *** stmuk_ joined
[01:15] *** p6bannerbot sets mode: +v stmuk_

[01:17] *** stmuk left
[01:29] *** stmuk joined
[01:30] *** p6bannerbot sets mode: +v stmuk

[01:31] *** stmuk_ left
[02:41] *** leont left
[03:05] *** ufobat_ joined
[03:06] *** p6bannerbot sets mode: +v ufobat_

[03:08] *** ufobat left
[03:13] *** MasterDuke left
[05:36] *** stmuk_ joined
[05:37] *** p6bannerbot sets mode: +v stmuk_

[05:39] *** stmuk left
[07:11] *** stmuk joined
[07:11] *** p6bannerbot sets mode: +v stmuk

[07:13] *** stmuk_ left
[07:15] *** stmuk_ joined
[07:16] *** p6bannerbot sets mode: +v stmuk_

[07:18] *** stmuk left
[07:32] *** robertle joined
[07:33] *** p6bannerbot sets mode: +v robertle

[07:56] *** dct joined
[07:56] *** p6bannerbot sets mode: +v dct

[07:59] *** [Tux] left
[08:02] *** dct left
[08:16] *** [TuxCM] left
[08:32] *** dct joined
[08:32] *** p6bannerbot sets mode: +v dct

[08:40] *** [Tux] joined
[08:40] *** p6bannerbot sets mode: +v [Tux]

[08:42] *** [Tux] left
[08:43] *** [Tux] joined
[08:44] *** p6bannerbot sets mode: +v [Tux]

[09:52] <lizmat> Files=1255, Tests=76372, 358 wallclock secs (15.86 usr  5.46 sys + 2524.06 cusr 235.99 csys = 2781.37 CPU)

[09:52] <lizmat> this is significantly worse than a few days ago

[09:53] <lizmat> I see a similar drop in my private test-t testing

[09:57] <masak> lizmat: hm, do we have any continuous benchmarking on commits?

[10:01] <lizmat> closest thing we have on that is test-t

[10:01] <lizmat> and my irregular timing of spectest

[10:01] <lizmat> afaik

[10:04] *** AlexDaniel left
[10:33] *** [TuxCM] joined
[10:34] *** [TuxCM] left
[10:44] <Geth> ¦ rakudo: 0bc72e0504 | (Elizabeth Mattijsen)++ | 4 files

[10:44] <Geth> ¦ rakudo: Add a Hyper class

[10:44] <Geth> ¦ rakudo: 

[10:44] <Geth> ¦ rakudo: - inactive for now, re-configure of Rakudo is needed

[10:44] <Geth> ¦ rakudo: - contains the initial version of the HYPER sub refactor

[10:44] <Geth> ¦ rakudo: - the basic gain is that operator/dwim info doesn't need to be passed

[10:44] <Geth> ¦ rakudo: - also fixes use of object hashes / QuantHashes in infix hypers

[10:44] <Geth> ¦ rakudo: - should allow for easier optimizations in the future

[10:44] <Geth> ¦ rakudo: <…commit message has 6 more lines…>

[10:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0bc72e0504

[10:45] * lizmat is now working to plug this into the core

[11:22] <[Tux]> Rakudo version 2018.10-91-gcbbe16edd - MoarVM version 2018.10-74-g2fdde4a21

[11:22] <[Tux]> csv-test-xs-20      0.435 -  0.440

[11:22] <[Tux]> csv-ip5xs           0.948 -  1.034

[11:22] <[Tux]> test-t --race       0.970 -  0.980

[11:22] <[Tux]> test-t              1.881 -  1.898

[11:22] <[Tux]> csv-ip5xs-20        7.408 -  7.409

[11:22] <[Tux]> test                8.510 -  8.533

[11:22] <[Tux]> test-t-20 --race   12.527 - 12.777

[11:22] <[Tux]> csv-parser         23.139 - 23.516

[11:22] <[Tux]> test-t-20          31.512 - 33.648

[11:30] <lizmat> yeah, most definitely slower :-(

[11:45] <nine> A slow down of this magnitude ought to be easy to pin down

[11:45] <lizmat> Type check failed in assignment to &!operator; expected Callable but got Sub+{is-nodal} (Sub+{is-nodal}.new)

[11:45] <lizmat> isn't that, eh, weird ???  ^^^

[11:46] <timotimo> we've had that a few times, yeah

[11:46] *** travis-ci joined
[11:46] *** p6bannerbot sets mode: +v travis-ci

[11:46] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Add a Hyper class

[11:46] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/452321829 https://github.com/rakudo/rakudo/compare/cbbe16edd101...0bc72e0504ad

[11:46] *** travis-ci left
[11:46] <lizmat> m: sub a() is nodal {}; dd &a ~~ Callable

[11:46] <camelia> rakudo-moar 0bc72e050: OUTPUT: «Bool::True␤»

[11:46] <lizmat> m: sub a() is nodal {}; dd &a

[11:46] <camelia> rakudo-moar 0bc72e050: OUTPUT: «Sub+{is-nodal} a = sub a { #`(Sub+{is-nodal}|50924528) ... }␤»

[11:46] <lizmat> m: sub a() is nodal {}; say &a

[11:46] <camelia> rakudo-moar 0bc72e050: OUTPUT: «&a␤»

[11:47] <lizmat> m: sub a() is nodal {}; say &a.Str

[11:47] <camelia> rakudo-moar 0bc72e050: OUTPUT: «Sub+{is-nodal} object coerced to string (please use .gist or .perl to do that)␤a␤  in block <unit> at <tmp> line 1␤»

[11:47] <lizmat> m: sub a() is nodal {}; say &a.^name

[11:47] <camelia> rakudo-moar 0bc72e050: OUTPUT: «Sub+{is-nodal}␤»

[11:47] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[11:49] *** ufobat_ left
[11:50] <timotimo>     # Expected: all(/<<"No such private method '!bar'" \W/, /<<'RT123078_2'>>/, /<<'bar'>>/, /<<'baz'>>/)

[11:50] <timotimo>     # Got:      No such private method '!!bar' for invocant of type 'RT123078_2'. Did you mean any of these?

[11:50] <timotimo> how did that happen

[11:50] <timotimo> the extra ! in there

[11:59] <lizmat> yeah, no idea:

[11:59] <lizmat> m: class A { method foo { self!bar }; method bar { }; method baz { } }; A.new.foo

[11:59] <camelia> rakudo-moar 0bc72e050: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤No such private method '!bar' for invocant of type 'A'. Did you mean any of these?␤    bar␤    baz␤␤at <tmp>:1␤------> 3class A { method foo { self!7⏏5bar }; method bar { }; method baz { …»

[12:00] * lizmat is going to double check whether it was the Hyper addition

[12:03] <lizmat> it does *not* appear to by my commit

[12:03] <lizmat> (well, my last commit, that is)

[12:06] <lizmat> wrt to slowdown, I'm adding 9457f7e540e2e959141f7 to the suspect list

[12:06] <lizmat> and removes it again: that's compile time

[12:29] <Geth> ¦ rakudo: 75c9456a8b | (Elizabeth Mattijsen)++ | src/core/Hyper.pm6

[12:29] <Geth> ¦ rakudo: Small tweaks to Hyper.pm6

[12:29] <Geth> ¦ rakudo: 

[12:29] <Geth> ¦ rakudo: - cannot coerce Any to native int, so de-int $.dwim-left/right

[12:29] <Geth> ¦ rakudo: - forgot to change to instances of .do into .infix

[12:29] <Geth> ¦ rakudo:   - the idea behind that is that we could handle other ops in the future

[12:29] <Geth> ¦ rakudo:     as well with a different method

[12:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/75c9456a8b

[12:29] *** CIAvash left
[12:36] *** evalable6 left
[12:36] <lizmat> so: with regards to the Travis breakage

[12:36] <lizmat> the code in question is:

[12:36] <lizmat> class RT123078_2 { method foo { self!bar }; method bar { }; method baz { } }; RT123078_2.new.foo

[12:36] <lizmat> m: class RT123078_2 { method foo { self!bar }; method bar { }; method baz { } }; RT123078_2.new.foo

[12:36] <camelia> rakudo-moar 0bc72e050: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤No such private method '!bar' for invocant of type 'RT123078_2'. Did you mean any of these?␤    bar␤    baz␤␤at <tmp>:1␤------> 3class RT123078_2 { method foo { self!7⏏5bar }; method bar …»

[12:37] <lizmat> now, the odd thing is that this dies during compilation

[12:37] <timotimo> that's not odd

[12:37] <timotimo> private methods are looked up during compilation

[12:37] <lizmat> indeed...

[12:38] <lizmat> now, if I remove the actual call to the method from the test

[12:38] <lizmat> the test fails because the code *doesn't die*

[12:38] <lizmat> so the error that gets reported, is somehow a *runtime* error

[12:38] <timotimo> you mean not calling .new.foo will not make it break?

[12:38] <lizmat> indeed

[12:39] <timotimo> m: class RT123078_2 { method foo { self!bar }; method bar { }; method baz { } };

[12:39] <camelia> rakudo-moar 0bc72e050: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤No such private method '!bar' for invocant of type 'RT123078_2'. Did you mean any of these?␤    bar␤    baz␤␤at <tmp>:1␤------> 3class RT123078_2 { method foo { self!7⏏5bar }; method bar …»

[12:39] <timotimo> not on camelia, apparently?

[12:40] <lizmat> well, and not separately either

[12:40] <lizmat> but once it is inside t/05-messages/01-errors.t it doesn't

[12:40] <lizmat> m: use Test; throws-like q| class RT123078_2 { method foo { self!bar }; method bar { }; method baz { } } |, X::Method::NotFound

[12:40] <camelia> rakudo-moar 0bc72e050: OUTPUT: «    1..2␤    ok 1 - ' class RT123078_2 { method foo { self!bar }; method bar { }; method baz { } } ' died␤    ok 2 - right exception type (X::Method::NotFound)␤ok 1 - did we throws-like X::Method::NotFound?␤»

[12:41] <lizmat> m: use Test; throws-like q| class RT123078_2 { method foo { self!bar }; method bar { }; method baz { } } |, X::Method::NotFound, message => all(/<<"No such private method '!bar'" \W/, /<<'RT123078_2'>>/, /<<'bar'>>/, /<<'baz'>>/)

[12:41] <camelia> rakudo-moar 0bc72e050: OUTPUT: «    1..3␤    ok 1 - ' class RT123078_2 { method foo { self!bar }; method bar { }; method baz { } } ' died␤    ok 2 - right exception type (X::Method::NotFound)␤    ok 3 - .message matches all(/<<"No such private method '!bar'" \W/, /<<'RT123078_…»

[12:41] <lizmat> grrr

[12:55] <dogbert11> c: 2018.10 use Test; throws-like q| class RT123078_2 { method foo { self!bar }; method bar { }; method baz { } } |, X::Method::NotFound, message => all(/<<"No such private method '!bar'" \W/, /<<'RT123078_2'>>/, /<<'bar'>>/, /<<'baz'>>/) 

[12:55] <committable6> dogbert11, https://gist.github.com/af30b4003fd3ce14d9b3a77a9b70ffaa

[13:05] *** lucasb joined
[13:05] *** p6bannerbot sets mode: +v lucasb

[13:30] *** evalable6 joined
[13:31] *** p6bannerbot sets mode: +v evalable6

[13:31] *** travis-ci joined
[13:31] *** p6bannerbot sets mode: +v travis-ci

[13:31] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Small tweaks to Hyper.pm6

[13:31] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/452359841 https://github.com/rakudo/rakudo/compare/0bc72e0504ad...75c9456a8b95

[13:31] *** travis-ci left
[13:32] <lizmat> yeah, still bisecting  ^^^

[13:32] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[13:36] <lizmat> looks like it is 8a6c38bfbcb66f6b6169bc that broke it

[13:37] <lizmat> reproduced:

[13:37] <lizmat> $ perl6 --optimize=0 -e 'class A { method foo { self!bar }; method bar { }; method baz { } }; A.new.foo'

[13:37] <lizmat> No such private method '!!bar' for invocant of type 'A'. Did you mean any of these?

[13:38] <lizmat> looks like that change is causing all code to be un-optimized

[13:38] <lizmat> at least, not have a static optimization step

[13:39] <Geth> ¦ rakudo: f04c6c34b8 | (Elizabeth Mattijsen)++ | src/core/ForeignCode.pm6

[13:39] <Geth> ¦ rakudo: Revert "Make EVAL options when we didn't even read options from the command line"

[13:39] <Geth> ¦ rakudo: 

[13:39] <Geth> ¦ rakudo: This reverts commit 8a6c38bfbcb66f6b6169bc4f01285692880791b0.

[13:39] <Geth> ¦ rakudo: 

[13:39] <Geth> ¦ rakudo: It looks like this causes the static optimizer step to be ignored.

[13:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f04c6c34b8

[13:56] <Geth> ¦ rakudo: 2eb43ab9e4 | (Elizabeth Mattijsen)++ | t/05-messages/01-errors.t

[13:56] <Geth> ¦ rakudo: Error should be thrown at compile time

[13:56] <Geth> ¦ rakudo: 

[13:56] <Geth> ¦ rakudo: So remove the method call, which nearly caused a false negative if it

[13:56] <Geth> ¦ rakudo: hadn't been for an error in runtime lookup failure.

[13:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2eb43ab9e4

[13:58] <lucasb> This Hyper thing is gonna be a big refactor? Do you think it's worth to develop it in a branch?

[14:00] <lizmat> lucasb: there are two reasons I put in Hyper into master:

[14:00] <lizmat> 1. because add a new file needs a reconfigure, it made life easier for me while developing

[14:01] <lizmat> 2. unless the new functionality is called from the HYPER sub, there is no active code

[14:01] <lizmat> 3. It should allow me do some easier timing tests for the final commit message  :-)

[14:01] <lizmat> it should be done by tomorrow...

[14:02] *** Kaiepi left
[14:02] *** |Tux| left
[14:02] *** SqrtNegInf left
[14:02] *** samcv left
[14:02] *** |Tux| joined
[14:02] *** Kaiepi joined
[14:03] *** p6bannerbot sets mode: +v |Tux|

[14:03] *** p6bannerbot sets mode: +v Kaiepi

[14:04] *** samcv joined
[14:04] *** samcv left
[14:04] *** samcv joined
[14:04] *** p6bannerbot sets mode: +v samcv

[14:04] *** p6bannerbot sets mode: +v samcv

[14:07] <lizmat> afk for some cycling in a lovely afternoon&

[14:21] *** lucasb left
[14:26] <[Coke]> have fun! my excercise today is walking through NYC

[14:42] *** travis-ci joined
[14:42] *** p6bannerbot sets mode: +v travis-ci

[14:42] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Revert "Make EVAL options when we didn't even read options from the command line"

[14:42] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/452389785 https://github.com/rakudo/rakudo/compare/75c9456a8b95...f04c6c34b836

[14:42] *** travis-ci left
[14:43] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[14:56] *** SqrtNegInf joined
[14:57] *** p6bannerbot sets mode: +v SqrtNegInf

[15:34] *** fake_space_whale joined
[15:35] *** p6bannerbot sets mode: +v fake_space_whale

[15:43] *** travis-ci joined
[15:43] *** p6bannerbot sets mode: +v travis-ci

[15:43] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Error should be thrown at compile time

[15:43] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/452398188 https://github.com/rakudo/rakudo/compare/f04c6c34b836...2eb43ab9e4d4

[15:43] *** travis-ci left
[15:43] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[15:47] *** lizmat left
[15:53] *** pmurias joined
[15:53] *** p6bannerbot sets mode: +v pmurias

[16:00] <Geth> ¦ roast: 61138607ce | (Joelle Maslak)++ | S32-io/IO-Socket-Async.t

[16:00] <Geth> ¦ roast: Tests listening on port 0 returns usable tap with whenever

[16:00] <Geth> ¦ roast: 

[16:00] <Geth> ¦ roast: This tests for regressions of:

[16:00] <Geth> ¦ roast:   https://github.com/rakudo/rakudo/issues/2411

[16:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/61138607ce

[16:00] <Geth> ¦ roast: 122e67e7ed | (Joelle Maslak)++ | S32-io/IO-Socket-Async.t

[16:00] <Geth> ¦ roast: Test directly looks to see if a I:S:A.listen returns a usable Tap

[16:00] <Geth> ¦ roast: 

[16:00] <Geth> ¦ roast: This is an improved test for:

[16:00] <Geth> ¦ roast:       https://github.com/rakudo/rakudo/issues/2411

[16:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/122e67e7ed

[16:00] <Geth> ¦ roast: 2fc3fb6762 | (Joelle Maslak)++ (committed using GitHub Web editor) | S32-io/IO-Socket-Async.t

[16:00] <Geth> ¦ roast: Merge pull request #496 from jmaslak/get-listening-port-number

[16:00] <Geth> ¦ roast: 

[16:00] <Geth> ¦ roast: Tests listening on port 0 returns usable tap with whenever

[16:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/2fc3fb6762

[16:00] *** pmurias left
[16:01] *** pmurias joined
[16:01] *** p6bannerbot sets mode: +v pmurias

[16:15] *** pmurias left
[16:16] *** pmurias joined
[16:16] *** p6bannerbot sets mode: +v pmurias

[16:31] *** pmurias left
[16:33] *** pmurias joined
[16:33] *** p6bannerbot sets mode: +v pmurias

[16:33] *** pmurias left
[16:43] *** stmuk joined
[16:43] *** pmurias joined
[16:43] *** p6bannerbot sets mode: +v pmurias

[16:44] *** p6bannerbot sets mode: +v stmuk

[16:46] *** stmuk_ left
[17:06] *** fake_space_whale left
[17:12] *** robertle_ joined
[17:13] *** p6bannerbot sets mode: +v robertle_

[17:33] *** dct left
[17:38] *** ExtraCrispy joined
[17:38] *** p6bannerbot sets mode: +v ExtraCrispy

[17:50] *** AlexDaniel joined
[17:50] *** p6bannerbot sets mode: +v AlexDaniel

[17:59] *** stmuk_ joined
[17:59] *** lizmat joined
[17:59] *** p6bannerbot sets mode: +v lizmat

[17:59] *** p6bannerbot sets mode: +v stmuk_

[18:00] *** stmuk left
[18:15] *** travis-ci joined
[18:15] *** p6bannerbot sets mode: +v travis-ci

[18:15] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Error should be thrown at compile time

[18:15] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/452398188 https://github.com/rakudo/rakudo/compare/f04c6c34b836...2eb43ab9e4d4

[18:15] *** travis-ci left
[18:15] <lizmat> it looks like we have a flapper  ^^^   I simply re-ran travis on the one build that failed  :-(

[18:20] <Geth> ¦ rakudo: 547f28baf6 | (Joelle Maslak)++ | 2 files

[18:20] <Geth> ¦ rakudo: Add type constraints to port numbers in IO::Socket::Async

[18:20] <Geth> ¦ rakudo: 

[18:20] <Geth> ¦ rakudo: Also remove todo to improve error message for invalid port numbers.

[18:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/547f28baf6

[18:20] <Geth> ¦ rakudo: b0a2ce7657 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 2 files

[18:20] <Geth> ¦ rakudo: Merge pull request #2443 from jmaslak/Async-Port-Constraint

[18:20] <Geth> ¦ rakudo: 

[18:20] <Geth> ¦ rakudo: Add type constraints to port numbers in IO::Socket::Async

[18:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b0a2ce7657

[18:55] *** pmurias left
[18:56] *** pmurias joined
[18:56] *** p6bannerbot sets mode: +v pmurias

[18:56] *** pmurias left
[19:06] *** pmurias joined
[19:06] *** p6bannerbot sets mode: +v pmurias

[19:51] *** brrt joined
[19:52] *** p6bannerbot sets mode: +v brrt

[19:55] *** dct joined
[19:55] *** p6bannerbot sets mode: +v dct

[20:00] *** dct left
[20:28] *** stmuk joined
[20:28] *** p6bannerbot sets mode: +v stmuk

[20:30] *** stmuk_ left
[20:33] *** ExtraCrispy left
[20:51] *** brrt left
[21:42] *** Ven`` joined
[21:42] *** p6bannerbot sets mode: +v Ven``

[21:46] *** Ven`` left
[22:44] *** robertle_ left
[23:00] *** MasterDuke joined
[23:00] *** p6bannerbot sets mode: +v MasterDuke

[23:00] *** MasterDuke left
[23:00] *** MasterDuke joined
[23:00] *** herbert.freenode.net sets mode: +v MasterDuke

[23:00] *** p6bannerbot sets mode: +v MasterDuke

[23:10] *** pmurias left
[23:21] *** fake_space_whale joined
[23:22] *** p6bannerbot sets mode: +v fake_space_whale

[23:38] *** MasterDuke left
[23:46] <Geth> ¦ rakudo: ec2848c43a | (Elizabeth Mattijsen)++ | src/core/Hyper.pm6

[23:46] <Geth> ¦ rakudo: Final tweaks on the Hyper refactor

[23:46] <Geth> ¦ rakudo: 

[23:46] <Geth> ¦ rakudo: - now spectests clean when activated

[23:46] <Geth> ¦ rakudo: - will run some timing tests tomorrow before activating in master

[23:46] <Geth> ¦ rakudo: - expect to see between 1.5x and 4x faster metaops

[23:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ec2848c43a

[23:51] <timotimo> <3

