[00:04] <TimToady> or maybe I should just prototype the whole dang NFA in nqp and we can backtranslate later

[00:06] <jnthn> That may be more efficient :)

[00:06] <jnthn> That's how the NFA engine was done originally

[00:06] <jnthn> Who knows, a smart design in NQP might be faster than what we have now :)

[00:06] <TimToady> if only we had a good spesher... :)

[00:07] <jnthn> Well, its inlining aggression is now sufficient that it's making me fix hard things... :)

[00:07] <timotimo> a smart way to not run the optimizer too often would probably also be nice, that costs us a whole lot when adding infix operators and such

[00:07] <TimToady> you mean the lexer writer?

[00:08] <TimToady> yeah, currently putting things into a module is the only way to amortize that

[00:08] <jnthn> The only reason we gotta compute so much is 'cus we don't have a dependency tree to know what we can keep

[00:09] <TimToady> there are also several ways we could cheat^Wuse techique

[00:09] <TimToady> technique, even

[00:10] <timotimo> techi...que?

[00:14] <TimToady> but yeah, iirc STD made some feeble attempt not to recompile categories that weren't affected

[00:15] <timotimo> i don't think there'd be terribly much shame in just special-casing the addition of infix operators

[00:15] <timotimo> i assume prefix and postfix and friends don't have such a high impact

[00:16] <TimToady> well, if you want programmer involvement, you have a 'start defs' ... 'end defs', and promise you won't use the new operators in that section

[00:16] <TimToady> then you don't have to recalculate till the end

[00:16] <timotimo> mhm

[00:16] <timotimo> that'd at least be easy :)

[00:16] <TimToady> another way to cheat is to lookahead and see if there are any uses

[00:17] <TimToady> or even if there are, add all the new tokens you see in the lookahead, with provisional guards that say "Don't really see me if I'm not actually defined yet"

[00:17] <TimToady> it'd be pretty easy to scan ahead for infix: definitions

[00:17] <timotimo> oof

[00:18] <TimToady> yes, violates the one-pass rule

[00:18] <TimToady> hence would only work with something close enough to Perl 6 to get away with it

[00:19] <TimToady> so it's just technique till you get caught

[00:19] <timotimo> mhm

[00:21] <TimToady> anyway, that's yet another thing I've wanted to do forever after my backbrain attic gets cleared out of all the other things I've wanted to do forever...

[00:23] * jnthn figures he should go rest so he might have a vaguely functioning brain tomorrow :)

[00:23] <jnthn> 'night o/

[00:23] <timotimo> good night jnthn!

[00:23] <TimToady> \o

[00:23] <TimToady> happy GCing

[00:32] <jdv79> TimToady: good to see you in here:)  my mind ran to you optimizing grammars when zoffix mentioned such things earlier today.

[00:57] <[Coke]> jdv79: long time no see, hio

[01:18] *** j3nnn1 left
[01:20] *** Zoffix joined
[01:20] <Zoffix> m: https://gist.github.com/zoffixznet/2a3c2904207495bd2e9337645eeb4b1f

[01:20] <camelia> rakudo-moar b30800c8e: OUTPUT: «A -> STATE: NEW_GROUP : STATE: PREFIX␤N -> STATE: PREFIX : STATE: PREFIX␤( -> STATE: PREFIX : STATE: SUBJECT␤h -> STATE: SUBJECT : STATE: SUBJECT␤e -> STATE: SUBJECT : STATE: SUBJECT␤l -> STATE: SUBJECT : STATE: SUBJECT␤l -> STATE: SUBJECT…»

[01:21] <Zoffix> Boom. A finite state machine. Just as I thought. All that fancy wording is just to make the thing look harder than it is

[01:21] <Zoffix> ZofBot: it just a class that calls itself, bruh!

[01:22] <Zoffix> "self-propelled" hah

[01:37] *** MasterDuke left
[02:02] *** Zoffix left
[03:11] *** MasterDuke joined
[03:15] *** fake_space_whale left
[03:15] *** MasterDuke_ joined
[03:18] *** MasterDuke left
[03:18] *** MasterDuke_ is now known as MasterDuke

[04:23] *** Kaiepi joined
[04:40] *** brrt joined
[04:42] <brrt> \o

[05:09] *** btyler_ joined
[05:16] *** buggable left
[05:16] *** xi- left
[05:16] *** SmokeMachine left
[05:16] *** chansen_ left
[05:16] *** huggable left
[05:35] *** buggable joined
[05:35] *** zostay joined
[05:35] *** xi- joined
[05:35] *** SmokeMachine joined
[05:35] *** chansen_ joined
[05:35] *** huggable joined
[05:35] *** rajaniemi.freenode.net sets mode: +vv buggable huggable

[06:16] *** bisectable6 joined
[06:16] *** greppable6 joined
[06:16] *** nativecallable6 joined
[06:16] *** statisfiable6 joined
[06:50] *** robertle joined
[07:29] *** brrt left
[08:01] <[Tux]> Rakudo version 2018.06-219-gb30800c8e - MoarVM version 2018.06-238-gfae91a6eb

[08:01] <[Tux]> csv-test-xs-20      0.455 -  0.455

[08:01] <[Tux]> test-t --race       0.990 -  1.018

[08:01] <[Tux]> csv-ip5xs           1.191 -  1.231

[08:01] <[Tux]> test-t              2.282 -  2.289

[08:01] <[Tux]> csv-ip5xs-20        8.272 -  8.565

[08:01] <[Tux]> test                8.842 -  9.728

[08:01] <[Tux]> test-t-20 --race   14.188 - 14.200

[08:01] <[Tux]> csv-parser         25.179 - 25.790

[08:01] <[Tux]> test-t-20          39.536 - 40.423

[08:06] *** brrt joined
[08:41] *** Ven` joined
[08:58] *** brrt left
[09:07] *** dogbert2 joined
[09:11] *** brrt joined
[09:27] *** brrt left
[09:28] *** lizmat joined
[09:34] <Geth> ¦ roast/test-R#2090: a550f568f0 | 陈梓立++ | S02-types/range.t

[09:34] <Geth> ¦ roast/test-R#2090: Add test for R#2090

[09:34] <Geth> ¦ roast/test-R#2090: review: https://github.com/perl6/roast/commit/a550f568f0

[09:34] <synopsebot> R#2090 [open]: https://github.com/rakudo/rakudo/issues/2090 [testneeded] Range.roll(*) doesn't work with large minimums

[09:37] <Geth> ¦ roast: a550f568f0 | 陈梓立++ | S02-types/range.t

[09:37] <Geth> ¦ roast: Add test for R#2090

[09:37] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a550f568f0

[09:37] <synopsebot> R#2090 [open]: https://github.com/rakudo/rakudo/issues/2090 [testneeded] Range.roll(*) doesn't work with large minimums

[09:40] <lizmat> Files=1244, Tests=76394, 373 wallclock secs (16.15 usr  5.55 sys + 2640.58 cusr 247.00 csys = 2909.28 CPU)

[09:40] <Geth> ¦ roast: 593313a73f | 陈梓立++ (committed using GitHub Web editor) | S02-types/range.t

[09:40] <Geth> ¦ roast: code clean

[09:40] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/593313a73f

[10:10] <Geth> ¦ nqp/nqp-in-the-browser: 4 commits pushed by (Paweł Murias)++

[10:10] <Geth> ¦ nqp/nqp-in-the-browser: c002acf834 | [js] Fix code emitting after the addition of async placeholders

[10:10] <Geth> ¦ nqp/nqp-in-the-browser: 91c45b2914 | [js] Move missing boolification to the switch to native bignums

[10:10] <Geth> ¦ nqp/nqp-in-the-browser: a224b7ab67 | [js] Add missing require

[10:10] <Geth> ¦ nqp/nqp-in-the-browser: b0765d4720 | [js] Add 'use strict'

[10:10] <Geth> ¦ nqp/nqp-in-the-browser: review: https://github.com/perl6/nqp/compare/e298dd68cfb7...b0765d47203e

[10:13] *** pmurias joined
[10:13] <Ven`> pmurias: seems like there's a typo in your last commit

[10:16] <pmurias> Ven`: 0n is a js bignum literals

[10:16] <pmurias> * literal

[10:17] <Ven`> what version of node do you need?

[10:17] <pmurias> I'm using 10.0.5

[10:18] <Ven`> alright. I'm on 8.9 and it doesn't work

[10:18] <pmurias> but 10.0.6 should work

[10:23] <pmurias> Ven`: I'm not focusing too hard on supporting old versions atm as they will be replaced in the future anyway

[10:25] <pmurias> MasterDuke: do you plan to try to do the slurpy positionals, or should I do that? (I don't want to duplicate work ;) )

[10:26] *** Ven` left
[10:27] <lizmat> .tell scimon the code in your tweet is incorrect, as the ~~ does not become part of the subset

[10:27] <yoleaux> lizmat: I'll pass your message to scimon.

[10:27] <lizmat> .tell scimon I came up with this version: subset WorkingDay of Date where { .day-of-week ~~ 1..5 }; .say for (Date.today, * + 1 ... *).grep(WorkingDay)[^10]

[10:27] <yoleaux> lizmat: I'll pass your message to scimon.

[10:36] <lizmat> .tell scimon >>.say is not guaranteed to *execute* in the given order, only that its *result* is in the correct order

[10:36] <yoleaux> lizmat: I'll pass your message to scimon.

[11:00] <releasable6> Next release in ≈3 days and ≈7 hours. 10 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[11:01] *** buggable left
[11:01] *** buggable joined
[11:01] *** ChanServ sets mode: +v buggable

[11:02] *** robertle left
[11:26] *** Ven` joined
[11:56] *** robertle joined
[12:14] <lizmat> m: .say for (Date.today .. *).grep( { .day-of-week ~~ 1..5 } )[^10]   # even shorter

[12:14] <camelia> rakudo-moar b30800c8e: OUTPUT: «2018-07-18␤2018-07-19␤2018-07-20␤2018-07-23␤2018-07-24␤2018-07-25␤2018-07-26␤2018-07-27␤2018-07-30␤2018-07-31␤»

[12:23] *** fake_space_whale joined
[12:24] *** j3nnn1 joined
[12:24] *** veesh joined
[12:25] *** brrt joined
[12:30] *** MasterDuke left
[13:20] *** Zoffix joined
[13:20] <Zoffix> m: .say for (Date.today…∞).grep(1 ≤ *.day-of-week ≤ 5)[^10] # the … also dwims without needing * + 1 in there

[13:20] <camelia> rakudo-moar b30800c8e: OUTPUT: «2018-07-18␤2018-07-19␤2018-07-20␤2018-07-23␤2018-07-24␤2018-07-25␤2018-07-26␤2018-07-27␤2018-07-30␤2018-07-31␤»

[13:22] <Zoffix> Also, `where { .day-of-week ~~ 1..5 }` can be written without curlies: `where .day-of-week ~~ 1..5`. Someone was asking about this last night. Filed R#2086, 'cause it's pretty easy to mess up there.

[13:22] <synopsebot> R#2086 [open]: https://github.com/rakudo/rakudo/issues/2086 [LTA][RFC] Maybe warn when thunking `*.foo ~~ $bar` constructs?

[13:24] <lizmat> Zoffix++

[13:24] <lizmat> what I wonder, is why "today" isn't a term like "now"  :-)

[13:25] <lizmat> Zoffix: also, you don't need the sequence operator

[13:25] <lizmat> a Range also works, as Date implements .succ

[13:26] <lizmat> I guess you could also implement this as a role that would override .succ to skip over weekends :-)

[13:30] <Zoffix> Yeah, but .. is two chars, while … is one :P

[13:32] <Zoffix> It might be confusing to have `today`, 'cause `now` is an Instance and doesn't match DateTime.now, which is a DateTime

[13:35] <Zoffix> *Instant

[13:36] *** Zoffix left
[13:44] <AlexDaniel> m: say 25‥40 # :P

[13:44] <camelia> rakudo-moar b30800c8e: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Bogus postfix␤at <tmp>:1␤------> 3say 257⏏5‥40 # :P␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤        statement modifier␤ …»

[14:02] *** skids joined
[14:27] *** geekosaur left
[14:28] *** brrt left
[15:11] *** veesh left
[15:20] *** robertle left
[15:50] *** brrt joined
[15:57] *** robertle joined
[16:26] *** fake_space_whale left
[16:32] *** geekosaur joined
[16:32] *** geekosaur left
[16:38] *** brrt left
[16:44] *** geekosaur joined
[17:05] *** lizmat left
[17:34] <Geth> ¦ nqp: 1925237d22 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[17:34] <Geth> ¦ nqp: [MoarVM Bump] Brings 8 commits

[17:34] <Geth> ¦ nqp: 

[17:34] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.06-230-g0daa14c87...2018.06-238-gfae91a6eb

[17:34] <Geth> ¦ nqp: fae91a6eb Fix indentation of code in uthash.h

[17:34] <Geth> ¦ nqp: d0be1847a Fix typos in comments

[17:34] <Geth> ¦ nqp: c56865594 Check if bucket is correct in HASH_FSCK

[17:34] <Geth> ¦ nqp: 39a2e71b4 Optimize uthash ptr delete code

[17:34] <Geth> ¦ nqp: db6cc49ca Merge branch 'frame-walker'

[17:34] <Geth> ¦ nqp: 198f5e46b Teach frame walker to understand inlines

[17:34] <Geth> ¦ nqp: 6ae63d2a5 Factor deopt index finding out of deopt all

[17:34] <Geth> ¦ nqp: fc747c94d Extract frame walking logic from getlexcaller

[17:34] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/1925237d22

[17:34] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.06-230-g0daa14c87...2018.06-238-gfae91a6eb

[17:34] <Geth> ¦ rakudo: a847abe523 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[17:34] <Geth> ¦ rakudo: [NQP Bump] 1925237d2 [MoarVM Bump] Brings 8 co […]

[17:34] <Geth> ¦ rakudo: 

[17:34] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.06-57-g74f247d7d...2018.06-58-g1925237d2

[17:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a847abe523

[17:34] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.06-57-g74f247d7d...2018.06-58-g1925237d2

[18:02] *** Ven` left
[18:13] *** lizmat joined
[18:47] *** brrt joined
[18:51] *** Ven`` joined
[19:44] *** [Tux] left
[19:51] *** [Tux] joined
[19:52] *** [Tux] left
[19:54] <lizmat> m: proto sub trait_mod:<is>(|) is export {*}  # chicken and egg problem

[19:54] <camelia> rakudo-moar a847abe52: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot resolve caller trait_mod:<is>(Sub, :export); Routine does not have any candidates. Is only the proto defined?␤at <tmp>:1␤»

[19:56] *** [Tux] joined
[19:58] *** Ven` joined
[20:03] *** Ven` left
[20:19] <jnthn> Yeah, but lexical scoping means we know which comes first :P

[20:27] *** Ven`` left
[20:30] *** brrt left
[20:30] *** brrt joined
[20:53] *** Ven`` joined
[21:03] *** skids left
[21:08] *** Ven`` left
[21:24] *** robertle left
[22:11] *** brrt left
[22:41] *** MasterDuke joined
[22:44] *** lizmat left
[22:47] <MasterDuke> pmurias: i looked at the file you pointed me to, but i didn't immediately figure out what to do and haven't started any work.  i'm sure you'll beat me to it

[22:59] *** hoelzro left
[22:59] *** huggable left
[23:00] *** buggable left
[23:03] *** test joined
[23:04] *** test is now known as Guest31827

[23:05] <pmurias> MasterDuke: I don't want to take over all the simpler more interesting tasks ;)

[23:05] <pmurias> MasterDuke: I'll do that tommorow

[23:08] *** Guest31827 left
[23:14] *** j3nnn1 left
[23:20] *** guestamundo joined
[23:25] <Geth> ¦ nqp: 973c6d0496 | 陈梓立++ (committed using GitHub Web editor) | src/NQP/Grammar.nqp

[23:25] <Geth> ¦ nqp: Remove <?before> token in token term:sym<multi_declarator> (#484)

[23:25] <Geth> ¦ nqp: 

[23:25] <Geth> ¦ nqp: .. also remove no-need workaround of <!before> by rearrange the order.

[23:25] <Geth> ¦ nqp: 

[23:25] <Geth> ¦ nqp: co rakudo/rakudo#2082

[23:25] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/973c6d0496

[23:25] <synopsebot> RAKUDO#2082 [open]: https://github.com/rakudo/rakudo/pull/2082  Remove <?before> token in token term:sym<multi_declarator>

[23:33] *** lizmat joined
[23:33] *** pmurias left
[23:34] <lizmat> m: multi sub trait_mod:<is>(\m, :$foo!) { say "duh" }; my %h is foo   # should this work or not ?

[23:34] <camelia> rakudo-moar a847abe52: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Can't use unknown trait 'is foo' in a variable declaration.␤at <tmp>:1␤------> 3 %h is foo   # should this work or not ?7⏏5<EOL>␤    expecting any of:␤        TypeObject␤        default…»

[23:35] <lizmat> m: sub trait_mod:<is>(\m, :$foo!) { say "duh" }; my %h is foo   # it does when I make it an only

[23:35] <camelia> rakudo-moar a847abe52: OUTPUT: «duh␤»

[23:35] <lizmat> afk&

[23:35] <jnthn> That's odd; I'd expect it to work

[23:35] *** guestamundo left
[23:37] <Kaiepi> PufferBot, build

[23:37] <Kaiepi> PufferBot, help

[23:38] <Kaiepi> ok

[23:38] *** PufferBot left
[23:39] *** xyzq joined
[23:39] *** guestorino joined
[23:40] *** guestorino left
[23:40] <Kaiepi> oh right i use tmux not cron

[23:40] <Kaiepi> lmao

[23:42] <Geth> ¦ roast: e6642ab269 | (Zoffix Znet)++ | S12-subset/subtypes.t

[23:42] <Geth> ¦ roast: [v6.d REVIEW] Refine capture `where` test

[23:42] <Geth> ¦ roast: 

[23:42] <Geth> ¦ roast: Check the routine actually works and the death is with the

[23:42] <Geth> ¦ roast: right exception.

[23:42] <Geth> ¦ roast: 

[23:42] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/2a11bdf9a

[23:42] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e6642ab269

[23:43] <Kaiepi> ok never mind i can't start pufferbot since rakudo's fucked for me

[23:43] *** guestorino joined
[23:46] *** xyzq left
[23:46] *** Zoffix_ joined
[23:46] *** guestorino left
[23:46] <Zoffix_> m: multi sub trait_mod:<is>(Variable:D \m, :$foo!) { say "duh" }; my %h is foo

[23:46] <camelia> rakudo-moar a847abe52: OUTPUT: «duh␤»

[23:47] <jnthn> Oh, righ

[23:47] <jnthn> *right

[23:47] <jnthn> It looses on narrowness to the fallback otherwise :)

[23:47] <Zoffix_> lizmat, nameds don't participate in multi dispatch and the core Variable:D trait that whines about "unknown trait" got a narrower constraint and no type on the positional at all

[23:47] <Zoffix_> This one https://github.com/rakudo/rakudo/blob/master/src/core/Variable.pm6#L39

[23:48] <Zoffix_> s/and not type/than no type/;

[23:48] <Zoffix_> no ZofBot :o

[23:49] <Zoffix_> "We are aware of an issue affecting service to this Linode." booo

[23:49] *** go|dfish joined
[23:52] *** Zoffix_ left
[23:55] <Geth> ¦ roast: ab0a9330a3 | (Zoffix Znet)++ | S32-num/int.t

[23:55] <Geth> ¦ roast: [v6.d REVIEW] Add missing types to Numeric:U ~~ Numeric:D tests

[23:55] <Geth> ¦ roast: 

[23:55] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/8a8bd603f

[23:55] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ab0a9330a3

[23:59] *** buggable joined
[23:59] *** ChanServ sets mode: +v buggable

[23:59] *** ZofBot joined
[23:59] *** ChanServ sets mode: +v ZofBot

