[00:47] <ronsavage> lizmat: Hi. I just read thru the https://github.com/perl6/perl6-most-wanted/blob/master/most-wanted/modules.md. Please note that CGI::Session is abandonware. I rewrote it as Data::Session.

[00:47] <psch> hi #perl6-dev

[00:47] <psch> trying to build r-j i run into a bindpos_n miscall -- or something like it at least

[00:48] <psch> jdb points me at gen/jvm/CORE.setting:29581, which is part of the autogenerate numarray

[00:49] <psch> this is where numarray is used as a parameter type constraint

[00:49] <psch> neither r-j (as far as it builds) nor r-j recognize the *type* numarray

[00:49] <psch> r: sub f(numarray $a) { }

[00:49] <camelia> rakudo-jvm a92950fb4: ( no output )

[00:49] <camelia> ..rakudo-moar a1fd0b732: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Invalid typename 'numarray' in parameter declaration.‚ê§at <tmp>:1‚ê§------> 3sub f(numarray7‚èè5 $a) { }‚ê§¬ª

[00:50] <psch> ...i'm assuming the r-j build here is from before whenever that was introduced

[00:52] <psch> examining this after writing it down here makes me think numarray might be setting-scoped somehow, for what it's worth

[00:53] <psch> but if scope is somehow broken during CORE compilation between r-j and r-m i'd think myself solidly out of my depths

[00:57] <Zoffix> psch: FWIW bartolin++ has successfully built JVM and ran spectest a day or so ago. So there shouldn't any compilation errors on HEAD

[00:58] <Zoffix> ronsavage: thanks. Updated it in https://github.com/perl6/perl6-most-wanted/commit/4fa96a646a066a24fc294bdf3d647270ee5aac66

[00:59] <psch> Zoffix: might've been a case of "i heard nom got dropped but the repo was still on it," rebuilding now

[00:59] <Zoffix> Ah :)

[01:01] <ronsavage> Zoffix: Thanx. Data::Session does not include an equivalent of CGI::Session::Auth. I suggest add that back for now.

[01:02] <Zoffix> Done: https://github.com/perl6/perl6-most-wanted/commit/ed52b5256fad25419c24caf97f66d6f7c7b9d6c6

[01:22] <AlexDaniel> releasable6: next

[01:22] <releasable6> AlexDaniel, Next release in 2 days and ‚âà17 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Unknown changelog format

[01:23] <psch> apparently yes, 'git checkout master' in $RAKUDO_SRC solved the build hangup :)

[01:24] <AlexDaniel> heh!

[01:35] <psch> hm, can i force 'make test' to not parallelize?

[01:35] <timotimo> TEST_JOBS=1 maybe?

[01:35] <psch> 'cause the output looks like it does parallelize and i get non-deterministic failures

[03:04] <tbrowder> AlexDaniel: any chance of getting my rakudo PR #1339 merged for the next release?

[03:05] <AlexDaniel> hmmmm

[03:05] <tbrowder> it would close some issues!

[03:05] <tbrowder> it might mKe DrForr happy!

[03:06] <tbrowder> *make

[03:06] <AlexDaniel> from one hand we don't know what it could break, from the other hand a bunch of star users will be stuck with unusable pod features if we don't merge‚Ä¶

[03:06] * AlexDaniel hovers over the merge button

[03:07] <tbrowder> it would free me to concentrate on anothe PR to close more issues!

[03:07] <AlexDaniel> :)

[03:07] <tbrowder> and, if it does break things, they can be fixed...

[03:09] <tbrowder> otherwise, move it to 6.d

[03:09] <tbrowder> pretty please :-D

[03:10] <tbrowder> at any rate

[03:10] <Geth> ¬¶ rakudo/master: 16 commits pushed by (Tom Browder)++, (Aleks-Daniel Jakimenko-Aleksejev)++

[03:10] <Geth> ¬¶ rakudo/master: review: https://github.com/rakudo/rakudo/compare/a1fd0b7322...14c28cae40

[03:12] <Geth> ¬¶ roast/master: 6 commits pushed by (Tom Browder)++, (Aleks-Daniel Jakimenko-Aleksejev)++

[03:12] <Geth> ¬¶ roast/master: 3f46b16adf | adds tests for rakudo PR 1339

[03:12] <Geth> ¬¶ roast/master: 36cb104d5a | Merge master branch because some tests are failing possibly due to this branch.

[03:12] <Geth> ¬¶ roast/master: a69f2ea631 | add more tests for the config hash

[03:12] <Geth> ¬¶ roast/master: 14ecb8aa4f | remove invalid NYI comments

[03:12] <Geth> ¬¶ roast/master: e090217c03 | added more extensive int tests

[03:12] <Geth> ¬¶ roast/master: 41309b58f6 | Merge pull request #371 from tbrowder/fix-config-quotes

[03:13] <Geth> ¬¶ roast/master: review: https://github.com/perl6/roast/compare/ccff418444...41309b58f6

[03:13] <tbrowder> ...in any event, the PR has the solution to converting p5 module Text::ParseWords to p6 which would make lizmat happy!

[03:13] <AlexDaniel> tbrowder: will you close all the tickets that are now resolved?

[03:13] <AlexDaniel> do you have the rights to do that on RT?

[03:13] <tbrowder> yes! thanks!

[03:14] <AlexDaniel> k

[03:14] <tbrowder> um, i think i have done that...

[03:15] <AlexDaniel> releasable6: next

[03:15] <releasable6> AlexDaniel, Next release in 2 days and ‚âà15 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Unknown changelog format

[03:15] <AlexDaniel> hopefully we'll see if anything is very wrong during this time :) Also will do another toaster run right before the release

[03:15] <AlexDaniel> (if nobody beats me to it)

[03:16] <AlexDaniel> tbrowder: as for futher POD PRs, I'm not really sure. I don't fully like where this is going

[03:16] <AlexDaniel> it feels like we're sweeping bugs under the rug

[03:17] <AlexDaniel> which is maybe OK as long as stuff is getting more usable, but still‚Ä¶

[03:18] <AlexDaniel> and the code is getting too complex for the simpliest stuff like making sure that quotes are not part of the string :S

[03:19] <tbrowder> is anyone working on pod probs in the meantime? are we going to abandon p6 pod for something else? if not, won‚Äôt the fixes still be generally applicable?

[03:20] <tbrowder> my next goal is a grammar or action change to fix some of the pod issues.

[03:20] <AlexDaniel> well I'm thinking with this comment in mind: https://github.com/rakudo/rakudo/pull/1300#issuecomment-351248903

[03:24] <tbrowder> yes, that was a good step for format codes, but the issues i want to work are more ‚Äúbasic‚Äù and involve parse errors, not weird conversion problems which are more at the class definition level.

[03:25] <AlexDaniel> well, chances are you know better what to do

[03:26] <tbrowder> so, should i go away until a new pod language is being developed?

[03:26] <AlexDaniel> I think that you're ready to do it :)

[03:27] <AlexDaniel> I mean, implement it as a language

[03:27] <AlexDaniel> nobody else is working on it, I haven't heard anyone planning to do it

[03:27] <tbrowder> that is way above my pay grade!

[03:30] <AlexDaniel> I believe in you!

[03:33] <tbrowder> but there is someone who was working on it last in i think about 2015. her name is S* and i‚Äôll see if i can find the reference...

[03:33] <AlexDaniel> ShimmerFairy?

[03:36] <AlexDaniel> unfortunately this blog post is not in web archive: https://shimmeryfairy.wordpress.com/2015/08/18/improving-pod-handling-in-rakudo/

[03:39] <tbrowder> yes, and i can‚Äôt find her on github now which i think she used to be on...maybe bitbucket or something else...

[03:40] <AlexDaniel> it's right there but I don't know how this would help: https://github.com/ShimmerFairy/

[03:41] <tbrowder> ok, just found her on github: ShimmerFairy

[03:42] <tbrowder> it‚Äôs the SUPERNOVA repo

[03:44] <AlexDaniel> right, supernova

[03:47] <tbrowder> is that kind of what you have in mind for a separate pod language?

[03:48] <AlexDaniel> well I was thinking that it would be in core

[03:49] <AlexDaniel> and I totally forgot that supernova existed

[03:49] <AlexDaniel> but perhaps the effort should be continued?

[03:49] <AlexDaniel> I really don't know. I think I ‚Äújoined‚Äù the community right when the effort on it stopped, so I don't remember anything from the time

[03:49] <AlexDaniel> maybe others can comment

[03:51] <tbrowder> comments would be welcome!

[03:52] <AlexDaniel> tbrowder: while others are waking up, maybe you can try using supernova with the latest rakudo?

[03:52] <AlexDaniel> I'm wondering if it still compiles/runs

[03:53] <tbrowder> when i last looked at that i didn‚Äôt know quite as much as the little i know now, but i think i can try...but i won‚Äôt have much time until after 27 jan...

[03:54] <AlexDaniel> Its TODO file is really interesting to read: https://github.com/ShimmerFairy/SUPERNOVA/blob/master/TODO.pod6

[04:11] <tbrowder> yes, makes much more sense now...

[04:12] <tbrowder> AlexDaniel: g‚Äônight from UTC-5, and many thanks for the merge!

[04:25] <AlexDaniel> o/

[05:49] <AlexDaniel> m: note

[05:49] <camelia> rakudo-moar 14c28cae4: OUTPUT: ¬´Noted‚ê§¬ª

[05:49] <AlexDaniel> ‚Ä¶ don't even want to know how that happened

[05:52] <AlexDaniel> ok I can't help myself, bisectable is just so fun to use :) https://github.com/rakudo/rakudo/commit/0bf81fa2c64459a8859a4d5038d04bbb92c7e505

[08:32] <[Tux]> Rakudo version 2017.12-269-g14c28cae4 - MoarVM version 2017.12.1-36-g20a4a7976

[08:32] <[Tux]> csv-test-xs-20      0.432 -  0.470

[08:33] <[Tux]> csv-ip5xs           1.111 -  1.186

[08:33] <[Tux]> test-t --race       1.160 -  1.246

[08:33] <[Tux]> test-t              2.833 -  2.861

[08:33] <[Tux]> test               11.319 - 11.365

[08:33] <[Tux]> csv-parser         12.316 - 12.350

[08:33] <[Tux]> csv-ip5xs-20       13.218 - 13.252

[08:33] <[Tux]> test-t-20 --race   17.663 - 17.703

[08:33] <[Tux]> test-t-20          50.618 - 50.858

[08:33] <[Tux]> computer might have been busier than usual

[08:58] <lizmat> Files=1232, Tests=76101, 326 wallclock secs (14.83 usr  5.07 sys + 2252.75 cusr 226.15 csys = 2498.80 CPU)

[14:41] <Geth> ¬¶ roast/post-release: efdad977a4 | (Zoffix Znet)++ | MISC/bug-coverage.t

[14:41] <Geth> ¬¶ roast/post-release: Test crashes with natives in if/unless

[14:41] <Geth> ¬¶ roast/post-release:

[14:41] <Geth> ¬¶ roast/post-release: RT#132718

[14:41] <Geth> ¬¶ roast/post-release: review: https://github.com/perl6/roast/commit/efdad977a4

[14:41] <synopsebot> RT#132718 [open]: https://rt.perl.org/Ticket/Display.html?id=132718 BUG: Unhandled kind 3 with int32 argument

[18:03] <|Tux|> Nice

[18:03] <|Tux|> Rakudo version 2017.12-269-g14c28cae4 - MoarVM version 2017.12.1-36-g20a4a7976

[18:03] <|Tux|> csv-test-xs-20      0.458 -  0.501

[18:03] <|Tux|> csv-ip5xs           1.097 -  1.100

[18:03] <|Tux|> test-t --race       1.132 -  1.146

[18:03] <|Tux|> test-t              2.704 -  2.728

[18:03] <|Tux|> test               10.557 - 11.224

[18:03] <|Tux|> csv-parser         11.687 - 11.932

[18:03] <|Tux|> csv-ip5xs-20       12.819 - 12.849

[18:03] <|Tux|> test-t-20 --race   17.224 - 17.443

[18:03] <|Tux|> test-t-20          48.192 - 48.487

[18:30] <tbrowder> AlexDaniel: i forked ShimmerFairy‚Äôs SUPERNOVA and grammar-parsefail, and the tests on the latter work fine.  not so with SU* but i will (1) add in all the current roast pod tests and (2) separate the good from the bad to see if anything needs updating. then i‚Äôll move along trying to make progress toward SF‚Äôs original plan.

[18:32] <tbrowder> i note that i filed an issue back in november asking her to look at my table improvents for her work but she seems to have left perl 6 and github about two years ago.

[19:23] <bartolin> oh, psch++ stopped last night. nice

[19:25] <bartolin> psch: non-deterministic failures with 'make test' on the JVM backend might very well be caused by RT #132104

[19:25] <synopsebot> RT#132104 [open]: https://rt.perl.org/Ticket/Display.html?id=132104 [JVM] EvalServer leaks threads and memory when using Proc::Async

[19:25] <bartolin> psch: also, there is RT #132102 ...

[19:25] <synopsebot> RT#132102 [new]: https://rt.perl.org/Ticket/Display.html?id=132102 [JVM] ‚Äòmake test‚Äô fails a lot of nativecall tests

[19:27] <bartolin> *stopped by (a few lines above)

[19:29] <[Coke]> I am planning on attending TPC::NA this year.

[20:05] <Geth> ¬¶ roast: dogbert17++ created pull request #378: Added test for GH #1349

[20:05] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/pull/378

[20:08] <Geth> ¬¶ roast: 782b14365b | (Jan-Olof Hendig)++ | S32-list/seq.t

[20:08] <Geth> ¬¶ roast: Added test for GH #1349

[20:08] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/782b14365b

[20:08] <Geth> ¬¶ roast: 64381b9457 | (Zoffix Znet)++ (committed using GitHub Web editor) | S32-list/seq.t

[20:08] <Geth> ¬¶ roast: Merge pull request #378 from dogbert17/test-gh-1349

[20:08] <Geth> ¬¶ roast:

[20:08] <Geth> ¬¶ roast: Added test for GH #1349

[20:08] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/64381b9457

[20:20] <tbrowder> .tell AlexDaniel i was able to close the four tickets fixed by merge of rakudo PR #1339: RT #124281, RT #126742, RT #130477, and RT #132632

[20:20] <yoleaux> tbrowder: I'll pass your message to AlexDaniel.

[20:20] <synopsebot> RT#124281 [resolved]: https://rt.perl.org/Ticket/Display.html?id=124281 colonpairs in [POD] config options always produce strings

[20:20] <synopsebot> RT#126742 [resolved]: https://rt.perl.org/Ticket/Display.html?id=126742 [POD]  config items should not include quotes for string values

[20:21] <synopsebot> RT#130477 [resolved]: https://rt.perl.org/Ticket/Display.html?id=130477 [BUG][POD] Pod config parses colopairs but simply stringifies whatever it matched

[20:21] <synopsebot> RT#132632 [resolved]: https://rt.perl.org/Ticket/Display.html?id=132632 [POD][NYI]. List and hash configuration value formats are not yet implemented (NYI)

[20:23] <psch> hm, apparently we have org.perl6.rakudo.RakudoEvalServer but don't actually use it in perl6-eval-server...

[20:23] <psch> bartolin: i'm looking at the thread leaks a bit right now, not sure i'll get anywhere though

[20:24] <psch> bartolin: a hunch was something about ServiceThreads staying alive due to some reference staying around, but nothing jumps out

[21:50] <Geth> ¬¶ roast/6.c-errata: 5ba18d31d8 | (Zoffix Znet)++ | S32-exceptions/misc.t

[21:50] <Geth> ¬¶ roast/6.c-errata: Fix incorrect expected exception type

[21:50] <Geth> ¬¶ roast/6.c-errata:

[21:50] <Geth> ¬¶ roast/6.c-errata: X::Obsolete is for general things; Perl 5 vars have special

[21:50] <Geth> ¬¶ roast/6.c-errata: exception just for them.

[21:50] <Geth> ¬¶ roast/6.c-errata: review: https://github.com/perl6/roast/commit/5ba18d31d8

[22:12] <Geth> ¬¶ roast/6.c-errata: 1c438e1231 | (Elizabeth Mattijsen)++ (committed by Zoffix Znet) | S32-exceptions/misc.t

[22:12] <Geth> ¬¶ roast/6.c-errata: Fix OutOfRange test that is too specific

[22:12] <Geth> ¬¶ roast/6.c-errata:

[22:12] <Geth> ¬¶ roast/6.c-errata: (N.B by Zoffix: more accuratelly, the test tests for `Range`

[22:12] <Geth> ¬¶ roast/6.c-errata: object, whereas the exception's .range attribute is set to a `Str`

[22:12] <Geth> ¬¶ roast/6.c-errata: in all of the setting and defaults to `Str` "<unknown>")

[22:12] <Geth> ¬¶ roast/6.c-errata: review: https://github.com/perl6/roast/commit/1c438e1231

[22:17] <Geth> ¬¶ rakudo: 90246e6526 | (Zoffix Znet)++ | src/core/Range.pm

[22:17] <Geth> ¬¶ rakudo: Make .range consistently a Str

[22:17] <Geth> ¬¶ rakudo:

[22:17] <Geth> ¬¶ rakudo: It's given as a Str in all the other instances in the setting and

[22:17] <Geth> ¬¶ rakudo: defaults to Str "<unknown>"

[22:17] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/90246e6526

[22:18] <Geth> ¬¶ roast: fae1c54c0a | (Zoffix Znet)++ | S26-documentation/09-configuration.t

[22:18] <Geth> ¬¶ roast: Unfudge now-passing test

[22:18] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/fae1c54c0a

[22:25] <Zoffix> AlexDaniel: FWIW 6.c-errata fails one test in t/spec/integration/advent2013-day07.t and it's a violation of the 6.c spec, not a wrong test (changed in master in https://github.com/perl6/roast/commit/5670acf676d65167e892515a42b71c81984f39f2 )

[22:25] * Zoffix votes ¬±0 on deferring that change to 6.d
