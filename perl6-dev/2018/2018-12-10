[01:34] *** lucasb left
[03:25] *** ufobat___ joined
[03:25] *** ufobat_ left
[03:26] *** p6bannerbot sets mode: +v ufobat___

[05:51] *** leont left
[07:38] *** robertle joined
[07:39] *** p6bannerbot sets mode: +v robertle

[08:23] <Geth> ¬¶ nqp: 176960303f | (Stefan Seifert)++ | 15 files

[08:23] <Geth> ¬¶ nqp: Fix bytecode writing on big endian systems

[08:23] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/176960303f

[09:18] *** lucasb joined
[09:18] *** p6bannerbot sets mode: +v lucasb

[11:22] *** leont joined
[11:23] *** p6bannerbot sets mode: +v leont

[11:38] <|Tux|> Rakudo version 2018.11-22-gfd216fec4 - MoarVM version 2018.11-18-gb8ba4707c

[11:38] <|Tux|> csv-test-xs-20      0.432 -  0.436

[11:38] <|Tux|> test-t --race       0.781 -  0.817

[11:38] <|Tux|> csv-ip5xs           0.910 -  0.922

[11:38] <|Tux|> test-t              1.732 -  1.748

[11:38] <|Tux|> csv-ip5xs-20        6.936 -  7.161

[11:38] <|Tux|> test                7.381 -  7.734

[11:38] <|Tux|> test-t-20 --race    9.263 -  9.413

[11:38] <|Tux|> csv-parser         21.166 - 22.479

[11:38] <|Tux|> test-t-20          30.067 - 31.514

[12:55] *** robertle left
[13:20] <dogbert2_> .seen lizmat

[13:20] <yoleaux> I saw lizmat 11:17Z in #perl6: <lizmat> .

[13:20] <lizmat> you rang ?

[13:21] <dogbert2_> lizmat: yes

[13:21] <dogbert2_> can I ask you to do a couple of things?

[13:21] <dogbert2_> first, a bump to get nine++ recent Moar and NQP commits

[13:22] <dogbert2_> if possible

[13:23] <dogbert2_> lizmat: secondlym can you close R#2361. I'm not allowed to do that?

[13:23] <lizmat> dogbert2_   will do

[13:23] <dogbert2_> +++lizmat

[13:27] <lizmat> hmmm.... looks like nqp already got bumped ?

[13:39] <dogbert2_> lizmat: when did that happen?

[13:39] <lizmat> 09:22:21 +0100 this morning

[13:40] <lucasb> a bump?

[13:41] <lizmat> as part of nine++ work on getting bytecode writing corrected on big endian systems

[13:41] <lucasb> ah, sorry, lizmat, you're right

[13:41] <lucasb> I was looking for a stand-alone commit :)

[13:42] <lizmat> testing rakudo now

[13:43] <dogbert2_> but then I guess we need to bump MoarVM?

[13:44] <lucasb> dogbert2_: MOAR_REVISION was updated in nqp in the last commit

[13:49] *** robertle joined
[13:50] *** p6bannerbot sets mode: +v robertle

[13:51] <dogbert2_> I just got the impression that MoarVM wasn't rebuilt (on my system)

[13:52] <dogbert2_> shouldn't tools/build/NQP_REVISION be updated?

[13:55] <lizmat> dogbert2_: yeah it should, after I determined it builds and tests ok  :-)

[13:57] <dogbert2_> :-)

[13:57] <lucasb> when MOAR_REVISION is changed as part of another commit in nqp, the "bump commit message" is missed, no? which tool generates that commit "[MoarVM Bump] Brings N commits. MoarVM bump brought: COMMIT_RANGE" ?

[13:59] <lucasb> shouldn't all bump commits be stand-alone commits?

[13:59] <timotimo> i think the Z tool does that

[14:00] <lucasb> (stand-alone commits for bisectabilty purporses)

[14:01] <lucasb> s/r//

[14:01] <Geth> ¬¶ rakudo: 46d4c9fe96 | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[14:01] <Geth> ¬¶ rakudo: Bump NQP to get nine++ latest bigendian fixes

[14:01] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/46d4c9fe96

[14:01] <Geth> ¬¶ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.11...2018.11-33-g1769603

[14:05] <nine> lucasb: bisectability is exactly why I included the bump in the commit. Because the commit absolutely needs the accompanying changes in MoarVM

[14:14] <lizmat> ufobat___: added another answer to your SUB-MAIN-OPTS question

[14:14] <ufobat___> on SO?

[14:14] <lizmat> yup  :-)

[14:15] <ufobat___> let me read

[14:16] <ufobat___> smart!

[14:17] <lizmat> it's a bit dirty, but in the context of a CLI script, I think it's ok

[14:18] <lizmat> and you could consider it cleaner than exporting %SUB-MAIN-OPTS

[14:18] <ufobat___> thank you. lizmat++

[14:18] <lizmat> OTOH, if the client has it's own my %*SUB-MAIN-OPTS, the PROCESS:: one will not be seen

[14:18] <lizmat> so you're setting up a default at best

[14:23] <lucasb> nine: ok

[14:25] <lucasb> but a moarvm bump brings other commits (maybe most are associated with this specific issue), but any problem in those unrelated will be associated with "Fix bytecode writing on big endian systems", which may be non-intuitive, no?

[14:26] <lucasb> FTR, since Geth didn't show: https://github.com/MoarVM/MoarVM/compare/2018.11...2018.11-18-gb8ba4707c

[14:29] <robertle> nine: was away for a while and did not follow this, but do you have more commits? the bump discussion above sounds like you have a big-endian fix, but I can't see any new commits...

[14:40] <nine> robertle: no, I'm at $work

[14:42] *** brrt joined
[14:43] *** p6bannerbot sets mode: +v brrt

[14:47] <robertle> ah, ok, k!

[14:47] <robertle> me too, that's why I am so confused :)

[15:06] <dogbert2_> robertle: the bump is necessary if you build from your rakudo directory, i.e. with 'perl Configure.pl --gen-moar --gen-nqp --backends=moar'

[15:07] <dogbert2_> if you build MoarVM and nqp yourself you don't need it

[15:30] <AlexDaniel> nine: fwiw that doesn't affect bisectablity in any way for proper tools than know how to skip broken builds and stuff

[15:30] <AlexDaniel> if I understood the situation correctly :)

[15:32] <AlexDaniel> lucasb: yeah, some bumps are fatter than the others. I think there are two ways to improve it. Either force everyone to bump more often, or ‚Äúfix‚Äù bisectable to know how to deal with bumps

[15:33] <AlexDaniel> lucasb: there's this ticket: https://github.com/perl6/whateverable/issues/40

[15:33] <AlexDaniel> I attempted to do it some time ago but then the code grew like three times or so, I didn't like that and stopped‚Ä¶

[15:34] <AlexDaniel> (talking about the whateverable build script)

[15:35] <AlexDaniel> if somebody wants to give it a go that'd be AWESOME

[15:36] <AlexDaniel> and yes, that'd also automatically make it work for whateverable-based scripts that bisect locally

[15:37] <AlexDaniel> and once we add ‚Äúbuild on demand‚Äù functionality that'd also make it easier to bisect on mips :)

[15:37] <AlexDaniel> (not for that last issue maybe, but we did need it in the past)

[15:47] <nine> AlexDaniel: I was talking about a plain git bisect

[15:50] <AlexDaniel> plain git bisect is also fine if you skip properly

[15:50] <AlexDaniel> or exit 125 if you're doing it with a script

[16:03] *** brrt left
[16:07] *** leont left
[16:46] *** Kaiepi left
[16:47] *** Kaiepi joined
[16:48] *** p6bannerbot sets mode: +v Kaiepi

[16:51] <nine> Upgrading the powerpc image to a somewhat current debian version failed...with no useful error message

[17:19] *** Ven`` joined
[17:20] *** p6bannerbot sets mode: +v Ven``

[17:25] *** brrt joined
[17:25] *** p6bannerbot sets mode: +v brrt

[17:32] *** japhb joined
[17:33] *** p6bannerbot sets mode: +v japhb

[17:38] *** brrt left
[17:46] <lizmat> notable6: weekly

[17:46] <notable6> lizmat, 13 notes: https://gist.github.com/247e86dbb302a2d2b87c0a5c0a850307

[17:46] <AlexDaniel> ooh it's Monday!

[17:47] <AlexDaniel> reportable6: 2018-12-03T00:00:00Z 2018-12-10T00:00:00Z

[17:47] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[17:48] <reportable6> AlexDaniel, https://gist.github.com/86ea3e1c0b6a885e1d942c59cc844bb1

[17:49] <AlexDaniel> lizmat: ‚Üë

[17:49] <lizmat> AlexDaniel: got it :-)

[17:49] <AlexDaniel> releasable6: status

[17:49] <releasable6> AlexDaniel, Next release in ‚âà5 days and ‚âà1 hour. 4 blockers. 0 out of 23 commits logged

[17:49] <releasable6> AlexDaniel, Details: https://gist.github.com/0e371a5cada3cb39a628904b17c34e38

[17:52] *** japhb left
[17:54] *** japhb joined
[17:55] *** p6bannerbot sets mode: +v japhb

[18:11] *** Ven`` left
[18:16] *** Ven`` joined
[18:17] *** p6bannerbot sets mode: +v Ven``

[18:21] *** japhb_ left
[18:27] *** Ven`` left
[18:38] *** Ven`` joined
[18:39] *** p6bannerbot sets mode: +v Ven``

[18:55] *** ufobat___ left
[18:56] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/12/10/2018-49-50-diwali-landed/

[18:58] <lizmat> notable6: weekly reset

[18:58] <notable6> lizmat, Moved existing notes to ‚Äúweekly_2018-12-10T18:58:07Z‚Äù

[19:00] <releasable6> Next release in ‚âà4 days and ‚âà23 hours. 4 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[19:02] <lizmat> moritz: ^^

[19:18] *** Ven`` left
[19:22] *** Ven`` joined
[19:22] *** Ven`` left
[19:41] <lucasb> I saw these recent issues labeled with @LARRY and an idea occurred me. We all would like his presence all the time, but he is not always available. So, unfortunately, seeing that label gives me the unconscious feeling that these are the issues that will never be dealt with.

[19:42] <lucasb> What the label is used for? Design decisions? So, can that label be renamed to "design-decisions" so that you, the language design team, can make decisions on those issues?

[20:02] <lizmat> well, Larry by himself is $LARRY, that's why the label is @LARRY  :-)

[20:02] <lizmat> but yes, perhaps we should be more assertive on these matters

[20:03] <lizmat> and renaming the label might be a first step

[20:03] <lucasb> wow, #WeAreAllLarries :)

[20:03] <lizmat> .oO( I am Spartacus! )  

[20:06] *** robertle left
[20:22] *** cognominal left
[20:23] *** cognominal joined
[20:24] *** p6bannerbot sets mode: +v cognominal

[20:28] *** cognominal left
[20:30] <AlexDaniel> lucasb: I agree that it should be renamed

[20:30] <gfldex> I got a 7% speed up with my json-munch-benchmark from about 2 weeks ago.

[20:30] <AlexDaniel> that's not the first time I see that question, yes it's easier to just rename it than explain every time

[20:30] <gfldex> More of the same please! :)

[20:41] *** robertle joined
[20:42] *** p6bannerbot sets mode: +v robertle

[21:01] *** cognominal joined
[21:02] *** p6bannerbot sets mode: +v cognominal

[21:17] <Geth> ¬¶ nqp/master: 6 commits pushed by (Pawe≈Ç Murias)++

[21:17] <Geth> ¬¶ nqp/master: bedbd44f0e | [js] Add missing /*await*/s

[21:17] <Geth> ¬¶ nqp/master: 74c31e2103 | [js] Migrate typeObject_ to $$typeObject

[21:17] <Geth> ¬¶ nqp/master: f776e58306 | [js] Migrate _STable to $$STable

[21:17] <Geth> ¬¶ nqp/master: cb5eeaa9f2 | [js] Rename _SC to $$SC

[21:17] <Geth> ¬¶ nqp/master: f89a82892d | [js] Use $$ prefix instead of __ instead of knowhow data

[21:17] <Geth> ¬¶ nqp/master: 657e1695a3 | [js] Simplify code by removing unused method

[21:17] <Geth> ¬¶ nqp/master: review: https://github.com/perl6/nqp/compare/176960303ff1...657e1695a36e

[21:24] <moritz> lizmat: tweeted

[21:25] <lizmat> moritz++

[21:33] <Geth> ¬¶ roast: 27476f9f2e | (Elizabeth Mattijsen)++ | S12-introspection/attributes.t

[21:33] <Geth> ¬¶ roast: Add tests for R#2521

[21:33] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/27476f9f2e

[21:39] <timotimo> jnthn: i'm not sure what the safe way would be to find the right $tap object in the exception handler for LAST inside !run-supply-code; could it be it should really go somewhere else instead?

[21:46] <timotimo> oh, !run-supply-code is actually called by the block inside add-whenever, and that has the $tap available

[21:48] <jnthn> Dunno, I'm way too tired to look at that :)

[21:51] <timotimo> that's fair :)

[21:51] <timotimo> i'll have to manually figure out if there's phasers for LAST inside the whenever block, right?

[21:58] <jnthn> Guess so

[21:59] <jnthn> Well, we must run them somewhere :)

[22:01] <timotimo> aye

[22:02] <timotimo> well, anyway, right now it's misbehaving :D

[22:09] <Geth> ¬¶ nqp: b4de55eda6 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[22:09] <Geth> ¬¶ nqp: Document the new readint/writeint ops

[22:09] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/b4de55eda6

[22:10] <lizmat> nine: I assume you did not implement the view/viewdim ops, right ?

[22:10] <timotimo> don't think so

[22:12] <nine> no

[22:24] *** robertle left
[22:47] *** cognominal left
[22:48] *** cognominal joined
[22:49] *** p6bannerbot sets mode: +v cognominal

[22:54] *** cognomin_ joined
[22:54] <Geth> ¬¶ rakudo: 890d628a24 | (Timo Paulssen)++ | src/core/Supply.pm6

[22:54] <Geth> ¬¶ rakudo: Support "last" And "LAST" In Whenever Blocks

[22:54] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/890d628a24

[22:55] <timotimo> jnthn: committed :)

[22:55] *** p6bannerbot sets mode: +v cognomin_

[22:57] <jnthn> timotimo: Cool. Remember tests ;)

[22:57] *** cognominal left
[22:58] <timotimo> hum, "tests", what was that again ...

[22:58] *** cognomin_ left
[23:01] <jnthn> sleep &

[23:01] <evalable6> jnthn, rakudo-moar 890d628a2: OUTPUT: ¬´Use of uninitialized value of type Callable in numeric context‚ê§  in block <unit> at /tmp/T‚Ä¶¬ª

[23:01] <evalable6> jnthn, Full output: https://gist.github.com/6233b79f46e6a3beb6420821bcce405a

[23:02] <timotimo> :D

[23:04] <timotimo> we'll possibly want to support redo too at some point?

[23:14] *** cognominal joined
[23:14] *** p6bannerbot sets mode: +v cognominal

