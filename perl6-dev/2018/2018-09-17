[00:02] * AlexDaniel 💤

[00:05] <samcv> does it make sense to change "Can not" to Cannot in one of our error messages?

[00:05] <samcv> Can not decode a utf-8 buffer as if it were $encoding

[00:13] *** lizmat left
[00:14] *** lizmat joined
[00:15] *** p6bannerbot sets mode: +v lizmat

[00:19] <MasterDuke> samcv: fwiw, in moarvm, there are way more "cannot" than "can not"

[00:21] <samcv> yeah

[00:23] *** clinth9 joined
[00:26] *** Kaiepi left
[00:27] *** Kaiepi joined
[00:28] *** p6bannerbot sets mode: +v Kaiepi

[00:28] *** clinth9 left
[01:12] <Geth> ¦ roast: 903d39546f | (Zoffix Znet)++ | 2 files

[01:12] <Geth> ¦ roast: Add APPENDIX 3: Older Specs

[01:12] <Geth> ¦ roast: 

[01:12] <Geth> ¦ roast: For tests covering bug fixes and stuff in features that

[01:12] <Geth> ¦ roast: are deprecated in current version of the spec

[01:12] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/903d39546f

[01:13] <Geth> ¦ rakudo: 0a45ffbc67 | (Zoffix Znet)++ | t/spectest.data

[01:13] <Geth> ¦ rakudo: Add APPENDICES/A03-older-specs/01-misc.t to list of test files

[01:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0a45ffbc67

[01:15] <Geth> ¦ roast: 1fefe0a255 | (Zoffix Znet)++ | 2 files

[01:15] <Geth> ¦ roast: [v6.d REVIEW] Appendicise "-" magic open string cover tests

[01:15] <Geth> ¦ roast: 

[01:15] <Geth> ¦ roast: This feature is deprecated in 6.d

[01:15] <Geth> ¦ roast: 

[01:15] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/60a7a88e4

[01:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1fefe0a255

[01:16] <Geth> ¦ roast: 56c2d19944 | (Zoffix Znet)++ | 2 files

[01:16] <Geth> ¦ roast: [v6.d REVIEW] Appendicise slurp on '-' path

[01:16] <Geth> ¦ roast: 

[01:16] <Geth> ¦ roast: This feature is deprecated in 6.d

[01:16] <Geth> ¦ roast: 

[01:16] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/60a7a88e4

[01:16] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/56c2d19944

[01:29] *** epony left
[01:44] *** ZzZombo left
[01:45] *** travis-ci joined
[01:45] *** p6bannerbot sets mode: +v travis-ci

[01:45] <travis-ci> Rakudo build errored. Zoffix Znet 'Add APPENDICES/A03-older-specs/01-misc.t to list of test files'

[01:45] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/429377697 https://github.com/rakudo/rakudo/compare/a4db33e72b14...0a45ffbc6771

[01:45] *** travis-ci left
[01:45] <buggable> [travis build above] ✓ All failures are due to: timeout (1 failure).

[02:22] *** tonsofpcs6 joined
[02:26] *** tonsofpcs6 left
[02:33] *** ZzZombo joined
[02:33] *** p6bannerbot sets mode: +v ZzZombo

[02:48] *** Bahhumbug19 joined
[02:50] *** Bahhumbug19 left
[03:08] *** sockspls24 joined
[03:09] *** sockspls24 left
[03:20] *** FenJai_ joined
[03:21] *** FenJai_ left
[03:41] *** GeekShadow13 joined
[03:42] *** GeekShadow13 left
[04:58] *** robertle left
[05:25] *** STKJasper joined
[05:29] *** STKJasper left
[05:45] *** AlexDaniel left
[06:35] *** patrickb joined
[06:35] *** p6bannerbot sets mode: +v patrickb

[06:56] *** robertle joined
[06:57] *** p6bannerbot sets mode: +v robertle

[06:59] *** epony joined
[06:59] *** p6bannerbot sets mode: +v epony

[07:18] <[Tux]> Rakudo version 2018.08-109-g0a45ffbc6 - MoarVM version 2018.08-85-gadce51fb8

[07:18] <[Tux]> csv-test-xs-20      0.426 -  0.432

[07:18] <[Tux]> csv-ip5xs           0.910 -  0.929

[07:18] <[Tux]> test-t --race       0.938 -  0.963

[07:18] <[Tux]> test-t              2.059 -  2.102

[07:18] <[Tux]> csv-ip5xs-20        7.477 -  7.774

[07:18] <[Tux]> test                8.722 -  8.806

[07:18] <[Tux]> test-t-20 --race   12.490 - 12.606

[07:18] <[Tux]> csv-parser         24.519 - 24.677

[07:18] <[Tux]> test-t-20          35.860 - 37.292

[07:37] *** AlexDaniel joined
[07:37] *** p6bannerbot sets mode: +v AlexDaniel

[08:18] *** kevin-brown14 joined
[08:23] *** kevin-brown14 left
[08:25] *** Ven` joined
[08:26] *** p6bannerbot sets mode: +v Ven`

[08:35] <AlexDaniel> weekly: reportable https://gist.github.com/2c1d0dbb2955715584d83483c1090dce

[08:35] <notable6> AlexDaniel, Noted!

[08:47] <AlexDaniel> weekly: zef too slow? Maybe it's possible to make it faster: https://github.com/ugexe/zef/issues/272

[08:47] <notable6> AlexDaniel, Noted!

[08:51] <AlexDaniel> weekly: AlexDaniel worked on improving toaster to make things faster and more useful (failing modules are now bisected automatically). Still WIP, but we will see how it runs in the next weekly. In the process Whateverable got a noticeable refactor to make parts of it reusable.

[08:51] <notable6> AlexDaniel, Noted!

[10:00] <dogbert2> .

[10:02] *** ggoebel left
[10:04] *** ZzZombo left
[10:09] *** lizmat left
[10:17] *** ggoebel joined
[10:18] *** p6bannerbot sets mode: +v ggoebel

[10:21] *** lizmat joined
[10:22] *** p6bannerbot sets mode: +v lizmat

[10:26] *** dogbert11 joined
[10:27] *** p6bannerbot sets mode: +v dogbert11

[10:37] <lizmat> m: @a[999999999999999999999999999999] = 42; say @a.elems

[10:37] <camelia> rakudo-moar 0a45ffbc6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '@a' is not declared␤at <tmp>:1␤------> 3<BOL>7⏏5@a[999999999999999999999999999999] = 42;␤»

[10:38] <lizmat> use Array::Sparse; my @a is Array::Sparse; @a[999999999999999999999999999999] = 42; say @a.elems  # 1000000000000000000000000000000

[10:38] <lizmat> :-)

[10:54] *** pyrimidi_ joined
[10:54] *** p6bannerbot sets mode: +v pyrimidi_

[10:54] <Geth> ¦ rakudo: lizmat self-assigned Missing API functionality on Array https://github.com/rakudo/rakudo/issues/2288

[10:58] *** MasterDuke left
[10:59] *** brrt joined
[11:00] *** p6bannerbot sets mode: +v brrt

[11:03] *** ericP6 joined
[11:09] *** ericP6 left
[11:21] <AlexDaniel> m: my @a[999999999999999999999999999999] = 42; say @a.elems

[11:21] <camelia> rakudo-moar 0a45ffbc6: OUTPUT: «Illegal dimension in shape: 999999999999999999999999999999. All dimensions must be integers bigger than 0␤  in block <unit> at <tmp> line 1␤␤»

[11:23] *** Zoffix joined
[11:23] *** p6bannerbot sets mode: +v Zoffix

[11:23] *** ZzZombo joined
[11:23] *** p6bannerbot sets mode: +v ZzZombo

[11:23] *** brrt left
[11:23] <Zoffix> .tell jnthn FWIW there are 4 @LARRY 6.d Issues that could use a comment: https://github.com/rakudo/rakudo/issues?q=is%3Aopen+is%3Aissue+label%3A%226.d+review%22+label%3A%40LARRY  (also there's a question for you on https://github.com/rakudo/rakudo/issues/2286 about $!reified)

[11:23] <yoleaux> Zoffix: I'll pass your message to jnthn.

[11:24] *** brrt joined
[11:25] *** p6bannerbot sets mode: +v brrt

[11:26] <lizmat> m: my @a; @a[999999999999999999999999999999] = 42; say @a.elems   # AlexDaniel 

[11:26] <camelia> rakudo-moar 0a45ffbc6: OUTPUT: «Cannot unbox 100 bit wide bigint into native integer␤  in block <unit> at <tmp> line 1␤␤»

[11:31] *** Zoffix left
[11:36] <lizmat> jnthn: do you know a HLL way to find out if something is a container?

[11:46] *** Zoffix joined
[11:46] *** p6bannerbot sets mode: +v Zoffix

[11:46] <Zoffix> huggable: HLL iscont

[11:46] <huggable> Zoffix, say $v.VAR ~~ Scalar|Proxy ?? "conted" !! "deconted"

[11:47] <Zoffix> lizmat: that's one way that I know of ^

[11:52] * lizmat thought of "it.VAR.^name ne it.^name"

[11:54] <lizmat> this also handles IntLexRef

[11:54] <lizmat> m: my int $a; sub a(\a) { dd $a.VAR.^name }; a $a

[11:54] <camelia> rakudo-moar 0a45ffbc6: OUTPUT: «"IntLexRef"␤»

[12:06] <Zoffix> ah, cool

[12:07] <Zoffix> m: sub is-cont(\a) { so a.VAR.^name eq a.^name }; my $a; dd is-cont $a

[12:07] <camelia> rakudo-moar 0a45ffbc6: OUTPUT: «Bool::False␤»

[12:07] <Zoffix> doesn't seem to work here

[12:07] <Zoffix> oh, is my conditional upsidedown

[12:08] <Zoffix> m: use nqp; my int $a; dd nqp::iscont($a)

[12:08] <camelia> rakudo-moar 0a45ffbc6: OUTPUT: «1␤»

[12:08] <Zoffix> m: sub is-cont(\a) { so a.VAR.^name ne a.^name }; my $a = 42; dd is-cont $a

[12:08] <camelia> rakudo-moar 0a45ffbc6: OUTPUT: «Bool::True␤»

[12:08] <Zoffix> m: sub is-cont(\a) { so a.VAR.^name ne a.^name }; my int $a = 42; dd is-cont $a

[12:08] <camelia> rakudo-moar 0a45ffbc6: OUTPUT: «Bool::False␤»

[12:08] <Zoffix> lizmat: doesn't seem to match what `nqp::iscont` does for natives

[12:09] <Zoffix> huggable: HLL iscont :is: say $v.VAR ~~ Scalar|Proxy ?? "conted" !! "deconted"       or     sub is-cont(\a) { so a.VAR.^name ne a.^name };

[12:09] <huggable> Zoffix, Added HLL iscont as say $v.VAR ~~ Scalar|Proxy ?? "conted" !! "deconted"       or     sub is-cont(\a) { so a.VAR.^name ne a.^name };

[12:09] *** Zoffix left
[12:09] <lizmat> well, for my purpose I needed to know if I can assign to it having its own container

[12:22] *** robertle left
[12:33] *** pmurias joined
[12:33] *** p6bannerbot sets mode: +v pmurias

[12:35] *** TisonKun joined
[12:35] *** p6bannerbot sets mode: +v TisonKun

[12:41] *** AlexDaniel left
[13:12] *** dogbert11 left
[13:12] *** robertle joined
[13:13] *** p6bannerbot sets mode: +v robertle

[13:25] *** aldum12 joined
[13:25] *** TisonKun left
[13:30] *** aldum12 left
[13:30] *** TisonKun joined
[13:30] *** p6bannerbot sets mode: +v TisonKun

[14:01] *** rascul4 joined
[14:02] *** rascul4 left
[14:22] *** brrt left
[14:22] *** brrt joined
[14:23] *** p6bannerbot sets mode: +v brrt

[14:28] *** jesusaur1 joined
[14:29] *** jesusaur1 left
[14:45] *** taiyu25 joined
[14:49] *** taiyu25 left
[14:52] *** mbarrin23 joined
[14:55] *** mbarrin23 left
[15:09] *** brrt left
[15:10] *** patrickb left
[15:12] *** brrt joined
[15:13] *** p6bannerbot sets mode: +v brrt

[15:17] *** brrt left
[15:35] *** lizmat left
[15:39] *** TisonKun left
[15:50] *** Kaypie joined
[15:50] *** Kaiepi left
[15:51] *** p6bannerbot sets mode: +v Kaypie

[16:11] *** Ven` left
[16:29] *** mattk18 joined
[16:35] *** mattk18 left
[16:42] *** robertle left
[16:54] *** ExtraCrispy left
[17:51] *** epony left
[18:09] *** lizmat joined
[18:10] *** p6bannerbot sets mode: +v lizmat

[18:26] *** ggoebel_ joined
[18:26] *** p6bannerbot sets mode: +v ggoebel_

[18:30] *** pyrimidi_ is now known as pyrimidine

[18:58] *** brrt joined
[18:59] *** p6bannerbot sets mode: +v brrt

[19:07] *** brrt` joined
[19:08] *** p6bannerbot sets mode: +v brrt`

[19:09] *** brrt left
[19:10] *** brrt` is now known as brrt

[19:22] <Geth> ¦ rakudo: 6c93fde85d | (Elizabeth Mattijsen)++ | src/core/Rakudo/Iterator.pm6

[19:22] <Geth> ¦ rakudo: Make sure X handles empty lists on RHS

[19:22] <Geth> ¦ rakudo: 

[19:22] <Geth> ¦ rakudo: Fixes R#2286

[19:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6c93fde85d

[19:22] <synopsebot> R#2286 [open]: https://github.com/rakudo/rakudo/issues/2286 [fudged tests committed] `(1,2) X+ ()` crashes

[19:22] <Geth> ¦ roast: c44518fb8e | (Elizabeth Mattijsen)++ | S03-metaops/cross.t

[19:22] <Geth> ¦ roast: Unfudge test for R#2286

[19:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c44518fb8e

[19:42] *** diakopter joined
[19:43] *** p6bannerbot sets mode: +v diakopter

[19:45] *** ggoebel_ left
[19:46] *** ggoebel left
[19:55] *** travis-ci joined
[19:55] *** p6bannerbot sets mode: +v travis-ci

[19:55] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Make sure X handles empty lists on RHS

[19:55] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/429723048 https://github.com/rakudo/rakudo/compare/0a45ffbc6771...6c93fde85da0

[19:55] *** travis-ci left
[19:58] *** ggoebel_ joined
[19:59] *** p6bannerbot sets mode: +v ggoebel_

[20:45] <lizmat> notable6: weekly

[20:45] <notable6> lizmat, 13 notes: https://gist.github.com/97248d50de4529864d975b4c172c4848

[20:47] *** dct joined
[20:47] *** p6bannerbot sets mode: +v dct

[21:01] <lizmat> notable6: reset weekly

[21:01] <notable6> lizmat, Moved existing notes to “weekly_2018-09-17T21:01:48Z”

[21:04] *** robertle joined
[21:04] *** brrt left
[21:05] *** p6bannerbot sets mode: +v robertle

[21:21] *** vispillo5 joined
[21:22] *** pmurias left
[21:26] *** pmurias joined
[21:26] *** p6bannerbot sets mode: +v pmurias

[21:26] *** vispillo5 left
[21:36] *** AlexDaniel joined
[21:36] *** p6bannerbot sets mode: +v AlexDaniel

[21:36] *** zjmc_12 joined
[21:37] *** AlexDaniel left
[21:41] *** zjmc_12 left
[21:46] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/09/17/2018-38-three-versus-six/

[21:49] *** dct left
[21:51] <samcv> lizmat++

[21:53] <sjn> lizmat++ #weekly #mustread

[21:58] <samcv> finally all the tests i wrote for utf16le and utf16be and utf16 and detecting bom with decode stream are passing \o/

[21:58] <samcv> made sure that .readchars(1) makes sure things don't get unaligned

[22:10] *** pmurias left
[22:15] *** AlexDaniel joined
[22:15] *** p6bannerbot sets mode: +v AlexDaniel

[22:15] <AlexDaniel> lizmat++

[22:20] <timotimo> lizmat++

[22:27] <samcv> so on my utf16 testing branch, `utf16` detects encoding based on BOM, if BOM doesn't exist it uses the machine endianess. If set to utf16be and it sees a big endian BOM, the BOM is ommited. likewise for little endian but for LE BOM

[22:30] <samcv> i still really don't like the byte order marker... i think this is a good way to do it.

[22:31] <samcv> Perl 5 will tell me that a character is illegal if i try to decode the BOM in the wrong endianess (which results in a non-character)

[22:33] <samcv> ah looks like perl 5 will follow the spec and not skip the BOM. i kind of like that way since you are able to store all characters in it

[22:38] <timotimo> i wonder if :keepbom should be a little like :!chomp

[22:39] <timotimo> a program written by someone who doesn't expect to get utf16 (say, maybe they use a heuristic to figure out the right encoding), they might be surprised about the garbage at the beginning of the file

[22:42] *** MasterDuke joined
[22:42] *** p6bannerbot sets mode: +v MasterDuke

[22:42] *** MasterDuke left
[22:42] *** MasterDuke joined
[22:42] *** herbert.freenode.net sets mode: +v MasterDuke

[22:42] *** p6bannerbot sets mode: +v MasterDuke

[22:42] <samcv> i need to see if the noncharacter which is the BOM with endianess reversed is valid in utf16. i mean. you probably shouldn't have it. but if it's not valid period 

[22:49] <samcv> though i suppose dying on reversed BOM character is not as bad as utf8 i feel. because there *are* illegal characters in utf16. namely you can't represent the low surrogates or high surrogates in anyway

[22:56] <TimToady> it was intentionally designed to be invalid when reversed, iirc

[22:57] <TimToady> and I think has been generalized to every plane, such that the *fffe and *ffff are considered invalid

[22:57] <samcv> yeah it has TimToady 

[22:57] <samcv> this whole thing is so messy though!

[22:58] <TimToady> an aBOMination :)

[22:58] <samcv> 10/10 pun

[22:58] *** dct joined
[22:58] *** p6bannerbot sets mode: +v dct

[23:12] <AlexDaniel> samcv: should've started that message with ZERO WIDTH NO-BREAK SPACE

[23:13] <AlexDaniel> foo﻿bar

[23:13] <AlexDaniel> ﻿bar

[23:14] <AlexDaniel> cool, that goes all the way to colabti without issues :)

[23:17] *** briny26 joined
[23:22] *** briny26 left
[23:23] <diakopter> aBOM ☃

[23:32] <MasterDuke> timotimo: did you see my comments in #moarvm last night? i figured out what that error i was getting was from

[23:33] <timotimo> oh, was it a typo'd class name?

[23:34] <MasterDuke> QAST::Something() vs QAST::Something.new()

[23:35] <timotimo> i should have been able to spot that :\

[23:35] <MasterDuke> and then i also had a QAST::WVar instead of QAST::WVal

[23:35] <MasterDuke> the sad thing is it's not the first or even second time i've done that and gone on a long goose chase before realizing what the real problem was

[23:36] <timotimo> yeah :|

[23:36] <timotimo> i've very briefly looked into making that a compile-time error

[23:36] <timotimo> i didn't get it working, and it's been so long ago that i don't know any more what was up

[23:38] <MasterDuke> i know there's less interest in nqp errors, but wow, i've lost some time to them

[23:39] *** ZzZombo_ joined
[23:39] *** p6bannerbot sets mode: +v ZzZombo_

[23:40] *** ZzZombo left
[23:40] *** ZzZombo_ is now known as ZzZombo

[23:44] *** dct left
