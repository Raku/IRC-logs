[00:00] <timotimo> only a ton of "TODO passed" messages

[00:05] <AlexDaniel> alright then

[00:16] <travis-ci> Rakudo build passed. Timo Paulssen 'teach X::Syntax::Number::LiteralType about natives

[00:16] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/341675265 https://github.com/rakudo/rakudo/compare/1dc1f038f1df...e930e2537f87

[00:17] <samcv> timotimo: i agree. a make target would be great

[00:56] <travis-ci> Rakudo build passed. Timo Paulssen 'missed the case where Rat was assigned to int'

[00:56] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/341678887 https://github.com/rakudo/rakudo/compare/e930e2537f87...63a1d25ac672

[07:26] <samcv> hmm it seems doing the XOR trick to swap variables is faster than doing (@a[$i], @a[$j]) = (@a[$j], @a[$i]);

[07:27] <samcv> did not expect that

[07:28] <samcv> though using a temp variable is slightly faster than doing the XOR method

[08:04] <[Tux]> Rakudo version 2018.01-199-g63a1d25ac - MoarVM version 2018.01-91-g1c79ca35d

[08:04] <[Tux]> csv-test-xs-20      0.459 -  0.472

[08:04] <[Tux]> csv-ip5xs           0.821 -  0.950

[08:04] <[Tux]> test-t --race       1.093 -  1.114

[08:04] <[Tux]> test-t              2.543 -  2.578

[08:04] <[Tux]> csv-ip5xs-20        7.522 -  7.877

[08:05] <[Tux]> test                9.152 -  9.270

[08:05] <[Tux]> csv-parser         11.522 - 12.752

[08:05] <[Tux]> test-t-20 --race   16.096 - 16.739

[08:05] <[Tux]> test-t-20          46.807 - 47.667

[08:43] <psch> o/

[08:55] <psch> as suspected, making each p6bindsig_no_autothread label unique by giving them IDs fixes GH #1526

[08:56] <psch> i'm not quite sure it's the right fix though -- the fact that they didn't need to be unique makes me assume that we only want one p6bindsig call per QB (i.e. java method)

[08:56] * psch adds that to the ticket as well

[09:15] <psch> the underlying issue seems to be that we emit multiple p6bindsig declarations in a single InstructionList, and p6bindsig declares a Label with a constant name, which thus throws the redeclaration

[09:15] <psch> s/emit/apparently emit/

[09:20] <psch> GH #1431 is apparently JDK9-specific, which we don't have on hack yet

[09:52] <psch> also, nqp/docs/jvminterop-goals.md contains POD

[09:52] <psch> this is a bit silly, seeing as it's named .md :l

[10:17] <jnthn> huh, why'd one block ever have more than one p6bindsig, given signatures are per block?

[10:21] <psch> jnthn: i haven't looked deeply into what we emit during codegen, but considering we get a redecl for a label name for a label defined inside p6bindsig this seems to be what's happening

[10:21] <psch> https://github.com/rakudo/rakudo/issues/1526 is the issue fwiw

[10:22] <jnthn> Don't have time to look now, alas, but my point is that it sounds like we're generating a bad QAST tree in the first place

[10:23] <psch> right

[10:24] <psch> the change that brought this about was about Whatever currying, but i'd guess that it's a difference in MAST vs JAST that we only now see

[10:24] <psch> don't really have time to look deeply into it right now either unfortunately

[10:28] <jnthn> I suspect the MAST code-gen is just more forgiving so lets it pass

[10:43] <psch> i can't find the MAST::Label declaration, but i don't see us giving it a name (or anything really) in p6bindsig

[10:44] <psch> but i have no clue how labels work on moar... :)

[10:51] <jnthn> I don't think p6bindsig compiles into anything involving a label on moar

[12:23] <tbrowder> \o good [AP]M all

[12:24] <tbrowder> it looks like the stderr stream on the jvm has some problems

[12:26] <tbrowder> adding an nqp spawnprocasync test for stderr works on moarvm but not on jvm

[12:28] <tbrowder> it looks like jvm issues are filed on github:perl6 so i will file there unless told otherwise

[12:33] <psch> huh, nqp::sayfh is gone?

[12:33] <psch> well, from nqp-m at least it seems

[12:33] <psch> r: use nqp; nqp::sayfh(nqp::getstderr(), "foo")

[12:33] <camelia> rakudo-jvm a92950fb4: OUTPUT: «foo␤»

[12:33] <camelia> ..rakudo-moar 63a1d25ac: OUTPUT: «===SORRY!===␤No registered operation handler for 'sayfh'␤»

[12:38] <Zoffix> "Need at least JVM 1.8 (got java version "1.7.0_151" what package do I neeed to install to get better version?

[12:38] <Zoffix> on debian/buntu/bodhi

[12:39] <psch> Zoffix: openjdk-8-jdk i think?

[12:40] <Zoffix> hm, all I got is -7-

[12:40] * Zoffix tries another VM

[12:40] <psch> https://packages.debian.org/de/sid/openjdk-8-jdk

[12:40] <psch> i haven't used debian in quite a while...

[12:41] <Zoffix> this box is bodhi linux, which is a fork of ubuntu, (which is a fork of debian). I guess its repos just lag behind

[12:42] <psch> maybe there's a ppa somewhere?

[12:42] <psch> or yeah, just use a VM with a different *nix

[12:42] <Zoffix> yeah, my debian VM got -8- in it

[12:43] <ilmari> or the -headless version, if you dont need gui stuff

[12:45] <ilmari> stretch (debian 9), released last june, has jdk 8. it's also in backports for debian 8 (jessie)

[12:47] <ilmari> ubuntu xenial (16.04 LTS) also has jdk8

[12:48] <Zoffix> lsb_release tells me my bodhi is based on buntu trusty

[13:48] <tbrowder> .tell AlexDaniel My nqp PR #414 is now passing all checks after a second commit.  Ready for merge if it satisfies you.

[13:48] <yoleaux> tbrowder: I'll pass your message to AlexDaniel.

[13:49] <timotimo> psch: yeah, string-oriented output has gone from moar, we only do byte-oriented output now. there's a "note" sub, though, that will take care of encoding a string and outputting it for you

[14:04] <Zoffix> Working on JVM backend makes me feel like a buddhist monk.

[14:05] <Zoffix> ZofBot: "We cannot learn real patience and tolerance from a guru or a friend. They can be practiced only when we come in contact with the JVM backend. According to Shantideva, JVM backend bugs are really good for us as we can learn a lot from them and build our inner strength."—Dalai Lama

[14:05] <ZofBot> Zoffix, moar/install/share/nqp/lib/QRegex

[14:05] <Zoffix> Tho I'm fairly sure I got I fix for R#1526

[14:05] <synopsebot> R#1526 [open]: https://github.com/rakudo/rakudo/issues/1526 [JVM] [JVM] build broken after re-design of Whatever currier

[14:15] <Geth> ¦ rakudo: 30b82b9823 | (Timo Paulssen)++ | src/core/Exception.pm

[14:15] <Geth> ¦ rakudo: LiteralType: make sure natives are lowercased

[14:15] <Geth> ¦ rakudo:

[14:15] <Geth> ¦ rakudo: while at the same time not suggesting "num" or "int"

[14:15] <Geth> ¦ rakudo: as methods to call for the coercion.

[14:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/30b82b9823

[14:36] <Zoffix> ZOFFLOP: t/spec/S10-packages/basic.t

[14:41] <Zoffix> weird. `make some/test/file` works fine (on JVM backend), but `make spectest` all files die with "Parse errors: No plan found.."

[14:41] <psch> Zoffix: something about parallelization, TEST_JOBS=1 does help

[14:43] <psch> timotimo: thanks for the info.  carrying that change over to nqp-j probably wants some more consideration wrt IO i assume..?

[14:43] <Geth> ¦ rakudo: f2188e45fb | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[14:43] <Geth> ¦ rakudo: Fix whatever currier on JVM

[14:43] <Geth> ¦ rakudo:

[14:43] <Geth> ¦ rakudo: Fixes https://github.com/rakudo/rakudo/issues/1526 R#1526

[14:43] <Geth> ¦ rakudo:

[14:43] <Geth> ¦ rakudo: When we gut a WhateverCode to relocate its bits into a chained

[14:43] <Geth> ¦ rakudo: curry, don't copy over the p6bindsig op.

[14:43] <synopsebot> R#1526 [open]: https://github.com/rakudo/rakudo/issues/1526 [JVM] [JVM] build broken after re-design of Whatever currier

[14:43] <Geth> ¦ rakudo:

[14:43] <Geth> ¦ rakudo: On MoarVM we use the VM binder and the curry doesn't go through

[14:43] <Geth> ¦ rakudo: "need full binder" path that pushes this op into declarations,

[14:44] <Geth> ¦ rakudo: which is why the crash in the ticket was never observed on MoarVM.

[14:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f2188e45fb

[14:44] <Zoffix> psch: ahh... yeah, I got TEST_JOBS=30

[14:56] <Geth> ¦ rakudo: 7a15d9de27 | (Zoffix Znet)++ | tools/build/Makefile-JVM.in

[14:56] <Geth> ¦ rakudo: Remove trailing whitespace

[14:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7a15d9de27

[14:57] <Geth> ¦ rakudo: 0d0fe79341 | (Zoffix Znet)++ | 3 files

[14:57] <Geth> ¦ rakudo: Test whatever curries with 3+ args do not duplicate p6bindsig op

[14:57] <Geth> ¦ rakudo:

[14:57] <Geth> ¦ rakudo: https://github.com/rakudo/rakudo/issues/1526

[14:57] <Geth> ¦ rakudo: Rakudo fix: https://github.com/rakudo/rakudo/commit/f2188e45fb

[14:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0d0fe79341

[15:04] <lizmat> commute to NR-PM meeting&

[20:59] <lizmat> decommute&

[21:15] <Geth> ¦ nqp: 18fc370a0f | (Jeremy Studer)++ | src/vm/js/Operations.nqp

[21:15] <Geth> ¦ nqp: [js] Allow 'chain' op to use child as callee

[21:15] <Geth> ¦ nqp:

[21:15] <Geth> ¦ nqp: Modify the 'chain' op to allow the option to use the first child as the

[21:15] <Geth> ¦ nqp: callee. Before the name of the op served as the operator sub and the

[21:15] <Geth> ¦ nqp: children the operands. This modification makes it so that, if there is

[21:15] <Geth> ¦ nqp: no name provided to the chain, child 0 serves as the operator and

[21:15] <Geth> ¦ nqp: children 1 and 2 the operands.

[21:15] <Geth> ¦ nqp: <…commit message has 5 more lines…>

[21:16] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/18fc370a0f

[21:16] <Geth> ¦ nqp: 641fafd8b6 | (Paweł Murias)++ (committed using GitHub Web editor) | src/vm/js/Operations.nqp

[21:16] <Geth> ¦ nqp: Merge pull request #390 from jstuder-gh/js_neg_chaining

[21:16] <Geth> ¦ nqp:

[21:16] <Geth> ¦ nqp: Rakudo Issue 1304: [js] Allow 'chain' op to use child as callee

[21:16] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/641fafd8b6

[21:23] * [Coke] boggles to see a non-pmurias commit to nqp-js. woot!

[21:23] <[Coke]> that's awesome!

[21:27] <Geth> ¦ nqp/master: 13 commits pushed by pmurias++

[21:27] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/641fafd8b6...f27d17ca75

[21:28] <pmurias> [Coke]: I had some in the past ;) , I'm not sure how to encourage them more

[21:31] <japhb> pmurias: It might help to give people an idea of where the current js implementation is still lacking, and what you are currently working on, so they can either choose to help you on your current task, or stay out of your way by working somewhere else that scratches their particular itch..

[21:31] <[Coke]> pmurias: any thoughts on webassembly? does it make sense to go through JS to get there, or should we consider another nqp backend?

[21:33] <japhb> pmurias: For a while it looked like you were concentrating on encodings and string manipulation / regex -- but the last set of commits look like general cleanups.

[21:35] <pmurias> japhb: I'll try to write something up tommorow when I'm fresher and more eloquent

[21:35] <pmurias> [Coke]: IMHO webassembly needs to evolve a fair bit before it becomes a sensible Perl 6 target

[21:37] <pmurias> [Coke]: the last time I checked it was super C/C++/Rust focused offering just an abstracted subset of machine instruction sets

[22:10] <Geth> ¦ nqp: d3794d7a15 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[22:10] <Geth> ¦ nqp: [MoarVM Bump] Brings 5 commits

[22:10] <Geth> ¦ nqp:

[22:10] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.01-89-ga01cdb449...2018.01-94-gc7774e37d

[22:10] <Geth> ¦ nqp: c7774e37d [Spesh] Always split if_o into istrue and if_i

[22:10] <Geth> ¦ nqp: 3a100179c Merge pull request #802 from MasterDuke17/patch-1

[22:10] <Geth> ¦ nqp: 0db0645f5 Fix typos in comments

[22:10] <Geth> ¦ nqp: 1c79ca35d set test jobs back to 1

[22:10] <Geth> ¦ nqp: c512dce8e travis: use 2 cores for compilation and tests

[22:10] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/d3794d7a15

[22:10] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.01-89-ga01cdb449...2018.01-94-gc7774e37d

[22:11] <Geth> ¦ rakudo: beaad7b979 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[22:11] <Geth> ¦ rakudo: [NQP Bump] Brings 28 commits

[22:11] <Geth> ¦ rakudo:

[22:11] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.01-68-g03bb36a3b...2018.01-96-gd3794d7a1

[22:11] <Geth> ¦ rakudo: d3794d7a1 [MoarVM Bump] Brings 5 commits

[22:11] <Geth> ¦ rakudo: f27d17ca7 [js] Minor cleanup

[22:11] <Geth> ¦ rakudo: 9a53d1d6f Test 3 argument nqp::chain

[22:11] <Geth> ¦ rakudo: ff9d008d2 Test flattening of natively typed arrays

[22:11] <Geth> ¦ rakudo: <…commit message has 24 more lines…>

[22:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/beaad7b979

[22:11] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.01-68-g03bb36a3b...2018.01-96-gd3794d7a1

[23:33] <pmurias> japhb: the last set of commits was refactoring for a calling convention change I need to do to get some test to pass
