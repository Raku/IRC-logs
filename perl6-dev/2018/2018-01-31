[01:09] <tbrowder> AlexDaniel: I looked at one of the diffs that shows misalignment on github but i don’t see it on my local host. Let me get the exact line number of the file src/NQP/Actions.nqp...

[01:11] <tbrowder> line 257...

[01:12] <AlexDaniel> ok that one has two tabs

[01:12] <AlexDaniel> where I can see the file after your changes?

[01:12] <AlexDaniel> ah it's still there on github

[01:13] <AlexDaniel> yea, you replaced two tabs with 8 spaces

[01:13] <tbrowder> but the diff on github doesn’t look right to me...

[01:13] <AlexDaniel> when it needed 16 spaces

[01:13] <AlexDaniel> it's indeed not right

[01:14] <AlexDaniel> it's not just the diff, it's the unmodified patch also: https://patch-diff.githubusercontent.com/raw/perl6/nqp/pull/403.patch

[01:14] <AlexDaniel> how many spaces do you see?

[01:15] <AlexDaniel> (not just the visual html diff I meant, surely)

[01:15] <tbrowder> i count 16 spaces

[01:15] <AlexDaniel> how is that possible? :)

[01:15] <AlexDaniel> weird

[01:16] <geekosaur> old is two tabs

[01:16] <geekosaur> new is 8 spaces

[01:17] <geekosaur> at a guess, the original came from an editor that uses 4-space tabs

[01:17] <tbrowder> beats me...maybe here in niceville it’s lala land!

[01:17] <AlexDaniel> .oO( how many people does it take to replace one tab with spaces? )

[01:17] <geekosaur> or possibly passed through one

[01:17] <geekosaur> (this is why tabs are a bad idea in programming: there's no guarantee what you will get. editors, compilers, etc. all have different ideas of what a tab is)

[01:17] <AlexDaniel> geekosaur: why 4…

[01:18] <AlexDaniel> it needs 16 spaces, the editor was assuming 8 per tab

[01:18] <tbrowder> i think i’m wasting my time here...i’ll keep the pr there, there, though, just in case someone can explain what’s going on.

[01:18] <geekosaur> because the editor doesn't have smart indentation and expects the user to use tabs, and 8-space tabs lead to too much indentation

[01:19] <AlexDaniel> but the editor was emacs

[01:19] <AlexDaniel> which by default does mixed tabs and spaces…

[01:19] <AlexDaniel> where each tab is 8 spaces…

[01:19] <AlexDaniel> so it goes

[01:19] <tbrowder> btw, the last time i looked at the particular file i was using vi which clearly shows tabs if they exist.

[01:19] <AlexDaniel> 4 spaces, 1 tab, 1 tab 4 spaces, 2 tabs…

[01:21] <tbrowder> no, you may remember i found my .emacs file was in error, ani fixed it so i reliably get 4 spaces per tab key.

[01:21] * geekosaur notices the most recnet comment explicitly says convert tabs to *4* spaces

[01:21] <tbrowder> anyhoo, vi foes show 16 spaces

[01:21] <AlexDaniel> I was talking about that line before your changes :)

[01:21] <geekosaur> but browsers render them as 8

[01:21] <tbrowder> *shows

[01:21] <geekosaur> unix browsers at least

[01:22] <tbrowder> oh...

[01:22] <geekosaur> so anyway this looks self-inflicted.

[01:22] <geekosaur> 8 is generally most common on unixlikes

[01:23] <tbrowder> i get 12 spaces there

[01:24] <tbrowder> duh, you mean *before* my changes...it’s almost my bedtime...

[01:27] <tbrowder> i put my money on a github diff problem

[01:27] <geekosaur> like I said, the raw diff was two tabs before, 8 spaces after. unix browsers render the two tabs as 16 spaces

[01:38] <AlexDaniel> and the correct indentation on that line is 16 spaces

[01:40] <AlexDaniel> not sure what the rest of the discussion was for when I said this straight away:

[01:40] <AlexDaniel> <AlexDaniel> yea, you replaced two tabs with 8 spaces

[01:40] <AlexDaniel> <AlexDaniel> when it needed 16 spaces

[02:09] <AlexDaniel> squashable6: next

[02:09] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 2 days and ≈7 hours (2018-02-03 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[02:11] <geekosaur> and that was more or less why I jumped in, because there's lots of misunderstandings and differences in what various people *and* programs mean by tab

[02:11] <geekosaur> which is why they're a bad idea in general for programming

[02:21] <tbrowder> AlexDaniel: how should i proceed on the detabify?

[02:22] <AlexDaniel> tbrowder: given the issues, maybe not?

[02:22] <AlexDaniel> not a big deal anyway

[02:22] <AlexDaniel> POD stuff is definitely more important than tabs in the source code :)

[02:22] <tbrowder> i agree, putting it to bed...g’night all

[08:15] <Geth> ¦ rakudo: 671c3d6016 | (Stefan Seifert)++ | 5 files

[08:15] <Geth> ¦ rakudo: Initialize $*PERL during setting compilation to avoid runtime cost

[08:15] <Geth> ¦ rakudo:

[08:15] <Geth> ¦ rakudo: All information provided by $*PERL (most notably rakudo and Perl 6 version)

[08:15] <Geth> ¦ rakudo: can be determined when compiling the setting. By creating the Perl object at

[08:15] <Geth> ¦ rakudo: BEGIN time, we can safe the runtime overhead (most notably when loading the

[08:15] <Geth> ¦ rakudo: first module).

[08:15] <Geth> ¦ rakudo: However at BEGIN time we cannot use most of the string processing code like

[08:15] <Geth> ¦ rakudo: regex matching, so we need to parse the versions using specialized nqp code.

[08:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/671c3d6016

[08:15] <nine> This was....so much harder than expected

[08:16] <Geth> ¦ rakudo: c820e4be17 | (Stefan Seifert)++ | src/core/Backtrace.pm

[08:16] <Geth> ¦ rakudo: Avoid error when throwing error during setting compilation

[08:16] <Geth> ¦ rakudo:

[08:16] <Geth> ¦ rakudo: The unary + operator may not yet be set up correctly, causing a further

[08:16] <Geth> ¦ rakudo: error when trying to report an error.

[08:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c820e4be17

[08:19] <Geth> ¦ rakudo: 00cde17573 | (Stefan Seifert)++ | src/core/CompUnit/PrecompilationUnit.pm

[08:19] <Geth> ¦ rakudo: Micro optimize CompUnit::PrecompilationUnit::deserialize

[08:19] <Geth> ¦ rakudo:

[08:19] <Geth> ¦ rakudo: This avoids costly Str.split and List.STORE. I hope the code is still somewhat

[08:19] <Geth> ¦ rakudo: readable despite losing the variable names. The 4 parts are used for

[08:19] <Geth> ¦ rakudo: initializing named arguments right after anyway.

[08:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/00cde17573

[09:13] <TimToady> jnthn: an update, the leak appears to be from $buf.subbuf(0,$bytes).decode or so; at least, when I decode the buf directly to latin-1 and use substr on that that, it seems to be much more stable so far, but I'm gonna run it overnight and see how it is by morning...

[09:13] <Geth> ¦ rakudo: ed9b287c99 | (Stefan Seifert)++ | src/core/Stash.pm

[09:13] <Geth> ¦ rakudo: Make Stash.merge-symbols a bit faster and the code more clear

[09:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ed9b287c99

[09:30] <AlexDaniel> squashable6: next

[09:30] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 2 days and ≈0 hours (2018-02-03 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:02] <jnthn> morning o/

[10:07] <travis-ci> Rakudo build passed. Stefan Seifert 'Make Stash.merge-symbols a bit faster and the code more clear'

[10:07] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/335531694 https://github.com/rakudo/rakudo/compare/00cde1757359...ed9b287c9910

[11:26] <AlexDaniel> greppable6: I have no idea

[11:26] <greppable6> AlexDaniel, 8 lines, 8 modules: https://gist.github.com/8e313c5e424c24b6a27bce49702d3d6c

[11:27] <AlexDaniel> timotimo: ↑ :)

[11:34] <AlexDaniel> no inline summary for treegrep though

[11:34] <AlexDaniel> because, well… I don't see anybody using that feature :)

[11:34] <AlexDaniel> treegrep: awesome

[11:34] <greppable6> AlexDaniel, https://gist.github.com/abf0fce55a3821af58e3c729c436ac9c

[11:34] <AlexDaniel> well… that was less than awesome :)

[11:34] <AlexDaniel> greppable6: oenthunteohunteou

[11:34] <greppable6> AlexDaniel, Found nothing!

[11:35] <AlexDaniel> treegrep: bad

[11:35] <greppable6> AlexDaniel, https://gist.github.com/dc50016c0b559050c4f817e767295532

[11:56] <lizmat> flying&

[13:43] <|Tux|> Rakudo version 2018.01-65-ged9b287c9 - MoarVM version 2018.01-49-g783a4f07c

[13:43] <|Tux|> csv-test-xs-20      0.454 -  0.527

[13:43] <|Tux|> csv-ip5xs           0.937 -  0.944

[13:43] <|Tux|> test-t --race       1.039 -  1.098

[13:44] <|Tux|> test-t              2.565 -  2.576

[13:44] <|Tux|> test                9.039 -  9.098

[13:44] <|Tux|> csv-ip5xs-20       10.297 - 10.542

[13:44] <|Tux|> csv-parser         11.053 - 11.311

[13:44] <|Tux|> test-t-20 --race   15.316 - 15.662

[13:44] <|Tux|> test-t-20          44.682 - 45.381

[13:49] <Geth> ¦ nqp: 5f7fc969ce | pmurias++ | 3 files

[13:49] <Geth> ¦ nqp: [js] Decoding as utf8-c8

[13:49] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/5f7fc969ce

[13:49] <Geth> ¦ nqp: 4bffb46af3 | pmurias++ | src/vm/js/nqp-runtime/codecs.js

[13:49] <Geth> ¦ nqp: [js] Implement encoding as utf8-c8

[13:49] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/4bffb46af3

[13:49] <Geth> ¦ nqp: 8aea6d7d68 | pmurias++ | t/nqp/082-decode.t

[13:49] <Geth> ¦ nqp: Test encoding and decoding as utf8-c8

[13:49] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/8aea6d7d68

[14:07] <travis-ci> NQP build failed. pmurias 'Test encoding and decoding as utf8-c8'

[14:07] <travis-ci> https://travis-ci.org/perl6/nqp/builds/335628781 https://github.com/perl6/nqp/compare/c14207e44f97...8aea6d7d687f

[14:14] <stmuk> http://pl6anet.org/drop/rakudo-star-2018.01.RC0.dmg

[14:36] <pmurias> (the nqp build fails seems to be because of a concurrency test not a result of js work)

[16:09] <Geth> ¦ rakudo: 72948e8477 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/Perl6/Actions.nqp

[16:09] <Geth> ¦ rakudo: Fix typo in comment

[16:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/72948e8477

[18:54] <Geth> ¦ rpg: 8c46d32edc | (Zoffix Znet)++ (committed using GitHub Web editor) | README.md

[18:54] <Geth> ¦ rpg: Stub repo description

[18:54] <Geth> ¦ rpg:

[18:54] <Geth> ¦ rpg: since people are asking...

[18:54] <Geth> ¦ rpg: review: https://github.com/perl6/rpg/commit/8c46d32edc

[18:57] <AlexDaniel> haha

[18:57] <AlexDaniel> Zoffix++

[19:50] <DrForr> We support military hardware now?

[19:52] <sjn> Rakudo Propelled Grenades!

[20:03] <AlexDaniel> FWIW I tweaked evalable6 a little bit, there's a chance that it will misbehave

[20:03] <AlexDaniel> if so let me know

[20:04] <AlexDaniel> but it should be better

[20:39] <AlexDaniel> squashable6: next

[20:39] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 1 day and ≈13 hours (2018-02-03 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day
