[05:30] <bartolin> .tell MasterDuke regarding the compilation of the setting on jvm: I *think* this workaround I put in a while ago really doesn't help making it faster: https://github.com/perl6/nqp/commit/e73c94f69c (I vaguely remember comparing compile times before and after this patch)

[05:30] <yoleaux> bartolin: I'll pass your message to MasterDuke.

[05:51] <moritz> Zoffix++ # ZofBot GCT

[09:40] <lizmat> Files=1239, Tests=76308, 318 wallclock secs (15.69 usr  5.53 sys + 2191.43 cusr 217.75 csys = 2430.40 CPU)

[09:41] <lizmat> weekly: https://github.com/scriptkitties/perl6-dist-helper/issues/37

[09:41] <notable6> lizmat, Noted!

[11:13] <AlexDaniel> reportable6: 2018-04-16T00:00:00 2018-04-23T00:00:00

[11:13] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[11:14] <reportable6> AlexDaniel, https://gist.github.com/7de3eeed5906f78022d8e3d05011b558

[11:15] <AlexDaniel> weekly: reportable https://gist.github.com/7de3eeed5906f78022d8e3d05011b558

[11:15] <notable6> AlexDaniel, Noted!

[12:04] <Zoffix> With possible approval of CaR Grant on the horizon. Reminder to look over the Work Proposals for Constants and Rationals: https://github.com/rakudo/rakudo/blob/master/docs/archive/constants-type-constraints-proposal-2018-02-10.md   and   https://github.com/rakudo/rakudo/blob/master/docs/archive/2018-03-04--Polishing-Rationals.md  Speak now or forever hold your silence :)

[12:56] <dogbert2_> Zoffix: have you spoken to Larry about it?

[12:57] <Zoffix> dogbert2_: yeah, and after some original comments, I ended up with MidRat type and botmessaged him that I plan to add it. I think he saw those messages but didn't leave any response, so I figured he doesn't have anything against the proposal

[13:00] <Zoffix> That's what the revisions of Rat proposals were about; modifications for TimToady's original comments and the last revision was my changing away from RatStr-as-MidRat because it's not really working out

[13:02] <dogbert2_> Zoffix: are you still happy with what you want to do or have you come up with something different ideas in the meantime, i.e. since the latest draft was written?

[13:02] <dogbert2_> s/something/some/

[13:02] <Zoffix> It's the best version of what I come up with, but I'm not happy with having 3 different Rational types.

[13:04] <Zoffix> I can foresee the winging "Perl 6 has bazillion Numerics! It's so hard"

[13:04] <Zoffix> Well, 5 different Rational types if you include the allomorphs: Rat, RatStr, MidRat, MidRatStr, FatRat

[13:04] <dogbert2_> someone will say that the suggestions are irRational :-)

[13:06] <Zoffix> And I'm slighly bugged that one of the supposed uses of MidRat is to be able to provide high-precision, non-infectous pi and e constants.... but... MidRat is Rational and pi and e are not rational numbers :)

[13:06] <dogbert2_> m: 355 / 113

[13:06] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "/" in expression "355 / 113" in sink context (line 1)␤»

[13:06] <dogbert2_> m: say 355 / 113

[13:06] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «3.141593␤»

[13:08] <Zoffix> m: say 314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172/10**140

[13:08] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «3.141592653589793␤»

[13:09] <dogbert2_> would it be possible to start with the things which does not involve the MidRat, so that you get some extra time to ponder about them?

[13:14] <dogbert2_> btw: when will 2918.04 be out?

[13:14] <dogbert2_> grr, 2018.04

[13:14] <Zoffix> In about 900 years :)

[13:14] <dogbert2_> :)

[13:15] <Zoffix> I think AlexDaniel wants to wait for JVM build to get fixed.

[13:16] <AlexDaniel> yes, but we also don't have a moarvm release yet

[13:16] <Zoffix> AlexDaniel: should it be cut though? I suspect samcv is waiting for a go-ahead from you.

[13:16] <samcv> Zoffix: i will release today

[13:17] <samcv> was busy this weekend so didnt have time to do it then

[13:18] <AlexDaniel> well, at least the changelog should be in place I guess, doing the actual release is much less of a problem

[13:19] <dogbert2_> so there's still time to dig up a new blocker :)

[13:19] <AlexDaniel> heh, yes. Which is nice

[13:19] <Zoffix> I think the proto stuff should be reverted.

[13:21] <AlexDaniel> Zoffix: here's a crazy idea… can't we just revert only→multi changes also? That would throw us like 2 months back, but at least no regressions to existing code

[13:21] <Zoffix> It's a bit harder, because IIRC lizmat also made a lot of optimizations in the process that in some way rely on multiness.

[13:22] <Zoffix> But I was thinking of fixing the .count issue by taking care of the things that care about count.

[13:22] <Zoffix> Rather than messing with all the protos and requiring that users know all of our routines or declare explicit protos all the time.

[13:23] <Zoffix> Well, I guess it's a bit of a case at the moment too;

[13:23] * AlexDaniel rereads R#1739

[13:24] <synopsebot> R#1739 [closed]: https://github.com/rakudo/rakudo/issues/1739 [⚠ blocker ⚠] Unintended consequences of converting routines from `only` to `multi`

[13:24] <Zoffix> c: 2018.03 multi copy ($table, $other-table {}

[13:24] <committable6> Zoffix, ¦2018.03: «04===SORRY!04=== Error while compiling /tmp/XXDSmnytel␤Missing block␤at /tmp/XXDSmnytel:1␤------> 03multi copy ($table, $other-table 08⏏04{}␤ «exit code = 1»»

[13:24] <Zoffix> c: 2018.03 multi copy ($table, $other-table) {}

[13:24] <committable6> Zoffix, ¦2018.03: «»

[13:25] <Zoffix> c: 2018.03 multi copy ($table, $other-table) {}; copy 42, 100

[13:25] <committable6> Zoffix, ¦2018.03: «Failed to copy '/home/bisectable/git/whateverable/42' to '/home/bisectable/git/whateverable/100': Failed to copy file: no such file or directory␤  in block <unit> at /tmp/GhgUrCPJTZ line 1␤␤ «exit code = 1»»

[13:26] <Zoffix> c: 2018.03 .say for &copy.candidates».signature

[13:26] <committable6> Zoffix, ¦2018.03: «($from, $to, :$createonly)␤»

[13:26] <Zoffix> Looks like coercers don't show up in Signature's gist. The $from/$to are actually `IO()`

[13:27] <stmuk_> releasable6: status

[13:27] <releasable6> stmuk_, Next release will happen when it's ready. 0 blockers. 262 out of 263 commits logged

[13:27] <releasable6> stmuk_, Details: https://gist.github.com/88404ff2eb46e2c876eba59ecdb45092

[13:27] <Zoffix> c: 2018.03 multi copy (IO() $table, IO() $other-table) {}; copy 42, 100

[13:27] <committable6> Zoffix, ¦2018.03: «Failed to copy '/home/bisectable/git/whateverable/42' to '/home/bisectable/git/whateverable/100': Failed to copy file: no such file or directory␤  in block <unit> at /tmp/Sby1h_Lp5j line 1␤␤ «exit code = 1»»

[13:28] <Zoffix> Don't even know why the core multi gets chosen instead of complaining there's an ambiguity :S

[13:29] <Zoffix> But in either case, that kinda shows that even before the proto changes it was easy for users to step onto the toes of core multies, so I guess my main argument against proto changes doesn't quite stand up.

[13:29] <Zoffix> In fact, the new version is better because if proto sig doesn't match the user would get an error saying they're actually trying to add a multi for a routine that already exists in core.

[13:34] <Zoffix> s/I think the proto stuff should .+//; # I guess it's fine afterall

[13:41] <AlexDaniel> m: proto z($) {*}; multi z($, $) {say ‘impossibru’}; &z.candidates[0](42, 50)

[13:41] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «impossibru␤»

[13:41] <[Tux]> Rakudo version 2018.03-263-gd4a6b92f3 - MoarVM version 2018.03-126-g876aa90ee

[13:41] <[Tux]> csv-test-xs-20      0.418 -  0.510

[13:41] <[Tux]> csv-ip5xs           0.878 -  0.888

[13:41] <[Tux]> test-t --race       1.003 -  1.029

[13:41] <[Tux]> test-t              2.473 -  2.589

[13:41] <[Tux]> csv-ip5xs-20        8.768 -  8.848

[13:41] <[Tux]> test                9.147 - 10.320

[13:41] <[Tux]> test-t-20 --race   14.560 - 15.598

[13:41] <[Tux]> csv-parser         37.264 - 39.980

[13:41] <[Tux]> test-t-20          45.376 - 45.444

[13:42] <AlexDaniel> m: proto z($) {*}; multi z($, $) {say ‘impossibru’}; say &z.cando(\($,$))[0](42, 50)

[13:42] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «impossibru␤True␤»

[13:49] <Zoffix> JVM builds for me....or at least, doesn't crash in the parse stage

[13:49] <Zoffix> (google killed my VM before the build had a chance to complete entirely...)

[13:53] <AlexDaniel> O_o

[13:55] <timotimo> it's the "we charge you less money, but we're free to kill your vm at any time" pricing model

[13:56] * [Coke] needs more coffee.

[13:57] <Zoffix> Yeah, it's the "you get whatever lands on the floor" pricing model :)

[14:00] <Zoffix> Oh, it fails when parsing 6.d setting.. :(

[14:01] <Zoffix> or whatever it's parsing after finishing parsing the first time

[14:02] <Zoffix> Reproed the crash: https://gist.github.com/zoffixznet/136495e58a008e8f5425d1292e6aefe2

[14:03] <Zoffix> Makefile:906: warning: overriding recipe for target 'check_nqp_version'

[14:03] <Zoffix> Makefile:424: warning: ignoring old recipe for target 'check_nqp_version'

[14:03] <Zoffix> I'm guessing that's normal?

[14:04] <stmuk_> releasable6: are we there yet?

[14:04] <releasable6> stmuk_, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Releasable

[14:06] <AlexDaniel> releasable6: status

[14:06] <releasable6> AlexDaniel, Next release will happen when it's ready. 1 blocker. 262 out of 263 commits logged

[14:06] <releasable6> AlexDaniel, Details: https://gist.github.com/11f54d5db189e4b3ee292e19bc2a1c88

[14:35] <Zoffix> How can I print the type of nomType here? https://github.com/rakudo/rakudo/blob/master/src/vm/jvm/runtime/org/perl6/rakudo/Binder.java#L440

[14:36] <Zoffix> I tried a bunch of stuff but best I got is "org.perl6.nqp.sixmodel.TypeObject@10b3df77"

[14:37] <timotimo> does the jvm backend have something like moarvm's debugname?

[14:42] <Zoffix> or is there an nqp op that prints the name?

[14:43] <Zoffix> 'cause Ops.isnull(nomType) worked and says 0

[14:43] <Zoffix> but Ops.how(nomType).name(nomType) and Ops.how(nomType.st.WHAT).name(nomType.st.WHAT) tell me .how can't be applied to that

[14:43] * Zoffix tries Ops.what

[14:44] <Zoffix> nope :/ method what in class Ops cannot be applied to given types

[14:45] <Zoffix> Ops.typeName( might be it

[14:46] <Zoffix> nope :)

[14:48] <timotimo> use getdebugtypename

[14:48] <timotimo> hm, is there a get for the set?

[14:49] <Zoffix> oh yeah public String debugName;

[14:49] <timotimo> OK, you need the .st.debugName of the object

[14:51] <Zoffix> "Associative"

[14:51] <Zoffix> ZofBot: win!

[14:51] <Zoffix> I guess it's not composed by that time yet so that's why it doesn't match Mu or something?

[14:54] <Zoffix> Well, I don't see a problem with making trait_mod protos a (|); it's not like someone's gonna .sort with &trait_mod

[15:06] <Zoffix> still crashes, now with prefix:<-> :-(

[15:26] * Zoffix rocks out at https://www.youtube.com/watch?v=VCxGU23yUGQ

[16:15] <Zoffix> Somehow https://github.com/rakudo/rakudo/blob/master/src/vm/jvm/runtime/org/perl6/rakudo/Binder.java#L899 bindee ends up being null and that's when everything blows up

[16:15] <Zoffix> and not Java null, but I'm guessing nqp::null; 'cause bindee != null, but (later derived from bindee) decontValue.st.debugName is 'null'

[16:16] <Zoffix> m: use nqp; say nqp::istype(nqp::null, Mu)

[16:16] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «0␤»

[16:24] <Geth> ¦ nqp: 6c982a88f1 | (Will "Coke" Coleda)++ | t/nqp/019-file-ops.t

[16:24] <Geth> ¦ nqp: This test is now passing on OS X.

[16:24] <Geth> ¦ nqp:

[16:24] <Geth> ¦ nqp: Closes #274

[16:24] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/6c982a88f1

[16:24] <synopsebot> NQP#274 [open]: https://github.com/perl6/nqp/issues/274 t/nqp/19-file-ops.t failure in pre-2016.01

[16:40] <Zoffix> Well, fuck me.

[16:40] <Zoffix> Stage classfile  : java.lang.OutOfMemoryError: Java heap space

[16:41] <Zoffix> bartolin: yo, you around? How do I increase java heap space? I need to stick JAVA_OPTS somwhere?

[16:41] * Zoffix tries it as an env var

[16:53] <Zoffix> From our README: "If you get an out of memory error building rakudo on the JVM, you may need to modify your NQP runner to limit memory use. e.g. edit the nqp-j / nqp-j.bat executable (found wherever you installed to, or in the install/bin directory) to include -Xms500m -Xmx2g as options passed to java."

[16:53] <Zoffix> So.... why not make the runner stick those options in in the first place?

[17:03] <stmuk_> maybe it makes the build slower?

[17:04] <Zoffix> I see

[17:14] <robertle> from my java experience I would say the Xms is not required to make the error go away, and will only help very marginally with build time. the Xmx will not make the build slower (in the presence of enough ram), but will make it use more memory. adding -Xmx2g to the build flags all the time seems safe to me unless the machine has less than 2GB ram, in which case it's probably doomed anyway

[17:38] <Geth> ¦ nqp: 05c18bc856 | usev6++ | tools/build/install-jvm-runner.pl.in

[17:38] <Geth> ¦ nqp: [JVM] Increase Xmx for nqp-j to 1 GB

[17:38] <Geth> ¦ nqp:

[17:38] <Geth> ¦ nqp: With the old value (512 MB) build failures for rakudo-j started to happen.

[17:38] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/05c18bc856

[17:38] <Zoffix> bartolin++

[17:38] <bartolin> I hope that helps.

[17:39] <Zoffix> Thanks.

[17:39] <Zoffix> And I may have a cludgy fix for the blocker.

[17:41] <bartolin> Zoffix++

[17:51] <AlexDaniel> Zoffix++ indeed

[17:51] <Zoffix> bartolin: have you been getting "Type check failed in assignment to $!CWD; expected Str but got IO::Path (IO::Path.new("/home/c...)" from ./perl6-j tools/build/install-core-dist.pl /home/cpan/J/install/share/perl6  before the recent breakage?

[17:56] <Zoffix> somehow IO::Path.BUILD is called with IO::Path $!CWD even tho all the .new methods coerce $!CWD to Str :/

[18:01] <Zoffix> j: ".".IO.WHAT.new(".", :CWD(".".IO));

[18:02] <camelia> rakudo-jvm 1c6701b92: ( no output )

[18:02] <Zoffix> j: ".".IO.WHAT.new(".", :CWD(".".IO));

[18:02] <camelia> rakudo-jvm 1c6701b92: ( no output )

[18:02] <Zoffix> j: ".".IO.WHAT.new(".", :CWD(".".IO)); say "pass"

[18:02] <camelia> rakudo-jvm 1c6701b92: OUTPUT: «pass␤»

[18:02] <Zoffix> Booo.

[18:02] <Zoffix> Yeah, so it's the result of my "fix" :)

[18:03] * Zoffix switches to different debugging music and tries again :) https://www.youtube.com/watch?v=qwJj2EpC8vg

[18:12] <bartolin> Zoffix: sorry, was afk. but it looks like you figured it out yourself ...

[18:13] <Zoffix> yeah :)

[18:48] * [Coke] just got "Stage parse      : Nominal type check failed for parameter '<anon>'" on the java build.  is this the current error?

[18:48] <Zoffix> Yes

[18:48] <[Coke]> (I'm on d4a6b92f3)

[18:49] <[Coke]> danke.

[19:16] <Zoffix> Man. somehow "SixModelObject bindee = gcx.Hash.st.REPR.allocate(tc, gcx.Hash.st);" ends up being with .st.debugName of "null". I dunno if it's actually null or just the debug name is null :/

[19:18] <Zoffix> well, Ops.istype_nodecont(decontValue, gcx.Mu, tc) gives false, so looks like it doesn't even typecheck with Mu

[19:22] <Zoffix> wait wat

[19:23] <Zoffix> I think I got too much print formats; it is actually Mu

[19:29] <Zoffix> aha. it typechecks as Hash, but it doesn't want to typecheck as Associative (at least that's what nomType is), but if I try to typecheck it against gcx.Associative, I get a null pointer exception

[19:50] <Zoffix> man, time to give up

[19:51] <Zoffix> Unless there's "is compiling core" setting or something

[19:51] <Zoffix> Then just fudge it to type-check check for Hash rather than Associative while in core.

[19:51] <Zoffix> It's  probably the same cause that causes some Callables to not typecheck as Callable because they were made too soon.

[20:11] <samcv> either i'm doing something i have no clue what, or this is an issue

[20:11] <samcv> i run ./apply-patchs.p6 '/usr/src/linux'

[20:11] <samcv> and it tells me that it expected 2 arguments but got 3

[20:11] <samcv> ./apply-patchs.p6 '/usr/srclinux' works fine. MAIN's signature is sub MAIN (Str $linux-source-dir) {

[20:11] <samcv> tried with bash and with zsh

[20:13] <samcv> oh facepalm. i think it's my code, not MAIN. i need some tea

[20:44] <lizmat> buggable: weekly

[20:44] <lizmat> buggable6: weekly

[20:44] <lizmat> notable6: weekly

[20:44] <notable6> lizmat, 2 notes: 2018-04-23T09:41:53Z <lizmat>: https://github.com/scriptkitties/perl6-dist-helper/issues/37  ;  2018-04-23T11:15:56Z <AlexDaniel>: reportable https://gist.github.com/7de3eeed5906f78022d8e3d05011b558

[21:02] <MasterDuke> hm. any reason these .new's https://github.com/rakudo/rakudo/blob/master/src/core/IO/Path.pm6#L35-L43 couldn't be collapsed down to `multi method new(IO::Path: Str(Cool) $path, :$SPEC = $*SPEC, Str() :$CWD) { self.bless(:$path, :$SPEC, :$CWD); }` ?

[21:02] <yoleaux> 05:30Z <bartolin> MasterDuke: regarding the compilation of the setting on jvm: I *think* this workaround I put in a while ago really doesn't help making it faster: https://github.com/perl6/nqp/commit/e73c94f69c (I vaguely remember comparing compile times before and after this patch)

[21:25] <timotimo> Zoffix: at least moarvm has a type called VMNull, which is there only so that doing stuff with nulls is only explosive in a "throw an exception" way, not a "cause a segfault" way; probably the same is true for the jvm backend

[21:26] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/04/23/2018-17-docking-tau-station/

[21:28] <timotimo> oh, sweet! bduggan's talk video recording is online \o/

[21:42] <Zoffix> MasterDuke: as I remember it, those were micro optimizations. Don't know if they still offer anything of value.

[21:52] <timotimo> there's much more cool stuff in there than i had expected!

[21:52] <timotimo> bduggan++

[23:02] <MasterDuke> Zoffix: fwiw, tons of 'Use of uninitialized value of type Any in string context...' in tools/build/create-moar-runner.pl, tools/build/install-core-dist.pl, tools/build/upgrade-repository.pl, etc if you make the change i asked about

[23:02] <MasterDuke> .tell bartolin i don't have before/after timings either, but it was pretty slow before that commit anyway

[23:02] <yoleaux> MasterDuke: I'll pass your message to bartolin.

[23:03] <MasterDuke> i installed VisualVM, trying to get it working well with the build

[23:09] <Zoffix> MasterDuke: probably because Str() :$CWD should be Str() :$CWD = $*CWD
