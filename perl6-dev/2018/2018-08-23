[00:50] *** squashable6 joined
[00:50] *** cognominal-p6 joined
[00:50] *** p6bannerbot sets mode: +v squashable6

[00:51] *** p6bannerbot sets mode: +v cognominal-p6

[01:00] *** lizmat joined
[01:01] *** p6bannerbot sets mode: +v lizmat

[01:03] *** Ven` joined
[01:04] *** p6bannerbot sets mode: +v Ven`

[01:08] *** Ven` left
[01:10] *** lizmat left
[01:14] *** cognominal-p6 left
[02:24] *** ufobat___ joined
[02:25] *** p6bannerbot sets mode: +v ufobat___

[02:28] *** ufobat_ left
[02:29] *** AlexDaniel` left
[02:29] *** timotimo left
[02:37] *** timotimo joined
[02:37] *** p6bannerbot sets mode: +v timotimo

[02:38] *** AlexDaniel` joined
[02:38] *** p6bannerbot sets mode: +v AlexDaniel`

[03:03] *** Ven` joined
[03:04] *** p6bannerbot sets mode: +v Ven`

[03:08] *** Ven` left
[04:03] *** Ven` joined
[04:03] *** p6bannerbot sets mode: +v Ven`

[04:07] *** Ven` left
[04:10] *** cognominal-p6 joined
[04:11] *** p6bannerbot sets mode: +v cognominal-p6

[04:20] *** cognominal-p6 left
[04:20] *** cognominal-p6 joined
[04:20] *** ggoebel left
[04:21] *** p6bannerbot sets mode: +v cognominal-p6

[04:34] *** ggoebel joined
[04:34] *** cognominal-p6 left
[04:35] *** p6bannerbot sets mode: +v ggoebel

[05:05] *** infernix14 joined
[05:07] *** infernix14 left
[05:45] *** onur19 joined
[05:49] *** onur19 left
[06:20] *** ufobat___ left
[06:55] *** MasterDuke left
[07:07] *** fake_space_whale left
[07:07] *** ufobat joined
[07:08] *** p6bannerbot sets mode: +v ufobat

[07:30] *** cognominal-p6 joined
[07:30] *** p6bannerbot sets mode: +v cognominal-p6

[07:36] *** cognominal-p6 left
[07:36] *** cognominal-p6 joined
[07:37] *** p6bannerbot sets mode: +v cognominal-p6

[07:54] *** cognominal-p6 left
[08:44] *** lizmat joined
[08:45] *** p6bannerbot sets mode: +v lizmat

[09:01] *** lizmat left
[09:08] <Geth> ¦ roast/6.c-errata: b433a0d249 | (Elizabeth Mattijsen)++ | 3 files

[09:08] <Geth> ¦ roast/6.c-errata: Bring up-to-date with QuantHash mutability changes

[09:08] <Geth> ¦ roast/6.c-errata: 

[09:08] <Geth> ¦ roast/6.c-errata: In other words: if the left hand side of a set operator is mutable,

[09:08] <Geth> ¦ roast/6.c-errata: then the result will also be mutable.

[09:08] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/b433a0d249

[09:08] *** lizmat joined
[09:09] *** p6bannerbot sets mode: +v lizmat

[09:16] *** foxcookie joined
[09:19] *** foxcookie left
[09:26] <lizmat> m: with ("AAS".."ABS").iterator { dd .pull-one; dd .pull-one }  # looks like a genuine bug to me

[09:26] <camelia> rakudo-moar 0979b7756: OUTPUT: «"AAS"␤"ABS"␤»

[09:27] <jnthn> m: say "AAS".succ

[09:27] <camelia> rakudo-moar 0979b7756: OUTPUT: «AAT␤»

[09:27] <jnthn> Indeed

[09:30] <lizmat> JCO found it

[09:30] <Geth> ¦ roast/6.c-errata: 98fae051b4 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-literals/quoting.t

[09:30] <Geth> ¦ roast/6.c-errata: Added TODO reason

[09:30] <Geth> ¦ roast/6.c-errata: 

[09:30] <Geth> ¦ roast/6.c-errata: Otherwise it is transformed into `todo()` without

[09:30] <Geth> ¦ roast/6.c-errata: args which won't compile.

[09:30] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/98fae051b4

[09:30] <lizmat> https://medium.com/@jcoterhals/perl-6-small-stuff-7-q-how-many-elements-are-aaa-abs-a-695-and-19-bd796efabd37

[09:36] *** lizmat_ joined
[09:37] *** p6bannerbot sets mode: +v lizmat_

[09:39] *** lizmat left
[09:47] *** stmuk joined
[09:48] *** p6bannerbot sets mode: +v stmuk

[09:50] *** stmuk_ left
[09:54] *** Ven` joined
[09:55] *** p6bannerbot sets mode: +v Ven`

[10:16] <lizmat_> m: with ("AAS" ... "ABS").iterator { dd .pull-one; dd .pull-one }  # the underlying issue

[10:16] <camelia> rakudo-moar 0979b7756: OUTPUT: «"AAS"␤"ABS"␤»

[10:16] <lizmat_> SEQUENCE appears to be broken

[10:17] * lizmat_ is dreading to look into that

[10:17] *** lizmat_ is now known as lizmat

[10:17] <jnthn> m: with ("A" ... "Z").iterator { dd .pull-one; dd .pull-one }

[10:17] <camelia> rakudo-moar 0979b7756: OUTPUT: «"A"␤"B"␤»

[10:18] <jnthn> m: with ("AA" ... "AZ").iterator { dd .pull-one; dd .pull-one }

[10:18] <camelia> rakudo-moar 0979b7756: OUTPUT: «"AA"␤"AB"␤»

[10:18] <jnthn> m: say "AAS" cmp "AAS".succ

[10:18] <camelia> rakudo-moar 0979b7756: OUTPUT: «Less␤»

[10:18] <jnthn> m: say "AAS" cmp "ABS"

[10:18] <camelia> rakudo-moar 0979b7756: OUTPUT: «Less␤»

[10:19] <jnthn> m: say "AAS" lt "ABS"

[10:19] <camelia> rakudo-moar 0979b7756: OUTPUT: «True␤»

[10:19] <jnthn> Odd

[10:24] <lizmat> AlexDaniel: did you just mark "master" as protected?

[10:24] <AlexDaniel> lizmat: yes

[10:25] <lizmat> ah, ok, so I guess fix for above will not make it to this release

[10:25] <AlexDaniel> I guess that's OK… we had this issue since 2015 I think

[10:28] <AlexDaniel> I'm currently toasting on HEAD and I hope that's the last time I do it for this release :)

[10:28] <AlexDaniel> lizmat: but you can push it here https://github.com/rakudo/rakudo/tree/post-release-2018.08

[10:28] <jnthn> Me too... :)

[10:28] <lizmat> bisectable6: { my $i = ("AAS" ... "ABS").iterator; say $i.pull-one; say $i.pull-one }

[10:28] <bisectable6> lizmat, On both starting points (old=2015.12 new=0979b77) the exit code is 0 and the output is identical as well

[10:28] <bisectable6> lizmat, Output on both points: «AAS␤ABS␤»

[10:29] <lizmat> yup, at least since Christmas

[10:29] <AlexDaniel> ehhh what's up with t/spec/S32-io/indir.t

[10:29] <lizmat> nothing for me

[10:32] <Geth> ¦ nqp: b7f4cb101f | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[10:32] <Geth> ¦ nqp: [MoarVM Bump] Brings 3 commits

[10:32] <Geth> ¦ nqp: 

[10:32] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.06-431-g919e78a...2018.06-434-ge530be4d3

[10:32] <Geth> ¦ nqp: e530be4d3 Merge pull request #945 from jstuder-gh/travis_tags_mac_os

[10:32] <Geth> ¦ nqp: 99ddb9d4a Remove unshallow as it causes error on full repo

[10:32] <Geth> ¦ nqp: c43a9b97e Workaround version failure on Travis CI (MacOS)

[10:32] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/b7f4cb101f

[10:32] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.06-431-g919e78a...2018.06-434-ge530be4d3

[10:32] <Geth> ¦ rakudo: ea387a12a1 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[10:32] <Geth> ¦ rakudo: [NQP Bump] b7f4cb101 [MoarVM Bump] Brings 3 co […]

[10:32] <Geth> ¦ rakudo: 

[10:32] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.06-185-gf7c733d...2018.06-186-gb7f4cb101

[10:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ea387a12a1

[10:32] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.06-185-gf7c733d...2018.06-186-gb7f4cb101

[10:38] <AlexDaniel> weird

[10:46] <AlexDaniel> just a flop I guess

[10:50] *** cognominal-p6 joined
[10:50] *** cognominal-p6 left
[10:50] *** cognominal-p6 joined
[10:51] *** p6bannerbot sets mode: +v cognominal-p6

[11:07] *** undersightable6 joined
[11:07] *** p6bannerbot sets mode: +v undersightable6

[11:14] *** cognominal-p6 left
[11:29] *** cognominal-p6 joined
[11:30] *** p6bannerbot sets mode: +v cognominal-p6

[11:31] *** Ven` left
[11:38] *** lizmat left
[11:43] *** pmurias joined
[11:44] *** p6bannerbot sets mode: +v pmurias

[11:45] *** cognominal-p6 left
[11:46] *** cognominal-p6 joined
[11:46] *** p6bannerbot sets mode: +v cognominal-p6

[11:48] <Geth> ¦ rakudo: thundergnat++ created pull request #2237: Fix precision calculation in FatRat .Str

[11:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2237

[12:01] *** cognominal-p6 left
[12:16] *** Ven` joined
[12:17] *** p6bannerbot sets mode: +v Ven`

[12:43] <AlexDaniel> so, releasable is happy

[12:43] <AlexDaniel> canary is clean

[12:44] <AlexDaniel> toaster, uh… well, I see a lot of false burns because of the zef change

[12:45] <AlexDaniel> but not other way around so that's probably good

[12:46] <AlexDaniel> https://toast.6lang.org/

[12:46] <AlexDaniel> it looks very red but according to my last analysis everything is good

[12:47] <AlexDaniel> one exception right now is Image::Resize

[13:09] <AlexDaniel> c: 2018.06,HEAD^,HEAD run :cwd(‘sandbox/perl6-image-resize’), <perl6 -I../perl6-gd-raw>, ‘t/02-more.t’

[13:09] <committable6> AlexDaniel, https://gist.github.com/a86cde5ed135eea9433d652162ed3b5e

[13:09] <AlexDaniel> eh, it's just a flapper

[13:10] <AlexDaniel> c: 2018.06,2018.06,2018.06,2018.06,2018.06,2018.06,2018.06 run :cwd(‘sandbox/perl6-image-resize’), <perl6 -I../perl6-gd-raw>, ‘t/02-more.t’

[13:10] <committable6> AlexDaniel, https://gist.github.com/14af82e13e401ee64b1825272ce82980

[13:10] <AlexDaniel> yup

[13:10] <AlexDaniel> OK!!

[13:12] <AlexDaniel> filed a ticket here https://github.com/dagurval/perl6-image-resize/issues/18

[13:13] <AlexDaniel> jnthn: so what do you think about R#2231 ?

[13:13] <synopsebot_> R#2231 [open]: https://github.com/rakudo/rakudo/issues/2231 [SEGV][regression][⚠ blocker ⚠] SEGV in Audio::Sndfile

[13:13] <AlexDaniel> nine: ↑ ?

[13:13] <AlexDaniel> jnthn: I mean, do we move on without figuring it out?

[13:14] <jnthn> AlexDaniel: IMO yes; we can leave the ticket for later

[13:15] <AlexDaniel> jnthn: I'm relatively sure that I had it segfault before that commit… the way it happened was that I left the tests running in a loop and forgot, after about half an hour it segv'd

[13:16] <AlexDaniel> but 🤷

[13:18] <AlexDaniel> alright R#1976

[13:18] <synopsebot_> R#1976 [open]: https://github.com/rakudo/rakudo/issues/1976 [Windows][⚠ blocker ⚠] 2018.06 build for JVM fail

[13:18] <AlexDaniel> I see that everyone is very eager to test things on windows and with jvm, and especially with both combined :)

[13:19] <AlexDaniel> appveyor is not even set up to test r-j

[13:20] <AlexDaniel> but why is that?

[13:35] *** Ven` left
[13:39] <AlexDaniel> samcv: alright! LGTM. Feel free to release now

[13:44] *** Guest16638 joined
[13:47] *** Guest16638 left
[14:05] *** Ven` joined
[14:05] *** p6bannerbot sets mode: +v Ven`

[14:15] *** brrt joined
[14:16] *** p6bannerbot sets mode: +v brrt

[14:17] <|Tux|> Big span today. No idea why

[14:17] <|Tux|> Rakudo version 2018.06-480-gea387a12a - MoarVM version 2018.06-434-ge530be4d3

[14:17] <|Tux|> csv-test-xs-20      0.450 -  0.459

[14:17] <|Tux|> test-t --race       0.888 -  0.906

[14:17] <|Tux|> csv-ip5xs           0.942 -  0.979

[14:17] <|Tux|> test-t              2.040 -  2.238

[14:17] <|Tux|> csv-ip5xs-20        7.511 -  7.738

[14:17] <|Tux|> test                9.222 -  9.502

[14:17] <|Tux|> test-t-20 --race   11.702 - 11.876

[14:17] <|Tux|> csv-parser         23.488 - 24.156

[14:17] <|Tux|> test-t-20          36.695 - 37.040

[14:21] *** [TuxCM] joined
[14:22] *** p6bannerbot sets mode: +v [TuxCM]

[14:37] <nine> AlexDaniel: looks like the generated methods for NativeCall subs don't handle explicitly managed strings correctly

[14:39] <nine> i.e. it makes no difference between strings that are and strings that aren't explicitly managed.

[14:40] <timotimo> i thought the difference was in how the GC treats the Str objects, but explicitly-manage has been confusing me for a while and i never took the time to look close enough

[14:47] <Ulti> |Tux|: the two values is that the current run vs previous or just min and max time taken?

[14:47] <timotimo> the latter

[14:47] <timotimo> both numbers are put into the speed log separately, too

[14:47] <timotimo> and i think the graph either only shows the higher one, or averages

[14:48] *** skids joined
[14:49] *** p6bannerbot sets mode: +v skids

[14:49] <|Tux|> it is the fastest and the slowest run of two consequetive runs

[14:51] <Ulti> so essentially pre and post OS level caching

[14:51] <timotimo> no, i don't think so

[14:51] <Ulti> well my second run of any Perl 6 code is always considerably faster than the first

[14:53] <Ulti> and not sure its precomp type things since thats more on install right? or is there a more general precomp cache thats not local to your code

[14:53] <timotimo> i think tux runs the code more than these two times

[14:54] <|Tux|> sometimes, but usually just two full runs

[14:56] *** brrt left
[14:56] *** brrt joined
[14:57] *** p6bannerbot sets mode: +v brrt

[14:57] *** cognominal-p6 joined
[14:58] *** p6bannerbot sets mode: +v cognominal-p6

[14:58] *** cognominal-p6 left
[14:59] *** cognominal-p6 joined
[15:00] *** p6bannerbot sets mode: +v cognominal-p6

[15:03] *** fake_space_whale joined
[15:04] *** p6bannerbot sets mode: +v fake_space_whale

[15:06] <TimToady> .tell lizmat Note that "AAS" ... "ABS" is working as currently specced, since they are equal-sized strings and we're assuming something like '000' .. '377' is wanted.  You hafta write "AAS", *.succ ... "ABS" to get the other behavior under current rules.

[15:06] <yoleaux> TimToady: I'll pass your message to lizmat.

[15:08] <TimToady> jnthn: ^^^

[15:10] <|Tux|> Rakudo version 2018.06-480-gea387a12a - MoarVM version 2018.06-434-ge530be4d3

[15:10] <|Tux|> csv-test-xs-20      0.457 -  0.463

[15:10] <|Tux|> test-t --race       0.879 -  0.885

[15:10] <|Tux|> csv-ip5xs           0.919 -  0.964

[15:10] <|Tux|> test-t              2.057 -  2.067

[15:10] <|Tux|> csv-ip5xs-20        7.705 -  7.873

[15:10] <|Tux|> test                8.599 -  8.661

[15:10] <|Tux|> test-t-20 --race   11.859 - 11.895

[15:10] <|Tux|> csv-parser         23.268 - 23.316

[15:10] <|Tux|> test-t-20          35.946 - 36.542

[15:10] <|Tux|> so, that's better

[15:12] *** Ven` left
[15:13] *** pmurias left
[15:14] *** pmurias joined
[15:15] *** p6bannerbot sets mode: +v pmurias

[15:22] *** cognominal-p6 left
[15:38] *** Ven` joined
[15:39] *** p6bannerbot sets mode: +v Ven`

[15:48] *** brrt left
[15:51] *** lstanley21 joined
[15:53] *** lstanley21 left
[16:21] *** [TuxCM] left
[16:33] *** fake_space_whale left
[16:56] *** japhb left
[17:08] *** japhb joined
[17:09] *** p6bannerbot sets mode: +v japhb

[17:17] *** cognominal-p6 joined
[17:17] *** p6bannerbot sets mode: +v cognominal-p6

[17:25] *** rolig joined
[17:29] *** rolig left
[17:31] *** cognominal-p6 left
[17:31] *** cognominal-p6 joined
[17:32] *** p6bannerbot sets mode: +v cognominal-p6

[17:43] *** cognominal-p6 left
[17:44] *** [TuxCM] joined
[17:45] *** p6bannerbot sets mode: +v [TuxCM]

[17:45] *** Ven` left
[18:41] *** Ven` joined
[18:41] *** p6bannerbot sets mode: +v Ven`

[18:46] *** Ven` left
[18:49] *** lizmat joined
[18:49] *** p6bannerbot sets mode: +v lizmat

[18:50] *** brrt joined
[18:51] *** p6bannerbot sets mode: +v brrt

[19:14] *** lizmat left
[19:41] *** Ven` joined
[19:42] *** p6bannerbot sets mode: +v Ven`

[19:46] *** Ven` left
[20:22] *** brrt left
[20:28] *** lizmat joined
[20:29] *** p6bannerbot sets mode: +v lizmat

[20:31] <pmurias> samcv: is the hash issue still present in modern JVMs?

[20:39] *** cognominal-p6 joined
[20:39] *** p6bannerbot sets mode: +v cognominal-p6

[20:42] *** MasterDuke joined
[20:42] *** p6bannerbot sets mode: +v MasterDuke

[20:42] *** MasterDuke left
[20:42] *** MasterDuke joined
[20:42] *** herbert.freenode.net sets mode: +v MasterDuke

[20:42] *** p6bannerbot sets mode: +v MasterDuke

[20:42] *** Ven` joined
[20:43] *** p6bannerbot sets mode: +v Ven`

[20:44] *** ufobat left
[20:47] *** Ven` left
[20:47] *** cognominal-p6 left
[20:47] *** cognominal-p6 joined
[20:48] *** p6bannerbot sets mode: +v cognominal-p6

[21:02] *** cognominal-p6 left
[21:13] *** skids left
[21:43] *** Ven` joined
[21:44] *** p6bannerbot sets mode: +v Ven`

[21:48] *** Ven` left
[22:02] *** lizmat left
[22:04] *** lizmat joined
[22:05] *** p6bannerbot sets mode: +v lizmat

[22:08] *** lizmat left
[22:29] *** lizmat joined
[22:30] *** p6bannerbot sets mode: +v lizmat

[22:36] *** epony left
[22:43] *** pmurias left
[22:44] *** Ven` joined
[22:45] *** p6bannerbot sets mode: +v Ven`

[22:49] *** Ven` left
[22:55] <lizmat> looking at the code in SEQUENCE, I realize that much of the thinking that went into that, is very pre-GLR

[22:55] <yoleaux> 15:06Z <TimToady> lizmat: Note that "AAS" ... "ABS" is working as currently specced, since they are equal-sized strings and we're assuming something like '000' .. '377' is wanted.  You hafta write "AAS", *.succ ... "ABS" to get the other behavior under current rules.

[22:58] <lizmat> .ask TimToady ok, so that means that my fix for "AAS" .. "ABS" (the Range version) is correct, right?

[22:58] <yoleaux> lizmat: I'll pass your message to TimToady.

[23:01] *** Ven` joined
[23:02] *** p6bannerbot sets mode: +v Ven`

[23:05] *** Ven` left
[23:08] *** lizmat left
[23:12] *** pmurias joined
[23:12] *** p6bannerbot sets mode: +v pmurias

[23:27] *** pmurias left
[23:33] <TimToady> .tell lizmat I didn't see any fix.  The .. operator is currently specced to translate to ... when iterated, and ... is operating as designed.  We could make .. behave differently, but then we might break any current code that relies on '000000' .. '177777' to generate all the octals.

[23:33] <yoleaux> 22:58Z <lizmat> TimToady: ok, so that means that my fix for "AAS" .. "ABS" (the Range version) is correct, right?

[23:33] <yoleaux> TimToady: I'll pass your message to lizmat.

[23:33] *** pmurias joined
[23:34] <TimToady> .tell lizmat so any such change would have to be for 6.d

[23:34] <yoleaux> TimToady: I'll pass your message to lizmat.

[23:34] *** p6bannerbot sets mode: +v pmurias

[23:47] *** pmurias left
[23:59] *** cognominal-p6 joined
