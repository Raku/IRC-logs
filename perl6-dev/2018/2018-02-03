[00:01] <jnthn> samcv: Depends if anything in the bootstrapped version depends on it, I guess...

[00:01] <jnthn> samcv: I mean, it's a lot cleaner to add a new op

[00:01] <jnthn> A lot less disruptive at least

[00:01] <jnthn> Note that for the streaming decoder, we pass in a config hash

[00:01] <jnthn> So for that we don't need to do anything

[00:03] <Geth> ¦ rakudo: 4a989a5e4f | (Samantha McVey)++ | tools/build/NQP_REVISION

[00:03] <Geth> ¦ rakudo: Bump NQP: MVM revert throw when windows1252 errors. JVM add 1251

[00:03] <Geth> ¦ rakudo:

[00:03] <Geth> ¦ rakudo: Changes: 2018.01-33-g99493b0..2018.01-44-ga860fd310

[00:03] <Geth> ¦ rakudo: a860fd310 Bump MoarVM to revert throwing on windows-1252/1 decode errors

[00:03] <Geth> ¦ rakudo: d32d84d4b [jvm] Add windows-1251 as an available encoding

[00:03] <Geth> ¦ rakudo: b348d45cf [js] Check for known encoding in codecs

[00:03] <Geth> ¦ rakudo: 273850777 [js] Update dep

[00:03] <Geth> ¦ rakudo: <…commit message has 7 more lines…>

[00:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4a989a5e4f

[00:03] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.01-33-g99493b0...2018.01-44-ga860fd310

[00:16] <travis-ci> NQP build failed. Samantha McVey 'Bump MoarVM to revert throwing on windows-1252/1 decode errors

[00:16] <travis-ci> https://travis-ci.org/perl6/nqp/builds/336782862 https://github.com/perl6/nqp/compare/d32d84d4ba73...a860fd3109e7

[00:41] <travis-ci> Rakudo build failed. Samantha McVey 'Bump NQP: MVM revert throw when windows1252 errors. JVM add 1251

[00:41] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/336784134 https://github.com/rakudo/rakudo/compare/95f23a5634d7...4a989a5e4f5b

[00:41] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[00:41] <Geth> ¦ rakudo: f473216452 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[00:41] <Geth> ¦ rakudo: Memoize Whatever symbols lookup for whatever curry

[00:41] <Geth> ¦ rakudo:

[00:41] <Geth> ¦ rakudo: We actually go through whatever curry on each curryeable thing like

[00:41] <Geth> ¦ rakudo: a method call or some op. Avoiding the dynvar and caching the lookup

[00:41] <Geth> ¦ rakudo: of Whatever, WhateverCode, and HyperWhatever in lexical vars comes

[00:41] <Geth> ¦ rakudo: out about 10x faster.

[00:41] <Geth> ¦ rakudo:

[00:41] <Geth> ¦ rakudo: Makes compilation of 3000-line file ~6% faster. Not a lot but... Whatever

[00:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f473216452

[00:42] <MasterDuke> is there a mic drop emoji proposed for Unicode 10?

[00:51] <Geth> ¦ rakudo: b93656d82d | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[00:51] <Geth> ¦ rakudo: Revert "Elevate statevars to enclosing block when wrapped"

[00:51] <Geth> ¦ rakudo:

[00:51] <Geth> ¦ rakudo: This reverts commit 299e85264b50104ad82411e9c3999dc727154091.

[00:51] <Geth> ¦ rakudo:

[00:51] <Geth> ¦ rakudo: Travis is unhappy. Try to figure out what it is that makes it blow up.

[00:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b93656d82d

[01:06] <Geth> ¦ rakudo: 42af2a35b6 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[01:06] <Geth> ¦ rakudo: Revert "Revert "Elevate statevars to enclosing block when wrapped""

[01:06] <Geth> ¦ rakudo:

[01:06] <Geth> ¦ rakudo: This reverts commit b93656d82d81a5f93780f11bed055114d2095fc7.

[01:06] <Geth> ¦ rakudo:

[01:06] <Geth> ¦ rakudo: Taht ain't it

[01:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/42af2a35b6

[01:07] <Geth> ¦ rakudo: 01ce5632bc | (Zoffix Znet)++ | src/core/VM.pm

[01:07] <Geth> ¦ rakudo: Revert "Use a more descriptive desc for $*VM"

[01:07] <Geth> ¦ rakudo:

[01:07] <Geth> ¦ rakudo: This reverts commit 86e926c76d6b3c47a2a9ffa11d43e34744493ac7.

[01:07] <Geth> ¦ rakudo:

[01:07] <Geth> ¦ rakudo: Travis fix attempt #2

[01:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/01ce5632bc

[01:16] <Geth> ¦ rakudo: 07f30e4bab | (Zoffix Znet)++ | src/core/VM.pm

[01:16] <Geth> ¦ rakudo: Revert "Revert "Use a more descriptive desc for $*VM""

[01:16] <Geth> ¦ rakudo:

[01:16] <Geth> ¦ rakudo: This reverts commit 01ce5632bc9a4359870fa9c68347b9217d949995.

[01:16] <Geth> ¦ rakudo:

[01:16] <Geth> ¦ rakudo: That ain't it either. I'm stumped :|

[01:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/07f30e4bab

[01:17] <Zoffix> No clue why Travis fails compilation. I tried reverting all the commits around the area where it started failing, but even with reverts it's failing :/ https://travis-ci.org/rakudo/rakudo/builds

[01:20] <Geth> ¦ rakudo: 7d42e33637 | (Zoffix Znet)++ | src/core/Exception.pm

[01:20] <Geth> ¦ rakudo: Try to make travis error say what's actually wrong

[01:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7d42e33637

[01:34] <Geth> ¦ rakudo: 4929651929 | (Zoffix Znet)++ | src/core/Exception.pm

[01:34] <Geth> ¦ rakudo: Coaxe travis some more

[01:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4929651929

[01:35] <Zoffix> ZofBot: we'll get h'

[01:35] <ZofBot> Zoffix, Though there had been times during the game when he had howled, for the most part he had watched in silence so hungrily tense that a less experienced observer than Mr Birdsey might have attributed his immobility to boredom

[01:35] <Zoffix> So Travis is trolling us just 'cause he's bored? That's just mean.

[01:37] <geekosaur> <Grunt> Travis can't be bargained with. Travis can't be reasoned with. Travis doesn't feel pity, or remorse, or fear. And Travis absolutely will not stop, ever, until your project is dead.

[01:37] <Zoffix> :)

[01:42] <Zoffix> yey, progress. "Associative indexing implementation missing from type Hash"

[01:42] <Zoffix> wonder what's that about

[01:47] <MasterDuke> src/Perl6/World.nqp:3864 is something about BEGIN phasers. could it be nine's recent $*PERL commit?

[01:50] <Zoffix> There's a day worth of passing travises since then. But I don't got a better idea and I do see a PROCESS::<PERL> in it that's related to associative indexing

[01:51] <Geth> ¦ rakudo: 85ae1d1ee6 | (Zoffix Znet)++ | 5 files

[01:51] <Geth> ¦ rakudo: Revert "Initialize $*PERL during setting compilation to avoid runtime cost"

[01:51] <Geth> ¦ rakudo:

[01:51] <Geth> ¦ rakudo: This reverts commit 671c3d60161053809415a2eb85097b0714417b56.

[01:51] <Geth> ¦ rakudo:

[01:51] <Geth> ¦ rakudo: Try to unbust travis

[01:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/85ae1d1ee6

[02:00] <MasterDuke> looks like it's passing

[02:00] <Zoffix> oh yeah. MasterDuke++

[02:01] <Geth> ¦ rakudo: 2339d8dd00 | (Zoffix Znet)++ | src/core/Exception.pm

[02:01] <Geth> ¦ rakudo: Travis unbusted; restore X::Comp::BeginTime to former glory

[02:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2339d8dd00

[02:03] <Zoffix> .tell nine FYI we had to revert your $*PERL modifications in https://github.com/rakudo/rakudo/commit/85ae1d1ee6 For some reason a day after your commit travis started failing to compile (no failures in my local builds). After some modifications to X::Comp::BeginTime, we managed to coax the failure out of it and it says it's about associative indexing, perhaps due to PROCESS::<PERL> thing. Here's one of the

[02:03] <yoleaux> Zoffix: I'll pass your message to nine.

[02:03] <Zoffix> failures: https://travis-ci.org/rakudo/rakudo/jobs/336802798#L1449

[02:03] <Zoffix> .tell nine failures: https://travis-ci.org/rakudo/rakudo/jobs/336802798#L1449

[02:03] <yoleaux> Zoffix: I'll pass your message to nine.

[02:28] <Zoffix> m: 1 < *.flip < 52

[02:28] <camelia> rakudo-moar 2339d8dd0: OUTPUT: «===SORRY!===␤QAST::Block with cuid 1 has not appeared␤»

[02:29] <MasterDuke> that's one sneaky block

[02:29] <Zoffix> IIRC TimToady said ^ fixing that would need to be doing something in EXPR parser, but looking at QAST going through whatever_curry, I think it's possible to fix it up right there. Gonna try that

[02:30] <Zoffix> rewriting it to `my $temp := $arg.flip; 1 < $arg < 52`

[02:30] <Zoffix> but maybe something smarter is also possible

[02:31] <Zoffix> oh wait, no I think just 1 < $arg.flip < 52 is good.

[02:32] * Zoffix grabs more coffee and tries

[02:33] <travis-ci> Rakudo build passed. Zoffix Znet 'Revert "Initialize $*PERL during setting compilation to avoid runtime cost"

[02:33] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/336805568 https://github.com/rakudo/rakudo/compare/4929651929c0...85ae1d1ee682

[02:33] <Zoffix> m: 1 < *.flip < 52 < *.flip < 90

[02:33] <camelia> rakudo-moar 2339d8dd0: OUTPUT: «===SORRY!===␤QAST::Block with cuid 1 has not appeared␤»

[02:33] <Zoffix> hehe that's fun

[03:05] <travis-ci> Rakudo build passed. Zoffix Znet 'Travis unbusted; restore X::Comp::BeginTime to former glory'

[03:05] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/336807094 https://github.com/rakudo/rakudo/compare/85ae1d1ee682...2339d8dd0091

[06:48] <Geth> ¦ rakudo: 2e65de2999 | (Zoffix Znet)++ | src/core/Rakudo/Sorting.pm

[06:48] <Geth> ¦ rakudo: Fix broken 2-arity sort of 2-el list

[06:48] <Geth> ¦ rakudo:

[06:48] <Geth> ¦ rakudo: Phixes https://github.com/rakudo/rakudo/issues/1472

[06:48] <Geth> ¦ rakudo:

[06:48] <Geth> ¦ rakudo: When we have a 2-el list, we need to swap only if Order::More

[06:48] <Geth> ¦ rakudo: is received from the comparator, but the test was checking

[06:48] <Geth> ¦ rakudo: whether to leave it alone if Order::Less is received.

[06:48] <Geth> ¦ rakudo:

[06:48] <Geth> ¦ rakudo: Fix by leaving it alone for Order::Same as well.

[06:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2e65de2999

[06:48] <Geth> ¦ roast: 6fd123a1bf | (Zoffix Znet)++ | S32-list/sort.t

[06:48] <Geth> ¦ roast: Remove trailing whitespace

[06:48] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6fd123a1bf

[06:49] <Geth> ¦ roast: 5dc25f13e6 | (Zoffix Znet)++ | S32-list/sort.t

[06:49] <Geth> ¦ roast: Cover degenerate cases of `sort`

[06:49] <Geth> ¦ roast:

[06:49] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1472

[06:49] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/2e65de2999

[06:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5dc25f13e6

[09:54] <nine> Zoffix: how did you get that error message in the first place? Better BEGIN time error handling would help in many cases :)

[11:12] <nine> Zoffix: I think the error message is still misleading as there simply isn't any Perl 6 hash access in any of the code that should now run at BEGIN time

[11:51] <nine> Really, if any part of the setting at all, src/core/Exception.pm should be written in nqp.

[13:36] <lizmat> boarding&

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: 3b35f64c64 | (Timo Paulssen)++ | src/core/IO/Socket/Async.pm

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: first draft of "datagram"-oriented API for udp sockets

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port:

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: ask the .Supply to give you :datagrams and you'll

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: receive instances of IO::Socket::Async::Datagram with

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: .data being the string or buffer of data and

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: .hostname and .port being the sender's address.

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: review: https://github.com/rakudo/rakudo/commit/3b35f64c64

[14:11] <timotimo> (just a rebase)

[14:14] <Geth> ¦ rakudo: timo++ created pull request #1473: [RFC] first draft of "datagram"-oriented API for udp sockets

[14:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1473

[15:02] <Geth> ¦ roast: 3dab7c7745 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-exceptions/misc.t

[15:02] <Geth> ¦ roast: Test malformed sigs with return types

[15:02] <Geth> ¦ roast:

[15:02] <Geth> ¦ roast: Adds tests for RT#127100.

[15:02] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3dab7c7745

[15:02] <synopsebot> RT#127100 [new]: https://rt.perl.org/Ticket/Display.html?id=127100 [LTA] error message when specifying return type before parameters ( --> Bool, Int $x, Int $y )

[17:47] * TimToady looks forward to the day he can wrap a datagram interface around stdin

[17:48] <TimToady> (which is how xinetd passes the socket in)

[17:53] <TimToady> otoh, not sure we really need a new type for the connection, if recv can just figure out what it has with an ordinary socket

[17:53] <TimToady> I can see us auto-figuring-out that stdin is a socket, but I dunno that we can figure out that it's a datagram socket

[17:56] <TimToady> I guess we can figure that out

[18:01] <TimToady> yeah, getsockopt(SO_TYPE), at least on linux

[18:02] <TimToady> we really should do socket autodetection on every passed in fd

[18:05] <TimToady> *passed-in

[18:05] * TimToady now pictures a passed-out socket...

[18:07] <Geth> ¦ roast: 3ca315596c | (Aleks-Daniel Jakimenko-Aleksejev)++ | S29-os/system.t

[18:07] <Geth> ¦ roast: Test Proc.encoding

[18:07] <Geth> ¦ roast:

[18:07] <Geth> ¦ roast: Resolves RT#129296

[18:07] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3ca315596c

[18:07] <synopsebot> RT#129296 [open]: https://rt.perl.org/Ticket/Display.html?id=129296 Splitting non-binary handles no longer works (run(:out, "ls").out.split: 0.chr)

[18:22] <TimToady> in my telephone logging program, if I force gc after every line, it stabilizes at about 500M, but if I let the gc have its own way, it keeps growing, currently at 1.4G, with the resident set at 1G, which is twice what the program actually needs

[18:23] <TimToady> so it seems as though either something is fragmenting long-term memory, or we have some kind of leak that only happens outside the nursery

[18:24] <TimToady> or the gc is just not very well tuned to my particular mix

[18:25] <TimToady> 200% overhead seems a bit much though

[18:26] <TimToady> in any case, the fact that it stabilizes at .5G when I force gc would seem to indicate I don't have a normal memory leak

[18:28] <TimToady> in the "stable" state, it periodically gives a meg back, then takes it back almost immediately

[18:28] <TimToady> I dunno if it ever gives anything back when I let the gc decide when to run

[18:30] <TimToady> which is what makes me think that perhaps the meg it would have given back under force ends up getting something in it that prevents reclamation but also discourages reuse of the other memory in that meg somehow

[22:19] <Geth> ¦ rakudo: df1712d81c | (Nick Logan)++ (committed using GitHub Web editor) | src/core/CompUnit/RepositoryRegistry.pm

[22:19] <Geth> ¦ rakudo: Fix home repository to point at correct location

[22:19] <Geth> ¦ rakudo:

[22:19] <Geth> ¦ rakudo: Fixes the following incorrect blead-only behavior:

[22:19] <Geth> ¦ rakudo:

[22:19] <Geth> ¦ rakudo: ```

[22:19] <Geth> ¦ rakudo: perl6 -e 'say CompUnit::RepositoryRegistry.repository-for-name("home")'

[22:19] <Geth> ¦ rakudo: inst#/Users/ugexe

[22:19] <Geth> ¦ rakudo: <…commit message has 11 more lines…>

[22:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/df1712d81c

[22:22] <Geth> ¦ roast: ceabda6337 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-exceptions/misc.t

[22:22] <Geth> ¦ roast: Test line number of the corresponding starter

[22:22] <Geth> ¦ roast:

[22:22] <Geth> ¦ roast: Adds tests for RT #130261. I don't find this test elegant, but it

[22:22] <Geth> ¦ roast: should be enough to close the ticket.

[22:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ceabda6337

[22:22] <synopsebot> RT#130261 [new]: https://rt.perl.org/Ticket/Display.html?id=130261 [LTA] Error message for unclosed curly quote points to the last line of the file

[22:31] <Geth> ¦ roast: ff0472adfc | (Moritz Lenz)++ | S32-temporal/DateTime.t

[22:31] <Geth> ¦ roast: RT#125555: DateTime comparison ops

[22:31] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ff0472adfc

[22:31] <synopsebot> RT#125555 [open]: https://rt.perl.org/Ticket/Display.html?id=125555 [NYI] Comparison ops for DateTimes in Rakudo

[22:51] <Geth> ¦ roast: 7557eef426 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-lexical-conventions/unspace.t

[22:51] <Geth> ¦ roast: Tests unspace + map + constants

[22:51] <Geth> ¦ roast:

[22:51] <Geth> ¦ roast: Adds tests for RT #125985.

[22:51] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7557eef426

[22:51] <synopsebot> RT#125985 [open]: https://rt.perl.org/Ticket/Display.html?id=125985 [BUG] Internal error when a constant, unspace, and a map are involved in Rakudo

[22:56] <stmuk> rsync --delete is a good flag after a few Belgium beers

[22:58] <geekosaur> --no-ossifer-Im-not-drunk-really

[23:33] <Zoffix> .tell nine *I* didn't get the error. It only happens on Travis. And to get the error to print, I had to make temporary modifications to X::Comp::BeginTime to printe the message from a Failure being stuffed into a `str` attribute: https://github.com/rakudo/rakudo/commit/2339d8dd00

[23:33] <yoleaux> Zoffix: I'll pass your message to nine.
