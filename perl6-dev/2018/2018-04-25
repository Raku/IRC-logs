[02:33] <samcv> MoarVM is about ready for release. just gonna get the changelog looked over once more, but it's complete

[02:41] <Zoffix> \o/

[04:42] <Geth> ¦ nqp: 9a43e6c444 | (Samantha McVey)++ | t/nqp/019-file-ops.t

[04:42] <Geth> ¦ nqp: Revert "This test is now passing on OS X." for release

[04:42] <Geth> ¦ nqp:

[04:42] <Geth> ¦ nqp: Refudge this test since it is still failing on TravisCI sometimes.

[04:42] <Geth> ¦ nqp: This reverts commit 6c982a88f1e056cb44721525d4fb10e176854c06.

[04:42] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9a43e6c444

[05:40] <samcv> MoarVM has been released

[06:11] <[Tux]> Rakudo version 2018.03-266-g79ed89ba4 - MoarVM version 2018.04-1-g577857ae0

[06:11] <[Tux]> csv-test-xs-20      0.438 -  0.467

[06:11] <[Tux]> csv-ip5xs           0.879 -  0.893

[06:11] <[Tux]> test-t --race       1.024 -  1.117

[06:11] <[Tux]> test-t              2.471 -  2.485

[06:11] <[Tux]> csv-ip5xs-20        8.708 -  8.718

[06:12] <[Tux]> test                8.896 -  9.518

[06:12] <[Tux]> test-t-20 --race   15.976 - 16.191

[06:12] <[Tux]> csv-parser         36.326 - 36.522

[06:12] <[Tux]> test-t-20          45.167 - 45.345

[09:22] <lizmat> Files=1239, Tests=76308, 320 wallclock secs (15.79 usr  5.55 sys + 2201.73 cusr 219.47 csys = 2442.54 CPU)

[09:27] <brrt> lizmat: can i ask how you compute a benchmark like that

[09:27] <brrt> i want to try out a change with potentially significant impact

[09:27] <lizmat> make spectest; sleep 18000; make spectest

[09:27] <lizmat> the first make spectest is to make sure all precomps have been done

[09:28] <lizmat> the sleep 18000 is to make sure the second one runs around 5am in the morning, when the machine is cold and there's not a lot happening on  line

[09:28] <lizmat> then copy the line from the output

[09:29] <brrt> oh, that seems simple enough

[09:41] <gfldex> brrt: a positive significant impact would be very welcome :)

[09:41] <yoleaux> 12 Apr 2018 16:54Z <jmerelo> gfldex: can you please tell me something about tags and why they were added? https://github.com/perl6/doc/commit/1509c4d1d6fca7b9cd93ce56282fbfce5f695fcb ?

[09:41] <brrt> heh, can't promise that

[09:41] <brrt> it's a tradeoff

[09:56] <brrt> to be specific, i'm going to add '-fno-omit-frame-pointer'

[09:56] <brrt> and the point of doing so is that i'm going to add a stack walker to find the current position in the JIT frame

[09:57] <brrt> and the point of doing that is that the VM can figure out where we are in the current execution of a JIT frame, without compiling code for  storing that position in a special field every so many instructions

[09:57] <brrt> and the point of doing that, is that this is currently an extremely common operation, and the operations that require this information to be availalbe are not nearly as common

[09:59] <brrt> so it's exchanging one very common operation, relatively expensive operation, with a cheaper, somehwat less common operation; and another operation that *might* be more expensive but is really very uncommon

[10:26] <AlexDaniel> good morning o/

[10:26] <AlexDaniel> will cut rakudo release shortly™

[10:27] <lizmat> ++AlexDaniel

[10:38] <El_Che> AlexDaniel: \o/

[11:06] <chansen_> m: say 0x4E00.uniname;

[11:06] <camelia> rakudo-moar 79ed89ba4: OUTPUT: «<CJK Ideograph-4E00>␤»

[11:06] <chansen_> m: say 0x17000.uniname;

[11:06] <camelia> rakudo-moar 79ed89ba4: OUTPUT: «<Tangut Ideograph-17000>␤»

[11:07] <chansen_> Is not the correct Unicode name, the correct name for CJK Ideographs is "CJK UNIFIED IDEOGRAPH-%.4X" and Tangut TANGUT IDEOGRAPH-%.4X. Looks like names are derrived from the meta ranges in UnicodeData.txt which is incorrect: <https://www.unicode.org/versions/Unicode10.0.0/ch04.pdf#G144161>.

[11:10] <Zoffix> chansen_: would you file a ticket? https://github.com/rakudo/rakudo/issues/new

[11:13] * lizmat hopes that nine or ugexe or tonyo would be able to write a blogpost about the PTS before next weeks weekly

[11:25] <chansen_> Zoffix: done

[11:26] <lizmat> m: use Test; my %h = a => Mu; is-deeply %h, %h  # disappointing  :-(

[11:26] <camelia> rakudo-moar 79ed89ba4: OUTPUT: «Type check failed in binding to parameter '<anon>'; expected Any but got Mu (Mu)␤  in sub _is_deeply at /home/camelia/rakudo-m-inst-1/share/perl6/sources/C712FE6969F786C9380D643DF17E85D06868219E (Test) line 651␤  in sub is-deeply at /home/camelia/…»

[11:29] <Zoffix> chansen_++

[11:29] <Zoffix> Thanks

[11:29] <Zoffix> lizmat: that's cause of `eqv` not taking a `Mu` and it doesn't take it cause it wants to autothread junctions

[11:29] <Zoffix> m: my %h = a => Mu; say %h eqv %h

[11:29] <camelia> rakudo-moar 79ed89ba4: OUTPUT: «True␤»

[11:29] <Zoffix> huh

[11:32] <Zoffix> m: my %h = a => Mu; say $%h eqv $%h

[11:32] <camelia> rakudo-moar 79ed89ba4: OUTPUT: «Type check failed in binding to parameter '<anon>'; expected Any but got Mu (Mu)␤  in block <unit> at <tmp> line 1␤␤»

[11:33] <Zoffix> s: &infix:<eqv>, do { my %h = a => Mu; \(%h, %h)}

[11:33] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/79ed89ba4/src/core/Map.pm6#L446

[11:33] <Zoffix> s: &infix:<eqv>, do { my %h = a => Mu; \($%h, $%h)}

[11:33] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/79ed89ba4/src/core/Map.pm6#L446

[11:33] <Zoffix> Ah, the non-conted version goes through the eqaddr fast-past

[11:37] <lizmat> well,  not sure if it's a bug or not, but is makes it impossible for me to use is-deeply in tests for the new Hash::Util CPAN5 module

[11:38] <Zoffix> I'd say there's a bugglet that `is-deeply` (and likely other routines containerize) stuff. Filed as R#1771

[11:38] <synopsebot> R#1771 [open]: https://github.com/rakudo/rakudo/issues/1771 [LHF] Test.pm6 subs need to avoid containerizing arguments

[11:38] <Zoffix> As for testing..... Yeah, that's LTA.

[11:39] <Zoffix> ... but is expected if we offer is-deeply as "it does eqv"

[11:39] <Zoffix> m: my %h = a => Mu; say $%h ~~ $%h

[11:39] <camelia> rakudo-moar 79ed89ba4: OUTPUT: «Type check failed in binding to parameter '<anon>'; expected Any but got Mu (Mu)␤  in block <unit> at <tmp> line 1␤␤»

[11:39] <Zoffix> boo

[11:39] <lizmat> guess so  :-)

[11:40] <lizmat> maybe it's just a case of DIHWIDT

[12:01] <Geth> ¦ star: hankache++ created pull request #110: Update README

[12:01] <Geth> ¦ star: review: https://github.com/rakudo/star/pull/110

[12:24] <Geth> ¦ star: 9cfbaec014 | (Naoum Hankache)++ (committed by Zoffix Znet) | README.md

[12:24] <Geth> ¦ star: Update README (#110)

[12:24] <Geth> ¦ star:

[12:24] <Geth> ¦ star: * Update README

[12:24] <Geth> ¦ star:

[12:24] <Geth> ¦ star: * Update README: Add more links to guides

[12:24] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/9cfbaec014

[12:29] <Geth> ¦ rakudo: f3a56190d0 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/create-release-announcement.p6

[12:29] <Geth> ¦ rakudo: Change some urls in announcement generation

[12:29] <Geth> ¦ rakudo:

[12:29] <Geth> ¦ rakudo: https and less redirects

[12:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f3a56190d0

[12:29] <Geth> ¦ rakudo: e96a38d32a | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[12:29] <Geth> ¦ rakudo: Log all changes (+ announcement)

[12:29] <Geth> ¦ rakudo:

[12:29] <Geth> ¦ rakudo: Deliberately not logged:

[12:29] <Geth> ¦ rakudo: aa974ecd 32774e7b 3b86ffd5 6be586c5 04014cf6 e31dd966 ee5150e4

[12:29] <Geth> ¦ rakudo: 77c3a9c5 ec5416a9 05796698 a3a7c142 d443076d 19b3e52f 3420b67b

[12:29] <Geth> ¦ rakudo: a3e4f9e3 b5685109 c43817ac 5cba7c40 4032e62e 82a0e706 7353e055

[12:29] <Geth> ¦ rakudo: f1b9c7da 9ff65564 318a9b09 95481e26 72c7c5bf 92eaa11a a2a2a745

[12:29] <Geth> ¦ rakudo: <…commit message has 11 more lines…>

[12:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e96a38d32a

[12:29] <Geth> ¦ rakudo: eb67e6d051 | (Aleks-Daniel Jakimenko-Aleksejev)++ | docs/release_guide.pod

[12:29] <Geth> ¦ rakudo: Actual date, claim next release

[12:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/eb67e6d051

[12:50] <timotimo> `for for ... { Package::foo }` - is the first for supposed to be outside of the ``?

[12:50] <timotimo> AlexDaniel: ^

[12:51] <AlexDaniel> I don't think so…

[12:52] * AlexDaniel looks

[12:52] <AlexDaniel> right, anything else?

[12:54] <timotimo> we might have to change a few things in the release document

[12:54] <timotimo> ah, no

[12:54] <Zoffix> AlexDaniel: oh, I think that was meant to be `do for`

[12:54] <timotimo> false alarm; the github source code highlighting was turning parts of the document italic that weren't supposed to be

[12:54] <AlexDaniel> yea I've seen that too

[12:55] <AlexDaniel> github has three different markdown processors (wiki, comments, files), but maybe the diff one is different too?

[12:56] <AlexDaniel> and they're all incompatible in edge cases

[12:56] <Zoffix> Or maybe just one `for`

[12:56] <Zoffix> or maybe for `for`

[12:57] <AlexDaniel> that's what I changed it to now, yeah, but not committing just yet :)

[12:57] <Zoffix> c: 4402839a,4402839a^ unit package A; our sub need() {}; for <s> { A::need }

[12:57] <Zoffix> right no bot. ok

[12:58] <AlexDaniel> they pinged out :(

[12:58] <AlexDaniel> c: 4402839a,4402839a^ unit package A; our sub need() {}; for <s> { A::need }

[12:58] <committable6> AlexDaniel, ¦4402839: «» ¦4402839a^: «Cannot find method 'Nil' on object of type List␤  in block  at /tmp/ymPtL_fYCy line 1␤  in block <unit> at /tmp/ymPtL_fYCy line 1␤␤ «exit code = 1»»

[12:58] <AlexDaniel> c: 4402839a,4402839a^,HEAD unit package A; our sub need() {}; for <s> { A::need }

[12:58] <committable6> AlexDaniel, ¦4402839,HEAD(eb67e6d): «» ¦4402839a^: «Cannot find method 'Nil' on object of type List␤  in block  at /tmp/jSl4R87q4N line 1␤  in block <unit> at /tmp/jSl4R87q4N line 1␤␤ «exit code = 1»»

[13:00] <Geth> ¦ rakudo: coke assigned to samcv Issue Incorrect Unicode character names https://github.com/rakudo/rakudo/issues/1770

[13:05] <Geth> ¦ rakudo: 09e86787b4 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[13:05] <Geth> ¦ rakudo: Fix mistype in the changelog

[13:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/09e86787b4

[14:24] <Geth> ¦ nqp: f62e04925e | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[14:24] <Geth> ¦ nqp: [release] Bump MoarVM revision to 2018.04

[14:24] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/f62e04925e

[14:24] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03-128-g0ad859a...2018.04

[14:24] <Geth> ¦ nqp: afb18b4bb7 | (Aleks-Daniel Jakimenko-Aleksejev)++ | VERSION

[14:24] <Geth> ¦ nqp: [release] Bump VERSION to 2018.04

[14:24] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/afb18b4bb7

[14:24] <Geth> ¦ rakudo: cb6230f8f8 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[14:24] <Geth> ¦ rakudo: [release] Bump NQP revision to 2018.04

[14:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cb6230f8f8

[14:24] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-89-gccf9807...2018.04

[14:24] <Geth> ¦ rakudo: 829607d88e | (Aleks-Daniel Jakimenko-Aleksejev)++ | VERSION

[14:24] <Geth> ¦ rakudo: [release] Bump VERSION to 2018.04

[14:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/829607d88e

[14:25] <Zoffix> yeeey

[14:25] <Zoffix> releasable6: status

[14:25] <releasable6> Zoffix, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/541d9ca6e9fc37f3c460e059628ebb90

[14:25] <Zoffix> releasable6: next

[14:25] <releasable6> Zoffix, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/df05e2b47ab5b626fcf7fde37ade9d21

[14:26] <AlexDaniel> hold on something went wrong…

[14:26] <Zoffix> "Cannot resolve the tag for the previous release"

[14:26] <AlexDaniel> this may be an issue in releasable6 itself

[14:27] <AlexDaniel> but the sakefile failed to upload a tar to rakudo.org, looking at it now…

[14:28] <AlexDaniel> OK should be good now

[14:28] <AlexDaniel> releasable6: status

[14:28] <releasable6> AlexDaniel, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/2d1a2c17844759c52639a111ee360dfb

[14:28] <AlexDaniel> grr I think it simply needs to pull

[14:29] <Zoffix> AlexDaniel: so that's it? Time for appropriate amount of fun and mergeage of all the branches?

[14:29] <AlexDaniel> well let's give releasable6 a minute or two to catch up

[14:29] <AlexDaniel> maybe it's trying to tell us something

[14:30] <AlexDaniel> but from my side everything looks correct

[14:32] <Zoffix> releasable6: next

[14:32] <releasable6> Zoffix, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/d322d9499d1ddcee5c6988a182324e6a

[14:34] <AlexDaniel> releasable6: next

[14:34] <releasable6> AlexDaniel, Next release in ≈24 days and ≈4 hours. 0 blockers. 0 out of 0 commits logged

[14:34] <AlexDaniel> alright

[14:34] * Zoffix celebrates with the appropriate amount of fun

[14:35] <AlexDaniel> \o/

[14:35] <AlexDaniel> basically releasable6 is using the same thing that other bots use, and that doesn't move forward until there's an actual build generated…

[14:35] <AlexDaniel> so it takes a few minutes

[14:35] <AlexDaniel> I should fix that

[14:37] <El_Che> it's out-out?

[14:42] <AlexDaniel> yeah

[14:42] <El_Che> \o/

[14:42] <Zoffix> \o/

[14:42] <Zoffix> AlexDaniel++

[14:42] <El_Che> let's get the package rolling (lots of changes :) )

[14:46] <El_Che> If curious if it builds ok on varios distros: https://travis-ci.org/nxadm/rakudo-pkg/builds/371099494

[14:46] <El_Che> AlexDaniel++, samcv++

[14:48] <Zoffix> "This is Rakudo version 2018.04 built on MoarVM version 2018.04-1-g577857a"

[14:48] <Zoffix> *wailing guitar solos*

[14:51] <AlexDaniel> oh crap

[14:51] <Geth> ¦ rakudo: zoffixznet++ created pull request #1773: Post release 2018.04

[14:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1773

[14:51] <Geth> ¦ rakudo/master: 4 commits pushed by (Zoffix Znet)++

[14:51] <Geth> ¦ rakudo/master: 6e8dc6f132 | Move .assuming from Block to Code

[14:51] <Geth> ¦ rakudo/master: df0b95df34 | Merge branch 'master' into post-release-2018.04

[14:51] <Geth> ¦ rakudo/master: 656ff77b96 | Do not .Int `second` units in DateTime.later/.earlier

[14:51] <Geth> ¦ rakudo/master: 8c617cfa9e | Merge pull request #1773 from rakudo/post-release-2018.04

[14:51] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/829607d88e33...8c617cfa9e53

[14:51] <Zoffix> AlexDaniel: waht?

[14:51] <AlexDaniel> Zoffix: it shouldn't be that way no?

[14:51] <Zoffix> The 2018.04-1-g577857a thing? That's cause I build master-master-master

[14:51] <Zoffix> I imagine it reads 2018.04 on normal builds

[14:52] <AlexDaniel> ah, ok

[14:52] * AlexDaniel cancels the heart attack

[14:52] <Zoffix> :)

[14:52] <jnthn> Yay, release :)

[14:52] <yoleaux> 13:26Z <brrt> jnthn: if you maybe have any experience with ml64 or soemsuch assemlber for microsoft

[14:53] <jnthn> That thought is so terrifying that he didn't finish the sentence? :P

[14:53] <AlexDaniel> the script would never do that obviously, but there's a way to force it to use a non-release version so for a second I crapped my pants thinking that I did that

[14:53] <brrt> what, assembly on win64?

[14:53] <brrt> i fear nothing :-P

[14:53] <jnthn> :-)

[14:53] <Geth> ¦ roast: zoffixznet++ created pull request #419: Post release 2018.04

[14:53] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/419

[14:54] <Geth> ¦ roast/master: 4 commits pushed by (Zoffix Znet)++

[14:54] <Geth> ¦ roast/master: 5bfe416140 | Spec WhateverCode.assuming

[14:54] <Geth> ¦ roast/master: 3a0e202c13 | Merge branch 'master' into post-release-2018.04

[14:54] <Geth> ¦ roast/master: 7c3bf500ed | Test DateTime.later/.earlier can handle sub-second units

[14:54] <Geth> ¦ roast/master: a9b86b544d | Merge pull request #419 from perl6/post-release-2018.04

[14:54] <jnthn> Anyway, I...think I touched it once, years ago...

[14:54] <Geth> ¦ roast/master: review: https://github.com/perl6/roast/compare/3d94721d6850...a9b86b544dd3

[14:58] <tony-o> timotimo: https://i.imgur.com/tiLmSYV.png

[15:02] <stmuk> windows assembler? like tasm :-)

[15:05] <Zoffix> ok :)

[15:05] <El_Che> fedora will undo it soonish

[15:05] <AlexDaniel> Zoffix++ # post-release branch

[15:07] <tony-o> timotimo: https://i.imgur.com/tiLmSYV.png # not sure if that got lost, this is using zefpan and uxmal to generate module dependency charts

[15:08] <Zoffix> AlexDaniel: to answer your question, I assume it's 'cause it got it listed twice; once for build-depends and other for depends: https://github.com/tadzik/Shell-Command/blob/master/META6.json#L7-L14

[15:09] <Zoffix> Same with JSON::Marshall: https://github.com/jonathanstowe/JSON-Marshal/blob/master/META6.json#L19-L30

[15:09] <Zoffix> tony-o: if there's a way to color-code arrows to show with depends they're from that'd be cool :)

[15:10] <AlexDaniel> yes there is

[15:10] <AlexDaniel> in fac tyou can do different kind of arrows

[15:10] <AlexDaniel> like dashed and stuff

[15:17] <timotimo> tony-o: how does it have two dependencies on File::Find from Shell::Command? maybe one is test-depends?

[15:17] <AlexDaniel> can we include something like this on modules.perl6.org ?

[15:18] <AlexDaniel> I think the graph is very helpful

[15:28] <Geth> ¦ rakudo: d53fe90acc | (Jonathan Worthington)++ | src/vm/moar/Perl6/Ops.nqp

[15:28] <Geth> ¦ rakudo: Use new tryfindmeth op for the sink code-gen

[15:28] <Geth> ¦ rakudo:

[15:28] <Geth> ¦ rakudo: It results in slightly smaller code, saving around 10KB on the compiled

[15:28] <Geth> ¦ rakudo: output of CORE.setting. More significantly, it saves a duplicate hash

[15:28] <Geth> ¦ rakudo: lookup in the unoptimized path for each sink (previously, we had one

[15:28] <Geth> ¦ rakudo: for `can` and one for `findmeth` on the same key). While it was true

[15:28] <Geth> ¦ rakudo: that spesh could deal with this in many cases, this gives us better

[15:28] <Geth> ¦ rakudo: <…commit message has 6 more lines…>

[15:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d53fe90acc

[15:28] <Geth> ¦ rakudo: c40fc5d711 | (Jonathan Worthington)++ | src/vm/moar/Perl6/Ops.nqp

[15:28] <Geth> ¦ rakudo: Merge branch 'better-sink-code-gen'

[15:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c40fc5d711

[15:31] <Zoffix> w00t

[15:33] <jnthn> Plus for those not on #moarvm, I merged a NFA optimization there that measurements suggest get ~1% of CPU instructions off Perl 6 source parsing.

[15:33] <jnthn> So, uh, enjoy the unperceptible compile time performance, I guess... :P

[15:33] <jnthn> *improvement

[15:33] <jnthn> (It's actually 13% off the time spent processing NFAs)

[15:34] <lizmat> jnthn: I guess we should bump NQP/MoarVM ?

[15:34] <jnthn> There's no hard dependency between what I pushed here and the stuff I pushed in MoarVM :)

[15:34] <jnthn> But yeah, bump needed for people not building master/master/master to get the win :)

[15:35] <timotimo> maybe wait a tiny bit with bumps

[15:35] <timotimo> i expect other people will want to merge some branches now that the release happened?

[15:35] <lizmat> ok, cool, I'll wait a bit

[15:37] <El_Che> got fails on 386

[15:38] <El_Che> https://travis-ci.org/nxadm/rakudo-pkg/jobs/371111042

[15:38] <El_Che> (that's ubuntu 16.04)

[15:38] <El_Che> this is 17.10 (latest): https://travis-ci.org/nxadm/rakudo-pkg/jobs/371111043

[15:39] <El_Che> t/hll/06-sprintf.t ..................... Failed 2/286 subtests

[15:39] <El_Che> Failed tests:  111-112

[15:50] <AlexDaniel> not cool but ok let's fix that

[15:50] <AlexDaniel> El_Che: by the way, can you ticket these warnings?

[15:52] <AlexDaniel> oooooooh

[15:52] <AlexDaniel> so these are somewhat related to floating point precision right?

[15:58] <Zoffix> [Coke]: are you around? Does TPF take taxes on grants? I'm filing my taxes and they're telling me I'm supposed to receive sone form

[15:58] <Zoffix> *some form

[15:58] <Zoffix> that says some stuff about taxes

[16:10] <Zoffix> FWIW, the US company that sells my books sends me form 1042-S with what they paid me and how much tax they took. But tax person said they've no clue if TPF would have the same form.

[16:11] <Zoffix> Had to pay $380 to canuk gov on my grant's income :p

[16:12] <timotimo> :o

[16:12] <Zoffix> ZofBot: taxation is theft!

[16:22] <Geth> ¦ star/master: 5 commits pushed by (Steve Mynott)++

[16:22] <Geth> ¦ star/master: 7784dd293e | bump submodules to latest apart from http-useragent which uses pre SSL dep version

[16:22] <Geth> ¦ star/master: 80fa543065 | bump rakudo,nqp & MoarVM release versions

[16:22] <Geth> ¦ star/master: 656467f58c | import draft announce

[16:22] <Geth> ¦ star/master: 7e78555f58 | add new test deps for http-useragent and reorder

[16:22] <Geth> ¦ star/master: ff9add2989 | add some changelog for bundled modules

[16:22] <Geth> ¦ star/master: review: https://github.com/rakudo/star/compare/9cfbaec014b1...ff9add2989c5

[16:23] <AlexDaniel> stmuk: fwiw there are some i386 failures

[16:24] <stmuk> AlexDaniel: yes I noticed in the scrollback but thanks for the heads up in case I hadn't!

[16:26] <Zoffix> AlexDaniel: what sort of failures? I got a 32-bit box handy

[16:26] <AlexDaniel> Zoffix: just run nqp tests

[16:26] <Zoffix> AlexDaniel: the sprintf stuff?

[16:26] <AlexDaniel> yeah

[16:26] <Zoffix> ok

[16:26] * Zoffix builds.

[16:26] <Zoffix> gonna take a while :}

[16:27] <Zoffix> AlexDaniel: on a hunch, there won't be a point release...

[16:28] <Zoffix> And it'll turn out to be a wrong test

[16:28] <AlexDaniel> it could be so yeah, but I'm not that sure

[16:29] <AlexDaniel> after all the test works on some platforms

[16:29] <AlexDaniel> which one is it by the way?

[16:29] <Zoffix> Do 32-bit boxes have 64-bit floats?

[16:30] <Zoffix> AlexDaniel: based on test numbers, it's these two: https://github.com/perl6/nqp/blob/master/t/hll/06-sprintf.t#L164-L165

[16:30] <Zoffix> I'm still building to find out what the failing result is

[16:31] <Zoffix> it better not be a point a release... I don't wanna be the blamee for two point releases in a row :P

[16:31] <AlexDaniel> if the test is wrong, do we need a point release fixing the test? I'm not sure… but I have no problem cutting it

[16:31] <ilmari> Zoffix: double is 64 bits on my debian i386 VM

[16:31] <ilmari> ilmari@sid-i386:~$ uname -m; perl -V:doublesize

[16:31] <ilmari> i686

[16:31] <ilmari> doublesize='8';

[16:31] <Zoffix> Thanks

[16:31] <ilmari> 'long double' is 12 bytes

[16:35] <El_Che> A dot release would make my life easier

[16:36] <Zoffix> #   Actual value: <3.141e-20>

[16:36] <Zoffix> # Expected value: <3.142e-20>

[16:36] <Zoffix> #   Actual value: <-3.141e-20>

[16:36] <Zoffix> # Expected value: <-3.142e-20>

[16:36] <Zoffix> m: say -3.141e-20

[16:36] <camelia> rakudo-moar c40fc5d71: OUTPUT: «-3.141e-20␤»

[16:38] <lizmat> ?

[16:39] <AlexDaniel> lizmat: it's about the i386 failure

[16:39] <lizmat> yeah, but it appears to also happen on Camelia

[16:39] <lizmat> and that's not an i386 ?

[16:40] <AlexDaniel> El_Che: speaking of which, is there any way you can make pre-release tests? What can we do on our side to make it easier?

[16:40] <AlexDaniel> e: say -3.141e-20

[16:40] <evalable6> AlexDaniel, rakudo-moar c40fc5d71: OUTPUT: «-3.141e-20␤»

[16:40] <lizmat> fwiw, this could just be an indication that that i386 has some floating point bug (they were known for it at the time)

[16:42] <ilmari> the x86 FPU has 80-bit registers, so sequencial FP ops might execute with higher precision, and only be rounded down at the end

[16:42] <Zoffix> m: printf("%7.3e", 3.1415e-20)

[16:42] <camelia> rakudo-moar c40fc5d71: OUTPUT: «3.142e-20»

[16:42] <Zoffix> nqp: printf("%7.3e", 3.1415e-20)

[16:42] <camelia> nqp-moarvm: OUTPUT: «Cannot invoke this object (REPR: Null; VMNull)␤   at <tmp>:1  (<ephemeral file>:<mainline>)␤ from gen/moar/stage2/NQPHLL.nqp:1585  (/home/camelia/rakudo-m-inst-2/share/nqp/lib/NQPHLL.moarvm:eval)␤ from gen/moar/stage2/NQPHLL.nqp:1822  (/home/camelia/rakudo…»

[16:43] <Zoffix> nqp: nqp::printf("%7.3e", 3.1415e-20)

[16:43] <camelia> nqp-moarvm: OUTPUT: «No registered operation handler for 'printf'␤   at gen/moar/stage2/QAST.nqp:1635  (/home/camelia/rakudo-m-inst-2/share/nqp/lib/QAST.moarvm:compile_op)␤ from gen/moar/stage2/QAST.nqp:5986  (/home/camelia/rakudo-m-inst-2/share/nqp/lib/QAST.moarvm:compile_node)…»

[16:43] <Zoffix> nqp: say(nqp::sprintf("%7.3e", 3.1415e-20))

[16:43] <camelia> nqp-moarvm: OUTPUT: «Directive e not applicable for type VMNull␤   at gen/moar/stage2/NQPHLL.nqp:2739  (/home/camelia/rakudo-m-inst-2/share/nqp/lib/NQPHLL.moarvm:panic)␤ from gen/moar/stage2/NQPHLL.nqp:2746  (/home/camelia/rakudo-m-inst-2/share/nqp/lib/NQPHLL.moarvm:bad-type-for…»

[16:43] <Zoffix> oh screw you

[16:43] <ilmari> -ffloat-store or -fexcess-precision=… can be used to control that

[16:43] <Zoffix> nqp: say(nqp::sprintf("%7.3e", [3.1415e-20]))

[16:43] <camelia> nqp-moarvm: OUTPUT: «3.142e-20␤»

[16:43] <El_Che> AlexDaniel: pre-releases, sure.

[16:44] <El_Che> you want travis tests or packages?

[16:44] <El_Che> (I guess the former?)

[16:44] <AlexDaniel> El_Che: personally I just want to see test status on all platform that you support

[16:44] <Zoffix> I get right results from C, so I'd say it's our bug

[16:45] <El_Che> cool, I am considering adding ARM, but I need a RP first :)

[16:46] <AlexDaniel> note: release Bother El_Che to test his packages before the release

[16:46] <notable6> AlexDaniel, Noted!

[16:46] <Zoffix> "Stage parse      : 216.928" -_-

[16:48] <stmuk> well moar builds on a PI3 .. not sure I've the patience to progress further!

[16:48] <Zoffix> :)

[16:50] <Kaiepi> zoffix: rakudobot supports inline::perl5 now and won't be failing because of git branch issues anymore

[16:50] <Zoffix> Kaiepi++ awesome

[16:50] <AlexDaniel> BeastieBot: all

[16:50] <BeastieBot> [freebsd] Running complete Rakudo build and tests... (this will take a while)...

[16:51] <Kaiepi> oh it's less noisy now

[16:51] <El_Che> diner now. Course of action is wait for a .release?

[16:51] <AlexDaniel> El_Che: yes

[16:51] <El_Che> th

[16:51] <El_Che> x

[16:51] <El_Che> bbl

[16:51] <Zoffix> $ ./perl6 -e 'use nqp; say(sprintf("%7.3e\n", 3.1415e-20))'

[16:51] <Zoffix> 3.142e-20

[16:51] <AlexDaniel> well unless you want to make 2018.04 and 2018.04.1 packages :)

[16:51] <Zoffix> $ ./nqp-m -e 'say(nqp::sprintf("%7.3e\n", [3.1415e-20]))'

[16:51] <Zoffix> 3.141e-20

[16:51] <Kaiepi> it won't talk until all the commands are done instead of after each one

[16:51] <Zoffix> So looks like the bug is in how nqp parses its nums.

[16:52] <AlexDaniel> Kaiepi: ok good

[16:53] <BeastieBot> [freebsd] Complete build and tests failed. See the output at http://fpaste.scsys.co.uk/577247

[16:54] <Kaiepi> shit put make clean on the wrong line

[16:55] <Zoffix> Damn. I did fix the bug where re-numed-str in Grammar/Actions had precision issues in Rakudo, but it didn't occur to me to ask "wtf do we have two different num-ifiers; in rakudo and nqp" :(

[16:55] <Zoffix> (like $n days ago)

[16:56] <Kaiepi> BeastieBot, build

[16:56] <BeastieBot> [freebsd] Building Rakudo...

[16:56] <BeastieBot> [freebsd] Build failed. See the output at http://fpaste.scsys.co.uk/577248

[16:56] <Kaiepi> yeah i shouldn't be putting make clean there

[16:58] <Kaiepi> or rather i should be checking if make was already ran

[16:59] <Kaiepi> PufferBot, all

[16:59] <PufferBot> [openbsd] Running complete Rakudo build and tests... (this will take a while)...

[17:03] <Kaiepi> PufferBot, all

[17:03] <PufferBot> [openbsd] Running complete Rakudo build and tests... (this will take a while)...

[17:09] <Kaiepi> looks like the submodule code i added still needs some work

[17:11] <Kaiepi> for now i'll just configure rakudo and run the tests from the bot once ready

[17:13] <robertle> with the changes to the rakudo.org site, is there still a way to get a list of source packages? in the past http://rakudo.org/downloads/nqp e.g. did list all nqp source packages...

[17:14] <Zoffix> Kaiepi: FWIW last year we had a bot that could not only build rakudo but cut a release too. Maybe you'll find some of its guts useful for something: https://github.com/zoffixznet/na

[17:14] <Zoffix> robertle: what do you mean source packages?

[17:15] <El_Che> robertle: https://rakudo.perl6.org/downloads/rakudo/

[17:15] <El_Che> robertle: https://rakudo.perl6.org/downloads/nqp

[17:15] <El_Che> robertle: https://moarvm.org/releases

[17:16] <Zoffix> http://rakudo.org/downloads/nqp lists those: https://i.imgur.com/3MpFPIh.png

[17:16] <robertle> perfect, thanks

[17:19] <AlexDaniel> robertle: if you're working on debian packages, then perhaps you want to wait a bit for the point release

[17:19] <AlexDaniel> robertle: because we discovered an issue on i386

[17:19] <robertle> ah, that's what I was doing!

[17:20] <robertle> bug in what? moar?

[17:20] <Zoffix> likely in nqp

[17:20] <robertle> k

[17:20] <Zoffix> but it's not yet 100% known

[17:21] <El_Che> robertle: are you part of the debian team packaging rakudo?

[17:21] <robertle> dude, s390x and mips were weird eough, but i386! really is anyone even using that? ;)

[17:21] <robertle> El_Che: yup

[17:21] <El_Che> robertle: lots of 32-bit cloud images out there

[17:22] <El_Che> and VMs

[17:22] <AlexDaniel> robertle: we're certainly not pretesting anything on that, yes…

[17:28] <Zoffix> likely in moarvm

[17:28] <AlexDaniel> ooo fancy

[17:30] <Kaiepi> zoffix it doesn't look very useful for rakudobot since they handlle builds completely differently

[17:30] <Kaiepi> but supporting nqp stuff like it does would be pretty cool

[17:30] <Kaiepi> PufferBot, test

[17:30] <PufferBot> [openbsd] Running tests...

[17:33] <Kaiepi> bah, idk what screwed with the commands since they were working fine a couple days ago

[17:35] <stmuk> I'm seeing a couple of roast failures on FreeBSD 11/clang t/spec/S11-modules/require.t and t/spec/integration/advent2011-day23.t

[17:37] <Zoffix> t/spec/S11-modules/require.t is a frequent flopper

[17:39] <stmuk> yeah I just saw it pass in isolation

[17:42] <Kaiepi> oh lol i forgot to update the attribute names in a superclass

[17:43] <stmuk> https://github.com/perl6/roast/issues/420

[17:43] <stmuk> . o O ( 420 dude!)

[17:44] <Zoffix> :)

[17:44] <Zoffix> ok, maybe not moarvm.... Having trouble finding where num parsing in NQP is at

[17:47] <Zoffix> All I see is `method dec_number($/) { make +$/; }` so then I dumped ASTs for say(+"3213.322e0") and it showed calling numify and I traced that to MVM_coerce_smart_numify in MoarVM, but if I stick debug prints, the numified number doesn't appear anywhere.

[17:49] <AlexDaniel> stmuk: so is that one consistent?

[17:54] <El_Che> giving rakudo a go on solaris:

[17:54] <El_Che> Perl v5.10.1 required--this is only v5.8.4, stopped at ./Configure.pl line 4

[17:54] <El_Che> :)

[17:54] <Zoffix> jesus

[17:55] <El_Che> Solaris 10, not 11

[17:55] <El_Che> but even so

[17:55] <AlexDaniel> :S

[17:55] <stmuk> AlexDaniel: yes

[17:55] <nine> El_Che: is it still the 90s where you live?

[17:55] <stmuk> El_Che: I noticed go/sparc64 isn't being maintained past 1.8

[17:55] <stmuk> :)

[17:56] <El_Che> nine: it was a bug part of my life

[17:56] <El_Che> :)

[17:56] <El_Che> big

[17:56] <nine> El_Che: same here :)

[17:57] <Zoffix> ah, k, found the location

[17:58] <El_Che> ./Configure.pl --prefix=/home/claudio/rakudo/`uname -m` --backend=moar --gen-moar && /opt/csw/bin/gmake && /opt/csw/bin/gmake test && /opt/csw/bin/gmake install

[17:59] <El_Che> /usr/bin/env: No such file or directory

[17:59] <El_Che> so, we hardcode the env location it seems :)

[17:59] <AlexDaniel> stmuk: fwiw typically reports for failing tests should be filed against rakudo and not roast (after all it's rakudo that's failing the test)

[17:59] <AlexDaniel> unless there's a test that's obviously wrong

[18:01] <El_Che> we hardcode everything, it seems: if (not -X '/usr/bin/gmake') { ...

[18:02] <stmuk> AlexDaniel: ok

[18:03] <nine> I've got one reason for those unhandled "No such symbol" failures in require

[18:03] <stmuk> I was just happy it wasn't RT :)

[18:03] <Zoffix> nqp: say(5e-324)

[18:03] <camelia> nqp-moarvm: OUTPUT: «0␤»

[18:04] <Zoffix> AlexDaniel: so are there are any known *rakudo* problems stemming from the nqp test failures? Also, do nqp failures affect anything (e.g. packagers?)

[18:06] <AlexDaniel> Zoffix: we don't know yet if there are any problems, it's probably unlikely but still possible

[18:06] <AlexDaniel> Zoffix: and nqp test failures are annoying for packagers

[18:06] <AlexDaniel> well, I mean people working on packages

[18:07] <Zoffix> right

[18:07] <Zoffix> Well, it's gonna take awhile to fix it. I'd guess. :)

[18:08] <AlexDaniel> it's ok

[18:08] <Zoffix> nqp: say(.1e0+.2e0)

[18:08] <camelia> nqp-moarvm: OUTPUT: «0.30000000000000004␤»

[18:09] <AlexDaniel> I'm also interested to know what's exactly wrong with https://github.com/perl6/roast/issues/420

[18:09] <AlexDaniel> because maybe that's something we can fix in the point release also

[18:10] <AlexDaniel> assuming this failure didn't exist previously (I don't know)

[18:10] <AlexDaniel> Kaiepi: how much space do you have available for the bot?

[18:10] <AlexDaniel> Kaiepi: like, potentially?

[18:10] <AlexDaniel> Kaiepi: and can you reproduce https://github.com/perl6/roast/issues/420 by any chance?

[18:11] <Kaiepi> i could fit rakudo, nqp, moar, roast in there

[18:12] <Kaiepi> that test passes on openbsd

[18:13] <Kaiepi> lemme check on my vps

[18:13] <AlexDaniel> my definition of “fit” is slightly different :)

[18:14] <AlexDaniel> do you have at least 15G? :)

[18:14] <Kaiepi> sure

[18:14] <AlexDaniel> Kaiepi: I'm just thinking, why not run a subset of *ables on freebsd/openbsd

[18:15] <AlexDaniel> so that we can test different versions, bisect, etc.

[18:15] <AlexDaniel> maybe that's not useful enough, I don't know

[18:15] <AlexDaniel> but then bisectable itself wasn't considered useful before it was born :)

[18:17] <Kaiepi> the more important question is do i have enough ram

[18:17] <AlexDaniel> how much do you have?

[18:17] <Kaiepi> 8GB, i use 4-6 at a time when i'm not testing stuff in vms

[18:17] <Kaiepi> my vps has 2GB

[18:17] <stmuk> AlexDaniel: I've a theory about the failing test which suggests its not important

[18:18] <AlexDaniel> bisectable6: uptime

[18:18] <bisectable6> AlexDaniel, 2 days, 19 hours, 10 minutes, and 37 seconds, 326.929688MiB maxrss. This is Rakudo version 2018.03-263-gd4a6b92f3 built on MoarVM version 2018.03-126-g876aa90ee implementing Perl 6.c.

[18:19] <AlexDaniel> Kaiepi: maybe we should really focus on memory footprint… >300 MiB is indeed too much for a simple bot

[18:19] <stmuk> AlexDaniel: should be able to confirm that or not soon

[18:19] <nine> Ok, I have a patch that seems to make the Failures in S11-modules/require.t go away. But I'm not sure it's the right thing to do.

[18:19] <AlexDaniel> stmuk: cool! Thanks!

[18:19] <AlexDaniel> nine: fwiw it's not going to affect the point release so you can go ahead and commit it

[18:20] <Kaiepi> rakudobot uses 150MB of memory

[18:21] <nine> Turns out, the Failures may actually be correct: the file loaded in "require S11-modules::NoModule <&bar>;" doesn't contain a module with that name. But require always generates an indirect lookup of the module name, even when no one is interested in require's return value.

[18:21] <nine> So I've simply wrapped it in a QAST::Want to only generate that lookup when someone's....looking.

[18:23] <nine> But in the case of the other two error messages, the modules actually should exist. Yet my patch makes the Failures go away, too.

[18:23] <nine> So the patch may hide a further issue

[18:24] <AlexDaniel> mmm

[18:26] <Geth> ¦ rakudo: nxadm++ created pull request #1774: Don't hardcode gmake locations

[18:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1774

[18:31] <El_Che> AlexDaniel: could you provide e.g. https://rakudo.perl6.org/downloads/rakudo/rakudo-prerelease.tar.gz file as canary? The repo would download every day if there, otherwise you can always trigger it

[18:31] <stmuk> grrr I need a Threadripper

[18:31] <El_Che> does that sound reasonable?

[18:31] <AlexDaniel> El_Che: yes

[18:32] <AlexDaniel> El_Che: maybe not on that url but I'll let you know once I have something

[18:33] <El_Che> sure

[18:33] <Zoffix> .tell jnthn we need an "executive" decision: **nqp**'s numerics are parsed with `MVM_coerce_s_n`. It has precision issues, such as parsing 3.145e-20 into 3.14149999999999969e-20 instead of the closest representable num 3.14150000000000029e-20 and it also can't handle denormals (5e-324 parses as 0). This makes 2 sprintf nqp tests fail on 32bit boxes and it's currently proposed to fix that and make a point

[18:33] <yoleaux> Zoffix: I'll pass your message to jnthn.

[18:33] <Zoffix> release (they didn't fail before likely due to limited precision num stringification in the past).... Looking at fixing it, I'm assuming we'll get hit with the same 14x perf loss we did with fixing the same problem in HLL nums. So I'm wondering: is it even worth it? Rakudo's nums aren't affected so it's only NQP num parsing that's affected. Is anything else using `MVM_coerce_s_n`? I'm kinda thinking of

[18:33] <Zoffix> fuding those failing tests a bit and leaving this under the rug until any real problems actually show up due to this. What do you think?

[18:33] <Zoffix> .tell jnthn rest of that message: https://irclog.perlgeek.de/perl6-dev/2018-04-25#i_16094868 (it's fairly long)

[18:33] <yoleaux> Zoffix: I'll pass your message to jnthn.

[18:33] <El_Che> also: do you want a prelease file for moarvm and nqp or will rakudo download the correct one with --gen-moar?

[18:34] <Geth> ¦ rakudo: 666eb3abe7 | (Stefan Seifert)++ | src/Perl6/Actions.nqp

[18:34] <Geth> ¦ rakudo: Fix spurious unhandled Failures caused by require

[18:34] <Geth> ¦ rakudo:

[18:34] <Geth> ¦ rakudo: We compiled a require unconditionally to the actual module loading code plus

[18:34] <Geth> ¦ rakudo: an indirect lookup of the loaded module. If the loaded comp unit does not

[18:34] <Geth> ¦ rakudo: actually contain a module with that name the lookup would fail. However we

[18:34] <Geth> ¦ rakudo: don't sink require's return value so the Failure would escape.

[18:34] <Geth> ¦ rakudo: Fix by only compiling the indirect lookup when someone's actually interested

[18:34] <Geth> ¦ rakudo: in the result.

[18:34] <Geth> ¦ rakudo: Seems to fix GH #1332

[18:34] <synopsebot> RAKUDO#1332 [open]: https://github.com/rakudo/rakudo/issues/1332 [⚠ blocker ⚠] Spurious Failures in successful `require`

[18:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/666eb3abe7

[18:34] <Zoffix> jnthn: to clarify: it's **nqp**'s spritnf fails because of how the num argument is given to it. It doesn't affect rakudo's sprintf's behaviour

[18:35] <Zoffix> s/how .+? \. <(/ is parsed/;

[18:35] <AlexDaniel> El_Che: I think it should just use --gen-moar to pull the right one, yes

[18:35] <El_Che> cool

[18:35] <El_Che> preparing a travis file

[18:36] <Zoffix> s/fuding/fudging/;

[18:36] <El_Che> repo should be this one: https://github.com/nxadm/rakudo-pkg-canary

[18:41] <stmuk> I've updated the 420 issue .. its just a simple path or cwd issue with running roast under star and not OS related

[18:42] <stmuk> I can fix in a few hours if noone beats me to it

[18:44] <AlexDaniel> okay

[18:45] <Zoffix> camelia: help

[18:45] <camelia> Zoffix: Usage: <(nqp-jvm|debug-cat|rakudo-moar|star-m|prof-m|rakudo-jvm|nqp-moarvm|nqp-js|p5-to-p6|sm|nqp-mvm|j|nqp-m|star|perl6|r-jvm|rakudo|rj|p6|m|r-m|r|master|nqp|p56|nqp-q|rm|r-j)(?^::\s(?!OUTPUT)) $perl6_program>

[18:45] <Zoffix> nqp-jvm: test

[18:45] <camelia> nqp-jvm: OUTPUT: «Error occurred during initialization of VM␤Unable to allocate 2648KB card tables for parallel garbage collection for the requested 1355776KB heap.␤Error: Could not create the Java Virtual Machine.␤Error: A fatal exception has occurred. Program will exit.␤»

[18:46] <Zoffix> uuh... ok then

[18:49] <stmuk> http://pl6anet.org/drop/rakudo-star-2018.04-pre0.tar.gz

[18:49] <stmuk> RC0 to follow after the NQP fix

[18:50] <Zoffix> or maybe I'm talking shit... strtod("3.141500", NULL) parses stuff just fine

[18:51] <Zoffix> or use the Gay atoa

[18:52] <Zoffix> :)

[18:52] <Zoffix> As in David M. Gay's dtoa.c

[18:53] <Zoffix> oh wait, that's going the other way.

[18:55] <jnthn> Zoffix: So far as NQP goes, honestly, nums are really unimportant. :)

[18:55] <jnthn> Zoffix: Compilers are all ints and pointers, and NQP's primary purpose is writing those and related things.

[18:55] <jnthn> I don't think taking the performance hit to get things correct would actually affect anything negatively.

[18:56] <jnthn> And if we can unify the code-path that NQP and Rakudo use, that's a win

[18:56] <Zoffix> Cool. Then I'll fix it to give correct answers.

[18:57] <jnthn> Zoffix++

[18:57] <jnthn> I've kinda pondered making NQP do int math by default unless you're actually dealing with stuff declared as `num`

[18:59] <timotimo> yeah, we had fun times when things were going with num all the time

[19:00] <timotimo> nqp's still not terribly good at that

[19:07] <Kaiepi> ok so the reason rakudobot wasn't working earlier was because i handled abstracting the async logic badly

[19:07] <Kaiepi> from a couple days ago

[19:10] <Kaiepi> locking mutexes inside promises are how true experts handle threading

[19:12] <timotimo> if you're using a "start"ed code block just as a lightweight worker thread, that would be fine

[19:15] <Kaiepi> that's what i use them for, though i'm joking about using locks from inside the promise

[19:18] <Kaiepi> PufferBot, all

[19:18] <PufferBot> [openbsd] Running complete Rakudo build and tests... (this will take a while)...

[19:40] <Kaiepi> ok nothing failed, even though it disconnected in the middle of the stress test

[19:44] <stmuk> AlexDaniel:  The test file README.md is absent from 6.c-errata (which is used by Rakudo Star) and should be added.

[19:49] <AlexDaniel> stmuk: ok but there's “README”?

[19:50] <travis-ci> Rakudo build passed. Zoffix Znet 'Merge pull request #1766 from MasterDuke17/condense_IO_Path.new_multis

[19:50] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/371208963 https://github.com/rakudo/rakudo/compare/666eb3abe7e6...93baa29011a0

[19:51] <stmuk> AlexDaniel: if you grep for README.md in 6.c-errata its used by a number of tests but the file itself is abscent on that branch

[19:51] <AlexDaniel> ohhh…

[19:55] <AlexDaniel> IMO it would be better to fix those tests to not use README file whatsoever

[19:55] <AlexDaniel> otherwise it's too fragile

[19:55] <stmuk> I'm not sure of the best fix

[19:55] <stmuk> I imagine its basically that errata and master are desynced

[19:58] <AlexDaniel> stmuk: just create a temp file, write some data into it and then read from it

[19:58] <AlexDaniel> the test itself is from this post: https://perl6advent.wordpress.com/2011/12/23/day-23-idiomatic-perl-6/

[19:58] <stmuk> or just use LICENCE

[19:59] <lizmat> m: dd chdir "perl5"  # works as expected

[19:59] <camelia> rakudo-moar 93baa2901: OUTPUT: «IO::Path.new("/home/camelia/perl5", :SPEC(IO::Spec::Unix), :CWD("/home/camelia"))␤»

[19:59] <lizmat> m: dd "perl5".IO.chdir  # does not, Zoffix, opinions ?

[19:59] <camelia> rakudo-moar 93baa2901: OUTPUT: «Cannot resolve caller chdir(IO::Path: ); none of these signatures match:␤    (IO::Path:D $: $path, :$test!, *%_)␤    (IO::Path:D $: IO $path, |c is raw)␤    (IO::Path:D $: $path is copy, :$d = Bool::True, :$r, :$w, :$x, *%_)␤  in block <unit> …»

[19:59] <lizmat> feels to me there's a .chdir candidate missing in IO::Path ?

[20:00] <stmuk> AlexDaniel: whats the normal workflow with the test branches?

[20:01] <Zoffix> lizmat: we explicitly removed it, didn't we?

[20:01] <AlexDaniel> stmuk: commit to master, if there's a good reason for that change to be in 6.c-errata then someone will have to cherry-pick it

[20:01] <AlexDaniel> stmuk: if that's what you're asking

[20:02] <Zoffix> e: dd chdir "perl5".IO

[20:02] <evalable6> Zoffix, rakudo-moar 93baa2901: OUTPUT: «Failure.new(exception => X::IO::Chdir.new(path => "/home/bisectable/git/whateverable/perl5", os-error => "does not exist"), backtrace => Backtrace.new)␤»

[20:02] <Zoffix> e: dd chdir ".".IO

[20:02] <evalable6> Zoffix, rakudo-moar 93baa2901: OUTPUT: «IO::Path.new("/home/bisectable/git/whateverable", :SPEC(IO::Spec::Unix), :CWD("/home/bisectable/git/whateverable"))␤»

[20:02] <Zoffix> e: dd ".".IO.chdir

[20:02] <evalable6> Zoffix, rakudo-moar 93baa2901: OUTPUT: «(exit code 1) Cannot resolve caller chdir(IO::Path: ); none of these signatures match:␤   …»

[20:02] <evalable6> Zoffix, Full output: https://gist.github.com/27edd966e6cb48c584447399cf5e1473

[20:02] <stmuk> so I guess cherry pick README.md to 6.c-errata?

[20:03] <[Coke]> Zoffix: All the payments & tax implications are handled by the treasurer. I will send the two of you an email to start the thrad.

[20:03] <[Coke]> *thread

[20:04] <AlexDaniel> stmuk: well, we don't want to have that README.md in 6.c-errata actually, they're deliberately different

[20:04] <AlexDaniel> they can both be .md though

[20:04] <Zoffix> lizmat: ah, now I see. We used to have .chdir that takes a path to chdir to: https://github.com/rakudo/rakudo/blob/master/src/core/IO/Path.pm6#L404-L457  . And that one is now deprecated. And just a "foo".IO.chdir without args. Yeah, I guess it makes sense as an alternative to the &chdir interface—except for the whole business of it clashing with the deprecated version of .chdir

[20:04] <Zoffix> [Coke]: thanks.

[20:04] <AlexDaniel> so one option is to markdownify 6.c-errata README of course, but I really think that this test should be changed

[20:05] <AlexDaniel> it's just not nice to assume that some semirandom file exists in the directory you're in…

[20:05] <stmuk> or change every reference to README.md in master to LICENSE and cherry pick to errata?

[20:05] <lizmat> Zoffix: ah, so a bare .chdir() is deprecated in Perl 6

[20:05] <lizmat> ?

[20:05] <AlexDaniel> yes, that's possible

[20:05] <Zoffix> AlexDaniel: stmuk just create a different dummy file for the test? `use lib $?FILE.IO.parent(2).add: 'packages'; use Test::Util; my $test-file := temp-file :content("blah\nblah\nblah\n")`

[20:06] <Zoffix> lizmat: I think it never existed. It's the .chdir($path-to-chdir-to) is deprecated.

[20:06] <AlexDaniel> Zoffix: I think you meant make-temp-file

[20:06] <Zoffix> yeah

[20:06] <Zoffix> Or even just use $?FILE

[20:07] <Zoffix> m: say $?FILE

[20:07] <camelia> rakudo-moar 93baa2901: OUTPUT: «<tmp>␤»

[20:07] <Zoffix> m: say $?FILE.^name

[20:07] <camelia> rakudo-moar 93baa2901: OUTPUT: «Str␤»

[20:07] <AlexDaniel> m: say $?FILE.chop

[20:07] <camelia> rakudo-moar 93baa2901: OUTPUT: «/tmp/evalbot-file-dAYzMfFFa␤»

[20:07] <AlexDaniel> *magic*

[20:07] <stmuk> I suppose given the different branches contain different files we should discourage use of such hard coded filenames anyway

[20:07] <AlexDaniel> yes

[20:07] <stmuk> $?FILE sounds easy

[20:29] <AlexDaniel> stmuk: I assume a PR is coming?

[20:30] <stmuk> yes I can do that

[20:30] <AlexDaniel> stmuk++

[21:10] <Geth> ¦ roast: stmuk++ created pull request #421: replace use of README.md (which doesn't exist on 6.c-errata) by $?FILE

[21:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/421

[21:12] <samcv> i merged the MoarVM PR that randomizes our hash seed. i'll bump nqp and rakudo and we can run toaster and see if anything fails

[21:12] <stmuk> note packages/RT125245.pm doesn't actually test anything

[21:12] <synopsebot> RT#125245 [resolved]: https://rt.perl.org/Ticket/Display.html?id=125245 [BUG] Pre-compiled MoarVM-code segfaults on type-checking

[21:20] <jnthn> stmuk: It's used from another test file to make sure the subset type doesn't explode on type-check in pre-comp

[21:26] <stmuk> jnthn: ok I see S10-packages/precompilation.t but I am surprised it doesn't fail on errata since the file its based on doesn't exist on that branch

[21:29] <samcv> hmm is Geth taking a nap?

[21:29] <samcv> lizmat: anyway rakudo and nqp are bumped

[21:29] <lizmat> samcv++

[21:30] <stmuk> similarly I wouldn't expect integration/advent2011-day24.t to pass on errata

[21:34] <stmuk> anyway I don't know what's going on in either case but seems a code smell to me

[21:42] <El_Che> there seem to be some netwerk issues at the docker hub

[21:42] <El_Che> AlexDaniel: I have a +- feature complete canary, waiting on the Docker hub :)

[22:07] <AlexDaniel> El_Che: alright, let's try it maybe: https://rakudo.perl6.org/downloads/prerelease/

[22:07] <AlexDaniel> these files right there are identical to the release

[22:07] <AlexDaniel> right now

[22:08] * AlexDaniel kicks off releasable to generate new ones from head

[22:09] <El_Che> AlexDaniel: I made it location/version/name independent: https://github.com/nxadm/rakudo-pkg-canary/blob/master/.travis.yml#L4

[22:10] <AlexDaniel> errr that looks hardcoded?

[22:10] * AlexDaniel doesn't understand

[22:11] <dogbert17> ZOFFLOP: t/spec/S07-hyperrace/basics.t

[22:11] <El_Che> well, you can put "https://rakudo.perl6.org/downloads/prerelease/rakudo-prerelease.tar.gz" in that env value and leave it there, and push the build by touching something else

[22:11] <El_Che> or if you want to test something else, you can change the url

[22:11] <El_Che> that's also a push

[22:12] <El_Che> whatever you do, every 24h a build is triggered from master

[22:12] <El_Che> (or you can use a branch with a different url, etc, etc)

[22:18] <AlexDaniel> El_Che: sorry, so what should I do exactly now?

[22:18] <AlexDaniel> I thought I'd be pushing tars to that url and travis will be triggered daily

[22:18] <El_Che> (it doesn't work yet, buildig imgs and removing some errors)

[22:19] <El_Che> AlexDaniel: yes, that will happen

[22:19] <AlexDaniel> El_Che: oh ok

[22:19] <El_Che> but you can change the URL in case you want to test something else

[22:19] <El_Che> I put the 03 version there so I can test if it works :)

[22:20] <AlexDaniel> anyway, I added `upload-canary` target to the release sakefile (WHICH I SHOULD PUBLISH DAMMIT), so that's gonna be very easy from now on

[22:20] <El_Che> if you're releasing you can update a bogus file to trigger the build

[22:21] <AlexDaniel> El_Che: can't I just hit restart in travis?

[22:21] <AlexDaniel> but that's only going to work when I get push access to that repo right?

[22:21] <El_Che> AlexDaniel: I haven't figured out how to give you access

[22:21] <Geth> ¦ rakudo: 6c1983a97c | (Samantha McVey)++ | tools/build/NQP_REVISION

[22:21] <Geth> ¦ rakudo: Bump MoarVM/nqp

[22:21] <Geth> ¦ rakudo:

[22:21] <Geth> ¦ rakudo: MoarVM Changes: 2018.04..2018.04-16-g24a91a460

[22:21] <Geth> ¦ rakudo: 24a91a460 use official API for thread lock count

[22:21] <Geth> ¦ rakudo: ffdd62d48 debugserver: allow unrecognized fields in messages

[22:21] <Geth> ¦ rakudo: b87b03e23 throw out superfluous debugspam

[22:21] <Geth> ¦ rakudo: 7d83f32bf Make a few of the MVM_getrandom comments more clear

[22:22] <Geth> ¦ rakudo: <…commit message has 9 more lines…>

[22:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6c1983a97c

[22:22] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.04...2018.04-1-gbc0b5e100

[22:22] <El_Che> maybe once added to collaborators or to an org

[22:22] <samcv> looks like geth is done napping

[22:22] <El_Che> not clear yet

[22:22] <Zoffix> samcv: looks like some glitch. Re-delivering the hook still gave 500, but restarting the bot made it work again

[22:24] <Geth> ¦ nqp: bc0b5e100d | (Samantha McVey)++ | tools/build/MOAR_REVISION

[22:24] <Geth> ¦ nqp: Bump MoarVM

[22:24] <Geth> ¦ nqp:

[22:24] <Geth> ¦ nqp: Changes: 2018.04..2018.04-16-g24a91a460

[22:24] <Geth> ¦ nqp: 24a91a460 use official API for thread lock count

[22:24] <Geth> ¦ nqp: ffdd62d48 debugserver: allow unrecognized fields in messages

[22:24] <Geth> ¦ nqp: b87b03e23 throw out superfluous debugspam

[22:24] <Geth> ¦ nqp: 7d83f32bf Make a few of the MVM_getrandom comments more clear

[22:24] <Geth> ¦ nqp: <…commit message has 9 more lines…>

[22:24] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/bc0b5e100d

[22:24] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.04...2018.04-16-g24a91a460

[22:29] <El_Che> AlexDaniel: do repos on the perl6 or rakudo org have shared access to travis?

[22:30] <AlexDaniel> yes

[22:30] <El_Che> then maybe moving the canary to an org may be the way to go then

[22:30] <AlexDaniel> I think givin Admin access should also work maybe

[22:31] <AlexDaniel> oh, I guess there's no such thing

[22:31] <El_Che> I only see a Collaborators setting (give push access)

[22:31] <El_Che> and transfer ownership

[22:31] <AlexDaniel> right… that's for non-org repos

[22:31] <AlexDaniel> move it to perl6 org then

[22:32] <El_Che> ok, I will when it works properly

[22:33] <AlexDaniel> ♥

[22:33] <El_Che> however, I need to test that. The containers are built from the link with my github user on github.

[22:33] <El_Che> I'll figure it out

[22:35] <AlexDaniel> samcv: is there a test failing somewhere?

[22:35] <AlexDaniel> t/nqp/106-unicodenames.t ............... Failed 1/31 subtests

[22:35] <samcv> yeah i haven't bumped moarvm yet

[22:36] <samcv> i just made a fix for that unicode bug

[22:40] <samcv> oh oops yeah actually that is my mistake

[22:41] <samcv> but yeah i have not yet bumped moarvm yet so, will have that fixed before i bump it with unicode fix

[23:13] <samcv> j: 0x135CD.uniname.say

[23:13] <camelia> rakudo-jvm 6c1983a97: OUTPUT: «<unassigned>␤»

[23:14] <samcv> j: 0x17000.uniname.say

[23:14] <camelia> rakudo-jvm 6c1983a97: OUTPUT: «<unassigned>␤»

[23:14] <samcv> j: 0x1B170.uniname.say

[23:14] <camelia> rakudo-jvm 6c1983a97: OUTPUT: «<unassigned>␤»

[23:26] <lizmat> hmm... after the last update of rakudo, it looks like mi6 (App::mi6) is broken :-(

[23:27] <lizmat> https://gist.github.com/lizmat/f7ce01f608c0ef8ab7d560ce2b4286ae

[23:27] * lizmat goes to bed

[23:28] <timotimo> wow, that looks interalsy

[23:29] <samcv> timotimo: maybe related to the NFA? i'm getting asan errors on that

[23:29] <samcv> since jnthn's recent merge

[23:32] <AlexDaniel> but I did not see that in toaster? Hmm…

[23:33] <AlexDaniel> it was failing on 2018.03 :)

[23:34] <AlexDaniel> or at least it did fail in that particular case…

[23:34] <AlexDaniel> and then it was green on 2018.03-260-gfa979c922

[23:35] <AlexDaniel> well, if we're talking HEAD, then it's different :)

[23:42] <samcv> AlexDaniel: it was merged after release i thought?

[23:42] <AlexDaniel> yea

[23:56] <Geth> ¦ nqp: 81373e88f2 | (Samantha McVey)++ | 2 files

[23:56] <Geth> ¦ nqp: Bump MoarVM and add tests for the Unicode name changes

[23:56] <Geth> ¦ nqp:

[23:56] <Geth> ¦ nqp: Update the previous test which was incorrect and was failing after the

[23:56] <Geth> ¦ nqp: change. Add new tests for Tangut and Nushi codepoint names as well.

[23:56] <Geth> ¦ nqp:

[23:56] <Geth> ¦ nqp: Changes: 2018.04-16-g24a91a460..2018.04-18-ge7d79d869

[23:56] <Geth> ¦ nqp: e7d79d869 Fix issues with previous commit overzealously removing brackets

[23:56] <Geth> ¦ nqp: 5728e1f39 Fix CJK Unified Ideograph and other derived Unicode names

[23:56] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/81373e88f2

[23:57] <Geth> ¦ rakudo: 94b4783dfc | (Samantha McVey)++ | 2 files

[23:57] <Geth> ¦ rakudo: Bump MoarVM/NQP and update Unicode name tests for changes

[23:57] <Geth> ¦ rakudo:

[23:57] <Geth> ¦ rakudo: MoarVM Changes: 2018.04-16-g24a91a460..2018.04-18-ge7d79d869

[23:57] <Geth> ¦ rakudo: e7d79d869 Fix issues with previous commit overzealously removing brackets

[23:57] <Geth> ¦ rakudo: 5728e1f39 Fix CJK Unified Ideograph and other derived Unicode names

[23:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/94b4783dfc
