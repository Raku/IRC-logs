[00:10] <AlexDaniel> [Tux]: soo… what's up with that spike?

[01:54] <AlexDaniel> reportable6: 2018-03-26T00:00:00Z 2018-04-02T00:00:00Z

[01:54] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[01:54] <reportable6> AlexDaniel, https://gist.github.com/334dff3a00592c29e1b8fb7271cfe502

[02:55] <Geth_> ¦ rakudo: MasterDuke17++ created pull request #1682: Micro-optimize List.roll($n)

[02:55] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1682

[02:58] <Geth_> ¦ rakudo: c71ff6642d | (Daniel Green)++ | src/core/List.pm6

[02:58] <Geth_> ¦ rakudo: Micro optimize List.roll($n)

[02:58] <Geth_> ¦ rakudo:

[02:58] <Geth_> ¦ rakudo: Lexicals are faster than private attributes.

[02:58] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c71ff6642d

[02:58] <Geth_> ¦ rakudo: f1b9c7daba | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | src/core/List.pm6

[02:58] <Geth_> ¦ rakudo: Merge pull request #1682 from MasterDuke17/micro_optimize_Lists_roll

[02:58] <Geth_> ¦ rakudo:

[02:58] <Geth_> ¦ rakudo: Micro-optimize List.roll($n)

[02:58] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f1b9c7daba

[04:03] <Geth_> ¦ nqp: dd513ea040 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[04:03] <Geth_> ¦ nqp: [MoarVM Bump] Brings 9 commits

[04:03] <Geth_> ¦ nqp:

[04:03] <Geth_> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03-59-gfc1bb31...2018.03-68-ged4201e

[04:03] <Geth_> ¦ nqp: ed4201e debugserver: cut module names out of filenames

[04:03] <Geth_> ¦ nqp: 27a20d2 Merge pull request #826 from MoarVM/spesh-refactor-iffy

[04:03] <Geth_> ¦ nqp: 00a8e84 [Spesh] fix negated spesh of known type

[04:03] <Geth_> ¦ nqp: e7f985a [Spesh] Add optimize_unbox

[04:03] <Geth_> ¦ nqp: <…commit message has 5 more lines…>

[04:03] <Geth_> ¦ nqp: review: https://github.com/perl6/nqp/commit/dd513ea040

[04:03] <Geth_> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03-59-gfc1bb31...2018.03-68-ged4201e

[04:03] <Geth_> ¦ rakudo: affd5befbe | (Zoffix Znet)++ | tools/build/NQP_REVISION

[04:03] <Geth_> ¦ rakudo: [NQP Bump] Brings 3 commits

[04:03] <Geth_> ¦ rakudo:

[04:03] <Geth_> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.03-44-g9cc4fc1...2018.03-47-gdd513ea

[04:03] <Geth_> ¦ rakudo: dd513ea [MoarVM Bump] Brings 9 commits

[04:03] <Geth_> ¦ rakudo: 32fd547 Profiler Template: Allocations modal close by btn

[04:03] <Geth_> ¦ rakudo: 6b49767 [JVM] Fix nqp::takedispatcher in non-void context

[04:03] <Geth_> ¦ rakudo:

[04:03] <Geth_> ¦ rakudo: <…commit message has 10 more lines…>

[04:03] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/affd5befbe

[04:03] <Geth_> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-44-g9cc4fc1...2018.03-47-gdd513ea

[06:00] <Geth_> ¦ rakudo: 232c664238 | usev6++ | src/core/Exception.pm6

[06:00] <Geth_> ¦ rakudo: Remove two unnecessary calls to nqp::p6bool()

[06:00] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/232c664238

[07:29] <AlexDaniel> so… I guess I'll add some discouraging messages to release_guide.pod for those who want to follow the process manually

[07:30] <AlexDaniel> I'm idling on dev channels of other langs, and I do backlog a bit when I have some time to waste

[07:31] <AlexDaniel> apparently someone found a vim swap file in the released rust src tar

[07:31] <AlexDaniel> xD

[08:00] <Geth_> ¦ rakudo: 916b41a219 | (Aleks-Daniel Jakimenko-Aleksejev)++ | docs/release_guide.pod

[08:00] <Geth_> ¦ rakudo: Discourage manual releasing

[08:00] <Geth_> ¦ rakudo:

[08:00] <Geth_> ¦ rakudo: Because it's prone to human error and this was demonstrated countless

[08:00] <Geth_> ¦ rakudo: times (and we've been using tools for more than a year now).

[08:00] <Geth_> ¦ rakudo:

[08:00] <Geth_> ¦ rakudo: This is the first step in improving the document to be more useful for

[08:00] <Geth_> ¦ rakudo: those who rely on tools. More commits will follow.

[08:00] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/916b41a219

[08:01] <Geth_> ¦ nqp: e095adcfe4 | (Jeremy Studer)++ | src/vm/moar/profiler/template.html

[08:01] <Geth_> ¦ nqp: Profiler Template: Sort by time in call graph

[08:01] <Geth_> ¦ nqp:

[08:01] <Geth_> ¦ nqp: Order routines in call graph tab by time instead of percent. Fixes

[08:01] <Geth_> ¦ nqp: subtle misordering of routines.

[08:01] <Geth_> ¦ nqp: review: https://github.com/perl6/nqp/commit/e095adcfe4

[08:09] <AlexDaniel> ( https://github.com/perl6/whateverable/issues/300 )

[08:44] <[Tux]> sh: line 1: 18453 Segmentation fault      (core dumped) perl6 -Ilib test.pl < empty.csv 2> /dev/null

[08:54] <[Tux]> Rakudo version 2018.03-148-g916b41a21 - MoarVM version 2018.03-68-ged4201e92

[08:54] <[Tux]> csv-test-xs-20      0.449 -  0.455

[08:54] <[Tux]> csv-ip5xs           0.886 -  0.900

[08:54] <[Tux]> test-t --race       1.066 -  1.196

[08:54] <[Tux]> test-t              2.448 -  2.469

[08:54] <[Tux]> csv-ip5xs-20        8.525 -  8.555

[08:54] <[Tux]> test                8.952 -  9.400

[08:54] <[Tux]> test-t-20 --race   15.068 - 15.931

[08:54] <[Tux]> csv-parser         36.790 - 37.435

[08:54] <[Tux]> test-t-20          43.102 - 44.153

[09:19] <pmurias> m: use nqp;say nqp::typeparameterized(Str:U);

[09:19] <camelia> rakudo-moar 916b41a21: OUTPUT: «Cannot perform this operation on an uninstantiated definite type␤  in block <unit> at <tmp> line 1␤␤»

[09:36] <AlexDaniel> [Tux]: what is this segfault? Can you rakudobug it?

[09:36] <[Tux]> I was unable to reproduce

[09:59] <AlexDaniel> [Tux]: did you try running it in a loop?

[10:00] <[Tux]> no

[10:00] <AlexDaniel> do it please

[10:00] <AlexDaniel> or rakudobug the steps

[10:01] <AlexDaniel> *especially* if you've never seen this segfault before

[10:02] <[Tux]> ran it in a 110x loop: no core dump

[10:02] <AlexDaniel> and also given that we'll have rakudo star based on the next release

[10:02] <lizmat> Files=1238, Tests=76257, 316 wallclock secs (15.63 usr  5.59 sys + 2181.46 cusr 220.39 csys = 2423.07 CPU)

[10:03] <AlexDaniel> then maybe it needs some CPU load?

[10:03] <AlexDaniel> [Tux]: please rakudobug anyway

[10:03] <AlexDaniel> maybe dogbert17++ will use his magic to pull the segfault out of it

[10:27] <[Tux]> Rakudo version 2018.03-148-g916b41a21 - MoarVM version 2018.03-68-ged4201e92

[10:27] <[Tux]> csv-test-xs-20      0.471 -  0.481

[10:27] <[Tux]> csv-ip5xs           0.898 -  0.961

[10:27] <[Tux]> test-t --race       1.042 -  1.055

[10:27] <[Tux]> test-t              2.400 -  2.424

[10:27] <[Tux]> csv-ip5xs-20        8.569 -  8.622

[10:27] <[Tux]> test                8.994 -  9.135

[10:27] <[Tux]> test-t-20 --race   14.994 - 15.403

[10:27] <[Tux]> csv-parser         36.310 - 36.368

[10:27] <[Tux]> test-t-20          42.898 - 42.912

[10:27] <[Tux]> I started all over, removing all .precomp etc, but no core dumps

[12:13] <Geth> ¦ rakudo: 7327a33a88 | (Elizabeth Mattijsen)++ | src/core/List.pm6

[12:13] <Geth> ¦ rakudo: Further micro-optimize List.roll($n)

[12:13] <Geth> ¦ rakudo:

[12:13] <Geth> ¦ rakudo: - make decrementing part of the condition

[12:13] <Geth> ¦ rakudo: - save the final todo value in the iterator

[12:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7327a33a88

[13:10] <dogbert17> ZOFFLOP: t/spec/S17-supply/syntax.t, tests #66 and #83 when run under some stress

[13:13] <AlexDaniel> .

[13:13] <AlexDaniel> m: sub s { }; my $x = ‘abc’; $x ~~ s/.//

[13:13] <camelia> rakudo-moar 7327a33a8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed postfix call␤at <tmp>:1␤------> 3sub s { }; my $x = ‘abc’; $x ~~ s/.7⏏5//␤»

[13:13] <AlexDaniel> … should it be this way?

[13:26] <dogbert17> ZOFFLOP: t/spec/S32-list/pick.t

[13:27] <dogbert17> test #299: MoarVM panic: Must not GC when in the specializer/JIT

[13:31] <timotimo> that's without my branch?

[13:31] <dogbert17> yup

[13:33] <dogbert17> gdb says all :) #7  0xb7be89fc in fix_wval (inlinee=<optimized out>, to_fix=0xb508cf90, to_fix=0xb508cf90, inliner=<optimized out>, tc=<optimized out>) at src/spesh/inline.c:227

[13:34] <dogbert17> your branch would probably fix this error

[13:34] <timotimo> yeah, that's really the only place that can happen

[13:34] <timotimo> it's supposed to :)

[13:34] <timotimo> but i seem to recall it makes something worse somehow?

[13:34] <dogbert17> but we had this valgrind problem ...

[13:35] <dogbert17> I'm on 32-bit atm, I can give your branch a try and see what happens

[13:38] <dogbert17> the valgrind problem pops up immediately

[13:41] <timotimo> did you unroot things some more and got a proper line number?

[13:43] <dogbert17> I only unrooted the stuff you showed me yesterday

[13:44] <timotimo> i got the right line and an idea what's up

[13:44] <dogbert17> yay

[13:44] <dogbert17> huggable csv

[13:45] <dogbert17> huggable: csv

[13:45] <huggable> dogbert17, https://github.com/Tux/CSV (see `bench csv` for how to run bench)

[13:45] <dogbert17> huggable: bench csv

[13:45] <huggable> dogbert17, export PATH=`pwd`/install/bin:$PATH; cd CSV; for i in $(seq 1 10000); do echo 'hello,","," ",world,"!"'; done > /tmp/hello.csv; time perl6 -Ilib -MText::CSV test-t.pl </tmp/hello.csv

[13:47] <timotimo> dogbert17: try this

[13:47] <timotimo> AFKBBL

[13:47] <timotimo> (commit pushed to moarvm)

[13:47] <dogbert17> :)

[13:48] <timotimo> maybe we'll merge it then

[13:50] <dogbert17> ok, gimme a sec :)

[13:50] <dogbert17> the commit comment looked promising :)

[13:53] <dogbert17> timotimo: good news, the valgrind problem disappeared

[14:14] <timotimo> do we use ZOFFLOP to refer to everybody?

[14:20] <dogbert17> I do :)

[14:21] <dogbert17> it can be clever if someone want's to grep the logs for failing test stuff

[14:22] <dogbert17> timotimo: your fix worked, perhaps you should merge ...

[14:28] <AlexDaniel> releasable6: status

[14:28] <releasable6> AlexDaniel, Next release in ≈19 days and ≈4 hours. 4 blockers. 0 out of 149 commits logged (⚠ 9 warnings)

[14:28] <releasable6> AlexDaniel, Details: https://gist.github.com/7151b08e51b61bce5301a57cf1498f58

[14:29] <AlexDaniel> ZofBot: hey look ↑, shitty bot is not shitty anymore!

[14:29] <ZofBot> AlexDaniel, And he said, “In there,” and he pointed and there was a big room with a glass window on the other side of the train station door, and then he said, “Now, are you sure you know what you’re doing?” And said, “Yes

[14:29] <AlexDaniel> ZofBot: yes what?

[14:29] <ZofBot> AlexDaniel, huh? there is no conditional there though?

[16:16] <pmurias> jnthn: do you have any hints why different modules get their own unique Str:U *unless* they use Hash[Str:U]?

[16:17] <jnthn> pmurias: Umm...no, that sounds odd :S

[16:21] <pmurias> how should I nopaste multiple files?

[16:21] <jnthn> gist can handle multiple files

[16:25] <pmurias> https://gist.github.com/pmurias/533d8fe7c624fb8982109b13e1146b48

[16:44] <pmurias> jnthn: that behavior is a bug?

[16:44] <jnthn> Looking

[16:45] <jnthn> pmurias: hmm...I thought coercion types were done with the parametric extensions

[16:45] <jnthn> And so it should be interned at module load time

[17:15] <lizmat> notable6: weekly

[17:15] <notable6> lizmat, 1 note: 2018-03-29T20:49:14Z <AlexDaniel>: https://gist.github.com/niner/a959cb893820446bfb7177392d4c16cb

[17:16] <AlexDaniel> wait what's that

[17:16] <lizmat> notable6: weekly: reset

[17:16] <notable6> lizmat, No notes for “weekly:”

[17:16] <AlexDaniel> xD

[17:16] <lizmat> notable6: weekly reset

[17:16] <notable6> lizmat, Moved existing notes to “weekly_2018-04-02T17:16:26Z”

[17:16] <lizmat> AlexDaniel: it's a WIP of nine

[17:16] <AlexDaniel> ah

[17:16] <lizmat> I guess not ready for the Weekly yet

[17:17] <lizmat> otherwise he would have blogged about it I think  :-)

[17:17] <pmurias> jnthn: they are, but it doesn't work for some reason: https://github.com/rakudo/rakudo/blob/master/src/Perl6/Metamodel/DefiniteHOW.nqp#L32

[17:17] <lizmat> reportable6: 2018-03-26T00:00:00Z 2018-04-02T00:00:00Z

[17:17] <reportable6> lizmat, OK, working on it! This may take up to 40 seconds

[17:18] <AlexDaniel> I'm FASTER!!! https://gist.github.com/334dff3a00592c29e1b8fb7271cfe502

[17:18] <AlexDaniel> lizmat: by the way, there's also a monthly: https://gist.github.com/45a2df11156178a841f839d77296f174

[17:18] <reportable6> lizmat, https://gist.github.com/e9eb66568eb247ab3836014ced8c314d

[17:41] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/04/02/2018-14-a-perl-6-idea/

[19:39] <dogbert17> m: say sprintf "%.15g", log(2)

[19:39] <camelia> rakudo-moar 7327a33a8: OUTPUT: «0.693147180559945␤»

[19:39] <dogbert17> m: say sprintf "%.16g", log(2)

[19:39] <camelia> rakudo-moar 7327a33a8: OUTPUT: «0.6931471805599454␤»

[19:39] <dogbert17> m: say sprintf "%.17g", log(2)

[19:39] <camelia> rakudo-moar 7327a33a8: OUTPUT: «0.6931471805599453␤»

[19:39] <dogbert17> m: say sprintf "%.18g", log(2)

[19:39] <camelia> rakudo-moar 7327a33a8: OUTPUT: «0.6931471805599454␤»

[19:39] <dogbert17> hmm

[21:47] <lizmat> hmmm... modules.perl6.org gives me a 500 ??  invoking the Zoffix

[21:47] <lizmat> :-)

[21:54] * Zoffix got invoked

[21:54] <lizmat> whee!  :-)

[21:55] <timotimo> prepare_cached failed: no such column: me.repo_url

[21:55] <timotimo> /home/modules.perl6.org/modules.perl6.org/bin/../lib/ModulesPerl6/Model/Dists.pm line 55

[21:55] <timotimo> but surely zoffix is already on the case \o/

[21:56] <Zoffix> Yeah, I don't get why the [NEWDB] trigger didn't do the new db thing :/

[21:57] <timotimo> maybe some kind of race condition that made it skip over the trigger?

[22:02] <Zoffix> lizmat: it's back up

[22:02] <lizmat> Zoffix++

[22:09] <Zoffix> Looks like it's cause there's no logic to handle [NEWDB] trigger on next run for when "exit when already running" exits. Need to redo it as a lock in the update script, rather than in the perl build script

[22:17] <Geth> ¦ rakudo: 266f4a227b | (Elizabeth Mattijsen)++ | src/core/Awaitable.pm6

[22:17] <Geth> ¦ rakudo: Micro optimize the Awaitable role

[22:17] <Geth> ¦ rakudo:

[22:17] <Geth> ¦ rakudo: Using private methods in roles still incurs a substantial runtime

[22:17] <Geth> ¦ rakudo: overhead.  By making the private methods public with UPPER_CASE names,

[22:17] <Geth> ¦ rakudo: we make the following code 10% faster with 5% fewer allocations:

[22:17] <Geth> ¦ rakudo:

[22:17] <Geth> ¦ rakudo:   await do for ^100000 { start { } }

[22:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/266f4a227b

[22:49] * Zoffix goes out to do some shopping

[22:49] <Zoffix> FWIW, I paused cron on modules and currently rebuilding DB on the side, to work on the latest commit (right now the active commit on the lives site is a few commits behind master)

[22:50] <Zoffix> Gonna swap it to live site and re-enable cron when I come back
