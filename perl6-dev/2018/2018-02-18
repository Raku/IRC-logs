[11:42] <lizmat> Files=1235, Tests=76177, 311 wallclock secs (14.85 usr  5.42 sys + 2139.54 cusr 210.36 csys = 2370.17 CPU)

[13:20] <Geth> ¦ nqp/master: 5 commits pushed by pmurias++

[13:20] <Geth> ¦ nqp/master: 82b0bbe702 | Stop testing hllizing to native types

[13:20] <Geth> ¦ nqp/master: 3464635358 | [js] Change the calling convention

[13:20] <Geth> ¦ nqp/master: 2124503ac9 | Test that returned native values are hllized on the caller side

[13:20] <Geth> ¦ nqp/master: 68315beede | Test returning stuff more.

[13:20] <Geth> ¦ nqp/master: 622083355f | [js] Make nqp::split return an array of properly hllized strs

[13:20] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/43d4336974...622083355f

[13:42] <travis-ci> NQP build failed. pmurias '[js] Make nqp::split return an array of properly hllized strs'

[13:42] <travis-ci> https://travis-ci.org/perl6/nqp/builds/343004493 https://github.com/perl6/nqp/compare/43d433697402...622083355f4d

[13:44] <Geth> ¦ nqp: usev6++ created pull request #419: Fix eof detection on zero-size files

[13:44] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/419

[13:45] <[Tux]> Rakudo version 2018.01-207-gaf4dfe827 - MoarVM version 2018.01-96-g8d94732aa

[13:45] <[Tux]> csv-test-xs-20      0.450 -  0.491

[13:45] <[Tux]> csv-ip5xs           0.817 -  0.826

[13:45] <[Tux]> test-t --race       1.094 -  1.147

[13:45] <[Tux]> test-t              2.565 -  2.628

[13:45] <[Tux]> csv-ip5xs-20        7.492 -  7.505

[13:45] <[Tux]> test                9.420 -  9.753

[13:45] <[Tux]> csv-parser         11.757 - 11.776

[13:45] <[Tux]> test-t-20 --race   16.492 - 16.929

[13:45] <[Tux]> test-t-20          46.592 - 47.704

[13:56] <Geth> ¦ roast: f915c3e7b8 | usev6++ | 2 files

[13:56] <Geth> ¦ roast: [JVM] Fudge some tests for R#1541

[13:56] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f915c3e7b8

[13:56] <synopsebot> R#1541 [open]: https://github.com/rakudo/rakudo/issues/1541 [IO][JVM] [JVM] IO::Handle.eof always reports true for zero-size and /proc files 

[14:24] <Geth> ¦ nqp: 350f4b5743 | pmurias++ | t/nqp/112-call.t

[14:24] <Geth> ¦ nqp: Fix test count

[14:24] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/350f4b5743

[14:27] <Geth> ¦ roast: 00587e56ba | usev6++ | 3 files

[14:27] <Geth> ¦ roast: [JVM] Fudge some failing tests

[14:27] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/00587e56ba

[14:40] <travis-ci> NQP build failed. pmurias 'Fix test count'

[14:40] <travis-ci> https://travis-ci.org/perl6/nqp/builds/343017319 https://github.com/perl6/nqp/compare/622083355f4d...350f4b574313

[14:47] <Geth> ¦ roast: b7181414aa | usev6++ | 2 files

[14:47] <Geth> ¦ roast: [JVM] Fudge some failing tests

[14:47] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b7181414aa

[15:06] <Geth> ¦ nqp: 9ad4303ee1 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/io/FileHandle.java

[15:06] <Geth> ¦ nqp: [JVM] Do not hide 'eof' from SyncHandle

[15:06] <Geth> ¦ nqp:

[15:06] <Geth> ¦ nqp: When eof is encountered in a method from SyncHandle, it should be visible

[15:06] <Geth> ¦ nqp: when calling 'eof' on a FileHandle instance.

[15:06] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9ad4303ee1

[15:06] <Geth> ¦ nqp: a6bff16bf8 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/io/FileHandle.java

[15:06] <Geth> ¦ nqp: [JVM] Fix eof detection on zero-size files

[15:06] <Geth> ¦ nqp:

[15:06] <Geth> ¦ nqp: Compare https://github.com/rakudo/rakudo/issues/1541

[15:06] <Geth> ¦ nqp:

[15:06] <Geth> ¦ nqp: This is a similiar fix as https://github.com/MoarVM/MoarVM/commit/8d94732aad

[15:06] <Geth> ¦ nqp:

[15:06] <Geth> ¦ nqp: There is still an issue with failing spectest for eof on Rakudo that use .read,

[15:07] <Geth> ¦ nqp: <…commit message has 7 more lines…>

[15:07] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a6bff16bf8

[15:07] <Geth> ¦ nqp: 6f334f382c | (Zoffix Znet)++ (committed using GitHub Web editor) | src/vm/jvm/runtime/org/perl6/nqp/io/FileHandle.java

[15:07] <Geth> ¦ nqp: Merge pull request #419 from usev6/gh1541

[15:07] <Geth> ¦ nqp:

[15:07] <Geth> ¦ nqp: Fix eof detection on zero-size files

[15:07] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/6f334f382c

[15:14] <Geth> ¦ nqp: 5132d42fcb | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[15:14] <Geth> ¦ nqp: [MoarVM Bump] 22d2db5 [Spesh] Move annotations […]

[15:14] <Geth> ¦ nqp:

[15:14] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.01-96-g8d94732...2018.01-97-g22d2db5

[15:14] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/5132d42fcb

[15:14] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.01-96-g8d94732...2018.01-97-g22d2db5

[15:14] <Geth> ¦ rakudo: 704b1cfb78 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[15:15] <Geth> ¦ rakudo: [NQP Bump] Brings 10 commits

[15:15] <Geth> ¦ rakudo:

[15:15] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.01-99-g43d4336...2018.01-109-g5132d42

[15:15] <Geth> ¦ rakudo: 5132d42 [MoarVM Bump] 22d2db5 [Spesh] Move annotations […]

[15:15] <Geth> ¦ rakudo: 6f334f3 Merge pull request #419 from usev6/gh1541

[15:15] <Geth> ¦ rakudo: 350f4b5 Fix test count

[15:15] <Geth> ¦ rakudo: 6220833 [js] Make nqp::split return an array of properly hllized strs

[15:15] <Geth> ¦ rakudo: <…commit message has 8 more lines…>

[15:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/704b1cfb78

[15:15] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.01-99-g43d4336...2018.01-109-g5132d42

[15:15] <Zoffix> ZOFVM: Files=1289, Tests=153229, 155 wallclock secs (21.35 usr  3.78 sys + 3304.50 cusr 192.47 csys = 3522.10 CPU)

[15:20] <Zoffix> dafuq... somehow the bump didn't bring in latest commit from moar, based on the version number in `perl6 -v`

[15:26] <travis-ci> NQP build passed. Zoffix Znet 'Merge pull request #419 from usev6/gh1541

[15:26] <travis-ci> https://travis-ci.org/perl6/nqp/builds/343026343 https://github.com/perl6/nqp/compare/350f4b574313...6f334f382c64

[15:27] <Zoffix> Well, damn, looks like Z-Script version bumper doesn't do a full-enough re-build :}

[15:28] <Zoffix> But the good news is brrt++ fixed the blocker

[15:28] <Zoffix> (I originally thought the fix didn't fix, but it was a build bug)

[15:32] <nine> Zoffix: do you see t/spec/S09-typed-arrays/hashes.t failing?

[15:33] <Zoffix> nine: nope

[15:33] <nine> not even with MVM_SPESH_BLOCKING=1 MVM_SPESH_NODELAY=1

[15:33] <nine> ?

[15:36] <Zoffix> Yeah, still good. Ran a few times with `MVM_SPESH_BLOCKING=1 MVM_SPESH_NODELAY=1 t/fudgeandrun t/spec/S09-typed-arrays/hashes.t`

[15:39] <Zoffix> heh, golf of the `t/spec/MISC/bug-coverage.t` crash?

[15:39] <Zoffix> c: HEAD~10 use Test; use Test;

[15:39] <committable6> Zoffix, ¦HEAD~10: «»

[15:40] <Zoffix> Well, that will crash if you do the SPESH_NODELAY :) The file got duplicafte use line

[15:41] <Geth> ¦ roast: c291421971 | (Zoffix Znet)++ | MISC/bug-coverage.t

[15:41] <Geth> ¦ roast: Remove duplicate `use Test`

[15:41] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c291421971

[15:41] <nine> But duplicate use should not cause any crash

[15:49] <Geth> ¦ roast: 6b22923e1e | (Zoffix Znet)++ | S32-str/windows-1251-windows-1252-encode-decode.t

[15:49] <Geth> ¦ roast: Remove duplicate `use Test`

[15:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6b22923e1e

[15:49] <Geth> ¦ rakudo: f74890550d | (Zoffix Znet)++ | t/09-moar/00-misc.t

[15:49] <Geth> ¦ rakudo: Cover spesh crash in duplicate `use Test`

[15:49] <Geth> ¦ rakudo:

[15:49] <Geth> ¦ rakudo: MVM fix: https://github.com/MoarVM/MoarVM/commit/22d2db5e089c9efcf9dd210

[15:49] <Geth> ¦ rakudo: Closes https://github.com/rakudo/rakudo/issues/1534 R#1534

[15:49] <Geth> ¦ rakudo: Closes https://github.com/MoarVM/MoarVM/issues/804  M#804

[15:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f74890550d

[15:49] <synopsebot> R#1534 [closed]: https://github.com/rakudo/rakudo/issues/1534 [regression][⚠ blocker ⚠] “Iteration past end of iterator” issue

[15:49] <synopsebot> M#804 [closed]: https://github.com/MoarVM/MoarVM/issues/804 Several spectest files fails when run with MVM_SPESH_NODELAY=1

[16:39] <AlexDaniel> good morning! :)

[16:40] <AlexDaniel> c: SPESH_NODELAY=1 HEAD~10,HEAD use Test; use Test;

[16:40] <committable6> AlexDaniel, ENV variable SPESH_NODELAY is not supported

[16:40] <AlexDaniel> c: MVM_SPESH_NODELAY=1 HEAD~10,HEAD use Test; use Test;

[16:40] <committable6> AlexDaniel, ¦HEAD~10,HEAD(f748905): «»

[16:41] <AlexDaniel> c: MVM_SPESH_NODELAY=1 af4dfe827c,HEAD use Test; use Test;

[16:41] <committable6> AlexDaniel, ¦af4dfe8,HEAD(f748905): «»

[16:41] * AlexDaniel shrugs

[16:58] <Geth> ¦ nqp/profiler_new_spesh_semantics: 6 commits pushed by (Timo Paulssen)++

[16:58] <Geth> ¦ nqp/profiler_new_spesh_semantics: 8afe94519f | output start time of gc runs to sql

[16:58] <Geth> ¦ nqp/profiler_new_spesh_semantics: 937c7fd856 | spesh no longer subtracts from total run time.

[16:58] <Geth> ¦ nqp/profiler_new_spesh_semantics: ffb9e6ac70 | html profiler: show times a GC run started

[16:58] <Geth> ¦ nqp/profiler_new_spesh_semantics: f7449fafcc | no errors when a thread has no call graph

[16:58] <Geth> ¦ nqp/profiler_new_spesh_semantics: 391aa999d5 | account for multiple thread entries in sql format

[16:58] <Geth> ¦ nqp/profiler_new_spesh_semantics: 3357d567d4 | note down first call graph node for each thread

[16:58] <Geth> ¦ nqp/profiler_new_spesh_semantics: review: https://github.com/perl6/nqp/compare/0000000000...3357d567d4

[17:02] <dogbert17> I guess it's toaster time then ?

[17:04] <AlexDaniel> already running, yes

[17:05] <AlexDaniel> Geth: 00000000?? What the hell?

[17:05] <AlexDaniel> Geth: source

[17:05] <AlexDaniel> Geth: wiki

[17:05] <AlexDaniel> Geth: url

[17:05] <AlexDaniel> Geth: help

[17:05] <AlexDaniel> oh my…

[17:07] <dogbert17> seems to be a few files in roast with multiple 'use Test' statements

[17:08] <AlexDaniel> .oO( good that we test that! )

[17:15] <Geth> ¦ nqp: jstuder-gh++ created pull request #420: Rakudo RT#102994: Add flag indicating HLL init status in CodeRef (CodeRef edition)

[17:15] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/420

[17:15] <synopsebot> RT#102994 [open]: https://rt.perl.org/Ticket/Display.html?id=102994 [BUG] State variables are never initialized if the first call of the containing block does not reach them

[17:16] <Geth> ¦ rakudo: jstuder-gh++ created pull request #1542: RT#102994: State init vars if not set on first pass (CodeRef edition)

[17:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1542

[18:40] <pmurias> what's jstuder-gh irc nick?

[18:42] <Geth> ¦ rakudo/js: 2de8a7e10b | pmurias++ | 4 files

[18:42] <Geth> ¦ rakudo/js: [js] Adapt to calling convention change

[18:42] <Geth> ¦ rakudo/js: review: https://github.com/rakudo/rakudo/commit/2de8a7e10b

[19:22] <Geth> ¦ geth: 11d507c1b1 | (Zoffix Znet)++ | 2 files

[19:22] <Geth> ¦ geth: Use proper compare URL

[19:22] <Geth> ¦ geth:

[19:22] <Geth> ¦ geth: Closes https://github.com/perl6/geth/issues/12

[19:22] <Geth> ¦ geth: review: https://github.com/perl6/geth/commit/11d507c1b1

[19:23] <Geth> ¦ nqp/profiler_new_spesh_semantics: 6 commits pushed by (Timo Paulssen)++

[19:23] <Geth> ¦ nqp/profiler_new_spesh_semantics: 8afe94519f | output start time of gc runs to sql

[19:23] <Geth> ¦ nqp/profiler_new_spesh_semantics: 937c7fd856 | spesh no longer subtracts from total run time.

[19:23] <Geth> ¦ nqp/profiler_new_spesh_semantics: ffb9e6ac70 | html profiler: show times a GC run started

[19:23] <Geth> ¦ nqp/profiler_new_spesh_semantics: f7449fafcc | no errors when a thread has no call graph

[19:23] <Geth> ¦ nqp/profiler_new_spesh_semantics: 391aa999d5 | account for multiple thread entries in sql format

[19:23] <Geth> ¦ nqp/profiler_new_spesh_semantics: 3357d567d4 | note down first call graph node for each thread

[19:23] <Geth> ¦ nqp/profiler_new_spesh_semantics: review: https://github.com/perl6/nqp/compare/8afe94519f89^...3357d567d485

[19:26] <timotimo> was that ... me?

[19:26] <bartolin> Zoffix: two of your recent Rakudo commits (preventing Array.clone and Hash.clone to lose descriptor: 0d7c4fe835 and 45560ac9ac) need a small tweak to run on the JVM backend. the reason is that nqp::clone(nqp::null) leads to a NullPointerException on jvm (Mu on moar). do you think it makes sense to add a check for null like this: https://gist.github.com/usev6/b81dd9afb68cc55398c950c61760a0fc or would a special case #?if jvm ... be better?

[19:28] <Zoffix> bartolin: you can use `nqp::ifnull($!descriptor, Mu)` instead, but isn't this just fixing the problem until the next time some dev makes the same construct? Can't JVM also give Mu for nqp::clone(nqp::null)?

[19:28] <Zoffix> timotimo: I re-delivered the web hook, to test the geth fix worked

[19:28] <timotimo> OK

[19:29] <Zoffix> nqp: say(nqp::clone(nqp::null))

[19:29] <camelia> nqp-moarvm: OUTPUT: «␤»

[19:29] <Zoffix> nqp: say(nqp::isnull(nqp::clone(nqp::null)))

[19:29] <camelia> nqp-moarvm: OUTPUT: «1␤»

[19:29] <Zoffix> Or rather, I guess MoarVM just returns nqp::null (which gets hllized when to Mu or something, when printed)

[19:30] <bartolin> Zoffix: oh, didn't remember nqp::ifnull, thanks

[19:31] <Zoffix> oh, I guess it also needs the clone, and nqp::ifnull doesn't have a 3-arg version

[19:33] <bartolin> i took a short look at moar's handling of 'clone', but didn't found something about Mu there. also, i remember from various occasions that moar is often more forgiving wrt nqp::null

[19:34] <Zoffix> m: use nqp; say nqp::null

[19:34] <camelia> rakudo-moar f74890550: OUTPUT: «(Mu)␤»

[19:34] <Zoffix> bartolin: ^ this happens. I presume moarvm just returns an nqp::null

[19:35] <bartolin> j: use nqp; say nqp::null

[19:35] <camelia> rakudo-jvm a92950fb4: OUTPUT: «java.lang.NullPointerException␤  in block <unit> at <tmp> line 1␤␤»

[19:36] <Zoffix> nqp::isnull($!descriptor) ?? nqp::null !! nqp::clone($!descriptor)

[19:37] <bartolin> ^^ 'll test that

[19:48] <Geth> ¦ geth: 453b6e4640 | (Zoffix Znet)++ | bin/geth.p6

[19:48] <Geth> ¦ geth: Delete old `lib` path

[19:48] <Geth> ¦ geth: review: https://github.com/perl6/geth/commit/453b6e4640

[19:53] <Zoffix> Geth: help

[19:53] <Zoffix> And that's 'cause the server is running old IRC::Client witha  bug in it

[19:53] <bartolin> Zoffix: it wants parens around nqp::null -- but otherwise it seems to work as expected (will run spectests)

[19:53] <bartolin> m: use nqp; say nqp::isnull($!descriptor) ?? nqp::null !! nqp::clone($!descriptor)

[19:53] <camelia> rakudo-moar f74890550: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable $!descriptor used where no 'self' is available␤at <tmp>:1␤------> 3use nqp; say nqp::isnull($!descriptor7⏏5) ?? nqp::null !! nqp::clone($!descripto␤»

[19:54] <bartolin> m: use nqp; say nqp::isnull(nqp::null) ?? nqp::null !! 42

[19:54] <camelia> rakudo-moar f74890550: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Your !! was gobbled by the expression in the middle; please parenthesize␤at <tmp>:1␤------> 3y nqp::isnull(nqp::null) ?? nqp::null !!7⏏5 42␤    expecting any of:␤        infix␤        in…»

[19:54] <bartolin> m: use nqp; say nqp::isnull(nqp::null) ?? (nqp::null) !! 42

[19:54] <camelia> rakudo-moar f74890550: OUTPUT: «(Mu)␤»

[19:54] <Zoffix> It's kinda weird, 'cause sometimes that works

[19:55] <Zoffix> m: say 42 ?? say !! 42

[19:55] <camelia> rakudo-moar f74890550: OUTPUT: «Non ast passed to WANTED: NQPMu␤5===SORRY!5=== Error while compiling <tmp>␤Your !! was gobbled by the expression in the middle; please parenthesize␤at <tmp>:1␤------> 3say 42 ?? say !!7⏏5 42␤    expecting any of:␤        infix␤…»

[19:55] <Zoffix> heh

[19:55] <Zoffix> or maybe I'm just misremembering

[19:56] <Zoffix> m: class Foo { method z(|) {} }; say 42 ?? Foo.z: 42 !! 5

[19:56] <camelia> rakudo-moar f74890550: OUTPUT: «Nil␤»

[19:56] <Zoffix> m: class Foo { method z(|) {} }; say 42 ?? Foo.z: !! 5

[19:56] <camelia> rakudo-moar f74890550: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Your !! was gobbled by the expression in the middle; please parenthesize␤at <tmp>:1␤------> 3 { method z(|) {} }; say 42 ?? Foo.z: !!7⏏5 5␤    expecting any of:␤        infix␤        inf…»

[19:56] <Zoffix> k, I get it

[19:57] <Zoffix> Geth: help

[19:57] <Geth> Zoffix, Source at https://github.com/perl6/geth To add repo, add an 'application/json' webhook on GitHub pointing it to http://hack.p6c.org:8888/?chan=#perl6 and choose 'Send me everything' for events to send | use `ver URL to commit` to fetch version bump changes

[20:05] <Geth> ¦ geth: 29aeae44d5 | (Zoffix Znet)++ | lib/Geth/GitHub/Hooks/Preprocessor.pm6

[20:05] <Geth> ¦ geth: Fix `ver` command for commits with "No newline at end"

[20:05] <Geth> ¦ geth:

[20:05] <Geth> ¦ geth: Fixes #8

[20:05] <Geth> ¦ geth: review: https://github.com/perl6/geth/commit/29aeae44d5

[22:28] <AlexDaniel> OK, so!

[22:28] <AlexDaniel> Toaster looks good

[22:28] <AlexDaniel> releasable gives green light

[22:28] <AlexDaniel> I think we're ready

[22:29] <AlexDaniel> I'm still double-checking some things but I doubt I'd be able to find anything critical

[22:29] <AlexDaniel> compared to previous releases this was fast, so everyone++ :)

[22:30] <AlexDaniel> also, appveyor is green so I'd call that good

[23:09] <timotimo> \o/
