[00:00] <samcv> AlexDaniel: yay https://github.com/rakudo/rakudo/issues/1770 is fixed now

[00:01] <AlexDaniel> samcv: are there any tests?

[00:01] <Geth> ¦ roast: 43f48c2b83 | (Samantha McVey)++ | S15-unicode-information/uniname.t

[00:01] <Geth> ¦ roast: Fix incorrect CJK ideograph uniname

[00:01] <Geth> ¦ roast:

[00:01] <Geth> ¦ roast: This is related to https://github.com/rakudo/rakudo/issues/1770

[00:01] <Geth> ¦ roast: Removes the brackets and fixes the name which also changes to uppercase.

[00:01] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/43f48c2b83

[00:01] <samcv> in nqp there are new tests

[00:01] <AlexDaniel> ah I see

[00:01] <samcv> i'll add some to roast as well in a bit

[00:02] <AlexDaniel> \o/

[00:03] <samcv> hopefully that won't break anything too badly

[00:04] <samcv> i had to fix rakudo's tests (which get loaded from Unicode's data file in the rakudo/rakudo repo). there was only one test that changed in roast

[00:05] <Zoffix> t/nqp/106-unicodenames.t seems to still fail for me

[00:05] <samcv> should be passing with updated moar

[00:05] <samcv> unless you just recompiled it

[00:07] <Zoffix> I'm doing a clean build with zscript: https://gist.github.com/zoffixznet/5192257657011999c08d6e0027bacd9f

[00:08] <samcv> you seem to be right. the test number is wrong

[00:09] <Geth> ¦ nqp: 45ab6e373b | (Samantha McVey)++ | t/nqp/106-unicodenames.t

[00:09] <Geth> ¦ nqp: Fix incorrect # of tests from previous commit

[00:09] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/45ab6e373b

[00:11] <Geth> ¦ rakudo: a51112ebc4 | (Samantha McVey)++ | tools/build/NQP_REVISION

[00:11] <Geth> ¦ rakudo: Bump NQP to correct failing nqp test

[00:11] <Geth> ¦ rakudo:

[00:11] <Geth> ¦ rakudo: Changes: 2018.04-2-g81373e88f..2018.04-3-g45ab6e373

[00:11] <Geth> ¦ rakudo: 45ab6e373 Fix incorrect # of tests from previous commit

[00:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a51112ebc4

[00:11] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.04-2-g81373e88f...2018.04-3-g45ab6e373

[00:12] <travis-ci> NQP build failed. Samantha McVey 'Bump MoarVM and add tests for the Unicode name changes

[00:12] <travis-ci> https://travis-ci.org/perl6/nqp/builds/371325829 https://github.com/perl6/nqp/compare/bc0b5e100d9b...81373e88f2f6

[01:59] <Zoffix> (didn't do anything today with the nqp num precision—too tired or something; plan to work on it tomorrow in 19 hours, unless someone else beats me)

[02:01] <Zoffix> (and if anyone wants to try to beat me; the wrongness starts off here: https://github.com/MoarVM/MoarVM/blob/master/src/strings/parse_num.c#L295 and there are two problems: the function doesn't choose the closest representable num for the given string such as parsing 3.145e-20 into 3.14149999999999969e-20 instead of the closest representable num 3.14150000000000029e-20 and it also can't handle denormals

[02:01] <Zoffix> (5e-324 parses as 0) )

[02:02] <Zoffix> (the precision stuff affects at least 32-bit boxes; fom

[02:02] <Zoffix> (the precision stuff affects at least 32-bit boxes; don't know if 64-bit are also affected and the denormals are affected on 64 for sure)

[02:04] <Zoffix> nqp: say(nqp::sprintf("%.19g", [3.145e-20]))

[02:04] <camelia> nqp-moarvm: OUTPUT: «3.1449999999999997e-20␤»

[02:05] <Zoffix> (yeah, precision issue affects 64-bit too)

[02:10] <Zoffix> Really wonder how come the failing test fails only on 32-bit.

[02:17] <Zoffix> Ah, mistery solved. I missed a 1 in my eval above.

[02:17] <Zoffix> nqp: say(nqp::sprintf("%.19g", [3.1415e-20]))

[02:17] <camelia> nqp-moarvm: OUTPUT: «3.1415e-20␤»

[02:17] <Zoffix> nqp: say(nqp::sprintf("%.20g", [3.1415e-20]))

[02:17] <camelia> nqp-moarvm: OUTPUT: «3.1415e-20␤»

[02:18] <Zoffix> And on 32-bit it gives 3.1414999999999997e-20

[02:19] <Zoffix> C gives 3.1415000000000002898e-20 and it rounds to 142

[02:19] <Zoffix> m: say 3.1415e-20

[02:19] <camelia> rakudo-moar a51112ebc: OUTPUT: «3.1415e-20␤»

[02:20] <Zoffix> (^ that is OK; we use the Grisu stuff to stringify, which shortens it as long as it can be roundtripped back to original and it would be if we didn't have the pricision issue in parsing)

[04:35] <Kaiepi> make stresstest is a real pain to get to work with rakudobot without it disconnecting

[04:36] <Kaiepi> using schedulers or threads works but i haven't tested whether i can get the command output with those or not

[04:40] <samcv> m: my %hash = <a a b b c c>; say %hash.keys

[04:40] <camelia> rakudo-moar a51112ebc: OUTPUT: «(a b c)␤»

[04:40] <samcv> my %hash = <a a b b c c>; say %hash.keys

[04:40] <evalable6> samcv, rakudo-moar a51112ebc: OUTPUT: «(c b a)␤»

[06:56] <[Tux]> Rakudo version 2018.04-13-ga51112ebc - MoarVM version 2018.04-18-ge7d79d869

[06:56] <[Tux]> csv-test-xs-20      0.444 -  0.464

[06:56] <[Tux]> csv-ip5xs           0.877 -  0.899

[06:56] <[Tux]> test-t --race       1.010 -  1.040

[06:56] <[Tux]> test-t              2.465 -  2.469

[06:56] <[Tux]> test                8.769 -  9.192

[06:56] <[Tux]> csv-ip5xs-20        8.864 -  8.909

[06:56] <[Tux]> test-t-20 --race   15.619 - 15.874

[06:56] <[Tux]> csv-parser         38.282 - 39.119

[06:56] <[Tux]> test-t-20          43.957 - 44.839

[06:57] <[Tux]> due to a paste error, I was doing some tests where $PERL6LIB was set to 'inst' instead of the full spec 'inst#/full/path/to/install'

[06:57] <[Tux]> that causes a lot of noise. I'd prefer a warning/error if PERL6LIB is set to something illogical

[07:15] <Geth> ¦ roast: b2c864690b | (Stefan Seifert)++ | S06-signature/slurpy-and-interpolation.t

[07:15] <Geth> ¦ roast: Fix flappy test in slurpy-and-interpolation.t

[07:15] <Geth> ¦ roast:

[07:15] <Geth> ¦ roast: We must not rely on hash keys appearing in a certain order

[07:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b2c864690b

[07:17] <nine> That was probably one of the easiest flappers to fix :D

[07:50] <lizmat> hmmm...now "make install" stopped working for me  :-(

[07:51] <lizmat> Invocant of method 'path-spec' must be an object instance of type 'CompUnit::Repository::Locally', not a type object of type 'CompUnit::Repository::Staging'.  Did you forget a '.new'?

[07:51] <lizmat> in block <unit> at tools/build/install-core-dist.pl line 17

[07:51] <El_Che> wow

[07:53] <lizmat> full backtrace: https://gist.github.com/lizmat/b40058cee4738cffba91c1e3a0c888a3

[08:42] <Kaiepi> PufferBot, all

[08:42] <PufferBot> [openbsd] Running complete Rakudo build and tests (this will take a while)...

[08:51] <Kaiepi> it's not kidding btw, don't expect it to finish for 20-30 minutes

[08:57] <El_Che> lizmat: you mean rakudo or a module?

[09:01] <PufferBot> [openbsd] Failed to build Rakudo and run all tests... See the output at http://fpaste.scsys.co.uk/577283

[09:04] <Kaiepi> anyone know which of these tests are already known about? ignore the IO::Socket::Async failures, that's beecause i don't have ipv6 set up

[09:10] <Kaiepi> BeastieBot, all

[09:10] <BeastieBot> [freebsd] Running complete Rakudo build and tests... (this will take a while)...

[09:12] <BeastieBot> [freebsd] Complete build and tests failed. See the output at http://fpaste.scsys.co.uk/577284

[09:13] <Kaiepi> oh please

[09:14] <Kaiepi> forgot to reinstall the bot after updating

[09:20] <Kaiepi> BeastieBot, all

[09:20] <BeastieBot> [freebsd] Running complete Rakudo build and tests... (this will take a while)...

[09:20] <BeastieBot> [freebsd] Complete build and tests failed. See the output at http://fpaste.scsys.co.uk/577285

[09:21] <Kaiepi> odd that doesn't happen on my system

[09:23] <Kaiepi> BeastieBot, test

[09:23] <BeastieBot> [freebsd] Running tests...

[09:25] <Kaiepi> (builds if it isn't already)

[09:29] <Kaiepi> guess we won't know if it builds or not until i get more ram for my vps, the kernel just killed it

[10:04] <Geth> ¦ rakudo: 7b33651962 | (Jonathan Worthington)++ | src/core/IO/Socket/Async.pm6

[10:04] <Geth> ¦ rakudo: Make sure to wrap error string in Exception object

[10:04] <Geth> ¦ rakudo:

[10:04] <Geth> ¦ rakudo: The user-facing parts of the Supply API all make sure of this. If we

[10:04] <Geth> ¦ rakudo: are directly implementing the Tappable interface, however, then it is

[10:04] <Geth> ¦ rakudo: on us to make sure that we only ever call the provided `quit` callback

[10:04] <Geth> ¦ rakudo: with an `Exception` object, not a `Str`. This mistake was introduced in

[10:04] <Geth> ¦ rakudo: f58ac9991 during an optimization of IO::Socket::Async.

[10:04] <Geth> ¦ rakudo:

[10:04] <Geth> ¦ rakudo: With this, #1775 now reports the error ("connection reset by peer")

[10:04] <synopsebot> RAKUDO#1775 [open]: https://github.com/rakudo/rakudo/issues/1775 [ASYNC] Crash in .Supply.tap + .print on an IO::Socket::Async 

[10:04] <Geth> ¦ rakudo: correctly, rather than complaining about being unable to throw a

[10:04] <Geth> ¦ rakudo: string.

[10:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7b33651962

[10:34] <Geth> ¦ nqp: d0b1b68bd6 | (Elizabeth Mattijsen)++ | tools/build/MOAR_REVISION

[10:34] <Geth> ¦ nqp: Bump Moar

[10:34] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/d0b1b68bd6

[10:34] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.04-18-ge7d79d869...2018.04-19-g1b78b04

[10:51] <AlexDaniel> Kaiepi: pretty sure your question was about something else, but the list of floppers is here: https://gist.github.com/Whateverable/70e60e6462656a10e1bb543bd7e045b2

[10:51] <travis-ci> NQP build failed. Elizabeth Mattijsen 'Bump Moar'

[10:51] <travis-ci> https://travis-ci.org/perl6/nqp/builds/371491583 https://github.com/perl6/nqp/compare/45ab6e373b41...d0b1b68bd614

[10:51] <Geth> ¦ rakudo: 50f768315d | (Elizabeth Mattijsen)++ | src/core/IO/Path.pm6

[10:51] <Geth> ¦ rakudo: Revert "Condense three IO::Path.new multis down to one..."

[10:51] <Geth> ¦ rakudo:

[10:51] <Geth> ¦ rakudo: This reverts commit 4120b226b550a485ddcbc045b9d5fd63d853d6af.

[10:51] <Geth> ¦ rakudo:

[10:51] <Geth> ¦ rakudo: For some reason, this borked "make install" for me on MacOS.

[10:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/50f768315d

[10:58] <AlexDaniel> o_o

[11:01] <Geth> ¦ rakudo: 29b092c940 | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[11:01] <Geth> ¦ rakudo: Bump NQP to get latest NFA fixes

[11:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/29b092c940

[11:01] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.04-3-g45ab6e373...2018.04-4-gd0b1b68

[11:09] <Zoffix> .tell MasterDuke FYI: https://github.com/rakudo/rakudo/commit/50f768315d

[11:09] <yoleaux> Zoffix: I'll pass your message to MasterDuke.

[11:14] <Zoffix> Weird. Don't really see a difference that multi change commit introduces :S

[11:14] * lizmat neither  :-(

[11:30] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Revert "Condense three IO::Path.new multis down to one..."

[11:30] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/371497277 https://github.com/rakudo/rakudo/compare/7b3365196264...50f768315dc9

[11:30] <buggable> [travis build above] ☠ All failures are due to: failed make test (1 failure). Across all jobs, only t/02-rakudo/repl.t test file failed.

[11:31] <lizmat> repl.t test passes for me :-(

[12:07] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Bump NQP to get latest NFA fixes'

[12:07] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/371500707 https://github.com/rakudo/rakudo/compare/50f768315dc9...29b092c940b7

[12:08] <buggable> [travis build above] ☠ All failures are due to: failed make test (1 failure). Across all jobs, only t/06-telemetry/01-basic.t test file failed.

[12:08] <El_Che> AlexDaniel: I transferred the nxadm/rakudo-pkg-canary to perl6/rakudo-pkg-canary, but now I have no admin access. Can you or an other admin enable the travis and dockerhub integration in settings?

[12:09] <AlexDaniel> hmmm I have no admin access there also

[12:09] <AlexDaniel> Zoffix ↑ ?

[12:09] <AlexDaniel> https://github.com/perl6/rakudo-pkg-canary

[12:09] <El_Che> thx

[12:10] <chansen_> m: say 0x4E00.uniname;

[12:10] <camelia> rakudo-moar 29b092c94: OUTPUT: «CJK UNIFIED IDEOGRAPH-4E00␤»

[12:10] <Zoffix> I gave both you admins

[12:10] <chansen_> m: say 0x17000.uniname;

[12:10] <camelia> rakudo-moar 29b092c94: OUTPUT: «TANGUT IDEOGRAPH-17000␤»

[12:10] <AlexDaniel> Zoffix: thank you ♥

[12:10] <chansen_> samcv++

[12:10] <AlexDaniel> \o/

[12:10] <El_Che> Zoffix: thx, will enable the integration now

[12:11] <chansen_> m: say 0xAC00.uniname;

[12:11] <camelia> rakudo-moar 29b092c94: OUTPUT: «Hangul Syllable GA␤»

[12:11] <chansen_> :(

[12:11] <AlexDaniel> chansen_: if that's wrong, please report it

[12:12] <chansen_> Unicode 4.8:

[12:12] <chansen_> Only Latin capital letters A to Z (U+0041..U+0056), ASCII digits (U+0030.. U+0039), U+0020 space, and U+002D hyphen-minus occur in character names.

[12:12] <timotimo> ok, so should be uppercase

[12:13] <chansen_> m: say 0x4E00.uniname;

[12:13] <camelia> rakudo-moar 29b092c94: OUTPUT: «CJK UNIFIED IDEOGRAPH-4E00␤»

[12:14] <chansen_> m: say 0x0.uniname;

[12:14] <camelia> rakudo-moar 29b092c94: OUTPUT: «<control-0000>␤»

[12:14] <chansen_> m: say 0xD800.uniname;

[12:14] <camelia> rakudo-moar 29b092c94: OUTPUT: «<Non Private Use High Surrogate-D800>␤»

[12:14] <chansen_> :(

[12:15] <chansen_> AlexDaniel: will do

[12:19] <timotimo> does unicode actually give control characters a name, too? or is this something we invented so it doesn't just give The Empty String?

[12:21] <chansen_> In unicode, only graphical characters are named, for non-graphical characters Unicode specify a code point label

[12:23] <chansen_> 0xD800.uniname should have returned <private-use-D800>

[12:23] <chansen_> It's documented in Unicode Name Property, chapter 4.8

[12:24] <AlexDaniel> 6c: say 0xD800.uniname;

[12:24] <committable6> AlexDaniel, https://gist.github.com/6e702838b03a905191c14101a6fd0c29

[12:44] <chansen_> m: say 0x0378.uniname;

[12:44] <camelia> rakudo-moar 29b092c94: OUTPUT: «<reserved-0378>␤»

[12:45] <chansen_> m: say 0x10FFFF.uniname;

[12:45] <camelia> rakudo-moar 29b092c94: OUTPUT: «<noncharacter-10FFFF>␤»

[12:46] <AlexDaniel> m: say 0x100FFFF.uniname;

[12:46] <camelia> rakudo-moar 29b092c94: OUTPUT: «<unassigned>␤»

[12:48] <chansen_> Thats way beyond Unicode, not covered by the spec =)

[12:49] <AlexDaniel> :)

[12:50] <chansen_> Someone with powers, please reopen <https://github.com/rakudo/rakudo/issues/1770>

[12:51] <Kaiepi> AlexDaniel, yeah that was what i was looking for, thanks

[12:52] <AlexDaniel> chansen_: reopened, but next time feel free to start a new one

[12:52] <AlexDaniel> althogh, ok, samcv said to reopen :)

[12:52] <AlexDaniel> fine :)

[12:55] <AlexDaniel> e: for ^0x10FFFF { say .uniname if !.uniname.starts-with(‘<’) and .uniname.match(/<[a..z]>/) }

[12:55] <evalable6> AlexDaniel, rakudo-moar 29b092c94: OUTPUT: «Hangul Syllable GA␤Hangul Syllable GAG␤Hangul Syllable GAGG␤Hangul Syllable GAGS␤Hangul Sy…»

[12:55] <evalable6> AlexDaniel, Full output: https://gist.github.com/ced864235834bfeff94662f1d4710791

[12:57] <AlexDaniel> chansen_: is there a tool or something that can return correct name for any codepoint?

[12:58] <AlexDaniel> so that we can test perl6 uninames against it

[13:00] <chansen_> AlexDaniel: <https://www.unicode.org/Public/10.0.0/ucd/extracted/DerivedName.txt>

[13:00] <chansen_> Entries with trailing -* should be replaced with -%.4X, ordinal

[13:03] <chansen_> It doesn't cover code-point-labels but it should be trivial to test

[13:04] <AlexDaniel> ok I think only hangul syllables are not matching

[13:09] <chansen_> nogaste?

[13:12] <chansen_> Rakudo derives it's character names from UnicodeData.txt, these are the ranges specified in UnicodeData.txt (v10.0.0) <https://gist.github.com/chansen/f8471ea2fff11084deea85228cf4e49f>

[13:14] <lizmat> fwiw, t/06-telemetry/01-basic.t doesn't fail for me

[13:14] <lizmat> afk again&

[13:17] <AlexDaniel> well yeah, most of these ranges are arguably wrong

[13:25] <[Coke]_> zoffix privmsg me when you have a sec.

[14:58] <robertle> was there and outcome of that i386 test failure with 2018.04? do we know what needs fixing?

[15:02] <dogbert2_> m: say $*IN.lines.head(2)

[15:02] <camelia> rakudo-moar 29b092c94: OUTPUT: «(»Wann treffen wir drei wieder zusamm?«    »Um die siebente Stund‘, am Brückendamm.«)␤»

[15:03] <Geth> ¦ roast: 8e5ac9c294 | (Steve Mynott)++ | 3 files

[15:03] <Geth> ¦ roast: replace use of README.md (which doesn't exist on 6.c-errata) by $?FILE

[15:03] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8e5ac9c294

[15:03] <Geth> ¦ roast: cdfc8b39db | (Steve Mynott)++ (committed using GitHub Web editor) | integration/advent2011-day24.t

[15:03] <Geth> ¦ roast: Update advent2011-day24.t

[15:03] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/cdfc8b39db

[15:03] <Geth> ¦ roast: c10315f5b4 | (Steve Mynott)++ (committed using GitHub Web editor) | 3 files

[15:03] <Geth> ¦ roast: Merge pull request #421 from stmuk/master

[15:03] <Geth> ¦ roast:

[15:03] <Geth> ¦ roast: replace use of README.md (which doesn't exist on 6.c-errata) by $?FILE

[15:03] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c10315f5b4

[15:05] <Zoffix> robertle: https://irclog.perlgeek.de/perl6-dev/2018-04-26#i_16096169

[15:06] <robertle> great, thanks!

[15:58] <tony-o> timotimo: i see file::find and shell::command in the cro meta depends: https://github.com/croservices/cro/blob/master/META6.json#L10

[15:58] <tony-o> oh, oops, i see what you mean

[15:59] <tony-o> you're right, one is the build-depends

[16:47] <Geth> ¦ roast/6.c-errata: 6a39961d60 | (Steve Mynott)++ (committed by Aleks-Daniel Jakimenko-Aleksejev) | 3 files

[16:47] <Geth> ¦ roast/6.c-errata: Replace use of README.md by $?FILE

[16:47] <Geth> ¦ roast/6.c-errata:

[16:47] <Geth> ¦ roast/6.c-errata: README.md doesn't exist on 6.c-errata.

[16:47] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/6a39961d60

[16:47] <AlexDaniel> stmuk++

[17:23] <lizmat> off for some infinitum bellum

[17:23] <lizmat> &

[17:33] <AlexDaniel> robertle: hey, I'm wondering, is there any way to get rakudo tested using debian infrastructure before the release?

[17:33] <AlexDaniel> robertle: for example, we now have El_Che's packages tested with prerelease rakudo: https://github.com/perl6/rakudo-pkg-canary

[17:33] <AlexDaniel> not yet functional but it will be soon I believe

[17:33] <robertle> AlexDaniel: it's difficult...

[17:34] <AlexDaniel> robertle: that at least will give us some info about i386 and maybe in the future also arm

[17:34] <robertle> it's easy for amd64, armhf and other common architectures. harder for mips* ppc* s390x...

[17:34] <AlexDaniel> robertle: but big endian…

[17:34] <AlexDaniel> yeah…

[17:35] <robertle> I think I could find a mipsel box, but bigendian mips and otehrs are hard to come by

[17:35] <AlexDaniel> right

[17:35] <AlexDaniel> robertle: ok but even for common archs, what should be done on our side to get it tested a bit before the release?

[17:37] <AlexDaniel> robertle: e.g. we now have this, does it help? https://rakudo.perl6.org/downloads/prerelease/

[17:37] <robertle> not sure, I guess we could set something CI-like up

[17:37] <robertle> but the biggest problem at the moment, from my point of view, is that the mips failures are not reproducible at all

[17:38] <robertle> if we had reproducible failures across the board, life would be aesy

[17:38] <AlexDaniel> do we even have any failures after all of the fixes?

[17:38] <AlexDaniel> or what do you mean?

[17:40] <AlexDaniel> robertle: also, looking at the current buildd page, does it mean that 2018.04 is good on all archs except i386?

[17:41] <robertle> I get this: https://buildd.debian.org/status/fetch.php?pkg=rakudo&arch=mips&ver=2018.04-1&stamp=1524753584&raw=0 but I have so far been unable to get a fix on it.

[17:41] <robertle> if I run iot by hand on another mips box, I get ~30 test suite runs before I get a failure

[17:41] <robertle> and mips is slow

[17:42] <AlexDaniel> well, that's somewhat positive :)

[17:42] <robertle> I'll have another look later, perhaps 2018.04 is easier to get a fix on

[17:42] <AlexDaniel> robertle++

[17:57] <samcv> j: 0xAC00.uniname.say

[17:57] <camelia> rakudo-jvm 29b092c94: OUTPUT: «HANGUL SYLLABLES AC00␤»

[17:58] <samcv> :( thanks JVM!

[17:58] <samcv> haha

[18:19] <El_Che> samcv: your work on Solaris, was it tested on Solaris 11?

[18:21] <samcv> El_Che: yes

[18:21] <El_Che> I saw it on the comments :)

[18:21] <El_Che> pkg install ...

[18:21] <El_Che> :)

[18:21] <El_Che> tried on 10 yesterday, but it didn't build

[18:22] <samcv> ah

[18:22] <El_Che> machines were too slow to figure out why

[18:22] <El_Che> (they were having some hw issues)

[18:22] <samcv> i only tested it on 32 bit. but that's good since i fixed both an issue that'd apply to both 32 and 64 bit with libtommath not building

[18:22] <El_Che> they == CSW

[18:22] <samcv> and then a 32 bit only issue

[18:22] <samcv> i should dl solaris 10 then and test

[18:23] <El_Che> I think you'd be surprise by the % of the SOlaris 10 share

[18:23] <samcv> El_Che: not at all hah

[18:23] <El_Che> 11 was so different that a lot of people just moved to linux from 10

[18:23] <samcv> can you open a moarvm issue?

[18:23] <El_Che> those who sayed often run 10

[18:23] <samcv> it's moarvm that doesn't build right?

[18:24] <El_Che> I'll run it again once the hw is ok

[18:24] <El_Che> disk was deadslow nfs

[18:24] <samcv> i'm dling solaris 10 x86 right now. did you test on sparc?

[18:25] <El_Che> on both

[18:25] <samcv> ok

[19:31] <El_Che> AlexDaniel, samcv: there seems to be a bug on Rakudo + --gen-moar that I don't hit with rakudo-pkg because I build each component separatedly: https://bbs.archlinux.org/viewtopic.php?id=227185

[19:32] <El_Che> example failure: https://bbs.archlinux.org/viewtopic.php?id=227185

[19:32] <El_Che> oops: https://travis-ci.org/nxadm/rakudo-pkg-canary/jobs/371716961#L3176

[19:33] <AlexDaniel> We couldn't find the repository nxadm/rakudo-pkg-canary

[19:33] <El_Che> it's perl6/rakudo-pkg-canary

[19:34] <AlexDaniel> stmuk: ↑ you should probably see that too :)

[19:35] <El_Che> AlexDaniel: moved to test a know working release while testing the setup

[19:35] <AlexDaniel> k

[19:35] <El_Che> the prerelease requires a non existent moar

[19:35] <El_Che> 2018.05

[19:37] <AlexDaniel> lol rly

[19:37] <El_Che> (I moved to building each component apart on rakudo-pkg because Zoffix invented dot releases :P

[19:37] <AlexDaniel> El_Che: hey uh, can you clarify where's that?

[19:38] <AlexDaniel> El_Che: I looked at prerelease nqp MOAR_REVISION and it's 2018.04-25-g717ee970f

[19:38] <El_Che> with that moving around is not easy

[19:38] <El_Che> once opensuse works, I'll put it on prerelease again and we'll see

[19:38] <AlexDaniel> k

[19:39] <Kaiepi> i'm upgrading my vps, so beastiebot should be able to run make build and make stresstest properly soon

[19:39] <El_Che> do we live with failed alpine builds for now, or do we do a workaround (build the 3 components separatedly)?

[19:40] <AlexDaniel> weekly: El_Che++ was working on a rakudo package canary ( https://github.com/nxadm/rakudo-pkg-canary ). The idea is to have CI-like thingy which tests that the upcoming release builds on different platforms correctly

[19:40] <notable6> AlexDaniel, Noted!

[19:41] * AlexDaniel is clearly very good at explaining stuff

[19:42] <El_Che> weekly: it has an older brother: rakudo-pkg-for-doc: a package with Rakudo , zef + all the perl6 dependencies needed to test the perl6 doc.

[19:42] <notable6> El_Che, Noted!

[19:42] <El_Che> jmerelo is trying it out

[19:43] <El_Che> compared to rakudobrew, the releasable run time is waaay down. To 3m or something like that instead of 15+

[19:44] <AlexDaniel> ye that's pretty cool

[19:47] <stmuk> AlexDaniel: thanks!

[20:03] <Kaiepi> BeastieBot, all

[20:03] <BeastieBot> [freebsd] Running complete Rakudo build and tests (this will take a while)...

[20:05] <El_Che> as a musing. I wonder if the build-rakudo-in-one-command is a good idea. It breaks unix conventions by writing at configure time (needed, otherwise rakudo can not build) and people that compile the code wouldn't mind the extra steps. Maybe a wrapper script will suffice as a one line compile instruction?

[20:06] <Kaiepi> ah perfect upgrading fixed the kernel constantly trying to kill make

[20:07] <El_Che> AlexDaniel: ok, found a workaround for alpine

[20:07] <El_Che> it's a shell thing

[20:08] <El_Che> Configure.pl is a bashist!

[20:08] <Kaiepi> i'm not sure what to think about having a script that builds rakudo all at once

[20:08] <El_Che> (alpine comes with sh by default, bash can be installed

[20:08] <El_Che> )

[20:08] <Kaiepi> ditto *BSD

[20:08] <AlexDaniel> El_Che: what is using bashism exactly?

[20:08] <El_Che> Kaiepi: something for people that really want that. I prefer the 3 step way

[20:08] <AlexDaniel> that doesn't sound good at all

[20:09] <Kaiepi> there's --make-install to do it in two steps

[20:09] <El_Che> AlexDaniel: need to pinpoint it, but fact is that it works in bash and not in sh

[20:10] <Kaiepi> sh doesn't have arrays

[20:10] <Kaiepi> iirc

[20:10] <El_Che> it's related to path or var

[20:10] <El_Che> in sh --prefix=/opt/rakudo-pkg ends in

[20:10] <El_Che> /opt/rakudo-pkg/opt/rakudo/pkg

[20:11] <El_Che> moar is installed there

[20:11] <El_Che> and the rest of the install can't find it

[20:16] <El_Che> AlexDaniel: everything fails with the prerelease: https://travis-ci.org/nxadm/rakudo-pkg-canary/builds/371733453 (while everything builds with 2018.03)

[20:16] <El_Che> error: pathspec '2018.05' did not match any file(s) known to git.

[20:16] <El_Che> https://travis-ci.org/nxadm/rakudo-pkg-canary/jobs/371733457#L2986

[20:17] <Kaiepi> BeastieBot, stresstest

[20:17] <BeastieBot> [freebsd] Running Roast's stress test suite (this will take a while)...

[20:17] <AlexDaniel> El_Che: ok, so what is this 2018.05?

[20:17] <AlexDaniel> El_Che: that's nqp version right?

[20:17] <El_Che> AlexDaniel: you tell me, it's from the release tar

[20:17] <AlexDaniel> El_Che: so-o-o… can you use prerelease nqp?

[20:17] <El_Che> prerelease

[20:18] <El_Che> so, we're back to separate builds? I am all for it

[20:18] <Kaiepi> BeastieBot, stresstest

[20:18] <BeastieBot> [freebsd] Running Roast's stress test suite (this will take a while)...

[20:19] <AlexDaniel> El_Che: well, I guess so… obviously you can't pull nqp 2018.05 because that doesn't exist, but the nqp prerelease tar *is* 2018.05, or at least it claims to be

[20:19] <El_Che> woudn't we need a prerelease moarvm?

[20:20] <El_Che> or which one should I use?

[20:20] <El_Che> I would say put one there, even if it's a copy of a release

[20:20] <AlexDaniel> El_Che: you can just use --gen-moar when building nqp

[20:20] <AlexDaniel> that sounds… werid

[20:20] <Kaiepi> hm the bot's hanging when it tries to install Inline::Perl5

[20:20] <El_Che> I think my suggestion is better, in case samcv wants to test as well?

[20:21] <Kaiepi> but doesn't when i do it manually

[20:21] <El_Che> AlexDaniel: you're the main user, so it's up to you

[20:22] <AlexDaniel> El_Che: IMO we don't need an extra effort to make moarvm prereleases

[20:22] <El_Che> deal, i'll go with --gen-moar

[20:23] <AlexDaniel> El_Che: alternatively I can change releasable sakefile so that it doesn't use “2018.05” nqp release, and instead points at some commit like 2018.04-666-g123123

[20:23] <AlexDaniel> this way we'd only need rakudo tars really

[20:23] <El_Che> deal

[20:23] <El_Che> i'll implement the alpine workaround

[20:24] <AlexDaniel> El_Che: wait, so we go with --gen-nqp and --gen-moar at the same time, right?

[20:24] <El_Che> yes

[20:24] <AlexDaniel> k

[20:25] <El_Che> I had this: perl ./Configure.pl --backend=moar --gen-moar --prefix=$PREFIX

[20:25] <El_Che> and nqp got built as well

[20:27] <Kaiepi> nqp has some code related to building with moar iirc

[20:27] <Kaiepi> that's probably why

[20:29] <AlexDaniel> El_Che: ok just leave it like this I guess

[20:31] <AlexDaniel> El_Che: OK building it, it'll take ≈1 hour actually

[20:31] <AlexDaniel> the sakefile basically follows all steps in the release guide just like if it was making a release, which includes stresstest and stuff

[20:31] <AlexDaniel> and when something flops, it tries again…

[20:32] <AlexDaniel> so yeah, patience is a virtue :)

[20:34] <El_Che> AlexDaniel: I am under the impression that --gen-nqp fixes the alping problem

[20:43] <El_Che> nope :)

[21:01] <AlexDaniel> oh wow github just reported a potential security vulnerability in one of the deps for nqp js

[21:01] <AlexDaniel> that's pretty cool!

[21:01] <AlexDaniel> not that it matters because I guess no one is using rakudo on js yet, but still, that's lovely

[21:03] <Kaiepi> oh yeah i forgot i wanted to take a look at the js compiler

[21:05] <Kaiepi> there's a lot of code in it that's suboptimal

[21:05] <Kaiepi> though it's modtly stuff that you wouldn't expect to be so

[21:12] <El_Che> AlexDaniel: it's an option on the setting, I saw recently

[21:35] <pmurias> Kaiepi: you mean in the runtime code or the generated stuff?

[21:35] <pmurias> Kaiepi: (I haven't optimized the code generated for full Perl 6 at all)

[21:36] <Kaiepi> what do you mean by the generated stuff?

[21:36] <El_Che> testing rakudo on ubuntu 18.04

[21:36] <pmurias> Kaiepi: the code that the compiler emits

[21:37] <Kaiepi> the generated stuff i'm assuming

[21:38] <pmurias> the code that's emitted needs a ton of improvement

[21:44] <pmurias> Kaiepi: optimizing the code generated for NQP seems more important at first as that will speed up the compiling of the setting etc.

[21:46] <AlexDaniel> c: HEAD say ('WAT~' xx 15000).grep({ / ^ <[ \w z ]>+ ‘~’ $ / }).elems

[21:46] <committable6> AlexDaniel, ¦HEAD(29b092c): «15000␤»

[21:46] <AlexDaniel> c: HEAD say ('WAT~' xx 15000).grep({ / ^ <[ \w z ]>+ ‘~’ $ / }).elems

[21:46] <committable6> AlexDaniel, ¦HEAD(29b092c): «15000␤»

[21:46] <Kaiepi> i'm asking to compare it to node's, not so much to work on it

[21:46] <AlexDaniel> c: HEAD say ('WAT~' xx 15000).grep({ / ^ <[ \w z ]>+ ‘~’ $ / }).elems

[21:46] <committable6> AlexDaniel, ¦HEAD(29b092c): «15000␤»

[21:46] <AlexDaniel> come on…

[21:46] <AlexDaniel> c: HEAD say ('WAT~' xx 15000).grep({ / ^ <[ \w z ]>+ ‘~’ $ / }).elems

[21:46] <committable6> AlexDaniel, ¦HEAD(29b092c): «15000␤»

[21:46] <AlexDaniel> :|

[21:46] <AlexDaniel> c: HEAD say ('WAT~' xx 150000).grep({ / ^ <[ \w z ]>+ ‘~’ $ / }).elems

[21:46] <committable6> AlexDaniel, ¦HEAD(29b092c): «149643␤»

[21:46] <AlexDaniel> c: HEAD say ('WAT~' xx 150000).grep({ / ^ <[ \w z ]>+ ‘~’ $ / }).elems

[21:46] <committable6> AlexDaniel, ¦HEAD(29b092c): «149643␤»

[21:47] <AlexDaniel> c: HEAD say ('WAT~' xx 150000).grep({ / ^ <[ \w z ]>+ ‘~’ $ / }).elems

[21:47] <Kaiepi> i could work on it, but i need more experience working on moar and nqp first

[21:47] <committable6> AlexDaniel, ¦HEAD(29b092c): «149533␤»

[21:47] <AlexDaniel> m: say ('WAT~' xx 150000).grep({ / ^ <[ \w z ]>+ ‘~’ $ / }).elems

[21:47] <camelia> rakudo-moar 29b092c94: OUTPUT: «150000␤»

[21:47] <AlexDaniel> hehe

[21:47] <AlexDaniel> dogbert17++

[21:47] <AlexDaniel> dogbert17: I don't think it golfs any shorter than that

[21:47] <AlexDaniel> dogbert17: and yes, it looks like it needs the system to be busy quite a bit

[21:48] <AlexDaniel> right now there's a spectest running on whateverable server

[21:48] <AlexDaniel> dogbert17: btw where did you find this?

[21:59] <AlexDaniel> Gah!

[21:59] <AlexDaniel> El_Che: ok not so quick really…

[21:59] <AlexDaniel> there's something wrong with Inline::Perl5

[22:00] * AlexDaniel tries it

[22:00] <AlexDaniel> oh, actually it's some sort of a problem with File::Which

[22:00] <dogbert17> AlexDaniel: creds go to dmaestro: https://github.com/MoarVM/MoarVM/issues/775

[22:01] <dogbert17> tried to golf i down a tiny bit

[22:07] <AlexDaniel> this: https://gist.github.com/AlexDaniel/3389a675258ed338cd28a365fd4468ec

[22:30] <Kaiepi> oh i forgot i don't need to kill pufferbot/beastiebot anymore when i'm upgrading rakudo

[22:34] <El_Che> AlexDaniel: repo is ready. Released rakudo build fine on all OSes including Ubuntu 18.04. Once the Docker Hub finishes building the latest images we'll share a few minutes off the build time.

[22:35] <AlexDaniel> El_Che++

[22:39] <El_Che> mm, rakudo fails on alpine with the prerelease tar (as expected), but it's marked as OK. Weird

[22:41] <Kaiepi> BeastieBot, stresstest

[22:41] <BeastieBot> [freebsd] Running Roast's stress test suite (this will take a while)...

[22:41] <Kaiepi> alright this should work with --force-test for Inline::Perl5 (i hope)

[22:45] <Kaiepi> or not since Zef's stuck at ===> Searching for: Inline::Perl5

[22:45] <Kaiepi> fuck it i'll install it manually

[22:45] <El_Che> ok fixed

[22:45] <El_Che> AlexDaniel: my work is done. Ping me if you need something changed.

[22:45] <AlexDaniel> El_Che: thanks

[22:46] <El_Che> AlexDaniel: and certainlu when the dot release is out so I can release the packages

[22:46] <AlexDaniel> sure

[22:46] <El_Che> going back to the proletarian #perl6 :)

[23:02] <MasterDuke> i could be convinced we should hardcode a check in X::TypeCheck::Binding::Parameter for the `expected Positional[Array] but got Array` case and suggest something specifically for that

[23:02] <yoleaux> 11:09Z <Zoffix> MasterDuke: FYI: https://github.com/rakudo/rakudo/commit/50f768315d

[23:07] <Kaiepi> BeastieBot, stresstest

[23:07] <BeastieBot> [freebsd] Running Roast's stress test suite (this will take a while)...

[23:08] <Kaiepi> whoops wrong dir

[23:12] <Kaiepi> BeastieBot, stresstest

[23:12] <BeastieBot> [freebsd] Running Roast's stress test suite (this will take a while)...

[23:13] <Kaiepi> BeastieBot, stresstest

[23:13] <BeastieBot> [freebsd] Running Roast's stress test suite (this will take a while)...

[23:14] <Kaiepi> i'll need to work out why zef hangs when searching for Inline::Perl5 the way i'm using it

[23:31] <Geth> ¦ nqp/nummy-num: a4688c751b | (Zoffix Znet)++ | t/nqp/115-nums.t

[23:31] <Geth> ¦ nqp/nummy-num: Cover denormals and num value drift bugs

[23:31] <Geth> ¦ nqp/nummy-num: review: https://github.com/perl6/nqp/commit/a4688c751b

[23:41] <b2gills> t/04-nativecall/01-argless.t `An exception occurred while parameterizing Pointer`

[23:46] <b2gills> t/04-nativecall/19-function-pointers.t `This type cannot unbox to a native string: P6opaque, List`

[23:48] <b2gills> I'm getting all kinds of errors in t/04-nativecall
