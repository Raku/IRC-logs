[00:06] *** c418 joined
[00:06] *** c418 left
[00:11] <MasterDuke> m: sub a(Pair @a) { dd @a; dd @a[0] }; a Array[Pair].new([b => 2])

[00:11] <camelia> rakudo-moar e0a27ce37: OUTPUT: ¬´Array[Pair].new("b" => 2)‚ê§:b(2)‚ê§¬ª

[00:11] *** x[LGWs4x4i]uG2N0 left
[00:11] <MasterDuke> m: sub a(@a where all(@a) ~~ Pair) { say "hi" }; a (:1st, :2nd)

[00:11] <camelia> rakudo-moar e0a27ce37: OUTPUT: ¬´hi‚ê§¬ª

[00:12] <MasterDuke> lizmat: ^^^, not sure what you were trying for

[00:14] *** x[LGWs4x4i]uG2N0 joined
[00:14] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[00:28] *** apetresc1 joined
[00:28] *** apetresc1 left
[00:34] *** j3nnn1 left
[01:34] *** Zoffix joined
[01:34] *** p6bannerbot sets mode: +v Zoffix

[01:34] *** ChanServ sets mode: +o Zoffix

[01:35] *** p6bannerbot left
[01:36] *** p6bannerbot joined
[01:36] *** Zoffix sets mode: +o p6bannerbot

[01:36] *** Zoffix left
[02:45] *** ZofBot left
[02:46] *** ZofBot joined
[02:46] *** ChanServ sets mode: +v ZofBot

[02:46] *** p6bannerbot sets mode: +v ZofBot

[03:03] *** nullrouted joined
[03:03] *** nullrouted left
[03:16] *** lizmat left
[03:37] *** lizmat joined
[03:37] *** p6bannerbot sets mode: +v lizmat

[05:03] *** breitenj23 joined
[05:03] *** breitenj23 left
[06:18] *** By joined
[06:18] *** By left
[08:48] <[Tux]> Rakudo version 2018.06-312-ge0a27ce37 - MoarVM version 2018.06-331-g2c74b672c

[08:48] <[Tux]> csv-test-xs-20      0.446 -  0.461

[08:48] <[Tux]> test-t --race       0.961 -  1.015

[08:48] <[Tux]> csv-ip5xs           1.101 -  1.227

[08:48] <[Tux]> test-t              2.291 -  2.297

[08:48] <[Tux]> csv-ip5xs-20        8.113 -  8.335

[08:48] <[Tux]> test               10.059 - 10.530

[08:48] <[Tux]> test-t-20 --race   13.746 - 14.801

[08:48] <[Tux]> csv-parser         24.520 - 25.250

[08:48] <[Tux]> test-t-20          40.859 - 41.946

[08:57] *** DJones joined
[08:57] *** DJones left
[09:03] *** dct joined
[09:03] *** p6bannerbot sets mode: +v dct

[09:34] <lizmat> Files=1246, Tests=75931, 379 wallclock secs (16.42 usr  5.46 sys + 2695.24 cusr 237.75 csys = 2954.87 CPU)

[09:55] *** [Tux] left
[10:01] *** ErrantEgo19 joined
[10:01] *** ErrantEgo19 left
[10:03] *** [Tux] joined
[10:03] *** p6bannerbot sets mode: +v [Tux]

[10:46] *** pmurias joined
[10:47] *** p6bannerbot sets mode: +v pmurias

[11:30] <Geth> ¬¶ rakudo: d09756ae66 | (Elizabeth Mattijsen)++ | src/core/Mu.pm6

[11:30] <Geth> ¬¶ rakudo: Fix for R#2174

[11:30] <Geth> ¬¶ rakudo: 

[11:30] <Geth> ¬¶ rakudo: This was caused by the erroneous assumption that opcode 10 (vivify role

[11:30] <Geth> ¬¶ rakudo: attribute) of the `BUILDPLAN` would always be the last in the `BUILDPLAN`.

[11:30] <Geth> ¬¶ rakudo: If a `TWEAK` method is available, then the calling of `TWEAK` would follow.

[11:30] <Geth> ¬¶ rakudo: So the execution of `10` opcodes, would run into the run `TWEAK` task,

[11:30] <synopsebot> R#2174 [open]: https://github.com/rakudo/rakudo/issues/2174 [regression] attr + submethod TWEAK in role causes crash "This type (Submethod) does not support positional operations"

[11:30] <Geth> ¬¶ rakudo: causing the error.

[11:30] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/d09756ae66

[11:34] <Geth> ¬¶ nqp/truffle: 4 commits pushed by (Pawe≈Ç Murias)++

[11:34] <Geth> ¬¶ nqp/truffle: cee55155be | [truffle] Add missing guard to specialization

[11:34] <Geth> ¬¶ nqp/truffle: 7def1841de | [truffle] Implement nqp::substr

[11:34] <Geth> ¬¶ nqp/truffle: 83ae1acc81 | [truffle] Implement boolification for lists

[11:34] <Geth> ¬¶ nqp/truffle: 01800d625d | [truffle] Implement nqp::existspos, nqp::deletekey

[11:34] <Geth> ¬¶ nqp/truffle: review: https://github.com/perl6/nqp/compare/10bed0641b15...01800d625d99

[11:36] <Geth> ¬¶ roast: efb42a9462 | (Elizabeth Mattijsen)++ | S12-construction/TWEAK.t

[11:36] <Geth> ¬¶ roast: Test for R#2174

[11:36] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/efb42a9462

[11:36] <synopsebot> R#2174 [open]: https://github.com/rakudo/rakudo/issues/2174 [regression] attr + submethod TWEAK in role causes crash "This type (Submethod) does not support positional operations"

[11:40] *** Eduard_Munteanu0 joined
[11:40] *** Eduard_Munteanu0 left
[11:42] *** zyley joined
[11:42] *** zyley left
[11:44] *** ffernand11 joined
[11:44] *** ffernand11 left
[11:45] <Geth> ¬¶ nqp/truffle: 425230eea0 | (Pawe≈Ç Murias)++ | src/vm/jvm/runtime/org/perl6/nqp/truffle/nodes/expression/NQPPowNumNode.java

[11:45] <Geth> ¬¶ nqp/truffle: [truffle] Fix nqp::pow_n with base 1

[11:45] <Geth> ¬¶ nqp/truffle: review: https://github.com/perl6/nqp/commit/425230eea0

[11:45] *** Vercas27 joined
[11:45] *** Vercas27 left
[11:51] *** dct left
[11:57] *** dan3wik joined
[11:57] *** dan3wik left
[12:00] *** betawaffle16 joined
[12:01] *** betawaffle16 left
[12:05] *** basic`21 joined
[12:05] *** basic`21 left
[12:05] *** Guest81029 joined
[12:05] *** Guest81029 left
[12:06] *** cncr04s20 joined
[12:07] *** cncr04s20 left
[12:27] *** fractal joined
[12:27] *** fractal left
[12:27] *** wols joined
[12:28] *** wols left
[12:31] <timotimo> ever wanted to see every path that leads to a given routine from the routine overview? well, now you can: https://imgur.com/zNEY5jY

[12:41] *** thomasb951114 joined
[12:41] *** thomasb951114 left
[12:53] <timotimo> https://imgur.com/U8n5jsA - now with a tiny bit more eye candy

[13:03] <lizmat> timotimo++

[13:03] <timotimo> maybe when i publish the project someone will contribute CSS magic to make the lines start and end in the middle of the first and last row respectively

[13:04] <timotimo> it looks like a giant piece of hackery to do; either add a pseudo-element that is half the height of the cell and give it the same color as the background and place it correctly (which won't work because there's already a pseudo-element there and i don't think you can stack 'em), or use a background-image with gradient, which apparently requires six different implementations of gradient because browsers?

[13:09] <lizmat> yeah, that's way above my current paygrade :-)

[13:10] <MasterDuke> timotimo: nice

[13:10] <timotimo> you mean paingrade? :D

[13:11] <lizmat> hehe... timotimo: yeah, and it is supposed to fun, right?  so what does that make us ?  :-)

[13:12] <timotimo> i'm a bit of a masakist

[13:20] <MasterDuke> timotimo: btw, "see every path that leads to a given routine" is in fact a feature i've wanted before

[13:20] <timotimo> yes!

[13:20] <timotimo> me, too. a whole bunch of times

[13:20] <timotimo> like, *so* often

[13:21] <MasterDuke> part of what inspired me to write coverable

[13:41] <samcv> .

[13:41] <yoleaux> 04:08Z <Zoffix> samcv: would you double-check this prop-spec? Is it correct that Upper/Title case mapping of '√ü' is '√ü' and not 'SS'? https://github.com/perl6/roast/blob/c08ceb4221e142829ce771b6a4339597292578aa/S15-unicode-information/uniprop.t#L89-L91

[13:42] <samcv> ZofBot: my perl6 is giving me SS

[13:42] <samcv> oh

[13:42] <samcv> .tell Zoffix that is just for "Simple_Uppercase_Mapping" which does not uppercase to SS

[13:42] <yoleaux> samcv: I'll pass your message to Zoffix.

[13:54] <lizmat> moritz timotimo: any idea if this used to be valid Perl 6 code: rule expression_list { [\w+] ** ',' }

[13:55] <lizmat> and what it should be now to get the same semantics ?

[13:56] <lizmat> bisectable6: rule expression_list { [\w+] ** ',' }

[13:56] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=d09756a) because on both starting points the exit code is 1

[13:56] <bisectable6> lizmat, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/107a1b1799082a88822189f5a71bcc18

[13:56] <lizmat> bisectable6: rule expression_list { [\w+] ** ',' }

[13:56] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=d09756a) because on both starting points the exit code is 1

[13:59] <MasterDuke> committable6: all rule expression_list { [\w+] ** ',' }

[13:59] <committable6> MasterDuke, https://gist.github.com/192ec99f35f07c703305bc790d2f3239

[14:00] <MasterDuke> lizmat: ^^^, looks like it hasn't been valid since 2014.01

[14:01] *** bisectable6 left
[14:02] <lizmat> interesting..

[14:02] <lizmat> I can't do a bisect before 2015.12 can I ?

[14:05] <MasterDuke> you can do 2014.01 if you set the old rev manually

[14:06] <lizmat> hmmm... looks like I killed bisectable6  :-(

[14:06] <lizmat> Changelog of 2014.10 doesn't show anything :-(

[14:06] <lizmat> ok, I think I'll just leave an Issue rather than a PR then

[14:07] *** bisectable6 joined
[14:07] *** ChanServ sets mode: +v bisectable6

[14:07] *** p6bannerbot sets mode: +v bisectable6

[14:20] * lizmat thinks the current syntax is probably: rule expression_list { [w+]* %% ',' }

[14:23] <b2gills> lizmat: I've come across code that I'd written years ago on SO where I used something like ` . ** ',' ` So yes it used to work, but I don't think it should anymore

[14:32] *** robertle joined
[14:33] *** p6bannerbot sets mode: +v robertle

[14:59] <Geth> ¬¶ rakudo: 546d08c164 | (Elizabeth Mattijsen)++ | src/core/Routine.pm6

[14:59] <Geth> ¬¶ rakudo: Remove sig from Routine.perl if it is empty

[14:59] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/546d08c164

[15:02] *** mww113 joined
[15:02] *** mww113 left
[15:02] *** Yatekii1 joined
[15:02] *** Yatekii1 left
[15:20] <Geth> ¬¶ rakudo: 6ad50d7948 | (Elizabeth Mattijsen)++ | src/core/Routine.pm6

[15:20] <Geth> ¬¶ rakudo: Give Routine its own .gist

[15:20] <Geth> ¬¶ rakudo: 

[15:20] <Geth> ¬¶ rakudo: So that "say sub foo { }" will be much closer to what Data::Pretty does

[15:20] <Geth> ¬¶ rakudo: and thus make it obsolete and save masak some work.

[15:20] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/6ad50d7948

[15:21] <lizmat> .tell masak https://github.com/rakudo/rakudo/commit/6ad50d7948

[15:21] <yoleaux> lizmat: I'll pass your message to masak.

[15:30] *** rkta joined
[15:30] *** rkta left
[15:37] *** mentifis1 joined
[15:37] *** mentifis1 left
[15:49] <MasterDuke> i think someone suggested this recently, but what about changing up how the --profile options work? to --profile=filename and --profile-type=heap ? i find i frequently want to set a name, which requires adding --profile-filename=name, but rarely change to a heap profile

[15:55] <MasterDuke> also, does anyone have any suggestions for speeding up subbuf? https://github.com/rakudo/rakudo/blob/master/src/core/Buf.pm6#L173-L215

[15:56] <MasterDuke> it's the top by exclusive time (40%) in opening .gz files with Compress::Zlib

[15:57] *** AlexDani` joined
[15:57] *** p6bannerbot sets mode: +v AlexDani`

[15:59] *** AlexDaniel left
[16:07] <timotimo> lizmat: don't know :S

[16:08] * lizmat lost context

[16:08] <timotimo> that regex syntax

[16:08] <timotimo> [\w+]**','

[16:08] <lizmat> ah, that, 

[16:08] <Kaiepi> should i host a netbsd equivalent to pufferbot/beastiebot?

[16:08] <timotimo> not sure how that is supposed to have worked without a number

[16:08] *** AlexDani` left
[16:08] <timotimo> but it looks like it was meant to use % rather than a second * there?

[16:08] <Kaiepi> only issue is that builds will be reeeeaaaalllly long 

[16:08] <lizmat> yeah, pretty sure that's now [\w+]* %% ','

[16:15] *** rorx16 joined
[16:15] *** rorx16 left
[16:17] <lizmat> MasterDuke: hmmm... I wonder why that isn't a multi ?

[16:19] <lizmat> Zoffix: re 5f48c0695c48f152f0541503fb05151a84bc4bad , did you have any reason for keeping it as an only method ?  

[16:26] <MasterDuke> lizmat: i did just try making it a multi, but it didn't seem to help

[16:27] <lizmat> MasterDuke: do you have a simple piece of code I could use to benchmark ?

[16:27] <MasterDuke> lizmat: this is what i tried: https://gist.github.com/MasterDuke17/1cf73f690e43c79c1ed0e4b197fe4c5c

[16:28] <lizmat> and in which one of the multi's is the bottleneck now ?

[16:28] <MasterDuke> `use Compress::Zlib; my $a = gzslurp("3k.txt.gz"); say $a.lines.elems; say now - INIT now` # where 3k.txt.gz is a 50k file (compressed from a 3k lines text file)

[16:30] *** Nightmare8 joined
[16:30] *** Nightmare8 left
[16:30] <MasterDuke> line 174 and line 240

[16:31] <MasterDuke> almost an even split

[16:32] <timotimo> i don't think nqp::islt_i($length, 0) is safe when the signature doesn't make $length an "int"

[16:34] <lizmat> yeah, you want to keep that HLL

[16:34] *** xunplini1 joined
[16:34] *** xunplini1 left
[16:34] <MasterDuke> right

[16:35] <lizmat> MasterDuke: I just realized that that implementation predates the invention of nqp::slice

[16:36] <lizmat> m: use nqp; dd nqp::slice(Buf.new(1,2,3,4),0,2)

[16:36] <camelia> rakudo-moar 6ad50d794: OUTPUT: ¬´Buf.new(1,2,3)‚ê§¬ª

[16:36] <lizmat> https://github.com/perl6/nqp/blob/master/docs/ops.markdown#slice

[16:37] <lizmat> I think Buf.subbuf can be reduced to parameter sanity checking + nqp::slice

[16:37] <timotimo> \o/

[16:37] <lizmat> MasterDuke: want to take that on?

[16:39] <MasterDuke> lizmat: interesting. i'll take a look

[16:39] *** enyc8 joined
[16:39] *** enyc8 left
[16:41] <lizmat> ++MasterDuke

[16:45] *** wgma joined
[16:45] *** wgma left
[16:45] *** Zoffix joined
[16:45] *** p6bannerbot sets mode: +v Zoffix

[16:45] <Zoffix> lizmat: re 5f48c0695c48f152f0541503fb05151a84bc4bad   No, I don't think there was any reason for keeping it an only method

[16:45] <yoleaux> 13:42Z <samcv> Zoffix: that is just for "Simple_Uppercase_Mapping" which does not uppercase to SS

[16:46] <Zoffix> cool

[16:46] *** darkmagic joined
[16:46] *** darkmagic left
[16:47] <lizmat> Zoffix: ok, cool, MasterDuke is now looking at speeding that up

[16:47] <lizmat> I'm expecting a factor or 4 at least  :-)

[16:47] <Zoffix> \o/

[16:47] <lizmat> thanks to the new nqp::slice op

[16:47] <lizmat> (which didn't exist yet when you wrote that )

[16:48] *** jack36 joined
[16:48] *** jack36 left
[16:54] *** FiendKing04 joined
[16:54] *** FiendKing04 left
[16:56] *** Cool_Fire14 joined
[16:57] *** Cool_Fire14 left
[17:07] <MasterDuke> huh, Range.int-bounds($from is rw, $to is rw) isn't documented

[17:08] <Zoffix> isn't in spec either

[17:10] *** Zoffix left
[17:10] <MasterDuke> looks like lizmat added it a year and a half ago because `my ($a,$b) = foo()` is slow

[17:10] *** bigpet3 joined
[17:11] *** bigpet3 left
[17:11] *** Zoffix joined
[17:11] *** p6bannerbot sets mode: +v Zoffix

[17:11] *** ChanServ sets mode: +o Zoffix

[17:12] *** p6bannerbot left
[17:12] *** p6bannerbot joined
[17:12] *** Zoffix sets mode: +o p6bannerbot

[17:13] <jnthn> Hm, I'm not sure that it should be documented; we should make list assignment faster :P

[17:13] *** Zoffix_ joined
[17:13] *** p6bannerbot sets mode: +v Zoffix_

[17:13] *** Zoffix_ left
[17:13] *** Zoffix left
[17:13] <MasterDuke> jnthn: i've tried to do that several times

[17:14] <MasterDuke> but i think it needs work above my pay grade

[17:15] <MasterDuke> though that reminds me about https://github.com/rakudo/rakudo/pull/1844 if there are any opinions

[17:20] *** jdv79_ joined
[17:21] <Geth> ¬¶ roast: 524fdd649d | (Zoffix Znet)++ | S03-junctions/autothreading.t

[17:21] <Geth> ¬¶ roast: [v6.d REVIEW] Fix typo in test description

[17:21] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/524fdd649d

[17:21] *** p6bannerbot sets mode: +v jdv79_

[17:21] *** jdv79 left
[17:21] *** ilmari left
[17:21] *** ilmari joined
[17:21] *** ilmari left
[17:21] *** ilmari joined
[17:21] *** p6bannerbot sets mode: +v ilmari

[17:22] *** p6bannerbot sets mode: +v ilmari

[17:25] *** dogbert11 joined
[17:26] *** p6bannerbot sets mode: +v dogbert11

[17:28] *** dogbert17 left
[17:28] * lizmat goes our for some fresh air (fsvo fresh)

[17:29] <jnthn> Our "fresh" here is still > 30C :/

[17:30] * timotimo goes to grab a fresh can of perri-air out of the fridge

[17:30] *** greppable6 left
[17:30] *** yoleaux left
[17:30] *** statisfiable6 left
[17:30] *** benchable6 left
[17:30] *** notable6 left
[17:31] *** benchable6 joined
[17:31] *** notable6 joined
[17:31] *** statisfiable6 joined
[17:31] *** greppable6 joined
[17:31] *** squashable6 left
[17:31] *** p6bannerbot sets mode: +v benchable6

[17:31] *** p6bannerbot sets mode: +v notable6

[17:31] *** p6bannerbot sets mode: +v statisfiable6

[17:31] *** p6bannerbot sets mode: +v greppable6

[17:31] *** undersightable6 left
[17:32] *** deedra15 joined
[17:32] *** deedra15 left
[17:32] *** Pixelz21 joined
[17:33] *** p6bannerbot sets mode: +v Pixelz21

[17:36] *** pmurias left
[17:37] *** Pixelz21 left
[17:39] *** |Tux| left
[17:39] *** |Tux| joined
[17:40] *** p6bannerbot sets mode: +v |Tux|

[17:44] *** pmurias joined
[17:45] *** p6bannerbot sets mode: +v pmurias

[18:13] *** squashable6 joined
[18:13] *** p6bannerbot sets mode: +v squashable6

[18:21] <Geth> ¬¶ nqp/truffle: a67fcd74d2 | (Pawe≈Ç Murias)++ | src/vm/jvm/Truffle.nqp

[18:21] <Geth> ¬¶ nqp/truffle: [truffle] Implement nqp::isfalse

[18:21] <Geth> ¬¶ nqp/truffle: review: https://github.com/perl6/nqp/commit/a67fcd74d2

[18:21] <Geth> ¬¶ nqp/truffle: 12489cfdd9 | (Pawe≈Ç Murias)++ | src/vm/jvm/runtime/org/perl6/nqp/truffle/runtime/NQPList.java

[18:21] <Geth> ¬¶ nqp/truffle: [truffle] Implement nqp::atpos with negative indexes

[18:21] <Geth> ¬¶ nqp/truffle: review: https://github.com/perl6/nqp/commit/12489cfdd9

[18:21] <Geth> ¬¶ nqp/truffle: bc87a3d857 | (Pawe≈Ç Murias)++ | 6 files

[18:21] <Geth> ¬¶ nqp/truffle: [truffle] Implement nqp::pop, nqp::push, nqp::shift nqp::unshift on arrays

[18:21] <Geth> ¬¶ nqp/truffle: review: https://github.com/perl6/nqp/commit/bc87a3d857

[18:50] *** lorimer27 joined
[18:50] *** lorimer27 left
[19:05] *** get joined
[19:06] *** get left
[19:07] *** dct joined
[19:07] *** p6bannerbot sets mode: +v dct

[19:17] *** yoleaux joined
[19:18] *** p6bannerbot sets mode: +v yoleaux

[19:27] *** dct left
[19:28] <Geth> ¬¶ rakudo: MasterDuke17++ created pull request #2175: Speed up subbuf by using the new nqp::slice op...

[19:28] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/2175

[19:30] <MasterDuke> lizmat: ^^^, turned out to be a pretty simple change

[19:32] *** dct joined
[19:32] *** p6bannerbot sets mode: +v dct

[19:40] *** Turandot28 joined
[19:40] *** Turandot28 left
[19:41] *** yaymuffins9 joined
[19:41] *** yaymuffins9 left
[19:44] <lizmat> hmmm... did we lose Geth here?

[19:44] * lizmat just merged https://github.com/rakudo/rakudo/pull/2175

[19:46] <MasterDuke> timotimo: btw, trying to profile opening a 50k .gz with Compress::Zlib creates a 16mb .json profile that crashes the QT viewer. trying to profile a 190k .gz file creates a .json it won't even open, complaining about "too deeply nested elements"

[19:52] *** Geth left
[19:52] *** Geth joined
[19:52] *** ChanServ sets mode: +v Geth

[19:52] <Geth> ¬¶ rakudo: 4e56ce954e | (Daniel Green)++ | src/core/Buf.pm6

[19:52] <Geth> ¬¶ rakudo: Speed up subbuf by using the new nqp::slice op...

[19:52] <Geth> ¬¶ rakudo: 

[19:52] <Geth> ¬¶ rakudo: instead of manually looping with nqp::bindpos+nqp::atpos.

[19:52] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/4e56ce954e

[19:52] <Geth> ¬¶ rakudo: c4bb1b19d2 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core/Buf.pm6

[19:52] <Geth> ¬¶ rakudo: Merge pull request #2175 from MasterDuke17/speed_up_subbuf

[19:52] <Geth> ¬¶ rakudo: 

[19:52] <Geth> ¬¶ rakudo: Speed up subbuf by using the new nqp::slice op...

[19:52] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/c4bb1b19d2

[19:53] *** p6bannerbot sets mode: +v Geth

[19:57] *** AlexDaniel joined
[19:57] *** AlexDaniel left
[19:57] *** AlexDaniel joined
[19:57] *** p6bannerbot sets mode: +v AlexDaniel

[19:57] *** p6bannerbot sets mode: +v AlexDaniel

[19:59] <timotimo> MasterDuke: perhaps needs an inline disable

[19:59] <timotimo> that thing with the call graphs is still not fixed, alas

[20:01] <MasterDuke> https://github.com/rakudo/rakudo/blob/master/src/core/Buf.pm6#L119-L121 is now the most expensive in the Compress::Zlib test

[20:02] <MasterDuke> the next is Compress::Zlib.get

[20:02] <timotimo> how often does it get entered?

[20:02] <MasterDuke> decode?

[20:02] <MasterDuke> or get?

[20:03] <timotimo> decode

[20:03] <MasterDuke> 3401 for decode, 161383 for get

[20:03] <timotimo> so it really does spend a lot time doing the decoding, huh

[20:04] <timotimo> a "perf record" perhaps tells us something about that, but it's likely just "it's a lot of work it's doing"

[20:06] *** dct left
[20:07] *** MasterDuke left
[20:10] *** pmurias left
[20:10] *** pmurias joined
[20:11] *** p6bannerbot sets mode: +v pmurias

[20:16] <lizmat> Q: can we have Bufs with > 2**64 bytes ?

[20:17] <timotimo> currently, we can not.

[20:18] <lizmat> m: dd Buf.new.reallocate(2**65).elems

[20:18] <camelia> rakudo-moar c4bb1b19d: OUTPUT: ¬´Cannot unbox 66 bit wide bigint into native integer‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:18] <lizmat> I guess not

[20:18] <timotimo> if your machine only has 64bit pointers, you don't have space for both your program and the 2**64 byte big buffer

[20:18] <lizmat> fair enough  :-)

[20:18] <timotimo> even then, that's how many terabytes?

[20:19] <lizmat> yehah, true

[20:19] <jnthn> m: say 2 ** 64

[20:19] <camelia> rakudo-moar c4bb1b19d: OUTPUT: ¬´18446744073709551616‚ê§¬ª

[20:19] *** MasterDuke joined
[20:19] *** p6bannerbot sets mode: +v MasterDuke

[20:19] <timotimo> m: say 2 ** 64 / 1024 / 1024 / 1024 / 1024

[20:19] <camelia> rakudo-moar c4bb1b19d: OUTPUT: ¬´16777216‚ê§¬ª

[20:19] <jnthn> m: say (2 ** 64).flip.comb(3).reverse.join('_').say

[20:19] <camelia> rakudo-moar c4bb1b19d: OUTPUT: ¬´81_644_447_370_907_155_616‚ê§True‚ê§¬ª

[20:19] <timotimo> that should be terabytes?

[20:19] <timotimo> the next thing is petabytes, right?

[20:19] <timotimo> m: say 16777216 / 1024

[20:19] <camelia> rakudo-moar c4bb1b19d: OUTPUT: ¬´16384‚ê§¬ª

[20:19] <jnthn> Yeah but that's 2 after tera

[20:19] <timotimo> oh, ok

[20:19] <sjn> m: say 64 - 12; # Terabytes

[20:19] <camelia> rakudo-moar c4bb1b19d: OUTPUT: ¬´52‚ê§¬ª

[20:19] <timotimo> so it's 16 petabytes?

[20:20] <sjn> m: say "2^" ~ 64 - 12; # Terabytes

[20:20] <camelia> rakudo-moar c4bb1b19d: OUTPUT: ¬´2^52‚ê§¬ª

[20:20] <lizmat> so, we could technically have all Buf.methods that take an Int also give a native int candidate

[20:20] <jnthn> 81 exabytes?

[20:20] <jnthn> I think

[20:20] <lizmat> so we wouldn't have to box / unbox 

[20:20] <timotimo> if someone with that much ram calls us to say that we please lift that limitation, we're probably in a very good place anyway

[20:21] <MasterDuke> (slight delay because of a power outage) MVM_string_utf8_decode is 2nd in a perf report

[20:23] <MasterDuke> hm, for a larger file, zero_slots is 2nd and MVM_string_utf8_decode drops to 4th

[20:23] <lizmat> MasterDuke: would you mind if I took optimizing subbuf and associated methods a bit further?  Or do you have your sights set on that?

[20:24] <MasterDuke> lizmat: please, go ahead

[20:24] <lizmat> ok, will do!

[20:28] <timotimo> google "how to zero out memory the fastest"

[20:28] <timotimo> not sure if we can get much better at that

[20:28] <timotimo> not sure what exactly we're doing at the moment? but hopefully we use memset

[20:30] <MasterDuke> hm, an even larger (22mb) file is different again. VMArray_gc_mark tied with MVM_interp_run for the top at 7%, then zero_slots, then sim_stack_find

[20:32] <timotimo> VMArray_gc_mark shouldn't take any time for a native int array like a Buf or Blob would be

[20:32] <timotimo> if it's an Int array, then yeah, that'll take a while

[20:33] <MasterDuke> the code is just 'use Compress::Zlib; my $a = gzslurp("1m.txt.gz"); say $a.lines.elems;'

[20:34] <timotimo> sim_stack_find, eh? that's not supposed to take long ...

[20:34] <MasterDuke> https://github.com/retupmoca/P6-Compress-Zlib/blob/master/lib/Compress/Zlib.pm6#L219

[20:39] <MasterDuke> `while (elems < ssize) body->slots.i64[elems++] = 0;`, couldn't that be a memset?

[20:39] <jnthn> MasterDuke: Yes, with a bit of calculation

[20:40] <Geth> ¬¶ 6.d-prep: 8707604fea | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/FEATURES.md

[20:40] <Geth> ¬¶ 6.d-prep: Add TODO: Sort out normalization of ZDRs

[20:40] <Geth> ¬¶ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/8707604fea

[20:40] *** buggable left
[20:40] *** buggable joined
[20:40] *** ChanServ sets mode: +v buggable

[20:41] *** p6bannerbot sets mode: +v buggable

[20:45] <MasterDuke> jnthn: same with all the other cases, right?

[20:45] <jnthn> MasterDuke: Yes

[20:47] <MasterDuke> ah, maybe i'll give that a go

[20:47] <MasterDuke> btw, think https://github.com/MoarVM/MoarVM/pull/896 and https://github.com/MoarVM/MoarVM/pull/897 are fine?

[20:48] <jnthn> MasterDuke: All OSX fails in the first of those

[20:49] <jnthn> Ah, maybe timing

[20:49] <MasterDuke> it's been happening on all recent travis builds

[20:49] <jnthn> Restated the test jobs to find out :)

[20:50] <lizmat> .oO( that's quite a statement :-)

[20:51] <jnthn> :P

[20:51] <jnthn> Other than that it's good, though I still find that warning frustrating :P

[21:03] *** tony-o_ left
[21:04] *** tony-o joined
[21:05] *** p6bannerbot sets mode: +v tony-o

[21:11] *** MasterDuke left
[21:14] *** MasterDuke joined
[21:14] *** p6bannerbot sets mode: +v MasterDuke

[21:18] *** travis-ci joined
[21:18] *** travis-ci left
[21:29] *** dct joined
[21:29] *** p6bannerbot sets mode: +v dct

[21:47] <timotimo> [Coke]: could someone try to limit the size of the screenshot on the front page of news.perlfoundation.org? on my end it blocks three quarters of the sidebar :|

[21:48] *** hipp joined
[21:48] *** hipp left
[21:52] *** wsm joined
[21:52] *** wsm left
[21:57] *** pmurias left
[22:08] *** robertle left
[22:08] <[Coke]> timotimo: I can only edit my blog entries.

[22:09] <[Coke]> if you comment on it, Alan can probably fix it.

[22:13] *** MatthewAllan9324 joined
[22:13] *** MatthewAllan9324 left
[22:14] *** yaymuffins28 joined
[22:14] *** yaymuffins28 left
[22:18] <Geth> ¬¶ roast: f677510e00 | (Zoffix Znet)++ | S05-modifier/sigspace.t

[22:18] <Geth> ¬¶ roast: [v6.d REVIEW] Add another test for trailing ws in :s

[22:18] <Geth> ¬¶ roast: 

[22:18] <Geth> ¬¶ roast: To cover the case where it'd fail

[22:18] <Geth> ¬¶ roast: 

[22:18] <Geth> ¬¶ roast: Orig: https://github.com/perl6/roast/commit/bb4510143

[22:18] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/f677510e00

[22:19] *** pmurias joined
[22:20] <timotimo> maybe i'll send him a mail directly?

[22:20] *** pmurias left
[22:36] <[Coke]> sure

[22:40] *** justyns joined
[22:40] *** p6bannerbot sets mode: +v justyns

[22:45] *** justyns left
[23:00] *** JStoker17 joined
[23:00] *** p6bannerbot sets mode: +v JStoker17

[23:00] <JStoker17> I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[23:00] <JStoker17> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[23:00] <JStoker17> A fascinating blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[23:03] <AlexDaniel> Zoffix: what if we give voice, take it away, and then give it again after a delay? :)

[23:03] <AlexDaniel> .oO( where's the source code for these spam bots? )

[23:03] <AlexDaniel> :)

[23:05] *** JStoker17 left
[23:06] <[Coke]> I thought we had everything blocked?

[23:09] <timotimo> what we have is we force new people who join to be silenced for 40 seconds

[23:09] <timotimo> then they get voice

[23:09] <timotimo> hoping that they'll have spammed some other channel already and gotten killed off the network

[23:10] <timotimo> instead, they use sufficiently many connections or something?

[23:10] <AlexDaniel> oh, that's how it works

[23:10] <AlexDaniel> I thought it was the bot just giving up after some time :)

[23:21] *** swoolley14 joined
[23:21] *** swoolley14 left
[23:25] *** BeastieBot left
[23:35] *** CeBe11 joined
[23:35] *** CeBe11 left
[23:42] *** dct left
[23:46] *** Fusl29 joined
[23:46] *** p6bannerbot sets mode: +v Fusl29

[23:49] *** Fusl29 left
[23:59] *** Turska-11 joined
[23:59] *** Turska-11 left
[23:59] <[Coke]> (silenced) is that what people were arguing for instead of what zoffix setup?

[23:59] <[Coke]> let's go back to what zoffix had.

