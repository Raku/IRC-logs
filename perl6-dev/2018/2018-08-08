[00:19] <timotimo> outpew pew

[00:20] <timotimo> that seems pretty clear, the append grapheme function seems to read too far in whatever was allocated in MVM_string_utf8_c8_decodestream on line 47

[00:20] <timotimo> 471

[00:21] <timotimo> and get_all_in_buffer reads just outside the end of that same buffer

[00:21] <timotimo> not sure why exactly the same buffer is being read as 2 bytes and written as 4 bytes, though

[00:21] <timotimo> it does seem to be the same buffer, at least it is the same address

[00:46] *** noah25 joined
[00:46] *** noah25 left
[01:03] *** SleePy2 joined
[01:04] *** p6bannerbot sets mode: +v SleePy2

[01:08] *** SleePy2 left
[01:12] *** raspimate_ joined
[01:13] *** p6bannerbot sets mode: +v raspimate_

[01:13] *** raspimate_ left
[01:47] *** Kaiepi left
[01:50] *** astj left
[01:52] *** Kaiepi joined
[01:53] *** p6bannerbot sets mode: +v Kaiepi

[02:11] *** msm25 joined
[02:12] *** p6bannerbot sets mode: +v msm25

[02:12] *** msm25 left
[02:12] *** A5A joined
[02:13] *** p6bannerbot sets mode: +v A5A

[02:14] *** A5A left
[02:25] <Geth> ¦ roast: 6a46d3d6f8 | (Zoffix Znet)++ | S32-encoding/decoder.t

[02:25] <Geth> ¦ roast: Remove whitespace

[02:25] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6a46d3d6f8

[02:26] <Geth> ¦ roast: b6fc8e0212 | (Zoffix Znet)++ | S32-encoding/decoder.t

[02:26] <Geth> ¦ roast: Cover SEGV in utf8-c8 proc read

[02:26] <Geth> ¦ roast: 

[02:26] <Geth> ¦ roast: Covers R#2158 https://github.com/rakudo/rakudo/issues/2158

[02:26] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b6fc8e0212

[02:26] <synopsebot> R#2158 [open]: https://github.com/rakudo/rakudo/issues/2158 [SEGV][regression][⚠ blocker ⚠] :enc<utf8-c8> on Proc drops content / SEGVs

[03:07] *** GDiaX joined
[03:08] *** p6bannerbot sets mode: +v GDiaX

[03:08] *** GDiaX left
[03:45] *** Kaiepi left
[05:06] *** dysfigured18 joined
[05:06] *** dysfigured18 left
[05:12] *** FROGGS_ joined
[05:12] *** p6bannerbot sets mode: +v FROGGS_

[05:42] *** Kaiepi joined
[05:42] *** p6bannerbot sets mode: +v Kaiepi

[06:18] *** huhlig16 joined
[06:18] *** huhlig16 left
[06:24] *** atk14 joined
[06:25] *** shareable6 joined
[06:25] *** p6bannerbot sets mode: +v atk14

[06:25] *** p6bannerbot sets mode: +v shareable6

[06:31] *** atk14 left
[06:41] *** robertle joined
[06:42] *** p6bannerbot sets mode: +v robertle

[06:42] *** Zuu_ joined
[06:43] *** Zuu_ left
[06:44] *** guntbert9 joined
[06:44] *** guntbert9 left
[06:56] *** Kaiepi left
[06:57] *** Kaiepi joined
[06:57] *** p6bannerbot sets mode: +v Kaiepi

[07:37] <Geth> ¦ rakudo: JJ++ created pull request #2192: Uses DISTRO when available, refs #2190

[07:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2192

[07:37] <synopsebot> RAKUDO#2190 [open]: https://github.com/rakudo/rakudo/issues/2190 Substitute Rakudo::Internals::is-win to $*DISTRO.is-win for easier (or possible) testing of code

[07:44] *** Minkar8 joined
[07:45] *** p6bannerbot sets mode: +v Minkar8

[07:45] *** Minkar8 left
[07:47] <Geth> ¦ roast: JJ++ created pull request #462: Adds test for translate-nl

[07:47] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/462

[08:04] *** dogbert11 left
[08:07] *** Ven` joined
[08:07] *** p6bannerbot sets mode: +v Ven`

[08:10] *** AlexDaniel left
[08:30] *** Ven` left
[08:31] *** Ven` joined
[08:31] *** p6bannerbot sets mode: +v Ven`

[08:32] *** [TuxCM] left
[08:49] *** PufferBot joined
[08:49] *** p6bannerbot sets mode: +v PufferBot

[09:11] *** lizmat joined
[09:12] *** p6bannerbot sets mode: +v lizmat

[09:12] *** lizmat_ joined
[09:13] *** p6bannerbot sets mode: +v lizmat_

[09:14] *** lizmat__ joined
[09:15] *** p6bannerbot sets mode: +v lizmat__

[09:16] *** lizmat left
[09:16] <jnthn> morning o/

[09:16] *** lizmat_ left
[09:17] *** lizmat joined
[09:17] *** p6bannerbot sets mode: +v lizmat

[09:18] *** rctgamer34 joined
[09:18] *** p6bannerbot sets mode: +v rctgamer34

[09:18] *** lizmat__ left
[09:19] *** rctgamer34 left
[09:29] *** pmurias joined
[09:30] *** p6bannerbot sets mode: +v pmurias

[09:31] *** NeddySeagoon23 joined
[09:32] *** p6bannerbot sets mode: +v NeddySeagoon23

[09:35] *** b2gills left
[09:36] *** NeddySeagoon23 left
[09:37] *** Kaiepi left
[09:38] *** b2gills joined
[09:39] *** p6bannerbot sets mode: +v b2gills

[09:48] *** [TuxCM] joined
[09:49] *** p6bannerbot sets mode: +v [TuxCM]

[09:50] <Geth> ¦ rakudo: d021af232a | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[09:50] <Geth> ¦ rakudo: Revert "Manually inline Hash!AT-POS-CONTAINER"

[09:50] <Geth> ¦ rakudo: 

[09:50] <Geth> ¦ rakudo: This reverts commit 1cd654a224077eb1aab7eaa43ea7d2eebb109c4f.

[09:50] <Geth> ¦ rakudo: 

[09:50] <Geth> ¦ rakudo: As Jonathan pointed out, this was *not* an improvement.

[09:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d021af232a

[09:50] <jnthn> :)

[09:50] <jnthn> lizmat++ for checking

[09:50] * jnthn spent 4+ hours analyzing and tweaking that stuff yesterday :)

[09:51] <lizmat> should have checked before  :-(

[09:51] <yoleaux> 7 Aug 2018 21:16Z <benjikun> lizmat: Thanks

[09:51] <lizmat> jnthn: apart from the speed, I did *not* see any difference in --profile  :-(

[09:52] <jnthn> fwiw, the inliner does somewhat (though needs to get smarter at) exclude the cost of nested inlines

[09:52] <jnthn> When considering whether to inline something

[09:52] <lizmat> so, how can I see an inline with --profile?

[09:53] <jnthn> So you can actually have two small methods, have the second inline into the first and the first into its caller, but if you manually inlined the second into the first then you might not get the first inlined into the caller 

[09:54] <lizmat> yeah, I get that.. I just didn't think replacing a private method call with an nqp::op would actually increase the size of the body

[09:54] <jnthn> It can

[09:54] <jnthn> You never know what's behind an nqp::op without checking

[09:54] <jnthn> Some of them do just go down to a single bytecode instruction

[09:55] <jnthn> But some of them expand into a fairly involved QAST tree

[09:55] <lizmat> so how does one check?  again, apart from the speed difference, the --profiles between the two cases are identical

[09:55] <lizmat> the test case being: my %h = a => 42; for ^1_000_000 -> int $_ { my $a = %h.AT-KEY("a") }

[09:55] <jnthn> Look for the definition of the op

[09:56] <jnthn> BTW, AT-KEY inlines into postcircumfix:<{ }> and that in turn is inlined into the caller, so a benchmark with %h<a> should also show little difference :)

[09:56] <jnthn> The big desugar-y ones are mostly near the top of Actions.nqp

[09:57] <lizmat> huh??

[09:57] <jnthn> As in, %h<a> should be close to %h.AT-KEY("a")

[09:57] <jnthn> In terms of performance

[09:57] <Geth> ¦ nqp/truffle: ee63d0ecd6 | (Paweł Murias)++ | 11 files

[09:57] <Geth> ¦ nqp/truffle: [truffle] Implement nqp::getcurhllsym, nqp::bindcurhllsym, nqp::gethllsym, nqp::bindhllsym

[09:57] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/ee63d0ecd6

[09:58] <lizmat> I'm *very* surprised by the phrase "AT-KEY inlines into postcircumfix:<{ }>" 

[09:58] <jnthn> Why?

[09:59] <lizmat> because postcircumfix:<{ }> calls AT-KEY, not the other way around ?

[09:59] *** Whiskey6 joined
[09:59] <lizmat> multi sub postcircumfix:<{ }>( \SELF, \key ) is raw {

[09:59] <lizmat>     SELF.AT-KEY(key);

[09:59] <lizmat> }

[10:00] <jnthn> Yes

[10:00] *** p6bannerbot sets mode: +v Whiskey6

[10:00] <jnthn> So the body of AT-KEY is inlined into (or if you like, copied into) postcircumfix:<{ }>

[10:00] *** Ellenor21 joined
[10:01] *** Ellenor21 left
[10:01] *** Whiskey6 left
[10:02] <lizmat> ok, so because { } can be looked up at compile time, rather than the method call .AT-KEY, this makes it faster ?

[10:02] <jnthn> All this happens at runtime as part of what spesh does

[10:03] <lizmat> ok, so before, I would use AT-KEY directly, so it wouldn't have to go through postcircumfix:<{ }>

[10:03] <jnthn> Right, and now it should (in theory) make nearly no difference

[10:04] <pmurias> MasterDuke: you can rebootstrap with j-bootstrap-files

[10:04] <lizmat> so now in hot code, it *is* better to use postcircumfix:<{ } because it will inline better ?

[10:04] <pmurias> MasterDuke: on the jvm backend

[10:04] <lizmat> jnthn: is there still a point in using a sub as a helper instead of a private method ?

[10:05] <jnthn> Well no, AT-KEY will also be inlined; I'm just saying that there's less need to write .AT-KEY instead because inlining makes the difference a lot smaller than it once was

[10:05] <jnthn> And it's converging on "no difference"

[10:06] <jnthn> Probably no reason to avoid private methods, unless you don't actually need `self`, in which case the `sub` would save passing an arg (and arguably in that case `sub` is the more correct choice anyway :))

[10:07] <lizmat> wouldn't it make the body smaller, so easier to stay under the inline limit ?

[10:07] <jnthn> Why would methods have a bigger body than a sub?

[10:08] <lizmat> because they would need to be looked up at runtime and need more info?

[10:08] <lizmat> ah, but private methods are not MMD so probably already resolved at compile time ?

[10:08] <jnthn> Oh, you mean the callsite is a little bigger in the caller...

[10:08] <lizmat> yea

[10:08] <jnthn> That depends

[10:08] <jnthn> In the case the call is from a class I think it's probably the same number of bytes of bytecode

[10:09] <lizmat> specifically: self!AT_KEY_CONTAINER(key) vs AT_KEY_CONTAINER(self,key)

[10:09] <jnthn> If the call is from a role then a spesh plugin is used

[10:09] <jnthn> So the pre-spesh size is a little larger

[10:09] <jnthn> However, the post-spesh size would be the same

[10:09] <lizmat> my specific example is not from a role

[10:10] <jnthn> OK, then it should be the same bytecode size (the static optimizer resolves it into a wval instruction)

[10:10] <jnthn> (And that wval instruction is the same as a sub lexical lookup instruction)

[10:10] <lizmat> ok, so no point changing into a sub then

[10:10] <jnthn> No

[10:11] <jnthn> And to be clear, the rules *are* changing with time in this area, so the answers would have probably been a bit different some time ago :)

[10:11] <jnthn> The aim being to run the code people naturally write faster

[10:12] <jnthn> Thus why I'm keen to have things like %h<a> perform just as well as %h.AT-KEY("a") even if it naively should be worse :)

[10:14] <lizmat> ok, gotcha  :-)

[10:19] <pmurias> MasterDuke: sorry, got confused by a github issue and direct the reply to you instead of the person asking there

[10:20] *** Ven` left
[10:48] *** Kaiepi joined
[10:49] *** p6bannerbot sets mode: +v Kaiepi

[11:02] *** statisfiable6 joined
[11:02] *** p6bannerbot sets mode: +v statisfiable6

[11:17] *** Ven` joined
[11:18] *** p6bannerbot sets mode: +v Ven`

[11:21] *** lizmat left
[11:22] *** Ven` left
[11:26] *** kl420010 joined
[11:27] *** p6bannerbot sets mode: +v kl420010

[11:31] *** kl420010 left
[11:34] <pmurias> dead code spotted: https://github.com/perl6/nqp/blob/master/src/NQP/World.nqp#L358 - we are emitting an op that does exist here

[11:35] *** lizmat joined
[11:35] *** beaky3 joined
[11:35] *** beaky3 left
[11:35] *** p6bannerbot sets mode: +v lizmat

[11:37] *** brrt joined
[11:38] *** p6bannerbot sets mode: +v brrt

[11:53] *** richardjohn joined
[11:53] *** richardjohn left
[11:54] *** high_fiver joined
[11:54] *** p6bannerbot sets mode: +v high_fiver

[11:58] *** high_fiver left
[11:58] *** j3nnn1 joined
[11:58] *** p6bannerbot sets mode: +v j3nnn1

[12:01] *** lizmat left
[12:03] *** lizmat joined
[12:03] <|Tux|> Rakudo version 2018.06-353-gd021af232 - MoarVM version 2018.06-387-g50b063e04

[12:03] <|Tux|> csv-test-xs-20      0.445 -  0.478

[12:03] <|Tux|> test-t --race       0.944 -  0.947

[12:03] <|Tux|> csv-ip5xs           0.964 -  0.965

[12:03] <|Tux|> test-t              2.228 -  2.232

[12:03] <|Tux|> csv-ip5xs-20        7.789 -  7.902

[12:03] <|Tux|> test                8.817 -  8.957

[12:03] <|Tux|> test-t-20 --race   12.584 - 12.711

[12:03] <|Tux|> csv-parser         25.248 - 25.854

[12:03] <|Tux|> test-t-20          38.991 - 39.610

[12:04] *** p6bannerbot sets mode: +v lizmat

[12:06] *** astj joined
[12:07] *** p6bannerbot sets mode: +v astj

[12:09] *** Chex17 joined
[12:09] *** Chex17 left
[12:11] *** FROGGS_ left
[12:11] *** FROGGS_ joined
[12:12] *** p6bannerbot sets mode: +v FROGGS_

[12:14] *** FROGGS_ left
[12:14] *** FROGGS_ joined
[12:15] *** p6bannerbot sets mode: +v FROGGS_

[12:20] *** Ven` joined
[12:21] *** p6bannerbot sets mode: +v Ven`

[12:24] *** brrt left
[12:28] <Geth> ¦ rakudo: 9e71c22d91 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[12:28] <Geth> ¦ rakudo: Simplify my Int %h.ASSIGN-KEY a bit

[12:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9e71c22d91

[12:36] <Geth> ¦ roast/master: 6 commits pushed by (JJ Merelo)++, (Zoffix Znet)++

[12:36] <Geth> ¦ roast/master: e327376436 | Adds test for length

[12:36] <Geth> ¦ roast/master: 972e25a8a9 | Tests default value

[12:36] <Geth> ¦ roast/master: 4d472c9889 | Adds test (Windows only) to Str.encode

[12:36] <Geth> ¦ roast/master: 9811021e4c | Fixed broken test and added correct message

[12:36] <Geth> ¦ roast/master: 56b4011ab3 | uses is-deeply as advised

[12:36] <Geth> ¦ roast/master: d42288948b | Merge pull request #462 from JJ/master

[12:36] <Geth> ¦ roast/master: review: https://github.com/perl6/roast/compare/b6fc8e02122a...d42288948b28

[12:40] <Geth> ¦ roast: 67d6f94dc2 | (Zoffix Znet)++ (committed using GitHub Web editor) | S32-str/encode.t

[12:40] <Geth> ¦ roast: Document the assumptions in translate-nl test

[12:40] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/67d6f94dc2

[12:52] <Geth> ¦ rakudo: 4da2f60713 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[12:52] <Geth> ¦ rakudo: Simplify Hash.Map coercion

[12:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4da2f60713

[12:52] <Geth> ¦ rakudo: 0601c43ca5 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[12:52] <Geth> ¦ rakudo: No reason to decont(self), it is already deconted

[12:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0601c43ca5

[12:52] <Geth> ¦ rakudo: 4eaff4524c | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[12:52] <Geth> ¦ rakudo: Simplify Hash.head

[12:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4eaff4524c

[13:00] *** astj left
[13:05] <Geth> ¦ rakudo: 12bd328b88 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[13:05] <Geth> ¦ rakudo: Slightly simplify Hash.roll

[13:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/12bd328b88

[13:06] <Geth> ¦ nqp/truffle: 23d5dd4af5 | (Paweł Murias)++ | 2 files

[13:06] <Geth> ¦ nqp/truffle: [truffle] Implement nqp::getenvhash

[13:06] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/23d5dd4af5

[13:12] <Geth> ¦ rakudo: f0b705cdb0 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[13:12] <Geth> ¦ rakudo: Simplify Hash.roll(N)

[13:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f0b705cdb0

[13:16] *** brrt joined
[13:17] *** p6bannerbot sets mode: +v brrt

[13:20] <Geth> ¦ rakudo: 9327f95bc7 | (Elizabeth Mattijsen)++ | src/core/set_intersection.pm6

[13:20] <Geth> ¦ rakudo: Simplify Map (&) Map

[13:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9327f95bc7

[13:29] *** VampiricPadraig joined
[13:29] *** p6bannerbot sets mode: +v VampiricPadraig

[13:30] *** junction00 joined
[13:31] *** VampiricPadraig left
[13:31] *** p6bannerbot sets mode: +v junction00

[13:32] *** junction00 left
[13:32] <Geth> ¦ rakudo: 934c3f9d28 | (Elizabeth Mattijsen)++ | src/core/set_subset.pm6

[13:32] <Geth> ¦ rakudo: Simplify Map (<=) Map

[13:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/934c3f9d28

[13:38] *** Fuchs1 joined
[13:39] *** p6bannerbot sets mode: +v Fuchs1

[13:39] *** Fuchs1 left
[13:49] <Geth> ¦ rakudo: eee7714177 | (Elizabeth Mattijsen)++ | src/core/Stash.pm6

[13:49] <Geth> ¦ rakudo: Simplify Stash.AT-KEY

[13:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/eee7714177

[14:00] *** Guest70616 joined
[14:01] *** p6bannerbot sets mode: +v Guest70616

[14:06] *** Guest70616 left
[14:13] *** KobrAs25 joined
[14:14] *** p6bannerbot sets mode: +v KobrAs25

[14:15] *** KobrAs25 left
[14:16] *** skids joined
[14:17] *** p6bannerbot sets mode: +v skids

[14:22] *** FROGGS_ left
[14:23] *** FROGGS_ joined
[14:24] *** p6bannerbot sets mode: +v FROGGS_

[14:37] <Geth> ¦ rakudo: 1070fa0c84 | (Elizabeth Mattijsen)++ | src/core/set_difference.pm6

[14:37] <Geth> ¦ rakudo: Simplify Setty (-) Map

[14:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1070fa0c84

[14:37] <Geth> ¦ rakudo: 368415432b | (Elizabeth Mattijsen)++ | src/core/set_symmetric_difference.pm6

[14:37] <Geth> ¦ rakudo: Simplify Map (^) Map

[14:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/368415432b

[14:37] <Geth> ¦ rakudo: 81bcc54056 | (Elizabeth Mattijsen)++ | src/core/set_elem.pm6

[14:37] <Geth> ¦ rakudo: Simplify Any (elem) Map

[14:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/81bcc54056

[14:42] *** FROGGS_ left
[14:43] <Geth> ¦ rakudo: fc865a9a06 | (Elizabeth Mattijsen)++ | src/core/set_addition.pm6

[14:43] <Geth> ¦ rakudo: Simplified Setty (+) Map and Map (+) Map

[14:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fc865a9a06

[14:43] *** FROGGS_ joined
[14:43] *** p6bannerbot sets mode: +v FROGGS_

[14:48] <lizmat> FROGGS_ o/

[14:55] *** nebuchadnezzar left
[14:55] *** FROGGS_ left
[14:55] *** FROGGS_ joined
[14:56] *** kl420026 joined
[14:56] *** p6bannerbot sets mode: +v FROGGS_

[14:56] *** p6bannerbot sets mode: +v kl420026

[14:57] *** kl420026 left
[15:00] <Geth> ¦ rakudo: 7f1e41dd32 | (Elizabeth Mattijsen)++ | src/core/Rakudo/QuantHash.pm6

[15:00] <Geth> ¦ rakudo: Simplifies several QuantHash helper methods

[15:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7f1e41dd32

[15:00] <lizmat> and that concludes the Map '$!storage' simplifications I could find

[15:01] <timotimo> lizmat: does CORE.setting get noticably smaller from the start of your changes to the end, maybe excluding things jnthn did?

[15:02] <lizmat> m: say 14075824 - 14074208

[15:02] <camelia> rakudo-moar fc865a9a0: OUTPUT: «1616␤»

[15:02] <timotimo> ok, that's not earth-shattering

[15:02] <timotimo> but always nice toh ave

[15:02] <lizmat> yeah, I think it's more important that methods got closer to the inline limit, I think

[15:05] <timotimo> so i've been thinking yesterday

[15:05] <timotimo> about the profiler tool

[15:05] <timotimo> we can offer a pretty simple guide just based on naming and call structure for users who want to compare multiple different implementations of the same task, and automagically UI-ify that for them

[15:07] *** BeastieBot left
[15:07] <timotimo> like, if we have a task "florbify" and implementations "florbify_array" and "florbify_hash", we could ask the user to have essentially a sub warm-up_florbify_hash() { for ^100 { florbify_hash() } }; warm-up_florbify_array { for ^100 { florbify_array() } }; sub time_florbify_array { for ^100_000 { florbify_array } }; sub time_florbify_hash { for ^100_000 { florbify_hash } }

[15:08] <timotimo> and then warm-up_florbify_hash(); warm-up_florbify_array(); time_florbify_array(); time_florbify_hash()

[15:09] *** cspencer joined
[15:09] *** p6bannerbot sets mode: +v cspencer

[15:09] <timotimo> what that won't let us do - yet - is see which GC runs belong to which phase

[15:10] <timotimo> and multi-threaded stuff will be difficult to properly assign to the correct phase of execution

[15:10] <timotimo> that'll need some additional thinking i guess

[15:18] *** BeastieBot joined
[15:19] *** p6bannerbot sets mode: +v BeastieBot

[15:21] *** Ven` left
[15:21] *** AlexDaniel joined
[15:22] *** AlexDaniel left
[15:22] *** AlexDaniel joined
[15:22] *** p6bannerbot sets mode: +v AlexDaniel

[15:22] *** p6bannerbot sets mode: +v AlexDaniel

[15:23] *** Ven` joined
[15:24] *** p6bannerbot sets mode: +v Ven`

[15:29] <Geth> ¦ nqp/truffle: cac942750d | (Paweł Murias)++ | 6 files

[15:29] <Geth> ¦ nqp/truffle: [truffle] Teach @Deserialize how to handle a current HLL param

[15:29] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/cac942750d

[15:50] *** robertle left
[16:02] <Geth> ¦ rakudo: zoffixznet self-assigned :enc<utf8-c8> on Proc drops content / SEGVs https://github.com/rakudo/rakudo/issues/2158

[16:07] *** macky18 joined
[16:08] *** p6bannerbot sets mode: +v macky18

[16:08] *** macky18 left
[16:12] *** robertle joined
[16:12] *** p6bannerbot sets mode: +v robertle

[16:13] *** MalReynolds19 joined
[16:14] *** MalReynolds19 left
[16:16] *** [TuxCM] left
[16:21] <Geth> ¦ rakudo: zoffixznet self-unassigned :enc<utf8-c8> on Proc drops content / SEGVs https://github.com/rakudo/rakudo/issues/2158

[16:26] *** Ven` left
[16:36] *** nebuchad` joined
[16:36] *** lizmat left
[16:37] *** p6bannerbot sets mode: +v nebuchad`

[16:37] *** dogbert17 joined
[16:38] *** p6bannerbot sets mode: +v dogbert17

[16:39] *** nebuchad` is now known as nebuchadnezzar

[16:46] *** brrt left
[16:52] *** FROGGS_ left
[16:52] *** FROGGS_ joined
[16:53] *** p6bannerbot sets mode: +v FROGGS_

[17:13] <Geth> ¦ rakudo/return-type-check-plugin: fe5c8d4973 | (Jonathan Worthington)++ | 2 files

[17:13] <Geth> ¦ rakudo/return-type-check-plugin: Use a spesh plugin for return value type checks

[17:13] <Geth> ¦ rakudo/return-type-check-plugin: 

[17:13] <Geth> ¦ rakudo/return-type-check-plugin: Decreases the size of the bytecode we produce for return type checks,

[17:13] <Geth> ¦ rakudo/return-type-check-plugin: since the code to do that can be quite complex (especially given the

[17:13] <Geth> ¦ rakudo/return-type-check-plugin: Nil/Failure sneak-through semantics and that we might have a coercion

[17:13] <Geth> ¦ rakudo/return-type-check-plugin: to do). Also lets us optimize some cases a little better.

[17:13] <Geth> ¦ rakudo/return-type-check-plugin: review: https://github.com/rakudo/rakudo/commit/fe5c8d4973

[17:20] <Geth> ¦ nqp: 39bfe08c43 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[17:20] <Geth> ¦ nqp: [MoarVM Bump] Brings 6 commits

[17:20] <Geth> ¦ nqp: 

[17:20] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.06-385-g3e679da...2018.06-391-g91d2878

[17:20] <Geth> ¦ nqp: 91d2878 Document why we're bumping buffer by 1

[17:20] <Geth> ¦ nqp: f700c13 Merge pull request #936 from xelak6/master

[17:20] <Geth> ¦ nqp: 4ec15fc Increase the result buffer size.

[17:20] <Geth> ¦ nqp: 09717ad Make the callercode op inline-aware

[17:20] <Geth> ¦ nqp: 50b063e Mark sp_speshresolve as :useshll

[17:20] <Geth> ¦ nqp: 082dddf Remove incorrect byte sum

[17:20] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/39bfe08c43

[17:20] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.06-385-g3e679da...2018.06-391-g91d2878

[17:20] <Geth> ¦ rakudo: 74ea72e714 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[17:20] <Geth> ¦ rakudo: [NQP Bump] 39bfe08 [MoarVM Bump] Brings 6 commits

[17:20] <Geth> ¦ rakudo: 

[17:20] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.06-146-g56f163f...2018.06-147-g39bfe08

[17:20] <Geth> ¦ rakudo: 

[17:20] <Geth> ¦ rakudo: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.06-385-g3e679da...2018.06-391-g91d2878

[17:20] <Geth> ¦ rakudo: 91d2878 Document why we're bumping buffer by 1

[17:20] <Geth> ¦ rakudo: f700c13 Merge pull request #936 from xelak6/master

[17:20] <Geth> ¦ rakudo: 4ec15fc Increase the result buffer size.

[17:20] <Geth> ¦ rakudo: 09717ad Make the callercode op inline-aware

[17:20] <Geth> ¦ rakudo: 50b063e Mark sp_speshresolve as :useshll

[17:20] <Geth> ¦ rakudo: 082dddf Remove incorrect byte sum

[17:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/74ea72e714

[17:20] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.06-146-g56f163f...2018.06-147-g39bfe08

[17:21] <Geth> ¦ roast: 31dacf58f8 | (Zoffix Znet)++ | S32-encoding/decoder.t

[17:21] <Geth> ¦ roast: Unfudge now-passing test

[17:21] <Geth> ¦ roast: 

[17:21] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/2158 R#2158

[17:21] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/31dacf58f8

[17:21] <synopsebot> R#2158 [open]: https://github.com/rakudo/rakudo/issues/2158 [SEGV][regression][tests committed][⚠ blocker ⚠] :enc<utf8-c8> on Proc drops content / SEGVs

[17:25] *** travis-ci joined
[17:25] *** p6bannerbot sets mode: +v travis-ci

[17:25] <travis-ci> NQP build failed. Zoffix Znet '[MoarVM Bump] Brings 6 commits

[17:25] <travis-ci> https://travis-ci.org/perl6/nqp/builds/413690775 https://github.com/perl6/nqp/compare/56f163fa64f3...39bfe08c43ed

[17:26] *** travis-ci left
[17:33] *** [TuxCM] joined
[17:34] *** p6bannerbot sets mode: +v [TuxCM]

[18:17] *** AlexDaniel left
[18:37] *** FROGGS_ left
[18:37] *** FROGGS_ joined
[18:38] *** p6bannerbot sets mode: +v FROGGS_

[18:40] *** JStoker8 joined
[18:40] *** JStoker8 left
[19:07] *** Guest49305 joined
[19:07] *** Guest49305 left
[19:15] <pmurias> MasterDuke: I'm going through the 59, trying to get sections of it that don't depend on bigger missing features to pass and thanks to you suprisingly large amounts of ops work :)

[19:18] *** skids left
[19:31] *** cspencer left
[19:33] *** FROGGS_ left
[19:33] *** FROGGS_ joined
[19:34] *** p6bannerbot sets mode: +v FROGGS_

[19:45] <Geth> ¦ nqp/truffle: 26042b7f91 | (Paweł Murias)++ | src/vm/jvm/runtime/org/perl6/nqp/truffle/nodes/expression/NQPModNumNode.java

[19:45] <Geth> ¦ nqp/truffle: [truffle] Use nqp::mod_n semantics NQP wants

[19:45] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/26042b7f91

[19:45] <Geth> ¦ nqp/truffle: 47cb3ca074 | (Paweł Murias)++ | 2 files

[19:45] <Geth> ¦ nqp/truffle: [truffle] Implement nqp::sha1

[19:45] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/47cb3ca074

[20:09] *** brrt joined
[20:09] *** p6bannerbot sets mode: +v brrt

[20:27] *** lizmat joined
[20:27] *** p6bannerbot sets mode: +v lizmat

[20:53] *** brrt left
[20:58] *** piklu6 joined
[20:59] *** p6bannerbot sets mode: +v piklu6

[21:00] *** piklu6 left
[21:01] *** pmurias left
[21:04] *** pmurias joined
[21:04] *** p6bannerbot sets mode: +v pmurias

[21:20] *** pmurias left
[21:44] <MasterDuke> pmurias: yeah, that single test file certainly covers a lot of functionality

[21:56] *** pmurias joined
[21:57] *** p6bannerbot sets mode: +v pmurias

[21:59] *** pmurias left
[22:01] *** pmurias joined
[22:02] *** p6bannerbot sets mode: +v pmurias

[22:03] <Geth> ¦ rakudo: fa73bb48d5 | (Elizabeth Mattijsen)++ | 2 files

[22:03] <Geth> ¦ rakudo: Add a number of missing deconts

[22:03] <Geth> ¦ rakudo: 

[22:03] <Geth> ¦ rakudo: Fix for R#2167

[22:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fa73bb48d5

[22:03] <synopsebot> R#2167 [open]: https://github.com/rakudo/rakudo/issues/2167 [easy to resolve][good first issue][medium difficulty] Explosions due to missing deconts in a bunch of Set ops

[22:10] *** frmus5 joined
[22:11] *** p6bannerbot sets mode: +v frmus5

[22:12] <lizmat> and that concludes my hacking for today&

[22:14] *** frmus5 left
[22:21] <Geth> ¦ nqp: 59429960fb | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[22:21] <Geth> ¦ nqp: Don't emit decont of callee if unrequired

[22:21] <Geth> ¦ nqp: 

[22:21] <Geth> ¦ nqp: We can know it's not required when either:

[22:21] <Geth> ¦ nqp: 

[22:21] <Geth> ¦ nqp: * It's a QAST::WVal and the value isn't a container

[22:21] <Geth> ¦ nqp: * It's coming from a speshresolve; these plugins are written by the

[22:21] <Geth> ¦ nqp:   compiler implementor, and in the odd case where the plugin may give

[22:21] <Geth> ¦ nqp: <…commit message has 6 more lines…>

[22:21] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/59429960fb

[22:21] *** pmurias left
[22:23] *** pmurias joined
[22:24] *** p6bannerbot sets mode: +v pmurias

[22:24] *** pmurias left
[22:26] <timotimo> oooh nice

[22:26] *** travis-ci joined
[22:26] *** p6bannerbot sets mode: +v travis-ci

[22:26] <travis-ci> NQP build failed. Jonathan Worthington 'Don't emit decont of callee if unrequired

[22:26] <travis-ci> https://travis-ci.org/perl6/nqp/builds/413813714 https://github.com/perl6/nqp/compare/39bfe08c43ed...59429960fbfc

[22:26] *** travis-ci left
[22:27] <timotimo> just jvm failing

[22:27] <timotimo> Error while compiling op strfromname (source text: "nqp::strfromname(~$/)"), no registered operation handler

[22:31] *** a3f_ left
[22:31] *** a3f joined
[22:31] *** a3f left
[22:31] *** a3f joined
[22:31] *** p6bannerbot sets mode: +v a3f

[22:32] *** p6bannerbot sets mode: +v a3f

[22:33] *** Humvee11 joined
[22:34] *** p6bannerbot sets mode: +v Humvee11

[22:35] *** Humvee11 left
[22:52] *** robertle left
[22:54] *** NightMonkey13 joined
[22:55] *** p6bannerbot sets mode: +v NightMonkey13

[22:58] *** jdv79_ joined
[22:58] *** p6bannerbot sets mode: +v jdv79_

[22:59] *** NightMonkey13 left
[23:02] *** lizmat left
[23:02] *** jdv79 left
[23:02] *** go|dfish left
[23:04] *** reportable6 left
[23:04] *** yoleaux left
[23:04] *** perlawhirl joined
[23:05] *** reportable6 joined
[23:05] *** p6bannerbot sets mode: +v perlawhirl

[23:05] *** p6bannerbot sets mode: +v reportable6

[23:05] *** nativecallable6 left
[23:05] *** benchable6 left
[23:06] *** statisfiable6 left
[23:06] *** bisectable6 left
[23:06] *** shareable6 left
[23:07] *** shareable6 joined
[23:07] *** p6bannerbot sets mode: +v shareable6

[23:11] *** go|dfish joined
[23:11] *** p6bannerbot sets mode: +v go|dfish

[23:15] *** xfil joined
[23:15] *** p6bannerbot sets mode: +v xfil

[23:16] *** xfil left
[23:19] *** JoseyWales joined
[23:20] *** p6bannerbot sets mode: +v JoseyWales

[23:57] *** j3nnn1 left
