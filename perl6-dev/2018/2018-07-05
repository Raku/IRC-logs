[00:29] *** benjikun joined
[00:54] <Geth> ¦ rakudo: 7a87b7f55e | (Zoffix Znet)++ | tools/contributors.p6

[00:54] <Geth> ¦ rakudo: Restore missing MoarVM repo in contrb gen script

[00:54] <Geth> ¦ rakudo: 

[00:54] <Geth> ¦ rakudo: And harden a bit more to more easily notice unusual contrib states.

[00:54] <Geth> ¦ rakudo: 

[00:54] <Geth> ¦ rakudo: Fixes the bug in R#2024 https://github.com/rakudo/rakudo/issues/2024

[00:54] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7a87b7f55e

[00:54] <synopsebot> R#2024 [open]: https://github.com/rakudo/rakudo/issues/2024 [⚠ blocker ⚠] Missing MoarVM contributors since 2016.09 release

[02:27] <Geth> ¦ rakudo: 8fee8d485e | (Zoffix Znet)++ | tools/contributors.p6

[02:27] <Geth> ¦ rakudo: Implement contributor lookup for past releases

[02:27] <Geth> ¦ rakudo: 

[02:27] <Geth> ¦ rakudo: Can be handy, like when fixing missing contributors for

[02:27] <Geth> ¦ rakudo: R#2024 https://github.com/rakudo/rakudo/issues/2024

[02:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8fee8d485e

[02:27] <synopsebot> R#2024 [open]: https://github.com/rakudo/rakudo/issues/2024 [⚠ blocker ⚠] Missing MoarVM contributors since 2016.09 release

[02:29] *** Zoffix joined
[02:33] *** lizmat left
[02:36] <Geth> ¦ rakudo: c5cfbc64a6 | (Zoffix Znet)++ | tools/contributors.p6

[02:36] <Geth> ¦ rakudo: Sort contribtrs with same commits num alphabetically

[02:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c5cfbc64a6

[02:42] *** Ben_Goldberg joined
[02:42] *** BenGoldberg left
[02:42] *** Ben_Goldberg is now known as BenGoldberg

[02:49] <Zoffix> hm, I've just tried the contributors tool with the pre-bug 2016.08 release and I got 1 extra name: David Warring :|

[03:04] <Geth> ¦ rakudo: f6c8159d27 | (Zoffix Znet)++ | tools/contributors.p6

[03:04] <Geth> ¦ rakudo: Add --debug flag to contrib tool

[03:04] <Geth> ¦ rakudo: 

[03:04] <Geth> ¦ rakudo: That dumps some extra info about found contributors,

[03:04] <Geth> ¦ rakudo: to help find any issues with the genned list of contributors

[03:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f6c8159d27

[03:09] <Zoffix> wait, it's actually the Announcement has "extra" person

[03:09] <Zoffix> (which might be due to it using full day rather than exact last tag to gen that announcement, whereas my "past release" scrip uses exact past date tag)

[03:11] <Zoffix> Also, getting some weird weirdness, with comparisons

[03:13] * Zoffix moves to #perl6

[03:18] <Zoffix> OK, bug sorted, and now I got 2 extra names from my script that are missing, and 1 extra name that's in the announcement, but wasn't told by the script 😬

[03:18] <Zoffix> And this is two extra names on 2016.08, which shouldn't be affected by R#2024 

[03:18] <synopsebot> R#2024 [open]: https://github.com/rakudo/rakudo/issues/2024 [⚠ blocker ⚠] Missing MoarVM contributors since 2016.09 release

[03:19] <Zoffix> hm, but I think what's going on is right now I'm measuring up to tag, but during the releases it would've been up to *some day*

[03:19] <Zoffix> s/some day/some time (during the release day)/;

[03:19] <Zoffix> So those people are likely noted, but in one of the adjacent releases.

[03:21] <Zoffix> I think I'm just gonna run the script and check all releases since 2015.12, make a list of possibly missed contributors (and definitely missed MoarVM contributors)

[03:22] <Zoffix> That'd solve the current problem, but unsure how to solve this exactly for the future, since this kinda depends when the release manager runs the script, since we also include commits from roast and doc repos that aren't tagged with anything and stuff

[03:23] <Zoffix> Unless we create and commit to repo some little file with all the commit shas that were reported on earlier releases.

[03:24] * Zoffix takes the lazy route and leaves it to current release managers to figure out :P

[03:33] <Zoffix> Oh, haha, so nanis got left out from 2016.01-RC1 release announcement too. No wonder he's so pissed off about it.

[03:34] <Zoffix> I think those times the missing people were where the contrib script didn't warn if repos were missing and neither me nor Coke even knew at the time that it was looking for them in special places.

[03:36] <Zoffix> And I got left out too :)

[03:41] <Geth> ¦ rakudo: 1197c3f65a | (Zoffix Znet)++ | tools/contributors.p6

[03:41] <Geth> ¦ rakudo: Make debug option dump repo info

[03:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1197c3f65a

[03:52] *** BenGoldberg left
[04:58] <[Coke]> whoops.

[04:58] <[Coke]> That's frustrating, given how much time we spent making sure we had all the names.

[04:59] <[Coke]> (for xmas, that is) to then miss them on the next release. :|

[05:00] *** travis-ci joined
[05:00] <travis-ci> Rakudo build failed. Zoffix Znet 'Add --debug flag to contrib tool

[05:00] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/400236823 https://github.com/rakudo/rakudo/compare/c5cfbc64a60c...f6c8159d27f6

[05:00] *** travis-ci left
[05:00] <buggable> [travis build above] ☠ All failures are due to: failed make test (1 failure). Across all jobs, only t/06-telemetry/01-basic.t test file failed.

[05:03] *** squashable6 joined
[05:03] *** ChanServ sets mode: +v squashable6

[05:43] <Geth> ¦ rakudo: ade83c8614 | (Zoffix Znet)++ | 30 files

[05:43] <Geth> ¦ rakudo: Add missing persons from contributing lists in past announcements

[05:43] <Geth> ¦ rakudo: 

[05:43] <Geth> ¦ rakudo: Fixes https://github.com/rakudo/rakudo/issues/2024 R#2024 with the

[05:43] <Geth> ¦ rakudo: reasons for missings listed on R#2028

[05:43] <Geth> ¦ rakudo: https://github.com/rakudo/rakudo/issues/2028

[05:43] <Geth> ¦ rakudo: 

[05:43] <synopsebot> R#2024 [open]: https://github.com/rakudo/rakudo/issues/2024 [⚠ blocker ⚠] Missing MoarVM contributors since 2016.09 release

[05:43] <synopsebot> R#2028 [open]: https://github.com/rakudo/rakudo/issues/2028 Issues with contributors generating script

[05:43] <Geth> ¦ rakudo: I've added missing persons with "as well as" clause. When I ran the

[05:43] <Geth> ¦ rakudo: <…commit message has 7 more lines…>

[05:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ade83c8614

[05:52] <[TuxCM]> zef has a lot of (new) warnings:

[05:52] <[TuxCM]> Use of uninitialized value of type Any in string context.

[05:52] <[TuxCM]> Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.

[05:52] <[TuxCM]>   in method Str at /pro/3gl/CPAN/rakudo/install/sources/F02FE61C6D1D45C2A6BC92E05C12E4D7F33DC9B4 (Zef::Distribution) line 116

[05:54] <Zoffix> [TuxCM]: would you file an Issue so this doesn't get lost? https://github.com/rakudo/rakudo/issues/new

[05:56] <Zoffix> New blog post: "The Missing Contributors of Perl 6": https://rakudo.party/post/The-Missing-Contributors-of-Perl6

[05:57] <[TuxCM]> https://github.com/rakudo/rakudo/issues/2029

[06:01] <[TuxCM]> Rakudo version 2018.06-80-gade83c861 - MoarVM version 2018.06-103-gaf455397f

[06:01] <[TuxCM]> csv-test-xs-20      0.454 -  0.480

[06:01] <[TuxCM]> csv-ip5xs           0.917 -  0.933

[06:01] <[TuxCM]> test-t --race       0.979 -  1.047

[06:01] <[TuxCM]> test-t              2.339 -  2.364

[06:01] <[TuxCM]> csv-ip5xs-20        7.391 -  7.711

[06:01] <[TuxCM]> test                8.947 -  9.128

[06:01] <[TuxCM]> test-t-20 --race   15.004 - 16.392

[06:01] <[TuxCM]> csv-parser         26.148 - 27.052

[06:01] <[TuxCM]> test-t-20          42.515 - 42.896

[06:01] <[TuxCM]> Inline::Perl5 tests are still failing

[06:01] <[TuxCM]> Internal error: inconsistent bind result

[06:01] <[TuxCM]>   in method compose_attributes at /pro/3gl/CPAN/rakudo/install/share/perl6/site/sources/662D0ED8A7D6CEEA49F4971481CD51A756652C5F (Inline::Perl5::ClassHOW) line 225

[06:01] <[TuxCM]>   in method compose at /pro/3gl/CPAN/rakudo/install/share/perl6/site/sources/662D0ED8A7D6CEEA49F4971481CD51A756652C5F (Inline::Perl5::ClassHOW) line 74

[06:01] <[TuxCM]>   in method create_wrapper_class at /pro/3gl/CPAN/rakudo/install/share/perl6/site/sources/8CE1B6645986D54BA438B0AE9C23409C547EEF36 (Inline::Perl5) line 837

[06:01] <[TuxCM]>   in method require at /pro/3gl/CPAN/rakudo/install/share/perl6/site/sources/8CE1B6645986D54BA438B0AE9C23409C547EEF36 (Inline::Perl5) line 779

[06:01] <[TuxCM]>   in method use at /pro/3gl/CPAN/rakudo/install/share/perl6/site/sources/8CE1B6645986D54BA438B0AE9C23409C547EEF36 (Inline::Perl5) line 877

[06:01] <[TuxCM]>   in block <unit> at csv-ip5pp.pl line 8

[06:05] *** Zoffix left
[06:12] *** ufobat joined
[06:23] *** dct left
[06:23] *** dct_ joined
[06:33] *** dct_ left
[06:33] *** brrt joined
[06:43] *** travis-ci joined
[06:43] <travis-ci> Rakudo build passed. Zoffix Znet 'Add missing persons from contributing lists in past announcements

[06:43] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/400260131 https://github.com/rakudo/rakudo/compare/1197c3f65a9a...ade83c861484

[06:43] *** travis-ci left
[06:44] *** robertle joined
[07:05] *** brrt left
[07:45] *** lizmat joined
[07:52] <lizmat> Files=1242, Tests=76416, 322 wallclock secs (15.49 usr  5.45 sys + 2229.63 cusr 224.64 csys = 2475.21 CPU)

[07:58] <lizmat> weekly: https://rakudo.party/post/The-Missing-Contributors-of-Perl6

[07:58] <notable6> lizmat, Noted!

[08:11] *** brrt joined
[08:27] *** brrt left
[08:29] *** brrt joined
[08:45] *** brrt left
[08:48] *** donaldh joined
[09:18] *** brrt joined
[09:25] *** |Tux| left
[09:43] *** |Tux| joined
[10:53] *** |Tux| left
[10:53] *** Tux__ joined
[12:21] <Geth> ¦ rakudo/rescalar: 46 commits pushed by (Jonathan Worthington)++

[12:21] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/compare/adb00ba7d3ac...432e9e82aa31

[12:40] *** lizmat left
[12:44] *** lizmat joined
[12:46] *** brrt left
[12:50] *** lizmat left
[12:53] *** lizmat joined
[13:02] *** pmurias joined
[13:03] <pmurias> MasterDuke: I reverted your VOID to CALL_ARG coercion, the correct fix is to make sub calls return stuff (not be void) rather then coerce VOID

[13:03] <yoleaux> 3 Jul 2018 16:45Z <MasterDuke> pmurias: i suspected so. at this point i don't know enough to contribute toward implementing closures, so good luck!

[13:05] *** brrt joined
[13:19] <Geth> ¦ nqp/truffle: f08c5e78b3 | (Paweł Murias)++ | 11 files

[13:19] <Geth> ¦ nqp/truffle: [truffle] Implement closures

[13:19] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/f08c5e78b3

[13:19] <Geth> ¦ nqp/truffle: 184b013788 | (Paweł Murias)++ | nqp-truffle.nqp

[13:19] <Geth> ¦ nqp/truffle: We shouldn't use VOID things as function call arguments

[13:19] <Geth> ¦ nqp/truffle: 

[13:19] <Geth> ¦ nqp/truffle: Revert "[truffle] Return AST to coerce VOID to CALL_ARG"

[13:19] <Geth> ¦ nqp/truffle: 

[13:19] <Geth> ¦ nqp/truffle: This reverts commit e7f48ecb20865b303fb6ee9c8125dd4aa3f6f748.

[13:19] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/184b013788

[13:19] <Geth> ¦ nqp/truffle: b4278986a8 | (Paweł Murias)++ | nqp-truffle.nqp

[13:19] <Geth> ¦ nqp/truffle: [truffle] Make nqp::call return a value

[13:19] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/b4278986a8

[13:23] *** skids joined
[13:53] *** brrt left
[14:35] *** brrt joined
[15:20] *** lizmat left
[15:22] <Geth> ¦ rakudo/rescalar: 91676bb4de | (Jonathan Worthington)++ | src/vm/moar/spesh-plugins.nqp

[15:22] <Geth> ¦ rakudo/rescalar: Add concrete guard to ensure attribute lowering

[15:22] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/91676bb4de

[15:22] <Geth> ¦ rakudo/rescalar: 628a887e23 | (Jonathan Worthington)++ | src/core/Array.pm6

[15:22] <Geth> ¦ rakudo/rescalar: Get Array.AT-POS below the MoarVM inline limit

[15:22] <Geth> ¦ rakudo/rescalar: 

[15:22] <Geth> ¦ rakudo/rescalar: So that we can inline it into postcircumfix:<[ ]>, which we can also

[15:22] <Geth> ¦ rakudo/rescalar: inline. With a MoarVM tweak, mutli-level inlining can then fully

[15:22] <Geth> ¦ rakudo/rescalar: inline an array access that needn't vivify.

[15:22] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/628a887e23

[15:22] <Geth> ¦ rakudo/rescalar: 7cf1207f31 | (Jonathan Worthington)++ | src/core/Array.pm6

[15:22] <Geth> ¦ rakudo/rescalar: Tune the array "slow path" some more

[15:22] <Geth> ¦ rakudo/rescalar: 

[15:22] <Geth> ¦ rakudo/rescalar: To cheapen container creation and avoid repeated unboxing of Int to

[15:22] <Geth> ¦ rakudo/rescalar: int.

[15:22] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/7cf1207f31

[15:23] *** lizmat joined
[15:32] *** donaldh left
[15:38] <Geth> ¦ nqp/truffle: e393c03289 | (Paweł Murias)++ | 108 files

[15:38] <Geth> ¦ nqp/truffle: [truffle] Implement running things as VOID and returning stuff from subs

[15:38] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/e393c03289

[15:38] <Geth> ¦ nqp/truffle: ef23e35ca2 | (Paweł Murias)++ | 2 files

[15:38] <Geth> ¦ nqp/truffle: [truffle] Smart numify boxed nums and better coercion error messages

[15:38] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/ef23e35ca2

[15:38] <Geth> ¦ nqp/truffle: daa212ea16 | (Paweł Murias)++ | src/vm/jvm/bin/run_tests.pl

[15:38] <Geth> ¦ nqp/truffle: [truffle] Pass t/nqp/083-math.t

[15:38] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/daa212ea16

[15:38] <pmurias> MasterDuke: we now pass test 083, thanks for the math ops

[15:58] *** dogbert17 joined
[15:59] <Geth> ¦ nqp/truffle: b7b39c2a20 | (Paweł Murias)++ | 2 files

[15:59] <Geth> ¦ nqp/truffle: [truffle] Implement nqp::isinvokable

[15:59] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/b7b39c2a20

[15:59] <Geth> ¦ nqp/truffle: 527fe849c7 | (Paweł Murias)++ | src/vm/jvm/bin/write_a_node.nqp

[15:59] <Geth> ¦ nqp/truffle: [truffle] Update write_a_node.nqp to the adding of executeVoid

[15:59] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/527fe849c7

[15:59] <Geth> ¦ nqp/truffle: ded1527277 | (Paweł Murias)++ | 2 files

[15:59] <Geth> ¦ nqp/truffle: [truffle] Smart numify doubles

[15:59] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/ded1527277

[16:02] <Geth> ¦ nqp/truffle: 547dafe72e | (Paweł Murias)++ | src/vm/jvm/bin/run_tests.pl

[16:02] <Geth> ¦ nqp/truffle: [truffle] Run passing test 36

[16:02] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/547dafe72e

[16:37] *** dogbert17 left
[16:38] *** stmuk_ joined
[16:40] *** stmuk left
[16:41] *** dogbert17 joined
[17:16] *** brrt left
[17:53] <Geth> ¦ roast: 6b98c26c56 | (Samantha McVey)++ | 2 files

[17:53] <Geth> ¦ roast: Fix S32-hash/delete-adverb.t and squish.t if hash keys iter randomized

[17:53] <Geth> ¦ roast: 

[17:53] <Geth> ¦ roast: Soon I will be making MoarVM randomize the order of the iterator. Though

[17:53] <Geth> ¦ roast: we have a random order each start of MoarVM currently due to the random

[17:53] <Geth> ¦ roast: hash secret, if you make two hashes and add things in the same order you

[17:53] <Geth> ¦ roast: will get the same order as each other when you do .keys. This will be

[17:53] <Geth> ¦ roast: changing soon and you can't rely on the order (unless you don't modify

[17:53] <Geth> ¦ roast: the hash, in that case order is consistent).

[17:53] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6b98c26c56

[17:53] <Geth> ¦ roast: e3ba673c56 | (Samantha McVey)++ | S15-unicode-information/uniprop.t

[17:53] <Geth> ¦ roast: Fix a typo in a test description

[17:53] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e3ba673c56

[17:54] <samcv> ^ there may be other files that need fixes. i'm gonna run roast a few more times

[17:54] <samcv> RE that hash iteration order and insertion order will be randomized soon

[18:15] <samcv> releasable6: status

[18:15] <releasable6> samcv, Next release in ≈16 days and ≈0 hours. 2 blockers. 0 out of 80 commits logged

[18:15] <releasable6> samcv, Details: https://gist.github.com/678ea1954262441138680bc20e4260e7

[18:25] <Geth> ¦ rakudo: AlexDaniel self-assigned Issues with contributors generating script https://github.com/rakudo/rakudo/issues/2028

[18:26] <AlexDaniel> squashable6: next

[18:26] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in ≈15 hours (2018-07-07 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[19:03] <samcv> AlexDaniel: would you be able to run toaster after i bump rakudo to the newest moarvm

[19:03] <samcv> https://github.com/MoarVM/MoarVM/commit/3ef2acf0f3

[19:12] <AlexDaniel> samcv: sure, but what about next week? By that time jnthn++'s changes will also make their way in, if they haven't already

[19:13] <AlexDaniel> samcv: but do bump it now so that it will be easier to bisect :)

[19:31] *** robertle_ joined
[19:36] *** dct_ joined
[20:24] *** benjikun2 joined
[20:27] *** benjikun left
[21:24] <pmurias> MasterDuke: re throwing exception I think just throwing regular java ones is what we want to do

[21:29] <MasterDuke> pmurias: cool. i'll try to do some more of the string op then

[21:33] <MasterDuke> pmurias: i'll also look at that paper, but don't promise to understand it

[21:36] *** skids left
[21:52] *** pmurias left
[21:54] *** dalek joined
[21:54] *** ChanServ sets mode: +v dalek

[21:54] *** synopsebot_ joined
[21:54] *** p6lert joined
[21:54] *** Geth joined
[21:54] *** ChanServ sets mode: +v synopsebot_

[21:54] *** ChanServ sets mode: +v Geth

[21:57] *** SourceBaby joined
[21:57] *** ChanServ sets mode: +v SourceBaby

[21:57] *** Undercover joined
[21:57] *** ChanServ sets mode: +v Undercover

[22:03] <Geth> ¦ rakudo/rescalar: 91676bb4de | (Jonathan Worthington)++ | src/vm/moar/spesh-plugins.nqp

[22:03] <Geth> ¦ rakudo/rescalar: Add concrete guard to ensure attribute lowering

[22:03] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/91676bb4de

[22:03] <Geth> ¦ rakudo/rescalar: 628a887e23 | (Jonathan Worthington)++ | src/core/Array.pm6

[22:03] <Geth> ¦ rakudo/rescalar: Get Array.AT-POS below the MoarVM inline limit

[22:03] <Geth> ¦ rakudo/rescalar: 

[22:03] <Geth> ¦ rakudo/rescalar: So that we can inline it into postcircumfix:<[ ]>, which we can also

[22:03] <Geth> ¦ rakudo/rescalar: inline. With a MoarVM tweak, mutli-level inlining can then fully

[22:03] <Geth> ¦ rakudo/rescalar: inline an array access that needn't vivify.

[22:03] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/628a887e23

[22:03] <Geth> ¦ rakudo/rescalar: 7cf1207f31 | (Jonathan Worthington)++ | src/core/Array.pm6

[22:03] <Geth> ¦ rakudo/rescalar: Tune the array "slow path" some more

[22:03] <Geth> ¦ rakudo/rescalar: 

[22:03] <Geth> ¦ rakudo/rescalar: To cheapen container creation and avoid repeated unboxing of Int to

[22:03] <Geth> ¦ rakudo/rescalar: int.

[22:03] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/7cf1207f31

[22:03] <Geth> ¦ rakudo/rescalar: 91676bb4de | (Jonathan Worthington)++ | src/vm/moar/spesh-plugins.nqp

[22:03] <Geth> ¦ rakudo/rescalar: Add concrete guard to ensure attribute lowering

[22:03] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/91676bb4de

[22:03] *** Kaiepi left
[22:03] <Geth> ¦ rakudo/rescalar: 628a887e23 | (Jonathan Worthington)++ | src/core/Array.pm6

[22:03] <Geth> ¦ rakudo/rescalar: Get Array.AT-POS below the MoarVM inline limit

[22:03] <Geth> ¦ rakudo/rescalar: 

[22:03] <Geth> ¦ rakudo/rescalar: So that we can inline it into postcircumfix:<[ ]>, which we can also

[22:03] <Geth> ¦ rakudo/rescalar: inline. With a MoarVM tweak, mutli-level inlining can then fully

[22:03] <Geth> ¦ rakudo/rescalar: inline an array access that needn't vivify.

[22:03] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/628a887e23

[22:03] <Geth> ¦ rakudo/rescalar: 7cf1207f31 | (Jonathan Worthington)++ | src/core/Array.pm6

[22:03] <Geth> ¦ rakudo/rescalar: Tune the array "slow path" some more

[22:03] <Geth> ¦ rakudo/rescalar: 

[22:03] <Geth> ¦ rakudo/rescalar: To cheapen container creation and avoid repeated unboxing of Int to

[22:03] <Geth> ¦ rakudo/rescalar: int.

[22:04] <Geth> ¦ rakudo/rescalar: review: https://github.com/rakudo/rakudo/commit/7cf1207f31

[22:05] <Geth> ¦ roast: 6b98c26c56 | (Samantha McVey)++ | 2 files

[22:05] <Geth> ¦ roast: Fix S32-hash/delete-adverb.t and squish.t if hash keys iter randomized

[22:05] <Geth> ¦ roast: 

[22:05] <Geth> ¦ roast: Soon I will be making MoarVM randomize the order of the iterator. Though

[22:05] <Geth> ¦ roast: we have a random order each start of MoarVM currently due to the random

[22:05] <Geth> ¦ roast: hash secret, if you make two hashes and add things in the same order you

[22:05] <Geth> ¦ roast: will get the same order as each other when you do .keys. This will be

[22:05] <Geth> ¦ roast: changing soon and you can't rely on the order (unless you don't modify

[22:05] <Geth> ¦ roast: the hash, in that case order is consistent).

[22:05] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6b98c26c56

[22:05] <Geth> ¦ roast: e3ba673c56 | (Samantha McVey)++ | S15-unicode-information/uniprop.t

[22:05] <Geth> ¦ roast: Fix a typo in a test description

[22:05] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e3ba673c56

[22:13] *** PufferBot joined
[22:30] *** Kaiepi joined
[22:48] *** dct_ left
[23:21] *** benji__ joined
[23:25] *** benjikun2 left
[23:43] *** benjikun joined
[23:45] *** benji__ left
