[00:51] <Geth> ¦ roast: 7975e9baed | (Zoffix Znet)++ | S09-subscript/slice.t

[00:51] <Geth> ¦ roast: Remove trailing whitespace

[00:51] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7975e9baed

[01:00] <Geth> ¦ rakudo: f330d7fc44 | (Zoffix Znet)++ | src/core/array_slice.pm

[01:00] <Geth> ¦ rakudo: Fix drift when reusing lazy iterables for indexing

[01:00] <Geth> ¦ rakudo:

[01:00] <Geth> ¦ rakudo: Phixes https://github.com/rakudo/rakudo/issues/1320

[01:00] <Geth> ¦ rakudo:

[01:00] <Geth> ¦ rakudo: Currently, we .push-until-lazy before we begin checking whether

[01:00] <Geth> ¦ rakudo: for existence of elements to know when to stop. However, this

[01:00] <Geth> ¦ rakudo: causes a "drift" when the lazy iterable is reused as .push-until-lazy

[01:00] <Geth> ¦ rakudo: <…commit message has 7 more lines…>

[01:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f330d7fc44

[01:01] <Geth> ¦ roast: 242f297e3d | (Zoffix Znet)++ | S09-subscript/slice.t

[01:01] <Geth> ¦ roast: Test no drift when re-using lazy iterables for indexing

[01:01] <Geth> ¦ roast:

[01:01] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1320

[01:01] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/f330d7fc44

[01:01] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/242f297e3d

[01:17] <Geth> ¦ rakudo: a4aceb08ca | (Zoffix Znet)++ | src/core/array_slice.pm

[01:17] <Geth> ¦ rakudo: Use raw param on default egarizer in &POSITIONS

[01:17] <Geth> ¦ rakudo:

[01:17] <Geth> ¦ rakudo: It seems to be slightly faster.

[01:17] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a4aceb08ca

[02:03] <Geth> ¦ rakudo: 562edfc50a | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[02:03] <Geth> ¦ rakudo: Fix crash in parametarized constraints on attrs with .=…

[02:03] <Geth> ¦ rakudo:

[02:03] <Geth> ¦ rakudo: … e.g. `has Array[Numeric] $.foo .= new: 1, 2, 3`

[02:03] <Geth> ¦ rakudo:

[02:03] <Geth> ¦ rakudo: Pretty sure I saw a ticket for this, but can't find it any more.

[02:03] <Geth> ¦ rakudo:

[02:03] <Geth> ¦ rakudo: Fix by using the .ast on $*OFTYPE instead of trying to parse the

[02:03] <Geth> ¦ rakudo: matched value on it all over again.

[02:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/562edfc50a

[02:04] <Geth> ¦ roast: 5cd6510a5b | (Zoffix Znet)++ | S03-operators/inplace.t

[02:04] <Geth> ¦ roast: Test .= with parametarized types on attrs

[02:04] <Geth> ¦ roast:

[02:04] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/562edfc50a

[02:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5cd6510a5b

[03:36] <Geth> ¦ rakudo: 0racle++ created pull request #1505: Don't add blank lines to REPL history file

[03:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1505

[07:50] <[Tux]> Rakudo version 2018.01-150-g562edfc50 - MoarVM version 2018.01-77-g9a029b408

[07:50] <[Tux]> csv-test-xs-20      0.428 -  0.457

[07:50] <[Tux]> csv-ip5xs           0.826 -  0.833

[07:50] <[Tux]> test-t --race       1.121 -  1.192

[07:50] <[Tux]> test-t              2.669 -  2.764

[07:50] <[Tux]> csv-ip5xs-20        7.926 -  8.073

[07:50] <[Tux]> test                9.492 -  9.736

[07:50] <[Tux]> csv-parser         11.860 - 11.992

[07:50] <[Tux]> test-t-20 --race   17.143 - 19.560

[07:50] <[Tux]> test-t-20          49.015 - 49.931

[07:51] <[Tux]> maybe the system is busy. I'll try again later today

[10:33] <Geth> ¦ rakudo: 24fab7070b | 0racle++ (committed using GitHub Web editor) | src/core/REPL.pm

[10:33] <Geth> ¦ rakudo: Don't add blank blank lines to REPL history file

[10:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/24fab7070b

[10:33] <Geth> ¦ rakudo: 94a3fdb824 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/core/REPL.pm

[10:33] <Geth> ¦ rakudo: Merge pull request #1505 from 0racle/patch-1

[10:33] <Geth> ¦ rakudo:

[10:33] <Geth> ¦ rakudo: Don't add blank lines to REPL history file

[10:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/94a3fdb824

[12:41] <|Tux|> Rakudo version 2018.01-152-g94a3fdb82 - MoarVM version 2018.01-77-g9a029b408

[12:41] <|Tux|> csv-test-xs-20      0.419 -  0.436

[12:41] <|Tux|> csv-ip5xs           0.793 -  0.802

[12:41] <|Tux|> test-t --race       1.059 -  1.065

[12:41] <|Tux|> test-t              2.576 -  2.592

[12:41] <|Tux|> csv-ip5xs-20        7.339 -  7.389

[12:41] <|Tux|> test                9.111 -  9.158

[12:42] <|Tux|> csv-parser         11.104 - 11.136

[12:42] <|Tux|> test-t-20 --race   15.911 - 16.106

[12:42] <|Tux|> test-t-20          45.493 - 45.940

[12:42] <|Tux|> Pfweeuw

[15:31] <dogbert17> m: my @z = (^3).map: {$_}; my $x = { :a(1) :b(@z) }

[15:31] <camelia> rakudo-moar 94a3fdb82: OUTPUT: «===SORRY!===␤Unknown QAST node type NQPMu␤»

[15:31] <dogbert17> m: my @z = (^3).map: {$_}; my $x = { :a(1), :b(@z) }

[15:31] <camelia> rakudo-moar 94a3fdb82: ( no output )

[16:18] * lizmat waves from Apopka

[16:18] <yoleaux> 4 Feb 2018 10:41Z <AlexDaniel> lizmat: please revisit RT#131813

[16:18] <yoleaux> 4 Feb 2018 10:50Z <AlexDaniel> lizmat: and also maybe this RT#127403

[16:18] <synopsebot> RT#131813 [open]: https://rt.perl.org/Ticket/Display.html?id=131813 Segfault with --profile

[16:18] <synopsebot> RT#127403 [open]: https://rt.perl.org/Ticket/Display.html?id=127403 [EXOTICTEST][WEIRD] Matching over 256 items yields wrong results, sometimes

[16:21] * lizmat is not in a state yet to be looking at these

[16:51] <japhb> Apopka where?  Google is suggesting Florida ....

[16:54] <lizmat> japhb: indeed, just north-west of Orlando

[16:54] <lizmat> I guess you could call it part of Orlando Metro

[16:54] * lizmat is recovering from a 5-day diet of bloody marys

[16:56] <japhb> lizmat: What is the recovery plan for that?  Switch to virgin marys instead?

[17:07] <lizmat> hehe... sleep mostly

[17:08] <lizmat> and *not* hitting the bloody marys  :-)

[17:09] <Geth> ¦ nqp: 96e9bae9c2 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[17:09] <Geth> ¦ nqp: [MoarVM Bump] Brings 5 commits

[17:09] <Geth> ¦ nqp:

[17:09] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.01-77-g9a029b4...2018.01-82-g296620e

[17:09] <Geth> ¦ nqp: 296620e Register allocator should process all live ranges on worklist

[17:09] <Geth> ¦ nqp: 4f69388 Remove superfluous DEOPT_ONE_INS annotation on some deconts

[17:09] <Geth> ¦ nqp: 0e73714 Work around a segfault caused by type tuple without type information

[17:09] <Geth> ¦ nqp: d2da85f Revive removal of dead instructions after the first inlined function

[17:09] <Geth> ¦ nqp: e0cbbce Don't include 0..127 in Uni->windows-1251/2 switch

[17:09] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/96e9bae9c2

[17:09] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.01-77-g9a029b4...2018.01-82-g296620e

[17:09] <Geth> ¦ rakudo: 28fabe3a37 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[17:09] <Geth> ¦ rakudo: [NQP Bump] Brings 6 commits

[17:09] <Geth> ¦ rakudo:

[17:09] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.01-49-g235ff38de...2018.01-55-g96e9bae

[17:09] <Geth> ¦ rakudo: 96e9bae [MoarVM Bump] Brings 5 commits

[17:09] <Geth> ¦ rakudo: 6ad811c [js] Stop using the grapheme-breaker package and use our own stuff

[17:09] <Geth> ¦ rakudo: e6fe881 [js] Using utf8-c8 in decoders works

[17:09] <Geth> ¦ rakudo: 364d9b6 [js] Refactor the decoder to use the codec api

[17:09] <Geth> ¦ rakudo: <…commit message has 9 more lines…>

[17:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/28fabe3a37

[17:09] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.01-49-g235ff38de...2018.01-55-g96e9bae

[17:29] <Geth> ¦ rakudo: 1c894e418d | (Zoffix Znet)++ | src/Perl6/Grammar.nqp

[17:29] <Geth> ¦ rakudo: Throw useful error on attribute in `where`…

[17:29] <Geth> ¦ rakudo:

[17:29] <Geth> ¦ rakudo: …when trying to use such a `where` to constrain an attribute.

[17:29] <Geth> ¦ rakudo:

[17:29] <Geth> ¦ rakudo: Fixes RT#130748: https://rt.perl.org/Ticket/Display.html?id=130748

[17:29] <Geth> ¦ rakudo:

[17:29] <Geth> ¦ rakudo: If we're declaring a `has` variable, null $*HAS_SELF when we're

[17:29] <synopsebot> RT#130748 [new]: https://rt.perl.org/Ticket/Display.html?id=130748 [BUG] weird error when accessing an attribute from a "where" of another attribute

[17:29] <Geth> ¦ rakudo: parsing the `where` clause for it.

[17:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1c894e418d

[17:29] <Geth> ¦ roast: 410a3982c5 | (Zoffix Znet)++ | S12-attributes/class.t

[17:29] <Geth> ¦ roast: Remove trailing whitespace

[17:29] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/410a3982c5

[17:30] <Geth> ¦ roast: 2f70d11826 | (Zoffix Znet)++ | S12-attributes/class.t

[17:30] <Geth> ¦ roast: Test attr access in attr's where throws good error

[17:30] <Geth> ¦ roast:

[17:30] <Geth> ¦ roast: RT#130748: https://rt.perl.org/Ticket/Display.html?id=130748

[17:30] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/1c894e418d

[17:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/2f70d11826

[18:43] <travis-ci> Rakudo build failed. Zoffix Znet 'Throw useful error on attribute in `where`…

[18:43] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/339564278 https://github.com/rakudo/rakudo/compare/28fabe3a3731...1c894e418d69

[18:43] <buggable> [travis build above] ☠ All failures are due to: failed make test (1 failure). Across all jobs, only t/02-rakudo/repl.t test file failed.

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt: 2daad12f58 | (Zoffix Znet)++ | 2 files

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt: Revert "QASTify .dispatch:<.=> calls"

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt:

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt: This reverts commit 7fe23136da6802c60df204fc8529a46923e8cfa7.

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt: Fixes https://github.com/rakudo/rakudo/issues/1506

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt:

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt: This opt is quickly becomming a buggy bowl of spaghetti.

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt: I rather leave it as a .dispatch:<.=> call in Actions so it's

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt: handled everywhere as normal, and then optimize the call in the

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt: static optimizer instead.

[20:24] <Geth> ¦ rakudo/rework-dot-equals-opt: review: https://github.com/rakudo/rakudo/commit/2daad12f58

[21:05] <japhb> Zoffix++   # The guts to try difficult improvements, and the integrity to back them out if needed

[21:16] <[Coke]> Zoffix++ also just the sheer amount of rakudo work, thanks.

[21:48] <japhb> Definitely

[22:07] <AlexDaniel> Zoffix++ # yes!

[23:41] <Geth> ¦ roast: 7bd36fc938 | (Zoffix Znet)++ | 2 files

[23:41] <Geth> ¦ roast: Cover .pick/.roll on object hashes

[23:41] <Geth> ¦ roast:

[23:41] <Geth> ¦ roast: RT#132246: https://rt.perl.org/Ticket/Display.html?id=132246

[23:41] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7bd36fc938

[23:41] <synopsebot> RT#132246 [open]: https://rt.perl.org/Ticket/Display.html?id=132246 .pick and .roll return incorrect results for object hashes
