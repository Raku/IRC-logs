[00:28] <gfldex> m: sub s(&c:(:$p)){ c() }; sub f(:p(:$a)){say $a };  f(:p<♥>); s(&f)

[00:28] <camelia> rakudo-moar af4d6b461: OUTPUT: «♥␤Constraint type check failed in binding to parameter '&c'; expected anonymous constraint to be met but got Sub (sub f (:p(:$a)) { #`(...)␤  in sub s at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[00:28] <gfldex> m: sub s(&c:(:$p)){ c() }; sub f(:a(:$p)){say $p };  f(:p<♥>); s(&f)

[00:28] <camelia> rakudo-moar af4d6b461: OUTPUT: «♥␤Constraint type check failed in binding to parameter '&c'; expected anonymous constraint to be met but got Sub (sub f (:a(:$p)) { #`(...)␤  in sub s at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[00:28] <gfldex> I'm leaning towards bug.

[00:29] * gfldex goes to sleep over it

[00:38] <travis-ci> Rakudo build passed. Zoffix Znet 'Revert "Actually use new-from-git-describe in Compiler.new"

[00:38] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/337352106 https://github.com/rakudo/rakudo/compare/a8e6be66a248...af4d6b461662

[00:43] <Geth> ¦ rakudo: e8c6c259ce | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[00:43] <Geth> ¦ rakudo: Fix postfix whatever curry with another curry inside

[00:43] <Geth> ¦ rakudo:

[00:43] <Geth> ¦ rakudo: Fixes RT#130859: https://rt.perl.org/Ticket/Display.html?id=130859

[00:43] <Geth> ¦ rakudo:

[00:43] <Geth> ¦ rakudo: When we enter the currier, we use arity to figure out how many

[00:43] <Geth> ¦ rakudo: kids of the QAST to examine for currying. However, in the case of

[00:43] <Geth> ¦ rakudo: `*.[*-1]`, the remaining kids have a call to a Callable, the

[00:43] <Geth> ¦ rakudo: QAST::Block for which we never migrate, since we never examine them.

[00:43] <synopsebot> RT#130859 [new]: https://rt.perl.org/Ticket/Display.html?id=130859 [WEIRD] WhateverCode subscript inside WhateverCode inside block doesn't properly close over lexical

[00:43] <Geth> ¦ rakudo: Fix by looping from $e to $qast.elems to migrate them.

[00:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e8c6c259ce

[00:44] <Geth> ¦ roast: 501f51b56c | (Zoffix Znet)++ | S02-types/whatever.t

[00:44] <Geth> ¦ roast: Test postfix curry with another curry inside

[00:44] <Geth> ¦ roast:

[00:44] <Geth> ¦ roast: RT#130859: https://rt.perl.org/Ticket/Display.html?id=130859

[00:44] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/e8c6c259ce

[00:44] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/501f51b56c

[03:47] <Zoffix> m: dd (:$_, :$_)

[03:47] <camelia> rakudo-moar e8c6c259c: OUTPUT: «(:_(Any), :_(Any))␤»

[03:47] <Zoffix> m: dd (:$_ :$_)

[03:47] <camelia> rakudo-moar e8c6c259c: OUTPUT: «===SORRY!===␤Unknown QAST node type NQPMu␤»

[03:47] <Zoffix> Are these supposed to be equivalent or should the latter throw?

[03:50] <Zoffix> m: class Foo { method bar (|c){ dd c } }.bar(:foo :bar :ber)

[03:50] <camelia> rakudo-moar e8c6c259c: OUTPUT: «\(:bar, :ber, :foo)␤»

[03:50] <Zoffix> m: class Foo { method bar (|c){ dd c } }.bar(42, :foo :bar :ber)

[03:50] <camelia> rakudo-moar e8c6c259c: OUTPUT: «\(42, :foo)␤»

[03:50] <Zoffix> this case falls into the same category...

[03:52] <Zoffix> m: dd %(:42a:70b:80c)

[03:52] <camelia> rakudo-moar e8c6c259c: OUTPUT: «Hash % = {:a(42)}␤»

[03:52] <Zoffix> and this one too

[03:53] <Zoffix> The extra pairs end up as named args to Pair.new constructing the earlier Pair, because it thinks we're doing `$foo.bar():adverbs` call.

[03:57] <Zoffix> gonna try to make it work and see if anything explodes

[05:05] <Zoffix> samcv: you around? What should be put into weekly about windows-1251 encoding? I see some reverts... but don't know if everything was reverted or not

[05:06] <samcv> Zoffix: windows-1251 (Cyrillic) support has been added (we didn't have it before)

[05:06] <samcv> also bugs in windows-1252 have been fixed

[05:06] <Zoffix> Thanks.

[05:06] <samcv> such as certain codepoints not being properly decoded

[05:09] <samcv> s/decoded/encoded

[05:10] <samcv> but also possibly decoded too

[05:10] <samcv> let me check

[05:25] <samcv> Zoffix: ok. the problem was only encoding, not with decoding

[05:25] <Zoffix> cool

[05:25] <samcv> m: "8250|732|339|382|376|8482|353".split('|')».uniname.say

[05:25] <camelia> rakudo-moar e8c6c259c: OUTPUT: «(DIGIT EIGHT DIGIT SEVEN DIGIT THREE DIGIT THREE DIGIT THREE DIGIT EIGHT DIGIT THREE)␤»

[05:25] <samcv> uh

[05:25] <samcv> m: "8250|732|339|382|376|8482|353".split('|').chrs.uninames.say

[05:25] <camelia> rakudo-moar e8c6c259c: OUTPUT: «(SINGLE RIGHT-POINTING ANGLE QUOTATION MARK SMALL TILDE LATIN SMALL LIGATURE OE LATIN SMALL LETTER Z WITH CARON LATIN CAPITAL LETTER Y WITH DIAERESIS TRADE MARK SIGN LATIN SMALL LETTER S WITH CARON)␤»

[05:26] <samcv> m: "8250|732|339|382|376|8482|353".split('|').chrs.uninames.perl.say

[05:26] <camelia> rakudo-moar e8c6c259c: OUTPUT: «("SINGLE RIGHT-POINTING ANGLE QUOTATION MARK", "SMALL TILDE", "LATIN SMALL LIGATURE OE", "LATIN SMALL LETTER Z WITH CARON", "LATIN CAPITAL LETTER Y WITH DIAERESIS", "TRADE MARK SIGN", "LATIN SMALL LETTER S WITH CARON").Seq␤»

[05:27] <samcv> m: "8250|732|339|382|376|8482|353".split('|')».chr.join(', ').say

[05:27] <camelia> rakudo-moar e8c6c259c: OUTPUT: «›, ˜, œ, ž, Ÿ, ™, š␤»

[05:27] <samcv> should be able to copy ^ into the changelog for the ones where encoding is fixed

[05:29] <samcv> Zoffix: oh and make sure to also add, that windows-1251 also now works on jvm too

[05:29] <samcv> that was much easier though, since it just involved adding it to the encodings list :)

[05:29] <Zoffix> :)

[06:29] <Zoffix> This weeks Perl 6 Weekly, hot off the press: https://p6weekly.wordpress.com/2018/02/05/whatever-fosdem-squashed/

[06:30] <Zoffix> lizmat++ for doing so many of them

[06:48] <Geth> ¦ rakudo: niner++ created pull request #1482: Remove irrelevant and wrong type constraint

[06:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1482

[07:10] <samcv> Zoffix++

[07:35] <nine> Zoffix: sorry for breaking Travis yet again. At least I now think I know what's wrong.

[07:35] <yoleaux> 4 Feb 2018 23:55Z <Zoffix> nine: I reverted "new-from-git-describe in Compiler.new" because it was breaking Travis builds with `MVMArray: Can't pop from an empty array`: https://travis-ci.org/rakudo/rakudo/jobs/337335453#L1468

[07:36] <nine> Zoffix: it seems like on Travis the compiler version does not contain any '.'

[07:37] <nine> jnthn: oh, that looks quite outdated. I closed it

[08:38] <nine> Yep, indeed, the version string on Travis is empty: Version: ''

[08:49] <nine> I'd guess Travis does not fetch git tags and gen-version.pl does not check if it found any, thus overwriting the $version from the VERSION file with an empty string

[09:36] <Geth> ¦ rakudo: 43859b54d5 | (Stefan Seifert)++ | src/core/Compiler.pm

[09:36] <Geth> ¦ rakudo: Actually use new-from-git-describe in Compiler.new

[09:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/43859b54d5

[09:36] <Geth> ¦ rakudo: 382024e607 | (Stefan Seifert)++ | tools/build/gen-version.pl

[09:36] <Geth> ¦ rakudo: Fix empty compiler version when the git repo doesn't have tags

[09:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/382024e607

[09:36] <Geth> ¦ rakudo: bdb4d34d3b | (Stefan Seifert)++ | src/core/core_epilogue.pm

[09:36] <Geth> ¦ rakudo: Initialize the Perl object at BEGIN time to save runtime

[09:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bdb4d34d3b

[09:37] <nine> Zoffix: finally nailed it :)

[09:44] <Zoffix> Great, though I would've written it as `$version = $git_version || "$version-<unknown-commit>"` or something. Just so a failure to fetch version from git differs from a released version.

[09:50] <nine> Feel free to improve :)

[10:08] <samcv> Zoffix: what's your thoughts about throwing when invalid codepoints are encountered. when decoding windows-1252. currently we don't throw and pass through invalid single byte codepoints

[10:08] <Zoffix> No idea, sorry

[10:08] * Zoffix drops to bed

[10:08] <samcv> and the question is, once i implement the MoarVM ops to make that configurable (so we can have it loose, or strict)

[10:09] <samcv> Zoffix: do we wait til 6.d to make it strict?

[10:09] <samcv> is the real question i'm trying to ask you

[10:09] <samcv> since we have 6.c tests which test that it decodes and encodes invalid codepoints

[10:10] <samcv> or anyone elses thoughts on when to change the default for this

[11:20] <AlexDaniel> reportable6: 2018-01-29T00:00:00Z 2018-02-05T00:00:00Z

[11:20] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[11:21] <reportable6> AlexDaniel, https://gist.github.com/261b983377a0c79801050197dd5f9ede

[11:23] <AlexDaniel> Zoffix++ awesome weekly

[13:20] <pmurias> samcv: re changing the default, that seems like a clear violation of the 6.c tests

[13:22] <pmurias> the tests where testing for laxness explicitly so it's not like we are changing some accidental behavior

[14:07] <Geth> ¦ nqp: 364d9b65fb | pmurias++ | 3 files

[14:07] <Geth> ¦ nqp: [js] Refactor the decoder to use the codec api

[14:07] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/364d9b65fb

[14:07] <Geth> ¦ nqp: e6fe8810da | pmurias++ | 2 files

[14:07] <Geth> ¦ nqp: [js] Using utf8-c8 in decoders works

[14:07] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/e6fe8810da

[14:07] <Geth> ¦ nqp: 6ad811c24d | pmurias++ | 7 files

[14:07] <Geth> ¦ nqp: [js] Stop using the grapheme-breaker package and use our own stuff

[14:07] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/6ad811c24d

[14:49] <AlexDaniel`> samcv: yes, it does seem like something for v6.d, at least with my first uneducated look at it

[15:42] <|Tux|> Rakudo version 2018.01-117-gbdb4d34d3 - MoarVM version 2018.01-77-g9a029b408

[15:42] <|Tux|> csv-test-xs-20      0.438 -  0.463

[15:43] <|Tux|> csv-ip5xs           0.797 -  0.808

[15:43] <|Tux|> test-t --race       1.082 -  1.093

[15:43] <|Tux|> test-t              2.559 -  2.632

[15:43] <|Tux|> csv-ip5xs-20        7.387 -  7.529

[15:43] <|Tux|> test           Rakudo version 2018.01-117-gbdb4d34d3 - MoarVM version 2018.01-77-g9a029b408

[15:43] <|Tux|> csv-test-xs-20      0.438 -  0.463

[15:43] <|Tux|> csv-ip5xs           0.797 -  0.808

[15:43] <|Tux|> test-t --race       1.082 -  1.093

[15:43] <|Tux|> test-t              2.559 -  2.632

[15:43] <|Tux|> csv-ip5xs-20        7.387 -  7.529

[15:43] <|Tux|> test                8.582 -  9.139

[15:43] <|Tux|> csv-parser         11.314 - 11.600

[15:43] <|Tux|> test-t-20 --race   16.014 - 16.887

[15:43] <|Tux|> test-t-20          46.292 - 47.239

[15:43] <|Tux|> 8.582 -  9.139

[15:43] <|Tux|> csv-parser         11.314 - 11.600

[15:43] <|Tux|> test-t-20 --race   16.014 - 16.887

[15:43] <|Tux|> test-t-20          46.292 - 47.239

[15:44] <|Tux|> Grrrrr

[15:44] <|Tux|> Rakudo version 2018.01-117-gbdb4d34d3 - MoarVM version 2018.01-77-g9a029b408

[15:44] <|Tux|> csv-test-xs-20      0.438 -  0.463

[15:44] <|Tux|> csv-ip5xs           0.797 -  0.808

[15:44] <|Tux|> test-t --race       1.082 -  1.093

[15:44] <|Tux|> test-t              2.559 -  2.632

[15:44] <|Tux|> csv-ip5xs-20        7.387 -  7.529

[15:44] <|Tux|> test                8.582 -  9.139

[15:44] <|Tux|> csv-parser         11.314 - 11.600

[15:44] <|Tux|> test-t-20 --race   16.014 - 16.887

[15:44] <|Tux|> test-t-20          46.292 - 47.239

[15:54] <timotimo> oops, what happened there?

[15:55] <nine> Looks like interleaved double pasting

[15:55] <timotimo> mhm

[16:00] <|Tux|> My mouse bounces :(

[21:29] <Zoffix> c: HEAD, HEAD~100 say $*PERL.compiler.version eqv $*PERL.compiler.version.perl.EVAL

[21:29] <committable6> Zoffix, ¦HEAD(bdb4d34): «False␤» ¦HEAD~100: «True␤»

[21:30] <Zoffix> The Version.new-from-git-describe doesn't split the version correctly. Also, that really shouldn't have been a public method, but rather something stuffed into Rakudo::Internals

[21:36] <Zoffix> Based on the commit, it was added only because we can't use regexes early enough where it's needed. I'm gonna rewrite Version.new without regexes and nix .new-from-git-describe
