[01:31] *** ZzZombo left
[02:54] *** ggoebel left
[03:08] *** ggoebel joined
[03:09] *** cog left
[03:09] *** p6bannerbot sets mode: +v ggoebel

[03:13] *** lizmat left
[03:29] *** Ven` joined
[03:30] *** p6bannerbot sets mode: +v Ven`

[03:34] *** Ven` left
[04:49] *** epony left
[05:25] *** robertle left
[06:20] *** ZzZombo joined
[06:20] *** p6bannerbot sets mode: +v ZzZombo

[06:20] *** ZzZombo left
[06:21] *** ZzZombo joined
[06:21] *** p6bannerbot sets mode: +v ZzZombo

[06:22] *** robertle joined
[06:22] *** p6bannerbot sets mode: +v robertle

[06:27] *** patrickb joined
[06:27] *** p6bannerbot sets mode: +v patrickb

[06:47] *** epony joined
[06:47] *** p6bannerbot sets mode: +v epony

[06:56] *** brrt joined
[06:57] *** p6bannerbot sets mode: +v brrt

[07:00] <releasable6> Next release in ≈2 days and ≈11 hours. 1 blocker. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[07:04] <brrt> what's the blocker?

[07:47] *** lizmat joined
[07:48] *** p6bannerbot sets mode: +v lizmat

[07:49] <lizmat> timotimo: cool!

[07:51] *** Ven` joined
[07:52] *** p6bannerbot sets mode: +v Ven`

[08:06] *** brrt left
[08:21] <|Tux|> Rakudo version 2018.08-97-g0a416dadb - MoarVM version 2018.08-70-g1d68871d0

[08:21] <|Tux|> csv-test-xs-20      0.427 -  0.435

[08:21] <|Tux|> csv-ip5xs           0.934 -  0.963

[08:21] <|Tux|> test-t --race       0.855 -  0.936

[08:21] <|Tux|> test-t              2.056 -  2.057

[08:21] <|Tux|> csv-ip5xs-20        7.325 -  7.596

[08:21] <|Tux|> test                9.277 -  9.354

[08:21] <|Tux|> test-t-20 --race   11.036 - 11.714

[08:21] <|Tux|> csv-parser         22.191 - 22.663

[08:22] <|Tux|> test-t-20          35.183 - 35.813

[08:34] *** brrt joined
[08:34] *** p6bannerbot sets mode: +v brrt

[08:35] *** Ven` left
[08:43] *** x[LGWs4x4i]uG2N0 joined
[08:44] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[08:50] <brrt> robertle: use MoarVM tools/jit-bisect.pl --spesh

[08:50] <brrt> I have a plan to make that more automagic

[08:50] *** Ven` joined
[08:51] *** p6bannerbot sets mode: +v Ven`

[08:51] <AlexDaniel> brrt: blocker: https://github.com/MoarVM/MoarVM/issues/951

[08:51] <AlexDaniel> releasable6: status

[08:51] <releasable6> AlexDaniel, Next release in ≈2 days and ≈10 hours. 1 blocker. 1 out of 97 commits logged (⚠ 46 warnings)

[08:51] <releasable6> AlexDaniel, Details: https://gist.github.com/93a74f8df4c245b6048eff7b5d7ac496

[08:52] <brrt> if it's a raspberry pi is, then I'm afraid the JIT isn't going to help much

[08:52] <brrt> well, the JIT isn't to blame, is what I mean

[08:52] <timotimo> no JITs here, sir

[09:32] *** brrt left
[09:51] *** cognominal-p6 joined
[09:52] *** p6bannerbot sets mode: +v cognominal-p6

[09:53] *** x[LGWs4x4i]uG2N0 left
[09:57] *** x[LGWs4x4i]uG2N0 joined
[09:58] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[10:02] <lizmat> Files=1251, Tests=76116, 342 wallclock secs (15.91 usr  5.65 sys + 2402.97 cusr 230.35 csys = 2654.88 CPU)

[10:16] *** ZzZombo left
[10:56] *** lizmat left
[11:05] *** lizmat joined
[11:06] *** p6bannerbot sets mode: +v lizmat

[11:07] *** Ven` left
[11:17] <tbrowder__> hi, perl6-dev

[11:18] <tbrowder__> a few days ago i asked about some grammar syntax (**1 and **0..1 quantifiers on a token reference see http://colabti.org/irclogger/irclogger_log/perl6-dev?date=2018-09-05#l98).

[11:21] <tbrowder__> in this gist i show the uses and what i would like to try to change to a more modern syntax.  comments welcome; gist: https://gist.github.com/tbrowder/ad7019a21bc1c500e08fcd0f42ffb509 

[11:22] <tbrowder__> please use a dot command as i will be afk&

[11:23] *** japhb_ left
[11:41] <AlexDaniel> .tell tbrowder just try it? If it works then no problem (I'd expect some tests to fail if it makes a difference)

[11:41] <yoleaux> AlexDaniel: I'll pass your message to tbrowder.

[11:44] <tbrowder__> AlexDaniel: I do plan to try, just wanting to see if there is some other  choice to try

[11:44] *** ZzZombo joined
[11:44] *** p6bannerbot sets mode: +v ZzZombo

[11:55] *** brrt joined
[11:56] *** p6bannerbot sets mode: +v brrt

[11:56] *** cog joined
[11:57] *** p6bannerbot sets mode: +v cog

[11:59] *** cognominal-p6 left
[12:05] *** Ven` joined
[12:05] <Geth> ¦ nqp: a7351c4a05 | (Timo Paulssen)++ | src/vm/moar/HLL/Backend.nqp

[12:05] <Geth> ¦ nqp: put the name of the SC in every type's extra info

[12:05] <Geth> ¦ nqp: 

[12:05] <Geth> ¦ nqp: this lets us figure out which types come from

[12:05] <Geth> ¦ nqp: the raukdo core setting, the bootstrap, or nqp ...

[12:05] <Geth> ¦ nqp: or the user's code, or libraries etc etc.

[12:05] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a7351c4a05

[12:05] *** p6bannerbot sets mode: +v Ven`

[12:24] <tbrowder__> when a rakudo pr is submitted, does it get the full spectest by travis?

[12:27] <lizmat> tbrowder__: I think so

[12:29] <tbrowder__> thnx

[12:36] <tbrowder__> anyone else having trouble getting updates from rakudo on gitgub?

[12:37] <tbrowder__> or  nqp? my rakudo build is failing...

[12:38] <lizmat> last week the build failed for a few hours, but if you're up to date, all should be fine

[12:38] <timotimo> gitgub is a fantastic typo

[12:57] *** robertle left
[13:05] <AlexDaniel> Geth: ver https://github.com/rakudo/rakudo/commit/1ac7996a42d50fc64c758b6dc2c4eec64d2a6094

[13:05] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/perl6/nqp/compare/2017.05-145-g0ac9b4f...2017.05-149-gb96a0afe7

[13:06] <AlexDaniel> Geth: ver https://github.com/perl6/nqp/commit/4c7f683f875d2019a265c47f84f3dd18b0181b79

[13:06] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/MoarVM/MoarVM/compare/

[13:06] <AlexDaniel> arohragroageurohau

[13:06] <lizmat> AlexDaniel: interesting password  :-)

[13:06] <AlexDaniel> https://github.com/MoarVM/MoarVM/compare/2017.05-59-gf17adad...2017.05-71-gad6ab26f

[13:07] <AlexDaniel> I'm really confused by this: https://gist.github.com/Whateverable/ec73bbf745f345944443383ad05edf55

[13:07] <AlexDaniel> bisected to the moar bump mentioned above

[13:19] <timotimo> that threw out async i/o for our std handles

[13:21] <jnthn> releasable6: status

[13:21] <releasable6> jnthn, Next release in ≈2 days and ≈5 hours. 1 blocker. 1 out of 97 commits logged (⚠ 46 warnings)

[13:21] <releasable6> jnthn, Details: https://gist.github.com/4a318435055ec0ad8a71bbf2452a6bd2

[13:23] <jnthn> I think this'll be the first Rakudo release in 10 years that I don't have any commits in :)

[13:26] <Ulti> do you want me to find a typo for you? >:P 

[13:26] <jnthn> My job is making those, not fixing them :P :P

[13:28] <AlexDaniel> timotimo: aaand?

[13:28] <timotimo> no clue :\

[13:28] <timotimo> can you get a gdb attached and set a breakpoint to the function(s) that give that error?

[13:29] <AlexDaniel> hmmmmm

[13:30] <brrt> what bug are we debugging?

[13:31] <tbrowder__> hm, build is working again now...github must need some prune juice (OR the prune juice i just drank must have worked)

[13:31] <AlexDaniel> brrt: not necessarily a bug, but here's what happens. There are builds of rakudo on whateverable server from 2015.12 to HEAD, and on whateverable server they work fine

[13:32] <timotimo> "say 42" giving Unhandled exception: get_stream failed, unsupported std handle

[13:32] <AlexDaniel> also, they (same files) were working fine on my laptop

[13:32] <AlexDaniel> but now 2017.05 and older no longer work

[13:33] <AlexDaniel> (on my laptop)

[13:34] <AlexDaniel> and I assume eventually they'd stop working on whateverable server also?

[13:35] <brrt> oh, I see

[13:41] <AlexDaniel> at least 2017.05 is buildable without any hacks for INC

[13:50] *** brrt left
[13:58] <AlexDaniel> Hm, I tried to golf it somewhat and it went away

[13:58] <AlexDaniel> though is still reproducible with a full bot…

[13:58] <AlexDaniel> nevermind then for now

[14:19] *** ZzZombo_ joined
[14:20] *** p6bannerbot sets mode: +v ZzZombo_

[14:21] *** ZzZombo left
[14:31] *** |Tux| left
[14:31] *** |Tux| joined
[14:32] *** p6bannerbot sets mode: +v |Tux|

[14:32] *** MasterDuke left
[14:46] *** ZzZombo_ left
[14:46] *** ZzZombo_ joined
[14:46] *** card.freenode.net sets mode: +v ZzZombo_

[14:46] *** p6bannerbot sets mode: +v ZzZombo_

[14:46] *** ZzZombo_ is now known as ZzZombo

[14:50] *** lizmat left
[14:56] *** robertle joined
[14:57] *** p6bannerbot sets mode: +v robertle

[15:04] *** brrt joined
[15:04] *** ExtraCrispy joined
[15:05] *** p6bannerbot sets mode: +v brrt

[15:05] *** p6bannerbot sets mode: +v ExtraCrispy

[15:07] *** Zoffix joined
[15:07] *** p6bannerbot sets mode: +v Zoffix

[15:08] <Zoffix> tbrowder__: lizmat: no, travis doesn't run spectest. Only make test. IIRC the jobs have a 10m limit, which is barely enough just to build rakudo and make test it

[15:10] *** Zoffix left
[15:15] <tbrowder__> ok, thnx, i do spectest before PR anyway

[15:42] *** dogbert17 left
[15:59] *** patrickb left
[16:06] *** brrt left
[16:13] <tbrowder__> one more question ref PR, when merged, will it get a full spectest soon enough to revert before too much changes on master as well as nqp and moarvm?

[16:14] <tbrowder__> reason for my question is my upcoming PR has a lot of code changes (mostly Pod.nqp but also Actions.nqp and Grammar.nqp

[16:17] <tbrowder__> and i want to branch off the new master for another, simpler PR

[16:19] <tbrowder__> on my spectests before PR i have not been doing the p5 tests nor the jvm tests because of host machine limitations

[16:20] *** robertle left
[16:35] <AlexDaniel> tbrowder__: I don't understand the question

[16:35] <AlexDaniel> tbrowder__: you should spectest your change yourself, and if it's fine then it's good to go

[16:36] <tbrowder__> ok, sorry to be so wordy

[16:36] <AlexDaniel> you shouldn't worry too much about how hard would it be to revert it

[16:56] *** Ven` left
[17:00] *** robertle joined
[17:01] *** p6bannerbot sets mode: +v robertle

[17:18] *** lizmat joined
[17:19] *** p6bannerbot sets mode: +v lizmat

[18:00] <lizmat> so, would it be an idea to have a sub that would take a umber of awaitables and turn that into an iterator ?

[18:00] <lizmat> if not, why ?

[18:04] <AlexDaniel> lizmat: what about Supply.merge ?

[18:05] <AlexDaniel> is it similar or different from what you want?

[18:06] <lizmat> https://github.com/rakudo/rakudo/blob/master/src/core/asyncops.pm6#L56  :-)

[18:07] <lizmat> I was thinking of just removing it: no tests, no spec and no documentation

[18:07] <lizmat> (even though it has been in there since Oct 2015)

[18:14] *** epony left
[18:19] <[Coke]> fff

[18:35] <Geth> ¦ rakudo: 1c3b724889 | (Elizabeth Mattijsen)++ | src/core/asyncops.pm6

[18:35] <Geth> ¦ rakudo: Do away with the awaiterator

[18:35] <Geth> ¦ rakudo: 

[18:35] <Geth> ¦ rakudo: There was no spec, no tests, no documentation and was from before the

[18:35] <Geth> ¦ rakudo: Supplier/Supply/Awaitables refactor.  Since I wrote the original version,

[18:35] <Geth> ¦ rakudo: it seems proper I'm the one to remove it as well.  Shaves off about 9.5K

[18:35] <Geth> ¦ rakudo: from the .moarvm file.

[18:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1c3b724889

[19:37] *** Kaiepi left
[20:04] <tbrowder__> i checked my spectest results and got two failures i don't think ar caused by my changes, but checking with others: t/spec/S32-list/seq.rakudo.moar and t/spec/S32-list/tail.t

[20:16] <lizmat> those do *not* sound familiar to me

[20:17] <timotimo> lizmat: 9.5 kilobytes? o_O

[20:44] *** PufferBot joined
[20:45] *** p6bannerbot sets mode: +v PufferBot

[20:55] <lizmat> jnthn timotimo samcv any further thoughts about R#2272 ?

[20:55] <synopsebot> R#2272 [open]: https://github.com/rakudo/rakudo/issues/2272 [IO] Closed handles are still readable for some time

[21:06] <jnthn> lizmat: Didn't have time to look properly at it yet

[21:06] <jnthn> (and certainly too tired now...)

[21:06] <lizmat> well, I think I golfed it down a lot

[21:07] <lizmat> it basically boils down to the decoder being in a weird state after an error in decoding

[21:07] <lizmat> which is interpreted as having been accessed from more than one thread at the time

[21:07] <jnthn> Yes, you're not menat to use it again after a decoding error

[21:08] <lizmat> ok, then we need a "reset" function

[21:08] <jnthn> No we don't

[21:08] <lizmat> or a way of knowing it is in a weird state ?

[21:08] <jnthn> Just make a new instance of the decoder

[21:08] <lizmat> on a closed file handle ?

[21:08] <lizmat> or just reset the $!decoder is what you mean?

[21:09] <jnthn> Or that, yes

[21:09] <jnthn> If it's closed, why are we reading from it? :)

[21:10] <lizmat> atm you can still read from a file after it has been closed if there's stuff in the buffer

[21:10] <jnthn> oh

[21:10] <lizmat> R#2272

[21:10] <synopsebot> R#2272 [open]: https://github.com/rakudo/rakudo/issues/2272 [IO][UNI] Closed handles are still readable for some time

[21:10] <jnthn> that sounds like .close not invalidating stuff

[21:10] <lizmat> yup  :-)

[21:11] <lizmat> trying $!decoder := nqp::null now

[21:13] *** MasterDuke joined
[21:13] *** p6bannerbot sets mode: +v MasterDuke

[21:13] *** MasterDuke left
[21:13] *** MasterDuke joined
[21:13] *** herbert.freenode.net sets mode: +v MasterDuke

[21:13] *** p6bannerbot sets mode: +v MasterDuke

[21:13] <jnthn> iirc, there's a function that throws if we're missing the decoder, and we can probably tweak it to check the $!VMIO and complain about a read from a closed handle rather than about the thing being in binary mode

[21:15] <lizmat> looks like "($!decoder && $!decoder := Encoding::Decoder)," is doing the trick

[21:17] *** MasterDuke left
[21:19] <lizmat> runna da spektezt

[21:25] <jnthn> :)

[21:26] <jnthn> Grr...this hotel is cute and serves nice beer but the wifi ain't the best :)

[21:27] <Geth> ¦ rakudo: b07874e061 | (Elizabeth Mattijsen)++ | src/core/IO/Handle.pm6

[21:27] <Geth> ¦ rakudo: Make sure the decoder is detached when closing

[21:27] <Geth> ¦ rakudo: 

[21:27] <Geth> ¦ rakudo: Fixes #2272

[21:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b07874e061

[21:27] <synopsebot> RAKUDO#2272 [open]: https://github.com/rakudo/rakudo/issues/2272 [IO][UNI] Closed handles are still readable for some time

[21:30] <Geth> ¦ roast: 3253943d8c | (Elizabeth Mattijsen)++ | S32-io/io-handle.t

[21:30] <Geth> ¦ roast: It already dies on the .slurp

[21:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3253943d8c

[21:30] <Geth> ¦ roast: 7e30619fba | (Elizabeth Mattijsen)++ | S32-io/io-handle.t

[21:30] <Geth> ¦ roast: Add test for R#2272

[21:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7e30619fba

[21:30] <synopsebot> R#2272 [closed]: https://github.com/rakudo/rakudo/issues/2272 [IO][UNI] Closed handles are still readable for some time

[21:35] <tbrowder__> here's a gist with the two spectest failures i'm getting. anyone recognize them: https://gist.github.com/tbrowder/7fc28effe9eb6c15965dbc5a823709a4 

[21:36] *** PufferBot left
[21:38] *** PufferBot joined
[21:38] *** p6bannerbot sets mode: +v PufferBot

[21:40] *** Zoffix joined
[21:40] *** p6bannerbot sets mode: +v Zoffix

[21:40] <Zoffix> tbrowder__: yes, your rakudo isn't recent enough, I'm betting

[21:41] <tbrowder__> wow, it's fast moving, just updated this morning. i'll update again. thanks.

[21:42] <japhb> .tell nine Inline::Python won't build for me at Rakudo HEAD

[21:42] <yoleaux> japhb: I'll pass your message to nine.

[21:42] <Zoffix> tbrowder__: are you sure you're updating from rakudo/rakudo and not from some fork of yours?

[21:42] <Zoffix> The commit on ranges went in like 1-2 days ago

[21:42] <Zoffix> tbrowder__: git remote -v

[21:44] <tbrowder__> no, i updated from upstream master

[21:45] <jnthn> sleep &

[21:45] <evalable6> jnthn, rakudo-moar b07874e06: OUTPUT: «Use of uninitialized value of type Callable in numeric context␤  in block <unit> at /tmp/2…»

[21:45] <evalable6> jnthn, Full output: https://gist.github.com/c9244690d940498e7bfc24989c22f07b

[21:45] <tbrowder__> would a pull instead of a fetch made any difference?

[21:45] <timotimo> hahaha

[21:46] *** Kaiepi joined
[21:46] *** p6bannerbot sets mode: +v Kaiepi

[21:48] <Zoffix> m: dd &

[21:48] <camelia> rakudo-moar b07874e06: OUTPUT: «Callable & = Callable␤»

[21:48] <tbrowder__> when i do the pull, i'm on the master branch. then i check out my new branch from that and integrate my changed code.

[21:49] <Zoffix> ah, it's an anon state var

[21:49] <Zoffix> tbrowder__: lemme try to build master and see if that test file fails

[21:49] <tbrowder__> ok, thanks!

[21:51] <tbrowder__> i may have made an error when integrating, but afaik i didn't touch anything like the test failures showed

[21:52] <Zoffix> hm, nqp build fails for me t/moar/12-decodelocaltime.t fails

[21:53] <Zoffix> I mean test fails,not build.

[21:53] <tbrowder__> i was getting some strange msgs from github this morning and it caused problems getting a good build early on

[21:53] <tbrowder__> updating moar and such

[21:56] <Zoffix> tbrowder__: that test passes for me

[21:56] <Zoffix> This is Rakudo version 2018.08-99-gb07874e06 built on MoarVM version 2018.08-71-gccf3dd373

[21:56] <Zoffix> Full log: https://gist.github.com/zoffixznet/d1b65326fba98e2a99be6c5d4e8110e9

[21:57] <tbrowder__> This is Rakudo version 2018.06-586-g0a416da built on MoarVM version 2018.08-63-ga8dfd47

[21:57] <tbrowder__> hm, the garden needs tending...back later

[21:59] *** Zoffix left
[21:59] <timotimo> tender lawn and carrots

[22:06] <lizmat> tbrowder__: my rakudo is at 2018.08-99-gb07874e

[22:09] <tbrowder__> i just updated again and picked up some more changes, rebuilding  master now (non of my code) to see what i get with ./perl -v

[22:13] <tbrowder__> Rakudo version 2018.06-588-gb07874e built on MoarVM version 2018.08-63-ga8dfd47

[22:13] <tbrowder__> weird

[22:13] <tbrowder__> at least moar is right

[22:14] * lizmat has made some progress on R#2272. but is too tired now to work out the final bits

[22:14] <synopsebot> R#2272 [open]: https://github.com/rakudo/rakudo/issues/2272 [IO][UNI][testneeded] Closed handles are still readable for some time

[22:14] <lizmat> sleep&

[22:38] <tbrowder__> ok, got masters, please tell me what magic git incantation do i need to get the "real" master HEAD?

[22:38] <tbrowder__> ok, git masters, please tell me what magic git incantation do i need to get the "real" master HEAD?

[22:42] <tbrowder__> my configure line is "Configure.pl --backends=moar --gen-moar --gen-nqp" which installs into ./install

[22:52] <timotimo> tbrowder__: you can --gen-moar=master --gen-nqp=master

[22:56] *** MasterDuke joined
[22:56] *** p6bannerbot sets mode: +v MasterDuke

[22:56] *** MasterDuke left
[22:56] *** MasterDuke joined
[22:56] *** herbert.freenode.net sets mode: +v MasterDuke

[22:56] *** p6bannerbot sets mode: +v MasterDuke

[22:58] <MasterDuke> timotimo: around?

[22:59] <timotimo> a squared

[22:59] <tbrowder__> timotimo: thanks, sounds like a good plan!

[23:01] <MasterDuke> timotimo: heh. did you happen to catch the link i sent a day or two ago with info from the debug server?

[23:01] <timotimo> yeah, it looked so innocuous :(

[23:03] <timotimo> i tried to do the "non-stop gdb + debugserver" thing myself the other day and couldn't get it to work :(

[23:03] <MasterDuke> huh, i just did what you suggested and it worked

[23:05] <timotimo> i did what i suggested and it hung :(

[23:06] <MasterDuke> now, i haven't actually tried to resume anything...

[23:06] <timotimo> me neither

[23:07] <MasterDuke> is there a MVM_gc_mark_thread_unblocked?

[23:11] <timotimo> yes

[23:11] <MasterDuke> do i need to resume in the debugserver first?

[23:11] <timotimo> wellllll

[23:12] <timotimo> resuming in the debugserver will try to signal a thread that's inside the mark_thread_blocked piece thingie

[23:12] <timotimo> all you need to do™ is reset the gc_status to what it was before, which is most probably 0

[23:13] <MasterDuke> i never actually did anything with gc_status

[23:13] <timotimo> oh?!

[23:14] <timotimo> i would have expected the debugserver would have refused doing anything for you if you left it at 0

[23:14] <timotimo> so maybe that's the mistake i made

[23:17] <MasterDuke> so you can't think of any other info to get before i try resuming?

[23:18] <timotimo> wellllllllllll

[23:18] <MasterDuke> heh

[23:18] <timotimo> what you can do, you see, is plug objects manually into the debug server's handle table

[23:19] <timotimo> meaning even if you don't have a lexical to hold the thing you're interested in

[23:19] <MasterDuke> but it was a lexical, right?

[23:19] <timotimo> i'm not sure any mor

[23:20] <MasterDuke> https://gist.github.com/MasterDuke17/91c585ccea88401789d7275994973fc6

[23:21] <MasterDuke> i found it in the output of `all lex 1`

[23:21] <MasterDuke>     89 QAST::Op         $op                    concrete

[23:30] <timotimo> OK, what errored again?

[23:31] <MasterDuke> $op.push

[23:32] <MasterDuke> `$op.push(QAST::Stmts.new(` that's the line it said

[23:33] <MasterDuke> `Cannot look up attributes in a VMNull type object`

[23:34] <timotimo> hum, but the push method isn't on the call stack?

[23:34] <timotimo> can you show the whole code?

[23:34] <timotimo> oh

[23:34] <timotimo> line numbers in the debugserver lie!

[23:35] <MasterDuke> no, the line number is from before using the debugserver

[23:36] *** epony joined
[23:36] *** p6bannerbot sets mode: +v epony

[23:38] <MasterDuke> i'm broken at the nqp op i inserted just before that line

[23:38] <MasterDuke> can i try stepping in the debugserver, or do i need to call *unblock in gdb?

[23:39] *** ZzZombo_ joined
[23:40] *** p6bannerbot sets mode: +v ZzZombo_

[23:41] *** ZzZombo left
[23:43] <MasterDuke> timotimo: this is the diff of my current changes https://gist.github.com/MasterDuke17/1c45e013eac54ac54e6578d49eabd36c

[23:44] <timotimo> ah, asec_n(2e1)

[23:45] <timotimo> btw, the whole entire thing has only one single "line"

[23:45] <timotimo> er, actually

[23:45] <timotimo> maybe not

[23:45] <timotimo> do you have the "self"?

[23:46] <MasterDuke> in the debug output?

[23:46] <timotimo> access to it somehow, yeah

[23:46] <MasterDuke>     55 Perl6::Optimizer self                   concrete

[23:46] <MasterDuke> same frame as $op

[23:46] <timotimo> oh

[23:46] <timotimo> why didn't i think of this

[23:46] <timotimo> you can totally step through the moarvm interpreter in gdb

[23:47] <timotimo> it's not as nice an experience at all

[23:47] <timotimo> but it'll step op by op

[23:47] <timotimo> can i get more output from your debug session? including the "all lex" one?

[23:48] <MasterDuke> https://gist.github.com/MasterDuke17/f2c0a7a36509bc2e630e4fa1f46cdafe

[23:49] <timotimo> line 2342 is just an inner { } thing?

[23:50] <MasterDuke> ?

[23:50] <timotimo> well, what constitutes frame 0?

[23:51] <MasterDuke> the nqp::asec_n ?

[23:51] <timotimo> i'm not sure if Frame 0 is just an inner block inside Frame 1

[23:52] <timotimo> but it most probably is

[23:52] <timotimo> just from the else { ... }

[23:55] <timotimo> can you tell me which commit you're based on so i can apply the patch myself?

[23:55] <MasterDuke> de4e82259be36ac9c97b56d594591ea796a1b131

[23:56] <timotimo> patch unexpectedly ends in middle of line

[23:57] <MasterDuke> i just put the .patch file in the gist instead of copy/pasting

[23:58] <timotimo> found a non-native Int

[23:58] <timotimo> Cannot invoke this object (REPR: P6opaque; NQPMu)

[23:58] <timotimo>    at gen/moar/Perl6-Optimizer.nqp:2342  (blib/Perl6/Optimizer.moarvm:)

[23:58] <timotimo> this is the right crash?

[23:58] <MasterDuke> yep

