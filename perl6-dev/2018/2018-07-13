[00:03] *** travis-ci joined
[00:03] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Merge pull request #2061 from rakudo/revert-2038-issue-2022

[00:03] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/403319203 https://github.com/rakudo/rakudo/compare/21eb168ca447...612d071b83f0

[00:03] *** travis-ci left
[00:03] <buggable> [travis build above] ☠ All failures are due to: failed make test (1 failure). Across all jobs, only t/04-nativecall/12-sizeof.t test file failed.

[00:07] *** lizmat left
[00:24] <Geth> ¦ rakudo: ugexe++ created pull request #2065: Remove undocumented/unspecced gethostname()

[00:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2065

[00:26] <geekosaur> um. what's your alternative to it? because it's kinda needed in network code

[00:26] <geekosaur> likely it should be spec-ed and related to the standard inet API, and the assumption of that is why it wasn't documented

[00:45] *** MasterDuke left
[00:49] <Geth> ¦ nqp: bdaeaaf647 | 陈梓立++ (committed using GitHub Web editor) | docs/ops.markdown

[00:49] <Geth> ¦ nqp: typo

[00:49] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/bdaeaaf647

[01:05] *** MasterDuke joined
[01:39] <Geth> ¦ rakudo: ugexe++ created pull request #2066: Remove unused Universal role

[01:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2066

[01:46] <Geth> ¦ nqp: 5a8c75bd1b | MasterDuke17++ (committed using GitHub Web editor) | docs/ops.markdown

[01:46] <Geth> ¦ nqp: Add return types to doc signature of some ops

[01:46] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/5a8c75bd1b

[01:50] *** fake_space_whale joined
[01:54] <Geth> ¦ nqp: 4e2304c205 | MasterDuke17++ (committed using GitHub Web editor) | docs/ops.markdown

[01:54] <Geth> ¦ nqp: Add nqp::gethostname to the docs

[01:54] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/4e2304c205

[02:35] <MasterDuke> p6: use nqp; say(nqp::stat_time('.', 8))

[02:36] <camelia> rakudo-moar 612d071b8: OUTPUT: «1531449317.8038583␤»

[02:36] <MasterDuke> r: use nqp; say(nqp::stat_time('.', 8))

[02:36] <camelia> rakudo-moar 612d071b8: OUTPUT: «1531449317.8038583␤»

[02:36] <camelia> ..rakudo-jvm 5682ee1f1: OUTPUT: «1531449317␤»

[03:20] <Geth> ¦ nqp/truffle: dd426269a7 | (Daniel Green)++ | 6 files

[03:20] <Geth> ¦ nqp/truffle: [truffle] Implement nqp::<l?stat l?stat_time>

[03:20] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/dd426269a7

[04:27] *** Ven` joined
[04:32] *** Ven` left
[05:15] *** kanopis joined
[05:18] *** fake_space_whale left
[05:28] *** nebuchadnezzar left
[05:29] *** nebuchadnezzar joined
[05:34] *** fake_space_whale joined
[05:34] *** robertle left
[05:47] *** kanopis left
[06:03] *** fake_space_whale left
[06:05] *** ufobat_ joined
[06:46] *** robertle joined
[06:46] <[Tux]> Rakudo version 2018.06-163-g612d071b8 - MoarVM version 2018.06-203-g1b1edfe5f

[06:46] <[Tux]> csv-test-xs-20      0.450 -  0.458

[06:46] <[Tux]> test-t --race       0.961 -  0.964

[06:46] <[Tux]> csv-ip5xs           0.959 -  0.972

[06:46] <[Tux]> test-t              2.207 -  2.322

[06:46] <[Tux]> csv-ip5xs-20        7.962 -  8.137

[06:46] <[Tux]> test                9.020 -  9.314

[06:46] <[Tux]> test-t-20 --race   13.926 - 14.039

[06:46] <[Tux]> csv-parser         26.112 - 26.301

[06:46] <[Tux]> test-t-20          38.614 - 39.704

[06:46] <[Tux]> 2018-06-25 11:30:00 test-t 2.238

[06:46] <[Tux]> 2018-06-25 11:26:31 test-t 2.230

[06:46] <[Tux]> 2018-06-18 19:07:25 test-t 2.227

[06:46] <[Tux]> 2018-05-07 18:35:13 test-t 2.227

[06:46] <[Tux]> 2018-07-13 08:21:27 test-t 2.207

[06:47] <[Tux]> :)

[06:56] *** [TuxCM] left
[07:23] <AlexDaniel> robertle: yeah, that's correct. I hope I clarified it https://github.com/robertlemmen/perl6-cache-async/issues/1#issuecomment-404721424

[07:24] <AlexDaniel> robertle: auto backlinking on github is a bit unfortunate in this case :) It's in the list on R#2047 because it randomly succeeded on 2018.06 and randomly failed on HEAD, so toaster shows it red

[07:24] <synopsebot> R#2047 [open]: https://github.com/rakudo/rakudo/issues/2047 [⚠ blocker ⚠] [WIP] Rescalar merge & other toaster-related stuff

[07:25] <AlexDaniel> the ones with ✓ are modules that are OK

[07:27] <robertle> AlexDaniel: ok, understood! I don't know how to make that test totally deterministic, as it is about timing. but I have doubled the timings and therefore the margin. perhaps that makes it less flappy for you as well...

[07:28] <AlexDaniel> hmm…

[08:10] *** [TuxCM] joined
[09:01] <Ulti> [TuxCM]: in your tests which is P6 vs P5 (no XS) times?

[09:01] <Ulti> "test" with 9s is that the perl6 time?

[09:05] <Ulti> oh I see test-t --race is also p6 nice

[09:19] *** lizmat joined
[10:03] *** |Tux| left
[10:23] <jnthn> Hmm, is that a new low for test-t? :)

[10:23] <lizmat> yeah, it is

[10:23] <lizmat> maybe time for a bump ?

[10:24] *** |Tux| joined
[10:24] <lizmat> *nudge*  :-)

[10:24] <jnthn> Can't remember when the last bump was :)

[10:24] <jnthn> But feel free to do one now

[10:24] <jnthn> I'm off working in a branch again

[10:24] <lizmat> ok, will

[10:24] <lizmat> do

[10:24] <jnthn> On the latest headache-inducing change :)

[10:25] <Ulti> yeah I can report my tests are seeing some super nice improvement too

[10:25] <jnthn> Cool :)

[10:25] <Ulti> I'll try and dig out my scripts from xmas and add another datapoint

[10:28] <jnthn> Currently working on more precise tracking of what we need to keep around for deoptimization purposes, so we can hopefully throw out more instructions when specializing, plus unblock some other opts.

[10:35] <AlexDaniel> releasable6: status

[10:35] <releasable6> AlexDaniel, Next release in ≈8 days and ≈8 hours. 8 blockers. 0 out of 163 commits logged

[10:35] <releasable6> AlexDaniel, Details: https://gist.github.com/607fb95a4f125db960d66517a86799b1

[10:36] <Geth> ¦ nqp: b1e80f0331 | (Elizabeth Mattijsen)++ | tools/build/MOAR_REVISION

[10:36] <Geth> ¦ nqp: Bump MoarVM for the latest goodies

[10:36] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/b1e80f0331

[10:36] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.06-141-gcae4731...2018.06-203-g1b1edfe

[10:50] <Geth> ¦ rakudo: e6c5e85988 | (Nick Logan)++ | 3 files

[10:50] <Geth> ¦ rakudo: Remove unspecced/used pre-6.c jvm modules

[10:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e6c5e85988

[10:51] <Geth> ¦ rakudo: 3905ac0bc3 | (Jonathan Worthington)++ (committed using GitHub Web editor) | 3 files

[10:51] <Geth> ¦ rakudo: Merge pull request #2063 from ugexe/remove-unused-jvm-modules

[10:51] <Geth> ¦ rakudo: 

[10:51] <Geth> ¦ rakudo: Remove unspecced/used pre-6.c jvm modules

[10:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3905ac0bc3

[11:16] <Geth> ¦ rakudo: 359ac12d97 | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[11:16] <Geth> ¦ rakudo: Bump NQP for the latest MoarVM goodies

[11:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/359ac12d97

[11:16] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.06-43-g668be5c...2018.06-50-gb1e80f0

[11:47] *** brrt joined
[11:50] *** travis-ci joined
[11:50] <travis-ci> Rakudo build failed. Jonathan Worthington 'Merge pull request #2063 from ugexe/remove-unused-jvm-modules

[11:50] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/403502723 https://github.com/rakudo/rakudo/compare/612d071b83f0...3905ac0bc3a6

[11:50] *** travis-ci left
[11:50] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[12:19] <Geth> ¦ rakudo: 6850a64f83 | (Elizabeth Mattijsen)++ | src/core/Map.pm6

[12:19] <Geth> ¦ rakudo: Part 1 of Map.STORE refactor

[12:19] <Geth> ¦ rakudo: 

[12:19] <Geth> ¦ rakudo: - split out handling Map/Hash and Object Hash handling

[12:19] <Geth> ¦ rakudo: - fixes R#2062

[12:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6850a64f83

[12:19] <synopsebot> R#2062 [open]: https://github.com/rakudo/rakudo/issues/2062 Initializing a Hash/Map from a list of a object hashes shows object hash internals

[12:24] *** brrt left
[12:26] <Geth> ¦ roast: c606a52330 | (Elizabeth Mattijsen)++ | S32-hash/map.t

[12:26] <Geth> ¦ roast: Add test for R#2062

[12:26] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c606a52330

[12:26] <synopsebot> R#2062 [open]: https://github.com/rakudo/rakudo/issues/2062 Initializing a Hash/Map from a list of a object hashes shows object hash internals

[12:41] *** travis-ci joined
[12:41] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Bump NQP for the latest MoarVM goodies'

[12:41] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/403510173 https://github.com/rakudo/rakudo/compare/3905ac0bc3a6...359ac12d9753

[12:41] *** travis-ci left
[12:41] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[12:43] <lizmat> hmmm... segfaults in stage optimize  :-(

[12:43] <lizmat> fwiw., I can't reproduce

[13:11] *** lizmat left
[13:11] *** reportable6 left
[13:11] *** reportable6 joined
[13:11] *** ChanServ sets mode: +v reportable6

[13:13] *** brrt joined
[13:25] *** pmurias joined
[13:26] *** lizmat joined
[13:30] *** travis-ci joined
[13:30] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Part 1 of Map.STORE refactor

[13:30] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/403530200 https://github.com/rakudo/rakudo/compare/359ac12d9753...6850a64f83e4

[13:30] *** travis-ci left
[13:39] *** llfourn left
[13:41] *** llfourn joined
[13:42] *** [TuxCM] left
[13:48] <Geth> ¦ nqp/truffle: 7f4f19e6c5 | (Paweł Murias)++ | README.pod

[13:48] <Geth> ¦ nqp/truffle: [truffle] Undo incorrect change in README.pod

[13:48] <Geth> ¦ nqp/truffle: review: https://github.com/perl6/nqp/commit/7f4f19e6c5

[13:53] *** pmurias left
[14:04] *** fake_space_whale joined
[14:06] <Geth> ¦ rakudo: 2670236fae | (Nick Logan)++ | src/core/Systemic.pm6

[14:06] <Geth> ¦ rakudo: Remove unused Universal role

[14:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2670236fae

[14:06] <Geth> ¦ rakudo: 83b4c8dcf4 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core/Systemic.pm6

[14:06] <Geth> ¦ rakudo: Merge pull request #2066 from ugexe/remove-universal-role

[14:06] <Geth> ¦ rakudo: 

[14:06] <Geth> ¦ rakudo: Remove unused Universal role

[14:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/83b4c8dcf4

[14:51] <dogbert17> hmm, 'Stage optimize   : Cannot invoke this object (REPR: P6opaque; QAST::Block)'

[14:53] <lizmat> dogbert17: Travis earlier had segfaults in Stage optimize, but that later cleared

[14:54] <dogbert17> I get them on my 32 bit Linux VM, 64 bit seems to be ok

[15:02] <dogbert17> I'll see if I can find a suspect commit

[15:13] *** brrt left
[15:19] <Geth> ¦ rakudo: 199d276b2e | (Elizabeth Mattijsen)++ | src/core/Map.pm6

[15:19] <Geth> ¦ rakudo: Fix test in Map.WHICH

[15:19] <Geth> ¦ rakudo: 

[15:19] <Geth> ¦ rakudo: It would generate the .WHICH with "Map|" even if there were other roles

[15:19] <Geth> ¦ rakudo: mixed in.

[15:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/199d276b2e

[15:23] *** [TuxCM] joined
[15:43] <lizmat> m: say MY::.keys

[15:43] <camelia> rakudo-moar 199d276b2: OUTPUT: «(!UNIT_MARKER ::?PACKAGE EXPORT $¢ $! $?PACKAGE $_ $/ $=pod $=finish GLOBALish)␤»

[15:43] <lizmat> m: say quietly MY::.keys

[15:43] <camelia> rakudo-moar 199d276b2: OUTPUT: «()␤»

[15:43] *** robertle left
[15:44] <lizmat> apparently quietly creates a scope with a new MY:: ??   Is that a bug / feature / DIHWIDT ?

[15:45] *** ExtraCrispy joined
[15:46] <jnthn> Arguably bug

[15:48] <Geth> ¦ rakudo: bb5db6a89d | (Elizabeth Mattijsen)++ | src/core/PseudoStash.pm6

[15:48] <Geth> ¦ rakudo: Give PseudoStash its own non-value based .WHICH

[15:48] <Geth> ¦ rakudo: 

[15:48] <Geth> ¦ rakudo: PseudoStash is a Map, but a Map that actually can have containers for

[15:48] <Geth> ¦ rakudo: values.  Since Map is considered a value-type, this meant that the .WHICH

[15:48] <Geth> ¦ rakudo: of e.g. a MY:: could change if the value of a lexical variable was changed.

[15:48] <Geth> ¦ rakudo: That is not good.  Instead, mark PseudoStash no longer as a value type, even

[15:48] <Geth> ¦ rakudo: though it *is* a Map.

[15:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bb5db6a89d

[15:49] <lizmat> Sometimes I think we need to swap the hierarchy of Map / Hash and Array / List around

[16:29] *** fake_space_whale left
[16:38] *** japhb joined
[16:55] <Geth> ¦ rakudo: ae6058ce53 | (Elizabeth Mattijsen)++ | src/core/Map.pm6

[16:55] <Geth> ¦ rakudo: Part 2 of 2 of Map.STORE refactor

[16:55] <Geth> ¦ rakudo: 

[16:55] <Geth> ¦ rakudo: - fix issue with Object Hash detection

[16:55] <Geth> ¦ rakudo: - make .STORE a multi

[16:55] <Geth> ¦ rakudo: - add a candidate for handling Maps

[16:55] <Geth> ¦ rakudo:   - if it is an actual Map (no subclass / roles), it's basically a clone

[16:55] <Geth> ¦ rakudo:   - if it is a normal Hash / Map, now 4x as fast

[16:55] <Geth> ¦ rakudo:   - if it is an Object Hash, now 1.5x as fast

[16:55] <Geth> ¦ rakudo: - add some comments

[16:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ae6058ce53

[16:58] *** japhb left
[17:00] *** japhb joined
[17:40] <Geth> ¦ rakudo: 9f524d0adb | (Elizabeth Mattijsen)++ | 2 files

[17:40] <Geth> ¦ rakudo: Eradicate Map.STORE_AT_KEY

[17:40] <Geth> ¦ rakudo: 

[17:40] <Geth> ¦ rakudo: This was really a Rakudo implementation detail, but was used as a semi-

[17:40] <Geth> ¦ rakudo: official API between Map/Hash.  Even though we're now calling .Str on things

[17:40] <Geth> ¦ rakudo: that potentially are already Str, the approach of not using a method call

[17:40] <Geth> ¦ rakudo: makes Map initialization from a list of values about 1.4x as fast.

[17:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9f524d0adb

[17:41] <Geth> ¦ 6.d-prep: a5fc2e8e34 | (Zoffix Znet)++ | TODO/README.md

[17:41] <Geth> ¦ 6.d-prep: Remove link to p5p discussion

[17:41] <Geth> ¦ 6.d-prep: 

[17:41] <Geth> ¦ 6.d-prep: Flipped through a few responses, but it seems the only thing

[17:41] <Geth> ¦ 6.d-prep: that got "birthed" is people arguing about who meant what and

[17:41] <Geth> ¦ 6.d-prep: smartmatch deprecation.

[17:41] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/a5fc2e8e34

[17:42] <Geth> ¦ 6.d-prep: b564ec7864 | (Zoffix Znet)++ | TODO/README.md

[17:42] <Geth> ¦ 6.d-prep: Remove more outdated text

[17:42] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/b564ec7864

[17:44] *** skids joined
[17:46] <lizmat> FWIW, I think the Rakudo Star readme could also get a looking over before release

[17:47] *** greppable6 left
[17:47] *** greppable6 joined
[17:54] <Geth> ¦ 6.d-prep: 96bc98fd24 | (Zoffix Znet)++ | 3 files

[17:54] <Geth> ¦ 6.d-prep: Start draft of New Feature Addition Policy

[17:54] <Geth> ¦ 6.d-prep: 

[17:54] <Geth> ¦ 6.d-prep: - First take of first draft of what I think are Good Ideas™

[17:54] <Geth> ¦ 6.d-prep: - 1884 words, without the appendix. I'd prefer to get that under 1000 words

[17:54] <Geth> ¦ 6.d-prep: - Impact score business is too confusing (easier when tool to

[17:54] <Geth> ¦ 6.d-prep:     calculate score from code prototype exists?)

[17:54] <Geth> ¦ 6.d-prep: - Might be overly-tied to one particular implementation. Need better

[17:54] <Geth> ¦ 6.d-prep:     rules for a world with 2+ implementations

[17:54] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/96bc98fd24

[18:12] <Geth> ¦ 6.d-prep: 8c9f9288cf | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/README.md

[18:12] <Geth> ¦ 6.d-prep: Update `nail down the META6.json spec` item

[18:12] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/8c9f9288cf

[18:25] *** robertle joined
[18:43] *** buggable left
[18:43] *** buggable joined
[18:43] *** ChanServ sets mode: +v buggable

[18:44] *** buggable left
[18:45] *** buggable joined
[18:45] *** ChanServ sets mode: +v buggable

[18:45] *** buggable left
[18:47] *** buggable joined
[18:47] *** ChanServ sets mode: +v buggable

[19:05] *** buggable left
[19:07] *** buggable joined
[19:07] *** ChanServ sets mode: +v buggable

[19:08] *** buggable left
[19:08] *** buggable joined
[19:08] *** ChanServ sets mode: +v buggable

[19:12] *** buggable left
[19:12] *** buggable joined
[19:12] *** ChanServ sets mode: +v buggable

[19:45] <AlexDaniel> * Add another 50pt if the class is `Cool` 

[19:45] <AlexDaniel> haha

[19:49] <AlexDaniel> that doc is pretty cool

[19:49] <AlexDaniel> can't tell if it's indeed helpful, but it's cool

[19:52] <AlexDaniel> .oO( 50pt because it's cool? )

[19:57] <AlexDaniel> okay, the appendix is really helpful I think

[20:38] <dogbert17> m: class XY { has $.x = 0; has $.y = 0; }; multi infix:<+> (XY \a, XY \o) { a.clone: |([«+»] (a, o)».Capture».hash) }

[20:38] <camelia> rakudo-moar 9f524d0ad: ( no output )

[20:42] <dogbert17> m: https://gist.githubusercontent.com/dogbert17/a30583ebbe2acb32e04c1de18dfb3561/raw/ba6bcfe4c8d9cf866b5ff35926eef2466741628e/gistfile1.txt

[20:42] <camelia> rakudo-moar 9f524d0ad: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3https:7⏏5//gist.githubusercontent.com/dogbert17/a␤    expecting any of:␤        colon pair␤»

[20:42] <dogbert17> evalable: https://gist.githubusercontent.com/dogbert17/a30583ebbe2acb32e04c1de18dfb3561/raw/ba6bcfe4c8d9cf866b5ff35926eef2466741628e/gistfile1.txt

[20:42] <evalable6> dogbert17, Successfully fetched the code from the provided URL

[20:42] <evalable6> dogbert17, rakudo-moar 9f524d0ad: OUTPUT: «(exit code 1) Cannot modify an immutable Map (Map.new(()))␤  in sub infix:<+> at /tmp/fos6…»

[20:42] <evalable6> dogbert17, Full output: https://gist.github.com/ccb2c1c4c7a5c01f983b21d720e329e7

[20:42] <dogbert17> lizmat: this might be something for you ^^

[20:43] <lizmat> possibly  :-)

[20:45] <dogbert17> it's one of Rindolf's scripts. It worked the other day but perhaps the code is cutting corners

[20:45] <Geth> ¦ rakudo: ac2fa03b20 | (Elizabeth Mattijsen)++ | src/core/Map.pm6

[20:45] <Geth> ¦ rakudo: Make Map.WHICH about 8x as fast

[20:45] <Geth> ¦ rakudo: 

[20:45] <Geth> ¦ rakudo: - based on a 500 element Map

[20:45] <Geth> ¦ rakudo: - sha1 the string, so the length is always the same

[20:45] <Geth> ¦ rakudo: - make it a proper ValueObjAt object

[20:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ac2fa03b20

[20:45] <lizmat> well, there used to be a bug that you could actually *change* immutable Maps, and I fixed that

[20:47] <dogbert17> aha, so corners were indeed cut then

[20:47] <lizmat> perhaps, but there's no occurrence of Map in that codse

[20:47] <lizmat> perhaps, but there's no occurrence of Map in that code

[20:47] <lizmat> and the error points to some meta-op action

[20:49] <lizmat> ok, so .Capture returns a Map, and apparently that Map is being changed / reinitialized somehow

[20:49] <lizmat> sorry, .Capture.hash returns a Map

[20:52] <dogbert17> should it be Hash instead?

[20:53] <lizmat> yeah

[20:53] <lizmat> .hash is only guaranteed to return something hashy, but that wouldn't need to be changeable

[20:53] <lizmat> .Hash *is* mutable

[20:54] <dogbert17> the script works with that change (in four places)

[20:55] <lizmat> grr... apparently .hash is documented as returning a Hash  :-(

[20:55] <lizmat> https://docs.perl6.org/routine/hash

[20:56] <dogbert17> that's definitely an error

[20:56] <lizmat> .ask masak do you think .hash should always return a .Hash , or can it also return an immutable Map ?

[20:56] <yoleaux> lizmat: I'll pass your message to masak.

[20:56] <lizmat> dogbert17: you mean in the documentation?

[20:57] <dogbert17> yeah

[20:58] <dogbert17> best to wait and listen to what masak says :)

[20:58] <lizmat> .ask jnthn do you think .hash should always return a .Hash , or can it also return an immutable Map ?

[20:58] <yoleaux> lizmat: I'll pass your message to jnthn.

[20:59] <lizmat> the idea of .hash was (afaik) that it returns something Associative, not necessarily a Hash

[20:59] <lizmat> dogbert17: I would make this a documentation issue

[20:59] <dogbert17> I have heard something similar

[21:00] <lizmat> it was changed last Feb, but the old version was equally wrong: "Coerce the invocant to L<Hash>."

[21:00] <dogbert17> perhaps timtoady is lurking around. He might have an opinion.

[21:01] <lizmat> m: dd set(<a b c>).hash  # can also coerce to an Object Hash

[21:01] <camelia> rakudo-moar ac2fa03b2: OUTPUT: «(my Any %{Any} = :a, :b, :c)␤»

[21:02] <lizmat> m: dd set(<a b c>).Hash

[21:02] <camelia> rakudo-moar ac2fa03b2: OUTPUT: «(my Bool %{Any} = :a, :b, :c)␤»

[21:02] <lizmat> hmmm... I guess .Hash does that also

[21:03] <Geth> ¦ 6.d-prep: 2b36d1240b | (Zoffix Znet)++ (committed using GitHub Web editor) | d-docs/New-Features-Policy.md

[21:03] <Geth> ¦ 6.d-prep: Clarify types in extra points are actual types, not subclasses

[21:03] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/2b36d1240b

[21:06] * dogbert17 eats some ice cream to counter the heat

[21:13] *** Zoffix joined
[21:14] <Zoffix> If .hash returned the same thing as .Hash, there'd be no point in having it. .hash returning an Associative is the analogous version of .list returning a Positional (with some warts R#1344)

[21:14] <synopsebot> R#1344 [open]: https://github.com/rakudo/rakudo/issues/1344 [@LARRY] What is a "list"?

[21:16] <Zoffix> How come set.hash returns an Any hash, but .Hash returns Bool one?

[21:17] <lizmat> Zoffix: good question... 

[21:18] *** dct_ joined
[21:20] * Zoffix thinks Any version is better, since the user can convert the values to something else

[21:20] <Zoffix> …but when I try looks like you can convert them anyway :|

[21:20] <Zoffix> m: my $h := <a a b c>.Set.Hash; $h.map: {.value = "{.key} is there"}; dd $h

[21:20] <camelia> rakudo-moar ac2fa03b2: OUTPUT: «(my Bool %{Any} = :a("a is there"), :b("b is there"), :c("c is there"))␤»

[21:21] <Zoffix> m: my $h := <a a b c>.Set.Hash; $h.map: {.value = "{.key} is there"}; dd "$h<a> is totally a Bool, 'cause it's a Bool hash, yo"

[21:21] <camelia> rakudo-moar ac2fa03b2: OUTPUT: «"a is there is totally a Bool, 'cause it's a Bool hash, yo"␤»

[21:21] <Zoffix> m: my $h := <a a b c>.Set.Hash; $h.map: {.value = "{.key} is there"}; dd "$h<a> is totally a Bool, 'cause it's a Bool hash, yo"; $h<z> = "meows"

[21:21] <camelia> rakudo-moar ac2fa03b2: OUTPUT: «"a is there is totally a Bool, 'cause it's a Bool hash, yo"␤Type check failed in binding to parameter 'assignval'; expected Bool but got Str ("meows")␤  in block <unit> at <tmp> line 1␤␤»

[21:21] <Zoffix> hehe

[21:25] <Zoffix> Filed as R#2068

[21:25] <synopsebot> R#2068 [open]: https://github.com/rakudo/rakudo/issues/2068 Set.Hash returns badly typed Hash

[21:26] *** dogbert11 joined
[21:28] *** dogbert17 left
[21:29] <Zoffix> m: dd [«+»] (1 =>2, 3=>4)».Capture».hash

[21:29] <camelia> rakudo-moar ac2fa03b2: OUTPUT: «Cannot modify an immutable Map (Map.new(()))␤  in block <unit> at <tmp> line 1␤␤»

[21:29] <Zoffix> m: Map.new «+» Map.new

[21:29] <camelia> rakudo-moar ac2fa03b2: OUTPUT: «Potential difficulties:␤    Useless use of «+» in sink context␤    at <tmp>:1␤    ------> 3Map.new 7⏏5«+» Map.new␤Cannot modify an immutable Map (Map.new(()))␤  in block <unit> at <tmp> line 1␤␤»

[21:29] <Zoffix> Not a rakudo bug IMO

[21:29] *** AlexDaniel left
[21:30] <lizmat> well, a rakudo bug got fixed and now it dies  :-)

[21:30] *** AlexDaniel joined
[21:30] <lizmat> m: my %m is Map = a => 42; %m = b => 666;  # this used to work

[21:30] <camelia> rakudo-moar ac2fa03b2: OUTPUT: «Cannot modify an immutable Map (Map.new((a => 42)))␤  in block <unit> at <tmp> line 1␤␤»

[21:30] <Zoffix> mhm

[21:32] <Zoffix> And the docs on https://docs.perl6.org/routine/hash are also accurate. For Capture.hash they say it returns an Associative

[21:33] <Zoffix> And I think these coercers are documented somewhere else too

[21:33] <Zoffix> s: 42, 'hash', \()

[21:33] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/ac2fa03b2/src/core/Any.pm6#L77

[21:34] * Zoffix would've used .list.map

[21:34] <Zoffix> This looks familiar actually.... 

[21:35] <Zoffix> wow, I'm the author of 203 out of 425 currently open rakudo Issues :|

[21:36] <lizmat> .oO( don't shoot the messenger )

[21:36] <Zoffix> I think it was just me mentioning it on IRC that Any.list returns the immutable List, while Any.hash returns a mutable Hash

[21:36] <Zoffix> Ah, added to the inconsistencies.txt file https://temp.perl6.party/inconsistencies.txt

[21:37] <lizmat> yeah, sometimes I think we need another NSGLR  (not so great List Refactor)

[21:37] <Zoffix> :)

[21:39] <lizmat> ok, I've swapped the Set.hash/Hash from Any/Bool to Bool/Mu , and other QuantHashes

[21:39] <lizmat> there's quite a bit of spectest fallout  :-(

[21:40] <Zoffix> wonder if those are proptests and not spectests

[21:40] <Zoffix> (proptests = proposed tests; that aren't part of 6.c and are proposed for 6.d release)

[21:41] <Zoffix> and so can be tweaked more liberally

[21:41] * Zoffix &

[21:41] *** Zoffix left
[21:41] <lizmat> ah, hmmm.... good point

[21:45] *** travis-ci joined
[21:45] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Make Map.WHICH about 8x as fast

[21:45] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/403725085 https://github.com/rakudo/rakudo/compare/9f524d0adb2a...ac2fa03b207c

[21:45] *** travis-ci left
[21:45] <buggable> [travis build above] ☠ All failures are due to: failed make test (1 failure). Across all jobs, only t/04-nativecall/22-method.t test file failed.

[21:53] <Geth> ¦ rakudo: 7629820461 | (Elizabeth Mattijsen)++ | 3 files

[21:53] <Geth> ¦ rakudo: QuantHash.Hash returns Any values, .hash returns QuantHash values

[21:53] <Geth> ¦ rakudo: 

[21:53] <Geth> ¦ rakudo: As part of R#2068

[21:53] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7629820461

[21:53] <synopsebot> R#2068 [open]: https://github.com/rakudo/rakudo/issues/2068 Set.Hash returns badly typed Hash

[22:00] <lizmat> enough for today&

[22:22] *** ufobat_ left
[22:33] *** robertle left
[22:49] *** dct_ left
[22:54] *** travis-ci joined
[22:54] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'QuantHash.Hash returns Any values, .hash returns QuantHash values

[22:54] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/403747928 https://github.com/rakudo/rakudo/compare/ac2fa03b207c...7629820461d9

[22:54] *** travis-ci left
[22:59] *** dct_ joined
[23:05] *** dct_ left
[23:28] *** j3nnn1 joined
[23:42] *** lizmat left
