[00:00] <Geth> ¦ rakudo: 18252b60d7 | (Daniel Green)++ | lib/Telemetry.pm6

[00:00] <Geth> ¦ rakudo: Simplify Telemetry's new

[00:00] <Geth> ¦ rakudo:

[00:00] <Geth> ¦ rakudo: Use nqp::splice instead of doing a push in a loop.

[00:00] <Geth> ¦ rakudo:

[00:00] <Geth> ¦ rakudo: Also use nqp::p6bindattrinvres instead of nqp::bindattr + return.

[00:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/18252b60d7

[00:00] <Geth> ¦ rakudo: b568510932 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | lib/Telemetry.pm6

[00:00] <Geth> ¦ rakudo: Merge pull request #1642 from MasterDuke17/simplify_Telemetrys_new

[00:00] <Geth> ¦ rakudo:

[00:00] <Geth> ¦ rakudo: Simplify Telemetry's new

[00:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b568510932

[00:01] <lizmat> MasterDuke: is that an answer?  :-)

[00:01] * lizmat gets some sleep

[00:08] <MasterDuke> heh, good enough for me

[00:08] <MasterDuke> lizmat++

[06:51] <lizmat> Files=1236, Tests=76239, 277 wallclock secs (13.22 usr  4.89 sys + 1889.03 cusr 190.95 csys = 2098.09 CPU)

[06:53] <lizmat> that's down from 316 on 20 March

[06:53] <lizmat> 12% faster  :-)

[06:56] * lizmat thinks that should be visible in test-t also  :-)

[06:59] <lizmat> breakfast&

[08:45] <Geth> ¦ rakudo: 723cbda796 | (Elizabeth Mattijsen)++ | src/core/List.pm6

[08:45] <Geth> ¦ rakudo: Don't use private methods for utility methods

[08:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/723cbda796

[09:01] <Geth> ¦ rakudo: de1c6dc9e0 | (Elizabeth Mattijsen)++ | src/core/Array.pm6

[09:01] <Geth> ¦ rakudo: Change some Array private utility method to normal methods

[09:01] <Geth> ¦ rakudo:

[09:01] <Geth> ¦ rakudo: Avoid relatively costly dispatch:<!> runtime lookup.  Also change names of

[09:01] <Geth> ¦ rakudo: methods to use uppercase only / underscore to "show" privateness.

[09:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/de1c6dc9e0

[09:58] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Change some Array private utility method to normal methods

[09:58] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/357722371 https://github.com/rakudo/rakudo/compare/723cbda796e5...de1c6dc9e0dd

[09:58] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[11:37] <lizmat> Files=1236, Tests=76226, 316 wallclock secs (15.05 usr  5.45 sys + 2180.38 cusr 212.10 csys = 2412.98 CPU)

[11:37] <lizmat> hmmm... weird, back to 316 now

[11:37] <lizmat> wonder what made it go down to 277 last night

[11:48] <lizmat> afk again&

[13:34] <FROGGS> it is known that require ::($module) explodes in async code?

[13:34] <FROGGS> is it*

[13:44] * nine is not surprised at least

[13:55] <Geth> ¦ nqp: aa605d0ef6 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[13:55] <Geth> ¦ nqp: [MoarVM Bump] Brings 11 commits

[13:55] <Geth> ¦ nqp:

[13:55] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03...2018.03-11-g67056c204

[13:55] <Geth> ¦ nqp: 67056c204 Fix optimization of zombie conditional causing segfault

[13:55] <Geth> ¦ nqp: a3bd17b4f Fix windows1252/1 decodestream replacement with last pos repl.

[13:55] <Geth> ¦ nqp: dd2072da1 Fix missing `:` in ChangeLog, causing website not to generate right

[13:55] <Geth> ¦ nqp: 41711ff26 Make sure shiftjis_codeindex.h is added to Makefile.in

[13:55] <Geth> ¦ nqp: <…commit message has 7 more lines…>

[13:55] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/aa605d0ef6

[13:55] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03...2018.03-11-g67056c204

[13:55] <Geth> ¦ rakudo: 3b86ffd563 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[13:55] <Geth> ¦ rakudo: [NQP Bump] Brings 15 commits

[13:55] <Geth> ¦ rakudo:

[13:55] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.03...2018.03-15-gaa605d0ef

[13:55] <Geth> ¦ rakudo: aa605d0ef [MoarVM Bump] Brings 11 commits

[13:55] <Geth> ¦ rakudo: 02a2378f3 [js] Wrap native strings in NQPStr

[13:55] <Geth> ¦ rakudo: bb14087e0 [js] Fix nqp::encoderep with utf8

[13:55] <Geth> ¦ rakudo: 5bcb548b3 Extra decoding tests

[13:55] <Geth> ¦ rakudo: <…commit message has 11 more lines…>

[13:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3b86ffd563

[13:55] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03...2018.03-15-gaa605d0ef

[14:04] * AlexDaniel wonders why Nick used RT to submit these bugs

[14:10] <travis-ci> NQP build failed. Aleks-Daniel Jakimenko-Aleksejev '[MoarVM Bump] Brings 11 commits

[14:10] <travis-ci> https://travis-ci.org/perl6/nqp/builds/357782068 https://github.com/perl6/nqp/compare/02a2378f3185...aa605d0ef6da

[14:12] <dogbert11> AlexDaniel: I have problems with your latest bump

[14:13] <AlexDaniel> dogbert11: maybe that's why nobody bumped before me! :)

[14:13] <AlexDaniel> fwiw I just woke up and didn't even run the spectest, but really wanted to play with the segfault fix

[14:14] <AlexDaniel> dogbert11: what's the problem exactly?

[14:14] <dogbert11> give it a go, perhaps I'm the only one experiencing problems

[14:15] <dogbert11> rakudobrew is struggling

[14:15] <dogbert11> ===SORRY!===

[14:15] <dogbert11> Missing or wrong version of dependency 'gen/moar/BOOTSTRAP.nqp' (from '/home/dogbert/.rakudobrew/moar-master/lib/CompUnit/Repository/Staging.pm6 (CompUnit::Repository::Staging)')

[14:16] <dogbert11> had to do a make realclean in order make my non rakudobrew install to build

[14:16] <AlexDaniel> yeah, travis is unhappy too

[14:17] * dogbert11 tries make realclean on rakudobrew as well ...

[14:19] <AlexDaniel> hah, it's green on osx

[14:20] <dogbert11> aaand rakudobrew is happy again

[14:21] <AlexDaniel> wait what

[14:21] <AlexDaniel> Oracle JDK 8 is NOT installed.

[14:21] <AlexDaniel> am I reading this right?

[14:21] <AlexDaniel> https://travis-ci.org/rakudo/rakudo/jobs/357782093

[14:21] <dogbert11> a lot of test failures as well

[14:22] <AlexDaniel> so a moar build attempts to download openjdk? why?

[14:22] <AlexDaniel> or, well, whateverjdk

[14:23] <AlexDaniel> MoarVM oops: Trying to compile if_o/unless_o, should never happen

[14:23] <Geth> ¦ rakudo: 6be586c580 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[14:23] <Geth> ¦ rakudo: Revert "[NQP Bump] Brings 15 commits"

[14:23] <Geth> ¦ rakudo:

[14:23] <Geth> ¦ rakudo: This reverts commit 3b86ffd563c77da210c98b02e9aaf1539ecfdcd5.

[14:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6be586c580

[14:23] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-15-gaa605d0ef...2018.03

[14:24] <Geth> ¦ nqp: 2aea8c9030 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[14:24] <Geth> ¦ nqp: Revert "[MoarVM Bump] Brings 11 commits"

[14:24] <Geth> ¦ nqp:

[14:24] <Geth> ¦ nqp: This reverts commit aa605d0ef6da958fd87f1c7342e361cf21c12d01.

[14:24] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/2aea8c9030

[14:24] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03-11-g67056c204...2018.03

[14:25] <dogbert11> heh, that bump didn't survive very long :)

[14:30] * dogbert11 hmm the revert didn't work that well either

[14:36] <AlexDaniel> what?

[14:37] <AlexDaniel> dogbert11: can't be?

[14:38] <AlexDaniel> travis is failing because of dependency on oracle.com, it's alright

[14:38] <dogbert11> I reinstalled my rakudo and now all seems to be well

[14:38] <AlexDaniel> good.

[14:40] <dogbert11> so what's wrong with the reverted code I wonder

[14:41] <AlexDaniel> dogbert11: looks like the segv fix is at fault

[14:41] <AlexDaniel> at the very least it broke the build on windows

[15:07] <nine> AlexDaniel: pushed a fix for "'optimize_iffy' : not all control paths return a value"

[15:09] <travis-ci> Rakudo build errored. Aleks-Daniel Jakimenko-Aleksejev 'Revert "[NQP Bump] Brings 15 commits"

[15:09] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/357788456 https://github.com/rakudo/rakudo/compare/3b86ffd563c7...6be586c580a6

[15:09] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[15:10] <nine> But that was just a warning. I've got no idea about the "MoarVM oops: Trying to compile if_o/unless_o, should never happen". I don't see how my patch should cause that. The code was clearly wrong before (operating on a deleted instruction) and is clearly more right now and the failure appears in some travis builds with no apparent system

[15:11] <timotimo> if we had an MVM_SPESH_LOG of the crashing invocation, we'd probably be able to tell what's going on

[15:11] <travis-ci> Rakudo build errored. Aleks-Daniel Jakimenko-Aleksejev 'Revert "[NQP Bump] Brings 15 commits"

[15:11] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/357788456 https://github.com/rakudo/rakudo/compare/3b86ffd563c7...6be586c580a6

[15:11] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[15:14] <AlexDaniel> nine: cool! feel free to bump if everything looks alright

[15:14] <nine> Why don't we always run travis builds with MVM_SPESH_LOG?

[15:15] <timotimo> spesh logs are huge :)

[15:15] <nine> Is that an issue?

[15:15] <timotimo> let me check exactly how big they are

[15:16] <timotimo> though of course if we set the same filename for all, rather than put a %d in there for a pid ...

[15:16] <timotimo> we'd only get the last file output, which would usually be the one for any crash

[15:17] <timotimo> 888 MB for an nqp build, not counting "make test"

[15:18] <timotimo> 1.6 gigs when adding "make test"

[15:18] <nine> That's with an individual log file for each process?

[15:18] <timotimo> yes

[15:19] <nine> What's the largest one's size?

[15:19] <timotimo> 84 megs

[15:19] <nine> Now that sounds less intrusive :)

[15:19] <timotimo> smallest is empty, second-smallest is 262K

[15:19] <timotimo> let me bzip2 it

[15:23] <timotimo> lol.

[15:23] <timotimo> bzip2'd the whole shebang and it's also 84 megs big

[15:25] <timotimo> we could probably build a nice dictionary of spesh log pieces and zstd-compress the stuff

[15:33] <AlexDaniel> timotimo: can you try lrzip-ing it?

[15:33] <timotimo> what's that?

[15:33] * timotimo installs

[15:33] <AlexDaniel> long range zip

[15:34] <timotimo> hm, "command not found"; what provides it?

[15:34] <AlexDaniel> are you on something debian-based? lrzip is the package name

[15:34] <timotimo> fedora

[15:35] <timotimo> with zstd it's only 44 megs instead of 84, but that's with -19 and takes 6 minutes :D

[15:35] <AlexDaniel> what version of zstd?

[15:35] <AlexDaniel> it had long range mode also

[15:35] <timotimo> *** zstd command line interface 64-bits v1.3.3, by Yann Collet ***

[15:36] <timotimo> you know, you can just get the files locally, too

[15:36] <timotimo> set MVM_SPESH_LOG=nqpbuild.%d.txt and make && make test in nqp's folder

[15:36] <AlexDaniel> :)

[15:37] <timotimo> since you got a bunch of experience with compression stuff

[15:38] <AlexDaniel> well, this is what whateverables use to put a bunch of rakudo builds into the same archive (otherwise you can compress them individually with exactly the same ratio)

[15:39] <timotimo> i see

[15:39] <AlexDaniel> dunno if spesh logs will benefit from that

[15:39] * AlexDaniel tries

[15:39] <timotimo> any experience with pre-built dictionaries?

[15:40] <AlexDaniel> yes, no luck with rakudo builds

[15:41] <AlexDaniel> and it's only supposed to improve things with small files

[15:41] <timotimo> ah, that does make sense

[15:41] <timotimo> since the compressor needs a bit of data to "learn" at the beginning

[15:44] <AlexDaniel> timotimo: wait uh, so what's the ratio in your case?

[15:45] <AlexDaniel> I just compressed two spesh logs to 3% of their size

[15:45] <timotimo> 1.6 gigs to 44 megs

[15:45] <timotimo> using 6 minutes of compression work

[15:45] <AlexDaniel> (≈80M original, <2M result)

[15:45] <AlexDaniel> ah ok

[15:45] <AlexDaniel> I mean… can you really want it to be better than that? :D

[15:45] <timotimo> maybe!

[15:46] <timotimo> the information density is really low in spesh logs

[15:52] * nine is out for the evening

[15:54] <AlexDaniel> timotimo: ok it doesn't sound right, it should be smaller

[15:55] <AlexDaniel> one second I'll figure out what you're doing wrong…

[15:55] <timotimo> i could unlock the higher compression levels :D

[15:55] <timotimo> 60 megs of ram usage is nothing

[15:55] <AlexDaniel> no-no

[15:56] <AlexDaniel> higher compression levels generally just make it slower

[15:56] <AlexDaniel> you need long range mode if you're thinking in terms of ram

[15:56] <AlexDaniel> timotimo: try zstd -15 --long=31

[15:56] <AlexDaniel> that should work about 60% better than without --long

[15:57] <timotimo> wow

[15:57] <AlexDaniel> 1.78% of the original size

[15:58] <AlexDaniel> timotimo: but it's only useful if you're applying that to whole 1.6 gigs :)

[15:59] <AlexDaniel> you can try -19 too, it's not any slower I think

[15:59] <AlexDaniel> and it will save 10% on top of that

[15:59] * AlexDaniel ♥ zstd

[16:00] <timotimo> nice, only 1:30m

[16:00] <timotimo> 27 megs, cool.

[16:01] <timotimo> in theory we could re-order the files to have plans in one file and before/after spesh dumps in another, with little markers for reconstruction, but maybe --long does that almost as good as we could, but automatically

[16:01] <AlexDaniel> if you want it to be smaller we'll probably need another breakthrough in compression methods :D

[16:02] <timotimo> to be honest, now that we have messagepack built into moarvm itself, i'd like to have a mode for spesh logs that uses msgpack

[16:02] <timotimo> that's for later, though

[16:02] <timotimo> it will however let me put in more information that'll let me figure out 1:1 which instructions were where before

[16:02] <timotimo> like, this instruction has been added, these instructions have been kicked out, this instruction has been turned from one opcode into another

[16:04] <timotimo> currently the spesh log outputs the BB with their memory addresses so even though we renumber the bbs at every step, you can tell which one was which

[16:06] <timotimo> messagepack will make it compress much less, but it'll be smaller to begin with

[16:06] <timotimo> it'll also need a custom viewer, though

[16:06] <timotimo> that'll be a bit of development time all in all, so i'll probably do it either when my grant is done or near the end

[16:06] <timotimo> unless i find it'd help me with the grant, of course

[16:20] <timotimo> so in the travis.yml we would probably want to only create the compressed stuff if anything actually fails

[16:20] <timotimo> if we do that, we'll also want to know the PID of everything we run

[16:21] <timotimo> because that way we can see which spesh file corresponds to what command

[17:26] <stmuk> .

[17:53] <Geth> ¦ rakudo/js: 6 commits pushed by pmurias++

[17:53] <Geth> ¦ rakudo/js: 4b6b68d9d6 | Delete leftover files from before merge

[17:53] <Geth> ¦ rakudo/js: 0d77f32238 | [js] Enable use of nqp::encoderepconf op

[17:53] <Geth> ¦ rakudo/js: 4817b93d32 | [js] Add a description to the $?VM

[17:53] <Geth> ¦ rakudo/js: 7e21a777f6 | [js] Add a hack to make substr use NFG semantics

[17:53] <Geth> ¦ rakudo/js: 93dbf87d03 | Don't but a int type on a variable we put nqp::inf into

[17:53] <Geth> ¦ rakudo/js: 692d0e3982 | Make &val parse scientific notation correctly

[17:53] <Geth> ¦ rakudo/js: review: https://github.com/rakudo/rakudo/compare/a7a8850694a8...692d0e398213

[18:02] <[Tux]> Rakudo version 2018.03-64-g6be586c58 - MoarVM version 2018.03-3-g2bd691551

[18:02] <[Tux]> csv-test-xs-20      0.448 -  0.454

[18:02] <[Tux]> csv-ip5xs           0.825 -  0.848

[18:02] <[Tux]> test-t --race       1.012 -  1.157

[18:02] <[Tux]> test-t              2.427 -  2.556

[18:02] <[Tux]> csv-ip5xs-20        7.846 -  8.003

[18:02] <[Tux]> test                9.080 -  9.481

[18:02] <[Tux]> test-t-20 --race   16.217 - 19.936

[18:02] <[Tux]> csv-parser         37.953 - 38.629

[18:02] <[Tux]> test-t-20          44.845 - 46.206

[18:03] <[Tux]> :)

[18:03] <[Tux]> 2018-01-30 08:39:24 test-t 2.509

[18:03] <[Tux]> 2018-01-29 17:52:01 test-t 2.502

[18:03] <[Tux]> 2018-01-29 09:46:21 test-t 2.497

[18:03] <[Tux]> 2018-02-17 11:21:49 test-t 2.491

[18:03] <[Tux]> 2018-03-24 16:49:18 test-t 2.427

[18:04] <timotimo> very nice

[18:07] <japhb> I am curious what's up with test-t-20 --race.  Those times have really high variance.

[18:21] <MasterDuke> what's the bot command to create the graphs?

[18:21] <MasterDuke> huggable: test-t

[18:21] <huggable> MasterDuke, nothing found

[18:21] <MasterDuke> buggable: test-t

[18:22] <AlexDaniel> https://tux.nl/Talks/CSV6/speed4.html ?

[18:22] <AlexDaniel> buggable: speed

[18:23] <buggable> AlexDaniel, ▄▄▅▆▃▃▇▄▃▄▄▄▅▂▆▂▃▁▄▆↑▂▃▂▂▂▃▃▄▆▅▂▂▁▇█▂▃▁▂▄▂▂▂▃▄▃▂▃↑ dates: 2018-02-26–2018-03-24; range: 15.487s–20.488s; speed: 4% faster (widths: 9/3)

[18:23] <AlexDaniel> o I guessed it

[18:23] <MasterDuke> buggable: speed test-t-20 --race

[18:23] <MasterDuke> buggable: speed test-t-20

[18:23] <buggable> MasterDuke, ▃▆▇▆▄▃▇▇▃▄▄▃▄▄▇▄▂▃▅▇↑↑▃▃▂▄▄▄▅▃▅▆▂▂▇▇▂▃▂▃▃▄▃▂▆▂▄▄▁▃ dates: 2018-02-26–2018-03-24; range: 44.845s–49.791s; speed: 4% faster (widths: 9/3)

[18:47] <Geth> ¦ nqp: d6e7d9364c | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[18:47] <Geth> ¦ nqp: [MoarVM Bump] Brings 12 commits

[18:47] <Geth> ¦ nqp:

[18:47] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03...2018.03-12-gb5b6968

[18:47] <Geth> ¦ nqp: b5b6968 Fix "'optimize_iffy' : not all control paths return a value"

[18:47] <Geth> ¦ nqp: 67056c2 Fix optimization of zombie conditional causing segfault

[18:47] <Geth> ¦ nqp: a3bd17b Fix windows1252/1 decodestream replacement with last pos repl.

[18:47] <Geth> ¦ nqp: dd2072d Fix missing `:` in ChangeLog, causing website not to generate right

[18:47] <Geth> ¦ nqp: <…commit message has 8 more lines…>

[18:47] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/d6e7d9364c

[18:47] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.03...2018.03-12-gb5b6968

[18:47] <Geth> ¦ rakudo: 2c882d9601 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[18:47] <Geth> ¦ rakudo: [NQP Bump] Brings 17 commits

[18:47] <Geth> ¦ rakudo:

[18:47] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.03...2018.03-17-gd6e7d93

[18:47] <Geth> ¦ rakudo: d6e7d93 [MoarVM Bump] Brings 12 commits

[18:47] <Geth> ¦ rakudo: 2aea8c9 Revert "[MoarVM Bump] Brings 11 commits"

[18:47] <Geth> ¦ rakudo: aa605d0 [MoarVM Bump] Brings 11 commits

[18:47] <Geth> ¦ rakudo: 02a2378 [js] Wrap native strings in NQPStr

[18:47] <Geth> ¦ rakudo: <…commit message has 27 more lines…>

[18:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2c882d9601

[18:47] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03...2018.03-17-gd6e7d93

[18:47] <Geth> ¦ rakudo/js: 77c462b571 | pmurias++ | src/core/Iterable.pm6

[18:48] <Geth> ¦ rakudo/js: [js] Make .hyper and .race just return the unmodified iterator

[18:48] <Geth> ¦ rakudo/js:

[18:48] <Geth> ¦ rakudo/js: Most JS VMs lack the threading support needed for that

[18:48] <Geth> ¦ rakudo/js: review: https://github.com/rakudo/rakudo/commit/77c462b571

[18:55] <dogbert11> hmm, a new bump

[18:55] * dogbert11 wonders if that'll work better

[18:55] <Geth> ¦ roast: 39d4ac68ef | (Zoffix Znet)++ | S03-metaops/hyper.t

[18:55] <Geth> ¦ roast: Fix incorrect nodality tests for reduce/produce

[18:55] <Geth> ¦ roast:

[18:55] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1633

[18:55] <Geth> ¦ roast:

[18:55] <Geth> ¦ roast: The tests' description say they're testing that reduce/produce

[18:55] <Geth> ¦ roast: are nodal, and it makes sense for them to be nodal, however, the

[18:55] <Geth> ¦ roast: $expected specified in the tests indicates the non-nodal behaviour.

[18:55] <Geth> ¦ roast:

[18:55] <Geth> ¦ roast: Likely, the $expected was simply copy-pasted from the output of

[18:55] <Geth> ¦ roast: running the $got code and plugged into the test, without noticing

[18:56] <Geth> ¦ roast: that the result is incorrect.

[18:56] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/39d4ac68ef

[18:56] <Geth> ¦ roast/6.c-errata: b8dca86f45 | (Zoffix Znet)++ | S03-metaops/hyper.t

[18:56] <Geth> ¦ roast/6.c-errata: Fix incorrect nodality tests for reduce/produce

[18:56] <Geth> ¦ roast/6.c-errata:

[18:56] <Geth> ¦ roast/6.c-errata: Closes https://github.com/rakudo/rakudo/issues/1633

[18:56] <Geth> ¦ roast/6.c-errata:

[18:56] <Geth> ¦ roast/6.c-errata: The tests' description say they're testing that reduce/produce

[18:56] <Geth> ¦ roast/6.c-errata: are nodal, and it makes sense for them to be nodal, however, the

[18:56] <Geth> ¦ roast/6.c-errata: $expected specified in the tests indicates the non-nodal behaviour.

[18:56] <Geth> ¦ roast/6.c-errata:

[18:56] <Geth> ¦ roast/6.c-errata: Likely, the $expected was simply copy-pasted from the output of

[18:56] <Geth> ¦ roast/6.c-errata: running the $got code and plugged into the test, without noticing

[18:56] <Geth> ¦ roast/6.c-errata: that the result is incorrect.

[18:56] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/b8dca86f45

[18:56] <travis-ci> Rakudo build passed. Aleks-Daniel Jakimenko-Aleksejev 'Revert "[NQP Bump] Brings 15 commits"

[18:56] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/357788456 https://github.com/rakudo/rakudo/compare/3b86ffd563c7...6be586c580a6

[19:24] <AlexDaniel> Zoffix++ this is freaking awesome

[21:16] <japhb> AlexDaniel: What is freaking awesome?

[21:17] <AlexDaniel> japhb: https://github.com/MoarVM/MoarVM/commit/067c0594103a025472c39ae7f8670e47211b874b

[21:24] <japhb> Ah, nice
