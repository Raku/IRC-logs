[00:01] *** cog left
[00:04] *** j3nnn1 left
[00:41] *** Kaiepi left
[02:53] *** Kaiepi joined
[02:54] *** p6bannerbot sets mode: +v Kaiepi

[03:15] *** ufobat___ joined
[03:16] *** p6bannerbot sets mode: +v ufobat___

[03:19] *** ufobat_ left
[03:34] *** delon left
[05:16] *** delon joined
[05:17] *** p6bannerbot sets mode: +v delon

[06:08] *** Kaiepi left
[06:20] *** lizmat left
[06:24] *** Kaiepi joined
[06:24] *** p6bannerbot sets mode: +v Kaiepi

[07:36] *** robertle joined
[07:37] *** p6bannerbot sets mode: +v robertle

[07:41] *** dct joined
[07:41] *** p6bannerbot sets mode: +v dct

[07:47] *** dct left
[10:45] *** Kaypie joined
[10:45] *** Kaiepi left
[10:46] *** p6bannerbot sets mode: +v Kaypie

[11:00] *** lizmat joined
[11:00] *** p6bannerbot sets mode: +v lizmat

[11:06] <lizmat> Files=1255, Tests=76374, 345 wallclock secs (15.88 usr  5.39 sys + 2443.61 cusr 228.74 csys = 2693.62 CPU)

[11:07] *** ExtraCrispy left
[11:08] *** ExtraCrispy joined
[11:08] *** p6bannerbot sets mode: +v ExtraCrispy

[12:27] *** nebuchadnezzar left
[12:27] *** nebuchadnezzar joined
[12:28] *** p6bannerbot sets mode: +v nebuchadnezzar

[12:36] *** shareable6 left
[12:36] *** shareable6 joined
[12:36] *** ChanServ sets mode: +v shareable6

[12:37] *** p6bannerbot sets mode: +v shareable6

[12:47] *** lucasb joined
[12:48] *** p6bannerbot sets mode: +v lucasb

[12:56] *** dogbert17 joined
[12:56] *** p6bannerbot sets mode: +v dogbert17

[13:14] *** Zoffix joined
[13:14] *** p6bannerbot sets mode: +v Zoffix

[13:14] <Zoffix> .tell AlexDaniel I think 6lang.party domain has expired and it should be removed from your list. I believe SSL on the rest of my domains has now been fixed.

[13:14] <yoleaux> Zoffix: I'll pass your message to AlexDaniel.

[13:14] *** ZofBot joined
[13:14] *** ChanServ sets mode: +v ZofBot

[13:14] *** p6bannerbot sets mode: +v ZofBot

[13:15] <dogbert17> yay Zoffix

[13:18] *** dalek left
[13:18] *** dalek joined
[13:18] *** ChanServ sets mode: +v dalek

[13:19] *** p6bannerbot sets mode: +v dalek

[13:19] <Zoffix> AlexDaniel: and missing bots are now online.

[13:19] *** Zoffix left
[13:22] <AlexDaniel> Zoffix: thanks! Yeah, already removed it from the list. Yeah, hack was hanging again and timo helped.

[13:22] <yoleaux> 13:14Z <Zoffix> AlexDaniel: I think 6lang.party domain has expired and it should be removed from your list. I believe SSL on the rest of my domains has now been fixed.

[13:22] <AlexDaniel> Zoffix: sorry for interrupting you from your well deserved break!

[13:23] <|Tux|> Rakudo version 2018.10-125-gfa5215b61 - MoarVM version 2018.10-77-g6236eb5de

[13:23] <|Tux|> csv-test-xs-20      0.424 -  0.430

[13:23] <|Tux|> test-t --race       0.848 -  0.900

[13:23] <|Tux|> csv-ip5xs           0.890 -  0.932

[13:23] <|Tux|> test-t              1.781 -  1.787

[13:23] <|Tux|> csv-ip5xs-20        6.904 -  6.932

[13:23] <|Tux|> test                7.889 -  9.206

[13:23] <|Tux|> test-t-20 --race   10.070 - 10.224

[13:23] <|Tux|> csv-parser         21.315 - 21.711

[13:23] <|Tux|> test-t-20          29.978 - 31.896

[14:09] <masak> [Tux]++ # been a while since I caught one of those

[14:16] <masak> (which, I'm sure, is mostly a statement about my attention)

[14:29] <lizmat> m: Mu<>  *snif*

[14:29] <camelia> rakudo-moar fa5215b61: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing required term after infix‚ê§at <tmp>:1‚ê§------> 3Mu<>  *snif*7‚èè5<EOL>‚ê§    expecting any of:‚ê§        prefix‚ê§        term‚ê§¬ª

[14:29] <lizmat> m: Mu<>  # *snif*

[14:29] <camelia> rakudo-moar fa5215b61: OUTPUT: ¬´Type check failed in binding to parameter '<anon>'; expected Any but got Mu (Mu)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:29] <lizmat> so I wonder if using <> to decont is a side effect of the hash-slice mechanics ?

[14:30] <lizmat> because that fail is because of a bind failure on the postcircumfix proto

[14:30] <Geth_> ¬¶ rakudo: AlexDaniel self-unassigned Revisit bug compatibility unfix for returning Proxy https://github.com/rakudo/rakudo/issues/2113

[14:32] <timotimo> in implementation, maybe, but .<> is definitely meant to only decont

[14:49] *** MasterDuke left
[15:29] <dogbert17> .seen AlexDaniel

[15:29] <yoleaux> I saw AlexDaniel 14:40Z in #perl6: <AlexDaniel> yes :D

[15:30] <AlexDaniel> .

[15:30] * AlexDaniel waves

[15:31] <AlexDaniel> :)

[15:31] <AlexDaniel> dogbert17: what did you find again?

[15:31] <dogbert17> what makes you suspect I found something :-)

[15:32] <AlexDaniel> I've seen ‚Äú<dogbert17> .seen AlexDaniel‚Äù before

[15:32] <dogbert17> well, it was actually MasterDuke but I have a smaller version that can possibly be bisected by an expert

[15:32] <AlexDaniel> hey bisectable6, you're an expert, bisect it please!

[15:32] <dogbert17> this one:  MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 ./perl6 -e 'use Test; lives-ok { $*USER.gist; $*USER.WHAT.gist; }, ".WHAT on $*USER after using $*USER values lives";'

[15:32] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 6c use Test; lives-ok { $*USER.gist; $*USER.WHAT.gist; }, ".WHAT on $*USER after using $*USER values lives";

[15:33] <dogbert17> same error message as https://github.com/MoarVM/MoarVM/issues/992

[15:33] <dogbert17> I suspect it's less than a month old

[15:33] <committable6> AlexDaniel, https://gist.github.com/71b25915be1ae02bf9c219afd0733b1a

[15:33] <AlexDaniel> uh hold on‚Ä¶

[15:33] <AlexDaniel> m: say 42

[15:33] <camelia> rakudo-moar fa5215b61: OUTPUT: ¬´42‚ê§¬ª

[15:34] <AlexDaniel> e: say 42

[15:34] <evalable6> AlexDaniel, rakudo-moar fa5215b61: OUTPUT: ¬´Cannot test fa5215b61b8e0e35a2a64d6231b3af118dc52903 (Commit exists, but a perl6 executable could not be built for it)¬ª

[15:34] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 2018.10,HEAD^ use Test; lives-ok { $*USER.gist; $*USER.WHAT.gist; }, ".WHAT on $*USER after using $*USER values lives";

[15:34] <committable6> AlexDaniel, ¬¶2018.10,HEAD^: ¬´ok 1 - .WHAT on bisectable after using bisectable values lives‚ê§¬ª

[15:35] <AlexDaniel> dogbert17: hmmm what error message ar we talking about?

[15:35] <Geth_> ¬¶ rakudo/more-local-lowering: 10 commits pushed by (Jonathan Worthington)++

[15:35] <Geth_> ¬¶ rakudo/more-local-lowering: review: https://github.com/rakudo/rakudo/compare/0749626d9f21...12d2ee72330b

[15:35] <AlexDaniel> how reliable is it?

[15:35] <dogbert17> AlexDaniel: do you see the error on your own system?

[15:35] <dogbert17> very

[15:35] <AlexDaniel> hm ok yes I see something

[15:36] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 2018.10,cbbe16edd,HEAD^ use Test; lives-ok { $*USER.gist; $*USER.WHAT.gist; }, ".WHAT on $*USER after using $*USER values lives";

[15:36] <dogbert17> hooray :-)

[15:36] <committable6> AlexDaniel, ¬¶2018.10,HEAD^: ¬´ok 1 - .WHAT on bisectable after using bisectable values lives‚ê§¬ª ¬¶cbbe16e: ¬´Cannot test this commit (Commit exists, but a perl6 executable could not be built for it)¬ª

[15:37] <AlexDaniel> c: HEAD say 42

[15:37] <committable6> AlexDaniel, ¬¶HEAD(fa5215b): ¬´No build for this commit¬ª

[15:37] <AlexDaniel> c: HEAD^ say 42

[15:37] <committable6> AlexDaniel, ¬¶HEAD^: ¬´42‚ê§¬ª

[15:37] <AlexDaniel> c: HEAD^^ say 42

[15:37] <committable6> AlexDaniel, ¬¶HEAD^^: ¬´Cannot test this commit (Commit exists, but a perl6 executable could not be built for it)¬ª

[15:37] <AlexDaniel> shareable6: HEAD^^

[15:37] <shareable6> AlexDaniel, https://whateverable.6lang.org/HEAD^^

[15:37] <dogbert17> are the bots making a fiss?

[15:37] <dogbert17> *fuss

[15:38] <AlexDaniel> Stage mast       : make: *** [CORE.setting.moarvm] Killed

[15:38] <dogbert17> cool

[15:38] <AlexDaniel> I think the server has no free memory‚Ä¶

[15:38] <AlexDaniel> greppable6: uptime

[15:38] <greppable6> AlexDaniel, 2 weeks, 6 days, 18 hours, 41 minutes, and 14 seconds, 730.023438MiB maxrss. This is Rakudo version 2018.06-454-gfd6f512be built on MoarVM version 2018.06-428-g727767006 implementing Perl 6.c.

[15:38] *** greppable6 left
[15:39] <dogbert17> has one of the bots stolen it all

[15:39] *** greppable6 joined
[15:39] <AlexDaniel> greppable6: uptime

[15:39] <AlexDaniel> argh

[15:39] *** greppable6 left
[15:39] *** greppable6 joined
[15:39] *** ChanServ sets mode: +v greppable6

[15:39] <AlexDaniel> dogbert17: I think all of them are leaking a little bit

[15:39] <AlexDaniel> greppable6: uptime

[15:39] <greppable6> AlexDaniel, 23 seconds, 181.648438MiB maxrss. This is Rakudo version 2018.06-454-gfd6f512be built on MoarVM version 2018.06-428-g727767006 implementing Perl 6.c.

[15:39] <AlexDaniel> see?

[15:39] *** p6bannerbot sets mode: +v greppable6

[15:40] *** undersightable6 left
[15:40] *** releasable6 left
[15:40] *** bisectable6 left
[15:40] *** squashable6 left
[15:40] *** notable6 left
[15:40] *** statisfiable6 left
[15:40] *** bloatable6 left
[15:40] *** p6bannerbot sets mode: +v greppable6

[15:40] *** unicodable6 left
[15:40] *** undersightable6 joined
[15:40] *** releasable6 joined
[15:40] *** benchable6 left
[15:40] *** coverable6 left
[15:40] *** bisectable6 joined
[15:40] *** ChanServ sets mode: +v bisectable6

[15:40] *** quotable6 left
[15:40] *** notable6 joined
[15:40] *** squashable6 joined
[15:40] *** ChanServ sets mode: +v notable6

[15:40] *** ChanServ sets mode: +v squashable6

[15:40] *** committable6 left
[15:40] *** shareable6 left
[15:40] *** notable6 left
[15:40] *** squashable6 left
[15:40] *** bisectable6 left
[15:40] *** greppable6 left
[15:40] *** evalable6 left
[15:40] *** nativecallable6 left
[15:40] *** committable6 joined
[15:40] *** shareable6 joined
[15:40] <AlexDaniel> I guess I need to restart them a bit more of‚Ä¶

[15:41] *** p6bannerbot sets mode: +v undersightable6

[15:41] *** p6bannerbot sets mode: +v releasable6

[15:41] <dogbert17> I thought most of the memory problems had been dealt with

[15:41] *** p6bannerbot sets mode: +v committable6

[15:41] *** p6bannerbot sets mode: +v shareable6

[15:42] <AlexDaniel> yeah but we haven't seen 2+ weeks of uptime back then

[15:42] <AlexDaniel> it was reproducible in like days, not weeks

[15:42] <dogbert17> so the remaining ones will be trickier to find

[15:43] *** evalable6 joined
[15:43] *** nativecallable6 joined
[15:43] *** ChanServ sets mode: +v evalable6

[15:43] *** ChanServ sets mode: +v nativecallable6

[15:43] *** greppable6 joined
[15:43] *** notable6 joined
[15:43] *** quotable6 joined
[15:43] *** ChanServ sets mode: +v greppable6

[15:43] *** ChanServ sets mode: +v notable6

[15:43] *** ChanServ sets mode: +v quotable6

[15:44] *** p6bannerbot sets mode: +v evalable6

[15:44] *** p6bannerbot sets mode: +v nativecallable6

[15:44] *** p6bannerbot sets mode: +v greppable6

[15:44] *** p6bannerbot sets mode: +v notable6

[15:44] *** p6bannerbot sets mode: +v quotable6

[15:46] *** bisectable6 joined
[15:47] *** p6bannerbot sets mode: +v bisectable6

[15:47] <AlexDaniel> shareable6: HEAD

[15:47] <shareable6> AlexDaniel, https://whateverable.6lang.org/HEAD

[15:47] <AlexDaniel> oops

[15:47] <AlexDaniel> c: HEAD say 42

[15:47] <committable6> AlexDaniel, ¬¶HEAD(fa5215b): ¬´42‚ê§¬ª

[15:47] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 2018.10,cbbe16edd,HEAD use Test; lives-ok { $*USER.gist; $*USER.WHAT.gist; }, ".WHAT on $*USER after using $*USER values lives";

[15:47] <committable6> AlexDaniel, ¬¶2018.10,cbbe16e,HEAD(fa5215b): ¬´ok 1 - .WHAT on bisectable after using bisectable values lives‚ê§¬ª

[15:48] <AlexDaniel> dogbert17: :S

[15:48] <AlexDaniel> did somebody want to implement a tool for bisecting locally?

[15:48] <AlexDaniel> :)

[15:48] <dogbert17> so the bots don't want to play ball 

[15:49] <dogbert17> could it be that they're no seeing the flags

[15:49] <dogbert17> *not

[15:49] <AlexDaniel> c: 2018.10,cbbe16edd,HEAD %*ENV<MVM_SPESH_NODELAY>=1; %*ENV<MVM_SPESH_BLOCKING>=1; run <perl6 -e>, ‚Äòuse Test; lives-ok { $*USER.gist; $*USER.WHAT.gist; }, ".WHAT on $*USER after using $*USER values lives";‚Äô

[15:50] <committable6> AlexDaniel, ¬¶2018.10,cbbe16e,HEAD(fa5215b): ¬´ok 1 - .WHAT on bisectable after using bisectable values lives‚ê§¬ª

[15:50] <AlexDaniel> I'm pretty sure the flags are there‚Ä¶ something else is different

[15:51] <dogbert17> any idea what that might be

[15:57] <AlexDaniel> OK let me build that tool that bisects locally :D

[15:57] <AlexDaniel> gonna take like 20 minutes maybe

[15:58] <lizmat> m: dd {a => 42} <<+>> {b => 666}   # keys don't match, so an empty hash

[15:58] <camelia> rakudo-moar fa5215b61: OUTPUT: ¬´Hash element = {}‚ê§¬ª

[15:59] <lizmat> m: dd a => 42 <<+>> b => 666   # the same with Pairs, that are also Associative

[15:59] <camelia> rakudo-moar fa5215b61: OUTPUT: ¬´Cannot modify an immutable Pair (Nil => Nil)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:59] <lizmat> so, what *should* that give?  Nil ?

[15:59] <lizmat> Empty ?

[16:08] <jnthn> Not sure; I was actually a tad surprised that non-matching keys were dropped, though that one can be argued a few ways I guess

[16:09] <lizmat> well, the whole meta-ops on Associatives is a bit wonky

[16:10] <lizmat> I had to add error checking for the Associative / Iterable case

[16:10] <lizmat> as that can never work reliably because of the indeterminate order of keys

[16:11] <jnthn> *nod*

[16:13] <AlexDaniel> dogbert17: First new commmit: [bb43acdb75f3ab7ed0bba22c1102fe254788db9d 09cceb9826a8b20e7492ae79b5bdd6dede6881e6 656a80457c15720b746157ee049eb9c699915ae7 f8be2fa0671a27adc078cde82e355cbb6564e26a 6aafe18d5544f9fbc9f75b6cc5a9f85d5d1fe7b2 edc4c0547fb5c8bd7361aca06c2c34ae15a80ac6]

[16:14] <AlexDaniel> dogbert17: bisect log: https://gist.github.com/AlexDaniel/1cceafe407224eef2788e07a690a595c

[16:15] <AlexDaniel> dogbert17: but can you try it yourself? https://gist.github.com/AlexDaniel/88b38af5db9adcf0b711ac3df31dd431

[16:15] <AlexDaniel> I'm intersted to know if it works for others

[16:16] * dogbert17 takes a quick look at the commits

[16:16] *** robertle left
[16:17] <AlexDaniel> also, for others, with that gist ‚Üë you can bisect locally or run code on arbitrary rakudo commits

[16:17] <AlexDaniel> only if you're on linux though

[16:18] <dogbert17> will have to try that out

[16:19] <dogbert17> so nine and/or brrt should possibly take a look at this problem then

[16:19] <SmokeMachine> how can I create a "real" control exception?

[16:20] <SmokeMachine> m: class CX::Bla is X::Control {}; CONTROL { when CX::Bla { say "control"} }; CATCH { when CX::Bla { say "catch" }}; CX::Bla.new.throw # shouldn't be control?

[16:20] <camelia> rakudo-moar fa5215b61: OUTPUT: ¬´catch‚ê§¬ª

[16:21] <jnthn> SmokeMachine: There's no way to do that as of yet; they're tied pretty close to the runtime (which mostly throws them in terms of numeric codes, and only creates the CX::Blah if forced to by a CONTROL block)

[16:23] <AlexDaniel> dogbert17: ticket it, also let me know if the gist works

[16:25] <SmokeMachine> jnthn: sorry, I haven't get it... what do you mean with `and only creates the CX::Blah if forced to by a CONTROL block`?

[16:25] <SmokeMachine> gotten

[16:25] <dogbert17> AlexDaniel: we have MasterDuke's ticket which, almost certainly, is the same problem

[16:26] <dogbert17> I can update it unless you beat me to it :-)

[16:26] <dogbert17> AlexDaniel: installing Whateverable isn't easy

[16:27] <dogbert17> ===> Testing: Pastebin::Gist:ver<1.004002>

[16:27] <jnthn> SmokeMachine: Control exceptions don't work internally using exception objects.

[16:27] <dogbert17> No such method 'add-content' for invocant of type 'HTTP::Request'

[16:27] <SmokeMachine> jnthn: would you advise me to just use normal exceptions and catch?

[16:28] <jnthn> SmokeMachine: Yes; there's no way to create additional control exceptions at this time (I was probably the last person who added them, and it was some years ago, and it involves changes across the whole compiler/backend stack)

[16:29] <SmokeMachine> jnthn: Now I got what you meant! the CX object is created once CONTROL finds that should exists, that's it?

[16:30] <jnthn> SmokeMachine: Yes, exactly that :)

[16:30] <SmokeMachine> jnthn: thanks!

[16:31] <SmokeMachine> jnthn: last question: would i have any problem if i continue calling my exceptions (that should be control exception) CX:: and extending X::Control?

[16:31] <SmokeMachine> but using CATCH

[16:32] <SmokeMachine> I think that way would be easier to "see" my intent...

[16:34] <jnthn> SmokeMachine: I'd prefer not; it'd probably be good in the future to make subclassing X::Control the way you do create a control exception, but if we have a bunch of modules that have already done that then we will probably be stuck and have to find a different way.

[16:34] *** Kaypie left
[16:34] *** Kaypie joined
[16:35] <dogbert17> AlexDaniel: updated https://github.com/MoarVM/MoarVM/issues/992

[16:35] <SmokeMachine> jnthn: and if I subclass X::Control, use CATCH and CONTROL? so, when its implemented, it wouldn't be a problem for my modules...

[16:35] *** p6bannerbot sets mode: +v Kaypie

[16:36] <jnthn> SmokeMachine: Yeah, that'd probably mean we get away with it :)

[16:37] <SmokeMachine> jnthn: OK! ill do that way! thanks!

[16:38] <AlexDaniel> dogbert17: hmmm interesting, try with --/test ?

[16:38] <AlexDaniel> not sure what's up with that add-content thingie

[16:40] *** benchable6 joined
[16:40] *** squashable6 joined
[16:40] *** ChanServ sets mode: +v squashable6

[16:41] *** coverable6 joined
[16:41] *** ChanServ sets mode: +v coverable6

[16:41] *** unicodable6 joined
[16:41] *** ChanServ sets mode: +v unicodable6

[16:41] *** statisfiable6 joined
[16:41] *** bloatable6 joined
[16:41] *** ChanServ sets mode: +v bloatable6

[16:41] *** p6bannerbot sets mode: +v benchable6

[16:41] *** p6bannerbot sets mode: +v squashable6

[16:41] *** p6bannerbot sets mode: +v coverable6

[16:41] *** p6bannerbot sets mode: +v unicodable6

[16:41] *** p6bannerbot sets mode: +v statisfiable6

[16:42] *** p6bannerbot sets mode: +v bloatable6

[17:14] <Geth_> ¬¶ rakudo/more-local-lowering: 9f59873068 | (Jonathan Worthington)++ | src/Perl6/Optimizer.nqp

[17:14] <Geth_> ¬¶ rakudo/more-local-lowering: Emit create and attribute setup code for lowereds

[17:14] <Geth_> ¬¶ rakudo/more-local-lowering: 

[17:14] <Geth_> ¬¶ rakudo/more-local-lowering: Rather than just a `clone`. This means that they will be possible for

[17:14] <Geth_> ¬¶ rakudo/more-local-lowering: the escape analyzer to understand and work with (though at the moment

[17:14] <Geth_> ¬¶ rakudo/more-local-lowering: any useful results of this are blocked by missing deopt hanlding).

[17:14] <Geth_> ¬¶ rakudo/more-local-lowering: review: https://github.com/rakudo/rakudo/commit/9f59873068

[17:42] <Geth_> ¬¶ rakudo: d5a751d94e | (Elizabeth Mattijsen)++ | src/core/Hyper.pm6

[17:42] <Geth_> ¬¶ rakudo: Fix typo to make object hashes work in hyperops

[17:42] <Geth_> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/d5a751d94e

[17:43] <lizmat> m: dd :{ a => 42 } <<+>> :{ a => 666 }

[17:43] <camelia> rakudo-moar fa5215b61: OUTPUT: ¬´Cannot resolve caller infix(Hyper: Int, Mu); none of these signatures match:‚ê§    (Hyper: \left, \right, *%_)‚ê§    (Hyper: Associative:D \left, Associative:D \right, *%_ --> Associative:D)‚ê§    (Hyper: Associative:D \left, Iterable:D \right, *%_)‚Ä¶¬ª

[17:43] <lizmat> fixes that ^^^

[17:50] * mst 's eyes cross

[18:34] <nine> dogbert17: if my assessment is correct, bisecting will not actually help with fixing the issue because the issue has been there all along but just been dormant.

[18:35] <AlexDaniel> nine: not sure if you backlogged far enough, but it was bisected: https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2018-11-13#l225

[18:36] <AlexDaniel> though you are probably right, yea

[18:37] <nine> AlexDaniel: I don't have the slightest idea how any of those commits could cause anything. They're really just removing code. What I think happens it that the removal allows for more inlining/JIT compilation and thus exposes the architectural error in the JIT.

[18:37] <nine> I think, we're simply trying to JIT compile code while the VM is shutting down. That would at least explain why the error happens right at the end and goes away with MVM_SPESH_BLOCKING=1

[18:39] <AlexDaniel> nine: btw that issue can't be reproduced on whateverable server, and currently I don't have any guess on why it is so

[18:46] <AlexDaniel> hmmmmm

[18:48] <AlexDaniel> it's also possible that it failed to build rakudo on these commits because of memory issues, I'll try it again‚Ä¶

[18:48] <AlexDaniel> though it ends with a bump so maybe not

[18:48] <dogbert17> nine: perhaps I should ask brrt if he has any ideas

[18:50] <dogbert17> the example AlexDaniel bisected had MVM_SPESH_BLOCKING=1 (and MVM_SPESH_NODELAY=1)

[19:05] <AlexDaniel> dogbert17: sooo‚Ä¶ any luck running it yourself?

[19:10] *** ExtraCrispy left
[19:11] *** ExtraCrispy joined
[19:11] *** p6bannerbot sets mode: +v ExtraCrispy

[19:29] *** robertle joined
[19:29] *** p6bannerbot sets mode: +v robertle

[19:34] <dogbert17> AlexDaniel: let me try again ...

[19:37] <lizmat> ok, looking at dispatch issues in Hyper

[19:37] <lizmat> adding candidates for Pair / Pair

[19:37] <lizmat> suddenly Iterable / Iterable is serving the Associative / Associative case

[19:37] <lizmat> so I think: maybe if Pair wouldn't be Associative, things could work

[19:38] <lizmat> then the building of the setting dies with:

[19:38] <lizmat> Can't serialize an object of type Pair

[19:38] <lizmat> in the install phase

[19:38] <lizmat> isn't that, eh, weird ?

[19:42] <dogbert17> AlexDaniel: it worked

[19:43] <AlexDaniel> \o/

[19:45] <lizmat> ah,... it's JSON complaining, not MAST

[19:45] <AlexDaniel> dogbert17: there are probably many good things one can use this for

[19:46] <AlexDaniel> dogbert17: also see this: https://github.com/perl6/whateverable/blob/6216854099e2dcc0ce5fb5b3a87ae665abc5fc80/lib/Whateverable/Bisection.pm6#L32

[19:46] <AlexDaniel> you can provide custom code or other logic to drive the bisection process

[19:47] <dogbert17> interesting

[19:51] *** j3nnn1 joined
[19:51] *** p6bannerbot sets mode: +v j3nnn1

[20:02] <lizmat> m: class A { multi method a(Pair:D, Pair:D) { Pair }; multi method a(Associative:D, Associative:D) { Associative }; multi method a(Iterable:D, Iterable:D) { Iterable } }; dd A.a( { a => 42 }, { b => 62 } )

[20:02] <camelia> rakudo-moar d5a751d94: OUTPUT: ¬´Iterable‚ê§¬ª

[20:02] <lizmat> I would have expected Associative here   ^^^

[20:02] <lizmat> jnthn: any ideas ?

[20:04] <lizmat> m: class A { multi method a(Pair, Pair) { Pair }; multi method a(Associative, Associative) { Associative }; multi method a(Iterable, Iterable) { Iterable } }; dd A.a( Hash, Hash ) # golfed

[20:04] <camelia> rakudo-moar d5a751d94: OUTPUT: ¬´Iterable‚ê§¬ª

[20:05] <lizmat> when I remove the Pair Pair candidate:

[20:05] <lizmat> m: class A { multi method a(Associative, Associative) { Associative }; multi method a(Iterable, Iterable) { Iterable } }; dd A.a( Hash, Hash )

[20:05] <camelia> rakudo-moar d5a751d94: OUTPUT: ¬´Ambiguous call to 'a(A: Hash, Hash)'; these signatures all match:‚ê§:(A: Associative $, Associative $, *%_)‚ê§:(A: Iterable $, Iterable $, *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:05] *** Kaypie left
[20:05] *** Kaypie joined
[20:05] <lizmat> adding is default:

[20:05] <lizmat> m: class A { multi method a(Associative, Associative) is default { Associative }; multi method a(Iterable, Iterable) { Iterable } }; dd A.a( Hash, Hash )

[20:05] <camelia> rakudo-moar d5a751d94: OUTPUT: ¬´Associative‚ê§¬ª

[20:06] *** p6bannerbot sets mode: +v Kaypie

[20:07] <lizmat> m: class A { multi method a(Pair) { Pair }; multi method a(Associative) { Associative }; multi method a(Iterable) { Iterable } }; dd A.a(Hash)  # further golf

[20:07] <camelia> rakudo-moar d5a751d94: OUTPUT: ¬´Iterable‚ê§¬ª

[20:09] *** lucasb left
[20:10] <lizmat> jnthn: I don't see how the addition of a Pair candidate should affect how Associative / Iterable are selected, especially if there is an "is default" active

[20:10] <lizmat> jnthn: should I make an issue of this, or is this some misunderstanding of MMD that I have ?

[20:13] <lizmat> afk for a double helping of Magic Beasts

[20:13] <lizmat> &

[20:41] *** Kaypie left
[20:43] *** Kaiepi joined
[20:44] *** p6bannerbot sets mode: +v Kaiepi

[20:55] *** Kaiepi left
[20:55] *** Kaiepi joined
[20:56] *** p6bannerbot sets mode: +v Kaiepi

[21:09] *** delon left
[21:13] *** delon joined
[21:14] *** p6bannerbot sets mode: +v delon

[21:28] *** delon left
[21:31] *** delon joined
[21:32] *** p6bannerbot sets mode: +v delon

[22:08] *** AlexDaniel left
[22:08] *** go|dfish left
[22:08] *** AlexDaniel joined
[22:08] *** p6bannerbot sets mode: +v AlexDaniel

[22:09] *** robertle left
[22:10] *** go|dfish joined
[22:10] *** p6bannerbot sets mode: +v go|dfish

[22:22] <jnthn> lizmat: Something looks a bit off there; please file an issue, I can take a look when I get chance (not today, though...tired)

[22:59] *** delon left
[23:04] *** dct joined
[23:04] *** p6bannerbot sets mode: +v dct

[23:10] *** ExtraCrispy left
[23:11] *** ExtraCrispy joined
[23:11] *** p6bannerbot sets mode: +v ExtraCrispy

[23:14] *** dogbert11 joined
[23:15] *** p6bannerbot sets mode: +v dogbert11

[23:16] *** dogbert17 left
[23:19] *** Kaypie joined
[23:19] *** p6bannerbot sets mode: +v Kaypie

[23:20] *** Kaiepi left
[23:35] *** dct left
