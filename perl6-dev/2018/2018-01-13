[00:00] <jnthn> tbrowder: Yes, if you have a clear way to reproduce it.

[00:00] * TimToady got to the point where when he saw a mysterious nqp error he just assumed something wasn't declared right :)

[00:00] <jnthn> Though like timotimo said, it soudns very odd

[00:01] <jnthn> NQP suffers from being the thing we use to build the thing we're actually building

[00:01] <jnthn> We barely have time to do that, let alone polish NQP :)

[00:01] <jnthn> (If somebody wished to, of course, I'd be very happy :))

[00:02] <tbrowder> hm, i’ll try, but it’s in the middle of a lot of changes.

[00:02] <TimToady> well, we just need to get the optimizers to the point where Perl 6 code runs as fast as nqp :P

[00:03] <jnthn> "just" :-)

[00:03] <lizmat> smop!

[00:03] <jnthn> We pay a good amount for all of our Scalar containers

[00:04] <jnthn> Some kinda escape/alias analysis and related opts would help with at least some of them

[00:08] <jnthn> In general, first-class l-values are very powerful, but one of the hardest problems in optimizing Perl 6

[00:10] <Geth> ¦ rakudo: cdb53afa54 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/BOOTSTRAP.nqp

[00:10] <Geth> ¦ rakudo: We don't need to check for the existence of phasers

[00:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cdb53afa54

[00:11] <lizmat> not much, only one nqp::isnull less per exit_handler call

[00:13] <jnthn> Every little helps

[00:19] <lizmat> jnthn: does the BOOTSTRAP know about nqp::p6bindattrinvres already ?

[00:19] <lizmat> looking at the foreign_transform_xxx entries

[00:21] <jnthn> Hmm

[00:21] <jnthn> I can't remember, sory

[00:21] <jnthn> *sorry

[00:21] <jnthn> I think it might

[00:21] <jnthn> Try it :)

[00:22] <lizmat> ok, I'll JFDI  :-)

[00:23] <lizmat> ok, I reduced the level of the whole block by doing a return on if nqp::p6inpre

[00:23] <lizmat> and reduced level on wlll leave by one

[00:23] <lizmat> alas, same problem as before

[00:23] * lizmat now really calling it a day  :-)

[00:24] <lizmat> https://gist.github.com/lizmat/4e2d05df2f252ce50c1c98a9106375a2  # in case you're interested

[00:25] <lizmat> test file that fails consistenly: t/spec/S16-io/words.t

[00:25] <lizmat> good night!

[00:25] <jnthn> 'night o/

[00:28] <tbrowder> i can give code before and after the var is declared, but the file is about a thousand lines, but i can trim it down some. i can do that later if that is ok. i need to finish another commit on PR #1339 first.

[00:35] <Geth> ¦ rakudo/meta-assign-reverse-opt: 7248ac0678 | (Zoffix Znet)++ | src/Perl6/Optimizer.nqp

[00:35] <Geth> ¦ rakudo/meta-assign-reverse-opt: Reorganize nameless call opt method

[00:35] <Geth> ¦ rakudo/meta-assign-reverse-opt:

[00:35] <Geth> ¦ rakudo/meta-assign-reverse-opt: Get rid of half-a-screen indent to get some breathing room. No

[00:35] <Geth> ¦ rakudo/meta-assign-reverse-opt: functional changes other than a couple of swaps from +@ to more

[00:35] <Geth> ¦ rakudo/meta-assign-reverse-opt: performant nqp::elems

[00:35] <Geth> ¦ rakudo/meta-assign-reverse-opt: review: https://github.com/rakudo/rakudo/commit/7248ac0678

[01:26] <travis-ci> Rakudo build passed. Zoffix Znet 'Fix typo in comment'

[01:26] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/327967155 https://github.com/rakudo/rakudo/compare/cad66b72d576...992b8055769b

[01:30] <AlexDaniel> releasable6: next

[01:30] <releasable6> AlexDaniel, Next release in 7 days and ≈17 hours. No blockers. Unknown changelog format

[01:30] <AlexDaniel> huggable: star

[01:30] <huggable> AlexDaniel, Estimated Rakudo Star releases for 2017: .01, .04, .07 & .10

[01:30] <AlexDaniel> ⚠ please no groundbreaking changes this week! :)

[02:01] <Geth> ¦ rakudo/meta-assign-reverse-opt: 858b659fcd | (Zoffix Znet)++ | src/Perl6/Optimizer.nqp

[02:01] <Geth> ¦ rakudo/meta-assign-reverse-opt: Performatize MetaAssign with MetaReverse

[02:01] <Geth> ¦ rakudo/meta-assign-reverse-opt:

[02:01] <Geth> ¦ rakudo/meta-assign-reverse-opt: Unpack it into simpler ops whenever we can, same as with regular MetaAssign

[02:01] <Geth> ¦ rakudo/meta-assign-reverse-opt: unpack that uses a var, except with reversed args. The combination may look

[02:01] <Geth> ¦ rakudo/meta-assign-reverse-opt: rather obscure, but I imagine expert Perl 6 devs will use `$foo [R~]= $bar` to

[02:01] <Geth> ¦ rakudo/meta-assign-reverse-opt: prepend rather than append a string fairly often.

[02:01] <Geth> ¦ rakudo/meta-assign-reverse-opt:

[02:01] <Geth> ¦ rakudo/meta-assign-reverse-opt: This commit makes `[R~]=` 160x faster 🔥🚀

[02:01] <Geth> ¦ rakudo/meta-assign-reverse-opt: review: https://github.com/rakudo/rakudo/commit/858b659fcd

[02:01] <Geth> ¦ roast: 26577a7d2f | (Zoffix Znet)++ | S03-metaops/reverse.t

[02:01] <Geth> ¦ roast: Couple more tests for metassign + metareverse

[02:01] <Geth> ¦ roast:

[02:01] <Geth> ¦ roast: Covers work done in

[02:01] <Geth> ¦ roast: https://github.com/rakudo/rakudo/commit/858b659fcd

[02:01] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/26577a7d2f

[02:02] <Geth> ¦ rakudo/meta-assign-reverse-opt: 0fd88f7234 | (Zoffix Znet)++ | src/Perl6/Optimizer.nqp

[02:02] <Geth> ¦ rakudo/meta-assign-reverse-opt: Remove accidentally left over debug code

[02:02] <Geth> ¦ rakudo/meta-assign-reverse-opt: review: https://github.com/rakudo/rakudo/commit/0fd88f7234

[02:04] <Geth> ¦ rakudo: zoffixznet++ created pull request #1390: Meta assign reverse opt

[02:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1390

[02:05] <Geth> ¦ rakudo/master: 4 commits pushed by (Zoffix Znet)++

[02:05] <Geth> ¦ rakudo/master: 7248ac0678 | Reorganize nameless call opt method

[02:05] <Geth> ¦ rakudo/master: 858b659fcd | Performatize MetaAssign with MetaReverse

[02:05] <Geth> ¦ rakudo/master: 0fd88f7234 | Remove accidentally left over debug code

[02:05] <Geth> ¦ rakudo/master: c3a83afaaf | Merge pull request #1390 from rakudo/meta-assign-reverse-opt

[02:05] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/cdb53afa54...c3a83afaaf

[02:40] <Geth> ¦ rakudo: d73d88717d | (Zoffix Znet)++ | src/Perl6/Optimizer.nqp

[02:40] <Geth> ¦ rakudo: Simplify core op lookup

[02:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d73d88717d

[03:19] <tbrowder> AlexDaniel: rakudo PR #1339 has been modified to use bigints for all %config hash integer values.

[03:19] <AlexDaniel> I know. There's a new comment also :)

[03:23] <Geth> ¦ nqp: ee6e9c855c | (Zoffix Znet)++ | src/QAST/Block.nqp

[03:23] <Geth> ¦ nqp: Add $!cuid to QAST::Block.dump

[03:23] <Geth> ¦ nqp:

[03:23] <Geth> ¦ nqp: So we could see which BVal refers to which Block

[03:23] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/ee6e9c855c

[03:27] <AlexDaniel> tbrowder: FWIW, your commit messages could be better

[03:27] <AlexDaniel> that's for the next time :)

[03:28] <AlexDaniel> like, there's the first commit which is great

[03:28] <AlexDaniel> and then commits like “chg POD6 to POD”, which is ok but not very presentable

[03:30] <tbrowder> ok, i’ll try be a bit wordier and more to the point “next” time...

[03:30] <AlexDaniel> tbrowder: if I were you, instead of committing “remove extra space” and “fix typo” I'd do `git commit --amend`

[03:30] <AlexDaniel> you'd have to push --force when you do that, but that's OK for pull requests

[03:32] <tbrowder> ok, good points—sounds like good stuff for CONTRIBITING

[03:32] <AlexDaniel> IMO it's not so much the lack of words, but more that these intermediate commits that are kinda irrelevant (but have to be pulled in anyway)

[03:33] <tbrowder> so no msg with the “git —amend” cmd?

[03:34] <AlexDaniel> git --amend wil put your staged changes into the last commit

[03:34] <AlexDaniel> and you can also change the commit message of the last commit while doing that

[03:34] <AlexDaniel> This looks like a useful article: https://blog.adamspiers.org/2015/03/24/why-and-how-to-correctly-amend-github-pull-requests/

[03:35] <AlexDaniel> (just please anyone who follows these instructions, don't lose your changes :) )

[03:35] <tbrowder> ok, i’ll check it out. i’ve looked into squashing but not amending which i guess is more relevant for PRs.

[03:36] <AlexDaniel> it's also cool when you work locally and haven't pushed anything yet

[03:36] <AlexDaniel> and you realize that some file was forgotten, or the commit message should be changed

[03:37] <AlexDaniel> only works for the last commit tho. A bit more complicated if you need to change something else

[03:41] <tbrowder> right. btw, how do you see my changes so fast? is there a way to get github notifications other than email? i see a web method but am not sure what it is.

[03:42] <tbrowder> and, in case you haven’t seen it, i have removed the superflous code.

[03:43] <tbrowder> s/flous/fluous/

[03:51] <tbrowder> AlexDaniel: g’night from UTC-5

[03:51] <AlexDaniel> you too, from UTC+2 :)

[06:24] <Geth> ¦ rakudo: 062dc3f04f | (Zoffix Znet)++ | src/Perl6/Optimizer.nqp

[06:24] <Geth> ¦ rakudo: Add a debug point in visit_children

[06:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/062dc3f04f

[08:04] <Geth> ¦ rakudo: 60566cfc4a | (Zoffix Znet)++ | t/05-messages/10-warnings.t

[08:04] <Geth> ¦ rakudo: Label test with ticket number for it

[08:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/60566cfc4a

[08:09] <Geth> ¦ rakudo: 728acf597c | (Zoffix Znet)++ | t/05-messages/10-warnings.t

[08:09] <Geth> ¦ rakudo: Fix spurious warnings in try thunks inside blocks

[08:09] <Geth> ¦ rakudo:

[08:09] <Geth> ¦ rakudo: Fixes RT#131331: https://rt.perl.org/Ticket/Display.html?id=131331

[08:09] <Geth> ¦ rakudo: Fixes RT#131123: https://rt.perl.org/Ticket/Display.html?id=131123

[08:09] <Geth> ¦ rakudo:

[08:09] <Geth> ¦ rakudo: When we got a thunky `try` in a block, the QAST chain we make

[08:09] <Geth> ¦ rakudo: contains `nqp::handle` op inside a QAST::Want, but ::Want doesn't

[08:09] <synopsebot> RT#131331 [new]: https://rt.perl.org/Ticket/Display.html?id=131331 [BUG] Wrong useless use warning in grep + try + after

[08:09] <Geth> ¦ rakudo: know how to propagate wantedness through handle ops. Fix by adding that.

[08:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/728acf597c

[08:09] <synopsebot> RT#131123 [open]: https://rt.perl.org/Ticket/Display.html?id=131123 [BUG] Useless use of useless use in smartmatch + block + try

[08:13] <Geth> ¦ rakudo: 2805b15da4 | (Zoffix Znet)++ | t/05-messages/10-warnings.t

[08:13] <Geth> ¦ rakudo: Revert "Fix spurious warnings in try thunks inside blocks"

[08:13] <Geth> ¦ rakudo:

[08:13] <Geth> ¦ rakudo: This reverts commit 728acf597cf31fb2a6ad0b2acf5cb253bc5c99a5.

[08:13] <Geth> ¦ rakudo: (missing files)

[08:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2805b15da4

[08:13] <Geth> ¦ rakudo: ef2dc1b8ba | (Zoffix Znet)++ | 2 files

[08:13] <Geth> ¦ rakudo: Fix spurious warnings in try thunks inside blocks

[08:13] <Geth> ¦ rakudo:

[08:13] <Geth> ¦ rakudo: Fixes RT#131331: https://rt.perl.org/Ticket/Display.html?id=131331

[08:13] <Geth> ¦ rakudo: Fixes RT#131123: https://rt.perl.org/Ticket/Display.html?id=131123

[08:13] <Geth> ¦ rakudo:

[08:13] <Geth> ¦ rakudo: When we got a thunky `try` in a block, the QAST chain we make

[08:13] <Geth> ¦ rakudo: contains `nqp::handle` op inside a QAST::Want, but ::Want doesn't

[08:13] <Geth> ¦ rakudo: know how to propagate wantedness through handle ops. Fix by adding that.

[08:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ef2dc1b8ba

[09:16] <Geth> ¦ rakudo: 99da4a5a6c | (Zoffix Znet)++ | 2 files

[09:16] <Geth> ¦ rakudo: Do not warn in explicit sink of variables

[09:16] <Geth> ¦ rakudo:

[09:16] <Geth> ¦ rakudo: Fixes RT#128692: https://rt.perl.org/Ticket/Display.html?id=128692

[09:16] <Geth> ¦ rakudo:

[09:16] <Geth> ¦ rakudo: It's not useless, since a variable may contain, e.g. a Seq to sink

[09:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/99da4a5a6c

[09:16] <synopsebot> RT#128692 [open]: https://rt.perl.org/Ticket/Display.html?id=128692 [BUG] useless uses of "useless use ... in sink context" warning in sink context

[09:21] <geekosaur> do we actually do anything in that case? (recalling an earlier bug where untriggered Failures vanish if they're values in a sunk container)

[10:14] <Geth> ¦ rakudo: 00188757dc | (Zoffix Znet)++ | src/Perl6/World.nqp

[10:14] <Geth> ¦ rakudo: Add node info to ±Inf/NaN num constants

[10:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/00188757dc

[10:15] <Geth> ¦ rakudo: e9c9dc4695 | (Zoffix Znet)++ | src/Perl6/Optimizer.nqp

[10:15] <Geth> ¦ rakudo: Warn on ±Inf/NaN in sink context

[10:15] <Geth> ¦ rakudo:

[10:15] <Geth> ¦ rakudo: Fixes RT#126973: https://rt.perl.org/Ticket/Display.html?id=126973

[10:15] <Geth> ¦ rakudo:

[10:15] <Geth> ¦ rakudo: The neginf likely not needed after we fixed[^1] `-Inf` being

[10:15] <Geth> ¦ rakudo: a single term, but watch for it anyway, just in case.

[10:15] <Geth> ¦ rakudo:

[10:15] <synopsebot> RT#126973 [open]: https://rt.perl.org/Ticket/Display.html?id=126973 [BUG] No sink warnings when Inf or NaN is in sink context ( ∞ )

[10:15] <Geth> ¦ rakudo: [1] https://github.com/rakudo/rakudo/commit/ae614f94b0fe2ff4e95579bc4

[10:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e9c9dc4695

[10:16] <Geth> ¦ roast: 6869312c03 | (Zoffix Znet)++ | S32-exceptions/misc.t

[10:16] <Geth> ¦ roast: Test ±Inf/NaN warn in sink context

[10:16] <Geth> ¦ roast:

[10:16] <Geth> ¦ roast: RT#126973: https://rt.perl.org/Ticket/Display.html?id=126973

[10:16] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/e9c9dc4695

[10:16] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6869312c03

[10:58] <araraloren> Hi

[10:59] <araraloren> I have a question about NQP source code. Where is the source code of stage0 ?

[11:43] <lizmat> Files=1231, Tests=75989, 331 wallclock secs (14.69 usr  5.06 sys + 2252.91 cusr 232.77 csys = 2505.43 CPU)

[11:49] <5EXAAJYUK> Rakudo version 2017.12-198-ge9c9dc469 - MoarVM version 2017.12.1-32-g56c03d99c

[11:49] <5EXAAJYUK> csv-test-xs-20      0.434 -  0.437

[11:49] <5EXAAJYUK> csv-ip5xs           1.152 -  1.154

[11:49] <5EXAAJYUK> test-t --race       1.151 -  1.155

[11:49] <5EXAAJYUK> test-t              2.845 -  2.872

[11:49] <5EXAAJYUK> test               11.439 - 11.541

[11:49] <5EXAAJYUK> csv-parser         12.362 - 12.528

[11:49] <5EXAAJYUK> csv-ip5xs-20       13.212 - 13.665

[11:49] <5EXAAJYUK> test-t-20 --race   17.389 - 17.451

[11:49] <5EXAAJYUK> test-t-20          50.068 - 51.075

[12:15] <lizmat> 5EXAAJYUK: who are you and what have you done to Tux ?

[12:19] <jnthn> araraloren_: It's a compiled version of NQP, so look back to the commit that last updated stage0, and the NQP source at that commit is what was compiled into stage0

[12:29] <[Tux]> Pheeuw :)

[12:52] <Geth> ¦ rakudo: 21bc5916c0 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/BOOTSTRAP.nqp

[12:52] <Geth> ¦ rakudo: Micro-optimize exit_handler, part #4

[12:52] <Geth> ¦ rakudo:

[12:52] <Geth> ¦ rakudo: - only fetch %phasers if actually needed

[12:52] <Geth> ¦ rakudo: - only fetch keeps/undos if actually needed

[12:52] <Geth> ¦ rakudo: - appears to make a single LEAVE a few % faster, but it is difficult to bench

[12:52] <Geth> ¦ rakudo:   - as "for ^100000 { LEAVE Nil }" is a very tight loop

[12:52] <Geth> ¦ rakudo:   - very CPU intensive, so prone to heating up the CPU and getting throttled down

[12:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/21bc5916c0

[13:46] <Geth> ¦ rakudo: titsuki++ created pull request #1395: FIx RT#126669

[13:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1395

[13:46] <synopsebot> RT#126669 [open]: https://rt.perl.org/Ticket/Display.html?id=126669 [LHF][LTA] error with "need 6"/"use 6" (no "v")

[14:09] <Geth> ¦ rakudo: 2dc93ac345 | (Itsuki Toyota)++ | src/core/Exception.pm

[14:09] <Geth> ¦ rakudo: Add error messages for Perl5-style pragma (e.g., "use 6.0", "need 6.0")

[14:09] <Geth> ¦ rakudo:

[14:09] <Geth> ¦ rakudo: Fixes RT#126669: https://rt.perl.org/Public/Bug/Display.html?id=126669

[14:09] <Geth> ¦ rakudo:

[14:09] <Geth> ¦ rakudo: When the name of an undeclared routine matches any keys of the table $obs, it shows the associated error message.

[14:09] <Geth> ¦ rakudo: This fix leverages this table; it stores "use" and "need" each as a key and their associated error messages each as a value.

[14:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2dc93ac345

[14:09] <synopsebot> RT#126669 [open]: https://rt.perl.org/Ticket/Display.html?id=126669 [LHF][LTA] error with "need 6"/"use 6" (no "v")

[14:10] <Geth> ¦ rakudo: 4ec5936cd5 | (Itsuki Toyota)++ | t/05-messages/02-errors.t

[14:10] <Geth> ¦ rakudo: Add tests for X::Undeclared::Symbols exception for when Perl5-style pragma is used

[14:10] <dogbert17> ZOFFLOP: t/spec/S03-operators/short-circuit.t (test #84)

[14:10] <Geth> ¦ rakudo:

[14:10] <Geth> ¦ rakudo: Fixes RT#126669: https://rt.perl.org/Public/Bug/Display.html?id=126669

[14:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4ec5936cd5

[14:10] <Geth> ¦ rakudo: b2bf8e10b2 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 2 files

[14:10] <Geth> ¦ rakudo: Merge pull request #1395 from titsuki/fix-use-lta

[14:10] <Geth> ¦ rakudo:

[14:10] <Geth> ¦ rakudo: Fix RT#126669

[14:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b2bf8e10b2

[14:13] <Geth> ¦ rakudo: 0af3f4d1c3 | (Elizabeth Mattijsen)++ | src/core/List.pm

[14:13] <Geth> ¦ rakudo: Make .sum on 2-element Lists about 30% faster

[14:13] <Geth> ¦ rakudo:

[14:13] <Geth> ¦ rakudo: - basically fast path 1 and 2 element lists

[14:13] <Geth> ¦ rakudo: - 1 element lists also slightly faster, but close to noise

[14:13] <Geth> ¦ rakudo:

[14:13] <Geth> ¦ rakudo: Inspired by https://twitter.com/LearningPerl6/status/952069237266354176

[14:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0af3f4d1c3

[14:14] <lizmat> afk&

[14:21] <pmurias> samcv: I now see that the tie-breaker behavior is toggable as quaternary

[14:29] <Geth> ¦ rakudo: 1e8c9762e4 | (Christian Bartolomäus)++ (committed using GitHub Web editor) | src/Perl6/Metamodel/BOOTSTRAP.nqp

[14:29] <Geth> ¦ rakudo: [JVM] Remove superfluous parenthesis

[14:29] <Geth> ¦ rakudo:

[14:29] <Geth> ¦ rakudo: Fixes JVM build.

[14:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1e8c9762e4

[15:39] <Geth> ¦ nqp: 5d45955607 | (Tom Browder)++ (committed using GitHub Web editor) | docs/ops.markdown

[15:39] <Geth> ¦ nqp: fix typo

[15:39] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/5d45955607

[16:17] <lizmat> bartolin++  # oops  :-)

[18:52] <Geth> ¦ tap-harness6: hankache++ created pull request #24: Improve documentation

[18:52] <Geth> ¦ tap-harness6: review: https://github.com/perl6/tap-harness6/pull/24

[19:20] <samcv> pmurias: yeah

[19:20] <samcv> it still is non-ignorable in basis though

[19:43] <lizmat> ok, I seem to draw a blank:

[19:43] <lizmat> m: module A { our sub foo() { 42 } }; my $a := A; say "exists" if A::<&foo>

[19:43] <camelia> rakudo-moar 1e8c9762e: OUTPUT: «exists␤»

[19:43] <lizmat> what is the syntax if the class is in $a ?

[19:44] <lizmat> m: module A { our sub foo() { 42 } }; my $a := A; say "exists" if $a<&foo>  # not the right syntax or bug ?

[19:44] <camelia> rakudo-moar 1e8c9762e: ( no output )

[19:45] <gfldex> m: say $*VM;

[19:45] <camelia> rakudo-moar 1e8c9762e: OUTPUT: «moar (2017.12.1.30.ged.7.c.1234.f)␤»

[19:45] <Zoffix> m: module A { our sub foo() { 42 } }; my $a := "A"; say "exists" if ::($a ~ '::&foo')

[19:45] <camelia> rakudo-moar 1e8c9762e: OUTPUT: «exists␤»

[19:45] <gfldex> is there something like $*RAKUDO?

[19:45] <lizmat> gfldex: no

[19:46] <lizmat> Zoffix++

[19:46] <Zoffix> m: say $*PERL.compiler

[19:46] <camelia> rakudo-moar 1e8c9762e: OUTPUT: «rakudo (2017.12.204.g.1.e.8.c.9762.e)␤»

[19:46] <gfldex> that's what I'm looking for :)

[19:46] <lizmat> Zoffix++  # again!

[19:49] <Geth> ¦ rakudo: jstuder-gh++ created pull request #1396: Issue 1261: Throw BIND-KEY Exception instead of using Failure

[19:49] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1396

[19:52] <Geth> ¦ rakudo: 6a3db33445 | (Jeremy Studer)++ | src/core/Any.pm

[19:52] <Geth> ¦ rakudo: Throw BIND-KEY Exception instead of using Failure

[19:52] <Geth> ¦ rakudo:

[19:52] <Geth> ¦ rakudo: As suggested by zoffix and jnthn, since the result of BIND-KEY does not

[19:52] <Geth> ¦ rakudo: sink, the Exception within the Failure is never thrown. Throws now.

[19:52] <Geth> ¦ rakudo:

[19:52] <Geth> ¦ rakudo: Addresses [Issue 1261](https://github.com/rakudo/rakudo/issues/1261)

[19:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6a3db33445

[19:52] <Geth> ¦ rakudo: f25fdbdf0a | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core/Any.pm

[19:52] <Geth> ¦ rakudo: Merge pull request #1396 from jstuder-gh/MapBindSinkFail

[19:52] <Geth> ¦ rakudo:

[19:52] <Geth> ¦ rakudo: Issue 1261: Throw BIND-KEY Exception instead of using Failure

[19:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f25fdbdf0a

[20:00] <b2gills> bisect: 'abc'.ords.rotor(2=>-1,:partial)

[20:00] <bisectable6> b2gills, Bisecting by exit code (old=2015.12 new=1e8c976). Old exit code: 0

[20:00] <bisectable6> b2gills, bisect log: https://gist.github.com/8a910bae3edb8601bdf05c0a624a94f2

[20:00] <bisectable6> b2gills, (2017-01-18) https://github.com/rakudo/rakudo/commit/fd8df7f2ad509689a64b8825e1c4bb622cf7486f

[20:17] <lizmat> b2gills: please rakudobug / GH issue that

[20:18] <b2gills> lizmat: That was the last thing I was doing as part of filing https://github.com/rakudo/rakudo/issues/1397

[20:19] <lizmat> ok, cool  :-)

[20:39] <Geth> ¦ roast: jstuder-gh++ created pull request #376: Rakudo Issue 1261: Test that there no binding to immutable List/Map

[20:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/376

[20:46] <Geth> ¦ roast: 347f45c080 | (Jeremy Studer)++ | 2 files

[20:46] <Geth> ¦ roast: Test that there no binding to immutable List/Map

[20:46] <Geth> ¦ roast:

[20:46] <Geth> ¦ roast: Also add tests involving binding at a key or position where a Scalar

[20:46] <Geth> ¦ roast: container resides. Binding should not be allowed in those instances

[20:46] <Geth> ¦ roast: either.

[20:46] <Geth> ¦ roast:

[20:46] <Geth> ¦ roast: Addresses

[20:47] <Geth> ¦ roast: [Rakudo Issue 1261](https://github.com/rakudo/rakudo/issues/1261)

[20:47] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/347f45c080

[20:47] <Geth> ¦ roast: e6ef7b673c | (Zoffix Znet)++ (committed using GitHub Web editor) | 2 files

[20:47] <Geth> ¦ roast: Merge pull request #376 from jstuder-gh/issue_1261_tests

[20:47] <Geth> ¦ roast:

[20:47] <Geth> ¦ roast: Rakudo Issue 1261: Test that there no binding to immutable List/Map

[20:47] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e6ef7b673c

[21:09] <Geth> ¦ nqp: d1f519b1fa | pmurias++ | 2 files

[21:09] <Geth> ¦ nqp: [js] Implement nqp::unicmp_s

[21:09] <Geth> ¦ nqp:

[21:09] <Geth> ¦ nqp: Use the unicode-collation-algorithm package for that

[21:09] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/d1f519b1fa

[21:10] <lizmat> ok, so I started to implement tie() for Perl 6, using Perl 5 semantics

[21:10] <lizmat> https://github.com/lizmat/tie

[21:10] <tbrowder> jnthn: i just filed nqp GH #389 for the LTA msg i mentioned yesterday.  it shows the error msg for as short a code chunk as i could make to duplicate the error.

[21:10] <lizmat> and get stumped by:

[21:10] <lizmat> $ perl6 -Ilib t/01-basic.t

[21:10] <lizmat> Cannot invoke this object (REPR: Uninstantiable; tie)

[21:14] <lizmat> stacktrace goes right back into NQP

[21:14] <lizmat> weird

[21:15] <lizmat> aaahhhh

[21:15] <lizmat> unit module tie;  sub tie {} is export;

[21:16] <lizmat> if I change the name of the module, it works

[21:21] <masak> interesting

[21:21] <masak> m: unit module tie; say tie

[21:21] <camelia> rakudo-moar f25fdbdf0: OUTPUT: «(tie)␤»

[21:21] <masak> m: unit module tie; say tie; sub tie {}

[21:21] <camelia> rakudo-moar f25fdbdf0: OUTPUT: «(tie)␤»

[21:21] <masak> m: unit module tie; say tie; sub tie is export {}

[21:21] <camelia> rakudo-moar f25fdbdf0: OUTPUT: «(tie)␤»

[21:21] <masak> lizmat: `is export` doesn't go after `{}`, does it?

[21:22] <lizmat> no

[21:22] <lizmat> I guess it's a case of DIHWIDT

[21:23] <masak> more like a case of "not grammatical"...? :)

[21:25] <masak> seriously, though, I would expect the name clash to be either completely outlawed, or no problem at all

[21:31] <lizmat> I think that it should just be a compile time error

[21:31] <lizmat> it would be trying to export "tie" twice: once as a type, and once as a sub

[21:31] <lizmat> that can never work, I would thin

[21:31] <lizmat> k

[21:33] <jnthn> It's not a conflict because subs are installed as &foo

[21:34] <jnthn> m: class foo { }; sub foo() { "lol I'm a sub" }; say foo; say foo()

[21:34] <camelia> rakudo-moar f25fdbdf0: OUTPUT: «(foo)␤(foo(Any))␤»

[21:34] <jnthn> m: class foo { }; sub foo() { "lol I'm a sub" }; say foo; say &foo()

[21:34] <camelia> rakudo-moar f25fdbdf0: OUTPUT: «(foo)␤lol I'm a sub␤»

[21:34] <jnthn> There we go

[21:36] <masak> ooh, of course

[21:36] <masak> I'd half-expect that first `say foo()` to work too, tbh

[21:37] <jnthn> Coercion type syntax wins

[21:37] <masak> oh!

[21:38] <masak> that makes sense, unfortunately :)

[21:38] <jnthn> Need more bracket chars in ASCII

[21:52] * masak .oO( time-travel fiction about going back and convincing the authors of ASCII to add more bracket chars... )

[21:57] <lizmat> .oO( in my days, you only had 6 bits to express a character in )

[22:02] * geekosaur apparently just missed the tail end of BAUDOT

[22:03] <masak> lizmat: even so, if you really liked brackets, 6 bits could get you 32 pairs of 'em

[22:03] <lizmat> but no more letters  :-)

[22:03] <tadzik> well, if lisp taught us anything... who needs letters :P

[22:12] <masak> not sure that was the lesson of Lisp :P

[22:13] <masak> sure, with De Bruijn notation I guess you can get rid of letters

[22:26] <Geth> ¦ roast: 0bca7906b7 | (Zoffix Znet)++ | S32-list/toggle.t

[22:26] <Geth> ¦ roast: Spec .toggle

[22:26] <Geth> ¦ roast:

[22:26] <Geth> ¦ roast: Rakudo impl: https://github.com/rakudo/rakudo/commit/78caeb6bceb5ab99

[22:26] <Geth> ¦ roast:              https://github.com/rakudo/rakudo/commit/e7c0a64475370589

[22:26] <Geth> ¦ roast:

[22:26] <Geth> ¦ roast: Closes https://github.com/perl6/roast/issues/372

[22:26] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/0bca7906b7

[22:26] <Geth> ¦ rakudo: cc19507aba | (Zoffix Znet)++ | t/spectest.data

[22:26] <Geth> ¦ rakudo: Add S32-list/toggle.t to list of test files

[22:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cc19507aba

[22:33] <lizmat> Zoffix++

[22:53] <Geth> ¦ specs: 5e5a0c5dba | (Zoffix Znet)++ (committed using GitHub Web editor) | html/perl-with-historical-message.css

[22:53] <Geth> ¦ specs: Center <body>

[22:53] <Geth> ¦ specs:

[22:53] <Geth> ¦ specs: Getting a neck cramp reading left-aligned 730px <body> on 1440p/27" monitor

[22:53] <Geth> ¦ specs: review: https://github.com/perl6/specs/commit/5e5a0c5dba

[23:02] <AlexDaniel> 🖕 RT. Pressed the button twice accidentally, it submitted my comment twice. 🤦

[23:11] <lizmat> afk&
