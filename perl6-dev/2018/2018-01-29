[00:35] <japhb> .tell Zoffix In Part I of https://rakudo.party/post/Perl-6-Core-Hacking-QASTalicious -- Second and following examples under "Executing QAST Trees" use SVal instead of NVal for native nums.  Also, under "Mutating QAST Nodes", typo: "clarifty".

[00:35] <yoleaux> japhb: I'll pass your message to Zoffix.

[08:49] <[Tux]> Rakudo version 2018.01-51-gbb9224666 - MoarVM version 2018.01-31-ge813f06c3

[08:49] <[Tux]> csv-test-xs-20      0.450 -  0.476

[08:49] <[Tux]> csv-ip5xs           0.952 -  0.987

[08:49] <[Tux]> test-t --race       1.085 -  1.264

[08:49] <[Tux]> test-t              2.497 -  2.571

[08:49] <[Tux]> csv-ip5xs-20       10.807 - 10.819

[08:49] <[Tux]> test               10.550 - 10.873

[08:49] <[Tux]> csv-parser         11.215 - 11.486

[08:49] <[Tux]> test-t-20 --race   16.204 - 16.278

[08:49] <[Tux]> test-t-20          45.660 - 46.622

[09:47] <Geth> ¦ rakudo/compiled-hyper-dispatch: 77fb61a719 | (Zoffix Znet)++ | 2 files

[09:47] <Geth> ¦ rakudo/compiled-hyper-dispatch: Compile plain dispatch:<hyper> directly into call sites

[09:47] <Geth> ¦ rakudo/compiled-hyper-dispatch:

[09:47] <Geth> ¦ rakudo/compiled-hyper-dispatch: Stick Mu.dispatch:<hyper>'s code directly into place where it's used. This

[09:47] <Geth> ¦ rakudo/compiled-hyper-dispatch: lets us avoid dealing with parameter Captures, thus we cache the dispatch.

[09:47] <Geth> ¦ rakudo/compiled-hyper-dispatch: However, as a downside we create two Routines for each site with `».`

[09:47] <Geth> ¦ rakudo/compiled-hyper-dispatch:

[09:47] <Geth> ¦ rakudo/compiled-hyper-dispatch: Perf boosts increases the more candidates the called method has and the

[09:47] <Geth> ¦ rakudo/compiled-hyper-dispatch: <…commit message has 5 more lines…>

[09:47] <Geth> ¦ rakudo/compiled-hyper-dispatch: review: https://github.com/rakudo/rakudo/commit/77fb61a719

[09:49] <Zoffix> .ask jnthn Would you review this commit in a branch I made? https://github.com/rakudo/rakudo/commit/77fb61a719 It looks a bit nutty, especially the whole block-per-».-site thing and the perf boost isn't amazing. I think we can get the same benefits by improving slurpy dispatch caching instead.

[09:49] <yoleaux> Zoffix: I'll pass your message to jnthn.

[10:26] <lizmat> Files=1233, Tests=76124, 300 wallclock secs (14.72 usr  5.07 sys + 2057.38 cusr 199.14 csys = 2276.31 CPU)

[10:27] <lizmat> and another 11 seconds less than yesterday  :-)

[10:46] <dogbert2> test.t below 2.5, another milestone

[11:16] <Geth> ¦ rakudo: ff31f0a30d | (Zoffix Znet)++ | 2 files

[11:16] <Geth> ¦ rakudo: Unpack basic dispatch:<var> call to call its callable directly

[11:16] <Geth> ¦ rakudo:

[11:16] <Geth> ¦ rakudo: Doesn't apply to whatevercurried or more complex variants (like ».&)

[11:16] <Geth> ¦ rakudo:

[11:16] <Geth> ¦ rakudo: - 2.6x boost for .&uc

[11:16] <Geth> ¦ rakudo: - 12.2x boost for .&substr

[11:16] <Geth> ¦ rakudo: - 43x boost for 13-candidate multi

[11:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ff31f0a30d

[11:20] <AlexDaniel> oh wow

[11:22] <jnthn> :)

[11:22] <jnthn> That ones a relative no-brainer :)

[11:22] <jnthn> The hyper one expands quite bigly...#

[11:22] <jnthn> But I guess it's worth it also :)

[11:39] <jnthn> going to lunch/rest a bit, bbl

[11:39] <jnthn> oops, wrong window :)

[11:39] <jnthn> Well, I guess it sorta applies :P

[11:45] <psch> ooc, in how far is RT deprecated by now?

[11:45] <psch> as in, should i stop commenting on not-broken-anymore bugs there because no one really pays attention anymore, or..?

[11:47] <lizmat> psch: they're still taken into account, afaik :-)

[11:48] <psch> lizmat: alright, thanks.  guess i got at least one more "this isn't broken anymore, apparently" to write :)

[11:49] <lizmat> psch++

[11:50] <AlexDaniel> psch: perhaps it will be deprecated once we have 0 tickets there

[11:50] <AlexDaniel> open ones of course

[11:50] <psch> AlexDaniel: that would make sense

[11:50] <psch> ...maybe i should bug someone about at least closing privs on RT by now then :)

[11:53] <AlexDaniel> [Coke] ?

[11:53] <AlexDaniel> buggable: bugs

[11:53] <buggable> AlexDaniel, Total: 1520; 6.D: 1; 9999: 7; @LARRY: 34; BOGUSTEST: 1; BOOTSTRAP: 4; BUG: 533; BUILD: 11; CONC: 38; DOCS: 1; EXOTICTEST: 4; FLAP: 1; GLR: 3; IO: 18; JVM: 46; LHF: 5; LTA: 165; MATH: 6; META: 2; MOAR: 2; MOLD: 100; NATIVECALL: 22; NYI: 62; OO: 13; OPTIMIZER: 7; OSX: 2; PARSER: 4; PERF: 26; PERFTEST: 1; POD: 17; PRECOMP: 19; REGEX: 47;

[11:53] <buggable> AlexDaniel, REGRESSION: 35; REPL: 6; RFC: 60; RT: 2; SECURITY: 2; SEGV: 29; SEVERE: 11; SINK: 1; SITE: 1; SPESH: 1; STAR: 7; TESTCOMMITTED: 11; TESTNEEDED: 31; TODO: 11; UNI: 26; UNTAGGED: 307; WEIRD: 6; WINDOWS: 6; See http://fail.rakudo.party/ for details

[11:53] <AlexDaniel> so we have 1520 tickets there, and 116 already on github

[11:55] <AlexDaniel> reportable6: 2017-10-29T11:13:12Z 2018-01-29T00:00:00Z

[11:55] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[11:56] <AlexDaniel> hey reportable6, you know that I can count up to 40, right?

[11:58] <AlexDaniel> reportable6: soo?

[11:59] <AlexDaniel> :S

[12:00] <AlexDaniel> I noticed that on rakudo HEAD some bots don't manage to finish some of the tasks as quickly as they used to

[12:00] <AlexDaniel> still investigating though

[12:00] <AlexDaniel> but at least quotable is affected, and now I see that reportable too probably

[12:01] <AlexDaniel> ok robot, here's something that you were able to do previously

[12:01] <AlexDaniel> reportable6: 2018-01-15T00:00:00Z 2018-01-22T00:00:00Z

[12:01] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[12:02] <AlexDaniel> ok this no longer works

[12:03] <AlexDaniel> OK… will take a look later

[12:03] <AlexDaniel> fwiw https://github.com/perl6/whateverable/issues/277

[12:25] <dogbert2> reportable6: report your problems :-)

[12:59] <dogbert2> .tell Zoffix shouldn't we be able to close RT #127135? There seems to be quite a few tests in S05-substitution/subst.t

[12:59] <yoleaux> dogbert2: I'll pass your message to Zoffix.

[13:00] <synopsebot> RT#127135 [open]: https://rt.perl.org/Ticket/Display.html?id=127135 [BUG] Infinite Loop with missing second arg on .subst-mutate 

[14:58] <Geth> ¦ star: 7470b40591 | (Steve Mynott)++ | tools/star/release-guide.pod

[14:58] <Geth> ¦ star: instructions for generating detached GPG signature and SHA256 files

[14:58] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/7470b40591

[15:09] <Geth> ¦ star: 600f7d0505 | (Steve Mynott)++ | tools/star/release-guide.pod

[15:09] <Geth> ¦ star: warning about tag signing ui

[15:09] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/600f7d0505

[15:39] <stmuk> http://rakudo.org/2018/01/29/announce-rakudo-star-release-2018-01/

[15:48] <lizmat> stmuk++

[16:27] <tbrowder> AlexDaniel: I closed the nqp detabify PR and will resubmit with a tidier commit branched from the current master branch.  Do you still want all, or should I make each source file a separate PR?

[16:58] <AlexDaniel> no, all in one commit

[17:33] <tbrowder> ok

[18:55] <lizmat> .tell tbrowder I think it would be appropriate if you also made a PR to add yourself to CREDITS  :-)

[18:55] <yoleaux> lizmat: I'll pass your message to tbrowder.

[19:24] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/01/29/2018-05-mille-plus-modules/

[19:39] <jnthn> lizmat++ # weekly

[19:39] <jnthn> lizmat: Enjoy your PR&R! :)

[19:40] <lizmat> I will

[19:58] <samcv> lizmat++

[21:27] <Geth> ¦ rakudo: tbrowder++ created pull request #1452: add myself per invitation from @lizmat

[21:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1452

[21:27] <Geth> ¦ rakudo: 0abbd636ea | (Tom Browder)++ | CREDITS

[21:27] <Geth> ¦ rakudo: add myself per invitation from @lizmat

[21:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0abbd636ea

[21:27] <Geth> ¦ rakudo: f89a719509 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | CREDITS

[21:27] <Geth> ¦ rakudo: Merge pull request #1452 from tbrowder/add2credits

[21:27] <Geth> ¦ rakudo:

[21:27] <Geth> ¦ rakudo: add myself per invitation from @lizmat

[21:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f89a719509

[21:31] <tbrowder> lizmat: don’t know if you remember, but i met you in one of damian’

[21:31] <yoleaux> 18:55Z <lizmat> tbrowder: I think it would be appropriate if you also made a PR to add yourself to CREDITS  :-)

[21:31] <lizmat> yes tbrowder, I remember  :-)

[21:31] <tbrowder> damian’s classes at YAPC::NA 2016.

[21:33] <tbrowder> and i got some perl swag from you and wendy, and i gave you both some perl 6 stickers i designed.

[21:33] <lizmat> that last part I forgot  :-(

[21:34] <lizmat> or did you give a bunch to us to give away ?

[21:35] <tbrowder> no, two for you two. i only had about 20 and was handing them out to mostly famous perl folks i met.

[21:43] <lizmat> then I think it's still on my previous MBP  :-)

[22:23] <tbrowder> i found a png image of the sticker, any way to put it here?

[22:30] <Geth> ¦ rakudo: taboege++ created pull request #1454: Fix Iterator.Rotor when cycle contains Whatever or Inf

[22:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1454

[22:32] <Geth> ¦ roast: taboege++ created pull request #382: Add tests for List.rotor with Whatever and Inf

[22:32] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/382

[22:44] <Geth> ¦ roast: fa3dea758f | (Tobias Boege)++ | S32-list/rotor.t

[22:44] <Geth> ¦ roast: Add tests for List.rotor with Whatever and Inf

[22:44] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/fa3dea758f

[22:44] <Geth> ¦ roast: c12f15995f | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | S32-list/rotor.t

[22:44] <Geth> ¦ roast: Merge pull request #382 from taboege/rotor-whatever

[22:44] <Geth> ¦ roast:

[22:44] <Geth> ¦ roast: Add tests for List.rotor with Whatever and Inf

[22:44] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c12f15995f

[22:58] <psch> i'd like thoughts on the (as of now) last few evals in #perl6, https://irclog.perlgeek.de/perl6/2018-01-29#i_15753659 onwards

[22:59] <psch> naming a potential typed exception is probably the least concern, but i'm not sure if pblock in reduce makes sense or whether 'red' and 'tri' as parameters to infixish are somehow transferable

[22:59] <psch> i do think the TTIAR is LTA, in any case, and adding a typed exception there seems easy enough

[23:52] <Zoffix> psch: what's your RT email? I can give you ticket privs

[23:55] <Zoffix> dogbert2: I don't see that ticket covered in subst.t

[23:56] <Zoffix> Well, this, kinda: https://github.com/perl6/roast/blob/master/S05-substitution/subst.t#L628 since that was hanging due to the same cause, but there's no ticket reference on that test.

[23:57] <Geth> ¦ roast: 6c54594dc9 | (Zoffix Znet)++ (committed using GitHub Web editor) | S05-substitution/subst.t

[23:57] <Geth> ¦ roast: Mark ticket on test

[23:57] <Geth> ¦ roast:

[23:57] <Geth> ¦ roast: RT#127135: https://rt.perl.org/Ticket/Display.html?id=127135

[23:57] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6c54594dc9

[23:57] <synopsebot> RT#127135 [open]: https://rt.perl.org/Ticket/Display.html?id=127135 [BUG] Infinite Loop with missing second arg on .subst-mutate 

[23:58] <Zoffix> Closed./
