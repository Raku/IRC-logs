[01:26] <jdv79> did Zoffix not say he was gonna peace out for a while yet i still see stuff from him.

[01:26] <jdv79> he cant stop!

[01:28] <Zoffix> Nah, I'm playing Fallout 4 instead of fixing R#1533

[01:28] <synopsebot> R#1533 [open]: https://github.com/rakudo/rakudo/issues/1533 [RFC][regression][⚠ blocker ⚠] /proc/…/status can no longer be read line by line

[01:28] <Zoffix> That's relaxing.

[01:30] <MasterDuke> is 4 the newest one?

[01:30] <yoleaux> 16 Feb 2018 07:25Z <brrt> MasterDuke: to be honest I'd expect not

[01:30] <Zoffix> Yeah

[01:30] <jdv79> hahaha!

[01:31] <jdv79> take a vaca man!  downtime is good for the self.

[02:32] <Geth> ¦ nqp: tbrowder++ created pull request #416: update docs with more information

[02:32] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/416

[03:07] <AlexDaniel> omg, that's probably the most difficult issue I had to debug :(

[03:07] <AlexDaniel> I'm three modules deep now…

[03:12] <AlexDaniel> although, well, it's probably more annoying than difficult

[03:32] <AlexDaniel> whew!

[03:33] <AlexDaniel> 6c: https://gist.githubusercontent.com/AlexDaniel/9a48442edbfee6a6d56f237dbb74587d/raw/901eb4d580dcd35bbb3be6877bc5020395541138/%25C2%25AB%257B%257D%25C2%25BB.p6

[03:33] <committable6> AlexDaniel, Successfully fetched the code from the provided URL.

[03:34] <committable6> AlexDaniel, https://gist.github.com/bf42bf14c4d02dabf995acc8e4809549

[03:34] <AlexDaniel> bisect: https://gist.githubusercontent.com/AlexDaniel/9a48442edbfee6a6d56f237dbb74587d/raw/901eb4d580dcd35bbb3be6877bc5020395541138/%25C2%25AB%257B%257D%25C2%25BB.p6

[03:34] <bisectable6> AlexDaniel, Successfully fetched the code from the provided URL.

[03:34] <bisectable6> AlexDaniel, Bisecting by output (old=2015.12 new=beaad7b) because on both starting points the exit code is 0

[03:34] <AlexDaniel> whoops, wrong channel

[03:34] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/5122ed84d14717f350ccac195e1d856b

[03:34] <bisectable6> AlexDaniel, (2018-01-26) https://github.com/rakudo/rakudo/commit/1ee89b54074e80c0753a120d679c6265bd8d5d1f

[03:39] <AlexDaniel> kk R#1538

[03:39] <synopsebot> R#1538 [open]: https://github.com/rakudo/rakudo/issues/1538 [regression][⚠ blocker ⚠] Miscompilation of blocks inside interpolating quote-words

[03:39] * AlexDaniel calls it a day

[04:09] <Zoffix> yeah, a QAST::Block gets migrated when it shouldn't

[04:10] * Zoffix is too sleepy to think about it ATM

[04:10] <Zoffix> Gonna fix it after a power cycle.

[04:10] <Zoffix> ZofBot: prep the power-down chambers!

[04:10] <ZofBot> Zoffix, Half an hour later, in the cab going home, Minnie, half asleep, was aroused by a sudden stiffening of the arm that encircled her waist and a sudden snort close to her ear

[04:18] <Zoffix> ah, the parens in the code make it lose in_stmt_mod ann

[04:21] <Zoffix> well, not lose, but have it set at zero

[04:29] * Zoffix stresstests a fix

[04:45] <Geth> ¦ rakudo: 31ab86838c | (Zoffix Znet)++ | src/Perl6/Grammar.nqp

[04:45] <Geth> ¦ rakudo: Fix propagation of in_stmt_mod dynvar value

[04:45] <Geth> ¦ rakudo:

[04:45] <Geth> ¦ rakudo: Fixes R#1538 https://github.com/rakudo/rakudo/issues/1538

[04:45] <Geth> ¦ rakudo:

[04:45] <Geth> ¦ rakudo: We reset $*IN_STMT_MOD to zero on each statement, but inside

[04:45] <Geth> ¦ rakudo: a statement mod we can begin a new statement, like what happens

[04:45] <synopsebot> R#1538 [open]: https://github.com/rakudo/rakudo/issues/1538 [regression][⚠ blocker ⚠] Miscompilation of blocks inside interpolating quote-words

[04:45] <Geth> ¦ rakudo: in the ticket, when parens are added around the stuff.

[04:45] <Geth> ¦ rakudo:

[04:45] <Geth> ¦ rakudo: Fix by setting it to the value of $*IN_STMT_MOD of the caller

[04:45] <Geth> ¦ rakudo: (we still declare a new $*IN_STMT_MOD dynvar, so that the changes

[04:45] <Geth> ¦ rakudo: we make to it inside a statement kept restricted to just it)

[04:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/31ab86838c

[04:46] <Geth> ¦ roast: 263a35999f | (Zoffix Znet)++ | MISC/bug-coverage.t

[04:46] <Geth> ¦ roast: Test closure scoping in statement mod

[04:46] <Geth> ¦ roast:

[04:46] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1538 R#1538

[04:46] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/31ab86838c

[04:46] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/263a35999f

[04:46] <Zoffix> *now* I can sleep :D

[05:08] <MasterDuke> Zoffix++

[05:25] <travis-ci> Rakudo build failed. Zoffix Znet 'Fix propagation of in_stmt_mod dynvar value

[05:25] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/342651889 https://github.com/rakudo/rakudo/compare/beaad7b979f9...31ab86838c31

[05:25] <buggable> Failed to fetch build data

[06:07] <travis-ci> Rakudo build passed. Zoffix Znet 'Fix propagation of in_stmt_mod dynvar value

[06:07] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/342651889 https://github.com/rakudo/rakudo/compare/beaad7b979f9...31ab86838c31

[06:07] <buggable> Failed to fetch build data

[10:29] <[Tux]> Rakudo version 2018.01-205-g31ab86838 - MoarVM version 2018.01-94-gc7774e37d

[10:29] <[Tux]> csv-test-xs-20      0.423 -  0.454

[10:29] <[Tux]> csv-ip5xs           0.807 -  0.811

[10:29] <[Tux]> test-t --race       1.077 -  1.150

[10:29] <[Tux]> test-t              2.491 -  2.576

[10:29] <[Tux]> csv-ip5xs-20        7.716 -  7.718

[10:29] <[Tux]> test                8.956 -  9.038

[10:29] <[Tux]> csv-parser         11.770 - 12.014

[10:29] <[Tux]> test-t-20 --race   15.860 - 15.860

[10:29] <[Tux]> test-t-20          46.186 - 47.368

[10:35] <Geth> ¦ nqp: f27a4abc9a | (Tom Browder)++ | 3 files

[10:35] <Geth> ¦ nqp: update docs with more information

[10:35] <Geth> ¦ nqp:

[10:35] <Geth> ¦ nqp: changes to file "docs/built-ins.md":

[10:35] <Geth> ¦ nqp:

[10:35] <Geth> ¦ nqp: + add undocumented subs

[10:35] <Geth> ¦ nqp:

[10:35] <Geth> ¦ nqp: + add undocumented methods on a file handle

[10:35] <Geth> ¦ nqp: <…commit message has 8 more lines…>

[10:35] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/f27a4abc9a

[10:35] <Geth> ¦ nqp: 11ba4bad13 | (Tom Browder)++ (committed using GitHub Web editor) | 3 files

[10:35] <Geth> ¦ nqp: Merge pull request #416 from tbrowder/update-docs

[10:35] <Geth> ¦ nqp:

[10:35] <Geth> ¦ nqp: update docs with more information

[10:35] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/11ba4bad13

[11:21] <pmurias> Zoffix: I guess I need to resume working on my get-rid-of-migration branch, as the whole block migration is an ultra ugly hack and a nest of bugs

[11:33] <Geth> ¦ roast: d9d4457e35 | usev6++ | S32-io/pipe.t

[11:33] <Geth> ¦ roast: [JVM] Skip hanging test

[11:33] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d9d4457e35

[13:00] <Geth> ¦ nqp: tbrowder++ created pull request #417: rename IO sub "spew" to "spurt"

[13:00] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/417

[13:13] <Zoffix> pmurias: yeah, it's pretty fragile.

[15:18] <dogbert17> 'No int attribute reference type registered for current HLL'

[15:18] <dogbert17> hmm

[15:19] <dogbert17> when running MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 ./perl6 t/spec/S32-num/complex.t

[15:25] <Geth> ¦ nqp: jstuder-gh++ created pull request #418: Rakudo RT#102994: Add flag indicating HLL init status in StaticInfo

[15:25] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/418

[15:25] <synopsebot> RT#102994 [open]: https://rt.perl.org/Ticket/Display.html?id=102994 [BUG] State variables are never initialized if the first call of the containing block does not reach them

[15:25] <Geth> ¦ rakudo: jstuder-gh++ created pull request #1539: RT#102994: State init vars if not set on first pass

[15:25] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1539

[15:31] <Zoffix> :/ ZScript doesn't seem to work right when syncing MoarVM files to VM.. after syncing, I tell it to build MoarVM on the VM, but it tells me it's the latest already :/

[15:32] <Zoffix> oh nm... I just had another debug print in code

[15:34] <AlexDaniel> o/

[15:34] <Zoffix> |

[15:34] <Zoffix> __

[15:35] <Zoffix> need to also to teach it to support multiple build dirs, so I could have a judo build along with moarm rakudo

[15:39] <Zoffix> I'm making it so that .eof on empty files returns False until a read is performed.

[15:39] <Zoffix> I hope that's sane.

[15:44] <Zoffix> ZOFVM: Files=1289, Tests=153228, 153 wallclock secs (22.06 usr  3.56 sys + 3288.73 cusr 164.22 csys = 3478.57 CPU)

[15:55] <Geth> ¦ rakudo: 6ec3d7ce30 | (Aleks-Daniel Jakimenko-Aleksejev)++ | src/vm/moar/ops/container.c

[15:55] <Geth> ¦ rakudo: Revert "Clean up handler successors after throwish ops become non-throwing"

[15:55] <Geth> ¦ rakudo:

[15:55] <Geth> ¦ rakudo: This reverts commit baa1393b6d51eef60cca06cd6bb22574f0a30cd3.

[15:55] <Geth> ¦ rakudo:

[15:55] <Geth> ¦ rakudo: Rhesolves #1535.

[15:55] <synopsebot> RAKUDO#1535 [open]: https://github.com/rakudo/rakudo/issues/1535 [regression][⚠ blocker ⚠] Some difference between implicit and explicit return

[15:55] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6ec3d7ce30

[15:58] <Zoffix> ZOFFLOP nqp: t/concurrency/01-thread.t

[16:04] <Zoffix> FFS, again

[16:05] <Zoffix> it's killing zscript trying to build stuff -_-

[16:10] <dogbert17> AlexDaniel: do you get an error if you run MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 ./perl6 t/spec/S32-num/complex.t ?

[16:16] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 HEAD chdir ‘sandbox/roast’; run ‘perl6’, ‘S32-num/complex.t’

[16:17] <committable6> AlexDaniel, https://gist.github.com/350167fced9b7d45888bcb4427b97e2d

[16:18] <AlexDaniel> dogbert17: what error are we looking for?

[16:20] <dogbert17> No int attribute reference type registered for current HLL

[16:22] <dogbert17> I get it after a bunch of 'WARNING: unhandled Failure detected in DESTROY.'

[16:23] <Zoffix> (that last part is R#1502 )

[16:23] <synopsebot> R#1502 [open]: https://github.com/rakudo/rakudo/issues/1502 Failure.DESTROY warning sometimes warns when Failure was technically handled

[16:25] <AlexDaniel> dogbert17: locally same output, some WARNINGs but otherwise everything is ok

[16:26] <dogbert17> strange, I'd better rebuild with the latest changes, you reverted something

[16:27] <dogbert17> it's like this

[16:27] <dogbert17> No int attribute reference type registered for current HLL

[16:27] <dogbert17> in any  at ./blib/Perl6/BOOTSTRAP.moarvm line 1

[16:27] <dogbert17> in sub proclaim at /home/dogbert/repos/rakudo/install/share/perl6/sources/C712FE6969F786C9380D643DF17E85D06868219E (Test) line 705

[16:27] <dogbert17> in sub is at /home/dogbert/repos/rakudo/install/share/perl6/sources/C712FE6969F786C9380D643DF17E85D06868219E (Test) line 174

[16:27] <dogbert17> in block <unit> at t/spec/S32-num/complex.t line 219

[16:31] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 HEAD^ chdir ‘sandbox/roast’; run ‘perl6’, ‘S32-num/complex.t’

[16:31] <committable6> AlexDaniel, https://gist.github.com/daf5cfa1034bb9150e8d619a0a487a5f

[16:32] <AlexDaniel> last revert makes no difference it seems

[16:34] <dogbert17> gah, I guess we'd better ignore it then until I can come up with something more reliable

[16:35] <dogbert17> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 HEAD^ chdir ‘sandbox/roast’; run ‘perl6’, ‘S32-num/complex.t’

[16:35] <committable6> dogbert17, https://gist.github.com/4849e77d44dd28d1349b19b27363a574

[16:37] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 HEAD~5..HEAD chdir ‘sandbox/roast’; run ‘perl6’, ‘S32-num/complex.t’

[16:37] <committable6> AlexDaniel, https://gist.github.com/d2577b9a0ace701f14e9c93bb14902b3

[16:40] <timotimo> looking forward to comments on my perl6-users mailing list thread

[16:54] <dogbert17> added gdb output to G#1540

[16:55] <dogbert17> i.e. R#1540

[16:55] <synopsebot> R#1540 [open]: https://github.com/rakudo/rakudo/issues/1540 [SEGV] Some snippet that segfaults

[16:55] <dogbert17> perhaps something for timotimo

[16:57] <timotimo> it's weird that it'd crash on that line; does the object seem sane?

[16:59] <dogbert17> timotimo: no

[16:59] <dogbert17> (gdb) p obj

[16:59] <dogbert17> $1 = (MVMObject *) 0xffffffff

[16:59] <timotimo> oh, yeah, that doesn't look right

[17:00] <timotimo> can you try MVM_dump_bytecode(tc)?

[17:00] <dogbert17> (gdb) p MVM_dump_bytecode(tc)

[17:01] <dogbert17> 00000      sp_getarg_o  loc_0_obj, 0

[17:01] <dogbert17> 00001      set          loc_2_obj, loc_0_obj

[17:01] <dogbert17> 00002      wval         loc_3_obj, 0, 12

[17:01] <dogbert17> 00003      sp_p6ogetvc_o loc_4_obj, loc_2_obj, 4, sslot(1)

[17:01] <dogbert17> 00004      sp_decont    loc_4_obj, loc_4_obj

[17:01] <dogbert17> 00005   -> return_o     loc_4_obj

[17:01] <dogbert17> $2 = void

[17:01] <timotimo> okay so we were grabbing data off of an offset from that other object

[17:02] <timotimo> that wval is probably left-over un-eliminated stuff from before that opt

[17:03] <timotimo> is this supposed to be the "instance" method?

[17:03] <timotimo> oh, no, it's foo

[17:03] <timotimo> actually something called from foo. could be the dump_bytecode is inaccurate

[17:04] <timotimo> (it's unreliable for some reason i haven't figured out properly yet)

[17:06] <dogbert17> timotimo: setting MVM_SPESH_DISABLE=1 make the SEGV go away

[17:06] <dogbert17> *makes

[17:06] <timotimo> this is on all master commits?

[17:07] <timotimo> looks like

[17:08] <timotimo> looks like the bytecode you dumped is the supplier method

[17:08] <dogbert17> aha

[17:11] <timotimo> interestingly, locally it crashes already at the p6ogetvc_o op

[17:12] <dogbert17> timotimo: I'm on 32 bit atm if that makes a difference

[17:14] <timotimo> so the code is trying to call a method that requires an instance on a type object and that explodes, right?

[17:15] <timotimo> and it totally is a type object

[17:15] <timotimo> so spesh has done an optimization it didn't get away with

[17:16] <Geth> ¦ roast: 96209b89af | usev6++ | 3 files

[17:16] <Geth> ¦ roast: [JVM] Fudge some newly added tests

[17:16] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/96209b89af

[17:20] <dogbert17> interesting

[17:20] <dogbert17> do you have to check the spesh logs?

[17:20] <timotimo> i'm checking them as we speak

[17:23] <timotimo> i don't actually see the accessor method in here at all though

[17:24] <timotimo> ah, that's because i was looking for instance where i should have been looking for supplier

[17:24] <timotimo> well that's bad

[17:25] <timotimo> looks like we just turn an access into an optimized access even when we *know* the object is a type object anyway

[17:29] <timotimo> cool.

[17:29] <timotimo> this might be the right fix

[17:30] * timotimo makes stresstest

[17:30] <Zoffix> bartolin: you around?

[17:31] <Zoffix> bartolin: what's wrong with this line in Java: `eof = fc.size() > 0 && fc.position() >= fc.size();`. I would've though it'd set `eof` to either `true` or `false`, but some tests fail. But if I rewrite it as `if (eof = fc.size() > 0 && fc.position() >= fc.size()) eof = true else eof = false` then it works fine

[17:33] <timotimo> dogbert17: can you run all the necessary tests with the commit i just pushed to moarvm to check if it's sane? i gotta go AFK right now

[17:42] <dogbert17> timotimo: will do, thx

[17:50] <Zoffix> gah... last compile stage for JVM; if the bug ain't fixed on it, I'm leaving it. This is too annoying.

[18:04] <Zoffix> right. still broken. it can get bent

[18:04] <Zoffix> waste of time

[18:13] <Geth> ¦ roast: ed59a994cc | (Zoffix Znet)++ | S32-io/io-cathandle.t

[18:13] <Geth> ¦ roast: Fix EOF proptests on CatHandle with empty files

[18:13] <Geth> ¦ roast:

[18:13] <Geth> ¦ roast: On zero-size files, we need to perform at least one read for EOF

[18:13] <Geth> ¦ roast: to be set.

[18:13] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ed59a994cc

[18:13] <timotimo> dogbert17: it looks like i got a passing stresstest locally, except for a bug that must have been fixed since i last pulled rakudo

[18:20] <Geth> ¦ nqp: 43d4336974 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[18:20] <Geth> ¦ nqp: [MoarVM Bump] Brings 2 commits

[18:20] <Geth> ¦ nqp:

[18:20] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.01-94-gc7774e37d...2018.01-96-g8d94732

[18:20] <Geth> ¦ nqp: 8d94732 Fix eof detection on zero-size files

[18:20] <Geth> ¦ nqp: 720705d don't optimize getattr unless known concrete

[18:20] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/43d4336974

[18:20] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.01-94-gc7774e37d...2018.01-96-g8d94732

[18:20] <Geth> ¦ rakudo: af4dfe827c | (Zoffix Znet)++ | tools/build/NQP_REVISION

[18:20] <Geth> ¦ rakudo: [NQP Bump] Brings 3 commits

[18:20] <Geth> ¦ rakudo:

[18:20] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.01-96-gd3794d7a1...2018.01-99-g43d4336

[18:20] <Geth> ¦ rakudo: 43d4336 [MoarVM Bump] Brings 2 commits

[18:20] <Geth> ¦ rakudo: 11ba4ba Merge pull request #416 from tbrowder/update-docs

[18:20] <Geth> ¦ rakudo: f27a4ab update docs with more information

[18:20] <Geth> ¦ rakudo:

[18:20] <Geth> ¦ rakudo: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.01-94-gc7774e37d...2018.01-96-g8d94732

[18:20] <Geth> ¦ rakudo: 8d94732 Fix eof detection on zero-size files

[18:20] <Geth> ¦ rakudo: 720705d don't optimize getattr unless known concrete

[18:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/af4dfe827c

[18:20] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.01-96-gd3794d7a1...2018.01-99-g43d4336

[18:21] <Zoffix> I got a clean stresstest when bumps were being made

[18:21] <dogbert17> timotimo: agreed, stresstest worked fine on my 32 bit vm

[18:22] <timotimo> great

[18:22] <timotimo> is this getting into the release that's almost upon us?

[18:22] <Geth> ¦ roast: 3ac8e0b8ae | (Zoffix Znet)++ | S16-io/eof.t

[18:22] <Geth> ¦ roast: Test EOF on zero-size files and reads on /proc

[18:22] <Geth> ¦ roast:

[18:22] <Geth> ¦ roast: Covers https://github.com/rakudo/rakudo/issues/1533 R#1533

[18:22] <Geth> ¦ roast:

[18:22] <Geth> ¦ roast: Rakudo fix: https://github.com/MoarVM/MoarVM/commit/8d94732aad

[18:22] <Geth> ¦ roast:             https://github.com/perl6/nqp/commit/43d4336974

[18:22] <synopsebot> R#1533 [open]: https://github.com/rakudo/rakudo/issues/1533 [RFC][regression][⚠ blocker ⚠] /proc/…/status can no longer be read line by line

[18:22] <Geth> ¦ roast:             https://github.com/rakudo/rakudo/commit/af4dfe827c

[18:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3ac8e0b8ae

[18:24] <dogbert17> timotimo: I believe so yes

[18:24] <AlexDaniel> timotimo: yes definitely

[18:25] <AlexDaniel> I mean, you answered that question yourself by comitting to master :)

[18:25] <AlexDaniel> Zoffix++

[18:32] <Zoffix> ZOFLOP nqp t/concurrency/01-thread.t

[18:32] <Zoffix> Failed tests:  23-24

[18:35] <timotimo> oh, right

[18:35] <timotimo> well, i committed to moarvm master, but it could have been that the release-intended bump had already happened

[18:35] <timotimo> i couldn't pay much attention :(

[18:36] <AlexDaniel> that's ok, we can always adjust

[18:36] <timotimo> no, it's okay to have that commit in there

[18:36] <AlexDaniel> I mean, if something goes wrong :)

[18:37] <AlexDaniel> timotimo: what's your opinion on https://github.com/rakudo/rakudo/issues/1534 ?

[18:37] <AlexDaniel> timotimo: that's the last official blocker

[18:39] <Zoffix> says SPESH Broken frame: 2402.

[18:40] <bartolin> Zoffix: hmm, the first line looks right to me, too. do you have a gist with the code you tried and the failed tests, maybe?

[18:40] <yoleaux> 20 Jan 2018 13:33Z <psch> bartolin: spectest looks a bit worse than yours at first glance: https://gist.github.com/anonymous/30ba5ed2b03b9dd790088eac2dfe92e2

[18:41] <AlexDaniel> bartolin: https://github.com/rakudo/rakudo/issues/1541

[18:42] <bartolin> ah, thanks. I'll take a look at it later

[18:42] <Zoffix> bartolin: I gave up on it and filed https://github.com/rakudo/rakudo/issues/1541   with that patch, EOF doesn't seem to be detected any more; at least with `./perl6-j -e 'say "starting"; my $fh := IO::CatHandle.new: <f.txt e.txt f2.txt>; "$_".say for $fh.lines'` where f.txt and f2.txt are files with some text and e.txt is an empty file; this is basically golf of first subtest of S32-io/io-cathandle.t

[18:42] <Zoffix> proptests

[19:54] <timotimo> haha, opening those text files in chrome and scrolling past a certain point has mildly hilarious results

[19:55] <Zoffix> ?

[19:56] <Zoffix> It stops rendering text?

[20:04] <timotimo> first rectangular or maybe square portions are all jumbled up

[20:04] <timotimo> then there's almost all black, but white vertical lines in different combinations

[20:04] <Zoffix> I didn't see that on Windows Chrome, though I closed it while it was still loading, 'cause I didn't want it to nom all my RAM

[20:06] <timotimo> right

[21:56] <bartolin> .tell Zoffix i wasn't able to fix the EOF issue on JVM, yet. I *think* we need something like eof_reported in MoarVM, so that 'read' and friends can report back to the FileHandle when they encounter eof. on a related note: if you modify FileChannel.java it should be enough to do 'make install' for nqp -- no need to recompile rakudo to test your changes.

[21:56] <yoleaux> bartolin: I'll pass your message to Zoffix.

[21:59] <Zoffix> bartolin: I thought `eof` attribute was already that, innit? It is set by read methods when they find no more data to read, just like eof_reported on MoarVM

[22:00] <bartolin> Zoffix: yes, but if i'm not mistaken, it's a different instance of 'eof' that is set by read methods

[22:00] <Zoffix> 0.o

[22:01] <bartolin> but take that with a grain of salt, i'm tired and 'll go to bed now

[22:13] <Geth> ¦ 6.d-prep: 6772d4e4a5 | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/FEATURES.md

[22:13] <Geth> ¦ 6.d-prep: Clarify title of the `@` == :D proposal

[22:13] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/6772d4e4a5

[22:39] <AlexDaniel> OK, so right now I'm seeing no issues besides https://github.com/rakudo/rakudo/issues/1534

[22:40] <Zoffix> \o/

[22:40] <AlexDaniel> everything else seems to be alright

[22:41] <AlexDaniel> changelog is already available here: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[22:41] <AlexDaniel> kind of, I still want to tweak it a little bit, but people should feel free to edit things they don't like now

[22:42] <AlexDaniel> (or just tell me what to fix)

[22:52] <Zoffix> AlexDaniel: this was a fix for a bug introed after last release, so I don't think it needs to be in changelog: "Fixed where optimization for Junction args [264a1a27]"  and this one "Added native type post-inc/dec to pre- optimization", if it matters, should say "native `num`". The `int` opt already existed in past. This work just made the int one to not apply to custom user subs and added support for `num`

[22:52] <Zoffix> opt in the process

[22:52] <Zoffix> ooohhhh

[22:52] <Zoffix> And I just now realized this....

[22:53] <Zoffix> m: use nqp; my int32 $x = 42; dd nqp::objprimspec($x)

[22:53] <camelia> rakudo-moar af4dfe827: OUTPUT: «0␤»

[22:53] <Zoffix> m: use nqp; my int32 $x = 42; dd nqp::objprimspec(int32)

[22:53] <camelia> rakudo-moar af4dfe827: OUTPUT: «1␤»

[22:53] <Zoffix> m: use nqp; my int32 $x = 42; dd nqp::objprimspec(int16)

[22:53] <camelia> rakudo-moar af4dfe827: OUTPUT: «1␤»

[22:53] <Zoffix> Oh, nm, I thought different-sized ints had different objprimspec

[22:56] <AlexDaniel> ok

[23:02] <lucasb> AlexDaniel: that's is the full changelog or is it missing the last recent commits?

[23:02] <AlexDaniel> let's see…

[23:03] <lucasb> I didn't see a mention of the feature Zoffix++ implemented: https://github.com/rakudo/rakudo/commit/1dc1f038f1dfef48599be0d42f9f27f000388b26

[23:03] <AlexDaniel> releasable6: changelog https://gist.githubusercontent.com/AlexDaniel/6d78af9b284adffa2b6eda6c9d9d1da0/raw/009372f5802d4a65cd77e664ccd343c909e579e8/gistfile1.txt

[23:03] <releasable6> AlexDaniel, Successfully fetched the code from the provided URL.

[23:03] <releasable6> AlexDaniel, Unknown changelog format

[23:04] <AlexDaniel> releasable6: changelog https://gist.githubusercontent.com/AlexDaniel/6d78af9b284adffa2b6eda6c9d9d1da0/raw/074efa99fd6c8335e7531033d297ea94977bbd50/gistfile1.txt

[23:04] <releasable6> AlexDaniel, Successfully fetched the code from the provided URL.

[23:04] <releasable6> AlexDaniel, 198 out of 207 commits logged

[23:04] <releasable6> AlexDaniel, Details: https://gist.github.com/a334f9d9746de43c6b25334c2103e9cf

[23:04] <AlexDaniel> lucasb: you are right!
