[00:08] <MasterDuke> jdv79: i believe lizmat and TimToady are on the way there and ingy is already

[01:20] *** ggoebel left
[01:20] *** ggoebel joined
[02:48] *** skids joined
[03:21] <Geth> ¦ rakudo: zoffixznet self-assigned &substr.package from the REPL does not return the GLOBAL package but gives an error message. https://github.com/rakudo/rakudo/issues/1925

[04:16] <Geth> ¦ rakudo/post-release-2018.06: 9ea427a36f | (Zoffix Znet)++ | 2 files

[04:16] <Geth> ¦ rakudo/post-release-2018.06: Fix/Test REPL auto-printing of low-level objects

[04:16] <Geth> ¦ rakudo/post-release-2018.06: 

[04:16] <Geth> ¦ rakudo/post-release-2018.06: Fixes https://github.com/rakudo/rakudo/issues/1925 R#1925

[04:16] <Geth> ¦ rakudo/post-release-2018.06: 

[04:16] <Geth> ¦ rakudo/post-release-2018.06: Not all things are Mu and the error in the Issue comes from the

[04:16] <Geth> ¦ rakudo/post-release-2018.06: REPL trying to call .WHERE on the value to figure out whether

[04:16] <synopsebot_> R#1925 [open]: https://github.com/rakudo/rakudo/issues/1925 &substr.package from the REPL does not return the GLOBAL package but gives an error message.

[04:16] <Geth> ¦ rakudo/post-release-2018.06: one of the out-of-band marker values were returned.

[04:16] <Geth> ¦ rakudo/post-release-2018.06: <…commit message has 5 more lines…>

[04:16] <Geth> ¦ rakudo/post-release-2018.06: review: https://github.com/rakudo/rakudo/commit/9ea427a36f

[04:17] <Geth> ¦ rakudo/post-release-2018.06: 64394152cf | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[04:17] <Geth> ¦ rakudo/post-release-2018.06: [NQP Bump] Brings 4 commits

[04:17] <Geth> ¦ rakudo/post-release-2018.06: 

[04:17] <Geth> ¦ rakudo/post-release-2018.06: NQP bump brought: https://github.com/perl6/nqp/compare/2018.05-78-gf8b2d80e5...2018.05-82-g6c450557d

[04:17] <Geth> ¦ rakudo/post-release-2018.06: 6c450557d [MoarVM Bump] 4eda279b5 Fix three memory leaks […]

[04:17] <Geth> ¦ rakudo/post-release-2018.06: e1ff93d5a Stub new atomic ops on the JVM backend

[04:17] <Geth> ¦ rakudo/post-release-2018.06: 11cf77d33 Map two new atomic ops for MoarVM backend

[04:17] <Geth> ¦ rakudo/post-release-2018.06: 6a27f87d2 Bump MOAR_REVISION for new atomic ops

[04:17] <Geth> ¦ rakudo/post-release-2018.06: review: https://github.com/rakudo/rakudo/commit/64394152cf

[04:17] <Geth> ¦ rakudo/post-release-2018.06: 2138197b76 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[04:17] <Geth> ¦ rakudo/post-release-2018.06: Merge branch 'master' into post-release-2018.06

[04:17] <Geth> ¦ rakudo/post-release-2018.06: review: https://github.com/rakudo/rakudo/commit/2138197b76

[05:00] *** skids left
[06:44] *** evalable6 left
[06:44] *** evalable6 joined
[08:40] <AlexDani`> undersightable6: check

[08:40] <undersightable6> AlexDani`, OK! Working on it…

[08:40] *** AlexDani` is now known as AlexDaniel

[09:14] <gfldex> help docs.perl6.org has fallen and can't get up!

[09:25] <AlexDaniel> and not only docs I guess

[09:25] <timotimo> docs.perl6.org looks fine on my end

[09:25] <AlexDaniel> oh, it works now!

[09:46] <gfldex> rounding an Instant (while getting an Instant in the end) is a but cumbersome

[09:46] <gfldex> m: my $n = now; $n = $n.SET-SELF(($n).floor.Rat) + 1; say $n;

[09:46] <camelia> rakudo-moar 64394152c: OUTPUT: «Instant:1529142432␤»

[09:47] <gfldex> adding floor ceiling and round as methods might help

[10:16] <Geth> ¦ rakudo: AlexDaniel self-assigned Regression related to MONKEY-TYPING and spesh-plugins merge https://github.com/rakudo/rakudo/issues/1923

[10:36] *** MasterDuke left
[11:28] *** ExtraCrispy left
[11:33] *** MasterDuke joined
[11:47] *** ufobat_ joined
[11:52] *** llfourn left
[11:57] <Geth> ¦ rakudo: 65dccd8dc1 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[11:57] <Geth> ¦ rakudo: Revert "Use a spesh plugin to optimize .?"

[11:57] <Geth> ¦ rakudo: 

[11:57] <Geth> ¦ rakudo: This reverts commit c6a61f563b478337a6fb6290d0d612d663d60471.

[11:57] <Geth> ¦ rakudo: 

[11:57] <Geth> ¦ rakudo: See #1923 for more info.

[11:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/65dccd8dc1

[11:57] <synopsebot_> RAKUDO#1923 [open]: https://github.com/rakudo/rakudo/issues/1923 [regression][⚠ blocker ⚠] Regression related to MONKEY-TYPING and spesh-plugins merge

[11:57] <Geth> ¦ rakudo/post-release-2018.06: 65dccd8dc1 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[11:57] <Geth> ¦ rakudo/post-release-2018.06: Revert "Use a spesh plugin to optimize .?"

[11:57] <Geth> ¦ rakudo/post-release-2018.06: 

[11:57] <Geth> ¦ rakudo/post-release-2018.06: This reverts commit c6a61f563b478337a6fb6290d0d612d663d60471.

[11:57] <Geth> ¦ rakudo/post-release-2018.06: 

[11:57] <Geth> ¦ rakudo/post-release-2018.06: See #1923 for more info.

[11:57] <Geth> ¦ rakudo/post-release-2018.06: review: https://github.com/rakudo/rakudo/commit/65dccd8dc1

[11:57] <Geth> ¦ rakudo/post-release-2018.06: 2a16dd4212 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[11:57] <Geth> ¦ rakudo/post-release-2018.06: Merge branch 'master' into post-release-2018.06

[11:57] <Geth> ¦ rakudo/post-release-2018.06: review: https://github.com/rakudo/rakudo/commit/2a16dd4212

[11:57] <Geth> ¦ rakudo/post-release-2018.06: 708c132605 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[11:57] <Geth> ¦ rakudo/post-release-2018.06: Revert "Revert "Use a spesh plugin to optimize .?""

[11:57] <Geth> ¦ rakudo/post-release-2018.06: 

[11:57] <Geth> ¦ rakudo/post-release-2018.06: This reverts commit 65dccd8dc1587e822351ae5aa9ee5dc2a122b867.

[11:57] <Geth> ¦ rakudo/post-release-2018.06: review: https://github.com/rakudo/rakudo/commit/708c132605

[11:59] *** MasterDuke left
[12:11] <AlexDaniel> .seen jstuder-gh

[12:11] <yoleaux> I haven't seen jstuder-gh around.

[12:11] <AlexDaniel> .seen jstuder

[12:11] <yoleaux> I saw jstuder 1 Apr 2018 15:51Z in #perl6-dev: <jstuder> yeah, don't understand why it would be performing that op on the iterator itself though

[12:14] <AlexDaniel> some feedback here would be nice: https://github.com/rakudo/rakudo/issues/1891#issuecomment-397753723

[12:15] <AlexDaniel> geekosaur: I think you are more likely to say something about this :) ↑

[12:17] <AlexDaniel> TL;DR `say Signal(0)` should not give random stuff, but according to jstuder this random stuff should probably have value 0

[12:17] <AlexDaniel> so we're sorta blocked by this contradiction

[12:18] <AlexDaniel> and by “random stuff” I mean signals that are irrelevant to the platform you're running on

[12:19] <AlexDaniel> it's a good idea to *not* revert these fixes to signal values, because previously the behavior was blatantly wrong

[12:20] *** llfourn joined
[12:21] <timotimo> anyone got some +1 or -1 on the examples.perl6.org issue? https://github.com/perl6/user-experience/issues/24

[12:24] <AlexDaniel> fwiw https://github.com/perl6/doc/issues/1866

[12:26] <AlexDaniel> timotimo: I guess I'm a bit too radical, but to me it looks like either we improve examples.perl6.org significantly, … or maybe just remove it completely

[12:26] <AlexDaniel> people looking for examples probably go to rosettacode by default

[12:27] <timotimo> really?

[12:27] <timotimo> i hadn't heard of rosettacode before i joined the perl6 community

[12:27] <AlexDaniel> well, when did you join it? :)

[12:27] <timotimo> did it blow up in popularity?

[12:28] <timotimo> i haven't actually seen it mentioned by anybody except perl6ers in the perl6 irc channels

[12:28] <AlexDaniel> I think so, right when I joined I was introduced to rosettacode by somebody else (outside of perl 6 community or perl 6 at all) with “hey look this website is so useful”

[12:30] <jnthn> Hi folks. Anything release-related that I should take a look at?

[12:30] <timotimo> for me "perl6 example" puts rosettacode's Category:Perl6 on the first entry on the second page

[12:31] <AlexDaniel> jnthn: maybe your quick opinion on https://github.com/rakudo/rakudo/issues/1922 and https://github.com/rakudo/rakudo/issues/1891

[12:31] <timotimo> hm, maybe the Category page should have "Perl 6 examples" somewhere other than just the heading to "perl 6 examples needing attention" %)

[12:32] <AlexDaniel> R#1922 I feel like reverting, so not a big deal

[12:32] <synopsebot_> R#1922 [open]: https://github.com/rakudo/rakudo/issues/1922 [regression][⚠ blocker ⚠] Regression after +@ → nqp::elems(@) optimization

[12:33] <AlexDaniel> jnthn++ for asking

[12:33] *** lizmat joined
[12:35] <lizmat> weekly: https://wakelift.de/2018/06/15/no-major-breakthroughs/

[12:35] <notable6> lizmat, Noted!

[12:41] <AlexDaniel> .seen Kaiepi

[12:41] <yoleaux> I saw Kaiepi 10 Jun 2018 23:05Z in #perl6: <Kaiepi> never mind lol

[12:45] <timotimo> but yeah, i'm not against removing examples.perl6.org, though maybe we should see that existing links still work, and have a useful front page that explains the situation

[12:51] <timotimo> losing the cookbook examples would be not so nice, there seems to be a lot there

[13:04] *** MasterDuke joined
[13:06] <Geth> ¦ nqp: c8519b79d7 | (Aleks-Daniel Jakimenko-Aleksejev)++ | src/NQP/Optimizer.nqp

[13:06] <Geth> ¦ nqp: Revert "Make the NQP optimizer convert +@ to nqp::elems(@)"

[13:06] <Geth> ¦ nqp: 

[13:06] <Geth> ¦ nqp: This reverts commit efb316e5504ec6da5653b5d7bc27a85801b362c1.

[13:06] <Geth> ¦ nqp: 

[13:06] <Geth> ¦ nqp: See #1922 for more info.

[13:06] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/c8519b79d7

[13:07] *** travis-ci joined
[13:07] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Privatize delay times cueing in ThreadPoolScheduler'

[13:07] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/390347933 https://github.com/rakudo/rakudo/compare/09a9bbc0ddac...caafcb386520

[13:07] *** travis-ci left
[13:07] <buggable> [travis build above] ✓ All failures are due to: missing build log (6 failures).

[13:07] <Geth> ¦ rakudo: a7bd0bdc91 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[13:07] <Geth> ¦ rakudo: [NQP Bump] c8519b79d Revert "Make the NQP opti […]

[13:07] <Geth> ¦ rakudo: 

[13:07] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.05-82-g6c450557d...2018.05-83-gc8519b79d

[13:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a7bd0bdc91

[13:07] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.05-82-g6c450557d...2018.05-83-gc8519b79d

[13:08] <AlexDaniel> fffffffffff wrong link

[13:08] * lizmat wonders why travis is complaining about such an old commit ?

[13:09] <AlexDaniel> no idea

[13:09] <timotimo> short commit id overlap? :P

[13:12] <timotimo> https://github.com/bradfitz/gitbrute you think this is bad form on an opensource project? ;)

[13:13] *** [TuxCM] joined
[13:17] <AlexDaniel> timotimo: yea pretty bad, doesn't seem to utilize gpu or other means to speed up the search

[13:17] <timotimo> that's not what i mean :)

[13:18] <timotimo> but yeah, it actually uses git porcelain to do the hashing, with git commit --amend

[13:18] <timotimo> when it could probably just dump the commit that's currently there, twiddle the dates around, run a native sha1 on it, repeat

[13:18] <timotimo> even just using the one pull request that makes it use git hash-object or what would let you parallelize it

[13:20] <timotimo> https://github.com/tochev/git-vanity

[13:20] <timotimo> this one uses opencl

[13:20] <jnthn> AlexDaniel: Left notes on both :)

[13:20] <jnthn> Hope that helps some

[13:20] <AlexDaniel> jnthn: thanks ♥

[13:20] <AlexDaniel> timotimo: ok that's better

[13:23] * jnthn afk for a bit

[13:24] <AlexDaniel> “Generally finding a 32-bit (8-symbol) prefix on Radeon HD 7750 takes a minute-two, while a 40-bit one (10-symbol, as displayed by github) should reach 2^40 hashes tried (CDF=0.63) in about 4-8 hours.”

[13:25] <AlexDaniel> 10 symbols in less than a day! Sounds awesome

[13:32] <timotimo> my card does ~360 MH/s

[13:32] *** [TuxCM] left
[13:45] <dogbert17> timotimo: here's an example of a large/broken profile where MVM_SPESH_INLINE_DISABLE=1. https://gist.github.com/dogbert17/2ea5e9408055934f88d7205d83e0422c

[13:46] <timotimo> deep recursion?

[13:47] <dogbert17> possibly yes

[13:49] <timotimo> 94.6k nodes in the call graph it seems like. graphviz will surely give me a good idea of what it looks like

[13:52] <dogbert17> I had to look really hard in order to find something which broke when MVM_SPESH_INLINE_DISABLE=1

[14:00] <timotimo> since the call graph is actually a tree (or multiple trees) maybe there's something out there that is faster than graphviz, but can only correctly render trees

[14:03] <dogbert17> if you want less output change the 567 in 'for (1..567) -> $i {' to a lower value

[14:05] <dogbert17> perhaps (1..67)

[14:07] *** travis-ci joined
[14:07] <travis-ci> Rakudo build failed. Aleks-Daniel Jakimenko-Aleksejev '[NQP Bump] c8519b79d Revert "Make the NQP opti […]

[14:07] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/393061754 https://github.com/rakudo/rakudo/compare/65dccd8dc158...a7bd0bdc915d

[14:07] *** travis-ci left
[14:07] <timotimo> i'm trying gephi with the dot now

[14:07] <buggable> [travis build above] ☠ All failures are due to: failed make test (6 failures). Across all jobs, only t/05-messages/02-errors.t test file failed.

[14:07] <timotimo> well, i still have to wait for the dot to finish again

[14:11] <dogbert17> can't you cats help out :)

[14:11] <dogbert17> *your

[14:13] <timotimo> i get a black canvas in gephi after running a layout simulation for a bit :(

[14:16] <timotimo> damn it. it worked until i switched workpsaces back and forth

[14:17] <timotimo> beautiful, i can see it grow into a big pillow shape

[14:18] <dogbert17> cool

[14:18] <MasterDuke> pillow?

[14:19] <timotimo> basically a rectangle with rounded edges

[14:19] <timotimo> now there's a circle inside the pillow that seems to be shrinking towards the center

[14:21] <timotimo> https://github.com/govertb/GPUGraphLayout - interesting

[14:23] <timotimo> not entirely surprised why graphviz would take a while for this

[14:25] *** MasterDuke left
[14:26] <timotimo> this is supposed to be a tree, the current state looks nothing like a tree %)

[14:26] <dogbert17> could the junction be involved somehow?

[14:26] <AlexDaniel> aw right so now we have this failing

[14:26] <AlexDaniel> m: sprintf "%d"

[14:26] <camelia> rakudo-moar a7bd0bdc9: OUTPUT: «This representation (P6num) cannot unbox to a native int (for type BOOTNum)␤  in block <unit> at <tmp> line 1␤␤»

[14:26] <AlexDaniel> c: HEAD^ sprintf "%d"

[14:26] <committable6> AlexDaniel, ¦HEAD^: «Your printf-style directives specify 1 argument, but no argument was supplied␤  in block <unit> at /tmp/dXvpzoK8nU line 1␤␤ «exit code = 1»»

[14:28] <AlexDaniel> hm, or maybe not again…

[14:32] *** MasterDuke joined
[14:39] <timotimo> oh, the layout algorithm had terminated without me noticing

[14:45] <lizmat> breakfast in America&

[14:46] <MasterDuke> i must say, i like a lot of different cuisines, but i think America does the best breakfast

[14:52] <timotimo> well, junction call nodes are certainly aplenty in this call graph

[14:52] <timotimo> and all the edges are only like 1x or 2x, too

[14:53] <timotimo> hm, yeah, the call graph seems weird. here it shows calc-chain calling infix:<!=> and infix:<!=> calls calc-chain

[14:53] <timotimo> so that's probably the same problem i had in the past; did i disable inlining here?

[14:54] <timotimo> i did not turn it off

[14:54] <timotimo> but turning inlining off does not change the number of call graph nodes. interesting.

[14:54] <timotimo> could my theory about this bug be wrong after all?

[14:56] <timotimo> oh, no, duh, the output from the program isn't the number of call graph nodes, it's what sum89 calculates

[14:58] <timotimo> wow, this implementation of != seems really wasteful

[14:58] <timotimo> oh, ok, it has a junction in it, that may be why

[15:00] <timotimo> i've had really bad sleep and i'm really tired :|

[15:02] <nine> MasterDuke: if you're heavily into sugar, then yes ;) Otherwise I'd prefer Japanese style breakfast any day

[15:10] <MasterDuke> nine: i'll admit i don't think i've had japanese breakfast. but i mean the eggs/bacon/sausage/etc breakfast, not donuts/pastry/etc

[15:10] <dogbert17> timotimo: perhaps it's time for a power nap

[15:10] <timotimo> i'm very bad at naps

[15:21] <MasterDuke> releasable6: status

[15:21] <releasable6> MasterDuke, Next release in ≈3 hours. 3 blockers. 87 out of 90 commits logged

[15:21] <releasable6> MasterDuke, Details: https://gist.github.com/7ee091373731e9a715d26c29a85d8ab5

[15:27] <AlexDaniel> MasterDuke: fwiw there's a test failing at HEAD

[15:27] <AlexDaniel> after I did this revert https://github.com/perl6/nqp/commit/c8519b79d7a6fc5846722254c8b9a3b219132f4a

[15:27] <AlexDaniel> I'm away for ≈1 hour so feel free to look at it

[15:29] *** nebuchadnezzar left
[15:32] <MasterDuke> AlexDaniel: this needs to be reverted perhaps? https://github.com/rakudo/rakudo/pull/1911

[15:33] <AlexDaniel> yeah but… num??

[15:35] <MasterDuke> like the PR says, the value comes from numify

[15:37] <MasterDuke> in NQP

[15:38] <MasterDuke> where mathy things default to num, though i think jnthn has said that should probably be changed to defaulting to int

[15:42] <timotimo> yes, int as default please

[15:47] *** perlpilot joined
[15:52] *** ExtraCrispy joined
[15:55] <nine> Do we actually need any type there? Can't we just leave it untyped?

[15:57] <geekosaur> extra dispatches wherever that's used? when # args is never going to be non-integral (what's half an argument)?

[16:01] <nine> AFAICT the attribute in question is only used to generate an error message, i.e. not anywhere in performance sensitive code.

[16:02] <nine> And omiting the type would be a much easier fix right before the release than changing NQP's behavior and would be upwards compatible with such a change.

[16:04] <MasterDuke> nine: heh, yeah, wasn't suggesting trying to make that large a change to NQP right now

[16:04] <MasterDuke> and yeah, removing the type seems low-risk

[16:08] <Geth> ¦ roast/car-grant-constants: ae95161669 | (Zoffix Znet)++ | S04-declarations/constant-6.d.t

[16:08] <Geth> ¦ roast/car-grant-constants: [CaR Grant] Spec backslashed sigilless constants

[16:08] <Geth> ¦ roast/car-grant-constants: review: https://github.com/perl6/roast/commit/ae95161669

[16:10] *** Zoffix joined
[16:10] <Zoffix> FWIW t/05-messages/02-errors.t in rakudo's make test fails

[16:14] <Zoffix> ah, it's the sprintf "%d" thing

[16:21] <Geth> ¦ roast/car-grant-constants: 4370788de5 | (Zoffix Znet)++ | S04-declarations/constant-6.d.t

[16:21] <Geth> ¦ roast/car-grant-constants: [CaR Grant] Spec $-sigilled constants

[16:21] <Geth> ¦ roast/car-grant-constants: review: https://github.com/perl6/roast/commit/4370788de5

[16:22] <MasterDuke> huh. removing the type causes a different error in t/05-messages/02-errors.t

[16:22] <MasterDuke> Cannot find method 'item': no method cache and no .^find_method   in block  at /home/dan/Source/perl6/install/share/perl6/sources/C712FE6969F786C9380D643DF17E85D06868219E (Test) line 613

[16:23] <MasterDuke> but t/spec/S32-str/sprintf.t is fine

[16:24] <Geth> ¦ roast/car-grant-constants: 94c894b3a7 | (Zoffix Znet)++ | S04-declarations/constant-6.d.t

[16:24] <Geth> ¦ roast/car-grant-constants: [CaR Grant] Fix names of backslashed sigilles constant tests

[16:24] <Geth> ¦ roast/car-grant-constants: 

[16:24] <Geth> ¦ roast/car-grant-constants: To avoid clashes with other `our` constants

[16:24] <Geth> ¦ roast/car-grant-constants: review: https://github.com/perl6/roast/commit/94c894b3a7

[16:31] *** perlpilot left
[17:00] *** nebuchadnezzar joined
[17:08] <Geth> ¦ roast/car-grant-constants: 9e18dd2b2f | (Zoffix Znet)++ | S04-declarations/constant-6.d.t

[17:08] <Geth> ¦ roast/car-grant-constants: [CaR Grant] Spec @-sigilled constants

[17:08] <Geth> ¦ roast/car-grant-constants: review: https://github.com/perl6/roast/commit/9e18dd2b2f

[17:34] *** ExtraCrispy left
[17:43] *** ExtraCrispy joined
[17:45] <AlexDaniel> MasterDuke: yeah, no type check results in that indeed

[17:45] <AlexDaniel> but changing it to num gives This representation (P6int) cannot unbox to a native num (for type BOOTInt)

[17:50] <AlexDaniel> D'oh, I forgot to pull

[17:50] <AlexDaniel> nvm :)

[17:57] <Geth> ¦ rakudo: b34d5231ee | (Aleks-Daniel Jakimenko-Aleksejev)++ | src/core/Exception.pm6

[17:57] <Geth> ¦ rakudo: Revert "Fix arg type in X::Str::Sprintf::Directives::Count"

[17:57] <Geth> ¦ rakudo: 

[17:57] <Geth> ¦ rakudo: This reverts commit 4b28f2cd4e3163a5c10c6b496d410b71518619b2.

[17:57] <Geth> ¦ rakudo: 

[17:57] <Geth> ¦ rakudo: See R#1922 https://github.com/rakudo/rakudo/issues/1922

[17:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b34d5231ee

[17:57] <synopsebot_> R#1922 [open]: https://github.com/rakudo/rakudo/issues/1922 [regression] Regression after +@ → nqp::elems(@) optimization

[17:57] <AlexDaniel> alright should be better now

[17:57] <AlexDaniel> releasable6: status

[17:57] <releasable6> AlexDaniel, Next release in ≈1 hour. 3 blockers. 87 out of 90 commits logged

[17:57] <releasable6> AlexDaniel, Details: https://gist.github.com/9fd9a445eb079b1da1fd764abdbe9917

[18:01] *** [TuxCM] joined
[18:01] <AlexDaniel> releasable6: status

[18:01] <releasable6> AlexDaniel, Next release is just a few moments away. 2 blockers. 87 out of 90 commits logged

[18:01] <releasable6> AlexDaniel, Details: https://gist.github.com/aeeb803d30ce8822e7ae990bb01448fc

[18:01] <AlexDaniel> alright, down to 2

[18:03] <lizmat> AlexDaniel++

[18:22] <AlexDaniel> m: say Signal(0)

[18:22] <camelia> rakudo-moar b34d5231e: OUTPUT: «SIGBREAK␤»

[18:25] * geekosaur saw pointer to that earlier, has not looked through ticket to see full discussion yet

[18:27] *** ggoebel left
[18:53] *** ggoebel joined
[19:02] *** travis-ci joined
[19:02] <travis-ci> Rakudo build passed. Aleks-Daniel Jakimenko-Aleksejev 'Revert "Fix arg type in X::Str::Sprintf::Directives::Count"

[19:02] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/393122480 https://github.com/rakudo/rakudo/compare/a7bd0bdc915d...b34d5231ee1b

[19:02] *** travis-ci left
[19:24] <lizmat> .ask jnthn Why is "for 1 -> $foo { say $foo.VAR.^name }" codegenned to make $foo a readonly container, rather than an alias?

[19:24] <yoleaux> lizmat: I'll pass your message to jnthn.

[19:25] <lizmat> m: for ^100000 { for 1,2,3,4,5 { } }; say now - INIT now

[19:25] <camelia> rakudo-moar b34d5231e: OUTPUT: «0.1991257␤»

[19:25] <lizmat> m: for ^100000 { for 1,2,3,4,5 -> $foo { } }; say now - INIT now

[19:25] <camelia> rakudo-moar b34d5231e: OUTPUT: «0.2875587␤»

[19:36] <timotimo> lizmat: because that's neither "is rw" nor "is raw"?

[19:38] <Zoffix> m: my $a = 42; for $a { $_ = 100 }; say $a

[19:38] <camelia> rakudo-moar b34d5231e: OUTPUT: «100␤»

[19:38] <Zoffix> m: my $a = 42; for $a -> $foo { $foo = 100 }; say $a

[19:38] <camelia> rakudo-moar b34d5231e: OUTPUT: «Cannot assign to a readonly variable ($foo) or a value␤  in block <unit> at <tmp> line 1␤␤»

[19:38] <Zoffix> m: my $a = 42; for $a -> $foo is raw { $foo = 100 }; say $a

[19:38] <camelia> rakudo-moar b34d5231e: OUTPUT: «100␤»

[19:40] <lizmat> ah, so you're saying that "for @a { }" is the same as "for @a -> $_ is raw { }" ?

[19:41] <timotimo> yeah, if you don't -> you get basically <->

[19:41] <MasterDuke> timotimo: do you know what in NQP causes mathy things to default to num?

[19:41] <lizmat> m: dd { ... }.signature   # duh  :-)

[19:41] <camelia> rakudo-moar b34d5231e: OUTPUT: «:(;; $_? is raw)␤»

[19:41] <timotimo> not exactly sure, but we emit "smrt_numify" whenever we need a numy thing

[19:41] <timotimo> and that always nums

[19:43] <MasterDuke> hm. we have smrt_numify and smrt_strify, but not smrt_intify

[19:44] <timotimo> that's right

[19:44] <MasterDuke> is that deliberate?

[19:45] <timotimo> just a historical artifact i'd assume?

[19:45] *** Zoffix left
[19:54] <lizmat> .tell jnthn pls ignore my last question :-)

[19:54] <yoleaux> lizmat: I'll pass your message to jnthn.

[19:54] *** ggoebel left
[20:02] <jnthn> .

[20:02] <yoleaux> 19:24Z <lizmat> jnthn: Why is "for 1 -> $foo { say $foo.VAR.^name }" codegenned to make $foo a readonly container, rather than an alias?

[20:02] <yoleaux> 19:54Z <lizmat> jnthn: pls ignore my last question :-)

[20:02] <jnthn> Well, that was easy :)

[20:02] <lizmat> yeah, should have figured that introspection is your friend

[20:02] <lizmat> m: dd { ... }.signature   # duh  :-)

[20:02] <camelia> rakudo-moar b34d5231e: OUTPUT: «:(;; $_? is raw)␤»

[20:03] <lizmat> m: for 1 { dd &?BLOCK.signature }   # rather in this case

[20:03] <camelia> rakudo-moar b34d5231e: OUTPUT: «:(;; $_? is raw)␤»

[20:03] <MasterDuke> jnthn, timotimo: any idea why removing the type here https://github.com/rakudo/rakudo/blob/master/src/core/Exception.pm6#L2043 would cause `Cannot find method 'item': no method cache and no .^find_method   in block  at /home/dan/Source/perl6/install/share/perl6/sources/C712FE6969F786C9380D643DF17E85D06868219E (Test) line 613` ?

[20:04] <timotimo> wanna hear my unfounded opinion?

[20:05] <MasterDuke> i do

[20:05] <jnthn> Because it then gets constructed with an NQP object, which is never turned into a Perl 6 one

[20:05] <timotimo> since $.args-have is short for self.args-have.item, maybe the return value ... yeah that

[20:05] <MasterDuke> huh

[20:06] <jnthn> Probably fixable by writing it a BULD

[20:06] <jnthn> *BUILD

[20:06] <jnthn> Then the argument processing will force a hllize

[20:08] *** ggoebel joined
[20:10] <[TuxCM]> Rakudo version 2018.05-91-gb34d5231e - MoarVM version 2018.05-125-gbbf38a97b

[20:10] <[TuxCM]> csv-test-xs-20      0.441 -  0.456

[20:10] <[TuxCM]> csv-ip5xs           0.886 -  0.891

[20:10] <[TuxCM]> test-t --race       0.966 -  0.991

[20:10] <[TuxCM]> test-t              2.295 -  2.352

[20:10] <[TuxCM]> csv-ip5xs-20        7.125 -  7.299

[20:10] <[TuxCM]> test                7.733 -  8.140

[20:10] <[TuxCM]> test-t-20 --race   14.204 - 15.017

[20:10] <[TuxCM]> csv-parser         23.347 - 23.968

[20:10] <[TuxCM]> test-t-20          41.326 - 42.221

[20:10] <[TuxCM]> I::P5 still fails

[20:10] <timotimo> [TuxCM]: can you remove the entries with 999 from the timing log? or at least filter it out from the code that makes the graphs? :)

[20:11] <timotimo> the "zoom in on horizontal axis" images are - except for the "last 10 days" image - just a flat line with a spike :)

[20:12] <timotimo> and the topmost image, "perl6 over time" is also weirdly stretched out

[20:51] *** Kaiepi joined
[21:06] *** [TuxCM] left
[21:08] <nine> .ask [TuxCM] Even with Inline::Perl5 0.35?

[21:08] <yoleaux> nine: I'll pass your message to [TuxCM].

[22:17] *** AlexDani` joined
[22:19] *** AlexDaniel left
[22:20] *** AlexDani` is now known as AlexDaniel

[22:35] *** dct joined
[22:50] *** perlpilot joined
[23:02] <Geth> ¦ rakudo/post-release-2018.06: b36f54b41f | (Zoffix Znet)++ (committed using GitHub Web editor) | docs/archive/constants-type-constraints-proposal-2018-02-10.md

[23:02] <Geth> ¦ rakudo/post-release-2018.06: Fix typo

[23:02] <Geth> ¦ rakudo/post-release-2018.06: review: https://github.com/rakudo/rakudo/commit/b36f54b41f

[23:11] *** Zoffix joined
[23:12] *** dct left
[23:15] *** Zoffix left
[23:21] *** Zoffix joined
[23:21] <Zoffix> m: my %h = :42foo, :100bar; my @l := %h.List; say @l; %h<foo bar> = 24, 1; say @l;  %h<foo bar> = 2400, 100;  say @l

[23:21] <camelia> rakudo-moar b34d5231e: OUTPUT: «(bar => 100 foo => 42)␤(bar => 1 foo => 24)␤(bar => 100 foo => 2400)␤»

[23:22] <Zoffix> This feels like an unwanted behaviour to have an action-at-a-distance like this.

[23:22] <Zoffix> ohhh

[23:22] <Zoffix> nm

[23:23] <Zoffix> or maybe not

[23:23] <Geth> ¦ rakudo/post-release-2018.06: 24467ed6c0 | (Elizabeth Mattijsen)++ | src/core/Parameter.pm6

[23:23] <Geth> ¦ rakudo/post-release-2018.06: Make .perl of '(|)' signature a bit more idiomatic

[23:23] <Geth> ¦ rakudo/post-release-2018.06: review: https://github.com/rakudo/rakudo/commit/24467ed6c0

[23:23] <Zoffix> I don'

[23:24] <Zoffix> I don't really get it. I make get a List of Pairs from a hash. They're all new Pair objects here: https://github.com/rakudo/rakudo/blob/b34d5231e/src/core/Map.pm6#L50-L72   how come they get changed when I change the hash?

[23:25] <Zoffix> Ah, I was assigning to the List's element not .value.

[23:25] <Zoffix> Man, getting rusty already

[23:25] <Zoffix> m: my %h = :42foo, :100bar; my @l := %h.List; say @l; %h<foo bar> = 24, 1; say @l; @l[0].value = 1000; say %h

[23:25] <camelia> rakudo-moar b34d5231e: OUTPUT: «(foo => 42 bar => 100)␤(foo => 24 bar => 1)␤{bar => 1, foo => 1000}␤»

[23:26] <Zoffix> .ask lizmat is it on purpose that .List on a Hash keeps containers around so the returned List gets updated if Hash gets updated and you can write into .value of the Pairs in the List to update the original Hash.

[23:26] <yoleaux> Zoffix: I'll pass your message to lizmat.

[23:28] <Zoffix> m: my %h = :42foo, :100bar; for %h { .value = 10000; }; say %h

[23:28] <camelia> rakudo-moar b34d5231e: OUTPUT: «{bar => 10000, foo => 10000}␤»

[23:29] <Zoffix> guess that's why

[23:29] <lizmat> yeah, it is :-)

[23:29] <yoleaux> 23:26Z <Zoffix> lizmat: is it on purpose that .List on a Hash keeps containers around so the returned List gets updated if Hash gets updated and you can write into .value of the Pairs in the List to update the original Hash.

[23:30] <lizmat> m: my %h is Map = :42foo, :100bar; for %h { .value = 10000; }; say %h  # Hash is per definition mutable

[23:30] <camelia> rakudo-moar b34d5231e: OUTPUT: «Cannot modify an immutable Int (42)␤  in block <unit> at <tmp> line 1␤␤»

[23:30] <lizmat> Maps are not

[23:32] <Zoffix> Thanks.

[23:39] <Geth> ¦ rakudo/car-grant-constants: 39 commits pushed by 8 authors

[23:39] <Geth> ¦ rakudo/car-grant-constants: review: https://github.com/rakudo/rakudo/compare/4854c05c02c2...c49a6ed1f536

[23:40] *** llfourn left
[23:58] *** entonian joined
