[00:39] *** lizmat_ joined
[00:39] *** p6bannerbot sets mode: +v lizmat_

[00:39] *** lizmat left
[00:49] *** MasterDuke joined
[00:49] *** p6bannerbot sets mode: +v MasterDuke

[00:50] *** MasterDuke left
[00:50] *** MasterDuke joined
[00:50] *** herbert.freenode.net sets mode: +v MasterDuke

[00:50] *** p6bannerbot sets mode: +v MasterDuke

[01:24] *** leont left
[02:28] *** Kaiepi left
[02:31] *** Kaiepi joined
[02:32] *** p6bannerbot sets mode: +v Kaiepi

[02:39] *** Kaiepi left
[02:39] *** Kaiepi joined
[02:40] *** p6bannerbot sets mode: +v Kaiepi

[02:42] <MasterDuke> huh, just got burned again with --stage=<anything other than parse> just hanging during a rakudo build

[02:44] <MasterDuke> i saw an odd error during stage parse of a complete rebuild, but i had a local patch, so wanted to run it without my patch in a loop to see if it happened again

[02:45] <MasterDuke> so started it with --target=parse to be more efficient, came back 30 min later and it was still sitting there in the very first stage parse, cpu at 100%

[02:49] *** Kaiepi left
[02:49] *** Kaiepi joined
[02:50] *** p6bannerbot sets mode: +v Kaiepi

[02:51] <MasterDuke> bisectable6: say Match.^roles

[02:51] <bisectable6> MasterDuke, Bisecting by exit code (old=2015.12 new=50f0fce). Old exit code: 0

[02:52] <bisectable6> MasterDuke, bisect log: https://gist.github.com/4244ce5f1ef3697a2e857e0ca501f2d7

[02:52] <bisectable6> MasterDuke, There are 20 candidates for the first “new” revision. See the log for more details

[02:53] *** lizmat_ left
[02:59] <MasterDuke> bisectable6: (any(), any()).Seq.join

[02:59] <bisectable6> MasterDuke, Bisecting by exit code (old=2015.12 new=50f0fce). Old exit code: 0

[02:59] <bisectable6> MasterDuke, bisect log: https://gist.github.com/42176e41eb32eff2db0a861ac7ee3b21

[02:59] <bisectable6> MasterDuke, (2017-08-09) https://github.com/rakudo/rakudo/commit/1761f953dba58b5a1f59be3f9fe402dab082750c

[03:07] *** ufobat___ joined
[03:08] *** p6bannerbot sets mode: +v ufobat___

[03:11] *** ufobat_ left
[03:12] <MasterDuke> timotimo: you around?

[03:28] <MasterDuke> timotimo: have you seen https://github.com/rakudo/rakudo/issues/2333 ? seems like something you'd find interesting

[07:20] *** nine left
[07:22] *** nine joined
[07:22] *** camelia left
[07:22] *** p6bannerbot sets mode: +v nine

[07:23] *** camelia joined
[07:24] *** p6bannerbot sets mode: +v camelia

[07:25] *** b2gills left
[07:30] *** nine left
[07:32] *** nine joined
[07:33] *** camelia left
[07:33] *** p6bannerbot sets mode: +v nine

[07:35] *** b2gills joined
[07:36] *** p6bannerbot sets mode: +v b2gills

[07:40] *** nine left
[07:41] *** nine joined
[07:42] *** p6bannerbot sets mode: +v nine

[09:51] *** brrt joined
[09:51] *** p6bannerbot sets mode: +v brrt

[10:02] *** lizmat joined
[10:02] *** p6bannerbot sets mode: +v lizmat

[10:11] <lizmat> Files=1255, Tests=76370, 344 wallclock secs (15.83 usr  5.55 sys + 2427.03 cusr 231.53 csys = 2679.94 CPU)

[10:22] <Geth> ¦ nqp: fa70d89213 | (Elizabeth Mattijsen)++ | tools/build/MOAR_REVISION

[10:22] <Geth> ¦ nqp: Bump MoarVM for brrt's last fixes

[10:22] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/fa70d89213

[10:22] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.10-81-g7ba02259b...2018.10-82-g9468b7f

[10:37] <Geth> ¦ rakudo: 21b0a3a690 | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[10:37] <Geth> ¦ rakudo: Bump NQP to get the latest MoarVM fix

[10:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/21b0a3a690

[10:37] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.10-116-g8ff3ee22a...2018.10-117-gfa70d89

[10:45] *** brrt left
[10:50] <|Tux|> Rakudo version 2018.10-164-g21b0a3a69 - MoarVM version 2018.10-82-g9468b7f75

[10:50] <|Tux|> csv-test-xs-20      0.426 -  0.452

[10:50] <|Tux|> test-t --race       0.815 -  0.823

[10:50] <|Tux|> csv-ip5xs           0.897 -  0.922

[10:50] <|Tux|> test-t              1.798 -  1.806

[10:50] <|Tux|> csv-ip5xs-20        7.108 -  7.154

[10:50] <|Tux|> test                8.144 -  8.719

[10:50] <|Tux|> test-t-20 --race    9.632 - 10.751

[10:50] <|Tux|> csv-parser         22.426 - 22.662

[10:50] <|Tux|> test-t-20          29.829 - 31.326

[10:59] *** lizmat left
[11:01] *** yoleaux left
[11:03] *** lizmat joined
[11:03] *** p6bannerbot sets mode: +v lizmat

[11:06] <Geth> ¦ nqp: edd5b1148f | (Elizabeth Mattijsen)++ | src/how/NQPParametricRoleHOW.nqp

[11:06] <Geth> ¦ nqp: Add :$transitive named re R#2401

[11:06] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/edd5b1148f

[11:07] <synopsebot_> R#2401 [open]: https://github.com/rakudo/rakudo/issues/2401 Match.^roles   does not behave

[11:11] <Geth> ¦ rakudo: becbdeb9de | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[11:11] <Geth> ¦ rakudo: Bump NQP to get fix for R#2401

[11:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/becbdeb9de

[11:11] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.10-117-gfa70d89...2018.10-118-gedd5b11

[11:11] <synopsebot_> R#2401 [open]: https://github.com/rakudo/rakudo/issues/2401 Match.^roles   does not behave

[12:27] *** lucasb joined
[12:28] *** p6bannerbot sets mode: +v lucasb

[12:29] *** brrt joined
[12:30] *** p6bannerbot sets mode: +v brrt

[12:43] *** j3nnn1 joined
[12:43] *** p6bannerbot sets mode: +v j3nnn1

[12:56] *** yoleaux joined
[12:57] *** p6bannerbot sets mode: +v yoleaux

[14:06] *** |Tux| left
[14:19] *** |Tux| joined
[14:19] *** p6bannerbot sets mode: +v |Tux|

[14:33] *** brrt left
[14:37] <Geth> ¦ rakudo: 005261a4c2 | (Elizabeth Mattijsen)++ | 2 files

[14:37] <Geth> ¦ rakudo: Make @a >>op=<< ...  about 1.5x as fast for core ops

[14:37] <Geth> ¦ rakudo: 

[14:37] <Geth> ¦ rakudo: - create a lazily filled cache of += %= -= *= ~=

[14:37] <Geth> ¦ rakudo: - whenever a METAOP_ASSIGN is called, check for core ops

[14:37] <Geth> ¦ rakudo: - the first time this happens, the cache will be filled

[14:37] <Geth> ¦ rakudo:   - so we don't incur this overhead at every startup

[14:37] <Geth> ¦ rakudo: - more ops could be easily added if deemed necessary

[14:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/005261a4c2

[14:56] *** Kaiepi left
[14:57] *** Kaiepi joined
[14:57] *** p6bannerbot sets mode: +v Kaiepi

[15:11] *** Kaiepi left
[15:11] *** Kaiepi joined
[15:12] *** p6bannerbot sets mode: +v Kaiepi

[15:14] *** leont joined
[15:15] *** p6bannerbot sets mode: +v leont

[15:16] *** brrt joined
[15:17] *** p6bannerbot sets mode: +v brrt

[15:22] *** MasterDuke left
[17:10] <AlexDaniel> Any other thoughts on R#2498 ?

[17:10] <synopsebot_> R#2498 [open]: https://github.com/rakudo/rakudo/issues/2498 [⚠ blocker ⚠] Tinky and Tinky::JSON “P6M Merging GLOBAL symbols failed: duplicate definition of symbol NoState”

[17:15] *** patrickb joined
[17:16] *** p6bannerbot sets mode: +v patrickb

[17:30] *** Kaiepi left
[17:33] *** Kaiepi joined
[17:33] *** p6bannerbot sets mode: +v Kaiepi

[17:36] <lucasb> committable6: d3c5381b7^,d3c5381b7 role R[::T] { has T $!x }; class C does R[Any] { method m { $!x = Nil } }; C.new.m; say 'ok'

[17:36] <committable6> lucasb, ¦d3c5381b7^: «ok␤» ¦d3c5381: «Died with X::TypeCheck::Assignment␤  in method m at /tmp/fdeAFu3XLb line 1␤  in block <unit> at /tmp/fdeAFu3XLb line 1␤␤ «exit code = 1»»

[17:36] <lucasb> https://github.com/rakudo/rakudo/commit/d3c5381b747169f951db578bebbfd0c5d8165116

[17:36] <lucasb> jnthn: ^^

[18:30] *** Kaiepi left
[18:33] *** Kaiepi joined
[18:34] *** p6bannerbot sets mode: +v Kaiepi

[18:35] *** lizmat left
[18:50] *** Kaiepi left
[18:50] *** Kaiepi joined
[18:51] *** p6bannerbot sets mode: +v Kaiepi

[18:57] *** lizmat joined
[18:57] *** p6bannerbot sets mode: +v lizmat

[19:25] <lizmat> m: my @a = 1..3; dd @a >>xx<< @a # this feels wrong to me

[19:25] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «Array element = [(1,).Seq, (2, 2).Seq, (3, 3, 3).Seq]␤»

[19:25] <lizmat> m: my @a = 1..3; say @a >>xx<< @a   # you don't really see it when you make strings of it

[19:25] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «[(1) (2 2) (3 3 3)]␤»

[19:26] <lizmat> jnthn: thoughts about >>xx<< ^^^  ?

[19:27] *** lgtaube left
[19:44] *** lgtaube joined
[19:44] *** lucasb left
[19:44] *** p6bannerbot sets mode: +v lgtaube

[19:56] <lizmat> hmmm... maybe I borked it

[19:56] <lizmat> bisectable6: old=2018.10 my @a = 1..3; dd @a >>xx<< @a

[19:56] <bisectable6> lizmat, On both starting points (old=2018.10 new=005261a) the exit code is 0 and the output is identical as well

[19:56] <bisectable6> lizmat, Output on both points: «Array element = [(1,).Seq, (2, 2).Seq, (3, 3, 3).Seq]␤»

[19:56] <lizmat> bisectable6: my @a = 1..3; dd @a >>xx<< @a

[19:56] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=005261a) because on both starting points the exit code is 0

[19:57] <bisectable6> lizmat, bisect log: https://gist.github.com/c87eff2fc2a101898380c8cc81710bc5

[19:57] <bisectable6> lizmat, (2017-03-08) https://github.com/rakudo/rakudo/commit/1eb7b1f796214870b53c7ed055907cb29076dc78

[20:24] <AlexDaniel> 6c: my @a = 1..3; dd @a >>xx<< @a

[20:24] <committable6> AlexDaniel, https://gist.github.com/d254f728b47531409fab1f9484e3a9c5

[20:25] *** lucasb joined
[20:26] *** p6bannerbot sets mode: +v lucasb

[20:29] <lucasb> m: say True ?? a=>1 !! 42

[20:29] <evalable6> lucasb, rakudo-moar 005261a4c: OUTPUT: «a => 1␤»

[20:29] <lucasb> m: say True ?? 'a'=>1 !! 42

[20:29] <evalable6> lucasb, rakudo-moar 005261a4c: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/74dF6Q5MRf␤Precede…»

[20:29] <evalable6> lucasb, Full output: https://gist.github.com/c1924eb9c0360b5f2b65f3c687b348b8

[20:30] <lucasb> Precedence of => is too loose to use inside ?? !!; please parenthesize

[20:30] <lizmat> m: my @a = ^5; dd @a >>xx=>> 1

[20:30] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «Array @a = [(my \List_94773139299440 = ($(List_94773139299440.Seq),)).Seq, (my \List_94773…»

[20:30] <Geth> ¦ 6.d-prep: 1b092d89f5 | (Zoffix Znet)++ (committed using GitHub Web editor) | deferred-to-6.e/README.md

[20:30] <Geth> ¦ 6.d-prep: List R#2502 in 6.e TODO work

[20:30] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/1b092d89f5

[20:30] <synopsebot_> R#2502 [open]: https://github.com/rakudo/rakudo/issues/2502 [math] 1e0 / 0e0 should return Inf

[20:30] <evalable6> lizmat, Full output: https://gist.github.com/d2de9214323eac524ed4b05f4863c289

[20:32] <lizmat> m: my @a = ^5; dd @a >>xx>> 2

[20:32] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «Array element = [(0, 0).Seq, (1, 1).Seq, (2, 2).Seq, (3, 3).Seq, (4, 4).Seq]␤»

[20:44] <lucasb> m: say True ?? 10 !! a => 42  # (1)

[20:44] <evalable6> lucasb, rakudo-moar 005261a4c: OUTPUT: «10␤»

[20:44] <lucasb> m: say True ?? 10 !! 'a' => 42

[20:44] <evalable6> lucasb, rakudo-moar 005261a4c: OUTPUT: «10 => 42␤»

[20:45] <lucasb> if "=>" has looser precedence than the conditional operator, then example (1) is wrong, no?

[20:47] <lucasb> IOW, does it seems there's some syntax parsing problem with regard pairs with bareword keys?

[20:47] <lucasb> a=>1 seems to be tighter than 'a'=>1

[20:59] *** Kaiepi left
[21:01] *** Kaiepi joined
[21:02] *** p6bannerbot sets mode: +v Kaiepi

[21:07] *** dct joined
[21:07] *** p6bannerbot sets mode: +v dct

[21:32] *** dct left
[21:45] *** dct joined
[21:45] *** p6bannerbot sets mode: +v dct

[22:03] *** lucasb left
[22:09] <jnthn> lizmat: Hm, that xx is right, no? 1 xx 1, 2 xx 2, 3 xx 3

[22:09] *** brrt left
[22:10] *** MasterDuke joined
[22:10] *** p6bannerbot sets mode: +v MasterDuke

[22:10] *** MasterDuke left
[22:10] *** MasterDuke joined
[22:10] *** herbert.freenode.net sets mode: +v MasterDuke

[22:11] *** p6bannerbot sets mode: +v MasterDuke

[22:14] <jnthn> .tell lucasb `a => 1` is actually a term directly and doesn't involve infix:<< => >> at all; the `a =>` is part of the longest token match (and it even limits to \h+ instead of <.ws> to achieve that).

[22:14] <yoleaux> jnthn: I'll pass your message to lucasb.

[22:15] <lizmat> jnthn: but the point is that the Seq doesn't get flattened, one *could* expect a List there, no?

[22:16] <lizmat> m: dd ^5 >>xx<< ^5

[22:16] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «(().Seq, (1,).Seq, (2, 2).Seq, (3, 3, 3).Seq, (4, 4, 4, 4).Seq)␤»

[22:16] <jnthn> Why would it get flattened?

[22:16] <jnthn> I'd expect you to have to write `flat` explicitly for that

[22:16] <jnthn> And xx produces a Seq

[22:17] <jnthn> m: dd flat ^5 >>xx<< ^5

[22:17] <evalable6> jnthn, rakudo-moar 005261a4c: OUTPUT: «(1, 2, 2, 3, 3, 3, 4, 4, 4, 4).Seq␤»

[22:17] <lizmat> m: my @a := ^5 >>xx<< ^5; say @a[0]; say @a[0]

[22:17] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «()␤()␤»

[22:17] <lizmat> m: my @a := ^5 >>xx<< ^5; say @a[1]; say @a[1]

[22:17] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «(1)␤(1)␤»

[22:17] <lizmat> hmmm

[22:18] <lizmat> m: dd ^5 >>xx<< ^5

[22:18] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «(().Seq, (1,).Seq, (2, 2).Seq, (3, 3, 3).Seq, (4, 4, 4, 4).Seq)␤»

[22:18] *** lucasb joined
[22:18] <lizmat> m: use Test; is-deeply  ^3 >>xx<< ^3, (().Seq, (1,)Seq, (2,2).Seq)

[22:18] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/PmdyXH2Itw␤Precedi…»

[22:18] <evalable6> lizmat, Full output: https://gist.github.com/65c2f7e30578a37c12e98996f0ec62d5

[22:19] *** p6bannerbot sets mode: +v lucasb

[22:19] <lizmat> m: use Test; is-deeply  ^3 >>xx<< ^3, (().Seq, (1,).Seq, (2,2).Seq)

[22:19] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «ok 1 - ␤»

[22:19] <lizmat> hmmm...

[22:19] <lizmat> Guess I need to revisit some tests then  :-)

[22:22] <lucasb> .

[22:22] <yoleaux> 22:14Z <jnthn> lucasb: `a => 1` is actually a term directly and doesn't involve infix:<< => >> at all; the `a =>` is part of the longest token match (and it even limits to \h+ instead of <.ws> to achieve that).

[22:22] <lucasb> thanks jnthn

[22:24] <lucasb> so, to recapitulate :)

[22:24] <lucasb> 'a => 1' is a single token, while "'a' => 1" are three

[22:25] <lucasb> I guess this wouldn't bother me if it didn't complete change the meaning of some expression

[22:25] <lucasb> https://github.com/rakudo/rakudo/blob/master/src/Perl6/Grammar.nqp#L1543

[22:26] <lucasb> https://github.com/rakudo/rakudo/blob/master/src/core/Pair.pm6#L138

[22:26] <lucasb> ^^ iiuc, they come from these places?

[22:26] <Geth> ¦ roast: f144154cf9 | (Elizabeth Mattijsen)++ | S03-metaops/infix.t

[22:26] <Geth> ¦ roast: First stab at exhaustive metaop infix testing

[22:26] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f144154cf9

[22:27] <jnthn> lucasb: Well, there's also an infix for parsing => in Grammar.nqp too

[22:27] <jnthn> They're quite different in other ways too (foo(a => 1) passes a named arg, foo('a' => 1) passes a positional arg, for example)

[22:28] *** dct left
[22:28] <lucasb> ah, ok, for arguments I was more used to the idea of they being different

[22:29] <lucasb> just meet this detail in a different context and was surprised :-|

[22:30] <lucasb> but ok, it's the same thing

[22:30] <jnthn> Yeah, I can see it being a surprise. On the other hand, I can't remember running into it, or having to explain it, before now, so I guess it's at least a relatively rare surprise :)

[22:32] <lucasb> ok, thanks again

[22:33] <lizmat> m: say -1 % 109 

[22:33] <evalable6> lizmat, rakudo-moar 005261a4c: OUTPUT: «108␤»

[22:33] <lizmat> is that to be expected ?

[22:34] <lucasb> perl5 agrees with it

[22:34] <lizmat> apparently C++ doesn't: https://twitter.com/shniperson2/status/1064997967281733632

[22:36] <Geth> ¦ rakudo: 5720ef223f | (Elizabeth Mattijsen)++ | t/spectest.data

[22:36] <Geth> ¦ rakudo: Add exhaustive metaop infix tests

[22:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5720ef223f

[22:36] <lucasb> console.log(-1 % 109)  //=> -1   Node.js

[22:36] <lucasb> but Ruby and Python are the same as P5 and 6

[22:37] <lizmat> well, I guess we're in the good group then

[22:37] <lucasb> yes :)

[22:37] <lizmat> BTW, does anybody know what happened to Camelia ?

[22:37] *** patrickb left
[22:38] <AlexDaniel> nine: ↑

[22:40] <lucasb> m: role R[::T] { has T $!x }; class C does R[Any] { method m { $!x = Nil } }; C.new.m; say 'ok'

[22:40] <evalable6> lucasb, rakudo-moar 005261a4c: OUTPUT: «(exit code 1) Died with X::TypeCheck::Assignment␤  in method m at /tmp/HJLBsZsTWq line 1␤  in block <unit> at /tmp/HJLBsZsTWq line 1␤␤»

[22:41] <lucasb> ^^ sorry to ask again, but I would appreciate if anyone could confirm if this is an actual problem

[22:41] <lucasb> bisectable6: role R[::T] { has T $!x }; class C does R[Any] { method m { $!x = Nil } }; C.new.m; say 'ok'

[22:41] <bisectable6> lucasb, Bisecting by exit code (old=2015.12 new=005261a). Old exit code: 0

[22:41] <bisectable6> lucasb, bisect log: https://gist.github.com/02124f93e5702d1724a2aa03dd249261

[22:41] <bisectable6> lucasb, (2018-07-09) https://github.com/rakudo/rakudo/commit/d3c5381b747169f951db578bebbfd0c5d8165116

[22:42] <jnthn> lucasb: Yeah, that should probably be resetting it back to Any

[22:42] <lucasb> ah, thanks!

[22:42] <jnthn> Please file it

[22:47] <lucasb> R#2503

[22:47] <synopsebot_> R#2503 [open]: https://github.com/rakudo/rakudo/issues/2503 Can't assign Nil to an attribute from a role

[22:48] <jnthn> Thanks

[22:52] <Geth> ¦ roast: bd04e44a85 | (Elizabeth Mattijsen)++ | S03-metaops/hyper.t

[22:52] <Geth> ¦ roast: Replace unexhaustive tests with syntax tests

[22:52] <Geth> ¦ roast: 

[22:52] <Geth> ¦ roast: The infix.t file uses >>[ ]<< syntax to test a lot of different operators.

[22:52] <Geth> ¦ roast: We also need to test the various metaop infix syntaxes.  These two were

[22:52] <Geth> ¦ roast: sorta joined before, now they're separated.

[22:52] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/bd04e44a85

[22:53] *** lucasb left
[22:58] <lizmat> m: my $a = 42; $a xx= 3; say $a[0][0][0][0][0]  # it's a fractal  :-)

[22:59] <evalable6> lizmat, rakudo-moar 5720ef223: OUTPUT: «(\List_94800570439680 = (List_94800570439680 List_94800570439680 List_94800570439680))␤»

[23:32] *** j3nnn1 left
[23:38] *** lgtaube left
[23:45] <Geth> ¦ rakudo: 8854bbd3fc | (Nick Logan)++ (committed using GitHub Web editor) | src/core/IO/Path.pm6

[23:45] <Geth> ¦ rakudo: Fix missing path volume after .. is resolved

[23:45] <Geth> ¦ rakudo: 

[23:45] <Geth> ¦ rakudo: Fixes issue on windows where `$*CWD.resolve` would include the volume but `$*CWD.add("../foo").resolve` would not.

[23:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8854bbd3fc

[23:54] *** lgtaube joined
[23:54] *** p6bannerbot sets mode: +v lgtaube

