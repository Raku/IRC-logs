[00:01] *** lizmat joined
[00:01] *** p6bannerbot sets mode: +v lizmat

[00:08] *** stmuk joined
[00:09] *** p6bannerbot sets mode: +v stmuk

[00:10] *** stmuk_ left
[00:11] *** epony left
[00:22] <geekosaur> that might mean it's a syscall failing , in which case you don't get much help aside from maybe strace and syslog

[00:36] *** epony joined
[00:36] *** p6bannerbot sets mode: +v epony

[00:36] *** stmuk_ joined
[00:37] *** p6bannerbot sets mode: +v stmuk_

[00:39] *** stmuk left
[01:20] *** peterrus joined
[01:24] *** peterrus left
[02:05] *** cognominal-p6 joined
[02:06] *** Kaiepi left
[02:06] *** epony left
[02:06] *** p6bannerbot sets mode: +v cognominal-p6

[02:07] *** Kaiepi joined
[02:07] *** p6bannerbot sets mode: +v Kaiepi

[02:09] *** b2gills left
[02:09] *** cognominal-p6 left
[02:09] *** cognominal-p6 joined
[02:10] *** p6bannerbot sets mode: +v cognominal-p6

[02:11] *** stmuk joined
[02:11] *** epony joined
[02:11] *** p6bannerbot sets mode: +v epony

[02:12] *** p6bannerbot sets mode: +v stmuk

[02:14] *** stmuk_ left
[02:29] *** cognominal-p6 left
[02:41] *** b2gills joined
[02:42] *** p6bannerbot sets mode: +v b2gills

[02:47] *** ufobat_ joined
[02:48] *** p6bannerbot sets mode: +v ufobat_

[02:51] *** fake_space_whale left
[02:51] *** ufobat___ left
[02:53] *** epony left
[03:00] *** epony joined
[03:00] *** p6bannerbot sets mode: +v epony

[03:04] *** epony left
[03:04] *** epony joined
[03:04] *** p6bannerbot sets mode: +v epony

[03:11] *** epony left
[03:18] *** epony joined
[03:18] *** p6bannerbot sets mode: +v epony

[03:20] *** epony left
[03:26] *** EmzyFq joined
[03:27] *** EmzyFq left
[03:32] *** epony joined
[03:32] *** p6bannerbot sets mode: +v epony

[04:03] *** Zoffix joined
[04:03] *** p6bannerbot sets mode: +v Zoffix

[04:32] <Zoffix> 🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟

[04:32] <Zoffix> .tell TimToady As promised, I compiled all the info on the creation of the language alias and I'm now ready to "formally" request you to consider the creation of the name alias: https://perl6.party/post/A-Request-to-Larry-Wall-to-Create-a-Language-Name-Alias-for-Perl-6

[04:32] <yoleaux> Zoffix: I'll pass your message to TimToady.

[04:32] <Zoffix> 🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟

[04:45] <Zoffix> weekly: http://colabti.org/irclogger/irclogger_log/perl6-dev?date=2018-10-07#l54

[04:45] <notable6> Zoffix, Noted!

[04:46] *** Zoffix left
[05:12] *** osx joined
[05:16] *** osx left
[05:25] *** cognominal-p6 joined
[05:26] *** p6bannerbot sets mode: +v cognominal-p6

[05:47] *** TimToady left
[05:49] *** cognominal-p6 left
[06:32] *** TimToady joined
[06:32] *** p6bannerbot sets mode: +v TimToady

[07:35] *** AthasxR joined
[07:35] *** AthasxR left
[08:45] *** cognominal-p6 joined
[08:46] *** p6bannerbot sets mode: +v cognominal-p6

[08:59] *** cognominal-p6 left
[09:00] *** cognominal-p6 joined
[09:00] *** p6bannerbot sets mode: +v cognominal-p6

[09:08] <lizmat> Files=1255, Tests=75814, 338 wallclock secs (15.66 usr  5.23 sys + 2379.59 cusr 245.12 csys = 2645.60 CPU)

[09:09] <lizmat> .tell pmurias js branch spectest times the same as master, so it *was* a fluke that it didn't before

[09:09] <yoleaux> lizmat: I'll pass your message to pmurias.

[09:13] <lizmat> Zoffix: s/ proponets/proponents/

[09:21] *** dct joined
[09:21] *** p6bannerbot sets mode: +v dct

[09:32] *** cognominal-p6 left
[09:40] *** pmurias joined
[09:40] *** p6bannerbot sets mode: +v pmurias

[09:45] <pmurias> jnthn: is it ok if I merge the js branch in? (I fixed the stuff people found during reviews)

[09:45] <yoleaux> 09:09Z <lizmat> pmurias: js branch spectest times the same as master, so it *was* a fluke that it didn't before

[09:47] *** cognominal-p6 joined
[09:48] *** p6bannerbot sets mode: +v cognominal-p6

[09:57] *** brrt joined
[09:58] *** p6bannerbot sets mode: +v brrt

[09:58] <brrt> \o 

[09:59] *** cognominal-p6 left
[09:59] <brrt> .tell masak re macros, it might be interesting for you to learn that since I implemented hygienic macros in the the expression template compiler, I can actually abstract things that I couldn't in C

[09:59] <yoleaux> brrt: I'll pass your message to masak.

[09:59] *** cognominal-p6 joined
[10:00] *** p6bannerbot sets mode: +v cognominal-p6

[10:02] <pmurias> lizmat: good, was afraid it was some JIT issue or some weird VM inefficieny getting accidently triggered ;)

[10:10] <[Tux]> Rakudo version 2018.09-75-g2d7724f8b - MoarVM version 2018.09-124-g588873f7a

[10:10] <[Tux]> csv-test-xs-20      0.445 -  0.446

[10:10] <[Tux]> test-t --race       0.800 -  0.842

[10:10] <[Tux]> csv-ip5xs           0.888 -  0.953

[10:10] <[Tux]> test-t              1.773 -  1.865

[10:10] <[Tux]> csv-ip5xs-20        7.271 -  7.378

[10:10] <[Tux]> test                8.045 -  8.136

[10:10] <[Tux]> test-t-20 --race   11.132 - 12.239

[10:10] <[Tux]> csv-parser         22.369 - 22.672

[10:10] <[Tux]> test-t-20          30.984 - 31.397

[10:10] <lizmat> pmurias: that was my fear as well, but no more

[10:13] <brrt> .tell Zoffix: Summation -> Summary, Numerious -> Numerous

[10:13] <yoleaux> brrt: What kind of a name is "Zoffix:"?!

[10:13] <brrt> .tell Zoffix Summation -> Summary, Numerious -> Numerous

[10:13] <yoleaux> brrt: I'll pass your message to Zoffix.

[10:13] <brrt> (not an english language native, but still)

[10:20] <lizmat> pmurias: I wouldn't mind you going ahead and merge the js branch: you worked long enough on it do to the honours!

[10:22] *** ExtraCrispy joined
[10:22] *** p6bannerbot sets mode: +v ExtraCrispy

[10:28] *** cognominal-p6 left
[10:32] *** cognominal-p6 joined
[10:33] *** p6bannerbot sets mode: +v cognominal-p6

[10:39] *** cognominal-p6 left
[10:40] *** cognominal-p6 joined
[10:40] *** p6bannerbot sets mode: +v cognominal-p6

[10:44] *** brrt left
[10:53] *** ExtraCrispy left
[10:57] *** ExtraCrispy joined
[10:57] *** p6bannerbot sets mode: +v ExtraCrispy

[11:03] *** cognominal-p6 left
[11:03] *** cognominal-p6 joined
[11:04] *** p6bannerbot sets mode: +v cognominal-p6

[11:10] *** robertle joined
[11:10] *** p6bannerbot sets mode: +v robertle

[11:23] <jnthn> pmurias: No objections from me to merge. :)

[11:23] <yoleaux> 09:29Z <lizmat> jnthn: s/construts/constructs/

[11:23] <jnthn> Spell checkers are useless...

[11:24] <jnthn> lizmat: Fixed, thanks

[11:28] <Geth> ¦ rakudo/master: 295 commits pushed by (Pawel Murias)++, pmurias++, (Garrett Goebel)++, (Paweł Murias)++

[11:28] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/2d7724f8bca3...a09536fd942d

[11:28] <Geth> ¦ rakudo/master: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.04-72-gc60df1e...2017.05-52-gcb169e00b

[11:44] <AlexDaniel> “Second, even after you make that clarification, people still continue to shorten the name to just Perl ("You're the Perl guy, right?").”

[11:44] <AlexDaniel> hah, heh… :'(

[11:44] <AlexDaniel> so relatable

[11:51] <pmurias> I feel what we rename to is super important before we decide if a rename is a good idea

[11:53] <lizmat> pmurias: did you see jnthn's ok ?

[11:58] <lizmat> aww... Geth is down again :-(   nobody saw pmurias' merge of the JS branch  :-(

[11:58] <lizmat> pmurias: congratulations!

[11:58] <nine> lizmat: it was reported! But Geth is smart enough to not list all the 295 commits :)

[11:59] <lizmat> ah, /me is blind  :-)

[11:59] <jnthn> Yay, le merge :)

[11:59] <nine> What a fantastic day :)

[11:59] <jnthn> pmurias++ \o/

[12:00] <jnthn> This makes pmurias++ the second person to develop/merge a new Rakudo backend. :) $bus-number++ :D

[12:00] *** [TuxCM] left
[12:01] <nine> Btw. the first NQP build that assembles bytecode from QAST directly just finished successfully :)

[12:04] <lizmat> .oO( more great news ahead, she thought while working on the P6W )

[12:06] *** cognominal-p6 left
[12:14] <timotimo> weekly: https://mastodon.social/@timotimo/100848930972850155

[12:14] <notable6> timotimo, Noted!

[12:16] *** lizmat left
[12:18] *** lizmat joined
[12:18] *** p6bannerbot sets mode: +v lizmat

[12:23] <Geth> ¦ roast: 42801d96ac | (Zoffix Znet)++ | S32-hash/map.t

[12:23] <Geth> ¦ roast: [v6.d REVIEW] Clarify Map.gist sorts

[12:23] <Geth> ¦ roast: 

[12:23] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/8a3908c3e

[12:23] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/42801d96ac

[12:26] *** cognominal-p6 joined
[12:26] *** p6bannerbot sets mode: +v cognominal-p6

[12:35] <nine> Aaaand nqp's test suite passes :)

[12:47] <Geth> ¦ nqp: 8b681e9669 | (Elizabeth Mattijsen)++ | tools/build/MOAR_REVISION

[12:47] <Geth> ¦ nqp: Bump Moar to get bit shift fix

[12:47] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/8b681e9669

[12:47] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.09-123-g0191bd9...2018.09-124-g588873f

[12:48] *** ExtraCrispy left
[12:58] *** cognominal-p6 left
[13:07] *** cognominal-p6 joined
[13:07] *** p6bannerbot sets mode: +v cognominal-p6

[13:08] <Geth> ¦ rakudo: 8bb34ff07c | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[13:08] <Geth> ¦ rakudo: Bump NQP to get the bit shift JIT removal fix

[13:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8bb34ff07c

[13:08] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.09-16-g759af9c...2018.09-17-g8b681e9

[13:09] <cognominal-p6> Eventually Perl 6 will take over Perl 5. So renaming is much ado about nothing. As far as renaming goes, I would like 6lang, but so far Perl 6 fails to deliver about macros.

[13:16] *** cognominal-p6 left
[13:16] *** cognominal-p6 joined
[13:17] *** p6bannerbot sets mode: +v cognominal-p6

[13:31] <stmuk> I can't see how an alias could be harmful. At worst it makes no difference and at best it helps

[13:31] <yoleaux> 9 Sep 2018 18:46Z <AlexDaniel> stmuk: can you fix that please? It's Test::META not Test::Meta https://gitlab.com/stmuk/p6-task-galaxy/blob/600adfac93f0da62025097853f8f021604a35e8f/META6.json#L52

[13:32] <lizmat> stmuk: we already have a de-facto alias: Rakudo

[13:32] <lizmat> some people call Perl 6 "Camelia" on PerlMonks

[13:32] <lizmat> people will call it names whatever the "official" name or alias is

[13:34] <stmuk> lizmat: I agree but the "its an implementation not the language people" won't

[13:37] <stmuk> anyway if larry makes a decision hopefully the whole name issue will go away

[13:38] *** cognominal-p6 left
[13:49] *** cognominal-p6 joined
[13:50] *** p6bannerbot sets mode: +v cognominal-p6

[14:05] *** cognominal-p6 left
[14:06] *** cognominal-p6 joined
[14:07] *** p6bannerbot sets mode: +v cognominal-p6

[14:28] *** lizmat left
[14:39] *** Kaiepi left
[14:40] *** Kaiepi joined
[14:40] *** PufferBot joined
[14:41] *** p6bannerbot sets mode: +v Kaiepi

[14:41] *** p6bannerbot sets mode: +v PufferBot

[15:19] <nine> And rakudo build finishes, too :)

[15:20] *** buggable joined
[15:20] *** ChanServ sets mode: +v buggable

[15:21] *** p6bannerbot sets mode: +v buggable

[15:21] <Geth> ¦ nqp/nqp-mbc: ef282200eb | (Stefan Seifert)++ | 6 files

[15:21] <Geth> ¦ nqp/nqp-mbc: Assemble byte code directly instead of assembling a MAST

[15:21] <Geth> ¦ nqp/nqp-mbc: review: https://github.com/perl6/nqp/commit/ef282200eb

[15:21] <Geth> ¦ nqp/nqp-mbc: 8aa963db2a | (Stefan Seifert)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[15:21] <Geth> ¦ nqp/nqp-mbc: Work around order issue when compiling repeat loops

[15:21] <Geth> ¦ nqp/nqp-mbc: review: https://github.com/perl6/nqp/commit/8aa963db2a

[15:21] <Geth> ¦ nqp/nqp-mbc: 50ed735ac6 | (Stefan Seifert)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[15:21] <Geth> ¦ nqp/nqp-mbc: Fix mbc stage of nqp::if when the then branch doesn't return a result

[15:21] <Geth> ¦ nqp/nqp-mbc: review: https://github.com/perl6/nqp/commit/50ed735ac6

[15:22] <Geth> ¦ rakudo/nqp-mbc: 4de6b8596b | (Stefan Seifert)++ | src/vm/moar/Perl6/Ops.nqp

[15:22] <Geth> ¦ rakudo/nqp-mbc: Get rid of MAST

[15:22] <Geth> ¦ rakudo/nqp-mbc: review: https://github.com/rakudo/rakudo/commit/4de6b8596b

[15:26] <Geth> ¦ roast: ef369a45ea | (Zoffix Znet)++ | S05-modifier/ignorecase.t

[15:26] <Geth> ¦ roast: [v6.d REVIEW] Fix ignorecase ligature test descriptions

[15:26] <Geth> ¦ roast: 

[15:26] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/946d2ff79

[15:26] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ef369a45ea

[15:28] <Geth> ¦ roast: 4c3778a4db | (Zoffix Znet)++ | S06-signature/slurpy-and-interpolation.t

[15:28] <Geth> ¦ roast: Remove trailing whitespace

[15:28] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/4c3778a4db

[15:30] <Geth> ¦ roast: 6e52734322 | (Zoffix Znet)++ | S12-introspection/attributes.t

[15:30] <Geth> ¦ roast: [v6.d REVIEW] Fix typo in attr test desc

[15:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6e52734322

[15:32] *** fake_space_whale joined
[15:32] <Geth> ¦ roast: 3bef51542a | (Zoffix Znet)++ | S32-exceptions/misc.t

[15:32] <Geth> ¦ roast: [v6.d REVIEW] Use more unique name in type suggestion error

[15:32] <Geth> ¦ roast: 

[15:32] <Geth> ¦ roast: In case we ever introduce some similar-named type and it'd end up

[15:32] <Geth> ¦ roast: being in the list of suggestions.

[15:32] <Geth> ¦ roast: 

[15:32] <Geth> ¦ roast: Orig: https://github.com/perl6/roast/commit/3014999fc

[15:32] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3bef51542a

[15:33] *** p6bannerbot sets mode: +v fake_space_whale

[15:51] *** lizmat joined
[15:51] *** p6bannerbot sets mode: +v lizmat

[16:09] <Geth> ¦ nqp/nqp-mbc: 534d81b817 | (Stefan Seifert)++ | 2 files

[16:09] <Geth> ¦ nqp/nqp-mbc: Get rid of push_ilist

[16:09] <Geth> ¦ nqp/nqp-mbc: 

[16:09] <Geth> ¦ nqp/nqp-mbc: Since we don't use the assembled instruction lists any longer, there's no

[16:09] <Geth> ¦ nqp/nqp-mbc: need to append lists anymore.

[16:09] <Geth> ¦ nqp/nqp-mbc: review: https://github.com/perl6/nqp/commit/534d81b817

[16:09] <Geth> ¦ nqp/nqp-mbc: 131c6d29ef | (Stefan Seifert)++ | 2 files

[16:09] <Geth> ¦ nqp/nqp-mbc: Remove @il argument of push_op

[16:09] <Geth> ¦ nqp/nqp-mbc: 

[16:09] <Geth> ¦ nqp/nqp-mbc: It's now just a wrapper for MAST::Op.new_with_operand_array

[16:09] <Geth> ¦ nqp/nqp-mbc: review: https://github.com/perl6/nqp/commit/131c6d29ef

[16:36] <AlexDaniel> releasable6: next

[16:36] <yoleaux> 16:15Z <jmerelo> AlexDaniel: thanks!

[16:36] <releasable6> AlexDaniel, Next release in ≈13 days and ≈2 hours. 1 blocker. 0 out of 371 commits logged

[16:36] <releasable6> AlexDaniel, Details: https://gist.github.com/99933c2fb138a502ae71bafff4fbcb8a

[16:36] <AlexDaniel> holy moly 371 commits

[17:14] <lizmat> AlexDaniel: js branch :-)

[18:03] *** MasterDuke joined
[18:03] *** p6bannerbot sets mode: +v MasterDuke

[18:03] *** MasterDuke left
[18:03] *** MasterDuke joined
[18:03] *** herbert.freenode.net sets mode: +v MasterDuke

[18:03] *** p6bannerbot sets mode: +v MasterDuke

[18:09] <Geth> ¦ rakudo/nqp-mbc: b9fc202cac | (Stefan Seifert)++ | src/vm/moar/Perl6/Ops.nqp

[18:09] <Geth> ¦ rakudo/nqp-mbc: Take the list ouf of MAST::InstructionList

[18:09] <Geth> ¦ rakudo/nqp-mbc: review: https://github.com/rakudo/rakudo/commit/b9fc202cac

[18:09] <Geth> ¦ rakudo/nqp-mbc: 3f9eca850d | (Stefan Seifert)++ | src/vm/moar/Perl6/Ops.nqp

[18:09] <Geth> ¦ rakudo/nqp-mbc: Get rid of push_ilist

[18:09] <Geth> ¦ rakudo/nqp-mbc: review: https://github.com/rakudo/rakudo/commit/3f9eca850d

[18:21] *** ggoebel left
[18:36] *** ggoebel joined
[18:37] *** p6bannerbot sets mode: +v ggoebel

[18:41] *** brrt joined
[18:42] *** p6bannerbot sets mode: +v brrt

[18:44] <brrt> \o

[18:51] <brrt> since the whole language name debate has come up, again, I will say the only thing I have to say about it here

[18:55] <brrt> Perl is a scripting language. All perls have always been

[18:56] <brrt> The potential of perl 6 is to be both suitable for adhoc as well as systematically developed programs

[18:57] <brrt> To have concurrency and scalability and oneliners in one language

[18:59] <brrt> Also to have good performance, for scripting notions of this anyway, and a language you can extend to do unexpected things

[18:59] <brrt> If we, as a community, can realize this, then nobody in the world is going to care what we call it

[18:59] <brrt> If perl6 is the language it could be, then people *will* use it, under *any* name

[19:01] <brrt> ... or in other words, what we need is people to think 'I was going to do it in ruby/php/python/javascript, but I decided to use perl6 instead because it was better that way'

[19:01] <brrt> aiming for anything less than that is pointless

[19:01] <brrt> now I'm happy to admit that this will take a long, long time

[19:01] <lizmat> brrt: +1

[19:03] <brrt> as a meta topic, I'd say that the whole 'scripting' community is facing headwinds these days; and frankly, I see little potential from any other language than perl6 in turning that arround

[19:07] <pmurias> brrt: static typing/performance and tools support seems to be the things that the 'scripting' community is loosing on and they aren't our strong points :(

[19:08] <brrt> pmurias: agreed. There's actually two things going on, and one of them is easily understood, and the other is a bit weird

[19:09] <brrt> the easy one is performance - single threaded performance has hit a plateau. But there are more users (devices) online then ever. So either we need more boxes, or we need to do more work per box.

[19:09] <brrt> It used to be the case, not so long ago, that the notion 'programmer time is cheapr than machine time' was beyond doubt

[19:10] <brrt> These days people are writing rust, so that kind of disproves that

[19:11] <brrt> The static typing thing is less easy to explain

[19:12] <brrt> I may be cynical, but I think I *can* explain it

[19:12] <brrt> Bootcamps

[19:12] <brrt> So the just-so story is this

[19:13] <brrt> - first, we have an increase in the economic potential of computer technology, basically because more people (and devices) are connected for longer times, and they can do more

[19:15] <brrt> - and because technologically intermediated transactions are typically better (faster, more reliable, more transparent, cheaper) than traditional methods, a lot of economic activity gradually moves online

[19:15] <brrt> - because that happens, there is a huge demand for people who have skills to manage/enable this transition, i.e. programmers

[19:16] <brrt> - because of this huge demand, programming computers is suddenly a Good Carreer

[19:16] <brrt> It wasn't that way not so long ago

[19:17] <brrt> - because of this new status of a Good Carreer, there is an influx of people that wouldn't otherwise be programming, and many of them not via traditional paths, i.e. bootcamps

[19:18] <brrt> How's that related to static typing, you might ask. 

[19:19] <brrt> well, static typing is a defense mechanism; it locks down the set of behaviours of a program

[19:21] <brrt> This is going to sound elitist but isn't really; if there's a lot of influx of new programmers, a lot of them are going to be inexperienced

[19:21] <geekosaur> note how many people start looking at haskell because they think static types are a magic bullet, expressed as "if it typechecks, it'll work first time" (which… no)

[19:22] <brrt> programmers that are less experienced are more likely to make the kind of mistakes that a type system defends against

[19:22] <geekosaur> it helps, but it's no magic bullet

[19:23] <brrt> programmers that are more experienceed will mentally apply those type constraints and are more likely to encounter situations in which the type system prevents them from doing things that they want and know are valid

[19:24] <brrt> (for instance, I'm working a bunch in java lately, and if there's anybody anywhere that relies on a class hierarchy being met, good luck in slipping in your modification in)

[19:24] <brrt> geekosaur: indeed. I see the same with rust

[19:25] <Kaiepi> the only experience i have with java is stack overflow and nqp

[19:25] <Kaiepi> and their documentation

[19:25] <brrt> so the system is this: more economic value of programs <- More demand for programmers <- more influx of inexperienced programs <- higher value of defense against 'beginners mistakes'

[19:27] <pmurias> brrt: seems a bit elitist, a lot of better coders like static typing too

[19:27] <brrt> ultimately, that influx will be balanced, the average experience of a programmer will increase, the value of a static type system will decrease and its cost will increase

[19:28] <pmurias> and looking at a random list of 'top bootcamps' a lot of them are training scripting programmers

[19:28] <brrt> proving my point exactly

[19:29] <brrt> Well, the other coin I can flip is that static type systems are more valuable in large codebases, and large codebases are a beginners mistake :-P

[19:29] <geekosaur> pmurias, for different reasosn though

[19:30] <brrt> I can give you a more pessimistic story, still

[19:30] <geekosaur> static types are a tool, helpful in some cases, wrong tool in others

[19:30] <brrt> the advantage of scriptng languages is that they allow you to whip up something without a lot of fuss

[19:31] <brrt> it is generally harder to make a 'robust' system out of scripts

[19:31] <geekosaur> and tring to extend tat tool too far leads to something like tim sheards omega; it has some neat concepts, but those concepts are also why you've never heard of it

[19:31] <brrt> .oO( What is omega? )

[19:32] <geekosaur> it's a functional programming language where the type level language is identical to the value level. and has its own "types of types" level language, which is again the same, and on up indefinitely

[19:32] <brrt> now making something quickly without a lot of fuss is *very* valuable in a dynamic market where you (and everybody else) is trying to do everything as quickly as possible

[19:33] <brrt> right....

[19:33] <brrt> doing something robust and well executed and perhaps a bit slower than otherwise would be the case, that is typical of well-established, entrenched markets

[19:33] <geekosaur> so, once you start mucking with movig stuff to type level, you discover that it's less expressive than value level, but checking some things at type level requires more expressiveness. which leads to dependent types

[19:34] <geekosaur> omega takes that to its irrational limit, every level is fully expressive and there's an infinite hierarchy of levels. which makes it hard to keep track of what level you're on introducing whole new kinds of weird bugs

[19:35] <geekosaur> and incomprehensibility

[19:35] <geekosaur> it's nciely symmetric, but symmetry turns out to equate to confusion for people

[19:36] <brrt> :-)

[19:36] <pmurias> brrt: I think a bigger factor is that the newer static languages are better nowadays then the old ones

[19:36] <brrt> that may well be part of it

[19:36] <brrt> but, I've been learning rust, and ...

[19:36] <brrt> well, hmm

[19:37] <brrt> have you seen lifetime annotations?

[19:37] <pmurias> brrt: so it's python vs go not python vs (plainly disgusting) C++ or python vs old school java without closers

[19:37] <pmurias> * closures

[19:37] <brrt> hehe, go is also on the receiving end of a lot of hate

[19:37] <Kaiepi> i'm surprised no one's brought up js

[19:38] <geekosaur> and you do always have that confusion between ease of use vs. stringency

[19:38] <Kaiepi> guess there's no point in beating a dead horse though

[19:38] <geekosaur> (I'd say strictness btu I've already mentioned haskell, where that means something else)

[19:38] <pmurias> brrt: rust being complex is a benefit in some ways

[19:38] <geekosaur> ehhhh, that's potentially getting back to elitism

[19:38] <brrt> (js is nice enough)

[19:39] <brrt> hehehehe

[19:39] <pmurias> brrt: people have something to learn and a such I guess are more invested in it

[19:39] <brrt> if by invested you mean 'ready to join the evangelism strike force' :-P

[19:40] <jdv79_> the java over perl thing is not new

[19:40] <brrt> also, if you want to see the elitism here, then you can also say that static types are a defense of traditinally trained developers against bootcampers 

[19:40] *** MasterDuke left
[19:40] <jdv79_> i remember experiencing and hearing about migration projects like that since the early 2000s

[19:41] <brrt> well, the early 2000s were less dynamical than the early 2010s

[19:41] <jdv79_> so the bootcamper thing may have added to it but it existed before them

[19:42] <pmurias> brrt: you can do all sorts of wizardy with macros and stuff in rust and you can actually feel you are learning something at least interesting

[19:42] <brrt> I'm not saying that rust isn't an interesting language. It certainly is. And super ambitious

[19:43] <brrt> What I will say is that it is a usability nightmare. And I think that this is part of the attraction for many.

[19:43] <geekosaur> go look at folks who were doing clever things with shell scripts in the late 70s/early 80s

[19:43] <geekosaur> …then at folks doing the same with ibm jcl in the 60s

[19:43] <brrt> :-)

[19:44] <brrt> what hopefully will happen is that there emerges a domain of work that isn't neatly expressed by static languages

[19:44] <pmurias> brrt: I don't imagine having fun playing with go (as opposed to building stuff in it)

[19:44] <pmurias> s/don't/can't

[19:45] <brrt> I'm saying hopeful because I think that this situation is more interesting than reengineering the same things to be faster in a static language

[19:45] <pmurias> Perl 6 is more in Rust like in that regard

[19:46] <pmurias> in regards to speed graalvm trying to capture the scripting market is interesting

[19:54] *** AlexDaniel left
[19:54] *** AlexDaniel joined
[19:55] *** p6bannerbot sets mode: +v AlexDaniel

[19:56] <brrt> Certainly

[19:57] <brrt> (well, not that perl6 is like rust. rust is the anti-adhoc engineering language)

[19:58] <Kaiepi> still mad rust doesn't have openbsd as a very high priority on their list of languages to support

[20:01] <pmurias> brrt: I view Rust as a very perlish design as it tries to solve problems by sticking a bunch of stuff in

[20:02] <brrt> I view it as 'C++, but with more theory'

[20:02] <brrt> I guess you can make the point that perl is kind of like that as well

[20:16] *** brrt left
[20:16] *** gfldex_ is now known as gfldex

[20:16] *** gfldex left
[20:16] *** gfldex joined
[20:17] *** p6bannerbot sets mode: +v gfldex

[21:10] *** pmurias left
[21:12] *** pmurias joined
[21:12] *** p6bannerbot sets mode: +v pmurias

[21:13] <Geth> ¦ 6.d-prep: a46078fa92 | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/README.md

[21:13] <Geth> ¦ 6.d-prep: Naming TODO is now completed

[21:13] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/a46078fa92

[21:19] *** AlexDaniel left
[21:19] *** robertle left
[21:19] *** AlexDaniel joined
[21:20] *** p6bannerbot sets mode: +v AlexDaniel

[22:05] *** dogbert21 joined
[22:05] *** dogbert21 left
[22:05] *** dogbert2_ left
[22:08] *** pmurias left
[22:08] *** pmurias joined
[22:08] *** p6bannerbot sets mode: +v pmurias

[22:13] *** lizmat left
[22:14] *** ufobat_ left
[22:18] <japhb> New module zef install failure at Rakudo HEAD (my full rebuild script from last night failed earlier than this, so I'm not sure what commit broke it):

[22:18] <japhb> ===> Testing: IO::Path::ChildSecure:ver<1.001011>

[22:18] <japhb> Type check failed for return value; expected Match but got IO::Path (IO::Path.new("/tmp/perl6_roas...)

[22:18] <japhb>   in sub make-rand-path at t/01-operation.t line 16

[22:18] <japhb>   in sub make-temp-dir at t/01-operation.t line 33

[22:18] <japhb>   in block <unit> at t/01-operation.t line 58

[22:58] <AlexDaniel> o nice

[23:01] *** lizmat joined
[23:01] *** p6bannerbot sets mode: +v lizmat

[23:03] <AlexDaniel> 🥞 Bisecting IO::Path::ChildSecure

[23:03] <AlexDaniel> :)

[23:03] <AlexDaniel> it doesn't have any dependencies, unfortunately, so not that fancy

[23:12] *** dct left
[23:13] <AlexDaniel> japhb: I think it is this commit: https://github.com/rakudo/rakudo/commit/3b453c575de14efd3abfa4f49c82a059ddccc3cd

[23:13] <yoleaux> 23:12Z <uzl> AlexDaniel: Not directly related with a Russian tutorial but I've been working in a Spanish translation of

[23:13] <yoleaux> 23:12Z <uzl> AlexDaniel: 'Think Perl 6' and a while back I asked for a (community?) review of the translation. Lately

[23:15] <AlexDaniel> japhb: at least my new fancy tool says that it is that commit, it'd be nice if you could verify it

[23:16] <AlexDaniel> I didn't look at the code, and the commit does not look like it is related

[23:17] <AlexDaniel> but “bisectable is always right” and this tool is built upon bisectable… who knows!

[23:22] <japhb> AlexDaniel: OK, will check

[23:23] <japhb> AlexDaniel: Running a build at that commit, and after that will try the commit right before it.

[23:23] <AlexDaniel> japhb: awesome! Can't wait to know the result

[23:24] *** MasterDuke joined
[23:24] *** p6bannerbot sets mode: +v MasterDuke

[23:28] *** MasterDuke left
[23:28] *** MasterDuke joined
[23:28] *** herbert.freenode.net sets mode: +v MasterDuke

[23:28] *** p6bannerbot sets mode: +v MasterDuke

[23:44] <japhb> Wow, that rev blows up spectacularly -- it won't even install zef itself.  `cd zef; .../perl6/rakudo-moar-3b453c575de14efd3abfa4f49c82a059ddccc3cd/install/bin/perl6-m -Ilib bin/zef install .` gives: When invoking 33 '', provided outer frame 0x55562adf72e8 (62 '') does not match expected static frame 0x55562adf73e0 (34 '')

[23:44] <japhb> Trying previous

[23:45] <AlexDaniel> damn, I guess we got a bit unlucky with that bisect

[23:48] <timotimo> turn spesh off? :)

[23:49] <japhb> timotimo: I'm trying to minimize variables changed.

[23:49] <japhb> Previous rev is making it farther.

