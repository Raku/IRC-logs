[00:20] *** ufobat___ left
[00:22] <Geth> ¦ roast/6.d-errata: 5070ebb27c | (Elizabeth Mattijsen)++ (committed by Aleks-Daniel Jakimenko-Aleksejev) | S06-signature/errors.t

[00:22] <Geth> ¦ roast/6.d-errata: Make error check a bit less precise

[00:22] <Geth> ¦ roast/6.d-errata: 

[00:22] <Geth> ¦ roast/6.d-errata: Now that the error message also mentions definedness.

[00:22] <Geth> ¦ roast/6.d-errata: review: https://github.com/perl6/roast/commit/5070ebb27c

[00:41] *** cognominal joined
[00:42] *** p6bannerbot sets mode: +v cognominal

[01:00] *** lizmat joined
[01:00] *** p6bannerbot sets mode: +v lizmat

[01:04] *** lizmat left
[01:25] *** dalek left
[01:33] *** cognominal left
[01:34] *** cognominal joined
[01:34] *** p6bannerbot sets mode: +v cognominal

[01:38] *** cognominal left
[02:14] *** cognominal joined
[02:15] *** p6bannerbot sets mode: +v cognominal

[02:17] <AlexDaniel> releasable6: status

[02:17] <releasable6> AlexDaniel, Next release will happen when it's ready. 2 blockers. 62 out of 74 commits logged (⚠ 1 warnings)

[02:17] <releasable6> AlexDaniel, Details: https://gist.github.com/c51637b6d93b86942b810a9a3e6c049f

[02:23] *** synopsebot left
[02:40] *** cognominal left
[02:41] *** cognominal joined
[02:41] *** p6bannerbot sets mode: +v cognominal

[02:45] *** cognominal left
[03:02] *** cognominal joined
[03:03] *** p6bannerbot sets mode: +v cognominal

[03:11] *** cognominal left
[03:12] *** cognominal joined
[03:13] *** p6bannerbot sets mode: +v cognominal

[03:17] *** cognominal left
[03:50] *** cognominal joined
[03:51] *** p6bannerbot sets mode: +v cognominal

[05:09] *** cognominal left
[05:32] *** cognominal joined
[05:33] *** p6bannerbot sets mode: +v cognominal

[05:37] *** cognominal left
[06:10] *** cognominal joined
[06:11] *** p6bannerbot sets mode: +v cognominal

[07:30] *** ufobat___ joined
[07:30] *** p6bannerbot sets mode: +v ufobat___

[07:43] *** Geth left
[07:47] *** hankache joined
[07:48] *** p6bannerbot sets mode: +v hankache

[10:03] *** hankache_ joined
[10:04] *** p6bannerbot sets mode: +v hankache_

[10:06] *** hankache left
[10:27] *** lucasb joined
[10:27] *** p6bannerbot sets mode: +v lucasb

[10:38] <lucasb> .

[10:38] <yoleaux> 15 Dec 2018 23:42Z <timotimo> lucasb: why would it be (a, b, c).Str and not (a, b, c).join("")?

[10:47] <[Tux]> Rakudo version 2018.11-74-g41d2da095 - MoarVM version 2018.11-38-gfa3411007

[10:47] <[Tux]> csv-test-xs-20      0.433 -  0.439

[10:47] <[Tux]> test-t --race       0.786 -  0.790

[10:47] <[Tux]> csv-ip5xs           0.924 -  0.938

[10:47] <[Tux]> test-t              1.769 -  1.819

[10:47] <[Tux]> csv-ip5xs-20        7.064 -  7.127

[10:47] <[Tux]> test                6.860 -  7.490

[10:47] <[Tux]> test-t-20 --race    9.340 -  9.456

[10:47] <[Tux]> csv-parser         22.723 - 22.978

[10:47] <[Tux]> test-t-20          31.081 - 31.415

[10:48] <lucasb> timotimo: IMO, it just seems natural to make (1,2,3).Str, Str(1,2,3), and Str.new(1,2,3) all the same. But I would accept your args.join("") suggestion as well :)

[10:50] <lucasb> with join, then Str.new(1, 2, 3) will not be equal to Str.new([1, 2, 3])

[11:52] *** hankache_ left
[13:25] *** quotable6 left
[13:25] *** bloatable6 left
[13:25] *** bisectable6 left
[13:25] *** squashable6 left
[13:25] *** undersightable6 left
[13:25] *** benchable6 left
[13:25] *** coverable6 left
[13:25] *** reportable6 left
[13:25] *** releasable6 left
[13:25] *** greppable6 left
[13:25] *** statisfiable6 left
[13:25] *** evalable6 left
[13:25] *** unicodable6 left
[13:25] *** notable6 left
[13:25] *** shareable6 left
[13:25] *** nativecallable6 left
[13:25] *** committable6 left
[13:25] *** bisectable6 joined
[13:25] *** ChanServ sets mode: +v bisectable6

[13:25] *** evalable6 joined
[13:25] *** ChanServ sets mode: +v evalable6

[13:25] *** notable6 joined
[13:26] *** p6bannerbot sets mode: +v bisectable6

[13:26] *** p6bannerbot sets mode: +v evalable6

[13:26] *** p6bannerbot sets mode: +v notable6

[13:26] *** bloatable6 joined
[13:26] *** ChanServ sets mode: +v bloatable6

[13:27] *** greppable6 joined
[13:27] *** p6bannerbot sets mode: +v bloatable6

[13:27] *** p6bannerbot sets mode: +v greppable6

[13:27] *** undersightable6 joined
[13:27] *** ChanServ sets mode: +v undersightable6

[13:28] *** reportable6 joined
[13:28] *** quotable6 joined
[13:28] *** p6bannerbot sets mode: +v undersightable6

[13:28] *** benchable6 joined
[13:28] *** squashable6 joined
[13:28] *** ChanServ sets mode: +v squashable6

[13:28] *** releasable6 joined
[13:28] *** ChanServ sets mode: +v releasable6

[13:29] *** p6bannerbot sets mode: +v reportable6

[13:29] *** p6bannerbot sets mode: +v quotable6

[13:29] *** p6bannerbot sets mode: +v benchable6

[13:29] *** p6bannerbot sets mode: +v squashable6

[13:29] *** p6bannerbot sets mode: +v releasable6

[13:29] *** coverable6 joined
[13:29] *** nativecallable6 joined
[13:30] *** shareable6 joined
[13:30] *** ChanServ sets mode: +v shareable6

[13:30] *** p6bannerbot sets mode: +v coverable6

[13:30] *** p6bannerbot sets mode: +v nativecallable6

[13:30] *** statisfiable6 joined
[13:30] *** unicodable6 joined
[13:30] *** committable6 joined
[13:31] *** p6bannerbot sets mode: +v shareable6

[13:31] *** p6bannerbot sets mode: +v statisfiable6

[13:31] *** p6bannerbot sets mode: +v unicodable6

[13:31] *** p6bannerbot sets mode: +v committable6

[13:56] *** lizmat joined
[13:56] *** p6bannerbot sets mode: +v lizmat

[14:52] *** thundergnat joined
[14:53] *** p6bannerbot sets mode: +v thundergnat

[14:56] <thundergnat> I am in the process of writing binding to the libxdo X11 automation library. I am probably about 80% of the way there but am having trouble figuring out the correct calling conventions for some of the more involved routines.

[14:57] <thundergnat> I haven't done any serious C development for many years, and wasn't so hot then, so I am fumbling around quite a bit.

[14:58] <thundergnat> If someone could take a look and maybe nudge me in the right direction I would be grateful.  Cut down gist of where I am having trouble: https://gist.github.com/thundergnat/9aec3d1a6cc2be0f37899c5fe0c33e77

[15:00] <thundergnat> So far, I found I'm pretty good at producing segfaults. :-/

[15:17] <jnthn> thundergnat: About to head out, so can't look now, but tip: try perl6-valgrind-m which will tell you more details about the cause of SEGVs

[15:17] <thundergnat> Cool, I'll give that a shot. thanks

[15:31] <timotimo> thundergnat: it's quite possible that "int" is wrong and it should all be "int32" instead

[15:31] <thundergnat> In the Query Struct you mean?

[15:31] <timotimo> yeah

[15:31] <timotimo> though now i see you also use long and uint32

[15:32] <timotimo> so it's of course quite possible you've already thought of it

[15:32] <thundergnat> Just trying to follow the original struct as much as possible.

[15:35] <thundergnat> I'm not really sure what $ids should be. CArray[Str] maybe?

[15:37] <timotimo> dunno where to look to find out tbh :(

[15:37] <lucasb> https://github.com/jordansissel/xdotool/blob/master/xdo.h#L168-L193

[15:44] <lucasb> $ids is Window **windowlist_ret ? Window is a X11 thing?

[15:46] <thundergnat> Window is just a (64 bit?) integer ID # in this context. 

[16:30] *** cognominal left
[16:33] *** cognominal joined
[16:34] *** p6bannerbot sets mode: +v cognominal

[17:37] *** cognominal left
[17:38] *** cognominal joined
[17:39] *** p6bannerbot sets mode: +v cognominal

[17:42] *** cognominal left
[17:51] *** dalek joined
[17:51] *** ChanServ sets mode: +v dalek

[17:51] *** SourceBaby left
[17:51] *** p6lert_ left
[17:51] *** synopsebot joined
[17:51] *** ChanServ sets mode: +v synopsebot

[17:51] *** p6lert joined
[17:51] *** Geth joined
[17:51] *** ChanServ sets mode: +v Geth

[17:52] *** p6bannerbot sets mode: +v dalek

[17:52] *** p6bannerbot sets mode: +v synopsebot

[17:52] *** p6bannerbot sets mode: +v p6lert

[17:52] *** p6bannerbot sets mode: +v Geth

[17:56] *** lucasb left
[18:11] *** cognominal joined
[18:12] *** p6bannerbot sets mode: +v cognominal

[18:22] *** cognominal left
[18:23] *** cognominal joined
[18:24] *** p6bannerbot sets mode: +v cognominal

[18:28] *** cognominal left
[18:56] *** cognominal joined
[18:57] *** p6bannerbot sets mode: +v cognominal

[20:12] *** dct joined
[20:12] *** p6bannerbot sets mode: +v dct

[20:23] *** lizmat left
[20:30] *** lizmat joined
[20:30] *** p6bannerbot sets mode: +v lizmat

[20:42] *** cognominal left
[20:42] *** cognominal joined
[20:43] *** p6bannerbot sets mode: +v cognominal

[20:47] *** cognominal left
[21:16] *** cognominal joined
[21:17] *** p6bannerbot sets mode: +v cognominal

[21:38] <lizmat> m: my @a = (1,2),(3,4,5); say @a[1;2].WHAT; @a[1;2] = 42  # this feels like a bug

[21:38] <camelia> rakudo-moar 41d2da095: OUTPUT: «(Int)␤Cannot modify an immutable List ((3 4 5))␤  in block <unit> at <tmp> line 1␤␤»

[21:39] <lizmat> m: my @a = (1,2),(3,4,5); use nqp; dd nqp::iscont(@a[1;2])  # I guess the problem is that it doesn't return a container

[21:39] <camelia> rakudo-moar 41d2da095: OUTPUT: «0␤»

[21:47] *** dct left
[21:48] *** cognomin_ joined
[21:48] *** p6bannerbot sets mode: +v cognomin_

[21:51] *** cognominal left
[21:59] <lizmat> ah, duh, they were lists

[21:59] <lizmat> m: my @a = [1,2],[3,4,5]; say @a[1;2]; say @a[1;2] = 42

[21:59] <camelia> rakudo-moar 41d2da095: OUTPUT: «5␤42␤»

[22:08] *** Kaypie is now known as Kaiepi

[22:11] <AlexDaniel> any help with R#2520 will be appreciated, I really don't know what to do there

[22:11] <synopsebot> R#2520 [open]: https://github.com/rakudo/rakudo/issues/2520 [⚠ blocker ⚠] Trace traps and double frees when building Rakudo

[22:24] *** lucasb joined
[22:24] *** p6bannerbot sets mode: +v lucasb

[22:26] <lucasb> I noticed the @LARRY tag was renamed :)

[22:26] <lizmat> lucasb: yeah, I did that

[22:26] <lucasb> So, consensus is only required in issues labeled with CONSENSUS. In all other issues, please go ahead and do anything you want :)

[22:27] <lizmat> no, you need consensus for that as well, not CONSENSUS  :-)

[22:27] *** go|dfish left
[22:27] <lizmat> but seriously, you have a point there

[22:28] <lizmat> maybe CABAL would be better?   :-)

[22:28] <lucasb> thanks for renaming lizmat++, I didn't know it was you :)

[22:28] <lucasb> I would have suggested "design", or "language-design"

[22:29] <AlexDaniel> yeah I don't really like “CONSENSUS” work but I'm happy that it was renamed, lizmat++

[22:29] <AlexDaniel> word*

[22:30] <mornfall> hmm, interesting question re PR #2529

[22:30] <lizmat> Looking at https://github.com/rakudo/rakudo/issues?q=is%3Aissue+is%3Aopen+label%3ACONSENSUS , I don't think they're all design decisions

[22:31] <lizmat> OTOH, maybe some of them are mistagged

[22:31] <mornfall> is on-close ever the right way to clean up resources?

[22:31] <lizmat> jnthn would know

[22:31] <lizmat> timotimo sena_kun perhaps as well

[22:32] *** go|dfish joined
[22:32] *** p6bannerbot sets mode: +v go|dfish

[22:37] *** cognominal joined
[22:37] *** p6bannerbot sets mode: +v cognominal

[22:40] *** cognomin_ left
[22:44] <lucasb> dropping "design", then "language" or "the-language" is another alternative naming for the label. (In addition to "requires-reflection", but don't all require?)

[22:46] <lucasb> FWIW, my preferred case for labels is lowercase :)

[22:48] <lucasb> if not all issues fit into "language-design", then maybe split into more labels and relabel those mis-labeled

[23:11] <Geth> ¦ roast: 56d4a5c5a9 | (Elizabeth Mattijsen)++ | S03-buf/write-int.t

[23:11] <Geth> ¦ roast: Expand tests to signed values / getintX methods

[23:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/56d4a5c5a9

[23:12] <Geth> ¦ rakudo: 7f3f77d43b | (Elizabeth Mattijsen)++ | t/spectest.data

[23:12] <Geth> ¦ rakudo: Also run write-int tests from now on

[23:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7f3f77d43b

[23:13] *** dct joined
[23:13] *** p6bannerbot sets mode: +v dct

[23:31] *** go|dfish left
[23:34] *** go|dfish joined
[23:34] *** p6bannerbot sets mode: +v go|dfish

