[00:10] <japhb> dogbert17: There's a channel for which it is slightly less OT: #perl6-gaming

[05:36] <Geth> ¦ rakudo: 874fcdda2d | (Zoffix Znet)++ | src/core/Str.pm6

[05:36] <Geth> ¦ rakudo: Straighten up $/ handling in Str.subst[-mutate]

[05:36] <Geth> ¦ rakudo:

[05:36] <Geth> ¦ rakudo: Fixes RT#130688: https://rt.perl.org/Ticket/Display.html?id=130688

[05:36] <Geth> ¦ rakudo:

[05:36] <Geth> ¦ rakudo: - Set $/ to a List of Matches for multi-match options

[05:36] <Geth> ¦ rakudo: - Remove awkward handling of Failure cases by not storing

[05:36] <Geth> ¦ rakudo:     matches in an Array in the first place

[05:36] <synopsebot> RT#130688 [new]: https://rt.perl.org/Ticket/Display.html?id=130688 [BUG] .subst/.subst-mutate with :g do not set $/ to all the matches

[05:36] <Geth> ¦ rakudo: - Remove several cases of pointless setting of $/

[05:36] <Geth> ¦ rakudo:     (it defaults to a Nil, so in the removed cases all we did

[05:36] <Geth> ¦ rakudo:     was set caller's $/ to a Nil for no good reason)

[05:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/874fcdda2d

[05:41] <Geth> ¦ roast: af02dd68eb | (Zoffix Znet)++ | S05-substitution/subst.t

[05:41] <Geth> ¦ roast: Test .subst/.subst-mutate with multi-match args…

[05:41] <Geth> ¦ roast:

[05:41] <Geth> ¦ roast: …set $/ to a List

[05:41] <Geth> ¦ roast:

[05:41] <Geth> ¦ roast: RT#130688: https://rt.perl.org/Ticket/Display.html?id=130688

[05:41] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/874fcdda2d

[05:41] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/af02dd68eb

[07:31] <Geth> ¦ roast: b3a0aa18dd | usev6++ | 4 files

[07:31] <Geth> ¦ roast: [JVM] Unfudge some passing tests

[07:31] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b3a0aa18dd

[08:51] <lizmat> Files=1236, Tests=76259, 312 wallclock secs (14.74 usr  4.99 sys + 2147.87 cusr 212.67 csys = 2380.27 CPU)

[11:12] <lizmat> my talk proposal for OSCON has been rejected, so I won't be going to OSCON

[11:18] <DrForr> Got my rejections some time last night.

[12:51] <Kaiepi> is 2gb ram enough to build rakudo?

[12:51] <timotimo> should be

[12:52] <Kaiepi> perfect, i can get pufferbot set up on a freebsd vps then

[12:52] <timotimo> cool!

[14:17] <|Tux|> Rakudo version 2018.02.1-133-g874fcdda2 - MoarVM version 2018.02-33-ge639691a7

[14:17] <|Tux|> csv-test-xs-20      0.463 -  0.464

[14:18] <|Tux|> csv-ip5xs           0.811 -  0.818

[14:18] <|Tux|> test-t --race       1.044 -  1.071

[14:18] <|Tux|> test-t              2.568 -  2.598

[14:18] <|Tux|> csv-ip5xs-20        7.348 -  7.468

[14:18] <|Tux|> test                9.156 -  9.218

[14:18] <|Tux|> test-t-20 --race   16.518 - 16.526

[14:18] <|Tux|> csv-parser         36.907 - 36.927

[14:18] <|Tux|> test-t-20          46.984 - 47.055

[15:54] <dogbert2> m: sub postfix:<!>(Int $a) is looser(&infix:<+>) { 2 * $a }; say (3 + 4!) # is this supposed to work, i.e. return 14

[15:54] <camelia> rakudo-moar 874fcdda2: OUTPUT: «11␤»

[15:59] <Geth> ¦ rakudo: 3fb06bb054 | (Jonathan Worthington)++ | src/core.d/core_prologue.pm6

[15:59] <Geth> ¦ rakudo: CORE.d does not need `use MONKEY-TYPING`

[15:59] <Geth> ¦ rakudo:

[15:59] <Geth> ¦ rakudo: It doesn't augment anything.

[15:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3fb06bb054

[16:04] <dogbert2> good morning Zoffix

[16:07] <Zoffix> dogbert17: can't give a definite answer, but probably not. Considering `sub postfix:<foo>(|) { say "called" }; 42 foo` gives a TTIR error; there mustn't be any spaces.

[16:07] <yoleaux> 08:54Z <stmuk> Zoffix: WRT rakudo.org replacement I'd like something where I'm able to just commit MD into git and not mess with Wordpress (which seems to suffer frequent security issues anyway)

[16:09] <dogbert2> then we might possible be able to reject RT #126653

[16:09] <synopsebot> RT#126653 [new]: https://rt.perl.org/Ticket/Display.html?id=126653 [BUG] trait "is looser" doesn't work as expected.

[16:11] <Geth> ¦ rakudo/monkey-implies-no-precomp: 5da5441d0a | (Jonathan Worthington)++ | src/Perl6/World.nqp

[16:11] <Geth> ¦ rakudo/monkey-implies-no-precomp: Make MONKEY-TYPING imply `no precompilation`

[16:11] <Geth> ¦ rakudo/monkey-implies-no-precomp:

[16:11] <Geth> ¦ rakudo/monkey-implies-no-precomp: It's not possible to load two precompiled modules that both do a

[16:11] <Geth> ¦ rakudo/monkey-implies-no-precomp: monkey-patch to the same type. Precompiling them will thus result in

[16:11] <Geth> ¦ rakudo/monkey-implies-no-precomp: modules that cannot be loaded together with others.

[16:11] <Geth> ¦ rakudo/monkey-implies-no-precomp:

[16:11] <Geth> ¦ rakudo/monkey-implies-no-precomp: So far we've expected module authors to read the docs and remember to

[16:11] <Geth> ¦ rakudo/monkey-implies-no-precomp: <…commit message has 5 more lines…>

[16:11] <Geth> ¦ rakudo/monkey-implies-no-precomp: review: https://github.com/rakudo/rakudo/commit/5da5441d0a

[16:11] <Geth> ¦ rakudo: jnthn++ created pull request #1600: Make MONKEY-TYPING imply `no precompilation`

[16:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1600

[16:41] <japhb> releasable6: help

[16:41] <releasable6> japhb, status | status link # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Releasable

[16:41] <japhb> releasable6: status

[16:41] <releasable6> japhb, Next release in 9 days and ≈2 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[16:41] <releasable6> japhb, Details: https://gist.github.com/c80ec0f681d7b3a0ec779f5782db7fd3

[16:41] <japhb> jnthn: Why make it as a PR?

[16:43] <Zoffix> dogbert2: don't really see anything in S02 or S03 that definitively answers why that behaviour is observed. The closest I got was "no whitespace between the postfix and its noun" and in this case the "noun" would be the `4`, not the `3+4` (even if you removed the spaces). Also, I imagine the ticket won't be rejected, but at the very least a documentation commit will be made.

[16:45] <Zoffix> .ask TimToady are you able to answer why `sub postfix:<!>(Int $a) is looser(&infix:<+>) { 2 * $a }; say (3 + 4!)` applies `!` to `4` instead of `3+4`? There's a ticket for that and we're trying to figure out whether this should work, and if not, then how to document the reasons for why not

[16:45] <yoleaux> Zoffix: I'll pass your message to TimToady.

[17:50] <AlexDaniel> [Coke]: hey, I think dogbert17++ doesn't have enough privileges on RT (but needs them to work on older tickets)

[17:51] <AlexDaniel> [Coke]: his email is jan-olof.hendig at bredband.net

[18:04] <jnthn> japhb: Because I figured it might want some discussion/feedback

[18:17] <[Coke]> he already is a bugadmin

[18:18] <AlexDaniel> [Coke]: that makes sense but it's weird because he doesn't see most of the useful buttons…

[18:18] <AlexDaniel> dogbert17: what do you see exactly? Can we take a look at a screenshot?

[19:05] <Geth> ¦ nqp: jstuder-gh++ created pull request #430: Rakudo Issue 1588: Create getsignals op for MoarVM / JVM

[19:05] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/430

[19:06] <Geth> ¦ rakudo: jstuder-gh++ created pull request #1601: Issue 1588: Populate Signal enum with getsignals op

[19:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1601

[19:44] <[Coke]> dogbert2: also check what 'logged in as' says.

[19:50] <dogbert17> [Coke]: logged shows my email address

[19:50] <dogbert17> *logged in

[19:51] <[Coke]> and what are you missing>

[19:51] <[Coke]> (what's the URL, what's missing)

[19:51] <[Coke]> I see they've changed their auth mechanism since the last time I logged in.

[19:52] <dogbert17> a bunch of links to the right saying 'Display History Basics People ...'

[19:52] <dogbert17> https://screenshots.firefox.com/stKHr6PfZWHEfpco/rt.perl.org

[19:53] <[Coke]> dogbert17: what's the URL?

[19:53] <[Coke]> (display history basics) are all along the top of that shot you gave, btw.

[19:54] <[Coke]> and that "logged in" doesn't show your ID

[19:54] <[Coke]> are you saying that's someone else's screen grab? (again, need the URL)

[19:54] <AlexDaniel> dogbert17: yea I'm interested to see what *you* see :)

[19:55] <dogbert17> AlexDaniel: how did you make that screenshot, is it a feature in FF?

[19:55] <AlexDaniel> yes

[19:56] <[Coke]> before we get to a screen shot: what URL

[19:56] <AlexDaniel> [Coke]: any ticket

[19:56] <dogbert17> right now at  https://rt.perl.org/SelfService/Display.html?id=126563

[19:56] <[Coke]> Wrong URL.

[19:56] <AlexDaniel> wait… SelfService

[19:56] <[Coke]> try:

[19:56] <AlexDaniel> that's not right

[19:56] <[Coke]> https://rt.perl.org/Ticket/Display.html?id=126563

[19:56] <dogbert17> that's what I get

[19:57] <dogbert17> it just changes back to the link I posted

[19:57] <dogbert17> when I log in I can only see bugs reported by me

[19:58] <[Coke]> ok. Sounds like a bug. open a ticket with email addy mentioned at the bottom of that page: tell them you're trying to to the link I gave you, but you're instead getting redirected to the other link.

[19:59] <[Coke]> Please feel free to say that [email@hidden.address] mentioned that you are in the group "Perl6 BugAdmin"

[20:00] <dogbert17> [Coke]: I'll do that, thanks

[20:00] <[Coke]> g'luck.

[20:00] <[Coke]> m: say 1971.is-prime

[20:00] <camelia> rakudo-moar 3fb06bb05: OUTPUT: «False␤»

[20:58] <dogbert17> m: (:w :h<1>)

[20:58] <camelia> rakudo-moar 3fb06bb05: OUTPUT: «===SORRY!===␤Unknown QAST node type NQPMu␤»

[21:08] <dogbert17> .seen timotimo

[21:08] <yoleaux> I saw timotimo 12:52Z in #perl6-dev: <timotimo> cool!

[21:09] <dogbert17> timotimo: found a profiler problem: MoarVM panic: Profiler lost sequence

[21:11] <timotimo> aye, that's a problem indeed

[21:12] <timotimo> just re-run it until it works or wait for me to figure it out properly as part of my grant

[21:12] <dogbert17> timotimo: try this -     perl6 --profile -e 'say (^1000).race(batch=>1, degree=>4).map({$_}).grep(* > 12345).elems'

[21:13] <dogbert17> MoarVM panic on 32-bit, bus error on 64-bit

[21:13] <dogbert17> credit goes to MasterDuke: RT #128280

[21:13] <synopsebot> RT#128280 [open]: https://rt.perl.org/Ticket/Display.html?id=128280 [SEGV] core dump while profiling with a '.race'

[21:21] <timotimo> yeah, that's the one i've been using for this

[21:24] <dogbert17> cool, so it's on your radar :-)

[21:25] <timotimo> yup

[21:25] <timotimo> it's even in my first report blog post

[21:27] <dogbert17> which I should read :-)

[21:28] <timotimo> seeing more visitors in my analytics makes me happy :3

[21:39] <Geth> ¦ roast: bee28e76fe | usev6++ | 3 files

[21:39] <Geth> ¦ roast: [JVM] Unfudge some passing subtests

[21:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/bee28e76fe

[22:42] <Geth> ¦ roast: e6efd53978 | usev6++ | S32-io/tell.t

[22:42] <Geth> ¦ roast: [JVM] Expand fudge message

[22:42] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e6efd53978
