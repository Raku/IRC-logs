[00:20] *** Kaypie left
[00:20] *** Kaypie joined
[00:20] *** p6bannerbot sets mode: +v Kaypie

[01:07] *** j3nnn1 left
[01:33] *** ZzZombo left
[01:53] *** benjikun left
[02:06] <lizmat> .tell jnthn R#2484

[02:06] <yoleaux> lizmat: I'll pass your message to jnthn.

[02:06] <synopsebot_> R#2484 [open]: https://github.com/rakudo/rakudo/issues/2484 Pair interference in dispatch between Associative / Iterable

[02:40] *** ZzZombo joined
[02:40] *** p6bannerbot sets mode: +v ZzZombo

[03:14] *** ufobat_ joined
[03:15] *** p6bannerbot sets mode: +v ufobat_

[03:18] *** ufobat___ left
[03:19] *** ZzZombo_ joined
[03:19] *** p6bannerbot sets mode: +v ZzZombo_

[03:20] *** ZzZombo left
[03:20] *** ZzZombo_ is now known as ZzZombo

[04:23] *** ZzZombo left
[05:20] *** ZzZombo joined
[05:20] *** p6bannerbot sets mode: +v ZzZombo

[05:40] *** Kaypie left
[05:41] *** Kaypie joined
[05:41] *** p6bannerbot sets mode: +v Kaypie

[05:50] *** delon joined
[05:50] *** p6bannerbot sets mode: +v delon

[07:48] *** robertle joined
[07:48] *** p6bannerbot sets mode: +v robertle

[09:37] *** [Tux] left
[09:50] *** [Tux] joined
[09:51] *** p6bannerbot sets mode: +v [Tux]

[11:00] <releasable6> Next release in â‰ˆ3 days and â‰ˆ7 hours. 3 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[11:54] <lizmat> timotimo moritz masak jnthn R#2484 is blocking me atm, could you give me an idea on where to look in the code for answers?

[11:54] <synopsebot_> R#2484 [open]: https://github.com/rakudo/rakudo/issues/2484 Pair interference in dispatch between Associative / Iterable

[12:10] <masak> lizmat: that's odd.

[12:10] <masak> lizmat: looks like a bug in dispatch to me.

[12:10] <lizmat> yeah, duh  :-)

[12:10] <masak> lizmat: I basically agree with your two last paragraphs.

[12:10] <masak> dunno offhand where to look in the source, sorry

[12:11] <lizmat> :-(  

[12:11] <lizmat> well, working around it for now

[12:15] <jnthn> lizmat: BOOTSTRAP.nqp is where the multi-dispatch impl lives

[12:15] <yoleaux> 02:06Z <lizmat> jnthn: R#2484

[12:15] <synopsebot_> R#2484 [open]: https://github.com/rakudo/rakudo/issues/2484 Pair interference in dispatch between Associative / Iterable

[12:16] <jnthn> lizmat: In and out of meetings and stuff all day, so won't be able to look at it especially soon

[12:17] <lizmat> jnthn: ok.. will try to find it

[12:20] <timotimo> lizmat: it should be possible to step through that with the moar-remote debugger!

[12:24] <timotimo> i don't have a good idea how you could fix this

[12:32] <Geth_> Â¦ rakudo: 674a083705 | (Elizabeth Mattijsen)++ | src/core/Hyper.pm6

[12:32] <Geth_> Â¦ rakudo: Add support for Pair >>op<< Pair

[12:32] <Geth_> Â¦ rakudo: 

[12:32] <Geth_> Â¦ rakudo: Since Pairs are generally considered to be 1 element hashes, use the same

[12:32] <Geth_> Â¦ rakudo: logic.  In the situation where if they would be hashes and no matching

[12:32] <Geth_> Â¦ rakudo: keys, an empty hash would be returned.  Since there is no such thing as an

[12:32] <Geth_> Â¦ rakudo: empty Pair, Nil is returned, rather than Nil => Nil.

[12:32] <Geth_> Â¦ rakudo: 

[12:32] <Geth_> Â¦ rakudo: This commit breaks some spectests because of R#2484.  The next commit works

[12:32] <synopsebot_> R#2484 [open]: https://github.com/rakudo/rakudo/issues/2484 Pair interference in dispatch between Associative / Iterable

[12:33] <Geth_> Â¦ rakudo: around that.  Splitting into two separate commits so that the next commit

[12:33] <Geth_> Â¦ rakudo: can simply be reverted once R#2484 is fixed.

[12:33] <Geth_> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/674a083705

[12:33] <Geth_> Â¦ rakudo: 8fa7268113 | (Elizabeth Mattijsen)++ | src/core/Hyper.pm6

[12:33] <Geth_> Â¦ rakudo: Workaround for R#2484

[12:33] <Geth_> Â¦ rakudo: 

[12:33] <Geth_> Â¦ rakudo: Please revert once R#2484 is fixed.

[12:33] <Geth_> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8fa7268113

[12:37] <lizmat> jnthn: is !sort_dispatchees_internal something I should look at ?

[13:06] *** Kaypie left
[13:06] *** Kaypie joined
[13:07] *** p6bannerbot sets mode: +v Kaypie

[13:36] *** travis-ci joined
[13:36] *** p6bannerbot sets mode: +v travis-ci

[13:36] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Workaround for R#2484

[13:36] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/454964369 https://github.com/rakudo/rakudo/compare/d5a751d94e73...8fa726811325

[13:36] *** travis-ci left
[13:36] <synopsebot_> R#2484 [open]: https://github.com/rakudo/rakudo/issues/2484 Pair interference in dispatch between Associative / Iterable

[13:37] <buggable> [travis build above] â˜  Did not recognize some failures. Check results manually.

[13:38] <lizmat> next one should be ok again

[13:38] <lizmat> ah, no, this *is* the next one...

[13:39] <lizmat> restarted the failed job

[13:50] *** Kaypie left
[13:50] *** Kaypie joined
[13:51] *** p6bannerbot sets mode: +v Kaypie

[13:55] <lizmat> failed job is now green, so it was a flapper

[14:10] *** Kaypie left
[14:31] <[Tux]> Rakudo version 2018.10-128-g8fa726811 - MoarVM version 2018.10-77-g6236eb5de

[14:31] <[Tux]> csv-test-xs-20      0.435 -  0.438

[14:31] <[Tux]> test-t --race       0.884 -  0.894

[14:31] <[Tux]> csv-ip5xs           0.936 -  0.943

[14:31] <[Tux]> test-t              1.815 -  1.920

[14:31] <[Tux]> csv-ip5xs-20        7.179 -  7.225

[14:31] <[Tux]> test                7.592 -  7.991

[14:31] <[Tux]> test-t-20 --race   10.557 - 10.711

[14:31] <[Tux]> csv-parser         24.316 - 24.349

[14:31] <[Tux]> test-t-20          32.652 - 33.519

[15:40] *** b2gills left
[15:44] *** b2gills joined
[15:44] *** p6bannerbot sets mode: +v b2gills

[15:59] <jnthn> lizmat: Yes, that and, I think, find_best_dispatchee

[16:11] *** Kaiepi joined
[16:11] *** p6bannerbot sets mode: +v Kaiepi

[16:15] *** robertle left
[16:55] *** robertle joined
[16:55] *** p6bannerbot sets mode: +v robertle

[17:48] *** j3nnn1 joined
[17:48] *** p6bannerbot sets mode: +v j3nnn1

[17:59] <AlexDaniel> yay a little update on R#2451

[17:59] <synopsebot_> R#2451 [open]: https://github.com/rakudo/rakudo/issues/2451 [âš  blocker âš ] Pre-2018.11 toasting

[18:00] <AlexDaniel> hm that took just 42 minutes

[18:01] <AlexDaniel> could've done that earlier :)

[18:04] <AlexDaniel> some help with remaining modules will be appreciated â™¥

[19:02] *** dogbert11 left
[19:17] *** pmurias joined
[19:17] *** p6bannerbot sets mode: +v pmurias

[19:19] <Geth_> Â¦ rakudo: 80edefcfb3 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[19:19] <Geth_> Â¦ rakudo: Make Hash.STORE a multi

[19:19] <Geth_> Â¦ rakudo: 

[19:19] <Geth_> Â¦ rakudo: Part of a cunning plan to generally speed up metaops on Associatives

[19:19] <Geth_> Â¦ rakudo: and QuantHashes, but this requires the .STORE to be a multi.  Changed

[19:19] <Geth_> Â¦ rakudo: in a separate commit for bisectability and performance checks.

[19:19] <Geth_> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/80edefcfb3

[19:22] *** ExtraCrispy left
[19:35] *** pmurias left
[19:36] *** pmurias joined
[19:36] *** p6bannerbot sets mode: +v pmurias

[19:58] *** dogbert17 joined
[19:59] *** p6bannerbot sets mode: +v dogbert17

[21:17] *** Kaiepi left
[21:17] *** Kaiepi joined
[21:18] *** p6bannerbot sets mode: +v Kaiepi

[21:34] <Geth_> Â¦ rakudo: faa19ab924 | (Elizabeth Mattijsen)++ | src/core/Hash.pm6

[21:34] <Geth_> Â¦ rakudo: Add Hash.STORE(\keys,\values)

[21:34] <Geth_> Â¦ rakudo: 

[21:34] <Geth_> Â¦ rakudo: Another way of creating a Hash internally, taking 2 iterables: one with

[21:34] <Geth_> Â¦ rakudo: keys and one with values, that are supposed to generate an equal number

[21:34] <Geth_> Â¦ rakudo: of values.  To be used in hyper operations.

[21:34] <Geth_> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/faa19ab924

[21:34] <Geth_> Â¦ rakudo: cf5c8a099e | (Elizabeth Mattijsen)++ | src/core/Map.pm6

[21:34] <Geth_> Â¦ rakudo: Add Map.STORE(\keys,\values)

[21:34] <Geth_> Â¦ rakudo: 

[21:34] <Geth_> Â¦ rakudo: Another way of creating a Map internally, taking 2 iterables: one with

[21:34] <Geth_> Â¦ rakudo: keys and one with values, that are supposed to generate an equal number

[21:34] <Geth_> Â¦ rakudo: of values.  To be used in hyper operations.

[21:34] <Geth_> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cf5c8a099e

[21:34] <Geth_> Â¦ rakudo: 534d8f6576 | (Elizabeth Mattijsen)++ | 7 files

[21:34] <Geth_> Â¦ rakudo: Add QuantHash.STORE(\keys,\values)

[21:34] <Geth_> Â¦ rakudo: 

[21:34] <Geth_> Â¦ rakudo: Another way of creating a QuantHashes internally, taking 2 iterables: one with

[21:34] <Geth_> Â¦ rakudo: keys and one with values, that are supposed to generate an equal number

[21:34] <Geth_> Â¦ rakudo: of values.  To be used in hyper operations.

[21:34] <Geth_> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/534d8f6576

[21:43] <lizmat> this makes my %h = "a".."z" Z=> 1..26 about 3x as fast written as my %h := Hash.CREATE.STORE("a".."z",1..26)

[21:43] <timotimo> i like a 3x

[21:44] <timotimo> how does it compare to using flat and Z,?

[21:44] <lizmat> now checking how much this will improve something like %h >>+<< %h

[21:48] <timotimo> wow Z=> is already more than 2x faster than flat + Z,

[21:49] *** pmurias left
[21:54] <timotimo> storing the result of that into "my %h", that is

[22:01] <lizmat> looks like %h >>+<< %h is now 8x faster for a 26 elem hash

[22:02] <lizmat> spectesting now to make sure I didn't break anything  :-)

[22:09] <gfldex> lizmat: spectest minus Perl5::Inline works fine on my end

[22:10] <Geth_> Â¦ rakudo: 7fad12b0ee | (Elizabeth Mattijsen)++ | src/core/Hyper.pm6

[22:10] <Geth_> Â¦ rakudo: Use the new STORE(\keys,\values) for metaops

[22:10] <Geth_> Â¦ rakudo: 

[22:10] <Geth_> Â¦ rakudo: This makes %h >>+<< %h about 8x as fast for a 26 key hash.

[22:10] <Geth_> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7fad12b0ee

[22:22] <Geth_> Â¦ rakudo: 800d8fbbb2 | (Elizabeth Mattijsen)++ | src/core/Rakudo/Iterator.pm6

[22:22] <Geth_> Â¦ rakudo: Remove the now superfluous R:I.RoundrobinIterablesFlat

[22:22] <Geth_> Â¦ rakudo: 

[22:22] <Geth_> Â¦ rakudo: It's no longer needed now that we have the new .STORE(keys,values)

[22:22] <Geth_> Â¦ rakudo: functionality in metaops.

[22:22] <Geth_> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/800d8fbbb2

[22:29] <Geth_> Â¦ rakudo: c3f03e6776 | (Elizabeth Mattijsen)++ | src/core/Rakudo/QuantHash.pm6

[22:29] <Geth_> Â¦ rakudo: Final fixes to make metaops work on QuantHashes

[22:29] <Geth_> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c3f03e6776

[22:30] <lizmat> whee: metaops work on QuantHashes   :-)

[22:34] <timotimo> nice

[22:35] <lizmat> yeah, the 8x improvement was more than I expected

[22:36] <lizmat> I wonder if I can use the same logic on Z...

[22:36] <lizmat> specifically Z=>

[22:37] <gfldex> if you keep going with that speed there wont be anything left to do â€¦ in 10 years time! :->

[22:37] <lizmat> gfldex: by that time I would be 72... a good time to retire then  :-)

[22:40] <lizmat> hmmm... looks like I can only do that for my %h = ... Z=> ...

[22:41] <lizmat> perhaps something for the static optimizer to rewrite to nqp::create(Hash).STORE(..., ...)

[22:46] <lizmat> looks like that would make something like my %h = "a".."z" Z=> 1..26 about 4x as fast

[22:48] <lizmat> gfldex timotimo would that make sense ?

[22:58] <lizmat> enough hacking for today&

[22:59] <timotimo> hm, with loads of safety checks of course :)

[22:59] <timotimo> like, is "Hash" the same thing, is the hash parameterized, are Z and => the same thing, ...

[23:01] *** dct joined
[23:01] *** p6bannerbot sets mode: +v dct

[23:02] *** MasterDuke joined
[23:02] *** p6bannerbot sets mode: +v MasterDuke

[23:02] *** MasterDuke left
[23:02] *** MasterDuke joined
[23:02] *** herbert.freenode.net sets mode: +v MasterDuke

[23:02] *** p6bannerbot sets mode: +v MasterDuke

[23:23] <Geth_> Â¦ roast: ugexe++ created pull request #497: Workaround windows test failures due to shell quoting issues

[23:23] <Geth_> Â¦ roast: review: https://github.com/perl6/roast/pull/497

[23:23] <Geth_> Â¦ roast/master: 17 commits pushed by (Nick Logan)++

[23:23] <Geth_> Â¦ roast/master: review: https://github.com/perl6/roast/compare/2fc3fb676284...f92a49240db8

[23:42] *** dct left
