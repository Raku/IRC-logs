[06:48] <Geth> ¦ rakudo: 9b3a0b6ff2 | (Tobias Leich)++ | 2 files

[06:48] <Geth> ¦ rakudo: Support "const" marked return values in C++ functions

[06:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9b3a0b6ff2

[06:58] <Geth> ¦ rakudo: db8b218f6b | (Tobias Leich)++ | lib/NativeCall.pm6

[06:58] <Geth> ¦ rakudo: change attributes in role Native from int8 to int

[06:58] <Geth> ¦ rakudo:

[06:58] <Geth> ¦ rakudo: This blew up in module Box2D which is about bindings to a C++ library. The

[06:58] <Geth> ¦ rakudo: changed attributes point to not allocated memory. The program crash was

[06:58] <Geth> ¦ rakudo: triggered by a method "Box2D::Body.CreateFixture" which heavily involves

[06:58] <Geth> ¦ rakudo: traits. So perhaps the error only shows up when a certain level of traits or

[06:58] <Geth> ¦ rakudo: mixins are involved.

[06:58] <Geth> ¦ rakudo: See https://irclog.perlgeek.de/moarvm/2018-04-11#i_16035620

[06:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/db8b218f6b

[08:29] <lizmat> Files=1239, Tests=76303, 310 wallclock secs (15.90 usr  5.69 sys + 2137.22 cusr 207.43 csys = 2366.24 CPU)

[08:38] <Geth> ¦ tap-harness6/master: 5 commits pushed by (Naoum Hankache)++, (Juan Julián Merelo Guervós)++

[08:38] <Geth> ¦ tap-harness6/master: 87b4d9b6cc | Improve bin/prove6 pod

[08:38] <Geth> ¦ tap-harness6/master: 107c8fbde4 | Improve README

[08:38] <Geth> ¦ tap-harness6/master: 4d63b6ff8e | Add a separate README for bin/prove6

[08:38] <Geth> ¦ tap-harness6/master: 89096ad4bf | README: err can also accept a Supply and an IO::Handle

[08:38] <Geth> ¦ tap-harness6/master: 85e919c8f0 | Merge pull request #24 from hankache/master

[08:38] <Geth> ¦ tap-harness6/master: review: https://github.com/perl6/tap-harness6/compare/be425ac7748c...85e919c8f095

[12:11] <MasterDuke> how do i make a conditional based on the git revision of $*PERL.compiler?

[12:21] <Zoffix> it's encoded in $*PERL.compiler.version

[12:22] <Zoffix> m: say $*PERL.compiler.version

[12:22] <camelia> rakudo-moar db8b218f6: OUTPUT: «v2018.03.236.gdb.8.b.218.f.6␤»

[12:22] <Zoffix> By "git revision" do you mean a particular commit?

[12:24] <MasterDuke> i think i have a workaround, but i wanted something like `if $*PERL.compiler.version < X { } else { }`

[12:27] <Zoffix> Well, yeah, it'd be if $*PERL.compiler.version < v2018.03.236.gdb.8.b.218.f.6 { ... } else {... }

[12:28] <Zoffix> And if user is on a commit earlier than db8b218f6, the first branch would be used

[12:30] <MasterDuke> `git describe 23af1f4` gives '2018.03-122-g23af1f4aa', how do i turn that into the 'v...' string?

[12:31] <Zoffix> m: dd Version.new: '2018.03-122-g23af1f4aa'

[12:31] <camelia> rakudo-moar db8b218f6: OUTPUT: «v2018.03.122.g.23.af.1.f.4.aa␤»

[12:31] <MasterDuke> ah, it does support git describe output, cool

[12:32] <MasterDuke> thanks

[12:36] <MasterDuke> committable6: 2017.10,2018.01,2018.02,2018.03^,HEAD use nqp; for ^5_000 { (^100).race(batch=>1).map({ $_ }).List }; my int @a; nqp::getrusage(@a); if @a[4] > 0 { say @a[4] } else { EVAL q|use nqp; say nqp::atpos_i(nqp::getrusage(), 4)| };

[12:36] <committable6> MasterDuke, ¦2017.10: «419844␤» ¦2018.01: «417048␤» ¦2018.02: «445604␤» ¦2018.03^: «446844␤» ¦HEAD(4302666): «394176␤»

[12:36] <MasterDuke> so https://github.com/rakudo/rakudo/issues/1713 doesn't seem to be new?

[17:56] <lizmat> sad commute&

[18:21] * jnthn hugs lizmat

[18:44] <brrt> good *

[18:46] <jnthn> o/ brrt

[18:46] <brrt> \o jnthn

[19:06] <[Tux]> Rakudo version 2018.03-236-gdb8b218f6 - MoarVM version 2018.03-112-gfa0fc1832

[19:06] <[Tux]> csv-test-xs-20      0.454 -  0.478

[19:06] <[Tux]> csv-ip5xs           0.915 -  0.941

[19:06] <[Tux]> test-t --race       1.059 -  1.063

[19:06] <[Tux]> test-t              2.521 -  2.567

[19:06] <[Tux]> csv-ip5xs-20        8.888 -  8.897

[19:06] <[Tux]> test                9.540 -  9.653

[19:06] <[Tux]> test-t-20 --race   15.216 - 15.485

[19:06] <[Tux]> csv-parser         36.610 - 36.790

[19:06] <[Tux]> test-t-20          45.347 - 46.384

[19:22] <FROGGS> m: my $foo = 42; constant bar = $foo div 2;

[19:22] <camelia> rakudo-moar db8b218f6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤An exception occurred while evaluating a constant␤at <tmp>:1␤Exception details:␤  Cannot resolve caller infix:<div>(Any, Int); none of these signatures match:␤      (Int:D \a, Int:D \b)␤      …»

[19:22] <FROGGS> I find this kinda LTA... does somebody know if it is ticketed already?

[19:25] <jnthn> What would you like it to do?

[19:26] <jnthn> Somehow complain about use of $foo at BEGIN time when it can't possibly have been initialized?

[19:27] <geekosaur> cheaty... could there be (perhaps as an option for debugging) BEGIN-time initialization of such to a Failure?

[19:30] <FROGGS> jnthn: well, perhaps warn if throws an error? explain how time travel works? dunno yet

[20:41] <samcv> hmm for some reason i'm getting different hash's on mips32 compared to my machine even though my test seems to have worked fine in isolation

[20:41] <samcv> argh

[23:26] <MasterDuke> lizmat: around?
