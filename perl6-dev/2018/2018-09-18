[00:12] *** epony joined
[00:12] *** p6bannerbot sets mode: +v epony

[00:19] <japhb> I know I'm late to (this iteration of) the slow-JSON-parsing discussion, but I still wonder why we don't update the Rakudo::Internals one with a snapshot of the JSON::Fast code to get a quick boost.  We can continue to have JSON::Fast in the ecosystem, still able to make improvements over time, and we can still treat the Rakudo one as internal, but we avoid the bootstrapping of JSON::Fast install 

[00:19] <japhb> problem, and make it just better out of the box.

[00:24] <jdv79> sounds eerily like p5's dual life modules

[00:31] *** MasterDuke left
[00:51] <AlexDaniel> timotimo: ‚Üë ?

[00:51] *** MasterDuke joined
[00:51] *** p6bannerbot sets mode: +v MasterDuke

[00:52] *** MasterDuke left
[00:52] *** MasterDuke joined
[00:52] *** herbert.freenode.net sets mode: +v MasterDuke

[00:52] *** p6bannerbot sets mode: +v MasterDuke

[00:53] *** ZzZombo_ joined
[00:53] *** p6bannerbot sets mode: +v ZzZombo_

[00:54] <[Coke]> as I recall we didn't want *any* json in core but were stuck because christmas.

[00:55] <[Coke]> if we pull it in to core, we need to cla it, I think, also

[00:55] <[Coke]> zzz

[00:56] *** ZzZombo left
[00:56] <AlexDaniel> but it's written by timotimo

[00:56] *** ZzZombo_ is now known as ZzZombo

[00:58] <AlexDaniel> hm‚Ä¶ yeah not entirely sure what's the issue with just pulling it

[00:58] <AlexDaniel> but, whatever

[01:33] *** epony left
[02:12] <MasterDuke> timotimo: mind looking at the current version of my patch? i'm getting a `P6opaque: get_boxed_ref could not unbox for the representation 'P6bigint' of type Scalar` in my add_I, but i added a decont and it didn't fix it

[02:13] *** ggoebel_ left
[02:32] <AlexDaniel> Geth: ver https://github.com/rakudo/rakudo/commit/fc23b197

[02:32] *** ggoebel joined
[02:33] *** p6bannerbot sets mode: +v ggoebel

[02:34] *** MasterDuke left
[02:36] *** lizmat left
[03:09] *** epony joined
[03:09] *** p6bannerbot sets mode: +v epony

[05:21] *** brrt joined
[05:22] *** p6bannerbot sets mode: +v brrt

[05:30] *** robertle left
[06:12] *** robertle joined
[06:13] *** patrickb joined
[06:13] *** p6bannerbot sets mode: +v patrickb

[06:13] *** p6bannerbot sets mode: +v robertle

[06:23] *** Flyoc21 joined
[06:26] *** Flyoc21 left
[06:34] *** robertle left
[07:00] *** lizmat joined
[07:01] *** p6bannerbot sets mode: +v lizmat

[07:12] *** RaNa21 joined
[07:15] *** RaNa21 left
[07:16] *** lizmat left
[07:38] *** brrt left
[07:44] *** lizmat joined
[07:45] *** p6bannerbot sets mode: +v lizmat

[07:45] <lizmat> Files=1253, Tests=76133, 336 wallclock secs (15.36 usr  5.37 sys + 2371.71 cusr 225.77 csys = 2618.21 CPU)

[07:48] *** brrt joined
[07:48] *** p6bannerbot sets mode: +v brrt

[07:52] *** brrt left
[08:04] *** committable6 left
[08:04] *** shareable6 joined
[08:04] *** committable6 joined
[08:04] *** evalable6 joined
[08:04] *** ChanServ sets mode: +v evalable6

[08:04] *** reportable6 left
[08:04] *** bisectable6 left
[08:04] *** releasable6 joined
[08:04] *** reportable6 joined
[08:04] *** ChanServ sets mode: +v reportable6

[08:04] *** bisectable6 joined
[08:04] *** benchable6 joined
[08:04] *** ChanServ sets mode: +v benchable6

[08:04] *** unicodable6 joined
[08:04] *** squashable6 joined
[08:05] *** p6bannerbot sets mode: +v shareable6

[08:05] *** p6bannerbot sets mode: +v committable6

[08:05] *** p6bannerbot sets mode: +v evalable6

[08:05] *** p6bannerbot sets mode: +v releasable6

[08:05] *** p6bannerbot sets mode: +v reportable6

[08:05] *** p6bannerbot sets mode: +v bisectable6

[08:05] *** p6bannerbot sets mode: +v benchable6

[08:05] *** p6bannerbot sets mode: +v unicodable6

[08:05] *** p6bannerbot sets mode: +v squashable6

[08:06] <AlexDaniel> btw I did run normal toaster overnight, results here: https://toast.6lang.org/

[08:06] <AlexDaniel> I haven't looked at them yet

[08:08] *** Ven` joined
[08:08] <AlexDaniel> lizmat: Scalar::Util depends on NQP ops which were changed, the module now fails: https://modules.perl6.org/dist/Scalar::Util:cpan:ELIZABETH/lib/Scalar/Util.pm6#L23

[08:08] *** p6bannerbot sets mode: +v Ven`

[08:09] <AlexDaniel> lizmat: ‚ÄúCannot unbox a type object (Rakudo::Internals::IterationSet) to int.‚Äù seems like a thing you can look at. https://toast.6lang.org/module?module=ProblemSolver&commit=2018.08-112-g0bf909bb1

[08:33] *** b2gills joined
[08:34] *** p6bannerbot sets mode: +v b2gills

[08:36] <lizmat> AlexDaniel++   # working on it

[08:39] <lizmat> update on its way to CPAN

[08:50] <lizmat> m: (1,2,3).Set.ACCEPTS(().Set) # golfed

[08:50] <camelia> rakudo-moar 0bf909bb1: OUTPUT: ¬´Cannot unbox a type object (Rakudo::Internals::IterationSet) to int.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[08:51] <lizmat> m: (1,2,3).Bag.ACCEPTS(().Bag) # samo

[08:51] <camelia> rakudo-moar 0bf909bb1: OUTPUT: ¬´Cannot unbox a type object (Rakudo::Internals::IterationSet) to int.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[08:53] *** Ven` left
[08:56] *** Ven` joined
[08:56] *** p6bannerbot sets mode: +v Ven`

[09:10] <lizmat> hmmm... did we lose Geth ?

[09:11] <lizmat> AlexDaniel: breakage in ProblemSolver should be fixed now

[09:21] <|Tux|> Tadam tadam tadam ü•Åü•Åü•Åü•Åü•Å

[09:21] <|Tux|> Rakudo version 2018.08-112-g0bf909bb1 - MoarVM version 2018.08-90-g025b3cdaa

[09:21] <|Tux|> csv-test-xs-20      0.428 -  0.436

[09:21] <|Tux|> test-t --race       0.881 -  0.898

[09:21] <|Tux|> csv-ip5xs           0.905 -  0.913

[09:21] <|Tux|> test-t              1.971 -  2.006

[09:21] <|Tux|> csv-ip5xs-20        6.763 -  6.932

[09:21] <|Tux|> test                8.427 -  8.796

[09:21] <|Tux|> test-t-20 --race   11.692 - 13.174

[09:21] <|Tux|> csv-parser         21.929 - 22.069

[09:21] <|Tux|> test-t-20          36.181 - 36.425

[09:32] *** pmurias joined
[09:32] *** p6bannerbot sets mode: +v pmurias

[09:32] <lizmat> whee!

[10:00] *** pmurias left
[10:00] *** pmurias joined
[10:00] *** p6bannerbot sets mode: +v pmurias

[10:44] *** Kamots6 joined
[10:48] *** Kamots6 left
[10:52] *** brrt joined
[10:53] *** p6bannerbot sets mode: +v brrt

[11:00] <dogbert2> test-t under 2 seconds, now that's a milestone

[11:18] *** Ven` left
[11:29] *** Ven` joined
[11:29] *** p6bannerbot sets mode: +v Ven`

[11:34] *** pmurias left
[11:40] *** pmurias joined
[11:40] *** p6bannerbot sets mode: +v pmurias

[11:44] *** Ven` left
[11:51] *** Ven` joined
[11:52] *** p6bannerbot sets mode: +v Ven`

[11:57] *** ggoebel_ joined
[11:58] *** p6bannerbot sets mode: +v ggoebel_

[12:27] *** pmurias left
[12:29] *** pmurias joined
[12:29] *** p6bannerbot sets mode: +v pmurias

[12:30] *** pmurias left
[12:34] *** pmurias joined
[12:34] *** p6bannerbot sets mode: +v pmurias

[12:38] <nine> csv-ip5xs-20 also looks almost half a second faster. What happened?

[12:40] *** pmurias left
[12:41] <lizmat> I think some stuff came along with samcv's last MoarVM bump ?

[12:41] *** pmurias joined
[12:41] *** p6bannerbot sets mode: +v pmurias

[12:42] <nine> I don't see anything in that bump that I can remotely connect to a performance improvement. Let alone such a large one

[12:44] <lizmat> well, for a long time I have suspected that some builds are just faster than other builds

[12:44] <lizmat> maybe something with alignment of stuff

[12:45] <lizmat> I guess we maybe hit a fast build

[12:45] <nine> Maaaaybe the change to MVM_string_find_encoding

[12:49] *** pmurias left
[12:49] *** brrt left
[12:49] *** brrt joined
[12:50] *** p6bannerbot sets mode: +v brrt

[12:54] *** pmurias joined
[12:54] *** p6bannerbot sets mode: +v pmurias

[12:57] *** pmurias left
[12:59] *** pmurias joined
[12:59] *** p6bannerbot sets mode: +v pmurias

[13:00] *** brrt left
[13:01] <pmurias> CIAvash[m]: hopefully the newest HEAD is a least a bit less broken

[13:04] *** pmurias left
[13:09] *** pmurias joined
[13:09] *** p6bannerbot sets mode: +v pmurias

[13:28] *** Ven` left
[13:28] <CIAvash[m]> pmurias: yeah, it builds now, but there is just an error in the console "test.8a3d36cf.js:146 Uncaught SyntaxError: Invalid or unexpected token"

[13:34] *** brrt joined
[13:35] *** p6bannerbot sets mode: +v brrt

[13:35] <AlexDaniel> Geth: help

[13:35] <Geth> AlexDaniel, Source at https://github.com/perl6/geth To add repo, add an 'application/json' webhook on GitHub pointing it to http://hack.p6c.org:8888/?chan=#perl6 and choose 'Send me everything' for events to send | use `ver URL to commit` to fetch version bump changes

[13:36] *** Ven` joined
[13:36] *** p6bannerbot sets mode: +v Ven`

[13:41] *** jarlaxl joined
[13:43] *** pmurias left
[13:45] *** pmurias joined
[13:45] *** jarlaxl left
[13:45] *** p6bannerbot sets mode: +v pmurias

[14:17] *** diddledan17 joined
[14:22] *** diddledan17 left
[14:33] *** pmurias left
[14:37] <tbrowder__> hi folks, couple questions on rakudo src/Perl6/*nqp:

[14:38] <tbrowder__> can one call back to class Actions from Pod?

[14:40] <tbrowder__> i have tried using Perl6::Actions in Pod.nqp but get build errors that either indicate some build tools need modifying or that it won‚Äôt be possible.

[14:42] <tbrowder__> calling back without the use statement gives me a ‚Äú=== sorry...‚Äù

[14:43] <jnthn> I think if you have a match object in there you can do something like $/.actions or similiar

[14:43] <jnthn> And then call the method you want on that

[14:43] <tbrowder__> ok, i‚Äôll try that.

[14:44] <tbrowder__> can you tell me just in general what the wantall subs are really doing?

[14:45] <jnthn> I'm guessing from the name, something about sink context handling

[14:47] <timotimo> the actions are probably in the ParseShared object

[14:47] <tbrowder__> i‚Äôm probably not doing stuff the right way, but i have hacked some things by dealing with playing with the str verion of some ast, but i‚Äôm stumped at the moment.

[14:47] <timotimo> that's somewhere in the match object

[14:48] <tbrowder__> is there any general way to ‚Äúunpack‚Äù an ast object and recreate it with changes inside the code?

[14:49] <timotimo> there is nqp::clone, which reconstructs it - shallowly - with the same stuff in it

[14:49] <timotimo> so you can make the necessary changes then

[14:50] <tbrowder__> aha! thanks

[14:50] <tbrowder__> jnthn: thanks

[14:50] <timotimo> the copying really is shallow, though

[14:50] <tbrowder__> timotimo: thanks

[14:50] <tbrowder__> any tidbit is progress at this point

[15:14] *** patrickb left
[16:04] *** dcat20 joined
[16:06] *** dcat20 left
[16:23] *** Zoffix joined
[16:23] *** p6bannerbot sets mode: +v Zoffix

[16:23] <Zoffix> Geth: help

[16:23] <Geth> Zoffix, Source at https://github.com/perl6/geth To add repo, add an 'application/json' webhook on GitHub pointing it to http://hack.p6c.org:8888/?chan=#perl6 and choose 'Send me everything' for events to send | use `ver URL to commit` to fetch version bump changes

[16:23] <Zoffix> Did geth announce last commit to roast? About rounding? It ain't in the logs...

[16:25] <jnthn> Zoffix: fwiw, it's not been announcing any commits this afternoon on #MoarVM

[16:26] <jnthn> I don't see any roast announce here

[16:26] *** Geth left
[16:26] *** Geth joined
[16:26] *** ChanServ sets mode: +v Geth

[16:26] <Geth> ¬¶ roast: 171a1c59e3 | (Zoffix Znet)++ | S32-num/rounders.t

[16:26] <Geth> ¬¶ roast: Spec .round's return type

[16:26] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/171a1c59e3

[16:26] <Geth> ¬¶ roast: 6d75d855a0 | (Elizabeth Mattijsen)++ | 6 files

[16:26] <Geth> ¬¶ roast: Add tests for R#2289

[16:26] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/6d75d855a0

[16:26] <synopsebot> R#2289 [closed]: https://github.com/rakudo/rakudo/issues/2289 Breakage in QuantHash.ACCEPTS(empty QuantHash)

[16:27] *** p6bannerbot sets mode: +v Geth

[16:30] <Zoffix> GitHub really needs a "redeliver all failed webhooks" button.

[16:30] <Zoffix> There's like two pages of Rakudo hooks. I'm just gonna leave them undelivered

[16:33] *** Zoffix left
[16:40] *** dogbert17 joined
[16:40] *** p6bannerbot sets mode: +v dogbert17

[16:43] *** Ven` left
[16:43] *** lizmat left
[16:47] *** Ven` joined
[16:47] *** p6bannerbot sets mode: +v Ven`

[16:53] *** Ven` left
[16:53] *** lizmat joined
[16:54] *** p6bannerbot sets mode: +v lizmat

[17:09] *** butlerian16 joined
[17:09] *** butlerian16 left
[17:12] <lizmat> m: for ^1 -> int $_ { "a" ~~ /./ } # is this to be expected ?

[17:12] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´This type cannot unbox to a native integer: P6opaque, Str‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:29] <jnthn> Yes, ~~ sets $_

[17:30] <jnthn> And if you've declared it as a native int, then it isn't going to be able to put anything in it

[17:30] <jnthn> Well, unless it's putting an Int there :)

[17:31] <jnthn> But really, just pick another variable name :)

[17:31] <jnthn> Or `int $` since it seems you ain't using it anyway

[17:36] *** pmurias joined
[17:36] *** Zoffix joined
[17:36] *** p6bannerbot sets mode: +v Zoffix

[17:37] <Zoffix> jnthn: but doesn't it set $_ in it's local space and doesn't mangle the $_ that's in the scope of ~~ ? 

[17:37] *** p6bannerbot sets mode: +v pmurias

[17:37] <Zoffix> Also, how come this doesn't do a typecheck error:

[17:37] <Zoffix> m: -> Str $_ is rw { $_ = 42 }($ = "x")

[17:37] <camelia> rakudo-moar 19edeafd1: ( no output )

[17:39] <Zoffix> m: for ^1 -> int $_ { "a" andthen .say }

[17:39] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´a‚ê§¬ª

[17:39] <jnthn> Zoffix: There's no new scope

[17:40] <jnthn> Scopes are always delimited by curlies

[17:40] *** brrt left
[17:40] <Zoffix> Then how is the last eval working? 

[17:40] <jnthn> Because it binds, iirc

[17:40] <Zoffix> Ah

[17:40] <jnthn> And probably in some very direct way that bypasses the bind check :)

[17:40] <jnthn> Arguably it should be upset

[17:41] <Zoffix> m: for ^1 -> int $_ { "a" andthen .say; dd $_ }

[17:41] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´a‚ê§0‚ê§¬ª

[17:41] <jnthn> Yeah, that's one of the exceptions, as is `.say for @bar`

[17:41] * jnthn isn't entirely fond of those, but they're kinda convenient

[17:42] <Zoffix> ok

[17:42] <jnthn> Well, if it was 100% regular everywhere then it'd not be Perl :P

[17:42] <Zoffix> m: -> Str $_ is rw { $_ = 42 }($ = "x")

[17:42] <camelia> rakudo-moar 19edeafd1: ( no output )

[17:42] <Zoffix> How come it's not typecheckfailing here?

[17:42] <Zoffix> Is that a bug?

[17:42] <Zoffix> Ah, it binds the outer thing and typecheck is lost?

[17:43] <Zoffix> m: -> Str $_ is rw { $_ = 42 }(my Str $ = "x")

[17:43] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´Type check failed in assignment; expected Str but got Int (42)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:43] <jnthn> m: -> Str $_ is rw { $_ = 42 }(my Str $ = "x")

[17:43] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´Type check failed in assignment; expected Str but got Int (42)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:43] <jnthn> Exactly; `is rw` means we bind to the supplied container

[17:43] <Zoffix> k. got it. Thanks.

[17:43] <jnthn> The constraint is just about what it contains when it's received.

[17:45] * jnthn should hurry up with getting his couple of remaining 6.d tweaks in

[17:46] <jnthn> (the `start` in void context one, and the `$_` not being dynamic one)

[17:46] <Zoffix> \o/

[17:46] <Zoffix> buggable: d

[17:46] <buggable> Zoffix, Diwali is in 49 days, which is 6 weeks, 6 days, 6 hours, 13 minutes, and 30 seconds. Need to review 81 commits per day (567/week) to complete. Need 3 teaser flyers. Still have 7 TODO features costing 110 hours. Still have 0.3 policies to write. Still have ~95% of ChangeLog to do.

[17:46] <jnthn> Also will look at the RT tickets you pointed me at some more.

[17:46] <Zoffix> 49 days \o/

[18:10] *** Zoffix left
[18:47] * lizmat was looking at this very LTA error:

[18:47] <lizmat> m: my &foo; foo

[18:47] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´Cannot invoke this object (REPR: Uninstantiable; Callable)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:48] <lizmat> which goes straight into the bowels of 6model.c

[18:48] <lizmat> tried adding a CALL-ME to the Callable role, but that busts the setting build

[19:00] <jnthn> I think we could drop the REPR part of that message

[19:01] <jnthn> Making it Cannot invoke a Callable

[19:01] <jnthn> If we then stick " type object" on the end when it's a type object, it's probably decent enough.

[19:04] <[Coke]> +1

[19:19] <lizmat> ok, will see if I can manage that

[19:19] <lizmat> but not today :-)

[19:23] <lizmat> m: sub a(+values) { dd values }; a 1,2,3

[19:23] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´(1, 2, 3)‚ê§¬ª

[19:23] <lizmat> m: sub a(*values) { dd values }; a 1,2,3   # so why is this a compilation error?  seems a bit inconsistent (although I understand the historical reasons)

[19:23] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3sub a(*7‚èè5values) { dd values }; a 1,2,3   # so wh‚ê§¬ª

[20:36] *** pmurias left
[20:37] *** dct joined
[20:37] *** p6bannerbot sets mode: +v dct

[20:40] *** ggoebel left
[20:55] *** ggoebel joined
[20:56] *** p6bannerbot sets mode: +v ggoebel

[20:57] <AlexDaniel> uuuuuuggggghhhhhhhhh

[20:57] * lizmat hugs AlexDaniel 

[20:58] <AlexDaniel> lizmat: it's fine! ‚ô•

[20:58] <lizmat> .oO( or did I mix up causality? )

[20:58] <AlexDaniel> just trying to figure out why NASA regressed (?)

[20:58] <AlexDaniel> with my setup it fails on 2018.08 consistently

[20:59] <AlexDaniel> so I'm not sure how it managed to succeed in toaster

[20:59] <AlexDaniel> or maybe my stuff is just wrong

[21:11] <AlexDaniel> yeah, pretty sure it fails on 2018.08 also

[21:12] * AlexDaniel finally looks at the code :)

[21:16] <lizmat> m: my \a = @ = 1,2,3; dd MY..<@ANON_VAR_1>  # is it necessary to have that anonymous var in the lexpad ?

[21:16] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´MY.."\@ANON_VAR_1"‚ê§¬ª

[21:16] <lizmat> m: my \a = @ = 1,2,3; dd MY::<@ANON_VAR_1>  # eh,. better

[21:16] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´Nil‚ê§¬ª

[21:17] <lizmat> m: my \a = @ = 1,2,3; dd MY::<@ANON_VAR__1>  # eh,. better

[21:17] <camelia> rakudo-moar 19edeafd1: OUTPUT: ¬´Array @ = [1, 2, 3]‚ê§¬ª

[21:18] <timotimo> hm, should be possible to have it as a local, or does that mess up handling of itemization or something?

[21:18] <AlexDaniel> Zoffix: can you take a look at NASA module? My uneducated guess is that the api of the service changed, and now $res<hdurl> is no longer there and $res<media_type> is ‚Äúvideo‚Äù instead of ‚Äúimage‚Äù

[21:19] <AlexDaniel> Zoffix: the reason why I'm looking at it is because it succeeded on 2018.08 and failed on HEAD, maybe that's just unfortunate timing?

[21:20] <AlexDaniel> <service_version> is still v1 so that kinda sucks

[21:21] <AlexDaniel> it returns a link like this now: https://www.youtube.com/embed/R60m1W7t1og?rel=0

[21:21] <lizmat> timotimo: afaics, it's only needed for initialization

[21:21] <AlexDaniel> aaaaaaaaaaaaaaaah

[21:22] <AlexDaniel> maybe it rolled over to the next day while toaster was doing its thing

[21:22] <AlexDaniel> so it depends on which day you run it

[21:22] <lizmat> timotimo: QAST::Var(lexical $ANON_VAR__1) <wanted nosink> $   # is how it codegens

[21:31] *** dogbert2 left
[21:42] <jnthn> I think it has to be a lexical in case of thunkiness

[21:42] <jnthn> Or something like that :)

[21:44] <lizmat> jnthn: but does it need to live in the lexpad in the case of  "my \a = @ = 1,2,3" ?

[21:47] <lizmat> ah well, I was just wondering  :-)

[21:49] <lizmat> sleep&

[21:56] *** ZofBot joined
[21:56] *** ChanServ sets mode: +v ZofBot

[21:56] *** ggoebel_ left
[21:57] <jnthn> In that case, no

[21:57] *** p6bannerbot sets mode: +v ZofBot

[21:57] <jnthn> But we don't lower any variable that's assigned to at present. That's actually pretty high on my todo list now :)

[22:29] <samcv> so for now utf16le and utf16be act like Perl 5 does (afai have tested) and so they pass through a BOM for these formats, and for utf16 it will detect BOM and act acordingly

[22:29] <samcv> *issue*: for 'utf16' we don't add a byte order marker on writing a file which doesn't make much sense at all. and i'd add one but don't want to break compatibility

[22:30] <samcv> perl 5 adds a BOM when you write out a utf16 file

[22:31] <samcv> so files created by perl 6 on one endianess machine won't read correctly if you moved to a different endianess machine

[22:51] *** dct left
[22:53] *** dct joined
[22:53] *** p6bannerbot sets mode: +v dct

[23:22] *** MasterDuke joined
[23:22] *** p6bannerbot sets mode: +v MasterDuke

[23:23] *** MasterDuke left
[23:23] *** MasterDuke joined
[23:23] *** herbert.freenode.net sets mode: +v MasterDuke

[23:23] *** p6bannerbot sets mode: +v MasterDuke

[23:35] <AlexDaniel> samcv: I'm happy with things, we did spot one regression which was fixed very quickly by lizmat++

[23:36] <AlexDaniel> samcv: so please go ahead and release moarvm :)

[23:52] *** ggoebel_ joined
[23:53] *** p6bannerbot sets mode: +v ggoebel_

