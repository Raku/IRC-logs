[00:37] *** Ven` joined
[00:38] *** p6bannerbot sets mode: +v Ven`

[00:42] *** Ven` left
[00:48] <AlexDaniel> Geth: ver https://github.com/rakudo/rakudo/commit/a41c37c89f45327c91c024b72ed1d59693cfa832

[00:48] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/perl6/nqp/compare/2018.06-147-g39bfe08...2018.06-154-ge1929a4

[00:49] <AlexDaniel> Geth: ver https://github.com/perl6/nqp/commit/e1929a49481501de35ce1302a6864318d59903ac

[00:49] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/MoarVM/MoarVM/compare/2018.06-391-g91d2878...2018.06-395-g0c5f6e5

[00:49] <AlexDaniel> mhm

[00:49] <AlexDaniel> c: a41c37c89f4^,a41c37c89f4 https://gist.github.com/AlexDaniel/8b745fd8f934305fe9b24485cadbd04c

[00:49] <committable6> AlexDaniel, https://gist.github.com/3015f5a6cbfedc8845f22a41b5ee6eda

[00:50] <AlexDaniel> Unable to call postcircumfix $bt[ (Any) ] with a type object

[00:50] <AlexDaniel> Indexing requires a defined object

[00:50] <AlexDaniel> I'm going to bed soon, but there's something fishy going on there ↑

[01:02] *** ggoebel left
[01:48] *** fake_space_whale joined
[01:49] *** p6bannerbot sets mode: +v fake_space_whale

[02:23] *** ZzZombo joined
[02:23] *** p6bannerbot sets mode: +v ZzZombo

[02:25] *** ufobat_ joined
[02:26] *** p6bannerbot sets mode: +v ufobat_

[02:27] *** lizmat left
[02:29] *** ufobat left
[02:38] *** Ven` joined
[02:39] *** p6bannerbot sets mode: +v Ven`

[02:43] *** Ven` left
[03:52] *** epony joined
[03:52] *** p6bannerbot sets mode: +v epony

[04:40] *** Ven` joined
[04:41] *** p6bannerbot sets mode: +v Ven`

[04:42] *** ExtraCrispy left
[04:45] *** Ven` left
[05:06] *** stmuk_ joined
[05:07] *** p6bannerbot sets mode: +v stmuk_

[05:08] *** stmuk left
[05:41] *** Ven` joined
[05:42] *** p6bannerbot sets mode: +v Ven`

[05:46] *** Ven` left
[05:47] *** brrt joined
[05:48] *** p6bannerbot sets mode: +v brrt

[06:04] *** ByronJohnson19 joined
[06:08] *** ByronJohnson19 left
[06:18] *** fake_space_whale left
[06:42] *** Ven` joined
[06:43] *** p6bannerbot sets mode: +v Ven`

[06:47] *** Ven` left
[07:00] *** greppable6 joined
[07:01] *** p6bannerbot sets mode: +v greppable6

[07:23] *** brrt left
[07:43] *** Ven` joined
[07:44] *** p6bannerbot sets mode: +v Ven`

[07:47] *** Ven` left
[08:04] *** brrt joined
[08:04] *** p6bannerbot sets mode: +v brrt

[08:15] *** lizmat joined
[08:16] *** p6bannerbot sets mode: +v lizmat

[08:16] <lizmat> Files=1248, Tests=76067, 334 wallclock secs (15.33 usr  5.37 sys + 2337.89 cusr 219.52 csys = 2578.11 CPU)

[08:43] *** Ven` joined
[08:44] *** p6bannerbot sets mode: +v Ven`

[08:46] *** brrt left
[08:48] *** Ven` left
[09:07] *** lizmat left
[09:08] *** Ven` joined
[09:08] *** p6bannerbot sets mode: +v Ven`

[09:22] *** Ven` left
[09:39] *** dogbert2 joined
[09:40] *** p6bannerbot sets mode: +v dogbert2

[10:55] *** ZzZombo left
[10:59] <|Tux|> Rakudo version 2018.06-478-g37a30ab9b - MoarVM version 2018.06-431-g919e78ab1

[10:59] <|Tux|> csv-test-xs-20      0.442 -  0.452

[10:59] <|Tux|> test-t --race       0.906 -  1.060

[10:59] <|Tux|> csv-ip5xs           0.955 -  0.969

[10:59] <|Tux|> test-t              2.065 -  2.084

[10:59] <|Tux|> csv-ip5xs-20        7.260 -  7.976

[10:59] <|Tux|> test                9.302 -  9.415

[10:59] <|Tux|> test-t-20 --race   11.719 - 12.260

[10:59] <|Tux|> csv-parser         23.512 - 24.398

[10:59] <|Tux|> test-t-20          36.238 - 36.727

[11:12] <dogbert2> 2.065 it's getting close ...

[11:14] <Ulti> I still find it hard to know from the names what all of those are

[11:49] <AlexDaniel> .tell lizmat can you fix S02-literals/quoting.t S03-operators/bag.t S03-operators/mix.t S03-operators/set.t ?

[11:49] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[14:04] *** because joined
[14:05] *** because left
[14:13] *** skids joined
[14:13] *** p6bannerbot sets mode: +v skids

[15:11] *** AlexDaniel left
[15:30] *** fake_space_whale joined
[15:31] *** p6bannerbot sets mode: +v fake_space_whale

[15:37] *** Usurp20 joined
[15:38] *** Usurp20 left
[16:29] *** fake_space_whale left
[16:51] *** ggoebel joined
[16:51] *** p6bannerbot sets mode: +v ggoebel

[17:04] *** ggoebel left
[17:05] *** epony left
[17:06] *** epony joined
[17:06] *** p6bannerbot sets mode: +v epony

[17:12] <Geth> ¦ rakudo: 0979b77565 | (Jonathan Worthington)++ | src/core/Deprecations.pm6

[17:12] <Geth> ¦ rakudo: Harden deprecation location handling code

[17:12] <Geth> ¦ rakudo: 

[17:12] <Geth> ¦ rakudo: It's possible to get an undefined back from `next-interesting-index`,

[17:12] <Geth> ¦ rakudo: which caused the slicing to blow up. The undef can happen because, as

[17:12] <Geth> ¦ rakudo: in various languages, inlining optimizations result in a backtrace with

[17:12] <Geth> ¦ rakudo: with some frames omitted. In the future, we plan to make MoarVM able to

[17:12] <Geth> ¦ rakudo: reconstruct a backtrace as if inlining had not taken place; in the

[17:12] <Geth> ¦ rakudo: meantime, this avoids the issue reported in #2235.

[17:12] <synopsebot_> RAKUDO#2235 [open]: https://github.com/rakudo/rakudo/issues/2235 [regression][⚠ blocker ⚠] t/spec/S32-num/complex.t errata file is failing

[17:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0979b77565

[17:19] *** ggoebel joined
[17:19] *** p6bannerbot sets mode: +v ggoebel

[17:20] <jnthn> .tell AlexDaniel I fixed #2235; verification welcome.

[17:20] <yoleaux> jnthn: I'll pass your message to AlexDaniel.

[17:25] *** samcv left
[17:25] *** x[LGWs4x4i]uG2N0 left
[17:25] *** jdv79 left
[17:25] *** camelia left
[17:25] *** jdv79_ joined
[17:25] *** x[LGWs4x4i]uG2N0 joined
[17:26] *** p6bannerbot sets mode: +v jdv79_

[17:26] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[17:26] *** AlexDaniel joined
[17:26] *** camelia joined
[17:27] *** p6bannerbot sets mode: +v AlexDaniel

[17:27] *** p6bannerbot sets mode: +v camelia

[17:27] *** notable6 left
[17:28] *** statisfiable6 left
[17:28] *** MasterDuke left
[17:28] *** releasable6 left
[17:30] *** AlexDaniel left
[17:30] *** AlexDaniel joined
[17:30] *** barjavel.freenode.net sets mode: +v AlexDaniel

[17:30] *** p6bannerbot sets mode: +v AlexDaniel

[17:35] *** samcv joined
[17:36] *** samcv left
[17:36] *** samcv joined
[17:36] *** p6bannerbot sets mode: +v samcv

[17:36] *** p6bannerbot sets mode: +v samcv

[17:45] <tbrowder_>  hi, #perl6-dev

[17:46] <tbrowder_> i need some pod advice...

[17:47] <tbrowder_> we currently don’t handle formatted code or paragraphs consistently

[17:49] <tbrowder_> i know everyone wants a separate pod slang but i’m not sure if that helps very much other than cleaner separation of pod and “ambient” text.

[17:54] <tbrowder_> i believe formatted text, being final markup that can’t be truly rendered in ascii, shouldn’t be parsed and identified as such in rakudo’s parser. any renderer, other than Pod::To::Text, should create the final results by parsing and implementing the formats

[17:55] <tbrowder_> *formatted chars.

[17:55] <tbrowder_> thoughts?

[18:01] <tbrowder_> Rakudo would treat formatted code as ordinary text, and Pod::To::Text could just strip out all formatting. We could have something like Pod::To::Generic which would take raw formatted text and break a text chunk into two pieces: unformatted text and a separate formatted object similar to the current Pod::FormattedCode class.

[18:03] <tbrowder_> * that should be Pod::FormattingCode

[18:04] *** [Coke]_ is now known as [Coke]

[18:04] <tbrowder_> [Coke]: hi, ^^^

[18:08] <tbrowder_> anyone watching at the moment?

[18:12] <tbrowder_> .ask TimToady any thoughts on treating pod formatted text downstream from rakudo’s treatment? i.e. rakudo treats the format chars as ordinary text and leaves treatment to the renderers.

[18:12] <yoleaux> tbrowder_: I'll pass your message to TimToady.

[18:16] <timotimo> tbrowder_: can you properly tell when pod ends if you don't do proper formatting code parsing? what of multi-line formatting codes?

[18:19] <AlexDaniel`> jnthn: cool, thanks! Will check soon

[18:21] <tbrowder_> from what i’ve seen in the trenches, i don’t think that’s a problem. but i could be wrong. the chunks could be diverted to paras instead of formatted code instances.

[18:24] <[Coke]> tbrowder_: I'm having trouble following what the ask is here in IRC. is there a doc to read?

[18:25] *** releasable6 joined
[18:25] <tbrowder_> right now just my ramblings above, plus a rakudo wiki article i’m working on.

[18:26] *** p6bannerbot sets mode: +v releasable6

[18:26] *** brrt joined
[18:26] <tbrowder_> but all this is stemming from my current work on a pr to add some more specced pod handling.

[18:27] *** p6bannerbot sets mode: +v brrt

[18:29] <tbrowder_> fc chunks don’t play well with othe pod.

[18:29] <tbrowder_> other pod chunks on the p6 side.

[19:00] *** brrt left
[19:06] <tbrowder_> for one good case in point, tables currently can’t use formatted code blocks when parsing, but downstream rendering could do that,

[19:09] <jnthn> Aren't the formatting codes that are allowed in a particular context configurable?

[19:10] <jnthn> I'm a bit reluctant about the suggested change in that it moves away from one pass parsing though. At the same time, the Pod bits of the grammar last I looked seemed to have an amount of repetition and curious factoring. That may well be simple because they were written prior to various grammar features being available, and never updated.

[19:11] <jnthn> otoh, I guess maybe tables are particularly horrible in terms of formatting codes in that I guess they can span multiple lines in a given column

[19:12] <jnthn> Leading to needing per-column parse state

[19:26] *** dfgg14 joined
[19:26] <tbrowder_> i don’t have a good argument for this, but the current parse path tries to create some classes too early so some data, like the ‘#’ number alias for %config, is unavailable if formatted text is encountered. thus we end up with varying para combinations and inconsistent block handling in contents. handling PostScript seems kind of similar to me: text formatting is carried with the text until rendering.

[19:29] <tbrowder_> i mean that we should handle formatted text roughly the same way: interpret it last.

[19:29] *** dfgg14 left
[20:06] *** x[LGWs4x4i]uG2N0 left
[20:10] *** x[LGWs4x4i]uG2N0 joined
[20:11] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[20:21] *** cognominal-p6 left
[20:36] *** cognominal-p6 joined
[20:37] *** p6bannerbot sets mode: +v cognominal-p6

[21:02] *** Ven` joined
[21:02] *** AlexDani` joined
[21:03] *** p6bannerbot sets mode: +v Ven`

[21:03] *** p6bannerbot sets mode: +v AlexDani`

[21:04] *** AlexDaniel left
[21:07] *** cognominal-p6 left
[21:07] *** Ven` left
[21:07] *** cognominal-p6 joined
[21:08] *** p6bannerbot sets mode: +v cognominal-p6

[21:13] *** skids left
[21:16] *** AlexDani` is now known as AlexDaniel

[21:20] <gfldex> m: BEGIN { say 'BEGIN' }; constant $s = Q:c⟨foo { say 'HERE' }⟩; say $s;

[21:20] <camelia> rakudo-moar 0979b7756: OUTPUT: «BEGIN␤HERE␤foo True␤»

[21:20] <gfldex> does the block in the quote run at the right time?

[21:23] <[Coke]> looks like. constants happen at BEGIN time, I think.

[21:24] <[Coke]> m: BEGIN { say 'BEGIN' }; constant $s = Q:c⟨foo { say 'HERE' }⟩; BEGIN say "there"; say $s;

[21:24] <camelia> rakudo-moar 0979b7756: OUTPUT: «BEGIN␤HERE␤there␤foo True␤»

[21:24] <timotimo> yes, constants run at BEGIN time, and the code inside the quotes is basically codegenned to be put in there with ~ ~ operator in between

[21:26] <gfldex> the docs are wrong then

[21:27] <timotimo> oh damn, got a link for us?

[21:28] <gfldex> filing issue

[21:32] <gfldex> filed as https://github.com/perl6/doc/issues/2279

[21:34] <gfldex> also, Perl 6 is great. I just added a few lines to a script that would have filled halve a page in a lesser language. :)

[21:36] <timotimo> oh, i personally refer to BEGIN time as compile time often, but clarifying can only help

[21:37] <gfldex> when is BEGIN time for a module that is loaded with require?

[21:37] <timotimo> precompilation bakes in the results of BEGIN time

[21:38] <timotimo> if you run-time "require" a module, the compile-time of that module can be embedded in the run-time of the program that has the require in it

[21:40] <gfldex> we got a "no precompilation" pragma. So you need to know if the module actually wants to be precompiled

[21:40] <gfldex> it's all a bit blurry :)

[21:40] <timotimo> right, but it comes with a lot of power :)

[21:44] <gfldex> i filled a 2nd issue

[21:44] *** notable6 joined
[21:44] <gfldex> sleep&

[21:44] *** MasterDuke joined
[21:44] *** p6bannerbot sets mode: +v MasterDuke

[21:45] *** MasterDuke left
[21:45] *** MasterDuke joined
[21:45] *** herbert.freenode.net sets mode: +v MasterDuke

[21:45] *** p6bannerbot sets mode: +v MasterDuke

[21:45] *** p6bannerbot sets mode: +v notable6

[21:55] *** cognominal-p6 left
[21:59] *** lizmat joined
[21:59] *** p6bannerbot sets mode: +v lizmat

[22:08] *** lizmat_ joined
[22:09] *** p6bannerbot sets mode: +v lizmat_

[22:09] *** lizmat__ joined
[22:10] *** p6bannerbot sets mode: +v lizmat__

[22:11] *** lizmat left
[22:13] *** lizmat_ left
[22:15] *** lizmat__ is now known as lizmat

[22:24] *** Redfoxmoon25 joined
[22:29] *** Redfoxmoon25 left
[22:32] *** jdv79_ is now known as jdv79

[22:46] *** beaky9 joined
[22:49] *** beaky9 left
[23:02] *** Ven` joined
[23:03] *** p6bannerbot sets mode: +v Ven`

[23:08] *** Ven` left
[23:19] *** lizmat left
[23:30] *** fake_space_whale joined
[23:31] *** p6bannerbot sets mode: +v fake_space_whale

[23:53] <AlexDaniel> basically set/bag/mix errata spectests is the only thing blocking right now

[23:55] <AlexDaniel> it's a relatively easy thing to fix but I'm out to bed now

