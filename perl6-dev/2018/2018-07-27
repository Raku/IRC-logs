[00:38] <Geth> ¦ nqp: 042ffa3d3e | MasterDuke17++ (committed using GitHub Web editor) | t/nqp/059-nqpop.t

[00:38] <Geth> ¦ nqp: Correct some test descriptions

[00:38] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/042ffa3d3e

[00:45] *** stmuk joined
[00:47] *** stmuk_ left
[00:57] *** lizmat left
[01:37] <MasterDuke> huh, changing infix:<+> in nqp to call nqp::add_i breaks a couple of nqp's tests, but rakdudo builds ok and passes its m-test

[01:38] <MasterDuke> but changing all the math ops in nqp breaks way more of its tests

[01:40] *** stmuk_ joined
[01:41] <MasterDuke> rakudo does still build though

[01:42] *** stmuk__ joined
[01:42] *** stmuk left
[01:45] *** stmuk_ left
[02:09] *** fake_space_whale joined
[02:18] *** skids left
[02:28] *** AlexDaniel left
[02:29] *** AlexDaniel joined
[02:30] *** AlexDaniel left
[02:30] *** AlexDaniel joined
[02:35] *** stmuk joined
[02:37] *** stmuk__ left
[06:11] *** ufobat_ joined
[06:12] *** fake_space_whale left
[06:23] <[Tux]> This line in the build process: /pro/bin/perl5.26.2 build/mk-moar-pc.pl pkgconfig/moar.pc

[06:23] <[Tux]> causes extreme system load

[06:37] <[Tux]> Rakudo version 2018.06-256-g08b449e1a - MoarVM version 2018.06-322-g41108cdaa

[06:37] <[Tux]> csv-test-xs-20      0.453 -  0.456

[06:37] <[Tux]> test-t --race       1.028 -  1.099

[06:37] <[Tux]> csv-ip5xs           1.249 -  1.255

[06:37] <[Tux]> test-t              2.313 -  2.354

[06:37] <[Tux]> csv-ip5xs-20        8.331 -  8.437

[06:37] <[Tux]> test               10.060 - 10.353

[06:38] <[Tux]> test-t-20 --race   13.441 - 13.936

[06:38] <[Tux]> csv-parser         24.904 - 24.922

[06:38] <[Tux]> test-t-20          41.239 - 41.680

[06:54] *** lizmat joined
[08:27] <lizmat> AlexDaniel: ok, won't do that in the future

[08:29] <lizmat> weekly: https://6guts.wordpress.com/2018/07/27/redesigning-rakudos-scalar/

[08:29] <notable6> lizmat, Noted!

[08:29] <lizmat> Files=1246, Tests=76432, 384 wallclock secs (16.17 usr  5.31 sys + 2706.94 cusr 259.54 csys = 2987.96 CPU)

[08:34] *** Ven`` joined
[09:50] *** japhb left
[09:50] *** japhb joined
[10:24] *** Ven`` left
[10:34] *** robertle joined
[11:11] *** lizmat left
[11:20] *** Zoffix joined
[11:20] <Zoffix> AlexDaniel: what's the verdict on the release? Are we skipping it? (Just wondering if post-release branches can be merged in)

[11:21] *** ChanServ sets mode: +o Zoffix

[11:21] *** Zoffix changes topic to: Perl 6 language and compiler development | Logs at http://colabti.org/irclogger/irclogger_log/perl6-dev | For toolchain/installation stuff see #perl6-toolchain | For MoarVM see #moarvm

[11:21] *** Zoffix sets mode: -o Zoffix

[11:32] <stmuk> I'm investigating when windows stopped passing 100% 

[11:33] <stmuk> I'm favouring a star release based on 2016.06 or (2016.06+stuff) 

[11:34] *** robertle left
[11:48] *** pmurias joined
[11:52] <AlexDaniel> Zoffix: you can merge post-release branches regardless of what's going to be with 2018.07 :)

[11:52] <AlexDaniel> I just woke up so a verdict will be a bit later I think

[11:54] <AlexDaniel> but either we skip it completely or we will work with some commit in the past, and you can merge post-release stuff now

[12:04] <stmuk> I was amazed to see that windows even had 100% PASS :)

[12:04] <Geth> ¦ roast: zoffixznet++ created pull request #455: Post release 2018.07

[12:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/455

[12:05] <Geth> ¦ roast/master: 19 commits pushed by (Zoffix Znet)++

[12:05] <Geth> ¦ roast/master: review: https://github.com/perl6/roast/compare/8afb8fb36b97...f5454af87b3f

[12:06] <Zoffix> stmuk: of what, make test?

[12:06] <stmuk> yes of roast .. I didn't try the nqp tests

[12:06] <Zoffix> ?

[12:07] <jnthn> make test is not roast

[12:07] <Zoffix> There's a ton of spectest failures, including a hang: https://github.com/perl6/roast/issues/320#issuecomment-400838086

[12:07] <timotimo> hey Zoffix, any word on when recordings of last night's talk will appear online?

[12:07] <yoleaux> 03:45Z <MasterDuke> timotimo: how come there's a smrt_numify and smrt_strify, but not smrt_intify?

[12:07] <Zoffix> with near-06 release

[12:09] <Zoffix> timotimo: no idea. There was a hangout turned on, so I imagine there'll be a video of it. When, I don't know. This is the meeting organizer, you could ask him: https://twitter.com/talexb

[12:09] <stmuk> sorry I meant nqp tests not roast

[12:09] <Zoffix> Ah

[12:10] <Zoffix> timotimo: but I don't think there's anything interesting in my talks for people who know Perl 6 already

[12:10] <stmuk> I tried git bisect but it seemed useless since most test points didn't compile under windows anyway

[12:10] <Zoffix> Other than maybe having a chuckle at me failing miserable to pronounce "Parametarized array ":)

[12:11] <stmuk> actually I probably should have just tried nqp or moar bisect in hindsight

[12:20] *** pmurias left
[12:21] <Zoffix> timotimo: I have the slides BTW: https://tpm-perf.perl6.party  and  https://tpm-regex.perl6.party/

[12:22] <timotimo> thanks :)

[12:25] <jnthn> Zoffix++

[12:28] <stmuk> actually what is the proper name for "make test" tests ... maybe "core tests"?

[12:28] <timotimo> hm, sanity tests is maybe too "small"

[12:32] *** pmurias joined
[12:32] *** diakopter left
[12:35] <timotimo> woo, my grant got a little shout-out \o/

[12:37] <Zoffix> :)

[12:40] *** Zoffix left
[12:42] *** diakopter joined
[12:47] * stmuk uses vmware seamless to pretend its not actually windows

[12:54] <stmuk> does t\04-nativecall\12-sizeof.t flap? I'd guess not

[12:57] <stmuk> maybe it does

[13:18] <stmuk> https://github.com/rakudo/rakudo/issues/2070#issuecomment-408415603

[13:47] *** robertle joined
[14:13] *** j3nnn1 joined
[14:39] *** Zoffix joined
[14:40] *** nebuchadnezzar joined
[15:01] *** fake_space_whale joined
[15:08] *** lucasb joined
[15:10] <japhb> FWIW, Zoffix, I still watch many of the Perl 6 videos after all these years, partly because there's often a different viewpoint or implementation style that I hadn't merged into my own yet, but also partly because I'm trawling for good videos to point Perl 6 skeptics to.

[15:22] *** AlexDaniel left
[15:22] *** AlexDaniel joined
[15:36] *** x[LGWs4x4i]uG2N0 left
[15:39] *** x[LGWs4x4i]uG2N0 joined
[16:14] *** pmurias left
[16:16] *** pmurias joined
[16:18] <Zoffix> Join us next week, Saturday, August 4, 2018 for the Monthly SQUASHathon! This month we will be fixing broken ecosystem modules: https://bit.ly/2LUVRdu

[16:25] *** Zoffix left
[16:26] *** fake_space_whale left
[16:31] *** lizmat joined
[17:21] *** Kaiepi left
[17:22] *** Kaiepi joined
[17:56] *** kiwi_46 joined
[17:58] *** kiwi_46 left
[18:00] *** lucasb left
[18:22] <[Coke]> I am happy using a mac for dev work, but am wondering if there's an off the shelf linux laptop anyone would recommend.

[18:22] <[Coke]> (for p6 dev)

[18:36] *** AlexDaniel left
[18:38] *** scovit left
[18:49] <japhb> System76 does Ubuntu-out-of-the-box and decent configs.  Mind you, I tend to wipe and install Linux Mint these days, but it's all Debian-alikes anyway.

[18:50] <japhb> They're not exactly cheap though, because not enough economy of scale to get the big discounts.

[18:56] <[Coke]> speaking of AC, my thermostat emailed me today to ask if I left a door open.

[18:57] <[Coke]> The future is kind of weird.

[19:01] <stmuk> dell xps 13 has good linux support (nice kb too)

[19:06] <Geth> ¦ rakudo: lizmat self-assigned Constants slower than literals in range creation https://github.com/rakudo/rakudo/issues/2138

[19:12] *** gfldex joined
[19:14] *** robertle_ joined
[19:14] <gfldex> is there a hard limit on RAKUDO_MAX_THREADS ?

[19:15] <lizmat> well, there's a default limit in the ThreadPoolScheduler

[19:15] <lizmat> you could try raising that with

[19:16] <lizmat> my $*SCHEDULER = ThreadPoolScheduler.new( max_threads => 666 );

[19:16] <timotimo> the number of open file descriptors is often what limits you first

[19:16] <timotimo> maximum number*

[19:20] <gfldex> changing $*SCHEDULER is confusing Telemetry. It doesn't show # of threads anymore.

[19:21] <lizmat> hmmm.....interesting  :-)

[19:22] <lizmat> do you have some code ?

[19:22] <gfldex> neither setting $*SCHEDULER or RAKUDO_MAX_THREADS, nor both gets Rakudo beyond 11 hardware threads

[19:22] *** dct joined
[19:22] <gfldex> i have a wee bit of code :)

[19:22] <lizmat> gfldex: weird, I've seen it close to 64 on my machine

[19:22] <gfldex> RAKUDO_MAX_THREADS=32 perl6 -Msnapper -e 'my $*SCHEDULER = ThreadPoolScheduler.new( max_threads => 18 ); .say for (1..1_000_000).race(:batch(10000)).grep(*.is-prime)'

[19:23] <timotimo> it won't add more threads unless it thinks it's worth it

[19:23] <gfldex> i got myself a Threadripper and wanted to rip some threads with Rakudo :(

[19:24] <gfldex> lizmat: any simple code that works on your end?

[19:27] <timotimo> try running "sleep 1" on a bunch of threads :P

[19:27] <timotimo> also, i think you'd need to give .race a degree parameter, too, to get more threads

[19:30] <gfldex> :degree(16) did the trick

[19:30] <gfldex> wallclock  util%  max-rss  gw      gtc

[19:30] <gfldex> --------- ------ -------- --- --------

[19:30] <gfldex>  32689668  90.88   123128  16      305

[19:31] <gfldex> i'm not sure it I agree with the default to 4

[19:31] * gfldex goes to rip loads of threads

[19:37] <gfldex> before adding :degree(16):

[19:37] <gfldex> processed in 6.2727464s with 3455.1053820624265 stations/s

[19:37] <gfldex> after:

[19:37] *** Zoffix joined
[19:37] <gfldex> processed in 3.58713334s with 6065.567666727576 stations/s

[19:37] <Zoffix> gfldex: eventually those parameters will be smarter: R#1741

[19:37] <synopsebot> R#1741 [open]: https://github.com/rakudo/rakudo/issues/1741 [ASYNC][RFC][perf] RFC: make default $degree in hyper/race depend on number of cores

[19:39] *** Zoffix left
[19:44] <MasterDuke> [Coke]: +1 for the dell xps 13 (using it now with kubuntu 18.04)

[19:45] <MasterDuke> gfldex: nice! i still haven't made a ryzen purchase yet...

[20:00] <lizmat> gfldex: sorry was otherwise occupied

[20:00] <gfldex> lizmat: don't worry, I got sorted :)

[20:00] <lizmat> if you run -Msnapper, it has already started the Telemetry thread

[20:01] <lizmat> with the default $*SCHEDULER

[20:51] *** x[LGWs4x4i]uG2N0 left
[20:56] *** x[LGWs4x4i]uG2N0 joined
[21:19] *** AlexDaniel joined
[22:11] *** Kaiepi left
[22:12] *** j3nnn1 left
[22:12] <Geth> ¦ rakudo: c603340120 | (Elizabeth Mattijsen)++ | src/Perl6/Optimizer.nqp

[22:12] <Geth> ¦ rakudo: Also optimize for ^foo where my constant \foo = 42

[22:12] <Geth> ¦ rakudo: 

[22:12] <Geth> ¦ rakudo: Part one of fixing R#2138.  The case for "my constant $foo = 42" either

[22:12] <Geth> ¦ rakudo: needs to be fixed differently (as it arrives as a QAST::Var, rather than

[22:12] <Geth> ¦ rakudo: a QAST::Want or a QAST::WVal).  Or maybe "my constant $foo = 42" should

[22:12] <Geth> ¦ rakudo: be codegenned as a QAST::WVal rather than as a QAST::Var.

[22:12] <synopsebot> R#2138 [open]: https://github.com/rakudo/rakudo/issues/2138 Constants slower than literals in range creation

[22:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c603340120

[22:13] <lizmat> sleep&

[22:21] *** Kaiepi joined
[22:27] *** skids joined
[22:42] <MasterDuke> heh, i now have an nqp where 'say(100000000000000009)' prints '100000000000000009', but it won't build rakudo (and fails a lot of the nqp tests)

[22:43] <japhb> MasterDuke: Are you attempting the num -> int default numeric type conversion?

[22:44] <MasterDuke> japhb: yeah

[22:47] <timotimo> it'd be great to have that

[22:48] <MasterDuke> it's probably beyond me, but maybe i can get started enough to inspire some help

[22:55] <MasterDuke> nqp: say(nqp::inf() + 123)

[22:55] <camelia> nqp-moarvm: OUTPUT: «Inf␤»

[22:55] <MasterDuke> for instance, that now says -9223372036854775685

[23:22] *** PufferBot joined
[23:25] *** skids left
[23:27] <MasterDuke> nqp: say(೫e-೩೨೪)

[23:27] <camelia> nqp-moarvm: OUTPUT: «5e-324␤»

[23:28] <MasterDuke> and that complains: `Error encoding ASCII string: could not encode codepoint 3307`

[23:32] <MasterDuke> heh, https://github.com/perl6/nqp/blob/master/src/QRegex/Cursor.nqp#L1286

[23:42] *** dct left
