[06:21] <[Tux]> This is Rakudo version 2016.08.1-47-gd43ea07 built on MoarVM version 2016.08

[06:21] <[Tux]> csv-ip5xs       10.723

[06:21] <[Tux]> test            16.205

[06:21] <[Tux]> test-t           7.456

[06:21] <[Tux]> csv-parser      16.850

[08:28] <dalek> rakudo/nom: f2df2c5 | lizmat++ | src/core/ (5 files):

[08:28] <dalek> rakudo/nom: Use IO::Handle.slurp-rest(:close) where possible

[08:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f2df2c53cb

[08:29] <lizmat> commute&

[09:28] <travis-ci> Rakudo build errored. Elizabeth Mattijsen 'Use IO::Handle.slurp-rest(:close) where possible'

[09:28] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/155875137 https://github.com/rakudo/rakudo/compare/d43ea0703261...f2df2c53cb73

[09:29] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually

[09:38] <moritz> "No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself." on one platform

[09:38] <moritz> during stage parse

[09:38] <moritz> looks like a timeout to me

[10:14] <nine> Yes, sometimes those travis instances will just hang at random points of the build

[10:56] <Woodi> while installing R2016.08 I also had strange pause during compilation...

[10:57] <Woodi> +100% CPU usage

[11:07] <stmuk_> Woodi: are you using clang?

[11:07] <Woodi> stmuk_: no

[11:07] <Woodi> but it probably was 32bit

[11:19] <Woodi> looots of brk() calls in strace output

[11:50] <jnthn> That's just memory allocation, no? :)

[12:14] <Woodi> jnthn: yes, many mallocs too

[12:16] <SpaceMario> https://travis-ci.org/rakudo/rakudo/builds/155875137

[12:17] <buggable> [travis build above] ✓ All failures are due to timeout (1), missing build log (0), or GitHub connectivity (0)

[12:17] <SpaceMario> There. Fixed forever.

[12:20] <Woodi> soso^H^H

[13:01] <timotimo> malloc should not appear in strace o_O

[14:05] <ugexe> https://github.com/rakudo/rakudo/commit/f2df2c53cb73351645a6314080590f202b053d43#diff-9d9f3b6271234e410619d222c23d08f7R263 # lizmat: missed the `$handle.close` on these 3

[14:47] <[Coke]> http://xkcd.com/1726/ - unicode

[14:57] <brrt> [Coke]++ lol

[16:07] <mst> oh, this is very cool: http://smallcultfollowing.com/babysteps/blog/2016/03/02/nice-errors-in-lalrpop/

[16:07] <mst> masak: ^^ maybe of interest

[16:12] <|Tux|> http://xkcd.com/#468866d8ef49c8080cf77986ba9d1ab8

[16:19] <masak> [Tux]: what's with that #468866d8ef49c8080cf77986ba9d1ab8 thing? :)

[16:20] <|Tux|> a very nice joke about Unicode

[16:20] <|Tux|> at least, nice in my perception

[16:22] <masak> yes, but... that ID? as far as I can see you just posted a URL to http://xkcd.com with a humongous ID after it. where's the ID come from? :)

[16:23] <masak> mst: I skimmed it enough to see that I want to read it carefully later. nice, ta!

[16:29] <|Tux|> Ah, I see that from https://toons.gotblah.com

[16:32] <[Coke]> m: say uniname(1726)

[16:32] <camelia> rakudo-moar f2df2c: OUTPUT«ARABIC LETTER HEH DOACHASHMEE␤»

[16:32] <[Coke]> HEH.

[16:32] <timotimo> kek

[16:36] <masak> I love the smell of doachashmee in the morning.

[16:40] <jnthn> .oO( Do a cash me? )

[18:12] <dalek> rakudo/raccoon: b5a0394 | niner++ | / (3 files):

[18:12] <dalek> rakudo/raccoon: First steps towards a declarative build system for modules

[18:12] <dalek> rakudo/raccoon: review: https://github.com/rakudo/rakudo/commit/b5a03942d4

[18:12] <dalek> rakudo/raccoon: 979215d | niner++ | tools/ (4 files):

[18:12] <dalek> rakudo/raccoon: Install raccoon formerly known as install-dist.pl

[18:12] <dalek> rakudo/raccoon: review: https://github.com/rakudo/rakudo/commit/979215dd95

[18:13] <timotimo> cool

[18:15] <nine> It can install Inline::Perl5 without help of Build.pm or configure.pl6 with this added to the META.info: "build": { "makefile-variables": { "p5helper": {"library": "p5helper"}, "perlopts": {"run": "perl -MExtUtils::Embed -e ccopts -e ldopts"} } }

[18:49] <[Coke]> RT #129128 says "AActually thrown ain block" ... some weird cut and paste issue from the reporter?

[18:49] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=129128

[19:25] <CptnK> [Coke]: yup: http://irclog.perlgeek.de/perl6/2016-08-29#i_13111534

[19:31] * CptnK is reminded....

[19:31] <CptnK> The Weekly says there'll be R-Star release for 2016.08.1 but I don't think that's the case.

[19:32] <CptnK> Unless I missed some conversation, I think the plan was to release R* every 3-4 months

[19:32] <[Coke]> CptnK: that was the original plan from 2 years ago or so

[19:33] <[Coke]> the actual plan is "whenever we get a volunteer"

[19:33] <[Coke]> stmuk_++

[19:33] <timotimo> right

[19:33] <[Coke]> CptnK: what was the yup in response to?

[19:33] <CptnK> OK

[19:34] <[Coke]> oh, that it was (probably) a cut and paste error?

[19:34] <CptnK> [Coke]: "some weird cut and paste issue from the reporter?"

[19:34] <[Coke]> right, I know it didn't give -me- that error, just wondering if that's what that user actually saw, or what.

[19:34] <[Coke]> danke.

[19:37] * CptnK wonders what would be involved in replacing stmuk_ with a robot :P

[19:37] <CptnK> buggable: tags

[19:37] <buggable> CptnK, Error accessing R6 API

[19:37] <CptnK> riiight

[19:38] <timotimo> in my experience, stmuk does a lot of diverse things

[19:39] <timotimo> here in #perl6-* we tend to have one robot for each readily separable task

[19:40] <moritz> mst: that article about error messages is really cool. TBH I expected it to be about parse errors, not about errors in the pasers :-)

[19:40] <arnsholt> Indeed

[19:41] <arnsholt> IIRC TimToady has had words at some point about getting LALR parsers to output good error messages

[19:41] <mst> moritz: yarr, that's what made it interesting

[19:42] <arnsholt> Using ASCII art to show conflicts and such was really neat

[19:42] <timotimo> yup

[19:42] <arnsholt> A good departure from the traditional UNIX way of "single line or bust"

[19:48] <dalek> rakudo/raccoon: acc13c6 | niner++ | / (3 files):

[19:48] <dalek> rakudo/raccoon: First steps towards a declarative build system for modules

[19:48] <dalek> rakudo/raccoon: review: https://github.com/rakudo/rakudo/commit/acc13c6770

[19:48] <dalek> rakudo/raccoon: c10aabb | niner++ | tools/ (4 files):

[19:48] <dalek> rakudo/raccoon: Install raccoon formerly known as install-dist.pl

[19:48] <dalek> rakudo/raccoon: review: https://github.com/rakudo/rakudo/commit/c10aabb885

[19:56] <stmuk_> I do need to automate pulling the git log for the R* modules more

[19:58] <[Coke]> I'd like us to write down the "no force push" rule somewhere so the edge cases are clear.

[19:59] <[Coke]> assuming we have the same basic rules for perl6/ rakudo/ MoarVM/ etc.

[20:03] * lizmat starts on this week's Perl 6 Weekly

[20:16] <moritz> [Coke]: add it to the CONTRIBUTING.md file (maybe with an exception for branches with only one contributor)

[20:30] <stmuk_> hmm I sometimes wonder why I bother to post on reddit!

[20:45] <jnthn> For the thoughtfully written, high quality comments of course!

[20:46] <[Coke]> crotchety coke mostly avoids reddit. :|

[20:59] <arnsholt> One of my fave subreddits is polandball

[21:00] <arnsholt> Which is pretty hilarious

[21:03] <timotimo> [Coke]: i didn't know you crotchet! what kinds of things? scarves? socks? sweaters?

[21:42] <lizmat> and a new Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2016/08/29/2016-35-a-quick-one-from-zagreb/

[21:58] <jnthn> lizmat++

[21:59] <jnthn> Hope you enjoy Zagreb (maybe they took the scaffolding off a few of the interesting buildings since I was there a few years again!) :)

[22:00] <jnthn> 'night

[22:10] <gfldex> m: enum E(<one two>); dd ::(E.enums.keys[0]);

[22:10] <camelia> rakudo-moar f2df2c: OUTPUT«E::two␤»

[22:10] <gfldex> there seams to be no easy way (without the runtime lookup) to get a list of type objects for enum keys

[22:11] <timotimo> oh?

[22:11] <gfldex> i have a usecase where I would like to have that easy way

[22:11] <timotimo> are you sure?

[22:11] <timotimo> enum E(<one two>); dd E::enums>>.value;

[22:11] <timotimo> m: enum E(<one two>); dd E::enums>>.value;

[22:12] <camelia> rakudo-moar f2df2c: OUTPUT«Could not find symbol '&enums'␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[22:12] <timotimo> m: enum E(<one two>); dd E::.enums>>.value;

[22:12] <camelia> rakudo-moar f2df2c: OUTPUT«Method 'enums' not found for invocant of class 'Stash'␤  in block <unit> at <tmp> line 1␤␤»

[22:12] <timotimo> m: enum E(<one two>); dd E::.values;

[22:12] <camelia> rakudo-moar f2df2c: OUTPUT«(E::two, E::one).Seq␤»

[22:12] <timotimo> that was much simpler than i thought

[22:12] <gfldex> it is

[22:12] <gfldex> i better doc that

[22:12] <timotimo> good idea

[22:22] <Zoffix> lizmat++ good weekly

[22:22] <timotimo> yo Zoffix :)

[22:23] <Zoffix> \o

[22:24] <Zoffix> buggable, tags

[22:24] <buggable> Zoffix, Error accessing R6 API

[22:27] <Zoffix> buggable, tags

[22:27] <buggable> Zoffix, Total: 1374; BUG: 540; UNTAGGED: 286; LTA: 119; NYI: 91; JVM: 62; RFC: 54; CONC: 51; SEGV: 37; REGEX: 34; TESTNEEDED: 34; UNI: 30; PERF: 26; @LARRY: 19; POD: 18; IO: 15; NATIVECALL: 14; BUILD: 11; PRECOMP: 11; TODO: 11; MATH: 7; OO: 7; TESTCOMMITTED: 7; STAR: 6; BOOTSTRAP: 5; GLR: 4; OSX: 4; REPL: 4; WEIRD: 3; CONFIGURE: 1; DOCS: 1; LIBRARY: 1; RT: 1; SITE: 1; SPEC: 1; See http://localhost:4000/ for details

[22:28] <Zoffix> 0.o

[22:31] <timotimo> look at my bug queue and despair

[22:31] * Zoffix was desparing about that host name :P

[22:34] <timotimo> hm?

[22:35] <Zoffix> "<buggable> [...] See http://localhost:4000/ for details"

[22:37] <Zoffix> buggable, tags

[22:37] <buggable> Zoffix, Total: 1374; BUG: 540; UNTAGGED: 286; LTA: 119; NYI: 91; JVM: 62; RFC: 54; CONC: 51; SEGV: 37; REGEX: 34; TESTNEEDED: 34; UNI: 30; PERF: 26; @LARRY: 19; POD: 18; IO: 15; NATIVECALL: 14; BUILD: 11; PRECOMP: 11; TODO: 11; MATH: 7; OO: 7; TESTCOMMITTED: 7; STAR: 6; BOOTSTRAP: 5; GLR: 4; OSX: 4; REPL: 4; WEIRD: 3; CONFIGURE: 1; DOCS: 1; LIBRARY: 1; RT: 1; SITE: 1; SPEC: 1; See http://perl6.fail/ for details

[22:38] <Zoffix> there we go

[22:38] <Zoffix> buggable, tag testneeded

[22:38] <buggable> Zoffix, There are 34 tickets tagged with TESTNEEDED; See http://perl6.fail/t/TESTNEEDED for details

[22:50] <timotimo> oh, haha

[22:50] <timotimo> i totally missed that! :)

[22:51] <timotimo> oh lord, perl6.fail?

[22:51] <timotimo> you have all the domains. you have the best domains.

[22:51] <Zoffix> :)

[22:53] <timotimo> R6 looks really pretty

[22:53] <timotimo> bootswatches++ i suppose? ;)

[22:53] <Zoffix> Yeah

[22:53] <Zoffix> (don't bother logging in, there's nothing there, unless you're a release manager)

[22:53] <Zoffix> Which is why it's still on http and not https :)

[22:53] <timotimo> will you also make per-bug pages to replace the original rt per-bug pages?

[22:53] <Zoffix> Yeah

[22:53] <timotimo> <3 <3 <3

[22:57] <Zoffix> NeuralAnomaly, status

[22:57] <NeuralAnomaly> Zoffix, [✔] Next release will be in 2 weeks and 4 days. Since last release, there are 21 new still-open tickets (0 unreviewed and 0 blockers). See http://perl6.fail/release/stats for details

[22:59] <AlexDaniel> Zoffix: what is the easiest way to write tests for IRC::Client bots?

[22:59] <AlexDaniel> Zoffix: I mean, maybe IRC::Client can provide something for it?

[23:00] <AlexDaniel> sure enough I can start a local IRC server for that, but… not sure if it is awesome enough

[23:02] <Zoffix> AlexDaniel, haven't explored it yet. I think you saw my attempts to use PoCo::IRC::Server via Inline::Perl5 in IRC::Client test suite. It seems to do the trick, but kinda annoying in that you have to assume responses happened and then check they're right, as in, you get pretty much no indication when something has completed.... At least that was my impression with it; there's probably a way to make it more robust (and make it run faster).

[23:10] <cognominal> lizmat++
