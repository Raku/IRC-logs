[01:27] <dalek> roast: 7f9045e | (Zoffix Znet)++ | S03-operators/precedence.t:

[01:27] <dalek> roast: [TODO FUDGE] exported multi has correct precedence

[01:27] <dalek> roast:

[01:27] <dalek> roast: RT#128042

[01:27] <dalek> roast: review: https://github.com/perl6/roast/commit/7f9045eb13

[01:27] <dalek> roast: 2d4d315 | (Zoffix Znet)++ | S03-operators/precedence.t:

[01:27] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128042

[01:27] <dalek> roast: Remove trailing whitespace

[01:27] <dalek> roast: review: https://github.com/perl6/roast/commit/2d4d315d3e

[01:46] <dalek> roast: e1e9617 | (Zoffix Znet)++ | S02-types/array.t:

[01:46] <dalek> roast: [TODO FUDGE] [*-0] index references correct element when autovivifying

[01:46] <dalek> roast:

[01:46] <dalek> roast: RT#128005

[01:46] <dalek> roast: review: https://github.com/perl6/roast/commit/e1e96176cd

[01:46] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128005

[01:46] <dalek> roast: f39436f | (Zoffix Znet)++ | S02-types/array.t:

[01:46] <dalek> roast: Remove trailing whitespace

[01:46] <dalek> roast: review: https://github.com/perl6/roast/commit/f39436f2a3

[02:15] * Zoffix lols

[02:15] <Zoffix> Why do we have method "fap" in IO::Path? XD

[02:16] <mst> Scala: fmap fmap fmap boom

[02:16] <mst> perl6: fap fap fap spurt

[02:16] <camelia> rakudo-jvm cd19db: OUTPUT«===SORRY!=== Error while compiling <tmp>␤Undeclared routine:␤    fap used at line 1. Did you mean 'map'?␤␤»

[02:16] <camelia> ..rakudo-moar 242baf: OUTPUT«===SORRY!=== Error while compiling <tmp>␤Undeclared routine:␤    fap used at line 1. Did you mean 'map'?␤␤»

[02:16] <mst> (with apologies to sexylosers.com)

[02:16] <mst> (also the bots ;)

[02:16] <Zoffix> :)

[02:55] <gfldex> it's all good. It's a private method.

[02:56] <gfldex> and the name makes perfect sense :D

[02:58] <Zoffix> S17-procasync/no-runaway-file-limit.t hangs on my box :/ occasionally

[03:04] <dalek> rakudo/nom: 9d3b6d0 | (Zoffix Znet)++ | src/core/IO/Path.pm:

[03:04] <dalek> rakudo/nom: Improve IO::Path.new error message when given wrong arguments

[03:04] <dalek> rakudo/nom:

[03:04] <dalek> rakudo/nom: It can take positionals, so its error message must not claim it doesn't

[03:04] <dalek> rakudo/nom:

[03:04] <dalek> rakudo/nom: Fixes RT#127989

[03:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9d3b6d0731

[03:04] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=127989

[03:04] <dalek> roast: 5f54695 | (Zoffix Znet)++ | S32-io/io-path.t:

[03:04] <dalek> roast: IO::Path.new with wrong args must not claim it only takes named ones

[03:04] <dalek> roast:

[03:04] <dalek> roast: RT#127989

[03:05] <Zoffix> dalek, bruh... Where's the link to roast commit! What are we paying you for?

[04:56] <dalek> star: 50b6e24 | (Naoum Hankache)++ | docs/perl6intro.pdf:

[04:56] <dalek> star: Update perl6intro.pdf

[04:56] <dalek> star: review: https://github.com/rakudo/star/commit/50b6e244e7

[04:56] <dalek> star: 3946ee2 | moritz++ | docs/perl6intro.pdf:

[04:56] <dalek> star: Merge pull request #72 from hankache/master

[04:56] <dalek> star:

[04:56] <dalek> star: Update perl6intro.pdf

[04:56] <dalek> star: review: https://github.com/rakudo/star/commit/3946ee2506

[07:39] <dalek> rakudo/nom: 8aaffa8 | lizmat++ | src/core/ (2 files):

[07:39] <dalek> rakudo/nom: Make Str.indices about 10% faster

[07:39] <dalek> rakudo/nom:

[07:39] <dalek> rakudo/nom: - by giving it a dedicated Str candidate, and have Cool refer to it

[07:39] <dalek> rakudo/nom: - also does 2 allocations less per call, so more GC friendly

[07:39] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8aaffa8b12

[10:09] <psch> r: sub f { return sub g { say $++ } }; f()(); f()();f()()

[10:09] <camelia> rakudo-moar 8aaffa, rakudo-jvm cd19db: OUTPUT«0␤0␤0␤»

[10:09] <psch> which means moar and jvm somehow differentiate between Blocks and Routines in a way they shouldn't

[10:10] <psch> 'cause i'm inclined to agree with raiph++'s interpretation, each time the loop Block is hit it's effectively a new declaration

[10:13] <jnthn> To moar they're all just frames, it doesn't care for routine vs block. That's a higher-level thing.

[10:13] <timotimo> i think the difference is with using nqp::clone or not on the block before invoking it?

[10:14] <psch> right, "jvm - in contrast to moar - " or so would've been the better phrasing

[10:14] <psch> r: sub f { loop { say $++; last } }; f;f;f;f;

[10:14] <camelia> rakudo-moar 8aaffa: OUTPUT«0␤0␤0␤0␤»

[10:14] <camelia> ..rakudo-jvm cd19db: OUTPUT«0␤1␤2␤3␤»

[10:14] <psch> jnthn: just to verify, moar is correct there?

[10:18] <jnthn> Well, Moar's output is consistent with how I understand things to work, whereas I'm a bit confused how the JVM output happens :)

[10:18] <psch> aw, shucks, and here i was hoping for a language design decision :)

[10:18] <jnthn> Then, we know that the JVM lexical scope handling has some inconsistencies vs. on Moar (which is the source of some bugs)

[10:19] <jnthn> Well, I can see the lang design argument for wanting it the other way, per the "when is a block a closure"...trouble is that the moment you make a loop lazy then the block really *does* become a closure, so... :)

[10:20] <jnthn> I'd be interested to hear TimToady's take.

[10:20] <jnthn> 'cus while I suspect it'll come down on the "torture the implementer" side, I'm not sure where we draw the line exactly :)

[10:20] <psch> well, we do have the jvm backend :P

[10:21] <psch> anyway, yeah.  i suppose i'll ticket the difference, link the ticket i know is related and do something else

[10:38] <Zoffix> stmuk, yeah, I can cut a 2016.07.01 release in 13 hours.

[10:38] <Zoffix> (to everyone else) It's fine to do that, right? We don't need to sacrifice anything to appease some god?

[10:38] <dalek> rakudo/nom: 328c2d6 | lizmat++ | src/core/Str.pm:

[10:38] <dalek> rakudo/nom: Make Str.samecase 5x as fast

[10:38] <dalek> rakudo/nom:

[10:38] <dalek> rakudo/nom: - completely re-imagine in nqp

[10:38] <dalek> rakudo/nom: - with smarter way to deal with lc/uc/non-alpha

[10:38] <dalek> rakudo/nom: - with way fewer allocations, so easier on the GC

[10:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/328c2d6d80

[10:39] <DrForr> 13 hours? Lucky you... oh, wait :)

[10:39] <lizmat> Zoffix: not against another release, but what are we fixing ?

[10:39] <Zoffix> Reasoning is because currently 2016.07 apparently has an issue with DESTDIR for packagers, which was fixed in HEAD. And we want to cut a R* release this month: https://rt.perl.org/Ticket/Display.html?id=128652

[10:40] <lizmat> Zoffix: perhaps a new release should also include 242baf256a210f1cb643cb63

[10:41] <Zoffix> sure

[10:41] <lizmat> unless jnthn has another idea on fixing RT #128655

[10:41] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128655

[10:43] <jnthn> Well, debug the optimizer and figure out why it seems to be picking the wrong candidate, maybe... :)

[10:44] <stmuk> Zoffix++

[10:44] <yoleaux2> 17 Jul 2016 19:00Z <Zoffix> stmuk: not sure if it affects R* release, but FYI the 2016.07 release seems to have issues with custom DESTDIR that I think are fixed in HEAD: https://rt.perl.org/Ticket/Display.html?id=128652

[10:45] <lizmat> jnthn: a more focused suggestion than "debug the optimizer" would be appreciated  :-)

[10:46] <jnthn> lizmat: Well, it could either be a static inlining failure, or a failure in the compile-time multi dispatch resolution.

[10:47] <lizmat> oddity: Str.samecase("") just returns self, whereas Str.samemark("") returns a Failure (and roast expects this both these behaviours)

[10:47] <jnthn> lizmat: Could try to dump out the signature of the candidate it chooses if some env var is turned on, to see which side the problem is on, I guess

[10:47] <lizmat> this feels inconsistent to me

[10:50] <Zoffix> r: sub f { state $x; for ^10 { state $y; say [$x++, $y++]; last if $_ > 1 } }; f;f;f;f;

[10:50] <camelia> rakudo-moar 8aaffa, rakudo-jvm cd19db: OUTPUT«[0 0]␤[1 1]␤[2 2]␤[3 0]␤[4 1]␤[5 2]␤[6 0]␤[7 1]␤[8 2]␤[9 0]␤[10 1]␤[11 2]␤»

[10:51] <Zoffix> jnthn, is this also fine on MoarVM? I'd expect state to keep the $y around. It's what Perl 5 does too

[10:52] <Zoffix> huh... jvm had different output last night

[10:53] <Zoffix> (Perl 5's output: https://gist.github.com/zoffixznet/9f5010d69b6ccc41024c9a4eb50e75b0 )

[10:54] <jnthn> Zoffix: for de-sugars to map, the block is just a closure passed to map, and state varaibles are per closure

[10:54] <jnthn> Zoffix: In Perl 5, "for de-sugars to map" is not the case, afaik

[10:55] <jnthn> Which would account for the discrepancy

[10:55] <Zoffix> I see

[10:59] <jnthn> m: sub f() { do for ^10 { ++(state $x) } }; my @a = lazy f; my @b = lazy f; say @a[^5]; say @b[^5];

[10:59] <camelia> rakudo-moar 328c2d: OUTPUT«(1 2 3 4 5)␤(1 2 3 4 5)␤»

[11:00] <jnthn> If we were to make it magically scope the state variable's lifetime to the routine, we'd break this.

[11:21] <Frameless> yeah, makes sense to me now. raiph explained it last night too, but it didn't click for me then. Mostly 'cause I confused myself thinking it was /last/next that reset state in the examples, but I see it's not actually the case now

[11:40] <dalek> rakudo/nom: 9c796f2 | (David Warring)++ | src/core/ (2 files):

[11:40] <dalek> rakudo/nom: fix Blob/bytecomp SHA-1 checksums

[11:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9c796f2e88

[11:40] <dalek> rakudo/nom: 21cfe2a | niner++ | src/core/ (2 files):

[11:40] <dalek> rakudo/nom: Merge pull request #811 from dwarring/sha1-checksums

[11:40] <dalek> rakudo/nom:

[11:40] <dalek> rakudo/nom: fix Blob/precomp SHA-1 check-sums

[11:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/21cfe2a8a2

[11:50] <tbrowder> n: my $s := ''; my $b = nqp::isstr($s); say($b);

[11:50] <camelia> niecza : OUTPUT«No such file or directory»

[11:51] <camelia> niecza : OUTPUT«(timeout)cat: /home/camelia/niecza/VERSION: No such file or directory␤»

[11:52] <tbrowder> n: my $s := ''; my $b := nqp::isstr($s); my say($b);

[11:52] <camelia> niecza : OUTPUT«No such file or directory»

[11:52] <tbrowder> n: my $s := ''; my $b := nqp::isstr($s); say($b);

[11:52] <camelia> niecza : OUTPUT«No such file or directory»

[11:52] <camelia> niecza : OUTPUT«(timeout)cat: /home/camelia/niecza/VERSION: No such file or directory␤#perl6-dev <tbrowder> niecza: my $s := ''; my $b := nqp::isstr($s); say($b);␤»

[11:53] <psch> tbrowder: i don't think you can convince camelia to fix niecza :)

[11:54] <tbrowder> hm, i thought there was way to use nqp here like rakudo

[11:54] <psch> nqp: my $s := ''; my $b := nqp::isstr($s); say($b);

[11:54] <camelia> nqp-moarvm: OUTPUT«1␤»

[11:54] <psch> camelia: help

[11:54] <camelia> psch: Usage: <(rakudo-jvm|p5-to-p6|nqp-js|nqp-moarvm|star-m|nqp-parrot|star-j|std|debug-cat|prof-m|rakudo-MOAR|niecza|rakudo-moar|nqp-jvm|pugs|rPn|rm|r-jvm|sj|nPr|nrP|n|r|perl6|j|p56|nqp-q|Pnr|nom|star|rn|rj|P|Prn|sm|nqp|r-j|rnP|m|nqp-m|nr|r-m|nqp-mvm|p6|M|rakudo)(?^::\s(?!OUTPUT)) $perl6_program>

[11:54] <psch> ...should probably prune that somewhat eventually

[11:55] <tbrowder> psch: thanks!

[11:55] <tbrowder> nqp-moarvm: my $s := ''; my $b := nqp::isstr($s); say($b);

[11:55] <camelia> nqp-moarvm: OUTPUT«1␤»

[11:56] <tbrowder> cool--as expected

[12:02] <Frameless> p5-to-p6: for (1..10) { say $_ }

[12:02] <camelia> p5-to-p6 : OUTPUT«# Do not edit this file - Generated by Perlito5 9.021␤␤for 1 .. 10 -> $_ {␤    say($_)␤}␤»

[12:10] <Frameless> [2016.07.01 release] I lied about in 13 hours. I'll start doing it now

[12:11] <timotimo> oh wow

[12:11] <timotimo> that's quite a bit earlier

[12:11] <Frameless> Why? Is that a problem?

[12:12] <dalek> nqp: a9aaaf9 | (Pawel Murias)++ | src/vm/js/nqp-runtime/package.json:

[12:12] <dalek> nqp: [js] Update the npm package issue tracker url.

[12:12] <dalek> nqp: review: https://github.com/perl6/nqp/commit/a9aaaf938f

[12:12] <dalek> nqp: e8e0146 | (Pawel Murias)++ | src/vm/js/HLL/Backend.nqp:

[12:12] <dalek> nqp: [js] Make run_profiled use v8-profiler.

[12:12] <dalek> nqp:

[12:12] <dalek> nqp: This should make --profile and --profile-compile actually write CPU profiling info.

[12:12] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e8e0146ab0

[12:12] <dalek> nqp: 87733e5 | (Pawel Murias)++ | src/vm/js/HLL/Backend.nqp:

[12:12] <dalek> nqp: [js] Delete the CPU profile after it has been writen.

[12:12] <dalek> nqp: review: https://github.com/perl6/nqp/commit/87733e5553

[12:14] <timotimo> not a problem at all!

[12:14] <timotimo> go right ahead :)

[12:14] <Frameless> \o/

[12:22] <Frameless> Another ticket where I've seen a reply on the mailing list, but the reply did not make it to the ticket itself (and potentially neither to the reporter) https://rt.perl.org/Ticket/Display.html?id=128632

[12:37] <travis-ci> Rakudo build errored. niner 'Merge pull request #811 from dwarring/sha1-checksums

[12:37] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/145516459 https://github.com/rakudo/rakudo/compare/328c2d6d80d6...21cfe2a8a27c

[12:39] <dalek> rakudo/nom: c07b2d7 | (Zoffix Znet)++ | docs/ChangeLog:

[12:39] <dalek> rakudo/nom: Populate ChangeLog for 2016.07.01 release

[12:39] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c07b2d7903

[12:39] <timotimo> ^- travis failure seems meaningless

[12:42] <Frameless> Zoffix-- # forgot to git push changes to the Rakudo Rele6sr app :(

[12:47] <perlpilot> What is the "Rakudo Rele6sr app"?

[12:48] <Frameless> perlpilot: a helper app to release Rakudo: http://i.imgur.com/eQJ7S8o.png    https://github.com/zoffixznet/Rele6sr

[12:49] <Frameless> perlpilot: right now, aside from the RT queue reviewer, not much more than a set of instructions you can check off as completed, but I plan to automate as much stuff as possible. Including spinning up Google Compute Engine instances to do stresstesting and stuff :)

[12:49] <perlpilot> very neat

[12:50] <nine> Frameless: FWIW the point release could have been avoided if the release guide included a make DESTDIR test

[12:50] <gfldex> lizmat: that was the week that was for the docs https://gist.github.com/gfldex/9acb0265491702c5eecf31ad8766ef3a

[12:50] <nine> Of course, once we add such a test, it probably won't ever be needed anymore...

[12:51] <lizmat> gfldex++

[12:51] <Frameless> nine: I actually did a test by running make DESTDIR and it seemed to work fine on my Debian ¯\_(ツ)_/¯

[12:51] <lizmat> gfldex: "2 new traps" , what does that mean ?

[12:52] <Frameless> I'll look into cooking up some sort of automated test for that area this month

[12:52] <gfldex> https://docs.perl6.org/language/traps

[12:52] <nine> Frameless: so it escaped both our tests :/

[12:53] <lizmat> gfldex: ah, ok  :-)

[12:53] <gfldex> lizmat: it would be nice if you could link to that section

[12:53] <lizmat> yup, will do

[12:54] <gfldex> lizmat: and to https://github.com/perl6/doc/blob/master/CONTRIBUTING.md

[12:55] <gfldex> lizmat: also, i had 2 blögpost last week

[12:56] <lizmat> gfldex: ah?    urls?

[12:57] <Frameless> gfldex: if you have an Atom/RSS feed, may be worth adding your blog to perl6.org recent blogs panel. Just add the metadata here: https://github.com/stmuk/pl6anet.org/blob/master/perlanetrc#L77

[12:58] <timotimo> i wonder if we should teach pl6anet to have a little checkbox for "hide perl6weekly", as it tends to drown out all slower blogs

[12:58] <gfldex> please don't

[12:58] <timotimo> OK

[13:00] <dalek> rakudo/nom: b9e9743 | (Zoffix Znet)++ | docs/release_guide.pod:

[13:00] <dalek> rakudo/nom: Clarify conditions for running tools/contributors.p6

[13:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b9e9743271

[13:01] <Frameless> timotimo: seems an overkill, considering "view more" button is just a click away.

[13:01] <timotimo> and how about a clearer division between individual posts, and perhaps a little help navigating between posts?

[13:02] <lizmat> what I would like to know is how do I get it to only post a summary in pl6anet.org, instead of the whole article ?

[13:03] <Frameless> TBH, I rather http://pl6anet.org/ did not show entire bodies of blogs. I'd imagine some folks write for ad revenue or at least would like comments on their blogs. This is essentially equivalent to stealing their content :/

[13:04] <Frameless> OTOH, that seems to be a feature of the blogs themselves. I don't see bodies of my blogs.

[13:04] <lizmat> Frameless: so how do you do it for your blogs?  Did you manipulate the RSS feed for that ?

[13:05] <timotimo> right, it just comes down to what the blog software puts into the rss feed

[13:06] <Frameless> lizmat: I wrote the feed by hand: https://github.com/zoffixznet/perl6.party/blob/master/app.pl#L65 https://github.com/zoffixznet/perl6.party/blob/master/templates/feed.xml.ep

[13:06] <Frameless> And I guess I just did not include whatever wordpress includes to put all of content in. http://perl6.party/feed

[13:06] <lizmat> hmmm...  ok, lemme see if I can do something like that in wordpress

[13:07] <gfldex> https://codex.wordpress.org/WordPress_Feeds#Finding_Your_Feed_URL

[13:11] <gfldex> lizmat: it's 3 traps now

[13:12] <dalek> rakudo/nom: 3ae7477 | (Zoffix Znet)++ | tools/create-release-announcement.pl:

[13:12] <dalek> rakudo/nom: Remove profanity in error message.

[13:12] <dalek> rakudo/nom:

[13:12] <dalek> rakudo/nom: Seems unprofessional :/

[13:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3ae7477fb9

[13:13] <gfldex> `fail "shit"` actually made me giggle

[13:13] <dalek> rakudo/nom: 9ef6f6e | coke++ | docs/release_guide.pod:

[13:13] <dalek> rakudo/nom: fix typo

[13:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9ef6f6e34c

[13:13] <mst> gfldex: same

[13:14] <mst> however, one can make error messages funny, non-profane, *and* informative

[13:14] <mst> fail "Couldn't find \d\d\d\d-\d\d-\d\d release date - what the flying fornication am I supposed to do here?"

[13:14] <mst> Zoffix: ^^ proposed improvement :P

[13:32] <dalek> rakudo/nom: 53ff95a | (Zoffix Znet)++ | docs/announce/2016.07.1.md:

[13:32] <dalek> rakudo/nom: Prepare 2016.07.1 point release announcement

[13:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/53ff95aa1a

[13:32] <dalek> rakudo/nom: 2595ff3 | (Zoffix Znet)++ | docs/ChangeLog:

[13:32] <dalek> rakudo/nom: Remove extraneous zero from 2016.07.1 release

[13:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2595ff3f12

[13:33] <travis-ci> Rakudo build passed. Zoffix Znet 'Populate ChangeLog for 2016.07.01 release'

[13:33] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/145528004 https://github.com/rakudo/rakudo/compare/21cfe2a8a27c...c07b2d790312

[13:33] <Frameless> 07.md is sorted later than 07.01.md on GitHub, which now irks me :(

[13:35] <timotimo> urgh

[13:46] <dalek> rakudo/nom: f97e227 | (Zoffix Znet)++ | docs/release_guide.pod:

[13:46] <dalek> rakudo/nom: List 2016.07.1 release in past releases list

[13:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f97e227ff2

[13:47] <dalek> rakudo/nom: 04933fd | (Zoffix Znet)++ | VERSION:

[13:47] <dalek> rakudo/nom: [release] bump VERSION

[13:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/04933fd86d

[14:02] <dalek> rakudo/nom: 0e20a34 | (Zoffix Znet)++ | docs/release_guide.pod:

[14:02] <dalek> rakudo/nom: Use https instead of git URL in instructions

[14:02] <dalek> rakudo/nom:

[14:02] <dalek> rakudo/nom: git URL fails on half of my boxes, but https always works

[14:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0e20a344ee

[14:02] <dalek> rakudo/nom: 477b641 | (Zoffix Znet)++ | docs/release_guide.pod:

[14:02] <dalek> rakudo/nom: Clarify stresstest instructions assume t/spec already has roast

[14:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/477b6410fa

[14:14] <travis-ci> Rakudo build passed. Zoffix Znet 'Clarify conditions for running tools/contributors.p6'

[14:14] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/145533160 https://github.com/rakudo/rakudo/compare/c07b2d790312...b9e974327110

[14:15] <dalek> rakudo/nom: 664af92 | (Zoffix Znet)++ | docs/release_guide.pod:

[14:15] <dalek> rakudo/nom: Convert incorrectly used Markdown markup to Pod

[14:15] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/664af92fba

[14:28] <Frameless> How come we package 6.c-errata roast with Rakudo releases instead of latest? HEAD has better coverage, so it'd make sense to include that instead.

[14:29] <timotimo> because that's where we add new features

[14:29] <timotimo> i mean, HEAD is

[14:29] <Frameless> Ah

[14:29] <timotimo> and we're guaranteeing compatibility with 6.c

[14:35] <lizmat> m: my @a is List = 1,2,3; dd @a   # didn't this use to work at one time ?

[14:35] <camelia> rakudo-moar 664af9: OUTPUT«()␤»

[14:35] <gfldex> you could ask bisectable

[14:37] <lizmat> m: my @a is List; @a.push(42)  # I mean, it *is* a List

[14:37] <camelia> rakudo-moar 664af9: OUTPUT«Cannot call 'push' on an immutable 'List'␤  in block <unit> at <tmp> line 1␤␤»

[14:37] <lizmat> afk&

[14:37] <Frameless> bisect: my @a is List = 1,2,3; dd @a

[14:37] <bisectable> Frameless: On both starting points the exit code is 0 and the output is identical as well

[14:37] <bisectable> Frameless: Output on both points: ()

[14:38] <lizmat> well, guess it didn't ever  :-)

[14:38] <lizmat> Frameless++

[14:38] <timotimo> m: my @a is List; @a.ASSIGN((1, 2, 3, 4)); dd @a

[14:38] <camelia> rakudo-moar 664af9: OUTPUT«Method 'ASSIGN' not found for invocant of class 'List'␤  in block <unit> at <tmp> line 1␤␤»

[14:38] <timotimo> what's that spelled again? STORE?

[14:38] <timotimo> m: my @a is List; @a.STORE((1, 2, 3, 4)); dd @a

[14:38] <camelia> rakudo-moar 664af9: OUTPUT«()␤»

[14:38] <timotimo> oh, lists are immutable, of course

[14:38] <lizmat> really afk&

[14:39] <lizmat> m: my %h is Map = a => 42; dd %h  # it does work with Hash/Map

[14:39] <camelia> rakudo-moar 664af9: OUTPUT«Map.new((:a(42)))␤»

[14:39] <lizmat> really really afk&

[14:44] <Frameless> Can someone explain what perl Configure.pl --prefix=DIR and make DESTDIR=DIR do? I've used the same dir for both and I got... a mess

[14:45] <timotimo> using the same value for both seems like a recipe for disaster

[14:46] <timotimo> after all, the option wouldn't exist if you could/should just pass the same path

[14:47] <Frameless> Right. I don't what what they do. If I just use DESTDIR, then it creates /home/cpan/CPANPRC/release/rakudo-2017.07.1/ directory in the directory I specify in DESTDIR

[14:47] <nine> Frameless: --prefix is where the files should be once they are installed and ready for use. DESTDIR is the temporary place where generated files are stored for packaging

[14:47] <nine> Frameless: common example would be --prefix=/usr  and DESTDIR=/tmp/buildroot

[14:48] <Frameless> ok, lemme try that

[14:49] <nine> The whole point is to be able to create e.g. an rpm package for a system wide installation with the whole build run by an unpriviledged user

[14:55] <travis-ci> Rakudo build passed. Zoffix Znet 'Remove profanity in error message.

[14:55] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/145535732 https://github.com/rakudo/rakudo/compare/b9e974327110...3ae7477fb942

[14:58] <hoelzro> whoops =/

[14:58] <timotimo> fucking shit.

[14:58] <hoelzro> that's my mistake - I should really have a commit filter for that kind of thing

[14:59] <hoelzro> Zoffix++ for fixing that

[14:59] <timotimo> :)

[14:59] <Frameless> :)

[14:59] <timotimo> didn't know you're such a potty-mouth! :P

[15:00] <dalek> nqp: 735f56d | (Pawel Murias)++ | src/vm/js/HLL/Backend.nqp:

[15:00] <dalek> nqp: [js] Print out a better error message when v8-profiler is not installed.

[15:00] <dalek> nqp: review: https://github.com/perl6/nqp/commit/735f56d520

[15:00] <dalek> nqp: f882309 | (Pawel Murias)++ | src/vm/js/nqp-runtime/reprs.js:

[15:00] <dalek> nqp: [js] Get rid of leftover debugging code.

[15:00] <dalek> nqp: review: https://github.com/perl6/nqp/commit/f88230979f

[15:03] <hoelzro> I see mention of a LINK phaser in the design docs, but no mention of it in Rakudo itself - is it NYI, or something that doesn't belong in the spec?

[15:05] <Frameless> So I'm looking at output listed in https://rt.perl.org/Ticket/Display.html?id=128652 and mine doesn't match it. It doesn't have any mention of the modules. How come? https://gist.github.com/zoffixznet/0876525efa6185cb6747494222af2e50

[15:05] <Frameless> It's probably why I didn't notice anything wrong during 2016.07 release.

[15:07] <[Coke]> hoelzro: that ain't the spec.

[15:08] <perlpilot> hoelzro: That's a really good question ...  for TimToady  (he s/FINAL/LINK/ there back in 2014)

[15:08] <[Coke]> We don't have anyone to answer this, really, but I think a better way to phrase the question is " do we want this in some version of six post c?"

[15:08] <[Coke]> for our RTs on NYI things, someone needs to decide the same thing: is this NYI or an RFC?

[15:10] * hoelzro nods

[15:10] <[Coke]> do we have anyone who can cut a new R* for win64?

[15:12] <Frameless> I don't know the process, but I do possess a win64...

[15:13] <hoelzro> anyway, I ask because I made note a while ago to add it to the pygments lexer

[15:14] <hoelzro> and I'm checking those notes against Rakudo and the specs

[15:18] <nine> Frameless: the additional output appears when you set the RAKUDO_LOG_PRECOMP env var

[15:18] <Frameless> Thanks.

[15:23] <[Coke]> anyone here have access to edit the ticket redirects on rakudo.org?

[15:30] <Frameless> [Coke]: yeah

[15:31] <AlexDaniel> commit: 2015.10 my @a is List = 1,2,3; dd @a

[15:31] <committable> AlexDaniel: https://gist.github.com/0cd1e0e63c869e4911173388e06f6362

[15:31] * [Coke] opens #128664 for other rakudo.org stuff.

[15:31] <AlexDaniel> commit: 2015.12 my @a is List = 1,2,3; dd @a

[15:31] <committable> AlexDaniel: |«2015.12»: ()

[15:31] <AlexDaniel> bisect: good=2015.10 my @a is List = 1,2,3; dd @a # just for fun

[15:32] <bisectable> AlexDaniel: Exit code on a 'good' revision is 1 (which is bad), bisecting with inverted logic

[15:32] <bisectable> AlexDaniel: bisect log: https://gist.github.com/9e834fe52ef43f78b5d4c9648bbbfc3b

[15:32] <bisectable> AlexDaniel: (2015-11-18) https://github.com/rakudo/rakudo/commit/29cc3c2

[15:34] <AlexDaniel> commit: 2015.11 my @a is List = 1,2,3; dd @a

[15:34] <committable> AlexDaniel: |«2015.11»: List $var = $()

[15:34] <AlexDaniel> bisect: good=2015.11 bad=2015.12 my @a is List = 1,2,3; dd @a # just for fun

[15:35] <bisectable> AlexDaniel: Exit code is 0 on both starting points, bisecting by using the output

[15:35] <bisectable> AlexDaniel: bisect log: https://gist.github.com/b6c7ca5dfb2552dd72325634a18616fa

[15:35] <bisectable> AlexDaniel: (2015-12-23) https://github.com/rakudo/rakudo/commit/9308de3

[15:35] <Frameless> Oh shit

[15:35] <Frameless> Oh.. no shit. Just spurious newline :)

[15:36] <travis-ci> Rakudo build passed. Will "Coke" Coleda 'fix typo'

[15:36] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/145536045 https://github.com/rakudo/rakudo/compare/3ae7477fb942...9ef6f6e34cd4

[15:36] <AlexDaniel> lizmat: “didn't this use to work at one time ?” – you are right, look ↑

[15:37] <Frameless> [Coke]: I changed /rt/open-all to Public, but I'm still getting a CSFR error

[15:38] <[Coke]> (see /msg window)

[15:39] <[Coke]> bumped it back to the rt bugadmins. Thanks!

[15:40] <Frameless> [Coke]: I think you have access to edit those redirects too. They're in public_html/.htaccess

[15:40] * Frameless celebrates with the appropriate amount of fun.

[15:40] <[Coke]> Frameless: in future, I'd keep the point releases as "the previous release with just the bugfix" rather than "everything that snuck in"

[15:41] <[Coke]> Frameless: I ... might have access to that, then. Thanks.

[15:41] <Frameless> .tell stmuk Rakudo 2016.07.1 shipped out

[15:41] <yoleaux2> Frameless: I'll pass your message to stmuk.

[15:41] <Frameless> [Coke]: OK. Noted.

[15:41] <[Coke]> (release) ... crap. meant to lead with: "Thank you very much for doing the thankless job of releases!"

[15:41] <Frameless> :)

[15:41] <[Coke]> I, especially, really appreciate you stepping up to do these.

[15:46] <Frameless> Hm. I think all my statistics on running on 24-30 core machines were all wrong. I notice Google is still not charging me ($300 free trial) and in description it says the free trial boxes use at most 8 cores :o

[15:49] <Frameless> Though I see no way to upgrade to non-free version, so maybe I'm wrong that it's using just 8 cores :/

[15:57] <stmuk> Frameless++

[15:57] <yoleaux2> 15:41Z <Frameless> stmuk: Rakudo 2016.07.1 shipped out

[16:10] <dalek> star: ffa0220 | (Steve Mynott)++ | tools/star/Makefile:

[16:10] <dalek> star: bump rakudo version

[16:10] <dalek> star: review: https://github.com/rakudo/star/commit/ffa0220f8d

[16:18] <travis-ci> Rakudo build passed. Zoffix Znet 'Remove extraneous zero from 2016.07.1 release'

[16:18] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/145540699 https://github.com/rakudo/rakudo/compare/9ef6f6e34cd4...2595ff3f1268

[16:37] <dalek> star: dd94806 | (Steve Mynott)++ | modules/doc:

[16:37] <dalek> star: bump doc submodule

[16:37] <dalek> star: review: https://github.com/rakudo/star/commit/dd94806141

[16:41] <dalek> rakudo/nom: 18455a5 | (Zoffix Znet)++ | docs/release_guide.pod:

[16:41] <dalek> rakudo/nom: Fix typo

[16:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/18455a5f23

[16:42] <dalek> star: e02930b | (Steve Mynott)++ | docs/announce/2016.07.md:

[16:42] <dalek> star: more changes in announce

[16:42] <dalek> star: review: https://github.com/rakudo/star/commit/e02930bf33

[16:44] <Frameless> stmuk: s/none-multi/non-multi/; in announcement

[16:44] <Frameless> That's left-over from a typo in Rakudo's ChangeLog

[16:44] <timotimo> thank you :)

[16:46] <dalek> star: a244d87 | (Steve Mynott)++ | docs/announce/2016.07.md:

[16:46] <dalek> star: correct typo to make timotimo happy

[16:46] <dalek> star: review: https://github.com/rakudo/star/commit/a244d87c7e

[16:46] <timotimo> <3

[18:14] <gfldex> Pod::To::HTML has be fixed to render S26 (maybe even correctly). I do not know where, when, how and by whom it a needs to updated. If you do please wave with both hands.

[18:22] <stmuk> I'm seeing test failures with 07.1

[18:23] <stmuk> t/spec/S17-supply/syntax.t & t/spec/S32-io/IO-Socket-Async.t

[18:24] <[Coke]> stmuk: S17 are flappy

[18:24] <[Coke]> try running them by hand?

[18:24] <hoelzro> I think both of those are flappers

[18:25] * gfldex .oO( Heisentest )

[18:32] <[Coke]> Anyone have suggestions on https://github.com/perl6/doc/pull/714 ? looks like some people need a PERL6LIB set, but others don't.

[18:34] <stmuk> oh they pass on their own

[18:37] <Frameless> gfldex: assuming I've done things right, it now has been updated

[18:38] <gfldex> Frameless: looks like it will need a push to roast to get updated

[18:39] <Frameless> roast? :/

[18:39] <gfldex> or mu

[18:41] <gfldex> Frameless: see https://github.com/perl6/mu/blob/master/util/update-design.perl6.org.sh#L26

[18:46] <dalek> roast: 67794d0 | (Zoffix Znet)++ | S02-types/bool.t:

[18:46] <dalek> roast: Remove trailing whitespace

[18:46] <dalek> roast: review: https://github.com/perl6/roast/commit/67794d0443

[18:46] <Frameless> There

[18:51] <nine> OMG

[18:51] * nine frowns at the horrors of code in p6doc

[18:54] <Frameless> gfldex: this means everything worked, right? http://design.perl6.org/S26.html

[18:55] <lucasb_> Frameless: are you Zoffix, right? thanks for the releases!

[18:56] <Frameless> .oO( The real question is... is Zoffix Zoffix? :o )

[18:57] <lucasb_> this last roast commit "Remove trailing whitespace", it actually removed an significant plus sign.

[18:57] <Frameless> huh

[18:57] <lucasb_> it's just a comment, I know, but it was talking about the iteraction with "+"

[18:58] <Frameless> I guess `find . -name \* -exec sed -i 's/\s+$//g' {} \;` doesn't do what I think it should :P

[18:58] <gfldex> Frameless: looks good

[18:58] <lucasb_> maybe sed uses '\s\+' ?

[18:58] <dalek> roast: e1a233f | (Zoffix Znet)++ | S02-types/bool.t:

[18:58] <dalek> roast: Revert "Remove trailing whitespace"

[18:58] <dalek> roast:

[18:58] <dalek> roast: This reverts commit 67794d0443eff81a85ecf5275ebc6c24bbbcfbee.

[18:58] <dalek> roast: review: https://github.com/perl6/roast/commit/e1a233ff11

[18:59] <Frameless> gfldex++ sweet. Thanks for fixing Pod::To::HTML

[19:00] <Frameless> lucasb_++ # reviewing commits :)

[19:00] <lucasb_> Frameless: thank you for fixing :)

[19:01] <Frameless> Zoffix fixed it, actually. I have him locked in the basement. Doing my bidding. Muahaha

[19:02] <stmuk> http://pl6anet.org/drop/rakudo-star-2016.07-RC1.tar.gz

[19:09] * stmuk pretends to have nothing to do with p6doc

[19:09] <Frameless> :)

[19:12] * nine feels like re-inventing the CURI repository format just to demonstrate how p6doc is full of poking around in internals it should never touch.

[19:13] <timotimo> hehehe

[19:13] <stmuk> re-re-inventing?

[19:17] * stmuk wonders if nine has a particular sub in mind? :)

[19:20] <nine> old-locate-curli-module, locate-curli-module, list-installed, search-paths

[19:22] <stmuk> oh all of it then! well at least mine were shorter!

[19:26] * nine is now implementing CompUnit::Repository::Installation::installed as there seems to be demand for it

[19:27] <stmuk> list-installed() made my head hurt

[19:27] <stmuk> nine++

[19:27] <nine> So why has no one of the involved ever asked for installed() or the rest of the API?

[19:28] <nine> You wouldn't need list-installed for most use cases if you just used .resolve()

[19:32] * lizmat starts on the P6W

[19:35] <[Coke]> nine: the htmlify stuff was added basically to have a prayer of finishing a doc build before the heat death of the universe. go easy on us. :)

[19:35] <[Coke]> I'm happy to patch it however you suggest. (up to, and sadly including, ripping it out.)

[19:37] <stmuk> [Coke]: it's p6doc not htmlify and p6doc has had a rather chequered history

[19:38] <stmuk> its a old script which has just been hacked up to continue working

[19:38] <nine> ugexe: which of the Distribution roles/classes is meant for being returned from CURI.installed()? I.e. which will allow for accessing the stored files?

[21:30] <lizmat> and another Perl 6 weekly hits the Net: https://p6weekly.wordpress.com/2016/07/18/2016-29-the-zoffix-has-landed/

[21:30] <hoelzro> lizmat++

[22:12] <ugexe> list-installed works on rakudos before .resolve landed

[22:25] <lizmat> good night, #perl6-dev
