[00:38] <dalek> rakudo/nom: 0a90a5e | ugexe++ | src/core/CompUnit/Repository/Installation.pm:

[00:38] <dalek> rakudo/nom: Cleanup short-name folders when empty

[00:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0a90a5eca4

[00:38] <dalek> rakudo/nom: 88ceabc | (Zoffix Znet)++ | src/core/CompUnit/Repository/Installation.pm:

[00:38] <dalek> rakudo/nom: Merge pull request #860 from ugexe/patch-11

[00:38] <dalek> rakudo/nom:

[00:38] <dalek> rakudo/nom: Cleanup short-name folders when empty

[00:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/88ceabc80d

[00:39] <ugexe> $dir.rmdir unless $dir.dir; # dir dirdir dir dirdirdirdir dir dirddiridir

[00:41] <japhb> .oO( Dear Dr. Deer, ... )

[08:26] <TheLemonMan> awwaiid, I think RT#129179 is related to your REPL cleanup, you've removed the CATCH block and when repl-eval now throws it just never comes back to the repl

[08:26] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=129179

[11:59] <[Tux]> This is Rakudo version 2016.08.1-75-g88ceabc built on MoarVM version 2016.08

[11:59] <[Tux]> csv-ip5xs       10.634

[11:59] <[Tux]> test            15.274

[11:59] <[Tux]> test-t           7.435

[11:59] <[Tux]> csv-parser      16.421

[12:00] <dalek> nqp: 543cf5c | (Pawel Murias)++ | src/vm/js/ (2 files):

[12:00] <dalek> nqp: [js] Make getlexouter also find variables from outside the chunk of code we are compiling.

[12:00] <dalek> nqp: review: https://github.com/perl6/nqp/commit/543cf5c7a0

[12:00] <dalek> nqp: c59e5a0 | (Pawel Murias)++ | src/vm/js/Compiler.nqp:

[12:00] <dalek> nqp: [js] Implement contvar lexicals.

[12:00] <dalek> nqp: review: https://github.com/perl6/nqp/commit/c59e5a0c13

[12:00] <dalek> nqp: 881b00b | (Pawel Murias)++ | t/qast/01-qast.t:

[12:00] <dalek> nqp: Test contvar locals.

[12:00] <dalek> nqp: review: https://github.com/perl6/nqp/commit/881b00bb6a

[12:00] <dalek> nqp: 89f83a4 | (Pawel Murias)++ | src/vm/js/Compiler.nqp:

[12:00] <dalek> nqp: [js] Fix syntax error.

[12:00] <dalek> nqp: review: https://github.com/perl6/nqp/commit/89f83a44e1

[12:01] <dalek> Heuristic branch merge: pushed 1000 commits to rakudo/js by pmurias

[12:06] <lizmat> pmurias: 1000 ???

[12:06] <lizmat> wow

[12:06] <timotimo> what a nice round number

[12:07] <lizmat> one wonders :-)

[12:29] <pmurias> lizmat: I have updated  rakudo/js with new commits from master, it seems people have been busy working on rakudo :)

[12:33] <dalek> rakudo/nom: a54e5e7 | (Zoffix Znet)++ | docs/ChangeLog:

[12:33] <dalek> rakudo/nom: Add 2016.08.1

[12:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a54e5e7435

[12:34] <dalek> rakudo/nom: a75a714 | (Zoffix Znet)++ | docs/ChangeLog:

[12:34] <dalek> rakudo/nom: Start blank 2016.09 section

[12:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a75a714cc4

[12:35] <dalek> rakudo/nom: 42e9d7c | (Zoffix Znet)++ | docs/ChangeLog:

[12:35] <dalek> rakudo/nom: Fix formatting

[12:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/42e9d7cfaf

[13:18] <TheLemonMan> so, the compiler decides that a MAST node with op 'die_s' and a SVal is nop-d out by the compiler

[13:20] <TheLemonMan> and...that sentence doesn't make any sense heh

[13:20] <TheLemonMan> so, the compiler decided that a MAST node with op 'die_s' and a SVal has to be translated into a 'nop'

[13:21] <TheLemonMan> with no warning :D cue hours of hair-pulling (and recompiling rakudo)

[13:45] <TimToady> was it dead code?

[13:46] <TheLemonMan> nope

[13:48] <TimToady> was there a try {} around it?  or a CATCH { default {} } in the same scope?

[13:48] <TimToady> not that I think our optimizer is quite *that* smart...

[13:49] <TimToady> really sounds more like a bug; would be good to have a small test case

[13:49] <TimToady> but if it's one of those subtle buffer boundary things, could just evaporate when you try to reduce it

[13:50] <TimToady> (not that MAST should be doing anything with buffers, at last not until something is serialized)

[13:50] <TimToady> *least

[13:51] <TimToady> jnthn: another datapoint, exempting 'role' from the lexpad unification doesn't fix the run() hang

[13:53] <TheLemonMan> it was like this 'if_i reg1, label1; die ...; label1: other ops...' and reg1 came from a method call so I guess we can't blame the constant-folding phase

[14:00] * TimToady has never got down into the codegen phase much, except to patch a thing or two

[14:01] <TheLemonMan> it's pretty nice if you don't take into account that every recompilation takes ~2m on this box

[14:08] <hoelzro> awwaiid, TheLemonMan: I tracked down RT#129179 to this commit: 85cbb6ddbfb7b32788abff2ed3288c1eae2abd03

[14:08] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=129179

[14:11] <TheLemonMan> hoelzro, yeah, by re-introducing the CATCH block it works fine again

[14:15] <travis-ci> Rakudo build errored. Zoffix Znet 'Start blank 2016.09 section'

[14:15] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/157299636 https://github.com/rakudo/rakudo/compare/a54e5e743573...a75a714cc45e

[14:15] <buggable> [travis build above] ✓ All failures are due to timeout (1), missing build log (0), or GitHub connectivity (0)

[14:42] <travis-ci> Rakudo build failed. Zoffix Znet 'Fix formatting'

[14:42] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/157299730 https://github.com/rakudo/rakudo/compare/a75a714cc45e...42e9d7cfaf36

[14:42] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually

[14:56] <hoelzro> TheLemonMan++

[15:22] <TheLemonMan> I finally managed to finish this damn PR! o/

[15:52] <Zoffix> https://travis-ci.org/rakudo/rakudo/builds/157299730

[15:52] <buggable> [travis build above] ✓ All failures are due to timeout (0), missing build log (0), or GitHub connectivity (1)

[15:52] <Zoffix> buggable, botsnack

[15:52] <synopsebot6> om nom nom

[15:52] <buggable> Zoffix, om nom nom nom

[16:11] <TimToady> jnthn: also, conditionalizing the <.finishpad> doesn't change the hang

[16:13] * TimToady wonders which parts of token comp_unit are not idempotent...

[16:19] <TimToady> well, obviously the $*begin_compunit stuff is not, unless we want to allow a unit declaration inside a unit declaration :)

[16:21] <TimToady> m: use MONKEY; say EVAL 'unit class Foo; has $.bar'

[16:21] <camelia> rakudo-moar 42e9d7: OUTPUT«(Foo)␤»

[16:24] <TimToady> well, most of the sekrit soss for UNIT is probably in the action routines, so we'd have to prevent the outer reduction from over-riding the inner one, if we just call comp_unit again

[16:47] <awwaiid> rt broken :(

[16:51] <Zoffix> awwaiid, the REPL ticket was about errors kicking out of REPL....     try typing this on bleed:      sub }

[16:54] <Zoffix> m: sub () returns Str(Int) { 42 }().WHAT.say

[16:54] <camelia> rakudo-moar 42e9d7: OUTPUT«Type check failed for return value; expected Str(Int) but got Int (42)␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:54] <Zoffix> m: sub (--> Str()) { 42 }().WHAT.say

[16:54] <camelia> rakudo-moar 42e9d7: OUTPUT«Type check failed for return value; expected Str(Any) but got Int (42)␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:54] <dalek> rakudo/nom: b508576 | LemonBoy++ | src/vm/moar/Perl6/Ops.nqp:

[16:54] <dalek> rakudo/nom: Add support for coercing return types.

[16:54] <dalek> rakudo/nom:

[16:54] <dalek> rakudo/nom: RT#128964

[16:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b508576fc5

[16:54] <dalek> rakudo/nom: 94e3b29 | LemonBoy++ | src/vm/moar/Perl6/Ops.nqp:

[16:54] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128964

[16:54] <dalek> rakudo/nom: Remove an useless register allocation.

[16:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/94e3b2984e

[16:55] <dalek> rakudo/nom: 4d5abda | (Zoffix Znet)++ | src/vm/moar/Perl6/Ops.nqp:

[16:55] <dalek> rakudo/nom: Merge pull request #861 from LemonBoy/return-type-coercion

[16:55] <dalek> rakudo/nom:

[16:55] <TheLemonMan> we need some tests for that

[16:58] <TheLemonMan> m: sub x(uint32(Int) $y) { ... }; x(42);

[16:58] <camelia> rakudo-moar 42e9d7: OUTPUT«Method 'uint32' not found for invocant of class 'Int'␤  in sub x at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:01] <TheLemonMan> weird, it should fail here https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Metamodel/BOOTSTRAP.nqp#L375

[17:20] <awwaiid> hoelzro: ah great, thanks. I'll fix and add a test. I still want to avoid adding the CATCH back there if it breaks the other stuff

[17:21] <awwaiid> thanks TheLemonMan for the REPL bug report :)

[17:49] <Zoffix> m: use Test; sub t (--> Str()){}; isa-ok &t.returns, Str(Any), '.returns() gives correct value';

[17:49] <camelia> rakudo-moar 4d5abd: OUTPUT«Too many positionals passed; expected 2 arguments but got 3␤  in sub isa-ok at /home/camelia/rakudo-m-inst-2/share/perl6/sources/C712FE6969F786C9380D643DF17E85D06868219E (Test) line 377␤  in block <unit> at <tmp> line 1␤␤»

[17:49] <travis-ci> Rakudo build errored. Zoffix Znet 'Merge pull request #861 from LemonBoy/return-type-coercion

[17:49] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/157331785 https://github.com/rakudo/rakudo/compare/42e9d7cfaf36...4d5abda7fb46

[17:49] <buggable> [travis build above] ✓ All failures are due to timeout (1), missing build log (0), or GitHub connectivity (0)

[17:50] <Zoffix> m: use Test; sub t (--> Str()){}; isa-ok &t.returns, Str(Any);

[17:50] <camelia> rakudo-moar 4d5abd: OUTPUT«Too many positionals passed; expected 2 arguments but got 3␤  in sub isa-ok at /home/camelia/rakudo-m-inst-2/share/perl6/sources/C712FE6969F786C9380D643DF17E85D06868219E (Test) line 377␤  in block <unit> at <tmp> line 1␤␤»

[17:50] <Zoffix> heh

[17:51] <Zoffix> m: sub t (--> Str()){}; say &t.returns.isa( Str(Any) )

[17:51] <camelia> rakudo-moar 4d5abd: OUTPUT«Too many positionals passed; expected 2 arguments but got 3␤  in block <unit> at <tmp> line 1␤␤»

[17:51] <Zoffix> m: use Test; sub t (--> Str()){}; say &t.returns ~~ Str(Any);

[17:51] <camelia> rakudo-moar 4d5abd: OUTPUT«True␤»

[17:51] <Zoffix> m: use Test; sub t (--> Str()){}; say &t.returns eqv Str(Any);

[17:51] <camelia> rakudo-moar 4d5abd: OUTPUT«True␤»

[17:51] <Zoffix> m: use Test; sub t (--> Str()){}; say is-deeply &t.returns, Str(Any);

[17:51] <camelia> rakudo-moar 4d5abd: OUTPUT«ok 1 - ␤True␤»

[17:59] <Zoffix> awwaiid, RT is back

[18:03] <dalek> roast: dedfdf9 | (Zoffix Znet)++ | S06-signature/definite-return.t:

[18:03] <dalek> roast: type coercions work in returns

[18:03] <dalek> roast:

[18:03] <dalek> roast: RT#128964

[18:03] <dalek> roast: review: https://github.com/perl6/roast/commit/dedfdf91e7

[18:03] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128964

[20:57] <awwaiid> Thanks Zoffix

[22:27] <dalek> rakudo/nom: 694b169 | (Brock Wilcox)++ | / (2 files):

[22:27] <dalek> rakudo/nom: Catch another class of compile-time errors

[22:27] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/694b16922f

[22:27] <dalek> rakudo/nom: aceb4af | (Zoffix Znet)++ | / (2 files):

[22:27] <dalek> rakudo/nom: Merge pull request #862 from awwaiid/repl-compiletime-error

[22:27] <dalek> rakudo/nom:

[22:27] <dalek> rakudo/nom: Catch another class of compile-time errors

[22:27] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/aceb4af21d

[22:34] <awwaiid> Zoffix: do those tests get run by ci? (I did run the repl one manually)

[22:34] <Zoffix> awwaiid, yup: https://github.com/rakudo/rakudo/blob/nom/.travis.yml#L14

[22:35] <Zoffix> oh wait

[22:35] <awwaiid> https://travis-ci.org/rakudo/rakudo/jobs/157362066#L957

[22:35] <awwaiid> I see SOME are run

[22:36] <Zoffix> I think `make test` doesn't run all the tests is what the issue is

[22:38] <awwaiid> https://github.com/rakudo/rakudo/blob/nom/tools/build/Makefile-Moar.in#L213 might be where this is

[22:38] <Zoffix> Just runs t/01-sanity and t/04-nativecall

[22:38] <Zoffix> ¯\_(ツ)_/¯

[22:39] <awwaiid> and lots of fails when I locally run t/02-rakudo

[22:39] <awwaiid> actually just two fails

[22:39] <awwaiid> er. no, more than two

[22:42] <Zoffix> Running prove -e './perl6' -vlr t/02-rakudo/ fails about 10 tests https://gist.github.com/zoffixznet/830f2d9a81c3be5e83477ca0f8c8e7c6

[22:42] <Zoffix> That's a couple of commits behind bleed

[23:22] <travis-ci> Rakudo build passed. Zoffix Znet 'Merge pull request #862 from awwaiid/repl-compiletime-error

[23:22] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/157372575 https://github.com/rakudo/rakudo/compare/4d5abda7fb46...aceb4af21d6a
