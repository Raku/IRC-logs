[08:46] <dalek> nqp: 4550f68 | samcv++ | src/QRegex/P6Regex/Grammar.nqp:

[08:46] <dalek> nqp: Supply a warning for using \K and instead suggest <(

[08:46] <dalek> nqp:

[08:46] <dalek> nqp: or )>

[08:46] <dalek> nqp: review: https://github.com/perl6/nqp/commit/4550f68c53

[08:46] <dalek> nqp: ef24205 | lizmat++ | src/QRegex/P6Regex/Grammar.nqp:

[08:46] <dalek> nqp: Merge pull request #329 from samcv/regexK

[08:46] <dalek> nqp:

[08:46] <dalek> nqp: P6 Regex: Supply a warning for using \K and instead suggest <( or )>

[08:46] <dalek> nqp: review: https://github.com/perl6/nqp/commit/ef24205c11

[09:18] <[TuxCM]> This is Rakudo version 2016.11-156-g0428b79af built on MoarVM version 2016.11-44-g8e24145d

[09:18] <[TuxCM]> csv-ip5xs        3.350

[09:18] <[TuxCM]> test            14.578

[09:18] <[TuxCM]> test-t           6.654

[09:18] <[TuxCM]> csv-parser      16.674

[11:03] <babydrop> samcv: that's a fatal error FWIW :)

[11:03] <babydrop> m: try '/\b/'.EVAL; say $!.^name

[11:03] <camelia> rakudo-moar 0428b7: OUTPUT«X::Obsolete␤»

[11:23] <babydrop> samcv: if you wanted to bump the nqp version in rakudo as well, to bring in your nqp change, just run `git describe` in the nqp repo and put the output into rakudo's tools/build/NQP_REVISION

[11:23] <timotimo> i always call "git describe --tags" for some reason

[11:23] <timotimo> i wonder if it's necessary

[11:24] <jnthn> iirc, only if you want to include unannotated tags

[11:24] <timotimo> i forgot the difference between those :)

[11:24] <babydrop> I think it was once, when we had that parrot tag that interfered? But that was fixed after the release (I mean 2 releases later, since I that was when I messed up the nqp tag on release :"P)_

[11:24] <samcv> babydrop, it was a fatal error before though, because unrecognized escape sequence

[11:24] <samcv> will do that

[11:24] <jnthn> An annotated tag is ref => object => commit

[11:25] <jnthn> An unannotated tag is ref => commit

[11:25] <jnthn> So an annotated one can have a message

[11:25] <babydrop> samcv: yeah, fatal error is good. I was actually prepared to argue that it should be fatal and not a warning when I just saw the title in the notification :)

[11:25] <samcv> ah

[11:25] <jnthn> For some reason they're preferred, even though the message is almost always totally worthless. :P

[11:25] <samcv> warnings you mean?

[11:26] <jnthn> samcv: If you're asking me, no I was talking about annotated tags in git :)

[11:26] <samcv> oh ok

[11:26] <timotimo> i see

[11:27] <jnthn> git tag -a 2016.11 ...hmmm, what message? "2016.11 release" :)

[11:28] <timotimo> put the complete release notes in :P

[11:28] <jnthn> :P

[11:28] <timotimo> (they can already be grabbed via some git incantation)

[11:28] <babydrop> NeuralAnomaly: stats

[11:28] <NeuralAnomaly> babydrop, [✘] Next release will be in 1 week and 2 days. Since last release, there are 51 new still-open tickets (48 unreviewed and 0 blockers) and 159 unreviewed commits. See http://perl6.fail/release/stats for details

[11:29] <babydrop> AlexDaniel: lol... just a couple of days ago I recall there being just like... 36 tickets :P

[11:29] <jnthn> Yowser, that's a lot of tickets :P

[11:29] <babydrop> AlexDaniel did a lot of quality assurance bug finding.

[11:30] <jnthn> :)

[11:36] <samcv> ok cool PR done

[11:41] <dalek> rakudo/nom: ee14067 | samcv++ | tools/build/NQP_REVISION:

[11:41] <dalek> rakudo/nom: NQP bump: Add nice error message when using \K in regex and suggest

[11:41] <dalek> rakudo/nom:

[11:41] <dalek> rakudo/nom: Using <( or )>

[11:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ee14067781

[11:41] <dalek> rakudo/nom: a987242 | (Zoffix Znet)++ | tools/build/NQP_REVISION:

[11:41] <dalek> rakudo/nom: Merge pull request #940 from samcv/nqpbump

[11:41] <dalek> rakudo/nom:

[11:41] <dalek> rakudo/nom: NQP bump: Add nice error message when using \K in regex and suggest

[11:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a98724262c

[11:41] <babydrop> samcv++

[11:42] <samcv> how often does camelia rebuild? just curious

[11:42] <samcv> does it do it on every push or on a timer?

[11:42] <jnthn> Timer; I think every 30 mins

[11:43] <babydrop> samcv: my observations suggest its a cron job set on every 30m

[12:37] <nine> It's every 20 minutes at 8, 28 and 48 minutes past the hour.

[12:44] <nine> Our ecosystem contains lots of broken modules :/

[12:47] <moritz> I'd remove those that remain broken for quite some time (like, if there are open issues about the module not working at all for more than 6 months, or so)

[13:05] * babydrop wouldn't

[13:05] <babydrop> If someone needing the module shows up, it'd be much easier for them to fix a fork than to start from scratch.,

[13:06] <babydrop> huggable: camelia :is: Camelia updates every 20m at 8, 28, and 48 minutes of the hour

[13:06] <huggable> babydrop, Added camelia as Camelia updates every 20m at 8, 28, and 48 minutes of the hour

[13:08] <[Coke]> instead of removing them, having it tied to test results for modules would be awesomer.

[13:22] <lucasb> whomever choose the minutes 8, 28 and 48 for building camelia, the OCD part of my brain wants to talk to you

[13:25] <moritz> lucasb: why is that?

[13:27] <lucasb> moritz: just a joke. personal preference for more round numbers

[13:27] <moritz> camelia used to build a lot more compiler projects (niecza, std, perlito, kp6, ...), and they all got different offsets in minutes

[13:27] <moritz> to minimize load, while maximizing the number of rebuilds for projects that changed often

[13:27] <lucasb> moritz: ok, now that's a explanation. makes sense. past explains the present :)

[13:28] <moritz> in fact there are still more rebuild jobs right now, it's just that nobody cares about them

[13:49] <dalek> rakudo/nom: 7532297 | Altai-man++ | src/core/Rakudo/Internals/VMBackedDecoder.pm:

[13:49] <dalek> rakudo/nom: Fixes #130291: https://rt.perl.org/Public/Bug/Display.html?id=130291

[13:49] <dalek> rakudo/nom:

[13:49] <dalek> rakudo/nom: The comment is removed because of https://irclog.perlgeek.de/perl6/2016-12-07#i_13698178

[13:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/75322970e8

[13:49] <dalek> rakudo/nom: 0089a55 | Altai-man++ | src/core/Rakudo/Internals/VMBackedDecoder.pm:

[13:49] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130291

[13:49] <dalek> rakudo/nom: Tabs->spaces indentation fix

[13:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0089a5514b

[13:49] <dalek> rakudo/nom: 08ccbbb | (Zoffix Znet)++ | src/core/Rakudo/Internals/VMBackedDecoder.pm:

[13:49] <dalek> rakudo/nom: Merge pull request #941 from Altai-man/empty-emit-fix

[13:49] <dalek> rakudo/nom:

[14:40] * dogbert17_ clickbaits lizmat with https://rt.perl.org/Public/Bug/Display.html?id=130294

[15:09] <dalek> rakudo/nom: 58cdfd8 | Altai-man++ | src/core/Rakudo/Internals/VMBackedDecoder.pm:

[15:09] <dalek> rakudo/nom: Simplification of LAST block

[15:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/58cdfd80b3

[15:09] <dalek> rakudo/nom: 7511b43 | lizmat++ | src/core/Rakudo/Internals/VMBackedDecoder.pm:

[15:09] <dalek> rakudo/nom: Merge pull request #942 from Altai-man/empty-emit-fix

[15:09] <dalek> rakudo/nom:

[15:09] <dalek> rakudo/nom: Simplification of LAST block

[15:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7511b432af

[15:23] <pyrimidine> re: RT#125938, I checked this morning from latest rakudo master and I still see the error, will try a fresh checkout and blow away my local installation just in case

[15:23] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=125938

[15:24] <babydrop> pyrimidine: what do you mean by "error"?

[15:25] <pyrimidine> 'Numeric overflow'

[15:25] <pyrimidine> babydrop, https://rt.perl.org/Public/Bug/Display.html?id=125938#txn-1419535

[15:26] <nine> Some testing the ecosystem is no fun when tests run into endless loops...

[15:26] <pyrimidine> trying again with a clean install just to check

[15:26] <babydrop> pyrimidine: the expected behaviour is a X::Numeric::Overflow exception is thrown.

[15:26] <nine> s/Some/Smoke/

[15:26] <babydrop> m: try '2**10000000000'.EVAL; say $!.^name

[15:26] <camelia> rakudo-moar 08ccbb: OUTPUT«X::Numeric::Overflow␤»

[15:26] <pyrimidine> babydrop: Ah, then it's working just fine :)

[15:27] <babydrop> pyrimidine: That should produce the same on OSX

[15:27] <babydrop> sweet \o/

[15:28] <pyrimidine> double-checking, I have two macs (laptop and a work iMac), test was on the former, rerunning on the latter

[15:31] <pyrimidine> babydrop, this look correct?  Seems fine: https://gist.github.com/cjfields/eb4c65e96442d463eab801feea90423b

[15:31] <babydrop> yup. thanks

[15:31] <pyrimidine> another ticket down! babydrop++

[15:32] <babydrop> .ask stmuk_ so is `zef` now the installer being shipped with R*? I notice our REPL message still references panda; wondering if that should read zef now

[15:32] <yoleaux2> babydrop: I'll pass your message to stmuk_.

[15:32] <babydrop> .tell stmuk_ the message is the "You may want to `panda install Readline` or `panda install Linenoise` or use rlwrap for a line editor"

[15:32] <yoleaux2> babydrop: I'll pass your message to stmuk_.

[15:33] <stmuk_> babydrop: the last release was panda .. there is a branch which uses zef which will probably be the next release

[15:33] <yoleaux2> 15:32Z <babydrop> stmuk_: so is `zef` now the installer being shipped with R*? I notice our REPL message still references panda; wondering if that should read zef now

[15:33] <yoleaux2> 15:32Z <babydrop> stmuk_: the message is the "You may want to `panda install Readline` or `panda install Linenoise` or use rlwrap for a line editor"

[15:33] <babydrop> cool

[15:33] <babydrop> .tell Zoffix s/panda/zef/; in REPL message prior to next release

[15:33] <yoleaux2> babydrop: I'll pass your message to Zoffix.

[15:34] <lucasb> this switch gets rid of panda or both will be shipped together?

[15:34] <stmuk_> https://github.com/rakudo/star/tree/zef

[15:34] <stmuk_> currently panda isn't on that branch at all but I will probably add it back

[15:34] * babydrop is +1 on removing it completely

[15:35] <stmuk_> maybe it should warn its going away in the next R* release

[15:35] <babydrop> or include a dummy executable that when run says "yada yada use zef now"

[15:36] <babydrop> stmuk_: that sounds good

[15:39] <pyrimidine> nine: I'm seeing errors installing Inline::Perl5 from rakudo master; should I go ahead and post an issue for it?  https://gist.github.com/cjfields/cff17fab3fc8273393b7669997991293

[15:41] <nine> pyrimidine: see them, too :/

[15:43] <nine> definitely caused by some change in rakudo

[15:44] <nine> pyrimidine: are you by any chance bored enough to bisect rakudo for the change that caused the breakage?

[15:45] <pyrimidine> nine: I'll give it a go, but it might be running in the background while I'm doing other things

[15:45] <nine> pyrimidine++

[15:49] <dogbert17_> nine: can I tempt you with https://gist.github.com/dogbert17/c88ee798bb0789708ffcf5e4960e885b

[15:51] <nine> dogbert17_: I've already had a look but I'm still baffled. Will need to get some quiet time to give it another go. Maybe I'll find that this weekend.

[15:52] <dogbert17_> ++nine, many thanks it's the only nativecall test file which is still giving problems, you fixed the rest some time ago

[15:53] <nine> I probably left the hardest one till last ;)

[15:53] <nine> Ok, guests arriving. I'm outta here...

[16:23] <pyrimidine> Bisecting: 10 revisions left to test after this (roughly 4 steps)

[16:23] <pyrimidine> [f367e4edc189e090b83e81d5314f18bc438ccd39] Fix MVMArray Error on .pick with negative numbers

[16:24] <pyrimidine> nine: makes sense it would be very recent, should have it pretty soon

[17:05] <pyrimidi_> nine: looks like it may be a moarvm change

[17:06] <pyrimidi_> Bisecting: 0 revisions left to test after this (roughly 1 step)

[17:06] <pyrimidi_> [b2ac4e44d136fb118c395b6649bebc25688487ca] Bump to get latest MoarVM.

[17:06] <pyrimidi_> verifying

[17:27] <dalek> roast: c96e321 | Altai-man++ | S17-procasync/basic.t:

[17:27] <dalek> roast: A test for #130291 (#189)

[17:27] <dalek> roast:

[17:27] <dalek> roast: * A test for #130291

[17:27] <dalek> roast:

[17:27] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130291

[17:27] <dalek> roast: * Change literal name to $*EXECUTABLE

[17:27] <dalek> roast: review: https://github.com/perl6/roast/commit/c96e321082

[17:28] <dalek> roast: dbcdea0 | (Zoffix Znet)++ | S17-procasync/basic.t:

[17:28] <dalek> roast: No need to quote a variable

[17:28] <dalek> roast: review: https://github.com/perl6/roast/commit/dbcdea0dca

[17:48] <pyrimidi_> nine: confirmed, it's b2ac4e44

[17:49] <pyrimidi_> nine: https://github.com/rakudo/rakudo/commit/b2ac4e44d136fb118c395b6649bebc25688487ca

[17:52] <pyrimidine> .tell nine in case you miss this in the backlog: Inline::Perl5 broke with https://github.com/rakudo/rakudo/commit/b2ac4e44d136fb118c395b6649bebc25688487ca

[17:52] <yoleaux2> pyrimidine: I'll pass your message to nine.

[19:20] <dalek> rakudo/nom: 8cb3e1b | (Zoffix Znet)++ | src/core/Any-iterable-methods.pm:

[19:20] <dalek> rakudo/nom: Fix .first on Numerics

[19:20] <dalek> rakudo/nom:

[19:20] <dalek> rakudo/nom: The logic in the method uses `+self` to get number of elements in

[19:20] <dalek> rakudo/nom: the list, however, `self` is not guaranteed to be a list and may be

[19:20] <dalek> rakudo/nom: a Numeric type, in which case we get an incorrect number.

[19:20] <dalek> rakudo/nom:

[19:20] <dalek> rakudo/nom: Fix by using `self.elems` instead.

[19:20] <dalek> rakudo/nom:

[19:20] <dalek> rakudo/nom: Bug find: https://irclog.perlgeek.de/perl6/2016-12-08#i_13705826

[19:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8cb3e1be4a

[19:20] <timotimo> kch kch kch

[19:20] <timotimo> very good

[19:21] <dalek> roast: f2b3bf4 | (Zoffix Znet)++ | S32-list/first.t:

[19:21] <dalek> roast: Test .first works when called on Numerics

[19:21] <dalek> roast:

[19:21] <dalek> roast: Bug find: https://irclog.perlgeek.de/perl6/2016-12-08#i_13705826

[19:21] <dalek> roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/8cb3e1be4a

[19:21] <dalek> roast: review: https://github.com/perl6/roast/commit/f2b3bf4197

[19:34] <babydrop> oh damn https://github.com/rakudo/rakudo/commit/8fdaada43f0b8691c8d026faca6d0607b483f3c5

[19:34] <babydrop> There was a reason for that + :/

[19:34] <babydrop> "

[19:34] <babydrop> "ZoffixW++ for spotting" heh

[19:34] <geekosaur> your alter egos apparently need to learn to talk to each other :p

[19:35] <timotimo> was there no test committed back then?

[19:36] <babydrop> I think I may have forgotten one +. I see 4 instances in lizmat's commit and only 3 in mine and the quoted code still works in mine

[19:37] <babydrop> hm

[19:38] <babydrop> Well, I don't see that 4th instance anymore. That code changed.

[19:38] <babydrop> So I guess yey? :)

[19:39] <babydrop> .ask lizmat would you double check this commit? https://github.com/rakudo/rakudo/commit/8cb3e1be4a233 it fixes the bug that 3.first: :end; fails, but now I see your earlier commit: https://github.com/rakudo/rakudo/commit/8fdaada43 but the quoted code still works with my change.

[19:39] <yoleaux2> babydrop: I'll pass your message to lizmat.

[19:40] <lizmat> .

[19:40] <yoleaux2> 19:39Z <babydrop> lizmat: would you double check this commit? https://github.com/rakudo/rakudo/commit/8cb3e1be4a233 it fixes the bug that 3.first: :end; fails, but now I see your earlier commit: https://github.com/rakudo/rakudo/commit/8fdaada43 but the quoted code still works with my change.

[19:42] <lizmat> babydrop: I'm feeling a bit under the weather

[19:42] <lizmat> both commits look ok to me?

[19:43] <babydrop> lizmat: I also had another question about matcher-less .first(). The :k, :kv, :p adverbs don't work on it. I looked at it and don't see any sane way of adding them without slowing everything down, so should we just spec that call as not taking adverbs? The user can ascertain the index without the adverbs, since there's no matcher, so they're kinda useless anyway?

[19:43] <babydrop> Oh, OK.

[19:43] <babydrop> lizmat: well, get rest then :)

[19:44] <lizmat> babydrop: why would adding those adverbs slow everything down?

[19:45] <babydrop> lizmat: Well, not everything, just the matcher-less .first

[19:46] <babydrop> OK, I can add the adverbs. It's just any time I make anything slower I have an image of you with a look of unapproval :P

[19:46] <babydrop> disapproval :)

[19:46] <lizmat> hehe

[19:47] <lizmat> if you're using a matcherless first, you should probably be using a .head anyway

[19:47] <babydrop> true

[19:47] <lizmat> so, if you want to use :k or friends with it, then by all means

[19:48] <lizmat> the overhead is what you want :-)

[19:48] <babydrop> :)

[19:48] <lizmat> if you don't want it, use .head

[19:48] <lizmat> or .tail in the :end case

[19:49] <lizmat> which is what first with :end and no other adverbs should do anyway

[19:50] <lizmat> afk&

[19:51] <lizmat> babydrop: re 8cb3e1be4a233e888b57 , that looks ok to me

[19:51] <lizmat> really afk&

[19:52] <babydrop> OK. Thanks for looking at it.

[20:21] <dalek> rakudo/nom: ababb24 | (Zoffix Znet)++ | src/core/Any-iterable-methods.pm:

[20:21] <dalek> rakudo/nom: Fix matcher-less .first not respecting its :k, :p, and :kv adverbs

[20:21] <dalek> rakudo/nom:

[20:21] <dalek> rakudo/nom: The multi handling the matcher-less candidate does not check whether

[20:21] <dalek> rakudo/nom: any adverbs were passed.

[20:21] <dalek> rakudo/nom:

[20:21] <dalek> rakudo/nom: Fix by removing that candidate and assigning `True` default to a

[20:21] <dalek> rakudo/nom: candidate with Mu matcher.

[20:21] <dalek> rakudo/nom:

[20:21] <dalek> rakudo/nom: IRC: https://irclog.perlgeek.de/perl6-dev/2016-12-08#i_13706306

[20:21] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ababb246a3

[20:22] <dalek> roast: 57b0f8c | (Zoffix Znet)++ | S32-list/first.t:

[20:22] <dalek> roast: Test all adverbs work on .first without a matcher

[20:22] <dalek> roast:

[20:22] <dalek> roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/ababb246a3

[20:22] <dalek> roast: review: https://github.com/perl6/roast/commit/57b0f8c421

[20:46] <dalek> rakudo/nom: 345f6a7 | (Zoffix Znet)++ | src/Perl6/Actions.nqp:

[20:46] <dalek> rakudo/nom: Fix sink statement prefix not exploding Failures

[20:46] <dalek> rakudo/nom:

[20:46] <dalek> rakudo/nom: In the Actions it code-genned to call .eager. Not sure

[20:46] <dalek> rakudo/nom: why (copy-pasta from the <eager> in code above?), but

[20:46] <dalek> rakudo/nom: changing that to call .sink showed no stresstest failures.

[20:46] <dalek> rakudo/nom:

[20:46] <dalek> rakudo/nom: Bug finding: https://irclog.perlgeek.de/perl6/2016-12-08#i_13706422

[20:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/345f6a7146

[20:47] <dalek> roast: 49595cb | (Zoffix Znet)++ | S04-exceptions/fail.t:

[20:47] <dalek> roast: Test `sink` statement prefix explodes Failures

[20:47] <dalek> roast:

[20:47] <dalek> roast: Bug finding: https://irclog.perlgeek.de/perl6/2016-12-08#i_13706422

[20:47] <dalek> roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/345f6a7146

[20:47] <dalek> roast: review: https://github.com/perl6/roast/commit/49595cba0d
