[00:40] <travis-ci> Rakudo build errored. Zoffix Znet 'Add 4431bfb0a03 to changelog'

[00:40] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/153614594 https://github.com/rakudo/rakudo/compare/dd5c2818f368...079da9928136

[00:41] <buggable> ‚ò¢ [travis build above] Build log missing from at least one job. Check results manually.

[00:52] <Zoffix> buggable, yup. You weren't lying! One job's log is missin'

[03:02] <japhb> I'm getting a 'Malformed UTF-8' error trying to read binary output from a program using Proc::Async.new(...).stdout(:bin).tap({ ... }).  Shouldn't that be impossible in :bin mode?

[04:41] <zostay> are infix:< ‚â§ > and infix:< ‚â• > deliberate omissions... i thought those had been implemented for some reason

[04:41] <zostay> there should be a ? in there some where

[05:13] <ShimmerFairy> zostay: yeah, that's something I've never quite understood, IMO there's no reason they aren't there.

[05:15] <zostay> in that case, perhaps i'll submit a patch and see if it sticks :)

[05:17] <zostay> the reason i can think of is just bloat since optimizing performance is a supreme goal, more details like this could work against that goal bit by bit

[05:18] <ShimmerFairy> zostay: not a good argument though when even close to Christmas, you'd see e.g. Larry adding the Unicode version of a function composition operator. I think ‚â§ and ‚â• are more acceptable than that :P .

[05:21] <zostay> hehe

[06:14] <nine> japhb: I would assume so, yes.

[08:41] <AlexDaniel> zostay: https://gist.github.com/AlexDaniel/c89bd2786f9b63f31e4c

[08:42] <TheLemonMan> the ‚Üí is very nice

[08:43] <AlexDaniel> I also like #‚Üê #‚Üì :)

[08:59] <Zoffix> AlexDaniel, "It is a great looking operator, but unlike other ideas on this page it is not a 1-to-1 replacement." what do you mean a 1-to-1 replacement?

[09:00] <lizmat> commute&

[09:00] <AlexDaniel> Zoffix: ‚Üí and -> are visually identical (well, sort of), but for example ~~ and ‚ò∫ are not :)

[09:00] <Zoffix> huh

[09:01] <Zoffix> m: '‚ò∫'.uninames.say

[09:01] <camelia> rakudo-moar 4674f1: OUTPUT¬´(WHITE SMILING FACE)‚ê§¬ª

[09:01] <AlexDaniel> I mean, it's weird to suggest a character that looks differently

[09:01] <Zoffix> ‚åÅ and ~~ look pretty similar

[09:01] <AlexDaniel> what about ‚âà ? :)

[09:02] <Zoffix> http://i.imgur.com/S2h7bL7.png

[09:02] <AlexDaniel> we can't use ‚âà, but it is a much closer match

[09:02] <AlexDaniel> okay-okay, I'll remove this statement :)

[09:03] <Zoffix> ‚â§ ‚â• ‚â† are definitely something we want. They're just so awesome.

[09:05] <AlexDaniel> Zoffix: by the way, what do you think about ‚àö ‚àõ ‚àú ?

[09:06] <Zoffix> yey on ‚àö  and ney on others.

[09:07] <AlexDaniel> Zoffix: but why?

[09:08] <Zoffix> 'cause they are rarer than the 2 root.

[09:09] <AlexDaniel> um‚Ä¶ but‚Ä¶

[09:09] <AlexDaniel> ü§∑

[09:09] <Zoffix> m: 'ü§∑'.uninames.say

[09:09] <camelia> rakudo-moar 4674f1: OUTPUT¬´(<reserved>)‚ê§¬ª

[09:10] <Zoffix> No idea what that is

[09:10] <Zoffix> m: say 625‚Å∞¬∑¬≤‚Åµ

[09:10] <camelia> rakudo-moar 4674f1: OUTPUT¬´===SORRY!=== Error while compiling <tmp>‚ê§Bogus postfix‚ê§at <tmp>:1‚ê§------> say 625‚Å∞‚èè¬∑¬≤‚Åµ‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement modifier‚ê§     ‚Ä¶¬ª

[09:10] <Zoffix> heheh

[09:11] <AlexDaniel> m: 'ü§∑'.ord.base(16).say

[09:11] <camelia> rakudo-moar 4674f1: OUTPUT¬´1F937‚ê§¬ª

[09:11] <Zoffix> m: say 625**0.25

[09:11] <camelia> rakudo-moar 4674f1: OUTPUT¬´5‚ê§¬ª

[09:11] <AlexDaniel> Zoffix: http://unicode.org/emoji/charts/emoji-released.html#1f937

[09:12] <Zoffix> We should definitelly do the ü§¶ too :P maybe a Unicode version of die()? XD

[09:12] <Zoffix> "FACE PALM	disbelief, exasperation, face, palm"

[09:14] <AlexDaniel> face, palm :)

[09:15] <AlexDaniel> by the way, any plans on adding unicode 9.0 support to perl¬†6?

[09:21] <Zoffix> Sure, just submit a PR ;)

[09:22] <Zoffix> Hm, harness6 all tests pass, but 'Heap corruption detected: pointer 0x7fc391e8aa20 to past fromspace' on second run

[09:22] <Zoffix> spacemen of the past corrupting my heaps!

[09:23] <AlexDaniel> üöÄ

[09:25] <AlexDaniel> m: say 2 <=> 10

[09:25] <camelia> rakudo-moar 4674f1: OUTPUT¬´Less‚ê§¬ª

[09:25] <AlexDaniel> m: say 2 üöÄ 10

[09:25] <camelia> rakudo-moar 4674f1: OUTPUT¬´===SORRY!=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> say 2‚èè üöÄ 10‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement modifier‚ê§        statem‚Ä¶¬ª

[09:34] <Zoffix> 'Cannot call method 'Stringy' on a null object in method add-data at /home/cpan/CPANPRC/rakudo/lib/TAP.pm6 (TAP) line 281'

[09:34] <Zoffix> Looks like trying to debug the H6 is beyond my paygrade :/

[10:00] <dalek> rakudo/nom: 77da2dc | (Zoffix Znet)++ | docs/announce/2016.08.md:

[10:00] <dalek> rakudo/nom: Add 2016.08 release announcement

[10:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/77da2dcc6a

[10:05] <dalek> rakudo/nom: 37bf470 | (Zoffix Znet)++ | docs/release_guide.pod:

[10:05] <dalek> rakudo/nom: Update guide with 2016.08 now in the past

[10:05] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/37bf470f92

[10:43] <dalek> rakudo/nom: c201a76 | (Zoffix Znet)++ | tools/contributors.pl6:

[10:43] <dalek> rakudo/nom: Break up contributor list on multiple <80-char lines

[10:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c201a76fe2

[10:50] * Zoffix goes for a nap

[11:16] <TheLemonMan> whee, another bug squashed, this took way too much time

[12:15] <jnthn> .tell Zoffix http://www.moarvm.org/releases/MoarVM-2016.08.tar.gz

[12:15] <yoleaux2> jnthn: I'll pass your message to Zoffix.

[12:55] <Zoffix> \o/

[12:55] <yoleaux2> 12:15Z <jnthn> Zoffix: http://www.moarvm.org/releases/MoarVM-2016.08.tar.gz

[12:58] <dalek> nqp: e368404 | (Zoffix Znet)++ | VERSION:

[12:58] <dalek> nqp: bump VERSION to 2016.08

[12:58] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e368404367

[12:59] <dalek> nqp: a714ed7 | (Zoffix Znet)++ | docs/release_guide.pod:

[12:59] <dalek> nqp: Remove dollar signs from shown shell commands

[12:59] <dalek> nqp:

[12:59] <dalek> nqp: To make it easier to copy-paste them

[12:59] <dalek> nqp: review: https://github.com/perl6/nqp/commit/a714ed740a

[13:11] <unmatched}> lovely. started doing the release and my box died. screen frose and even reset button wasn't working and now bios is beeping on boot :(

[13:20] <Zoffix> Wiggling the video card in its slot and staring intently at the box with a screwdriver in my hand seems to have solved the issue \o/

[13:47] <dalek> nqp: 2164ccc | (Zoffix Znet)++ | tools/build/MOAR_REVISION:

[13:47] <dalek> nqp: Bump MoarVM version to 2016.08

[13:47] <dalek> nqp: review: https://github.com/perl6/nqp/commit/2164cccd0d

[13:54] <dalek> rakudo/nom: 2e963df | (Zoffix Znet)++ | tools/build/NQP_REVISION:

[13:54] <dalek> rakudo/nom: [release] bump NQP revision to 2016.08

[13:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2e963dfc0a

[13:54] <dalek> rakudo/nom: 2dccd8c | (Zoffix Znet)++ | VERSION:

[13:54] <dalek> rakudo/nom: [release] bump VERSION to 2016.08

[13:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2dccd8c337

[14:17] <Zoffix> 6.c-errata t/spec/S17-lowlevel/lock.t seems to be flopping. Fails about 20-30% of the time: https://gist.github.com/zoffixznet/b77605e76bd309b9b8148756a460cf11

[14:20] * TimToady wonders if we can subvert the npm ecosystem from the inside...

[14:22] <Zoffix> release right-pad?

[14:22] <Zoffix> :)

[14:27] <TimToady> just saw a keynote from the coo of npm, and they're doing a lot of things right

[14:27] <jnthn> Zoffix: Oh...I fixed the rest on roast master, but forgot errata. It's the test at fault, not Rakudo.

[14:27] <TimToady> though they're still unsure how they're going to get existing modules to coexist with es6 modules, which could have some bearing here with our js backend

[14:27] <Zoffix> Ah

[14:28] <jnthn> (I assuemd it was gonna be Rakudo or Moar to blame for ages, then when I eventually got around to looking at it, I realized it was a bust test and had it fixed in 10 minutes. D'oh. :))

[14:29] <nwc10> the tag 2016.08 seems to be missing from the nqp github repository

[14:29] * mst sulks more about 6.c not getting lexical 'use'

[14:30] <nwc10> with the result that even nqp HEAD isn't "new" enough for rakudo HEAD

[14:31] <Zoffix> nwc10, it was created about 44 minutes ago. Ensure you got the latest everything

[14:31] <Zoffix> https://github.com/perl6/nqp/releases/tag/2016.08

[14:32] <jnthn> Was gonna ask if the tag somehow didn't get pushed, but if it's on GitHub... :)

[14:32] * jnthn away again for a bit

[14:33] <nwc10> very strange. because if I pull again in my nqp checkout I still don't see it

[14:33] <Zoffix> Did you add --tags?   it's git pull --tags or git fetch --tags or something like that

[14:34] <nwc10> Zoffix: correct. no I didn't. thanks

[14:34] <Zoffix> \o/

[14:34] <nwc10> OK, why do I usually *not* need to do that?

[14:35] <nwc10> aha er OK erk

[14:35] <nwc10> | * commit 944cf37c95a0a8a5c9cfb45acec52953683d5eb2 (tag: 2016.08)

[14:35] <nwc10> * commit 2164cccd0d72f2fc1472fdb8d9c85748277c0f35 (HEAD -> master, origin/master, origin/HEAD)

[14:35] <nwc10> git log --graph --decorate origin/master 2016.08

[14:35] <[TuxCM]> This is Rakudo version 2016.07.1-243-gc201a76 built on MoarVM version 2016.07-24-g31eccd7

[14:35] <[TuxCM]> csv-ip5xs        9.977

[14:35] <[TuxCM]> test            15.457

[14:35] <[TuxCM]> test-t           7.413

[14:35] <[TuxCM]> csv-parser      16.208

[14:36] <nwc10> show that it and master have diverged

[14:37] <Zoffix> nwc10, what does that mean?

[14:38] <nwc10> the tag is for a commit which is not a parent of nqp master

[14:39] <nwc10> I might not be able to explain it better than that

[14:39] <nwc10> I hope that someone else is going to help me out here by explaining better

[14:41] <Zoffix> Oh, I see what happened.

[14:41] <Zoffix> I bumped MoarVM version locally (and I think tagged too). On github fixed the release guide in the middle of that and pulled in those changes before pushing everything

[14:41] <Zoffix> Is that a problem or something?

[14:43] <nwc10> I think that soneone else is going to have to answer the "is tha ta problem"

[14:43] <nwc10> but right now a `git describe` on nqp master gives a tag which is used for the nqp version which makes Rakudo think that the nqp is too old.

[14:43] <nwc10> whilst nqp built from the tag is just fine

[14:44] <Zoffix> Ah yeah, it gives `parrot-149-g2164ccc`. I think you have to run something else to get the right tag

[14:44] <Zoffix> As for 'makes Rakudo think'.... We're right in the middle of the release. Are you sure your Rakudo changes are latest and greatest?

[14:45] <Zoffix> I've just tested everything and it worked fine.

[14:48] <Zoffix> üé∫üé∫üé∫üìØüìØüìØüìØüìØüìØüåàüåàüåàüì¶üì¶üì¶

[14:48] <Zoffix> The release of Rakudo #102 2016.08 has now been completed

[14:48] <Zoffix> üé∫üé∫üé∫üìØüìØüìØüìØüìØüìØüåàüåàüåàüì¶üì¶üì¶

[14:48] * Zoffix celebrates with an appropriate amount of fun

[14:48] <nwc10> \o/

[14:48] <TheLemonMan> define 'appropriate', do I have to wear pants ?

[14:48] <Zoffix> .tell arnsholt I recall you mentioning you wanted to wait until after release to do the O-branch stuff. The release has now been done.

[14:48] <yoleaux2> Zoffix: I'll pass your message to arnsholt.

[14:49] <Zoffix> TheLemonMan, well... I'm not wearing any :P

[14:50] <TheLemonMan> Zoffix, that's the right spirit!

[15:07] <geekosaur> git fetch --tags # ?

[15:13] <Zoffix> Basically my botched tag means bumping nqp version for Rakudo will still be more involved than just `git describe` that we had to avoid since parrot tag and (possibly) more involved than the `git describe --match=20*` that gave the parrot tag. 'cause right now that gives reference against the 2016.07 release, like 2016.07-180-g2164ccc.

[15:14] <Zoffix> Luckily, Rakudo builds fine from the 2016.08 tag

[15:15] <mst> you can always burn the tag with fire and replace it with a fixed one

[15:15] <mst> the advantages may outweigh the risks

[15:16] <Zoffix> mst, what are the risks?

[15:17] <mst> people say "you can never replace a tag because people might just have already pulled it and then you'll confuse them"

[15:17] <mst> I say "the sooner you replace it, the less people will get a botched tag"

[15:17] <Zoffix> What will the confusion be?

[15:18] <Zoffix> Cause right now the HEAD is what the tag points to, except git describe doesn't see it, cause of my git pull --rebase stuff

[15:19] <Zoffix> jnthn, [Coke]_ , TimToady are you around? I made a booboo with the tag

[15:20] <mst> what do you mean what will the confusion be

[15:20] <mst> if you don't actually see a problem, just replace the tag with a fixed on already

[15:20] <Zoffix> Well, you said 'and then you'll confuse them'. What do you mean? What are the ramification of replacing the tag?

[15:21] <Zoffix> Yeah, but I don't see a problem because I'm an ignorant idiot.... üòú

[15:28] <AlexDaniel> .oO( just don't do whatever was done with 2016.01 and 2016.01.1 ‚Ä¶ it makes bisectable freak out )

[15:29] <Zoffix> I was away at that time, so I don't know what happened.

[15:29] <Zoffix> And Rakudo wouldn't need to be retagged.

[15:29] <Zoffix> Hm, I guess yeah, couldn't we just add a 2016.08.1 tag to nqp?

[15:33] <AlexDaniel> Zoffix: if I recall correctly, 2016.01 and 2016.01.1 are hanging in the breeze, which means that there's no real path from 2016.01 to HEAD. That's OK, but it makes things with whateverables a bit more painful

[15:37] <dalek> nqp: d50296e | LemonBoy++ | src/vm/moar/QAST/QASTOperationsMAST.nqp:

[15:37] <dalek> nqp: Simplify the compilation of 'if' switches.

[15:37] <dalek> nqp:

[15:37] <dalek> nqp: Optimize the case where there's no else branch by not emitting a goto.

[15:37] <dalek> nqp: Also, remove some other code that's being generated but is actually

[15:37] <dalek> nqp: unreachable.

[15:37] <dalek> nqp: review: https://github.com/perl6/nqp/commit/d50296e84c

[15:37] <dalek> nqp: ca75b3e | (Pawe≈Ç Murias)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp:

[15:37] <dalek> nqp: Merge pull request #305 from LemonBoy/simpler-if

[15:37] <dalek> nqp:

[15:37] <dalek> nqp: Simplify the compilation of 'if' switches.

[15:37] <dalek> nqp: review: https://github.com/perl6/nqp/commit/ca75b3ecb8

[15:40] <TheLemonMan> I've updated nqp's #170, nqp ninjas please have a look if you can :)

[15:43] <Zoffix> OK. I'm going against replacing the tag.

[15:44] <Zoffix> And wait for other devs to come in and then we'll figure out if we need to create 2016.08.1 on nqp or what.

[15:58] <arnsholt> Zoffix: Cheers!

[15:58] <yoleaux2> 14:48Z <Zoffix> arnsholt: I recall you mentioning you wanted to wait until after release to do the O-branch stuff. The release has now been done.

[15:59] <arnsholt> TheLemonMan: If the Rakudo spectests pass with your tweaked NQP it's probably fine, but this one is deep enough that I think jnthn should probably weigh in on it

[15:59] <arnsholt> I'm also curious, what (if anything) changes if the result of the block *is* used?

[16:03] <TheLemonMan> arnsholt, the codegen's different because the protected block knows the result's gonna be used

[16:06] * TheLemonMan &

[16:16] <pmurias> .tell TheLemonMan the protected block *is* always generated as if it's result was gonna be used

[16:16] <yoleaux2> pmurias: I'll pass your message to TheLemonMan.

[16:23] <ugexe> https://github.com/rakudo/rakudo/blob/nom/src/core/IO/Path.pm#L422 # Is JVM dir() broken here? . and .. are both default values of :$test fwiw, but then :$test is matched against the . and .. for some reason?

[16:23] <ugexe> none(<. ..>) are the default values rather

[16:53] <Zoffix> m: dd[ $*VM.version, $*PERL.compiler.version ]

[16:53] <camelia> rakudo-moar c201a7: OUTPUT¬´block <unit>‚ê§Method 'Int' not found for invocant of class 'Version'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:53] <Zoffix> m: dd [ $*VM.version, $*PERL.compiler.version ]

[16:53] <camelia> rakudo-moar c201a7: OUTPUT¬´[v2016.07.24.g.31.eccd.7, v2016.07.1.243.gc.201.a.76]‚ê§¬ª

[16:54] <Zoffix> oh crap

[16:54] <Zoffix> Oh. I guess camelia doesn't build every commit right away. Never mind.

[16:59] <Zoffix> s: dd $*VM.version,  $*PERL.compiler.version

[16:59] <SourceBaby> Zoffix, Something's wrong: ‚ê§ERR: v2016.07.24.g.31.eccd.7‚ê§v2016.07.1.243.gc.201.a.76‚ê§Cannot resolve caller sourcery(Nil); none of these signatures match:‚ê§    ($thing, Str:D $method, Capture $c)‚ê§    ($thing, Str:D $method)‚ê§    (&code)‚ê§    (&code, Capture $c)‚ê§  in block <unit> at -e line 6‚ê§‚ê§

[16:59] * Zoffix gets a bad feelingh

[17:07] <dalek> roast: ec5b901 | usev6++ | S01-perl-5-integration/ (2 files):

[17:07] <dalek> roast: Skip Perl 5 integration tests if requirements not met

[17:07] <dalek> roast:

[17:07] <dalek> roast: (similar to other Perl 5 integration)

[17:07] <dalek> roast: review: https://github.com/perl6/roast/commit/ec5b901285

[17:07] <dalek> roast: 840a2ee | usev6++ | S (3 files):

[17:07] <dalek> roast: Fudge some new tests for rakudo-j

[17:07] <dalek> roast: review: https://github.com/perl6/roast/commit/840a2eec57

[17:12] <Zoffix> <Zoffix> OK. I'm gonna do a 2016.08.1 'cause I'm not 100% sure just changing the tag will fix everything and won't introduce new problems.

[17:42] <dalek> nqp: 0634db8 | (Zoffix Znet)++ | VERSION:

[17:42] <dalek> nqp: bump VERSION to 2016.08.1

[17:42] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0634db852c

[17:50] <dalek> nqp: fdbebad | (Pawel Murias)++ | / (2 files):

[17:50] <dalek> nqp: Fix issue #170. Exact cause and location of the bug found by LemonBoy++.

[17:50] <dalek> nqp: review: https://github.com/perl6/nqp/commit/fdbebadd1d

[17:55] <dalek> rakudo/nom: 26ebe43 | (Zoffix Znet)++ | tools/build/NQP_REVISION:

[17:55] <dalek> rakudo/nom: [release] bump NQP revision to 2016.08.1

[17:55] <dalek> rakudo/nom:

[17:55] <dalek> rakudo/nom: The 2016.08 tag is botched and users who pull changes into older

[17:55] <dalek> rakudo/nom: repositories do not get it and the build fails.

[17:55] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/26ebe43b12

[18:04] <dalek> roast: 052d5cb | usev6++ | S (2 files):

[18:04] <dalek> roast: Unfudge passing test for rakudo-j

[18:04] <dalek> roast: review: https://github.com/perl6/roast/commit/052d5cb6f1

[18:14] <dalek> rakudo/nom: f372635 | (Zoffix Znet)++ | docs/announce/2016.08.1.md:

[18:14] <dalek> rakudo/nom: Add 2016.08.1 Release Announcement

[18:14] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f372635143

[18:14] <dalek> rakudo/nom: a07a2e1 | (Zoffix Znet)++ | VERSION:

[18:14] <dalek> rakudo/nom: [release] bump VERSION to 2016.08.1

[18:14] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a07a2e173c

[18:42] <Zoffix> Bah. Sitting here, waiting... ran TEST_JOB=30 make spectest   (no 'S' on jobs)

[18:51] <Zoffix> Well, this was fun.

[18:52] <Zoffix> Off to the pub... Gonna squeeze out a blog post from all this :)

[19:25] <b2gills> TimToady: I just noticed that ÔΩ¢(1..3).minmaxÔΩ£ returns a list, while every other minmax sub/operator/method that I looked at returns a Range, is this intentional? ( I was thinking adding min/max/minmax to the ÔΩ¢[+] RangeÔΩ£ optimization )

[19:39] <TimToady> hmm

[19:40] * lizmat waves from Bratislava

[19:40] <lizmat> b2gills: Range.minmax should return a Range

[19:41] <timotimo> o/ lizmat

[19:41] * [TuxCM] waves from Cluj

[19:43] <b2gills> waves from Waverly ( The one in Iowa )

[19:49] <DrForr> Weird, I'm in Cluj too.

[19:55] * mst flies out tuesday

[19:55] <mst> ok, so, not sure if this is the right place to be asking but

[19:55] * ZoffixLappy has little Cluj what this is all about....

[19:55] <mst> both rakduo and star repositories have a Configure.pl

[19:55] <ZoffixLappy> YAPC::EU I'm guessing...

[19:55] <mst> they appear to be mostly the same code

[19:56] <mst> yes

[19:56] <ZoffixLappy> \o/

[19:56] <mst> do we have any idea how forward/backporting patches is handled?

[19:59] <lizmat> mst: not sure...

[20:00] <lizmat> long term, I think the plane is to have a Configure.nqp

[20:00] <lizmat> *plan

[20:00] <mst> lizmat: that's not what I mean

[20:00] <mst> what I mean is, "how do changes get propagated between the two NOW"

[20:01] <lizmat> ah... in that case: no idea

[20:01] <mst> right

[20:01] <lizmat> moritz might know, but he's out roaming

[20:01] <mst> the more I read this build system the more I suspect nobody working on it ever had any idea

[20:02] <lizmat> mst: the way I understand it is was only built that way to get things working

[20:02] <lizmat> so I guess now would be a good time to work on it more  :-)

[20:02] <mst> yes. but if nobody can even tell me which copy to make patches against

[20:02] <mst> that becomes trickier than I'd like

[20:03] <mst> I am trying to make this not amateur hour. I just need a little more information.

[20:03] <lizmat> moritz FROGGS masak  (in that order) would be the people I'd check this with

[20:03] <lizmat> pmichaud might also know

[20:04] <ZoffixLappy> FWIW, I recall making Perl 5.10-compat changes to Rakudo's Configure.pl that I never propagated to Star's

[20:04] <mst> the release guide doesn't mention it

[20:04] * mst checks log/blame instead

[20:04] <ZoffixLappy> This in particular: https://github.com/rakudo/rakudo/commit/a344817c57be50b83d0782e0d3deda432a45d219

[20:05] <timotimo> i've already wondered in the past about why we have two slightly different copies of the whole configure shebang

[20:05] <mst> seems like -some- stuff has been merged down into star from the submodule

[20:05] <mst> but not all

[20:06] <mst> meanwhile, the Makefile template is also a problem

[20:06] <mst> but at least that comes straight in from rakudo

[20:07] <travis-ci> Rakudo build errored. Zoffix Znet '[release] bump VERSION to 2016.08.1'

[20:07] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/153823835 https://github.com/rakudo/rakudo/compare/f3726351438d...a07a2e173cfc

[20:07] <buggable> ‚úì [travis build above] One job failed due to the timeout. No other failures.

[20:10] <lizmat> b2gills: hmmm... it appears there are quite some spectests that expect Range.minmax to return a List  :-(

[20:11] <b2gills> Range.min-and-max

[20:13] <ZoffixLappy> lizmat, are they also in 6.c-errata? Maybe they were added as part of testing bug fixes for unrelated stuff. I know I added a few and may have assumed the returned List was the expected thing to return

[20:13] <lizmat> ZoffixLappy: I probably fell into that same trap  :-(

[20:17] <mst> can anybody see a downside to my just saying 'fuck it' and ignoring star and focusing on fixing rakudo mainline?

[20:18] <lizmat> mst: that you might have to do it for Rakudo star as well ?

[20:18] <ZoffixLappy> mst, I don't. IMO the whole Star thing needs to be rethought.

[20:18] <b2gills> mst: If it is the difference between you working on it, and you not working on it. I choose you working on it.

[20:19] <mst> well, I have to patch one of the two almost identical scripts first.

[20:19] <mst> nobody knows how the changes are propagated

[20:19] <mst> or even if there's a plan for that

[20:19] <ZoffixLappy> :)

[20:19] <mst> and it *looks* like start's Configure.pl gets stuff merged down from rakudo's via the submodules

[20:19] <b2gills> I doubt that any changes are propagated

[20:19] <mst> b2gills: nah, *some* of them are

[20:19] <mst> it's great

[20:20] <b2gills> mst: have an appropriate amount of masochistic fun

[20:20] <mst> lizmat: I think setting fire to star's copypasta and doing it properly would be better tbh

[20:21] <mst> I *think* basically it's supposed to get merged, but people only remember sometimes

[20:21] <lizmat> .oO( hmmmm.... fire on a hot summer night )

[20:21] <mst> and there's nothing in the release manager docs

[20:22] <lizmat> mst: I think that's probably true

[20:22] <mst> I think turning the star-specific bits into a patch

[20:22] <lizmat> mst++

[20:22] <mst> and modifying the release automation to apply the patch to rakudo's configure.pl

[20:22] <mst> would be a better plan

[20:22] <mst> in which case, fixing rakudo's first becomes obviously correct

[20:32] <lizmat> mst: agree

[20:33] <mst> hm. this is going to be less horrible than I thought

[20:33] <mst> the HURR DURR EVERYTHING MUST HAVE SAME PREFIX stuff is isolated to a couple places

[20:38] <lizmat> mst: maybe the people that did this did have some clue?   :-)

[20:39] <mst> lizmat: they made something moderately well factored that works on all of their machines, with their chosen configure options

[20:41] <mst> hmf. additional question: where do the moar tarballs live?

[20:43] <ZoffixLappy> mst, http://www.moarvm.org/releases/ may be one of the possible answers :)

[20:43] <mst> yay

[20:56] <lizmat> m: my $r = 1..5; my @r = $r; dd @r   # this feels wrong in light of:

[20:56] <camelia> rakudo-moar a07a2e: OUTPUT¬´Array @r = [1..5,]‚ê§¬ª

[20:57] <lizmat> m: my @r = 1..5; dd @r

[20:57] <camelia> rakudo-moar a07a2e: OUTPUT¬´Array @r = [1, 2, 3, 4, 5]‚ê§¬ª

[20:57] <lizmat> jnthn TimToady :  ^^^ opinions ?

[20:58] <ZoffixLappy> Feels right to me. I'm asking a Range to be stored in a "single item." so it stores the range

[20:58] <ZoffixLappy> Same as with my $r = 1, 2, 3; doesn't work the same as my @r = 1, 2, 3

[20:59] <ZoffixLappy> m: my $r = 1, 2, 3; my @r = 1, 2, 3; dd[ $r, @r ]

[20:59] <camelia> rakudo-moar a07a2e: OUTPUT¬´WARNINGS for <tmp>:‚ê§Useless use of constant integer 2 in sink context (lines 1, 1)‚ê§Useless use of constant integer 3 in sink context (lines 1, 1)‚ê§block <unit>‚ê§¬ª

[20:59] <ZoffixLappy> m: my $r = 1, 2, 3; my @r = 1, 2, 3; dd [ $r, @r ]

[20:59] <camelia> rakudo-moar a07a2e: OUTPUT¬´WARNINGS for <tmp>:‚ê§Useless use of constant integer 2 in sink context (lines 1, 1)‚ê§Useless use of constant integer 3 in sink context (lines 1, 1)‚ê§[1, [1, 2, 3]]‚ê§¬ª

[20:59] <mst> lizmat: are the rakudo+nqp+moarvm releases for start chosen because they're unusually stable, or is it just "don't make a new star too often" ?

[21:00] <lizmat> a star release is always dependent on a stable Moar/NQP/Rakudo combo, afaik

[21:00] <lizmat> this may be a .1 point release if we find something wrong just after a compiler release

[21:00] <lizmat> like we had with 2016.08 / 2016.08.1 right now

[21:01] <lizmat> so a Rakudo Star would probably depend on 2016.08.1

[21:01] <jnthn> lizmat: I don't see anything wrong there.

[21:01] <mst> right, then I think I'll stick to using the set of tarballs shipped with the last star for the moment

[21:01] <jnthn> (For the reason ZoffixLappy stated)

[21:01] <mst> and eat the necessity of maybe tweaking my patches to apply to master

[21:02] <lizmat> m: say (3.5e1 .. 4.5e1).Str   # jnthn ZoffixLappy

[21:02] <camelia> rakudo-moar a07a2e: OUTPUT¬´35 36 37 38 39 40 41 42 43 44 45‚ê§¬ª

[21:02] <lizmat> then this looks wrong to me...

[21:03] <ZoffixLappy> m: say $(3.5e1 .. 4.5e1).Str

[21:03] <camelia> rakudo-moar a07a2e: OUTPUT¬´35 36 37 38 39 40 41 42 43 44 45‚ê§¬ª

[21:03] <ZoffixLappy> m: say ($(3.5e1 .. 4.5e1)).Str

[21:03] <camelia> rakudo-moar a07a2e: OUTPUT¬´35 36 37 38 39 40 41 42 43 44 45‚ê§¬ª

[21:03] * ZoffixLappy shrugs

[21:03] <ZoffixLappy> May be

[21:03] <lizmat> I'm about to change this to:

[21:03] <lizmat> $ 6 'say (3.5e1 .. 4.5e1).Str'

[21:03] <lizmat> 35e0..45e0

[21:04] <lizmat> but that breaks some tests...  which depended on the above dubious Stringification

[21:06] <b2gills> Range is a Positional, so I can see .Str doing the same as Array.Str

[21:07] <jnthn> lizmat: I'm a bit tired for having a well-considered opinion on that, but I'd say it's one to filter through TimToady++

[21:10] <pmurias> jnthn: it would be great if you had a quick look at the fdbebadd1dbffddc470511a04bfb7f859cb276bb commit in nqp, as I'm not 100% it's the right way to fix that

[21:10] <TimToady> we intentially made array init follow the one-arg rule

[21:11] <jnthn> TimToady: I was talking about the .Str of Range one. The one-arg rule array is plenty clear (to me :)).

[21:12] <jnthn> pmurias: I'm...curious why it's needed

[21:12] <TimToady> oh, I think it's correct to expand under Str

[21:12] <TimToady> Str is not gist

[21:12] <lizmat> m: sub a(@a) { say @a.perl }; a 1..5; my $r = 1..5; a $r   # here there's no difference

[21:12] <camelia> rakudo-moar a07a2e: OUTPUT¬´1..5‚ê§1..5‚ê§¬ª

[21:12] <jnthn> pmurias: It looks like a register leak too

[21:13] <lizmat> m: my @r = 1..5; say @a.perl

[21:13] <camelia> rakudo-moar a07a2e: OUTPUT¬´===SORRY!=== Error while compiling <tmp>‚ê§Variable '@a' is not declared‚ê§at <tmp>:1‚ê§------> my @r = 1..5; say ‚èè@a.perl‚ê§¬ª

[21:13] <jnthn> $protil.result_reg is never released, bloating the number of needed registers

[21:13] <lizmat> m: my @r = 1..5; say @r.perl

[21:13] <camelia> rakudo-moar a07a2e: OUTPUT¬´[1, 2, 3, 4, 5]‚ê§¬ª

[21:13] <TimToady> Str is not Perl either

[21:13] <TimToady> Str is for printing things out to a line printer

[21:13] <jnthn> Ah, right. Makes sense.

[21:14] <lizmat> m: my $rt = 1..5; my @r = $r; say @r.perl

[21:14] <camelia> rakudo-moar a07a2e: OUTPUT¬´===SORRY!=== Error while compiling <tmp>‚ê§Variable '$r' is not declared. Did you mean '@r'?‚ê§at <tmp>:1‚ê§------> my $rt = 1..5; my @r = ‚èè$r; say @r.perl‚ê§¬ª

[21:14] <lizmat> m: my $r = 1..5; my @r = $r; say @r.perl

[21:14] <camelia> rakudo-moar a07a2e: OUTPUT¬´[1..5,]‚ê§¬ª

[21:14] <lizmat> the behaviour of my @r = $r / 1..5 seems inconsistent with a($r) / a(1..5)

[21:15] <jnthn> That has to be right, in so far as `my @r = $any-Scalar-here` we'd expect to behave as a single item

[21:15] <jnthn> Nope

[21:15] <jnthn> They're not the same thing

[21:15] <jnthn> = is assignment

[21:15] <jnthn> we *bind* signatures

[21:15] <lizmat> ah, good point  :-)

[21:15] <lizmat> yup, ok

[21:15] <lizmat> then I need to fix some tests

[21:16] <lizmat> because the tests don't really test the right thing  :-)

[21:18] <jnthn> :)

[21:19] <El_Che> lizmat: https://nxadm.wordpress.com/2016/08/20/please-test-first-release-of-syntastic-perl6-a-vim-syntax-checker/

[21:19] <lizmat> El_Che++

[21:19] <El_Che> I should reread the damn thing to get spelling errors out :)

[21:29] <dalek> roast: 6ac1ea3 | lizmat++ | S02-types/range.t:

[21:29] <dalek> roast: Fix some Range checks

[21:29] <dalek> roast:

[21:29] <dalek> roast: They were dependent on potentially incorrect Stringification.

[21:29] <dalek> roast: review: https://github.com/perl6/roast/commit/6ac1ea396f

[21:32] <dalek> roast/6.c-errata: 4258f6d | lizmat++ | S02-types/range.t:

[21:32] <dalek> roast/6.c-errata: Fix some Range checks

[21:32] <dalek> roast/6.c-errata:

[21:32] <dalek> roast/6.c-errata: They were dependent on potentially incorrect Stringification.

[21:32] <dalek> roast/6.c-errata: review: https://github.com/perl6/roast/commit/4258f6d1f0

[21:57] <dalek> rakudo/nom: 5a4ec53 | lizmat++ | src/core/Baggy.pm:

[21:57] <dalek> rakudo/nom: Make MMD lookup handle Baggy.ACCEPTS

[21:57] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5a4ec53421

[22:22] <lizmat> good night, #perl6-dev!

[22:22] <ZoffixLappy> night

[22:22] <jnthn> 'night, lizmat o/

[22:50] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Make MMD lookup handle Baggy.ACCEPTS'

[22:50] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/153851119 https://github.com/rakudo/rakudo/compare/a07a2e173cfc...5a4ec53421a7

[22:50] <dalek> rakudo/nom: ee621d1 | dmaestro++ | lib/Test.pm6:

[22:50] <dalek> rakudo/nom: There is no 'done', only 'done-testing'

[22:50] <dalek> rakudo/nom:

[22:50] <dalek> rakudo/nom: Clean up a few places done (obsolete) or done_testing (perl 5 legacy)

[22:50] <dalek> rakudo/nom: were used in the comments.

[22:50] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ee621d1cbf

[22:50] <dalek> rakudo/nom: 668dc5c | lizmat++ | lib/Test.pm6:

[22:50] <dalek> rakudo/nom: Merge pull request #843 from dmaestro/prune_references_to_obsolete_done

[22:50] <dalek> rakudo/nom:

[22:50] <dalek> rakudo/nom: There is no 'done', only 'done-testing'

[22:50] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/668dc5c401

[23:18] <El_Che> lizmat: I don't know if this is weekly material, but here it goes: https://nxadm.wordpress.com/2016/08/21/vim-as-a-perl-6-editor/

[23:19] <AlexDaniel> .oO( Perl¬†6 as a Vim editor‚Ä¶ )

[23:20] <El_Che> hehe

[23:31] <ZoffixLappy> New blog post: "I Botched a Perl 6 Release And Now a Robot Is Taking My Job": http://perl6.party/post/I-Botched-A-Perl-6-Release-And-Now-A-Robot-Is-Taking-My-Job

[23:51] <timotimo> hah :D

[23:51] <ZoffixLappy> :)
