[07:14] <moritz> http://irclog.perlgeek.de/perl6-dev/today works now

[07:15] <moritz> I had some negative caching of channel existence

[09:29] <nine> psch: this is very odd. 2 EVALs actually work just fine before the third, which should be just the same, breaks. The third does seem to be compiled differently, like not properly detecting that it's run during precompilation.

[09:35] <psch> nine: that does indeed sound very odd

[09:36] <nine> At least it would seem like we're quite close to have it working

[09:37] <psch> well, i'd guess that depends on why it the third EVAL breaks

[09:45] <bartolin> psch: I think I figured out what went wrong with $fh.slurp-rest(:bin) after $fh.get. looks like we read all the data (it's a small file) into readBuffer when calling readlinechompfh. Later we only looked in the channel -- which had no more data, since it was read to readBuffer already.

[09:45] <bartolin> with the following patch I get the expected result: https://gist.github.com/usev6/788d5ee384897674733aeef2a83aab22

[09:46] <psch> bartolin: neat!  can you add that to your PR?

[09:47] <bartolin> btw, did you figure out how to create an VMArrayInstance_u8? I think, I managed to do that.

[09:47] <bartolin> psch: I'm not really sure if my patch could break other cases. nqp's 'make test' had no regressions at least ...

[09:48] <bartolin> but, yes, I'll add that to my PR

[09:48] <psch> bartolin: well, nqp 'make test' is somewhat basic... i'd run spectest, too fwiw

[09:48] <bartolin> only that 'make spectest' doesn't work at the moment :-/

[09:49] <psch> huh, it doesn't?

[09:49] <bartolin> I'll try it with an older version of rakudo

[09:49] <psch> is that because Test doesn't work..?

[09:50] <bartolin> does it? the precomp problem is in the way

[09:50] <psch> ah

[09:50] <psch> yeah i think that's cause nine++ didn't push his rakudo-level fix there

[09:50] <psch> well, or an nqp bump either

[09:51] <psch> although i suppose the precomp EVAL fix still belongs in the same area, so that's understandable

[09:51] <bartolin> I tried to build with --gen-nqp=master, but that was not enough

[09:52] <psch> bartolin: https://gist.github.com/niner/48daf2fef50e8453fd6dc71e4b3eef03

[09:52] <psch> i think https://gist.github.com/niner/44ab8449ab5b9d0837dca69e525a59f3 should be upstream already..?

[09:52] <psch> well, minus the debug output :)

[09:53] <bartolin> maybe I'll try my patch on d7698f3 -- I had a clean spectest run with rakudo-j on that commit

[09:53] * bartolin is looking at the gists

[10:03] <bartolin> hmm, no, looks like that patches are not in rakudo/nqp, yet

[10:16] <psch> bartolin: fwiw, i'm not sure how much of that is still needed with f6670c88e

[10:43] <nine> If you have a fix for slurp-rest(:bin), I won't need to push my rakudo level workaround :)

[10:52] <bartolin> nine: i'm running a spectest on an older commit now (it'll take some time)

[13:35] <pmurias> should dalek report commits here rathern then to #p6dev?

[13:35] <timotimo> yeah

[13:36] <timotimo> for all intents and purposes, #p6dev doesn't exist

[14:11] <bartolin> well, spectest for rakudo-j (on commit d7698f3) was fine (only two failures -- one known and the other for a newly added test)

[14:11] <bartolin> on the other hand slurp-rest seems undertested

[14:12] <bartolin> I updated my PR (https://github.com/perl6/nqp/pull/286)

[14:14] <timotimo> whoa

[14:18] <bartolin> oops, it fails for nqp-m. looking ...

[14:35] <bartolin> aha, pmurias++ renamed the test files. I updated the failing tests accordingly: https://github.com/perl6/nqp/commit/10f2b451a477b9493c284133d523d9da12317c5d

[14:35] * bartolin looks around for dalek

[14:35] * RabidGravy wonders why dalek isn't announcing the right commits here

[14:36] <bartolin> is it possible to activate another run of travis for a PR?

[14:39] <RabidGravy> if it failed then there will be a little "refresh" button, but not if it passed

[14:40] <bartolin> yeah, it failed because of the renamed test files: https://github.com/perl6/nqp/pull/286

[14:41] <bartolin> hmm, can't find that "refresh" button

[14:43] <RabidGravy> maybe you need to be an "owner", it should be on the right hand side of the build summary near the commit id

[14:50] <bartolin> well, it's not there (or I'm blind). anyway, I think the build failure was not related to my patches

[15:25] <bartolin> just saw that dalek still reports roast and nqp commits to #p6dev

[15:29] <timotimo> ah

[15:30] <timotimo> fixed roast

[15:30] <timotimo> and nqp

[15:30] <timotimo> i thought i had already fixed nqp

[15:31] <[Coke]> http://news.perlfoundation.org/2016/05/yapc-updates.html # craigslist++

[15:32] <timotimo> craigslist++ # also a fantastic song by weird al yankovic

[16:03] <cognominal> is TimTaody still the "artist in residence" at craiglist++ ?

[16:19] <pmurias> anyone figured out the travis failure?

[16:20] * pmurias fixes it

[16:23] <pmurias> ahh, it's already fixed, usev6++

[16:33] <nine> Can I use "echo 1 > ..." in a Makefile without screwing up Windows?

[16:37] <[Coke]> nine - works here in a command prompt

[16:40] <dalek> nqp: 912b502 | (Pawel Murias)++ | src/vm/js/Operations.nqp:

[16:40] <dalek> nqp: [js] Implement nqp::chain.

[16:40] <dalek> nqp: review: https://github.com/perl6/nqp/commit/912b502eb8

[16:40] <dalek> nqp: b3a1014 | (Pawel Murias)++ | t/qast/01-qast.t:

[16:40] <dalek> nqp: Test nqp::chain.

[16:40] <dalek> nqp: review: https://github.com/perl6/nqp/commit/b3a1014010

[16:57] <[Tux]> This is Rakudo version 2016.04-200-gad82657 built on MoarVM version 2016.04-134-g9879233

[16:57] <[Tux]> test            20.140

[16:57] <[Tux]> test-t          13.034

[16:57] <[Tux]> csv-parser      34.652

[16:59] <RabidGravy> so it's creeping back down again :)

[17:00] <timotimo> yeah, seembs like we've stabilized

[17:02] <RabidGravy> well I don't quite mean to quit the whole server, but hey

[17:02] <timotimo> %)

[17:10] <nine> Can I call the parent class' BUILD submethod?

[17:11] <timotimo> i think you can self.ClassName::BUILD(...)

[17:17] <jnthn> nine: Won't that have already happened anyway as part of normal object construction?

[17:17] <jnthn> m: class P { submethod BUILD() { say "p" } }; class C is P { submethod BUILD() { say "c" } }; C.new

[17:18] <timotimo> what if nine is implementing some optimization that can skip BUILD for us if it's not necessary? :D

[17:18] <jnthn> /o\

[17:18] <jnthn> :)

[17:18] <jnthn> Food time; bbl :)

[17:19] <timotimo> i was considering forcing buildplans to have their opcode 14 (the one that's only relevant in BUILD_LEAST_DERIVED) all at the end, so that when the BUILDALL runner encounters one it can immediately exit

[17:45] <nine> Somehow it just doesn't seem to work with CompUnit::Repository::Installation

[18:21] <nine> Err... No concretization found for CompUnit::Repository::Locally?

[19:27] <RabidGravy> If anyone wants to take a look at https://github.com/rakudo/rakudo/pull/769 that would be cool :)

[20:33] <dalek> rakudo/nom: 5bff97c | timotimo++ | src/Perl6/Compiler.nqp:

[20:33] <dalek> rakudo/nom: elaborate on different kinds of profiles for --profile

[20:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5bff97c2cd

[20:33] <dalek> rakudo/nom: 9db9102 | moritz++ | src/Perl6/Compiler.nqp:

[20:33] <dalek> rakudo/nom: Merge pull request #756 from rakudo/update_profile_usage

[20:33] <dalek> rakudo/nom:

[20:33] <dalek> rakudo/nom: elaborate on different kinds of profiles for --profile

[20:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9db9102dd3

[20:34] <timotimo> oh, accepted it unmodified?

[20:35] <dalek> rakudo/nom: 0ee8331 | Xliff++ | src/core/Match.pm:

[20:35] <dalek> rakudo/nom: Match infix eqv (#739)

[20:35] <dalek> rakudo/nom:

[20:35] <dalek> rakudo/nom: Adds infix:<eqv> for Match objects

[20:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0ee8331e6d

[20:37] <dalek> roast: 99e759c | (Zoffix Znet)++ | S06-advanced/wrap.t:

[20:37] <dalek> roast: Rewrite test to avoid throws-like()

[20:37] <dalek> roast:

[20:37] <dalek> roast: The use of throws-like here makes the pass/fail of the test depend on the specifics of implementation of throws-like. See https://github.com/rakudo/rakudo/pull/743

[20:37] <dalek> roast: review: https://github.com/perl6/roast/commit/99e759c50d

[20:37] <dalek> roast: 9482e54 | moritz++ | S06-advanced/wrap.t:

[20:37] <dalek> roast: Merge pull request #113 from zoffixznet/rework-nextsame

[20:37] <dalek> roast:

[20:37] <dalek> roast: Rewrite test to avoid throws-like()

[20:37] <dalek> roast: review: https://github.com/perl6/roast/commit/9482e5451e

[20:37] <dalek> rakudo/nom: e239f6e | (Zoffix Znet)++ | / (2 files):

[20:37] <dalek> rakudo/nom: Implement alternate ways to call `subtest` from Test.pm6 (#743)

[20:37] <dalek> rakudo/nom:

[20:37] <dalek> rakudo/nom: * Implement alternate calling methods for `subtest`

[20:37] <dalek> rakudo/nom:

[20:37] <dalek> rakudo/nom: * Fix incorrect sub names in test

[20:37] <dalek> rakudo/nom:

[20:37] <dalek> rakudo/nom: * Add diag() on start of subtest

[20:37] <dalek> rakudo/nom:

[20:37] <dalek> rakudo/nom: This makes it easier to see where the subset starts in the output

[20:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e239f6ee3e
