[05:31] <dalek> roast: 99eacc7 | usev6++ | S32-list/ (2 files):

[05:31] <dalek> roast: Unfudge two tests for RT #128720 for rakudo-j

[05:31] <dalek> roast: review: https://github.com/perl6/roast/commit/99eacc7c29

[05:31] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128720

[06:35] <TimToady> jnthn: I think the problem with RT #128550 is that in charrange in src/vm/moar/QAST/QASTRegexCompilerMAST.nqp, the final case is using ordat, which I suspect is the wrong thing for a synthetic

[06:35] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128550

[06:54] <nine> [Coke]: you can install your modules as root. That's just the same as when distros package the modules. We can still write to ~/.perl6 at runtime.

[07:00] <[Tux]> This is Rakudo version 2016.07.1-145-g3284025 built on MoarVM version 2016.07-16-g85b6537

[07:00] <[Tux]> test            15.434

[07:00] <[Tux]> test-t           7.350

[07:00] <[Tux]> csv-parser      16.283

[07:03] <[Tux]> $ panda install p6doc FAIL

[07:03] <[Tux]> t/trailing_whitespace.t (Wstat: 256 Tests: 342 Failed: 1)

[07:03] <[Tux]> Failed test:  30

[07:03] <[Tux]> # Failed test 'must not have any trailing whitespace in doc/Language/functions.pod6'

[07:38] <[Tux]> I have a separate .pod file for the documentation, because it is huge. panda install . or panda install Text::CSV however does not install that pod, so p6doc cannot find it

[07:39] <[Tux]> are there separate actions I need to take (in META6) in order to have the documentation available on install?

[07:43] <gfldex> [Tux]: you may be better of with zef instead of panda

[07:44] * [Tux] installs zef …

[07:46] <[Tux]> ==> Successfully installed zef

[07:46] <[Tux]> but, as with p6doc, it failed to install the symlink, so it cannot find the command :/

[07:48] <gfldex> p6doc is using CompUnit to look for modules. I don't know if zef is aware of .pod6 yet.

[07:50] <[Tux]> I have .pod, no .pod6

[07:51] <gfldex> if you want to unconfuse github (and windows) you may want to rename it to .pod6

[08:01] <[Tux]> I can, but that does not change panda/zef behaviour in (not) installing it

[08:01] <[Tux]> should I mention it separately in META6?

[08:02] <gfldex> ugexe: ^^^

[08:30] <stmuk> Tux: you may have to write a Build.pm to install your docs

[08:31] <stmuk> you probably can add it to the META6

[08:32] <stmuk> depends on the location of files

[08:59] * moritz really hopes there's a declarative way to install documentation

[09:20] <jnthn> Morning, #perl6-dev

[09:24] <jnthn> TimToady: Yes, anything using ordat really wants a careful looking at...

[10:38] <dalek> nqp: 946b078 | jnthn++ | tools/build/MOAR_REVISION:

[10:38] <dalek> nqp: Bump MOAR_REVISION for cancelnotify op.

[10:38] <dalek> nqp: review: https://github.com/perl6/nqp/commit/946b07848d

[10:38] <dalek> nqp: 035f4e8 | jnthn++ | src/vm/moar/QAST/QASTOperationsMAST.nqp:

[10:38] <dalek> nqp: Map nqp::cancelnotify op for MoarVM.

[10:38] <dalek> nqp: review: https://github.com/perl6/nqp/commit/035f4e88a6

[10:46] <dalek> nqp: 714b8eb | jnthn++ | src/vm/jvm/ (2 files):

[10:46] <dalek> nqp: Add cancelnotify for JVM backend.

[10:46] <dalek> nqp: review: https://github.com/perl6/nqp/commit/714b8ebe0f

[11:01] <dalek> rakudo/nom: 69d1528 | jnthn++ | tools/build/NQP_REVISION:

[11:01] <dalek> rakudo/nom: Bump NQP_REVISION for cancelnotify op.

[11:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/69d1528212

[11:01] <dalek> rakudo/nom: 0aedc6e | jnthn++ | src/core/Supply.pm:

[11:01] <dalek> rakudo/nom: Better support eventual cancellations.

[11:01] <dalek> rakudo/nom:

[11:01] <dalek> rakudo/nom: Some things take time to cancel, which can lead to races if the

[11:01] <dalek> rakudo/nom: cancellation frees up a resource (such as a network port). Therefore,

[11:01] <dalek> rakudo/nom: we allow such cancellations to return a Promise, which is awaited.

[11:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0aedc6e08f

[11:01] <dalek> rakudo/nom: 9cbd855 | jnthn++ | src/core/IO/Socket/Async.pm:

[11:01] <dalek> rakudo/nom: Make socket listener cancellation Promise-y.

[11:01] <dalek> rakudo/nom:

[11:01] <dalek> rakudo/nom: This means that the close operation will not return until the socket

[11:01] <dalek> rakudo/nom: really has been closed. This fixes the instability in the async

[11:01] <dalek> rakudo/nom: socket tests that led to a test failure around 1 in 20 times.

[11:03] <pmurias> jnthn: is rebootstrapping stage0 a big deal, not sure if I should do it to get rid of the $CONTROL_RETURN hack

[11:04] <dalek> nqp: 7a8be7c | (Pawel Murias)++ | src/vm/js/nqp-runtime/package.json:

[11:04] <dalek> nqp: [js] Update repository in package.json of nqp-runtime.

[11:04] <dalek> nqp: review: https://github.com/perl6/nqp/commit/7a8be7cf8a

[11:04] <dalek> nqp: 05fe569 | (Pawel Murias)++ | src/vm/js/nqp-runtime/ (3 files):

[11:04] <dalek> nqp: [js] Drop es6-map dependency, we are targeting EcmaScript 6 now.

[11:05] <jnthn> pmurias: Not really, just bumps up the repo size a bit

[11:06] <dalek> roast: d9249ea | jnthn++ | S17-lowlevel/lock.t:

[11:06] <dalek> roast: Correct test that did unprotected array writes.

[11:06] <dalek> roast:

[11:06] <dalek> roast: It's only safe to grab an *already vivified* element of an array and

[11:06] <dalek> roast: write to it in a cross-thread way. Since @out's elements were never

[11:06] <dalek> roast: vivified, this led to concurrent binds - and thus resizes - to the

[11:06] <dalek> roast: array, and thus incorrect results and crashes.

[11:06] <dalek> roast:

[11:06] <dalek> roast: The SEGV that sometimes happened needs addressing too; that already

[11:06] <dalek> roast: has an RT issue and will be covered by another test that actually

[11:06] <dalek> roast: wants to create that condition, rather than this one which did it by

[11:06] <dalek> roast: accident.

[11:06] <dalek> roast: review: https://github.com/perl6/roast/commit/d9249ea66d

[11:36] <dalek> nqp: 0769714 | (Pawel Murias)++ | src/vm/js/Compiler.nqp:

[11:36] <dalek> nqp: [js] Remove old hack.

[11:36] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0769714dca

[11:36] <dalek> nqp: 1e6666d | (Pawel Murias)++ | src/vm/js/Compiler.nqp:

[11:36] <dalek> nqp: [js] Explain a HACK better.

[11:36] <dalek> nqp: review: https://github.com/perl6/nqp/commit/1e6666d6bf

[11:58] <travis-ci> Rakudo build errored. Jonathan Worthington 'Better support eventual cancellations.

[11:58] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/151180613 https://github.com/rakudo/rakudo/compare/328402599c16...0aedc6e08fef

[11:58] <buggable> travis-ci, one build failed due to the timeout. No other failures.

[12:11] <moritz> RabidGravy: you should make change buggable to not be triggered by other bots

[12:12] <moritz> a typical approach is to require an explicit colon to trigger the bot

[12:12] <ilmari> having it tell us why the failure happened is useful, though

[12:13] <timotimo> i appreciate getting immediate feedback from a travis-ci link that it's a useless "error" warning

[12:13] <ilmari> t/04-nativecall/16-rt125408.t seems to hang on JVM

[12:13] <unmatched}> moritz: buggable is my bot and its explicit purpose is to announce spurious failures, so we don't have to do anything about them

[12:13] <ilmari> but not with --gen-nqp=master

[12:14] <moritz> unmatched}: oh, ok

[12:15] <geekosaur> I think the confusing part is it looks like it is responding to travis-ci

[12:15] <geekosaur> perhaps just drop that part (maybe only for travis-ci)?

[12:31] <dalek> rakudo/nom: e829a98 | lizmat++ | / (2 files):

[12:31] <dalek> rakudo/nom: Add 29 digit ranges to magic auto-inc/dec

[12:31] <dalek> rakudo/nom:

[12:31] <dalek> rakudo/nom: Inspired by https://www.reddit.com/r/perl6/comments/4wyod3/one_liner_tuesday/

[12:31] <dalek> rakudo/nom: and ff26dd8e5e64068c6a  (aka RT #128868)

[12:31] <dalek> rakudo/nom:

[12:31] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128868

[12:31] <dalek> rakudo/nom: The one-liner in question that was used to find missing digit ranges:

[12:31] <dalek> rakudo/nom:

[12:31] <dalek> rakudo/nom: .say for ((^0xffff)>>.chr.map({"{.ord.fmt("0x%05X")} {.uniname} = $_" if .uniprop eq "Nd" && .uniname.contains("DIGIT ZERO") && (.ord + 9).chr.uniname.contains("DIGIT NINE")}))

[12:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e829a98c42

[12:37] <unmatched}> https://travis-ci.org/rakudo/rakudo/builds/151180613

[12:37] <buggable> ✓ [travis build above] One job failed due to the timeout. No other failures.

[12:42] <jnthn> Neat :)

[12:44] <lizmat> thanks to the wonders of a generate script, this was rather simple

[12:44] <lizmat> I was tempted to turn the one-liner into a script that would generate the generate script  :-)

[12:51] <JimmyZ> jnthn: looks like missing a change : https://github.com/rakudo/rakudo/blob/9cbd8550e041d6c8f049fce038a4821cd3304429/src/core/IO/Socket/Async.pm#L74 # though I am sure.

[12:51] <JimmyZ> *not sure

[12:52] <jnthn> I'm not sure either...though still want to review the bunch of places we cancel

[12:52] <JimmyZ> :)

[12:52] <jnthn> That one isn't likely to be problematic, however

[12:52] <JimmyZ> async is hard ,hah

[12:52] <jnthn> The listen one was because you actually care about the port being freed up :)

[12:52] <jnthn> Which is why we had occasionally IO-Socket-Async.t fails

[12:55] <[Coke]> nine: I ended up giving up on the perl6 user entirely; Not worth figuring out right now why the panda install process isn't seeing the env vars I set. (and therefore failing to download or install anything)

[12:57] <geekosaur> if you were using sudo, remember that it resets environment variables

[13:08] <nine> Don't know which of the great hotels to book for YAPC? No problem! Just wait till 2 weeks before the conference and scramble to find one that has any room available. Works every time :/

[13:10] <RabidGravy> moritz, buggable ain't nothing to do with me :)

[13:12] <geekosaur> it's the nick of the week formerly known as zoffix >.>

[13:20] <DrForr> Sounds like the scheduling.

[13:29] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Add 29 digit ranges to magic auto-inc/dec

[13:29] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/151200213 https://github.com/rakudo/rakudo/compare/9cbd8550e041...e829a98c4282

[14:16] <lizmat> jnthn: seems like the last updates borked --profile

[14:17] <lizmat> $ perl6 --profile -e 'my $a'

[14:17] <lizmat> Writing profiler output to profile-1470838613.57616.html

[14:17] <lizmat> ===SORRY!===

[14:17] <lizmat> SC not yet resolved; lookup failed

[14:19] <jnthn> lizmat: timotimo noticed that a day or so ago, so it's not the very latest updates, at least

[14:20] <lizmat> well, let me put it this way: late yesterday evening I was doing profiles

[14:20] <lizmat> now I'm not   :-(

[14:20] <jnthn> Hm, it was the heap profiler he noticed it in though. Odd...

[14:20] <lizmat> so I think it's the last NQP_REVISION bump

[14:21] <lizmat> which brought in a new Moar

[14:23] * jnthn doesn't see any likely candidates in the NQP or Moar recent changes :(

[14:23] <jnthn> So it's gonna have to be a bissect

[14:25] * mst declares today 'honorary second monday' then

[14:25] <jnthn> I'm currently in the middle of fixing an icky SEGV though, so it'll be a bit before I can do it.

[14:26] <[Coke]> geekosaur: was using the "USER" directive in a dockerfile. no clue what that does under the covers. :)

[14:27] <[Coke]> man, I am distractable.

[14:27] <[Coke]> RT: 1329; @LARRY: 14; CONC: 25; GLR: 6; JVM: 66; LTA: 114; NEW: 858; NYI: 82; OSX: 5; PERF: 22; POD: 17; PRECOMP: 10; RFC: 31; SEGV: 32; STAR: 5; TESTNEEDED: 15; TODO: 10; UNI: 28; UNTAGGED: 495; WEIRD: 3

[14:28] <[Coke]> note that @LARRY/RFC/NYI/TODO probably -all- need devs to review them to make sure we still want 'em.

[14:28] <geekosaur> (distractable. new bot? :p )

[14:28] <unmatched}> :D

[14:29] <jnthn> At random time intervals, posts a link to a photo of a kitten? :)

[14:29] <dalek> rakudo/nom: 7501ee5 | lizmat++ | src/core/Array.pm:

[14:29] <dalek> rakudo/nom: Make Array.splice(offset,size,@) about 10x faster

[14:29] <dalek> rakudo/nom:

[14:29] <dalek> rakudo/nom: This concludes my work on Array.splice for now

[14:29] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7501ee54f8

[14:33] <lizmat> jnthn: perl6 --profile -e ''   # golfed

[15:08] <dalek> rakudo/nom: 5dd91d8 | lizmat++ | src/core/Backtrace.pm:

[15:08] <dalek> rakudo/nom: Backtrace::Frame.is-(hidden|routine) return Bool

[15:08] <dalek> rakudo/nom:

[15:08] <dalek> rakudo/nom: Spotted by sena_kun++

[15:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5dd91d8fbe

[15:09] <ugexe> gfldex, [Tux] : There is no mechanism for pod installation yet. I liked the idea of implementing install/uninstall hooks at the CUR level, making p6doc a type of CUR itself, and having p6doc use the install/uninstall hooks to extend the installation process

[15:10] <ugexe> stmuk^

[15:32] <dalek> nqp: 61157e7 | (Pawel Murias)++ | src/vm/js/nqp-runtime/reprs.js:

[15:32] <dalek> nqp: [js] Use Object.setPrototypeOf instead of the deprecated way of setting __proto__.

[15:32] <dalek> nqp: review: https://github.com/perl6/nqp/commit/61157e7a82

[15:32] <dalek> nqp: 6d10691 | (Pawel Murias)++ | src/vm/js/Compiler.nqp:

[15:32] <dalek> nqp: [js] Fix typo.

[15:32] <dalek> nqp: review: https://github.com/perl6/nqp/commit/6d10691762

[15:32] <dalek> nqp: aaac2d0 | (Pawel Murias)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp:

[15:32] <dalek> nqp: Stop the compilation of the nqp::for op from changing the QAST.

[15:32] <dalek> nqp: review: https://github.com/perl6/nqp/commit/aaac2d0f4e

[15:32] <dalek> nqp: 6ad5470 | (Pawel Murias)++ | src/vm/js/Operations.nqp:

[15:32] <dalek> nqp: [js] Remove a hack no longer needed after fixing a bug in the moar backend.

[15:32] <dalek> nqp: review: https://github.com/perl6/nqp/commit/6ad547033d

[15:34] <dalek> nqp: d218ad1 | (Pawel Murias)++ | src/vm/js/nqp-runtime/core.js:

[15:34] <dalek> nqp: [js] Remove polyfill TODO as we are targeting ECMAScript 6 now.

[15:34] <dalek> nqp: review: https://github.com/perl6/nqp/commit/d218ad15cd

[18:01] <[Coke]> Back to working on https://github.com/coke/perl6-profiler-html/issues - anything we'd like to see in the profiler html template? looking to minimize the generated html/js/css, convert to angular...

[18:01] <[Coke]> er, angular 2

[18:07] <timotimo> ooooooh

[18:07] <timotimo> please make the call graph deep-searchable

[18:08] <[Coke]> timotimo: add an issue? ;)

[18:20] <timotimo> ok

[18:23] <[Coke]> OHNOES MORE TIX

[18:24] <timotimo> oh well

[18:25] <[Coke]> :)

[18:25] <[Coke]> I have to learn angular 2 for work, this will be a good thing to practice on.

[18:28] <timotimo> yup

[18:29] <timotimo> i'm going to refrain from making a ticket that reads "make it faster"

[18:37] <[Coke]> ... that is implied, yes.

[18:37] <timotimo> :)

[18:47] <[Coke]> ... wow, angular 2 ain't small

[18:48] <timotimo> maybe we should build the thing with WebAssembly right away

[19:20] * lizmat hopes that --profile will be operational soon

[19:21] <timotimo> was it AlexDaniel who could run a custom bisect for me?

[19:22] <unmatched}> Yeah

[19:23] <timotimo> AlexDaniel: could you try to find out what commit made --profile give the error message it currently gives?

[19:43] <AlexDaniel> timotimo: sure

[19:46] <timotimo> thank you

[19:48] <dalek> rakudo/nom: 5719826 | lizmat++ | src/core/Any-iterable-methods.pm:

[19:48] <dalek> rakudo/nom: We don't need to pass on as named param internally

[19:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/571982677b

[19:49] <AlexDaniel> timotimo: 69d15282129bfa08f57263fd446c34f43576844a

[19:49] <lizmat> eh, that much was clear to me already  :-)

[19:49] <AlexDaniel> which was expected, I think

[19:49] <lizmat> yeah, but good to know it *is* that rakudo commit  :-)

[19:50] <timotimo> huh, that's newer than i thought

[19:51] <timotimo> potentially because i tend to work with nqp from master ...

[19:51] <lizmat> timotimo: I run 10s of profiles avery day

[19:51] <lizmat> *every

[19:51] <lizmat> and it worked late last night  :-)

[19:53] <timotimo> oh

[19:53] <timotimo> oh hey we can just bisect nqp and ignore rakudo

[19:53] <timotimo> that could make it fast enough to work

[19:54] <AlexDaniel> unfortunately I have nothing to help with that :(

[19:54] <timotimo> no worries

[19:54] <timotimo> i'll do it locally

[19:55] <AlexDaniel> \o/

[19:55] <lizmat> timotimo: pretty sure it's the MOAR_REVISION bump  :-)

[19:56] <timotimo> *shrug*

[19:59] <timotimo> actually ...

[19:59] <timotimo> i've got it both crash and not crash without changing what moarvm i'm running

[20:01] <jnthn> Pretty much all the recent MoarVM changes were concurrency fixes, so I'm very curious which change it'll turn out to be...

[20:01] <timotimo> last step.

[20:02] <timotimo> 2f9c5d5a6a9c1b0243fd59a7b827ad1f99d113cb is the first bad commit

[20:02] <timotimo> Set the cursor_type for all regexes compiled by NQP.

[20:02] <lizmat> ah?

[20:03] <lizmat> jnthn: sorry  :-)

[20:03] <jnthn> Ho...hmm.

[20:03] <timotimo> well, something's got a reference now that it didn't use to have

[20:03] <jnthn> So it was an NQP one...

[20:04] <jnthn> git show 2f9c5d5a6a9c

[20:04] <timotimo> indeed

[20:04] <jnthn> ...wow I'm tired :P

[20:04] <AlexDaniel> timotimo: are you sure?

[20:04] <timotimo> kind of

[20:04] <AlexDaniel> timotimo: can you try d68b9b375f7bd5d31da95a8b9d457827f0413422 too?

[20:05] <jnthn> timotimo: ooc, is --profile busted in NQP by this change?

[20:05] <AlexDaniel> which is a child of 2f9c5d

[20:05] <AlexDaniel> it says “Fix 2f9c5d5” so it's probably worth a try

[20:06] <timotimo> OK

[20:06] <timotimo> that one's also broken

[20:08] <timotimo> jnthn: yes, i'm only testing NQP, not rakudo

[20:11] <timotimo> food time! TTYL

[20:41] <dalek> rakudo/nom: 5b50e27 | lizmat++ | src/core/Any-iterable-methods.pm:

[20:41] <dalek> rakudo/nom: .squish|.unique|.repeated now pass on is-lazy

[20:41] <dalek> rakudo/nom:

[20:41] <dalek> rakudo/nom: Previously, they would always return False

[20:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5b50e279ba

[20:44] <dalek> rakudo/nom: c322e1e | lizmat++ | src/core/Any-iterable-methods.pm:

[20:44] <dalek> rakudo/nom: first() returns a scalar, which is always not lazy

[20:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c322e1e998

[21:00] * lizmat wonders whether either a ":doesn't-slip' named parameter to .map would make sense

[21:00] <lizmat> it would allow the iterating logic to not have to check for Slips

[21:03] <lizmat> maybe it should be called :raw , so it could be used even if you did return a Slip and didn't want it slipped ?

[21:03] <lizmat> this would make .WHICH making a lot faster in a lot of cases

[21:04] * lizmat gets some shuteye first

[21:04] <lizmat> good night, #perl6-dev!

[21:05] <timotimo> gnite liz!

[23:53] <unmatched}> s: Date, 'new', \()

[23:53] <SourceBaby> unmatched}, Sauce is at https://github.com/rakudo/rakudo/blob/c322e1e/src/core/Dateish.pm#L34

[23:53] <unmatched}> s: Date, 'new', \('2016-06-06')

[23:53] <SourceBaby> unmatched}, Sauce is at https://github.com/rakudo/rakudo/blob/c322e1e/src/core/Date.pm#L36

[23:53] <unmatched}> :D
