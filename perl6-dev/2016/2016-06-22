[03:24] <Zoffix> m: class { has Str:D $.foo␤}

[03:24] <camelia> rakudo-moar 5ca24c: OUTPUT«===SORRY!=== Error while compiling <tmp>␤Variable definition of type Str:D requires an initializer␤at <tmp>:2␤------> <BOL>⏏}␤»

[03:24] <Zoffix> m: class { has Str:D $.foo;␤}

[03:24] <camelia> rakudo-moar 5ca24c: OUTPUT«===SORRY!=== Error while compiling <tmp>␤Variable definition of type Str:D requires an initializer␤at <tmp>:1␤------> class { has Str:D $.foo⏏;␤    expecting any of:␤        constraint␤»

[03:24] <Zoffix> LTA

[03:27] <Zoffix> m: try { class { has Str:D $.foo;␤}; CATCH { say .^name }

[03:27] <camelia> rakudo-moar 5ca24c: OUTPUT«===SORRY!=== Error while compiling <tmp>␤Variable definition of type Str:D requires an initializer␤at <tmp>:1␤------> try { class { has Str:D $.foo⏏;␤    expecting any of:␤        constraint␤»

[03:27] <Zoffix> m: try { EVAL 'class { has Str:D $.foo;␤};'; CATCH { say .^name }

[03:27] <camelia> rakudo-moar 5ca24c: OUTPUT«===SORRY!=== Error while compiling <tmp>␤Missing block␤at <tmp>:2␤------> };'; CATCH { say .^name }⏏<EOL>␤»

[03:27] <Zoffix> m: try { EVAL 'class { has Str:D $.foo;␤};'; CATCH { say .^name } }

[03:27] <camelia> rakudo-moar 5ca24c: OUTPUT«X::Syntax::Variable::MissingInitializer␤===SORRY!=== Error while compiling /home/camelia/EVAL_0␤Variable definition of type Str:D requires an initializer␤at /home/camelia/EVAL_0:1␤------> class { has Str:D $.foo⏏;␤    expecting any…»

[03:27] <Zoffix> m: try { EVAL 'class { has Str:D $.foo};'; CATCH { say .^name } }

[03:27] <camelia> rakudo-moar 5ca24c: OUTPUT«X::Syntax::Variable::MissingInitializer␤===SORRY!=== Error while compiling /home/camelia/EVAL_0␤Variable definition of type Str:D requires an initializer␤at /home/camelia/EVAL_0:1␤------> class { has Str:D $.foo⏏};␤    expecting an…»

[03:41] <Zoffix> *sigh* what an annoying bug I just experienced.

[03:42] <Zoffix> Was getting this error: https://gist.github.com/zoffixznet/105ee43dadb430391f287dc8db3a029d  while trying to `use` and `.new` this class: https://gist.github.com/zoffixznet/62cc1e21a74b2d7a46a8fa429d6ffce9

[03:42] <Zoffix> And when I commented out everything but `unit` it went away and when I uncommented it all back no longer got the error :S What the f...

[03:43] <Zoffix> Method 'update' not found for invocant of class 'Ticket::Trakr::Tickets'

[03:43] <Zoffix> even though it's there!

[03:44] <Zoffix> removing lib/.precomp brought me back to the original error

[03:44] <Zoffix> *sigh*

[03:44] * Zoffix writes a raging blog post blaming nine for everything

[03:46] <Zoffix> Seems a combination of `use` Perl 6 module and `use` a Perl 5 module

[03:46] * Zoffix will file a bug report tomorrow

[06:13] <nine> psch: when counting, don't forget possible multiple pre_deserialize and post_deserialize code refs that may accompany a comp unit.

[06:24] <psch> nine: yeah, that's a point

[06:33] <nine> Zoffix: does your Perl 5 using Perl 6 modules have an EXPORT routine? If yes, I may know what's going wrong.

[06:46] <[Tux]> This is Rakudo version 2016.06-17-g5ca24cc built on MoarVM version 2016.06

[06:46] <[Tux]> test            16.137

[06:46] <[Tux]> test-t           9.756

[06:46] <[Tux]> csv-parser      21.924

[08:35] <jnthn> morning, #perl6-dev :)

[09:28] <psch> hm

[09:28] <psch> so i build moar yesterday, and didn't have my jvm work in a branch

[09:28] <psch> hence i'm on HEAD now

[09:29] <psch> and there i get "Unhandled exception: getextype needs an object with VMException representation"

[09:29] <psch> interestingly, adding --ll-exception gives "An exception occurred while evaluating a BEGIN" instead

[09:30] <psch> i think this is a strong hint that everything's borked /o\

[10:28] <dalek> nqp: be9b89c | (Steve Mynott)++ | README.pod:

[10:28] <dalek> nqp: Tweet docs a little. Mostly toning down parrot refs

[10:28] <dalek> nqp: review: https://github.com/perl6/nqp/commit/be9b89c5c7

[10:28] <dalek> nqp: 8f72fc9 | jnthn++ | README.pod:

[10:28] <dalek> nqp: Merge pull request #292 from stmuk/master

[10:28] <dalek> nqp:

[10:28] <dalek> nqp: Tweet docs a little. Mostly toning down parrot refs

[10:28] <dalek> nqp: review: https://github.com/perl6/nqp/commit/8f72fc9f18

[10:43] <Zoffix> nine, it's Perl 6 using Perl 5 modules. And I've just tried with modules none of which export anything and still same bug

[10:45] <Zoffix> But if the Perl 6 module is one included with Rakudo, the error is gone

[10:57] <Zoffix> It seems to stop updating the precomp too

[10:57] <Zoffix> nine, here's the ticket: https://rt.perl.org/Ticket/Display.html?id=128457

[12:41] <BrokenRobot> And zef seems to break after installing a couple of modules: https://gist.github.com/zoffixznet/f954a828eeaf971a9f3bf9e6f8baae3d

[12:44] <BrokenRobot> This is the oldest already-built Rakudo I got where I can still reproduce the bug. The newest being one built 18 hours ago: This is Rakudo version 2016.05-149-g66ebd86 built on MoarVM version 2016.05-17-g6075599

[12:46] * BrokenRobot tries older releases

[13:03] <bartolin> psch: I had that problem on JVM after the merge of jnthn's branch as well: http://irclog.perlgeek.de/perl6-dev/2016-06-18#i_12688097

[13:04] <bartolin> psch: another problem occured a bit later: http://irclog.perlgeek.de/perl6-dev/2016-06-18#i_12688097

[13:04] <psch> bartolin: yeah, it's somewhat discouraging

[13:05] <bartolin> unfortunately I didn't find the time to submit a rakudo bug, yet. Maybe I'll manage to do that on the weekend

[13:05] <psch> although i obviously don't want to discourage development on moar either...

[13:05] <bartolin> yes, I feel the same. so, jnthn++ :-)

[13:05] <psch> but jvm breakage just keeps getting worse and, well, i am noticeably out of depth with the precomp/BEGINEVAL breakage already... vOv

[13:06] <bartolin> I'm afraid, I'm totally unable to help there :-/

[13:08] <psch> well, it's really hard to pull apart what exactly is happening i think

[13:08] <bartolin> psch: I think the problem you mentioned could be worked around with some '#?if jvm' statements (effictively reverting e5443765d4 for JVM ...

[13:09] <psch> well, it's worth a try i suppose

[13:09] <bartolin> *effectively

[13:09] <psch> although we probably should rather just fix nqp-j sufficiently not to need that... :)

[13:09] <bartolin> ++psch

[13:09] <bartolin> *g*

[13:10] * bartolin goes back to $work

[13:11] <BrokenRobot> Alright, 2016.04 release does *not* have my bug.

[13:26] <moritz> BrokenRobot: a job for bisectable?

[13:31] <BrokenRobot> AFAIK it can't do precomp stuff

[13:31] <BrokenRobot> I'm not gonna hunt down the exact commit, just trying to narrow it down a bit (and find a version I can use in the interim)

[13:34] <BrokenRobot> Somewhere between 2016.04 and 2016.05 releases

[13:41] <btyler_> timotimo: the comment about schedulers came from TimToady's comments during/after https://www.youtube.com/watch?v=73-XQEn6HfI (woo for YAPC organizers getting videos up so quickly!)

[14:04] <dalek> rakudo/nom: c3bb416 | lizmat++ | lib/Test.pm6:

[14:04] <dalek> rakudo/nom: Remove what doc we have in Test.pm6

[14:04] <dalek> rakudo/nom:

[14:04] <dalek> rakudo/nom: And refer to what is in the doc repository, and what is available

[14:04] <dalek> rakudo/nom: online on doc.perl6.org

[14:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c3bb4165c9

[14:05] <lizmat> bikeshedding the text welcomed  :-)

[14:15] <BrokenRobot> Very well :) The URL should be https:// :)

[14:19] <dalek> rakudo/nom: 7b2710b | lizmat++ | lib/Test.pm6:

[14:19] <dalek> rakudo/nom: s/http/https/, Zoffix++

[14:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7b2710bcdb

[14:19] <BrokenRobot> \o/

[17:18] <dalek> rakudo/nom: 053729c | timotimo++ | src/Perl6/Metamodel/BOOTSTRAP.nqp:

[17:18] <dalek> rakudo/nom: mention modifiable constraint in bind fail

[17:18] <dalek> rakudo/nom:

[17:18] <dalek> rakudo/nom: for example, when you try to pass a constant int to a function

[17:18] <dalek> rakudo/nom: with a "int $foo is rw" argument.

[17:18] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/053729c7d4

[19:37] <dalek> rakudo/nom: fd98fc3 | lizmat++ | src/core/ (9 files):

[19:37] <dalek> rakudo/nom: Remove support for count-only|bool-only

[19:37] <dalek> rakudo/nom:

[19:37] <dalek> rakudo/nom: Finally agreed these were premature optimizations.  This should make

[19:37] <dalek> rakudo/nom: .elems always do the same as numerifying (so cache the iterator).

[19:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fd98fc342a

[19:38] <lizmat> as discussed with TimToady and pmichaud at TPC Orlando 2016

[19:39] * masak .oO( the three primary phases of a compiler/runtime are: compile time, runtime, and premature optimization time )

[19:42] * nine likes to have his premature optimizations before breakfast

[19:43] <nine> And no, I don't know what the hell this could mean either ;)

[19:44] <lizmat> it was an afternoon snack for me :-)

[19:44] <lizmat> more than 200lines less in the setting, and they were all mine afaik  :-)

[20:52] <dalek> rakudo/ugexe-dist-interface: d513259 | ugexe++ | / (4 files):

[20:52] <dalek> rakudo/ugexe-dist-interface: Implement Distribution interface

[20:52] <dalek> rakudo/ugexe-dist-interface:

[20:52] <dalek> rakudo/ugexe-dist-interface: + Distribution is now a role enforcing an interface

[20:52] <dalek> rakudo/ugexe-dist-interface: + Basic local file system based implementations

[20:52] <dalek> rakudo/ugexe-dist-interface: + Socket based distribution file IO now possible

[20:52] <dalek> rakudo/ugexe-dist-interface: + `resources` get prefixed with `resources/` before hashing

[20:52] <dalek> rakudo/ugexe-dist-interface: + META6 provides install format changed from:

[20:52] <dalek> rakudo/ugexe-dist-interface: 	`name => ext => { :file(), :time(), ... }` to

[20:52] <dalek> rakudo/ugexe-dist-interface: 	`name => $file => { :time(), ... }`

[20:52] <dalek> rakudo/ugexe-dist-interface: which keeps the original format, and only extends upon it

[20:52] <dalek> rakudo/ugexe-dist-interface: review: https://github.com/rakudo/rakudo/commit/d5132596af

[20:52] <dalek> rakudo/ugexe-dist-interface: 33f80a5 | ugexe++ | / (143 files):

[20:52] <dalek> rakudo/ugexe-dist-interface: Merge branch 'nom' of https://github.com/rakudo/rakudo into dist-interface

[20:52] <dalek> rakudo/ugexe-dist-interface: review: https://github.com/rakudo/rakudo/commit/13e845a896

[20:52] <dalek> rakudo/ugexe-dist-interface: f6514a7 | niner++ | / (4 files):

[20:52] <dalek> rakudo/ugexe-dist-interface: Fix backwards compatibility issues with repository versions < 2

[20:52] <dalek> rakudo/ugexe-dist-interface: review: https://github.com/rakudo/rakudo/commit/f6514a76b3

[20:53] <dalek> rakudo/ugexe-dist-interface: 1256808 | niner++ | / (5 files):

[20:53] <dalek> rakudo/ugexe-dist-interface: Fix backwards compatibility issues with repository versions < 2

[20:53] <dalek> rakudo/ugexe-dist-interface: review: https://github.com/rakudo/rakudo/commit/12568089c2

[21:06] <Zoffix> :o

[21:06] <Zoffix> oh it's not nom

[21:07] * Zoffix goes back to bisecting

[21:07] <nine> I wouldn't dare force pushing to nom :)

[21:52] <timotimo> .tell lizmat you think you can figure out how to make comb's pull-one not allocate Int? i tried replacing < with islt_i, but that's not it, so maybe it's $!pos++?

[21:52] <yoleaux2> timotimo: I'll pass your message to lizmat.

[22:20] <dalek> rakudo/nom: 09cc2fb | timotimo++ | src/core/Mu.pm:

[22:20] <dalek> rakudo/nom: prevent a bunch of Scalar container allocs with dispatch meths

[22:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/09cc2fbfca

[22:39] <Zoffix> lizmat, you have a message

[23:10] <dalek> roast/6.c-errata: 77efe8e | hoelzro++ | / (2 files):

[23:10] <dalek> roast/6.c-errata: Untodo two tests

[23:10] <dalek> roast/6.c-errata:

[23:10] <dalek> roast/6.c-errata: They're currently passing

[23:10] <dalek> roast/6.c-errata: review: https://github.com/perl6/roast/commit/77efe8e42b

[23:13] <Zoffix> I'm done bisectioning the bug

[23:14] <Zoffix> .tell nine the bug I found last night where a P5 module loaded together with a P6 module had errors was introduced by this commit: https://github.com/rakudo/rakudo/commit/bf59085

[23:14] <yoleaux2> Zoffix: I'll pass your message to nine.

[23:14] <Zoffix> And it's not just any P6 module that gives issues, but one installed by panda or zef
