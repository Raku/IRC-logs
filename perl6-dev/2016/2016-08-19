[01:40] <travis-ci> Rakudo build errored. Zoffix Znet 'Remove REPL ^C from Changelog

[01:40] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/153358679 https://github.com/rakudo/rakudo/compare/92d5e766d08c...9aef5c334ed6

[01:40] <buggable> ☢ [travis build above] Build log missing from at least one job. Check results manually.

[02:43] <ShimmerFairy> this is the offending job I believe, it really has no log: https://travis-ci.org/rakudo/rakudo/jobs/153358685

[03:56] <ugexe> nine: https://github.com/rakudo/rakudo/pull/838 I'm only guessing unopened handles probably shouldn't affect the id

[04:07] <ugexe> why doesn't reduce return Nil if its given an empty list?

[04:07] <ugexe> m: say reduce { $^a + $^b }, ()

[04:07] <camelia> rakudo-moar 1b898c: OUTPUT«Too few positionals passed; expected 2 arguments but got 0␤  in block <unit> at <tmp> line 1␤␤»

[04:08] <ugexe> m: say reduce { $^a + $^b }, (1,); # expected 2 arguments, but just a single item is really ok

[04:08] <camelia> rakudo-moar 1b898c: OUTPUT«1␤»

[06:12] <brrt> hmmm... i'm finally becoming sufficiently annoyed with io::socket::async test hanging

[06:24] <dalek> rakudo/nom: a79a6ff | ugexe++ | src/core/CompUnit/Repository/FileSystem.pm:

[06:24] <dalek> rakudo/nom: Unopened handles shouldn't affect aggregate sha1

[06:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a79a6ff74f

[06:24] <dalek> rakudo/nom: a2b4a2f | niner++ | src/core/CompUnit/Repository/FileSystem.pm:

[06:24] <dalek> rakudo/nom: Merge pull request #838 from ugexe/patch-9

[06:24] <dalek> rakudo/nom:

[06:24] <dalek> rakudo/nom: Unopened handles shouldn't affect aggregate sha1

[06:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a2b4a2f837

[06:24] <nine> ugexe: oh of course. Good catch!

[06:24] <yoleaux2> 18 Aug 2016 22:33Z <lizmat> nine: spectest clear!  :-)

[06:40] <dalek> nqp/no-eval: d649de0 | (Pawel Murias)++ | src/vm/js/Compiler.nqp:

[06:40] <dalek> nqp/no-eval: [js] Stop turning the block containing the mainline statements into a declaration_static block.

[06:40] <dalek> nqp/no-eval:

[06:40] <dalek> nqp/no-eval: This saves emitted code size.

[06:40] <dalek> nqp/no-eval: review: https://github.com/perl6/nqp/commit/d649de060c

[06:40] <dalek> nqp/no-eval: f566573 | (Pawel Murias)++ | src/vm/js/Compiler.nqp:

[06:40] <dalek> nqp/no-eval: [js] Get rid of old TODO.

[06:40] <dalek> nqp/no-eval: review: https://github.com/perl6/nqp/commit/f566573c4d

[06:40] <dalek> nqp/no-eval: 079fbb5 | (Pawel Murias)++ | src/vm/js/ (6 files):

[06:40] <dalek> nqp/no-eval: [js] Turn the nqp::iterator op into an $$iterator method call instead of having an if chain.

[06:40] <dalek> nqp/no-eval: review: https://github.com/perl6/nqp/commit/079fbb52a5

[06:40] <dalek> nqp/no-eval: 50047ec | (Pawel Murias)++ | src/vm/js/ (3 files):

[06:40] <dalek> nqp/no-eval: [js] Make static lexicals accessible via inspecting a Ctx.

[06:40] <dalek> nqp/no-eval:

[06:44] <dalek> Heuristic branch merge: pushed 31 commits to nqp by pmurias

[06:46] * pmurias is not sure why his git merge --no-ff attempt merged some commits separately from the branch merge

[07:55] <|Tux|> This is Rakudo version 2016.07.1-223-ga2b4a2f built on MoarVM version 2016.07-18-g2f269d8

[07:55] <|Tux|> csv-ip5xs        9.959

[07:55] <|Tux|> test            15.188

[07:55] <|Tux|> test-t           7.302

[07:55] <|Tux|> csv-parser      16.658

[08:06] <lizmat> commuting again&

[08:16] <nine> Wow! I could not measure any slowdown at all in GTK::Simple's compilation. Despite us now calculating a sha1 of the whole dist in each precomp process.

[08:17] <nine> timotimo: looks like the slowdown you've reported is not my fault

[08:33] <dalek> rakudo/nom: 9a052cb | LemonBoy++ | lib/NativeCall.pm6:

[08:33] <dalek> rakudo/nom: Regularize the error message for sig mismatch.

[08:33] <dalek> rakudo/nom:

[08:33] <dalek> rakudo/nom: Adjust one more error message that was forgotten in 51126257.

[08:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9a052cb792

[08:33] <dalek> rakudo/nom: 5f2818b | niner++ | lib/NativeCall.pm6:

[08:33] <dalek> rakudo/nom: Merge pull request #839 from LemonBoy/typecheck-argument-exception

[08:33] <dalek> rakudo/nom:

[08:33] <dalek> rakudo/nom: Regularize the error message for sig mismatch.

[08:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5f2818b58b

[10:23] <Zoffix> ShimmerFairy, yeah, I've built that check into the bot as a preemptive precaution, but turns out logs do get missing on a regular occasion!

[10:24] <ShimmerFairy> Zoffix: just wanted to point out that there really was no indication that anything actually happened :)

[10:37] <dalek> rakudo/nom: 9cb7c66 | Xliff++ | CREDITS:

[10:37] <dalek> rakudo/nom: Added by request on 8/18/2016

[10:37] <dalek> rakudo/nom:

[10:37] <dalek> rakudo/nom: Hi, Zoffix!

[10:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9cb7c66f24

[10:37] <dalek> rakudo/nom: 54d43be | (Zoffix Znet)++ | CREDITS:

[10:37] <dalek> rakudo/nom: Merge pull request #840 from Xliff/patch-1

[10:37] <dalek> rakudo/nom:

[10:37] <dalek> rakudo/nom: Added by request on 8/18/2016

[10:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/54d43be48f

[10:39] <dalek> roast: a6f1376 | (Zoffix Znet)++ | integration/error-reporting.t:

[10:39] <dalek> roast: Remove obsolete test for RT#127425

[10:39] <dalek> roast:

[10:39] <dalek> roast: The test tested the 'Actually thrown at' message did not show

[10:39] <dalek> roast: up empty. The MoarVM work [^1] fixed the underlying issue

[10:39] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=127425

[10:39] <dalek> roast: for why that message was empty in the first place, so the

[10:39] <dalek> roast: test is now bogus.

[10:39] <dalek> roast:

[10:39] <dalek> roast: [1] https://github.com/MoarVM/MoarVM/pull/390

[10:39] <dalek> roast: review: https://github.com/perl6/roast/commit/a6f1376cb9

[10:55] <Zoffix> .tell brrt might be worth mentioning to jnthn++ as he's been working on making stuff like that unhang. My test runs stopped hanging after that work. Never had anything flap or hang for quite a while.

[10:55] <yoleaux2> Zoffix: I'll pass your message to brrt.

[10:55] <Zoffix> Thank you, robot.

[10:57] <dalek> rakudo/nom: c732485 | (Zoffix Znet)++ | src/core/Exception.pm:

[10:57] <dalek> rakudo/nom: Revert fix for empty 'Actually thrown at' message

[10:57] <dalek> rakudo/nom:

[10:57] <dalek> rakudo/nom: The fix for RT#127425 was added to prevent the 'Actually thrown..' message

[10:57] <dalek> rakudo/nom: from being printed when the location was empty. The underlying cause has now

[10:57] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=127425

[10:57] <dalek> rakudo/nom: been fixed [^1] on MoarVM level, making this fix un-needed.

[10:57] <dalek> rakudo/nom:

[10:57] <dalek> rakudo/nom: [1] https://github.com/MoarVM/MoarVM/pull/390

[10:57] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c732485e74

[11:01] <dalek> nqp: fc727ea | LemonBoy++ | src/vm/moar/QAST/QASTCompilerMAST.nqp:

[11:01] <dalek> nqp: Correct type conversion for default arguments.

[11:01] <dalek> nqp:

[11:01] <dalek> nqp: The code didn't take into account of the possible truncation of the

[11:01] <dalek> nqp: argument, we don't want to convert the default value to the type of the

[11:01] <dalek> nqp: register but rather to the type of the destination one.

[11:01] <dalek> nqp: review: https://github.com/perl6/nqp/commit/fc727ea911

[11:01] <dalek> nqp: 7e68063 | LemonBoy++ | t/moar/04-argument-truncation.t:

[11:01] <dalek> nqp: Add some tests for the argument truncation behaviour.

[11:01] <dalek> nqp:

[11:01] <dalek> nqp: Courtesy of @pmurias.

[11:01] <dalek> nqp: review: https://github.com/perl6/nqp/commit/7e68063591

[11:01] <dalek> nqp: 1e72246 | (Pawel Murias)++ | / (2 files):

[11:01] <dalek> nqp: Merge pull request #303 from LemonBoy/default-type

[11:06] <TheLemonMan> silly question ahead, does a 'fudged' test means "it's broken and we know it" ?

[11:10] <ShimmerFairy> TheLemonMan: yes. It's named that because we're "fudging the numbers", as it were.

[11:16] <unmatched}> and there's skip fudge that makes a particular test not run at all and todo fudge that makes the tests run, but failures ignore; and if they start passing all of a sudden we'll get the message that todos passed

[11:16] <jnthn> Generally, use skip for ones that blow up nastily and prevent other tests running, and use todo the rest of the time.

[11:16] <jnthn> TheLemonMan++ # lots of nice fixes

[11:18] <jnthn> .tell brrt About said hanging test, can you give me more info? I had that running a couple of hundred times in a row on a loaded system without issue after my last round of fixes...

[11:18] <yoleaux2> jnthn: I'll pass your message to brrt.

[11:24] <TheLemonMan> I have a test case that involves native types, what file should it go in ?

[11:25] <TheLemonMan> m: say class :: {has uint16 $.x;}.new(x=>0xffff).x ~~ 0xffff

[11:25] <camelia> rakudo-moar c73248: OUTPUT«False␤»

[11:25] <TheLemonMan> is there a way to make camelia use the jvm backend ?

[11:28] <jnthn> S02-types/native.t maybe

[11:28] <jnthn> j: say "This is le JVM"

[11:28] <camelia> rakudo-jvm cd19db: OUTPUT«This is le JVM␤»

[11:29] <ShimmerFairy> The m: stands for "MoarVM", incidentally :)

[11:30] <TheLemonMan> j: say class :: {has uint16 $.x;}.new(x=>0xffff).x ~~ 0xffff

[11:30] <camelia> rakudo-jvm cd19db: OUTPUT«True␤»

[11:30] <TheLemonMan> hehe, hole in one

[11:30] <ShimmerFairy> TheLemonMan, why, you golfin'? :)

[11:31] <TheLemonMan> ShimmerFairy, more like bug huntin', have to do lot of guesswork since I can't get moarvm to run my dumps :(

[11:32] <ShimmerFairy> ah, that sucks :(

[11:32] <ShimmerFairy> I just thought you were creatively extending the "code golf" metaphor, though :)

[11:32] <masak> it's not always so clear when you have the shortest possible program

[11:34] <ShimmerFairy> masak: so hole-in-ones are at least as hard as in real golf? :P

[11:34] <masak> my point is they're much less clear-cut/knowable/provable

[11:36] <ShimmerFairy> Maybe it's more like a course designer trying to figure out a good par, then. (Unless there's a hidden "Golf Math" section of math I'm currently unaware of.)

[11:37] <jnthn> TheLemonMan: "Run your dumps"?

[11:38] <jnthn> Ah, are you trying to directly run the output of --target=mbc ?

[11:38] <jnthn> That works out in NQP, I believe. We never did the work to make it work for scripts in Rakudo.

[11:39] <ShimmerFairy> jnthn: which I'm guessing would have to be separate from module precomp?

[11:40] <jnthn> ShimmerFairy: Should be able to share most of the codepaths in common...

[11:40] <jnthn> Thing is, scripts that we install are also versioned, so far as I understand it

[11:40] <jnthn> So they behave like modules enough for things to work out

[11:40] <ShimmerFairy> considering I just added a --version flag to a script of mine, I'd hope so :)

[11:41] <jnthn> I don't know the details; other people are good at taking care of these things, and I've got enough on my plate. ;)

[11:41] <jnthn> lunch time; bbl

[11:41] <TheLemonMan> jnthn, yep, at some point it crashes due to 'rakudo_scalar' not being there

[11:41] <jnthn> TheLemonMan: Oh...that probably just means we never ran the p6init extop or so

[11:42] <ShimmerFairy> TheLemonMan: if you need to compile the code down to bytecode, could possibly write a quick module file and let precomp handle that? And then possibly run as  perl6 -I. -MFoo -e 'do-thing()'  , for example

[11:45] <travis-ci> Rakudo build errored. Zoffix Znet 'Merge pull request #840 from Xliff/patch-1

[11:45] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/153522923 https://github.com/rakudo/rakudo/compare/5f2818b58be8...54d43be48fdd

[11:45] <buggable> ✓ [travis build above] One job failed due to the timeout. No other failures.

[12:03] <unmatched}> Rele6sr: reminder

[12:03] <Rele6sr> 🎺🎺🎺 Friends! I bear good news! Rakudo's release will happen in just 1 days! Please update the ChangeLog with anything you worked on that should be known to our users. 🎺🎺🎺

[12:03] <Rele6sr> 🎺🎺🎺 Here are still-open new RT tickets since last release: http://bug.perl6.party/1471608216.html And here is the git log output for commits since last release: http://bug.perl6.party/1471608219.html 🎺🎺🎺

[12:12] <dalek> rakudo/nom: 410a9c1 | niner++ | docs/ChangeLog:

[12:12] <dalek> rakudo/nom: Mention commit 848add944fe6de9090f0abc3b17e9a3a8e2cc42b in the ChangeLog

[12:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/410a9c17c7

[12:13] <masak> unmatched}: wait, the release was yesterday, no?

[12:13] <unmatched}> masak: past-Christmas releases happen on third Saturday of the month

[12:14] <masak> aha

[12:22] <dalek> rakudo/nom: f5ed6be | (Zoffix Znet)++ | docs/ChangeLog:

[12:22] <dalek> rakudo/nom: Populate ChangeLog with all of changes to date

[12:22] <dalek> rakudo/nom:

[12:22] <dalek> rakudo/nom: Logs commits 7d80466 739d1a3 02a0477 0f420ad 1628e48 1728139

[12:22] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f5ed6be786

[12:29] <dalek> nqp: 10f61b1 | (Pawel Murias)++ | src/vm/js/nqp-runtime/ (12 files):

[12:29] <dalek> nqp: [js] Switch to using ECMAScript 6 class syntax.

[12:29] <dalek> nqp: review: https://github.com/perl6/nqp/commit/10f61b17c4

[12:34] <travis-ci> Rakudo build errored. Zoffix Znet 'Revert fix for empty 'Actually thrown at' message

[12:34] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/153526542 https://github.com/rakudo/rakudo/compare/54d43be48fdd...c732485e740b

[12:34] <buggable> ✓ [travis build above] One job failed due to the timeout. No other failures.

[12:35] <[Coke]> RT: 1351; @LARRY: 17; BUG: 435; BUILD: 8; CONC: 29; DOCS: 1; GLR: 4; JVM: 66; LHF: 1; LTA: 115; NATIVECALL: 15; NEW: 869; NYI: 88; OSX: 5; PERF: 25; POD: 17; PRECOMP: 12; RFC: 34; SEGV: 34; SPESH: 1; STAR: 5; TESTNEEDED: 19; TODO: 10; UNI: 30; UNTAGGED: 447; WEIRD: 3

[12:36] <dalek> nqp: f09f2a1 | (Pawel Murias)++ | src/vm/js/nqp-runtime/deserialization.js:

[12:36] <dalek> nqp: [js] Delete dead code.

[12:36] <dalek> nqp: review: https://github.com/perl6/nqp/commit/f09f2a1dab

[12:48] <unmatched}> .seen MasterDuke

[12:48] <yoleaux2> I saw MasterDuke 18 Aug 2016 01:02Z in #perl6-dev: <MasterDuke> is anyone else seeing *really* long precomp times with a rakudo built today? compared to a rakudo built yesterday for example

[12:49] <unmatched}> .tell MasterDuke would you add yourself to https://github.com/rakudo/rakudo/blob/nom/CREDITS so the entiry shows up as you like in release announcement, please?

[12:49] <yoleaux2> unmatched}: I'll pass your message to MasterDuke.

[13:01] <TheLemonMan> #128803 and al. can now be closed

[13:01] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128803

[13:02] <unmatched}> Still need tests.

[13:03] <TheLemonMan> let's do it then!

[13:03] <unmatched}> I don't know how to do MoarVM/nqp bumps for that stuff to show up in a rakudo build :)

[13:04] <[Coke]> m: say ‘meow’; say 0, * ... "what"

[13:04] <camelia> rakudo-moar f5ed6b: OUTPUT«meow␤===SORRY!===␤Method 'pred' not found for invocant of class 'Whatever'␤»

[13:05] <unmatched}> Well, I guess I do know for release points, so I can add the test tomorrow, but I don't know how to bump willy nilly :)

[13:05] <[Coke]> unmatched}: same way.

[13:06] <[Coke]> better to bump *now* instead of waiting until the release, if this is stuff that's going in the release. I'll bump it.

[13:06] <[Coke]> was the fix in moar?

[13:07] <unmatched}> Not sure. TheLemonMan what code fixed the issues, so we could reference it in the tickets?

[13:07] <TheLemonMan> yep, that's the moarvm PR

[13:08] <unmatched}> k. https://github.com/MoarVM/MoarVM/pull/390

[13:08] <unmatched}> j: say ‘meow’; say 0, * ... "what"

[13:09] <camelia> rakudo-jvm cd19db: OUTPUT«meow␤Method 'pred' not found for invocant of class 'Whatever'␤  in block <unit> at <tmp> line 1␤␤»

[13:24] <travis-ci> Rakudo build passed. Stefan Seifert 'Mention commit 848add944fe6de9090f0abc3b17e9a3a8e2cc42b in the ChangeLog'

[13:24] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/153542710 https://github.com/rakudo/rakudo/compare/c732485e740b...410a9c17c7cf

[13:27] <dalek> nqp: b416158 | coke++ | tools/build/MOAR_REVISION:

[13:27] <dalek> nqp: bump to MOAR head for latest dev

[13:27] <dalek> nqp: review: https://github.com/perl6/nqp/commit/b41615876f

[13:31] <dalek> rakudo/nom: 25e9fd7 | coke++ | tools/build/NQP_REVISION:

[13:31] <dalek> rakudo/nom: update NQP revision to get MoarVM fixes

[13:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/25e9fd76e8

[13:31] <[Coke]> unmatched}: it's "git describe --match 20*" to get the replacement code to put in the *REVISION files.

[13:33] <TheLemonMan> I hope I've well-roasted the test :)

[13:36] <dalek> rakudo/nom: b2511f5 | titsuki++ | CREDITS:

[13:36] <dalek> rakudo/nom: Add the contributor to the CREDITS

[13:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b2511f5490

[13:36] <dalek> rakudo/nom: 1a16f6c | (Zoffix Znet)++ | CREDITS:

[13:36] <dalek> rakudo/nom: Merge pull request #841 from titsuki/add-contributor

[13:36] <dalek> rakudo/nom:

[13:36] <dalek> rakudo/nom: Add titsuki to the CREDITS

[13:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1a16f6cdce

[13:36] <jnthn> unmatched}: Release tomorrow?

[13:37] * jnthn will do the MoarVM release tomorrow morningish (Europe time)

[13:37] <jnthn> Which is hopefully soon enough

[13:38] <unmatched}> jnthn: yup

[13:38] <jnthn> Cool

[13:41] <unmatched}> [Coke]: thanks

[13:43] <dalek> roast: 3934e28 | LemonBoy++ | S02-types/native.t:

[13:43] <dalek> roast: Add some tests for native-typed class elements. (#142)

[13:43] <dalek> roast:

[13:43] <dalek> roast: Currently fudged for MoarVM due to a bug.

[13:43] <dalek> roast: review: https://github.com/perl6/roast/commit/3934e28715

[13:50] <unmatched}> TheLemonMan: what bug are those tests for? I'm unsure what the #142 refers to

[13:51] <TheLemonMan> unmatched}, I'm writing a ticket for MoarVM right now

[13:51] <unmatched}> Ah, cool.

[13:54] <TheLemonMan> done, https://github.com/MoarVM/MoarVM/issues/393

[13:55] <TheLemonMan> the actual fix /should/ be pretty easy, but I'm not moarvm-expert enough to decide what's the best way to do so

[13:57] <dalek> roast: 6e63735 | (Zoffix Znet)++ | S02-types/native.t:

[13:57] <dalek> roast: Fix plan, refudge as TODO, and add reference to MoarVM ticket

[13:57] <dalek> roast: review: https://github.com/perl6/roast/commit/6e63735169

[13:58] <unmatched}> TheLemonMan: you also need to adjust the `plan` at the top of the test file to reflect the added tests.

[13:58] <TheLemonMan> arr, my bad

[13:58] <unmatched}> And you can run individual test files from a rakudo repo, like    make t/spec/S02-types/native.t

[13:59] <unmatched}> [Coke]++ good call to bump now.

[13:59] <unmatched}> I'm getting consistent failures in t/spec/S17-procasync/no-runaway-file-limit.t with *** Error in `/home/cpan/CPANPRC/rakudo/install/bin/moar': double free or corruption (fasttop): 0x0000000005d716d0 ***

[14:00] <[Coke]> thanks

[14:00] <unmatched}> oh... s/consistent//;

[14:04] <travis-ci> Rakudo build failed. Zoffix Znet 'Populate ChangeLog with all of changes to date

[14:04] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/153544663 https://github.com/rakudo/rakudo/compare/410a9c17c7cf...f5ed6be7866f

[14:04] <buggable> ☠ [travis build above] One job failed but NOT due to the timeout.

[14:05] <unmatched}> (but due to github connectivity issues)

[14:09] <AlexDaniel> hah

[14:43] <dalek> rakudo/nom: 4431bfb | niner++ | src/core/Any.pm:

[14:43] <dalek> rakudo/nom: Fix endless recursion in Any::BIND-POS

[14:43] <dalek> rakudo/nom:

[14:43] <dalek> rakudo/nom: If the bind target is not really a Positional but a plain scalar that's

[14:43] <dalek> rakudo/nom: intentionally confused with a list of size 1, binding to $target[0] ran

[14:43] <dalek> rakudo/nom: into an endless recursion as we resolved $target[0] back to $target and

[14:43] <dalek> rakudo/nom: called BIND-POS again.

[14:43] <dalek> rakudo/nom:

[14:43] <dalek> rakudo/nom: Fixes the hangs in S03-binding/nonsense.t

[14:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4431bfb0a0

[14:43] <dalek> roast: 4336154 | niner++ | S03-binding/nonsense.t:

[14:43] <dalek> roast: Unfudge now passing test

[14:43] <dalek> roast: review: https://github.com/perl6/roast/commit/4336154403

[14:53] <dalek> rakudo/nom: dd5c281 | (Zoffix Znet)++ | CREDITS:

[14:53] <dalek> rakudo/nom: Add info on skids and nxadm

[14:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/dd5c2818f3

[15:27] <ItayAlmog> I have just pushed to github the first version of my compiler, as said only support variables with no real type checking :) https://github.com/Itay2805/Perl6-Native-Compiler

[15:34] <unmatched}> ItayAlmog++ awesome!

[15:43] <AlexDaniel> ooooooooooh

[15:46] <[Tux]> sounds like a whisky

[15:50] <unmatched}> .oO( how does a whisky sound... )

[15:55] <travis-ci> Rakudo build failed. Zoffix Znet 'Merge pull request #841 from titsuki/add-contributor

[15:55] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/153562082 https://github.com/rakudo/rakudo/compare/25e9fd76e85f...1a16f6cdce90

[15:55] <buggable> ☠ [travis build above] One job failed but NOT due to the timeout.

[15:59] <timotimo> ^- no clue what caused the error; it died within moar's Configure.pl

[15:59] <unmatched}> timotimo: "git error: fatal: unable to access 'https://github.com/MoarVM/dynasm.git/': Server aborted the SSL handshake"

[16:00] <timotimo> oh

[16:00] <timotimo> didn't notice that

[16:00] <timotimo> but ok!

[16:00] <timotimo> i wonedr if buggable should learn about that?

[16:00] <unmatched}> it's like in the middle of output, so it's hard to notice

[16:00] <timotimo> yeah

[16:00] <unmatched}> yeah, prolly

[16:00] <unmatched}> buggable: source

[16:00] <buggable> unmatched}, See: https://github.com/zoffixznet/perl6-buggable

[16:00] <timotimo> hehe, good reaction

[16:46] <travis-ci> Rakudo build errored. Stefan Seifert 'Fix endless recursion in Any::BIND-POS

[16:46] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/153580077 https://github.com/rakudo/rakudo/compare/1a16f6cdce90...4431bfb0a033

[16:46] <buggable> ✓ [travis build above] One job failed due to the timeout. No other failures.

[16:49] <dalek> rakudo/nom: 079da99 | (Zoffix Znet)++ | docs/ChangeLog:

[16:49] <dalek> rakudo/nom: Add 4431bfb0a03 to changelog

[16:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/079da99281

[16:50] <unmatched}> Stage parse:  65.834    :/ that's on a the box that used to be at 45s about a month ago :/

[17:03] <unmatched}> m: react { whenever Supply.interval(.001) { done if $++ > 10; } }; sleep 1;

[17:03] <camelia> rakudo-moar dd5c28: ( no output )

[17:03] <unmatched}> m: react { whenever Supply.interval(.001) { done if $++ > 1000; } }; sleep 1;

[17:03] <camelia> rakudo-moar dd5c28: OUTPUT«Unhandled exception in code scheduled on thread 4␤Access denied to keep/break this Promise; already vowed␤  in any  at /home/camelia/rakudo-m-inst-2/share/perl6/runtime/CORE.setting.moarvm line 1␤  in sub THROW-NIL at /home/camelia/rakudo-m-inst-2/sh…»

[17:04] <timotimo> oh, that's interesting

[17:04] <timotimo> it's scheduling another run of that while the previous one is still running?

[17:06] <unmatched}> Rakudobugged: https://rt.perl.org/Ticket/Display.html?id=128991

[17:07] <unmatched}> m: react { whenever Supply.interval(.00000000001) { done if $++ > 10; } }; sleep 1;

[17:07] <camelia> rakudo-moar dd5c28: OUTPUT«(timeout)»

[17:57] <[Coke]> under 400 untagged tickets.

[17:57] <[Coke]> some tickets now tagged [OO] [REGEX] [MATH]

[18:00] <unmatched}> I also tagged one as [REPL] though I now see it's the lone ticket with such tag, despite there likely being many REPL bugs

[18:00] <[Coke]> unmatched}: I just moved a few over to REPL as well

[18:01] <[Coke]> there are 3 so far.

[18:01] <[Coke]> at some point, we'll have to recategorize everything in [BUG], too

[18:01] * unmatched} nods

[18:01] <[Coke]> I'm just trying to get some kind of handle on the untagged ones.

[18:02] <[Coke]> m: sub f($x) { return if $x == 1; state %h = a => 1; %h.perl }; f 1; f 2;

[18:02] <camelia> rakudo-moar 079da9: ( no output )

[18:02] <[Coke]> m: sub f($x) { return if $x == 1; state %h = a => 1; say %h.perl }; f 1; f 2; # RT # 102994

[18:02] <camelia> rakudo-moar 079da9: OUTPUT«{}␤»

[18:07] <[Coke]> we have 70 test files in roast that we're not running.

[18:08] <[Coke]> some of these can probably be deleted at this point.

[18:10] <[Coke]> several of them are already passing all tests.

[18:14] <unmatched}> I'm gonna add all passing to spectestdata

[18:17] <unmatched}> "Also reproduced on a colleagues computer running Ubuntu."  on https://rt.perl.org/Ticket/Display.html?id=126979

[18:17] <unmatched}> People using Perl 6 for work stuff \o/

[18:17] <ugexe> unmatched}: how long did it take for your CLA to The Perl Foundation to be acknowledged? i'm thinking mine must have got lost; i sent mine in jan

[18:19] <unmatched}> ugexe: I went with an unorthodox way: http://irclog.perlgeek.de/perl6-dev/2016-07-11#i_12823331

[18:19] <unmatched}> So after that I emailed Karen and like 2-3 days later I got approved and got my commit bit

[18:19] <unmatched}> Maybe you sent to the wrong address too? :)

[18:20] * [Coke] recommends email for any CLA business.

[18:21] <unmatched}> I sent to Karen and CCed Dan, per lizmat's suggestions: http://irclog.perlgeek.de/perl6-dev/2016-07-12#i_12825998

[18:22] <ugexe> could have; i moved shortly after i sent it so i would not have received the returned letter

[18:23] <[Coke]> ugexe: pm your name I can check the official list.

[18:28] <[Coke]> ugexe: I didn't see anythign recent on the list of CLAs

[18:31] <[Tux]> This is Rakudo version 2016.07.1-236-g079da99 built on MoarVM version 2016.07-24-g31eccd7

[18:31] <[Tux]> csv-ip5xs       10.267

[18:31] <[Tux]> test            15.579

[18:31] <[Tux]> test-t           7.456

[18:31] <[Tux]> csv-parser      16.295

[19:06] <TheLemonMan> duh, the native-sized integers uncover a whole can of worms heh

[19:07] <unmatched}> :}

[19:10] <dalek> roast: a57ded0 | (Zoffix Znet)++ | S02-one-pass-parsing/misc.t:

[19:10] <dalek> roast: Fix incorrect exit code in test

[19:10] <dalek> roast:

[19:10] <dalek> roast: This was probably wrong for a while, since the test was never added

[19:10] <dalek> roast: to spectest.data when it was created.

[19:10] <dalek> roast: review: https://github.com/perl6/roast/commit/a57ded0d74

[19:14] <TheLemonMan> j: sub prefix:<++>(int8 $a is rw) { $a }; my int8 $foo = 127; say ++$foo;

[19:14] <camelia> rakudo-jvm cd19db: OUTPUT«128␤»

[19:26] <dalek> roast: d03ae09 | (Zoffix Znet)++ | S (5 files):

[19:26] <dalek> roast: Fudge some tests in preparation to add files to spectest.data

[19:26] <dalek> roast: review: https://github.com/perl6/roast/commit/d03ae09d54

[19:27] <dalek> rakudo/nom: 3c2e297 | (Zoffix Znet)++ | t/spectest.data:

[19:27] <dalek> rakudo/nom: Include passing files in spectest.data

[19:27] <dalek> rakudo/nom:

[19:27] <dalek> rakudo/nom: Also includes files that pass with fudging

[19:27] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3c2e297a21

[19:28] <unmatched}> 🛢🛢🛢 I've added a bunch of spectest files into spectest.data. They all pass on my box, but may be failing on yours. If you notice spectest fails, check if the file is one of the new ones and fudge if it is: https://github.com/rakudo/rakudo/commit/3c2e297a21  🛢🛢🛢

[19:32] <unmatched}> TheLemonMan++ all the awesome work :)

[19:42] <ItayAlmog> Rakudo is a compiler right? So to what does it compile?

[19:42] <unmatched}> ItayAlmog: Perl 6

[19:42] <unmatched}> Oh TO what

[19:43] <ItayAlmog> I mean, To what the Perl 6 code is compiled :P

[19:43] <unmatched}> ItayAlmog: to the bytecode of the backend VM

[19:43] <ItayAlmog> Ok, thanks :)

[19:45] <unmatched}> And we currently have JVM, MoarVM, or JavaScript backends, with MoarVM being most stable and complete

[19:46] <ItayAlmog> So it builds the same AST but just uses it to generate different bytecodes

[19:46] <[Coke]> we do not have a JS backend yet for rakudo

[19:46] <[Coke]> only for nqp

[19:46] <unmatched}> Ah

[19:48] <TheLemonMan> unmatched}, I'm having so much fun heh and I haven't even written a single line of p6 yet!

[19:50] <unmatched}> TheLemonMan: lol :D You make backend hacking look so easy :)

[19:51] <unmatched}> I'm planning to learn to do it to... soon.

[19:51] * unmatched} & commute

[20:03] <dalek> rakudo/nom: 4268c25 | MasterDuke17++ | CREDITS:

[20:03] <dalek> rakudo/nom: Add myself to the CREDITS

[20:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4268c25597

[20:03] <dalek> rakudo/nom: 9202952 | (Zoffix Znet)++ | CREDITS:

[20:03] <dalek> rakudo/nom: Merge pull request #842 from MasterDuke17/nom

[20:03] <dalek> rakudo/nom:

[20:03] <dalek> rakudo/nom: Add MasterDuke to the CREDITS

[20:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/92029524b4

[20:04] <unmatched}> lol "Pull requests that have a failing status can’t be merged from a phone."

[20:05] <unmatched}> Except you can, if you switch the site to desktop view. Stupid.

[20:06] <timotimo> hah

[20:06] <timotimo> but who would ever "request desktop version"?

[20:07] <unmatched}> I do it regularly 'cause mobile version lacks a lot of features

[20:21] <timotimo> aye

[21:07] <nine> unmatched}: All tests successful.

[21:39] <TheLemonMan> one last PR for today :)

[21:57] <timotimo> ql

[21:58] <timotimo> oh, that only works in german

[21:58] <timotimo> cool

[23:30] <dalek> rakudo/nom: 4674f14 | lizmat++ | lib/TAP.pm6:

[23:30] <dalek> rakudo/nom: Make sure output ruler doesn't exceed 70 chars

[23:30] <dalek> rakudo/nom:

[23:30] <dalek> rakudo/nom: So we don't have any mouse droppings in the output.

[23:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4674f14b8c

[23:40] <lizmat> Whee!   my first complete spectest with HARNESS_TYPE=6:

[23:40] <lizmat> All tests successful.

[23:40] <lizmat> Files=1118, Tests=52595,  336 wallclock secs

[23:40] <lizmat> Result: PASS

[23:41] <timotimo> fantastic

[23:41] <lizmat> looks like for TEST_JOBS=8 it's only 15% slower in wallclock

[23:41] <timotimo> does it flap, though?

[23:42] <lizmat> well... lemme try again  :-)

[23:48] <lizmat> alas, indeed, it flaps

[23:48] <lizmat> the error is the same though, each time for me so far

[23:49] * Zoffix tries HARNESS_TYPE=6 TEST_JOBS=30 make stresstest

[23:49] <lizmat> https://gist.github.com/lizmat/e4d9c1b86e381c0763d3a69b24a9f6b0

[23:50] <Zoffix> Same error as lizmat: https://gist.github.com/zoffixznet/5f1c00e127cc72fed31d1c65a8c305de

[23:52] * lizmat is tired and gets some sleep

[23:52] <lizmat> good night, #perl6-dev!

[23:53] <timotimo> \o/

[23:58] <Zoffix> night
