[00:07] <dalek> roast: e16d1a0 | (Zoffix Znet)++ | S02-literals/radix.t:

[00:07] <dalek> roast: Remove trailing whitespace

[00:07] <dalek> roast: review: https://github.com/perl6/roast/commit/e16d1a0b12

[00:08] <dalek> roast: 340125d | (Zoffix Znet)++ | S02-literals/radix.t:

[00:08] <dalek> roast: Format spread out code tighter

[00:08] <dalek> roast: review: https://github.com/perl6/roast/commit/340125d3a7

[00:12] <dalek> rakudo/nom: a489de3 | PerlJam++ | src/core/Exception.pm:

[00:12] <dalek> rakudo/nom: un-mention mainline in exception

[00:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a489de325e

[00:19] <dalek> rakudo/nom: 0c3d9e8 | (Zoffix Znet)++ | src/Perl6/Actions.nqp:

[00:19] <dalek> rakudo/nom: Awesomify error when misparsing rad numbers

[00:19] <dalek> rakudo/nom:

[00:19] <dalek> rakudo/nom: - Remove fractional numbers that make no sense to user

[00:19] <dalek> rakudo/nom: - Throw X::Syntax::Number::InvalidCharacter instead of X::AdHoc

[00:19] <dalek> rakudo/nom: - Indicate visually where the issue in the number is

[00:19] <dalek> rakudo/nom:

[00:19] <dalek> rakudo/nom: Fixes RT#128804: https://rt.perl.org/Ticket/Display.html?id=128804

[00:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0c3d9e803d

[00:19] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128804

[00:20] <dalek> roast: 83ad8fd | (Zoffix Znet)++ | S02-literals/radix.t:

[00:20] <dalek> roast: Test rad number misparse errors are awesome

[00:20] <dalek> roast:

[00:20] <dalek> roast: RT#128804: https://rt.perl.org/Ticket/Display.html?id=128804

[00:20] <dalek> roast: Fix commit: https://github.com/rakudo/rakudo/commit/0c3d9e803d

[00:20] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128804

[00:20] <dalek> roast: review: https://github.com/perl6/roast/commit/83ad8fd2e5

[00:48] <MasterDuke> babydrop: just curious, any reason $<fracpart> ?? $<fracpart> !! '' couldn't be $<fracpart> (// | ||) ''?

[01:29] <dalek> rakudo/nom: a2ede36 | lizmat++ | / (2 files):

[01:29] <dalek> rakudo/nom: Make sure we can .reverse/rotate shaped 1dimmed arrays

[01:29] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a2ede36378

[03:05] <babydrop> MasterDuke: I was gonna say no, but for some reason this change dies with "concatenate requires a concrete string, but got null" https://gist.github.com/zoffixznet/bb664e9cb7f802c6252e58083cc4abe0

[03:05] <MasterDuke> not what i would've expected

[03:06] <babydrop> yeah weird

[03:06] <MasterDuke> same for // ?

[03:06] * babydrop is building that ATM

[03:06] <MasterDuke> i really want an exists=

[03:10] <babydrop> Yeah, works with //

[03:11] <babydrop> nqp: nqp::say("foo" ~ ($<bar> || ''))

[03:11] <camelia> nqp-moarvm: OUTPUT«foo␤»

[03:11] <babydrop> nqp: nqp::say("foo" ~ ($<bar> || 'meow'))

[03:11] <camelia> nqp-moarvm: OUTPUT«foomeow␤»

[03:11] <babydrop> weird

[03:15] <MasterDuke> exists= is the wrong way to say it. // => definiteness, || => truthiness, <something> => hash existence

[03:22] <babydrop> Oh, repod

[03:22] <babydrop> nqp: my $m := ("foo" ~~ /$<bar>=\w+/); nqp::say($m<bar> || '')

[03:22] <camelia> nqp-moarvm: OUTPUT«say requires a concrete string, but got null␤   at <tmp>:1  (<ephemeral file>:<mainline>)␤ from gen/moar/stage2/NQPHLL.nqp:1462  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/NQPHLL.moarvm:eval)␤ from gen/moar/stage2/NQPHLL.nqp:1665  (/home/camelia/rakudo-m-i…»

[03:22] <babydrop> nqp: my $m := ("foo" ~~ /$<bar>=\w+/); nqp::say($m<bar> // '')

[03:22] <camelia> nqp-moarvm: OUTPUT«foo␤»

[03:23] <babydrop> hmm

[03:23] <babydrop> Actually, that makes even less sense, 'cause in this case $m<bar> is defined

[03:23] <babydrop> nqp-jvm: my $m := ("foo" ~~ /$<bar>=\w+/); nqp::say($m<bar> // '')

[03:23] <camelia> nqp-jvm: OUTPUT«#␤# There is insufficient memory for the Java Runtime Environment to continue.␤# pthread_getattr_np␤# An error report file with more information is saved as:␤# /home/camelia/hs_err_pid532.log␤[thread 139630030198528 also had an error]␤»

[03:26] <MasterDuke> i get "foo" with a slightly old nqp-j

[03:36] <dalek> rakudo/nom: 061753c | (Zoffix Znet)++ | src/Perl6/Actions.nqp:

[03:36] <dalek> rakudo/nom: Use shorter conditional

[03:36] <dalek> rakudo/nom:

[03:36] <dalek> rakudo/nom: MasterDuke++

[03:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/061753cc66

[03:36] <babydrop> The annoying part about ^ that is I mistyped the name of the key in the ?? !! form and had to rebuild when I realised that :)

[03:37] <babydrop> back when I first wrote that

[03:37] <babydrop> and || form wouldn't have had that issue

[04:16] <dalek> roast: d47d898 | (Zoffix Znet)++ | S02-literals/radix.t:

[04:16] <dalek> roast: Test awesomeness of X::Syntax::Number::InvalidCharacter

[04:16] <dalek> roast:

[04:16] <dalek> roast: RT#130255: https://rt.perl.org/Ticket/Display.html?id=130255

[04:16] <dalek> roast:

[04:16] <dalek> roast: We need a special place for tests like these. Either t/ in rakudo

[04:16] <dalek> roast: or `volatile/` in spec. Basically for tests that check the currently

[04:16] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130255

[04:16] <dalek> roast: desired behaviour is correct, but carry no obligation that we will

[04:16] <dalek> roast: maintain the current behaviour unchanged, since in the future we may

[04:16] <dalek> roast: decide a reformatted message reads better and overly-specific content

[04:16] <dalek> roast: tests would break due to that reformatting.

[04:16] <dalek> roast: review: https://github.com/perl6/roast/commit/d47d898bfa

[04:16] <dalek> rakudo/nom: 37ead5a | (Zoffix Znet)++ | src/core/Exception.pm:

[04:16] <dalek> rakudo/nom: Awesomify X::Syntax::Number::InvalidCharacter

[04:16] <dalek> rakudo/nom:

[04:16] <dalek> rakudo/nom: - Explicitly tell what char is invalid

[04:16] <babydrop> - Offer a list of valid chars

[04:16] <babydrop> 

[04:16] <babydrop> Fixes RT#130255: https://rt.perl.org/Ticket/Display.html?id=130255

[04:16] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130255

[04:16] <babydrop> https://github.com/rakudo/rakudo/commit/37ead5ac20f3ea8bd8b79309dcdde1f85b0b7685

[04:20] <dalek> nqp: 4a3ae57 | MasterDuke17++ | src/vm/moar/HLL/Backend.nqp:

[04:20] <dalek> nqp: Add SQL as an output option for profiles

[04:20] <dalek> nqp:

[04:20] <dalek> nqp: This creates a .sql file with several CREATE TABLE statements and many

[04:20] <dalek> nqp: INSERT INTO statements. This has been tested with SQLite and with the

[04:20] <dalek> nqp: appropriate queries the results seem to match the JSON and HTML outputs.

[04:20] <dalek> nqp: review: https://github.com/perl6/nqp/commit/4a3ae5766f

[04:20] <dalek> nqp: 8cbb0ca | (Zoffix Znet)++ | src/vm/moar/HLL/Backend.nqp:

[04:20] <dalek> nqp: Merge pull request #327 from MasterDuke17/profile_output_to_sql

[04:20] <dalek> nqp:

[04:20] <dalek> nqp: Add SQL as an output option for profiles

[04:20] <dalek> nqp: review: https://github.com/perl6/nqp/commit/8cbb0ca5e7

[04:31] * babydrop spectest a bump

[04:42] <dalek> rakudo/nom: f20b8b6 | (Zoffix Znet)++ | tools/build/NQP_REVISION:

[04:42] <dalek> rakudo/nom: (nqp bump) Add SQL as an output option for profiles

[04:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f20b8b636f

[04:42] <dalek> rakudo/nom: acbbc87 | (Zoffix Znet)++ | src/Perl6/Compiler.nqp:

[04:42] <dalek> rakudo/nom: Add .sql format option to --help usage message

[04:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/acbbc87679

[05:55] <MasterDuke> if anyone is interested, i profiled a rakudo build and output it as sql. the 740mb (13 million lines) file took a min or two for sqlite to .read

[05:56] <MasterDuke> the top 40 routines sorted by exclusive time (descending) are here: https://gist.github.com/MasterDuke17/5bb117dafb12fc4f7b881fb60406e91f

[05:56] <babydrop> :o

[05:58] <babydrop> MasterDuke++

[06:04] <babydrop> .oO( a web app that lets you explore huge .sql profiles... )

[06:16] <dalek> rakudo/nom: 5635c5b | (Zoffix Znet)++ | src/Perl6/Actions.nqp:

[06:16] <dalek> rakudo/nom: Compare numeric value against a constant number, not string

[06:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5635c5be18

[06:55] <moritz> MasterDuke: so MATCH and find_symbol, right?

[07:02] <dalek> nqp: 5c42dcc | moritz++ | src/QRegex/Cursor.nqp:

[07:02] <dalek> nqp: Expand tabs to spaces in Cursor.MATCH; no functional changes

[07:02] <dalek> nqp: review: https://github.com/perl6/nqp/commit/5c42dcc792

[07:02] <dalek> nqp: e1f6ab4 | moritz++ | src/QRegex/Cursor.nqp:

[07:02] <dalek> nqp: Add a type declaration in Cursor.MATCH

[07:02] <dalek> nqp:

[07:02] <dalek> nqp: might improve codegen a bit

[07:02] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e1f6ab4fc8

[07:24] <dalek> nqp: 9269633 | (Zoffix Znet)++ | src/QRegex/P6Regex/Actions.nqp:

[07:24] <dalek> nqp: Remove trailing whitespace

[07:24] <dalek> nqp: review: https://github.com/perl6/nqp/commit/9269633de4

[07:35] <moritz> so, I've noticed that the NQP code in Rakudo often uses "if +@foo { ... }" or "if +%sym { ... }"

[07:35] <moritz> why the + in front of the containers?

[07:35] <moritz> is it faster than without it?

[07:36] <moritz> it looks a bit like cargo culting to me, but what do I know about NQP? :_)

[07:36] <babydrop> I know +@foo in Perl 6 is *not* faster for not fully riefied stuff

[07:37] <moritz> yes, in NQP @ isn't lazy

[07:37] <babydrop> Still, I'd imagine "does have any stuff?" is easier to answer than "how much stuf is there?"

[07:38] <moritz> when I remove it, the changes to setting compilation speed seem to be insiginificant

[07:39] <babydrop> hm, rx_syntax in nqp/t/qregex is not being run :\

[07:39] <babydrop> And if I add it to run each test fails (cause it tests errors...)

[07:44] <moritz> babydrop: there should be a test runner that reads that file

[07:44] <moritz> might have gone missing

[07:44] <babydrop> nothing turns up for grep -R 'rx_syntax'

[07:45] <moritz> right

[07:46] <dalek> nqp: c5f3888 | (Zoffix Znet)++ | / (3 files):

[07:46] <dalek> nqp: Forbid bare \b and \B in regexes

[07:46] <dalek> nqp:

[07:46] <dalek> nqp: Fixes RT#128986: https://rt.perl.org/Ticket/Display.html?id=128986

[07:46] <dalek> nqp: review: https://github.com/perl6/nqp/commit/c5f38888ec

[07:46] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128986

[08:01] <babydrop> oh...

[08:13] <dalek> nqp: 66308ea | (Zoffix Znet)++ | src/QRegex/P6Regex/ (2 files):

[08:13] <dalek> nqp: Simplify forbiddence of bare \b and \B in regexes

[08:13] <dalek> nqp:

[08:13] <dalek> nqp: Use the obsolete throwage thing right in the grammar instead of

[08:13] <dalek> nqp: going all the way into actions.

[08:13] <dalek> nqp: review: https://github.com/perl6/nqp/commit/66308ea63d

[08:24] <dalek> rakudo/nom: 08589d3 | (Zoffix Znet)++ | tools/build/NQP_REVISION:

[08:24] <dalek> rakudo/nom: (nqp bump) Forbid bare \b and \B in regexes

[08:24] <dalek> rakudo/nom:

[08:24] <dalek> rakudo/nom: Fixes RT#128986: https://rt.perl.org/Ticket/Display.html?id=128986

[08:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/08589d32fa

[08:24] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128986

[08:25] <dalek> roast: 23431df | (Zoffix Znet)++ | S05-metasyntax/regex.t:

[08:25] <dalek> roast: Remove trailing whitespace

[08:25] <dalek> roast: review: https://github.com/perl6/roast/commit/23431df349

[08:30] <dalek> roast: 846af2a | (Zoffix Znet)++ | S05-metasyntax/regex.t:

[08:30] <dalek> roast: Test bare \b and \B in regexes are forbidden

[08:30] <dalek> roast:

[08:30] <dalek> roast: RT#128986: https://rt.perl.org/Ticket/Display.html?id=128986

[08:30] <dalek> roast: Fix commits:

[08:30] <dalek> roast: https://github.com/rakudo/rakudo/commit/08589d32fa

[08:30] <dalek> roast: https://github.com/perl6/nqp/commit/66308ea63d

[08:30] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128986

[08:30] <dalek> roast: https://github.com/perl6/nqp/commit/c5f38888ec

[08:30] <dalek> roast: review: https://github.com/perl6/roast/commit/846af2a582

[08:59] <dalek> rakudo/nom: 4e76827 | (Zoffix Znet)++ | src/core/Mu.pm:

[08:59] <dalek> rakudo/nom: Implement Mu.emit to go with &emit

[08:59] <dalek> rakudo/nom:

[08:59] <dalek> rakudo/nom: To mirror &take/.take symmetry.

[08:59] <dalek> rakudo/nom:

[08:59] <dalek> rakudo/nom: Fixes RT#128968: https://rt.perl.org/Ticket/Display.html?id=128968

[08:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4e76827bb0

[08:59] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128968

[09:00] <dalek> roast: e3c8d5a | (Zoffix Znet)++ | S17-supply/basic.t:

[09:00] <dalek> roast: Test .emit works as a method

[09:00] <dalek> roast:

[09:00] <dalek> roast: RT#128968: https://rt.perl.org/Ticket/Display.html?id=128968

[09:00] <dalek> roast: review: https://github.com/perl6/roast/commit/e3c8d5a6e5

[09:00] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128968

[10:19] <timotimo> MasterDuke: good work!

[12:27] <MasterDuke> https://github.com/perl6/nqp/blob/master/src/QRegex/Cursor.nqp#L1011

[12:27] <MasterDuke> nqp::bindpos($list, $name, $submatch);

[12:29] <MasterDuke> nqp: my $a := "c"; my $l := nqp::list(); nqp::bindpos($l, $a, "test"); say($_) for $l

[12:29] <camelia> nqp-moarvm: OUTPUT«test␤»

[12:29] <MasterDuke> nqp: my $a := "c"; my $l := nqp::list(); nqp::push($c, "before"); nqp::bindpos($l, $a, "test"); say($_) for $l

[12:29] <camelia> nqp-moarvm: OUTPUT«Use of undeclared variable '$c' at line 2, near ", \"before\""␤   at gen/moar/stage2/NQPHLL.nqp:724  (/home/camelia/rakudo-m-inst-2/share/nqp/lib/NQPHLL.moarvm:panic)␤ from gen/moar/stage2/NQP.nqp:2664  (/home/camelia/rakudo-m-inst-2/share/nqp/lib/nqp.moarvm:v…»

[12:29] <MasterDuke> nqp: my $a := "c"; my $l := nqp::list(); nqp::push($l, "before"); nqp::bindpos($l, $a, "test"); say($_) for $l

[12:29] <camelia> nqp-moarvm: OUTPUT«test␤»

[12:30] <MasterDuke> interesting, so that just resets the list?

[12:30] <MasterDuke> nqp: my $a := "c"; my $l := nqp::list(); nqp::push($l, "before 1"); nqp::push($l, "before 2"); nqp::bindpos($l, $a, "test"); say($_) for $l

[12:30] <camelia> nqp-moarvm: OUTPUT«test␤before 2␤»

[12:31] <MasterDuke> ah, just the first index

[12:32] <timotimo> i did not know that o_O

[12:32] <timotimo> that's a bug, right?

[12:33] <MasterDuke> not very obvious, why not just nqp::bindpos($list, 0, $submatch);

[12:33] <MasterDuke> don't know

[12:34] <timotimo> i mean, in theory $name could have an int in it

[12:36] <MasterDuke> i'm trying to make it a str

[12:36] <MasterDuke> right now it doesn't like https://github.com/perl6/nqp/blob/master/src/QRegex/Cursor.nqp#L985

[12:36] <MasterDuke> if !nqp::isnull($name) && nqp::defined($name) && $name ne '' {

[12:37] <MasterDuke> but i get "equal requires a concrete string, but got null"

[12:38] <MasterDuke> which i don't understand because !nqp::null($name) is the very first condition

[12:40] <dalek> nqp: 6842e5a | niner++ | / (4 files):

[12:40] <dalek> nqp: Allow for using a different prefix for NQP and MoarVM

[12:40] <dalek> nqp:

[12:40] <dalek> nqp: Parts of the build system assumed that NQP and MoarVM are being

[12:40] <dalek> nqp: installed into the same prefix.

[12:40] <dalek> nqp: This is no longer the case. With the (now documented --with-moar)

[12:40] <dalek> nqp: option, the user can point to a moar binary that may reside somewhere

[12:40] <dalek> nqp: else.

[12:40] <dalek> nqp: review: https://github.com/perl6/nqp/commit/6842e5aaca

[13:14] <dalek> rakudo/nom: a803a15 | niner++ | src/Perl6/ModuleLoader.nqp:

[13:14] <dalek> rakudo/nom: Get rid of unneeded searching of . and blib for NQP modules

[13:14] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a803a153b3

[13:14] <dalek> rakudo/nom: 6f6e6db | niner++ | / (8 files):

[13:14] <dalek> rakudo/nom: --with-nqp Configure option for having NQP in a different prefix

[13:14] <dalek> rakudo/nom:

[13:14] <dalek> rakudo/nom: With this change, Rakudo, NQP and MoarVM can be installed into different

[13:14] <dalek> rakudo/nom: prefixes each. Should simplify packaging these components separately

[13:14] <dalek> rakudo/nom: quite a bit simpler.

[13:14] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6f6e6dbc35

[13:14] <nine> mst: ^^^ sorry, I was kinda bored on my way home and too tired to dig into the JIT

[13:17] <moritz> nine++

[13:18] <nine> mst: but rakudo still gives plenty opportunity to sink a couple hours :)

[13:26] <timotimo> cool!

[13:28] <MasterDuke> so locally i just turned NQPCursorRole.$!name into a str. nqp builds and passes make test, rakudo builds, but make install dies with "X::Multi::NoMatch exception produced no message   in block <unit> at tools/build/create-moar-runner.pl line 9"

[13:29] <MasterDuke> and the parse wasn't noticeably faster :(

[14:12] <lucasb_> m: say sub ($,$,$,$,$) {}.signature

[14:12] <camelia> rakudo-moar 6f6e6d: OUTPUT«($,,,,)␤»

[14:13] <lucasb_> ^^ hopefully, an easy one to fix

[14:14] <lucasb_> I was reminded of it while reading the ticket that said that '--target=parse' is hanging

[17:40] * babydrop clicks the "Take" button on lucasb_

[17:41] <babydrop> .ask nine how did you figure out it was endless recursion in QRegex.dump? https://rt.perl.org/Ticket/Display.html?id=129262

[17:41] <yoleaux2> babydrop: I'll pass your message to nine.

[18:20] <babydrop> Hm t/spec/S02-literals/radix.t keeps failing for me during spectest run, but passes individually "Non-zero exit status: 255"

[18:21] <dalek> roast: f49e54a | (Zoffix Znet)++ | S02-literals/radix.t:

[18:21] <dalek> roast: Fix typo in test description

[18:21] <dalek> roast: review: https://github.com/perl6/roast/commit/f49e54a605

[18:21] <babydrop> ...maybe that's what it was trying to tell me...

[18:24] <dalek> rakudo/nom: 219f527 | (Zoffix Znet)++ | src/core/Signature.pm:

[18:24] <dalek> rakudo/nom: Fix strippage of anon typeless sigils in Signature.gist

[18:24] <dalek> rakudo/nom:

[18:24] <dalek> rakudo/nom: Fixes: https://irclog.perlgeek.de/perl6-dev/2016-12-04#i_13678469

[18:24] <dalek> rakudo/nom: TimToady++ for the fix

[18:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/219f527d4a

[18:26] <dalek> roast: 3ef9dfb | (Zoffix Znet)++ | S06-signature/introspection.t:

[18:26] <dalek> roast: Test Signature.gist does not strip typeless anon scalar sigils

[18:26] <dalek> roast:

[18:26] <dalek> roast: Test for commit https://github.com/rakudo/rakudo/commit/219f527d4a

[18:26] <dalek> roast: review: https://github.com/perl6/roast/commit/3ef9dfb579

[18:30] <babydrop> weird. make t/spec/S02-literals/radix.t always passes, but prove -e './perl6' -vlr t/spec/S02-literals/radix.rakudo.moar does show the crash each time :/

[18:31] <babydrop> m: :11<Z>

[18:31] <camelia> rakudo-moar 219f52: OUTPUT«Unhandled exception: Index out of range. Is: -1, should be in 0..Inf␤   at <unknown>:1  (/home/camelia/rakudo-m-inst-1/share/perl6/runtime/CORE.setting.moarvm:print_exception)␤ from SETTING::src/core/Exception.pm:426  (/home/camelia/rakudo-m-inst-1/sha…»

[18:32] <nine> babydrop: a neat trick jnthn++ tought me: attach gdb to the "hanging" process. Then: call MVM_dump_backtrace(tc)

[18:32] <yoleaux2> 17:41Z <babydrop> nine: how did you figure out it was endless recursion in QRegex.dump? https://rt.perl.org/Ticket/Display.html?id=129262

[18:32] <nine> Should give you a backtrace of the running process.

[18:32] <babydrop> nine++ thanks

[18:33] <babydrop> Ah, I see the issue of the test. This Zoffix dude forgot to increase plan in: https://github.com/perl6/roast/commit/d47d898bfa47e9a57e0e4ce087eca62eae6f67b4

[18:47] <dalek> roast/ab5tract/bag-mix-symdif: 5c99c7a | ab5tract++ | S03-operators/ (2 files):

[18:47] <dalek> roast/ab5tract/bag-mix-symdif: Re-introduce the fixes for bag/mix symdif

[18:47] <dalek> roast/ab5tract/bag-mix-symdif:

[18:47] <dalek> roast/ab5tract/bag-mix-symdif: This time, we don't change any of the set tests.

[18:47] <dalek> roast/ab5tract/bag-mix-symdif:

[18:47] <dalek> roast/ab5tract/bag-mix-symdif: All of the 'showkv' calls were removed as they are no longer necessary

[18:47] <dalek> roast/ab5tract/bag-mix-symdif: and several new tests to ensure symmetric behavior on (+) and (.) operators.

[18:47] <dalek> roast/ab5tract/bag-mix-symdif: review: https://github.com/perl6/roast/commit/5c99c7a56b

[19:38] <dalek> roast: 2c21cc2 | (Zoffix Znet)++ | S02-literals/radix.t:

[19:38] <dalek> roast: Fix broken radix parse tests

[19:38] <dalek> roast:

[19:38] <dalek> roast: Tests added in https://github.com/perl6/roast/commit/d47d898bfa47e9a57e0e4ce087eca62eae6f67b4

[19:38] <dalek> roast: - Bump plan

[19:38] <dalek> roast: - radix 36 does not trigger the tested error, test radix 35 instead

[19:38] <dalek> roast: review: https://github.com/perl6/roast/commit/2c21cc23fd

[19:39] <dalek> rakudo/nom: fa82a1f | (Zoffix Znet)++ | src/core/Exception.pm:

[19:39] <dalek> rakudo/nom: Fix crash with X::Syntax::Number::InvalidCharacter when radix is 11

[19:39] <dalek> rakudo/nom:

[19:39] <dalek> rakudo/nom: "There are only two hard problems in Computer Science:

[19:39] <dalek> rakudo/nom:    cache invalidation, naming things, and off-by-one errors."

[19:39] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fa82a1f85a

[19:40] <japhb> .oO( Invalidating everyone's mental cache when you rename something to avoid off-by-one errors )

[20:15] <MasterDukeLaptop> is there any way to get line directives working during the nqp compile?

[20:17] <MasterDukeLaptop> this line https://github.com/perl6/nqp/blob/master/src/HLL/Compiler.nqp#L679 is run, but @*comp_line_directives is always empty

[20:19] <MasterDukeLaptop> however, https://github.com/perl6/nqp/blob/master/src/HLL/Actions.nqp#L228 is not being called

[20:20] <MasterDukeLaptop> i tried making new bootstrap files, but no dice

[20:44] <[TuxCM]> This is Rakudo version 2016.11-130-gfa82a1f85 built on MoarVM version 2016.11-27-g3171dbbe

[20:44] <[TuxCM]> csv-ip5xs        3.264

[20:44] <[TuxCM]> test            14.397

[20:44] <[TuxCM]> test-t           6.610

[20:44] <[TuxCM]> csv-parser      13.801

[20:50] <MasterDukeLaptop> [TuxCM]: have you been able to make use of any of lizmat's recent work on native shaped arrays?

[21:07] <MasterDuke> .tell jnthn to go along with the issue AlexDaniel mentioned, here's the backtrace for a segfault. however, i don't know exactly what the code was that caused the segfault, since accidentally we were both editing it at the same time. https://gist.github.com/MasterDuke17/8e1628d62ac4e77e0cb52ac3ffd6ccde

[21:07] <yoleaux2> MasterDuke: I'll pass your message to jnthn.

[21:07] <AlexDaniel> I think the issue is not with the code, you just got a bit lucky once :)

[21:51] <babydrop> .tell Zoffix https://irclog.perlgeek.de/perl6/2016-12-04#i_13679924

[21:51] <yoleaux2> babydrop: I'll pass your message to Zoffix.

[22:45] <dalek> roast: 47c7fef | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-literals/quoting-unicode.t:

[22:45] <dalek> roast: “smart” → “curly” (related to RT #130260)

[22:45] <dalek> roast:

[22:45] <dalek> roast: These are just the test descriptions, so I guess there

[22:45] <dalek> roast: is no problem with that change whatsoever.

[22:45] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130260

[22:45] <dalek> roast: review: https://github.com/perl6/roast/commit/47c7feff31

[22:54] <babydrop> Looks like Apevoyer started failing after "--with-nqp Configure option for having NQP in a different prefix" commit

[22:57] <timotimo> ah, darn

[23:36] <dalek> nqp: 1e7409a | MasterDuke17++ | src/QRegex/Cursor.nqp:

[23:36] <dalek> nqp: Convert tabs to spaces and align things

[23:36] <dalek> nqp: review: https://github.com/perl6/nqp/commit/1e7409a35f

[23:36] <dalek> nqp: 9e53a15 | (Zoffix Znet)++ | src/QRegex/Cursor.nqp:

[23:36] <dalek> nqp: Merge pull request #328 from MasterDuke17/QRegex-Cursor.nqp_whitespace_cleanup

[23:36] <dalek> nqp:

[23:36] <dalek> nqp: Convert tabs to spaces and align things

[23:36] <dalek> nqp: review: https://github.com/perl6/nqp/commit/9e53a152e4
