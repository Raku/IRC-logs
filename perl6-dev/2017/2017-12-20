[00:58] <tbrowder> moritz: thnx for the tip

[01:01] <tbrowder> wow, that is a REAL cleanup tip!

[03:05] <Geth> ¦ rakudo/zoffix-post-release: dc800d8933 | (Zoffix Znet)++ | src/core/IO/CatHandle.pm

[03:05] <Geth> ¦ rakudo/zoffix-post-release: Fix IO::CatHandle.read switching handles too soon

[03:05] <Geth> ¦ rakudo/zoffix-post-release:

[03:05] <Geth> ¦ rakudo/zoffix-post-release: Fixes #1313: https://github.com/rakudo/rakudo/issues/1313

[03:05] <Geth> ¦ rakudo/zoffix-post-release:

[03:05] <Geth> ¦ rakudo/zoffix-post-release: The logic is:

[03:05] <Geth> ¦ rakudo/zoffix-post-release:   read some stuff

[03:05] <Geth> ¦ rakudo/zoffix-post-release:     do we have enough stuff?

[03:05] <Geth> ¦ rakudo/zoffix-post-release: <…commit message has 15 more lines…>

[03:05] <Geth> ¦ rakudo/zoffix-post-release: review: https://github.com/rakudo/rakudo/commit/dc800d8933

[04:00] <Geth> ¦ roast/zoffix-post-release: 6a027d36c5 | (Zoffix Znet)++ | S17-promise/nonblocking-await.t

[04:00] <Geth> ¦ roast/zoffix-post-release: Fix typo in test description

[04:00] <Geth> ¦ roast/zoffix-post-release: review: https://github.com/perl6/roast/commit/6a027d36c5

[04:50] <Geth> ¦ rakudo/zoffix-post-release: c51f1796e6 | (Zoffix Znet)++ | 2 files

[04:50] <Geth> ¦ rakudo/zoffix-post-release: Fix issues with &await given conted Iterables

[04:50] <Geth> ¦ rakudo/zoffix-post-release:

[04:50] <Geth> ¦ rakudo/zoffix-post-release: Fixes R#1323: https://github.com/rakudo/rakudo/issues/1323

[04:50] <Geth> ¦ rakudo/zoffix-post-release:

[04:50] <Geth> ¦ rakudo/zoffix-post-release: - For 6.c: eagerize return of the map, otherwise nesting of iterables

[04:50] <Geth> ¦ rakudo/zoffix-post-release:     prevents its sinkage, never causing it to reify (and thus await)

[04:50] <synopsebot> R#1323 [open]: https://github.com/rakudo/rakudo/issues/1323 Issues with &await with nested containerazed Iterables

[04:50] <Geth> ¦ rakudo/zoffix-post-release: - For 6.d: approach similar to 6.c version blew up some tests that

[04:50] <Geth> ¦ rakudo/zoffix-post-release: <…commit message has 5 more lines…>

[04:50] <Geth> ¦ rakudo/zoffix-post-release: review: https://github.com/rakudo/rakudo/commit/c51f1796e6

[04:52] <Geth> ¦ roast/zoffix-post-release: 9a9ec4989f | (Zoffix Znet)++ | 2 files

[04:52] <Geth> ¦ roast/zoffix-post-release: Test issues with &await

[04:52] <Geth> ¦ roast/zoffix-post-release:

[04:52] <Geth> ¦ roast/zoffix-post-release: Closes https://github.com/rakudo/rakudo/issues/1323

[04:52] <Geth> ¦ roast/zoffix-post-release: Rakudo fix: https://github.com/rakudo/rakudo/commit/c51f1796e6

[04:52] <Geth> ¦ roast/zoffix-post-release:

[04:52] <Geth> ¦ roast/zoffix-post-release: Include test for both 6.c and 6.d languages, since we use two

[04:52] <Geth> ¦ roast/zoffix-post-release: separate sets of &awaits for them and each has different failure modes

[04:52] <Geth> ¦ roast/zoffix-post-release: in the bug.

[04:52] <Geth> ¦ roast/zoffix-post-release: review: https://github.com/perl6/roast/commit/9a9ec4989f

[04:52] <Zoffix> .tell jnthn Made a change to 6.d &await that's kinda gross. If you wanted to review: https://github.com/rakudo/rakudo/commit/c51f1796e6

[04:52] <yoleaux> Zoffix: I'll pass your message to jnthn.

[05:37] <AlexDaniel> fwiw I'll be online for the whole day, but sometimes sporadically :)

[12:19] <[Tux]> Rakudo version 2017.11-133-g334b87226 - MoarVM version 2017.11-48-g0b9f8090a

[12:19] <[Tux]> csv-test-xs-20      0.430 -  0.481

[12:19] <[Tux]> csv-ip5xs           1.077 -  1.082

[12:19] <[Tux]> test-t --race       1.178 -  1.248

[12:19] <[Tux]> test-t              2.925 -  2.975

[12:19] <[Tux]> test               11.652 - 11.780

[12:19] <[Tux]> csv-parser         12.078 - 12.318

[12:19] <[Tux]> csv-ip5xs-20       13.125 - 13.128

[12:19] <[Tux]> test-t-20 --race   18.137 - 18.518

[12:19] <[Tux]> test-t-20          53.065 - 53.936

[12:20] <lizmat> Files=1233, Tests=75894, 338 wallclock secs (14.98 usr  5.21 sys + 2310.69 cusr 234.55 csys = 2565.43 CPU)

[13:40] <Geth> ¦ nqp/master: 4 commits pushed by pmurias++

[13:40] <Geth> ¦ nqp/master: d6a01df92c | [js] Make nqp::cleardispatcher behave like on the MoarVM

[13:40] <Geth> ¦ nqp/master: 506cea5bcc | Add test for nqp::cleardispatcher

[13:40] <Geth> ¦ nqp/master: a4caa5dc33 | [js] Fix bug when autoclosing a code ref

[13:40] <Geth> ¦ nqp/master: 69800ed74f | Expand test for nqp::setinvokespec

[13:40] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/567f6568f1...69800ed74f

[13:51] <lizmat> Trying to determine if something is a value type or not, is still difficult

[13:52] <lizmat> I was thinking of adding a 'class ObjAtValue is ObjAt { }' to src/core/ObjAt.pm

[13:52] <lizmat> and then all classes that have a value type WHICH bless it with ObjAtValue rather than ObjAt

[13:53] <lizmat> then checking whether something is a value type would be as simple as nqp::istype(ObjAtValue)

[13:53] <lizmat> how is that for a plan?  jnthn timotimo moritz TimToady ZofBot AlexDaniel` ?

[13:54] <moritz> lizmat: sounds good to me, but I'm not aware of all the ramnifications

[13:55] <lizmat> well, any tests for ObjAt would still work, so I think it would be ok

[13:57] <travis-ci> NQP build failed. pmurias 'Expand test for nqp::setinvokespec'

[13:57] <travis-ci> https://travis-ci.org/perl6/nqp/builds/319176105 https://github.com/perl6/nqp/compare/567f6568f1ad...69800ed74fab

[14:20] <Zoffix> m: say -«%(:70b)

[14:20] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: «{b => -70}␤»

[14:20] <timotimo> we don't allow :-70b i imagine?

[14:20] <Zoffix> No

[14:21] <Zoffix> This is a test in roast and it looks bogus to me. Why is - applied to the value? Pair isn't Iterable

[14:21] <timotimo> you have a % in between

[14:22] <timotimo> it's working on a hash, not on a single pair

[14:22] <timotimo> that's how i'd explain it

[14:22] <Zoffix> Same difference

[14:22] <Zoffix> m: say -«:70b

[14:22] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: «{b => -70}␤»

[14:23] <timotimo> that's more interesting, then

[14:24] <Zoffix> m: dd %(:4b, :60c)».&{(dd $_ )}

[14:24] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: «Int % = 60␤Int % = 4␤Hash % = {:b(Any), :c(Any)}␤»

[14:25] <Zoffix> m: dd %(:4b, :60c)».value

[14:25] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: «(exit code 1) No such method 'value' for invocant of type 'Int'. Did you mean 'values'?␤  in block <unit> at /tmp/FK1YwiJQ3q line 1␤␤»

[14:25] <Zoffix> m: dd (:4b, :60c)».value

[14:25] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: «(4, 60)␤»

[14:29] <Zoffix> Looking at some deepmap tests, looks like the current behaviour is a winner in this case. Otherwise, this:

[14:29] <Zoffix> m: dd %(:4b, :60c)».flip

[14:29] <evalable6> Zoffix, rakudo-moar 334b87226: OUTPUT: «Hash % = {:b("4"), :c("06")}␤»

[14:29] <Zoffix> Would have to return a List of .flipped Pairs which seems kinda useless

[14:30] <Zoffix> And gather { @a».take } will have to remain caveated about breaking Pairs of Hashes

[14:33] <Zoffix> This was the patch for gather { @a».take } FWIW https://gist.github.com/zoffixznet/25015bc476e076d0ebf60bd20b47b314

[14:33] <Geth> ¦ nqp: ca5c3bd28f | pmurias++ | t/nqp/100-dispatcher.t

[14:33] <Geth> ¦ nqp: [jvm] Skip some failing tests

[14:33] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/ca5c3bd28f

[14:38] <Zoffix> BUT, the routines don't descend into Pairs when they're part of a List :/

[14:38] <Zoffix> This is really warty

[14:48] <travis-ci> NQP build failed. pmurias '[jvm] Skip some failing tests'

[14:48] <travis-ci> https://travis-ci.org/perl6/nqp/builds/319200198 https://github.com/perl6/nqp/compare/69800ed74fab...ca5c3bd28f9c

[14:50] <lizmat> Zoffix: agree on wartiness  :-)

[17:17] <TimToady> lizmat: I don't see any problem with ObjAtValue, except that objects aren't at values :)

[17:19] <TimToady> but I haven't thought of a better name...

[17:21] <TimToady> ObjAtPlatonicIdealSpace is a bit unwieldy...

[17:22] <TimToady> could pun something like ObjAtom I suppose

[17:23] <moritz> ValueObjIdentity

[17:24] <moritz> or ValueObjectIdentity -- I guess it doesn't need to be huffmannized

[17:25] <TimToady> It'sTheSameOneEverywhere

[18:06] <samcv> i got t/spec/S17-procasync/stress.t test 22 flapping.

[18:07] <samcv> can i ignore it for the MoarVM release or no?

[18:08] * lizmat checks

[18:09] <timotimo> ValueObjAt

[18:14] <lizmat> like that

[18:17] <lizmat> samcv: can't get it to flap :-(

[18:17] <samcv> it did it when i was running stresstest

[18:18] <samcv> but not running it again by itself

[18:18] * lizmat runs a full stresstest

[18:26] <Geth> ¦ roast: cfaa5d1801 | (Zoffix Znet)++ (committed using GitHub Web editor) | S17-procasync/stress.t

[18:26] <Geth> ¦ roast: Use larger wait period in doesn't-hang test

[18:26] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/cfaa5d1801

[18:27] <Zoffix> samcv: ^ that'll likely stop it flopping

[18:27] <Zoffix> And if it still flops, there's likely an issue

[18:27] <lizmat> fwiw, stresstest did not fail for that test

[18:28] <Zoffix> I ran multiple stresstests this morning and no failures, tho I was using zoffix-post-release branch

[18:42] <samcv> well running it again it is working now (though updated roast version as well)

[18:42] <samcv> so probably okay

[18:47] <Zoffix> \o/

[18:49] <samcv> moarvm has been tagged and released

[18:49] <lizmat> whee!

[18:50] <Zoffix> samcv++_

[18:50] <[Coke]> samcv++

[18:54] <samcv> tar.gz pushed to moarvm.org repo now

[19:19] <bartolin> oh, the test pmurias++ added earlier today fails really badly on the JVM: https://github.com/perl6/nqp/commit/506cea5bcc

[19:19] <bartolin> it seems to happen during parsing, so I don't see a way to fudge the test

[19:20] <bartolin> I'd prefer to remove the tests temporarily and re-add it after the release

[19:20] <bartolin> nqp: sub bar() { my $foo := 100; nqp::takedispatcher('$foo') }

[19:21] <bartolin> anyway, that dies with NegativeArraySizeException

[19:23] <lizmat> bartolin: please do  :-)

[19:26] <Geth> ¦ nqp: 24ebb039c9 | usev6++ | t/nqp/100-dispatcher.t

[19:26] <Geth> ¦ nqp: Temporarily remove three newly added tests

[19:26] <Geth> ¦ nqp:

[19:26] <Geth> ¦ nqp: They explode badly on the JVM. I'll revert this commit

[19:26] <Geth> ¦ nqp: after the release.

[19:26] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/24ebb039c9

[19:27] <ilmari> isn't the .backend.name check in that removed test just the wrong way around?

[19:28] <bartolin> yes, that too. (but fixing that didn't help)

[19:31] * lizmat wonders whether AlexDaniel` has been nudged now that MoarVM has been tagged and uploaded ?

[19:42] <lizmat> https://twitter.com/zoffix/status/943520971822108672   # Zoffix: I was thinking the same thing :-)

[19:42] <travis-ci> NQP build passed. usev6 'Temporarily remove three newly added tests

[19:42] <travis-ci> https://travis-ci.org/perl6/nqp/builds/319336538 https://github.com/perl6/nqp/compare/ca5c3bd28f9c...24ebb039c93b

[20:09] <AlexDaniel`> Ah OK. Will be back home in 30 mins

[20:10] <AlexDaniel`> samcv++

[20:53] <lizmat> m: say "👍🏽".uninames; say "👍🏽".uniname   # samcv: is that a bug or not?

[20:53] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: «(THUMBS UP SIGN EMOJI MODIFIER FITZPATRICK TYPE-4)␤THUMBS UP SIGN␤»

[20:54] <samcv> uhm what is the bug? also hexchat isn't rendering the icons though i saw there were some in the notification that popped up on my screen

[20:54] <lizmat> isn't it supposed to be a single grapheme ?

[20:54] <samcv> the first you did uninames not uniname though

[20:54] <lizmat> yup

[20:55] <lizmat> but I sorta expected the second one to produce the same string, because it is one grapheme ?

[20:55] <lizmat> m: say "👍🏽".elems

[20:55] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: «1␤»

[20:55] <lizmat> m: say "👍🏽".chars

[20:55] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: «1␤»

[20:57] <lizmat> m: say "THUMBS UP SIGN, EMOJI MODIFIER FITZPATRICK TYPE-4".parse-names

[20:57] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: «👍🏽␤»

[20:57] <lizmat> m: say "THUMBS UP SIGN, EMOJI MODIFIER FITZPATRICK TYPE-4".parse-names.chars

[20:57] <evalable6> lizmat, rakudo-moar 334b87226: OUTPUT: «1␤»

[20:58] <lizmat> I'm not sure this is a bug or just a misunderstanding on my end  :-)

[20:59] <samcv> lizmat: ah.

[20:59] <AlexDaniel> doesn't it need a ZWJ?

[20:59] <samcv> yeah it only returns the first codepoint name

[20:59] <samcv> number of graphemes doesn't matter

[21:00] <lizmat> okidoki

[21:06] <Geth> ¦ rakudo: 1273d064d2 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[21:06] <Geth> ¦ rakudo: Changelog and announcement

[21:06] <Geth> ¦ rakudo:

[21:06] <Geth> ¦ rakudo: Deliberately not logged:

[21:06] <Geth> ¦ rakudo: 2658fcdf 6f357af0 03e099d7 47ebc4ab 76fcea1e c967cb6c 79390147

[21:06] <Geth> ¦ rakudo: f768623d e5b660ee c0f99a39 2f955d55 0a2e5172 1fb51895 d98ccea2

[21:06] <Geth> ¦ rakudo: 370073fc 8159e383 ae6177ca f82433bf e5879c64 5eb299fb 1fbb9c80

[21:06] <Geth> ¦ rakudo: a37a4e52 6a78b9ed 345ea806 790ae04c c8891791 e13d5b6e 20b6b848

[21:06] <Geth> ¦ rakudo: 7a0eba64 4003b93f a9ec5f92 80dfb30c b285aaf3 deb88aa5 4a32089f

[21:06] <Geth> ¦ rakudo: f78fd7c1 f6c2e70b f70e20bd 1dbf5f58 f1be29c0 a5635446 e57c771c

[21:06] <Geth> ¦ rakudo: 83eac0e4 21555412 c398eb7e 11613475 46eae469 664967d0 53a94fe5

[21:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1273d064d2

[21:14] <AlexDaniel> releasable6: status

[21:14] <releasable6> AlexDaniel, Next release will happen when it's ready. No blockers. 130 out of 134 commits logged

[21:14] <releasable6> AlexDaniel, Details: https://gist.github.com/6222c3f0151ab5070b950fb1edceac93

[22:02] <Geth> ¦ rakudo/zoffix-post-release: 7df750a108 | (Zoffix Znet)++ | 2 files

[22:02] <Geth> ¦ rakudo/zoffix-post-release: Revert "Fix issues with &await given conted Iterables"

[22:02] <Geth> ¦ rakudo/zoffix-post-release:

[22:02] <Geth> ¦ rakudo/zoffix-post-release: This reverts commit c51f1796e627e93b34e1b06b46c6dccb82549e04.

[22:02] <Geth> ¦ rakudo/zoffix-post-release:

[22:02] <Geth> ¦ rakudo/zoffix-post-release: Per: https://irclog.perlgeek.de/moarvm/2017-12-20#i_15604339

[22:02] <Geth> ¦ rakudo/zoffix-post-release: +1 on not bending over backwards to DWIM with deconts for the user

[22:02] <Geth> ¦ rakudo/zoffix-post-release: review: https://github.com/rakudo/rakudo/commit/7df750a108

[22:03] <Geth> ¦ roast/zoffix-post-release: 37d56be46f | (Zoffix Znet)++ | 2 files

[22:03] <Geth> ¦ roast/zoffix-post-release: Revert "Test issues with &await"

[22:03] <Geth> ¦ roast/zoffix-post-release:

[22:03] <Geth> ¦ roast/zoffix-post-release: This reverts commit 9a9ec4989f2f99b2f47d8465c50128424161ef61.

[22:03] <Geth> ¦ roast/zoffix-post-release:

[22:03] <Geth> ¦ roast/zoffix-post-release: This isn't the direction we want to go in.

[22:03] <Geth> ¦ roast/zoffix-post-release: Per: https://github.com/rakudo/rakudo/commit/7df750a108

[22:03] <Geth> ¦ roast/zoffix-post-release: review: https://github.com/perl6/roast/commit/37d56be46f

[22:04] <jnthn> While I go along with "torture the implementor on behalf of the users", `await` walking a nested data structure feels a bit too magical

[22:05] <jnthn> Especially when we've sometimes speculated about whether we should get a non-Awaitable just pass through `await`

[22:05] <jnthn> Rather than be an error

[22:06] <Geth> ¦ rakudo: 27961edb5f | (Aleks-Daniel Jakimenko-Aleksejev)++ | docs/release_guide.pod

[22:06] <Geth> ¦ rakudo: Actual date; Claim next release

[22:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/27961edb5f

[22:06] <jnthn> Sorry I've been about so little over the last week, was sick.

[22:07] <jnthn> I've not backlogged at all.

[22:07] <jnthn> But I did read the weekly :)

[22:08] <Zoffix> .

[22:08] <yoleaux> 21:34Z <jnthn> Zoffix: I don't think await should be doing any flattening or descent beyond what *@awaitables does when slurping

[22:09] <Zoffix> jnthn: yeah, that's why I pinged you. It felt a bit weird :) Looking over that commit, I'm going to put back the `eager` in 6.c (I think 6.d doesn't need it). So that await (p, (p, p)) would await it

[22:11] <jnthn> Zoffix: Yeah, that part seemed sensible

[22:12] <Zoffix> m: use v6.d.PREVIEW; my atomicint $x; sub p { start { sleep .3; $x⚛++ } }; await (((p(), (p(), (p(),))), (p(), p(), p())), (p(), p(), p())); say [$x, $x == 9]

[22:12] <evalable6> Zoffix, rakudo-moar 27961edb5: OUTPUT: «(exit code 1) An operation first awaited:␤  in block <unit> at /tmp/kAZNtZWgVZ line 1␤␤Died with the exception:␤    Can only specify Awaitable objects to await (got a List)␤      in block <unit> at /tmp/kAZNtZWgVZ line 1␤␤»

[22:12] <Zoffix> What about this one? It could fit into the slurpy and get flattened there, but it goes through Iterable candidate

[22:13] <Zoffix> m: my atomicint $x; sub p { start { sleep .3; $x⚛++ } }; await (((p(), (p(), (p(),))), (p(), p(), p())), (p(), p(), p())); say [$x, $x == 9]

[22:13] <evalable6> Zoffix, rakudo-moar 27961edb5: OUTPUT: «[0 False]␤»

[22:13] <Zoffix> The eager patch in 6.c makes this work.

[22:15] <Zoffix> I'll add a .flat call in 6.d

[22:15] <jnthn> Arguably, we could remove the Iterable candidate in 6.d

[22:15] <Zoffix> Ah, OK, even better :)

[22:15] <jnthn> And just leave the *@foo

[22:15] <jnthn> Less code

[22:15] <Zoffix> Yeah

[22:16] <jnthn> And given that you're willing to pay a context switch overhead for `await` if you're using it...the opt of the other one is a drop in the ocean

[22:20] <Zoffix> If you feel like making more decisions, there was a ping to you on S#370 about whether nodemap should be made private

[22:20] <synopsebot> S#370 [open]: https://github.com/perl6/roast/issues/370 `nodemap` is virtually untested

[22:24] <jnthn> My recollection in this area is that some years back (pre-6.c), TimToady looked at the various meta-op guts impl functions we had and concluded that they should be public and given public names. `produce` (the function form of the [\...] metaop) appeared at that time as a result of this

[22:24] <jnthn> iirc, nodemap/hypermap/deepmap came around this time

[22:24] <jnthn> And so were indeed intended as public

[22:25] <Zoffix> OK cool. I'll add a comment on the Issue

[22:50] <AlexDaniel> well… 2017-12-21 is kinda a bit in the future…

[22:50] <AlexDaniel> but we'll take it I think :)

[23:01] <Geth> ¦ nqp: 68df86b901 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[23:01] <Geth> ¦ nqp: [release] Bump MoarVM revision to 2017.12

[23:01] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/68df86b901

[23:01] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.11-48-g0b9f809...2017.12

[23:01] <Geth> ¦ nqp: b1e3ed44e5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | VERSION

[23:01] <Geth> ¦ nqp: [release] Bump VERSION to 2017.12

[23:01] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/b1e3ed44e5

[23:02] <Geth> ¦ rakudo: 0700cdbf0d | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[23:02] <Geth> ¦ rakudo: [release] Bump NQP revision to 2017.12

[23:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0700cdbf0d

[23:02] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.11-63-gdc8f067...2017.12

[23:02] <Geth> ¦ rakudo: c84ed2942d | (Aleks-Daniel Jakimenko-Aleksejev)++ | VERSION

[23:02] <Geth> ¦ rakudo: [release] Bump VERSION to 2017.12

[23:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c84ed2942d

[23:06] <Zoffix> AlexDaniel++

[23:07] <AlexDaniel> and there we have it, two years of releases since 2015.12

[23:08] <Zoffix> \o/

[23:08] <AlexDaniel> 🙌 indeed

[23:09] <AlexDaniel> squashable6: next

[23:09] <squashable6> AlexDaniel, Next SQUASHathon in 15 days and ≈10 hours (2018-01-06 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[23:11] <lizmat> AlexDaniel++

[23:37] <Geth> ¦ rakudo/zoffix-post-release: ee8ac60720 | (Zoffix Znet)++ | 2 files

[23:37] <Geth> ¦ rakudo/zoffix-post-release: Ensure &await can handle flattenable Iterables

[23:37] <Geth> ¦ rakudo/zoffix-post-release:

[23:37] <Geth> ¦ rakudo/zoffix-post-release: Fixes https://github.com/rakudo/rakudo/issues/1323

[23:37] <Geth> ¦ rakudo/zoffix-post-release:

[23:37] <Geth> ¦ rakudo/zoffix-post-release: We don't want to do deconts for the user, as previous commits

[23:37] <Geth> ¦ rakudo/zoffix-post-release: tried to fix the issue with, but we still want[^1] to accept whatever

[23:37] <Geth> ¦ rakudo/zoffix-post-release: would be accepted by *@ slurpy:

[23:37] <Geth> ¦ rakudo/zoffix-post-release: <…commit message has 10 more lines…>

[23:37] <Geth> ¦ rakudo/zoffix-post-release: review: https://github.com/rakudo/rakudo/commit/ee8ac60720

[23:38] <Geth> ¦ rakudo/zoffix-post-release: 1a4df4e100 | (Zoffix Znet)++ | 3 files

[23:38] <Geth> ¦ rakudo/zoffix-post-release: Ensure &await can handle flattenable Iterables

[23:38] <Geth> ¦ rakudo/zoffix-post-release:

[23:38] <Geth> ¦ rakudo/zoffix-post-release: Fixes https://github.com/rakudo/rakudo/issues/1323

[23:38] <Geth> ¦ rakudo/zoffix-post-release:

[23:38] <Geth> ¦ rakudo/zoffix-post-release: We don't want to do deconts for the user, as previous commits

[23:38] <Geth> ¦ rakudo/zoffix-post-release: tried to fix the issue with, but we still want[^1] to accept whatever

[23:38] <Geth> ¦ rakudo/zoffix-post-release: would be accepted by *@ slurpy:

[23:38] <Geth> ¦ rakudo/zoffix-post-release: <…commit message has 10 more lines…>

[23:38] <Geth> ¦ rakudo/zoffix-post-release: review: https://github.com/rakudo/rakudo/commit/1a4df4e100

[23:39] <Geth> ¦ roast/zoffix-post-release: 8398c47121 | (Zoffix Znet)++ | 2 files

[23:39] <Geth> ¦ roast/zoffix-post-release: Add tests for &await with slurpable Iterables

[23:39] <Geth> ¦ roast/zoffix-post-release:

[23:39] <Geth> ¦ roast/zoffix-post-release: Rakudo fix: https://github.com/rakudo/rakudo/commit/1a4df4e100

[23:39] <Geth> ¦ roast/zoffix-post-release: Issue: https://github.com/rakudo/rakudo/issues/1323

[23:39] <Geth> ¦ roast/zoffix-post-release: review: https://github.com/perl6/roast/commit/8398c47121

[23:50] <Geth> ¦ rakudo/master: 5 commits pushed by (Zoffix Znet)++

[23:50] <Geth> ¦ rakudo/master: dc800d8933 | Fix IO::CatHandle.read switching handles too soon

[23:50] <Geth> ¦ rakudo/master: c51f1796e6 | Fix issues with &await given conted Iterables

[23:50] <Geth> ¦ rakudo/master: 7df750a108 | Revert "Fix issues with &await given conted Iterables"

[23:50] <Geth> ¦ rakudo/master: 1a4df4e100 | Ensure &await can handle flattenable Iterables

[23:50] <Geth> ¦ rakudo/master: 8275c03dd2 | Merge branch 'zoffix-post-release'

[23:50] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/c84ed2942d...8275c03dd2

[23:51] <Geth> ¦ roast/master: 6 commits pushed by (Zoffix Znet)++

[23:51] <Geth> ¦ roast/master: 9b825525c8 | IO::CatHandle.read does not switch to another handle too early

[23:51] <Geth> ¦ roast/master: 6a027d36c5 | Fix typo in test description

[23:51] <Geth> ¦ roast/master: 9a9ec4989f | Test issues with &await

[23:51] <Geth> ¦ roast/master: 37d56be46f | Revert "Test issues with &await"

[23:51] <Geth> ¦ roast/master: 8398c47121 | Add tests for &await with slurpable Iterables

[23:51] <Geth> ¦ roast/master: ad0069be85 | Merge branch 'zoffix-post-release'

[23:51] <Geth> ¦ roast/master: review: https://github.com/perl6/roast/compare/cfaa5d1801...ad0069be85

[23:52] <Geth> ¦ rakudo: 08539c43d2 | (Zoffix Znet)++ | 2 files

[23:52] <Geth> ¦ rakudo: Revert "Revert "Make Array.gist limit output to 100 els""

[23:52] <Geth> ¦ rakudo:

[23:52] <Geth> ¦ rakudo: This reverts commit 334b87226d5950f85025a99797960753b014ceb3.

[23:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/08539c43d2

[23:52] <Geth> ¦ roast: 5a0beb5afb | (Zoffix Znet)++ | S02-types/array.t

[23:52] <Geth> ¦ roast: Revert "Revert "Test Array.gist limits output to 100 els""

[23:52] <Geth> ¦ roast:

[23:52] <Geth> ¦ roast: This reverts commit 1b814c63368ba018fe25b92b92e4972c4165b59c.

[23:53] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5a0beb5afb

[23:54] <lizmat> m: use Telemetry; snapper; Nil for ^10000000

[23:54] <evalable6> lizmat, rakudo-moar c84ed2942: OUTPUT: «Telemetry Report of Process #21867 (2017-12-20T23:54:27Z)␤Number of Snapshots: 7␤Initial/F…»

[23:54] <evalable6> lizmat, Full output: https://gist.github.com/22f93ca987c14b866acaed53d866842c

[23:54] <lizmat> m: use snapper; Nil for ^10000000

[23:54] <evalable6> lizmat, rakudo-moar c84ed2942: OUTPUT: «Telemetry Report of Process #21919 (2017-12-20T23:54:45Z)␤Number of Snapshots: 6␤Initial/F…»

[23:54] <evalable6> lizmat, Full output: https://gist.github.com/a3d5b7e73164bd33f31ab21475e6fbb0

[23:55] <lizmat> weird: I get very different results locally
