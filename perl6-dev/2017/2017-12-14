[00:34] <Geth> ¦ rakudo: 9de4a60efe | (Zoffix Znet)++ | src/core/IO/Handle.pm

[00:34] <Geth> ¦ rakudo: Fix dispatch infiniloop in IO::Handle

[00:34] <Geth> ¦ rakudo:

[00:34] <Geth> ¦ rakudo: In output routines, when using Junctions as args. They go through

[00:34] <Geth> ¦ rakudo: the slurpy that .join()s them, resulting in another Junction, and

[00:34] <Geth> ¦ rakudo: so the loop.

[00:34] <Geth> ¦ rakudo:

[00:34] <Geth> ¦ rakudo: RT#132549: https://rt.perl.org/Ticket/Display.html?id=132549

[00:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9de4a60efe

[00:34] <synopsebot> RT#132549 [open]: https://rt.perl.org/Ticket/Display.html?id=132549 Junctions cause crash / inifnite loop in &put and related routines and methods

[00:35] <Geth> ¦ rakudo: 8155c4b885 | (Zoffix Znet)++ | src/core/control.pm

[00:35] <Geth> ¦ rakudo: Fix crash in &warn with Junctions

[00:35] <Geth> ¦ rakudo:

[00:35] <Geth> ¦ rakudo: The slurpy prevents threading and the body assumes it can just

[00:35] <Geth> ¦ rakudo: unbox the items, causing a crash.

[00:35] <Geth> ¦ rakudo:

[00:35] <Geth> ¦ rakudo: RT#132549: https://rt.perl.org/Ticket/Display.html?id=132549

[00:35] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8155c4b885

[00:36] <Geth> ¦ roast: 97ceb93f40 | (Zoffix Znet)++ | 2 files

[00:36] <Geth> ¦ roast: Cover output routines + Junction bugs

[00:36] <Geth> ¦ roast:

[00:36] <Geth> ¦ roast: RT#132549: https://rt.perl.org/Ticket/Display.html?id=132549

[00:36] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/8155c4b885

[00:36] <Geth> ¦ roast:             https://github.com/rakudo/rakudo/commit/9de4a60efe

[00:36] <Geth> ¦ roast:             https://github.com/rakudo/rakudo/commit/07616effd1

[00:36] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/97ceb93f40

[01:33] <Geth> ¦ rakudo: 2c951798a2 | (Zoffix Znet)++ | 2 files

[01:33] <Geth> ¦ rakudo: PDGfy Pod errors involving infix =

[01:33] <Geth> ¦ rakudo:

[01:33] <Geth> ¦ rakudo: RT#125300: https://rt.perl.org/Ticket/Display.html?id=125300

[01:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2c951798a2

[01:34] <synopsebot> RT#125300 [new]: https://rt.perl.org/Ticket/Display.html?id=125300 [LTA] Potentially misleading error text

[01:39] <Zoffix> .tell AlexDaniel can this ticket be closed? It got fix and tests and was resolved but then I see you marked it as open and taken but no reason was stated: https://rt.perl.org/Ticket/Display.html?id=125371#ticket-history

[01:39] <yoleaux> Zoffix: I'll pass your message to AlexDaniel.

[01:54] <Geth> ¦ rakudo: eaf609edb2 | (Zoffix Znet)++ | t/05-messages/02-errors.t

[01:54] <Geth> ¦ rakudo: Test no error repeatage for `say 1 [if/unless];`

[01:54] <Geth> ¦ rakudo:

[01:54] <Geth> ¦ rakudo: RT#125596: https://rt.perl.org/Ticket/Display.html?id=125596

[01:54] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/eaf609edb2

[01:54] <synopsebot> RT#125596 [new]: https://rt.perl.org/Ticket/Display.html?id=125596 [LTA] error message with if; and unless; without conditions

[03:23] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Make print/say/put/note handle junctions correctly

[03:23] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/315930481 https://github.com/rakudo/rakudo/compare/11613475249d...07616effd19a

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: a5cf61c905 | (Zoffix Znet)++ | src/core/hash_slice.pm

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: Fix postcircumfix:<{ }> for hashes with Mu keys

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201:

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: Fixes* RT#125614: https://rt.perl.org/Ticket/Display.html?id=125614

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201:

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: Take a Mu key so Junctions don't thread and Mus get accepted. Let the

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: Associative's method sort out the threading and stuff.

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201:

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: * full spectest was not run, as the fix excersized RT#128905, causing

[03:24] <synopsebot> RT#125614 [open]: https://rt.perl.org/Ticket/Display.html?id=125614 [BUG] Can't store whole 1&2 junctions in Mu-keyed hash in Rakudo

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201:     numerous failures

[03:24] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: review: https://github.com/rakudo/rakudo/commit/a5cf61c905

[03:24] <synopsebot> RT#128905 [open]: https://rt.perl.org/Ticket/Display.html?id=128905 [BUG] Some core Routines do not do Callable role

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: a73237eeff | (Zoffix Znet)++ | src/core/Hash.pm

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: Fix default sorting of Hashes with Junction keys

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201:

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: Current sort impl explodes somewhere in the guts of

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: RI::Sorting.MERGESORT-REIFIED-LIST-AS due to unboxing a Junction

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: as a native numeric type.

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201:

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: Fix by detecting Junction keys and passing $!storage BOOTArray

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: from their guts as the thing to map as. A bit hackish, but seems

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: to solve the issue.

[03:27] <Geth> ¦ rakudo/fix-Hash-Mu-keys--RT-1357201: review: https://github.com/rakudo/rakudo/commit/a73237eeff

[05:15] <travis-ci> Rakudo build passed. Zoffix Znet 'Fix WhateverCode curries losing `use fatal`

[05:15] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/316007975 https://github.com/rakudo/rakudo/compare/07616effd19a...31db3accf45f

[06:07] <travis-ci> Rakudo build passed. Aleks-Daniel Jakimenko-Aleksejev 'Merge pull request #1307 from softmoth/pod-text-newlines

[06:07] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/316081729 https://github.com/rakudo/rakudo/compare/31db3accf45f...46eae4696977

[06:16] <AlexDaniel> RT#87034 RT#121807 RT#125371

[06:16] <synopsebot> RT#87034 [open]: https://rt.perl.org/Ticket/Display.html?id=87034 [BUG] Either binding an array to a list containing the array itself should work consistently or not at all in Rakudo

[06:17] <synopsebot> RT#121807 [open]: https://rt.perl.org/Ticket/Display.html?id=121807 [LTA] is default(…) does not explain that the value should be known at compile time

[06:17] <synopsebot> RT#125371 [open]: https://rt.perl.org/Ticket/Display.html?id=125371 Segv on binding to one self and saying it

[06:59] <travis-ci> Rakudo build passed. usev6 'Revert "Use '+=' and '-=' instead of postfix ops"

[06:59] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/316083416 https://github.com/rakudo/rakudo/compare/46eae4696977...664967d09985

[07:45] <travis-ci> Rakudo build passed. Zoffix Znet 'Fix dispatch infiniloop in IO::Handle

[07:45] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/316180948 https://github.com/rakudo/rakudo/compare/664967d09985...9de4a60efef2

[07:46] <AlexDaniel> oh by the way, as it turns out… quotable issue isn't a rakudo bug, it's just my stupidity

[07:46] <AlexDaniel> so 🙌

[07:50] <[Tux]> Rakudo version 2017.11-119-geaf609edb - MoarVM version 2017.11-43-g93a77dc16

[07:50] <[Tux]> csv-test-xs-20      0.427 -  0.511

[07:50] <[Tux]> csv-ip5xs           1.113 -  1.137

[07:50] <[Tux]> test-t --race       1.138 -  1.185

[07:50] <[Tux]> test-t              2.919 -  3.158

[07:50] <[Tux]> test               11.852 - 12.556

[07:50] <[Tux]> csv-parser         12.900 - 13.499

[07:50] <[Tux]> csv-ip5xs-20       13.400 - 14.131

[07:50] <[Tux]> test-t-20 --race   18.113 - 18.194

[07:50] <[Tux]> test-t-20          51.698 - 53.138

[08:33] <travis-ci> Rakudo build passed. Zoffix Znet 'Fix crash in &warn with Junctions

[08:33] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/316181351 https://github.com/rakudo/rakudo/compare/9de4a60efef2...8155c4b885b4

[11:09] <Geth> ¦ rakudo: 3405001da0 | (Elizabeth Mattijsen)++ | src/core/io_operators.pm

[11:09] <Geth> ¦ rakudo: Make put/print "a",any(<b c d>) work

[11:09] <Geth> ¦ rakudo:

[11:09] <Geth> ¦ rakudo: - we already had a candidate for handling a Junction, but not if part of a List

[11:09] <Geth> ¦ rakudo: - simplified the code to let List.join do the hard work

[11:09] <Geth> ¦ rakudo:   - which automatically takes care of the Junction issue

[11:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3405001da0

[12:06] <Geth> ¦ roast: 872502dd5f | (Zoffix Znet)++ | 2 files

[12:06] <Geth> ¦ roast: Add nested junction tests for output routines

[12:06] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/872502dd5f

[12:08] <lizmat> Zoffix++

[13:45] <lizmat> do we have an overview of features that got added since Christmas 2015 ?

[16:20] <timotimo> releasable6: status

[16:20] <releasable6> timotimo, Next release in 2 days and ≈2 hours. No blockers. 0 out of 120 commits logged

[16:20] <releasable6> timotimo, Details: https://gist.github.com/c6d0d78c68d754caacbc21dc0d42b7aa

[19:08] <Geth> ¦ roast: 3f2f2603c9 | usev6++ | 4 files

[19:08] <Geth> ¦ roast: [jvm] Fudge tests for execution order of Promise

[19:08] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3f2f2603c9

[20:42] <AlexDaniel> squashable6: uptime

[20:42] <squashable6> AlexDaniel, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/3ab60f748f2576474e6fa8d04581c5b5

[20:42] <AlexDaniel> *facepalm*

[20:43] <timotimo> INIT now being unhappy?

[20:43] <timotimo> m: say now - INIT now

[20:43] <camelia> rakudo-moar 3405001da: OUTPUT: «0.00124919␤»

[20:43] <timotimo> i wonder why

[20:44] <teatime> that should be negative, right?

[20:44] <teatime> nevermind, ignore me

[20:44] <AlexDaniel> bisectable6: uptime

[20:44] <bisectable6> AlexDaniel, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/171b56b7f4b44869eeb3de018bd0cb36

[20:45] <AlexDaniel> that's so weird

[20:58] <AlexDaniel> ok I guess we'll live without the uptime command for a bit…

[20:58] <AlexDaniel> I'm pretty sure that it is an issue related to precomp, believe it or not

[20:59] <timotimo> something's very wrong with INIT if it's precomp related :)

[20:59] <AlexDaniel> but probably it's not a regression, the bots are acting weird lately due to my hacks

[21:00] <AlexDaniel> well my reasoning is that when these bots are started by systemd, ｢uptime｣ does not work

[21:01] <AlexDaniel> but if you run it yourself it works just fine

[21:01] <AlexDaniel> the only difference is that the file system access is limited, for example they can't write to the .precomp directory

[21:02] <AlexDaniel> hm but it could be something else

[21:02] <AlexDaniel> c: HEAD say now - INIT now

[21:02] <committable6> AlexDaniel, ¦HEAD(3405001): «0.0014080␤»

[21:03] <AlexDaniel> hm so it's fine within evals

[21:03] <AlexDaniel> c: HEAD (denominate now - INIT now) ~ ‘, ’

[21:03] <committable6> AlexDaniel, ¦HEAD(3405001): «04===SORRY!04=== Error while compiling /tmp/OZ_mrz9BOh␤Undeclared routine:␤    denominate used at line 1␤␤ «exit code = 1»»

[21:03] <AlexDaniel> c: HEAD say (now - INIT now) ~ ‘, ’

[21:03] <committable6> AlexDaniel, ¦HEAD(3405001): «0.001525, ␤»

[21:09] <AlexDaniel> c: HEAD spurt ‘sandbox/INITFUN.pm6’; ‘unit module INITFUN; sub blah is export { say (now - INIT now) ~ ‘, ’ }’

[21:09] <committable6> AlexDaniel, https://gist.github.com/993443de8e38dbf525cd49308399bc33

[21:10] <AlexDaniel> c: HEAD spurt ‘sandbox/INITFUN.pm6’, ‘unit module INITFUN; sub blah is export { say (now - INIT now) ~ ‘, ’ }’

[21:10] <committable6> AlexDaniel, ¦HEAD(3405001): «»

[21:10] <AlexDaniel> c: HEAD use lib ‘sandbox’; use INITFUN; blah

[21:10] <committable6> AlexDaniel, ¦HEAD(3405001): «0.009687, ␤»

[21:10] <AlexDaniel> well crap but that's in a writable directory…

[21:11] <AlexDaniel> c: HEAD use lib ‘.’; use INITFUN; blah

[21:11] <committable6> AlexDaniel, ¦HEAD(3405001): «0.0047244, ␤»

[21:11] <AlexDaniel> ok, no idea then.
