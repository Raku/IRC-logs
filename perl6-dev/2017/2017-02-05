[00:41] <Geth> ¦ rakudo/nom: 34626e3e6d | (Elizabeth Mattijsen)++ | 9 files

[00:41] <Geth> ¦ rakudo/nom: Remove | from (|) sig in protos where possible

[00:41] <Geth> ¦ rakudo/nom:

[00:41] <Geth> ¦ rakudo/nom: If all candidates take no parameters, there is no point in the proto

[00:41] <Geth> ¦ rakudo/nom: accommodating any parameters.  This appears to make each of these

[00:41] <Geth> ¦ rakudo/nom: methods about 4% faster.

[00:41] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/34626e3e6d

[00:41] <lizmat> good night, #prl6-dev!

[00:41] <yoleaux2> 4 Feb 2017 19:54Z <MasterDuke> lizmat: given your recent work with .tail(), are there any circumstances where it isn't faster than [*-1]? if not, should we replace all [*-1] in the settings with .tail()?

[00:42] <lizmat> MasterDuke: for .tail, I don't think you can get any faster.  For .tail(N) things *may* be slower in some cases

[00:51] <MasterDuke> .tell lizmat i only see two places where tail(N) would be applicable anyway (src/core/Block.pm:253 and lib/Pod/To/Text.pm6:55), so i'll leave those for you to decide if it's worth it

[00:51] <yoleaux2> MasterDuke: I'll pass your message to lizmat.

[00:55] <Geth> ¦ rakudo/nom: 1b99196141 | (Zoffix Znet)++ | src/core/REPL.pm

[00:55] <Geth> ¦ rakudo/nom: Fix `Mu` line return value causing issues in REPL

[00:55] <Geth> ¦ rakudo/nom:

[00:55] <Geth> ¦ rakudo/nom: Fixes RT#130719: https://rt.perl.org/Ticket/Display.html?id=130719

[00:55] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1b99196141

[00:55] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130719

[00:56] <Geth> ¦ roast: 04fa01361b | (Zoffix Znet)++ | S19-command-line/repl.t

[00:56] <Geth> ¦ roast: Test `Mu` as line return value isn't an issue in REPL

[00:56] <Geth> ¦ roast:

[00:56] <Geth> ¦ roast: RT#130719: https://rt.perl.org/Ticket/Display.html?id=130719

[00:56] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/1b99196141

[00:56] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130719

[00:56] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/04fa01361b

[06:42] <lizmat> .

[06:42] <yoleaux2> 00:51Z <MasterDuke> lizmat: i only see two places where tail(N) would be applicable anyway (src/core/Block.pm:253 and lib/Pod/To/Text.pm6:55), so i'll leave those for you to decide if it's worth it

[06:51] <lizmat> .tell MasterDuke the Block case is for .perl, for clarity I would keep that.  The Pod/To/Text case seems more like a fit for a .skip ?

[06:51] <yoleaux2> lizmat: I'll pass your message to MasterDuke.

[06:51] <Geth> ¦ nqp: ef25c99bad | (Samantha McVey)++ | docs/ops.markdown

[06:51] <Geth> ¦ nqp: Add documentation on unicmp_s op on MVM

[06:51] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/ef25c99bad

[08:37] <Geth> ¦ rakudo/nom: 5af02a1e93 | (Elizabeth Mattijsen)++ | 9 files

[08:37] <Geth> ¦ rakudo/nom: Revert "Remove | from (|) sig in protos where possible"

[08:37] <Geth> ¦ rakudo/nom:

[08:37] <Geth> ¦ rakudo/nom: This reverts commit 34626e3e6d8476305d305fc602ff6494e6e35817.

[08:37] <Geth> ¦ rakudo/nom:

[08:37] <Geth> ¦ rakudo/nom: In the end, I wasn't able to recreate the 4% savings that the initial

[08:37] <Geth> ¦ rakudo/nom: change to .Bool seemed to indicate.  Since there was no noticeable

[08:37] <Geth> ¦ rakudo/nom: change in the time the spectest needs either (which I hope we would

[08:37] <Geth> ¦ rakudo/nom: see), I'm going to revert this for now.

[08:37] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5af02a1e93

[09:00] <nine> lizmat: one good night's sleep and suddenly it becomes this simple: my $ctx := nqp::ctxcaller(nqp::ctx()); $ctx := nqp::ctxcaller($ctx) while $ctx and not nqp::existskey($ctx, '$=finish'); note nqp::atkey($ctx, '$=finish');

[09:04] <lizmat> :-)

[09:04] <lizmat> I knew it was something simple  :-)

[09:08] <nine> But....it will not find it when I put the code in Inline::Perl5 because at the time the "use" runs, we haven't even parsed the POD yet :/

[09:26] <lizmat> mmmm

[09:27] <lizmat> have you tried putting in a $=finish at the time of the "use" and see if it gets filled ?

[09:33] <nine> lizmat: how could I? There cannot be any code after a =finish :)

[09:45] <lizmat> yeah, hmmm

[09:49] <RabidGravy> does someone want to take a quick look at https://github.com/rakudo/rakudo/pull/1012 ?  It bit me in the behind yesterday

[10:46] <timotimo> next up is brian duggan: Informal Domain Specific Languages with Perl 6

[10:46] <timotimo> https://live.fosdem.org/watch/k4201

[11:10] <Geth> ¦ rakudo/nom: 7c39bbf4de | (Jonathan Stowe)++ | src/core/CompUnit/Repository/Installation.pm

[11:10] <Geth> ¦ rakudo/nom: Sort the binaries by version

[11:10] <Geth> ¦ rakudo/nom:

[11:10] <Geth> ¦ rakudo/nom: Assuming we always want to have the latest version of a binary

[11:10] <Geth> ¦ rakudo/nom: unless it has been otherwise specified then this seems to be

[11:10] <Geth> ¦ rakudo/nom: the simplest way to achieve that.

[11:10] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7c39bbf4de

[11:10] <nine> RabidGravy: I took the liberty to sqash those commits and push it

[11:19] <Geth> ¦ rakudo/nom: 6f6f0cf19e | (Samantha McVey)++ | 3 files

[11:19] <Geth> ¦ rakudo/nom: Add unicmp op which uses unicmp_s nqp op to do string compare

[11:19] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6f6f0cf19e

[11:19] <Geth> ¦ rakudo/nom: 5870ef97d1 | (Samantha McVey)++ | 2 files

[11:19] <Geth> ¦ rakudo/nom: Hide the unicmp operator behind experimental

[11:19] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5870ef97d1

[11:21] <RabidGravy> nine :)

[11:25] <RabidGravy> nine, while I was in the shower I was thinking that maybe the bulk of the "find the right binary" code could be moved from the wrapper into CompUnit::Repository

[11:26] <RabidGravy> thus making the whole retroactive fixing thing easier in the future

[11:28] <RabidGravy> on a somewhat related note, is there a way of making an installation use a specific (possibly non-core,) CUR implementation however it might be installed?

[11:31] <RabidGravy> I'm thinking about this because, for example, for a particular plugin schema I might want to store some additional metadata in the distribution object

[11:32] <RabidGravy> for the loading part it is easy to make something that consumes that additional data as required

[12:01] <timotimo> hello, fosdem! \o

[12:05] <tadzik> \o/

[13:03] <Geth> ¦ nqp: 439b51e89a | (Samantha McVey)++ | tools/build/MOAR_REVISION

[13:03] <Geth> ¦ nqp: Bump MoarVM to get improvements to unicmp_s

[13:03] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/439b51e89a

[13:03] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.01-30-g9258aca...2017.01-31-g20dfa6bb

[13:04] <Geth> ¦ rakudo/nom: eb3356c6e0 | (Samantha McVey)++ | tools/build/NQP_REVISION

[13:04] <Geth> ¦ rakudo/nom: Bump MoarVM/NQP to get improvements to unicmp_s

[13:04] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/eb3356c6e0

[13:04] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.01-68-gfe0dd2f2...2017.01-70-g439b51e8

[13:04] <travis-ci> NQP build failed. Samantha McVey 'Bump MoarVM to get improvements to unicmp_s'

[13:04] <travis-ci> https://travis-ci.org/perl6/nqp/builds/198548899 https://github.com/perl6/nqp/compare/ef25c99badcd...439b51e89a70

[13:11] <lizmat> https://gist.github.com/lizmat/a98b5115f624416a3a0534b12c9469d4   # Ovid made me do this

[13:12] <lizmat> conceptual "is write-once" trait for Attributes   ^^^

[13:24] <Geth> ¦ rakudo/nom: ecb7edede6 | (Samantha McVey)++ | README.md

[13:24] <Geth> ¦ rakudo/nom: Mention `make spectest_update in README.md

[13:24] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ecb7edede6

[13:31] <travis-ci> Rakudo build failed. Samantha McVey 'Bump MoarVM/NQP to get improvements to unicmp_s'

[13:31] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/198549075 https://github.com/rakudo/rakudo/compare/5870ef97d1cd...eb3356c6e092

[13:31] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[13:34] <lizmat> looks like makefile issues ?

[14:12] <samcv> nah it should be fixed now, it didn't get pushed to MVM

[14:12] <yoleaux2> 4 Feb 2017 22:04Z <raiph> samcv: Have you read https://github.com/apple/swift/blob/master/docs/StringManifesto.md?

[14:13] <samcv> yoleaux2, and yoleaux being different bots strikes again

[14:22] <jdv79> lizmat: do you only write in nqp now?:  i did something similar with jnthn's help a while ago:  https://github.com/jdv/p6-attribute-setonce in real p6

[16:02] <Geth> ¦ rakudo/nom: 411782e959 | (Samantha McVey)++ | src/core/Cool.pm

[16:02] <Geth> ¦ rakudo/nom: Make uniprop/unival/unimatch 2.1-0.1x as fast

[16:02] <Geth> ¦ rakudo/nom:

[16:02] <Geth> ¦ rakudo/nom: Use nqp::unipropcode instead of Rakudo::Internals.PROPCODE

[16:02] <Geth> ¦ rakudo/nom: I may eventually remove Rakudo::Internals.PROPCODE entirely since because it

[16:02] <Geth> ¦ rakudo/nom: is much slower, there is not much reason for it to continue to exist.

[16:02] <Geth> ¦ rakudo/nom: uniprop with default arguments is 2.1x, as is uniprop-bool and uniprop-str

[16:02] <Geth> ¦ rakudo/nom: is about 1.9x as fast. uniprop with arguments is about 0.1-0.15x faster

[16:02] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/411782e959

[16:28] <Geth> ¦ rakudo/nom: 25fd1ca3e3 | (Samantha McVey)++ | src/core/IO/Path.pm

[16:28] <Geth> ¦ rakudo/nom: Allow you to call .s on a directory for IO::Path

[16:28] <Geth> ¦ rakudo/nom:

[16:28] <Geth> ¦ rakudo/nom: On Linux at least, directories can have a size by themself. Don't throw when

[16:28] <Geth> ¦ rakudo/nom: trying to check the size of a directory. The user should have access to whatever the OS

[16:28] <Geth> ¦ rakudo/nom: says the directory size says.

[16:28] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/25fd1ca3e3

[16:33] <Geth> ¦ rakudo/nom: c0a907fb5a | (Samantha McVey)++ | src/core/Rakudo/Internals.pm

[16:33] <Geth> ¦ rakudo/nom: remove Rakudo::Internals.PROPCODE and Rakudo::Internals.PVALCODE

[16:33] <Geth> ¦ rakudo/nom:

[16:33] <Geth> ¦ rakudo/nom: These are no longer used since they were 5x slower than the nqp ops

[16:33] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c0a907fb5a

[16:44] <Geth> ¦ roast: 3133826e99 | (Samantha McVey)++ | S32-io/file-tests.t

[16:44] <Geth> ¦ roast: Add a test to make sure checking the size of a dir doesn't throw

[16:44] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3133826e99

[16:45] <Geth> ¦ roast: d91275f886 | (Samantha McVey)++ | S05-mass/properties-general.t

[16:45] <Geth> ¦ roast: Add a test to check that <alpha> matches alphabetics that are not Letters

[16:45] <Geth> ¦ roast:

[16:45] <Geth> ¦ roast: Currently MVM only checks that things have general category 'L', but there are many

[16:45] <Geth> ¦ roast: other types which have Unicode property Letter.

[16:45] <Geth> ¦ roast:

[16:45] <Geth> ¦ roast: The JVM passes this test.

[16:45] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d91275f886

[17:58] <pmurias> samcv: is your grant proposal up for community review?

[18:15] <timotimo> i think it barely missed the deadline?

[18:39] <pmurias> timotimo: so it would end up moved to the next round?

[18:51] <MasterDuke> pmurias: i think someone said it would happen in march

[18:51] <yoleaux2> 06:51Z <lizmat> MasterDuke: the Block case is for .perl, for clarity I would keep that.  The Pod/To/Text case seems more like a fit for a .skip ?

[20:11] <Geth> ¦ roast: 93e8dc533b | (Daniel Green)++ | S05-mass/properties-general.t

[20:11] <Geth> ¦ roast: Increment missed plan

[20:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/93e8dc533b

[20:24] <japhb> .ask jnthn Did you get my response to RT #130716?  It isn't appearing for me on the RT site, but I don't know if my response got somehow routed to you and not included in the bug log, or if it just got lost entirely.

[20:24] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130716

[20:24] <yoleaux2> japhb: I'll pass your message to jnthn.

[21:08] <Geth> ¦ roast: 874acb12cf | smls++ | S32-list/sort.t

[21:08] <Geth> ¦ roast: Add test for RT #126859

[21:08] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/874acb12cf

[21:08] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=126859

[23:06] <Geth> ¦ nqp: MasterDuke17++ created pull request #345: Intify things that cause the most mvm coerce smart numify

[23:06] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/345
