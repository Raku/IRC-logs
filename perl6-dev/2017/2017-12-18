[01:11] <Hotkeys> I guess they fixed the script

[01:12] <aeruder> w.t.f.

[01:14] <ZzZombo> !ops

[01:14] <b2gills> mst: can you kick devnul391?

[01:16] <Hotkeys> I've mentioned it in #freenode, seems like a widespread problem

[01:16] <ilbelkyr> thanks for the poke, appreciated :)

[01:16] <Hotkeys> thanks for the quick reponse

[01:17] <ilbelkyr> no worries

[01:19] <geekosaur> yes, they're hitting all of freenode

[01:20] <geekosaur> I just banned another one in another channel but don;t have ops here

[06:43] <AlexDaniel> hm‚Ä¶ I wonder why I see no spam messages on matrix

[07:45] <[Tux]> Rakudo version 2017.11-131-g3f90f663b - MoarVM version 2017.11-48-g0b9f8090a

[07:45] <[Tux]> csv-test-xs-20      0.431 -  0.459

[07:45] <[Tux]> csv-ip5xs           1.104 -  1.104

[07:45] <[Tux]> test-t --race       1.236 -  1.593

[07:45] <[Tux]> test-t              2.945 -  3.195

[07:45] <[Tux]> csv-parser         12.220 - 12.983

[07:45] <[Tux]> test               11.868 - 12.368

[07:45] <[Tux]> csv-ip5xs-20       13.259 - 13.333

[07:45] <[Tux]> test-t-20 --race   19.491 - 23.800

[07:45] <[Tux]> test-t-20          53.984 - 58.981

[08:51] <DrForr> AlexDaniel: Were you one of the ones interested in the Pod:: rewrite?

[08:51] <AlexDaniel> DrForr: a little bit :)

[08:52] <AlexDaniel> any news?

[08:52] <DrForr> A ...little... bit. In fact, yes.

[08:52] <DrForr> I'm about 70% finished with .. well, lemme put this in github first.

[08:53] <DrForr> I don't have the code handy but I know the output well enough.

[08:53] <AlexDaniel> mmmm, PODecember :)

[08:57] <DrForr> https://gist.github.com/drforr/2cd55711368b96fd0827aa074a213571

[08:59] <DrForr> Takes perl6 POD and returns a linkified tree. I could of course do the ..previous-sibling..$node...next-sibling stuff as an array of entries, but since most everything else is links it just felt right to keep with the theme.

[09:04] <DrForr> That's just a very abbreviated form of how the tree looks; I don't have all of the classes done, but once I get past one issue with the Pod::Item it feels like smooth sailing. And yes, it does create different objects from the existing Pod objects, because I don't feel there are enough reference points to easily render documents as they stand.

[09:14] <DrForr> The parent is fairly important, as you can be walking the tree, and if you happen to be in a Node::Paragraph and want to know if you *really* want to display the <p/> tags, just check the parent, and if it's a Node::Header, skip it.

[09:15] <DrForr> I'll probably add a tree -> iterator so you can get a lazily-evaluated array of POD nodes.

[09:16] <DrForr> I also might not keep $node.last-child in the final tree, because it's really only a useful way of inserting items.

[09:19] <DrForr> for $pod.depth-first -> $element { .. } # simple walker.

[10:44] <DrForr> Any thoughts on this? The .parent link is probably the most important because as it stands it's hard to silly-walk the tree unless you pass stuff around out-of-band.

[10:50] <AlexDaniel> ü§∑

[10:51] * DrForr kicks Inconsolata for missing Unicode characters :)

[10:56] <DrForr> I'm going to package it as Pod::Tree, and give it an iterator to make things a little easier to work with.

[10:58] <tbrowder> DrForr: ++excellent work!!

[10:59] <DrForr> I've got about 16 hours of flights ahead of me, and I'll wrap it up.

[11:00] <AlexDaniel> DrForr++

[11:00] <DrForr> I wanted to get everything into objects, so Tables contain an optional Header and required Body object, Headers have separate Data sections, Bodies have Rows which contain Data sections.

[11:27] <tbrowder> AlexDaniel: i‚Äôm tidying up for PR on config quote issue. how do you feel about debug being left in (but turned off)?

[11:43] <AlexDaniel> tbrowder: what do you mean?

[11:51] <tbrowder> leaving in statements like: say(‚ÄúDEBUG: x var is $x‚Äù) if $debug;

[12:01] <tbrowder> AlexDaniel: i also have some questions about some conflicting or config formats that need documenting imho.

[12:04] <tbrowder> 1. S26 shows two forms that look identical to me: :key<str> for a string and :key<1  2 3> for a list. how can one disambiguate the two unless a string can have bo spaces?

[12:04] <tbrowder> s/bo/no/

[12:06] <AlexDaniel> tbrowder: oh yeah, I've been thinking about this previously

[12:06] <AlexDaniel> we don't have a :key‚Äúfoo bar baz‚Äù form

[12:06] <AlexDaniel> the only reasonable pair syntax for strings we have at the moment is :key(‚Äòfoo bar baz‚Äô)

[12:07] <AlexDaniel> sooo‚Ä¶ yeah.

[12:07] <tbrowder> 2. S26 shows one form of bool entry as :key(0) and :key(1), but it doesn‚Äôt discuss :key(42) or :key(3.2).

[12:08] <AlexDaniel> hmm why not :key(False) :key(True)? It may be outdated

[12:08] <AlexDaniel> tbrowder: as for debugging, we do seem to have RAKUDO_OPTIMIZER_DEBUG and RAKUDO_MODULE_DEBUG

[12:09] <AlexDaniel> so maybe something like that for pod is reasonable?

[12:09] <MasterDuke> huh, even a trivial example of using nextsame goes through find_best_dispatchee

[12:11] <tbrowder> we also have the RAKUDO* env var for tables i added in on PR

[12:12] <tbrowder> *one

[12:12] <MasterDuke> benchable6: compare HEAD multi sub a(Int $i) { nextsame }; multi sub a(Any $a) { }; a($_) for ^100000 ||| multi sub b(Int $i) { b(Any) }; multi sub b(Any $a) { }; b($_) for ^100000

[12:12] <benchable6> MasterDuke, starting to benchmark the 1 given commit

[12:12] <benchable6> MasterDuke, ¬¶HEAD: ¬´Benchmark: ‚ê§¬´timed out after 10 seconds¬ª¬ª

[12:13] <MasterDuke> benchable6: compare HEAD multi sub a(Int $i) { nextsame }; multi sub a(Any $a) { }; a($_) for ^10000 ||| multi sub b(Int $i) { b(Any) }; multi sub b(Any $a) { }; b($_) for ^10000

[12:13] <benchable6> MasterDuke, starting to benchmark the 1 given commit

[12:13] <benchable6> MasterDuke, https://gist.github.com/adea7e8ac92fd0c6b4ebe08a5249a813

[12:16] <tbrowder> ok. given my questions, pod config handling almost becomes open-ended. i can submit my PR, which satisfies the current formats i show in the docs, takes care of the documented quote issues (and more), and should satisfy most users‚Äô needs.

[12:16] <tbrowder> then work on fine-tuning the config specs.

[12:21] <MasterDuke> timotimo: would would need to be done so *same, *with don't need to go through find_best_dispatchee? is that a possible optimization?

[12:23] <timotimo> sounds difficult

[12:24] <timotimo> we already have the dispatch cache that lets us skip find_best_dispatchee for the original dispatch

[12:24] <timotimo> and that only stores the best result, whereas with *same and *with have to also have the second best

[12:26] <MasterDuke> huh

[12:26] <tbrowder> AlexDaniel: i have just updated the docs on pod config. my PR will be aligned with supporting that unless you see a problem.

[12:27] <timotimo> we probably already log what we end up invoking there? but if we don't have a simple way to figure out if the logged value is applicable, we can't really use that

[12:28] <MasterDuke> really kind of makes those unusable for code that gets called frequently and needs to be fast

[12:28] <timotimo> m: multi sub infix:<,>(\a, \b) { say $*DISPATCHER.^name }; my ($a, $b); ($a, $b) = 1, 2

[12:28] <camelia> rakudo-moar 3f90f663b: OUTPUT: ¬´Perl6::Metamodel::MultiDispatcher‚ê§Cannot modify an immutable Bool (True)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Perl6::Metamodel::MultiDispatcher‚ê§Perl6::Metamodel::MultiDispatcher‚ê§¬ª

[12:29] <tbrowder> i think the form :key‚Äùstring‚Äù you suggested may not be easy to implement but i will see if i can add it to my PR.

[12:30] <AlexDaniel> tbrowder: I don't think it should be implemented, unless we decide to have it supported in normal code as well

[12:30] <MasterDuke> i've been trying to get a `multi sub infix:<,>(\a, \b)` that doesn't use *same, but haven't been able to yet

[12:31] <AlexDaniel> tbrowder: the reason I'm mentioning it is that this question used to come up sometimes

[12:32] <AlexDaniel> tbrowder: and it's indeed less than awesome that you can use :foo<bar> for one-worded strings but have to fall back to :foo(‚Äòb a r‚Äô) for strings with spaces‚Ä¶

[12:32] <AlexDaniel> but this stuff perhaps needs an [RFC] ticket

[12:33] <MasterDuke> timotimo: `multi sub infix:<,>(\a, \b) { my \in := nqp::list(a,b); (nqp::istype(a,Slip) || nqp::istype(b,Slip)) ?? &infix:<,>(in) !! nqp::p6bindattrinvres(nqp::create(List),List,'$!reified',in)` nearly worked

[12:33] <AlexDaniel> generally we probably don't want to add more pair forms, because we have too many already‚Ä¶

[12:33] <tbrowder> ok. please look at github doc pod config and see if those formats look satisfactory.

[12:33] <AlexDaniel> but in that case pod config has to support :foo(‚Äòbar‚Äô) properly

[12:33] <lizmat> MasterDuke: my take so far: https://gist.github.com/lizmat/a33a78d54b2571abf24673785dbe2034

[12:33] <MasterDuke> but would cause `===SORRY!=== Something went wrong in (NotFound)`

[12:34] <AlexDaniel> tbrowder: sorry, what's the link?

[12:35] <tbrowder> https://github.com/perl6/doc/blob/master/doc/Language/pod.pod6

[12:36] <tbrowder> look at the table starting at line 48

[12:36] <MasterDuke> lizmat: cool. did you seem timotimo++'s comments about nqp::p6argvmarray vs nqp::list?

[12:36] <MasterDuke> *see

[12:36] <timotimo> did we actually time it, though?

[12:37] <MasterDuke> hm, don't remember now

[12:37] <timotimo> argvmarray vs nqp::list i mean

[12:37] <timotimo> the wins i'm expecting come from not having to go into and back out of a list

[12:37] <timotimo> i.e. if you have (\a, \b) and use nqp::istype on them, spesh ought to know what types they are

[12:38] <AlexDaniel> tbrowder: looks good

[12:38] <tbrowder> ok! i‚Äôll run with that

[12:38] <MasterDuke> lizmat: have you benchmarked your change yet?

[12:39] <lizmat> I only checked the cases *with* a Slip, they were *not* slower that I could see

[12:39] <lizmat> but also: make install fails with that patch, not sure why yet  :-(

[12:40] <lizmat> atm I was more focussed on working on Telemetry pod and the P6W

[12:40] <lizmat> so, please run with my code if you want

[12:42] <timotimo> interesting. the first thing finddispatcher does is "frame_force_to_heap"

[12:42] <timotimo> i wonder what other operations cause that

[12:43] <MasterDuke> benchable6: compare HEAD use nqp; sub a(\a, \b) { my \in := nqp::p6argvmarray; nqp::p6bindattrinvres(nqp::create(List),List,'$!reified',in) }; a($_, $_) for ^1000000 ||| use nqp; sub b(\a, \b) { nqp::p6bindattrinvres(nqp::create(List),List,'$!reified',nqp::list(a,b)) }; b($_, $_) for ^1000000

[12:43] <benchable6> MasterDuke, starting to benchmark the 1 given commit

[12:43] <benchable6> MasterDuke, https://gist.github.com/88a69ba870c1259ccfa919d2acea44f4

[12:44] <AlexDaniel> not sure if these measurements are reasonable because the server is kinda out of ram‚Ä¶

[12:44] <timotimo> huh leaves from ipv6, returns with ipv4?

[12:44] * AlexDaniel cycled a few bots to free some‚Ä¶

[12:44] <MasterDuke> i see similar numbers locally

[12:45] <AlexDaniel> timotimo: it's randomized to go over 10 connections per ip freenode limit :)

[12:45] <timotimo> ah

[12:45] <AlexDaniel> :D

[12:45] <timotimo> well, we could ask for increased limit for our bots

[12:45] <AlexDaniel> actually it's better to merge this: https://github.com/MoarVM/MoarVM/pull/659

[12:46] <AlexDaniel> it kinda slipped through the cracks but I hope the PR still works if conflicts are resolved

[12:50] <MasterDuke> huh, `git apply` is failing with `error: unrecognized input` on lizmat's patch. `git am` fails with `Patch format detection failed.`

[12:52] <timotimo> that's a two-stage diff

[12:52] <timotimo> it has multiple - and + at the beginning

[12:53] <teatime> it could be a left-handed patch, but chances are it's just metric.

[12:55] <timotimo> i'd just throw out one column, and one of the extra - entries in the diff headers and such

[12:55] <timotimo> no, actually

[12:55] <timotimo> i'd block-select and copy-paste %)

[12:55] <lizmat> MasterDuke: updated the gist from a real "git diff"   (was a "git show stash@{0} before)

[12:56] <lizmat> MasterDuke: pretty sure that applies cleanly

[12:56] <MasterDuke> ah, cool

[12:56] <lizmat> sorry for the confusion  :-(

[12:57] <MasterDuke> no worries

[13:53] <tbrowder> AlexDaniel: i just discovered a subtle bug in the config continuation situation: leaving a blank line after the config portion and before the first table row seems to make config continuation work. i think i know the place in the grammar that causes that!

[14:09] <AlexDaniel> meh‚Ä¶ closing an issue without resolving anything‚Ä¶ don't do that.

[14:10] <AlexDaniel> if it belongs elsewhere just move it

[14:20] <tbrowder> don‚Äôt worry, one prob at a time

[14:21] <tbrowder> just working on tests and discovered why continuation happened to work sometimes and not others

[14:21] <AlexDaniel> that wasn't related to you :)

[14:22] <tbrowder> but it does apply anyway :)

[14:23] <tbrowder> gotta do Christmas stuff...

[14:44] <|Tux|> Rakudo version 2017.11-131-g3f90f663b - MoarVM version 2017.11-48-g0b9f8090a

[14:44] <|Tux|> csv-test-xs-20      0.470 -  0.481

[14:44] <|Tux|> csv-ip5xs           1.068 -  1.076

[14:44] <|Tux|> test-t --race       1.222 -  1.313

[14:44] <|Tux|> test-t              2.905 -  2.907

[14:44] <|Tux|> test               11.333 - 11.535

[14:44] <|Tux|> csv-parser         12.090 - 12.141

[14:44] <|Tux|> csv-ip5xs-20       12.690 - 13.088

[14:44] <|Tux|> test-t-20 --race   17.582 - 18.059

[14:44] <|Tux|> test-t-20          51.822 - 52.664

[14:44] <|Tux|> (as the system was now very idle)

[16:20] <lizmat> dinner&

[17:33] <Geth> ¬¶ nqp: 8351167da1 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/sixmodel/reprs/MultiCacheInstance.java

[17:33] <Geth> ¬¶ nqp: [jvm] Boost size of multi-dispatch cache

[17:33] <Geth> ¬¶ nqp:

[17:33] <Geth> ¬¶ nqp: This copies what was done for (old multi-dispatch cache of) MoarVM with

[17:33] <Geth> ¬¶ nqp: https://github.com/MoarVM/MoarVM/commit/99bf383cb1

[17:33] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/8351167da1

[17:33] <Geth> ¬¶ nqp: 567f6568f1 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/sixmodel/reprs/MultiCacheInstance.java

[17:33] <Geth> ¬¶ nqp: [jvm] Avoid multi-dispatch errors

[17:33] <Geth> ¬¶ nqp:

[17:33] <Geth> ¬¶ nqp: The old code didn't check whether containers are writable.

[17:33] <Geth> ¬¶ nqp:

[17:33] <Geth> ¬¶ nqp: Also it looks like the flags for native and non native containers

[17:33] <Geth> ¬¶ nqp: of the same base type were identical.

[17:33] <Geth> ¬¶ nqp:

[17:33] <Geth> ¬¶ nqp: Fixes some tests in roast (in S03-operators/autoincrement.t,

[17:33] <Geth> ¬¶ nqp: S03-operators/increment.t and S06-multi/by-trait.t).

[17:33] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/567f6568f1

[20:27] <lizmat> AlexDaniel: I seem to have misplaced the link to the ticket overview generator / wiki / site  :-(

[20:27] <AlexDaniel> what do you mean?

[20:28] <AlexDaniel> reportable6: list

[20:28] <reportable6> AlexDaniel, https://gist.github.com/bb1d2f866175eaf3b83fd01d988b788a

[20:28] <lizmat> AlexDaniel: that's not really something linkable for the P6W ?

[20:28] <AlexDaniel> reportable6: 2017-12-11T00:00:00Z 2017-12-18T00:00:00Z

[20:28] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[20:29] <AlexDaniel> lizmat: we should link this I think: https://github.com/rakudo/rakudo/wiki/Ticket-updates

[20:29] <reportable6> AlexDaniel, https://gist.github.com/2313f13e789ae400f58ff2f41ef60f4e

[20:29] <lizmat> yup, that's the one

[20:29] <AlexDaniel> and that's ‚Üë for the last week

[20:30] <lizmat> it gets added automatically ?

[20:31] <AlexDaniel> not yet :) Just added it manually now

[20:31] <lizmat> ack...

[20:32] * lizmat was about to as well, but was beaten to it

[20:32] <AlexDaniel> reportable6: weekly

[20:32] <reportable6> AlexDaniel, You can implement this feature if you need it :) (meanwhile try to be more specific by using ÔΩ¢listÔΩ£ command)

[20:33] <AlexDaniel> üñï reportable6

[20:37] <AlexDaniel> https://github.com/perl6/whateverable/issues/268

[20:38] <AlexDaniel> and there we have it, whateverable reached 200 open tickets :)

[20:44] * AlexDaniel looks at his message‚Ä¶ http://stoprobotabuse.com/ ? :)

[20:46] <AlexDaniel> ‚ÄúMany people think this is OK since there is no physical harm involved. Nonetheless this behavior will develop trust issues in robots and inhibits their normal healthy development.‚Äù :)

[20:59] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/12/18/2017-51-thirty-years/

[21:08] <bartolin> lizmat++ thanks for yet another good weekly! also: have the appropriate amount of fun while celebrating

[21:18] <perlpilot> lizmat++ indeed

[21:21] <perlpilot> lizmat: btw, someone turned me on to https://github.com/allisonrandal/gunie today.   I don't know if you're aware of it.  You may have mentioned it in a weekly before and I just forgot about it though

[21:22] <lizmat> actually I didn't, but the last commit is already 4 months ago  :-(

[21:23] <lizmat> I guess it's done?  ":-)

[21:23] <lizmat> I'll keep it for next weeks...  as it's not really evolving at the moment

[21:28] <masak> lizmat++ # weekly

[21:35] * masak opened up https://www.nntp.perl.org/group/perl.perl6.users/2017/12/msg4633.html half-expecting it to be a tricky problem involving macros -- fortunately it wasn't

[21:37] <perlpilot> lizmat: FSVO "done".   It looks like it just makes a syntax tree and doesn't *really* implement Perl 1.0, but it might inspire others to play or take it all the way to a full implementation

[21:38] <perlpilot> (or implement Perl 1.0 in Perl 6  ;-)

[21:41] <lizmat> I'd rather implement perl 5 in perl 6  :-)

[21:42] <lizmat> would be a bit more useful

[21:43] * lizmat goes off celebrating&
