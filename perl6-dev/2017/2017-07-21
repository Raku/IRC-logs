[00:06] <AlexDaniel> uhh, I was kinda expecting a heavier album after one more light, similarly to The Hunting Party

[03:12] <ugexe> m: sub foo { supply { } }; say foo().elems

[03:12] <camelia> rakudo-moar 1d9416: OUTPUT: «Supply.new␤»

[06:51] <[Tux]> This is Rakudo version 2017.07-25-g1d9416438 built on MoarVM version 2017.07-13-g4afde633

[06:51] <[Tux]> csv-ip5xs        2.508

[06:51] <[Tux]> test            12.266

[06:51] <[Tux]> test-t           4.127 - 4.189

[06:51] <[Tux]> csv-parser      11.995

[06:52] <[Tux]> (no updates the next two days)

[06:52] <[Tux]> away and no computer in reach

[06:52] <Geth> ¦ nqp: c12ef02e45 | (Samantha McVey)++ | tools/build/MOAR_REVISION

[06:52] <Geth> ¦ nqp: Bump MoarVM for concat improvements and fixes

[06:52] <Geth> ¦ nqp:

[06:52] <Geth> ¦ nqp: - Fixes concat with combining codepoints when one of the combining strings

[06:52] <Geth> ¦ nqp: is a repetition.

[06:52] <Geth> ¦ nqp:

[06:52] <Geth> ¦ nqp: - Speeds up concating when the last grapheme of string a or first grapheme of

[06:52] <Geth> ¦ nqp: string b are synthetic's.

[06:52] <Geth> ¦ nqp: <…commit message has 6 more lines…>

[06:52] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/c12ef02e45

[06:52] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.07-7-g499059d...2017.07-13-g4afde633

[06:53] <[Tux]> I hope that change won't break binary data through utf8-c8

[06:53] <[Tux]> Error encoding UTF-8 string: could not encode codepoint 1923886 (0x1D5B2E), codepoint out of bounds. Cannot encode higher than 1114111 (0x10FFFF)

[06:57] <Geth> ¦ rakudo/nom: 1f7fa68397 | (Samantha McVey)++ | tools/build/NQP_REVISION

[06:57] <Geth> ¦ rakudo/nom: Bump MoarVM/NQP for concat improvements and fixes

[06:57] <Geth> ¦ rakudo/nom:

[06:57] <Geth> ¦ rakudo/nom: - Fixes concat with combining codepoints when one of the combining strings

[06:57] <Geth> ¦ rakudo/nom: is a repetition.

[06:57] <Geth> ¦ rakudo/nom:

[06:57] <Geth> ¦ rakudo/nom: - Speeds up concating when the last grapheme of string a or first grapheme of

[06:57] <Geth> ¦ rakudo/nom: string b are synthetic's.

[06:57] <Geth> ¦ rakudo/nom: <…commit message has 6 more lines…>

[06:57] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1f7fa68397

[06:57] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.07-10-g69a150d...2017.07-11-gc12ef02e4

[07:07] <Geth> ¦ roast: 59909ca9a6 | (Samantha McVey)++ | S15-nfg/concatenation.t

[07:07] <Geth> ¦ roast: Add concat tests to handle repetitions

[07:07] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/59909ca9a6

[07:07] <samcv> there we got. stuff bumped and new concat tests to handle repetitions

[07:55] <travis-ci> Rakudo build failed. Samantha McVey 'Bump MoarVM/NQP for concat improvements and fixes

[07:55] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/255943724 https://github.com/rakudo/rakudo/compare/1d9416438942...1f7fa68397a7

[07:55] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[08:36] <Zoffix> ZofBot: I have one thing to tell you: https://www.youtube.com/watch?v=vinxOdVLCkg

[08:36] <ZofBot> Zoffix, (Implementations that make fixed-point assumptions about the available subsecond precision are discouraged; the user interface must act like real numbers in any case

[08:54] <stmuk_> grrr I should boot up a Windows VM :(

[09:25] <stmuk_> did anything happen with test suite versioning?

[09:37] <Geth_> ¦ star/stmuk-2017.07: b7cae1662b | (Steve Mynott)++ | README

[09:37] <Geth_> ¦ star/stmuk-2017.07: mention deleting ~/.perl6 and ~/.zef as upgrade work around. Stronger language about JVM brokeness

[09:37] <Geth_> ¦ star/stmuk-2017.07: review: https://github.com/rakudo/star/commit/b7cae1662b

[09:39] <Zoffix> don't think so

[09:44] <lizmat> Files=1215, Tests=65567, 222 wallclock secs (13.39 usr  5.12 sys + 1333.48 cusr 139.87 csys = 1491.86 CPU)

[09:51] <nine> stmuk_: what precompilation bug is that?

[09:52] <Geth_> ¦ star/stmuk-2017.07: 5284d0c62f | (Steve Mynott)++ | README

[09:52] <Geth_> ¦ star/stmuk-2017.07: tweak JVM support warnings

[09:52] <Geth_> ¦ star/stmuk-2017.07: review: https://github.com/rakudo/star/commit/5284d0c62f

[09:54] <Zoffix> wtf... this code seems to exit with status 1 instead of status 255 if I change the conditional :/ https://github.com/rakudo/rakudo/blob/nom/lib/Test.pm6#L645-L651

[09:55] <Zoffix> And I placed a debug statement before and after that exit call, and the one after doesn't get called, but status is 1 :/

[09:55] <stmuk_> nine: I'm looking in the backlog ... I could weaken from "possible pre-comp" to "possible toolchain bug"

[09:55] <Zoffix> https://gist.github.com/zoffixznet/01f1c87b369681efb1f753c6712279ea

[09:55] <Zoffix> stmuk_: what bug?

[09:57] <Zoffix> "<nine> │ stmuk_: what precompilation bug is that?" What is that in reference to? I don't see any precomp bug mentions

[09:58] <nine> Zoffix: have you tried an exit status < 127?

[09:58] <stmuk_> https://irclog.perlgeek.de/perl6/2017-07-18#i_14887792

[09:59] <stmuk_> to be fair its the zef author suggesting it .. I've no idea whether its zef or precomp

[09:59] <stmuk_> https://irclog.perlgeek.de/perl6/2017-07-18#i_14888036

[09:59] <Zoffix> ok

[09:59] <stmuk_> or both :)

[10:00] <nine> I wish we could get away from these "nuke everything" suggestions and start to diagnose the issues instead

[10:01] <Geth_> ¦ star/stmuk-2017.07: b4ca8f1395 | (Steve Mynott)++ | README

[10:01] <Geth_> ¦ star/stmuk-2017.07: suggest possible blame is in toolchain rather than precomp

[10:01] <Geth_> ¦ star/stmuk-2017.07: review: https://github.com/rakudo/star/commit/b4ca8f1395

[10:01] <Zoffix> nine: hm, weird. I changed it to 100 and now echo $? still returns 1, but the test testing for status 255 still passes :|

[10:01] <stmuk_> that's true but we need to give practical advice to actual users as well

[10:01] <Zoffix> Gonna stash that and debug later. Gotta get ready for work.

[10:02] <nine> stmuk_: yes, "report the issue to #perl6 or rt.perl.org"

[10:02] <stmuk_> debugging upgrade issues isn't nice

[10:03] <stmuk_> nine: I'll add a line suggesting they report to IRC

[10:04] <nine> A lot of the issues we've fixed over the years were a bitch to debug. We have nailed them anyway

[10:04] <stmuk_> I'll also try upgrading from the last R* on several platforms today and see exactly that happends

[10:05] <stmuk_> should errors be reported on #perl6 or #perl6-dev?

[10:07] <nine> I do read #perl6-dev but only occasionally #perl6

[10:08] <Zoffix> stmuk_: TBH, errors should be reported on [email@hidden.address]
[10:08] <Zoffix> Someone joining the channel and saying "I got an error! look!" doesn't have a 100% chance of being noted and taken care of

[10:09] <stmuk_> oh the README even says [email@hidden.address]
[10:09] <nine> Zoffix: I'm not sure in this case. Rakudo being broken after an upgrade suggests a bit of urgency and upgrade bug reports will most probably contain too little information to be actionable

[10:10] <stmuk_> is there anyway of getting "internal" errors to print that email address I wonder

[10:11] <Zoffix> Definitely

[10:11] <Zoffix> Can be done via a custom exception reporter too

[10:11] <Zoffix> One that still delegates to normal handler, so it could just pop the extra message in :)

[10:12] <Zoffix> Or put into rakudo's normal exception handler

[10:12] <Zoffix> m: say 141/131

[10:12] <camelia> rakudo-moar 1f7fa6: OUTPUT: «1.076336␤»

[10:12] <Zoffix> Looks like my subtest todo improvemnets made spectest run 7% slower.

[10:12] <Zoffix> Gonna commit now and then optimize stuff later tonight

[10:14] <Geth_> ¦ star/stmuk-2017.07: c825d4a8bb | (Steve Mynott)++ | README

[10:14] <Geth_> ¦ star/stmuk-2017.07: add error reporting advice for toolchain error

[10:14] <Geth_> ¦ star/stmuk-2017.07: review: https://github.com/rakudo/star/commit/c825d4a8bb

[10:18] <Geth_> ¦ star/master: 15 commits pushed by (Steve Mynott)++

[10:18] <Geth_> ¦ star/master: review: https://github.com/rakudo/star/compare/f0d3c5f8c3...c825d4a8bb

[10:20] <Zoffix> ZOFVM: Files=1252, Tests=161217, 143 wallclock secs (23.97 usr  3.43 sys + 2921.98 cusr 181.10 csys = 3130.48 CPU)

[10:20] <nine> Zoffix: I've listened to Trivium since you posted that vid. I like the music. I would also like to strangle the sound mixing engineer. My subwoofer is completely useless

[10:21] <Geth> ¦ rakudo/nom: 5b77a8aae1 | (Zoffix Znet)++ | 2 files

[10:21] <Geth> ¦ rakudo/nom: Improve TODO test handling inside TODOed subtests

[10:21] <Geth> ¦ rakudo/nom:

[10:21] <Geth> ¦ rakudo/nom: Fixes RT#131767: https://rt.perl.org/Ticket/Display.html?id=131767

[10:21] <Geth> ¦ rakudo/nom:

[10:21] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131767

[10:21] <Geth> ¦ rakudo/nom: Currently tests inside TODOed subtests aren't aware the subtest is

[10:21] <Geth> ¦ rakudo/nom: TODOed, so they're reported as proper failures, which makes them

[10:21] <Geth> ¦ rakudo/nom: leak into non-verbose test run output.

[10:21] <Geth> ¦ rakudo/nom: <…commit message has 11 more lines…>

[10:21] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5b77a8aae1

[10:22] <Zoffix> nine: heh

[10:22] <Geth> ¦ roast: 31c4ad533e | (Zoffix Znet)++ | S24-testing/12-subtest-todo.t

[10:22] <Geth> ¦ roast: Spec failing tests inside TODOed subtests get reported as TODOs

[10:22] <Geth> ¦ roast:

[10:22] <Geth> ¦ roast: RT#131767: https://rt.perl.org/Ticket/Display.html?id=131767

[10:22] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/5b77a8aae1

[10:22] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131767

[10:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/31c4ad533e

[10:42] <Zoffix> .tell samcv looks like latest version bump broke appveyor "cannot allocate an array of constant size 0; 'last_a_first_b_codes' : unknown size": https://ci.appveyor.com/project/moritz/rakudo/build/1.0.3744/job/f5puc7pf5w7dg1vw#L374

[10:42] <yoleaux> Zoffix: I'll pass your message to samcv.

[10:44] <Zoffix> This maybe: https://github.com/MoarVM/MoarVM/blob/master/src/strings/ops.c#L518

[10:44] <Zoffix> VLA arrays aren't part of C89 which MoarVm tries to support due to MSVC being crap

[10:50] <stmuk_> I need a faster computer :( *eyes* Ryzen

[11:17] <stmuk_> I can't reproduce anything like ChristopherBotto's issue

[11:21] <Geth> ¦ rakudo: jsimonet++ created pull request #1119: Fix Exception error message: add one space.

[11:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1119

[11:32] <Geth> ¦ rakudo/nom: 3f99d1d0a1 | (Julien Simonet)++ | src/core/Exception.pm

[11:32] <Geth> ¦ rakudo/nom: Fix Exception error message: add one space.

[11:32] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3f99d1d0a1

[11:32] <Geth> ¦ rakudo/nom: b8036affc7 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/core/Exception.pm

[11:32] <Geth> ¦ rakudo/nom: Merge pull request #1119 from jsimonet/nom

[11:32] <Geth> ¦ rakudo/nom:

[11:32] <Geth> ¦ rakudo/nom: Fix Exception error message: add one space.

[11:32] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b8036affc7

[12:08] <stmuk_> Zoffix: https://github.com/zoffixznet/perl6-Test-When/issues/3

[12:09] <Zoffix> .. stupid windows

[12:15] <Zoffix> stmuk_: I fudged them so they should work fine now. Will fix properly in ~12 hours

[12:15] <Zoffix> .in 11h Fix https://github.com/zoffixznet/perl6-Test-When/issues/3

[12:15] <yoleaux> Zoffix: I'll remind you at 23:15Z

[12:15] <stmuk_> ty

[12:16] <Zoffix> And the failures are due to the test suite itself not a problem in the module

[12:16] * Zoffix &

[12:28] <travis-ci> Rakudo build passed. Zoffix Znet 'Merge pull request #1119 from jsimonet/nom

[12:28] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/256021082 https://github.com/rakudo/rakudo/compare/5b77a8aae1bf...b8036affc782

[12:30] <Geth_> ¦ star: 3cb7bf89a4 | (Steve Mynott)++ | 2 files

[12:30] <Geth_> ¦ star: move batch file for windows MSI build

[12:30] <Geth_> ¦ star: review: https://github.com/rakudo/star/commit/3cb7bf89a4

[12:33] <Geth_> ¦ star: c29ad2d196 | (Steve Mynott)++ | tools/star/windows-msi.pod

[12:33] <Geth_> ¦ star: we still need the extra DDL from Strawberry  Perl's gcc

[12:33] <Geth_> ¦ star: review: https://github.com/rakudo/star/commit/c29ad2d196

[12:35] <stmuk_> does anyone know how to reset untracked changes in git's submodules?

[12:47] <Geth_> ¦ star: acbc51a0e2 | (Steve Mynott)++ | tools/star/windows-msi.pod

[12:47] <Geth_> ¦ star: whitespace and replace panda by zef

[12:47] <Geth_> ¦ star: review: https://github.com/rakudo/star/commit/acbc51a0e2

[12:47] <Geth_> ¦ star: 96d0bc0313 | (Steve Mynott)++ | tools/star/windows-msi.pod

[12:47] <Geth_> ¦ star: more docs for Strawberry Perl type Windows build

[12:47] <Geth_> ¦ star: review: https://github.com/rakudo/star/commit/96d0bc0313

[13:11] <Geth> ¦ rakudo/nom: f49c49bb51 | (Elizabeth Mattijsen)++ | 2 files

[13:11] <Geth> ¦ rakudo/nom: Introducing Mixy.total-positive

[13:11] <Geth> ¦ rakudo/nom:

[13:11] <Geth> ¦ rakudo/nom: Intended as an internal method, but may have its uses outside of the

[13:11] <Geth> ¦ rakudo/nom: core.  It returns the sum of the positive weights in the Mix(|Hash).

[13:11] <Geth> ¦ rakudo/nom: Since this is a fixed value for Mix, we can make Mix.roll quite a bit

[13:11] <Geth> ¦ rakudo/nom: faster, especially for Mixes with larger number of elements.

[13:11] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f49c49bb51

[13:11] <Geth> ¦ rakudo/nom: d3f260c9d3 | (Elizabeth Mattijsen)++ | src/core/Mixy.pm

[13:11] <Geth> ¦ rakudo/nom: Streamline Mixy.roll

[13:11] <Geth> ¦ rakudo/nom:

[13:12] <Geth> ¦ rakudo/nom: - benchmarked on a 100 element Mixy

[13:12] <Geth> ¦ rakudo/nom: - Mix.roll 2x faster

[13:12] <Geth> ¦ rakudo/nom: - MixHash.roll 20% faster

[13:12] <Geth> ¦ rakudo/nom: - Mixy.roll(*) 2x faster

[13:12] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d3f260c9d3

[13:27] <Geth> ¦ rakudo/nom: e2ca1ffaeb | (Elizabeth Mattijsen)++ | src/core/Mixy.pm

[13:27] <Geth> ¦ rakudo/nom: Oops, unbreak Mixy.roll()

[13:27] <Geth> ¦ rakudo/nom:

[13:27] <Geth> ¦ rakudo/nom: Specifically, something like '(a=>-1,b=>1).Mix.roll' giving Nil instead of b

[13:27] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e2ca1ffaeb

[15:12] <Geth_> ¦ star: 767c120ec6 | (Steve Mynott)++ | README

[15:12] <Geth_> ¦ star: fix error spotted by MasterDuke17

[15:12] <Geth_> ¦ star: review: https://github.com/rakudo/star/commit/767c120ec6

[16:16] <Geth> ¦ nqp/async-await-continuations: 11 commits pushed by pmurias++

[16:16] <Geth> ¦ nqp/async-await-continuations: review: https://github.com/perl6/nqp/compare/2f7276110d...513e3ec78f

[16:19] <Geth_> ¦ geth: a128c1c8ad | (Zoffix Znet)++ (committed using GitHub Web editor) | bin/geth.p6

[16:19] <Geth_> ¦ geth: Update hook URL in help message

[16:19] <Geth_> ¦ geth: review: https://github.com/perl6/geth/commit/a128c1c8ad

[17:13] <Zoffix> huggable: FindBin

[17:13] <huggable> Zoffix, use lib $*PROGRAM.parent.parent.child("lib").Str; # finds lib/ for scripts in bin/ or t/

[17:14] <Zoffix> huggable: FindBin :is: use lib $*PROGRAM.add("../lib").Str; # finds lib/ for scripts in bin/ or t/

[17:14] <huggable> Zoffix, Added FindBin as use lib $*PROGRAM.add("../lib").Str; # finds lib/ for scripts in bin/ or t/

[17:14] <Zoffix> huggable: FindBin :is: use lib $*PROGRAM.add: "../lib"; # finds lib/ for scripts in bin/ or t/

[17:14] <huggable> Zoffix, Added FindBin as use lib $*PROGRAM.add: "../lib"; # finds lib/ for scripts in bin/ or t/

[17:14] <Zoffix> m: say  $*PROGRAM.add: "../lib";

[17:14] <camelia> rakudo-moar e2ca1f: OUTPUT: «"<tmp>/../lib".IO␤»

[17:14] <Zoffix> m: say $*PROGRAM.parent.parent.child("lib")

[17:14] <camelia> rakudo-moar e2ca1f: OUTPUT: «"/lib".IO␤»

[17:14] <Zoffix> m: say $*PROGRAM.parent.parent.child("lib").absolute.say

[17:14] <camelia> rakudo-moar e2ca1f: OUTPUT: «/lib␤True␤»

[17:14] <Zoffix> m: say  $*PROGRAM.add("../lib").absolute

[17:14] <camelia> rakudo-moar e2ca1f: OUTPUT: «<tmp>/../lib␤»

[17:15] <Zoffix> m: say "/foo/bar/ber/tmp".IO.add("../lib").absolute

[17:15] <camelia> rakudo-moar e2ca1f: OUTPUT: «/foo/bar/ber/tmp/../lib␤»

[17:15] <Zoffix> m: say "/foo/bar/ber/tmp".IO.parent.parent.child("lib").absolute

[17:15] <camelia> rakudo-moar e2ca1f: OUTPUT: «/foo/bar/lib␤»

[17:16] <Zoffix> huggable: FindBin

[17:16] <huggable> Zoffix, use lib $*PROGRAM.add: "../lib"; # finds lib/ for scripts in bin/ or t/

[17:20] <Zoffix> Oops. Thought this was #zofbot :}

[19:13] <Geth> ¦ 6.d-prep: bf4baeb7b0 | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/FEATURES.md

[19:13] <Geth> ¦ 6.d-prep: Add more notes on .child-secure

[19:13] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/bf4baeb7b0

[19:24] <Geth> ¦ nqp/async-await-continuations: 73f5eb8676 | pmurias++ | 3 files

[19:24] <Geth> ¦ nqp/async-await-continuations: [js] Sprinkle more await/async

[19:24] <Geth> ¦ nqp/async-await-continuations:

[19:24] <Geth> ¦ nqp/async-await-continuations: Also fix bug with not enough parens.

[19:24] <Geth> ¦ nqp/async-await-continuations: review: https://github.com/perl6/nqp/commit/73f5eb8676

[19:31] <dogbert17> bisect: multi f(UInt:D $) { say "ok" }; f(1);

[19:31] <bisectable6> dogbert17, Bisecting by exit code (old=2015.12 new=e2ca1ff). Old exit code: 1

[19:31] <bisectable6> dogbert17, bisect log: https://gist.github.com/904ca4a95588eed3f1b7a87ddd147529

[19:31] <bisectable6> dogbert17, (2016-07-21) https://github.com/rakudo/rakudo/commit/68afa3f1e77862e4b61f9946103047103fff3c2c

[19:36] <dogbert17> commit: 68afa3f1e77862e4b61f9946103047103fff3c2c multi f(UInt:D $) { say "ok" }; f(1);

[19:36] <committable6> dogbert17, ¦68afa3f: «ok»

[19:42] <AlexDaniel> commit: 68afa3f1e77862e4b61f9946103047103fff3c2c^ multi f(UInt:D $) { say "ok" }; f(1);

[19:42] <committable6> AlexDaniel, ¦68afa3f1e77862e4b61f9946103047103fff3c2c^: «===SORRY!===␤Invocant requires an instance of type Int, but a type object was passed.  Did you forget a .new? «exit code = 1»»

[19:48] <dogbert17> AlexDaniel: just added a comment to RT #126642

[19:48] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=126642

[19:58] <AlexDaniel> dogbert17: cool! I don't think any test covers it, but I marked the ticket as ｢testneeded｣

[20:08] <dogbert17> bisect: say num64 ~~ Num

[20:09] <bisectable6> dogbert17, Bisecting by exit code (old=2015.12 new=e2ca1ff). Old exit code: 1

[20:09] <bisectable6> dogbert17, bisect log: https://gist.github.com/9a520aacdc3f7f30262371530bd80597

[20:09] <bisectable6> dogbert17, (2016-10-12) https://github.com/rakudo/rakudo/commit/cff3437de58ef36a9a2a84915ee9181643af4348

[20:10] <dogbert17> commit: cff3437de58ef36a9a2a84915ee9181643af4348^ say num64 ~~ Num

[20:10] <committable6> dogbert17, ¦cff3437de58ef36a9a2a84915ee9181643af4348^: «Cannot unbox a type object (num64) to a num.␤  in block <unit> at /tmp/Gx5angMtJj line 1␤ «exit code = 1»»

[20:11] <AlexDaniel> commit: cff3437de5^,cff3437de5 say num64 ~~ Num

[20:11] <committable6> AlexDaniel, ¦cff3437de5^: «Cannot unbox a type object (num64) to a num.␤  in block <unit> at /tmp/L97Unk8Be1 line 1␤ «exit code = 1»» ¦cff3437: «True»

[20:12] <AlexDaniel> cool

[20:12] <dogbert17> looking at RT #126927. Guess a xomment will have to be added there as well

[20:12] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=126927

[20:15] <AlexDaniel> commit: f457007181^,f457007181 say num64 ~~ Num

[20:15] <committable6> AlexDaniel, ¦f457007181^: «True» ¦f457007: «Cannot unbox a type object␤  in block <unit> at /tmp/kv3JZMmW6E:1␤ «exit code = 1»»

[20:16] <AlexDaniel> oh, it was a regression

[20:19] <dogbert17> bisect: class A { has uint8 $.x; submethod BUILD(:$!x) { } }; A.new(:x(5)).perl.say # RT #127845

[20:19] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=127845

[20:19] <bisectable6> dogbert17, Bisecting by exit code (old=2015.12 new=e2ca1ff). Old exit code: 1

[20:19] <bisectable6> dogbert17, bisect log: https://gist.github.com/05c3407a064a177138d910df751a0b2d

[20:19] <bisectable6> dogbert17, (2016-09-21) https://github.com/rakudo/rakudo/commit/77a2ff13d2828eb36daad9a8ce954173e06413ef

[20:22] <AlexDaniel> dogbert17: if you need to run a lot of bot queries, feel free to do so on #zofbot or #whateverable

[20:24] <dogbert17> cool, will do

[20:37] <Geth> ¦ rakudo/nom: e548b74307 | (Elizabeth Mattijsen)++ | src/core/Baggy.pm

[20:37] <Geth> ¦ rakudo/nom: Streamline Baggy.roll

[20:37] <Geth> ¦ rakudo/nom:

[20:37] <Geth> ¦ rakudo/nom: - benchmarked on a 100 element Baggy

[20:37] <Geth> ¦ rakudo/nom: - Baggy.roll(N) about 1.5x faster and much more memory friendly

[20:37] <Geth> ¦ rakudo/nom: - Now also allows Baggy.roll(* - N) (like Mixy.roll)

[20:37] <Geth> ¦ rakudo/nom: - only one client of !ROLLPICKGRABN left

[20:37] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e548b74307

[20:37] <AlexDaniel> buggable: tags

[20:37] <AlexDaniel> buggable: help

[20:37] <buggable> AlexDaniel, Total: 1621; BUG: 1070; UNTAGGED: 373; LTA: 171; NYI: 95; JVM: 60; RFC: 57; REGEX: 56; CONC: 51; TESTNEEDED: 32; PERF: 27; UNI: 27; SEGV: 26; IO: 22; NATIVECALL: 22; REGRESSION: 22; POD: 21; @LARRY: 20; TODO: 18; PRECOMP: 14; BUILD: 11; OO: 11; TESTCOMMITTED: 11; OPTIMIZER: 10; STAR: 7; BOOTSTRAP: 5; REPL: 5; GLR: 4; MATH: 4; OSX: 4; WEIRD: 4; SPESH: 3; WINDOWS: 3; RT: 2; 

[20:37] <buggable> AlexDaniel, tags | tag SOMETAG | eco | eco Some search term | author github username | speed | testers CPANTesters report ID

[20:37] <AlexDaniel> buggable: testneeded

[20:37] <AlexDaniel> buggable: tag testneeded

[20:37] <buggable> AlexDaniel, There are 32 tickets tagged with TESTNEEDED; See http://perl6.fail/t/TESTNEEDED for details

[20:41] <Geth> ¦ rakudo/nom: 247fc6499d | (Nick Logan)++ (committed using GitHub Web editor) | src/core/CompUnit/Repository/Installation.pm

[20:41] <Geth> ¦ rakudo/nom: Treat :ver<...> like a version instead of a string

[20:41] <Geth> ¦ rakudo/nom:

[20:41] <Geth> ¦ rakudo/nom: Treat `use Test:ver<6.*>` and `use Test:ver<6.c+>`

[20:41] <Geth> ¦ rakudo/nom: like `use Test:ver(v6.*)` and `use Test:ver(v6.c+)`

[20:41] <Geth> ¦ rakudo/nom:

[20:41] <Geth> ¦ rakudo/nom: See:

[20:41] <Geth> ¦ rakudo/nom: http://design.perl6.org/S02.html#Version_literals

[20:41] <Geth> ¦ rakudo/nom: http://design.perl6.org/S11.html#Versioning

[20:41] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/247fc6499d

[20:47] <samcv> .in 1m do a thing

[20:47] <yoleaux> 10:42Z <Zoffix> samcv: looks like latest version bump broke appveyor "cannot allocate an array of constant size 0; 'last_a_first_b_codes' : unknown size": https://ci.appveyor.com/project/moritz/rakudo/build/1.0.3744/job/f5puc7pf5w7dg1vw#L374

[20:47] <yoleaux> samcv: I'll remind you at 20:48Z

[20:47] <yoleaux> 10:54Z <Zoffix> samcv: possibly this part; as VLAs aren't part of C89 and looks like MSVC doesn't support them: https://github.com/MoarVM/MoarVM/blob/master/src/strings/ops.c#L518

[20:48] <ugexe> now to change all the zef output to display :foo<...> instead of :foo("...") everywhere

[20:48] <yoleaux> samcv: do a thing

[20:49] <samcv> :O

[20:49] <samcv> damn you MSVC!

[20:50] <ugexe> eh i think it would be safe to require MSVC2015+, which is C99

[20:51] <samcv> well i guess i can fix that

[20:52] <samcv> we really need appveyor setup on the moarvm repo

[20:58] <samcv> hmm wondering if i should allocate it onto the stack

[20:58] <samcv> i mean it basically did that before. so. should be fine

[21:07] <samcv> bisectable6, ("\x[0301]" ~ 'a' x 10 ~ 'b').ords.say

[21:07] <bisectable6> samcv, On both starting points (old=2015.12 new=247fc64) the exit code is 0 and the output is identical as well

[21:07] <bisectable6> samcv, Output on both points: «(769 97 97 97 97 97 97 97 97 97 97 98)»

[21:08] <samcv> u: { .uniprop('GCB') eq 'Prepend' }

[21:08] <unicodable6> samcv, U+0600 ARABIC NUMBER SIGN [Cf] (؀ )

[21:08] <unicodable6> samcv, U+0601 ARABIC SIGN SANAH [Cf] (؁ )

[21:08] <unicodable6> samcv, 13 characters in total: https://gist.github.com/042862e4de4e6fc86477958f72d6ba03

[21:18] <samcv> gonna run stresstest and then i'll bump moarvm with msvc fix plus another thing

[21:25] <Geth> ¦ MoarVM: 03c829ec24 | (Samantha McVey)++ | src/strings/ops.c

[21:25] <Geth> ¦ MoarVM: MSVC doesn't allow variable length arrays, so use alloca

[21:25] <Geth> ¦ MoarVM:

[21:25] <Geth> ¦ MoarVM: Allocate onto the stack using alloca since MSVC doesn't allow variable

[21:25] <Geth> ¦ MoarVM: length variable declarations (not known at compile time).

[21:25] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/03c829ec24

[21:25] <Geth> ¦ MoarVM: 0729f8411b | (Samantha McVey)++ | src/strings/ops.c

[21:25] <Geth> ¦ MoarVM: concat: Fix conditional to check first instead of last strand of string b

[21:26] <Geth> ¦ MoarVM:

[21:26] <Geth> ¦ MoarVM: This is much likely to cause an issue than repetitions in the last strand of

[21:26] <Geth> ¦ MoarVM: string a, but correct this so it checks the proper strand.

[21:26] <Geth> ¦ MoarVM:

[21:26] <Geth> ¦ MoarVM: I was not able to trigger any incorrectness so was unable to add new tests

[21:26] <Geth> ¦ MoarVM: for this change like I did for when string a has repetitions.

[21:26] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0729f8411b

[21:29] <Zoffix> hah

[21:30] <Zoffix> jnthn: I guess I should've mentioned the channel name in the web hook URL needed to be changed to #moarvm :)

[21:36] <Zoffix> .tell nine would you take a last look at https://github.com/rakudo/rakudo/pull/1107/files and merge the PR if it's OK  I see a change in one of CompUnit stugf and no idea if it's good or not

[21:36] <yoleaux> Zoffix: I'll pass your message to nine.

[21:38] <Zoffix> would be cool to clear rakudo's PR queue. 41 marinating PRsn..

[22:05] <Geth> ¦ nqp: 3e80894048 | (Samantha McVey)++ | tools/build/MOAR_REVISION

[22:05] <Geth> ¦ nqp: Bump MoarVM to MSVC and concat fixes

[22:05] <Geth> ¦ nqp:

[22:05] <Geth> ¦ nqp: 0729f841 concat: Fix conditional to check first instead of last strand of string b

[22:05] <Geth> ¦ nqp: 03c829ec MSVC doesn't allow variable length arrays, so use alloca

[22:05] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/3e80894048

[22:05] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.07-13-g4afde633...2017.07-15-g0729f841

[22:07] <Geth> ¦ rakudo/nom: 3028466c65 | (Samantha McVey)++ | tools/build/NQP_REVISION

[22:07] <Geth> ¦ rakudo/nom: Bump MoarVM/NQP for MSVC and concat fixes

[22:07] <Geth> ¦ rakudo/nom:

[22:07] <Geth> ¦ rakudo/nom: MoarVM changes:

[22:07] <Geth> ¦ rakudo/nom: 0729f841 concat: Fix conditional to check first instead of last strand of string b

[22:07] <Geth> ¦ rakudo/nom: 03c829ec MSVC doesn't allow variable length arrays, so use alloca

[22:07] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3028466c65

[22:07] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.07-11-gc12ef02e4...2017.07-12-g3e8089404

[22:07] <samcv> there we go MSVC builds should be fixed in nom now

[22:16] <AlexDaniel> \o/

[22:20] <Zoffix> |

[22:20] <Zoffix> /\

[22:27] <ugexe> m: say Nil.first; say Nil.head

[22:27] <camelia> rakudo-moar 302846: OUTPUT: «Nil␤Cannot resolve caller head(Nil: ); none of these signatures match:␤    (Any:D $: *%_)␤    (Any:D $: Callable:D $w, *%_)␤    (Any:D $: $n, *%_)␤  in block <unit> at <tmp> line 1␤␤»

[22:27] <ugexe> No Mu candidates for head/tail and some other in Any-iterable-method

[22:28] <Zoffix> That's not why the above code fails tho

[22:29] <Zoffix> And IMO Mu is too big as it is. Why have Any if we migrate all methods into it

[22:29] <Zoffix> The problem in Nil is there's no :U candindates. That issue affects all Mu, Any, and Cool methods that restrict the invocant to :D

[22:29] <ugexe> could change the Any:D to Any

[22:29] <Zoffix> Which makes .? safecall ain't so safe

[22:30] <Zoffix> IMO we should just stick all the methods into Nil (with some helper script). Is that really problematic?

[22:31] <jnthn> Zoffix: Well if you're gonna give me stuff to copy paste on a Friday afternoon... :P

[22:31] <Zoffix> And I bet that'll also fix the 1-item-list-with-Failure-hides-failure issue too, 'cause Failure is Nil

[22:31] <jnthn> Fixed the URL, hopefully

[22:32] * jnthn tries to redeliver the last payload to see

[22:33] <Zoffix> m: say Failure.new.elems

[22:33] <camelia> rakudo-moar 302846: OUTPUT: «1␤»

[22:33] <Zoffix> that issue

[22:33] <jnthn> yay, works

[22:52] <Zoffix> stmuk_: Test::When now fully fixed on Windows

[23:02] <travis-ci> Rakudo build failed. Samantha McVey 'Bump MoarVM/NQP for MSVC and concat fixes

[23:02] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/256236848 https://github.com/rakudo/rakudo/compare/247fc6499d22...3028466c65d0

[23:03] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[23:04] <samcv> why do i have to get the flopping tests

[23:05] <Zoffix> I thought buggable reported them :/

[23:06] * Zoffix notices travis got more "diversity"

[23:07] <Zoffix> Like a dark-colored plumber with rainbow colored mustache

[23:12] <Zoffix> Wonder how much effort it'll take to make Atom have toggleable tab-width. Toggle between 2 and 4 spaces with a press of a buttonm.

[23:15] <yoleaux> Zoffix: Fix https://github.com/zoffixznet/perl6-Test-When/issues/3

[23:16] <Zoffix> yoleaux: already did!

[23:57] <Zoffix> .ask samcv is it easy to split up S15-normalization/nfc-* test further up; about in half each? The individual tests delay the entire stresstest runs because they run for ~80s each. At least with my 24-core box, the sweet spot would probably be around 30s per test file max. Here are the top 20 slowest test files: https://gist.github.com/zoffixznet/3e7c41a6a91806ecdb77f0692152cbd2

[23:57] <yoleaux> Zoffix: I'll pass your message to samcv.

[23:58] <Zoffix> For record, here are the times for all the files in the stresstest, sorted by slowest test files first: https://gist.github.com/zoffixznet/cdcdc8de2b8183e1d14105fea2aabe54

[23:59] <Zoffix> Someone less lazy than me could see if the tests claimed to be `slow` in t/spectest.data actually are slow :)
