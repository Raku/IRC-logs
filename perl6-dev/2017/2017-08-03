[01:01] <Zoffix> Morning!

[01:01] <Zoffix> I'll do the bumps now.

[01:03] <MasterDuke> heh. sleeping at relativistic speeds? 1.5h for Zoffix = 8h for everybody else

[01:03] <Zoffix> :)

[01:32] <Geth> Â¦ nqp: dabd8a234a | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[01:32] <Geth> Â¦ nqp: Bump MoarVM

[01:32] <Geth> Â¦ nqp:

[01:32] <Geth> Â¦ nqp: Bump brought these commits:

[01:32] <Geth> Â¦ nqp: https://github.com/MoarVM/MoarVM/compare/2017.07-266-ged84a632...2017.07-293-g3f33a84

[01:32] <Geth> Â¦ nqp:

[01:32] <Geth> Â¦ nqp: 3f33a84 When inlining, replace receive instruction.

[01:32] <Geth> Â¦ nqp: 0f94262 Widen scope of deopt annotations function.

[01:32] <Geth> Â¦ nqp: <â€¦commit message has 25 more linesâ€¦>

[01:32] <Geth> Â¦ nqp: review: https://github.com/perl6/nqp/commit/dabd8a234a

[01:32] <Geth> Â¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.07-266-ged84a632...2017.07-293-g3f33a84

[01:32] <Geth> Â¦ rakudo/nom: 86cb1363dc | (Zoffix Znet)++ | tools/build/NQP_REVISION

[01:32] <Geth> Â¦ rakudo/nom: Bump NQP

[01:32] <Geth> Â¦ rakudo/nom:

[01:32] <Geth> Â¦ rakudo/nom: NQP bump brought MoarVM bump.

[01:32] <Geth> Â¦ rakudo/nom: MoarVM brought these commits:

[01:32] <Geth> Â¦ rakudo/nom: https://github.com/MoarVM/MoarVM/compare/2017.07-266-ged84a632...2017.07-293-g3f33a84

[01:32] <Geth> Â¦ rakudo/nom:

[01:32] <Geth> Â¦ rakudo/nom: 3f33a84 When inlining, replace receive instruction.

[01:32] <Geth> Â¦ rakudo/nom: <â€¦commit message has 26 more linesâ€¦>

[01:33] <Geth> Â¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/86cb1363dc

[01:33] <Geth> Â¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.07-17-g6932192bb...2017.07-18-gdabd8a2

[07:57] <lizmat> Files=1217, Tests=67044, 257 wallclock secs (13.78 usr  4.94 sys + 1678.09 cusr 166.74 csys = 1863.55 CPU)

[10:17] <AlexDaniel> [Coke]: any news regarding my CLA?

[11:29] <|Tux|> This is Rakudo version 2017.07-126-g86cb1363d built on MoarVM version 2017.07-293-g3f33a841

[11:29] <|Tux|> csv-ip5xs        2.481

[11:29] <|Tux|> test            12.223

[11:29] <|Tux|> test-t           4.054 - 4.067

[11:29] <|Tux|> csv-parser      12.747

[12:45] <[Coke]> AlexDaniel - nope. no word yet. The person who picks up the mail is aware of my interest.

[14:24] <lizmat> m: my %h = a => 42; dd my @a = 66,%h<a>:kv,67   # this should have slipped, right ?

[14:24] <camelia> rakudo-moar 86cb13: OUTPUT: Â«Array @a = [66, ("a", 42), 67]?Â»

[14:52] <[Coke]> m: my %h = a => 42; dd my @a = 66,|%h<a>:kv,67

[14:52] <camelia> rakudo-moar 86cb13: OUTPUT: Â«Unexpected named argument 'kv' passed?  in block <unit> at <tmp> line 1??Â»

[14:52] <[Coke]> m: my %h = a => 42; dd my @a = 66,|(%h<a>:kv),67

[14:52] <camelia> rakudo-moar 86cb13: OUTPUT: Â«Array @a = [66, "a", 42, 67]?Â»

[15:02] <nine> Zoffix++ # Installed geth for work today and it now happily reports pushes to all our local git repositories

[15:04] <lizmat> actually: https://docs.perl6.org/language/subscripts#index-entry-subscript_adverb_%3Akv-%3Akv seems to be inconclusive about it

[15:06] <lizmat> :kv predates GLR, but if we want to have it work like :kv on grep and other cases, we should slip I think

[15:07] <nine> Zoffix: I only wonder why you don't just use a precise version of HTTP::Server::Tiny instead of pointing at it in a comment

[15:59] <[Coke]> run perl6 --profile on a long running process. hit ^C; no profile.

[16:01] <jnthn> No, and that's not especially easy to make happen either, I don't think

[16:02] <[Coke]> Any other suggestions for figuring out how this program went out into the weeds?

[16:03] <[Coke]> (might be nice if we had signal that could dump a stacktrace of where the app was when it hit.)

[16:03] <jnthn> I typically attach gdb but (a) needs gdb, (b) needs a MoarVM built with debug symbols

[16:05] * [Coke] will try to do that with lldb.

[16:05] <jnthn> Should work

[16:05] <jnthn> The trick is to find a frame with a tc

[16:05] <jnthn> And them p MVM_dump_backtrace(tc)

[16:05] <jnthn> Or however you call a function in the debugger

[16:05] <jnthn> That dumps the Perl 6 backtrace

[16:06] <[Coke]> oh, lovely: Unhandled exception in code scheduled on thread 8

[16:06] <[Coke]> (os x, with a rakudobrew moar nom from an hour ago)

[16:06] <[Coke]> (running ... htmlify.p6 from the doc repo. :)

[17:15] <timotimo> oof :)

[17:16] <timotimo> make it poll stdin for "q" every now and then and exit early

[18:34] <Zoffix> nine: precise version being what?

[18:36] <Zoffix> nine: they didn't have any versions at the time. When I made that commit, I also was pretty pissed that they broke two of my apps within a couple of weeks by making inconsequential changes. What really should happen is the Geth made to work on latest version of module (or just moved to something more stable)

[18:38] <Zoffix> m: my @a = 66, <a b c b d b>.grep("b", :kv), 69; dd @a

[18:38] <camelia> rakudo-moar 86cb13: OUTPUT: Â«Array @a = [66, (1, "b", 3, "b", 5, "b").Seq, 69]?Â»

[18:39] * Zoffix rather we don't produce slips willy-nilly; someone wants to slip in, they can do it with |

[18:42] <jdv79> wow, built the newest moarvm and it nosedived pretty hard.  too much blood.

[18:42] <Zoffix> Where's the messenger bot...

[18:43] <timotimo> yoleaux is gone? :\

[18:44] <Zoffix> Yeah. It had a message for nine https://irclog.perlgeek.de/perl6/2017-08-02#i_14957901

[18:44] <jdv79> Zoffix: is your irc presence all you or is there a bot proxying

[18:45] <jdv79> or maybe that was one of the POE guys

[18:46] <Zoffix> jdv79: ZofBot still relays all my mentions to my Twitter account, BUT... To try get more free time I've uninstalled Twitter off my phone and keep it off most of the time, so I only get those messages once in a while, and don't immeditatelly get a notification any more

[18:46] <jdv79> o

[19:18] <nine> Zoffix: I guess you don't mind if I push the occasional improvement to geth then :)

[19:19] <Zoffix> nine: not at all. It's in perl6/ org for a reason :)

[19:24] <nine> It's funny. I realized how much I missed geth at work only after it reported the first few commits.

[19:25] <Zoffix> :)

[19:51] <Zoffix> That's it. I'm doing it :) White Book cover: http://i.imgur.com/w4lGeC2.jpg  Grey Book cover: http://i.imgur.com/RsUAocD.jpg

[19:51] <Zoffix> \o/

[19:51] <Zoffix> Black Book cover to be made eventually :)

[19:51] * Zoffix &

[19:59] <[Coke]> Zoffix++ #books

[20:00] <moritz> now just need a few pages of content :-)

[20:48] <Zoffix> content? Just a minor detail :)

[20:50] <lizmat> .oO( as long as it moves )

[20:59] <jdv79> its kind of a bummer one has to do Promise.in(.002 + 1.rand) to avoid the < 1ms arg

[20:59] <jdv79> is there a terser way to do that?

[21:00] <jdv79> avoid the associated error i meant

[21:02] <perlpilot> 0.002 is 2ms ... that shouldn't carp

[21:02] <jdv79> i just used a value above .001

[21:03] <jdv79> but 1.rand will occasionally be unhappy

[21:04] <perlpilot> oh ... yeah, because sometimes it'll give a value < 0.001

[21:04] <perlpilot> I'm just a little slow apparently.

[21:05] <jdv79> ha.  just seems meh.  no big deal.

[22:37] <jnthn> jdv79: What kind of problem did you have with MoarVM HEAD btw? It was passing spectest at least...

[22:39] <jdv79> i have a 30 or so thread program that usually bogs my box down pretty hard but doesn't make it unresponsive.  with moar head it was unresponsive in < 5s

[22:39] <MasterDuke> Zoffix: have you done a toaster run since all the spesh merges?

[22:39] <jdv79> i don't know really.  i just went back to the version rakudo is pointing to

[22:39] <jnthn> Well, my changes today were meant to make things faster, so mission accomplished? :P :P

[22:40] <jnthn> I'm aware of (and will change tomorrow) one way that we can end up getting very memory hungry in certain cases, though

[22:40] <jdv79> indeed

[22:40] <jdv79> haha

[22:40] <jdv79> i'll try to golf it soon

[22:40] <jdv79> but i haven't eaten today (forgot) so i think i should do that now

[22:41] <jnthn> Uh, yes :)

[22:41] <jnthn> ...I sure hope you're in a more western timezone than me :P

[22:41] <jdv79> yeah, nyc, et

[22:41] <jdv79> its only 7pm

[22:42] <MasterDuke> not willing to sacrifice your body for the craft, weak humans...

[22:43] <MasterDuke> sleep too, what a waste

[22:44] <jnthn> I'm OK with sleep. Lying in bed failing to sleep feels quite the waste, though...

[22:44] <Zoffix> MasterDuke: no

[22:50] <MasterDuke> jnthn: luckily for me that's never been a problem, but my wife experiences that a lot

[22:50] <MasterDuke> Zoffix: think you could?

[22:51] <Zoffix> Not ATM

[22:52] <jnthn> MasterDuke: This week's been pretty bad for it thanks to hot weather

[23:05] <jnthn> m: use Test; my $closed = False; my $sod = Supply.on-demand: { .emit(42); .done }, closing => { $closed = True }; react { whenever $sod { } }; ok $closed

[23:05] <camelia> rakudo-moar 86cb13: OUTPUT: Â«ok 1 - ?Â»

[23:07] <timotimo> ... oh $sod off

[23:07] <jnthn> haha

[23:14] <Geth> Â¦ rakudo/nom: 213595600a | (Jonathan Worthington)++ | src/core/IO/Socket/Async.pm

[23:14] <Geth> Â¦ rakudo/nom: Make sure to stop socket reader on close.

[23:14] <Geth> Â¦ rakudo/nom:

[23:14] <Geth> Â¦ rakudo/nom: If it reached its own EOF we were fine, but if we initiate the close

[23:14] <Geth> Â¦ rakudo/nom: then the `done` event of the reader may never be delivered. Thus, be

[23:14] <Geth> Â¦ rakudo/nom: sure that we stop the reader. Otherwise, we can leak the whole chain

[23:14] <Geth> Â¦ rakudo/nom: of supplies attached to the socket reader.

[23:14] <Geth> Â¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/213595600a

[23:25] <MasterDuke> Zoffix: no particular hurry, just seems like a good idea to do one sometime soonish

[23:29] * Zoffix was hoping AlexDaniel would overtake the Toasting and improve it :P

[23:30] <Zoffix> "SPVM is now 6x faster than Perl 5.26.": http://blogs.perl.org/users/yuki_kimoto/2017/08/i-start-to-talk-about-spvm-at-perl11-on-ircperlorg.html

[23:31] <Zoffix> "It will be 20x faster by using optimization and JIT. If so, SPVM will be revolution of Perl"

[23:33] <jnthn> m: use Test; my $closed = 0; my $sod = Supply.on-demand: -> $s { start { $s.emit(42); $s.done; } }, closing => { $closed++ }; react { whenever Supply.interval(0.01) { whenever $sod { } }; whenever Promise.in(1) { done } }; ok $closed

[23:33] <camelia> rakudo-moar 213595: OUTPUT: Â«not ok 1 - ??# Failed test at <tmp> line 1?Â»

[23:33] <jnthn> So that's how to make it fail on HEAD...

[23:37] <Geth> Â¦ rakudo/nom: 59f4123ea6 | (Jonathan Worthington)++ | src/core/Supply.pm

[23:37] <Geth> Â¦ rakudo/nom: Fix missing tap closes in `whenever`.

[23:37] <Geth> Â¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/59f4123ea6

[23:38] <Geth> Â¦ roast: 70e8bb1a6b | (Jonathan Worthington)++ | S17-supply/syntax.t

[23:38] <Geth> Â¦ roast: Test whenver tap closed on done.

[23:38] <Geth> Â¦ roast: review: https://github.com/perl6/roast/commit/70e8bb1a6b

[23:44] <timotimo> is this about leaking sockets?

[23:44] <jnthn> Yes.

[23:45] <timotimo> nice to have that fixed

[23:45] <jnthn> Well, except it seems we still leak, just less
