[00:05] <Geth> ¦ roast: fe867849a0 | (Zoffix Znet)++ | S05-modifier/perl5_10.t

[00:05] <Geth> ¦ roast: Test P5 named captures

[00:05] <Geth> ¦ roast:

[00:05] <Geth> ¦ roast: Issue: https://github.com/rakudo/rakudo/issues/1269

[00:05] <Geth> ¦ roast: NQP fix: https://github.com/perl6/nqp/commit/10e392477975168a0a9f53c0

[00:05] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/fe867849a0

[00:06] <Geth> ¦ rakudo: c4d6c16453 | (Zoffix Znet)++ | t/spectest.data

[00:06] <Geth> ¦ rakudo: Add S05-modifier/perl5_10.t to list of test files

[00:06] <Geth> ¦ rakudo:

[00:06] <Geth> ¦ rakudo: Closes https://github.com/rakudo/rakudo/issues/1269

[00:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c4d6c16453

[00:15] <Geth> ¦ roast: 496fdd70ec | (Zoffix Znet)++ | S32-num/is-prime.t

[00:15] <Geth> ¦ roast: [v6.d REVIEW] Polish is-prime tests

[00:15] <Geth> ¦ roast:

[00:15] <Geth> ¦ roast: - Combine 2 tests into 1 subtest and avoid repetition of test data

[00:15] <Geth> ¦ roast: - Use proper test routines that check the return value type too

[00:15] <Geth> ¦ roast: - Use <80-char lines where possible

[00:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/496fdd70ec

[00:58] <Geth> ¦ rakudo: b2b39bad0a | (Zoffix Znet)++ | src/core/Cool.pm

[00:58] <Geth> ¦ rakudo: Fix Complex.is-prime dispatch hang

[00:58] <Geth> ¦ rakudo:

[00:58] <Geth> ¦ rakudo: They go into Cool.is-prime and then we infiniloop as Complex.Numeric

[00:58] <Geth> ¦ rakudo: just gives a Complex.

[00:58] <Geth> ¦ rakudo:

[00:58] <Geth> ¦ rakudo: Fix by coercing to Real instead.

[00:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b2b39bad0a

[01:13] <Geth> ¦ rakudo: 893d09ffad | (Zoffix Znet)++ | src/core/Rational.pm

[01:13] <Geth> ¦ rakudo: Fix incorrect Rational.is-prime

[01:13] <Geth> ¦ rakudo:

[01:13] <Geth> ¦ rakudo: When called on lazily-reduced Rats (e.g. (<3/2> + <3/2>).is-prime).

[01:13] <Geth> ¦ rakudo: In such cases, the denominator won't be 1 and the test we have fails.

[01:13] <Geth> ¦ rakudo:

[01:13] <Geth> ¦ rakudo: Fix by reducing before the check. This is a temporarish fix until

[01:13] <Geth> ¦ rakudo: RT#130774: https://rt.perl.org/Ticket/Display.html?id=130774

[01:13] <Geth> ¦ rakudo: is resolved during Great Rat Refactor.

[01:13] <synopsebot> RT#130774 [open]: https://rt.perl.org/Ticket/Display.html?id=130774 [BUG] Rational.REDUCE-ME has a data race

[01:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/893d09ffad

[01:15] <Geth> ¦ roast: a71839ea2b | (Zoffix Znet)++ | S32-num/is-prime.t

[01:15] <Geth> ¦ roast: Expand .is-prime tests

[01:15] <Geth> ¦ roast:

[01:15] <Geth> ¦ roast: Test method and sub coersions for all numerics.

[01:15] <Geth> ¦ roast:

[01:15] <Geth> ¦ roast: Rakudo fixes: https://github.com/rakudo/rakudo/commit/f01c50f1a4

[01:15] <Geth> ¦ roast:               https://github.com/rakudo/rakudo/commit/237019665b

[01:15] <Geth> ¦ roast:               https://github.com/rakudo/rakudo/commit/893d09ffad

[01:15] <Geth> ¦ roast:               https://github.com/rakudo/rakudo/commit/b2b39bad0a

[01:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a71839ea2b

[01:21] <Kaiepi> damn if you're going to troll and ping everyone at least be somewhat entertaining

[02:36] <Zoffix> So I was reading https://www.effectiveperlprogramming.com/2017/12/beware-of-the-removal-of-when-in-perl-v5-28/ and this stands out: "Perhaps part of perl5porter’s policy for experimental changes should include fully fleshed out discussions posted somewhere (manywheres) that have a wide audience beyond core developers. Making the workaday programmer pay attention to the minutiae of daily perl5porters to

[02:36] <Zoffix> catch these things isn’t reasonable."

[02:37] <Zoffix> Reminds me of the alerts.perl6.org I wanted to build. Basically will be Twitter-length notifications about "your stuff might break" changes that happen in core.

[02:38] <Zoffix> Or some critical bug fixes. The stuff that gets posted will be tuned as time goes on (and I imagine "severity" labels will be added) and will be a concise way for users to see what they're getting into vis-a-vis possible breakage if they choose to upgrade from version A to version B

[02:38] <Zoffix> Devs will post via irc bot command and it'll show up on alerts.perl6.org with RSS capability as well as a JSON API.

[02:39] <Zoffix> From recent memory to post to alerts.perl6.org would be:  "experimental .parse-names renamed to .uniparse. The old name will still work until 6.e and will start issuing deprecation warnings in 6.d"

[02:40] * Zoffix gets hacking

[05:00] <Zoffix> ZofBot: the humans are all hung over. It's the perfect time to execute the PLAN!

[05:00] <ZofBot> Zoffix, E

[06:41] <Geth> ¦ alerts: 9872626460 | (Zoffix Znet)++ | 7 files

[06:41] <Geth> ¦ alerts: Implement the model

[06:41] <Geth> ¦ alerts: review: https://github.com/perl6/alerts/commit/9872626460

[06:48] <Geth> ¦ alerts: 9704da4596 | (Zoffix Znet)++ | 2 files

[06:48] <Geth> ¦ alerts: Fix lost `affects`

[06:48] <Geth> ¦ alerts: review: https://github.com/perl6/alerts/commit/9704da4596

[06:49] <Geth> ¦ alerts: b2697f1562 | (Zoffix Znet)++ | lib/P6lert/Model/Alerts.pm6

[06:49] <Geth> ¦ alerts: Order alerts by time

[06:49] <Geth> ¦ alerts: review: https://github.com/perl6/alerts/commit/b2697f1562

[07:32] <Geth> ¦ alerts: 30a82a0ba7 | (Zoffix Znet)++ | bin/alert.p6

[07:32] <Geth> ¦ alerts: Add command-line alerts-adder

[07:32] <Geth> ¦ alerts: review: https://github.com/perl6/alerts/commit/30a82a0ba7

[09:36] <woolfy> mercurio384 please stop that

[09:39] <geekosaur> no point telling them to stop, this is a concerted attack on freenode

[09:39] <geekosaur> they're hitting a bunch of channels from multiple ip addresses

[09:39] <geekosaur> (again --- this is like the third attack wave)

[09:46] <astj> I added their name to my Ignore list in LimeChat (it's my first time to use this feature..)

[10:05] <pmurias> do we have a way of cleaning up the #perl6-dev log? :/

[10:06] <lizmat> moritz usually does that

[10:18] * moritz deleted some spam

[10:49] <travis-ci> Rakudo build failed. Jonathan Worthington 'Merge pull request #790 from usev6/patch-1

[10:49] <travis-ci> https://travis-ci.org/xaxadmin/rakudo/builds/321735187 https://github.com/xaxadmin/rakudo/compare/6d055dd68437f8a27c310050f208836c8d298b52...f192415005cb07181b4c44db58f610c10074b7f8

[11:29] <pmurias> What sort of malformed QAST can cause a "Expected MAST::Frame, but didn't get one"?

[11:57] <tbrowder> .tell AlexDaniel i think the solution to the complex list (and hash) parsing problem is found on cpan in p5 module Text::ParseWords. just a matter of converting the regex to p6  :-D

[11:57] <yoleaux> tbrowder: I'll pass your message to AlexDaniel.

[12:04] <El_Che> rakudo fails building on Ubuntu 16.04, 17.04, 17.10 (amd64, i386); Debian 8 and 9; Fedora 25, 26 and 27; alpine 26; centos 7: https://travis-ci.org/nxadm/rakudo-pkg/builds/321564136

[12:05] <El_Che> In common they have travis, but I don't think it's travis

[12:05] <El_Che> cultpit is: t/02-rakudo/08-repeat.t

[12:07] <El_Che> It looks like a new addition (refactoring): https://github.com/rakudo/rakudo/commit/35916427b6a4dd15380cacf7f79662f61a056e78#diff-98d93f75f1b2e33e3df73baafbc29d48

[12:10] <lizmat> El_Che: could you somehow run that test manually so we have more feedback as to why that test fails ?

[12:12] <El_Che> sure, I'll do it locally (I use travis as my own private canary in the mine :) )

[12:36] <El_Che> lizmat: MoarVM panic: Memory allocation failed; could not allocate 8589934592 bytes

[12:36] <lizmat> wow

[12:36] <lizmat> well, I think the test was to make sure it didn't do that

[12:36] <lizmat> so I guess the test failed

[12:36] <El_Che> lizmat: https://gist.github.com/nxadm/7ce41983e09824833c621205be652f7a

[12:37] <lizmat> perhaps some subtle difference in alloc?

[12:37] <timotimo> did something get eagerized accidentally?

[12:37] <El_Che> we try in a more resource deprived travis env and on a laptop doing nothing

[12:38] <timotimo> ah, this tries to create a humongous string and hopes for a high-level exception

[12:38] <El_Che> Do the test pass on some installations?

[12:38] <El_Che> on the 10+ I tried it failed

[12:38] <lizmat> it works fine for me (on MacOS)

[12:38] <timotimo> 0.42user 0.10system 0:00.61elapsed 85%CPU (0avgtext+0avgdata 92276maxresident)k

[12:38] <timotimo> you can see it's not even trying to allocate something this huge

[12:38] <timotimo> it could be a 32bit thing perhaps?

[12:39] <El_Che> it fails on 32 and 64 bit linux

[12:39] <timotimo> can you attach a gdb to that in the target environment?

[12:39] <El_Che> (I have a mac lying around, so I could test there as well)

[12:39] <El_Che> I have to leave now, but if I have some instructions, sure

[12:40] <El_Che> maybe relevant: all the tests I did are in docker

[12:40] <timotimo> it might take me a few minutes

[12:40] <El_Che> docker in mac should give the same results

[12:42] <timotimo> okay so we're looking for a bunch of adhoc exceptions

[12:43] <timotimo> first: Can't concatenate strings, required number of graphemes 4294967296 > max allowed of 4294967295

[12:43] <timotimo> second: Can't repeat string, required number of graphemes (1000000 * 1000000) greater than max allowed of 4294967295

[12:44] <timotimo> third: Cannot unbox 64 bit wide bigint into native integer

[12:44] <El_Che> maybe could a fork of https://github.com/nxadm/rakudo-pkg be useful for the release manager, inmediate state of 15 target platforms

[12:46] <timotimo> hm, but the problem is that the checks fail, and they do that in many, many cases during that test file

[12:47] <timotimo> m: say 8589934592 / 2 ** 30

[12:47] <camelia> rakudo-moar 893d09ffa: OUTPUT: «8␤»

[12:48] <timotimo> m: my $a = "a" x 2**30; my $b = "b" x 2**30; my $c = $a ~ $b; my $d = $b ~ $a; my $e = $c ~ $d;

[12:48] <camelia> rakudo-moar 893d09ffa: OUTPUT: «Can't concatenate strings, required number of graphemes 4294967296 > max allowed of 4294967295␤  in block <unit> at <tmp> line 1␤␤»

[13:16] <AlexDaniel> Zoffix: +1 for the alerts.perl6.org idea

[13:16] <yoleaux> 11:57Z <tbrowder> AlexDaniel: i think the solution to the complex list (and hash) parsing problem is found on cpan in p5 module Text::ParseWords. just a matter of converting the regex to p6  :-D

[13:39] * timotimo AFK for a few hours

[14:01] <Geth> ¦ rakudo: 5c2283331d | (Elizabeth Mattijsen)++ | src/core/Range.pm

[14:01] <Geth> ¦ rakudo: Streamline Range.pick/roll in light of degenerate Ranges

[14:01] <Geth> ¦ rakudo:

[14:01] <Geth> ¦ rakudo: Such as NaN..NaN or Inf..0 and stuff like that.  Any Range that cannot

[14:01] <Geth> ¦ rakudo: determine its number of elements, will always return Nil for .pick/.roll

[14:01] <Geth> ¦ rakudo: or an empty Seq for .pick(N)/.roll(N).  This makes the behaviour consistent

[14:01] <Geth> ¦ rakudo: with Ranges that do not contain any elements, such as 0..^0.

[14:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5c2283331d

[15:17] <yoleaux> Zoffix: If anyone has any ideas for how to proceed on #1289 please comment

[15:17] <yoleaux> Zoffix: If anyone has any ideas for how to proceed on R#1289 please comment

[15:17] <synopsebot> R#1289 [open]: https://github.com/rakudo/rakudo/issues/1289 [severe] [6.d BLOCKER] Implement a Way to Know Caller's Language

[17:25] <El_Che> if there are more test I could run, just ping me

[18:26] <Zoffix> pmurias: don't know, but there's a ticket with that issue in some module: RT#130095

[18:26] <synopsebot> RT#130095 [open]: https://rt.perl.org/Ticket/Display.html?id=130095 MAST::Frame error encountered.

[18:27] <Zoffix> Dammit. Looks like I missed the anal sex tips to keep my man satisfied during christmas!

[18:30] <Zoffix> We could +r the channel

[18:30] <Zoffix> Weird they don't get into #perl6 somehow. The only diff I see is #perl6 also got +C on "Blocks CTCP commands (other than /me actions)."

[18:30] <Zoffix> https://freenode.net/kb/answer/channelmodes

[18:32] <Zoffix> And ZofBot forwarded all the messages to Twitter -_-

[18:32] <Zoffix> ZofBot: stoopid robot

[18:32] <ZofBot> Zoffix, moar hmmm

[18:35] <teatime> Zoffix: I bet it's actually blocks color.  there's a '/quote help <something>' you can do on most networks to get user and chanmodes, although I can't figure out which one works for freenode.

[18:35] <teatime> oh, nm, presumably the thing you linked is correct

[18:36] <teatime> I was just thinking +c strips color and +C blocks msgs with color

[18:37] <teatime> oh also ffr it's '/quote help cmode' (or umode, or just '/quote help' for a list of topics)

[19:38] <cognominal> k,

[19:39] <cognominal> ;´´´´´´´´´\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

[19:39] <cognominal> \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

[19:40] <cognominal> \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\,kkkkkk

[19:40] <Zoffix> cognominal: cat! Get off the keyboard!

[19:40] <Zoffix> I mean: mew meow meeeow meeow meeooooooww!

[19:40] <teatime> that does look suspiciously like a COK event

[19:44] <cognominal> ,\\\\\\\\\\\\\\\\\\¨¨¨KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK?::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

[19:44] <cognominal> ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

[19:44] <cognominal> :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::K>,

[19:44] <Zoffix> heh

[19:44] <teatime> not quite buying it thoughj

[19:49] <Geth> ¦ alerts: 4354ecbc5a | (Zoffix Znet)++ | 7 files

[19:49] <Geth> ¦ alerts: Implement rudimentary website

[19:49] <Geth> ¦ alerts: review: https://github.com/perl6/alerts/commit/4354ecbc5a

[19:56] <cognominal> ;\]ppppppppppppppppppppppp;;;;;;;;;;;;;;;;;;;P];p\.|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\|||||||||\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\lllll;o]p\;:::::::::P´´´´´´´´´´´´´´´´´´´´´´´´´´´´´

[19:58] <lizmat> or cognominal has fallen asleep ?

[19:58] <lizmat> it does look a bit like snoring  :-)

[21:09] <Geth> ¦ alerts: 7ef1d7d852 | (Zoffix Znet)++ | 11 files

[21:09] <Geth> ¦ alerts: Implement styles

[21:09] <Geth> ¦ alerts: review: https://github.com/perl6/alerts/commit/7ef1d7d852

[21:49] <Geth> ¦ alerts: bc2ef457f3 | (Zoffix Znet)++ | 2 files

[21:49] <Geth> ¦ alerts: Implement JSON API

[21:49] <Geth> ¦ alerts: review: https://github.com/perl6/alerts/commit/bc2ef457f3

[22:11] <Geth> ¦ alerts: ed7b3d1cca | (Zoffix Znet)++ | 3 files

[22:11] <Geth> ¦ alerts: Implement .public Model endpoint

[22:11] <Geth> ¦ alerts:

[22:11] <Geth> ¦ alerts: That delays publicizing new alerts (to let us fix typos, undo it, etc)

[22:11] <Geth> ¦ alerts: review: https://github.com/perl6/alerts/commit/ed7b3d1cca

[22:13] <Geth> ¦ rakudo: 89d85baa4b | (Zoffix Znet)++ | src/core/Whatever.pm

[22:13] <Geth> ¦ rakudo: Fix Whatever.ACCEPTS with Mu:U

[22:13] <Geth> ¦ rakudo:

[22:13] <Geth> ¦ rakudo: Whatever should accept everything, even a Mu:U. Make it return

[22:13] <Geth> ¦ rakudo: True instead of False

[22:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/89d85baa4b

[22:14] <Geth> ¦ roast: 626c4bd67e | (Zoffix Znet)++ | S02-types/whatever.t

[22:14] <Geth> ¦ roast: Spec Whatever.ACCEPTS(Mu:U) gives True

[22:14] <Geth> ¦ roast:

[22:14] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/89d85baa4b

[22:14] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/626c4bd67e

[23:57] <Geth> ¦ alerts: f10d859736 | (Zoffix Znet)++ | 2 files

[23:57] <Geth> ¦ alerts: Add twitter icon

[23:57] <Geth> ¦ alerts: review: https://github.com/perl6/alerts/commit/f10d859736
