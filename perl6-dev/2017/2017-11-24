[01:04] <AlexDaniel> .oO( we shouldn't be calling it anything until there's a ticket )

[01:05] <AlexDaniel> m: <2 4 6 4 2 1 0>.grep({last if $_ > 5; True}).say

[01:05] <camelia> rakudo-moar eacf9b277: OUTPUT: «(2 4)␤»

[01:06] <AlexDaniel> I mean, that's even better than fff

[01:09] <AlexDaniel> you can't do the opposite thingy with it, but still

[01:18] <AlexDaniel> just as an idea, maybe grep should support “rest” control flow thingy

[01:19] <AlexDaniel> that would work similarly to “last” but would imply an empty block that just returns True

[01:20] <AlexDaniel> I know, crazy, but is it crazier than adding -until&-when hell

[06:18] <masak> the thing I like most about the `ff` family of operators is that they can occasionally be a great complement to the kind of debugging that's done by `say` statements

[06:19] <masak> e.g. "start outputting things only after this condition occurs"

[07:16] <[Tux]> Rakudo version 2017.11-9-geacf9b277 - MoarVM version 2017.11-2-g26ad7cc55

[07:16] <[Tux]> csv-test-xs-20      0.450 -  0.538

[07:16] <[Tux]> csv-ip5xs           1.110 -  1.144

[07:16] <[Tux]> test-t --race       1.365 -  1.428

[07:16] <[Tux]> test-t              3.234 -  3.346

[07:16] <[Tux]> csv-parser         12.396 - 12.664

[07:16] <[Tux]> test               11.993 - 12.920

[07:17] <[Tux]> csv-ip5xs-20       12.708 - 13.090

[07:17] <[Tux]> test-t-20 --race   21.079 - 21.282

[07:17] <[Tux]> test-t-20          59.994 - 60.783

[10:23] <gfldex> IO::Socket::Async.listen does not complain if a port is already by another process. Is that intentional?

[10:25] <jnthn> It does complain

[10:26] <jnthn> The Supply it returns will QUIT

[10:26] <jnthn> m: start react whenever IO::Socket::Async.listen("localhost", 11111) { }; sleep 1; react whenever IO::Socket::Async.listen("localhost", 11111) { }

[10:26] <camelia> rakudo-moar eacf9b277: OUTPUT: «An operation first awaited:␤  in block <unit> at <tmp> line 1␤␤Died with the exception:␤    Unexplained error␤      in block <unit> at <tmp> line 1␤␤»

[10:26] <jnthn> Unexplained error is a bit LTA, but it's certainly an error.

[10:27] * gfldex notes a ENODOC

[10:27] <jnthn> Confirmed it works if I do it with a separate process also

[10:28] <gfldex> m: start react whenever IO::Socket::Async.listen("localhost", 11111) { }; sleep 1; react whenever IO::Socket::Async.listen("localhost", 11111) { }; CATCH { default { say .^name, ': ', .Str } }

[10:28] <camelia> rakudo-moar eacf9b277: OUTPUT: «X::AdHoc+{X::Await::Died}: Unexplained error␤»

[11:00] <gfldex> m: start react whenever IO::Socket::Async.listen("localhost", 666) { }; sleep 1; react whenever IO::Socket::Async.listen("localhost", 11111) { }; CATCH { default { say .^name, ': ', .Str } }

[11:00] <gfldex> m: start react whenever IO::Socket::Async.listen("localhost", 666) { }; sleep 1; react whenever IO::Socket::Async.listen("localhost", 666) { }; CATCH { default { say .^name, ': ', .Str } }

[11:00] <camelia> rakudo-moar eacf9b277: OUTPUT: «(timeout)»

[11:00] <camelia> rakudo-moar eacf9b277: OUTPUT: «X::AdHoc+{X::Await::Died}: Unexplained error␤»

[11:01] <gfldex> 666 is a privileged port. Does camelia run a root?

[11:06] <gfldex> .seen lizmat

[11:06] <yoleaux> I saw lizmat 23 Nov 2017 23:27Z in #perl6-dev: * lizmat goes off for some shuteye

[13:33] <Geth> ¦ nqp/master: 7 commits pushed by pmurias++

[13:33] <Geth> ¦ nqp/master: d0f8e09c46 | Use &is for better diagnostics in test

[13:33] <Geth> ¦ nqp/master: 794749891d | [js] Match astral characters when matching some unicode properties

[13:33] <Geth> ¦ nqp/master: e175218587 | Throw more correct exceptions when unboxing type objects

[13:33] <Geth> ¦ nqp/master: ea266102e6 | [js] Support more unicode digits in radix ops

[13:33] <Geth> ¦ nqp/master: 595dc8c2f7 | [js] Support more unicode digits in radix ops

[13:33] <Geth> ¦ nqp/master: 7a0d5e4adf | Test unicode digits with radix ops

[13:33] <Geth> ¦ nqp/master: 094569fa2f | Test matching unicode astral digits

[13:33] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/51ed31c20c...094569fa2f

[14:22] <Geth> ¦ nqp: 85c5d8379e | pmurias++ | src/vm/js/nqp-runtime/core.js

[14:22] <Geth> ¦ nqp: [js] Support fullwidth characters in radix ops

[14:22] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/85c5d8379e

[14:22] <Geth> ¦ nqp: 9fcd5e293b | pmurias++ | t/nqp/081-radix.t

[14:22] <Geth> ¦ nqp: Test fullwidth characters in radix op

[14:22] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9fcd5e293b

[14:39] <travis-ci> NQP build failed. pmurias 'Test fullwidth characters in radix op'

[14:39] <travis-ci> https://travis-ci.org/perl6/nqp/builds/306783321 https://github.com/perl6/nqp/compare/094569fa2fa2...9fcd5e293b3c

[15:01] <Geth> ¦ nqp: b2789d9bc5 | pmurias++ | t/nqp/081-radix.t

[15:01] <Geth> ¦ nqp: Fix test description

[15:01] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/b2789d9bc5

[15:01] <Geth> ¦ nqp: 8b9753f9cd | pmurias++ | 2 files

[15:01] <Geth> ¦ nqp: Skip tests on the JVM

[15:01] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/8b9753f9cd

[15:18] <travis-ci> NQP build passed. pmurias 'Skip tests on the JVM'

[15:18] <travis-ci> https://travis-ci.org/perl6/nqp/builds/306800514 https://github.com/perl6/nqp/compare/9fcd5e293b3c...8b9753f9cd1e

[16:44] <gfldex> those could do with some tagging https://github.com/rakudo/rakudo/issues/1265 https://github.com/rakudo/rakudo/issues/1266

[17:34] <Geth> ¦ rakudo: 3166400d91 | (Zoffix Znet)++ | 2 files

[17:34] <Geth> ¦ rakudo: Fix incorrect attribute name in X::AdHoc.new

[17:34] <Geth> ¦ rakudo:

[17:34] <Geth> ¦ rakudo: - Partially phixes #1266

[17:34] <Geth> ¦ rakudo: - Includes todoed test that still wants to be told

[17:34] <Geth> ¦ rakudo:     what the better message is

[17:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3166400d91

[17:34] <synopsebot> RAKUDO#1266 [open]: https://github.com/rakudo/rakudo/issues/1266 [LTA] LTA port already bound to is very vague

[17:50] <AlexDaniel> squashable6: next

[17:50] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 6 days and ≈16 hours (2017-12-02 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:10] <lizmat> .

[18:13] <lizmat> .tell jnthn I have an almost working prototype of .toggle, but first will have some LPW socializing and dinner

[18:13] <yoleaux> lizmat: I'll pass your message to jnthn.

[18:13] <lizmat> afk&

[18:34] <tbrowder> btw, #ugexe blessed my PR #1240 which fixes some outstanding pod bugs

[18:58] <tbrowder> too bad i don’t know how to use irc correctly...

[19:18] <Geth> ¦ rakudo: FCO++ created pull request #1267: Make Supply.zip() 'done' when the first supply 'done'

[19:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1267

[19:18] <synopsebot> RAKUDO#1267 [open]: https://github.com/rakudo/rakudo/pull/1267 Make Supply.zip() 'done' when the first supply 'done'

[20:10] <Geth> ¦ rakudo: d85585ea1d | usev6++ | src/core/Exception.pm

[20:10] <Geth> ¦ rakudo: Use native attributes in exceptions for sprintf

[20:10] <Geth> ¦ rakudo:

[20:10] <Geth> ¦ rakudo: This fix is similiar to 92f239b557.

[20:10] <Geth> ¦ rakudo:

[20:10] <Geth> ¦ rakudo: On MoarVM it makes the actual error message appear for code like this:

[20:10] <Geth> ¦ rakudo:

[20:10] <Geth> ¦ rakudo:   m: sprintf "%q"

[20:10] <Geth> ¦ rakudo:   [...] OUTPUT: «Died with X::Str::Sprintf::Directives::Unsupported␤␤»

[20:10] <Geth> ¦ rakudo:

[20:10] <Geth> ¦ rakudo: On JVM the type checking seems to be more (overly?) strict for cases like this.

[20:10] <Geth> ¦ rakudo: The above code resulted in a typed exception X::TypeCheck::Assignment.

[20:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d85585ea1d

[21:10] <Geth> ¦ rakudo: 1d0dae8673 | (Fernando Correa)++ | src/core/Supply.pm

[21:10] <Geth> ¦ rakudo: Make Supply.zip() 'done' when the first supply 'done'

[21:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1d0dae8673

[21:10] <Geth> ¦ rakudo: f82433bfd9 | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/core/Supply.pm

[21:10] <Geth> ¦ rakudo: Merge pull request #1267 from FCO/supply-zip

[21:10] <Geth> ¦ rakudo:

[21:10] <Geth> ¦ rakudo: Make Supply.zip() 'done' when the first supply 'done'

[21:10] <synopsebot> RAKUDO#1267 [closed]: https://github.com/rakudo/rakudo/pull/1267 Make Supply.zip() 'done' when the first supply 'done'

[21:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f82433bfd9
