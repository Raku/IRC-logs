[06:05] <AlexDaniel> reportable6: uptime

[06:05] <reportable6> AlexDaniel, 16 hours, 17 minutes, and 18 seconds, 805.164063MiB maxrss. This is Rakudo version 2017.10-215-g85105077a built on MoarVM version 2017.10-86-g89fae17a6 implementing Perl 6.c.

[06:05] <AlexDaniel> reportable6: list

[06:05] <reportable6> AlexDaniel, https://gist.github.com/0384e024569715af720bd8a06924e659

[06:07] <AlexDaniel> reportable6: snapshot

[06:07] <reportable6> AlexDaniel, OK! Working on it. This will take forever, so don't hold your breath.

[07:11] <AlexDaniel> reportable6: list

[07:11] <reportable6> AlexDaniel, https://gist.github.com/e4233a72f8c494e73b15197bf367c10a

[07:17] <AlexDaniel> reportable6: list

[07:17] <reportable6> AlexDaniel, https://gist.github.com/c7fe1aadaf4d2d497acfbb66b4bbc71e

[07:18] <AlexDaniel> reportable6: 2017-11-26T22:21:12Z 2017-12-04T06:07:00Z

[07:18] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[07:18] <reportable6> AlexDaniel, https://gist.github.com/49326ba3f95a4f3ee3d1b722e8d48519

[07:20] <AlexDaniel> .tell lizmat weekly: https://gist.github.com/49326ba3f95a4f3ee3d1b722e8d48519 squashathon only: https://gist.github.com/d9a9f76e6470f80be8b03a463464c6cb

[07:20] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[07:30] <AlexDaniel> .tell lizmat something like: The goal of this squashathon was to go through tickets that were not updated in two or more years (these tickets are automatically labeled with MOLD tag). As a result, 121 out of 224 tickets (more than half) were updated. Most of the updates were simply about reproducing the issue with the current version of rakudo, but some tickets got more attention and received tests and fixes. More stats about all

[07:30] <AlexDaniel> previous squashathons here: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:30] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[07:30] <AlexDaniel> blah

[07:30] <AlexDaniel> .tell lizmat previous squashathons here: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:30] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[07:38] <[Tux]> Rakudo version 2017.11-54-gc9699ab2c - MoarVM version 2017.11-28-gba1fb9542

[07:38] <[Tux]> csv-test-xs-20      0.437 -  0.463

[07:38] <[Tux]> csv-ip5xs           1.103 -  1.117

[07:38] <[Tux]> test-t --race       1.212 -  1.252

[07:38] <[Tux]> test-t              2.922 -  2.948

[07:38] <[Tux]> test               11.708 - 11.865

[07:38] <[Tux]> csv-parser         12.198 - 12.258

[07:38] <[Tux]> csv-ip5xs-20       12.979 - 12.984

[07:38] <[Tux]> test-t-20 --race   18.284 - 18.406

[07:38] <[Tux]> test-t-20          52.895 - 53.230

[09:04] <Geth> ¦ rakudo: 76158136f0 | (Elizabeth Mattijsen)++ | src/core/operators.pm

[09:04] <Geth> ¦ rakudo: Streamline INDIRECT_NAME_LOOKUP a bit

[09:04] <Geth> ¦ rakudo:

[09:04] <Geth> ¦ rakudo: - don't need to check for elems after split, name check will do

[09:04] <Geth> ¦ rakudo: - don't need to specifically unbox strings

[09:04] <Geth> ¦ rakudo: - use EXISTS-KEY vs :exists

[09:04] <Geth> ¦ rakudo: - use AT-KEY vs {}

[09:04] <Geth> ¦ rakudo: - remove TABs and other readability tweaks

[09:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/76158136f0

[09:15] <Geth> ¦ roast/master: 4 commits pushed by (Tom Browder)++, lizmat++

[09:15] <Geth> ¦ roast/master: d9f7b1bace | add tests for fix for RT #126740

[09:15] <Geth> ¦ roast/master: feb4e2fc71 | add tests for RT #126742 and RT #130477

[09:15] <Geth> ¦ roast/master: 42cf30aed3 | add test

[09:15] <Geth> ¦ roast/master: 16077b988c | Merge pull request #363 from tbrowder/fix-table-caption-rt-126740

[09:15] <Geth> ¦ roast/master: review: https://github.com/perl6/roast/compare/5ae87d0223...16077b988c

[09:15] <synopsebot> RT#126740 [new]: https://rt.perl.org/Ticket/Display.html?id=126740 [POD] Pod::Block::Table node caption property is not populated properly

[09:16] <synopsebot> RT#126742 [new]: https://rt.perl.org/Ticket/Display.html?id=126742 [POD]  config items should not include quotes for string values

[09:16] <synopsebot> RT#130477 [open]: https://rt.perl.org/Ticket/Display.html?id=130477 [BUG][POD] Pod config parses colopairs but simply stringifies whatever it matched

[09:24] <lizmat> .

[09:24] <yoleaux> 07:20Z <AlexDaniel> lizmat: weekly: https://gist.github.com/49326ba3f95a4f3ee3d1b722e8d48519 squashathon only: https://gist.github.com/d9a9f76e6470f80be8b03a463464c6cb

[09:24] <yoleaux> 07:30Z <AlexDaniel> lizmat: something like: The goal of this squashathon was to go through tickets that were not updated in two or more years (these tickets are automatically labeled with MOLD tag). As a result, 121 out of 224 tickets (more than half) were updated. Most of the updates were simply about reproducing the issue with the current version of rakudo, but some tickets got more attention and received tests and fixes. More stats abou

[09:24] <yoleaux> all

[09:24] <yoleaux> 07:30Z <AlexDaniel> lizmat: previous squashathons here: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:24] <lizmat> AlexDaniel++

[09:38] <lizmat> .ask jnthn is there a reason we don't have a nqp::split_s that generates a list_s rather than a list ?

[09:38] <yoleaux> lizmat: I'll pass your message to jnthn.

[09:40] <lizmat> .ask jnthn is there a reason why we don't have a Failure.throw method ?

[09:40] <yoleaux> lizmat: I'll pass your message to jnthn.

[10:46] <pmurias> in roast we have fudged tests for a Lr property

[10:46] <pmurias> where is that property taken from?

[10:47] <pmurias> the UCD seems to mention a LC property that has the same definition as fudge claims Lr to have

[11:49] <|Tux|> Tada…

[11:49] <|Tux|> Rakudo version 2017.11-55-g76158136f - MoarVM version 2017.11-28-gba1fb9542

[11:49] <|Tux|> csv-test-xs-20      0.456 -  0.457

[11:49] <|Tux|> csv-ip5xs           1.068 -  1.069

[11:49] <|Tux|> test-t --race       1.139 -  1.143

[11:49] <|Tux|> test-t              2.861 -  2.863

[11:49] <|Tux|> test               10.411 - 11.325

[11:49] <|Tux|> csv-parser         11.989 - 12.257

[11:50] <|Tux|> csv-ip5xs-20       12.699 - 13.171

[11:50] <|Tux|> test-t-20 --race   17.601 - 18.099

[11:50] <|Tux|> test-t-20          51.226 - 51.306

[12:28] <pmurias> "In addition, Perl6::Rules supports the Perl-specific <Lr> property, which replaces the non-standard Perl5-specific <L&> property, which matches any upper-, lower-, or title-case letter."

[12:29] <pmurias> do we really want to have that <Lr> property when there is a standard LC/Cased_Letter property that does the same thing?

[13:11] <Geth> ¦ roast: 551a7ffd7b | pmurias++ | S05-mass/properties-general.t

[13:11] <Geth> ¦ roast: Use standard LC unicode property rather than a non-standard NYI Lr

[13:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/551a7ffd7b

[13:12] <pmurias> I turned the fudged tests for the Lr property into LC ones

[13:26] <pmurias> only the unfudged part of roast is the spec?

[13:29] <jnthn> pmurias: Yes

[13:29] <jnthn> The fudged ones are speculation :)

[14:35] * pmurias hates when he has to make language design choices ;)

[15:12] <lizmat> jnthn: on let / temp: would you be against making !TEMP-RESTORE / !LET-RESTORE IterationBuffers ?

[15:12] <lizmat> it would allow the let/temp logic to be merged into a R:I method

[15:12] <jnthn> Hm, what are they now?

[15:12] <lizmat> nqp::list

[15:13] <lizmat> which HLLizes  :-(

[15:13] <jnthn> Ah

[15:13] <jnthn> Could work

[15:13] <jnthn> Though are they similar enough to merge? :)

[15:13] <lizmat> they're identical for the !LET/!TEMP name and what is being used in the error message

[15:14] <jnthn> Oh...I guess the difference is in which phaser they are attached to

[15:14] <lizmat> yup

[15:14] <lizmat> and where they read their data from

[15:15] <lizmat> also: prefix:<temp> and <let> currently don't take Mu

[15:16] <lizmat> I don't think auto-threading temp / let makes sense, or does it ?

[15:16] <jnthn> No

[15:16] <jnthn> Should take Mu

[15:17] <lizmat> ok

[15:17] <lizmat> that should fix RT #125398 , but for the wrong reason

[15:17] <synopsebot> RT#125398 [open]: https://rt.perl.org/Ticket/Display.html?id=125398 with no strict temp does not autcreate hashes and hash elements

[15:19] <lizmat> m: my %h; dd %h<a>

[15:19] <camelia> rakudo-moar 76158136f: OUTPUT: «Any %h = Any␤»

[15:19] <lizmat> m: no strict; dd %h<a>   # the real problem of #125398

[15:19] <camelia> rakudo-moar 76158136f: OUTPUT: «Mu %h = Mu␤»

[15:43] <Geth> ¦ rakudo: 752299767b | (Elizabeth Mattijsen)++ | src/core/operators.pm

[15:43] <Geth> ¦ rakudo: let/temp should be able to take Mu

[15:43] <Geth> ¦ rakudo:

[15:43] <Geth> ¦ rakudo: - this fixes the symptom of RT #125398

[15:43] <Geth> ¦ rakudo: - the underlying issue is really that with "no strict" containers

[15:43] <Geth> ¦ rakudo:   are apparently created with Mu, rather than Any

[15:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/752299767b

[15:43] <synopsebot> RT#125398 [open]: https://rt.perl.org/Ticket/Display.html?id=125398 with no strict temp does not autcreate hashes and hash elements

[15:45] <lizmat> m: no strict; @a[3] = 2; say @a.default  # default value of descriptor is wrong

[15:45] <camelia> rakudo-moar 76158136f: OUTPUT: «(Mu)␤»

[15:46] <lizmat> m: my @a; @a[3] = 2; say @a.default

[15:46] <camelia> rakudo-moar 76158136f: OUTPUT: «(Any)␤»

[16:50] <lizmat> .speed 10

[16:51] <lizmat> buggable: speed 10

[16:51] <buggable> lizmat, ▁▁▆▄▃▄▄▄▁▃ dates: 2017-12-01–2017-12-04; range: 17.585s–18.781s; speed: ~0% difference

[16:51] <lizmat> buggable: speed 20 :4

[16:51] <buggable> lizmat,    ███               dates: 2017-11-28–2017-12-04

[16:51] <buggable> lizmat, ▇▆▆███               range: 17.585s–21.924s

[16:51] <buggable> lizmat, ██████▃▄    ▂        speed: 14% faster (widths: 9/3)

[16:51] <buggable> lizmat, █████████▄▂▁█▆▄▆▆▆▁▄

[16:52] <lizmat> buggable: speed 20 :4 test-t

[16:52] <buggable> lizmat, ▄▄█ ▃▁               dates: 2017-11-28–2017-12-04

[16:52] <buggable> lizmat, ███▆██               range: 2.809s–3.338s

[16:52] <buggable> lizmat, ██████▅▆▅▆      ▁    speed: 12% faster (widths: 9/3)

[16:52] <buggable> lizmat, ██████████▁▅█▆▆██▇▄▄

[17:45] <pmurias> samcv: is blk matching supposed to be used as <:InBlockName> or is <:BlockName> supposed to be recognized?

[18:50] <Geth> ¦ rakudo: e5b49ce3d6 | (Elizabeth Mattijsen)++ | src/Perl6/World.nqp

[18:50] <Geth> ¦ rakudo: Proper fix for RT #125398

[18:50] <Geth> ¦ rakudo:

[18:50] <Geth> ¦ rakudo: Make sure we have an Any value_type when we set up the container info in

[18:50] <Geth> ¦ rakudo: the case of a non-existing variable and 'no strict' active.

[18:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e5b49ce3d6

[18:50] <synopsebot> RT#125398 [open]: https://rt.perl.org/Ticket/Display.html?id=125398 with no strict temp does not autcreate hashes and hash elements

[18:54] <Geth> ¦ rakudo: 928ada0814 | usev6++ | src/vm/jvm/runtime/org/perl6/rakudo/RakOps.java

[18:54] <Geth> ¦ rakudo: [jvm] Pass value to X::Assignment::RO

[18:54] <Geth> ¦ rakudo:

[18:54] <Geth> ¦ rakudo: With 0c16bb2b01 the argument for calling X::Assignment::RO was changed

[18:54] <Geth> ¦ rakudo: from typename to value. The code for the JVM backend hasn't been updated

[18:54] <Geth> ¦ rakudo: to reflect that change, yet.

[18:54] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/928ada0814

[18:58] <lizmat> bartolin++

[19:02] <Zoffix> Are there known spectest failures?

[19:03] <Zoffix> Getting some in t/spec/S26-documentation/07-tables.t and t/spec/MISC/bug-coverage-stress.t

[19:03] <Zoffix> https://gist.github.com/zoffixznet/a0230986ac398f0101b6738bc58daae2

[19:04] <[Coke]> lizmat: https://github.com/perl6/doc/issues/1693

[19:04] * lizmat just noticed S26-documentation/07-tables.t herself

[19:05] * lizmat commented

[19:06] <[Coke]> thanks, lizmat!

[19:06] <bartolin> Zoffix: indeed, I had that failure in MISC/bug-coverage-stress.t during last spectest run, too

[19:06] * lizmat actually didn't

[19:06] * lizmat checks another time

[19:07] <Zoffix> ok, then it ain't my changes :)

[19:07] <lizmat> MISC/bug-coverage-stress.t test 5 fails for me

[19:08] <lizmat> I guess that is only run with stresstest ?

[19:09] <Zoffix> Yeah

[19:09] <lizmat> that explains why I didn't see that with spectest :-)

[19:19] <Zoffix> ZOFFLOP:  t/spec/S11-modules/nested.t t/spec/S10-packages/precompilation.t

[19:22] <Geth> ¦ rakudo: 6c299bf9f8 | (Zoffix Znet)++ | src/core/Rat.pm

[19:22] <Geth> ¦ rakudo: Make &[-]/&[+] with Rationals 30%-50% faster

[19:22] <Geth> ¦ rakudo:

[19:22] <Geth> ¦ rakudo: We already reduce inside DIVIDE-NUMBERS, so we don't need to

[19:22] <Geth> ¦ rakudo: mess with gcd in the ops themselves.

[19:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6c299bf9f8

[19:22] <Geth> ¦ rakudo: 78aeaf4699 | (Zoffix Znet)++ | src/core/Rat.pm

[19:22] <Geth> ¦ rakudo: Make DIVIDE-NUMBERS 6%-15% faster

[19:22] <Geth> ¦ rakudo:

[19:22] <Geth> ¦ rakudo: - Ain't much but it's used by many Rat ops

[19:22] <Geth> ¦ rakudo: - Mostly just getting rid of blocks, variables, and useless deconts

[19:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/78aeaf4699

[20:21] <AlexDaniel> releasable6: next

[20:21] <releasable6> AlexDaniel, Next release in 11 days and ≈22 hours. No blockers. 0 out of 60 commits logged

[20:22] <releasable6> AlexDaniel, Details: https://gist.github.com/b91e1231c8cb08487410d97761ada4c1

[20:22] <AlexDaniel> whew just 11 days

[21:02] <tbrowder> spec test with tables is failing becase

[21:02] <tbrowder> because it goes with a rakudo PR that hasn’t been approved yet

[21:03] <timotimo> we usually take care that spec tests are always clean

[21:03] <timotimo> well, we try at least

[21:04] <tbrowder> PR #1287 and #1291

[21:04] <tbrowder> the Pr

[21:05] <tbrowder> the spec PR says it’s for a specific rakudo PR

[21:05] <teatime> AlexDaniel: does it still have all the same features as Zoffix?

[21:06] <AlexDaniel> teatime: I don't know. Maybe it's even better 🤷

[21:07] * teatime retires.  Say goodnight, Lucy!

[21:09] <AlexDaniel> you mean that SPEC#363 was merged too early?

[21:09] <synopsebot> SPEC#363 [closed]: https://github.com/perl6/roast/pull/363 add tests for fix for RT #126740

[21:10] <Geth> ¦ roast/revert-363-fix-table-caption-rt-126740: 0769c0d907 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | S26-documentation/07-tables.t

[21:10] <Geth> ¦ roast/revert-363-fix-table-caption-rt-126740: Revert "add tests for fix for RT #126740"

[21:10] <Geth> ¦ roast/revert-363-fix-table-caption-rt-126740: review: https://github.com/perl6/roast/commit/0769c0d907

[21:10] <timotimo> i assume lizmat read over that quickly and thought "were fixed with rakudo pr #1234" meant "this pr was merged" rather than "that pr would have to be merged"?

[21:10] <synopsebot> RT#126740 [new]: https://rt.perl.org/Ticket/Display.html?id=126740 [POD] Pod::Block::Table node caption property is not populated properly

[21:10] <lizmat> timotimo: that may well have been the case

[21:10] <lizmat> oops

[21:10] <Geth> ¦ roast: AlexDaniel++ created pull request #365: Revert "add tests for fix for RT #126740"

[21:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/365

[21:10] <synopsebot> SPEC#365 [open]: https://github.com/perl6/roast/pull/365 Revert "add tests for fix for RT #126740"

[21:10] <timotimo> no big deal

[21:11] <Geth> ¦ roast: 4d11359f15 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S26-documentation/07-tables.t

[21:11] <Geth> ¦ roast: Revert "add tests for fix for RT #126740"

[21:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/4d11359f15

[21:11] <AlexDaniel> omg couldn't github just push 1 revert commit…

[21:13] <AlexDaniel> … next time I'll do it myself rather than relying on github's magic buttons…

[21:16] <AlexDaniel> POD-related code is so scary :)

[22:02] <travis-ci> Rakudo build canceled. Elizabeth Mattijsen 'Proper fix for RT #125398

[22:02] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/311462560 https://github.com/rakudo/rakudo/compare/752299767bac...e5b49ce3d6e3

[22:02] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[22:02] <synopsebot> RT#125398 [open]: https://rt.perl.org/Ticket/Display.html?id=125398 with no strict temp does not autcreate hashes and hash elements

[22:04] <lizmat> hmmm...looks like I borked the JVM build ?

[22:57] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/12/04/2017-49-mischieventing/

[22:58] <dogbert17> moronic question: what's the proper way to co from   ((('y', 'o'), ('o', 'y')), (('x', 'n'), ('n', 'x')))    to    (('y', 'o'), ('o', 'y'), ('x', 'n'), ('n', 'x'))   i.e. some sort of partial, one level flattening ?

[22:58] <dogbert17> *go

[22:58] * dogbert17 reads weekly

[23:01] <dogbert17> lizmat++ weekly

[23:04] * lizmat goes afk for some more recovering&

[23:04] <dogbert17> good night lizmat

[23:27] <jnthn> lizmat++ # weekly

[23:29] <jnthn> m: ((('y', 'o'), ('o', 'y')), (('x', 'n'), ('n', 'x'))).map({ |$_ }).perl.say

[23:29] <camelia> rakudo-moar 78aeaf469: OUTPUT: «(("y", "o"), ("o", "y"), ("x", "n"), ("n", "x")).Seq␤»

[23:31] <dogbert17> jnthn++
