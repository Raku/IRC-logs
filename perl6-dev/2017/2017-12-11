[08:43] <lizmat> Files=1231, Tests=75909, 313 wallclock secs (14.48 usr  5.12 sys + 2170.64 cusr 211.60 csys = 2401.84 CPU)

[09:41] <lizmat> afk until later today&

[13:03] <Geth> ¦ roast: tbrowder++ created pull request #366: adds test for fix for RT #126740, populates table caption property

[13:03] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/366

[13:04] <synopsebot> RT#126740 [new]: https://rt.perl.org/Ticket/Display.html?id=126740 [POD] Pod::Block::Table node caption property is not populated properly

[13:04] <synopsebot> SPEC#366 [open]: https://github.com/perl6/roast/pull/366 adds test for fix for RT #126740, populates table caption property

[13:08] <Geth> ¦ rakudo: tbrowder++ created pull request #1303: fix for RT #126740, populates table caption property, if any; tests a…

[13:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1303

[13:08] <synopsebot> RAKUDO#1303 [open]: https://github.com/rakudo/rakudo/pull/1303 fix for RT #126740, populates table caption property, if any; tests a…

[13:10] <tbrowder> .tell AlexDaniel please review PR #1303 (or suggest someone to review it)

[13:10] <yoleaux> tbrowder: I'll pass your message to AlexDaniel.

[13:19] <AlexDaniel> .

[13:19] <yoleaux> 13:10Z <tbrowder> AlexDaniel: please review PR #1303 (or suggest someone to review it)

[13:19] <AlexDaniel> GH#1303

[13:19] <synopsebot> GH#1303 [open]: https://github.com/rakudo/rakudo/pull/1303 fix for RT #126740, populates table caption property, if any; tests a…

[13:22] <AlexDaniel> that looks reasonable

[13:22] * AlexDaniel looks closer

[13:23] <AlexDaniel> tbrowder: heh I wonder, what happens if you do :caption(0) ? :)

[13:39] <tbrowder> good question! i’m guessing no caption at all.  but this is just for the <> case really. the next PR will be for all the quoting and extraneous quote issues. but

[13:40] <tbrowder> i will look at the caption(0) which should be an exception imho

[13:42] <tbrowder> i wanted to get the caption property issue separated from the quoting issue—two clearly separate areas.

[13:53] <AlexDaniel> tbrowder: so should we merge this one for now?

[14:30] <tbrowder> if you please, but first let me check the caption(0) results. what do you think would be a reasonable reasonable response?

[14:32] <AlexDaniel> same as caption(1) ?

[14:32] <AlexDaniel> well, similar

[14:37] <tbrowder> yes, that’s correct, i think that is part of the other quote issue since it affects all

[14:38] <tbrowder> the %config values in a table.

[14:38] <tbrowder> so i recommend merging the PR and test as is

[14:39] <tbrowder> the next PR will have extensive tests for most every e

[14:40] <tbrowder> *%config value we can think of, and it will warn or fail gracefully otherwise

[14:44] <AlexDaniel> can't we have a TODO test now? :)

[14:45] <Geth> ¦ rakudo: 2cd266fe08 | (Tom Browder)++ | src/Perl6/Pod.nqp

[14:45] <Geth> ¦ rakudo: fix for RT #126740, populates table caption property, if any; tests are in roast PR

[14:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2cd266fe08

[14:45] <Geth> ¦ rakudo: f1be29c0dd | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | src/Perl6/Pod.nqp

[14:45] <Geth> ¦ rakudo: Merge pull request #1303 from tbrowder/fix-table-caption

[14:45] <Geth> ¦ rakudo:

[14:45] <Geth> ¦ rakudo: fix for RT#126740, populates table caption property, if any

[14:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f1be29c0dd

[14:45] <synopsebot> RT#126740 [new]: https://rt.perl.org/Ticket/Display.html?id=126740 [POD] Pod::Block::Table node caption property is not populated properly

[14:45] <synopsebot> RAKUDO#1303 [closed]: https://github.com/rakudo/rakudo/pull/1303 fix for RT #126740, populates table caption property, if any; tests a…

[14:46] <tbrowder> AlexDaniel: thanks!

[14:47] <tbrowder> don’t forget the roast PR

[14:47] <tbrowder> um.

[14:47] <Geth> ¦ roast: 3ae2640538 | (Tom Browder)++ | S26-documentation/07-tables.t

[14:47] <Geth> ¦ roast: adds test for fix for RT #126740, populates table caption property

[14:47] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3ae2640538

[14:47] <Geth> ¦ roast: 5bd7083960 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | S26-documentation/07-tables.t

[14:47] <Geth> ¦ roast: Merge pull request #366 from tbrowder/fix-table-caption

[14:47] <Geth> ¦ roast:

[14:47] <Geth> ¦ roast: adds test for fix for RT #126740, populates table caption property

[14:47] <synopsebot> SPEC#366 [closed]: https://github.com/perl6/roast/pull/366 adds test for fix for RT #126740, populates table caption property

[14:47] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5bd7083960

[14:48] <AlexDaniel> tbrowder: 👍

[14:48] <tbrowder> TODO test? in what form

[14:49] <tbrowder> i can start adding skipped tests

[14:49] <AlexDaniel> well I was thinking of a thing for  =begin table :caption(0)

[14:50] <AlexDaniel> tbrowder: todo is better than skip because once it's implemented it'll show up as a warning

[14:50] <tbrowder> before i work on the PR, actually not a bad idea, test-driven development, right?

[14:50] <AlexDaniel> yea

[14:51] <tbrowder> well, i can also add the test for caption(0) now since the results should not change!

[14:54] <DrForr> Good thing I read that, I was going to file a bug on that this evening.

[14:56] <tbrowder> DrForr: what did you do and what did you expect?

[15:05] <Geth> ¦ roast: bc48eed684 | (Tom Browder)++ (committed using GitHub Web editor) | S26-documentation/07-tables.t

[15:05] <Geth> ¦ roast: add another test for table %config key/value pairs

[15:05] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/bc48eed684

[15:12] <tbrowder> .ask DrForr ref captions: what did you enter and what did you expect? captions as properties have not been available until PR #1303.

[15:12] <yoleaux> tbrowder: I'll pass your message to DrForr.

[15:36] <DrForr> tbrowder: I think I noticed them in the spec and wondered why they weren't done yet is all

[15:36] <yoleaux> 15:12Z <tbrowder> DrForr: ref captions: what did you enter and what did you expect? captions as properties have not been available until PR #1303.

[15:46] <tbrowder> Ok, great! User testing would be cool!

[15:56] <DrForr> I was appropriating the spectests so I could have some proper test coverage for Pod::To::BlogspotHTML (which probably wil have Pod::To::HTMLFragment as a side benefit) and noticed the omission.

[16:45] <Zoffix> R#1299 could use more comments

[16:45] <synopsebot> R#1299 [open]: https://github.com/rakudo/rakudo/pull/1299 Issue 1268: Fix lazy slicing stopping at the first deleted

[16:47] <Zoffix> IMO we should revert 456358e and maintain "stops at first hole" behaviour for the foreseeable future. Half-fixing it just muddles things up and completely-fixing it would likely waste some perf for an edge-case problem.

[16:48] <Zoffix> Unless we could have more than one thing that gives True for nqp::null

[16:48] <Zoffix> Unless we could have more than one thing that gives True for nqp::isnull

[16:49] <Zoffix> (and have one indicate no thing and another indicate a hole)

[16:50] <Zoffix> Last night's skip fix actually fixes RT#132184

[16:51] <Zoffix> \o/

[16:51] <synopsebot> RT#132184 [new]: https://rt.perl.org/Ticket/Display.html?id=132184 [6.d] .skip semantics are inconsistent

[17:00] <Geth> ¦ roast: 49956451de | (Zoffix Znet)++ | S32-list/skip.t

[17:00] <Geth> ¦ roast: Test Seq.skip

[17:00] <Geth> ¦ roast:

[17:00] <Geth> ¦ roast: RT#132184: https://rt.perl.org/Public/Bug/Display.html?id=132184

[17:00] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/854c10c27e

[17:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/49956451de

[17:04] <Zoffix> m: my %days := SetHash.new: Date.today … Date.new: '2030-04-02'; %days ∖= %days.grep: *.key.day-of-week > 5; say %days.elems

[17:04] <camelia> rakudo-moar f1be29c0d: OUTPUT: «1␤»

[17:05] <Zoffix> That used to be an error in RT#132353

[17:05] <synopsebot> RT#132353 [open]: https://rt.perl.org/Ticket/Display.html?id=132353 [LTA] error with using meta assign ops with bound SetHash

[17:05] <samcv> .till pmurias <:space> is a property name alias for White_Space, though if there is <:ascii> then it should be <:InASCII> if it's meant as alias for InBasicLatin

[17:05] <samcv> .tell pmurias <:space> is a property name alias for White_Space, though if there is <:ascii> then it should be <:InASCII> if it's meant as alias for InBasicLatin

[17:05] <yoleaux> samcv: I'll pass your message to pmurias.

[17:05] <Zoffix> But if there's no error, I would've expected it to DWIM and alter the SetHash with values rather than sticking 1 set into it

[17:14] <Geth> ¦ rakudo: 20d67a3d4d | (Zoffix Znet)++ | t/05-messages/02-errors.t

[17:14] <Geth> ¦ rakudo: Test autogenerated methods show up in .^methods

[17:14] <Geth> ¦ rakudo:

[17:14] <Geth> ¦ rakudo: RT#132283: https://rt.perl.org/Ticket/Display.html?id=132283

[17:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/20d67a3d4d

[17:14] <synopsebot> RT#132283 [open]: https://rt.perl.org/Ticket/Display.html?id=132283 [REGRESSION] BUILDALL is listed as one of the methods, maybe that's not right (say $foo.^methods)

[17:17] <Geth> ¦ roast: 786472ae43 | (Zoffix Znet)++ | S10-packages/require-and-use.t

[17:17] <Geth> ¦ roast: Test `use lib ''` throws useful error

[17:17] <Geth> ¦ roast:

[17:17] <Geth> ¦ roast: RT#132249: https://rt.perl.org/Ticket/Display.html?id=132249

[17:17] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/786472ae43

[17:17] <synopsebot> RT#132249 [new]: https://rt.perl.org/Ticket/Display.html?id=132249 [LTA] use lib ‘’ spills guts (use lib ‘’)

[17:22] <Geth> ¦ roast: e7962eb855 | (Zoffix Znet)++ | S12-methods/calling_syntax.t

[17:22] <Geth> ¦ roast: Test `$.` syntax shorthand works with meta-methods

[17:22] <Geth> ¦ roast:

[17:22] <Geth> ¦ roast: RT#131478: https://rt.perl.org/Ticket/Display.html?id=131478

[17:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e7962eb855

[17:22] <synopsebot> RT#131478 [open]: https://rt.perl.org/Ticket/Display.html?id=131478 Warning about $. when using metamethod

[17:25] <Geth> ¦ rakudo: 831dab1422 | (Zoffix Znet)++ | t/04-nativecall/05-arrays.t

[17:25] <Geth> ¦ rakudo: Test CArray.^shortname shows sane value

[17:25] <Geth> ¦ rakudo:

[17:25] <Geth> ¦ rakudo: RT#131406: https://rt.perl.org/Ticket/Display.html?id=131406

[17:25] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/831dab1422

[17:25] <synopsebot> RT#131406 [open]: https://rt.perl.org/Ticket/Display.html?id=131406 Bug in Perl6::Metamodel::Naming method set_name. `CArray[Pointer].^shortname` returns 'Pointer]'; should be 'CArray[Pointer]'

[17:27] <Geth> ¦ rakudo: a563544669 | (Zoffix Znet)++ | t/04-nativecall/05-arrays.t

[17:27] <Geth> ¦ rakudo: Restructure test code a bit for nicer look

[17:27] <Geth> ¦ rakudo:

[17:27] <Geth> ¦ rakudo: No functional changes

[17:27] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a563544669

[17:32] <Geth> ¦ roast: b610337bd5 | (Zoffix Znet)++ | S32-num/rat.t

[17:32] <Geth> ¦ roast: Test Rat literals with numerators over 32 bits work

[17:32] <Geth> ¦ roast:

[17:32] <Geth> ¦ roast: RT#126103: https://rt.perl.org/Ticket/Display.html?id=126103

[17:32] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/27752615026fe58fe

[17:32] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b610337bd5

[17:32] <synopsebot> RT#126103 [open]: https://rt.perl.org/Ticket/Display.html?id=126103 [BUG] Rat literal fails for moderately large numerator

[17:54] <AlexDaniel> reportable6: list

[17:55] <reportable6> AlexDaniel, https://gist.github.com/f4d5f7885e585a3b911e6f86c155926d

[17:55] <AlexDaniel> reportable6: 2017-12-04T06:07:00Z 2017-12-11T00:00:00Z

[17:55] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[17:56] <reportable6> AlexDaniel, https://gist.github.com/7d691db38e28192c2cc5f2c174f36aa6

[17:57] <AlexDaniel> .tell lizmat https://irclog.perlgeek.de/perl6-dev/2017-12-11#i_15562338

[17:57] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[18:22] <Geth> ¦ roast: 8362ba817a | (Zoffix Znet)++ | S02-types/list.t

[18:22] <Geth> ¦ roast: Test List.new does not create unwanted containers

[18:22] <Geth> ¦ roast:

[18:22] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1260

[18:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8362ba817a

[18:30] <Geth> ¦ roast: 0580a62a80 | (Zoffix Znet)++ | S02-types/WHICH.t

[18:30] <Geth> ¦ roast: Mixins to Code:U objects do not cause crash on .WHICH

[18:30] <Geth> ¦ roast:

[18:30] <Geth> ¦ roast: RT#126099: https://rt.perl.org/Ticket/Display.html?id=126099

[18:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/0580a62a80

[18:30] <synopsebot> RT#126099 [open]: https://rt.perl.org/Ticket/Display.html?id=126099 [BUG] .WHICH fails for Block but True

[18:39] <Geth> ¦ rakudo: 1b0be0f631 | (Zoffix Znet)++ | t/05-messages/11-overflow.t

[18:39] <Geth> ¦ rakudo: Test overflow in .roll()

[18:39] <Geth> ¦ rakudo:

[18:39] <Geth> ¦ rakudo: RT#125820: https://rt.perl.org/Ticket/Display.html?id=125820

[18:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1b0be0f631

[18:39] <synopsebot> RT#125820 [new]: https://rt.perl.org/Ticket/Display.html?id=125820 [9999] .roll(-9999999999999999999999999999999999999999999999999)

[18:41] <Geth> ¦ roast: fb9e904279 | (Tom Browder)++ (committed using GitHub Web editor) | S26-documentation/07-tables.t

[18:41] <Geth> ¦ roast: correct test, add test for a number in parens

[18:41] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/fb9e904279

[18:44] <Geth> ¦ rakudo: 062c27f343 | (Zoffix Znet)++ | t/05-messages/11-overflow.t

[18:44] <Geth> ¦ rakudo: Test overflow behaviour in .indent()

[18:44] <Geth> ¦ rakudo:

[18:44] <Geth> ¦ rakudo: RT#125816: https://rt.perl.org/Ticket/Display.html?id=125816

[18:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/062c27f343

[18:45] <synopsebot> RT#125816 [new]: https://rt.perl.org/Ticket/Display.html?id=125816 [9999] "x".indent(9999999999999999999999999999999999999999999999999)

[18:56] <Geth> ¦ roast: 0d871001ff | (Zoffix Znet)++ | S02-types/native.t

[18:56] <Geth> ¦ roast: Test meta-assign op with native nums

[18:56] <Geth> ¦ roast:

[18:56] <Geth> ¦ roast: RT#124083: https://rt.perl.org/Ticket/Display.html?id=124083

[18:56] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/0d871001ff

[18:56] <synopsebot> RT#124083 [open]: https://rt.perl.org/Ticket/Display.html?id=124083 Problem with metaops on num32

[19:04] <Geth> ¦ roast: 8cbbf89c9e | (Zoffix Znet)++ | S06-operator-overloading/prefix.t

[19:04] <Geth> ¦ roast: Coverage for crashes in certain custom operator setups

[19:04] <Geth> ¦ roast:

[19:04] <Geth> ¦ roast: RT#123216: https://rt.perl.org/Ticket/Display.html?id=123216

[19:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8cbbf89c9e

[19:05] <synopsebot> RT#123216 [open]: https://rt.perl.org/Ticket/Display.html?id=123216 [BUG] QRPA: Can't pop from an empty array!

[19:38] <Geth> ¦ roast: 08ed79bfbb | (Zoffix Znet)++ | S04-declarations/my.t

[19:38] <Geth> ¦ roast: Test throwage on conflicting type constraints in `my`

[19:38] <Geth> ¦ roast:

[19:38] <Geth> ¦ roast: RT#126123: https://rt.perl.org/Ticket/Display.html?id=126123

[19:38] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/08ed79bfbb

[19:38] <synopsebot> RT#126123 [open]: https://rt.perl.org/Ticket/Display.html?id=126123 [BUG] clashing type constraints accepted

[19:42] <Zoffix> AlexDaniel: what dis meen? https://gist.github.com/19c77dc6fc0fea67b6149f8d3dda45f0

[19:42] <Zoffix> c: af5b39ac7460e49979,af5b39ac7460e49979~1 use lib <sandbox/roast/packages/>; use Test; use Test::Util; chdir $*TMPDIR; is_run ｢/a/; print "pass"｣, {:out<pass>, :err(''), :0status}

[19:42] <committable6> Zoffix, https://gist.github.com/a4e3332415bd4642c8874138be8cfdb2

[19:42] <Zoffix> c: af5b39ac7460e49979,af5b39ac7460e49979~1 use lib <sandbox/roast/packages/>; use Test; use Test::Util; chdir sandbox/; is_run ｢/a/; print "pass"｣, {:out<pass>, :err(''), :0status}

[19:42] <committable6> Zoffix, https://gist.github.com/1815f80ae894a43e3998c80e07088ad8

[19:46] <Zoffix> AlexDaniel: nm; I guess it's just old rakudo doing stuff. It's like 2015 rakudo

[19:49] <Geth> ¦ roast: ca6de727f9 | (Zoffix Znet)++ | S05-metasyntax/regex.t

[19:49] <Geth> ¦ roast: /a/ in sink context in in uppermost scope does not explode

[19:49] <Geth> ¦ roast:

[19:49] <Geth> ¦ roast: RT#126972: https://rt.perl.org/Ticket/Display.html?id=126972

[19:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ca6de727f9

[19:49] <synopsebot> RT#126972 [open]: https://rt.perl.org/Ticket/Display.html?id=126972 [LTA] error mesage about getlexrelcaller (/a/)

[20:01] <AlexDaniel> yeah indeed, looks like old rakudo was expecting $HOME to be writable

[20:04] <AlexDaniel> that changed in (2015-12-28) https://github.com/rakudo/rakudo/commit/4cf630bfbc74f8baa01111f0478447fd05fcfe17 and it's kinda sad

[20:04] <AlexDaniel> (sad because it seems like you can't bisect stuff with precomp that is older than that)

[20:07] <travis-ci> Rakudo build failed. Zoffix Znet 'Test autogenerated methods show up in .^methods

[20:07] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/314889408 https://github.com/rakudo/rakudo/compare/f1be29c0dd2d...20d67a3d4d40

[20:07] <buggable> [travis build above] ☠ All failures are due to: failed make test (1 failure). Across all jobs, only t/02-rakudo/repl.t test file failed.

[20:07] <Geth> ¦ roast: 5cbef9d682 | (Zoffix Znet)++ | S03-metaops/not.t

[20:07] <Geth> ¦ roast: Test chaining of !before/!after

[20:07] <Geth> ¦ roast:

[20:07] <Geth> ¦ roast: RT#125575: https://rt.perl.org/Ticket/Display.html?id=125575

[20:07] <Geth> ¦ roast:

[20:07] <Geth> ¦ roast: Includes fudges for mixed combinations, pending resolution of

[20:07] <Geth> ¦ roast: R#1304: https://github.com/rakudo/rakudo/issues/1304

[20:07] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5cbef9d682

[20:07] <synopsebot> RT#125575 [open]: https://rt.perl.org/Ticket/Display.html?id=125575 [BUG] negation of before/after cannot be chained

[20:07] <synopsebot> R#1304 [open]: https://github.com/rakudo/rakudo/issues/1304 [LTA] Chainable ops silently fail to be chained when negated

[20:35] <Geth> ¦ roast: 65336f6eb1 | (Zoffix Znet)++ | S04-exceptions/fail.t

[20:35] <Geth> ¦ roast: Test Failure.new(Exception.new) does not segfault

[20:35] <Geth> ¦ roast:

[20:35] <Geth> ¦ roast: RT#124434: https://rt.perl.org/Ticket/Display.html?id=124434

[20:35] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/65336f6eb1

[20:35] <synopsebot> RT#124434 [open]: https://rt.perl.org/Ticket/Display.html?id=124434 [BUG] Passing an Exception object to Failure.new segfaults (SEGV) in sink context in Rakudo

[20:38] <Geth> ¦ rakudo: e57c771cd7 | (Zoffix Znet)++ | 3 files

[20:38] <Geth> ¦ rakudo: Rename Test::Helper's is-run `$status` to `$exitcode`

[20:38] <Geth> ¦ rakudo:

[20:38] <Geth> ¦ rakudo: Since that's what we actually are interested in testing.

[20:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e57c771cd7

[20:38] <Geth> ¦ rakudo: 1101fea183 | (Zoffix Znet)++ | t/05-messages/02-errors.t

[20:38] <Geth> ¦ rakudo: Test Failure.new(Exception.new) does not segfault

[20:38] <Geth> ¦ rakudo:

[20:38] <Geth> ¦ rakudo: RT#124434: https://rt.perl.org/Ticket/Display.html?id=124434

[20:38] <Geth> ¦ rakudo:

[20:38] <Geth> ¦ rakudo: Less-specific test also included in roast:

[20:38] <Geth> ¦ rakudo: https://github.com/rakudo/rakudo/commit/e57c771cd7

[20:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1101fea183

[20:50] <AlexDaniel> wow, Zoffathon :)

[20:50] <Geth> ¦ rakudo: fed56be258 | (Zoffix Znet)++ | t/05-messages/02-errors.t

[20:50] <Geth> ¦ rakudo: Test List.ASSIGN-POS gives PDG error

[20:50] <Geth> ¦ rakudo:

[20:50] <Geth> ¦ rakudo: RT#125964: https://rt.perl.org/Ticket/Display.html?id=125964

[20:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fed56be258

[20:50] <synopsebot> RT#125964 [open]: https://rt.perl.org/Ticket/Display.html?id=125964 [LTA] assigning to AOB List elem does not hint right

[20:50] <AlexDaniel> buggable: tag testneeded

[20:50] <buggable> AlexDaniel, There are 48 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[21:52] <[Tux]> Rakudo version 2017.11-90-gfed56be25 - MoarVM version 2017.11-28-gba1fb9542

[21:52] <[Tux]> csv-test-xs-20      0.493 -  0.500

[21:52] <[Tux]> csv-ip5xs           1.132 -  1.158

[21:52] <[Tux]> test-t --race       1.234 -  1.472

[21:52] <[Tux]> test-t              2.988 -  3.011

[21:52] <[Tux]> test               11.720 - 12.369

[21:52] <[Tux]> csv-parser         12.270 - 12.637

[21:52] <[Tux]> csv-ip5xs-20       13.152 - 13.299

[21:52] <[Tux]> test-t-20 --race   18.755 - 19.214

[21:52] <[Tux]> test-t-20          53.449 - 53.867

[22:03] <timotimo> uh oh

[22:06] <lizmat> ?

[22:06] <lizmat> ah, above 3 again?

[22:30] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/12/11/2017-50-of-quasi-and-injectile/

[22:38] <Geth> ¦ nqp/master: 6 commits pushed by pmurias++

[22:38] <Geth> ¦ nqp/master: d586ebd60a | [js] Fix bug in nqp::radix* ops

[22:38] <Geth> ¦ nqp/master: 4aa561bbdd | Test passing numbers with a unparsed suffix to nqp::radix*

[22:38] <Geth> ¦ nqp/master: cfda09a6fc | [js] Rought implementation of the remaining props that need to be done

[22:38] <Geth> ¦ nqp/master: 8d012cdc48 | [js] Refactor property adding

[22:38] <Geth> ¦ nqp/master: 0c6237d7e4 | [js] Cleanup generating unicode properties from property values

[22:38] <Geth> ¦ nqp/master: 38920214cf | [js] Implement the :NumericValue unicode property

[22:38] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/a7a0f674e6...38920214cf

[22:39] <jnthn> lizmat++ # weekly

[23:22] <Zoffix> .ask jnthn how come `$!signals-by-Str-setup` and `$!signals-setup` are set to `True` *outside* the lock? Isn't there a race that as one thread just enters the lock another one just exited it but hasn't yet set those to True, so the other thread would check it and find it false and duplicate the work? https://github.com/rakudo/rakudo/commit/1f411693bd60b81b018e0c8457d003bebea8374d

[23:22] <Zoffix> no bot -_-

[23:22] <Zoffix> lizmat++ # good weekly

[23:31] <Zoffix> Was gonna poke at Signal enum issues since it's a failing spectest on Windows, but no idea how come we got nqp constants and a Signal enum, but then on top of that do Kernel.signal stuff that has different values (e.g. on Windows, SIGHUP is 1 via former and 3 via latter). Are they meant to be different? Are they interchangeable?

[23:33] <timotimo> i think we can't use nqp constants because different systems have different values, right? and we might run an nqp/rakudo that was compiled on a slightly different system maybe?

[23:34] <Zoffix> So all of those should be removed?

[23:35] <geekosaur> the signal values thing is an open bug

[23:35] <geekosaur> and I think so far it's even eluded jnthn++

[23:36] <Zoffix> Failures in t/spec/S02-magicals/args.t and anything else that uses is_run() and passes args RT#132258

[23:36] <synopsebot> RT#132258 [new]: https://rt.perl.org/Ticket/Display.html?id=132258 [SECURITY][WINDOWS] `run "perl6" ...` can be made to execute shell commands

[23:36] <Zoffix> We need to make perl6 a proper executable (at least on Windows), not a cmd.exe script

[23:37] <Zoffix> *are due to the same problem as in that RT, I meant

[23:39] <travis-ci> Rakudo build passed. Zoffix Znet 'Restructure test code a bit for nicer look

[23:39] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/314896354 https://github.com/rakudo/rakudo/compare/831dab14226a...a56354466908

[23:49] <Geth> ¦ roast: d315f50251 | (Zoffix Znet)++ | S02-types/num.t

[23:49] <Geth> ¦ roast: Increase alllowed tolerance in tan()/sec() tests

[23:49] <Geth> ¦ roast:

[23:49] <Geth> ¦ roast: Part of addressing #320 #232 #197

[23:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d315f50251

[23:49] <synopsebot> SPEC#320 [open]: https://github.com/perl6/roast/issues/320 Windows roast failures just before 2017.09 release

[23:52] <Geth> ¦ synopsebot: 9f5cc43a28 | (Zoffix Znet)++ (committed using GitHub Web editor) | lib/SB/Plugin/GitHub.pm6

[23:52] <Geth> ¦ synopsebot: Handle all mentioned Issues on a single line

[23:52] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/9f5cc43a28

[23:54] <Zoffix> ZOFFLOP: t/spec/S11-modules/nested.t

[23:55] <Geth> ¦ rakudo: 8df8ce09ce | (Zoffix Znet)++ | src/core/Kernel.pm

[23:55] <Geth> ¦ rakudo: Move attribute settage inside the lock

[23:55] <Geth> ¦ rakudo:

[23:55] <Geth> ¦ rakudo: As far as I understand it, if we keep settage outside the lock,

[23:55] <Geth> ¦ rakudo: there's a chance for a race where one thread would just get out of

[23:59] <Geth> ¦ rakudo: the lock, but not yet set the attribute, while another would go into

[23:59] <Geth> ¦ rakudo: the lock test the attribute and re-do the stuff it wasn't meant to.

[23:59] <Geth> ¦ rakudo:

[23:59] <Geth> ¦ rakudo: Moving the attribute assignment inside the locks fixes that.

[23:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8df8ce09ce

[23:59] <Zoffix> .tell jnthn I moved those inside the locks. If that's incorrect let me know: https://github.com/rakudo/rakudo/commit/8df8ce09ce

[23:59] <yoleaux> Zoffix: I'll pass your message to jnthn.

[23:59] <Zoffix> .tell jnthn that was RE this (that bot didn't pass): `jnthn how come `$!signals-by-Str-setup` and `$!signals-setup` are set to `True` *outside* the lock? Isn't there a race that as one thread just enters the lock another one just exited it but hasn't yet set those to True, so the other thread would check it and find it false and duplicate the work?

[23:59] <yoleaux> Zoffix: I'll pass your message to jnthn.

[23:59] <Zoffix> https://github.com/rakudo/rakudo/commit/1f411693bd60b81b018e0c8457d003bebea8374d `

[23:59] <Zoffix> .tell jnthn https://github.com/rakudo/rakudo/commit/1f411693bd60b81b018e0c8457d003bebea8374d

[23:59] <yoleaux> Zoffix: I'll pass your message to jnthn.
