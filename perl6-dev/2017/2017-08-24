[09:46] <lizmat> looks like test-t just got 15% faster again

[09:46] <lizmat> (at least for me)

[12:22] <dogbert17> lizmat: what time did you get?

[12:22] <dogbert17> and where is [Tux]?

[14:06] <dogbert17> Zoffix: can you test the example in RT #131375 on your Win 64?

[14:06] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131375

[14:34] <Zoffix> dogbert17: "Unable to allocate an array of 20000000 elements"   this is on 2017.07

[14:55] <dogbert17> Zoffix: thx, but you need MoarVM 2017.08.1-19-g151a2563

[14:55] <dogbert17> :)

[14:56] <dogbert17> Nine++ made the fix and it works on my 32bit Linux system, it would be nice if we can test it on W64 as well

[14:56] <Zoffix> Ain't got one

[14:56] <dogbert17> what system did you try it on, 32 bit lInux?

[14:57] <Zoffix> Win64. I mean, I don't have bleed Rakudo; only Star. Can't compile on this box; maybe one the weekend will test on my home box

[14:58] <Zoffix> .in 3d check on Win10: https://rt.perl.org/rt3/Public/Bug/Display.html?id=131375

[14:58] <yoleaux> Zoffix: I'll remind you on 27 Aug 2017 14:58Z

[15:04] <dogbert17> thanks a lot

[15:10] <ugexe> the biggest array i could initialize on win10 using that RT example was 16_777_216

[15:11] <ugexe> 1 more element and it blows up

[15:11] <ugexe> https://stackoverflow.com/questions/12596695/why-does-a-float-variable-stop-incrementing-at-16777216-in-c

[15:14] <dogbert17> ugexe: what version of MoarVM do you have?

[15:15] <dogbert17> the fix was made ~two days ago

[15:15] <ugexe> .08

[15:15] <ugexe> the last release

[15:16] <dogbert17> ok, the fix was made after the release

[15:16] <dogbert17> https://github.com/MoarVM/MoarVM/commit/f9b65a9e37979ab39fd1283a65ad4e1351ca6058

[15:17] <ugexe> ah i see. any idea why that wasn't causing issues like the RT in linux?

[15:27] <dogbert17> it did on 32 bit

[15:28] <dogbert17> dunno why it worked on 64 bit Linux but not on W 64

[15:31] <ugexe> definitely fixed on windows too

[15:55] <ugexe> I need a zef command like -to in `zef install -to=...` that acts just like -to but installs all dependencies into the -to location (even if the dependencies are already installed in other visible repos)

[15:56] <ugexe> looking for ideas on the -option=... to use for this

[15:58] <ugexe> remember that it could be mixed with -to, e.g. zef install foo -to=home -option=local

[16:10] * TimToady back from eclipse roadtrip

[16:12] <moritz> TimToady: was it worth it?

[16:13] * moritz saw one in Germany some years ago; it was partially cloudly, so couldn't see the Corona; but still very impressive

[16:17] <TimToady> it was very worth it; we were in western Oregon near Corvallis where it was clear from clouds and wildfire smoke

[16:17] <TimToady> had about 2 minutes of totality, and we could see the corona

[16:18] <TimToady> and Venus, and maybe Mercury

[16:19] <TimToady> ah, no, it was Mars I saw

[16:22] <TimToady> anyway, one can make all sorts of interesting observations, but as people who've been to an eclipse frequently point out, it's primarily a gut-level emotional experience

[16:22] <TimToady> there's something primal about it

[16:23] <TimToady> but also one just invests so much emotional energy in getting to the right place at the right time, with extra gasoline, all sorts of emergency supplies, etc.

[16:23] <TimToady> when we got up at 3am in Medford, we still didn't know whether we'd be in eastern or western Oregon

[16:24] <TimToady> western was closer, and the weather was supposed to be good both places, so we started up toward Salem, planning to go east into the mountains from there

[16:25] <TimToady> but as the sun started coming up, we realized that there were tremendous amounts of smoke from forest fires where we were planning to go, so we headed west instead

[16:25] <TimToady> and got out from under the smoke in time to find a little village called Pedee

[16:25] <TimToady> where some kind folks had opened up their church so we could have a bathroom

[16:27] <TimToady> one of the cooler things was watching the jet planes curling in to follow the path of the eclipse

[16:29] <Zoffix> :D

[16:34] <TimToady> anyway, I can now check that off my bucket list, or could if I had a bucket list :)

[16:46] * Zoffix adds it to the bucket list :)

[16:47] <Zoffix> The sky barelly darkened here due to it, but it had this surreal quality to it.

[16:48] <TimToady> now imagine that surrealness just cranking up over an hour, and getting faster and faster, such that you can see it getting darker every second

[16:48] <[Coke]> I can compile win64 if someone needs something.

[16:49] <TimToady> and you can see the shadows moving on the ground of convection around the shadow

[16:51] <TimToady> and the wind changes as the umbra passes over

[16:51] <Zoffix> :D

[16:51] <TimToady> but there's nothing really to compare to just seeing a hole in the sky where there shouldn't be one

[16:53] <TimToady> I can see why people get addicted to it

[16:59] <[Coke]> btw, getting this warning building on MSVS17:

[16:59] <[Coke]> LINK : warning LNK4044: unrecognized option '/LC:\Users\User\rakudo\install\bin'; ignored

[16:59] <[Coke]> LINK : warning LNK4044: unrecognized option '/lmoar'; ignored

[17:00] <[Coke]> (the build is suprisingly fast, given that I'm doing it on windows inside a VM)

[17:02] <[Coke]> dogbert17: outputs "starting" then 'array initialized.' then exits.

[17:02] <[Coke]> This is Rakudo version 2017.08-5-g593fa5f87 built on MoarVM version 2017.08.1-19-g151a2563

[17:02] <[Coke]> implementing Perl 6.c.

[17:05] <[Coke]> dogbert17: 1 billion is too many, though.

[17:06] <[Coke]> dogbert17: 100 million : Starting, followed by a moarvm panic

[17:16] <Geth> ¬¶ roast: cfa23079e3 | (Zoffix Znet)++ (committed using GitHub Web editor) | S05-grammar/methods.t

[17:16] <Geth> ¬¶ roast: Fix typo in test description

[17:16] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/cfa23079e3

[17:52] <dogbert11> [Coke]: thx for testing, 100 million takes quite a bit of memory, how much do you have?

[17:52] <samcv> TimToady, i have a question for you about regex and hoping you know something about this

[17:52] <samcv> m: my $a = 'aaaaaab'; 'a' x 999999 ~ 'b' ~~ /$a/; say now - INIT now

[17:52] <camelia> rakudo-moar 593fa5: OUTPUT: ¬´7.31652197?¬ª

[17:53] <samcv> m: 'a' x 999999 ~ 'b' ~~ /aaaaaab/; say now - INIT now

[17:53] <camelia> rakudo-moar 593fa5: OUTPUT: ¬´0.00505117?¬ª

[17:53] <samcv> it's 150x different the amount of time it takes from literally typing in the value or if it's in a variable. and that's kind of unacceptable. so i'm wondering how we can fix this

[17:56] <Geth> ¬¶ roast: 1e4fd21486 | (Samantha McVey)++ | S03-operators/repeat.t

[17:56] <Geth> ¬¶ roast: Add tests for `x` operator to ensure normalization retained

[17:56] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/1e4fd21486

[18:24] <Geth> ¬¶ 6.d-prep: 8236870838 | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/FEATURES.md

[18:24] <Geth> ¬¶ 6.d-prep: Add to TODO: Consistify Naming of `$*INITTIME`

[18:24] <Geth> ¬¶ 6.d-prep:

[18:24] <Geth> ¬¶ 6.d-prep: - https://github.com/perl6/roast/issues/296

[18:24] <Geth> ¬¶ 6.d-prep: - https://github.com/perl6/doc/issues/1462

[18:24] <Geth> ¬¶ 6.d-prep: - https://github.com/perl6/doc/issues/510

[18:24] <Geth> ¬¶ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/8236870838

[18:36] <perlpilot> m: my $a = rx/aaaaaab/; 'a' x 999999 ~ 'b' ~~ /$a/; say now - INIT now

[18:36] <camelia> rakudo-moar 593fa5: OUTPUT: ¬´4.2885446?¬ª

[18:36] <perlpilot> m: my $a = rx/aaaaaab/; 'a' x 999999 ~ 'b' ~~ $a; say now - INIT now

[18:36] <camelia> rakudo-moar 593fa5: OUTPUT: ¬´0.0068104?¬ª

[18:38] <perlpilot> samcv: So ... I agree with you, but the user does have other options  :)

[18:40] <Geth> ¬¶ 6.d-prep: 594b10032a | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/FEATURES.md

[18:40] <Geth> ¬¶ 6.d-prep: Better new name for $*INITTIME

[18:40] <Geth> ¬¶ 6.d-prep:

[18:40] <Geth> ¬¶ 6.d-prep: per https://github.com/perl6/roast/issues/296#issuecomment-324719710

[18:40] <Geth> ¬¶ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/594b10032a

[18:54] <samcv> perlpilot, well there's something that is taking such a long time when it's in a variable, and it shouldn't take that long

[18:54] <samcv> when it completes 150x faster if you put the literal word there or use `index` or `nqp::index`

[18:55] <samcv> i mean the regex does use nqp::index but before that it does ??? idk what it does but it takes 149x longer than just running nqp::index

[18:55] <samcv> what good is my KMP algorithm if it spends 149x of its time doing something else?

[18:58] <samcv> also i wonder if i can implement the Knuth-morris-pratt algorithm backwards for MVM_string_index_from_end it must be possible. just process the needle backwards into the jump table, and then start at the end...

[18:58] <samcv> though i'm not sure how much that is used

[18:59] <samcv> yeah i don't see it used in the nqp source other that having the op added

[19:00] <Geth> ¬¶ roast: eaec1961ef | (Samantha McVey)++ | S03-operators/repeat.t

[19:00] <Geth> ¬¶ roast: Fix todo count for JVM in repeat file

[19:00] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/eaec1961ef

[19:05] <samcv> wow the unicode conference is expensive $995 for the conference only, or 1495 for conference and tutorial. 100 dollar discount for unicode members

[19:06] <samcv> it's located right by where i live right now though. conference is October 16-18

[20:23] <AlexDaniel> and another 100 dollar discount if you pay by September 1st :)

[21:08] <b2gills> Rakudo is currently broken for me, ‚ÄúMissing or wrong version of dependency '/opt/rakudo/bin/../share/nqp/lib/MAST/Nodes.nqp' (from 'src/Perl6/Pod.nqp‚Äù

[21:15] <b2gills> I use this to build Rakudo: https://gist.github.com/b2gills/34bc96f5e805df9299f464dc6e703148

[21:20] <Geth> ¬¶ specs: Xliff++ created pull request #122: Update S27-perl-culture-draft.pod6

[21:20] <Geth> ¬¶ specs: review: https://github.com/perl6/specs/pull/122

[21:24] <Geth> ¬¶ specs: baec197a05 | Xliff++ (committed using GitHub Web editor) | S27-perl-culture-draft.pod6

[21:24] <Geth> ¬¶ specs: Update S27-perl-culture-draft.pod6

[21:24] <Geth> ¬¶ specs:

[21:24] <Geth> ¬¶ specs: Minor typo fix.

[21:24] <Geth> ¬¶ specs: review: https://github.com/perl6/specs/commit/baec197a05

[21:24] <Geth> ¬¶ specs: cdca1ad1a9 | (Brad Gilbert)++ (committed using GitHub Web editor) | S27-perl-culture-draft.pod6

[21:24] <Geth> ¬¶ specs: Merge pull request #122 from Xliff/patch-1

[21:24] <Geth> ¬¶ specs:

[21:24] <Geth> ¬¶ specs: Typo in S27-draft Lost -> Lots

[21:24] <Geth> ¬¶ specs: review: https://github.com/perl6/specs/commit/cdca1ad1a9

[22:44] <samcv> b2gills, have you tried recompiling nqp then recompiling rakudo

[23:40] <b2gills> What managed to fix it is basically ‚Äúcd ~/Program/Perl6/rakudo/nqp; git checkout master; git pull; perl Configure.pl --prefix=/opt/rakudo --gen-moar; make install; cd ..; git pull; Configure.pl --prefix=/opt/rakudo; make install

[23:41] <b2gills> I did do a lot of things before that, but I don't think they changed anything
