[09:42] <lizmat> Files=1233, Tests=75966, 326 wallclock secs (14.89 usr  5.26 sys + 2258.54 cusr 226.08 csys = 2504.77 CPU)

[09:43] <lizmat> moritz: looking at the P6A schedule, isn't it tradition to only go up to 24, and not include 25 ?

[09:46] <moritz> lizmat: I think we had a 25th once

[09:46] <lizmat> well, last year we had 2 on the 24th  :-)

[09:46] <moritz> and I'd rather have a bonus day than reject an eager contributor

[09:48] <lizmat> or I could take out mine and publish it as a separate blog post

[09:51] <moritz> no, it sounds like a good post for the 24th

[10:02] <|Tux|> Rakudo version 2017.11-120-g3405001da - MoarVM version 2017.11-43-g93a77dc16

[10:02] <|Tux|> csv-test-xs-20      0.434 -  0.500

[10:02] <|Tux|> csv-ip5xs           1.058 -  1.074

[10:02] <|Tux|> test-t --race       1.124 -  1.206

[10:02] <|Tux|> test-t              2.898 -  2.912

[10:02] <|Tux|> test               11.270 - 11.306

[10:02] <|Tux|> csv-parser         11.598 - 11.847

[10:02] <|Tux|> csv-ip5xs-20       12.621 - 12.683

[10:02] <|Tux|> test-t-20 --race   17.288 - 17.810

[10:02] <|Tux|> test-t-20          52.798 - 52.899

[12:18] <tbrowder> .tell AlexDaniel iâ€™m discovering more pod issues i donâ€™t believe are documented. i can put bandages on some of it in Pod.nqp, but grammar i think will have to be changed for other issues. i will keep plugging on triaging in Pod.nqp for now.

[12:18] <yoleaux> tbrowder: I'll pass your message to AlexDaniel.

[12:18] <yoleaux> 13 Dec 2017 22:07Z <jnthn> tbrowder: No, though there is a --rxtrace option that you can pass to the compiler

[12:19] <AlexDaniel> .

[12:19] <yoleaux> 12:18Z <tbrowder> AlexDaniel: iâ€™m discovering more pod issues i donâ€™t believe are documented. i can put bandages on some of it in Pod.nqp, but grammar i think will have to be changed for other issues. i will keep plugging on triaging in Pod.nqp for now.

[12:21] <DrForr> Wonderful, so the data structure will change before I finish traversing it :)

[12:21] <AlexDaniel> \o/

[12:21] <AlexDaniel> :)

[12:23] <tbrowder> nothing should change for users, just some things are NYI or give unexpected results if used according to S26.

[12:28] <tbrowder> such things as the pod config continuation = donâ€™t seem to work as i expect, and nested pod comment blocks in tables donâ€™t work. also so more LTA msgs, etc.

[12:33] <DrForr> Oh. I was planning to finish the rewrite of Pod::To::{what I'm now calling HTMLFragment} over the weekend.

[12:34] <DrForr> Pod::TreeWalker uses events, which is great if you're simply walking trees, but if you need to know how the individual objects are linked it's a bit suboptimal.

[12:35] <tbrowder> i doubt many users will find existing problems are show-stoppers for most uses.  pod renderers may have to change later. and no deep changes will come from me any time soon.

[12:37] <DrForr> The problem I was thinking about last night on the way home from Star Wars was this:

[12:37] <tbrowder> DrForr: most of what iâ€™ve been seeing is in tables, specifically config stuff, and comment handling.

[12:39] <DrForr> =head1 foo # creates Pod::Block::Nested( [Pod::Heading( [Pod::Block::Para( ['foo'])])]) and I don't want the paragraph to show up in the HTML.

[12:39] <DrForr> tbrowder: Good to know; I was going to rework table handling anyway.

[12:40] <DrForr> If I'm dealing with an event-based parser, then I'm going to get open-Nested, open-heading, open-para, text 'foo', close-para, ..

[12:41] <DrForr> I can certainly tell the text 'foo' code to look back in the tree, and if it's <h1><p>, then remove the traiing <p>, but the close-para is harder to deal with.

[12:42] <tbrowder> first problem that would affect you in tables is caption. right now best practice is use form with <>, e.g.,  :caption<Some Title> and content of caption should be very usable.

[12:43] <DrForr> Preprocessing the pod to remove the redundant <p/> layer is possible too, but I'd prefer to be able to let the user skip it, and event-based isn't going to let me do that without tacking on a .parent attribute, and that starts to verge upon circular.

[12:43] <tbrowder> ergh...

[12:43] <DrForr> tbrowder: Having captioned tables would be wonderful for LaTeX renderers, as there's a ready \longtable{} macro that supports it.

[12:44] <DrForr> So what I thought I'd do is turn it into a list of {node -> Pod::Item.new(), parent => 23, sibling => 27} tuples as an array.

[12:45] <tbrowder> the caption property is in master now, just use the <> form for pod source and caption content should be usable.

[12:46] <DrForr> so conditions like that become 'if @pod[$node<parent>]<node> ~~ Pod::Heading { skip }'

[12:47] <DrForr> One catch is that siblings require pregenerating the entire list.

[12:48] <DrForr> (or at least until you find the next sibling of a node, or the closing event.)

[12:48] <tbrowder> time for a coffee break...iâ€™m not thinking html right now...clutters my mind...

[12:49] <tbrowder> i would love to see a native parent property on the pod nodes.

[12:50] <DrForr> I can certainly generate it, and it's useful in the tree form. I do stuff in Perl6::Parser that spits out an array of tokens laced with pointers to next and parent fo rwalking.

[12:52] <tbrowder> wouldnâ€™t the parent property on Pod::Block be useful, ease your parser work?

[12:52] <DrForr> It's also useful to link nodes w/o parents back to themselves so that you don't have to allow parents to be undef, and can statically type it.

[12:53] <DrForr> tbrowder: yeah, it would, which is why I'm probably going to drop the Pod::TreeWalker module. I can generate my own events easily enough, and if I put the tree in an attribute then it's easier for other methods in the class to play with it.

[12:57] <DrForr> Also, looking at the internas of Pod::TreeWalker it munges the tree on its own, and I'd prefer to let subclasses do the munging on their own, or at least be able to avoid it via subclassing.

[13:01] <DrForr> I.E. in my case the simple HTML I'm generating doesn't need the <p/> of <h1><p>foo</p></h1>, but someone else that knows more HTML might want to generate <div>foo</div> for CSS reasons, and if I filter out the para, then I've made them do more work.

[14:35] <Geth> Â¦ rakudo: 0a2e5172d8 | (Elizabeth Mattijsen)++ | 3 files

[14:35] <Geth> Â¦ rakudo: Replace postfix ++/-- with prefix where possible

[14:35] <Geth> Â¦ rakudo:

[14:35] <Geth> Â¦ rakudo: - prefix is about 10% faster than postfix in nqp

[14:35] <Geth> Â¦ rakudo: - not sure how this works out in rakudo itself

[14:35] <Geth> Â¦ rakudo: - but every little bit helps

[14:35] <Geth> Â¦ rakudo: - this may help unoptimizable code best

[14:35] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0a2e5172d8

[14:36] <Morfent> huh

[14:37] <Morfent> didn't know that wasn't just a c thing

[14:38] <lizmat> Morfent:  postfix needs to preserve the value of before the increment, prefix doesn't

[14:38] <lizmat> that's in every language

[14:39] <Morfent> ah

[14:46] <Zoffix> Reminder: release is in 2 days and we still have 3 release blockers, if anyone can figure out how to fix them: https://github.com/rakudo/rakudo/issues?q=is%3Aissue+is%3Aopen+label%3A%22%E2%9A%A0+blocker+%E2%9A%A0%22

[14:47] <lizmat> ah?  the last time I saw this, we had 0 so I'm unpleasantly surprised  :-(

[14:51] <AlexDaniel`> well, the last two were submitted 2 and 3 days ago

[14:51] <AlexDaniel`> the problem with big endian systems is a bit more complicated

[14:51] <AlexDaniel`> I didn't really manage to reproduce it in qemu

[14:51] <AlexDaniel`> I'm assuming the submitter is able to reproduce it, but they can't bisect it :S

[14:52] <AlexDaniel`> not sure how to make that thing move

[14:53] <AlexDaniel`> also, today I'll run the toaster again, so maybe something will come out of it also

[14:54] <AlexDaniel`> Zoffix++ for reminders (I had a really busy week so things were kinda slipping through the cracks)

[14:54] <lizmat> FWIW, I'm seeing more flaky tests

[14:54] * lizmat runs a spectest with MVM_JIT_EXPR_DISABLE=1

[14:58] * AlexDaniel` will have a lot more free time starting this January, so hopefully more time will be put into the release process

[15:04] <DrForr> AlexDaniel`: Talkie toaster? :)

[15:38] <Geth> Â¦ rakudo: 1fb5189567 | (Elizabeth Mattijsen)++ | 10 files

[15:38] <Geth> Â¦ rakudo: Replace postfix ++/-- with prefix where possible

[15:38] <Geth> Â¦ rakudo:

[15:39] <Geth> Â¦ rakudo: - but this time in HLL land

[15:39] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1fb5189567

[17:50] <TimToady> hmm, coulda sworn we had the postfix-to-prefix optimization in already when we see sink context, but I don't see it offhand

[17:53] <AlexDaniel> bisect: old=2017.11 https://gist.githubusercontent.com/AlexDaniel/f32b24d06fbad86d5261db4094c80058/raw/bbe41510cf7620a0ea4371e31eb4fedf79c89a69/GH%25231312.p6

[17:53] <bisectable6> AlexDaniel, Successfully fetched the code from the provided URL.

[17:53] <bisectable6> AlexDaniel, Bisecting by exit code (old=2017.11 new=1fb5189). Old exit code: 0

[17:54] <TimToady> and RAKUDO_OPTIMIZER_DEBUG seems to indicate the same

[17:54] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/6180dcb75e204be85b019cc64a23c8fb

[17:54] <bisectable6> AlexDaniel, (2017-11-25) https://github.com/rakudo/rakudo/commit/aa3c2c5b04224ec1cef9d27680de9251a5d32542

[17:56] <TimToady> lizmat: you shouldn't have to change postfix to prefix in core/ if our optimizer was working right, but it doesn't seem to know that one

[18:00] <lizmat> I'll gladly revert when it *is* handled by the optimizer  :-)

[18:02] <AlexDaniel> lizmat: speaking of reverts, what's up with https://github.com/rakudo/rakudo/issues/1312 ?

[18:03] <lizmat> AlexDaniel: not sure...

[18:14] <AlexDaniel> hmmm can't reproduce GH#1308 here :S

[18:14] <synopsebot> GH#1308 [open]: https://github.com/rakudo/rakudo/issues/1308 [SEGV][severe][âš  blocker âš ] Frequent-ish SEQV in Perl 5 integration tests

[18:16] <lizmat> AlexDaniel: segfaults almost always for me

[18:16] <lizmat> s/almost//

[18:17] <AlexDaniel> lizmat: within the stresstest or when run individually with fudgeandrun ?

[18:18] <lizmat> perl6 t/spec/S01-perl-5-integration/basic.rakudo.moar

[18:21] <AlexDaniel> hmâ€¦ doesn't segfault here either way :S

[18:21] <lizmat> perhaps it's an OS dependent thing, or a timing thing

[18:51] <Geth> Â¦ rakudo: 74a13ae15b | usev6++ | src/vm/jvm/runtime/org/perl6/rakudo/RakOps.java

[18:51] <Geth> Â¦ rakudo: [jvm] Check for null in p6definite

[18:51] <Geth> Â¦ rakudo:

[18:51] <Geth> Â¦ rakudo: This mirrors the behaviour of nqp::isconcrete (which returns

[18:51] <Geth> Â¦ rakudo: 0 or 1, though) and makes the recently added test for RT #126972 pass.

[18:51] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/74a13ae15b

[18:52] <synopsebot> RT#126972 [resolved]: https://rt.perl.org/Ticket/Display.html?id=126972 [LTA] error mesage about getlexrelcaller (/a/)

[18:57] <Geth> Â¦ rakudo: d98ccea278 | TimToady++ | src/Perl6/Actions.nqp

[18:57] <Geth> Â¦ rakudo: optimize postfix incr to prefix when unwanted

[18:57] <Geth> Â¦ rakudo:

[18:57] <Geth> Â¦ rakudo: Somehow we never managed to do this obvious optimization even after we got

[18:57] <Geth> Â¦ rakudo: explicit knowledge of sink context from all the wanted/unwanted work.

[18:57] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d98ccea278

[19:07] <Geth> Â¦ roast: 92cbeac338 | (Zoffix Znet)++ (committed using GitHub Web editor) | MISC/bug-coverage-stress.t

[19:07] <Geth> Â¦ roast: Fix failing stresstest

[19:07] <Geth> Â¦ roast:

[19:07] <Geth> Â¦ roast: Fixes release blocker https://github.com/rakudo/rakudo/issues/1312

[19:07] <Geth> Â¦ roast:

[19:07] <Geth> Â¦ roast: Implementation[^1] of proper Supply.list caused our test Supply be evaluated eagerly,

[19:07] <Geth> Â¦ roast: but since `done` is not present, we hung.

[19:07] <Geth> Â¦ roast:

[19:07] <Geth> Â¦ roast: Change `.list` call to `.Seq` to restore old behaviour in the test. I double-checked on

[19:07] <Geth> Â¦ roast: 59bfa5ab37~10 that this change still covers the RT#132343 bug, while passing on HEAD.

[19:07] <Geth> Â¦ roast:

[19:07] <synopsebot> RT#132343 [resolved]: https://rt.perl.org/Ticket/Display.html?id=132343 [REGRESSION] better-sched and other async improvement ecosystem fallout

[19:07] <Geth> Â¦ roast: https://github.com/rakudo/rakudo/commit/aa3c2c5b04224ec1cef9d27680de9251a5d32542

[19:07] <Geth> Â¦ roast: review: https://github.com/perl6/roast/commit/92cbeac338

[19:12] <AlexDaniel> ðŸ¤— Zoffix++

[19:13] <raschipi> lizmat: now you can revert your change ðŸ˜„

[19:21] <AlexDaniel> huggable: star

[19:21] <huggable> AlexDaniel, Estimated Rakudo Star releases for 2017: .01, .04, .07 & .10

[19:42] <Geth> Â¦ rakudo: 370073fcda | (Elizabeth Mattijsen)++ | 10 files

[19:42] <Geth> Â¦ rakudo: Revert "Replace postfix ++/-- with prefix where possible"

[19:42] <Geth> Â¦ rakudo:

[19:42] <Geth> Â¦ rakudo: This reverts commit 1fb5189567bc9255aec86b45593d21baf38fcee5.

[19:42] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/370073fcda

[20:02] <DrForr> Pod::Table isn't broken down as far as it could be in Pod::TreeWalker. Another reason to bypass it.. I think I'm going to let it pass its last few tests, then write my own tree generator.

[20:03] <DrForr> Not discrediting autarch's work at all, I'm sure life intruded; it happens to us all.

[21:00] <dogbert17> ZOFFLOP: t/spec/S32-io/indir.t

[23:06] <AlexDaniel> OK toaster results are ready

[23:07] <timotimo> awesome

[23:08] <AlexDaniel> 8 modules unsucced but most of them are false positives. I'll investigate later after I get some sleep

[23:08] <AlexDaniel> releasable6: next

[23:08] <releasable6> AlexDaniel, Next release in â‰ˆ19 hours. No blockers. 0 out of 125 commits logged

[23:08] <releasable6> AlexDaniel, Details: https://gist.github.com/d1d7a99c20f6dac771488768e90e5953

[23:09] <AlexDaniel> https://github.com/rakudo/rakudo/issues?q=is%3Aopen+is%3Aissue+label%3A%22%E2%9A%A0+blocker+%E2%9A%A0%22

[23:10] <AlexDaniel> releasable6 doesn't yet know about rakudo blockers because https://github.com/zoffixznet/r6/issues/11

[23:11] <Zoffix> Geth: help

[23:11] <Geth> Â¦ roast: 92cbeac338 | (Zoffix Znet)++ (committed using GitHub Web editor) | MISC/bug-coverage-stress.t

[23:11] <Geth> Â¦ roast: Fix failing stresstest

[23:11] <Geth> Â¦ roast:

[23:11] <Geth> Â¦ roast: Fixes release blocker https://github.com/rakudo/rakudo/issues/1312

[23:11] <Geth> Â¦ roast:

[23:11] <Geth> Â¦ roast: Implementation[^1] of proper Supply.list caused our test Supply be evaluated eagerly,

[23:11] <Geth> Â¦ roast: but since `done` is not present, we hung.

[23:11] <Geth> Â¦ roast:

[23:11] <Geth> Â¦ roast: Change `.list` call to `.Seq` to restore old behaviour in the test. I double-checked on

[23:11] <Geth> Â¦ roast: 59bfa5ab37~10 that this change still covers the RT#132343 bug, while passing on HEAD.

[23:11] <Geth> Â¦ roast:

[23:11] <synopsebot> RT#132343 [resolved]: https://rt.perl.org/Ticket/Display.html?id=132343 [REGRESSION] better-sched and other async improvement ecosystem fallout

[23:11] <Geth> Â¦ roast: https://github.com/rakudo/rakudo/commit/aa3c2c5b04224ec1cef9d27680de9251a5d32542

[23:11] <Geth> Â¦ roast: review: https://github.com/perl6/roast/commit/92cbeac338

[23:11] <Zoffix> :/

[23:11] <Zoffix> Geth: help

[23:11] <Zoffix> Geth: ver https://github.com/rakudo/rakudo/commit/83eac0e42352f43267100bdbbe1221091f6119df

[23:11] * AlexDaniel drops to bed

[23:12] <Zoffix> meow

[23:12] <Zoffix> Something's wrong with Geth. It don't see any messages

[23:13] <Zoffix> Geth: help

[23:13] <Zoffix> stupid robot

[23:37] <Zoffix> dogbert17: yo. Teach me to debug segfaults.

[23:39] <MasterDuke> your MoarVM is built with --debug=3?

[23:40] <Zoffix> Yeah

[23:41] <Zoffix> I guess `bt full` is it, but it don't tell me much.

[23:41] <MasterDuke> then i just use valgrind and gdb, usually point somewhere relevant

[23:42] <Zoffix> Though I've just bruteforced the offending commit manually :)

[23:42] <MasterDuke> there's also --asan, but i've never had much luck with that

[23:42] <MasterDuke> oh, and --valgrind can be helpful

[23:43] <Zoffix> Thanks.

[23:44] <Zoffix> hm... this stuff might be above my head...

[23:44] <Zoffix> timotimo: you around?

[23:45] <Zoffix> OTOH, I'm gonna play with the code first. Maybe I'll come upon the fix by chance :}

[23:46] <MasterDuke> heh, that's how i start most of my debugging

[23:49] <timotimo> hi there, Zoffix

[23:49] <timotimo> what's up?

[23:49] <timotimo> oh, segfaults, that's fun

[23:50] <Zoffix> :) I'm gonna try to fix it on my own first :)

[23:50] <timotimo> OK
