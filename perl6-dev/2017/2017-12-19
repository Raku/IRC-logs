[05:51] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1321: Add argument to ambiguous call exception message

[05:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1321

[05:51] <synopsebot> RAKUDO#1321 [open]: https://github.com/rakudo/rakudo/pull/1321 Add argument to ambiguous call exception message

[08:37] <AlexDaniel> lizmat: “wiki page” link does not seem to point to the wiki page :)

[08:38] * lizmat doublechecks

[08:38] <lizmat> ah...  indeed

[08:39] <lizmat> fixed # AlexDaniel++

[08:40] <lizmat> mustvebeen a copypasto

[08:41] <AlexDaniel> oh wow… 60 tickets…

[08:41] <AlexDaniel> (Zoffix, everyone)++

[09:04] <lizmat> Files=1233, Tests=75972, 341 wallclock secs (15.17 usr  5.34 sys + 2315.84 cusr 236.15 csys = 2572.50 CPU)

[09:32] <AlexDani`> quotable6: "wallclock secs"

[09:32] <quotable6> AlexDani`, OK, working on it! This may take up to three minutes (4469197 messages to process)

[09:33] <quotable6> AlexDani`, https://gist.github.com/3cbb540226edcfecffd4aa4e77c44af4

[09:36] <AlexDaniel> I guess it needs to learn to filter by sender nickname

[11:07] <|Tux|> Rakudo version 2017.11-131-g3f90f663b - MoarVM version 2017.11-48-g0b9f8090a

[11:07] <|Tux|> csv-test-xs-20      0.454 -  0.496

[11:07] <|Tux|> csv-ip5xs           1.057 -  1.067

[11:07] <|Tux|> test-t --race       1.148 -  1.200

[11:07] <|Tux|> test-t              2.888 -  2.903

[11:07] <|Tux|> test               11.660 - 11.897

[11:07] <|Tux|> csv-parser         12.101 - 12.129

[11:07] <|Tux|> csv-ip5xs-20       12.923 - 12.931

[11:07] <|Tux|> test-t-20 --race   17.637 - 18.035

[11:07] <|Tux|> test-t-20          52.219 - 53.232

[11:17] <stmuk> .

[11:18] <stmuk> Did anyone CALL 415-349-566 ? :|

[15:17] <Zoffix> .in 7d If anyone has any ideas for how to proceed on #1289 please comment

[15:17] <yoleaux> Zoffix: I'll remind you on 26 Dec 2017 15:17Z

[15:17] <Zoffix> .in 7d If anyone has any ideas for how to proceed on R#1289 please comment

[15:17] <yoleaux> Zoffix: I'll remind you on 26 Dec 2017 15:17Z

[15:17] <synopsebot> R#1289 [open]: https://github.com/rakudo/rakudo/issues/1289 [severe] [6.d BLOCKER] Implement a Way to Know Caller's Language

[15:17] <Zoffix> .in 14d If anyone has any ideas for how to proceed on R#1289 please comment

[15:17] <yoleaux> Zoffix: I'll remind you on 2 Jan 2018 15:17Z

[15:17] <Zoffix> .in 21d If anyone has any ideas for how to proceed on R#1289 please comment

[15:17] <yoleaux> Zoffix: I'll remind you on 9 Jan 2018 15:17Z

[18:49] <MasterDuke> i thought .gist cut off arrays at some smallish number?

[18:56] <Zoffix> MasterDuke: yeah, supposed to cut at 100. Something got busted :o

[18:56] <Zoffix> bisect: [1..1000].gist.words.elems.say

[18:56] <bisectable6> Zoffix, On both starting points (old=2015.12 new=3f90f66) the exit code is 0 and the output is identical as well

[18:56] <bisectable6> Zoffix, Output on both points: «1000␤»

[18:56] <Zoffix> huh

[18:57] <geekosaur> or just NYI

[18:57] <MasterDuke> c: all [1..1000].gist.words.elems.say

[18:57] <Zoffix> No, it was definitely Y

[18:57] <Zoffix> m: [1..1000].List.gist.words.elems.say

[18:57] <evalable6> Zoffix, rakudo-moar 3f90f663b: OUTPUT: «101␤»

[18:57] <committable6> MasterDuke, https://gist.github.com/6b21d82bd036d88a820911ad9086b4f8

[18:57] <Zoffix> s: [1..1000], 'gist', \()

[18:57] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/4fca94743/src/core/Array.pm#L1191

[18:58] <Zoffix> wow hard to believe this sat there like that unnoticed

[18:59] * Zoffix hackety hacks

[18:59] <MasterDuke> heh, i was converting my PR to use .gist, but the output wasn't getting any smaller

[19:03] <Zoffix> m: my $h = Set.new: 1...1000; $h<42> = 42

[19:03] <evalable6> Zoffix, rakudo-moar 3f90f663b: OUTPUT: «(exit code 1) Cannot modify an immutable Set (set(1 10 100 1000 10...)␤  in block <unit> at /tmp/hINA8NGcns line 1␤␤»

[19:03] <Zoffix> FWIW in ^ that error I see we also chop up long .gist()s: https://github.com/rakudo/rakudo/commit/497e0582e6c64ccc04b2e9636a0bdd44026f3575

[19:06] <MasterDuke> the gist of a capture doesn't truncate Lists

[19:06] <Geth> ¦ star: 2a3cebc5ad | (Steve Mynott)++ | docs/cheatsheet.txt

[19:06] <Geth> ¦ star: update to Diwalish version from mu repo

[19:06] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/2a3cebc5ad

[19:07] <MasterDuke> m: my @a = 1..1000; sub a(|c) { say c.gist }; a(@a.Array, <1>); say @a.List

[19:07] <evalable6> MasterDuke, rakudo-moar 3f90f663b: OUTPUT: «\([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, …»

[19:07] <evalable6> MasterDuke, Full output: https://gist.github.com/3b919475bcddd139e69586eba991acd0

[19:07] <MasterDuke> m: my @a = 1..1000; sub a(|c) { say c.gist }; a(@a.List, <1>); say @a.List

[19:07] <evalable6> MasterDuke, rakudo-moar 3f90f663b: OUTPUT: «\((1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, …»

[19:07] <evalable6> MasterDuke, Full output: https://gist.github.com/82c1ac2507280609120955073912d178

[19:07] <stmuk> ^^^ does that need use v6d-PREVIEW?

[19:08] <Zoffix> s: \((1..1000).List), 'gist'

[19:08] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/4fca94743/src/core/Mu.pm#L605

[19:09] <Zoffix> Right, 'cause default .gist is .perl

[19:09] <Zoffix> Reminds me of RT#123016

[19:09] <synopsebot> RT#123016 [open]: https://rt.perl.org/Ticket/Display.html?id=123016 [BUG] When overriding .gist, it's all or nothing

[19:10] <MasterDuke> ah, right

[19:10] <MasterDuke> annoying

[19:12] <Zoffix> m: sub (|c) { (｢\(｣ ~ c.List.gist ~ c.Hash.gist ~ ｢)｣).say }((1..1000).List, :meows)

[19:12] <evalable6> Zoffix, rakudo-moar 3f90f663b: OUTPUT: «\(((1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32…»

[19:12] <evalable6> Zoffix, Full output: https://gist.github.com/e70a25cc73f783eeda9c8aac8bf502a0

[19:13] <MasterDuke> i could take the easy way out and just truncate the Capture's gist at some number of chars

[19:14] <Zoffix> It'll blow up with lazy iterables

[19:14] <Zoffix> m: sub (|c) { c.gist.substr(0, 100).say }((1..*).List)

[19:14] <evalable6> Zoffix, rakudo-moar 3f90f663b: OUTPUT: «(exit code 1) Cannot .elems a lazy list␤  in sub  at /tmp/YN0XGCx0WF line 1␤  in block <unit> at /tmp/YN0XGCx0WF line 1␤␤»

[19:14] <Zoffix> ZOFFLOP: t/spec/integration/advent2009-day18.t

[19:15] <Zoffix> ZOFVM: Files=1287, Tests=152969, 153 wallclock secs (20.42 usr  3.21 sys + 3284.19 cusr 171.44 csys = 3479.26 CPU)

[19:18] <MasterDuke> of course, that's why i started pulling in the X::Multi::NoMatch implementation. now why did i stop doing that...?

[19:32] <Zoffix> wonder what .gist of shaped arrays should be

[19:32] <Zoffix> I made a patch to limit stuff to 100 els, but if you nest stuff a lot you still get a ton of output.

[19:34] <Zoffix> hm, OTOH looks like even 3 dims is slow as hell

[19:34] <Zoffix> m: my $n := (1..150) xx 150; my @a[150;150;150] = $n xx 150; say @a

[19:34] <evalable6> Zoffix, rakudo-moar 3f90f663b: OUTPUT: «(signal SIGHUP) «timed out after 10 seconds»»

[19:36] <Zoffix> m: <leave-without-limit  limit-all-dims-to-100>.pick.say

[19:36] <evalable6> Zoffix, rakudo-moar 3f90f663b: OUTPUT: «leave-without-limit␤»

[19:36] <Zoffix> OK

[19:36] <Zoffix> For records, limiter patch is this: https://gist.github.com/zoffixznet/94c6f19f79372cd7bdc56d2646e374ea

[19:43] <Zoffix> ZOFVM: Files=1287, Tests=152976, 150 wallclock secs (20.71 usr  3.34 sys + 3231.53 cusr 166.12 csys = 3421.70 CPU)

[19:47] <Geth> ¦ rakudo: 5b71d902c3 | (Zoffix Znet)++ | 2 files

[19:47] <Geth> ¦ rakudo: Make Array.gist limit output to 100 els

[19:47] <Geth> ¦ rakudo:

[19:47] <Geth> ¦ rakudo: - Same as is done for List.gist and Map.gist

[19:47] <Geth> ¦ rakudo: - I also tried giving the same treatment[^1] to shaped arrays,

[19:47] <Geth> ¦ rakudo:     but due to their dimentional nature the output is still

[19:47] <Geth> ¦ rakudo:     huge, so there's little benefit from adding such limiters, as

[19:47] <Geth> ¦ rakudo:     far as output size is concerned, while also not giving a good

[19:47] <Geth> ¦ rakudo:     picture to the user (e.g. cutting off entirely ALL elements

[19:47] <Geth> ¦ rakudo:     of top level 101, for example).

[19:48] <Geth> ¦ rakudo:

[19:48] <Geth> ¦ rakudo: https://gist.github.com/zoffixznet/94c6f19f79372cd7bdc56d2646e374ea

[19:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5b71d902c3

[19:48] <Geth> ¦ roast: 399367ccbf | (Zoffix Znet)++ | S02-types/array.t

[19:48] <Geth> ¦ roast: Test Array.gist limits output to 100 els

[19:48] <Geth> ¦ roast:

[19:48] <Geth> ¦ roast: Rakudo impl: https://github.com/rakudo/rakudo/commit/5b71d902c3

[19:48] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/399367ccbf

[19:54] <Geth> ¦ rakudo: 334b87226d | (Zoffix Znet)++ | 2 files

[19:54] <Geth> ¦ rakudo: Revert "Make Array.gist limit output to 100 els"

[19:54] <Geth> ¦ rakudo:

[19:54] <Geth> ¦ rakudo: This reverts commit 5b71d902c3b19acbb51e1d05aa39c7650fac03b3.

[19:54] <Geth> ¦ rakudo:

[19:54] <Geth> ¦ rakudo: I rather it goes in after release.

[19:54] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/334b87226d

[19:55] <Geth> ¦ roast: 1b814c6336 | (Zoffix Znet)++ | S02-types/array.t

[19:55] <Geth> ¦ roast: Revert "Test Array.gist limits output to 100 els"

[19:55] <Geth> ¦ roast:

[19:55] <Geth> ¦ roast: This reverts commit 399367ccbf80c04c88ad38ae85a10bfdfb8dd018.

[19:55] <Geth> ¦ roast:

[19:55] <Geth> ¦ roast: https://github.com/rakudo/rakudo/commit/334b87226d

[19:55] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1b814c6336

[20:51] <Geth> ¦ rakudo/zoffix-post-release: 33b3ff7a6d | (Zoffix Znet)++ | src/core/IO/CatHandle.pm

[20:51] <Geth> ¦ rakudo/zoffix-post-release: Fix IO::CatHandle.read switching handles too soon

[20:51] <Geth> ¦ rakudo/zoffix-post-release:

[20:51] <Geth> ¦ rakudo/zoffix-post-release: Phixes R#1313, but makes .tell/.seek tests fail.

[20:51] <Geth> ¦ rakudo/zoffix-post-release: It's possbile the tests are bogus.

[20:51] <synopsebot> R#1313 [open]: https://github.com/rakudo/rakudo/issues/1313 [LHF] IO::CatHandle.read switches handles too early

[20:51] <Geth> ¦ rakudo/zoffix-post-release: review: https://github.com/rakudo/rakudo/commit/33b3ff7a6d

[20:51] <Geth> ¦ roast/zoffix-post-release: 9b825525c8 | (Zoffix Znet)++ | S32-io/io-cathandle.t

[20:51] <Geth> ¦ roast/zoffix-post-release: IO::CatHandle.read does not switch to another handle too early

[20:51] <Geth> ¦ roast/zoffix-post-release:

[20:51] <Geth> ¦ roast/zoffix-post-release: R#1313: https://github.com/rakudo/rakudo/issues/1313

[20:51] <Geth> ¦ roast/zoffix-post-release: Rakudo fix: https://github.com/rakudo/rakudo/commit/33b3ff7a6d

[20:51] <Geth> ¦ roast/zoffix-post-release: review: https://github.com/perl6/roast/commit/9b825525c8

[21:24] <tbrowder> i can’t get n

[21:25] <tbrowder> i can’t get master to test or local install. anyone else having same prob?

[21:30] <AlexDaniel> tbrowder: it was totally fine one commit ago. What's the error?

[21:33] <tbrowder> collecting into a gist now...

[21:35] <tbrowder> see parts of make install and make test logs at https://gist.github.com/tbrowder/0973acd7d14735c0fcdcf2a54698b287

[21:36] <AlexDaniel> … huh?

[21:36] <AlexDaniel> that's weird

[21:36] <AlexDaniel> can you try again?

[21:36] * AlexDaniel afk

[21:37] <AlexDaniel> like maybe make realclean or something

[21:37] <tbrowder> and the install log gist: https://gist.github.com/tbrowder/5fa66318f399843639a5e4eb60630fde

[21:38] <tbrowder> i'll try realclean...

[21:41] <tbrowder> actually i usually use distclean (which calls realclean) often. in trying to fix this i've also removed the local install dir which usually gets me back to a clean starting point.

[21:44] * moritz uses git clean -xdf to wipe out stuff

[22:18] <tbrowder> ok, my bad (as usual), the weirdness apparently came from not having the spec on the updated master branch, duh!
