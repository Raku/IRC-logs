[00:17] <IOninja> .ask lizmat any ideas on how to address the `eager` being ignored here? https://irclog.perlgeek.de/moarvm/2017-03-18#i_14284447

[00:17] <yoleaux2> IOninja: I'll pass your message to lizmat.

[00:21] <IOninja> .ask nine would you be able to update 6.c-errata/S11-modules/require.t to pass with all the latest changes? I figure you know more about what needs to be changed instead of me trying to cherry-pick commits

[00:21] <yoleaux2> IOninja: I'll pass your message to nine.

[00:39] <IOninja> The new 5 tests with `ligature ﬆ` in nqp fail on JVM: https://gist.github.com/zoffixznet/043877b8fe99712d1f1306ac64e97c6f

[00:39] <IOninja> Added in https://github.com/perl6/nqp/commit/9ab92d5ae0d01bc6fc498bacfc264054fed912d9 and https://github.com/perl6/nqp/commit/ccb54900160d7c66d7aa61bdd945424bfa242c35

[00:39] <IOninja> Gonna remove them during release and then re-add afterwards.

[00:40] <IOninja> If I don't hear from lizmat by the time I cut the release, gonna exclude the https://github.com/rakudo/rakudo/commit/1754dc5f7e from release.

[00:41] <IOninja> And if I don't hear from nine, gonna try to cherry-pick the master commits to S11-modules/require.t into 6.c-errata

[00:41] <IOninja> And will be cutting the release in about 14 hours from now.

[00:41] * IOninja & for the night

[01:24] <samcv> we've removed pugs references from roast, can we remove them from nqp tests too?

[01:30] <IOninja> I chalked up upgrade instructions for the lexical require thing. I hope I got the explanations right. If not, please edit: http://rakudo.org/2017/03/18/lexical-require-upgrade-info/

[01:35] <samcv> it's way easier to code in nqp in nqp than in perl 6 lol

[01:35] <samcv> can actually code like a normal person

[01:55] <Geth> ¦ nqp: 719944a1fc | (Samantha McVey)++ | t/moar/08-indexic.t

[01:55] <Geth> ¦ nqp: [moar] Add tests for new indexic op

[01:55] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/719944a1fc

[04:00] <Geth> ¦ roast: FCO++ created pull request #256: Add tests for #130940

[04:00] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/256

[04:00] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130940

[04:00] <Geth> ¦ rakudo: FCO++ created pull request #1042: Fix infinite loop #130940

[04:00] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130940

[04:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1042

[04:09] <samcv> NeuralAnomaly, status

[04:09] <NeuralAnomaly> samcv, [✘] Next release is today. Since last release, there are 60 new still-open tickets (0 unreviewed and 0 blockers) and 13 unreviewed commits. See http://perl6.fail/release/stats for details

[04:23] <samcv> today. that is so vague

[04:24] <samcv> before midnight UTC?

[06:22] <geekosaur> [18 00:41:41] <IOninja> And will be cutting the release in about 14 hours from now.

[06:22] <geekosaur> won't be the first time a scheduled release slipped by a day

[06:22] <geekosaur> although, UTC, it is probably correct for that schedule :)

[07:08] <samcv> thanks geekosaur

[07:10] <samcv> gonna watch Iron Fist, just came out on netflix

[08:14] <nine> IOninja: on it

[08:14] <yoleaux2> 00:21Z <IOninja> nine: would you be able to update 6.c-errata/S11-modules/require.t to pass with all the latest changes? I figure you know more about what needs to be changed instead of me trying to cherry-pick commits

[09:08] <Geth> ¦ roast/6.c-errata: 4dcbbb9097 | (Stefan Seifert)++ | S11-modules/require.t

[09:08] <Geth> ¦ roast/6.c-errata: Bring lexical module loading to "require"

[09:08] <Geth> ¦ roast/6.c-errata:

[09:08] <Geth> ¦ roast/6.c-errata: Like "use" and "need", "require" should put the loaded packages into

[09:08] <Geth> ¦ roast/6.c-errata: lexical scope. Otherwise we could never load multiple versions of a

[09:08] <Geth> ¦ roast/6.c-errata: module in the same program.

[09:08] <Geth> ¦ roast/6.c-errata:

[09:08] <Geth> ¦ roast/6.c-errata: This means that we cannot transitively expose require'd symbols.

[09:08] <Geth> ¦ roast/6.c-errata: <…commit message has 12 more lines…>

[09:08] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/4dcbbb9097

[09:34] <nine> IOninja: excellent upgrade instructions! The only part I'm not 100 % sure about is the test for Nil in the last example. I'm not sure if that's specced or just an implementation detail. I don't think we have a test for the Nil result in roast.

[09:36] <RabidGravy> I guess I'd better get testing stuff again

[09:40] <nine> IOninja: ah, never mind. The Nil is the result of the try and as such should be well specced.

[09:54] <lizmat> IOninja: am available now, looking

[09:54] <yoleaux2> 00:17Z <IOninja> lizmat: any ideas on how to address the `eager` being ignored here? https://irclog.perlgeek.de/moarvm/2017-03-18#i_14284447

[09:56] <[Tux]> This is Rakudo version 2017.02-261-g16ef21c16 built on MoarVM version 2017.02-39-gd7caeba3

[09:56] <[Tux]> csv-ip5xs        3.098

[09:56] <[Tux]> test            12.545

[09:56] <[Tux]> test-t           5.028 - 5.471

[09:56] <[Tux]> csv-parser      12.978

[09:58] <Geth> ¦ rakudo/nom: 3041072578 | (Elizabeth Mattijsen)++ | src/core/List.pm

[09:58] <Geth> ¦ rakudo/nom: Revert "Make thunk xx 42 use the new iterator"

[09:58] <Geth> ¦ rakudo/nom:

[09:58] <Geth> ¦ rakudo/nom: This reverts commit 1754dc5f7e2dc29d18653b131dde6056f16c21fc.

[09:58] <Geth> ¦ rakudo/nom:

[09:58] <Geth> ¦ rakudo/nom: Also causing problems with eagerness, as shown in:

[09:58] <Geth> ¦ rakudo/nom:

[09:58] <Geth> ¦ rakudo/nom:   https://irclog.perlgeek.de/moarvm/2017-03-18#i_14284447

[09:58] <Geth> ¦ rakudo/nom:

[09:58] <Geth> ¦ rakudo/nom: So put past the 2017.03 release.

[09:58] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3041072578

[09:58] <lizmat> IOninja: ^^^

[10:24] <samcv> cool fixed the nqp::indexic todo's just now. Not important to release because we don't use it yet. But that's nice it's passing all the tests i've written

[10:30] <Geth> ¦ roast: 6e56c434f4 | (Elizabeth Mattijsen)++ | 2 files

[10:30] <Geth> ¦ roast: Unfudge now again passing tests: RT #130980

[10:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6e56c434f4

[10:30] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130980

[10:34] <samcv> need to figure out what code needs to actually change though. somewhere in QASTRegexCompilierMAST.nqp maybe.. hm

[10:56] <Geth> ¦ roast: 289f08736d | usev6++ | S06-advanced/wrap.t

[10:56] <Geth> ¦ roast: [JVM] Add ticket number to fudged test

[10:56] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/289f08736d

[13:29] <gfldex> m: multi sub dir($path = '.', :$some-named){}; say dir

[13:29] <camelia> rakudo-moar 304107: OUTPUT: «===SORRY!===␤Circularity detected in multi sub types for &dir␤»

[13:29] <gfldex> m: multi sub dir($path, :$some-named){}; say dir

[13:29] <camelia> rakudo-moar 304107: OUTPUT: «(".cpanm".IO ".local".IO ".npm".IO ".perl6".IO ".perlbrew".IO ".rcc".IO ".ssh".IO "Perlito".IO "evalbot".IO "log".IO "nqp-js".IO "p1".IO "p2".IO "perl5".IO "std".IO ".bash_history".IO ".bashrc".IO "mbox".IO ".lesshst".IO "evalbot.log".IO ".cpan".IO "dale…»

[13:30] <gfldex> that makes overloading &dir quite difficult

[13:34] <IOninja> cool didn't know we had any sort of circularity detection

[13:34] <timotimo> must be something IOninja built

[13:34] <IOninja> Nope

[13:35] <gfldex> and IO::Path.dir is an only, so no way to augment

[13:41] <IOninja> samcv: I think NeuralAnomaly thinks release happens on Saturday 00:00:01 EST. Normal time is around 11am EST.

[13:58] <gfldex> is gather supposed to work inside a wrapper?

[14:00] <timotimo> wrapper as in &func.wrap?

[14:00] <gfldex> yes

[14:00] <timotimo> i don't immediately see a reason against it

[14:00] <gfldex> it's actually Method.wrap

[14:00] <gfldex> I shall golf later.

[14:01] <timotimo> what kind of explosion do you observe?

[14:03] <gfldex> I get a whole type object back

[14:04] <timotimo> oh, so not exploded

[14:05] <gfldex> i do `gather for callsame { .take }` and no matter how the list is that is returned by callsame, I only ever get a single type object

[14:05] <gfldex> *how long

[14:05] <timotimo> interesting that that works without () after callsame; is that a term?

[14:05] <gfldex> luckily there is .map and .Slip, so I got my recursive &dir working now :)

[14:06] <gfldex> it does need the (), I just forgot

[14:06] <timotimo> OK

[14:17] <MasterDuke> is this correct? https://github.com/rakudo/rakudo/blob/nom/src/core/Buf.pm#L712

[14:17] <MasterDuke> `my int $mask = 0xFFFFFFFFFFFFFFFF;`

[14:18] <timotimo> given that blobs can have different sizes assigned to them ... maybe not?

[14:18] <timotimo> probably depends on how assigning back into the blob works

[14:19] <MasterDuke> well, 0xFFFFFFFFFFFFFFFF is bigger than an int can hold

[14:19] <timotimo> oops :)

[14:19] <timotimo> my eyes just glazed over the exact amount of Fs

[14:19] <timotimo> .o( look at all the Fs i give )

[14:20] <MasterDuke> so is it better to make that smaller? or just make it a uint?

[14:22] <Geth> ¦ rakudo/nom: dd3f22875c | (Zoffix Znet)++ | docs/ChangeLog

[14:22] <Geth> ¦ rakudo/nom: Log all commits to date

[14:22] <Geth> ¦ rakudo/nom:

[14:22] <Geth> ¦ rakudo/nom: Documents commits:

[14:22] <Geth> ¦ rakudo/nom: e1ebb50 f94a2c7 3de5fb2 79bb179 65b0040 10f5f74 9644fc3

[14:22] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/dd3f22875c

[14:30] <Geth> ¦ rakudo/nom: 53b38789ee | (Zoffix Znet)++ | CREDITS

[14:30] <Geth> ¦ rakudo/nom: Remove duplicate entry

[14:30] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/53b38789ee

[14:33] <Geth> ¦ rakudo: FCO++ created pull request #1043: Fix #128977 and #130954

[14:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1043

[14:33] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128977

[14:33] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130954

[14:33] <Geth> ¦ roast: FCO++ created pull request #257: Tests for #128977 and #130954

[14:33] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/257

[14:33] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128977

[14:33] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130954

[14:34] <IOninja> Let's wait 'till past release before merging anything else. I'm about to start.

[14:38] <SmokeMachine> IOninja: should I stop PRing or can I PR and it gets merged (if it's the case) after the release?

[14:39] <IOninja> SmokeMachine: you can PR

[14:40] <SmokeMachine> IOninja: ok!

[14:42] <Geth> ¦ nqp: 6607ecbdc9 | (Zoffix Znet)++ | t/qregex/rx_modifiers

[14:42] <Geth> ¦ nqp: Temporarily remove new tests

[14:42] <Geth> ¦ nqp:

[14:42] <Geth> ¦ nqp: They fail on JVM. Will bring back after release.

[14:42] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/6607ecbdc9

[14:50] <IOninja> NeuralAnomaly: cut the release

[14:50] <NeuralAnomaly> IOninja, Will do! If you're feeling particularly naughty, you can watch me at http://perl6.fail/release/progress or go look at some cats http://icanhas.cheezburger.com/lolcats

[14:50] <NeuralAnomaly> IOninja, ☠☠☠☠☠☠☠☠☠☠ ABNORMAL EXIT!

[14:51] <IOninja> forgot to tell it the new IP for the VM

[14:51] <IOninja> NeuralAnomaly: cut the release

[14:51] <NeuralAnomaly> IOninja, Will do! If you're feeling particularly naughty, you can watch me at http://perl6.fail/release/progress or go look at some cats http://icanhas.cheezburger.com/lolcats

[14:51] <NeuralAnomaly> IOninja, ♥♥♥♥♥♥ Prep done

[14:52] <Geth> ¦ nqp: 97e82070bf | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[14:52] <Geth> ¦ nqp: bump MoarVM version to 2017.03

[14:52] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/97e82070bf

[14:52] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.02-47-g6954d203...2017.03

[14:52] <Geth> ¦ nqp: f6bd03b4b7 | (Zoffix Znet)++ | VERSION

[14:52] <Geth> ¦ nqp: bump VERSION to 2017.03

[14:52] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/f6bd03b4b7

[14:52] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.02-47-g6954d203...2017.03

[14:54] <IOninja> And yeah, it'll still point to rakudo.org for download. I'll make the rakudo.perl6.org "pretty" by April's release and will update instructions to point there (and add redirects to rakudo's server)

[14:57] <travis-ci> Rakudo build failed. Zoffix Znet 'Log all commits to date

[14:57] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/212455146 https://github.com/rakudo/rakudo/compare/3041072578f6...dd3f22875c8f

[14:57] <buggable> [travis build above] ✓ All failures are due to timeout (0), missing build log (0), GitHub connectivity (0), or failed make test (1). Across all jobs, only 04-nativecall/08-callbacks.t test file failed.

[15:00] <IOninja> Looks like a single travis link now makes buggable use 2GB+ RAM instead of ~300MB

[15:00] <IOninja> Ever since the update to report failed tests.

[15:00] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1044: Use uint64 for mask in Buf's `~^` operator

[15:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1044

[15:01] <NeuralAnomaly> IOninja, ♥♥♥♥♥♥ nqp tests OK

[15:10] <NeuralAnomaly> IOninja, ♥♥♥♥♥♥ nqp release tarball tests OK

[15:11] <NeuralAnomaly> IOninja, ♥♥♥♥♥♥ nqp release DONE

[15:11] <Geth> ¦ rakudo/nom: 1edb1d3470 | (Zoffix Znet)++ | docs/announce/2017.03.md

[15:11] <Geth> ¦ rakudo/nom: Generate release announcement for 2017.03

[15:11] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1edb1d3470

[15:11] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.02-69-g4ceee06d...2017.03

[15:11] <Geth> ¦ rakudo/nom: c269bffbfc | (Zoffix Znet)++ | tools/build/NQP_REVISION

[15:11] <Geth> ¦ rakudo/nom: [release] bump NQP revision

[15:11] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c269bffbfc

[15:11] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.02-69-g4ceee06d...2017.03

[15:11] <Geth> ¦ rakudo/nom: a0a28432f5 | (Zoffix Znet)++ | VERSION

[15:11] <Geth> ¦ rakudo/nom: [release] bump VERSION to 2017.03

[15:11] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a0a28432f5

[15:11] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.02-69-g4ceee06d...2017.03

[15:19] <IOninja> Well, I repro-ed buggable's RAM nomming with this snippet: https://gist.github.com/zoffixznet/9d9783ab1d74a6c21f69241daee7e813

[15:19] <IOninja> Which may not be a leak :(

[15:19] * IOninja gonna try to loop it after release

[15:19] <NeuralAnomaly> IOninja, ♥♥♥♥♥♥ Rakudo stresstest (master) OK

[15:19] <timotimo> that's the json-fast related one?

[15:20] <IOninja> No idea.

[15:20] <timotimo> hm, there's no loop in there

[15:20] <IOninja> * │ IOninja gonna try to loop it after release

[15:20] <timotimo> i wonder if it'd be enough to just parse the same text over and over

[15:20] <timotimo> oh, i read "stop" where you wrote "loop"

[15:21] <IOninja> :D

[15:21] <NeuralAnomaly> IOninja, ♥♥♥♥♥♥ Rakudo stresstest (6.c-errata) OK

[15:29] <NeuralAnomaly> IOninja, ♥♥♥♥♥♥ Rakudo release DONE

[15:29] <NeuralAnomaly> IOninja, ♥♥♥♥♥♥ Post: upload tarballs to rakudo.org and rakudo.perl6.org

[15:29] <NeuralAnomaly> IOninja, 🎺🎺🎺📯📯📯📯📯📯🌈🌈🌈📦📦📦

[15:29] <NeuralAnomaly> IOninja, The release of **Rakudo #109 2017.03** has now been completed

[15:29] <NeuralAnomaly> IOninja, 🎺🎺🎺📯📯📯📯📯📯🌈🌈🌈📦📦📦

[15:29] * NeuralAnomaly celebrates with an appropriate amount of fun

[15:30] <timotimo> cool

[15:31] <IOninja> NeuralAnomaly: thanks, baby

[15:31] <NeuralAnomaly> IOninja, any time, buddy!

[15:37] <Geth> ¦ rakudo/nom: bfc5cb524f | (Zoffix Znet)++ | docs/release_guide.pod

[15:37] <Geth> ¦ rakudo/nom: 2017.03 is now in the past

[15:37] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bfc5cb524f

[15:37] <timotimo> "the past is far behind us, the future doesn't exist!"

[15:42] <Geth> ¦ nqp: 7ca9d1779b | (Zoffix Znet)++ | t/qregex/rx_modifiers

[15:42] <Geth> ¦ nqp: Revert "Temporarily remove new tests"

[15:42] <Geth> ¦ nqp:

[15:42] <Geth> ¦ nqp: This reverts commit 6607ecbdc9faaf9621a4254f4b426b50a0039509.

[15:42] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/7ca9d1779b

[16:15] <IOninja> Any more comments for https://github.com/rakudo/rakudo/pull/1020 ?

[16:24] <Geth> ¦ rakudo/nom: b1ff41766f | (Zoffix Znet)++ | CONTRIBUTING.md

[16:24] <Geth> ¦ rakudo/nom: Include link to info on good commit content

[16:24] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b1ff41766f

[16:36] <dogbert17> IOninja: the gist you posted uses massive amounts of memory

[16:37] <dogbert17> everything after 'my $job = ua-get-json 'https://api.travis-ci.org/jobs/212455149';' can be removed, the massive memory use is still present

[16:39] <IOninja> dogbert17: yes, that's the problem with it.

[16:40] <IOninja> Good. That makes me hopeful it's just the JSON module that causes that instead of Perl 6 itself

[16:41] <MasterDuke> some other metrics about the gist. a lot of the memory is allocated in MVM_string_join

[16:41] <MasterDuke> twice there's a comment `/* XXX Can special-case 8-bit NFG and ASCII here too. */`

[16:42] <MasterDuke> 8-bit NFG is about one third of the cases when running your gist

[16:42] <MasterDuke> but i don't know if that would help with memory

[16:49] <dogbert17> but how can it use so much memory in the first place, the downloaded content isn't even 200k

[16:57] <Geth> ¦ rakudo/nom: 4605d5219e | (Fernando Correa de Oliveira)++ | src/core/Capture.pm

[16:57] <Geth> ¦ rakudo/nom: Fix #128977 and #130954

[16:57] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4605d5219e

[16:57] <Geth> ¦ rakudo/nom: 0de1daabd7 | (Zoffix Znet)++ | src/core/Capture.pm

[16:57] <Geth> ¦ rakudo/nom: Merge pull request #1043 from FCO/fix-128977

[16:57] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128977

[16:57] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130954

[16:57] <Geth> ¦ rakudo/nom:

[16:57] <Geth> ¦ rakudo/nom: Fix #128977 and #130954

[16:57] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128977

[16:57] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130954

[16:57] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0de1daabd7

[16:58] <japhb> .tell jnthn https://6guts.wordpress.com/2017/03/16/considering-hyperrace-semantics/ keeps asserting incorrect arithmetic (6+5=12,9+5=15,9+5=16).

[16:58] <yoleaux2> japhb: I'll pass your message to jnthn.

[17:00] <Geth> ¦ rakudo/nom: 27539320bd | (Daniel Green)++ | src/core/Buf.pm

[17:00] <Geth> ¦ rakudo/nom: Use uint64 for mask in Buf's `~^` operator

[17:00] <Geth> ¦ rakudo/nom:

[17:00] <Geth> ¦ rakudo/nom: 0xFFFFFFFFFFFFFFFF == 2**64-1, which is too big a value to assign to

[17:00] <Geth> ¦ rakudo/nom: signed natives.

[17:00] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/27539320bd

[17:00] <Geth> ¦ rakudo/nom: 88aa78cbe0 | (Zoffix Znet)++ | src/core/Buf.pm

[17:00] <Geth> ¦ rakudo/nom: Merge pull request #1044 from MasterDuke17/use_unsigned_native_for_Buf_mask

[17:00] <Geth> ¦ rakudo/nom:

[17:00] <Geth> ¦ rakudo/nom: Use uint64 for mask in Buf's `~^` operator

[17:00] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/88aa78cbe0

[17:06] <IOninja> m: my $x = 42; dd \(42, $x).WHICH.^nam

[17:06] <camelia> rakudo-moar b1ff41: OUTPUT: «No such method 'nam' for invocant of type 'Perl6::Metamodel::ClassHOW'␤  in block <unit> at <tmp> line 1␤␤»

[17:06] <IOninja> m: my $x = 42; dd \(42, $x).WHICH.^name

[17:06] <camelia> rakudo-moar b1ff41: OUTPUT: «"Str"␤»

[17:06] <IOninja> m: my $x = 42; dd $x.WHICH.^name

[17:06] <camelia> rakudo-moar b1ff41: OUTPUT: «"ObjAt"␤»

[17:06] <IOninja> Is that normal? That Capture.WHICH gives a Str instead of ObjAt?

[17:07] <IOninja> m: dd Capture.WHICH.^name

[17:07] <camelia> rakudo-moar b1ff41: OUTPUT: «"ObjAt"␤»

[17:08] <IOninja> m: my $x = 42; my %h := Map.new: ($x => 42); dd %h.WHICH.^name

[17:08] <camelia> rakudo-moar b1ff41: OUTPUT: «"Str"␤»

[17:08] <IOninja> guess it is...

[17:09] <Geth> ¦ roast: 7cf30b225a | (Fernando Correa de Oliveira)++ | S02-types/capture.t

[17:09] <Geth> ¦ roast: Tests for #128977 and #130954 (#257)

[17:09] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7cf30b225a

[17:09] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128977

[17:09] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130954

[17:26] <travis-ci> Rakudo build passed. Zoffix Znet '[release] bump VERSION to 2017.03'

[17:26] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/212464673 https://github.com/rakudo/rakudo/compare/53b38789eebc...a0a28432f54d

[19:48] <Geth> ¦ rakudo/nom: 8c88b0cc62 | (Fernando Correa)++ | 2 files

[19:48] <Geth> ¦ rakudo/nom: Fix infinite loop #130940

[19:48] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8c88b0cc62

[19:48] <Geth> ¦ rakudo/nom: bfbe4298a7 | (Zoffix Znet)++ | 2 files

[19:48] <Geth> ¦ rakudo/nom: Merge pull request #1042 from FCO/fix-130940-sd-try

[19:48] <Geth> ¦ rakudo/nom:

[19:48] <Geth> ¦ rakudo/nom: Fix infinite loop #130940

[19:48] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130940

[19:48] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bfbe4298a7

[19:52] <IOninja> I'm not seeing any huge memory use issues with JSON::Tiny, so I'll just swap buggable to use it

[19:53] <IOninja> .tell jnthn recall I kept mentioning buggable leaking? Seems it's just something with JSON::Fast (and it doesn't seem to be leaking but just using lots of RAM). Swapping to JSON::Tiny avoids the issue.

[19:53] <yoleaux2> IOninja: I'll pass your message to jnthn.

[19:55] <japhb> IOninja: At this point is there a functional difference between them?  Or just different time/memory tradeoff?

[19:59] <AlexDaniel> IOninja: relevant: https://github.com/timo/json_fast/issues/21

[19:59] <AlexDaniel> I'm happy that I'm not the only one seeing it because I was unable to reproduce it without the whole Whateverable code base…

[20:00] <AlexDaniel> japhb: should be no functional difference in theory, but there are some unicode corner cases…

[20:05] <IOninja> japhb: JSON::Tiny is non-compilant

[20:05] <IOninja> zoffix@VirtualBox:~$ perl6 -MJSON::Tiny -e 'dd from-json to-json([NaN, Inf])'

[20:05] <IOninja> Input (12 characters) is not a valid JSON string

[20:05] <IOninja> Generates invalid JSON

[20:06] <IOninja> ZOFVM: Files=1228, Tests=132863, 126 wallclock secs (21.60 usr  3.45 sys + 2389.41 cusr 279.03 csys = 2693.49 CPU)

[20:07] <IOninja> It's barely more than our core META6.json parser.

[20:09] <timotimo> yeah, i don.t think there's a big difference in those at all

[20:09] <timotimo> unless someone imported JSON::Fast at some point

[20:15] <Geth> ¦ roast: 462a86ff9b | (Fernando Correa de Oliveira)++ | 8 files

[20:15] <Geth> ¦ roast: Add tests for #130940 (#256)

[20:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/462a86ff9b

[20:15] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130940

[20:16] <Geth> ¦ roast: 0a39902ba1 | (Zoffix Znet)++ | S32-str/indices.t

[20:16] <Geth> ¦ roast: Fix type name in test

[20:16] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/0a39902ba1

[20:22] <IOninja> .ask lizmat is it normal that Array.reverse now also returns a Seq, like List.reverse does? On 2017.02 Array.reverse returns an Array.

[20:22] <yoleaux2> IOninja: I'll pass your message to lizmat.

[20:22] <lizmat> .

[20:22] <yoleaux2> 20:22Z <IOninja> lizmat: is it normal that Array.reverse now also returns a Seq, like List.reverse does? On 2017.02 Array.reverse returns an Array.

[20:23] <lizmat> good question, but yeah, that's what I did

[20:24] <lizmat> pre-GLR speculation mentions it returns an Iterable

[20:25] <lizmat> https://docs.perl6.org/routine/reverse has it as either returning a List:D or a Seq:D or a Supply:D

[20:26] <lizmat> there is no documentation / tests for Array.reverse returning an Array, afaik

[20:27] <IOninja> Then, IMO it's fine to leave Array.reverse as is.

[20:27] <lizmat> the whole point of making it a Seq was to prevent needing to copy a reified Array when it it not necessary

[20:27] <IOninja> Makes sense.

[20:31] <lizmat> FWIW, I plan to give the same treatment to .rotate

[20:31] <lizmat> but after the release  :-)

[20:32] <IOninja> m: say $*PERL.compiler.version

[20:32] <camelia> rakudo-moar bfbe42: OUTPUT: «v2017.03.8.gbfbe.429␤»

[20:32] <IOninja> :)

[20:32] <IOninja> Release happened.

[20:32] <lizmat> ah, we're post release already

[20:32] <lizmat> cool

[20:32] <lizmat> IOninja++

[20:36] * lizmat goes back to schlepping

[20:38] <timotimo> good schlepp

[21:52] <samcv> good *

[21:52] <yoleaux2> 19:46Z <MasterDuke> samcv: parsing the json from a travis log with JSON::Fast spends 46% of its time here https://github.com/MoarVM/MoarVM/blob/master/src/strings/ops.c#L86-L139, which mentions it could be smarter. see anything you could do to optimize it?

[21:53] <IOninja> \o

[21:53] <samcv> ooo

[21:53] <samcv> MasterDuke thanks :) always good to find new places to focus improvements

[21:53] <samcv> o/

[21:54] <samcv> 46% is a lot. heh. let me look at it

[21:55] <MasterDuke> may want to backlog #moarvm, been a bunch of related chat

[21:55] <samcv> maybe it's all the mallocs?

[21:56] <samcv> kk

[22:25] <Geth> ¦ nqp: a36cc5a987 | (Samantha McVey)++ | t/moar/08-indexic.t

[22:25] <Geth> ¦ nqp: [moar] Unfudge now passing nqp::indexic tests

[22:25] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a36cc5a987

[22:53] <travis-ci> NQP build failed. Samantha McVey '[moar] Unfudge now passing nqp::indexic tests'

[22:53] <travis-ci> https://travis-ci.org/perl6/nqp/builds/212559245 https://github.com/perl6/nqp/compare/7ca9d1779b89...a36cc5a9877c
