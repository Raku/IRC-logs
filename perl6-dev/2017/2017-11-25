[10:10] <[Tux]> Rakudo version 2017.11-13-gf82433bfd - MoarVM version 2017.11-2-g26ad7cc55

[10:10] <[Tux]> csv-test-xs-20      0.442 -  0.454

[10:10] <[Tux]> csv-ip5xs           1.111 -  1.137

[10:10] <[Tux]> test-t --race       1.276 -  1.386

[10:10] <[Tux]> test-t              3.278 -  3.304

[10:10] <[Tux]> test               12.005 - 12.893

[10:10] <[Tux]> csv-ip5xs-20       12.957 - 13.820

[10:10] <[Tux]> csv-parser         12.129 - 13.306

[10:10] <[Tux]> test-t-20 --race   21.023 - 21.658

[10:10] <[Tux]> test-t-20          59.096 - 59.175

[11:53] * lizmat waves from the Bailador workshop at the LPW

[11:58] <timotimo> o/

[12:05] <bartolin> \o

[12:14] <tadzik> o/

[12:14] <tbrowder> \o/

[12:14] <tadzik> so many 6books!

[13:00] <lizmat> lunch&

[14:55] <tbrowder> .tell AlexDaniel (not yelling) rakudo PR #1240 will reduce open bug count

[14:55] <yoleaux> tbrowder: I'll pass your message to AlexDaniel.

[14:55] <AlexDaniel> .

[14:55] <yoleaux> 14:55Z <tbrowder> AlexDaniel: (not yelling) rakudo PR #1240 will reduce open bug count

[14:55] <AlexDaniel> will take a look in 5 minutes

[15:03] <AlexDaniel> wow that's a lot of code!

[15:04] <Geth> ¦ rakudo/master: 14 commits pushed by (Tom Browder)++, (Aleks-Daniel Jakimenko-Aleksejev)++

[15:04] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/f82433bfd9...4151423552

[15:11] <Geth> ¦ rakudo: 4003b93f63 | (Aleks-Daniel Jakimenko-Aleksejev)++ | src/Perl6/Pod.nqp

[15:11] <Geth> ¦ rakudo: Tiny corrections (whitespace and comments)

[15:11] <Geth> ¦ rakudo:

[15:11] <Geth> ¦ rakudo: Untabified the whole buffer (because mixed styles were used), marked

[15:11] <Geth> ¦ rakudo: some TODO comments as TODO comments.

[15:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4003b93f63

[15:12] <AlexDaniel> tbrowder: you're using emacs, right?

[15:13] <AlexDaniel> tbrowder: have you tried better-defaults package? Or maybe you should at least set indent-tabs-mode to nil

[15:13] <AlexDaniel> tbrowder: also, if possible, mark every todo comment as # TODO, otherwise it's a little bit hard to distinguish useful commentary from things that should be done

[16:03] <tbrowder> AlexDaniel: yes, rogue Emacs needs fixin’...i’ll detabify and make corrections and let you know. will be later today

[16:03] <AlexDaniel> tbrowder: I already “corrected” it :)

[16:17] <tbrowder> thnx

[17:32] <lizmat> m: role A { multi method a(Int $a) { ... }; multi method(Str $b) { ... } }; class B does A { multi method a(Str $b) { } }   # correct

[17:32] <camelia> rakudo-moar 4003b93f6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Multi method 'a' with signature :(B $: Int $a, *%_) must be implemented by B because it is required by a role␤at <tmp>:1␤»

[17:33] <lizmat> m: role A { multi method a("foo") { ... }; multi method("bar") { ... } }; class B does A { multi method a("foo") { } }  # so why is this not complaining?

[17:33] <camelia> rakudo-moar 4003b93f6: ( no output )

[17:33] <lizmat> should this be considered a bug ?

[17:39] <jnthn> I think that falls under "signatures with where clauses can't be compared"

[17:40] <timotimo> was it supposed to be "multi method()" rather than "multi method a()"?

[17:40] <jnthn> And "foo" is just sugar for Str $ where "foo"

[17:40] <jnthn> I figured it was meant to be a :)

[17:40] <jnthn> But I'm not sure if it'll make a difference

[17:41] <lizmat> m: role A { multi method a("foo") { ... }; multi method a("bar") { ... } }; class B does A { multi method a("foo") { } }  # so why is this not complaining?

[17:41] <camelia> rakudo-moar 4003b93f6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Multi method 'a' with signature :(B $: Str $ where { ... }, *%_) must be implemented by B because it is required by a role␤at <tmp>:1␤»

[17:41] <lizmat> ah, it *is* complaining

[17:41] <lizmat> m: role A { multi method a("foo") { ... }; multi method a("bar") { ... } }; class B does A { multi method a("foo") { }; multi method a("bar") { } }

[17:41] <camelia> rakudo-moar 4003b93f6: ( no output )

[17:41] <lizmat> whee  :-)

[17:41] <lizmat> sorry for the noise   :-)

[17:48] <Geth> ¦ roast: FCO++ created pull request #358: Add test to Supply.zip

[17:48] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/358

[17:48] <synopsebot> SPEC#358 [open]: https://github.com/perl6/roast/pull/358 Add test to Supply.zip

[17:48] <jnthn> Ah, hmm

[17:49] <jnthn> Maybe literals are a special case in signature comparison?

[17:50] <lizmat> looks like it  :-)

[17:51] <jnthn> Guess that's fine, may as well do what we reasonably can :)

[17:53] <lizmat> it's probably a smart match under the hood ?  :-)

[17:56] <Geth> ¦ roast: 43ca6ea5d6 | (Fernando Correa de Oliveira)++ | S17-supply/zip.t

[17:56] <Geth> ¦ roast: Add test to Supply.zip

[17:56] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/43ca6ea5d6

[17:56] <Geth> ¦ roast: 225fd55385 | (Fernando Correa de Oliveira)++ | S17-supply/zip.t

[17:56] <Geth> ¦ roast: Change timeout for zip test

[17:56] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/225fd55385

[17:56] <Geth> ¦ roast: 00e4de362c | (Jonathan Worthington)++ (committed using GitHub Web editor) | S17-supply/zip.t

[17:56] <Geth> ¦ roast: Merge pull request #358 from FCO/test-supply-zip

[17:56] <Geth> ¦ roast:

[17:57] <Geth> ¦ roast: Add test to Supply.zip

[17:57] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/00e4de362c

[17:57] <jnthn> lizmat: Probably. I think you wrote that bit ;)

[17:57] <lizmat> :-)

[18:24] <lizmat> LPW shutting down&

[18:32] <Geth> ¦ rakudo: FCO++ created pull request #1270: Make zip-latest's response supply be done when any supply become done

[18:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1270

[18:32] <synopsebot> RAKUDO#1270 [open]: https://github.com/rakudo/rakudo/pull/1270 Make zip-latest's response supply be done when any supply become done

[20:06] <Geth> ¦ rakudo: FCO++ created pull request #1271: Fix Supply.throttle()

[20:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1271

[20:06] <synopsebot> RAKUDO#1271 [open]: https://github.com/rakudo/rakudo/pull/1271 Fix Supply.throttle()

[20:06] <Geth> ¦ roast: FCO++ created pull request #359: Test if Supply.throttle($, $second) become done when its source becom…

[20:06] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/359

[20:06] <synopsebot> SPEC#359 [open]: https://github.com/perl6/roast/pull/359 Test if Supply.throttle($, $second) become done when its source becom…

[21:07] <SmokeMachine> is it ^^ right? could I merge it?

[21:52] <Geth> ¦ rakudo: usev6++ created pull request #1272: Pass typenames to two compile time exceptions

[21:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1272

[21:52] <synopsebot> RAKUDO#1272 [open]: https://github.com/rakudo/rakudo/pull/1272 Pass typenames to two compile time exceptions
