[00:44] <Zoffix> [Coke]: you were wondering why people put [BUG]... This page actually says to do so: http://rakudo.org/tickets/

[00:44] * Zoffix edits

[00:44] <Zoffix> It also links to stuff like "easy" tickets.... But there's nothing these. If a list of easy isn't maintained, perhaps the links should be removed?

[01:05] <AlexDaniel> yea

[01:05] <Zoffix> squashable6: status

[01:05] <squashable6> Zoffix, ???? SQUASHathon is in progress! The end of the event in ?10 hours

[01:05] <squashable6> Zoffix, Log and stats: https://gist.github.com/70c886a1da9002015e831b38220d0b2c

[01:07] <Zoffix> Pretty good turn out 250+ commits.

[01:08] * Zoffix goes to spend the rest of the long weekend away from humanity

[01:08] <Zoffix> Gonna continue learning C :)

[01:08] <Zoffix> \o

[01:14] <yoleaux> Zoffix: fix up `make test` along with other tests

[01:15] <samcv> Zoffix, fun!

[01:17] <Zoffix> hah

[01:17] <Zoffix> yoleaux: you party-pooper!

[01:17] <Zoffix> releasable6: status

[01:17] <releasable6> Zoffix, Next release in 13 days and ?17 hours. No blockers. Changelog for this release was not started yet

[01:17] <releasable6> Zoffix, Details: https://gist.github.com/5123e8fce184af51696f1842fd727b24

[01:17] <Zoffix> .in 6d fix up `make test` along with other test (make all the tests in rakudo's t/ actually get run when make test is run)

[01:17] <yoleaux> Zoffix: I'll remind you on 9 Sep 2017 01:17Z

[01:17] * Zoffix &'s

[02:14] <AlexDaniel> oh wow, just 13 days

[02:14] <AlexDaniel> time flies

[12:42] <Geth> ¦ rakudo/nom: 51c3d86ccf | (Elizabeth Mattijsen)++ | src/core/Junction.pm

[12:42] <Geth> ¦ rakudo/nom: Make all(@a),none(@a),one(@a) aboutb 9x faster

[12:42] <Geth> ¦ rakudo/nom:

[12:42] <Geth> ¦ rakudo/nom: - for a 10 element array

[12:42] <Geth> ¦ rakudo/nom: - by creating multis for the @a case

[12:42] <Geth> ¦ rakudo/nom: - causing not to have to go through one arg handling in that case

[12:42] <Geth> ¦ rakudo/nom:

[12:42] <Geth> ¦ rakudo/nom: This was also done for any(@a), but this caused tests 10, 16, 85,

[12:42] <Geth> ¦ rakudo/nom: 91, 98, 101 of S02-literals/radix.t to fail: instead of a number, a

[12:42] <Geth> ¦ rakudo/nom: Failure was being generated.  Looking at --ll-exception output, it

[12:42] <Geth> ¦ rakudo/nom: is completelt unclear (to me at least) where the Failure is actually

[12:42] <Geth> ¦ rakudo/nom: being generated.  Some more eyes on this would be appreciated!

[12:42] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/51c3d86ccf

[14:51] <Geth> ¦ rakudo/jit_nativecall: 502b0b1d66 | (Stefan Seifert)++ | lib/NativeCall.pm6

[14:51] <Geth> ¦ rakudo/jit_nativecall: Remove unnecessary creation of an extra serialization context

[14:51] <Geth> ¦ rakudo/jit_nativecall:

[14:51] <Geth> ¦ rakudo/jit_nativecall: Turns out we don't need this and it will actively prevent spesh from

[14:51] <Geth> ¦ rakudo/jit_nativecall: optimizing as it won't be able to find the WVal for self. Furthermore

[14:51] <Geth> ¦ rakudo/jit_nativecall: this would also prevent us from JIT compiling the sub's body.

[14:51] <Geth> ¦ rakudo/jit_nativecall: review: https://github.com/rakudo/rakudo/commit/502b0b1d66

[15:39] <Geth> ¦ roast: skids++ created pull request #304: Add test for RT#124247

[15:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/304

[15:39] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=124247

[15:39] <Geth> ¦ roast: 3ef8bb0331 | skids++ | S19-command-line-options/03-dash-p.t

[15:39] <Geth> ¦ roast: Add test for RT#124247

[15:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3ef8bb0331

[15:39] <Geth> ¦ roast: ec1e1cf2c5 | skids++ (committed using GitHub Web editor) | S19-command-line-options/03-dash-p.t

[15:39] <Geth> ¦ roast: Merge pull request #304 from skids/rt124247

[15:39] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=124247

[15:39] <Geth> ¦ roast:

[15:39] <Geth> ¦ roast: Add test for RT#124247

[15:39] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=124247

[15:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ec1e1cf2c5

[15:40] <Geth> ¦ rakudo/jit_nativecall: 987cd9824f | (Stefan Seifert)++ | lib/NativeCall.pm6

[15:40] <Geth> ¦ rakudo/jit_nativecall: Fix "Object in QAST::WVal, but not in SC" for function pointers

[15:40] <Geth> ¦ rakudo/jit_nativecall:

[15:40] <Geth> ¦ rakudo/jit_nativecall: While adding the sub to a newly created SC is harmful in the normal case,

[15:40] <Geth> ¦ rakudo/jit_nativecall: it's vital when dealing with function pointers return from native code as

[15:40] <Geth> ¦ rakudo/jit_nativecall: those subs will not be added to an SC by the compiler.

[15:40] <Geth> ¦ rakudo/jit_nativecall: review: https://github.com/rakudo/rakudo/commit/987cd9824f

[19:23] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1150: Fix INTERPOLATE call with wrong args in p5metachar

[19:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1150

[20:29] <Geth> ¦ rakudo/nom: 4c25df745c | MasterDuke17++ | src/Perl6/Actions.nqp

[20:29] <Geth> ¦ rakudo/nom: Fix INTERPOLATE call with wrong args in p5metachar

[20:29] <Geth> ¦ rakudo/nom:

[20:29] <Geth> ¦ rakudo/nom: I'm not sure how to craft a regex to demonstrate the bug, but printing

[20:29] <Geth> ¦ rakudo/nom: out the argument values in INTPEROLATE shows that (e.g., `$monkey` is

[20:29] <Geth> ¦ rakudo/nom: always set and `$s` is what changes depending on whether a `use MONKEY`

[20:29] <Geth> ¦ rakudo/nom: is in scope, which is wrong).

[20:29] <Geth> ¦ rakudo/nom:

[20:29] <Geth> ¦ rakudo/nom: Some discussion about this here

[20:29] <Geth> ¦ rakudo/nom: https://irclog.perlgeek.de/perl6-dev/2017-09-01#i_15101225

[20:30] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4c25df745c

[20:30] <Geth> ¦ rakudo/nom: 9a478b1ea1 | niner++ (committed using GitHub Web editor) | src/Perl6/Actions.nqp

[20:30] <Geth> ¦ rakudo/nom: Merge pull request #1150 from MasterDuke17/fix_INTERPOLATE_called_with_wrong_args_in_p5metachar

[20:30] <Geth> ¦ rakudo/nom:

[20:30] <Geth> ¦ rakudo/nom: Fix INTERPOLATE call with wrong args in p5metachar

[20:30] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9a478b1ea1

[20:32] <MasterDuke> "INTPEROLATE", ugh. and unnecessary parens around the e.g. clause. i need an editor for my commit messages

[20:57] <AlexDaniel> MasterDuke: just configure spell checking in vim?

[21:01] <MasterDuke> i should do that...

[21:08] <[Coke]> so, cro recommends installing sans tests. I ignored this, and no doubt, an SSL test failed.

[21:09] * [Coke] tries upgrading rakudo

[21:18] <jnthn> [Coke]: A Cro::SSL test, or a IO::Socket::Async::SSL test?

[21:20] <[Coke]> jnthn: I retried, am currently stuck here: https://github.com/jnthn/p6-io-socket-async-ssl/issues

[21:21] <[Coke]> just cloned it to see if I can get more deets.

[21:21] <[Coke]> t/meta.t

[21:21] <jnthn> It fails...t/meta.t? :/

[21:22] <jnthn> *sigh*

[21:22] * jnthn decides that t/meta.t is always going to be xt/meta.t for all of this modules, or just not going to exist at all

[21:22] <[Coke]> using 2017.08-66-g9a478b1ea

[21:22] <jnthn> What's the failure mode, ooc?

[21:22] <[Coke]> Could not find META6:ver<0.0.4..*> at line 66 in:

[21:22] <jnthn> *sigh*

[21:23] <jnthn> I forget the ins and outs of that

[21:24] <jnthn> But effectively, some version of one of the Test::META dependencies had an issue, and having an old version of that can cuase issues

[21:26] <[Coke]> one sec.

[21:26] <[Coke]> I have Test::META:ver('0.0.9'):auth('github:jonathanstowe')

[21:27] <jnthn> Well, IO::Socket::Async::SSL no longer depends on it, as of my latest push :)

[21:28] <[Coke]> ... zef upgrade Test::META says "are already at their latest versions", then shows "0.0.13", but 'zef info Test::META' shows 0.0.9

[21:29] <jnthn> That may or may not be a now-fixed zef bug where version comps were done wrong

[21:29] <[Coke]> ... This is why I never end up doing any interesting work. :)

[21:30] <jnthn> Yes, well, I'd like to, and I've wasted too many hours of my time on Test::META related shenanigans, so it's banned in any module I maintain from here on in. :)

[21:30] <[Coke]> ok. upgrading zef.

[21:33] * [Coke] goes back to 'zef install cro' to see what's next.

[21:35] <[Coke]> pretty sure zef has cached that version of IO::Socket::Async::SSL (since there was no version bump). seeing if I can force it.

[21:37] <jnthn> I did a version bump a few minutes ago

[21:37] <[Coke]> zef was still trying to install 0.2, doing an install from a git clone.

[21:37] <jnthn> Since there was a few other PRs merged since the last bump also :)

[21:37] <jnthn> But I guess it takes a bit of time for that to be picked up on

[21:38] <[Coke]> are the tests very slow?

[21:40] <[Coke]> ... ran it once. very slow, nothing happened, killed it, re-ran it, boom done.

[21:42] <[Coke]> Zoffix: now getting the same Test::META error on https://github.com/zoffixznet/perl6-IO-Path-ChildSecure

[21:44] <[Coke]> is jonathanstowe on here?

[21:45] <[Coke]> moving over to toolchain

[21:45] <geekosaur> pretty sure you're talking to him

[21:46] <jnthn> geekosaur: Heh, no, I'm not that Jonathan :)

[21:50] <Zoffix> that jonathan is RabidGravy

[21:50] <Zoffix> FWIW, I've just pushed a commit removing Test::META from IO::P::ChildSecure deps; since it's an author test. Gonna do the same for all my modules later on.

[21:52] <Zoffix> [Coke]: though I think that error is cause your zef's too old. Try  zef --force --/cached install https://github.com/ugexe/zef/archive/master.zip

[21:52] * Zoffix &

[21:56] <[Coke]> Zoffix: my zef is 0.1.27

[21:57] <[Coke]> doesn't --force also disable tests?

[21:58] <[Coke]> jnthn: ok: back to Cro::SSL test failure.

[21:58] <[Coke]> # Failed test 'Can connect to a Cro::SSL::Listener with ALPN set up with ALPN from client'

[21:59] <[Coke]> clone-ing.

[22:01] <[Coke]> Unhandled exception in code scheduled on thread 12

[22:01] <[Coke]> Cannot locate symbol 'SSL_CTX_set_alpn_select_cb' in native library 'libssl.dylib'

[22:03] <jnthn> Ah.

[22:04] <jnthn> Please file that one. We should be detecting when the current SSL library version doesn't support ALPN.

[22:04] <jnthn> I suspect some tests aren't doing that.

[22:04] <jnthn> (the detection function is already there, just perhaps not being called where it should be)

[22:05] <[Coke]> jnthn: https://github.com/croservices/cro-ssl/issues/1

[22:06] <jnthn> [Coke]++

[23:41] <[Coke]> rakudo-j dead?

[23:43] <[Coke]> https://gist.github.com/coke/884246d2b85ad8853c2a40bea76def61

[23:47] <MasterDuke> [Coke]: i believe it was the commit (nqp or rakudo, not sure) removing . from some lib path
