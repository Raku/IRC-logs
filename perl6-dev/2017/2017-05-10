[00:47] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1080: Test instantiating non-class has its name in error

[00:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1080

[00:57] <Geth> ¦ rakudo/nom: 4666505570 | MasterDuke17++ | t/05-messages/01-errors.t

[00:57] <Geth> ¦ rakudo/nom: Test instantiating non-class has its name in error

[00:57] <Geth> ¦ rakudo/nom:

[00:57] <Geth> ¦ rakudo/nom: For RT #122232

[00:57] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4666505570

[00:57] <Geth> ¦ rakudo/nom: 6435933a1d | (Zoffix Znet)++ (committed using GitHub Web editor) | t/05-messages/01-errors.t

[00:57] <Geth> ¦ rakudo/nom: Merge pull request #1080 from MasterDuke17/tests_for_RT122232

[00:57] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=122232

[00:57] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=122232

[00:57] <Geth> ¦ rakudo/nom:

[00:57] <Geth> ¦ rakudo/nom: Test instantiating non-class has its name in error

[00:57] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6435933a1d

[00:58] <MasterDuke_> thanks, gonna resolve that ticket now

[01:25] <MasterDuke_> j: my @a; dd [>>+<<] @a

[01:25] <camelia> rakudo-jvm fb4f16: ( no output )

[01:26] <MasterDuke_> m: my @a; dd [>>+<<] @a

[01:26] <camelia> rakudo-moar 643593: OUTPUT: «Too few positionals passed; expected 2 arguments but got 0␤  in block <unit> at <tmp> line 1␤␤»

[01:47] <Geth> ¦ roast: 1244df8c4a | MasterDuke17++ | S03-metaops/reduce.t

[01:47] <Geth> ¦ roast: Test reduce metaop of hyper metaop with ...

[01:47] <Geth> ¦ roast:

[01:47] <Geth> ¦ roast: 0 and 1 element arrays.

[01:47] <Geth> ¦ roast:

[01:47] <Geth> ¦ roast: RT #122475

[01:47] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1244df8c4a

[01:47] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=122475

[01:47] <MasterDuke_> j: my @a = $(1, 2, 3); dd [>>+<<] @a;

[02:44] <MasterDuke_> m: say &OUR::bar()

[02:44] <camelia> rakudo-moar 643593: OUTPUT: «Cannot find method 'Any' on object of type List␤  in block <unit> at <tmp> line 1␤␤»

[03:01] <MasterDuke_> m: my %h{Any} of Str; %h<a>=2

[03:01] <camelia> rakudo-moar 643593: OUTPUT: «Type check failed in binding to parameter 'assignval'; expected Str but got Int (2)␤  in block <unit> at <tmp> line 1␤␤»

[03:02] <MasterDuke_> m: my %h of Str; %h<a>=2

[03:02] <camelia> rakudo-moar 643593: OUTPUT: «Type check failed in assignment to %h; expected Str but got Int (2)␤  in block <unit> at <tmp> line 1␤␤»

[03:03] <MasterDuke_> that first error is LTA. what is `parameter 'assignval'`?

[03:03] <MasterDuke_> bisect: my %h{Any} of Str; %h<a>=2

[03:03] <bisectable6> MasterDuke_, Bisecting by output (old=2015.12 new=6435933) because on both starting points the exit code is 1

[03:03] <bisectable6> MasterDuke_, bisect log: https://gist.github.com/4403a1a13e795dea893ddca2ae8cef07

[03:03] <bisectable6> MasterDuke_, (2016-02-18) https://github.com/rakudo/rakudo/commit/9983c2c8434ed81c532a5706996f284283b48d0a

[03:04] <MasterDuke_> c: all my %h{Any} of Str; %h<a>=2

[03:05] <committable6> MasterDuke_, https://gist.github.com/1d16e219f69480339b306130bc4eb987

[03:06] <MasterDuke_> bisect: old=2015.10 new=2015.11 my %h{Any} of Str; %h<a>=2

[03:06] <bisectable6> MasterDuke_, Bisecting by output (old=2015.10 new=2015.11) because on both starting points the exit code is 1

[03:06] <bisectable6> MasterDuke_, bisect log: https://gist.github.com/4b5c9a27278501e664cb333037ee8b2c

[03:06] <bisectable6> MasterDuke_, (2015-11-18) https://github.com/rakudo/rakudo/commit/06729d91e6e2d0c96ee700012827677ee518b737

[07:13] <lizmat> Files=1192, Tests=56909, 202 wallclock secs (12.06 usr  4.60 sys + 1198.63 cusr 116.24 csys = 1331.53 CPU)

[07:51] <lizmat> commute to PTS@Lyon   &

[10:18] <Zoffix> m: my $i = -0x8000000000000000; say ($i +> 32)

[10:18] <camelia> rakudo-moar 643593: OUTPUT: «-1␤»

[10:19] <Zoffix> "a < 0 && b > 31 ?? -1 # temp fix for RT#126942, remove if fixed otherwise"

[10:19] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=126942

[10:20] <Zoffix> m: dd nqp::bitshiftr_I(-0x8000000000000000, 32, Int)

[10:20] <camelia> rakudo-moar 643593: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Could not find nqp::bitshiftr_I, did you forget 'use nqp;' ?␤at <tmp>:1␤------> 3itshiftr_I(-0x8000000000000000, 32, Int)7⏏5<EOL>␤»

[10:20] <Zoffix> m: use nqp; dd nqp::bitshiftr_I(-0x8000000000000000, 32, Int)

[10:20] <camelia> rakudo-moar 643593: OUTPUT: «-2147483648␤»

[10:20] <Zoffix> m: use nqp; dd nqp::bitshiftr_I(-0x8000000000000000, 64, Int)

[10:20] <camelia> rakudo-moar 643593: OUTPUT: «-1␤»

[10:20] <Zoffix> m: use nqp; dd nqp::bitshiftr_I(-0x8000000000000000, 40, Int)

[10:20] <camelia> rakudo-moar 643593: OUTPUT: «-8388608␤»

[10:20] <Zoffix> m: use nqp; dd nqp::bitshiftr_I(-0x8000000000000000, 70, Int)

[10:20] <camelia> rakudo-moar 643593: OUTPUT: «-1␤»

[10:20] <Zoffix> m: use nqp; dd nqp::bitshiftr_I(-0x8000000000000000, 63, Int)

[10:20] <camelia> rakudo-moar 643593: OUTPUT: «-1␤»

[10:20] <Zoffix> m: use nqp; dd nqp::bitshiftr_I(-0x8000000000000000, 61, Int)

[10:20] <camelia> rakudo-moar 643593: OUTPUT: «-4␤»

[10:21] <Zoffix> So looks like it works, it's the kludge that actually is problematic

[10:21] <Zoffix> will nix it in couple of hours to fix 131278

[10:39] <Zoffix> m: use nqp; dd nqp::bitshiftr_I(-0x8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, 700, Int)

[10:39] <camelia> rakudo-moar 643593: OUTPUT: «-2048␤»

[10:40] <Zoffix> And bigint works too so I guess that NIY can go too

[10:45] <Zoffix> And removing all that stuff makes the op 55% faster too :)

[10:45] <Zoffix> ZofBot: this is the best bug fix ever!

[10:45] <ZofBot> Zoffix, See S06 for more about binding

[10:54] <[TuxCM]> running timing from train

[11:02] <[TuxCM]> This is Rakudo version 2017.04.3-210-g6435933a1 built on MoarVM version 2017.04-57-g8d8a09b9

[11:02] <[TuxCM]> csv-ip5xs        2.931

[11:02] <[TuxCM]> test            12.573

[11:02] <[TuxCM]> test-t           4.248 - 4.259

[11:02] <[TuxCM]> csv-parser      12.614

[12:10] <Zoffix> Timing from the train? Cue Prof. Einstein :)

[12:11] <Zoffix> Not fair! You made it run slower by moving at some velocity :)

[12:14] <timotimo> timings have to be performed at the same distance from sea level and far away from any big mountains

[12:24] <moritz> as long as you measure the time within your own frame of reference, all is good :-)

[12:24] <Zoffix> :)

[12:24] <timotimo> you must be careful when the train is going through curves, though

[12:25] <moritz> not really

[12:25] <timotimo> sideways acceleration will throw you out of an equivalent inertial reference frame to outside of curves!

[12:25] <moritz> you only have to be careful if the system you're timing is in a different frame of reference than your clock

[12:25] <timotimo> what if an ICE drives though a curve of radius 100 meters at 300 km/h?

[12:26] <moritz> then you have other things to worry about :-)

[12:26] <timotimo> :D

[12:26] <moritz> like, picking up all your body parts

[12:27] <timotimo> wolframalpha says if the mass is 1kg it'll just be 69.44 newtons

[12:27] <timotimo> so you can just multiply that with your body weight i guess?

[12:28] <Zoffix> That's 70g. very fatal

[12:28] <moritz> Zoffix: more like 7g

[12:28] <moritz> Zoffix: 1g is 9.8m/ss

[12:28] <Zoffix> Ah right

[12:28] <timotimo> hey it's 2200x times the "thust of the NSTAR ion engine tested on NASA's space probe"

[12:28] <Zoffix> heh

[12:28] <moritz> so, something that you can survive if you're strapped tightly in a cushioned seat

[12:29] <moritz> but sitting in a regular ICE seat, it'll smack you against the nearest wall, and if you're too far away from that wall, you're... very much out of luck

[12:32] <timotimo> oh, you were not refering to grams, you were refering to "times earth's average gravitational acceleration"

[12:32] <timotimo> i thought "man, 70g, yeah, that's so very fatal!"

[12:32] * timotimo looks at 100g of chocolate next to him

[12:42] <Zoffix> ZOFFLOP: t/spec/S11-modules/nested.t

[12:44] <brrt> there are plenty of substances of which 70g is fatal

[12:45] * timotimo finds out that --hash-style=both is not worth a lot for libmoar

[12:45] <timotimo> to be exact: -Wl,--hash-style=both

[12:48] <MasterDuke_> c: 06729d9~1,06729d9 my %h{Any} of Str; %h<a>=2

[12:48] <committable6> MasterDuke_, https://gist.github.com/acaa9422e1c6af787602cd6727bbb3bb

[12:49] <MasterDuke_> jnthn:  any idea why https://github.com/rakudo/rakudo/commit/06729d91e6e2d0c96ee700012827677ee518b737 caused the error messages from ^^^ to lose the name of the variable?

[12:50] <timotimo> oh, it makes zero difference when you're using lazy binding, which is the default

[12:53] <Zoffix> cpan@perlbuild4~/CPANPRC/rakudo (nom)$ ./perl6 -e 'say -15 +> 50'

[12:53] <Zoffix> 0

[12:53] <Zoffix> cpan@perlbuild4~/CPANPRC/rakudo (nom)$ ./perl6 -e 'say -15**1 +> 50'

[12:53] <Zoffix> -1

[12:53] <Zoffix> dafuq?

[12:56] <Zoffix> m: use nqp; say nqp::bitshiftr_I(nqp::decont(-15), nqp::unbox_i(50), Int); say nqp::bitshiftr_I(nqp::decont(-15**1), nqp::unbox_i(50), Int);

[12:56] <camelia> rakudo-moar 643593: OUTPUT: «0␤-1␤»

[12:59] <Zoffix> And I wrote 176 tests for this bug and all of them are green because I used powers to make the numbers to shift -_-

[13:00] <nine> Yeah ye olde truth that tests can never show the absence of bugs, only the presence.

[13:00] <Zoffix> :)

[13:01] <Zoffix> looks to be MoarVM-only

[13:01] * Zoffix digs

[13:09] <Zoffix> Well, this is the easiest fix ever it seems

[13:10] <timotimo> oh?

[13:10] <timotimo> interested to hear what the problem behind this bug was

[13:10] <Zoffix> Yeah, it just sets it to 0 but needs to set to -1

[13:10] <timotimo> hah

[13:10] <Zoffix> :)

[13:10] <timotimo> so not even calculating it wrong

[13:10] <Zoffix> nope

[13:10] <timotimo> just a wrong special case?

[13:10] <Zoffix> Yeah

[13:11] <timotimo> and how does it do it wrong in one case and right in the other?

[13:12] <Zoffix> Dunno, I wonder if MVM_BIGINT_IS_BIG returns true for -15**1

[13:12] <Zoffix> Well, for that case I mean

[13:12] * Zoffix tests

[13:15] <Zoffix> yup, it goes through that path

[13:15] <Zoffix> So, another bug in MVM_BIGINT_IS_BIG ?

[13:16] <timotimo> well, it's supposed to give the same results in both paths

[13:16] <Zoffix> #define MVM_BIGINT_IS_BIG(body) ((body)->u.smallint.flag != 0xFFFFFFFF)

[13:16] <Zoffix> And I guess power op sets that flag?

[13:16] <timotimo> probably, if the result is small

[13:16] <Zoffix> Yeah, it gives same results now that I fixed the stuff

[13:17] <timotimo> i wonder why we don't use smallbigint for -15 there even though we could

[13:17] <timotimo> perhaps we do that for no literals at all

[13:17] <timotimo> that could be a nice little improvement to fix that

[13:17] <Zoffix> mhm

[13:34] <Zoffix> PR sent: https://github.com/MoarVM/MoarVM/pull/593 and I got a Rakudo patch to proper-fix RT#131278 and RT#126942 once that PR is merged

[13:34] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131278

[13:34] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=126942

[13:42] <Zoffix> nine: are you too at the Perl Toolchain thing?

[13:49] * Zoffix &

[13:49] <nine> Zoffix: yep :)

[13:49] <Zoffix> Ah cool :)

[14:01] <timotimo> Zoffix: could it be you've got the fakely-big ints part reversed? is it really -15**1 that doesn't know to set the "not actually big" flag?

[14:01] <timotimo> i thought it was the other way around, but i didn't actually check

[14:01] * timotimo re-reads

[14:02] <Zoffix> timotimo: MVM_BIGINT_IS_BIG returns true for -15**1

[14:02] <timotimo> ah, ok, so BIGINT_IS_BIG rightly returns false for -15

[14:02] <timotimo> that's a relief at least

[14:02] <timotimo> but we'll also want to have a piece of code in there that can put the result of ** into a not-actually-big bigint

[14:03] <Zoffix> s: &infix:<**>, \(-15, 1)

[14:03] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/6435933/src/core/Int.pm#L302

[14:03] <timotimo> nqp-level code has no way to set/clear/read that flag

[14:03] <timotimo> oh, actually

[14:03] <timotimo> i think we have a way to read it

[14:03] <timotimo> m: use nqp; say nqp::isbig_I(-15); say nqp::isbig_I(-15**1)

[14:03] <camelia> rakudo-moar 643593: OUTPUT: «0␤0␤»

[14:04] <timotimo> maybe not the same thing

[14:04] <Zoffix> m: use nqp; say nqp::bitshiftr_I(nqp::pow_I(-15, 1, Num, Int), nqp::unbox_i(50), Int);

[14:04] <camelia> rakudo-moar 643593: OUTPUT: «-1␤»

[14:04] <Zoffix> m: use nqp; say nqp::bitshiftr_I(nqp::pow_i(-15, 1), nqp::unbox_i(50), Int);

[14:04] <camelia> rakudo-moar 643593: OUTPUT: «0␤»

[14:06] * Zoffix wants a SourceBaby for Moar

[14:07] <Zoffix> Give it an NQP op and it tells you where moarvm source for it is at

[14:07] <nine> What are repossession conflicts again?

[14:07] <timotimo> that'd be neat, but don't forget there's also "virtual" ops you'd need the right repr for

[14:07] <timotimo> nine: when a compilation unit does some kind of change to some sort of object, it'll claim the source object for itself and make the modifications

[14:08] <timotimo> that way when a different compunit tries to change the same object in a different way, that's the kind of conflict you get

[14:09] <nine> timotimo: mind if I paste that into a comment?

[14:09] <timotimo> i'm not sure if it's accurate enough

[14:09] <nine> It makes sense of me and for sure is better than nothing :0

[14:09] <nine> :)

[14:10] <timotimo> if it's a comment in the code that can be edited later, that's fine

[14:10] <timotimo> a commit message, not so much :P

[14:10] <nine> Yeah, I'll just add it to the comment above resolve_repossession_conflicts

[14:11] <timotimo> OK, cool

[14:26] <Zoffix> huh, interesting. use nqp; say nqp::pow_I(-15, 1, Num, Int) apparently executes MVM_bigint_pow twice if my debug print statements are to be believed :S

[16:18] <Zoffix> ^ probably just another `pow` done during parsing or whatever

[16:21] <Geth> ¦ rakudo/fix-right-shift: ef29bb9f41 | (Zoffix Znet)++ | src/core/Int.pm

[16:21] <Geth> ¦ rakudo/fix-right-shift: Fix right shift op; make it 55% faster

[16:21] <Geth> ¦ rakudo/fix-right-shift:

[16:21] <Geth> ¦ rakudo/fix-right-shift: - Fix underlying MoarVM problem:

[16:21] <Geth> ¦ rakudo/fix-right-shift:     https://github.com/MoarVM/MoarVM/pull/593

[16:21] <Geth> ¦ rakudo/fix-right-shift: - Remove the kludge and bigI check, making the op 55% faster

[16:21] <Geth> ¦ rakudo/fix-right-shift: - Fixes RT#126942: https://rt.perl.org/Ticket/Display.html?id=126942

[16:21] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=126942

[16:21] <Geth> ¦ rakudo/fix-right-shift: - Fixes RT#13278: https://rt.perl.org/Ticket/Display.html?id=131278

[16:21] <Geth> ¦ rakudo/fix-right-shift: review: https://github.com/rakudo/rakudo/commit/ef29bb9f41

[16:22] <Geth> ¦ roast/fix-right-shift: b7fac2678c | (Zoffix Znet)++ | S03-operators/bit.t

[16:22] <Geth> ¦ roast/fix-right-shift: Test right bit shift for negative numbers

[16:22] <Geth> ¦ roast/fix-right-shift:

[16:22] <Geth> ¦ roast/fix-right-shift: RT#126942: https://rt.perl.org/Ticket/Display.html?id=126942

[16:22] <Geth> ¦ roast/fix-right-shift: RT#13278: https://rt.perl.org/Ticket/Display.html?id=131278

[16:22] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=126942

[16:22] <Geth> ¦ roast/fix-right-shift: review: https://github.com/perl6/roast/commit/b7fac2678c

[16:31] <Geth> ¦ rakudo/nom: 65c0786d3d | (Zoffix Znet)++ | t/05-messages/01-errors.t

[16:31] <Geth> ¦ rakudo/nom: Improve test

[16:31] <Geth> ¦ rakudo/nom:

[16:31] <Geth> ¦ rakudo/nom: - Test for larger string in error message

[16:31] <Geth> ¦ rakudo/nom: - Addresses https://github.com/rakudo/rakudo/pull/1080#issuecomment-300454314

[16:31] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/65c0786d3d

[17:00] <Zoffix> Sheesh... All the names are taken!

[17:01] <Zoffix> I even went as whacky as "SpaceBear web framework"... And lo and behold: https://github.com/breuleux/spacebear

[17:01] <Zoffix> Not only is the name taken but it's also a web framework -_-

[17:05] <timotimo> >_<

[17:05] * Zoffix goes with `Tardigrade` and using `TG::` namespace

[17:52] <[Coke]> d

[18:08] <Zoffix> So OSCON is happening? Do we have any Perl 6 stuff at it this year?

[18:08] * Zoffix glances at DrForr

[18:18] <Zoffix> Nothing really comes up when searching for perl so I guess not :)

[18:18] <timotimo> yeah, drforr did a perl6 thing

[18:18] <timotimo> i saw it on his twitter

[18:18] <Zoffix> This year?

[18:18] <Zoffix> Aye

[18:19] <Zoffix> Sweet

[18:19] <Zoffix> Now I see it: https://conferences.oreilly.com/oscon/oscon-tx/public/schedule/detail/56965

[18:24] <Zoffix> Ah right, there's a link on TPF, but I got confused with "2016" mentioned in URL and thought it was a dated post http://news.perlfoundation.org/2017/05/perl-2016-highlights.html

[18:24] <Zoffix> cool I'm mentioned there :o

[18:24] <Zoffix> :)

[18:27] <perlpilot> Zoffix++  (tardigrade)

[19:29] <Zoffix> ZOFFLOP: t/spec/S17-supply/interval.t

[19:33] <Zoffix> man, why do auto-checkouts of nqp/roast always have some sort of issues with remotes -_-

[19:33] <Zoffix> Permission denied (publickey).

[19:33] <Zoffix> fatal: Could not read from remote repository.

[20:29] <timotimo> Zoffix: probably difference between https:// and ssh:// adn such

[20:29] <timotimo> you can set a GIT_PROTOCOL (or something) env var before Configure.pl does its checkouts

[20:30] <Zoffix> ah cool

[20:35] <samcv> my new GraphemeBreaktest.t breaks when it passes through the fudger

[20:35] <samcv> looks like it goes throug hthe fudger because S15-nfg/GraphemeBreakTest.t     # moar

[20:35] <samcv> in spectest.data?

[20:36] <samcv> how can i get it to run as a plain .t file?

[20:49] <timotimo> without fudging, eh?

[20:49] <timotimo> sometimes the fudger needs a bit of assistance to make fudging commands work, but i don't think it can stumble when there aren't any in the file

[21:00] <samcv> i mean. shouldn't it just do nothing?

[21:00] <samcv> if there's no #?rakudo.moar lines or whatever

[21:00] <samcv> i mean there's plenty of scripts that run as testname.t though some run as testname.t.moarvm

[21:01] <timotimo> yeah, it should do nothing

[21:01] <timotimo> it shouldn't even make a .moarvm.t file

[21:01] <samcv> yeah :\

[21:01] <timotimo> you could diff the .t against the .moar.t or what it is

[21:02] <timotimo> dinner time!

[21:02] <samcv> you mean t.moar?

[21:02] <samcv> it's bytecode it runs

[21:02] <samcv> t/spec/S15-nfg/GraphemeBreakTest.rakudo.moar

[21:02] <samcv> oh it is an actual script my bad

[21:03] <samcv> but it removed a ton of thigngs...

[21:11] <Zoffix> could be due to fudger not doing anything to handle unicode properly?

[21:12] <samcv> argh ok i got it not to mangle most of it

[21:12] <samcv> by using #?DOES num

[21:12] <samcv> at the very top. but now it like... oved some brackets around

[21:12] <samcv> though everything else is ok

[21:12] <samcv> there's no unicode in the file itself

[21:13] <samcv> previously it ate up like 2/3 of the file

[21:14] <Zoffix> There's whole bunch of unicode in https://github.com/perl6/roast/blob/master/S15-nfg/GraphemeBreakTest.t

[21:14] <samcv> now https://gist.github.com/samcv/c415977939cd8f8a62158be1a79074ef

[21:14] <samcv> not in the new version

[21:15] <Zoffix> samcv: ah. Does it still have fudges? The symptoms you describe sound like a fudged loop where you wrote, say `#?rakudo.moar 10 todo` when it should be 1

[21:15] <Zoffix> What's the full content of the file?

[21:16] <Geth> ¦ nqp: 9763728215 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[21:16] <Geth> ¦ nqp: Bump Moar

[21:16] <Geth> ¦ nqp:

[21:16] <Geth> ¦ nqp: Moar VM bump brought: https://github.com/MoarVM/MoarVM/compare/2017.04-56-g8ad18b8...2017.04-62-g362277b

[21:16] <Geth> ¦ nqp:

[21:16] <Geth> ¦ nqp: 362277b Better version of patch to fix right shifting negative smallints

[21:16] <Geth> ¦ nqp: f8bc328 Merge pull request #593 from zoffixznet/fix-bitshiftr_I

[21:16] <Geth> ¦ nqp: 9d7bee4 Use -1 instead of 0 when long right-shifting negative smallints

[21:16] <Geth> ¦ nqp: 957759c Merge pull request #591 from samcv/master

[21:16] <Geth> ¦ nqp: 3e4ed6b Add can_fit_into_8bit funct, put logic used many places into one funct

[21:16] <Geth> ¦ nqp: 8d8a09b telemeh can apparently bring in a stray dependency

[21:16] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9763728215

[21:16] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.04-56-g8ad18b8...2017.04-62-g362277b

[21:16] <Geth> ¦ rakudo/nom: 66e8e72c02 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[21:16] <Geth> ¦ rakudo/nom: Bump NQP

[21:16] <Geth> ¦ rakudo/nom:

[21:16] <Geth> ¦ rakudo/nom: NQP bump brought:

[21:16] <Geth> ¦ rakudo/nom: https://github.com/perl6/nqp/compare/2017.04-92-g50a05bb...2017.04-96-g9763728

[21:16] <Geth> ¦ rakudo/nom: 9763728 Bump Moar

[21:16] <Geth> ¦ rakudo/nom: 674cb40 [js] Handle all the modes that can be passed to nqp::open

[21:16] <Geth> ¦ rakudo/nom: 66eae59 [js] Remove debugging leftover

[21:16] <Geth> ¦ rakudo/nom: <…commit message has 10 more lines…>

[21:16] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/66e8e72c02

[21:16] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.04-92-g50a05bb...2017.04-96-g9763728

[21:16] <Geth> ¦ rakudo: zoffixznet++ created pull request #1081: Fix right shift op; make it 55% faster

[21:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1081

[21:16] <Geth> ¦ rakudo/nom: ef29bb9f41 | (Zoffix Znet)++ | src/core/Int.pm

[21:16] <Geth> ¦ rakudo/nom: Fix right shift op; make it 55% faster

[21:16] <Geth> ¦ rakudo/nom:

[21:16] <Geth> ¦ rakudo/nom: - Fix underlying MoarVM problem:

[21:16] <Geth> ¦ rakudo/nom:     https://github.com/MoarVM/MoarVM/pull/593

[21:17] <Geth> ¦ rakudo/nom: - Remove the kludge and bigI check, making the op 55% faster

[21:17] <Geth> ¦ rakudo/nom: - Fixes RT#126942: https://rt.perl.org/Ticket/Display.html?id=126942

[21:17] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=126942

[21:17] <Geth> ¦ rakudo/nom: - Fixes RT#13278: https://rt.perl.org/Ticket/Display.html?id=131278

[21:17] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ef29bb9f41

[21:17] <Geth> ¦ rakudo/nom: d6798bfe60 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/core/Int.pm

[21:17] <Geth> ¦ rakudo/nom: Merge pull request #1081 from rakudo/fix-right-shift

[21:17] <Geth> ¦ rakudo/nom:

[21:17] <Geth> ¦ rakudo/nom: Fix right shift op; make it 55% faster

[21:17] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d6798bfe60

[21:17] <Geth> ¦ roast: zoffixznet++ created pull request #266: Test right bit shift for negative numbers

[21:17] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/266

[21:17] <Geth> ¦ roast: 02d1f9d0f6 | (Zoffix Znet)++ (committed using GitHub Web editor) | S03-operators/bit.t

[21:17] <Geth> ¦ roast: Test right bit shift for negative numbers (#266)

[21:17] <Geth> ¦ roast:

[21:17] <Geth> ¦ roast: RT#126942: https://rt.perl.org/Ticket/Display.html?id=126942

[21:17] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=126942

[21:17] <Geth> ¦ roast: RT#13278: https://rt.perl.org/Ticket/Display.html?id=131278

[21:17] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/02d1f9d0f6

[21:24] <Zoffix> $ ./perl6 t/spec/S03-operators/bit.t

[21:24] <Zoffix> Segmentation fault

[21:24] <Zoffix> :(

[21:25] <Zoffix> after making this change: https://gist.github.com/zoffixznet/2d017e9ac1fb50b9b71b82bbafd89e52

[21:26] <jnthn> Zoffix: With any local MoarVM patches?

[21:26] <jnthn> Ah, I see recent patches went in on that

[21:28] <Zoffix> oh wait, maybe not that change but the rakudo PR merge

[21:28] * Zoffix resets and tests

[21:30] <samcv> Zoffix, you pulled in my changes right?

[21:31] <Zoffix> samcv: yeah. Problem is, rakudo's tests didn't exercise your changes at all, because of a kludge

[21:31] <samcv> those two tests you gave me worked

[21:31] <samcv> hm

[21:31] <samcv> the ones you said didn't work before

[21:31] <samcv> <Zoffix> And in rakudo `./perl6 -e '2 +> 100'` should give 0 and `./perl6 -e '-2 +> 100'` needs to give -1

[21:31] <samcv> these worked with the patch. but you say the function wasn't being used?

[21:32] <Zoffix> Zoffix │ Oh, they might not give that without my rakudo patch, but, this will:

[21:32] <Zoffix> Zoffix │ m: use nqp; say nqp::bitshiftr_I(-2, 50, Int); # wrong; should give -1

[21:32] <Zoffix> Yeah, that one crashes

[21:32] <samcv> works for me

[21:33] <samcv> with my latest pushed in moarvm commit 15 mins ago

[21:33] <samcv> gives me -1

[21:33] <Zoffix> $ ./perl6 -e 'say $*VM.version'

[21:33] <samcv> i have 2017.04.3-207-g6bb1b5b40

[21:33] <Zoffix> v2017.03.232.gf.8.bc.328

[21:34] <samcv> that's yours?

[21:34] <samcv> i have 2017.04-62-g362277b7

[21:35] <Zoffix> Yeah, I don't get it. nqp/tools/build/MOAR... gives 2017.04-62

[21:35] <Zoffix> Well, as good a time as any to blow rakudo dir

[21:36] <samcv> just update moarvm

[21:36] <samcv> i didn't bump nqp's moar revision

[21:36] <samcv> did you assume i bumped it somehow?

[21:37] <Zoffix> I bumped it

[21:37] <samcv> oh ok

[21:37] <samcv> ok i see that now

[21:41] <Zoffix> Yeah, it was just a busted build. I guess it saw my moarvm already at specified version and did not rebuild it

[21:42] <timotimo> yeah, i always go into the individual folders

[21:43] <samcv> not fun. have to figure out why the fudger does this: https://gist.github.com/samcv/c415977939cd8f8a62158be1a79074ef

[21:43] <samcv> to my file

[21:43] <samcv> just moves around my brackets 'for fun'

[21:43] <timotimo> it must find the # before that somehow interesting

[21:43] <timotimo> can you give more context above?

[21:44] <samcv> this is it https://github.com/samcv/Unicode-Grant/blob/master/Grapheme%20Break%20Test%20Grammar.p6 but saved as t/spec/S15/GraphemeClusterBreakTest.t

[21:44] <samcv> and so if you try and make t/spec... for that one. it deletes half of the file

[21:45] <samcv> so now i put #?DOES 2411 on line 7

[21:45] <samcv> and now it does what i showed you above instead of totally destroying everything

[21:45] <timotimo> the only thing i can think of is the ? at the end of one of the comments

[21:45] <timotimo> but unlikely

[21:45] <timotimo> can you throw out the comment block (or all of them) and see if that changes things

[21:46] <samcv> this is it before adding the #?DOES line: https://gist.github.com/4f6da1fd8353ac59cd74771ef31a739d

[21:46] <samcv> hmm k

[21:47] <timotimo> what, it throws out that whole stuff completely?

[21:47] <samcv> yes

[21:47] <samcv> it's awesome

[21:51] <samcv> timotimo, taking out the comments changes nothing

[21:51] <timotimo> buh

[22:01] <samcv> timotimo, moved things around and then it tries removing the whole file again too. like it's really odd. i just want it to not mess with the file

[22:01] <timotimo> hm, is the fudger written in perl 5 or 6?

[22:02] <samcv> perl 5

[22:02] <timotimo> it's 5, yeah

[22:02] <timotimo> i can't 5

[22:02] <Zoffix> samcv: it's the shebang

[22:02] <samcv> oh

[22:03] <timotimo> seriously? the shebang makes it b0rk?

[22:03] <samcv> yay

[22:03] <samcv> now it works... goddamit

[22:03] <samcv> how do we fix this

[22:04] <Zoffix> samcv: amend this regex to ignore shebangs would be my guess: https://github.com/perl6/roast/blob/master/fudge#L206

[22:04] <timotimo> put a check in there for the first line only?

[22:04] <samcv> hmm thx

[22:12] <Geth> ¦ roast: 2b0c18926d | (Zoffix Znet)++ | S03-operators/bit.t

[22:12] <Geth> ¦ roast: Add more +> tests

[22:12] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/2b0c18926d

[22:13] <Geth> ¦ rakudo/nom: 6409ee582e | (Zoffix Znet)++ | src/core/Int.pm

[22:13] <Geth> ¦ rakudo/nom: Remove big int check for +<

[22:13] <Geth> ¦ rakudo/nom:

[22:13] <Geth> ¦ rakudo/nom: It's no longer NYI

[22:13] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6409ee582e

[22:34] <Geth> ¦ roast: samcv++ created pull request #267: [unicode-grant] Commit New version of GraphemeBreakTest.t

[22:34] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/267

[22:35] <samcv> there we go :) finally ready to go

[22:36] <samcv> wow the diff sucks. github didn't realize the file was totally deleted

[22:36] <samcv> so viewing the diff looks terrible

[22:38] <timotimo> heh.

[22:47] <samcv> gonna split up the commits

[22:47] <samcv> ok much better now

[22:48] <samcv> timotimo, wanna quick review so i can merge? https://github.com/perl6/roast/pull/267

[22:48] <samcv> hopefully you approve of the folder layout for 3rdparty

[22:49] <samcv> and the layout of Unicode/9.0.0/ucd/auxilary.... # this is the same layout that's on unicode ftp

[22:49] <samcv> so there won't be any conflicts if we add things in the future

[22:49] <samcv> s/if/when

[22:51] <samcv> wait. nvm github is still dumb. it still shows it as a diff even tho i seperated the deletion commit

[22:59] <timotimo> right, it's a 100% add diff

[22:59] <samcv> yep

[23:00] <samcv> you can just go to the commit i add it and it shows up fine. otherwise it's garbage

[23:01] <timotimo> right

[23:03] <timotimo> i'm having trouble concentrating right now

[23:10] <samcv> ok :)
