[00:01] * samcv crosses fingers and hopes it reduces the spectest time

[00:17] <samcv> wow

[00:18] <MasterDuke> faster?

[00:18] <samcv> 16% faster nqp::index for strings where one is 8bit one in 32 bit

[00:18] <samcv> yes

[00:18] <MasterDuke> nice

[00:18] <samcv> i hijacked my function i use for ignorecase/ignoremark

[00:18] <samcv> added one extra conditional

[00:18] <samcv> and now it works for everything

[00:18] <samcv> :P

[00:19] <samcv> all variations of ignorecase+ignoremark or without

[00:19] <samcv> wheeee

[00:19] <samcv> not going to complain about 16% faster :)

[00:19] <samcv> from 1.87seconds to 1.16

[00:19] <samcv> may be more than 16% faster hmm

[00:20] <samcv> the numbers *look* more than 16% faster

[00:20] <samcv> err wiat no

[00:20] <samcv> before 2.16 after 1.84

[00:24] <samcv> it's called string_equal_at_ignore_case_INTERNAL_loop but now it does everything. so

[00:24] <samcv> it could be ranamed :P

[00:26] <Zoffix> .oO( INTERNAL_loop Perl 6 )

[00:32] <Geth> ¦ nqp: f9ca4f14f0 | (Samantha McVey)++ | tools/build/MOAR_REVISION

[00:32] <Geth> ¦ nqp: Bump MoarVM for Uni fixes and nqp::index 16% speedup in many cases

[00:32] <Geth> ¦ nqp:

[00:32] <Geth> ¦ nqp: 161ec639 Make string_index 16% faster for incompatible string types

[00:32] <Geth> ¦ nqp: e13c30b7 Use MVMint64 for MVM_string_chr (oplist/function mismatch)

[00:32] <Geth> ¦ nqp: 89a9999f Update the README to indicate Unicode 9.0 support

[00:32] <Geth> ¦ nqp: bef5802b Make some fixes to the Unicode data file downloader

[00:32] <Geth> ¦ nqp: fa5158a3 Don't break after ZWJ for Emoji=True + GCB=Other

[00:32] <Geth> ¦ nqp: <…commit message has 8 more lines…>

[00:32] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/f9ca4f14f0

[00:33] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.06-43-g45b008f...2017.06-56-g161ec639

[00:35] <Geth> ¦ rakudo/nom: 4f5a1e20f9 | (Samantha McVey)++ | tools/build/NQP_REVISION

[00:35] <Geth> ¦ rakudo/nom: Bump NQP/Moar for Uni fixes and regex speed improvement

[00:35] <Geth> ¦ rakudo/nom:

[00:35] <Geth> ¦ rakudo/nom: NQP commits brought in:

[00:35] <Geth> ¦ rakudo/nom: f9ca4f14f Bump MoarVM for Uni fixes and nqp::index 16% speedup in many cases

[00:35] <Geth> ¦ rakudo/nom: 8453fac89 Factor out part of compile for easier re-use

[00:35] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4f5a1e20f9

[00:35] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.06-36-gda0dda8...2017.06-38-gf9ca4f14f

[00:36] <samcv> not a bad weekend

[00:59] <MasterDuke> Zoffix: i was just looking into the Goodreads API, and what name do i see attached to a Perl module...

[02:01] <tbrowder> ref PR 1110: i hope someone can verify it works for them, too (linux only for the moment, requires 'install' program, could be changed to straight use of 'cp' instead i think if 'cp -rfp' is portable).

[02:02] <geekosaur> "cp -rfp"'s not going to fly on macos or *bsd

[02:05] <tbrowder> .tell llfourn please look at PR 1110

[02:05] <yoleaux> tbrowder: I'll pass your message to llfourn.

[02:06] <ugexe> i'd be willing to bet it used absolute paths for windows

[02:06] <ugexe> to handle volumes

[02:21] <llfourn> .

[02:21] <yoleaux> 02:05Z <tbrowder> llfourn: please look at PR 1110

[02:21] <llfourn> tbrowder: I think I

[02:21] <llfourn> I think I'm the wrong person to review your PR as I know little about how rakudo is built

[02:22] <llfourn> though I'm interested in your progress in this direction :)

[03:31] <Geth> ¦ rakudo: LLFourn++ created pull request #1111: begin_time_lexical_fixup for constants

[03:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1111

[03:31] <llfourn> #1111!!!!

[06:38] <[Tux]> This is Rakudo version 2017.06-184-g4f5a1e20f built on MoarVM version 2017.06-56-g161ec639

[06:38] <[Tux]> csv-ip5xs        2.522

[06:38] <[Tux]> test            13.452

[06:38] <[Tux]> test-t           4.171 - 4.196

[06:38] <[Tux]> csv-parser      12.660

[06:38] <[Tux]> Error encoding UTF-8 string: could not encode codepoint 1548168 (0x179F88), codepoint out of bounds. Cannot encode higher than 1114111 (0x10FFFF)

[06:38] <[Tux]> in block <unit> at 88.t line 21

[06:39] <[Tux]> samcv, https://github.com/Tux/CSV/blob/master/88.t

[09:03] <Geth> ¦ rakudo/nom: b4b6b9409c | (Elizabeth Mattijsen)++ | src/core/set_symmetric_difference.pm

[09:03] <Geth> ¦ rakudo/nom: No need to coerce SetHashes to Sets

[09:03] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b4b6b9409c

[09:07] <Zoffix> NeuralAnomaly: status

[09:07] <NeuralAnomaly> Zoffix, [✘] Next release will be in 4 days and 19 hours. Since last release, there are 24 new still-open tickets (3 unreviewed and 0 blockers) and 187 unreviewed commits. See http://perl6.fail/release/stats for details

[09:09] <Geth> ¦ rakudo/nom: c57590fd0c | (Elizabeth Mattijsen)++ | src/core/set_symmetric_difference.pm

[09:09] <Geth> ¦ rakudo/nom: Fix copy-pasto

[09:09] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c57590fd0c

[09:11] <Zoffix> .tell [Coke] Looks like something busted with RT. I saw an email reply to RT#131722 yesterday and it had the 'bug follow up' address in it, but there's nothing on the ticket when vewing on Web

[09:11] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131722

[09:11] <yoleaux> Zoffix: I'll pass your message to [Coke].

[09:33] <Zoffix> .tell kybr you should add yourself to CREDITS file, unless you want to be credited as all-lowercase "karl yerkes": https://github.com/perl6/doc/blob/master/CREDITS

[09:33] <yoleaux> Zoffix: I'll pass your message to kybr.

[09:34] * Zoffix guesses seatek wants to be seatek

[09:35] <Geth> ¦ roast: ff11b6d0c0 | (Elizabeth Mattijsen)++ | 2 files

[09:35] <Geth> ¦ roast: Correct [(^)] tests

[09:35] <Geth> ¦ roast:

[09:35] <Geth> ¦ roast: - [(^)] $a, $b, $c  is not the same as $a (^) $b (^) $c

[09:35] <Geth> ¦ roast: - follows https://github.com/rakudo/rakudo/commit/0cdd6c25355f2a747a6

[09:35] <Geth> ¦ roast: - and https://github.com/rakudo/rakudo/commit/c57590fd0c46c3b2da1e5

[09:35] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ff11b6d0c0

[09:40] <Zoffix> Do a lot of ops have different behaviour between [op] and $a op $b? I always assumed [op] was just a way to avoid repetition between each argument

[09:44] <Zoffix> This is gonna be the last release I do.

[09:45] <Zoffix> .tell AlexDaniel weren't you planning to submit your CLA so you could cut releases? The August release needs a volunteer

[09:45] <yoleaux> Zoffix: I'll pass your message to AlexDaniel.

[10:13] <Zoffix> .ask [Coke] what's the usual timeframe to receive a check from TPF? Wondering if mine is lost or if it usually takes a long time.

[10:13] <yoleaux> Zoffix: I'll pass your message to [Coke].

[10:19] <nine> Zoffix: thank you so much for all the work you have done on cutting so many releases and automating the process! I guess only people who have done it before you can appreciate the worth of that work in full.

[10:21] <Zoffix> zoffix@VirtualBox~/CPANPRC/rakudo (nom)$ git log 2017.06...HEAD | grep -i temporary | wc -l

[10:21] <Zoffix> 5

[10:22] <Zoffix> I question the impact of all these "temporary" fixes. They sweep the problem under the rug, significantly reducing motivation for a proper fix. So what we end up with is a bunch of bandaids all over the codebase.

[10:23] <Zoffix> zoffix@VirtualBox~/CPANPRC/rakudo (nom)$ git log 2015.12...HEAD | grep -i temporary | wc -l

[10:23] <Zoffix> 24

[10:25] <Zoffix> Case in point. This bug was a release blocker but we kludged it with a goal of fixing it "next week". That was on May 19th and it's still kludged: https://github.com/rakudo/rakudo/commit/2f22b701d4cf44fa43500edcc3450718fa7fd468

[10:34] <Zoffix> This commit excluded the entire test file from 6.c-errata tests https://github.com/rakudo/rakudo/commit/662794668b3788ccc4d2b0f364b4ed2639aa8cef

[10:35] <Zoffix> https://irclog.perlgeek.de/perl6-dev/2017-05-25#i_14635444

[10:36] <Zoffix> "Your branch is behind 'origin/6.c-errata' by 19 commits, and can be fast-forwarded."

[10:36] <Zoffix> so much for immutable

[10:36] <nine> 6.c is immutable. 6.c-errata is a moving target. Though at times we are probably too liberal with making changes there.

[10:36] <Zoffix> Never mind. That file isn't in 6.c

[10:39] <Geth> ¦ rakudo/nom: f1fa5ac5ba | (Zoffix Znet)++ (committed using GitHub Web editor) | docs/ChangeLog

[10:39] <Geth> ¦ rakudo/nom: Log changes up to 662794668b3788ccc4d2b0f364b4ed2639aa8cef

[10:39] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f1fa5ac5ba

[10:39] <Geth> ¦ rakudo/nom: 5b0a7f518c | (Zoffix Znet)++ (committed using GitHub Web editor) | docs/release_guide.pod

[10:39] <Geth> ¦ rakudo/nom: Remove Zoffix from  2017-07-15 release

[10:39] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5b0a7f518c

[10:39] <Zoffix> I give up

[10:39] <Zoffix> Fucking shit

[10:56] * lizmat is not seeing the problem with https://github.com/rakudo/rakudo/commit/662794668b3788ccc4d2b0f364b4ed2639aa8cef

[10:56] <lizmat> could someone explain ?

[10:57] <nine> lizmat: 12:36 < Zoffix> Never mind. That file isn't in 6.c

[10:57] <nine> lizmat: I think there is no problem

[10:58] <lizmat> well, apparently it was the straw that broke Zoffix's back  :-(

[10:58] <nine> Yes. I fear we have burned through another valuable core developer :(

[11:04] <lizmat> hmmm... could someone activate dalek again ?

[11:05] <lizmat> seems we've also burned a bunch of bots in the process  :-(

[11:07] * lizmat just committed https://github.com/perl6/roast/commit/1fda005b0740d4dae2041

[11:09] <moritz> I've added the old dalek hooks for perl6/doc and perl6/roast

[11:09] <lizmat> moritz++

[11:10] * lizmat just committed https://github.com/rakudo/rakudo/commit/8afbfe6f0d73184f858090b1

[11:10] <lizmat> guess it missed the hook adding  :-(

[11:10] * nine is setting up Geth on camelia's VM

[11:10] <moritz> rakudo/rakudo is neither perl6/doc nor perl6/roast

[11:11] <moritz> added rakudo/rakudo and perl6/specs hooks too

[11:11] <lizmat> moritz: duh  :-)

[11:11] <nine> For some reason zef fails to find zoffix' modules in the ecosystems. But the repos are all there

[11:12] <lizmat> seems Zoffix removed all of his modules from the ecosystem

[11:12] <tbrowder> nine: see my reply to yr comments on PR 1110

[11:12] <moritz> I don't have the time right now to research where the hooks need to be updated. If somebody misses commits notifications from a repo, please tell me

[11:12] <lizmat> I bet mr_chromatic is now smiling for achieving another of his goald  :-(

[11:12] <lizmat> *goals

[11:14] <moritz> afk

[11:15] <nine> lizmat: nah, you can't put that on him. Zoffix burned bright and fast. I've been worried for quite a while that it may have been too fast :/

[11:19] <nine> Darn: Missing serialize REPR function for REPR VMException (BOOTException)

[11:29] <lizmat> ok, I guess I'll clone all of Zoffix's ecosystem repoi's into some custodian account ?

[11:29] <lizmat> and update the ecosystem to look there ?

[11:42] <moritz> maybe to http://github.com/perl6-community-modules/ ?

[11:43] <lizmat> yeah, probably

[11:45] <lizmat> hmmm. my github foo is insufficient to know how to do that  :p(

[11:46] <lizmat> ah, found it I thihnk

[11:50] <tadzik> ...what on earth happened :o

[11:50] <tadzik> (a rhetorical question, just expressing my surprise)

[11:54] <moritz> people happened

[11:55] * moritz good at senslessly answering rethorical questions

[11:55] <nine> Ok, just added a no precompilation; to lib/Geth/GitHub/Hooks/Preprocessor.pm6

[11:55] <tadzik> nodnod

[11:55] <lizmat> fwiw, I'm forking atm

[11:55] <tadzik> moritz: I'll keep that in mind next time I feel like asking "what's up" :P

[12:00] <dalek> rakudo/nom: c9ee86f | (Zoffix Znet)++ | docs/release_guide.pod:

[12:00] <dalek> rakudo/nom: Revert "Remove Zoffix from  2017-07-15 release"

[12:00] <dalek> rakudo/nom:

[12:00] <dalek> rakudo/nom: This reverts commit 5b0a7f518c182af38def1a72b87a9d30391aeb57.

[12:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c9ee86f458

[12:00] <yoleaux> 19 Jun 2017 19:46Z <AlexDaniel> dalek: It's still alive!!!

[12:02] <Zoffix> Geth should be placed on the hack server. So that if it goes down anyone can restart it.

[12:03] <Zoffix> Same as dalek; it starts on server start and `sudo service dalek restart` works

[12:03] <tadzik> I recently put all kinds of bots from my servers behind supervisord, so that they restart when they get down for any reason

[12:04] <tadzik> I can volunteer to make that happened if anyone wants

[12:04] <nine> Zoffix: I've just got it up and running on geth.niner.name. It's managed by systemd so it will be automatically restarted.

[12:05] <tadzik> ah, I guess systemd does that too :)

[12:05] <Zoffix> nine: if it segfaults, right?

[12:05] <Zoffix> nine: the hooks point to some perl6.party address. Which address is the new one? I'm gonna try to setup a redirect.

[12:05] <nine> https://gist.github.com/niner/58404dc5578f3b816a06e2b8224efba7

[12:06] <nine> That's my service file. Yes it will restart on segfaults

[12:06] <nine> geth.niner.name:8888 (it's camelia's VM)

[12:10] <lizmat> Zoffix: I've forked all of your modules into perl6-community-modules

[12:11] <lizmat> I see you reverted your ecosystem withdrawal

[12:11] <Geth_> ¦ 6.d-prep: f4bc03d072 | (Zoffix Znet)++ | TODO/README.md

[12:11] <Geth_> ¦ 6.d-prep: Fix link; atom--

[12:11] <Geth_> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/f4bc03d072

[12:11] <nine> Zoffix++ # demonstrating how easily we can become dependent on a single person and the strain it puts on them

[12:11] <Zoffix> hm, redirect didn't work.

[12:11] * Zoffix tries somethign elese

[12:11] <lizmat> was that intended to be permanent, or just temporary until I adapted the ecosystem to use perl6-community-modules ?

[12:11] <moritz> we can slowly change all the github hook URLs

[12:12] <Zoffix> lizmat: permanent.

[12:13] <lizmat> Zoffix: ok, then I will refrain from making any ecosystem changes

[12:13] <Zoffix> GitHub doesn't like the redirect. So I'll just keep it running until we change all the URLs

[12:14] <Zoffix> Is geth.niner.name owned by more than one human?

[12:14] <nine> No :(

[12:14] <nine> Though a couple people do have access to that VM

[12:15] <nine> But the VM runs on a physical machine rented by me.

[12:15] <Zoffix> I get "Internal Server Error!" from that address. I think you may have installed the latest HTTP::Server::Tiny instead of version geth likes

[12:16] <Zoffix> nine: what about hack.p6c.org?

[12:16] <Zoffix> It's owned by more than one human, innit? Maybe it'd make sense to put geth there. Since there are many URLs that need to be changed and it's not trivial to know which ones still point to all address

[12:18] <nine> Zoffix: what HTTP::Server::Tiny version do I need? Geth's docs are kinda non-existing ;)

[12:18] <Zoffix> nine: zef --force --/test install https://github.com/tokuhirom/p6-HTTP-Server-Tiny/archive/26df561430699ab2b769c88cb0a68ec702554102.zip

[12:19] <nine> Better?

[12:19] <Geth> ¦ 6.d-prep: f4bc03d072 | (Zoffix Znet)++ | TODO/README.md

[12:19] <Geth> ¦ 6.d-prep: Fix link; atom--

[12:19] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/f4bc03d072

[12:19] <Zoffix> yup

[12:20] <nine> Thanks :)

[12:20] <Zoffix> huggable: geth

[12:20] <huggable> Zoffix, nothing found

[12:21] <Zoffix> huggable: geth :is: Set geth report URL (select application/json and send me everything): http://geth.niner.name:8888/?chan=#perl6-dev

[12:21] <huggable> Zoffix, Added geth as Set geth report URL (select application/json and send me everything): http://geth.niner.name:8888/?chan=#perl6-dev

[12:24] <nine> NeuralAnomaly: status

[12:24] <NeuralAnomaly> nine, [✘] Next release will be in 4 days and 16 hours. Since last release, there are 22 new still-open tickets (0 unreviewed and 0 blockers) and 68 unreviewed commits. See http://perl6.fail/release/stats for details

[12:26] <nine> tbrowder: frankly I would prefer if existing package descriptions would continue to work unchanged. We don't even know which Linux distributions provide rakudo packages. Therefor we'd struggle to notify them about the change.

[12:26] <nine> tbrowder: I'm also not sure what problem the PR actually solves?

[12:27] <nine> (though when I've looked at the PR this morning, I had barely started drinking my coffee)

[12:32] <tbrowder> For me the PR starts the separation between configuration, building, and final installation (the only step with the PR that requires root privileges for system-wide use). it's the way I prefer and am used to for install-from source packages. Others have asked for DESTDIR support and I believe the PR changes cause the --prefix option to provide that with the newly portable ./install directory contents.

[12:35] <tbrowder> Regarding package producers, afaik, they should be reading our install and changelog docs and would know of any changes as they create new packages.

[12:37] <tbrowder> We could add a new doc just for package producers.

[12:41] <tbrowder> One more point: due to the tight coupling between moar, nqp, and rakudo I would not suggest independent installation for other than rakudo, moare, nqp, and jvm core developers

[12:42] <tbrowder> *moar

[12:43] <tbrowder> (That opinion from a linux-only user.)

[12:46] <nine> But those are already separate packages? And it tends to work out well. In fact it was quite some work to separate the different prefixes for the different parts.

[12:52] <[Coke]> if you're a rakudo-only user, you don't care about the separation, but if you're trying to use any of the other bits, you might; given they are designed to be installed separately and the combined config/install in rakudo is a convenience, I'm not sure what bundling them does to help.

[13:14] <AlexDaniel> .

[13:14] <yoleaux> 09:45Z <Zoffix> AlexDaniel: weren't you planning to submit your CLA so you could cut releases? The August release needs a volunteer

[13:14] <Zoffix> m: without Failure.new { say .Set }

[13:14] <camelia> rakudo-moar c9ee86: OUTPUT: «set((HANDLED) Failed␤)␤»

[13:14] <Zoffix> I don't get wouldn't that return a set(), based on this commit? https://github.com/rakudo/rakudo/commit/43fc751be229f526b378b4a876e27b95da252373

[13:14] <AlexDaniel> Zoffix: ok, will do

[13:15] <Zoffix> Ah, nm, it's different on HEAD https://github.com/rakudo/rakudo/blob/nom/src/core/Failure.pm

[13:16] <Zoffix> AlexDaniel++

[13:17] <AlexDaniel> tell dalek It's still alive!!!

[13:17] <AlexDaniel> .tell dalek It's still alive!!!

[13:17] <yoleaux> AlexDaniel: I'll pass your message to dalek.

[13:18] <AlexDaniel> why did dalek report something for rakudo?

[13:18] <nine> AlexDaniel: Geth was unavailable for some time

[13:18] <AlexDaniel> hmhm

[13:18] <moritz> so I switched the rakudo repo to use dalek for reporting

[13:20] <AlexDaniel> ah, I see, ok

[13:20] <AlexDaniel> Zoffix: so you are serious about this stuff, right?

[13:21] <Zoffix> AlexDaniel: about you doing August release? Yeah.

[13:22] <lizmat> afk for another bit&

[13:28] <Zoffix> nine: I think maybe IO::Socket::SSL is missing from geth's env

[13:28] <Zoffix> Geth: ver https://github.com/rakudo/rakudo/commit/1dda86222b4e786c11ef0d2d3a538890d0280887

[13:28] <Zoffix> ^ that should work

[13:28] <Zoffix> Geth_: ver https://github.com/rakudo/rakudo/commit/1dda86222b4e786c11ef0d2d3a538890d0280887

[13:28] <Geth_> Zoffix, version bump brought in these changes: https://github.com/perl6/nqp/compare/2017.06-35-g17c795c...2017.06-36-gda0dda8

[13:31] <nine> Geth: ver https://github.com/rakudo/rakudo/commit/1dda86222b4e786c11ef0d2d3a538890d0280887

[13:31] <Geth> nine, version bump brought in these changes: https://github.com/perl6/nqp/compare/2017.06-35-g17c795c...2017.06-36-gda0dda8

[13:31] <nine> Zoffix: fixed :)

[13:31] <Zoffix> cool

[13:39] <Geth_> ¦ geth: c4e0f48fbb | (Stefan Seifert)++ | META6.json

[13:39] <Geth_> ¦ geth: Add some META data for easier installation

[13:39] <Geth_> ¦ geth: review: https://github.com/perl6/geth/commit/c4e0f48fbb

[13:39] <Geth_> ¦ geth: c90ec1986b | (Stefan Seifert)++ | geth.service

[13:39] <Geth_> ¦ geth: Add a systemd service file

[13:39] <Geth_> ¦ geth: review: https://github.com/perl6/geth/commit/c90ec1986b

[13:39] <tbrowder> ref PR 1110: bummer, not working--must have stayed up too late! but i think it's fixable, closing till fixed...

[13:40] <nine> tbrowder: no sweat, it's not something we'd merge so close before a release anyway :)

[13:43] <tbrowder> but in spite of the close, is the direction not worth it to anyone besides me?

[13:44] <tbrowder> if i find the fix, i think a movable installation directory alone is worth it.

[13:45] <nine> tbrowder: in general I'm all in favor of untangling our installation and making it understandable for a mere mortal.

[13:45] <tbrowder> ok, just checking...

[13:47] <nine> tbrowder: I do wonder though that making rakudo relocateable is so easy. I remember seeing lots of absolute paths and mention of issues.

[13:48] <tbrowder> yes, that's true, and i thought my false fix was too easy to be true!

[13:49] <nine> Also do the precompiled files really work after moving?

[13:51] <nine> Well that part would not be so surprising, as I made the source file and dependency references relative to the symbolic name of the repo. And that's the mechanism CompUnit::Repository::Staging is based on.

[13:52] <nine> I just tend to be nervous around that area. It was so hard to get working right :)

[13:53] <tbrowder> well, i don't know because i obviously didn't do a thorough test. if/when i get it working, i need to have a good test suite for sure. and i understand yr nervousness for sure!

[13:56] <tbrowder> if i can get a new make test target equiv to "make test" but for the --prefix dir would that suffice?

[13:58] <dalek> rakudo/nom: fcf8de1 | (Zoffix Znet)++ | docs/ChangeLog:

[13:58] <dalek> rakudo/nom: Log all commits to date

[13:58] <dalek> rakudo/nom:

[13:58] <dalek> rakudo/nom: Logs commits:

[13:58] <dalek> rakudo/nom: 00dc4947 04746490 05c255c1 06379113 099a84b4 0cdd6c25 10f840fc 11b02d2c

[13:58] <dalek> rakudo/nom: 19a1caa3 19be8722 1a4d9493 1ab4fd80 1b6d048b 1c0ed61a 1dda8622 201a0bfb

[13:58] <dalek> rakudo/nom: 25047984 2a88c20c 2a8d1e7c 2ce5b678 3058ba0d 30619e8d 327c8409 35cc7c0e

[13:58] <yoleaux> 13:17Z <AlexDaniel> dalek: It's still alive!!!

[13:58] <dalek> rakudo/nom: 36823ab1 38509227 3d2a521c 40b0169d 41ed2c03 43c1767b 43fc751b 4693ec86

[13:58] <dalek> rakudo/nom: 47678077 4894a75d 48c18f58 495fb5f8 49b1b03b 4a37de7b 4c91b522 4da85879

[13:58] <dalek> rakudo/nom: 4f5a1e20 5a80412c 5ab4036e 62d54c75 640404fc 66aef589 6d4691fb 6dae179a

[13:58] <dalek> rakudo/nom: 71ffb164 72e5d614 73c3bcc6 75797af3 79ce1a99 7f109ed7 80b3e89b 82301128

[13:58] <dalek> rakudo/nom: 86e7b2bd 8afbfe6f 92f8abe0 93d81d61 9936a3be 9a2127f2 9c04dfc4 9d14a724

[13:58] <dalek> rakudo/nom: a2090821 a2133dbc a2a0d5c6 a95c70bd abfd7d95 ad9ed1cb ae4c04ce b2d2bf59

[13:58] <dalek> rakudo/nom: b31b159c b3916926 b4561229 b66d8783 bacaa051 bde28209 c226b71a c4e14731

[13:58] <dalek> rakudo/nom: c585f370 c65652d8 c727462c c76d9324 c7922f14 cb06ebac d067abf4 d0995f68

[13:58] <dalek> rakudo/nom: d1838461 d39f7b9a d5d3bd27 d765f186 d7e10466 d8c94353 da6c6584 e1e9091f

[13:58] <dalek> rakudo/nom: e20817fb e4f3358f f03a176c f6d4fbd2 f71cbed4 f72c97cb fe7ea124 fff43337

[13:58] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fcf8de15b5

[13:58] <tbrowder> e.g. in the same build directory, after "make install" run "make test-site-install"

[13:59] <dalek> rakudo/nom: 373b4ea | (Zoffix Znet)++ | docs/release_guide.pod:

[13:59] <dalek> rakudo/nom: List AlexDaniel as release manager for 2017.08 release

[13:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/373b4ea4d7

[13:59] <timotimo> ZofBot: i'm a fan of the word "overflop" noo

[13:59] <ZofBot> timotimo, lookup array aha finish_parameterizing has a "XXX handle possible race" comment doesn't seem to break any more with a mutex added to it have you already fixed it? it may not be the fix jnthn wanted :) :) let's see what he says too late I guess, but now I have the SEGV in gdb turns out that there are

[13:59] <timotimo> now*

[13:59] <timotimo> er Zoffix i meant

[14:01] <nine> tbrowder: it's hard to anticipate the different failure modes. If I were to test that precomp stuff, I'd run something with RAKUDO_MODULE_DEBUG=1 and check if it does indeed load the installed precomp files.

[14:02] <tbrowder> nine: roger, thnx!

[14:06] <dalek> rakudo/nom: cb43086 | (Zoffix Znet)++ | docs/ChangeLog:

[14:06] <dalek> rakudo/nom: Fix typo; timotimo++

[14:06] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cb43086348

[15:22] <Zoffix> buggable: 6.d

[15:22] <buggable> Zoffix, ¯\_(ツ)_/¯

[15:23] <stmuk> w.r.t. DESTDIR above .. I think its in both rakudo & nqp but not moarvm

[15:26] <Zoffix> ????????????????????????????????????????????????????????????????????????????????????

[15:26] <Zoffix> 

[15:26] <Zoffix> REMINDER: Next Rakudo release will be this Saturday (July 15ths).

[15:26] <Zoffix> Please check the ChangeLog to ensure your work was correctly logged:

[15:26] <Zoffix> https://github.com/rakudo/rakudo/blob/nom/docs/ChangeLog#L1-L81

[15:26] <Zoffix> 

[15:26] <Zoffix> ????????????????????????????????????????????????????????????????????????????????????

[15:29] <Zoffix> If someone has time, there's a bunch of roast failures on Windows that I'm guessing existed for awhile. Some of them are likely bogus new tests, but a few might be real bugs. Since this R* will be based on this release, would be nice to knock those down as much as possible.

[15:30] <Zoffix> When I tried to debug someone's problem a few days back, precomp was glitching when running with modules from files. it would precomp the first time but running again would give "failed to rename" error and you had to rd /q /s lib\.precomp to get it working again

[15:30] <Zoffix> That was on Windows10

[15:38] <stmuk> I saw 2/3 roast failures about 3 months ago on Windows .. also there are some module test failures

[15:39] <nine> stmuk: MoarVM does support DESTDIR

[15:41] <stmuk> nine: are the exact steps doc'd anyway? there are tickets open suggesting it doesn't work and I had to hack a path to pick up the location of moarvm

[15:42] <stmuk> it's quite possible I was doing it wrong

[15:42] <stmuk> s/anyway/anywhere

[15:42] <nine> stmuk: I don't know. If nothing gets merged from tbrowder++'s changes except for a document on how to package rakudo, I'd consider that a huge success already...

[15:44] <stmuk> I was doing something like https://github.com/rakudo/star/issues/70 only with rakudo itself and not R*

[15:45] <nine> Well if the document just stated unabmiguously that R* is _not_ something that should be packaged for distros, that would already be a success...

[15:50] <stmuk> a list of current packaging attempts would also be useful

[15:50] <stmuk> . o O ( and a grade marking )

[16:42] <lizmat> m: use nqp; dd nqp::elems(nqp::list) < nqp::elems(nqp::list(42)) || 1 < 42  # expected Bool::True

[16:42] <camelia> rakudo-moar cb4308: OUTPUT: «1␤»

[16:42] <lizmat> m: use nqp; dd nqp::elems(nqp::list) < nqp::elems(nqp::list(42))  # without the || it is ok

[16:42] <camelia> rakudo-moar cb4308: OUTPUT: «Bool::True␤»

[16:44] <Zoffix> perhaps this bug? https://github.com/perl6/nqp/issues/332

[16:46] <Zoffix> s: &infix:«<», \((my int $), (my int $))

[16:46] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/cb43086/src/core/Int.pm#L354

[16:46] <Zoffix> m: dd nqp::p6bool(nqp::islt_i((my int $ = 0), (my int $ = 1)))

[16:46] <camelia> rakudo-moar cb4308: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Could not find nqp::islt_i, did you forget 'use nqp;' ?␤at <tmp>:1␤------> 3::islt_i((my int $ = 0), (my int $ = 1))7⏏5)␤»

[16:46] <Zoffix> m: use nqp; dd nqp::p6bool(nqp::islt_i((my int $ = 0), (my int $ = 1)))

[16:46] <camelia> rakudo-moar cb4308: OUTPUT: «Bool::True␤»

[16:46] <Zoffix> m: use nqp; dd (my int $ = 0) < (my int $ = 1)

[16:46] <camelia> rakudo-moar cb4308: OUTPUT: «Bool::True␤»

[16:46] <Zoffix> huh

[16:47] <Zoffix> Ah

[16:47] <Zoffix> m: use nqp; dd (0 < 1) || (1 < 42)

[16:47] <camelia> rakudo-moar cb4308: OUTPUT: «Bool::True␤»

[16:47] <Zoffix> m: use nqp; dd (my int $ = 0) < (my int $ = 1) || (1 < 42)

[16:47] <camelia> rakudo-moar cb4308: OUTPUT: «1␤»

[16:51] <Zoffix> m: use nqp; dd ((my int $ = 1) < 2) || 3

[16:51] <camelia> rakudo-moar cb4308: OUTPUT: «1␤»

[16:51] <Zoffix> Golfier. Something in optimizer, as turning it off gives True

[16:54] <Zoffix> Looks like it converts QAST::Op(chain &infix:«<») to - QAST::Op(islt_i)

[17:01] <Zoffix> New toaster results available

[17:01] <Zoffix> buggable: toast

[17:01] <buggable> Zoffix, Between 2017.06-193-gcb43086 and 2017.06: 7 (0.84%) modules got burnt; 11 (1.32%) got unsucced; 198 (23.80%) out of 832 modules appear unusable. See https://toast.perl6.party/ for details.

[17:04] <dogbert17> what's the difference between burnt and unsucced?

[17:04] <yoleaux> 02:49Z <AlexDaniel> dogbert17: I fully support your work on the ticket queue, sorry I had to reopen two tickets. It's just that besides “rejected” and “resolved” there's also “open - testneeded” status :)

[17:06] <Zoffix> "Status: 7 (0.84%) of modules got burnt (switch from 'Succ' to 'Fail') and 11 (1.32%) of modules got unsucced (switch from 'Succ' to 'Kill', 'Fail', or unknown status). "

[17:06] <dogbert17> aha

[17:08] <Zoffix> Actually a bunch of past SUCCs appear to be bogus. Like MPD::Client succing in the past, but if you look at the log zef just stopped (I think it was that Proc::Async segv bug)_

[17:09] <dogbert17> so the toaster isn't using the latest version then?

[17:10] <Zoffix> Today I only toasted 2017.06-193-gcb43086. The other two were from last time

[17:11] <Zoffix> the last 2 were from 5 days ago

[17:12] <Zoffix> Yeah, don't see any burns that'd indicate something obviously wrong with rakudo

[17:13] <lizmat> Zoffix++  # toasting

[17:13] <Zoffix> Flappers in couple of modules, false SUCCs, and changes to modules made in last 5 days

[17:14] <Zoffix> Gonna run one more toasting on Friday that'll retoast 2017.06

[17:18] <dalek> rakudo/nom: 4b8bc61 | lizmat++ | src/core/set_proper_subset.pm:

[17:18] <dalek> rakudo/nom: Fix <a b>.Bag (<) <a b b>.Bag, spotted by perlawhirl++

[17:18] <dalek> rakudo/nom:

[17:18] <dalek> rakudo/nom: Previously, it was a bit of a mix of Setty and Baggy semantics:

[17:18] <dalek> rakudo/nom: having the keys be identical is ok, as long as at least on of the

[17:18] <dalek> rakudo/nom: keys on the left has a lower number of occurrences.

[17:18] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4b8bc617d3

[17:18] <ugexex> 5 days ago I switched all the quiet procs from :out :err to :!out :!err so I would expect the segfaults to have decreased

[17:18] <lizmat> dinner&

[17:21] <Zoffix> Yeah, they probably did and FAIL modules now complete to the end and end up as FAIL instead of segfaulting which apparently confuses the toaster as to treat it as a SUCC

[17:27] <dogbert17> Zoffix: one of your own modules is on the 'burnt' list

[17:28] <Zoffix> Yeah. Two actually, both are floppers

[17:28] <dogbert17> IO::CatHandle::AutoLines

[17:29] <Zoffix> Oh you mean totally failing

[17:29] <dogbert17> yeah, used the wrong term

[17:30] <Zoffix> Looks like it's the fixed Proc.exitcode used by Testo is-run is now showing up on bogus tests

[17:30] * Zoffix will fix it some other time

[17:35] <dogbert17> cool

[17:45] * Zoffix sees where that optimizer bug is at

[17:45] <Zoffix> Looks like today's the day. Finally break through the optimizer barrier and fix my first optimizer bug.

[17:47] <dogbert17> is it in C, Perl or NQP?

[17:52] <Zoffix> NQP

[18:00] <dogbert17> impressive

[18:00] <Zoffix> buggable: geth

[18:00] <Zoffix> huggable: geth

[18:00] <huggable> Zoffix, Set geth report URL (select application/json and send me everything): http://geth.niner.name:8888/?chan=#perl6-dev

[18:00] <dogbert17> huggable: buggable

[18:00] <huggable> dogbert17, nothing found

[18:00] <Zoffix> Can someone switch rakudo's web hook to http://geth.niner.name:8888/?chan=#perl6-dev and select "application/json" format and select "send me everything"?

[18:05] <Zoffix> ZOFVM: Files=1259, Tests=141156, 118 wallclock secs (20.47 usr  3.09 sys + 2290.23 cusr 181.77 csys = 2495.56 CPU)

[18:10] * lizmat hopes nine or moritz or timotimo see Zoffix' web hook request

[18:12] <Zoffix> .in 20d Zoffix testing: https://brson.github.io/2017/07/10/how-rust-is-tested

[18:12] <yoleaux> Zoffix: I'll remind you on 30 Jul 2017 18:12Z

[18:12] <timotimo> i dont have perms for rakudo

[18:12] <Zoffix> ""All patches built in 58 configurations before landing. All patches tested in 20 configurations before landing"" I can't even think of that many configurations :/

[18:13] <moritz> Zoffix: done

[18:13] <Zoffix> moritz++ thanks

[18:14] <Zoffix> Is +@ for QAST::Op for nqp::if(1, 2, 3) 2 or 3?

[18:14] <Zoffix> Like does it have two children oor 3?

[18:14] <Zoffix> SourceBaby: help

[18:14] <SourceBaby> Zoffix, Use s: trigger with args to give to sourcery sub. e.g. s: Int, 'base'. See http://modules.perl6.org/dist/CoreHackers::Sourcery

[18:15] <moritz> three I think

[18:16] <Zoffix> nqp: use QAST; say(+@(QAST::Op.new(:op<if>, QAST::SVal(:value<x>), QAST::SVal(:value<x>))))

[18:16] <camelia> nqp-moarvm: OUTPUT: «0␤»

[18:17] * lizmat just committed https://github.com/perl6/roast/commit/8b700ba9527932ad6d2a

[18:17] <lizmat> hmmm.. looks like we have a Geth_ but no Geth ?

[18:17] <lizmat> or dalek ?

[18:17] <Zoffix> We have Geth, but the hook got "<h1>Service Unavailable</h1>

[18:17] <Zoffix> <p>The server is temporarily unable to service your

[18:18] <Zoffix> request due to maintenance downtime or capacity

[18:18] <Zoffix> problems. Please try again later.

[18:18] <Geth> ¦ roast: 1fda005b07 | (Elizabeth Mattijsen)++ | S03-operators/set_proper_subset.t

[18:18] <Geth> ¦ roast: Add test for https://irclog.perlgeek.de/perl6/2017-07-10#i_14851116

[18:18] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1fda005b07

[18:18] <lizmat> ahhh  :-)

[18:18] <Zoffix> I had to click re-deliver

[18:18] * Zoffix shrugs

[18:18] <lizmat> ah, but that was my previous roast commit

[18:18] <Zoffix> oh

[18:20] <Zoffix> Don't see the new commit in the hook messages at all (on GitHub)

[18:20] <Zoffix> moritz: any idea why this gives 0?

[18:20] <Zoffix> nqp: use QAST; say(+@(QAST::Op.new(:op<if>, QAST::SVal(:value<x>), QAST::SVal(:value<x>))))

[18:20] <camelia> nqp-moarvm: OUTPUT: «0␤»

[18:21] <lizmat> weird

[18:21] <Zoffix> nqp: use QAST; my $op := QAST::Op.new(:op<if>, QAST::IVal.new( :value(2) ), QAST::IVal.new( :value(2) )); say(+@($op))

[18:21] <camelia> nqp-moarvm: OUTPUT: «2␤»

[18:21] <Zoffix> Oh. OK then

[18:21] <Zoffix> So it's 2 not 3 :)

[18:23] <moritz> 3 if you want an else branch, no?

[18:23] <Zoffix> moritz: oh, right doh

[18:23] <Zoffix> :D

[18:30] <timotimo> probably because you put NQPMu in there twice?

[18:30] <timotimo> before you put .new in there

[18:31] <timotimo> also, yeah, you only put 2 things in there. :op<if> is, of course, just a positional

[18:31] <Geth> ¦ rakudo/nom: 45aef27497 | (Elizabeth Mattijsen)++ | src/core/Rakudo/QuantHash.pm

[18:31] <Geth> ¦ rakudo/nom: Introduce R:Q.MIX-IS-PROPER-SUBSET

[18:31] <Geth> ¦ rakudo/nom:

[18:31] <Geth> ¦ rakudo/nom: Abstracted from set_proper_subset.pm.  Still needs fixing wrt to

[18:31] <Geth> ¦ rakudo/nom: <a b>.Mix (<) <a b b>.Mix returning False rather than True.

[18:31] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/45aef27497

[18:31] <Geth> ¦ rakudo/nom: 008be99eb3 | (Elizabeth Mattijsen)++ | src/core/set_proper_subset.pm

[18:31] <Geth> ¦ rakudo/nom: Use R:Q.MIX-IS-PROPER-SUBSET where possible

[18:31] <Geth> ¦ rakudo/nom:

[18:31] <Geth> ¦ rakudo/nom: This makes Mix (<) Bag and Bag (<) Mix not have to coerce before

[18:31] <Geth> ¦ rakudo/nom: checking.

[18:31] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/008be99eb3

[18:31] <Zoffix> timotimo: ah. Thanks

[18:31] <timotimo> er

[18:31] <timotimo> did i say positional?

[18:31] <timotimo> i meant named, of course

[18:34] <Zoffix> .ask samcv can all the TODOs in t/spec/S15-nfg/emoji-test.t now be unfudged?

[18:34] <yoleaux> Zoffix: I'll pass your message to samcv.

[18:35] <Geth> ¦ rakudo/nom: 83e157012d | (Zoffix Znet)++ | src/Perl6/Optimizer.nqp

[18:35] <Geth> ¦ rakudo/nom: Fix unwanted de-Boolification of 1 arg to nqp::if/unless

[18:35] <Geth> ¦ rakudo/nom:

[18:35] <Geth> ¦ rakudo/nom: Only perform the optimization for if/unless that have the `else`

[18:35] <Geth> ¦ rakudo/nom: clause that would be returned. Otherwise, we can end up returning

[18:35] <Geth> ¦ rakudo/nom: the de-boolified Int instead.

[18:35] <Geth> ¦ rakudo/nom:

[18:35] <Geth> ¦ rakudo/nom: Bug find: https://irclog.perlgeek.de/perl6-dev/2017-07-10#i_14852407

[18:35] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/83e157012d

[18:36] <Zoffix> lizmat: ^ that fixes the dd nqp::elems(nqp::list) < nqp::elems(nqp::list(42)) || 1 < 42 thing

[18:36] <Zoffix> Achievement Unlocked: Fix an Optimizer bug

[18:36] * Zoffix collects all the loot

[18:36] <lizmat> cool!   :-)   Zoffix++

[18:39] <Zoffix> Pushed the test for it too: https://github.com/perl6/roast/commit/b1f116fdd5181274cda1a520194488da82c10a7e

[18:39] <Zoffix> And I think now I fixed roast hook. It was showing up as inactive, so I deleted it and put it back in and now it's showing up as active

[18:39] <lizmat> :-)

[18:40] <lizmat> refrains from ++ing Zoffix, but he deserves it nonetheless  :-)

[18:42] <jdv79> wait.  we blew out another coe dev?

[18:42] <jdv79> *core

[18:42] <jdv79> ouch

[18:42] <lizmat> .oO( coed ev? )

[18:42] <Zoffix> jdv79: no, we didn't

[18:43] <[Coke]> cod veer

[18:43] <jdv79> oh.  thats a relief.

[18:43] <lizmat> indeed, it is  :-)

[18:44] <jdv79> cool

[18:46] <Zoffix> Though I don't think I'll be posting any more blog posts that involve talking to several dozens of people...

[18:47] <Zoffix> Just technical stuff. Seqs part 3; then CatHandle.

[19:10] <jdv79> i look forward to them.

[19:24] <lizmat> afk for a bit&

[20:07] <tbrowder> nine: ref rakudo, i have some success now but won't submit PR without more testing.  my solution for the executable with their hardwired lib paths, etc., is to use shell wrappers scripts. that works so far  for the perl6, nqp, and moar binaries showing their versions, and the perl6 executable commanded alone goes into its REPL mode and can at least do a 'say' without barfing.  I'm looking at copying the test suite

[20:07] <tbrowder> into the --prefix directory but am not sure if that is worth it--opinions appreciated.  can you suggest a specific "something" to run to test the "precomp stuff" with RAKUDO_DEBUG_MODULE=1?

[21:28] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/07/10/2017-28-rakudo-is-hot/

[21:43] * lizmat will fix the set_proper_subset fails in roast after some shuteye

[21:43] <lizmat> good night, #perl6-dev!

[21:45] <Zoffix> lizmat++ good weekly

[21:45] <Zoffix> and good night

[21:50] <AlexDaniel> heh, well, the idea of changing the name to “P6” isn't that bad. It already says exactly that on the logo

[21:53] <Zoffix> The proposal is to tweak the name tho. "SomeWord Perl 6"

[21:53] <Zoffix> If you gonna go with P6, may as well name it "Programatron 5000"

[21:53] <AlexDaniel> well, I think it counts as a tweak also

[22:03] <dogbert17> bisect: printf("%3.3d", 16)

[22:03] <bisectable6> dogbert17, Bisecting by output (old=2015.12 new=83e1570) because on both starting points the exit code is 0

[22:04] <bisectable6> dogbert17, bisect log: https://gist.github.com/a3b63d9573e8fc34b8be381ec7d3e23d

[22:04] <bisectable6> dogbert17, (2017-01-21) https://github.com/rakudo/rakudo/commit/a1c7d01502249bd8bdae5a70ec85847609ca1aba

[22:04] <AlexDaniel> c: a1c7d0150^,a1c7d0150 printf("%3.3d", 16)

[22:04] <committable6> AlexDaniel, ¦a1c7d0150^: « 16» ¦a1c7d01: «016»

[22:05] <dogbert17> i.e. RT #126923

[22:05] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=126923

[22:09] <AlexDaniel> dogbert17: it has some nqp tests: https://github.com/perl6/nqp/commit/ed1b835a7a

[22:09] <AlexDaniel> I wonder if we should have something for that in roast also

[22:09] <Zoffix> fwiw gabor's kill issue on perl6-users is something that I can consistently repro on my toast runs

[22:09] <dogbert17> there's stuff in t/spec/S32-str/sprintf.t as well

[22:09] * Zoffix doesn't have a perl6-users subscription

[22:10] <dogbert17> kill issue?

[22:11] <AlexDaniel> ah right

[22:19] <Zoffix> dogbert17: http://www.nntp.perl.org/group/perl.perl6.users/2017/07/msg3973.html

[22:44] <AlexDaniel> I'm not sure if .kill(9) thingy is expected to work at all

[22:45] <AlexDaniel> it does not kill the process tree, so may this be the reason why something is not killed?

[22:45] <AlexDaniel> does it start working with just .kill() (which sends sighup)?

[22:46] <AlexDaniel> like, I've had this in whateverable for ages: https://github.com/perl6/whateverable/blob/master/Whateverable.pm6#L116

[22:46] <AlexDaniel> iirc for the same reason

[23:14] <samcv> Zoffix, yep all emoji can be untodo'd :D the whole file now passes :D
