[01:15] <Zoffix> :}

[03:50] <japhb> Zoffix: Why does https://github.com/zoffixznet/perl6-buggable/blob/master/lib5/Buggable/CPANUploads.pm#L3 specify 5.26?  What's needed from a Perl 5 that recent?  (My work machine I'm using system perl5, which is 5.18.2 .)

[03:57] <ugexe> postfix deref wasnt introduced until 5.20

[04:10] <japhb> Ugh, at this point I'm pretty sure I've installed more perl5 deps than this module has *lines*

[04:11] <Zoffix> japhb: I just always use latest.

[04:12] * japhb goes the alternate route and starts turning off plugins in order to just test the one he's working on

[04:15] <Zoffix> japhb: I told you awhile back that you can test plugins by running just them; without IRC::Client: perl6 -Ilib -MBuggable::Plugin::Speed -e 'Buggable::Plugin::Speed.irc-to-me: "speed" but role { method reply ($_) { .say } }'

[04:16] * Zoffix .bed()

[04:20] <japhb> Zoffix: *pshaw*  Like I can be expected to remember things.  You assume I have working memory.  :-P

[04:21] <japhb> In all seriousness, I'd mostly forgotten that one.

[04:39] <Zoffix> El_Che: (I was pre-occupied when you asked). In the picture, they're not "Perl 5" people. They're Perl people. The wording on that spread is very deliberate. Perl is the community; "Perl 6" is the language. The spread even nods that not everyone in the Perl community might be fans of "Perl 6"

[04:39] * Zoffix rebeds

[04:59] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1236: Simplify INTERPOLATE and INTERPOLATE_ASSERTION

[04:59] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1236

[04:59] <synopsebot> RAKUDO#1236 [open]: https://github.com/rakudo/rakudo/pull/1236 Simplify INTERPOLATE and INTERPOLATE_ASSERTION

[07:43] <[Tux]> japhb, not from the last couple, but halfway. text added

[07:54] <[Tux]> Rakudo version 2017.10-134-g77142fdb2 - MoarVM version 2017.10-58-gad8618468

[07:54] <[Tux]> csv-test-xs-20      0.456 -  0.500

[07:54] <[Tux]> csv-ip5xs           1.137 -  1.150

[07:54] <[Tux]> test-t              3.291 -  3.701

[07:54] <[Tux]> test               12.156 - 13.051

[07:54] <[Tux]> csv-parser         12.405 - 12.866

[07:54] <[Tux]> csv-ip5xs-20       12.996 - 13.160

[07:54] <[Tux]> test-t-20 --race   20.745 - 21.307

[07:54] <[Tux]> test-t-20          59.331 - 62.623

[09:29] <lizmat> Files=1229, Tests=75830, 317 wallclock secs (14.68 usr  5.29 sys + 2191.09 cusr 214.01 csys = 2425.07 CPU)

[11:16] <Zoffix> I am. That's why people seeing that spread now; to voice their concerns :)

[11:26] <Zoffix> Learning Perl 6 saw another update.

[14:30] <pmurias> does Telemetry have any tests?

[14:31] <lizmat> pmurias: not yet, wondering where they should live though

[14:31] <lizmat> pmurias: also in the middle of a refactor to make it fully pluggable

[14:40] <pmurias> lizmat: I guess where they should live depends on if we want to make Telemetry part of the language spec (if so in roast) if not I guess in rakudo-repo/t/07-telemetry

[14:40] <lizmat> indeed

[14:51] <pmurias> I would hesitate before making Telemetry part of the spec because as usefull and cool as it maybe it seems a bit platform specific

[15:07] <AlexDaniel> yea

[15:10] <El_Che> on the other hand, the "keep the core small"-boat sailed a long time ago ;)

[15:18] <Zoffix> It's a bit weird we've moved TAP::Harness out of the included modules, but keeping Telemetry in.

[15:18] <yoleaux> 14:58Z <wander> Zoffix: I bump version for Pod::To::HTML, but cannot upgrade with zef. also seems doc.perl6.org don't build with the newest Pod::To::HTML. why?

[15:21] <lizmat> Zoffix: no, because Telemetry is tightly bound to a version of Rakudo, TAP::Harness is not (or is it?)

[15:21] <lizmat> afk& for a few hours

[15:21] <Zoffix> Tightly bound how?

[15:22] <Zoffix> The Debuger module too, we keep in the ecosystem,

[15:23] <lizmat> well, the debugger regularly bitrots, so I'm not that's a good reason to keep it there

[15:23] <lizmat> really afk&

[15:52] <ugexe> it is tightly bound because it assumes implementation details of the compiler (X workers, Y workers)

[15:54] <Zoffix> Ah

[15:56] <pmurias> El_Che: it's not about keeping the core small but more about keeping stuff that can't be implemented on different platforms out

[15:58] <pmurias> El_Che: we can still keep it in the rakudo repo without making it a part of roast

[17:09] <El_Che> pmurias: is there a list somewhere about supported platforms?

[17:10] <El_Che> pmurias: I tried and failed to packaged on Solaris (before the stealth EOL from this year) and fwd someone that wanted to try to OpenCSW to get access to sparc machines

[17:11] <El_Che> is it "everywhere libuv runs"?

[17:11] <pmurias> El_Che: I'm not aware of one for moar

[17:11] <pmurias> El_Che: rakudo also has the js and jvm backends

[17:12] <AlexDaniel> just noticed: https://www.nntp.perl.org/group/perl.perl6.compiler/2017/10/msg17371.html

[17:12] <AlexDaniel> there's no body?

[17:16] <Zoffix> ZofBot: it's just a head in a jar!

[17:16] <ZofBot> Zoffix, https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda

[17:17] <Zoffix> I have a body in the copy in my inbox

[17:17] <Zoffix> I notice that mailing list got RT tickets up in it (not GH tho)

[17:18] <AlexDaniel> your announcements render just fine

[17:18] <AlexDaniel> I wonder how my messages are different

[17:18] <Zoffix> AlexDaniel: your old one doesn't either: https://www.nntp.perl.org/group/perl.perl6.compiler/2017/09/msg16767.html

[17:19] <Zoffix> (but it does show up fine in my inbox)

[17:19] <Zoffix> AlexDaniel: I see yours is signed or something

[17:19] <AlexDaniel> yeah, but it's just an attached file

[17:20] <AlexDaniel> could be it, but what now? Not sign my messages? :S

[17:20] * AlexDaniel shrugs

[17:21] <Zoffix> AlexDaniel: dunno. Here's what the messages look in my email viewer. Yours got fancy things and mine's just plain text: https://i.imgur.com/I7TDM6x.jpg

[17:21] <Zoffix> ain't even got a "parts" knob

[17:22] <AlexDaniel> hmm

[17:23] <timotimo> hopefully [email@hidden.address] could help?

[17:25] <AlexDaniel> I'll drop a message there

[17:28] <AlexDaniel> heh, what a cool name

[17:28] <AlexDaniel> “Ask”

[17:28] <ilmari> it's norse for ash (as in the tree)

[17:32] <Geth> ¦ nqp: a051854583 | pmurias++ | src/vm/js/Compiler.nqp

[17:32] <Geth> ¦ nqp: [js] Take a named argument that might be passed

[17:32] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a051854583

[17:32] <Geth> ¦ nqp: 00e8bd16ce | pmurias++ | t/nqp/103-typecache.t

[17:32] <Geth> ¦ nqp: Test accepts_type

[17:33] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/00e8bd16ce

[17:33] <Geth> ¦ nqp: 9d28fccb20 | pmurias++ | src/vm/js/nqp-runtime/strip-marks.js

[17:33] <Geth> ¦ nqp: [js] Add missing file

[17:33] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9d28fccb20

[17:40] <Geth> ¦ rakudo/js: ee213cb451 | pmurias++ | tools/build/NQP_REVISION

[17:40] <Geth> ¦ rakudo/js: [js] Use fixed nqp

[17:40] <Geth> ¦ rakudo/js: review: https://github.com/rakudo/rakudo/commit/ee213cb451

[17:47] <japhb> .ask [Tux] Could you remember the lines in speed-all.log that contain "I'll try to remember to run the timings later today. System is rather busy"?

[17:47] <yoleaux> japhb: I'll pass your message to [Tux].

[17:47] <japhb> .ask [Tux] s:1st/remember/remove/

[17:47] <yoleaux> japhb: I'll pass your message to [Tux].

[18:01] <japhb> .tell Zoffix perl6-buggable PR waiting for you.

[18:01] <yoleaux> japhb: I'll pass your message to Zoffix.

[18:05] <Zoffix> buggable: speed

[18:05] <yoleaux> 18:01Z <japhb> Zoffix: perl6-buggable PR waiting for you.

[18:05] <buggable> Zoffix, ▁▁▅█▄▅▂▃▃▇▄▄▄▅▅█▃▃▆█▄▅↑▇▅▇ dates: 2017-10-26–2017-11-06; range: 19.341s–22.174s; speed: 7% slower (widths: 9/3)

[18:05] <Zoffix> buggable: test-t speed

[18:05] <Zoffix> buggable: speed test-t

[18:05] <buggable> Zoffix, ▂▅▁▂▂▂▃▄▅█▅▇▂▃▄▄▇↑▂▃▁▂▂▂▁▂▃▄▂▃▂█▃▆▄▄▄▄▅▆▄▅▅↑▅▆▅▆▅↑ dates: 2017-10-18–2017-11-06; range: 3.044s–3.701s; speed: 7% slower (widths: 9/3)

[18:05] <Zoffix> neat; japhb++

[18:07] <Zoffix> buggable: speed csv-R

[18:07] <buggable> Zoffix, ▁▁▃▁ dates: 2017-11-05–2017-11-06; range: 0.150s–0.216s; speed: ~0% difference

[18:07] <Zoffix> buggable: speed csv-ruby

[18:07] <buggable> Zoffix, ▃▂▁▁▃▂▁▁ dates: 2017-11-05–2017-11-06; range: 0.145s–0.221s; speed: 21% faster (widths: 4/2)

[18:07] <Zoffix> :O

[18:11] <japhb> Buggable go bye-bye?

[18:11] <japhb> buggable: speed tests

[18:12] <japhb> Huh

[18:13] <Zoffix> buggable: speed tests

[18:13] <buggable> Zoffix, Known performance tests: I'll, csv, csv-R, csv-c, csv-c-20, csv-cc, csv-easy-pp, csv-easy-pp-pi, csv-easy-xs, csv-easy-xs-20, csv-go, csv-ip5pp, csv-ip5xs, csv-ip5xs-20, csv-ip5xsio, csv-java10, csv-java6, csv-java7, csv-java8, csv-java9, csv-lua, csv-parser, csv-pegex, csv-php, csv-python2, csv-python3, csv-ruby, csv-rust-csvrdr, csv-rust-libcsv, csv-rust-qckrdr, csv-test-pp, csv-test-xs,

[18:13] <buggable> Zoffix, csv-test-xs-20, csv-xsbc, csv_gram, first, ip5xs, test, test-t, test-t-20, test-t-20--race

[18:14] <japhb> Oooh, what do I need to do to get the auto-splitting?

[18:14] <Geth> ¦ nqp: 4e0dfc54d9 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/io/ServerSocketHandle.java

[18:14] <Geth> ¦ nqp: [jvm] Implement close for ServerSocketHandle

[18:14] <Geth> ¦ nqp:

[18:14] <Geth> ¦ nqp: Makes S32-io/IO-Socket-INET.t pass (once nqp::getport is used)

[18:14] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/4e0dfc54d9

[18:14] <Zoffix> japhb: a manual hack, which probably should be part of IRC::Client's functionality: https://github.com/zoffixznet/perl6-buggable/commit/ca68c292c4fe7201cf4bee63be638e05114da085#diff-b1d283f4fcad1e15f62b74b3e4604713

[18:15] <japhb> Ah gotcha.  Yeah, that would be very useful.

[18:32] * Zoffix frowns at questions on #perl6 being answered with a link to LGMTFY. Feels like not replying all is better.

[18:32] <Zoffix> "If you cut this chain of souls, saying to someone, “Your step to me is the last step — go back and read the manual,” then their journey of joining the open source process is blocked, and they must find a new upstream before they can continue. So please don’t ever do that. Rather, help a person go down this road together. You can walk this road together much longer and go much farther." —

[18:32] <Zoffix> https://medium.com/@audrey.tang/lessons-i-ve-learned-32f5d8107e34

[18:46] <Geth> ¦ rakudo: ab03b54cc4 | (Elizabeth Mattijsen)++ | lib/Telemetry.pm6

[18:46] <Geth> ¦ rakudo: Complete rewrite of Telemetry to allow for plugins

[18:46] <Geth> ¦ rakudo:

[18:46] <Geth> ¦ rakudo: - apart from :COLUMNS subs no longer being exported, there is no function diff

[18:46] <Geth> ¦ rakudo: - introduces the Telemetry::Instrument role, for creating instruments

[18:46] <Geth> ¦ rakudo: - introduces Telemetry::Instrument::Usage, data found in nqp::getrusage

[18:46] <Geth> ¦ rakudo: - introduces Telemetry::Instrument::ThreadPool, data related to $*SCHEDULER

[18:46] <Geth> ¦ rakudo: - introduces the Telemetry::Sampler class, for keeping which instruments to use

[18:46] <Geth> ¦ rakudo: - introduces $*SAMPLER, the Telemetry::Sampler class used for snapping

[18:46] <Geth> ¦ rakudo:   - defaults to <Usage ThreadPool>, as in the previous incarnation

[18:46] <Geth> ¦ rakudo: - introduces %*ENV<RAKUDO_TELEMETRY_INSTRUMENTS> to specify default instruments

[18:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ab03b54cc4

[18:47] <lizmat> *phew*  even writing the commit message was a lot of work  :-)

[18:48] <Zoffix> :)

[18:49] <Zoffix> lizmat++

[18:52] <bartolin> audreyt++ (and Zoffix++ for posting that link)

[18:59] <AlexDaniel> reading audrey++ posts makes me feel like garbage sometimes. So much room for improvement.

[19:16] <[Coke]> (lmgtfy) yup, that was me, and I'm not happy I did it either.

[19:17] <[Coke]> but given further discussion on that thread, I'm just going silent, I think.

[19:32] <Geth> ¦ roast: d0255a76a1 | usev6++ | 4 files

[19:32] <Geth> ¦ roast: [jvm] Update fudging for some tests

[19:32] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d0255a76a1

[21:31] <Geth> ¦ rakudo: fc9e7241b1 | (Elizabeth Mattijsen)++ | lib/Telemetry.pm6

[21:31] <Geth> ¦ rakudo: Telemetry tweaks

[21:31] <Geth> ¦ rakudo:

[21:31] <Geth> ¦ rakudo: - make sure $*SAMPLER isn't started until after having loaded all modules

[21:31] <Geth> ¦ rakudo:   - should allow for BEGIN %*ENV<> setting to be seen

[21:31] <Geth> ¦ rakudo: - natural language grammar fixo

[21:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fc9e7241b1

[22:05] <Zoffix> For the brochure: going with 1 page of OOP, then 2 spreads of grammars, with first spread being a marketing plug, and the second spread would be a micro tutorial with a grammar that mutates self. So it'd double (tripple?) as an example of grammars + OOP + sizable chunk of Perl 6 code (the rest of the example are Wow-y one liners, basically)

[22:06] <Zoffix> And that puts it at 20-pages total.

[22:06] <lizmat> wow  :-)

[22:06] <lizmat> something I link to in the P6W ?

[22:06] <lizmat> directly, I mean ?

[22:10] <Zoffix> lizmat: not yet. Next weekly.

[22:10] <lizmat> okidoki  :-)

[22:39] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/11/06/2017-45-uplink-established/

[23:17] <Zoffix> \o/

[23:20] <jnthn> lizmat++

[23:20] * jnthn reads

[23:22] <timotimo> lizmat: there's a ) missing from the cro article bullet point list

[23:23] <Zoffix> lizmat++ # good weekly

[23:23] <jnthn> Wow, so much stuff :)

[23:24] <lizmat> timotimo++  # fixed

[23:24] * lizmat is tired and goes off to bed

[23:24] <lizmat> good night, #perl6-dev!

[23:26] <jnthn> 'night, lizmat
