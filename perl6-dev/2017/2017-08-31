[01:14] <AlexDaniel> samcv: any news on RT #131961? Or if not, was there anything interesting you were able to find? I'm thinking maybe we can leave something in a comment on that ticket to help the thing go

[01:14] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131961

[01:15] <samcv> well i am not sure what's causing it. though it now doesn't leak memory when it throws, and now frees the bytes in the buffer

[01:15] <samcv> but otherwise no

[01:26] <AlexDaniel> wait, I didn't bisect this ticket?

[01:27] <AlexDaniel> .oO( why???? )

[01:28] <AlexDaniel> makes no sense. I'll get some tea and will bisect it. Who knows, maybe it'll give a clue

[01:55] <AlexDaniel> bisected to https://github.com/rakudo/rakudo/commit/51b63bf9f0d0594687908f0756774f29cde39c1f

[01:57] <AlexDaniel> but I don't know if it means anything

[01:58] <AlexDaniel> but I was seeing something like this a few weeks before that commit: https://github.com/perl6/whateverable/issues/153

[01:58] <AlexDaniel> it may be a different issue

[01:58] <AlexDaniel> how can I test it? I guess simply try it with a bigger file?

[02:06] <AlexDaniel> samcv: yes, that's the right commit. Before that it can go through 251MB file just fine

[02:07] <AlexDaniel> ‚Ä¶ ‚Äúcommit‚Äù. One of 15 MoarVM commits I mean

[02:10] <AlexDaniel> .tell [Coke] A *tiny* update on the Malformed UTF-8 issue. There's hope! https://rt.perl.org/Ticket/Display.html?id=131961#txn-1486102

[02:10] <yoleaux> AlexDaniel: I'll pass your message to [Coke].

[02:17] <samcv> AlexDaniel, well decodestream was changed

[02:17] <samcv> it's possible that or the utf8 changes caused it

[02:18] <samcv> i can't compile nqp right now though..

[02:18] <samcv> anyone else have this?

[02:21] <geekosaur> nqp built for me a couple hours ago

[02:34] <ugexe> I wrote a quick example of how to get appveyor build status changes in an irc channel by slapping together Cro and IRC::Client - https://gist.github.com/ugexe/a7724886674ffef74f656f93f0b8a8cf

[02:35] <Zoffix> wooo \o/ ugexe++

[04:05] <AlexDaniel> alright, it's https://github.com/MoarVM/MoarVM/commit/a6abd3c6654413d2230470dbaa82b7b3a2b05762

[04:06] <AlexDaniel> why can't I teach bisectable to do it? Why? :-/

[04:08] <samcv> AlexDaniel++ should let jnthn know maybe he can figure it out better than I, since he wrote it

[04:08] <AlexDaniel> .tell jnthn FWIW https://rt.perl.org/Ticket/Display.html?id=131961#txn-1486128

[04:08] <yoleaux> AlexDaniel: I'll pass your message to jnthn.

[04:30] <AlexDaniel> .tell timotimo ping me when you have 15 minutes for me

[04:30] <yoleaux> AlexDaniel: I'll pass your message to timotimo.

[04:42] <samcv> that nqp commit that disabled repl on tty i think broke roast tests

[04:42] <samcv> that wanted the output of the REPL

[04:42] <samcv> maybe we need an ENV var to enable it or a flag

[04:43] <samcv> like one to force repl and one to force no-repl

[05:12] <samcv> .u { .uniprop('Block') eq 'Malayalam' }

[05:12] <yoleaux> U+0020 SPACE [Zs] ( )

[05:12] <yoleaux> U+0027 APOSTROPHE [Po] (')

[05:12] <yoleaux> U+0028 LEFT PARENTHESIS [Ps] (()

[05:14] <samcv> u: { .uniprop('Block') eq 'Malayalam' }

[05:14] <unicodable6> samcv, U+0D01 MALAYALAM SIGN CANDRABINDU [Mn] (¬†?)

[05:14] <unicodable6> samcv, U+0D02 MALAYALAM SIGN ANUSVARA [Mc] (?)

[05:14] <unicodable6> samcv, 114 characters in total: https://gist.github.com/fa65e9e3f6629185e979d453f219912e

[05:41] <Geth> ¬¶ roast: 640d40ee81 | (Samantha McVey)++ | S05-mass/properties-block.t

[05:41] <Geth> ¬¶ roast: Fix InMalayam test

[05:41] <Geth> ¬¶ roast:

[05:41] <Geth> ¬¶ roast: Previously this test was a CJK base with a Malayalam extending character.

[05:41] <Geth> ¬¶ roast: Replace it so the base character is also Malayam.

[05:41] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/640d40ee81

[06:05] <[Tux]> This is Rakudo version 2017.08-25-g7d1ece805 built on MoarVM version 2017.08.1-32-gcd41322e

[06:05] <[Tux]> csv-ip5xs        1.324 - 1.352

[06:05] <[Tux]> test            10.438

[06:05] <[Tux]> test-t           3.513 - 3.640

[06:05] <[Tux]> csv-parser      11.803

[06:39] <Geth> ¬¶ nqp: fc57c9a203 | (Samantha McVey)++ | tools/build/MOAR_REVISION

[06:39] <Geth> ¬¶ nqp: Bump MoarVM for Unicode 10 update

[06:39] <Geth> ¬¶ nqp:

[06:39] <Geth> ¬¶ nqp: * Adds Hangul codepoint names

[06:39] <Geth> ¬¶ nqp: * Property values are now unique for each property

[06:39] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/fc57c9a203

[06:39] <Geth> ¬¶ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.08.1-44-g7d5cd52...2017.08.1-46-g79654248

[06:43] <Geth> ¬¶ rakudo/nom: 64dd94c250 | (Samantha McVey)++ | tools/build/NQP_REVISION

[06:43] <Geth> ¬¶ rakudo/nom: Bump MoarVM/nqp for Unicode 10 update

[06:43] <Geth> ¬¶ rakudo/nom:

[06:43] <Geth> ¬¶ rakudo/nom: * Adds Hangul codepoint names

[06:43] <Geth> ¬¶ rakudo/nom: * Property values are now unique for each property

[06:43] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/64dd94c250

[06:43] <Geth> ¬¶ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.08-24-gd01668b...2017.08-25-gfc57c9a20

[08:00] <lizmat> Files=1223, Tests=67663, 293 wallclock secs (13.91 usr  5.21 sys + 1972.40 cusr 206.74 csys = 2198.26 CPU)

[08:22] <Geth> ¬¶ nqp: 589a3dd5cd | (Samantha McVey)++ | docs/ops.markdown

[08:22] <Geth> ¬¶ nqp: Add docs for a few variations of index/eqat

[08:22] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/589a3dd5cd

[08:39] <Geth> ¬¶ nqp/master: 4 commits pushed by pmurias++

[08:39] <Geth> ¬¶ nqp/master: 10dc2d82f9 | [js] Fix lexical_handler_not_found

[08:39] <Geth> ¬¶ nqp/master: c14acf8950 | [js] Pass the HLL object to nqp.arg

[08:39] <Geth> ¬¶ nqp/master: e1d0c92702 | [js] Refactor argument handling

[08:39] <Geth> ¬¶ nqp/master: 7729dadb0c | [js] Pass the HLL object around instead of just the name

[08:39] <Geth> ¬¶ nqp/master: review: https://github.com/perl6/nqp/compare/589a3dd5cd...7729dadb0c

[09:22] <lizmat> afk for a while&

[09:33] <timotimo> AlexDaniel: i think i might have the time for you now. what's up?

[09:33] <yoleaux> 04:30Z <AlexDaniel> timotimo: ping me when you have 15 minutes for me

[09:41] <timotimo> correction: i have to head out and do some errands

[10:14] <Geth> ¬¶ rakudo/jit_nativecall: 3a48c66de1 | (Stefan Seifert)++ | lib/NativeCall.pm6

[10:14] <Geth> ¬¶ rakudo/jit_nativecall: Unbox HLL objects passed to JITed native functions

[10:14] <Geth> ¬¶ rakudo/jit_nativecall: review: https://github.com/rakudo/rakudo/commit/3a48c66de1

[10:16] <dogbert17> timotimo: https://irclog.perlgeek.de/moarvm/2017-08-30#i_15092872

[10:17] <timotimo> dogbert17: i believe we're on a non-release commit of libtommath that already has that

[10:24] <dogbert17> yes but the fix for RT #129829 would be nice to have as well

[10:24] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=129829

[11:38] <Skarsnik> Hello

[11:47] <timotimo> AlexDaniel: i have time for you, are you there?

[12:43] <AlexDaniel> timotimo: now I am :)

[12:43] <timotimo> OK!

[12:46] <Skarsnik> I just watched Damian Conway talk about three little words. I love the your keyword x)

[12:56] <Zoffix> ??? New blog post: "On Troll Hugging, Hole Digging, and Improving Open Source Communities": https://rakudo.party/post/On-Troll-Hugging-Hole-Digging-and-Improving-Open-Source-Communities

[12:57] <pmurias> Zoffix: hole digging seems like a more "permanent" way to get rid of trolls ;)

[12:58] <Zoffix> :)

[13:21] <AlexDaniel> awesome blog post

[13:23] <MasterDuke> Zoffix++ nice post. fyi, "barelly"

[13:26] <Zoffix> Thanks. Fixed.

[13:27] <AlexDaniel> huggable: ? :is: https://rakudo.party/post/On-Troll-Hugging-Hole-Digging-and-Improving-Open-Source-Communities

[13:27] <huggable> AlexDaniel, Added ? as https://rakudo.party/post/On-Troll-Hugging-Hole-Digging-and-Improving-Open-Source-Communities

[13:27] <AlexDaniel> huggable: <3 :is: https://rakudo.party/post/On-Troll-Hugging-Hole-Digging-and-Improving-Open-Source-Communities

[13:27] <huggable> AlexDaniel, Added <3 as https://rakudo.party/post/On-Troll-Hugging-Hole-Digging-and-Improving-Open-Source-Communities

[13:55] <nine> OMG there's a quote of me

[13:55] * nine blushes

[13:58] <AlexDaniel> by the way, maybe somebody has some interesting ideas on this: https://github.com/perl6/whateverable/issues/40#issuecomment-326300469

[13:58] <AlexDaniel> mainly the question is: if nqp bump in rakudo brought more than one nqp commit, what's the right way to bisect it?

[14:02] <nine> Zoffix++ # really awesome blog post

[14:02] <lizmat> someone should put Zoffix' blog post on HN

[14:10] <brrt> someone with a flame-retardant suit

[14:10] <brrt> or a 'thick skin' or what have you

[14:15] <timotimo> i just realized i never told anyone my lightning talk would be okay to record & upload

[14:15] <timotimo> so it probably won't appear on youtube

[14:15] <timotimo> which is a good thing because i could re-make it as a much more structured (and rehearsed) screencast or something

[14:18] <brrt> (also, Zoffix++, i enjoyed that post)

[14:21] <timotimo> yes, yes. good post, Zoffix++

[14:21] <MasterDuke> are the SPW videos going up under a particular account?

[14:22] <perlpilot> Zoffix++  I haven't finished reading it yet, but it resonates well with me.  Good job!

[14:22] <timotimo> MasterDuke: lee manages that account

[14:30] <MasterDuke> timotimo: k. hopefully some links get posted, i'd like to watch them

[14:33] <timotimo> https://www.youtube.com/channel/UCV3oXF6JSn-WwIDa_7KMuEA

[14:33] <Geth> ¬¶ rakudo: MasterDuke17++ created pull request #1145: Simplify ignore(mark|case) handling in INTERPOLATE

[14:33] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/1145

[14:33] <timotimo> not sure if the comment about lee managing it is correct

[14:33] <timotimo> lee was the one with the camera in any case

[14:33] <MasterDuke> timotimo++ thanks

[14:42] <AlexDaniel> ? Community Bug SQUASHathon http://blogs.perl.org/users/zoffix_znet/2017/08/youre-invited-community-bug-squashathon.html

[14:55] <Geth> ¬¶ rakudo/nom: 79604a8803 | (Elizabeth Mattijsen)++ | src/core/Junction.pm

[14:55] <Geth> ¬¶ rakudo/nom: Refine Junction.INFIX-TWO

[14:55] <Geth> ¬¶ rakudo/nom:

[14:55] <Geth> ¬¶ rakudo/nom: one() infix one() shouldn't merge, because any merge would change

[14:55] <Geth> ¬¶ rakudo/nom: the semantics.  This *is* ok for any(), all() and none().

[14:55] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/79604a8803

[15:05] <Geth> ¬¶ rakudo/nom: 8b5d283cb6 | (Elizabeth Mattijsen)++ | src/core/Junction.pm

[15:05] <Geth> ¬¶ rakudo/nom: Complete support for Junction ~ Junction

[15:05] <Geth> ¬¶ rakudo/nom:

[15:05] <Geth> ¬¶ rakudo/nom: Even for two differently typed junctions or if one of the junctions

[15:05] <Geth> ¬¶ rakudo/nom: is a one().

[15:05] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8b5d283cb6

[15:08] <Geth> ¬¶ rakudo/nom: 215a5fa731 | MasterDuke17++ | src/core/Match.pm

[15:08] <Geth> ¬¶ rakudo/nom: Simplify ignore(mark|case) handling in INTERPOLATE

[15:08] <Geth> ¬¶ rakudo/nom:

[15:08] <Geth> ¬¶ rakudo/nom: By switching to use the relatively new nqp::index(ic|im|icim) ops.

[15:08] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/215a5fa731

[15:08] <Geth> ¬¶ rakudo/nom: 067f5407ef | lizmat++ (committed using GitHub Web editor) | src/core/Match.pm

[15:08] <Geth> ¬¶ rakudo/nom: Merge pull request #1145 from MasterDuke17/simplify_ignoremark_and_ignorecase_in_INTERPOLATE

[15:08] <Geth> ¬¶ rakudo/nom:

[15:08] <Geth> ¬¶ rakudo/nom: Simplify ignore(mark|case) handling in INTERPOLATE

[15:08] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/067f5407ef

[15:14] <timotimo> .o( squashable )

[15:48] <Geth> ¬¶ rakudo: MasterDuke17++ created pull request #1146: Document the $m argument in INTERPOLATE's comment

[15:48] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/1146

[15:58] <|Tux|> .hug Zoffix

[16:14] <Zoffix> |Tux|: oops. I guess IRC::Client still has a bug where the IRC grammar doesn't match nicks with `|` chars in them

[16:14] <|Tux|> (hug still applies)

[16:14] <Zoffix> Thanks :)

[16:19] <Geth> ¬¶ rakudo/nom: ea57cbec8a | MasterDuke17++ (committed using GitHub Web editor) | src/core/Match.pm

[16:19] <Geth> ¬¶ rakudo/nom: Document the $m argument in INTERPOLATE's comment

[16:19] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ea57cbec8a

[16:19] <Geth> ¬¶ rakudo/nom: e717d14db1 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/core/Match.pm

[16:19] <Geth> ¬¶ rakudo/nom: Merge pull request #1146 from MasterDuke17/patch-1

[16:19] <Geth> ¬¶ rakudo/nom:

[16:19] <Geth> ¬¶ rakudo/nom: Document the $m argument in INTERPOLATE's comment

[16:19] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e717d14db1

[19:50] <Geth> ¬¶ rakudo: MasterDuke17++ created pull request #1147: s/index/eqat/g in INTERPOLATE literal handling

[19:50] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/1147

[20:07] <Geth> ¬¶ rakudo/nom: c6aacafd1f | MasterDuke17++ | src/core/Match.pm

[20:07] <Geth> ¬¶ rakudo/nom: s/index/eqat/g in INTERPOLATE literal handling

[20:07] <Geth> ¬¶ rakudo/nom:

[20:07] <Geth> ¬¶ rakudo/nom: The simplification in 215a5fa731 used nqp::index* for the ignore* cases,

[20:07] <Geth> ¬¶ rakudo/nom: but if that change is made to the regular case some spectests break.

[20:07] <Geth> ¬¶ rakudo/nom: Both 215a5fa731 and this change pass all spectests, which I think

[20:07] <Geth> ¬¶ rakudo/nom: indicates that there probably aren't enough (any?) tests for

[20:07] <Geth> ¬¶ rakudo/nom: regex interpolation with ingnore* modifiers.

[20:07] <Geth> ¬¶ rakudo/nom:

[20:07] <Geth> ¬¶ rakudo/nom: Using index* is more efficient, since it doesn't require walking

[20:07] <Geth> ¬¶ rakudo/nom: through the haystack and checking at each position, but it somehow needs

[20:07] <Geth> ¬¶ rakudo/nom: to be done more correctly.

[20:07] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c6aacafd1f

[20:07] <Geth> ¬¶ rakudo/nom: d135728b71 | lizmat++ (committed using GitHub Web editor) | src/core/Match.pm

[20:07] <Geth> ¬¶ rakudo/nom: Merge pull request #1147 from MasterDuke17/use_eqat_instead_of_index_in_INTERPOLATE

[20:07] <Geth> ¬¶ rakudo/nom:

[20:07] <Geth> ¬¶ rakudo/nom: s/index/eqat/g in INTERPOLATE literal handling

[20:07] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d135728b71

[20:18] <MasterDuke> lizmat: thanks. btw, istr you were working on MATCH a little while ago. do you have any thoughts on my recent comments/questions re INTERPOLATE?

[20:18] <lizmat> none, apart from being glad you're working on it :-)

[20:19] <lizmat> MasterDuke: and that we could use some more tests :-)

[20:20] <MasterDuke> heh, ain't that always the case...

[20:20] <lizmat> indeed  :-)

[20:23] <MasterDuke> well, i'm certainly open to help/advice/correction/etc from anybody, i'd be lying if i said i completely understand how INTERPOLATE is working (or should)

[21:27] <japhb> huggable: speed

[21:27] <huggable> japhb, http://tux.nl/Talks/CSV6/speed4.html

[21:27] <japhb> buggable: speed

[21:27] <buggable> japhb, ?????????????????????????????????????????????????? data for 2017-07-30‚Äì2017-08-31; range: 3.471s‚Äì4.925s; 21% faster

[21:29] <AlexDaniel> this graph needs a logarithmic scale

[21:30] <AlexDaniel> maybe

[21:45] <japhb> AlexDaniel: the problem with logarithmic scale is what your zero point is, because it can't actually be zero.

[21:45] <japhb> Plus that last pixel or two makes a HUGE difference to the experienced speed out of proportion to the visual difference.

[21:46] <japhb> The current code is designed to look kinda like it feels:  The above is "Slow for a while, then a bit faster, then slow again (with one measurement REALLY slow), then getting back to faster again.

[21:47] <japhb> "

[21:48] <japhb> Sadly unicode doesn't offer 16- or 32-unit-high bars

[21:48] <japhb> For increased precision

[21:49] <japhb> Though now that I think of it, I suppose buggable could rapidly answer *twice* and stack the two rows into a double-high chart for more precision.

[21:49] <japhb> Oooh, I think I'm going to use this locally.

[21:50] <japhb> Where is the buggable code?

[21:50] <japhb> buggable: source

[21:50] <buggable> japhb, See: https://github.com/zoffixznet/perl6-buggable

[21:53] <jdv79> is the optimization techniques deployed in moar similar to a tracing jit?

[21:53] <jdv79> i just remember the term and not any specifics

[21:57] <jdv79> is the irc log site going to be fixed for unicode anytime soon?

[21:58] <jdv79> I'd look into it if its something i could fix.  its not great to keep seeking ? chars all the time when backlogging.

[22:02] <MasterDuke> jdv79: moritz and Zoffix have chatted about it a couple times, i think moritz said it's a mysql thing. could try searching the logs (either here or #perl6, don't remember which) for details

[22:02] <MasterDuke> hm, maybe it was moritz and AlexDaniel

[22:03] <jdv79> didn't it used to work?

[22:04] <jdv79> i feel like it did cause i think i saw some unicode stuff in those logs before i updated my fonts so my term didn't bork them

[22:04] <jdv79> moritz: what's the status of that?  is there a ticket or anything else?

[22:08] <AlexDaniel> jdv79: I looked at it a little bit but didn't make much progress

[22:08] <MasterDuke> jdv79: moritz said he was going to sleep a little while ago, so you'll probably have to wait until tomorrow to chat with him

[22:12] <AlexDaniel> jdv79: here's the last discussion: https://irclog.perlgeek.de/perl6/2017-08-22#i_15056532

[22:20] <MasterDuke> another question about INTERPOLATE: i'm trying to correctly use index instead of eqat. just doing s/eqat/index/ fails this test

[22:20] <MasterDuke> m: use Test; is "foobar" ~~ /$( $_.substr(3) )/, "bar", "Contextualizer with functions calls";

[22:20] <camelia> rakudo-moar d13572: OUTPUT: ¬´ok 1 - Contextualizer with functions calls?¬ª

[22:21] <MasterDuke> instead i get: # Failed test 'Contextualizer with functions calls' # at -e line 1 # expected: 'bar' #      got: 'foobar'

[22:21] <MasterDuke> fyi, this is my patch: https://gist.github.com/MasterDuke17/c9512590df63bd530b640464ad04103f

[22:22] <MasterDuke> afk for a bit, but i'll backlog for suggestions

[22:47] <japhb> If I want to return something multi-line from a buggable plugin, do I need to return a list or something \n separated?

[22:47] <japhb> Zoffix: ^^

[22:48] <japhb> Also, will each line be prefixed with "$nick, " ?

[22:50] <japhb> FWIW, the code I have now can handle anything from 1-4 rows (the code can handle any number, but I figured > 4 was rude to the channel).  It looks like this:

[22:50] <japhb> ???         ?            ?? ?????????????          dates: 2017-07-30‚Äì2017-08-31

[22:50] <japhb> ?????????????     ?      ????????????????          range: 3.471s‚Äì4.925s

[22:50] <japhb> ?????????????    ??      ???????????????? ??? ?    speed: 21% faster

[22:50] <japhb> ??????????????????????????????????????????????????

[22:54] <japhb> buggable: help

[22:54] <buggable> japhb, tags | tag SOMETAG | eco | eco Some search term | author github username | speed | testers CPANTesters report ID
