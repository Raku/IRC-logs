[05:25] <moritz> samcv, japhb, Zoffix: perl6-all-modules does keep history, so you can dig up old modules from it

[05:25] <samcv> yep i pointed that out moritz

[05:26] <moritz> samcv: ok, I didn't backlog carefully enough then

[05:26] <samcv> np

[07:03] <[Tux]> This is Rakudo version 2017.04.3-61-g139243971 built on MoarVM version 2017.04-44-gf0db8822

[07:03] <[Tux]> csv-ip5xs        3.166

[07:03] <[Tux]> test            13.659

[07:03] <[Tux]> test-t           5.092 - 5.143

[07:03] <[Tux]> csv-parser      13.207

[09:57] <Zoffix> someone who has reddit access should toss both rakudobrew and panda off the sidebar on https://www.reddit.com/r/perl6/

[09:57] <timotimo> good point

[09:58] <timotimo> any idea for a second entry under the ## Install heading?

[09:58] <timotimo> perhaps nxadm's packages, and the docker images?

[09:59] <moritz> +1 to the packages

[10:01] <Geth> ¦ rakudo/nom: 9f5c8e94c6 | MasterDuke17++ | src/Perl6/Actions.nqp

[10:01] <Geth> ¦ rakudo/nom: Fix typed optional Array and Hash parameters

[10:01] <Geth> ¦ rakudo/nom:

[10:01] <Geth> ¦ rakudo/nom: When handling typed optional Array and Hash parameters that don't

[10:01] <Geth> ¦ rakudo/nom: have a value passed we now nqp::create() the correct empty

[10:01] <Geth> ¦ rakudo/nom: parameterized type.

[10:01] <Geth> ¦ rakudo/nom:

[10:01] <Geth> ¦ rakudo/nom: Fixes RT #118555

[10:01] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=118555

[10:01] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9f5c8e94c6

[10:02] <Geth> ¦ rakudo/nom: 6231ecb014 | MasterDuke17++ | src/Perl6/Actions.nqp

[10:02] <Geth> ¦ rakudo/nom: De-dupe code shared between Array and Hash cases

[10:02] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6231ecb014

[10:02] <Geth> ¦ rakudo/nom: a968064c77 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/Perl6/Actions.nqp

[10:02] <Geth> ¦ rakudo/nom: Merge pull request #1072 from MasterDuke17/fix_typed_optional_array_and_hash_parameters

[10:02] <Geth> ¦ rakudo/nom:

[10:02] <Geth> ¦ rakudo/nom: Fix typed optional Array and Hash parameters

[10:02] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a968064c77

[10:08] <timotimo> Zoffix: see if you like the changes i made to the sidebar

[10:10] <Zoffix> timotimo++ looks good

[10:16] <timotimo> Zoffix++ for noticing

[10:17] <timotimo> it's easy to forget about things like that

[10:44] <Zoffix> samcv++ # grant

[10:56] * Zoffix gulps reading the rejection comments on RPerl grant

[10:56] <Zoffix> My own record on interaction isn't exactly stellar...

[11:08] <robertle> on http://rakudo.org/how-to-get-rakudo/ the top-right box for 32bit windows says "2016.01", shoudl that not be 2017?

[11:09] <timotimo> nope, there's no rakudo star newer than 2016.01 for the no-jit version

[11:09] <timotimo> i.e. for x86

[11:10] <robertle> timotimo: ok, just looked odd

[11:10] <timotimo> yeah, hopefully we'll find someone who can build stuff on win32 for the next rakudo star

[11:15] <timotimo> Zoffix: the part 2 io grant work upgrade information post is still the pinned one, should i put part 3 up instead?

[11:15] <Zoffix> timotimo: yeah, thanks

[11:18] <timotimo> took me a few minutes to find the announcement options again

[11:57] <Geth> ¦ nqp/master: 9 commits pushed by (Pawel Murias)++

[11:57] <Geth> ¦ nqp/master: ef083753f8 | [js] Remove TODO comment that doesn't provide any information

[11:57] <Geth> ¦ nqp/master: cdbfe6f360 | [js] Implement cloning integers

[11:57] <Geth> ¦ nqp/master: 2f6536cbc8 | [js] Remove useless NYI

[11:57] <Geth> ¦ nqp/master: 172950b537 | Test QAST::Want

[11:57] <Geth> ¦ nqp/master: 02bdfcedec | [js] Numify 'NaN', 'Inf', '+Inf' and '-Inf' like other backends

[11:57] <Geth> ¦ nqp/master: 4954f24e08 | Test numifying 'NaN', 'Inf', '-Inf' and '+Inf'

[11:57] <Geth> ¦ nqp/master: 75c74301af | [js] Fix bad argument name

[11:57] <Geth> ¦ nqp/master: bbfb1bd8c2 | [js] Implement method_not_found_error

[11:57] <Geth> ¦ nqp/master: 508cfaa063 | Test method_not_found_error

[11:57] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/745c61dbc0...508cfaa063

[12:27] * Zoffix wonders why atom highlights `TEMP` specially

[12:28] <Zoffix> m: TEMP 42

[12:28] <camelia> rakudo-moar a96806: OUTPUT: «WARNINGS for <tmp>:␤Useless use of constant integer 42 in sink context (line 1)␤»

[12:28] <Zoffix> huh

[12:28] <Zoffix> m: dd TEMP 42

[12:28] <camelia> rakudo-moar a96806: OUTPUT: «Non ast passed to WANTED: NQPMu␤Weird node in analyze: NQPMu␤WARNINGS for <tmp>:␤Useless use of constant integer 42 in sink context (line 1)␤===SORRY!===␤Unknown QAST node type NQPMu␤»

[12:28] <Zoffix> m: TOMP 42

[12:28] <camelia> rakudo-moar a96806: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    TOMP used at line 1␤␤»

[12:29] <timotimo> i didn't know about TEMP being a thing

[12:29] <Zoffix> I see it mentioned in https://design.perl6.org/S06.html#Temporization

[12:30] <timotimo> i don't think this whole TEMP method business has made it into anything

[12:31] <Zoffix> m: sub foo { state $x++; TEMP {{ $x = 42}}; $x }; foo.say; foo.say; { say temp foo; foo.say; }; foo.say

[12:31] <camelia> rakudo-moar a96806: OUTPUT: «1␤2␤Can only use 'temp' on a container␤  in block <unit> at <tmp> line 1␤␤»

[12:31] <Zoffix> I guess "largely unimplemente" is the status of it all

[12:32] <timotimo> well, temp in lowercase exists at leas

[12:32] <timotimo> least*

[12:32] <Zoffix> Aye

[12:41] <Zoffix> m: use MONKEY; augment class Pair { method Pair { self } }; 'foo' ~~ / $<foo>=.**2 /; say $/.hash».Str.push: :github.Pair

[12:41] <camelia> rakudo-moar a96806: OUTPUT: «{foo => fo, github => True}␤»

[12:41] <Zoffix> What you think of adding .Pair to Pair?

[12:42] <Geth> ¦ nqp: 526275c3f1 | (Pawel Murias)++ | src/vm/js/nqp-runtime/core.js

[12:42] <Geth> ¦ nqp: [js] Fix nqp::encode with unsigned buffers

[12:42] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/526275c3f1

[12:42] <Geth> ¦ nqp: b82f6096d5 | (Pawel Murias)++ | src/vm/js/Operations.nqp

[12:42] <Geth> ¦ nqp: [js] Make nqp::chr supports arguments that are bigger than 2**16

[12:42] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/b82f6096d5

[12:42] <Geth> ¦ nqp: a5adc67705 | (Pawel Murias)++ | t/nqp/059-nqpop.t

[12:42] <Geth> ¦ nqp: Test nqp::chr with an argument that bigger than 2**16

[12:43] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a5adc67705

[12:43] <jnthn> Zoffix: Things having themselves as a coercer is fine

[12:44] <Zoffix> Cool. I'll add it then.

[12:44] <jnthn> I wonder if we can sensibly .Pair anything else... :)

[12:46] <timotimo> single-element hashes potentially, but ... doesn't seem useful

[12:47] <[Coke]> m: "HI".Pair.perl.say

[12:47] <camelia> rakudo-moar a96806: OUTPUT: «No such method 'Pair' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[12:48] <Zoffix> m: <a b>.Pair.say

[12:48] <camelia> rakudo-moar a96806: OUTPUT: «No such method 'Pair' for invocant of type 'List'␤  in block <unit> at <tmp> line 1␤␤»

[12:48] <Zoffix> eh, no good

[12:49] <timotimo> m: <a b>.pairup.perl.say

[12:49] <camelia> rakudo-moar a96806: OUTPUT: «(:a("b"),).Seq␤»

[12:56] <Geth> ¦ rakudo/nom: bd9e57309a | (Zoffix Znet)++ | src/core/Pair.pm

[12:56] <Geth> ¦ rakudo/nom: Add Pair.Pair method

[12:56] <Geth> ¦ rakudo/nom:

[12:56] <Geth> ¦ rakudo/nom: - Returns self

[12:56] <Geth> ¦ rakudo/nom: - Provides another way to pass a Pair as a positional arg,

[12:56] <Geth> ¦ rakudo/nom:     instead of a named one.

[12:56] <Geth> ¦ rakudo/nom:

[12:56] <Geth> ¦ rakudo/nom: https://irclog.perlgeek.de/perl6-dev/2017-04-27#i_14495138

[12:56] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bd9e57309a

[12:57] <timotimo> that's an interesting use case, yeah

[12:57] <timotimo> i didn't even notice what you did up there

[12:57] <Geth> ¦ roast: 019b0b5150 | (Zoffix Znet)++ | S02-types/pair.t

[12:57] <Geth> ¦ roast: Test Pair.Pair

[12:57] <Geth> ¦ roast:

[12:57] <Geth> ¦ roast: Rakudo impl: https://github.com/rakudo/rakudo/commit/bd9e57309a

[12:57] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/019b0b5150

[13:14] <Zoffix> buggable: author zoffixznet

[13:14] <buggable> Zoffix, Found 37 dists for zoffixznet. See https://temp.perl6.party/buggable/4069027620023031493298883.html

[13:14] <Zoffix> \o/

[13:14] <Zoffix> Now I can finally know what modules I wrote :P

[13:15] <Zoffix> buggable: author perl6

[13:15] <buggable> Zoffix, Found 10 dists for perl6. See https://temp.perl6.party/buggable/1862613449772681493298935.html

[13:15] <Zoffix> buggable: author perl6-community-modules

[13:15] <buggable> Zoffix, Found 7 dists for perl6-community-modules. See https://temp.perl6.party/buggable/01452236881043561493298941.html

[13:17] <Zoffix> pmurias: no, my Int $foo = NaN; should not work. The test should be removed

[13:18] <Zoffix> pmurias: and here's the ticket with all the discussions: https://rt.perl.org/Ticket/Display.html?id=61602

[13:21] <Zoffix> .tell moritz not sure if you've seen my comment on the Issue, but my suggestion to use CSS to break long lines on logs was wrong. That CSS property does jack all due to auto-resizing table the stuff is in. So lines no longer are broken right now: https://github.com/moritz/ilbot/issues/51#issuecomment-296676513

[13:21] <yoleaux> Zoffix: I'll pass your message to moritz.

[13:22] <moritz> that's unfortunate

[13:22] <yoleaux> 13:21Z <Zoffix> moritz: not sure if you've seen my comment on the Issue, but my suggestion to use CSS to break long lines on logs was wrong. That CSS property does jack all due to auto-resizing table the stuff is in. So lines no longer are broken right now: https://github.com/moritz/ilbot/issues/51#issuecomment-296676513

[13:22] <Zoffix> Man the channels are really busy. Even just scanningly scrolling through #perl6's log takes too much time :/

[13:23] <Zoffix> Guess it's good. Though I silently grumble when dev questions are discussed in #perl6 instead of #perl6-dev :}

[13:24] <pmurias> Zoffix: I'll ask my roast question here then ;)

[13:24] <Zoffix> Thanks :)

[13:36] <pmurias> '#OK not indicate octal' are just regular comments?

[13:38] <Zoffix> pmurias: I think that's "OK to receive warning about 01 not being an octal in Perl 6"

[13:39] <Zoffix> m: 01

[13:39] <camelia> rakudo-moar bd9e57: OUTPUT: «Potential difficulties:␤    Leading 0 does not indicate octal in Perl 6. Please use 0o1 if you mean that.␤    at <tmp>:1␤    ------> 03017⏏5<EOL>␤WARNINGS for <tmp>:␤Useless use of constant integer 1 in sink context (line 1)␤»

[13:39] <Zoffix> m: use Test; is "{\01;42}", "42"

[13:39] <camelia> rakudo-moar bd9e57: OUTPUT: «Potential difficulties:␤    To refer to a positional match capture, just use $0 (numbering starts at 0).␤    Parenthesize as \(...) if you intended a capture of a single numeric value.␤    at <tmp>:1␤    ------> 3use Test; is "{\7⏏0501;42}",…»

[13:39] <Zoffix> yup

[13:39] <Zoffix> match capture, eh....

[13:40] <Zoffix> That's buggish. It thinks \0 is part of string and not code

[13:40] <Zoffix> or something

[13:40] <Zoffix> Ah

[13:40] <Zoffix> m: \0

[13:40] <camelia> rakudo-moar bd9e57: OUTPUT: «Potential difficulties:␤    To refer to a positional match capture, just use $0 (numbering starts at 0).␤    Parenthesize as \(...) if you intended a capture of a single numeric value.␤    at <tmp>:1␤    ------> 3\7⏏050␤»

[13:40] <Zoffix> right, nevermind

[13:41] <Zoffix> Hm, I guess those tests will throw when Int.Capture will be made to throw

[13:42] <Zoffix> waaaaat "# The code of the closure takes a reference to the number 1, discards it"

[13:42] <Zoffix> We're talking about these BTW: https://github.com/perl6/roast/blob/master/S02-literals/string-interpolation.t#L13-L15

[13:46] <Zoffix> m: use MONKEY; augment class Int { method Capture { die "no cookie" } }; dd \ 1

[13:46] <camelia> rakudo-moar bd9e57: OUTPUT: «1␤»

[13:46] <Zoffix> huh... ok then :/

[13:50] <Zoffix> Ah, that's just an unspace

[13:52] <Zoffix> though dd \1 also doesn't die and gives \(1). Is it 'cause it treats stuff after it as a list?

[13:53] <Zoffix> m: dd \"foo", "bar"

[13:53] <camelia> rakudo-moar bd9e57: OUTPUT: «\("foo")␤"bar"␤»

[13:53] <Zoffix> hm, OK then

[14:12] <pmurias> Zoffix: I was just asking if #OK is some special magic to silence warning or just a comment for humans

[14:13] * Zoffix isn't aware of magic comments in roast, so would assume the latter

[15:16] <[Coke]> hurm. it's magical somewhere, trying to remember if there was a p6 context.

[15:17] <moritz> fudge maybe?

[15:28] <Zoffix> Note to self: $foo && $foo = 42 has wrong precedence :(

[15:29] <jnthn> m: my $foo = 1; $foo && $foo = 42; say $foo

[15:29] <camelia> rakudo-moar bd9e57: OUTPUT: «42␤»

[15:30] <jnthn> m: my $foo = 0; $foo && $foo = 42; say $foo

[15:30] <camelia> rakudo-moar bd9e57: OUTPUT: «42␤»

[15:30] <jnthn> :)

[15:30] <jnthn> m: my $foo = 0; $foo and $foo = 42; say $foo

[15:30] <camelia> rakudo-moar bd9e57: OUTPUT: «0␤»

[15:30] <jnthn> m: my $foo = 1; $foo and $foo = 42; say $foo

[15:30] <camelia> rakudo-moar bd9e57: OUTPUT: «42␤»

[15:30] <jnthn> `and` has the correct one for that, though :)

[15:32] <Zoffix> yeah :)

[15:37] <[Coke]> win 2

[15:41] <Geth> ¦ roast: 71a6423a99 | (Zoffix Znet)++ | S16-io/home.t

[15:41] <Geth> ¦ roast: [io grant] Add $*HOME tests

[15:41] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/71a6423a99

[15:42] <Geth> ¦ rakudo/nom: 7412184fcd | (Zoffix Znet)++ | src/core/Process.pm

[15:42] <Geth> ¦ rakudo/nom: [io grant] Make $*HOME default to Nil, not Any

[15:42] <Geth> ¦ rakudo/nom:

[15:42] <Geth> ¦ rakudo/nom: RT#130456: https://rt.perl.org/Ticket/Display.html?id=130456

[15:42] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7412184fcd

[15:42] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=130456

[15:42] <Geth> ¦ rakudo/nom: d22303d019 | (Zoffix Znet)++ | t/spectest.data

[15:42] <Geth> ¦ rakudo/nom: Run S16-io/home.t test file

[15:42] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d22303d019

[15:45] <Geth> ¦ roast: 2d9194fff9 | (Zoffix Znet)++ | S16-io/home.t

[15:45] <Geth> ¦ roast: Test we can assign to $*HOME in all the permutations

[15:45] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/2d9194fff9

[15:57] <Zoffix> $*TMPDIR is set to stuff that's checked to be `.rwx & .d` and if nothing is found, it uses ".".IO, while $*HOME is set to Nil

[15:59] <Zoffix> (got distracted...) And isn't checked that the values obtained from env vars even exist

[16:00] <Zoffix> I kinda want to make $*HOME be set in the same way as $*TMPDIR: try HOME (+ HOMEDRIVE+HOMEDIR on Windows) check it's .rwx & .d and if didn't find anything, default to ".".IO

[16:01] <Zoffix> Because otherwise we're basically telling users that any time they reach for $*HOME they need to check it's not Nil AND that they can do whatever things they want to do in it

[16:08] <Zoffix> Arguments against: people might want to store sensitive info in $*HOME dir and it ending up being some random path the app got run from on some system that unset the HOME is kinda sucky

[16:10] * Zoffix takes the path of least resistance and leaves it be as is

[16:16] <Geth> ¦ rakudo/nom: 3c7cd9333a | (Zoffix Znet)++ | 3 files

[16:16] <Geth> ¦ rakudo/nom: Simplify method call

[16:16] <Geth> ¦ rakudo/nom:

[16:16] <Geth> ¦ rakudo/nom: We have .rwx method; no need to use .r .w .x instead

[16:16] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3c7cd9333a

[16:19] <Zoffix> And for the perms checkage: usecase running a script with privs to read but not write $*HOME; thge .rwx & .d check would fail and result in $*HOME being Nil, so also good to leave as is

[16:19] <Zoffix> ZofBot: right??

[16:19] <ZofBot> Zoffix, m: Failure.new.?slurp-rest

[16:25] <Zoffix> m: IO::Path.e

[16:25] <camelia> rakudo-moar d22303: OUTPUT: «IO::Path is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting line 1␤  in method FALLBACK at src/RESTRICTED.setting line 31␤  in block <unit> at <tmp> line 1␤␤»

[16:25] <Zoffix> m: Int.absd

[16:25] <camelia> rakudo-moar d22303: OUTPUT: «No such method 'absd' for invocant of type 'Int'␤  in block <unit> at <tmp> line 1␤␤»

[16:25] <Zoffix> m: Int.abs

[16:25] <camelia> rakudo-moar d22303: OUTPUT: «Invocant requires an instance of type Int, but a type object was passed.  Did you forget a .new?␤  in block <unit> at <tmp> line 1␤␤»

[16:26] <Zoffix> .oO( wonder if it's possible to include the method name called in that last error to give some hint for debug location, when line number is missing :/ )

[16:26] <Zoffix> (like when exception is caught and it's .message is printed)

[16:41] <lizmat> perhaps someone should say "'file'.IO.words.Bag' to https://www.reddit.com/r/perl/comments/67vlf1/i_have_csv_file_and_want_to_count_words/

[16:45] * Zoffix will do one-better :)

[16:45] <Zoffix> As soon as Text::CSV's test suite finishes -_-

[16:46] <Zoffix> "type "perldoc split" into your URL box for more info about the split command."  that's pretty neat actually. We should come up with some term that would learn to search results on docs site via search engines

[16:50] <Zoffix> lizmat: done :)

[16:58] <Geth> ¦ roast: 785fea051b | MasterDuke17++ | S06-signature/optional.t

[16:58] <Geth> ¦ roast: Add tests for RT #118555

[16:58] <Geth> ¦ roast:

[16:58] <Geth> ¦ roast: Optional typed Array and Hash parameters should act like regular

[16:58] <Geth> ¦ roast: optional Array and Hash paramters (just with a type constraint) and not

[16:58] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=118555

[16:58] <Geth> ¦ roast: die.

[16:58] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/785fea051b

[17:01] <MasterDuke_> what can one do with, or what info can be obtained from, a lexpad?

[17:02] <lizmat> Zoffix++   # providing food for next week's P6W  :-)

[17:02] <Zoffix> \o/

[17:04] <lizmat> Zoffix: fwiw, I'bve just had a flapper in t/spec/S32-io/indir.t

[17:04] <lizmat> test 74

[17:04] <lizmat> can't reproduce

[17:04] <Zoffix> OK, I'll take a look later on

[17:06] <Geth> ¦ rakudo/nom: b233281602 | (Elizabeth Mattijsen)++ | src/core/set_operators.pm

[17:06] <Geth> ¦ rakudo/nom: Make Iterable (^) Iterable about 3.5x faster

[17:06] <Geth> ¦ rakudo/nom:

[17:06] <Geth> ¦ rakudo/nom: - with a 100 element Array with itself (worst case)

[17:06] <Geth> ¦ rakudo/nom: - give Iterable (^) Iterable its own candidate written using nqp ops

[17:06] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b233281602

[17:07] <jdv79_> huh?

[17:08] <lizmat> jdv79_??

[17:10] <lizmat> git Fu question: I want to reapply commit 1534652765, what do I do ?

[17:10] <jdv79_> idk.  i saw someone said something to me but lost it

[17:11] <jdv79_> cherry-pick maybe?

[17:12] <lizmat> yeah, looks like

[17:13] <Geth> ¦ rakudo/nom: 3b247096e9 | (Elizabeth Mattijsen)++ | src/core/set_operators.pm

[17:13] <Geth> ¦ rakudo/nom: Make (-) a multi

[17:13] <Geth> ¦ rakudo/nom:

[17:13] <Geth> ¦ rakudo/nom: Start of optimization work on (-)

[17:13] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3b247096e9

[17:32] <travis-ci> Rakudo build passed. Zoffix Znet 'Run S16-io/home.t test file'

[17:32] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/226447653 https://github.com/rakudo/rakudo/compare/7412184fcdfb...d22303d01920

[17:55] <MasterDuke_> hey, travis is back

[18:06] <geekosaur> hah

[18:24] <samcv> MasterDuke_, it came back yesterday, to non freenode places at least

[18:24] <samcv> or 2 days ago when i added an irc field

[18:25] <samcv> so was suprised it actually worked, since it was broken here. hopefully it's fixed on freenode now. wonder if freenode blocked it for joining channels and spamming messnages all day long!

[18:27] <MasterDuke_> jnthn: in bind_one_param in BOOTSTRAP.nqp, would it be possible to find out the method bind_one_param is binding for from its $lexpad argument?

[18:28] <jnthn> I think there's a nqp::ctxcode or so

[18:28] <jnthn> Which you can use nqp::getcodeobj on

[18:29] <MasterDuke_> cool, i'll experiment with them

[18:37] <ugexe> should `try { }<\n>|| something-else()` short-circuit without having to unspace like `try { }\<\n>|| something-else()`? https://gist.github.com/ugexe/47c6369bead8707a1aa158be78939bd2

[18:38] <jnthn> Yes. The syntax rule is that a } at the end of a line (or only whitespce after it on the line) terminates the statement

[18:38] <jnthn> So the next line will be a new statement

[18:39] <jnthn> And the || will be interpreted as a prefix

[18:39] <jnthn> m: try { }; || something-else()

[18:39] <camelia> rakudo-moar 3b2470: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    something-else used at line 1␤␤»

[18:39] <jnthn> As there

[18:42] <ugexe> I see... I was thinking like I do with map/grep, and now that you mention it those instances are using ({ }), not { }

[18:48] <ugexe> `No such method 'e' for invocant of type 'Distribution::Resource'` when doing %?RESOURCES<...>.e - wonder if there is a better way to delegate all that IO stuff in Distribution::Resources so nothing is missed

[18:58] <Geth> ¦ rakudo/nom: aa23a91fb2 | (Elizabeth Mattijsen)++ | src/core/set_operators.pm

[18:58] <Geth> ¦ rakudo/nom: Optimize a bit for empty (Set|Bag|Mix)Hashes

[18:58] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/aa23a91fb2

[18:58] <lizmat> afk&

[19:01] <lizmat> (off to see some more Guardians Of The Galaxy)

[19:34] <Zoffix> jdv79_: yeah, it was me. CPAN stuff was brought up yesterday, so I asked how it was going.

[19:35] <Zoffix> Hmm. I just got my own office (yey), but it has a weird desk that's a bit too narrow for my 3-computer setup :| Typing with my elbows hanging out (ney)

[19:35] <Zoffix> ZofBot: can't ever win!

[19:35] <ZofBot> Zoffix, c: HEAD say 42

[19:40] <MasterDuke_> m: Int.abs

[19:40] <camelia> rakudo-moar aa23a9: OUTPUT: «Invocant requires an instance of type Int, but a type object was passed.  Did you forget a .new?␤  in block <unit> at <tmp> line 1␤␤»

[19:40] <MasterDuke_> Zoffix: locally i have that saying `Invocant requires an instance of type Int when method 'abs' is called on it, but a type object was passed.  Did you forget a .new?`

[19:42] <MasterDuke_> that wording is awkward, but the functionality is there

[19:42] <Zoffix> Cool

[19:42] <MasterDuke_> anybody have suggestions for a better worded message?

[19:43] <Zoffix> "metho X must be called on an instance of XXX, but a type object was passed"?

[19:46] <timotimo> should we also be giving info about the type the method is declared on and the type object that  was actually passed?

[19:46] <geekosaur> or Invocant for $method requires...

[19:47] <timotimo> because what if the type object you're passing is derived from the one you were supposed to pass

[19:47] <timotimo> but that'd not be an actual problem

[19:47] <MasterDuke_> 'Invocant' can also be 'Parameter $varname'

[19:48] <MasterDuke_> so the wording need to take that into account

[19:49] <MasterDuke_> or those two options changed also

[21:11] <Geth> ¦ nqp: 2bfafb8721 | (Pawel Murias)++ | 2 files

[21:11] <Geth> ¦ nqp: Reindent code

[21:11] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/2bfafb8721

[21:11] <Geth> ¦ nqp: 78b233ef5b | (Pawel Murias)++ | 3 files

[21:11] <Geth> ¦ nqp: [js] Work around for unicode issue

[21:11] <Geth> ¦ nqp:

[21:11] <Geth> ¦ nqp: MoarVM uses NFG while the js backend doesn't do it.

[21:11] <Geth> ¦ nqp: The js backend is cross compiling so that causes a problem with

[21:11] <Geth> ¦ nqp: our hardcoded as string literals lists of characters.

[21:11] <Geth> ¦ nqp: Work around it using nqp::chr(0x....).

[21:11] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/78b233ef5b

[21:12] <pmurias> samcv: what's the status of your unicode grant?

[21:12] <samcv> approved :)

[21:12] <samcv> yesterday

[21:13] <samcv> more than willing to help you with anything you need now/during the grant as well. since i had hoped the script i'm making could also do stuff for other backends as well

[21:16] <pmurias> samcv: thanks, I'll look into the UCD module tommorow

[22:07] <Geth> ¦ roast: 38128f4668 | (Pawel Murias)++ | S02-types/nan.t

[22:07] <Geth> ¦ roast: Remove incorrect fudged test

[22:07] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/38128f4668

[22:07] <Geth> ¦ roast: 0b043cd23e | (Pawel Murias)++ | S02-lexical-conventions/unicode-whitespace.t

[22:07] <Geth> ¦ roast: [js] Remove no longer needed fudges

[22:07] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/0b043cd23e
