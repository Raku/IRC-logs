[00:04] <Zoffix> ZOFFLOP: t/spec/S17-supply/interval.t

[00:04] <Zoffix> ZOFVM: Files=1287, Tests=152981, 155 wallclock secs (21.18 usr  3.63 sys + 3338.95 cusr 170.83 csys = 3534.59 CPU)

[00:16] <Zoffix> ZOFFLOP: hung stresstest; culprit seems to be t/spec/S07-hyperrace/hyper.t (last in the output without "ok" on its line)

[00:20] <Zoffix> ZOFFLOP: t/spec/S11-modules/require.t

[00:21] <Geth> ¦ nqp: 8f9722b7be | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[00:21] <Geth> ¦ nqp: Bump MoarVM

[00:21] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/8f9722b7be

[00:21] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.12...2017.12-1-g912f967

[00:21] <Geth> ¦ rakudo: bbf95dbc7d | (Zoffix Znet)++ | tools/build/NQP_REVISION

[00:21] <Geth> ¦ rakudo: Bump NQP

[00:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bbf95dbc7d

[00:21] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.12...2017.12-1-g8f9722b

[00:23] <lizmat> good night, #perl6-dev!

[00:23] <Zoffix> \o

[00:23] <Geth> ¦ roast: d478095cb0 | (Zoffix Znet)++ | S16-io/eof.t

[00:23] <Geth> ¦ roast: Test IO::Handle.eof after seekage

[00:23] <Geth> ¦ roast:

[00:23] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1322

[00:23] <Geth> ¦ roast: Rakudo fix: https://github.com/MoarVM/MoarVM/commit/912f967831

[00:23] <Geth> ¦ roast:             https://github.com/perl6/nqp/commit/8f9722b7be

[00:23] <Geth> ¦ roast:             https://github.com/rakudo/rakudo/commit/bbf95dbc7d

[00:23] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d478095cb0

[00:31] <Geth> ¦ synopsebot: 6a67e7a3a0 | (Zoffix Znet)++ (committed using GitHub Web editor) | lib/SB/Plugin/DocLinks.pm6

[00:31] <Geth> ¦ synopsebot: Fix incorrect links to docs to types with :: in names

[00:31] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/6a67e7a3a0

[00:43] <Geth> ¦ synopsebot: 7b00c466c3 | (Zoffix Znet)++ (committed using GitHub Web editor) | lib/SB/Plugin/GitHub.pm6

[00:43] <Geth> ¦ synopsebot: Fix mistaken new PR notice parsing

[00:43] <Geth> ¦ synopsebot:

[00:43] <Geth> ¦ synopsebot: Don't parse it as reference to an Issue

[00:43] <Geth> ¦ synopsebot: Fixes https://github.com/perl6/synopsebot/issues/1

[00:43] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/7b00c466c3

[01:37] <Zoffix> moritz: jnthn TimToady looks like there's a conflict in regexes between \# being literal # and being an unspace + comment. If you have any ideas how this should fixed (or if it should be left alone): https://github.com/rakudo/rakudo/issues/1324#issuecomment-353233051

[01:43] <Zoffix> Actually, playing with it more, looks like it isn't so much "conflict" as just an LTAness in that an unaware user can easily make an unspace instead of a literal # they wanted (as happened with the OP)

[06:10] <moritz> m: / \# /

[06:10] <evalable6> moritz, rakudo-moar bbf95dbc7: OUTPUT: «»

[06:11] <moritz> I thought we had a warning for that? where did that go?

[09:54] * lizmat has scheduled her blog post for the 24th

[09:54] <lizmat> please let me know if I missed any major new features that have been added since 2015.12

[09:55] <lizmat> or have any other comments  :-)

[09:55] <lizmat> afk for a few hours&

[10:52] <pmurias> m: my int $a; my int $b; multi foo(int $a is rw) { 200 }; say foo($a+$b);

[10:52] <evalable6> pmurias, rakudo-moar bbf95dbc7: OUTPUT: «200␤»

[10:53] <pmurias> ^^^ this is a bug in the optimizer

[12:12] <Geth> ¦ roast: 904ae98f03 | (Elizabeth Mattijsen)++ | S02-types/WHICH.t

[12:12] <Geth> ¦ roast: Make .WHICH tests less picky

[12:12] <Geth> ¦ roast:

[12:12] <Geth> ¦ roast: Any subclass of ObjAt is also fine.

[12:12] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/904ae98f03

[12:18] <Geth> ¦ rakudo: 202459ce0b | (Elizabeth Mattijsen)++ | 14 files

[12:18] <Geth> ¦ rakudo: Introducing ValueObjAt, the .WHICH for value types

[12:18] <Geth> ¦ rakudo:

[12:18] <Geth> ¦ rakudo: At this point in time, this is simply a subclass of ObjAt.  All .WHICH

[12:18] <Geth> ¦ rakudo: methods in the core setting (apart from the fallback for Mu:D) now create

[12:18] <Geth> ¦ rakudo: objects of this type.  With this a subclass, we gain the easy possibility

[12:18] <Geth> ¦ rakudo: to check whether the object is a valuetype, simply by checking whether the

[12:18] <Geth> ¦ rakudo: .WHICH ~~ ValueObjAt.  This should allow for some more optimizations in

[12:18] <Geth> ¦ rakudo: the near future.

[12:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/202459ce0b

[12:34] <tbrowder> hi #perl6-dev

[12:42] <tbrowder> looking for some help.  i need to inject a hash or a list into the serialization of a key/value pair in Pod.nqp. i have tried stringifying the containers, etc. but no luck so far. i have yet to call into Actions.nqp for pair methods but will do so next if there are no forthcoming hints. i have looked at the .perl versions in p6 land (and can duplicate the string form) but am missing how to get them recognized as a

[12:42] <tbrowder> list or hash from the nqp side.

[12:46] <tbrowder> i should have said i can “almost” get them in the .perl form but need to work on some quoting issues (similar to but not exactly the same as extra quotes on string values).

[12:53] <tbrowder> my approach so far has been to take the incoming string representing the list or hash, convert that to a real list or hash in nqp land, and try to serialize it into the config hash going to p6 land (as the value attached to its appropriate key in the config hash).

[13:00] <lizmat> tbrowder: not sure I understand the problem, but could nqp::islist and nqp::ishash be of service ?

[13:00] <lizmat> m: use nqp; say nqp::istlist(nqp::hash)

[13:00] <evalable6> lizmat, rakudo-moar 202459ce0: OUTPUT: «(exit code 1) ===SORRY!===␤No registered operation handler for 'istlist'␤»

[13:00] <lizmat> m: use nqp; say nqp::islist(nqp::hash)

[13:00] <evalable6> lizmat, rakudo-moar 202459ce0: OUTPUT: «0␤»

[13:00] <lizmat> m: use nqp; say nqp::islist(nqp::list)

[13:00] <evalable6> lizmat, rakudo-moar 202459ce0: OUTPUT: «1␤»

[13:06] <tbrowder> lizmat: thnx. i have used it and will again. i ran into strange build errors when i attempted to dump the $/ object in make_config but will vary some things to try again. interesting that hash is not a list but is assembled like a list.

[13:10] <tbrowder> i think the problem boils down to: how to attach an nqp list or hash as a value to an nqp config hash key.

[13:12] <tbrowder> and serialize the whole object successfully.

[13:12] <dogbert2> ZOFFLOP: t/spec/S32-io/other.t (test #26 - MoarVM panic: Must not GC when in the specializer/JIT)

[13:46] <AlexDaniel> dogbert2: I think prefixing it with just “FLOP:” should be good enough :)

[13:47] <AlexDaniel> .o( DOGFLOP? )

[13:48] <AlexDaniel> interestingly, that's a new one! https://gist.github.com/AlexDaniel/da65080e662bc1c134b887e764eff6f9

[13:49] <lizmat> commute to Niederrhein.pm&

[13:51] <dogbert2> VIKIFLOP, BROKENROBOTFLOP

[13:56] <tbrowder> lizmat: i’m on the right track, thnx!  i double checked, with islist and ishash, that i gen them correctly. (i also found my test file was messed up!!!!). when i saw the error, i realized i need to serialize the hash pairs, just as is done at the end of make_config for its hash. the list is now working, and the hash is not far behind!

[14:02] <samcv> good *

[14:53] <tbrowder> \o/ hooray, 3 pts for a good hash conversion!

[14:54] <lizmat_> :-)

[15:04] <tbrowder> one weird thing though, i had to serialize the list as  type 'Array' instead of 'List' for it to be successfully tested against a list using either is-deeply OR cmp-ok 'eqv'. either way its type was recognized in p6 as a 'List'.

[15:06] <tbrowder> in fact, it tests in p6 as both List and Array, but i must confess i don't understand the diff very much.

[15:17] <lizmat_> the diff is muddy  :-)

[16:08] <[Coke]> AlexDaniel++ #release

[16:15] <b2gills> I just noticed that the release announcement still says “Upcoming releases in 2017 …”

[16:28] <perlpilot> There's still time!

[16:28] <perlpilot> ;-)

[16:33] <Geth> ¦ rakudo: cf7b01ef80 | (Zoffix Znet)++ | 3 files

[16:33] <Geth> ¦ rakudo: Bump latest year number; b2gills+

[16:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cf7b01ef80

[16:40] <Geth> ¦ nqp: 78dd9fb2cb | (Zoffix Znet)++ | README.pod

[16:40] <Geth> ¦ nqp: Bump year

[16:40] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/78dd9fb2cb

[17:12] <Geth> ¦ 6.d-prep: ecadd440a1 | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/README.md

[17:12] <Geth> ¦ 6.d-prep: Update list of roast Win failure Issues

[17:12] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/ecadd440a1

[17:12] <AlexDaniel> b2gills: … oops…

[17:22] <Geth> ¦ rakudo: e5c38ad679 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/create-release-announcement.pl6

[17:22] <Geth> ¦ rakudo: Fix “Upcoming releases in” line

[17:22] <Geth> ¦ rakudo:

[17:22] <Geth> ¦ rakudo: <b2gills> I just noticed that the release announcement still

[17:22] <Geth> ¦ rakudo:           says “Upcoming releases in 2017 …”

[17:22] <Geth> ¦ rakudo: <perlpilot> There's still time!

[17:22] <Geth> ¦ rakudo:

[17:22] <Geth> ¦ rakudo: Uh… oops! The number was hardcoded and now it will be generated

[17:22] <Geth> ¦ rakudo: automatically based on the date of the next release.

[17:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e5c38ad679

[17:25] <AlexDaniel> perhaps it would've been better to not include a year at all

[17:58] <perlpilot> AlexDaniel: how about just "Future releases will include ..." ?

[17:59] <perlpilot> oh, but now that I look at the whole sentence, that bit about lexical pragma needs a word or two

[18:04] <perlpilot> AlexDaniel: for your perusal: https://gist.github.com/perlpilot/d4f97cddb9f7e55d7a20910a4579d062   (or anyone else who wants to make the change)

[18:15] <AlexDaniel> I'm OK with that change (but I'm in a middle of something here so can't commit)

[18:15] <AlexDaniel> although… now that I think about it I'm not sure if I understand the sentence

[18:16] <AlexDaniel> “available with a lexically scoped pragma” what pragma? Is it talking about v6.d.PREVIEW?

[18:19] <perlpilot> That's what I thought it was talking about.

[18:30] <Zoffix> It's not lexically scoped though. It's comp-unit-scoped.

[18:32] <Zoffix> And we have a ton of functionality that isn't part of 6.c spec available without any pragmas :/

[18:33] <Zoffix> m: '♥'.parse-names; # that's one

[18:33] <evalable6> Zoffix, rakudo-moar e5c38ad67: OUTPUT: «(exit code 1) Unrecognized character name [♥]␤  in block <unit> at /tmp/p0hLPWWLkT line 1␤␤»

[18:33] <Zoffix> greppable6: parse-names

[18:33] <greppable6> Zoffix, https://gist.github.com/8b7b8c53afc1b61e42bad48cabef375f

[18:34] <Zoffix> Kinda wanna rename that one to .uniparse

[18:41] <Geth> ¦ 6.d-prep: efa24f68ed | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/FEATURES.md

[18:41] <Geth> ¦ 6.d-prep: Add `Rename `.parse-names` to `.uniparse`` to TODO

[18:41] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/efa24f68ed

[19:12] <TimToady> m: say "#" ~~ m/ \# /

[19:12] <evalable6> TimToady, rakudo-moar e5c38ad67: OUTPUT: «｢#｣␤»

[19:13] <TimToady> I distinctly remember disallowing that at one point, though perhaps that was in STD

[19:14] <TimToady> that's why nqp's throw_unspace method is parameterized to take the character that is being disallowed, I think

[19:14] <TimToady> but nothing calls it on behalf of \#

[19:15] <TimToady> bisect: say "#" ~~ m/ \# /

[19:15] <TimToady> hmm...

[19:17] <TimToady> well, maybe I'm misremembering, and it was parameterized to handle other things like tab, but we could easily add # to that

[19:18] <TimToady> except, of course, for backward compat, sigh

[19:26] <Zoffix> .tell lizmat Sneak-previewing your blog post. Noticed you're talking about .parse-names in it. Coincidentally, I listed that method in 6.d-prep to rename it to .uniparse. Perhaps it should be omited from the blog post? https://github.com/perl6/6.d-prep/commit/efa24f68ed

[19:26] <yoleaux> Zoffix: I'll pass your message to lizmat.

[19:26] <perlpilot> AlexDaniel, Zoffix: Here's a re-word that imagines what that paragraph was trying to accomplish: https://gist.github.com/perlpilot/3a60289a8f269ce82c247d7229a34b12

[19:26] <perlpilot> Otherwise, I don't really understand what it's trying to say beyond the definitive first clause of the first sentence.  :)

[19:28] * Zoffix proposes https://gist.github.com/zoffixznet/e6395a146e46ac194ec1038d991c53ec as alternative

[19:29] <perlpilot> Zoffix: you are a master of Occam's razor :)  +1

[19:32] <Zoffix> .tell lizmat lizmat++ great post. TIL a bunch. P.S.: there's a stray `>` in "the opposite action of base>" close to the end.

[19:32] <yoleaux> Zoffix: I'll pass your message to lizmat.

[19:34] <[Coke]> I am still working on mine and planning to get it out by midnight or so.

[20:22] <AlexDaniel> c: all say "#" ~~ m/ \# /

[20:23] <AlexDaniel> I remember someone was talking about fixing memory leaks… hmm

[20:23] <AlexDaniel> c: all say "#" ~~ m/ \# /

[20:24] <committable6> AlexDaniel, https://gist.github.com/ccbe18d619714b072f6806d909165161

[20:24] <AlexDaniel> maybe I should update rakudo then

[20:24] <AlexDaniel> TimToady: ↑

[21:07] <lizmat> decommute&

[21:07] <yoleaux> 19:26Z <Zoffix> lizmat: Sneak-previewing your blog post. Noticed you're talking about .parse-names in it. Coincidentally, I listed that method in 6.d-prep to rename it to .uniparse. Perhaps it should be omited from the blog post? https://github.com/perl6/6.d-prep/commit/efa24f68ed

[21:07] <yoleaux> 19:32Z <Zoffix> lizmat: lizmat++ great post. TIL a bunch. P.S.: there's a stray `>` in "the opposite action of base>" close to the end.

[21:07] <lizmat> Zoffix++

[21:08] <lizmat> perhaps we should rename parse-names now?  :-)

[21:08] <lizmat> decommute&

[21:15] <Zoffix> lizmat, yeah, ok, I'll add .uniparse in ~2hr

[21:18] <El_Che> Hey, is someone planning to come to FOSDEM on the first weekend of February? I would love to have a kind of "State of the Butterfly" talk. It's been a good tradition in the last years

[21:21] <El_Che> feel free to ping me anytime

[21:27] * [Coke] is reminded to ping his boss about getting sent to conferences.

[21:34] <El_Che> I kind of overdid it last year :)

[21:35] <[Coke]> If fosdem has no registration, how do organizers know if there's room?

[21:50] <tyil> quantum math

[21:50] <tyil> El_Che: I'm going to fosdem, but I have not planned any talk

[21:51] <tyil> I intend to spend most of my time at the perl room and perl booth tho

[22:00] <geekosaur> fosdem bose-einstein condensates? :p

[22:10] <El_Che> [Coke]: mostly, there isn't

[22:12] <El_Che> tyil: talks still welcome. Certainly Perl 6, most proposals are Perl 5

[22:45] <tyil> I dont know enough about perl 6

[22:45] <tyil> and Ive never given a talk before

[22:46] <Geth> ¦ nqp: 8ad3f76ed9 | usev6++ | t/nqp/100-dispatcher.t

[22:46] <Geth> ¦ nqp: Revert "Temporarily remove three newly added tests"

[22:46] <Geth> ¦ nqp:

[22:46] <Geth> ¦ nqp: This reverts commit 24ebb039c93b7c3046ccbfc991c91fb21b7322a8.

[22:46] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/8ad3f76ed9

[22:46] <Geth> ¦ nqp: 2650ecdc4c | usev6++ | t/nqp/100-dispatcher.t

[22:46] <Geth> ¦ nqp: Revert "[jvm] Skip some failing tests"

[22:46] <Geth> ¦ nqp:

[22:46] <Geth> ¦ nqp: Unfortunately, nqp-j already explodes during stage classfile,

[22:46] <Geth> ¦ nqp: so skipping the test for the jvm backend didn't help.

[22:46] <Geth> ¦ nqp:

[22:46] <Geth> ¦ nqp: I'll commit a different workaround, cmp. GH #384.

[22:46] <synopsebot> NQP#384 [open]: https://github.com/perl6/nqp/issues/384 [JVM] [JVM] Error during bytecode generation with nqp::takedispatcher as last expression in block

[22:46] <Geth> ¦ nqp:

[22:46] <Geth> ¦ nqp: This reverts commit ca5c3bd28f9c31449c9f38db469e7d88aec69b65.

[22:46] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/2650ecdc4c

[22:46] <Geth> ¦ nqp: 5146baf24b | usev6++ | t/nqp/100-dispatcher.t

[22:46] <Geth> ¦ nqp: [jvm] Workaround for test for nqp::cleardispatcher

[22:46] <Geth> ¦ nqp:

[22:46] <Geth> ¦ nqp: Compare GH #384

[22:46] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/5146baf24b

[22:52] <bartolin> .tell pmurias I fiddled with the test for nqp::cleardispatcher you added yesterday. If I'm not mistaken the workaround I added does not change the purpose of the test -- so I hope my change is okay for you.

[22:52] <yoleaux> bartolin: I'll pass your message to pmurias.

[22:52] <Zoffix> tyil: sounds like now is the perfect time :)

[22:58] <Geth> ¦ roast: c74d7f3705 | usev6++ | 3 files

[22:58] <Geth> ¦ roast: [jvm] Unfudge some tests

[22:58] <Geth> ¦ roast:

[22:58] <Geth> ¦ roast: Fixed with https://github.com/perl6/nqp/commit/567f6568f1

[22:58] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c74d7f3705

[23:06] <tyil> Zoffix: if I had anything interesting to give a talk about, maybe

[23:06] <tyil> I told the amsterdam.pm folk I'd give a talk on cpan6 once I release a 1.0 tho

[23:55] <El_Che> amsterdam, brussels. Not far ;)
