[00:24] <BenGoldberg> u: smile

[00:24] <unicodable6> BenGoldberg, U+2323 SMILE [So] (?)

[00:24] <unicodable6> BenGoldberg, U+1DA3E SIGNWRITING MOUTH SMILE [Mn] (Â ????)

[00:24] <unicodable6> BenGoldberg, 5 characters in total: https://gist.github.com/c49062008979ef229396d09e34f8ced3

[00:35] <Zoffix> ZofBot: I'm an Internet hobo tonight. No power in the apartment, except for my fridge and music nook

[00:35] <ZofBot> Zoffix, 104 - 4

[00:35] <Zoffix> and thanks to a dangerously chained extention cord, my AC is powered on too :p

[00:38] <MasterDuke> anybody here have any thoughts about my idea here https://irclog.perlgeek.de/moarvm/2017-08-11#i_15003263 and continued here https://irclog.perlgeek.de/moarvm/2017-08-12#i_15003873 ?

[00:40] * Zoffix has no opinion

[01:09] <BenGoldberg> My opinion is to generate *just* a debug build, then peel off the debugging symbols into a separate file as described here: https://stackoverflow.com/questions/866721/how-to-generate-gcc-debug-symbol-outside-the-build-target

[01:11] <BenGoldberg> In theory, the resulting binary should be basically the same as if it hadn't been produced with debugging.

[01:12] <ugexe> just make rakudobrew do it by default, encouraging normal users to not use via increased build time

[01:12] <AlexDaniel> thanks

[01:13] <MasterDuke> BenGoldberg: sounds good too. i don't really have an opinion on how it's done, just seemed like a nice thing have in general

[01:14] <BenGoldberg> How much longer does it take to build with debug symbols than without?

[01:17] <MasterDuke> no real noticeable difference on my system

[01:19] <geekosaur> building for debugging isn't usually a compile time difference, nor is it just symbols. it's that you need to defeat certain optimizations for the result to actually be debuggable

[01:19] <geekosaur> (variables will not be created, stack frames may be truncated or missing entirely, etc.)

[01:27] * Zoffix is -1 on peeling anything. The fewer things for bugs to crawl in the better :D

[03:01] <AlexDaniel> in case somebody is wondering why there's nothing in the changelog yet: I'm having a little releaseception here. I'm on it, don't worry, just working on a tool that'd help me with it

[06:43] <stmuk> is there a list of and instructions for the various bots anywhere?

[07:33] <lizmat> Files=1217, Tests=67426, 258 wallclock secs (13.11 usr  4.76 sys + 1724.85 cusr 172.35 csys = 1915.07 CPU)

[07:41] <[Tux]> :(

[07:41] <[Tux]> This is Rakudo version 2017.07-148-g5fcce6732 built on MoarVM version 2017.07-382-g348b4262

[07:41] <[Tux]> csv-ip5xs        2.151 - 2.175

[07:41] <[Tux]> test            12.647

[07:41] <[Tux]> test-t           4.372 - 4.421

[07:41] <[Tux]> csv-parser      14.423

[08:01] <nine> [Tux]: is this on Inline::Perl5 master or on an older version?

[08:03] <nine> AlexDaniel++ # moar release tools

[08:12] <[Tux]> nine, I usd moar-blead from rakudobrew and zef for Inline::Perl5

[08:22] <nine> [Tux]: I just uploaded Inline::Perl5 0.29 to CPAN with lots of speedups

[08:24] <[Tux]> Ah, my error is that I only did "zef update", not "zef upgrade"

[08:25] <[Tux]> Oops:

[08:25] <[Tux]> No such method 'dist' for invocant of type 'Any'. Did you mean any of these?

[08:25] <[Tux]> List

[08:25] <[Tux]> first

[08:25] <[Tux]> gist

[08:25] <[Tux]> isa

[08:25] <[Tux]> on "zef upgrade"

[08:26] <[Tux]> in sub MAIN at /pro/3gl/CPAN/rakudobrew/moar-blead-nom/install/share/perl6/site/sources/196257200EAC315E338DCD7213C9B3B1673752CB (Zef::CLI) line 232

[08:26] <[Tux]> in block <unit> at /pro/3gl/CPAN/rakudobrew/moar-blead-nom/install/share/perl6/site/resources/C3893DD6E92E8A64304F0D65AF5173B7BC3531CA line 1

[08:30] <[Tux]> nine, zef update; zef upgrade Inline::Perl5 does not (yet) see 0.29

[08:34] <[Tux]> now it does. Timing on their way ...

[08:46] <[Tux]> Holy shit

[08:46] <[Tux]> This is Rakudo version 2017.07-148-g5fcce6732 built on MoarVM version 2017.07-382-g348b4262

[08:46] <[Tux]> csv-ip5xs        1.416 - 1.456

[08:46] <[Tux]> test            12.761

[08:46] <[Tux]> test-t           4.323 - 4.628

[08:46] <[Tux]> csv-parser      15.078

[08:53] <nine> Note that ~ half a second of that is startup time :)

[08:55] <nine> Btw. Schiphol airport security people are just plain nuts. I forgot I had a water bottle in my bag and of course they found it. She then threw it away without asking which I contested because I'd just have to empty it. But they then stopped me from just drinking it right there because it "isn't allowed". They really wanted me to go back outside, drink it there and requeue. It would literally have taken me

[08:55] <nine> some 3 seconds to just finish the bottle right there.

[08:55] <nine> The whole discussion about it was taking waaaay longer and the queue built up.

[08:56] <nine> None of the communication Aikido helped in any way :/ At the end the supervisor just took the bottle and threw it away and went away.

[08:56] <nine> I've never been treated this unfriendly on any airport

[09:04] <stmuk> the Swiss airports are amusing with their large selection of knives after security

[09:04] <stmuk> I plan to buy a Swiss Army Chocolate Bar shortly :)

[09:18] <pmurias> nine: I hope the security theatre made you feel extra safe ;)

[09:26] <nine> more like extra dry ;)

[09:26] <nine> ok, boarding the plane now

[11:05] <Geth> Â¦ rakudo/nom: 93a5eff7c3 | (Elizabeth Mattijsen)++ | src/core/Junction.pm

[11:05] <Geth> Â¦ rakudo/nom: Make Junction ~ Str and Str ~ Junction 1.7x faster

[11:05] <Geth> Â¦ rakudo/nom:

[11:05] <Geth> Â¦ rakudo/nom: - based on a 26 element junction

[11:05] <Geth> Â¦ rakudo/nom: - by not .Str ing something that is already a Str

[11:05] <Geth> Â¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/93a5eff7c3

[11:56] <Geth_> Â¦ star: 242b5518f0 | (Steve Mynott)++ | patches/star-ver.patch

[11:56] <Geth_> Â¦ star: patch gen-version.pl to add Star in perl6 -v which is hopefully saner

[11:56] <Geth_> Â¦ star: review: https://github.com/rakudo/star/commit/242b5518f0

[12:01] <AlexDaniel> huggable: bots

[12:01] <huggable> AlexDaniel, The #perl6 irc channel normally hosts several helpful bots. I am a bot, and everyone else voiced on this channel is a bot. See the full list here: https://github.com/perl6/doc/issues/711#issuecomment-235414744

[12:01] <AlexDaniel> stmuk: ?

[12:01] <AlexDaniel> stmuk: all whateverables (10 bots right now) have pretty good documentation on whateverable wiki

[12:02] <AlexDaniel> stmuk: here: https://github.com/perl6/whateverable/wiki

[12:02] <Geth_> Â¦ star: 20b84fc662 | (Steve Mynott)++ | patches/perl6-pod-to-bigpage.patch

[12:02] <Geth_> Â¦ star: moved upstream

[12:02] <Geth_> Â¦ star: review: https://github.com/rakudo/star/commit/20b84fc662

[12:03] <AlexDaniel> for all other bots you'd have to look in the repo or somethingâ€¦ but the comment that huggable linked above should have links to git repos

[12:04] <stmuk> ah thanks I probably had that but lost the link .. maybe useful in the /topic

[12:05] <AlexDaniel> it's kinda weird that it is a github commentâ€¦ it *feels* like we can do better, but I'm not sure where to move it

[12:15] <Zoffix> Unfun fact of the day: with my 2.3MB script that copies 13,109 files perl takes 1m32s to *run* it, while rakudo takes 1m33s to just *compile* it

[12:17] <Zoffix> oh, it's actually 8,273 files

[12:22] <Zoffix> And perl takes 7.128s to compile it

[12:23] <Zoffix> ZofBot: #WINNING!

[12:23] <ZofBot> Zoffix, org/wiki/Tracing_garbage_collection>

[12:31] <timotimo> Zoffix: ;(

[12:34] <Zoffix> :)

[13:15] <pmurias> Zoffix++ # modules.perl6.org look upgrade

[13:20] <Zoffix> \o/

[13:58] <AlexDaniel> can I have rakudo commit bit for the upcoming release?

[14:07] <Zoffix> jnthn: ^

[14:08] <Zoffix> The CLA was received, as confirmed by [Coke]

[15:23] <jnthn> AlexDaniel: Invitation sent.

[15:50] <AlexDaniel> thanks!

[23:58] <Geth> Â¦ rakudo/nom: 20e93d89c8 | (Elizabeth Mattijsen)++ | src/core/Rakudo/Iterator.pm

[23:58] <Geth> Â¦ rakudo/nom: Introducing R:I.TwoValues

[23:58] <Geth> Â¦ rakudo/nom:

[23:58] <Geth> Â¦ rakudo/nom: A simple iterator producing only the two values given.  Intended to

[23:58] <Geth> Â¦ rakudo/nom: be used by situations such as .kv on Pair and scalar values.

[23:58] <Geth> Â¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/20e93d89c8

[23:58] <Geth> Â¦ rakudo/nom: 30584dac2f | (Elizabeth Mattijsen)++ | src/core/Pair.pm

[23:58] <Geth> Â¦ rakudo/nom: Streamline the standard Seq methods on Pair

[23:58] <Geth> Â¦ rakudo/nom:

[23:58] <Geth> Â¦ rakudo/nom: - add dedicated .iterator

[23:58] <Geth> Â¦ rakudo/nom: - make sure that .keys/kv/values/pairs/antipairs produce a Seq

[23:58] <Geth> Â¦ rakudo/nom:   instead of a List, just as they do on any other object.

[23:58] <Geth> Â¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/30584dac2f
