[00:00] <buggable> ??? It's time for the monthly Accidental /win Lottery ??? We have 2 ballots submitted by 2 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a roll of duck tape!

[03:35] <AlexDaniel> squashable6: status

[03:35] <squashable6> AlexDaniel, ⚠? Next SQUASHathon in 5 days and ≈6 hours (2017-10-07 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[04:24] <nine> .tell sjn IMHO named-anywhere is a hack that works around rather than fixes the issue. PR 688 replaces the hack by convention and still does not fix the whole thing.

[04:24] <yoleaux> nine: I'll pass your message to sjn.

[04:41] * Zoffix goes back to rakudobrew on homebox

[04:42] <Zoffix> Turns out I do need multiple rakudo versions on occasion to debug stuff :)

[04:44] <nine> Zoffix: well you are one of the elect few in rakudobrew's target audience after all :)

[04:44] <Zoffix> :D

[05:34] <nine> OMG it lives!

[05:54] <nine> This will shave ~ 100 ms off csv-ip5xs' warmup time and even more for more complex Inline::Perl5 users and NativeCall users in general.

[05:54] <Zoffix> \o/

[05:55] <nine> That is...if I can fix the issue with the Staging repo this patch uncovers

[05:58] <nine> Seems like with everything I do I will eventually hit the wall of rouge references breaking precompilation

[06:00] <nine> Apparently the mere presence of an EXPORT sub triggers it

[06:02] <nine> Nope, that's not it

[06:06] <nine> It's that I moved this: my $repr_map := nqp::hash( "CArray",    "carray", "CPPStruct", "cppstruct", "CPointer",  "cpointer", "CStruct",   "cstruct", "CUnion",    "cunion", "VMArray",   "vmarray",);

[06:06] <nine> before the use statements in the file.

[06:06] <nine> No wonder I hate this kind of bugs

[06:10] <nine> Yep, just move the use statements to the top and everything's fine again

[07:06] <Zoffix> m: say "xxxxx" ~~ /.**{1..0}/

[07:06] <camelia> rakudo-moar 4d0ead: OUTPUT: «｢xxxxx｣␤»

[07:06] <Zoffix> m: say "xxxxx" ~~ /.**{2..1}/

[07:06] <camelia> rakudo-moar 4d0ead: OUTPUT: «Nil␤»

[07:06] <Geth> ¦ rakudo/nom: 80d6b425ce | (Stefan Seifert)++ | lib/NativeCall.pm6

[07:06] <Geth> ¦ rakudo/nom: Compile optimized bodies of native subs at compile time

[07:06] <Geth> ¦ rakudo/nom:

[07:06] <Geth> ¦ rakudo/nom: Previously the optimized bodies of native subs were compiled on the first

[07:06] <Geth> ¦ rakudo/nom: call of the sub. NativeCall now exports a CHECK phaser to do this at the

[07:06] <Geth> ¦ rakudo/nom: end of the compilation phase. This means that it happens e.g. during

[07:06] <Geth> ¦ rakudo/nom: precompilation and can be done once per installation instead of once per run.

[07:06] <Geth> ¦ rakudo/nom:

[07:06] <Geth> ¦ rakudo/nom: Note that loading the native library is still done at runtime. Also since we

[07:06] <Geth> ¦ rakudo/nom: only know if we can JIT compile the calling code after nativecallbuild, we

[07:06] <Geth> ¦ rakudo/nom: compile both the JITed and non-JITed body candidates and select the appropriate

[07:06] <Geth> ¦ rakudo/nom: one in !setup.

[07:06] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/80d6b425ce

[07:07] <nine> lizmat: This ^^^ shaves ~ 100 ms off csv-ip5xs' warmup time and even more for more complex Inline::Perl5 users and NativeCall users in general.

[07:09] * Zoffix digs deeper down to see wtf it thinks 1..0 means inf :/

[07:09] <nine> lizmat: saves 21 % of Inline::Perl5's test suite's CPU time

[07:10] <Zoffix> :o

[07:11] <Zoffix> m: say "xxxxx" ~~ /.**2..0/

[07:11] <camelia> rakudo-moar 80d6b4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Empty range␤at <tmp>:1␤------> 3say "xxxxx" ~~ /.**2..07⏏5/␤»

[07:11] <Zoffix> hm, OK. throwing is easier ^_^

[07:13] <nine> Boy am I glad that this work turned out to actually clearly improve things :)

[07:14] <Zoffix> \o/

[07:56] <travis-ci> Rakudo build failed. Stefan Seifert 'Compile optimized bodies of native subs at compile time

[07:56] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/281845278 https://github.com/rakudo/rakudo/compare/4d0ead240aff...80d6b425ce0f

[07:56] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[08:06] <Zoffix> 1 job: Stage parse      : MoarVM panic: Internal error: invalid thread ID 14475144 in GC work pass

[08:07] <nine> I dare say my commit is innocent, since it touches only NativeCall.pm6

[08:08] <nine> Thread ID 14475144 looks like memory corruption or a missing MVMROOT to me

[08:10] <Zoffix> ZOFVM: Files=1275, Tests=152192, 149 wallclock secs (22.64 usr  3.88 sys + 3134.07 cusr 258.00 csys = 3418.59 CPU)

[08:14] <Zoffix> hm

[08:14] <Zoffix> This dies with "cannot use empty range" say ‘abcefghij’ ~~ / .**{10..5} / but this matches an empty string because endpoints <0 get treated as 0: say ‘abcefghij’ ~~ / .**{-10..-5} /

[08:14] <Zoffix> Wonder if second one should die too

[08:22] <Zoffix> I meant {-5..-10} for the second one

[08:28] <Geth> ¦ rakudo/nom: 681d6be974 | (Zoffix Znet)++ | 3 files

[08:28] <Geth> ¦ rakudo/nom: Fix and improve `**` regex quantifier

[08:28] <Geth> ¦ rakudo/nom:

[08:28] <Geth> ¦ rakudo/nom: Fixes RT#130911: https://rt.perl.org/Ticket/Display.html?id=130911

[08:28] <Geth> ¦ rakudo/nom: Fixes RT#130127: https://rt.perl.org/Ticket/Display.html?id=130127

[08:28] <Geth> ¦ rakudo/nom: Fixes RT#130125: https://rt.perl.org/Ticket/Display.html?id=130125

[08:28] <Geth> ¦ rakudo/nom: Fixes RT#130124: https://rt.perl.org/Ticket/Display.html?id=130124

[08:28] <Geth> ¦ rakudo/nom:

[08:28] <Geth> ¦ rakudo/nom: <…commit message has 11 more lines…>

[08:28] <synopsebot> RT#130911 [open]: https://rt.perl.org/Ticket/Display.html?id=130911 [REGEX] bogus range o ** { 1..0 } succeeds

[08:28] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/681d6be974

[08:28] <synopsebot> RT#130127 [new]: https://rt.perl.org/Ticket/Display.html?id=130127 [REGEX] Excluded endpoints in ranged quantifiers do not work at all (/ .**{2^..^2} /)

[08:28] <synopsebot> RT#130125 [new]: https://rt.perl.org/Ticket/Display.html?id=130125 [REGEX] negative numbers in ranges are understood incorrectly (/ .**{-10..-5} /)

[08:28] <synopsebot> RT#130124 [new]: https://rt.perl.org/Ticket/Display.html?id=130124 [LTA] NaN in quantifiers is not allowed, message complains about P6opaque (/ .**{NaN..NaN} /)

[08:29] <Geth> ¦ roast: 99c822abde | (Zoffix Znet)++ | S05-metasyntax/regex.t

[08:29] <Geth> ¦ roast: Unfudge and add more of ** regex quantifier tests

[08:29] <Geth> ¦ roast:

[08:29] <Geth> ¦ roast: RT#130911: https://rt.perl.org/Ticket/Display.html?id=130911

[08:29] <Geth> ¦ roast: RT#130127: https://rt.perl.org/Ticket/Display.html?id=130127

[08:29] <Geth> ¦ roast: RT#130125: https://rt.perl.org/Ticket/Display.html?id=130125

[08:29] <Geth> ¦ roast: RT#130124: https://rt.perl.org/Ticket/Display.html?id=130124

[08:29] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/681d6be974

[08:29] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/99c822abde

[08:30] * Zoffix smiles at the fixed synopsebot not spamming seen tickets anymore o/

[08:49] <Geth> ¦ rakudo/nom: 07c1e4fc89 | (Zoffix Znet)++ | src/core/Match.pm

[08:49] <Geth> ¦ rakudo/nom: Add more info to the comment

[08:49] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/07c1e4fc89

[08:54] <lizmat> .

[08:54] <yoleaux> 04:07Z <AlexDaniel> lizmat: It's probably a good idea to mention SQUASHathon and Hacktoberfest in the next weekly. https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day https://github.com/issues?utf8=%E2%9C%93&q=org%3Aperl6+is%3Aopen+label%3AHacktoberfest+ https://hacktoberfest.digitalocean.com/

[08:54] <yoleaux> 04:09Z <AlexDaniel> lizmat: oh, and https://raw.githubusercontent.com/perl6/marketing/master/TablePosters/SQUASHathon/2017.10/v1--CommunityBugSquashathon--SQUARE-social-media.jpg

[08:54] <[Tux]> MoarVM oops: Can't find nc_site value on spesh ins <nativeinvoke_o> 0

[08:55] <lizmat> .ask timotimo why 4d0ead240aff4510e ?

[08:55] <yoleaux> lizmat: I'll pass your message to timotimo.

[08:55] <[Tux]> not in the main test file, but in the comparison tests

[08:56] <[Tux]> $ p6 csv-ip5xs.pl

[08:56] <[Tux]> MoarVM oops: Can't find nc_site value on spesh ins <nativeinvoke_o> 0

[08:58] <[Tux]> test-t first run was 3.251, and I cannot run the test beyond that currently

[08:59] <nine> [TuxCM]: ah, I already fixed that in MoarVM. Needs a bump

[09:04] <nine> |Tux|: can you re-test with current MoarVM or should I commit a bump?

[09:05] <[Tux]> i'll retry

[09:13] <[Tux]> Still get the failure. Should I remove some build folder?

[09:15] <[Tux]> removed all precomp's. starting afresh

[09:16] <nine> |Tux|: you're running with MoarVM 2017.09.1-62-g89ca8eb08?

[09:17] <[Tux]> CSV6/lib/.precomp was massive :(

[09:18] <[Tux]> and I still have the nc_site fail

[09:19] <[Tux]> $ p6 --version

[09:19] <[Tux]> This is Rakudo version 2017.09-176-g07c1e4fc8 built on MoarVM version 2017.09.1-50-g3059ba28

[09:19] <[Tux]> implementing Perl 6.c.

[09:20] <[Tux]> # git_reference/MoarVM (master)

[09:20] <[Tux]> HEAD is now at 89ca8eb0 Make "Can't find nc_site value on spesh ins" non-fatal

[09:20] <[Tux]> # moar-blead-nom (nom)

[09:20] <[Tux]> HEAD is now at 07c1e4fc8 Add more info to the comment

[09:20] <[Tux]> # moar-blead-nom/nqp (master)

[09:20] <[Tux]> HEAD is now at 71fc322e5 Map the new nativeinvoke OP

[09:21] <[Tux]> # moar-blead-nom/nqp/MoarVM (master)

[09:21] <[Tux]> HEAD is now at 89ca8eb0 Make "Can't find nc_site value on spesh ins" non-fatal

[09:56] <travis-ci> Rakudo build passed. Zoffix Znet 'Add more info to the comment'

[09:56] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/281861039 https://github.com/rakudo/rakudo/compare/681d6be9742e...07c1e4fc895e

[10:13] <lizmat> afk again&

[10:37] <timotimo> lizmat: because it's not polite to output errors to stdout in a user program, i guess? it looks like you can just cause it by putting a BUILDALL method in your class along with an attribute, and it'll complain.

[10:37] <yoleaux> 08:55Z <lizmat> timotimo: why 4d0ead240aff4510e ?

[12:13] <Geth> ¦ rakudo/nom: f8a74eabae | (Zoffix Znet)++ | src/core/Exception.pm

[12:13] <Geth> ¦ rakudo/nom: Fix typo in Exception's message; MasterDuke++

[12:13] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f8a74eabae

[12:14] <Geth> ¦ rakudo/nom: 78c967cbd5 | (Zoffix Znet)++ | lib/NativeCall.pm6

[12:14] <Geth> ¦ rakudo/nom: Remove Perlism; MaserDuke++

[12:14] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/78c967cbd5

[12:39] <Geth> ¦ nqp: a0618a6256 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[12:39] <Geth> ¦ nqp: Bump MoarVM

[12:39] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a0618a6256

[12:39] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.09.1-49-gb3dd812aa...2017.09.1-62-g89ca8eb

[12:39] <Geth> ¦ rakudo/nom: 921db910f1 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[12:39] <Geth> ¦ rakudo/nom: Bump NQP

[12:39] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/921db910f1

[12:39] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.09-37-g71fc322e5...2017.09-38-ga0618a6

[12:57] <travis-ci> NQP build failed. Zoffix Znet 'Bump MoarVM'

[12:57] <travis-ci> https://travis-ci.org/perl6/nqp/builds/281901133 https://github.com/perl6/nqp/compare/71fc322e560d...a0618a62560a

[12:58] <Zoffix> "t/nqp/059-nqpop.t ...................... 1/333 java.lang.ClassCastException: org.perl6.nqp.sixmodel.reprs.P6strInstance cannot be cast to java.lang.String"

[13:20] <Geth> ¦ rakudo/full-make-test: edce8f53bd | (Zoffix Znet)++ | 2 files

[13:20] <Geth> ¦ rakudo/full-make-test: Add all Rakudo's tests to `make test`

[13:20] <Geth> ¦ rakudo/full-make-test: review: https://github.com/rakudo/rakudo/commit/edce8f53bd

[13:22] <Zoffix> It's hard to work with my cat two feet away, staring at me... judging me: https://imgur.com/vhThv1R

[13:23] <Zoffix> ZofBot: that's why I love you more. You never stare...

[13:23] <ZofBot> Zoffix, replace a with a, and it turns the utf8c8 graphemes into standard text which it should not. will be fixing that too

[13:23] <Zoffix> Cool. Thanks for fixing that.

[13:23] <MasterDuke> looks like it ran face first into an ink blotter

[13:25] <teatime> I was gonna say it looks like Rorschach

[13:25] <Zoffix> :)

[13:44] <timotimo> one of our cats likes sitting between my keyboard and the monitors

[13:53] <Geth> ¦ rakudo/full-make-test: c6ff787a67 | (Zoffix Znet)++ | 5 files

[13:53] <Geth> ¦ rakudo/full-make-test: Don't rely on roast checkout for `make test`

[13:53] <Geth> ¦ rakudo/full-make-test: review: https://github.com/rakudo/rakudo/commit/c6ff787a67

[13:58] <[Tux]> This is Rakudo version 2017.09-179-g921db910f built on MoarVM version 2017.09.1-62-g89ca8eb0

[13:58] <[Tux]> csv-ip5xs        1.224 -  1.315

[13:58] <[Tux]> test            10.168 - 10.228

[13:58] <[Tux]> test-t           3.367 -  3.527

[13:58] <[Tux]> csv-parser      12.785 - 13.012

[13:58] <Zoffix> buggable: speed 4

[13:58] <buggable> Zoffix, ▁▁▄█ dates: 2017-10-01–2017-10-01; range: 3.214s–3.527s; speed: 10% slower

[13:58] <Zoffix> :(

[14:03] <MasterDuke> but it looks like nine++'s recent work sped up csv-ip5xs, a quick look through the logs shows 1.260 as the next fastest

[14:04] <Zoffix> :)

[14:27] <Zoffix> damn

[14:27] <Zoffix> We should consider [re]moving all roast files that we aren't running. Just spent time editing S24-testing/1-basic.t just to find out it's not in the spectest.data list -_

[14:28] <Geth> ¦ roast: c16f1480b6 | (Zoffix Znet)++ | S24-testing/1-basic.t

[14:28] <Geth> ¦ roast: Add warning about added tests to end of file

[14:28] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c16f1480b6

[14:31] <ugexe> i've done that too

[14:33] <Geth> ¦ 6.d-prep: fa97ad371d | (Zoffix Znet)++ (committed using GitHub Web editor) | TODO/README.md

[14:33] <Geth> ¦ 6.d-prep: Mention S24-testing/1-basic.t situation

[14:33] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/fa97ad371d

[14:35] <Geth> ¦ rakudo/nom: 8479a1ba03 | (Zoffix Znet)++ | lib/Test.pm6

[14:35] <Geth> ¦ rakudo/nom: Make cmp-ok try harder to get useful description

[14:35] <Geth> ¦ rakudo/nom:

[14:35] <Geth> ¦ rakudo/nom: Merely stringifying the $got/$expected sometimes results in

[14:35] <Geth> ¦ rakudo/nom: warnings/empty descriptions in the failed description output.

[14:35] <Geth> ¦ rakudo/nom: Make descriptions via .perl//.gist

[14:35] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8479a1ba03

[14:36] <Geth> ¦ roast: 1287ea5ab3 | (Zoffix Znet)++ | S24-testing/13-cmp-ok.t

[14:36] <Geth> ¦ roast: Test cmp-ok provides useful desc of its args

[14:36] <Geth> ¦ roast:

[14:36] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/8479a1ba03

[14:36] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1287ea5ab3

[14:37] <Geth> ¦ rakudo/nom: bbc6570f5d | (Zoffix Znet)++ | t/spectest.data

[14:37] <Geth> ¦ rakudo/nom: Add S24-testing/13-cmp-ok.t to list of test files

[14:37] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bbc6570f5d

[14:44] <Zoffix> ZOFFLOP: t/spec/S11-modules/nested.t

[14:59] <Geth> ¦ rakudo/nom: 1b9638e2b5 | (Zoffix Znet)++ | src/core/List.pm

[14:59] <Geth> ¦ rakudo/nom: Make List.ACCEPTS non-fatal for lazy iterables

[14:59] <Geth> ¦ rakudo/nom:

[14:59] <Geth> ¦ rakudo/nom: Since we tend to never die in our other ACCEPTS

[14:59] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1b9638e2b5

[14:59] <Geth> ¦ roast: 62532fb591 | (Zoffix Znet)++ | S03-smartmatch/array-array.t

[14:59] <Geth> ¦ roast: Spec smartmatch with lazy iterables

[14:59] <Geth> ¦ roast:

[14:59] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/1b9638e2b5

[14:59] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/62532fb591

[15:08] <Zoffix> m: say (""~~m/^/, 42, 50).ACCEPTS: 42

[15:08] <camelia> rakudo-moar bbc657: OUTPUT: «(｢｣ 42 50)␤»

[15:08] <Zoffix> ಠ_ಠ

[15:08] <Zoffix> I forget, what is this used for?

[15:12] <jnthn> Hm, List is a smartmatch terminal for the sake of m:g mebbe?

[15:15] <Zoffix> I guess it's specialcased during codegen, 'cause &infix:<~~> would Boolify it: https://github.com/rakudo/rakudo/blob/921db910f/src/core/Mu.pm#L862

[15:15] <Zoffix> m: $_= "abc"; &infix:<~~>(m:g/./, "abc").say

[15:16] <camelia> rakudo-moar 1b9638: OUTPUT: «False␤»

[15:16] <Zoffix> m: say "abc" ~~ m:g/./

[15:16] <camelia> rakudo-moar 1b9638: OUTPUT: «(｢a｣ ｢b｣ ｢c｣)␤»

[15:16] <Zoffix> OK

[15:26] <travis-ci> Rakudo build passed. Zoffix Znet 'Make cmp-ok try harder to get useful description

[15:26] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/281926101 https://github.com/rakudo/rakudo/compare/921db910f147...8479a1ba037b

[16:07] <travis-ci> Rakudo build passed. Zoffix Znet 'Add S24-testing/13-cmp-ok.t to list of test files'

[16:07] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/281926519 https://github.com/rakudo/rakudo/compare/8479a1ba037b...bbc6570f5db7

[16:13] <AlexDaniel> “The Unicode support is not "garbage", it's limited to the BMP.”

[16:13] * AlexDaniel flips the table

[16:14] <teatime> heh url?  I find bug-thread arguments soothing for some reason.

[16:15] <AlexDaniel> teatime: https://github.com/perl6/marketing/issues/1

[16:17] <teatime> :/  that was not super satisfying.

[16:17] * teatime makes you guys some herbal tea and heads over to the systemd bugzilla

[16:19] <Zoffix> Turns out my ** fix has a bug. I found it only by writing docs and running code examples in them :P

[16:19] <jnthn> AlexDaniel: Using words like "garbage" to describe something isn't likely to help motivate people trying to maintain/improve the thing in their lack of free time.

[16:19] <jnthn> I'm sure there's a less loaded word you coulda used.

[16:21] <Geth> ¦ rakudo/nom: 4ca1fc3c16 | (Zoffix Znet)++ | src/core/Match.pm

[16:22] <Geth> ¦ rakudo/nom: Fix regex `**` with non-Int values…

[16:22] <Geth> ¦ rakudo/nom:

[16:22] <Geth> ¦ rakudo/nom: …leaving behind unhandled Failures

[16:22] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4ca1fc3c16

[16:22] <Geth> ¦ roast: 98fec08b00 | (Zoffix Znet)++ | S05-metasyntax/regex.t

[16:22] <Geth> ¦ roast: Test `**` quant does not leave unhandled Failures

[16:22] <Geth> ¦ roast:

[16:22] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/4ca1fc3c16

[16:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/98fec08b00

[16:26] <AlexDaniel> there's a very soft alternative: “LTA”. This wouldn't've motivated me a slightest bit.

[16:27] <AlexDaniel> I'm not pointing out that there's a problem, everyone knows about it already. I'm pointing out that I can't stand this problem, it makes me angry.

[16:27] <Zoffix> ZofBot: kill all humans and their petty arguments

[16:27] <ZofBot> Zoffix, @sorted = sort +*, @unsorted; #ascending numeric @sorted = sort -*, @unsorted; #descending numeric OrderingPair A combination of the two methods above, for when one wishes to take advantage of the internal caching of keys that is e

[16:27] <Zoffix> C'mon #perl6-dev is a sanctuary to nourish the hacking spirit. Move your debates to #perl6 :)

[16:28] <AlexDaniel> .oO( #perl6-rant )

[16:41] <[Tux]> This is Rakudo version 2017.09-183-g4ca1fc3c1 built on MoarVM version 2017.09.1-62-g89ca8eb0

[16:41] <[Tux]> csv-ip5xs        1.214 -  1.215

[16:41] <[Tux]> test             9.761 -  9.841

[16:41] <[Tux]> test-t           3.278 -  3.347

[16:41] <[Tux]> csv-parser      12.733 - 12.922

[16:52] <nine> Tomorrow, I'm gonna have ~ 3 hours drive and 10 hours flight worth of coding time :) I guess I'll try extending the NativeCall JIT compiler to more argument types.

[16:53] <Geth> ¦ rakudo: skids++ created pull request #1177: Fix some unspace parsing cases (RT#128462 and degenerate unspace)

[16:53] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1177

[16:53] <synopsebot> RT#128462 [open]: https://rt.perl.org/Ticket/Display.html?id=128462 [PARSER] Unspace after a sigil-less term causes parser error

[16:55] <travis-ci> Rakudo build passed. Zoffix Znet 'Make List.ACCEPTS non-fatal for lazy iterables

[16:55] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/281931896 https://github.com/rakudo/rakudo/compare/bbc6570f5db7...1b9638e2b5dd

[17:00] <Geth> ¦ rakudo/nom: 11070e0fee | skids++ | src/Perl6/Grammar.nqp

[17:00] <Geth> ¦ rakudo/nom: Fix some unspace parsing cases (RT#128462 and degenerate unspace)

[17:00] <Geth> ¦ rakudo/nom:

[17:00] <Geth> ¦ rakudo/nom: see RT for analysis/explanation

[17:00] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/11070e0fee

[17:00] <Geth> ¦ rakudo/nom: f427575432 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/Perl6/Grammar.nqp

[17:00] <Geth> ¦ rakudo/nom: Merge pull request #1177 from skids/rt128462

[17:00] <Geth> ¦ rakudo/nom:

[17:00] <Geth> ¦ rakudo/nom: Fix some unspace parsing cases (RT#128462 and degenerate unspace)

[17:00] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f427575432

[17:01] <Geth> ¦ roast: skids++ created pull request #340: Additional unspace tests and unfudge RT#128462 test

[17:01] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/340

[17:02] <Geth> ¦ roast: 3f81f39aae | skids++ | S02-lexical-conventions/unspace.t

[17:02] <Geth> ¦ roast: Additional unspace tests and unfudge RT#128462 test

[17:02] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3f81f39aae

[17:02] <Geth> ¦ roast: c22107d532 | skids++ (committed using GitHub Web editor) | S02-lexical-conventions/unspace.t

[17:02] <Geth> ¦ roast: Merge pull request #340 from skids/rt128462

[17:02] <Geth> ¦ roast:

[17:02] <Geth> ¦ roast: Additional unspace tests and unfudge RT#128462 test

[17:02] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c22107d532

[17:20] <Zoffix> teatime: "<teatime> does http://modules.perl6.org/ index CPAN-only modules?"

[17:20] <Zoffix> teatime: not yet. It was actually somethign I was planning to implement this weekend, but got distracted with compiler :)

[17:20] <teatime> cool

[17:20] <Zoffix> (though I'm off tomorrow, so... the weekend is still young :))

[17:22] <Zoffix> Yeah, I think I'll work on that next, after pizza lunch and jamming session

[17:28] <gfldex> i wonder if a stacktrace should contain the compiler version

[18:49] <Geth> ¦ roast: b9854b796e | (Samantha McVey)++ | 2 files

[18:49] <Geth> ¦ roast: Update S15-nfg/emoji-text.t for Emoji v5.0

[18:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b9854b796e

[18:49] <Geth> ¦ roast: d8b1178020 | (Samantha McVey)++ | docs/unicode-generated-tests.asciidoc

[18:49] <Geth> ¦ roast: Add file for documenting Unicode generated test files

[18:49] <Geth> ¦ roast:

[18:49] <Geth> ¦ roast: Contains information like:

[18:49] <Geth> ¦ roast: * List of Perl6 script used to update the tests

[18:49] <Geth> ¦ roast: * Roast Test File's generated

[18:49] <Geth> ¦ roast: * Version number the test was generated from

[18:49] <Geth> ¦ roast: * Date we last generated the file

[18:49] <Geth> ¦ roast: * File header of the test file, in case Unicode updates their test files

[18:49] <Geth> ¦ roast:   (Unicode's files are all dated).

[18:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d8b1178020

[18:50] * lizmat is back

[18:51] <lizmat> hmmm...S32-io/open.t has started flapping for me

[19:04] <Geth> ¦ rakudo/nom: 4fae0711ef | (Elizabeth Mattijsen)++ | src/Perl6/World.nqp

[19:04] <Geth> ¦ rakudo/nom: We actually don't need an nqp::stmts for accessors

[19:04] <Geth> ¦ rakudo/nom:

[19:04] <Geth> ¦ rakudo/nom: This probably doesn't mean much in the scale of things, but it *does*

[19:04] <Geth> ¦ rakudo/nom: happen at compilation for every public attribute.

[19:04] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4fae0711ef

[19:17] <samcv> lizmat, doesn't seem to flop for me on 2017.09-153-g9cb4b167f though i need to update my rakudo

[19:21] <lizmat> well, for me it bailed *once* in test 62...  couldn't repeat it :-(

[19:21] <jnthn> I'm sure I've seen it in the past, but don't recall seeing it for a long while.

[19:21] <samcv> ah. i ran it like 250 times and it was ok each time

[19:26] <lizmat> m: class A {}; role B { has $.a }; dd (A but B).new(a => 42)

[19:26] <camelia> rakudo-moar 4fae07: OUTPUT: «A+{B}.new(a => 42)␤»

[19:26] <lizmat> jnthn: ^^^ it appears that this case does *not* get a BUILDPLAN generated.  Should it ?

[19:26] <lizmat> BUILDALL I mean

[19:27] <lizmat> aah...  maybe because the class is already composed?

[19:31] <jnthn> Hmm

[19:32] <jnthn> Uh

[19:32] <jnthn> It can't

[19:32] <jnthn> It's too late

[19:32] <jnthn> It happens at runtime, there's no compiler services object 'cus we're no longer in the compiler

[19:32] <jnthn> Took me a moment to realize that :)

[19:32] <jnthn> So yeah, I'd not expect it to

[19:34] <lizmat> so that basically means we need to keep the Mu.BUILDALL around  :-(

[19:36] <lizmat> I found this issue in S02-literals/string-interpolation.t

[19:37] <lizmat> it apparently creates X::Worry::P5::LeadingZero objects with X::Comp mixed in

[19:41] <Geth> ¦ nqp: 289f79fbd2 | (Samantha McVey)++ | t/nqp/107-index.t

[19:41] <Geth> ¦ nqp: Add nqp::index tests for indexingoptimized on long string

[19:41] <Geth> ¦ nqp:

[19:41] <Geth> ¦ nqp: Tests both with and without indexing optimized on a long repeated

[19:41] <Geth> ¦ nqp: Haystack, with a concatenated needle.

[19:41] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/289f79fbd2

[19:45] <lizmat> afk for a bit

[19:55] <travis-ci> NQP build failed. Samantha McVey 'Add nqp::index tests for indexingoptimized on long string

[19:55] <travis-ci> https://travis-ci.org/perl6/nqp/builds/282000418 https://github.com/perl6/nqp/compare/a0618a62560a...289f79fbd2d9

[21:32] <buggable> New CPAN upload: Bailador-0.0.13.tar.gz by UFOBAT https://www.cpan.org/authors/id/U/UF/UFOBAT/Perl6/Bailador-0.0.13.tar.gz

[21:38] <timotimo> oh, that's neat

[21:41] <Zoffix> :)

[21:42] <jnthn> Nice :)

[21:42] <timotimo> i've got to do a bit of work on json::fast and get it up on cpan, too

[21:42] * jnthn is planning to shift Cro releases to CPAN

[21:44] <timotimo> you can trick JSON::Fast into generating faulty json by giving it an IntStr with a broken Str portion

[21:45] <timotimo> hm, does json even support anything other than decimal?

[21:45] <timotimo> ok, it does not

[21:45] <timotimo> so i'm not taking a feature away from our users by just using the Int (or Rat or Num) portion in any case

[22:03] <buggable> New CPAN upload: Pastebin-Shadowcat-2.001001.tar.gz by ZOFFIX https://www.cpan.org/authors/id/Z/ZO/ZOFFIX/Perl6/Pastebin-Shadowcat-2.001001.tar.gz

[22:26] <buggable> New CPAN upload: Number-Denominate-1.001001.tar.gz by ZOFFIX https://www.cpan.org/authors/id/Z/ZO/ZOFFIX/Perl6/Number-Denominate-1.001001.tar.gz

[22:36] <buggable> New CPAN upload: Acme-Anguish-1.001002.tar.gz by ZOFFIX https://www.cpan.org/authors/id/Z/ZO/ZOFFIX/Perl6/Acme-Anguish-1.001002.tar.gz
