[00:00] <samcv> ok pushed a fix to at least not make it panic. so it won't die if in a try block

[00:01] <samcv> ugh hate when i read this part in unicode spec

[00:01] <samcv> "Further customization of this rule may be necessary for best behavior of emoji zwj sequences"

[00:01] <samcv> that means i have to customize it to perform properly :)

[00:03] <BenGoldberg> .tell timotimo Where is tr documented?  Why can't it simply count the number of letters changed at the same time as it changes them?

[00:03] <yoleaux> BenGoldberg: I'll pass your message to timotimo.

[00:03] <BenGoldberg> m: say "test" ~~ tr/t/t/;

[00:03] <camelia> rakudo-moar b0c8e1: OUTPUT: «Cannot modify an immutable Str (test)␤  in block <unit> at <tmp> line 1␤␤»

[00:03] <BenGoldberg> m: say "test" ~~ tr:r/t/t/;

[00:03] <camelia> rakudo-moar b0c8e1: OUTPUT: «Cannot modify an immutable Str (test)␤  in block <unit> at <tmp> line 1␤␤»

[00:03] <samcv> well tr is mentioned here https://docs.perl6.org/language/5to6-perlfunc#tr///

[00:04] <timotimo> BenGoldberg: it uses a low-level instruction that Just Doesn't Do That, but if you come up with something that isn't drastically slower, go right ahead

[00:04] <yoleaux> 00:03Z <BenGoldberg> timotimo: Where is tr documented?  Why can't it simply count the number of letters changed at the same time as it changes them?

[00:04] <samcv> and there's the .trans method i guess

[00:04] <BenGoldberg> m: my $mutate = "test"; dd $mutate ~~ tr/t/t/;

[00:04] <camelia> rakudo-moar b0c8e1: OUTPUT: «StrDistance.new(before => "test", after => "test")␤»

[00:04] <BenGoldberg> m: my $mutate = "test"; say +$mutate ~~ tr/t/t/;

[00:04] <camelia> rakudo-moar b0c8e1: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5test' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[00:04] <BenGoldberg> m: my $mutate = "test"; say +($mutate ~~ tr/t/t/);

[00:04] <camelia> rakudo-moar b0c8e1: OUTPUT: «0␤»

[00:05] <BenGoldberg> Now, in perl5, that would have printed 2, the number of 't's in $mutate.

[00:06] <BenGoldberg> m: my $mutate = "test"; say +($mutate ~~ tr/es/se/);

[00:06] <camelia> rakudo-moar b0c8e1: OUTPUT: «2␤»

[00:13] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Remove push-all from R:Q:Quanty-kv

[00:13] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/250966477 https://github.com/rakudo/rakudo/compare/381a073e3f75...b0c8e18790a4

[00:13] <buggable> [travis build above] ✓ All failures are due to timeout (0), missing build log (0), GitHub connectivity (1), or failed make test (0).

[00:19] <samcv> u: ????

[00:19] <unicodable6> samcv, U+1F6CC SLEEPING ACCOMMODATION [So] (????)

[00:20] <samcv> unidump: ????

[00:20] <unicodable6> samcv, https://gist.github.com/f3d30b5d3b9be8d27775eea2fdf7bcb4

[00:21] <samcv> well instead of trying to fix that weird emoji test in GraphemeBreakTest.t i'm going to try and fix the *actual* emoji that don't work (though those are not in the test) and hopefully will end up fixing that synthetic case

[00:42] <samcv> yay. from 275 to 230 failed emoji tests! woo

[00:42] <samcv> emoji emjoi tests not graphemeclusterbreak.t emjoi ones

[00:44] <samcv> so that's 45 *actual* emoji that now have the correct .chars

[00:49] <samcv> unidump: 0x1F4BB

[00:49] <unicodable6> samcv, https://gist.github.com/3959b019e8b86e0f4023c3c159ba935f

[00:51] <samcv> argh ok. wtf. so the computer has no GCB and no special emoji properties but i'm supposed to not break inside of it. hm

[00:52] <samcv> "Further customization of this rule may be necessary" strikes again!

[00:55] <AlexDaniel> ?

[00:58] <samcv> oh just the rules they give you for emoji are incomplete

[00:58] <samcv> they give you certain information and then just say further customization may be needed

[00:58] <samcv> to have it work

[00:59] <samcv> as i'm going to need to save that i'm in an emoji sequence somehow, because the 3rd codeponint in the sequence doesn't has GCB=Other and Emoji_Modifier = False as well

[00:59] <samcv> which kind of frustrates me :\

[04:08] <Zoffix> moritz: what's the link to your chart of Perl 6 books? Would be handy to list it under Books: https://perl6.org/resources/

[04:08] <Zoffix> https://perl6book.com/

[04:10] <Zoffix> Added in https://github.com/perl6/perl6.org/commit/c5e401c102a9a7ec9a2d1bfa664dedcb64e7bebd

[06:22] <[Tux]> This is Rakudo version 2017.06-170-gb0c8e1879 built on MoarVM version 2017.06-37-g4e29e4c7

[06:22] <[Tux]> csv-ip5xs        2.629

[06:22] <[Tux]> test            12.749

[06:22] <[Tux]> test-t           4.129 - 4.152

[06:22] <[Tux]> csv-parser      12.677

[06:55] <AlexDaniel> alright, whateverable tests no longer pass after upgrading rakudo… interesting

[06:56] <AlexDaniel> but this seems to be consistent, always the same issue every run

[06:56] <AlexDaniel> I'll investigate tomorrow

[06:57] <AlexDaniel> .oO( and until then enjoy slightly unreliable bots! )

[07:00] <moritz> do they throw in a snarky remark now and then? :-)

[08:20] <lizmat> Files=1209, Tests=64162, 221 wallclock secs (13.37 usr  4.97 sys + 1344.29 cusr 140.62 csys = 1503.25 CPU)

[08:32] <stmuk_> I'm upgrading pl6anet.org to FreeBSD 11 so it may go *poof* for a bit

[08:47] <lizmat> afk for most of the rest of the day&

[10:20] <Geth> ¦ roast: 9227bc3d84 | (Samantha McVey)++ | S15-unicode-information/uniprop.t

[10:20] <Geth> ¦ roast: Add test for MoarVM Issue #566 .uniprop overflow

[10:20] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/9227bc3d84

[10:36] <Zoffix> New blog post: "The Hot New Language Named Rakudo": https://perl6.party/post/The-Hot-New-Language-Named-Rakudo

[10:38] <stmuk_> Fo6.d for Thought *groan*

[10:39] <nine> So we rename Perl 6 to Fo6.d? Sounds odd, but at least there won't be any confusion with anything...

[10:46] <nine> Quick poll: without looking it up, in a few words, what is KDE?

[10:46] <ilmari> a destktop environment based on Qt

[10:47] * nine will wait for a couple more minutes for answers

[10:48] <Zoffix> A bloated desktop environment that assails you with all sorts of notifications and crap

[10:48] <stmuk_> something people didn't use because of the licencing and when that was changed noone much used it still apart from SuSE

[10:48] <tadzik> I'd just say "a desktop environment for unix-ish systems"

[10:49] <nine> All of the above answers are completely wrong.

[10:49] <Zoffix> hehe cool

[10:49] <Zoffix> So what is it?

[10:49] <nine> What all of you are talking about is the Plasma desktop.

[10:49] <tadzik> I guess they call themselves "platform" these days

[10:49] <nine> KDE has been the name of a free software community, since 2009!

[10:50] <ilmari> nine: no, I was talking about the pre-plasma one that was just called KDE ;-P

[10:50] <stmuk_> about the last time I used KDE :P

[10:50] * ilmari hasn't used KDE since 4.2 or something

[10:50] <nine> Point being: the KDE has a whole marketing _team_ and yet, 8 years have not been enough to push the name change anywhere near the general audience.

[10:51] <tadzik> well, two-thirds of its name literally say "desktop environment"

[10:51] <tadzik> unless it's like PERL and Perl

[10:51] <Zoffix> Yeah, having a marketing team doesn't magically let you change people's minds at will :)

[10:51] <stmuk_> how many people also say "cute" rather than QT?

[10:51] <nine> tadzik: it doesn't anymore

[10:52] <nine> stmuk_: AFAIK that pronounciation is actually correct

[10:53] <tadzik> heh, I visited their fosdem stand twice and haven't noticed

[10:55] <stmuk_> a name is really something other people call you and its very hard to change once established

[11:03] <nine> stmuk_: IOW: one is not using a name, one is given a name. And people usually stick with the first suggestion for one.

[11:05] <stmuk_> Rimmer: "Friends call me Ace"

[12:43] * Zoffix takes another weekend off away from humans :)

[12:43] <Zoffix> See you Monday \o

[13:59] * llfourn wishes Zoffix and the bots a good weekend

[15:37] <Geth> ¦ nqp: da0dda809a | (Jonathan Worthington)++ | tools/build/MOAR_REVISION

[15:37] <Geth> ¦ nqp: Bump to latest MoarVM version.

[15:37] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/da0dda809a

[15:37] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.06-37-g4e29e4c...2017.06-43-g45b008f

[15:38] <Geth> ¦ rakudo/nom: 1dda86222b | (Jonathan Worthington)++ | tools/build/NQP_REVISION

[15:38] <Geth> ¦ rakudo/nom: Bump for MoarVM updates.

[15:38] <Geth> ¦ rakudo/nom:

[15:38] <Geth> ¦ rakudo/nom: Includes a fix for RT #131384.

[15:38] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1dda86222b

[15:38] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131384

[15:38] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.06-35-g17c795c...2017.06-36-gda0dda8

[15:38] <Geth> ¦ roast: 891e365c00 | (Jonathan Worthington)++ | S32-io/io-handle.t

[15:38] <Geth> ¦ roast: Test to cover RT #131384.

[15:38] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/891e365c00

[15:38] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131384

[16:00] <jnthn> m: use Test; my \a = -42; is Int(a), -42, "Sigilless variable does not confuse coercion type parsing"

[16:00] <camelia> rakudo-moar 1dda86: OUTPUT: «===SORRY!===␤No compile-time value for a␤»

[16:04] <Geth> ¦ rakudo/nom: c76d9324a9 | (Jonathan Worthington)++ | src/Perl6/Grammar.nqp

[16:04] <Geth> ¦ rakudo/nom: Don't trip over Type(sigilles-var).

[16:04] <Geth> ¦ rakudo/nom:

[16:04] <Geth> ¦ rakudo/nom: If it can't be handled as a type, then we fall back to trying to parse

[16:04] <Geth> ¦ rakudo/nom: it as a value. This worked fine in most cases, except it would try to

[16:04] <Geth> ¦ rakudo/nom: get the compile time value for a sigilless var, which it won't have.

[16:04] <Geth> ¦ rakudo/nom: Fixes RT #131611.

[16:04] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131611

[16:04] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c76d9324a9

[16:04] <Geth> ¦ roast: c182968a83 | (Jonathan Worthington)++ | S12-coercion/coercion-types.t

[16:04] <Geth> ¦ roast: Test for RT #131611.

[16:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c182968a83

[16:04] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131611

[16:17] <jnthn> Well, there's a random fix to finish off the week :)

[16:18] <AlexDaniel> NeuralAnomaly: when?

[16:18] <AlexDaniel> NeuralAnomaly: help

[16:18] <NeuralAnomaly> AlexDaniel, stats | blockers

[16:18] <AlexDaniel> NeuralAnomaly: stats

[16:18] <NeuralAnomaly> AlexDaniel, [✘] Next release will be in 1 day and 1 week. Since last release, there are 22 new still-open tickets (1 unreviewed and 0 blockers) and 175 unreviewed commits. See http://perl6.fail/release/stats for details

[16:50] <travis-ci> Rakudo build passed. Jonathan Worthington 'Bump for MoarVM updates.

[16:50] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/251206039 https://github.com/rakudo/rakudo/compare/b0c8e18790a4...1dda86222b4e

[16:51] <AlexDaniel> timotimo: hey, are you there?

[17:04] <timotimo> more or less, AlexDaniel

[17:05] <AlexDaniel> timotimo: ah well… I thought maybe you can somehow help me with bisectable segv :|

[17:06] <timotimo> i'll be snipping up veggies for the next while, and then those veggies will be eaten for another while

[17:06] <timotimo> what have you already figured out?

[17:06] <AlexDaniel> timotimo: … that there's a SEGV… now I'm a bit lost

[17:07] <timotimo> OK

[17:07] <AlexDaniel> I mean, that it segfaults sometimes

[17:07] <AlexDaniel> I can reproduce it

[17:09] <AlexDaniel> timotimo: ah, also I know that this is a regression

[17:13] <timotimo> segfaults are likely moarvm stuff, could you bisect bisectable? :)

[17:14] <AlexDaniel> .tell [Coke] case in point (re perl6 web app serving docs): https://irclog.perlgeek.de/perl6-dev/2017-07-07#i_14840912

[17:14] <yoleaux> AlexDaniel: I'll pass your message to [Coke].

[17:14] <AlexDaniel> uhhhh, well…

[17:14] <AlexDaniel> not really, actually :)

[17:14] <AlexDaniel> but I can narrow it down to the actual line where this happens I think

[17:18] <AlexDaniel> no… I don't know now… now it segfaults at a completely different moment

[17:26] <travis-ci> Rakudo build passed. Jonathan Worthington 'Don't trip over Type(sigilles-var).

[17:26] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/251214786 https://github.com/rakudo/rakudo/compare/1dda86222b4e...c76d9324a9f6

[17:45] <AlexDaniel> FFFFFFFFFFuuuuuuuuuuuuu…

[17:46] <AlexDaniel> yes, the bots are completely busted :)

[19:03] <dogbert17> ZofBot: you there

[19:03] <ZofBot> dogbert17, Whereas now we can do the replacement char support and only have to extend one lower-level API to do it

[19:05] <dogbert17> at least one bot seems to be working :)

[19:10] <timotimo> AlexDaniel: nom finished!

[19:40] <Geth> ¦ 6.d-prep: b6476fcce6 | (Sylvain Colinet)++ | NativeCall.md

[19:40] <Geth> ¦ 6.d-prep: Add some idea about NativeCall

[19:40] <Geth> ¦ 6.d-prep: review: https://github.com/perl6/6.d-prep/commit/b6476fcce6

[20:29] <AlexDaniel> timotimo: \o/

[20:40] <timotimo> i was afk again for a bit, but now i'm here

[20:40] <AlexDaniel> yeah, me too

[20:41] <AlexDaniel> anyway, you probably expect me to catch it under valgrind, right?

[20:41] <AlexDaniel> with debugging symbols enabled

[20:52] <timotimo> that'd probably be a good step forwards

[20:52] <timotimo> i wonder how good it works to transfer rr recordings between computers?

[20:53] <AlexDaniel> timotimo: mm why, can't you just connect to the server?

[20:54] <timotimo> oh, i guess i could

[20:54] <timotimo> does rr run there?

[20:56] <AlexDaniel> timotimo: now yes

[20:56] <timotimo> cool

[20:57] <timotimo> it'd be better if we ran the moar process directly rather than the perl6-m script

[20:58] <AlexDaniel> timotimo: alright, what does that mean?

[20:59] <timotimo> ugh perl6-m is a rakudobrew script, it's loooooong

[21:00] <timotimo> okay

[21:00] <timotimo> we want this line:

[21:00] <timotimo> rr record /home/bisectable/.rakudobrew/moar-nom/install/bin/moar  --execname="$0" --libpath="/home/bisectable/.rakudobrew/moar-nom/install/share/nqp/lib" --libpath="/home/bisectable/.rakudobrew/moar-nom/install/share/nqp/lib" --libpath="/home/bisectable/.rakudobrew/moar-nom/install/share/perl6/lib" --libpath="/home/bisectable/.rakudobrew/moar-nom/install/share/perl6/runtime"

[21:00] <timotimo> /home/bisectable/.rakudobrew/moar-nom/install/share/perl6/runtime/perl6.moarvm  *arguments go here*

[21:00] <timotimo> ... lines

[21:02] <AlexDaniel> timotimo: by the way, we can move to #whateverable so that others don't have to witness my stupidity :D

[21:02] <timotimo> sure

[21:02] <timotimo> it's my stupidity, too!

[21:28] <[Coke]> is Proc::Async favored over "run" ?

[21:30] <timotimo> it's easier to deadlock with run compared to p::a

[21:36] <[Coke]> what about SEGV? (getting a segv with a script using run now, trying to golf it)

[21:44] <samcv> time to close some RT's

[21:45] <AlexDaniel> [Coke]: great!

[21:45] <AlexDaniel> [Coke]: do you have a short example to reproduce it?

[21:49] <[Coke]> "trying to golf it"

[22:04] <AlexDaniel> ah, I'm blind :)

[22:34] <jnthn> [Coke]: run is implemented in terms of Proc::Async

[22:36] <jnthn> (So getting the problem expressed just in terms of Proc::Async cuts out a whole layer were the problems could be)
