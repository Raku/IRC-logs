[07:14] <stmuk> Sounds like having R* 2017.05 off a more stable monthly release is a good idea although I'll probably build a testing one based on 04.x (without official release) to try out things anyway

[07:14] <yoleaux> 22 Apr 2017 10:29Z <Zoffix> stmuk: R* likely delayed you say... I'm thinking of maybe delaying it by 4 weeks and cutting it off 2017.05 or something isn't a bad idea. There are two pretty serious bugs in 2017.04.2 that we'd need to patch or point-release for

[07:30] <samcv> stmuk, let me know how testig one goes

[07:31] <samcv> though idk are there other bugs other than the regex bug i just fixed? i actually don't know what the other point releases were cut for

[07:31] * samcv reads changelog on rakudo repo

[07:32] <samcv> oh i see now

[07:42] <lizmat> Files=1191, Tests=56827, 203 wallclock secs (12.15 usr  4.80 sys + 1197.53 cusr 119.23 csys = 1333.71 CPU)

[07:42] <samcv> lizmat, can you tell me about radix?

[07:43] <lizmat> not much more than what I know when looking at the code now

[07:43] <samcv> the nqp op and its return values. see what i just said in #moarvm about plans for the indexic op. since we need to return more data to nqp/rakudo than only the index of the located match

[07:43] <samcv> https://github.com/perl6/nqp/blob/master/docs/ops.markdown#radix

[07:44] <samcv> m: use nqp; my str $thing = '10'; say nqp::radix(10, $thing, 0, 0)

[07:44] <camelia> rakudo-moar ce41e4: OUTPUT: «(10 100 2)␤»

[07:45] <samcv> not sure. it says the that 100 is the radix ** (number of digits converted)

[07:45] <samcv> i would think it'd have converted 2 digits, and it would be at offset 2 (which is the last number)

[07:45] <samcv> so i expected 10, 2,2

[07:45] <samcv> but maybe i'm reading the doc wrong

[07:46] <Geth> ¦ rakudo/nom: 22bd2bbd7a | MasterDuke17++ | src/core/Main.pm

[07:46] <Geth> ¦ rakudo/nom: Escape spaces and quotes in MAIN() usage message

[07:46] <Geth> ¦ rakudo/nom:

[07:46] <Geth> ¦ rakudo/nom: Before, if you had a literal parameter in a MAIN() with a space or

[07:46] <Geth> ¦ rakudo/nom: quote (single or double) the parameter wouldn't get quoted when a

[07:46] <Geth> ¦ rakudo/nom: usage message was printed. This means you couldn't just copy what

[07:46] <Geth> ¦ rakudo/nom: was suggested. Now, qoute if needed.

[07:46] <Geth> ¦ rakudo/nom:

[07:46] <samcv> m: use nqp; my str $thing = ' 10'; say nqp::radix(10, $thing, 1, 0)

[07:46] <camelia> rakudo-moar ce41e4: OUTPUT: «(10 100 3)␤»

[07:46] <Geth> ¦ rakudo/nom: Fixes RT #113954

[07:46] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/22bd2bbd7a

[07:46] <Geth> ¦ rakudo/nom: f9ebd24666 | lizmat++ (committed using GitHub Web editor) | src/core/Main.pm

[07:46] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=113954

[07:46] <Geth> ¦ rakudo/nom: Merge pull request #1064 from MasterDuke17/escape_spaces_and_quotes_in_usage_message

[07:46] <Geth> ¦ rakudo/nom:

[07:46] <Geth> ¦ rakudo/nom: Escape spaces and quotes in MAIN() usage message

[07:46] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f9ebd24666

[07:46] <samcv> m: use nqp; my str $thing = '99'; say nqp::radix(10, $thing, 0, 0)

[07:46] <camelia> rakudo-moar ce41e4: OUTPUT: «(99 100 2)␤»

[07:47] <samcv> but maybe it's just the radix ** 2

[07:47] <samcv> since i see the ** in the docs, but. that's not super clear

[07:48] <samcv> ohhh i get it. ok. it relates to the highest decimal place it parsed

[07:48] <samcv> m: use nqp; my str $thing = '1000.0'; nqp::radix(10, $thing, 0, 0)

[07:48] <camelia> rakudo-moar ce41e4: ( no output )

[07:48] <samcv> m: use nqp; my str $thing = '1000.0'; say nqp::radix(10, $thing, 0, 0)

[07:48] <camelia> rakudo-moar ce41e4: OUTPUT: «(1000 10000 4)␤»

[07:48] <samcv> m: use nqp; my str $thing = '1000'; say nqp::radix(10, $thing, 0, 0)

[07:48] <camelia> rakudo-moar ce41e4: OUTPUT: «(1000 10000 4)␤»

[07:48] <samcv> m: use nqp; my str $thing = '1'; say nqp::radix(10, $thing, 0, 0)

[07:48] <camelia> rakudo-moar ce41e4: OUTPUT: «(1 10 1)␤»

[07:53] <Geth> ¦ nqp: 61b9a2da82 | (Samantha McVey)++ | docs/ops.markdown

[07:53] <Geth> ¦ nqp: [ops.markdown] make radix doc a little more clear

[07:53] <Geth> ¦ nqp:

[07:53] <Geth> ¦ nqp: Was not entirely clear that the words inside stood for a variable

[07:53] <Geth> ¦ nqp: which was the number of digits converted and not human language

[07:53] <Geth> ¦ nqp: grammatical ones. Make it more clear.

[07:53] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/61b9a2da82

[09:02] <[Tux]> This is Rakudo version 2017.04.2-28-gf9ebd2466 built on MoarVM version 2017.04-44-gf0db8822

[09:02] <[Tux]> csv-ip5xs        3.221

[09:02] <[Tux]> test            13.123

[09:02] <[Tux]> test-t           5.262 - 5.336

[09:02] <[Tux]> csv-parser      13.096

[09:49] <Zoffix> samcv: whatisit?

[09:49] <samcv> oh. if we're making a point release. the changes are in rakudo

[09:50] <samcv> for the regex thing

[09:50] <samcv> doesn't have to be today, but would be nice if there were a point release. but idk other people think maybe it's not a good idea.

[09:51] <Zoffix> wtf is happening with test-t

[09:51] <Zoffix> buggable: speed 10

[09:51] <buggable> Zoffix, ▁▆▂▄▃▃▃▂▄▃ data for 2017-04-20–2017-04-23; range: 5.102s–5.479s; 3% slower

[09:51] <Zoffix> buggable: speed 20

[09:51] <buggable> Zoffix, ▂▁▃▃▃▃▃▃▄▃▃█▄▆▄▄▄▄▆▅ data for 2017-04-15–2017-04-23; range: 4.994s–5.479s; 4% slower

[09:51] <Zoffix> buggable: speed 30

[09:51] <buggable> Zoffix, ▁▂▄▄▂▃▂▃█▅▂▂▄▃▄▃▃▃▄▃▃█▄▆▅▅▅▄▆▅ data for 2017-04-11–2017-04-23; range: 4.942s–5.479s; 6% slower

[09:51] <Zoffix> buggable: speed 40

[09:51] <buggable> Zoffix, ▂▂▇▁▇▃▇▁▂▁▁▂▄▄▂▄▂▃█▅▂▂▄▃▄▄▃▃▄▃▃█▄▆▅▅▅▄▆▅ data for 2017-04-07–2017-04-23; range: 4.921s–5.479s; 6% slower

[09:52] <samcv> buggable, speed 200

[09:52] <buggable> samcv, Refusing to do more than 100 last entries

[09:52] <samcv> buggable, speed 100

[09:52] <buggable> samcv, ▁▂▁▁▃▂▂▂▂▂▁▁█▂▂▃▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▂▂▁▁▁▁▁▁▅▂▁▁▁▁▁▁▁▂▁▃▁▂▁▁▁▁▁▁▁▂▁▂▂▂▁▁▁▁▁▂▂▁▂▁▂▃▂▂▁▂▂▂▂▂▂▂▂▂▃▂▂▂▂▂▂▂▂ data for 2017-03-09–2017-04-23; range: 4.829s–7.664s; 5% slower

[09:53] <Zoffix> samcv: the other bug there weren't a point release for was somethign about <( )> and action methods.

[09:53] <Zoffix> NeuralAnomaly: release

[09:53] <Zoffix> oops

[09:53] <timotimo> haha

[09:53] <samcv> NeuralAnomaly, status

[09:53] <NeuralAnomaly> samcv, [✘] Next release will be in 3 weeks and 6 days. Since last release, there are 7 new still-open tickets (5 unreviewed and 0 blockers) and 45 unreviewed commits. See http://perl6.fail/release/stats for details

[09:53] <Zoffix> Well, even if my VM were up, it's in safemode mode anyway :)

[09:54] <samcv> but my reasoning is regex is something a new user might try out, and if they try it out and it's broken

[09:54] <samcv> it would not be very good of an experience. but the other stuff i guess were problems too. but

[09:54] <samcv> that's just my opinion

[09:54] <Zoffix> samcv: I'd expect the user to use Rakudo Star. Not a tagged rakudo release.

[09:54] <Zoffix> Or rakudobrew, where it's also fixed

[09:55] <samcv> in moar-blead?

[09:55] <samcv> or?

[09:55] <Zoffix> m: say "abc" ~~ m:i/caaaaa/

[09:55] <camelia> rakudo-moar f9ebd2: OUTPUT: «False␤»

[09:55] <Zoffix> Rakudo HEAD

[09:55] <Zoffix> Default `rakudobrew build moar` gets EHAD

[09:55] <samcv> how does that work. also some distros go off our tagged releases i think

[09:55] <samcv> oh

[09:55] <samcv> and moar-blead?

[09:55] <samcv> that's git moar and git rakudo?

[09:56] <Zoffix> You know what. I'm just gonna cut a point release right now.

[09:56] <samcv> k :)

[10:00] <timotimo> oh? things are good?

[10:00] <Zoffix> What things?

[10:01] <Zoffix> Gonna test out the whole "make a branch for release; cherry pick; tag it; then delete it" thing.

[10:03] <timotimo> oh

[10:08] <Zoffix> c: 2017.03 say 'a' ~~ m:i/ab/

[10:08] <committable6> Zoffix, ¦2017.03: «｢a｣»

[10:08] <Zoffix> Oh so it's not a new bug?

[10:09] <Zoffix> c: 2017.03 say 'abcdb' ~~ m:i/ab/

[10:09] <committable6> Zoffix, ¦2017.03: «｢ab｣»

[10:14] <Zoffix> There's a problem with 'delay release by a month' thing I proposed. Well, kind'f. You can't use that branch to release off roast master. You'd have to check out a commit around the time of last commit to release branch, otherwise you'll have failures.

[10:14] <Zoffix> And if you cherry pick some fixes into it, you'll have even more failures :|

[10:20] <dogbert17> o/

[10:20] <dogbert17> stupid question of the day

[10:21] <dogbert17> does nqp::die write its output to stdout and if so why?

[10:21] <timotimo> it does not

[10:21] <timotimo> it throws an exception

[10:21] <dogbert17> so where's the exceptions text written then?

[10:22] <timotimo> whatever handler catches it

[10:22] <dogbert17> looking a bit at RT #130760

[10:22] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=130760

[10:22] <timotimo> probably the one in Perl6::Compiler if you don't do anything to catch it yourself

[10:24] <timotimo> could very well be that the standard exception handler isn't even in scope when that exception gets thrown

[10:24] <Zoffix> dogbert17: there's a `say` for usage: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Compiler.nqp#L81

[10:25] * dogbert17 looks

[10:26] <dogbert17> would it be possible to use 'note' instead?

[10:28] <Zoffix> REMINDER: The proper TAP.pm6 now lives in https://github.com/perl6/tap-harness6

[10:28] <timotimo> yeah, but it should only use note if the usage is printed because of an error

[10:28] <timotimo> i.e. perl6 --help should go to stdout

[10:28] <dogbert17> timotimo: agreed

[10:30] <Geth> ¦ tap-harness6: 6e6dc5292f | timo++ (committed using GitHub Web editor) | lib/TAP.pm

[10:30] <Geth> ¦ tap-harness6: port fix for file descriptor exhaustion from rakudo

[10:30] <Geth> ¦ tap-harness6:

[10:30] <Geth> ¦ tap-harness6: it used to not close the stdout descriptors for subprocesses, thus

[10:30] <Geth> ¦ tap-harness6: easily reaching multiple thousand open file descriptors

[10:30] <Geth> ¦ tap-harness6: review: https://github.com/perl6/tap-harness6/commit/6e6dc5292f

[10:34] <Geth> ¦ tap-harness6: 4ff82b1d86 | (Zoffix Znet)++ | lib/TAP.pm

[10:34] <Geth> ¦ tap-harness6: Close IO::Hadle/IO::Pipe when done reading

[10:34] <Geth> ¦ tap-harness6: review: https://github.com/perl6/tap-harness6/commit/4ff82b1d86

[10:34] <Geth> ¦ tap-harness6: c19f5cc8d9 | (Zoffix Znet)++ | .gitignore

[10:34] <Geth> ¦ tap-harness6: Ignore precomp files

[10:34] <Geth> ¦ tap-harness6: review: https://github.com/perl6/tap-harness6/commit/c19f5cc8d9

[10:35] <Geth> ¦ rakudo/2017.04.3-release: 5 commits pushed by TimToady++, (Zoffix Znet)++, (Timo Paulssen)++, (Samantha McVey)++

[10:35] <Geth> ¦ rakudo/2017.04.3-release: 2f143f476d | fix )> to work again whenever .MATCH is called

[10:35] <Geth> ¦ rakudo/2017.04.3-release: 6c66c1b88c | Fix REPL failures with Linenoise

[10:35] <Geth> ¦ rakudo/2017.04.3-release: 0150c7b8c5 | bump NQP to get $!to fix for )> construct

[10:35] <Geth> ¦ rakudo/2017.04.3-release: f756b4b54f | bump nqp for eqatic fix

[10:35] <Geth> ¦ rakudo/2017.04.3-release: 25048824c8 | Bump MoarVM/NQP for case insensitive regex fixes

[10:35] <Geth> ¦ rakudo/2017.04.3-release: review: https://github.com/rakudo/rakudo/compare/0000000000...25048824c8

[10:39] <Zoffix> timotimo: "bump nqp for eqatic fix" what was the issue?

[10:39] <samcv> this is the same thing

[10:39] <Zoffix> Ah ok

[10:39] <samcv> yea

[10:39] <samcv> that actually was the indexic fix that he bumped. then i did equatic fix

[10:40] <samcv> but timo wrote the wrong op in the name of the commit

[10:40] <samcv> but regardless. both ops are now rescued

[10:41] <Geth> ¦ rakudo/2017.04.3-release: b4455d875c | (Zoffix Znet)++ | docs/ChangeLog

[10:41] <Geth> ¦ rakudo/2017.04.3-release: Log changes for 2017.04.3 release

[10:41] <Geth> ¦ rakudo/2017.04.3-release: review: https://github.com/rakudo/rakudo/commit/b4455d875c

[10:43] <timotimo> yes, i did it totally wrong

[10:43] <timotimo> i wonder if we should start using git notes for that kind of thing

[10:52] <samcv> what are git notes

[10:52] <Geth> ¦ rakudo/2017.04.3-release: 147ad2ea91 | (Zoffix Znet)++ | docs/announce/2017.04.3.md

[10:52] <Geth> ¦ rakudo/2017.04.3-release: Add 2017.04.3 release announcement

[10:52] <Geth> ¦ rakudo/2017.04.3-release: review: https://github.com/rakudo/rakudo/commit/147ad2ea91

[10:53] <Geth> ¦ rakudo/2017.04.3-release: a4e59cf3b2 | (Zoffix Znet)++ | VERSION

[10:53] <Geth> ¦ rakudo/2017.04.3-release: [release] bump VERSION to 2017.04.3

[10:53] <Geth> ¦ rakudo/2017.04.3-release: review: https://github.com/rakudo/rakudo/commit/a4e59cf3b2

[10:53] <samcv> yay more versions

[10:53] <timotimo> samcv: sort of a thing you can attach to a commit "after the fact"

[10:53] <samcv> oh

[10:54] <timotimo> the ownership is reversed, so that the commit content doesn't have to change

[10:54] <samcv> well i describe it fully in moarvm commit log

[10:54] <samcv> idk. ok i see

[10:54] <timotimo> i could have put a note in saying "oops my commit message was crap"

[10:54] <timotimo> definitely beats force-pushing over master

[10:54] * Zoffix just comments on the commit in github in those cases...

[10:55] <samcv> i should try out git notes

[10:59] <timotimo> i have not used them yet

[10:59] <timotimo> and i don't know of anybody who has

[10:59] <timotimo> more or less just a random thought

[10:59] <samcv> i'll try it out sometime on a private repo and see what happens

[11:00] <samcv> i gotta go, may not be back before i go to sleep

[11:01] <Zoffix> m: say 'ﬆa' ~~ m:i/st/

[11:01] <camelia> rakudo-moar f9ebd2: OUTPUT: «｢ﬆa｣␤»

[11:01] <Zoffix> c: 2017.01,2017.02 say 'ﬆa' ~~ m:i/st/

[11:01] <committable6> Zoffix, ¦2017.01,2017.02: «False»

[11:02] <Zoffix> c: 2017.03,2017.04 say 'ﬆa' ~~ m:i/st/

[11:02] <committable6> Zoffix, ¦2017.03,2017.04: «｢ﬆa｣»

[11:02] <Zoffix> So that's another regression :/

[11:02] <Zoffix> Ah no

[11:02] <Zoffix> just works differently but still brokenly

[11:03] <samcv> yeah that's going to be an issue until i retrofit indexic/eqatic ops

[11:03] <dogbert17> timotimo: using note works, the question then is what's the best way to figure out wheather 'note' or 'say'. Looking at the string parameter sent to the 'usage' method feels a bit brittle. Any suggestions?

[11:03] <samcv> to return information about the length of the expansion

[11:04] <samcv> since atm it has no clue those cp's expanded and thinks the needle of 2 graphemes will hae matched a 2 grapheme section of string

[11:04] <samcv> that is next on the list

[11:04] <dogbert17> s/wheather 'note'/wheather to use 'note'/

[11:05] <timotimo> dogbert17: where does it decide that an error should be displayed?

[11:05] <samcv> well i have eqatic somewhat working. but. need changes in regex compiler to have it do things

[11:05] <timotimo> like "unknown flag: --foobar"

[11:05] <samcv> night o/

[11:05] <samcv> happy point release tidings to you and your kin

[11:06] <Zoffix> night

[11:06] <timotimo> night samcv

[11:07] <dogbert17> timotimo: not sure but I belive it might be in the class HLL::CommandLine::Parser found in nqp/src/HLL/CommandLine.nqp

[11:08] <dogbert17> that's where I found the string 'No such option'

[11:08] <timotimo> we can introduce some API for that

[11:08] <timotimo> does that function call the usage function?

[11:09] <dogbert17> that's the problem (for me) I can't find that place, if it does it is not obvious to me :(

[11:10] <timotimo> let me see

[11:10] <timotimo> ok, it just dies

[11:13] <timotimo> aha

[11:14] <timotimo> nqp/src/HLL/Compiler.nqp

[11:14] <dogbert17> what have you found

[11:14] <timotimo> line 333

[11:14] <timotimo> it has a try with .parse in it, when it CATCHes, it calls usage

[11:14] <dogbert17> nice find

[11:15] <dogbert17> is there a way to figure out if usage has been called from that code or is that the wrong approach?

[11:17] <timotimo> we could set a dynamic variable

[11:18] <dogbert17> something like $*CALLED-FROM-EXCEPTION ?

[11:23] <timotimo> i wouldn't call it that :)

[11:23] <dogbert17> :)

[11:23] <timotimo> $*USAGE-FOR-FAILURE?

[11:23] <dogbert17> naming is one of the hardest things ...

[11:25] <Geth> ¦ rakudo: zoffixznet++ created pull request #1065: 2017.04.3 release

[11:25] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1065

[11:26] <Zoffix> Well, release is done, but do I merge the branch or what?

[11:27] <Zoffix> c: 2017.04.3 say "wut"

[11:27] <committable6> Zoffix, ¦2017.04.3: «No build for this commit»

[11:30] <Zoffix> git describe

[11:30] <Zoffix> 2017.04.2-28-gf9ebd24

[11:30] <Zoffix> That's off a fresh clone. Gonna merge and see, I guess

[11:31] <timotimo> what did i get put into the contributors list for? for the bump commit? :)

[11:32] <Zoffix> I guess

[11:33] <dogbert17> or your TAP.pm6 fix

[11:33] <Zoffix> It's not in release

[11:33] <dogbert17> ah

[11:33] <timotimo> i don't really understand what "whenever MATCH is called" means in the fix comment

[11:34] <Geth> ¦ rakudo/nom: 9 commits pushed by TimToady++, (Zoffix Znet)++, (Timo Paulssen)++, (Samantha McVey)++

[11:34] <Geth> ¦ rakudo/nom: 2f143f476d | fix )> to work again whenever .MATCH is called

[11:34] <Geth> ¦ rakudo/nom: 6c66c1b88c | Fix REPL failures with Linenoise

[11:34] <Geth> ¦ rakudo/nom: 0150c7b8c5 | bump NQP to get $!to fix for )> construct

[11:34] <Geth> ¦ rakudo/nom: f756b4b54f | bump nqp for eqatic fix

[11:34] <Geth> ¦ rakudo/nom: 25048824c8 | Bump MoarVM/NQP for case insensitive regex fixes

[11:34] <Geth> ¦ rakudo/nom: b4455d875c | Log changes for 2017.04.3 release

[11:34] <Geth> ¦ rakudo/nom: 147ad2ea91 | Add 2017.04.3 release announcement

[11:34] <Geth> ¦ rakudo/nom: a4e59cf3b2 | [release] bump VERSION to 2017.04.3

[11:34] <Geth> ¦ rakudo/nom: c0c4084fd5 | Merge pull request #1065 from rakudo/2017.04.3-release

[11:34] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/compare/f9ebd24666...c0c4084fd5

[11:35] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.04...2017.04-12-ga5337ff

[11:35] <timotimo> huh

[11:35] <timotimo> 2017.04 was 12:13 am, 2017.04.1 was 11:59 am?

[11:36] <timotimo> how did that happen

[11:37] <Zoffix> By releasing within 6 hours?

[11:37] <Zoffix> 12

[11:38] <Zoffix> 12:13am is midnight; 11:59am is noon

[11:39] <Zoffix> c: $*PERL.compiler.version

[11:39] <committable6> Zoffix, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Committable

[11:40] <Zoffix> c: HEAD $*PERL.compiler.version.say

[11:40] <committable6> Zoffix, ¦HEAD(f9ebd24): «v2017.04.2.28.gf.9.ebd.2466»

[11:40] <Zoffix> .tell stmuk well, 2017.04.3 did happen after all. Should be OK to base R* off of, if needed

[11:40] <yoleaux> Zoffix: I'll pass your message to stmuk.

[11:41] <timotimo> m(

[11:42] <timotimo> this time format is simply ridiculous

[11:42] <timotimo> how can anybody ever think it's a good idea to keep this garbage

[11:42] * Zoffix is used to it

[11:51] <Zoffix> ZOFFLOP: t/spec/integration/advent2012-day15.t # 6.c-errata version

[11:54] <Zoffix> m: say 19/365

[11:54] <camelia> rakudo-moar c0c408: OUTPUT: «0.052055␤»

[11:54] <Zoffix> In the past year, I took a break for only 5% of days, according to my github contributions chart :|

[11:57] <timotimo> yikes

[11:57] <timotimo> get yourself a little bit of vacation some time :)

[12:01] <Zoffix> Today's as good a time as any, I guess

[12:01] * Zoffix & for rest of the day :)

[12:02] <timotimo> \o/

[12:02] <timotimo> have a good one!

[12:02] <dogbert17> Zoffix: play some games

[12:02] <timotimo> don't you dare come back before you're relaxed ;) ;)

[12:03] <dogbert17> timotimo: this dynamic variable we spoke about, doesn't it have to be declared in two places?

[12:03] <timotimo> nah, we'd just check if it exists (with a try, probably) when we output the usage

[12:03] <timotimo> oh hold on

[12:04] <timotimo> this is a method we're talkin gabout

[12:04] <timotimo> why not just pass a named parameter

[12:04] <timotimo> that way other users of HLL::Compiler don't have to change for this

[12:04] <dogbert17> that sounds too easy :)

[12:04] <dogbert17> but clever

[12:07] <Zoffix> ZOFVM: Files=1241, Tests=133802, 121 wallclock secs (23.86 usr  3.43 sys + 2531.13 cusr 130.78 csys = 2689.20 CPU)

[12:09] <dogbert17> could you send an appropriate output handle as a named param and then use that when outputting or should we settle for a boolean?

[12:11] <timotimo> i think boolean is enough

[12:12] <dogbert17> ok, can try to cobble something together when I get back from a short errand &

[12:12] <dogbert17> unless you want to do it of course

[12:13] <timotimo> i'm working on something else right now :)

[12:13] <dogbert17> cool, will try to fix it in a bit then :)

[13:20] <Geth> ¦ star: d45c907fb8 | (Steve Mynott)++ | tools/star/Makefile

[13:20] <Geth> ¦ star: Increase Rakudo a point version to .3

[13:20] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/d45c907fb8

[13:23] <stmuk> Zoffix: is there going to be a nqp-2017.04.1.tar.gz release based on 2017.04-24-g87501f7b?

[13:23] <yoleaux> 11:40Z <Zoffix> stmuk: well, 2017.04.3 did happen after all. Should be OK to base R* off of, if needed

[13:24] <Zoffix> uuuhhhhh

[13:24] <Zoffix> shit >_<

[13:30] <stmuk> I think it's only needed by star anyway and a usual rakudo build uses a git checkout of nqp so maybe its just a case of sticking that tarball up and not changing rakudo

[13:31] <Zoffix> stmuk: what about packagers and stuff? You now can't build 2017.04.3 rakudo without fetching stuff over net

[13:31] <stmuk> I don't think you can do that anyway AFAIK it uses git .. its only R* that doesn't

[13:32] <stmuk> not 100% sure since I've not looked for a while

[13:32] <Zoffix> stmuk: you can usually make an NQP package off NQP release and make Rakudo package off a rakudo release but 2017.04.3 uses an unreleased NQP version

[13:33] <stmuk> yes this is true

[13:33] <Zoffix> omg...

[13:34] <Zoffix> 2017.04.4....

[13:34] <timotimo> we're learning so much this month!

[13:36] <dogbert17> such action

[13:39] <Zoffix> The largest point release before was .2

[13:40] <stmuk> I sort of wish things were a bit simplier

[13:40] <Zoffix> Normally they are.

[13:40] <Zoffix> You switch the bot off safemode, tell it to release, and ~40m later release is done.

[13:41] <stmuk> if you shipped a 2017.04-24-g87501f7b.tar.gz you could probably avoid bumping rakudo

[13:42] <stmuk> a bit ugly looking

[13:43] <Zoffix> + that'll also need tweaking download page to recognize such releases + we'll have a release without a tag

[13:43] <Zoffix> Re-releasing is simpler

[13:43] <Zoffix> ummm

[13:43] <Zoffix> samcv: timotimo but... the regex fix. It was in moarvm wasn't it?

[13:44] <Zoffix> So it's kinda pointless to re-release anything without a point moarvm release.

[13:44] <stmuk> it doesn't break the https download page :) but yes re-releasing is probably safer

[13:45] <Zoffix> NeuralAnomaly: status

[13:45] <NeuralAnomaly> Zoffix, [✘] Next release will be in 3 weeks and 6 days. Since last release, there are 7 new still-open tickets (5 unreviewed and 0 blockers) and 54 unreviewed commits. See http://perl6.fail/release/stats for details

[13:46] <Zoffix> At least things will auto-resolve in 3 weeks and 6 days :}

[13:51] <Zoffix> stmuk: does Rakudo Star need a released nqp?

[13:53] <Zoffix> Looking at El_Che's packages, looks like they include moarvm + nqp.

[13:53] <stmuk> the process which automatically builds the final tarball has to ftp the 3 tar balls but I could probably stick in a different tar ball quite easily

[13:55] <Zoffix> Then maybe best do that. Instead of re-releasing moarvm + nqp + yet another point release of rakudo :o

[13:56] <Zoffix> or wait until 2017.05

[13:56] * Zoffix headdesks

[13:56] <stmuk> how important is the moarvm fix?

[13:58] <Zoffix> c: 2017.04 say 'abcdefgz' ~~ m:i/az/

[13:58] <committable6> Zoffix, ¦2017.04: «False»

[13:58] <Zoffix> c: 2017.04 say 'abcdefz' ~~ m:i/za/

[13:58] <committable6> Zoffix, ¦2017.04: «｢z｣»

[13:58] <Zoffix> stmuk: ^ it fixes that

[13:59] <Zoffix> c: 2017.04 say 'abcdefz' ~~ m:i/zafsdfsdfsdfsdfsdfsdfdsfsdfsdfsdfdsfsdfsdfdsfsdf/

[13:59] <committable6> Zoffix, ¦2017.04: «False»

[13:59] <Zoffix> c: 2017.04 say 'abcdefz' ~~ m:i/zafsdfsdfsdfsdfsdfsdfdsfsdfsdfsdfdsfsdfsdfdsfsdfa/

[13:59] <committable6> Zoffix, ¦2017.04: «False»

[14:00] <stmuk> I'll experiment with this shortly

[14:00] <stmuk> which moarvm hash should I use?

[14:01] <Zoffix> stmuk: current, HEAD, I believe. f0db882

[14:03] <stmuk> is El_Che nxadm I forget>

[14:03] <Zoffix> probably

[14:07] <dogbert17> so how the heck do you build nqp in a proper manner 'perl Configure.pl --backends=moar  --prefix=/home/dogbert/repos/rakudo/install/' followed by 'make', 'make test' and 'make install' doesnt do the trick. What am I missing?

[14:08] <Zoffix> --gen-moar

[14:08] <dogbert17> I'm using the same prefix as when I'm configuring moar

[14:09] <dogbert17> Zoffix: will try 'perl Configure.pl --backends=moar --gen-moar --prefix=/home/dogbert/repos/rakudo/install/'  ?

[14:12] <dogbert17> nope, 'Unhandled exception: Missing or wrong version of dependency '/home/dogbert/repos/rakudo/install/bin/../share/nqp/lib/MAST/Nodes.nqp' (from 'src/Perl6/Pod.nqp')'

[14:22] <Zoffix> dogbert17: you don't need --gen-more if you're building it yourself and that error sounds like you're running `nqp` instead of `./nqp`

[14:23] <AlexDaniel> “The largest point release before was .2” what was it?

[14:23] <AlexDaniel> not after Christmas

[14:23] <AlexDaniel> ah I see, 2015.07.2

[14:29] <dogbert17> Zoffix: I tried without now. Do you have to rebuild rakudo afterwards?

[14:30] <Zoffix> dogbert17: yes

[14:31] <dogbert17> thx, that explains it

[14:43] <dogbert17> timotimo: the change we talked about seems to be working now :)

[15:45] <stmuk> I guess 2015.07.2 was GLR related?

[16:16] <nine> stmuk: no, GLR was merged in September 2015

[16:18] <Geth> ¦ nqp/master: 9 commits pushed by (Pawel Murias)++

[16:18] <Geth> ¦ nqp/master: 1cb412411f | [js] Implement VMHash repr.

[16:18] <Geth> ¦ nqp/master: 248dd51215 | Test VMHash repr

[16:18] <Geth> ¦ nqp/master: 8855369a56 | Test serialization/deserialization of VMHash repr

[16:18] <Geth> ¦ nqp/master: e2e2e3067f | [js] Support composing P6int with integer info but without bits

[16:18] <Geth> ¦ nqp/master: 6519d68e47 | [js] Make serialization context boolify as true

[16:18] <Geth> ¦ nqp/master: c49e4a3fe6 | Test nqp::istrue on a serialization context

[16:18] <Geth> ¦ nqp/master: e07b6471cd | [js] Fix 'static' variables when we don't deserialize an sc

[16:18] <Geth> ¦ nqp/master: d2692f47ae | Revert "[js] Clean up wval setup"

[16:18] <Geth> ¦ nqp/master: d8dddb77ce | [js] Fix bug with nqp::clone

[16:18] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/61b9a2da82...d8dddb77ce

[16:23] <stmuk> ah

[16:43] <Zoffix> New blog post: "The Failure Point of a Release": https://perl6.party/post/The-Failure-Point-of-a-Release

[16:45] <Geth> ¦ rakudo/nom: 1bce2e5472 | (Zoffix Znet)++ (committed using GitHub Web editor) | docs/release_guide.pod

[16:45] <Geth> ¦ rakudo/nom: Log all 2017.04 point releases

[16:45] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1bce2e5472

[16:45] <nine> jnthn: is "muchly" really a word? :)

[16:46] <timotimo> it's acceptably a neologism

[16:47] <TimToady> it's neologismly

[16:49] <pmurias> m: use nqp;say(nqp::getobjsc(nqp::hash()));say('lived')

[16:49] <camelia> rakudo-moar c0c408: OUTPUT: «(signal SEGV)»

[16:50] <pmurias> m: use nqp;say(nqp::isnull(nqp::getobjsc(nqp::hash())));say('lived')

[16:50] <camelia> rakudo-moar c0c408: OUTPUT: «1␤lived␤»

[16:52] <pmurias> lizmat: is the BEGIN nqp::hash a big performance gain?

[17:05] <pmurias> lizmat: the problem with that is that nqp::hashes are usually special cased during serialization but a BEGIN nqp::hash serializes them like a regular object

[17:15] <Geth> ¦ star: a0b4754ec7 | (Steve Mynott)++ | tools/star/Makefile

[17:15] <Geth> ¦ star: versions of nqp/MoarVM for 2017.04.3

[17:15] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/a0b4754ec7

[17:20] <Geth> ¦ star: ef0ccebbda | (Steve Mynott)++ | 3 files

[17:20] <Geth> ¦ star: test-mock now needs oo-monitors

[17:20] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/ef0ccebbda

[17:33] <lizmat> pmurias: well, you probably know more about that than I

[17:34] <lizmat> when I last checked, the nqp::hash was *not* HLLized

[17:34] <lizmat> if that's what you're referring to

[17:36] <lizmat> afk again&

[17:54] <Geth> ¦ star: a7e7b6b92b | (Steve Mynott)++ | 16 files

[17:54] <Geth> ¦ star: Bump versions of submodules which at least install fine on Linux

[17:54] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/a7e7b6b92b

[18:02] <samcv> Zoffix, good per6.party post

[18:05] <timotimo> Zoffix: a typo in your post: you wrote "create directories / and /bar." but it should read / and /foo instead

[18:05] <timotimo> but the rest of the post is good

[18:05] <Zoffix> Fixed. Thanks.

[18:06] <samcv> ok so we're not having another point release? or we are? or we had one for rakudo but not nqp and moar? so

[18:06] <timotimo> we can put non-release moarvm and nqp into the rakudo star

[18:13] <Geth> ¦ star: cdbe6e45b3 | (Steve Mynott)++ | docs/announce/2017.04.md

[18:13] <Geth> ¦ star: import announce

[18:13] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/cdbe6e45b3

[18:21] <pmurias> Zoffix: re Perl6 VIP, it seems a good idea.

[18:42] <stmuk> http://pl6anet.org/drop/rakudo-star-2017.04-RC0.tar.gz

[18:55] <MasterDuke_> aren't there some utility functions somewhere to test the output of stderr?

[18:57] <moritz> yes

[18:57] <moritz> t/spec/packages/Test/Util.pm

[18:57] <MasterDuke_> thanks

[19:00] <Zoffix> MasterDuke_: is_run in particular

[19:01] <MasterDuke_> also thanks

[19:02] <timotimo> hm

[19:03] <timotimo> long ago i think we used to upload release tarballs before announcing them and only posted the announcement and uploaded to the "official place" when people have given a thumbs-up

[19:03] <Zoffix> what "people"?

[19:05] <MasterDuke_> does anyone have an opinion about whether tests for RT #113954 should go in roast or rakudo's tests?

[19:05] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=113954

[19:05] * Zoffix would put in rakudo

[19:07] <MasterDuke_> was leaning there myself. but do those tests have access to is_run?

[19:08] <Zoffix> nope

[19:09] <MasterDuke_> any reason not to copy it over?

[19:09] <Zoffix> nope

[19:14] <timotimo> Zoffix: well, more than just one person

[19:15] <timotimo> no matter who in particular. just get reports from a few people that things work out fine

[19:16] <MasterDuke_> isn't there some thought of lib/Test.pm6 going away? if not, should i just copy t/spec/packages/Test/Util.pm to lib/Test/Util.pm6? or just copy the functionality i need directly into the .t file?

[19:16] <Zoffix> What do you do with the tag then tho? You can't move it even if people find some issues

[19:16] <Zoffix> MasterDuke_: no such thought

[19:17] <timotimo> you can forcepush over a tag

[19:17] <Zoffix> MasterDuke_: and don't add it to lib add it somewhere in t/

[19:18] <timotimo> hm. does the tag need to exist in order for a release tarball to be attempted?

[19:18] <timotimo> maybe i'm thinking of star the whole time!?

[19:19] <MasterDuke_> t/lib? t/packages? anyone care?

[20:03] <MasterDuke_> got err: "Usage:\n  getout-2074-60417.code 'foo bar' \n"

[20:03] <MasterDuke_> expected err: "Usage:\n  -e '...' 'foo bar'"

[20:07] <timotimo> that's fun.

[20:08] <Zoffix> Yeah, it creates files it runs then

[20:08] <Zoffix> Just use `like` and read from `run` instead of using is_run

[20:08] <Zoffix> is run(:err, $*EXECUTABLE, <some arts>).err.slurp(:close), 'somethinng or other'

[20:09] <Zoffix> *args

[20:09] <MasterDuke_> is_run is broken?

[20:09] <Zoffix> .

[20:10] <MasterDuke_> `is_run('multi MAIN(q|foo bar|) {}', 'foo bar', { err => "Usage:\n  -e '...' 'foo bar' \n" }, 'description'` is what i ran

[20:11] <Zoffix> MasterDuke_: what's `'foo bar'`?

[20:12] <MasterDuke_> a string with a space in it

[20:12] <Zoffix> ...

[20:13] <MasterDuke_> i'm testing that foo bar doesn't work and suggests 'foo bar'

[20:14] <Zoffix> You're sending it to STDIN tho

[20:15] <MasterDuke_> yeah, and then it doesn't hit the multi and the usage goes to stderr

[20:16] <Zoffix> Then why send it at all?

[20:16] <Zoffix> It'll still have the getout* part because is_run uses a file

[20:17] <MasterDuke_> to match the use case in the RT

[20:17] <MasterDuke_> but, true, it's not necessary

[20:17] <Zoffix> That's not the usecase in the ticket. In the ticket you're passing as args, not STDIN

[20:18] <Zoffix> There are docs for is_run: https://github.com/perl6/roast/blob/master/packages/Test/Util.pm#L305-L351

[20:19] <MasterDuke_> oh, right, STDIN

[20:23] <MasterDuke_> `is_run('multi MAIN(q|foo bar|) {}', :args['foo', 'bar'], { err => "Usage:\n  -e '...' 'foo bar' \n" }, 'description'` still has the getout... in the 'got err'

[20:52] <MasterDuke_> so i'm ending up with `is run(:err, $*EXECUTABLE, ['-e', 'multi MAIN(q|foo bar|) {}', 'foo', 'bar']).err.slurp, ...`

[20:52] <MasterDuke_> fwiw, slurp(:close) would cause `The spawned command '<...>' exited unsuccessfully (exit code: 2)`

[21:11] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1066: Add tests for RT #113954

[21:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1066

[21:11] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=113954

[21:14] <Geth> ¦ rakudo: MasterDuke17++ created pull request #1067: Add missing '.' to end of expected text

[21:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1067

[21:48] <MasterDuke_> m: role R { method r {...} }; class C is R { method r { say "hi" } } # RT #118263

[21:48] <camelia> rakudo-moar 1bce2e: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Method 'r' must be implemented by R because it is required by roles: R.␤at <tmp>:1␤»

[21:48] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=118263

[21:50] <timotimo> you want "does" not "is" there

[21:50] <MasterDuke_> you can "is" roles though

[21:50] <timotimo> yeah

[21:50] <timotimo> it'll stub the role so the class can derive from it

[21:50] <MasterDuke_> m: role R { method r { say "hi" } }; class C is R { }; C.new.r

[21:50] <camelia> rakudo-moar 1bce2e: OUTPUT: «hi␤»

[21:50] <timotimo> but it'll give you a stranger error message, still

[21:52] <MasterDuke_> i feel like the error message would end up a paragraph

[21:54] <timotimo> haha

[21:54] <MasterDuke_> Method 'r' must be implemented by R because it is required by roles: R. Classes can't implement methods stubbed in roles when they "is" the role, did you mean to "does" the role?

[21:54] <timotimo> "can't pun a role with required methods"

[21:58] <MasterDuke_> timotimo: that's pretty good

[21:59] <timotimo> if it could also figure out that the pun was made because of a "is" instead of "does", that'd be better

[22:00] <MasterDuke_> the backtrace starts in `sub trait_mod:<is>`, so hopefully should be possible

[22:04] <MasterDuke_> is there a way to tell if the $parent in `sub trait_mod:<is>(Mu:U $child, Mu:U $parent)` has required methods?

[22:04] <samcv> can people here weigh in on these non-standardized tags in META https://gist.githubusercontent.com/samcv/b7785ded237a92a254d4298881a1eed8/raw/f089f8f751492b472d7c031fcec3e441f60af8fe/-

[22:05] <samcv> some are wrong, and some maybe should be added to the spec. but what do you guys think

[22:19] <timotimo> i didn't even see that i had already answered that bug!

[22:19] <timotimo> that bug is *old*

[22:20] <timotimo> oh

[22:20] <timotimo> i was also the one who created that bug

[22:21] <MasterDuke_> heh, yeah. was just looking through old bugs to see if there was anything easy to pick off

[22:28] <MasterDuke_> P6opaque: must compose Whatever before allocating

[22:28] <MasterDuke_> don't think i've seen that before

[22:28] <timotimo> it's when you try do put a * very early into the core setting

[22:29] <MasterDuke_> ah, thanks. should be easy to work around

[22:38] <MasterDuke_> m: role R { method a {...}; method b { say "bee" }; method c {...} }; class C is R { }; C.new

[22:38] <camelia> rakudo-moar 1bce2e: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Method 'a' must be implemented by R because it is required by roles: R.␤at <tmp>:1␤»

[22:38] <MasterDuke_> locally that says `Can't pun role R with required methods: a, c`

[22:39] <MasterDuke_> timotimo: think that ^^^ looks ok?

[22:39] <timotimo> that makes it sound like you're "punning a role with methods"

[22:39] <timotimo> like, you're using methods to pun something

[22:40] <timotimo> i'd phrase it more like "role R because it has required methods: ..."

[22:42] <MasterDuke_> yeah, that's better

[22:43] <timotimo> i think i'll be going to bed soon

[22:46] <MasterDuke_> "Class C can't pun role R because it has required methods: a, c"

[22:46] <MasterDuke_> how's that?

[22:47] <timotimo> do you actually find out that it's Class C that's doing it?

[22:47] <MasterDuke_> well, i find out the C part

[22:47] <timotimo> yeah, that sounds good

[22:47] <MasterDuke_> can anything else "is" things?

[22:47] <timotimo> can we find a phrasint that'd somehow hint at "maybe you wanted to use 'does' instead?"

[22:48] <timotimo> everything can is things :P

[22:48] <timotimo> trait_mod:<is> has many candidates

[22:48] <timotimo> m: say &trait_mod:<is>.^candidates

[22:48] <camelia> rakudo-moar 1bce2e: OUTPUT: «No such method 'candidates' for invocant of type 'Perl6::Metamodel::ClassHOW'␤  in block <unit> at <tmp> line 1␤␤»

[22:48] <timotimo> m: say &trait_mod:<is>.candidates

[22:48] <camelia> rakudo-moar 1bce2e: OUTPUT: «(sub trait_mod:<is> (Mu:U $child, Mu:U $parent) { #`(Sub|31809120) ... } sub trait_mod:<is> (Mu:U $child, :$DEPRECATED!) { #`(Sub|31816264) ... } sub trait_mod:<is> (Mu:U $type, :$rw!) { #`(Sub|31816416) ... } sub trait_mod:<is> (Mu:U $type, :$nativesize…»

[22:49] <timotimo> c: HEAD .say for &trait_mod:<is>.candidates

[22:49] <committable6> timotimo, https://gist.github.com/180c435a12693e68cce480df29d97237

[22:50] <MasterDuke_> ah, but on the one does `^add_parent`

[22:50] <MasterDuke_> *only

[22:51] <timotimo> yeah, only the Mu:U, Mu:U one, i bet

[22:51] <timotimo> set a dynamic variable $*PUNSTER :D :D :D

[22:52] <MasterDuke_> dinner &. will PR after

[22:53] <timotimo> cool. i'm going to bed soon

[22:54] <MasterDuke_> later...
