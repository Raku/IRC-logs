[04:45] <wander> afternoon #perl6-dev

[04:45] <wander> could anyone explain this line at NQP/Grammar.nqp for me?

[04:46] <wander> token infix:sym<||>   { <sym>  <O(|%tight_or, :op<unless>)> }

[04:46] <wander> I cannot find its action, and think maybe something done by syntax <O(..)>, which I don't know what it means

[04:47] <wander> it coverts a || b into

[04:47] <wander> - QAST::Op(unless &infix:<||>)  ||

[04:47] <wander> - QAST::Var(lexical $bar)

[04:47] <wander> - QAST::IVal(200)

[04:47] <wander> oh, $bar || 200

[04:49] <wander> but - QAST::Var(lexical $bar) is a condition, if we write down $foo = $bar || 200, some coercion needed might not be done

[04:51] <wander> nqp: my $foo := 42; my int $bar := $foo || 200; say($bar)

[04:51] <camelia> nqp-moarvm: OUTPUT: «0␤»

[04:51] <Geth> ¦ rakudo: 11d90cac59 | (Tom Browder)++ (committed by Samantha McVey) | 3 files

[04:51] <Geth> ¦ rakudo: Allow escaping POD column sep. Fixes rakudo/rakudo#1282

[04:51] <Geth> ¦ rakudo:

[04:51] <Geth> ¦ rakudo: Add code to fix rakudo issue #1282; allows escaping column separators to use as

[04:51] <Geth> ¦ rakudo: cell data; Tests to be added with https://github.com/perl6/roast/pull/361

[04:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/11d90cac59

[04:51] <synopsebot> RAKUDO#1282 [closed]: https://github.com/rakudo/rakudo/issues/1282 [POD] need to handle table cells with char column separators as data

[04:51] <wander> here, since the result_kind is native int, $foo should be coerced, but because it's condition, no coercion happens

[04:52] <wander> that's why I think $bar || 200 should be

[04:52] <wander> - QAST::Op(unless &infix:<||>)  ||

[04:53] <wander> - QAST::Var(lexical $bar)

[04:53] <wander> - QAST::IVal(200)

[04:53] <wander> but it might lose efficient, any advise?

[04:56] <wander> wait

[04:58] <wander> we *do* coercion, but it's not right.

[06:10] <Geth> ¦ nqp/patch-1: 335ac1cf0b | (Alex Chen)++ | 2 files

[06:10] <Geth> ¦ nqp/patch-1: Fix op_unless coercion

[06:10] <Geth> ¦ nqp/patch-1:

[06:10] <Geth> ¦ nqp/patch-1: Sample code:

[06:10] <Geth> ¦ nqp/patch-1: ```

[06:10] <Geth> ¦ nqp/patch-1: my $foo := 42;

[06:10] <Geth> ¦ nqp/patch-1: my int $bar := $foo || 200;

[06:10] <Geth> ¦ nqp/patch-1: say($bar);

[06:10] <Geth> ¦ nqp/patch-1: <…commit message has 14 more lines…>

[06:10] <Geth> ¦ nqp/patch-1: review: https://github.com/perl6/nqp/commit/335ac1cf0b

[06:12] <Geth> ¦ nqp: W4anD0eR96++ created pull request #383: Fix op_unless coercion

[06:12] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/383

[06:12] <synopsebot> NQP#383 [open]: https://github.com/perl6/nqp/pull/383 Fix op_unless coercion

[06:15] <wander> Last time I make a new nqp but run `nqp` instead of `./nqp`, thus I lost in "wtf" :\

[06:36] <wander> Does rakudo use the same LTM strategy as NQP? I means, do we implement it in NQP and them implement it again in rakudo?

[08:25] <Geth> ¦ nqp/patch-1: 59be3324d4 | (Alex Chen)++ | 2 files

[08:25] <Geth> ¦ nqp/patch-1: Resolve all 2-arg conditions

[08:25] <Geth> ¦ nqp/patch-1: review: https://github.com/perl6/nqp/commit/59be3324d4

[08:41] <Geth> ¦ nqp/patch-1: b4fdfa7333 | (Alex Chen)++ | main.nqp

[08:41] <Geth> ¦ nqp/patch-1: Remove debug file

[08:41] <Geth> ¦ nqp/patch-1: review: https://github.com/perl6/nqp/commit/b4fdfa7333

[09:07] <lizmat> Files=1229, Tests=75890, 317 wallclock secs (14.77 usr  5.35 sys + 2187.72 cusr 217.00 csys = 2424.84 CPU)

[09:08] <lizmat> wander: sorry, can't answer that question

[09:16] <pmurias> wander: the QAST is correct, it's the moarvm generating code that is wrong

[09:49] <pmurias> wander: I have reviewed your PR, if something is unclear I can clarify

[09:49] <pmurias> wander: thank you for finding the cause of the bug btw

[10:07] <tbrowder> .tell samcv Thank you Sam I am!

[10:07] <yoleaux> tbrowder: I'll pass your message to samcv.

[11:57] <Geth> ¦ rakudo: eed733e277 | (Martin Barth)++ | src/core/IO/Path.pm

[11:57] <Geth> ¦ rakudo: Fixed resolve of IO::Path for Windows

[11:57] <Geth> ¦ rakudo:

[11:57] <Geth> ¦ rakudo: Pathes with Windows volumes do no longer start with a seperator character.

[11:57] <Geth> ¦ rakudo:

[11:57] <Geth> ¦ rakudo: IO::Path.resolve: Added $volume to CWD

[11:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/eed733e277

[11:57] <Geth> ¦ rakudo: f70e20bdf5 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/core/IO/Path.pm

[11:57] <Geth> ¦ rakudo: Merge pull request #1249 from ufobat/path_3rd

[11:57] <synopsebot> RAKUDO#1249 [closed]: https://github.com/rakudo/rakudo/pull/1249 RFC && 3rd attempt: Fixed resolve of IO::Path for Windows

[11:57] <Geth> ¦ rakudo:

[11:57] <Geth> ¦ rakudo: RFC && 3rd attempt: Fixed resolve of IO::Path for Windows

[11:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f70e20bdf5

[12:40] <Geth> ¦ nqp/patch-1: 05eb3097a5 | (Alex Chen)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[12:40] <Geth> ¦ nqp/patch-1: Improve impl, pmurias++

[12:40] <Geth> ¦ nqp/patch-1: review: https://github.com/perl6/nqp/commit/05eb3097a5

[12:41] <wander> pmurias: yes, I don't know our QAST can handle that then.

[12:41] <wander> Thanks for your review, maybe my last commit do what you means :)

[12:42] <wander> I'm not quite sure how our registers alloc, too. Try to work it out

[13:38] <Geth> ¦ nqp: 68439403ec | pmurias++ | src/vm/js/Utils.nqp

[13:38] <Geth> ¦ nqp: [js] Remove extra whitespace

[13:38] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/68439403ec

[13:38] <Geth> ¦ nqp: 8a06289378 | pmurias++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[13:38] <Geth> ¦ nqp: Fix wrong coercion in if on moar

[13:38] <Geth> ¦ nqp:

[13:38] <Geth> ¦ nqp: my int $bar := $foo || 200; should now work correctly

[13:38] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/8a06289378

[13:38] <Geth> ¦ nqp: 0a5e03a21e | pmurias++ | t/nqp/012-logical.t

[13:38] <Geth> ¦ nqp: Add test for fixed bug

[13:38] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/0a5e03a21e

[13:38] <pmurias> wander: the bug was in a different place, I fixed that

[13:39] <wander> oh. thank you

[14:12] <|Tux|> Rakudo version 2017.11-76-gf70e20bdf - MoarVM version 2017.11-28-gba1fb9542

[14:12] <|Tux|> csv-test-xs-20      0.426 -  0.450

[14:12] <|Tux|> csv-ip5xs           1.064 -  1.086

[14:12] <|Tux|> test-t --race       1.152 -  1.217

[14:12] <|Tux|> test-t              2.838 -  2.891

[14:12] <|Tux|> test               11.427 - 11.883

[14:13] <|Tux|> csv-parser         11.977 - 11.979

[14:13] <|Tux|> csv-ip5xs-20       12.696 - 12.775

[14:13] <|Tux|> test-t-20 --race   17.425 - 17.660

[14:13] <|Tux|> test-t-20          51.526 - 52.518

[17:45] <Geth> ¦ nqp: 00660af056 | (Alex Chen)++ | t/nqp/012-logical.t

[17:45] <Geth> ¦ nqp: Add test of logical ops

[17:45] <Geth> ¦ nqp:

[17:45] <Geth> ¦ nqp: This is one bad case of an incorrect fixing of `||` logic. It says 0,

[17:45] <Geth> ¦ nqp: which should be 200.

[17:45] <Geth> ¦ nqp:

[17:45] <Geth> ¦ nqp: Add this test to prevent regressions from happening.

[17:45] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/00660af056

[18:05] <travis-ci> NQP build passed. Alex Chen 'Add test of logical ops

[18:05] <travis-ci> https://travis-ci.org/perl6/nqp/builds/313080859 https://github.com/perl6/nqp/compare/0a5e03a21e20...00660af056f0

[22:09] <AlexDaniel> releasable6: next

[22:09] <releasable6> AlexDaniel, Next release in 8 days and ≈20 hours. No blockers. 0 out of 76 commits logged

[22:09] <releasable6> AlexDaniel, Details: https://gist.github.com/b10bb6a66d4948ff03655731d82a9d4a
