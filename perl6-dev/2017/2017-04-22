[01:27] <Zoffix> m: say "abc" ~~ m:i/caaaaa/

[01:27] <camelia> rakudo-moar 9ed89d: OUTPUT: ¬´ÔΩ¢cÔΩ£‚ê§¬ª

[01:28] <Zoffix> pretty scary we don't have any tests catching something as basic as that :o

[01:30] <samcv> timotimo, need a bit of help fixing this bug

[01:30] <samcv> m: say "b" ~~ m:i/ba/

[01:30] <camelia> rakudo-moar 9ed89d: OUTPUT: ¬´ÔΩ¢bÔΩ£‚ê§¬ª

[01:31] <samcv> only on m:i and the last letter of left string batches the first of the right

[01:31] <samcv> m: say "aaaaaaaab" ~~ m:i/ba/

[01:31] <camelia> rakudo-moar 9ed89d: OUTPUT: ¬´ÔΩ¢bÔΩ£‚ê§¬ª

[01:32] <samcv> and it doesn't happen with variables but only if it's actually written in the source code or EVAL'd

[01:32] <samcv> m: say "aaaaaaaaaaaaaaaaab" ~~ m:i/abaa/

[01:32] <camelia> rakudo-moar 9ed89d: OUTPUT: ¬´ÔΩ¢abÔΩ£‚ê§¬ª

[01:33] <samcv> m: say "aaaaaaaabcd" ~~ m:i/abcd111111/

[01:33] <camelia> rakudo-moar 9ed89d: OUTPUT: ¬´ÔΩ¢abcdÔΩ£‚ê§¬ª

[01:33] <samcv> m: say "aaaaaaaabcd" ~~ m:i/.abcd111111/

[01:33] <camelia> rakudo-moar 9ed89d: OUTPUT: ¬´ÔΩ¢aabcdÔΩ£‚ê§¬ª

[01:33] <samcv> m: say "aaaaaaaabcd" ~~ m:i/3abcd111111/

[01:33] <camelia> rakudo-moar 9ed89d: OUTPUT: ¬´False‚ê§¬ª

[01:34] <samcv> hmm actually it's a problem in the moarvm function. ok

[01:34] <samcv> i know how to fix this then

[01:35] <samcv> probably....

[02:10] <Zoffix> Maybe we should knock it on the head and make Rakudo Star from 2017.05 instead of .04

[04:51] <Geth> ¬¶ roast: 5401f288be | (Samantha McVey)++ | S05-modifier/ignorecase.t

[04:51] <Geth> ¬¶ roast: Add tests for m:i bug

[04:51] <Geth> ¬¶ roast:

[04:51] <Geth> ¬¶ roast: If the beginning of the needle matches towards the end of the haystack,

[04:51] <Geth> ¬¶ roast: it can return a partial match, when it hasn't traversed the needle fully.

[04:51] <Geth> ¬¶ roast: Add tests for this bug.

[04:51] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/5401f288be

[04:51] <samcv> ok tests added. i have them passing in my build of mvm. will commit it in a bit

[05:37] <Geth> ¬¶ nqp: ae6a610d84 | (Samantha McVey)++ | 2 files

[05:37] <Geth> ¬¶ nqp: Add tests for MVM indexic/equatic bug

[05:37] <Geth> ¬¶ nqp:

[05:37] <Geth> ¬¶ nqp: Tests are todo until fix pushed to MVM.

[05:37] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/ae6a610d84

[06:41] <[Tux]> This is Rakudo version 2017.04.2-22-g9ed89d947 built on MoarVM version 2017.04

[06:41] <[Tux]> csv-ip5xs        3.060

[06:41] <[Tux]> test            12.986

[06:41] <[Tux]> test-t           5.194 - 5.237

[06:41] <[Tux]> csv-parser      13.342

[06:48] <Geth> ¬¶ nqp: 856d5c51a5 | (Samantha McVey)++ | tools/lib/NQP/Configure.pm

[06:48] <Geth> ¬¶ nqp: Enhance error reporting in Configure.pm when rev parse errors

[06:48] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/856d5c51a5

[07:03] <stmuk> messages?

[07:03] <yoleaux> 19 Apr 2017 18:31Z <Zoffix> stmuk: does R* have some sort of mechanism to apply patches or use non-release commit for release or something? The b4fa6d6792 fixes a REPL bug that affects REPL users on OSX who load Readline or Linenoise.

[07:03] <yoleaux> 19 Apr 2017 22:38Z <Zoffix> stmuk: never mind. It's a much more minor issue than I originally thought. The history file just isn't saved between REPL runs and it displays a message about mkdir '/' 0o777 at startup. I also got a workaround that involves setting up an alias the users who really want their command line history: https://gist.github.com/zoffixznet/6a0d212ada41fce7aeca15fa9efcc263

[07:13] <samcv> ok i'm going crazy someone please help

[07:14] <samcv> see https://travis-ci.org/MoarVM/MoarVM/jobs/224609074#L1062

[07:14] <samcv> i have no clue where this is coming from

[07:14] <samcv> tag 9999-please-do-not-use-these-7-gde3e5cf is bogus. but it seems to be trying to check it?

[07:14] <samcv> but it builds fine even on a clean checkout for me

[07:15] <samcv> hmm maybe i should clone more than depth 1 for nqp

[07:15] <stmuk> .tell zoffix https://github.com/rakudo/star/tree/master/patches

[07:15] <yoleaux> stmuk: I'll pass your message to zoffix.

[07:16] <samcv> oh wait. nvm. i just pulled tags on mvm

[07:16] <samcv> and someone added a tag 9999-please-do-not-usethese

[07:16] <samcv> GREAT! and tags are not deletable!

[07:20] <nine> WTF?

[07:20] <samcv> i think we can probably ignore it though

[07:20] <samcv> hopefuly

[07:21] <samcv> rev =~ /(\d+)$sep(\d+)(?:$sep(\d+))?(?:-(\d+)-g[a-f0-9]*)?$/

[07:21] <samcv> or die "Unrecognized revision specifier '$rev' $what\n";

[07:21] <samcv> is what we have in Configure.pm now

[07:23] <samcv> ok i'm getting the failure too now. i wasn't getting it on a clean install, but installed mvm to a branch new prefix and i hit the bug

[07:26] <stmuk> .tell zoffix BTW I'm on holiday in Greece with poor connectivity so R* is likely to be delayed. I had problems with Grammar::Debugger but that's now fixed

[07:26] <yoleaux> stmuk: I'll pass your message to zoffix.

[07:26] <samcv> working on it right now...

[07:29] <nine> samcv: we could also change MoarVM's Configure.pl to use git describe instead of git describe --tags

[07:30] <samcv> oh

[07:30] <samcv> actually you're right

[07:30] <samcv> i'm looking in the wrong spot :)

[07:30] <samcv> i thought it was checking the moarvm repo tags or something

[07:30] <nine> Yeah, because nqp's Configure.pl uses moarvm --version

[07:30] <nine> err... moar --version

[07:32] <nine> pushed

[07:33] <samcv> yay

[07:34] <samcv> weird that that tag appeared

[07:35] <samcv> maybe timo accidently merged it in with telemeh

[07:35] <samcv> seems to work now

[07:36] <samcv> thanks nine

[07:36] <nine> my pleasure :)

[07:37] <samcv> now i can stop tearing my hair out

[07:38] <nine> Yeah, first Travis builds passing

[07:39] <samcv> i pushed it to my fork so i can check appveyor too

[07:50] <nine> 0.16s$ perl Configure.pl --prefix=$MOAR_PREFIX --backends=moar;

[07:50] <nine> Unknown option: backends

[07:50] <nine> WTF?

[07:50] <nine> https://travis-ci.org/MoarVM/MoarVM/jobs/224612634

[07:51] <samcv> weird. idk why that's happening maybe the uh

[07:52] <samcv> readlink -f command words differently on mac?

[07:52] <samcv> i replaced `cd nqp` with `cd $NQP_FOLDER` which is done from readlink -f nqp # while in the moarvm folder

[07:54] <samcv> hmm https://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac

[07:54] <samcv> lame-o

[08:01] <samcv> fixing now

[08:19] <samcv> there we go

[08:20] <samcv> that was more annoying that i thought it'd be at first. settled on

[08:20] <samcv> writing my own: resolve_folder      () { O="$(pwd -P)"; D="$(dirname $1)"; T="$(basename $1)"; cd -- "$D" && cd -- "$T" && pwd -P; cd -- "$O" > /dev/null; }

[08:20] <samcv> since i don't need to resolve links or anything, and that should work for any normal folders

[08:22] <samcv> don't think i need quotes around VAR="$( )" though. yeah. i've learned if in doubt just quote everything :)

[08:33] <samcv> appears to be working now. good

[08:54] <samcv> still gotta fix the windows build though

[09:49] <bartolin> lizmat: it looks like 3b0dec3255 does not work with the JVM backend :-/

[09:49] <bartolin> during stage parse it blows up with: Method 'X::TypeCheck::Binding::Parameter' not found for invocant of class 'QAST::SVal'

[10:27] <lizmat> bartolin: does removing the BEGIN fix it?   If so, maybe we should remove the BEGIN in case of the JVM ?

[10:29] <Zoffix> .tell stmuk R* likely delayed you say... I'm thinking of maybe delaying it by 4 weeks and cutting it off 2017.05 or something isn't a bad idea. There are two pretty serious bugs in 2017.04.2 that we'd need to patch or point-release for

[10:29] <yoleaux> 07:15Z <stmuk> Zoffix: https://github.com/rakudo/star/tree/master/patches

[10:29] <yoleaux> Zoffix: I'll pass your message to stmuk.

[10:29] <yoleaux> 07:26Z <stmuk> Zoffix: BTW I'm on holiday in Greece with poor connectivity so R* is likely to be delayed. I had problems with Grammar::Debugger but that's now fixed

[10:30] <bartolin> lizmat: I'll test (will take a while :-)

[10:40] <bartolin> lizmat: looks good so far. I'm running a spectest and if that looks good as well, I'll add a special case for r-j (for the line with BEGIN only)

[10:40] <lizmat> yeah, that's what I had in mind  :-)

[10:40] <lizmat> bartolin++

[10:41] <lizmat> afk again&

[10:54] <jnthn> Aha, my TPF grant report is posted: http://news.perlfoundation.org/2017/04/perl-6-performance-and-reliabi-3.html

[10:54] <yoleaux> 21 Apr 2017 23:27Z <AlexDaniel> jnthn: fwiw https://irclog.perlgeek.de/perl6/2017-04-21#i_14466196

[10:55] <jnthn> For anyone reading it and thinking "huh, did jnthn do those recently" - no, I wrote the grant report 2 months ago, it just took until now to be posted. :-)

[10:58] <Zoffix> jnthn++

[10:58] <Zoffix> Reliability definitely improved.

[11:05] <jnthn> Glad it's felt by others :)

[12:58] <dogbert17> o/

[12:59] <dogbert17> Zoffix: my apologies for disappearing during yesterdays TAP.pm6 debug session, someone at $work suggested that some beers should be consumed at a local pub and I fell for it

[13:01] <dogbert17> I have now run the spectest through gdb and here's what it looks like: https://gist.github.com/dogbert17/74e00499cffeb9c1117b5ef6d9769308

[13:07] <dogbert17> for those who didn't follow the discussion yesterday, the problem is that, if you run 'make spectest HARNESS_TYPE=6' with the default TEST_JOBS=1, then the process will run out of file handles if your system is set up to only have 1024

[13:08] <dogbert17> it seems as if one fd is lost for each test file being run and when you get to file ~1000 the spectest is aborted

[13:09] <dogbert17> hopefully the gist can give us a clue as to why

[14:33] <ZoffixMobile> dog

[14:34] <ZoffixMobile> Ugh

[14:34] <ZoffixMobile> dogbert17: what perl6 version is that gdb for?

[14:36] <dogbert17> dogbert@dogbert-VirtualBox ~/repos/rakudo $ gdb -v

[14:36] <dogbert17> GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1

[14:37] <dogbert17> the trick here is to break into the running perl6 process with 'sudo gdb -p <pid>', then you'll be able to set breakpoints an stuff

[14:38] <timotimo> i think he meant perl6 --version

[14:38] <dogbert17> This is Rakudo version 2017.04.2-22-g9ed89d947 built on MoarVM version 2017.04

[14:38] <timotimo> there's a config option somewhere in /sys or /proc that you can change so you can attach to your own processes

[14:38] <timotimo> so you don't need to run gdb as root

[14:38] <dogbert17> aha

[14:40] <timotimo> echo 0 > /proc/sys/kernel/yama/ptrace_scope

[14:42] <dogbert17> cool

[14:45] <dogbert17> https://github.com/rakudo/rakudo/blob/nom/lib/TAP.pm6#L885

[14:47] <timotimo> nobody ever awaits the closing of the process?

[14:47] <timotimo> like, $proc.out.lines(:close) or whatsit?

[14:47] * jnthn has a headache today, and figured he's share it by writing a blog post... https://6guts.wordpress.com/2017/04/22/massively-reducing-moarvm-fixed-size-allocator-contention/

[14:47] <jnthn> *he'd

[14:48] <lizmat> jnthn++

[14:49] <lizmat> jnthn: also: s/dontate/donate/

[14:49] * dogbert17 finds the code in TAP.pm6 quite hard to follow even without a headache

[14:49] <timotimo> dotonate?

[14:49] <dogbert17> jnthn++ (blogging)

[14:49] * lizmat goes off and will read more when back

[14:50] <timotimo> "mallocand friends"

[14:56] <Geth> ¬¶ rakudo/nom: 624fe8fa2b | usev6++ | src/core/Exception.pm

[14:56] <Geth> ¬¶ rakudo/nom: [JVM] Don't initialize hash at compile time

[14:56] <Geth> ¬¶ rakudo/nom:

[14:56] <Geth> ¬¶ rakudo/nom: The BEGIN phaser was added with 3b0dec3255, but doesn't work on JVM. It lead to

[14:56] <Geth> ¬¶ rakudo/nom: an error during stage past: Method 'X::TypeCheck::Binding::Parameter' not found

[14:56] <Geth> ¬¶ rakudo/nom: for invocant of class 'QAST::SVal'.

[14:56] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/624fe8fa2b

[15:00] <timotimo> good post

[15:01] <jnthn> lizmat, timotimo: fixed those two, thanks

[15:10] <MasterDuke_> jnthn++, but "VM for a dyanmic language"

[15:13] * dogbert17 has trouble understanding "A given bin consists of:"

[15:13] <dogbert17> 1 or more pages, each with space for a certain number of allocations of the bin size

[15:14] <MasterDuke_> also, "So, I belive"

[15:18] <timotimo> dogbert17: well, there's one FSA, in it are multiple "size bins", where each bin holds objects of an upper and lower size limit

[15:18] <timotimo> each of these "size bins" allocates pages full of slots of these sizes, i.e. it'll malloc 128 slots * 16 bytes

[15:21] <dogbert17> timotimo: thx

[15:40] <dogbert17> "When a thread termiantes,"

[15:54] <Geth> ¬¶ nqp: MasterDuke17++ created pull request #354: Make profile sql output better

[15:54] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/pull/354

[15:56] <MasterDuke_> timotimo, nine: if you care to check it out, https://github.com/perl6/nqp/pull/354 should enable the functionality you were asking for

[15:57] <timotimo> sorry, i'm a half AFK

[16:02] <MasterDuke_> timotimo: i'm sorry, but this PR is going to expire in 10min unless you devote yourself to reviewing it. all the blame will rest on you

[16:03] <MasterDuke_> that's a reasonable expectation, right?

[16:04] <timotimo> :)

[16:05] <timotimo> yeah, i'll merge that

[16:06] <timotimo> not quite a thorough code review, but since you've tested it and things give proper results, it's an improvement either way :)

[16:06] <MasterDuke_> well, might be good to have someone else test too

[16:07] <Geth> ¬¶ nqp/master: 5 commits pushed by MasterDuke17++, timo++

[16:07] <Geth> ¬¶ nqp/master: 9ab704a7c0 | Use 0 instead of NULL in the profiler SQL output

[16:07] <Geth> ¬¶ nqp/master: d8949b4716 | Rename 'allocators' to 'types' in sql profile

[16:07] <Geth> ¬¶ nqp/master: ec195684d2 | Make 0s strings since they're going to get stringified anyway

[16:07] <Geth> ¬¶ nqp/master: 95b8926e6e | Allow tracking of allocations by routine

[16:07] <Geth> ¬¶ nqp/master: f2cfdb617f | Merge pull request #354 from MasterDuke17/make_profile_sql_output_better

[16:07] <Geth> ¬¶ nqp/master: review: https://github.com/perl6/nqp/compare/856d5c51a5...f2cfdb617f

[16:07] <timotimo> pff, testing

[16:07] <MasterDuke_> heh, but then again, i suspect i'm the only one who's ever used the sql profile output

[16:07] <timotimo> i've just re-learned today that just committing stuff to master is totally fine

[16:07] <MasterDuke_> so even if it broke...

[16:08] <timotimo> i've used it as if it were csv :P

[16:08] <timotimo> i.e. not taken advantage of the structure and inter-table relations at all

[16:08] <timotimo> or even joining a table with itself, as would be required with the call graph table

[16:08] <MasterDuke_> ah, still nice to know someone has used it

[16:09] <MasterDuke_> need to remember to correct the example in the docs when that hits rakudo

[16:09] <timotimo> and now we should be in good shape to build a good tool for this

[16:09] <timotimo> i didn't know this was docced :P

[16:10] <MasterDuke_> barely, https://docs.perl6.org/language/performance#Profile_locally

[16:11] <timotimo> i didn't even know!

[16:11] <timotimo> is sqlite still in browsers for free?

[16:11] <MasterDuke_> but now you do, and that's half the battle

[16:12] <MasterDuke_> i think ff still uses it for some internal stuff, don't know otherwise

[16:13] <timotimo> it might be time to remove "use of gather/take" from the performance page as a "performance weakness"

[16:13] <timotimo> hmm.

[16:14] <timotimo> if sqlite were still in browsers for free, we could host a static .html file on moarvm.org or rakudo.org or whatever and people  would just pick their .sql file from disk and get all the data without it traveling over the network

[16:14] <MasterDuke_> that would be pretty cool

[16:14] <timotimo> of course there's stuff like https://github.com/kripken/sql.js/

[16:15] <timotimo> i wonder why its build is failing?

[16:16] <timotimo> there is nothing in the travis build logs for the latest failed build

[16:17] <timotimo> could it be it fell prey to the travis failure a few weeks back?

[16:17] <MasterDuke_> builds fine locally and passes `make m-test`

[16:17] <timotimo> m-test? how come it has a moarvm backend?

[16:18] <MasterDuke_> i just specify it because sometimes i have a stray old jvm build lying around

[16:18] <timotimo> i was refering to sql.js' build

[16:19] <MasterDuke_> ah, nm then

[16:20] <timotimo> though you could just use the sql.js it offers and at least the demo page works

[16:24] <timotimo> Clone done, sent: 1430  received: 25072049  ip: 67.18.92.124

[16:24] <timotimo> server returned an error - clone aborted

[16:24] <timotimo> ?!? :(

[16:27] <timotimo> could be because my version of fossil is ancient :P

[16:28] <MasterDuke_> fossil?

[16:28] <timotimo> the SCM made and used by the sqlite folks

[16:29] <MasterDuke_> huh, never used it

[16:30] <timotimo> it's slightly niche, but i hear great things about it

[16:35] * timotimo grabs an emscripten sdk

[16:48] <timotimo> ugh, the makefile for sql.js is bogus

[16:52] <timotimo> huh

[16:52] <timotimo> how in the heck does this work

[16:53] <timotimo> how does it know to put emcc in front ...

[16:54] <timotimo> and now i have an up-to-date sql.js

[16:58] <timotimo> now, do i even want to write this in html and js at all?

[16:58] <timotimo> i didn't even consider that question :)

[16:59] <timotimo> i have experience with python and qt, maybe i'll give that a shot, though maybe through Inline::Python rather than python directly

[17:00] <MasterDuke_> could the existing HTML be adapted to optionally the sql output?

[17:00] <timotimo> probably

[17:07] <timotimo> s: {a => 1}, "gist", \()

[17:07] <SourceBaby> timotimo, Ehhh... I'm too scared to run that code.

[17:08] <timotimo> s: Hash.new(), "gist", \()

[17:08] <SourceBaby> timotimo, Sauce is at https://github.com/rakudo/rakudo/blob/624fe8f/src/core/Hash.pm#L213

[17:22] * samcv yawns-

[17:22] <samcv> too early

[17:23] <samcv> timotimo, if telemeh is not messing up the windows builds it's okay to bump nqp to get the m:i fix

[17:24] <timotimo> well, i'm not saying it doesn't mess up the windows builds, but it does pass on appveyor

[17:25] <samcv> ..

[17:25] <samcv> timotimo, mess up how?

[17:25] <timotimo> i have no idea

[17:26] <samcv> then how do you know it messes it up

[17:26] <timotimo> it's windows, you know

[17:26] <timotimo> and if it's windows ... you *know*.

[17:26] <samcv> spectest passing

[17:26] <samcv> ok so you don't *know* but guess?

[17:26] <timotimo> well, i know that being too confident is a bad idea when windows' involved :D

[17:27] <samcv> yeah i guess

[17:27] <Zoffix> \o/

[17:27] <Zoffix> Just got re-certified as Emergency Level C First Aid Responder :)

[17:27] <samcv> well i'l be back in a few hours, going back to sleep for a bit. bump moar+nqp whenever you feel comfortable

[17:27] <timotimo> cool

[17:27] <timotimo> have a good sleep, samcv

[17:28] <samcv> thank you :)

[17:28] <Zoffix> Basically keeping you alive in any emergency long enough for ambulance to arrive... So... if you feel you're about to die. Ping me :P

[17:28] <samcv> i feel i'm about to lose consiousness

[17:28] <timotimo> oh

[17:28] <samcv> zzzzzzzzzz

[17:28] * samcv &

[17:28] <timotimo> i thought you meant C Programming Language First Aid Responder

[17:28] <Zoffix> night

[17:28] <Zoffix> heh

[17:28] <samcv> XD lol timotimo

[17:29] <samcv> we could use one of those too

[17:29] <timotimo> yeah, i seem to find myself in need of that multiple times a month

[17:51] <timotimo> YES! i have a terminal with sixel support \o/

[18:46] <timotimo> i think i'm going to bump nqp and rakudo now

[18:47] <timotimo> huh

[18:50] <timotimo> i have no idea by what mechanism my 9999-please-dont-use-these release causes Configure.pl to break in nqp

[18:52] <timotimo> samcv: i'm going to remove what looks like left-over debug output, "long end 0 should-fail 0"

[18:58] <TimToady> Zoffix: the problem with putting off R* even longer is that, the longer the cycle time on releases, the more pressure there is to sneak things in at the last moment because you know you won't get another chance for N months

[18:58] <TimToady> so we should probably figure out how to move to a more continuous release process

[18:59] * TimToady is basically channeling obra++ here...

[19:02] <b2gills> That was a big problem for Perl 5 until they went with a yearly release cycle

[19:07] <Geth> ¬¶ nqp: f72fe4d04d | (Timo Paulssen)++ | 2 files

[19:07] <Geth> ¬¶ nqp: remove left-over debug output, bump moarvm for eqatic fix

[19:07] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/f72fe4d04d

[19:07] <Geth> ¬¶ rakudo/nom: 7a3a6a8469 | (Timo Paulssen)++ | tools/build/NQP_REVISION

[19:07] <Geth> ¬¶ rakudo/nom: bump nqp for eqatic fix

[19:07] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7a3a6a8469

[19:07] <Geth> ¬¶ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.04-12-ga5337ff...2017.04-20-gf72fe4d

[19:09] <Zoffix> TimToady: seems apples and oranges to me. All I proposed is to base the next R* off 2017.05 Rakudo instead of making a 2017.04.3 point release or adding rakudo patches to R*. This doesn't affect the length of between future R* releases.

[19:11] <Zoffix> As for continuous releases... what is it? Releases more often than 1 month? Perl 6 VIP will be an end user release made monthyl, same day as Rakudo

[19:11] <Geth> ¬¶ rakudo/nom: 2bae61d69b | (Timo Paulssen)++ | lib/TAP.pm6

[19:11] <Geth> ¬¶ rakudo/nom: sync version of process-launching tap harness must close stdout.

[19:11] <Geth> ¬¶ rakudo/nom:

[19:11] <Geth> ¬¶ rakudo/nom: otherwise FDs will keep piling up and exhaust the system's ulimit

[19:11] <Geth> ¬¶ rakudo/nom: of file descriptors. dogbert17++

[19:11] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2bae61d69b

[19:14] <TimToady> no biggie, and I'm not a big fan of slippery slope arguments, but "Just This Once" tickles that neuron of mine :)

[19:15] <Zoffix> I can always cut a new point release, if needed. Let me know

[19:16] * Zoffix &

[19:29] <dogbert17> oh, timotimo++ (bug crusher)

[19:29] <timotimo> well, you pointed me at the exact location

[19:31] <dogbert17> I wouldn't have known what to do though :)

[19:32] <samcv> yay got the merge

[19:32] <samcv> err bump

[19:32] <samcv> good *

[19:33] <timotimo> was the debug output removal a good call?

[19:33] <samcv> yeah that's fine

[19:33] <timotimo> 'k

[19:33] <samcv> from the .t file right

[19:33] <timotimo> we should then un-todo some of these tests

[19:33] <samcv> very yes

[19:33] <timotimo> hm, is that in the roast or in nqp's test suite?

[19:33] <samcv> both

[19:34] <timotimo> t/moar/08-indexic.t                  (Wstat: 0 Tests: 117 Failed: 0)

[19:34] <timotimo> TODO passed:   1, 92-105

[19:34] <timotimo> yeah

[19:34] <samcv> plus in roast too

[19:34] <timotimo> i should have untodod that before bumping the version from rakudo's side

[19:35] <samcv> yea

[19:35] <samcv> m: say 'abcd' ~~ /cdfg/

[19:35] <camelia> rakudo-moar 2bae61: OUTPUT: ¬´Nil‚ê§¬ª

[19:35] <samcv> yay

[19:35] <timotimo> there's a terminal emulator called "cancer" with the tagline "it's terminal" m)

[19:36] <samcv> oh my

[19:39] <geekosaur> oy

[19:40] <timotimo> oy geekosaur

[19:41] <Geth> ¬¶ nqp: cb60c0b32c | (Samantha McVey)++ | tools/lib/NQP/Configure.pm

[19:41] <Geth> ¬¶ nqp: Nicer debug output when git tags are confused

[19:41] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/cb60c0b32c

[19:41] <Geth> ¬¶ nqp: 33aa810320 | (Samantha McVey)++ | t/moar/08-indexic.t

[19:41] <Geth> ¬¶ nqp: Untodo the now passing indexic tests

[19:41] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/33aa810320

[19:42] <samcv> looks like equatic still has the bug though

[19:42] <samcv> hmm

[19:42] <timotimo> oh crap

[19:43] <samcv> idk if we use equatic anywhere?

[19:43] <timotimo> oh

[19:43] <timotimo> i think my commit messages were all talking about eqatic

[19:44] <timotimo> but only indexatic was fixed?

[19:44] <samcv> yeah

[19:44] <timotimo> dang

[19:44] <samcv> yeah we don't use equatic anywhere

[19:44] <timotimo> d'oh

[19:44] <samcv> gonna look at it in mvm though. i though what i did would have fixed it but. lemme see

[19:45] <samcv> still not a release blocker though since it's not used anywhere

[19:45] <samcv> ok we use it in one place

[19:46] <samcv> m: say 'a' ~~ m:i/ab/

[19:46] <camelia> rakudo-moar 2bae61: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§¬ª

[19:46] <samcv> ok yeha need to fix this then

[19:47] <samcv> cause it does equatic first before doing an index i believe

[19:47] <samcv> at the very start of the haystack

[19:47] <samcv> m: say 'ba' ~~ m:i/ab/

[19:47] <camelia> rakudo-moar 2bae61: OUTPUT: ¬´False‚ê§¬ª

[19:49] <samcv> ok this is EZ fix

[19:56] <samcv> yay i fixed it. will commit after i grab my tea

[20:00] <samcv> m: use nqp; say nqp::eqatic('st', 'Ô¨Üa', 0)

[20:00] <camelia> rakudo-moar 2bae61: OUTPUT: ¬´1‚ê§¬ª

[20:01] <samcv> m: use nqp; say nqp::eqatic('st', 'Ô¨Üassssssss', 0)

[20:01] <camelia> rakudo-moar 2bae61: OUTPUT: ¬´1‚ê§¬ª

[20:02] <samcv> m: use nqp; say nqp::eqatic('Ô¨Ü', 'Ô¨Üassssssss', 0)

[20:02] <camelia> rakudo-moar 2bae61: OUTPUT: ¬´1‚ê§¬ª

[20:02] <samcv> gonna add a few more eqatic tests to nqp

[20:02] <samcv> to cover this bug better

[20:15] <pmurias> (adding tests to nqp)++

[20:34] <samcv> ok added a few more tests, got some failures and further improved moar

[20:34] <samcv> after sitting down and drawing a ton of strings

[20:44] <samcv> running roast now

[20:51] <Geth> ¬¶ nqp: 6a482c6ac9 | (Samantha McVey)++ | tools/build/MOAR_REVISION

[20:51] <Geth> ¬¶ nqp: Bump MoarVM for indexic and equatic fixes

[20:51] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/6a482c6ac9

[20:51] <Geth> ¬¶ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.04-43-g43beb32...2017.04-44-gf0db8822

[20:51] <Geth> ¬¶ nqp: 87501f7b08 | (Samantha McVey)++ | 2 files

[20:51] <Geth> ¬¶ nqp: Untodo now passing equatic and indexic tests

[20:51] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/87501f7b08

[20:51] <Geth> ¬¶ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.04-43-g43beb32...2017.04-44-gf0db8822

[20:51] <samcv> we are a gooooo

[20:55] <robertle> gooey?

[20:56] <Geth> ¬¶ rakudo/nom: ce41e46602 | (Samantha McVey)++ | tools/build/NQP_REVISION

[20:56] <Geth> ¬¶ rakudo/nom: Bump MoarVM/NQP for case insensitive regex fixes

[20:56] <Geth> ¬¶ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ce41e46602

[20:56] <Geth> ¬¶ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.04-20-gf72fe4d...2017.04-24-g87501f7b

[20:56] <samcv> we are a GO

[20:58] <Geth> ¬¶ roast: 7c72cadfcf | (Samantha McVey)++ | S05-modifier/ignorecase.t

[20:58] <Geth> ¬¶ roast: Untodo now passing m:i tests

[20:58] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/7c72cadfcf

[21:01] <samcv> yay!

[21:01] <samcv> 100% pass for equatic indexic and the m:i regex tests as well

[22:13] <samcv> Zoffix, let me know when you're around

[22:13] <samcv> and we can discuss another point release

[22:21] <AlexDaniel> point release? 2017.04.3? \o/

[22:22] <samcv> idk.

[22:22] <samcv> yeah

[22:22] <samcv> anything

[22:23] <lizmat> I got the impression we're going to not do any more point releases and have a Rakudo Star on 2017.05 ?

[22:23] <samcv> hmm

[22:23] <samcv> idk the regex bug is bad

[22:23] <samcv> idk why were the only releases made

[22:23] <samcv> <samcv> m: say 'a' ~~ m:i/ab/

[22:23] <samcv> <camelia> rakudo-moar 2bae61: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§¬ª

[22:23] <samcv> ^

[22:23] <samcv> fixed now though

[22:24] <AlexDaniel> c: releases say 'a' ~~ m:i/ab/

[22:24] <committable6> AlexDaniel, ¬¶2015.12,2016.01.1,2016.02,2016.03,2016.04,2016.05,2016.06,2016.07.1,2016.08.1,2016.09,2016.10,2016.11,2016.12,2017.01,2017.02,HEAD(ce41e46): ¬´False¬ª ¬¶2017.03,2017.04.2: ¬´ÔΩ¢aÔΩ£¬ª

[22:24] <samcv> oh nice AlexDaniel

[22:25] <AlexDaniel> I'd say if it was there for more than two releases, it can wait for the next one

[22:25] <samcv> hm

[22:25] <samcv> what were the other point releases for?

[22:25] <AlexDaniel> not only we had the first *.2 release this time, you want it to be the first *.3 release also? :)

[22:26] <samcv> i think the bug is severe enough to make another point release. suprised it wasn't found but

[22:26] <samcv> it could cause... issues

[22:27] <AlexDaniel> yeah, yeah. Like any other bug actually

[22:33] <jnthn> At this rate we'll be doing point releases up until the next pointless release. :P

[22:35] <samcv> well. i mean not releasing a ponit release to fix a serious bug. seems not a good idea either

[22:35] <samcv> just because "we've had too many point releases"

[22:36] <timotimo> every body wants a poni releaset

[22:36] <AlexDaniel> bisect: o=2017.03 say 'a' ~~ m:i/ab/

[22:36] <bisectable6> AlexDaniel, On both starting points (old=2015.12 new=ce41e46) the exit code is 1 and the output is identical as well

[22:36] <bisectable6> AlexDaniel, https://gist.github.com/d362cb6c0d6bdecbabe09bdccb378c40

[22:36] <AlexDaniel> meh‚Ä¶

[22:37] <AlexDaniel> not even sure how to use this bug

[22:37] <samcv> how to use it?

[22:37] <AlexDaniel> samcv: yea, bisectable is using :i in this case

[22:37] <samcv> that code does trigger the bug

[22:37] <AlexDaniel> I was trying to trigger it with o=2017.03

[22:37] <AlexDaniel> (should be old=2017.03)

[22:37] <AlexDaniel> but apparently that's not it

[22:38] <samcv> oh it's new in 04 i think

[22:38] <samcv> bisect: o=2017.04 say 'a' ~~ m:i/ab/

[22:38] <bisectable6> samcv, On both starting points (old=2015.12 new=ce41e46) the exit code is 1 and the output is identical as well

[22:38] <bisectable6> samcv, https://gist.github.com/09c67862f09501b15f51068b57805734

[22:39] <jnthn> I guess the counter-argument is that we fix things you could describe as serious in every release.

[22:39] <AlexDaniel> samcv: no-no. Bisectable *itself* is running on a slightly older version

[22:39] <samcv> oh

[22:39] <samcv> jnthn, well i think regressions are different than just normal fixes

[22:39] <jnthn> I mean, most releases I've fixed some SEGV somewhere, even if by now they're getting harder and harder to hit upon

[22:39] <timotimo> jnthn: i could benefit from you trying to compile a moarvm on your msvc; i've done a lot to please appveyor, but i can't know if it's enough until a Real Windows is let loose upon it

[22:39] <samcv> point releases are useful for fixing regressions

[22:40] <AlexDaniel> samcv: sometimes I hunt for regressinos using whateverable. There were times I submitted over 20 reports I think

[22:40] <AlexDaniel> and some of them were serious enough

[22:40] <samcv> as serious as this?

[22:41] <MasterDuke_> what's the syntax for creating variable names with spaces in them? `my ::('a b') = 4` isn't it...

[22:41] <samcv> NeuralAnomaly, status

[22:41] <NeuralAnomaly> samcv, [‚úò] Next release will be in 3 weeks and 6 days. Since last release, there are 7 new still-open tickets (5 unreviewed and 0 blockers) and 43 unreviewed commits. See http://perl6.fail/release/stats for details

[22:41] <samcv> 3 weeks is too long...

[22:41] <samcv> that's basically a month

[22:41] <timotimo> are you sure a space is allowed with the special syntax?

[22:42] <timotimo> m: my ::('$a b') = 4

[22:42] <camelia> rakudo-moar ce41e4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed my‚ê§at <tmp>:1‚ê§------> 3my ::('$a b')7‚èè5 = 4‚ê§¬ª

[22:42] <timotimo> m: my ::('isthisit') = 4

[22:42] <camelia> rakudo-moar ce41e4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed my‚ê§at <tmp>:1‚ê§------> 3my ::('isthisit')7‚èè5 = 4‚ê§¬ª

[22:42] <AlexDaniel> c: 2016.04,HEAD say (-‚àû^..^‚àû).in-range: 0/0

[22:42] <committable6> AlexDaniel, ¬¶2016.04: ¬´True¬ª ¬¶HEAD(ce41e46): ¬´Value out of range. Is: <0/0>, should be in -Inf^..^Inf‚ê§  in block <unit> at /tmp/f0scnurpLz line 1‚ê§ ¬´exit code = 1¬ª¬ª

[22:42] <MasterDuke_> pretty sure i saw TimToady do it

[22:42] <timotimo> mhm

[22:44] <AlexDaniel> c: 2016.07~50,HEAD say ().rotor(1)

[22:44] <committable6> AlexDaniel, ¬¶2016.07~50: ¬´<anon|122856224>.new¬ª ¬¶HEAD(ce41e46): ¬´()¬ª

[22:44] <timotimo> whateverable helped fix a bunchton of json::fast stuff

[22:44] <AlexDaniel> samcv: I dunno, some of these things don't look very good at all

[22:44] <samcv> hm?

[22:45] <samcv> oh you saying bugs in releases?

[22:45] <samcv> were they regressions though?

[22:45] <AlexDaniel> samcv: (re ‚Äúas serious as this?‚Äù)

[22:45] <AlexDaniel> samcv: yes

[22:45] <samcv> i think more people use regeex than rotor though

[22:46] <samcv> that's why i think it's more serious becuase perl is known for regex...

[22:46] <AlexDaniel> but it is only with :i, and only relevant in some particular cases

[22:46] <samcv> well.

[22:46] <samcv> there's tons of cases it can happen.

[22:47] <samcv> aaaaabc ~~ m:i/cd/ # also will fail

[22:47] <samcv> if the first character and last character match

[22:47] <AlexDaniel> c: 2017.03,HEAD say ‚Äòaaaaabc‚Äô ~~ m:i/cd/

[22:47] <committable6> AlexDaniel, ¬¶2017.03,HEAD(ce41e46): ¬´False¬ª

[22:47] <samcv> first char of the needle and last of the haystack

[22:48] <samcv> c:  2017.04,HEAD say ‚Äòaaaaabc‚Äô ~~ m:i/cd/

[22:48] <committable6> samcv, ¬¶2017.04: ¬´ÔΩ¢cÔΩ£¬ª ¬¶HEAD(ce41e46): ¬´False¬ª

[22:48] <samcv> soooo

[22:48] <samcv> that's not that specific

[22:48] <samcv> i mean somewhat specific. but uh. still too common.

[22:50] <timotimo> we need to figure out fuzzing.

[22:50] <timotimo> at a perl6 level, that is

[22:51] <AlexDaniel> timotimo: well, I kinda have it figured out, in a way

[22:52] <AlexDaniel> timotimo: back in December/January I took all m: queries from the log and executed them on 2015.12, back then, HEAD

[22:53] <AlexDaniel> and this gave thousands of results that pointed out that everything has changed‚Ä¶

[22:53] <AlexDaniel> but that's how I found all these regressions

[22:53] <samcv> nice

[22:53] <timotimo> oooh

[22:54] <AlexDaniel> that's a lot of manual work, but I have some plans on optimizing it

[22:57] <AlexDaniel> (maybe you can follow https://github.com/perl6/whateverable/issues/123 for updates on this, but this month I don't have much time to work on stuff anyway)

[23:02] <AlexDaniel> Zoffix: by the way, is it possible we don't remove [REGRESSION] tag from the title of bug reports even if they are resolved?

[23:02] <AlexDaniel> I'm not sure I understand the reason behind this. All I know is that it makes it harder for me to navigate through my reports

[23:10] <timotimo> i wonder if we should try to fix the "but" + native parameter = invalid build_least_derived plan bug

[23:11] <timotimo> it's probably just that the executor from the buildplan needs to have parts copied over to the build_least_derived one, but i think they've been different before and i have no idea why or in what way
