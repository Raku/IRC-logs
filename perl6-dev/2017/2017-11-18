[00:30] <Geth> Â¦ nqp: 64b7bf0380 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[00:30] <Geth> Â¦ nqp: Bump MoarVM

[00:30] <Geth> Â¦ nqp: review: https://github.com/perl6/nqp/commit/64b7bf0380

[00:30] <Geth> Â¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.10-77-gb9a01f7...2017.10-82-ge876f148

[00:30] <Geth> Â¦ rakudo: 8efdd4c919 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[00:30] <Geth> Â¦ rakudo: Bump NQP

[00:30] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8efdd4c919

[01:12] <Geth> Â¦ roast: fc1261e588 | (Nick Logan)++ (committed using GitHub Web editor) | fudgeall

[01:12] <Geth> Â¦ roast: Fix globbing on windows

[01:12] <Geth> Â¦ roast: review: https://github.com/perl6/roast/commit/fc1261e588

[02:01] <AlexDaniel> alright, I have the changelog almost finished and toaster results should be ready relatively soon. But now, good night everyone o/

[03:11] <Geth> Â¦ rakudo: 2f0da94c35 | (Timo Paulssen)++ | src/core/Encoding.pm

[03:11] <Geth> Â¦ rakudo: default Encoding::alternative-names shall work

[03:11] <Geth> Â¦ rakudo:

[03:11] <Geth> Â¦ rakudo: with just () the registry tries to grab the $!reified

[03:11] <Geth> Â¦ rakudo: which ends up being an empty Scalar. In future versions

[03:11] <Geth> Â¦ rakudo: we'll want to make the register function bulletproof,

[03:11] <Geth> Â¦ rakudo: though I wouldn't expect lazy lists and such to appear

[03:11] <Geth> Â¦ rakudo: in regular user code.

[03:11] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2f0da94c35

[03:13] <Geth> Â¦ roast: cea5645cb5 | (Timo Paulssen)++ | S32-encoding/registry.t

[03:13] <Geth> Â¦ roast: test Encoding register without alternative-names

[03:13] <Geth> Â¦ roast: review: https://github.com/perl6/roast/commit/cea5645cb5

[03:14] <timotimo> AlexDaniel: perhaps the solution to this problem should instead use a less explosive way to iterate over the list returned by alternative-names, but this change also makes things work with far less code

[03:14] <timotimo> AlexDaniel: but feel free to revert it if you don't like this last-minute change in the release

[03:21] <timotimo> (this method is performance-critical for startup performance if i'm not mistaken)

[04:13] <ugexe> should nqp t/concurrency/01-thread.t and t/concurrency/02-lock.t be failing? thread.t seems like its been busted forever, but lock.t started segfaulting on test 7 in 2017.08 (before this it deadlocked at test 14)

[04:13] <ugexe> they are not included in the make test fwiw

[04:51] <ugexe> i think fudgeall might prove more useful if it uses newlines instead of spaces as the separator. it lets you do `perl fudgeall rakudo.moar > test-me.rakudo.moar; prove -v -e 'perl6 -Ilib' - < test-me.rakudo.moar`. passing the space separated string output to another command is limited in this aspect due to command length restrictions

[06:54] <Geth> Â¦ nqp: 058b2809c2 | (Nick Logan)++ | 2 files

[06:54] <Geth> Â¦ nqp: Fix windows detection in tests

[06:54] <Geth> Â¦ nqp:

[06:54] <Geth> Â¦ nqp: The size of the created file on windows has been 1 (like linux,

[06:54] <Geth> Â¦ nqp: osx, etc) for a few months.

[06:54] <Geth> Â¦ nqp: review: https://github.com/perl6/nqp/commit/058b2809c2

[08:49] <[Tux]> Rakudo version 2017.10-211-g2f0da94c3 - MoarVM version 2017.10-82-ge876f1484

[08:49] <[Tux]> csv-test-xs-20      0.421 -  0.463

[08:49] <[Tux]> csv-ip5xs           1.103 -  1.116

[08:49] <[Tux]> test-t --race       1.296 -  1.328

[08:49] <[Tux]> test-t              3.214 -  3.268

[08:49] <[Tux]> test               11.541 - 12.008

[08:49] <[Tux]> csv-parser         12.180 - 15.259

[08:49] <[Tux]> csv-ip5xs-20       12.733 - 12.770

[08:49] <[Tux]> test-t-20 --race   19.805 - 23.701

[08:49] <[Tux]> test-t-20          59.081 - 61.344

[11:04] * dogbert17 wonders if he's the only one getting two passing TODO's in t/spec/S32-str/utf8-c8.t

[11:04] * lizmat saw it as well

[11:20] <Geth> Â¦ roast: 9fa0c3ddff | (Elizabeth Mattijsen)++ | S32-str/utf8-c8.t

[11:20] <Geth> Â¦ roast: Unfudge now passig tests

[11:20] <Geth> Â¦ roast: review: https://github.com/perl6/roast/commit/9fa0c3ddff

[11:54] <Geth> Â¦ roast: 187c8b11e3 | usev6++ | 2 files

[11:54] <Geth> Â¦ roast: [jvm] Unfudge now passing regex tests

[11:54] <Geth> Â¦ roast:

[11:54] <Geth> Â¦ roast: Fixed with nqp commit 0bea6888c3

[11:54] <Geth> Â¦ roast: review: https://github.com/perl6/roast/commit/187c8b11e3

[12:08] <Geth> Â¦ roast: ae57169b24 | usev6++ | S05-metasyntax/regex.t

[12:08] <Geth> Â¦ roast: Add test with P6 regex for RT #125021

[12:08] <Geth> Â¦ roast: review: https://github.com/perl6/roast/commit/ae57169b24

[12:08] <synopsebot> RT#125021 [open]: https://rt.perl.org/Ticket/Display.html?id=125021 [JVM] Failing test in S05-modifier/perl5_5.t for regex with lazy quantifier on alternation

[13:53] <Geth> Â¦ rakudo: usev6++ created pull request #1253: Catch literals passed to rw param at compile time

[13:53] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1253

[13:53] <synopsebot> RAKUDO#1253 [open]: https://github.com/rakudo/rakudo/pull/1253 Catch literals passed to rw param at compile time

[14:21] <MasterDuke> a summary of a paper about creating a control flow graph to detect bugs with Promises. it's for JavaScript, but might be relevant for Perl 6. https://blog.acolyer.org/2017/11/10/a-model-for-reasoning-about-javascript-promises/

[14:29] <timotimo> it's a bit easier for the js promises to be statically analyzed, as only explicitly calling resolve and reject will do something to the promise, whereas a start block will resolve whatever is returned by the block and reject whenever an exception is thrown

[14:33] <timotimo> and promises that are explicitly created with Promise.new and a vow are even more difficult

[14:34] <MasterDuke> hm, sounds like thesis work for somebody

[16:16] <Geth> Â¦ rakudo: 8b47adad18 | (Elizabeth Mattijsen)++ | src/core/Buf.pm

[16:16] <Geth> Â¦ rakudo: Make Blob ~ Blob between 1.8x and 7x faster

[16:16] <Geth> Â¦ rakudo:

[16:16] <Geth> Â¦ rakudo: - based on two 10 elements Blob/Bufs

[16:16] <Geth> Â¦ rakudo: - if the types are the same, then 1.8x faster

[16:16] <Geth> Â¦ rakudo: - if types differ, more tha 7x faster

[16:16] <Geth> Â¦ rakudo:

[16:16] <Geth> Â¦ rakudo: Seems that a lot of time was spent in === and Buf.new.

[16:16] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8b47adad18

[16:17] <Geth> Â¦ rakudo: 149ed2429d | (Elizabeth Mattijsen)++ | docs/ChangeLog

[16:17] <Geth> Â¦ rakudo: Make sure we document the last commit

[16:17] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/149ed2429d

[16:19] * lizmat hopes that AlexDaniel didn't mind these last (one line) change, but it felt worthwhile...

[16:20] <AlexDaniel> well, I don't want to prevent anyone from attempting to make rakudo faster&better :) If something goes wrong I'll take care of it from my side

[16:21] <AlexDaniel> but when in doubt, this can be done in a branch and then merged right after the release

[16:33] <lizmat> yeah, it's purely a performance thing.... spectest clean

[16:33] * lizmat runs a stresstest to be on the safe side

[16:44] <lizmat> AlexDaniel: also stresstest clean for me

[17:55] <AlexDaniel> yay, toaster results are in! After some segfaults of toaster itself and some other issuesâ€¦

[18:03] <AlexDaniel> Geth: ver https://github.com/rakudo/rakudo/commit/dbf0a21f9007261be5f964c5013e0b6e2a0faa4c

[18:03] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/perl6/nqp/compare/2017.10-10-g626ea0206...2017.10-32-ga3f7bb8

[18:05] <AlexDaniel> oops! :)

[18:05] <AlexDaniel> c: 2017.10,HEAD say â€˜Aâ€™.uniprop

[18:05] <committable6> AlexDaniel, Â¦2017.10: Â«LuÂ» Â¦HEAD(149ed24): Â«CnÂ»

[18:08] <AlexDaniel> buggable: tags

[18:08] <buggable> AlexDaniel, Total: 1617; 6.D: 2; 9999: 9; @LARRY: 28; BOGUSTEST: 1; BOOTSTRAP: 4; BUG: 584; BUILD: 11; CONC: 38; DOCS: 1; EXOTICTEST: 4; FLAP: 1; GLR: 3; IO: 19; JVM: 48; LHF: 7; LTA: 177; MATH: 6; META: 2; MOAR: 2; MOLD: 225; NATIVECALL: 21; NYI: 60; OO: 13; OPTIMIZER: 9; OSX: 2; PARSER: 5; PERF: 26; PERFTEST: 1; POD: 22; PRECOMP: 15; REGEX: 49;

[18:08] <buggable> AlexDaniel, REGRESSION: 34; REPL: 6; RFC: 61; RT: 2; SECURITY: 2; SEGV: 28; SEVERE: 10; SINK: 1; SITE: 1; SPESH: 1; STAR: 7; TESTCOMMITTED: 13; TESTNEEDED: 42; TODO: 11; UNI: 27; UNTAGGED: 281; WEIRD: 2; WINDOWS: 4; See http://fail.rakudo.party/ for details

[18:45] <AlexDaniel> alright, everything else looks clean. See GH#1254 for the only blocker

[18:45] <synopsebot> GH#1254 [open]: https://github.com/rakudo/rakudo/issues/1254 [regression][UNI][âš  blocker âš ] Incorrect General_Category property for ascii-range uppercase letters (say â€˜Aâ€™.uniprop)

[20:43] <jnthn> Geth: owner

[20:43] <jnthn> Geth: help

[20:43] <Geth> jnthn, Source at https://github.com/perl6/geth To add repo, add an 'application/json' webhook on GitHub pointing it to http://geth.niner.name:8888/?chan=#perl6 and choose 'Send me everything' for events to send | use `ver URL to commit` to fetch version bump changes

[20:48] <jnthn> I'm guessing there's an extra step to make Geth go to a new channel?

[20:49] <jnthn> Ho, it's even just "We couldnâ€™t deliver this payload: Couldn't connect to server"

[20:53] <Geth> Â¦ geth: 9248963987 | (Jonathan Worthington)++ (committed using GitHub Web editor) | bin/geth.p6

[20:53] <Geth> Â¦ geth: Update URL in help message

[20:53] <Geth> Â¦ geth: review: https://github.com/perl6/geth/commit/9248963987

[20:55] <Geth> Â¦ geth/add-cro: f15f41008e | (Jonathan Worthington)++ (committed using GitHub Web editor) | config.json

[20:55] <Geth> Â¦ geth/add-cro: Have Geth in #cro also

[20:55] <Geth> Â¦ geth/add-cro:

[20:55] <Geth> Â¦ geth/add-cro: I'm filing this as a PR since this would seem to be the first non-Perl 6 core use of Geth, and I'd like to make sure those running it are happy enough with me adding this.

[20:55] <Geth> Â¦ geth/add-cro: review: https://github.com/perl6/geth/commit/f15f41008e

[20:55] <Geth> Â¦ geth: jnthn++ created pull request #10: Have Geth in #cro also

[20:55] <Geth> Â¦ geth: review: https://github.com/perl6/geth/pull/10

[20:56] * lizmat has the power to merge, and would, but is not running Geth...

[20:57] <jnthn> I have the power to commit directly there too

[20:57] <jnthn> I did just a moment ago to fix the help message to have the correct url

[20:58] <jnthn> Just want to make sure those who do run Geth don't consider using it for other Perl 6 projects alright

[20:58] <jnthn> uh, do consider :)

[21:05] <lizmat> AlexDaniel: RT #132352, RT #132353 have tests and can be closed, afaik

[21:05] <synopsebot> RT#132352 [open]: https://rt.perl.org/Ticket/Display.html?id=132352 Set operators unfriendly to mutable types

[21:05] <synopsebot> RT#132353 [open]: https://rt.perl.org/Ticket/Display.html?id=132353 [LTA] error with using meta assign ops with bound SetHash

[21:05] <AlexDaniel> lizmat: any specific commit?

[21:06] <lizmat> 1949a2bc13085f05c2 ?

[21:11] <lizmat> https://github.com/rakudo/rakudo/commit/1949a2bc13085f05c2   AlexDaniel

[21:11] <AlexDaniel> I mean, where are the tests?

[21:14] <AlexDaniel> (so that we can close the ticket with a link)

[21:15] <lizmat> t/spec/S02-types/(set|sethash|bag|baghash|mix|mixhash).t

[21:26] <Geth> Â¦ rakudo: 14a90e044a | (Aleks-Daniel Jakimenko-Aleksejev)++ | docs/ChangeLog

[21:26] <Geth> Â¦ rakudo: Log all changes

[21:26] <Geth> Â¦ rakudo:

[21:26] <Geth> Â¦ rakudo: Feel free to reword anything.

[21:26] <Geth> Â¦ rakudo:

[21:26] <Geth> Â¦ rakudo: Deliberately not logged:

[21:26] <Geth> Â¦ rakudo: 738908be 1c387153 100198a3 eebbcca1 8c5bc57e dbce04e6 e4bb219d

[21:26] <Geth> Â¦ rakudo: b07e7b1d 264eef79 2cadb2bc 32412170 33d476d1 ea3ffa2e e3f6abab

[21:26] <Geth> Â¦ rakudo: <â€¦commit message has 6 more linesâ€¦>

[21:26] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/14a90e044a

[21:35] <lizmat> AlexDaniel: ChangeLog looks good to me

[21:35] <AlexDaniel> releasable6: status

[21:35] <releasable6> AlexDaniel, Next release will happen when it's ready. No blockers. 213 out of 214 commits logged

[21:35] <releasable6> AlexDaniel, Details: https://gist.github.com/d2f0bb236e10bfa78a2f8dac42a58cd2

[21:35] <AlexDaniel> lies! :)

[21:36] <AlexDaniel> ( this is why it does not say anything about blockers on github: https://github.com/zoffixznet/r6/issues/11 )

[22:07] <Geth> Â¦ nqp: c6c8b3f873 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[22:07] <Geth> Â¦ nqp: Bump MoarVM

[22:07] <Geth> Â¦ nqp: review: https://github.com/perl6/nqp/commit/c6c8b3f873

[22:07] <Geth> Â¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.10-82-ge876f148...2017.10-86-g89fae17a

[22:07] <Geth> Â¦ rakudo: 85105077a7 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[22:07] <Geth> Â¦ rakudo: Bump NQP

[22:07] <Geth> Â¦ rakudo: review: https://github.com/rakudo/rakudo/commit/85105077a7

[23:07] <AlexDaniel> Please notify me if you notice any issues. Right now everything looks good

[23:52] <Geth> Â¦ geth: f15f41008e | (Jonathan Worthington)++ (committed using GitHub Web editor) | config.json

[23:52] <Geth> Â¦ geth: Have Geth in #cro also

[23:52] <Geth> Â¦ geth:

[23:52] <Geth> Â¦ geth: I'm filing this as a PR since this would seem to be the first non-Perl 6 core use of Geth, and I'd like to make sure those running it are happy enough with me adding this.

[23:52] <Geth> Â¦ geth: review: https://github.com/perl6/geth/commit/f15f41008e

[23:53] <Geth> Â¦ geth: 6ae63a4dd4 | (Zoffix Znet)++ (committed using GitHub Web editor) | config.json

[23:53] <Geth> Â¦ geth: Merge pull request #10 from perl6/add-cro

[23:53] <Geth> Â¦ geth:

[23:53] <Geth> Â¦ geth: Have Geth in #cro also

[23:53] <Geth> Â¦ geth: review: https://github.com/perl6/geth/commit/6ae63a4dd4

[23:55] <jnthn> Zoffix++ # yay :)
