[00:07] <ugexe> i say you make a SO post about it asking why its not documented

[00:07] <Zoffix> ?

[00:07] <Zoffix> The policy?

[00:08] <ugexe> the code that can demonstrate the security issue

[00:08] * Zoffix is confused

[00:08] <ugexe> it was a snark

[00:09] <Zoffix> .tell MasterDuke something about '-'.IO.slurp.... No idea. Don't have time ATM to look. File a ticket, I'd think

[00:09] <yoleaux> Zoffix: I'll pass your message to MasterDuke.

[00:09] <ugexe> and not towards you

[00:20] <Zoffix> Well, I took some sleeping pills a bit ago 'cause I was planning on calling it a day. Not in condition to fix this bug. Gonna take a stab at it tomorrow morning.

[00:21] <Zoffix> And I guess lacking a security policy, I'll just file a `[SECURITY]` tagged ticket once I have a working fix and lizmat++ can mention it in the weekly.

[00:22] <Zoffix> but we really should setup a proper channel to report these issues and have some proceedures in place or something (/me never dealt with these kinds of problems before)

[00:24] * Zoffix spots a pattern in buggy behaviour

[00:24] <Zoffix> and if it's true, then the bug is much less severe

[00:24] * Zoffix &

[01:10] <samcv> gotta write up my grant progress report tonight

[01:34] <Zoffix> k, found the "bug" lol

[01:35] <Zoffix> .mkdir: $chmod sets chmod with $chmod modified by umask

[01:35] <Zoffix> But didn't know that, so I assumed .mkdir: $chmod was setting a busted mode on dirs :)

[01:37] <Zoffix> I guess this is really just a doc fix :)

[01:38] <Zoffix> ZofBot: that de-escalated quickly!

[01:38] <ZofBot> Zoffix, } The "is native" trait is the main gateway used to access C libraries

[01:38] * Zoffix returns to vacationing :D

[02:40] <Geth> ¦ rakudo/nom: 90d129de8e | (Zoffix Znet)++ | src/core/IO/Handle.pm

[02:40] <Geth> ¦ rakudo/nom: Fix IO::Handle.open for '-' paths

[02:40] <Geth> ¦ rakudo/nom:

[02:40] <Geth> ¦ rakudo/nom: Fixes RT#131503: https://rt.perl.org/Ticket/Display.html?id=131503

[02:40] <Geth> ¦ rakudo/nom:

[02:40] <Geth> ¦ rakudo/nom: The observed bug is due to .open failing to set requested encoding.

[02:40] <Geth> ¦ rakudo/nom: We don't actually .open a handle in the case when '-' is a path, so

[02:40] <Geth> ¦ rakudo/nom: fix by calling .encoding to set the wanted encoding on the handle.

[02:40] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/90d129de8e

[02:42] <Geth> ¦ roast: 60a7a88e47 | (Zoffix Znet)++ | 2 files

[02:42] <Geth> ¦ roast: Test IO::Handle.open with '-' paths sets encoding

[02:42] <Geth> ¦ roast:

[02:42] <Geth> ¦ roast: RT#131503: https://rt.perl.org/Ticket/Display.html?id=131503

[02:42] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/90d129de8e7ae62

[02:42] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/60a7a88e47

[03:46] <Geth> ¦ rakudo/nom: 7344a3d273 | (Zoffix Znet)++ | src/core/IO/Special.pm

[03:46] <Geth> ¦ rakudo/nom: Fix IO::Special.perl

[03:46] <Geth> ¦ rakudo/nom:

[03:46] <Geth> ¦ rakudo/nom: We don't use Mu's .new, so its .perl is no good

[03:46] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7344a3d273

[03:46] <Geth> ¦ roast: 99c37a96c8 | (Zoffix Znet)++ | S32-io/io-special.t

[03:46] <Geth> ¦ roast: Test IO::Special.perl

[03:46] <Geth> ¦ roast:

[03:46] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/7344a3d27302c345

[03:46] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/99c37a96c8

[03:48] <Geth> ¦ rakudo/nom: 3755c0e7c4 | (Zoffix Znet)++ | src/core/IO/Handle.pm

[03:48] <Geth> ¦ rakudo/nom: Generalize logic for IO::Handle.open with path '-'.IO

[03:48] <Geth> ¦ rakudo/nom:

[03:48] <Geth> ¦ rakudo/nom: - Do not assume $*IN/$*OUT will contain opened handles,

[03:48] <Geth> ¦ rakudo/nom:     open them if closed

[03:48] <Geth> ¦ rakudo/nom: - If $*IN/$*OUT are set to unopened handle that already has '-'.IO

[03:48] <Geth> ¦ rakudo/nom:     as path, then we don't wanna infinilop, so we create a SPESHUL IO

[03:48] <Geth> ¦ rakudo/nom:     handle that uses STDIN/STDOUT and return that.

[03:48] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3755c0e7c4

[03:49] <Geth> ¦ roast: 7e4138ea79 | (Zoffix Znet)++ | S32-io/open.t

[03:49] <Geth> ¦ roast: Test IO::Handle.open on '-'.IO path handles…

[03:49] <Geth> ¦ roast:

[03:49] <Geth> ¦ roast: …works on any type of handle being in $*IN/$*OUT

[03:49] <Geth> ¦ roast:

[03:49] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/3755c0e7c44b770e

[03:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7e4138ea79

[07:29] <[Tux]> This is Rakudo version 2017.05-352-g3755c0e7c built on MoarVM version 2017.05-25-g62bc54e9

[07:29] <[Tux]> csv-ip5xs        3.091

[07:29] <[Tux]> test            13.727

[07:29] <[Tux]> test-t           4.651 - 4.673

[07:29] <[Tux]> csv-parser      13.994

[09:57] <Alexdaniel> Zoffix: oh, thanks for opening that ticket

[09:57] <Alexdaniel> there was something else I forgot to file… let's see…

[10:04] <Alexdaniel> a-ha, there it is

[10:04] <Alexdaniel> RT #131507

[13:19] <timotimo> moritz: my browser scrolls sideways on perl6book.com because the diagram is so huge

[13:20] <moritz> timotimo: I'm replacing the complete frontpage (but I'm slow to write proper CSS :/ )

[13:20] <moritz> timotimo: the new version will contain only a half-sized image inline

[13:22] <Geth> ¦ roast: 4d254198d5 | (Zoffix Znet)++ (committed using GitHub Web editor) | S32-io/open.t

[13:22] <Geth> ¦ roast: Fix typo in description

[13:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/4d254198d5

[13:27] <timotimo> that's probably fair

[13:28] <timotimo> i bet there are more distinct-looking butterflies than there are camels

[13:30] <moritz> https://perl6book.com/new/ new version of the site, no CSS yet

[13:33] <Geth> ¦ roast: 65a0dc5db3 | (Zoffix Znet)++ | S02-names-vars/variables-and-packages.t

[13:33] <Geth> ¦ roast: Remove fudge for bogus tests

[13:33] <Geth> ¦ roast:

[13:33] <Geth> ¦ roast: Closes RT#122356: https://rt.perl.org/Ticket/Display.html?id=122346

[13:33] <Geth> ¦ roast:

[13:33] <Geth> ¦ roast: The behaviour of autovivifying a variable when post incrementing

[13:33] <Geth> ¦ roast: is infinitely more desirable than returning a type object on the

[13:33] <Geth> ¦ roast: first incrementation.

[13:33] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/65a0dc5db3

[13:50] <mr_ron> moritz:  https://perl6book.com/ (index page) s!<h1 class="splash-head">Perl 6 Fundamenatls</h1>!<h1 class="splash-head">Perl 6 Fundamentals</h1>!

[13:58] <moritz> mr_ron: thanks

[14:28] <Geth> ¦ nqp/master: 16 commits pushed by pmurias++

[14:28] <Geth> ¦ nqp/master: review: https://github.com/perl6/nqp/compare/c4af44b05b...0ea634c2c3

[15:17] <nine> Is clone() meant to be overrideable?

[15:35] <dogbert17> commit: 2015.06 say ~$<string><part> if 'abc-abc-abc' ~~ / $<string>=( [ $<part>=[abc] ]* % '-' ) /

[15:35] <committable6> dogbert17, ¦2015.06: «abc abc abc»

[15:36] <dogbert17> commit: 2014.06 say ~$<string><part> if 'abc-abc-abc' ~~ / $<string>=( [ $<part>=[abc] ]* % '-' ) /

[15:36] <committable6> dogbert17, ¦2014.06: «abc abc abc»

[16:22] <dogbert17> m: my $rx2 = m:i/a/

[16:22] <camelia> rakudo-moar 3755c0: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤»

[16:23] <dogbert17> commit: 2015.11 my $rx2 = m:i/a/

[16:23] <committable6> dogbert17, ¦2015.11: «Method 'match' not found for invocant of class 'Any'␤  in block <unit> at /tmp/66Qv1DBCfi:1␤ «exit code = 1»»

[17:32] <Geth> ¦ rakudo/nom: 36bc410222 | (Zoffix Znet)++ | src/core/Promise.pm

[17:32] <Geth> ¦ rakudo/nom: Fix lost dynamics in Promise.then

[17:32] <Geth> ¦ rakudo/nom:

[17:32] <Geth> ¦ rakudo/nom: When we cue up a .then we forget to set the $*PROMISE dynvar, so

[17:32] <Geth> ¦ rakudo/nom: lookups of dynamics inside the .then code can't find 'em.

[17:32] <Geth> ¦ rakudo/nom:

[17:32] <Geth> ¦ rakudo/nom: Fixes RT#131509: https://rt.perl.org/Ticket/Display.html?id=131509

[17:32] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/36bc410222

[17:33] <Geth> ¦ roast: e5d144ee09 | (Zoffix Znet)++ | S17-promise/then.t

[17:33] <Geth> ¦ roast: Test dynamic vars work in Promise.then

[17:33] <Geth> ¦ roast:

[17:33] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/36bc4102225a324

[17:33] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e5d144ee09

[20:22] <ggoebel> pmurias: saw the recent commits regarding building js backend... what is the full set of steps now to build it from a fresh git clone https://github.com/rakudo/rakudo.git?

[20:38] <ggoebel> .tell pmurias saw the recent commits regarding building js backend... what is the full set of steps now to build it from a fresh git clone https://github.com/rakudo/rakudo.git?

[20:38] <yoleaux> ggoebel: I'll pass your message to pmurias.

[21:10] <Zoffix> hm, I thought Perl 5's $. got reset when next file was being read, say with `-n` switch, but it doesn't

[21:10] <Zoffix> I guess there'

[21:10] <Zoffix> I guess there's no point in making NL module then

[21:26] <geekosaur> there is because that one's in perlfaq

[21:26] <geekosaur> (how to get $. reset behavior, that is)

[21:59] <Zoffix> BenGoldberg: I gave you access to most of perl6 repos. You can accept the invite at https://github.com/perl6

[21:59] <Zoffix> You know... if you want to fix typos :}

[22:00] <BenGoldberg> Zoffix++

[22:00] <BenGoldberg> Now all I have to do is figure out this git thing ;)

[22:01] <AlexDaniel> BenGoldberg: actually, small things you can do directly on github

[22:02] <AlexDaniel> just click edit, edit it, and save ????
