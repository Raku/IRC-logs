[00:03] <timotimo> gnite jnthn

[00:03] <timotimo> i'm also going to bed soon

[00:09] <AlexDaniel> Geth: ver https://github.com/rakudo/rakudo/commit/23b3d29da6ffd8e016ea6da6c34858b95339af34

[00:09] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/perl6/nqp/compare/2015.07.2-29-ga9a4c0b...2015.07.2-35-g02910ff

[00:10] <AlexDaniel> Geth: ver https://github.com/perl6/nqp/commit/02910ff48ec760daf2eda2e5f6c89075056265ca

[00:10] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/MoarVM/MoarVM/compare/2015.07-59-g64fba68...2015.07-68-g3240047

[00:32] <AlexDaniel> buggable: tags

[00:32] <buggable> AlexDaniel, Total: 1647; 6.D: 2; 9999: 10; @LARRY: 24; ANNOYING: 7; BOOTSTRAP: 5; BUG: 601; BUILD: 12; CONC: 48; DOCS: 1; EXOTICTEST: 1; GLR: 3; IO: 23; JVM: 53; LHF: 2; LTA: 177; MATH: 4; META: 1; MOAR: 1; NATIVECALL: 22; NYI: 55; OO: 13; OPTIMIZER: 8; OSX: 2; PARSER: 5; PERF: 28; POD: 19; PRECOMP: 15; REGEX: 48; REGRESSION: 37; REPL: 6; RFC:

[00:32] <buggable> AlexDaniel, 63; RT: 1; SECURITY: 1; SEGV: 25; SINK: 1; SITE: 1; SPESH: 1; STAR: 7; TESTCOMMITTED: 10; TESTNEEDED: 50; TODO: 13; UNI: 26; UNTAGGED: 416; WEIRD: 2; WINDOWS: 3; See http://fail.rakudo.party/ for details

[00:33] <AlexDaniel> buggable: tags DOCS

[00:33] <buggable> AlexDaniel, There is 1 ticket tagged with DOCS; See http://fail.rakudo.party/t/DOCS for details

[00:43] <AlexDaniel> maybe we should start assigning runnable snippets to tickets

[02:05] <AlexDaniel> j: my int $namcu; $namcu = 2**100

[02:05] <camelia> rakudo-jvm fcbd8a: OUTPUT: «Error while reading '/home/camelia/p6eval-token': No such file or directory at /home/camelia/rakudo-j-inst/bin/eval-client.pl line 10.␤»

[02:05] <AlexDaniel> aww…

[02:13] <AlexDaniel> ppppppppffffttt I'd much rather close a ticket next time than cause this horrible mess by merging it

[02:14] <AlexDaniel> RT should not attempt to keep everything in chronological order

[02:16] <AlexDaniel> or maybe I should simply use “Refers to” “Referred to by”

[02:16] <AlexDaniel> yea, that works better

[04:20] <AlexDaniel> Ha. This is one of the funniest tickets: RT #130092

[04:20] <synopsebot> RT#130092 [new]: https://rt.perl.org/Ticket/Display.html?id=130092 [LTA] error message when misspelling “method” (meathod bar($test))

[04:30] <AlexDaniel> buggable: tag TESTNEEDED

[04:30] <buggable> AlexDaniel, There are 54 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[04:40] <AlexDaniel> 1.6k don't look so scary when you realize that a lot of them are already resolved and just need tests

[04:42] <AlexDaniel> buggable: tag MACRO

[04:42] <buggable> AlexDaniel, There are no tickets tagged with MACRO

[04:52] <AlexDaniel> m: say “\0” ~~ /<[\0]>/

[04:52] <camelia> rakudo-moar fcbd8a: OUTPUT: «｢␀｣␤»

[04:52] <AlexDaniel> … did it just print a null byte?

[04:52] <gfldex> yes

[04:56] <AlexDaniel> RT #132205

[04:56] <synopsebot> RT#132205 [new]: https://rt.perl.org/Ticket/Display.html?id=132205 .gist of a Match should not print null bytes, and maybe other control chars too (say “\0” ~~ /<[\0]>/)

[07:06] <[Tux]> This is Rakudo version 2017.09-193-gfcbd8adbe built on MoarVM version 2017.09.1-62-g89ca8eb0

[07:06] <[Tux]> csv-ip5xs        1.201 -  1.217

[07:06] <[Tux]> test            10.654 - 10.777

[07:06] <[Tux]> test-t           3.278 -  3.579

[07:06] <[Tux]> csv-parser      12.948 - 13.217

[07:19] <lizmat> Files=1226, Tests=75553, 331 wallclock secs (15.07 usr  5.35 sys + 2279.67 cusr 226.19 csys = 2526.28 CPU)

[08:21] <Geth> ¦ roast: e5747f0484 | (Elizabeth Mattijsen)++ | S12-introspection/methods.t

[08:21] <Geth> ¦ roast: Make tests less sensitive to autogenerated BUILDALL

[08:21] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e5747f0484

[08:26] <Geth> ¦ roast/6.c-errata: f50d6e43ef | (Elizabeth Mattijsen)++ | S12-introspection/methods.t

[08:26] <Geth> ¦ roast/6.c-errata: Make tests less sensitive to autogenerated BUILDALL

[08:26] <Geth> ¦ roast/6.c-errata: review: https://github.com/perl6/roast/commit/f50d6e43ef

[08:28] <Geth> ¦ roast: 603026d44a | (Elizabeth Mattijsen)++ | S12-introspection/methods.t

[08:28] <Geth> ¦ roast: Make tests less sensitive to autogenerated BUILDALL

[08:28] <Geth> ¦ roast:

[08:28] <Geth> ¦ roast: Oops, missed a few.

[08:28] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/603026d44a

[08:31] <Geth> ¦ rakudo/nom: 21788c8909 | (Elizabeth Mattijsen)++ | src/Perl6/World.nqp

[08:31] <Geth> ¦ rakudo/nom: Make all classes with empty BUILDALLPLAN share BUILDALL

[08:31] <Geth> ¦ rakudo/nom:

[08:31] <Geth> ¦ rakudo/nom: - so they don't need to go to Mu.BUILDALL and run the plan

[08:31] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/21788c8909

[08:48] <lizmat> afk for a few hours&

[09:30] <jnthn> morning, #perl6-dev o/

[09:30] <Zoffix> \o

[09:36] * jnthn decides not to get distracted by the SEGV this time

[09:43] * dogbert17 wonders what jnthn is up to

[09:47] <jnthn> Debugging the cro Travis failure I meant to yesterday, before I was blocked by the Rakudo bug I ended up fixing :)

[10:31] <Geth> ¦ rakudo/nom: e2f8a57dcc | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/BUILDPLAN.nqp

[10:31] <Geth> ¦ rakudo/nom: Make sure all empty BUILDPLANs are shared

[10:31] <Geth> ¦ rakudo/nom:

[10:31] <Geth> ¦ rakudo/nom: - this should save a bit of memory for each class created

[10:31] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e2f8a57dcc

[11:05] <lizmat> m: dd Date.^methods(:local).grep(*.name eq q/BUILDALL/)[0].signature  # jnthn: the invocant type is not what I expected

[11:05] <camelia> rakudo-moar e2f8a5: OUTPUT: «:(Rakudo::Internals::SupplySequencer:D $: ;; %init, *%_)␤»

[11:05] <lizmat> yet all works fine

[11:06] <lizmat> fwiw, I think Rakudo::Internals::SupplySequencer is the *first* class that has a BUILDALL generated

[11:09] <Geth> ¦ rakudo/nom: b58bd8fb1e | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/BUILDPLAN.nqp

[11:09] <Geth> ¦ rakudo/nom: Additional BUILDPLAN sharing

[11:09] <Geth> ¦ rakudo/nom:

[11:09] <Geth> ¦ rakudo/nom: - if a class has an empty BUILDPLAN, it will not add to the BUILDALLPLAN

[11:09] <Geth> ¦ rakudo/nom: - therefore its BUILDALLPLAN is the same as its first parent in MRO

[11:09] <Geth> ¦ rakudo/nom:

[11:09] <Geth> ¦ rakudo/nom: This should save memory for all mixins that don't add any attributes.

[11:09] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b58bd8fb1e

[11:11] <timotimo> bisectable6: my &s = 1 < *.elems < 3

[11:11] <jnthn> lizmat: An empty one, or?

[11:11] <bisectable6> timotimo, Bisecting by output (old=2015.12 new=e2f8a57) because on both starting points the exit code is 1

[11:11] <bisectable6> timotimo, bisect log: https://gist.github.com/6b4cbeb27129c2825d62d6dd43c23494

[11:11] <bisectable6> timotimo, (2015-12-25) https://github.com/rakudo/rakudo/commit/07fecb52eb1fd07397659f19a5cf36dc61f84053

[11:11] <bisectable6> timotimo, The result looks a bit unrealistic, doesn't it? Most probably the output is different on every commit (e.g. ｢bisect: say rand｣)

[11:11] <lizmat> jnthn: no, *not* empty

[11:12] <jnthn> oh...so why does it get the type wrong in the signature?!

[11:12] <lizmat> hmmm

[11:12] <timotimo> ah good old times where our cuids were long

[11:12] <lizmat> jnthn: re-investigating

[11:15] <lizmat> jnthn: seems to only go wrong for builtins from the setting

[11:16] <lizmat> if I precomp a module with an empty class, the BUILDALL sig is Any:D:, and if it's not empty, it's class:D:

[11:17] <timotimo> jnthn: how does limiting to 32k sound?

[11:17] <jnthn> timotimo: context?

[11:17] <tadzik> . o O ( a 32kbps mp3 can't sound too good... )

[11:17] <yoleaux> 27 Sep 2017 20:45Z <[Coke]> tadzik: if p6prove is busted with "replace this Array is copy logic"

[11:17] <timotimo> oh, this was for moarvm

[11:44] <Geth> ¦ rakudo/nom: 0dd6af716d | (Elizabeth Mattijsen)++ | src/Perl6/World.nqp

[11:44] <Geth> ¦ rakudo/nom: Set up auto-generated signature correctly

[11:44] <Geth> ¦ rakudo/nom:

[11:44] <Geth> ¦ rakudo/nom: - the first array parameter was set up correctly in declarations

[11:44] <Geth> ¦ rakudo/nom: - but not in the signature, so introspection showed you the wrong thing

[11:44] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0dd6af716d

[11:45] <AlexDaniel> squashable6: status

[11:45] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 2 days and ≈22 hours (2017-10-07 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:06] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Make sure all empty BUILDPLANs are shared

[12:06] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/282668356 https://github.com/rakudo/rakudo/compare/21788c890940...e2f8a57dcc04

[12:49] <AlexDaniel> buggable: tag TESTNEEDED

[12:49] <yoleaux> 12:09Z <Zoffix> AlexDaniel: looks like squashathon PRs won't count towards Hacktoberfest for many people: https://irclog.perlgeek.de/perl6/2017-10-03#i_15250088

[12:49] <buggable> AlexDaniel, There are 54 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[12:49] <AlexDaniel> awwwwww…

[12:53] <Geth> ¦ rakudo/nom: f946bd35dc | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/ClassHOW.nqp

[12:53] <Geth> ¦ rakudo/nom: Don't bother with BUILDALL if BUILDPLAN is empty

[12:53] <Geth> ¦ rakudo/nom:

[12:53] <Geth> ¦ rakudo/nom: - because the next class with a BUILDALL in ^mro will do the right thing

[12:53] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f946bd35dc

[12:56] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Additional BUILDPLAN sharing

[12:56] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/282680557 https://github.com/rakudo/rakudo/compare/e2f8a57dcc04...b58bd8fb1e2e

[13:41] <jnthn> Apparently I'm better at building stuff that keeps running than I am at updating websites. The Cro web app behind its website ran for 24 days without a restart. :)

[13:42] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Set up auto-generated signature correctly

[13:42] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/282692144 https://github.com/rakudo/rakudo/compare/b58bd8fb1e2e...0dd6af716d7e

[13:42] <jnthn> Now it's running 2017.09, so we'll see how that fares :)

[13:44] <travis-ci> Rakudo build canceled. Elizabeth Mattijsen 'Should check both (sub)method tables for BUILDALL

[13:44] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/282223826 https://github.com/rakudo/rakudo/compare/d76af6aa4560...e513b857c015

[13:44] <buggable> [travis build above] ✓ All failures are due to: missing build log (1 failure).

[15:12] <AlexDaniel> Zoffix: review and ideas plz https://github.com/rakudo/rakudo/wiki/Rakudo-SQUASHathon-Guide

[15:16] <Zoffix> AlexDaniel: can regular people even comment on RT tickets they didn't create?

[15:16] <AlexDaniel> aaaaaaaaaaahhhhhhhhhhhhh that has to be covered

[15:16] <AlexDaniel> yes, IIRC you just write an email and include [perl #132210] in the subject

[15:17] <synopsebot> RT#132210 [new]: https://rt.perl.org/Ticket/Display.html?id=132210 Can't use `!` or `is required` with named Callable param constrainted by signature

[15:17] <AlexDaniel> the comment will appear in a few minutes

[15:17] <AlexDaniel> or maybe it will be lost, this happens sometimes too

[15:17] * AlexDaniel facepalms on the harsh reality that we have imposed on us by RT

[15:21] <Zoffix> Also, maybe 1st paragraph should say something about that people can just come to #perl6 and talk to other humans. ATM that page looks pretty intimidating

[15:21] <AlexDaniel> Zoffix: I agree

[15:21] <Zoffix> buggable: tag lhf

[15:21] <buggable> Zoffix, There are 3 tickets tagged with LHF; See http://fail.rakudo.party/t/LHF for details

[15:22] * AlexDaniel wonder why he added ｢LHF｣ tag to RT #126669

[15:22] <synopsebot> RT#126669 [new]: https://rt.perl.org/Ticket/Display.html?id=126669 [LHF][LTA] error with "need 6"/"use 6" (no "v")

[15:23] <Zoffix> well, it is pretty easy to fix :)

[15:24] <Zoffix> Though the fix would block people from declaring `need`/`use` routines that take numbers, I guess

[15:24] <Zoffix> m: sub need (\v) { dd v }; need Int

[15:24] <camelia> rakudo-moar f946bd: OUTPUT: «===SORRY!===␤Int is a builtin type, not an external module␤»

[15:24] <Zoffix> I guess it's already blocked :D

[15:24] <AlexDaniel> /o\

[15:24] <AlexDaniel> m: sub need (\v) { dd v }; &need Int

[15:24] <camelia> rakudo-moar f946bd: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3sub need (\v) { dd v }; &need7⏏5 Int␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier␤…»

[15:24] <AlexDaniel> m: sub need (\v) { dd v }; need(Int)

[15:24] <camelia> rakudo-moar f946bd: OUTPUT: «Int␤»

[15:25] <Zoffix> m: sub need (\v) { dd v }; need 42

[15:25] <camelia> rakudo-moar f946bd: OUTPUT: «42␤»

[15:25] <Zoffix> this would get blocked

[15:25] <AlexDaniel> right

[15:26] <Zoffix> Basically, I imagine the fix would just be shoving a case that matches <[\d.]>+ here: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Grammar.nqp#L1605 and complain about it

[15:26] <Zoffix> And here https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Grammar.nqp#L1547

[15:26] <Zoffix> m: need v6.c

[15:26] <camelia> rakudo-moar f946bd: ( no output )

[15:27] <Zoffix> m: need v6.e

[15:27] <camelia> rakudo-moar f946bd: ( no output )

[15:27] <AlexDaniel> Maybe you can fix by adding some logic to “undeclared routine” processing?

[15:27] <Zoffix> Well, there's also this other bug

[15:27] <AlexDaniel> it's a compile-time error, so it's ok to take some time to do an extra check or whatever

[15:28] <Zoffix> That feels a bit spaghettified

[15:28] <AlexDaniel> ah, but again I'm thinking that the error message can be better, not that it should work…

[15:29] <Zoffix> m: use 6.000

[15:29] <camelia> rakudo-moar f946bd: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    use used at line 1␤␤»

[15:29] <AlexDaniel> I was thinking about “did you mean use v6.000” or whatever, but now I realize that's not what the ticket is asking for

[15:30] <Zoffix> What is it asking? I thought that's what it was asking

[15:31] <AlexDaniel> oh… /o\ yes!

[15:31] <AlexDaniel> \o/

[15:32] <Zoffix> m: need v6.d; say $*PERL.version

[15:32] <camelia> rakudo-moar f946bd: OUTPUT: «v6.c␤»

[15:32] <jnthn> Not quite sure it makes sense with need... :)

[15:33] <AlexDaniel> m: y

[15:33] <camelia> rakudo-moar f946bd: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    y used at line 1 (in Perl 6 please use tr instead)␤␤»

[15:33] <AlexDaniel> m: qr

[15:33] <camelia> rakudo-moar f946bd: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of qr for regex quoting; in Perl 6 please use rx//␤at <tmp>:1␤------> 3qr7⏏5<EOL>␤»

[15:34] <Zoffix> jnthn: yeah, I think maybe `<version>` should just be removed here: https://github.com/rakudo/rakudo/blob/f946bd35dca39af97983ec95d4da7fdd0416b73d/src/Perl6/Grammar.nqp#L1548

[15:34] <AlexDaniel> so you just add use and need here: https://github.com/rakudo/rakudo/blob/f946bd35dca39af97983ec95d4da7fdd0416b73d/src/core/Exception.pm#L1025-L1031

[15:34] <AlexDaniel> or… maybe not

[15:35] <Zoffix> Filed as LHF ticket: https://rt.perl.org/Ticket/Display.html?id=132214

[15:35] <Zoffix> AlexDaniel: looks like it yeah

[15:38] <AlexDaniel> “maybe not” because you can't really get the argument there, but maybe we don't need that

[15:41] <AlexDaniel> buggable: tag META

[15:41] <buggable> AlexDaniel, There is 1 ticket tagged with META; See http://fail.rakudo.party/t/META for details

[15:41] <AlexDaniel> buggable: tag RT

[15:41] <buggable> AlexDaniel, There is 1 ticket tagged with RT; See http://fail.rakudo.party/t/RT for details

[16:15] <Geth> ¦ rakudo/nom: c91c40115e | (Jonathan Worthington)++ | src/core/ThreadPoolScheduler.pm

[16:15] <Geth> ¦ rakudo/nom: Eliminate dupe and slightly optimize cue

[16:15] <Geth> ¦ rakudo/nom:

[16:15] <Geth> ¦ rakudo/nom: * Only do a closure clone if we really need it

[16:15] <Geth> ¦ rakudo/nom: * Use implicit return

[16:15] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c91c40115e

[17:41] <travis-ci> Rakudo build failed. Jonathan Worthington 'Eliminate dupe and slightly optimize cue

[17:41] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/282806177 https://github.com/rakudo/rakudo/compare/f946bd35dca3...c91c40115e59

[17:41] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[17:46] <Zoffix> 1 job on OSX: "Stage parse      : This type (Submethod) does not support elems"

[17:53] <lizmat> that is weird

[17:58] <Zoffix> ZOFFLOP: t/spec/S11-modules/nested.t

[17:58] <Zoffix> ZOFVM: Files=1276, Tests=152519, 155 wallclock secs (21.68 usr  3.43 sys + 3297.98 cusr 246.05 csys = 3569.14 CPU)

[17:59] <Geth> ¦ nqp: a6a1aa0b48 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[17:59] <Geth> ¦ nqp: Bump MoarVM

[17:59] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a6a1aa0b48

[17:59] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.09.1-62-g89ca8eb...2017.09.1-553-ga4fef0b

[17:59] <Geth> ¦ rakudo/nom: 2724a85144 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[17:59] <Geth> ¦ rakudo/nom: Bump NQP

[17:59] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2724a85144

[17:59] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.09-38-ga0618a6...2017.09-40-ga6a1aa0

[17:59] <Zoffix> m: say 553-62

[17:59] <camelia> rakudo-moar c91c40: OUTPUT: «491␤»

[17:59] <Zoffix> that's a lot of commits :) brrt++

[18:12] <travis-ci> NQP build failed. Zoffix Znet 'Bump MoarVM'

[18:12] <travis-ci> https://travis-ci.org/perl6/nqp/builds/282847986 https://github.com/perl6/nqp/compare/289f79fbd2d9...a6a1aa0b4869

[18:13] <Zoffix> One Linux job: t/nqp/059-nqpop.t ...................... 1/333 java.lang.ClassCastException: org.perl6.nqp.sixmodel.reprs.P6strInstance cannot be cast to java.lang.String

[18:13] <Zoffix> in ok (gen/jvm/stage2/NQPCORE.setting:1069)

[18:21] * lizmat pulls, builds and spectests

[18:22] <[TuxCM]> This is Rakudo version 2017.09-200-g2724a8514 built on MoarVM version 2017.09.1-553-ga4fef0bd

[18:22] <[TuxCM]> csv-ip5xs        1.169 -  1.182

[18:22] <[TuxCM]> test             9.672 -  9.722

[18:22] <[TuxCM]> test-t           3.191 -  3.212

[18:22] <[TuxCM]> csv-parser       0.822 -  0.878

[18:28] <AlexDaniel> evalable6: say “are you alive?”

[18:28] <evalable6> AlexDaniel, rakudo-moar 2724a8514: OUTPUT: «are you alive?»

[18:29] <AlexDaniel> hm. Bisectable also tracks moarvm repo so these 491 commits should be a lot of fun for the server :D

[18:30] <AlexDaniel> bloatable6: HEAD

[18:30] <bloatable6> AlexDaniel, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/713193dc91917afb0de3044521a1bea0

[18:30] <AlexDaniel> :S

[18:33] <Zoffix> buggable: speed 20 :4

[18:33] <buggable> Zoffix,          ↑    ↑      dates: 2017-09-29–2017-10-03

[18:33] <buggable> Zoffix,         ▆█ ▄  █      range: 3.154s–3.579s

[18:33] <buggable> Zoffix,   ▃ ▃  ▁██▅█▃▇█▅     speed: 1% slower

[18:33] <buggable> Zoffix, ▄▆█▅█▅▆█████████▃▁▄▆

[18:33] <Zoffix> buggable: speed 100 :2

[18:33] <buggable> Zoffix, ▂▂▃▄▂   █▅   ▁      █▂  ▂↑▅↑▃ ▂▁ ▄ ▁  ▂▅▃▂↑↑▂▂ ▁           ▃        ▁▂ ▂  ▂↑▇▃           ▂    ▃      dates: 2017-09-01–2017-10-03

[18:33] <buggable> Zoffix, ██████▇▆██▇█▇█▇▇█▆▆▇██████████████▇█▆▆██████████▇▆▇█▆█▆▆█▇▆█▇▇▆▆▆▇▆▇██▇█▇▄████▄▃▂▂▃▂▃▂▂▃▅█▄▅▃▄█▄▁▁▂▂ range: 3.154s–4.237s; speed: 10% faster

[18:33] <Zoffix> lookin' good \o/

[19:04] <AlexDaniel> MasterDuke: a critical flaw was found in *able error messages: https://github.com/perl6/whateverable/issues/242

[19:15] <Geth> ¦ rakudo/nom: fa8fe84b2f | (Elizabeth Mattijsen)++ | src/core/Rakudo/Internals.pm

[19:15] <Geth> ¦ rakudo/nom: Make dynamic variable debugging simpler

[19:15] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fa8fe84b2f

[19:31] <travis-ci> Rakudo build passed. Zoffix Znet 'Bump NQP'

[19:31] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/282848093 https://github.com/rakudo/rakudo/compare/c91c40115e59...2724a8514474

[20:02] <lizmat> decommute&

[20:35] <gfldex> what are the chances that Grammars benefit from future optimisations?

[20:43] <Geth> ¦ nqp: 39666cb5b0 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/Ops.java

[20:43] <Geth> ¦ nqp: [jvm] Fix 1 ** NaN

[20:43] <Geth> ¦ nqp:

[20:43] <Geth> ¦ nqp: Makes recently added test (commit 4cca702363) in t/nqp/059-nqpop.t pass.

[20:43] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/39666cb5b0

[20:45] <timotimo> gfldex: good chances

[20:45] <timotimo> do you know a bit about how the NFA stuff works?

[20:47] <AlexDaniel> squashable6: next

[20:47] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 2 days and ≈13 hours (2017-10-07 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[20:53] <Geth> ¦ roast: d95020aac0 | usev6++ | S32-num/power.t

[20:53] <Geth> ¦ roast: Add test for 1 ** NaN giving 1

[20:53] <Geth> ¦ roast:

[20:53] <Geth> ¦ roast: This was discussed in RT #129894 (Zoffix++) but not tested in roast.

[20:53] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d95020aac0

[20:53] <synopsebot> RT#129894 [rejected]: https://rt.perl.org/Ticket/Display.html?id=129894 1**NaN is 1, but any numeric operation with NaN should be NaN (say 1**NaN)

[20:56] <travis-ci> NQP build failed. usev6 '[jvm] Fix 1 ** NaN

[20:56] <travis-ci> https://travis-ci.org/perl6/nqp/builds/282919231 https://github.com/perl6/nqp/compare/a6a1aa0b4869...39666cb5b093

[20:57] <gfldex> timotimo: i have no idea. Just asking because I'm preparing my next blog post.

[20:57] <timotimo> ah, OK

[20:58] <timotimo> one detail of a future optimization opportunity is that when you have multis or proto tokens a bit deeply nested, it currently will make a decision concerning many nested ones on the first layer, then call into the right next layer and do the same calculation again

[20:58] <timotimo> that's probably the worst way to phrase it

[20:58] <timotimo> imagine you have a "term" rule that can call into, among other things, a "number" rule that has a "decimal number" rule it calls etc

[20:59] <timotimo> it'll figure out - in the very first step - that it'll have to call term -> number -> decimal number, but it'll immediately forget that after calling into the next step

[20:59] <timotimo> and re-do the rest of the calculation

[21:01] <MasterDuke> timotimo: where is that done?

[21:01] <timotimo> search for nfa_run or something?

[21:02] <MasterDuke> k

[21:03] <gfldex> i'm toying with specialising a JSON grammar by subclassing from JSON::Tinys grammar. Works nicely but it comes with a speed hit of ~50%.

[21:03] <timotimo> or alt_run

[21:03] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Make dynamic variable debugging simpler'

[21:03] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/282879726 https://github.com/rakudo/rakudo/compare/2724a8514474...fa8fe84b2ff5

[21:03] <buggable> [travis build above] ✓ All failures are due to: GitHub connectivity (1 failure).

[21:21] <Geth> ¦ rakudo/nom: df5899d7df | (Elizabeth Mattijsen)++ | src/core/HyperSeq.pm

[21:21] <Geth> ¦ rakudo/nom: Promise is already stubbed at this time

[21:21] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/df5899d7df

[21:21] <Geth> ¦ rakudo/nom: 98fae3d84e | (Elizabeth Mattijsen)++ | 3 files

[21:21] <Geth> ¦ rakudo/nom: Move up initialization of %*ENV and $*SCHEDULER

[21:21] <Geth> ¦ rakudo/nom:

[21:21] <Geth> ¦ rakudo/nom: - these were being requested at each startup before being initialized

[21:21] <Geth> ¦ rakudo/nom: - saves creation of 2 X::Dynamic::NotFounds and 2x Failure

[21:21] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/98fae3d84e

[22:07] <Geth> ¦ nqp: ec53b8b934 | usev6++ | 2 files

[22:07] <Geth> ¦ nqp: [jvm] Die with 'Division by zero' in div_i

[22:07] <Geth> ¦ nqp:

[22:07] <Geth> ¦ nqp: Without this change a division by zero led to a Java exception:

[22:07] <Geth> ¦ nqp: java.lang.ArithmeticException: / by zero

[22:07] <Geth> ¦ nqp:

[22:07] <Geth> ¦ nqp: For some reasons that didn't work well with 'dies-ok'. As a

[22:07] <Geth> ¦ nqp: result t/nqp/059-nqpop.t was blowing up on the jvm backend.

[22:07] <Geth> ¦ nqp: With this patch 'make test' is clean, again. Also, the error

[22:07] <Geth> ¦ nqp: message is now identical to the other two backends.

[22:07] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/ec53b8b934

[22:11] <travis-ci> NQP build failed. usev6 '[jvm] Die with 'Division by zero' in div_i

[22:11] <travis-ci> https://travis-ci.org/perl6/nqp/builds/282953403 https://github.com/perl6/nqp/compare/39666cb5b093...ec53b8b9348b

[22:14] <Geth> ¦ nqp: 3b1356871e | usev6++ | 2 files

[22:14] <Geth> ¦ nqp: Revert "[jvm] Die with 'Division by zero' in div_i"

[22:14] <Geth> ¦ nqp:

[22:14] <Geth> ¦ nqp: This reverts commit ec53b8b9348b12febd545c13b806e9dfc2822928.

[22:14] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/3b1356871e

[22:15] <MasterDuke> that was fast

[22:15] <bartolin> sorry for the noise, looks like i've messed something up. need to take a closer look (but not today).

[22:15] <bartolin> yeah, travis++

[22:30] <travis-ci> NQP build failed. usev6 'Revert "[jvm] Die with 'Division by zero' in div_i"

[22:30] <travis-ci> https://travis-ci.org/perl6/nqp/builds/282955586 https://github.com/perl6/nqp/compare/ec53b8b9348b...3b1356871ea7

[22:58] <MasterDuke> ran a spectest about an hour ago at head, got flops in  t/spec/S10-packages/basic.rakudo.moar and t/spec/S28-named-variables/init-instant.t

[23:05] <Zoffix> init-instant is false alarm

[23:05] * Zoffix fixes

[23:06] <MasterDuke> yeah guessed that was just a too tight tolerance (haven't looked at the test though)

[23:06] <Geth> ¦ roast: a0afd2f582 | (Zoffix Znet)++ (committed using GitHub Web editor) | S28-named-variables/init-instant.t

[23:06] <Geth> ¦ roast: Allow wider difference between $*INIT-INSTANT and INIT now

[23:06] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a0afd2f582

[23:11] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Move up initialization of %*ENV and $*SCHEDULER

[23:11] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/282935765 https://github.com/rakudo/rakudo/compare/fa8fe84b2ff5...98fae3d84efe
