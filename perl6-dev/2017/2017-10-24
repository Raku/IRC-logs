[00:00] <Zoffix> \o/

[00:01] <Zoffix> Now I have a fully-working test that covers the bug: https://gist.github.com/zoffixznet/84c4ba8d7e2319edea54cef68baea3ff

[00:01] <Zoffix> ZofBot: now I can be dangerous >:D

[00:01] <ZofBot> Zoffix, He shut his eyes

[00:41] <Zoffix> Yeah, there's MVM_file_handle_from_fd in moarvm

[00:51] <Zoffix> Got three test files failing on HEAD on macos: https://gist.github.com/zoffixznet/c5bba6127ef20b5c16db91becaa28cdf

[01:12] <Zoffix> ...

[01:13] <Zoffix> nm

[01:16] <MasterDuke> Zoffix, timotimo: looking at https://github.com/rakudo/rakudo/commit/e4a5bb17c9, think it would make sense to special case dividing by (-)?1 in MVM_bigint_div and just return the numerator (possibly negated)?

[01:19] <Zoffix> No idea. I'm only using it there 'cause it gives an uncached Int back

[01:20] <Zoffix> (nqp::add_I() for example doesn't)

[01:21] <MasterDuke> heh, i wonder if that optimization would then negate the reason you're using it

[01:22] <MasterDuke> because MVM_bigint_div always allocates a new mp_int for the result

[01:22] <MasterDuke> and i was thinking about just returning what was passed in for the numerator if the denominator is 1

[01:24] <Zoffix> Yeah, but that's not a reason to not do the optimization if it's needed :)

[01:25] <MasterDuke> well, div_I is already faster than i expected, but if it could be made even faster...

[01:30] <Zoffix> This is really pretty: https://i.imgur.com/kYSft5S.png  would be cool to be able to show similar stuff in Rakudo (even if with some custom Exceptions:: handler module)

[01:54] <Zoffix> Well, I got a fix for $*IN.getc thing... it looks a bit nutty tho

[01:54] <Zoffix> And prolly makes things a bit slower on OSX

[01:54] <Zoffix> or macos whateve

[02:07] <Zoffix> Can an fd other than 0, 1, or 2 be some weird TTY thing?

[02:07] <Zoffix> Oh wait, yeah it can... My test file opens one..

[02:19] <BenGoldberg> m: use NativeCall; sub isatty(int --> int) is native {...}; say isatty($_) for ^4;

[02:19] <camelia> rakudo-moar e4a5bb17c: OUTPUT: «Potential difficulties:␤    In 'isatty' routine declaration - Not an accepted NativeCall type for parameter [1]  : int␤     --> For Numerical type, use the appropriate int32/int64/num64...␤    at <tmp>:1␤    ------> 3 sub isatty(int --> int) …»

[02:19] <BenGoldberg> m: use NativeCall; sub isatty(int32 --> int32) is native {...}; say isatty($_) for ^4;

[02:19] <camelia> rakudo-moar e4a5bb17c: OUTPUT: «0␤0␤0␤0␤»

[02:19] <Zoffix> Looks like I killed stmuk's VM

[02:20] <Zoffix> Wonder if it's 'cause I spectested with my patch and the patch is crap :/

[02:21] <Zoffix> it stopped producing output. I could still ssh into it, but no commands ran... Now even ssh doesn't respond. I guess my spectest ate all the resource

[02:21] <Zoffix> oh, nm, it cam eback

[02:21] * Zoffix tries spectesting again

[02:30] <Geth> ¦ roast: bcf0f93354 | (Zoffix Znet)++ | packages/Test/Util.pm

[02:30] <Geth> ¦ roast: Implement `run-with-tty` test routine

[02:30] <Geth> ¦ roast:

[02:30] <Geth> ¦ roast: Similar to `is-run` except it does magiks to make standard handles

[02:30] <Geth> ¦ roast: be TTY so you could do TTY-sensitive tests.

[02:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/bcf0f93354

[02:35] <Geth> ¦ roast/fix-macos-eof: 27833272b4 | (Zoffix Znet)++ | S16-io/eof.t

[02:35] <Geth> ¦ roast/fix-macos-eof: Test .eof on TTY handles works right

[02:35] <Geth> ¦ roast/fix-macos-eof:

[02:35] <Geth> ¦ roast/fix-macos-eof: RT#132349: https://rt.perl.org/Ticket/Display.html?id=132349

[02:35] <Geth> ¦ roast/fix-macos-eof: review: https://github.com/perl6/roast/commit/27833272b4

[02:35] <synopsebot> RT#132349 [open]: https://rt.perl.org/Ticket/Display.html?id=132349 [REGRESSION] $*IN.getc not blocking on macOS

[02:39] <Zoffix> .tell lizmat are you able to try spectesting (or stresstesting) with this MoarVM branch? https://github.com/MoarVM/MoarVM/commit/24007720d5 It fixes $*IN.getc bug but I'm having trouble completing spectest on stmuk++'s VM; seems to run out of resources or something. Dunno if it's my change. If you do run it, can you note if there's any significant performance impact?

[02:39] <yoleaux> Zoffix: I'll pass your message to lizmat.

[02:41] <Zoffix> .tell AlexDaniel` for RT#132349 I got a solid test ( https://github.com/perl6/roast/commit/27833272b4 ) and questionable fix in a MoarVM branch ( https://github.com/MoarVM/MoarVM/commit/24007720d5 ). It fixes the bug, but maybe doing Bad Things™ or impacting performance. Dunno how good it is. I'm a n00b in this area.

[02:41] <yoleaux> Zoffix: I'll pass your message to AlexDaniel`.

[02:41] * Zoffix drops to bed

[06:49] <timotimo> mastertbh i have no idea why that's div_I and not add_I which was what i suggested

[06:49] <timotimo> oh, now i see what's what

[06:52] <timotimo> there should be something against mutated objects in the int cache anyway

[06:54] <[Tux]> This is Rakudo version 2017.09-498-ge4a5bb17c built on MoarVM version 2017.09.1-614-g19523568

[06:54] <[Tux]> csv-ip5xs        1.163 -  1.179

[06:54] <[Tux]> test            11.844 - 11.908

[06:54] <[Tux]> test-t           3.196 -  3.205

[06:54] <[Tux]> csv-parser      12.000 - 12.223

[07:07] <timotimo> right, the impl of div just doesn't look at the int cache

[07:07] <timotimo> that's why you get a distinct object

[07:08] <AlexDaniel`> .

[07:08] <yoleaux> 02:41Z <Zoffix> AlexDaniel`: for RT#132349 I got a solid test ( https://github.com/perl6/roast/commit/27833272b4 ) and questionable fix in a MoarVM branch ( https://github.com/MoarVM/MoarVM/commit/24007720d5 ). It fixes the bug, but maybe doing Bad Things™ or impacting performance. Dunno how good it is. I'm a n00b in this area.

[07:08] <synopsebot> RT#132349 [open]: https://rt.perl.org/Ticket/Display.html?id=132349 [REGRESSION] $*IN.getc not blocking on macOS

[07:08] <AlexDaniel`> .tell Zoffix awesome. Thanks!

[07:08] <yoleaux> AlexDaniel`: I'll pass your message to Zoffix.

[07:09] <AlexDaniel`> lizmat: oh

[07:09] <AlexDaniel`> lizmat: I forgot to generate it this week?

[07:09] <AlexDaniel`> oops…

[07:11] <AlexDaniel`> yep I did

[07:12] <timotimo> ISTR jnthn discussing what to do about int cache and mixing in stuff

[07:12] <AlexDaniel`> .tell lizmat Oops. I forgot to do it this week. Sorry. As for the script, I can share it if you want but I'm doing some weird stuff to get things working so maybe it'll be easier if I just give you a link every week. Tell me what you think

[07:12] <yoleaux> AlexDaniel`: I'll pass your message to lizmat.

[07:15] <lizmat> .

[07:15] <yoleaux> 02:39Z <Zoffix> lizmat: are you able to try spectesting (or stresstesting) with this MoarVM branch? https://github.com/MoarVM/MoarVM/commit/24007720d5 It fixes $*IN.getc bug but I'm having trouble completing spectest on stmuk++'s VM; seems to run out of resources or something. Dunno if it's my change. If you do run it, can you note if there's any significant performance impact?

[07:15] <yoleaux> 07:12Z <AlexDaniel`> lizmat: Oops. I forgot to do it this week. Sorry. As for the script, I can share it if you want but I'm doing some weird stuff to get things working so maybe it'll be easier if I just give you a link every week. Tell me what you think

[07:15] <lizmat> AlexDaniel`: a link every week would be fine  :-)

[07:17] <AlexDaniel`> .at 2017-10-29 RT/GH weekly

[07:17] <yoleaux> AlexDaniel`: Sorry, that command (.at) crashed.

[07:17] <lizmat> Files=1229, Tests=75769, 317 wallclock secs (14.75 usr  5.13 sys + 2190.72 cusr 214.68 csys = 2425.28 CPU)

[07:17] <AlexDaniel`> .in 5d RT/GH weekly

[07:17] <yoleaux> AlexDaniel`: I'll remind you on 29 Oct 2017 07:17Z

[07:17] <AlexDaniel`> .in 12d RT/GH weekly

[07:17] <yoleaux> AlexDaniel`: I'll remind you on 5 Nov 2017 07:17Z

[07:17] <AlexDaniel`> .in 19d RT/GH weekly

[07:17] <yoleaux> AlexDaniel`: I'll remind you on 12 Nov 2017 07:17Z

[07:17] <AlexDaniel`> .in 26d RT/GH weekly

[07:17] <yoleaux> AlexDaniel`: I'll remind you on 19 Nov 2017 07:17Z

[07:18] <AlexDaniel`> .in 33d RT/GH weekly

[07:18] <yoleaux> AlexDaniel`: I'll remind you on 26 Nov 2017 07:18Z

[07:18] <AlexDaniel`> mmm maybe all the way till the end of this year…

[07:18] <AlexDaniel`> .in 40d RT/GH weekly

[07:18] <yoleaux> AlexDaniel`: I'll remind you on 3 Dec 2017 07:18Z

[07:18] <AlexDaniel`> .in 47d RT/GH weekly

[07:18] <yoleaux> AlexDaniel`: I'll remind you on 10 Dec 2017 07:18Z

[07:18] <AlexDaniel`> .in 54d RT/GH weekly

[07:18] <yoleaux> AlexDaniel`: I'll remind you on 17 Dec 2017 07:18Z

[07:18] <AlexDaniel`> .in 61d RT/GH weekly

[07:18] <yoleaux> AlexDaniel`: I'll remind you on 24 Dec 2017 07:18Z

[07:19] <AlexDaniel`> .in 68d RT/GH weekly

[07:19] <yoleaux> AlexDaniel`: I'll remind you on 31 Dec 2017 07:19Z

[07:19] <AlexDaniel`> too bad no yearly!

[07:20] <AlexDaniel`> lizmat: I did start the script now again, but I think it'd be better if we show the report for the last two weeks next time

[07:20] <AlexDaniel`> also, I need to add github support to the script

[07:21] <lizmat> AlexDaniel`: yeah, next week a 2 week report would be fine  :-)

[07:21] <AlexDaniel`> OK

[08:34] <stmuk> so no release until next month?

[08:37] <stmuk> Zoffix: It's a physical laptop not a VM but its running the latest macOS which probably hasn't been tested much on that exact platform and I'm not sure how well it works with SSH (power suspend etc.?)

[08:37] <timotimo> no release? why?

[08:38] * lizmat is still working on making issue 1220 go away

[08:39] <stmuk> https://github.com/rakudo/rakudo/commit/76017036aaa5364e07163398b97414299eca23a2

[08:40] <timotimo> it has the 2017.10 already in the "finished" section

[08:40] <timotimo> albeit with yesterday's date

[08:40] <stmuk> oh yes

[08:41] <stmuk> more coffee needed

[08:41] * stmuk tries the macOS moar branch

[08:45] <stmuk> I should active the virtualsue bot to fix some clang warnings :)

[08:50] <lizmat> afk for a few hours&

[09:17] <AlexDaniel`> timotimo: oh well :)

[09:18] <AlexDaniel`> the date in the release guide is always changed a bit ahead of time… even if by a few seconds :)

[09:19] <AlexDaniel`> stmuk: pretty sure it won't take us a month to fix the remaining issues :)

[09:38] <stmuk> Zoffix: I think there are performance issues with your fix-macos-eof (using clang on macOS 10.13) I'm seeing stage parse at 210 secs rather than 123 secs for moar-blead

[09:38] <stmuk> its not as bad on linux/gcc 133 secs v 80 secs

[09:52] <AlexDaniel`> hmm

[09:58] <stmuk> I also saw t/spec/S06-signature/slurpy-params.t from 6.d-proposals

[09:59] <stmuk> fail as well as some S17 (on macOS) and had to give up since the laptop was running too hot with fans going

[10:16] <Zoffix> doubt my fix affects stage parse

[10:16] <yoleaux> 07:08Z <AlexDaniel`> Zoffix: awesome. Thanks!

[10:17] <Zoffix> gonna do what geekosaur++ suggested tonight; unless it gets merged/released before that

[10:21] <Zoffix> Also, my fix shouldn't affect linux at all :)

[10:24] * Zoffix spies a perl6 repo created for book https://leanpub.com/collab-dev-git

[10:25] <Zoffix> Oh, I guess there are many langs: https://github.com/collab-dev

[10:41] <Zoffix> AlexDaniel`: "yearly"? like instead of weekly? I think we have that in some form if someone does one: the Advent Posts.

[10:42] <Zoffix> We prolly should start soliciting authors

[10:42] <AlexDaniel`> Zoffix: ah no, I meant that if I had done this before, then by the end of the year we could have had a yearly progress report for RT tickets

[10:43] <AlexDaniel`> (like this: https://gist.github.com/AlexDaniel/0f20a508bff0f7e9edd4e4d1d94002e2 )

[10:44] <Zoffix> ah

[10:51] * Zoffix will fire off a Call for Authors for advent in ~2h

[10:51] <Zoffix> I see last year we started on Nov 1st, and we were kinda in a bind to fill all the spots by the end... better start now.

[10:52] <AlexDaniel`> Zoffix++

[11:00] <Zoffix> huh  "You did it! Congratulations on submitting your four pull requests and contributing to open source projects this month"

[11:00] <Zoffix> I wasn't even trying... And I guess it does count PRs to brojects you got commits for, 'cause I don't remember submitting PRs anywhere else :/

[11:00] <Zoffix> *got commit bits for

[11:01] <Zoffix> ZofBot: plot twist: Zoffix sleep-walks and submits PRs at night without remembering anything the next day

[11:01] <ZofBot> Zoffix, The room was a world, a pocket of the past where extinct animals could walk

[11:38] <stmuk> stmuk-- # ah my mac eof branch moar build script had --no-optimize --debug and I forgot

[11:39] <Zoffix> ah :) phew

[11:43] <stmuk> and the slow test results are probably due to the aggressive TEST_JOBS=6 being better suited to beefy multi-core systems than ageing laptops

[11:50] <Geth> ¦ rakudo/nom: 30462d766e | (Elizabeth Mattijsen)++ | src/core/ThreadPoolScheduler.pm

[11:50] <Geth> ¦ rakudo/nom: HLL-fix for issue 1202

[11:50] <Geth> ¦ rakudo/nom:

[11:50] <Geth> ¦ rakudo/nom: - more info: see https://github.com/rakudo/rakudo/issues/1202

[11:50] <Geth> ¦ rakudo/nom: - changes all use of Lists for worker list to IterationBuffer

[11:50] <Geth> ¦ rakudo/nom:   - these have fewer concurrency issues

[11:50] <Geth> ¦ rakudo/nom:   - specifically, List.elems *could* change internal state of a List

[11:50] <Geth> ¦ rakudo/nom: - this appears to make the sample code much more stable

[11:50] <Geth> ¦ rakudo/nom: <…commit message has 5 more lines…>

[11:50] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/30462d766e

[11:51] <lizmat> AlexDaniel`: ^^^

[11:51] <lizmat> I think I've done all I can do in this respect

[11:52] <AlexDaniel`> great. I'll test it in a few moments

[11:57] <lizmat> some extra datapoint: I can only get the code of issue 1202 to fail if I run something heavy like a spectest concurrently

[11:59] <lizmat> if it runs by itself, it can run for minutes

[12:13] <stmuk> t/spec/S17-supply/watch-path.t fails for me

[12:14] <Geth> ¦ synopsebot: c93e528c35 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 3 files

[12:14] <Geth> ¦ synopsebot: “GH #…” issues and PRs

[12:14] <Geth> ¦ synopsebot:

[12:14] <Geth> ¦ synopsebot: Implemented similarly to RT plugin. There's some overlap in the code

[12:14] <Geth> ¦ synopsebot: which can be refactored.

[12:14] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/c93e528c35

[12:15] <AlexDaniel`> Zoffix: how to git pull & restart synopsebot?

[12:15] <Zoffix> I was thinking of something slitly different that'd let us link to more than Rakudo's Issues.  Syntax: RT#\d+ = RT ticket; R#\d+ = Rakudo's Issues, S#\d+ = Spec's Issues, M#\d+ = MoarVM's issues, N#\d+ = NQP's issues

[12:16] <AlexDaniel`> hmm

[12:17] <Zoffix> AlexDaniel`: ssh hack.p6c.org; sudo su -l synopsebot; cd synopsebot/; git pull; logout; sudo service synopsebot restart

[12:17] <Zoffix> I done it now

[12:17] <Zoffix> G#1202

[12:17] <Zoffix> GH#1202

[12:17] <synopsebot> GH#1202 [open]: https://github.com/rakudo/rakudo/issues/1202 [annoying] Async qqx sometimes hangs or dies ( await (^5).map({start { say qqx{… …} } }) )

[12:17] <Zoffix> neat

[12:17] <AlexDaniel`> works for PRs also

[12:18] <AlexDaniel`> GH #998

[12:18] <synopsebot> GH#998 [open]: https://github.com/rakudo/rakudo/pull/998 [pending user] Implement `last` and `redo` for whenever blocks

[12:18] <stmuk> and t/spec/S32-str/utf8-c8.t fails

[12:18] <AlexDaniel`> Zoffix: ok, so someone suggested [severe] instead of [annoying], what do you think?

[12:18] <Geth> ¦ synopsebot: 11d98e334e | (Zoffix Znet)++ (committed using GitHub Web editor) | README.md

[12:18] <Geth> ¦ synopsebot: document how to pull new changes and restart the bot

[12:18] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/11d98e334e

[12:18] <Zoffix> AlexDaniel`: good

[12:18] <AlexDaniel`> https://irclog.perlgeek.de/perl6-dev/2017-10-23#i_15340708

[12:19] <AlexDaniel`> ok then

[12:22] <AlexDaniel`> done. Renamed.

[12:23] <Zoffix> ZofBot: good

[12:23] <ZofBot> Zoffix, For all he knew there might never have been any such law as the JUS PRIMAE NOCTIS, or any such creature as a capitalist, or any such garment as a top hat

[12:24] <Geth> ¦ rakudo/nom: b19e352eca | (Elizabeth Mattijsen)++ | src/core/List.pm

[12:24] <Geth> ¦ rakudo/nom: Revert "Threadsafe List.reify-until-lazy a bit"

[12:24] <Geth> ¦ rakudo/nom:

[12:24] <Geth> ¦ rakudo/nom: - This reverts commit 50324bb004e120a0f82363bf8ff4222dc2cfa014.

[12:24] <Geth> ¦ rakudo/nom: - No longer needed because of 30462d766e9216c9f5beed

[12:24] <Geth> ¦ rakudo/nom: - Removes small overhead the commit caused

[12:24] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b19e352eca

[12:27] <AlexDaniel`> ahhh :) https://irclog.perlgeek.de/perl6/2017-10-24#i_15345901

[13:17] <pmurias> should I file a ticket if I find a bug in rakudo and will fix it myself?

[13:17] <AlexDaniel`> pmurias: IMO yes

[13:18] <DrForr> I'd agree, someone else might find the same bug and duplicate your work.

[13:18] <AlexDaniel`> pmurias: one of the reasons for “yes” is that people tend to find and fix issues but forget to write tests for them

[13:18] <AlexDaniel`> also it's much better to have tests linked to some context

[13:19] <perlpilot> AlexDaniel`: re synopsebot ... maybe someone should make a way for it to restart itself.  :)

[13:19] <AlexDaniel`> if you want to work on it yourself feel free to self-assign, that's possible on RT and GitHub

[13:20] <AlexDaniel`> geez, was away for a lunch and my inbox is full of notifications

[13:21] <AlexDaniel`> perlpilot: maybe. For example, camelia knows how to do that

[13:24] <AlexDaniel`> lizmat: ok, without any load it hangs on my machine in ≈30 runs

[13:24] <AlexDaniel`> sometimes more, sometimes less

[13:24] <AlexDaniel`> but after your changes I've never seen any error

[13:25] <AlexDaniel`> so it got better for sure

[13:25] <AlexDaniel`> not much tho

[13:29] <pmurias> should new tickets be opened on github?

[13:31] <Zoffix> pmurias: whatever you feel more confortable. I think the plan is to let the best Issue tracker win :)

[13:31] <AlexDaniel`> yeah

[13:35] <timotimo> AlexDaniel`: could i have a feature that i give synopsebot a (abbreviated) commit hash and it'll figure out for me what repo it's from and generate a github link?

[13:35] <AlexDaniel`> timotimo: yes

[13:35] <timotimo> cool

[13:35] <AlexDaniel`> although maybe that's better done in whateverable because it already tracks all repos

[13:36] <AlexDaniel`> alright someone is saying that rakudo does not build for him. Great

[13:39] <Zoffix> Two people actually. Another one filed on nqp repo last night

[13:39] <timotimo> sure, put it on whateverable, that also makes sense

[13:41] <AlexDaniel`> timotimo: there https://github.com/perl6/whateverable/issues/255

[13:42] <[Coke]> btw, I found a "github issue mover" that we could use to move things from, say, docs repo to rakudo.

[13:42] <[Coke]> (since some doc tickets are really for things in perl6)

[13:43] <AlexDaniel`> yeah I think this was mentioned previously

[13:44] <AlexDaniel`> Zoffix: that one I'm not worried about. It builds just fine on debian unstable, there should be no problem on testing

[13:45] <Zoffix> ZofBot: famous last words

[13:45] <ZofBot> Zoffix, The economy of many countries was allowed to stagnate, land went out of cultivation, capital equipment was not added to, great blocks of the population were prevented from working and kept half alive by State charity

[13:47] <AlexDaniel`> timotimo: what was the issue back then 3.5 years ago? https://irclog.perlgeek.de/moarvm/2014-05-11#i_8709129

[13:47] <AlexDaniel`> :)

[13:48] <timotimo> looks like i changed something in spesh optimization that caused code to misbehave once it got optimized

[14:22] <buggable> New CPAN upload: JSON-Tiny-1.0.tar.gz by MORITZ https://cpan.metacpan.org/authors/id/M/MO/MORITZ/Perl6/JSON-Tiny-1.0.tar.gz

[14:30] <AlexDaniel`> ok so -2 build issues then

[14:42] <Zoffix> New blog post: "Rakudo Perl 6 Advent Calendar 2017 Call for Authors": https://rakudo.party/post/Rakudo-Perl-6-Advent-Calendar-2017--Call-for-Authors

[14:45] <DrForr> RT'd.

[15:05] <Zoffix> stmuk: is your macos lappy available for use ATM? Was gonna try the isatty now instead of in 8hr

[15:06] <Zoffix> guess I can try it without `#if defined` things on my 24-core Linux to see if there's any perf impact

[15:31] <ugexe> travis-osx-reverse-shell-serverable:

[15:33] <ugexe> https://github.com/fniephaus/travis-remote-shell >:-)

[15:34] <ugexe> that one doesnt work on osx builds i guess, but there are others

[15:39] <Zoffix> ZOFFLOP: t/spec/S11-modules/nested.t

[15:42] <Zoffix> HEAD: Stage parse 79s; stresstest: 157s; spectest: 112s; bench: 6.560s

[15:42] <Zoffix> "bench" being this: time ./perl6 -e '(my $p = $*TMPDIR.add: "z42") andthen .spurt: "meows"; for ^50000 { given $p.open { .eof; .slurp; .eof; .close } }'

[15:42] <Zoffix> .oO( useless use of andthen )

[15:48] <Zoffix> Slightly too inflated bench; on 472 I get 6.209s

[15:48] <Zoffix> m: $*PERL.compiler.version.say

[15:48] <camelia> rakudo-moar b19e352ec: OUTPUT: «v2017.09.500.gb.19.e.352.ec␤»

[15:57] <Zoffix> ZOFFLOP: t/spec/S17-lowlevel/semaphore.t

[15:57] <Zoffix> (that's a new one :o)

[15:57] <Zoffix> Segfaulted during the run

[16:03] <Zoffix> HEAD:    Stage parse 79s; stresstest: 157s; spectest: 112s; bench: 6.209s-6.560s

[16:03] <Zoffix> EOF fix: Stage parse 74s; stresstest: 153s; spectest: 112s; bench: 6.236s-6.406s

[16:03] <Zoffix> so perf impact is within noise

[16:09] <Zoffix> rofl. So it begins, the AI is attacking :) https://www.theverge.com/us-world/2017/10/24/16533496/facebook-apology-wrong-translation-palestinian-arrested-post-good-morning

[16:09] <Zoffix> ZofBot: you'll spare me, won't you?

[16:09] <ZofBot> Zoffix, 'It's nothing

[16:11] <Zoffix> "translation systems made an error" or the AI wanted us to think it made an error :P

[16:12] <ilmari> google translates the phrase as "become them"

[16:15] <Zoffix> .tell AlexDaniel` I updated the $*IN.getc PR with the new suggestions. I don't got a macos to test this on, but when I made the patch applicable to Linux and stresstested without issues and no noticable perf impact. If someone tests this on macos and it fixes the bug, I think it's good to merge: https://github.com/MoarVM/MoarVM/pull/731

[16:15] <yoleaux> Zoffix: I'll pass your message to AlexDaniel`.

[16:15] * Zoffix & for a few hours

[16:16] <AlexDaniel`> cool

[16:16] <yoleaux> 16:15Z <Zoffix> AlexDaniel`: I updated the $*IN.getc PR with the new suggestions. I don't got a macos to test this on, but when I made the patch applicable to Linux and stresstested without issues and no noticable perf impact. If someone tests this on macos and it fixes the bug, I think it's good to merge: https://github.com/MoarVM/MoarVM/pull/731

[16:30] <[Coke]> testing now.

[16:30] <[Coke]> (er, doing the build now.)

[16:30] * Zoffix is about to commit slight restructure tho :)

[16:34] <[Coke]> ok. killing the build, let me know when to retry

[16:47] <Zoffix> [Coke]: ok, pushed my latest work

[16:47] <Zoffix> https://github.com/MoarVM/MoarVM/commit/fbd7dc8fa5

[16:50] <[Coke]> same branch? restarting..

[16:50] <[Coke]> ... did you force push?

[16:51] <[Coke]> got a merge conflict having done nothing locally.

[16:51] <[Coke]> repulling, this will add many minutesover my slow connection. :|

[16:53] <[Coke]> actually, it's just way too slow. killing the build, will kick it off again when I'm back in the office.

[16:53] <AlexDaniel`> so the thing with WebSocket module, it never gets anything here: https://github.com/tokuhirom/p6-WebSocket/blob/69f6e3bdfb13f40f7caefc8b6cb2cc55bdd240db/lib/WebSocket/P6W.pm6#L57

[16:54] <AlexDaniel`> but at the same time I don't really know if anything is sent, hmm

[16:54] <Zoffix> [Coke]: yeah, forced pushed

[16:54] <AlexDaniel`> well maybe I can see in wireshark or something

[16:56] <[Coke]> samcv: found the bug that hangs the async highlights on os x.

[16:56] <samcv> oh?

[16:56] <samcv> awesome!

[16:57] <[Coke]> m: say $*TMPDIR;

[16:57] <camelia> rakudo-moar b19e352ec: OUTPUT: «"/tmp".IO␤»

[16:57] <[Coke]> ^^ on a mac, that path ends with a /

[16:57] <Zoffix> :(

[16:57] <[Coke]> so the tmp files we make there have a // in the middle; coffee is normalizing it, so the filenames never match.

[16:58] <AlexDaniel`> yeah, stuff is sent but is never received

[16:58] <Zoffix> m: '/tmp'.IO.say

[16:58] <camelia> rakudo-moar b19e352ec: OUTPUT: «"/tmp".IO␤»

[16:59] <Zoffix> Does that give '/tmp/' on MacOS?

[17:00] <[Coke]> no.

[17:00] <AlexDaniel`> greppable6: HTTP::Server::Tiny

[17:00] <[Coke]> I assume it's the construction of TMPDIR

[17:00] <greppable6> AlexDaniel`, https://gist.github.com/5f19c8884de0e170a34c55b9c96032b7

[17:00] <[Coke]> ah, it's that way in ENV.

[17:01] <[Coke]> so perl6 might want to standardize that

[17:01] <[Coke]> in the meantime, I'll just strip off any trailing /

[17:01] <[Coke]> (in docs)

[17:01] <Zoffix> m: dd %*ENV<TMPDIR>

[17:01] <camelia> rakudo-moar b19e352ec: OUTPUT: «Any <element> = Any␤»

[17:02] <Zoffix> Damn. All these discussions make me want to have a mac to work with... but I feel like Apple would've gotten away with its con if it got $x amount of money outta me just cause it's refusing to make MacOS easily VMable

[17:03] <[Coke]> samcv: if I fix this, is there any reason to ever NOT use the async version?

[17:03] <[Coke]> I can rip out the command line arg and the ability to force single threaded also.

[17:05] <Zoffix> That macincloud thing would've been alright if they didn't expire your credits after 60days

[17:06] <Zoffix> oh wait, it expires "if you do not log in" ok, maybe it's fine then

[17:07] <Zoffix> "Enable Remote Build Port (SSH) - $5/month per server" -_-

[17:10] <[Coke]> samcv: will remove force-proc-async and the macosx specific code in MAIN; I'll leave the ability to use the non-async one, but IMO we should plan to rip it out. (and perhaps I will as I do more here.)

[17:11] <Zoffix> :S CAD$3,699.99 for a decent macbook with a tiny 15.4" screen... the macincloud looking better by comparison :P

[17:18] <AlexDaniel`> does anybody have any thoughts on https://github.com/tokuhirom/p6-WebSocket/issues/15 ?

[17:18] <AlexDaniel`> especially https://github.com/tokuhirom/p6-WebSocket/issues/15#issuecomment-339065577

[17:19] <AlexDaniel`> it feels like a real sched bug

[17:33] <Zoffix> #1111

[17:33] <Zoffix> Fixes #1111

[17:33] <synopsebot> GH#1111 [closed]: https://github.com/rakudo/rakudo/pull/1111 begin_time_lexical_fixup for constants

[17:33] <Zoffix> The bot's buggy. It just assumes rakudo issues

[17:33] <Zoffix> Like here: https://irclog.perlgeek.de/perl6/2017-10-24#i_15347647

[17:34] <AlexDaniel`> #132353

[17:34] <AlexDaniel`> ugh

[17:36] <AlexDaniel`> blah #132353

[17:36] <synopsebot> RT#132353 [new]: https://rt.perl.org/Ticket/Display.html?id=132353 [LTA] error with using meta assign ops with bound SetHash

[17:37] <AlexDaniel`> blah #68320

[17:37] <synopsebot> RT#68320 [open]: https://rt.perl.org/Ticket/Display.html?id=68320 [TODO] $!.pending

[17:37] <AlexDaniel`> Zoffix: I guess it shouldn't react to things that have no prefix

[17:37] <Zoffix> Yeah, probably

[17:38] <Zoffix> And make different prefexes for different locations.

[17:39] <Zoffix> Well, looked around for a MacOS VM. Don't see anything I'd be willing to pay for. The cheapest I saw was like CAD$46 for 30 hours and they round it to the hour and require you to log in at least once (and thus spend at least an hour) every 60 days or all your hours expire.

[17:39] <Zoffix> I'm too cheap to pay that to debug MacOS-specific issues.

[17:41] <[Coke]> Zoffix: build fails.

[17:41] <[Coke]> https://gist.github.com/coke/9939bc56dfd59e20ae0112af016c667a

[17:42] <[Coke]> I wonder if TPF has a mac contact.

[17:42] <[Coke]> perl Configure.pl --gen-moar=fix-macos-eof --gen-nqp=master && make -j install # build command

[17:44] <Zoffix> dam

[17:44] * Zoffix tries a linux build with mac defines removed

[17:48] <Zoffix> [Coke]: do you still have previous output available? What's the output before the failures?

[17:49] <Zoffix> it built on linux...

[17:50] <stmuk> Zoffix: do you need access to my mac?

[17:51] <Zoffix> stmuk: that would be great. yeah

[17:52] <Zoffix> [Coke]: nm, managed to repro it on linux if I just use the `isatty` test.

[17:58] <Zoffix> Ah lol, Perlism in C code: missing `return` statement

[18:00] <stmuk> Zoffix: ok its charging now and should be available although it might be better to let it charge for an hour or two before heating it up :)

[18:00] <Zoffix> stmuk++ thanks

[18:04] <stmuk> I think its possible to run macOS in virtualbox and even on PC hardware directly

[18:05] <Zoffix> I found this article: https://www.pcsteps.com/2157-mac-os-x-virtual-machine-vmware-player/  Might try it; though comments suggest it's not as easy as pie

[18:05] <stmuk> or watch http://www.puredarwin.org/ for progress .. last time I looked it only booted in single user mode and the guy on IRC tried to get me to join up and help them fix it :)

[18:06] <Zoffix> :)

[18:14] <Zoffix> ZOFFLOP: t/spec/S11-modules/nested.t t

[18:28] <Zoffix> Yup. isatty() thing fixes the bug too.

[18:29] * Zoffix tries a TEST_JOBS=2 spectest

[18:29] <Geth> ¦ synopsebot: 1db7e3e8a5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[18:29] <Geth> ¦ synopsebot: More prefixes, stricter regex and better handling

[18:29] <Geth> ¦ synopsebot:

[18:29] <Geth> ¦ synopsebot: A bit crude but it works.

[18:29] <Geth> ¦ synopsebot:

[18:29] <Geth> ¦ synopsebot: IDs without prefixes are no longer accepted. Now you can mention both

[18:29] <Geth> ¦ synopsebot: RT and GH tickets in the same message. Adds prefixes for other repos,

[18:29] <Geth> ¦ synopsebot: adjust to your liking.

[18:30] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/1db7e3e8a5

[18:30] <AlexDaniel`> Zoffix: the code kinda sucks but it works ↑

[18:31] <AlexDaniel`> example: NQP#100 MOAR#100 GH#1202 RT#132353 RAKUDO#1203 SPEC#100

[18:31] <synopsebot> RT#132353 [new]: https://rt.perl.org/Ticket/Display.html?id=132353 [LTA] error with using meta assign ops with bound SetHash

[18:31] <Zoffix> R##1203

[18:31] <Zoffix> R#1203

[18:32] <Zoffix> RAKUDO is too much to type

[18:32] <AlexDaniel`> R is a bit too little :)

[18:32] <Zoffix> Why?

[18:32] <AlexDaniel`> well, we have R and RT

[18:32] <Zoffix> Support both "R" and "RAKUDO"

[18:32] <Zoffix> So?

[18:32] <Zoffix> RT# and R# clearly distinct

[18:34] <Geth> ¦ synopsebot: 5d3dc13d53 | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/SB/Plugin/GitHub.pm6

[18:34] <Geth> ¦ synopsebot: Add R# prefix

[18:34] <Geth> ¦ synopsebot:

[18:34] <Geth> ¦ synopsebot: https://irclog.perlgeek.de/perl6-dev/2017-10-24#i_15347995

[18:34] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/5d3dc13d53

[18:34] <Zoffix> Well, I meant, M, S, N, R :P

[18:34] <Zoffix> and D

[18:35] <Zoffix> Well, I can add myself, if you want

[18:35] <Geth> ¦ synopsebot: 565bd86360 | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/SB/Plugin/GitHub.pm6

[18:35] <Geth> ¦ synopsebot: More confusing prefixes

[18:35] <Geth> ¦ synopsebot:

[18:35] <Geth> ¦ synopsebot: https://irclog.perlgeek.de/perl6-dev/2017-10-24#i_15348014

[18:35] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/565bd86360

[18:36] <AlexDaniel`> I guess it doesn't really matter if these prefixes are meaningful or not

[18:36] <Zoffix> The docs are missing :}

[18:37] <Zoffix> DOCS#42 / D#42

[18:38] <Geth> ¦ synopsebot: 5d69016616 | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/SB/Plugin/GitHub.pm6

[18:38] <Geth> ¦ synopsebot: Add DOCS# prefix

[18:38] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/5d69016616

[18:39] <AlexDaniel`> I wonder if all that is needed, but we'll see how it goes

[18:41] <Zoffix> N#100 M#100 R#100 RT#132353 S#100

[18:41] <synopsebot> RT#132353 [new]: https://rt.perl.org/Ticket/Display.html?id=132353 [LTA] error with using meta assign ops with bound SetHash

[18:41] <synopsebot> N#100 [closed]: https://github.com/perl6/nqp/issues/100 Forcing 64bit mode on OS X causes NativeCall to fail on 32bit machines

[18:41] <synopsebot> M#100 [closed]: https://github.com/MoarVM/MoarVM/issues/100 spesh bug with perl6-lwp-simple get-w3-latin1-utf8.t

[18:41] <synopsebot> R#100 [closed]: https://github.com/rakudo/rakudo/pull/100 Typename suggestions: in signatures, declarations, return types, ...

[18:41] <synopsebot> S#100 [closed]: https://github.com/perl6/roast/pull/100 Test for require file where symbol isn't in module

[18:41] <Zoffix> neat

[18:41] <Zoffix> D#100

[18:41] <synopsebot> D#100 [closed]: https://github.com/perl6/doc/pull/100 IO::Path .extension, Proc[::Async] :$cwd param

[18:42] <Geth> ¦ synopsebot: 30ed232a8c | (Zoffix Znet)++ (committed using GitHub Web editor) | README.md

[18:42] <Geth> ¦ synopsebot: spread out commands on new lines

[18:42] <Geth> ¦ synopsebot:

[18:42] <Geth> ¦ synopsebot: 'cause they can't be copy-pasted in one line

[18:42] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/30ed232a8c

[18:47] <[Coke]> Zoffix: ssh -t hack.p6c.org 'long list of commands that include sudo'

[18:47] <[Coke]> then you could cut and paste it, no?

[18:48] <Zoffix> [Coke]: no idea. I'm a ssh n00b

[18:48] <Zoffix> one of commands is switching to synopsebot user to pull

[18:48] <Zoffix> This really should be a bot command

[18:48] <[Coke]> you need the -t for the password prompt to work, but yes, that should do it.

[18:48] <Zoffix> Weird that rakudo#44 doesn't work. Even tho there's an :i switch

[18:49] <AlexDaniel`> ouch

[18:50] <AlexDaniel`> hmm rakudo#100

[18:50] <AlexDaniel`> hmm rakudo#1202

[18:51] <Zoffix> m: my %URLS = :42FOO; say "foo#42" ~~  m:ex/:i « (@(%URLS.keys)) \s* '#' \s* (<[0..9]>**{2..6}) »/

[18:51] <camelia> rakudo-moar b19e352ec: OUTPUT: «(｢foo#42｣␤ 0 => ｢foo｣␤ 1 => ｢42｣)␤»

[18:51] <Geth> ¦ synopsebot: f57f96bcdd | (Zoffix Znet)++ (committed using GitHub Web editor) | lib/SB/Plugin/GitHub.pm6

[18:51] <Geth> ¦ synopsebot: normalize prefix

[18:51] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/f57f96bcdd

[18:52] <Zoffix> rakudo#100

[18:52] <synopsebot> RAKUDO#100 [closed]: https://github.com/rakudo/rakudo/pull/100 Typename suggestions: in signatures, declarations, return types, ...

[18:52] <Zoffix> k; it was just not finding proper URL to visit

[18:52] <AlexDaniel`> but why?

[18:52] <AlexDaniel`> ah

[18:56] <Zoffix> weird spectest looked "hung" on macos with my fix I pressed enter a few times and it looked to continue... Wonder if it's sleep mode, glitch due to this being a connection through like 4 different boxes, or if it's waiting for ENTER to be pressed :/

[18:57] <Zoffix> don't look like any tests that touch filehandles, so I'm leaning towards 4-boxes option

[19:00] <stmuk> I was having more success on that system with TEST_JOBS=3

[19:02] <Zoffix> using 2 ATM

[19:40] <[Coke]> Zoffix: one failure on that branch with spectest:

[19:40] <[Coke]> t/spec/S32-num/int.t

[19:41] <Zoffix> [Coke]: which tests?

[19:41] <[Coke]> not ok 1 - returns a new object (not a cached constant)

[19:41] <[Coke]> which I think is also you, but not this change.

[19:41] <Zoffix> [Coke]: is it possible your rakudo is older than 1 day? That fix went in last night

[19:41] <Zoffix> like 24h ago

[19:41] <[Coke]> ... oh. the new test isn't on roast master, so I didn't run that one.

[19:42] <Zoffix> ./perl6 -e '$*IN.eof.say; $*IN.slurp.say; $*IN.eof.say'

[19:42] <[Coke]> ah, yes, running a day old rakudo build.

[19:42] <Zoffix> Run that, type something, it should print: "False\nyour something you typed\nTrue"

[19:43] <Zoffix> (taht's what the test in the branch does)

[19:43] <[Coke]> yup

[19:43] <Zoffix> \o/

[19:45] <Zoffix> OK. On st muk's laptop, I get the same failures with my patch as with HEAD yesterday: https://gist.github.com/zoffixznet/c5bba6127ef20b5c16db91becaa28cdf

[19:45] <Zoffix> So imma wait for travis to clear that MoarVM PR and then merge and bump

[19:53] <Zoffix> um, looks like the new test hangs on macos, tho it's most likely the `script` args. Gonna poke at it in ~2h

[19:53] * Zoffix &

[20:00] <AlexDaniel`> fwiw the release is not gonna make it today I think

[20:16] <stmuk> today which TZ?

[20:26] <AlexDaniel`> UTC-12⌁UTC+14

[20:26] <Zoffix> Also why? As in, is there something I should look at this evening?

[20:27] <AlexDaniel`> Zoffix: maybe, one sec

[20:28] <AlexDaniel`> Zoffix: https://github.com/tokuhirom/p6-WebSocket/issues/15#issuecomment-339120879

[20:30] <Zoffix> k

[20:31] <AlexDaniel`> I tried with RAKUDO_SCHEDULER_DEBUG=1 and RAKUDO_SCHEDULER_DEBUG_STATUS=1 but it didn't really give me any clues

[20:35] <AlexDaniel`> if I recall correctly jnthn may be back late Wed, and I'll be available again around the same time

[20:41] <AlexDaniel`> stmuk: any reason why you want the release to happen asap? :) I mean, we could've released it on Saturday, but then wasn't it you who was struggling with patches for outstanding bugs in releases?

[20:43] <AlexDaniel`> also, last two times we were a bit too fast, so there were some point releases. So IMO being a few days off is better than having a sloppy release.

[20:44] <stmuk> AlexDaniel`: I'd rather the release be solid than fast

[20:48] <AlexDaniel`> .tell jnthn if it happens that you come back before we figure it out, here is a thing to look at https://github.com/tokuhirom/p6-WebSocket/issues/15#issuecomment-339120879 (the release was delayed for other reasons anyway, so would be great to fix this thing also)

[20:48] <yoleaux> AlexDaniel`: I'll pass your message to jnthn.

[20:49] <AlexDaniel`> .tell samcv in case you miss the discussion: https://irclog.perlgeek.de/perl6-dev/2017-10-24#i_15348425

[20:49] <yoleaux> AlexDaniel`: I'll pass your message to samcv.

[20:49] <samcv> hello

[20:49] <yoleaux> 20:49Z <AlexDaniel`> samcv: in case you miss the discussion: https://irclog.perlgeek.de/perl6-dev/2017-10-24#i_15348425

[20:50] <samcv> thank you :)

[20:50] <AlexDaniel`> that assuming that https://github.com/MoarVM/MoarVM/pull/731 is finally nailed :)

[20:53] * AlexDaniel` calls it a day

[20:53] <AlexDaniel`> have a nice * everyone

[20:53] <samcv> have a nice * too

[20:54] <[Coke]> ~~

[20:58] <[Coke]> samcv: any opinion on removing the non-proc::async path for doc highlighting?

[20:59] <samcv> i'm not opposed to it as long as it works on mac and linux and maybe windows

[20:59] <[Coke]> we're definitely using the async path on windows, it works on mac now that I've fixed it.

[21:00] <[Coke]> I don't think anyone is using windows to build the docs atm, but could be wrong.

[21:00] <[Coke]> er. that first windows should be linux

[21:44] <Zoffix> Weird. This sits and waits on MacOS and I think it makes sense (.Bool `await`s the proc while the proc sits waiting for stdin things to happen), but on Linux it doesn't do that and the test completes : https://gist.github.com/zoffixznet/62f1f45c6afb32a83721a52b745466f4

[21:46] <Zoffix> Completes, but with output that's missing .slurp: # Got STDOUT: "False\n\nTrue\n"

[21:46] <Zoffix> Like looks like the awaition just said fuggit about waiting for STDIN to close and just moved on with its life

[21:48] <Geth> ¦ roast/fix-macos-eof: e330e9a6b9 | (Zoffix Znet)++ | S16-io/eof.t

[21:48] <Geth> ¦ roast/fix-macos-eof: Fix test's failure mode

[21:48] <Geth> ¦ roast/fix-macos-eof:

[21:48] <Geth> ¦ roast/fix-macos-eof: On failure, it diag()s the received output, but diag returns True,

[21:48] <Geth> ¦ roast/fix-macos-eof: causing the failed test to succeed

[21:48] <Geth> ¦ roast/fix-macos-eof: review: https://github.com/perl6/roast/commit/e330e9a6b9

[21:49] <Geth> ¦ roast/fix-macos-eof: fd9d9a2117 | (Zoffix Znet)++ | packages/Test/Util.pm

[21:49] <Geth> ¦ roast/fix-macos-eof: Reword proc launch

[21:49] <Geth> ¦ roast/fix-macos-eof:

[21:49] <Geth> ¦ roast/fix-macos-eof: We can't .Bool a Proc as that'll cause its `await`ion before

[21:49] <Geth> ¦ roast/fix-macos-eof: we sent stuff to STDIN

[21:49] <Geth> ¦ roast/fix-macos-eof: review: https://github.com/perl6/roast/commit/fd9d9a2117

[22:05] <Zoffix> booo... this year's Hacktoberfest shirts are uggo

[22:06] <Zoffix> they come in burn-out-your-retina blue with weird silver design https://i.imgur.com/0ZN7ml9.png

[22:06] <Zoffix> (what's with the wheat designs?)

[22:08] <samcv> wow that's bad Zoffix

[22:08] <samcv> suddenly i don't want one anymore

[22:08] <Zoffix> :P

[22:08] <samcv> maybe that's their secret plan

[22:11] <Zoffix> ZOFFLOP: t/spec/S11-modules/nested.t

[22:12] <Zoffix> t/spec/S17-channel/stress.t took ages again: 278s total stresstest time

[22:13] <Geth> ¦ nqp: 8fa082b269 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[22:13] <Geth> ¦ nqp: Bump MoarVM

[22:13] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/8fa082b269

[22:13] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.09.1-614-g19523568...2017.09.1-621-g27f9134

[22:13] <Geth> ¦ rakudo/nom: eb1febd565 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[22:13] <Geth> ¦ rakudo/nom: Bump NQP

[22:13] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/eb1febd565

[22:13] <Geth> ¦ rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2017.09-119-g4494e7049...2017.09-136-g8fa082b

[22:13] <Geth> ¦ roast: zoffixznet++ created pull request #349: Fix macos eof

[22:13] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/349

[22:13] <Geth> ¦ roast: cb7ec603cc | (Zoffix Znet)++ (committed using GitHub Web editor) | 2 files

[22:13] <Geth> ¦ roast: Fix macos eof (#349)

[22:13] <Geth> ¦ roast:

[22:13] <Geth> ¦ roast: * Test .eof on TTY handles works right

[22:13] <Geth> ¦ roast:

[22:13] <Geth> ¦ roast: RT#132349: https://rt.perl.org/Ticket/Display.html?id=132349

[22:13] <Geth> ¦ roast:

[22:13] <Geth> ¦ roast: * Fix test's failure mode

[22:13] <synopsebot> RT#132349 [open]: https://rt.perl.org/Ticket/Display.html?id=132349 [REGRESSION] $*IN.getc not blocking on macOS

[22:13] <Geth> ¦ roast: <…commit message has 8 more lines…>

[22:13] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/cb7ec603cc

[22:21] <Zoffix> ZOFFLOP: t/spec/S11-modules/require.t

[22:22] <Zoffix> ZOFVM: Files=1283, Tests=152772, 155 wallclock secs (20.96 usr  3.16 sys + 3349.06 cusr 164.05 csys = 3537.23 CPU)

[23:07] <Zoffix> Made a bit of a mod to my shell prefix line. Made it possible to label terminals so I know wtf each one is about when I got a bunch open: https://i.imgur.com/ncdMg7M.png

[23:08] <Zoffix> Relevant part of ~/.bashrc: https://gist.github.com/zoffixznet/1724806021373adad28213d3cc5affc1

[23:09] <Zoffix> .oO( include perl6 version... )

[23:18] <Zoffix> neat: https://i.imgur.com/1iqQc4w.png  code: https://gist.github.com/zoffixznet/f2a1b686ab4031a98ed658ce428ba529

[23:19] <Zoffix> our start time is noticable tho :P

[23:58] <timotimo> any reason you're not using perl6 --version instead?

[23:59] <timotimo> that's a whole lot faster
