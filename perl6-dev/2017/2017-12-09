[06:58] <pmurias> samcv: isn't using a mistyped unicode property always an error?

[07:02] <pmurias> samcv: we could make it an error in 6.d and a error in 6.d if we are paranoid about backwars compability, but I'm not sure if we care about bug-for-bug compability in unspecced usage yet

[07:09] <Geth> ¦ roast: 7ef1e2cf34 | pmurias++ | 2 files

[07:09] <Geth> ¦ roast: Separate contributory properties in their own file

[07:09] <Geth> ¦ roast:

[07:09] <Geth> ¦ roast: They can be deprecated/removed easier this way.

[07:09] <Geth> ¦ roast: They are almost useless and are supposed to be internal to the unicode standard.

[07:09] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7ef1e2cf34

[07:14] <AlexDaniel> releasable6: next

[07:14] <releasable6> AlexDaniel, Next release in 7 days and ≈11 hours. No blockers. 0 out of 78 commits logged

[07:14] <releasable6> AlexDaniel, Details: https://gist.github.com/176e3f041a9bd40ea9bb54adb59a041a

[08:09] <samcv> pmurias: well i'm okay with it in 6.d, to make it a compile time or runtime error

[12:06] <gfldex> m: constant \s = :(:%h (:$a));

[12:06] <camelia> rakudo-moar 1dbf5f589: OUTPUT: «===SORRY!===␤QAST::Block with cuid 1 has not appeared␤»

[12:07] <gfldex> are subsigs in signature literals meant to work?

[12:08] <gfldex> m: constant \s = :();

[12:08] <camelia> rakudo-moar 1dbf5f589: OUTPUT: «===SORRY!===␤QAST::Block with cuid 1 has not appeared␤»

[12:08] <gfldex> m: my \s = :();

[12:08] <camelia> rakudo-moar 1dbf5f589: ( no output )

[12:08] <gfldex> i'm pretty sure a signature literal is quite constant

[12:15] <gfldex> filed as https://github.com/rakudo/rakudo/issues/1301

[12:16] <gfldex> What I actually wanted to do was using that signature literal as a sub sig in another sig. Is that a planned feature?

[12:22] <MasterDuke> hm, i remember someone else asking a similar question somewhat recently, i think in #perl6

[12:22] <MasterDuke> i believe jnthn had an answer, but don't remember what it was

[12:23] <MasterDuke> might be able to find something in the logs

[12:30] <jnthn> gfldex: Just for matching? If so, where $the-signature would do it

[12:30] <jnthn> If you want it for the declarations - no, and we don't have a syntax for that for now, and it perhaps falls under the category of stuff I'd punt macro-wards

[12:39] <dogbert17> perhaps the wrong place to ask but are there any known problems with the module IO::Socket::Async::SSL? I get test failures when installing.

[12:40] <dogbert17> I get # Failed test 'Sending non-SSL to SSL socket does not hang (connection closed)'

[12:40] <dogbert17> # at t/bad-incoming.t line 25

[12:40] <dogbert17> and then the testing and/or Zef hangs

[16:45] <tbrowder> .tell thou can’t you push the twine change as a branch? it would be easier to play with it i think.

[20:55] <[TuxCM]> Rakudo version 2017.11-78-g1dbf5f589 - MoarVM version 2017.11-28-gba1fb9542

[20:55] <[TuxCM]> csv-test-xs-20      0.435 -  0.445

[20:55] <[TuxCM]> csv-ip5xs           1.070 -  1.070

[20:55] <[TuxCM]> test-t --race       1.215 -  1.308

[20:55] <[TuxCM]> test-t              2.827 -  2.864

[20:55] <[TuxCM]> test               11.453 - 11.472

[20:55] <[TuxCM]> csv-parser         11.587 - 11.768

[20:55] <[TuxCM]> csv-ip5xs-20       12.297 - 12.650

[20:55] <[TuxCM]> test-t-20 --race   17.487 - 18.821

[20:55] <[TuxCM]> test-t-20          51.353 - 51.647

[20:58] <Geth> ¦ nqp: 3a6745f3d4 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/sixmodel/reprs/MultiCacheInstance.java

[20:58] <Geth> ¦ nqp: [jvm] Whitespace cleanup

[20:58] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/3a6745f3d4

[20:58] <Geth> ¦ nqp: 47db26dfd0 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/sixmodel/reprs/MultiCacheInstance.java

[20:58] <Geth> ¦ nqp: [jvm] Return early if no positional arg was found

[20:58] <Geth> ¦ nqp:

[20:58] <Geth> ¦ nqp: Also tweak comments a bit.

[20:58] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/47db26dfd0

[20:58] <Geth> ¦ nqp: 7eaebf5abd | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/sixmodel/reprs/MultiCacheInstance.java

[20:58] <Geth> ¦ nqp: [jvm] Fix off-by-one in multi cache

[20:58] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/7eaebf5abd

[21:01] <Geth> ¦ nqp: a7a0f674e6 | (Christian Bartolomäus)++ (committed using GitHub Web editor) | src/vm/jvm/runtime/org/perl6/nqp/sixmodel/reprs/MultiCacheInstance.java

[21:01] <Geth> ¦ nqp: Fix typo in comment

[21:01] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/a7a0f674e6
