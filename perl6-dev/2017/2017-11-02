[00:04] <Geth> ¬¶ rakudo: d21c31e1d7 | (Elizabeth Mattijsen)++ | lib/Telemetry.pm6

[00:04] <Geth> ¬¶ rakudo: Add Telemetry msgsnd,msgrcv,nsignals,nvcsw,invcsw

[00:04] <Geth> ¬¶ rakudo:

[00:04] <Geth> ¬¶ rakudo: - Also add invcsw (involuntary context switches) to default report

[00:04] <Geth> ¬¶ rakudo:   - this shows some data, at least on MacOS

[00:04] <Geth> ¬¶ rakudo: - This concludes all the fields in nqp::getrusage (*phew*)

[00:04] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/d21c31e1d7

[00:06] <lizmat> and that concludes my hacking for today

[00:06] <lizmat> .tell gfldex hope this is enough to write a nice blogpost about Telemetry :-)

[00:06] <yoleaux> lizmat: I'll pass your message to gfldex.

[00:06] <lizmat> good night, #perl6-dev!

[00:19] <Zoffix> \o

[00:49] * Zoffix commits to remaking the entire Introducing Perl 6 brochure

[00:50] <Zoffix> Took me half a year to realize I don't have to use $work's tiny laptop to work remotely and instead can remote-desktop into it from my desktop with giant monitor. So I now have proper hardware for design software when I'm hope :P

[00:50] <Zoffix> *home

[00:50] <timotimo> oh, nice

[00:51] <timotimo> but what's wrong about inkscape!!! (lol omg)

[00:52] <Zoffix> No idea. Never used it. Out of free tools, I've used Scribus 5 years ago and it kept crashing.

[00:53] <Zoffix> Or making 1GB PDFs :)

[00:53] <timotimo> fair enough

[00:53] <timotimo> inkscape's UI has been in desperate need of a new UI for a long long time

[00:53] <timotimo> there are people capable of doing spectacular things with it, of course

[01:16] <travis-ci> Rakudo build passed. Elizabeth Mattijsen '-Inf .. Inf should be NaN, not 0'

[01:16] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/295829183 https://github.com/rakudo/rakudo/compare/5eeb72a9f514...21efe96ffb9d

[01:42] <samcv> good * everybody

[01:50] <timotimo> yo samcv

[01:50] <samcv> hey

[01:51] <samcv> timotimo, what do you think of a function for composing ropes. that we could use in concatenation and other functions. so you initialize an MVMstruct for the string, and the ncall a function to add strands onto it. where would that be a good place to use other than join and concatenation functions? anywhere else where that would be benefictial?

[01:53] <timotimo> if you include repetitions, then the x operator maybe?

[01:59] <samcv> well. we're not talking about the x operator

[02:00] <timotimo> other than that i have no good ideas

[02:02] <samcv> https://gist.github.com/samcv/5c2eb18fa5d4d428c081ab3e8bca8fc4 something like this

[02:02] <samcv> a mvm function that would let us easily compose ropes

[02:03] <timotimo> i can see the appeal

[02:04] <samcv> one of the things i noticed is it's not trivial to compose ropes. we have concatenation but nothing else really does it. so i'm thinking if i have enough reasons for doing this

[02:04] <samcv> it may be worth it to add these functions

[02:07] <samcv> i'm basically asking someone to convince me i should do this :)

[02:12] <timotimo> the code looks good. it'll probably come out the same after gcc throws all its optimizations at it, but it's likely less error-prone

[02:18] <timotimo> i'm going to bed, seeya!

[02:34] <Zoffix> Man, I'm feeling the pain with all our Unicode ops and Unicode in outpout (e.g ÔΩ¢ÔΩ£). Even Noto font doesn't render them in InDesign; looks like whatever fallback mechanism usually exist doesn't work in typesetting software :(

[02:37] <Zoffix> Finally managed to typeset this snippet with 3 fonts :P https://gist.github.com/zoffixznet/a4f23c4c647feaadbbe9ded22f514f5a

[02:39] <Zoffix> Doesn't quite work still, 'cause I wanted to highlight it but can't apply two char styles together :|

[06:24] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'More Telemetry additions

[06:24] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/295954168 https://github.com/rakudo/rakudo/compare/5e7dfe52fd6c...3b4f0c6ceb20

[07:12] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Increase the size of gtc/ttc, gfldex++'

[07:12] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/295979112 https://github.com/rakudo/rakudo/compare/7144dc290c48...73e1faaa713b

[07:30] <gfldex> .

[07:30] <yoleaux> 00:06Z <lizmat> gfldex: hope this is enough to write a nice blogpost about Telemetry :-)

[07:32] <gfldex> .tell lizmat could you make %format available to members of the public please?

[07:32] <yoleaux> gfldex: I'll pass your message to lizmat.

[07:34] <bartolin> samcv: it looks like we have a regression with some tests for "\c[BELL]" on jvm. I think that might be related to your recent work on control characters (nqp commit 7954f9b0c1).

[07:34] <bartolin> m: say "\c[BELL]".uniname  # gives <control-0007> on jvm

[07:34] <camelia> rakudo-moar d21c31e1d: OUTPUT: ¬´BELL‚ê§¬ª

[07:35] <bartolin> samcv: I believe that happens because nqp::ord("\c[BELL]") returns 7 on jvm

[07:36] <bartolin> samcv: do you have a pointer, perhaps, how "\c[BELL]" is processed?

[07:40] <bartolin> samcv: I've read through RT #130542 and if I understood correctly, BELL is a special case, because it was U+0007 in Unicode 1. So, maybe we need to add a correcsponding special case somewhere. (I saw that you already did that for nqp::codepointfromname in nqp commit deb8cb03e.)

[07:40] <synopsebot> RT#130542 [resolved]: https://rt.perl.org/Ticket/Display.html?id=130542 [JVM] [UNI] \c[BELL] returns the U+0007 control code not U+1F514 BELL

[07:40] <lizmat> Files=1229, Tests=75811, 318 wallclock secs (14.79 usr  5.38 sys + 2198.71 cusr 212.47 csys = 2431.35 CPU)

[07:40] <yoleaux> 07:32Z <gfldex> lizmat: could you make %format available to members of the public please?

[07:41] <lizmat> gfldex: I see that as an implementation detail, what would you like to achieve by that ?

[07:41] <bartolin> samcv: ah, one last thing: I've seen those failing tests in S32-str/parse-names.t

[07:41] <bartolin> work &

[08:00] <gfldex> lizmat: I would like to display the descriptions.

[08:02] <gfldex> lizmat: and when %format is exported &report could get a :$format

[08:08] <samcv> bartolin, oh there's failing tests?

[08:17] <bartolin> samcv: here is a gist of runnning S32-str/parse-names.t with a current rakudo-j: https://gist.github.com/usev6/2e15b87350d481eb73905bfc3ae9f952

[08:18] <samcv> bartolin, on jvm?

[08:18] <samcv> ah ok

[08:18] <bartolin> *nods*

[08:18] <bartolin> the tests are fine on moar

[08:18] <samcv> well. it's due to utf8-16

[08:18] <samcv> err utf-18

[08:19] <samcv> *16

[08:19] <bartolin> *g*

[08:20] <bartolin> those tests have been passing before, though (didn't bisect, but I thought it might happen since https://github.com/perl6/nqp/commit/7954f9b0c1

[08:35] <gfldex> m: class T does Associative { method AT-KEY(\k) { 42 but role :: { method desc { "answer" } } } }; say T.new<foo>.desc

[08:35] <camelia> rakudo-moar d21c31e1d: OUTPUT: ¬´answer‚ê§¬ª

[08:35] <gfldex> lizmat: maybe with a sneaky ‚Üë‚Üë‚Üë role?

[09:04] <Geth> ¬¶ rakudo: 0dc4a0ebad | (Elizabeth Mattijsen)++ | lib/Telemetry.pm6

[09:04] <Geth> ¬¶ rakudo: Telemetry tweaks #1 for today

[09:04] <Geth> ¬¶ rakudo:

[09:04] <Geth> ¬¶ rakudo: - handle 0 wallclock better, apparently Windows has bigger granularity

[09:04] <Geth> ¬¶ rakudo: - add initial memory size (max-rss) to report

[09:04] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/0dc4a0ebad

[09:19] <lizmat> m: multi sub a(:@c is copy) { }; a   # WOW, something we forgot in the GLR

[09:19] <camelia> rakudo-moar 0dc4a0eba: OUTPUT: ¬´replace this Array is copy logic‚ê§  in sub a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:21] <lizmat> https://github.com/rakudo/rakudo/blob/master/src/Perl6/Metamodel/BOOTSTRAP.nqp#L443

[09:27] <jnthn> Wow!

[09:27] <jnthn> I see it's a highly used feature ;)

[09:28] <lizmat> apparently  :-)

[09:29] <lizmat> oddly enough, uncommmenting the following lines appears to make it work

[09:30] * lizmat runs a spectest just in case

[09:30] <samcv> hah wow

[09:30] <lizmat> jnthn: do you see anything obviously wrong with the code ?

[09:32] <jnthn> Not immediately

[09:32] <lizmat> basically the same code as for :%h is copy

[09:32] <samcv> lizmat, looks like more in Any.pm

[09:32] <samcv> XXX GLR comments

[09:32] <lizmat> yeah, those I know about  :-)

[09:33] <lizmat> I think :-)

[09:37] <lizmat> m: sub a(:@c is copy) { }; a

[09:37] <camelia> rakudo-moar 0dc4a0eba: ( no output )

[09:38] <lizmat> jnthn: apparently only in the case of a multi sub

[09:38] <Geth> ¬¶ rakudo: be1e2879f3 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/BOOTSTRAP.nqp

[09:38] <Geth> ¬¶ rakudo: Make multi sub(:@c is copy) { } work

[09:38] <Geth> ¬¶ rakudo:

[09:38] <Geth> ¬¶ rakudo: Apparently this was looked over during the GLR

[09:38] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/be1e2879f3

[09:43] <[TuxCM]> Rakudo version 2017.10-95-g0dc4a0eba - MoarVM version 2017.10-29-g116c7a13

[09:43] <[TuxCM]> csv-test-xs-20      0.423 -  0.465

[09:43] <[TuxCM]> csv-ip5xs           1.105 -  1.109

[09:43] <[TuxCM]> test-t              3.244 -  3.284

[09:43] <[TuxCM]> test               11.907 - 12.084

[09:43] <[TuxCM]> csv-parser         12.537 - 12.638

[09:43] <[TuxCM]> csv-ip5xs-20       12.873 - 12.938

[09:43] <[TuxCM]> test-t-20 --race   19.891 - 19.975

[09:43] <[TuxCM]> test-t-20          58.383 - 58.828

[09:47] <Geth> ¬¶ rakudo: c2baf95e1b | (Elizabeth Mattijsen)++ | lib/Telemetry.pm6

[09:47] <Geth> ¬¶ rakudo: Telemetry tweaks #2 for today

[09:47] <Geth> ¬¶ rakudo:

[09:47] <Geth> ¬¶ rakudo: - "columns" is now a named parameter to "report"

[09:47] <Geth> ¬¶ rakudo:   - specify the columns you want to see, either by header or method name

[09:47] <Geth> ¬¶ rakudo: - %*ENV<RAKUDO_REPORT_COLUMNS> can now be used to set columns you want to see

[09:47] <Geth> ¬¶ rakudo:   - if you don't specify any columns in the call to "report"

[09:47] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/c2baf95e1b

[09:48] <lizmat> afk for a few hours&

[10:00] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Add Telemetry is-rss,min-flt,maj-flt,nswap,inblock,outblock

[10:00] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/296009383 https://github.com/rakudo/rakudo/compare/91e00e680174...96751ee87c93

[10:35] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Normalize all Telemetry x-rss to Kbytes

[10:35] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/296013392 https://github.com/rakudo/rakudo/compare/96751ee87c93...7e00908cb272

[11:33] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Add Telemetry msgsnd,msgrcv,nsignals,nvcsw,invcsw

[11:33] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/296023846 https://github.com/rakudo/rakudo/compare/7e00908cb272...d21c31e1d723

[11:33] <buggable> [travis build above] ‚úì All failures are due to: GitHub connectivity (1 failure).

[12:25] <Zoffix> .tell timotimo there looks to be a stale PR by you to mp6o: https://github.com/perl6/modules.perl6.org/pull/86/files IIRC the problem with it was that data fetcher doesn't fetch travis files

[12:25] <yoleaux> Zoffix: I'll pass your message to timotimo.

[12:27] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Telemetry tweaks #1 for today

[12:27] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/296164052 https://github.com/rakudo/rakudo/compare/d21c31e1d723...0dc4a0ebad21

[12:46] <Zoffix> Some feedback on our state: https://www.reddit.com/r/perl/comments/79wjtz/what_are_the_most_disliked_programming_languages/dp6r8j7/

[12:49] <lizmat> m: class A { has Int @.a[4] = die }; dd A.new   # clearly the initializer is not being run

[12:49] <camelia> rakudo-moar c2baf95e1: OUTPUT: ¬´A.new(a => Array[Int].new(:shape(4,), [Int, Int, Int, Int]))‚ê§¬ª

[12:50] <lizmat> m: class A { has Int @.a[4] is required }; dd A.new   # not even the required check ???

[12:50] <camelia> rakudo-moar c2baf95e1: OUTPUT: ¬´A.new(a => Array[Int].new(:shape(4,), [Int, Int, Int, Int]))‚ê§¬ª

[12:50] <pmurias> Zoffix: re hard to navigate the docs search sucks

[12:51] <Zoffix> pmurias: ok, good. That's one of the things that'll be improved by the redesign.

[12:52] <Zoffix> That post actual points out a counter-point to people who say a new name for the language will nullify google results. It's actually a good thing in this case, where the user's saying they're getting outdated results :P

[12:53] <lizmat> m: class A { has %.a is BagHash is required }; dd A.new  # looks like "is required" is a noop in these cases  :-(

[12:53] <camelia> rakudo-moar c2baf95e1: OUTPUT: ¬´A.new(a => ().BagHash)‚ê§¬ª

[12:54] * Zoffix &

[12:54] <pmurias> Zoffix: keeping the renaming debate in #perl6 out of #perl6-dev seems like a good idea ;)

[12:54] <Zoffix> pmurias: why?

[12:54] <Zoffix> To me, the reverse is true.

[12:55] <Zoffix> The devs are the ones who should be the most involved in the discussion that concerns the marketing of this thing we're making.

[12:57] <Zoffix> This is the boardroom with all the directors. You're making it seem like the suggestion to move the marketing discussions to the customer service deparment :)

[12:57] * Zoffix leaves to do @urgent-things

[13:11] <Zoffix> pmurias: oh and there's an easy way to reduce the amount of these discussions. Resolve the 6.d blocker so we could move forward with 6.d release: https://github.com/perl6/6.d-prep/blob/master/TODO/FEATURES.md#need-a-way-to-know-callers-language  The naming debate culminates then.

[13:24] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Make multi sub(:@c is copy) { } work

[13:24] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/296175854 https://github.com/rakudo/rakudo/compare/0dc4a0ebad21...be1e2879f37e

[14:22] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'Telemetry tweaks #2 for today

[14:22] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/296179262 https://github.com/rakudo/rakudo/compare/be1e2879f37e...c2baf95e1b37

[15:10] <Geth> ¬¶ rakudo: 9f54bc989d | (Elizabeth Mattijsen)++ | src/core/Exception.pm

[15:10] <Geth> ¬¶ rakudo: Add X::NYI.workaround

[15:10] <Geth> ¬¶ rakudo:

[15:10] <Geth> ¬¶ rakudo: So we can give workaround information if necessary

[15:10] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/9f54bc989d

[15:31] <Geth> ¬¶ rakudo: 0973b307ad | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/BUILDPLAN.nqp

[15:31] <Geth> ¬¶ rakudo: Temporary fix for GH #1226

[15:31] <Geth> ¬¶ rakudo:

[15:31] <Geth> ¬¶ rakudo: - throw an X::Comp::NYI for buildplan code 9 with a 4,5,6,7

[15:31] <Geth> ¬¶ rakudo: - show a work around

[15:31] <Geth> ¬¶ rakudo:

[15:31] <Geth> ¬¶ rakudo: Can't help but wonder that if we recommend this workaround, why not

[15:31] <synopsebot> RAKUDO#1226 [open]: https://github.com/rakudo/rakudo/issues/1226 Broken default value assignment on shaped array attributes

[15:31] <Geth> ¬¶ rakudo: automatically generate that code then?  This could be done by adding

[15:31] <Geth> ¬¶ rakudo: another code block like TWEAK to the BUILDPLAN, with the correct

[15:31] <Geth> ¬¶ rakudo: code pre-generated.

[15:31] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/0973b307ad

[15:43] <Zoffix> m: class F { has @.color[4]; submethod TWEAK (:@!color = <1 2 3 4>) {} }; F.new.color.say; # shorter FWIW

[15:43] <camelia> rakudo-moar 9f54bc989: OUTPUT: ¬´[1 2 3 4]‚ê§¬ª

[15:44] <lizmat> m: class F { has @.color[4]; submethod TWEAK (:@!color = <1 2 3 4>) {} }; F.new(color => <f g h i>).color.say;

[15:44] <camelia> rakudo-moar 9f54bc989: OUTPUT: ¬´[f g h i]‚ê§¬ª

[15:45] <lizmat> ah, good point !

[15:52] <Geth> ¬¶ rakudo: 6dab5aad89 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/BUILDPLAN.nqp

[15:52] <Geth> ¬¶ rakudo: Improve GH #1226 workaround suggestion, Zoffix++

[15:52] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/6dab5aad89

[15:52] <synopsebot> RAKUDO#1226 [open]: https://github.com/rakudo/rakudo/issues/1226 Broken default value assignment on shaped array attributes

[15:54] * Zoffix wonders if that'll make it come out as `(:@.color ‚Ä¶` instead of @! twigil

[15:55] <lizmat> 'class F { has @.color[4] = <1 2 3 4> }' comes out as 'method TWEAK(:@!color = (initial values)) { }' for me

[15:56] <Zoffix> \o/

[15:59] <lizmat> m: use Telemetry; say T<max-rss>

[15:59] <camelia> rakudo-moar 0973b307a: OUTPUT: ¬´91504‚ê§¬ª

[15:59] <lizmat> m: use Telemetry; say T<max-rss>

[15:59] <camelia> rakudo-moar 0973b307a: OUTPUT: ¬´87740‚ê§¬ª

[15:59] <lizmat> wonder where these differences come from

[16:00] <lizmat> m: use Telemetry :COLUMNS; say max-rss   # wow

[16:00] <camelia> rakudo-moar 0973b307a: OUTPUT: ¬´116860‚ê§¬ª

[16:00] <ugexe> what does it mean if there is no max-rss?

[16:00] <yoleaux> 08:54Z <tbrowder> ugexe: how can i get a local install of rakudo to find Debugger::UI::CommandLine (and its dependencies) in system-wide COMPUNITS? alternatively, how can i get zef to ‚Äîinstall-to=/some/path?

[16:01] <lizmat> ugexe: that your OS doesn't support it

[16:01] <lizmat> http://man7.org/linux/man-pages/man2/getrusage.2.html

[16:01] <ugexe> lizmat: on osx for 1..10 { snap } shows max-rss twice but the rest are blank

[16:02] <lizmat> ah, blank means no change, it hides 0 as that makes for a very noisy overview

[16:02] <ugexe> i see, same for ics/gw/etc?

[16:02] <lizmat> yup

[16:03] <lizmat> otherwise you're just looking at a page with 0's

[16:03] <lizmat> and some none zero values

[16:03] <Zoffix> tbrowder: what I usually do is run Step 12 from the release guide except for the last `zef install ...` replaced with the module I need: https://github.com/rakudo/rakudo/blob/nom/docs/release_guide.pod

[16:07] <tbrowder> Zoffix: thanks! BTW, any updates to yr markdown to html for advent entries since last year?

[16:10] <Zoffix> Nope. I'm not sure where the code is at even. Probably can be improved a bit and shared with all the authors.

[16:21] <Zoffix> So yesterday I was whinging because there wasn't an easy way to style code parts in InDesign to have syntax highlights. Turns out it supports PCRE in paragraph styles to apply substyles. And a bunch of regex hackery later, I managed to make a single paragraph style that reasonably-well highlights Perl 6 code up in it: https://i.imgur.com/1GsZsBZ.png

[16:21] <Zoffix> Not that anyone here cares about InDesign, but it'll make creating marketing brochures with code about 1000x faster :)

[16:22] <Zoffix> ZofBot: do the happy dance, bud

[16:22] <ZofBot> Zoffix, 'Would you have done all that for me?' she said

[16:22] <Zoffix> For you, I would've!

[16:24] <timotimo> the other day i was trying something with List

[16:25] <timotimo> the reason why i even started trying the nqp::attrinited stuff on List was that $!todo.DEFINITE will autovivify a Scalar container even for a List object that'll never have (and never had) an iterator part

[16:26] <timotimo> so this is perhaps an opportunity for improvement. though maybe we actually want to do this in the optimizer

[16:38] <lizmat> hmmm... good one

[16:38] <timotimo> okay, so ...

[16:38] <timotimo> i outputted every "demanded" object and stable with Telemetry vs Telemetry :COLUMNS

[16:39] <timotimo> and with :COLUMNS it's actually fewer things in there

[16:39] <timotimo> it could be that more stuff hangs off of these, though

[16:44] <timotimo> nope, even with the work loop itself instrumented it's fewer things if :COLUMNS is specified

[16:44] <timotimo> time for the heap analyzer

[16:48] <timotimo> nothing very obvious

[17:05] <Geth> ¬¶ rakudo: e1a1b8d865 | (Elizabeth Mattijsen)++ | lib/Telemetry.pm6

[17:05] <Geth> ¬¶ rakudo: Add support for Telemetry affinity-tasks-completed

[17:05] <Geth> ¬¶ rakudo:

[17:05] <Geth> ¬¶ rakudo: - also add this to the default report

[17:05] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/e1a1b8d865

[17:14] <jnthn> Urgh, a bug I've been hunting for the last few hours might boil down to something wrong with the CLOSE phaser

[17:16] <lizmat> whee

[17:17] <lizmat> also: if you can't start another thread, should we act on that somehow more than just ignoring ?

[17:18] <jnthn> In what sense?

[17:18] <jnthn> Thread.start explodes pretty forcefully, and perhaps too much so, if it fails

[17:19] <jnthn> (It's a VM panic)

[17:19] <lizmat> m: await start { sleep 1 } xx 64; say T.general-workers  # never goes beyond 47 for me

[17:19] <camelia> rakudo-moar e1a1b8d86: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    T used at line 1‚ê§‚ê§¬ª

[17:19] <lizmat> m: use Telemetry; await start { sleep 1 } xx 64; say T.general-workers  # never goes beyond 47 for me

[17:19] <camelia> rakudo-moar e1a1b8d86: OUTPUT: ¬´MoarVM panic: Could not spawn thread: errorcode -11‚ê§¬ª

[17:19] <lizmat> ooh wow

[17:19] <jnthn> That's 'cus of limits in the environment camelia runs under

[17:19] <lizmat> on MacOS it just says 47

[17:20] <lizmat> if run with RAKUDO_SCHEDULER_DEBUG, I get a lot of: Heuristic queue progress deadlock situation detected

[17:20] <lizmat> followed by Could not create a new Thread: too many open files

[17:20] <jnthn> Ah

[17:20] <jnthn> Well, I think it's probably doing the right thing

[17:21] <jnthn> No reason to bring down a program that will eventually work

[17:21] <jnthn> Instead of leaving it to complete

[17:24] <Zoffix> I still get "too many open files" even if I set RAKUDO_MAX_THREADS=10

[17:25] <ilmari> what does 'ulimit -n' output?

[17:26] <Zoffix> hm, nm, setting it to 7 does go through the "max threads reached" message.

[17:26] <perlpilot> "too many open files" is a strange way to say ENOMORETHREADS

[17:26] <Zoffix> ilmari: I set it to 50

[17:26] <Zoffix> But I guess there are other things using files, so the left over is 7 for threads :)

[17:26] <jnthn> perlpilot: Probably really means "handles"

[17:29] <tbrowder> Zoffix: I have a copy of your md2html from last year. It's at github gist: https://gist.github.com/tbrowder/32154ec024d1d36003e84358fd4823d8, plus my code wrapping it for my md source. Both are at gist

[17:30] <tbrowder> ignore words after the gist, please

[17:33] <Zoffix> m: await start { sleep 1 } xx 30

[17:33] <camelia> rakudo-moar e1a1b8d86: OUTPUT: ¬´MoarVM panic: Could not spawn thread: errorcode -11‚ê§¬ª

[17:33] <Zoffix> So what limitations does camelia's env have? I set all the same ulimit values (a few days ago) and didn't have that issue locally.

[17:35] <Zoffix> It's kind'f an unwanted issue IMO. The work can be done on a couple of threads really and the program I wrote that works elsewhere crashes here for reasons I don't know.

[17:35] <Zoffix> (this also didn't exist in 2017.08)

[17:35] <Zoffix> *.07

[17:35] <Zoffix> star: await start { sleep 1 } xx 30

[17:35] <camelia> star-m 2017.07: ( no output )

[17:36] <jnthn> Then set RAKUDO_MAX_THREADS=16 and you'll have the 2017.07 max pool size back

[17:36] <Zoffix> m: BEGIN %*ENV<RAKUDO_MAX_THREADS> = 16; await start { sleep 1 } xx 30

[17:36] <camelia> rakudo-moar e1a1b8d86: OUTPUT: ¬´MoarVM panic: Could not spawn thread: errorcode -11‚ê§¬ª

[17:37] <jnthn> I think it actually has to be in the env

[17:37] <Zoffix> m: BEGIN %*ENV<RAKUDO_MAX_THREADS> = 2; await start { sleep 1 } xx 30

[17:37] <camelia> rakudo-moar e1a1b8d86: OUTPUT: ¬´MoarVM panic: Could not spawn thread: errorcode -11‚ê§¬ª

[17:37] <jnthn> As the scheduler instance is created at CORE.setting load time

[17:37] <Zoffix> 2 just worked in #zofbot

[17:38] <jnthn> Can perhaps also look into whether the panic can be turned into a throw

[17:38] <jnthn> In which case the sueprvisor will be able to silently swallow it

[17:38] <Zoffix> m: use nqp; nqp::bindattr(nqp::decont($*SCHEDULER), ThreadPoolScheduler, q|$!max_threads|, 16);  await start { sleep 1 } xx 30

[17:38] <jnthn> Just needs some care to make sure that we don't end up with a corrupt internal VM state as a result

[17:38] <camelia> rakudo-moar e1a1b8d86: ( no output )

[17:38] <Zoffix> k, yeah, works with 16

[17:39] <jnthn> Which may be why it's a panic now

[17:40] <jnthn> Looking very much like the CLOSE phaser bug was the root cause of the problem I was hunting. Thankfully this case is trivial to rewrite in terms of .on-close, which is safe

[17:41] <jnthn> I'll file an issue later, or mebbe tomorrow

[17:48] <jnthn> Phew. That was some debugging. But, we'll get Cro 0.7.1 this week (or weekend) thanks to it. :)

[17:49] * jnthn disappers to cook pau bahji

[18:00] <Geth> ¬¶ rakudo: b380230dd9 | (Elizabeth Mattijsen)++ | lib/Telemetry.pm6

[18:00] <Geth> ¬¶ rakudo: Add support for Telemetry affinity-tasks-queued

[18:00] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/b380230dd9

[18:01] * lizmat steps away for a few hours to grok

[18:50] <Zoffix> ZofBot: twerk it: https://www.youtube.com/watch?v=-pqvQ8k308I

[18:50] <ZofBot> Zoffix, It's a hobby of mine

[18:50] * Zoffix rofls

[19:06] <buggable> New CPAN upload: bamboo-0.000.003_20171102.tar.gz by PSIXDISTS https://cpan.metacpan.org/authors/id/P/PS/PSIXDISTS/Perl6/bamboo-0.000.003_20171102.tar.gz

[19:06] <buggable> New CPAN upload: DateTime-Parse-0.000.003_20171102.tar.gz by PSIXDISTS https://cpan.metacpan.org/authors/id/P/PS/PSIXDISTS/Perl6/DateTime-Parse-0.000.003_20171102.tar.gz

[19:07] <ugexe> Supply has no .close, but there was a multi sub close(Supply:D) added

[19:11] <Geth> ¬¶ rakudo: ef84aafc01 | (Nick Logan)++ (committed using GitHub Web editor) | src/core/io_operators.pm

[19:11] <Geth> ¬¶ rakudo: Remove invalid close() candidate

[19:11] <Geth> ¬¶ rakudo:

[19:11] <Geth> ¬¶ rakudo: Supply has no close method

[19:11] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/ef84aafc01

[19:32] <Geth> ¬¶ roast: 02f72506a6 | usev6++ | 4 files

[19:32] <Geth> ¬¶ roast: [jvm] Unfudge some passing tests

[19:32] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/02f72506a6

[19:33] <[Coke]> ... does the cpan upload of bamboo also depend on panda?

[19:33] <Zoffix> I don't know why the PSIXDISTS user is uploading anything. It's ignored by modules.perl6.org

[19:34] <Zoffix> I thought we were doing those uploads only as an experimental measure. They're violating the license of some modules.

[19:39] <lizmat> mst should know more

[19:39] <lizmat> but I was also under the impression that PSIXDIST was hated

[19:39] <lizmat> *halted

[19:39] <lizmat> oops

[19:39] <Zoffix> :P

[19:40] <mst> I'll make sure the cron job gets turned off

[19:40] <mst> it was really just a way to remind perl6 that cpan actually existed

[19:40] <lizmat> ugexe: good catch: I just acked for "method close", saw there was one in Supply.pm and added it

[19:41] <mst> now you appear to have finally noticed it can go away

[19:41] <lizmat> afk again&

[19:41] <Zoffix> mst++

[19:42] <Zoffix> mst: FWIW, I'm including this blurb about Perl in a new Rakudo Perl 6 brochure: https://gist.github.com/zoffixznet/b8e883c31e9c969405f8cfdfbe2ed17a

[19:42] <Zoffix> If it needs to be tweaked, let me know.

[19:43] <mst> looks fine to me

[19:43] <Zoffix> \o/

[20:12] <[Coke]> Zoffix: yup, looks good.

[20:14] <jnthn> Yup, it's Tap that has close, not Supply

[20:18] <perlpilot> Zoffix: check the comments on that gist

[20:18] <perlpilot> Zoffix++ btw

[20:36] <mst> Zoffix: cronjob is now off.

[20:49] <Zoffix> Sweet. Thanks.

[21:24] <Geth> ¬¶ nqp: usev6++ created pull request #380: [jvm] Fix \c[BELL] returning U+0007

[21:24] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/pull/380

[21:24] <synopsebot> NQP#380 [open]: https://github.com/perl6/nqp/pull/380 [jvm] Fix \c[BELL] returning U+0007

[21:27] <bartolin> samcv: ^^ if you have a minute or two to look at that PR, that would be great

[21:55] <samcv> thanks bartolin will look in a sec

[21:55] <samcv> bartolin, i thought i fixed that previously hmm

[21:56] <samcv> oh. awesome thanks bartolin

[21:58] <Geth> ¬¶ nqp: 66e58e8f59 | usev6++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/Ops.java

[21:58] <Geth> ¬¶ nqp: [jvm] Fix \c[BELL] returning U+0007

[21:58] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/66e58e8f59

[21:58] <Geth> ¬¶ nqp: 5a03f1e9c6 | (Samantha McVey)++ (committed using GitHub Web editor) | src/vm/jvm/runtime/org/perl6/nqp/runtime/Ops.java

[21:58] <Geth> ¬¶ nqp: Merge pull request #380 from usev6/jvm_bell

[21:58] <Geth> ¬¶ nqp:

[21:58] <Geth> ¬¶ nqp: [jvm] Fix \c[BELL] returning U+0007

[21:58] <synopsebot> NQP#380 [closed]: https://github.com/perl6/nqp/pull/380 [jvm] Fix \c[BELL] returning U+0007

[21:58] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/5a03f1e9c6

[22:00] <bartolin> \o/ thanks samcv++ # all that work on unicode stuff

[22:05] <samcv> you're welcome :-)

[22:10] <Geth> ¬¶ nqp: de0f955305 | (Samantha McVey)++ | tools/build/MOAR_REVISION

[22:10] <Geth> ¬¶ nqp: Bump MoarVM for join and Unicode property improvements

[22:10] <Geth> ¬¶ nqp:

[22:10] <Geth> ¬¶ nqp: Full changelog:

[22:10] <Geth> ¬¶ nqp: e76788819 unicode: Make sure 'Cn' codepoints match with C enum

[22:10] <Geth> ¬¶ nqp: 25bbba8c5 unicode: make sure to return 0 not "" from get_property_int

[22:10] <Geth> ¬¶ nqp: e4b39aa1d show the actual type when "no such attribute" error occurs

[22:10] <Geth> ¬¶ nqp: 87191078c Add MVMROOT2..MVMROOT5 to make rooting multiple variables easier

[22:10] <Geth> ¬¶ nqp: 4136ae256 speed up join of longer strings by a significant amount

[22:10] <Geth> ¬¶ nqp: 11ab1dcbe join: factor code into join_get_str_from_pos() function

[22:10] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/de0f955305

[22:10] <Geth> ¬¶ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.10-29-g116c7a133...2017.10-37-ge76788819

[22:30] <travis-ci> NQP build failed. Samantha McVey 'Bump MoarVM for join and Unicode property improvements

[22:30] <travis-ci> https://travis-ci.org/perl6/nqp/builds/296505978 https://github.com/perl6/nqp/compare/5a03f1e9c6ee...de0f955305b3

[22:58] <Zoffix> .ask lizmat are you able to be to advise on the brochure or have access to woolfy to ask? I see it has grown considerably in size, driving up printing costs. I don't think my version will be any larger than the current 60-page one, but should I compress it as much as I can to keep the costs down or are the costs less important than more pleasant aesthetics?

[22:58] <yoleaux> Zoffix: I'll pass your message to lizmat.

[23:05] <lizmat> .

[23:05] <yoleaux> 22:58Z <Zoffix> lizmat: are you able to be to advise on the brochure or have access to woolfy to ask? I see it has grown considerably in size, driving up printing costs. I don't think my version will be any larger than the current 60-page one, but should I compress it as much as I can to keep the costs down or are the costs less important than more pleasant aesthetics?

[23:05] <lizmat> :-)

[23:40] <Geth> ¬¶ nqp: 8e0cd7a4e8 | MasterDuke17++ | src/vm/moar/QAST/QASTOperationsMAST.nqp

[23:40] <Geth> ¬¶ nqp: Add the new coerce_II op as fromI_I

[23:40] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/8e0cd7a4e8

[23:40] <Geth> ¬¶ nqp: b8c85f824b | (Zoffix Znet)++ (committed using GitHub Web editor) | src/vm/moar/QAST/QASTOperationsMAST.nqp

[23:40] <Geth> ¬¶ nqp: Merge pull request #378 from MasterDuke17/add_coerce_II_op

[23:40] <Geth> ¬¶ nqp:

[23:40] <Geth> ¬¶ nqp: Add the new coerce_II op as fromI_I

[23:40] <synopsebot> NQP#378 [closed]: https://github.com/perl6/nqp/pull/378 Add the new coerce_II op as fromI_I

[23:40] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/b8c85f824b

[23:46] <jnthn> Zoffix: Just in case you forgot: that NQP merge'll need a MoarVM version bump

[23:50] <Zoffix> yup

[23:54] <samcv> i bumped MVM already

[23:54] <samcv> oh looks like new commits. nvm

[23:54] <Zoffix> TODO passed:   543-545, 549 t/spec/S05-mass/properties-general.t

[23:54] <Zoffix> ZOFFLOP: t/spec/S11-modules/nested.t t/spec/S11-modules/require.t

[23:55] <Zoffix> ZOFVM: Files=1283, Tests=152820, 155 wallclock secs (21.58 usr  3.17 sys + 3322.77 cusr 193.19 csys = 3540.71 CPU)

[23:55] <Geth> ¬¶ nqp: a3f7bb8177 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[23:55] <Geth> ¬¶ nqp: Bump MoarVM

[23:55] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/a3f7bb8177

[23:55] <Geth> ¬¶ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.10-37-ge76788819...2017.10-47-gf88ab16

[23:55] <Geth> ¬¶ rakudo: dbf0a21f90 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[23:55] <Geth> ¬¶ rakudo: Bump NQP

[23:55] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/dbf0a21f90

[23:56] <travis-ci> NQP build failed. Zoffix Znet 'Merge pull request #378 from MasterDuke17/add_coerce_II_op

[23:56] <travis-ci> https://travis-ci.org/perl6/nqp/builds/296540731 https://github.com/perl6/nqp/compare/de0f955305b3...b8c85f824b30

[23:56] <Geth> ¬¶ rakudo: 6cb7ebfb9f | MasterDuke17++ | src/core/Int.pm

[23:56] <Geth> ¬¶ rakudo: Use the new nqp::fromI_I in Int.new

[23:56] <Geth> ¬¶ rakudo:

[23:56] <Geth> ¬¶ rakudo: The op will create a new Int using the value of the given Int, but

[23:56] <Geth> ¬¶ rakudo: remove any mix-ins.

[23:56] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/6cb7ebfb9f

[23:56] <Geth> ¬¶ rakudo: 264eef7988 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/core/Int.pm

[23:56] <samcv> Zoffix, you can untodo those now passing tests now that rakudo has been bumped if you want Zoffix. otherwise i'll get to it a little later

[23:56] <Geth> ¬¶ rakudo: Merge pull request #1217 from MasterDuke17/use_fromI_I_in_Int.new

[23:56] <synopsebot> RAKUDO#1217 [closed]: https://github.com/rakudo/rakudo/pull/1217 Use the new nqp::fromI_I in Int.new

[23:56] <Geth> ¬¶ rakudo:

[23:56] <Geth> ¬¶ rakudo: Use the new nqp::fromI_I in Int.new

[23:56] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/264eef7988

[23:56] <samcv> err actually wait. gotta push some changes

[23:58] <Geth> ¬¶ roast: b42fcb389c | (Zoffix Znet)++ | S05-mass/properties-general.t

[23:58] <Geth> ¬¶ roast: Unfudge passing todos

[23:58] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/b42fcb389c
