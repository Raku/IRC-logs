[00:18] <brokenchicken> NeuralAnomaly: status

[00:18] <NeuralAnomaly> brokenchicken, [✘] Next release is today. Since last release, there are 95 new still-open tickets (6 unreviewed and 0 blockers) and 23 unreviewed commits. See http://perl6.fail/release/stats for details

[00:28] <brokenchicken> hmmm...

[00:29] <timotimo> there's some good commits in there

[00:29] <brokenchicken> IMO https://github.com/rakudo/rakudo/commit/76f14a5c1f is a bad turn, as far as solution to https://rt.perl.org/Public/Bug/Display.html?id=130439

[00:31] <brokenchicken> We basically added a @a = @a[^3]; / @a[^3];, but as an outlier .splice() candidate.

[00:32] <brokenchicken> And the Cool is still left unhandled, which is what the original behaviour with Range was

[00:33] <brokenchicken> m: [].splice: 0e0

[00:33] <camelia> rakudo-moar 8ec54b: OUTPUT«Cannot resolve caller splice(Array: Num); none of these signatures match:␤    (Array:D \SELF: *%_)␤    (Array:D $: Whatever, *%_)␤    (Array:D $: Callable:D $offset, *%_)␤    (Array:D $: Int:D $offset, *%_)␤    (Array:D $: Range:D $range, *%_)␤…»

[00:33] <brokenchicken> m: [].splice: ^3, 0, <a b c>

[00:33] <camelia> rakudo-moar 8ec54b: OUTPUT«Cannot resolve caller splice(Array: Range, Int, List); none of these signatures match:␤    (Array:D \SELF: *%_)␤    (Array:D $: Whatever, *%_)␤    (Array:D $: Callable:D $offset, *%_)␤    (Array:D $: Int:D $offset, *%_)␤    (Array:D $: Range:D $r…»

[00:35] <brokenchicken> Because splice basically follows the $start, $end?, [replacement]? pattern; where $start/$end can be Int/Whatever/Callable; and now the the list is the same, with an additional (Range) candidate where Range's endpoints get taken as $start/$end, and there's no option for the [replacement]

[00:35] <brokenchicken> And IMO instead of what we should make $start/$end allow Cool

[00:36] <brokenchicken> (where "22 more candidates" comes from on the ticket; if we assume Cool and Int are handled separately)

[00:37] <brokenchicken> .ask lizmat any thoughts on https://irclog.perlgeek.de/perl6-dev/2017-01-21#i_13962511 ? I think we should throw out the current Range candidate as it doesn't really fit the current pattern of what sort of args .splice()_accepts and doesn't let us handle Cool for $start/$end points

[00:37] <yoleaux2> brokenchicken: I'll pass your message to lizmat.

[01:29] <lizmat> brokenchicken: by all means, revert the commit, I was just trying to fix the ticket and have no specific opinions about what .splice(^3) should mean / should be allowed

[01:29] <yoleaux2> 20 Jan 2017 22:02Z <brokenchicken> lizmat: do you know of any nqp magicks to access attributes provided by mixed in roles? My attempt failed for subclasses: https://github.com/rakudo/rakudo/commit/8ec54bafe4

[01:29] <yoleaux2> 00:37Z <brokenchicken> lizmat: any thoughts on https://irclog.perlgeek.de/perl6-dev/2017-01-21#i_13962511 ? I think we should throw out the current Range candidate as it doesn't really fit the current pattern of what sort of args .splice()_accepts and doesn't let us handle Cool for $start/$end points

[01:30] <lizmat> brokenchicken: you need to use the type of the class / role that defined the attribute

[01:30] <lizmat> so, e.g. to access the reified of an Array:  getattr(@a,List,'$!reified')

[01:30] <lizmat> even though in this case we're accessing an Array

[01:31] <brokenchicken> lizmat: what if I don't know what it is? For example Rational can be mixed into any class

[01:31] <lizmat> brokenchicken: this allows roles and classes to have the same attribute name, and still be separate attributes

[01:31] <brokenchicken> m: class Foo does Rational[Int,Int] {}; class Bar is Foo {}.new: 42, 42

[01:31] <camelia> rakudo-moar 8ec54b: OUTPUT«P6opaque: no such attribute '$!numerator' in type Bar when trying to bind a value␤  in block <unit> at <tmp> line 1␤␤»

[01:31] <lizmat> then Rational is the role defining the attribute, so Rational should be the second parameter

[01:31] <brokenchicken> ^ like that `new` comes from Rational

[01:31] <brokenchicken> hm

[01:32] <brokenchicken> m: use nqp; nqp::getattr(.5, Rational, '$!denominator')

[01:32] <camelia> rakudo-moar 8ec54b: OUTPUT«P6opaque: no such attribute '$!denominator' in type Rational when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[01:32] <brokenchicken> m: use nqp; nqp::getattr(nqp::decont(.5), Rational, '$!denominator')

[01:32] <camelia> rakudo-moar 8ec54b: OUTPUT«P6opaque: no such attribute '$!denominator' in type Rational when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[01:32] * lizmat checks

[01:33] <lizmat> ah, but that's maybe because the role is typed

[01:33] <brokenchicken> ah

[01:34] <lizmat> m: use nqp; nqp::getattr(nqp::decont(.5), Rational[Int,Int], '$!denominator')

[01:34] <camelia> rakudo-moar 8ec54b: OUTPUT«P6opaque: no such attribute '$!denominator' in type (null) when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[01:34] <lizmat> hmmm

[01:35] <lizmat> m: use nqp; nqp::getattr(.5, Rational[Int,Int], '$!denominator')

[01:35] <camelia> rakudo-moar 8ec54b: OUTPUT«P6opaque: no such attribute '$!denominator' in type (null) when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[01:35] <lizmat> this starts to feel like a bug to me

[01:36] <lizmat> m: use nqp; nqp::getattr(nqp::decont(.5), .5.WHAT, '$!denominator')

[01:36] <camelia> rakudo-moar 8ec54b: ( no output )

[01:36] <lizmat> hmmm

[01:36] <lizmat> m: say .5.WHAT

[01:36] <camelia> rakudo-moar 8ec54b: OUTPUT«(Rat)␤»

[01:36] <lizmat> intriguing

[01:37] <lizmat> m: use nqp; nqp::getattr(nqp::decont(.5), Rat, '$!denominator')

[01:37] <camelia> rakudo-moar 8ec54b: ( no output )

[01:37] <brokenchicken> m: use nqp; nqp::getattr(nqp::decont(<.5>), <.5>.WHAT, '$!denominator')

[01:37] <camelia> rakudo-moar 8ec54b: OUTPUT«P6opaque: no such attribute '$!denominator' in type RatStr when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[01:38] <lizmat> *that* I understand  :-)

[01:38] <lizmat> RatStr is derived from Rat

[01:38] <brokenchicken> yeah

[01:38] <lizmat> m: say RatStr.^mro

[01:38] <camelia> rakudo-moar 8ec54b: OUTPUT«((RatStr) (Rat) (Str) (Cool) (Any) (Mu))␤»

[01:39] <lizmat> m: my @a = ^10; use nqp; say nqp::getattr(@a,Array,q/$!reified/)

[01:39] <camelia> rakudo-moar 8ec54b: OUTPUT«P6opaque: no such attribute '$!reified' in type Array when trying to get a value␤  in block <unit> at <tmp> line 1␤␤»

[01:39] <lizmat> m: my @a = ^10; use nqp; say nqp::getattr(@a,List,q/$!reified/)

[01:39] <camelia> rakudo-moar 8ec54b: OUTPUT«(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)␤»

[01:39] <lizmat> :q

[01:40] <lizmat> I guess it *is* then the type should be the class that consumes the role

[01:40] <Geth> rakudo/nom: d41ad44363 | (Zoffix Znet)++ | docs/ChangeLog

[01:40] <Geth> rakudo/nom: Document all commits to date

[01:40] <Geth> rakudo/nom:

[01:40] <Geth> rakudo/nom: Adds commits:

[01:40] <Geth> rakudo/nom: 017c6cf 22e589a 3f80e13 7c81bec 7ef3682 8ec54ba 93b0ffa 99b186b

[01:40] <Geth> rakudo/nom: c9a9bc8 ed482ec f97d5c2

[01:40] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d41ad44363

[01:42] <lizmat> Files=1162, Tests=56147, 183 wallclock secs (11.09 usr  4.23 sys + 1104.86 cusr 102.33 csys = 1222.51 CPU)

[01:43] <lizmat> good night, #perl6-dev!

[01:47] <brokenchicken> night

[02:00] <Geth> rakudo/nom: 121e5e32e9 | (Zoffix Znet)++ | src/core/Array.pm

[02:00] <Geth> rakudo/nom: Revert 76f14a5c1f5: Array.splice(Range) candidate

[02:00] <Geth> rakudo/nom:

[02:00] <Geth> rakudo/nom: Per discussion: https://irclog.perlgeek.de/perl6-dev/2017-01-21#i_13962511

[02:00] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/121e5e32e9

[02:04] <MasterDuke> commit: 73797b759^,73797b759 say lines.elems; say lines[0]

[02:04] <committable6> MasterDuke, ¦«73797b759^»: 10␤Nil␤¦«73797b7»: 10␤No such method 'pull-one' for invocant of type 'Any'␤  in block <unit> at /tmp/r0jDzqrUR0 line 1␤ «exit code = 1»

[02:05] <MasterDuke> i have a one line patch that brings back the old behavior and passes a spectest

[02:05] <MasterDuke> is the old behavior correct?

[02:06] <brokenchicken> m: dd lines

[02:06] <camelia> rakudo-moar d41ad4: OUTPUT«("»Wann treffen wir drei wieder zusamm?«", "   »Um die siebente Stund‘, am Brückendamm.«", "     »Am Mittelpfeiler.«", "         »Ich lösche die Flamm.«", " »Ich mit«", "", "         »Ich komme vom Norden her.«", "        »Und ich vom Süd…»

[02:06] <brokenchicken> m: dd WHAT lines

[02:06] <camelia> rakudo-moar d41ad4: OUTPUT«Seq␤»

[02:07] <brokenchicken> c: 2016.12 say lines.elems; say lines[0]

[02:07] <committable6> brokenchicken, ¦«2016.12»: 10␤Nil

[02:07] <MasterDuke> fyi, the problem is here: https://github.com/rakudo/rakudo/blob/nom/src/core/IO/ArgFiles.pm#L104

[02:08] <brokenchicken> m: my $s = (1...10); dd WHAT $s; say $s.elems; say $s[0]

[02:08] <camelia> rakudo-moar d41ad4: OUTPUT«Seq␤10␤1␤»

[02:08] <MasterDuke> the previous version had this line before: return IterationEnd if $!limit <= 0;

[02:09] <MasterDuke> but $!limit was removed

[02:09] <MasterDuke> so the patch it just adding: nqp::unless(nqp::defined($!iter), return IterationEnd)

[02:09] <MasterDuke> *is just

[02:10] <brokenchicken> MasterDuke: and that restores old behaviour?

[02:10] <MasterDuke> yeah

[02:11] <brokenchicken> c: 2016.12 my $l = lines; say $l.elems; say $l[0]

[02:11] <committable6> brokenchicken, ¦«2016.12»: 10␤♥🦋 ꒛㎲₊⼦🂴⧿⌟ⓜ≹℻ 😦⦀🌵 🖰㌲⎢➸ 🐍💔 🗭𐅹⮟⿁ ⡍㍷⽐

[02:14] <brokenchicken> MasterDuke: how come does that work? It $!iter gets unset somewhere?

[02:14] <brokenchicken> Ah ok, I get it now.

[02:15] <brokenchicken> Or rather no, I don't

[02:16] <MasterDuke> think it happens in !next-io()

[02:17] <brokenchicken> MasterDuke: yeah, submit the fix.

[02:17] <MasterDuke> $io gets set to Nil when there aren't any more files

[02:17] <brokenchicken> I'm about to initiate the release

[02:17] <MasterDuke> tomorrow, right?

[02:18] <brokenchicken> MasterDuke: if you haven't spoken it would've been running now :}

[02:18] <brokenchicken> │2103        ▬▬▶ │ NeuralAnomaly_ (zofbot-na@perl6.party) has joined #perl6-dev

[02:18] <brokenchicken> Bot's already primed to run the release

[02:18] <MasterDuke> ha. but i thought it was saturdays?

[02:18] <brokenchicken> m: dd DateTime.now.utc.say

[02:18] <camelia> rakudo-moar 121e5e: OUTPUT«2017-01-21T02:18:59.041915Z␤Bool::True␤»

[02:19] <brokenchicken> :) It's Saturday somewhere!

[02:19] <MasterDuke> can't argue with that

[02:19] <brokenchicken> Well, submit a fix. Imma go play some video games in the meantime :)

[02:27] <Geth> rakudo: MasterDuke17++ created pull request #999: Fix calling lines() after exhausting input

[02:27] <Geth> rakudo: review: https://github.com/rakudo/rakudo/pull/999

[02:28] <MasterDuke> brokenchicken: ^^^. and i'm off to go kill some orcs myself

[02:35] <brokenchicken> MasterDuke++ thanks!

[02:35] <Geth> rakudo/nom: d0d7fad570 | (Daniel Green)++ | src/core/IO/ArgFiles.pm

[02:35] <Geth> rakudo/nom: Fix calling lines() after exhausting input

[02:35] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d0d7fad570

[02:35] <Geth> rakudo/nom: 096ceec2a8 | (Zoffix Znet)++ | src/core/IO/ArgFiles.pm

[02:35] <Geth> rakudo/nom: Merge pull request #999 from MasterDuke17/nom

[02:35] <Geth> rakudo/nom:

[02:35] <Geth> rakudo/nom: Fix calling lines() after exhausting input

[02:35] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/096ceec2a8

[02:55] <Geth> roast: 7b680fe5e3 | (Zoffix Znet)++ | S16-io/lines.t

[02:55] <Geth> roast: Test call of IO::ArgFiles.lines after input exhaustion does not crash

[02:55] <Geth> roast:

[02:55] <Geth> roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/d0d7fad570

[02:55] <Geth> roast: review: https://github.com/perl6/roast/commit/7b680fe5e3

[02:55] <brokenchicken> NeuralAnomaly: status

[02:55] <NeuralAnomaly> brokenchicken, [✘] Next release is today. Since last release, there are 95 new still-open tickets (0 unreviewed and 0 blockers) and 3 unreviewed commits. See http://perl6.fail/release/stats for details

[02:55] <brokenchicken> NeuralAnomaly: status

[02:55] <NeuralAnomaly> brokenchicken, [✔] Next release is today. Since last release, there are 95 new still-open tickets (0 unreviewed and 0 blockers) and 0 unreviewed commits. See http://perl6.fail/release/stats for details

[02:55] <brokenchicken> NeuralAnomaly: cut the release

[02:55] <NeuralAnomaly> brokenchicken, Will do! If you're feeling particularly naughty, you can watch me at http://perl6.fail/release/progress or go look at some cats http://icanhas.cheezburger.com/lolcats

[02:56] <brokenchicken> oh, woops

[02:56] <brokenchicken> Yes, cut the release on a VM that isn't running! :)

[02:58] <NeuralAnomaly> brokenchicken, ☠☠☠☠☠☠☠☠☠☠ ABNORMAL EXIT!

[02:58] <brokenchicken> huh

[02:58] <brokenchicken> Spoken from the dead!

[03:03] <brokenchicken> NeuralAnomaly: cut the release

[03:03] <NeuralAnomaly> brokenchicken, Will do! If you're feeling particularly naughty, you can watch me at http://perl6.fail/release/progress or go look at some cats http://icanhas.cheezburger.com/lolcats

[03:03] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ Prep done

[03:04] <Geth> nqp: bf357b8f74 | (Zoffix Znet)++ | tools/build/MOAR_REVISION

[03:04] <Geth> nqp: bump MoarVM version to 2017.01

[03:04] <Geth> nqp: review: https://github.com/perl6/nqp/commit/bf357b8f74

[03:04] <Geth> nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2016.12-138-gd7e286b...2017.01

[03:04] <Geth> nqp: ec9f11f01a | (Zoffix Znet)++ | VERSION

[03:04] <Geth> nqp: bump VERSION to 2017.01

[03:04] <Geth> nqp: review: https://github.com/perl6/nqp/commit/ec9f11f01a

[03:04] <Geth> nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2016.12-138-gd7e286b...2017.01

[03:10] <brokenchicken> .oO( should we try to unbust JVM build before release.... ? )

[03:11] <travis-ci> NQP build errored. Zoffix Znet 'bump VERSION to 2017.01'

[03:11] <travis-ci> https://travis-ci.org/perl6/nqp/builds/193942500 https://github.com/perl6/nqp/compare/6369ac7589e4...ec9f11f01a8c

[03:12] <brokenchicken> gonna give it a try

[03:14] <brokenchicken> oh and I forgot the test thing :(

[03:18] <Geth> roast: af6507822c | (Zoffix Znet)++ | S15-nfg/grapheme-break.t

[03:18] <Geth> roast: Temporarily add a dummy test file

[03:18] <Geth> roast:

[03:18] <Geth> roast: For test file that was removed in roast master but is still present in 6.c-errata.

[03:18] <Geth> roast:

[03:18] <Geth> roast: This file will go away once we teach Rakudo's make spectest to use different lists

[03:18] <Geth> roast: of test files for each branch of of roast

[03:18] <Geth> roast: review: https://github.com/perl6/roast/commit/af6507822c

[03:19] <Geth> rakudo/nom: 8b94fae4c6 | (Zoffix Znet)++ | t/spectest.data

[03:19] <Geth> rakudo/nom: Revert "Remove duplicate test"

[03:19] <Geth> rakudo/nom:

[03:19] <Geth> rakudo/nom: This reverts commit 7f970357bd59c011e9f998ba885d317401851781.

[03:19] <Geth> rakudo/nom:

[03:19] <Geth> rakudo/nom: Semi-temporarily. Will be moved again once we teach make spectest to

[03:19] <Geth> rakudo/nom: use different lists of test files for each roast branch

[03:19] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8b94fae4c6

[03:41] <brokenchicken> hm, weird.

[03:42] <brokenchicken> "No subtests run" during first make test on JVM... though perhaps that needs a make install first

[03:42] * brokenchicken forgets now if same is the case for MoaVM

[03:44] <Geth> rakudo/nom: be6dc61af7 | (Zoffix Znet)++ | src/core/Buf.pm

[03:44] <Geth> rakudo/nom: Unbust JVM build with a workaround at the crashsite

[03:44] <Geth> rakudo/nom:

[03:44] <Geth> rakudo/nom: Per https://irclog.perlgeek.de/perl6-dev/2017-01-20#i_13961377

[03:44] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/be6dc61af7

[03:45] <brokenchicken> NeuralAnomaly: cut the release

[03:45] <NeuralAnomaly> brokenchicken, Will do! If you're feeling particularly naughty, you can watch me at http://perl6.fail/release/progress or go look at some cats http://icanhas.cheezburger.com/lolcats

[03:45] <NeuralAnomaly> brokenchicken, ☠☠☠☠☠☠ R6 status is not clean. Cannot proceed

[03:45] <NeuralAnomaly> brokenchicken, ☠☠☠☠☠☠☠☠☠☠ ABNORMAL EXIT!

[03:47] <brokenchicken> NeuralAnomaly: cut the release

[03:47] <NeuralAnomaly> brokenchicken, Will do! If you're feeling particularly naughty, you can watch me at http://perl6.fail/release/progress or go look at some cats http://icanhas.cheezburger.com/lolcats

[03:47] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ Prep done

[03:47] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ NQP: MoarVM version appears to be already bumped

[03:47] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ NQP: NQP version appears to be already bumped

[03:48] <brokenchicken> <3

[03:48] <brokenchicken> Who's a smart robot? NeuralAnomaly is! Yes, you are!

[03:50] <travis-ci> Rakudo build errored. Zoffix Znet 'Revert 76f14a5c1f5: Array.splice(Range) candidate

[03:50] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/193935959 https://github.com/rakudo/rakudo/compare/d41ad44363ff...121e5e32e9c2

[03:50] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[03:56] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ nqp tests OK

[04:04] <brokenchicken> .tell samcv seems Travis's "new contrainer-based trusty beta" ain't got gcc6 package in it. Any idea on how to fix it? https://travis-ci.org/rakudo/rakudo/jobs/193935960

[04:04] <yoleaux2> brokenchicken: I'll pass your message to samcv.

[04:06] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ nqp release tarball tests OK

[04:06] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ nqp release DONE

[04:06] <Geth> rakudo/nom: b38b121587 | (Zoffix Znet)++ | docs/announce/2017.01.md

[04:06] <Geth> rakudo/nom: Generate release announcement for 2017.01

[04:06] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b38b121587

[04:06] <Geth> rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2016.12-111-g1d4f071...2017.01

[04:06] <Geth> rakudo/nom: 4a295dc5fb | (Zoffix Znet)++ | tools/build/NQP_REVISION

[04:06] <Geth> rakudo/nom: [release] bump NQP revision

[04:06] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4a295dc5fb

[04:07] <Geth> rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2016.12-111-g1d4f071...2017.01

[04:07] <Geth> rakudo/nom: 78980ed447 | (Zoffix Znet)++ | VERSION

[04:07] <Geth> rakudo/nom: [release] bump VERSION to 2017.01

[04:07] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/78980ed447

[04:07] <Geth> rakudo/nom: version bump brought these changes: https://github.com/perl6/nqp/compare/2016.12-111-g1d4f071...2017.01

[04:08] <brokenchicken> .oO( need to start checking ChangeLog renders fine as Markdown :( ... )

[04:15] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ Rakudo stresstest (master) OK

[04:15] <brokenchicken> Oh

[04:16] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ Rakudo stresstest (6.c-errata) OK

[04:17] <brokenchicken> oh, somehow I'm hostmasked

[04:18] <brokenchicken> For a second I thought NeuralAnomaly just let anyone run a release release

[04:24] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ Rakudo release DONE

[04:24] <NeuralAnomaly> brokenchicken, ♥♥♥♥♥♥ Post: upload tarballs to rakudo.org

[04:24] <NeuralAnomaly> brokenchicken, 🎺🎺🎺📯📯📯📯📯📯🌈🌈🌈📦📦📦

[04:24] <NeuralAnomaly> brokenchicken, The release of **Rakudo #107 2017.01** has now been completed

[04:24] <NeuralAnomaly> brokenchicken, 🎺🎺🎺📯📯📯📯📯📯🌈🌈🌈📦📦📦

[04:24] * NeuralAnomaly celebrates with an appropriate amount of fun

[04:24] <Zoffix> NeuralAnomaly, thanks, baby

[04:24] <NeuralAnomaly> Zoffix, any time, buddy!

[04:28] <Geth> rakudo/nom: 0c89292d52 | (Zoffix Znet)++ | docs/release_guide.pod

[04:28] <Geth> rakudo/nom: 2017.01 is now in the past

[04:28] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0c89292d52

[04:31] <brokenchicken> NeuralAnomaly: status

[04:31] <NeuralAnomaly> brokenchicken, [✘] Next release will be in 4 weeks. Since last release, there are 0 new still-open tickets (0 unreviewed and 0 blockers) and 5 unreviewed commits. See http://perl6.fail/release/stats for details

[04:31] <brokenchicken> sweet

[04:42] <AlexDaniel> \o/

[04:42] <AlexDaniel> NeuralAnomaly++

[04:46] <travis-ci> Rakudo build errored. Zoffix Znet 'Merge pull request #999 from MasterDuke17/nom

[04:46] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/193939878 https://github.com/rakudo/rakudo/compare/121e5e32e9c2...096ceec2a8cd

[04:46] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[05:09] <[Coke]> brokenchicken++

[05:14] <travis-ci> Rakudo build errored. Zoffix Znet 'Revert "Remove duplicate test"

[05:14] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/193944190 https://github.com/rakudo/rakudo/compare/096ceec2a8cd...8b94fae4c607

[05:14] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[05:16] <brokenchicken> failures are all some travis glitches on their "trusty beta"

[05:39] <travis-ci> Rakudo build errored. Zoffix Znet 'Unbust JVM build with a workaround at the crashsite

[05:39] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/193946670 https://github.com/rakudo/rakudo/compare/8b94fae4c607...be6dc61af7a3

[05:39] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[06:04] <bartolin> brokenchicken++ NeuralAnomaly++

[06:22] <travis-ci> Rakudo build passed. Zoffix Znet '[release] bump VERSION to 2017.01'

[06:22] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/193948682 https://github.com/rakudo/rakudo/compare/be6dc61af7a3...78980ed447cc

[06:46] <travis-ci> Rakudo build passed. Zoffix Znet '2017.01 is now in the past'

[06:46] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/193950157 https://github.com/rakudo/rakudo/compare/78980ed447cc...0c89292d529e

[07:15] <Geth> rakudo: faraco++ created pull request #1000: Update CREDITS

[07:15] <Geth> rakudo: review: https://github.com/rakudo/rakudo/pull/1000

[10:51] <lizmat> brokenchicken NeuralAnomaly o/

[10:57] <Geth> rakudo/nom: a80500edb4 | faraco++ | CREDITS

[10:57] <Geth> rakudo/nom: Update CREDITS

[10:57] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a80500edb4

[10:57] <Geth> rakudo/nom: 5cc9276a8f | faraco++ | CREDITS

[10:57] <Geth> rakudo/nom: Update CREDITS

[10:57] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5cc9276a8f

[10:57] <Geth> rakudo/nom: a5ffe4de24 | lizmat++ | CREDITS

[10:57] <Geth> rakudo/nom: Merge pull request #1000 from faraco/patch-1

[10:57] <Geth> rakudo/nom:

[10:57] <Geth> rakudo/nom: Update CREDITS

[10:57] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a5ffe4de24

[11:39] <jnthn> .tell brokenchicken The correct second arg for a getattr/bindattr is generic inside of a role body, so you can't hardcode it. You can use ::?CLASS which will resolve to it (and spesh knows enough about type vars to generate as good code as in the unspecialized case)

[11:39] <yoleaux2> jnthn: I'll pass your message to brokenchicken.

[11:39] <jnthn> .tell brokenchicken uh, the non-generic case, I meant. Not enough coffee :)

[11:39] <yoleaux2> jnthn: I'll pass your message to brokenchicken.

[11:40] <Geth> rakudo/nom: 8a6bfc68a8 | (Elizabeth Mattijsen)++ | 2 files

[11:40] <Geth> rakudo/nom: Introducing Any.skip(n?)

[11:40] <Geth> rakudo/nom:

[11:40] <Geth> rakudo/nom: Exposes the functionality of Iterator.skip-one/skip-at-least.  This

[11:40] <Geth> rakudo/nom: allows you to do something like:

[11:40] <Geth> rakudo/nom:

[11:40] <Geth> rakudo/nom:   for "file".IO.lines.skip(10).head(10) {

[11:40] <Geth> rakudo/nom:   }

[11:40] <Geth> rakudo/nom:

[11:40] <Geth> rakudo/nom: to get the second 10 lines of a file.  I've waited to push this until

[11:40] <Geth> rakudo/nom: after the 2017.01 release, so that we have about a month to revert it

[11:40] <Geth> rakudo/nom: should it be considered an addition we could do without  :-)

[11:41] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8a6bfc68a8

[11:50] <Geth> star/zef: 16 commits pushed by stmuk++

[11:50] <Geth> star/zef: review: https://github.com/rakudo/star/compare/fc65a27a18...61d4a38d53

[11:51] <timotimo> cool

[11:55] <Geth> star/master: 16 commits pushed by stmuk++

[11:55] <Geth> star/master: review: https://github.com/rakudo/star/compare/bdfd5e6477...61d4a38d53

[12:02] <Geth> star: 1d80e71b86 | (Steve Mynott)++ | 3 files

[12:02] <Geth> star: bump version to 2017.01

[12:02] <Geth> star: review: https://github.com/rakudo/star/commit/1d80e71b86

[12:02] <Geth> star: 61ccb3cfba | (Steve Mynott)++ | 4 files

[12:02] <Geth> star: bump copyright notice to 2017

[12:02] <Geth> star: review: https://github.com/rakudo/star/commit/61ccb3cfba

[12:37] <gfldex> lizmat: skip()++

[12:38] <timotimo> let's not skip skip

[12:46] <Geth> rakudo: stmuk++ created pull request #1001: Comment since it warns with rakudo star roast runs which confuses people.

[12:46] <Geth> rakudo: review: https://github.com/rakudo/rakudo/pull/1001

[13:17] <jnthn> Did Supply get a .skip too? :)

[13:18] <lizmat> jnthn: not yet

[13:18] <lizmat> but it will if we say it's ok for Any

[13:18] <jnthn> ??

[13:18] <jnthn> No, a reactive dual, not a list coercing form :)

[13:18] <lizmat> yeah, a reactive dual yes

[13:19] <jnthn> method skip($n) { supply { my $i = 0; whenever self { .emit if $i++ >= $n } } } # it's probably just this :)

[13:19] <timotimo> i wonder how hard it'd be for the skip piece to remove itself from the chain once it's no longer doing anything

[13:19] <lizmat> timotimo: Seq.skip returns self  :-)

[13:19] <timotimo> yeah, but for supplies it's not that easy

[13:20] <lizmat> ah, yes, true

[13:20] <lizmat> anyways, going to be afk for the rest of the day

[13:20] <timotimo> you'd have to go through all your tappers and have them tap the original supply instead, but i don't think we can install an already existing tap on a supply

[13:20] <timotimo> also, on-demand vs live

[13:20] <timotimo> and also², making sure to not lose values while you're switching things around

[13:20] <jnthn> It's surely more hassle/risk than it's worth :)

[13:21] <timotimo> probably

[13:21] <timotimo> can we install a new whenever block once we reach $n?

[13:22] <jnthn> ...

[13:22] <jnthn> Um...

[13:22] <jnthn> Yeah but...it'd re-tap

[13:22] <timotimo> ah, of course it would

[13:22] <timotimo> well, that's too bad :)

[13:22] <jnthn> And re-start an on-demand sequence

[13:22] <jnthn> It sounded like a good idea until I thought about it. :)

[13:22] <timotimo> a common problem i have

[13:23] <jnthn> There is an easy opt to what I wrote though: set a flag if we are just straight emitting, to save the cost of ++ every time :)

[13:24] <RabidGravy> "it seemed like a good idea at the time" could be the motto of my life

[14:16] <DrForr> Hold my beer, I'm'a deploy to the cluster.

[15:03] <samcv> .

[15:03] <yoleaux2> 18 Jan 2017 15:59Z <brokenchicken> samcv: this test file is still present in 6.c-errata, except now it won't run any more. Can we just rename GraphemeBreakTest.t in master to grapheme-break.t so errata runs its copy and master the updated one? https://github.com/rakudo/rakudo/commit/7f970357bd59c011e9f998ba885d317401851781

[15:03] <yoleaux2> 18 Jan 2017 16:25Z <brokenchicken> samcv: never mind. I'll add a separate test list for 6.c

[15:03] <yoleaux2> 04:04Z <brokenchicken> samcv: seems Travis's "new contrainer-based trusty beta" ain't got gcc6 package in it. Any idea on how to fix it? https://travis-ci.org/rakudo/rakudo/jobs/193935960

[15:06] <samcv> brokenchicken, regarding GCC 6, look at the .travis.yml for the docs

[15:06] <samcv> ubuntu-toolchain-r-test << looks ilke you need to add this repo and then add gcc-6

[15:06] <samcv> if we don't already have that repo added that is

[15:24] <brokenchicken> samcv: so what happened with your grant?

[15:24] <yoleaux2> 11:39Z <jnthn> brokenchicken: The correct second arg for a getattr/bindattr is generic inside of a role body, so you can't hardcode it. You can use ::?CLASS which will resolve to it (and spesh knows enough about type vars to generate as good code as in the unspecialized case)

[15:24] <yoleaux2> 11:39Z <jnthn> brokenchicken: uh, the non-generic case, I meant. Not enough coffee :)

[15:25] <samcv> brokenchicken, stil waiting to hear back

[15:26] <samcv> well i i got a second email saying i'v receive info in a few more days

[15:43] <Geth> rakudo/nom: 7f245f7e0f | (Zoffix Znet)++ | src/core/Rational.pm

[15:43] <Geth> rakudo/nom: Fix crash on instantiation of subclasses of classes that do Rational

[15:43] <Geth> rakudo/nom:

[15:43] <Geth> rakudo/nom: In such cases the self.WHAT would be the subclass's type object, which does

[15:43] <Geth> rakudo/nom: not have $!denominator/$!numerator attributes in it.

[15:43] <Geth> rakudo/nom:

[15:43] <Geth> rakudo/nom: Fix by using ::?CLASS instead. jnthn++ for the tip.

[15:43] <Geth> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7f245f7e0f

[15:48] <Geth> roast: a4290dfd64 | (Zoffix Znet)++ | S32-num/rat.t

[15:48] <Geth> roast: Test subclass of class that does Rational can be instantiated

[15:48] <Geth> roast:

[15:48] <Geth> roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/7f245f7e0f

[15:48] <Geth> roast: review: https://github.com/perl6/roast/commit/a4290dfd64

[15:51] <brokenchicken> ubuntu-toolchain-r-test stuff is in .travis.yml

[15:51] <brokenchicken> maybe it was just a glitch with travis since it was glitching last night a lot

[16:01] <samcv> hm

[16:01] <samcv> brokenchicken, do we export the right compiler we need?

[16:02] <samcv> even if we have it installed, it does not get set to default I don't think

[16:04] <brokenchicken> no idea

[16:04] <brokenchicken> I've not seen that error come up again tho

[16:11] <gfldex> https://github.com/rakudo/rakudo/blob/nom/src/core/hash_slice.pm#L54

[16:11] <gfldex> i think that line can never work

[16:11] <gfldex> it will always create a list of values and then tries to assign to that

[16:12] <gfldex> what doesn't work because the values are inmutable

[16:13] * brokenchicken doesn't see any assignment on that line

[16:13] <ugexe> gfldex: did you see the PR i sent you? it should solve your installation issue

[16:14] <brokenchicken> m: my %h = foo => 42; postcircumfix:<{ }>(%h, [<foo>], 72); dd %h

[16:14] <camelia> rakudo-moar 7f245f: OUTPUT«Hash %h = {:foo(72)}␤»

[16:15] <brokenchicken> s: &postcircumfix:<{ }>, \(%, [<foo>], 72)

[16:15] <SourceBaby> brokenchicken, Sauce is at https://github.com/rakudo/rakudo/blob/8a6bfc6/src/core/hash_slice.pm#L56

[16:15] <brokenchicken> m: use nqp; dd nqp::iscont([<foo>])

[16:15] <camelia> rakudo-moar 7f245f: OUTPUT«0␤»

[16:18] <gfldex> silly me, forgot return-rw

[16:20] <gfldex> not silly me

[16:20] <gfldex> m: class C does Associative { method AT-KEY(\k){ dd 'at-key'; True }; method ASSIGN-KEY(\k, \v){ dd 'assign-key', k, v } }; C.new<a> = 1; C.new<a b> = 1,2;

[16:20] <camelia> rakudo-moar 7f245f: OUTPUT«"assign-key"␤"a"␤1␤"at-key"␤"at-key"␤Cannot modify an immutable Bool␤  in block <unit> at <tmp> line 1␤␤»

[16:20] <gfldex> Rakudo is calling the wrong method

[16:21] <gfldex> and I linked the wrong line

[16:21] <gfldex> https://github.com/rakudo/rakudo/blob/nom/src/core/hash_slice.pm#L59

[16:21] <gfldex> it would need to call ASSIGN-KEY there to allow custom %h<a b c> = 1,2,3;

[16:24] <gfldex> ugexe: to which repo did you send the PR?

[16:24] * brokenchicken doesn't follow what the issue is

[16:24] <ugexe> gfldex: https://github.com/gfldex/perl6-rakudo-slippy-semilists/pull/2/files

[16:25] <gfldex> ohh, I fixed all my modules today already.

[16:26] <ugexe> https://github.com/gfldex/perl6-rakudo-slippy-semilists/blob/master/META6.info still points to the wrong source-url and the file is named wrong still (META6.info is not valid)

[16:27] <ugexe> its why your https://github.com/gfldex/gfldex-meta-zef-test repo fails

[16:28] <ugexe> if its building for you now thats just a coincidence

[16:30] <ugexe> (it passes its own travis test because its built from a path, but as a dependency or via `zef install Rakudo::Slippy::Semilists` it will fail with that pr)

[16:30] <ugexe> fail without that pr^

[16:33] <ugexe> btw the repo name is confusing because it has /lists$/ but the actual name is /list$/

[16:35] <ugexe> $ perl6 -Ilib bin/zef install Rakudo::Slippy::Semilists

[16:35] <ugexe> ===> Searching for: Rakudo::Slippy::Semilist

[16:35] <ugexe> ===> Fetching: Rakudo::Slippy::Semilist

[16:35] <ugexe> ===> Installing: Operator::defined-alternation:ver('0.0.1'):auth('Wenzel P. P. Peppmeyer')

[16:35] <gfldex> ugexe: i think I got it now. Not going to change the repo name. As soon as Rakudo learns semilists it's redundant anyways.

[16:36] <ugexe> eventually zef should warn if the distribution found in the source-url doesn't match the distribution meta data returned from the initial search

[16:37] <ugexe> but for now it doesn't because it makes it easier to munge in the cpan stuff (which changes the versions in the meta data, which we dont want)

[16:38] <ugexe> gfldex: dont forget to update the meta file path here: https://github.com/perl6/ecosystem/blob/master/META.list

[16:38] <gfldex> will do

[17:32] <Geth> roast: 4da19d6e09 | usev6++ | S32-list/rotor.t

[17:32] <Geth> roast: Unfudge tests for r-j

[17:32] <Geth> roast: review: https://github.com/perl6/roast/commit/4da19d6e09

[18:13] <Geth> nqp/master: 7 commits pushed by pmurias++

[18:13] <Geth> nqp/master: eebf37f7a5 | [js] Decont before converting objects to num or int instead of having a hack on containers.…

[18:13] <Geth> nqp/master: af35e0643c | [js] Get rid of old TODO.…

[18:13] <Geth> nqp/master: 9b3f6aec2b | [js] Make multi caches work properly with containers.…

[18:13] <Geth> nqp/master: 626dc123d9 | [js] Fix signature.…

[18:13] <Geth> nqp/master: ed3e28c238 | Add a test for multi caches.…

[18:13] <Geth> nqp/master: 1ec0afcb78 | [js] Make nqp::unbox_i and nqp::unbox_n decontainerize their argument.…

[18:13] <Geth> nqp/master: 5177250035 | [js] Fix attribute access in the regex compiler when we don't know the cursor type at compile time.…

[18:13] <Geth> nqp/master: review: https://github.com/perl6/nqp/compare/ec9f11f01a...5177250035

[18:13] <Geth> rakudo/js: 7 commits pushed by pmurias++

[18:13] <Geth> rakudo/js: 2204a1ad3c | Reuse the containers that magic variables containers are cloned off.…

[18:13] <Geth> rakudo/js: 9ad1cf2a65 | [js] Remove some no longer needed #if that turned off code that now works.…

[18:13] <Geth> rakudo/js: 2da32b6279 | [js] Remove support for old less correct numification.…

[18:13] <Geth> rakudo/js: c90ad2a00e | [js] Fix nqp::p6capturelex when used with nqp::handle.…

[18:13] <Geth> rakudo/js: c1d4a2d353 | [js] Make nqp::p6capturelex more correct.…

[18:13] <Geth> rakudo/js: 2474adb8f6 | [js] Make nqp::isrwcont work on Scalars.…

[18:13] <Geth> rakudo/js: 79e6c424e5 | [js] Do the workaround in nqp::p6capturelex in the same way as the moar backend does it.…

[18:14] <Geth> rakudo/js: review: https://github.com/rakudo/rakudo/compare/b64da2964c...79e6c424e5

[18:16] <travis-ci> NQP build passed. Pawel Murias '[js] Fix attribute access in the regex compiler when we don't know the cursor type at compile time.'

[18:16] <travis-ci> https://travis-ci.org/perl6/nqp/builds/194055402 https://github.com/perl6/nqp/compare/ec9f11f01a8c...517725003564

[18:40] <jnthn> gfldex: ASSIGN-KEY is an optimization for the case where we have a simple `%hash<foo> = bar` form. Any more complex forms (like a list assignment) will use AT-KEY, which is meant to return a l-value. Implementing ASSIGN-KEY is optional; there's a default for that which is implemented in terms of AT-KEY.

[18:41] <jnthn> (Well, note, meant to return an l-value in the case it should be assignable; for immutable things of course not returning an l-value is fine)

[18:52] <gfldex> jnthn: I C, the consequence looks like this: https://gist.github.com/jonathanstowe/d8f5b8bdb13daa4b737ff958a0c0cc22

[18:52] <japhb_> .ask pmurias What's left to do in rakudo/js before you can merge to nom?

[18:52] <yoleaux2> japhb_: I'll pass your message to pmurias.

[18:52] <gfldex> i can doc it that way but would prefer something That Just Works

[18:57] <jnthn> gfldex: Unfortunately, there's no .get or so that gets the attribute's container, only a .get_value. :(

[18:57] <jnthn> If that existed then you'd not need the proxy at all here

[18:57] <jnthn> I think that's the something that's missing, though

[18:58] <jnthn> For now, the Proxy is the best way

[19:00] <pmurias> japhb: make it pass all the tests?

[19:00] <yoleaux2> 18:52Z <japhb_> pmurias: What's left to do in rakudo/js before you can merge to nom?

[19:02] <pmurias> japhb: what does merging it before it's read for use give?

[19:08] <pmurias> japhb: or do you mean what's needed before it passes all the roast tests?

[19:12] <japhb> pmurias: IIRC you merged nqp-js once it got to the point that it was bootstrapped and building it was not terribly different from building on the other backends (my memory may be fuzzy of course)

[19:12] <japhb> You'd recently said rakudo-js could fully compile the setting.

[19:13] <japhb> At what point do you start treating it like rakudo-j, which is to say perhaps not as complete as rakudo-m, but it's merged to nom and we generally try to keep it buildable and runnable.

[19:15] <japhb> In other words, I don't thing precedent is that you need to pass all roast tests to merge to nom, merely that you need to be able to build and run, handle enough of the language that "beginner code" will work on it, etc.

[19:15] <japhb> *don't think

[19:15] <japhb> I suppose "And you don't have to fudge the majority of the test suite" would save effort, so having the fudged tests be in the minority makes sense I suppose.

[19:16] <japhb> What % of roast (that rakudo-m passes) can rakudo-js currently handle?

[19:24] <pmurias> it doesn't yet pass any of roast, I'm working on getting it to pass the sanity tests

[19:24] <pmurias> it passes 20/24 of those

[20:16] <Geth> star: 4f81618b95 | (Steve Mynott)++ | 14 files

[20:16] <Geth> star: first attempt bump submodules

[20:16] <Geth> star: review: https://github.com/rakudo/star/commit/4f81618b95

[20:17] <Geth> star: 6bc7187354 | (Steve Mynott)++ | 14 files

[20:17] <Geth> star: bump submodules

[20:17] <Geth> star: review: https://github.com/rakudo/star/commit/6bc7187354

[20:41] <Geth> roast: smls++ created pull request #225: Add tests for RT #130554

[20:41] <Geth> roast: review: https://github.com/perl6/roast/pull/225

[20:41] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130554

[20:52] <Geth> star: 4a863302b9 | (Steve Mynott)++ | docs/announce/2017.01.md

[20:52] <Geth> star: draft announce

[20:52] <Geth> star: review: https://github.com/rakudo/star/commit/4a863302b9

[20:53] <Geth> star: ce52faadbf | (Steve Mynott)++ | docs/announce/2017.01.md

[20:53] <Geth> star: Windows is 64bit

[20:53] <Geth> star: review: https://github.com/rakudo/star/commit/ce52faadbf

[21:10] <samcv> when did highlighting on the docs break?

[21:12] <stmuk_> http://pl6anet.org/drop/rakudo-star-2017.01-RC0.tar.gz

[21:27] <RabidGravy> did someone fix of the bunch off gcc warnings with moar recentky? it appears to be down to just two now

[21:35] <MasterDuke> .tell RabidGravy yep, https://github.com/MoarVM/MoarVM/pull/501

[21:35] <yoleaux2> MasterDuke: I'll pass your message to RabidGravy.

[22:03] <Geth> roast: dba88c9d74 | (Sam S)++ | S03-operators/range.t

[22:03] <Geth> roast: Add tests for RT #130554 (#225)

[22:03] <Geth> roast: review: https://github.com/perl6/roast/commit/dba88c9d74

[22:03] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130554
