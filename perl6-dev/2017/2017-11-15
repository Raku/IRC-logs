[00:15] <tbrowder> MasterDuke: Mike Muuss died in 2000.

[00:16] <tbrowder> nov 20, right around Thanksgiving.

[00:32] <MasterDuke_> i forgot it was quite that long ago

[00:59] <travis-ci> Rakudo build passed. Jonathan Worthington 'Set no_inline when the dispatcher is needed'

[00:59] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/302045518 https://github.com/rakudo/rakudo/compare/b366859817a5...0ff32c7f8e4a

[01:33] <Geth> ¦ roast: 1ba17759b9 | (Samantha McVey)++ | S32-str/utf8-c8.t

[01:33] <Geth> ¦ roast: Check that regex works with adjacent utf8-c8 graphemes

[01:33] <Geth> ¦ roast:

[01:33] <Geth> ¦ roast: This is a test for the bug that was fixed in MoarVM commit a0dc2747c.

[01:33] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1ba17759b9

[02:05] <tbrowder> another npq question: where is $*W defined?

[02:06] <tbrowder> *nqp

[02:13] <timotimo> the actual variable or what's in it?

[02:14] <timotimo> what's in it is in World.nqp

[03:12] <Zoffix> "mi.cro.services took too long to respond." :(

[03:12] <Zoffix> No HTTPS? Boo, what century is this :)

[03:15] <Zoffix> (to clarify: the "too long to respond" error is when trying to access the site via HTTPS, but works fine over HTTP)

[05:56] <Geth> ¦ nqp: 0bea6888c3 | usev6++ | src/vm/jvm/QAST/Compiler.nqp

[05:56] <Geth> ¦ nqp: [jvm] Fix bug in frugal quant

[05:56] <Geth> ¦ nqp:

[05:56] <Geth> ¦ nqp: Similiar fix as in 854baa6795 for the js backend, pmurias++.

[05:56] <Geth> ¦ nqp:

[05:56] <Geth> ¦ nqp: Fixes RT #125021 and GH#1248 for Rakudo.

[05:56] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/0bea6888c3

[05:56] <synopsebot> RT#125021 [open]: https://rt.perl.org/Ticket/Display.html?id=125021 [JVM] Failing test in S05-modifier/perl5_5.t for regex with lazy quantifier on alternation

[05:56] <synopsebot> GH#1248 [open]: https://github.com/rakudo/rakudo/issues/1248 [JVM] Fix frugal quant on the JVM

[09:49] <AlexDaniel`> releasable6: next

[09:49] <releasable6> AlexDaniel`, Next release in 3 days and ≈9 hours. No blockers. 0 out of 196 commits logged

[09:49] <releasable6> AlexDaniel`, Details: https://gist.github.com/07af778d8aef4defd2a9d581714e434e

[11:38] <lizmat> https://www.youtube.com/watch?v=q8stPrG1rDo  # Superglue for the 21st Century

[12:00] <tbrowder> timotimo: the actual variable

[12:01] <tbrowder> i’m looking in nqp src now...

[12:04] <lizmat> tbrowder: $*W is available at compile time

[12:04] <lizmat> m: my $world := BEGIN $*W; dd $world.^name

[12:04] <camelia> rakudo-moar fff43fd70: OUTPUT: «"Perl6::World"␤»

[12:04] <lizmat> *BUT* is of no use in a precomp environment:

[12:04] <lizmat> ===SORRY!===

[12:04] <lizmat> Serialization Error: missing static code ref for closure '' (src/Perl6/World.nqp:2241)

[12:05] <tbrowder> thnx

[12:05] <lizmat> which makes sense as Perl6::World only really exists when you're compiling

[12:05] <lizmat> and running a precomped module isn't compiling  :-)

[12:05] <lizmat> Files=1228, Tests=75835, 316 wallclock secs (15.12 usr  5.36 sys + 2185.71 cusr 213.53 csys = 2419.72 CPU)

[12:07] <Geth> ¦ roast: 9274b5c31f | (Elizabeth Mattijsen)++ | S32-str/utf8-c8.t

[12:07] <Geth> ¦ roast: Unfudge now passing test

[12:07] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/9274b5c31f

[12:08] <tbrowder> i’m trying to understand the flow from Pod.nqp into creating the Perl 6 Pod classs...

[12:08] <tbrowder> *classes

[12:11] <tbrowder> looks like table cells need to be a class so formatting is handled like other pod blocks

[12:11] <tbrowder> thus grammar would need changing i think...

[12:17] <[Tux]> Rakudo version 2017.10-196-gfff43fd70 - MoarVM version 2017.10-80-ga0dc2747c

[12:17] <[Tux]> csv-test-xs-20      0.420 -  0.466

[12:17] <[Tux]> csv-ip5xs           1.107 -  1.110

[12:17] <[Tux]> test-t --race       1.292 -  1.352

[12:17] <[Tux]> test-t              3.197 -  3.228

[12:17] <[Tux]> test               11.741 - 11.752

[12:17] <[Tux]> csv-parser         12.036 - 12.254

[12:17] <[Tux]> csv-ip5xs-20       12.809 - 12.878

[12:17] <[Tux]> test-t-20 --race   20.245 - 20.700

[12:17] <[Tux]> test-t-20          58.923 - 59.824

[12:17] <[Tux]> sorry for being late

[12:23] <DrForr> I've noticed some of my stuff go up in performance over the last few days too.

[12:31] <Geth> ¦ rakudo: 92c8f321e7 | (Elizabeth Mattijsen)++ | docs/ChangeLog

[12:31] <Geth> ¦ rakudo: Add Telemetry related commits to ChangeLog

[12:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/92c8f321e7

[12:44] <Geth> ¦ rakudo: 15eb4f68c1 | (Elizabeth Mattijsen)++ | docs/ChangeLog

[12:44] <Geth> ¦ rakudo: Some more ChangeLog entries

[12:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/15eb4f68c1

[12:53] <tbrowder> ...or, do some magic in Pod.npq to build the new table cell class structure and send it on to Perl 6 land...

[12:53] <tbrowder> *Pod.nqp

[13:26] <Geth> ¦ rakudo: 2c84f77e74 | (Elizabeth Mattijsen)++ | 2 files

[13:26] <Geth> ¦ rakudo: Move the ThreadPoolScheduler data collection logic

[13:26] <Geth> ¦ rakudo:

[13:26] <Geth> ¦ rakudo: - to make a similar API to Thread.usage

[13:26] <Geth> ¦ rakudo: - allowing other modules access to the data without needing to know internals

[13:26] <Geth> ¦ rakudo: - no change in functionality

[13:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2c84f77e74

[13:27] <Geth> ¦ nqp: ca521e9ee7 | pmurias++ | src/vm/js/Compiler.nqp

[13:27] <Geth> ¦ nqp: [js] Fix order in which named arguments are taken

[13:27] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/ca521e9ee7

[13:27] <Geth> ¦ nqp: 08c36bd1e7 | pmurias++ | src/vm/js/Operations.nqp

[13:27] <Geth> ¦ nqp: [js] Fix bug when an container is passed incorrectly as this

[13:27] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/08c36bd1e7

[13:27] <Geth> ¦ nqp: eea1c6aafe | pmurias++ | src/vm/js/Operations.nqp

[13:27] <Geth> ¦ nqp: [js] Register atomic ops without implementing them

[13:27] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/eea1c6aafe

[13:44] <Geth> ¦ rakudo: ad2008d1c0 | (Elizabeth Mattijsen)++ | docs/ChangeLog

[13:44] <Geth> ¦ rakudo: Some more ChangeLog additions I know about

[13:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ad2008d1c0

[14:21] <Geth> ¦ rakudo: 0b35c4adcc | (Elizabeth Mattijsen)++ | docs/ChangeLog

[14:21] <Geth> ¦ rakudo: Another set of ChangeLog additions

[14:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0b35c4adcc

[15:32] <tbrowder> i know everyone is busy here, but i would appreciate at least a quick look at rakudo PR #1240 (fix for 5 documented pod bugs) to see if i’m heading in the right direction. (note there is a companion roast PR for associated tests.) if it looks fundamentally ok, i will piggy-back off it to investigate pod table cell formatting.

[15:41] * lizmat tries

[15:45] <tbrowder> lizmat: thnx

[15:49] <tbrowder> .tell timotimo you mentioned you worked on tables but TT didn’t like the two-pass-parsing. is that code available to see?

[15:49] <yoleaux> tbrowder: I'll pass your message to timotimo.

[15:54] <lizmat> tbrowder: I'm seeing test 42 fail in S26-documentation/07-tables.t , is that to be expected ?

[15:54] <lizmat> also: I see no TODO tests passing, is that also expected ?

[15:55] <timotimo> is that with the roast pr tb mentioned?

[15:55] <yoleaux> 15:49Z <tbrowder> timotimo: you mentioned you worked on tables but TT didn’t like the two-pass-parsing. is that code available to see?

[15:55] <timotimo> i think that code lived in a gist a long time ago

[15:56] <timotimo> tbrowder: https://gist.github.com/timo/6132249 - this may be it?

[15:56] <timotimo> m: https://gist.github.com/timo/6132249

[15:56] <camelia> rakudo-moar 0b35c4adc: OUTPUT: «Superhero, 4␤Secret, 38␤Identity, 20␤Superpower, 38␤[["Superhero"], "Identity", ["Secret"]]␤2␤The Shoveller, 4␤[Any]␤0␤Eddie Stevens, 20␤[["The Shoveller"],]␤1␤King Arthur's, 38␤[["The Shoveller"], ["Eddie Stevens"]]␤2␤si…»

[15:57] <timotimo> i don't see the formatting code support there though

[16:00] <tbrowder> lizmat: it’s not real clear, but you also need the roast PR...

[16:01] <tbrowder> PR #353

[16:04] <lizmat> tbrowder: wouldn't that also need a change in t/spectest.data ?

[16:05] <tbrowder> hm, i don’t know—i didn’t think to look at that, i was just looking at the S26 tests...

[16:06] <tbrowder> let me see...

[16:10] <tbrowder> yes, sorry, back to the drawing board...i just ran the S26 tests alone without the whole harness. i’ll update the spectest.data and try the whole thing.

[16:11] <tbrowder> in rakudo PR #1240

[16:25] <tbrowder> i've made the changes to PR #1240 and running the whole spectest suite now.

[16:26] <lizmat> tbrowder: if that is clean, I'm ok with putting it in

[16:27] <lizmat> but I must admit perhaps someone with more domain knowledge should also have a look

[16:27] <lizmat> because it's noob territory for me mostly

[16:29] <japhb> What org needs money to continue funding Perl 6 dev?  I went to look for available organizations to company-match, and the only one registered at my company with "Perl" in the title is the Perl 5 Core Maintenance Fund.  Which is worthy and all, but I want to specifically give to Perl *6* dev, and donating to TPF in general seems likely to miss the mark too.

[16:29] <japhb> (Has to be a charitable org in the US, if that matters.)

[16:30] <tbrowder> ok, i'll report test results here momentarily.  ref more current domain knowledge, i defer to your expertise, but timotimo worked on tables in the bowels of the grammar so maybe he can look, too.  also, Zoffix was new here when the problem was first reported, but he was involved a bit.

[16:31] <lizmat> japhb: maybe you should talk to [Coke] about that

[16:32] <lizmat> I mean, if TPF is not about Perl 6 as well anymore, we have some changes to make

[16:33] <moritz> what about the Perl 6 development fund, or whatever the thing that pays or paid jnthn++?

[16:35] <AlexDaniel`> releasable6: status

[16:35] <releasable6> AlexDaniel`, Next release in 3 days and ≈2 hours. No blockers. 106 out of 201 commits logged

[16:35] <releasable6> AlexDaniel`, Details: https://gist.github.com/7720819e9747c6425a796d17d9467dd6

[16:36] <tbrowder> timotimo: thnx, code is helpful even if there is no explicit formatting code handling.

[16:36] * lizmat wonders: do we actually have an idiomatic way of taking elements of a Seq until/while a condition is met ?

[16:37] <lizmat> other than .map: { if condition { last } }

[16:37] <AlexDaniel`> Oh wow. Lizmat++

[16:37] <lizmat> AlexDaniel`: yeah, I've been busy :-)

[16:40] <ilmari> japhb: http://www.perlfoundation.org/perl_6_core_development_fund ?

[16:40] <moritz> lizmat: gather for theseq { last if condition; take $_ }

[16:40] <lizmat> yuck :)

[16:40] <ilmari> is that not still operating?

[16:41] <moritz> lizmat: though I wouldn't object to a .while method on seqs and lists

[16:41] <AlexDaniel`> lizmat: at first I thought the bot has a bug and reports incorrect numbers :D

[16:41] <lizmat> moritz: yeah, was thinking the same thing

[16:41] <moritz> maybe also run it by jnthn or TimToady or so

[17:02] <lizmat> hmmm... I'm also surprised now that we don't have a .batch on Seq

[17:03] * lizmat clearly hasn't done enough Perl 6 application programming

[17:04] <Zoffix> m: ().Seq.batch: 42

[17:04] <camelia> rakudo-moar 0b35c4adc: ( no output )

[17:04] <Zoffix> lizmat: we do

[17:05] <Zoffix> s: ().Seq,

[17:05] <SourceBaby> Zoffix, Something's wrong: ␤ERR: Cannot resolve caller sourcery(Seq); none of these signatures match:␤    ($thing, Str:D $method, Capture $c)␤    ($thing, Str:D $method)␤    (&code)␤    (&code, Capture $c)␤  in block <unit> at -e line 6␤␤

[17:05] <Zoffix> s: ().Seq, 'batch', \(42)

[17:05] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/4fca94743/src/core/Any-iterable-methods.pm#L1895

[17:05] <lizmat> hmm... then we have a doc bug

[17:05] <Zoffix> Looks like all Anys have it

[17:06] <tbrowder> lizmat: got some spectest  failures, but not in S26 (looks like stuff that has been fixed since; "This is Rakudo version 2017.10-66-ge13d5b6 built on MoarVM version 2017.10-29-g116c7a1")

[17:07] <tbrowder> moar used almost 5 Gb during the tests (growing all the time). took 37 min on my  4 Gb laptop (lots of paging)

[17:11] <Geth> ¦ rakudo: 9096dafb4c | (Elizabeth Mattijsen)++ | docs/ChangeLog

[17:11] <Geth> ¦ rakudo: Document changes for GH #1226

[17:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9096dafb4c

[17:11] <Geth> ¦ rakudo: 99f38f9fe4 | (Elizabeth Mattijsen)++ | tools/build/missing-commits.pl6

[17:11] <Geth> ¦ rakudo: A tool for finding out which commits haven't been documented yet

[17:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/99f38f9fe4

[17:11] <synopsebot> RAKUDO#1226 [open]: https://github.com/rakudo/rakudo/issues/1226 Broken default value assignment on shaped array attributes

[17:13] <lizmat> AlexDaniel`: ^^^ thought would be nice to have such a tool

[17:13] <jnthn> tbrowder: The tests spawn many instances of moar (one per test file); lowering TEST_JOBS may give a speedup if it lowers memory use sufficient to avoid swapping

[17:14] <tbrowder> jnthn: thnx

[17:14] <lizmat> jnthn: thoughts about Seq.while and Seq.until ?

[17:14] <tbrowder> i need to pay more attention to extant docs

[17:18] <lizmat> afk for a few hours&

[17:37] <Zoffix> …^ op is kinda like Seq.until (or at least how I imagine Seq.until is to be)

[17:37] <Zoffix> m: say 1, *.succ …^ 42

[17:37] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41)␤»

[17:37] <Zoffix> m: say 1, *.succ …^ { $++ > 5 }

[17:37] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «(1 2 3 4 5 6)␤»

[17:37] <Zoffix> m: say {say "generating stuff"; rand} …^ { $++ > 5 }

[17:37] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «generating stuff␤generating stuff␤generating stuff␤generating stuff␤generating stuff␤generating stuff␤generating stuff␤(0.465865302345503 0.932493070960178 0.0401501641579721 0.236832596153431 0.84680654660632 0.763167124876054)␤»

[17:38] <Zoffix> Still need to write a good article about it :(

[17:38] <jnthn> m: my @a = 1, 3, 9, 5, 7; say @a ... 9

[17:38] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «(1 3 9)␤»

[17:39] <jnthn> m: my @a = 1, 1, 3, 9, 5, 7; say @a ... * != 1

[17:39] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «(1 1 3)␤»

[17:39] <jnthn> m: my @a = 1, 1, 3, 9, 5, 7; say @a ...^ * != 1

[17:39] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «(1 1)␤»

[17:39] <jnthn> :)

[17:40] <Zoffix> Yeah, I love that feature.

[17:45] <jnthn> I think I prefer that to a .while/.until methods, especially as it gives you the ^ endpoint option as a bonus :)

[17:50] <jnthn> home time o/

[17:57] <masak> m: say ([\+] rand xx Inf) ... * > 1

[17:57] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «(0.647021356833719 1.50077952849024)␤»

[17:58] <masak> m: say (([\+] rand xx Inf) ... * > 1).elems

[17:58] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «3␤»

[17:58] <masak> m: say (([\+] rand xx Inf) ... * > 1).elems xx 10

[17:58] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «(2 5 3 3 2 2 2 2 2 2)␤»

[17:58] <[Coke]> https://irclog.perlgeek.de/perl6-dev/2017-11-15#i_15453027 - whoa, whoa, whoa.

[17:59] <masak> m: constant N = 100; say ([+] (([\+] rand xx Inf) ... * > 1).elems xx N) / N

[17:59] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «2.66␤»

[17:59] <masak> approximation of e :)

[18:00] <samcv> good *

[18:00] <masak> \o

[18:01] <Zoffix> masak++

[18:02] <masak> m: say e

[18:02] <camelia> rakudo-moar 99f38f9fe: OUTPUT: «2.71828182845905␤»

[18:02] <[Coke]> japhb: in general, if you want to donate to TPF, the treasurer is the person to talk to. I have already mentioned to dan that I can see a donate link for the p5 fund, but not the p6 fund; haven't seen a response on that yet.

[18:03] <[Coke]> On the matching side; I don't know anything about why something other than just "TPF" would show up in your list of orgs to donate to; that's something else that would probably have to be coordinated with Dan. I'm happy to proxy these questions if you like.

[18:04] <[Coke]> but TPF is very much about all the perls.

[18:04] <samcv> [Coke]: does the perl foundation have an amazon smile thing?

[18:04] <samcv> then they'd get 1% of purchases i think when you buy at smile.amazon.com

[18:05] <[Coke]> I don't know. *I* personally have an amazon referrer link I'd be happy to share, though. :)

[18:05] <[Coke]> (Seriously, I'll ask the Treasurer about that as well)

[18:06] <samcv> just searched and don't see it there. i'd happily add them as an org if they set that up!

[18:07] <samcv> i mean select them on my amazon smile profile that is

[18:07] <[Coke]> ah. I missed Dan++'s reply: they are working on setting up the links so that there will be a direct link on the site we can use to donate to the individual funds. "the complexity of the CRM is somewhat daunting"

[18:11] <[Coke]> samcv: pinged him on the smile question.

[18:11] <[Coke]> japhb: do you have any more details of where you found the p5 link?

[18:11] <[Coke]> was it an employers list of orgs they match with?

[18:11] <[Coke]> Or was it via some tpf site?

[18:15] <japhb> Yeah, the employer'

[18:15] <japhb> s list

[18:15] <japhb> FEK

[18:16] <japhb> The deal is that I'm happy to do the paperwork to add to the employer's list ... but I need to know what to actually request.

[18:16] <japhb> In particular, I want 100% of my donation *and* 100% of the company's match (sent separately) to end up going to Perl 6 work.

[18:30] <[Coke]> if you can msg me the details you see for the p5 fund, that will probably help.

[18:45] <japhb> [Coke]: Done for the overview info, but I didn't post all the tax/contact info in the details.

[19:01] <[Coke]> samcv: http://news.perlfoundation.org/2014/03/tpf-is-now-participating-on-am.html

[19:02] <[Coke]> so, yes, since 2014

[19:04] <[Coke]> (The Perl Foundation is a d.b.a. (doing business as) for Yet Another Society.

[19:04] <[Coke]> )

[19:19] <dogbert17> [Coke], do you think anyone would be upset if we fixed the missing words on the type.html page by removing the non-working links, e. g. 'BackTrace::Frame     Class     Single Frame of a <missing word here>' ?

[19:21] <dogbert17> here's the non working code from the pod:  =SUBTITLE Single frame of a L<Backtrace>

[19:22] <[Coke]> dogbert17: i need more context.

[19:22] <[Coke]> URL?

[19:23] <[Coke]> I assume this is the doc site

[19:23] <dogbert17> https://docs.perl6.org/type.html

[19:23] <dogbert17> another example from the same page is 'Supplier'

[19:50] <samcv> [Coke]: oh it's not listed under The Perl Foundation that's why

[19:53] <[Coke]> dogbert17: I mean, ideally, we should make those links work, but I'd rather have a missing feature than broken text.

[19:58] <Zoffix> FWIW it's D#209

[19:58] <synopsebot> D#209 [open]: https://github.com/perl6/doc/issues/209 [POD] L<>s in =SUBTITLE do not work

[20:02] <[Coke]> I think one commit that removed them for now tagged to the ticket, and another later to undo that and fix the underlying issue would be fine.

[20:02] <[Coke]> dogbert17++ Zoffix++

[20:06] <dogbert17> ok, I'll fix it a little later unless someone beats me to it

[23:50] <Geth> ¦ rakudo: 6db51f9753 | (Elizabeth Mattijsen)++ | tools/build/missing-commits.pl6

[23:50] <Geth> ¦ rakudo: Simplify helper script through the power of set operators

[23:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6db51f9753

[23:54] <AlexDaniel> Does anybody know what's going on with RT#132441?

[23:54] <synopsebot> RT#132441 [new]: https://rt.perl.org/Ticket/Display.html?id=132441 [SEVERE] Windows REPL cannot handle «, » characters

[23:55] <AlexDaniel> or is it simply the nature of whatever terminal was used?
