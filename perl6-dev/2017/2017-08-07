[00:08] * [Coke] wonders what the commit message on bf7063d1ae is.

[00:09] <[Coke]> sorry, what the *point* of that commit message is.

[00:09] <timotimo> to warn potential imitators?

[00:09] <[Coke]> (it's very long, and has a bunch of backstory that isn't relevant to the point of the commit:

[02:05] <[Coke]> ./win 2

[02:05] <[Coke]> I am apparently not eligible for the lottery. :|

[02:07] <Zoffix> can't use the dot :)

[02:12] <[Coke]> added TEST_THREADS support to a few files in the doc test; is not perfect plan, but allows for someone to have individual test use multiple cores.

[03:20] <AlexDaniel> whew! That's a lot of commits in these 2.5 weeks. Need to get some good sleep before committing this changelog monstrosity… :)

[03:24] <Zoffix> NeuralAnomaly: status

[03:24] <NeuralAnomaly> Zoffix, [?] Next release will be in 1 week and 5 days. Since last release, there are 34 new still-open tickets (7 unreviewed and 0 blockers) and 135 unreviewed commits. See http://perl6.fail/release/stats for details

[03:25] * Zoffix thinks "wow, not a lot of commits"

[03:25] <Zoffix> :)

[03:29] <AlexDaniel> Zoffix: by the way, I didn't really find this list useful. For example, now I have to click the button 135 times. Maybe I'm missing something?

[03:30] <Zoffix> AlexDaniel: "this list" being what?

[03:30] <geekosaur> release/stats, presumably

[03:30] <AlexDaniel> Zoffix: the one on https://perl6.fail/release/stats (commits)

[03:30] <Zoffix> AlexDaniel: how do you plan to log those commits to ChangeLog?

[03:31] <Zoffix> (the list provides partially-processed things you can copy-paste most of the time)

[03:31] <Zoffix> Or, how do you plan to track which commits you added to ChangeLog and which you still need to add?

[03:31] <Zoffix> (that's where the button comes in; click it once you added commit to ChangeLog)

[03:32] <AlexDaniel> Zoffix: well, I simply used git log with some custom formatting. With some macro trickery it was probably significantly more efficient than fiddling with the browser

[03:32] <Zoffix> OK, then don't use the browser

[05:47] <nine> A reason for setting up NativeCall subs at first call may be because at mixin time, we don't have access to all information we'd need. E.g. a return type may be added later by a returns trait.

[05:48] <nine> Even the signature is only available later

[06:56] <[Tux]> This is Rakudo version 2017.07-136-gda4a0f50a built on MoarVM version 2017.07-320-g600c2e9c

[06:56] <[Tux]> csv-ip5xs        2.285

[06:56] <[Tux]> test            12.432

[06:56] <[Tux]> test-t           3.713 - 3.726

[06:56] <[Tux]> csv-parser      14.057

[07:00] <lizmat> whee!

[09:22] <nine> How evil and/or wrong is this? https://gist.github.com/niner/0de8371393bff876decdf47fdacb5e6b

[09:24] <jnthn> Dangerous

[09:24] <jnthn> I'm also surprised it works

[09:25] <jnthn> invocation_attr_name is menat to be an attribute name o.O

[09:25] <jnthn> But also

[09:25] <jnthn> An invoke spec lives on an STable

[09:25] <jnthn> The assumption is that it won't change

[09:26] <nine> jnthn: but it does change when we mixin the role containing the CALL-ME?

[09:26] <jnthn> True

[09:27] <jnthn> Roles are interned on their parameters

[09:27] <jnthn> Though I guess they should be unique always in this case

[09:27] <jnthn> So I guess it's safe

[09:29] <nine> It is a bit faster than before. Though what I'd really like is re-using the signature of the original sub.

[09:29] <nine> Or rather replacing the original sub's body by "nqp::nativecall($!rettype, self, $args);"

[10:10] <Geth> ¦ rakudo/nom: 46ef1b5b48 | (Stefan Seifert)++ | lib/NativeCall.pm6

[10:10] <Geth> ¦ rakudo/nom: Speed up NativeCall by replacing the subroutine code in setup

[10:10] <Geth> ¦ rakudo/nom:

[10:10] <Geth> ¦ rakudo/nom: Instead of overriding the subroutine's code via a CALL-ME method, we

[10:10] <Geth> ¦ rakudo/nom: replace the subroutine's code object ($!do) with the native calling code

[10:10] <Geth> ¦ rakudo/nom: in !setup. This saves the check for $!setup on each call and probably

[10:10] <Geth> ¦ rakudo/nom: makes the call cheaper in general.

[10:10] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/46ef1b5b48

[11:43] <AlexDaniel> did we ever have perl6 syntax highlighting in github comments?

[11:46] <AlexDaniel> http://modules.perl6.org looks awesome, by the way

[11:47] <AlexDaniel> well, a little bit low on the contrast in some places, but still awesome

[13:18] <timotimo> nine: got a number for how much faster?

[13:20] <nine> timotimo: saved about 6 % in csv-ip5xs on 100000 rows (dropped from 16 to 15 seconds)

[13:26] <samcv> grant status update 3 is up https://cry.nu/perl6/grant-status-update-3/

[14:28] <Zoffix> AlexDaniel: some areas are deliberately faded out until you hover

[14:30] <Zoffix> samcv++

[14:36] <Zoffix> .tell moritz FWIW, modules.perl6.org rejects any logotypes that aren't 32x32 px in size. I see a couple of your dists get reported with that problem

[14:36] <yoleaux> Zoffix: I'll pass your message to moritz.

[18:09] <AlexDaniel> Zoffix: I was mainly concerned with navbar buttons. At least here, #333 is noticeably easier to read, and also passes WCAG recommendations for all font sizes

[18:10] <AlexDaniel> Zoffix: but everything else is so beautiful that I feel bad complaining about this :)

[18:13] <samcv> we don't currently have a routine to strip all text so it only has base characters do we?

[18:14] * TimToady waves briefly from home after driving 8400 klicks across the USA in 10 days, now packing for Amsterdam...

[18:14] <Zoffix> samcv: .samemark

[18:14] <samcv> well i guess you can use that as well

[18:14] <timotimo> Zoffix: i wonder how that works with ZWJ and such on emoji

[18:15] <samcv> samemark?

[18:15] <timotimo> yes

[18:15] <samcv> ah i think it works

[18:15] <samcv> it goes based on the base character

[18:15] <Zoffix> m: "\c[RAINBOW FLAG]".samemark("z").uninames.say

[18:15] <camelia> rakudo-moar 46ef1b: OUTPUT: «(WAVING WHITE FLAG)?»

[18:15] <Zoffix> hah

[18:15] <timotimo> damn you, mark.

[18:16] <samcv> it's broken with prepend characters though

[18:16] <AlexDaniel> m: dd “\c[woman gesturing OK]”.samemark(‘a’).uninames

[18:16] <camelia> rakudo-moar 46ef1b: OUTPUT: «("FACE WITH OK GESTURE",).Seq?»

[18:16] <samcv> m: dd "\c[RAINBOW FLAG]".uninames

[18:16] <camelia> rakudo-moar 46ef1b: OUTPUT: «("WAVING WHITE FLAG", "VARIATION SELECTOR-16", "ZERO WIDTH JOINER", "RAINBOW").Seq?»

[18:17] <Zoffix> AlexDaniel: fixed in https://github.com/perl6/modules.perl6.org/commit/3a48f9ff99

[18:17] <AlexDaniel> Zoffix: Thank you!

[18:18] <samcv> ah i see why it's broken

[18:18] <samcv> it just uses nqp to do it and doesn't use the proper functions

[18:18] <samcv> it shifts things instead of using baseordat or whatever

[18:18] <samcv> tries to do it manually

[18:22] <samcv> hmm maybe i should just write a MVM function that does something similar?

[18:22] <samcv> that changes the base character at least

[18:30] <samcv> AlexDaniel,  dd “\c[woman gesturing OK]”.samemark(‘a’).uninames # this is working fine. it just removes the marks

[18:31] <samcv> and the base character is FACE WITH GESTURE

[18:31] <samcv> m:  dd “\c[arabic number sign]a”.samemark('b').uninames

[18:31] <camelia> rakudo-moar 46ef1b: OUTPUT: «("ARABIC NUMBER SIGN",).Seq?»

[18:31] <samcv> this doesn't work though

[18:32] <samcv> m:  dd 'a'.samemark(“\c[woman gesturing OK]”).uninames

[18:32] <camelia> rakudo-moar 46ef1b: OUTPUT: «("LATIN SMALL LETTER A", "ZERO WIDTH JOINER", "FEMALE SIGN", "VARIATION SELECTOR-16").Seq?»

[18:32] <samcv> m:  dd 'a'.samemark(“\c[woman gesturing OK]”)

[18:32] <camelia> rakudo-moar 46ef1b: OUTPUT: «"a???"?»

[18:41] <b2gills> bisect: old=2017.04.3 new=2017.05 say Mix('a' => 0.3).roll

[18:41] <bisectable6> b2gills, Bisecting by exit code (old=2017.04.3 new=2017.05). Old exit code: 0

[18:41] <bisectable6> b2gills, bisect log: https://gist.github.com/c664055209ebd18ecac1232eef8630bc

[18:41] <bisectable6> b2gills, (2017-04-30) https://github.com/rakudo/rakudo/commit/a2602b9cee60f746b6012c87c146d68cb79b4bed

[18:41] <AlexDaniel> c: a2602b9c^,a2602b9c say Mix('a' => 0.3).roll

[18:41] <committable6> AlexDaniel, ¦a2602b9c^: «a» ¦a2602b9: «Type check failed in binding; expected Int but got Rat (0.3)?  in block <unit> at /tmp/TsKgDPJwiK line 1? «exit code = 1»»

[18:42] <b2gills> Continuation from https://irclog.perlgeek.de/perl6/2017-08-01#i_14950241

[19:00] <b2gills> Rakudobugged: RT: 131855

[19:29] <Geth> ¦ nqp: 9b94aae27b | (Samantha McVey)++ | 2 files

[19:29] <Geth> ¦ nqp: Add eqatim and indexim ops. Fix a bug when using ignoremark

[19:29] <Geth> ¦ nqp:

[19:29] <Geth> ¦ nqp: There was a bug with ignoremark if the first two codepoints in the haystack

[19:29] <Geth> ¦ nqp: matched, it would act as if the entire needle had matched. This was only with

[19:29] <Geth> ¦ nqp: ignoremark by itself, as ignorecase+ignoremark had already been fixed.

[19:29] <Geth> ¦ nqp:

[19:29] <Geth> ¦ nqp: This bug was less noticable than the previously fixed bug in

[19:29] <Geth> ¦ nqp: <…commit message has 6 more lines…>

[19:29] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9b94aae27b

[19:29] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.07-318-g604da4d...2017.07-347-g127fa2ce

[19:29] <Geth> ¦ nqp: 07e5c80d19 | (Samantha McVey)++ | tools/build/MOAR_REVISION

[19:29] <Geth> ¦ nqp: Bump MoarVM for ignoremark fixes and other changes

[19:29] <Geth> ¦ nqp:

[19:29] <Geth> ¦ nqp: Changes brought in by this bump:

[19:29] <Geth> ¦ nqp: 127fa2ce Add indexim_s op and improve/fix bugs in eqatim_s

[19:30] <Geth> ¦ nqp: 0fe5cd60 More precise CFGs for control exception handlers.

[19:30] <Geth> ¦ nqp: 39dbe1bd Allow for GOTO handler to become unreachable.

[19:30] <Geth> ¦ nqp: 35f82730 Factor our and re-use dead BB elimination.

[19:30] <Geth> ¦ nqp: <…commit message has 21 more lines…>

[19:30] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/07e5c80d19

[19:30] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2017.07-318-g604da4d...2017.07-347-g127fa2ce

[20:09] <Geth> ¦ rakudo/nom: a91ad2da85 | (Elizabeth Mattijsen)++ | src/core/Rakudo/QuantHash.pm

[20:09] <Geth> ¦ rakudo/nom: Fix for RT #131855

[20:09] <Geth> ¦ rakudo/nom:

[20:09] <Geth> ¦ rakudo/nom: Stupid copy-pasto.

[20:09] <Geth> ¦ rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a91ad2da85

[20:09] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=131855

[21:07] <AlexDaniel> planned maintenance :) ?

[21:07] <AlexDaniel> :| broken

[21:08] <AlexDaniel> .seen perlpilot

[21:08] <yoleaux> I saw perlpilot 2 Aug 2017 17:52Z in #perl6: <perlpilot> Altreus: gist works

[21:08] <AlexDaniel> .tell perlpilot https://github.com/perlpilot/p6-sake/pull/6 plz

[21:08] <yoleaux> AlexDaniel: I'll pass your message to perlpilot.

[21:09] <AlexDaniel> there we go

[22:09] <lizmat_> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/08/07/2017-32-weekly-101/

[22:37] <Zoffix> Opened a @LARRY ticket: https://rt.perl.org/Ticket/Display.html?id=131856

[22:37] <Zoffix> m: sub foo (*@a) { @a.join: '|' }; say foo <h H>.any, 'amadryas'

[22:37] <camelia> rakudo-moar a91ad2: OUTPUT: «any("h", "H")|amadryas?»

[22:37] <Zoffix> junctions with slurpies are kinda LTA, because what you get in reponse from core subs and ops depends on whether they have a slurpy candidate or not. For exaple, you get different things from `+` vs `~` op (the latter stringifies the junction itslef)

[23:27] <AlexDaniel> :|

[23:27] <AlexDaniel> https://github.com/rakudo/rakudo/blob/nom/src/core/Proc.pm#L223

[23:27] <AlexDaniel> https://github.com/rakudo/rakudo/blob/nom/src/core/Proc/Async.pm#L272

[23:31] <AlexDaniel> (it's ENV vs env, and to make things worse, proc.start simply eats env without complaining)

[23:39] <ugexe> yep, there is also cwd/CWD

[23:39] <yoleaux> 6 Aug 2017 09:31Z <Zoffix> ugexe: how is this file generated? I see source URLs are still pointing to GitHub; how come all of them aren't pointing to CPAN? https://github.com/ugexe/Perl6-ecosystems/blob/master/cpan.json

[23:40] <ugexe> Zoffix: because those came before the automatic source-url transformer was implemented in PAUSE

[23:42] <ugexe> its generated by https://github.com/ugexe/Perl6-App--ecogen (linked in the main repo's github description thing)

[23:50] <AlexDaniel> ugexe: cwd/CWD ?
