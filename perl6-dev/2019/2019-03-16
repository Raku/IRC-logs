[00:21] *** lucasb left
[01:47] *** epony left
[01:56] <sortiz> lizmat: As your new https://github.com/rakudo/rakudo/commit/23fca8f6fb don't solve the original issue in #2650, I don't think is a good idea.

[02:02] <sortiz> Now there is an arbitrary difference between "for Failure.new { .perl.say }" and "for Failure.new, Failure.new { .perl.say }"

[02:10] *** epony joined
[03:27] *** ugexe joined
[03:54] *** leont left
[04:09] *** pmurias left
[05:32] *** sortiz left
[07:33] *** AlexDaniel joined
[08:10] *** pmurias joined
[08:45] <[Tux]> Rakudo version 2019.03-39-g23fca8f6f - MoarVM version 2019.03-32-g5e3633987

[08:45] <[Tux]> csv-test-xs-20      0.429 -  0.457

[08:45] <[Tux]> test-t --race       0.851 -  0.857

[08:45] <[Tux]> csv-ip5xs           0.791 -  0.898

[08:45] <[Tux]> test-t              1.803 -  1.818

[08:45] <[Tux]> csv-ip5xs-20        6.384 -  7.185

[08:45] <[Tux]> test                6.811 -  7.632

[08:45] <[Tux]> test-t-20 --race    9.484 -  9.509

[08:45] <[Tux]> csv-parser         22.842 - 25.118

[08:45] <[Tux]> test-t-20          30.321 - 30.688

[08:45] <[Tux]> Neat, and I am even working from home!

[09:07] *** pmurias left
[09:24] *** robertle joined
[10:05] <lizmat> Files=1266, Tests=88069, 406 wallclock secs (21.18 usr  6.26 sys + 2935.21 cusr 229.79 csys = 3192.44 CPU)

[10:06] *** leont joined
[10:17] *** ExtraCrispy left
[10:23] *** leont left
[10:51] *** ExtraCrispy joined
[12:50] *** Kaiepi left
[12:52] *** Kaiepi joined
[13:04] *** Kaiepi left
[13:07] *** Kaiepi joined
[13:16] *** Kaiepi left
[13:17] *** Kaiepi joined
[13:37] *** lucasb joined
[13:37] *** Kaiepi left
[13:37] *** Kaiepi joined
[14:14] *** leont joined
[14:42] *** Kaiepi left
[14:45] *** Kaiepi joined
[14:48] *** Kaiepi left
[15:13] *** leont left
[15:25] *** Kaiepi joined
[15:32] *** AlexDaniel` left
[15:32] *** tyil[m] left
[15:45] *** AlexDaniel` joined
[16:11] *** tyil[m] joined
[17:18] *** leont joined
[17:22] *** vrurg left
[17:24] *** leont left
[17:46] <Geth> ¦ rakudo: 4ffb4082b0 | (Elizabeth Mattijsen)++ | src/core/Failure.pm6

[17:46] <Geth> ¦ rakudo: Make Failure.list also throw

[17:46] <Geth> ¦ rakudo: 

[17:46] <Geth> ¦ rakudo: As part of R#2650

[17:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4ffb4082b0

[17:56] <lucasb> so, Failure wasn't supposed to be "propagating"?

[17:58] <lucasb> https://design.perl6.org/S02.html#line_1393

[17:58] <lucasb> $fee.fie.[$foe].{$foo}

[18:00] <lucasb> ah, Nil *is*

[18:00] <lizmat> bisectable6: Failure.new.foo.bar.baz // die "foo"

[18:01] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=4ffb408) because on both starting points the exit code is 1

[18:01] <AlexDaniel> 6c: Failure.new.foo.bar.baz // die "foo"

[18:01] <bisectable6> lizmat, bisect log: https://gist.github.com/3226606de6bfd60208754a2c7b23aa18

[18:01] <bisectable6> lizmat, (2016-03-02) https://github.com/rakudo/rakudo/commit/fdd37a9e0bef16eb3e4bb24ddd59247e379b5038

[18:01] <committable6> AlexDaniel, https://gist.github.com/3f74ebef906f8e8aeda46772bf802380

[18:02] <AlexDaniel> just the line number changing

[18:17] *** AlexDaniel left
[18:18] *** AlexDaniel joined
[18:24] *** leont joined
[18:28] *** vrurg joined
[18:31] *** leont left
[18:34] *** vrurg left
[18:38] *** vrurg joined
[19:37] *** hankache joined
[20:12] *** ExtraCrispy left
[20:16] *** lucasb left
[20:26] *** hankache left
[21:10] *** hankache joined
[21:46] <Geth> ¦ nqp/thread_init_stack_size: 31cba34125 | (Nick Logan)++ | 6 files

[21:46] <Geth> ¦ nqp/thread_init_stack_size: Add stack size parameter to nqp::newthread

[21:46] <Geth> ¦ nqp/thread_init_stack_size: 

[21:46] <Geth> ¦ nqp/thread_init_stack_size: Adds a stack size parameter to set the initial stack size of a new

[21:46] <Geth> ¦ nqp/thread_init_stack_size: thread.

[21:46] <Geth> ¦ nqp/thread_init_stack_size: review: https://github.com/perl6/nqp/commit/31cba34125

[21:49] <Geth> ¦ nqp: ugexe++ created pull request #522: Add stack size parameter to nqp::newthread

[21:49] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/522

[22:02] <Geth> ¦ star: 526ac1bc98 | (Naoum Hankache)++ (committed using GitHub Web editor) | tools/star/release-guide.pod

[22:02] <Geth> ¦ star: Update release-guide.pod

[22:02] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/526ac1bc98

[22:07] <bartolin> ugexe: a question about Rakudo::Internals::JSON, since you've updated it recently: do you think it would be okay to change the variable $pos in that class from 'int' to 'Int'? There seems to be a bug with the 'is rw' trait for natives on the jvm backend: https://github.com/rakudo/rakudo/issues/2748#issuecomment-473592555 (I didn't build and spectest that change on moar yet, but could do that later/tomorrow)

[22:17] *** hankache_ joined
[22:20] *** hankache left
[22:26] *** hankache_ left
[22:27] *** hankache joined
[22:28] <ugexe> bartolin: seems like it should be ok. `int` would have been used in JSON::Fast for performance reasons, but I don't think a typical META6.json only has one or two integers

[22:28] <ugexe> only has but^

[22:29] <timotimo> isn't $pos for the position the parser is at rather than integers in the source data?

[22:29] <ugexe> ah of course

[22:35] <bartolin> maybe I should try to measure what's the price for switching to Int. there are at least two alternatives: a) fixing the JVM bug -- best option, but I didn't find the exact problem, yet; b) adding '#?if jvm' statements to use 'Int' only on the JVM backend.

[22:36] *** vrurg left
[22:36] <timotimo> can we "constant JsonInt := int" or "constant JsonInt := Int" based on jvm or not?

[22:39] <bartolin> that should work. you intend to change the signature to 'JsonInt $pos is rw' and contain the workaround in one place?

[22:39] <timotimo> yeah

[22:39] <timotimo> dunno how often "int" appears in that code, but i think it's like ten times?

[22:39] <bartolin> I'll try that (probably tomorrow) -- I like the idea :)

[22:40] <bartolin> yeah, it occurs seven times

[22:44] <Geth> ¦ nqp: usev6++ created pull request #523: [jvm, js] Tweak check for illegal range endpoint

[22:44] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/523

[22:44] <ugexe> you can get a benchmark via `zef search HTTP`

[22:47] <bartolin> thanks for the suggestions!

[23:11] <hankache> .seen AlexDaniel

[23:11] <yoleaux> I saw AlexDaniel 18:02Z in #perl6-dev: <AlexDaniel> just the line number changing

[23:11] <hankache> .seen stmuk

[23:11] <yoleaux> I saw stmuk 8 Nov 2018 22:20Z in #perl6: <stmuk> I think the meaning of "refrains" has been overloaded!

[23:41] <gfldex> m: whenever my $listener = IO::Socket::Async.listen("localhost", 0) -> $conn {}; say $listener.socket-port;

[23:41] <camelia> rakudo-moar 4ffb4082b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot have a 'whenever' block outside the scope of a 'supply' or 'react' block␤at <tmp>:1␤------> 3whenever7⏏5 my $listener = IO::Socket::Async.listen␤»

[23:41] <gfldex> m: react { whenever my $listener = IO::Socket::Async.listen("localhost", 0) -> $conn {} }; say $listener.socket-port;

[23:41] <camelia> rakudo-moar 4ffb4082b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$listener' is not declared␤at <tmp>:1␤------> 3sten("localhost", 0) -> $conn {} }; say 7⏏5$listener.socket-port;␤»

[23:53] *** hankache left
