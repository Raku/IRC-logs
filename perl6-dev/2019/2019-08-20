[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:02] *** ChanServ sets mode: +v reportable6

[00:02] *** kiwi_65 joined
[00:09] *** leont left
[00:09] <Geth> ¦ rakudo/master: 8 commits pushed by (Vadim Belman)++

[00:09] <Geth> ¦ rakudo/master: 197fcc2cb7 | Implement CORE::<lang-rev> pseudo-packages

[00:09] <Geth> ¦ rakudo/master: 48d117231e | Set full name of CORE::X pseudo-package

[00:09] <Geth> ¦ rakudo/master: dbfb2e2564 | Provide compile-time access to CORE::X namespaces

[00:09] <Geth> ¦ rakudo/master: ac707d2ae4 | Merge branch 'master' of https://github.com/rakudo/rakudo into problem-solving-80

[00:09] <Geth> ¦ rakudo/master: ae7e77e759 | Rename second-level CORE namespaces to v6<rev>

[00:09] <Geth> ¦ rakudo/master: d1c1afd588 | Merge branch 'master' of https://github.com/rakudo/rakudo into problem-solving-80

[00:09] <Geth> ¦ rakudo/master: 6051e1294f | Merge branch 'master' of https://github.com/rakudo/rakudo into problem-solving-80

[00:09] <Geth> ¦ rakudo/master: 6a88590895 | Merge pull request #3112 from vrurg/problem-solving-80

[00:09] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/d7d8d37edda4...6a8859089521

[00:11] <Geth> ¦ roast: 7b3cce6ed9 | (Vadim Belman)++ | 4 files

[00:11] <Geth> ¦ roast: Add tests for CORE::v6<rev> pseudo-packages

[00:11] <Geth> ¦ roast: 

[00:11] <Geth> ¦ roast: Test for namespaces referring their respective COREs and for valid

[00:11] <Geth> ¦ roast: multi-dispatching over symbols from different COREs.

[00:11] <Geth> ¦ roast: 

[00:11] <Geth> ¦ roast: perl6/problem-solving#80

[00:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7b3cce6ed9

[00:11] <Geth> ¦ roast: e412b6f75e | (Vadim Belman)++ (committed using GitHub Web editor) | 4 files

[00:11] <Geth> ¦ roast: Merge pull request #567 from vrurg/problem-solving-80

[00:11] <Geth> ¦ roast: 

[00:11] <Geth> ¦ roast: Add tests for CORE::v6<rev> pseudo-packages

[00:11] <Geth> ¦ roast: 

[00:11] <Geth> ¦ roast: Test for namespaces referring their respective COREs and for valid

[00:11] <Geth> ¦ roast: multi-dispatching over symbols from different COREs.

[00:11] <Geth> ¦ roast: 

[00:11] <Geth> ¦ roast: - perl6/problem-solving#80

[00:11] <Geth> ¦ roast: - rakudo/rakudo#3112

[00:11] <synopsebot> RAKUDO#3112 [closed]: https://github.com/rakudo/rakudo/pull/3112 [6.e] Implement CORE::v6<lang-rev> pseudo-packages

[00:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e412b6f75e

[00:37] *** RageGauge joined
[00:39] <Geth> ¦ roast: vrurg++ created pull request #568: Fix for incorrect number of tests

[00:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/568

[00:39] <Geth> ¦ roast: 021bca6cd0 | (Vadim Belman)++ | S02-names/pseudo-6e.t

[00:39] <Geth> ¦ roast: Fix for incorrect number of tests

[00:39] <Geth> ¦ roast: 

[00:39] <Geth> ¦ roast: Reverting a left-over of debugging process.

[00:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/021bca6cd0

[00:39] <Geth> ¦ roast: 83adc85292 | (Vadim Belman)++ (committed using GitHub Web editor) | S02-names/pseudo-6e.t

[00:39] <Geth> ¦ roast: Merge pull request #568 from vrurg/problem-solving-80

[00:39] <Geth> ¦ roast: 

[00:39] <Geth> ¦ roast: Fix for incorrect number of tests

[00:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/83adc85292

[00:41] <kiwi_65> To the channel: timotimo has confirmed that my supposed "dramatic bug" significant DoS is no such thing, just a plain old bug. Sorry about the false alarm. 

[00:42] <RageGauge> I'm the one who found the bug, glad to know it's not something I need to lose sleep over.

[00:45] <timotimo> thanks for kicking our butt regarding vulnerability report infrastructure/plans in any case :)

[00:47] <vrurg> https://github.com/perl6/6.d-prep/issues/10 – can somebody confirm that this was implemented? So far, scannng through Actions doesn't reveal any 'dynamic' alongside to $_

[00:48] <timotimo> ah, yes, $_ is no longer dynamic in 6.d

[00:49] <vrurg> Ok, I'm closing the ticket. Asking because there is a test for `$CALLER::_` and I wonder wether it shall be dropped altogether or modified for `CALLER::MY::`?

[00:50] <vrurg> I think dropping it makes more sense because those aspects are covered by S02-names/pseudo*.t

[00:51] <RageGauge> I think this is the first time I've ever come across a legitimate bug in a language, every other time it's been a bug in my code. Since I'm already here, thank you, to all of you who have made Perl6. I've used and loved Perl 5 for over a decade. Learning Perl6 has been like falling in love again.

[00:52] <timotimo> \o/

[00:53] <vrurg> RageGauge: oh know this feeling. :)

[00:53] <vrurg> *I know

[01:06] *** MasterDuke left
[01:16] *** travis-ci joined
[01:16] <travis-ci> Rakudo build passed. Vadim Belman 'Merge pull request #3112 from vrurg/problem-solving-80

[01:16] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/574096947 https://github.com/rakudo/rakudo/compare/d7d8d37edda4...6a8859089521

[01:16] *** travis-ci left
[01:19] *** lucasb left
[02:09] *** RageGauge left
[03:07] *** squashable6 left
[03:07] *** squashable6 joined
[03:07] *** ChanServ sets mode: +v squashable6

[03:10] *** kiwi_65 left
[04:29] <Kaiepi> bisectable6, use nqp; class FooHOW does Metamodel::MethodContainer { method new_type() { my $meta := self.new; my $foo := nqp::settypehll(nqp::newtype($meta, "Uninstantiable"), "perl6"); $foo } }; my $foo := FooHOW.new_type; say $foo.^methods

[04:29] <bisectable6> Kaiepi, Bisecting by output (old=2015.12 new=6a88590) because on both starting points the exit code is 1

[04:30] <bisectable6> Kaiepi, bisect log: https://gist.github.com/343768e938081c5a60605e87714afaa7

[04:30] <bisectable6> Kaiepi, (2016-03-02) https://github.com/rakudo/rakudo/commit/fdd37a9e0bef16eb3e4bb24ddd59247e379b5038

[04:30] <Kaiepi> weird

[04:32] <Kaiepi> i'm guessing perl 6 classes can't do nqp roles or something?

[04:37] <Kaiepi> wait, that's not right, Metamodel::Naming works just fine

[05:33] *** robertle left
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:19] *** fake_space_whale left
[06:41] *** rba left
[06:42] *** rba joined
[06:45] *** rba left
[06:45] *** rba joined
[07:20] *** leont joined
[07:45] *** leont left
[08:15] <kawaii> AlexDaniel: started a Blin run this morning :)

[08:16] *** robertle joined
[08:19] <Kaiepi> kawaii lemme know if any networking modules end up breaking

[08:47] *** cygx joined
[08:47] <cygx> o/

[08:48] <cygx> I neew some help manually getting an object into and then again out of a serialization context

[08:48] <cygx> the code in question: https://gist.github.com/cygx/5fa39ff2c3a12d0a0727865ac16d6aca

[08:49] <cygx> what'S missing?

[08:49] <cygx> do I need to load the module that contains $bc.WHAT?

[08:57] <jnthn> cygx: Yes

[08:57] <jnthn> Or at least make sure something did so

[08:59] <cygx> can that happen in the mainline, or do I have to put that into QAST::CompUnit.pre_deserialize?

[09:00] <Geth> ¦ rakudo: 0dd6573a45 | (Jonathan Worthington)++ | src/vm/moar/spesh-plugins.nqp

[09:00] <Geth> ¦ rakudo: Add a missing guard to the Nil assignment plugin

[09:00] <Geth> ¦ rakudo: 

[09:00] <Geth> ¦ rakudo: Fixes a regression introduced by c7056f2071.

[09:00] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0dd6573a45

[09:03] <Geth> ¦ roast: 1f526efa70 | (Jonathan Worthington)++ | S02-types/nil.t

[09:03] <Geth> ¦ roast: Test to cover assign works after assigning Nil

[09:03] <Geth> ¦ roast: 

[09:03] <Geth> ¦ roast: Covers a bug where we ended up fixated on the Nil defaulting behavior.

[09:03] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1f526efa70

[09:04] <jnthn> cygx: pre_deserialize; that runs before the mainline

[09:06] <cygx> that seems to have done something, there's a new error: No current compiling SC

[09:09] <lizmat> .tell SmokeMachine I've already suggested many alternatives, "London Perl Community Workshop" being only one of them

[09:09] <tellable6> lizmat, I'll pass your message to SmokeMachine

[09:10] <lizmat> .tell SmokeMachine or to take the Barcelona example "London Perl and Friends Workshop"

[09:10] <tellable6> lizmat, I'll pass your message to SmokeMachine

[09:10] <lizmat> .tell SmokeMachine see also http://blogs.perl.org/users/swiss_perl_workshop/2019/08/swiss-perl-workshop---post-event-future.html

[09:10] <tellable6> lizmat, I'll pass your message to SmokeMachine

[09:12] <SmokeMachine> lizmat: yes, I saw that... but going there with the original name wouldn't it be good to convince the people to change the name for the next ones?

[09:12] <lizmat> I've already talked extensively with some of the organizers...  and that was not enough.  Some statement needs to be made

[09:16] <SmokeMachine> lizmat: I'm not trying to start any kind of flame war: does the name of the event is really that important? If it would like to receive perl6 talks, isn't it enough?

[09:16] <lizmat> it's about how it is seen in the world, *before* knowing what type of talks will be given

[09:16] <lizmat> "Perl" in the world stands for "Perl 5"

[09:17] <lizmat> example: look at the schedule of PerlCon and count how many talks have just "Perl" in their title, and are about "Perl 5"

[09:17] <lizmat> and this is *inside* the echo chamber!

[09:18] <SmokeMachine> lizmat: I'm asking because changing name can be a long process... 

[09:18] <lizmat> SmokeMachine: why ?

[09:19] <SmokeMachine> lizmat: just see how long it is taking the process to change perl6 name

[09:19] <SmokeMachine> lizmat: first is the discussion of if it should change

[09:19] <SmokeMachine> lizmat: than what should be the new name

[09:19] <SmokeMachine> lizmat: etc...

[09:19] <lizmat> I've expressed my opinion to the LPW organizers many months ago already

[09:20] <lizmat> I feel it was not taken seriously

[09:20] <SmokeMachine> lizmat: ok, I got it...

[09:20] <lizmat> the only way I can indicate that I'm serious about it, is to vote with my feet

[09:21] <SmokeMachine> lizmat: yes... that make sense

[09:22] <SmokeMachine> s

[09:22] <tellable6> 2019-08-20T09:09:34Z #perl6-dev <lizmat> SmokeMachine I've already suggested many alternatives, "London Perl Community Workshop" being only one of them

[09:22] <tellable6> 2019-08-20T09:10:11Z #perl6-dev <lizmat> SmokeMachine or to take the Barcelona example "London Perl and Friends Workshop"

[09:22] <tellable6> 2019-08-20T09:10:39Z #perl6-dev <lizmat> SmokeMachine see also http://blogs.perl.org/users/swiss_perl_workshop/2019/08/swiss-perl-workshop---post-event-future.html

[09:23] <lizmat> hmnmm.... tellable still a bit on the blink

[09:23] <SmokeMachine> yes... it seems to be...

[09:24] <kawaii> hmm, so the Star Makefile references a file `tools/build/gen-version.pl` which doesn't seem to exist within the `rakudo` repository

[09:25] <lizmat> vrurg probably moved it somewhere else

[09:27] <kawaii> lizmat: https://github.com/rakudo/rakudo/commit/c8b5bd3e8ab7c54646dfbfa7f417c7f459d888e3#diff-bf90f5beab882c2c4e77d12f97770fb8

[09:27] <kawaii> :)

[09:32] <kawaii> well, I have a tarball, time to see if it works!

[09:35] <kawaii> hmm, looks like more has changed in the rakudo process than I first thought https://www.irccloud.com/pastebin/uHvhCbq7/

[09:35] <lizmat> m: sub a() { "foo" }; dd "&&a()"

[09:35] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «"foo"␤»

[09:35] <lizmat> surprised that this works...  now lets add some more &

[09:35] <lizmat> m: sub a() { "foo" }; dd "&&&&&&&&&&&&&&&&&&&&&&&&&&&a()"

[09:35] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «"foo"␤»

[09:36] <lizmat> m: sub a() { "foo" }; dd "&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&a()"

[09:36] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «"foo"␤»

[09:36] <lizmat> hmmmm...

[09:36] <lizmat> now, drop the "a()"

[09:36] <lizmat> m: sub a() { "foo" }; dd "&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&"

[09:40] *** camelia left
[09:42] *** camelia joined
[09:43] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(timeout)»

[09:43] *** ChanServ sets mode: +v camelia

[09:56] <jnthn> oops :)

[09:59] <lizmat> same for % and @ BTW

[09:59] <lizmat> m: sub a() { "foo" }; dd "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"

[09:59] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of $$ variable; in Perl 6 please use $*PID␤at <tmp>:1␤------> 3$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"7⏏5<EOL>␤»

[09:59] <lizmat> m: sub a() { "foo" }; use isms <Perl5>; dd "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"

[09:59] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"7⏏5<EOL>␤    expecting …»

[10:00] <lizmat> hmmm...

[10:00] <lizmat> in any case, feels we need a token for <sigil>+ followed by a non-alpha ?

[10:02] <jnthn> Well, it's just a contextualizer

[10:02] <lizmat> m: my $a = 42; say "$$$$$$$$$$$$$$a"   # should we even allow for that ?

[10:03] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «42␤»

[10:03] <jnthn> Sure, it's fine, though useless

[10:03] <lizmat> m: my @a = 42,666; say "@@@@@@@@@@@@@@@@@@@@@@@@@@a[]"   # should we even allow for that ?

[10:03] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «42 666␤»

[10:03] <jnthn> It's just short for @(@(@(....@a[]...)))

[10:03] <lizmat> it's a potential vector of attack  :-(

[10:04] <jnthn> ?

[10:04] <jnthn> If you're already getting to choose what code to run, you've already won. 

[10:07] <jnthn> Still worth looking into the parser blow-up, of course.

[10:07] <jnthn> Since it's a poor language user experience

[10:07] <lizmat> indeed

[10:08] *** travis-ci joined
[10:08] <travis-ci> Rakudo build failed. Jonathan Worthington 'Add a missing guard to the Nil assignment plugin

[10:08] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/574240012 https://github.com/rakudo/rakudo/compare/6a8859089521...0dd6573a45f6

[10:08] *** travis-ci left
[10:12] *** samebchase joined
[10:27] *** squashable6 left
[10:32] *** squashable6 joined
[10:37] <cygx> this thing I'm trying to do would be a lot simpler if there was a bootbytearray...

[10:38] <cygx> I'll make do without, but is that something we might want to have?

[10:39] <jnthn> I'm not really keen on having more BOOTWhatever

[10:42] <cygx> is there another way to pass around some bytes that doesn't drag in a whole other bunch of stuff via its type object?

[11:19] *** cygx left
[11:30] *** cygx joined
[11:40] <Geth> ¦ problem-solving/path-to-raku: b9c597b3d7 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[11:40] <Geth> ¦ problem-solving/path-to-raku: Add mention of pragmas and other places needing adaptation.

[11:40] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/b9c597b3d7

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:15] <timotimo> kawaii: yeah, rakudo/tools/build/NQP_REVISION has moved away, it's now in rakudo/build/templates/ or something like that

[12:15] <cygx> not sure how to debug this: https://gist.github.com/cygx/b92999e516932a36b7ba7769c40f8a98

[12:16] <cygx> somehow, there's still a reference to *something* outside the SC

[12:16] <timotimo> cygx: you should be able to just quickly create a vmarray of uint8 with nqp::newtype

[12:17] <timotimo> is there a reason you don't want a native-typed array there?

[12:18] <cygx> timotimo: because that is associated with a p6-level type object?

[12:19] <timotimo> you're already creating an array type yourself though

[13:01] *** lucasb joined
[13:06] *** cygx left
[13:45] *** |Tux| left
[13:50] *** |Tux| joined
[14:31] <Geth> ¦ problem-solving/path-to-raku: 87d43430ed | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[14:31] <Geth> ¦ problem-solving/path-to-raku: Separate next release from language release

[14:31] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/87d43430ed

[14:32] *** brrt joined
[14:34] <Geth> ¦ problem-solving/path-to-raku: 535d778c66 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[14:34] <Geth> ¦ problem-solving/path-to-raku: Specify when "Perl 6" should be referenced

[14:34] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/535d778c66

[14:37] <Geth> ¦ problem-solving/path-to-raku: dd6054cddd | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[14:37] <Geth> ¦ problem-solving/path-to-raku: NQP stays Not Quit Perl

[14:37] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/dd6054cddd

[14:40] <Geth> ¦ problem-solving/path-to-raku: d14804e6b0 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[14:40] <Geth> ¦ problem-solving/path-to-raku: Elaborate a bit about changing external references

[14:40] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/d14804e6b0

[14:45] <Geth> ¦ problem-solving/path-to-raku: ce377bd9c6 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[14:45] <Geth> ¦ problem-solving/path-to-raku: Remove mention of marketing repo

[14:45] <Geth> ¦ problem-solving/path-to-raku: 

[14:45] <Geth> ¦ problem-solving/path-to-raku: We need new material, that's the important thing.  Of course that will

[14:45] <Geth> ¦ problem-solving/path-to-raku: wind up in a repo.

[14:45] <Geth> ¦ problem-solving/path-to-raku: 

[14:45] <Geth> ¦ problem-solving/path-to-raku: FWIW, I mentioned a new repo because I thought we had lost the repo with

[14:45] <Geth> ¦ problem-solving/path-to-raku: Zoffix' departure.

[14:45] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/ce377bd9c6

[14:46] *** [TuxCM] joined
[14:48] <Geth> ¦ problem-solving/path-to-raku: 2f5794b458 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[14:48] <Geth> ¦ problem-solving/path-to-raku: Elaborated on special attention

[14:48] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/2f5794b458

[14:53] <Geth> ¦ problem-solving/path-to-raku: 1b89762c28 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[14:53] <Geth> ¦ problem-solving/path-to-raku: Elaborate on repo name changes and documentation changes

[14:53] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/1b89762c28

[14:55] <Geth> ¦ problem-solving: AlexDaniel assigned to JJ Issue Specify documentation URLs https://github.com/perl6/problem-solving/issues/93

[14:57] <Geth> ¦ problem-solving/path-to-raku: 2b237b5ca8 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[14:57] <Geth> ¦ problem-solving/path-to-raku: Elaborate on effects on running sub-projects

[14:57] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/2b237b5ca8

[15:01] <[TuxCM]> Rakudo version 2019.07.1-186-g0dd6573a4 - MoarVM version 2019.07.1-117-g7f8283424

[15:01] <[TuxCM]> csv-test-xs-20      0.428 -  0.439

[15:01] <[TuxCM]> csv-ip5xs           0.684 -  0.705

[15:01] <[TuxCM]> test-t --race       0.805 -  0.878

[15:01] <[TuxCM]> test-t              1.713 -  1.728

[15:01] <[TuxCM]> csv-ip5xs-20        5.062 -  5.224

[15:01] <[TuxCM]> test                6.790 -  7.015

[15:02] <[TuxCM]> test-t-20 --race    9.093 -  9.107

[15:02] <[TuxCM]> csv-parser         20.846 - 21.380

[15:02] <[TuxCM]> test-t-20          29.391 - 30.025

[15:04] *** |Tux| left
[15:05] *** robertle left
[15:08] *** cygx joined
[15:08] *** |Tux| joined
[15:09] <cygx> still can't get even a minimal example to work :(

[15:09] <cygx> cf https://gist.github.com/cygx/b92999e516932a36b7ba7769c40f8a98

[15:21] *** brrt left
[15:26] *** pamplemousse joined
[15:27] *** [TuxCM] left
[15:34] <Geth> ¦ problem-solving/path-to-raku: f3d057acc1 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[15:34] <Geth> ¦ problem-solving/path-to-raku: Elaborate a bit on community healing

[15:34] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/f3d057acc1

[15:43] <Geth> ¦ problem-solving/path-to-raku: 6b0041002e | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[15:43] <Geth> ¦ problem-solving/path-to-raku: Add social media section

[15:43] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/6b0041002e

[15:48] <Geth> ¦ problem-solving: JJ self-unassigned X::MyModule::Foo or MyModule::X::Foo ? https://github.com/perl6/problem-solving/issues/57

[15:51] <Geth> ¦ problem-solving: AlexDaniel self-assigned X::MyModule::Foo or MyModule::X::Foo ? https://github.com/perl6/problem-solving/issues/57

[15:52] *** robertle joined
[16:10] *** brrt joined
[16:28] *** cygx left
[16:31] *** chloekek joined
[16:39] *** brrt left
[16:43] <rba> I've installed a znc (irc boucner; https://wiki.znc.in/ZNC). Does one like to jump on? Still do testing though. Yet this is my second installation and the first one was rocket stable, yet I needed it installed on a system with gcc >= 4.9 for a znc push module.

[16:44] <rba> Let me know your nick and I will add it as a user.

[16:54] <vrurg> Writing in QAST feels like writing in assembler...

[17:15] *** brrt joined
[17:17] <Geth> ¦ problem-solving/path-to-raku: 3118a7eb71 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[17:17] <Geth> ¦ problem-solving/path-to-raku: Add historical matters

[17:17] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/3118a7eb71

[17:19] <[Coke]> is anyone looking at a .net framework backend for NQP? 

[17:20] <[Coke]> er, Core. 

[17:21] <brrt> not me atm

[17:25] *** [TuxCM] joined
[17:39] *** brrt left
[18:00] *** reportable6 left
[18:04] *** reportable6 joined
[18:14] <AlexDaniel> lizmat: no, I don't think it's going to work this way

[18:14] <AlexDaniel> lizmat: https://github.com/ugexe/zef/search?utf8=%E2%9C%93&q=perl&type=

[18:16] <lizmat> looks like keeping $*PERL working, should be enough ?

[18:17] <AlexDaniel> or maybe we should delay all deprecation messages until 6.f

[18:17] <lizmat> and keep supporting "perl" in META6.json

[18:17] <lizmat> that feels....  wrong

[18:17] <lizmat> feels like deprecating something after it has not been documented as deprecated

[18:18] <lizmat> Perl 5 has bad experience with that wrt deprecating smart match

[18:27] <AlexDaniel> lizmat: sure, but it's an actual problem

[18:28] <AlexDaniel> lizmat: if you drop a deprecation on users in one language release, any module maintainer who has deprecated code will have to add code for backward compatibility

[18:28] <AlexDaniel> which is not bad, but it's work

[18:29] <AlexDaniel> whereas if you do it slower, then in some cases it'd be possible to get away with just changing the code to the new stuff and that's it

[18:40] *** MasterDuke joined
[18:41] <MasterDuke> looks like we need nqp/rakudo bumps to pull in brrt++'s floating point jit support

[18:43] <Geth> ¦ nqp: 49fdab2e9f | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/MOAR_REVISION

[18:43] <Geth> ¦ nqp: [MoarVM Bump] Brings 45 commits

[18:43] <Geth> ¦ nqp: 

[18:43] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2019.07.1-72-g352ae27e4...2019.07.1-117-g7f8283424

[18:43] <Geth> ¦ nqp: 7f8283424 [JIT] Handle NaN in FP branching comparisons

[18:43] <Geth> ¦ nqp: 6c6225534 [JIT] Fix floating point comparisons

[18:43] <Geth> ¦ nqp: 7f8061a5b [JIT] Support floating point comparisons

[18:43] <Geth> ¦ nqp: 27e9f979b [JIT] Functions that return floating point values

[18:43] <Geth> ¦ nqp: <…commit message has 41 more lines…>

[18:43] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/49fdab2e9f

[18:43] <Geth> ¦ rakudo: cd8463a853 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/NQP_REVISION

[18:43] <Geth> ¦ rakudo: [NQP Bump] Brings 4 commits

[18:43] <Geth> ¦ rakudo: 

[18:43] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2019.07.1-68-g8fb861b16...2019.07.1-72-g49fdab2e9

[18:43] <Geth> ¦ rakudo: 49fdab2e9 [MoarVM Bump] Brings 45 commits

[18:43] <Geth> ¦ rakudo: 68da2436a [examples/rubyish] - bring up-to-date with current NQP

[18:43] <Geth> ¦ rakudo: 413c257c0 Remove obsolete pumpking mention

[18:43] <Geth> ¦ rakudo: 8778cff06 [js] Fix serialization/deserialization of some integers

[18:43] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/cd8463a853

[18:43] <AlexDaniel> MasterDuke: thanks ;)

[19:01] *** chloekek left
[19:44] *** Ven`` joined
[19:53] *** travis-ci joined
[19:53] <travis-ci> Rakudo build passed. Aleks-Daniel Jakimenko-Aleksejev '[NQP Bump] Brings 4 commits

[19:53] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/574501714 https://github.com/rakudo/rakudo/compare/0dd6573a45f6...cd8463a85351

[19:53] *** travis-ci left
[19:57] <vrurg> timotimo: what name would you suggest for nqp::p6 op which returns caller's CORE context? I'm thinking of nqp::p6clientcorectx because it acts as CLIENT:: pseudo-package.

[20:13] *** pamplemousse left
[20:14] *** Ven`` left
[20:21] *** Ven`` joined
[20:31] *** Ven`` left
[20:39] *** chloekek joined
[21:09] <dogbert17> vrurg: wrt M#1155 exactly what cmdline were you running?

[21:09] <synopsebot> M#1155 [open]: https://github.com/MoarVM/MoarVM/issues/1155 SIGSEGV with heap profiling.

[21:10] <Geth> ¦ rakudo: usev6++ created pull request #3130: Add some concreteness/definedness checks

[21:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3130

[21:21] <tbrowder> .ask nine are you available for some inline:perl5 help?

[21:21] <tellable6> tbrowder, I'll pass your message to nine

[21:22] <tbrowder> .tell nine see nonworking p6 code at gist https://gist.github.com/tbrowder/890714b6cbb7682a2dab69e2ca088e24

[21:22] <tellable6> tbrowder, I'll pass your message to nine

[21:51] *** leont joined
[21:55] *** leont left
[21:59] *** robertle left
[22:12] *** chloekek left
[22:35] <vrurg> dogbert17: there was a script on the command line, otherwise – nothing. so, eventually, it was 'perl6 --profile --profile-kind=heap somescript.p6'

[22:36] <vrurg> dogbert17: it was probably fixed, I can't reproduce.

[22:37] <dogbert17> vrurg: that's why I was asking, timotimo committed a fix and I was curious if that fixed your problem

[22:39] <vrurg> dogbert17: Close it.

[22:39] <vrurg> thanks!

