[01:16] <vrurg> m: module Foo { role R is export { }; our sub foo is export { }; }; for Foo::EXPORT::ALL::.keys -> $sym { note $sym, " => ", $sym.VAR.^name }

[01:16] <evalable6> vrurg, rakudo-moar 370c866cb: OUTPUT: «&foo => Scalar␤R => Scalar␤»

[01:16] <vrurg> Hm, is it how it must be??

[02:12] <Geth> ¦ rakudo: vrurg self-assigned Re-import from a 3rd module results in installation of containerized symbols. https://github.com/rakudo/rakudo/issues/2979

[02:28] <Geth> ¦ rakudo: vrurg++ created pull request #2980: Decontainerize non-scalar symbols upon import

[02:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2980

[02:28] <Geth> ¦ roast: vrurg++ created pull request #550: Add tests for non-containerized exports

[02:28] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/550

[02:41] *** travis-ci joined
[02:41] <travis-ci> Rakudo build errored. Patrick Böker 'Merge pull request #2963 from patzim/static-exec-path

[02:41] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/544995816 https://github.com/rakudo/rakudo/compare/e5b4c4de13ad...370c866cbe16

[02:41] *** travis-ci left
[03:27] *** epony joined
[03:28] *** epony left
[03:29] *** epony joined
[03:30] <Geth> ¦ rakudo: 3af3bde70e | (Vadim Belman)++ | src/Perl6/World.nqp

[03:30] <Geth> ¦ rakudo: Decontainerize non-scalar symbols upon import

[03:30] <Geth> ¦ rakudo: 

[03:30] <Geth> ¦ rakudo: rakudo/rakudo#2979

[03:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3af3bde70e

[03:30] <Geth> ¦ rakudo: 6565810f5c | (Vadim Belman)++ (committed using GitHub Web editor) | src/Perl6/World.nqp

[03:30] <Geth> ¦ rakudo: Merge pull request #2980 from vrurg/EXPORT-bug

[03:30] <synopsebot> RAKUDO#2979 [open]: https://github.com/rakudo/rakudo/issues/2979 Re-import from a 3rd module results in installation of containerized symbols.

[03:30] <Geth> ¦ rakudo: 

[03:30] <Geth> ¦ rakudo: Decontainerize non-scalar symbols upon import

[03:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6565810f5c

[03:30] <Geth> ¦ roast: 8a9fee029b | (Vadim Belman)++ | 3 files

[03:30] <Geth> ¦ roast: Add tests for non-containerized exports

[03:30] <Geth> ¦ roast: 

[03:30] <Geth> ¦ roast: rakudo/rakudo#2979

[03:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8a9fee029b

[03:30] <Geth> ¦ roast: 0228a15d2b | (Vadim Belman)++ (committed using GitHub Web editor) | 3 files

[03:30] <Geth> ¦ roast: Merge pull request #550 from vrurg/EXPORT-bug

[03:30] <Geth> ¦ roast: 

[03:30] <Geth> ¦ roast: Add tests for non-containerized exports

[03:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/0228a15d2b

[04:51] *** travis-ci joined
[04:51] <travis-ci> Rakudo build passed. Vadim Belman 'Merge pull request #2980 from vrurg/EXPORT-bug

[04:51] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/545044968 https://github.com/rakudo/rakudo/compare/370c866cbe16...6565810f5c38

[04:51] *** travis-ci left
[05:26] *** jmerelo joined
[05:26] <jmerelo> Time to fill the user survey again: https://docs.google.com/forms/d/e/1FAIpQLSfX6cjuhen2xepsr_Cg8eYSdlEE4wbhufgOR1BrDwStby_hNg/viewform

[05:49] *** AlexDaniel left
[06:15] *** jmerelo left
[06:48] *** patrickb joined
[07:35] *** epony left
[07:52] *** robertle joined
[08:42] <lizmat> Files=1262, Tests=108017, 202 wallclock secs (26.90 usr  7.20 sys + 2838.94 cusr 242.08 csys = 3115.12 CPU)

[09:11] *** patrickb left
[09:34] <Geth> ¦ nqp: 7cccdb13e2 | (Elizabeth Mattijsen)++ | src/core/NQPRoutine.nqp

[09:34] <Geth> ¦ nqp: Fix same pasto as https://github.com/rakudo/rakudo/commit/95a7866c07

[09:34] <Geth> ¦ nqp: 

[09:34] <Geth> ¦ nqp: Again, Michael Schroeder++ for the spot.

[09:34] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/7cccdb13e2

[10:22] *** robertle left
[10:22] *** rba[m] joined
[10:31] *** robertle joined
[10:35] *** patrickb joined
[10:41] <nine> m: while True { FIRST exit; }

[10:41] <evalable6> nine, rakudo-moar 6565810f5: OUTPUT: «WARNINGS for /tmp/lccJLg5wEJ:␤Useless use of LOOP_BLOCK_1 symbol in sink context (line 1)␤»

[10:41] <nine> That warning makes no sense to me

[10:45] <lizmat> pretty LTA, I agree

[11:21] *** robertle left
[11:23] <nine> And wrong I guess?

[11:24] <nine> m: for 0..Inf { FIRST exit; }

[11:24] <evalable6> nine, rakudo-moar 6565810f5: OUTPUT: «»

[11:36] <Geth> ¦ rakudo: HarmtH++ created pull request #2982: Don't forbid using variable during its initialisation

[11:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2982

[12:39] <Geth> ¦ nqp: taboege++ created pull request #557: Change associativity of exponentiation to 'right'

[12:39] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/557

[13:28] *** ggoebel joined
[13:33] *** pamplemousse joined
[14:07] *** AlexDaniel joined
[14:14] <Geth> ¦ nqp: 33ae05ac69 | (Ben Davies)++ | 9 files

[14:14] <Geth> ¦ nqp: [js] Refactor src/vm/js/nqp-runtime/global-context.js

[14:14] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/33ae05ac69

[14:14] <Geth> ¦ nqp: 9af601552b | (Paweł Murias)++ (committed using GitHub Web editor) | 9 files

[14:14] <Geth> ¦ nqp: Merge pull request #555 from Kaiepi/js

[14:14] <Geth> ¦ nqp: 

[14:14] <Geth> ¦ nqp: [js] Refactor src/vm/js/nqp-runtime/global-context.js

[14:14] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9af601552b

[14:30] *** pmurias joined
[14:30] <pmurias> Kaiepi: I merged the PR (had to fix some bitrot first), thank you for contributing

[14:30] <Geth> ¦ nqp: 9b64ecaeea | (Paweł Murias)++ | 3 files

[14:30] <Geth> ¦ nqp: [js] Fix serialization and deserialization of boot int/str arrays

[14:30] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9b64ecaeea

[15:11] *** pmurias left
[15:34] *** patrickb left
[17:32] *** MasterDuke left
[17:33] *** pamplemousse_ joined
[17:35] *** pamplemousse left
[18:18] *** lucasb_ joined
[19:59] *** sivoais joined
[20:01] *** Geth left
[20:01] *** Geth joined
[20:09] *** pamplemousse_ left
[20:24] *** AlexDaniel left
[20:27] *** pmurias joined
[20:31] *** AlexDaniel joined
[20:31] *** AlexDaniel left
[20:31] *** AlexDaniel joined
[20:36] *** |Tux| left
[20:43] *** AlexDaniel left
[20:45] *** AlexDaniel joined
[20:48] *** AlexDaniel left
[20:49] *** AlexDaniel joined
[20:52] *** |Tux| joined
[21:14] *** brrt joined
[21:32] <Geth> ¦ nqp: 6dc8d600a4 | (Tobias Boege)++ | src/NQP/Grammar.nqp

[21:32] <Geth> ¦ nqp: Change associativity of exponentiation to 'right'

[21:32] <Geth> ¦ nqp: 

[21:32] <Geth> ¦ nqp: The associativity of the %exponentiation infix spec in NQP::Grammar

[21:32] <Geth> ¦ nqp: was 'left' which does not match usual convention in mathematics and

[21:32] <Geth> ¦ nqp: the associativity of ** in Perl 6. This commit changes it to 'right'.

[21:32] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/6dc8d600a4

[21:32] <Geth> ¦ nqp: 9ec13cf764 | (Tobias Boege)++ | t/nqp/013-op.t

[21:32] <Geth> ¦ nqp: Add tests for exponentiation in nqp/013-op.t

[21:32] <Geth> ¦ nqp: 

[21:32] <Geth> ¦ nqp: The exponentiation operator was not exercised before.

[21:32] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/9ec13cf764

[21:32] <Geth> ¦ nqp: 85775f04f3 | (Tom Browder)++ (committed using GitHub Web editor) | 2 files

[21:32] <Geth> ¦ nqp: Merge pull request #557 from taboege/exp-associativity

[21:32] <Geth> ¦ nqp: 

[21:32] <Geth> ¦ nqp: Change associativity of exponentiation to 'right'

[21:32] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/85775f04f3

[21:43] *** pamplemousse_ joined
[21:44] *** pmurias left
[21:58] *** pamplemousse_ left
[22:00] *** pamplemousse_ joined
[22:01] *** pmurias joined
[22:14] *** pamplemousse_ left
[22:17] *** pamplemousse_ joined
[22:28] <timotimo> m: my Supplier::Preserving $msg .= new; start { react { whenever $msg.Supply { .say; if (False, False, False, True).pick { say "cannot write to closed socket"; die "oh no" } } } }; for ^20 { $msg.emit($_) }; $msg.done;

[22:28] <evalable6> timotimo, rakudo-moar 6565810f5: OUTPUT: «»

[22:28] <timotimo> m: my Supplier::Preserving $msg .= new; start { react { whenever $msg.Supply { .say; if (False, False, False, True).pick { say "cannot write to closed socket"; die "oh no" } } } }; for ^20 { $msg.emit($_) }; $msg.done; sleep 2;

[22:28] <evalable6> timotimo, rakudo-moar 6565810f5: OUTPUT: «(exit code 1) 0␤Unhandled exception in code scheduled on thread 4␤cannot write to closed s…»

[22:28] <evalable6> timotimo, Full output: https://gist.github.com/3b49450eb60355a6b8c0f42768a63da4

[22:29] <timotimo> m: my Supplier::Preserving $msg .= new; start { react { whenever $msg.Supply { .say; if (False, False, False, True).pick { say "cannot write to closed socket"; die "oh no" } } } }; for ^20 { $msg.emit($_); say "sent $_"; }; $msg.done; sleep 2;

[22:29] <evalable6> timotimo, rakudo-moar 6565810f5: OUTPUT: «(exit code 1) sent 0␤Unhandled exception in code scheduled on thread 4␤sent 1␤sent 2␤sent …»

[22:29] <evalable6> timotimo, Full output: https://gist.github.com/e86a2dc4df8549b9bf8079b6b2fada5d

[22:31] <timotimo> m: my Supplier::Preserving $msg .= new; my $senser = supply { whenever $msg { emit $_; QUIT { say "the thing quit oh no" } }; }; start { react { whenever $senser { .say; if (False, False, False, True).pick { say "cannot write to closed socket"; die "oh no" } } } }; for ^20 { $msg.emit($_); say "sent $_"; }; $msg.done; sleep 2;

[22:31] <evalable6> timotimo, rakudo-moar 6565810f5: OUTPUT: «(exit code 1) sent 0␤Unhandled exception in code scheduled on thread 4␤sent 1␤sent 2␤sent …»

[22:31] <evalable6> timotimo, Full output: https://gist.github.com/5ab3f9f26123c0738684a90863e31805

[22:31] <timotimo> m: my Supplier::Preserving $msg .= new; my $senser = supply { whenever $msg { emit $_; QUIT { say "the thing quit oh no" }; DONE { say "the message queue is done oh my"; }; LAST { say "the message senser is LASTed" } }; }; start { react { whenever $senser { .say; if (False, False, False, True).pick { say "cannot write to closed socket"; die "oh no" } } } }; for ^20 { $msg.emit($_); say "sent $_"; };

[22:31] <evalable6> timotimo, rakudo-moar 6565810f5: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/evB_K_202R␤Undeclared name:␤    DONE used at line 1␤␤»

[22:31] <timotimo> $msg.done; sleep 2;

[22:31] <timotimo> damn it, too long for irc

[22:36] <timotimo> m: my Supplier::Preserving $msg .= new; my $senser = supply { whenever $msg.Supply.on-close({ say "the message supply closed" }) { emit $_; }; }; start { react { whenever $senser { .say; if (False, False, False, True).pick { say "cannot write to closed socket"; die "oh no" }; CATCH { done } } } }; for ^20 { $msg.emit($_); say "sent $_"; }; $msg.done; sleep 2;

[22:36] <evalable6> timotimo, rakudo-moar 6565810f5: OUTPUT: «sent 0␤sent 1␤sent 2␤sent 3␤sent 4␤sent 5␤sent 6␤sent 7␤sent 8␤sent 9␤sent 10␤sent 11␤sent…»

[22:36] <evalable6> timotimo, Full output: https://gist.github.com/0cbb8af44287f473e978d70ec8c97b9d

[22:36] *** brrt left
[22:36] <timotimo> m: my Supplier::Preserving $msg .= new; my $senser = supply { whenever $msg.Supply.on-close({ say "the message supply closed" }) { emit $_; }; }; start { react { whenever $senser { .say; if (False, False, False, True).pick { say "cannot write to closed socket"; die "oh no" }; CATCH { done } } } }; for ^5 { $msg.emit($_); say "sent $_"; }; $msg.done; sleep 2;

[22:36] <evalable6> timotimo, rakudo-moar 6565810f5: OUTPUT: «sent 0␤sent 1␤sent 2␤sent 3␤sent 4␤0␤1␤2␤cannot write to closed socket␤the message supply closed␤the message supply closed␤»

[22:37] <kawaii> Ooooo what's going on here

[22:38] <timotimo> the .on-tap on the Supply allows you to be notified when the interested party has stopped listening

[22:39] <timotimo> for example because the supply block in question has quit because of an exception

[22:42] <timotimo> er, i don't mean .on-tap, i meant .on-close

[22:45] <timotimo> m: my Supplier::Preserving $msg .= new; my $senser = $msg.Supply.on-close({ say "the message supply closed" }); start { react { whenever $senser { .say; if (False, False, False, True).pick { say "cannot write to closed socket"; die "oh no" }; CATCH { done } } } }; for ^5 { $msg.emit($_); say "sent $_"; }; $msg.done; sleep 2;

[22:45] <evalable6> timotimo, rakudo-moar 6565810f5: OUTPUT: «sent 0␤sent 1␤sent 2␤sent 3␤sent 4␤0␤1␤2␤3␤4␤the message supply closed␤the message supply closed␤»

[22:45] <timotimo> the factoring is more likely to look like this

[22:47] <kawaii> :D

[22:48] <timotimo> i won't stay up for too much longer

[22:51] <timotimo> i think there's a little change that needs to go into Cro::WebSocket

[22:53] <timotimo> let's see

[22:55] *** pmurias left
[22:56] <timotimo> ooh need to install all of cro before i can test stuff

[22:56] *** pamplemousse_ left
[22:57] *** pmurias joined
[22:57] <timotimo> kawaii: can you test a patch for me?

[22:58] <kawaii> timotimo: I certainly can tomorrow!

[22:59] <kawaii> I have a local checkout of the module somewhere

[23:00] <timotimo> https://gist.github.com/timo/b5fedaf5bea40e8d97ebf257addb25d0

[23:02] <timotimo> ok, i've reached the "installing" phase of "zef install --force ."

[23:03] <timotimo> there'll probably want to be a "this is the last message that was fully, successfully sent" thing

[23:03] <timotimo> but noticing the connection has dropped in the first place is good

[23:06] <timotimo> you'll need to receive the on-close promise as the second argument to the websocket block

[23:06] <kawaii> timotimo: thanks, I'll patch my checkout tomorrow and try it out

[23:17] *** pmurias left
[23:17] <timotimo> [OK] 101 /chat - 127.0.0.1                 

[23:17] <timotimo> Cannot write to a closed socket            

[23:17] <timotimo> keep the close-promise because on-close    

[23:17] <timotimo> though it occurs to me that you want it for the client, not the server

[23:21] <timotimo> ok, i'll update the patch

[23:26] <timotimo> that wasn't the right fix yet

[23:35] <timotimo> same address has an attempt to get it working for the "client notices that the server disappeared" case. that doesn't do it yet. however, that's also not where i notice the "cannot send on a closed socket" error message in my test code so maybe i'm doing that part wrong

[23:35] <timotimo> good luck!

[23:45] <timotimo> and good night o/

