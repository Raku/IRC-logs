[00:02] <Geth> ¦ roast: vrurg++ created pull request #523: Changes to conform with fix of use of Real type object in operators

[00:02] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/523

[00:04] <timotimo> .tell [Coke] my emails aren't reaching alan, could you point my latest blog post out to him? (google mail is telling me it thinks my mails are spam)

[00:04] <yoleaux> timotimo: I'll pass your message to [Coke].

[00:25] *** leont joined
[00:30] *** Kaiepi left
[00:30] *** Kaiepi joined
[01:34] *** lucasb left
[02:21] *** leont left
[03:21] *** ufobat_ joined
[03:25] *** ufobat__ left
[05:49] *** notable6 left
[05:49] *** unicodable6 left
[05:49] *** statisfiable6 left
[05:49] *** evalable6 left
[05:49] *** bisectable6 left
[05:49] *** benchable6 left
[05:49] *** greppable6 left
[05:49] *** committable6 left
[05:49] *** undersightable6 left
[05:49] *** releasable6 left
[05:49] *** nativecallable6 left
[05:49] *** bloatable6 left
[05:49] *** squashable6 left
[05:49] *** reportable6 left
[05:49] *** quotable6 left
[05:49] *** coverable6 left
[05:49] *** shareable6 left
[05:49] *** committable6 joined
[05:49] *** ChanServ sets mode: +v committable6

[05:49] *** releasable6 joined
[05:49] *** ChanServ sets mode: +v releasable6

[05:49] *** bisectable6 joined
[05:50] *** greppable6 joined
[05:50] *** ChanServ sets mode: +v greppable6

[05:50] *** benchable6 joined
[05:50] *** unicodable6 joined
[05:50] *** ChanServ sets mode: +v unicodable6

[05:50] *** squashable6 joined
[05:50] *** ChanServ sets mode: +v squashable6

[05:50] *** notable6 joined
[05:50] *** evalable6 joined
[05:50] *** coverable6 joined
[05:51] *** shareable6 joined
[05:52] *** undersightable6 joined
[05:52] *** ChanServ sets mode: +v undersightable6

[05:52] *** quotable6 joined
[05:52] *** bloatable6 joined
[05:52] *** ChanServ sets mode: +v bloatable6

[05:53] *** statisfiable6 joined
[05:53] *** ChanServ sets mode: +v statisfiable6

[05:53] *** nativecallable6 joined
[05:54] *** reportable6 joined
[05:54] *** ChanServ sets mode: +v reportable6

[07:38] *** epony left
[08:03] *** epony joined
[09:12] <Geth> ¦ rakudo: d8ad62249a | (Vadim Belman)++ | 2 files

[09:12] <Geth> ¦ rakudo: Made all operators in Real require definite objects

[09:12] <Geth> ¦ rakudo: 

[09:12] <Geth> ¦ rakudo: Fix for rakudo/rakudo#2786. As a side effect, this changes the way

[09:12] <Geth> ¦ rakudo: rakudo complains about use of type objects. Where previously it was

[09:12] <Geth> ¦ rakudo: throwing an exception it is now warns about use of undefined value:

[09:12] <Geth> ¦ rakudo: 

[09:12] <synopsebot> RAKUDO#2786 [open]: https://github.com/rakudo/rakudo/issues/2786 Incorrect error message produced when numeric (Real) operators are applied to a numeric type object

[09:12] <Geth> ¦ rakudo: Use of uninitialized value of type Int in numeric context

[09:12] <Geth> ¦ rakudo: <…commit message has 5 more lines…>

[09:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d8ad62249a

[09:12] <Geth> ¦ rakudo: 888cf8cdcd | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 2 files

[09:12] <Geth> ¦ rakudo: Merge pull request #2790 from vrurg/issue_2786

[09:12] <Geth> ¦ rakudo: 

[09:12] <Geth> ¦ rakudo: Make all operators in Real require definite objects

[09:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/888cf8cdcd

[09:12] <Geth> ¦ roast: d60f851775 | (Vadim Belman)++ | S03-operators/misc.t

[09:12] <Geth> ¦ roast: Changes to conform with fix of use of Real type object in operators

[09:12] <Geth> ¦ roast: 

[09:12] <Geth> ¦ roast: rakudo/rakudo#2790

[09:12] <synopsebot> RAKUDO#2790 [closed]: https://github.com/rakudo/rakudo/pull/2790 Make all operators in Real require definite objects

[09:12] <Geth> ¦ roast: rakudo/rakudo#2786

[09:13] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d60f851775

[09:13] <Geth> ¦ roast: 32811b1ccd | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | S03-operators/misc.t

[09:13] <Geth> ¦ roast: Merge pull request #523 from vrurg/issue_2786

[09:13] <Geth> ¦ roast: 

[09:13] <Geth> ¦ roast: Changes to conform with fix of use of Real type object in operators

[09:13] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/32811b1ccd

[12:17] *** Kaiepi left
[12:18] *** Kaiepi joined
[12:47] *** leont joined
[13:31] *** lucasb joined
[15:27] *** Kaiepi left
[15:27] *** Kaiepi joined
[15:48] *** leont left
[15:52] *** leont joined
[16:08] *** |Tux| left
[16:08] *** |Tux| joined
[16:13] *** Tux__ joined
[16:13] *** |Tux| left
[16:29] *** scovit_ left
[17:00] *** patrickb joined
[17:07] <lizmat> ugexe nine so I'm thinking of a Perl 6 module Foo that is a direct translation of a perl 5 Foo module

[17:08] <lizmat> but I also want to make a *true* Perl 6 version of that module Foo with a more Perl 6 like interface

[17:08] <lizmat> I would like to have the two Perl 6 versions to have exactly the same name, same auth and same ver, but a different :api<> value

[17:09] <lizmat> what would be the best way to do that ?

[17:09] <lizmat> do we have prior experience with that?

[17:35] <ugexe> create two different distributions, and give them different api value. there isn't much more that can be done

[17:37] <ugexe> theoretically `provides` keys could be parsed such that you could have a meta like {"api":1, "provides":{"Foo":"Foo.pm6", "Foo:api<2>":"Foo2.pm6"} which provides both Foo:api<1> and Foo:api<2>. zef actually can understand this, but rakudo does not

[18:23] *** TreyHarris left
[18:37] *** TreyHarris joined
[18:42] <patrickb> o/

[18:51] <AlexDaniel> \o

[19:38] <Geth> ¦ rakudo: tbrowder self-assigned Pod config dropping value when using :[number][alpha] syntax https://github.com/rakudo/rakudo/issues/2793

[20:42] <tbrowder> AlexDaniel: hi, how's school?

[20:43] <AlexDaniel> tbrowder: it's alright, slowly progressing on things

[20:44] <tbrowder> gut!

[23:01] *** lucasb left
[23:43] *** entonian joined
[23:47] <patrickb> I think I need some advice. The libuv functions to start processes escape stuff in the command to execute on windows by default. This escaping makes it impossible to reliably execute bat files on windows.

[23:47] <patrickb> There is a flag UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS to turn that command processing off. But I have no idea what side effects this has.

[23:48] <patrickb> All of that blocks me in getting rakudo work on windows with spaces in its path.

[23:48] *** entonian left
[23:49] <patrickb> All in all the libuv API looks rather random there...

[23:50] <patrickb> node.js makes use of that special flag to support an option "shell" that wraps the command in a cmd/sh. But only on windows when the command passed is a cmd again that option is passed (and according to my tests necessary).

[23:51] <patrickb> moar doesn't know anything about this flag.

[23:52] <patrickb> Ugh... how can it possibly be so hard to call a .bat file?!?

