[00:00] <ugexe> [SCHEDULER 99951] Will not add extra worker; hit 64 thread limit [branch with some total completed]

[00:00] <ugexe> wonder if thats something like $finished.then({ #`(cant spawn a thread to reach here) }); cleanup()

[00:01] <ugexe> quite a few "[SCHEDULER 99951] Heuristic queue progress deadlock situation detected" before that

[00:01] <ugexe> right around when it would slowdown

[00:02] <ugexe> https://gist.github.com/ugexe/5e1576f8cbd6a3db44e834cf9a0489fb

[00:03] <japhb> ugexe: Yeah, something is definitely not being cleaned up.

[00:04] <japhb> ugexe: Would you mind updating (or do you mind if I update) the bug report with your gist?

[00:06] <ugexe> sure, go for it

[00:07] <patrickb> I thought some more about handling command line arguments of subprocesses on Windows. Here is a short writeup of my findings and thoughts so far: https://gist.github.com/patzim/73d4e9c7f0cfc07d2db0f21c82aa1354#file-commandline-processing-md

[00:07] <japhb> MasterDuke: shrinking MAX_THREADS gives ugexe's result faster, but not linearly so; it got maybe 2/3 as far with only 4 threads.

[00:08] <patrickb> ugexe: ^ If you're interested.

[00:08] <patrickb> And with that I'm off for today.

[00:09] <patrickb> o/

[00:14] <japhb> OK, notes from our exploration added to the sync bug.

[00:15] *** patrickb left
[00:57] *** commavir_ joined
[00:57] *** scovit_ joined
[01:02] *** commavir left
[01:02] *** scovit left
[01:02] *** commavir_ is now known as commavir

[01:07] *** MasterDuke left
[01:09] *** MasterDuke joined
[01:09] *** MasterDuke left
[01:09] *** MasterDuke joined
[03:15] <MasterDuke> vrurg: does --target=parse -e '' work with your branch to add .e.PREVIEW?

[03:16] <vrurg> MasterDuke: dunno. Didn't try. Too late for today, will check tomorrow.

[03:16] <vrurg> o/

[03:16] <MasterDuke> k, later...

[04:50] *** ggoebel joined
[06:08] <Geth> ¦ nqp: 59d7a8869c | usev6++ | 2 files

[06:08] <Geth> ¦ nqp: [JVM] Set outer handler when calling unwind check

[06:08] <Geth> ¦ nqp: 

[06:08] <Geth> ¦ nqp: I'm not very sure about this patch but it helps with on failing

[06:08] <Geth> ¦ nqp: test (cmp. RT #131167) and has no (additional) fallout for spectest.

[06:08] <Geth> ¦ nqp: Please revert if it's the wrong thing to do.

[06:08] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/59d7a8869c

[06:08] <synopsebot> RT#131167 [new]: https://rt.perl.org/Ticket/Display.html?id=131167 [JVM] Newly-added NQP test for catching exceptions fails on JVM

[06:22] <Geth> ¦ rakudo: 8f1b1babd2 | usev6++ | t/spectest.data

[06:22] <Geth> ¦ rakudo: [JVM] Don't run some newly added sprintf tests

[06:22] <Geth> ¦ rakudo: 

[06:22] <Geth> ¦ rakudo: Some of the tests from S32-str/sprintf-c.t and S32-str/sprintf-s.t are

[06:22] <Geth> ¦ rakudo: failing on the JVM backend due to Unicode/Grapheme handling (afaik).

[06:22] <Geth> ¦ rakudo: Since it's not easy to add fudges for the generated tests, it seems

[06:22] <Geth> ¦ rakudo: simpler to skip running those test files for now.

[06:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8f1b1babd2

[06:51] *** ufobat__ joined
[06:55] *** ufobat_ left
[07:00] <releasable6> Next release in ≈2 days and ≈11 hours. 13 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[07:50] <lizmat> Files=1262, Tests=102483, 398 wallclock secs (27.07 usr  7.13 sys + 2844.86 cusr 241.57 csys = 3120.63 CPU)

[07:51] *** patrickb joined
[07:55] <|Tux|> Rakudo version 2019.03.1-219-g8f1b1babd - MoarVM version 2019.03-82-g7b112da34

[07:55] <|Tux|> csv-test-xs-20      0.446 -  0.446

[07:55] <|Tux|> csv-ip5xs           0.686 -  0.725

[07:55] <|Tux|> test-t --race       0.852 -  0.866

[07:55] <|Tux|> test-t              1.624 -  1.644

[07:55] <|Tux|> csv-ip5xs-20        5.878 -  5.931

[07:55] <|Tux|> test                6.959 -  7.054

[07:55] <|Tux|> test-t-20 --race   10.226 - 10.705

[07:55] <|Tux|> csv-parser         22.262 - 22.652

[07:55] <|Tux|> test-t-20          27.540 - 28.067

[07:55] <|Tux|> 20181015 1.659❙20181011 1.647❙20190418 1.644❙20190417 1.630❙20190418 1.624❙

[07:55] <|Tux|> :)

[08:40] <timotimo> japhb: have you already tried getting stack traces from all threads when the perl6 interpreter is deadlocked?

[08:53] *** vrurg left
[09:25] <Geth> ¦ roast: ad2297b640 | (Elizabeth Mattijsen)++ | S32-str/sprintf-b.t

[09:25] <Geth> ¦ roast: Streamline test generation / running of sprintf("b|B")

[09:25] <Geth> ¦ roast: 

[09:25] <Geth> ¦ roast: To allow for easier addition of additional tests that may not actually

[09:25] <Geth> ¦ roast: fit in the current construction.

[09:25] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ad2297b640

[09:25] <Geth> ¦ roast: 8f3fe2dad5 | (Elizabeth Mattijsen)++ | S32-str/sprintf-c.t

[09:25] <Geth> ¦ roast: Streamline test generation / running of sprintf("c")

[09:25] <Geth> ¦ roast: 

[09:25] <Geth> ¦ roast: To allow for easier addition of additional tests that may not actually

[09:25] <Geth> ¦ roast: fit in the current construction.  Also generate the "#" cases, as they are

[09:25] <Geth> ¦ roast: identical to the non-"#" cases.

[09:25] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8f3fe2dad5

[09:28] <patrickb> lizmat: I fixed up r#2846 . Seemed like you intended to merge. ;-)

[09:28] <synopsebot> R#2846 [open]: https://github.com/rakudo/rakudo/pull/2846 Remove relative elements from NQP_HOME and PERL6_HOME

[09:29] <Geth> ¦ rakudo: 65217aaafc | (Patrick Böker)++ | 2 files

[09:29] <Geth> ¦ rakudo: Remove relative elements from NQP_HOME and PERL6_HOME

[09:29] <Geth> ¦ rakudo: 

[09:29] <Geth> ¦ rakudo: This in turn results in the repository path specs to not contain any

[09:29] <Geth> ¦ rakudo: relative path elements.

[09:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/65217aaafc

[09:29] <Geth> ¦ rakudo: e11d0d54e4 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 2 files

[09:29] <Geth> ¦ rakudo: Merge pull request #2846 from patzim/no-rel-repo-paths

[09:29] <Geth> ¦ rakudo: 

[09:29] <Geth> ¦ rakudo: Remove relative elements from NQP_HOME and PERL6_HOME

[09:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e11d0d54e4

[09:30] <patrickb> lizmat: Thanks!

[09:30] <lizmat> patrickb++  :-)

[09:34] <Geth> ¦ roast: 8dda96a33b | (Elizabeth Mattijsen)++ | S32-str/sprintf-d.t

[09:34] <Geth> ¦ roast: Streamline test generation / running of sprintf("d|i")

[09:34] <Geth> ¦ roast: 

[09:34] <Geth> ¦ roast: To allow for easier addition of additional tests that may not actually

[09:34] <Geth> ¦ roast: fit in the current construction.

[09:34] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8dda96a33b

[09:38] <Geth> ¦ roast: 743bc0ef7e | (Elizabeth Mattijsen)++ | S32-str/sprintf-e.t

[09:38] <Geth> ¦ roast: Streamline test generation / running of sprintf("e|E")

[09:38] <Geth> ¦ roast: 

[09:38] <Geth> ¦ roast: To allow for easier addition of additional tests that may not actually

[09:38] <Geth> ¦ roast: fit in the current construction.

[09:38] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/743bc0ef7e

[10:10] <jnthn> Ah, neat, seems like I can run `make test` again without having to first `make install`

[10:10] <timotimo> hooray

[10:10] <jnthn> patrickb++, I assume :)

[10:14] <Geth> ¦ rakudo: 4702c245f0 | (Jonathan Worthington)++ | src/core/Metamodel/Primitives.pm6

[10:14] <Geth> ¦ rakudo: Expose newmixintype via Metamodel::Primitives

[10:14] <Geth> ¦ rakudo: 

[10:14] <Geth> ¦ rakudo: Recently, types that were the target of a rebless operation started

[10:14] <Geth> ¦ rakudo: needing to be created explicitly as mixin target types, to assist

[10:14] <Geth> ¦ rakudo: optimization. Expose the ability to do this in Metamodel::Primitives

[10:14] <Geth> ¦ rakudo: by allowing a `:mixin` flag to be passed to `create_type`.

[10:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4702c245f0

[10:16] <Geth> ¦ roast: c78326fa14 | (Jonathan Worthington)++ | S12-meta/primitives.t

[10:16] <Geth> ¦ roast: Cover Metamodel::Primitives.rebless

[10:16] <Geth> ¦ roast: 

[10:16] <Geth> ¦ roast: We'd never covered - and thus not specified - this method before now.

[10:16] <Geth> ¦ roast: This does so, and along the way covers the `:mixin` option to the

[10:16] <Geth> ¦ roast: `create_type` method. This means that there's now an official way

[10:16] <Geth> ¦ roast: forward for https://github.com/rakudo/rakudo/issues/2839.

[10:16] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c78326fa14

[10:19] <Geth> ¦ rakudo: e352962284 | (Elizabeth Mattijsen)++ | src/core/Mixy.pm6

[10:19] <Geth> ¦ rakudo: Suggest .roll when trying to do a Mixy.pick

[10:19] <Geth> ¦ rakudo: 

[10:19] <Geth> ¦ rakudo: Suggested by Ralph Mellor in:

[10:19] <Geth> ¦ rakudo:  https://stackoverflow.com/questions/55743267/weight-the-randomness-of-the-pick-routine

[10:19] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e352962284

[10:28] <Geth> ¦ roast: 6a541f5e6b | (Elizabeth Mattijsen)++ | S32-str/sprintf-f.t

[10:28] <Geth> ¦ roast: Streamline test generation / running of sprintf("f|F")

[10:28] <Geth> ¦ roast: 

[10:28] <Geth> ¦ roast: To allow for easier addition of additional tests that may not actually

[10:28] <Geth> ¦ roast: fit in the current construction.

[10:28] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6a541f5e6b

[10:31] <Geth> ¦ roast: c690803e82 | (Elizabeth Mattijsen)++ | S32-str/sprintf-o.t

[10:31] <Geth> ¦ roast: Streamline test generation / running of sprintf("o")

[10:31] <Geth> ¦ roast: 

[10:31] <Geth> ¦ roast: To allow for easier addition of additional tests that may not actually

[10:31] <Geth> ¦ roast: fit in the current construction.

[10:31] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c690803e82

[10:36] <Geth> ¦ roast: 2939371b55 | (Elizabeth Mattijsen)++ | S32-str/sprintf-s.t

[10:36] <Geth> ¦ roast: Streamline test generation / running of sprintf("s")

[10:36] <Geth> ¦ roast: 

[10:36] <Geth> ¦ roast: To allow for easier addition of additional tests that may not actually

[10:36] <Geth> ¦ roast: fit in the current construction.  Also generate the "#" cases, as they are

[10:36] <Geth> ¦ roast: identical to the non-"#" cases.

[10:36] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/2939371b55

[10:39] <Geth> ¦ roast: 4aadc2c09d | (Elizabeth Mattijsen)++ | S32-str/sprintf-u.t

[10:39] <Geth> ¦ roast: Streamline test generation / running of sprintf("u")

[10:39] <Geth> ¦ roast: 

[10:39] <Geth> ¦ roast: To allow for easier addition of additional tests that may not actually

[10:39] <Geth> ¦ roast: fit in the current construction.

[10:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/4aadc2c09d

[10:44] <jnthn> m: use Test; class ParameterChild is Parameter { has $.foobar }; is ParameterChild.new(foobar => 'Baz').foobar, 'Bar', 'Subclassing of Parameter works';

[10:44] <evalable6> jnthn, rakudo-moar e35296228: OUTPUT: «(exit code 1) not ok 1 - Subclassing of Parameter works␤# Failed test 'Subclassing of Parameter works'␤# at /tmp/XHDQoe2GaQ line 1␤# expected: 'Bar'␤#      got: (Any)␤»

[10:45] <Geth> ¦ roast: 7c142c6d5d | (Elizabeth Mattijsen)++ | S32-str/sprintf-x.t

[10:45] <Geth> ¦ roast: Streamline test generation / running of sprintf("x|X")

[10:45] <Geth> ¦ roast: 

[10:45] <Geth> ¦ roast: To allow for easier addition of additional tests that may not actually

[10:45] <Geth> ¦ roast: fit in the current construction.

[10:45] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7c142c6d5d

[10:45] <patrickb> jnthn: The respective PR r#2842 isn't merged yet...

[10:45] <synopsebot> R#2842 [open]: https://github.com/rakudo/rakudo/pull/2842 Fix build runners

[10:46] <jnthn> patrickb: Hm, curious...

[10:46] <jnthn> Maybe the relative paths one helped a bit?

[10:46] <patrickb> jnthn: Currently it's dependent on CWD

[10:46] <patrickb> They do work with CWD = build dir

[10:46] <patrickb> but should break when cwd is anything else

[10:47] <jnthn> ah, I see

[10:48] <Geth> ¦ roast: fae956e5a0 | (Elizabeth Mattijsen)++ | 2 files

[10:48] <Geth> ¦ roast: Remove some superfluous .uc's

[10:48] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/fae956e5a0

[10:51] <Geth> ¦ rakudo: d31fb27064 | (Jonathan Worthington)++ | 2 files

[10:51] <Geth> ¦ rakudo: Unbreak subclassing of Parameter

[10:51] <Geth> ¦ rakudo: 

[10:51] <Geth> ¦ rakudo: With this, the regression reported in  #2829 that broke

[10:51] <Geth> ¦ rakudo: `Cro::OpenAPI::RoutesFromDefinition` is now resolved.

[10:51] <Geth> ¦ rakudo: 

[10:51] <synopsebot> RAKUDO#2829 [open]: https://github.com/rakudo/rakudo/issues/2829 [BLOCKER][regression] Parameter subclasses don't initialize attributes

[10:51] <Geth> ¦ rakudo: It's covered for now by a Rakudo test, though arguably we should

[10:51] <Geth> ¦ rakudo: consider the ability to do this spec and add spectest coverage also.

[10:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d31fb27064

[10:55] <lizmat> jnthn++ # good catch

[11:09] <Geth> ¦ nqp: 3800095a42 | (Jonathan Worthington)++ | src/QRegex/Cursor.nqp

[11:09] <Geth> ¦ nqp: Protect against self-reference in match dump

[11:09] <Geth> ¦ nqp: 

[11:09] <Geth> ¦ nqp: This is sufficient to deal with the hang that was reported in

[11:09] <Geth> ¦ nqp: https://github.com/rakudo/rakudo/issues/2827.

[11:09] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/3800095a42

[11:14] <jnthn> patrickb: Should https://github.com/MoarVM/MoarVM/pull/1089 still be merged?

[11:15] <patrickb> jnthn: It should.

[11:15] <patrickb> Kaiepi is kind of waiting on this actually.

[11:16] <jnthn> OK, wasn't sure if work was underway to not need it :) Merged now

[11:16] <jnthn> Lunch time o/

[11:17] <lizmat> jnthn: shall I do some bumps ?

[11:36] <Geth> ¦ roast: d74f77549e | (Elizabeth Mattijsen)++ | 9 files

[11:36] <Geth> ¦ roast: Use more specific is-deeply for testing

[11:36] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d74f77549e

[11:41] <lizmat> m: dd sprintf("%08f",Inf)   # intriguing numbers

[11:41] <evalable6> lizmat, rakudo-moar d31fb2706: OUTPUT: «"00000Inf"␤»

[11:41] <lizmat> m: dd sprintf("%08f",-Inf)

[11:41] <evalable6> lizmat, rakudo-moar d31fb2706: OUTPUT: «"-0000Inf"␤»

[11:43] <lizmat> m: dd sprintf("%.3f",NaN)  # I was hoping for NaN.00

[11:43] <evalable6> lizmat, rakudo-moar d31fb2706: OUTPUT: «"NaN"␤»

[11:48] *** ggoebel left
[12:40] <Geth> ¦ roast: abcef56825 | (Elizabeth Mattijsen)++ | S32-str/sprintf-d.t

[12:40] <Geth> ¦ roast: Add variable precision tests + some big number tests for "%d|i"

[12:40] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/abcef56825

[12:41] <lizmat> TIL about variable precision in sprintf

[12:42] <lizmat> m: dd sprintf("%8.*d",[4,666])

[12:42] <evalable6> lizmat, rakudo-moar d31fb2706: OUTPUT: «"    0666"␤»

[12:44] <lizmat> I don't think that's documented, actually

[12:44] <lizmat> m: dd sprintf("%8.*d",4,666)

[12:44] <evalable6> lizmat, rakudo-moar d31fb2706: OUTPUT: «"    0666"␤»

[12:44] <lizmat> interesting

[12:45] <lizmat> ah, no, it *is* documented

[13:04] <Geth> ¦ roast: 31ecaedd47 | (Elizabeth Mattijsen)++ | S32-str/sprintf-d.t

[13:04] <Geth> ¦ roast: Make sure we flatten the value to be checked

[13:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/31ecaedd47

[13:22] *** vrurg joined
[13:42] <lizmat> commute to NR.PM&

[13:42] *** lizmat left
[13:43] <vrurg> .tell MasterDuke it's not so many changes in the branch, so --target=parse fails too.

[13:43] <yoleaux> vrurg: I'll pass your message to MasterDuke.

[13:49] *** MasterDuke left
[14:04] *** patrickb left
[14:48] *** lucasb joined
[15:05] <Geth> ¦ rakudo: patzim self-assigned Invocation used to run Perl 6 code under remote debugger broken https://github.com/rakudo/rakudo/issues/2850

[15:15] <japhb> .tell timotimo No, I hadn't gotten a stack trace from all threads at the point of deadlock.  What's the easiest way to do that?

[15:15] <yoleaux> japhb: I'll pass your message to timotimo.

[15:17] <timotimo> .

[15:17] <yoleaux> 15:15Z <japhb> timotimo: No, I hadn't gotten a stack trace from all threads at the point of deadlock.  What's the easiest way to do that?

[15:17] <timotimo> :P

[15:20] <japhb> timotimo: Why the ':P' ?

[15:27] <timotimo> i just arrived here the moment you sent that .tell

[15:39] <japhb> Ah

[15:39] <japhb> Question remains open though.  ;-)

[15:45] <timotimo> oh

[15:45] <timotimo> right

[15:46] <timotimo> when you have gdb attached, for example through a core dump or because you started your script with perl6-gdb-m, then you'd ctrl-c and "threads apply all bt"

[15:52] <japhb> timotimo: Is there a way to write that thread bt output to a file?

[15:53] <timotimo> would it be enough if i told you to "set pager off"?

[15:54] <timotimo> or maybe it's "set pagination off"

[16:00] <timotimo> (gdb) set logging file my_god_object.log

[16:00] <timotimo> this ought to write stuff to a file

[16:00] <timotimo> though probably first have to "set logging on"

[16:03] <japhb> OK, will try.

[16:26] *** lizmat joined
[16:50] *** vrurg left
[16:51] *** vrurg joined
[17:15] *** lizmat left
[17:19] *** go|dfish joined
[17:48] *** lizmat joined
[19:05] *** lizmat left
[19:38] *** lucasb left
[19:44] *** lizmat joined
[19:45] <Geth> ¦ rakudo: vrurg++ created pull request #2852: Add revision 6.e and improve multi-revision support

[19:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2852

[19:49] <Geth> ¦ roast: vrurg++ created pull request #530: Removed all .REVIEW modificators from v6.d

[19:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/530

[19:54] *** lizmat left
[20:05] *** brrt joined
[20:16] *** AlexDaniel left
[20:24] *** squashable6 left
[20:27] *** squashable6 joined
[21:00] *** brrt left
[22:12] *** lizmat joined
[22:27] <vrurg> releasable6: status

[22:27] <releasable6> vrurg, Next release in ≈1 day and ≈20 hours. 11 blockers. 59 out of 224 commits logged (⚠ 51 warnings)

[22:27] <releasable6> vrurg, Details: https://gist.github.com/febfd495c76f979e73d848afbeefac43

[22:43] <samcv> woo release

[23:44] *** vrurg left
[23:44] *** vrurg joined
