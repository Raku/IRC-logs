[02:29] *** epony left
[02:46] <Kaiepi> "it's not stale precomp"

[02:46] <Kaiepi> "there's no way it's stale precomp!"

[02:46] <Kaiepi> ...

[02:46] <Kaiepi> "it was stale precomp"

[03:14] *** epony joined
[05:10] *** mst left
[07:44] <nine> Kaiepi: how did you end up with stale precomp?

[07:45] <Kaiepi> not sure

[07:46] <Kaiepi> this time in particular it happened with a couple test files in rakudo's test suite, but it happens every now and then

[08:10] <AlexDaniel> fwiw I'm seeing precomp issues all the time, and it was like this since the beginning‚Ä¶

[08:11] <AlexDaniel> that said, I never really ticketed anything because nuking always helps, and I have no idea how to reproduce any of these issues

[08:11] <AlexDaniel> :S

[09:21] <lizmat> AlexDaniel: just here for a moment

[09:21] <lizmat> re cached Seq's

[09:21] <lizmat> your example uses a reified list (1,2,3)

[09:21] <lizmat> in that case the sequence uses the reified list as its cachew

[09:21] <lizmat> afk again&

[10:11] <lizmat> problem something for the problem solving repo:

[10:11] <lizmat> do we want to keep our open / all bugs from RT around in some form?

[10:12] <lizmat> in the even that RT is shut down

[11:19] <Geth> ¬¶ rakudo: 0c8f960e87 | (Elizabeth Mattijsen)++ | 2 files

[11:19] <Geth> ¬¶ rakudo: Revert "Do correct assignment to SetHash"

[11:19] <Geth> ¬¶ rakudo: 

[11:19] <Geth> ¬¶ rakudo: This reverts commit f1512e9f976b4f57f39db809bf69bc068a70e7e5.

[11:19] <Geth> ¬¶ rakudo: 

[11:19] <Geth> ¬¶ rakudo: - changes current semantics on which code may rely

[11:19] <Geth> ¬¶ rakudo:   - so should probably be version based

[11:19] <Geth> ¬¶ rakudo: - doesn't fix the same issue that Set.STORE has

[11:19] <Geth> ¬¶ rakudo: - doesn't fix more generally issue that QuantHash.STORE(QuantHash) may have

[11:19] <Geth> ¬¶ rakudo: - is for a ticket that is more than 1.5 years old

[11:19] <Geth> ¬¶ rakudo:   - so there is no urgency to fix this now just before a release

[11:19] <Geth> ¬¶ rakudo:     that is already 2 months overdue

[11:20] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/0c8f960e87

[11:20] <lizmat> ticket in question: R#1203

[11:20] <synopsebot_> R#1203 [open]: https://github.com/rakudo/rakudo/issues/1203 [data types] Would be nice to have an easy way to work with SetHashes and its kin

[11:24] *** Kaiepi joined
[12:21] <Geth> ¬¶ roast: 0f5ace21a2 | (Elizabeth Mattijsen)++ | S03-operators/assign.t

[12:21] <Geth> ¬¶ roast: Revert "Test for SetHash assignment"

[12:21] <Geth> ¬¶ roast: 

[12:21] <Geth> ¬¶ roast: This reverts commit 12298da5a6169d441a28141430cf328217bbfc93.

[12:21] <Geth> ¬¶ roast: 

[12:21] <Geth> ¬¶ roast: Reverting, because the associated Rakudo commit also got reverted.

[12:21] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/0f5ace21a2

[12:23] *** travis-ci joined
[12:23] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Revert "Do correct assignment to SetHash"

[12:23] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/549069736 https://github.com/rakudo/rakudo/compare/ed3db12c7310...0c8f960e87f8

[12:23] *** travis-ci left
[12:24] <lizmat> appears to be unrelated

[12:24] <lizmat> restarted the one failing job, to see if it's a flapper

[12:26] <lizmat> https://github.com/perl6/problem-solving/issues/47

[12:26] <lizmat> Metaop semantics with QuantHashes

[12:42] *** dogbert17 joined
[12:42] <lizmat> Travis all green now

[13:53] *** lucasb joined
[14:11] *** mst joined
[14:14] <vrurg> lizmat: I think it was preliminary to close 1203. The right answer was with my patch which you reverted. 

[14:15] * lizmat reopened 1203

[14:16] <lizmat> Please see https://github.com/perl6/problem-solving/issues/47

[14:16] <vrurg> I saw your problem-solving ticket, that's what I was about to ask for. ;) Need to checkout from the hotel now, but gonna have plenty of time in the airport to answer.

[14:17] <lizmat> vrurg: ok

[14:18] <MasterDuke> lizmat: can you reliably recreate that odd profile you showed me a while ago?

[14:19] <lizmat> I'm afraid not  :-(

[14:19] <MasterDuke> ugh, not here either

[14:23] <AlexDaniel> lizmat: reportable6 has a backup of all RT tickets, as far as I know

[14:24] <lizmat> AlexDaniel: good to know

[14:24] <MasterDuke> timotimo: btw, any idea why `<anon> gen/moar/stage2/NQPHLL.nqp:1825` is now showing up at the top of profiles? i thought i managed to reset profiling state after calculating the overhead

[14:24] <Geth> ¬¶ problem-solving: AlexDaniel assigned to jnthn Issue Metaop semantics with QuantHashes https://github.com/perl6/problem-solving/issues/47

[14:25] <AlexDaniel> lizmat: given the amount of activity on RT, we can write it to a USB drive and then frame it on the wall

[14:25] <lizmat> well, RT will be shut off pretty soon...  so if we want that USB drive, we're going to need to fill that now

[14:25] <AlexDaniel> ‚ÄúAll RT tickets in perl6 queue, up-to-date.‚Äù

[14:26] <AlexDaniel> lizmat: where can I read about that?

[14:26] <lizmat> about RT being shut down ?

[14:26] <AlexDaniel> yeah

[14:27] * lizmat looks in her mail

[14:27] <MasterDuke> random question, any idea why `say (^8).permutations>>.sort(:as(*.Str)).elems` would have Mu.pm6's `proto method Bool()` at the top by exclusive time?

[14:28] <lizmat> AlexDaniel: saw it in a private mail, referring to https://github.com/rspier/rt-static

[14:29] <AlexDaniel> lizmat: ok, so there will be a static version

[14:29] <lizmat> well... fsvo version

[14:33] <lizmat> MasterDuke: hmmm... it looks like *every* profile I do now, has gen/moar/stage2/NQPHLL.nqp:1825 taking about 50% of the timer

[14:33] <lizmat> which is, afaics, the code doing the profile

[14:33] <lizmat> timotimo: ^^^

[14:33] <MasterDuke> lizmat: yep. that was not intentional

[14:34] *** vrurg left
[14:44] <timotimo> hmm, tbh i also don't know how confprog and that work together

[14:47] <MasterDuke> timotimo: when did you merge confprog?

[14:49] <timotimo> only to moarvm so far, and to nqp i guess?

[14:49] <timotimo> let me have another look

[14:50] <timotimo> ah. not to nqp yet

[14:50] <MasterDuke> there was a rakudo bump yesterday i think

[14:50] <timotimo> because moar hasn't been bumped

[14:50] <timotimo> hadn't been bumped, to be exact

[14:50] <timotimo> there we go

[14:50] <Geth> ¬¶ nqp: 1bf35cbed2 | (Timo Paulssen)++ | 2 files

[14:50] <Geth> ¬¶ nqp: Revert "back out installconfprog until it's in moarvm master"

[14:50] <Geth> ¬¶ nqp: 

[14:50] <Geth> ¬¶ nqp: This reverts commit cdc9e773acbdab01e4e8f59bc4591806c25e4d2a.

[14:50] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/1bf35cbed2

[14:50] <MasterDuke> ?

[14:51] <MasterDuke> my tools/templates/MOAR_REVISION matches `git describe` in moarvm

[14:52] <timotimo> it hadn't beem bumped the last time i looked :)

[14:52] <MasterDuke> ah, you're bringing installconfprog back in

[14:52] <MasterDuke> does that also need something in rakudo?

[14:53] <timotimo> nope

[14:55] <timotimo> only an nqp bump would be required to activate it

[14:58] <lizmat> afk for several hours&

[15:14] <MasterDuke> timotimo: fwiw, after rebuilding  nqp and rakudo, that <anon> is still at the top of a profile

[15:33] <timotimo> yes, if you don't activate confprog, nothing happens (hopefully)

[15:39] <MasterDuke> timotimo: it must be something i did(n't) do in https://github.com/MoarVM/MoarVM/pull/1111

[15:43] <timotimo> do we perhaps want to revert it for the release?

[15:45] <MasterDuke> unless we can find a fix, yeah

[15:45] <MasterDuke> maybe there is something i should do with tc->instance->instrumentation_level ?

[15:45] <timotimo> release is already being pushed far past its intended release date :)

[16:01] <AlexDaniel> and you can help with that a lot!

[16:01] <AlexDaniel> :)

[16:07] *** vrurg joined
[16:12] *** vrurg left
[16:14] *** vrurg joined
[16:16] <[Tux]> Rakudo version 2019.03.1-645-g0c8f960e8 - MoarVM version 2019.05-91-g81e5cbf2a

[16:16] <[Tux]> csv-test-xs-20      0.437 -  0.455

[16:16] <[Tux]> test-t --race       0.828 -  0.830

[16:16] <[Tux]> csv-ip5xs           1.153 -  1.190

[16:16] <[Tux]> test-t              1.722 -  1.728

[16:16] <[Tux]> test                6.706 -  6.874

[16:16] <[Tux]> test-t-20 --race    8.957 -  9.465

[16:16] <[Tux]> csv-parser         23.423 - 23.520

[16:16] <[Tux]> test-t-20          27.576 - 29.315

[16:16] <[Tux]> csv-ip5xs-20       59.552 - 60.550

[16:58] *** jnthn left
[18:01] <vrurg> .tell AlexDaniel looks like R#3012 might need conceptual consideration. I don't see a direct solution but to prohibit binding of exports whatsoever for now.

[18:01] <yoleaux> vrurg: I'll pass your message to AlexDaniel.

[18:01] <synopsebot_> R#3012 [open]: https://github.com/rakudo/rakudo/issues/3012 [BLOCKER][regression] Some issue after ‚ÄúDecontainerize non-scalar symbols upon import‚Äù commit

[18:01] <AlexDaniel> .

[18:01] <yoleaux> 18:01Z <vrurg> AlexDaniel: looks like R#3012 might need conceptual consideration. I don't see a direct solution but to prohibit binding of exports whatsoever for now.

[18:01] <AlexDaniel> vrurg: well‚Ä¶ there's at least one module that is broken‚Ä¶

[18:02] <AlexDaniel> on the other hand, only one that we were able to detect

[18:02] <AlexDaniel> vrurg: is it greppable?

[18:02] <vrurg> AlexDaniel: my decont commit is not related, the problem is reproducible on 2019.03. It just reveals what previously was a damn sheer luck.

[18:03] <vrurg> Try 'is export .* :='

[18:04] <AlexDaniel> greppable6: is export .* :=

[18:04] <greppable6> AlexDaniel, Found nothing!

[18:04] <vrurg> I'm still trying to find a way to either apply binding before traits or make 'is export' a lazy thing. 

[18:08] <vrurg> Hm... 

[18:08] <AlexDaniel> Geth: ver https://github.com/rakudo/rakudo/commit/235f14cd5138663c35f574a694e45b5bc0141031

[18:08] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/perl6/nqp/compare/2019.03-62-gb46d91b...2019.03-76-gf68c2ba

[18:08] <AlexDaniel> Geth: ver https://github.com/perl6/nqp/commit/f68c2badbd6473296f55e698e128ab755c59b29b

[18:08] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/MoarVM/MoarVM/compare/2019.03-76-gc10fee6...2019.03-97-g8fef199

[18:09] <AlexDaniel> timotimo: in these commits, what could cause `elems requires a concrete object (got a NativeCall::Types::CArray[uint8] type object instead)` ?

[18:27] <timotimo> well, is there a backtrace?

[18:27] <AlexDaniel> timotimo: sorta: https://github.com/rakudo/rakudo/issues/3015

[18:30] <AlexDaniel> looking at the code, it's probably indeed a type object

[18:33] <timotimo> where do i have to look?

[18:35] <AlexDaniel> timotimo: https://github.com/rakudo/rakudo/blob/0c8f960e87f8e52e16179c6f45f14445839b1096/lib/NativeCall/Types.pm6#L223

[18:35] <AlexDaniel> timotimo: https://github.com/salortiz/p6-LMDB/blob/3eb6c14d9b1a0110e3cca001c4800fb492673aa3/lib/LMDB.pm6#L98

[18:35] <AlexDaniel> timotimo: https://github.com/salortiz/p6-LMDB/blob/3eb6c14d9b1a0110e3cca001c4800fb492673aa3/lib/LMDB.pm6#L452

[19:05] <vrurg> AlexDaniel: if spectests are passed then I have the a for 3012.

[19:11] <timotimo> yeah, that seems wrong

[19:13] *** Kaiepi left
[19:25] *** Kaiepi joined
[19:27] <Geth> ¬¶ rakudo: vrurg++ created pull request #3016: Implement more fine-grained deconting of exported symbols

[19:27] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/3016

[19:33] <Geth> ¬¶ rakudo: 0b9762642c | (Elizabeth Mattijsen)++ | 2 files

[19:33] <Geth> ¬¶ rakudo: Revert "Don't allow junctions as keys for Hash/Map initializations"

[19:33] <Geth> ¬¶ rakudo: 

[19:33] <Geth> ¬¶ rakudo: This reverts commit 358d59fdae47edbe788fc8fea9afc27148896330.

[19:33] <Geth> ¬¶ rakudo: 

[19:33] <Geth> ¬¶ rakudo: This appears to be needing a little more thought on maybe a

[19:33] <Geth> ¬¶ rakudo: deprecation cycle / version dependency.

[19:33] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/0b9762642c

[19:35] <lizmat> AlexDaniel: reverted the commit causing the regression, left the ticket open, removed the blocker label

[19:36] <AlexDaniel> lizmat: alright

[19:36] <AlexDaniel> lizmat: thank you! Also, I just left a comment here: https://github.com/rakudo/rakudo/issues/3014#issuecomment-504692735

[19:36] <AlexDaniel> c: HEAD my @a = <foo bar baz>; my Seq $s = @a.Seq; say $s.first; @a[0] = 20; say $s.first

[19:36] <committable6> AlexDaniel, ¬¶HEAD(0c8f960): ¬´foo‚ê§20‚ê§¬ª

[19:36] <AlexDaniel> c: 2019.03 my @a = <foo bar baz>; my Seq $s = @a.Seq; say $s.first; @a[0] = 20; say $s.first

[19:36] <committable6> AlexDaniel, ¬¶2019.03: ¬´foo‚ê§The iterator of this Seq is already in use/consumed by another Seq‚ê§(you might solve this by adding .cache on usages of the Seq, or‚ê§by assigning the Seq into an array)‚ê§  in block <unit> at /tmp/EsZHTk2BvV line 1‚ê§‚ê§ ¬´exit code = 1¬ª¬ª

[19:45] <lizmat> AlexDaniel: not sure why you use .first instead of .head

[19:45] <lizmat> bisectable6: my @a = <foo bar baz>; my Seq $s = @a.Seq; say $s.first; @a[0] = 20; say $s.first

[19:45] <bisectable6> lizmat, Bisecting by exit code (old=2015.12 new=0b97626). Old exit code: 1

[19:46] <AlexDaniel> lizmat: because maybe, just maybe, the naming is a bit confusing and not exactly explicit

[19:46] <bisectable6> lizmat, bisect log: https://gist.github.com/87199c5433eeccb67aecf2c9441988d9

[19:46] <bisectable6> lizmat, (2019-06-12) https://github.com/rakudo/rakudo/commit/94ba19f7e5ece517ca48ac16bf385bee2650b018

[19:46] <AlexDaniel> lizmat: :)

[19:46] <AlexDaniel> but yes, I meant head

[19:46] <AlexDaniel> greppable6: \.first;

[19:46] <greppable6> AlexDaniel, 68 lines, 36 modules: https://gist.github.com/9293e27affd6d158e897650fa9584b02

[19:47] <AlexDaniel> and 36 modules agree!

[19:47] <AlexDaniel> oh my xD

[19:47] <AlexDaniel> I also like this

[19:47] <AlexDaniel> greppable6: grep.*\.first;

[19:47] <greppable6> AlexDaniel, 18 lines, 13 modules: https://gist.github.com/b8cc1f7fdbce9163c0a3e7b5a9467710

[19:49] <lizmat> looks like me should make the distinction between .first / .head clearer

[19:49] <lizmat> *we

[19:52] <AlexDaniel> lizmat: is there any downside?

[19:52] <MasterDuke> at least there isn't much of a performance difference

[19:52] <lizmat> .grep(foo).first is the same as .first(foo)

[19:52] <AlexDaniel> lizmat: yes yes, that's the point :)

[19:53] <AlexDaniel> m: say <foo bar baz>.head(3)

[19:53] <camelia> rakudo-moar 0b9762642: OUTPUT: ¬´(foo bar baz)‚ê§¬ª

[19:53] <AlexDaniel> m: say <foo bar baz>.head(2)

[19:53] <camelia> rakudo-moar 0b9762642: OUTPUT: ¬´(foo bar)‚ê§¬ª

[19:53] <AlexDaniel> m: say <foo bar baz>.first(2)

[19:53] <camelia> rakudo-moar 0b9762642: OUTPUT: ¬´Nil‚ê§¬ª

[19:53] <AlexDaniel> m: say <foo 2 baz>.first(2)

[19:53] <camelia> rakudo-moar 0b9762642: OUTPUT: ¬´2‚ê§¬ª

[19:53] <lizmat> .grep(foo).head is *not* the same as .head(foo)

[19:53] <yoleaux> lizmat: Sorry, that command (.grep(foo).head) crashed.

[20:05] * AlexDaniel shrugs

[20:05] <AlexDaniel> https://github.com/perl6/problem-solving/issues/48

[20:37] <lizmat> AlexDaniel: In process of reverting all 3 commits re R#3014 and spectesting...

[20:37] <synopsebot_> R#3014 [open]: https://github.com/rakudo/rakudo/issues/3014 [BLOCKER][regression] Unwanted caching of Seqs

[20:37] <AlexDaniel> lizmat++

[20:39] <Geth> ¬¶ rakudo: 090f3f1b45 | (Elizabeth Mattijsen)++ | 4 files

[20:39] <Geth> ¬¶ rakudo: Revert 7af0fb1 94ba19f 9107215

[20:39] <Geth> ¬¶ rakudo: 

[20:39] <Geth> ¬¶ rakudo: We need to look into this deeper.

[20:39] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/090f3f1b45

[20:40] <vrurg> lizmat: You have a 'Hallo' from Theo. We're sitting together in PIT

[20:40] * lizmat waves at Theo

[20:41] <Geth> ¬¶ roast: d3fa62ae99 | (Elizabeth Mattijsen)++ | S02-types/hash.t

[20:41] <Geth> ¬¶ roast: Revert "Add tests for R#2865"

[20:41] <Geth> ¬¶ roast: 

[20:41] <Geth> ¬¶ roast: This reverts commit 40c3f305d92cdb9e142323fcddb28a1d2bee2f1d.

[20:41] <Geth> ¬¶ roast: 

[20:41] <Geth> ¬¶ roast: We're allowing junctions again for the moment

[20:41] <Geth> ¬¶ roast: review: https://github.com/perl6/roast/commit/d3fa62ae99

[20:41] <synopsebot_> R#2865 [open]: https://github.com/rakudo/rakudo/issues/2865 All Junctions behave the same when used to define a hash key

[20:48] <lizmat> AlexDaniel: I'm out of tuits for this evening...

[21:24] *** vrurg left
[21:56] <Geth> ¬¶ rakudo: 8652386974 | (Elizabeth Mattijsen)++ | src/core/Any-iterable-methods.pm6

[21:56] <Geth> ¬¶ rakudo: Handle Junctions in Bool context within grep

[21:56] <Geth> ¬¶ rakudo: 

[21:56] <Geth> ¬¶ rakudo: Fixes R#2975

[21:56] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/8652386974

[21:56] <synopsebot_> R#2975 [open]: https://github.com/rakudo/rakudo/issues/2975 [BLOCKER][regression] Regression in grep with Junctions

[21:58] <AlexDaniel> m: (when %()<>:exists { ... })

[21:58] <camelia> rakudo-moar 090f3f1b4: OUTPUT: ¬´===SORRY!===‚ê§internal problem: parser did not give circumfix an EXPR‚ê§¬ª

[21:58] <AlexDaniel> bisect: (when %()<>:exists { ... })

[21:58] <bisectable6> AlexDaniel, Bisecting by exit code (old=2015.12 new=090f3f1). Old exit code: 0

[21:59] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/a9528bec096226d369477303a43654ab

[21:59] <bisectable6> AlexDaniel, (2018-05-22) https://github.com/rakudo/rakudo/commit/91359141fb7501636b073ccaf6fb6598dc273bec

[22:03] <lizmat> AlexDaniel: really out of tuits now  :-)

[22:24] *** jnthn joined
[22:27] *** jnthn left
[22:27] *** jnthn joined
[23:03] *** lucasb left
[23:04] <Geth> ¬¶ problem-solving: AlexDaniel assigned to JJ Issue .head and .first https://github.com/perl6/problem-solving/issues/48

