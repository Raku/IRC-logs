[00:22] *** MasterDuke joined
[00:22] *** p6bannerbot sets mode: +v MasterDuke

[00:22] *** MasterDuke left
[00:22] *** MasterDuke joined
[00:22] *** herbert.freenode.net sets mode: +v MasterDuke

[00:22] *** p6bannerbot sets mode: +v MasterDuke

[01:12] *** TimToady joined
[01:13] *** p6bannerbot sets mode: +v TimToady

[01:17] *** Ven`` left
[01:19] *** lizmat left
[02:12] *** Tux__ joined
[02:12] *** |Tux| left
[02:13] *** p6bannerbot sets mode: +v Tux__

[02:24] *** Kaypie is now known as Kaiepi

[03:00] <releasable6> Next release in ≈6 days and ≈15 hours. 4 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[04:02] *** MasterDuke left
[04:28] *** Kaiepi left
[04:28] *** Kaiepi joined
[04:29] *** p6bannerbot sets mode: +v Kaiepi

[05:44] *** pmurias joined
[05:44] *** p6bannerbot sets mode: +v pmurias

[05:50] *** pmurias left
[08:18] *** lizmat joined
[08:18] *** p6bannerbot sets mode: +v lizmat

[08:23] <lizmat> Files=1264, Tests=87995, 375 wallclock secs (20.13 usr  5.91 sys + 2670.81 cusr 229.56 csys = 2926.41 CPU)

[08:47] *** robertle left
[08:57] <nine> .tell patrickb "it's a price we have to pay" is not really the attitude we want to have. We're the "torture the implementors for the sake of the users" people ;) In most cases there is a way to have both some feature and the performance benefit. Even though it may take years to get there.

[08:57] <yoleaux> nine: I'll pass your message to patrickb.

[09:19] *** robertle joined
[09:20] *** p6bannerbot sets mode: +v robertle

[09:38] *** [Tux] left
[09:44] *** [Tux] joined
[09:45] *** p6bannerbot sets mode: +v [Tux]

[09:45] *** [Tux] left
[09:54] *** [Tux] joined
[09:54] *** p6bannerbot sets mode: +v [Tux]

[10:40] <[Tux]> Rakudo version 2018.12-205-gca177e583 - MoarVM version 2018.12-29-g1ff55bf1c

[10:40] <[Tux]> csv-test-xs-20      0.425 -  0.433

[10:40] <[Tux]> test-t --race       0.845 -  0.865

[10:40] <[Tux]> csv-ip5xs           0.935 -  0.935

[10:40] <[Tux]> test-t              1.859 -  1.908

[10:40] <[Tux]> csv-ip5xs-20        7.066 -  7.241

[10:40] <[Tux]> test                7.429 -  7.829

[10:40] <[Tux]> test-t-20 --race    9.957 - 10.108

[10:40] <[Tux]> csv-parser         23.276 - 23.278

[10:40] <[Tux]> test-t-20          30.996 - 31.011

[10:57] <Geth> ¦ rakudo: 7be075eb59 | (Elizabeth Mattijsen)++ | src/core/Parameter.pm6

[10:57] <Geth> ¦ rakudo: Add support for "sub-signature" while creating a Parameter

[10:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7be075eb59

[11:38] *** pmurias joined
[11:38] *** p6bannerbot sets mode: +v pmurias

[11:40] <pmurias> nine: if takes years to avoid paying a price of a couple nqp:: op calls maybe it's not a good tradeoff ;)

[11:43] <nine> pmurias: of course it depends on the actual cost :)

[12:08] <lizmat> m: role A[::T] { method a { 42 } }; class B {  method ^parameterize(Mu \base, Mu \type) { base.^mixin(A[type]) } }; dd B[Int].a

[12:08] <camelia> rakudo-moar 7be075eb5: OUTPUT: «42␤»

[12:09] <lizmat> this works fine, however if I don't add a parameterization to B, it won't mixin A

[12:09] <lizmat> m: role A[::T] { method a { 42 } }; class B {  method ^parameterize(Mu \base, Mu \type) { base.^mixin(A[type]) } }; dd B.a

[12:09] <camelia> rakudo-moar 7be075eb5: OUTPUT: «No such method 'a' for invocant of type 'B'␤  in block <unit> at <tmp> line 1␤␤»

[12:10] <lizmat> how do I get it to mixin A[Mu] if I don't specify a parameterization with B ?

[12:11] <lizmat> m: role A[::T] { method a { 42 } }; class B[::T = Mu] does A[T] { }; dd B.a 

[12:11] <camelia> rakudo-moar 7be075eb5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse class definition␤at <tmp>:1␤------> 3role A[::T] { method a { 42 } }; class B7⏏5[::T = Mu] does A[T] { }; dd B.a␤    expecting any of:␤        generic role␤»

[12:11] <lizmat> doesn't work either :-(

[12:18] <tyil> I'm testing out a new bot to notify on perl 6 module uploads to cpan in #sk-test (since Buggable seems gone and I felt like doing some Perl 6)

[12:19] <tyil> I'm gonna head out in a bit, hoping it'll work as expected and show me a list of new modules when I get back

[12:20] <tyil> but IRC::client seems to be having troubles keeping the connection alive rn

[12:20] <tyil> so I'm skeptical :(

[12:20] <timotimo> is that what the whateverables use?

[12:20] <timotimo> actually, whateverable may be a very good basis for an irc bot just in general?

[12:21] <tyil> I can take a peek

[12:21] <tyil> I thought IRC::Client was the standard to use in perl 6

[12:22] <tyil> the readme says they are indeed based on IRC::Client

[12:22] <timotimo> OK, but whateverable bots are mostly stable when it comes to keeping their connection alive, though i think they can sometimes ping out when their task takes too long?

[12:23] <timotimo> i haven't looked very closely into it

[12:23] <timotimo> the last time i really noticed that has been long ago, too

[12:23] <tyil> IRC::Client has been stable for me too for previous projects :(

[12:23] <timotimo> maybe there's a regression we could figure out here

[12:23] <tyil> a blocking background task might be related, as I am retrieving module updates and parsing them

[12:24] <timotimo> but the threadpool scheduler should have sufficient threads in its pool for such situations, i'd think

[12:24] <tyil> I'm pretty sure it's me now that you mention background tasks :p

[12:24] <tyil> I have a react block on irc-connected

[12:24] <timotimo> activating the thread pool scheduler log may help here

[12:24] <tyil> so immediately after connecting it goes into the react block, which doesn't go onto a different thread i think

[12:25] <tyil> so it may never respond to PINGs

[12:25] <timotimo> ooh

[12:25] <tyil> could I solve this by adding a start before my react?

[12:25] <timotimo> at the very least that's a gotcha that should go into IRC::Client's documentation, if there's no easy fix for it

[12:25] <timotimo> supplies have the "the sender pays the computation cost" model

[12:25] *** remi_ness joined
[12:26] <timotimo> so when it sends off the "you got a command" message, the thread that handles the irc connection itself might be paying for the entirety of the computation

[12:26] <timotimo> you have many ways to get around this, but i think just putting the react into a start block doesn't help in the situation i'm thinking of

[12:26] <tyil> after adding a `start` I seem to get more debugging output from the server, so if it PING/PONGs I should be ok

[12:26] *** p6bannerbot sets mode: +v remi_ness

[12:27] <timotimo> you can "whenever $irc-client.message-supply.Channel { ... }" which means the irc client will only pay the cost of putting a message into that channel

[12:27] <tyil> we'll see in a minute I think

[12:27] <timotimo> you can "whenever $irc-client.message-supply { start { do-the-task } }" so the cost is only to schedule that task to the pool

[12:27] <tyil> hmm

[12:27] <tyil> that also sounds like a good idea

[12:27] <timotimo> of course then you'll be potentially getting many tasks run at the same time

[12:28] <timotimo> so there'll probably have to be something to limit that?

[12:28] <tyil> the supply is time-based, so if it finishes within the time limit it should be ok, right?

[12:28] <tyil> (also, adding the start makes the bot PONG on PINGs, so that actually did seem to do it)

[12:29] <timotimo> i'm not sure what you mean by time-based

[12:29] <tyil> Supply.interval(60)

[12:30] <tyil> so it's not an outside event triggering it, but it happens when an amount of time has passed

[12:30] <timotimo> ah, yeah, so long as you finish within that time, no two tasks will run at the same time

[12:31] <tyil> maybe I should rewrite it to re-run one minute after finishing the last run

[12:31] <timotimo> also totally possible

[12:31] <tyil> but that's something for later, first I want to see if this proof of concept actually works

[12:31] <timotimo> if you put the code to "do the thing" into a sub, you can actually put "whenever Promise.in(60) { the-sub }" into the sub itself without trouble

[12:32] <tyil> that's interesting

[12:32] *** ufobat joined
[12:33] *** p6bannerbot sets mode: +v ufobat

[12:35] <tyil> thanks for your help timotimo, it seems to not die now :)

[12:36] <timotimo> \o/

[12:52] *** lucasb joined
[12:52] *** p6bannerbot sets mode: +v lucasb

[13:31] *** patrickb joined
[13:32] *** p6bannerbot sets mode: +v patrickb

[14:22] *** pmurias left
[14:23] *** pmurias joined
[14:23] *** p6bannerbot sets mode: +v pmurias

[14:23] *** MasterDuke joined
[14:23] *** p6bannerbot sets mode: +v MasterDuke

[14:23] *** MasterDuke left
[14:23] *** MasterDuke joined
[14:23] *** herbert.freenode.net sets mode: +v MasterDuke

[14:23] *** p6bannerbot sets mode: +v MasterDuke

[14:26] <lizmat> m: role A[::T = Mu] { }; my @a is A

[14:26] <camelia> rakudo-moar 7be075eb5: ( no output )

[14:26] <lizmat> m: role A[::T = Mu] { }; my @a is A[Int]

[14:26] <camelia> rakudo-moar 7be075eb5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Can't use unknown trait 'is ' in a variable declaration.␤at <tmp>:1␤------> 3role A[::T = Mu] { }; my @a is A[Int]7⏏5<EOL>␤    expecting any of:␤        TypeObject␤        default␤    …»

[14:27] <lizmat> aawww...  I guess that *should* work, shouldn't it?  moritz jnthn timotimo

[14:33] *** dogbert17 joined
[14:34] *** p6bannerbot sets mode: +v dogbert17

[14:44] <moritz> m: role A[::T = Mu] does Positional[t] { }; my @a is A[Int]

[14:44] <camelia> rakudo-moar 7be075eb5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    t used at line 1␤␤»

[14:45] <moritz> m: role A[::T = Mu] does Positional[T] { }; my @a is A[Int]

[14:45] <camelia> rakudo-moar 7be075eb5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Can't use unknown trait 'is ' in a variable declaration.␤at <tmp>:1␤------> 3 does Positional[T] { }; my @a is A[Int]7⏏5<EOL>␤    expecting any of:␤        TypeObject␤        default␤ …»

[14:45] <moritz> m: role A[::T = Mu] does Positional[T] { }; my @a is A

[14:45] <camelia> rakudo-moar 7be075eb5: ( no output )

[14:45] <moritz> lizmat: yes, looks like it should work (unless jnthn has a good reason why it can't work)

[14:45] *** pmurias left
[14:45] <timotimo> may have to manually pun it?

[14:46] <timotimo> m: role A[::T = Mu] does Positional[T] { }; my @a is (A[Int])

[14:46] <camelia> rakudo-moar 7be075eb5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Invalid name␤at <tmp>:1␤------> 3T = Mu] does Positional[T] { }; my @a is7⏏5 (A[Int])␤»

[14:46] <timotimo> does look buggy

[14:46] <dogbert17> hello #perl6-dev

[14:47] *** pmurias_ joined
[14:47] *** p6bannerbot sets mode: +v pmurias_

[14:48] <dogbert17> I just noticed something odd which I'm at a loss to explain

[14:50] <dogbert17> compare these two runs of a spectest file

[14:51] <dogbert17> MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 /usr/bin/time ./perl6  t/spec/S07-slip/slip.t  # ... 156504 maxresident

[14:52] <dogbert17> MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 /usr/bin/time make  t/spec/S07-slip/slip.t  # ... 2985364 maxresident, this crashes on my 32 bit Linux with oom

[14:52] <timotimo> could be the difference between tty and no tty?

[14:52] <dogbert17> quite a bit more memory used the second time

[14:53] <timotimo> how many processes are involved when running make? make will, to my knowledge, use "fudgeandrun"

[14:53] <timotimo> i don't know if that's also a perl6 program?

[14:54] <dogbert17> looks like p5 to me

[14:55] <dogbert17> using t/fudgeandrun behaves the same as make, i.e. crash

[14:55] <timotimo> does the fudger make many changes to the file?

[14:56] <dogbert17> there's no '.rakudo.moar' file in the t/spec/S07-slip dir

[14:56] <MasterDuke> dogbert17: only with those env variables set?

[14:56] <dogbert17> I think MVM_SPESH_BLOCKING can be dropped

[14:57] <dogbert17> but yes, like nwc10 I like to run spectest with these two vars from time to time

[14:58] <dogbert17> on my 64 bit rig the test doesn't crash, instead it hangs a brings my vm down to a crawl

[14:58] <dogbert17> *and

[14:58] <dogbert17> would be nice if someone could replicate this :)

[15:00] <MasterDuke> speaking of weird things, here's some odd valgrind output https://gist.github.com/MasterDuke17/d60abfa2dd0cd3d1686243db09b9f088

[15:01] <dogbert17> that's strange indeed

[15:01] <MasterDuke> doesn't happen every time

[15:03] <MasterDuke> 260080maxresident with ./perl6-m and 4079500maxresident with make

[15:03] <MasterDuke> dogbert17: ^^^ running your example

[15:04] <lucasb> does "make t/spec/S07-slip/slip.t" shows the actual command it's running?

[15:06] <dogbert17> according to ps it's: /home/dogbert/repos/rakudo/nqp/MoarVM/../../install/bin/moar --execname=./perl6-m --libpath=. --libpath=blib --libpath=/home/dogbert/repos/rakudo/install/share/nqp/lib --libpath=/home/dogbert/repos/rakudo/install/share/nqp/lib /home/dogbert/repos/rakudo/perl6.moarvm --nqp-lib=blib t/spec/S07-slip/slip.t

[15:08] <AlexDaniel> oh wow please file these as tickets :)

[15:09] <dogbert17> AlexDaniel: can you repro it?

[15:10] <dogbert17> MasterDuke: thx

[15:10] <dogbert17> AlexDaniel: I'll report it

[15:11] <AlexDaniel> I haven't tried…

[15:11] <AlexDaniel> btw I'm also seeing this stuff: https://github.com/kensanata/oddmuse6/issues/11 https://github.com/kensanata/oddmuse6/issues/12

[15:11] <AlexDaniel> and it looks like something changed in rakudo… although I'm not sure

[15:11] <AlexDaniel> maybe some cro specialists will be able to tell what's going on right away? :)

[15:11] <lizmat> m: role A[::T = Mu] { }; my constant S = A[Int]; my @a is S    # I think it's purely a codegen issue

[15:11] <camelia> rakudo-moar 7be075eb5: ( no output )

[15:12] <lizmat> moritz timotimo ^^

[15:12] <dogbert17> is this bisectable?

[15:13] <AlexDaniel> dogbert17: what exactly? :)

[15:14] <dogbert17> AlexDaniel: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 make  t/spec/S07-slip/slip.t

[15:14] <dogbert17> on my 32 bit vm it crashes with oom an my 64 bit it hangs

[15:15] <dogbert17> s/an/and on/

[15:15] <AlexDaniel> oh, the file is so small!

[15:16] <AlexDaniel> c: 2018.10,HEAD https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:16] <AlexDaniel> let's try without env vars first…

[15:16] <committable6> AlexDaniel, https://gist.github.com/76edac5a03747ed782cffb113ce85d82

[15:16] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 2018.10,HEAD https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:17] <committable6> AlexDaniel, https://gist.github.com/3341cde8aef175818cb8bb32aa66c85c

[15:18] <AlexDaniel> dogbert17: cool! Yes, it is

[15:18] <AlexDaniel> except that bisectable doesn't support env vars like this, so'll have to make it part of the gist

[15:19] <AlexDaniel> something like this maybe:

[15:19] <AlexDaniel> https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:19] <AlexDaniel> bisect: old=2018.10 https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:19] <bisectable6> AlexDaniel, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/d3f509671e650951733b10e70abce213

[15:20] <AlexDaniel> bisect: old=2018.10 https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:20] <bisectable6> AlexDaniel, Using file “main.p6” as a main file, other files are placed in “sandbox/”

[15:21] <dogbert17> ...

[15:21] <AlexDaniel> well, it's bisecting based on the timeout, that'll take forever of course

[15:22] <AlexDaniel> so I'm going to make some tea, I think :)

[15:22] <dogbert17> it will probably be the best way regardless :)

[15:22] <AlexDaniel> also it may hit the total time limit, we might need to bump it a bit

[15:24] *** bisectable6 left
[15:25] <AlexDaniel> hmmm

[15:25] <AlexDaniel> but even if it pinged out, we should see the result on https://gist.github.com/Whateverable/

[15:25] <AlexDaniel> I think…

[15:26] <AlexDaniel> let's see if it comes back with an answer, and if not, we can either tweak the bot or bisect locally with a script

[15:28] <AlexDaniel> also… why not decrease the timeout, I don't think it takes much time to run the thing on good revisions?

[15:28] <dogbert17> let me try

[15:29] *** shareable6 left
[15:29] *** greppable6 left
[15:29] *** benchable6 left
[15:29] *** undersightable6 left
[15:29] *** releasable6 left
[15:29] *** notable6 left
[15:29] *** squashable6 left
[15:29] *** undersightable6 joined
[15:29] <AlexDaniel> try what? :)

[15:30] <dogbert17> run the file, it takes ~10 secs on my system

[15:30] *** greppable6 joined
[15:30] *** ChanServ sets mode: +v greppable6

[15:30] *** p6bannerbot sets mode: +v undersightable6

[15:30] <dogbert17> so the timeout must be higher than that I guess

[15:30] *** squashable6 joined
[15:30] *** notable6 joined
[15:30] *** ChanServ sets mode: +v notable6

[15:31] *** p6bannerbot sets mode: +v greppable6

[15:31] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 2018.10,HEAD https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:31] <committable6> AlexDaniel, Using file “main.p6” as a main file, other files are placed in “sandbox/”

[15:31] <committable6> AlexDaniel, https://gist.github.com/19afb328cfdf7e267bcf2be1cc1c2872

[15:31] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 2018.10,HEAD https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:31] <committable6> AlexDaniel, Using file “main.p6” as a main file, other files are placed in “sandbox/”

[15:31] *** p6bannerbot sets mode: +v squashable6

[15:31] *** releasable6 joined
[15:31] *** ChanServ sets mode: +v releasable6

[15:31] *** bisectable6 joined
[15:31] *** p6bannerbot sets mode: +v notable6

[15:32] *** benchable6 joined
[15:32] *** p6bannerbot sets mode: +v releasable6

[15:32] *** p6bannerbot sets mode: +v bisectable6

[15:32] <dogbert17> AlexDaniel: I believe you can run this golf instead: https://gist.github.com/dogbert17/73729e82f53f605a492cac26d2a1cec5

[15:32] *** p6bannerbot sets mode: +v benchable6

[15:33] *** shareable6 joined
[15:33] *** ChanServ sets mode: +v shareable6

[15:33] *** p6bannerbot sets mode: +v shareable6

[15:34] * AlexDaniel kills committable…

[15:34] <committable6> AlexDaniel, https://gist.github.com/9a0fc6510246ff083f3dc5b070e3ee6d

[15:36] <AlexDaniel> what about something like

[15:36] <AlexDaniel> start { sleep 12; $p.kill: SIGKILL; exit 42 }

[15:36] <AlexDaniel> dunno maybe it's a stupid idea and we should be running a script locally instead :)

[15:36] <AlexDaniel> c: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 2018.10,HEAD https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:36] <committable6> AlexDaniel, Using file “main.p6” as a main file, other files are placed in “sandbox/”

[15:40] <committable6> AlexDaniel, https://gist.github.com/b4567caf9934a776e9746da4f9c0684c

[15:40] <AlexDaniel> ok last try…

[15:40] <AlexDaniel> c: 2018.10,HEAD https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:40] <committable6> AlexDaniel, Using file “main.p6” as a main file, other files are placed in “sandbox/”

[15:41] <committable6> AlexDaniel, https://gist.github.com/97847fe8549f75bc258adad15e8a2ba7

[15:41] <AlexDaniel> ⚠ awesome!!

[15:41] <AlexDaniel> bisect: old=2018.10 https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:41] <bisectable6> AlexDaniel, Using file “main.p6” as a main file, other files are placed in “sandbox/”

[15:42] <patrickb> o/

[15:42] <yoleaux> 08:57Z <nine> patrickb: "it's a price we have to pay" is not really the attitude we want to have. We're the "torture the implementors for the sake of the users" people ;) In most cases there is a way to have both some feature and the performance benefit. Even though it may take years to get there.

[15:42] <bisectable6> AlexDaniel, Bisecting by exit code (old=2018.10 new=7be075e). Old exit code: 0

[15:42] <patrickb> "===SORRY!===" is always a compiler error, right?

[15:43] <AlexDaniel> patrickb: not always, but it should be…

[15:43] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/60dad3b8804f1283f028c24b159d766f

[15:43] <bisectable6> AlexDaniel, (2018-09-27) https://github.com/rakudo/rakudo/commit/3a68cc9618bf8dd57a633bbd782990e5b5810a69

[15:44] <AlexDaniel> dogbert17: there you go…

[15:44] *** pmurias_ left
[15:44] *** pmurias_ joined
[15:44] *** p6bannerbot sets mode: +v pmurias_

[15:45] <dogbert17> hmm, it's enormous

[15:46] <AlexDaniel> also doesn't mean much

[15:47] <dogbert17> I'll add it to the, soon to be written, ticket

[15:48] <AlexDaniel> dogbert17: it's just a merge, so it's either a combination of changes from both branches, or a change introduced in the merge itself…

[15:48] <dogbert17> gah

[15:49] <AlexDaniel> ahhh wwwait…

[15:49] <AlexDaniel> c: 3a68cc9618^,3a68cc9618 https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:49] <committable6> AlexDaniel, Using file “main.p6” as a main file, other files are placed in “sandbox/”

[15:49] <committable6> AlexDaniel, https://gist.github.com/1756acb9d1f28c07f7c0f218273df950

[15:50] <AlexDaniel> always double check :)

[15:51] <AlexDaniel> bisect: old=2018.10 https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:51] <bisectable6> AlexDaniel, Using file “main.p6” as a main file, other files are placed in “sandbox/”

[15:51] <bisectable6> AlexDaniel, Bisecting by exit code (old=2018.10 new=7be075e). Old exit code: 0

[15:52] <dogbert17> what did you figure out?

[15:54] <bisectable6> AlexDaniel, (2018-09-28) https://github.com/rakudo/rakudo/commit/339ea8507698a0fd57ffc5bbd9476e2d4b608f7a

[15:54] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/ae7225f7fa2e6a4bb77251b7c3efe35b

[15:54] <AlexDaniel> dogbert17: actually it's still wrong, we have to skip…

[15:55] <AlexDaniel> bisect: old=2018.11 https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:55] <bisectable6> AlexDaniel, Using file “main.p6” as a main file, other files are placed in “sandbox/”

[15:55] <AlexDaniel> dogbert17: basically, it exits with 42 if it times out, and 0 if it's good

[15:55] <bisectable6> AlexDaniel, Bisecting by exit code (old=2018.11 new=7be075e). Old exit code: 0

[15:56] <AlexDaniel> dogbert17: but some revisions are just broken in other ways

[15:56] <AlexDaniel> so you have to Skip them

[15:56] <dogbert17> aha

[15:57] * AlexDaniel wrote a blog post about it and then fell into the same trap. Idiot.

[15:57] <AlexDaniel> https://perl6advent.wordpress.com/2018/12/23/day-23-blin-its-christmas-soon/

[15:57] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/b9b59c48f16cf49f6a59148e874da942

[15:57] <bisectable6> AlexDaniel, There are 2 candidates for the first “new” revision. See the log for more details

[15:59] <AlexDaniel> last try…

[15:59] <AlexDaniel> bisect: old=2018.11 https://gist.github.com/AlexDaniel/f8bde92d90e6853bd1925bdafddd2daa

[15:59] <bisectable6> AlexDaniel, Using file “main.p6” as a main file, other files are placed in “sandbox/”

[15:59] <AlexDaniel> maybe that result is right…

[15:59] <bisectable6> AlexDaniel, Bisecting by exit signal (old=2018.11 new=7be075e). Old exit signal: 0 (None)

[16:00] <AlexDaniel> hah, by exit signal… ok that should work too…

[16:02] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/54a98adddffbc225b1980385da0c13ed

[16:02] <bisectable6> AlexDaniel, There are 2 candidates for the first “new” revision. See the log for more details

[16:06] <dogbert17> trying to revert 339ea8507698

[16:08] <AlexDaniel> dogbert17: I don't think it's going to help, someone will have to debug the thing and figure out what's actually wrong with it :)

[16:08] <dogbert17> you are probably right

[16:09] <AlexDaniel> but look at https://gist.github.com/Whateverable/9e5c198de40e5b87df3eb2193e9451e4

[16:09] <dogbert17> ah

[16:09] <AlexDaniel> so it's still https://github.com/rakudo/rakudo/commit/3a68cc9618bf8dd57a633bbd782990e5b5810a69

[16:10] <AlexDaniel> assuming that 339ea8507698 has no effect and just fixes a thing

[16:10] <dogbert17> ok, I'll add that then :)

[16:21] <Geth> ¦ rakudo: 0d9e9f34ce | (Elizabeth Mattijsen)++ | 2 files

[16:21] <Geth> ¦ rakudo: Make QuantHash/Setty roles parameterizable

[16:21] <Geth> ¦ rakudo: 

[16:21] <Geth> ¦ rakudo: As a first step to making all QuantHashes parameterizable roles.

[16:21] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0d9e9f34ce

[16:33] <dogbert17> AlexDaniel: R#2606

[16:33] <synopsebot> R#2606 [open]: https://github.com/rakudo/rakudo/issues/2606 High memory consumption and crashes when running t/spec/S07-slip/slip.t

[18:02] *** lucasb left
[19:11] * lizmat hopes the answer to https://stackoverflow.com/questions/54172262/how-does-one-set-the-default-parameterization-of-a-class will be trivial

[19:35] *** MasterDuke left
[19:41] <Geth> ¦ rakudo: bf0dbbe6d2 | (Elizabeth Mattijsen)++ | src/Perl6/Metamodel/AttributeContainer.nqp

[19:41] <Geth> ¦ rakudo: Make sure we decont before adding the attribute

[19:41] <Geth> ¦ rakudo: 

[19:41] <Geth> ¦ rakudo: Fixes R#2607

[19:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/bf0dbbe6d2

[19:41] <synopsebot> R#2607 [open]: https://github.com/rakudo/rakudo/issues/2607 Smartmatch and type checks fail when using MOP-created class as attribute

[19:42] *** brrt joined
[19:43] *** p6bannerbot sets mode: +v brrt

[19:50] *** pmurias_ left
[20:08] <tyil> timotimo: I have made a first draft that looks to be a basic working model, if you're interested in what I cooked up in the end: https://git.tyil.nl/perl6/app-cpan-uploadnotifierbot

[20:09] <tyil> I'm looking for a better name for the module that takes care of getting the CPAN info (currently App::CPAN::Feed)

[20:52] <AlexDaniel> tyil, timotimo: hmmm

[20:52] <AlexDaniel> bisectable6: uptime

[20:52] <bisectable6> AlexDaniel, 5 hours, 22 minutes, and 43 seconds, 231.050781MiB maxrss. This is Rakudo version 2018.06-454-gfd6f512be built on MoarVM version 2018.06-428-g727767006 implementing Perl 6.c.

[20:52] <AlexDaniel> (just 5 hours because it was restarted manually)

[20:52] <AlexDaniel> but the important bit is

[20:52] <AlexDaniel> This is Rakudo version 2018.06

[20:53] <AlexDaniel> so if IRC::Client is misbehaving badly with rakudo HEAD or rakudo 2018.12, it can be a regression

[20:53] <Geth> ¦ rakudo: 081b15ee9e | (Elizabeth Mattijsen)++ | src/core/Signature.pm6

[20:53] <Geth> ¦ rakudo: Allow "returns" to not be specified

[20:53] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/081b15ee9e

[20:54] <AlexDaniel> note that there's this bug: https://github.com/zoffixznet/perl6-IRC-Client/issues/27

[20:55] <AlexDaniel> but it does not seem to affect whateverables much

[20:56] <AlexDaniel> also, sources for buggable are here: https://github.com/zoffixznet/perl6-buggable

[20:56] <AlexDaniel> and I can transfer that repo to you if you want to maintain it

[21:02] <Geth> ¦ rakudo: 4bb5c33c72 | (Elizabeth Mattijsen)++ | 8 files

[21:02] <Geth> ¦ rakudo: Make Set/SetHash parameterizable

[21:02] <Geth> ¦ rakudo: 

[21:02] <Geth> ¦ rakudo: - if class is parameterized, then a custom "keyof" method is mixed in

[21:02] <Geth> ¦ rakudo: - and the name is changed

[21:02] <Geth> ¦ rakudo: - also fixes .keyof method for default from Any -> Mu

[21:02] <Geth> ¦ rakudo: - reverts 0d9e9f34ce481e2822

[21:02] <Geth> ¦ rakudo: - fixes RT#133762

[21:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4bb5c33c72

[21:02] <synopsebot> RT#133762 [new]: https://rt.perl.org/Ticket/Display.html?id=133762 Quanthashes should be parameterizable

[21:04] <gfldex> in the past my blog posts got me ~83 / post. My last post got 173 so far and the boost from the weekly didn't hit yet. So if my blog is any indication, Perl 6 is twice as popular as last year. :)

[21:05] <gfldex> *views

[21:16] *** patrickb left
[21:30] *** brrt left
[21:32] <Geth> ¦ rakudo: e87b7afb0d | (Elizabeth Mattijsen)++ | 3 files

[21:32] <Geth> ¦ rakudo: Abstract "keyof" parameterization into R:I:PARAMETERIZE-KEYOF

[21:32] <Geth> ¦ rakudo: 

[21:32] <Geth> ¦ rakudo: - DRY

[21:32] <Geth> ¦ rakudo: - unfortunately, the ^parameterize method must exist in every class

[21:32] <Geth> ¦ rakudo:   as it mangles its metaclass, and that would not do the right thing

[21:32] <Geth> ¦ rakudo:   if it were in a role

[21:32] <Geth> ¦ rakudo: - can also be used for future parameterization of other QuantHashes

[21:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/e87b7afb0d

[21:36] *** Kaiepi left
[21:38] *** Kaiepi joined
[21:38] *** p6bannerbot sets mode: +v Kaiepi

[21:42] <tyil> AlexDaniel: I think I'm running .08

[23:00] <releasable6> Next release in ≈5 days and ≈19 hours. 5 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:14] *** MasterDuke joined
[23:14] *** p6bannerbot sets mode: +v MasterDuke

[23:14] *** MasterDuke left
[23:14] *** MasterDuke joined
[23:14] *** herbert.freenode.net sets mode: +v MasterDuke

[23:14] *** p6bannerbot sets mode: +v MasterDuke

[23:40] *** dct joined
[23:40] *** p6bannerbot sets mode: +v dct

[23:59] *** dct left
