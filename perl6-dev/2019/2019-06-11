[00:01] <ugexe> so it probably works with spaces because of https://github.com/jib/ipc-cmd/blob/ecf96f1f73ecc340bb2ff211b70a435ab52e003b/lib/IPC/Cmd.pm#L1780

[00:02] <ugexe> then again i dont see it doing anythig with spaces other than splitting on them

[00:07] <vrurg> Scanned it quickly and it looks like on Win* it's using _ipc_run where in the middle it does some manipulations if $cmd is an arrayref.

[00:09] <timotimo> OK, on windows you'd expect a strawberry perl to be installed

[00:09] <timotimo> so surely we can have OS-dependent library inclusion :)

[00:11] <timotimo> well, i'm signing off for bed

[00:12] <timotimo> i'd love for that little stumbling block to be removed; every little thing can stop someone in their tracks :)

[00:14] <vrurg> ugexe: Tested on Win, works as expected for a full path with spaces.

[00:15] <vrurg> But timotimo is right, the less we require for building, the better. Wish I know some "smart" distros don't consider core modules a requirement.

[00:15] <ugexe> right, i didnt doubt that. what i question is if qx/system/`` will work with spaces given how IPC::Cmd handles things

[00:20] <timotimo> Cannot locate symbol 'sk_num' in native library 'libssl.so' - oh blosh blarnit

[00:23] <timotimo> found the compat package fedora offers

[00:24] <vrurg> timotimo: any of IPC modules coming with the perl package on fedora? Or it comes totally blank?

[00:25] <timotimo> IPC/Open2.pm and IPC/Open3.pm are in /usr/share/perl5

[00:25] <timotimo> not sure if that's from a blank "perl" installation

[00:25] *** pamplemousse joined
[00:28] <timotimo> AFKBYE

[00:37] <vrurg> CentOS installs IPC::Cmd as a perl-core dependency.

[00:53] <ugexe> maybe just qx + my $qx-cmd = join ' ', map { /\s/ ? qq{"$_"} : $_ } @cmd;

[00:56] *** travis-ci joined
[00:56] <travis-ci> Rakudo build failed. Nick Logan 'Merge pull request #2959 from Kaiepi/mem

[00:56] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/543962850 https://github.com/rakudo/rakudo/compare/8a6a0aeaa724...ab738b4ee110

[00:56] *** travis-ci left
[01:06] <vrurg> ugexe: perhaps. Need to think about it for a while.

[01:10] *** Kaiepi joined
[01:31] *** pamplemousse left
[01:35] *** pamplemousse joined
[01:40] *** pamplemousse left
[05:22] *** robertle left
[05:57] *** brrt joined
[06:30] <lizmat> Files=1262, Tests=108018, 204 wallclock secs (26.59 usr  7.88 sys + 2846.99 cusr 285.08 csys = 3166.54 CPU)

[06:45] *** patrickb joined
[07:39] <Geth> ¦ rakudo: patzim self-assigned [windows] Running`perl6` inside rakudo directory can't find CORE modules https://github.com/rakudo/rakudo/issues/2969

[08:20] *** eater left
[08:21] *** eater joined
[08:47] *** brrt left
[08:49] *** brrt joined
[09:10] *** brrt left
[09:25] <lizmat> so what are the options for a ecosystem module such as JSON::Fast to have code dependent on the backend it is running on

[09:26] <lizmat> when another backend's code will not compile on the current backend

[09:26] *** brrt joined
[09:26] <lizmat> case in point: my recent str-escape fixes that only run on MoarVM

[09:26] <lizmat> in the core, we can use #?if jvm, but what should one do for a module in the ecosystem ?

[09:27] <lizmat> a conditional EVAL at compile time seems logical, but are there better alternatives?

[09:34] *** brrt left
[09:50] <AlexDaniel> but seriously, where's camelia

[09:51] <lizmat> AlexDaniel: I have no idea...  maybe rba has determined where it used to run already

[09:52] <Guest12727> m: say "where is Camelia"

[09:52] <evalable6> Guest12727, rakudo-moar 8a37b9311: OUTPUT: «where is Camelia␤»

[10:32] <AlexDaniel> Guest12727: yes, but that's not camelia!

[10:56] *** TimToady left
[10:57] *** TimToady joined
[11:19] *** AlexDaniel left
[11:20] *** AlexDaniel joined
[11:25] <AlexDaniel> “What was suggested, is essentially creating a product collectively”

[11:25] <AlexDaniel> oh yeah, how bad to create something collectively

[11:28] *** AlexDaniel left
[12:51] *** brrt joined
[12:59] *** ZzZombo joined
[13:05] *** ZzZombo left
[13:06] *** ZzZombo joined
[13:08] *** brrt` joined
[13:10] *** brrt left
[13:42] *** skids joined
[13:46] *** pmurias joined
[14:23] *** pmurias left
[14:25] *** pamplemousse joined
[14:32] *** b2gills left
[14:37] *** b2gills joined
[14:45] *** b2gills left
[14:50] *** pamplemousse left
[15:00] *** b2gills joined
[15:04] *** ZzZombo left
[15:05] *** ZzZombo joined
[15:15] *** pamplemousse joined
[15:39] *** patrickb left
[15:59] *** pamplemousse left
[17:34] *** robertle joined
[17:46] *** brrt` left
[18:27] <vrurg> ugexe: I'm for your help again, if you don't mind. Can you have a look at R#2717? I hesitate to merge it because there is a slight change in handling paramterized roles. But the PR fixes https://github.com/salortiz/NativeHelpers-Blob/issues/9 

[18:27] <synopsebot> R#2717 [open]: https://github.com/rakudo/rakudo/pull/2717 Fix for #2714

[19:31] *** AlexDaniel joined
[19:33] *** robertle left
[19:37] *** robertle joined
[19:50] *** pamplemousse joined
[20:22] *** pamplemousse left
[20:28] *** |Tux| left
[21:04] *** skids left
[21:20] *** |Tux| joined
