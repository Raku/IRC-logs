[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:20] <vrurg> Why $*PERL is being initialized in CORE? It more naturally belongs to a comp_unit...

[00:39] <Geth> ¦ rakudo: vrurg++ created pull request #3117: Modules with 'no precompilation' can be use'd inside EVALs again

[00:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3117

[00:45] <Geth> ¦ roast: vrurg++ created pull request #565: Tests for Rakudo issue 3116

[00:45] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/565

[01:57] <Geth> ¦ rakudo: 842318cff6 | (Vadim Belman)++ | 2 files

[01:57] <Geth> ¦ rakudo: Modules with 'no precompilation' can be use'd inside EVALs again

[01:57] <Geth> ¦ rakudo: 

[01:57] <Geth> ¦ rakudo: Setting wasn't loading for modules inside EVAL causing compilation to

[01:57] <Geth> ¦ rakudo: fail as no CORE symbols were available.

[01:57] <Geth> ¦ rakudo: 

[01:57] <Geth> ¦ rakudo: rakudo/rakudo#3116

[01:57] <synopsebot> RAKUDO#3116 [open]: https://github.com/rakudo/rakudo/issues/3116 [BLOCKER][WIP][regression] [WIP] 'no precompilation' is broken inside EVAL

[01:57] <Geth> ¦ rakudo: rakudo/rakudo#3113

[01:57] <synopsebot> RAKUDO#3113 [open]: https://github.com/rakudo/rakudo/issues/3113 [BLOCKER] [WIP] Blin 2019-08-08

[01:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/842318cff6

[01:57] <Geth> ¦ rakudo: a7302f0a42 | (Vadim Belman)++ (committed using GitHub Web editor) | 2 files

[01:57] <Geth> ¦ rakudo: Merge pull request #3117 from vrurg/rakudo_issue_3116

[01:57] <Geth> ¦ rakudo: 

[01:57] <Geth> ¦ rakudo: Modules with 'no precompilation' can be use'd inside EVALs again

[01:57] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a7302f0a42

[01:57] <Geth> ¦ roast: 836eb38d4d | (Vadim Belman)++ | 2 files

[01:57] <Geth> ¦ roast: Add test for 'use' inside EVAL

[01:57] <Geth> ¦ roast: 

[01:57] <Geth> ¦ roast: As EVAL is a pretty special case of compilation, additional testing is

[01:57] <Geth> ¦ roast: needed.

[01:57] <Geth> ¦ roast: 

[01:58] <Geth> ¦ roast: rakudo/rakudo#3116

[01:58] <Geth> ¦ roast: rakudo/rakudo#3114

[01:58] <synopsebot> RAKUDO#3114 [open]: https://github.com/rakudo/rakudo/issues/3114 Flapping segfault in this program

[01:58] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/836eb38d4d

[01:58] <Geth> ¦ roast: 3d6e5d0396 | (Vadim Belman)++ | 4 files

[01:58] <Geth> ¦ roast: Test for cross-version imports.

[01:58] <Geth> ¦ roast: 

[01:58] <Geth> ¦ roast: Check for all version and use/require combinations. Modules must report

[01:58] <Geth> ¦ roast: back their respective language version/revision independent of the

[01:58] <Geth> ¦ roast: default or of the importing code ones.

[01:58] <Geth> ¦ roast: 

[01:58] <Geth> ¦ roast: rakudo/rakudo#3116

[01:58] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3d6e5d0396

[01:58] <Geth> ¦ roast: 381974e9fa | (Vadim Belman)++ (committed using GitHub Web editor) | 6 files

[01:58] <Geth> ¦ roast: Merge pull request #565 from vrurg/rakudo_issue_3116

[01:58] <Geth> ¦ roast: 

[01:58] <Geth> ¦ roast: Tests for Rakudo issue 3116

[01:58] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/381974e9fa

[02:20] *** epony joined
[05:39] *** lizmat_ left
[06:00] *** reportable6 left
[06:04] *** reportable6 joined
[06:04] *** ChanServ sets mode: +v reportable6

[06:40] *** [TuxCM] joined
[06:46] *** lizmat joined
[06:47] *** [TuxCM] left
[06:52] *** [TuxCM] joined
[06:53] *** anagura30 joined
[06:54] *** anagura30 left
[07:02] *** lizmat left
[07:06] *** [TuxCM] left
[07:07] *** anatofuz joined
[07:08] *** anatofuz is now known as anagura

[08:03] *** anagura left
[08:18] *** [TuxCM] joined
[08:24] *** [TuxCM] left
[08:47] *** epony left
[08:48] *** anagura joined
[08:53] *** Ven`` joined
[08:57] *** Ven`` left
[09:08] *** Ven`` joined
[09:16] *** anagura left
[09:17] *** epony joined
[09:28] *** Ven`` left
[09:28] *** [TuxCM] joined
[09:29] *** lizmat joined
[09:31] *** Ven`` joined
[09:44] *** lizmat left
[09:46] *** lizmat joined
[09:49] <Geth> ¦ problem-solving: AlexDaniel assigned to rba Issue pl6anet.org will be discontinued breaking "Recent Blog Posts" on perl6.org https://github.com/perl6/problem-solving/issues/86

[09:49] <Geth> ¦ problem-solving: AlexDaniel assigned to maettu Issue pl6anet.org will be discontinued breaking "Recent Blog Posts" on perl6.org https://github.com/perl6/problem-solving/issues/86

[09:57] *** lizmat left
[09:58] *** AlexDaniel joined
[10:00] *** [TuxCM] left
[10:19] *** Ven`` left
[10:23] *** Ven`` joined
[10:46] *** [TuxCM] joined
[10:53] *** lizmat joined
[11:16] *** [TuxCM] left
[11:18] *** [TuxCM] joined
[11:25] <AlexDaniel> bisectable6: sub foo($i) { my $i }

[11:25] <bisectable6> AlexDaniel, Bisecting by exit code (old=2015.12 new=a7302f0). Old exit code: 0

[11:25] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/d8fa85158e8d6d185cd8e57dfeffd65a

[11:25] <bisectable6> AlexDaniel, (2019-01-02) https://github.com/rakudo/rakudo/commit/42024539877fbebfdfbbc9b006106454cdaf5187

[11:26] *** [TuxCM] left
[11:26] *** anagura joined
[11:32] *** lizmat left
[11:37] *** lizmat joined
[11:49] *** anagura left
[11:55] *** lizmat left
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:00] *** ChanServ sets mode: +v reportable6

[12:01] *** Ven`` left
[12:06] *** Ven`` joined
[12:10] *** [TuxCM] joined
[12:13] *** lucasb joined
[12:17] *** anagura joined
[12:32] *** anagura left
[12:38] *** [TuxCM] left
[12:38] *** Ven`` left
[12:39] *** Ven`` joined
[12:40] *** Ven`` left
[12:47] *** [TuxCM] joined
[13:04] *** lizmat joined
[13:04] *** Ven`` joined
[13:04] *** Ven`` left
[13:12] *** Ven`` joined
[13:13] *** Ven`` left
[13:15] *** AlexDaniel left
[13:19] *** anagura joined
[13:28] *** AlexDaniel joined
[13:31] *** Ven`` joined
[13:38] *** Ven`` left
[13:45] *** Ven`` joined
[13:46] *** lizmat left
[13:52] *** anagura left
[13:55] *** Ven`` left
[13:57] *** Ven`` joined
[13:59] *** Ven`` left
[13:59] *** lizmat joined
[13:59] *** anagura joined
[14:02] *** lizmat left
[14:03] *** anagura left
[14:12] *** Ven`` joined
[14:22] *** Ven`` left
[14:30] *** AlexDaniel left
[14:34] *** Ven`` joined
[14:36] *** Ven`` left
[16:02] <vrurg> bisectable6: package P { our regex r { .+ } };say 'match' ~~ P::r;

[16:02] <bisectable6> vrurg, On both starting points (old=2015.12 new=a7302f0) the exit code is 1 and the output is identical as well

[16:02] <bisectable6> vrurg, Output on both points: «Too few positionals passed; expected 1 argument but got 0␤  in regex r at /tmp/trUwLk7qYT line 1␤  in block <unit> at /tmp/trUwLk7qYT line 1␤␤»

[16:02] <vrurg> So, it's not a regression.

[16:45] *** rba[m] left
[16:46] *** Guest48765 left
[16:46] *** epony left
[16:46] *** AlexDaniel` left
[16:55] *** AlexDaniel` joined
[17:31] *** cygx joined
[17:32] <cygx> o/

[17:32] <cygx> so, I'm taking a shot at freezing dependencies

[17:32] <cygx> as far as I can see, there's no way to get bytecode out of a CompUnit Rakudo object

[17:33] *** rba[m] joined
[17:33] *** Guest35100 joined
[17:33] <cygx> the best I can do is hope that it's a CompUnit::Repository::FileSystem and poke into that

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:01] *** ChanServ sets mode: +v reportable6

[18:08] <timotimo> i think freezing the bytecode isn't a good choice when freezing dependencies, since a change in rakudo version for example would invalidate the bytecode

[18:09] <timotimo> and freezing the entirety of rakudo could be a bit more difficult

[18:19] <cygx> timotimo: the eventual goal is to create single-file executables statically linking moarvm, embedding bytecode for the script, the setting and all dependencies

[18:19] <timotimo> oh wow

[18:21] <cygx> one can dream ;)

[18:22] <timotimo> spaghettispeed my friend

[18:31] <Geth> ¦ rakudo: vrurg self-assigned Conflicting use statement does not produce an error, but fails dynamic compilation. https://github.com/rakudo/rakudo/issues/3075

[19:02] *** epony joined
[19:25] <MasterDuke> cygx: have you seem pamplemousse's GSoC project?

[19:30] <cygx> MasterDuke: yes, I have

[19:30] <cygx> haven't take a closer look yet (as in, I've read some blog posts, but no code)

[19:35] *** ufobat joined
[19:50] <gfldex> m: constant r = regex r { 'useless' };

[19:50] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Potential difficulties:␤    Useless declaration of a has-scoped method in mainline (did you mean 'my regex r'?)␤    at <tmp>:1␤    ------> 3constant r = regex 7⏏5r { 'useless' };␤»

[19:50] <gfldex> this looks like a useless warning :->

[19:50] <gfldex> m: constant r = regex { 'useless' };

[19:50] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[20:29] *** |Tux| left
[20:38] *** |Tux| joined
[20:40] *** [TuxCM] left
[20:51] *** ufobat_ joined
[20:55] *** ufobat left
[20:55] <cygx> first step, figuring out what gets loaded: https://gist.github.com/cygx/fb5bd40b09f16a9b08178db4c638d704

[21:01] *** cygx left
[21:01] *** cygx joined
[21:53] *** cygx left
[22:34] *** lizmat joined
[22:59] *** lucasb left
[23:10] *** AlexDaniel joined
[23:41] <Geth> ¦ rakudo: 636ddcdb54 | (Aleks-Daniel Jakimenko-Aleksejev)++ | README.md

[23:41] <Geth> ¦ rakudo: Remove an obsolete line about the pumpking

[23:41] <Geth> ¦ rakudo: 

[23:41] <Geth> ¦ rakudo: It's still jnthn doing the things, but now everything is done via the

[23:41] <Geth> ¦ rakudo: problem-solving repo so the pumpking concept is no longer there.

[23:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/636ddcdb54

[23:41] <Geth> ¦ rakudo: 15e0601078 | (Aleks-Daniel Jakimenko-Aleksejev)++ | README.md

[23:41] <Geth> ¦ rakudo: Remove trailing whitespace

[23:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/15e0601078

