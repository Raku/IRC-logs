[06:09] *** Kaiepi left
[06:10] *** Kaiepi joined
[07:19] *** patrickb joined
[07:41] <patrickb> .tell Kaiepi Can you have a look at https://github.com/rakudo/rakudo/pull/2857 ? I can't add you as a reviewer, but it'd be good if you could have a look if the change is sane.

[07:41] <yoleaux> patrickb: I'll pass your message to Kaiepi.

[07:41] <lizmat> Files=1262, Tests=107912, 411 wallclock secs (30.41 usr  7.09 sys + 2930.99 cusr 254.50 csys = 3222.99 CPU)

[07:43] <Kaiepi> looks good to me patrickb 

[07:43] <yoleaux> 07:41Z <patrickb> Kaiepi: Can you have a look at https://github.com/rakudo/rakudo/pull/2857 ? I can't add you as a reviewer, but it'd be good if you could have a look if the change is sane.

[07:43] <Kaiepi> actually wait

[07:44] <Kaiepi> nqp::execname() doesn't return an empty string on openbsd, usually it returns one of the flags passed to moarvm

[08:18] <|Tux|> Rakudo version 2019.03.1-284-gb0dd44b00 - MoarVM version 2019.03-110-g081823ffc

[08:18] <|Tux|> csv-test-xs-20      0.424 -  0.426

[08:18] <|Tux|> csv-ip5xs           0.696 -  0.708

[08:18] <|Tux|> test-t --race       0.761 -  0.772

[08:18] <|Tux|> test-t              1.651 -  1.683

[08:18] <|Tux|> csv-ip5xs-20        5.904 -  5.948

[08:18] <|Tux|> test                6.774 -  6.871

[08:18] <|Tux|> test-t-20 --race    8.823 -  8.860

[08:18] <|Tux|> csv-parser         21.539 - 21.547

[08:18] <|Tux|> test-t-20          28.209 - 29.148

[10:10] <lizmat> is it correct to say that modules.perl6.org is not getting updated?  specifically  http://modules.perl6.org/search/?q=Git%3A%3ABlame

[10:11] <lizmat> does not seem to be in there

[10:11] <lizmat> which was uploaded 3 days ago ?

[10:18] * timotimo kicks off a rebuild

[10:19] <timotimo> there's not yet a cron job

[10:20] <timotimo> btw where do the apocalypses and exegeses live? the design repo only has the synopses

[10:21] <lizmat> https://github.com/ugexe/Perl6-ecosystems/blob/master/cpan.json appears to be empty, which is bad I think  :-)

[10:22] <lizmat> https://github.com/ugexe/Perl6-ecosystems/commit/2452bd774b0f028d8c05284b3e85ce0f5791f0e6#diff-b645ab89ab362fbd766199b2a4c6a114

[10:22] <lizmat> 1 addition, 42,933 deletions not shown because the diff is too large. Please use a local Git client to view these changes.

[10:23] <lizmat> timotimo: maybe not a good idea to run the job now  :-(

[10:24] <lizmat> .tell ugexe seems we have an empty ecosystem: https://github.com/ugexe/Perl6-ecosystems/commit/2452bd774b0f028d8c05284b3e85ce0f5791f0e6#diff-b645ab89ab362fbd766199b2a4c6a114

[10:24] <yoleaux> lizmat: I'll pass your message to ugexe.

[10:25] * lizmat continues to work on P6W

[10:29] <timotimo> oh, it is?

[10:29] <timotimo> [2019-05-06 10:29:14.35700] [31398] [info] Processing dist 613 of 1382

[10:30] <timotimo> looks like at least that is going fine

[10:59] <timotimo> modules should be updated

[11:17] <lizmat> hnmm   https://modules.perl6.org/dist/Git::Blame:cpan:JMERELO is still a 404 ?

[11:17] <lizmat> http://modules.perl6.org/search/?q=Git%3A%3ABlame still 0 results ?

[11:24] <timotimo> [2019-05-06 10:18:55.34486] [31398] [info] rsyncing CPAN dists from cpan-rsync.perl.org::CPAN/authors/id

[11:24] <timotimo> rsync: failed to connect to cpan-rsync.perl.org (207.171.7.135): Connection timed out (110)

[11:26] <timotimo> i'll try a mirror

[11:53] *** llfourn left
[12:13] *** Geth left
[12:13] *** Geth joined
[12:23] *** llfourn joined
[12:28] *** llfourn left
[12:38] <lizmat> reportable6: 2019-04-22T12:00:00Z 2019-04-29T00:00:00Z

[12:38] <reportable6> lizmat, OK, working on it! This may take up to 40 seconds

[12:39] <reportable6> lizmat, https://gist.github.com/53c5185d19b4e28979a4972f475e5132

[12:39] <AlexDaniel> lizmat: but why 12:00 ?

[12:40] <lizmat> copy/pasto

[12:40] <lizmat> reportable6: 2019-04-22T00:00:00Z 2019-04-29T00:00:00Z

[12:40] <reportable6> lizmat, OK, working on it! This may take up to 40 seconds

[12:41] <reportable6> lizmat, https://gist.github.com/7cca5cf7dbc1e3dc8b2bb77abce19bf3

[12:41] <lizmat> reportable6: 2019-04-29T00:00:00Z 2019-05-06T00:00:00Z

[12:41] <reportable6> lizmat, Couldn't find a snapshot for 2019-05-06T00:00:00Z (try ｢list｣ command to see what's available).

[12:42] <lizmat> :-(

[12:42] <lizmat> reportable6: 2019-04-29T00:00:00Z 2019-05-05T00:00:00Z

[12:42] <reportable6> lizmat, Couldn't find a snapshot for 2019-05-05T00:00:00Z (try ｢list｣ command to see what's available).

[12:42] <lizmat> hmmm

[12:42] <lizmat> AlexDaniel: ^^  ??

[12:42] <AlexDaniel> reportable6: list

[12:42] <reportable6> AlexDaniel, https://gist.github.com/4df6565ed8cae23e690d0cc85465f290

[12:42] <lizmat> reportable6: 2019-04-01T00:00:00Z 2019-05-01T00:00:00Z

[12:42] <reportable6> lizmat, OK, working on it! This may take up to 40 seconds

[12:43] <AlexDaniel> reportable6: :( yeah sometimes it hangs and therefore stops doing snapshots

[12:43] <lizmat> argh... probably another Perl NOC related outage :-(

[12:43] <reportable6> AlexDaniel, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Reportable

[12:43] <reportable6> lizmat, https://gist.github.com/24e46ea11249dd436e3d29c3567dbe97

[12:43] <AlexDaniel> could be, but sometimes it's reportable itself that acts weird

[12:43] *** reportable6 left
[12:44] <lizmat> reportable6: 2019-04-29T00:00:00Z 2019-05-04T00:00:00Z

[12:44] <AlexDaniel> I restarted it…

[12:45] <lizmat> yeah, got thta

[12:45] <lizmat> does that imply it will do the missing ones again, or is there some manual process involved ?

[12:46] <AlexDaniel> lizmat: it can't do the missing ones, it just fetches all the tickets regularly. If it missed some planned snapshots, then we don't know the state of things during these days

[12:47] <lizmat> reportable6: 2019-04-29T00:00:00Z 2019-05-04T00:00:00Z

[12:47] *** reportable6 joined
[12:47] <AlexDaniel> still starting up… :)

[12:47] <lizmat> reportable6: 2019-04-29T00:00:00Z 2019-05-04T00:00:00Z

[12:47] <reportable6> lizmat, OK, working on it! This may take up to 40 seconds

[12:47] <lizmat> AlexDaniel++

[12:47] <AlexDaniel> reportable6: snapshot

[12:48] <reportable6> AlexDaniel, OK! Working on it. This will take forever, so don't hold your breath.

[12:48] <reportable6> lizmat, https://gist.github.com/9d8ae56cae757cf03e8d6b7ceccdc492

[13:08] *** llfourn joined
[13:13] *** llfourn left
[13:14] <Guest55475> hmm, a few scheduler related spectest suddenly fails

[13:15] <timotimo> timing-related perhaps?

[13:15] <Guest55475> perhaps: not ok 22 - Passing :every as Inf never runs the given block

[13:16] <timotimo> oh, that's weird!

[13:16] <timotimo> i bet i broke things! :D

[13:16] <timotimo> where does that test live?

[13:18] <Guest55475> t/spec/S17-scheduler/every.t

[13:18] <Guest55475> similar failures in t/spec/S17-scheduler/at.t and in t/spec/S17-scheduler/in.t

[13:20] <timotimo> can you try turning spesh off

[13:23] <Guest55475> no improvement

[13:24] <timotimo> OK, that's good so it's not my fault :)

[13:24] <timotimo> can you run it without prove to see if there's any additional output?

[13:24] <timotimo> i can't reproduce the issue locally

[13:25] <Guest55475> Failed test 'Passing :every as Inf never runs the given block' at t/spec/S17-scheduler/every.t line 120, expected: '0' got: '2445'

[13:27] *** llfourn joined
[13:28] <timotimo> ha

[13:28] <timotimo> that file has only 107 lines on my system

[13:28] <Guest55475> it was updated today :)

[13:29] <timotimo> does the "passing :at as NaN throws" test also fail?

[13:31] <Guest55475> test #25 fails as well yes

[13:32] *** llfourn left
[13:33] <Guest55475> ha, I missed some relevant text. The following is also written: Minimum timer resolution is 1ms; using that instead of Infms

[13:33] <reportable6> AlexDaniel, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/4d40f68d4c6b7658bd4337c189d21b66

[13:38] <timotimo> the thread pool scheduler code at least explicitly checks isnanorinf and if that's true only warns

[13:40] <timotimo> hm, will :every(Inf) actually really never run the block? i'd imagine it'd run the block only once

[13:42] <timotimo> https://github.com/rakudo/rakudo/pull/2819 - this should have been merged before or along with the tests

[13:44] <Guest55475> indeed, timotimo++

[13:44] <timotimo> commented on it

[13:44] <Guest55475> cool

[13:50] <lizmat> oops...

[13:51] *** llfourn joined
[13:52] * lizmat reverted the merge

[13:55] * Guest55475 and spectest is suddenly more or less clean

[13:56] *** llfourn left
[13:56] <timotimo> is someone spectesting with ASAN?

[13:59] <Guest55475> from time to time yes, shall I give it a spin?

[14:00] *** lucasb joined
[14:01] * Guest55475 does so

[14:04] <timotimo> thanks. make sure my latest terrible moarvm commits are in there :)

[14:06] <Guest55475> the latest seems to be 'MAST Ops: remove redundant range checks'

[14:07] <timotimo> yeah

[14:11] *** |Tux| left
[14:18] *** |Tux| joined
[14:28] *** llfourn joined
[14:29] <Guest55475> timotimo: spectest was clean with asan enabled

[14:30] <timotimo> nice

[14:33] *** llfourn left
[14:55] *** llfourn joined
[14:55] *** patrickb left
[15:04] *** llfourn left
[15:24] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/05/06/2019-17-18-three-months-to-riga/

[15:36] *** llfourn joined
[15:36] *** ddddddd joined
[15:37] <ddddddd> "I'm feeling lucky" on modules.perl6.org gives a 404

[15:39] <lizmat> ddddddd: please file an issue  :-)

[15:41] *** llfourn left
[15:44] <ddddddd> The error page said file an issue or report it here

[15:44] <ddddddd> I guess I can file an issue too

[15:45] <Kaiepi> can someone on linux build moar with --optimize=0 --debug=3, run ./Configure.pl on rakudo, edit the makefile to use -O0 -g3 with cc/ld flags, run make install, look at the coredump generated, and tell me what line in src/vm/moar/runner/main.c the double free is happening in with https://github.com/Kaiepi/rakudo/tree/moar-runner ?

[15:49] *** llfourn joined
[15:54] *** llfourn left
[15:57] *** ddddddd left
[16:25] *** llfourn joined
[16:30] *** llfourn left
[16:37] <timotimo> i'll give it a try

[16:42] <timotimo> Kaiepi: with just make install, i get no coredumps or crashes

[16:43] <Kaiepi> run make spectest

[16:43] <Kaiepi> timotimo, 

[16:43] <Kaiepi> the double frees start happening then on travis

[16:44] <timotimo> how many test files does it usually take?

[16:53] <timotimo> it's kind of not crashing at all

[16:56] <Kaiepi> weird

[16:57] <timotimo> yeah

[17:01] <ugexe> m: sub foo(@arr where .elems = [1,2]) { say @arr }; foo([1,]); # bug?

[17:01] <yoleaux> 10:24Z <lizmat> ugexe: seems we have an empty ecosystem: https://github.com/ugexe/Perl6-ecosystems/commit/2452bd774b0f028d8c05284b3e85ce0f5791f0e6#diff-b645ab89ab362fbd766199b2a4c6a114

[17:01] <camelia> rakudo-moar b0dd44b00: OUTPUT: «[1]␤»

[17:02] <ugexe> er

[17:02] <ugexe> m: sub foo(@arr where .elems = [1,2]) { say @arr }; foo([]); # bug?

[17:02] <camelia> rakudo-moar b0dd44b00: OUTPUT: «[]␤»

[17:02] <timotimo> why would you .elems = [1, 2]?

[17:03] <timotimo> oh haha

[17:03] <ugexe> using @arr [$,*@] works, but still...

[17:03] <timotimo> m: sub foo(@arr where .elems) { @arr.perl.say }; foo([])

[17:03] <camelia> rakudo-moar b0dd44b00: OUTPUT: «[]␤»

[17:03] <timotimo> m: sub foo(@arr where *.elems) { @arr.perl.say }; foo([])

[17:03] <camelia> rakudo-moar b0dd44b00: OUTPUT: «Constraint type check failed in binding to parameter '@arr'; expected anonymous constraint to be met but got Array ($[])␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:03] <timotimo> that's how, hm?

[17:04] <timotimo> m: sub foo(@arr where *.elems = [1,2]) { @arr.perl.say }; foo([])

[17:04] <camelia> rakudo-moar b0dd44b00: OUTPUT: «Constraint type check failed in binding to parameter '@arr'; expected anonymous constraint to be met but got Array ($[])␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:04] <timotimo> m: sub foo(@arr where *.elems = [1,2]) { @arr.perl.say }; foo()

[17:04] <camelia> rakudo-moar b0dd44b00: OUTPUT: «[1, 2]␤»

[17:04] <ugexe> hmm. i just started operating under the assumption i didnt need to use * in signatures for most things :P

[17:05] *** robertle joined
[17:15] <ugexe> i reverted the cpan ecosystems back to their last state, and updated ecogen to not update an ecosystem if there is no meta data. This does not yet address adding mirrors; there is a PR but I don't think it will work as-is

[17:20] *** llfourn joined
[17:24] <timotimo> oh no!

[17:24] <timotimo> that was my PR

[17:25] *** llfourn left
[17:30] <ugexe> im not sure the mirrors will help or not at this point

[17:30] <ugexe> since it seems like maybe PAUSE itself was/is down? (so no new uploads)

[17:31] <ugexe> now we just need a metaecosystem ecosystem for aggregating the ecosystems and their mirrors

[17:32] <timotimo> no

[17:32] <timotimo> only the one rsync server was down

[17:32] <timotimo> the other one had the new package that wasn't available on the other one

[17:32] <timotimo> hm, actually

[17:33] <timotimo> hm, which mirror did i put in?

[17:33] <ugexe> http://blogs.perl.org/users/mohammad_s_anwar/2019/05/daily-cpan-upload-chain-broke-again.html

[17:33] <timotimo> the german rsync mirrors actually are a bit late

[17:33] <timotimo> netcologne is at 29 hours, rwth-aachen is 22 hours old

[17:34] <timotimo> hs-esslingen is a whooping 1.5 days old

[17:34] <ugexe> hmm, must just be a coincidence then

[17:34] <timotimo> but the cpan-rsync.perl.org one is 23 hours out of date and its data seems to be 23 hours old, too?

[17:34] <timotimo> i wonder how that works

[17:57] <vrurg> nine: would you mind if I copy your make code into nqp-configure repository?

[17:59] <vrurg> .tell nine would you mind if I copy your make code into nqp-configure repository?

[17:59] <yoleaux> vrurg: I'll pass your message to nine.

[18:09] <nine> vrurg: not at all

[18:09] <yoleaux> 17:59Z <vrurg> nine: would you mind if I copy your make code into nqp-configure repository?

[18:10] <vrurg> nine: thanks. NQP builds with make.nqp, but Rakudo doesn't. Looks like m-clean target is lost on Makefile object. 

[18:12] <nine> make.nqp is about a year old and I implemented exactly what was needed for a rakudo build. So requirements may have upped in the mean time

[18:15] <vrurg> nine: Not sure. It's a simple case of clean: m-clean // m-clean: 

[18:16] <vrurg> I'm investigating.

[18:33] *** vrurg left
[18:41] *** llfourn joined
[18:48] *** llfourn left
[19:00] *** lucasb left
[19:00] *** brrt joined
[19:02] *** vrurg joined
[19:16] *** gfldex left
[19:35] *** gfldex joined
[19:39] *** Geth_ left
[19:39] *** b2gills left
[19:40] *** b2gills joined
[19:41] *** llfourn joined
[19:47] *** llfourn left
[20:08] *** ufobat_ joined
[20:11] *** ufobat__ left
[20:28] *** brrt left
[20:38] *** lucasb joined
[20:55] *** llfourn joined
[21:01] *** llfourn left
[21:07] <Kaiepi> timotimo, i think i figured out what was going on with the double free in the moar runner on travis

[21:08] <Kaiepi> on linux dirname returns the same pointer passed to it so freeing dir_path_temp was causing a double free since dir_path was already freed

[21:29] *** llfourn joined
[21:34] *** llfourn left
[22:03] *** llfourn joined
[22:08] <timotimo> ooh

[22:09] *** llfourn left
[22:09] *** llfourn joined
[22:40] *** lucasb left
