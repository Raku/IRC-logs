[00:00] <AlexDaniel> every time I had to add a test I ended up putting it into some random place near similar tests, but it never felt right

[00:00] <AlexDaniel> in fact it always felt very wrong :)

[00:00] <AlexDaniel> I assume others are doing the same, so directory structure is one thing but every file is even messier on the inside

[00:06] <vrurg> AlexDaniel: yep, absolutely the same here. For the inside some kind guidelines on how a test should be writted is needed.

[00:07] <AlexDaniel> vrurg: well, for some time we had a guideline called Zoffix

[00:07] <AlexDaniel> vrurg: who'd hit me with a stick if my tests were not up to their standards :)

[00:07] <vrurg> (facepalm) I cloned BOOTSTRAP, but I did it with the proper respect to the installation! 

[00:08] <vrurg> AlexDaniel: well, I would introduce my own standards, but will it be for good?? :p

[00:09] <vrurg> Seriously, that's why the guidelines. Similar to the renaming PR, we would collectively work out a document which would define the standards.

[00:14] <AlexDaniel> yeah, that is meant to work like that

[00:14] <AlexDaniel> we'll see what happens to the renaming PR

[00:16] <AlexDaniel> problem-solving repo was designed to be a framework for working on such issues, but at this moment it is still in some sense experimental

[00:17] <AlexDaniel> I looked at how other languages approach this stuff and I was very disappointed

[00:20] <vrurg> AlexDaniel: Most other langs are rules either by the creators or by owning companies. It's hard to recall one which is really collectively controlled. Python though is going this way, but they're still at early stages of the transition.

[00:20] *** travis-ci joined
[00:20] <travis-ci> Rakudo build failed. Aleks-Daniel Jakimenko-Aleksejev 'Merge pull request #3135 from ZhongnianTao/master

[00:20] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/576575694 https://github.com/rakudo/rakudo/compare/190e84bb7603...636888c69455

[00:20] *** travis-ci left
[00:22] <AlexDaniel> vrurg: yeah, PEPs sorta work. But then this: https://mail.python.org/pipermail/python-committers/2018-July/005664.html

[00:24] *** pamplemousse joined
[00:24] <AlexDaniel> though problem-solving repo doesn't entirely solve that, as you still have to convince (“fight”) reviewers that the change should actually be implemented

[00:25] <vrurg> AlexDaniel: that's what I mean. As Guido stepped down they worked out some kind of commitee. And they're still working on this. Though I don't relly forllow much, just as long as Slashdot keeps me posted on this. :)

[00:26] <vrurg> Actually, convincing is ok or we think of different things. I mean, one must be able to protect his decisions.

[00:27] <vrurg> If I cannot so far prove that QuantHash must be iterable – well, that's my problem then. :) Though I'm not gonna give up, just posponed the matter for later.

[00:28] <AlexDaniel> sure, but if you think you're right and others disagree, then it's a bit more difficult

[00:30] <AlexDaniel> looking at the renaming discussion, it can be hard for people to stay focused on coming to the same conclusion collectively

[00:31] <AlexDaniel> but it isn't too bad, so there's hope, please everyone don't disappoint me :P

[00:32] <vrurg> AlexDaniel: That's why any discussion must end up with voting eventually. I think the rule must be: number of "yes" votes must depend on the importance of a problem. Renaming must be decided with 2/3 majority. Guidelines – with simple majority.

[00:34] <AlexDaniel> we'll see how 100% works in this case

[00:35] <vrurg> .tell patrickb I think cleaning of obsolete targets is broken. Unfortunately, don't have time to look into it. I'm unlikely to make R#3138 ready for merge today, but this is where I don't observe it removing outdated precompiles.

[00:35] <synopsebot> R#3138 [open]: https://github.com/rakudo/rakudo/pull/3138 [6.e][CORE.setting][WIP] Improve multi-revision support

[00:35] <tellable6> vrurg, I'll pass your message to patrickb

[00:41] <AlexDaniel> tellable6: patrickb

[00:41] <tellable6> AlexDaniel, I saw patrickb 2019-07-29T08:35:16Z in #perl6: <patrickb> I think the two discussions were unrelated.

[01:43] *** epony left
[01:49] *** Kaiepi joined
[01:59] *** pamplemousse left
[02:31] *** Xliff left
[02:34] *** epony joined
[03:04] *** Kaiepi left
[04:41] *** camelia left
[05:22] *** Kaiepi joined
[05:55] *** robertle left
[06:15] *** lizmat joined
[06:15] *** lizmat left
[07:54] *** patrickb joined
[07:55] *** robertle joined
[08:09] <[Tux]> Rakudo version 2019.07.1-199-g636888c69 - MoarVM version 2019.07.1-127-g1a8988c09

[08:09] <[Tux]> csv-test-xs-20      0.444 -  0.447

[08:09] <[Tux]> csv-ip5xs           0.720 -  0.737

[08:09] <[Tux]> test-t --race       0.929 -  0.941

[08:09] <[Tux]> test-t              1.751 -  1.833

[08:09] <[Tux]> csv-ip5xs-20        5.283 -  5.292

[08:09] <[Tux]> test                6.809 -  7.168

[08:09] <[Tux]> test-t-20 --race    9.796 - 10.071

[08:09] <[Tux]> csv-parser         23.779 - 23.825

[08:09] <[Tux]> test-t-20          30.275 - 30.669

[08:31] *** ufobat joined
[09:33] *** jjmerelo joined
[09:35] <jjmerelo> Hi, a warning of bumpy road ahead in the documentation

[09:35] <jjmerelo> We are starting to work on this milestone https://github.com/perl6/doc/milestone/2

[09:36] <jjmerelo> Except for the deprecation of disambiguation pages, you should notice nothing more annoying that lots of new issues in perl6/doc

[09:36] <jjmerelo> As well as new repos sprouting up in the perl6/ organization.

[09:37] <jjmerelo> Help and suggestions are, and will be, much appreciated.

[09:38] <jjmerelo> When the milestone is reached, we should be able to generate documentation much faster, using tools that are tested and documented, and that offer an API that can be tapped in a number of different ways.

[10:14] *** jjmerelo left
[11:27] <tbrowder> hi, #perl6-dev

[11:28] <tbrowder> m: 3 #` ;

[11:28] <evalable6> tbrowder, rakudo-moar 636888c69: OUTPUT: «WARNINGS for /tmp/IXC5JnlqCQ:␤Useless use of constant integer 3 in sink context (line 1)␤»

[11:28] <tbrowder> m: 3 * #` ;

[11:28] <evalable6> tbrowder, rakudo-moar 636888c69: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/de_k8mU7qI␤Missing…»

[11:28] <evalable6> tbrowder, Full output: https://gist.github.com/e440d15418ecf7d3c359bb57ceb7eb41

[11:29] <tbrowder> m: 3 * #`( embedded comment) 3

[11:29] <evalable6> tbrowder, rakudo-moar 636888c69: OUTPUT: «WARNINGS for /tmp/WwtDegSou_:␤Useless use of "*" in expression "3 * #`( embedded comment) 3" in sink context (line 1)␤»

[11:29] <tbrowder> m: my $val = 3 * #`( embedded comment) 3

[11:29] <evalable6> tbrowder, rakudo-moar 636888c69: OUTPUT: «»

[11:30] <tbrowder> m: my $val = 3 * #`( embedded comment ) 3

[11:30] <evalable6> tbrowder, rakudo-moar 636888c69: OUTPUT: «»

[11:30] <tbrowder> m: my $val = 3 * #`( embedded comment ) 3; say $val

[11:30] <evalable6> tbrowder, rakudo-moar 636888c69: OUTPUT: «9␤»

[11:30] <tbrowder> m: my $val = 3 * #` ( embedded comment ) 3; say $val

[11:30] <evalable6> tbrowder, rakudo-moar 636888c69: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/pubcum18WE␤Missing…»

[11:30] <evalable6> tbrowder, Full output: https://gist.github.com/e825b25b7c8403f21ad5510a9d31dead

[11:36] <tbrowder> .tell AlexDaniel ^^^ apparently a subtle problem in that currently p6 doesn't recognize an embedded comment if it's not really embedded. my pr should take care of that

[11:36] <tellable6> tbrowder, I'll pass your message to AlexDaniel

[11:41] <AlexDaniel> .

[11:54] <tbrowder> AlexDaniel: my hat's off to you for discovering a hitherto unknown pod6 bug!

[11:56] <AlexDaniel> tbrowder: it's not exactly a bug, is it?

[11:56] <AlexDaniel> tbrowder: it's just that it parses it as a regular comment

[11:59] <tbrowder> technicall you're correct, but we show it's use like that in the docs. and i think it's confusing to allow it as a co:

[11:59] <tbrowder> common comment

[11:59] <tbrowder> or treat it as a trap, or???

[12:01] <tbrowder> its use in the docs can be easily changed and the difference noted.

[12:02] *** robertle left
[12:04] *** robertle joined
[12:04] <tbrowder> m: #|

[12:04] <evalable6> tbrowder, rakudo-moar 636888c69: OUTPUT: «»

[12:05] <tbrowder> #| ( blsh

[12:05] <AlexDaniel> I don't know. It's a change to the language, and I think it can be discussed in the problem-solving repo

[12:05] <tbrowder> m: #| ( foo

[12:05] <evalable6> tbrowder, rakudo-moar 636888c69: OUTPUT: «»

[12:08] <tbrowder> no, i think current behavior is ok and seems to be consistent with the others. i'll try to fix the pr and concentrate on the msgs and fix the docs

[12:08] <tbrowder> thnx

[12:14] <tbrowder> thanks for helping me see that subtle distinction--it makes the current grammar treatment make more sense and may point to the path to fix the #=  lta msg

[12:17] <Geth> ¦ roast: dumarchie++ created pull request #570: Spectest for rakudo/rakudo/issues/3137

[12:17] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/570

[12:31] <AlexDaniel> I don't know, I think it can be argued both ways

[12:32] <AlexDaniel> if somebody wrote #` ( then it's fair to assume they wanted a multiline comment

[13:00] *** discord61 joined
[13:00] *** discord61 left
[13:00] *** discord61 joined
[13:01] *** discord61 left
[13:19] *** robertle left
[13:33] *** lucasb joined
[13:44] <tbrowder> but easier to live with the status quo i think at the moment...depends on my grokking the grammar properly

[13:46] *** committable6 left
[13:46] *** evalable6 left
[13:46] *** bisectable6 left
[13:48] *** evalable6 joined
[13:49] *** bisectable6 joined
[13:50] *** committable6 joined
[13:50] *** ChanServ sets mode: +v committable6

[14:20] *** robertle joined
[14:38] <tbrowder> .ask moritz would it be a waste of time to work with chunks of pod grammar in p6 before moving back to nqp?

[14:38] <tellable6> tbrowder, I'll pass your message to moritz

[14:43] <timotimo> shouldn't be a big waste

[14:44] <moritz> tbrowder: what's your goal?

[15:13] *** ufobat_ joined
[15:16] *** ufobat left
[15:17] <tbrowder> trying to tidy error handling of pod comments and declarator blocks

[15:22] <moritz> not sure; I'd do it in NQP right away, but YMMV

[15:23] <tbrowder> ok, thnx for advice

[15:30] *** robertle left
[16:04] *** patrickb left
[16:15] <[Coke]> active-warthog69

[16:15] <[Coke]> dammit. :)

[16:22] <Geth> ¦ rakudo: vrurg self-assigned Promise::Vow can change a kept/broken promise https://github.com/rakudo/rakudo/issues/3137

[16:31] *** Kaiepi left
[16:35] <tobs> what: say <hello>

[16:37] <timotimo> m: say <hello>

[16:37] <evalable6> timotimo, rakudo-moar 636888c69: OUTPUT: «hello␤»

[16:38] <tobs> timotimo: weird. In *one* of my local tests, it apparently responds to 'what:'

[16:40] <tobs> and shouldn't it, given https://github.com/perl6/whateverable/blob/master/xbin/Evalable.p6#L113 ?

[16:42] <AlexDaniel> tobs: it does so on #whateverable

[16:43] <AlexDaniel> tobs: https://github.com/perl6/whateverable/blob/c1e3457c6334cf0e983a58b718d0d1355343ce70/lib/Whateverable.pm6#L48-L49

[16:45] <AlexDaniel> tobs: $CONFIG<cave> in this case is #whateverable, I think

[16:46] <AlexDaniel> tobs: it's a command meant for rakudo devs, it triggers evalable, committable and bisectable at the same time

[16:47] <AlexDaniel> so “what: some piece of code” gives you the current output, the output on all releases and bisect result

[16:47] <tobs> fancy

[16:49] <AlexDaniel> it's useful to me, I haven't seen anybody else use it often

[16:49] <AlexDaniel> maybe because it's not allowed here anyway, because botspam

[16:52] <tobs> I'll put up a PR in a second. We can look at the what: problem in my new test there.

[17:13] *** robertle joined
[17:15] *** patrickb joined
[18:00] *** BeastieBot left
[18:01] *** BeastieBot joined
[18:28] *** Kaiepi joined
[18:29] *** chloekek joined
[18:34] *** chloekek left
[19:35] *** Ven`` joined
[19:37] *** Ven`` is now known as Ven_de_Thiel

[19:47] *** chloekek joined
[20:31] *** lizmat joined
[20:31] <lizmat> and yet another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/08/26/2019-34-a-quick-one-from-the-atlantic/

[20:32] *** lizmat left
[20:46] *** MasterDuke left
[21:00] *** lizmat joined
[21:18] *** Ven_de_Thiel left
[21:41] *** patrickb left
[21:48] *** lizmat left
[22:01] *** chloekek left
[23:17] *** Kaiepi left
[23:24] *** |Tux| left
[23:28] *** evalable6 left
[23:28] *** bisectable6 left
[23:28] *** committable6 left
[23:30] *** committable6 joined
[23:30] *** ChanServ sets mode: +v committable6

[23:31] *** tellable6 left
[23:31] *** notable6 left
[23:32] *** evalable6 joined
[23:33] *** bisectable6 joined
[23:33] *** ChanServ sets mode: +v bisectable6

[23:33] *** notable6 joined
[23:35] *** tellable6 joined
[23:44] <timotimo> i can what?

[23:44] <tellable6> 2019-08-26T23:44:01Z #perl6 <AlexDaniel> timotimo hello to perl6-dev

[23:45] <AlexDaniel> .

[23:45] <tellable6> 2019-08-26T23:44:55Z #perl6 <timotimo> AlexDaniel can you get this?

[23:45] <AlexDaniel> .tell timotimo sure, but can you receive this??

[23:45] <tellable6> AlexDaniel, I'll pass your message to timotimo

[23:52] *** releasable6 left
[23:53] *** releasable6 joined
[23:53] *** ChanServ sets mode: +v releasable6

