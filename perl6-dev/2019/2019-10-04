[00:13] *** anatofuz joined
[00:43] *** cognominal joined
[00:47] *** cognomin_ left
[01:26] *** ufobat_ left
[01:27] *** ufobat_ joined
[01:27] *** anatofuz left
[01:27] *** anatofuz joined
[01:27] *** llfourn_ left
[01:28] *** llfourn joined
[01:30] *** TimToady left
[01:31] *** TimToady joined
[01:55] <Geth_> ¦ problem-solving: vrurg assigned to jnthn Issue FQN method call needs support for parameterized roles. https://github.com/perl6/problem-solving/issues/110

[02:00] *** anatofuz left
[02:02] *** anatofuz joined
[02:09] *** anatofuz left
[02:14] *** softmoth left
[02:22] *** anatofuz joined
[02:27] *** anatofuz left
[02:46] *** anatofuz joined
[02:58] *** anatofuz left
[03:56] *** anatofuz joined
[04:21] *** anatofuz left
[05:03] *** anatofuz joined
[05:15] *** robertle left
[05:23] *** anatofuz left
[05:32] *** anatofuz joined
[05:33] *** anatofuz left
[05:48] *** anatofuz joined
[07:09] *** HarmtH joined
[07:23] *** anatofuz left
[07:32] *** anatofuz joined
[08:03] *** anatofuz left
[08:14] *** anatofuz joined
[08:34] *** anatofuz left
[08:40] *** anatofuz joined
[08:43] *** anatofuz_ joined
[08:44] *** anatofuz left
[08:52] *** anatofuz_ left
[08:54] *** ufobat__ joined
[08:54] *** anatofuz joined
[08:56] *** anatofuz_ joined
[08:57] *** anatofuz left
[08:57] *** ufobat_ left
[09:04] *** anatofuz joined
[09:04] *** anatofuz_ left
[09:23] *** anatofuz left
[09:27] *** anatofuz joined
[09:33] *** anatofuz_ joined
[09:37] *** anatofuz left
[09:56] *** anatofuz_ left
[09:57] *** anatofuz joined
[10:04] *** anatofuz left
[10:18] *** softmoth joined
[10:28] *** anatofuz joined
[10:37] *** anatofuz left
[10:38] *** Voldenet left
[10:41] *** Voldenet joined
[10:41] *** Voldenet left
[10:41] *** Voldenet joined
[11:01] *** anatofuz joined
[11:04] *** dogbert17 joined
[11:19] *** anatofuz left
[11:24] *** anatofuz joined
[11:29] *** anatofuz left
[12:31] *** lucasb joined
[12:41] *** softmoth left
[12:45] *** softmoth joined
[12:53] *** camelCaser left
[12:55] *** camelCaser joined
[12:59] *** camelCaser left
[13:17] *** ufobat__ left
[13:34] *** AlexDaniel left
[13:34] *** AlexDaniel joined
[13:34] *** AlexDaniel left
[13:34] *** AlexDaniel joined
[13:35] *** Kaiepi left
[13:43] *** camelCaser joined
[14:07] <vrurg> jnthn: would it be possible for you to have a look at https://github.com/perl6/problem-solving/issues/103#issuecomment-538209293?

[14:58] *** softmoth left
[14:58] *** cognomin_ joined
[15:01] *** cognominal left
[15:01] *** softmoth joined
[15:35] *** Kaiepi joined
[15:38] <Geth_> ¦ rakudo: dae981e81f | (Elizabeth Mattijsen)++ | src/core.c/Buf.pm6

[15:38] <Geth_> ¦ rakudo: Make the Buf.write-* methods return self

[15:38] <Geth_> ¦ rakudo: 

[15:38] <Geth_> ¦ rakudo: To allow for easier chaining *and* allow for returning a sensible value

[15:38] <Geth_> ¦ rakudo: for the Buf:U cases, to be in sync with the Buf:D cases.

[15:38] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/dae981e81f

[15:39] <Geth_> ¦ roast: 3612354094 | (Elizabeth Mattijsen)++ | S03-buf/write-int.t

[15:39] <Geth_> ¦ roast: Adapt tests for Buf.write-int* for changed return value

[15:39] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/3612354094

[15:40] <Geth_> ¦ roast: 3eea966a69 | (Elizabeth Mattijsen)++ | S03-buf/write-num.t

[15:40] <Geth_> ¦ roast:  Adapt tests for Buf.write-num* for changed return value

[15:40] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/3eea966a69

[16:32] <Geth_> ¦ roast: f1f56d5660 | (Elizabeth Mattijsen)++ | S03-buf/read-write-bits.t

[16:32] <Geth_> ¦ roast: Adapt tests for Buf.write-bits for changed return value

[16:32] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/f1f56d5660

[17:01] <lizmat> m: role A { multi method a(::?ROLE:U: int $b) { 1 }; multi method a(::?ROLE:D: int $b) { 2 } }; class B does A { };  dd B.a(1)

[17:01] <camelia> rakudo-moar dae981e81: OUTPUT: «Cannot resolve caller a(B:U: Int:D); none of these signatures match:␤    (A:U: int $b, *%_)␤    (A:D: int $b, *%_)␤  in block <unit> at <tmp> line 1␤␤»

[17:01] <lizmat> m: role A { multi method a(::?ROLE:U: $b) { 1 }; multi method a(::?ROLE:D: $b) { 2 } }; class B does A { };  dd B.a(1)

[17:01] <camelia> rakudo-moar dae981e81: OUTPUT: «1␤»

[17:02] <lizmat> timotimo: looks like I've found myself another round of yak-shaving  :-(

[17:04] *** robertle joined
[17:13] <lizmat> bisectable6: role A { multi method a(::?ROLE:U: int $b) { 1 }; multi method a(::?ROLE:D: int $b) { 2 } }; class B does A { };  dd B.a(1)

[17:13] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=dae981e) because on both starting points the exit code is 1

[17:13] <bisectable6> lizmat, bisect log: https://gist.github.com/cbeedeeea8709ebd4414420e7510a231

[17:13] <bisectable6> lizmat, (2016-06-09) https://github.com/rakudo/rakudo/commit/b6902e5192929a733a37079d5dc414430078bc7d

[17:19] <lizmat> R#3210

[17:19] <synopsebot> R#3210 [open]: https://github.com/rakudo/rakudo/issues/3210 MMD in role not working with natives

[19:00] <MasterDuke> anyone up to do a couple moar/nqp bumps?

[19:26] <timotimo> lizmat: hasn't it been the case for a long time that just using literals like that wasn't working?

[19:26] <timotimo> m: role A { multi method a(::?ROLE:U: $b) { 1 }; multi method a(::?ROLE:D: $b) { 2 } }; class B does A { };  dd B.a(my int $ = 1)

[19:26] <camelia> rakudo-moar dae981e81: OUTPUT: «1␤»

[19:26] <lizmat> timotimo: what literals ?

[19:26] <timotimo> when there's multi candidates that include natives

[19:27] <lizmat> timotimo: agree that it hasn't been working for a long time, but shouldn't that work ??

[19:30] <timotimo> i've gotten used to that limitation, lol

[19:30] <timotimo> i don't recall why that is the way it is, but i do seem to recall there being an explanation at some point

[19:32] <MasterDuke> i think there was some RT ticket zoffix was working on and then he and jnthn had some conversation on it and it ended up not being fixed/changed (maybe because it's not possible at all? maybe because it isn't possible yet?)

[19:33] <Geth_> ¦ roast: 18484049f9 | (Elizabeth Mattijsen)++ | S03-buf/write-int.t

[19:33] <Geth_> ¦ roast: Add tests for using Buf type objects and write-int*

[19:33] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/18484049f9

[19:48] <Geth_> ¦ roast: 47e7341341 | (Elizabeth Mattijsen)++ | S03-buf/write-num.t

[19:48] <Geth_> ¦ roast: Add tests for using Buf type objects and write-num*

[19:48] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/47e7341341

[19:51] *** cinch__ is now known as cinch

[20:04] *** cognominal joined
[20:07] *** cognomin_ left
[20:14] <Geth_> ¦ rakudo: 43b5e7682a | (Elizabeth Mattijsen)++ | src/core.c/Buf.pm6

[20:14] <Geth_> ¦ rakudo: Allow type objects on Buf.write-int/num/bits

[20:14] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/43b5e7682a

[20:30] <Geth_> ¦ rakudo: 18ff905233 | (Elizabeth Mattijsen)++ | src/core.c/Buf.pm6

[20:30] <Geth_> ¦ rakudo: Make Buf.write-bits really work on type objects

[20:30] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/18ff905233

[20:39] *** softmoth left
[20:40] *** softmoth joined
[20:45] <Geth_> ¦ rakudo: 586b9f2eaa | (Elizabeth Mattijsen)++ | 5 files

[20:45] <Geth_> ¦ rakudo: Fix internal code reference documentation for language version

[20:45] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/586b9f2eaa

[21:32] *** softmoth left
[21:35] *** llfourn left
[21:39] *** llfourn joined
[21:40] *** llfourn left
[21:42] *** softmoth joined
[22:22] <Geth_> ¦ nqp: 56af0509b5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/MOAR_REVISION

[22:22] <Geth_> ¦ nqp: [MoarVM Bump] Brings 15 commits

[22:22] <Geth_> ¦ nqp: 

[22:22] <Geth_> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2019.07.1-233-g270f1b0be...2019.07.1-248-gb72a790b1

[22:22] <Geth_> ¦ nqp: b72a790b1 Merge pull request #1186 from dogbert17/fix-uninit-field

[22:22] <Geth_> ¦ nqp: 6ecbf6e08 Fix uninitialized field

[22:22] <Geth_> ¦ nqp: 44811cab6 Merge pull request #1185 from MasterDuke17/fix_underflowing_exclusive_times_in_profiles

[22:22] <Geth_> ¦ nqp: 81f9ccdfa Fix profiler's call graph node getting missed by the GC

[22:22] <Geth_> ¦ nqp: <…commit message has 11 more lines…>

[22:22] <Geth_> ¦ nqp: review: https://github.com/perl6/nqp/commit/56af0509b5

[22:22] <AlexDaniel> MasterDuke: sure

[22:22] <Geth_> ¦ rakudo: 7cbaa0c8f1 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/NQP_REVISION

[22:22] <Geth_> ¦ rakudo: [NQP Bump] Brings 12 commits

[22:22] <Geth_> ¦ rakudo: 

[22:22] <Geth_> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2019.07.1-124-gbcf76dbf5...2019.07.1-136-g56af0509b

[22:22] <Geth_> ¦ rakudo: 56af0509b [MoarVM Bump] Brings 15 commits

[22:22] <Geth_> ¦ rakudo: 3a4f67a89 decont can be a noop if argument not a container

[22:22] <Geth_> ¦ rakudo: 33f18fce9 [js] Implement passing True/False/Int and Mu to js

[22:22] <Geth_> ¦ rakudo: 23757ac96 Merge pull request #582 from vrurg/problem-solving-103

[22:22] <Geth_> ¦ rakudo: <…commit message has 8 more lines…>

[22:22] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7cbaa0c8f1

[22:22] <AlexDaniel> MasterDuke: just ping me directly next time

[22:23] <MasterDuke> heh, thanks

[22:23] <AlexDaniel> or just… install it yourself? :)

[22:23] <AlexDaniel> https://github.com/perl6/z

[22:23] <AlexDaniel> I do this: z f && z bump m && z bump n && z bump push

[22:23] <AlexDaniel> but there's a simpler way probably

[22:23] <AlexDaniel> I don't really care because I ctrl+r any command anyway

[22:24] <AlexDaniel> infinite bash history changed my life :)

[22:24] <MasterDuke> mind doing it again in a min or two after i re-revert the add-context-to-error-messages commits to moarvm?

[22:25] <AlexDaniel> sure

[22:25] <MasterDuke> yes, ctrl-r is probably my most used key combo

[22:34] <MasterDuke> i guess un-revert would have been the better word choice

[22:34] <vrurg> timotimo: is nqp::objectid changing (or can change) after deserialization?

[22:35] <MasterDuke> AlexDaniel: ping

[22:36] <Geth_> ¦ nqp: 18157d0b72 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/MOAR_REVISION

[22:36] <Geth_> ¦ nqp: [MoarVM Bump] 01f85c8bf Revert "Revert "Merge  […]

[22:36] <Geth_> ¦ nqp: 

[22:36] <Geth_> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2019.07.1-248-gb72a790b1...2019.07.1-249-g01f85c8bf

[22:36] <Geth_> ¦ nqp: review: https://github.com/perl6/nqp/commit/18157d0b72

[22:36] <Geth_> ¦ rakudo: 5300f3ed05 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/templates/NQP_REVISION

[22:36] <Geth_> ¦ rakudo: [NQP Bump] 18157d0b7 [MoarVM Bump] 01f85c8bf R […]

[22:36] <Geth_> ¦ rakudo: 

[22:36] <Geth_> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2019.07.1-136-g56af0509b...2019.07.1-137-g18157d0b7

[22:36] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5300f3ed05

[22:36] <MasterDuke> AlexDaniel++

[23:19] *** anatofuz joined
[23:26] <timotimo> vrurg: i believe we don't serialize objectid, so yeah, i'd expect it to change

[23:27] <timotimo> restoring objectid would also require us to allocate memory at the same location we had the last time we ran, since objectid is currently implemented as "the memory address of the object" plus some "when it is requested, immediately make a space for it" magic

[23:28] <vrurg> Heh... I'm trying to speed up some metamodel methods by replacing iterations with table lookups. First thing failed is role concretization because of precompiled classes. 

[23:28] <vrurg> But I already worked around it by rebuilding the table from the list.

[23:51] *** softmoth left
[23:52] *** anatofuz left
[23:57] *** softmoth joined
