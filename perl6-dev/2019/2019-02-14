[00:33] *** tyil left
[00:39] *** tyil joined
[01:40] *** ExtraCrispy left
[01:43] *** ExtraCrispy joined
[01:56] *** MasterDuke left
[01:56] *** MasterDuke joined
[01:57] *** MasterDuke left
[01:57] *** MasterDuke joined
[02:45] *** ExtraCrispy left
[04:12] *** vendethiel- joined
[04:21] *** vendethiel- left
[05:45] *** robertle left
[06:14] *** ufobat_ joined
[07:00] <releasable6> Next release in ≈2 days and ≈11 hours. 4 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[07:11] *** Tux__ joined
[07:11] *** |Tux| left
[08:26] *** tyil left
[08:26] *** tyilanmenyn joined
[08:39] *** tyilanmenyn is now known as tyil

[09:27] *** llfourn_ joined
[09:29] *** llfourn left
[13:01] *** AlexDaniel left
[13:08] *** Ven`` left
[13:23] <timotimo> adding native subs to the file where i'm trying to "enhance" my enums makes the precomp explode

[13:24] <timotimo> i should try to golf it

[13:53] *** lucasb joined
[15:45] *** ufobat_ left
[17:13] *** robertle joined
[18:18] *** AlexDaniel joined
[18:34] <japhb> Quiet day ...

[18:34] *** jmerelo joined
[18:34] <jmerelo> hi

[18:35] <jmerelo> In a couple of weeks we have a bug squash day, and it will be devoted to Rakudo/MoarVM/NQP this time around: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:36] <jmerelo> That implies there will be some flying PRs. Also this has not been done for some time, and the guide could be a bit obsolete: https://github.com/rakudo/rakudo/wiki/Rakudo-SQUASHathon-Guide

[18:36] <jmerelo> If you feel it's worth the while to go ahead with this, there's going to be enough people around to help, and someone can take care of updating the guide

[18:52] <vrurg> AlexDaniel`: as we spoke last time, R#2694. Hope jnthn would give his word too.

[18:52] <synopsebot> R#2694 [open]: https://github.com/rakudo/rakudo/issues/2694 Role consumption by multiple roles

[19:02] *** lucasb left
[19:27] <jmerelo> Er, hi again.

[19:27] <jmerelo> Any reactions on the Squashathon I referred to above?

[19:38] <[TuxCM]> Rakudo version 2018.12-302-g121ca5fda - MoarVM version 2018.12-105-gc0435e55a

[19:38] <[TuxCM]> csv-test-xs-20      0.430 -  0.431

[19:38] <[TuxCM]> csv-ip5xs           0.744 -  0.761

[19:38] <[TuxCM]> test-t --race       0.880 -  0.896

[19:38] <[TuxCM]> test-t              1.945 -  1.998

[19:38] <[TuxCM]> csv-ip5xs-20        6.243 -  6.353

[19:38] <[TuxCM]> test                7.245 -  7.925

[19:38] <[TuxCM]> test-t-20 --race   10.429 - 10.483

[19:38] <[TuxCM]> csv-parser         22.441 - 23.140

[19:38] <[TuxCM]> test-t-20          31.732 - 32.840

[19:43] <vrurg> jmerelo: I would participate, but I too much of a "new in town". Sorry.

[20:07] *** jmerelo left
[20:08] *** dct joined
[20:26] *** AlexDaniel left
[20:28] *** dct left
[21:09] *** Ven`` joined
[21:14] *** dogbert17 joined
[21:16] <dogbert17> rather silent here today

[21:17] <dogbert17> have a short program which has regressed quite a bit speedwise lately

[21:19] <dogbert17> with 2018.10 I have according to time a runtime of real 0m4.696s but on head it's real 0m9.144s

[21:21] <timotimo> could it per chance be that it gets that new optimization i made but that disabled the jit for an important frame?

[21:21] <dogbert17> using the profiler I see, among other things: 2018.10 (#gc's 63) while on head the number is 376

[21:22] <dogbert17> on 2018.10 2_000_000 scalars are allocated, on head the number is 29_000_000

[21:23] <dogbert17> timotimo: how do we check that?

[21:25] <dogbert17> timotimo: here's the code, do you see anything fishy? https://gist.github.com/dogbert17/7423640a8bc4d5b9dd7c960295154ee9

[21:25] <timotimo> looking at the spesh log and jit bails would give that answer

[21:26] <timotimo> but the number of gc runs is interesting. could be it's doing more boxing or lexicalrefs and such

[21:26] <timotimo> btw, are you on head, or do you have postrelease-opts?

[21:26] <dogbert17> lemme check

[21:27] <dogbert17> master, last change by you - CStruct bindattr_i Opt Shall Release Its Temp Register

[21:27] <timotimo> oh btw try use v6.d

[21:27] <timotimo> or is that already active because of v6?

[21:29] <dogbert17> good question, anyway there's no difference

[21:29] <dogbert17> looking at scalar allocs on 2018.10 almost all are allocated in SETTING::src/core/SlippyIterator.pm6:49

[21:30] <dogbert17> on head the majority 25_000_000 are allocated by SETTING::src/core/native_array.pm6:616, i.e. ASSIGN-POS

[21:31] <dogbert17> ASSIGN-POS doesn't even show up in the 2018.10 profile

[21:33] <dogbert17> very strange, guess I should bisect it

[21:33] <timotimo> is scalar the highest allocated type?

[21:34] <dogbert17> yes

[21:35] <dogbert17> number 2, in both cases, is IntPosRef with 2_000_001 allocs

[21:37] <dogbert17> sorting routines on exclusive time also show differences

[21:38] <dogbert17> i.e. there are different routines on top

[21:38] <timotimo> aye

[21:38] <timotimo> when do i put in the feature that generates a nice copy-paste-able summary for all the tables ...

[21:39] <dogbert17> :)

[21:40] <dogbert17> I see that on head push_all is not jitted but it is on 2018.10

[21:40] <timotimo> oh, interesting!

[21:40] <timotimo> wanna check it out in the spesh log?

[21:40] <dogbert17> i.e. SETTING::src/core/Any-iterable-methods.pm6:405

[21:40] <dogbert17> sure

[21:42] <dogbert17> the spesh log file is humungous

[21:42] <dogbert17> what should I look for, BAILs?

[21:49] <timotimo> they no longer look quite like that

[21:49] <timotimo> i think "completely bailed"?

[21:50] <dogbert17> there's one, both in 2018.10 and head - # JIT: bailed completely because of <ctxouter>

[22:06] <dogbert17> I'll try some bisecting

[22:28] <dogbert17> timotimo: seems to be https://github.com/rakudo/rakudo/commit/ee2238f731f548861e26d745ea1be2ba22d24f4e

[23:19] *** Ven`` left
[23:55] *** dct joined
