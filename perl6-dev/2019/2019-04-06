[00:00] *** greppable6 joined
[00:00] <AlexDaniel> greppable6: \d{15}

[00:00] *** Kaypie left
[00:01] <greppable6> AlexDaniel, 7337 lines, 124 modules: https://gist.github.com/0fd1e4052f19e7fc941ef0eb77ec2dc3

[00:01] <vrurg> Does moar build with MS CL compiler? 

[00:02] <AlexDaniel> omg, .ps, .xml and .pdf files

[00:05] <ugexe> yes, you can look at the appveyor results to verify

[00:06] <AlexDaniel> MasterDuke: ok, so here's a crazy idea

[00:09] <vrurg> Reasonable... But mine fails under msvc developer command line.

[00:09] <vrurg> Can't build dll.

[00:09] <MasterDuke> AlexDaniel: yes?

[00:11] <AlexDaniel> MasterDuke: here, I grepped 9999 from my .bash_history: https://gist.github.com/AlexDaniel/c801ddec74c676353367aec1d6466e56

[00:12] <AlexDaniel> MasterDuke: run it with rakudos before and after your change, and diff the difference

[00:12] <MasterDuke> cool, i can do that

[00:13] <AlexDaniel> I'm not sure if this history file is old enough to contain some neat test cases

[00:13] <AlexDaniel> but it's something

[00:15] <AlexDaniel> MasterDuke: maybe replace /usr/bin/perl6 with perl6

[00:15] <AlexDaniel> there are just a few lines but they're on point

[00:22] <ugexe> vrurg: have you tried follow step by step with the appveyor file? are you doing https://github.com/rakudo/rakudo/blob/d5044de2f7c2101ae6a24da8263ce8e1bd41dc81/appveyor.yml#L47 for instance?

[00:24] <vrurg> ugexe: No. Just tried vanilla installation. Will checkit out. Though what's confuses me is that linker dies with internal error.

[00:24] <ugexe> because you need to do this with non-vanilla prompt

[00:24] <vrurg> ugexe: Thanks, I'll check it.

[00:24] <ugexe> or run that line above

[00:26] <vrurg> ugexe: I don't have SetEnv in SDKs path. 

[00:26] <AlexDaniel> heh and nobody is going to comment why I have 1461 lines like this in my bash history xD Thank you

[00:27] * vrurg didn't work in windows for at least 8 years. Hope it counts. ;)

[00:27] <AlexDaniel> 132589 lines in total, 5.4MB

[00:29] <ugexe> what visual studio do you have installed?

[00:30] <ugexe> x64 Native Tools Command Prompt -- do a search to see if you have this

[00:30] <vrurg> ugexe: VS 2019

[00:32] <vrurg> Perhaps I haven't installed the component. The search comes up with nothing.

[00:33] <ugexe> sounds like during installation you did not install/check some component then

[00:33] <ugexe> windows SDK maybe

[00:33] <vrurg> Oops, sorry! It's what I'm using to compile it actually. ;)

[00:34] <vrurg> Aha, I was about to check for SDK. Thanks!

[00:34] <ugexe> alternatively anything that has 'tools' listed with it that seems appropriate (i cant find a listing of components)

[00:38] <vrurg> ugexe: Thank you! Unfortunately, it's time to go now. 

[00:58] *** Kaiepi joined
[01:02] *** ctilmes joined
[01:04] *** lucasb left
[01:08] *** klapperl_ joined
[01:10] *** klapperl left
[01:31] *** AlexDaniel left
[01:32] *** AlexDaniel joined
[02:01] *** Kaiepi left
[02:05] *** Kaiepi joined
[02:07] *** squashable6 left
[02:11] *** squashable6 joined
[02:11] *** ChanServ sets mode: +v squashable6

[02:14] *** squashable6 left
[02:16] *** Kaiepi left
[02:17] *** squashable6 joined
[02:17] *** ChanServ sets mode: +v squashable6

[02:27] *** Kaiepi joined
[02:34] *** Kaiepi left
[02:55] *** Kaiepi joined
[03:11] *** vrurg left
[03:16] *** vrurg joined
[04:09] *** Kaiepi left
[04:22] *** Kaiepi joined
[04:40] *** Kaiepi left
[04:47] *** Kaiepi joined
[04:55] *** Kaiepi left
[05:39] *** Kaiepi joined
[05:41] *** vrurg left
[05:53] *** Kaiepi left
[06:06] *** Kaiepi joined
[07:21] <Geth> ¬¶ nqp: Kaiepi++ created pull request #529: Make tools/build/install-moar-runner.pl possible to run on *BSD

[07:21] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/pull/529

[07:41] *** patrickb joined
[07:50] <patrickb> o/

[07:58] <Kaiepi> \o

[07:58] <Kaiepi> can someone read over https://github.com/rakudo/rakudo/pull/2754 ?

[08:06] <patrickb> Kaiepi: Do you plan to work on https://github.com/perl6/nqp/issues/528 ?

[08:06] <patrickb> I was planning to work on this as well...

[08:26] <Kaiepi> not really

[08:26] <Kaiepi> i wanna work on the squashathon atm

[08:27] <patrickb> OK. Then I'm on it, if that's ok with you.

[08:27] <patrickb> What's the squashathon about this time?

[08:29] <Kaiepi> most wanted modules and ecosystem

[09:42] <lizmat> Files=1254, Tests=87994, 388 wallclock secs (20.72 usr  6.39 sys + 2788.58 cusr 229.78 csys = 3045.47 CPU)

[09:56] <pmurias_> btw is vrurg adding a new language letter?

[10:01] <[Tux]> Rakudo version 2019.03.1-150-gd5044de2f - MoarVM version 2019.03-68-g25b486dee

[10:01] <[Tux]> csv-test-xs-20      0.458 -  0.508

[10:01] <[Tux]> csv-ip5xs           0.761 -  0.929

[10:01] <[Tux]> test-t --race       1.047 -  1.073

[10:01] <[Tux]> test-t              1.793 -  2.011

[10:01] <[Tux]> csv-ip5xs-20        6.423 -  7.627

[10:01] <[Tux]> test                7.908 -  8.021

[10:01] <[Tux]> test-t-20 --race   11.079 - 11.557

[10:01] <[Tux]> csv-parser         23.051 - 23.399

[10:01] <[Tux]> test-t-20          32.059 - 33.981

[10:07] *** pmurias_ left
[10:18] *** squashable6 left
[10:23] *** squashable6 joined
[10:30] *** AlexDaniel left
[10:47] <lizmat> bisectable6: class A { has $.a = 42; submethod BUILD { } }; dd A.new

[10:47] <bisectable6> lizmat, On both starting points (old=2015.12 new=d5044de) the exit code is 0 and the output is identical as well

[10:47] <bisectable6> lizmat, Output on both points: ¬´A.new(a => 42)‚ê§¬ª

[10:47] <lizmat> hmmm

[10:48] <timotimo> huh

[10:48] <timotimo> i didn't expect that tbh?

[10:48] <lizmat> yeah, me neither

[10:48] <lizmat> m: class A { has $.a = 42; submethod BUILD { dd self, %_ } }; dd A.new

[10:48] <evalable6> lizmat, rakudo-moar d5044de2f: OUTPUT: ¬´A.new(a => Any)‚ê§Hash element = {}‚ê§A.new(a => Any)‚ê§¬ª

[10:48] <lizmat> the default is applied *after* BUILD

[10:48] <lizmat> eh....

[10:48] <lizmat> no default  hmmm

[10:49] <lizmat> I bet it is somehow related to wonky nqp::attrinited behaviour

[10:49] <lizmat> m: class A { has $.a = 42; submethod BUILD { dd %_ } }; dd A.new  # yup

[10:49] <evalable6> lizmat, rakudo-moar d5044de2f: OUTPUT: ¬´Hash element = {}‚ê§A.new(a => 42)‚ê§¬ª

[10:50] <lizmat> not dd-ing self will apply the default

[10:51] <timotimo> that's not so good :)

[10:51] <timotimo> didn't we want to get rid of attrinited?

[10:52] <lizmat> yeah, but there is no alternative atm, at least not one that will slowdown generic object creation significantly

[10:52] <timotimo> mhm

[11:21] *** awwaiid joined
[11:23] <Geth> ¬¶ nqp: patzim++ created pull request #530: Don't use bash

[11:23] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/pull/530

[11:24] *** pmurias joined
[11:31] *** samcv_ is now known as samcv

[11:33] *** squashable6 left
[11:35] *** squashable6 joined
[11:40] <MasterDuke> AlexDaniel`: some of those hang, i'll have to handle timing them out

[11:49] <Geth> ¬¶ rakudo: bf57f7626c | (Elizabeth Mattijsen)++ | src/core/Deprecations.pm6

[11:49] <Geth> ¬¶ rakudo: Remove %DEPRECATIONS from SETTING::

[11:49] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/bf57f7626c

[11:49] <Geth> ¬¶ rakudo/master: 4 commits pushed by thundergnat++, (Elizabeth Mattijsen)++

[11:49] <Geth> ¬¶ rakudo/master: 8fa3360dc2 | Merge pull request #1 from rakudo/master

[11:49] <Geth> ¬¶ rakudo/master: d4e1d8e7ee | Fix for FatRat.base failure for large denominators

[11:49] <Geth> ¬¶ rakudo/master: b69964b50e | Update Rational.pm6 in response to review comments

[11:49] <Geth> ¬¶ rakudo/master: 2a83be7870 | Merge pull request #2800 from thundergnat/thundergnat-FatRat.base-fix

[11:49] <Geth> ¬¶ rakudo/master: review: https://github.com/rakudo/rakudo/compare/bf57f7626c82...2a83be787033

[11:50] *** pmurias left
[11:56] <jnthn> Yeah, the attrinit'd mechanism boils down to "did this thing get touched"

[11:57] <jnthn> Which vivifies the attribute as a side-effect

[11:57] <jnthn> This doesn't really work for native attributes, but also frustrates optimizations

[11:57] <jnthn> Thing is, I'm not sure quite what the alternative would be that causes little enough fallout

[11:58] <jnthn> I've pondered static analyses (does BUILD mention the attribute), but those will break anything that relied on conditionally using it

[11:59] <lizmat> perhaps a bitmap with a bit to indicate whether that attribute has been initialized ?

[12:00] <lizmat> eh... scratch that thought  

[12:00] <jnthn> maybe, but 1) need's storage for the object's lifetime (maybe reasonable as in "if you want the feature you pay for it"), 2) needs carefully defined semantics for when we set it

[12:01] *** pmurias joined
[12:03] <jnthn> And 2 is the hard part :)

[12:09] <Geth> ¬¶ rakudo: cc88d63db3 | (Ben Davies)++ | src/core/ThreadPoolScheduler.pm6

[12:09] <Geth> ¬¶ rakudo: Allow :at/:in/:every to be Inf/-Inf/NaN in ThreadPoolScheduler.cue

[12:09] <Geth> ¬¶ rakudo: 

[12:09] <Geth> ¬¶ rakudo: Before, this would throw with a somewhat cryptic error.

[12:09] <Geth> ¬¶ rakudo: Now, this uses the smallest time interval allowed for the parameter.

[12:09] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/cc88d63db3

[12:09] <Geth> ¬¶ rakudo: c99ae9b323 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core/ThreadPoolScheduler.pm6

[12:09] <Geth> ¬¶ rakudo: Merge pull request #2754 from Kaiepi/scheduler

[12:09] <Geth> ¬¶ rakudo: 

[12:09] <Geth> ¬¶ rakudo: Allow :at/:in/:every to be Inf/-Inf/NaN in ThreadPoolScheduler.cue

[12:09] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/c99ae9b323

[12:10] <timotimo> use the minimum allowed even for +Inf?

[12:14] *** pmurias left
[12:18] <Kaiepi> this is to match the behaviour of javascript and ruby timotimo 

[12:19] <Kaiepi> i think it makes more sense to run the block in .cue asap on Inf instead of waiting as long as possible

[12:19] <Kaiepi> since it's not a number

[12:20] <timotimo> do we really hold up javascript as a positive example? :D

[12:21] <jnthn> No, and I'm dubious about this one :)

[12:22] <jnthn> Inf *is* a number, it's NaN that's not a number :P

[12:22] <lizmat> so what should we do then...

[12:22] <lizmat> FWIW, it's spectest clean

[12:22] <timotimo> not put it in the queue

[12:22] <timotimo> alternatively, put it in an atexit queue, lol

[12:22] <jnthn> -Inf doing ASAP makes sense to me; it's just another case of a negative number meaning "shoulda done it already"

[12:23] <jnthn> Just becasue something is spectest clean doesn't excuse you from thinking :P

[12:23] <jnthn> I think Inf or NaN are probably mistakes

[12:23] <jnthn> But I'd expect Inf to mean "don't ever do it" if we are going to support it

[12:24] <jnthn> I can sort of see the use of it if you're calculating the time to do soemthing and if the answer is "never" you just return Inf

[12:24] <jnthn> And that goes in as the time to do it, and we drop it

[12:24] <jnthn> Treating Inf as "now" feels wrong

[12:25] <jnthn> So I'd say: -Inf = right away like all negatives, Inf = just drop it, NaN = an error

[12:26] <timotimo> n'an error

[12:26] <lizmat> Kaiepi: will you do the honours of another PR ?

[12:26] <Kaiepi> once i can actually get perl6 running to test, sure

[12:27] <lizmat> ++Kaiepi

[12:28] <jnthn> The -Inf/Inf I'm quite sure of there; the NaN one I'm open to alternatives if anyone has a good argument for something other than error.

[12:28] <jnthn> Error is conservative, anyway.

[12:29] <Geth> ¬¶ nqp: b76db48d6f | (Patrick B√∂ker)++ | tools/build/install-moar-runner.pl

[12:29] <Geth> ¬¶ nqp: Make the moar runner use sh instead of bash

[12:29] <Geth> ¬¶ nqp: 

[12:29] <Geth> ¬¶ nqp: This gets rid of bash as a dependency. sh on the other hand should be

[12:29] <Geth> ¬¶ nqp: available just about everywhere.

[12:29] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/b76db48d6f

[12:29] <Geth> ¬¶ nqp: c5e843eb3c | (Patrick B√∂ker)++ | tools/build/Makefile-Moar.in

[12:29] <Geth> ¬¶ nqp: Remove a needless use of bash

[12:29] <Geth> ¬¶ nqp: 

[12:29] <Geth> ¬¶ nqp: sh can do this just as well, so don't require bash needlessly.

[12:29] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/c5e843eb3c

[12:29] <Geth> ¬¶ nqp: 275283a0dc | (Jonathan Worthington)++ (committed using GitHub Web editor) | 2 files

[12:29] <Geth> ¬¶ nqp: Merge pull request #530 from patzim/no-bash

[12:29] <Geth> ¬¶ nqp: 

[12:29] <Geth> ¬¶ nqp: Don't use bash

[12:29] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/275283a0dc

[12:30] <Geth> ¬¶ nqp: 88a222b54d | (Jeremy Studer)++ | tools/build/gen-js-makefile.nqp

[12:30] <Geth> ¬¶ nqp: Fix issue with building nqp-js on Windows

[12:30] <Geth> ¬¶ nqp: 

[12:30] <Geth> ¬¶ nqp: - M_RUNNER should already have the 'bat' extension

[12:30] <Geth> ¬¶ nqp: - Use platform-agnostic slash substitution var

[12:30] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/88a222b54d

[12:30] <Geth> ¬¶ nqp: f437ca6a06 | (Jonathan Worthington)++ (committed using GitHub Web editor) | tools/build/gen-js-makefile.nqp

[12:30] <Geth> ¬¶ nqp: Merge pull request #464 from jstuder-gh/js_win_build_issue

[12:31] <Geth> ¬¶ nqp: 

[12:31] <Geth> ¬¶ nqp: Fix issue with building nqp-js on Windows

[12:31] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/f437ca6a06

[12:33] <patrickb> jnthn++ # Working on the PR queue! Awesome!

[12:34] <jnthn> I'm glad to be back to working on any Perl 6 stuff. :)

[12:39] <Kaiepi> i say when i can actually get it running because of https://github.com/rakudo/rakudo/issues/2818

[12:39] <Kaiepi> i also can't install zef

[12:39] <Kaiepi> hdd nuked where i kept perl6 earlier today so...

[12:41] <patrickb> Kaiepi: That's one for me. I'll take a look

[12:41] <patrickb> I think I still have my OpenBSD VM available...

[12:41] <Kaiepi> if it doesn't happen on 6.4 i'll need to walk you through upgrading to -current

[12:41] <Kaiepi> dw it's a pretty short process

[12:42] <patrickb> Kaiepi: The output of readelf looks like it mixed MacOS compile parameters into the build. I'll see what I can do.

[12:50] <Kaiepi> ok

[13:01] *** travis-ci joined
[13:01] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Merge pull request #2800 from thundergnat/thundergnat-FatRat.base-fix

[13:01] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/516551725 https://github.com/rakudo/rakudo/compare/bf57f7626c82...2a83be787033

[13:01] *** travis-ci left
[13:11] *** ufobat__ joined
[13:14] *** ufobat_ left
[13:43] *** lucasb joined
[13:45] *** pmurias joined
[13:46] <patrickb> Kaiepi: I now tried it on 6.4 and it works.

[13:46] <Kaiepi> alright

[13:46] <patrickb> So what do I need to do to upgrade to -current?

[13:47] <Kaiepi> first reboot and at the boot prompt type `boot bsd.rd`

[13:47] <patrickb> Also, did you try to run the moar from the build directory?

[13:47] <Kaiepi> no, the installed moar

[13:47] <patrickb> ok

[13:48] <patrickb> I now see an installer prompt

[13:48] <Kaiepi> select upgrade

[13:48] <patrickb> Location of sets?

[13:48] <patrickb> http?

[13:49] <Kaiepi> yeah

[13:49] <Kaiepi> gimme a second, i need to get the list of mirrors

[13:49] <patrickb> cdn.openbsd.org is what it proposes

[13:49] <Kaiepi> pick whichever mirror from here's closest to where you live https://www.openbsd.org/ftp.html

[13:50] <Kaiepi> only type in the hostname

[13:50] *** pmurias left
[13:50] <patrickb> server directory?

[13:50] <patrickb> pub/OpenBSD/6.4/amd64 is what it proposes

[13:51] *** pmurias joined
[13:51] <Kaiepi> .

[13:51] <Kaiepi> ok my last message didn't send

[13:51] <Kaiepi> pub/OpenBSD/snapshots/amd64

[13:52] <Kaiepi> after that just follow the intructions and ping me once you're done

[13:52] <patrickb> there is only one set called bsd.rd

[13:52] <patrickb> is that correct?

[13:52] <Kaiepi> uhhhhhhh

[13:52] <Kaiepi> no

[13:53] <Kaiepi> there should be bsd, bsd.rd, bsd.mp, base65, etc.

[13:54] <patrickb> It also said: "Unable to get a verified list of distribution sets"

[13:54] <Kaiepi> what did you type in as the mirror?

[13:54] <patrickb> mirror.hs-esslingen.de

[13:54] <patrickb> I double checked mirror and server dir. They seem ok

[13:55] <patrickb> the dir on the server looks unsuspicious from what I can see in a browser...

[13:55] <Kaiepi> you'll probably have to cancel, reboot, download bsd.rd from https://mirror.hs-esslingen.de/pub/OpenBSD/snapshots/amd64/bsd.rd and replace /bsd.rd with it

[13:55] <Kaiepi> then start over

[13:55] <patrickb> will do

[13:57] <Kaiepi> btw did any network interfaces pop up in the blue messages? there should be one with something like em0 for your network interface that should've gotten set up before the prompt to get the files from http or disk

[14:01] <patrickb> got it working. Downloading sets now.

[14:01] <patrickb> I think replacing the bsd.rd did the trick

[14:04] *** travis-ci joined
[14:04] <travis-ci> Rakudo build failed. Elizabeth Mattijsen 'Merge pull request #2754 from Kaiepi/scheduler

[14:04] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/516555196 https://github.com/rakudo/rakudo/compare/2a83be787033...c99ae9b3236a

[14:04] *** travis-ci left
[14:08] *** |Tux| left
[14:08] <SmokeMachine> I‚Äôm sorry for opening the issue and making mistakes.

[14:08] *** vrurg joined
[14:10] *** |Tux| joined
[14:12] <Kaiepi> jnthn, by "just drop it" do you mean return nqp::null() if $at or $in is Inf?

[14:12] <Kaiepi> or should i make a cancellation object anyways

[14:13] <SmokeMachine> jnthn: I think you were right, produce the values per classification is better and I think it was my first idea (and what I was writing...)

[14:16] <SmokeMachine> jnthn, AlexDaniel: I cannot find my old codes implementing it... would you guys mind if I close that issue?

[14:17] <patrickb> Kaiepi: Now it fails for me too. I think it might not have needed the upgrade. I just missed to put the moar directory in path

[14:21] <patrickb> Kaiepi: https://www.mail-archive.com/misc@openbsd.org/msg143490.html # I'm not through completely, but that looks like our problem.

[14:21] <SmokeMachine> AlexDaniel`: I know at that time I were trying to do this: https://github.com/FCO/rakudo/commit/6b58221d3a71cb19a9e1e4bbe72f6082e0bb2b9c

[14:25] *** AlexDaniel joined
[14:30] <AlexDaniel> SmokeMachine: maybe we should repurpose it into a general discussion about classify/categorize

[14:30] <SmokeMachine> AlexDaniel: for me, it would be ok...

[14:32] <patrickb> Kaiepi: If I read that thread correctly, then OpenBSD currently has an unusable $ORIGIN implementation.

[14:32] <Kaiepi> well fuck

[14:32] <patrickb> Kaiepi: Only idea I have to go forward is looking into dlopen

[14:32] <patrickb> No idea whether this has any chance of producing something usable

[14:33] <Kaiepi> --no-relocatable also didn't work when i tested but i'm in the middle of working on stuff atm

[14:33] <patrickb> I'll have a look at that.

[14:34] <AlexDaniel> MasterDuke: hmm‚Ä¶ you can probably remove all of them if they hang without your changes

[14:35] <AlexDaniel> MasterDuke: note that some of these can eat quite a bit of memory, too

[14:37] <AlexDaniel> patrickb: I appreciate your work. Thank you!

[14:39] *** gugod1 is now known as gugod

[14:41] <patrickb> AlexDaniel: You're welcome!

[14:54] *** lgtaube left
[15:07] *** pmurias left
[15:09] *** lgtaube joined
[15:14] <patrickb> Kaiepi: When you have a little more time I'd be interested in how moar fails for you with --no-relocatable

[15:14] <patrickb> It does work in my VM.

[15:15] <Kaiepi> ok

[15:16] <Kaiepi> m: use nqp; say nqp::iseq_n(nqp::unbox_n(NaN), nqp::nan())

[15:16] <evalable6> Kaiepi, rakudo-moar c99ae9b32: OUTPUT: ¬´0‚ê§¬ª

[15:16] *** squashable6 left
[15:16] <Kaiepi> m: use nqp; say nqp::iseq_n(NaN, nqp::nan())

[15:16] <evalable6> Kaiepi, rakudo-moar c99ae9b32: OUTPUT: ¬´0‚ê§¬ª

[15:16] <Kaiepi> how do i check if something is NaN with nqp?

[15:18] <Kaiepi> m: use nqp; my num $nan = nqp::nan(); nqp::iseq_s($nan, NaN)

[15:18] <evalable6> Kaiepi, rakudo-moar c99ae9b32: OUTPUT: ¬´(exit code 1) This type cannot unbox to a native string: P6opaque, Num‚ê§  in block <unit> at /tmp/YvNjLCG1vB line 1‚ê§‚ê§¬ª

[15:18] <Kaiepi> m: use nqp; my num $nan = nqp::nan(); say nqp::iseq_s($nan, NaN)

[15:18] <evalable6> Kaiepi, rakudo-moar c99ae9b32: OUTPUT: ¬´(exit code 1) This type cannot unbox to a native string: P6opaque, Num‚ê§  in block <unit> at /tmp/yxBfkth6dF line 1‚ê§‚ê§¬ª

[15:19] <Kaiepi> m: use nqp; my num $nan = nqp::nan(); say nqp::iseq_n($nan, NaN)

[15:19] <evalable6> Kaiepi, rakudo-moar c99ae9b32: OUTPUT: ¬´0‚ê§¬ª

[15:19] *** squashable6 joined
[15:21] <Kaiepi> guess i'll check it last out of Inf/-Inf/NaN and use nqp::isnanorinf

[15:26] <ugexe> yeah that seems to be the way: nqp::isnanorinf($n) && $n != nqp::inf() && $n != nqp::neginf();

[16:02] <b2gills> ugexe: It could be that `make test` works before `make install` only if there isn't already an installed Rakudo/NQP/MoarVM. Meaning the installed version of one (or more) of those takes precedence over the one that was just built. I did have this problem immediately after the relocatable stuff was merged.

[16:11] <b2gills> Actually thinking about it, the way I build and install; the installed Rakudo may be in a borked state until it fully completes. (Which should be fine) I build and install MoarVM, then build/test/install NQP, then do the same for Rakudo. I do all of that without removing the previously installed files.

[16:11] <b2gills> Anything that (incorrectly) uses the installed Rakudo may fail if it runs before the build script is done.

[16:12] <Geth> ¬¶ rakudo: 5e8451f79d | usev6++ | src/core/Match.pm6

[16:12] <Geth> ¬¶ rakudo: [JVM] Remove special case

[16:12] <Geth> ¬¶ rakudo: 

[16:12] <Geth> ¬¶ rakudo: This looks like a leftover from much earlier times.

[16:12] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/5e8451f79d

[16:27] *** vrurg left
[16:34] *** ctilmes_ joined
[16:38] *** ctilmes left
[16:42] <Geth> ¬¶ rakudo: Kaiepi++ created pull request #2819: Improve ThreadPoolScheduler.cue behaviour when Inf/-Inf/Nan is passed

[16:42] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/2819

[16:43] <Kaiepi> >Nan

[16:43] <Kaiepi> i need to learn to type

[16:45] <MasterDuke> i just had some Naan for lunch

[16:46] <Kaiepi> naan's so good

[16:50] *** ctilmes_ left
[16:50] *** ctilmes joined
[16:58] *** pmurias joined
[17:24] *** travis-ci joined
[17:24] <travis-ci> Rakudo build failed. usev6 '[JVM] Remove special case

[17:24] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/516612300 https://github.com/rakudo/rakudo/compare/c99ae9b3236a...5e8451f79d7e

[17:24] *** travis-ci left
[18:03] *** vrurg joined
[18:05] *** vrurg left
[18:06] *** vrurg joined
[18:49] *** vrurg left
[19:03] *** vrurg joined
[19:17] *** vrurg left
[19:19] *** vrurg joined
[19:21] *** vrurg left
[19:21] *** vrurg joined
[19:24] *** vrurg left
[19:25] *** vrurg joined
[19:38] <lizmat> m: dd sprintf("%*s","foo")   # is this supposed to work?  if not, I guess the error is pretty LTA

[19:38] <evalable6> lizmat, rakudo-moar 5e8451f79: OUTPUT: ¬´(exit code 1) This representation (Null) does not support elems (for type VMNull)‚ê§  in block <unit> at /tmp/UGFWja3n9Z line 1‚ê§‚ê§¬ª

[19:38] <lizmat> bisectable6:  sprintf("%*s","foo")

[19:38] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=5e8451f) because on both starting points the exit code is 1

[19:39] <bisectable6> lizmat, bisect log: https://gist.github.com/a1311f31732a58b5be58bb2f1b335002

[19:39] <bisectable6> lizmat, (2016-03-16) https://github.com/rakudo/rakudo/commit/ad19288bdef16453df202758c7ff4d1088605184

[19:41] <ugexe> i think sprintf errors are usually LTA because they go through nqp?

[19:42] <lizmat> I guess

[19:42] <lizmat> I'm currently rewriting sprintf in Perl 6, and found that wart  :-)

[19:42] *** lucasb left
[20:36] *** vrurg left
[20:58] <ugexe> m: gist(1)

[20:58] <evalable6> ugexe, rakudo-moar 5e8451f79: OUTPUT: ¬´¬ª

[20:58] <ugexe> m: perl(1)

[20:58] <evalable6> ugexe, rakudo-moar 5e8451f79: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/juNMpIcTuu‚ê§Undeclared routine:‚ê§    perl used at line 1‚ê§‚ê§¬ª

[20:59] <ugexe> dunno if that should exist or not ^

[21:21] <Kaiepi> m: my constant __EXIT__ = 1; say __EXIT__

[21:21] <evalable6> Kaiepi, rakudo-moar 5e8451f79: OUTPUT: ¬´1‚ê§¬ª

[21:21] <Kaiepi> er

[21:21] <Kaiepi> m: my constant __END__ = 1; say __END__

[21:21] <evalable6> Kaiepi, rakudo-moar 5e8451f79: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/KnkrUm0Vaq‚ê§Unsuppo‚Ä¶¬ª

[21:21] <evalable6> Kaiepi, Full output: https://gist.github.com/e8bfad7cb84c77ecfb089188ba57bcca

[21:23] <ugexe> __END__ has special meaning in perl 5, and presumably perl 6

[21:24] <ugexe> or maybe its just the error it tries to generate messing up your assignment?

[21:24] <ugexe> m: __END__

[21:24] <evalable6> ugexe, rakudo-moar 5e8451f79: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/v_VmW6Bpbi‚ê§Unsuppo‚Ä¶¬ª

[21:24] <evalable6> ugexe, Full output: https://gist.github.com/4fd269f74d7e8a4a0c54c6e4a0e7eabd

[21:24] <ugexe> ah yeah its the same error

[21:26] <Geth> ¬¶ rakudo: patzim++ created pull request #2820: Never build a relocatable rakudo on OpenBSD

[21:26] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/2820

[21:27] <ugexe> seems like __END__ and __DATA__ should not produce those error messages unless p5isms is enabled

[21:30] <Geth> ¬¶ rakudo: d3d4b2e8b4 | (Patrick B√∂ker)++ | Configure.pl

[21:30] <Geth> ¬¶ rakudo: Never build a relocatable rakudo on OpenBSD

[21:30] <Geth> ¬¶ rakudo: 

[21:30] <Geth> ¬¶ rakudo: See https://github.com/rakudo/rakudo/issues/2818

[21:30] <Geth> ¬¶ rakudo: 

[21:30] <Geth> ¬¶ rakudo: OpenBSDs implementation of $ORIGIN in rpath is unreliable. Also it misses

[21:30] <Geth> ¬¶ rakudo: a mechanism to determine the executable path in general. So even at

[21:30] <Geth> ¬¶ rakudo: runtime one has a hard time implementing something like this in a robust

[21:30] <Geth> ¬¶ rakudo: manner.

[21:30] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/d3d4b2e8b4

[21:30] <Geth> ¬¶ rakudo: f4c23223f8 | (Nick Logan)++ (committed using GitHub Web editor) | Configure.pl

[21:30] <Geth> ¬¶ rakudo: Merge pull request #2820 from patzim/openbsd-no-relocatable

[21:30] <Geth> ¬¶ rakudo: 

[21:30] <Geth> ¬¶ rakudo: Never build a relocatable rakudo on OpenBSD

[21:30] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/f4c23223f8

[21:30] <Geth> ¬¶ rakudo: patzim++ created pull request #2821: Use sh instead of bash

[21:30] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/2821

[21:33] <Geth> ¬¶ rakudo: bb7e609412 | (Patrick B√∂ker)++ | 2 files

[21:33] <Geth> ¬¶ rakudo: Make the runner scripts use sh instead of bash

[21:33] <Geth> ¬¶ rakudo: 

[21:33] <Geth> ¬¶ rakudo: This gets rid of bash as a dependency. sh on the other hand should be

[21:33] <Geth> ¬¶ rakudo: available just about everywhere.

[21:33] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/bb7e609412

[21:33] <Geth> ¬¶ rakudo: 11c55fb883 | (Patrick B√∂ker)++ | 2 files

[21:33] <Geth> ¬¶ rakudo: Remove two needless uses of bash

[21:33] <Geth> ¬¶ rakudo: 

[21:33] <Geth> ¬¶ rakudo: sh can do this just as well, so don't require bash needlessly.

[21:33] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/11c55fb883

[21:33] <Geth> ¬¶ rakudo: 728ed87b23 | (Nick Logan)++ (committed using GitHub Web editor) | 4 files

[21:33] <Geth> ¬¶ rakudo: Merge pull request #2821 from patzim/no-bash

[21:33] <Geth> ¬¶ rakudo: 

[21:33] <Geth> ¬¶ rakudo: Use sh instead of bash

[21:33] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/728ed87b23

[21:47] *** vrurg joined
[21:49] <AlexDaniel> patrickb: so how come you don't have a commit bit?

[21:50] <AlexDaniel> I thought you sent a signed CLA?

[21:50] <AlexDaniel> if it was lost, please resend with a CC to Will Coleda

[22:26] *** travis-ci joined
[22:26] <travis-ci> Rakudo build failed. Nick Logan 'Merge pull request #2821 from patzim/no-bash

[22:26] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/516690207 https://github.com/rakudo/rakudo/compare/f4c23223f8a1...728ed87b23fd

[22:26] *** travis-ci left
[23:02] <patrickb> It arrived. Coke wrote me quite some time ago already.

[23:02] <patrickb> I didn't know the commit bit was in any way related...

[23:02] <patrickb> AlexDaniel: ^

[23:02] <AlexDaniel> jnthn: ‚Üë

[23:03] <patrickb> I'm off for today.

[23:03] *** patrickb left
[23:08] * jnthn goes to track down patrickb's github handle :)

[23:10] <jnthn> .tell patrickb GitHub organization invite sent; once you accept it you should have commit access. Welcome! :)

[23:10] <yoleaux> jnthn: I'll pass your message to patrickb.

[23:20] <AlexDaniel> weekly: welcome patrickb https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2019-04-06#l432

[23:20] <notable6> AlexDaniel, Noted!

[23:27] *** pmurias left
[23:34] *** AlexDani` joined
[23:35] *** AlexDaniel left
[23:39] *** AlexDani` left
