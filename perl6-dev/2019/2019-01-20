[01:07] <MasterDuke> nqp: my $a := "Inf"; say(+$a)

[01:07] <camelia> nqp-moarvm: OUTPUT: «Inf␤»

[01:08] <MasterDuke> where does that numification happen in NQP? that's broken in my branch (it gives 0 instead), but there aren't any tests for it

[01:14] <MasterDuke> hm. i changed prefix:<+> to mean intify instead of numify, i think that's the problem

[01:17] <MasterDuke> nqp: my $a := Inf; say(nqp::isnanorinf($a))

[01:17] <camelia> nqp-moarvm: OUTPUT: «0␤»

[01:18] <MasterDuke> huh

[01:54] *** lizmat left
[01:54] <MasterDuke> well, now we're passing `make m-test`

[01:58] <MasterDuke> some spectest failures though

[02:11] <MasterDuke> `Cannot find method 'Num': no method cache and no .^find_method` in Actions.bare_complex_number(), not sure how that happens

[02:16] <MasterDuke> here: https://github.com/rakudo/rakudo/blob/master/src/Perl6/Actions.nqp#L8279-L8289

[02:38] *** Kaiepi left
[03:49] *** MasterDuke left
[04:31] <Geth> ¦ rakudo: MasterDuke17++ created pull request #2630: Remove unneeded line in bare_complex_number

[04:31] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2630

[04:43] *** Kaiepi joined
[04:44] *** p6bannerbot sets mode: +v Kaiepi

[07:08] <Geth> ¦ rakudo: b6030d3745 | (Daniel Green)++ | src/Perl6/Actions.nqp

[07:08] <Geth> ¦ rakudo: Remove unneeded line in bare_complex_number

[07:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b6030d3745

[07:08] <Geth> ¦ rakudo: 5555bbf0ba | niner++ (committed using GitHub Web editor) | src/Perl6/Actions.nqp

[07:08] <Geth> ¦ rakudo: Merge pull request #2630 from MasterDuke17/remove_unneeded_line_in_bare_complex_number

[07:08] <Geth> ¦ rakudo: 

[07:08] <Geth> ¦ rakudo: Remove unneeded line in bare_complex_number

[07:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5555bbf0ba

[07:46] *** huguesmax joined
[07:46] *** p6bannerbot sets mode: +v huguesmax

[07:46] *** huguesmax left
[08:55] *** AlexDaniel left
[09:42] *** lizmat joined
[09:42] *** p6bannerbot sets mode: +v lizmat

[10:24] <nine> tell patrickb I wonder if we can salvage the RAKUDO_HOME/NQP_HOME idea. So openSUSE wants binary libs to be stored in lib/lib64. The same is true for virtually all other distros I guess. So why do we store stuff in /usr/share anyway? Perl 5 and Python libs are stored in /usr/lib already.

[10:24] <nine> .tell patrickb I wonder if we can salvage the RAKUDO_HOME/NQP_HOME idea. So openSUSE wants binary libs to be stored in lib/lib64. The same is true for virtually all other distros I guess. So why do we store stuff in /usr/share anyway? Perl 5 and Python libs are stored in /usr/lib already.

[10:24] <yoleaux> nine: I'll pass your message to patrickb.

[10:47] <nine> .tell patrickb The FHS states that /usr/lib is for "Libraries for programming and packages" while /usr/share is for "Architecture-independent *data*" (emphasis mine). Considering that I find plenty of *.gif, *.png, *.ogg, *.wav and whatever in my /usr/lib I'd guess "if in doubt, put it in /usr/lib" is the rule of thumb

[10:47] <yoleaux> nine: I'll pass your message to patrickb.

[10:56] <nine> I wonder if we could be smarter about integer constants. Right now passing a 1 as literal to a function with an int32 argument, the int will be boxed and we end up accessing it via sp_p6oget_bi which is really expensive for a tiny literal

[11:16] *** ufobat joined
[11:17] *** p6bannerbot sets mode: +v ufobat

[12:36] <Geth> ¦ rakudo: MasterDuke17++ created pull request #2631: Move some Num constant rvs to their signature

[12:36] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2631

[12:37] *** MasterDuke joined
[12:37] *** p6bannerbot sets mode: +v MasterDuke

[12:37] *** MasterDuke left
[12:37] *** MasterDuke joined
[12:37] *** herbert.freenode.net sets mode: +v MasterDuke

[12:37] *** p6bannerbot sets mode: +v MasterDuke

[12:49] *** gfldex left
[13:18] *** AlexDaniel joined
[13:18] *** p6bannerbot sets mode: +v AlexDaniel

[16:31] *** ExtraCrispy joined
[16:31] *** p6bannerbot sets mode: +v ExtraCrispy

[16:43] *** gfldex joined
[16:43] *** gfldex left
[16:43] *** gfldex joined
[16:44] *** p6bannerbot sets mode: +v gfldex

[16:44] *** p6bannerbot sets mode: +v gfldex

[17:20] *** lucasb joined
[17:20] *** p6bannerbot sets mode: +v lucasb

[17:24] <Geth> ¦ rakudo: debe6b6ea4 | (Elizabeth Mattijsen)++ | 7 files

[17:24] <Geth> ¦ rakudo: Make sure we do "my constant %foo = nqp::hash" only on moar

[17:24] <Geth> ¦ rakudo: 

[17:24] <Geth> ¦ rakudo: As a temporary fix for R#2628, to not longer block the release.

[17:24] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/debe6b6ea4

[17:24] <synopsebot> R#2628 [open]: https://github.com/rakudo/rakudo/issues/2628 [JVM][⚠ blocker ⚠] [JVM] build is broken (error in stage parse during generation of CORE.d.setting.jar)

[17:26] <Geth> ¦ rakudo: f02bceb7c2 | (Daniel Green)++ | src/core/Num.pm6

[17:26] <Geth> ¦ rakudo: Move some Num constant rvs to their signature

[17:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f02bceb7c2

[17:26] <Geth> ¦ rakudo: 35a81d5448 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/core/Num.pm6

[17:26] <Geth> ¦ rakudo: Merge pull request #2631 from MasterDuke17/move_some_Num_constant_rvs_to_signature

[17:26] <Geth> ¦ rakudo: 

[17:26] <Geth> ¦ rakudo: Move some Num constant rvs to their signature

[17:26] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/35a81d5448

[17:38] <lucasb> hmm, better move R#2627 to user-experience, no?

[17:38] <synopsebot> R#2627 [open]: https://github.com/rakudo/rakudo/issues/2627 [6.e][RFC][decluttering] Perl 6, 6.d, Diwali, Raku, Rakudo, Moar, NQP, Star, *

[17:39] <lucasb> I know AlexDaniel++ explict acknowledged this in the issue, but...

[17:39] <lucasb> the own act of opening this in rakudo's repo already shows how confusing the current state is (maybe :)

[17:40] <lucasb> and that twitter stream was fun to read :-)

[17:42] *** dogbert11 left
[17:43] <lucasb> iiuc, the issue is about how The Perl 6 Project wants to present itself to the outside world, right?

[18:13] <lizmat> imi, yes

[18:14] <lizmat> *imo

[18:48] <MasterDuke> .ask samcv t/09-moar/Line_Break__LineBreak.t and t/09-moar/General_Category__extracted-DerivedGeneralCategory.t both have passing todos, think you could take a look?

[18:48] <yoleaux> MasterDuke: I'll pass your message to samcv.

[18:56] <MasterDuke> anyone have an idea on about what would cause `Cannot find method 'Num': no method cache and no .^find_method` in Actions.bare_complex_number() ( https://github.com/rakudo/rakudo/blob/master/src/Perl6/Actions.nqp#L8279-L8289 ) ?

[19:05] <lizmat> MasterDuke: print a $foo.HOW.name($foo) and find out what it is you're calling .Num on

[19:06] <lizmat> MasterDuke: perhaps you need to hllize it first ?

[19:11] <MasterDuke> lizmat: this is just from running a spectest on my make_nqp_default_to_int branches, but yeah, i haven't tried printing that out yet

[19:12] <lizmat> whenever I see that kind of error, I've usually had an "aha erlebnis" when I saw what it said :-)

[19:13] * MasterDuke isn't sure if that's random typing or Dutch

[19:23] <lizmat> actually, it's german

[19:24] <lizmat> I guess a modern translation would be a "ah, duh! experience"

[19:27] <MasterDuke> sounds like an "ah ha! moment" or a "lightbulb going off moment"

[19:27] <MasterDuke> i would say my german is better than my dutch, but that's only because i don't know any dutch (and i do know more than 0 words in german)

[19:29] <MasterDuke> huh, it's an Int (with a value of 5)

[19:32] <lizmat> are you sure it's not an int?

[19:33] <MasterDuke> could be. this is when i'm running t/spec/S02-literals/allomorphic.t

[19:34] <MasterDuke> i don't get a line number

[19:40] <MasterDuke> not an int, nqp::objprimspec is 0

[19:40] <lizmat> weird

[19:41] <lizmat> eh... perhaps you need to decont() it ?

[19:41] <lizmat> afk for a bit&

[19:47] <MasterDuke> same message with decont()

[20:12] <MasterDuke> ok, i'm getting a BOOTNum. maybe i just don't need to call .Num on it at all?

[20:17] <MasterDuke> yup, solves that problem

[20:26] <MasterDuke> nice, down to just one spectest fail

[21:22] *** dogbert17 joined
[21:23] *** p6bannerbot sets mode: +v dogbert17

[21:36] <MasterDuke> woohoo. now NQP builds ok and passes `make m-test` and Rakudo builds ok and passes `make m-test m-spectest` on my trilogy of make-NQP-default-to-int branches

[21:37] <MasterDuke> i assume everyone will be fine with it if i merge them all right before the release

[21:40] <Geth> ¦ rakudo: 94995d60ec | MasterDuke17++ (committed using GitHub Web editor) | t/02-rakudo/05-range-in-range.t

[21:40] <Geth> ¦ rakudo: Fix typo in test description

[21:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/94995d60ec

[22:28] <AlexDaniel> lucasb: feel free to move it

[22:29] <AlexDaniel> some of the points were rakudo-related, and a bunch of labels don't exist in other repos

[22:29] <AlexDaniel> (like `6.e`)

[22:30] <AlexDaniel> haha “the own act of opening this in rakudo's repo already shows how confusing the current state is”

[22:31] * AlexDaniel craughs

[22:40] <Geth> ¦ nqp: ugexe++ created pull request #517: Add uname opcode for MoarVM

[22:40] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/517

[23:08] *** lucasb left
[23:23] <japhb> MasterDuke: Sure!  What could possibly go wrong?  ;-)

[23:28] <MasterDuke> japhb: i like the way you think

[23:29] <MasterDuke> greppable6: use nqp

[23:30] <greppable6> MasterDuke, 96 lines, 65 modules: https://gist.github.com/8a6ffc031441866dffb85d876113b816

[23:31] <MasterDuke> at least two of those are false positives, hardly any need to worry

[23:38] <japhb> MasterDuke: Any performance difference visible with your "trilogy of make-NQP-default-to-int branches"?

[23:49] <MasterDuke> japhb: i'm somewhat surprised with myself, but i haven't actually tried any benchmarks

[23:50] <japhb> Well, now you've got it working, so you can test whether you also made it fast.  :-)

[23:56] <MasterDuke> i did jit the new nqp::intify op, but there is some spesh code for the numify and strify ops that i haven't adapted yet

