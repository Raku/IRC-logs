[00:51] <Kaiepi> AlexDaniel, i'm pretty sure what you were asking about is a leak, but i won't be able to confirm that it is or not until tomorrow since i found some race conditions while testing that i haven't finished fixing yet

[00:52] <AlexDaniel> Kaiepi: alright, thanks for checking it

[00:53] <AlexDaniel> I left a comment on a PR so that nobody hits merge accidentally

[00:53] <AlexDaniel> I mean, on your PR

[03:48] *** irced left
[03:58] *** gugod joined
[06:43] *** robertle left
[08:09] *** MasterDuke left
[08:17] *** commavir left
[08:19] *** commavir joined
[08:28] *** BeastieBot joined
[08:33] *** chloekek joined
[08:40] *** Kaiepi left
[08:56] *** MasterDuke joined
[08:56] *** chloekek left
[09:01] *** robertle joined
[10:29] <|Tux|> Rakudo version 2019.07.1-260-g9dd67cb37 - MoarVM version 2019.07.1-180-gcf3b545e5

[10:29] <|Tux|> csv-test-xs-20      0.441 -  0.445

[10:29] <|Tux|> csv-ip5xs           0.689 -  0.690

[10:29] <|Tux|> test-t --race       0.774 -  0.853

[10:29] <|Tux|> test-t              1.751 -  1.766

[10:29] <|Tux|> csv-ip5xs-20        4.936 -  5.274

[10:29] <|Tux|> test                6.929 -  7.481

[10:29] <|Tux|> test-t-20 --race    9.088 -  9.362

[10:29] <|Tux|> csv-parser         21.401 - 21.509

[10:29] <|Tux|> test-t-20          29.797 - 30.301

[10:37] *** Kaiepi joined
[10:46] *** Voldenet left
[12:23] *** lucasb joined
[13:07] <kawaii> https://usercontent.irccloud-cdn.com/file/WWEU5lHe/blin-output-2019-09-06.tar.gz

[13:07] <kawaii> AlexDaniel: ^ 

[13:12] <timotimo> https://cdn.discordapp.com/attachments/538420619142889472/619520174957264916/unknown.png - neato makes the overview svg look much more readable!

[13:26] *** chloekek joined
[13:40] <AlexDaniel> it's readable enough when there are just a few regressions

[13:40] <tellable6> 2019-09-06T06:05:47Z #perl6 <jmerelo> AlexDaniel are hooks ready and everything?

[13:43] *** j3nnn1 joined
[13:54] <Kaiepi> bastille% perl6 -e 'say [+] "malloc_dump_old".IO.slurp.lines[2..*].map(*.split(/\s+/)[2])'

[13:54] <Kaiepi> 51117774

[13:54] <Kaiepi> bastille% perl6 -e 'say [+] "malloc_dump_new".IO.slurp.lines[2..*].map(*.split(/\s+/)[2])'

[13:54] <Kaiepi> 50639454

[13:56] <Kaiepi> managed to cut down the memory leaked when just binding an async tcp socket and connecting to it by 50KB on my branch

[13:56] <Kaiepi> or at least that's what openbsd's libc claims

[13:57] <Kaiepi> *500KB

[14:30] *** Xliff joined
[14:34] <vrurg> Hm, nmake cannot do ?=. wtf... :(

[14:57] *** |Tux| left
[15:01] *** chloekek left
[15:18] <AlexDaniel> kawaii: https://github.com/rakudo/rakudo/issues/3132#issuecomment-528886751

[15:19] <kawaii> AlexDaniel: HEAD from yesterday, if that makes a difference

[15:20] <AlexDaniel> kawaii: so you just used --new=HEAD right?

[15:20] <kawaii> Yep

[15:26] *** |Tux| joined
[15:39] *** |Tux| left
[15:56] *** |Tux| joined
[15:59] *** robertle left
[16:21] *** AlexDaniel` left
[16:21] *** rba[m] left
[16:21] *** Guest999 left
[16:21] <vrurg> kawaii: would it be possible for you to somehow test Cro::Core manually? I'm positive that something went wrong about this Blin run.

[16:21] <kawaii> I can do so later, sure

[16:21] <vrurg> kawaii: just for the record: my Rakudo from HEAD is 2019.07.1-180-gcf3b545e5

[16:22] <vrurg> kawaii: thanks! I'm gonna be afk for a couple of hours anyway.

[16:34] *** AlexDaniel` joined
[17:02] *** Kaiepi left
[17:09] *** rba[m] joined
[17:09] *** Guest48976 joined
[17:38] *** BeastieBot left
[17:47] *** Ven`` joined
[17:58] *** Ven`` left
[18:08] *** Voldenet joined
[18:08] *** Voldenet left
[18:08] *** Voldenet joined
[18:24] <Xliff> Does anyone know if there are any problems with CStructs if the last attribute is another CStruct included by "HAS"?

[18:24] <Xliff> I keep getting a Type object when it shouldn't be/

[18:28] *** Xliff left
[18:54] *** Ven`` joined
[18:54] <nine> What the? In this code the Foo object gets destroyed and its DESTROY called: my $foo = Foo.new; is $foo.test(), 1, 'obj survives'; is $foo.test(), 1, 'obj survives';

[18:54] <nine> In this code it's not: my $foo = Foo.new; is $foo.test(), 1, 'obj survives' for ^2;

[18:55] <nine> In this not either: my $foo = Foo.new; -> { is $foo.test(), 1, 'obj survives'; }()

[18:55] <nine> But in this it works: my $foo = Foo.new; -> $foo { is $foo.test(), 1, 'obj survives'; }($foo)

[19:08] <nine> Oh, actually it does! It just takes many more iterations of the test. So I guess that some code will cause $foo to become referenced by the old generation and it's much harder to trigger a full collection

[19:15] *** Kaiepi joined
[20:19] *** MasterDuke75 joined
[20:22] *** MasterDuke left
[20:39] *** go|dfish joined
[23:24] *** Ven`` left
