[00:37] *** commavir left
[00:39] *** lgtaube left
[00:39] *** commavir joined
[00:40] *** lgtaube joined
[01:05] *** MasterDuke joined
[01:05] *** MasterDuke left
[01:05] *** MasterDuke joined
[01:13] *** squashable6 left
[01:16] *** squashable6 joined
[01:16] *** ChanServ sets mode: +v squashable6

[01:36] *** lucasb left
[01:46] *** AlexDaniel left
[01:56] *** fake_space_whale left
[02:09] *** fake_space_whale joined
[03:39] *** evalable6 left
[03:40] *** evalable6 joined
[05:08] *** fake_space_whale left
[05:34] *** robertle left
[07:11] <lizmat_> Files=1262, Tests=107907, 400 wallclock secs (29.77 usr  7.21 sys + 2869.46 cusr 232.01 csys = 3138.45 CPU)

[07:12] *** patrickb joined
[07:17] *** lizmat_ is now known as lizmat

[07:38] <kawaii> I've removed a few more blocker labels this morning from Github issues, but unsure about https://github.com/rakudo/rakudo/issues/2824

[07:38] <kawaii> seems quite serious IMO, would be nice to get a second opinion

[07:54] *** ufobat joined
[08:03] <timotimo> the issue title isn't really relevant to the "actual" problem

[08:07] * lizmat changed the title

[08:07] <lizmat> and removed the blocker label

[08:09] <lizmat> and closed it

[08:17] <lizmat> moritz: do we have any news on the status of hack ?

[08:29] <moritz> lizmat: not yet :(

[08:34] *** robertle joined
[08:46] * lizmat has bumped MoarVM and NQP

[09:21] <|Tux|> Rakudo version 2019.03.1-228-g0c80e0676 - MoarVM version 2019.03-97-g8fef19994

[09:21] <|Tux|> csv-test-xs-20      0.426 -  0.430

[09:21] <|Tux|> csv-ip5xs           0.688 -  0.700

[09:21] <|Tux|> test-t --race       0.749 -  0.810

[09:21] <|Tux|> test-t              1.703 -  1.871

[09:21] <|Tux|> csv-ip5xs-20        5.742 -  6.034

[09:21] <|Tux|> test                7.148 -  7.370

[09:21] <|Tux|> test-t-20 --race    8.687 -  9.598

[09:21] <|Tux|> csv-parser         21.820 - 22.082

[09:21] <|Tux|> test-t-20          27.614 - 31.080

[10:25] <lizmat> m: my @a = <a b c>; dd @a.reverse>>.uc

[10:25] <evalable6> lizmat, rakudo-moar 0c80e0676: OUTPUT: «("C", "B", "A")␤»

[10:25] <lizmat> m: my @a = <a b c>; dd @a .reverse>>.uc   # huh ?

[10:25] <evalable6> lizmat, rakudo-moar 0c80e0676: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/bxC4LGRXw9␤Missing << or >>␤at /tmp/bxC4LGRXw9:1␤------> 03my @a = <a b c>; dd @a .reverse>>.08⏏04uc   # huh ?␤»

[10:25] <lizmat> apparently, if we have a " ." in a chain, then any hypering will not compile  :-(

[10:26] <lizmat> m: dd <a b c> .reverse>>.uc   # golfed

[10:26] <evalable6> lizmat, rakudo-moar 0c80e0676: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/zyDYIhMVeI␤Missing << or >>␤at /tmp/zyDYIhMVeI:1␤------> 03dd <a b c> .reverse>>.08⏏04uc   # golfed␤»

[10:26] <lizmat> m: dd <a b c>.reverse>>.uc   # golfed

[10:26] <evalable6> lizmat, rakudo-moar 0c80e0676: OUTPUT: «("C", "B", "A")␤»

[10:28] <lizmat> bisectable6: dd <a b c> .reverse>>.uc 

[10:28] <bisectable6> lizmat, On both starting points (old=2015.12 new=0c80e06) the exit code is 1 and the output is identical as well

[10:28] <bisectable6> lizmat, Output on both points: «04===SORRY!04=== Error while compiling /tmp/Oi2LaDcc1w␤Missing << or >>␤at /tmp/Oi2LaDcc1w:1␤------> 03dd <a b c> .reverse>>.08⏏04uc ␤»

[10:28] <lizmat> been there a long time already then

[10:31] <lizmat> https://github.com/rakudo/rakudo/issues/2855

[10:38] <kawaii> https://github.com/rakudo/rakudo/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Ablocker

[10:38] <kawaii> if no one else objects, once moarvm and nqp are ready I'll cut a release with these issues outstanding

[10:38] <kawaii> unless anyone wants to sneak in with PRs in the next day or so

[10:39] <lizmat> https://github.com/rakudo/rakudo/issues/2788 just needs tests

[10:39] <lizmat> it's been fixed already

[10:49] <lizmat> kawaii: tests added for R#2788, and closed ticket

[10:49] <kawaii> lizmat: thank you!

[10:59] *** patrickb left
[11:48] *** patrickb joined
[11:55] <patrickb> jnthn: I just merged #2842. I'd be interested if the problem of build runners failing / using installed files pops up again.

[12:11] <jnthn> patrickb: I'll have a look a little later on

[12:13] <kawaii> I'll go ahead and run the blin tests again jnthn

[13:00] <eaterof> m: say "🇿🇿🇦🇺🇿🇿".comb.perl

[13:00] <evalable6> eaterof, rakudo-moar ca322cf40: OUTPUT: «("🇿🇿", "🇦🇺", "🇿🇿").Seq␤»

[13:04] *** eaterof left
[13:05] *** eater joined
[13:31] *** lizmat left
[13:34] *** lizmat joined
[13:41] *** lizmat left
[13:41] *** lizmat joined
[14:14] *** AlexDaniel joined
[14:28] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/04/23/2019-16-easter-down/

[14:30] *** lizmat left
[14:33] *** lizmat joined
[14:33] *** robertle left
[14:35] <timotimo> m: use NativeCall; my $buf = CArray[uint8].allocate(99); my $ptr = nativecast(Pointer[uint8], $buf); say $ptr; say $ptr + 10;

[14:35] <evalable6> timotimo, rakudo-moar 235f14cd5: OUTPUT: «NativeCall::Types::Pointer[uint8]<0x561d85d3efd0>␤94684799299546␤»

[14:35] *** robertle joined
[14:35] <timotimo> >_>

[14:35] <timotimo> m: use NativeCall; my $buf = CArray[uint8].allocate(99); my $ptr = nativecast(Pointer[uint8], $buf); say $ptr; say Pointer[uint8].new($ptr + 10);

[14:35] <evalable6> timotimo, rakudo-moar 235f14cd5: OUTPUT: «NativeCall::Types::Pointer[uint8]<0x555a6cc52560>␤NativeCall::Types::Pointer<0x555a6cc5256a>␤»

[14:35] <timotimo> weird that we'd have to do that

[14:37] <timotimo> d'oh, it doesn't keep the type there

[14:37] <timotimo> m: use NativeCall; my $buf = CArray[uint8].allocate(99); my $ptr = nativecast(Pointer[uint8], $buf); say $ptr; say nativecast(Pointer[uint8], $ptr + 10);

[14:37] <evalable6> timotimo, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) NativeCall::Types::Pointer[uint8]<0x555c03dec870>␤Native call expected retur…»

[14:37] <evalable6> timotimo, Full output: https://gist.github.com/704d1c7c23081228e72e464cde9276ab

[14:37] <timotimo> m: use NativeCall; my $buf = CArray[uint8].allocate(99); my $ptr = nativecast(Pointer[uint8], $buf); say $ptr; say nativecast(Pointer[uint8], Pointer.new($ptr + 10));

[14:37] <evalable6> timotimo, rakudo-moar 235f14cd5: OUTPUT: «NativeCall::Types::Pointer[uint8]<0x55771e5a0060>␤NativeCall::Types::Pointer[uint8]<0x55771e5a006a>␤»

[14:41] *** fake_space_whale joined
[15:36] *** patrickb left
[16:05] *** fake_space_whale left
[16:17] *** robertle left
[16:37] *** vrurg left
[16:38] *** vrurg joined
[16:39] *** lucasb joined
[17:02] *** lizmat left
[17:03] *** lizmat joined
[17:18] <nine> jnthn: this issue is still there, even after applying the :mixin fix https://github.com/rakudo/rakudo/issues/2856

[17:18] <yoleaux> 21 Apr 2019 19:56Z <patrickb> nine: If possible, please revert rakudobrew for now. This breaks perl6 on travis. A PR was already committed, but may take days. I also pinged tadzik.

[17:18] <yoleaux> 21 Apr 2019 20:13Z <patrickb> nine: Alternatively merging https://github.com/tadzik/rakudobrew/pull/135 is worth a try first.

[18:58] *** robertle joined
[19:16] <gfldex> timotimo: when wget-ting docs.perl6.wakelift.de I get a few 404. When that happens, there is a chance that the connection hangs forever. Whereby --no-http-keep-alive does not help.

[19:30] <timotimo> gfldex: we have perl6.org domains back

[19:33] <AlexDaniel> timotimo: but https://docs.perl6.org/ doesn't work

[19:34] <gfldex> the cert is pointing to the wrong domain

[19:39] <moritz> needs another letsencrypt run, I suppose

[19:40] <gfldex> Then it better run fast! :->

[19:43] <timotimo> ah, right!

[19:43] <timotimo> i didn't have the domains when i last ran that

[19:43] <timotimo> of course

[19:45] <timotimo> try now

[19:45] <timotimo> i don't know why modules.perl6.org starts with a 404

[19:45] <moritz> anything in the hypnotoad logs?

[19:46] <timotimo> Use of uninitialized value in string eq at /home/koto/modules.perl6.org/bin/../lib/ModulesPerl6/Controller/Dist.pm line 138.

[19:46] <timotimo> the only thing that looks like anything

[19:46] <timotimo> that seems to be markdown post-processing for images

[19:47] <timotimo> is morbo the command that starts hypnotoad or is that the wrong way to run the app?

[19:47] <moritz> morbo is the development server

[19:48] <timotimo> damn

[19:48] <moritz> hypnotoad is the production server

[19:48] <timotimo> but i set it to production (so that it can start at all)

[19:49] <moritz> timotimo: the update-modules.perl6.org script is meant to run as a cron job that first fetches some data, and then runs hypnotoad bin/ModulesPerl6.pl

[19:49] <timotimo> ah

[19:49] <timotimo> well, the server is a bit too weak to do the update, i believe?

[19:49] <moritz> I have no idea

[19:49] <timotimo> where does hypnotoad log to?

[19:52] <moritz> next to the binary, by default, I believe

[19:53] <timotimo> only a pidfile. it seems like it requires a "log" folder

[19:54] <timotimo> i have to start it in development mode probably to find out what it's doing

[19:55] <timotimo> oh, of course that won't work; PODRenderer doesn't exist

[19:56] <timotimo> None of these routes could generate a response for your GET request for //index.html, maybe you need to add a new one?

[19:56] <timotimo> that could be the problem, an extra slash

[19:57] *** epony left
[19:58] *** epony joined
[19:59] <timotimo> ok, cool, modules.perl6.org seems to be up again

[19:59] <timotimo> moritz: were you able to reach the hardware with your feet?

[20:03] <moritz> not yet, not at work today

[20:03] <timotimo> OK

[20:07] <timotimo> i'll also run the module db updater now

[20:37] *** robertle left
[20:47] <timotimo> [2019-04-23 20:42:31.26209] [11217] [info] Restarting app bin/ModulesPerl6.pl

[20:47] <timotimo> Starting hot deployment for Hypnotoad server 11036.

[20:47] <timotimo> [2019-04-23 20:42:33.06930] [11217] [info] Finished build 6pP+VgNm6RGw7nR6Ctwfdw==

[21:37] <gfldex> m: sub return-a-list( --> List:D ) { Nil }; for return-a-list() { say 'Should this happen?' }

[21:37] <evalable6> gfldex, rakudo-moar 235f14cd5: OUTPUT: «Should this happen?␤»

[21:37] <gfldex> I still don't like this. :)

[21:54] <timotimo> Nil and all Failure types are allowed to be returned always

[21:54] <ugexe> that is returning a bool

[21:55] <ugexe> oh nevermind i didn't ready the whole thing

[22:00] <gfldex> m: sub undefined-to-empty((Nil,)) { Empty }; dd undefined-to-empty(42);

[22:00] <evalable6> gfldex, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) Cannot unpack or Capture `42`.␤To create a Capture, add parentheses: \(...)␤…»

[22:00] <evalable6> gfldex, Full output: https://gist.github.com/f5159892c7550b0f43f429dd52dbabf8

[22:01] <gfldex> m: sub undefined-to-empty((Nil,)) { }; dd undefined-to-empty(42);

[22:01] <evalable6> gfldex, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) Cannot unpack or Capture `42`.␤To create a Capture, add parentheses: \(...)␤…»

[22:01] <evalable6> gfldex, Full output: https://gist.github.com/53edc1fa45ff6697c1b03ccfc47f3c80

[22:01] <gfldex> is that intentional?

[22:02] <gfldex> m: sub undefined-to-empty((Nil,)) { }; dd undefined-to-empty((42,));

[22:02] <evalable6> gfldex, rakudo-moar 235f14cd5: OUTPUT: «(exit code 1) Type check failed in binding to parameter '<anon>'; expected Nil but got Int (42)␤  in sub undefined-to-empty at /tmp/v_N9nQ99_0 line 1␤  in block <unit> at /tmp/v_N9nQ99_0 line 1␤␤»

[22:03] <gfldex> m: sub undefined-to-empty((Any,)) { }; dd undefined-to-empty((42,));

[22:03] <evalable6> gfldex, rakudo-moar 235f14cd5: OUTPUT: «Nil␤»

[22:48] *** lucasb left
[23:15] *** ufobat_ joined
[23:17] *** ufobat left
[23:39] *** AlexDani` joined
[23:41] *** AlexDaniel left
[23:52] *** TimToady_ is now known as TimToady

[23:52] *** TimToady left
[23:52] *** TimToady joined
