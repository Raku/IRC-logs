[00:00] *** reportable6 left
[00:00] *** pamplemousse joined
[00:01] *** reportable6 joined
[00:45] *** pamplemousse left
[01:19] *** Ven`` joined
[01:24] *** Ven`` left
[01:39] *** pamplemousse joined
[01:44] *** pamplemousse_ joined
[01:49] *** pamplemousse left
[01:55] <vrurg> It's alive! (c)Frankenstein

[02:14] *** pamplemousse_ left
[06:00] *** reportable6 left
[06:01] <AlexDaniel> kawaii: twice per commit would be great!

[06:02] <AlexDaniel> but yeah, if we can do it at least once a week, that's awesome

[06:02] *** reportable6 joined
[06:02] *** ChanServ sets mode: +v reportable6

[06:03] <Geth> ¬¶ problem-solving: AlexDaniel assigned to jnthn Issue "Perl" in the name "Perl 6" is confusing and irritating https://github.com/perl6/problem-solving/issues/81

[06:16] <lizmat> and so it begins

[06:17] *** lizmat left
[06:44] *** AlexDaniel left
[07:03] *** AlexDaniel joined
[07:50] *** AlexDaniel left
[08:42] *** AlexDaniel joined
[08:55] *** lizmat joined
[09:13] <Geth> ¬¶ problem-solving: FCO++ created pull request #82: Add my name to the list

[09:13] <Geth> ¬¶ problem-solving: review: https://github.com/perl6/problem-solving/pull/82

[09:16] <kawaii> I anticipate only the greatest of flame wars from that GH ticket

[09:19] *** Geth left
[09:19] *** Geth joined
[09:19] <Geth> ¬¶ problem-solving: kawaii++ created pull request #83: Adding kawaii to the reviewers list

[09:19] <Geth> ¬¶ problem-solving: review: https://github.com/perl6/problem-solving/pull/83

[09:19] <kawaii> cc: AlexDaniel ^

[09:22] *** lizmat left
[09:25] *** [TuxCM] joined
[09:26] <AlexDaniel> kawaii: pretty sure there we will be none and people will behave properly, this time :)

[09:27] <AlexDaniel> if you're referring to the ‚Äúperl¬†6‚Äù name ticket

[09:27] <kawaii> AlexDaniel: less fun but more productive probably :)

[09:28] <AlexDaniel> yes, it will be *much* less fun for those who like to scream :)

[09:28] <Geth> ¬¶ problem-solving: 6a52fafa65 | (Fernando Correa de Oliveira)++ (committed using GitHub Web editor) | README.md

[09:28] <Geth> ¬¶ problem-solving: Add my name to the list

[09:28] <Geth> ¬¶ problem-solving: review: https://github.com/perl6/problem-solving/commit/6a52fafa65

[09:28] <Geth> ¬¶ problem-solving: 1b4a81e0c3 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | README.md

[09:28] <Geth> ¬¶ problem-solving: Merge pull request #82 from FCO/patch-1

[09:28] <Geth> ¬¶ problem-solving: 

[09:28] <Geth> ¬¶ problem-solving: Add my name to the list

[09:28] <Geth> ¬¶ problem-solving: Welcome!

[09:28] <Geth> ¬¶ problem-solving: review: https://github.com/perl6/problem-solving/commit/1b4a81e0c3

[09:29] <AlexDaniel> that must be a mistake :)

[09:30] <Geth> ¬¶ problem-solving/revert-82-patch-1: 10b7c14384 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | README.md

[09:30] <Geth> ¬¶ problem-solving/revert-82-patch-1: Revert "Add my name to the list"

[09:30] <Geth> ¬¶ problem-solving/revert-82-patch-1: review: https://github.com/perl6/problem-solving/commit/10b7c14384

[09:30] *** Ven`` joined
[09:32] <Ven``> .tell sena_kun https://github.com/Altai-man/cro-ldap/blob/master/lib/Cro/LDAP/Client.pm6#L259

[09:33] *** Ven`` left
[09:37] <Geth> ¬¶ problem-solving: 4c72730d38 | (Aleks-Daniel Jakimenko-Aleksejev)++ | README.md

[09:37] <Geth> ¬¶ problem-solving: Revert "Merge pull request #82 from FCO/patch-1"

[09:37] <Geth> ¬¶ problem-solving: 

[09:37] <Geth> ¬¶ problem-solving: This reverts commit 1b4a81e0c31f3bb458347b3feab834bbca8d5ad5, reversing

[09:37] <Geth> ¬¶ problem-solving: changes made to 164f37f841186a4b678ad2fbc524ea42b4cdae5b.

[09:37] <Geth> ¬¶ problem-solving: review: https://github.com/perl6/problem-solving/commit/4c72730d38

[09:40] <Geth> ¬¶ problem-solving/merge-mishap: 7af1dfc3f9 | (Fernando Correa de Oliveira)++ (committed by Aleks-Daniel Jakimenko-Aleksejev) | README.md

[09:40] <Geth> ¬¶ problem-solving/merge-mishap: Add my name to the list

[09:40] <Geth> ¬¶ problem-solving/merge-mishap: review: https://github.com/perl6/problem-solving/commit/7af1dfc3f9

[09:44] <Geth> ¬¶ problem-solving: AlexDaniel++ created pull request #84: Add FCO to the list

[09:44] <Geth> ¬¶ problem-solving: review: https://github.com/perl6/problem-solving/pull/84

[09:47] <Geth> ¬¶ rakudo: 916243122b | (Stefan Seifert)++ | src/core/Encoding/Decoder/Builtin.pm6

[09:47] <Geth> ¬¶ rakudo: Skip consume-all-chars in BYTE_SUPPLY_DECODER after exceptions

[09:47] <Geth> ¬¶ rakudo: 

[09:47] <Geth> ¬¶ rakudo: If an exception was thrown during decoding of some bytes, the decoder

[09:47] <Geth> ¬¶ rakudo: will be in an invalid state. Calling consume-all-chars in the QUIT

[09:47] <Geth> ¬¶ rakudo: handler would only throw more exceptions that may show up in

[09:47] <Geth> ¬¶ rakudo: inappropriate places. So just don't attempt it at all.

[09:47] <Geth> ¬¶ rakudo: 

[09:47] <Geth> ¬¶ rakudo: Fixes t/spec/S32-io/IO-Socket-Async.t sometimes failing in a test

[09:47] <Geth> ¬¶ rakudo: following one about an invalid byte sequence.

[09:47] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/916243122b

[09:58] *** Ven`` joined
[10:01] *** Ven`` left
[10:07] <AlexDaniel> good news, github allows to change the minimum amount of reviewers to anything less than 100

[10:07] <AlexDaniel> :)

[10:08] <AlexDaniel> even though the dropdown options are only 1 ‚Ä¶ 6

[10:12] *** Ven`` joined
[10:12] *** Ven`` left
[10:21] *** AlexDaniel left
[10:24] *** AlexDaniel joined
[10:30] <kawaii> ah nice, you can spam everyone at once!

[10:31] <AlexDaniel> yes!

[10:31] <AlexDaniel> kawaii: there was this one time‚Ä¶ we had a squashathon‚Ä¶

[10:32] <AlexDaniel> kawaii: so I created a repo and github automatically subscribed everyone to it. Not a big deal, just some emails to 300+ people. No problem

[10:32] <AlexDaniel> kawaii: and then I populated the repo with tickets

[10:32] <kawaii> ah... oh... no

[10:33] <AlexDaniel> it was this: https://github.com/perl6/ecosystem-unbitrot/issues

[10:33] <AlexDaniel> I don't if github actually sent a ticket for every single issue, I'd expect them to have a limit of some sort

[10:33] <AlexDaniel> but there were complaints :)

[10:34] <AlexDaniel> don't know*

[10:34] <kawaii> Yes, if you're subscribed to a repo, you get an email for all of the new tickets and replies to them :)

[10:34] *** AlexDaniel is now known as `|AlexDaniel

[10:35] *** `|AlexDaniel is now known as AlexDaniel

[10:35] <AlexDaniel> kawaii: on the plus side, it was a great squashathon. A lot of contrtibutors :)

[10:35] <kawaii> So what you're saying is.... it's a good tactic for getting people active and making PRs? ;)

[10:38] <Kaiepi> shit i forgot to actually finish what i said i'd proofreed after waiting for my pullreq to get merged

[10:45] *** Ven`` joined
[10:51] *** Ven`` left
[10:54] *** Ven`` joined
[10:58] *** AlexDaniel left
[11:04] *** Ven`` left
[11:06] <[TuxCM]> Rakudo version 2019.07.1-126-g90ffa349c - MoarVM version 2019.07.1-72-g352ae27e4

[11:06] <[TuxCM]> csv-test-xs-20      0.429 -  0.439

[11:06] <[TuxCM]> csv-ip5xs           0.672 -  0.679

[11:06] <[TuxCM]> test-t --race       0.771 -  0.771

[11:06] <[TuxCM]> test-t              1.679 -  1.720

[11:06] <[TuxCM]> csv-ip5xs-20        5.137 -  5.360

[11:06] <[TuxCM]> test                7.154 -  7.205

[11:06] <[TuxCM]> test-t-20 --race    9.062 -  9.183

[11:06] <[TuxCM]> csv-parser         21.508 - 21.798

[11:06] <[TuxCM]> test-t-20          28.734 - 29.331

[11:10] <ugexe> great, another round of bike shedding 

[11:10] *** ugexe left
[11:16] *** Ven`` joined
[11:24] *** lizmat joined
[11:29] *** Ven`` left
[11:34] *** AlexDaniel joined
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:00] *** ChanServ sets mode: +v reportable6

[12:03] <Kaiepi> bisectable6, enum Foo of Int where <a b c>;

[12:03] <bisectable6> Kaiepi, Bisecting by output (old=2015.12 new=9162431) because on both starting points the exit code is 1

[12:04] <Kaiepi> wait i could've sworn that worked

[12:04] <bisectable6> Kaiepi, bisect log: https://gist.github.com/c3c31108decf98285e87e80ac21f994e

[12:04] <bisectable6> Kaiepi, (2017-11-28) https://github.com/rakudo/rakudo/commit/754664ed54aea24f9c9162002b6e68aadd311412

[12:04] <Kaiepi> oh oops

[12:04] <Kaiepi> m: enum Foo of Int <a b c>

[12:04] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§No such method 'set_of' for invocant of type 'Perl6::Metamodel::EnumHOW'. Did you mean 'set_rw'?‚ê§at <tmp>:1‚ê§¬ª

[12:04] <Kaiepi> bisectable6, enum Foo of Int <a b c>

[12:04] <bisectable6> Kaiepi, Bisecting by output (old=2015.12 new=9162431) because on both starting points the exit code is 1

[12:05] <bisectable6> Kaiepi, bisect log: https://gist.github.com/80989f3cb85f6a10658e62466f8a330b

[12:05] <bisectable6> Kaiepi, (2016-09-27) https://github.com/rakudo/rakudo/commit/222d16b0b94911fdedb06ee6ad817d0f14b9c05c

[12:06] <Kaiepi> guess not

[12:08] <Kaiepi> ohh this is what i was thinking of

[12:08] <Kaiepi> m: my Int enum Foo <a b c>; say a.value.WHAT

[12:08] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´(Int)‚ê§¬ª

[12:08] *** lizmat left
[13:02] *** AlexDaniel left
[13:10] *** lucasb joined
[13:19] *** AlexDaniel joined
[13:20] *** Ven`` joined
[13:23] *** AlexDaniel left
[13:36] *** Ven`` left
[13:40] *** Ven`` joined
[13:41] *** Ven`` left
[13:51] *** Ven`` joined
[13:52] *** AlexDaniel joined
[13:56] <Geth> ¬¶ problem-solving: AlexDaniel self-assigned Update Travis configuration so that it does not compile Rakudo every single time. https://github.com/perl6/problem-solving/issues/85

[13:56] <Geth> ¬¶ problem-solving: AlexDaniel assigned to jnthn Issue Core class version syntax https://github.com/perl6/problem-solving/issues/80

[13:58] *** pamplemousse joined
[13:59] *** Ven`` left
[14:07] *** AlexDaniel left
[14:08] *** lizmat joined
[14:55] *** lizmat left
[15:54] *** lizmat joined
[15:57] *** lizmat left
[17:27] <Kaiepi> is t/spec/S32-io/io-path-extension.t a known flapper?

[17:29] *** chloekek joined
[17:30] <Kaiepi> can't find anything in rakudo's issues about it so i'm guessing not

[17:52] *** pamplemousse left
[18:00] *** reportable6 left
[18:00] *** pamplemousse joined
[18:04] *** reportable6 joined
[18:04] *** ChanServ sets mode: +v reportable6

[18:10] *** MasterDuke joined
[18:15] *** pamplemousse left
[18:20] <MasterDuke> has anybody experimented with building rakudo, but not concatenating all the files into one?  is it required? or just done for performance reasons?

[18:25] *** BeastieBot left
[18:27] <vrurg> MasterDuke: Performance is one  thing. Another thing: it simplifies symbol resolution.

[18:28] * vrurg was thinking that rakudo needs a linking-like process for dynamic symbol resolution.

[18:29] <vrurg> But it's not currently possible without total revamp of the metamodel.

[18:30] <MasterDuke> if performance was the only consideration, not doing it may be the dogfood needed to get someone to parallelize compilation

[18:36] <vrurg> MasterDuke: I was thinking the same way. But I'm afraid it's not possible yet. Or would require unreasonable amount of work to be done.

[18:44] <MasterDuke> anyone else getting a consistent error in t/spec/S32-io/socket-recv-vs-read.t?

[18:44] <MasterDuke> at https://github.com/perl6/roast/blob/master/S32-io/socket-recv-vs-read.t#L27

[18:45] <MasterDuke> `No such method 'recv' for invocant of type 'Any'`

[18:48] <vrurg> Another io-related ticket just half an hour ago: https://github.com/rakudo/rakudo/issues/3115 ‚Äì doesn't seem related, but a strange coincidence then.

[18:49] <vrurg> MasterDuke: confirm, same problem.

[18:51] *** BeastieBot joined
[18:51] <MasterDuke> i'm running t/spec/S32-io/io-path-extension.t in a loop under gdb with spectests running in the background, but no segv yet

[18:52] <MasterDuke> but i think i did get a segv in t/spec/S07-hyperrace/basics.rakudo.moar in my background spectest. going to try and catch that one soon if t/spec/S32-io/io-path-extension.t isn't cooperating

[18:52] <timotimo> https://docs.perl6.org/type/atomicint#Operators - any specific reason the operators don't immediately point out their ascii counterparts

[18:53] <vrurg> I must admit, SEGVs are visiting my rather often lately. 

[18:54] <MasterDuke> i actually haven't seen many recently. i was mostly seeing them while profiling and a bunch of those have been addressed

[18:55] *** BeastieBot left
[18:55] *** BeastieBot joined
[19:00] *** BeastieBot left
[19:01] *** BeastieBot joined
[19:09] <MasterDuke> haven't been able to repro the t/spec/S07-hyperrace/basics.rakudo.moar one so far either

[19:10] *** pamplemousse joined
[19:15] <MasterDuke> huh. decided to see what happens if i unskip the fudged test in that file. it fails if run with .race, but not a crash

[19:16] <MasterDuke> m: use Test; is-deeply (^100).map({ sprintf '%1$s %2$s', 5, 42 }).List, ‚Äò5 42‚Äô xx 100

[19:16] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´ok 1 - ‚ê§¬ª

[19:17] <MasterDuke> m: use Test; is-deeply (^100).race(batch=>1).map({ sprintf '%1$s %2$s', 5, 42 }).List, ‚Äò5 42‚Äô xx 100

[19:17] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´A worker in a parallel iteration (hyper or race) initiated here:‚ê§  in sub _is_deeply at /home/camelia/rakudo-m-inst-1/share/perl6/core/sources/2D4A7CA10695CD2B374573413D261A660E282E2A (Test) line 665‚ê§  in sub is-deeply at /home/camelia/rakudo-m-in‚Ä¶¬ª

[19:18] <MasterDuke> `Died at:    Your printf-style directives specify 0 arguments, but 2 arguments were supplied      in block  at t/spec/S07-hyperrace/basics.t line 187`

[19:20] <MasterDuke> m: use Test; is-deeply (^100).race(batch=>1).map({ sprintf q|%1$s %2$s|, 5, 42 }).List, ‚Äò5 42‚Äô xx 100

[19:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´A worker in a parallel iteration (hyper or race) initiated here:‚ê§  in sub _is_deeply at /home/camelia/rakudo-m-inst-1/share/perl6/core/sources/2D4A7CA10695CD2B374573413D261A660E282E2A (Test) line 665‚ê§  in sub is-deeply at /home/camelia/rakudo-m-in‚Ä¶¬ª

[19:21] <MasterDuke> now that doesn't fail for me locally...

[19:22] <MasterDuke> it does in the test file, but not when run from the command line...

[19:32] *** BeastieBot left
[19:33] *** BeastieBot joined
[19:44] *** BeastieBot left
[19:45] *** BeastieBot joined
[19:47] <Kaiepi> how do i run only the tests in a specific directory in roast?

[19:52] <vrurg> Kaiepi: manually one-by-one. 

[19:52] <Kaiepi> damn, i was hoping one of the fudge scripts would automate it

[19:53] <vrurg> not that I found anything related. As far as I was patient enough to read the code, fudging works with the whole tree.

[19:54] <vrurg> I just do `make spectest`, break it when with the first test run (i.e. fudge is over by then) and then manually execute ./perl6-m -Ilib t/spec/S...

[19:58] *** BeastieBot left
[19:58] *** BeastieBot joined
[20:06] *** BeastieBot left
[20:07] *** BeastieBot joined
[20:11] *** BeastieBot left
[20:11] *** BeastieBot joined
[20:23] <dogbert17> the t/spec/S32-io/socket-recv-vs-read.t problem is interesting. It works on my Linux Mint but fails on my RPi 4

[20:25] <MasterDuke> dogbert17: maybe you can repro the two other problems, i haven't had any luck

[20:26] *** BeastieBot left
[20:27] <dogbert17> what two problems, the S07-hyperrace/basics.rakudo.moar and ?

[20:27] <MasterDuke> t/spec/S32-io/io-path-extension.t

[20:27] <dogbert17> aha, does it fail consistently for you or not at all?

[20:28] <MasterDuke> for me, not at all

[20:28] <dogbert17> I could give it a try at least

[20:28] <MasterDuke> S07-hyperrace/basics.rakudo.moar failed once or twice in a background spectest i was running just to load the system, but i couldn't repro when just running it

[20:30] <MasterDuke> ah, `use Test; is-deeply (^1000000).race(batch=>100).map({ sprintf q|%1$s %2$s|, 5, 42 }).List, ‚Äò5 42‚Äô xx 1000000` reliably fails for me on the command line. i needed to up the numbers

[20:31] <dogbert17> those are big numbers :)

[20:37] *** pamplemousse left
[20:51] <MasterDuke> is there any way to protect code with a lock in nqp?

[20:52] <timotimo> look in the nqp test suite

[20:52] <timotimo> it should test locks

[20:52] <MasterDuke> oh, and there's even a src/core/NQPLock.nqp

[20:53] <MasterDuke> i think sprintf isn't thread-safe because it compiles/evals the format string every time

[20:53] *** Kaiepi left
[20:54] *** Kaiepi joined
[20:54] <timotimo> oh

[20:55] <MasterDuke> does that make sense?

[20:57] <timotimo> possible

[20:58] *** chloekek left
[21:06] <MasterDuke> heh, `MoarVM panic: Tried to garbage-collect a locked mutex`, guess i did something wrong...

[21:08] <timotimo> unlock stuff before it goes out of scope

[21:11] <MasterDuke> https://gist.github.com/MasterDuke17/87f632b6b5c45af82a274961c2c5c941

[21:14] <timotimo> that makes it safe?

[21:14] <MasterDuke> that causes the panic

[21:15] <timotimo> or is that the version that explodes?

[21:15] <timotimo> why does DIRECTIVE go into the DIRECTIVES_COUNT key?

[21:15] <MasterDuke> i wanted to print it out

[21:15] <timotimo> ah

[21:15] <timotimo> that lock isn't going to do much

[21:16] <timotimo> it's never shared across threads

[21:16] <timotimo> you're always creating a new lock for every sprintf call

[21:16] <MasterDuke> heh, yeah, just noticed that and moved the Lock.new outside the sub

[21:16] <MasterDuke> ooooo, hasn't crashed yet

[21:19] <timotimo> only one thread is allowed to do sprintf at a time? that's kind of not great

[21:20] <MasterDuke> before, `use Test; is-deeply (^1000000).race(batch=>100).map({ sprintf q|%1$s %2$s|, 5, 42 }).List, ‚Äò5 42‚Äô xx 1000000` crashed instantly. after it succeeded

[21:20] <MasterDuke> and yeah, but so are crashes that don't make any sense

[21:20] <timotimo> yeah

[21:21] <timotimo> is $actions like shared between invocations? does it have any state at all?

[21:23] <MasterDuke> i don't think so, but i don't really know this code

[21:23] <timotimo> i want that stuff in the linkify userscript that lets me go from a diff file on gist to the target file on github

[21:23] <timotimo> because god damn that is annoying

[21:24] <MasterDuke> have an idea?

[21:27] <timotimo> having a hard time concentrating

[21:28] <timotimo> the cross_thread_wriet_log could be a thing

[21:30] <MasterDuke> how would it help? don't we already know that compiling isn't thread safe?

[21:32] <timotimo> compiling?

[21:32] <MasterDuke> or eval. whatever sprintf does

[21:32] <timotimo> it seems to be doing grammar parsing and action stuff?

[21:35] *** [TuxCM] left
[21:35] <MasterDuke> let me gist the output...

[21:36] *** lizmat joined
[21:36] <timotimo> it'll probably be a lot of false-positives still

[21:39] <MasterDuke> https://gist.github.com/MasterDuke17/58f8a7763dee5a4473f3aa223d29bfd3

[21:39] <MasterDuke> there's sprintf-related stuff there

[21:40] <MasterDuke> timotimo: btw, i don't have your linkifying script on this machine, how do i install it again?

[21:40] <timotimo> maybe rakudo's initialize-sprintf-handler should be properly locked

[21:41] <timotimo> https://gist.github.com/timo/7cfe71a667bbdfa0dbd1510431da45a4

[21:41] <timotimo> here's the script

[21:41] <timotimo> install greasemonkey or tampermonkey

[21:41] <timotimo> in the "dashboard" you'll find "tools" to get a script from an url

[21:41] <MasterDuke> thanks

[21:43] <timotimo> that initialize thingie doesn't do terribly much though. hmm.

[21:46] <timotimo> i don't see anything suspicious there, though

[22:07] <dogbert17> MasterDuke: have been running t/spec/S32-io/io-path-extension.t for like an hour, no crashes

[22:08] <MasterDuke> dogbert17: https://github.com/rakudo/rakudo/issues/3115#issuecomment-519699545

[22:11] <dogbert17> that's odd

[22:12] <MasterDuke> maybe it's bsd specific

[22:13] <dogbert17> it's not obvious why Nine's fix should have made anything worse, I would have guessed the opposite

[22:14] <MasterDuke> yeah

[22:14] <dogbert17> MasterDuke: have you had any problems with the heap profiler?

[22:14] <MasterDuke> i haven't used it in a long time

[22:15] <dogbert17> gah, I need something that breaks so I can test timotimo's fix

[22:15] <dogbert17> I only had one example and it seems to work now

[22:17] <Geth> ¬¶ rakudo: d7829b7751 | (Timo Paulssen)++ | src/Perl6/Optimizer.nqp

[22:17] <Geth> ¬¶ rakudo: Revert "Optimizer: Direct assignment between native vars don't need refs"

[22:17] <Geth> ¬¶ rakudo: 

[22:17] <Geth> ¬¶ rakudo: It causes problems with assigning to rw arguments. Need a way

[22:17] <Geth> ¬¶ rakudo: to find out if the declaration of the Var is scoped lexicalref or not.

[22:17] <Geth> ¬¶ rakudo: 

[22:17] <Geth> ¬¶ rakudo: Unfortunately, finding the Var in the Block's first Stmts is sometimes

[22:17] <Geth> ¬¶ rakudo: a bit of work.

[22:17] <Geth> ¬¶ rakudo: 

[22:17] <Geth> ¬¶ rakudo: This reverts commit 80bf3d003c1c464ac8663e86d9f8d93423e0a51e.

[22:17] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/d7829b7751

[22:17] <timotimo> i don't know of any fixes i might have made?

[22:18] <dogbert17> we discussed it yesterday, moving MVM_profile_heap_take_snapshot and MVM_profile_dump_instrumented_data up a bit in finish_gc

[22:19] <timotimo> oh, that

[22:20] <dogbert17> before https://github.com/MoarVM/MoarVM/blob/master/src/gc/orchestrate.c#L184 seems good, putting it after line 194 fails (I tested)

[22:23] <Geth> ¬¶ rakudo: vrurg self-assigned [WIP] 'no precompilation' is broken inside EVAL https://github.com/rakudo/rakudo/issues/3116

[22:26] *** lizmat_ joined
[22:30] *** lizmat left
[22:33] *** epony left
[23:47] *** lucasb left
