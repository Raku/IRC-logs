[00:18] *** discord61 joined
[00:18] *** discord61 left
[00:18] *** discord61 joined
[00:18] *** discord6 left
[00:19] *** discord61 is now known as discord6

[00:19] <vrurg> How could two role objects with same objectid and same nqp::where result in !$r1 =:= $r2 in nqp???

[00:19] <timotimo> may need to decont

[00:20] <vrurg> bingo, that's was my last guess and it worked! Thanks timotimo! 

[00:22] <timotimo> :)

[00:22] <vrurg> Actually, I thought that nqp::where would return container's address, not type object.

[00:24] <vrurg> Fighting 'is hidden' not being propagaded to class when role is puned...

[00:56] *** AlexDani` joined
[01:00] *** AlexDaniel left
[05:01] *** AlexDani` is now known as AlexDaniel

[05:01] *** AlexDaniel left
[05:01] *** AlexDaniel joined
[07:21] <Geth_> ¦ problem-solving/path-to-raku: 5 commits pushed by (Aleks-Daniel Jakimenko-Aleksejev)++

[07:21] <Geth_> ¦ problem-solving/path-to-raku: 4cad6d4da0 | Expand a bit on .t support

[07:21] <Geth_> ¦ problem-solving/path-to-raku: 71e94058ca | Add some examples of filenames

[07:21] <Geth_> ¦ problem-solving/path-to-raku: 7257d5e3d2 | Mention that the chosen extensions are final

[07:21] <Geth_> ¦ problem-solving/path-to-raku: e09f6c2857 | Add some basic reason why not use shorter extensions

[07:21] <Geth_> ¦ problem-solving/path-to-raku: 2d7b3f5a85 | Be less specific about module loading

[07:21] <Geth_> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/compare/51890ebe26d1...2d7b3f5a85ae

[07:33] <AlexDaniel> tbrowder: I'm not entirely sure. Something about making it dead obvious to tools and editors that it's a raku file, but it looks like we'll be supporting .t anyway, so it's weird. Moreover, .raku.t  is already supported, it's shorter, and you won't have to choose between two different extensions because .raku.t is basically both at the same time, so I'm currently unable to make a good point in favor of .rakutest

[07:36] <AlexDaniel> and even though nobody else is seriously using TAP, the idea of everyone coming up with a new extension for using it with a particular language is weird

[08:15] *** squashable6 left
[08:18] *** squashable6 joined
[08:18] *** ChanServ sets mode: +v squashable6

[08:57] *** chloekek joined
[09:04] *** chloekek left
[09:26] *** MasterDuke joined
[10:04] *** camelia left
[10:04] *** Geth left
[10:36] <lizmat> Files=1274, Tests=109501, 205 wallclock secs (26.64 usr  7.59 sys + 2885.58 cusr 251.64 csys = 3171.45 CPU)

[11:37] <Geth_> ¦ rakudo: 1d4c21d030 | (Elizabeth Mattijsen)++ | 2 files

[11:37] <Geth_> ¦ rakudo: Make .index quite a bit faster

[11:37] <Geth_> ¦ rakudo: 

[11:37] <Geth_> ¦ rakudo: Especially the Cool variants.  Mostly by making them share the same

[11:37] <Geth_> ¦ rakudo: proto and getting rid of the |c signature.

[11:37] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1d4c21d030

[11:49] <Geth_> ¦ rakudo: 6f5232f403 | (Elizabeth Mattijsen)++ | 2 files

[11:49] <Geth_> ¦ rakudo: Make .rindex quite a bit faster

[11:49] <Geth_> ¦ rakudo: 

[11:49] <Geth_> ¦ rakudo: Especially the Cool variants.  Mostly by making them share the same

[11:49] <Geth_> ¦ rakudo: proto and getting rid of the |c signature.

[11:49] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6f5232f403

[11:55] *** nine joined
[11:58] *** Geth joined
[11:58] *** camelia joined
[11:59] <nine> m: say "back up"

[11:59] <lizmat> back up

[11:59] <lizmat> :-)

[11:59] <nine> wait...what?

[11:59] *** ChanServ sets mode: +v camelia

[11:59] <camelia> rakudo-moar 17d036ad4: OUTPUT: «back up␤»

[12:00] <timotimo> elizabot?

[12:00] <lizmat> you rang?

[12:03] <Geth_> ¦ rakudo: 3697325c74 | (Elizabeth Mattijsen)++ | 2 files

[12:03] <Geth_> ¦ rakudo: Remove two unneeded "is copy"s

[12:03] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3697325c74

[12:24] <tbrowder> AlexDaniel: thnx. i'm happy with the raku name, but not so happy about the LONG extensions.

[12:27] <Geth_> ¦ rakudo: 6297b0e465 | (Elizabeth Mattijsen)++ | 2 files

[12:27] <Geth_> ¦ rakudo: Make .comb quite a bit faster

[12:27] <Geth_> ¦ rakudo: 

[12:27] <Geth_> ¦ rakudo: Especially the Cool variants.  Mostly by making them share the same

[12:27] <Geth_> ¦ rakudo: proto and getting rid of the |c signature.

[12:27] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6297b0e465

[12:30] <tbrowder> for my 2 cents worth, having looked over the years at the duplication of file extensions on the various lists one can find, the fact that our chosen extension might be the same as another wouldn' bother me. and i've often had to change file associations on $windows so that wouldn't bother me, either.

[12:33] <tbrowder> i say define them to benefit us, the actual users. it may be confusing to non-raku users, but maybe that would be a marketing payoff.

[12:35] *** lucasb joined
[12:38] <tbrowder>  btw, in raku-speak, nqp could be thought of as "not quite public" or "not quite pretty".

[12:39] <tbrowder> not quite prevalent

[12:39] <tbrowder> not quite polished

[12:41] <tbrowder> not quite presentable

[12:42] <tbrowder> i like that last one best. describes it quite well.

[12:43] <tbrowder> but, to insiders: notably quite powerful

[12:44] <lizmat> not quite pottery

[12:45] <lizmat> but I guess we decided that nqp will just be "nqp"

[12:45] <AlexDaniel> tbrowder: they're annoyingly long, yes, but nobody seems to be interested in trying to even think about resolving that

[12:45] <AlexDaniel> instead there's a push to just ignore that and move on

[12:45] <lizmat> AlexDaniel: many people (me included) is worn out on these types of discussions

[12:46] <tbrowder> sorry, i couldn't resist

[12:47] <lizmat> *are

[12:47] <AlexDaniel> I totally understand that, but I'm not sure if it means that we should just go with any almost random extensions

[12:48] <tbrowder> but it could be put up for public discussion and voting could it not?

[12:48] <lizmat> FWIW, I think it was a mistake for jnthn to force a decision on that as part of #89

[12:49] <lizmat> *I* don't care anymore what comes out of the extension decision

[12:50] <lizmat> I was going to go out about now anyway, so please don't take my afk as anything else

[12:50] <lizmat> afk&

[12:51] <AlexDaniel> lizmat: first I agreed with the decision, but now that I think about it, people won't be able to change their filenames right after the rename anyway…

[12:52] <AlexDaniel> and there's quite some time till 6.e to make that decision separately

[12:52] <AlexDaniel> I mean, to decide which extensions

[12:52] <tbrowder> my last comment: when my grandson gets introduced to raku, he will probably like shorter extensions, especially when most windows users (most students in us system) don't see them, or even think much about them.

[12:54] <AlexDaniel> tbrowder: there was some voting, but it was so quick I didn't even make up my mind https://github.com/perl6/problem-solving/issues/106#issuecomment-531986666

[12:54] <AlexDaniel> like, I voted “both long and short” but I wouldn't do that now

[12:54] <AlexDaniel> and even that I changed, initially I was for long extensions

[12:55] <lucasb> hehe, what a mess

[12:55] <tbrowder> yes, it was quick and not so public

[12:57] <tbrowder> got to go, but a bit more discussion on #perl6 imho is warranted

[12:57] <AlexDaniel> I'm currently trying to at least document what's going to happen, see the latest edits here: https://github.com/perl6/problem-solving/pull/89#issuecomment-536044546

[12:57] <AlexDaniel> but honestly I still quite disoriented

[12:58] <AlexDaniel> like, maybe the long extensions as well as .rakutest are the best possible things we can have, but nobody ever explained why so

[12:58] <AlexDaniel> and now I'm learning that both .t and .rakutest will be supported? Or not? I don't know, I'm very confused

[12:59] <AlexDaniel> I also don't know if both were supported and I had a choice, which one would I use? I hate having to choose tbh

[14:58] <Geth_> ¦ nqp: c05b600f19 | (Timo Paulssen)++ | src/vm/moar/HLL/Backend.nqp

[14:58] <Geth_> ¦ nqp: profiler: one line per statement like earlier versions

[14:58] <Geth_> ¦ nqp: 

[14:58] <Geth_> ¦ nqp: comma had been assuming "one line is one statement", and

[14:58] <Geth_> ¦ nqp: since the files aren't meant to be read by humans anyway,

[14:58] <Geth_> ¦ nqp: this is the easiest fix.

[14:58] <Geth_> ¦ nqp: review: https://github.com/perl6/nqp/commit/c05b600f19

[15:22] <[Tux]> Rakudo version 2019.07.1-365-g6297b0e46 - MoarVM version 2019.07.1-243-g1546c8c4d

[15:22] <[Tux]> csv-test-xs-20      0.431 -  0.437

[15:22] <[Tux]> csv-ip5xs           0.786 -  0.790

[15:22] <[Tux]> test-t --race       0.839 -  0.890

[15:22] <[Tux]> test-t              1.735 -  1.762

[15:22] <[Tux]> csv-ip5xs-20        6.345 -  6.438

[15:22] <[Tux]> test                6.910 -  7.205

[15:22] <[Tux]> test-t-20 --race    9.287 -  9.667

[15:22] <[Tux]> csv-parser         22.454 - 22.474

[15:22] <[Tux]> test-t-20          29.497 - 30.733

[15:35] *** cognomin_ joined
[15:38] *** cognominal left
[15:54] *** greppable6 left
[15:56] *** greppable6 joined
[16:00] *** greppable6 left
[16:02] *** greppable6 joined
[16:02] *** ChanServ sets mode: +v greppable6

[16:17] *** greppable6 left
[16:22] *** greppable6 joined
[17:24] <lucasb> 6c: for 1|2|3 { .say }

[17:24] <committable6> lucasb, https://gist.github.com/0aba2f59030c549091d58498ced0abab

[17:24] <lucasb> bisectable6: for 1|2|3 { .say }

[17:24] <bisectable6> lucasb, Bisecting by output (old=2015.12 new=6297b0e) because on both starting points the exit code is 0

[17:25] <bisectable6> lucasb, bisect log: https://gist.github.com/ac61c81e6828a0d04d7c60ba2ba1edf9

[17:25] <bisectable6> lucasb, (2017-06-15) https://github.com/rakudo/rakudo/commit/9b0b9effe5fee1f35497cf97a5e7bda9bb083507

[17:25] <lucasb> ^^ info for R#3198

[17:25] <synopsebot> R#3198 [open]: https://github.com/rakudo/rakudo/issues/3198 for any 1

[17:26] <AlexDaniel> ouch

[17:28] <AlexDaniel> lucasb: you'll leave a comment, right?

[17:29] <AlexDaniel> I almost feel like I've seen that issue before…

[17:34] <lucasb> AlexDaniel: done :)

[17:35] <AlexDaniel> thanks :)

[19:19] <vrurg> AlexDaniel: what confuses you in support of both .rakutest and .t? As if we don't have .t6 already. 

[19:22] <AlexDaniel> vrurg: well, the point of .rakutest was that for editors and tools it'll be so much easier to support it, right? Yet .t will need to be supported anyway, so we're not exactly making it easier?

[19:23] <AlexDaniel> ok, users might have slightly better experience with .rakutest, or at least that's the argument, but in terms of dev time it's same

[19:23] <vrurg> AlexDaniel: we do. If I develop in vim – I can use .t in my project. If I develop in something else where .t is treated wrongfully – I choose .rakutest.

[19:23] <vrurg> The point is make user's life easier, yes.

[19:31] *** MasterDuke left
[20:02] *** MasterDuke joined
[21:21] *** cognominal joined
[21:25] *** cognomin_ left
[21:30] <Geth_> ¦ rakudo: vrurg++ created pull request #3199: [WIP] Implement perl6/problem-solving#103

[21:30] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3199

