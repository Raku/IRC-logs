[03:23] <Geth> ¦ nqp: 825c2182a2 | (Nick Logan)++ (committed using GitHub Web editor) | src/vm/js/nqp-runtime/io.js

[03:23] <Geth> ¦ nqp: Add mostly functional uname op for js backend

[03:23] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/825c2182a2

[03:35] <Geth> ¦ nqp/ugexe-patch-2: 6fff8dff3e | (Nick Logan)++ (committed using GitHub Web editor) | src/vm/js/nqp-runtime/core.js

[03:35] <Geth> ¦ nqp/ugexe-patch-2: [js] Implement cpucores

[03:35] <Geth> ¦ nqp/ugexe-patch-2: review: https://github.com/perl6/nqp/commit/6fff8dff3e

[03:35] <Geth> ¦ nqp: ugexe++ created pull request #524: [js] Implement cpucores

[03:35] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/524

[06:19] *** robertle left
[07:50] *** robertle joined
[07:51] *** ufobat joined
[08:42] *** ExtraCrispy left
[09:29] <|Tux|> Rakudo version 2019.03.1-47-g76b6416d0 - MoarVM version 2019.03-35-gd15906711

[09:29] <|Tux|> csv-test-xs-20      0.434 -  0.440

[09:29] <|Tux|> csv-ip5xs           0.708 -  0.715

[09:29] <|Tux|> test-t --race       0.774 -  0.869

[09:29] <|Tux|> test-t              1.718 -  1.756

[09:29] <|Tux|> csv-ip5xs-20        6.215 -  6.234

[09:29] <|Tux|> test                6.904 -  7.059

[09:29] <|Tux|> test-t-20 --race    9.240 -  9.578

[09:29] <|Tux|> csv-parser         21.843 - 22.621

[09:29] <|Tux|> test-t-20          29.823 - 30.705

[09:29] <|Tux|> NICE!

[10:10] *** ufobat_ joined
[10:13] *** ufobat left
[10:33] <Geth> ¦ rakudo: 4825f31e29 | (Elizabeth Mattijsen)++ | t/08-performance/03-corekeys.t

[10:33] <Geth> ¦ rakudo: Add test for strays in CORE::

[10:33] <Geth> ¦ rakudo: 

[10:33] <Geth> ¦ rakudo: This in relation to R#2773

[10:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4825f31e29

[10:42] <AlexDaniel> 6c: .say if .starts-with(‘$’) for CORE::.keys

[10:42] <AlexDaniel>  

[10:42] <committable6> AlexDaniel, https://gist.github.com/b8a7d21dbcd862299df3878e070507f0

[10:44] <AlexDaniel> 6c: .say if .starts-with(‘$’) for CORE::.keys.sort

[10:44] <committable6> AlexDaniel, https://gist.github.com/ce0f13234a00ec50cdfea559a89c6d86

[10:46] <AlexDaniel> lizmat: it's a great test to have

[10:46] <AlexDaniel> btw, are these wanted?

[10:46] <AlexDaniel> m: say $CORE_METAOP_ASSIGN

[10:46] <camelia> rakudo-moar 76b6416d0: OUTPUT: «(Mu)␤»

[10:46] <AlexDaniel> m: say $RAKUDO-VERBOSE-STACKFRAME

[10:46] <camelia> rakudo-moar 76b6416d0: OUTPUT: «0␤»

[10:46] <lizmat> yeah... looking at some of those atm

[10:46] <lizmat> m: dd Signally   # say what ?

[10:46] <camelia> rakudo-moar 76b6416d0: OUTPUT: «Signally␤»

[10:47] <lizmat> that is *definitely* an implementation detail that doesn't need to be exposed

[10:56] <Geth> ¦ rakudo: 45eb1c5f34 | (Elizabeth Mattijsen)++ | 2 files

[10:56] <Geth> ¦ rakudo: Simplify "Signally" and move it from CORE::

[10:56] <Geth> ¦ rakudo: 

[10:56] <Geth> ¦ rakudo: By moving it into the Signal package

[10:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/45eb1c5f34

[11:09] *** epony left
[11:38] <Geth> ¦ rakudo: ed074cd17f | (Elizabeth Mattijsen)++ | 2 files

[11:38] <Geth> ¦ rakudo: Remove $RAKUDO-VERBOSE-STACKFRAME from CORE::

[11:38] <Geth> ¦ rakudo: 

[11:38] <Geth> ¦ rakudo: Keep marker inside the Backtrace class, accessible by a method.  This also

[11:38] <Geth> ¦ rakudo: gets rid of one more race-condition "once".  Also internally use the

[11:38] <Geth> ¦ rakudo: RAKUDO_VERBOSE_STACKFRAME rather than RAKUDO-VERBOSE-STACKFRAME, so that

[11:38] <Geth> ¦ rakudo: it matches the environment variable's name.

[11:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ed074cd17f

[11:59] <moritz> Hi there, does everybody get an email from CircleCE for every single push to rakudo?

[11:59] <moritz> I've just opted out on CircleCI, but I think nobody benefits from a CI that is red all the time

[12:01] * lizmat hasn't seen any mail

[12:02] <jnthn> Me either

[12:09] <moritz> maybe I got them because I created the org account

[12:09] <moritz> ugexe: did you build the circleci integration?

[12:15] <Geth> ¦ rakudo: 6599998c2c | (Elizabeth Mattijsen)++ | src/core/PseudoStash.pm6

[12:15] <Geth> ¦ rakudo: Revert PsuedoStash part of 5540212cfc8805f869ce

[12:15] <Geth> ¦ rakudo: 

[12:15] <Geth> ¦ rakudo: Fixes R#2775, although it is unclear as to why it fixes that.

[12:15] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6599998c2c

[12:28] *** AlexDaniel left
[12:29] <lizmat> m: my constant Range := Range but role { method foo { "foo" } }; dd Range.foo; dd (^10).foo   # somehow I'd expect both to work

[12:29] <camelia> rakudo-moar ed074cd17: OUTPUT: «"foo"␤No such method 'foo' for invocant of type 'Range'␤  in block <unit> at <tmp> line 1␤␤»

[12:37] *** epony joined
[13:16] <jnthn> lizmat: prefix:<^> is declared in CORE.setting, so it sees the lexical Range in there.

[13:20] <lizmat> ah, duh  :-)

[13:22] *** lucasb joined
[13:24] <tobs> lizmat++ # 2773

[13:24] <tobs> m: $p.Map

[13:24] <camelia> rakudo-moar 6599998c2: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$p' is not declared␤at <tmp>:1␤------> 3<BOL>7⏏5$p.Map␤»

[13:25] <tobs> I think https://github.com/rakudo/rakudo/issues/2366 can be closed then as well.

[13:25] <tobs> (uhh, maybe I should add this to the actual GH issue)

[13:26] * lizmat closed 2366]

[13:26] *** AlexDaniel joined
[13:26] <tobs> too fast for me :)

[13:27] <AlexDaniel> m: say CLIENT::.keys

[13:27] <camelia> rakudo-moar 6599998c2: OUTPUT: «GLOBAL can have no client package␤  in block <unit> at <tmp> line 1␤␤»

[14:03] <Geth> ¦ rakudo: 801850319a | (Elizabeth Mattijsen)++ | 3 files

[14:03] <Geth> ¦ rakudo: Remove $CORE_METAOP_ASSIGN from CORE::

[14:03] <Geth> ¦ rakudo: 

[14:03] <Geth> ¦ rakudo: Basically make &METAOP_ASSIGN a front for R:I.METAOP_ASSIGN, on the

[14:03] <Geth> ¦ rakudo: assumption that current optimizing techniques will inline that call

[14:04] <Geth> ¦ rakudo: pretty quickly when needed.  Also, maybe we should codegen a call to

[14:04] <Geth> ¦ rakudo: R:I.METAOP_ASSIGN directly, rather than to &METAOP_ASSIGN.

[14:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/801850319a

[14:09] <lizmat> m: dd CORE::<&await>.WHICH; dd SETTING::<&await>.WHICH   # looks like we have an &await in CORE:: as well as in SETTING::, and they're different

[14:09] <camelia> rakudo-moar 6599998c2: OUTPUT: «ObjAt.new("Sub|38266400")␤ObjAt.new("Sub|35297312")␤»

[14:09] <lizmat> the core one I understand, the SETTING:: one I don't

[14:39] *** mgoebel_ joined
[14:46] *** brrt joined
[14:46] <brrt> ohai #perl6-dev

[14:56] <ugexe> moritz: i created the circle ci config file. thats it

[14:58] <ugexe> as far as circleci being red -- maybe its a sign that things are broke. i mean its almost like after a tests flaps for so long we are just pretending its not broke anymore

[14:58] <ugexe> *** Error in `/home/circleci/project/install/bin/moar': free(): invalid pointer: 0x000000000789cd64 ***

[15:00] <ugexe> otherwise nobody is benefiting from those flapping tests period -- CI be damned

[15:00] *** MasterDuke left
[15:00] <ugexe> i agree the emails are annoying though -- i just dont know anything about it

[15:03] <ugexe> there are organizational settings but i am not a rakudo org admin and thus cannot view the on circleci

[15:04] <ugexe> ok i think it might just be you and me moritz. go to Workflows > (settings gear icon by rakudo row) > Overview > Unfollow Project

[15:05] <ugexe> or you can go under your account settings and change the general Notification Settings

[15:09] <moritz> ugexe: I've unsubscribed from the notifications; I just don't see the value of a CI if the results are unreliable, nobody seems to investigate them, and nobody can use it as signal for anything

[15:09] <moritz> we're just wasting energy

[15:09] <ugexe> then the test itself is unreliable

[15:10] <ugexe> *** Error in `/home/circleci/project/install/bin/moar': free(): invalid pointer: 0x000000000789cd64 ***

[15:10] <moritz> but is anybody doing anything about it?

[15:11] <ugexe> well i assume no. so our differences are around how flappers are seen period.

[15:11] <ugexe> but if something is allowed to fail constantly in a given situation, why have the test

[15:11] <moritz> my question is more: is anybody using the pipeline, at all?

[15:12] <moritz> if not, it's just carbon emissions without any reason

[15:12] <ugexe> travisci is essentially dead. so the question is do we want CI at all? i would assume yes

[15:13] <moritz> I'd assume so as well, but the current state of the pipeline is an indication of the contrary

[15:13] <ugexe> its especially useful on windows (which everyone also ignores but me I think) to find when exactly someone broken it

[15:14] <moritz> but we don't run any windows tests with circleci

[15:15] <ugexe> ...correct

[15:15] <ugexe> you are saying travis is good because it passes. im telling you circleci is good because its failing.

[15:15] <moritz> I'm not saying travis is good

[15:15] <ugexe> well, the alternative is no CI? i would say that is bad

[15:16] <moritz> I'm saying that I don't see anybody using the results of circleci, so it's a waste of resources

[15:16] <ugexe> i dont see anyone using any of the CI we have honestly

[15:16] <ugexe> i know i do, but thats me

[15:16] <moritz> so, you *do* use it

[15:17] <moritz> that's the first piece of new information from this conversation

[15:17] <moritz> then we have one user, and I'll shut up

[15:18] *** patrickb joined
[15:32] <patrickb> o/

[15:33] <patrickb> I'd like to get my relocatability branches merged. It's these:

[15:33] <patrickb> https://github.com/MoarVM/MoarVM/pull/1053

[15:33] <patrickb> https://github.com/perl6/nqp/pull/520

[15:33] <patrickb> https://github.com/rakudo/rakudo/pull/2693

[15:33] <patrickb> I have some free time in the coming days to do fixes for whatever might pop up as a result of the changes.

[15:33] <patrickb> I can do a rebase if that makes a difference. (Can I do that without trashing the PR?)

[15:33] <patrickb> Are there any objections? What can I do to make the merge happen?

[15:34] <ugexe> do whatever makes it easiest on me and i'll do it tonight if no one else does or objects

[15:35] <ugexe> well, i cant do the moarvm one

[15:37] <AlexDaniel> we should fix every single flapper

[15:37] <AlexDaniel> currently it's hard to see when we introduce new flappers because we have so many

[15:38] <ugexe> yeah i've ignored new legit test failures because they happened inside a test that usually flappers

[15:38] <ugexe> flaps rather

[15:38] <AlexDaniel> I've been marking the most annoying ones as blockers because they get in the way of the release process both for us and others (e.g. debian)

[15:39] <AlexDaniel> but there are too many and I shouldn't be abusing the label…

[15:39] <patrickb> ugexe: Was that directed at me?

[15:39] <ugexe> patrickb: yeah

[15:40] <patrickb> OK. I'll see if doing a rebase is possible.

[15:40] <patrickb> In the worst case I'll have to reopen the PR, but I guess we can live with that

[15:40] <ugexe> patrickb: i dont have commit privs to moarvm though so it'd probably end up being someoen with a commit bit to all 3 repos

[15:40] <AlexDaniel> I can merge all 3

[15:40] <AlexDaniel> this is the perfect time to merge this

[15:40] <AlexDaniel> releasable6: status

[15:40] <releasable6> AlexDaniel, Release manager is not specified yet.

[15:40] <releasable6> AlexDaniel, Next release in ≈31 days and ≈3 hours. 0 blockers. 0 out of 52 commits logged

[15:40] <releasable6> AlexDaniel, Details: https://gist.github.com/68aefd45b693e3525a04b6fa3e9cc3e4

[15:41] <patrickb> AlexDaniel: I can do the rebase in ~ 3h, will shout once I'm done...

[15:41] <AlexDaniel> patrickb: ok, sounds like a plan!

[15:42] *** kawaii joined
[15:43] <ugexe> fwiw though most projects have *some* flappers. so i wonder if make test couldn't be smart enough to retry a failed test file (since there should be no failures there should be very few retries for a given run)

[15:44] <ugexe> thats not to say we couldn't fix the flappers we do have

[15:45] <AlexDaniel> btw we don't even have a list of flappers anywhere

[15:45] <AlexDaniel> Zoffix used to send a message here whenever they stumbled upon one, and quotable6 was able to grep them all into a nice list

[15:46] <AlexDaniel> but this process no longer works because quotable6 doesn't know how to work with colabti

[15:46] <ugexe> it'd be nice to have something like todo/skip but for flap

[15:47] <AlexDaniel> quotable6: ZOFF?LOP

[15:47] <quotable6> AlexDaniel, OK, working on it! This may take up to three minutes (4582161 messages to process)

[15:48] <quotable6> AlexDaniel, 224 messages (2017-04-14⌁2018-04-28): https://gist.github.com/61e361a16d7bdcbda1f7bf1231503389

[15:50] <ugexe> i haven't seen S10 or S11 flops in a long time. that like half of them that might no longer be an issue

[15:50] <AlexDaniel> yes

[15:51] <AlexDaniel> I think some were fixed intentionally

[15:51] <AlexDaniel> so maybe we should file a ticket for everything that we stumble upon

[15:52] <AlexDaniel> some issues get much more fixable when there's a golf, so…

[16:04] <AlexDaniel> jnthn: can you add kawaii to the rakudo org? CLA was received 0 minutes ago

[16:11] <jnthn> AlexDaniel: Yeah

[16:12] <AlexDaniel> kawaii: please add yourself to release_guide.pod and CREDITS (once you have access)

[16:12] <kawaii> AlexDaniel: will do as soon at github email me about access to the organisation 

[16:12] <kawaii> as *

[16:13] <jnthn> Done

[16:24] <ugexe> m: role T { has $.a }; my $x = 1 does T(:z(:y(5))); $x.a.perl.say; # why isn't $.a = `z => y => 5` ?

[16:24] <camelia> rakudo-moar 801850319: OUTPUT: «:y(5)␤»

[16:25] <jnthn> ugexe: oops, that looks like a bug

[16:25] <jnthn> ugexe: Maybe an accident in which it processed it thinking it was going to be an arglist, but then it wasn't one.

[16:26] <jnthn> Then it was sufficiently rare to do that, that nobody noticed

[16:26] *** patrickb left
[16:27] <ugexe> ah. someone in #perl6 is curious why they couldnt do Foo(:$a, :$b) and it lead to this

[16:29] <jnthn> Yeah, so I see

[16:30] <jnthn> That's worth an issue; it's likely an easy fix

[16:42] *** mgoebel_ left
[16:48] *** robertle left
[16:53] <Geth> ¦ rakudo: 67594c0b39 | (Kane Valentine)++ (committed using GitHub Web editor) | CREDITS

[16:53] <Geth> ¦ rakudo: Update CREDITS

[16:53] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/67594c0b39

[16:54] <kawaii> AlexDaniel: CREDITS done, where in `release_guide.pod` am I editing?

[17:03] <lizmat> kawaii++   # welcome to the club!

[17:05] *** brrt left
[17:07] <kawaii> thank you!

[17:11] <samcv> [Tux], I'm curious if you can try out this and see what the speed results are https://github.com/MoarVM/MoarVM/pull/1072

[17:14] <samcv> after i do a forced push since i forgot some files that is

[17:20] *** ufobat_ left
[17:36] <samcv> done

[17:45] *** brrt joined
[17:51] *** vrurg left
[18:04] *** brrt left
[18:14] <ugexe> https://github.com/rakudo/rakudo/blob/master/src/core/Proc.pm6#L178

[18:15] <ugexe> should spawning a blocking process use a special scheduler that has no max thread limit?

[18:15] <ugexe> seems like that would solve https://stackoverflow.com/questions/55265176/why-dont-all-the-shell-processes-in-my-promises-start-blocks-run

[18:16] <ugexe> because by saying i want to spawn a new blocking process i don't care about *thread* limits

[18:16] <ugexe> or something

[18:17] <jnthn> Uh, if you're using `start` blocks you are already dealing in threads?

[18:19] <jnthn> But seriously, if juggling so many that the limit is reached, it's way past time to be using Proc::Async instead.

[18:20] <jnthn> dinner &

[18:23] <|Tux|> samv, run started

[18:30] *** lucasb left
[18:31] *** patrickb joined
[18:39] <|Tux|> Rakudo version 2019.03.1-53-g67594c0b3 - MoarVM version 2019.03-35-gd15906711

[18:39] <|Tux|> csv-test-xs-20      0.433 -  0.437

[18:39] <|Tux|> csv-ip5xs           0.716 -  0.720

[18:39] <|Tux|> test-t --race       0.795 -  0.915

[18:39] <|Tux|> test-t              1.770 -  1.889

[18:39] <|Tux|> csv-ip5xs-20        6.267 -  6.437

[18:39] <|Tux|> test                6.964 -  7.431

[18:40] *** leont joined
[18:40] <|Tux|> test-t-20 --race    9.213 - 10.268

[18:40] <|Tux|> csv-parser         22.994 - 23.290

[18:40] <|Tux|> test-t-20          29.747 - 31.861

[18:40] <|Tux|> and I am *not* working from home. I'll be at $work till ± 01:30

[18:45] <AlexDaniel> kawaii: like this: https://github.com/rakudo/rakudo/commit/c07cfe7af7641200269fdbdfd34d89e12ff94748#diff-01d7d2ce6e8cbcc8dc9b9c2282598a8f

[18:56] <Geth> ¦ rakudo: 0cc563c870 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/releasable/Sakefile

[18:56] <Geth> ¦ rakudo: Add releasable Sakefile

[18:56] <Geth> ¦ rakudo: 

[18:56] <Geth> ¦ rakudo: It is ugly and somewhat unfinished, but it does the job. In fact, I've

[18:56] <Geth> ¦ rakudo: used it for every single release that I did. It is flexible enough to

[18:56] <Geth> ¦ rakudo: cut point releases.

[18:56] <Geth> ¦ rakudo: 

[18:56] <Geth> ¦ rakudo: Use with care, and tweak it to your liking.

[18:56] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/0cc563c870

[18:57] <AlexDaniel> kawaii: see this ↑

[19:00] <AlexDaniel> kawaii: it's a weird piece of work… Once it was good enough to cut releases I stopped working on it, so… uh… yeah, it's ugly

[19:01] <AlexDaniel> but it worked great, at least for me. You decide what to do with it

[19:01] <AlexDaniel> patrickb: so? :)

[19:01] <patrickb> I'm on it.

[19:07] <kawaii> AlexDaniel: alright alright, just heading out for dinner right now but I shall take a look over later :)

[19:07] <AlexDaniel> kawaii: cool. I can explain what that thing does whenever you feel ready

[19:11] *** vrurg joined
[19:22] <tbrowder> AlexDaniel: (1) thnx for all your work as release manager, (2) i wish for you smooth sailing with thesis, and (3) sorry i didn't notice impact of doc portion of recent grant request

[19:22] <kawaii> AlexDaniel: what timezone are you by the way? I need to know when I can pester you with questions :)

[19:23] <AlexDaniel> tbrowder: thank you, thank you! Don't worry about (3), maybe I'm wrong after all

[19:23] <AlexDaniel> kawaii: I don't know

[19:23] <AlexDaniel> kawaii: see this https://github.com/AlexDaniel/orgsleep

[19:23] <AlexDaniel> my body has a timezone of its own

[19:25] <tbrowder> no, i think that is a valid concern given how much work by the community, esp. jj, to contunually improve the whole doc system and content.

[19:26] <tbrowder> we don't need indepent competition

[19:26] <tbrowder> *independent

[19:27] <AlexDaniel> kawaii: and if you think that there's a stable pattern somewhere, here's the latest graph: https://imgur.com/a/SErYWu7

[19:27] <patrickb> AlexDaniel: I rebased all three branches.

[19:27] <patrickb> The PRs seem to have understood it right

[19:27] <AlexDaniel> kawaii: so please just bug me 24/7 :)

[19:28] <patrickb> AlexDaniel: I also did another compile and short sanity test. All seems well.

[19:29] <patrickb> So pulling can proceed from my side.

[19:30] <AlexDaniel> pretty sure we want to have a bump before merging it, so…

[19:30] <AlexDaniel> ah, already bumped, huh?

[19:31] <patrickb> I rebased all three branches onto current master

[19:32] <AlexDaniel> yeah, but here's what I'm thinking… chances are that most of these commits will be unbisectable, so we probably want to do bumps before the merge too, right?

[19:32] <patrickb> Ah. Yes, a bump would be a good idea.

[19:33] <AlexDaniel> ah, now that I checked, the last one was 4 days ago and there are no important commits after that

[19:33] <AlexDaniel> I think we're good

[19:36] <Geth> ¦ nqp: e3bc18d291 | (Patrick Sebastian Zimmermann)++ (committed by Patrick Böker) | tools/build/install-moar-runner.pl

[19:36] <Geth> ¦ nqp: Make nqp startup script relocatable on linux.

[19:36] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/e3bc18d291

[19:36] <Geth> ¦ nqp: c5aec55873 | (Patrick Böker)++ | tools/build/install-moar-runner.pl

[19:36] <Geth> ¦ nqp: Remove an unused argument.

[19:36] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/c5aec55873

[19:36] <Geth> ¦ nqp: 2dad1fcbbf | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | tools/build/install-moar-runner.pl

[19:36] <Geth> ¦ nqp: Merge pull request #520 from patzim/reloc

[19:36] <Geth> ¦ nqp: 

[19:36] <Geth> ¦ nqp: Relocatable NQP

[19:36] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/2dad1fcbbf

[19:36] <Geth> ¦ rakudo/master: 37 commits pushed by (Patrick Böker)++, (Aleks-Daniel Jakimenko-Aleksejev)++

[19:36] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/0cc563c87098...7a3f468d2c48

[19:37] <AlexDaniel> and a bump is coming too…

[19:39] <AlexDaniel> weekly: Relocatable! patrickb++'s work was merged https://github.com/MoarVM/MoarVM/pull/1053 https://github.com/perl6/nqp/pull/520 https://github.com/rakudo/rakudo/pull/2693

[19:39] <notable6> AlexDaniel, Noted!

[19:39] <patrickb> Whoot!

[19:39] <patrickb> Now hoping the fallout won't be too big

[19:40] <AlexDaniel> kawaii: good luck!

[19:41] <AlexDaniel> patrickb: now that I think about it… are there any tests?

[19:42] <patrickb> None I wrote.

[19:42] <patrickb> Not sure how to test this actually.

[19:42] <patrickb> One would have to move the entire installation...

[19:42] <AlexDaniel> I understand it may be hard to test, but then what is preventing me from breaking it tomorrow… :)

[19:44] <patrickb> Hm...

[19:45] <AlexDaniel> Geth: HELLO?

[19:47] *** Geth left
[19:47] *** Geth joined
[19:47] *** ChanServ sets mode: +v Geth

[19:47] <AlexDaniel> ok, Geth is refusing to announce the bump, for whatever reason

[20:06] *** robertle joined
[20:20] <DrForr> m: grammar foo { token A { 'a' }; token TOP { <A > }; }; say foo.parse("a");

[20:20] <yoleaux> 19 Mar 2019 22:14Z <jnthn> DrForr: 'fraid it'll be at least a week before I've time to look at that

[20:20] <camelia> rakudo-moar e20dcc4e9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Null regex not allowed␤at <tmp>:1␤------> 3r foo { token A { 'a' }; token TOP { <A 7⏏5> }; }; say foo.parse("a");␤»

[20:22] <DrForr> .tell jnthn No worries at all, it's by no means crucial and I might even be able to provide you a patch when I've got some spare tuits myself.

[20:22] <yoleaux> DrForr: I'll pass your message to jnthn.

[20:25] <DrForr> <'A'> does work and I might just use that formulation, but this feels a touch misleading.

[20:27] *** ggoebel left
[20:31] <DrForr> m: grammar foo { token A { 'a' }; token TOP { <'A' #`{..}> }; }; say foo.parse("a");

[20:31] <camelia> rakudo-moar e20dcc4e9: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter < (must be quoted to match literally)␤at <tmp>:1␤------> 3mar foo { token A { 'a' }; token TOP { <7⏏5'A' #`{..}> }; }; say foo.parse("a");␤Unrecognized regex metacharacter ' (must be qu…»

[20:31] <DrForr> m: grammar foo { token A { 'a' }; token TOP { <'A'> }; }; say foo.parse("a");

[20:31] <camelia> rakudo-moar e20dcc4e9: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter < (must be quoted to match literally)␤at <tmp>:1␤------> 3mar foo { token A { 'a' }; token TOP { <7⏏5'A'> }; }; say foo.parse("a");␤Unrecognized regex metacharacter ' (must be quoted to…»

[20:32] <DrForr> Huh, the last one behaves differently on my system...

[20:32] <DrForr> Oh, no, it doesn't, my bad.

[20:33] <DrForr> Sorry 'bout the noise.

[20:34] <DrForr> I still think it's LTA that <A > throws a "Null regex" error rather than "failed to find regex 'foo '" or something similar.

[20:44] <DrForr> (this is probably my misunderstanding in general, but the error confused me, even knowing the rules surrounding the fact that <..> is for barewords, it's probably just a weird consequence of those rules.

[20:44] <DrForr> )

[21:04] *** travis-ci joined
[21:04] <travis-ci> Rakudo build failed. Aleks-Daniel Jakimenko-Aleksejev '[NQP Bump] Brings 5 commits

[21:04] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/509107828 https://github.com/rakudo/rakudo/compare/7a3f468d2c48...e20dcc4e9892

[21:04] *** travis-ci left
[21:22] <lizmat> hmmm...  rakudo doesn't build on MacOS

[21:22] <lizmat> clang: error: invalid argument '-install_name @rpath/libmoar.dylib' only allowed with '-dynamiclib'

[21:27] <lizmat> adding "-dynamiclib" manually seems to create a perl6, but "make test" completely fails

[21:28] <lizmat> however, running test-files separately with perl6, they seem to work

[21:28] <vrurg> lizmat: are you compiling with XCode or GNU?

[21:28] <lizmat> XCode

[21:28] <lizmat> clang

[21:29] <vrurg> hm, same here. Just finished with moar. 

[21:30] <vrurg> It compiles for me. Did you re-run Configure.pl?

[21:31] <lizmat> yes

[21:31] <lizmat> perl Configure.pl --gen-moar --make-install

[21:34] <lizmat> vrurg: are you running on Mojave ?

[21:34] <vrurg> lizmat: yes

[21:34] <lizmat> weird

[21:34] <lizmat> 10.14.3 I presume ?

[21:35] <ugexe> do you not need to --gen-moar=master --gen-nqp=master ?

[21:35] <vrurg> Ok, here it goes. Yes, perl6 fails.

[21:35] <lizmat> didn't need to before just nonw

[21:36] <ugexe> oh nqp was already bumped

[21:36] <vrurg> You probably already have master because the problem is likely to be caused by recent merge of relocatable moar.

[21:36] <lizmat> ugexe: yeah, the problem is in the final ste[

[21:36] <lizmat> *step

[21:38] <ugexe> broke on windows too it seems -- https://ci.appveyor.com/project/rakudo/rakudo/builds/23233535/job/0fb3d65ojpx8waug#L1096

[21:38] <vrurg> It is probably a discrepancy in options used to build moar and the debug runner.

[21:38] <patrickb> ugh

[21:41] <ugexe> patrickb: you were asking how to create a test -- perhaps adding the neccesary `mv rakudo/ && perl6 -e 'say 1'` to .travis.yml .appveyor and .circleci/

[21:46] <patrickb> I will try to reproduce the windows build error (I do have a windows available).

[21:47] *** leont left
[21:54] <vrurg> patrickb: wild guess: rakudo's Configure.pl must include moar::ldshared and moar::ldrpath_relocatable at line 322.

[21:54] * vrurg is gonna test it.

[21:58] <patrickb> vrurg did you test with a completely clean build? - You actually managed to build and run the branch successfully some time ago. I'm unsure what changed until then...

[21:58] <vrurg> patrickb: the point is that I was only testing moar, not the whole chain. :(

[21:58] <patrickb> hm...

[21:59] <vrurg> lack of time, you know...

[21:59] <vrurg> I'm testing my guess now.

[21:59] <patrickb> Actually I tested it on the mac of a friend. I don't have it quickly available though. :-)

[21:59] <patrickb> :-(

[22:00] <vrurg> NP. And done. It compiles.

[22:01] <vrurg> lizmat: did you try just make test or make spectest?

[22:02] <lizmat> both...  but lemme double check to be sure

[22:02] <vrurg> make test passed

[22:03] <lizmat> aahhh  I know what I did wrong

[22:04] <lizmat> after hacking in "-dynamiclib" into the Makefile, I didn't do a "make install" but just a "make"

[22:04] <vrurg> I think I have it fixed. Waiting for the spectest to pass.

[22:04] <lizmat> with the "-dynamiclib" hacked in, and "make install" run, it all seems to work ok

[22:07] <patrickb> lizmat did you change Configure.pl in the rakudo repo the way vrurg did?

[22:07] <lizmat> no, I hacked the generated Makefile

[22:07] <lizmat> basically I did what the error message told me  :-)

[22:08] <vrurg> Gimme a couple of minutes to complete the spectest and I'll generate a PR

[22:09] <lizmat> vrurg++

[22:17] <vrurg> It would take longer – need to test norelocatable too.

[22:17] <patrickb> vrurg: The problem is backwards.

[22:18] <patrickb> the problem isn't the -dynamiclib being missing

[22:18] <patrickb> it's that "-install_name @rpath/libmoar.dylib" shouldn't be there

[22:20] * lizmat tries that

[22:20] *** km1 joined
[22:21] <vrurg> patrickb: why so? I would expect all binaries to be compiled using same or similar options.

[22:21] <vrurg> Otherwise there be incompatibilities lurking.

[22:21] <patrickb> that flag is necessary for compiling the shared library

[22:21] *** km1 left
[22:21] <patrickb> but not to compile the executable needing that library

[22:22] <patrickb> vrurg: Could you compare the build line for "moar" in the moar repo with the one building the perl6 runner?

[22:22] * vrurg didn't check what exactly is being compiled. 

[22:23] * lizmat confirms that perl6 builds ok without "-install_name @rpath/libmoar.dylib"

[22:23] <patrickb> They should be basically identical

[22:25] <vrurg> -O3 -DNDEBUG -Wl,-rpath,@executable_path/../lib – this is for moar.

[22:26] <vrurg> Basically, @moar::ccshared@ @rakudoshared@ must be removed from the Makefile-Moar.in then.

[22:28] <vrurg> This basically obsoletes rakudoshared bacuse it is only used for the runners.

[22:28] <patrickb> huh?

[22:28] <patrickb> It's needed for libmoar

[22:29] <lizmat> afk&

[22:29] <patrickb> It's not needed for the moar *executable* and the perl6 runners

[22:30] <patrickb> vrurg: Could you try reverting efb35b003fab51a74f71592729761df8ab61010f in the rakudo repo and changing nothing else?

[22:32] <vrurg> patrickb: Makefile-Moar.in is rakudo's template, not moar's. The template is only using rakudoshared to build runners.

[22:33] <patrickb> ah

[22:33] <patrickb> then we are talking about the same thing

[22:33] <vrurg> Gonna try reverting the commit now.

[22:33] <patrickb> that commit introduced that

[22:36] <vrurg> Comipled, testing now.

[22:36] <vrurg> Looks ok.

[22:37] *** leont joined
[22:37] <patrickb> Great!

[22:38] <patrickb> vrurg: Thanks for your quick rescue!

[22:38] <patrickb> lizmat: You too!

[22:38] <vrurg> patrickb: welcome! Let me test norelocatable too.

[22:40] <vrurg> I won't be completing all the spectests. Most of them have passed ok.

[22:47] <vrurg> patrickb: non-relocatable passed tests too. I've started spectest but isn't foreseeing any problems with it. 

[22:47] <patrickb> Great

[22:47] <patrickb> Can you commit this?

[22:48] <vrurg> patrickb: no. I don't have permissions.

[22:48] <vrurg> Lizmat can. Shall I create a PR? Or you will?

[22:49] <patrickb> If you do it'd be great.

[22:51] <vrurg> Ok. 

[22:54] <Geth> ¦ rakudo: vrurg++ created pull request #2777: Fix for failing build on macOS

[22:54] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2777

[22:59] <patrickb> Thank you!

[23:00] <vrurg> patrickb: you too!

[23:05] <patrickb> I'm off to bed. Will look at the windows failure tomorrow.

[23:05] <patrickb> o/

[23:05] *** patrickb left
[23:12] <Geth> ¦ rakudo: f9aebab539 | (Vadim Belman)++ | 2 files

[23:12] <Geth> ¦ rakudo: Revert "First try on fixing the build on Mac."

[23:12] <Geth> ¦ rakudo: 

[23:12] <Geth> ¦ rakudo: This reverts commit efb35b003fab51a74f71592729761df8ab61010f.

[23:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f9aebab539

[23:12] <Geth> ¦ rakudo: 68c2c9fea1 | (Nick Logan)++ (committed using GitHub Web editor) | 2 files

[23:12] <Geth> ¦ rakudo: Merge pull request #2777 from vrurg/fix_Configure_for_relocatable

[23:12] <Geth> ¦ rakudo: 

[23:12] <Geth> ¦ rakudo: Fix for failing build on macOS

[23:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/68c2c9fea1

