[00:07] <Geth> ¦ rakudo: a5b9fc2de5 | (Nick Logan)++ | 2 files

[00:07] <Geth> ¦ rakudo: Fix thread safety of some state variables

[00:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a5b9fc2de5

[03:06] *** AlexDani` joined
[03:07] *** p6bannerbot sets mode: +v AlexDani`

[03:10] *** AlexDaniel left
[05:48] *** hankache joined
[05:49] *** p6bannerbot sets mode: +v hankache

[05:49] *** lizmat left
[06:00] *** lizmat joined
[06:00] *** p6bannerbot sets mode: +v lizmat

[06:04] *** lizmat left
[06:20] *** hankache left
[06:50] *** AlexDani` is now known as AlexDaniel

[10:03] *** lizmat joined
[10:03] *** p6bannerbot sets mode: +v lizmat

[10:04] <lizmat> Files=1264, Tests=88011, 377 wallclock secs (20.31 usr  6.16 sys + 2667.83 cusr 230.70 csys = 2925.00 CPU)

[10:06] * lizmat is glad he doesn't have to do -> int $_ in benchmarks anymore to prevent a Scalar allocation each iteration

[10:08] <nine> progress :)

[10:56] *** ilmari_ left
[10:56] *** tyil[m] left
[10:56] *** AlexDaniel` left
[11:08] *** AlexDaniel` joined
[11:08] *** p6bannerbot sets mode: +v AlexDaniel`

[11:29] *** tyil[m] joined
[11:29] *** ilmari_ joined
[11:29] *** p6bannerbot sets mode: +v ilmari_

[11:29] *** p6bannerbot sets mode: +v tyil[m]

[12:51] *** MasterDuke joined
[12:52] *** p6bannerbot sets mode: +v MasterDuke

[13:00] *** MasterDuke left
[13:10] *** lucasb joined
[13:10] *** p6bannerbot sets mode: +v lucasb

[13:50] <jnthn> lizmat: It wasn't a Scalar allocation, it was a boxing of the native Int :)

[14:20] *** [Tux] joined
[14:21] *** p6bannerbot sets mode: +v [Tux]

[14:57] <[Tux]> Rakudo version 2018.12-157-ga5b9fc2de - MoarVM version 2018.12-13-g473324ee3

[14:57] <[Tux]> csv-test-xs-20      0.443 -  0.453

[14:57] <[Tux]> test-t --race       0.875 -  0.938

[14:57] <[Tux]> csv-ip5xs           1.002 -  1.032

[14:57] <[Tux]> test-t              1.965 -  1.966

[14:57] <[Tux]> test                7.578 -  8.447

[14:57] <[Tux]> csv-ip5xs-20        8.177 -  8.489

[14:57] <[Tux]> test-t-20 --race   10.047 - 10.102

[14:57] <[Tux]> csv-parser         23.615 - 25.448

[14:57] <[Tux]> test-t-20          31.843 - 35.607

[15:12] *** Ven`` joined
[15:13] *** p6bannerbot sets mode: +v Ven``

[15:16] *** lizmat left
[15:49] *** lucasb left
[16:04] *** pmurias joined
[16:04] *** p6bannerbot sets mode: +v pmurias

[16:05] <pmurias> when precompiling scripts in rakudo.moarvm where do we want to store the precompiled result?

[16:25] <pmurias> nine: ping

[16:50] *** Ven`` left
[17:41] <nine> pmurias: I'd imagine the same precomp store as modules go?

[17:45] <pmurias> nine: even in the perl6-m foo.p6 case?

[17:48] <pmurias> nine: for modules the store depends where they are installed to, and use lib has it's own .precomp store right?

[18:05] <nine> We always store into $*REPO's precomp store, i.e. the head of the chain. Regardless where the actual source is coming from.

[18:06] *** lizmat joined
[18:06] *** p6bannerbot sets mode: +v lizmat

[18:06] <nine> This effectively prevents us from missing some dependency just because it was precompiled into a repo that's not in the current repo chain

[18:10] <pmurias> nine: so with scripts you think we should store in the $*REPO?

[18:11] <pmurias> nine: btw what has been stopping us from having precompilation of scripts?

[18:11] <nine> tuits ;)

[18:12] <nine> yes, store it in $*REPO's store

[18:14] <pmurias> getting moarvm compiled_script.moarvm needs more work arounds but loading from the main.nqp should avoid a lot of problem

[18:16] <pmurias> won't we get into problems with scripts filling up the store over time?

[18:19] *** patrickb joined
[18:20] *** p6bannerbot sets mode: +v patrickb

[18:42] <pmurias> nine: also why is CompUnit::PrecompilationRepository a repository? it doesn't keep track where things are store just takes care of precompilation right?

[18:45] <robertle> regarding precomp stores filling up over time: can't we use atime/mtime and have some sort of periodic cleanup? 

[18:48] <pmurias> we can, but it's something that likely should be kept in mind

[18:50] <lizmat> is there a reason why we don't / cannot have a Int.unival ?

[18:51] <lizmat> or a Str.unival ?

[18:51] <lizmat> ah, I guess I was thrown by the specificity of the error

[18:52] <lizmat> m: dd unival("a")

[18:52] <camelia> rakudo-moar a5b9fc2de: OUTPUT: «NaN␤»

[19:05] <pmurias> nine: I guess it's a repository for precompiled things

[19:06] <pmurias> nine: I think it would help readability of the CompUnit::* if the main roles had a textual description of what they do

[19:38] *** patrickb left
[20:07] <Geth> ¦ rakudo: 08ae9bfcff | (Elizabeth Mattijsen)++ | 3 files

[20:07] <Geth> ¦ rakudo: Streamline unival

[20:07] <Geth> ¦ rakudo: 

[20:07] <Geth> ¦ rakudo: - move logic to Int, as the basic logic operates on an Int

[20:07] <Geth> ¦ rakudo: - rewrite logic using state to logic using nqp::ifnull

[20:07] <Geth> ¦ rakudo: - add Str.unival method

[20:07] <Geth> ¦ rakudo: - adapt Cool.unival method accordingly

[20:07] <Geth> ¦ rakudo: - makes unival() more than 2x as fast

[20:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/08ae9bfcff

[20:10] <Geth> ¦ roast: 205a6fb543 | (Aleks-Daniel Jakimenko-Aleksejev)++ | integration/weird-errors.t

[20:10] <Geth> ¦ roast: Add a test for chain op miscompilation issue

[20:10] <Geth> ¦ roast: 

[20:10] <Geth> ¦ roast: Resolves rakudo/rakudo#1886.

[20:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/205a6fb543

[20:10] <synopsebot> RAKUDO#1886 [open]: https://github.com/rakudo/rakudo/issues/1886 [testneeded] Miscompilation (optimization) of chain ops

[20:13] <Geth> ¦ roast: 330ef1c34a | (Aleks-Daniel Jakimenko-Aleksejev)++ | integration/weird-errors.t

[20:13] <Geth> ¦ roast: Give the test its own block

[20:13] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/330ef1c34a

[20:17] <Geth> ¦ roast: Kaiepi++ created pull request #508: Add tests for R#2143

[20:17] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/508

[20:17] <synopsebot> R#2143 [open]: https://github.com/rakudo/rakudo/issues/2143 [Hacktoberfest][easy to resolve][good first issue][testneeded] Can't .gist/.Str/.perl Distribution::Resource:U

[20:19] *** lizmat left
[20:19] *** lizmat joined
[20:19] *** p6bannerbot sets mode: +v lizmat

[20:21] <Geth> ¦ roast: 9137a7dbd5 | (Elizabeth Mattijsen)++ | S15-unicode-information/unival.t

[20:21] <Geth> ¦ roast: Make unival tests less picky about how they die

[20:21] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/9137a7dbd5

[20:21] <Geth> ¦ roast: 1c121e979b | (Aleks-Daniel Jakimenko-Aleksejev)++ | integration/weird-errors.t

[20:21] <Geth> ¦ roast: Add test for segfaulting coercer

[20:21] <Geth> ¦ roast: 

[20:21] <Geth> ¦ roast: Resolves rakudo/rakudo#1374.

[20:21] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1c121e979b

[20:21] <synopsebot> RAKUDO#1374 [open]: https://github.com/rakudo/rakudo/issues/1374 [testneeded] SEGV with QAST tree in core Actions

[20:37] <Geth> ¦ rakudo: Kaiepi++ created pull request #2585: Add tests for R#2143

[20:37] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2585

[20:37] <synopsebot> R#2143 [open]: https://github.com/rakudo/rakudo/issues/2143 [Hacktoberfest][easy to resolve][good first issue][testneeded] Can't .gist/.Str/.perl Distribution::Resource:U

[20:40] <Geth> ¦ rakudo: f39be10cea | (Ben Davies)++ | t/02-rakudo/99-misc.t

[20:40] <Geth> ¦ rakudo: Add tests for R#2143

[20:40] <Geth> ¦ rakudo: 

[20:40] <Geth> ¦ rakudo: Fixes #2143

[20:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f39be10cea

[20:40] <Geth> ¦ rakudo: b20ff803d1 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | t/02-rakudo/99-misc.t

[20:40] <Geth> ¦ rakudo: Merge pull request #2585 from Kaiepi/squashathon

[20:40] <synopsebot> R#2143 [closed]: https://github.com/rakudo/rakudo/issues/2143 [Hacktoberfest][easy to resolve][good first issue][testneeded] Can't .gist/.Str/.perl Distribution::Resource:U

[20:40] <Geth> ¦ rakudo: 

[20:40] <Geth> ¦ rakudo: Add tests for R#2143

[20:40] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b20ff803d1

[20:45] <Geth> ¦ rakudo: 27332f0441 | (Elizabeth Mattijsen)++ | src/core/Cool.pm6

[20:45] <Geth> ¦ rakudo: unival() is the same for all backends but the jvm

[20:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/27332f0441

[21:13] <Geth> ¦ rakudo: 485dec4df7 | (Elizabeth Mattijsen)++ | src/core/Cool.pm6

[21:13] <Geth> ¦ rakudo: univals() is the same on all backends but the jvm

[21:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/485dec4df7

[21:15] *** chansen___ is now known as chansen

[21:16] *** pmurias left
[21:16] *** chansen is now known as chansen_

[21:46] <Geth> ¦ rakudo: 64c88f9198 | (Elizabeth Mattijsen)++ | 2 files

[21:46] <Geth> ¦ rakudo: univals() should be handled by Str.univals

[21:46] <Geth> ¦ rakudo: 

[21:46] <Geth> ¦ rakudo: - so add that

[21:46] <Geth> ¦ rakudo: - refer all others to Str.univals

[21:46] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/64c88f9198

[21:53] *** travis-ci joined
[21:53] *** p6bannerbot sets mode: +v travis-ci

[21:53] <travis-ci> Rakudo build passed. Elizabeth Mattijsen 'univals() is the same on all backends but the jvm'

[21:53] <travis-ci> https://travis-ci.org/rakudo/rakudo/builds/475807842 https://github.com/rakudo/rakudo/compare/27332f04418a...485dec4df7bb

[21:53] *** travis-ci left
[23:39] *** evalable6 left
[23:41] *** evalable6 joined
[23:41] *** p6bannerbot sets mode: +v evalable6

