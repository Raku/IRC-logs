[00:00] <lizmat> well, it feels to me that the implementor is not being tormented anough for the features that users can use

[00:00] <jnthn> Tough.

[00:00] <jnthn> The whole reason it was specified this way was to give us a chance to optimize things.

[00:00] <lizmat> if it is supposed to be only for dynamic variables, what use *are* the pseudo packages then?

[00:01] <jnthn> OUTER:: isn't restricted in that way

[00:01] <lizmat> doesn't that have similar issues ?

[00:01] <jnthn> No, because we can lexically see it is being used

[00:02] <jnthn> And make sure to preserve enough information to use it

[00:02] <lizmat> because at compile time you can already resolve it, is what you're saying ?

[00:03] <jnthn> Yes, or at least, at compile time we can see there's a use of OUTER:: and so not discard information we need in order to do late-bound lookups by name

[00:03] <lizmat> what about CLIENT:: ?

[00:04] <lizmat> especially if that's a different compilation unit ?

[00:05] <jnthn> Also would be restricted, though I think we'd want to make sure that sub decls are counted as implicitly dynamic, since much of the purpose of it is to find the operator definition of the CLIENT

[00:07] <jnthn> I think for modules that really want to monkey around, we can 1) provide a pragma for setting the default dynamicity of variables, and 2) providing the pragma export mechanism I previously discussed.

[00:07] <lizmat> pragma export is something we really need  :-)

[00:07] <jnthn> Then P5tie could just say "well actually, make everything `is dyanmic` so I can find and tie it by name"

[00:07] <lizmat> anyways, I'm too tired to think very straight....

[00:07] <lizmat> so see you tomorrow&

[00:07] <jnthn> 'night o/

[00:09] <japhb> .ask AlexDaniel Can you tell if the Cro::WebSocket test failure is a Rakudo regression?  (I assume there is some Blin magic to do that, but I've forgotten the incantation.)

[00:09] <yoleaux> japhb: I'll pass your message to AlexDaniel.

[00:24] <jnthn> sleep time, 'night o/

[00:28] <AlexDaniel> japhb: Cro::WebSocket – AlwaysFail

[00:28] <yoleaux> 00:09Z <japhb> AlexDaniel: Can you tell if the Cro::WebSocket test failure is a Rakudo regression?  (I assume there is some Blin magic to do that, but I've forgotten the incantation.)

[00:28] <AlexDaniel> not a regression, I think…

[01:55] *** titsuki_ joined
[01:56] *** p6bannerbot sets mode: +v titsuki_

[02:00] *** timotimo left
[02:00] *** titsuki left
[02:00] *** llfourn left
[02:04] *** llfourn joined
[02:05] *** p6bannerbot sets mode: +v llfourn

[02:08] *** timotimo joined
[02:08] *** p6bannerbot sets mode: +v timotimo

[02:08] *** lizmat left
[02:12] *** ufobat left
[02:54] <AlexDaniel> ohh, one is really easy

[02:54] <AlexDaniel> and is already fixed… cool :)

[02:54] * AlexDaniel found another module with .grep: { /foo/ }

[03:00] <releasable6> Next release in ≈1 day and ≈15 hours. 6 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[03:03] *** lizmat joined
[03:03] *** p6bannerbot sets mode: +v lizmat

[03:05] <AlexDaniel> hm, that's about it, actually

[03:44] *** squashable6 left
[03:48] *** squashable6 joined
[03:48] *** ChanServ sets mode: +v squashable6

[03:49] *** p6bannerbot sets mode: +v squashable6

[06:01] *** robertle left
[07:28] *** patrickb joined
[07:28] *** p6bannerbot sets mode: +v patrickb

[07:31] <patrickb> .tell nine Did you see https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2019-01-16#l95

[07:31] <yoleaux> patrickb: I'll pass your message to nine.

[07:38] *** patrickb left
[08:02] *** robertle joined
[08:03] *** p6bannerbot sets mode: +v robertle

[09:53] *** ufobat joined
[09:54] *** p6bannerbot sets mode: +v ufobat

[10:33] <lizmat> Files=1265, Tests=88043, 387 wallclock secs (20.65 usr  6.24 sys + 2755.24 cusr 239.02 csys = 3021.15 CPU)

[11:05] <jnthn> lizmat: Currently working on a `dynamic-scope` pragma; I'll for now have it switch on when we use /^P5/, but that means we should just be a pragma export mechanism away from a proper solution

[11:08] <jnthn> lizmat: Can confirm this already fixes P5tie :)

[11:08] <lizmat> jnthn++

[11:12] * jnthn wonders where the right place for pragma tests is...

[11:12] <jnthn> Hm, maybe just with the kind of feature it affects

[11:29] <Geth> ¦ rakudo: 871cbefc6f | (Jonathan Worthington)++ | src/Perl6/World.nqp

[11:29] <Geth> ¦ rakudo: Add a `dyanmic-scope` lexical pragma

[11:29] <Geth> ¦ rakudo: 

[11:29] <Geth> ¦ rakudo: This allows for specifying that:

[11:29] <Geth> ¦ rakudo: 

[11:29] <Geth> ¦ rakudo: * Without args, all variables declared in the scope the pragma applies

[11:29] <Geth> ¦ rakudo:   to will be automatically `is dynamic`

[11:29] <Geth> ¦ rakudo: * With args, the named variables declared in the scope the pragma

[11:29] <Geth> ¦ rakudo: <…commit message has 6 more lines…>

[11:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/871cbefc6f

[11:30] <Geth> ¦ rakudo: 88c46676c5 | (Jonathan Worthington)++ | src/Perl6/World.nqp

[11:30] <Geth> ¦ rakudo: Apply the dyanmic-scope pragma for `use P5*`

[11:30] <Geth> ¦ rakudo: 

[11:30] <Geth> ¦ rakudo: Thus extending the workaround we already have in place to keep those

[11:30] <Geth> ¦ rakudo: working until the proper mechanism for them to use is available. This

[11:30] <Geth> ¦ rakudo: fixes the P5tie regression reported in #2616.

[11:30] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/88c46676c5

[11:30] <Geth> ¦ roast: 600827736d | (Jonathan Worthington)++ | S02-names/dynamic-scope.t

[11:30] <Geth> ¦ roast: Add tests for `dynamic-scope` pragma

[11:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/600827736d

[11:33] <jnthn> Huh, it didn't report the commit adding that to spectest.data

[11:45] * nine just bought a Comma subscription for work!

[11:45] <yoleaux> 07:31Z <patrickb> nine: Did you see https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2019-01-16#l95

[11:51] <nine> tell patrickb I did. Will hopefully find some time for it later today

[11:53] *** [Tux] left
[12:01] *** [Tux] joined
[12:02] *** p6bannerbot sets mode: +v [Tux]

[12:02] *** robertle left
[12:03] <lizmat> jnthn: confirmed P5tie is clean again

[12:03] <jnthn> Yay :)

[12:04] *** robertle joined
[12:04] <timotimo> do we have an up-to-date blin or toaster run for the release?

[12:05] *** p6bannerbot sets mode: +v robertle

[12:05] <Geth> ¦ rakudo: 9295616422 | (Elizabeth Mattijsen)++ | src/core/Date.pm6

[12:05] <Geth> ¦ rakudo: Make sure $!daycount is nulled on subclasses of Date

[12:05] <Geth> ¦ rakudo: 

[12:05] <Geth> ¦ rakudo: The problem was that subclasses of Date do not use the fast-path creation of

[12:05] <Geth> ¦ rakudo: objects, but go through .bless.  This missed an important part of the

[12:05] <Geth> ¦ rakudo: initialization of $!daycount.  Fixes R#2615

[12:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9295616422

[12:07] <jnthn> timotimo: AlexDaniel++ did blin yesterday, which is where we have these various reports from

[12:09] <lizmat> m: class A is Date { }; my $a = A.new(q/2019-01-18/); dd $a.succ

[12:09] <camelia> rakudo-moar 8e002618f: OUTPUT: «Type check failed for return value; expected Int:D but got Int (Int)␤  in block <unit> at <tmp> line 1␤␤»

[12:09] <timotimo> i see all the committable invocations, but no gist with actual blin results at the moment

[12:10] <jnthn> Ah, I didn't see that either

[12:13] <Geth> ¦ roast: 529b04d2f5 | (Elizabeth Mattijsen)++ | S32-temporal/Date.t

[12:13] <Geth> ¦ roast: Add tests for R#2615

[12:13] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/529b04d2f5

[12:14] <timotimo> ha, whoops

[12:15] <timotimo> profiling the code that builds the flamegraph in moarperf froze my computer for a few minutes there

[12:17] <lizmat> bisectable6: class A is Array[Str] {}

[12:17] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=9295616) because on both starting points the exit code is 1

[12:18] <bisectable6> lizmat, bisect log: https://gist.github.com/0ca63181ecb8b067420aed07f21daa3a

[12:18] <bisectable6> lizmat, (2016-06-09) https://github.com/rakudo/rakudo/commit/b6902e5192929a733a37079d5dc414430078bc7d

[12:18] <Geth> ¦ tap-harness6/ufobat-patch-1: 194b1ebccd | (Martin Barth)++ (committed using GitHub Web editor) | bin/prove6

[12:18] <Geth> ¦ tap-harness6/ufobat-patch-1: fixed version in bin/prove6

[12:18] <Geth> ¦ tap-harness6/ufobat-patch-1: review: https://github.com/perl6/tap-harness6/commit/194b1ebccd

[12:19] <Geth> ¦ tap-harness6: ufobat++ created pull request #29: fixed version in bin/prove6

[12:19] <Geth> ¦ tap-harness6: review: https://github.com/perl6/tap-harness6/pull/29

[12:19] <lizmat> ok, been like that always

[12:36] <Geth> ¦ tap-harness6: 194b1ebccd | (Martin Barth)++ (committed using GitHub Web editor) | bin/prove6

[12:36] <Geth> ¦ tap-harness6: fixed version in bin/prove6

[12:36] <Geth> ¦ tap-harness6: review: https://github.com/perl6/tap-harness6/commit/194b1ebccd

[12:36] <Geth> ¦ tap-harness6: 4a4a8a0f21 | niner++ (committed using GitHub Web editor) | bin/prove6

[12:36] <Geth> ¦ tap-harness6: Merge pull request #29 from perl6/ufobat-patch-1

[12:36] <Geth> ¦ tap-harness6: 

[12:36] <Geth> ¦ tap-harness6: fixed version in bin/prove6

[12:36] <Geth> ¦ tap-harness6: review: https://github.com/perl6/tap-harness6/commit/4a4a8a0f21

[12:38] *** robertle left
[12:44] <ufobat> there is a version 0.0.6 of this module on cpan, which has a bug, the version 0.0.6 is not on github :-(

[12:45] *** dogbert2_ joined
[12:45] *** p6bannerbot sets mode: +v dogbert2_

[13:12] *** robertle joined
[13:12] *** p6bannerbot sets mode: +v robertle

[13:12] <Geth> ¦ rakudo: 35ecfc8e24 | (Elizabeth Mattijsen)++ | src/core/traits.pm6

[13:12] <Geth> ¦ rakudo: Make sure we parameterize parent specification

[13:12] <Geth> ¦ rakudo: 

[13:12] <Geth> ¦ rakudo: By adding a genetic trait handler that handles this case.  Fixes R#2611

[13:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/35ecfc8e24

[13:33] <[Tux]> Rakudo version 2018.12-236-g929561642 - MoarVM version 2018.12-35-gc001ce23c

[13:33] <[Tux]> csv-test-xs-20      0.438 -  0.444

[13:33] <[Tux]> csv-ip5xs           0.796 -  0.819

[13:33] <[Tux]> test-t --race       0.868 -  0.939

[13:33] <[Tux]> test-t              1.864 -  1.867

[13:33] <[Tux]> csv-ip5xs-20        6.893 -  7.011

[13:33] <[Tux]> test                7.491 -  7.591

[13:33] <[Tux]> test-t-20 --race   10.082 - 10.732

[13:33] <[Tux]> csv-parser         23.348 - 23.834

[13:33] <[Tux]> test-t-20          31.158 - 31.636

[13:38] <Geth> ¦ tap-harness6/master: 7 commits pushed by (Leon Timmermans)++

[13:38] <Geth> ¦ tap-harness6/master: 72e10c4e87 | Add version to module declaration

[13:38] <Geth> ¦ tap-harness6/master: b60f6067c4 | Make prove6 look for files recursively

[13:38] <Geth> ¦ tap-harness6/master: 98cb49bb96 | Fix handling of optional loading of colorizaton

[13:38] <Geth> ¦ tap-harness6/master: d10d41c2d3 | Sort META6.json

[13:38] <Geth> ¦ tap-harness6/master: 69b030ae08 | Bump to 0.0.5

[13:38] <Geth> ¦ tap-harness6/master: b0a86aa180 | Bump to 0.0.6 to fix packaging issue

[13:38] <Geth> ¦ tap-harness6/master: 26dba5673f | Only run files ending in .t

[13:38] <Geth> ¦ tap-harness6/master: review: https://github.com/perl6/tap-harness6/compare/4a4a8a0f2197...26dba5673f67

[14:00] <lizmat> s/genetic/generic/, duh

[14:02] <dogbert2_> genetic algorithms, impressive :)

[14:06] <Geth> ¦ roast: e58a55d5b9 | (Elizabeth Mattijsen)++ | S05-grammar/inheritance.t

[14:06] <Geth> ¦ roast: Add tests for R#2611

[14:06] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e58a55d5b9

[15:40] *** lizmat left
[16:19] <AlexDaniel> timotimo: everything is ticketed, no need for a gist

[16:22] <AlexDaniel> unless you want to see some irrelevant results :)

[16:30] *** MasterDuke joined
[16:30] *** p6bannerbot sets mode: +v MasterDuke

[16:30] *** MasterDuke left
[16:30] *** MasterDuke joined
[16:30] *** herbert.freenode.net sets mode: +v MasterDuke

[16:30] *** p6bannerbot sets mode: +v MasterDuke

[16:31] *** robertle left
[16:47] <AlexDaniel> hmmmmm huh

[16:47] <AlexDaniel> ===SORRY!=== Error while compiling /home/alex/.zef/store/uri.git/e5c85512db5446fa4f7a38e421170cd602a53dce/t/expected.txt

[16:48] <AlexDaniel> so zef attempted to execute a .txt file… maybe there's an issue with zef?

[16:54] <AlexDaniel> filed a ticket here: https://github.com/ugexe/zef/issues/286

[17:13] <ufobat> AlexDaniel, it's fixed already

[17:13] <AlexDaniel> oh, really?

[17:13] <ufobat> oh no, TAP::Harness fixed it, not sure if zef relies on prove6

[17:13] <AlexDaniel> 4 minutes ago :o

[17:14] <ufobat> https://github.com/perl6/tap-harness6/commit/26dba5673f670a71b4f66a817fbdc7d5cb03d765

[17:15] <AlexDaniel> ufobat: https://github.com/ugexe/zef/commit/e1da41a4a6bfd5ac68f78b930fe6c090e182efbb

[17:15] <AlexDaniel> :)

[17:19] <ufobat> yay :D

[17:33] *** dct joined
[17:33] *** p6bannerbot sets mode: +v dct

[17:36] *** lizmat joined
[17:36] *** p6bannerbot sets mode: +v lizmat

[17:48] <MasterDuke> i don't think there's been a MoarVM/NQP bump since the 1st, seems like now might be a good time

[18:05] <AlexDaniel> yeah, I've been trying for the last hour or so :)

[18:05] <lizmat> AlexDaniel: what's the problem ?

[18:05] <Geth> ¦ nqp: 73a1c59fdd | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/MOAR_REVISION

[18:05] <Geth> ¦ nqp: [MoarVM Bump] Brings 22 commits

[18:05] <Geth> ¦ nqp: 

[18:05] <Geth> ¦ nqp: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.12-13-g473324e...2018.12-35-gc001ce23c

[18:05] <Geth> ¦ nqp: c001ce23c fix declaration after code (thanks @dod38fr)

[18:05] <Geth> ¦ nqp: 2bc5ce7b8 Fix segfaults related to corrupted CStruct STables

[18:05] <Geth> ¦ nqp: 58caebf4f Use correct static frame in plugin resolution

[18:05] <Geth> ¦ nqp: 7fc6be108 Add a limit on spesh plugin guard set size

[18:05] <Geth> ¦ nqp: <…commit message has 18 more lines…>

[18:05] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/73a1c59fdd

[18:05] <Geth> ¦ nqp: version bump brought these changes: https://github.com/MoarVM/MoarVM/compare/2018.12-13-g473324e...2018.12-35-gc001ce23c

[18:05] <Geth> ¦ rakudo: 99d30be2a9 | (Aleks-Daniel Jakimenko-Aleksejev)++ | tools/build/NQP_REVISION

[18:05] <Geth> ¦ rakudo: [NQP Bump] 73a1c59fd [MoarVM Bump] Brings 22 c […]

[18:05] <Geth> ¦ rakudo: 

[18:05] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.12-59-g2178266...2018.12-60-g73a1c59fd

[18:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/99d30be2a9

[18:05] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.12-59-g2178266...2018.12-60-g73a1c59fd

[18:06] <AlexDaniel> lizmat: no problem now, had issues installing dependencies for the z script…

[18:07] <lizmat> AlexDaniel++

[18:07] * lizmat pulls and builds

[18:11] * japhb does the same

[18:13] <AlexDaniel> lizmat: how do you think, what can be done with https://github.com/rakudo/rakudo/issues/2618 ?

[18:14] <AlexDaniel> there's no license specified, so I don't think we can easily fork it…

[18:14] <AlexDaniel> also the module itself is a port of a p5 module, which also has no license

[18:14] <jnthn> I suspect PR is the best that can be done

[18:14] <lizmat> yeah, feels to me as well

[18:15] <AlexDaniel> there's a PR already

[18:15] <jnthn> "Sure, the tests might have passed previously, but installation itself would have always failed." - this also means nobody could possibly have installed it

[18:15] <AlexDaniel> ah, I see that the p5 module has this: “Released to the public domain by Paul Schlyter, December 1992”

[18:15] <AlexDaniel> but that doesn't help much

[18:15] <AlexDaniel> jnthn: yeah, not asking about the blocker, asking about the module itself :)

[18:16] <AlexDaniel> I also confirmed that indeed, it was not installable

[18:16] <jnthn> Ah, OK. Yeah, if there's no license then there's not much to be done short of the author being responsive to the PR and/or issue asking for license.

[18:17] <AlexDaniel> does anybody have access to perlpilot's repos, btw?

[18:19] *** robertle joined
[18:19] <jnthn> Oh, darn, I only just saw who the author is :(

[18:19] *** p6bannerbot sets mode: +v robertle

[18:20] <jnthn> Darn :(

[18:23] <AlexDaniel> I should've worked on this. I did help transferring Sake but at the time I didn't think about other modules…

[18:24] *** dct left
[18:26] * lizmat just got a hang in t/spec/S17-supply/syntax.t with spectest  :-(

[18:26] <AlexDaniel> lizmat: can you please ticket it?

[18:26] <lizmat> hasn't seen that in a *looong* time

[18:26] <lizmat> it's not repeatable

[18:27] <AlexDaniel> lizmat: but “not repeatable” how many thousands of runs do you have in mind? :)

[18:27] <lizmat> well, let's see: I don't think I've seen that in at least 3 months, at 10+ spectests on average a day...  close to a 1000 ?

[18:28] <lizmat> so one thousand

[18:28] <AlexDaniel> file a ticket, please :)

[18:28] <jnthn> dinner time, bbl

[18:28] <AlexDaniel> not saying it's a blocker, just saying it should be written down

[18:29] <lizmat> R#2621

[18:30] <AlexDaniel> btw there seems to be some movement to add .t6 extension support to things https://github.com/perl6/doc/issues/2576#issuecomment-455633515

[18:30] <AlexDaniel> zef already supports it, that's how that ticket came to be

[18:38] * lizmat sets of a few spectests and is off to dinner&

[18:48] *** [Coke] left
[18:48] *** [Coke] joined
[18:48] *** [Coke] left
[18:48] *** [Coke] joined
[18:48] *** p6bannerbot sets mode: +v [Coke]

[18:49] *** [Coke] left
[20:08] *** dct joined
[20:08] *** p6bannerbot sets mode: +v dct

[20:19] <lizmat> no hangs in 10 spectest runs.  About 1 random test file failing with No plan found in TAP output  :-(

[20:25] *** dct left
[20:25] *** AlexDaniel left
[20:26] *** AlexDaniel joined
[20:26] *** p6bannerbot sets mode: +v AlexDaniel

[20:28] *** j3nnn1 joined
[20:28] *** p6bannerbot sets mode: +v j3nnn1

[20:36] *** ufobat left
[20:42] *** MasterDuke left
[21:55] *** titsuki_ left
[22:07] <AlexDaniel> where's synopsebot ?

[22:09] *** synopsebot joined
[22:09] *** ChanServ sets mode: +v synopsebot

[22:10] * AlexDaniel fixed it

[22:10] *** p6bannerbot sets mode: +v synopsebot

[22:11] *** Kaiepi left
[22:12] *** Kaiepi joined
[22:12] *** p6bannerbot sets mode: +v Kaiepi

[22:28] <lizmat> m: class A { has %.b is rw; method c() { $.b } }   # shouldn't this be a compile time error ?

[22:28] <camelia> rakudo-moar 99d30be2a: ( no output )

[22:28] <lizmat> note the %.b vs $.b

[22:29] <AlexDaniel> no

[22:29] <AlexDaniel> m: class A { has %.b is rw; method c() { $.abc }; method abc() { say 42} }.new.c

[22:29] <camelia> rakudo-moar 99d30be2a: OUTPUT: «42␤»

[22:30] <AlexDaniel> it's a method call on self

[22:31] <AlexDaniel> note that this *is* a compile time error:

[22:31] <AlexDaniel> m: class A { has %.b is rw; method c() { $!b } }

[22:31] <camelia> rakudo-moar 99d30be2a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Attribute $!b not declared in class A␤at <tmp>:1␤------> 3 A { has %.b is rw; method c() { $!b } }7⏏5<EOL>␤»

[22:32] <lizmat> m: class A { has %.b is rw; method c() { $.b = %( a => 42 ) } }; A.new.c    # fails

[22:32] <camelia> rakudo-moar 99d30be2a: OUTPUT: «Cannot assign to a readonly variable or a value␤  in method c at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:32] <lizmat> m: class A { has %.b is rw; method c() { %.b = %( a => 42 ) } }; A.new.c   # works ok

[22:32] <camelia> rakudo-moar 99d30be2a: ( no output )

[22:32] <lizmat> so I was wondering  :-)

[22:46] <AlexDaniel> I don't think it necessarily fails

[22:46] <AlexDaniel> m: class A { has %.b is rw; method c() { say $.b }; A.new.c    # ok?

[22:46] <camelia> rakudo-moar 99d30be2a: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3method c() { say $.b }; A.new.c    # ok?7⏏5<EOL>␤    expecting any of:␤        statement end␤        statement modifier␤        statement modifier loo…»

[22:46] <AlexDaniel> m: class A { has %.b is rw; method c() { say $.b }; }; A.new.c    # ok?

[22:46] <camelia> rakudo-moar 99d30be2a: OUTPUT: «{}␤»

[22:46] <AlexDaniel> yeah

[22:57] <jnthn> $.b is really $(self.b)

[22:59] <lizmat> ok, so not a compilation error

[23:00] <releasable6> Next release in ≈19 hours. 4 blockers. Please log your changes in the ChangeLog: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:17] *** j3nnn1 left
[23:40] *** MasterDuke joined
[23:40] *** p6bannerbot sets mode: +v MasterDuke

[23:40] *** MasterDuke left
[23:40] *** MasterDuke joined
[23:40] *** herbert.freenode.net sets mode: +v MasterDuke

[23:40] *** p6bannerbot sets mode: +v MasterDuke

