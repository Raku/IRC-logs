[00:15] *** patrickz joined
[00:18] *** patrickb left
[00:24] <Geth> ¦ rakudo/master: 8 commits pushed by (Patrick Böker)++, (Nick Logan)++

[00:24] <Geth> ¦ rakudo/master: 787596d005 | Fix build on MSVC.

[00:24] <Geth> ¦ rakudo/master: 5bc6269997 | Fix build on mingw

[00:24] <Geth> ¦ rakudo/master: db5becfb1a | Deduplicate build options.

[00:24] <Geth> ¦ rakudo/master: c1c108fdbb | Clean library build commands

[00:24] <Geth> ¦ rakudo/master: 44e0386afd | Fix default target on nmake

[00:24] <Geth> ¦ rakudo/master: bafa52392a | Remove unused variable

[00:24] <Geth> ¦ rakudo/master: 4459364eef | Fix build on linux

[00:24] <Geth> ¦ rakudo/master: b5843b0e3a | Merge pull request #2802 from patzim/win-fix

[00:24] <Geth> ¦ rakudo/master: review: https://github.com/rakudo/rakudo/compare/d5faa02b16b6...b5843b0e3a1c

[01:22] *** patrickz left
[02:07] <MasterDuke> some of our math methods (e.g., log, sqrt) don't really work for large integers because they convert to num and then use floating point calculations

[02:08] <MasterDuke> m: say log(10**400); say sqrt(10*400)

[02:08] <camelia> rakudo-moar b5843b0e3: OUTPUT: «Inf␤63.245553203367585␤»

[02:08] <MasterDuke> whoops

[02:08] <MasterDuke> m: say log(10**400); say sqrt(10**400)

[02:09] <camelia> rakudo-moar b5843b0e3: OUTPUT: «Inf␤Inf␤»

[02:12] <MasterDuke> but there exist some algorithms that do a decent job of calculating those for large integers. should we implement them in rakudo? in MoarVM and add some nqp::*_I ops?

[02:12] <MasterDuke> my $v = 10**400; my $b = $v.msb - 977; if $b > 0 { $v +>= $b }; my $r = $v.log; say $b > 0 ?? $r + $b * 2.log !! $rm: 

[02:12] <MasterDuke> m: my $v = 10**400; my $b = $v.msb - 977; if $b > 0 { $v +>= $b }; my $r = $v.log; say $b > 0 ?? $r + $b * 2.log !! $r

[02:12] <camelia> rakudo-moar b5843b0e3: OUTPUT: «921.0340371976183␤»

[02:13] <MasterDuke> wolfram alpha gives 921.0340371976182736071965818737456830404405954515091904133...

[02:19] *** leont left
[03:01] <DrForr> Mathematica's been released (Not open source, just shipped for free) for Raspbian.

[03:21] *** ufobat_ joined
[03:25] *** ufobat__ left
[04:06] <MasterDuke> m: sub (:$a) { say $a }(:2b) # this works (i.e., throws the expected error)

[04:06] <camelia> rakudo-moar b5843b0e3: OUTPUT: «Unexpected named argument 'b' passed␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[04:07] <MasterDuke> m: -> (:$a) { say $a }(:2b) # but this throws what seems to be the wrong error

[04:07] <camelia> rakudo-moar b5843b0e3: OUTPUT: «Too few positionals passed to '<anon>'; expected 1 argument but got 0␤  in block <unit> at <tmp> line 1␤␤»

[04:07] <MasterDuke> jnthn, timotimo, lizmat: is ^^^ correct?

[06:19] *** robertle left
[06:57] *** nebuchadnezzar joined
[07:53] <timotimo> MasterDuke: yeah, you're giving it a signature with an anonymous positional arg that gets destructured into one named

[08:04] *** robertle joined
[08:42] <lizmat> m: -> :$a { say $a }(:2b)   # throws expected error

[08:42] <camelia> rakudo-moar b5843b0e3: OUTPUT: «Unexpected named argument 'b' passed␤  in block <unit> at <tmp> line 1␤␤»

[08:42] <lizmat> m: -> :$a { say $a }(:2a)   # does not

[08:42] <camelia> rakudo-moar b5843b0e3: OUTPUT: «2␤»

[09:45] <lizmat> m: use Telemetry   # this works

[09:45] <camelia> rakudo-moar b5843b0e3: ( no output )

[09:45] <lizmat> m: dd $*REPO.candidates("Telemetry")   # then why does this give me the Empty list ?

[09:45] <camelia> rakudo-moar b5843b0e3: OUTPUT: «Empty␤»

[10:03] <lizmat> m: my $repo = $*REPO; dd gather while $repo { dd $repo.?candidates("Telemetry"); $repo .= next-repo }   # I guess we need something like this

[10:03] <camelia> rakudo-moar b5843b0e3: OUTPUT: «Empty␤Empty␤Empty␤(CompUnit::Repository::Installation::LazyDistribution.new(dist-id => "E14CAA5C7DE5B1A1BAC1ED1155377A9AF4962C18", read-dist => -> $_ { #`(Block|58287176) ... }, meta => ${:api(v0), :auth("perl"), :checksum("F21F63A1682C5435D99B3…»

[10:10] <lizmat> .ask ugexe am I correct in the assessment that it is currently not possible to find out which "List::*" modules you have installed ?

[10:10] <lizmat> :-(

[10:11] <lizmat> .ask ugexe because you cannot specify a name matcher ?

[10:17] <jnthn> lizmat: I believe there's a repo-chain that saves your while loop there

[10:18] <lizmat> m: dd $*REPO.repo-chain.grep: { .?candidates("Telemetry") }   # indeed, jnthn++

[10:18] <camelia> rakudo-moar b5843b0e3: OUTPUT: «(CompUnit::Repository::Installation.new(prefix => "/home/camelia/rakudo-m-inst-1/bin/../share/perl6"),).Seq␤»

[10:21] <lizmat> m: dd $*REPO.repo-chain.grep: { .?candidates( /"List::"/ ) }  # sadly, no  :-(

[10:21] <camelia> rakudo-moar b5843b0e3: OUTPUT: «Cannot resolve caller candidates(CompUnit::Repository::Installation:D: Regex:D); none of these signatures match:␤    (CompUnit::Repository::Installation: Str:D $name, :$auth, :$ver, :$api, *%_)␤    (CompUnit::Repository::Installation: CompUnit::De…»

[10:22] <timotimo> how does "zef list" do its thing?

[10:22] <timotimo> zef list --installed, in particular

[10:24] <lizmat> good pointer, timotimo++

[10:55] *** leont joined
[11:32] <lizmat> I guess that's going to be something for the PTS

[11:33] <lizmat> meanwhile, do we have an official way to install a script when installing a module with zef?

[11:34] *** llfourn left
[11:34] *** llfourn joined
[11:39] *** llfourn left
[11:46] <timotimo> just putting it into bin/ should do it, doesn't that already work?

[11:48] * lizmat tries

[11:48] *** lucasb left
[11:49] <lizmat> timotimo: and no mention in the META6.json ?

[11:51] <timotimo> yeah, i don't think it goes in there

[11:51] <timotimo> at least i wouldn't know what to call it in the provides section

[11:52] <timotimo> and i also don't think it needs to go in the resources part

[12:03] <ugexe> Yeah you don’t list them in the META6, although they should be 

[12:05] <ugexe> Needs planning on how to include perl6 vs non perl6 scripts since right now Rakudo creates wrappers for anything that try to launch things as perl6 code 

[12:05] <ugexe> creates wrappers for anything; they launch everything as perl6 code ^

[12:05] <timotimo> right

[12:06] <timotimo> let's give it something very fragile, like parsing shebang lines

[12:06] <ugexe> That’s what some tools actually do 

[12:07] <ugexe> I imagine we’ll end up with a bin/ and a script/ or something 

[12:08] <ugexe> as for .candidates yeah eventually (whenever) we planned on allowing name matcher to work with a regex

[12:09] <ugexe> that PR was already big enough at the time though 

[12:12] <lizmat> ugexe: will you be at the PTS ?

[12:13] <ugexe> Yeah

[12:14] <lizmat> cool, /me too

[12:14] <lizmat> so perhaps we could work on that ?

[12:15] *** llfourn joined
[12:16] <ugexe> Yeah that one should be fairly easy

[12:20] <lizmat> cool... I will make sure I will be more familiar with that part of the setting beforehand  :-)

[12:24] *** llfourn left
[12:25] *** llfourn joined
[12:27] <ugexe> also im talking about the regex name match thing only

[12:27] <ugexe> not doing .next-repo

[12:28] <ugexe> getting rid of that was part of the reason .candidates needed to be implemented

[12:28] <ugexe> because if i have an e.g. plugin repo i do not want .candidates from any other repo (like .resolve would end up going if the initial repo had no matches)

[12:31] <ugexe> for instance if i do CompUnit::RepositoryRegistry.repository-for-spec("inst#/home/.zef/plugins").candidates("Test") i'm 0% interested in Test installed in CORE

[12:32] <lizmat> indeed...

[12:32] <lizmat> going to be afk for most of the rest of the day&

[12:33] *** llfourn left
[12:34] *** llfourn joined
[12:44] *** llfourn left
[12:45] *** llfourn joined
[12:46] *** AlexDaniel joined
[12:49] *** llfourn left
[12:50] *** yoleaux joined
[12:50] *** llfourn joined
[12:50] *** epony left
[12:58] *** llfourn left
[12:59] *** llfourn joined
[13:04] *** epony joined
[13:04] *** llfourn left
[13:05] *** llfourn joined
[13:09] *** llfourn left
[13:10] *** llfourn joined
[13:15] *** llfourn left
[13:15] *** llfourn joined
[13:20] *** llfourn left
[13:20] *** llfourn joined
[13:25] *** llfourn left
[13:25] *** llfourn joined
[13:29] *** AlexDaniel left
[13:31] *** llfourn left
[13:31] *** llfourn joined
[13:36] *** llfourn left
[13:36] *** llfourn joined
[13:41] *** llfourn left
[13:41] *** llfourn joined
[13:46] *** llfourn left
[13:46] *** llfourn joined
[13:51] *** llfourn left
[13:52] *** llfourn joined
[13:58] *** robertle left
[14:01] *** robertle joined
[14:04] *** llfourn left
[14:04] *** llfourn joined
[14:07] *** llfourn left
[14:07] *** llfourn joined
[14:18] *** llfourn left
[14:33] *** llfourn joined
[14:38] *** llfourn left
[15:03] *** lucasb joined
[15:07] *** llfourn joined
[15:16] *** llfourn left
[15:17] *** llfourn joined
[15:21] *** llfourn left
[15:22] *** llfourn joined
[15:27] *** llfourn left
[15:28] *** llfourn joined
[15:33] *** llfourn left
[15:33] *** llfourn joined
[15:43] *** llfourn left
[15:44] *** llfourn joined
[15:49] *** llfourn left
[16:42] *** robertle left
[16:59] *** llfourn joined
[17:04] *** llfourn left
[17:31] *** robertle joined
[17:39] *** llfourn joined
[17:43] *** llfourn left
[18:21] *** llfourn joined
[18:26] *** llfourn left
[18:54] *** llfourn joined
[18:58] *** llfourn left
[19:46] *** llfourn joined
[19:56] *** llfourn left
[20:09] *** llfourn joined
[20:19] *** llfourn left
[20:24] <Geth> ¦ nqp: 0e5f3d0b26 | usev6++ | src/QRegex/P6Regex/Actions.nqp

[20:24] <Geth> ¦ nqp: [JVM] Tweak test for range endpoint in regex

[20:24] <Geth> ¦ nqp: 

[20:24] <Geth> ¦ nqp: Unbust the build for Rakudo on the JVM backend.

[20:24] <Geth> ¦ nqp: (Fixes https://github.com/rakudo/rakudo/issues/2748)

[20:24] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/0e5f3d0b26

[20:50] <Geth> ¦ rakudo: b5bf7cd4f7 | (Nick Logan)++ (committed using GitHub Web editor) | tools/build/NQP_REVISION

[20:50] <Geth> ¦ rakudo: Bump NQP_REVISION

[20:50] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b5bf7cd4f7

[20:50] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2019.03-31-g75bfba0...2019.03-43-g0e5f3d0

[20:57] *** travis-ci joined
[20:57] <travis-ci> NQP build failed. usev6 '[JVM] Tweak test for range endpoint in regex

[20:57] <travis-ci> https://travis-ci.org/perl6/nqp/builds/512693204 https://github.com/perl6/nqp/compare/5b2e7090fef3...0e5f3d0b268a

[20:57] *** travis-ci left
[21:03] <bartolin> ^^ that's a newly added test in t/nqp/044-try-catch.t failing on the jvm backend. (it did fail before my commit)

[21:23] *** llfourn joined
[21:33] *** llfourn left
[22:55] <MasterDuke> .ask pmurias have you looked at https://github.com/perl6/nqp/pull/518 and https://github.com/rakudo/rakudo/pull/2670 ? will they cause any problems for the js backend? i tried to build it to test, but still haven't been able to

[22:55] <yoleaux> MasterDuke: I'll pass your message to pmurias.

[23:12] *** lucasb left
[23:29] *** llfourn joined
[23:34] *** llfourn left
[23:34] *** llfourn joined
[23:39] *** llfourn left
[23:40] *** llfourn joined
[23:54] *** llfourn left
[23:55] *** llfourn joined
