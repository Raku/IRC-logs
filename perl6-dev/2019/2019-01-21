[00:15] <Kaiepi> thoughts on adding jna bindings to libuv to the jvm for stuff like async udp sockets and IO::Socket::Unix ops if my grant gets accepted?

[00:23] <MasterDuke> nqp: my num $s := nqp::time_n; my $a := 3; my $b := 1; while $b < 10_000_000 { $a := $a + $b; $b := $b + 1; }; say($a); say(nqp::sub_n(nqp::time_n, $s))

[00:23] <camelia> nqp-moarvm: OUTPUT: «49999995000003␤0.8159172534942627␤»

[00:24] <MasterDuke> ^^^ doesn't run (noticeably) faster on my branch, but it does change the allocations from 19999998 BOOTNums to 19999981 BOOTInts

[01:10] <MasterDuke> anyone have a good benchmark i can try?

[01:33] <japhb> MasterDuke: https://github.com/japhb/perl6-bench has a few

[01:42] <MasterDuke> japhb: i haven't run that in a little while. i don't remember, does it build rakudo/nqp/moarvm itself? and if so, easy to specify my branches?

[02:19] <MasterDuke> such arbitrary limitations sometimes...`Unable to allocate an array of 4607182418800017409 elements`

[03:04] <MasterDuke> fwiw, ^^^ happens when building NQP after attempting to add intify support to spesh's optimize_smart_coerce(), https://gist.github.com/MasterDuke17/a618b3e46db4f7ea9fac78d984af2d3e is the patch if anyone is interested

[03:06] <MasterDuke> and here's the full command and error https://gist.github.com/MasterDuke17/2b956e1316fca0024b0d7bd07facd838

[03:39] <Geth> ¦ tap-harness6/dev: 4 commits pushed by (Leon Timmermans)++

[03:39] <Geth> ¦ tap-harness6/dev: adef60fd11 | Don't give options default values in prove6

[03:39] <Geth> ¦ tap-harness6/dev: 635bc92aa2 | Automatically set various values from environment

[03:39] <Geth> ¦ tap-harness6/dev: d5aabb4ef9 | Run all and only .t and .t6 files

[03:39] <Geth> ¦ tap-harness6/dev: f9ecb36cc8 | Skip dotfiles in prove6

[03:39] <Geth> ¦ tap-harness6/dev: review: https://github.com/perl6/tap-harness6/compare/adef60fd1163^...f9ecb36cc8cd

[03:54] *** ufobat_ joined
[03:54] *** ufobat left
[03:55] *** p6bannerbot sets mode: +v ufobat_

[06:29] <Geth> ¦ roast: 25ff1876e4 | (Nick Logan)++ (committed using GitHub Web editor) | S11-repository/cur-current-distribution.t

[06:29] <Geth> ¦ roast: Use cmd.exe compatible hash lookup

[06:29] <Geth> ¦ roast: 

[06:29] <Geth> ¦ roast: Now passes on windows

[06:29] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/25ff1876e4

[06:42] *** jnthn left
[06:42] *** moritz left
[06:42] *** jdv79 left
[06:42] *** krunen left
[06:42] *** krunen joined
[06:42] *** moritz joined
[06:42] *** jnthn joined
[06:43] *** p6bannerbot sets mode: +v krunen

[06:43] *** p6bannerbot sets mode: +v moritz

[06:43] *** p6bannerbot sets mode: +v jnthn

[06:44] *** MasterDuke left
[06:46] *** lizmat left
[06:47] *** jdv79 joined
[06:48] *** p6bannerbot sets mode: +v jdv79

[12:11] *** lucasb joined
[12:11] *** p6bannerbot sets mode: +v lucasb

[12:20] *** llfourn left
[12:22] *** masak left
[12:23] <lucasb> AlexDaniel: Hey. Sorry for my statement, I was just trying to be funny. I dunno how to express myself in english :D

[12:24] *** llfourn joined
[12:24] <lucasb> with regard moving an issue from one repo to another, GH allows that, right?

[12:25] *** p6bannerbot sets mode: +v llfourn

[12:25] <lucasb> but well, I certainly don't have the rights to move :)

[12:27] <lucasb> (unless you meant to open *a new issue* in user-experience, and then close the rakudo's one)

[12:29] *** llfourn left
[12:29] *** llfourn_ joined
[12:30] *** p6bannerbot sets mode: +v llfourn_

[12:35] *** lizmat joined
[12:35] *** p6bannerbot sets mode: +v lizmat

[12:44] <Geth> ¦ synopsebot: c8a608e7ee | (Lucas Buchala)++ (committed using GitHub Web editor) | lib/SB/Plugin/GitHub.pm6

[12:44] <Geth> ¦ synopsebot: Add UE# prefix for user-experience issues

[12:44] <Geth> ¦ synopsebot: review: https://github.com/perl6/synopsebot/commit/c8a608e7ee

[12:50] <lucasb> if any hack admin could pull synopsebot, I would appreciate :) https://github.com/perl6/synopsebot#pulling-changes-and-restarting-the-bot

[13:08] *** masak_ joined
[13:08] *** masak_ is now known as masak

[13:08] *** p6bannerbot sets mode: +v masak

[13:33] *** MasterDuke joined
[13:33] *** p6bannerbot sets mode: +v MasterDuke

[13:34] *** j3nnn1 joined
[13:34] *** p6bannerbot sets mode: +v j3nnn1

[13:34] *** MasterDuke left
[13:34] *** MasterDuke joined
[13:34] *** herbert.freenode.net sets mode: +v MasterDuke

[13:34] *** p6bannerbot sets mode: +v MasterDuke

[13:39] <Geth> ¦ nqp: bd7bf00b56 | (Jonathan Worthington)++ | src/vm/moar/QAST/QASTCompilerMAST.nqp

[13:39] <Geth> ¦ nqp: Fix loss of some line number annotations

[13:39] <Geth> ¦ nqp: 

[13:39] <Geth> ¦ nqp: The annotations live primarily on QAST::Stmts and QAST::Stmt nodes.

[13:39] <Geth> ¦ nqp: However, if we had such a node directly as the chlid of a node that was

[13:39] <Geth> ¦ nqp: not itself such a node, we'd drop the annotation. This, in combination

[13:39] <Geth> ¦ nqp: with some tree simplification done by the Rakudo optimizer, meant that

[13:39] <Geth> ¦ nqp: very simple routines like:

[13:39] <Geth> ¦ nqp: <…commit message has 7 more lines…>

[13:40] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/bd7bf00b56

[13:42] <Geth> ¦ rakudo: 5b231e0999 | (Jonathan Worthington)++ | tools/build/NQP_REVISION

[13:42] <Geth> ¦ rakudo: Get an NQP with line number accuracy improvements

[13:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5b231e0999

[13:42] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.12-60-g73a1c59fd...2018.12-61-gbd7bf00

[13:43] <Geth> ¦ roast: 1e2aa0e018 | (Jonathan Worthington)++ | integration/error-reporting.t

[13:43] <Geth> ¦ roast: Unfudge now-passing line number test

[13:43] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1e2aa0e018

[14:07] * lizmat confirms spectest clean

[14:10] <jnthn> Was happy to find an existing spectest to unfudge after that fix, rather than needing to come up with one :)

[14:15] <timotimo> free(): corrupted unsorted chunks

[14:15] <timotimo> malloc(): memory corruption

[14:15] <timotimo> getting a couple of these messages when precomping stuff for moarperf, probably including cro

[14:17] <MasterDuke> timotimo: i got https://gist.github.com/MasterDuke17/d60abfa2dd0cd3d1686243db09b9f088 when trying to chase one of those down a little while ago

[14:18] <MasterDuke> https://bugs.kde.org/show_bug.cgi?id=290061 seemed like it had some relevant info

[14:18] <timotimo> wtf

[14:20] <MasterDuke> and yeah, it was during precompilation (why i had --trace-children=yes turned on). i tried getting something in gdb, but couldn't figure out how to correctly follow threads/forks/whatever

[14:21] <timotimo> yeah, i haven't figured that out properly yet, either

[14:22] <MasterDuke> timotimo: maybe something could be hardcoded here https://github.com/rakudo/rakudo/blob/master/src/core/CompUnit/PrecompilationRepository.pm6#L264-L273 to start them under gdb>

[14:24] <MasterDuke> that's where i hardcoded a --profile-compile to try and figure out why tools/build/install-core-dist.p6 takes so long

[14:25] <timotimo> mhm

[14:37] *** titsuki joined
[14:37] *** p6bannerbot sets mode: +v titsuki

[15:09] *** Kaiepi left
[16:16] <AlexDaniel> lucasb: no need to be sorry, you're actually right :)

[16:18] *** synopsebot left
[16:19] *** synopsebot joined
[16:19] *** ChanServ sets mode: +v synopsebot

[16:19] <AlexDaniel> UE#1

[16:19] <AlexDaniel> UE#36

[16:19] <synopsebot> UE#36 [open]: https://github.com/perl6/user-experience/issues/36 Should tools support .t6 extension?

[16:19] <AlexDaniel> lucasb: ↑ done! Thank you

[16:19] *** p6bannerbot sets mode: +v synopsebot

[16:22] *** ChanServ sets mode: +o AlexDaniel

[16:22] *** p6bannerbot was kicked by AlexDaniel (Kicked by AlexDaniel))
[16:22] *** ChanServ sets mode: -o AlexDaniel

[16:27] *** Kaiepi joined
[16:38] <lucasb> AlexDaniel: thanks :)

[16:56] <lucasb> hehe forgot to add a #5 item to R#2627

[16:56] <synopsebot> R#2627 [open]: https://github.com/rakudo/rakudo/issues/2627 [6.e][RFC][decluttering] Perl 6, 6.d, Diwali, Raku, Rakudo, Moar, NQP, Star, *

[16:57] <lucasb> "(5) Revoke/retract the "Raku" mess. Say that it was just an elaborate prank."

[16:57] <lucasb> :D

[17:10] *** Kaiepi left
[17:13] *** Kaiepi joined
[17:33] *** Kaiepi left
[17:37] *** Kaiepi joined
[17:45] *** patrickb joined
[19:08] <patrickb> Hi everyone!

[19:08] <yoleaux> 20 Jan 2019 10:24Z <nine> patrickb: I wonder if we can salvage the RAKUDO_HOME/NQP_HOME idea. So openSUSE wants binary libs to be stored in lib/lib64. The same is true for virtually all other distros I guess. So why do we store stuff in /usr/share anyway? Perl 5 and Python libs are stored in /usr/lib already.

[19:08] <yoleaux> 20 Jan 2019 10:47Z <nine> patrickb: The FHS states that /usr/lib is for "Libraries for programming and packages" while /usr/share is for "Architecture-independent *data*" (emphasis mine). Considering that I find plenty of *.gif, *.png, *.ogg, *.wav and whatever in my /usr/lib I'd guess "if in doubt, put it in /usr/lib" is the rule of thumb

[19:08] <patrickb> mst: You there?

[19:49] <patrickb> .tell Coke Can you give me a hint who's best to talk to about getting TPF involved in GSoC? I know near to nothing about the Perl 5 Community and the TPF people...

[19:49] <yoleaux> patrickb: I'll pass your message to Coke.

[19:54] <AlexDaniel> .tell [Coke] https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2019-01-21#l129

[19:54] <yoleaux> AlexDaniel: I'll pass your message to [Coke].

[19:58] <AlexDaniel> dogbert17: have you tried reverting it?

[20:07] <timotimo> wow, URI::Encode is failing a whole lot of tests

[20:09] <timotimo> m: my $RFC3986 = rx/<[0..9A..Za..z\-.~_]>/; my %escapes; for (0..255) { next if chr($_) ~~ /$RFC3986/; .say }

[20:09] <camelia> rakudo-moar 5b231e099: OUTPUT: «0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤11␤12␤13␤14␤15␤16␤17␤18␤19␤20␤21␤22␤23␤24␤25␤26␤27␤28␤29␤30␤31␤32␤33␤34␤35␤36␤37␤38␤39␤40␤41␤42␤43␤44␤47␤58␤59␤60␤61␤62␤63␤6…»

[20:09] <timotimo> m: my $RFC3986 = rx/<[0..9A..Za..z\-.~_]>/; my %escapes; for (0..255) { next if chr($_) ~~ $RFC3986; .say }

[20:09] <camelia> rakudo-moar 5b231e099: OUTPUT: «0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤11␤12␤13␤14␤15␤16␤17␤18␤19␤20␤21␤22␤23␤24␤25␤26␤27␤28␤29␤30␤31␤32␤33␤34␤35␤36␤37␤38␤39␤40␤41␤42␤43␤44␤47␤58␤59␤60␤61␤62␤63␤6…»

[20:09] <timotimo> m: my $RFC3986 = rx/<[0..9A..Za..z\-.~_]>/; my %escapes; for (0..255) { next if Bool.pick; .say }

[20:09] <camelia> rakudo-moar 5b231e099: OUTPUT: «0␤4␤5␤6␤8␤12␤15␤16␤17␤18␤19␤20␤21␤23␤29␤30␤32␤33␤34␤35␤36␤37␤38␤39␤41␤42␤43␤44␤46␤51␤52␤53␤56␤58␤60␤62␤63␤64␤65␤66␤70␤73␤74␤75␤76␤77␤79␤80␤81␤85␤86␤9…»

[20:09] *** MasterDuke left
[20:09] <timotimo> m: say "hi" ~~ rx/<[0..9A..Za..z\-.~_]>/;

[20:09] <camelia> rakudo-moar 5b231e099: OUTPUT: «｢h｣␤»

[20:10] <timotimo> m: my $rx = /<[0..9A..Za..z\-.~_]>/; for ^10 { say "hi" ~~ $rx }

[20:10] <camelia> rakudo-moar 5b231e099: OUTPUT: «｢h｣␤｢h｣␤｢h｣␤｢h｣␤｢h｣␤｢h｣␤｢h｣␤｢h｣␤｢h｣␤｢h｣␤»

[20:10] <timotimo> m: my $RFC3986 = rx/<[0..9A..Za..z\-.~_]>/; my %escapes; for (0..255) { next if chr($_) ~~ $RFC3986; chr($_).say }

[20:10] <camelia> rakudo-moar 5b231e099: OUTPUT: «␀␤␤␤␤␤␤␤␤␤      ␤␤␤␤␤

[20:10] *** [TuxCM] joined
[20:11] <timotimo> oh, maybe it is right

[20:11] <timotimo> m: my $RFC3986 = rx/<[0..9A..Za..z\-.~_]>/; my %escapes; for (0..255) { next unless chr($_) ~~ $RFC3986; chr($_).say }

[20:11] <camelia> rakudo-moar 5b231e099: OUTPUT: «-␤.␤0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤A␤B␤C␤D␤E␤F␤G␤H␤I␤J␤K␤L␤M␤N␤O␤P␤Q␤R␤S␤T␤U␤V␤W␤X␤Y␤Z␤_␤a␤b␤c␤d␤e␤f␤g␤h␤i␤j␤k␤l␤m␤n␤o␤p␤q␤r␤s␤t␤u␤v␤w␤x…»

[20:11] <timotimo> m: my $RFC3986 = rx/<[0..9A..Za..z\-.~_]>/; my %escapes; for (0..255) { next unless chr($_) ~~ /$RFC3986/; chr($_).say }

[20:11] <camelia> rakudo-moar 5b231e099: OUTPUT: «-␤.␤0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤A␤B␤C␤D␤E␤F␤G␤H␤I␤J␤K␤L␤M␤N␤O␤P␤Q␤R␤S␤T␤U␤V␤W␤X␤Y␤Z␤_␤a␤b␤c␤d␤e␤f␤g␤h␤i␤j␤k␤l␤m␤n␤o␤p␤q␤r␤s␤t␤u␤v␤w␤x…»

[20:11] <timotimo> m: my $RFC3986_unreserved = rx/<[0..9A..Za..z\-.~_]>/; my %escapes; for (0..255) { next unless chr($_) ~~ /$RFC3986_unreserved/; chr($_).say }

[20:11] <camelia> rakudo-moar 5b231e099: OUTPUT: «-␤.␤0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤A␤B␤C␤D␤E␤F␤G␤H␤I␤J␤K␤L␤M␤N␤O␤P␤Q␤R␤S␤T␤U␤V␤W␤X␤Y␤Z␤_␤a␤b␤c␤d␤e␤f␤g␤h␤i␤j␤k␤l␤m␤n␤o␤p␤q␤r␤s␤t␤u␤v␤w␤x…»

[20:12] <AlexDaniel> timotimo: did you update the module?

[20:12] <timotimo> oh

[20:13] <timotimo> it's using the "boolifying a regex will use the $_ of its current scope" semantics

[20:13] <timotimo> they were just recently broken

[20:13] <timotimo> what do you mean update?

[20:13] <AlexDaniel> aaaaaaaaaaaaaaaaah it was not merged…

[20:13] <AlexDaniel> https://github.com/perl6-community-modules/URI-Encode/pull/11

[20:14] <timotimo> oh, well :)

[20:14] <AlexDaniel> ok, now it is…

[20:14] <timotimo> better

[20:14] <AlexDaniel> timotimo: while you're at it, please leave a comment on R#2608

[20:14] <synopsebot> R#2608 [open]: https://github.com/rakudo/rakudo/issues/2608 [⚠ blocker ⚠] Scope flattening and regexes

[20:15] <timotimo> "use dynamic '$_';" is perhaps the solution you want?

[20:15] <timotimo> i haven't finished reading yet

[20:15] *** [TuxCM] left
[20:18] <AlexDaniel> timotimo: it looks like `use v6.c` is also a way to do it, but with regards to the upcoming release, what should be done?

[20:18] <timotimo> you mean we should wait one more release before the $_-no-longer-dynamic-by-default behaviour is "turned on"?

[20:20] <AlexDaniel> more like keep the behavior in v6.c/v6.d but change it for v6.e

[20:21] <timotimo> i'd be interested to see if user programs have it in the wild

[20:21] <timotimo> except for URI::Encode

[20:21] <timotimo> i don't think it'd be easy to put in a deprecation warning

[20:22] <timotimo> i'm not entirely sure if "with current rakudo" in jnthn's comment is refering to "after the optimization in question" or already before that

[20:22] <AlexDaniel> pretty sure that yeah, there are programs in the wild. It looks like something I could write…

[20:23] <AlexDaniel> but at the same time it's probably not very common

[20:23] <timotimo> i'd probably always be writing the ~~ out, tbh

[20:25] <timotimo> making the presence of a regex literal in a scope poison all $_ to become dynamic wouldn't cover the case where a regex in a variable being imported by a module exists

[20:26] <AlexDaniel> yeah…

[20:28] <timotimo> if we could install a "fake" $_ is dynamic in those scopes that contains, for example, a Failure that would asplode when accessed ... but that would prevent cases where you're actually looking for an explicitly declared $_ is dynamic and that wouldn't fly

[20:48] <lizmat> notable6: weekly

[20:48] <notable6> lizmat, 4 notes: https://gist.github.com/da363302704594638757d7a0b3b7da6a

[20:48] <AlexDaniel> reportable6: 2019-01-14T00:00:00Z 2019-01-21T00:00:00Z

[20:48] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[20:49] <reportable6> AlexDaniel, https://gist.github.com/a820f7fd50ab9c76f6ee84683f6bc86a

[20:50] <AlexDaniel> lizmat: ↑

[20:50] <lizmat> AlexDaniel++

[21:32] <lizmat> notable6: reset

[21:32] <notable6> lizmat, No notes for “reset”

[21:33] <lizmat> notable6: weekly reset

[21:33] <notable6> lizmat, Moved existing notes to “weekly_2019-01-21T21:33:04Z”

[21:40] *** patrickb left
[22:11] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/01/21/2019-03-youtubed/

[22:11] <lizmat> moritz: ^^

[22:24] <timotimo> lizmat++

[22:33] <Geth> ¦ nqp: 31a8b13852 | (Elizabeth Mattijsen)++ | docs/ops.markdown

[22:33] <Geth> ¦ nqp: Document cpucores/getrusage/RUSAGE constants

[22:33] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/31a8b13852

[22:43] *** j3nnn1 left
[22:46] *** Kaiepi left
[22:46] *** Kaiepi joined
[23:05] <Geth> ¦ tap-harness6/master: 5 commits pushed by (Leon Timmermans)++

[23:05] <Geth> ¦ tap-harness6/master: adef60fd11 | Don't give options default values in prove6

[23:05] <Geth> ¦ tap-harness6/master: 3c319e13c3 | Automatically set various values from environment

[23:05] <Geth> ¦ tap-harness6/master: 77505dd1f8 | Run all and only .t and .t6 files

[23:05] <Geth> ¦ tap-harness6/master: b026b95c6a | Skip dot files and directories in prove6

[23:05] <Geth> ¦ tap-harness6/master: 29a9fa6f27 | Bump version to 0.0.7

[23:05] <Geth> ¦ tap-harness6/master: review: https://github.com/perl6/tap-harness6/compare/26dba5673f67...29a9fa6f27a5

[23:21] *** lucasb left
