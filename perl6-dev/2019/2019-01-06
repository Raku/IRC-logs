[00:02] *** Ven`` joined
[00:03] *** p6bannerbot sets mode: +v Ven``

[02:55] *** SqrtNegInf left
[03:43] *** SqrtNegInf joined
[03:44] *** p6bannerbot sets mode: +v SqrtNegInf

[07:40] *** evalable6 left
[07:44] *** evalable6 joined
[07:45] *** p6bannerbot sets mode: +v evalable6

[10:03] <AlexDaniel> squashable6: status

[10:03] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈1 hour. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:03] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/f3a540ea668da03be00e5ca1de9a8ea9

[10:33] *** [Tux] left
[10:44] <lizmat> Files=1264, Tests=87987, 375 wallclock secs (20.02 usr  6.04 sys + 2669.78 cusr 224.60 csys = 2920.44 CPU)

[10:47] *** [Tux] joined
[10:47] *** p6bannerbot sets mode: +v [Tux]

[11:38] <[Tux]> Goot * folk, has something changed in Numification? I see CSV tests fail where I did not change anything

[11:44] <lizmat> [Tux] could be me, do you have a golf ?

[11:46] <[Tux]> m: dd +"15".unival.Int

[11:46] <camelia> rakudo-moar 64c88f919: OUTPUT: «1␤»

[11:46] <lizmat> .ask samcv how hard would it be to create a "give me a random key of a hash" nqp op that would be significantly faster than the current Map.roll ?

[11:46] <yoleaux> lizmat: I'll pass your message to samcv.

[11:47] <lizmat> [Tux]: do you that's wrong ?

[11:47] <lizmat> *think

[11:47] <[Tux]> no, but I now have doubts about the line before it:

[11:47] <[Tux]>     method Numeric {

[11:47] <[Tux]>         $!text.defined

[11:47] <[Tux]>             ?? $!text.starts-with(0..9) ?? +$!text

[11:47] <[Tux]>             !!                              $!text.unival.Int

[11:47] <[Tux]>             !! Num;

[11:47] <[Tux]>         }

[11:49] <[Tux]> m: my Str $t = "15"; $t.starts-with(0..9) and say "YES";

[11:49] <camelia> rakudo-moar 64c88f919: ( no output )

[11:49] <[Tux]> that used to say YES

[11:52] <AlexDaniel> lizmat: please see https://github.com/rakudo/rakudo/wiki/Ticket-updates

[11:52] <AlexDaniel> lizmat: there are two reports for the last two week (current week will be ready tomorrow), one more for the month of Dec and another one for the whole 2018 year

[11:52] <AlexDaniel> s

[11:54] <AlexDaniel> c: 2018.12 my Str $t = "15"; $t.starts-with(0..9) and say "YES";

[11:54] <committable6> AlexDaniel, ¦2018.12: «»

[11:54] <AlexDaniel> c: 2018.10 my Str $t = "15"; $t.starts-with(0..9) and say "YES";

[11:54] <committable6> AlexDaniel, ¦2018.10: «»

[11:54] <AlexDaniel> c: releases my Str $t = "15"; $t.starts-with(0..9) and say "YES";

[11:55] <committable6> AlexDaniel, ¦releases (36 commits): «»

[11:55] <AlexDaniel> [Tux]: no, it never said YES

[11:55] <[Tux]> then /me wonders why those tests ever PASSed

[11:56] <AlexDaniel> do you have the full test as a gist? we can bisect

[11:56] <lizmat> weekly: https://github.com/rakudo/rakudo/wiki/Ticket-updates

[11:56] <notable6> lizmat, Noted!

[11:56] <lizmat> AlexDaniel++

[11:56] <[Tux]> it is t/30_field.t fro Text::CSV

[11:57] <[Tux]> m

[11:57] <AlexDaniel> oh so Blin should be able to figure it out, right?

[11:58] * AlexDaniel runs `PERL6LIB=lib ./bin/blin.p6 --old=2018.10 Text::CSV`

[11:59] <[Tux]> https://tux.nl/Files/x.pl ← minimized test case

[11:59] <AlexDaniel> c: releases https://gist.github.com/AlexDaniel/92f6f261cb6b4fbfced2c4a70b71c252

[12:00] <committable6> AlexDaniel, https://gist.github.com/411652a91700e189dabede61b489b1b0

[12:00] <AlexDaniel> [Tux]: see ↑

[12:00] <AlexDaniel> if there was a change, then the test case is too minimized

[12:02] * [Tux] apologizes - looks like a local change that isn't pushed and that could never have worked:

[12:02] <[Tux]> -            ?? $!text ~~ m{^ <[0..9]> } ?? +$!text

[12:02] <[Tux]> +            ?? $!text.starts-with(0..9) ?? +$!text

[12:03] <[Tux]> but should it? :)

[12:03] <AlexDaniel> [Tux]: Blin refused to bisect it because tests passed: https://gist.github.com/AlexDaniel/45bb9589acf089cb54bfdaffe8f550ea

[12:03] <AlexDaniel> oh, ok, I see :)

[12:04] <AlexDaniel> Blin++ committable6++ :)

[12:05] <AlexDaniel> [Tux]: see also https://github.com/rakudo/rakudo/issues/2268

[12:08] <AlexDaniel> TL;DR everybody wants to add more candidates to basic string matching functions because performance, but we should be making regex matches faster instead

[12:08] <AlexDaniel> and if that's not possible, add just one more function that doesn't create a Match object

[12:09] <AlexDaniel> IMO

[12:11] <[Tux]> I think I agree. My change was however not directly geared towards not using regexes, as to DWIM'ary

[12:14] <AlexDaniel> sorry, no, it doesn't look like a good idea

[12:15] <AlexDaniel> it may look cute for 0..9, but what about other kinds of ranges?

[12:15] <AlexDaniel> like 0..999? -999..999? Should it all work?

[12:15] <AlexDaniel> what about string ranges?

[12:16] <AlexDaniel> False..True? What does that match?

[12:16] <[Tux]> all of those examples would at least *read* easier than a regex

[12:17] <AlexDaniel> even if I can read them easily, I still have no idea what they'd do :)

[12:17] <[Tux]> I'd restrict the list to Cool, but I was just fantasising

[12:18] <AlexDaniel> and what does that mean?

[12:18] <[Tux]> 0..999: the string starts with 1 to three digits (probably a lot less efficient than using a regex)

[12:19] <[Tux]> -999..999: The string starts with an optional minus folowed by 1 to 3 digits. Again a lot slower than a regex

[12:19] <[Tux]> but yes, a gray zone

[12:19] <AlexDaniel> so what if it starts with a plus?

[12:19] <[Tux]> it doesn't match

[12:20] <AlexDaniel> why?

[12:20] <AlexDaniel> see…

[12:20] <[Tux]> because the range has no plus

[12:20] <AlexDaniel> how do you create a range with a plus?

[12:20] <[Tux]> with map :P

[12:20] <AlexDaniel> ok, fine, I'll take that

[12:21] <AlexDaniel> now, unicode minus and hyphen-minus at the same time, right?

[12:21] <[Tux]> nope

[12:22] <AlexDaniel> I mean… it's probably more explicit to write your own regex…

[12:22] <[Tux]> 00002d 0002d7 002212 002796 00ff0d

[12:22] <[Tux]> yes, a regex is much clearer in most cases (when entering the gray zone)

[12:23] <AlexDaniel> it's not exactly a gray zone

[12:23] <AlexDaniel> it's something we will have to implement and test

[12:23] <[Tux]> but just like with split/haystack, $string.starts-with(@list), where @list is a list of Cool, should be DWIM

[12:25] <AlexDaniel> https://github.com/perl6/doc/issues/992

[12:25] <AlexDaniel> kinda reverse though, hmm

[12:25] <[Tux]> is is just a translation to something like @list.first($string.starts-with(*)}

[12:26] <[Tux]> given the correct parens and races and whatever

[12:26] <AlexDaniel> m: say ‘f o o’.starts-with(<f o>)

[12:26] <camelia> rakudo-moar 64c88f919: OUTPUT: «True␤»

[12:26] <AlexDaniel> m: say ‘fo o’.starts-with(<f o>)

[12:26] <camelia> rakudo-moar 64c88f919: OUTPUT: «False␤»

[12:26] <AlexDaniel> right, still https://github.com/perl6/doc/issues/992 I'd say

[12:26] <[Tux]> indeed 992 in reverse

[12:41] <[Tux]> m: ("A" .. "M").first: "Zoe".starts-with(*);

[12:41] <camelia> rakudo-moar 64c88f919: OUTPUT: «Cannot resolve caller starts-with(Str:D: Whatever:D); none of these signatures match:␤    (Str:D: Cool:D $needle, *%_ --> Bool)␤    (Str:D: Str:D $needle, *%_ --> Bool)␤  in block <unit> at <tmp> line 1␤␤»

[12:41] <[Tux]> should that be valid? I just read the docs on "first", but I don't see why that barfs

[12:42] <[Tux]> Rakudo version 2018.12-163-g64c88f919 - MoarVM version 2018.12-15-g2ee7596dd

[12:42] <[Tux]> csv-test-xs-20      0.444 -  0.444

[12:42] <[Tux]> test-t --race       0.816 -  0.862

[12:42] <[Tux]> csv-ip5xs           0.957 -  1.116

[12:42] <[Tux]> test-t              1.818 -  1.927

[12:42] <[Tux]> csv-ip5xs-20        7.121 -  8.283

[12:42] <[Tux]> test                7.455 -  7.895

[12:42] <[Tux]> test-t-20 --race    9.757 -  9.816

[12:42] <[Tux]> csv-parser         23.055 - 25.568

[12:42] <[Tux]> test-t-20          31.234 - 34.061

[12:43] <lizmat> [Tux]: it barfs on starts-with

[12:43] <lizmat> m: "a".starts-with(*)

[12:43] <camelia> rakudo-moar 64c88f919: OUTPUT: «Cannot resolve caller starts-with(Str:D: Whatever:D); none of these signatures match:␤    (Str:D: Cool:D $needle, *%_ --> Bool)␤    (Str:D: Str:D $needle, *%_ --> Bool)␤  in block <unit> at <tmp> line 1␤␤»

[12:47] <[Tux]> I see, but *why*

[12:47] <[Tux]> * comes from first

[12:48] <[Tux]> so it is "A" .. "M" until the part right of: is true

[12:49] * [Tux] must go now. Lunch and then new-years visit :(

[13:05] <lizmat> bisectable6: old=2018.03 new=2018.11 print 9999999999999999.0-9999999999999998.0

[13:05] <bisectable6> lizmat, Bisecting by output (old=2018.03 new=2018.11) because on both starting points the exit code is 0

[13:05] <bisectable6> lizmat, bisect log: https://gist.github.com/05d221469f2e6c155fb1f3e1020ca479

[13:05] <bisectable6> lizmat, (2018-08-01) https://github.com/rakudo/rakudo/commit/fec1bd74f97e257d4c88673cd62fdcae39f587a3

[13:06] *** Ven`` left
[13:09] <AlexDaniel> c: fec1bd74f97^,fec1bd74f97 print 9999999999999999.0-9999999999999998.0

[13:09] <committable6> AlexDaniel, ¦fec1bd74f97^: «2» ¦fec1bd7: «1»

[13:16] *** patrickb joined
[13:17] *** p6bannerbot sets mode: +v patrickb

[14:22] *** lucasb joined
[14:22] *** p6bannerbot sets mode: +v lucasb

[15:19] *** Ven`` joined
[15:20] *** p6bannerbot sets mode: +v Ven``

[15:44] <Geth> ¦ star: hankache++ created pull request #130: Update sha256sum instructions

[15:44] <Geth> ¦ star: review: https://github.com/rakudo/star/pull/130

[15:46] <Geth> ¦ star: d1beacbb16 | (Naoum Hankache)++ | 2 files

[15:46] <Geth> ¦ star: Update sha256sum instructions

[15:46] <Geth> ¦ star: 

[15:46] <Geth> ¦ star: Signed-off-by: Naoum Hankache [email@hidden.address]
[15:46] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/d1beacbb16

[15:46] <Geth> ¦ star: d86b72edea | (Naoum Hankache)++ (committed using GitHub Web editor) | 2 files

[15:46] <Geth> ¦ star: Merge pull request #130 from hankache/master

[15:46] <Geth> ¦ star: 

[15:46] <Geth> ¦ star: Update sha256sum instructions

[15:46] <Geth> ¦ star: review: https://github.com/rakudo/star/commit/d86b72edea

[15:51] <samcv> lizmat, well. i mean you could do it faster than now

[15:51] <yoleaux> 11:46Z <lizmat> samcv: how hard would it be to create a "give me a random key of a hash" nqp op that would be significantly faster than the current Map.roll ?

[15:51] <samcv> i mean i'd probably choose a random slot and then choose a random key in the chain inside that slot

[15:52] <samcv> so i guess the answer is yet :)

[15:58] *** Ven`` left
[17:18] *** huggable left
[17:30] *** Ven`` joined
[17:31] *** p6bannerbot sets mode: +v Ven``

[17:39] *** ZofBot left
[17:39] *** buggable left
[17:43] <lizmat> samcv: related discussion R#2586

[17:43] <synopsebot> R#2586 [closed]: https://github.com/rakudo/rakudo/issues/2586 Hash.pick is very slow on big hashes.

[18:11] *** lucasb left
[18:16] *** p6bannerbot left
[18:16] *** p6bannerbot joined
[18:16] *** moon.freenode.net sets mode: +o p6bannerbot

[18:22] <Geth> ¦ rakudo: 839f28e77a | (Elizabeth Mattijsen)++ | src/core/CompUnit/Repository/Locally.pm6

[18:22] <Geth> ¦ rakudo: Streamline CompUnit::Repository::Locally.id a bit

[18:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/839f28e77a

[18:22] <Geth> ¦ rakudo: 6d58e0b0be | (Elizabeth Mattijsen)++ | src/core/Buf.pm6

[18:22] <Geth> ¦ rakudo: Make Buf.gist about 2.5x as fast

[18:22] <Geth> ¦ rakudo: 

[18:22] <Geth> ¦ rakudo: - for a 100 elem buffer or larger

[18:22] <Geth> ¦ rakudo: - use nqp stringification and string manipulation rather than map with state

[18:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6d58e0b0be

[18:26] *** lizmat left
[18:30] *** lizmat joined
[18:30] *** p6bannerbot sets mode: +v lizmat

[18:43] *** Ven` joined
[18:43] *** p6bannerbot sets mode: +v Ven`

[19:39] *** Ven`` left
[19:40] *** Ven` left
[19:44] *** Ven`` joined
[19:45] *** p6bannerbot sets mode: +v Ven``

[19:55] *** Ven`` left
[20:42] *** Ven`` joined
[20:43] *** p6bannerbot sets mode: +v Ven``

[20:44] *** patrickb left
[20:56] *** Ven`` left
[21:07] *** Ven`` joined
[21:08] *** p6bannerbot sets mode: +v Ven``

[21:14] *** Ven`` left
[21:22] *** Ven`` joined
[21:22] *** p6bannerbot sets mode: +v Ven``

[21:33] *** AlexDaniel left
[21:35] *** AlexDaniel joined
[21:35] *** p6bannerbot sets mode: +v AlexDaniel

[22:06] *** vendethiel- joined
[22:07] *** p6bannerbot sets mode: +v vendethiel-

[22:52] *** dct joined
[22:52] *** p6bannerbot sets mode: +v dct

