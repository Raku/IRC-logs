[00:06] *** lucasb left
[00:06] *** nine left
[00:06] *** nine joined
[00:07] *** rba[m] joined
[00:48] *** [Coke] joined
[01:05] *** hoelzro left
[04:04] *** DrForr_ left
[04:14] *** hoelzro joined
[04:59] *** discord6 joined
[04:59] *** discord6 left
[04:59] *** discord6 joined
[05:50] <TimToady> vrurg, jnthn: I commented on #2677

[05:51] <TimToady> R#2677 even

[05:51] <synopsebot_> R#2677 [open]: https://github.com/rakudo/rakudo/issues/2677 [6.e][consensus needed][detrap][needs research][roles] Uncertainty about submethods in roles

[05:56] <TimToady> from which you can tell I've backlogged as far as Febrary... :)

[05:56] <TimToady> *ru

[07:13] *** patrickb joined
[08:38] <|Tux|> Rakudo version 2019.03.1-660-g9b639961c - MoarVM version 2019.05-94-g459e68675

[08:38] <|Tux|> csv-test-xs-20      0.422 -  0.430

[08:38] <|Tux|> csv-ip5xs           0.676 -  0.713

[08:38] <|Tux|> test-t --race       0.792 -  0.849

[08:38] <|Tux|> test-t              1.682 -  1.776

[08:38] <|Tux|> csv-ip5xs-20        5.097 -  5.322

[08:38] <|Tux|> test                6.744 -  7.023

[08:38] <|Tux|> test-t-20 --race    9.014 -  9.178

[08:38] <|Tux|> csv-parser         22.761 - 22.798

[08:38] <|Tux|> test-t-20          27.889 - 30.597

[08:55] <masak> TimToady! \o/

[08:57] <jnthn> TimToady: Thanks :)

[09:34] <lizmat> Files=1275, Tests=108166, 207 wallclock secs (26.41 usr  7.51 sys + 2878.07 cusr 287.59 csys = 3199.58 CPU)

[09:54] *** rba joined
[10:35] <kawaii> releasable6: status

[10:35] <releasable6> kawaii, Next release will happen when it's ready. R6 is down. At least 4 blockers. 262 out of 660 commits logged (‚ö† 1 warnings)

[10:36] <releasable6> kawaii, Details: https://gist.github.com/c73f6911baacea9dc8da70b305899d00

[10:37] <kawaii> AlexDaniel: while we wait for blockers to be resolved, maybe worth another Blin run in the meantime?

[10:57] <AlexDaniel> releasable6: status

[10:57] <releasable6> AlexDaniel, Next release will happen when it's ready. R6 is down. At least 2 blockers. 262 out of 660 commits logged (‚ö† 1 warnings)

[10:57] <releasable6> AlexDaniel, Details: https://gist.github.com/b2f75f0c0a065fc463e1b538c5d612c5

[10:58] <AlexDaniel> kawaii: looks a bit better now? :)

[10:58] <kawaii> Much better ;)

[11:18] <kawaii> So uh, looks like we're over 400 commits out from the changelog too, ugh that's going to take a while

[11:41] <AlexDaniel> kawaii: yes, better start now :)

[12:30] <Geth> ¬¶ problem-solving: rba self-assigned rakudo.party https://github.com/perl6/problem-solving/issues/52

[12:30] <Geth> ¬¶ problem-solving: rba assigned to maettu Issue rakudo.party https://github.com/perl6/problem-solving/issues/52

[12:51] <jnthn> Do we know if folks read/value the changelog? It's a lot of manual work.

[13:01] <kawaii> jnthn: I don't know, I have the bad habit of _not doing so_, but that's just me.

[13:02] <kawaii> I don't relish combing through 400 commits either

[13:06] <kawaii> jnthn: https://rakudo.org/post/announce-rakudo-star-release-2019-03

[13:06] <kawaii> IMO this is of more value than a raw changelog ^

[13:06] <kawaii> it outlines only the major changes

[13:08] <patrickb> kawaii: Agreeing. I was just typing a response along the same lines. I guess most people are interested in the highlights only. To know whether a specific bug was fixed one would look at the issue instead.

[13:08] <kawaii> cc: AlexDaniel for further thoughts

[13:09] <patrickb> But then, how do you know what the highlights are? These remaining 400 commits will have some highlights in them for sure...

[13:09] <kawaii> patrickb: I was just about to prompt people to list some suggestions for the 'big changes' :)

[13:15] <patrickb> The perl6 weeklies are an excellent source for what happened maybe just skimming through those is an approach.

[13:16] <kawaii> Yes lizmat does an excellent job with those

[13:16] <kawaii> I'd say they're the primary source of my perl 6 news

[13:17] <kawaii> other than this IRC and the flurry of github emails I ignor.... read :)

[13:28] *** titsuki joined
[13:32] *** MasterDuke joined
[13:41] <Geth> ¬¶ rakudo: ea7957101d | (Pawe≈Ç Murias)++ | 4 files

[13:41] <Geth> ¬¶ rakudo: [js] Fix the js build after recent build system changes

[13:41] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/ea7957101d

[13:44] <vrurg> I would say it's a wrong approach of offloading changelog maintenance on Liz. A commiter knows best of all what's commited and wether it's worth mentioning in the changelog. This also makes it easier to filter out really significant ones for Liz (who is, BTW, the only one soing this kind of stuff, so we must think of helping her).

[13:46] <vrurg> Besides, some people do not report problems and don't check issue trackers. They simply wait until something gets fixed. And to know if it was fixed they check changelogs. 

[13:48] <kawaii> vrurg: I didn't intend to offload it all to her, I think we were just pointing out that of her own accord, she does a good job at keeping people up to date with compiler goings-on. :)

[13:48] <kawaii> How about if we adopt a policy whereby if you make a commit and you _feel_ it might be newsworthy, update the changelog, if not, don't?

[13:48] <moritz> +1

[13:49] <moritz> the downside is that it's easy to forget to do so

[13:49] <jnthn> Perhaps we could put some marker at the end of a commit message, e.g. `changelog: true` and those commits will go into the changelog?

[13:49] <jnthn> (Doesn't help us this month, alas.)

[13:50] <vrurg> kawaii: You're proposing my own guiedline. :)

[13:51] <vrurg> jnthn++

[13:54] <vrurg> Though typing 'changelog: true' is is awkward. Just a 'for changelog' on it's own line perhaps?

[13:57] <vrurg> jnthn: BTW, had some time to play with the cores yesterday. Experimentally added a dedicated list on the world's context object alongside with PADS and made optimizer to use it. Looks even tidier that scanning for '!CORE_MARKER'. Hope to make find_symbol utilize that too today and see if CORE:: can be built out of that.

[13:57] <vrurg> *than scanning

[13:58] <jnthn> vrurg++

[13:59] <jnthn> vrurg: 'for changelog' could also work; was just going on a style I've seen used elsewhere for meta-data in commit messages (e.g. gerrit's thingy IDs)

[14:00] <kawaii> _some_ kind of token in the commit message, CL, changelog, changelog: true... any will do provided we agree on a standard and people adhere to it :)

[14:01] <vrurg> jnthn: I used to build changelog from commits for my Perl5 modules only skipping those marked with 'minor: ' prefix. Dist::Zilla plugins are great for these kind of things.

[14:04] <vrurg> kawaii: It made me think of specifying sections of changelog: 'For changelog fixes', 'For changelog deprecations', etc. 

[14:07] <kawaii> { "changelog": true, "type": "fix" }

[14:07] <kawaii> vrurg: ¬Ø\_(„ÉÑ)_/¬Ø

[14:08] <kawaii> maybe asking people to put a raw json into their commit message is a bit much, but would certainly make it nice for any automated tools

[14:08] <vrurg> And then make people adopt it... :D I'm afraid even the simple thing of adding 'for changelog' could be ignored by many. It has to be in a policy.

[14:09] <Geth> ¬¶ rakudo/feature-1860: a362fac5bb | Coke++ | lib/Test.pm6

[14:09] <Geth> ¬¶ rakudo/feature-1860: Clean up diagnostic output

[14:09] <Geth> ¬¶ rakudo/feature-1860: 

[14:09] <Geth> ¬¶ rakudo/feature-1860: For #1860

[14:09] <Geth> ¬¶ rakudo/feature-1860: review: https://github.com/rakudo/rakudo/commit/a362fac5bb

[14:09] <vrurg> I wonder if it is possible to attach a simple form to a PR on github?

[14:09] <Geth> ¬¶ rakudo: coke++ created pull request #3024: Clean up diagnostic output

[14:09] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/pull/3024

[14:15] <TimToady> maybe a tag on the issue before it's even fixed, assuming the changelog entry references the issue

[14:16] *** pamplemousse joined
[14:18] <kawaii> 'Tags' on GitHub are GitHub specific and not part of the actual .git data if I understand correctly, it's a possible solution but not one we could use any programmatic tooling on I think.

[14:18] <kawaii> _Maybe_ one could use GitHub's API to find PRs with the `changelog` tag and form a list that way, I do not know currently.

[14:23] <vrurg> Aren't PR's has their own commits? BTW, there could be a template for PRs (https://help.github.com/en/articles/creating-a-pull-request-template-for-your-repository) which would pre-include standard meta-information lines. One would just need to change those ‚Äì similar to issue tracker template rakudo has now.

[14:33] <vrurg> I would probably try adding a PR template later today.

[14:34] <kawaii> that could work, there's markdown for checkboxes ("- [] changelog" if I recall) we could use for that

[15:48] *** patrickb left
[15:48] <AlexDaniel> I'm‚Ä¶ not sure

[15:49] <kawaii> Informative!

[15:52] <AlexDaniel> if we only changelong the things that are ‚Äúnewsworthy‚Äù, wouldn't it be so that people downloading the new release will get a false impression that nothing was fixed/improved?

[15:52] <AlexDaniel> ‚Äúlook they only changed these 10 things‚Äù

[15:53] <AlexDaniel> it shouldn't be so if we present it right

[15:53] <kawaii> AlexDaniel: most OSS projects usually add a line saying "misc performance improvements in X and Y..."

[15:54] <AlexDaniel> I agree that changelogging is a difficult thing, though if we you all think it's unnecessary you could've said it like a year ago :D

[15:54] <AlexDaniel> :D

[15:55] <kawaii> I wasn't here a year ago! :P

[15:55] <AlexDaniel> fair enough!

[15:55] <AlexDaniel> kawaii: let's do it this way

[15:56] <vrurg> There should be two block of info: more detailed changelog and brief release info. So, people seeking for more details know where to get 'em.

[15:56] <AlexDaniel> kawaii: you research this and figure out what's the best way to go forward, I changelog the commits for this release

[15:56] <kawaii> AlexDaniel: here's a good example of how releases should look, from another OSS project I am a core member of: https://mybb.com/versions/1.8.21/

[15:56] <kawaii> note the `Issues resolved (39)`, with a simple link to GH

[15:56] <AlexDaniel> kawaii: and in the special notes of this changelog we say that the format will be different next time

[15:57] <kawaii> we make use of GitHub milestones and a special query to show all of the issues closed from the last release to the current one, might be worth investigating for Rakudo

[15:57] <kawaii> but yes agree, I will research a good way of doing things from now on

[15:58] <kawaii> vrurg: would linking users to a query page like https://github.com/mybb/mybb/issues?q=is%3Aissue%20is%3Aclosed%20label%3As%3Aresolved%20milestone%3A1.8.21 meet that requirement of a more complex breakdown?

[15:58] <vrurg> kawaii: I conclude that there is no need to create a PR template any time soon?

[15:59] <vrurg> No, it must be included into a distribution. People are lazy in general. Give them the easiest way.

[15:59] <kawaii> FYI in other OSS projects I work on, we don't allow a PR unless it solves an issue, even if it's not a bugfix, we'd still make an issue saying "X is slow" or "Y is not optimal"

[16:00] <vrurg> But I don't see a big deal in forming the ChangleLog from commits.

[16:01] <vrurg> kawaii: That's what I was used to while working on Foswiki. Every commit there was linked to a task. That was enforced by git hooks.

[16:01] <AlexDaniel> kawaii: I kinda agree with that, but what about performance improvements?

[16:01] <AlexDaniel> kawaii: sometimes there's a ticket, but usually a dev just finds some unoptimized code and makes it better

[16:01] <AlexDaniel> so we end up having no ticket for it

[16:01] <vrurg> AlexDaniel: usually, when you make a block of changes you have a task in your ming, a goal. That makes good point for a new issue to be created.

[16:01] <AlexDaniel> which personally I don't mind, but people want to see perf improvements in the changelog, I'm pretty sure

[16:02] <kawaii> Yes so perf improvements should have an issue associated :)

[16:03] <AlexDaniel> so it means more work/hassle for lizmat? :)

[16:03] <kawaii> I'm going to draft up an RFC later tonight and we can discuss from there

[16:03] <vrurg> kawaii: make it into problem-solving

[16:03] * lizmat notes she is a limited resource

[16:04] * jnthn too, though most of his perf work is in the MoarVM repo :)

[16:04] <vrurg> lizmat: we could spare a bit of you by makeing it easier to analyse the changes. :)

[16:05] <AlexDaniel> vrurg: not exactly

[16:05] *** pamplemousse_ joined
[16:05] <vrurg> AlexDaniel: that's why I used word 'usually'

[16:05] <lizmat> vrurg: actually,  more descriptive changelog messages are what I really need  :-)

[16:05] <vrurg> But basically it's not that hard to get used to.

[16:06] <AlexDaniel> vrurg: well it's not that hard for the release manager to get used to changelogging stuff, too

[16:07] <vrurg> lizmat: we could enforce those with git hooks too. It could be made a requirement to have 1-2 lines of description with each commit.

[16:09] *** pamplemousse left
[16:09] <lizmat> I wouldn't be in favour of that.  That would just ensure 2 lines of garbage to go through if someone doesn't feel like adding 2 lines.

[16:09] <vrurg> AlexDaniel: let's see what would kawaii come up with. Perhaps we could merge the best of all worlds?

[16:13] <vrurg> lizmat: that's possible. In either case it's a matter of ones responsibility. I used to think of how would others understand what's I did..

[16:13] <lizmat> too bad commit messages are immutable.

[16:14] <lizmat> sometimes I wish I had an easy way to see the original commit message, followed by any comments made on Github for that commit

[16:14] <lizmat> a la "git log"

[16:16] <Geth> ¬¶ rakudo: a362fac5bb | Coke++ | lib/Test.pm6

[16:16] <Geth> ¬¶ rakudo: Clean up diagnostic output

[16:16] <Geth> ¬¶ rakudo: 

[16:16] <Geth> ¬¶ rakudo: For #1860

[16:16] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/a362fac5bb

[16:16] <Geth> ¬¶ rakudo: fd492d28a9 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | lib/Test.pm6

[16:16] <Geth> ¬¶ rakudo: Merge pull request #3024 from rakudo/feature-1860

[16:16] <synopsebot_> RAKUDO#1860 [open]: https://github.com/rakudo/rakudo/issues/1860 [Test.pm] Test.pm "looks like"

[16:16] <Geth> ¬¶ rakudo: 

[16:16] <Geth> ¬¶ rakudo: Clean up diagnostic output

[16:16] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/fd492d28a9

[16:17] <AlexDaniel> https://github.com/perl6/problem-solving/issues/53

[16:17] <AlexDaniel> lizmat: yea, github comments kinda suck

[16:17] <AlexDaniel> well, they're great, but they're just not part of git, which sucks

[16:21] <[Coke]> lizmat++ ; happened to see that ticket I opened last year and realized I could just do it.

[16:28] <Geth> ¬¶ nqp: 4300d42139 | (Elizabeth Mattijsen)++ | tools/templates/MOAR_REVISION

[16:28] <Geth> ¬¶ nqp: Bump NQP to get profile fix

[16:28] <Geth> ¬¶ nqp: review: https://github.com/perl6/nqp/commit/4300d42139

[16:41] *** pamplemousse_ is now known as pamplemousse

[16:43] <Geth> ¬¶ rakudo: 2dc68c9224 | (Elizabeth Mattijsen)++ | tools/templates/NQP_REVISION

[16:43] <Geth> ¬¶ rakudo: Bump NQP to get profiler fixes

[16:43] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/2dc68c9224

[17:16] *** rba left
[17:33] *** rba joined
[18:00] *** AlexDaniel left
[18:00] *** AlexDaniel joined
[18:08] <Geth> ¬¶ problem-solving: AlexDaniel self-assigned Release process changes https://github.com/perl6/problem-solving/issues/54

[18:10] <Geth> ¬¶ problem-solving: AlexDaniel self-assigned Changelogging takes too much time and effort https://github.com/perl6/problem-solving/issues/53

[18:26] *** pamplemousse left
[18:31] <nine> FWIW the ChangeLog is also the basis for the Changes section in the openSUSE RPM packages. Though due to the line limit there I have to summarize a lot. That's actually usually the most time consuming part of packaging.

[18:34] <lizmat> nine: is that a column limit or number of lines limit ?

[18:35] <nine> number of lines

[18:36] <lizmat> that's for the whole RPM, or per issue / feature ?

[18:36] <nine> I think the limit is 30 lines

[18:36] <nine> for the whole rpm

[18:37] <nine> For example: https://build.opensuse.org/package/view_file/devel:languages:perl6/rakudo/rakudo.changes?expand=1

[18:44] <AlexDaniel> heh, debian just says ‚ÄúNew upstream version 2018.09‚Äù :)

[19:30] <dogbert11> does anyone recognize this error: Cannot find method 'sink': no method cache and no .^find_method

[19:34] <vrurg> dogbert11: trying to call the method on a low-level class object. Most likely, on something BOOT*

[19:39] <dogbert11> vrurg: I get it when running a spectest file (intermittently)

[19:40] <vrurg> Which one?

[19:41] <dogbert11> t/spec/S17-supply/return-in-tap.t

[19:45] <timotimo> we can make that error output the type's debug name

[19:48] <timotimo> dogbert11: pull moarvm's master and try again, if you didn't yet figure out what happens

[19:49] <dogbert11> timotimo: I believe I have master, lizmat bumped a couple of hours ago. btw, here's a gist https://gist.github.com/dogbert17/79611c50573676d44ceabc33689fb778

[19:49] <timotimo> i pushed to master like a minute ago

[19:50] <dogbert11> aha :)

[19:50] <dogbert11> timotimo++, faster than a heat wave :)

[19:51] <timotimo> it won't be a fix

[19:51] <timotimo> just more info in the exception message

[19:51] <MasterDuke> `Cannot find method 'sink' on 'BOOTCode': no method cache and no .^find_method`

[19:52] <timotimo> yeah, that's not the kind of thing you'd expect to have returned into something HLL, and especially not in void context

[19:52] <timotimo> sink context*

[19:52] <dogbert11> ok, let's see if I can repro ...

[19:53] <dogbert11> timotimo: Cannot find method 'sink' on 'BOOTCode': no method cache and no .^find_method

[19:54] <timotimo> i feel like the linkify userscript should also understand t/spec/ links

[19:55] <timotimo> does the fudger take care to have lines match up with the original? might not be possible with the #? blah emit feature

[19:55] <timotimo> if that's ever used?

[19:57] <dogbert11> good question

[19:57] <timotimo> otherwise that'd be more smarts than i want to put in there

[19:57] <dogbert11> I like it as it is :)

[19:58] <timotimo> hm?

[19:58] <dogbert11> well, more links are better ofc but not at the cost of massive complexity

[20:00] <dogbert11> it would be really cool if you could untangle a link like gen/moar/stage2/NQPHLL.nqp:1835

[20:01] <dogbert11> but I suspect that might be quite difficult ?

[20:02] <dogbert11> ASAN has absolutely nothing to say :(

[20:04] *** MasterDuke left
[20:04] <dogbert11> I see that MasterDuke has managed to reproduce the error

[20:06] *** MasterDuke joined
[20:09] <timotimo> that's a bit more difficult, because what actual file it comes from will depend on the line numbers of other files

[20:10] <dogbert11> aha

[20:12] <timotimo> https://gist.github.com/timo/7cfe71a667bbdfa0dbd1510431da45a4 - updated; give it a try if you want :)

[20:14] <timotimo> time to prepare some dinners

[20:14] <timotimo> well, just one dinner actually

[20:14] <dogbert11> timotimo++, way cool

[20:14] <dogbert11> nothing for the cats?

[20:20] <timotimo> they already get a little extra so that they get enough liquid

[20:21] <timotimo> we don't have a cat spring or something, so getting them to drink is challenging

[20:21] <timotimo> but spritzing some extra water on their wet cat food already helps

[20:21] *** ggoebel joined
[20:41] *** pamplemousse joined
[21:22] *** AlexDaniel left
[21:28] *** ggoebel left
[21:32] *** AlexDaniel joined
[21:50] *** AlexDaniel left
[22:20] <dogbert11> timotimo: at least the error is old, I just got the same failure on 2018.12

[22:23] *** pamplemousse left
[22:28] <timotimo> i wonder how it gets a BOOTCode from that stuff

[22:45] <dogbert11> wait a minute, is that error message from MoatVM?

[22:46] <dogbert11> it is, excellent

[22:48] <dogbert11> and ofc it's MoarVM rather than MoatVM as I wrote above :)

[22:51] <jnthn> .oO( Well, there's the name for the security-hardened version... )

[22:55] * dogbert11 .oO(I'm a moaron)

[22:56] <dogbert11> timotimo: got it in gdb, https://gist.github.com/dogbert17/e8010e8ab75b779a6b942ab70d4e6369

[22:57] <timotimo> try dumping the bytecode perhaps? dunno

[22:58] <dogbert11> and how do I do that?

[22:59] <timotimo> call MVM_dump_bytecode(tc)

[23:02] <dogbert11> timotimo: gist updated 

[23:03] <timotimo> ah, there's really not much there

[23:03] <timotimo> it's just getting whatever try-it returned

[23:04] <dogbert11> any other suggestions?

[23:05] <timotimo> with rr you could step backwards to see what put this result in the return path in the first place

[23:05] <dogbert11> which I can't do since I'm on AMD

[23:06] <timotimo> graaaahhhhhh

[23:06] <dogbert11> hopefully the new Ryzen CPU's coming on July 7th solve that problem

[23:51] *** ggoebel joined
