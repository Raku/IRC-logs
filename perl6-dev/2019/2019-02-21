[00:00] <patrickb> vrurg: Then it didn't work out. :-(

[00:01] <vrurg> The only solution is to build small statically linked binary which would later dynamically load the lib.

[00:02] <vrurg> They hard-code path to .dyld into the executable.

[00:06] <patrickb> vrurg: Are you sure there is no posibility? I read up on this a little and I thought there is a way...

[00:07] <patrickb> https://www.mikeash.com/pyblog/friday-qa-2009-11-06-linking-and-install-names.html

[00:08] <vrurg> patrickb: Can't give you all my confidence, but the error message supports my statement: dyld: Library not loaded: /Users/vrurg/tmp/MoarVM/../install/lib/libmoar.dylib – note that even the double dot is there!

[00:09] <vrurg> Look the date of the post. 10 years ago. They've strictened the rules 2 or 3 major releases ago.

[00:10] * vrurg struggled with dynamic loading of mysql driver a while ago.

[00:10] <patrickb> https://medium.com/@donblas/fun-with-rpath-otool-and-install-name-tool-e3e41ae86172 <- The same thing less than a year old

[00:12] <patrickb> vrurg: I have to leave. But I'd really like to get back to this....

[00:13] <vrurg> Checking out the latest link. The problem is that I didn't do compiling for years now.

[00:13] <vrurg> Ping me anytime, I'l respond when available.

[00:13] <patrickb> vrurg: Thanks!

[00:13] <vrurg> welcome! And good luck! I like the idea.

[00:15] <patrickb> vrurg: https://github.com/MoarVM/MoarVM/pull/1053/commits/c18e1e8566b011c45a7c5348ccf8a6c07b1d6db8#diff-2a9806f1c161480015223272ecd41308R582 <- this line and the following are all the magic I put in there for mac

[00:16] <patrickb> o/

[00:16] *** patrickb left
[00:18] <DrForr> Ah, this might be more active. I'm playing with traits, and wanting to create a custom class trait like C<is repr()>... Any hints as to what the proper type to use for classes is?

[00:27] <vrurg> DrForr: :U

[00:28] <vrurg> multi trait_mod:<is> ( Any:U $class ... )

[00:28] <DrForr> Aha, thanks!

[00:29] <vrurg> welcome!

[00:30] <DrForr> It still thinks it's a nonexistent class. Maybe I can leverage that somehow...

[00:31] <DrForr> I'll fiddle, at least that gives me a point to work from.

[00:42] *** sortiz left
[01:11] *** MasterDuke joined
[01:12] *** MasterDuke left
[01:12] *** MasterDuke joined
[01:51] <timotimo> oh hey DrForr 

[01:52] <DrForr> O hai.

[01:52] <DrForr> Got it solved.

[01:53] <timotimo> good to hear :)

[01:53] <timotimo> am i remembering right that you've been away from irc for a while?

[01:54] <DrForr> Indeed.

[01:55] <timotimo> well, welcome back, then!

[02:01] <DrForr> Dank u wel.

[02:08] <timotimo> i hope you have been well?

[02:10] *** lizmat left
[02:11] <DrForr> Well, I've been .. busy.

[02:13] <timotimo> that's good, then

[02:29] <DrForr> MOre recently in a good sense, beforehand ... not so good.

[02:35] <timotimo> ;(

[02:38] <DrForr> Stuff happens. But I'm in a better financial situation now and can actually enjoy myself a little.

[02:39] <timotimo> that's good to hear at least

[02:39] <timotimo> say, you're a bit of a mathy person, right?

[02:40] <DrForr> A touch.

[02:41] <timotimo> i'm building a little re-usable display for frame rate/timings for SDL2::Raw

[02:41] <timotimo> it's supposed to be a rect where one pixel is colored each frame

[02:41] <timotimo> i.e. the pixel that changes travels across the rectangle

[02:41] <DrForr> Oo, frame rates...

[02:41] <timotimo> now i'd like to map "time the frame took" to "color"

[02:41] <timotimo> got anything good for that? :)

[02:43] <timotimo> actually, i have the "time the frame took" and "time the frame is supposed to take to hit the framerate target"

[02:43] <DrForr> Not especially... I'd want to get some good timings for the average.. Ah, that helps.

[02:44] <timotimo> so it'd be kind of a "how much of your budget have you spent" display and a "how many times over have you blown the budget?"

[02:46] <DrForr> Well, statistics isn't my strong suit, but one thing I'd say is that the standard deviation might be more useful than the straight percentage.

[02:47] <timotimo> i think i want something really simple :)

[02:49] <DrForr> Do you have lower and upper bounds? I.E. fastest frame and "wow, that really sucked?"

[02:53] <timotimo> nope

[02:53] <timotimo> if the user suspends to ram while the program is running, the frame time could go up to years

[02:53] <DrForr> Very true...

[02:54] <DrForr> I was just thinking that way the scale would be bounded...

[02:54] <timotimo> but i think i'm fine clipping the values for now

[02:56] <timotimo> OK, let's do the smoke test :)

[02:57] <DrForr> So you have a value between the baseline and clipped,

[03:00] <DrForr> 100 * ( (v - baseline) / (clip - baseline) ) # percentage, lower values better.

[03:02] <timotimo> hey that looks kind of like the Z buffer used in OpenGL :)

[03:02] <DrForr> Perspective calculation, yes.

[03:03] <DrForr> Time to nuke the current tmux session...

[03:06] <timotimo> one of these days i need a NativeCall expert to help me with the frickin' SDL_LockTexture API :S

[03:07] <DrForr> That would have been me at one time :)

[03:08] <timotimo> if you want a go at it, it's a void **pixels, so you'll get a pointer back that has the pixel data at the end of it

[03:09] <DrForr> Unfortunately no, but my new current project might end up going that route...

[03:09] <DrForr> (perl6-Spreadsheet - I should check whether that's already been done too...)

[03:10] <DrForr> 'excel' and 'spread' didn't return any hits...

[03:10] <timotimo> welllll

[03:10] <timotimo> just the other day, something like that appeared!

[03:10] <timotimo> https://github.com/Xliff/p6-GTKSheet

[03:11] <timotimo> maybe not what you meant

[03:12] <DrForr> GTK ... that might not be it.

[03:13] <MasterDuke> i think someone in #perl6 just a couple days ago was wanting something like a perl6-Spreadsheet

[03:13] <DrForr> That's not it...

[03:14] <DrForr> (XLiff's...)

[03:16] <DrForr> What I've got is mostly a plugin architecture so you can declare your writer and reader API...

[03:25] <timotimo> who would like to explain to me why after some time i start putting black pixels into the texture ...

[03:26] <timotimo> oh, i'm getting a null back

[03:26] <timotimo> well, that's certainly fun

[03:29] <timotimo> it's not related to the x/y, it also happens when i reset the position earlier ... the hell? :o

[03:29] <DrForr> Rogue pointer?

[03:29] <timotimo> oh no

[03:30] <timotimo> it could be the jit

[03:30] <timotimo> yeah, it is

[03:30] <timotimo> dangit

[03:30] <DrForr> That would make it not-quite-the-right-time? :/

[03:30] <timotimo> aye

[03:30] <timotimo> and i might be partially to blame :P

[03:31] <timotimo> wanna see the thing in action, though?

[03:39] <DrForr> Sure.

[03:41] <timotimo> hold on

[03:43] <timotimo> ok i've got a vidya file

[03:44] <timotimo> http://hack.p6c.org/~timo/frame_rate_display.mp4 (i put in a little random sleep so it isn't all 100% green all the time)

[03:44] <DrForr> Heh. I can snarf that...

[03:45] <timotimo> what kind of snarf are we talking about here

[03:45] <DrForr> Just copied it down...

[03:45] <timotimo> ah

[03:46] <timotimo> i think i'll make the point go zig zag and use the topmost line to "return" to the start

[03:46] <timotimo> MasterDuke: ^- check out the video :) :)

[03:49] <MasterDuke> nice

[03:49] <MasterDuke> why does the moving pixel start out red?

[03:50] <DrForr> Wowsers.

[03:50] <timotimo> not entirely sure. perhaps there were a whole bunch of events stored up, or something else was slow the first time around

[03:50] <timotimo> oh

[03:50] <timotimo> actually, the video doesn't start when the program does

[03:50] <timotimo> so that's not even in there i think?

[03:52] <timotimo> i don't see the red pixel you're refering to

[03:54] <MasterDuke> it persists for a couple frames, even after the black pixel starts moving

[03:54] <timotimo> ah

[03:54] <timotimo> *shruuuug*

[03:55] <timotimo> it looks funny when turning off vsync

[03:55] <timotimo> because it's way too fast

[03:56] <timotimo> of course, the main render task is so trivial that it'd be sad if it didn't reach a high framerate

[03:57] <timotimo> i should probably go to bed :)

[04:03] <timotimo> i see now that it regularly has a red spot. i'd expect that to be major garbage collections happening

[04:05] <MasterDuke> fun to actually see them

[04:05] <timotimo> the "BREAKFAST" was an exercise in getting an image from the output of figlet into SDL as an image

[04:09] <timotimo> with the current code, i think a bright red would be "the frame took exactly 1/60 of a second"

[04:43] *** dct joined
[04:53] *** dct left
[06:32] *** nebuchadnezzar joined
[07:48] *** lizmat joined
[08:02] *** ufobat joined
[08:38] *** Kaiepi left
[09:18] <lizmat> Files=1267, Tests=88064, 405 wallclock secs (20.84 usr  6.48 sys + 2938.15 cusr 228.48 csys = 3193.95 CPU)

[10:50] *** Kaiepi joined
[12:33] *** lucasb joined
[13:26] <|Tux|> Rakudo version 2018.12-311-gd6563816e - MoarVM version 2018.12-110-g04982f6e9

[13:26] <|Tux|> csv-test-xs-20      0.444 -  0.447

[13:26] <|Tux|> csv-ip5xs           0.747 -  0.755

[13:26] <|Tux|> test-t --race       0.858 -  0.867

[13:26] <|Tux|> test-t              1.901 -  1.923

[13:26] <|Tux|> csv-ip5xs-20        6.125 -  6.146

[13:26] <|Tux|> test                7.675 -  7.737

[13:26] <|Tux|> test-t-20 --race   10.256 - 11.039

[13:26] <|Tux|> csv-parser         22.208 - 23.020

[13:26] <|Tux|> test-t-20          32.337 - 32.622

[13:42] *** gugod left
[13:58] *** gugod joined
[14:02] * AlexDaniel is under the weather

[14:09] * timotimo is adjacent to the weather

[14:30] <dogbert2_> it's an epidemic

[14:53] <timotimo> i don't know how it does it, but it seems like the weather is everywhere

[15:17] * lizmat goes off to Köln

[15:17] *** lizmat left
[16:38] *** titsuki joined
[16:50] *** llfourn left
[16:51] *** llfourn joined
[17:15] <timotimo> 430 words into the blog post i'm having second thoughts whether i should really be writing such a wordy explanation of an optimization phenomenon, or just gloss over the details since the post is really about the profiler frontend, not the internals ...

[17:16] <nine> Turn it into it's own post and get 2 for the price of 1?

[17:16] <timotimo> ha

[17:16] <timotimo> i guess i could

[17:16] <timotimo> that ought to allow me to actually go into detail properly, put some actual code examples up, maybe even paste some spesh logs for extra fun

[17:17] *** awwaiid left
[17:36] <timotimo> looking for a program that causes loads of scalar replacements

[17:37] *** awwaiid joined
[17:41] <timotimo> There were 56,923,690 object allocations. The dynamic optimizer was able to eliminate the need to allocate 30,165,891 additional objects (that's 34.64%)

[17:41] <timotimo> that's a good one

[17:41] <timotimo> oh, day-um! this one doesn't only scalar-replace Scalar objects, but also Num and even a few Hash ones!

[17:42] <timotimo> hashes: in a "new" and a "BUILDALL" method

[18:58] *** ufobat_ joined
[18:59] <timotimo> http://wakelift.de/p/1a4b9bd1-bde8-4a34-8d49-c86670f60c43/ - i'd appreciate proof-reading and general comments :)

[19:02] *** ufobat left
[20:46] <timotimo> https://wakelift.de/2019/02/21/always-wear-safety-equipment-when-inline-scalaring/ - published my latest grant report for moarperf

[20:46] *** lizmat joined
[20:48] *** Kaiepi left
[20:58] *** lizmat left
[21:01] *** lizmat joined
[21:12] *** lizmat left
[21:15] <jnthn> timotimo: "effected by deoptimization" should be affected

[21:16] <jnthn> timotimo++ # nice post

[21:17] <jnthn> The explanation text is nice

[21:18] <jnthn> Though I suspect I'm not the target audience :)

[21:20] <timotimo> damn, i was thinking if i should have used the a-version there

[21:21] <timotimo> i had already written about 400 words when i noticed i was writing a full explanation of scalar replacement instead of a progress report; the text is still on my blog as a secret draft: http://wakelift.de/p/c3b0c03d-28b4-41ce-83b0-27a50a1d0843/

[21:32] *** lucasb left
[21:35] <timotimo> the example needs a bit of change so it's actually compatible what happens in real-world rakudo

[21:39] <nine> Trust jnthn++ to shatter my hope for working around a tricky issue :P

[21:40] <timotimo> hmm?

[21:40] <nine> But wait! On platforms our JIT dosn't support we don't have JITed native calls anyway. So actually, the 100 % JIT coverage suggestion is not completely out of the race

[21:40] <nine> timotimo: https://github.com/rakudo/rakudo/issues/2706#issuecomment-466174058

[21:40] <timotimo> i didn't see jnthn weigh in on that theory

[21:40] <timotimo> ooh

[21:41] <timotimo> it does seem like your explanation still makes a lot of sens

[21:41] <timotimo> the problem is getting half-way to jit

[21:41] <timotimo> i.e. believing we can jit, but then actually failing in the middle?

[21:41] <nine> The thing is: I actually don't have an idea yet how else to fix it. I'd have to know in optimize_getarg whether we're gonna JIT compile or not

[21:43] <timotimo> the "get jit coverage up to 100%" fix isn't feasible at the moment?

[21:44] <nine> I actually don't know. How far away from 100 % are we?

[21:44] <timotimo> i was hoping you would know :D

[21:44] <timotimo> is this the "goto fail" in that function i added something to recently?

[21:44] <timotimo> or somewhere else?

[21:45] <nine> No, talking about plain normal lego JIT here

[21:45] <nine> In my golfed code it came down to MVM_OP_getlexref_u* missing in the lego JIT

[21:45] <timotimo> ooh, unsigneds, they are fun

[21:46] <timotimo> looks like that's just a matter of putting one more "case" in a few places and extending a ternary in graph.c

[21:47] <nine> yep, that was easily fixed

[21:48] <timotimo> oh hey btw

[21:49] <timotimo> how would you bind this function: SDL_LockTexture(SDL_Texture *tex, SDL_Rect *rect, void **pixdata, int *pitch) returns int

[21:49] <timotimo> the problem is making the pixdata easy to write to

[21:49] <nine> What exactly is pixdata?

[21:50] <timotimo> right now i have "uint64 $pixdata is rw"

[21:50] <timotimo> depends on the pixel format of the texture

[21:50] <timotimo> but with uint8** you can't make much of a mistake

[21:51] <nine> So why not CArray[uint8] $pixdata is rw?

[21:51] <timotimo> i think when i tried it it didn't work

[21:52] <timotimo> gimme a sec

[21:52] <timotimo> also, CArray doesn't get the write-*int* functions yet, right?

[21:52] <nine> A workaround I've used before rw worked is CArray[CArray[uint8]]

[21:52] <nine> probably not

[21:53] <timotimo> a sad omission, we should fix that :)

[21:57] <timotimo> it compiles, and it doesn't crash, but i think that's one less level of indirection than i need, because it keeps writing black instead of color

[21:58] <timotimo> oooh

[21:58] <timotimo> no, not quite

[22:00] <timotimo> not having much success

[22:02] <nine> We should find out why CArray[uint8] is rw doesn't work and just fix that...

[22:02] <nine> But first: sleep

[22:02] <timotimo> good night, nine!

[22:42] *** MasterDuke left
[22:43] *** Kaiepi joined
[23:57] *** Kaiepi left
[23:59] *** lizmat joined
