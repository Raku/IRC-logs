[01:08] <tbrowder>  .ask ugexe zef's README shows an example Build.pm module it describes as dependent free. but can it use other modules if needed?

[01:09] <tbrowder> .ask ugexe ^^^

[01:09] <tellable6> tbrowder, I'll pass your message to ugexe

[02:26] *** ccamel left
[02:27] *** camelCaser joined
[05:28] *** robertle left
[08:02] <lizmat> Files=1274, Tests=109501, 204 wallclock secs (26.32 usr  7.48 sys + 2877.73 cusr 255.72 csys = 3167.25 CPU)

[08:03] <Geth_> ¦ roast: 5f7eb674a2 | (Valentin Anger)++ | S02-types/lazy-lists.t

[08:03] <Geth_> ¦ roast: Add tests for lazy iterators

[08:03] <Geth_> ¦ roast: 

[08:03] <Geth_> ¦ roast: rakudo/rakudo#3041

[08:03] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/5f7eb674a2

[08:03] <Geth_> ¦ roast: 812a2ad8ef | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | S02-types/lazy-lists.t

[08:03] <Geth_> ¦ roast: Merge pull request #580 from SyrupThinker/R3041

[08:03] <synopsebot> RAKUDO#3041 [open]: https://github.com/rakudo/rakudo/issues/3041 [tests needed] Using .kv, .pairs, or .antipairs on lazy List causes eager evaluation

[08:03] <Geth_> ¦ roast: 

[08:03] <Geth_> ¦ roast: Add tests for lazy iterators

[08:03] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/812a2ad8ef

[08:06] <Geth_> ¦ roast: 8aa6941d87 | (Valentin Anger)++ | S32-trig/sinh.t

[08:06] <Geth_> ¦ roast: Add test that sinh is 'odd'

[08:06] <Geth_> ¦ roast: 

[08:06] <Geth_> ¦ roast: rakudo/rakudo#2688

[08:06] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/8aa6941d87

[08:06] <Geth_> ¦ roast: f48f1ba578 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | S32-trig/sinh.t

[08:06] <Geth_> ¦ roast: Merge pull request #579 from SyrupThinker/R2688

[08:06] <synopsebot> RAKUDO#2688 [open]: https://github.com/rakudo/rakudo/issues/2688 [tests needed] asinh() is not an odd function

[08:06] <Geth_> ¦ roast: 

[08:07] <Geth_> ¦ roast: Add test that sinh is 'odd'

[08:07] <Geth_> ¦ roast: review: https://github.com/perl6/roast/commit/f48f1ba578

[09:43] <|Tux|> Rakudo version 2019.07.1-365-g6297b0e46 - MoarVM version 2019.07.1-243-g1546c8c4d

[09:43] <|Tux|> csv-test-xs-20      0.416 -  0.423

[09:43] <|Tux|> csv-ip5xs           0.773 -  0.790

[09:43] <|Tux|> test-t --race       0.777 -  0.896

[09:43] <|Tux|> test-t              1.725 -  1.816

[09:43] <|Tux|> csv-ip5xs-20        6.345 -  6.491

[09:43] <|Tux|> test                6.846 -  7.004

[09:43] <|Tux|> test-t-20 --race    9.135 -  9.162

[09:44] <|Tux|> csv-parser         22.314 - 23.427

[09:44] <|Tux|> test-t-20          29.957 - 29.962

[10:48] *** cognomin_ joined
[10:52] *** cognominal left
[10:58] <tbrowder> good morning raku-dev

[10:59] <tbrowder> .seen ugexe

[10:59] <tellable6> tbrowder, I saw ugexe 2019-09-24T11:24:41Z in #perl6-dev: <ugexe> te Example doesn’t explicitly use .p6 but it just as easily could

[13:09] *** lucasb joined
[15:11] *** awwaiid left
[15:11] *** awwaiid joined
[16:07] *** robertle joined
[16:33] <MasterDuke> nine: i can confirm that `perl6 -I lib/ -e 'use foo::bar::...;'` where lib has ~14k files takes 3s

[16:34] <MasterDuke> all in stage parse

[16:36] <MasterDuke> whoops, make that ~7k .pm6 files, where each is just something like `class hh::hh { method n() {  say q|hh::hh| }}`

[16:37] <nine> MasterDuke: 3 seconds for 7k files is not terribly good, but also not unexpected. > 40 seconds sounded far off

[16:41] <MasterDuke> but if his files are bigger...

[16:41] <MasterDuke> or he has a spinning disk...

[16:52] <MasterDuke> or a slower cpu. my parse times have halved since i upgraded to this ryzen

[17:44] *** Ven`` joined
[18:09] *** greppable6 left
[18:12] *** lancew joined
[18:13] *** greppable6 joined
[18:13] *** ChanServ sets mode: +v greppable6

[18:24] <lizmat> notable6: weekly

[18:24] <notable6> lizmat, 12 notes: https://gist.github.com/0b6965e08b2f0ac83d71c854caceedcf

[18:24] <lizmat> notable6: weekly reset

[18:24] <notable6> lizmat, Moved existing notes to “weekly_2019-09-30T18:24:57Z”

[18:32] *** lancew left
[18:58] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/09/30/2019-39-with-a-lump/

[19:26] <vrurg> lizmat++

[19:33] <Geth_> ¦ nqp: 0b8c8c79b3 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[19:33] <Geth_> ¦ nqp: Remove unused macports thingie

[19:33] <Geth_> ¦ nqp: 

[19:33] <Geth_> ¦ nqp: mojca++

[19:33] <Geth_> ¦ nqp: https://colabti.org/irclogger/irclogger_log/perl6?date=2019-09-30#l376

[19:33] <Geth_> ¦ nqp: review: https://github.com/perl6/nqp/commit/0b8c8c79b3

[19:45] <Geth_> ¦ nqp: vrurg self-assigned NQP::Config missing from release tarball https://github.com/perl6/nqp/issues/581

[19:58] <Geth_> ¦ rakudo: 519cfdeb24 | (Elizabeth Mattijsen)++ | 2 files

[19:58] <Geth_> ¦ rakudo: Make .indices quite a bit faster

[19:58] <Geth_> ¦ rakudo: 

[19:58] <Geth_> ¦ rakudo: Especially the Cool variants.  Mostly by making them share the same

[19:58] <Geth_> ¦ rakudo: proto and getting rid of the |c signature.

[19:58] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/519cfdeb24

[20:00] <lizmat> thought experiment: can something that is *not* a Str but *is* a Cool have whitespace or newlines in it

[20:00] <lizmat> I can't think of a way, but then I have a limited imagination  :-)

[20:02] <MasterDuke> well, calling something like .contains on an array is a known trap, if that's what you're getting at. but that's because it calls .Str on it, so don't know if it's exactly what you mean

[20:02] <lizmat> I'm looking at the Cool candidates for lines and words

[20:02] <lizmat> I think they should always return self.Str (possibly wrapped in a Seq)

[20:03] <MasterDuke> are Bufs/Blobs Cool?

[20:03] <MasterDuke> m: say Buf.^mro

[20:03] <camelia> rakudo-moar 17d036ad4: OUTPUT: «No such method 'mro' for invocant of type 'Perl6::Metamodel::ParametricRoleGroupHOW'␤  in block <unit> at <tmp> line 1␤␤»

[20:04] <lizmat> they're roles

[20:05] <MasterDuke> i never remember that

[20:27] *** cognominal joined
[20:28] <Geth_> ¦ rakudo: 25abfe2b70 | (Elizabeth Mattijsen)++ | 2 files

[20:28] <Geth_> ¦ rakudo: Make .lines quite a bit faster

[20:28] <Geth_> ¦ rakudo: 

[20:28] <Geth_> ¦ rakudo: Especially the Cool variants.  Mostly by making them share the same

[20:28] <Geth_> ¦ rakudo: proto and getting rid of the |c signature.

[20:28] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/25abfe2b70

[20:30] *** cognomin_ left
[20:44] <Geth_> ¦ rakudo: 1e2b0ec595 | (Elizabeth Mattijsen)++ | 2 files

[20:44] <Geth_> ¦ rakudo: Make .words quite a bit faster

[20:44] <Geth_> ¦ rakudo: 

[20:44] <Geth_> ¦ rakudo: Especially the Cool variants.  Mostly by making them share the same

[20:44] <Geth_> ¦ rakudo: proto and getting rid of the |c signature.

[20:44] <Geth_> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1e2b0ec595

[20:44] <lizmat> and that concludes my low-hanging Cool |c fruit fixing

[20:45] <MasterDuke> lizmat++

[20:55] <tbrowder> okay, what is the word on discussing raku file extensions within the community? i see it is "final" in the closed discussion, but i don't understand why except it's a decision by jnthn. i think at least one senior dev expressed doubt that that decision needs to be made along with the name-changing decision.

[20:56] <tbrowder> ...at least at this stage in the game

[21:42] <Geth_> ¦ roast: vrurg++ created pull request #581: [WIP] Tests for language versioning

[21:42] <Geth_> ¦ roast: review: https://github.com/perl6/roast/pull/581

[22:48] *** Ven`` left
