[00:27] *** AlexDaniel` left
[00:28] *** tyil[m] left
[00:37] *** AlexDaniel` joined
[01:02] *** tyil[m] joined
[01:08] *** Kaiepi left
[01:10] *** lucasb left
[05:43] <DrForr> .seen jnthn

[05:43] <yoleaux> I saw jnthn 18 Mar 2019 23:12Z in #perl6-dev: <jnthn> m: subset S of Any where { True }; BEGIN say Any ~~ S

[06:36] <DrForr> .tell jnthn I've added a bug report to Grammar::Debugger - the debugger is failing to initialize $!state and I'm not quite sure why.

[06:36] <yoleaux> DrForr: I'll pass your message to jnthn.

[06:37] <DrForr> .tell jnthn The 'proto rule' may not be relevant, not sure.

[06:37] <yoleaux> DrForr: I'll pass your message to jnthn.

[08:12] *** lgtaube left
[08:30] *** lgtaube joined
[08:30] *** robertle_ joined
[09:19] *** brrt joined
[09:45] *** klapperl left
[10:07] *** brrt left
[10:17] *** klapperl joined
[13:09] *** brrt joined
[13:17] *** lucasb joined
[13:58] *** brrt left
[14:31] *** dogbert joined
[14:31] *** dogbert is now known as Guest27580

[16:12] <ugexe> it is a bit disconcerting that such strong language is being used to discourage a grant... language that itself suggests the "community" (read: irc) itself has a similar judgement. I don't think people should be using the word "community" anytime they want to get their point across, and instead the community should come to back up the ideas put forward without the assumption of some group of people already

[16:13] <ugexe> having weighed in judgement. I know had I recieved such words in response to a grant that I would be discouraged altogether.

[16:37] <AlexDaniel> yes, it's unfortunate that people get to that point (submitting a proposal) without discussing it with anyone, which is why I'm saying that there should be some requirements before you can submit. Otherwise, indeed, people will be discouraged

[16:38] <AlexDaniel> as for the ‚Äúcommunity‚Äù, I agree on that, and maybe once the problem-solving repo is up and running we'll be able to point directly to SMEs

[16:39] <jdv79> it does seem over the top - i can agree with that

[16:47] <ugexe> we dont know that it wasn't discussed with anyone. i agree that in likelyhood it wasn't, but i think you'd be surprised at how many/much discussions i hold outside of public irc channels 

[16:49] *** robertle_ left
[16:49] <ugexe> outside of public period

[17:26] *** discord6 joined
[17:27] *** fundey joined
[17:27] <discord6> <Rogue> Test

[17:28] *** fundey left
[17:34] <AlexDaniel> test unsuccessful

[17:35] <AlexDaniel> I guess we didn't have the bot here before, right? Nice

[17:35] <discord6> <Rogue> Yes, the channel structure on the Discord end has been changed around a bit

[17:35] <AlexDaniel> maybe it should join #moarvm too

[17:36] <discord6> <Rogue> That's an idea

[17:39] *** discord6 left
[17:39] *** discord6 joined
[17:39] <tyil> when the bot comes back up again, #moarvm should be included in its bridging powers

[17:39] <tyil> (but do test :))

[17:40] *** lgtaube left
[17:44] *** AlexDaniel left
[17:57] *** lgtaube joined
[18:17] *** AlexDaniel joined
[18:23] *** MasterDuke left
[18:32] <DrForr> .seen jnthn

[18:32] <yoleaux> I saw jnthn 17:57Z in #perl6: <jnthn> MasterDuke: :kv filters keys that don't exist

[19:08] *** MasterDuke joined
[19:08] *** MasterDuke left
[19:08] *** MasterDuke joined
[19:15] *** ugexex joined
[19:16] *** ugexe left
[19:16] *** ugexex is now known as ugexe

[21:20] *** MasterDuke left
[21:38] *** MasterDuke joined
[21:38] *** MasterDuke left
[21:38] *** MasterDuke joined
[21:40] <MasterDuke> i added `$cur.panic('No operands to reduce') unless @opstack;` right here https://github.com/perl6/nqp/blob/master/src/HLL/Grammar.nqp#L540 and now '|{}<a b>:kv.hash' gives `===SORRY!=== Error while compiling -e No operands to reduce at -e:1 ------> |{}<a b>:kv.‚èèhash`

[21:40] <MasterDuke> is that any better than what happens now?

[21:41] <MasterDuke> m: |{}<a b>:kv.hash # for reference

[21:41] <camelia> rakudo-moar 6d8077cec: OUTPUT: ¬´===SORRY!===‚ê§MVMArray: Can't pop from an empty array‚ê§¬ª

[21:45] *** vrurg left
[22:14] <jnthn> .tell DrForr 'fraid it'll be at least a week before I've time to look at that

[22:14] <yoleaux> jnthn: I'll pass your message to DrForr.

[22:15] <jnthn> MasterDuke: Yes, in so far as it's easier to grep for in the source. For the poor user who wanted the thing to work, probably not. :-)

[22:16] <MasterDuke> jnthn: heh, yeah. any suggestion for what should happen?

[22:18] <jnthn> MasterDuke: Well, naively I guess it should work like |({}<a b>:kv).hash, but I dunno if that's realistic without looking at what's going on 

[22:18] <jnthn> Adverb handling is...magical...

[22:27] <Geth> ¬¶ rakudo: lizmat self-assigned $p is Mu https://github.com/rakudo/rakudo/issues/2773

[22:38] *** vrurg joined
[22:48] <Geth> ¬¶ rakudo: 76b6416d00 | (Elizabeth Mattijsen)++ | src/core/signals.pm6

[22:48] <Geth> ¬¶ rakudo: Simplify creation of the Signal enum

[22:48] <Geth> ¬¶ rakudo: 

[22:48] <Geth> ¬¶ rakudo: Also fixes R#2773

[22:48] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/76b6416d00

[22:48] <timotimo> lizmat++

[22:51] *** nebuchadnezzar left
[22:52] <lizmat> afk&

[22:56] <MasterDuke> jnthn: that's what i was afraid of. i saw 'EXPR' in the method name and adverbs in the example and hoped not to have to delve too deep. i'm just going to rakudobug it and leave for someone better able to handle it

[23:00] *** nebuchadnezzar joined
[23:16] *** lucasb left
[23:17] *** dalek left
