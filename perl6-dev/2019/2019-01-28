[02:31] *** leont left
[04:12] *** Kaypie left
[06:23] *** Kaypie joined
[07:08] *** gfldex left
[07:09] *** gfldex joined
[07:18] <nine> lizmat: migrating tickets sounds like a lot of work with little reward. It's also pretty much the last thing the Parrot project really did...

[07:18] *** AlexDaniel joined
[07:51] *** robertle_ joined
[08:22] <Geth> ¦ rakudo: JJ++ created pull request #2654: Change to .gitignore

[08:22] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/2654

[08:42] *** Kaypie left
[08:56] *** patrickb joined
[09:00] <patrickb> Hi everyone!

[09:01] <patrickb> AlexDaniel, MasterDuke: In your GSoCproposals you are referring to a list of perl6 mentors. What does that refer to? (I would actually prefer a hard list of people, so students directly know who to contact.)

[09:02] <AlexDaniel> yes yes I agree

[09:02] <AlexDaniel> I don't think there's a list atm

[09:04] <patrickb> A distinct list for each idea I mean. Otherwise it's very difficult to tell who feels responsible for which idea.

[09:04] <AlexDaniel> In fact I'd prefer these references to be replaced with specific people

[09:04] <AlexDaniel> yeah

[09:06] <patrickb> ATM The ideas repo feels more like a place people dump their ideas on and just hope for someone else to mentor. But we'll have to remove all the ideas without a mentor before the deadline.

[09:12] <AlexDaniel> yeah

[09:41] <AlexDaniel> hmm… I can mentor some, but only for the first half of the summer…

[09:53] <patrickb> I'm not entirely sure sharing mentorship is ok for Google (but I might have actually read something like that, I can look that up), but seems like a good idea to me.

[10:04] <Geth> ¦ rakudo: 2cd96705c1 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 2 files

[10:04] <Geth> ¦ rakudo: Change to .gitignore

[10:04] <Geth> ¦ rakudo: 

[10:04] <Geth> ¦ rakudo: And added two plausible file extensions, and a note to avoid deletion.

[10:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2cd96705c1

[10:04] <Geth> ¦ rakudo: 88b3517342 | (Jonathan Worthington)++ (committed using GitHub Web editor) | 2 files

[10:04] <Geth> ¦ rakudo: Merge pull request #2654 from JJ/patch-4

[10:04] <Geth> ¦ rakudo: 

[10:04] <Geth> ¦ rakudo: Change to .gitignore

[10:04] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/88b3517342

[10:18] *** leont joined
[10:34] <lizmat> Files=1266, Tests=88056, 379 wallclock secs (20.36 usr  5.79 sys + 2712.91 cusr 230.67 csys = 2969.73 CPU)

[10:38] *** Kaypie joined
[11:25] *** ufobat joined
[11:27] *** |Tux| left
[11:33] *** |Tux| joined
[11:44] *** nebg joined
[11:44] <nebg> hello all guys, how can i contirbute to the perl6 language ? 

[11:49] <AlexDaniel> nebg: hello! Anything specific that you're interested in?

[12:03] <lizmat> nebg o/

[12:11] <nebg> AlexDaniel, no just programming 

[12:11] <nebg> i mean i would like to work the programming part and not on the translation/docs part

[12:17] <lizmat> nebg: https://github.com/rakudo/rakudo/issues contains the currently open issues of Rakudo Perl 6

[12:17] <lizmat> and Pull Requests to fix bugs are always welcome  :-)

[12:18] <AlexDaniel> let us know if you'd prefer to work on MoarVM, maybe jnthn or brrt can introduce you to that if you have that specific interest

[12:19] <AlexDaniel> maybe something from that list is a good start? https://github.com/rakudo/rakudo/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22

[12:20] <AlexDaniel> also: https://rakudo.party/post/Newcomer-Guide-to-Contributing-to-Core-Perl-6

[12:20] <Geth> ¦ rakudo: 7133b81e4f | (Elizabeth Mattijsen)++ | 2 files

[12:20] <Geth> ¦ rakudo: Make Buf[Int].new(1,2,3) error less cryptic

[12:20] <Geth> ¦ rakudo: 

[12:20] <Geth> ¦ rakudo: Basically indicate that anything but a native int type is not allowed

[12:20] <Geth> ¦ rakudo: (and will most likely not ever be implemented, so remove the NYI also).

[12:20] <Geth> ¦ rakudo: 

[12:20] <Geth> ¦ rakudo: Fixes R#2655

[12:20] <synopsebot> R#2655 [open]: https://github.com/rakudo/rakudo/issues/2655 Cryptic error when parametrizing Bufs with non-native types

[12:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7133b81e4f

[12:34] *** Kaypie left
[13:18] *** brrt joined
[13:50] *** lucasb joined
[13:54] <jnthn> AlexDaniel: Can I take your <3 on my last post on https://github.com/rakudo/rakudo/issues/2608 as approval of that branch/erratum?

[13:55] <jnthn> Also, if anyone else has views on that, please comment :)

[13:58] <AlexDaniel> jnthn: uhh, it's hard. Only Blin knows for sure. Like there could be tens of modules depending on the original behavior in some unknown ways

[13:58] <AlexDaniel> whateverable does not follow branches, unfortunately

[13:58] <AlexDaniel> which needs to be fixed…

[13:59] <AlexDaniel> or at least Blin should know how to build on demand…

[13:59] <jnthn> AlexDaniel: I find it unlikely that merging the branch would implicate many more, if any more, modules than the current state does; it largely just makes the behavior change more sensible.

[14:00] <AlexDaniel> jnthn: let's try it

[14:00] <jnthn> And gets rid of some previous, odd, semantics

[14:00] <AlexDaniel> I can run Blin right after the merge and we'll be able to confirm that

[14:00] <jnthn> OK. Well, first I need to make it behave sensibly for 6.c's sake

[14:03] *** brrt left
[14:03] <jnthn> I also need to look at the Cro::WebSocket one. Also...

[14:04] <jnthn> It turns out that lowering away lexicals into locals and not retaining any hints about what we did makes the remote debug stuff in MoarVM way less useful (in fact, it was already a lot less useful than it could be for NQP for that reason).

[14:04] <jnthn> I'm wondering about fixing that quickly, especially since this release is the one that'll be R*'d, meaning it'll be the Windows MSI, and I don't really want to doom Windows users to poorer debug experience for 3 months :)

[14:05] *** nebg left
[14:05] <jnthn> Since it's just a change to pass a little extra info down to the VM, it feels very low risk.

[14:05] <timotimo> it'll still be difficult since locals have lifetimes and such

[14:05] <timotimo> and registers change what they are "for" during spesh

[14:06] <jnthn> timotimo: The first is only true if they are declared in a QAST::Stmt, which isn't the case for the ones lexicals are lowered in to

[14:06] <timotimo> oh? OK, that makes it better

[14:07] <jnthn> And yeah, you're right about spesh, but if you add an unconditional deopt usage for such locals when running in debug mode, well, you lose a few set eliminate opt possibilities, but retain them

[14:07] <jnthn> Or maybe it's enough to make a breakpoint we marked as a deopt point, actually

[14:07] <jnthn> *be marked

[14:07] <jnthn> That's no extra lines of code, just a change in oplist :)

[14:08] <timotimo> hm, that's fair. that'll change inline behaviour, but ehhh

[14:08] <timotimo> less bad in debug than in profile

[14:08] <jnthn> Yeah, though we should probably make a list of ops that are not counted for the sake of inline size

[14:08] <jnthn> Probably as a new annotation in oplist

[14:09] <jnthn> And then subtract them when considering inlines

[14:09] <timotimo> aye, i've got a PR that'll do the calculations

[14:09] <jnthn> Ah, neat :)

[14:09] <timotimo> but it depends on the opcode number being past the first prof_ one

[14:09] <jnthn> With an oplist annotation?

[14:09] <jnthn> Hm, I think it'd be more robust with the annotaiton :)

[14:09] <timotimo> nine already asked for that specific change :D

[14:09] <jnthn> hah :)

[14:11] <Geth> ¦ rakudo/regex-literal-experiment: 8ef7c15ed5 | (Jonathan Worthington)++ | 3 files

[14:11] <Geth> ¦ rakudo/regex-literal-experiment: Make regex literals capture $/ and $!

[14:11] <Geth> ¦ rakudo/regex-literal-experiment: 

[14:11] <Geth> ¦ rakudo/regex-literal-experiment: These are then used when the regex is evaluated in boolean context,

[14:11] <Geth> ¦ rakudo/regex-literal-experiment: rather than using dynamic scope, which is not reliable given that `$_`

[14:11] <Geth> ¦ rakudo/regex-literal-experiment: is no longer dynamic as of 6.d. Previously, we would not lower away `$_`

[14:11] <Geth> ¦ rakudo/regex-literal-experiment: if we saw a regex literally present in that scope, however this cannot

[14:11] <Geth> ¦ rakudo/regex-literal-experiment: handle the at-a-distance uses.

[14:11] <Geth> ¦ rakudo/regex-literal-experiment: <…commit message has 20 more lines…>

[14:11] <Geth> ¦ rakudo/regex-literal-experiment: review: https://github.com/rakudo/rakudo/commit/8ef7c15ed5

[14:12] <jnthn> Just a rebase, so I won't get spurious test fails

[14:23] *** Guest92871 joined
[14:23] <timotimo> jnthn: anything beside prof_, ctw_*, coverage_log, and breakpoint requires :ignoresize?

[14:24] <Guest92871> jnthn: I have tried to bisect R#2644 for you. (dogbert17 in disguise)

[14:24] <synopsebot> R#2644 [open]: https://github.com/rakudo/rakudo/issues/2644 [regression][⚠ blocker ⚠] Some regression with Cro::WebSocket

[14:25] <jnthn> Guest92871: Yeah, I saw that...doesn't give me much more clues, alas, but still helpful to know :)

[14:25] <jnthn> timotimo: I don't think so

[14:26] <timotimo> good

[14:29] *** brrt joined
[14:30] *** Kaypie joined
[14:36] <timotimo> bleh, first a bunch of conflicts, now it won't compile any more

[14:37] <jnthn> Hurrah, think I have the 6.c semantic retention for that regex-literal-experiment branch working

[14:41] <timotimo> how did MVM_SWITCHENDIAN get lost?

[14:42] <Geth> ¦ rakudo/regex-literal-experiment: 3d581c8d23 | (Jonathan Worthington)++ | 3 files

[14:42] <Geth> ¦ rakudo/regex-literal-experiment: Preserve 6.c Regex.Bool behavior

[14:42] <Geth> ¦ rakudo/regex-literal-experiment: review: https://github.com/rakudo/rakudo/commit/3d581c8d23

[14:43] <lizmat> notable6: weekly reset

[14:43] <notable6> lizmat, Moved existing notes to “weekly_2019-01-28T14:43:52Z”

[14:45] <Geth> ¦ roast: b8a8f3fe81 | (Jonathan Worthington)++ | S05-metasyntax/interpolating-closure.t

[14:45] <Geth> ¦ roast: Update test for refined Regex.Bool semantics

[14:45] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b8a8f3fe81

[14:46] <AlexDaniel> lizmat: maybe a mention of GSoC repo?

[14:46] <lizmat> yeah, in there already, in fact main article  :-)

[14:46] <Geth> ¦ roast/6.d-errata: 01e8830458 | (Jonathan Worthington)++ | S05-metasyntax/interpolating-closure.t

[14:46] <Geth> ¦ roast/6.d-errata: Update test for refined Regex.Bool semantics

[14:46] <Geth> ¦ roast/6.d-errata: review: https://github.com/perl6/roast/commit/01e8830458

[14:46] <AlexDaniel> alright :)

[14:47] <Geth> ¦ rakudo: 8ef7c15ed5 | (Jonathan Worthington)++ | 3 files

[14:47] <Geth> ¦ rakudo: Make regex literals capture $/ and $!

[14:47] <Geth> ¦ rakudo: 

[14:47] <Geth> ¦ rakudo: These are then used when the regex is evaluated in boolean context,

[14:47] <Geth> ¦ rakudo: rather than using dynamic scope, which is not reliable given that `$_`

[14:47] <Geth> ¦ rakudo: is no longer dynamic as of 6.d. Previously, we would not lower away `$_`

[14:47] <Geth> ¦ rakudo: if we saw a regex literally present in that scope, however this cannot

[14:47] <Geth> ¦ rakudo: handle the at-a-distance uses.

[14:47] <Geth> ¦ rakudo: <…commit message has 20 more lines…>

[14:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/8ef7c15ed5

[14:47] <Geth> ¦ rakudo: 3d581c8d23 | (Jonathan Worthington)++ | 3 files

[14:47] <Geth> ¦ rakudo: Preserve 6.c Regex.Bool behavior

[14:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3d581c8d23

[14:52] *** MasterDuke left
[14:54] <patrickb> lizmat: Do you still have ties to p5 people? I have the feeling we need some more advertisement of GSoC among the p5ers. I already tried to reach two high profile p5ers but I no replies so far and I fear we are running out of time...

[14:57] * leont is a p5 person, but p5 is organized different than p6

[14:58] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/01/28/2019-04-summer-of-code/

[14:58] <patrickb> leont: I'd suspect the core devs and large module authors are candidates to be gsoc mentors.

[14:59] <lizmat> patrickb: in the past year I've learned the hard way that I'm not the person to ask the Perl 5 community anything :-(

[15:10] *** Guest92871 left
[15:14] <Geth> ¦ nqp: 342e7934d6 | (Jonathan Worthington)++ | src/QAST/Block.nqp

[15:14] <Geth> ¦ nqp: Add a local debug map to QAST::Block

[15:14] <Geth> ¦ nqp: 

[15:14] <Geth> ¦ nqp: This will be used in order to retain the names of symbols that once

[15:14] <Geth> ¦ nqp: existed as lexicals, but have been lowered to locals, so that those

[15:14] <Geth> ¦ nqp: debugging programs using, for example, the MoarVM remote debugger, will

[15:14] <Geth> ¦ nqp: be able to find the variables.

[15:14] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/342e7934d6

[15:37] <|Tux|> Rakudo version 2018.12-266-g3d581c8d2 - MoarVM version 2018.12-37-g631cfdf6c

[15:37] <|Tux|> csv-test-xs-20      0.438 -  0.445

[15:37] <|Tux|> csv-ip5xs           0.763 -  0.782

[15:37] <|Tux|> test-t --race       0.838 -  0.853

[15:37] <|Tux|> test-t              1.893 -  1.901

[15:37] <|Tux|> csv-ip5xs-20        6.536 -  6.573

[15:37] <|Tux|> test                7.299 -  7.811

[15:37] <|Tux|> test-t-20 --race    9.836 - 10.107

[15:37] <|Tux|> csv-parser         22.311 - 23.375

[15:37] <|Tux|> test-t-20          31.556 - 33.839

[15:38] <|Tux|> when I ran it locally while working on that box this morning, it was more like 1.91 -2.30 :(

[16:11] *** robertle_ left
[16:28] <AlexDaniel> patrickb: https://colabti.org/irclogger/irclogger_log/perl6?date=2019-01-28#l643

[16:28] <AlexDaniel> (question about gsoc)

[16:39] *** ExtraCrispy joined
[16:43] *** brrt left
[16:45] *** ExtraCrispy left
[16:56] *** patrickb left
[17:04] *** patrickb joined
[17:56] *** sivoais left
[18:17] *** brrt joined
[18:23] *** lucasb left
[18:29] *** brrt left
[20:27] *** gfldex left
[20:27] *** dct joined
[20:28] *** gfldex joined
[22:30] *** MasterDuke joined
[22:30] *** MasterDuke left
[22:30] *** MasterDuke joined
[23:28] *** dct left
[23:30] *** dct joined
[23:40] *** patrickb left
