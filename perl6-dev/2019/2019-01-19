[02:01] <MasterDuke> any idea why i'm getting 'Attempt to read past end of string heap when reading string length' on my rebased default-nqp-to-int branch?

[02:18] <MasterDuke> nine: i add a new entry to MVMStringConsts in my MoarVM branch that goes along with my default-vars/ops-to-int NQP branch. could that have caused some conflict with your recent mbc work?

[06:25] *** squashable6 left
[06:25] *** reportable6 left
[06:25] *** coverable6 left
[06:25] *** quotable6 left
[06:25] *** undersightable6 left
[06:25] *** shareable6 left
[06:25] *** bisectable6 left
[06:25] *** benchable6 left
[06:25] *** statisfiable6 left
[06:25] *** bloatable6 left
[06:25] *** nativecallable6 left
[06:25] *** evalable6 left
[06:25] *** committable6 left
[06:25] *** greppable6 left
[06:25] *** notable6 left
[06:25] *** releasable6 left
[06:25] *** unicodable6 left
[06:26] *** bisectable6 joined
[06:26] *** benchable6 joined
[06:26] *** notable6 joined
[06:26] *** p6bannerbot sets mode: +v bisectable6

[06:27] *** releasable6 joined
[06:27] *** greppable6 joined
[06:27] *** shareable6 joined
[06:27] *** p6bannerbot sets mode: +v benchable6

[06:27] *** p6bannerbot sets mode: +v notable6

[06:27] *** quotable6 joined
[06:28] *** unicodable6 joined
[06:28] *** p6bannerbot sets mode: +v releasable6

[06:28] *** p6bannerbot sets mode: +v greppable6

[06:28] *** p6bannerbot sets mode: +v shareable6

[06:28] *** undersightable6 joined
[06:28] *** ChanServ sets mode: +v undersightable6

[06:28] *** p6bannerbot sets mode: +v quotable6

[06:28] *** p6bannerbot sets mode: +v unicodable6

[06:28] *** statisfiable6 joined
[06:28] *** ChanServ sets mode: +v statisfiable6

[06:29] *** p6bannerbot sets mode: +v undersightable6

[06:29] *** evalable6 joined
[06:29] *** bloatable6 joined
[06:29] *** ChanServ sets mode: +v bloatable6

[06:29] *** nativecallable6 joined
[06:29] *** ChanServ sets mode: +v nativecallable6

[06:29] *** p6bannerbot sets mode: +v statisfiable6

[06:29] *** reportable6 joined
[06:29] *** ChanServ sets mode: +v reportable6

[06:30] *** squashable6 joined
[06:30] *** ChanServ sets mode: +v squashable6

[06:30] *** committable6 joined
[06:30] *** p6bannerbot sets mode: +v evalable6

[06:30] *** p6bannerbot sets mode: +v bloatable6

[06:30] *** p6bannerbot sets mode: +v nativecallable6

[06:30] *** p6bannerbot sets mode: +v reportable6

[06:30] *** coverable6 joined
[06:31] *** p6bannerbot sets mode: +v squashable6

[06:31] *** p6bannerbot sets mode: +v committable6

[06:31] *** p6bannerbot sets mode: +v coverable6

[07:37] *** timotimo left
[07:42] *** timotimo joined
[07:42] *** p6bannerbot sets mode: +v timotimo

[08:07] <nine> MasterDuke: don't see how

[09:28] *** ufobat joined
[09:29] *** p6bannerbot sets mode: +v ufobat

[10:28] *** Kaiepi left
[10:28] *** Kaypie joined
[10:29] *** p6bannerbot sets mode: +v Kaypie

[10:34] *** Merfont joined
[10:34] *** Kaypie left
[10:35] *** p6bannerbot sets mode: +v Merfont

[11:46] *** llfourn left
[11:52] <MasterDuke> i don't understand why NQP builds ok, but even the empty program dies with that error

[12:01] *** ufobat left
[12:35] *** lucasb joined
[12:35] *** p6bannerbot sets mode: +v lucasb

[12:52] <Geth> ¬¶ rakudo: 304feae9f0 | (Elizabeth Mattijsen)++ | src/core/Str.pm6

[12:52] <Geth> ¬¶ rakudo: Make Str.trim-trailing about 10-20% faster

[12:52] <Geth> ¬¶ rakudo: 

[12:52] <Geth> ¬¶ rakudo: Depending on string and amount of whitespace

[12:52] <Geth> ¬¶ rakudo: review: https://github.com/rakudo/rakudo/commit/304feae9f0

[13:01] * lizmat is feeling rather dim today

[13:01] <lizmat> m: my $a = 42; my $b = q/a = $a/; say $b   # is there an easy method on $b to make that say "a = 42" ?

[13:01] <camelia> rakudo-moar 99d30be2a: OUTPUT: ¬´a = $a‚ê§¬ª

[13:02] <nine> lizmat: I assume not as interpolation is part of compilation

[13:03] <lizmat> right, I have the string 'a = $a'  and I want a method to turn interpolate the $a in the string

[13:05] <lizmat> can't eval it, as it's not legal code

[13:06] <lizmat> this in light of https://rt.perl.org/Public/Bug/Display.html?id=133772

[13:07] <nine> m: use MONKEY-SEE-NO-EVAL; my $a = 42; my $b = q/a = $a/; say EVAL qq["$b"

[13:07] <camelia> rakudo-moar 99d30be2a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Couldn't find terminator ] (corresponding [ was at line 1)‚ê§at <tmp>:1‚ê§------> 3 42; my $b = q/a = $a/; say EVAL qq["$b"7‚èè5<EOL>‚ê§    expecting any of:‚ê§        ]‚ê§¬ª

[13:07] <nine> m: use MONKEY-SEE-NO-EVAL; my $a = 42; my $b = q/a = $a/; say EVAL qq["$b"]

[13:07] <camelia> rakudo-moar 99d30be2a: OUTPUT: ¬´a = 42‚ê§¬ª

[13:07] <nine> lizmat: ^^^

[13:20] *** dct joined
[13:20] *** p6bannerbot sets mode: +v dct

[13:21] <lizmat> nine: yeah... but using EVAL...  meh

[13:23] <MasterDuke> nine: got any other idea about the string heap error?

[13:24] <MasterDuke> fwiw, here's the complete backtrace: https://gist.github.com/MasterDuke17/9f61f3d6d8afae9b5d0ed3619867b95e

[13:25] <nine> MasterDuke: writing bytecode includes quite a few calculations of positions. You change how NQP does math, so that's what I'd suspect.

[13:26] <MasterDuke> nine: that makes sense, but the results should be the same 

[13:29] <nine> There may be some subtle difference

[13:30] <nine> Btw. I can't find that branch?

[13:32] <MasterDuke> nine: https://github.com/MasterDuke17/nqp/tree/temp_default_int_fix is where i am now (amidst some rebasing and such)

[13:32] <MasterDuke> https://github.com/MasterDuke17/MoarVM/tree/add_smrt_intify is the MoarVM branch

[13:40] *** dct left
[13:44] <MasterDuke> nine: do you happen to remember if any of the calculations *should* be done as num?

[13:46] <nine> Ok, can clearly repro. I'm not terribly surprised why compilation succeeds but nqp-m -e '' breaks: First the stage0 compiler is used to compile the current sources into the stage1 compiler. Then the stage1 compiler is used to compile the same sources into stage2. As your branch subtly breaks the compiler, stage2 is the first part to be broken. And the first time that runs is in your ./nqp-m -e ''

[13:46] <nine> MasterDuke: they absolutely shouldn't

[13:46] <MasterDuke> nine: that's good (that they shouldn't)

[13:47] <MasterDuke> nine: my branch did pass `make m-test` in NQP a while ago

[13:48] <MasterDuke> well, the original branch did, but i think its state has been lost during my rebase attempts

[13:51] <MasterDuke> hm, https://github.com/perl6/nqp/blob/master/src/vm/moar/QAST/QASTCompilerMAST.nqp#L2327 might need changing

[13:58] <nine> So there actually is one calculation that's supposed to use floats, yes indeed.

[13:58] <nine> And it's used all over the place

[13:59] <MasterDuke> size()?

[14:04] <nine> Oh, indeed! Just change that line to: my uint32 $aligned := nqp::ceil_n(nqp::div_n($size, 8)) * 8;

[14:08] <MasterDuke> nine++, now it builds and there's just one failed test during a `make m-test`

[14:11] <MasterDuke> heh, and that was just the plan off by one!

[14:13] <MasterDuke> now to get back to trying to get rakudo to build with this branch...

[14:17] <MasterDuke> gets all the way to stage optimize, didn't remember it got that far: Stage optimize   : Unhandled exception: Cannot invoke this object (REPR: Null; VMNull)    at SETTING::src/core/Mu.pm6:549  (<ephemeral file>:Str)

[14:18] <nine> Encouraging results :)

[14:50] <MasterDuke> yep, but not that easy to debug...

[14:57] <MasterDuke> timotimo: is ^^^ something the debugserver could help with?

[15:04] <jnthn> lizmat: I'd probably write it like {q/a = $^a/} and then invoke the block, if that's an option :)

[15:45] <MasterDuke> heh. rakudo builds if i set --optimize=0, but then the install fails with: ===SORRY!=== This type cannot unbox to a native integer: P6opaque, Failure

[15:49] *** Merfont left
[15:49] <MasterDuke> ah ha! Signature.count is a Num, that might be it...

[15:49] *** Kaypie joined
[15:50] *** p6bannerbot sets mode: +v Kaypie

[16:01] <b2gills> m: say {q:s/a = $^a/}(42)

[16:01] <camelia> rakudo-moar 304feae9f: OUTPUT: ¬´a = 42‚ê§¬ª

[16:05] <nine> The optimizer does a surprising number of calculations. But nothing supsicious

[16:10] <MasterDuke> i think this is the problematic line: https://github.com/rakudo/rakudo/blob/master/src/Perl6/Optimizer.nqp#L3111

[16:12] <nine> Looks so innocent :)

[16:13] <nine> Why is Signature's count a Num anyway? Doesn't feel right

[16:14] <MasterDuke> istr it's so slurpies can be inf or something like that

[16:14] <nine> Yep, exactly that

[16:15] <MasterDuke> i once tried to change it and it wasn't a single-line fix

[16:16] <MasterDuke> ooooh, rakudo built and installed

[16:23] *** ufobat joined
[16:24] *** p6bannerbot sets mode: +v ufobat

[16:39] <MasterDuke> hmm, make m-test (aside from a couple fails to investigate) seems to hang during t/09-moar/NAME__UnicodeData.t

[16:46] <b2gills> I wonder if Signature.count could be -1 for Inf in NQP land

[16:48] <MasterDuke> i think negatives are already used

[16:49] <MasterDuke> but it was a while ago i looked at it, so not 100% sure

[16:50] <MasterDuke> mostly unrelated, but my branch(es) make the rakudo compile take at least 5s longer, which i wouldn't have expected

[16:54] <nine> MasterDuke: smrtintify is not JITed

[16:56] <nine> That probably breaks JIT compilation of a lot of frames

[16:57] <MasterDuke> arg, right. nine++ again

[16:57] <nine> I wondered the same thing previously :)

[17:16] <MasterDuke> hm, i thought another Signature.count related fix was needed, but now the install hangs with 100% cpu at: 

[17:17] <MasterDuke> home/dan/Source/perl6/install/bin/moar --libpath="blib" --libpath="/home/dan/Source/perl6/install/share/nqp/lib" --libpath="/home/dan/Source/perl6/install/share/nqp/lib" perl6.moarvm --nqp-lib=blib -e "for @*ARGS.head(*-1) { given (@*ARGS[*-1] ~ '/' ~ .IO.basename.Str) { say 'rm -f ' ~ .Str; .IO.unlink if .IO.e } }" blib/Perl6/ModuleLoader.moarvm blib/Perl6/World.moarvm blib/Perl6/Grammar.moarvm blib/Perl6/Ops.moarvm blib/Perl6/Actions.mo

[17:53] *** lucasb left
[18:20] *** ufobat left
[18:28] *** ufobat joined
[18:29] *** p6bannerbot sets mode: +v ufobat

[18:46] *** Kaypie is now known as Kaiepi

[20:17] <MasterDuke> anyone have an idea why changing the nqp::iseq_i here https://github.com/rakudo/rakudo/blob/master/src/core/WhateverCode.pm6#L8 to nqp::iseq_n would cause the hang i mentioned above? becuase i think that should be a correct change

[20:22] <nine> MasterDuke: the 1 there is now an int, isn't it?

[20:24] <MasterDuke> nine: hm, i thought it would Just Work, but maybe not

[20:24] <nine> I've never been completely sure what to expect. The only version I'm certain about is the spesh log

[20:26] <MasterDuke> odd that there was no error, just a hang

[20:26] <MasterDuke> huh, changed to 1e0 and it still hangs

[20:38] *** Kaiepi left
[20:38] *** Kaiepi joined
[20:39] *** p6bannerbot sets mode: +v Kaiepi

[21:00] <AlexDaniel> releasable6: status

[21:00] <releasable6> AlexDaniel, Next release will happen when it's ready. 4 blockers. 113 out of 239 commits logged (‚ö† 41 warnings)

[21:01] <releasable6> AlexDaniel, Details: https://gist.github.com/cb7f223f2a237857646e66eb28db7f23

[21:29] <MasterDuke> timotimo: how should i use the debug server to see what's going on during that install command?

[21:33] <MasterDuke> getting a lot of: Tried to get the result of a broken Promise .......

[21:37] <MasterDuke> when i do a dump

[22:28] *** llfourn joined
[22:29] *** p6bannerbot sets mode: +v llfourn

[23:12] *** ufobat left
