[00:30] *** lucasb left
[02:45] <Geth> ¦ rakudo: vrurg++ created pull request #3154: Fix for incorrect default parent lookup 

[02:45] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3154

[02:58] <AlexDaniel> vrurg: hm, I wonder, do you have permissions to edit my comments?

[02:59] <vrurg> AlexDaniel: yes, I do. Just didn't want to.

[02:59] <AlexDaniel> ok, whatever works for you. But please feel free to edit any of my comments if you ever feel like

[03:00] <vrurg> AlexDaniel: interestingly enough, I did fix the problem with Grammar but t/spec/integration/weird-errors.rakudo.moar segfaults on test 30 again.

[03:01] <vrurg> AlexDaniel: ok, thanks! But generally, I dislike doing so.

[03:01] <vrurg> Done for today. cu!

[03:04] <AlexDaniel> yeah, a lot of people are against comment editing, I guess that's ok too. But I have a wiki mindset for anything that I publish, so I'm totally ok with people touching ~my~ our stuff :)

[05:57] *** robertle left
[07:01] <nine> Class Cro::MediaType::Grammar cannot inherit from itself

[07:01] <nine> I think we need some reverting

[07:20] *** robertle joined
[07:50] *** Kaiepi left
[07:53] *** Kaiepi joined
[08:32] *** vrurg left
[08:32] *** vrurg joined
[09:42] *** pmurias joined
[10:14] <|Tux|> Rakudo version 2019.07.1-237-g0455f42e3 - MoarVM version 2019.07.1-163-gb49b5202f

[10:14] <|Tux|> csv-test-xs-20      0.435 -  0.439

[10:14] <|Tux|> csv-ip5xs           0.659 -  0.692

[10:14] <|Tux|> test-t --race       0.794 -  0.804

[10:14] <|Tux|> test-t              1.699 -  1.720

[10:14] <|Tux|> csv-ip5xs-20        4.814 -  4.982

[10:14] <|Tux|> test                6.927 -  7.132

[10:14] <|Tux|> test-t-20 --race    9.115 -  9.417

[10:14] <|Tux|> csv-parser         21.944 - 22.010

[10:14] <|Tux|> test-t-20          29.276 - 29.452

[10:20] <eater> how do I compile rakudo with a different STATIC_PERL6_HOME? it seems it's either set to ../share/perl6 or $PREFIX/share/perl6 (here: https://github.com/rakudo/rakudo/blob/3f699e26f6629349dc8ef64c2b64c96b33f718a3/tools/lib/NQP/Config/Rakudo.pm#L349)

[10:24] *** masak is now known as Guest74090

[10:25] *** ilogger2 joined
[10:26] *** eater joined
[10:26] *** nebuchadnezzar joined
[10:26] *** nebuchadnezzar is now known as Guest90858

[10:28] <eater> but e.g. if you set libdir to /usr/lib, the runtime files will reside in /usr/lib/perl6 instead of {PREFIX}/share/perl6

[10:29] *** commavir joined
[10:29] *** bartolin joined
[10:29] *** japhb joined
[10:33] *** Voldenet joined
[10:33] *** Voldenet left
[10:33] *** Voldenet joined
[10:35] <gdonald> I also ran into the 'Grammar cannot inherit from itself' a few days ago.

[10:39] *** |Tux| joined
[11:08] *** epony joined
[11:33] *** pmurias joined
[11:58] <Geth> ¦ rakudo: the-eater++ created pull request #3155: use libdir instead of rebuilding path from prefix

[11:58] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3155

[12:05] <nine> m: say "\r\n".ends-with("\n")

[12:05] <evalable6> nine, rakudo-moar 0455f42e3: OUTPUT: «False␤»

[12:05] <nine> That's...a little bit surprising

[12:07] <eater> \r\n is treated like 1 character

[12:08] <eater> m: say "\r\n".chars

[12:08] <evalable6> eater, rakudo-moar 0455f42e3: OUTPUT: «1␤»

[12:08] <timotimo> blame the unicode consortium :)

[12:43] <AlexDaniel> m: say "\r\n" ~~ /\n$/

[12:43] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «｢␦｣␤»

[12:43] <AlexDaniel> m: say "\r\n" ~~ /"\n"$/

[12:43] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «Nil␤»

[12:43] <AlexDaniel> wait… what was that?

[12:44] <timotimo> \n in a regex is a logical newline

[12:44] <jnthn> Heh, the output inside the square brackets looks very odd in my IRC client :)

[12:44] <timotimo> inside of a string it's the literal thing

[12:44] <jnthn> It comes out fine locally on my terminal

[12:44] <jnthn> m: dd "\r\n" ~~ /\n$/

[12:45] <evalable6> jnthn, rakudo-moar 0455f42e3: OUTPUT: «Match.new(pos => 1, hash => Map.new(()), orig => "\r\n", from => 0, made => Any, list => ())␤»

[12:45] <AlexDaniel> yeah that's what I'm wondering. evalable6 does replace control characters with stuff, but… what's going on there exactly?

[12:45] <jnthn> Beats me. But it dd's to the right thing, so...guess it's something in that mapping. 

[12:47] <AlexDaniel> https://github.com/perl6/whateverable/blob/master/lib/Whateverable.pm6#L175

[12:47] <AlexDaniel> hhmmmh

[12:47] <AlexDaniel> m: print “\r”, “\n”

[12:47] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «␦»

[12:47] <AlexDaniel> m: print “\r”

[12:47] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «␍»

[12:48] <AlexDaniel> m: print “\n”

[12:48] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «␤»

[12:50] <AlexDaniel> it comes out as a single grapheme so .trans doesn't work…

[12:50] <AlexDaniel> at least doesn't work as expected

[12:51] <jnthn> Well, you'd need a trans entry for \r\n

[12:51] <AlexDaniel> jnthn: is that going to help, really? What about other append/prepend combinations that result in a single grapheme?

[12:52] <AlexDaniel> m: say “\r\n”.trans: “\r\n” => ‘z’

[12:52] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «z␤»

[12:53] <AlexDaniel> m: say “\r\n\c[COMBINING DIARESIS]”.trans: “\r\n” => ‘z’

[12:53] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/gTRdRJDD4X␤Unrecog…»

[12:53] <evalable6> AlexDaniel, Full output: https://gist.github.com/8ccb4d2dce07684bc75b955b35ecebcf

[12:54] <AlexDaniel> m: say “\r\n\c[COMBINING DIAERESIS]”.trans: “\r\n” => ‘z’

[12:54] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «z̈␤»

[12:54] <AlexDaniel> now that works?

[12:54] <AlexDaniel> ok, then I guess it does work…

[12:54] <jnthn> The grapheme break rules indicate that there's always a break after a newline

[12:55] <AlexDaniel> oooh

[12:55] <AlexDaniel> m: say “\r\n\c[COMBINING DIAERESIS]”.chars

[12:55] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «2␤»

[12:55] <AlexDaniel> ok what about a prepend character… lemme find one…

[13:04] <timotimo> that rule is very good for us btw because that means after a newline we can immediately flush a decoder's buffer

[13:05] <AlexDaniel> ok, finally x)

[13:05] <AlexDaniel> m: say “\x[0600]b”.chars

[13:05] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «1␤»

[13:05] <AlexDaniel> buuut it doesn't work on \r\n, so I guess we're alright!

[13:05] <AlexDaniel> m: say “\x[0600]\r\n”.chars

[13:05] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «2␤»

[13:06] <jnthn> yes, iirc the rules are to break either side of a control

[13:07] <jnthn> Though my memory is hazy thanks to samcv++ making me not need to look at this stuff for a while :D

[13:07] *** vrurg joined
[13:10] <vrurg> nine: reverting is not needed, I got it fixed yesterday but haven't completed testing of failed modules.

[13:10] <vrurg> gdonald: that'd be great if you reported the problem right away.

[13:15] <AlexDaniel> anyway, fixed: https://github.com/perl6/whateverable/commit/61cedc184cc19f86de3b096dfd0fb6009f2fdea5

[13:19] *** evalable6 joined
[13:19] *** ChanServ sets mode: +v evalable6

[13:20] <AlexDaniel> m: say "\r\n" ~~ /\n$/

[13:20] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «｢␍｣␤»

[13:20] <AlexDaniel> what

[13:20] <AlexDaniel> m: say "\r\n"

[13:20] <evalable6> AlexDaniel, rakudo-moar 0455f42e3: OUTPUT: «␍␤»

[13:20] <AlexDaniel> ok, that didn't work, but I have to run now…

[13:28] <timotimo> didn.t?

[13:51] *** Guest90858 is now known as nebuchadnezzar

[13:56] *** lucasb joined
[14:09] *** pmurias left
[14:31] *** pmurias joined
[14:41] *** pmurias left
[14:44] <gdonald> vrurg: Sorry, I was still ruling out Travis and my own project's recent commits.

[14:47] *** pmurias joined
[14:51] <AlexDaniel> timotimo: yeah, definitely not. Should be ␍␤␤

[14:51] <timotimo> oh

[14:51] <timotimo> i can't read the tiny symbols on my terminal

[15:02] <AlexDaniel> vrurg: I just realized that the directories are a little bit wrong…

[15:02] <AlexDaniel> core.v6c not core.c :S

[15:04] *** pmurias left
[15:20] *** patrickb joined
[15:59] <vrurg> AlexDaniel: I followed the pattern of core.d/core.e. Let's leave it as it is, too many changes if we rename it again.

[15:59] <vrurg> Besides, I don't see why version is better than revision.

[16:00] * [Coke] yawns.

[16:12] <AlexDaniel> vrurg: leaves more room for potential version bumps

[16:12] <vrurg> AlexDaniel: for example? 

[16:12] <AlexDaniel> vrurg: v7.d

[16:13] <AlexDaniel> well I'm thinking more v7.0.0 but you get the point :)

[16:14] <vrurg> AlexDaniel: the core is currently bound to .<rev> scheme. Too many changes. Besides, I'm about to open a problem-solving on versionized metamodel. We could have it all considered together.

[16:19] <jnthn> I don't see why the metamodel has to be versioned

[16:20] <jnthn> It's in a separate compilation unit because making a metaclass usable in the same compilation unit as it's written in is a pain (it may just work in Rakudo, but not in NQP)

[16:20] <AlexDaniel> I'm not really proposing anything, but looking at the recent comments it seems like some people still don't get that we had a release, and I can't blame them because our versioning is just weird. Releasing a 7.0.0 somewhere in the future might be a good move (as in we didn't just hide perl with a different word, we're really moving forward)

[16:21] <jnthn> There's no reason that a 6.e GrammarHOW can't be written in the 6.e BOOTSTRAP or even 6.e CORE.setting

[16:22] <jnthn> That gives an NQP option and a Perl 6 option

[16:22] <jnthn> I don't think we need a third place versioned

[16:22] <jnthn> Not to mention that such things will probably be quite rare

[16:22] <AlexDaniel> moreover, modules that `use v6` will get nice back compat even if they don't specify a letter, allowing us to do more changes…

[16:25] <AlexDaniel> .oO( #perl6-devspeakingoutloud )

[16:25] <AlexDaniel> thinking*

[16:26] <vrurg> jnthn: I'll try it in BOOTSTRAP and see how it works.

[16:27] <vrurg> jnthn: in either case working on the workaround let me spot a potential problem in optimizer find_symbol_in_setting. :)

[16:36] <jnthn> :)

[16:41] <vrurg> AlexDaniel: I think that releasing v7 would require so much work that renaming the directory would be the least singnificant part of it. Doesn't worth efforts now.

[16:42] <AlexDaniel> weell…

[16:42] <AlexDaniel> we're renaming stuff now anyway

[16:42] <AlexDaniel> so might as well do it properly so that all tools have to adjust once

[16:47] <vrurg> AlexDaniel: in either case, let me finish with makefiles. Last rename brought so much headache that I felt like as much rules as possible are to be moved into a shared template.

[16:47] <AlexDaniel> vrurg++

[16:58] <patrickb> vrurg: How deep are you in the build file swamp? I have some changes ready soon to add --nqp-home and --perl6-home and remove --libdir from NQP and Rakudo  Configure.pl...

[16:58] <tellable6> https://gist.github.com/5bd4ab58ca8eab8fef79ec4c304f2cdd

[16:59] <patrickb> vrurg: It's strange how we always manage to colide when doing build system stuff. Bleh...

[17:00] <vrurg> patrickb: I didn't see you for so long. Welcom back! :) I'd like to ask you to postpone your fixes then. The merge results in so many changes, that even minor things could complicate my work a lot.

[17:01] <vrurg> Sorry for the inconvinience.

[17:02] <patrickb> OK. I'll wait then.

[17:06] <vrurg> patrickb: may I ask you to finalize fix for https://github.com/rakudo/rakudo/issues/3136? NQP needs @moar::cincludes@ in gcc command line to build properly.

[17:07] <vrurg> patrickb: and also https://github.com/rakudo/rakudo/issues/3090

[17:07] <AlexDaniel> patrickb: o/

[17:09] <timotimo> at some point we should really figure out how modules should find the right compiler and flags to build native code ...

[17:16] <vrurg> timotimo: Preserve the collected configuration vars in the compiler?

[17:16] <vrurg> like NQP does.

[17:30] <Geth> ¦ roast: 9513102a53 | (Ben Davies)++ | 6 files

[17:30] <Geth> ¦ roast: Don't use localhost; bind to 0.0.0.0, connect to 127.0.0.1 instead

[17:30] <Geth> ¦ roast: 

[17:30] <Geth> ¦ roast: localhost can resolve to more than one address, which causes upcoming

[17:30] <Geth> ¦ roast: changes to MoarVM to break some tests when they shouldn't actually be

[17:30] <Geth> ¦ roast: breaking changes.

[17:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/9513102a53

[17:50] <timotimo> vrurg: no, that's bad

[17:50] <timotimo> vrurg: when you install a perl6 on windows, you're unlikely to have an msvc installed just like the maintainer of the package

[17:52] <vrurg> timotimo: either way, knowning compiler flags might prove useful if one needs to build compatible binaries.

[17:53] * vrurg is afk, time to prepare for Dorian arrival.

[17:53] <timotimo> best of luck

[17:54] <vrurg> timotimo: thanks! o/

[18:06] *** robertle joined
[18:10] *** Kaiepi joined
[18:13] *** Ven`` joined
[18:14] *** Ven`` left
[18:39] <patrickb> timotimo: What's wrong with just taking the first compiler you can get your hands on for module native code compilation? As long as it's C and we build DLLs all should be fine. Or am I too naive?

[18:39] <timotimo> that would be nice, for sure

[18:40] <timotimo> also, give every possibility to override this stuff

[18:40] <timotimo> with env vars and such

[18:40] <patrickb> Similar to what our own Configure.pl does?

[18:40] <timotimo> hm, i didn't actually take into account MakefileFromMeta or what it's called

[18:44] <patrickb> I think the big question is, who should be responsible for this? Should the module installer take care of it? (Then we'd need to standardize a declarative way to describe a compilation in META6.json. It's gonna be hard to scatch every itch there is.) Or the modules themself using some build time module? (That sounds a lot like what perl5 does.)

[18:46] <timotimo> also, cross-compilation is important to some

[19:02] *** BeastieBot joined
[19:08] <Geth> ¦ nqp: patzim++ created pull request #576: Use cincludes configuration variable from MoarVM

[19:08] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/pull/576

[19:11] <Geth> ¦ rakudo: patzim++ created pull request #3156: Fixup fix for PR rakudo#3150: Var was missing `moar::` prefix

[19:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/3156

[19:11] <synopsebot> RAKUDO#3150 [closed]: https://github.com/rakudo/rakudo/pull/3150 [build] Use cincludes configuarion variable from MoarVM

[19:12] <Geth> ¦ nqp: 75ef1a51ee | (Patrick Böker)++ | tools/templates/moar/Makefile.in

[19:12] <Geth> ¦ nqp: Use cincludes configuration variable from MoarVM

[19:12] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/75ef1a51ee

[19:12] <Geth> ¦ nqp: 726917eaf9 | (Patrick Böker)++ (committed using GitHub Web editor) | tools/templates/moar/Makefile.in

[19:12] <Geth> ¦ nqp: Merge pull request #576 from patzim/rakudo_3136

[19:12] <Geth> ¦ nqp: 

[19:12] <Geth> ¦ nqp: Use cincludes configuration variable from MoarVM

[19:12] <Geth> ¦ nqp: review: https://github.com/perl6/nqp/commit/726917eaf9

[19:12] <Geth> ¦ rakudo: 3d5c5517bd | (Patrick Böker)++ | tools/templates/moar/Makefile.in

[19:12] <Geth> ¦ rakudo: Fixup fix for PR rakudo#3150: Var was missing `moar::` prefix

[19:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/3d5c5517bd

[19:12] <Geth> ¦ rakudo: 579ac66e8b | (Patrick Böker)++ (committed using GitHub Web editor) | tools/templates/moar/Makefile.in

[19:12] <Geth> ¦ rakudo: Merge pull request #3156 from patzim/rakudo_3136

[19:12] <Geth> ¦ rakudo: 

[19:12] <Geth> ¦ rakudo: Fixup fix for PR rakudo#3150: Var was missing `moar::` prefix

[19:12] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/579ac66e8b

[19:21] <nine> patrickb: we already have a declarative way to describe compilation and that's the recommended and only really supported way

[19:21] <nine> https://modules.perl6.org/dist/Distribution::Builder::MakeFromJSON:cpan:NINE

[19:38] *** Ven`` joined
[19:52] *** Ven`` left
[20:01] *** pmurias joined
[20:06] <timotimo> i wish there was a ready-to-copy example makefile and meta6.json

[20:06] <timotimo> or a starter template for mi6 or whatever

[21:04] *** Ven`` joined
[21:10] *** Ven`` left
[22:32] *** patrickb left
[22:40] *** evalable6 left
[22:43] *** evalable6 joined
[22:43] *** ChanServ sets mode: +v evalable6

[22:46] *** lucasb left
[23:02] *** pmurias left
[23:16] *** Kaiepi left
