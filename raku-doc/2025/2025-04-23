[11:42] <tbrowder> hi, asking an opinion on rakupod 2.0: if one writes a pod renderer for a specific use, would it be okay to NOT follow the prescribed conventions for tag style. so we could, say, use all lower-case tags which are said to be reserved and not for  the user's to define

[11:45] <tbrowder> (i can't imagine i would refefine any existing use by the core, which could be disastorous.)

[11:45] <tbrowder> *redefine

[11:49] <[Coke]> rakupod== rakudoc?

[11:49] <tbrowder> yes

[11:49] <[Coke]> I know finanalyst & lizmat were involved in design discussions, I'd definitely get their input

[11:50] <tbrowder> ok

[11:52] <[Coke]> I added another comment on #4569 that consolidates some things we said previously, hope that helps

[11:53] <tbrowder> i will look. thnx, i'm not trying to be a grinch

[11:53] <tbrowder> is there a separate channel for rakudoc?

[11:55] <[Coke]> nope - but finanalyst is not always on IRC.

[11:56] <[Coke]> (and most of the discussion for specs took place on github/email, I think)

[11:56] <[Coke]> so this works, raku-dev probably also works.

[12:01] <tbrowder> re #4569 i think Failure needs to be mentioned in the vicinity

[12:06] <tbrowder> ugh, now i know why i couldn't be a lawyer

[12:14] <[Coke]> dies-ok doesn't have anything to do with a Failure.

[12:14] <[Coke]> it *only* cares about an Exception

[12:14] <[Coke]> and in one case, you don't have one

[12:15] <[Coke]> and there isn't a Failure here, even - it's a Proc]

[12:15] <[Coke]> and the docs for run() mention that you get an exception if you sink, and a Proc if you don't.

[12:16] <[Coke]> (it is similar to the operations that don't throw an exception but return a failure, and ugexe or I may have misspoke earlier in the thread and said Failure, if so, apologies

