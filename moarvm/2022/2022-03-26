[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[02:25] *** notable6 left
[02:25] *** benchable6 left
[02:25] *** committable6 left
[02:25] *** squashable6 left
[02:25] *** quotable6 left
[02:25] *** evalable6 left
[02:25] *** bisectable6 left
[02:25] *** linkable6 left
[02:25] *** bloatable6 left
[02:25] *** nativecallable6 left
[02:25] *** releasable6 left
[02:25] *** coverable6 left
[02:25] *** sourceable6 left
[02:25] *** reportable6 left
[02:25] *** greppable6 left
[02:25] *** statisfiable6 left
[02:25] *** unicodable6 left
[02:25] *** shareable6 left
[02:26] *** evalable6 joined
[02:26] *** greppable6 joined
[02:26] *** sourceable6 joined
[02:26] *** releasable6 joined
[02:27] *** unicodable6 joined
[02:27] *** reportable6 joined
[02:27] *** coverable6 joined
[02:28] *** statisfiable6 joined
[02:28] *** notable6 joined
[03:26] *** squashable6 joined
[03:27] *** quotable6 joined
[03:27] *** bloatable6 joined
[03:27] *** nativecallable6 joined
[03:27] *** bisectable6 joined
[03:27] *** benchable6 joined
[03:28] *** committable6 joined
[03:28] *** linkable6 joined
[04:31] *** benchable6 left
[04:32] *** benchable6 left
[04:32] *** bloatable6 left
[04:32] *** quotable6 left
[04:32] *** linkable6 left
[04:32] *** squashable6 left
[04:32] *** bisectable6 left
[04:32] *** reportable6 left
[04:32] *** releasable6 left
[04:32] *** unicodable6 left
[04:32] *** sourceable6 left
[04:32] *** notable6 left
[04:32] *** coverable6 left
[04:32] *** evalable6 left
[04:32] *** statisfiable6 left
[04:32] *** greppable6 left
[04:32] *** committable6 left
[04:32] *** nativecallable6 left
[04:32] *** sourceable6 joined
[04:33] *** linkable6 joined
[04:33] *** releasable6 joined
[04:34] *** bloatable6 joined
[04:34] *** coverable6 joined
[04:35] *** notable6 joined
[04:35] *** evalable6 joined
[05:27] *** shareable6 joined
[05:32] *** unicodable6 joined
[05:32] *** bisectable6 joined
[05:33] *** greppable6 joined
[05:33] *** committable6 joined
[06:32] *** nativecallable6 joined
[06:34] *** benchable6 joined
[06:34] *** statisfiable6 joined
[07:34] *** quotable6 joined
[07:35] *** squashable6 joined
[07:43] *** squashable6 left
[07:46] *** squashable6 joined
[08:09] *** reportable6 joined
[08:12] *** discord-raku-bot left
[08:12] *** discord-raku-bot joined
[08:57] *** linkable6 left
[10:59] *** linkable6 joined
[11:41] *** ggoebel_ left
[11:54] * dogbert11 drops one of lizmat's pins
[11:55] * lizmat looks at the massive hole
[11:56] <dogbert11> I was hoping someone would be interested in merging https://github.com/MoarVM/MoarVM/pull/1689
[11:59] * lizmat has the pwert and will do
[11:59] <Geth> ¦ MoarVM: 2eb8373955 | dogbert17++ (committed using GitHub Web editor) | 3rdparty/libuv
[11:59] <Geth> ¦ MoarVM: Update libuv to version 1.44.1 (#1689)
[11:59] <Geth> ¦ MoarVM: 
[11:59] <Geth> ¦ MoarVM: Co-authored-by: Jan-Olof Hendig [email@hidden.address]
[11:59] <Geth> ¦ MoarVM: Co-authored-by: Jan-Olof Hendig <jan-olof.hendig@bredband.net>
[11:59] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2eb8373955
[11:59] <lizmat> and do the appropriate bumps
[12:00] *** linkable6 left
[12:01] <dogbert11> yes, unless there are more merges upcoming
[12:01] <dogbert11> thx
[12:07] *** reportable6 left
[12:08] *** reportable6 joined
[12:21] <lizmat> bumped
[12:35] <dogbert11> coool, lizmat++
[13:38] *** CaCode_ joined
[13:43] *** sena_kun left
[13:45] *** sena_kun joined
[14:29] *** CaCode_ left
[14:36] <lizmat> m: use nqp; say nqp::unlink("doesnotexist")   # shouldn't this throw?
[14:36] <camelia> rakudo-moar 530e17848: OUTPUT: «doesnotexist␤»
[14:37] <lizmat> https://github.com/rakudo/rakudo/blob/master/src/core.c/IO/Path.pm6#L496   appears to expect an exception
[15:05] *** squashable6 left
[16:02] *** linkable6 joined
[16:03] <dogbert11> m: loop { await ^2 .map: { start { require ::("Test") } } }
[16:03] <camelia> rakudo-moar 530e17848: OUTPUT: «An operation first awaited:␤  in block <unit> at <tmp> line 1␤␤Died with the exception:␤    Failed to seek in filehandle: 22␤      in block  at <tmp> line 1␤␤»
[16:03] <dogbert11> hmm, it SEGV'd for me
[16:06] <dogbert11> #0  MVM_serialization_demand_object (tc=0x52b40233500, sc=<optimized out>, idx=856) at src/6model/serialization.c:2758
[16:06] <dogbert11> #1  0x00007ffff78f8525 in MVM_sc_get_object (tc=<optimized out>, sc=<optimized out>, idx=<optimized out>) at src/6model/sc.c:207
[16:07] <dogbert11> perhaps nine knows more, code snippet taken from https://github.com/rakudo/rakudo/issues/1920
[16:45] *** sena_kun left
[16:46] *** sena_kun joined
[17:36] *** squashable6 joined
[18:07] *** reportable6 left
[18:15] *** [Coke] left
[18:18] *** [Coke] joined
[19:01] <nine> Multi threaded module loading is still troublesome. IIRC repossession is one of the reasons
[19:29] *** sena_kun left
[19:30] *** sena_kun joined
[19:49] <Geth> ¦ MoarVM: 3d65db97bd | (Daniel Green)++ | src/core/coerce.c
[19:49] <Geth> ¦ MoarVM: Fix sign comparison warnings in coerce_su implementation
[19:49] <Geth> ¦ MoarVM: 
[19:49] <Geth> ¦ MoarVM: The implementation had been copied from coerce_si, which was based on
[19:49] <Geth> ¦ MoarVM: gcc's strtoll, so adjust it to be based on strtoull instead.
[19:49] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/3d65db97bd
[19:49] <Geth> ¦ MoarVM: 5d79a3ed91 | MasterDuke17++ (committed using GitHub Web editor) | src/core/coerce.c
[19:49] <Geth> ¦ MoarVM: Merge pull request #1694 from MasterDuke17/fix_sign_comparison_warnings_in_coerce_su_implementation
[19:50] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/5d79a3ed91
[19:57] <lizmat> MasterDuke: does that warrant a bump ?
[19:58] <MasterDuke> don't think so. doesn't seem to have been a problem in the wild
[19:59] <MasterDuke> no objection if you want to do one, i just don't think it's an immediate requirement
[20:00] <lizmat> it would improve bisectability, would be my argument  :-)
[20:01] <lizmat> ah, but this was just about C compiler warnings?
[20:04] <MasterDuke> yeah. maybe the warnings were legitimate (i.e., pointing out a real problem we had), but i don't know enough about C and/or the algorithm to be sure
[20:05] <lizmat> ok  will bump just to be sure  :-)
[20:59] <MasterDuke> nine: have you seen https://github.com/Raku/nqp/pull/768 ? do you have any thoughts?
[21:05] *** sena_kun left
[21:06] *** sena_kun joined
[21:25] <nine> MasterDuke: have not really had time yet. Week's been crazy busy and https://github.com/rakudo/rakudo/issues/4828 is tough
[21:27] <MasterDuke> no worries. it's pretty independent of most other changes going on, so it can sit for a while without bitrotting
[21:59] <lizmat> anyone for an answer to this: https://www.reddit.com/r/rakulang/comments/tp4z7q/couldnt_detect_system_architecture_current_arch/
[22:03] <ugexe> maybe they could send a PR to add their arch to https://github.com/Raku/App-Rakubrew/blob/ab7513e18e60495371576cf4ec8e871dcc3eea11/lib/App/Rakubrew/Download.pm#L132-L142
[23:09] *** reportable6 joined
