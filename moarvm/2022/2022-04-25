[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[00:15] *** Geth left
[00:15] *** Geth joined
[00:20] *** Geth left
[00:20] *** Geth joined
[00:27] *** [Coke]_ joined
[00:29] *** [Coke] left
[00:30] *** [Coke]_ is now known as [Coke]

[01:54] *** coverable6 left
[01:54] *** greppable6 left
[01:54] *** sourceable6 left
[01:54] *** bloatable6 left
[01:54] *** notable6 left
[01:54] *** benchable6 left
[01:54] *** quotable6 left
[01:54] *** committable6 left
[01:54] *** shareable6 left
[01:54] *** releasable6 left
[01:54] *** statisfiable6 left
[01:54] *** unicodable6 left
[01:54] *** bisectable6 left
[01:54] *** tellable6 left
[01:54] *** nativecallable6 left
[01:54] *** evalable6 left
[01:54] *** reportable6 left
[01:54] *** linkable6 left
[01:54] *** quotable6 joined
[01:54] *** evalable6 joined
[01:54] *** nativecallable6 joined
[01:54] *** linkable6 joined
[01:54] *** releasable6 joined
[01:54] *** unicodable6 joined
[01:54] *** bisectable6 joined
[01:54] *** statisfiable6 joined
[01:54] *** committable6 joined
[01:55] *** notable6 joined
[01:55] *** greppable6 joined
[01:55] *** bloatable6 joined
[01:56] *** tellable6 joined
[01:56] *** benchable6 joined
[01:56] *** shareable6 joined
[01:56] *** reportable6 joined
[01:56] *** coverable6 joined
[01:56] *** sourceable6 joined
[03:32] *** frost joined
[05:44] <Nicholas> good *, *

[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[07:41] *** linkable6 left
[07:44] *** linkable6 joined
[07:46] *** linkable6 left
[07:47] *** linkable6 joined
[09:41] *** evalable6 left
[09:41] *** linkable6 left
[09:41] *** linkable6 joined
[09:43] *** evalable6 joined
[10:07] *** discord-raku-bot left
[10:07] *** discord-raku-bot joined
[12:08] *** reportable6 left
[12:10] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/04/25/2022-16-7-complainrelease/

[12:10] *** reportable6 joined
[12:58] *** frost left
[13:10] *** frost joined
[13:20] *** Altai-man joined
[14:09] *** Altai-man left
[14:09] *** Altai-man joined
[14:09] *** japhb left
[14:13] *** dogbert11 joined
[14:15] *** dogbert17 left
[14:18] *** frost left
[14:38] *** japhb joined
[15:45] *** [Coke] left
[15:47] *** [Coke] joined
[16:44] <nine> jnthnwrthngtn: I'm still struggling with auto generated protos in RakuAST. They need to be added to the StatementList containing the multi we're running the PERFORM-BEGIN of. But that StatementList doesn't even exist yet at that point (as actions are bottom up).

[16:45] <nine> jnthnwrthngtn: Do you think it likely that we'll encounter another case where BEGIN time processing will cause us to add something to the parent StatementList? Or is this a super special case that will warrant a special case solution?

[16:47] <jnthnwrthngtn> nine: I don't think generating protos should be done by generating a RakuAST node in the statement list

[16:47] <nine> Where else would we attach that node?

[16:49] <jnthnwrthngtn> In general, the RakuAST tree we get should match to elements in the source; generated things come via mechanisms like implicit declaratikons

[16:49] <jnthnwrthngtn> *declarations

[16:50] <jnthnwrthngtn> Though in this case add-generated-lexical-declaration is perhaps the right hook

[16:57] <jnthnwrthngtn> btw, I've been working on some design around timings of things

[16:57] <nine> But declarations declare symbols, don't they? And the symbol is the code object, i.e. the runtime representation. What I need to find a place for is the sub's AST

[17:01] <jnthnwrthngtn> I figure that whatever generates the proto is what would be passed along into add-generated-lexical-declaration

[17:10] *** camelia left
[17:10] *** nine left
[17:12] *** nine joined
[17:16] *** nine left
[17:16] *** camelia joined
[17:17] *** nine joined
[17:17] <nine> jnthnwrthngtn: can you elaborate a bit on that? I don't really have a picture of what that would look like (though that may be more due to lack of sleep and the headache that follows...)

[17:36] <jnthnwrthngtn> nine: Really haven't designed this bit fully yet, but: I think RakuAST::Routine will want to do RakuAST::BeginTime, and do an installation action there. It'd use the resolver to see if there's a proto in scope already; if not, it'd create an AST node (possibly even a RakuAST::Routine) and use it with add-generated-lexical-declaration.

[17:37] <jnthnwrthngtn> In https://github.com/rakudo/rakudo/blob/cbff05c819803b186f9b6502e789883170157708/src/Raku/ast/code.rakumod#L701 it'd need to look at if the multiness is `multi` (I assume we add an attribute for this) and not do produce a lexical symbol installation

[17:37] <jnthnwrthngtn> (Just like it doesn't produce one for methods, or anon, and so on)

[17:38] <jnthnwrthngtn> home time; bbiab

[17:44] *** Altai-man left
[18:08] *** reportable6 left
[18:09] *** reportable6 joined
[18:24] <nine> jnthnwrthngtn: already got all of that implemented except for the add-generated-lexical-declaration part

[19:37] <MasterDuke> why would a profile show something with 1000001 entries as red (i.e., not jitted), but there are no bails in a spesh log?

[22:54] *** MasterDuke left
