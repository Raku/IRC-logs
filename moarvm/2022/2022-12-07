[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:04] *** Guest46 joined
[01:02] *** Kaiepi left
[01:14] *** epony left
[02:37] *** evalable6 left
[02:37] *** linkable6 left
[02:38] *** evalable6 joined
[02:39] *** linkable6 joined
[02:57] *** epony joined
[05:18] *** evalable6 left
[05:18] *** greppable6 left
[05:18] *** reportable6 left
[05:18] *** squashable6 left
[05:18] *** linkable6 left
[05:18] *** sourceable6 left
[05:18] *** tellable6 left
[05:18] *** statisfiable6 left
[05:18] *** coverable6 left
[05:18] *** nativecallable6 left
[05:18] *** notable6 left
[05:18] *** benchable6 left
[05:18] *** quotable6 left
[05:18] *** committable6 left
[05:18] *** shareable6 left
[05:18] *** unicodable6 left
[05:18] *** bloatable6 left
[05:18] *** releasable6 left
[05:18] *** bisectable6 left
[05:18] *** shareable6 joined
[05:18] *** linkable6 joined
[05:19] *** sourceable6 joined
[05:19] *** bisectable6 joined
[05:19] *** unicodable6 joined
[05:19] *** reportable6 joined
[05:19] *** committable6 joined
[05:19] *** nativecallable6 joined
[05:19] *** squashable6 joined
[05:20] *** quotable6 joined
[05:20] *** benchable6 joined
[05:20] *** greppable6 joined
[05:21] *** bloatable6 joined
[05:21] *** releasable6 joined
[05:21] *** tellable6 joined
[05:21] *** evalable6 joined
[05:21] *** statisfiable6 joined
[05:21] *** notable6 joined
[05:21] *** coverable6 joined
[06:00] *** reportable6 left
[06:01] *** Guest46 left
[06:02] *** reportable6 joined
[07:53] *** Kaiepi joined
[08:30] *** sena_kun joined
[08:51] *** sena_kun left
[09:29] <nine> rakuast now passing 83 test and 585 spectest files

[09:29] <Nicholas> Christmas is coming

[10:46] *** frost joined
[11:01] <timo> test files here means t/* except t/spec/*?

[11:07] <nine> timo: yes

[11:07] <timo> cool

[11:19] *** squashable6 left
[11:21] *** squashable6 joined
[11:23] <jnthn> vrurg: I think the QAST compiler only cares about them on QAST::Stmt and QAST::Stmts

[11:23] <jnthn> ah, and QAST::Block

[11:24] <jnthn> Well, not sure about QAST::Block. But certainly attaching it on statements is the important thing

[11:25] <jnthn> vrurg: Didn't have time to look at the PRs for now, but it occurs to me that "source" is probably better than "origin" if a simpler name than the original proposal is wanted.

[11:25] <jnthn> origin risks a bit of confusion with .orig

[11:25] <jnthn> (On a Match)

[11:27] <jnthn> Which I was trying to avoid. More generally, the thinking is that in normal compilation mode we'll just attach integer char offsets, but in cases where we really would want to be able to map in detail onto original source, there's the NFG-style negative integers plus looku

[11:27] <jnthn> (Like when building a formatter, for example)

[11:27] <jnthn> Since RakuAST is abstract, it erases for example which exact quotes were used in a quoting construct

[11:28] <jnthn> Which one might want to know in certain non-compilation use cases

[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[13:55] <jnthn> Some sad news for the VM community https://twitter.com/jnthnwrthngtn/status/1600488908722257920

[13:59] <lizmat> weekly: https://twitter.com/jnthnwrthngtn/status/1600488908722257920

[13:59] <notable6> lizmat, Noted! (weekly)

[14:10] *** frost left
[14:14] <gfldex> We are not made to last. But we can make things that outlast us.

[14:29] <vrurg> jnthn: As to the naming â€“ it's better be left off for the PR comments. As to the keeping indexes in a table, I've been there, experimented a lot and came down to requiring a tree structure. There is a problem about nodes like where there are gaps in the source between children nodes. The best search algorithm for them would be a tree traversal anyway.

[14:32] <vrurg> As to the quoted string and alikes, we do know their exact from/to positions in the source anyway. So, we can use them. Or the strings must be wrapped into a helper node, defined by do_nibbling.

[15:51] <japhb> vrurg: Well, if you're compiling from source, as opposed to generated AST ...

[15:53] <vrurg> japhb: And? ;) 

[15:54] <vrurg> japhb: BTW, the origin attribute on node is optional in my model. It could also refer to different sources.

[15:56] <vrurg> With regard to strings and alikes, the wrapper node could be optional too and be a non-code generator. Or the optional data could be part of the string node. In either case, do_nibbling rule knows the exact location of the string and we can use that info.

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:46] *** [Coke] left
[18:48] *** [Coke] joined
[21:24] <vrurg> jnthn: will the current structure of RakuAST CompUnit remain the same, with no <unit-outer>? Backtrace doesn't work with it.

[21:32] *** linkable6 left
[21:32] *** evalable6 left
[21:33] *** linkable6 joined
[21:35] *** evalable6 joined
[22:43] <jnthn> I think <unit-outer> was a bit of a hack; it was to hold references to symbols from the real outer to keep QAST compilers happy.

[22:44] <jnthn> (The better compiler startup time is largely thanks to avoiding shoving all the setting symbols into that)

[22:45] <jnthn> Could potentially reinstate it as an empty block, but nicer if we can just be rid of it

[22:49] <vrurg> Ok, I will adapt Backtrace. Thanks!

[23:50] *** squashable6 left
[23:50] *** evalable6 left
[23:50] *** unicodable6 left
[23:50] *** nativecallable6 left
[23:50] *** committable6 left
[23:50] *** greppable6 left
[23:50] *** quotable6 left
[23:50] *** linkable6 left
[23:50] *** shareable6 left
[23:50] *** bisectable6 left
[23:50] *** tellable6 left
[23:50] *** notable6 left
[23:50] *** statisfiable6 left
[23:50] *** benchable6 left
[23:50] *** releasable6 left
[23:50] *** reportable6 left
[23:50] *** coverable6 left
[23:50] *** sourceable6 left
[23:50] *** bloatable6 left
[23:51] *** reportable6 joined
[23:51] *** coverable6 joined
[23:51] *** notable6 joined
[23:51] *** tellable6 joined
[23:51] *** shareable6 joined
[23:52] *** statisfiable6 joined
[23:52] *** nativecallable6 joined
[23:52] *** releasable6 joined
[23:52] *** evalable6 joined
[23:52] *** quotable6 joined
[23:52] *** unicodable6 joined
[23:52] *** bisectable6 joined
[23:52] *** benchable6 joined
[23:53] *** squashable6 joined
[23:53] *** greppable6 joined
[23:53] *** committable6 joined
[23:53] *** bloatable6 joined
[23:53] *** sourceable6 joined
[23:54] *** linkable6 joined
