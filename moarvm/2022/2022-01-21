[00:07] *** reportable6 left
[01:08] *** reportable6 joined
[01:24] *** squashable6 left
[01:25] *** squashable6 joined
[01:35] *** Kaiepi left
[04:26] *** frost joined
[04:46] *** frost left
[04:47] *** sena_kun left
[04:57] *** sena_kun joined
[05:01] *** frost joined
[05:18] *** squashable6 left
[05:19] *** squashable6 joined
[05:26] *** frost15 joined
[05:26] *** frost15 left
[05:26] *** frost21 joined
[05:27] *** frost21 left
[05:27] *** frost31 joined
[05:29] *** frost left
[05:30] *** frost31 is now known as frost

[05:41] *** frost left
[05:46] *** leedo left
[05:46] *** leedo joined
[05:55] *** frost joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:22] *** kjp left
[06:22] *** kjp joined
[07:19] *** frost left
[07:30] *** frost joined
[07:34] <Nicholas> good *, *

[07:45] *** frost left
[08:19] <nine> Good *, indeed

[08:42] *** kjp left
[08:46] *** kjp joined
[09:20] *** kjp left
[09:21] *** kjp joined
[10:35] *** jnthn is now known as jnthnwrthngtn

[11:12] *** Geth left
[11:12] *** Geth joined
[12:07] *** reportable6 left
[12:07] *** reportable6 joined
[13:07] *** linkable6 left
[13:07] *** evalable6 left
[13:31] *** kjp left
[13:32] *** kjp joined
[13:47] *** frost joined
[14:09] *** evalable6 joined
[14:12] *** Util joined
[14:15] *** frost left
[14:18] *** kjp left
[14:30] *** frost joined
[14:43] *** frost left
[15:01] <Geth> ¦ MoarVM/master: 7 commits pushed by (Stefan Seifert)++

[15:01] <Geth> ¦ MoarVM/master: d4dab6eb43 | MVM_nativeref_lex_u for proper gelexref_u*

[15:01] <Geth> ¦ MoarVM/master: 26e2cfad4b | Use appropriate (un)signed container ops for native call args

[15:01] <Geth> ¦ MoarVM/master: 9239ed5fd9 | Fix argument unboxing treating all integers as signed

[15:01] <Geth> ¦ MoarVM/master: b34604a62f | Use MVM_STORAGE_SPEC_BP_UINT64 for unsigned box targets

[15:01] <Geth> ¦ MoarVM/master: 53e588e45b | Properly support uints in CArray

[15:01] <Geth> ¦ MoarVM/master: 06e1ebe337 | Make C(PP)Struct and CUnion properly support uint attributes

[15:01] <Geth> ¦ MoarVM/master: b585b5e32d | Properly support uint in MultiDimArrays

[15:01] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/f884085c145d...b585b5e32dae

[15:04] *** Geth left
[15:04] *** Geth joined
[15:06] <lizmat> meh, looks like the timeout logic of IRC::Client still needs some tuning

[15:09] *** linkable6 joined
[15:30] *** kjp joined
[15:37] <MasterDuke> could https://developers.redhat.com/blog/2020/06/25/red-hat-enterprise-linux-8-2-brings-faster-python-3-8-run-speeds# be relevant for moarvm?

[15:56] <MasterDuke> https://github.com/rakudo/rakudo/issues/4729 ugh, bigint ops also need the same fixing as nativecall

[15:57] <MasterDuke> another reason to switch to gmp, you can pass it allocation functions to use

[15:57] <lizmat> does it?  the version used there misses at least 23 commits ?

[15:58] <lizmat> aaah,. that's related to mimalloc, not the uint merge

[15:58] * lizmat goes silent again

[16:00] <MasterDuke> Nicholas++ has been on a roll fixing/finishing my incorrect/incomplete PRs, maybe i can trick^h^h^h^h^h convince him to look into the gmp one after i rebase it...

[16:01] <Nicholas> and the reward is cake?

[16:01] <Nicholas> (I am not familiar with the game, but I am aware of it)

[16:02] <MasterDuke> virtual cake now, physical beer if we ever meet in-person

[16:09] <lizmat> nine: P5getnetbyname got borked

[16:09] <lizmat> ===SORRY!===

[16:09] <lizmat> Calling _getnetbyaddr(uint, int) will never work with declared signature (int32, uint32 --> P5getnetbyname::NetStruct)

[16:09] <lizmat> I guess that's an error that previously went unnoticed

[16:12] <nine> Yeah, definitely looks wrong in the module. Previously uint was essentially the same as int, so we didn't mind

[16:13] <nine> We can be more lenient with this. Even C compilers wouldn't complain about this case. But I wonder where the line is between the compiler detecting this being helpful and it being just noise.

[16:14] <lizmat> no, it's fine as far as I am concerned  :-)

[16:37] *** linkable6 left
[16:37] *** evalable6 left
[16:38] *** linkable6 joined
[16:38] *** evalable6 joined
[16:43] <lizmat> nine: looks like IO::Socket::Async::SSL got borked

[16:43] <lizmat> This container does not reference a native unsigned integer

[16:43] <lizmat>           in block  at /Users/liz/Github/rakudo.moar/install/share/perl6/site/sources/B354B3F623BE4824406EEA4C8A5D0C9910B12079 (IO::Socket::Async::SSL) line 768

[16:43] <lizmat> which in turn breaks Cro::TLS

[16:47] <nine> steps to reproduce?

[16:47] <nine> tests seem to run fine here

[16:50] <lizmat> running my REA update script

[16:52] <lizmat> hmmm... I was already considering not using Cro::HTTP::Client, but instead of just shelling out to curl

[16:53] <nine> What does --ll-exception point at?

[16:53] <lizmat> This container does not reference a native unsigned integer

[16:53] <lizmat>    at SETTING::src/core.c/Buf.pm6:187  (/Users/liz/Github/rakudo.moar/install/share/perl6/runtime/CORE.c.setting.moarvm:)

[16:53] <nine> Are you on 2021.12-141-g3823f88ce?

[16:54] <lizmat> aaah... need to pull rakudo  :-)

[16:54] <lizmat> am now  :-)

[17:08] <MasterDuke> actually, now i'm not so sure the bigint functions do need anything. we don't directly alloc/free their internals, libtommath does that and it's just using regular libc calls. not exactly sure what the problem is

[17:41] *** dogbert11 joined
[17:43] *** dogbert17 left
[18:07] *** reportable6 left
[19:09] *** reportable6 joined
[20:01] *** harrow left
[20:27] *** harrow joined
[21:37] <japhb> Welp, with nine++'s latest commits, it appears Cairo can build/test cleanly now.  However NativeHelpers::Array is failing.  :-/

[21:57] *** linkable6 left
[21:57] *** evalable6 left
[21:59] *** evalable6 joined
[22:32] *** Geth left
[22:32] *** Geth joined
[22:36] *** Geth left
[22:36] *** Geth joined
[22:41] *** Geth left
[22:41] *** Geth joined
