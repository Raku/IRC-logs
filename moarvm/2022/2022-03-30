[00:05] *** [Coke]_ left
[00:07] *** [Coke] joined
[01:28] *** ShaneC left
[06:01] <Nicholas> good *. *

[08:10] <MasterDuke> getting back into project euler and rakudo is significantly faster than when i was last doing PE, very nice

[08:13] <MasterDuke> sort of related, but why would MVM_callstack_unwind_frame be near the top of a perf report?

[08:39] <lizmat> I've got good news regarding https://github.com/rakudo/rakudo/issues/1920

[08:40] <lizmat> the problem *is* caused by DYNAMIC being called from multiple threads at the same time

[08:40] <lizmat> and an interaction between $*CWD and $*REPO

[08:40] <lizmat> the test script now always succeeds

[08:41] <lizmat> the only downside is that it broke pre-compiling modules

[09:05] <nine> Well that _is_ a bit of a downer :D

[09:12] <lizmat> yeah, but at least I got a nice stacktrace to work on fixing that  -)

[09:12] <lizmat> rather than just segfaults

[09:15] <jnthnwrthngtn> MasterDuke: Assuming you mean inclusive time, then that's where compiling dispatch programs shows up

[09:16] <jnthnwrthngtn> MasterDuke: Take a look at its callees to see if it's that or something else

[09:33] <timo> who's ready for the next iteration of critical remote code execution vulnerabilities in Spring?

[10:01] *** sena_kun left
[10:02] *** sena_kun joined
[10:05] <jnthnwrthngtn> Ready to patch them or ready to exploit them? :)

[10:10] <timo> porque no los dos

[10:12] <jnthnwrthngtn> :D

[10:57] *** Altai-man joined
[11:05] <lizmat> meh, very useful error message while installing core modules:

[11:05] <lizmat> Use of uninitialized value of type Any in string context.

[11:05] <lizmat> Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.

[11:05] <lizmat>   in any statement_control at /Users/liz/Github/rakudo.moar/blib/Perl6/Grammar.moarvm line 1

[11:05] <lizmat> suggestions?

[14:37] *** rypervenche joined
[14:55] *** Altai-man left
[15:11] <nine> jnthnwrthngtn: I think your "Improve error when `make` encounters non-Match $/" commit broke Inline::Perl5: https://build.opensuse.org/package/live_build_log/home:niner9:rakudo-git/perl6-Inline-Perl5/15.4/x86_64

[15:28] *** vrurg_ joined
[15:31] *** vrurg left
[18:55] <jnthnwrthngtn> How is that even possible?

[18:55] <jnthnwrthngtn> If it ain't a `Match` then the bind must fail

[18:57] <jnthnwrthngtn> So I don't see how it could have done anything except turned one exception into another

[18:58] <jnthnwrthngtn> Looking at the stack trace, maybe there's some NQP involved and it gets an NQPMatch? But then I still don't understand how the attribute bind would succeed.

[19:04] <lizmat> Match does NQPMatchRole, that would make an NQPMatch work, no ?

[19:08] <jnthnwrthngtn> Well, it'd avoid the exception but it still makes no sense at all

[19:08] <jnthnwrthngtn> Because the class should match

[19:09] <jnthnwrthngtn> Oh, I guess there's that "slot index" optimization (that I'm kinda pondering getting rid of) that might be making it blindly access a particular slot of the object without checking

[19:09] <jnthnwrthngtn> And then it's mostly luck that an NQPMatch and a Match put $!make in the same place

[19:10] <jnthnwrthngtn> (Said opt pre-dates spesh, and isn't worth so much with it)

[19:11] <nine> Such a thing exists? Oh wow

[19:12] <jnthnwrthngtn> Yeah, back to the Parrot days I think, when I was scratching around for any technique for speed-ups 

[19:13] <jnthnwrthngtn> Ah well, there's another cleanup that we can expect to end with yak shaves...

[19:27] <japhb> At what point have we sheared the entire flock and need to wait for them to regrow their wool?

[19:28] <japhb> .oO( Imagine an infinite flock of yaks, from which you shear every other yak.  You have now sheared half of the yaks, but there still are an infinite number left, and it has taken you an infinite amount of time to get even this far ... )

[19:31] <nine> Is it true that English doesn't have a collective noun for a group of yaks? I'm disappointed :D

[19:36] <lizmat> a gaze of yaks ?

[19:36] <lizmat> ah, no, that's for raccoons  :-)

[19:37] <Nicholas> Wikipedia is claiming "herd" https://en.wikipedia.org/wiki/List_of_animal_names#Y

[20:05] *** sena_kun left
[20:06] *** sena_kun joined
[20:58] <[Coke]> (collective nouns)--

[21:20] *** discord-raku-bot left
[21:21] *** discord-raku-bot joined
[23:23] *** discord-raku-bot left
[23:23] *** discord-raku-bot joined
