[00:07] *** reportable6 left
[00:10] *** reportable6 joined
[01:09] *** bisectable6 joined
[01:09] *** statisfiable6 joined
[03:00] *** linkable6 left
[03:00] *** evalable6 left
[03:02] *** linkable6 joined
[03:55] *** frost joined
[04:03] *** evalable6 joined
[04:30] *** frost left
[05:05] *** frost joined
[05:55] *** frost left
[06:08] *** reportable6 left
[07:08] *** benchable6 left
[07:08] *** releasable6 left
[07:08] *** unicodable6 left
[07:08] *** notable6 left
[07:08] *** linkable6 left
[07:08] *** shareable6 left
[07:08] *** sourceable6 left
[07:08] *** evalable6 left
[07:08] *** greppable6 left
[07:08] *** bloatable6 left
[07:08] *** coverable6 left
[07:08] *** committable6 left
[07:08] *** quotable6 left
[07:08] *** statisfiable6 left
[07:08] *** bisectable6 left
[07:08] *** tellable6 left
[07:08] *** squashable6 left
[07:08] *** nativecallable6 left
[07:09] *** evalable6 joined
[07:09] *** nativecallable6 joined
[07:09] *** tellable6 joined
[07:10] *** squashable6 joined
[07:10] *** quotable6 joined
[07:10] *** shareable6 joined
[07:11] *** unicodable6 joined
[07:11] *** releasable6 joined
[07:29] <Nicholas> good *, #moarvm 

[08:09] *** linkable6 joined
[08:09] *** coverable6 joined
[08:11] *** greppable6 joined
[08:11] *** bisectable6 joined
[08:11] *** sourceable6 joined
[08:37] <MasterDuke> whoops, looks like geth is down. i just merged https://github.com/MoarVM/MoarVM/pull/1650

[09:09] *** notable6 joined
[09:10] *** statisfiable6 joined
[09:59] <MasterDuke> and opened https://github.com/MoarVM/MoarVM/pull/1654

[10:03] *** lizmat left
[10:04] *** lizmat joined
[10:04] *** Geth joined
[10:09] *** reportable6 joined
[10:11] *** bloatable6 joined
[10:11] *** benchable6 joined
[10:37] *** Voldenet_ joined
[10:37] *** Voldenet left
[10:37] *** Voldenet_ is now known as Voldenet

[12:07] *** reportable6 left
[13:32] <Geth> ¦ MoarVM: MasterDuke17++ created pull request #1655: Manually implement simplified strtoll for coerce_si

[13:32] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1655

[13:53] <Nicholas> rakudo commit 2486960b70754117ddbb69271af506b05a85888a causes a NULL pointer dereference SEGV for me for an ASAN build, with MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 and a bunch of other debugging stuff enabled. I haven't reduced it yet

[13:54] <Nicholas> the bad read is at optimize_runbytecode src/spesh/optimize.c:1523

[13:54] *** linkable6 left
[13:54] <Nicholas> stable_type_tuple[i].type = STABLE(facts->value.o)->WHAT;

[13:55] <Nicholas> "bunch of other debugging stuff" also meant Configure.pl --has-libffi --prefix=/home/nick/Sandpit/moar-C11-SAN --cc=ccache\ gcc --ld=gcc --optimize=g --debug=3 --asan --telemeh --no-mimalloc --c11-atomics

[13:55] <Nicholas> which is clearly not *entirely* the defaults

[14:09] *** reportable6 joined
[14:11] *** committable6 joined
[14:15] <MasterDuke> vrurg: ^^^

[14:16] <MasterDuke> afk for a bit

[14:18] <vrurg> MasterDuke: if you point at Configure.pl then I did nothing for MoarVM in this respect.

[14:36] <Nicholas> I think it's exposing an existing bug.

[14:53] <Nicholas> (gdb) p facts->value.o

[14:53] <Nicholas> $1 = (MVMObject *) 0x1

[14:53] <Nicholas> there's a fun thing.

[14:54] <Nicholas> annoyingly can't replicate this (on another similar machine) without ASAN

[14:57] *** linkable6 joined
[15:02] *** dogbert17 joined
[15:27] *** frost joined
[15:30] <Nicholas> aha. I can rrrrrreplicate it

[15:32] <Nicholas> static void literal_facts sets

[15:32] <Nicholas>             tgt_facts->value.i = ins->operands[1].lit_i16;

[15:32] <Nicholas>     tgt_facts->flags |= MVM_SPESH_FACT_KNOWN_VALUE;

[15:33] <Nicholas> optimize.c is inside an if (cs->arg_flags[i] & MVM_CALLSITE_ARG_OBJ) 

[15:34] <Nicholas> I don't know how to square this - is it obviously wrong from the C code?

[15:36] <Nicholas> jnthnwrthngtn: this *might* be a bug in commit 3e02825b924656b2cfd009c3f34b2d6eb492906c

[15:36] *** linkable6 left
[15:38] *** linkable6 joined
[15:41] *** vrurg left
[15:47] *** vrurg joined
[16:00] *** frost left
[18:08] *** reportable6 left
[18:10] *** reportable6 joined
[18:24] *** discord-raku-bot left
[18:24] *** discord-raku-bot joined
[18:29] *** discord-raku-bot left
[18:29] *** discord-raku-bot joined
[19:56] <Nicholas> I'm stuck. But I know that it's reproducable with a regular Configure.pl build on master/master/master, as long as you enable MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1

[20:37] *** CaCode joined
[20:40] <dogbert17> Nicholas: do you get the same error with this:  use Test; try { my $result = !(all(1..20) ~~ { $_ < 1  }); }; eval-lives-ok 'class A { method foo { return "" ~~ * } }; A.new.foo';

[20:41] <Geth> ¦ MoarVM: b80996fff3 | (Daniel Green)++ | src/core/coerce.c

[20:41] <Geth> ¦ MoarVM: Manually implement simplified strtoll for coerce_si

[20:41] <Geth> ¦ MoarVM: 

[20:41] <Geth> ¦ MoarVM: This way we don't have to allocate a new C string just to call strtoll

[20:41] <Geth> ¦ MoarVM: on it. Additionally, because we're always converting to base 10, we can

[20:41] <Geth> ¦ MoarVM: remove some of the checks that strtoll does.

[20:41] <Geth> ¦ MoarVM: 

[20:41] <Geth> ¦ MoarVM: There are two code paths, both use the same algorithm, but when the

[20:41] <Geth> ¦ MoarVM: MVMString is just storing ascii characters we can use its storage

[20:41] <Geth> ¦ MoarVM: directly, otherwise we have to go through a codepoint iterator.

[20:41] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b80996fff3

[20:41] <Geth> ¦ MoarVM: 7ba08f8086 | MasterDuke17++ (committed using GitHub Web editor) | src/core/coerce.c

[20:42] <Geth> ¦ MoarVM: Merge pull request #1655 from MasterDuke17/faster_coerce_si

[20:42] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7ba08f8086

[20:44] <Nicholas> dogbert17: yes

[20:44] <dogbert17> cool

[20:45] <dogbert17> the 'golf' is some code lifted from t/spec/S03-smartmatch/disorganized.t which failed when the two flags were set

[20:46] <dogbert17> my handicap is quite high so I was unable to make it shorter :(

[20:46] <Nicholas> you are still doing better than I managed

[20:46] <Nicholas> (I tried but gave up)

[20:47] <dogbert17> do you think it is short enough to interest jnthnwrthngtn?

[20:49] <Nicholas> he already commented on the issue

[20:49] <Nicholas> https://github.com/MoarVM/MoarVM/issues/1656

[20:50] <dogbert17> nice, and I see that you're running rr

[20:51] <Nicholas> yarrrrrr

[20:51] <Nicholas> every pirate's favourite debugging tool

[20:51] <dogbert17> so it would seem :)

[20:52] <MasterDuke> anyone have an opinion on https://github.com/MoarVM/MoarVM/pull/1654 ?

[20:53] <MasterDuke> i was thinking of merging that and then doing bumps

[20:53] <lizmat> MasterDuke++

[20:53] <Nicholas> ah oops, I looked at that this morning and thought "I don't understand the detail here, but the explanation seems self-consistent"

[20:56] <MasterDuke> i got sidetracked by seeing an MVM_str_hash_key_is_valid and then not noticing that MVM_fixkey_hash_lvalue_fetch_nocheck wasn't an MVM_str_hash_* function

[20:56] <MasterDuke> and was trying to figure out where the ->key was being set

[20:57] <MasterDuke> (i was looking at the str_hash implementations)

[20:57] <MasterDuke> but once i un-sidetracked myself it seemed pretty straightforward

[21:00] <MasterDuke> oh, and while i'm asking for opinions, https://github.com/MoarVM/MoarVM/pull/1645 is still floating out there

[21:01] *** [Coke] left
[21:04] *** [Coke] joined
[21:05] <Geth> ¦ MoarVM: 6661662d0c | (Daniel Green)++ | src/core/interp.c

[21:05] <Geth> ¦ MoarVM: Fix segfault in nqp::hllboolfor

[21:05] <Geth> ¦ MoarVM: 

[21:05] <Geth> ¦ MoarVM: It currently doesn't check whether the fields it needs are present in

[21:05] <Geth> ¦ MoarVM: the HLLConfig returned from MVM_hll_get_config_for, which is fine because

[21:05] <Geth> ¦ MoarVM: all the names it's usually called with have existing and populated

[21:05] <Geth> ¦ MoarVM: HLLConfigs. But MVM_hll_get_config_for will create and return a mostly empty

[21:05] <Geth> ¦ MoarVM: HLLConfig if it *didn't* already exist for the given HLL name. So check and

[21:05] <Geth> ¦ MoarVM: throw an exception if the fields we need aren't populated.

[21:05] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/6661662d0c

[21:05] <Geth> ¦ MoarVM: 2a19feca6a | MasterDuke17++ (committed using GitHub Web editor) | src/core/interp.c

[21:05] <Geth> ¦ MoarVM: Merge pull request #1654 from MasterDuke17/fix_segv_in_hllboolfor

[21:05] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2a19feca6a

[21:44] <MasterDuke> huh. we're creating array with >9m elems while compiling CORE.c

[21:59] <MasterDuke> looks like it's when writing out the mbc

[22:03] <jnthnwrthngtn> Is it a byte array? Could well be the assembled bytecode 

[22:03] <MasterDuke> yep

[22:03] <MasterDuke> i think when it's writing the frames to itself

[22:05] <MasterDuke> here https://github.com/Raku/nqp/blob/master/src/vm/moar/QAST/QASTCompilerMAST.nqp#L2794-L2799 specifically

[22:05] <MasterDuke> so interestingly a couple lines later it writes the frames directly to the file

[22:05] <MasterDuke> istr doing some of this a while ago

[22:06] <MasterDuke> i'm not sure why it writes them to itself and then again to the file

[22:11] <MasterDuke> 22205 frames written, 9920512 elems in the resulting array

[23:00] <lizmat> MasterDuke: bump confirmed green :-)

[23:00] <lizmat> sleep&

[23:33] *** CaCode left
