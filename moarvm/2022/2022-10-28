[00:06] *** reportable6 left
[00:07] *** reportable6 joined
[00:08] *** reportable6 joined
[01:18] *** evalable6 left
[01:18] *** linkable6 left
[01:18] *** linkable6 joined
[01:20] *** evalable6 joined
[01:49] *** epony left
[01:50] *** epony joined
[01:52] *** archenoth left
[01:55] *** Kaipei joined
[02:08] *** archenoth joined
[03:04] *** nebuchadnezzar left
[03:53] *** epony left
[03:54] *** epony joined
[04:54] *** linkable6 left
[04:54] *** coverable6 left
[04:54] *** tellable6 left
[04:54] *** evalable6 left
[04:54] *** notable6 left
[04:54] *** nativecallable6 left
[04:54] *** statisfiable6 left
[04:54] *** greppable6 left
[04:54] *** quotable6 left
[04:54] *** benchable6 left
[04:54] *** shareable6 left
[04:54] *** bisectable6 left
[04:54] *** reportable6 left
[04:54] *** releasable6 left
[04:54] *** unicodable6 left
[04:54] *** committable6 left
[04:54] *** squashable6 left
[04:54] *** sourceable6 left
[04:54] *** bloatable6 left
[04:55] *** evalable6 joined
[04:55] *** squashable6 joined
[04:55] *** nativecallable6 joined
[04:55] *** releasable6 joined
[04:55] *** tellable6 joined
[04:55] *** notable6 joined
[04:55] *** benchable6 joined
[04:55] *** statisfiable6 joined
[04:55] *** reportable6 joined
[04:56] *** unicodable6 joined
[04:56] *** shareable6 joined
[04:56] *** sourceable6 joined
[04:56] *** greppable6 joined
[04:57] *** coverable6 joined
[04:57] *** committable6 joined
[04:57] *** bisectable6 joined
[04:57] *** quotable6 joined
[04:57] *** linkable6 joined
[04:57] *** bloatable6 joined
[05:44] *** japhb left
[05:45] *** japhb joined
[05:57] *** epony left
[05:59] *** epony joined
[06:05] *** epony left
[06:06] *** reportable6 left
[06:07] *** reportable6 joined
[06:17] *** japhb left
[06:22] *** japhb joined
[06:22] *** archenoth left
[06:23] *** archenoth joined
[08:16] *** epony joined
[08:47] *** Kaipii joined
[08:51] *** Kaipei left
[09:05] *** discord-raku-bot left
[09:05] *** discord-raku-bot joined
[09:18] *** discord-raku-bot left
[09:19] *** discord-raku-bot joined
[09:27] *** Kaipii is now known as Kaiepi
[09:35] *** frost24 joined
[10:08] *** frost24 left
[10:20] *** epony left
[10:22] *** epony joined
[11:06] *** linkable6 left
[11:07] *** linkable6 joined
[11:13] *** Kaiepi left
[11:14] <nine> ThisÖ class InlinedArrayInStruct is repr<CStruct> { HAS int32 @.b[3] is CArray; }; (from one of NativeCall's tests) is a veritable treasure trove of NYI for RakuAST. Just about every little piece of it was missing a week ago :D
[11:15] <lizmat> whee!
[11:15] *** Kaiepi joined
[11:15] <nine> repr with <> quotes, inlined fields in CStructs, natively typed aggregates in attributes, shaped arrays and array types all in one little example
[11:16] <nine> Oh, and one more: we actually have special handling of inlined, shaped CArrays. That's the one piece still missing.
[11:30] *** frost53 joined
[11:56] *** frost53 left
[11:57] *** frost70 joined
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:24] *** epony left
[12:26] *** epony joined
[12:27] *** frost70 left
[13:25] *** [Coke] joined
[13:36] <nine> Now 68 test and 536 spectest files passing on RakuAST
[13:36] <[Coke]> ++nice
[14:29] *** epony left
[14:30] *** epony joined
[15:26] <japhb> nine++
[15:30] *** linkable6 left
[15:30] *** evalable6 left
[15:30] *** linkable6 joined
[15:33] *** evalable6 joined
[15:35] *** [Coke] left
[15:38] *** [Coke] joined
[16:21] *** Kaiepi left
[16:33] *** epony left
[16:34] *** epony joined
[16:39] *** [Coke]_ joined
[16:42] *** [Coke] left
[17:15] *** Kaiepi joined
[17:34] <lizmat> And whee!  A reproducible: MoarVM oops: MVM_str_hash_fetch_nocheck called with a stale hashtable pointer using some combination of args with rak
[18:06] <lizmat> ah, meh: probably an issue with rak  :-(
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:20] <lizmat> yeah  :-(
[18:21] *** epony left
[20:10] *** [Coke] joined
[20:13] *** [Coke]_ left
[21:22] *** linkable6 left
[21:22] *** evalable6 left
[21:23] *** evalable6 joined
[21:23] *** linkable6 joined
[22:20] <japhb> rak shouldn't be able to oops MoarVM, unless it's doing some deep NativeCall trickery ...
[23:35] <MasterDuke>  concurrently modifying an array or hash is allowed to do it
[23:37] <MasterDuke> nwc++s hash work means it now oopses instead of segfaults, and i have a wip PR to do the same for arrays
