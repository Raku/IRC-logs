[00:06] *** reportable6 left
[00:07] *** reportable6 joined
[01:43] *** bloatable6 left
[01:43] *** quotable6 left
[01:43] *** evalable6 left
[01:43] *** sourceable6 left
[01:43] *** releasable6 left
[01:43] *** linkable6 left
[01:43] *** reportable6 left
[01:43] *** unicodable6 left
[01:43] *** notable6 left
[01:43] *** benchable6 left
[01:43] *** tellable6 left
[01:43] *** committable6 left
[01:43] *** greppable6 left
[01:43] *** nativecallable6 left
[01:43] *** bisectable6 left
[01:43] *** shareable6 left
[01:43] *** coverable6 left
[01:43] *** statisfiable6 left
[01:44] *** releasable6 joined
[01:44] *** tellable6 joined
[01:44] *** quotable6 joined
[01:44] *** notable6 joined
[01:44] *** sourceable6 joined
[01:45] *** coverable6 joined
[01:45] *** linkable6 joined
[01:45] *** shareable6 joined
[01:45] *** bloatable6 joined
[01:45] *** benchable6 joined
[01:46] *** bisectable6 joined
[01:46] *** statisfiable6 joined
[01:46] *** greppable6 joined
[01:46] *** nativecallable6 joined
[01:46] *** evalable6 joined
[01:46] *** unicodable6 joined
[01:46] *** committable6 joined
[01:47] *** reportable6 joined
[02:53] *** notable6 left
[02:53] *** bisectable6 left
[02:53] *** coverable6 left
[02:53] *** tellable6 left
[02:53] *** shareable6 left
[02:53] *** quotable6 left
[02:53] *** sourceable6 left
[02:53] *** benchable6 left
[02:53] *** releasable6 left
[02:53] *** nativecallable6 left
[02:53] *** committable6 left
[02:53] *** unicodable6 left
[02:53] *** evalable6 left
[02:53] *** reportable6 left
[02:53] *** statisfiable6 left
[02:53] *** linkable6 left
[02:53] *** bloatable6 left
[02:53] *** greppable6 left
[02:53] *** coverable6 joined
[02:53] *** bloatable6 joined
[02:53] *** evalable6 joined
[02:53] *** tellable6 joined
[02:53] *** unicodable6 joined
[02:53] *** linkable6 joined
[02:53] *** shareable6 joined
[02:53] *** reportable6 joined
[02:54] *** sourceable6 joined
[02:54] *** bisectable6 joined
[02:54] *** releasable6 joined
[02:54] *** notable6 joined
[02:55] *** benchable6 joined
[02:55] *** greppable6 joined
[02:55] *** committable6 joined
[02:55] *** statisfiable6 joined
[02:55] *** nativecallable6 joined
[02:56] *** quotable6 joined
[03:06] *** frost joined
[04:03] *** vrurg_ joined
[04:04] *** vrurg left
[05:22] *** sourceable6 left
[05:22] *** notable6 left
[05:22] *** reportable6 left
[05:22] *** bisectable6 left
[05:22] *** benchable6 left
[05:22] *** coverable6 left
[05:22] *** unicodable6 left
[05:22] *** nativecallable6 left
[05:22] *** statisfiable6 left
[05:22] *** committable6 left
[05:22] *** bloatable6 left
[05:22] *** shareable6 left
[05:22] *** greppable6 left
[05:22] *** quotable6 left
[05:22] *** evalable6 left
[05:22] *** tellable6 left
[05:22] *** linkable6 left
[05:22] *** releasable6 left
[05:22] *** coverable6 joined
[05:22] *** linkable6 joined
[05:23] *** reportable6 joined
[05:23] *** evalable6 joined
[05:23] *** nativecallable6 joined
[05:23] *** benchable6 joined
[05:23] *** sourceable6 joined
[05:23] *** notable6 joined
[05:23] *** shareable6 joined
[05:23] *** quotable6 joined
[05:23] *** greppable6 joined
[05:24] *** releasable6 joined
[05:24] *** bloatable6 joined
[05:24] *** statisfiable6 joined
[05:24] *** bisectable6 joined
[05:24] *** committable6 joined
[05:25] *** unicodable6 joined
[05:25] *** tellable6 joined
[06:06] *** reportable6 left
[06:07] *** reportable6 joined
[06:39] *** patrickb left
[06:39] *** patrickb joined
[07:27] <Nicholas> good *, *

[07:49] <timo> good **/*

[08:08] *** sena_kun joined
[08:11] <jnthn> o/

[08:16] <Nicholas> \o

[09:07] <timo> good * to all my * and \* and \\*

[09:32] *** evalable6 left
[09:32] *** linkable6 left
[09:34] *** evalable6 joined
[09:34] *** linkable6 joined
[10:34] *** evalable6 left
[10:35] *** evalable6 joined
[11:03] *** linkable6 left
[11:06] *** linkable6 joined
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:22] *** frost left
[13:05] *** Geth left
[13:05] *** lizmat joined
[13:25] *** lizmat left
[13:26] *** lizmat joined
[13:28] <lizmat> https://twitter.com/SpaceX/status/1545035306960687105   # on the live video stream, it looked like the engine burn cut out too soon

[13:28] <lizmat> wonder if "landed" is a euphemism for "forcefully deconstructed" in this case  :-)

[14:00] <vrurg_> A general question: is it possible to use separate RNGs for Moar's internal needs and for HLL? I have encountered a case where (likely, but not sure) hash operations broke Rakudo's t/09-moar/00-misc.t.

[14:07] <jnthn> If a test is dependent on hash ordering that'd be a bug in the test

[14:08] <jnthn> I'm also not sure if the RNG for hashing would count as internal need or HLL, given hash randomization is a HLL-promised behavior (for security reasons)

[14:16] *** Geth joined
[14:22] *** Geth left
[14:22] *** Geth joined
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[19:05] *** CaCode joined
[19:35] <vrurg_> jnthn: It's a bit different case. (nqp::srand(1) and then nqp::rand_I twice) x 2 â€“ to make sure the first two produced numbers are the same, i.e. RNG is seeded as expected.

[19:37] <vrurg_> After I did some coercion/return typecheck work in dispatcher some more core code got touched in between the two nqp::rand_I. Somehow RNG got involved and the second pair of numbers produced got different from the first pair.

[19:37] *** vrurg_ is now known as vrurg

[19:39] <japhb> vrurg: Are you saying that the second srand is getting ignored?  Because no matter how far apart, I would expect nqp::srand(constant) followed *immediately* by nqp::rand_I should produce the same sequence.

[19:40] <vrurg> japhb: No, it doesn't. The key word is 'immediately. And because the first and the second rand_I are used as arguments to `is-deeply`, a lot of events happens in between.

[19:41] <japhb> Ah!  So it's not really testing what it thinks its testing.  Sounds like a test bug?

[19:42] <vrurg> The point is that Test module doesn't use RNG. Not for is-deeply. So, for a user these two rands do look as immediate. And I would like it to remain this way.

[19:42] <japhb> (Though TBH being able to spin up a separate PRNG sequence is something I've wanted for quite a long time, just not quite strong enough to go and make it so.)

[19:43] <vrurg> I know there are cases out there where being able to seed and get predictable outcomes from RNG is crucial for testing. So, it's not a whim.

[19:44] <japhb> vrurg: Where's the test?  I think I might be misunderstanding your description of the test code.

[19:44] <japhb> Oh, you linked it earlier

[19:44] <japhb> NM

[19:46] <japhb> OK, I did misunderstand your description, but in a way that strengthens my belief that the test as written is wrong (just lucky previously).

[19:46] <japhb> That said, I 100% agree that being able to test against a known sequence of random numbers is very useful.

[19:48] <japhb> And that it would be nice to separate the hash sequence from the "user" sequence.

[19:50] <vrurg> I have fixed the test, as a part of https://github.com/rakudo/rakudo/pull/4977. But, anyway.

[19:50] *** sena_kun left
[19:53] *** sena_kun joined
[22:29] *** sena_kun left
