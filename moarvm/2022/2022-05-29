[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[01:09] *** quotable6 left
[01:09] *** committable6 left
[01:09] *** unicodable6 left
[01:09] *** notable6 left
[01:09] *** coverable6 left
[01:09] *** benchable6 left
[01:09] *** statisfiable6 left
[01:09] *** releasable6 left
[01:09] *** bloatable6 left
[01:09] *** nativecallable6 left
[01:09] *** linkable6 left
[01:09] *** shareable6 left
[01:09] *** bisectable6 left
[01:09] *** sourceable6 left
[01:09] *** tellable6 left
[01:09] *** evalable6 left
[01:09] *** reportable6 left
[01:09] *** greppable6 left
[01:09] *** coverable6 joined
[01:10] *** releasable6 joined
[01:10] *** benchable6 joined
[01:10] *** bloatable6 joined
[01:10] *** committable6 joined
[01:10] *** tellable6 joined
[01:11] *** sourceable6 joined
[01:11] *** evalable6 joined
[01:11] *** quotable6 joined
[01:11] *** notable6 joined
[01:11] *** unicodable6 joined
[01:11] *** shareable6 joined
[01:11] *** statisfiable6 joined
[01:11] *** linkable6 joined
[01:11] *** greppable6 joined
[01:11] *** bisectable6 joined
[01:12] *** nativecallable6 joined
[01:12] *** reportable6 joined
[03:05] *** statisfiable6 left
[03:05] *** tellable6 left
[03:05] *** bloatable6 left
[03:05] *** releasable6 left
[03:05] *** nativecallable6 left
[03:05] *** sourceable6 left
[03:05] *** shareable6 left
[03:05] *** committable6 left
[03:05] *** bisectable6 left
[03:05] *** reportable6 left
[03:05] *** benchable6 left
[03:05] *** greppable6 left
[03:05] *** quotable6 left
[03:05] *** coverable6 left
[03:05] *** unicodable6 left
[03:05] *** notable6 left
[03:05] *** linkable6 left
[03:05] *** evalable6 left
[03:05] *** sourceable6 joined
[03:05] *** committable6 joined
[03:06] *** bloatable6 joined
[03:06] *** greppable6 joined
[03:06] *** bisectable6 joined
[03:06] *** notable6 joined
[03:06] *** quotable6 joined
[03:07] *** nativecallable6 joined
[03:07] *** linkable6 joined
[03:07] *** statisfiable6 joined
[03:07] *** reportable6 joined
[03:07] *** releasable6 joined
[03:07] *** tellable6 joined
[03:07] *** unicodable6 joined
[03:07] *** shareable6 joined
[03:07] *** benchable6 joined
[03:07] *** coverable6 joined
[03:08] *** evalable6 joined
[04:00] *** Kaiepi left
[04:32] *** Kaiepi joined
[05:06] *** Kaiepi left
[06:06] *** unicodable6 left
[06:06] *** quotable6 left
[06:06] *** releasable6 left
[06:06] *** tellable6 left
[06:06] *** sourceable6 left
[06:06] *** committable6 left
[06:06] *** bisectable6 left
[06:06] *** statisfiable6 left
[06:06] *** nativecallable6 left
[06:06] *** evalable6 left
[06:06] *** shareable6 left
[06:06] *** greppable6 left
[06:06] *** benchable6 left
[06:06] *** coverable6 left
[06:06] *** reportable6 left
[06:06] *** bloatable6 left
[06:06] *** notable6 left
[06:06] *** linkable6 left
[06:06] *** benchable6 joined
[06:06] *** greppable6 joined
[06:06] *** nativecallable6 joined
[06:06] *** quotable6 joined
[06:07] *** committable6 joined
[06:07] *** statisfiable6 joined
[06:07] *** notable6 joined
[06:07] *** bisectable6 joined
[06:07] *** tellable6 joined
[06:08] *** coverable6 joined
[06:08] *** releasable6 joined
[06:08] *** shareable6 joined
[06:08] *** unicodable6 joined
[06:08] *** linkable6 joined
[06:09] *** evalable6 joined
[06:09] *** sourceable6 joined
[06:09] *** reportable6 joined
[06:09] *** bloatable6 joined
[07:36] *** Kaiepi joined
[11:04] *** linkable6 left
[11:04] *** evalable6 left
[11:06] *** linkable6 joined
[11:06] *** evalable6 joined
[12:08] *** reportable6 left
[12:11] *** reportable6 joined
[12:23] *** frost joined
[12:52] <nine> Role currying wasn't actually that bad. Type captures look better now as well. During the runtime of the role body, both parameters and type captures are available and have sensible values. So the final piece that's missing is proper lexical capture and fixup.

[12:52] <nine> We already have the p6capturelex calls and cloning of methods. But that apparently isn't enough.

[13:02] <nine> Now it would help a lot if I actually understood how this lexcial fixup thingy works

[13:03] <lizmat> understanding is a great help!  :-)

[13:06] *** frost left
[13:07] *** frost joined
[13:12] <nine> Understanding is a three edged sword

[13:37] <lizmat> I guess that makes it tricky to hold without getting cut

[14:07] *** evalable6 left
[14:07] *** linkable6 left
[14:07] *** evalable6 joined
[14:08] *** linkable6 joined
[14:57] *** frost left
[15:54] *** vrurg_ joined
[15:57] *** vrurg left
[17:38] <Nicholas> MasterDuke: you mentioned https://lwn.net/Articles/893686/ (which is from one of the Pyston developers). Then we have https://pyfound.blogspot.com/2022/05/the-2022-python-language-summit_2.html which is (core) python "faster Python"

[17:39] <Nicholas> but the author of the first talk (Kevin Modzelewski) "warned that his “unsubstantiated hunch” was that the Faster CPython team had already accomplished “greater than one-half” of the optimisations that could be achieved within the current constraints." -- https://pyfound.blogspot.com/2022/05/the-2022-python-language-summit.html

[17:39] <Nicholas> continuing "Modzelewski encouraged the attendees to consider future optimisations that might cause backwards-incompatible behaviour changes."

[17:40] <Nicholas> which leads to https://pyfound.blogspot.com/2022/05/the-2022-python-language-summit-python_11.html -- 3.9 had been chosen as a target for now, [...] There is still much broader support for Python 3.9 among third-party packages than for Python 3.10, and so Python 3.9 still made more sense as a base branch for now rather than 3.10 or main.

[17:40] <Nicholas> er, wait, so "much broader support" *with* what are considered not (yet) to be "backward *in*compatible behaviour changes"

[17:42] <Nicholas> (and it's also clear that the various GIL changes need C ABI changes, and C extensions might not work unchanged)

[17:42] <Nicholas> sigh, I like jnthn for deciding that there would be no C extensions

[17:42] <Nicholas> I also wonder (in the future) if the "faster python" stuff attempts a JIT, but it's going to hit the same fun as MoarVM and the JIT, where progressively more C code needs to be re-written in "slower" NQP so that it can actually go faster

[17:44] <Nicholas> (none of this stuff is easy, and I applaud people for attempting it)

[18:02] <nine> Yeah, keeping internals internal was the best design decision ever

[18:08] *** reportable6 left
[18:10] *** reportable6 joined
[19:05] *** coleman left
[19:13] *** coleman joined
[20:01] *** linkable6 left
[20:03] *** linkable6 joined
[21:03] *** linkable6 left
[21:03] *** evalable6 left
[21:04] *** evalable6 joined
[21:05] *** linkable6 joined
[22:07] <[Coke]> +1

