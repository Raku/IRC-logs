[00:08] *** reportable6 left
[00:09] *** reportable6 joined
[00:24] *** frost joined
[00:44] *** Techcable left
[00:58] *** frost left
[01:01] *** linkable6 joined
[01:40] *** Techcable joined
[03:05] *** linkable6 left
[03:05] *** releasable6 left
[03:05] *** evalable6 left
[03:06] *** linkable6 joined
[04:06] *** releasable6 joined
[04:58] *** frost joined
[05:08] *** evalable6 joined
[05:49] *** frost left
[06:08] *** reportable6 left
[06:09] *** reportable6 joined
[07:18] *** squashable6 left
[07:18] *** quotable6 left
[07:18] *** notable6 left
[07:18] *** greppable6 left
[07:18] *** evalable6 left
[07:18] *** committable6 left
[07:18] *** linkable6 left
[07:18] *** coverable6 left
[07:18] *** bloatable6 left
[07:18] *** shareable6 left
[07:18] *** unicodable6 left
[07:18] *** tellable6 left
[07:18] *** bisectable6 left
[07:18] *** benchable6 left
[07:18] *** reportable6 left
[07:18] *** statisfiable6 left
[07:18] *** nativecallable6 left
[07:18] *** sourceable6 left
[07:18] *** releasable6 left
[07:18] *** greppable6 joined
[07:18] *** notable6 joined
[07:19] *** unicodable6 joined
[07:19] *** reportable6 joined
[07:19] *** squashable6 joined
[07:20] *** nativecallable6 joined
[07:20] *** evalable6 joined
[07:20] *** shareable6 joined
[07:21] *** sourceable6 joined
[08:18] *** statisfiable6 joined
[08:19] *** quotable6 joined
[08:19] *** tellable6 joined
[08:19] *** linkable6 joined
[08:19] *** coverable6 joined
[08:20] *** bloatable6 joined
[08:20] *** committable6 joined
[08:20] *** bisectable6 joined
[08:30] <Nicholas> good *able6, #moarvm

[09:20] *** releasable6 joined
[09:21] *** benchable6 joined
[10:07] <Geth> ¦ MoarVM: nwc10++ created pull request #1671: Remove temporary define for migrating Rakudo extops

[10:07] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1671

[10:09] <Nicholas> ##[error]No hosted parallelism has been purchased or granted. To request a free parallelism grant, please fill out the following form https://aka.ms/azpipelines-parallelism-request

[10:11] <Nicholas> er right. I *think* that someone within "our" "Azure DevOps Organization" likely needs to do this.

[10:11] <Nicholas> but right now, we seem to be stuck in a fog of default-fail

[10:23] *** linkable6 left
[11:13] *** squashable6 left
[11:24] *** linkable6 joined
[11:33] <lizmat> good *, #moarvm

[11:33] <lizmat> so I started working on really using uint in the core for all of those pesky cases where we need to check for < 0

[11:33] <lizmat> so I reduced the AT-POS for native arrays taking a uint as index

[11:34] <lizmat>         multi method AT-POS(intarray:D: uint $idx --> int) is raw {

[11:34] <lizmat>             nqp::atposref_i(self,$idx)

[11:34] <lizmat>         }

[11:34] <lizmat> this is still slower than the Int:D variant, because it doesn't get inlined

[11:34] <lizmat>     AT-POS BB(7284, 76 bytes) -> BB(1):

[11:34] <lizmat>       target has a :noinline instruction - ins: param_rp_o

[11:34] <lizmat> what am I missing?

[11:35] <Nicholas> (Hi. I don't know enough to even start to answer this)

[11:36] * lizmat neither... but I hope MasterDuke or nine will be able to have an idea

[11:57] <nine> lizmat: https://logs.liz.nl/moarvm/2022-02-06.html#16:49

[11:58] <lizmat> aaah... ok, I thought that had already made it into the release 

[11:58] <lizmat> nine: btw, it's irclogs.raku.org nowadays :-)

[11:58] <lizmat> ok /me needs to be a little more patient then

[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[13:13] *** squashable6 joined
[13:23] <lizmat> m: multi a(uint) { dd }; multi a(Int:D) { dd }; a 10   # nine, would your work have it dispatch to the uint candidate ?

[13:23] <camelia> rakudo-moar ceaa38fc3: OUTPUT: «sub a(Int:D)␤»

[13:23] <lizmat> OOC

[13:52] <jnthnwrthngtn> I think the only way a literal ends up getting passed as a native is if there's another argument that is a native and it's a multi-sub dispatch so the optimizer can do the transform

[14:21] <Nicholas> lizmat: "but I hope MasterDuke or nine" - you got jnthnwrthngtn - hopefully second best will do :-)

[14:26] *** Kaipi left
[14:27] *** Kaipi joined
[15:27] *** evalable6 left
[15:27] *** linkable6 left
[16:27] *** releasable6 left
[16:27] *** quotable6 left
[16:27] *** benchable6 left
[16:27] *** squashable6 left
[16:27] *** greppable6 left
[16:27] *** coverable6 left
[16:27] *** unicodable6 left
[16:27] *** bisectable6 left
[16:27] *** tellable6 left
[16:27] *** notable6 left
[16:27] *** statisfiable6 left
[16:27] *** nativecallable6 left
[16:27] *** shareable6 left
[16:27] *** sourceable6 left
[16:27] *** committable6 left
[16:27] *** reportable6 left
[16:27] *** bloatable6 left
[16:28] *** evalable6 joined
[16:28] *** notable6 joined
[16:29] *** unicodable6 joined
[16:29] *** bisectable6 joined
[16:29] *** quotable6 joined
[16:29] *** greppable6 joined
[16:29] *** sourceable6 joined
[16:29] *** statisfiable6 joined
[16:29] *** shareable6 joined
[16:30] <nine> Right now the optimiyer isn't smart enough to pass a native for a literal, even in multi dispatch. That's exactly the optimization opportunity I'm in the process of investigating

[17:28] *** benchable6 joined
[17:28] *** reportable6 joined
[17:29] *** nativecallable6 joined
[17:51] *** Altai-man left
[17:52] *** sena_kun joined
[18:07] *** reportable6 left
[18:07] *** reportable6 joined
[18:27] *** coverable6 joined
[18:27] *** squashable6 joined
[18:28] *** tellable6 joined
[18:28] *** bloatable6 joined
[18:29] *** releasable6 joined
[19:27] *** linkable6 joined
[19:59] <lizmat> nine: would this be the way to make $_ a uint on simple loops?

[19:59] <lizmat> https://gist.github.com/lizmat/633bdd2a45416f2bd39968ed5c53d879

[20:01] <lizmat> also timo ^^

[20:11] *** MasterDuke joined
[20:51] <nine> lizmat: yes.

[21:11] *** evalable6 left
[21:11] *** linkable6 left
[21:12] *** evalable6 joined
[21:54] *** dogbert11 joined
[21:56] *** dogbert17 left
[22:13] *** linkable6 joined
[22:18] *** dogbert17 joined
[22:20] *** dogbert11 left
[22:27] *** committable6 joined
[22:53] *** dogbert11 joined
[22:55] *** dogbert17 left
[23:55] *** linkable6 left
[23:55] *** evalable6 left
