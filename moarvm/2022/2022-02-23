[00:07] *** reportable6 left
[01:03] *** frost joined
[01:08] *** reportable6 joined
[02:08] *** linkable6 left
[02:08] *** shareable6 left
[02:08] *** releasable6 left
[02:08] *** evalable6 left
[02:08] *** greppable6 left
[02:08] *** statisfiable6 left
[02:08] *** committable6 left
[02:08] *** nativecallable6 left
[02:08] *** benchable6 left
[02:08] *** coverable6 left
[02:08] *** unicodable6 left
[02:08] *** reportable6 left
[02:08] *** quotable6 left
[02:08] *** notable6 left
[02:08] *** squashable6 left
[02:08] *** bisectable6 left
[02:08] *** tellable6 left
[02:08] *** bloatable6 left
[02:08] *** sourceable6 left
[02:08] *** coverable6 joined
[02:08] *** evalable6 joined
[02:08] *** greppable6 joined
[02:08] *** bloatable6 joined
[02:09] *** tellable6 joined
[02:10] *** squashable6 joined
[03:05] *** frost left
[03:08] *** quotable6 joined
[03:08] *** releasable6 joined
[03:08] *** committable6 joined
[03:09] *** notable6 joined
[03:10] *** statisfiable6 joined
[03:10] *** nativecallable6 joined
[03:10] *** bisectable6 joined
[03:15] *** frost joined
[04:06] *** frost left
[04:09] *** linkable6 joined
[04:10] *** unicodable6 joined
[04:10] *** sourceable6 joined
[04:10] *** benchable6 joined
[04:10] *** reportable6 joined
[05:10] *** sourceable6 left
[05:10] *** unicodable6 left
[05:10] *** linkable6 left
[05:10] *** bloatable6 left
[05:10] *** benchable6 left
[05:10] *** reportable6 left
[05:10] *** bisectable6 left
[05:10] *** evalable6 left
[05:10] *** coverable6 left
[05:10] *** releasable6 left
[05:10] *** notable6 left
[05:10] *** squashable6 left
[05:10] *** quotable6 left
[05:10] *** greppable6 left
[05:10] *** statisfiable6 left
[05:10] *** tellable6 left
[05:10] *** committable6 left
[05:10] *** nativecallable6 left
[05:11] *** shareable6 joined
[05:11] *** sourceable6 joined
[05:11] *** bloatable6 joined
[05:11] *** nativecallable6 joined
[05:12] *** unicodable6 joined
[05:12] *** linkable6 joined
[05:12] *** tellable6 joined
[05:12] *** reportable6 joined
[05:13] *** coverable6 joined
[06:07] *** reportable6 left
[06:11] *** quotable6 joined
[06:11] *** bisectable6 joined
[06:12] *** releasable6 joined
[06:12] *** evalable6 joined
[06:12] *** benchable6 joined
[06:54] *** linkable6 left
[07:11] *** notable6 joined
[07:11] *** committable6 joined
[07:12] *** squashable6 joined
[07:12] *** greppable6 joined
[08:09] *** reportable6 joined
[08:20] *** frost joined
[08:57] *** linkable6 joined
[09:30] *** frost left
[09:31] <Nicholas> good *able6, #moarvm
[09:36] <lizmat> good moarning, Nicholas 
[09:40] <jnthnwrthngtn> moarning o/
[09:40] <Nicholas> \o
[10:11] *** statisfiable6 joined
[11:06] *** frost joined
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:49] <[Coke]> ~~
[12:50] <Nicholas> +++ATH0
[12:56] *** Altai-man joined
[12:57] <[Coke]> ATA
[12:57] <[Coke]> I think we just hung up on each other.
[12:58] *** Altai-man left
[12:58] *** Altai-man joined
[12:58] <[Coke]> I come from the days of 300 baud but never spoke hayes.
[12:59] <Nicholas> I believe I am later than that. But also I only know that one from later folklaw
[13:00] <[Coke]> I had a 300 baud for my C64, if I remember the timeline accurately.
[13:01] <[Coke]> OH. I am very likely misremembering here, looking at dates. WTH, Coleda...
[13:14] <[Coke]> ah, no it's right, it's just that 300 baud was old tech even when I touched it. whew.
[13:27] <[Coke]> MasterDuke: I edited your comment on github (rude, sorry!) to reflect my github userid as opposed to my irc nick.
[14:12] *** frost left
[14:57] <vrurg> [Coke]: You still remember the commands...
[14:58] *** Altai-man left
[15:01] *** Altai-man joined
[15:06] <japhb> vrurg: Pretty much seared into the brain of anyone who had to debug a modem connection.
[15:09] <vrurg> japhb: I have only fragments left. Though back in 90s it was possible to come up with init strings for 3-4 different modem brands. FIDONet times... :)
[15:18] <japhb> Got me beat then.  :-)
[15:20] <[Coke]> vrurg, no, I had to google it. :)
[15:22] <[Coke]> one of my nerdiest moments in junior high was buying a numeric keypad input device for the C64 so I could enter in the assembly code printed COMPUTE! magazine to get "apps". (each line would have a checksum, and the programs would be pages long.)
[15:26] *** Altai-man left
[15:37] <vrurg> [Coke]: I think this is the kind of thing basically everybody from that times got through – I mean, those printed codes. :) Ok, it's time to close the old farts club. Or I start recalling DEC assembler and why is it better than Z80/x86. :D
[15:39] *** [Coke] left
[15:42] *** [Coke] joined
[15:51] <nine> Repossession is just the worst!
[15:52] <nine> I understand what it does. I understand completely why it has to do it and I also don't see another way of achieving the same than the one we have. It also costs a lot. Right now it's the major reason why we can't have concurrent module loading.
[15:56] <vrurg> I wish somebody had time to have an article or a post about repossession. Don't think I ever understood it well.
[16:12] *** [Coke] left
[16:15] *** [Coke] joined
[16:37] *** cognominal joined
[17:22] <MasterDuke> [Coke]: cool, np
[18:07] *** reportable6 left
[18:33] *** linkable6 left
[18:34] *** linkable6 joined
[19:09] *** reportable6 joined
[19:24] *** RakuIRCLogger left
[19:25] *** Geth left
[19:25] *** TempIRCLogger left
[19:25] *** lizmat left
[19:27] *** lizmat joined
[20:24] <MasterDuke> [Coke]: have you tried yet with a newer rakudo? if you're still seeing the problem i can merge my two open PRs and see if those help
[20:29] <[Coke]> will try to do that this afternoon - wasn't it a newer moar?
[20:30] <MasterDuke> well yeah, but i thought you said you were using rakudo 2022.02
[20:31] <MasterDuke> and rakudo at current HEAD will pick up the newer moarvm
[20:52] *** lizmat left
[20:52] *** Geth joined
[20:57] *** TempIRCLogger joined
[21:09] <[Coke]> no, using rakudo latest but there wasn't a moar bump at the time, so it was using moar 2022.02
[21:10] <MasterDuke> ah
[21:11] <[Coke]> https://gist.github.com/coke/79dc5c6601b8e791676fe2589e4aba6b
[21:13] <[Coke]> Actually, sitting here now I can try with latest commits.
[21:16] *** discord-raku-bot left
[21:16] *** discord-raku-bot joined
[21:21] <MasterDuke> i've just started my shift keeping black mesa secure, but assuming no scientific experiment goes awry and an alien invasions happens, i can have a look if you get any new results
[21:21] <[Coke]> (doing a build with rakudo-latest and mimalloc)
[21:22] <[Coke]> heh
[21:22] <[Coke]> I am reminded that I basically stalled out on Demon Souls and need to put in some hours collecting them.
[21:25] <[Coke]> This is MoarVM version 2022.02-5-gec9fcaae2 built with JIT support
[21:25] <[Coke]> is that recent enough?
[21:27] <MasterDuke> yep
[21:29] <[Coke]> nope
[21:30] <[Coke]> rakudo of v2022.02-78-gd53b3ee83c, using mimalloc; same failure mode I was seeing earlier
[21:30] <[Coke]> anything else before I rebuild the mimalloc verison?
[21:30] <[Coke]> er, the *non*...
[21:32] <MasterDuke> any idea what the code is doing when the invalid free happens?
[21:54] <[Coke]> nope
[21:54] <[Coke]> I didn't golf it
[21:54] <[Coke]> (because every time I tried, stuff worked)
[21:56] <MasterDuke> is there any nativecall?
[21:56] <[Coke]> will try again.
[21:57] <[Coke]> not directly; using File::Find; JSON::Tiny; HTTP::UserAgent, don't think there's any there.
[21:57] <Geth> ¦ MoarVM: a78776ea4c | (Daniel Green)++ | src/io/fileops.c
[21:57] <Geth> ¦ MoarVM: The result of a getenv() call should not be freed
[21:57] <Geth> ¦ MoarVM: 
[21:57] <Geth> ¦ MoarVM: "The string pointed to by the return value of getenv() may be statically
[21:57] <Geth> ¦ MoarVM: allocated, and can be modified by a subsequent call to getenv(), putenv(3),
[21:57] <Geth> ¦ MoarVM: setenv(3), or unsetenv(3)." - man 3 getenv
[21:57] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a78776ea4c
[21:57] <Geth> ¦ MoarVM: 2b96d18281 | MasterDuke17++ (committed using GitHub Web editor) | src/io/fileops.c
[21:57] <Geth> ¦ MoarVM: Merge pull request #1674 from MasterDuke17/do_not_free_results_of_getenv
[21:57] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2b96d18281
[21:58] <MasterDuke> then mind pulling moarvm and trying with ^^^?
[22:03] <[Coke]> ok. just building/installing moarvm head and will try...
[22:04] <[Coke]> no change
[22:04] <[Coke]> is there an env var to force more GC pressure?
[22:05] <MasterDuke> not an env var, but you can edit https://github.com/MoarVM/MoarVM/blob/master/src/gc/debug.h#L7 and rebuild
[22:12] <MasterDuke> i did hope that pr might have fixed it. if you're using File::Find i figured maybe a `.e` was happening somewhere and causing problems
[22:14] <[Coke]> down to 181 lines..
[22:30] <[Coke]> heh. add debug output - nothing is printed. remove the code that follows the non-printed debug output: it's now printed.
[22:33] <MasterDuke> computers are fun
[22:35] <[Coke]> 139 lines and it seems to need a run call, a rakumod load (mine) that makes an http agent call.
[22:45] <MasterDuke> afk for a bit, might not be back tonight
