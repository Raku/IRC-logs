[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[00:54] *** frost joined
[01:50] *** frost left
[02:36] *** MasterDuke left
[03:40] *** quotable6 left
[03:40] *** evalable6 left
[03:40] *** bisectable6 left
[03:40] *** reportable6 left
[03:40] *** linkable6 left
[03:40] *** benchable6 left
[03:40] *** releasable6 left
[03:40] *** sourceable6 left
[03:40] *** shareable6 left
[03:40] *** bloatable6 left
[03:40] *** unicodable6 left
[03:40] *** greppable6 left
[03:40] *** coverable6 left
[03:40] *** statisfiable6 left
[03:40] *** tellable6 left
[03:40] *** squashable6 left
[03:40] *** committable6 left
[03:40] *** nativecallable6 left
[03:40] *** notable6 left
[03:41] *** bisectable6 joined
[03:42] *** reportable6 joined
[03:42] *** bloatable6 joined
[03:43] *** committable6 joined
[03:43] *** releasable6 joined
[03:43] *** statisfiable6 joined
[04:41] *** sourceable6 joined
[04:42] *** unicodable6 joined
[04:42] *** squashable6 joined
[04:42] *** coverable6 joined
[04:43] *** benchable6 joined
[04:43] *** notable6 joined
[04:43] *** nativecallable6 joined
[04:43] *** quotable6 joined
[05:43] *** sourceable6 left
[05:43] *** benchable6 left
[05:43] *** squashable6 left
[05:43] *** coverable6 left
[05:43] *** committable6 left
[05:43] *** nativecallable6 left
[05:43] *** quotable6 left
[05:43] *** releasable6 left
[05:43] *** bloatable6 left
[05:43] *** bisectable6 left
[05:43] *** unicodable6 left
[05:43] *** statisfiable6 left
[05:43] *** reportable6 left
[05:43] *** notable6 left
[05:44] *** evalable6 joined
[05:44] *** unicodable6 joined
[05:44] *** nativecallable6 joined
[05:44] *** reportable6 joined
[05:45] *** squashable6 joined
[05:46] *** releasable6 joined
[05:46] *** committable6 joined
[05:46] *** bloatable6 joined
[05:47] *** coverable6 joined
[06:09] *** reportable6 left
[06:45] *** quotable6 joined
[06:45] *** notable6 joined
[06:52] <Nicholas> good *able6, #moarvm 

[07:11] *** reportable6 joined
[07:44] *** statisfiable6 joined
[07:47] *** bisectable6 joined
[08:47] *** TheAthlete joined
[09:12] <lizmat> good *, Nicholas 

[09:12] <lizmat> m: dd :(UInt:D $a)   # I guess that still needs to be fixed ?

[09:12] <camelia> rakudo-moar de06617cc: OUTPUT: «:(Int:D $a where { ... })␤»

[09:41] *** tellable6 joined
[09:42] *** linkable6 joined
[09:44] *** sourceable6 joined
[09:46] *** benchable6 joined
[10:26] *** TheAthlete left
[10:42] *** shareable6 joined
[10:42] *** greppable6 joined
[10:49] <jnthnwrthngtn> moarning o/

[10:49] <Nicholas> \p

[10:49] <Nicholas> oops, off by one

[10:49] <Nicholas> \o

[10:50] * lizmat is unclear on the state of nine's unsigned int work

[10:50] <lizmat> is it correct to say that it all got merged ?

[10:52] <Nicholas> I don't know. I thought yes. But I don't know. And I don't know what other "fallout" there is, and what needs doing

[10:53] <lizmat> ok, but the bulk of the work got merged... I know there's some fallout, which is why there won't be a 2022.01 release

[11:11] <lizmat> m: sub a(uint $a) { dd $a }; a -42   # that feels unexpected to me

[11:11] <camelia> rakudo-moar de06617cc: OUTPUT: «-42␤»

[11:11] <lizmat> a. that it dispatches without bind failure

[11:11] <lizmat> b. even if it did dispatch, that inside the sub the unsigned int has a negative value 

[11:37] *** Altai-man joined
[11:57] <nine> It's all merged, yes

[11:58] <nine> MoarVM is still somewhat lenient. I figured lets take it one explosion at a time

[11:59] <nine> In my defence its not just uint regressions that defied having a 2022.01 release

[12:08] *** reportable6 left
[12:09] *** reportable6 joined
[12:10] *** frost joined
[12:20] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/01/24/2022-04-unsigned-merge/

[12:36] <lizmat> ok, this gets a bit weird:

[12:37] <lizmat> m: sub a(uint $a) { dd $a.Str }; a -42   # feels correct

[12:37] <camelia> rakudo-moar de06617cc: OUTPUT: «"18446744073709551574"␤»

[12:37] <lizmat> m: sub a(uint $a) { say $a.gist }; a -42

[12:37] <camelia> rakudo-moar de06617cc: OUTPUT: «18446744073709551574␤»

[12:37] <lizmat> also feels correct

[12:38] <lizmat> m: sub a(uint $a) { say $a.raku }; a -42    # ok!

[12:38] <camelia> rakudo-moar de06617cc: OUTPUT: «18446744073709551574␤»

[12:38] <lizmat> m: sub a(uint $a) { say $a }; a -42    # huh ?

[12:38] <camelia> rakudo-moar de06617cc: OUTPUT: «-42␤»

[12:39] <lizmat> fwiw, I think the binding is correct: natives specifically don't need to check for overflow or underflow, right ?

[12:40] <lizmat> m: sub a(uint $a) { $a.say }; a -42   # the problematic case I think

[12:40] <camelia> rakudo-moar de06617cc: OUTPUT: «-42␤»

[12:45] <nine> Could be that for so.e methods we have int candidates but no uint candidates and we coerce the uint to int to make it fit

[12:46] <nine> And yes natives are a performance tool foremost, so overflow/underflow is explicitely allowed

[12:50] *** frost left
[13:03] *** frost joined
[13:03] *** TheAthlete joined
[13:52] *** discord-raku-bot left
[13:53] *** discord-raku-bot joined
[14:09] *** frost left
[14:12] *** frost joined
[14:27] <[Coke]> nine++ again, btw.

[15:32] *** frost left
[16:37] *** sena_kun_ joined
[16:37] *** Altai-man left
[17:46] <moon-child> m: m: sub a(uint $a) { say +$a }; a -42

[17:46] <camelia> rakudo-moar 2ee3a46e3: OUTPUT: «-42␤»

[17:56] *** Altai-man joined
[17:58] *** sena_kun_ left
[18:06] *** reportable6 left
[18:06] *** reportable6 joined
[18:26] *** Altai-man left
[19:17] <[Coke]> in an ideal world, would that accept the arg, get the correspond int you'd expect from a shift in C and return that? Or would it error out?

[19:25] <moon-child> I would expect an error, as -42 can not be converted to uint.  However I would expect wrapping from, say, my uint $x = 14; $x = -$x

[19:33] <lizmat> mL sub a(uint $a) { say $a.Str }; a -42

[19:33] <lizmat> m: sub a(uint $a) { say $a.Str }; a -42

[19:33] <camelia> rakudo-moar 2ee3a46e3: OUTPUT: «18446744073709551574␤»

[19:33] <lizmat> the problem is in uint.say really

[19:33] <lizmat> going afk to record a presentation

[19:33] <lizmat> well, offline actually  :-)

[19:34] *** lizmat left
[20:31] *** lizmat joined
[20:38] <lizmat> mission accomplished and uploaded :-)

[20:46] *** TheAthlete left
[22:02] *** MasterDuke joined
[23:24] *** sena_kun left
[23:50] *** sena_kun joined
