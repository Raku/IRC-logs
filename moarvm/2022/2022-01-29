[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[01:39] *** evalable6 left
[01:39] *** linkable6 left
[01:41] *** linkable6 joined
[02:39] *** evalable6 joined
[03:04] *** Techcable joined
[03:17] *** frost joined
[04:33] *** evalable6 left
[04:33] *** linkable6 left
[04:33] *** reportable6 left
[04:33] *** squashable6 joined
[04:33] *** shareable6 joined
[04:33] *** reportable6 joined
[04:33] *** greppable6 joined
[04:33] *** bisectable6 joined
[04:34] *** releasable6 joined
[04:35] *** benchable6 joined
[04:35] *** tellable6 joined
[04:35] *** committable6 joined
[04:36] *** notable6 joined
[04:36] *** sourceable6 joined
[05:12] *** frost left
[05:33] *** linkable6 joined
[05:34] *** quotable6 joined
[05:34] *** nativecallable6 joined
[06:06] *** reportable6 left
[06:08] *** frost joined
[06:18] *** kjp left
[06:33] *** bloatable6 joined
[06:34] *** coverable6 joined
[06:35] *** statisfiable6 joined
[06:54] *** frost left
[07:24] *** frost joined
[07:34] *** evalable6 joined
[07:35] *** unicodable6 joined
[08:08] *** reportable6 joined
[08:11] *** frost left
[09:57] <Nicholas> good *, #moarvm 
[10:33] <MasterDuke> Nicholas: were you looking to make coerce_si faster, or just checking for correctness. https://github.com/j-jorge/atoi-benchmark might have some faster implementations, but i think some of them are even more simplified, and i don't know how much of the speedup we'd lose adding back in the dropped functionality
[10:35] <Nicholas> have two working commits to get rid of ctype.h
[10:35] <MasterDuke> also, i wonder if that `if (str->body.storage_type == MVM_STRING_GRAPHEME_ASCII)` could be `|| str->body.storage_type == MVM_STRING_GRAPHEME8`
[10:35] <MasterDuke> nice
[10:35] <Nicholas> but realised that there seemed to be bugs in the end of string handling
[10:35] <Nicholas> I now have written some tests
[10:36] <Nicholas> yet to try them on the JVM NQP 
[10:37] <Nicholas> java.lang.NumberFormatException: For input string: "    "
[10:37] <Nicholas> which was probably a tab
[10:39] <Nicholas> OK, "interesting"
[10:39] <Nicholas> So previously with the strtoll implementation we *weren't* exposed to locale issues because:
[10:39] <Nicholas> Error encoding ASCII string: could not encode codepoint 128
[10:40] <MasterDuke> "The characters in the string must all be decimal digits, except that the first character may be an ASCII minus sign '-' (\u002D') to indicate a negative value or an ASCII plus sign '+' ('\u002B') to indicate a positive value. " so the jvm implementation never matched moarvm
[10:41] <Nicholas> thanks for that definition - that's useful to know.
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[13:47] <Geth> ¦ MoarVM: nwc10++ created pull request #1657: Inline ascii ctype
[13:47] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1657
[14:56] *** timo joined
[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[19:38] *** Techcable left
[20:53] *** MasterDuke left
[21:06] *** squashable6 left
[21:07] *** squashable6 joined
[21:16] *** MasterDuke joined
[21:31] *** kjp joined
[22:32] *** Techcable joined
