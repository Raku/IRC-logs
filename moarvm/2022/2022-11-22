[00:07] *** reportable6 left
[00:10] *** reportable6 joined
[00:26] *** epony left
[00:53] *** epony joined
[01:51] *** MasterDuke joined
[01:54] <Geth> ¦ MoarVM: 2a8c494e19 | (Daniel Green)++ | 54 files

[01:54] <Geth> ¦ MoarVM: Remove the fixed size allocator (FSA)

[01:54] <Geth> ¦ MoarVM: 

[01:54] <Geth> ¦ MoarVM: With the change to make using the mimalloc allocator the default, it

[01:54] <Geth> ¦ MoarVM: was discovered that it does such a good job that the FSA doesn't

[01:54] <Geth> ¦ MoarVM: provide any extra benefit. Therefore we're removing it to simplify

[01:54] <Geth> ¦ MoarVM: things in general. This will be a performance regression for the few

[01:54] <Geth> ¦ MoarVM: systems that can't use mimalloc, but those are very uncommon anyway.

[01:54] <Geth> ¦ MoarVM: <…commit message has 9 more lines…>

[01:54] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2a8c494e19

[01:55] <Geth> ¦ MoarVM: 1e5b83d5c6 | MasterDuke17++ (committed using GitHub Web editor) | 54 files

[01:55] <Geth> ¦ MoarVM: Merge pull request #1645 from MasterDuke17/remove_fsa

[01:55] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/1e5b83d5c6

[01:57] <MasterDuke> hm. with the reason for that merge (mimalloc is as good at the fsa at small allocations), i wonder if it makes sense to back out some of our uses of alloca()?

[02:13] *** lizmat_ joined
[02:15] *** Geth left
[02:16] *** lizmat left
[02:43] *** sortiz joined
[03:36] *** Guest89 joined
[03:51] <Guest89> https://github.com/edumentab/rakudo-and-nqp-internals-course --> This course still ok after all this time?

[04:08] *** Guest89 left
[04:45] *** epony left
[05:20] *** coleman left
[05:21] *** coleman joined
[05:25] *** coleman left
[05:33] *** coleman joined
[05:34] *** epony joined
[06:07] *** reportable6 left
[06:09] *** reportable6 joined
[06:16] *** sortiz left
[06:52] *** Kaiepi joined
[07:55] *** coleman left
[07:55] *** coleman joined
[08:00] *** coleman left
[08:02] <nine> MasterDuke: don't think so. alloca() should still be much faster as it doesn't have to deal with thread safety and basically just bumps the stack pointer. And it has the nice benefit of automatically cleaning up, regardless of the way we leave the stack frame.

[08:03] <nine> Guest89: most of it is. The rest would still give you a historical perspective that may make it easier to understand the modern solutions

[08:09] *** coleman joined
[08:14] *** coleman left
[08:22] <timo> modern solutions require ancient wisdom

[08:34] *** coleman joined
[08:39] *** coleman left
[08:39] *** coleman joined
[08:44] *** coleman left
[08:50] *** lizmat_ left
[08:51] *** lizmat joined
[08:51] *** Geth joined
[09:00] *** coleman joined
[09:21] *** sena_kun joined
[09:58] *** harrow left
[10:11] *** harrow joined
[10:21] *** coleman left
[10:21] *** coleman joined
[10:25] *** coleman left
[10:34] *** coleman joined
[10:35] *** psydroid left
[10:35] *** AlexDaniel left
[10:38] *** AlexDaniel joined
[10:39] *** coleman left
[10:58] *** psydroid joined
[11:04] *** coleman joined
[11:08] *** coleman left
[11:16] *** coleman joined
[11:20] *** coleman left
[11:21] *** coleman joined
[12:07] *** reportable6 left
[12:08] *** reportable6 joined
[13:51] *** discord-raku-bot left
[13:51] *** discord-raku-bot joined
[15:44] *** rypervenche left
[15:50] *** epony left
[16:12] *** rypervenche joined
[18:08] *** reportable6 left
[18:09] *** reportable6 joined
[18:15] *** sena_kun left
[18:18] *** sena_kun joined
[18:37] *** Guest68 joined
[19:25] *** epony joined
[19:48] *** sena_kun left
[19:50] *** sena_kun joined
[20:50] *** linkable6 left
[20:50] *** evalable6 left
[20:51] *** linkable6 joined
[20:52] *** evalable6 joined
[21:06] *** Guest68 left
[21:12] *** Guest68 joined
[21:50] *** Guest68 left
[21:50] *** Guest68 joined
[22:09] <Geth> ¦ MoarVM: usev6++ created pull request #1727: Reset errno to error of latest call to mkdir

[22:09] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1727

[22:48] *** sena_kun left
[23:04] *** psydroid left
[23:15] *** psydroid joined
[23:32] *** Guest68 left
