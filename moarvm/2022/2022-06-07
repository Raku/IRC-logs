[00:08] *** reportable6 left
[00:08] *** reportable6 joined
[01:08] *** shareable6 left
[01:08] *** unicodable6 left
[01:08] *** committable6 left
[01:08] *** tellable6 left
[01:08] *** quotable6 left
[01:08] *** nativecallable6 left
[01:08] *** evalable6 left
[01:08] *** linkable6 left
[01:08] *** statisfiable6 left
[01:08] *** bisectable6 left
[01:08] *** reportable6 left
[01:08] *** notable6 left
[01:08] *** releasable6 left
[01:08] *** sourceable6 left
[01:08] *** benchable6 left
[01:08] *** bloatable6 left
[01:08] *** coverable6 left
[01:08] *** greppable6 left
[01:09] *** greppable6 joined
[01:09] *** reportable6 joined
[01:09] *** nativecallable6 joined
[01:09] *** statisfiable6 joined
[01:10] *** notable6 joined
[01:10] *** bloatable6 joined
[01:10] *** releasable6 joined
[01:10] *** evalable6 joined
[01:10] *** coverable6 joined
[01:10] *** unicodable6 joined
[01:10] *** sourceable6 joined
[01:11] *** shareable6 joined
[01:11] *** benchable6 joined
[01:11] *** tellable6 joined
[01:11] *** quotable6 joined
[01:11] *** bisectable6 joined
[01:11] *** committable6 joined
[01:11] *** linkable6 joined
[02:11] *** benchable6 left
[02:11] *** linkable6 left
[02:11] *** sourceable6 left
[02:11] *** quotable6 left
[02:11] *** committable6 left
[02:11] *** tellable6 left
[02:11] *** releasable6 left
[02:11] *** coverable6 left
[02:11] *** greppable6 left
[02:11] *** unicodable6 left
[02:11] *** bisectable6 left
[02:11] *** statisfiable6 left
[02:11] *** notable6 left
[02:11] *** evalable6 left
[02:11] *** bloatable6 left
[02:11] *** shareable6 left
[02:11] *** reportable6 left
[02:11] *** nativecallable6 left
[02:12] *** shareable6 joined
[02:12] *** committable6 joined
[02:12] *** sourceable6 joined
[02:12] *** releasable6 joined
[02:12] *** bisectable6 joined
[02:12] *** coverable6 joined
[02:13] *** benchable6 joined
[02:13] *** tellable6 joined
[02:13] *** unicodable6 joined
[02:13] *** notable6 joined
[02:13] *** evalable6 joined
[02:14] *** statisfiable6 joined
[02:14] *** nativecallable6 joined
[02:14] *** greppable6 joined
[02:14] *** reportable6 joined
[02:14] *** linkable6 joined
[02:14] *** bloatable6 joined
[02:14] *** quotable6 joined
[03:53] *** linkable6 left
[03:53] *** evalable6 left
[03:54] *** evalable6 joined
[03:55] *** linkable6 joined
[04:13] *** nebuchad` joined
[04:14] *** nebuchadnezzar left
[05:26] *** nebuchad` is now known as nebuchadnezzar
[06:07] *** reportable6 left
[06:07] *** reportable6 joined
[08:49] *** Techcable left
[08:51] *** Techcable joined
[08:52] *** Techcable joined
[09:06] *** Kaiepi left
[09:26] *** Kaiepi joined
[09:52] *** discord-raku-bot left
[09:52] *** discord-raku-bot joined
[10:22] *** discord-raku-bot left
[10:22] *** discord-raku-bot joined
[10:24] *** frost joined
[10:29] *** discord-raku-bot left
[10:29] *** discord-raku-bot joined
[11:10] *** frost left
[11:33] *** frost joined
[12:07] *** reportable6 left
[12:08] *** reportable6 joined
[12:41] <jdv> timo: i couldn't find it
[12:41] <jdv> also, i think i saw similar mem growth in a $work project that had no subproc stuff - but it did use async stuff 
[13:53] *** Kaiepi left
[14:07] *** frost left
[14:14] *** lizmat joined
[14:29] *** lizmat_ joined
[14:32] *** lizmat left
[14:33] *** lizmat_ is now known as lizmat
[14:38] *** lizmat left
[14:38] *** lizmat joined
[15:51] *** Kaiepi joined
[16:51] *** notable6 left
[16:51] *** bisectable6 left
[16:51] *** tellable6 left
[16:51] *** bloatable6 left
[16:51] *** benchable6 left
[16:51] *** quotable6 left
[16:51] *** sourceable6 left
[16:51] *** linkable6 left
[16:51] *** coverable6 left
[16:51] *** shareable6 left
[16:51] *** nativecallable6 left
[16:51] *** unicodable6 left
[16:51] *** committable6 left
[16:51] *** statisfiable6 left
[16:51] *** reportable6 left
[16:51] *** greppable6 left
[16:51] *** evalable6 left
[16:51] *** releasable6 left
[16:51] *** shareable6 joined
[16:51] *** greppable6 joined
[16:51] *** benchable6 joined
[16:52] *** sourceable6 joined
[16:52] *** reportable6 joined
[16:52] *** bisectable6 joined
[16:52] *** coverable6 joined
[16:52] *** unicodable6 joined
[16:52] *** nativecallable6 joined
[16:52] *** statisfiable6 joined
[16:52] *** releasable6 joined
[16:53] *** evalable6 joined
[16:53] *** bloatable6 joined
[16:53] *** linkable6 joined
[16:53] *** committable6 joined
[16:53] *** notable6 joined
[16:53] *** quotable6 joined
[16:54] *** tellable6 joined
[17:54] *** evalable6 left
[17:54] *** linkable6 left
[17:56] *** linkable6 joined
[17:57] *** evalable6 joined
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[19:39] *** vrurg left
[19:39] *** vrurg joined
[20:37] *** Geth left
[21:00] *** lizmat left
[21:01] <MasterDuke> huh. perf shows MVM_get_lexical_by_name at the top with 11% for `raku -e 'loop { put 1 }' >/dev/null`
[21:03] <MasterDuke> next are MVM_frame_find_dynamic_using_frame_walker, MVM_spesh_frame_walker_next, MVM_spesh_frame_walker_get_lex
[21:15] <MasterDuke> huh. running that for 1_000_000 iterations results in 10_000_000 cases of the lexical_names hash *not* being built (for $*PROMISE and $*OUT) and 3_000_000 cases of it being built (for the same two vars)
[21:21] <MasterDuke> and when the lexical_names hash is not built, 20_011_570 times the name isn't found in sf->body.lexical_names_list
[21:34] <MasterDuke> hm, and in 3_015_965 of the times MVM_string_equal is called, b doesn't have a cached_hash_code
[22:01] *** lizmat joined
[22:05] *** lizmat left
