[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[00:19] *** linkable6 joined
[01:08] <moon-child> i think uncontended atomics are not that bad
[01:10] <moon-child> lock will probably be implemented as an atomic with fallback to kernel.  Depending how fancy it is; I think pthreads does that, java will spin for a bit but try to do other busy work while it spins
[02:39] *** frost joined
[03:01] *** frost left
[04:01] *** linkable6 left
[04:01] *** reportable6 left
[04:01] *** sourceable6 left
[04:01] *** nativecallable6 left
[04:01] *** bisectable6 left
[04:01] *** greppable6 left
[04:01] *** releasable6 left
[04:01] *** tellable6 left
[04:01] *** evalable6 left
[04:01] *** squashable6 left
[04:01] *** unicodable6 left
[04:01] *** statisfiable6 left
[04:01] *** benchable6 left
[04:01] *** committable6 left
[04:01] *** bloatable6 left
[04:01] *** shareable6 left
[04:02] *** tellable6 joined
[04:02] *** statisfiable6 joined
[04:03] *** benchable6 joined
[04:03] *** nativecallable6 joined
[04:04] *** greppable6 joined
[05:02] *** linkable6 joined
[05:04] *** committable6 joined
[05:04] *** releasable6 joined
[05:04] *** unicodable6 joined
[05:04] *** squashable6 joined
[05:05] *** shareable6 joined
[05:26] *** frost joined
[05:42] *** frost left
[06:02] *** sourceable6 joined
[06:02] *** quotable6 joined
[06:04] *** bloatable6 joined
[06:41] <Nicholas> *, good *
[07:03] *** coverable6 joined
[07:03] *** evalable6 joined
[07:04] *** bisectable6 joined
[07:05] *** reportable6 joined
[07:25] *** camelia left
[07:25] *** mst left
[07:25] *** vrurg left
[07:25] *** japhb left
[07:25] *** kjp left
[07:25] *** timo left
[07:25] *** ilogger2 left
[07:26] *** jnthnwrthngtn left
[07:26] *** rypervenche left
[07:26] *** Util left
[07:26] *** samebchase left
[07:26] *** Merfont left
[07:26] *** ugexe left
[07:26] *** RakuIRCLogger left
[07:26] *** TempIRCLogger__ left
[07:26] *** dogbert17 left
[07:26] *** patrickb left
[07:26] *** Nicholas left
[07:26] *** SmokeMachine left
[07:26] *** samcv left
[07:26] *** bartolin_ left
[07:26] *** gfldex left
[07:26] *** nine left
[07:26] *** Techcable left
[07:26] *** leont left
[07:26] *** rba left
[07:26] *** codesections left
[07:26] *** AlexDaniel left
[07:26] *** colemanx left
[07:26] *** JRaspass left
[07:26] *** jdv left
[07:26] *** sena_kun left
[07:26] *** Geth left
[07:26] *** nebuchadnezzar left
[07:26] *** leedo left
[07:26] *** [Coke] left
[07:26] *** lizmat left
[07:26] *** reportable6 left
[07:26] *** bisectable6 left
[07:26] *** evalable6 left
[07:26] *** coverable6 left
[07:26] *** bloatable6 left
[07:26] *** sourceable6 left
[07:26] *** quotable6 left
[07:26] *** shareable6 left
[07:26] *** squashable6 left
[07:26] *** unicodable6 left
[07:26] *** releasable6 left
[07:26] *** committable6 left
[07:26] *** linkable6 left
[07:26] *** greppable6 left
[07:26] *** nativecallable6 left
[07:26] *** benchable6 left
[07:26] *** statisfiable6 left
[07:26] *** tellable6 left
[07:26] *** psydroid left
[07:26] *** Voldenet left
[07:26] *** harrow left
[07:26] *** moon-child left
[07:26] *** MasterDuke left
[07:26] *** discord-raku-bot left
[07:28] *** mst joined
[07:28] *** vrurg joined
[07:28] *** japhb joined
[07:28] *** kjp joined
[07:28] *** timo joined
[07:28] *** ilogger2 joined
[07:28] *** camelia joined
[08:28] *** [Coke] left
[08:31] *** [Coke] joined
[08:36] <Geth> ¦ MoarVM/master: 6 commits pushed by (Daniel Green)++, MasterDuke17++
[08:36] <Geth> ¦ MoarVM/master: 94847eda98 | Use right sized variables for loop indices
[08:36] <Geth> ¦ MoarVM/master: 80e262a6e1 | Remove always true/false comparisons
[08:36] <Geth> ¦ MoarVM/master: 6d1bd83c1f | Use correct sizes in format strings
[08:36] <Geth> ¦ MoarVM/master: 55c83c2a52 | Put comments in empty if/else blocks
[08:36] <Geth> ¦ MoarVM/master: 4206010246 | Fix potential overflow in multiplications
[08:36] <Geth> ¦ MoarVM/master: 6ecb893838 | Merge pull request #1661 from MasterDuke17/fix_things_found_by_lgtm.com
[08:36] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/c00abdf38566...6ecb893838a0
[09:03] *** notable6 joined
[10:11] *** Techcable left
[10:12] *** Techcable joined
[11:36] <Geth> ¦ MoarVM: MasterDuke17++ created pull request #1663: Fix problems in GCC/GDB plugins found by lgtm.com
[11:36] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1663
[11:59] <MasterDuke> two separate cases of `Unhandled exception in code scheduled on thread 4 push_o requires a concrete object (got a ThreadPoolScheduler::Queue type object instead)` in that PR (which obviously aren't caused by it, since it just touches code not used by IC)
[11:59] <MasterDuke> *CI
[12:06] <MasterDuke> i wonder what it is about the CI that it experiences so many problems? i don't get any of those locally
[12:06] <nine> I have seen those countless of times...on CI
[12:06] <nine> I think it's just timing
[12:07] <lizmat> maybe the AI running the CI wants to me sure it continues being used ?
[12:07] <lizmat> *be
[12:07] *** reportable6 left
[12:08] <lizmat> is this on Windows only?  or all OSes
[12:08] <lizmat> I've disabled Github Actions for e.g. the ValueList modules as it would break down on Win all the time with weird error messages
[12:09] *** reportable6 joined
[12:34] <MasterDuke> almost exclusively linux
[13:09] *** linkable6 left
[13:09] *** evalable6 left
[14:10] *** linkable6 joined
[16:09] *** evalable6 joined
[17:40] <dogbert17> there's a SEGV lurking in t/02-rakudo/repl.t
[17:43] <dogbert17> this is what I have: https://gist.github.com/dogbert17/34f979acee7d605b06f3e4038b8ee21f
[18:08] *** reportable6 left
[18:08] *** reportable6 joined
[21:09] *** squashable6 left
[22:12] *** squashable6 joined
[22:30] <Geth> ¦ MoarVM: MasterDuke17++ created pull request #1664: Fix more things found by lgtm.com
[22:30] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1664
[22:55] <Geth> ¦ MoarVM: vrurg++ created pull request #1665: Make it possible turn dispatcher debugger with compiler options
[22:55] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1665
[23:04] <vrurg> jnthnwrthngtn: BTW, I'm trying to wrap my brain about multi-dispatching. I have noticed that wrapped routines are detected by WRAPPERS method. But what if we add $!is-wrapped attribute and guard over it? In this case it would be possible to detected unwrapped routines.
