[00:06] *** reportable6 left
[00:09] *** reportable6 joined
[00:49] *** frost joined
[01:49] *** committable6 left
[01:49] *** linkable6 left
[01:49] *** bisectable6 left
[01:49] *** statisfiable6 left
[01:49] *** shareable6 left
[01:49] *** bloatable6 left
[01:49] *** reportable6 left
[01:49] *** notable6 left
[01:49] *** benchable6 left
[01:49] *** sourceable6 left
[01:49] *** nativecallable6 left
[01:49] *** quotable6 left
[01:49] *** releasable6 left
[01:49] *** unicodable6 left
[01:49] *** greppable6 left
[01:49] *** coverable6 left
[01:49] *** evalable6 left
[01:49] *** tellable6 left
[01:50] *** shareable6 joined
[01:50] *** coverable6 joined
[01:50] *** reportable6 joined
[01:50] *** sourceable6 joined
[01:50] *** nativecallable6 joined
[01:51] *** notable6 joined
[01:51] *** quotable6 joined
[01:51] *** bisectable6 joined
[01:51] *** tellable6 joined
[01:51] *** unicodable6 joined
[01:51] *** greppable6 joined
[01:51] *** benchable6 joined
[01:52] *** statisfiable6 joined
[01:52] *** releasable6 joined
[01:52] *** linkable6 joined
[01:52] *** bloatable6 joined
[01:52] *** committable6 joined
[01:53] *** evalable6 joined
[02:29] *** [Coke]_ is now known as [Coke]

[03:29] *** linkable6 left
[03:29] *** notable6 left
[03:29] *** evalable6 left
[03:30] *** evalable6 joined
[03:32] *** linkable6 joined
[03:32] *** notable6 joined
[03:43] *** frost left
[03:43] *** frost joined
[04:26] *** tbrowder left
[04:26] *** rba left
[04:26] *** tbrowder joined
[04:27] *** rba joined
[05:39] *** greppable6 left
[05:39] *** committable6 left
[05:39] *** bloatable6 left
[05:39] *** sourceable6 left
[05:39] *** nativecallable6 left
[05:39] *** evalable6 left
[05:39] *** unicodable6 left
[05:39] *** coverable6 left
[05:39] *** shareable6 left
[05:39] *** releasable6 left
[05:39] *** benchable6 left
[05:39] *** reportable6 left
[05:39] *** tellable6 left
[05:39] *** statisfiable6 left
[05:39] *** bisectable6 left
[05:39] *** quotable6 left
[05:39] *** notable6 left
[05:39] *** linkable6 left
[05:39] *** quotable6 joined
[05:39] *** coverable6 joined
[05:39] *** evalable6 joined
[05:40] *** statisfiable6 joined
[05:40] *** tellable6 joined
[05:40] *** unicodable6 joined
[05:40] *** sourceable6 joined
[05:41] *** committable6 joined
[05:41] *** nativecallable6 joined
[05:41] *** benchable6 joined
[05:41] *** notable6 joined
[05:41] *** reportable6 joined
[05:41] *** linkable6 joined
[05:41] *** shareable6 joined
[05:41] *** bisectable6 joined
[05:42] *** releasable6 joined
[05:42] *** bloatable6 joined
[05:42] *** greppable6 joined
[06:05] *** reportable6 left
[06:07] *** reportable6 joined
[07:16] <Nicholas> good *, *

[08:56] *** sena_kun left
[08:57] *** sena_kun joined
[09:57] *** bisectable6 left
[09:57] *** reportable6 left
[09:57] *** nativecallable6 left
[09:57] *** committable6 left
[09:57] *** quotable6 left
[09:57] *** statisfiable6 left
[09:57] *** bloatable6 left
[09:57] *** releasable6 left
[09:57] *** greppable6 left
[09:57] *** evalable6 left
[09:57] *** sourceable6 left
[09:57] *** linkable6 left
[09:57] *** unicodable6 left
[09:57] *** notable6 left
[09:57] *** tellable6 left
[09:57] *** shareable6 left
[09:57] *** benchable6 left
[09:57] *** coverable6 left
[09:57] *** tellable6 joined
[09:57] *** reportable6 joined
[09:58] *** releasable6 joined
[09:58] *** nativecallable6 joined
[09:58] *** linkable6 joined
[09:58] *** evalable6 joined
[09:59] *** quotable6 joined
[09:59] *** greppable6 joined
[09:59] *** bloatable6 joined
[09:59] *** statisfiable6 joined
[09:59] *** unicodable6 joined
[09:59] *** benchable6 joined
[10:00] *** committable6 joined
[10:00] *** coverable6 joined
[10:00] *** sourceable6 joined
[10:00] *** shareable6 joined
[10:00] *** bisectable6 joined
[10:00] *** notable6 joined
[10:06] *** Altai-man joined
[11:06] *** linkable6 left
[11:06] *** evalable6 left
[11:06] *** notable6 left
[11:06] *** linkable6 joined
[11:08] *** notable6 joined
[11:08] *** evalable6 joined
[11:18] <jnthn> nine: Wow, that's some progress :-)

[11:35] <timo> i wonder when the right time would be to start building something on top of rakuast that's not "make tests work"

[11:36] <nine> My guess at this point: just a couple of months after you joined building something that's "make tests work" ;)

[11:37] <lizmat> an intermediate project could be rewriting the "assuming" logic in RakuAST ?

[11:59] <timo> :D

[12:05] <jnthn> I think most ideally with assuming we'd have some role mixed in wrap-style that marks out the argument transformation, and use new-disp to do the argument insertion (because that's exactly what new-disp is good at :)) and only lazily produce a signature if it's ever introspected.

[12:06] <jnthn> That way, the calls to such functions would spesh into pulling the assumed arguments out of a constants table and then a normal boring call

[12:07] <lizmat> jnthn: are you saying this should be independent of RakuAST ?

[12:08] *** reportable6 left
[12:08] *** reportable6 joined
[12:09] <jnthn> lizmat: RakuAST would be a decent way to produce the transformed signature

[12:09] <lizmat> ah, ok, *phew*  :-)

[12:09] <jnthn> But at least on MoarVM it's a pity to not make use of new-disp to do the argument insertion

[12:11] <lizmat> so I guess we would keep the old code for the other backends?

[12:12] <jnthn> I think for other backends RakuAST could be used to straight up produce the wrapper

[12:12] <jnthn> (including signature)

[12:12] <jnthn> Hm, wrapper is a bad name for it. The delegator perhaps. :)

[12:13] <jnthn> Most of the work *is* producing the signature anyway

[12:13] <lizmat> that makes it sound like new-disp is a disadvantage / more work ?

[12:14] <jnthn> More work, but producing the signature lazily will be way faster for cases that never introspect, just call, and the calls will be somewhat faster if new-disp can just have it as an argument capture rewrite

[12:15] <jnthn> As with many things, one doesn't *have* to teach the VM about them via new-disp, but doing so can bring significant speedups :)

[12:32] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/07/04/2022-27-more-videos/

[12:35] <nine> lizmat: brilliant image choice :)

[12:35] <lizmat> thanks...   :-)

[12:36] <lizmat> taken about 25k from here

[12:36] <lizmat> *km

[12:36] <jnthn> lizmat++

[12:37] <nine> Did you have this use case in mind when taking it or did it occur to you later?

[12:37] <lizmat> I had it in mind

[12:38] <lizmat> other than cropping and a little colour correction, no other tampering was performed  :-)

[12:58] *** frost left
[14:48] *** evalable6 left
[14:48] *** linkable6 left
[14:49] *** evalable6 joined
[14:50] *** linkable6 joined
[15:10] *** lizmat left
[17:30] *** camelia left
[17:30] *** nine left
[17:34] *** nine joined
[17:36] *** camelia joined
[17:53] *** Altai-man left
[18:08] *** reportable6 left
[18:09] *** reportable6 joined
[18:32] *** lizmat joined
[19:02] *** sena_kun left
[19:04] *** sena_kun joined
[19:51] *** sena_kun left
[19:52] *** sena_kun joined
[21:12] <timo> i wonder how many (if any) signatures we have serialized in the core setting that would be saved if assuing created signatures lazily

[22:00] *** kjp joined
