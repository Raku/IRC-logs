[00:06] *** reportable6 left
[00:09] *** reportable6 joined
[01:09] *** committable6 left
[01:09] *** reportable6 left
[01:09] *** bloatable6 left
[01:09] *** statisfiable6 left
[01:09] *** nativecallable6 left
[01:09] *** notable6 left
[01:09] *** unicodable6 left
[01:09] *** bisectable6 left
[01:09] *** benchable6 left
[01:09] *** greppable6 left
[01:09] *** quotable6 left
[01:09] *** linkable6 left
[01:09] *** releasable6 left
[01:09] *** coverable6 left
[01:09] *** tellable6 left
[01:09] *** sourceable6 left
[01:09] *** shareable6 left
[01:09] *** evalable6 left
[01:09] *** notable6 joined
[01:09] *** bisectable6 joined
[01:09] *** statisfiable6 joined
[01:10] *** sourceable6 joined
[01:10] *** quotable6 joined
[01:10] *** evalable6 joined
[01:10] *** tellable6 joined
[01:10] *** greppable6 joined
[01:10] *** reportable6 joined
[01:10] *** nativecallable6 joined
[01:11] *** bloatable6 joined
[01:11] *** benchable6 joined
[01:11] *** unicodable6 joined
[01:12] *** shareable6 joined
[01:12] *** coverable6 joined
[01:12] *** linkable6 joined
[01:12] *** releasable6 joined
[01:12] *** committable6 joined
[02:07] *** frost joined
[03:07] *** bisectable6 left
[03:07] *** tellable6 left
[03:07] *** nativecallable6 left
[03:07] *** shareable6 left
[03:07] *** coverable6 left
[03:07] *** linkable6 left
[03:07] *** sourceable6 left
[03:07] *** quotable6 left
[03:07] *** unicodable6 left
[03:07] *** notable6 left
[03:07] *** bloatable6 left
[03:07] *** benchable6 left
[03:07] *** greppable6 left
[03:07] *** evalable6 left
[03:07] *** statisfiable6 left
[03:07] *** reportable6 left
[03:07] *** committable6 left
[03:07] *** releasable6 left
[03:07] *** bisectable6 joined
[03:07] *** unicodable6 joined
[03:07] *** reportable6 joined
[03:08] *** quotable6 joined
[03:08] *** tellable6 joined
[03:08] *** sourceable6 joined
[03:08] *** shareable6 joined
[03:08] *** evalable6 joined
[03:08] *** benchable6 joined
[03:08] *** greppable6 joined
[03:08] *** committable6 joined
[03:08] *** nativecallable6 joined
[03:08] *** linkable6 joined
[03:09] *** statisfiable6 joined
[03:09] *** notable6 joined
[03:09] *** coverable6 joined
[03:10] *** releasable6 joined
[03:10] *** bloatable6 joined
[04:10] *** unicodable6 left
[04:10] *** coverable6 left
[04:10] *** committable6 left
[04:10] *** quotable6 left
[04:10] *** linkable6 left
[04:10] *** benchable6 left
[04:10] *** greppable6 left
[04:10] *** bloatable6 left
[04:10] *** shareable6 left
[04:10] *** evalable6 left
[04:10] *** nativecallable6 left
[04:10] *** sourceable6 left
[04:10] *** releasable6 left
[04:10] *** statisfiable6 left
[04:10] *** reportable6 left
[04:10] *** tellable6 left
[04:10] *** notable6 left
[04:10] *** bisectable6 left
[04:10] *** evalable6 joined
[04:10] *** bloatable6 joined
[04:10] *** unicodable6 joined
[04:10] *** coverable6 joined
[04:10] *** quotable6 joined
[04:11] *** bisectable6 joined
[04:11] *** sourceable6 joined
[04:11] *** nativecallable6 joined
[04:12] *** benchable6 joined
[04:12] *** tellable6 joined
[04:12] *** statisfiable6 joined
[04:13] *** releasable6 joined
[04:13] *** greppable6 joined
[04:13] *** linkable6 joined
[04:13] *** shareable6 joined
[04:13] *** reportable6 joined
[04:13] *** committable6 joined
[04:13] *** notable6 joined
[05:13] *** linkable6 left
[05:13] *** evalable6 left
[05:14] *** linkable6 joined
[05:15] *** evalable6 joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[07:42] <timo> good good, good

[07:49] <lizmat> indeedy indeedy indeedy !

[08:04] *** evalable6 left
[08:04] *** linkable6 left
[08:05] *** evalable6 joined
[08:06] *** linkable6 joined
[08:07] *** sena_kun joined
[09:29] *** sena_kun left
[09:30] *** linkable6 left
[09:31] *** linkable6 joined
[09:37] *** sena_kun joined
[09:37] *** sena_kun left
[10:15] *** linkable6 left
[10:16] *** linkable6 joined
[11:31] <lizmat> m: sub a(*%_) { if %_<a> -> $a { %_ } }  # why is this a compilation error ?

[11:31] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Placeholder variable '%_' cannot override existing signature␤at <tmp>:1␤------> sub a(*%_) { if %_<a> ⏏-> $a { %_ } }  # why is this a compilat␤»

[11:55] <jnthn> %_ and @_ imply placeholder signatures

[11:55] <jnthn> m: sub a($b) { $^b } # same as this

[11:55] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Redeclaration of symbol '$^b' as a placeholder parameter.␤at <tmp>:1␤------> sub a($b) { $^b⏏ } # same as this␤»

[11:55] <jnthn> m: sub a($b) { $^c } # same as this

[11:55] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Placeholder variable '$^c' cannot override existing signature␤at <tmp>:1␤------> sub⏏ a($b) { $^c } # same as this␤»

[11:56] <jnthn> m: sub a { if %_<a> -> $a { %_ } }; say a a => 'a'

[11:56] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Placeholder variable '%_' cannot override existing signature␤at <tmp>:1␤------> sub a { if %_<a> ⏏-> $a { %_ } }; say a a => 'a'␤»

[11:56] <lizmat> so even if there's an outer scope %_ ?

[11:57] <jnthn> m: sub a { if %_<a> -> $a { say $a } }; a a => 'a'

[11:57] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: «a␤»

[11:57] <jnthn> Placeholder signatures attach to the enclosing block, and the if's block counts

[11:58] <lizmat> m: sub a(*%_) { if %_<a>  { %_ } } 

[11:58] <camelia> rakudo-moar 7ec4b10d7: ( no output )

[11:58] <lizmat> m: sub a(*%_) { if %_<a>  { %_ } } ; a a => 42

[11:58] <camelia> rakudo-moar 7ec4b10d7: ( no output )

[11:58] <lizmat> m: sub a(*%_) { if %_<a>  { dd %_ } } ; a a => 42

[11:58] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: «{:a(42)}␤»

[11:59] <lizmat> but now it doesn't ?

[11:59] <lizmat> now it does see the outer %_ ?

[11:59] <jnthn> Curious. No idea. :)

[12:00] <jnthn> I'm guessing the explicit signature on the `if` is something to do with it

[12:00] <jnthn> Also curious if RakuAST's behavior differs here

[12:01] <lizmat> shall I make an issue for this discrepancy so that we can fix this with RakuAST ?

[12:03] <jnthn> Well, that assumes we can decide what he semantics should be... :)

[12:03] <jnthn> But yeah, it's a bit inconsistent

[12:04] <lizmat> I mean. if you declare a signature on the block, and the %_ is still visible in there, there shouldn't be an inconsistency ?

[12:07] *** reportable6 left
[12:08] *** reportable6 joined
[12:44] <jnthn> m: if 42 { say $^a }

[12:44] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: «42␤»

[12:45] <jnthn> In that case the placeholder attaches to the enclosing block

[13:19] *** frost left
[13:40] <lizmat> yeah, but this was about providing a signature:

[13:40] <lizmat> m: sub a(*%_) { if 42 -> $a { %_ } }

[13:40] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Placeholder variable '%_' cannot override existing signature␤at <tmp>:1␤------> sub a(*%_) { if 42 ⏏-> $a { %_ } }␤»

[13:41] <lizmat> feels to me that when the %_ is encountered, and it sees that there is a signature on the block, that it should see if there's a %_ lexically visible before throwing ?

[14:07] <jnthn> That'd be inconsistent with other placeholder vars, though, which don't do such magic

[14:15] <lizmat> m: { $^a; -> $b { say $a }(666) }(42)    # I guess that'd be a reason you can also refer to $^a as $a ?

[14:15] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: «42␤»

[14:24] <jnthn> Yeah, $^a declares $a in the signature of the enclosing block

[14:25] <jnthn> The ^ is like "declare it up there" :P

[14:31] *** evalable6 left
[14:34] *** evalable6 joined
[15:37] <timo> do we already use rakuast-based optimizer code in the rakuast branches of nqp and raku?

[15:37] <timo> rakudo*

[15:37] <nine> no

[15:40] <timo> i seem to recall that rakuast should let us inline blocks in more cases

[17:38] *** linkable6 left
[17:38] *** evalable6 left
[17:38] *** linkable6 joined
[17:41] *** evalable6 joined
[17:51] *** sena_kun joined
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[19:50] *** nine left
[19:50] *** nine joined
[20:09] *** sena_kun left
[20:10] *** sena_kun joined
[21:39] *** sena_kun left
[22:51] *** discord-raku-bot left
[22:51] *** discord-raku-bot joined
[22:55] *** discord-raku-bot left
[22:55] *** discord-raku-bot joined
[23:00] *** discord-raku-bot left
[23:00] *** discord-raku-bot joined
[23:04] *** discord-raku-bot left
[23:04] *** discord-raku-bot joined
