[00:00] *** reportable6 left
[00:11] *** TempIRCLogger left
[00:11] *** TempIRCLogger joined
[00:18] *** shareable6 joined
[00:18] *** quotable6 joined
[00:18] *** greppable6 joined
[00:19] *** notable6 joined
[00:19] *** linkable6 joined
[00:20] *** benchable6 joined
[01:20] *** releasable6 joined
[01:22] *** frost left
[02:08] *** ggoebel left
[02:20] *** committable6 joined
[02:35] *** drakonis joined
[02:50] *** ggoebel joined
[04:01] *** reportable6 joined
[04:33] *** frost joined
[06:00] *** reportable6 left
[08:48] *** squashable6 left
[08:48] *** squashable6 joined
[09:05] *** ggoebel left
[09:25] *** Techcable left
[09:25] *** Techcable joined
[10:01] *** reportable6 joined
[11:01] *** reportable6 left
[11:01] *** coverable6 left
[11:01] *** bloatable6 left
[11:01] *** nativecallable6 left
[11:01] *** bisectable6 left
[11:01] *** statisfiable6 left
[11:01] *** releasable6 left
[11:01] *** tellable6 left
[11:01] *** linkable6 left
[11:01] *** unicodable6 left
[11:01] *** squashable6 left
[11:01] *** evalable6 left
[11:01] *** quotable6 left
[11:01] *** notable6 left
[11:01] *** benchable6 left
[11:01] *** shareable6 left
[11:01] *** sourceable6 left
[11:01] *** greppable6 left
[11:01] *** committable6 left
[11:02] *** reportable6 joined
[11:02] *** bloatable6 joined
[11:03] *** greppable6 joined
[11:04] *** quotable6 joined
[11:04] *** benchable6 joined
[11:04] *** bisectable6 joined
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:02] *** squashable6 joined
[12:03] *** releasable6 joined
[12:03] *** linkable6 joined
[12:04] *** nativecallable6 joined
[12:15] *** Geth left
[12:15] *** Geth joined
[12:19] *** Geth left
[12:20] *** Geth joined
[12:37] *** ggoebel joined
[13:02] *** notable6 joined
[13:03] *** statisfiable6 joined
[13:04] *** evalable6 joined
[13:58] *** ggoebel left
[13:59] *** ggoebel joined
[14:33] <MasterDuke> [Coke]: what are the modules you use in your script that fails with mimalloc?

[14:48] <[Coke]> some combination of File::Directory::Tree, File::Find, ile::Temp, HTTP::UserAgent, JSON::Tiny, Text::CSV

[14:48] <[Coke]> *File::Temp

[14:55] *** frost left
[14:56] <MasterDuke> may have found something in nativecall-related code. or might not be thinking straight, not sure how i could have missed it before

[14:59] <[Coke]> Happy to test something if you throw it in a branch

[14:59] <[Coke]> pretty sure HTTP::UserAgent has some nativecall in there for SSL

[15:04] *** unicodable6 joined
[15:04] *** shareable6 joined
[15:04] <MasterDuke> arg, now getting github errors when trying to push

[15:08] <MasterDuke> well, here's the patch until github fixes itself https://pastebin.com/5pcuNjEe

[15:48] <timo> do libraries use glibc malloc and try to free() something nativecall allocated for them with mimalloc-malloc?

[16:01] *** committable6 joined
[16:03] *** sourceable6 joined
[16:10] <MasterDuke> yep

[16:11] <Geth> ¦ MoarVM: MasterDuke17++ created pull request #1686: Correctly allocate/free CStrs when using mimalloc

[16:11] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1686

[16:26] *** MasterDuke left
[16:33] *** MasterDuke joined
[17:03] *** coverable6 joined
[17:39] <lizmat> MasterDuke: should that be in the 2022.03 release ?

[17:42] <[Coke]> I need to test it on my windows issue, but that's probably not a blocker if it looks correct otherwise.

[17:43] <nine> Yes, we want that fix

[17:44] <nine> MasterDuke: why make the fix conditional on MVM_USE_MIMALLOC? I'd say that using MVM_malloc/MVM_free has never been correct there and just worked by virtue of those being wrappers for malloc/free.

[18:00] *** reportable6 left
[18:58] <[Coke]> MasterDuke: going through rebuild now, will report out in a bit.

[19:03] *** linkable6 left
[19:05] *** linkable6 joined
[19:24] <[Coke]> MasterDuke: it's gotten *much* further using mimalloc+your path

[19:24] <[Coke]> Patch

[19:24] <[Coke]> nice find!

[19:26] <[Coke]> Yup, we're good

[19:29] <Nicholas> "good" - is this like my COVID test result - "NOT DETECTED" ? :-/

[19:30] <Nicholas> (unrelated to COVID-or-not, still rather too tired/busy to review things)

[19:44] <[Coke]> yes, I can't reproduce my very difficult to golf error with his patch applied.

[19:48] <[Coke]> (oof, it's still running, up to 840MB so far...)

[19:51] <[Coke]> so this seems slower.

[19:52] <[Coke]> Finally did end, but got up to 1G of memory - which to be fair I'd not been checking previously.

[20:01] *** reportable6 joined
[20:03] <MasterDuke> nine: just to minimize the changes compared to before mimalloc. if we want to remove the use of MVM_* in these sorts of cases i think it'd make sense to do that as one larger commit across the different nativecall reprs

[20:04] <MasterDuke> [Coke]: i'm kind of surprised if you find using mimalloc slower. pretty much everything i've tested has been faster with it, especially so on windows

[20:06] <japhb> Perhaps [Coke] meant "slower memory growth"?

[20:21] *** sena_kun left
[20:23] *** sena_kun joined
[20:30] <[Coke]> no, I meant the script seemed to be taking longer to run

[20:32] <MasterDuke> that's unexpected, but i don't think my patch would cause any noticeable change. have you found using mimalloc generally slower?

[20:39] <MasterDuke> but CI is green and it fixes your issue, so i'm going to merge in a couple minutes unless there are any objections

[20:40] <[Coke]> MasterDuke: I haven't been *using* mimalloc because it was broken.

[20:40] <[Coke]> so I can't really answer that.

[20:41] <MasterDuke> ah

[20:41] <[Coke]> I run these scripts daily or so: If it's really slower, I'll try to do a comparison this weekend when I can set it to run and not worry about it.

[20:52] <lizmat> MasterDuke: when merged, will you bump also ?

[20:53] <MasterDuke> sure

[21:05] <Geth> ¦ MoarVM: 764fff9b86 | (Daniel Green)++ | src/6model/reprs/CStr.c

[21:05] <Geth> ¦ MoarVM: Correctly allocate/free CStrs when using mimalloc

[21:05] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/764fff9b86

[21:05] <Geth> ¦ MoarVM: c935e681b8 | MasterDuke17++ (committed using GitHub Web editor) | src/6model/reprs/CStr.c

[21:05] <Geth> ¦ MoarVM: Merge pull request #1686 from MasterDuke17/more_nativecall_mimalloc_fixes

[21:05] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c935e681b8

[23:20] *** linkable6 left
[23:20] *** linkable6 joined
[23:52] *** ggoebel left
