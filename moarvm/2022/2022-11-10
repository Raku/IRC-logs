[00:00] *** kjp left
[00:01] *** kjp joined
[00:02] *** codesections1 joined
[00:07] *** codesections left
[00:07] *** codesections1 is now known as codesections

[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[01:32] *** discord-raku-bot left
[01:32] *** discord-raku-bot joined
[02:31] *** frost12 joined
[02:32] *** frost12 left
[02:32] *** frost52 joined
[02:38] *** sortiz joined
[02:40] *** frostsdasd joined
[02:41] *** Kaiepi joined
[02:43] *** frostsdasd left
[02:43] *** frost48 joined
[02:43] *** frost52 left
[02:43] *** frost48 left
[02:43] *** frost56 joined
[02:44] *** frost56 left
[02:55] *** frost joined
[03:56] *** reportable6 left
[03:56] *** greppable6 left
[03:56] *** evalable6 left
[03:56] *** notable6 left
[03:56] *** squashable6 left
[03:56] *** quotable6 left
[03:56] *** benchable6 left
[03:56] *** unicodable6 left
[03:56] *** nativecallable6 left
[03:56] *** tellable6 left
[03:56] *** releasable6 left
[03:56] *** sourceable6 left
[03:56] *** bisectable6 left
[03:56] *** committable6 left
[03:56] *** linkable6 left
[03:56] *** statisfiable6 left
[03:56] *** shareable6 left
[03:56] *** bloatable6 left
[03:56] *** coverable6 left
[03:56] *** bisectable6 joined
[03:56] *** shareable6 joined
[03:56] *** statisfiable6 joined
[03:57] *** unicodable6 joined
[03:57] *** bloatable6 joined
[03:57] *** coverable6 joined
[03:57] *** greppable6 joined
[03:58] *** benchable6 joined
[03:58] *** nativecallable6 joined
[03:58] *** notable6 joined
[03:58] *** evalable6 joined
[03:58] *** linkable6 joined
[03:58] *** quotable6 joined
[03:58] *** sourceable6 joined
[03:59] *** reportable6 joined
[03:59] *** committable6 joined
[03:59] *** squashable6 joined
[03:59] *** releasable6 joined
[03:59] *** tellable6 joined
[05:19] *** Kaiepi left
[06:07] *** reportable6 left
[06:09] *** reportable6 joined
[07:09] *** sortiz left
[08:00] *** releasable6 left
[08:00] *** squashable6 left
[08:00] *** committable6 left
[08:00] *** sourceable6 left
[08:00] *** linkable6 left
[08:00] *** notable6 left
[08:00] *** nativecallable6 left
[08:00] *** greppable6 left
[08:00] *** unicodable6 left
[08:00] *** bisectable6 left
[08:00] *** epony left
[08:00] *** [Coke] left
[08:00] *** harrow left
[08:00] *** vrurg left
[08:00] *** jdv left
[08:00] *** jdv joined
[08:00] *** [Coke] joined
[08:00] *** vrurg joined
[08:02] *** harrow joined
[08:40] *** Kaiepi joined
[08:57] *** squashable6 joined
[08:58] *** bisectable6 joined
[08:58] *** committable6 joined
[08:59] *** notable6 joined
[09:00] *** nativecallable6 joined
[09:28] *** frost left
[09:46] <timo> ohai

[09:47] <lizmat> timo o/!

[09:52] *** lizmat_ joined
[09:55] *** lizmat left
[09:57] *** lizmat_ left
[09:57] *** lizmat joined
[10:00] *** unicodable6 joined
[10:00] *** releasable6 joined
[10:36] <nine> \o

[11:00] *** greppable6 joined
[11:14] *** discord-raku-bot left
[11:15] *** discord-raku-bot joined
[11:18] *** sena_kun joined
[11:49] *** Kaiepi left
[11:58] *** linkable6 joined
[11:59] *** sourceable6 joined
[12:06] *** Kaiepi joined
[12:07] *** reportable6 left
[12:27] *** epony joined
[12:35] *** reportable6 joined
[13:23] <[Coke]> tiiiiiiiiiimo

[15:57] *** sena_kun left
[15:57] *** sena_kun joined
[16:30] <[Coke]> Can someone give me a sentence or two about "why we won't be including TCO in rakudo" if that's the case, moarvm specific rationale is fine, so I can write up a FAQ and close one of the currently open tickets?

[16:30] <[Coke]> (I'm pretty sure the answer was no, but could be mistaken)

[16:35] *** sortiz joined
[16:52] *** japhb left
[16:58] *** japhb joined
[17:03] *** japhb left
[17:03] *** japhb joined
[17:45] *** sena_kun left
[18:07] *** reportable6 left
[18:10] *** reportable6 joined
[18:31] *** sena_kun joined
[19:25] *** codesections left
[20:27] *** sena_kun left
[20:29] *** sena_kun joined
[20:45] <nine> I guess the irclog would know the answer

[21:06] <lizmat> I think codesections was to give an answer on that?

[21:56] *** sena_kun left
[22:15] <jnthn> To the degree there's a consensus on that, I think it's something like: an explicit mechanism to do tailcalls is fine, but needs runtime support and is made more complex because a Routine maybe having non-inlined Blocks and so there can be many VM-level stack frames that need removing.

[22:16] <jnthn> But TCO - doing it as an optimization - is tricky because features like CALLER and dynamic variables are impacted by it, and the late-bound nature of those mean they can be used at quite a distance.

[22:17] <jnthn> So it's not really "no tailcalls", but "explicit tailcalls, and somebody needs to do the implementation work"

[22:17] <jnthn> Oh, the interaction with LEAVE blocks is also fun :)

[22:19] <jnthn> sub foo($n) { LEAVE say $n; $n ?? 1 !! $n * &foo.tailcall($n - 1) } ; foo(5); # what to do with this?

[22:19] <evalable6> jnthn, rakudo-moar 64f552f32: OUTPUT: «5␤»

[22:19] *** codesections joined
[22:19] <jnthn> hah, go the conditional backwards :D

[23:54] *** codesections left
[23:55] *** codesections joined
[23:55] *** codesections left
[23:56] *** codesections joined
[23:56] *** codesections left
[23:59] *** codesections joined
[23:59] *** codesections left
