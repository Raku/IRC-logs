[01:55] *** ilbot3 joined
[02:03] *** Ven`` joined
[02:15] *** nativecallable6 joined
[02:15] *** statisfiable6 joined
[02:15] *** releasable6 joined
[02:42] *** zakharyas joined
[03:34] *** mst joined
[03:39] *** nine joined
[03:39] *** camelia joined
[03:40] *** avar joined
[04:08] *** AlexDaniel joined
[04:51] *** geekosaur joined
[05:14] *** domidumont joined
[05:21] *** domidumont joined
[05:42] *** coverable6 joined
[05:42] *** unicodable6 joined
[05:42] *** bisectable6 joined
[05:42] *** committable6 joined
[05:42] *** bloatable6 joined
[05:42] *** quotable6 joined
[05:42] *** evalable6 joined
[05:42] *** benchable6 joined
[05:42] *** greppable6 joined
[05:42] *** releasable6 joined
[05:42] *** nativecallable6 joined
[05:42] *** squashable6 joined
[05:42] *** statisfiable6 joined
[06:04] *** brrt joined
[06:05] <brrt> good * #moarvm

[06:35] <nwc10> good *, #moarvm

[06:35] <nwc10> jnthn: ASAN failures in spectests: http://paste.scsys.co.uk/565169

[06:36] <nwc10> #0 0x7fa46a6c2285 in MVM_fixed_size_free src/core/fixedsizealloc.c:271

[06:36] <nwc10> #1 0x7fa46a7de103 in gc_free src/6model/reprs/NFA.c:51

[06:36] <nwc10> during GC

[06:36] <nwc10> I have built with #define FSA_SIZE_DEBUG 1

[06:37] <nwc10> but I don't think that that's needed to trigger this

[06:40] *** brrt joined
[06:46] *** domidumont joined
[06:49] *** patrickz joined
[07:22] *** brrt joined
[07:36] *** leont joined
[08:05] *** domidumont joined
[08:40] *** robertle joined
[08:56] *** domidumont joined
[09:14] <dogbert2> good * #moarvm

[09:14] <dogbert2> building the core setting with a small nursery is, at least currently, a bad idea

[09:14] <dogbert2> Stage start      :   0.000

[09:15] <dogbert2> Stage parse      : MoarVM panic: Collectable 0x407a8f30 in fromspace accessed

[10:00] *** Geth joined
[10:08] <brrt> hmmm

[10:08] <brrt> that's interesting

[10:16] <dogbert2> brrt: perhaps I should try to figure out where that happens

[10:16] *** lizmat joined
[10:18] <brrt> yeah, that seems legit :-)

[10:28] <jnthn> timotimo: 3059ba2829 and http://paste.scsys.co.uk/565169 look related

[10:37] <timotimo> oh? uh oh. let's see.

[10:43] <timotimo> oh, facepalm

[10:43] <timotimo> i somehow missed to change calloc into the corresponding function

[10:49] <timotimo> i wasn't able to get asan to complain before, but the fix i made is Obviously Correct™

[10:49] <Geth> ¦ MoarVM: 054ad4e1d6 | (Timo Paulssen)++ | src/6model/reprs/NFA.c

[10:49] <Geth> ¦ MoarVM: convert left-over calloc to FSA equivalents

[10:49] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/054ad4e1d6

[10:49] <timotimo> nwc10: would be cool if you tried again with this commit

[10:50] <nwc10> had already started

[10:50] <timotimo> nice :)

[10:50] <timotimo> dogbert2: try recompiling?

[10:50] <nwc10> only 5 seconds ahead of you :-)

[10:50] <nwc10> (you asking, that is. had seen your approximate "d'oh" comment and assumed that a commit was about to land)

[10:52] <timotimo> :)

[10:53] <dogbert2> timotimo: don't think it's the same problem since I wasn't using your commit from yesterday :)

[10:53] <timotimo> oh, well :)

[10:54] * dogbert2 tries to catch the problem with gdb ...

[10:55] <dogbert2> and ... it turns out that the backtrace is in fact the very same as https://github.com/MoarVM/MoarVM/issues/707

[10:59] <dogbert2> notices that I had forgot to 'p MVM_dump_backtrace' in the bug report, here's a more complete version https://gist.github.com/dogbert17/2e270d082382d0226e52885e9cb88631

[11:00] <timotimo> fun! creating an accessor. that's right next to what liz was building for buildall :)

[11:01] <dogbert2> could there be a connection

[11:01] <timotimo> probably not

[11:06] <lizmat> oO( all problems are the same )

[11:09] <timotimo> problemly not

[12:31] *** lizmat joined
[13:35] <nwc10> ASAN has gone back to sleep

[13:51] *** brrt joined
[13:52] *** brrt joined
[14:03] *** brrt joined
[14:09] *** geekosaur joined
[15:07] *** brrt joined
[15:10] *** cognominal joined
[15:21] <cognominal> should not getaddrinfo() be within a MVM_gc_mark_thread_blocked/unblocked pair cuz it potentially blocks if the address is not yet cached ?  https://github.com/MoarVM/MoarVM/blob/master/src/io/syncsocket.c#L305

[15:40] <timotimo> ah, i didn't know about that

[15:40] <timotimo> if you put blocked/unblocked, it'll have to be much more careful with regards to MVMROOT

[15:40] <jnthn> Probably, yes

[15:40] <jnthn> But check all its callers

[15:40] <jnthn> That also

[15:41] <jnthn> Every caller will need to be audited

[15:44] <cognominal> I understand the purpose of VMROOT but I don´t know exactly yet what should go there

[16:08] <timotimo> every variable that points to a GC-managed thing must go there

[16:16] <cognominal> submitted it as an issue https://github.com/MoarVM/MoarVM/issues/708

[16:25] *** domidumont joined
[16:29] *** AlexDaniel joined
[16:30] <timotimo> how long can this block? worst case?

[16:30] <ilmari> for as long as your DNS server takes to respond?

[16:30] <ilmari> (or the resolver library times out)

[16:33] <cognominal> the best way to (not) address the problem is to use the libuv asynchroneous getaddrinfo instead :)    I noticed this bug when studying what this involved

[16:36] <timotimo> oh, getaddrinfo

[16:36] <timotimo> for some reason i was thinking of getpeername thing

[16:46] <ugexe> with uv_getaddrinfo a NULL uv_getaddrinfo_cb to run synchronously might make it easy to use in syncsocket too

[16:47] <samcv> good morning.

[16:47] * samcv yawns

[16:48] <lizmat> \o samcv

[16:58] *** leont joined
[17:31] *** Ven`` joined
[17:34] *** robertle joined
[20:09] <samcv> MasterDuke, made some comments on your join PR

[23:17] *** geekosaur joined
