[00:35] *** dalek joined
[00:35] *** synopsebot joined
[00:37] *** Geth joined
[00:37] *** SourceBaby joined
[00:57] *** patrickz_ joined
[00:59] *** evalable6 joined
[02:58] *** ilbot3 joined
[04:26] *** reportable6 joined
[04:51] *** reportable6 joined
[08:16] *** AlexDaniel joined
[08:21] *** AlexDaniel joined
[09:03] *** robertle joined
[09:11] *** domidumont joined
[09:19] *** domidumont joined
[10:44] *** reportable6 joined
[10:45] *** reportable6 joined
[11:06] *** MasterDuke joined
[11:09] *** Ven`` joined
[13:03] *** brrt joined
[13:22] *** AlexDaniel joined
[13:31] *** reportable6 joined
[13:44] <timotimo> every few months i seem to fail at shrinking phi nodes

[13:47] *** reportable6 joined
[13:54] <moritz> try psi nodes next time :-)

[14:16] *** geospeck joined
[14:18] *** robertle joined
[14:59] *** geospeck joined
[15:19] <timotimo> the first difference that seems wrong appears in the spesh log at line 17.6k

[15:20] <timotimo> hm, but what if it's actually correct, and the phi shrinking actually manages to do something good?

[15:20] <timotimo> and i've just been staring at perfectly benign code ...

[15:43] *** Ven`` joined
[16:02] *** Voldenet joined
[16:02] *** Voldenet joined
[16:08] *** lizmat joined
[16:09] <dogbert17> timotimo: are there any 'easy' optimization wins left in MoarVM now?

[16:13] <dogbert17> clickbaits lizmat: https://irclog.perlgeek.de/perl6-dev/2017-12-03#i_15525445

[16:18] * lizmat looks

[16:19] <lizmat> ah, test-t < 3 ?   yeah cool!

[16:20] <dogbert17> jnthn and timotimo at work

[16:21] * dogbert17 oO (stumbles upon a valgrind error in a Proc::Async-test)

[16:22] <dogbert17> ==20866== Conditional jump or move depends on uninitialised value(s)

[16:22] <dogbert17> ==20866==    at 0x418355B: optimize_throwcat (optimize.c:1728)

[16:22] <dogbert17> ==20866==    by 0x418355B: second_pass (optimize.c:2348)

[16:22] <dogbert17> ==20866==    by 0x41834F6: second_pass (optimize.c:2356)

[16:23] <jnthn> Poor cat...

[16:24] <dogbert17> indeed :)

[16:24] <dogbert17> was going to look for potential memory leaks but got distracted by this

[16:26] <dogbert17> test 36 in t/spec/S17-procasync/basic.t ('Process that doesn't output anything will not emit')

[16:28] <dogbert17> should be this piece of code: https://github.com/MoarVM/MoarVM/blob/master/src/spesh/optimize.c#L1728

[16:30] <jnthn> Could well be

[16:30] <jnthn> Oh, I wonder

[16:30] <jnthn> It could be the new inline boundary indicators I stuck into the handlers table

[16:31] <jnthn> That probably doesn't set action

[16:31] <jnthn> But since it's just an integer compare, and even if it accidentally matches then the line below won't match anyway, it'll be benign

[16:31] <jnthn> Still, worth squishing the warning

[16:31] <dogbert17> so you've already solved it, impressive. Do you want an issue?

[16:32] <jnthn> https://github.com/MoarVM/MoarVM/blob/master/src/spesh/inline.c#L549

[16:32] <jnthn> Adding inliner->handlers[*inline_boundary_handler].action = 0; here will likely clean up the warning

[16:33] <jnthn> Yeah, issue, or if you're up for trying out adding that line and seeing if it helps and sending a PR, that also works :)

[16:33] <dogbert17> I could do that unless you'd like to do it yourself :)

[16:33] <jnthn> I can't right now :)

[16:34] <dogbert17> ok, you can see a PR in your future :)

[16:34] <jnthn> Cool, thanks :)

[16:34] * jnthn away for a bit

[16:46] *** vendethiel- joined
[16:54] <Geth> Â¦ MoarVM: dogbert17++ created pull request #760: Impl. of the new inline boundary indicators forgot to set action

[16:54] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/760

[17:03] *** wander joined
[17:19] *** Ven`` joined
[18:12] *** patrickz joined
[18:16] <Geth> Â¦ MoarVM: 41050d1894 | (Jan-Olof Hendig)++ | src/spesh/inline.c

[18:16] <Geth> Â¦ MoarVM: Impl. of the new inline boundary indicators forgot to set action

[18:16] <Geth> Â¦ MoarVM:

[18:16] <Geth> Â¦ MoarVM: The newly implemented inline boundary indicators omitted to set

[18:16] <Geth> Â¦ MoarVM: the action field. This led to a warning from valgrind. Although

[18:16] <Geth> Â¦ MoarVM: the warning was benign in this case, it should be fixed anyway.

[18:16] <Geth> Â¦ MoarVM: jnthn++ for providing the fix.

[18:16] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/41050d1894

[18:16] <Geth> Â¦ MoarVM: 3c7b49e8f0 | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/spesh/inline.c

[18:16] <Geth> Â¦ MoarVM: Merge pull request #760 from dogbert17/fix-uninit-action

[18:16] <Geth> Â¦ MoarVM:

[18:16] <Geth> Â¦ MoarVM: Impl. of the new inline boundary indicators forgot to set action

[18:16] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/3c7b49e8f0

[19:35] *** releasable6 joined
[19:36] *** unicodable6 joined
[19:36] *** bisectable6 joined
[19:36] *** committable6 joined
[20:33] *** benchable6 joined
[21:40] *** greppable6 joined
