[00:06] *** mst joined
[00:41] <samcv> i'm going to try and get some mvm coverage info

[00:41] <samcv> and get a coverage option for ./Configure.pl

[00:41] <samcv> using clang

[00:43] <timotimo> cool

[00:43] <timotimo> i just pushed up a new coverity build

[00:43] <timotimo> you're not in the user list, want me to add you?

[00:43] <samcv> yeah

[00:43] <samcv> new coverity build?

[00:43] <samcv> do we already have coverity?

[00:43] <timotimo> yes

[00:43] <samcv> and how can i see it if we do

[00:44] <timotimo> https://scan.coverity.com/projects/paultcochrane-moarvm?tab=overview - i don't think i can add you myself, you have to request access

[00:44] <samcv> does it compile it specially?

[00:44] <timotimo> yeah

[00:45] <timotimo> they have some instructions on how to set up travis ci + coverity

[00:45] <timotimo> but they also say you should only run the scan every couple of commits

[00:45] <timotimo> like daily or something

[00:46] <timotimo> oh, there's still my printf problem

[00:46] <samcv> does it show you test coverage though of our test suite?

[00:46] <samcv> like what lines actually get used?

[00:46] <timotimo> nope, not at all

[00:46] <samcv> oh

[00:46] <samcv> yeah that's what i'm doing

[00:46] <timotimo> it's just static code analysis

[00:46] <timotimo> right

[00:46] <samcv> both are useful

[00:46] <samcv> ah kk

[00:46] <timotimo> they call it "cover"ity for some reason

[00:47] <samcv> sounds cool? idk

[00:47] <timotimo> i built the coverity build before your PR about compiler warnings got merged

[00:47] <timotimo> not great timing

[00:49] <MasterDuke> speaking about warning, i just got this after a pull from master: src/math/bigintops.c:16:72: warning: comparison of distinct pointer types lacks a cast

[00:49] <timotimo> right

[00:49] <timotimo> i made a partial fix for the problem in that line

[00:50] <timotimo> but then other compilers started complaining

[00:50] <timotimo> i'll just fix it last thing before bed.

[00:50] <MasterDuke> is it possible to get all compilers ok with it?

[00:50] <samcv> timotimo, https://gist.github.com/382c43cf0968becf568919b75f41fcda https://gist.github.com/382c43cf0968becf568919b75f41fcda

[00:50] <Geth> ¦ MoarVM: 56cdf7906e | (Timo Paulssen)++ | src/math/bigintops.c

[00:50] <Geth> ¦ MoarVM: compare compatible pointers in adjust_nursery

[00:50] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/56cdf7906e

[00:50] <samcv> sorry double pasted

[00:51] <samcv> that is summary of nqp `make test`

[00:51] <timotimo> can you filter out 3rdparty?

[00:51] <samcv> yeah

[00:52] <timotimo> looks interesting

[00:52] <timotimo> this is clang, right?

[00:52] <MasterDuke> no warnings now. ++s all around

[00:52] <timotimo> clang's scan-build comes with an web app that lets you explore the data; how does this coverage tool present its findings?

[00:52] <samcv> here https://gist.github.com/samcv/b6cfe4cc2ba66711b6730d70d338c4e4

[00:52] <timotimo> apart from the overview you pasted i mean

[00:52] <samcv> this is clang

[00:52] <samcv> uh this is the overall report

[00:52] <timotimo> is that just grepped or does it also change the TOTAL at the bottom?

[00:52] <samcv> gonna do a line based one

[00:53] <samcv> no it's grepped

[00:53] <samcv> the tool has like not very good documentation

[00:53] <timotimo> my moarvm coverage tool has also very bad documentation :D

[00:53] <timotimo> but i have far fewer users

[00:53] <samcv> lol!

[00:58] <samcv> also here

[00:58] <samcv> <samcv> that is summary of nqp `make test`

[00:58] <samcv> oops

[00:58] <samcv> https://gist.githubusercontent.com/samcv/2b80b4a70df52f8f73a8090627719b0f/raw/2d2e1ea7e59b4a9ee59ad73d379d8997705a4569/-

[00:59] <samcv> will have to write something to filter out 3rd party but you can ctrl + F MoarVM/src

[00:59] <timotimo> that's huge!

[00:59] <samcv> yes

[00:59] <samcv> bigger than i thought

[01:00] <samcv> better to look at the coverage grepped summary and then request only specific file's coverage

[01:00] <timotimo> probably, yeah

[01:00] <timotimo> could also do with some slight coloration or something

[01:01] <samcv> yeah

[01:01] <samcv> i get color in my terminal

[01:01] <timotimo> ah, nice

[01:01] <samcv> but my computer is lagging

[01:01] <samcv> because uh. huge

[01:01] <samcv> so much scroll

[01:01] <timotimo> there must be some tool that'll nom a program's output and turn ansi coloration into html tags and such

[01:01] <timotimo> oh yeah, all the scroll :|

[01:01] <samcv> there is an html output

[01:01] <timotimo> this format should be easy to awk

[01:01] <samcv> but it doesn't work for summary

[01:02] <timotimo> since it has a filename and then all lines that belong to that file come before the next double newline

[01:02] <timotimo> hah, just from the build i uploaded now vs the one i uploaded before "fixed defects" gone up from 94 to 107

[01:03] <samcv> so that's good? higher number?

[01:03] <timotimo> yeah

[01:03] <MasterDuke> timotimo: if i create a new thing, e.g., `my native foo is repr("P6int") is Int is nativesize( 8) is unsigned { };`, do i need to do some sort of ^compose somewhere?

[01:03] <timotimo> it found some defects, and then it found that these defects are no longer there

[01:03] <timotimo> that's nice

[01:03] <samcv> we are just that good

[01:03] <timotimo> MasterDuke: compose happens when the } gets parsed

[01:04] <timotimo> if you go through the MOP, you'll have to do compose yourself. that'd be like my Mu $footype := SomeHOW.new_type(:name("foo")); $footype.^add_parent(Int); $footype.^set_nativesize(8); ... $footype.^compose();

[01:05] <timotimo> bedtime for me now \o

[01:05] <MasterDuke> ah, had to create a class with an attribute of that type to get it to compose

[01:05] <MasterDuke> later...

[01:17] <samcv> wooo

[01:17] <samcv> you can do regex to determine what function names get printed

[01:22] <Geth> ¦ MoarVM: b0778d6ffa | (Samantha McVey)++ | 2 files

[01:22] <Geth> ¦ MoarVM: Add new --coverage option for Configure.pl instructions in commit body

[01:22] <Geth> ¦ MoarVM:

[01:22] <Geth> ¦ MoarVM: This only works with clang.

[01:22] <Geth> ¦ MoarVM: To configure:

[01:22] <Geth> ¦ MoarVM: Configure.pl --compiler=clang --coverage --optimize=0 --debug=3

[01:22] <Geth> ¦ MoarVM:

[01:22] <Geth> ¦ MoarVM: Then run the code you want to test the coverage with ENV var

[01:22] <Geth> ¦ MoarVM: <…commit message has 17 more lines…>

[01:22] <samcv> now you guys can all play around with it

[01:22] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b0778d6ffa

[01:23] <samcv> very nice :)

[01:48] *** ilbot3 joined
[03:13] *** vendethiel- joined
[03:42] *** travis-ci joined
[03:42] <travis-ci> MoarVM build canceled. Samantha McVey 'Try enabling coverage reporting testing'

[03:42] <travis-ci> https://travis-ci.org/samcv/MoarVM/builds/216610873 https://github.com/samcv/MoarVM/compare/b0778d6ffaf3...d8e74aca8153

[03:42] *** travis-ci left
[03:45] *** travis-ci joined
[03:45] <travis-ci> MoarVM build canceled. Samantha McVey 'Try enabling coverage reporting testing'

[03:45] <travis-ci> https://travis-ci.org/samcv/MoarVM/builds/216610873 https://github.com/samcv/MoarVM/compare/b0778d6ffaf3...d8e74aca8153

[03:45] *** travis-ci left
[03:48] *** travis-ci joined
[03:48] <travis-ci> MoarVM build failed. Samantha McVey 'Do somethings'

[03:48] <travis-ci> https://travis-ci.org/samcv/MoarVM/builds/216611784 https://github.com/samcv/MoarVM/compare/d8e74aca8153...8208e74b9da4

[03:48] *** travis-ci left
[03:51] <samcv> gonna disable those messages in my personal repository where i'm testing things. travisci follows the irc thigs in the file

[04:42] *** harrow joined
[05:46] *** domidumont joined
[05:52] *** domidumont joined
[05:54] *** brrt joined
[06:06] *** brrt joined
[06:22] *** vendethiel joined
[06:54] *** brrt joined
[06:59] <Geth> ¦ MoarVM/even-moar-jit: b26d9e6b5b | (Bart Wiegmans)++ | docs/jit/plan.org

[06:59] <Geth> ¦ MoarVM/even-moar-jit: Plan finding holes in live ranges

[06:59] <Geth> ¦ MoarVM/even-moar-jit:

[06:59] <Geth> ¦ MoarVM/even-moar-jit: This should solve the 'garbage restore' problem efficiently. Requires

[06:59] <Geth> ¦ MoarVM/even-moar-jit: basic block analysis. Note that this is necessary because I've chosen

[06:59] <Geth> ¦ MoarVM/even-moar-jit: to use restore-spilling arround CALL, and that if I had used 'full

[06:59] <Geth> ¦ MoarVM/even-moar-jit: spills' instead it can never happen. Live and learn...

[06:59] <Geth> ¦ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/b26d9e6b5b

[07:19] *** domidumont joined
[07:33] *** zakharyas joined
[08:23] <brrt> hey, weird idea folks….. maybe we can put a jumplist in the data section

[08:27] <lizmat> wouldn't that be problematic on newer CPU's with data / code protection features ?

[08:28] * lizmat is woefully outdated on such matters

[08:40] <brrt> well, no, because, a): the 'data' section is still in executable space

[08:40] <brrt> (it's on the same page)

[08:40] <brrt> doesn't have to be, but that's what it is

[08:41] <brrt> and b): it's an indirect jump based on loading data, meaning you never execute the jumplist, you just jump to the address specified in it

[08:41] <brrt> it's arguably very low priority

[09:17] <timotimo> samcv: did you look at gcov at all yet? it's gcc's coverage and profiling thingie

[09:29] *** ilmari[m] joined
[10:30] *** dogbert17_ joined
[10:48] <Geth> ¦ MoarVM/line_based_coverage_pr: 22 commits pushed by (Timo Paulssen)++, (Daniel Green)++, (Zoffix Znet)++

[10:48] <Geth> ¦ MoarVM/line_based_coverage_pr: review: https://github.com/MoarVM/MoarVM/compare/6fd4ded176...ed1a885cf8

[10:48] <timotimo> want to make sure it still builds and everything

[10:51] <timotimo> yeah, builds and nqp's "make test" with coverage log enabled doesn't crash or anything

[10:53] <timotimo> should i pull the "merge" trigger?

[10:56] <brrt> i can't judge for that..

[11:14] <timotimo> i will. travis also +1'd it :P

[11:17] <Geth> ¦ MoarVM/master: 23 commits pushed by (Timo Paulssen)++, (Daniel Green)++, (Zoffix Znet)++, timo++

[11:17] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/b0778d6ffa...0744814189

[11:17] <timotimo> boom

[11:17] <brrt> bada-bing, bada-bang

[11:17] <timotimo> gave it a nice long-ish description, too

[11:39] <Zoffix> \o/

[11:39] <Zoffix> And I'll PR the fixed and faster parser in ~12hours

[11:42] <timotimo> nice

[12:09] *** geekosaur joined
[15:37] <Geth> ¦ MoarVM/even-moar-jit: 93ff77b174 | (Bart Wiegmans)++ | docs/jit/plan.org

[15:37] <Geth> ¦ MoarVM/even-moar-jit: Document automatic unconditionalizing

[15:37] <Geth> ¦ MoarVM/even-moar-jit:

[15:37] <Geth> ¦ MoarVM/even-moar-jit: A value first computed in a conditional branch and used in a different

[15:37] <Geth> ¦ MoarVM/even-moar-jit: conditional branch or indeed in any basic block that is not followed

[15:37] <Geth> ¦ MoarVM/even-moar-jit: solely by the conditional is at risk of never being computed. We have

[15:37] <Geth> ¦ MoarVM/even-moar-jit: the 'let rooting hack' to ensure that the computation is ordered

[15:37] <Geth> ¦ MoarVM/even-moar-jit: before the conditional block (and hence available anywhere), but

[15:37] <Geth> ¦ MoarVM/even-moar-jit: that's hacky, error-prone and would not work for dynamically generated

[15:37] <Geth> ¦ MoarVM/even-moar-jit: tree fragments. So I've documented a way to order node computations

[15:37] <Geth> ¦ MoarVM/even-moar-jit: automatically.

[15:37] <Geth> ¦ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/93ff77b174

[16:24] *** zakharyas joined
[17:48] *** AlexDaniel joined
[17:56] *** ilmari_ joined
[17:56] *** btyler joined
[20:46] *** timo joined
[20:47] *** timo1 joined
[20:55] *** ggoebel joined
[21:12] *** MasterDuke joined
[22:47] <Voldenet> Does moarvm support nonblocking await??

[22:48] <timotimo> yup

[22:48] <timotimo> it's just continuations

[22:49] <timotimo> same as gather/take

[22:53] <Geth> ¦ MoarVM: zoffixznet++ created pull request #570: Fix coverage parser

[22:53] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/570

[22:53] <Zoffix> Done

[22:53] * Zoffix calls it a night and goes to shoot things in Andromeda o/

[23:01] <timotimo> have fun!

[23:15] <samcv> full information about generating coverage, and coverage with html here https://github.com/samcv/MoarVM-cover

[23:16] <samcv> have up to generating report overviews done. after a break, possibly tonigth i'm gonna try working on best arguments and things to generate a full line by line report. but the majority of work is done and in the repo. will let you know when i have the final part done
