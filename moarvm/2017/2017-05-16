[00:31] *** lizmat_ joined
[01:49] *** ilbot3 joined
[05:06] *** geekosaur joined
[05:41] *** brrt joined
[05:42] *** domidumont joined
[05:51] *** domidumont joined
[06:39] *** brrt joined
[07:30] *** brrt joined
[07:38] *** brrt joined
[07:43] *** domidumont joined
[07:46] *** zakharyas joined
[07:46] *** domidumont1 joined
[07:47] *** zakharyas joined
[08:07] *** brrt joined
[08:08] <lizmat_> And a new Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/05/16/2017-20-crossing-the-alps/

[08:08] <brrt> \o lizmat_

[08:13] *** zakharyas joined
[09:26] *** brrt joined
[09:34] <Geth> Â¦ MoarVM/even-moar-jit: 45bf6e94eb | (Bart Wiegmans)++ | 3 files

[09:34] <Geth> Â¦ MoarVM/even-moar-jit: Disable expr compiling for throwish/invokish ops

[09:34] <Geth> Â¦ MoarVM/even-moar-jit:

[09:34] <Geth> Â¦ MoarVM/even-moar-jit: These ops need guarding, and that is not yet implemented.

[09:34] <Geth> Â¦ MoarVM/even-moar-jit: This fixes CORE.setting compilation for now.

[09:34] <Geth> Â¦ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/45bf6e94eb

[09:34] <Geth> Â¦ MoarVM/even-moar-jit: 9bc0ed2b9c | (Bart Wiegmans)++ | 2 files

[09:35] <Geth> Â¦ MoarVM/even-moar-jit: Split jit-dump from jit-bisect

[09:35] <Geth> Â¦ MoarVM/even-moar-jit:

[09:35] <Geth> Â¦ MoarVM/even-moar-jit: The jit-bisect debug tool was somewhat unreliable and frankly did

[09:35] <Geth> Â¦ MoarVM/even-moar-jit: too many things at once. I've split the code to get a specific JIT

[09:35] <Geth> Â¦ MoarVM/even-moar-jit: dump into its own script and refactored the bisecting code. Stuff

[09:35] <Geth> Â¦ MoarVM/even-moar-jit: is generally more reliable now.

[09:35] <Geth> Â¦ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/9bc0ed2b9c

[09:46] <brrt> i'm still figuring out what is broken and why...

[10:01] *** zakharyas joined
[11:41] *** praisethemoon joined
[12:54] <Geth> Â¦ MoarVM/even-moar-jit: 3f5211cb8c | (Bart Wiegmans)++ | src/jit/linear_scan.c

[12:54] <Geth> Â¦ MoarVM/even-moar-jit: tile->args is not tile->values

[12:54] <Geth> Â¦ MoarVM/even-moar-jit:

[12:54] <Geth> Â¦ MoarVM/even-moar-jit: Also, values and register_spec are +1 biased compared to refs because

[12:54] <Geth> Â¦ MoarVM/even-moar-jit: they include the output register which refs does not. It might be a

[12:54] <Geth> Â¦ MoarVM/even-moar-jit: good idea to change that (have tile->refs[0] == tile->node).

[12:54] <Geth> Â¦ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/3f5211cb8c

[12:54] <Geth> Â¦ MoarVM/even-moar-jit: e0b99d02bd | (Bart Wiegmans)++ | src/jit/linear_scan.c

[12:54] <Geth> Â¦ MoarVM/even-moar-jit: Invoke prepare_arglist_and_call for CALL tile

[12:54] <Geth> Â¦ MoarVM/even-moar-jit:

[12:54] <Geth> Â¦ MoarVM/even-moar-jit: It could potentially happen that the register used by CALL would be

[12:54] <Geth> Â¦ MoarVM/even-moar-jit: allocated after the ARGLIST was processed, e.g. when the associated

[12:54] <Geth> Â¦ MoarVM/even-moar-jit: value is spilled and loaded by a synthetic tile. This could then

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: overwrite the register picked by prepare_arglist_and_call for

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: resolving the conflict between the ARGLIST and CALL registers.

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: Now that prepare_arglist_and_call is executed for the CALL

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: tile this can no longer happen.

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/e0b99d02bd

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: 83e4976189 | (Bart Wiegmans)++ | 8 files

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: Wrap invokish and throwish with a guard tile

[12:55] <Geth> Â¦ MoarVM/even-moar-jit:

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: Because this means that control flow can be interrupted and resumed

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: right after the compiled node, the expression assembler flushes all

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: active values after the guard, forcing them to be reloaded after.

[12:55] <Geth> Â¦ MoarVM/even-moar-jit:

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: The pre-throwish pseudotile (which is responsible for loading the JIT

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: <â€¦commit message has 7 more linesâ€¦>

[12:55] <Geth> Â¦ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/83e4976189

[12:55] <brrt> ^ the last commit unblocks decont and similar invokish / throwish ops

[12:56] <brrt> can be improved (i want to do 'optimistic' flushing, i.e only flush when necessary) but yeah

[13:04] <nine> So settings compilation now works?

[13:17] *** brrt joined
[13:17] <brrt> yes

[13:18] <brrt> i intend to keep it working, but with ever larger pieces of code JITted :-)

[13:18] <brrt> nine++ nice blog post on the PTS

[13:21] <nine> Thanks :)

[13:21] <nine> brrt: that sounds as it's about time people joined the effort?

[13:23] <brrt> i'm guessing we're very near that point, yes

[13:25] <Zoffix> \o/

[14:01] *** zakharyas joined
[15:06] *** zakharyas joined
[15:25] *** brrt joined
[17:21] *** zakharyas joined
[17:21] *** AlexDaniel joined
[17:23] *** samcv joined
[17:36] *** praisethemoon joined
[18:29] *** japhb joined
[18:49] *** domidumont joined
[18:57] *** Ven joined
[19:33] *** domidumont joined
[19:42] *** Ven_ joined
[19:52] *** robertle joined
[19:58] *** Ven joined
[20:01] *** zakharyas joined
[20:27] *** Ven_ joined
[20:48] *** committable6 joined
[20:48] *** Ven_ joined
[22:19] *** MasterDuke_ joined
