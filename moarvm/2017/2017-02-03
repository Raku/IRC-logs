[00:28] *** pyrimidine joined
[02:10] *** pyrimidine joined
[02:12] *** KDr2 joined
[02:29] *** pyrimidine joined
[02:34] *** pyrimidine joined
[02:48] *** ilbot3 joined
[03:35] *** pyrimidine joined
[03:47] *** travis-ci joined
[03:47] <travis-ci> MoarVM build failed. Bart Wiegmans 'Merge pull request #517 from lucasbuchala/nfg-typo

[03:47] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/197701952 https://github.com/MoarVM/MoarVM/compare/70d4bd53e62a...66961d88a803

[03:47] *** travis-ci left
[05:35] *** pyrimidi_ joined
[06:35] *** domidumont joined
[06:42] *** domidumont joined
[06:58] <samcv> I seem to be getting an issue where assigning to a hash is applying the operation to _two_ different keys

[06:58] <samcv> but only when the hash table is super populated

[07:04] <samcv> oh wait i think i know what's causing it...

[07:15] *** domidumont joined
[07:19] *** brrt joined
[07:20] *** domidumont joined
[07:24] *** domidumont joined
[07:25] <brrt> so, wtf

[07:25] <brrt> one of the QAST subtest is broken

[07:26] <samcv> when did that happen?

[07:26] <brrt> not sure

[07:26] <brrt> but travis was complaining about it this morning

[07:27] <brrt> aha, that file has had a *lot* of edits

[07:35] *** pyrimidine joined
[07:51] *** domidumont joined
[07:58] *** brrt joined
[08:26] *** brrt joined
[08:54] <Geth> ¦ MoarVM: samcv++ created pull request #520: Apply the radix speed improvement to MVM_bigint_radix as well

[08:54] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/520

[08:55] <samcv> jnthn, you said you gave me commit access but i wasn't able to apply the change from this pr ^ it said i didn't have permission to push

[09:00] <arnsholt> Check the URL of the repo? If it's HTTP pushing tends to not work

[09:00] <samcv> no it's git

[09:01] <samcv> upstream        [email@hidden.address] (push)

[09:03] <arnsholt> In that case, sounds like you've not been added after all

[09:08] <arnsholt> Doesn't look like I've the privs to add you either, I'm afraid

[09:40] <brrt> it appears that the QAST test worked before pmurias changed it, and I'm not sure why the change was mad

[09:40] <brrt> i'm going to contact him

[09:42] <brrt> samcv: i'll have a look at your PR and see if I can get you a commitbit; I'm not sure if I can though

[09:44] <brrt> samcv: I can't because I'm a regular member, not an owner; pmichaud and jnthn are; i can't see you in the list yet

[09:44] <samcv> kk

[10:58] *** agentzh joined
[11:04] *** Geth joined
[11:11] *** pyrimidine joined
[11:49] <brrt> well, the change appears good to me, so i'll merge it

[11:55] <brokenchicken> Seems mine has all failures due to that qast test: https://github.com/MoarVM/MoarVM/pull/518

[11:55] <brokenchicken> I did stresstest it on rakudo though and it was clean

[12:10] <jnthn> samcv: Just checked on GitHub, it stays you have an invitation that is still pending

[12:10] <samcv> hmm

[12:10] <jnthn> "Invitations are sent via email and can be accepted at https://github.com/MoarVM"

[12:10] <samcv> i get so many email

[12:10] <jnthn> :P

[12:11] <jnthn> Try at the URL?

[12:11] <samcv> found it

[12:11] <jnthn> :)

[12:12] <jnthn> Was sure I'd given you access... :)

[12:12] <Geth> ¦ MoarVM: f7ac91ccb2 | (Samantha McVey)++ | src/math/bigintops.c

[12:12] <Geth> ¦ MoarVM: Apply the radix speed improvement to MVM_bigint_radix as well

[12:12] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f7ac91ccb2

[12:12] <jnthn> \o/

[12:18] <samcv> moarvm has no logo right?

[12:19] <jnthn> No

[12:20] <jnthn> Not as a matter of policy, just because everyone was too busy building a VM or something :P

[12:20] <samcv> heh

[12:20] <jnthn> I'm not sure what we'd have as a logo :)

[12:20] <samcv> maybe just MVM?

[12:21] <samcv> idk would be cool to have just a basic something as a logo on github

[12:21] <samcv> or even just the word MoarVM

[12:22] <jnthn> Yeah :)

[12:25] <jnthn> Maybe brokenchicken has design skillz and an idea? :)

[12:26] *** KDr2 joined
[12:27] <samcv> well here is just MVM with like all the effects applied :P https://a.uguu.se/2I7sqln75Nk4_MVM.png

[12:27] <samcv> hah

[12:27] <samcv> just checked all the boxes. inner glow,shadow, pattern some other random things :P

[12:27] <samcv> i'm sure a better one can be made

[12:28] <jnthn> :D

[12:29] <jnthn> It looks oddly like the letters were cut out of a doormat...

[12:29] <samcv> haha

[12:32] <timotimo> you know how there's a V inside the M?

[12:36] <samcv> we should just get an actual doormat

[12:36] <samcv> and go wild. and eventually by the end we will end up with a logo

[12:42] <timotimo> after all, we are the kiddos who high-five every time a new emoji is coined!

[12:43] <jnthn> So...once a year? :P

[12:43] <jnthn> Or maybe a couple of times, 'cus we can see Unicode drafts too :P

[12:44] <timotimo> well, the high-fiving itself is quite gratuitous

[12:44] <timotimo> since it's our defining characteristic to people on the outside of our cabal

[12:51] <samcv> why apple always gotta mess up emoji tho

[12:51] <samcv> like replacing the pistol emoji with a water gun

[12:52] <samcv> timotimo, also there's no high five emoji :\

[12:53] *** pyrimidine joined
[12:55] <timotimo> "you are like a baby, watch this"

[12:55] * timotimo o/⁵o samcv

[12:56] <timotimo> just to be sure, i don't mean to step on anyones foot, just making light of a situation i'm not entirely grokking

[12:58] <jnthn> Yeah, well, I can see from the post they had a sub-optimal experience

[12:58] <timotimo> aye, they have :(

[13:00] <timotimo> i'm not sure the person who suggested that "users should use msi instead" is even a perl6 regular?

[13:00] <jnthn> No idea

[13:01] <timotimo> also, on the one hand, it doesn't seem fair to be judged by how random people on twitter talk about us, on the other hand that just feeds the "perl6 people are an exclusive membership-only club"

[13:01] <timotimo> also i didn't like the allegation of racism in that one post

[13:01] <jnthn> I've no idea what that bit was all about.

[13:02] <timotimo> though i'm very white, so it could just be i'm totally blind to racism

[13:03] <jnthn> At the end of the day, though, I see volunteers freely giving their time to solve all kinds of real, and sometimes difficult, problems people run in to when using Perl 6. For sure we have some fun along the way too.

[13:03] <jnthn> But yeah, if you're going to categorize a bunch of people who work on hard stuff as sitting around laughing at the latest cat face emoji all day...well, you're probably not going to endear yourself to them. :)

[13:04] <jnthn> lunch; bbiab

[13:05] * samcv looks away from the latest cat emoji to read this channel

[13:06] <samcv> wow i'm up to 76% memory usage somehow. i have 16GB

[13:07] *** stmuk joined
[13:07] *** pyrimidine joined
[13:08] <samcv> timotimo, where is that windows perl 6 discussion which the msi is mentioned?

[13:08] <brokenchicken> jnthn: timotimo had a logo and I liked the idea.

[13:08] <timotimo> https://twitter.com/joshuamy/status/826685435606806528 - it's not easy to navigate the fucking crap that is twitter threads, but here you go

[13:09] <timotimo> well, it's certainly not as crappy on the twitter.com frontend compared to inside tweetdeck

[13:09] *** pyrimidine joined
[13:10] <timotimo> brokenchicken: you're refering to the crab?

[13:11] <brokenchicken> I think it was a butterfly growing out of MVM or something or other?

[13:11] <samcv> @jnthnwrthngtn Not whining. Sharing my experiences. I am not going to interact with #perl6 for a while.

[13:11] <samcv> :\

[13:11] <samcv> pretty rude

[13:12] <brokenchicken> huh

[13:13] <brokenchicken> looks like there's more drama I missed.

[13:13] <samcv> is it true if they just installed the rakudo star distro they wouldn't have had problems?

[13:14] <brokenchicken> samcv: the original tweet from Jan 4th where I actually told him to use a user release instead of a dev commit is true.

[13:15] <brokenchicken> samcv: but it's apparently now broken in 2017.01 and the prose now tries to paint me as an evil "leading Perl 6 developer" who told the user to use a release but release is broken and I'm oh so refusing to take any input.

[13:15] <brokenchicken> timotimo: do you know what I'm talking about? I think it was a draft or something. I could make it proper.

[13:16] <samcv> also https://twitter.com/sinan_unur/status/826221362859634688

[13:16] <samcv> really :\

[13:17] <samcv> so they just download it and run roast just so they can say "look at all these things it fails"?

[13:17] <samcv> makes me angry

[13:17] <samcv> also do they know that roast tracks git branch?

[13:18] <brokenchicken> Yes, it's not 6.c tests, but still-to-be-vetted master branch. And the failures are known: https://github.com/perl6/roast/issues/197 many of them are poor tests and not an indication of problem with Rakudo on Windows

[13:18] <samcv> yeah exactly

[13:19] <samcv> and then complains about a module that doesn't work with windows doesn't work

[13:19] <nine> samcv: there are 7.4 billion people on earth. I could care less about this one individual being happy with Perl 6. He seems to try so hard to be unhappy, so let him have his desires.

[13:19] <samcv> he does try pretty hard

[13:19] <nine> s/could care/couldn't care/

[13:23] <timotimo> brokenchicken: i just plugged in my wacom tablet

[13:25] <brokenchicken> Heh. That reminds me I still have mine somwhere!

[13:26] <brokenchicken> Last used 5 years ago :o https://scontent-lga3-1.xx.fbcdn.net/v/t1.0-9/75019_4849133318784_1632425265_n.jpg?oh=44446d57ddaaaf3e8356931c614224d0&oe=590C4F3B

[13:28] <timotimo> http://imgur.com/NAXuBRE

[13:28] <timotimo> .o( richard dawkins? )

[13:29] <samcv> m: $_ = ['this' => 'that', 'other' => 'thing']; say .».key.all ~~ Str

[13:29] <camelia> rakudo-moar f24968: OUTPUT«===SORRY!=== Error while compiling <tmp>␤Malformed postfix call (only alphabetic methods may be detached)␤at <tmp>:1␤------> s' => 'that', 'other' => 'thing']; say .⏏».key.all ~~ Str␤»

[13:29] <brokenchicken> timotimo: yeah

[13:29] <samcv> is there a reason it doesn't let me do this?

[13:29] <samcv> other than no fun allowed

[13:29] <brokenchicken> timotimo: is that the same one you showed last time?

[13:29] <brokenchicken> This one does look like a crab, but I thought it was a butterfly heh

[13:29] <timotimo> the one i showed back then was drawn on my whiteboard

[13:29] <samcv> nice crab

[13:29] <timotimo> http://i.imgur.com/gMyYJjN.jpg

[13:30] <timotimo> attack its weak point for massive damage

[13:30] <brokenchicken> heh

[13:30] <timotimo> tut-tut, no fun allowed

[13:31] <timotimo> (until you file that bug on rakudobug@)

[13:34] <jnthn> Reflecting on things a bit over lunch: I suspect that for various people - certainly me included - in the Perl 6 community, there's a bit of a siege mentality still. Thanks to years and years of hearing "it's vapourware", "it's fucked", giving a Perl 6 talk and having the conf orga say "well, nice if it ever happens", some folks trying to undermine it all by proposing a Perl 7, and so many more things.

[13:36] <jnthn> Hopefully that will lessen with time. But generally - for *any* team of people I've seen building software, not just us - if the environment they're in is hostile, the result is defensiveness.

[13:36] <timotimo> jnthn: would you be okay with an MVM crab? :)

[13:37] <timotimo> not saying mvm is crap!

[13:37] <nine> You can generalize that to humans in...general. You get attacked, you defend. It takes hard training to not get defensive.

[13:37] <brokenchicken> Aren't crabs slow and move the wrong way? :)

[13:37] <timotimo> no, everything else moves the wrong way

[13:37] <timotimo> and crabs can be pretty fast

[13:37] <brokenchicken> :D

[13:38] <jnthn> nine: Yes, it's something I have to conciously work at.

[13:38] <timotimo> ifyou have a crazy amount of self-confidence (or just confidence) you can probably just "tank it with your face" whenever attacks come in

[13:39] <samcv> how do i negate this?

[13:39] <samcv> <:alpha + [»]>

[13:39] <nine> timotimo: in general, you don't tank it, you step aside.

[13:39] <timotimo> negate all of it?

[13:39] <samcv> <!:alpha> is like what i want, but i'm not sure how to have it negate all of them

[13:39] <samcv> ye

[13:39] <brokenchicken> <-:alpha - [»]> ?

[13:40] <timotimo> i'd expect what brokenchicken just wrote

[13:40] <nine> timotimo: by not getting defensive, the attack runs into a void. And then you come back from the side and get your arguments placed. Getting defensive or blocking is just a form of counter-attack which provokes defensive behavior.

[13:40] <brokenchicken> m: say "a.,432»«as" ~~ m:g/<-:alpha - [»]>/

[13:40] <camelia> rakudo-moar f24968: OUTPUT«(｢.｣ ｢,｣ ｢4｣ ｢3｣ ｢2｣ ｢«｣)␤»

[13:41] <samcv> yeah that works perfectly :)

[13:41] <timotimo> mhm

[13:42] <nine> Classic turn around phrasing is "Yes, I can understand you very well. Can you understand how I feel about ...?". It's hard to attack or get defensive when you are taken seriously and being faced with a question that evokes an emphatic response.

[13:43] <samcv> also guys <:ws> is 2x faster than <ws>

[13:43] <samcv> we can make cursor 2x faster

[13:43] <samcv> in places

[13:43] <timotimo> yeah, <ws> can do a bunch more, though

[13:43] <samcv> oh?

[13:43] <samcv> yeah i see what you mean

[13:43] <samcv> what about the other ones?

[13:43] <timotimo> it's rather complicated

[13:43] <samcv> yeah whitespace is complicated, but like <alpha> is fine to change to <:alpha>?

[13:43] <timotimo> could be

[13:44] <samcv> i know you can redefine whitespace

[13:44] * nine is boarding the plane now

[13:44] <timotimo> safe flight!

[13:44] * [Coke] notes that brokenchicken is actually a leading Perl 6 developer, whether he wants to be or not. :)

[13:44] <timotimo> gotta make sure that <:alpha> also plays well with the NFA generator, too

[13:45] <samcv> why would it not?

[13:45] <timotimo> dunno :)

[13:47] <samcv> hmm changing <!alpha> to <-:alpha - [»]> gets me more problems

[13:47] <samcv> Preceding context expects a term, but found infix . instead

[13:47] <samcv> when trying to do .»

[13:47] <timotimo> grammar can really be hard

[13:48] <jnthn> Is it <:!alpha> maybe?

[13:48] <samcv> jvm: say 'a' ~~ /<:alpha>/

[13:48] <samcv> jnthn, it works fine otherwise

[13:48] <samcv> i was just trying to fix .».

[13:48] <samcv> so everything is fine that worked before

[13:49] <jnthn> phone meeting; bbiab

[13:49] <samcv> j: say 'a' ~~ /<:alpha>/

[13:49] <camelia> rakudo-jvm fb4f16: OUTPUT«｢a｣␤»

[13:49] <samcv> cool

[13:49] <samcv> j: for ^1000 {'a' ~~ /<:alpha>/}; say now - INIT now;

[13:49] <camelia> rakudo-jvm fb4f16: OUTPUT«0.185␤»

[13:49] <samcv> j: for ^1000 {'a' ~~ /<alpha>/}; say now - INIT now;

[13:49] <camelia> rakudo-jvm fb4f16: OUTPUT«0.402␤»

[13:50] <samcv> j: for ^2000 {'a' ~~ /<alpha>/}; say now - INIT now;

[13:50] <camelia> rakudo-jvm fb4f16: OUTPUT«0.932␤»

[13:50] <samcv> j: for ^2000 {'a' ~~ /<:alpha>/}; say now - INIT now;

[13:50] <camelia> rakudo-jvm fb4f16: OUTPUT«0.366␤»

[13:52] <samcv> m: for ^2000 {'a' ~~ /<:alpha>/}; say now - INIT now;

[13:52] <camelia> rakudo-moar f24968: OUTPUT«0.04570131␤»

[13:52] <samcv> m: for ^10000 {'a' ~~ /<:alpha>/}; say now - INIT now;

[13:52] <camelia> rakudo-moar f24968: OUTPUT«0.1672124␤»

[13:53] <samcv> m: for ^10000 {'a' ~~ /<alpha>/}; say now - INIT now;

[13:53] <camelia> rakudo-moar f24968: OUTPUT«0.2700231␤»

[13:53] <samcv> yeah about 2x faster on MVM and like 220% faster on jvm

[14:14] <samcv> i gotta go to bed, night all

[14:14] <brokenchicken> night

[14:43] <brokenchicken> Can someone merge https://github.com/MoarVM/MoarVM/pull/518 please? :)

[14:43] <brrt> i can look at it

[14:44] <brokenchicken> brrt++

[14:44] <brrt> what. how was that in there for so long

[14:44] <brokenchicken> The Travis failures are due to qast test stuff we talked about this morning.

[14:46] <brrt> expected as much

[14:47] <brokenchicken> And I stresstested it yesterday and also ran in loop to see there are no issues in jittings: https://irclog.perlgeek.de/moarvm/2017-02-02#i_14032981

[14:49] *** travis-ci joined
[14:49] <travis-ci> MoarVM build errored. Samantha McVey 'Apply the radix speed improvement to MVM_bigint_radix as well'

[14:49] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/197980028 https://github.com/MoarVM/MoarVM/compare/66961d88a803...f7ac91ccb25e

[14:49] *** travis-ci left
[14:50] <Geth> ¦ MoarVM: 1c1746e525 | (Zoffix Znet)++ | src/core/interp.c

[14:50] <Geth> ¦ MoarVM: Fix overflow in div_i op

[14:50] <Geth> ¦ MoarVM:

[14:50] <Geth> ¦ MoarVM: The op uses `int` which overflows on large numbers, making the op

[14:50] <Geth> ¦ MoarVM: produce wrong results.

[14:50] <Geth> ¦ MoarVM:

[14:50] <Geth> ¦ MoarVM: Fix by using MVMint64 instead.

[14:50] <Geth> ¦ MoarVM:

[14:50] <Geth> ¦ MoarVM: Fixes RT#130686: https://rt.perl.org/Ticket/Display.html?id=130686

[14:50] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130686

[14:50] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/1c1746e525

[14:50] <Geth> ¦ MoarVM: 9258acaffd | (Jonathan Worthington)++ | src/core/interp.c

[14:50] <Geth> ¦ MoarVM: Merge pull request #518 from zoffixznet/fix_div_i

[14:50] <Geth> ¦ MoarVM:

[14:50] <Geth> ¦ MoarVM: Fix overflow in div_i op

[14:50] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9258acaffd

[14:50] <brokenchicken> \o/

[14:51] * jnthn wonders what's up with that qast.t

[14:51] <brokenchicken> It was already fixed this morning.

[14:51] <jnthn> ah, cool

[14:54] <jnthn> Only just got around to backlogging #perl6-dev :)

[15:00] *** pyrimidine joined
[15:00] *** agentzh joined
[15:25] <dogbert17_> o/ has anyone seen ever this message? moar: 3rdparty/libuv/src/unix/stream.c:1499: uv_read_start: Assertion `((stream)->io_watcher.fd) >= 0' failed.

[15:25] <dogbert17_> s/seen ever/ever seen/

[15:26] <dogbert17_> when running 'make spectest HARNESS_TYPE=6'

[15:29] *** domidumont joined
[15:32] <jnthn> No

[15:33] <jnthn> Well, somebody may have, I ain't

[15:42] <dogbert17_> I did have moar built with --asan btw

[15:55] *** geekosaur joined
[16:08] *** brrt joined
[16:47] *** domidumont joined
[16:59] *** brrt joined
[17:56] *** konobi joined
[17:56] *** [Coke] joined
[17:58] *** harrow joined
[17:59] *** Ven joined
[18:01] *** arnsholt joined
[18:23] *** pyrimidine joined
[18:40] *** agentzh joined
[18:57] *** zakharyas joined
[19:26] *** zakharyas1 joined
[20:19] *** FROGGS joined
[20:23] *** travis-ci joined
[20:23] <travis-ci> MoarVM build passed. Jonathan Worthington 'Merge pull request #518 from zoffixznet/fix_div_i

[20:23] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/198026127 https://github.com/MoarVM/MoarVM/compare/f7ac91ccb25e...9258acaffd43

[20:23] *** travis-ci left
[20:41] *** Ven joined
[21:08] *** pyrimidine joined
[21:11] *** lizmat joined
[22:20] <timotimo> so, how exactly is expmod with a negative exponent going to work?

[22:21] <timotimo> like, res = a ^(-1) mod c ...

[22:21] <timotimo> is it even supposed to ever return anything non-integer?

[22:22] <timotimo> because ^-1 is always just 1/a, and since it already coerces a and c to int ...

[22:22] <timotimo> anyway, i think we just basically pass the values 1:1 into the libtommath routine

[22:24] <timotimo> oh, okay, seems like the tommath manual suggests that negative values for the exponent are fine

[22:25] *** geekosaur joined
[22:26] <timotimo> For negative values of X the operation is performed as

[22:26] <timotimo> Y ≡ (G−1 mod P)

[22:26] <timotimo> |X|

[22:26] <timotimo> (mod P) provided that gcd(G, P) = 1

[22:26] <timotimo> the |X| was supposed to be an exponentiation of the (G-1 mod P)

[22:27] <brokenchicken> isn't mod an integer operation?

[22:28] <brokenchicken> m: .5 mod 3

[22:28] <camelia> rakudo-moar c98b3a: OUTPUT«WARNINGS for <tmp>:␤Useless use of "mod" in expression ".5 mod 3" in sink context (line 1)␤Cannot resolve caller infix:<div>(Rat, Int); none of these signatures match:␤    (Int:D \a, Int:D \b)␤    (int $a, int $b --> int)␤  in block <unit> at <tm…»

[22:30] <brokenchicken> timotimo: so you're looking at the expmod ticket?

[22:32] <timotimo> just a very cursory glance

[22:32] <timotimo> gotta be AFK for a little bit now

[22:32] <timotimo> but the idea would be: update libtommath and see if that fixes the problem

[22:35] <brokenchicken> Ah. Probably too deep down for my skills :)

[22:38] *** pyrimidine joined
[22:54] <timotimo> doesn't seem like there's been any change to that since 2015

[22:58] <timotimo> it doesn't help that we don't seem to have a trivial gdb-callable thing that just outputs the value of an mp_int struct

[22:58] <timotimo> that might be a good thing to have so we can figure out What The Hell Is Going On

[22:59] <samcv> i've almost got this nailed down, UCD-gen.p6 if/else statements to save space for the cp to bitfield index

[22:59] *** pyrimidine joined
[23:00] <timotimo> brokenchicken: i'd be interested to see where you'd take the "MVM crab" logo idea

[23:01] <brokenchicken> ok :)

[23:03] <brokenchicken> But despite my job title, don't expect incredible things :P

[23:04] <timotimo> as long as it doesn't come out looking like richard dawkins, that should be fine

[23:04] <brokenchicken> hehe :)

[23:14] <timotimo> anyway

[23:14] <timotimo> we found an issue in libtommath that also hits us there

[23:14] <timotimo> and there's already a fix suggested there that prevents our infinite loop

[23:26] <samcv> sometimes i get really amazed when my code works

[23:26] <samcv> if this is right, the UCD database which has most things is 104K which is pretty good

[23:27] <samcv> have a huge tower of if statements though :P

[23:28] <samcv> yeah 107K is really tiny

[23:29] <samcv> look at the minimap :P https://i.imgur.com/CE1yJwF.png

[23:29] <samcv> will have to tweak it. atm it adds an if/else for every range of cp that has >10 cp's with the same values adjacent

[23:29] <timotimo> amazing

[23:29] <samcv> but 107K!!

[23:29] <timotimo> reminds me of the highway that a langton's ant would build

[23:30] <brokenchicken> :o

[23:30] <samcv> from line 20,000 to 70,000

[23:30] <samcv> though a lot of those are brackets and stuff

[23:31] <samcv> it's sorta ridiculous. but it only takes up 107KB :P

[23:32] <timotimo> let's hope that clang doesn't take 10 minutes to compile it

[23:32] <samcv> naw

[23:32] <samcv> it compiles really fast

[23:32] <samcv> like 2 seconds

[23:33] <timotimo> k

[23:33] <samcv> hmm for some reason i bulit for 100 cp and it was off by one, so i subtracted one. but now i do a full build and i get negative index's in the table. hopefully if i remove the adding one and do another full build it won't be off

[23:34] <samcv> err may be another problem since it did print out the numeric value of numbers 0 throug h9 properly by unicode property

[23:43] <samcv> i noticed before i'd get weird things happening if i only generated up to like 100cp or something though
