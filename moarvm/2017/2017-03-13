[00:49] <MasterDuke> and now i've gone even deeper and it looks like i need to create a src/6model/reprs/P6biguint.c

[01:15] <MasterDuke> .ask jnthn if you look at my last couple comments/questions, could you tell me how far off the rails i've gone? thanks

[01:15] <yoleaux2> MasterDuke: I'll pass your message to jnthn.

[06:54] *** domidumont joined
[07:14] <samcv> MasterDuke, what are you referring to?

[08:41] <nwc10> jnthn: good *. The most exciting thing that happened all weekend (because it was the *only* think that happened all weekend): http://paste.scsys.co.uk/557459

[08:42] <nwc10> why do my fingers typo it as "think" ?

[08:48] *** brrt joined
[08:48] <brrt> ohai #moarvm

[09:58] <jnthn> I do that typo too...

[09:58] <yoleaux2> 01:15Z <MasterDuke> jnthn: if you look at my last couple comments/questions, could you tell me how far off the rails i've gone? thanks

[09:58] <jnthn> nwc10: How often does that happen?

[09:58] <jnthn> I hope not "once in the whole weekend" :P

[10:09] * dogbert17_ is sad, the number of SEGV's are at an all time low :)

[10:16] <dogbert17_> o/ btw

[10:23] <nwc10> once. in 3 days

[10:24] <jnthn> Ouch.

[10:34] <dogbert17_> could it be the spesh bug?

[10:38] <jnthn> I suspect so but...this is the only thing we've got that produces it, and it was already very rare

[10:38] <dogbert17_> how would one go about finding a bug like that?

[10:39] <dogbert17_> given that a golf exists I mean

[10:50] <dogbert17_> next qestion, are there any ENV vars or the like available with which you can perhaps make the probability of a bug showing itself increase?

[11:21] <jnthn> MVM_SPESH_NODELAY=1 may make it more likely

[11:22] <jnthn> Though under certain circumstances also risks hiding it

[12:02] <dogbert17_> thx, will try it out

[12:13] * dogbert17_ notes that 10 spectest files have failures when run with MVM_SPESH_NODELAY=1

[12:15] <brrt> dogbert17_: interesting. what happens if you don't run MVM_SPESH_NODELAY, but you 'hotten' them?

[12:16] <dogbert17_> what is 'hotten' in this context, run a bunch of times?

[12:26] <brrt> yes

[12:27] <brrt> well, within the same process

[12:27] <brrt> so that the thing will be speshed+jitted

[12:27] <dogbert17_> running e.g. './perl6 t/spec/S06-currying/misc.t' when MVM_SPESH_NODELAY=1 leads to the following

[12:27] <dogbert17_> ok 9 - Priming :(::T  $a, Array[Positional[T]] $b, Array[Positional[Int]] :$c) with \(1) gave :($b, Array[Positional[Int]] :$c)

[12:27] <dogbert17_> Type check failed in binding to '$b'; expected Any but got T (?)

[12:27] <dogbert17_> in any  at ./blib/Perl6/BOOTSTRAP.moarvm line 1

[12:28] <brrt> MVM_SPESH_NODELAY can expose bugs in spesh, but not necessarily the bug you're interested in or even one that could really happen

[12:29] <dogbert17_> ignore what I wrote above, had forgot to fudge :(

[12:30] <dogbert17_> brrt, i'll try your suggestion if I'm unable to find anything directly :)

[12:31] <dogbert17_> I liked jnthn's comment 'Though under certain circumstances also risks hiding it'

[12:38] <dogbert17_> brrt, jnthn: here are the failing tests, perhaps a spesh bug might be hiding in there. https://gist.github.com/dogbert17/bbbeecfeb348f5f77c2950065758b16c

[13:14] <dogbert17_> oh, 'ok 19 - &anonslurp.assuming((1, 2, "c", Bool::True).Seq)((Bool::True,).Seq) returned expected value ["a1 b2"] \n Segmentation fault'

[13:47] <brrt> interesting

[14:10] *** domidumont joined
[14:11] <dogbert17_> brrt: what do you make of this gdb outpout? https://gist.github.com/dogbert17/e0cd2b873daf267a747c9301b4982707

[14:13] <brrt> flag is unitialized, or flag_map is

[14:13] <brrt> :-)

[14:13] <brrt> interesting

[14:15] <brrt> dogbert17_: can you print out the value of flag_map and flag

[14:17] <brrt> also

[14:17] <brrt> that looks like it's sensitive to env

[14:18] <brrt> i wonder how difficult it'd be to have 'shareable' debug sessions

[14:18] <brrt> either frozen (core dumps) or over the network

[14:21] <brrt> https://developers.googleblog.com/2017/03/xla-tensorflow-compiled.html this is some impressive stuff, btw

[14:26] *** domidumont joined
[15:33] <dogbert17_> brrt, sry was forced to do $work thingies :)

[15:34] <brrt> well, that's important, innit

[15:34] <dogbert17_> (gdb) info locals   # note this is from another run, had closed the previous session

[15:34] <dogbert17_> flag = 0

[15:34] <dogbert17_> flag_map = 0x3 <error: Cannot access memory at address 0x3>

[15:36] <brrt> seems pretty likely that flag_map ain't initialized properly

[15:38] <dogbert17_> there seems to be something 'speshial' going on, unsetting the env var makes the test file pass

[15:38] <brrt> well, that's not very special

[15:38] <brrt> the env var causes an extra allocation

[15:38] <dogbert17_> aha

[15:38] <brrt> so something is being GC'ed without being fully initialized, it would seem

[15:39] <brrt> that's pretty weird, i think

[15:41] <dogbert17_> are you in a position to try it? Could perhaps be something fishy with my setup

[15:44] <brrt> not really, not now

[15:45] <dogbert17_> am beginning to suspect that there's something on my end causing this ...

[16:28] * dogbert17_ but then again maybe not ...

[17:35] <dogbert17> jnthn: here's some ASAN output of what 'might' be a spesh bug: https://gist.github.com/dogbert17/8e96d144505ae8c0434242a852f607d0

[17:54] *** Ven joined
[18:13] *** Ven joined
[18:22] <jnthn> eww, that doesn't look to nice...

[18:23] <jnthn> dogbert17: Normal nursery?

[18:23] <dogbert17> jnthn, yes

[18:25] <timotimo> i've always had as neaking suspicion that callsite lifecycle management would end up problematic at some point

[18:34] *** Ven joined
[18:50] <jnthn> Aye, though I simplified it a bunch a while back

[18:51] <jnthn> So not quite sure how it's going awry this time

[18:53] <dogbert17> on the plus side it should be easy to reproduce

[18:53] *** Ven joined
[19:00] <timotimo> i remember hoelzro struggled with callsites a while back. or maybe that was something else

[19:07] <hoelzro> timotimo: I think so: https://hoelz.ro/blog/hunted-by-a-leak

[19:13] *** Ven joined
[19:17] <[Coke]> hoelzro: I cannot tell when that published. :(

[19:17] <timotimo> oh, indeed

[19:17] <timotimo> that's a pet-peeve of mine

[19:18] <timotimo> when you can't tell what the date on a blog post/article/whatever is

[19:19] * [Coke] reads all the entries, though, nifty

[19:19] <[Coke]> hoelzro++ fixing things and taking names.

[19:24] *** agentzh joined
[19:33] *** Ven joined
[19:37] <hoelzro> oh - maybe I should add that, then?

[19:37] <hoelzro> I read a post once that said you *shouldn't* do that

[19:38] <timotimo> huh?

[19:38] <timotimo> tell me where the author lives, i'll fight them irl!

[19:38] <hoelzro> timotimo: https://training.kalzumeus.com/newsletters/archive/content-marketing-strategy

[19:39] <[Coke]> hoelzro: My best counter example is anything involving rakudo on parrot. You wouldn't want someone to think they were reading the state of the art.

[19:39] <hoelzro> that's a really good point

[19:39] <timotimo> "content marketing strategy"

[19:39] <timotimo> >_>

[19:39] <hoelzro> and considering how fast Moar moves...

[19:39] <hoelzro> timotimo: it was linked from a post about writing a great programming blog

[19:39] <timotimo> if your goal is to make people think your stuff is still relevant by just not telling them when it was written ...

[19:40] <hoelzro> ...which mine is not, so...

[19:40] <hoelzro> maybe I

[19:40] <hoelzro> maybe I'll just add those date.

[19:40] <hoelzro> *dates

[19:40] <hoelzro> jeez

[19:40] <hoelzro> can't type today!

[19:41] <nwc10> it's all the fault of the DST switch?

[19:42] <nwc10> (I forget exactly where you are, but I was thinking the US, but also know that not all parts of the US do the DST dance)

[19:42] <[Coke]> dumb dumb DST. :|

[19:42] <nwc10> UGT to UGT+1

[19:42] <nwc10> I'm not sure how/if that works

[19:42] * [Coke] wonders how amenable NYS would be to a "kill DST" bill.

[19:43] <nwc10> it's somewhat like âˆž + 1

[19:44] <hoelzro> I did indeed do the DST dance =(

[19:47] <hoelzro> ok, publish dates added

[19:47] <hoelzro> ...at the bottom - adding them in a nice place on the top will likely take a little more work

[19:53] *** Ven joined
[19:56] * [Coke] thinks that's fine.

[19:59] <lizmat> datapoint: I haven't been able to crash HARNESS_TYPE=6 make spectest after 30 runs

[20:01] <nwc10> I haven't been able to crash it for 48 hours now

[20:01] <nwc10> it's looking good

[20:07] <timotimo> <3

[20:13] *** Ven joined
[20:19] <timotimo> oooh, the gdb-moar.py can benefit seriously from the debug name featuer

[20:19] <timotimo> feature*

[20:33] *** Ven joined
[20:53] *** Ven joined
[21:05] *** Ven joined
[21:57] *** zakharyas joined
[22:05] <samcv> good *

[22:05] <lizmat> samcv o/

[22:07] <samcv> i'm feeling kind of like writing a case insensitive index op today

[22:10] <lizmat> samcv: go for it!  :-)
