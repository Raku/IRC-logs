[00:14] *** cartwright joined
[01:27] *** quotable6 joined
[01:28] *** quotable6 joined
[01:30] *** quotable6 joined
[01:48] *** ilbot3 joined
[04:44] <Geth> Â¦ MoarVM/coverage: dffbe6593a | (Samantha McVey)++ | tools/update-gh-pages.sh

[04:44] <Geth> Â¦ MoarVM/coverage: Use coverage repo for coverage reports

[04:44] <Geth> Â¦ MoarVM/coverage:

[04:44] <Geth> Â¦ MoarVM/coverage: Should reduce repository size for MoarVM

[04:44] <Geth> Â¦ MoarVM/coverage: review: https://github.com/MoarVM/MoarVM/commit/dffbe6593a

[05:12] *** geekosaur joined
[05:58] <Geth> Â¦ MoarVM/coverage: 672b77e940 | (Samantha McVey)++ | .travis.yml

[05:58] <Geth> Â¦ MoarVM/coverage: Debug

[05:58] <Geth> Â¦ MoarVM/coverage: review: https://github.com/MoarVM/MoarVM/commit/672b77e940

[06:01] <samcv> at all times. that a lot of the time

[06:01] <samcv> sounds neat timotimo

[06:29] *** geekosaur joined
[07:08] <Geth> Â¦ MoarVM/coverage: e29dc1f270 | (Samantha McVey)++ | .travis.yml

[07:08] <Geth> Â¦ MoarVM/coverage: Fix = that should have been !=

[07:08] <Geth> Â¦ MoarVM/coverage: review: https://github.com/MoarVM/MoarVM/commit/e29dc1f270

[09:51] *** eater joined
[10:07] <Geth> Â¦ MoarVM: samcv++ created pull request #581: Merge coverage branch into master

[10:07] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/581

[10:09] <timotimo> right now i get two 404s on https://moarvm.github.io/coverage/

[10:10] <timotimo> i think it needs just a coverage/ in the path before "moar/" and "libmoar/"?

[10:11] <Geth> Â¦ MoarVM/master: 18 commits pushed by (Jonathan Worthington)++, (Samantha McVey)++

[10:11] <Geth> Â¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/40881cdb66...0610b6335d

[10:16] <samcv> yeah.

[10:17] <samcv> because it has only build on the 'coverage' branch

[10:17] <samcv> so it built into https://moarvm.github.io/coverage/coverage/libmoar etc and it has no index.html yet

[10:17] <samcv> i have non master branches build in their own folder

[10:17] <samcv> but don't yet have some automated index file generation for any new branches

[10:18] <samcv> TRAVISSSS

[10:18] <timotimo> oh, ok

[10:18] <samcv> builds were super failing

[10:19] <samcv> cause it tried to pull gh/pull/merge+581 or something and said undefined

[10:19] <samcv> wtf travis. it's not that hard to just clone the repository

[10:19] <samcv> and not cause some gibberish

[10:19] <samcv> not clone a non existant thing

[10:19] <timotimo> urgh

[10:19] <samcv> so this build may fail. idk i restarted them all

[10:20] <samcv> and now it's starting them all super slowly. so maybe travis is being travis

[10:20] <timotimo> i think so, yeah

[10:21] <samcv> ok i think it worked normally this time

[10:22] <samcv> also we can test clang 5 if we want to now. i have a new env var for building with the latest clang on the system

[10:22] <samcv> but probably no need cause the coverage branch will build with latest clang anyway. and all the other ones will use the normally installed verision

[10:22] <samcv> also llvm-cov-5 and llvm-profdata-5 were annoying. all these numbered programs

[10:23] <samcv> and then figuring out what exactly they're named on travis is annoying. but it's all good now

[10:23] <timotimo> i wonder if clang 5 is any faster at compiling interp.c

[10:23] <samcv> i just have find_latest_version () { ls /usr/bin | grep -Ee "^$1(\-[0-9.]+)?$" | sort -r | head -n 1; }

[11:00] <Geth> Â¦ MoarVM: 154e899a9b | (Samantha McVey)++ | tools/update-gh-pages.sh

[11:00] <Geth> Â¦ MoarVM: Improve the commit messages of Travis CI to include git describe

[11:00] <Geth> Â¦ MoarVM:

[11:00] <Geth> Â¦ MoarVM: Also put information on the branch that was built

[11:00] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/154e899a9b

[11:00] <Geth> Â¦ MoarVM: the-eater++ created pull request #582: Also pass cflags when building probe shared object

[11:00] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/582

[11:01] <eater> samcv: ^

[11:02] <samcv> yay

[11:06] <samcv> ok i need to sleep. good night!

[11:06] <samcv> it is way too late

[11:06] <eater> samcv: sleep well :')

[11:37] <Geth> Â¦ MoarVM: cb3f010337 | (Timo Paulssen)++ | tools/update-gh-pages.sh

[11:37] <Geth> Â¦ MoarVM: coverage: merge index files into one big index file

[11:37] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/cb3f010337

[11:38] <timotimo> i hope this works.

[11:39] <eater> that are some nice sed's :'D

[11:39] <timotimo> i don't see a problem with it :P

[11:40] <eater> I was not saying there was a problem :')

[11:40] <timotimo> it's building your pullrequest before it starts my code

[11:41] <timotimo> but wait, how do i trigger it properly ...

[11:41] <timotimo> do i have to poke the gh-pages branch?

[11:42] <timotimo> maybe we'll want to change the target branch to master?

[11:45] <eater> timotimo: whats wrong?

[11:45] <eater> I've pushed a commit before you pushed to master

[11:45] <eater> so first is does my commit

[11:45] <eater> and then yours

[11:46] <timotimo> yeah, it's taking ages because travis

[11:46] <eater> idd :(

[11:46] <timotimo> especially because we have clang

[11:46] <timotimo> and clang is like "wow, this file is really big."

[11:47] <eater> yea

[11:47] <eater> but there is not really a good alternative to travis :/

[11:48] <timotimo> is the coverage option an allowed failure?

[11:49] <timotimo> we should put that in there because otherwise every pull request is going to be rejected

[11:49] <timotimo> because it sees it's a pullrequest, prevents the coverage from being made, and that counts as failure

[11:49] <eater> well its failing on something ele now

[11:50] <eater> oh

[11:50] <eater> iv undefined

[11:50] <eater> if [ "$TRAVIS_PULL_REQUEST" != "false" ];

[11:51] <Geth> Â¦ MoarVM: 86b259fcdd | (Timo Paulssen)++ | .travis.yml

[11:51] <Geth> Â¦ MoarVM: allow coverage to fail (because it'll always fail for pull requests)

[11:51] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/86b259fcdd

[11:51] <eater> that is also an option

[12:00] <eater> timotimo: now lets see

[12:04] <timotimo> i see it's doing its stuff now

[12:08] <timotimo> https://moarvm.github.io/coverage/

[12:08] <timotimo> looks like it works \o/

[12:09] <timotimo> now if there was a little tool that'd indent the html, we could get usable git diff/git log -u output

[12:09] <eater> timotimo: you can load the html in an XML DOM object and then generate it again with indenting

[12:12] *** AlexDaniel joined
[12:37] <timotimo> like, with perl5?

[12:45] <eater> for example

[12:48] <timotimo> feel free to write a script that does that :)

[12:48] <timotimo> or else i'll just write one that seds a \n after every </tr>

[12:51] <eater> whoo

[12:51] <eater> my PR now builds succesfully

[13:54] <timotimo> cool

[13:55] <Geth> Â¦ MoarVM: cc122eacf4 | eater++ | build/probe.pm

[13:55] <Geth> Â¦ MoarVM: Also pass cflags when building probe shared object

[13:55] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/cc122eacf4

[13:55] <Geth> Â¦ MoarVM: 075cd91f92 | eater++ | build/probe.pm

[13:55] <Geth> Â¦ MoarVM: pre-define $ENV{CFLAGS} if not defined

[13:55] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/075cd91f92

[13:55] <Geth> Â¦ MoarVM: 1ec6dca832 | niner++ (committed using GitHub Web editor) | build/probe.pm

[13:55] <Geth> Â¦ MoarVM: Merge pull request #582 from the-eater/fixNonSharedProbeObject

[13:55] <Geth> Â¦ MoarVM:

[13:55] <Geth> Â¦ MoarVM: Also pass cflags when building probe shared object

[13:56] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/1ec6dca832

[14:02] <eater> thanks nine :D

[15:08] <dogbert17> timotimo: you around?

[15:08] <timotimo> yup

[15:08] <dogbert17> I have a stupid c question :)

[15:08] <timotimo> i know all about stupid c

[15:09] <dogbert17> isn't the test at line 307 unnessecary? https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/VMArray.c#L301

[15:09] <timotimo> yeah, uint and < 0

[15:10] <timotimo> it's a bit unfortunate that we are mixing uint and int all over the place

[15:10] <timotimo> but moar currently doesn't really have uint at the bytecode level

[15:10] <geekosaur> turn on blame view nd chase the commits and you'll likely find it used to be int

[15:11] <dogbert17> I'm cppchecking again btw but my c fu is not up to snuff hence the questions :)

[15:12] * nine wonders whether it'd be possible to cache lookups into MVMP6opaqueNameMap. Considering that each attribute access seems to loop through this map to find the attribute slot.

[15:12] <nine> But probably spesh and or the JIT already take care of that

[15:16] <dogbert17> here's another thing I can't wrap my head around: look at the pieces of code starting at 1333 and 1354, are the the same ? https://github.com/MoarVM/MoarVM/blob/master/src/jit/graph.c#L1333

[15:18] <eater> dogbert17: attr vs attrs?

[15:20] <dogbert17> eater++, didn't see that :)

[15:21] <eater> :p had to look for a minute myself too

[15:36] <timotimo> i now have a perl6 script that grabs all the coverage percentages from the html files for every commit in coverage/gh-pages

[15:38] <eater> nice :)

[15:50] <timotimo> it's also rather fast

[16:48] <timotimo> hm, so when i graph stuff, do i graph percentage over time, or just pieces covered over time

[16:48] <timotimo> i.e. when we stay at 100% coverage, but more stuff is covered, should the line stay or go up?

[17:03] *** TimToady joined
[19:40] <samcv> wow nice timotimo https://moarvm.github.io/coverage/ fancy

[19:40] <timotimo> oh! i was just wondering when you'd show up today :)

[19:40] <samcv> very good :)

[19:40] <timotimo> i made something

[19:40] <samcv> all on one page is very nice

[19:41] <timotimo> https://gist.github.com/timo/437c24c85c8c5e4ccfc576a681f00538

[19:42] <timotimo> point it at the .git of your local clone of moarvm/coverage for the "extract" command, then run it with "graph", and it'll create a crapton of png files in your CWD

[19:42] <timotimo> oh, also, it requires an "analysis" folder in its CWD

[19:43] <samcv> wow

[19:43] <timotimo> i was hoping we could set these graphs as background images in the table

[19:46] <samcv> also make sure to not include anything in folders not named `moar` or `libmoar` cause those are probably gonna be other branches that had covenage built

[19:47] <timotimo> it doesn't look into folders at all

[19:47] <timotimo> it reads the index files

[19:47] <samcv> ah ok

[19:47] <samcv> yeah

[19:48] <timotimo> at the moment the data is very boring, though

[19:48] <samcv> yeah i'm sure

[19:48] <timotimo> there's only 4 dates that have data at all

[19:48] <timotimo> and only 3 fields in the whole grid have any change in them

[19:48] <timotimo> strings/utf8_c8.c-line => (31.65 30.96 30.96 30.96)

[19:48] <timotimo> 6model/reprs/VMArray.h-region => (82.73 82.42 82.42 82.73)

[19:48] <timotimo> strings/utf8_c8.c-region => (22.66 21.88 21.88 21.88)

[19:49] <samcv> also what we could do at some point is to do roast coverage and add it to nqp coverage

[19:49] <timotimo> that'd be neat

[19:49] <samcv> if we want to make this test an ignored failure and use fast_finish i *think* though i'm only guessing what that option does for rakudo, that it doesn't wait for those allowed failures to finish before saying it's success or failure

[19:50] <samcv> or could go insane and do it per roast test file

[19:50] <samcv> since it creates files in ./coverage/t/01-blah/blah.t.profraw

[19:50] <samcv> etc for all the test files

[19:50] <timotimo> we could do it when somebody asks for that particular data

[19:51] <samcv> yeah

[19:51] <timotimo> but i'm not sure how we're supposed to present the data we could make from that

[19:51] <samcv> idk a link to all the coverage for all the test.t files?

[19:51] <samcv> would have to be a link

[19:51] <timotimo> i could imagine we could make it in three stages

[19:51] <samcv> to ./overkill directory XD

[19:52] <timotimo> at the outermost we get the data for nqp testsuite + rakudo testsuite

[19:52] <samcv> yah

[19:52] <timotimo> then you can get data for each folder in roast as well as each folder in t/

[19:52] <timotimo> and then you can see data for each individual file

[19:52] <samcv> though combined nqp testsuite + rakudo testsuite is gonna be more useful than the t/blah files for now.

[19:52] <samcv> probably want to save that for a later date

[19:53] <samcv> because it will make a lot of fucking files

[19:53] <timotimo> mhm

[19:53] <samcv> oh timotimo  i can output data as json

[19:53] <samcv> for coverage. but i don't know wtf it outputs. but let me check

[19:54] <timotimo> well, too late, i already parse all the html

[20:01] <samcv> heh

[20:01] <samcv> well. i'm just curious what data it gives

[20:01] <samcv> if i can make this program work >:|

[20:03] <samcv> i added you ability to push to https://github.com/samcv/MoarVM-cover/ though. which is where the things that generate the coverage are kept

[20:05] <timotimo> cool

[20:05] <timotimo> thing is: i've built this in perl6

[20:05] <samcv> that's ok

[20:05] <samcv> we can build perl6 for the coverage branch

[20:05] <samcv> or... use an appimage

[20:05] <timotimo> bleh. i'd rather we grab an appimage or so

[20:05] <samcv> XD

[20:05] <timotimo> yeah

[20:06] <samcv> yeah

[20:06] <samcv> 10MB dl and none other things to setup

[20:06] <timotimo> yeah

[20:06] <timotimo> and it should immediately work with JSON::Fast, too, right?

[20:06] <samcv> just know you need to cd into %*ENV<OWD> at the start

[20:06] <samcv> yepu

[20:06] <timotimo> except i'd really like the newest JSON::Fast ...

[20:06] <samcv> just cd into OWD

[20:06] <samcv> hm

[20:06] <timotimo> or just throw out the intermediate step

[20:07] <timotimo> it doesn't have to roundtrip to disk if we can't keep old data around anyway

[20:07] <samcv> it will still work with older JSON::Fast right?

[20:07] <timotimo> gnuplot is driving me just slightly mad

[20:07] <timotimo> yeah, it'll potentially be slowre, though?

[20:07] <samcv> yeah. nobody will be injured by slowness though

[20:10] <timotimo> gah, gnuplot

[20:10] <timotimo> isn't cooperating

[20:11] <timotimo> you know gnuplot?

[20:11] <samcv> i know of it. but have hardly ever tried to use it

[20:12] <timotimo> oh, that's how it works

[20:14] *** committable6 joined
[20:15] <samcv> also DATE_VERSION_HEADER="$(printf "%s\n%s" "$(date --utc)" "$(./nqp --version 2> /dev/null)" )"

[20:15] <samcv> this is what i use to generate the date_version_header (though env var won't be availible outside the script)

[20:15] <samcv> but you can do DATE_VERSION_HEADER="$(printf "%s\n%s" "$(date --utc)" "$($NQP_FOLDER/nqp --version 2> /dev/null)" )"

[20:15] <timotimo> ok, i got a filled curve now

[20:15] <samcv> since we now have a $NQP_FOLDER variable in travis.ci

[20:16] <samcv> to put at the top of the file

[20:16] <timotimo> what should the curves look like?

[20:16] <samcv> .uh.

[20:16] <timotimo> i want to put it as the background for each cell in the overview grid

[20:16] <samcv> uhm

[20:16] <samcv> dunno. what do you have now

[20:16] <samcv> what are the choices?

[20:17] <timotimo> we can choose the line color, color above and below, transparent is an option, and patterns are also available, as well as half-transparency

[20:19] <timotimo> what kind of screen resolution should we be targeting?

[20:19] <samcv> uhm

[20:19] <timotimo> because when we have these pngs, we need to give each cell a fixed size

[20:19] <samcv> :O

[20:20] <samcv> they're already all the same size

[20:20] <samcv> well sorta

[20:20] <timotimo> "sorta" isn't gonna cut it :)

[20:20] <samcv> idk i haven't measured

[20:20] <samcv> sec

[20:22] <samcv> only the left most one is a diff size

[20:22] <samcv> about 165 px instead of 182

[20:22] <samcv> can't we just have them stretched to fit the size

[20:23] <samcv> but i guess we can change the size or whatever

[20:23] <samcv> also we have a css file

[20:23] <samcv> https://moarvm.github.io/coverage/style.css

[20:23] <timotimo> it'd look terrible :D

[20:23] <samcv> why?

[20:23] <samcv> make them svg?

[20:24] <timotimo> hm, it's possible

[20:25] <timotimo> the svg files are like 10x as big

[20:25] <timotimo> in bytes

[20:25] <samcv> hm

[20:26] <timotimo> and i'm expecting to put all the png files into one big file and optipng the heck out of it

[20:26] <samcv> well. can we start with svg files and not messing with the size of the cells

[20:26] <samcv> and then see how they look

[20:26] <samcv> and can then decide how to size the cells

[20:26] <samcv> or would that be to omuch work

[20:27] <timotimo> it's at least one bunch of work

[20:27] <timotimo> no, two bunches actually

[20:27] <timotimo> another option is to have a small image on the right of each cell

[20:30] <timotimo> now how should that look so it works with all background colors ... alternatively, i can know what background color each cell will get

[20:32] <timotimo> in that case i might want just a solid line instead of filled curve

[20:33] <timotimo> yeah, that'll be fine.

[20:35] <timotimo> i've montaged all the lines into one png file and optipng'd it, now it's only 867 bytes big

[20:35] <timotimo> that can go into a .css file as a data: url

[20:45] * timotimo tries some trickery

[20:54] <samcv> well the colors depend on the coverage

[20:56] <timotimo> of course

[20:56] <timotimo> i know the numbers, though

[20:56] <timotimo> so i know the color

[20:58] <timotimo> now to put img tags everywhere ...

[21:04] <timotimo> how annoying.

[21:04] <timotimo> vim macro to the rescue, hopefully

[21:08] <samcv> hah

[21:09] <timotimo> nah, i search-replaced it, but how do i do the thing with the right numbers :\

[21:12] <samcv> do the thing?

[21:12] <samcv> oh

[21:12] <samcv> just check their shading

[21:12] <samcv> ? idk

[21:12] <samcv> you wanted the numbers on top of the graphs right?

[21:12] <timotimo> not necessarily

[21:13] <timotimo> did you see irclog.perlgeek.de, the main page?

[21:20] <timotimo> i'm having a hard time making it obvious where the 0 line is

[21:22] <timotimo> the heck did i do now? o_O

[21:25] <timotimo> i was getting a bit tripped up by the "- (0/0)" entries

[21:29] <timotimo> this ain't half bad

[21:31] <timotimo> except i'm still tripping over the "- (0/0)" entries for some reason :\

[21:32] <timotimo> aha!

[21:32] <timotimo> there's no space in front at all

[21:33] <timotimo> hm, do i get one for TOTALS at all ...

[21:34] <timotimo> nope, it doesn't have an <a> tag so i'm skipping it

[21:34] <timotimo> i shouldn't

[21:36] <timotimo> https://imgur.com/a/DKzJj - samcv check it out!

[21:38] <timotimo> i should fake up some values there %)

[21:40] <timotimo> yup, fake random data coming right up

[21:41] <timotimo> same link

[21:45] <timotimo> added one more file with 60px wide graphs instead of 30px, also with a space between image and text

[21:48] <timotimo> https://gist.github.com/timo/437c24c85c8c5e4ccfc576a681f00538 - my code again

[21:55] <timotimo> with the legit data, where it hardly changes at all, the image gets optimized down to 2 kb, with noise data it goes up to 64kb, which is still 20kb less than the html file itself

[22:09] <samcv> gonna get some tea

[22:09] <samcv> oh mah gawd

[22:09] <samcv> beautiful

[22:11] <timotimo> isn't it!

[22:11] <timotimo> i'm just now modifying it so that it can also accept html files where the img tags are already put in

[22:11] <samcv> gotta remove the Generated by llvm-cov and replace with Generated by llvm-cov and *magic*

[22:12] <timotimo> oooh, is there an emoji that's basically magic sparkles?

[22:12] <timotimo> might continue working on this once we have some actual data points :)

[22:13] <timotimo> like when you add rakudo's test folder or maybe even roast to the mix

[22:48] *** AlexDaniel joined
[23:57] <timotimo> samcv: i wish i had the same kind of energy for writing that C code in UCD %)

[23:57] <timotimo> but for now i'll sleep soon

[23:57] <samcv> me too

[23:57] <samcv> kk :)

[23:58] <samcv> thank you for magic!

[23:58] <timotimo> it'll be much more fun to write that code when you get paid :)

[23:58] <timotimo> community support seems strong for your application

[23:59] <samcv> very much so

[23:59] <samcv> hahaha
