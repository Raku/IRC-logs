[00:40] *** colomon_ joined
[01:50] *** ilbot3 joined
[04:41] *** cartwright joined
[05:30] *** sivoais joined
[05:31] *** sivoais joined
[05:32] *** brrt joined
[05:46] *** domidumont joined
[05:52] *** domidumont joined
[06:41] *** brrt joined
[07:06] *** lizmat joined
[07:12] <brrt> good * #moarvm

[07:13] <nwc10> good *, brrt

[07:13] <brrt> ohai nwc10

[07:13] <brrt> i was clever enough, if i say so myself, to resolve the coffee situation before heading to the office this morning

[07:15] <nwc10> I managed not to be clumsy today

[07:35] *** zakharyas joined
[07:52] <brrt> something is broken in sp_p6ogetvt_o

[07:52] <brrt> so it's jit log and assembly checking time

[08:20] <samcv> good * brrt

[08:24] <brrt> ohai samcv

[08:24] <samcv> hey :)

[08:24] <samcv> got my graphemebreaktest PR to roast, it uses grammar to parse the test file

[08:24] <samcv> pretty fun

[08:25] <samcv> and i just put the unicode test file inside 3rdparty of roast because easier for people to refer to it. and doesn't take much extra time to process it anyway

[08:25] <samcv> like a sec to run the whole test

[08:55] <jnthn> heh, read that as grapheme breakfast...

[09:20] <samcv> yum

[09:20] <samcv> jnthn, can you check the file layout here https://github.com/perl6/roast/pull/267/files

[09:21] <samcv> this PR is ready to go. but i wanted to ask somebody about the layout of the LICENSE file before merging it

[09:21] <samcv> and the 3rdparty stuff

[09:39] <jnthn> samcv: Just taken a look, don't see anything on concern. +1

[09:39] <jnthn> *of

[09:39] <samcv> yay ok gonna merge

[09:40] <samcv> this is much more better than the old one

[09:40] <samcv> lemme see how many false positives it found. it was at least a couple

[09:41] <samcv> ok got 4 false positives

[10:33] *** robertle joined
[10:40] *** robertle_ joined
[11:03] *** zostay joined
[11:06] <brrt> i'm overwriting a live value!

[11:06] <brrt> wtf!

[11:06] <timotimo> whoops, that's not nice

[11:06] <timotimo> isn't there a law against that?

[11:06] <brrt> well, law enforcement is clearly lacking

[11:09] <brrt> also, adium, fuuuu

[11:09] <brrt> why don't font sze increase just ‚Ä¶ work!

[11:11] <timotimo> ugh, fonts

[11:15] <brrt> yeah, i'm considering swithcin over to irssi

[11:15] <timotimo> weechat, please? :P

[11:16] <brrt> is weechat better somehow/

[11:16] <brrt> ?

[11:16] <timotimo> it's the best, actually ;)

[11:17] <brrt> obviously

[11:17] <brrt> but

[11:17] <brrt> if you go to irrs.i.org

[11:17] <brrt> *ahem*

[11:17] <brrt> irssi.org

[11:17] <brrt> you'll notice one of the screen shots

[11:17] <brrt> has BeOS stying

[11:17] <brrt> and with regards to BeOS, I say, screw open source

[11:18] <brrt> if I could switch to that today, I would

[11:19] * timotimo waits for that screenshot to appear

[11:19] <timotimo> if you like beos, why not try haiku? ;)

[11:20] <brrt> haiku isn't as good....

[11:20] <brrt> but yeah

[11:20] <timotimo> have you tried it? i have only very briefly tried it :(

[11:20] <timotimo> have you heard of Zeta? it's been on a german teleshopping channel for many years

[11:20] <brrt> heard of it

[11:21] <timotimo> i believe it's in some way based on BeOS?

[11:22] <timotimo> hm. maybe it's time to try rakudo on haiku

[11:22] <brrt> yeah, it's BeOS 6 that was never released or something

[11:24] <brrt> anyway, what's better about weechat, then

[11:25] <timotimo> it has a few cool features right out of the box. one of them is an "intelligent" filter that throws out uninteresting joins/parts/quits

[11:25] <brrt> oh, that's nice

[11:25] <timotimo> you can combine buffersin a way that lets you either see all messages intertwined or show only one and switch between which one you see

[11:26] <timotimo> it comes with something that handles scripts out of the box, whereas in irssi you'd always install scriptassist first

[12:05] <timotimo> btw, there's a bunch of things missing from libuv for haiku in particular

[12:05] <timotimo> so no moarvm for haiku just yet

[12:15] <brrt> yeah, haiku is'nt very mature atm

[12:15] <brrt> or has ever been very mature

[12:35] *** Zoffix joined
[13:54] <Geth> ¬¶ MoarVM/lizmat-patch-1: 08b813699f | lizmat++ (committed using GitHub Web editor) | src/math/bigintops.c

[13:54] <Geth> ¬¶ MoarVM/lizmat-patch-1: Remove workaround for tommath issue $56

[13:54] <Geth> ¬¶ MoarVM/lizmat-patch-1:

[13:54] <Geth> ¬¶ MoarVM/lizmat-patch-1: As fas as I know, we're upgraded tommath and the issue there is fixed.

[13:54] <Geth> ¬¶ MoarVM/lizmat-patch-1:

[13:54] <Geth> ¬¶ MoarVM/lizmat-patch-1: If we didn't upgrade yet, maybe we should also have a libtommath upgrade ?

[13:54] <Geth> ¬¶ MoarVM/lizmat-patch-1: review: https://github.com/MoarVM/MoarVM/commit/08b813699f

[13:55] <Geth> ¬¶ MoarVM: lizmat++ created pull request #595: Remove workaround for tommath issue $56

[13:55] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/595

[14:26] *** lizmat joined
[15:05] *** brrt joined
[15:31] <nine> BeOS is great. Was great. In the 90s. Compared with the alternatives back then. On a current 8 core hyperthreading system where you really have to balance performance vs. power saving with highly dynamic hardware configuration? Probably not so much anymore...

[15:35] <MasterDuke_> has anyone read "in the beginning was the command line"? definitely made me want to try out BeOS at the time

[15:37] <brrt> yeah,you're absolutely correct nine

[15:37] <brrt> it's irrationalism from my side

[16:20] *** domidumont joined
[16:30] *** domidumont1 joined
[16:50] *** domidumont joined
[18:03] *** praisethemoon joined
[18:22] *** brrt joined
[18:24] *** ggoebel joined
[18:28] <brrt> ‚Ä¶ it must be my heap

[18:32] <jnthn> Is fixing that your top priority?

[18:32] <jnthn> Oh wait, the heap's bust so you can't answer that ;P

[18:35] <Geth> ¬¶ MoarVM: 08b813699f | lizmat++ (committed using GitHub Web editor) | src/math/bigintops.c

[18:35] <Geth> ¬¶ MoarVM: Remove workaround for tommath issue $56

[18:35] <Geth> ¬¶ MoarVM:

[18:35] <Geth> ¬¶ MoarVM: As fas as I know, we're upgraded tommath and the issue there is fixed.

[18:35] <Geth> ¬¶ MoarVM:

[18:35] <Geth> ¬¶ MoarVM: If we didn't upgrade yet, maybe we should also have a libtommath upgrade ?

[18:35] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/08b813699f

[18:35] <Geth> ¬¶ MoarVM: 6d5ea042fd | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/math/bigintops.c

[18:35] <Geth> ¬¶ MoarVM: Merge pull request #595 from MoarVM/lizmat-patch-1

[18:35] <Geth> ¬¶ MoarVM:

[18:35] <Geth> ¬¶ MoarVM: Remove workaround for tommath issue $56

[18:35] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/6d5ea042fd

[18:37] *** Ven joined
[18:58] *** AlexDaniel joined
[19:16] <samcv> anyone know if there's any issues on windows where shell needs to be used and run cannot?

[19:17] <samcv> due to path issues. launching another perl 6 process. it should be fine to substitute run for shell right?

[19:22] *** Ven joined
[19:23] <samcv> well regardless. it used shell piping before. and that is not even a windows thing. so should be fine to switch to run

[19:23] <samcv> idk why people like using shell so much

[19:23] <samcv> convenience maybe?

[19:24] <samcv> also had non-posix shell redirection as one of them too

[19:24] <samcv> using &>

[19:27] <samcv> no wonder it doesn't work for me :\

[19:29] *** Ven_ joined
[19:33] <AlexDaniel> samcv: shell is a wrong answer pretty much always

[19:34] <AlexDaniel> and people use it because they can't be bothered to think 5 seconds on how to write it properly

[19:35] *** Ven_ joined
[19:35] *** zakharyas joined
[19:36] <samcv> yeah i agree

[19:37] <samcv> pod-render broke itself on files with spaces in it

[19:37] <samcv> plus anything with single quotes

[19:37] *** zakharyas joined
[19:37] <samcv> $PRESENT-YEAR please no :(

[19:39] <samcv> and plus the nonposix shell argh

[19:39] <samcv> especially when using piping and you don't even have it be compatible

[20:01] *** Ven_ joined
[20:07] <AlexDaniel> samcv: it's good that this channel is not very crowdy

[20:07] <AlexDaniel> otherwise we would have tons of shit poured on us by shell apologetics

[20:08] <timotimo> huh?

[20:08] <samcv> heh

[20:09] <samcv> well that PR is sent off.

[20:09] <samcv> making the world a better place

[20:09] <samcv> ‚Ñ¢

[20:13] *** praisethemoon_ joined
[20:37] *** praisethemoon joined
[20:41] <AlexDaniel> u: right to left

[20:41] <unicodable6> AlexDaniel, U+200E LEFT-TO-RIGHT MARK [Cf] (‚Äé)

[20:41] <unicodable6> AlexDaniel, U+200F RIGHT-TO-LEFT MARK [Cf] (‚Äè)

[20:41] <unicodable6> AlexDaniel, 16 characters in total: https://gist.github.com/1b447227da50f40beb65d10b00a26485

[20:44] <AlexDaniel> quotable6: / ‚Äú\x[202E]‚Äù /

[20:45] <quotable6> AlexDaniel, https://gist.github.com/bcbad1dcd53bc60ed985061adb50e65e

[20:47] *** brrt joined
[21:00] <brrt> yes, fixing the heap is the top priority

[21:01] <brrt> (binary heap, not as in, memory heap)

[21:02] <brrt> and i know why it happens

[21:02] <brrt> which is, i think, awesomely exciting

[21:03] <timotimo> \o/

[21:03] <brrt> it happens because when i merge live ranges, one is left 'empty', and ignroed for further processing

[21:03] *** Ven joined
[21:03] <brrt> however, empty live ranges have a 'first reference order number' of MAX_INT32

[21:03] <brrt> which completely violates the heap property

[21:04] <timotimo> oops :)

[21:04] <brrt> yes

[21:05] <brrt> the heap property is, without such 'mergers' to take into account, guaranteed by the linear order of adding the live ranges to the heap, e.g. a sorted array is also a heap

[21:05] <brrt> but, if we 'empty' the items in between, well, that ends it doesn't it

[21:07] <brrt> now, how to resolve it

[21:09] <brrt> a single linear compaction step over the worklist; or, remove the items from the heap during processing

[21:10] <brrt> lemmethink

[21:12] <brrt> removing during processing means we have to find the items in the worklist. which means that we must either track it (in the LiveRange structure itself) or find it. heap find is linear in the average case, which means that the total complexity must be greater than the single compaction step

[21:12] <brrt> the compaction step it is

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: b4ea47c862 | (Bart Wiegmans)++ | src/jit/linear_scan.c

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: Don't spill values that are in a hole

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit:

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: This would cause a 'garbage-restore' problem, in which a garbage value

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: could potentially overwrite a good one.

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/b4ea47c862

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: 79062b031d | (Bart Wiegmans)++ | src/jit/linear_scan.c

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: Remove empty live ranges from worklist

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit:

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: As a result of the merger of multiple live ranges, one live range ends

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: up as empty, which are defined as having a first reference of

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: MAX_INT32. This violated the initial heap structure of the

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: worklist (which I had assumed was being held by construction. A

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: compaction step has been added to remove empty live ranges and restore

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: heap order.

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/79062b031d

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: d7fee2ae77 | (Bart Wiegmans)++ | 3 files

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: Add sp_p6ogetvt_o

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit:

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: Relatively large and complex op, now compiles correctly owing to the

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: earlier fix for maintaining the heap order.

[21:46] <Geth> ¬¶ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/d7fee2ae77

[21:50] <timotimo> oh no

[21:50] <timotimo> you opened a ( but didn't close it!

[21:52] <samcv> )

[21:52] <brrt> ouch, and now it is on the record forever

[21:52] <brrt> whatever are we to do

[21:52] <samcv> there's always force push

[21:52] <brrt> hehe

[21:52] <samcv> nobody saw it

[21:53] <samcv> or if they say they saw it we'll make this disappear

[21:53] <samcv> s/this/them

[21:53] <brrt> or, we have to live with the shame

[21:54] <brrt> well, i'll live with the shame

[21:54] <timotimo> please be so kind and force-push

[21:54] <timotimo> i almost can't bear it

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: b1d371804f | (Bart Wiegmans)++ | src/jit/linear_scan.c

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: Remove empty live ranges from worklist

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit:

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: As a result of the merger of multiple live ranges, one live range ends

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: up as empty, which are defined as having a first reference of

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: MAX_INT32. This violated the initial heap structure of the

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: worklist which I had assumed was held by construction. A compaction

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: step has been added to remove empty live ranges and restore the

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: heap order.

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/b1d371804f

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: 5d556adb85 | (Bart Wiegmans)++ | 3 files

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: Add sp_p6ogetvt_o

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit:

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: Relatively large and complex op, now compiles correctly owing to the

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: earlier fix for maintaining the heap order.

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/5d556adb85

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: 536dc184d2 | (Bart Wiegmans)++ | 9 files

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: Merge remote-tracking branch 'origin/master' into even-moar-jit

[22:03] <Geth> ¬¶ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/536dc184d2

[22:03] <brrt> you've got it timotiomo

[22:06] <timotimo> that's better, thanks

[22:08] <brrt> glad to be of service

[22:09] <timotimo> now that p6ogetvt_o is in there, can we add a bunch more stuff, too?

[22:09] *** colomon_ joined
[22:10] <brrt> i'm going to look at adding function calls with return values

[22:10] <brrt> sp_fastcreate is high on the list

[22:11] <brrt> if that works‚Ä¶ i don't see much in the way of blockers left

[22:11] <brrt> except for sleep

[22:11] <brrt> see you tomorrow

[22:12] <timotimo> ah, the jit still won't grab return values off of c function calls, gotcha

[22:52] *** lizmat joined
[23:20] <AlexDaniel> wait, what? force-push?

[23:20] <AlexDaniel> bloatable6: HEAD^,HEAD

[23:20] <bloatable6> AlexDaniel, https://gist.github.com/7f782ebaee2db79d691637bfcb5619fb

[23:21] <AlexDaniel> ah, not a master branch

[23:21] <AlexDaniel> so should be fine

[23:32] *** lizmat_ joined
