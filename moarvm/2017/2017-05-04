[01:49] *** ilbot3 joined
[02:37] <Geth> ¦ MoarVM: MasterDuke17++ created pull request #590: Remove arbitrary string repeat limit

[02:37] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/590

[03:04] *** jpg51 joined
[03:06] *** ilmari_ joined
[03:14] *** robertle joined
[03:19] *** Zoffix joined
[05:10] *** AlexDaniel joined
[05:25] *** colomon joined
[05:45] *** brrt joined
[05:46] <brrt> good *, #moarvm

[06:27] <samcv> good ** brrt

[06:27] <samcv> MasterDuke_, you around

[06:47] *** brrt joined
[07:24] *** geekosaur joined
[07:32] *** domidumont joined
[07:38] *** domidumont joined
[07:45] *** domidumont joined
[07:49] *** zakharyas joined
[09:01] *** robertle joined
[09:10] *** colomon joined
[09:52] *** geekosaur joined
[11:21] <MasterDuke_> samcv: am now

[12:55] *** geekosaur joined
[13:08] *** geekosaur joined
[14:14] *** AlexDaniel joined
[14:33] *** AlexDaniel joined
[15:07] *** brrt joined
[15:10] *** hoelzro joined
[15:10] *** brrt joined
[15:38] *** ZofBot joined
[16:55] *** robertle joined
[16:58] *** jpg5 joined
[17:58] *** colomon joined
[19:37] *** AlexDaniel joined
[20:56] *** Ven joined
[21:35] *** sivoais joined
[21:42] <samcv> oh hey MasterDuke_

[21:51] <samcv> MasterDuke_, well i put some coments on your PR

[22:41] *** stmuk joined
[22:50] *** SourceBaby joined
[22:53] *** SourceBaby joined
[23:02] <timotimo> the only thing we're really using HLL for at the moment for the heap dump is turning the string heap into a json blob, fwiw

[23:02] <timotimo> that'd be doable in C, too.

[23:19] *** SourceBaby joined
[23:20] <samcv> timotimo, what do we use that json blob for?

[23:21] <timotimo> we're just using it for its escaping abilities, really

[23:21] <samcv> oh

[23:21] <samcv> we could do thta in c

[23:21] <timotimo> yeah

[23:22] <samcv> what specifically do we use it for?

[23:22] <timotimo> it stores every string the heap dump needs (no strings from the user program are in there, though)

[23:23] <samcv> m:  use nqp; nqp::escape('\hi').say

[23:23] <camelia> rakudo-moar f2af3d: OUTPUT: «\\hi␤»

[23:24] <samcv> m:  use nqp; nqp::escape(Q’  \  \ / ' " _-abcd         ’ ~ "\n").say

[23:24] <camelia> rakudo-moar f2af3d: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Use of a closing delimiter for an opener is reserved␤at <tmp>:1␤------> use nqp; nqp::escape(Q⏏’  \  \ / ' " _-abcd         ’ ~ "\n").s␤»

[23:24] <samcv> m:  use nqp; nqp::escape(Q‘  \  \ / ' " _-abcd         ’ ~ "\n").say

[23:24] <camelia> rakudo-moar f2af3d: OUTPUT: «  \\  \\ / ' \" _-abcd         \n␤»

[23:25] <samcv> m:  use nqp; nqp::escape(Q‘  \  \ / ' " _-abcd         ’ ~ "\n\r\a" ~ "\x[0]").say

[23:25] <camelia> rakudo-moar f2af3d: OUTPUT: «  \\  \\ / ' \" _-abcd         \n\r\a␀␤»

[23:25] <samcv> doesn't escape null apparently

[23:25] <samcv> should it?

[23:26] <samcv> that seems pretty important

[23:27] <timotimo> not sure we can just use nqp::escape for that?

[23:27] <timotimo> like, will a json parser accept stuff with that?

[23:29] <samcv> you can't have \0 in json

[23:29] <samcv> i mean

[23:29] <samcv> can't have the null character actually printed

[23:29] <samcv> so it's only supposed to escape for json?

[23:30] <samcv> m: use nqp; say nqp::escape('"')

[23:30] <camelia> rakudo-moar f2af3d: OUTPUT: «\"␤»

[23:31] <samcv> m: use nqp; say nqp::escape('\\')

[23:31] <camelia> rakudo-moar f2af3d: OUTPUT: «\\␤»

[23:31] <samcv> m: use nqp; say nqp::escape('/')

[23:31] <camelia> rakudo-moar f2af3d: OUTPUT: «/␤»

[23:33] <samcv> m: use nqp; say nqp::escape('"\ ' ~ "\0" ~ "\a")

[23:33] <camelia> rakudo-moar f2af3d: OUTPUT: «\"\\ ␀\a␤»

[23:33] <samcv> timotimo, \a isn't a json thing...

[23:33] <samcv> so idk why you think it's a json escaper?

[23:33] <samcv> is it supposed to be?

[23:34] <samcv> m: '"'.encode.say

[23:34] <camelia> rakudo-moar f2af3d: OUTPUT: «utf8:0x<22>␤»

[23:36] <timotimo> it's not supposed to be a json escaper

[23:36] <timotimo> but the heapsnapshot contains a json list with only strings in it in the first line

[23:36] <timotimo> if we create that with nqp::escape, it could get us into a little bit of trouble

[23:39] <samcv> trouble how?

[23:39] <samcv> you mean instead of HLL?

[23:40] <samcv> because nqp::escape is not a json escaper? sorry a bit confused

[23:44] <timotimo> yeah, when you escape stuff with nqp::escape and write it to disk and a json parser tries to read it, things won't come out the same

[23:44] <samcv> yeah of course

[23:45] <samcv> json escaper isn't that hard in C right

[23:45] <samcv> just look for characters
