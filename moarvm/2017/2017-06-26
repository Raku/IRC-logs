[00:03] <samcv> good * moarvm

[01:48] *** ilbot3 joined
[03:15] <MasterDuke> .tell nine i think i got the same segfault as you when trying to profile compiling rakudo, https://rt.perl.org/Ticket/Display.html?id=131653

[03:15] <yoleaux> MasterDuke: I'll pass your message to nine.

[04:22] *** geekosaur joined
[04:59] <samcv> well this could work https://gist.github.com/f4db547ef71ad9572ff0a6b5c54dedfb trying it and the calculation is pretty close without hiving to do binary search afterward

[04:59] <yoleaux> 02:53Z <[Coke]> samcv: node-gyp is borked: https://github.com/nodejs/node-gyp/issues/695#issuecomment-310951976

[05:59] *** brrt joined
[06:20] <brrt> ohai #moarvm

[06:20] <brrt> so, i've figured out that the expr JIT doesn't support OSR yet

[06:21] <brrt> i suppose that shoul'dve been more obvious than i though

[06:21] <brrt> t*

[06:23] *** domidumont joined
[06:29] *** domidumont joined
[07:16] *** zakharyas joined
[07:16] *** brrt joined
[07:48] *** KDr2__ joined
[07:51] *** dogbert2 joined
[08:03] *** ilbot3 joined
[08:18] *** domidumont joined
[08:45] <jnthn> morning, #moarvm o/

[08:45] <brrt> morning jnthn

[08:46] <brrt> say, i've been mulling a bit about the OSR problem

[08:46] <brrt> two conclusions stand out

[08:46] <brrt> - i should have a function to add an OSR label callable from expr tree buidling

[08:46] <brrt> - i should make the expr tree builder support such intenral labels

[08:47] <brrt> and the corollary to that second point

[08:47] <brrt> - once we have internal labels, there is very little stopping us from having the expr tree builder consuming entire graphs

[08:48] * jnthn ponders what the OSR stuff actually needs from the JIT

[08:48] <brrt> well, it's the other way around really

[08:48] <brrt> the JIT needs to set up stuff so that it can invoke OSR

[08:48] <brrt> eh

[08:48] <brrt> OSR can work on it

[08:48] <jnthn> It's the interpreter that triggers OSR though

[08:48] <jnthn> Then we just jump in to the code

[08:48] <brrt> yeah. and i have reason to believe that's currently broken with the expr JIT

[08:48] <jnthn> So yeah, the JIT needs to make it so we can do that

[08:49] <brrt> :-)

[08:49] <jnthn> Though I figured that wasn't much different than being able to jump back into code when we took it off the stack for other reasons.

[08:49] <brrt> it is the same process

[08:49] <brrt> that jit_entry_label was one lucky guess, really, as far as design decisions go

[08:51] <jnthn> Aye, so I guess my surprise boils down to "wouldn't the expr JIT already be handling that label stuff anyway" :-)

[08:51] <jnthn> Or "if those are left to the lego JIT then why isn't the OSR case also" :)

[08:52] <brrt> well, then we are facing the same question, really :-)

[08:52] <brrt> because, i don't know why that is just yet

[08:53] <jnthn> ah, OK

[08:56] <brrt> okay, hmmm

[08:56] <brrt> the sp_fastcreate i was thinking of, doesn't have an OSR annotation associated at all

[08:58] <Geth> Â¦ MoarVM: 3a4c23eca4 | (Jonathan Worthington)++ | src/io/syncfile.c

[08:58] <Geth> Â¦ MoarVM: Remove pipeable implementation in syncfile.

[08:58] <Geth> Â¦ MoarVM:

[08:58] <Geth> Â¦ MoarVM: This is dead code after the removal of synchronous processes. Leave

[08:58] <Geth> Â¦ MoarVM: the I/O vtable slot behind in io.h, since it'll soon be repurposed.

[08:58] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/3a4c23eca4

[09:10] <brrt> and, the bindkey_o later, doesn't either

[09:11] <brrt> hmm

[09:11] <brrt> so this is something fishier still

[09:32] <Geth> Â¦ MoarVM: a4f7c84693 | (Jonathan Worthington)++ | src/types.h

[09:32] <Geth> Â¦ MoarVM: Clean up some leftovers in types.h.

[09:32] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a4f7c84693

[09:32] <Geth> Â¦ MoarVM: f46a06eb24 | (Jonathan Worthington)++ | 4 files

[09:32] <Geth> Â¦ MoarVM: Provide way to get async handle from IO handle.

[09:32] <Geth> Â¦ MoarVM:

[09:32] <Geth> Â¦ MoarVM: So that we can make `permit` work correctly on the async proc handle.

[09:32] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f46a06eb24

[10:11] *** robertle joined
[10:14] <Geth> Â¦ MoarVM: d0dd989589 | (Jonathan Worthington)++ | src/gc/roots.c

[10:14] <Geth> Â¦ MoarVM: Make sure that we mark the permit queue.

[10:14] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d0dd989589

[10:14] <Geth> Â¦ MoarVM: 10f4840ad9 | (Jonathan Worthington)++ | src/io/eventloop.c

[10:14] <Geth> Â¦ MoarVM: Correct thinkos in permit handling.

[10:14] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/10f4840ad9

[10:48] *** DeadDelta joined
[15:08] *** ilbot3 joined
[15:47] *** robertle_ joined
[15:59] *** greppable6 joined
[15:59] *** greppable6 joined
[16:47] *** greppable6 joined
[17:11] *** domidumont joined
[19:35] *** ChanServ joined
[20:41] *** vendethiel joined
[20:46] *** Ven joined
[20:57] *** Ven_ joined
[22:18] *** vendethiel- joined
[22:36] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/06/26/2017-26-half-way-there/

[22:37] *** dogbert2 joined
