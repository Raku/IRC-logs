[00:14] *** colomon joined
[00:15] *** lizmat joined
[00:24] *** colomon joined
[00:47] *** colomon_ joined
[01:49] *** ilbot3 joined
[03:01] *** vendethiel joined
[05:25] *** domidumont joined
[05:30] *** domidumont joined
[06:01] *** domidumont joined
[06:13] *** vendethiel- joined
[07:24] *** lizmat joined
[07:36] *** zakharyas joined
[07:49] *** domidumont joined
[07:50] *** brrt joined
[07:52] *** domidumont joined
[07:56] *** brrt joined
[08:27] *** robertle joined
[08:28] <brrt> good * #moarvm

[08:39] *** domidumont joined
[08:43] <jnthn> morning o/

[08:43] <yoleaux> 14 May 2017 21:24Z <MasterDuke_> jnthn: do you have an opinion re https://rt.perl.org/rt3/Public/Bug/Display.html?id=131310 ? should subsets of native types be allowed?

[09:02] *** domidumont joined
[09:04] <jnthn> .tell MasterDuke_ It'll probably be tricky to make them work in the general case (think native arrays, for example; I'm not immediately sure how we'd make them work in that case). I suspect getting them correct even on simple variables will be a bit tricky. So, maybe some day, but it won't be entirely easy.

[09:04] <yoleaux> jnthn: I'll pass your message to MasterDuke_.

[09:04] <brrt> \o jnthn

[09:05] <jnthn> o/ brrt

[09:06] <brrt> i think i know where my bug is

[09:06] <brrt> you are not expected to know what bug i'm talking about, since i haven't quite explained it

[09:07] <jnthn> This isn't the heap one still, I presume? :-)

[09:08] <brrt> no, that's been fixed

[09:08] <brrt> but the tl;dr, decont is givng me considerable problems because it is invokish

[09:08] <brrt> and the invokish guard requires two registers, and we only have one scratch register

[09:09] <brrt> and the upshot is that i think now that i've requested a register to be allocated, then the arglist / call required register resolution doesn't quite work right

[09:10] <brrt> and that may be caused because â€¦ ugh

[09:10] <brrt> it's complicated

[09:10] <brrt> well, there may be two causes

[09:10] <brrt> a): the resolution logic is just wrong

[09:12] <brrt> b): the resolution logic is correct, but it doesn't take into consideration the possibility that the live range for the CALL registe rhas been spilled

[09:12] <brrt> b): has a simple resolution

[09:12] <brrt> but i first would need to confirm it

[09:13] <brrt> ultimately it manifest as overwriting the register that is supposed to handle the object on which we call the fetch() pointer

[09:16] <jnthn> Oops.

[09:39] *** domidumont joined
[09:42] *** domidumont joined
[10:10] <brrt> yeah

[10:10] <brrt> the trick is figuring out how

[11:26] *** domidumont1 joined
[11:32] *** brrt joined
[11:33] *** brrt joined
[12:00] *** domidumont joined
[12:02] *** domidumont joined
[12:32] *** domidumont joined
[12:36] *** domidumont1 joined
[15:31] *** AlexDaniel joined
[15:49] *** AlexDaniel joined
[16:09] *** brrt joined
[16:21] *** lizmat joined
[16:31] *** domidumont joined
[16:32] *** vendethiel joined
[17:41] *** praisethemoon joined
[17:41] *** praisethemoon joined
[17:50] *** robertle joined
[17:56] *** AlexDaniel joined
[18:49] *** lizmat joined
[19:05] *** colomon joined
[19:07] *** lizmat joined
[19:20] *** lizmat joined
[19:59] *** Ven joined
[20:01] *** lizmat_ joined
[20:05] *** Ven_ joined
[20:11] *** Ven_ joined
[20:36] *** Ven joined
[20:41] *** Ven_ joined
[20:47] *** Ven_ joined
[20:49] *** lizmat_ joined
[21:00] *** lizmat joined
[21:20] *** lizmat joined
[21:55] *** SourceBaby joined
[22:45] *** TimToady joined
