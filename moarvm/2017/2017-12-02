[00:43] *** patrickz_ joined
[00:59] *** evalable6 joined
[03:35] *** ilbot3 joined
[05:10] *** reportable6 joined
[09:29] *** domidumont joined
[09:36] *** domidumont joined
[10:39] *** reportable6 joined
[10:49] *** reportable6 joined
[10:50] *** reportable6 joined
[10:52] *** reportable6 joined
[14:07] <nine> Oh boy... inline_in_place is completely broken after rebase on current master. On the "bright" side, it can be partly recovered by disabling the JIT

[14:24] <jnthn> nine: I suggest going carefully through the exception changes I did - which in theory resolve a big problem that inline_in_place would have suffered

[14:25] <jnthn> I realized that moving the inlines to be in-place would break resolution of lexical handlers, because some that should not have been visible would become visible

[14:25] <jnthn> Well, I realized this when looking into the problems introduced by letting lastexpayload be inlined

[14:26] <jnthn> Which tripped over the issue anyway

[14:27] <jnthn> Also there was a mechanism to try and resolve this but it was busted

[14:27] <jnthn> The breakage hidden by refusing to inline lastexpayload

[14:30] *** domidumont joined
[15:44] *** domidumont joined
[17:38] *** patrickz joined
[17:43] *** patrickz joined
[17:49] *** patrickz_ joined
[17:54] *** patrickz joined
[17:59] *** patrickz joined
[18:09] *** patrickz joined
[18:14] *** patrickz joined
[18:24] *** patrickz joined
[18:36] *** patrickz_ joined
[18:50] *** patrickz joined
[18:59] *** patrickz_ joined
[19:04] *** patrickz joined
[19:14] *** patrickz joined
[19:20] *** reportable6 joined
[19:25] *** patrickz_ joined
[19:30] *** patrickz joined
[19:35] *** patrickz_ joined
[19:35] *** releasable6 joined
[19:36] *** unicodable6 joined
[19:36] *** bisectable6 joined
[19:36] *** committable6 joined
[20:11] *** patrickz joined
[20:33] *** benchable6 joined
[21:40] *** greppable6 joined
[22:34] *** lizmat joined
