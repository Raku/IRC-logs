[01:55] *** ilbot3 joined
[02:46] *** greppable6 joined
[02:46] *** evalable6 joined
[02:46] *** quotable6 joined
[02:46] *** nativecallable6 joined
[02:46] *** benchable6 joined
[02:46] *** releasable6 joined
[02:46] *** unicodable6 joined
[02:46] *** coverable6 joined
[02:46] *** bloatable6 joined
[02:46] *** committable6 joined
[02:46] *** bisectable6 joined
[02:46] *** squashable6 joined
[02:46] *** statisfiable6 joined
[03:14] *** evalable6 joined
[03:44] *** ggoebel joined
[04:07] *** bloatable6 joined
[04:20] *** committable6 joined
[07:18] *** evalable6 joined
[07:21] *** domidumont joined
[07:29] *** domidumont joined
[08:46] *** evalable6 joined
[09:03] *** nwc10 joined
[11:09] *** greppable6 joined
[11:15] *** committable6 joined
[12:41] *** MasterDuke joined
[16:03] *** buggable joined
[17:09] <timotimo> whoops, gotta put a little fix in for my debug name changes

[17:11] <Geth> ¦ MoarVM: 19a2001bac | (Timo Paulssen)++ | src/spesh/dump.c

[17:11] <Geth> ¦ MoarVM: fix wrong access to debug_name in spesh dump

[17:11] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/19a2001bac

[17:11] <timotimo> AlexDaniel`: this should make it into the release

[17:28] *** zakharyas joined
[18:24] *** brrt joined
[18:28] <brrt> good * #moarvm

[18:30] <timotimo> good * brrt

[18:30] <brrt> hmm interesting...

[18:30] <timotimo> whatcha got?

[18:30] <brrt> waitaminute

[18:31] <brrt> oh, i need to set MVM_SPESH_BLOCKING i think

[18:31] <timotimo> that often helps

[18:31] <brrt> i'm debugging an issue in the optimizer

[18:32] <timotimo> mhm

[18:32] <timotimo> the spesh optimizer or the jit optimizer? :)

[18:32] <brrt> jit optimizer

[18:32] <brrt> i'm pondering generalizing the jit bisect logic

[18:33] <brrt> well, we can do that partially with MVM_SPESH_LIMIT, can't we?

[18:33] <timotimo> ?

[18:34] <brrt> i'm pondering generalizing the debug log as well

[18:34] <brrt> and optimizing it away for the common case

[18:34] <brrt> so rather than MVM_jit_log(tc, ''…")

[18:34] <brrt> i'd have

[18:41] <timotimo> if it takes that long to type, maybe it's not a good idea

[18:53] <brrt> hehehe

[18:54] <brrt> no

[18:54] <brrt> i mean

[18:54] <brrt> i want MVM_JIT_DEBUG(msg, args)

[18:54] <brrt> but, i want that to do two things

[18:54] <brrt> - compile-time switchable

[18:54] <brrt> - sensitive to env var

[18:55] <brrt> - speciifc to frame / block

[18:55] <brrt> - specific to compilation phase

[18:55] <brrt> so you could have MVM_JIT_DEBUG=ALL and it would dump everything

[18:56] <brrt> or you could have MVM_JIT_DEBUG=REGISTER and dump only register allocation

[18:56] <brrt> or you could have MVM_JIT_DEBUG=REGISTER/21/17:ALL/102/3:OPTIMIZER/29/3

[18:56] <brrt> something like that

[18:57] <brrt> tuneable

[18:57] *** zakharyas joined
[18:57] <timotimo> oh

[18:57] <brrt> and if it'd need compile-time support, who cares if it was 'expensive' to do

[19:08] *** brrt joined
[19:12] *** greppable6 joined
[19:12] *** committable6 joined
[19:18] <brrt> i found the optimizer bug, yay

[19:19] <brrt> actually

[19:19] <timotimo> cool!

[19:19] <brrt> it is kind of scary

[19:20] <brrt> it is a sp_p6obind_o

[19:20] <brrt> issue

[19:20] <brrt> and it comes to front by the introduction of a few copy nodes

[19:22] <timotimo> interaction with object registers and GC?

[19:25] <brrt> no, more innocent than that

[19:26] <brrt> but also a bit more scary

[19:26] <brrt> the tl;dr

[19:26] * timotimo listens intently

[19:27] <brrt> sp_p6obind_o uses a macro write_barrier

[19:27] <brrt> this macro conditonally loads the value to be assigned

[19:27] <brrt> anyway, it uses a direct reference to the $2 (load) sequence, and evaluates that conditonally

[19:29] <brrt> the insertion of the COPY forces the evaluation and makes it the same

[19:29] <brrt> but

[19:29] <brrt> the condition is not always kept

[19:29] <timotimo> oooh

[19:29] <brrt> so the two worries i have

[19:29] <brrt> - this bug is always there in this case

[19:30] <brrt> because the expr jit is allowed to tile them as one and the same value

[19:31] <brrt> - i'm not sure whether to fix this in this specific template (and all other instances) by declaring a let:, or whether to somehow make the optimizer aware of inadvertent conditionally-evaluated references to values that are used in a block that isn't consequent to it

[19:31] <timotimo> oof, good question

[19:32] <brrt> obviously the first is much simpler than the second

[19:32] <timotimo> yeah, but much less thorough

[19:32] <brrt> true

[19:33] <brrt> and strictly speaking, this *is* a template bug

[19:33] <timotimo> i.e. the problem could reappear again and again

[19:33] <brrt> because the value being referenced - $2 - well, it's being loaded conditionally first

[19:33] <brrt> in the code, and that's not legal, since the expr JIT has no obligation to 'reload' the value

[19:34] <brrt> the other way to fix it is to have the analyzer decouple them

[19:34] *** Ven joined
[19:34] <brrt> but that's even less than ideal

[19:41] *** AlexDaniel joined
[19:42] <brrt> the other fix is not to do this kind of optimization just yet

[19:42] <brrt> but that's not where i want to go with this

[19:46] * timotimo BBIAB

[19:56] *** bartolin joined
[19:57] *** zakharyas joined
[20:07] *** ilmari[m] joined
[20:28] *** brrt joined
[21:19] *** btyler joined
[21:52] *** lizmat joined
[23:26] <Geth> ¦ MoarVM: 833803b6a5 | (Samantha McVey)++ | docs/ChangeLog

[23:26] <Geth> ¦ MoarVM: Add changelog entries for the next release

[23:26] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/833803b6a5

[23:27] <samcv> .tell brrt can you add what you would like to the changelog for the expression engine? You'd be the best one to know what should be added to the changelog

[23:27] <yoleaux> samcv: I'll pass your message to brrt.

[23:38] <timotimo> samcv: i think the "check caller chain before promotion" is only active when GC_DEBUG (or something) is on? maybe that detail wants to be pointed out?

[23:42] <timotimo> samcv: "seakable" wants to be "seekable"

[23:47] <samcv> here's a seaking https://cdn.bulbagarden.net/upload/thumb/6/6a/119Seaking.png/250px-119Seaking.png

[23:47] <samcv> will change :p

[23:47] <timotimo> i like seadra more
