[00:00] *** committable6 joined
[00:00] *** unicodable6 joined
[00:00] *** greppable6 joined
[00:00] *** bisectable6 joined
[02:57] *** ilbot3 joined
[03:23] *** lizmat joined
[05:12] *** committable6 joined
[06:04] *** releasable6 joined
[06:37] *** domidumont joined
[07:03] *** domidumont joined
[07:12] *** domidumont joined
[07:20] *** brrt joined
[07:35] *** reportable6 joined
[07:36] <brrt> ohai #moarvm

[07:37] <nwc10> good *, brrt

[07:38] <brrt> i'm looking for the piece of code that made the linear scan allocator blow up

[07:39] <brrt> i've decided that using && to force control flow between two assignment statements is a bit too much

[07:39] <brrt> it was something like perl6-valdgrind-m -e 'my @a[1,<1>] for ^100000'

[07:39] <brrt> should've made that a test case

[07:47] <brrt> hmm, i have a valgrind blowup in building CORE.setting

[07:57] <brrt> and os x locks up of course

[08:17] *** Ven`` joined
[08:47] <lizmat> m: my @matrix[2;2] = [1,2],[3,4]; @matrix[<0>;0] for ^1000000

[08:47] <camelia> rakudo-moar 9fd5042b8: ( no output )

[08:47] <lizmat> m: my @matrix[2;2] = [1,2],[3,4]; @matrix[<0>;0] for ^1000000

[08:47] <camelia> rakudo-moar 9fd5042b8: ( no output )

[08:47] <lizmat> m: my @matrix[2;2] = [1,2],[3,4]; @matrix[<0>;0] for ^1000000

[08:47] <camelia> rakudo-moar 9fd5042b8: OUTPUT: «(signal SEGV)»

[08:47] <lizmat> m: my @matrix[2;2] = [1,2],[3,4]; @matrix[<0>;0] for ^1000000

[08:47] <camelia> rakudo-moar 9fd5042b8: ( no output )

[08:47] <lizmat> that'd be the one, I guess  :-)

[08:47] <lizmat> needs to be a shaped array

[08:47] <lizmat> .tell brrt my @matrix[2;2] = [1,2],[3,4]; @matrix[<0>;0] for ^1000000

[08:47] <yoleaux> lizmat: I'll pass your message to brrt.

[09:00] *** jsimonet joined
[09:00] *** brrt joined
[09:18] *** robertle joined
[09:21] *** geospeck joined
[13:23] *** unicodable6 joined
[13:42] *** dogbert2 joined
[14:34] *** zakharyas joined
[15:13] *** zakharyas joined
[15:56] *** zakharyas joined
[16:01] *** ggoebel joined
[16:06] *** brrt joined
[16:28] <brrt> i'm trying to bisect the issue but valgrind keeps getting stuck

[16:28] <yoleaux> 08:47Z <lizmat> brrt: my @matrix[2;2] = [1,2],[3,4]; @matrix[<0>;0] for ^1000000

[16:28] <brrt> thanks lizmat

[16:56] *** zakharyas joined
[17:02] *** domidumont joined
[17:04] *** domidumont joined
[17:06] *** zakharyas joined
[17:21] *** lizmat joined
[17:31] *** nwc10 joined
[17:34] *** geospeck joined
[17:40] *** zakharyas joined
[17:42] <timotimo> i think there's probably no damage in just merging CStructArray - maybe after the next release - and let people have at it and then fix any bugs that remain

[17:48] *** evalable6 joined
[18:22] *** zakharyas joined
[18:31] *** geospeck joined
[18:53] *** Ven`` joined
[19:14] *** Ven`` joined
[19:25] *** Ven`` joined
[20:12] *** ggoebel joined
[20:33] *** benchable6 joined
[20:35] *** Ven`` joined
[20:37] *** Util joined
[20:37] *** geospeck joined
[20:40] *** samcv joined
[20:40] *** Voldenet joined
[20:40] *** Voldenet joined
[20:45] *** BinGOs joined
[20:48] *** ggoebel joined
[20:54] *** colomon joined
[20:59] *** benchable6 joined
[21:00] *** bisectable6 joined
[21:00] *** greppable6 joined
[21:00] *** reportable6 joined
[21:00] *** evalable6 joined
[21:00] *** unicodable6 joined
[21:59] *** Ven`` joined
[22:16] *** squashable6 joined
[22:18] *** Ven`` joined
[22:31] *** colomon_ joined
[22:43] *** Ven`` joined
[23:07] *** colomon joined
[23:27] *** colomon joined
[23:27] *** lizmat joined
