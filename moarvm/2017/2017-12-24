[02:56] *** ilbot3 joined
[03:17] *** unicodable6 joined
[03:17] *** benchable6 joined
[03:17] *** squashable6 joined
[03:17] *** reportable6 joined
[06:46] <Geth> Â¦ MoarVM: 736cfaa1e5 | (Zoffix Znet)++ | src/6model/reprs/VMArray.c

[06:46] <Geth> Â¦ MoarVM: Zero out cut off elements when downsizing VMarray

[06:46] <Geth> Â¦ MoarVM:

[06:46] <Geth> Â¦ MoarVM: Fixes RT#127756: https://rt.perl.org/Ticket/Display.html?id=127756

[06:46] <Geth> Â¦ MoarVM:

[06:46] <Geth> Â¦ MoarVM: If we're downsizing, zero out the elements we're cutting off, to

[06:46] <Geth> Â¦ MoarVM: avoid rogue left over data showing up when we, say, index into those

[06:46] <Geth> Â¦ MoarVM: elements later on.

[06:46] <synopsebot> RT#127756 [new]: https://rt.perl.org/Ticket/Display.html?id=127756 setelems on native arrays doesn't clear the array

[06:46] <Geth> Â¦ MoarVM: <â€¦commit message has 6 more linesâ€¦>

[06:46] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/736cfaa1e5

[07:08] *** Kaiepi joined
[09:11] *** Zoffix joined
[09:12] <Zoffix> FWIW: realized above commit is crap and working on another one, but it's not that good either and is breaking splicing. Trying to figure it out ATM, but may have a nap before I change the above commit

[09:13] <Zoffix> Current version: https://gist.github.com/zoffixznet/cd550a43907c0d4083656fa2172c606b  feels like `if (repr_data->slot_type != MVM_ARRAY_OBJ)` shouldn't be needed, but without it, even empty script dies with "unknown QAST node VMNull"

[09:18] <Zoffix> and splice issue is this https://gist.github.com/zoffixznet/3017d65e87088d3c5fe18791a1f6340c causes this drift... array[int64].new(0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 10, 11)  two zeros before "10, 11" that shouldn't be there....

[09:57] <Zoffix> ooh fixed stuff; including the MVM_ARRAY_OBJ thing

[09:57] <Zoffix> \o/

[10:12] <samcv> happy christmas eve everyone

[10:12] <yoleaux> 23 Dec 2017 12:19Z <AlexDaniel> samcv: TIL, maybe you're interested to know this too. å…† has a unival of 1000000000000 but you can't use it in the source code because its general category is Lo (so it thinks that it's an identifier)

[10:17] <Zoffix> Happy to you too \o

[10:20] <Geth> Â¦ MoarVM: 888f7b74d1 | (Zoffix Znet)++ | src/6model/reprs/VMArray.c

[10:20] <Geth> Â¦ MoarVM: Revert "Zero out cut off elements when downsizing VMarray"

[10:20] <Geth> Â¦ MoarVM:

[10:20] <Geth> Â¦ MoarVM: This reverts commit 736cfaa1e5f4ea6b7ce58320c918059a53b68cc5.

[10:20] <Geth> Â¦ MoarVM:

[10:20] <Geth> Â¦ MoarVM: This doesn't fix all cases of the issue and the real problem

[10:20] <Geth> Â¦ MoarVM: is further down the line.

[10:20] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/888f7b74d1

[10:37] <Geth> Â¦ MoarVM: 43c926f9e0 | (Zoffix Znet)++ | src/6model/reprs/VMArray.c

[10:37] <Geth> Â¦ MoarVM: Fix failure to clear old VMArray elements in some cases

[10:37] <Geth> Â¦ MoarVM:

[10:37] <Geth> Â¦ MoarVM: Fixes RT#127756: https://rt.perl.org/Ticket/Display.html?id=127756

[10:37] <Geth> Â¦ MoarVM:

[10:37] <Geth> Â¦ MoarVM: (O = Old cell; N = new cell; G = garbage left over data)

[10:37] <Geth> Â¦ MoarVM: We currently correctly handle the case where we're up-sizing:

[10:38] <Geth> Â¦ MoarVM: |--|OO|OO|--|

[10:38] <synopsebot> RT#127756 [new]: https://rt.perl.org/Ticket/Display.html?id=127756 setelems on native arrays doesn't clear the array

[10:38] <Geth> Â¦ MoarVM: <â€¦commit message has 18 more linesâ€¦>

[10:38] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/43c926f9e0

[10:38] <Zoffix> Ahhhh... Feels good to spend a few hours on a bug and fully understand why it was happening \o/

[10:38] <Zoffix> naptime

[10:38] *** Zoffix left
[10:41] *** cognominal joined
[10:57] *** travis-ci joined
[10:57] <travis-ci> MoarVM build errored. Zoffix Znet 'Revert "Zero out cut off elements when downsizing VMarray"

[10:57] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/320983102 https://github.com/MoarVM/MoarVM/compare/736cfaa1e5f4...888f7b74d112

[10:57] *** travis-ci left
[11:36] <Geth> Â¦ MoarVM: 09482f9bdd | (Zoffix Znet)++ | src/6model/reprs/VMArray.c

[11:36] <Geth> Â¦ MoarVM: Do less work in zeroing out VMArray

[11:36] <Geth> Â¦ MoarVM:

[11:36] <Geth> Â¦ MoarVM: We don't need to go up all the way to ssize, just until the old end

[11:36] <Geth> Â¦ MoarVM: of the stuff with data. The rest is already cleared from back when

[11:36] <Geth> Â¦ MoarVM: we resized ssize.

[11:36] <Geth> Â¦ MoarVM:

[11:36] <Geth> Â¦ MoarVM: (O = Old cell; N = new cell; G = garbage left over data)

[11:36] <Geth> Â¦ MoarVM: |--|OO|OO|--|

[11:36] <Geth> Â¦ MoarVM: |OO|OO|GG|--| <- conditional moves the old stuff and zeros the trash

[11:36] <Geth> Â¦ MoarVM: |NN|NN|--|--|

[11:36] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/09482f9bdd

[12:02] <Geth> Â¦ MoarVM: cb4c1941a8 | (Zoffix Znet)++ | src/6model/reprs/VMArray.c

[12:02] <Geth> Â¦ MoarVM: Do even less work in VMArray clearing

[12:02] <Geth> Â¦ MoarVM:

[12:02] <Geth> Â¦ MoarVM: By skipping the area between original start+elems and ssize

[12:02] <Geth> Â¦ MoarVM:

[12:02] <Geth> Â¦ MoarVM: (O = Old cell; N = new cell; G = garbage; C = newly cleaned space)

[12:02] <Geth> Â¦ MoarVM: |--|OO|OO|OO|--|

[12:02] <Geth> Â¦ MoarVM: |OO|OO|OO|GG|--|

[12:02] <Geth> Â¦ MoarVM: <â€¦commit message has 9 more linesâ€¦>

[12:02] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/cb4c1941a8

[12:14] *** travis-ci joined
[12:14] <travis-ci> MoarVM build passed. Zoffix Znet 'Do less work in zeroing out VMArray

[12:14] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/321000273 https://github.com/MoarVM/MoarVM/compare/43c926f9e0b9...09482f9bdd27

[12:14] *** travis-ci left
[12:44] *** greppable6 joined
[15:03] *** geospeck joined
[16:24] *** coverable6 joined
[17:59] *** dogbert17 joined
[18:01] * dogbert17 stumbles upon a bizarre Christmas SEGV

[18:01] <dogbert17> Thread 1 "moar" received signal SIGSEGV, Segmentation fault.

[18:01] <dogbert17> 0x00007ffff76f9b55 in compute_allocation_strategy (tc=0x6049f0, repr_info=0x7ffff5e8d5e0, repr_data=0x4286870, st=0x7ffff5e76010) at src/6model/reprs/CStruct.c:214

[18:01] <dogbert17> 214                         bits                                  = cstruct_repr_data->struct_size * 8;

[18:01] <dogbert17> (gdb) bt

[18:01] <dogbert17> #0  0x00007ffff76f9b55 in compute_allocation_strategy (tc=0x6049f0, repr_info=0x7ffff5e8d5e0, repr_data=0x4286870, st=0x7ffff5e76010) at src/6model/reprs/CStruct.c:214

[18:01] <dogbert17> #1  0x00007ffff76fa55b in compose (tc=0x6049f0, st=0x7ffff5e76010, repr_info=0x7ffff5e8db90) at src/6model/reprs/CStruct.c:339

[18:01] <dogbert17> #2  0x00007ffff764909f in MVM_interp_run (tc=0x6049f0, initial_invoke=0x7ffff7789e01 <toplevel_initial_invoke>, invoke_data=0x66cd90) at src/core/interp.c:2499

[18:01] <dogbert17> #3  0x00007ffff7789f66 in MVM_vm_run_file (instance=0x604010, filename=0x7fffffffe2ce "/home/dilbert/repos/rakudo/perl6.moarvm") at src/moar.c:401

[18:01] <dogbert17> #4  0x0000000000401459 in main (argc=10, argv=0x7fffffffde28) at src/main.c:256

[18:09] *** nativecallable6 joined
[19:51] *** ZofBot joined
[20:20] *** statisfiable6 joined
[20:23] *** bisectable6 joined
[20:23] *** committable6 joined
[20:23] *** bloatable6 joined
[20:23] *** quotable6 joined
[20:58] *** releasable6 joined
[20:58] *** evalable6 joined
[21:34] *** Geth joined
[23:29] <Geth> Â¦ MoarVM/fix-null-concat: b563f3564e | (Zoffix Znet)++ | src/6model/reprs/VMArray.c

[23:29] <Geth> Â¦ MoarVM/fix-null-concat: Fix unwanted null strings in VMArray holes

[23:29] <Geth> Â¦ MoarVM/fix-null-concat:

[23:29] <Geth> Â¦ MoarVM/fix-null-concat: Whenever we read past end or zero out str VMArrays,

[23:29] <Geth> Â¦ MoarVM/fix-null-concat: stick empty strings instead of a null pointer there.

[23:29] <Geth> Â¦ MoarVM/fix-null-concat:

[23:29] <Geth> Â¦ MoarVM/fix-null-concat: Before:

[23:29] <Geth> Â¦ MoarVM/fix-null-concat: $ perl6 -e 'my str @a; @a[3] = "x"; dd @a'

[23:29] <Geth> Â¦ MoarVM/fix-null-concat: <â€¦commit message has 6 more linesâ€¦>

[23:29] <Geth> Â¦ MoarVM/fix-null-concat: review: https://github.com/MoarVM/MoarVM/commit/b563f3564e

[23:33] <Geth> Â¦ MoarVM: zoffixznet++ created pull request #767: Fix unwanted null strings in VMArray holes

[23:33] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/767
