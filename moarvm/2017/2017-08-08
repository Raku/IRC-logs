[00:01] <timotimo> lizmat++

[00:27] *** dogbert11 joined
[01:36] *** coverable6 joined
[01:36] *** bloatable6 joined
[01:36] *** committable6 joined
[01:36] *** evalable6 joined
[01:36] *** quotable6 joined
[01:36] *** bisectable6 joined
[01:36] *** greppable6 joined
[01:36] *** benchable6 joined
[01:36] *** unicodable6 joined
[01:36] *** statisfiable6 joined
[01:52] *** ilbot3 joined
[02:19] *** brimonk joined
[02:25] *** ingy joined
[02:51] <MasterDuke> .tell jnthn aliased named parameters broke with a recent MoarVM commit https://rt.perl.org/rt3/Public/Bug/Display.html?id=131857

[02:51] <yoleaux> MasterDuke: I'll pass your message to jnthn.

[03:33] *** pharv joined
[04:14] *** pharv joined
[05:21] *** pharv_ joined
[06:19] *** brrt joined
[06:20] <brrt> lizmat++ weekly

[06:32] *** lizmat joined
[07:02] *** lizmat joined
[07:11] *** pharv_ joined
[07:23] *** edehont joined
[07:42] *** zakharyas joined
[07:58] *** robertle joined
[08:42] *** edehont joined
[08:47] *** Ven joined
[08:52] <jnthn> moarning o/

[08:52] <yoleaux> 02:51Z <MasterDuke> jnthn: aliased named parameters broke with a recent MoarVM commit https://rt.perl.org/rt3/Public/Bug/Display.html?id=131857

[08:53] <jnthn> Well, then they shoulda been better spectested...

[08:58] *** Ven_ joined
[09:03] *** pharv_ joined
[09:12] <Geth> Â¦ MoarVM: 7e841351cd | (Jonathan Worthington)++ | 3 files

[09:12] <Geth> Â¦ MoarVM: Clean up sim stack when thread context is freed.

[09:12] <Geth> Â¦ MoarVM:

[09:12] <Geth> Â¦ MoarVM: Fixes a (small) leak introduced when we started keeping these around.

[09:12] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7e841351cd

[09:20] *** brrt joined
[09:27] *** travis-ci joined
[09:27] <travis-ci> MoarVM build passed. Jonathan Worthington 'Clean up sim stack when thread context is freed.

[09:27] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/262159134 https://github.com/MoarVM/MoarVM/compare/127fa2ce73ff...7e841351cd57

[09:27] *** travis-ci left
[09:55] *** zakharyas joined
[10:27] *** Ven joined
[10:46] <brrt> i hae to say, the distinction between the range operator and the sequence operator is subtle

[10:46] <jnthn> .

[10:53] <Zoffix> .oO( Subtle is the sequence operator. Malicious it's not )

[10:53] <jnthn> I'm still trying to work out if the missing letter brrt's comment is a t or a v :P

[10:54] <Zoffix> :D

[10:54] <jnthn> *in :P

[10:55] <brrt> which comment?

[10:55] <brrt> oh

[10:55] <brrt> haha

[10:55] <brrt> *have

[10:55] <Zoffix> brrt: what sort of distinction? The way they look?

[10:57] <brrt> yeah, the way that, say

[10:57] <brrt> my @a = 1, 2, 4 .. * is very different from my @b = 1, 2, 4 â€¦ *;

[10:59] <Zoffix> :)

[11:06] *** lizmat joined
[11:31] *** edehont joined
[11:36] *** colomon joined
[11:40] *** Ven joined
[12:55] *** lizmat joined
[13:07] *** edehont joined
[13:17] <Geth> Â¦ MoarVM: 98ff03964d | (Jonathan Worthington)++ | src/spesh/graph.c

[13:17] <Geth> Â¦ MoarVM: Further harden against removed handlers.

[13:17] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/98ff03964d

[13:23] *** eater joined
[13:25] <Geth> Â¦ MoarVM: a5a0e82c0d | (Jonathan Worthington)++ | 6 files

[13:25] <Geth> Â¦ MoarVM: Add spesh ops for specualtive call optimization.

[13:25] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a5a0e82c0d

[13:25] <Geth> Â¦ MoarVM: a66c580994 | (Jonathan Worthington)++ | src/spesh/optimize.c

[13:25] <Geth> Â¦ MoarVM: Factor out offset resolution to avoid dupe.

[13:25] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a66c580994

[13:47] <Geth> Â¦ MoarVM/even-moar-jit: 70c0afae64 | (Bart Wiegmans)++ | 5 files

[13:47] <Geth> Â¦ MoarVM/even-moar-jit: Extract bitmap data structure from register allocator

[13:47] <Geth> Â¦ MoarVM/even-moar-jit:

[13:47] <Geth> Â¦ MoarVM/even-moar-jit: A bitmap is generally useful. I've also replaced various somewhat

[13:47] <Geth> Â¦ MoarVM/even-moar-jit: obscure bitmap-manipulation expressions with the more obviously

[13:47] <Geth> Â¦ MoarVM/even-moar-jit: correct get-and-set calls.

[13:47] <Geth> Â¦ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/70c0afae64

[13:47] *** lizmat joined
[14:04] * jnthn has speculative call opt working-ish

[14:05] <jnthn> It causes a couple of bizzare failures

[14:16] *** lizmat joined
[14:20] <brrt> jnthn: re the proliferation of special-jitcode-branches

[14:21] <brrt> this is true. arguably, we might also consider 'fully overwriting' the spesh cands' own data

[14:21] <brrt> in essence, dropping the created speshed non-jitted code

[14:22] <jnthn> Yeah, we could certainly consider that

[14:22] <brrt> (in which case, why create it at all? but i recall that in the past being more difficult than not, and it might be wasteful)

[14:23] <timotimo> we can skip the spesh code gen stage and directly feed the jit?

[14:23] <brrt> that would be ideal, but i recall the spesh code gen stage does some essential setting-up

[14:24] <timotimo> mhm

[14:25] <dogbert17> jnthn: do you get test failures in t/spec/S32-io/IO-Socket-INET.t

[14:26] * dogbert17 or is a recent rakudo commit to blame ...

[14:26] <jnthn> No, that's clean for me even under spesh stressing

[14:28] <dogbert17> then rakudo might be the guilty party

[14:32] <jnthn> Joy. An optimization works in the first 14,283 places it's performed. Then the 14,284th time something goes rotten.

[14:33] <timotimo> cool, that can be our magic number for when to stop doing teh opt :)

[14:41] *** lizmat joined
[14:42] <brrt> (what is different the 14284th time?)

[14:44] <jnthn> That's what I'm trying to work out

[15:21] <jnthn> I fear it's memory corruption of some kind, though valgrind makes it work rather than complaining...

[15:21] <timotimo> hate when it does that

[15:25] <jnthn> Yeah, I'm getting non-deterministic behavior

[15:26] <jnthn> It works sometimes, not others

[15:26] <timotimo> i wonder if i should add more redzone support all over moarvm for the --valgrind flag

[15:27] *** Ven joined
[15:46] *** brrt joined
[16:05] <jnthn> oh wow

[16:05] <jnthn> Well this was a wild goose chase

[16:05] <jnthn> So it looks like the mere presence of a new op (resolvecode) caused the failure

[16:06] <jnthn> Said new op prevents JIT compilation 'cus I don't JIT it yet

[16:06] <jnthn> So what if I just don't insert it and then disable JIT?

[16:06] <jnthn> Same sorts of weird failure

[16:07] <timotimo> ooooh that's really strange

[16:07] <jnthn> So somewhere we get something wrong in the interp that the JIT gets right?!

[16:08] <timotimo> i know we moved some things from interp.c into functions so the jit could use them

[16:08] <timotimo> but that's the opposite direction

[16:08] <jnthn> Yeah

[16:09] <timotimo> hm, jit bisect doesn't help here, right?

[16:10] <jnthn> Don't think so

[16:10] <jnthn> I mean, it's not a JI

[16:10] <jnthn> JIT bug

[16:10] <jnthn> It's an interp bug

[16:10] <jnthn> Question is if it's recently introduced

[16:11] <timotimo> right, we need the opposite of "go until n and then stop"

[16:12] <Geth> Â¦ MoarVM: 54ee129e4f | (Jonathan Worthington)++ | src/6model/reprs/MVMMultiCache.c

[16:12] <Geth> Â¦ MoarVM: Fix potential read over end of args buffer.

[16:12] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/54ee129e4f

[16:12] <Geth> Â¦ MoarVM: 576284f130 | (Jonathan Worthington)++ | src/6model/reprs/MVMStaticFrame.c

[16:12] <Geth> Â¦ MoarVM: Avoid passing NULL to memcpy.

[16:12] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/576284f130

[16:12] <Geth> Â¦ MoarVM: 3bb694c67f | (Jonathan Worthington)++ | src/spesh/dump.c

[16:12] <Geth> Â¦ MoarVM: Handle missing type in spesh dump.

[16:12] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/3bb694c67f

[16:13] <jnthn> Aww, no, it's not my local changes

[16:15] <Geth> Â¦ MoarVM/speculative-calls: 6b3aee3fad | (Jonathan Worthington)++ | 3 files

[16:15] <Geth> Â¦ MoarVM/speculative-calls: [WIP] Speculative calls

[16:15] <Geth> Â¦ MoarVM/speculative-calls: review: https://github.com/MoarVM/MoarVM/commit/6b3aee3fad

[16:16] *** zakharyas joined
[16:18] <jnthn> And wasn't anything I did today

[16:19] *** dogbert11 joined
[16:19] <jnthn> Or yesterday

[16:19] <jnthn> So this goes back quite a while

[16:20] <jnthn> I should go and work on dinner but

[16:20] <jnthn> t/spec/S09-typed-arrays/native-num.rakudo.moar

[16:20] <jnthn> Run it with MVM_JIT_DISABLE=1

[16:20] <jnthn> To see the explosion

[16:21] <jnthn> oh and

[16:21] <jnthn> also stressing

[16:21] <jnthn> plus turn off inline just to rule it out

[16:21] <jnthn> MVM_JIT_DISABLE=1 MVM_SPESH_INLINE_DISABLE=1 MVM_SPESH_BLOCKING=1 MVM_SPESH_NODELAY=1 ./perl6-m -Ilib t/spec/S09-typed-arrays/native-num.rakudo.moar

[16:21] <jnthn> Is the complete failing command I'm seeing

[16:21] <jnthn> Which works if MVM_JIT_DISABLE=1 is removed

[16:27] <jnthn> ok, 388a769b461c10d7d4ee901409288f0122a6d2a4 is good even with JIT

[16:27] <jnthn> So it's recent

[16:27] <jnthn> Will bissect tomorrow

[16:57] *** colomon joined
[17:55] *** Ven joined
[18:32] *** Ven_ joined
[18:54] *** Ven joined
[19:58] *** zakharyas joined
[20:01] *** Ven joined
[21:24] *** lizmat joined
[21:34] *** colomon joined
[21:38] *** markmont joined
[21:42] *** MasterDuke joined
[22:45] *** geekosaur joined
[23:04] *** dogbert17_ joined
