[01:55] *** ilbot3 joined
[02:00] *** mtj_ joined
[02:22] *** geekosaur joined
[02:34] *** geekosaur joined
[03:08] *** geekosaur joined
[03:51] *** zakharyas joined
[04:41] <samcv> just got my new 3k screen in my laptop. experimenting with the joys of hidpi display on linux. luckily kde seems to have the best support for it. allowing you to set fractional scale's, while gnome can do 1x, 2x or 3x only

[04:53] *** Ven`` joined
[05:32] *** brrt joined
[05:49] *** domidumont joined
[06:11] *** domidumont joined
[06:46] *** brrt joined
[07:15] <nine> samcv: are you on X or Wayland?

[07:17] <moritz> .oO( Xayland! )

[08:05] *** domidumont joined
[08:10] *** leont joined
[08:21] *** robertle joined
[08:56] <jnthn> morning o/

[09:21] <brrt> morning jnthn

[09:21] <jnthn> o/ brrt

[09:23] <brrt> i'm working on new documentation for the expr JIT by the way

[09:24] <jnthn> Cool

[09:24] <brrt> i think the tiler is still fantastically complex, even though it is actually composed of simple elements

[09:24] <jnthn> I'm continuing my re-working of supply internals

[09:24] <brrt> uhuh. that's mostly in perl6 land, isn't it?

[09:25] <jnthn> Entirely, yeah

[09:25] <jnthn> Still tricky though :)

[09:25] <moritz> oh I can imagine

[09:25] <brrt> oh, i'm sure it is :-)

[09:26] <moritz> jnthn: btw a proof-reader of my current Perl 6 regexes book wrote: ```My wish is that one of you guys with the big brains will write a thick book: "Perl 6 Concurrency and Asynchronous Programming" full of elegant examples of useful constructs.

[09:27] <moritz> '''

[09:27] <moritz> :-)

[09:27] <jnthn> moritz: Yeah, don't tell anyone but I'm already working on it. :)

[09:27] <jnthn> Unfortunately, I'm also working on many other things.

[09:27] <jnthn> So it's taking a while and probably will take a while longer yet

[09:27] <moritz> jnthn: I wrote that you are toying with the idea of writing such a thing :-)

[09:28] <jnthn> Yeah

[09:28] <jnthn> I mean, there's actually text slowly coming together for pieces of it, but nothing I'm ready to share just yet

[09:28] <moritz> if you happen to want a private beta (or alpha) reader, I'm all yours :-)

[09:28] <jnthn> I should perhaps resume my writing sessions in the pub that has no wifi :)

[09:29] <moritz> and if you happen to want a contact with a publisher at some point, that might be arranged too :-)

[09:29] <jnthn> Ah, cool. I've started out with LeanPub, fwiw.

[09:30] <jnthn> Happy with it so far

[09:30] <jnthn> Like writing in Markdown

[09:31] <jnthn> Then, I like writing in Markdown a bit too much. I wrote all the Cro docs in Markdown too instead of finally learning Pod6 :P

[09:40] <samcv> i'm realling loving writing in asciidoc. having auto generated table of contents is nice. and it's basically markdown, except anything you can't do in markdown you can do in asciidoc. like start numbered lists from values other than 1 for example.

[09:42] <samcv> you can even include data from a csv to create a table if you want

[09:42] <jnthn> Oh, interesting.

[09:43] <samcv> having a NOTE: and WARNING: macros is nice too

[09:44] <samcv> like the one i have here: https://github.com/MoarVM/MoarVM/blob/master/docs/strings.asciidoc#abstract so i'd think it'd be nice if you're writing a book. though not sure if leanpub supports it. you can also control alignment of tables. or make tables without a header. so a plain table

[09:45] <samcv> uh. and bold things inside single ` ` marks

[09:54] <samcv> asciidoc at least has a book format you can output to i know. but use whatever is best for you :)

[09:54] <timotimo> let's make a markup format called "Whatever" and base it on the syntax of whatever stars and method calls

[09:59] *** TimToady joined
[09:59] <stmuk> most of the current ecosystem docs (such as they exit) for perl 6 modules uses markdown

[10:00] <stmuk> s/exit/exist

[10:12] *** zakharyas joined
[10:25] <samcv> a lot of them are in pod6 though which gets converted to markdown

[10:25] <samcv> anyway i'm off to bed. o/

[10:26] <jnthn> Rest well, samcv o/

[10:38] <jnthn> Righty, time to stresstest this big refactor...

[10:43] <jnthn> Darn, two new hangs and two new regressions. But one fix.

[10:44] <nwc10> jnthn: I still see a SEGV when building the setting.

[10:44] <nwc10> have a coredump, but can only reproduce it "live" - running under gdb makes it go away

[10:45] <nwc10> http://paste.scsys.co.uk/565159

[10:45] <nwc10> ASAN's first report is "SEGV" (nothing naughty before then)

[10:46] <jnthn> Hm,odd

[10:46] <jnthn> Haven't seen that at all, though I'm off in a branch and maybe not at MoarVM HEAD

[10:48] <nwc10> slightly more info http://paste.scsys.co.uk/565160

[10:48] <nwc10> and really can't say more useful than that

[10:48] <nwc10> (sorry)

[10:48] <nwc10> and don't want to distract you

[10:48] <nwc10> and I'm also mostly AFK

[10:48] <brrt> jnthn, re: markdown, i think you should like org-mode, if you can stomach emacs anyway

[10:51] <brrt> otoh, what samcv did with asciidoc looked decnetly nice as well

[10:52] <timotimo> nwc10: would also like to see the STable's debug_name perhaps

[10:52] <jnthn> OK, two hangs and 1 regression fixed

[10:55] <jnthn> Hm, and the final regression looks interesting

[10:57] <jnthn> ah, mebbe a thinko :)

[10:58] <jnthn> Yay, indeed

[10:59] <jnthn> Now I'm one test ahead of where I was before the refactor. Plus another problem fixed :)

[11:00] <jnthn> And I think only at one regression vs. nom. Which is in throttle.t /o\

[11:06] <nwc10> (gdb) p st->debug_name

[11:06] <nwc10> $6 = 0x21934e0 "Perl6::Grammar"

[11:25] <jnthn> lunch &

[12:07] *** domidumont joined
[12:08] * jnthn back

[12:08] <jnthn> So, this throttle test...

[12:19] <jnthn> urgh

[12:21] <nine> jnthn: there may be one open issue with jit_nativecall. The branch changes the nativecallbuild op to have a return value. I it ok to change ops that way? Or should I create a new op and deprecate the old one?

[12:22] <jnthn> nine: We kinda try not to, and if the op were used in the NQP bootstrap you'd totally not get away with it

[12:22] <nine> jnthn: its only use in nqp is in: QAST::MASTOperations.add_core_moarop_mapping('buildnativecall', 'nativecallbuild', 0);

[12:22] <[Coke]> to brighten jonathan's day, Coke notes that he just found a 5 year old typo in some coldfusion code he wrote to deal with multi-threaded issues as: ‚Äúlock type="exlusive" { ... }‚Äù ... which apparently never errored out, nor complained until we upgraded our ColdFusion version recently. whoops.

[12:23] <jnthn> An exlusive bug... :)

[12:23] <moritz> nice one

[12:23] <jnthn> nine: In this case you'd get away with it, and it's not like we really yet have the situation where people upgrade their Moar version and Rakudo version independently, except in development...

[12:23] <moritz> these are the times when I use "git blame" :-)

[12:23] <[Coke]> s/jonathan/jnthn/:oops

[12:24] <jnthn> nine: Though if anyone does that then they'd get explosions :)

[12:24] <jnthn> So the throttle problem is...partly from its rather questionable API design

[12:25] <nine> jnthn: it wouldn't be the first time that one has to upgrade nqp/rakudo to really work with a new MoarVM version... Well, sounds like it'd not be worth the hassle.

[12:25] *** AlexDaniel joined
[12:25] <jnthn> nine: Indeed. In the long run, such things aren't so wise, but present reality is we get away with it, and we have limited development resources

[12:26] <timotimo> [Coke]: colonpairs in regexes go in the front! ;)

[12:26] <nine> So, does anyone want to review jit_nativecall some more? Or should I just merge today?

[12:26] <[Coke]> timotimo: :)

[12:26] <jnthn> I'd like to give it some review, but my head has been (still kinda is) so full of the supply changes... :)

[12:27] <jnthn> throttle is doing something I think I'd call broken

[12:27] <timotimo> [Coke]: did you see my privmsg?

[12:27] <jnthn> It takes a Supplier for :$control

[12:27] <jnthn> Which is very odd in that it should really take a Supply since it's using it to receive control messages

[12:27] <jnthn> It will then `.done` that Supplier

[12:28] <jnthn> But that

[12:28] <jnthn> results in deadlock because it's currently in a whenever block, and trying to run another of its own whenever blocks

[12:29] <jnthn> So effectively, it's emitting a value to itself

[12:30] *** vendethiel- joined
[12:34] <jnthn> Fixing throttle to not run into this is easy, though part of me wonders what else might run into it

[12:42] *** zakharyas joined
[15:10] *** brrt joined
[16:52] <Geth> ¬¶ MoarVM: jdv++ created pull request #699: Fix returned tcp port values for async sockets (ntohs).  See RT#132135.

[16:52] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=132135

[16:52] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/699

[16:53] *** jdv79 joined
[16:54] <jdv79> if someone could merge 699 then i could push the tests or should it be the other way round

[16:58] *** domidumont joined
[16:59] <jdv79> tests are in a rt132135 branch on roast for now.  lunch&

[17:00] <jnthn> It looks good to me; guess I'll let the automated checks have at it

[17:01] *** domidumont joined
[17:02] *** leont joined
[17:05] *** erratum left
[18:07] <jdv79> where are these robot checks?

[18:10] *** AlexDaniel joined
[18:18] <Zoffix> travis/appveyor

[18:21] <jdv79> i dont know where those are

[18:21] <jdv79> also on my phone.  is there a doc or wiki thing on this stuff?

[18:26] <timotimo> jdv79: when you open the pull request page it'll show you the two build services

[18:27] <timotimo> something strange is happening on travis

[18:27] <timotimo> in only one of the builds it's complaining:

[18:27] <timotimo> Can't locate strict.pm in @INC (@INC contains: /home/travis/perl5/perlbrew/perls/5.10/lib/5.10.1/x86_64-linux /home/travis/perl5/perlbrew/perls/5.10/lib/5.10.1 /home/travis/perl5/perlbrew/perls/5.10/lib/site_perl/5.10.1/x86_64-linux /home/travis/perl5/perlbrew/perls/5.10/lib/site_perl/5.10.1 .) at Configure.pl line 3.

[18:27] <timotimo> how can "use strict" be missing?!?

[18:28] <timotimo> since it may just be a fluke i can just restart that individual job and see what happens

[18:29] <timotimo> the appveyor build fails at what i consider a very suspicious run time, so probably got killed for time-out or something?

[18:29] <timotimo> 59 min 59 sec

[18:30] <timotimo> though it kind of looks like the next build is already at exactly the same spot in the tests but has only been running for 35 minutes?

[18:30] <timotimo> i don't really know how to properly debug and fix an appveyor build :|

[18:31] <jdv79> i dont see that stuff on my android thingee

[18:31] <jdv79> lame mobile

[18:31] <jdv79> but ok.  ill look later from my real box.

[18:35] <AlexDaniel> timotimo: re whatever markup: This reminded me of something. I toyed with the idea of subclassing from multiple grammars (for example CommonMark and Creole), so that you get the best of all worlds. It does work, if you get it done right :) Surely you have to take care of all syntactic conflicts and stuff, but it looks doable.

[18:36] <timotimo> OK, the travis ci build succeeded, and appveyor is just unconditional fail it looks like

[18:36] <AlexDaniel> the biggest problem for me at the time was writing a grammar that parses *any* input

[19:10] *** AlexDaniel joined
[19:17] *** geekosaur joined
[19:56] *** robertle joined
[20:04] *** AlexDaniel joined
[20:09] *** AlexDaniel joined
[20:39] <Geth> ¬¶ MoarVM: c71c778145 | (Justin DeVuyst)++ | src/io/asyncsocket.c

[20:39] <Geth> ¬¶ MoarVM: Fix returned tcp port values for async sockets (ntohs).  See RT#132135.

[20:39] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c71c778145

[20:39] <Geth> ¬¶ MoarVM: 9b2e253baa | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/io/asyncsocket.c

[20:39] <Geth> ¬¶ MoarVM: Merge pull request #699 from jdv/master

[20:39] <Geth> ¬¶ MoarVM:

[20:39] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=132135

[20:39] <Geth> ¬¶ MoarVM: Fix returned tcp port values for async sockets (ntohs).  See RT#132135.

[20:39] <synopsebot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=132135

[20:39] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9b2e253baa

[20:41] *** Ven`` joined
[21:57] *** Ven`` joined
[23:13] *** lizmat joined
