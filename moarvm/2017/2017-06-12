[01:27] *** mtj_ joined
[01:48] *** ilbot3 joined
[05:47] *** brrt joined
[05:55] <brrt> ohai #moarvm

[05:56] <nwc10> good *, brrt

[05:57] <brrt> \o nwc10

[05:57] <brrt> i have another bug and i can be very short about it this time

[05:58] <brrt> i think the problem is the gc-moveable objects combined with 'dumb' spilling i talked about earlier

[05:59] <brrt> i.e. when I spill a value it doesn't end up as a GC root and hence is not updated when the GC runs

[06:03] *** samcv left
[06:03] *** samcv joined
[06:05] *** domidumont joined
[06:11] <brrt> so what i have to do, it seems, is record the 'objectness' (or 'collectableness') of values computed by nodes, then when I allocate a local for temporary storage, I mark that as a collectable in the local_types array

[06:14] <brrt> this seems to me, to be entirely doable

[06:20] <nwc10> I understand this enough to say that if your first part is a valid diagnosis of the cause, then the second part should be a solution, and should be doa-ble

[06:20] <nwc10> and also, that the first part is going to be a bug, even if it's not the exact problem this time

[06:22] <brrt> right :-)

[06:23] <brrt> the moral question i'm asking myself is, is it worth proving that this is the bug

[06:23] <brrt> because if it *isnt't* the bug, but another one, then fixing the above might 'hide' the real bug

[06:24] <nwc10> ["how easy is it to prove?" "won't know until it's finished"] ?

[06:25] <brrt> i seem to recall jnthn had developed gc debugging macros

[06:25] <brrt> that should probably make proving easier

[06:25] <nwc10> await jnthn?

[06:25] <brrt> probably best

[06:33] *** geekosaur joined
[06:43] <nwc10> coffee bootstrapping near miss - was distracted by the fact that the coffee machine had run out of water

[06:43] <nwc10> fixed that, but forgot that I'd not yet put a cup underneath it.

[06:43] *** brrt joined
[06:44] <nwc10> Switched on, realised, grabbed cup from top of machine, avoided disaster

[06:44] <nwc10> IIRC the only other time I made this mistake, I had to grab the cup from the cupboard

[06:45] <nwc10> The IRC logs here will remember. They remember things like this.

[06:45] <nine> Too much action for early morning

[06:45] <brrt> :-D

[06:46] <nwc10> you know, one solution would be for programmers to work on site, in shifts, 24x7, so that the previous shift can bootstrap coffee for the new shift.

[06:46] <nwc10> seems like an excellent idea. but I suspect that it will never catch on.

[06:46] <brrt> seems reasonable

[06:47] <nine> But not compatible with me starting out my day in my home office...

[06:47] <nwc10> clearly the home office will have to go!

[06:47] <nine> I'm not sure I want to have coders around all night ;)

[06:47] <nwc10> "what could possibly go wrong?"

[07:04] *** domidumont joined
[09:39] *** robertle joined
[11:28] *** zakharyas joined
[11:29] *** domidumont joined
[11:33] *** brrt joined
[11:55] *** domidumont joined
[12:21] *** brrt joined
[12:40] <jnthn> brrt: fwiw, the GC debug stuff is done by various macros, including redefining the register access ones in interp.c, which makes it a tad less useful for catching JIT bugs perhaps

[12:41] <brrt> hmmm

[12:41] <brrt> well, yeah

[12:41] <brrt> i thought  maybe reducing the nursery size makes it more reliable

[12:42] <jnthn> Yeah, typically it does

[12:47] <brrt> :-)

[13:00] <brrt> that makes it a pretty reliable crash indeed

[13:00] <brrt> (16k nursery size)

[13:01] <brrt> and, dependent on JIT, so that's even better

[13:19] *** avar joined
[13:49] <Geth> ¦ MoarVM: zoffixznet++ created pull request #606: Use more professional language in error message

[13:49] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/606

[13:57] *** ZofBot joined
[14:07] <Geth> ¦ MoarVM: 9097de15b5 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/strings/parse_num.c

[14:07] <Geth> ¦ MoarVM: Use more professional language in error message

[14:07] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9097de15b5

[14:07] <Geth> ¦ MoarVM: 636f2195db | lizmat++ (committed using GitHub Web editor) | src/strings/parse_num.c

[14:07] <Geth> ¦ MoarVM: Merge pull request #606 from zoffixznet/patch-1

[14:07] <Geth> ¦ MoarVM:

[14:07] <Geth> ¦ MoarVM: Use more professional language in error message

[14:07] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/636f2195db

[14:10] *** brrt joined
[14:23] *** lizmat joined
[14:51] <Geth> ¦ MoarVM/even-moar-jit: a407d54134 | (Bart Wiegmans)++ | docs/jit/todo.org

[14:51] <Geth> ¦ MoarVM/even-moar-jit: Document problem with spilling

[14:51] <Geth> ¦ MoarVM/even-moar-jit:

[14:51] <Geth> ¦ MoarVM/even-moar-jit: JIT value spilling does not mark the spilled values as collectable,

[14:51] <Geth> ¦ MoarVM/even-moar-jit: which means the GC will not update them, which would cause them to

[14:51] <Geth> ¦ MoarVM/even-moar-jit: go stale, which is probably what causes a crash when I introduce

[14:51] <Geth> ¦ MoarVM/even-moar-jit: sp_fastcreate as a template.

[14:51] <Geth> ¦ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/a407d54134

[15:04] *** lizmat joined
[15:04] *** AlexDaniel joined
[15:06] *** brrt joined
[16:43] *** robertle joined
[16:57] *** domidumont joined
[18:30] *** buggable joined
[19:15] *** zakharyas joined
[19:21] *** AlexDaniel joined
[19:51] *** zakharyas joined
[20:33] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/06/12/2017-24-synchronicity-sorted/

[21:03] <[Coke]> lizmat++

[21:07] <timotimo> good weekly, aye

[21:25] <jnthn> lizmat++ # keeping up with the weeklys :)

[22:09] *** buggable joined
