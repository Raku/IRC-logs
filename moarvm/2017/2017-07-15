[00:32] *** evalable6 joined
[00:32] *** coverable6 joined
[00:32] *** bloatable6 joined
[00:32] *** greppable6 joined
[00:32] *** committable6 joined
[00:32] *** unicodable6 joined
[00:32] *** bisectable6 joined
[00:32] *** quotable6 joined
[00:32] *** benchable6 joined
[00:32] *** statisfiable6 joined
[00:49] *** AlexDaniel joined
[01:27] <timotimo> i think i was running around with a tiny nursery for a few days

[01:47] *** TimToady joined
[01:47] *** MasterDuke joined
[01:47] <MasterDuke> timotimo: you around? did you happen to see my question to jnthn yesterday? you'd probably know also

[01:47] <timotimo> i'm still around

[01:49] *** ilbot3 joined
[01:50] <MasterDuke> sounds like a thrilling job

[01:51] <timotimo> hah

[01:51] <timotimo> something for a month without power (if you printed out the whole source code up front)

[02:01] <MasterDuke> hm, don't you need correct uint support in rakudo before you really can do the audit?

[02:03] <timotimo> good question

[02:03] <timotimo> uint support is something that scares me :)

[02:04] <MasterDuke> likewise

[02:05] <timotimo> i think i'll be going to bed now

[02:06] <MasterDuke> same here soon. later...

[05:50] *** greppable6 joined
[06:35] * timotimo closed a few random moarvm issues

[08:31] <Geth_> Â¦ MoarVM/even-moar-jit: 4026d83e46 | (Bart Wiegmans)++ | src/jit/expr.c

[08:31] <Geth_> Â¦ MoarVM/even-moar-jit: A new value overwrites a previous definition

[08:31] <Geth_> Â¦ MoarVM/even-moar-jit:

[08:31] <Geth_> Â¦ MoarVM/even-moar-jit: Otherwise we can potentially have ordering issues when we flush a newer

[08:31] <Geth_> Â¦ MoarVM/even-moar-jit: value onto an older root.

[08:31] <Geth_> Â¦ MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/4026d83e46

[10:17] *** Ven joined
[10:37] <jnthn> morning o/

[10:37] <jnthn> timotimo++ samcv++ # ChangeLog updates

[10:39] <Geth_> Â¦ MoarVM: e078e8f50f | (Jonathan Worthington)++ | VERSION

[10:39] <Geth_> Â¦ MoarVM: Bump VERSION.

[10:39] <Geth_> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e078e8f50f

[10:39] <jnthn> Nice ChangeLog this month :)

[10:51] <jnthn> https://www.moarvm.org/releases/MoarVM-2017.07.tar.gz

[10:59] <Geth_> Â¦ MoarVM/spesh-worker: 87 commits pushed by (Jonathan Worthington)++

[10:59] <Geth_> Â¦ MoarVM/spesh-worker: review: https://github.com/MoarVM/MoarVM/compare/08c31e644b...2aa8d8203e

[10:59] <jnthn> There's a rebase of that branch, ready for continuing work on it on Monday :)

[11:38] *** robertle joined
[11:40] *** Ven joined
[11:48] *** TimToady joined
[13:15] *** lizmat joined
[13:23] <timotimo> https://github.com/MoarVM/MoarVM/projects/2 - fwiw i made that project thingie and dumped a few ideas in there

[13:31] <MasterDuke> timotimo++

[13:32] <timotimo> https://github.com/MoarVM/MoarVM/pull/319 - this is obsolete from our latest encoder changes, right?

[13:34] <MasterDuke> looks like you have a couple open PRs, are they different from your project ideas?

[13:34] <timotimo> *cough*

[13:34] <timotimo> there's not as many PRs as there used to be

[13:37] <MasterDuke> btw, do you have any idea why https://github.com/rakudo/rakudo/pull/1116 causes `./perl6-m tools/build/install-core-dist.pl /home/dan/Source/perl6/install/share/perl6` to hang?

[13:37] <MasterDuke> also, if i run `make m-test`, t/01-sanity/21-try.t hangs, but it completes fine if run directly

[13:39] <geekosaur> at a guess, .message throws

[13:42] <geekosaur> in fact, not even that far perhaps. note that .gist uses try self.?message

[13:43] <MasterDuke> here's a diff of changes i just made in that branch, same behavior https://gist.github.com/MasterDuke17/841d28aba75ecdab1c582f173d7d6321

[13:44] <geekosaur> so if the exception being thrown doesn't accept .message then throw throws

[13:44] <geekosaur> which ... is going to loop until it overflows the stack

[13:46] <MasterDuke> the .?message should prevent it being called on something that doesn't accept .message

[13:47] <geekosaur> in .gist, yes

[13:47] <geekosaur> show me the try self.?message at https://github.com/MasterDuke17/rakudo/blob/020695ee45681ac377fa0b6654630c521ac0fc42/src/core/Exception.pm#L57

[13:48] <MasterDuke> it's in my diff

[13:48] <geekosaur> I, er, got there *from* your diff

[13:48] <geekosaur> https://github.com/rakudo/rakudo/pull/1116/files

[13:48] <MasterDuke> i haven't pushed that change yet

[13:49] <MasterDuke> since it doesn't seem to actually fix/change anything

[13:49] <geekosaur> ok, and I was supposed to know that when you asked what was wrong with *that* code

[13:50] <geekosaur> still leaves the possibility that the message method itself is throwing but that will not be discernable from this code even with the changes I was supposed to get via mindreading

[13:51] <MasterDuke> but then it should have hung before any of my changes, right?

[13:51] <MasterDuke> since the net effect is just wrapping the old behavior in `if nqp::existskey(nqp::atkey(%*COMPILING, '%?OPTIONS'), 'll-exception') {`

[14:13] <nine> How about HLL::Compiler calling .message if the exception object has such a method and nqp::getmessage didn't return a message? Would save the lookup of %*COMPILING on every exception throw

[14:15] <MasterDuke> nine: i started on that, but was missing something, probably the 'if the exception object has such a method' part, let me try that again

[14:15] *** Ven joined
[14:19] <nine> Also that would move the changes to an area of the code that's actually only run when --ll-exception is active rather than on every throw of an exception. Would make me feel much better so close to the release.

[14:24] <MasterDuke> nine++, seems to be working

[14:26] <nine> yeah! :)

[14:36] <MasterDuke> nine: does https://github.com/perl6/nqp/pull/366 look ok?

[14:37] <nine> MasterDuke: it does

[14:47] *** zakharyas joined
[15:10] *** domidumont joined
[15:15] *** ggoebel joined
[15:16] *** domidumont joined
[15:20] *** Ven joined
[16:05] *** domidumont joined
[16:14] *** Ven joined
[16:40] *** zakharyas joined
[17:03] *** zakharyas joined
[17:07] *** Ven_ joined
[18:34] *** zakharyas joined
[19:00] *** domidumont joined
[19:15] *** Ven joined
[19:42] <samcv> good *

[19:42] <timotimo> yo samcv

[19:51] <mst> assuming it exists, where do I look for perl6 generator syntax?

[19:55] <timotimo> you mean like gather/take, right?

[19:56] <jnthn> Probably gather/take is closest, though in Perl 6 that's not tied to functions/subs in any way, while in many languages they are coupled

[19:56] <yoleaux> 19:07Z <Zoffix> jnthn: perhaps you'd be interested in this bug: https://rt.perl.org/Ticket/Display.html?id=131755

[19:56] <Zoffix> mst: https://rakudo.party/post/Perl-6-Seqs-Drugs-and-Rock-n-Roll#igatheryoulltakeusto...

[19:56] <jnthn> ('cus if you scope your generator to a sub you can do it with a local CPS transform)

[19:56] <Zoffix> docs: https://docs.perl6.org/syntax/gather%20take

[19:57] <jnthn> Zoffix: Will try and be interested next week :)

[19:57] <mst> ah, lazy gather/take

[19:57] <mst> I'd been pondering that, just not yet

[19:58] * jnthn afk for a bit

[20:20] *** Ven joined
[20:37] *** Zoffix joined
[22:26] *** geekosaur joined
[22:43] *** Ven joined
