[00:06] *** AlexDaniel` joined
[00:37] *** ilmari[m] joined
[00:53] *** patrickz_ joined
[00:59] *** evalable6 joined
[01:43] <AlexDaniel> huggable: bots

[01:43] <huggable> AlexDaniel, The #perl6 irc channel normally hosts several helpful bots. I am a bot, and everyone else voiced on this channel is a bot. See the full list here: https://github.com/perl6/doc/issues/711#issuecomment-235414744

[01:44] <AlexDaniel> MasterDuke: fwiw, maintainers should be listed for each bot here ↑

[01:47] *** domidumont joined
[01:50] *** domidumont1 joined
[01:55] *** domidumont joined
[01:58] *** bisectable6 joined
[01:58] <MasterDuke> ah right, forgot about that

[02:56] <japhb> AlexDaniel: Should it be more aware of which IRC channel it is speaking on, rather than referring only to #perl6?

[02:56] <AlexDaniel> huggable: that's just a static factoid, so it's probably ok

[02:56] <huggable> AlexDaniel, nothing found

[02:56] <AlexDaniel> japhb: ↑ :)

[02:58] *** ilbot3 joined
[03:54] *** domidumont joined
[03:56] *** domidumont1 joined
[06:04] *** releasable6 joined
[06:04] *** greppable6 joined
[06:05] *** squashable6 joined
[06:33] <Geth> ¦ MoarVM: samcv++ created pull request #761: Improvements to ucd2c.pl

[06:33] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/761

[07:10] *** geospeck joined
[07:35] *** reportable6 joined
[07:58] *** zakharyas joined
[08:13] *** zakharyas joined
[08:18] *** zakharyas1 joined
[08:20] *** brrt joined
[08:45] <brrt> good * #moarvm

[08:45] <yoleaux> 6 Dec 2017 21:00Z <jnthn> brrt: SEGV in linear scan allocator: https://gist.github.com/MasterDuke17/453236bf30ff65b88fd8b84409368975

[08:45] <brrt> ouch, thank you

[08:48] *** geospeck joined
[09:02] *** domidumont joined
[09:25] <brrt> damnit, that doesn't crash for me

[09:25] <brrt> and i can't start valgrind :-(

[09:26] <brrt> i'll try and start a virtual machine then

[09:26] <nwc10> brrt: http://paste.scsys.co.uk/566116

[09:27] <nwc10> and only yesterday I was going to "complain that ASAN was getting bored, but then I though "be careful what you wish for"

[09:27] <nwc10> does anyone have a colo(u)r pastebot so that I could paste it in all its pavement-pizza glory?

[09:29] <brrt> that'd be cool, yes

[09:31] <brrt> oh, that's a pretty good stack trace though

[09:31] <brrt> that gives me virtually all the necessary information

[09:38] <nwc10> I'm probably AFK in about an hour from now, so if you have time to cook up something to (re)test before then, it should be able to

[09:38] <nwc10> otherwise, not sure when

[09:49] *** [Coke] joined
[09:50] *** Util joined
[09:50] <brrt> i'm a bit puzzled still

[09:56] *** [Coke] joined
[10:28] <nwc10> oops, be careful what you wish for

[10:29] <nwc10> ASAN barfage in JIT code http://paste.scsys.co.uk/566117

[10:29] <nwc10> brrt: is that the same place?

[10:30] <nwc10> afk for a bit

[10:51] *** domidumont joined
[11:16] <brrt> yes, it is

[11:16] <brrt> same place

[11:16] <brrt> not sure why still!

[11:20] <lizmat> brrt: I suspect some initialization issue, as it either happens after ~ 200 msecs, *or* it runs to completion without any issues in about 950 msecs

[11:20] <lizmat> I have  not seen any crashes after 200 msecs

[11:22] <brrt> hmm, odd

[11:22] <brrt> anyway, valgrind / ASAN makes it crash quite relaibly

[11:22] <brrt> the question is, why the use-after-free

[11:23] <brrt> because the valuerefs are allocated from a single buffer that doesn't grow, and in fact that's not the growing buffer

[11:24] <brrt> oh, hang on

[11:24] <brrt> i know why

[11:30] <lizmat> whee!

[11:47] <brrt> double-pointer trick wreaks havoc with the realloc

[12:27] <brrt> that would've been a good title for a blog though

[12:29] <brrt> meh, i'll be saddened to see it go

[12:42] <Geth> ¦ MoarVM: 5484f048ee | (Bart Wiegmans)++ | src/jit/linear_scan.c

[12:42] <Geth> ¦ MoarVM: [JIT] Don't take a pointer-pointer to a moving object

[12:42] <Geth> ¦ MoarVM:

[12:42] <Geth> ¦ MoarVM: This would cause segmentation faults because the alc->values array

[12:42] <Geth> ¦ MoarVM: (which backed the spillee object) could move in a realloc, and the

[12:42] <Geth> ¦ MoarVM: pointer-pointer to the ValueRef would point inside this object. We

[12:42] <Geth> ¦ MoarVM: don't actually need that, we can get by with two separate pointers

[12:42] <Geth> ¦ MoarVM: and a comma.

[12:42] <Geth> ¦ MoarVM:

[12:42] <Geth> ¦ MoarVM: Note that we'd also assign to the (potentially moved) spillee object,

[12:42] <Geth> ¦ MoarVM: which is what I suspect was the real cause to the SEGV, but ASAN already

[12:42] <Geth> ¦ MoarVM: found the invalid read earlier.

[12:43] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/5484f048ee

[12:43] <brrt> .tell lizmat jnthn nwc10 fixed

[12:43] <yoleaux> brrt: I'll pass your message to lizmat.

[12:49] <nwc10> brrt: http://paste.scsys.co.uk/566118 --  src/jit/linear_scan.c:720:48: runtime error: member access within null pointer of type 'struct ValueRef

[13:07] <brrt> fuuuuuuuuu

[13:07] <brrt> :-(

[13:07] <brrt> oh, i see

[13:07] <brrt> yeah

[13:07] <brrt> hmmm

[13:09] *** geospeck joined
[13:16] *** domidumont joined
[13:45] <Geth> ¦ MoarVM: 924a75d556 | (Bart Wiegmans)++ | src/jit/linear_scan.c

[13:45] <Geth> ¦ MoarVM: [JIT] moreover, don't read a NULL struct

[13:45] <Geth> ¦ MoarVM:

[13:45] <Geth> ¦ MoarVM: If the next pointer is already NULL it makes no sense to read it.

[13:45] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/924a75d556

[13:45] <brrt> .ask lizmat if the —asan option is working for you, because, i think i have a way to fix it on OSX

[13:45] <yoleaux> brrt: I'll pass your message to lizmat.

[13:46] <lizmat> --asan is not working for me  :-)

[13:46] <yoleaux> 13:45Z <brrt> lizmat: if the —asan option is working for you, because, i think i have a way to fix it on OSX

[13:47] <brrt> okay, then i may have a fix for that as well

[13:49] <Geth> ¦ MoarVM: f2c35e1333 | (Bart Wiegmans)++ | Configure.pl

[13:49] <Geth> ¦ MoarVM: [ASAN] fix flags for darwin

[13:49] <Geth> ¦ MoarVM:

[13:49] <Geth> ¦ MoarVM: Apple is ... exceptional, about how to setup flags for ASAN support

[13:49] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f2c35e1333

[14:07] <brrt> by the way

[14:07] <brrt> i've been thinking of a way to write a generic 'top-down tree matching funciton

[14:33] *** zakharyas joined
[14:52] *** squashable6 joined
[14:54] *** reportable6 joined
[14:54] *** releasable6 joined
[14:54] *** arnsholt joined
[14:54] *** buggable joined
[14:54] *** huggable joined
[14:54] *** ilmari joined
[14:54] *** ZofBot joined
[14:54] *** nine joined
[14:54] *** mst joined
[14:55] *** bartolin joined
[14:55] *** japhb joined
[14:55] *** nebuchadnezzar joined
[14:55] *** geospeck joined
[14:55] *** zakharyas joined
[14:55] *** [Coke] joined
[14:55] *** Util joined
[14:55] *** brrt joined
[14:55] *** patrickz_ joined
[14:55] *** BooK joined
[14:55] *** zostay joined
[14:55] *** TimToady joined
[14:55] *** harrow` joined
[14:55] *** jpf joined
[14:55] *** lizmat joined
[14:55] *** samcv joined
[14:55] *** Voldenet joined
[14:55] *** jnthn joined
[14:55] *** dogbert17 joined
[14:55] *** timotimo joined
[14:55] *** krunen joined
[14:55] *** eater joined
[14:55] *** leedo joined
[14:55] *** btyler joined
[14:55] *** camelia joined
[14:55] *** jsimonet joined
[14:55] *** ingy joined
[15:05] *** sivoais joined
[15:07] *** geospeck joined
[15:09] *** geospeck joined
[15:16] *** MasterDuke joined
[15:16] *** ChanServ joined
[15:17] <brrt> anyway, what i wanted to say was

[15:17] <brrt> the idea was to combine an array with a string that tells me how to interpret the string

[15:17] <brrt> almost like data and instructions

[15:17] <brrt> this is a pattern, hmmm

[15:20] *** sivoais joined
[15:36] *** AlexDaniel` joined
[16:03] *** geospeck joined
[16:32] *** zakharyas joined
[17:24] *** zakharyas joined
[17:55] *** AlexDaniel` joined
[18:03] *** domidumont joined
[18:06] *** domidumont1 joined
[18:38] *** AlexDaniel` joined
[18:43] *** domidumont joined
[18:48] *** domidumont joined
[19:01] *** AlexDaniel joined
[19:12] *** domidumont joined
[19:14] *** domidumont1 joined
[19:16] *** ilmari[m] joined
[19:19] *** travis-ci joined
[19:19] <travis-ci> MoarVM build errored. Bart Wiegmans '[ASAN] fix flags for darwin

[19:19] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/312964683 https://github.com/MoarVM/MoarVM/compare/924a75d55600...f2c35e1333e3

[19:19] *** travis-ci left
[19:36] *** unicodable6 joined
[19:36] *** committable6 joined
[20:22] *** domidumont joined
[20:33] *** benchable6 joined
[21:48] *** mst joined
[22:06] <timotimo> src/strings/unicode.c:72236:83: warning: pointer/integer type mismatch in conditional expression

[22:06] <timotimo> ? Bidi_Mirroring_Glyph_enums[0] : Bidi_Mirroring_Glyph_enums[result_val]) : bogus;

[22:06] <timotimo> should we be worried about this at all? i suppose it's not a problem if it's "bogus"?

[22:10] *** bisectable6 joined
[22:15] *** greppable6 joined
[22:15] *** squashable6 joined
[22:42] *** mst joined
[23:00] *** evalable6 joined
