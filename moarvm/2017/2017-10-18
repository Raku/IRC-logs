[01:56] *** ilbot3 joined
[03:05] *** evalable6 joined
[03:32] *** jpf joined
[04:34] *** evalable6 joined
[05:32] *** domidumont joined
[05:33] *** brrt joined
[05:33] <brrt> good * #moarvm

[05:53] *** evalable6 joined
[05:56] <brrt> okay, my current hypothesis is that there is a frame handler annotation on a phi node

[05:56] <brrt> that's a new thing, i think

[05:59] *** domidumont joined
[06:00] <brrt> yep, that's the thing

[06:00] <brrt> that means my MVM_spesh_iterator_skip_phi is the thing that's broken

[06:00] <brrt> okay, ehm.

[06:00] <brrt> i have a solution but i'm not happy

[06:02] *** domidumont joined
[06:11] <brrt> meh, i may have find a nicer fix

[06:12] <brrt> *found

[06:18] *** patrickz joined
[06:25] <Geth> Â¦ MoarVM: e001239a14 | (Bart Wiegmans)++ | tools/jit-dump.pl

[06:25] <Geth> Â¦ MoarVM: jit-dump.pl - rename option

[06:25] <Geth> Â¦ MoarVM:

[06:25] <Geth> Â¦ MoarVM: From 'dir' to 'directory'

[06:25] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e001239a14

[06:25] <Geth> Â¦ MoarVM: a51cd95365 | (Bart Wiegmans)++ | 2 files

[06:25] <Geth> Â¦ MoarVM: JIT [log] more noisy log

[06:25] <Geth> Â¦ MoarVM:

[06:25] <Geth> Â¦ MoarVM: We misnamed a dynamic_label control as a throwish control, which was

[06:25] <Geth> Â¦ MoarVM: very confusing. And - if we're going to be noisy, why not be really

[06:25] <Geth> Â¦ MoarVM: noisy.

[06:25] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a51cd95365

[06:25] <Geth> Â¦ MoarVM: bedc851138 | (Bart Wiegmans)++ | 2 files

[06:25] <Geth> Â¦ MoarVM: JIT [expr] process annotations on PHI node

[06:25] <Geth> Â¦ MoarVM:

[06:25] <Geth> Â¦ MoarVM: Presumably due to code elimination, (frame handler) annotations can

[06:25] <Geth> Â¦ MoarVM: sometimes end up on PHI nodes. Previously the expr JIT did not process

[06:25] <Geth> Â¦ MoarVM: these because the iterator skipped such nodes. That was not such a

[06:26] <Geth> Â¦ MoarVM: good idea as it seems to have led to a regression in Net::HTTP, which

[06:26] <Geth> Â¦ MoarVM: was fortunately caught by integration tests.

[06:26] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/bedc851138

[07:04] *** brrt joined
[07:07] <brrt> .tell AlexDaniel I believe commit bedc851138 fixes the blocker

[07:07] <yoleaux> brrt: I'll pass your message to AlexDaniel.

[07:07] <AlexDaniel`> .

[07:07] <AlexDaniel> .

[07:07] <yoleaux> 07:07Z <brrt> AlexDaniel: I believe commit bedc851138 fixes the blocker

[07:08] <AlexDaniel`> I can easily test it once nqp and rakudo bumps are in place

[07:08] <nwc10> brrt: you're doing it wrong! When you push a load of commits, the commit bot is supposed to fall off the channel. Not the author. OK? :-)

[07:09] * brrt notes that the timestamp coincides with the arrival of my train

[07:09] <AlexDaniel`> let's not assume who's a bot and who is not :)

[07:10] <AlexDaniel`> .oO( http://stoprobotabuse.com/ )

[07:17] <nwc10> well, I have seen brrt give a talk at a conference, so I'm pretty sure he's not

[07:17] <brrt> that's a fair point

[07:17] <nwc10> I have not yet seen Geth give a talk

[07:17] <brrt> on the other hand

[07:17] <nwc10> or make a commit

[07:17] <brrt> you have not seen me make a conference talk whilst on irc

[07:18] <brrt> so those might be separate identities

[07:18] <nwc10> that is a good point

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: f5b16ba01e | (Bart Wiegmans)++ | src/jit/expr.c

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: Add expression tree equivalence function

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer:

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: This is intended to be used in the optimizer. I'm not sure if I

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: should add a 'depth' parameter.

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: review: https://github.com/MoarVM/MoarVM/commit/f5b16ba01e

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: f1d6abf0f6 | (Bart Wiegmans)++ | 6 files

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: [JIT] Simple tree-rewriting optimizer

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer:

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: For some reason the multiple-referenced-loads optimization never seems

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: to run, which is funny because I really expected it to. But the

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: const idx -> addr optimization does.

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer:

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: This probably needs a few more layers of abstraction, but for now it works.

[07:18] <Geth> Â¦ MoarVM/jit-expr-optimizer: review: https://github.com/MoarVM/MoarVM/commit/f1d6abf0f6

[07:19] <brrt> those are not new commits though, those are rebased

[07:25] *** evalable6 joined
[07:25] <brrt> i think i've found why the optimizer couldn't optimize away double loads

[08:25] *** TimToady_ joined
[08:25] *** [Coke]_ joined
[08:25] *** jnthn_ joined
[08:25] *** Util_ joined
[08:27] *** timo joined
[08:43] *** robertle joined
[08:44] *** AlexDaniel` joined
[08:48] *** greppable6 joined
[08:48] *** bloatable6 joined
[08:48] *** coverable6 joined
[08:48] *** evalable6 joined
[08:48] *** squashable6 joined
[08:54] *** coverable6 joined
[09:05] <Geth> Â¦ MoarVM: 4eadf94599 | (Stefan Seifert)++ | src/core/nativecall.c

[09:05] <Geth> Â¦ MoarVM: JIT compile native calls with at most 1 string argument

[09:05] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/4eadf94599

[09:05] <Geth> Â¦ MoarVM: 008612fded | (Stefan Seifert)++ | src/core/nativecall.c

[09:05] <Geth> Â¦ MoarVM: Support unsinged ints when JIT compiling native calls

[09:05] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/008612fded

[09:05] <Geth> Â¦ MoarVM: e051ee3cd4 | (Stefan Seifert)++ | 3 files

[09:05] <Geth> Â¦ MoarVM: JIT compile native calls with VMArray arguments

[09:05] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e051ee3cd4

[09:06] <brrt> not to be outdone :-P

[09:06] <brrt> nine++

[09:06] <nine> Turns out, thanks to jnthn++ moving string encoding into the high level code, Inline::Perl5 doesn't actually pass strings to C code at all. It's just bufs. And VMArrays are trivial to support :)

[09:07] <brrt> that's fairly cool

[09:07] <nine> So what's missing now is rw args. I've made some decent progress however on the way back from my vacation :)

[09:08] <brrt> that's what holidays are for

[09:08] <brrt> by the way

[09:08] <brrt> am i mistaken in having seen a call-for-speakers at fosdem 2018?

[09:09] <jnthn> No, there was one

[09:15] <moritz> it was mentioned in a p6weekly the past few weeks

[10:11] *** zakharyas joined
[12:30] *** dogbert2 joined
[12:42] *** travis-ci joined
[12:42] <travis-ci> MoarVM build errored. Bart Wiegmans 'JIT [expr] process annotations on PHI node

[12:42] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/289362912 https://github.com/MoarVM/MoarVM/compare/676723d736b8...bedc8511387a

[12:42] *** travis-ci left
[12:46] *** releasable6 joined
[12:49] <brrt> i'm not sure that's actually true, it appears to have simply no output at all

[12:57] *** AlexDaniel` joined
[13:33] <Guest2271> easy enough to restart that job

[14:02] *** zakharyas joined
[15:03] *** brrt joined
[15:20] <Geth> Â¦ MoarVM/spesh_faster_shutdown: f75dfa72f9 | (Timo Paulssen)++ | 3 files

[15:20] <Geth> Â¦ MoarVM/spesh_faster_shutdown: allow VM shutdown to cause early spesh exit.

[15:20] <Geth> Â¦ MoarVM/spesh_faster_shutdown: review: https://github.com/MoarVM/MoarVM/commit/f75dfa72f9

[15:40] <timotimo> this will also want to kick off a submission from the main thread or something to cause the worker to run into its "should i keep running" check

[15:41] <jnthn> Why bother? If it's sat waiting on a queue, it's not using any resources

[15:41] <timotimo> i'm not entirely sure how the quit process really works in this case

[15:42] <timotimo> running to the end of the entry point seems a surefire way to get the thread to disappear nicely

[15:42] *** domidumont joined
[16:25] *** TimToady joined
[16:33] *** robertle joined
[17:49] *** domidumont joined
[17:50] *** patrickz joined
[18:15] *** patrickz joined
[19:39] *** evalable6 joined
[21:19] *** brrt joined
[21:24] *** zakharyas joined
[22:21] *** brrt joined
