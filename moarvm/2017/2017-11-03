[00:31] *** lizmat joined
[00:35] *** travis-ci joined
[00:35] <travis-ci> MoarVM build failed. Jonathan Worthington 'Merge pull request #737 from MasterDuke17/create_coerce_II_op

[00:35] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/296539462 https://github.com/MoarVM/MoarVM/compare/e76788819514...5a66a38511d4

[00:35] *** travis-ci left
[00:59] *** evalable6 joined
[02:55] *** colomon joined
[02:57] *** ilbot3 joined
[03:27] *** evalable6 joined
[06:19] *** evalable6 joined
[06:38] *** brrt joined
[07:20] *** evalable6 joined
[07:42] *** domidumont joined
[07:47] *** domidumont joined
[07:59] *** brrt joined
[07:59] *** domidumont joined
[08:54] *** zakharyas joined
[09:05] *** patrickz joined
[09:39] <brrt> good * #moarvm

[09:53] *** Ven joined
[11:02] *** leont joined
[11:05] *** Ven joined
[11:17] *** AlexDaniel joined
[11:34] *** squashable6 joined
[11:55] *** Ven joined
[13:40] *** zakharyas joined
[13:47] <lizmat> Q: would an nqp op that would clone a list *and* resets the size be an option?  I mean, it could just return the original and create a new on in its stead underneath ?  Wouldn't that potentially save a lot of moving stuff around ?

[13:48] <lizmat> same for hashes BTW

[14:10] <MasterDuke> jnthn: i believe https://github.com/MoarVM/MoarVM/pull/734/ is good to go

[14:42] *** Ven joined
[14:52] *** ggoebel joined
[15:14] *** AlexDaniel joined
[15:48] <jnthn> MasterDuke: will look a little later, thanks.

[15:49] <MasterDuke> cool

[16:07] *** brrt joined
[16:18] <brrt> lizmat: i'm not seeing the purpose just now

[16:24] *** Ven joined
[17:07] *** buggable joined
[17:32] *** robertle joined
[17:41] *** greppable6 joined
[17:42] *** domidumont joined
[18:00] *** AlexDaniel joined
[18:39] *** bisectable6 joined
[18:45] *** evalable6 joined
[20:03] *** releasable6 joined
[21:53] <Geth> ¦ MoarVM/master: 5 commits pushed by MasterDuke17++, (Jonathan Worthington)++

[21:53] <Geth> ¦ MoarVM/master: d42bf0cf63 | If dividing by 1, just return the numerator

[21:53] <Geth> ¦ MoarVM/master: b58b30714d | Make sure both objects are the same type...

[21:53] <Geth> ¦ MoarVM/master: 3ed5c83bf0 | Merge branch 'master' into fast_path_for_dividing_by_1_in_MVM_bigint_div

[21:53] <Geth> ¦ MoarVM/master: 72379ca5c3 | Merge branch 'master' into fast_path_for_dividing_by_1_in_MVM_bigint_div

[21:53] <Geth> ¦ MoarVM/master: 31024652a0 | Merge pull request #734 from MasterDuke17/fast_path_for_dividing_by_1_in_MVM_bigint_div

[21:53] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/f88ab169d5...31024652a0

[21:55] <MasterDuke> ah, thanks

[21:56] <Geth> ¦ MoarVM: 483b3b8519 | (Timo Paulssen)++ | src/core/fixedsizealloc.c

[21:56] <Geth> ¦ MoarVM: FSA size debug: cooperate with valgrind

[21:56] <Geth> ¦ MoarVM:

[21:56] <Geth> ¦ MoarVM: when the free size is wrong, it gives the stack trace for

[21:56] <Geth> ¦ MoarVM: where the corresponding data was allocated, how many bytes are

[21:56] <Geth> ¦ MoarVM: marked "defined" by valgrind, and of course the current stacktrace.

[21:56] <Geth> ¦ MoarVM: On top of that, it outputs the passed and expected size.

[21:56] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/483b3b8519

[21:56] <Geth> ¦ MoarVM: 235f6147dd | (Timo Paulssen)++ | src/core/fixedsizealloc.c

[21:56] <Geth> ¦ MoarVM: use %lu instead of %d, put in missing output in one case

[21:56] <Geth> ¦ MoarVM:

[21:56] <Geth> ¦ MoarVM: MasterDuke17++

[21:56] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/235f6147dd

[21:56] <Geth> ¦ MoarVM: ac0282af2a | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/core/fixedsizealloc.c

[21:56] <Geth> ¦ MoarVM: Merge pull request #713 from MoarVM/fsa_valgrind_error_support

[21:56] <Geth> ¦ MoarVM:

[21:56] <Geth> ¦ MoarVM: FSA size debug: cooperate with valgrind

[21:56] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ac0282af2a

[23:14] <MasterDuke> jnthn: how would you recommend debugging `MoarVM panic: Heap corruption detected: pointer 0x7fba6168f720 to past fromspace`? gdb and valgrind don't really help much, and asan just complains about leaks

[23:15] <MasterDuke> it's (likely) a nativecall thing, and MVM_SPESH_DISABLE=1 doesn't stop it

[23:17] <jnthn> Try MVM_GC_DEBUG=1

[23:18] <jnthn> You can also lower the nursery size in collect.h to make the bug more likely to show up

[23:57] <MasterDuke> .tell timotimo followed jnthn's advice and got a general protection fault in valgrind with azawawi's test code: https://gist.github.com/MasterDuke17/ee516fde9916dc4dfc6ab74ca4e72e82

[23:57] <yoleaux> MasterDuke: I'll pass your message to timotimo.

[23:57] <MasterDuke> jnthn: ^^^ might be interested also
