[00:11] *** greppable6 joined
[00:24] *** greppable6 joined
[00:34] *** greppable6 joined
[01:48] *** ilbot3 joined
[03:00] *** brrt joined
[05:34] *** domidumont joined
[05:41] *** domidumont joined
[05:59] *** brrt joined
[06:12] *** domidumont joined
[06:14] *** brrt joined
[06:38] <brrt> i recall having a 'is this expr tree equivalent to this other tree' that would be pretty useful for the optimizer

[06:46] *** brrt joined
[06:52] *** Ven joined
[07:12] *** brrt joined
[07:26] *** zakharyas joined
[07:39] *** nine joined
[07:40] *** camelia joined
[07:42] <brrt> i'm thinking of things that really need fixing prior to merging. it's not that much anymore

[07:42] <brrt> i guess we would like to have a proof-of-concept type specialization in the JIT

[07:44] <nwc10> as in, "soemthing that demonstrates that the API actually will work as planned" before committing to the API?

[07:45] <brrt> yes

[07:46] <brrt> same for the optimizer, i guess

[07:48] *** camelia joined
[07:52] *** Ven joined
[08:14] <brrt> hmm

[08:14] <brrt> maybe i'm just going to reorganize the plan file to indicate what really needs doing

[08:43] <jnthn> morning! o/

[08:44] <brrt> morning jnthn

[08:44] <brrt> would you have some time today to discuss the plan of action for merging even-moar-jit

[08:44] <brrt> i mean, i'm running out of blockers

[08:46] <jnthn> brrt: Yes, I can make time for that :)

[08:46] <brrt> nice :-)

[08:47] <brrt> i'm at $dayjob atm, so i don't have time right now myself

[08:48] <jnthn> :)

[08:48] <jnthn> Me too, but Perl 6 is my $dayjob at the moment :)

[08:50] <brrt> hehe

[08:50] <brrt> that's nice

[08:50] <brrt> i'm in perl5 land, still, which is also pretty nice

[08:52] <jnthn> Mine varies, which is also quite nice in that I get to see new stuff now and then :-)

[08:59] *** robertle joined
[09:55] *** Ven joined
[10:42] *** robertle joined
[11:02] *** AlexDaniel joined
[11:48] *** harrow joined
[12:52] *** bisectable6 joined
[14:56] *** greppable6 joined
[15:19] <robertle> if I want to return a number from a moar op, but want to return undef in some cases, what do I do? return a MVMObject*? I currently use a MVMint64 which can't do undef. if that is right, how do I create the object from the int? MVM_repr_box_int?

[15:19] <jnthn> That sounds like an odd thing to want to do at op level

[15:20] <jnthn> MVM_repr_box_int is the way to get an int object though

[15:20] <jnthn> And you can find the type to pass for it for the current language via hll_config

[15:21] <robertle> I am only fooling around, trying to learnn

[15:21] <jnthn> (See src/core/hll.h for relevant functions)

[15:21] <jnthn> Ah, OK ;-)

[15:21] <jnthn> Than carry right on :-)

[15:21] <robertle> as a toy project, I want to make the thread scheduler default to a number of threads that is the number of cores on the system rather than 16

[15:21] <robertle> I reckoned that determining the number of cores is best done in the VM, as it is target-specific

[15:22] <jnthn> I think there's a libuv function to get that

[15:22] <robertle> so I added a op for that, and wired ti through nqp into rakudo where it is used

[15:22] <robertle> instead of the 16 that is

[15:22] <jnthn> Trouble is

[15:22] <robertle> now the part that determines the numebr of cores is operating system specific, so if I can't figure it out I still want to use 16

[15:22] <robertle> but I don't want to put the number 16 into moar, rather into rakudo where it was

[15:23] <robertle> hence the idea to returna  number or undef i the vm doesn't know

[15:23] <robertle> or can't be asked ;)

[15:23] <jnthn> The right number of threads is really a dynamic rather than a static property

[15:23] <robertle> if lubuv has a poortable way to determine the number of cores, that would be great, will hceck

[15:23] <jnthn> I think I saw it in uv.h, yeah

[15:23] <jnthn> Either way it's useful information to expose

[15:24] <robertle> right, but currently it is static and 16, I would make it static and depenmding on the hardware

[15:24] <robertle> of course you could still override through env

[15:24] <jnthn> Sure, though my eventual plan is that it will auto-tune

[15:24] <jnthn> Like adding threads when it looks like stuff is deadlocked

[15:24] <jnthn> But otherwise trying not to create so many

[15:25] <robertle> that sounds super

[15:25] <jnthn> Though the number of cores is a goodish factor into that

[15:25] <Zoffix> Autotune? Will we be releasing a lot of poor quality music? :D

[15:25] <jnthn> so it's a useful op to have however we do it

[15:25] <jnthn> Zoffix: haha :D

[15:25] <robertle> as I said, just fooling around

[15:25] <jnthn> So far as "don't know" goes though, I'd just return 0

[15:26] <jnthn> There's no semi-predicate issue because if a machine has 0 cores it in, well, what's running our code :D

[15:26] <jnthn> *in it

[15:26] <robertle> right, that is better than undef, or at least lighter

[15:29] <robertle> now that uv function removes the need to do anything platform-specific, which is a shame because that's one of the things I was trying to play with

[15:30] <timotimo> Zoffix: you don't seem to know about "Auto-tune The News", which is good quality music ;)

[15:31] <jnthn> I have a really bad idea. If it's me who works on the scheduler auto-tuning thing, then I could give a talk...then we can autotune the video. :P

[15:32] <Zoffix> :)

[15:33] <jnthn> If it works for the news, it's sure to work for Perl 6 talks too :P

[15:34] <timotimo> only new perl6 talks

[15:41] *** greppable6 joined
[16:18] *** mst joined
[16:36] *** greppable6 joined
[16:37] *** greppable6 joined
[16:54] *** domidumont joined
[17:20] *** domidumont1 joined
[17:25] *** domidumont joined
[17:46] <timotimo> does HASH_DELETE somehow impact the value pointed at by the hash? it seems to null out the st

[17:50] *** robertle joined
[17:50] <timotimo> time fore --optimize=0

[18:24] <timotimo> rr isn't helping me very much because i only get to see "it's inside the HASH_DELETE (or HASH_BIND) macro", but not what code it's executing, and the disassembly isn't helping terribly much

[19:56] *** brrt joined
[20:07] <brrt> \o

[20:36] <timotimo> o/

[20:51] *** committable6 joined
