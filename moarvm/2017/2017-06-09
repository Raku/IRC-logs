[00:00] *** AlexDaniel joined
[00:06] *** benchable6 joined
[01:17] <samcv> good *

[01:34] <japhb> .ask jnthn Why does a968d2759c9c16e76e57718063f968a7152795a5 specify a non-power-of-two buffer size?

[01:34] <yoleaux> japhb: I'll pass your message to jnthn.

[01:34] <japhb> .ask jnthn (Or to be more specific, not a power of 2 and not a power of two minus 1 either)

[01:34] <yoleaux> japhb: I'll pass your message to jnthn.

[01:48] *** ilbot3 joined
[02:00] <samcv> \o/ yay

[02:00] <samcv> i maybe have solved the prepend bug. well at least i got this example to work properly :)

[02:00] <samcv> progress!

[02:01] <samcv> todo's 639-640, 2395, 2397

[02:01] <samcv> passed now in GraphemeBreakTest.t :)

[05:35] *** brrt joined
[05:42] <samcv> here we go

[05:42] <Geth> ¦ MoarVM: 8650c2a3fc | (Samantha McVey)++ | src/strings/normalize.c

[05:42] <Geth> ¦ MoarVM: [unicode-grant] Use norm instead of n for the normalizer variable

[05:42] <Geth> ¦ MoarVM:

[05:42] <Geth> ¦ MoarVM: It is much easier to tell what norm revers to than a single letter

[05:42] <Geth> ¦ MoarVM: variable.

[05:42] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8650c2a3fc

[05:42] <Geth> ¦ MoarVM: 78b6051210 | (Samantha McVey)++ | 2 files

[05:42] <Geth> ¦ MoarVM: [unicode-grant] Add improved support for GCB=Prepend

[05:42] <Geth> ¦ MoarVM:

[05:42] <Geth> ¦ MoarVM: Previously we would only have the right functionality with

[05:42] <Geth> ¦ MoarVM: Grapheme_Cluster_Break=Prepend if the codepoint following the

[05:42] <Geth> ¦ MoarVM: Prepend character had NFG_QC=0.

[05:42] <Geth> ¦ MoarVM:

[05:42] <Geth> ¦ MoarVM: We now save state in the MVMNormalizer so we know to not take the short

[05:42] <Geth> ¦ MoarVM: normalization path when we follow a Prepend character.

[05:42] <Geth> ¦ MoarVM:

[05:42] <Geth> ¦ MoarVM: The only case this doesn't hold is when a control character follows a

[05:42] <Geth> ¦ MoarVM: Prepend character.

[05:42] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/78b6051210

[05:42] <Geth> ¦ MoarVM: ba6725f358 | (Samantha McVey)++ | 2 files

[05:42] <Geth> ¦ MoarVM: [unicode-grant] Improve Regional Indicators, support during norm.

[05:42] <Geth> ¦ MoarVM:

[05:42] <Geth> ¦ MoarVM: Although this needs a bit more work, we now pass all of the Regional

[05:42] <Geth> ¦ MoarVM: indicators tests from GraphemeClusterBreak.txt Unicode test.

[05:42] <Geth> ¦ MoarVM:

[05:42] <Geth> ¦ MoarVM: We only fail 2 lines now, both of which are Emoji related.

[05:42] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ba6725f358

[05:43] <brrt> ohai samcv!

[05:44] <samcv> hey :)

[05:44] <samcv> good day today

[05:44] <samcv> yesterday as well to be honest. fixing ignorecase+ignoremark at the same time made me very happy

[05:45] <samcv> lots of work going on so many places

[05:51] *** domidumont joined
[05:51] <brrt> nice :-)

[05:57] *** domidumont joined
[06:40] *** brrt joined
[07:15] *** harrow joined
[07:30] *** domidumont joined
[08:38] *** geekosaur joined
[08:39] *** robertle joined
[08:54] *** geekosaur joined
[09:35] *** domidumont joined
[09:55] <jnthn> .tell japhb Probably 'cus I typed the number and mis-remembered the power of 2 :P

[09:55] <yoleaux> jnthn: I'll pass your message to japhb.

[10:20] <brrt> misremembering powers of 2 is implausible

[10:20] <brrt> :-P

[10:21] <nine> How would one misremember a power of 2?

[10:22] * nine shakes head

[10:23] <nwc10> 2**5.39231742277876

[10:23] <nwc10> does "powers of 2" imply "integer powers of 2"?

[10:24] *** lizmat_ joined
[10:28] <brrt> well, touche

[10:30] <nine> nwc10: so powers of 2 answer all questions now?

[10:30] <nwc10> I can't see how to get to 0

[10:31] <nwc10> 0 isn't important, is it? :-)

[10:32] <nine> Maybe not for life and the universe

[10:38] *** lizmat joined
[11:08] <brrt> pypy v5.8 release. cue respectful applause: https://morepypy.blogspot.co.uk/2017/06/pypy-v58-released.html

[11:09] <samcv> isn't 2**-∞ 0?

[11:09] <samcv> !p6 2**-99999999

[11:09] <samcv> m: say 2**-99999999

[11:09] <camelia> rakudo-moar 3ff29d: OUTPUT: «Numeric underflow␤  in block <unit> at <tmp> line 1␤␤»

[11:09] <samcv> that's close enough to zero right?

[11:10] <samcv> :^)

[11:17] <brrt> hmm, wonder why that *isn't* just 0

[11:17] <samcv> hm

[11:18] <samcv> well i'm guessing the denominator got too big

[11:18] <samcv> so it over-underflowed

[11:18] <samcv> underflowed by overflowing

[11:19] <samcv> also good question about why it doesn't become zero. hm

[11:20] <samcv> i gotta go to bed. night all o/

[11:40] *** AlexDaniel joined
[12:07] *** zakharyas joined
[12:11] *** lizmat joined
[12:26] *** lizmat joined
[12:31] *** lizmat joined
[12:57] *** lizmat joined
[13:57] *** lizmat joined
[14:16] *** AlexDaniel joined
[14:38] *** brrt joined
[14:52] *** bisectable6 joined
[15:28] *** lizmat joined
[15:28] *** robertle joined
[15:34] <japhb> What a bunch of hecklers.  :-)

[15:34] <yoleaux> 09:55Z <jnthn> japhb: Probably 'cus I typed the number and mis-remembered the power of 2 :P

[15:35] <japhb> And yes, *integer* power of 2 is implied, otherwise as pointed out "power of 2" wouldn't be terribly restrictive.  :-)

[15:43] *** lizmat joined
[15:59] *** lizmat joined
[16:14] <robertle> my moar 2017.05-25-g62bc54e93 just died in munmap_chunk(), but not reproducible. is that of interest?

[16:29] *** lizmat joined
[16:49] *** Zoffix_ joined
[16:59] *** lizmat joined
[17:17] *** domidumont joined
[17:29] *** lizmat joined
[17:32] *** eveo joined
[17:39] *** zakharyas joined
[18:00] *** lizmat joined
[18:31] *** lizmat joined
[19:02] *** lizmat joined
[19:03] *** AlexDaniel joined
[19:32] *** lizmat joined
[20:03] *** lizmat joined
[20:33] *** lizmat joined
[21:04] *** lizmat joined
[21:23] *** zakharyas joined
[21:37] <timotimo> you got the stack trace?

[21:37] <timotimo> oh, i.m a tad late for that %)

[21:43] *** lizmat joined
[21:50] <robertle> timotimo: https://gist.github.com/robertlemmen/777e48c570d744684ae0e0e580c9a082

[21:50] <jnthn> Ewww

[21:51] <jnthn> Any chance you can do it with a MoarVM configured with --debug so we get a few more symbols?

[21:51] *** geekosaur joined
[21:51] <jnthn> Also, running under perl6-valgrind-m may be worthwhile

[21:51] <jnthn> (Though probably much more worthwhile with --debug also)

[21:59] *** lizmat joined
[22:06] *** lizmat joined
[22:12] <robertle> I ran it a few more times, but it didn't crash again. will rebuild with --debug and set up a loop to run it tomorrow or so...

[22:12] <jnthn> Alright, thanks.

[22:13] <jnthn> Is it multi-threaded, ooc?

[22:14] <robertle> my part isn't, but it is using http::client, checking that...

[22:44] *** MasterDuke joined
[22:44] <MasterDuke> timotimo, jnthn: think this would be useful for moarvm? https://blog.acolyer.org/2017/06/08/syncperf-categorizing-detecting-and-diagnosing-synchronization-performance-bugs/

[22:50] <jnthn> Would sure be interesting to compare its findings with my guess at what its findings would be :)

[22:52] <timotimo> yes, yes, interesting

[23:20] <jnthn> 'night o/

[23:21] <eveo> night

[23:37] *** robertle_ joined
