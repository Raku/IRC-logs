[01:52] *** ilbot3 joined
[02:01] *** MasterDuke joined
[02:14] *** Ven`` joined
[05:01] *** evalable6 joined
[05:34] *** brrt joined
[05:39] <brrt> good * #moarvm

[06:27] <timotimo> good morning brrt

[06:27] <samcv> morning guys

[06:28] <timotimo> hey samcv

[06:40] *** brrt joined
[07:10] <brrt> so, i've finally found all commits i want rebased on top of master

[07:23] <nine> brrt: cool! That was probably the hardest part

[07:27] <brrt> yeah, the next part is removing all accidentally added stuff from even-moar-jit

[07:29] <samcv> yay

[07:31] <nine> I wonder how many conflicts I'll get with the jit_nativecall branch after your merge

[07:31] <brrt> not too many i hope, since you're not using the internal jit graph builder structure

[07:31] <brrt> fwiw, regarding the pain of building a jit graph by hand

[07:31] <brrt> i feel you :-)

[07:32] <brrt> the problems, or at least what i think is the problem, is that the 'legacy' jit has nonuniform objects, so you have to specify every damn thing by name

[07:33] <brrt> the expr JIT has a single 'type' of object (a node), and it's an integer, and it's stored in an array that can be modfiied by all the usual array methods

[07:33] <brrt> and… it's just much, much easier to do, even 'by hand'

[07:34] <brrt> the uniformity is a big part of why we can have templates, and tiling, and pattern matching, etc

[07:37] <brrt> and a universal tree traverser, etc

[07:38] <nine> I have no idea how long my code will survive in MoarVM, but at least I now have a very good idea how the lego JIT works (it's really that simple :)) and what the motivation for even-moar-jit was

[07:42] <brrt> :-)

[07:42] <brrt> samcv: i will publish my slides, yes, but i'ld like to add a transcript at the same time

[07:42] <brrt> or at least

[07:42] <brrt> some description that approximates the talk i gave with it

[07:43] <samcv> ok :)

[08:01] *** dogbert11 joined
[08:22] <Geth> ¦ MoarVM/jit-legacy-cleanup: 6 commits pushed by (Bart Wiegmans)++

[08:22] <Geth> ¦ MoarVM/jit-legacy-cleanup: 892aa0bb4c | Building .dasc files depends on dynasm version

[08:22] <Geth> ¦ MoarVM/jit-legacy-cleanup: 5045cc73fb | Add minimal 'dynamic array' library using macros

[08:22] <Geth> ¦ MoarVM/jit-legacy-cleanup: dba0c3e359 | Fix dynamic array memory corruption

[08:22] <Geth> ¦ MoarVM/jit-legacy-cleanup: bfc6ed2546 | Ensure dynamic array block is zeroed

[08:22] <Geth> ¦ MoarVM/jit-legacy-cleanup: 57d67c868a | Make the Jit Graph use dynamic arrays

[08:22] <Geth> ¦ MoarVM/jit-legacy-cleanup: a924121c3c | Cleanup jit graph after use

[08:22] <Geth> ¦ MoarVM/jit-legacy-cleanup: review: https://github.com/MoarVM/MoarVM/compare/0000000000...a924121c3c

[08:32] *** brrt joined
[08:41] <nine> brrt: is that all the changes?

[09:27] <samcv> i need to start putting together my resume and looking for a job

[09:43] <brrt> not yet

[09:49] <nine> I think, I'm gonna do the unboxing of arguments in the generated native sub body, rather than in JITed code. That way spesh will be able to strip out unneeded unboxing (same as deconts).

[09:51] <nine> Also a somewhat funny part: at one point I will want to jit the nativecallinvokejit op itself to enable JITing those deconting and unboxing ops

[09:51] <nine> JITception

[10:24] *** zakharyas joined
[10:39] <eater> is there any docs about what the life cycle of a perl6 script is with MoarVM?

[11:28] *** brrt joined
[11:55] <brrt> eater: can you please specify what you mean with lifecycle

[12:04] *** huggable joined
[12:04] <Zoffix> huggable: internals course

[12:04] <huggable> Zoffix, Rakudo/NQP Internals Course: https://github.com/edumentab/rakudo-and-nqp-internals-course#rakudo-and-nqp-internals-workshop

[12:04] <Zoffix> eater: ^ perhaps you'll find this slightly-outdated course helpful

[12:13] <eater> thanks

[12:37] *** MasterDuke joined
[12:38] <MasterDuke> timotimo: do i just need your MoarVM branch for the binary heap analyzer change? or also a branch of the analyzer itself?

[12:38] <yoleaux> 04:37Z <samcv> MasterDuke: thanks for the INTERPOLATE info

[13:13] *** stmuk_ joined
[13:56] *** benchable6 joined
[14:35] *** AlexDaniel joined
[15:09] *** brrt joined
[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: 0ceb38a9ea | (Bart Wiegmans)++ | 6 files

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: Replace explicit JIT function return frame check

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup:

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: This greatly simplifies the JIT compiler driver and jump-out

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: logic. MVM_frame_try_return is now called within the JIT-compiled

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: code.

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: review: https://github.com/MoarVM/MoarVM/commit/0ceb38a9ea

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: 975bbb09b9 | (Bart Wiegmans)++ | 7 files

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: Wrap dasm_State in MVMJitComiler structure

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup:

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: This changes function signatures, but is not very exciting

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: otherwise. It prevents spilling the dasm_State structure, and we can

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: use it to collect all compiler state in a single object.

[15:15] <Geth> ¦ MoarVM/jit-legacy-cleanup: review: https://github.com/MoarVM/MoarVM/commit/975bbb09b9

[15:18] *** brrt joined
[15:28] *** brrt1 joined
[15:28] <timotimo> MasterDuke: analyzer has a branch in my own fork

[15:39] *** brrt joined
[16:07] *** AlexDaniel joined
[16:09] <Geth> ¦ MoarVM/jit-legacy-cleanup: 6 commits pushed by (Bart Wiegmans)++

[16:09] <Geth> ¦ MoarVM/jit-legacy-cleanup: 6695331fa0 | Split out compiler init / deinit

[16:09] <Geth> ¦ MoarVM/jit-legacy-cleanup: 91911bf881 | Organise architecture-specific files

[16:09] <Geth> ¦ MoarVM/jit-legacy-cleanup: 30cd3ca001 | Check return status of DynASM

[16:09] <Geth> ¦ MoarVM/jit-legacy-cleanup: 5c173d21fc | Remove JIT intermediates in make clean

[16:09] <Geth> ¦ MoarVM/jit-legacy-cleanup: 3caa225413 | Add 'POP' dynamic array method

[16:09] <Geth> ¦ MoarVM/jit-legacy-cleanup: e615620dba | Flush log on oops

[16:09] <Geth> ¦ MoarVM/jit-legacy-cleanup: review: https://github.com/MoarVM/MoarVM/compare/975bbb09b9...e615620dba

[16:26] *** coverable6 joined
[16:26] *** committable6 joined
[16:26] *** bloatable6 joined
[16:26] *** bisectable6 joined
[16:26] *** quotable6 joined
[16:26] *** releasable6 joined
[16:26] *** greppable6 joined
[16:26] *** evalable6 joined
[16:26] *** benchable6 joined
[16:26] *** unicodable6 joined
[16:26] *** statisfiable6 joined
[16:31] <timotimo> i like seeing progress on this :)

[16:44] *** leont joined
[16:52] *** zakharyas joined
[17:17] *** MasterDuke joined
[17:49] *** vendethiel- joined
[18:07] *** Ven joined
[18:40] *** yetanotehrloser joined
[18:45] *** lizmat joined
[19:34] *** zakharyas joined
[20:13] <MasterDuke> how does `--tracing` work?

[20:17] <Geth> ¦ MoarVM: 5afc7bb673 | pmurias++ | src/gc/debug.h

[20:17] <Geth> ¦ MoarVM: Avoid evaluating arguments to MVM_ASSERT_NOT_FROMSPACE when it's disabled

[20:17] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/5afc7bb673

[20:17] <Geth> ¦ MoarVM: e71d2a9f5a | (Jimmy Zhuo)++ (committed using GitHub Web editor) | src/gc/debug.h

[20:17] <Geth> ¦ MoarVM: Merge pull request #658 from pmurias/fix-assert-not-fromspace

[20:17] <Geth> ¦ MoarVM:

[20:17] <Geth> ¦ MoarVM: Avoid evaluating arguments to MVM_ASSERT_NOT_FROMSPACE

[20:17] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e71d2a9f5a

[20:18] <Geth> ¦ MoarVM: MasterDuke17++ created pull request #667: Align MVM_TELEMETRY_LOG usage statement

[20:18] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/667

[20:19] <Geth> ¦ MoarVM: 7a980ba828 | MasterDuke17++ (committed using GitHub Web editor) | src/main.c

[20:19] <Geth> ¦ MoarVM: Align MVM_TELEMETRY_LOG usage statement

[20:19] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7a980ba828

[20:19] <Geth> ¦ MoarVM: 56e2219b6f | (Jimmy Zhuo)++ (committed using GitHub Web editor) | src/main.c

[20:19] <Geth> ¦ MoarVM: Merge pull request #667 from MasterDuke17/patch-2

[20:19] <Geth> ¦ MoarVM:

[20:19] <Geth> ¦ MoarVM: Align MVM_TELEMETRY_LOG usage statement

[20:19] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/56e2219b6f

[20:25] <Geth> ¦ MoarVM: MasterDuke17++ created pull request #668: Align --tracing usage statement

[20:25] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/668

[20:28] <MasterDuke> i set TRACING = 1 in the Makefile.in and then ran moar with --tracing, but i get the following errors:

[20:29] <MasterDuke> Op 159   at <unknown>:1  (/home/dan/Source/perl6/install/share/perl6/runtime/perl6.moarvm:<dependencies+deserialize>)

[20:29] <MasterDuke> Op 159   at <unknown>:1  (/home/dan/Source/perl6/install/share/perl6/runtime/perl6.moarvm:<entry>)

[20:29] <MasterDuke> though my perl6 script does run

[20:33] *** nativecallable6 joined
[21:57] *** lizmat joined
[21:58] <timotimo> i don't think anybody has used moarvm's tracing support in a loooooong time

[21:58] <timotimo> look it doesn't even get the op's name for you

[22:01] <MasterDuke> timotimo: gonna be afk for a bit, but do you have any thoughts on my INTERPOLATE questions in #perl6-dev?

[22:03] <timotimo> why it gets called so often?

[22:03] <timotimo> i'd say "check out the --target=mast" or something, but i'm not sure

[23:27] <AlexDaniel> ? Community Bug SQUASHathon http://blogs.perl.org/users/zoffix_znet/2017/08/youre-invited-community-bug-squashathon.html

[23:37] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/08/28/2017-35-serving-cro/

[23:47] *** TimToady joined
