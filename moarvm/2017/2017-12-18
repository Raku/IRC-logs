[01:30] *** NEDERLA606 joined
[01:37] *** zostay left
[02:16] *** tbrowder joined
[02:21] *** icecre112 joined
[02:22] *** tbrowder left
[02:58] *** ilbot3 joined
[06:53] *** Morfent joined
[06:55] *** Morfent joined
[07:22] *** brrt joined
[08:02] *** domidumont joined
[08:03] *** brrt joined
[08:07] *** domidumont joined
[09:31] *** brrt joined
[09:40] <brrt> good * #moarvm

[09:40] <brrt> so, i'm annoyed by the fact that ASAN on macOS is not showing me the same failures that ASAN on fedora *is*

[09:40] <brrt> i know, different compilers, platforms etc

[09:40] <brrt> so now i'm going to create a VM so I can actually get some useful work done :-P

[10:08] *** brrt joined
[10:36] *** domidumont1 joined
[10:50] *** brrt joined
[11:02] *** Voldenet joined
[11:02] *** Voldenet joined
[11:06] *** dogbert2 joined
[11:26] <samcv> does someone want to work on the changelog for me this month? i'm sick and don't feel up to doing the whole thing. though i can do all of my own commits at least

[11:27] <lizmat> samcv: will see what I can do

[11:29] <lizmat> samcv: so is it the plan to change the wiki and then transplant that into the ChangeLog file ?

[11:29] <samcv> yeah

[11:30] <samcv> ping me when you or whoever is close to done and i'll make sure my own commits are properly represented :)

[11:30] <AlexDaniel> samcv++ lizmat++

[11:37] <lizmat> AlexDaniel: don't ++ me just yet  :-)

[11:47] <lizmat> samcv did like 80+% of MoarVM commits this month

[11:48] <lizmat> with most of them related to ucd2c.pl

[11:48] <lizmat> samcv: I've gone through the commits of last month and documented what I could

[11:48] <lizmat> HTH  :-)

[11:49] <samcv> thanks! will look after i have some tea

[11:50] <lizmat> good plan: I will also get some  :-)

[12:36] *** brrt joined
[12:44] *** squashable6 joined
[12:44] *** reportable6 joined
[12:44] *** unicodable6 joined
[12:44] *** greppable6 joined
[12:44] *** benchable6 joined
[13:14] <samcv> ok so i've at least narrowed down part of the issue i've been working on fixing with ucd2c.pl. it seems that it may be the binary search algorithm or something. it's getting the wrong bitfield row and at least that is happening and causing it to start failing massively when i add in codepoints not in UnicodeData.txt

[16:05] *** brrt joined
[16:39] *** zakharyas joined
[16:41] * samcv is happy she's finally making some inroads on fixing the source of the issue she's been trying to hunt down for this month

[16:43] <brrt> \o/

[16:43] <brrt> tell us more

[16:44] <samcv> well for the last few weeks i've been improving ucd2c.pl to ultimately try and track down this error. most of the changes i've made haven't resulted in code changes. one significant one. is so all points are stored in $POINTS_BY_CODE we used to have $points_by_code and $points_by_hex. so i made all use one refhash, $POINTS_BY_CODE (since i renamed everything to be uppercase for globals)

[16:45] <brrt> uhuh

[16:45] <samcv> and so then next, all points have a $POINTS_BY_CODE->{20}->{next_point} and this used to be set only for UnicodeData.txt, and so we had effectively one sub setting that and another one also setting it

[16:46] <samcv> and i wanted everything to use the same method to set it. and it's very problematic. because that assumes input is one ordered, and two it's just error prone

[16:46] <samcv> if i wanted to extend functionality so we could add properties for codepoints not in UnicodeData.txt

[16:47] <samcv> also another thing that was error prone was adding codepoints to @$PLANES. so what it does now it iterate through $POINTS_BY_CODE refhash once we've put all the data into it, setting {next_point} and adding it to @$PLANES

[16:48] <brrt> uhuh

[16:48] <samcv> so then we make sure anything in $POINTS_BY_CODE has those values set properly. since though it worked fine normally, when i started to try and make more changes it started breaking things. i think because there must have been some minor "mistake" with next_point or the planes and it missed some or something

[16:49] <samcv> anyway that's been fixed, and now i've been trying to track down the same problem really, but finally have figured out where it is located. and it's MVM_codepoint_to_bitfield_row

[16:52] <samcv> but i believe the binary search if else's are missing certain codepoints

[16:53] <samcv> possibly because it has separate binary search sections for codepoints < 0x10000

[16:53] <samcv> and i think the @$EXTENTS may cause it then to miss those overlapped codepoints. and maybe some other issue

[17:14] <AlexDaniel> samcv: any ETA for the moarvm release? I want to adjust myself accordingly

[17:17] <timotimo> adjust yourself before you bust yourself

[17:21] <samcv> AlexDaniel: a day or so possibly. since i've made progress with this i may want to release after i release a fix. though it's technically not a regression

[17:22] <AlexDaniel> that's OK for me, so I'll check back tomorrow

[17:22] <AlexDaniel> in my UTC+02:00 tomorrow :)

[17:22] <samcv> ok cool :)

[17:44] *** domidumont joined
[18:01] *** geospeck joined
[18:05] *** zakharyas joined
[18:09] *** coverable6 joined
[18:09] *** nativecallable6 joined
[20:57] *** committable6 joined
[20:58] *** bisectable6 joined
[20:58] *** bloatable6 joined
[20:58] *** quotable6 joined
[20:58] *** releasable6 joined
[20:58] *** evalable6 joined
[20:58] *** statisfiable6 joined
[20:59] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/12/18/2017-51-thirty-years/

[21:01] *** ChanServ joined
[21:04] <moritz> lizmat++

[21:26] <lizmat> perhaps interesting for MoarVM devs: http://mattwarren.org/2017/12/15/How-does-.NET-JIT-a-method-and-Tiered-Compilation/ ?
