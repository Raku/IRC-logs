[00:15] *** geekosaur joined
[01:19] *** ggoebel joined
[02:24] <MasterDuke_> timotimo: TUI?

[05:17] <samcv> guys what's the file open limit for MVM?

[05:17] <samcv> is it mostly just the os?

[08:21] *** AlexDani` joined
[09:50] <timotimo> terminal UI

[09:50] <timotimo> samcv: yeah, ulimit tells you what it is

[09:50] <timotimo> i'm not sure what the maximum maximum is

[09:50] <samcv> yeah got it figured out

[09:51] <samcv> it was wayyyyyyy lower than the system limit

[09:51] <samcv> was like 1600

[09:51] <timotimo> it's usually 1024 i believe

[09:51] <samcv> maybe was that

[09:51] <samcv> sounds abotu right

[13:15] <Geth> Â¦ MoarVM: pmurias++ created pull request #588: Coerce s n

[13:15] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/588

[14:20] *** zakharyas joined
[15:29] *** stmuk joined
[15:37] *** stmuk_ joined
[15:58] *** stmuk joined
[16:07] *** stmuk joined
[16:16] *** stmuk_ joined
[16:21] *** stmuk joined
[16:31] *** stmuk_ joined
[16:34] *** zakharyas1 joined
[16:34] *** stmuk joined
[16:35] *** zakharyas1 joined
[16:37] *** stmuk__ joined
[16:39] *** stmuk_ joined
[17:16] *** domidumont joined
[17:22] *** domidumont joined
[18:07] <timotimo> i think in general you don't want to try to parse something like the spdx grammar with perl6 grammars

[19:07] *** zakharyas joined
[19:13] *** harrow joined
[20:28] *** stmuk joined
[21:09] <samcv> yeah idk lol. uguxe wanted to do it |:

[21:09] <samcv> it seems hard. but. i think it must be possible

[21:09] <samcv> timotimo, cause you can have parenthesis and precedence

[21:10] <samcv> (MIT AND GPL-1.0) OR BSD-2-Clause

[21:10] <samcv> for example

[21:10] <samcv> arbitrary parens and stuff

[21:12] *** stmuk_ joined
[21:16] *** stmuk joined
[21:24] *** stmuk_ joined
[21:26] <timotimo> well, parents are okay for recursive descent

[21:26] <yoleaux> 20:24Z <japhb> timotimo: I noticed yesterday you were discussing raw and processed keyboard input in terminal UIs.  See https://github.com/ab5tract/Terminal-Print/blob/raw-input/lib/Terminal/Print/RawInput.pm6 for early work on this, with https://github.com/ab5tract/Terminal-Print/blob/raw-input/examples/tris.p6 for a test program.  Last I tried it works fine right up until it stops accepting keyboard input; see https://github.com/ab5tract/

[21:26] <yoleaux> Terminal-Print/issues/19 for the sa

[21:26] <timotimo> but other than that you have an operator precedence parser really

[21:26] *** stmuk joined
[21:26] <timotimo> that should totally have a module in the ecosystem

[21:26] <timotimo> operator precedence parsers in general

[21:31] <samcv> yeah

[21:31] *** stmuk__ joined
[21:39] <samcv> timotimo, i think (haven't done precedence yet. more important for it to parse)

[21:39] <samcv> but i think i maybe have it working the best i've had it

[21:40] <timotimo> i've been able to trace it btw

[21:40] <timotimo> it's "succeeding" at parsing THIS as a or-thingie over and over and over again

[21:41] <timotimo> i wonder if it'd help if you make it ** 2..* instead of just +

[21:41] <timotimo> because it isn't supposed to think "THIS" is an or-statement

[21:42] <samcv> ok pushing latest changes

[21:42] <samcv> https://github.com/samcv/SPDX-Parser/blob/next/lib/SPDX/Parser.pm6 it's not dying anymore since i moved paren-expression into multiple syms

[21:42] <samcv> so compound expression can be either one with parens or not

[21:44] <samcv> it only fails parsing one of my things in the test file. not checked accuracy yet

[21:44] <timotimo> we have only WITH, AND, and OR?

[21:44] <samcv> yes

[21:44] <samcv> and parens

[21:47] <timotimo> right

[21:47] <timotimo> and WITH is tightest, then AND, then OR, and parens do whatever you want

[21:47] <samcv> yeah

[21:48] <timotimo> that's not even complex enough for the shunting yard algorithm

[21:48] <samcv> this is not that bad a parse https://gist.github.com/samcv/cdc10399a866be0b329fab4451ddf07b

[21:49] <samcv> i will look into that

[21:50] <samcv> i think it'll work for simple ones at least

[21:50] <samcv> going to try some things

[21:51] <timotimo> cool, you made it works

[21:55] <samcv> what i'm thinking of. is storing the licenses in an array. where each element of the array is another array

[21:56] <timotimo> like a tree

[21:57] <samcv> so '(MIT AND FOO) OR GPL' would be ['MIT', 'FOO'], ['GPL']

[21:57] <samcv> so you need to accept all of the licenses from one of those two, so you can have MIT AND FOO or GPL

[21:58] <samcv> and then we can check to make sure that at least one element matches

[21:58] <samcv> this may be a little simplistic but it should work for all the cases i can think of right now

[21:58] <timotimo> but what if you have (MIT OR FOO) AND GPL?

[21:59] <samcv> then you have ['GPL', 'FOO'] ['GPL', 'MIT']

[21:59] <timotimo> oooh

[21:59] <timotimo> so you "multiply" it out

[21:59] <samcv> yeah

[22:00] <timotimo> and when you have a "WITH" it'll be part of the string itself?

[22:00] <samcv> yeah with applies to that one license

[22:00] <samcv> it's basically a license variation

[22:02] <samcv> my $match = 0; for ^@list.elems { $match++ if @list[$_].all ne any(@blacklist) }

[22:03] <timotimo> (MIT OR ARTISTIC-2.0 OR GPL-2 OR GPL-3 OR AGPL) AND (X11 OR FREEBSD OR NASA) AND (ARTISTIC-1.0 OR ME OR YOU)

[22:03] <samcv> that's a lot of licenses

[22:04] <samcv> timotimo, see this https://github.com/Juerd/p6-mqtt/issues/3

[22:04] <timotimo> yikes!

[22:04] <samcv> though tbh some of those identifiers are deprecated it found

[22:04] <samcv> and are replaced with FOO WITH exceptionname

[22:04] <timotimo> interesting

[22:04] <samcv> but regardless

[22:05] <samcv> was an interesting experiment

[22:05] <timotimo> yeah i agree

[22:27] *** brrt joined
[22:28] <brrt> http://brrt-to-the-future.blogspot.nl/2017/04/letting-templates-do-what-you-mean.html

[22:30] <timotimo> oh!

[23:24] *** geekosaur joined
[23:29] *** geekosaur joined
[23:42] *** Geth joined
[23:51] *** Geth joined
