[00:54] *** benchable6 joined
[01:55] *** ilbot3 joined
[01:55] *** committable6 joined
[02:03] *** committable6 joined
[02:19] *** bisectable6 joined
[03:19] *** bisectable6 joined
[03:19] *** committable6 joined
[05:57] *** brrt joined
[05:57] <brrt> good hi

[05:57] <brrt> good find timotimo

[06:08] *** domidumont joined
[06:12] *** domidumont joined
[06:27] *** domidumont joined
[06:32] *** patrickz joined
[06:47] *** brrt joined
[06:47] *** leont joined
[07:42] *** leont joined
[07:54] *** rba joined
[08:14] <jnthn> morning o/

[08:14] <brrt> good monring jnthn

[08:14] <jnthn> o/ brrt

[08:15] <samcv> o/ jnthn brrt

[08:16] <brrt> \o samcv

[08:17] <samcv> grant was approved :)

[08:19] *** robertle joined
[08:20] <brrt> \o/

[08:20] <brrt> good work samcv++

[08:20] <jnthn> samcv++ \o/

[08:28] *** releasable6 joined
[08:41] <nwc10> ASAN excitement in t/02-rakudo/repl.t http://paste.scsys.co.uk/565286

[09:24] *** rba_ joined
[09:49] *** robertle_ joined
[10:46] * brrt clickbaits https://www.youtube.com/watch?v=N5_drt7TEqE

[10:46] <brrt> my sentence construction

[10:47] <brrt> is not entirely awesome

[11:05] <stmuk> brrt: your talks are excellent and very clear in my experience

[11:07] <brrt> stmuk: thanks :-). i'm trying to be critical mostly though

[11:07] <brrt> i want to learn from it and do better

[11:12] *** rba joined
[11:22] <dogbert17> jnthn: wrt t/spec/S17-promise/stress.t, https://irclog.perlgeek.de/moarvm/2017-10-06#i_15266626

[11:38] <stmuk> 

[11:52] *** zakharyas joined
[12:10] <timotimo> testing

[12:10] <timotimo> hmpf something's going wrong with glowing-bear in my windows vm

[12:10] <timotimo> i can see new messages show up but i can't press enter or click send when i write my own

[12:12] <MasterDuke> glowing-bear?

[12:13] <timotimo> a weechat relay frontend in the browser

[12:13] <MasterDuke> ah

[12:13] <timotimo> wait a minute

[12:13] <timotimo> i'm writing messages from inside my vm

[12:13] <timotimo> what did i change?

[12:13] <MasterDuke> with dragon?

[12:13] <timotimo> Testing testing 123

[12:14] <timotimo> As soon as Dragon is turned on I can no longer use enter to send messages but apparently you can double click on the send message icon

[12:14] *** ggoebel joined
[12:15] <timotimo> But fortunately I can just say press control enter instead of press enter and it seems to work

[12:15] <MasterDuke> most software is not very accessible. one of my coworkers is blind, and the trouble he has with just about everything...

[12:15] <timotimo> No it turns out I first have to say press shift enter and then backspace and then press control enter and then it works

[12:16] <timotimo> And actually I can leave out the backspace in the middle too

[12:18] <MasterDuke> timotimo: can rr recordings be shared? if i put the one i have on the whateverable server would you be able to replay it?

[12:18] <timotimo> i can replay it by ssh-ing onto the server at least; i'm not sure if they have been able to make it portable yet

[12:19] <MasterDuke> ah. i made it on my machine, instead i should make one on the server?

[12:19] <timotimo> that might make it easier, yeah

[12:20] <MasterDuke> are you actually interested in taking a look (won't bother otherwise)?

[12:21] <MasterDuke> and feel free to say no

[12:21] <timotimo> right now trying to do as little as i can so my wrists will shut up about their pain

[12:22] <MasterDuke> you're typing all this?

[12:22] <timotimo> Only sometimes

[12:22] <timotimo> I assume you can tell by proper capitalization or the lack thereof

[12:23] <MasterDuke> heh, thought that might be a tell

[12:26] <timotimo> brrt: we should call it reg_ÃŸ instead of reg_sz

[12:33] <brrt> lol

[12:34] <timotimo> for people who can't type ÃŸ we can also accept Å¿z or Å¿s

[12:36] <nwc10> :-)

[12:37] <nwc10> incoming rocket: https://www.youtube.com/watch?v=SB4N4xF2B2w&feature=youtu.be

[12:37] *** rba joined
[12:37] <nwc10> (OK, outgoing *currently*)

[12:37] <timotimo> was about to say

[12:38] <MasterDuke> brrt: in the jit to documentation there are several things listed, and i know one feature of the new jit is that it's supposed to be easier for non-you to work on, it might be nice to give a rough difficulty level to the different next steps

[12:38] <nwc10> meanwhile, the less time critical thing I was typing was "there's 'ÃŸ' in my (correctly written) adress, hence that "suggestion" would be useful in my current change-of-address correspondance"

[12:38] <nwc10> (...straÃŸe)

[12:39] <MasterDuke> timotimo: huh, rakudo built and installed just fine on the server

[12:40] <MasterDuke> brrt: *todo documentation

[12:43] *** rba_ joined
[12:43] <brrt> oh, that thing

[12:43] <brrt> that's all things that are, i apologise for the ehm, presumption, my-level kind of things

[12:44] <brrt> they're fairly deep, is what i mean

[12:44] <brrt> not that i wouldn't want anyone else to take them off my hands

[12:44] <MasterDuke> heh, they did seem that way

[12:45] <lizmat> stage 1 landed ok  :-)

[12:45] <brrt> sorry about that ðŸ˜¬

[12:45] <nwc10> boring++

[12:45] <lizmat> nwc10: I'll take it

[12:45] <nwc10> me too

[12:47] <nwc10> "the HD full colour live stream keeps cutting out just before the rocket lands. Every time. Life sucks" -- # nice problem to have

[12:47] <timotimo> that's because they can't fake HD full color yet

[12:47] <timotimo> all of these rocket things are just attempts to make the population believe the earth is anything but flat

[12:47] <timotimo> clearly

[12:47] <lizmat> next thing you'll hear is that they complain about the noise  :-)

[12:48] <brrt> â€¦ SpaceX is a fairly amazing organization

[12:55] <timotimo> good talk, brrt

[12:57] <brrt> thanks

[13:00] *** domidumont joined
[13:02] <lizmat> brrt: any chance of a blog post explaining people how to work with the new JIT, to coincide with mentioning the video of your presentation in tonight's P6W ?

[13:03] <lizmat> brrt: or a link to the documentation you think would be a good intro?

[13:04] <timotimo> brrt: should i look into refreshing the "parse graph.c" script? :)

[13:11] <brrt> ehm, lizmat, maybe i can give youâ€¦.

[13:12] <brrt> https://github.com/MoarVM/MoarVM/blob/master/docs/jit/overview.org

[13:13] <brrt> timotimo: that would be awesome i think

[13:14] <brrt> lizmat: i will try and write a blog post in the near future, but i usually take way to long to finish one

[13:14] <lizmat> thanks for considering it  :-)

[13:19] <lizmat> MoarVM oops: Spesh inline: fix_coderef NYI

[13:19] <lizmat> timotimo: ^^^ ring a bell ?

[13:20] <lizmat> say + ^100000 .grep( *.indices("7") == 2 )   # gives error

[13:20] <evalable6> lizmat, rakudo-moar 56eef6967: OUTPUT: Â«7290Â»

[13:20] <lizmat> say + ^100000 .grep( { .indices("7") == 2 } )  # creates profile ok

[13:20] <evalable6> lizmat, rakudo-moar 56eef6967: OUTPUT: Â«7290Â»

[13:23] *** MasterDuke_ joined
[13:32] *** evalable6 joined
[13:37] <timotimo> lizmat: could need to recompile rakudo so its C parts get all the new header definitions

[13:37] <timotimo> hm. actually ... don't know :\

[13:37] <lizmat> you mean we need a bump ?

[13:38] <timotimo> nah, what i means occurs when a newer version of moar has been built but the C portions of rakudo have been built with an older version

[13:38] <timotimo> but it's probably not what's going on here

[13:38] <lizmat> I would doubt that

[13:38] <lizmat> indeed

[13:38] <timotimo> how did you trigger this?

[13:38] <timotimo> we probably want to turn that oops into a "well, don't inline this, then" thing for the time being

[13:39] <lizmat> $ 6p 'say + ^100000 .grep( *.indices("7") == 2 )'

[13:39] <lizmat> MoarVM oops: Spesh inline: fix_coderef NYI

[13:39] <timotimo> hm, versions? it works fine locally

[13:39] <timotimo> oh

[13:39] <timotimo> i missed the +

[13:40] <timotimo> doesn't oops though

[13:40] <lizmat> so maybe it's already fixed and we need a bump ?

[13:41] <timotimo> wow my local moar is way out of date

[13:42] <timotimo> no, i was just holding it wrong

[13:44] <jnthn> Can't reproduce it here either, fwiw

[13:44] <timotimo> the fix_coderef NYI error message has been there since 2015-05 and i haven't seen it tripped yet

[13:52] <lizmat> I guess we have some OS dependencies in there then, because it's 100% repeatable for me

[13:54] <lizmat> more data points:

[13:54] <lizmat> say + ^99 .grep( *.indices("7") == 2 ) # works

[13:54] <evalable6> lizmat, rakudo-moar 56eef6967: OUTPUT: Â«1Â»

[13:54] <lizmat> say + ^100 .grep( *.indices("7") == 2 ) # produces the correct result, but then says: MoarVM oops: Spesh inline: fix_coderef NY

[13:54] <evalable6> lizmat, rakudo-moar 56eef6967: OUTPUT: Â«1Â»

[13:55] *** robertle joined
[13:55] <lizmat> say + (77..175).grep( *.indices("7") == 2 )  # works

[13:55] <evalable6> lizmat, rakudo-moar 56eef6967: OUTPUT: Â«1Â»

[13:56] <lizmat> say + (77..176).grep( *.indices("7") == 2 )  # produces result, then says oops

[13:56] <evalable6> lizmat, rakudo-moar 56eef6967: OUTPUT: Â«1Â»

[13:56] <jnthn> I can't even get it with: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 ./perl6-m -e 'say + ^100000 .grep( *.indices("7") == 2 )'

[13:56] <lizmat> so it's the 101st iteration that makes it go

[13:56] <jnthn> Built HEAD of everything just to check

[13:56] <lizmat> jnthn: you need the --profile !!!

[13:56] <jnthn> Oh

[13:56] <jnthn> ah, then I get it

[13:57] <jnthn> Ah, fine

[13:57] <jnthn> File a MoarVM issue

[13:57] <lizmat> will do  :-)

[13:57] <jnthn> If it only happens under --profile I'm a lot less worried :)

[13:57] <timotimo> oh, so "6p" is what you use to --profile

[13:57] <lizmat> sorry, should have been more explicit: the "6p" is very clear to me, but maybe not for anybody else  sorry

[13:57] <timotimo> i totally didn't see the "creates profile ok" bit

[13:57] <jnthn> I was wondering what the p meant :P

[13:58] <lizmat> timotimo: yeah, saves some typing

[13:58] <lizmat> 6 basic "time perl6 -e"

[13:58] <lizmat> 6l "perl6 --ll-exception -e'

[13:58] <lizmat> 6p "perl6 --profile -e'

[13:58] <jnthn> Nice :)

[13:59] <lizmat> alias 6='time perl6 -e'

[13:59] <lizmat> alias 6l='perl6 --ll-exception -e'

[13:59] <MasterDuke_> i have some aliases for valgrind, gdb, perf, heaptrack, etc.

[14:00] <lizmat> alias 6p='perl6 --profile -e'

[14:00] <lizmat> ^^ for the lazy people  :-)

[14:00] <lizmat> fwiw, I also have "alias 5='perl -E'"  :-)

[14:03] <timotimo> Oh I need to steal some of these

[14:04] <timotimo> also I just figured out that the problem with Dragon and press enter it just happens that in chrome but not in Firefox

[14:04] <timotimo> on the negative side it looks like I can only dictate new words into the input field but not select previous words or change anything

[14:06] <lizmat> jnthn: https://github.com/MoarVM/MoarVM/issues/720

[14:13] <MasterDuke_> param_on_o is what's causing the BAIL of indices

[14:29] <brrt> well, the question is why that is still a optional named parameter

[14:36] *** tadzik1 joined
[14:36] *** tadzik1 left
[15:04] <dogbert17> timotimo: have you seen this before? https://gist.github.com/dogbert17/cbc788517619a11423dbb001701f571d

[15:11] *** brrt joined
[15:28] *** rba joined
[15:33] <dogbert17> jnthn: stumbled upon a gc related error during spectest. Should I report it or is it old hat? https://gist.github.com/dogbert17/18d11a6e9d4bea90f126cb3932f80423

[15:34] <jnthn> dogbert17: looks new

[15:36] <dogbert17> ok, will create an issue then

[16:09] <MasterDuke_> jnthn: do you happen to have any suggestions on debugging what i'm seeing here? https://gist.github.com/MasterDuke17/5ca4c5507dd034ee0d0fc9c515c8ab76

[16:10] <MasterDuke_> this is my 'use the FSA for string storage' branch. it's trying to fsa_free 0 bytes of a null pointer

[16:12] <jnthn> Umm...no, that looks odd

[16:13] *** AlexDaniel_ joined
[16:14] <MasterDuke_> if i used rr correctly, when i ran it backward from the segv, it was showing the address of the body.storage.any getting zeroed here https://github.com/MoarVM/MoarVM/blob/master/src/gc/collect.c#L168

[16:15] <jnthn> That'd imply it got collected

[16:15] <jnthn> So...missing mark?

[16:15] <jnthn> But..that'd be odd

[16:17] <MasterDuke_> i kind of feel like i'm running into something that i didn't cause with my fsa changes, but somehow uncovered

[16:17] <MasterDuke_> but i wouldn't bet a whole lot on that

[16:17] <jnthn> Yeah but it's a bit odd it'd not blow up without your changes.

[16:18] <jnthn> Though I guess MVM_free will ignore a NULL pointer

[16:18] <ilmari> free(NULL) is required to be a no-op by POSIX

[16:18] <jnthn> I guess you've tried using MVM_GC_DEBUG set to some value, or tweaking the nursery size in collect.h to GC stress things a bit?

[16:18] <jnthn> If not, try those...

[16:19] <MasterDuke_> haven't yet, will give it a shot

[16:19] <jnthn> OK, those will maybe provide some further hints of what's up

[16:21] <MasterDuke_> should MVM_GC_DEBUG=1|2 cause stuff to be printed?

[16:22] <jnthn> No, it'll cause an MVM_panic if it detects anything

[16:23] <MasterDuke_> still segvs with that set to 1 or 2

[16:24] <jnthn> Hm, OK

[16:24] <jnthn> And with nursery shrunk?

[16:24] <jnthn> I normally set it to something around 16KB

[16:26] <MasterDuke_> trying that now

[16:27] <MasterDuke_> still segv

[16:39] *** dogbert2 joined
[16:40] <dogbert2> jnthn: the problem mentioned earlier can now be found in https://github.com/MoarVM/MoarVM/issues/721

[16:43] *** robertle joined
[16:44] <timotimo> jnthn: how do you feel about the idea of consolidating FSA-alloced pointers at some point? compaction, basically?

[16:45] <timotimo> i've yet to measure, but i fear that the memory usage i'm experiencing from the heap analyzer could be in big part to internal fragmentation of the fsa pages

[17:06] <Geth> Â¦ MoarVM: zoffixznet++ created pull request #722: Fix typo in comment

[17:06] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/722

[17:09] *** domidumont joined
[17:13] *** rba joined
[17:20] *** rba joined
[17:30] <MasterDuke> .tell brrt nice talk. now which templates are the most needed?

[17:30] <yoleaux> MasterDuke: I'll pass your message to brrt.

[17:38] *** lizmat joined
[17:39] <stmuk> 

[17:40] *** leont joined
[17:46] <Zoffix> "The hFile parameter must refer to a file stored on a seeking device; for example, a disk volume. Calling the SetFilePointer function with a handle to a non-seeking device such as a pipe or a communications device is not supported, even though the SetFilePointer function may not return an error. The behavior of the SetFilePointer function in this case is undefined."

[17:46] <Zoffix> From https://msdn.microsoft.com/en-us/library/windows/desktop/aa365541(v=vs.85).aspx   looks to be why $*OUT.tell always gives 0 on Windows

[17:53] <MasterDuke> jnthn, timotimo: no change with MVM_GC_DEBUG=1|2 and/or setting MVM_NURSERY_SIZE to 16k or 4k, still a segv. anything else to try?

[17:53] <timotimo> does the location of the segv change at all?

[17:53] <MasterDuke> nope

[17:53] <timotimo> hrumpf :(

[17:53] <MasterDuke> i know

[17:54] <timotimo> the community/ page on the perl6.org site still links to Perl 6 Testers even though zef hasn't been sending reports that way for a couple of months

[17:55] <timotimo> hm, ww, but also:

[17:55] <timotimo> there's a "getting involved" part to that page that could mention the squashathon

[18:15] <Zoffix> huh... I fixed the bug

[18:17] <Zoffix> ZofBot: and I even know what I'm doing this time!

[18:19] <ugexe> timotimo: i think something is wrong with the /report endpoint

[18:19] <timotimo> i have only vague recollection of looking into it last time

[18:23] <dogbert2> found a SEGV

[18:24] <dogbert2> in something called p6decontrv

[18:26] <Zoffix> sounds familiar

[18:26] <Zoffix> Though I think it was fixed

[18:26] <Zoffix> (awhile back)

[18:27] <dogbert2> here's the usual gist https://gist.github.com/dogbert17/48792636b42ab7dbe87b0600548ebded

[18:29] <dogbert2> Zoffix: OT but I picked up Doom yesterday for my new comp

[18:30] <Geth> Â¦ MoarVM: 669b344296 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/io/syncfile.c

[18:30] <Geth> Â¦ MoarVM: Fix typo in comment

[18:30] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/669b344296

[18:30] <Geth> Â¦ MoarVM: fbef62210b | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/io/syncfile.c

[18:30] <Geth> Â¦ MoarVM: Merge pull request #722 from zoffixznet/patch-2

[18:30] <Geth> Â¦ MoarVM:

[18:30] <Geth> Â¦ MoarVM: Fix typo in comment

[18:30] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fbef62210b

[18:31] <jnthn> timotimo: We can't move FSA-allocated memory, we just don't keep track of it like that

[18:32] <jnthn> timotimo: We could throw out totally empty pages, or we could introduce a limit on the number of pages we allow and fall back to malloc

[18:35] <jnthn> I am just a tad worried that something I introduced primarily as a way to get good re-use of MVMFrame, ->work, ->env, and to serve as a safepoint mechanism for concurrent data structures (which also get high re-use rates due to thier typical tree nature) is now becoming used more widely. Yes, it's faster, but it's fast because it can make assumptions. One of its base assumptions from day one has been that it doesn't have to care about fragmentat

[18:36] <jnthn> So I'd say if we've problems with fragmentation then we might just be using the FSA inappropriately.

[18:49] <timotimo> ah, mhm

[18:50] <timotimo> in the mean time i came up with a way that would probably give me much better memory use anyway; write large amounts of data into single arrays and shove them off to the other thread for analysis

[18:50] <timotimo> much like the spesh log mechanism, actually

[18:51] *** lizmat_ joined
[18:51] <timotimo> also, maybe i'll use one array per size class so i won't waste as much memory

[18:52] <Geth> Â¦ MoarVM: zoffixznet++ created pull request #723: [WIN32] Fix ->seakable detection on TTY handles

[18:52] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/723

[18:53] <timotimo> also, my idea of FSA fragmentation relied on VMArray using the FSA already. it doesn't though

[18:53] <timotimo> so i must search my problem somewhere else :)

[19:13] *** lizmat joined
[19:24] <lizmat> http://nullprogram.com/blog/2017/10/06/   # interesting, a branchless UTF-8 encoder

[19:36] *** travis-ci joined
[19:36] <travis-ci> MoarVM build failed. Jonathan Worthington 'Merge pull request #722 from zoffixznet/patch-2

[19:36] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/285725606 https://github.com/MoarVM/MoarVM/compare/64b5dc03c4ff...fbef62210b78

[19:36] *** travis-ci left
[19:38] <ugexe> that was a load bearing comment apparently

[19:40] <Zoffix> Nah, it was missed plan bump in nqp test. Fixed in https://github.com/perl6/nqp/commit/ce60c2bf38

[20:05] <MasterDuke> is this safe? https://github.com/MoarVM/MoarVM/blob/master/src/strings/iter.h#L33

[20:06] <MasterDuke> memcpy isn't needed?

[20:06] <timotimo> strings are immutable already

[20:06] <MasterDuke> but if s is GCed or something like that?

[20:07] <timotimo> we don't expose grapheme iterators to user code, do we?

[20:08] <timotimo> i'd assume whereever we have a grapheme iterator on some string we'll also be rooting the string (and keeping it alive that way)

[20:08] <MasterDuke> check out gdb.log in https://gist.github.com/MasterDuke17/5ca4c5507dd034ee0d0fc9c515c8ab76

[20:09] <MasterDuke> does result also need an MVMROOT here? https://github.com/MoarVM/MoarVM/blob/master/src/strings/ops.c#L552

[20:10] <timotimo> only if there's something that allocates an object in there somewhere

[20:13] <MasterDuke> `result = (MVMString *)MVM_repr_alloc_init(tc, tc->instance->VMString);` ?

[20:14] <timotimo> the GC happens before the function returns, and repr_alloc_init makes sure the return value is already the right one

[20:20] <MasterDuke> hm. then nothing stands out in the backtrace?

[20:21] <timotimo> unless it's reliably crashing under substring ... don't think so :\

[20:21] <MasterDuke> the backtrace is always the same

[20:22] <MasterDuke> except that the ones in rr and valgrind don't have the substring stuff, that might be the nursery size change i just made

[20:23] <timotimo> it could just be the program spends most of its time substringing stuff

[20:24] <MasterDuke> could be. it's one of the final steps in rakudo's `make install`

[20:24] <timotimo> anything interesting in dump_backtrace?

[20:26] <MasterDuke> gdb.log in gist updated

[20:29] <MasterDuke> afk for a bit

[20:34] <timotimo> that doesn't look far into execution

[20:48] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2017/10/09/2017-41-the-case-for-empathy/

[20:55] <timotimo> cool

[20:55] <timotimo> (i had to wait a few minutes because i forgot to re-enable my zram swap stuff after rebooting and was daring enough to start both browser and mail client)

[20:57] <timotimo> wait, out of cpan?

[20:57] <timotimo> oh, that kind of "getting out,

[20:57] <timotimo> "

[21:07] *** rba joined
[21:26] <Zoffix> What version of libuv are we using?

[21:26] <timotimo> 1.14.1 is what we have in master

[21:26] <timotimo> there was a pull request that included upgrading to a newer one

[21:27] <Zoffix> This one https://github.com/MoarVM/MoarVM/pull/719

[21:28] <Zoffix> Looking at the windows proc issue. Found one closed libuv issue that had similar symptoms that said to use 1.x branch for fix; so I guess that's not the issue we have

[21:28] <timotimo> yes that's the one

[21:29] * timotimo restarts a few of the failed travis builds for that PR

[21:29] <Zoffix> Issue being `run $*EXECUTABLE, '-e', ï½¢q|'|ï½£;` fails with "The syntax of the command is incorrect" and `run $*EXECUTABLE, '-e', ï½¢q|"|ï½£;` with  '"' is not recognized as an internal or external command,; and `run $*EXECUTABLE, '-e', ï½¢(q|"|)ï½£;` with `')"' is not recognized as an internal or external command,`

[21:30] <timotimo> *sigh* what's with travis and osx jobs not starting

[21:32] <MasterDuke> timotimo: fyi, this https://gist.github.com/MasterDuke17/5ca4c5507dd034ee0d0fc9c515c8ab76#file-gistfile1-txt is the actual command i was running

[21:37] <timotimo> i'm already failing to go easy on my wrists >_<

[21:38] <MasterDuke> use that tame dragon you've got!

[21:38] <timotimo> it's hard to use for gdb :D

[21:39] <MasterDuke> train your cat?

[21:39] <timotimo> good idea

[22:23] <Zoffix> If I mod libuv and dump out the args it's trying to run with, it uses `C:\rakudo\perl6.bat -e "say q|foo\"bar|"` which fails on Windows. If I escape the quote by using double double quote instead of backslashing it, then it works.

[22:26] * Zoffix makes a trip to #libuv

[22:30] *** ggoebel joined
[22:45] <Zoffix> Didn't get anything concrete but got some suggestions to try http://logs.libuv.org/libuv/latest#22:29:44.993

[22:45] <Zoffix> Gonna take a crack at it tomorrow, when I'm less sleepy

[22:47] <Geth> Â¦ MoarVM: cfb0bffc09 | (Zoffix Znet)++ | src/platform/win32/io.c

[22:47] <Geth> Â¦ MoarVM: [WIN32] Fix ->seakable detection on TTY handles

[22:47] <Geth> Â¦ MoarVM:

[22:47] <Geth> Â¦ MoarVM: Fixes RT#132254: https://rt.perl.org/Ticket/Display.html?id=132254

[22:47] <Geth> Â¦ MoarVM: Fixes all t/02-rakudo/repl.t failures

[22:47] <Geth> Â¦ MoarVM:

[22:47] <Geth> Â¦ MoarVM: The SetFilePointer() routine silently fails[^1] when the handle is

[22:47] <Geth> Â¦ MoarVM: not a seekable handle, so check the handle is a disk handle[^2] before

[22:47] <Geth> Â¦ MoarVM: <â€¦commit message has 7 more linesâ€¦>

[22:47] <synopsebot> RT#132254 [new]: https://rt.perl.org/Ticket/Display.html?id=132254 [WIN32] $*OUT.tell always gives 0

[22:47] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/cfb0bffc09

[22:47] <Geth> Â¦ MoarVM: 631b3bf0f0 | (Zoffix Znet)++ (committed using GitHub Web editor) | src/platform/win32/io.c

[22:47] <Geth> Â¦ MoarVM: Merge pull request #723 from zoffixznet/fix-Win32-IO-tell

[22:47] <Geth> Â¦ MoarVM:

[22:47] <Geth> Â¦ MoarVM: [WIN32] Fix ->seakable detection on TTY handles

[22:47] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/631b3bf0f0

[22:53] <Zoffix> Oh wait, I did get concrete suggestions :D

[23:00] <Geth> Â¦ MoarVM: ugexe++ created pull request #725: Fix cwd error message

[23:00] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/725

[23:03] <Geth> Â¦ MoarVM: b2c5ce0ba7 | (Nick Logan)++ (committed using GitHub Web editor) | src/io/dirops.c

[23:03] <Geth> Â¦ MoarVM: Fix cwd error message

[23:03] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b2c5ce0ba7

[23:03] <Geth> Â¦ MoarVM: bd8e6687a7 | lizmat++ (committed using GitHub Web editor) | src/io/dirops.c

[23:03] <Geth> Â¦ MoarVM: Merge pull request #725 from ugexe/patch-2

[23:03] <Geth> Â¦ MoarVM:

[23:03] <Geth> Â¦ MoarVM: Fix cwd error message

[23:03] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/bd8e6687a7

[23:19] *** travis-ci joined
[23:19] <travis-ci> MoarVM build passed. Zoffix Znet 'Merge pull request #723 from zoffixznet/fix-Win32-IO-tell

[23:19] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/285820777 https://github.com/MoarVM/MoarVM/compare/fbef62210b78...631b3bf0f02c

[23:19] *** travis-ci left
[23:56] *** travis-ci joined
[23:56] <travis-ci> MoarVM build passed. lizmat 'Merge pull request #725 from ugexe/patch-2

[23:56] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/285825133 https://github.com/MoarVM/MoarVM/compare/631b3bf0f02c...bd8e6687a721

[23:56] *** travis-ci left
