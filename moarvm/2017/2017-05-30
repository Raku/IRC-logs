[01:49] *** ilbot3 joined
[04:08] *** brrt joined
[04:53] *** sivoais joined
[05:29] *** brrt joined
[05:53] *** domidumont joined
[05:57] <brrt> timotimo: i'm not taking gc management into account at all at this point

[05:59] *** domidumont joined
[06:10] <brrt> okay, i'm flummoxed. i don't see it at all

[06:11] <nwc10> step away from the keyboard and make coffee?

[06:14] <brrt> probably best...

[06:43] *** brrt joined
[07:21] <brrt> wrt the poor quality of the generated code

[07:22] <brrt> that's pretty much by design

[07:22] <brrt> i strongly prefer easily debuggable suboptimal code over optimal code that is difficult to debug

[07:22] <brrt> optimal code is for when correctness can be ensured

[07:22] <nwc10> but but but "no obvious bugs" is obviously far superior :-)

[07:23] <brrt> well, that's the point of obviousness, isn't it

[07:23] <brrt> actually, the whole notion of 'obvious' is kind of suspect

[07:23] <nwc10> and "obviously no bugs" is obviously buggy :-)

[07:24] <brrt> did you see, perchance, the 'morning paper' about formal verification of distributed systems

[07:24] <nwc10> no I didn't

[07:24] <brrt> well, the tl;dr is

[07:24] <brrt> formal verification helps in eliminating core protocol errors

[07:24] <brrt> but it doesn't help (as much) in eliminating 'interface' errors, i.e. in assumptions about the interaction with the world

[07:24] <brrt> stuff like whether UDP is reliable or not

[07:25] <brrt> i thought that was a quite interesting find, on the topic of bugs

[07:27] <brrt> https://blog.acolyer.org/2017/05/29/an-empirical-study-on-the-correctness-of-formally-verified-distributed-systems/

[07:44] *** domidumont joined
[08:16] *** zakharyas joined
[08:50] <samcv> o/ hello all

[08:50] <jnthn> morning o/

[08:52] <samcv> do we have any support for isatty

[08:53] <samcv> so we could check if we are a tty or not for like $*OUT or $*IN or whatever

[08:53] <samcv> like colud hide: "You may want to `zef install Readline` or `zef install Linenoise` or use rlwrap for a line editor" if you are already using rlwrap

[08:53] <samcv> and many more fun things

[08:53] <samcv> windows has it as _isatty

[08:54] <brrt> i think…. we tried doing that at some point in the past, i have no idea what became of it

[08:54] <samcv> or something. will have to double check. windows is so odd

[08:54] <brrt> windows has _isatty, es

[08:54] <brrt> *yes

[08:54] <samcv> all functions need more underscores to be honest. minimum 5 for maximum

[08:54] <jnthn> samcv: Yes, there's a method on IO::Handle for that

[08:54] <samcv> oo

[08:55] <samcv> native-descriptor?

[08:57] <jnthn> .t

[08:57] <yoleaux> Tue, 30 May 2017 08:57:16 UTC

[08:57] <jnthn> A single char like the other test methods :)

[08:58] <samcv> best ever :(

[08:58] *** brrt joined
[08:58] <samcv> hmm seems it doesn't work with rlwrap

[10:13] *** moritz joined
[10:13] *** [Coke] joined
[10:13] *** brrt joined
[10:13] *** AlexDaniel joined
[10:13] *** zakharyas joined
[10:13] *** domidumont joined
[10:13] *** sivoais joined
[10:13] *** Util joined
[10:13] *** greppable6 joined
[10:13] *** SourceBaby joined
[10:13] *** dalek joined
[10:13] *** jnthn joined
[10:13] *** nebuchadnezzar joined
[10:13] *** committable6 joined
[10:13] *** yoleaux joined
[10:13] *** statisfiable6 joined
[10:13] *** unicodable6 joined
[10:13] *** bisectable6 joined
[10:13] *** evalable6 joined
[10:13] *** bloatable6 joined
[10:13] *** quotable6 joined
[10:13] *** benchable6 joined
[10:13] *** Zoffix joined
[10:13] *** TimToady joined
[10:13] *** japhb joined
[10:13] *** camelia joined
[10:13] *** geekosaur joined
[10:13] *** samcv joined
[10:13] *** eater joined
[10:13] *** mst joined
[10:13] *** harrow joined
[10:13] *** nine joined
[10:13] *** ilmari[m] joined
[10:13] *** MasterDuke joined
[10:13] *** avar joined
[10:13] *** hoelzro joined
[10:13] *** leedo joined
[10:13] *** lizmat joined
[10:13] *** Voldenet joined
[10:13] *** nwc10 joined
[10:13] *** Geth joined
[10:13] *** zostay joined
[10:13] *** buggable joined
[10:13] *** SmokeMachine joined
[10:13] *** tbrowder joined
[10:13] *** ZofBot joined
[10:13] *** ilmari joined
[10:13] *** ingy joined
[10:13] *** mtj_ joined
[10:13] *** bartolin_ joined
[10:13] *** BinGOs joined
[10:13] *** timotimo joined
[10:13] *** leego joined
[10:13] *** btyler joined
[10:13] *** arnsholt joined
[10:13] *** ChanServ joined
[10:29] *** colomon joined
[11:10] *** robertle joined
[12:17] *** dogbert11 joined
[15:16] *** brrt joined
[15:27] *** AlexDaniel joined
[16:06] *** brrt joined
[16:23] <Geth> ¦ MoarVM/remove-sync-char-io: de99476972 | (Jonathan Worthington)++ | 7 files

[16:23] <Geth> ¦ MoarVM/remove-sync-char-io: Remove char-level I/O ops.

[16:23] <Geth> ¦ MoarVM/remove-sync-char-io: review: https://github.com/MoarVM/MoarVM/commit/de99476972

[16:24] <Geth> ¦ MoarVM/remove-sync-char-io: 698974fac5 | (Jonathan Worthington)++ | 2 files

[16:24] <Geth> ¦ MoarVM/remove-sync-char-io: Remove now-dead MVM_io_file_s[lurp|pew].

[16:24] <Geth> ¦ MoarVM/remove-sync-char-io: review: https://github.com/MoarVM/MoarVM/commit/698974fac5

[16:27] *** zakharyas joined
[16:36] <Geth> ¦ MoarVM/remove-sync-char-io: 6121d0643b | (Jonathan Worthington)++ | 2 files

[16:36] <Geth> ¦ MoarVM/remove-sync-char-io: Remove now-dead sync char input functions.

[16:36] <Geth> ¦ MoarVM/remove-sync-char-io: review: https://github.com/MoarVM/MoarVM/commit/6121d0643b

[16:36] <Geth> ¦ MoarVM/remove-sync-char-io: 99333ed22f | (Jonathan Worthington)++ | 6 files

[16:36] <Geth> ¦ MoarVM/remove-sync-char-io: Remove char-level I/O from sync read vtable.

[16:36] <Geth> ¦ MoarVM/remove-sync-char-io: review: https://github.com/MoarVM/MoarVM/commit/99333ed22f

[16:42] <Geth> ¦ MoarVM/remove-sync-char-io: 90e80c8e02 | (Jonathan Worthington)++ | src/io/dirops.c

[16:42] <Geth> ¦ MoarVM/remove-sync-char-io: Toss unused encoding option in dir handle.

[16:42] <Geth> ¦ MoarVM/remove-sync-char-io:

[16:42] <Geth> ¦ MoarVM/remove-sync-char-io: If we do turn out to somehow need this, there'll be a better way to

[16:42] <Geth> ¦ MoarVM/remove-sync-char-io: handle it than keeping the MVMIOEncodable part of the I/O v-table

[16:42] <Geth> ¦ MoarVM/remove-sync-char-io: around just for it.

[16:42] <Geth> ¦ MoarVM/remove-sync-char-io: review: https://github.com/MoarVM/MoarVM/commit/90e80c8e02

[16:48] <Geth> ¦ MoarVM/remove-sync-char-io: 771bb59689 | (Jonathan Worthington)++ | 11 files

[16:48] <Geth> ¦ MoarVM/remove-sync-char-io: Remove infrastructure to set handle encoding.

[16:48] <Geth> ¦ MoarVM/remove-sync-char-io: review: https://github.com/MoarVM/MoarVM/commit/771bb59689

[16:51] <Geth> ¦ MoarVM/remove-sync-char-io: 63e3fd6be2 | (Jonathan Worthington)++ | 4 files

[16:51] <Geth> ¦ MoarVM/remove-sync-char-io: Remove now-unused sep spec field in sync I/O.

[16:51] <Geth> ¦ MoarVM/remove-sync-char-io:

[16:51] <Geth> ¦ MoarVM/remove-sync-char-io: The decode stream in these will go away soon too, but this is an LHF

[16:51] <Geth> ¦ MoarVM/remove-sync-char-io: to remove right away.

[16:51] <Geth> ¦ MoarVM/remove-sync-char-io: review: https://github.com/MoarVM/MoarVM/commit/63e3fd6be2

[17:35] *** committable6 joined
[17:42] *** domidumont joined
[18:11] *** buggable joined
[18:12] *** buggable joined
[19:07] *** cono joined
[19:08] <cono> guys, what is P6Opaque ?

[19:09] <Zoffix> Default representation of objects

[19:09] <Zoffix> There's an internals course that mentions them: https://github.com/edumentab/rakudo-and-nqp-internals-course

[19:09] <Zoffix> (day 2 in particular talks about this stuff IIRC)

[19:10] <cono> Zoffix: thanks a lot!

[20:05] *** nebuchadnezzar joined
[21:19] *** committable6 joined
[21:20] *** bisectable6 joined
[21:50] <Geth> ¦ moarvm.org: c059f76e4f | jnthn++ | 2 files

[21:50] <Geth> ¦ moarvm.org: Update site for 2017.05 release.

[21:50] <Geth> ¦ moarvm.org: review: https://github.com/MoarVM/moarvm.org/commit/c059f76e4f

[21:50] <jnthn> Better late than never... :)

[21:52] <Zoffix> heh

[21:53] <timotimo> i had to do a double take when i saw "deprecated ... removed"

[22:00] <jnthn> heh

[22:01] <jnthn> Ah well, you only have to double-take for 2 weeks until the next relesae

[22:01] <jnthn> I suspect the next one will shake out any unknown MoarVM users given the amount it will remove...

[22:03] <timotimo> m: say for gather { take take 2 }

[22:03] <camelia> rakudo-moar 5e3393: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unsupported use of bare "say"; in Perl 6 please use .say if you meant to call it as a method on $_, or use an explicit invocant or argument, or use &say to refer to the function as a noun␤at <tmp>:1␤--…»

[22:03] <timotimo> m: .say for gather { take take 2 }

[22:03] <camelia> rakudo-moar 5e3393: OUTPUT: «2␤2␤»
