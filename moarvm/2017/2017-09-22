[00:46] *** geekosaur joined
[01:34] *** geekosaur joined
[01:55] *** ilbot3 joined
[02:29] *** AlexDani` joined
[02:33] *** zakharyas joined
[02:50] *** geekosaur joined
[02:52] *** jdv79 left
[05:03] *** brrt joined
[05:22] <brrt> good * #moarvm

[05:24] *** vendethiel- joined
[05:25] <brrt> nine: i'll do a review then

[05:32] <brrt> https://gist.github.com/bdw/4e0e2f881f9aaef61ff8ecf9d0ceba98 fwiw, this is the WIP of my new JIT compiler documentation

[05:38] <brrt> o hey folks

[05:39] <brrt> the new libuv commit doesn't compile on OS X because the constant CLOCK_MONOTONIC is not a thing

[05:40] <brrt> (more is intended to be said about the expression trees and about dynasm)

[05:45] <geekosaur> neither is the syscall, on most OS X versions

[05:45] <geekosaur> but apple has taken to shipping SDKs only for the latest version, and problems arise when they are used on older versions

[05:46] <geekosaur> ...but that is the configuration Apple expects devs to use on older versions

[05:51] <brrt> okay, got a fix for it

[05:52] <brrt> it's about uv_hrtime

[05:53] <brrt> oh, samcv++ already fixed it on master

[05:53] <brrt> wasn't in jit_nativecall just yet

[06:02] *** domidumont joined
[06:08] *** domidumont joined
[06:14] <samcv> good *

[06:15] *** brrt joined
[07:56] *** Ven`` joined
[08:04] *** leont joined
[08:05] *** harrow joined
[08:20] *** mtj_ joined
[08:24] *** vendethiel- joined
[08:40] *** robertle joined
[08:41] <brrt> nine: left some reviews

[08:42] <nine> brrt: many thanks!

[08:42] <brrt> :-)

[08:43] <samcv> brrt, had a look at your gist. brrt++

[08:43] <samcv> also ++ for documentation in general

[08:46] <brrt> thanks

[08:46] <brrt> did the tiler table generation process make any sense so far?

[09:01] <Geth> Â¦ MoarVM/master: 7 commits pushed by eater++, (Jonathan Worthington)++

[09:01] <Geth> Â¦ MoarVM/master: 73f1978ab3 | Add unix socket support

[09:01] <Geth> Â¦ MoarVM/master: 140ec02db4 | define sockaddr_un later

[09:01] <Geth> Â¦ MoarVM/master: d61127b529 | Make sure everything is freed and only use result_un

[09:01] <Geth> Â¦ MoarVM/master: f008189c29 | Fix unix domain path length check

[09:01] <Geth> Â¦ MoarVM/master: 15baec234f | Process feedback: add more details about port flags

[09:01] <Geth> Â¦ MoarVM/master: 91c903a98f | Fix some small mistakes

[09:01] <Geth> Â¦ MoarVM/master: 0203f335f2 | Merge pull request #630 from the-eater/add-unix-socket-support

[09:01] <Geth> Â¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/9b2e253baa...0203f335f2

[09:01] <eater> :D

[09:02] <jnthn> morning o/

[09:02] <jnthn> eater++

[09:02] <eater> with this change we immeditially set the fundaments to fix this issue: https://github.com/MoarVM/MoarVM/issues/683

[09:02] <eater> so that's pretty nice :)

[09:06] <Geth> Â¦ MoarVM: afd50228bc | MasterDuke17++ | src/strings/ops.c

[09:06] <Geth> Â¦ MoarVM: Use the FSA for a temp alloc in MVM_string_join

[09:06] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/afd50228bc

[09:06] <Geth> Â¦ MoarVM: 9749b0fa17 | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/strings/ops.c

[09:06] <Geth> Â¦ MoarVM: Merge pull request #698 from MasterDuke17/use_fsa_in_string_ops_functions

[09:06] <Geth> Â¦ MoarVM:

[09:06] <Geth> Â¦ MoarVM: Use the FSA for a temp alloc in MVM_string_join

[09:06] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9749b0fa17

[09:11] <moritz> tfw you read FSA a "finite state automaton" and run into parser errors

[09:11] <moritz> ... until you realize that "fixed sized allocator" is a better match, and backtrack

[09:16] <jnthn> :-)

[09:16] <jnthn> TMA

[09:49] <samcv> brrt, i haven't read the whole thing yet. but so far it was good

[09:49] <samcv> read about 1/2 of it so far

[09:58] *** harrow joined
[09:59] <brrt> well, thanks :-)

[10:07] *** zakharyas joined
[11:11] <Geth> Â¦ MoarVM: the-eater++ created pull request #700: Define flags as socket family and use getaddrinfo hints

[11:11] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/700

[11:26] <eater> I broke the Windows builds :D

[11:27] <timotimo> huh, indeed. this time it's not just appveyor sucking

[11:32] <Geth> Â¦ MoarVM: the-eater++ created pull request #701: #define sa_family_t for Windows

[11:32] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/701

[11:32] <eater> on my PR there was no AppVeyor yet so it wasn't included :s

[11:33] <eater> that should fix it tho, hopefully -^

[11:34] <eater> no VS201X close rn :(

[11:36] <eater> ok now I'm lost :s

[11:37] <eater> timotimo: you any clue: https://ci.appveyor.com/project/samcv/moarvm-35u74/build/1.0.28/job/uwfjy2cpf217fwnq ?

[11:38] <timotimo> oh

[11:38] <timotimo> look, you put a ; at the end of the define for the sa_family_t

[11:39] <eater> :'D

[11:39] <eater> thanks :D

[11:41] <timotimo> i think you mean ";D" :D

[11:41] <eater> ;')

[11:42] <eater> :D

[11:42] <eater> it worked

[11:42] <timotimo> yay

[11:43] <timotimo> m( appveyor put a \ before the # in the pull request tite

[11:43] <timotimo> title*

[11:45] <eater> I did

[11:45] <eater> git thought it was a commit

[11:45] <eater> *comment

[11:45] <timotimo> oh!

[11:45] <eater> so I thought backlash will fix

[11:45] <eater> but ehh you see what happend

[11:45] <timotimo> :D

[11:54] *** domidumont joined
[12:26] <Geth> Â¦ MoarVM: ecc3376026 | eater++ | src/io/syncsocket.c

[12:26] <Geth> Â¦ MoarVM: \#define sa_family_t for Windows

[12:26] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ecc3376026

[12:26] <Geth> Â¦ MoarVM: f7fbeb6a3e | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/io/syncsocket.c

[12:26] <Geth> Â¦ MoarVM: Merge pull request #701 from the-eater/fix/define-sa_family_t-for-windows

[12:26] <Geth> Â¦ MoarVM:

[12:26] <Geth> Â¦ MoarVM: #define sa_family_t for Windows

[12:26] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f7fbeb6a3e

[12:27] <Geth> Â¦ MoarVM: d43ea5a80a | eater++ | src/io/syncsocket.c

[12:27] <Geth> Â¦ MoarVM: Define flags as socket family and use getaddrinfo hints

[12:27] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d43ea5a80a

[12:27] <Geth> Â¦ MoarVM: fbd8989866 | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/io/syncsocket.c

[12:27] <Geth> Â¦ MoarVM: Merge pull request #700 from the-eater/feature/extract-family-from-port

[12:27] <Geth> Â¦ MoarVM:

[12:27] <Geth> Â¦ MoarVM: Define flags as socket family and use getaddrinfo hints

[12:27] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fbd8989866

[12:41] <nine> brrt: did you actually mean "movzx TMP6, word U16:TMP5[arg.v.reg];" instead of "movzs TMP6, word U16:TMP5[arg.v.reg*2];"?

[12:41] <nine> I can't find a movzs op and if the type is dword, we don't need the multiplication in the index anymore, do we?

[12:42] <brrt> movzx

[12:42] <brrt> move zero extend

[12:42] <brrt> yeah, that's what i meant

[12:43] <nine> bad operand size in `movzx rq,x?'

[12:54] <brrt> hmmm

[12:54] <brrt> you can also do movzx TMP6d, since that clears the uppoer part of TMP6 anyway

[12:56] <eater> jnthn: :D thanks

[12:56] <eater> and sorry for the breakage :s

[12:57] <nine> brrt: you work really hard to get rid of the xor TMP6, TMP6; trick I was so pround of remembering from last century ;)

[12:58] <nine> At least the compiler and/or assembler accepts mov TMP6d, U16:TMP5[arg.v.reg]

[12:58] <nine> But tests fail

[12:58] <nine> So maybe my xor stays after all

[12:59] <brrt> hmm, maybe better yeah

[13:00] <nine> And honestly, what's a single CPU cycle among friends? :)

[13:07] <brrt> maddening, in the bad case

[13:08] <brrt> but you already have to be mad for it to make you mad

[13:08] <brrt> so

[13:08] <brrt> yeah

[13:08] <brrt> oh, mov â€¦ would never work

[13:08] <brrt> ehm, wihtout the xor

[13:09] *** geekosaur joined
[13:13] <Geth> Â¦ MoarVM/jit_nativecall: 7b7aa67ad5 | (Stefan Seifert)++ | 19 files

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: Compile code for calling native functions.

[13:13] <Geth> Â¦ MoarVM/jit_nativecall:

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: MVM_nativecall_build builds a JIT graph manually and compiles it. The

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: result is attached to the MVMNativeCallBody. For now the new nativeinvoke_*

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: ops (mirroring invoke_*) will enter that code. Ideally we will replace the

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: whole frame containing the nativeinvoke by JIT compiled code.

[13:13] <Geth> Â¦ MoarVM/jit_nativecall:

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: <â€¦commit message has 14 more linesâ€¦>

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: review: https://github.com/MoarVM/MoarVM/commit/7b7aa67ad5

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: 71aab57aae | (Stefan Seifert)++ | 5 files

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: JIT compile JITed native calls

[13:13] <Geth> Â¦ MoarVM/jit_nativecall:

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: While we already generated machine code for performing the actual call to the

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: C function, we perform all deconting and unboxing of arguments in high level

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: code. This is so that spesh can optimize this code to what's actually

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: necessary for a given call site.

[13:13] <Geth> Â¦ MoarVM/jit_nativecall:

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: <â€¦commit message has 14 more linesâ€¦>

[13:13] <Geth> Â¦ MoarVM/jit_nativecall: review: https://github.com/MoarVM/MoarVM/commit/71aab57aae

[13:14] <nine> Only SAVE_RV unaddressed so far

[13:21] <brrt> oh, hmm, does your branch work on windows?

[13:22] <brrt> cause there's also an emit_win32_callargs

[13:22] <brrt> and i see you have added the MVM_JIT_PARAM_I64 on the emit_posix_callargs, but i'm not seeing it in the patch to the other function

[13:26] <nine> Oh, true

[13:29] <nine> It should work however as emit_win64_callargs passes all non-float args to load_call_arg while emit_posix_callargs filters for type

[13:30] <nine> err... emit_gpr_arg but anyway

[13:39] <brrt> true

[14:35] *** brrt joined
[14:41] *** geekosaur joined
[15:23] *** brrt joined
[15:32] <Geth> Â¦ MoarVM/jit_nativecall: 79cdf0b4e7 | (Stefan Seifert)++ | 19 files

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: Compile code for calling native functions.

[15:32] <Geth> Â¦ MoarVM/jit_nativecall:

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: MVM_nativecall_build builds a JIT graph manually and compiles it. The

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: result is attached to the MVMNativeCallBody. For now the new nativeinvoke_*

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: ops (mirroring invoke_*) will enter that code. Ideally we will replace the

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: whole frame containing the nativeinvoke by JIT compiled code.

[15:32] <Geth> Â¦ MoarVM/jit_nativecall:

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: <â€¦commit message has 14 more linesâ€¦>

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: review: https://github.com/MoarVM/MoarVM/commit/79cdf0b4e7

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: 76ff81c652 | (Stefan Seifert)++ | 5 files

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: JIT compile JITed native calls

[15:32] <Geth> Â¦ MoarVM/jit_nativecall:

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: While we already generated machine code for performing the actual call to the

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: C function, we perform all deconting and unboxing of arguments in high level

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: code. This is so that spesh can optimize this code to what's actually

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: necessary for a given call site.

[15:32] <Geth> Â¦ MoarVM/jit_nativecall:

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: <â€¦commit message has 14 more linesâ€¦>

[15:32] <Geth> Â¦ MoarVM/jit_nativecall: review: https://github.com/MoarVM/MoarVM/commit/76ff81c652

[15:34] <nine> Ok, all review suggestions handled

[15:52] *** geekosaur joined
[16:06] *** geekosaur joined
[16:31] *** domidumont joined
[16:46] *** robertle joined
[16:48] *** AlexDaniel joined
[16:51] *** AlexDaniel joined
[16:57] *** AlexDani` joined
[17:11] *** leont joined
[17:25] *** dogbert11 joined
[18:00] *** leont joined
[18:01] *** cognominal joined
[18:10] *** leont joined
[18:48] *** AlexDaniel joined
[20:09] <Geth> Â¦ MoarVM: the-eater++ created pull request #702: Fix hint

[20:09] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/702

[20:19] <Geth> Â¦ MoarVM: bec972ac14 | eater++ (committed using GitHub Web editor) | src/io/syncsocket.c

[20:19] <Geth> Â¦ MoarVM: Fix hint

[20:19] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/bec972ac14

[20:19] <Geth> Â¦ MoarVM: 630d3742a7 | (Jonathan Worthington)++ (committed using GitHub Web editor) | src/io/syncsocket.c

[20:19] <Geth> Â¦ MoarVM: Merge pull request #702 from the-eater/patch-1

[20:19] <Geth> Â¦ MoarVM:

[20:19] <Geth> Â¦ MoarVM: Fix hint

[20:19] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/630d3742a7

[20:41] *** Ven`` joined
[21:18] <Geth> Â¦ MoarVM: 7d00853f1d | (Samantha McVey)++ | .appveyor.yml

[21:18] <Geth> Â¦ MoarVM: Turn off the over verbose Appveyor nqp tests

[21:18] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7d00853f1d

[22:46] *** AlexDaniel joined
[22:48] *** travis-ci joined
[22:48] <travis-ci> MoarVM build failed. Samantha McVey 'Turn off the over verbose Appveyor nqp tests'

[22:48] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/278785860 https://github.com/MoarVM/MoarVM/compare/630d3742a7d7...7d00853f1dd4

[22:48] *** travis-ci left
