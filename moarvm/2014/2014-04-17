[00:14] *** benabik joined
[00:54] *** benabik joined
[01:21] *** sergot_ joined
[01:22] *** yawnt` joined
[01:34] *** FROGGS_ joined
[02:00] *** bcode_ joined
[02:25] *** donaldh joined
[02:26] *** bcode joined
[02:37] *** bcode_ joined
[03:49] *** FROGGS_ joined
[07:08] *** zakharyas joined
[07:21] *** FROGGS joined
[07:56] *** yawnt joined
[08:35] *** FROGGS joined
[08:42] *** FROGGS joined
[08:59] *** FROGGS joined
[10:54] *** FROGGS joined
[11:19] * jnthn just realized that he didn't cut the Moar release yet. :)

[11:19] <jnthn> Which masak will soon need for the Rakudo release :)

[11:23] <FROGGS> /o\

[11:23] <FROGGS> panic now?

[11:29] *** yawnt left
[11:37] <jnthn> working on it

[11:37] <jnthn> No panic

[11:37] <jnthn> I had the day's meeting

[11:38] <jnthn> And the release process ain't much work :)

[11:39] <dalek> MoarVM: 1859883 | jonathan++ | docs/ChangeLog:

[11:39] <dalek> MoarVM: ChangeLog for 2014.04.

[11:39] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/1859883013

[11:39] <lizmat> an impressive list  :-)

[11:39] <jnthn> :)

[11:40] <lizmat> " Main thread has ID 1 now"

[11:40] <jnthn> It used to have 0 :)

[11:40] <jnthn> Also that's the VM-internal ID

[11:40] <jnthn> Not the OS one

[11:40] <jnthn> It got to be 1 because I wanted 0 as a sentinel value elsewhere :)

[11:41] <lizmat> yes, I understand

[11:41] <dalek> MoarVM: a5bc46f | jonathan++ | VERSION:

[11:41] <dalek> MoarVM: Update VERSION.

[11:41] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a5bc46f8bd

[11:42] <lizmat> I just seem to remember either a spec or a piece of code using !thread.id as a way to find out if you're running in the main thread

[11:44] <jnthn> hmm

[11:44] <lizmat> can't find anything in the spec

[11:44] <jnthn> I suspect some MoarVM code may have done it

[11:44] <jnthn> I tweaked at least one place

[11:45] <lizmat> m: say $*THREAD.id

[11:45] <camelia> rakudo-moar a4e5ca: OUTPUT«140303077705536␤»

[11:45] <lizmat> is that expected ?

[11:45] <jnthn> Well, it's not unexpected :P

[11:45] <jnthn> But "seems not quite legit" :)

[11:45] <jnthn> Looks more like a junk value than an OS-provided ID

[11:47] <lizmat> it's not 1, which one would expect, no?

[11:47] <jnthn> no, .id returns the OS's idea of thread ID, at least on Moar, not the internal one.

[11:48] <jnthn> But maybe that's not a sane thing to ask for on the main thread of a program?

[11:49] <jnthn> m: say $*THREAD.id; Thread.start({ say $*THREAD.id })

[11:49] <camelia> rakudo-moar a4e5ca: OUTPUT«140497208452928␤140497145652992␤»

[11:49] <jnthn> Maybe they are somehow legit...

[11:49] <lizmat> S17:778: "This should be treated as an opaque number. It can not be assumed to map to any particular operating system's idea of thread ID"

[11:49] <synopsebot> Link: http://perlcabal.org/syn/S17.html#line_778

[11:50] <jnthn> Yeah. Partly 'cus that's all JVM can promise.

[11:50] <jnthn> Anyway, above are certainly opaque numbers :P

[11:50] <lizmat> so how would you determine that you're running in the main thread ?

[11:50] <jnthn> But I'm surprised they don't look more like the kinda number you'd see in, say, top.

[11:52] <jnthn> OK, anybody has any release blockers?

[11:52] * jnthn sure hopes not :)

[11:57] <dalek> MoarVM: cd6a21f | jonathan++ | README.markdown:

[11:57] <dalek> MoarVM: Update README.

[11:57] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/cd6a21f310

[11:59] * jnthn tries out the tarball

[12:03] <jnthn> http://www.moarvm.org/releases/MoarVM-2014.04.tar.gz

[12:04] <jnthn> and tagged as 2014.04

[12:04] <cognominal> what is the meaning of repossession in the context of GC?

[12:04] <FROGGS> jnthn++

[12:05] <jnthn> cognominal: I dunno :)

[12:05] <jnthn> cognominal: We mostly use that word in the context of serialization

[12:05] <cognominal> oops

[12:05] <jnthn> augment is the most obvious thing that needs it

[12:06] <jnthn> I update the moarvm.org site later on.

[13:26] <timotimo> "positoin arguments"

[13:53] *** btyler joined
[13:53] <jnthn> timotimo: where?

[13:54] <jnthn> oh, change log

[13:55] <dalek> MoarVM: dcbd3fc | jonathan++ | docs/ChangeLog:

[13:55] <dalek> MoarVM: Fix typo; timotimo++.

[13:55] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/dcbd3fc2bc

[13:55] <jnthn> Not cutting a new release for it, but at least will get correct spelling on le site. :)

[13:57] <timotimo> :)

[14:25] *** donaldh joined
[15:39] *** cognominal joined
[16:02] <TimToady> ven, lizmat: wrt "is readonly", that's why we have ::= instead, which markes readonly after binding

[16:04] <TimToady> *marks

[16:12] <TimToady> oops, wrong channel

[16:13] * FROGGS .oO( yeah, indentation is mandatory... oops, wrong channel! )

[16:14] * TimToady hopes a third cup of coffee will fix his brane

[16:18] *** FROGGS[mobile] joined
[16:19] * retupmoca just found a spesh bug

[16:19] <retupmoca> (that I can only reproduce in the REPL so far)

[16:20] <retupmoca> looks like obj is null in OP(sp_findmeth), but only after/inside a OP(forceouterctx)

[16:20] <FROGGS[mobile]> Uhh, that does not sound nice

[16:21] <retupmoca> (reproduce: run perl6, enter 1 RET s/\$// REG

[16:21] <retupmoca> results in a segfault

[16:21] <retupmoca> s/REG$/RET

[16:25] <retupmoca> looks like the nqp code line it segfaults on is rakudo/src/core/Str.pm:649 (in method subst)

[16:32] <retupmoca> (will die on any s/// code, s/\$// is just what I spotted it with)

[17:01] *** raiph joined
[17:18] *** FROGGS joined
[18:05] *** brrt joined
[18:05] <brrt> hi #moarvm

[18:06] <timotimo> heyo brrt :)

[18:06] <timotimo> how are things?

[18:07] <brrt> tired as hell :-)

[18:07] *** btyler joined
[18:07] <brrt> doing my bachelors project, so lot of mucking about with rats, papers, presentations

[18:07] <timotimo> i've been more tired than usual recently; maybe it's the hayfever medication?

[18:08] * brrt doesn't have hayfever, thankfully

[18:08] <timotimo> aye, it's thoroughly annoying

[18:12] <brrt> i can imagine

[18:14] <brrt> next morning we'll know (or i'll know) whether my proposal has been accepted

[18:16] <retupmoca> Fixed my segfault! https://github.com/MoarVM/MoarVM/pull/93

[18:17] <timotimo> \o/

[18:18] <brrt> seems legit

[18:20] <brrt> see you tomorrow :-)

[18:20] *** brrt left
[18:22] <retupmoca> hrm...that wasn't the root cause of the issue however

[18:23] <retupmoca> $/ should be getting set, but it isn't in the repl

[18:23] <timotimo> hm, it may need the same treatment as $!

[18:24] <retupmoca> I still think spesh was wrong (it shouldn't segfault), but the actual problem here isn't spesh-related

[18:24] <retupmoca> what treatment did $! get?

[18:24] <timotimo> well, the way we handle the repl is kinda ... weird

[18:24] <timotimo> for example, you'll end up with a crapton of OUTER:: nested

[18:25] <timotimo> er, i think i meant $_? or maybe $!. i don't remember :P

[18:37] <FROGGS> the OUTER:: stuff is because every line is EVALed

[18:37] <timotimo> every line is eval'd with the previous line as its outer :)

[20:53] *** LLamaRider joined
[22:41] *** colomon joined
[23:34] <timotimo> it would be a good idea to change the link on moarvm.org for the new release (and the bit of text on what's new) before the release announcement goes out ...
