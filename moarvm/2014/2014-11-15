[00:00] <[Coke]> timotimo: so knowing where this memory thing is happening, how can I printf the MVMstr in code? I'l recompile and see if that shows me the string.

[00:00] <timotimo> oh

[00:00] <timotimo> printf'ing the MVMString's contents is a bit roundabout

[00:00] <[Coke]> nothing about this bug is straightforward. :)

[00:00] <timotimo> it could very well be that the pointer has become garbage

[00:01] <timotimo> if not, you should look if the storage type is "32bit graphemes" or "rope" (which is quite unlikely, but possible)

[00:15] <jnthn> [Coke]: Thanks for getting it down to being about MVMString. That helps a lot (in terms of reducing surface area).

[00:17] <timotimo> jnthn: i just rewrote prefix:<!> and prefix:<not> for Bool \a to not have a jump and not load 0 and 1 as wval and decont + istrue them ...

[00:17] <timotimo> but can we figure something like that out in spesh? https://gist.github.com/timo/de0ef5d3f5e159117d2b

[00:17] <jnthn> timotimo: That sounds...like an improvement :)

[00:17] <timotimo> the only thing i could think of is duplicating the last block, pasting it onto the two conditional blocks and then being able to constant-fold istrue on the wval'd objects

[00:19] <jnthn> Guy helps land probe on comet. In response, gets reduced to tears because of his choice of *t-shirt*. WTF is wrong with our world... :/

[00:19] <jnthn> timotimo: Yeah, it's not clear to me how to do it...

[00:20] <timotimo> it'll be re-writing then :)

[00:20] <jnthn> timotimo: It's some kinda backwards propagation issue

[00:20] <timotimo> yeah

[00:20] <jnthn> Like, we need to know what something gets used for...

[00:20] <timotimo> i'd kind of like to have a pseudo-register in BBs that get called from if or unless that is set to 0 or 1 in the branch and eliminate constants and other things that way

[00:21] <timotimo> new kernel, bbiab :)

[00:21] <jnthn> :)

[00:23] <timotimo> the thing i was hoping to get fixed by a newer kernel stayed broken :\

[00:24] <jnthn> aww

[00:25] <japhb> jnthn: link re: t-shirt issue?

[00:26] <timotimo> japhb: one of the people was wearing a hawaii shirt with ladies wearing bikinis

[00:27] <jnthn> japhb: http://www.bbc.com/news/blogs-trending-30055278

[00:29] <timotimo> okay, that's a bit more ... risqu√® than just "bikini-clad ladies"

[00:29] <japhb> Sigh.

[00:31] * japhb has feelpinions on this subject, but isn't in the mood to rant

[00:35] <jnthn> I've always found blame culture (X went wrong, QUICK LAWSUIT NOW!) ugly, and on this one I'm just sad at the pounce-on-maybe-mistakes culture that leads to a day when somebody should have been celebrating a huge scientific success instead being one they'll remember as "the day I shoulda picked another shirt" :(

[00:38] *** lizmat joined
[00:40] <JimmyZ> Good morning, #moarvm

[00:40] <jnthn> Oh my, it's morning already... :)

[00:40] <JimmyZ> 02:00 pm there ?

[00:40] <JimmyZ> *am

[00:40] <jnthn> am :)

[00:40] <jnthn> Yeah

[00:40] <jnthn> Home later than expected sicne they cancelled all the trains...

[00:41] <JimmyZ> Oh

[00:41] <timotimo> it's definitely not like he's set back women in science by a decade by wearing that shirt; it was possibly not anything he even thought about

[00:41] <timotimo> i disagree with placing blame on him

[00:42] <timotimo> it's more or less an expression of the general "mood"/"culture"

[00:42] <timotimo> a symptom, if you like

[00:50] <japhb> I am personally in the camp that feels "No matter how cool your job is, work is not home -- you don't get to be your full self at work, there's a higher standard expected."  I also think it's pretty clear this was a mistake, not intentional -- but if he wears that often to work, what standard is he setting for office environment?

[00:50] <timotimo> right

[00:50] <timotimo> nobody dared criticise him for his ladies-shirt

[00:59] <jnthn> It's sure as heck not a shirt I'd buy, let alone feel comfortable wearning anywhere, let alone work, fwiw. :) But yeah, I think it was almost certainly unintentional, and the internets have dealt their usual nuanceless harsh response.

[01:00] <timotimo> oh, there's nuance in there. you just can't see it between all the rage

[01:00] <jnthn> *nod*

[01:00] <timotimo> oh hey

[01:01] <timotimo> can we somehow spesh "$*OUT is almost never going to change"?

[01:01] <timotimo> it seems like looking that up takes a big chunk of time when we do i/o-heavy benchmarks

[01:01] <timotimo> we already cache dynamic variables in frames somewhere, but it doesn't seem to be enough? or something?

[01:03] <jnthn> Yeah, we do cache those kinds of lookup

[01:03] <jnthn> And if it's the same string literal used int he lookup that should be cheap...

[01:04] <timotimo> you mean '$*OUT'?

[01:04] <jnthn> Yes

[01:04] <timotimo> that should come from the serialization blob

[01:05] <jnthn> Well, the string lit comes from the string heap

[01:05] <timotimo> that one

[01:05] <timotimo> yeah

[01:05] <timotimo> i hope we cache it after unboxing :)

[01:05] <japhb> I thought TimToady++ had experimentally shown that the current caching scheme for dynamics was insufficient (average frame distance too high)

[01:05] <jnthn> I don't think the code-gen boxes it?

[01:05] <timotimo> oh?

[01:05] <timotimo> jnthn: i shall have a look at some spesh log output

[01:05] <timotimo> segfault :)

[01:06] <jnthn> timotimo: oh, though...

[01:06] <jnthn> Perl 6 lookups of those end up being calls to DYNAMIC

[01:06] <TimToady> well, it's not yet optimal, I think

[01:06] <jnthn> And we fail over to PROCESS for $*OUT...

[01:06] <jnthn> So that misses all the caching entirely :(

[01:06] <TimToady> but we got the average frame search from 20+ down to under 5

[01:06] <jnthn> It's almost as if we'd like to be able to cache "I sure as heck didn't find this symbol beneath this point" too

[01:06] <timotimo> ooooh

[01:06] <jnthn> If we can't already

[01:07] <timotimo> that could explain it i suppose?

[01:07] <jnthn> I found that with the method cache fwiw

[01:07] <jnthn> We used to waste a load of time doing MOP fallback stuff in nqp::can on the actions class for things like ws, which had no action method

[01:07] <jnthn> Once I made the method cache authoritative so we knew a miss in it meant "there really ain't one", we got a decent win.

[01:07] <timotimo> "OUT" doesn't even show up in the spesh log

[01:07] <timotimo> perhaps it's *that* bad

[01:08] <timotimo> that it doesn't even get spesh'd

[01:08] <TimToady> we could do better caching if we allocated space for it in the pad

[01:09] <TimToady> especially for known read-only values

[01:09] <TimToady> otoh, single use caching isn't very useful, so you really want to cache up a level or two from the singletons

[01:10] <jnthn> *nod*

[01:10] <TimToady> iirc the current scheme only gets desperate and starts replacing cache entries if it finds a really long lookup

[01:11] <TimToady> and it's also a bit ad hoc; since we have to look in each lexpad anyway, it kinda makes sense to cache values there instead of using a special frame slot

[01:12] <TimToady> and in that case we could be smarter about usage patterns, since we could cache multiple things at any level

[01:12] <TimToady> but that also potentially makes our lexpads not quite readonly at runtime, which is the downside

[01:12] <TimToady> so it's not all win

[01:13] <TimToady> you probably shouldn't trust much of what I say right now, since I'm coming down with Yet Another Cold, courtesy of family get-together-ness

[01:13] <jnthn> Urgh

[01:14] <jnthn> Meanwhile, I'm just about over jetlag, and am flying longhaul again in a couple of days...

[01:14] * TimToady has been working on the longest-literal stuff, which turned out not to need a rebootstrap

[01:14] <TimToady> but has other issues

[01:15] <TimToady> currently fails a bunch of tests which may be an inordinate reliance on ordered rules in the grammar, or maybe just bugs

[01:15] <TimToady> getting lit len to propagate up and down the nfa derivations is...fraught...

[01:16] <japhb> jnthn: Where to this time?

[01:16] <jnthn> japhb: South China

[01:17] <jnthn> Just for several days.

[01:17] <jnthn> (Work-related, not vacation this time. :))

[01:18] <japhb> More from the same place you and masak spent a month?

[01:18] <jnthn> Aye

[01:19] <jnthn> masak comes to, so at least I've got somebody to tell the terrible puns I come up with during the plane trip to... :)

[01:19] <jnthn> *too

[01:19] * japhb wonders how a Swedish training company gets serious business in South China

[01:23] <jnthn> I dunno. :) Sales is a black box that we feed the sort of stuff we like to do into, and offers of work for us to accept or run screaming from come out of. :)

[01:25] <japhb> Heh

[01:41] * jnthn gets some rest

[01:42] <[Coke]> good sales people are a wonder. I'm kind of happy I ended up in an industry where I don't have to rely on sales. :)

[03:15] *** synopsebot joined
[09:51] *** JimmyZ joined
[11:04] *** ggoebel111111111 joined
[14:24] *** camelia joined
[14:30] *** woolfy joined
[16:19] *** zakharyas joined
[17:27] <nebuchadnezzar> hello

[17:27] <nebuchadnezzar> maybe the travis build matrix could be updated? https://travis-ci.org/MoarVM/MoarVM/jobs/41102955#L155

[17:29] <timotimo> ah

[17:29] <timotimo> yeah, could

[17:29] <timotimo> fortunately it's entirely safe

[17:51] *** FROGGS_ joined
[18:48] *** BinGOs joined
[18:54] *** carlin joined
[18:55] *** woolfy joined
[18:59] *** hoelzro_ joined
[19:01] *** Juerd joined
[19:21] *** nebuchad` joined
[19:22] *** leedo_ joined
[19:25] *** nine joined
[19:26] *** timotimo joined
[19:53] *** carlin joined
[20:00] *** Juerd_ joined
[20:00] *** jnthn_ joined
[20:00] *** Util_ joined
[20:11] *** [Coke]_ joined
[20:11] *** lue joined
[20:23] *** oetiker joined
[20:49] *** dalek joined
[21:51] *** ggoebel111111113 joined
[22:48] *** woolfy1 joined
[22:56] *** lizmat joined
[23:08] *** colomon joined
