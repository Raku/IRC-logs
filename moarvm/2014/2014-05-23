[01:48] *** FROGGS_ joined
[01:59] *** FROGGS[mobile] joined
[02:06] *** btyler joined
[04:20] *** woosley left
[06:18] *** woolfy joined
[06:49] *** FROGGS joined
[07:01] <tadzik> timotimo++

[07:02] <tadzik> that bit me with steroids :)

[07:02] <jnthn> Bit me when making demo app with Gtk::Simple too ;)

[07:02] <jnthn> But I could avoid it in such a simple thing :)

[07:02] <jnthn> Glad it's fixed.

[07:05] *** zakharyas joined
[07:42] *** brrt joined
[07:55] <brrt> jnthn, with a (small) bit of asm, making a stack frame out of heap memory is actually really trivial

[07:56] <brrt> (backlogging from the discussion yesterday)

[07:56] <brrt> case in fact

[07:56] <brrt> you could use dynasm to compile a 'move to heap, call and return' wrapper

[07:57] <brrt> if you were so inclined

[07:57] <brrt> (yes i'm aware of the evil, but calling compiled functions sensibly is a problem i'll have to solve /anyway/)

[07:58] <jnthn> brrt: Yeah, but then we need to do it on all places we want to support with no sane non-assembly fallback :)

[08:02] <brrt> all the world is x64 right :-p

[08:02] <brrt> i know

[08:02] <brrt> unsolved problem

[08:05] <brrt> by the way, i think i've learned a new heuristic this week, or at least how to better formulate that heuristic

[08:05] <brrt> 'don't do by algorithm what can be done by data'

[08:07] <jnthn> Hmm

[08:07] <jnthn> Example? :)

[08:08] <brrt> its an R example, if you care for it :-)

[08:09] <brrt> basically, i had a data frame (=~ a 'table') containing two columns of interest : 'type' and 'condition'

[08:09] <brrt> and i needed to calculate some values with respect to both these columns

[08:10] <brrt> now for just those two, thats not very hard, R will give you a matrix (= also atable)

[08:10] <brrt> however, i needed to relate them to a time variable as well - i.e. calculate both over time

[08:11] <brrt> which gives you a three-dimensional matrix

[08:11] <brrt> and even that isn't much of a problem but that many columns of our three-dimensional matrix are empty completely (because they did not appear in the actual experiment)

[08:12] <brrt> and i was very busy writing the logic for simplifying this 3-dimensional matrix to two-dimensional form

[08:12] <brrt> when it struck me that i could just paste the relevant columns of type and condition together

[08:12] <brrt> i.e. i replaced an algorithm with a data operation

[08:13] <jnthn> :)

[08:13] <jnthn> Sounds like a nice simplification.

[08:14] *** lizmat joined
[08:14] *** zakharyas joined
[08:15] <brrt> well, yes :-)

[08:15] *** lizmat joined
[08:16] <brrt> especially as R is not the most algorithmically elegant language imaginable

[08:19] *** zakharyas joined
[08:19] *** woolfy left
[09:47] <dalek> moarvm.org: 746e1a7 | jnthn++ | / (4 files):

[09:47] <dalek> moarvm.org: Various updates for 2014.05 release.

[09:47] <dalek> moarvm.org: review: https://github.com/MoarVM/moarvm.org/commit/746e1a7408

[09:50] <jnthn> http://www.moarvm.org/ updated :)

[09:52] <FROGGS> that reads very well :o)

[09:53] <jnthn> brrt: I figure at some point soon we should do some more detailed planning for your JIT work. I figure so far you're working on understanding the ingredients involved. I guess you'll have some questions on spesh too. :)

[09:55] <jnthn> It'd be good to figure out concrete tasks from here.

[10:13] *** FROGGS[mobile] joined
[12:39] *** vendethiel joined
[13:36] *** vendethiel joined
[14:04] *** btyler joined
[16:00] *** FROGGS joined
[18:40] <timotimo> jnthn, got an idea for what to prioritize in gtk-simple?

[18:41] <timotimo> or maybe something for spesh or mvm in general?

[18:41] <timotimo> not sure i will be able to finish the named parameter spesh thing on my own

[18:42] <jnthn> timotimo: Well, adding more controls and events? :)

[18:44] <jnthn> I know we're missing a bunch of popular ones (like, check boxes, radio buttons, sliders, progress bars, images...)

[18:47] <tadzik> timotimo: porting the old niecza gtk# examples might be fun :)

[18:47] <tadzik> also, I can check if I can port my bachelor's app to Perl 6 now

[18:47] <timotimo> something that can draw stuff would be a nice base for turtle graphics

[18:47] <tadzik> uit's also using gtk for gui, I can make a list of things that it needs

[18:47] <timotimo> how about dbus?

[18:48] <tadzik> hm, using gtk for the last 5 years I never touched dbus :o

[18:48] <timotimo> does glib have something C ish for that?

[18:48] <tadzik> there's glib-dbus orso

[18:48] <timotimo> sounds helpful

[18:48] <timotimo> it's good for system utilities

[18:53] <timotimo> well, desktop utilities, really

[18:53] <timotimo> at some point splitting the code into filesbwould be interesting

[18:57] * tadzik looks at his gtk programs to look for something easy to port

[18:57] <tadzik> oh, https://github.com/tadzik/l should be simple enough :)

[19:05] <timotimo> justba launcher?

[19:13] <FROGGS> timotimo: what happened to your spacebar?

[19:20] <timotimo> this is a phone keyboard

[19:32] <timotimo> if i were at home or at least had my laptop with me, i'd be doing p6 stuff

[19:35] <tadzik> yeah, a fast launcher :)

[19:38] <timotimo> 'fast' ;)

[19:46] <tadzik> it is superfast, 'cos it has no startup time

[19:46] <tadzik> it runs in the background, and then SIGUSR1 makes it show up

[20:06] <timotimo> the perl6 port will be super fast, too?

[20:09] <[Coke]> https://github.com/tadzik/l - readme has a formattating error. your literal `'s got turned into {{MONOSPACE}}

[20:09] <[Coke]> *formatting

[20:30] <tadzik> maybe :)

[20:30] <tadzik> [Coke]: it did? I don't see ti

[22:01] *** lizmat joined
[22:04] *** woolfy joined
[22:25] *** woolfy left
