[01:21] *** krunen joined
[01:49] *** FROGGS joined
[05:06] *** bcode joined
[05:21] *** Util joined
[05:21] *** lee_ joined
[05:26] *** rurban_ joined
[05:26] *** lue joined
[05:26] *** oetiker_ joined
[05:26] *** harrow joined
[05:26] *** timotimo joined
[05:26] *** flussence joined
[05:26] *** tokuhirom joined
[05:26] *** TimToady joined
[05:26] *** retupmoca joined
[05:26] *** hoelzro joined
[05:26] *** vendethiel joined
[05:26] *** japhb_ joined
[05:33] *** rurban_ joined
[05:33] *** lue joined
[05:33] *** oetiker_ joined
[05:33] *** harrow joined
[05:33] *** japhb_ joined
[05:33] *** vendethiel joined
[05:33] *** hoelzro joined
[05:33] *** retupmoca joined
[05:33] *** timotimo joined
[05:33] *** flussence joined
[05:33] *** tokuhirom joined
[05:33] *** TimToady joined
[06:06] *** oetiker joined
[06:51] *** FROGGS joined
[07:03] *** zakharyas joined
[08:35] <nwc10> jnthn: origin/inline builds OK with ASAN, seems that t/spec/S32-io/IO-Socket-Async.t failure was transient

[08:36] <nwc10> otherwise no difference from master, just t/spec/S17-lowlevel/lock.rakudo.moar fails these days

[08:47] <jnthn> fails ASAN?

[08:47] <jnthn> Yeah, I think I have the traces from that sitting around in a browser tab still :)

[08:54] <nwc10> heap-use-after-free, seems to be 3 threads involved, 28 bytes inside of 48-byte region

[08:54] <nwc10> I think that it's the same one

[09:01] *** donaldh joined
[09:20] <lizmat> that feels low level enough to be the reason for all sorts of crashes that we've seen under load, no?

[09:20] <lizmat> and good morning!  :-)

[09:21] <jnthn> lizmat: Could quite easily be a factor

[09:21] <jnthn> Hard to know how significant.

[09:21] <jnthn> Well, other than fixing it and seeing how things look :)

[09:21] <lizmat> :-)

[09:25] <timotimo> good morning lizmat :)

[09:25] <timotimo> and jnthn and nwc10

[12:35] <dalek> MoarVM: 145d5a1 | sergot++ | src/spesh/dump.c:

[12:35] <dalek> MoarVM: keep the style

[12:35] <dalek> MoarVM:

[12:35] <dalek> MoarVM: bracket should be after "case * :" in the same line

[12:35] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/145d5a1d6f

[12:35] <dalek> MoarVM: 7933236 | sergot++ | src/gc/orchestrate.c:

[12:35] <dalek> MoarVM: warning cleaned

[12:35] <dalek> MoarVM:

[12:35] <dalek> MoarVM: cast from size_t to int added

[12:35] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/79332369d3

[12:35] <dalek> MoarVM: f1ac8e2 | (Tobias Leich)++ | src/ (2 files):

[12:35] <dalek> MoarVM: Merge pull request #101 from sergot/master

[12:35] <dalek> MoarVM:

[12:35] <dalek> MoarVM: warning cleaned, style correction

[13:41] *** jnap joined
[14:05] *** btyler joined
[14:16] *** FROGGS joined
[16:37] *** LLamaRider joined
[17:37] *** jnap joined
[18:18] *** vendethiel joined
[20:02] *** vendethiel joined
[20:08] * lizmat hopes brrt didn't get mugged at the station

[20:08] <jnthn> Are Netherlands stations well known for muggery?

[20:15] <lizmat> well, it was Eindhoven...  what can I say  :-)

[20:16] *** brrt joined
[20:16] <brrt> \o #moarvm

[20:16] <jnthn> hi brrt :)

[20:17] <brrt> hi jnthn :-)

[20:17] <brrt> i don't know if you've heard, but lizmat++ and woolfy++ have kindly sponsored a new machine

[20:17] <brrt> so that i could work faster

[20:18] <brrt> and its amazingly fast

[20:18] <brrt> so, thanks again :-)

[20:18] <lizmat> you're welcome

[20:18] <lizmat> did you install the SSD yet ?

[20:18] <brrt> not yet

[20:19] <lizmat> ah, then building will become much faster still  :-)

[20:19] <brrt> yes

[20:19] <FROGGS> brrt: is it so fast that you don't consider doing the JIT anymore? O.o

[20:19] <brrt> not so fast, no

[20:19] <brrt> :-)

[20:19] <FROGGS> good :o)

[20:19] <brrt> i'm going to try and see if fedora works

[20:20] <jnthn> :)

[20:20] * jnthn hopes it means we get a JIT faster ;)

[20:20] * lizmat hopes that as well  :-)

[20:20] <brrt> i'm thinking that was the plan :-)

[20:21] <brrt> lets not get ahead of time - ha ha pun :-p

[20:21] <brrt> brb :-)

[20:21] <jnthn> :P

[20:21] <jnthn> .oO( You know it's a bad pun when you have to point it out :P )

[20:22] <brrt> true

[20:22] <jnthn> d'oh, my first Moar patch of the evening makes a segv

[20:24] <jnthn> oh, duh

[20:24] *** lee__ joined
[20:25] *** krunen_ joined
[20:29] *** Util joined
[20:41] <dalek> MoarVM/inline: 9496c79 | jnthn++ | src/spesh/graph. (2 files):

[20:41] <dalek> MoarVM/inline: Start tracking local/lexical counts in graph.

[20:41] <dalek> MoarVM/inline:

[20:41] <dalek> MoarVM/inline: We'll need to modify these as we inline.

[20:41] <dalek> MoarVM/inline: review: https://github.com/MoarVM/MoarVM/commit/9496c7968d

[21:43] <dalek> MoarVM/inline: e304fc3 | jnthn++ | src/spesh/inline. (2 files):

[21:43] <dalek> MoarVM/inline: Start merging of inlinee into inliner spesh graph.

[21:43] <dalek> MoarVM/inline:

[21:43] <dalek> MoarVM/inline: This adds basic graph merging (some bits missing yet) and sketches out

[21:43] <dalek> MoarVM/inline: the next bits of the inline algorithm.

[21:43] <dalek> MoarVM/inline: review: https://github.com/MoarVM/MoarVM/commit/e304fc3307

[21:44] <jnthn> m: say 0x265

[21:44] <camelia> rakudo-moar 28d672: OUTPUT«613␤»

[21:46] *** jnap joined
[21:52] *** vendethiel joined
[21:55] <jnthn> d'oh, first run of that code exploded...turns out not because the code is wrong so far, but because it tried to do multi-level inlines. :)

[21:57] <jnthn> (did the initial bits of work to inline capture_prune into prune, then wanted to inline prune into term:sym<value>...)

[21:58] <jnthn> (which given both are tiny isn't such a weird thing to want to do)

[22:03] *** donaldh joined
[22:05] *** nebuchadnezzar joined
[22:05] <nebuchadnezzar> hello

[22:08] <jnthn> hi

[22:08] <jnthn> m: say 15 +< 3

[22:08] <camelia> rakudo-moar 28d672: OUTPUT«120␤»

[22:09] <jnthn> m: say 16 +< 3

[22:09] <camelia> rakudo-moar 28d672: OUTPUT«128␤»

[22:10] <donaldh> Coke: I don't like the hardcoded port 5000 either. I plan to extract the port finding code from IO-Socket-INET.t into a separate package and use that.

[22:14] *** vendethiel joined
[22:17] <donaldh> .tell Coke: re http://irclog.perlgeek.de/perl6/2014-06-06#i_8834904 I don't like the hardcoded port 5000 either. I plan to extract the port finding code from IO-Socket-INET.t into a separate package and use that.

[22:18] <donaldh> oh, not .tell ?

[22:18] <donaldh> .tell Coke re http://irclog.perlgeek.de/perl6/2014-06-06#i_8834904 I don't like the hardcoded port 5000 either. I plan to extract the port finding code from IO-Socket-INET.t into a separate package and use that.

[22:18] <TimToady> ENOYOLEAUX

[22:19] <donaldh> Oh my. Wrong channel anyway.

[22:19] * donaldh crawls away

[22:19] <dalek> MoarVM/inline: d0369eb | jnthn++ | / (5 files):

[22:19] <dalek> MoarVM/inline: Note which operands are spesh slots.

[22:19] <dalek> MoarVM/inline:

[22:19] <dalek> MoarVM/inline: Need to fix these up during inlining, and should do it programatically

[22:19] <dalek> MoarVM/inline: rather than hard-coding instructions.

[22:19] <dalek> MoarVM/inline: review: https://github.com/MoarVM/MoarVM/commit/d0369eb0e5

[22:28] <nebuchadnezzar> I'm plannig to open an Intent To Package of MoarVM on Debian and I'm wondering a quite basic question, is it normal to include 3party headers directly in moar.h? Shouldn't they be moved in some private use header file?

[22:28] <nebuchadnezzar> I manage to build deb packages for moarvm and nqp-m but rakudo fails at includes of moar.h since it does not find dyncall.h

[22:29] <jnthn> Hmm

[22:29] <jnthn> I guess Rakudo's C extension doesn't direclty need those

[22:30] <nebuchadnezzar> I find these includes http://paste.debian.net/103800/

[22:30] <jnthn> Yes, it needs a bunch of the MoarVM stuff

[22:30] <jnthn> Oh...hmm

[22:31] <jnthn> And various data structures it imports will end up pointing to 3rdparty things pretty quickly.

[22:31] <jnthn> Including needed ones.

[22:31] <jnthn> So yeah, it needs to be that way.

[22:32] *** vendethiel joined
[22:32] <jnthn> At least, it's certainly not a trivial thing to make it not be that way.

[22:32] <nebuchadnezzar> aren't they access through moarvm API ?

[22:33] <nebuchadnezzar> hmm ok

[22:33] <jnthn> Well, it's more that we expose types of MVMThreadContext, which inside of it has, e.g., uv_mutex

[22:33] <jnthn> No, we don't monkey with them directly.

[22:33] <jnthn> But since they're sat there in the struct...

[22:34] <jnthn> Anyway, is this an absolute blocker?

[22:34] <nebuchadnezzar> got it

[22:34] * jnthn is hoping not; the Fedora packaging didn't run into it, afaik

[22:34] <nebuchadnezzar> rakudo-moar will need some updated libuv at least

[22:35] <jnthn> I think we're tracking that quite closely; there was some recentish bug fix we depend on, iirc.

[22:37] <nebuchadnezzar> according to 3party/README.md, libatomic_ops "are NOT included in any built binaries", this one could be moved somewhere else, don't it?

[22:37] <jnthn> "moved somewhere else"?

[22:38] * jnthn also wonders how true that remark is

[22:38] <jnthn> I know it's true on Windows where libatomic_ops is purely a header include

[22:38] <nebuchadnezzar> sorry, this one was not an issue since the debian package is the same version as 3party lib

[22:39] <nebuchadnezzar> well, I will start by building moarvm and nqp-m, will see rakudo later with Debian rakudo team

[22:39] <jnthn> OK, thanks.

[22:40] <nebuchadnezzar> thanks for your time and your advices

[22:40] <jnthn> Lemme know if there's some blocker.

[22:40] <jnthn> <-- Windows background, not good at knowing the needs of Linux packagers

[22:41] <nebuchadnezzar> I admit I have no clue about non Linux OS ;-)

[22:41] <jnthn> :)

[22:41] <jnthn> Sure; anyway, I'm willing to look into stuff that helps us get packaged on Linux, as it matters.

[22:42] <nebuchadnezzar> such things tend to make headers quite cumbersome

[22:42] <nebuchadnezzar> hmm, cumbersome may not be the right word I was looking for

[22:43] <nebuchadnezzar> to tired to write english correctly, sorry: Time To Sleep

[22:47] <jnthn> Sleep well :)

[22:48] *** donaldh joined
[22:50] <dalek> MoarVM/inline: 3557ed8 | jnthn++ | src/spesh/inline.c:

[22:50] <dalek> MoarVM/inline: Spesh slot fixups in inline graph merge.

[22:50] <dalek> MoarVM/inline: review: https://github.com/MoarVM/MoarVM/commit/3557ed85c0

[22:51] <jnthn> OK, enough for today :)

[22:51] <jnthn> 'night, all
