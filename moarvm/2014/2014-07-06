[00:14] *** zakharyas joined
[01:48] *** FROGGS__ joined
[03:19] *** dalek joined
[03:22] *** tadzik joined
[03:22] *** ingy joined
[03:38] *** synopsebot joined
[04:05] *** colomon_ joined
[04:14] *** vendethiel joined
[06:10] *** ssutch joined
[07:44] <dalek> MoarVM: 59af26f | jimmy++ | 3rdparty/uthash.h:

[07:44] <dalek> MoarVM: Update uthash to latest version

[07:44] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/59af26f7d4

[09:28] *** ggoebel111117 joined
[09:55] *** brrt joined
[09:59] *** woolfy left
[10:29] <jnthn> Darn, missed brrt to tell him to blog :P

[10:30] <jnthn> Maybe still recovering from nearly getting kicked out of the world cup by costa rica... :D

[10:57] *** brrt joined
[10:58] *** brrt left
[10:58] *** brrt joined
[11:02] <brrt> \o #moarvm

[11:03] <jnthn> BLOG!

[11:03] <jnthn> uh, o/ brrt

[11:03] <brrt> :-$

[11:03] <brrt> my blog is nearly finished.....

[11:03] <jnthn> :)

[11:03] <brrt> you're completely right though

[11:03] *** cognominal joined
[11:24] * masak .oO( don't finish the blog; one post is enough! )

[11:27] <jnthn> masak: It'd appear that "blog" is in use to mean a post as well as the whole thing ;)

[11:32] <masak> it'd appear a small part of me is a prescriptivist, at least when it comes to using words in an unambiguous way.

[11:33] <brrt> then you'd do better not to speak english at all, it seems :-)

[11:35] <masak> aye :/

[11:36] <brrt> it seems hawaiian is simple and elegant?

[11:39] <masak> wow, it looks a lot like Maori.

[11:45] <jnthn> You gotta be kidding me. I just found a bug in, of all things, compilation of if/unless

[11:46] <brrt> .....

[11:46] <brrt> wow

[11:46] <brrt> how do you find a bug in if/unless?

[11:46] <brrt> (and, what does maori look like, then?)

[11:50] <masak> brrt: like this: "Ka taea e ahau te kai karaihe, a e kore e tukino i te reira ahau."

[11:50] <brrt> and this means? :-)

[11:51] <masak> it's what I got from putting "I can eat glass, and it doesn't hurt me." into Google Translate.

[11:51] <masak> but it doesn't roundtrip, so beware.

[11:51] <masak> just an example of how the language can look.

[11:52] <jnthn> brrt: When we access a local variable, it just gives the register.

[11:52] <jnthn> For objects, we need to decont potentially before calling if_o

[11:52] <brrt> uhuh

[11:53] <brrt> (decont is also one of these big 'blocker' opcodes)

[11:53] <jnthn> Anyway, it was doing

[11:53] <jnthn> decont some_reg, some_reg

[11:53] <jnthn> Just re-using the source register, assuming it was a temporary

[11:53] <jnthn> Which is fine if you looked it up as a lexical

[11:54] <jnthn> And a whole lot less fine if you actually were given a local holding a containerized thing

[11:56] <brrt> ok, that is an issue

[11:56] <brrt> did that never cause issues before?

[11:56] <jnthn> Amazingly not.

[11:57] <jnthn> Well, unless we start getting the odd spectest starting to pass :)

[11:58] <brrt> i can imagine that spesh lex-to-local opt would make this visible, too

[11:58] <jnthn> It's not a spesh opt, fwiw. It's a Rakudo optimizer one.

[11:58] <jnthn> But yeah, it makes it visible indeed.

[12:01] * brrt is sometimes amazed at the levels of intermediation between perl6 and the machine

[12:03] <brrt> i don't think we're as bad as pypy yet, but we sure have quite a few levels

[12:07] <jnthn> I dunno. Rakudo itself is only a 4-stage compiler really (parse/ast, optimize, build backend code tree, produce bytecode)

[12:21] <sergot> o/

[12:21] <jnthn> o/ sergot

[12:26] <brrt> well, we add spesh graphs and jit code now :-) so that is 6 levels by now

[12:26] <brrt> \o sergot

[12:26] <jnthn> True :)

[12:27] <brrt> as i said, not as bad as pypy :-)

[12:49] * brrt finally blawged: http://brrt-to-the-future.blogspot.nl/

[12:49] <brrt> you'll all be spammed over the perl6 list shortly

[12:52] <jnthn> wow, long post :)

[12:52] * jnthn reads

[12:55] <jnthn> brrt++ # great post

[12:55] <brrt> thanks :-)

[12:55] * brrt was a bit afraid it was too much jargon-and-details

[12:55] <jnthn> And nice you're thinking about the issues deeply and seeing how two seemingly-different problems are really the same one.

[12:58] <brrt> i'm really flattered now :-)

[13:03] <brrt> did you happen to see the games yesterday?

[13:03] <brrt> shame for belgium, they tried hard

[13:04] <jnthn> Didn't watch them, but followed the live text...

[13:04] <jnthn> Expected the Netherlands to make a more efficient job of Costa Rica...

[13:07] <brrt> i.. was frustrated a bit with that game, because a): whenever robben was going for an attack, wham, a costa-rican lies in front of him, and he falls

[13:07] <brrt> b): huntelaar very sneakily 'bumps' against the costa-rican keeper, 10 minutes or so before the penalty kicks

[13:08] <brrt> c): literally 1 minute before the end of the game, the dutch coach changes the keeper

[13:08] <brrt> sneaky games, is what i say

[13:09] <brrt> anyway, i'm going to relax on a sunday afternoon a bit :-)

[13:09] <jnthn> :)

[13:09] <brrt> see you later (or tomorrow) :-)

[13:09] <jnthn> have a nice Sunday o/

[13:09] <brrt> you to o/

[13:09] *** brrt left
[13:19] <FROGGS__> brrt++

[13:26] *** carlin joined
[13:32] *** JimmyZ joined
[14:02] <timotimo> brrt++

[14:05] <timotimo> could the "re-use the register" have been an optimization that we could re-use in the future?

[14:09] <timotimo> the more registers we have the more space we use up on the stack, right?

[14:09] <timotimo> or rather "the pseudo-stack"?

[14:48] *** lue joined
[15:07] *** zakharyas joined
[15:40] <btyler> brrt++ # nice post!

[16:43] <dalek> MoarVM: 8368447 | jnthn++ | src/core/frame.c:

[16:43] <dalek> MoarVM: Correct computation of lexical vivifications.

[16:43] <dalek> MoarVM:

[16:43] <dalek> MoarVM: The original code relied on the now-fixed bug with merging inline

[16:43] <dalek> MoarVM: tables.

[16:43] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8368447f31

[17:15] *** vendethiel joined
[17:20] *** vendethiel joined
[17:55] *** vendethiel joined
[18:14] *** vendethiel joined
[18:19] *** vendethiel joined
[18:52] *** vendethiel joined
[19:13] *** zakharyas joined
[19:52] *** dalek joined
[20:02] *** krunen joined
[21:42] *** lizmat joined
[21:52] *** woolfy joined
[21:59] <dalek> MoarVM/nativecast: c57deea | (Tobias Leich)++ | / (6 files):

[21:59] <dalek> MoarVM/nativecast: add box target parameter to nativecallcast

[21:59] <dalek> MoarVM/nativecast:

[21:59] <dalek> MoarVM/nativecast: This op now gets a param that says something about the bit size we are

[21:59] <dalek> MoarVM/nativecast: going to read, and also the type we wanna box into. The latter will be

[21:59] <dalek> MoarVM/nativecast: either of Int/Num/Str, when the former is int8/int16/...

[21:59] <dalek> MoarVM/nativecast: review: https://github.com/MoarVM/MoarVM/commit/c57deeafc6
