[01:01] *** FROGGS_ joined
[04:52] *** colomon joined
[06:17] *** camelia joined
[06:27] *** camelia joined
[06:30] *** camelia joined
[06:51] *** brrt joined
[06:51] <brrt> \o

[07:06] *** FROGGS_ joined
[08:32] *** zakharyas joined
[09:30] *** cognome joined
[10:15] *** cognome joined
[10:46] *** cognome joined
[10:47] *** cognome joined
[10:50] *** avuserow joined
[10:53] *** leont joined
[11:07] <timotimo> http://t.h8.lv/p6bench/2014-09-25-two_months_rakudo.html   -   http://t.h8.lv/p6bench/2014-09-25-two_months_rakudo_history.html

[11:07] <timotimo> brrt: -^

[11:10] <nwc10> timotimo: is your setup good enough to also the setup/starup for perl 5 loading Moose?

[11:11] <nwc10> In that, those are startup + runtime benchmarks, aren't they?

[11:11] <timotimo> no, they are runtime - startup

[11:11] <nwc10> ah OK. cool. I'm being, um, LTA

[11:11] <nwc10> thanks

[11:12] <timotimo> it would be pretty cool if you could teach the compilers.pl about using Moose and the components.json about installing Moose (and Data::Alias and the other thing that's used in one of the microbenchmarks)

[11:21] *** camelia joined
[11:48] *** cognome joined
[12:31] *** cognome joined
[12:46] *** cognome joined
[13:08] <dalek> MoarVM: 8b43ef6 | moritz++ | Configure.pl:

[13:08] <dalek> MoarVM: [Configure] document --asan option

[13:08] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8b43ef6e0e

[13:17] <dalek> MoarVM: 8a5d684 | moritz++ | Configure.pl:

[13:17] <dalek> MoarVM: [Configure] synchronize documentation of command line options

[13:17] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8a5d6846ac

[13:46] *** kjs_ joined
[13:46] *** cognome joined
[14:01] *** colomon joined
[14:46] *** cognome joined
[15:28] *** Ven joined
[15:33] <japhb> nwc10, timotimo: The big thing I need for doing benchmarks with Data::Alias, Moose, etc. is a way to install them -- and particular versions of each -- with zero configuration, preferably with the ability to network fetch separately from build/install into the locally-built perl5's.  If Moose and all its prerequisites are all available via git with proper tagging, then we can probably treat them as components and

[15:34] <japhb> we can just have the module installs be part of the build procedure for perl5.

[15:36] <japhb> Someone would need to track that down, and figure out how the prerequisites for Moose have changed over time, and if they need to be changed based on perl5 version, or if the same list of modules can be installed for every supported perl5 release (which has so far been 5.10+, but we can change if really necessary).

[15:46] *** cognome joined
[15:50] *** FROGGS[mobile] joined
[16:09] *** colomon joined
[16:46] *** cognome joined
[16:47] *** FROGGS joined
[17:06] *** rurban joined
[17:06] <rurban> moritz: typo in your —asan commit

[17:06] <rurban> "suport"

[17:07] <moritz> rurban: thanks

[17:07] <dalek> MoarVM: 078176d | moritz++ | Configure.pl:

[17:07] <dalek> MoarVM: fix typo, rurban++

[17:07] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/078176da54

[17:46] *** cognome joined
[17:58] *** kjs_ joined
[18:04] *** cognome joined
[18:17] *** kjs_ joined
[19:02] *** colomon joined
[19:08] *** Ven joined
[19:42] <nwc10> japhb: I don't have any real insight to help you with that

[19:42] <timotimo> brrt: http://t.h8.lv/p6bench/2014-09-25-many_rakudos_history.html  -  http://t.h8.lv/p6bench/2014-09-25-many_rakudos.html

[19:45] <timotimo> and this one is without perl5: http://t.h8.lv/p6bench/2014-09-25-many_rakudos_history2.html

[19:47] <moritz> does anybody know what made while_push_join so slow?

[19:47] <moritz> or while_push, for that matter

[19:50] <FROGGS> moritz: yes

[19:50] <FROGGS> there was a case of a single item push that was really slow

[19:51] <FROGGS> and TimToady hunted it down to a push candidate and removed it

[19:51] <FROGGS> which in turn made out benchmarked case slow

[19:52] <FROGGS> jnthn afterwards found a way to satisfy both cases, and made it slower than the original version :o)

[19:55] <moritz> uhm

[19:55] <moritz> that doesn't sound like a happy ending :(

[19:59] <FROGGS> err

[19:59] <FROGGS> s/slower/faster/

[19:59] <FROGGS> *g*

[19:59] <FROGGS> hehe

[20:01] <timotimo> since i'm currently not sitting at that computer, i can just run HEAD on top of that

[20:04] <FROGGS> moritz: this was the patch that made both microbenchmarks *faster* in the end: https://github.com/rakudo/rakudo/commit/abc97dbcc2

[20:05] <moritz> FROGGS: thanks

[20:05] <FROGGS> six days old...

[20:05] <moritz> are the various MoarVM env variables documented somewhere?

[20:05] <FROGGS> I don't think so

[20:06] <nwc10> I should add that to my list of "mistakes not to repeat from Perl 5"

[20:06] <nwc10> ie, please, someone, document them

[20:06] <FROGGS> last time I grepped for DISABLE I just found it in /src

[20:06] <nwc10> and hence start to see how long the list is getting

[20:10] <moritz> where should I document them?

[20:11] *** brrt joined
[20:11] <brrt> timotimo++ :-)

[20:12] <nwc10> moritz: good question, to which I don't know the answer. Perl 5 has documentation intended to become man pages. I don't know if MoarVM has a man page yet

[20:12] <FROGGS> moritz: doc/env_variables.md?

[20:12] <moritz> FROGGS: in the long run, a man page might be better indeed

[20:13] <moritz> but it seems that md2man is only available as a ruby tool

[20:13] <moritz> so I'd write it in POD, and use pod2man

[20:13] <moritz> if nobody objects

[20:14] <brrt> also, is moar-jit slower in most of these benchmarks?

[20:15] <brrt> i don't object, i just  think md is often easier than pod, and also i don't know pod that well

[20:16] <PerlJam> moritz: you could always write a perly version of md2man first   ;>

[20:16] <moritz> PerlJam: I'm not into deep yakshave diving mode

[20:16] <brrt> and while_concat is missing for moar-jit?

[20:19] <FROGGS> m: sub foo($a) { }; foo()

[20:19] <camelia> rakudo-moar 7469aa: OUTPUT«===SORRY!=== Error while compiling /tmp/JMYLrHsAX4␤Calling 'foo' requires arguments (if you meant to operate on $_, please use .foo or use an explicit invocant or argument)␤    Expected: :(Any $a)␤at /tmp/JMYLrHsAX4:1␤------> [32…»

[20:29] <brrt> in fact on those benchmark moar-jit seems to do very bad

[20:30] <dalek> MoarVM: fc4151a | moritz++ | docs/moar.pod:

[20:30] <dalek> MoarVM: Add beginnings of a manual page in docs/oar.pod

[20:30] <dalek> MoarVM:

[20:30] <dalek> MoarVM: I use pod here instead of markdown, because there is a widely available

[20:30] <dalek> MoarVM: pod2man tool.

[20:30] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fc4151aaee

[20:34] <PerlJam> moritz: you've at least one typo "contributrs".  I'd fix it myself, but it seems like a lot of work to make a PR for just that little change :)

[20:35] <dalek> MoarVM: 552e5aa | moritz++ | docs/moar.pod:

[20:35] <dalek> MoarVM: fix typo, PerlJam++

[20:35] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/552e5aa70b

[20:45] *** rurban left
[20:55] *** kjs_ joined
[20:59] *** brrt left
[21:22] *** flussence joined
[22:34] *** cognome joined
