[01:16] *** FROGGS_ joined
[01:49] *** ilbot3 joined
[02:20] *** harrow joined
[02:27] *** harrow joined
[02:55] *** btyler joined
[03:28] *** benabik joined
[05:47] <dalek> moarvm.org: c8c9e11 | (Alexander Moquin)++ | index.html:

[05:47] <dalek> moarvm.org: s/releaes/release/

[05:47] <dalek> moarvm.org: review: https://github.com/MoarVM/moarvm.org/commit/c8c9e11aae

[05:47] <dalek> moarvm.org: 1b850f8 | timo++ | index.html:

[05:47] <dalek> moarvm.org: Merge pull request #4 from Mouq/patch-1

[05:47] <dalek> moarvm.org:

[05:47] <dalek> moarvm.org: s/releaes/release/

[05:47] <dalek> moarvm.org: review: https://github.com/MoarVM/moarvm.org/commit/1b850f8b27

[05:52] <timotimo> oh, in serialization, all references (for read_ref and write_ref) are 32bit integers, but they are indices to a table

[05:52] <timotimo> it would seem logical that we could save a bit of space by using varints there

[11:53] *** zakharyas joined
[13:00] <retupmoca> timotimo: I used read_int vs read_varint mostly because I don't entirely know what I'm doing

[13:00] <retupmoca> timotimo: should I just replace my use of _varint with _int?

[14:06] <timotimo> heh

[14:06] <timotimo> no, replace your uses of _int with _varint

[14:07] <timotimo> a _varint can write up to a 64bit integer, but if the integer uses fewer bits, the serialized version will be using fewer bytes

[14:07] <timotimo> if it does use all bits, it ends up being one byte longer than it'd have to

[14:07] <timotimo> but the savings in the general case are significant

[14:07] <timotimo> especially for things like offsets into tables

[14:07] <timotimo> which tend to be between 0 and 1000

[14:10] <retupmoca> timotimo: gotcha. PR updated!

[14:11] <timotimo> did you check if it still works, though? :)

[14:11] <retupmoca> I did!

[14:12] <timotimo> sometimes the length of a thing in the serialization blob has to be known

[14:12] <timotimo> so if you put a varint, you have to be a bit more careful

[14:12] <retupmoca> well, my little test worked anyway, let me try my actual use-case

[14:12] <timotimo> please check if read_varint_func comes with an ensure_can_read or what it's called

[14:13] <timotimo> otherwise, put ensure_can_read before the read_varint portions; i think there's an assertion function that knows how to handle varints

[14:14] <retupmoca> yeah, read_varint_func has 'assert_can_read_varint(tc, reader);' as it's first line of actual code

[14:15] <retupmoca> and my modules still compile and work with the _varint

[14:15] <retupmoca> so I don't think this will break anything my first version doesn't

[14:15] <retupmoca> (and I haven't even seen my first version breaking anything yet!)

[14:19] *** brrt joined
[14:32] <timotimo> ah, very good

[14:33] <JimmyZ> Good evening

[14:37] <timotimo> in that case i feel somewhat confident in merging it. revert's cheap anyhow

[14:37] <dalek> MoarVM: 3f5c316 | (Andrew Egeler)++ | src/6model/reprs/CStruct.c:

[14:37] <dalek> MoarVM: Serialize CStruct repr_data

[14:37] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/3f5c316ec0

[14:37] <dalek> MoarVM: 80b9695 | (Andrew Egeler)++ | src/6model/reprs/CStruct.c:

[14:37] <dalek> MoarVM: s/_int/_varint/ in CStruct serialization

[14:37] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/80b9695714

[14:37] <dalek> MoarVM: 1a41aa3 | timo++ | src/6model/reprs/CStruct.c:

[14:37] <dalek> MoarVM: Merge pull request #94 from retupmoca/cstruct_serialize

[14:37] <dalek> MoarVM:

[14:37] <dalek> MoarVM: Serialize CStruct repr_data

[14:37] <dalek> MoarVM:

[14:37] <dalek> MoarVM: fixes a precomp bug: https://gist.github.com/retupmoca/11290398

[14:37] <retupmoca> \o/

[14:38] <retupmoca> timotimo++ # Now my Compress::Zlib stream functions work!

[14:38] <timotimo> yays :)

[14:59] <masak> wow!

[16:03] *** benabik joined
[16:16] *** lizmat joined
[16:54] * tadzik found a pub that serves "the empire strikes"

[16:55] <tadzik> I'm gonna bring some bottles to Poznan :)

[17:11] *** zakharyas joined
[18:28] *** woosley joined
[20:08] *** LLamaRider joined
[20:12] *** woolfy joined
[20:58] <cognominal> so long a time I have not used gdb. What does it complain about no debugging symbols found when I have have  compiled moar with -g and file(1) says moar and libmoar.so are not stripped?

[20:58] <cognominal> s/What/Why/

[21:06] <cognominal> that's in on an unbuntu running in virtualbox

[21:23] <timotimo> cognominal: it may be complaining about debug symobols for something like glibc or so

[21:24] <cognominal> I tried a simple hello world and it works

[21:25] *** benabik joined
[21:25] <cognominal> I have never debugged program with threads

[21:25] <timotimo> ah, yeah, that takes a bit of getting used to :)

[21:26] <timotimo> basically you want to do something like "thread foreach bt full" or something remotely similar to that

[21:27] <cognominal> anyway I have not got so far apparently

[22:14] *** zakharyas joined
[22:58] *** colomon joined
[23:26] *** btyler joined
[23:48] *** btyler joined
