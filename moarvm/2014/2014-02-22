[00:44] *** colomon joined
[01:25] *** tgt joined
[01:44] <dalek> MoarVM/moar-conc: d50b471 | jnthn++ | / (12 files):

[01:44] <dalek> MoarVM/moar-conc: Implement reentrant mutexes.

[01:44] <dalek> MoarVM/moar-conc:

[01:44] <dalek> MoarVM/moar-conc: We can't rely on libuv ones to be reentrant, so we need to build the

[01:44] <dalek> MoarVM/moar-conc: recursion support ourselves.

[01:44] <dalek> MoarVM/moar-conc: review: https://github.com/MoarVM/MoarVM/commit/d50b471b9c

[01:44] <TimToady> \o/

[01:44] <timotimo> yays

[01:46] <jnthn> We may want to be smarter on this in the future. Digging into the struct we have on Windows, the one there does appear to be reentrant.

[01:47] <jnthn> I know that it can't be relied to be, 'cus we had a Moar bug before due to a bad assumption on that.

[02:13] *** FROGGS_ joined
[02:32] *** colomon joined
[03:43] <JimmyZ> timotimo: are you going to addd Semaphore repr to MoarVM too?

[03:43] *** colomon joined
[04:52] <JimmyZ> hmm, when update body->u.bigint a new value, the old one seems to not be freed

[04:53] <JimmyZ> or it does not used the old allocated memory

[04:54] <JimmyZ> jnthn:^^

[05:22] <dalek> MoarVM/moar-conc: 12682ab | jimmy++ | / (6 files):

[05:22] <dalek> MoarVM/moar-conc: Add Repr Semaphore

[05:22] <dalek> MoarVM/moar-conc: review: https://github.com/MoarVM/MoarVM/commit/12682aba79

[06:23] <dalek> MoarVM/moar-conc: 7471aa1 | jimmy++ | src/6model/reprs/Semaphore.c:

[06:23] <dalek> MoarVM/moar-conc: Fixed copy-pasto

[06:23] <dalek> MoarVM/moar-conc: review: https://github.com/MoarVM/MoarVM/commit/7471aa1966

[09:44] <timotimo> thank you JimmyZ for the moar semaphore

[10:38] <jnthn> JimmyZ: The contract is that you only call set_int once ever on a given object.

[10:39] <jnthn> JimmyZ: There's no op that breaks that contract. You can if you're in C, but you can do anything if you're in C, so... :)

[11:13] <JimmyZ> jnthn: Do you see the message about bigint?

[11:13] <jnthn> JimmyZ: Yes, I replied to it in the last 2 messages here.

[11:14] <jnthn> JimmyZ: set_int is one-shot. You never call it a second time, so there's never an update, afaict.

[11:14] <JimmyZ> and copy_to and bigint_add etc?

[11:15] <jnthn> copy_to is only ever called as part of a clone, where the target is a fresh object.

[11:15] <jnthn> And operations like addition always produce a new object to store the result

[11:16] <jnthn> Perl 6's Int is immutable, and everything is implemented around that.

[11:28] <JimmyZ> ok, thanks. I thought it's mutable, like my $a = 3; my $b = $a + 3; $a = 10;

[11:29] <jnthn> No

[11:44] <dalek> MoarVM/moar-conc: 27ea01a | jnthn++ | lib/MAST/Ops.nqp:

[11:44] <dalek> MoarVM/moar-conc: Updated MAST::Ops library.

[11:44] <dalek> MoarVM/moar-conc:

[11:44] <dalek> MoarVM/moar-conc: Forgotten in an earlier commit.

[11:44] <dalek> MoarVM/moar-conc: review: https://github.com/MoarVM/MoarVM/commit/27ea01a2b8

[11:44] <dalek> MoarVM/moar-conc: 8571676 | jnthn++ | src/6model/reprs/Semaphore. (2 files):

[11:44] <dalek> MoarVM/moar-conc: Comment tweaks.

[11:44] <dalek> MoarVM/moar-conc: review: https://github.com/MoarVM/MoarVM/commit/857167611d

[11:44] <dalek> MoarVM/moar-conc: c9ba748 | jnthn++ | / (6 files):

[11:44] <dalek> MoarVM/moar-conc: Add semaphore related ops.

[11:44] <dalek> MoarVM/moar-conc: review: https://github.com/MoarVM/MoarVM/commit/c9ba748166

[11:47] <jnthn> http://esr.ibiblio.org/?p=5095#more-5095 # evil!!

[11:51] <JimmyZ> kinda ...

[11:52] <timotimo> not usable in a #if, though :(

[11:54] <jnthn> Oh :/

[11:56] <FROGGS_> in the comments seems to be a nicer version (static inline)

[11:57] <JimmyZ> wouldn't mind to make MVM_semaphore_* static inline

[11:58] <jnthn> Don't make things called from ops static inline, or we'll have fun when trying to build JIT...

[11:58] <JimmyZ> ah

[12:38] *** tgt joined
[14:22] *** FROGGS__ joined
[14:23] *** flussenc1 joined
[14:23] <hoelzro> moar-conc? what's that for?

[14:24] * hoelzro .oO( moar-conch )

[14:24] *** PerlPilot joined
[14:26] <jnthn> hoelzro: S17 support for Moar

[14:26] *** tadzik joined
[14:26] <hoelzro> ooooooo

[14:26] *** d4l3k_ joined
[14:26] *** tokuhirom_ joined
[14:26] <jnthn> hoelzro: Adding abstraction layer for things that are JVM-specific as needed.

[14:27] <hoelzro> wonderful =)

[14:34] *** timotimo joined
[14:50] *** tgt joined
[14:50] *** eternaleye joined
[15:04] *** ilbot3 joined
[15:06] *** [Coke] joined
[15:07] *** chipdude joined
[15:08] *** __sri joined
[15:18] *** lizmat joined
[15:21] *** ilbot3 joined
[15:24] *** cxreg joined
[15:30] *** ilbot3 joined
[15:33] *** masak__ joined
[15:34] *** JimmyZ joined
[16:01] *** ilbot3 joined
[16:04] *** harrow joined
[17:35] *** ilbot3 joined
[17:38] *** cxreg joined
[17:42] *** ilbot3 joined
[17:48] *** lee joined
[18:16] *** ilbot3 joined
[18:17] *** colomon joined
[20:22] *** ilbot3 joined
[21:13] *** ilbot3 joined
[22:05] *** timotimo joined
[22:05] *** __sri joined
[22:09] *** harrow joined
[22:29] *** harrow joined
[23:46] *** timotimo joined
[23:46] *** __sri joined
