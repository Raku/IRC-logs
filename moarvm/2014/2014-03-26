[00:07] *** colomon joined
[00:34] *** colomon joined
[02:02] *** jnap1 joined
[02:12] *** woosley joined
[02:44] *** FROGGS_ joined
[06:10] *** FROGGS joined
[06:42] *** FROGGS joined
[07:07] *** FROGGS joined
[08:07] *** zakharyas joined
[08:49] *** lizmat joined
[08:52] *** lizmat_ joined
[09:32] *** lizmat joined
[09:59] <nwc10> jnthn++ # works on "my" machine again

[10:01] *** lizmat joined
[10:03] <jnthn> nwc10: yay

[10:24] *** lizmat joined
[12:10] *** lizmat joined
[12:10] *** woolfy joined
[12:14] *** woolfy left
[12:33] *** woolfy joined
[12:42] *** FROGGS joined
[12:44] *** lizmat joined
[12:46] *** woolfy joined
[13:14] *** woolfy left
[13:32] *** woolfy joined
[13:33] *** woolfy left
[13:55] *** btyler joined
[14:31] *** jnap joined
[14:36] *** jnap1 joined
[15:27] *** cognominal joined
[16:26] *** lizmat_ joined
[16:27] *** woolfy1 joined
[16:47] *** colomon joined
[16:50] *** woolfy1 left
[17:04] *** Guest1337 joined
[19:52] *** btyler joined
[20:58] *** brrt joined
[20:59] <brrt> hi #moarvm

[21:00] <brrt> i came to lobby for pull request https://github.com/MoarVM/MoarVM/pull/85

[21:01] <brrt> which i've updated :-)

[21:07] <jnthn> brrt: Thanks, had tasks today and evening meeting, but have some free time in just a moment :)

[21:09] <brrt> no worries :-)

[21:19] <jnthn> brrt: yeahl that looks bett4r

[21:19] <jnthn> whoa

[21:19] <jnthn> brrt: yeah, that looks better

[21:24] <dalek> MoarVM: 57384a3 | (Bart Wiegmans)++ | src/gc/ (3 files):

[21:24] <dalek> MoarVM: Compact the gen2 overflows list.

[21:24] <dalek> MoarVM:

[21:24] <dalek> MoarVM: Fixes issue #62.

[21:24] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/57384a3b62

[21:33] <brrt> \o/

[21:57] <timotimo> if something in the overflows list has been killed, it's supposed to turn into a null pointer, right?

[22:03] <jnthn> Should do.

[22:04] <jnthn> Mostly it's STables that end up there, which tend to be quite long-lived...though of course lots of throw-away mixins will produce such things. Well, may do if you've enough of a midlife crisis issue with 'em. :)

[22:05] <brrt> timotimo - i should note that in this version the live object beyond the size of the compacted list aren't really 'null'-ed

[22:06] <brrt> which is ok because a): no algorithm should look beyond num_overflows and b): they are pointes to live objects

[22:07] <jnthn> uh, dead ones, no? :)

[22:12] * brrt thinking

[22:12] <brrt> no, they're live pointers :-)

[22:13] <brrt> the algorithm copies pointers 'backwards' - the compaction is through a): skipping null pointers and b): setting the barrier to the live object cursor

[22:14] <brrt> so there are - in principle - live pointers in the space after the compacted area

[22:14] <brrt> but again, this doesn't matter because any algorithm that looks beyond the live cursor is already in error

[22:15] <brrt> and yes, i've been thinking too much about compacting :-)

[22:15] <timotimo> is compaction done every time an overflow object dies?

[22:19] <brrt> no, only after collection

[22:21] <jnthn> brrt: oh, I see what you mean :)

[22:21] <jnthn> brrt: Sorry. $dayjob meeting had imperial stout... :)

[22:23] <timotimo> er, of course only after collection

[22:24] <timotimo> i'm asking because my moar-gdb.py plugin is just going from the 0th overflow to the num_overflows'th object in the overflows list and analyzes them

[22:29] <jnthn> timotimo: Then you're fine, I think

[22:29] <jnthn> timotimo: You'll just not see NULLs in ther enow

[22:29] <timotimo> good

[22:54] <brrt> :-) time for sleep

[22:54] <jnthn> 'night, brrt++

[22:54] <brrt> night jnthn

[22:54] *** brrt left
