[00:50] *** kjs_ joined
[06:39] *** lue joined
[07:21] <dalek> MoarVM: dfdef4c | TimToady++ | src/6model/reprs/NFA.c:

[07:21] <dalek> MoarVM: replace quicksort with insertion sort

[07:21] <dalek> MoarVM:

[07:21] <dalek> MoarVM: N is generally small, so a simple insertion sort is more appropriate,

[07:21] <dalek> MoarVM: especially when moved to the point we already have the fates in the cache.

[07:21] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/dfdef4c92c

[08:42] *** lizmat joined
[09:54] *** woolfy joined
[11:49] *** JimmyZ_ joined
[12:12] <jnthn> wtf was I thinking in frame.c:555...

[12:13] <jnthn> That's rooting osmething that's not even a GC-able thing, it's a register frame array...

[12:14] *** tadzik joined
[12:15] *** synopsebot joined
[12:19] <JimmyZ_> Oh, How did it work :)

[12:20] <jnthn> By getting hit rarely, I guess...

[12:22] <lizmat> reason for OS X flakiness ?

[12:22] <JimmyZ_> so only OS X hit it ? ;)

[12:22] <jnthn> lizmat: Well, I took a spectest that was sometimes failing, did a bunch of GC setting tweaks, and got same test to explode due to this reason under the debugger.

[12:23] <jnthn> lizmat: I can confirm that particular issue I found on OSX goes away. I now need a fresh normal build and to do a clean build/spectest.

[12:24] * lizmat is looking forward to the results

[12:25] <jnthn> If clang ever finishes compiling interp.c, we'll find out... :P

[12:26] <lizmat> brb&

[12:35] <jnthn> Well, further improvement.

[12:36] <jnthn> All passed except an explosion in t/spec/S04-statements/terminator.t

[12:38] <JimmyZ_> That's very nice

[12:40] <lizmat> jnthn++

[12:42] <jnthn> That failure is, unfortunately, still indicative of a bug somewhere.

[12:43] <jnthn> But this is by far the cleanest I've seen OSX since I started looking into the issues.

[12:50] <lizmat> yeah, reason enough for a bump ?

[12:54] <jnthn> lizmat: yes, let's

[12:54] <jnthn> It'll give us some more feedback

[12:54] <lizmat> ok, will do

[12:55] * timotimo is pleased

[13:40] *** kjs_ joined
[14:32] *** kjs_ joined
[14:36] *** dalek joined
[15:04] *** brrt joined
[15:04] <brrt> \o

[15:06] <JimmyZ> o/

[15:13] <timotimo> |o

[15:16] <brrt> oh good news... jnthn++

[15:39] *** kjs_ joined
[15:44] *** zakharyas joined
[16:20] *** zakharyas joined
[16:36] <lizmat> well... the feedback from me so far, is that I still see random testfiles fail during spectest

[16:42] <TimToady> maybe it shoulda been named osx canary

[16:45] <jnthn> lizmat: :/

[16:49] <jnthn> Guess we'll have to see what improvement the [Coke]++ daily runs show up

[16:54] <jnthn> stouting &

[17:52] *** FROGGS_ joined
[18:15] *** woolfy left
[18:36] *** lizmat joined
[18:47] *** ilbot3 joined
[19:57] *** kjs_ joined
[19:58] *** kjs_ joined
[20:15] <hoelzro> FROGGS_: have you had a chance to look at that precomp bug?

[20:16] <FROGGS_> hoelzro: no, $dayjob keeps me busy :o(

[20:16] <FROGGS_> (also right now)

[20:16] <hoelzro> ah ha =/

[20:17] <hoelzro> I looked at it a bit, and I *thought* I was on to something, but jnthn assured me that's not the issue

[20:18] <FROGGS_> ahh, k

[20:18] <hoelzro> I think my problem is that my knowledge of how precomp works is very limited

[20:18] <FROGGS_> I should ask what you were after then before I start getting into it

[20:19] <FROGGS_> I know some details but my problem is that my brane is not smart enough to keep all details in memory at the same time :o)

[20:20] <hoelzro> well, I thought it was because GLOBALish isn't passed in here: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/World.nqp#L361

[20:20] <hoelzro> but jnthn said that GLOBALish is serialized with all of the correct linkage, so that's not it

[20:20] <hoelzro> that's as far as I got

[20:21] <dalek> MoarVM: c6354db | TimToady++ | src/6model/reprs/NFA.c:

[20:21] <dalek> MoarVM: more cleanups; carp on wrong # of fates from nqp

[20:21] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c6354db280

[21:54] <timotimo> jnthn: do you think recording where the code currently was when a GC got triggered would be interesting?

[21:57] <timotimo> jnthn: when forcing the GC to run, the profiler output for GC runs is wrong, it shows a green bar all the way to the right, even if the three parts don't add to the same amount

[22:02] *** lizmat joined
[22:09] <timotimo> i'm not sure if i should make the progress bar shorter or add a "wasted" section

[22:36] *** [Coke] joined
[22:38] * [Coke] finally kicks off today's runs.

[22:44] <lizmat> [Coke]++

[23:11] *** colomon joined
[23:48] <timotimo> 00062   const_s      loc_1_str,

[23:48] <timotimo> 'CwAAAEAAAAAFAAAAaAAAABwAAAC4AQAAZl4AAHICAACGhQAAGdAAACkAAADx0wAAFQAAAEHVAAAB2wAAAAAAAAUAAAAGAAAAcwAAAHQAAADbAAAA3AAAAN8AAADgAAAAKgEAACsBAAABAAAAAAAAAFAAAAABAAAAUAAAAKAAAAADAAAAoAAAAEQHAAB1AAAARAcAAJ4TAADYAAAAFRQAAEMbAAADAAAAXRsAAB0iAAABAAAAHSIAAG0iAAB1AAAAbSIAALkrAAB1AAAA9CwAAEA2AAB1AAAAezcAAMdAAAB1AAAAAkIAAE5LAAB1AAAAiUwAANVVAAABAAAAEFcAAFhXAAABAAAAWFcAAPpXAAABAAAA+lcAAEJYAAABAAAAQlgAAKhYAAABAAAAqFgAAPBYAAA

[23:48] <timotimo> BAAAA8FgAAFZZAAABAAAAVlkAAJ5ZAAABAAAAnlkAAARaAAABAAAABFoAAExaAAABAAAATFoAALJaAAABAAAAsloAAPpaAAABAAAA+loAAGBbAAABAAAAYFsAAKhbAAABAAAAqFsAAA5cAAABAAAADlwAAF5cAAABAAAAXlwAAK5cAAAAAAAApAAAAAAAAAAAAAAAAgAAAAAApQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAACmAAAAAAAAAAEAAAACAAAAAACnAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAKgAAAAAAAAACgAAAAI

[23:48] <timotimo> AAAAAAKkAAAAKAG0AAAAEAAAAAgABAAAAX8EAAAcAAAACAAEAAADCBgAACAAAAAIAAQAAAMoGAAAJAAAAAgABAAAA4gYAAAoAAAACAAEAAADqBgAACwAAAAIAAQAAAPoGAAAMAAAAAgABAAAABAcAAA0AAAACAAEAAAATBw

[23:48] <timotimo> how come we're still putting serialized blobs in base64?
