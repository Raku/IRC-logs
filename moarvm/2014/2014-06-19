[00:30] <japhb_> Dangit, I missed jnthn.  :-(

[00:30] <japhb_> Well, in any case ...

[00:31] <japhb_> .tell jnthn I was referring to problems with the output of https://github.com/japhb/perl6-bench/blob/master/nqp/rc-forest-fire

[00:48] *** lizmat joined
[01:06] *** FROGGS_ joined
[01:26] *** woolfy joined
[01:35] *** btyler joined
[02:00] *** raiph joined
[02:29] *** carlin joined
[04:41] *** woosley joined
[05:48] *** woosley joined
[06:20] *** lizmat joined
[06:23] *** nebuchadnezzar joined
[06:36] *** woolfy joined
[06:58] *** brrt joined
[06:58] <brrt> hey, i think i've found the source of the bug in moar-jit

[06:58] <brrt> it's the combination with inline

[07:00] <brrt> i.e - inline 'inlines' a frame that has a instruction of sp_enter_jit

[07:00] <brrt> sp_enter_jit looks as the (now changed) frame and decides there isn't any jitcode

[07:00] <brrt> sp_enter_jit freaks out :-)

[07:01] <brrt> (because the bigger frame, even if fully compatible with jit otherwise, cannot compile sp_enter_jit yet)

[07:04] *** lizmat_ joined
[07:07] *** hoelzro joined
[07:10] *** zakharyas joined
[07:12] *** lizmat joined
[07:16] *** FROGGS joined
[07:21] *** woolfy joined
[07:25] *** bonsaikitten joined
[07:25] <brrt> tl;dr - i need some form of register for the jitcode and refer to that in the enter_jit opcode, otherwise inlining breaks jit

[07:29] *** tadzik joined
[07:29] <brrt> the only question left is

[07:29] <brrt> what register

[07:30] <brrt> locally (hanging of the StaticFrame) or globally (hanging of the CompUnit or even the MVMInstance)?

[07:31] <FROGGS> is enter_jit coupled to any of these three?

[07:33] <brrt> ehm, no

[07:33] <brrt> it used to be that the jit compiler compiled a whole frame or nothing

[07:34] <brrt> the inliner obviously changes that, as i've seen

[07:34] <brrt> the jitcode /used/ to hang off of the spesh candidate of the static frame

[07:34] <brrt> or, does now, actually

[07:35] <brrt> the register is just there to answer the question 'what jitcode do you want to call?'

[07:38] <brrt> i think the core of it is this: if i register jit code globally, then during inlining, i don't need to change anything (yay), because the sp_enter_jit can still refer to the same entry

[07:38] <brrt> if i register jit code on the static frame - in any sense, either on the spesh candidate or directly - then i need to take care of that in inlining

[07:38] <brrt> i.e. merge the registers of inlined frames

[07:39] <brrt> and update the sp_ente_jit opcodes to refer to the right register entries

[07:39] <brrt> i actually think that is the better option, but i can't readily explain why :-)

[07:43] <FROGGS> hmmm, well, jnthn's opinion will shed light on this then :o)

[07:50] <brrt> he wouldn't be here today, would he?

[07:51] <FROGGS> I have no idea

[07:51] <brrt> ok, i know why a local register is better

[07:52] <brrt> basically, it allows to keep the index small

[07:53] <timotimo> It seems like it's a travel day for jnthn

[08:59] * brrt is off for a few hours

[08:59] *** brrt left
[11:16] *** cognominal joined
[11:36] *** woolfy1 joined
[11:57] *** LLamaRider joined
[12:10] *** cognominal joined
[12:14] *** woolfy joined
[13:07] *** woolfy left
[13:09] *** woolfy joined
[13:55] *** btyler joined
[14:15] *** FROGGS joined
[14:25] *** btyler joined
[14:40] *** woolfy1 joined
[15:47] *** raiph joined
[16:12] *** btyler_ joined
[16:14] *** jnap joined
[17:02] *** colomon joined
[18:10] *** btyler joined
[18:10] *** jnap joined
[18:10] *** raiph joined
[18:10] *** woolfy1 joined
[18:10] *** FROGGS joined
[18:10] *** tadzik joined
[18:10] *** bonsaikitten joined
[18:10] *** lizmat joined
[18:10] *** hoelzro joined
[18:10] *** nebuchadnezzar joined
[18:10] *** woosley joined
[18:10] *** japhb joined
[18:10] *** bcode joined
[18:10] *** japhb_ joined
[18:10] *** vendethiel joined
[18:10] *** Util joined
[18:10] *** oetiker joined
[18:10] *** lue joined
[18:10] *** BinGOs joined
[18:10] *** moritz joined
[18:10] *** [Coke] joined
[18:10] *** avar joined
[18:10] *** ChanServ joined
[18:10] *** ingy joined
[18:10] *** brother joined
[18:10] *** lee__ joined
[18:10] *** ggoebel111116 joined
[18:10] *** nwc10 joined
[18:10] *** cxreg joined
[18:10] *** masak joined
[18:10] *** sergot joined
[18:10] *** synopsebot joined
[18:10] *** _sri joined
[18:10] *** betterworld joined
[18:10] *** daxim joined
[18:10] *** krunen joined
[18:10] *** jnthn joined
[18:10] *** dalek joined
[18:10] *** ashleydev joined
[18:10] *** harrow joined
[18:10] *** rurban_ joined
[18:10] *** timotimo joined
[18:10] *** flussence joined
[18:10] *** tokuhirom joined
[18:16] *** japhb_ joined
[18:16] *** btyler joined
[18:16] *** jnap joined
[18:16] *** raiph joined
[18:16] *** woolfy1 joined
[18:16] *** FROGGS joined
[18:16] *** tadzik joined
[18:16] *** bonsaikitten joined
[18:16] *** lizmat joined
[18:16] *** hoelzro joined
[18:16] *** nebuchadnezzar joined
[18:16] *** woosley joined
[18:16] *** japhb joined
[18:16] *** bcode joined
[18:16] *** vendethiel joined
[18:16] *** Util joined
[18:16] *** oetiker joined
[18:16] *** lue joined
[18:16] *** BinGOs joined
[18:16] *** moritz joined
[18:16] *** [Coke] joined
[18:16] *** avar joined
[18:16] *** ChanServ joined
[18:16] *** ingy joined
[18:16] *** brother joined
[18:16] *** lee__ joined
[18:16] *** ggoebel111116 joined
[18:16] *** nwc10 joined
[18:16] *** cxreg joined
[18:16] *** masak joined
[18:16] *** sergot joined
[18:16] *** synopsebot joined
[18:16] *** _sri joined
[18:16] *** betterworld joined
[18:16] *** daxim joined
[18:16] *** krunen joined
[18:16] *** jnthn joined
[18:16] *** dalek joined
[18:16] *** ashleydev joined
[18:16] *** harrow joined
[18:16] *** rurban_ joined
[18:16] *** timotimo joined
[18:16] *** flussence joined
[18:16] *** tokuhirom joined
[18:27] *** brrt joined
[19:09] *** zakharyas joined
[19:14] *** vendethiel joined
[20:02] <dalek> MoarVM/moar-jit: 22773f2 | jnthn++ | src/spesh/args.c:

[20:02] <dalek> MoarVM/moar-jit: Don't refuse to spesh if we've a slurpy positional

[20:02] <dalek> MoarVM/moar-jit: review: https://github.com/MoarVM/MoarVM/commit/22773f2330

[20:02] <dalek> MoarVM/moar-jit: dd80dbf | (Timo Paulssen)++ | src/spesh/optimize.c:

[20:02] <dalek> MoarVM/moar-jit: put in a missing break

[20:03] *** dalek joined
[20:06] <[Coke]> we lost the review line there.

[20:16] *** brrt joined
[20:17] <brrt> that should've been a merge line, though

[20:40] <timotimo> yes, those are mostly old-ish commits

[20:43] *** raiph joined
[21:33] <dalek> MoarVM: bc1bbc3 | Carlin++ | src/io/fileops.c:

[21:33] <dalek> MoarVM: Change default mode to 0x01FF

[21:33] <dalek> MoarVM:

[21:33] <dalek> MoarVM: 0x0FFF is 7777, not 0777

[21:33] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/bc1bbc3bab

[21:33] <dalek> MoarVM: 8309dc2 | Carlin++ | src/io/syncfile.c:

[21:33] <dalek> MoarVM: Change default mode to 0x01FF

[21:33] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8309dc225b

[21:33] <dalek> MoarVM: 5cdc366 | Carlin++ | src/io/ (2 files):

[21:33] <dalek> MoarVM: make default file mode 0644

[21:33] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/5cdc366b15

[21:33] <dalek> MoarVM: f418844 | (Tobias Leich)++ | src/io/ (2 files):

[21:33] <dalek> MoarVM: Merge pull request #105 from carbin/master

[21:33] <dalek> MoarVM:

[22:06] *** pmichaud joined
[22:13] <pmichaud> regarding pull request / issue #105 in MoarVM, I think that file permissions in C programs should be specified as 0666... letting the umask setting take care of turning off group/other write permissions as appropriate.

[22:13] <pmichaud> I left a similar comment in the ticket.

[22:49] <jnthn> +1, please somebody make it as pmichaud++ said

[22:51] <jnthn> .tell brrt spesh for inlining needs to have access to the specialized bytecode; I suggest the jitcode is hung off just the ->effective_bytecode of the frame, but the bytecode slot of spesh_cand is left as it is (I'm assuming since the bug exists, it's being hung off spesh_cand).

[22:51] <jnthn> Thta is, hvae MVM_spesh_invoke make the "enter jitcode" decision.

[22:51] <jnthn> uh, MVM_frame_invoke

[22:52] <jnthn> And thus the inliner still finds the bytecode itself.

[22:52] <jnthn> sleep &

[23:30] *** benabik joined
