[01:10] *** JimmyZ joined
[01:10] <JimmyZ> jnthn: Bump dyncall version  # I think we didn't update to a new dyncall version :P

[01:14] *** FROGGS_ joined
[06:03] *** Ven joined
[06:59] *** cognome joined
[07:00] *** FROGGS joined
[07:00] *** zakharyas joined
[07:06] *** leedo joined
[07:06] *** cognome_ joined
[07:07] <sergot> hi oi/

[07:07] <sergot> o/

[07:07] <nwc10> \o

[07:45] *** cognome joined
[07:47] <FROGGS> alt grß+o

[08:00] *** PerlJam joined
[09:25] *** leont joined
[10:34] <dalek> MoarVM: 8153f38 | jonathan++ | docs/ChangeLog:

[10:34] <dalek> MoarVM: Seems we didn't bump dyncall version after all.

[10:34] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8153f382a4

[10:47] *** woolfy1 joined
[11:05] *** brrt joined
[11:07] <brrt> \o

[11:08] <nwc10> o/

[11:09] <brrt> i'm in a lecture now :-)

[11:11] <timotimo> yays uni

[11:11] <brrt> very

[11:40] *** FROGGS joined
[12:07] <jnthn> so study...

[12:07] <jnthn> OK, so apparently MoarVM is incredibly bourgeois

[12:08] <jnthn> I am missing a load of commits on my Linux VM

[12:08] <jnthn> Which is where I cut release.

[12:08] <jnthn> And...4 attempts to git pull later, it never manages to grab all the objects :/

[12:08] <timotimo> what the ...

[12:09] <jnthn> 3.00 KiB/s :/

[12:09] <jnthn> wtf.

[12:09] <jnthn> This hsa gotta be some kind of weird traffic shaping. :/

[12:10] <timotimo> must be

[12:10] <jnthn> hmm, wonder what protocl it's using...

[12:10] <jnthn> ah, https

[12:10] <jnthn> of course anybody using https must be doing something terrible... :)

[12:11] <timotimo> aye

[12:11] <jnthn> Yup. Use git protocol and it's done already.

[12:11] <jnthn> Wow.

[12:13] <jnthn> The craziest thing is that if I tunnel my HTTP and HTTPS traffic via Germany over SSH, it still often works out faster than direct requests from here...

[12:13] <jnthn> ...and I get German ads all the time :P

[12:13] <FROGGS> Weißbier \o/

[12:13] <jnthn> darn

[12:13] <jnthn> the submodules are https

[12:16] <FROGGS> I think there is a ticket for that already :o)

[12:16] <jnthn> Of course submodules suck so I'm having fun trying to imrpvoe things

[12:17] <FROGGS> :/

[12:17] <jnthn> Of course, the alternatives to using them typically suck just as hard...

[12:17] <jnthn> Does anybody want to cut a MoarVM 2014.09 tarball? :)

[12:17] <FROGGS> jnthn: gimme instructions :o)

[12:18] <jnthn> FROGGS: docs/release_guide.md

[12:18] <jnthn> FROGGS: I did 1..3

[12:18] <FROGGS> taht's too easy

[12:18] <jnthn> So basically make release VERSION=2014.09

[12:18] <jnthn> And you get a tarball

[12:18] <jnthn> Make sure you git pull'd and configure'd first and that's all it needs.

[12:19] <jnthn> If you fancy doing step 5 and 6 too, feel free, but I'm happy to also. :)

[12:19] <jnthn> I think I might do dinner first though...kinda hungry. :)

[12:20] <FROGGS> k, I'll report here

[12:20] <jnthn> Cool. Just drop the tarball somewhere and lemme know what step you go to, and I'll do the reset once I'm back.

[12:20] <jnthn> FROGGS++

[12:21] <jnthn> *rest

[12:21] <jnthn> bbl &

[12:22] <FROGGS> "This is MoarVM version 2014.09"

[12:26] <FROGGS> 4, 5 and 6 done... http://froggs.de/perl6/MoarVM-2014.09.tar.gz

[12:27] <lizmat> FROGGS++  jnthn++

[12:41] <masak> FROGGS++

[13:41] <jnthn> Now at http://www.moarvm.org/releases/MoarVM-2014.09.tar.gz

[13:41] <jnthn> FROGGS++ # tanks!

[13:41] <jnthn> *thanks!

[13:42] *** Ven joined
[13:43] <FROGGS> snacks!

[13:43] <FROGGS> :D

[13:45] *** Ven joined
[13:48] *** vendethiel joined
[14:04] *** JimmyZ joined
[14:12] <dalek> moarvm.org: 5963e3d | jonathan++ | / (4 files):

[14:12] <dalek> moarvm.org: Update website for 2014.09.

[14:12] <dalek> moarvm.org: review: https://github.com/MoarVM/moarvm.org/commit/5963e3dce7

[14:13] <nwc10> jnthn: are you building that tar.gz on linux?

[14:13] <jnthn> nwc10: yes

[14:13] <jnthn> Usually :)

[14:14] <jnthn> Today's attempt ended up with delegation :)

[14:15] <nwc10> jnthn: you're aware that it's possible to beat gzip by about 5%?

[14:15] <nwc10> http://perl5.git.perl.org/perl.git/blob/v5.20.0:/Porting/release_managers_guide.pod#l836

[14:19] <jnthn> nwc10: No. I guess being aware of such things is what gets you a 1400 line release guide rather than a 40 line one... ;-)

[14:20] <nwc10> that's not *totally* fair. I think the bigger problem is having a festering mess that barely hangs together, and a lot of silent-or-grumpy downstream that expect perfection (or better)

[14:21] <nwc10> and only report bugs about 1-5 years after you released them

[14:21] <jnthn> Well, it's totally unfair 'cus MoarVM is just a VM, so you'd need to add the NQP and Rakudo guides too :)

[14:22] <jnthn> How much applies for those doing the monthlies, ooc?

[14:23] <nwc10> I don't know. I think "quite a bit" just to keep everything in good shape

[14:26] <nine> anyway just releasing a tar.xz instead of a tar.gz seems simple enough

[14:26] <nwc10> In Perl 5 land we didn't think that "intead" was great

[14:27] <nwc10> currently we're doing bz2 and gz

[14:27] <nwc10> I think it might be a plan to go to xz and gz

[14:27] <jnthn> I'm not sure MoarVM is currently getting downloaded enough to worry a lot about this... ;)

[14:27] <nwc10> also, you don't have 200+ mirrors

[14:27] <jnthn> Right :)

[14:28] <jnthn> Another curious little data point:

[14:28] <jnthn> rakudo-star-2014.08-parrot.msi 03-Sep-2014 14:25   17M

[14:29] <jnthn> rakudo-star-2014.08-moar.msi   03-Sep-2014 15:00  9.5M

[14:29] <tadzik> heh

[14:29] <jnthn> That's quite a size difference...

[14:29] <tadzik> and has moar features

[14:29] <jnthn> Yes :)

[14:29] <tadzik> ba-dum-tshh

[14:29] <jnthn> :P

[14:33] *** JimmyZ_ joined
[14:34] <carlin> so, moar is less

[14:35] <jnthn> moar or less...

[14:35] <carlin> less is moar

[14:37] *** FROGGS[mobile] joined
[14:37] *** Ven joined
[16:10] *** Ven joined
[16:36] *** FROGGS joined
[16:53] *** Ven joined
[17:02] *** zakharyas joined
[17:41] *** brrt joined
[17:47] *** Ven joined
[18:01] *** camelia joined
[18:10] *** dalek joined
[19:17] <brrt> timotimo: ping?

[19:18] *** Ven joined
[19:18] <dalek> MoarVM/cglobal: c1c22e9 | (Tobias Leich)++ | / (2 files):

[19:18] <dalek> MoarVM/cglobal: conditionally use/install our libtommath headers

[19:18] <dalek> MoarVM/cglobal: review: https://github.com/MoarVM/MoarVM/commit/c1c22e918f

[19:18] <dalek> MoarVM/cglobal: a924435 | jonathan++ | src/6model/serialization.c:

[19:18] <dalek> MoarVM/cglobal: Don't try to serialize file handles.

[19:19] *** dalek joined
[19:19] <brrt> this dude is going broke real soon: https://medium.com/life-at-primeloop/putting-email-in-its-place-27757946d9fe

[19:20] *** daxim__ joined
[19:21] *** zakharyas joined
[19:35] <brrt> 'falling back on mutable state and for loops make me feel like a bad programmer' - or a wuss :-p

[19:44] <timotimo> pong

[19:46] <timotimo> brrt ^

[20:08] *** brrt joined
[20:17] <brrt> \o timotimo

[20:17] <brrt> who killed camelia again

[20:17] *** camelia joined
[20:20] <lizmat> diakopter++ working on issues on host08

[20:20] <diakopter> [Coke] is I think

[20:21] *** camelia joined
[20:22] <[Coke]> I'm stabbing at things blindly.

[20:22] <[Coke]> I do think we want to decouple the rakudo build process into 3 separate builds. having rakudo-moar wait for rakudo-jvm to build is bad.

[20:22] <dalek> MoarVM: 699360b | (Tobias Leich)++ | / (8 files):

[20:22] <dalek> MoarVM: add op nativecallglobal

[20:22] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/699360b050

[20:27] *** brrt left
[20:34] <timotimo> brother: what was up? :)

[20:34] <timotimo> er

[20:34] <timotimo> brrt is already gone again :\

[20:34] <timotimo> ah, what the next step for the jit should be

[20:34] <timotimo> don't really know ...

[20:35] <timotimo> at some point we're going to want to throw away boxing/unboxing - and of course the dynasm change that'd let us do "proper" register allocation

[20:39] <timotimo> and then at some point we'll want common subexpression elimination and loop invariant hoisting ...

[20:40] <timotimo> and if we can have a "no smallbigint path" version of the bigint ops, we could inline the smallbigint computations for all the ops into the generated assembly and call to the only-bigint-path version of the op when we discover it's not "compatible"

[21:27] *** jlaire joined
[21:29] *** avuserow joined
[22:03] *** leont joined
[22:44] <[Coke]> j: say 3; #not building anything right now

[22:44] <camelia> rakudo-jvm 36bada: OUTPUT«Can't call method "syswrite" on an undefined value at /home/p6eval/jvm-rakudo/eval-client.pl line 32.␤»
