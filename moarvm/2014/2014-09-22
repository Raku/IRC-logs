[00:30] *** colomon joined
[01:07] *** FROGGS__ joined
[01:18] *** colomon joined
[02:20] *** diakopter left
[03:09] *** colomon joined
[06:24] <sergot> o/

[07:08] *** zakharyas joined
[07:12] *** brrt joined
[07:21] <brrt> timotimo: becauase mvmarray checks negative indices, array bounds, and a start index

[07:26] <brrt> the only thing i'd think of is proving bounds on the index

[07:31] *** FROGGS joined
[07:31] <timotimo> brrt: when we have an iterator, we know the indices cannot be negative

[07:32] <timotimo> as they start at 0 and only ever get incremented

[07:32] <timotimo> how's that? :)

[07:33] <brrt> that would be decent i think :-)

[07:49] *** brrt joined
[07:51] <brrt> but the special case  nature of it suggests special casing on iterators. hence, shift

[07:52] <timotimo> er ... yeah, that'? what i was suggesting to do

[07:52] <timotimo> well, i suggested to do it in spesh

[08:09] *** brrt joined
[08:37] *** kjs_ joined
[09:21] *** kjs_ joined
[09:50] *** kjs_ joined
[10:50] *** kjs_ joined
[11:03] *** leont joined
[11:33] *** camelia joined
[11:33] *** oetiker joined
[11:34] *** LLamaRider joined
[12:35] *** kjs_ joined
[12:35] *** ggoebel2 joined
[12:46] *** kjs_ joined
[13:46] *** JimmyZ joined
[13:53] *** kjs_ joined
[14:36] *** cognome joined
[14:55] *** brrt joined
[15:06] *** cognome joined
[15:40] *** kjs_ joined
[15:56] *** leont joined
[16:15] *** FROGGS joined
[16:15] <leont> According to Reini "parrot was destroyed by a different set of poisonous people. Now without them progress can continue, even of most of devs choose to switch to the new vm moar"…

[16:18] <FROGGS> hmmm, I only agree with parts of this sentence

[16:19] <FROGGS> might be just because I'm a newbie still

[17:15] *** FROGGS[mobile] joined
[17:31] <nwc10> apparently, I've retired. This is news to me. I just thought that I was very busy with real life (TM)

[17:32] <nwc10> it's amazing what you learn from the Internet

[17:47] <[Coke]> . ask diakopter - think I figured out the problem - can you up the swap space on host08 to match host07? (I can probably stumble my way through this if needed)

[17:47] <[Coke]> (the problem == things exploding when we have two big java things going on at the same time)

[17:48] <[Coke]> .ask diakopter - think I figured out the problem - can you up the swap space on host08 to match host07? (I can probably stumble my way through this if needed)

[17:48] <[Coke]> bah, wrong window.

[18:45] *** Ven joined
[18:54] *** kjs_ joined
[18:55] *** zakharyas joined
[19:14] *** brrt joined
[19:14] *** camelia joined
[19:17] *** kjs_ joined
[19:18] <brrt> leont: i don't think parrot was destroyed by poison though

[19:33] <japhb> Reference link?

[19:34] <nwc10> thread here, I think http://www.nntp.perl.org/group/perl.perl5.porters/2014/09/msg220297.html

[19:34] <nwc10> (not that message

[19:34] <nwc10> please note that all the archives I can find online seem to be a bit behind

[19:40] <japhb> Hrmm, yeah, I don't see the above quotes in that thread on www.nntp.perl.org, so I'll check back another time

[19:41] <nwc10> this is the only current archive I can find: https://groups.google.com/d/msg/perl.perl5.porters/-ASCEIPVgGU/Q8PS6pM2AakJ

[19:47] <japhb> Oh ouch, banned?

[19:49] <lizmat> yup

[19:49] <lizmat> for 1 month

[19:50] * japhb sighs at the whole oft-repeated cycle (not him in particular, I dunno, just ... among projects I have tracked at one time or another)

[20:01] <nine> Great way to "solve" disagreements. On both sides.

[20:29] <timotimo> i'm not sure i understand all of what brrt and jnthn discussed in #perl6 recently ...

[20:38] *** Ven joined
[20:43] *** beppu joined
[21:01] *** brrt joined
[21:10] <japhb> timotimo: What have they been discussing?

[21:17] <timotimo> optimization opportunities, changes to make MVMArray less dynamic/changable

[21:21] <brrt> timotimo: meaning? :-) i'm not sure i understand all either, but i'd like to hear

[21:21] <brrt> and discuss

[21:23] <brrt> basically, the way i get it, both jnthn and i would like much cheaper arrays

[21:23] <brrt> one reason for that would be that our string type could be implemented higher up

[21:23] <brrt> i may be hugely misrepresenting stuff right now and if so i apologise :-)

[21:30] <timotimo> ah

[21:30] <timotimo> well, the QPMC stuff, which is "we have a starting index which we'll shuffle around back to 0 only when we need more space", was a really gigantic improvement to lots of use cases

[21:32] *** kjs_ joined
[21:34] <brrt> qpmc?

[21:35] <timotimo> er

[21:36] <timotimo> QRPA

[21:36] <timotimo> sorry

[21:36] <timotimo> quantùm resizable power array

[21:45] <brrt> uhm

[21:45] <brrt> google doesn't know that acronym clearly

[21:46] <brrt> but i guess that's what we have now?

[21:47] <[Coke]> qast resizable pmc array.

[21:47] <timotimo> well, not "qast" i think

[21:47] <[Coke]> where pmc is "parrot magic cookie" or "native object in parrot"

[21:47] <[Coke]> but rpa stuck in some cases.

[21:48] <[Coke]> ah, whoops.

[21:49] <[Coke]> ETOOMANYQs.

[21:49] <timotimo> :)

[21:49] <[Coke]> 25c0b53 in nqp says "quicker"

[21:51] <brrt> oh i see

[21:52] <timotimo> Q is also "comes after P" often, like in QAST as the successor to PAST

[21:52] <brrt> but my suspicion was that resizable pmc array was sparse by default?

[21:53] <timotimo> hm, i'm not sure when having null slots in there happened

[21:54] <[Coke]> I don't remember parrot internals well enough to answer that.

[21:55] <japhb> [Coke]: I'd consider that a good thing, at this point.  (And frankly I'm in the same situation.)

[21:58] *** kjs_ joined
[22:02] *** FROGGS[mobile]2 joined
[22:05] * brrt afk

[22:05] *** brrt left
[22:15] *** leont joined
[22:31] *** leont joined
