[00:12] *** woolfy joined
[01:41] <dalek> MoarVM: 8fe2fdf | (Timo Paulssen)++ | tools/update_ops.p6:

[01:41] <dalek> MoarVM: p6 space may know about our flag constants

[01:41] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8fe2fdfc4c

[01:41] <dalek> MoarVM: 61cf617 | (Timo Paulssen)++ | tools/graph_spesh.p6:

[01:41] <dalek> MoarVM: version 1 of a speshlog-to-graphviz converter

[01:41] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/61cf61767b

[02:13] <japhb> timotimo: Do you have an example of the graphviz output?

[02:15] <japhb> Oh, I see it in #perl6, nevermind.  :-)

[02:27] *** xiaomiao joined
[02:37] <dalek> MoarVM: 3510467 | (Timo Paulssen)++ | tools/graph_spesh.p6:

[02:37] <dalek> MoarVM: graph data flow (partially, ignores extops)

[02:37] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/351046735a

[02:37] <timotimo> http://t.h8.lv/add_core_op_with_dataflow.svg

[02:38] <timotimo> japhb: feel free to praise appropriately

[02:45] <japhb> Heh

[02:45] <japhb> It's actually quite cool, very useful for microanalysis

[02:45] <japhb> (good visualizations)++

[02:45] <timotimo> thanks :)

[03:06] <dalek> MoarVM: eaa3d23 | (Timo Paulssen)++ | tools/graph_spesh.p6:

[03:06] <dalek> MoarVM: fix handling of extops in the most naive way

[03:06] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/eaa3d23ae9

[03:12] <dalek> MoarVM: d435796 | (Timo Paulssen)++ | tools/graph_spesh.p6:

[03:12] <dalek> MoarVM: handle partial pasted speshlog snippets, too

[03:12] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d435796222

[03:19] <dalek> MoarVM: 5831fc7 | (Timo Paulssen)++ | tools/graph_spesh.p6:

[03:19] <dalek> MoarVM: sanitize argument names (for angle brackets)

[03:19] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/5831fc7b32

[03:48] <timotimo> http://t.h8.lv/graph_of_gimme.svg  -  control flow jumps are dotted, set and decont have rounded corners now

[03:48] <dalek> MoarVM: 84fa2b9 | (Timo Paulssen)++ | tools/graph_spesh.p6:

[03:48] <dalek> MoarVM: control flow jumps are dotted, set/decont rounded

[03:48] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/84fa2b9869

[05:39] *** ggoebel111111112 joined
[08:26] *** FROGGS joined
[09:03] *** zakharyas joined
[09:47] *** kjs_ joined
[09:59] *** kjs_ joined
[10:36] *** xiaomiao joined
[11:11] *** kjs_ joined
[11:53] *** woolfy left
[12:07] *** brrt joined
[12:14] *** zakharyas joined
[12:15] *** kjs_ joined
[13:53] *** zakharyas joined
[14:16] *** zakharyas joined
[14:51] *** JimmyZ joined
[14:52] <JimmyZ> timotimo++ # it's really awesome!

[15:13] *** brrt joined
[15:32] <timotimo> thank you â™¥

[15:37] * JimmyZ looked at the 'constant folding' commit and doesn't know what' wrong it is too, it's hard

[15:37] <[Coke]> moar non jit failed a few more tests today: 32089 total.

[15:37] <[Coke]> (that's all of them)

[15:38] <brrt> is jnthn still on holiday?

[15:42] <timotimo> i think so

[15:42] <timotimo> he'll be pleasantly surprised at how we drove everything against the wall while he was away %)

[15:42] <brrt> :-)

[15:44] *** FROGGS[mobile] joined
[15:45] <[Coke]> from my standpoint, more like "into the wall"

[15:45] <[Coke]> :P

[15:46] <JimmyZ> Good night...

[15:47] * brrt will have to check that when he can access a mac again

[15:48] <[Coke]> Happy to provide diagnostics.

[16:01] <timotimo> i cannot reproduce the failures ;(

[16:02] <brrt> you have a mac timotimo?

[16:02] <brrt> i'm afraid to say it, but i fear something may be wrong with your build system [Coke]

[16:03] <brrt> all tests fail at once? that's just odd

[16:03] <timotimo> i don't

[16:06] <brrt> hmm

[16:07] <brrt> i cannot explain it currently. i'll be able to run a test monday at earliest

[16:07] * brrt afk

[16:10] *** brrt left
[16:15] <[Coke]> brrt: all tests fail today; over the past few weeks, I've been getting sporadic failures.

[16:17] <timotimo> S02-lexical-conventions/begin_end_pod.t............While looking for 'CORE.setting.moarvm': no such file or directory

[16:17] <timotimo> obviously, the build itself failed

[16:18] <[Coke]> sure. that has happened a few times in teh past week as well. smells like a GC bug.

[16:18] <[Coke]> trying a rebuild with latest-rakudo now.

[16:18] <timotimo> very strange.

[16:22] <[Coke]> the re-run is happier.

[16:48] <[Coke]> but still failed 521 tests.

[16:56] <timotimo> hum

[16:57] <[Coke]> S03-operators/subscript-adverbs.t S04-statement-modifiers/for.t S05-mass/named-chars.t S32-str/numeric.rakudo.moar

[16:57] <timotimo> i see the for.t failure locally, too

[17:06] <TimToady> that one is my "fault" :)

[17:06] <TimToady> shoudl be labeled with an RT, but I was too lazy to look

[17:07] <japhb> .oO( laziness with a lowercase 'l' )

[17:38] *** kjs_ joined
[18:09] *** FROGGS joined
[18:24] * [Coke] has a few minutes to try to debug some of these aborting tests.

[18:27] <[Coke]> rove -v -e t/fudgeandrun t/spec/S03-operators/subscript-adverbs.t # malloc, pointer being freed was not allocated

[18:27] <[Coke]> but: ./perl6 t/spec/S03-operators/subscript-adverbs.t # no errors.

[18:29] * TimToady was trying for far too long to figure out what the "rove" command does :)

[18:30] * TimToady goes to get more coffee...

[18:30] <[Coke]> :)

[18:32] <[Coke]> also, my ./perl6 is:

[18:33] <[Coke]> #!/usr/bin/env perl

[18:33] <[Coke]> exec "ulimit -t 120; ulimit -v 10; ulimit -c 0; nice -20 valgrind ./perl6-m @ARGV"

[18:35] <TimToady> that's OSX malloc?

[18:37] <FROGGS> btw, this script that uses DBIish fails on ubuntu when run under cron: https://github.com/perl6/cpandatesters.perl6.org/blob/master/jobs/calc-stats.pl

[18:37] <FROGGS> something about invalid target thread id in work pass or so

[18:38] <TimToady> cron tends to be impoverished in env vars

[18:38] <FROGGS> that what I am going to debug today

[18:38] <TimToady> not to mention terminals :)

[18:38] <FROGGS> but it should fail at a higher level at least

[18:38] <TimToady> so I'd guess it's one or the other of those triggering it

[18:38] <FROGGS> yeah, we'll see

[18:39] *** kjs_ joined
[18:39] <TimToady> though maybe it's related to the thread problems that seem to be more prevalent in child processes

[18:56] <[Coke]> TimToady: I'm on OSx. I don't know if it's osx or moar

[18:57] <TimToady> I think we've only seen that error on OSx, but maybe that's just because it's checking...

[19:02] <timotimo> [Coke]: can you build a moar with asan perhaps?

[19:06] *** kjs_ joined
[19:27] <[Coke]> timotimo: if someone pointed me at how, sure. :)

[19:29] <timotimo> perl Configure.pl --asan in moarvm

[19:29] <timotimo> may need to install the asan development package, but it should come with clang itself

[19:30] <[Coke]> looks like moar uses it by default if you build with clang, but not with gcc? (but on the mac, those are the same thing, I think)

[19:31] <timotimo> what? asan by default?

[19:31] <timotimo> that sounds crazy

[19:31] <[Coke]> still no way to pass moarvm config flags down from rakudo through nqp, right?

[19:32] <timotimo> not 100% sure, i think there's --moar-option in nqp at the very least

[19:32] <[Coke]> timotimo: look at MoarVM/build/setup.pm for sanitize

[19:32] <[Coke]> moarvm doesn't create a "config.status" when you config it. :(

[19:32] <TimToady> no, it doesn't :(

[19:33] <timotimo> ... wtf? why would -fsanitize=address be on by default?

[19:33] <TimToady> so don't forget to set prefix

[19:33] <timotimo> that's a crazy performance penalty

[19:34] <[Coke]> timotimo: clang: error: unsupported argument 'address' to option 'fsanitize='

[19:34] <timotimo> clang too old? asan has been built-in to clang for a *long* time now

[19:34] <[Coke]> so this will take a while to enable.

[19:34] <[Coke]> Apple LLVM version 6.0 (clang-600.0.54) (based on LLVM 3.5svn)

[19:35] <timotimo> AddressSanitizer is fully functional on supported platforms starting from LLVM 3.1.

[19:35] <FROGGS> lizmat had that problem too

[19:36] <[Coke]> note that my current issues are on a nojit build. perhaps since that's not the default, people aren't seeing that on their platforms.

[19:36] <[Coke]> seems like we could do a nojit asan build elsewhere and maybe get an explosion.

[19:38] *** kjs_ joined
[19:47] * TimToady wonders about the line in alloc.h that says:     if (!ptr && size > 0)

[19:47] <TimToady> and whether we're doing a realloc to size 0 somewhere that is assuming the pointer will be valid afterwards

[19:56] <TimToady> for sure it fails if you take out the "&& size > 0", so there are things reallocing to 0

[19:56] <TimToady> so MVM_realloc can return unchecked null pointers

[19:58] <[Coke]> looks like mac needs a slightly different clang invocation

[19:58] <[Coke]> testing...

[20:20] <dalek> MoarVM: bc1c0b9 | (Timo Paulssen)++ | tools/graph_spesh.p6:

[20:20] <dalek> MoarVM: also show annotations in the control flow

[20:20] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/bc1c0b9911

[20:25] <[Coke]> running one of those failing tests through an osx asanified build does nothing.

[20:26] <[Coke]> if I use the prove invocation, I get the same malloc error, but no new output

[20:27] <TimToady> would be funny if it were in the prove program, not in moar...

[20:32] <timotimo> o_O

[20:40] *** kjs_ joined
[20:42] <TimToady> there appears to be an unchecked malloc at ./3rdparty/libuv/src/unix/darwin.c line 80

[20:51] <TimToady> there are a lot of places in libuv that return -ENOMEM; gonna be a bear to eyeball all the uses of those to see if anyone ignores the error

[20:58] <TimToady> ./3rdparty/libuv/src/unix/proctitle.c line 58 is weird, if the malloc fails, returns argv, which is maybe not from malloc

[21:03] <TimToady> otoh, can't just be an unchecked malloc, since that would return NULL, which would not complain when freed like that

[21:20] *** kjs_ joined
[21:22] <FROGGS> timotimo: you probably broke it on windows: https://gist.github.com/FROGGS/bad02c1269672397b639

[21:23] *** Ven joined
[22:30] <timotimo> oh wow

[22:30] <timotimo> i'm sorry about that

[22:32] <FROGGS> that might be even easier to fix than the IO::Path problems :S

[22:32] <dalek> MoarVM: eba41f9 | (Timo Paulssen)++ | src/spesh/args.c:

[22:32] <dalek> MoarVM: fix Microsoft Visual C compliance

[22:32] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/eba41f9594

[22:32] <timotimo> FROGGS: that should fix it?

[22:33] *** kjs_ joined
[22:33] <timotimo> i don't know of any IO::Path related problems

[22:34] <FROGGS> $*CWD and dir() return paths containing backslashes, but rakudo can't handle backslashes anymore

[22:34] <timotimo> oh

[22:44] <FROGGS> timotimo: aye, moarvm compiled fine again

[23:00] <timotimo> thanks

[23:00] <timotimo> still can't get used to that limitation

[23:00] <timotimo> we may really want to set -Wpedantic or what it's called on gcc

[23:08] *** FROGGS joined
[23:34] *** FROGGS joined
[23:39] *** xiaomiao joined
[23:47] *** FROGGS joined
[23:54] *** woolfy joined
[23:58] *** lizmat joined
[23:59] *** FROGGS joined
