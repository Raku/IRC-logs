[00:09] <retupmoca> should a parameterized role be repossessed like it's generic?

[00:10] <retupmoca> except that would mean it doesn't exist anywhere after serialization...

[00:10] <retupmoca> does each SC need it's own copy of a parameterized role?

[00:21] <retupmoca> unless it's just the generic role itself having issues...

[05:18] *** ashleydev joined
[05:18] *** Util joined
[05:18] *** tadzik joined
[05:18] *** JimmyZ joined
[05:18] *** odc joined
[05:18] *** lue joined
[05:18] *** camelia joined
[05:18] *** lizmat joined
[05:18] *** brother joined
[05:18] *** ggoebel11119 joined
[05:18] *** rurban_ joined
[05:18] *** daxim_ joined
[05:18] *** flussence joined
[05:18] *** TimToady joined
[05:18] *** eternaleye joined
[05:18] *** woolfy joined
[05:18] *** FROGGS joined
[05:18] *** cognominal joined
[05:18] *** cxreg joined
[05:18] *** dagurval_ joined
[05:18] *** avar joined
[05:18] *** ingy joined
[05:18] *** moritz joined
[05:18] *** BinGOs joined
[05:19] *** bcode joined
[05:19] *** timotimo joined
[05:19] *** _sri joined
[05:19] *** jnthn joined
[05:19] *** sergot joined
[05:19] *** yawnt joined
[05:19] *** dalek joined
[05:19] *** lee_ joined
[05:19] *** tokuhirom joined
[05:30] *** synopsebot joined
[05:31] *** xiaomiao joined
[05:38] *** xiaomiao joined
[05:50] *** Ven_ joined
[05:55] *** harrow joined
[07:18] *** ChanServ joined
[07:37] *** xiaomiao joined
[09:19] *** ChanServ joined
[09:19] *** synopsebot joined
[10:50] *** FROGGS[mobile] joined
[11:49] *** colomon joined
[12:36] <dalek> MoarVM: 4f73c4b | (Steve Mynott)++ | src/platform/threads.h:

[12:36] <dalek> MoarVM: add sched_yield for NetBSD

[12:36] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/4f73c4b228

[12:36] <dalek> MoarVM: 2055a67 | jonathan++ | src/platform/threads.h:

[12:36] <dalek> MoarVM: Merge pull request #91 from stmuk/master

[12:36] <dalek> MoarVM:

[12:36] <dalek> MoarVM: add sched_yield for NetBSD

[12:36] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2055a6724e

[12:41] *** zakharyas joined
[13:38] <dalek> MoarVM: 161a98b | jnthn++ | src/core/frame.c:

[13:38] <dalek> MoarVM: Fix callsite size calculation in tweak_cs.

[13:38] <dalek> MoarVM:

[13:38] <dalek> MoarVM: Avoids trying to access memory beyond its allocated boundary. Found by

[13:38] <dalek> MoarVM: nwc10++ using ASAN/Valgrind.

[13:38] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/161a98bcf1

[15:00] *** hoelzro joined
[15:06] *** FROGGS joined
[15:28] *** colomon joined
[15:32] <tadzik> mm, beer

[15:32] <jnthn> tadzik: IPA again? :)

[15:33] <tadzik> today it's Dark Lager

[15:33] <tadzik> I'm curious what it is

[15:33] <tadzik> it's from the creators of "The Empire Strikes", and it's named "Black Hole"

[15:33] <jnthn> ooh :)

[15:34] <tadzik> ooh, it is good :}

[15:34] <tadzik> next time we meet I'll bring a backpackfull of those

[15:35] <jnthn> :D

[15:35] <jnthn> I'm on the way to Stockholm and found a place last time with a very, very nice Swedish imperial IPA on tap

[15:37] <jnthn> it's 9% or so :) But I might take one tonight :)

[15:38] <tadzik> this one is 11.5

[15:38] <tadzik> I didn't notice until I checked

[15:38] <tadzik> ah, no

[15:38] <tadzik> actually 4.2

[15:38] <tadzik> the weight vs volume trick

[15:38] <jnthn> ...small difference :P

[15:39] <tadzik> oh, the bottle even recommends a particular flavor of glass

[15:39] <tadzik> and recommended food

[15:39] <tadzik> how fancy :)

[15:41] <jnthn> tadzik: If you can hunt it down, http://www.ratebeer.com/beer/great-divide-espresso-oak-aged-yeti-imperial-stout/85174/ comes highly recomended.

[15:42] <tadzik> oooh, the Warsaw Beer Track has some new points on it

[15:43] <tadzik> jnthn: I'll look around for it :)

[16:40] *** colomon joined
[16:48] *** retupmoca joined
[17:06] <nwc10> jnthn: works on "my" machine

[17:06] <jnthn> nwc10: Gets rid of ASAN fail?

[17:06] <nwc10> that one, yes

[17:06] <nwc10> need this for the second: http://paste.scsys.co.uk/348393

[17:07] <nwc10> to fix the naughtiness of

[17:07] <nwc10> m: "\x1F63E".encode("UTF-16")

[17:07] <camelia> rakudo-moar 3e1f32: ( no output )

[17:08] *** japhb joined
[17:25] <dalek> MoarVM: 551786d | nicholas++ | src/strings/utf16.c:

[17:25] <dalek> MoarVM: Fix buffer overflow in UTF-16 encoding.

[17:25] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/551786d4be

[17:50] *** colomon joined
[17:53] <nwc10> jnthn: the final thing that ASAN is unhappy about, also spotted by valgrind: http://paste.scsys.co.uk/348420

[17:54] *** btyler joined
[18:32] <nwc10> jnthn: valgrind also complains (plus fix): http://paste.scsys.co.uk/348444

[18:32] <nwc10> jnthn: however, there are other places that assign has_flattening but don't (yet) assign is_interned

[18:34] <jnthn> ah, yes...that really needs to be zero

[18:35] <jnthn> And may explain some of the intermittent bugs folks hvae been seeing with spesh enabled

[18:35] <nwc10> yes, I did wonder that

[18:35] <nwc10> as in, if that's garbage but true, it enters the block incorrectly

[18:36] <jnthn> right

[18:39] <jnthn> nwc10: Just made a pass through all the places where has_flattening is set, and is_interned is not, and reviewed them.

[18:39] <nwc10> I found the right by trial and error

[18:39] <nwc10> tried two other places, no change from valgrind

[18:40] <nwc10> and I don't know anything near enough to make the right choice

[18:45] <dalek> MoarVM: fd4cb89 | jonathan++ | src/core/ (4 files):

[18:45] <dalek> MoarVM: Make sure is_interned is zeroed as needed.

[18:45] <dalek> MoarVM:

[18:45] <dalek> MoarVM: Patch partially thanks to nwc10++ (the args.c case), who also found

[18:45] <dalek> MoarVM: the general issue. Other 3 changes are other places vulnerable to the

[18:45] <dalek> MoarVM: same kind of bug.

[18:45] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fd4cb89c69

[18:48] <japhb> At this point, are the known r-m segfaults and ASAN/valgrind complaints all dealt with?

[18:50] <nwc10> not the crazy threading one in ttp://paste.scsys.co.uk/348420

[18:53] *** colomon joined
[19:27] *** zakharyas joined
[19:52] <nwc10> jnthn: yes, works on "my" machine apart from that threading test

[20:33] <timotimo> jnthn: should i count the nameds against the intern arity limit, too?

[20:47] <jnthn> timotimo: um...hmm

[20:47] <jnthn> timotimo: probably

[20:49] <timotimo> now i get a strange error. probably because i have some parts implemented, but not most of them :)

[20:52] <jnthn> hah, yes :)

[20:52] <jnthn> nwc10: OK. That one's on my todo list then :)

[20:53] <timotimo> merge conflicts :\

[21:00] <dalek> Heuristic branch merge: pushed 18 commits to MoarVM/named_to_positional by timo

[21:15] * jnthn writed some feedback on https://github.com/MoarVM/MoarVM/pull/89

[21:25] <timotimo> jnthn: what's the direct consequence of me starting to intern callsites that have nameds?

[21:25] <jnthn> timotimo: the is_interned check in frame.c that guards trying spesh will be true

[21:26] <jnthn> timotimo: And then you'll hit args.c, which assumes it's never getting a callsite with nameds.

[21:26] <jnthn> And then drunk unicorns will fly out of the screen.

[21:27] *** brrt joined
[21:28] <jnthn> o/ brrt

[21:31] <timotimo> ah, yes

[21:32] <brrt> hi jnthn, timotimo

[21:32] <brrt> good afternoon :-)

[21:32] <timotimo> hi :)

[21:34] <timotimo> This type does not support positional operations

[21:34] <timotimo> hmm

[21:34] <jnthn> tbh, if I was a drunk unicorn I'd probably say that too... :P

[21:35] <jnthn> It probably means you've a P6opaque somewhere a VMArray is expected.

[21:35] <timotimo> in MVM_interp_run, can i easily tell whether i'm in specialized bytecode or not?

[21:35] <jnthn> yes.

[21:35] <brrt> how so?

[21:35] <jnthn> Look at tc->cur_frame->effective_bytecode

[21:35] <jnthn> And see if it's the same as tc->cur_frame->static_info->body.bytecode

[21:36] <jnthn> If they're different you're in specialized bytecode.

[21:36] <timotimo> tanks

[21:36] <jnthn> bombs

[21:37] * jnthn ponders if his plan for nqp::timer will work out on JVM

[21:37] <timotimo> er, huh

[21:37] <timotimo> (gdb) print tc->cur_frame->static_info->body.bytecode

[21:37] <timotimo> $4 = (MVMuint8 *) 0x7ff96c2ad6ee <Address 0x7ff96c2ad6ee out of bounds>

[21:37] <timotimo> but they are the same pointer

[21:38] <jnthn> huh indeed

[21:39] <jnthn> if they're the same then you're running the original bytecode.

[21:39] <timotimo> maybe i'm breaking inside a frame that got called from spesh'd bytecode

[21:39] <timotimo> oh well. i'll have a look at spesh/args.c and see what i can do

[21:39] <jnthn> That's possible.

[21:39] <jnthn> Well, you can look at caller

[21:40] <jnthn> Also you can set MVM_SPESH_DISABLE=1 and see if your problem goes away

[21:40] <jnthn> If it does, then I'd probably get a working Moar, get the spesh log, then get your changed Moar, get its spesh log, and diff.

[21:40] <jnthn> Because in theory nothing shoulda changed.

[21:42] <timotimo> right

[21:43] <timotimo> it still segfaults even with DISABELE=1

[21:44] <jnthn> did you spell DISABLE right in trying it?

[21:44] <brrt> (bloody legacy x86 registers)

[21:44] <timotimo> MVM_SPESH_DISABLE=1

[21:44] <jnthn> right

[21:44] <jnthn> So the breakage is nothing to do with spesh.

[21:44] <timotimo> the error happens in MVM_string_equal called from MVM_args_get_named_obj

[21:45] <timotimo> it's trying to find the string "inheritable" in the args

[21:49] <brrt> (good luck folks, i'm going to sleep again :-))

[21:49] *** brrt left
[22:11] <timotimo> well, when i don't intern callsites that don't have nameds, it still works. so ...

[22:11] <timotimo> i'll continue thinking about this later. tomorrow or so.

[22:11] <jnthn> ok :)

[22:11] <jnthn> No hurry :)

[22:12] * jnthn is currently tied up pondering timers :)

[22:37] *** colomon joined
[22:59] *** colomon joined
