[00:39] *** rurban joined
[00:48] *** ventica joined
[01:12] *** FROGGS_ joined
[01:57] <ventica_desktop> OK... rakudo cloned, built with MoarVM backend, perl6 works at the command-line... (pause for applause) now, how do I check out the MoarVM test suite?

[02:10] *** cognome joined
[02:29] *** jimmyz joined
[02:30] <jimmyz> ventica_desktop: MoarVM doesn't have test yet, there is a Perl 6 one https://github.com/perl6/roast/

[05:10] *** bcode joined
[05:14] *** lue joined
[06:28] <sergot> o/

[06:44] *** zakharyas joined
[06:53] *** lizmat joined
[07:00] *** woolfy joined
[07:14] *** Ven joined
[07:46] *** woolfy joined
[08:56] <masak> \o

[08:57] <jnthn> o/

[09:00] *** lizmat joined
[09:00] <nwc10> \o/ \o/ \o/

[09:35] <FROGGS_> ventica_desktop: you can also run nqp's test suite, this is the first thing one can check if MoarVM fundamentals got changed

[10:39] <masak> <lizmat> what would be the best way to fix this?

[10:40] <masak> can we patch upstream (dyncall)?

[10:40] <masak> can we send a pull request?

[10:40] <masak> can we apply a patch on our side while we wait for their side to fix it?

[10:49] *** brrt joined
[10:49] <brrt> \o #moarvm

[10:50] <brrt> jnthn: thanks for looking into it. i /really/ suspect that this is a call-convention issue (i.e., i borked something when i updated the posix version)

[10:50] <brrt> and that would (or could) explain why bogus stuff is stuffed everywhere

[10:53] <brrt> also, i've figured that microsoft lets you borrow VM's (modern.ie), so I've got one now

[11:01] <brrt> whcih works better than my 'real' installation, it seems

[12:19] *** jnap joined
[12:26] *** jnap joined
[13:33] *** FROGGS[mobile] joined
[13:54] *** btyler joined
[14:15] *** dalek joined
[14:22] *** ggoebel111116 joined
[14:46] *** jnap1 joined
[15:17] *** brrt joined
[15:19] *** btyler__ joined
[15:37] <japhb> .oO( MoarVM running as an ActiveX control )

[16:03] *** cognome joined
[16:24] *** cognominal joined
[16:24] *** cognome joined
[16:33] <ventica> FROGGS: Is it a separate step to clone nqp test suite? I don't see any nqp tests under t/

[16:34] <timotimo> ventica: these tests are in the nqp repository under t/

[16:35] <timotimo> just think of NQP as a separate language that's meant to be used for creating language compilers and happens to be the one we're using for rakudo

[16:35] <timotimo> see also examples/rubyish

[16:41] <ventica> ok

[16:42] <timotimo> well, that's not exactly a helpful explanation, i suppose

[16:44] <ventica> jnthn had told me I shud run t/spec/S32-io/IO-Socket-Async.t to exercise the async socket I/O but I don't see any of those folders under t/

[16:44] <timotimo> ah

[16:44] <timotimo> well, that's in the rakudo spectests :)

[16:45] <timotimo> inside the *rakudo* repository, if you "make spectest-checkout"

[16:45] <ventica> hmm, i see

[16:45] <timotimo> (the repo itself is github: perl6/roast)

[16:47] <ventica_desktop> rakudo$ make spectest-checkout

[16:47] <ventica_desktop> make: *** No rule to make target `spectest-checkout'.  Stop.

[16:50] <timotimo> oh?

[16:50] <timotimo> ah

[16:50] <timotimo> spectest_checkut

[16:50] <timotimo> damnit :)

[16:50] <timotimo> spectest_checkout

[17:02] *** zakharyas joined
[17:48] *** lizmat joined
[18:00] *** lizmat joined
[18:01] *** woolfy joined
[18:01] *** woolfy left
[18:04] *** btyler joined
[18:16] *** woolfy joined
[18:18] *** jnap joined
[18:22] *** vendethiel joined
[18:23] *** Ven joined
[18:54] <ventica_desktop> ah, underscore to the rescue...

[18:55] <ventica_desktop> rakudo$ ls t/spec/S32-io/IO-Socket-Async.t

[18:55] <ventica_desktop> t/spec/S32-io/IO-Socket-Async.t

[18:55] <ventica_desktop> nice

[18:57] <FROGGS_> yeah, that tests fails different tests from time to time for some reason

[18:58] <ventica_desktop> rakudo$ ./perl6 t/spec/S32-io/IO-Socket-Async.t

[18:58] <ventica_desktop> ===SORRY!===

[18:58] <ventica_desktop> Could not find Test in any of: ., blib, /home/claytonkb/rakudo/rakudo/install/languages/perl6/lib, /home/claytonkb/rakudo/rakudo/install/languages/nqp/lib

[18:59] <ventica_desktop> 8|

[19:01] *** woolfy left
[19:01] <jnthn> -Ilib

[19:08] <FROGGS_> either that or install rakudo and use the perl6 or perl6-m that got installed (expand your PATH)

[19:14] <ventica_desktop> rakudo$ ./perl6 -Ilib t/spec/S32-io/IO-Socket-Async.t

[19:14] <ventica_desktop> 1..6

[19:14] <ventica_desktop> ok 1 - Async listen on bogus hostname

[19:14] <ventica_desktop> ok 2 - Async connect to unavailable server breaks promise

[19:14] <ventica_desktop> ok 3 - Async connect to available server keeps promise

[19:14] <ventica_desktop> ok 4 - Echo server

[19:14] <ventica_desktop> ok 5 - Discard server

[19:14] <ventica_desktop> ok 6 - bytes_supply

[19:16] <ventica_desktop> so looks like test 1..6 are passing on my machine

[19:18] <FROGGS_> four and six fail sometimes on my box

[19:19] <FROGGS_> maybe only under load, like when running the spectest suite with TEST_JOBS=4

[19:20] *** Ven joined
[19:20] <jnthn> Yeah, there's some race in there, I fear...

[19:24] *** brrt joined
[19:29] * brrt just figured out the IE VMs are 32 bit...

[19:32] <brrt> anyway, i think i've the solution to moar-jits windows worries

[19:33] <brrt> basically, windows likes 4 arguments in registes, and 4 on the stack, right?

[19:33] <brrt> eh i mean the rest on the stack

[19:33] <brrt> posix likes 6 integer arguments in registers, 8 floating point arguments in SSE registers, and the rest on the stack

[19:33] *** Ven joined
[19:34] <brrt> most functions i call have fewer than 4 arguments, some have 5 or 6, and i know of only one that has 7 arguments (all integer /pointer)

[19:34] <brrt> well, when i put an argument on the stack, i do so by simply pushing a 64 bit quadword from a register to the stack

[19:35] <brrt> but that means that an argument that is expected to be 32 bits wide takes up 64 bits

[19:36] <jnthn> ahh

[19:37] <jnthn> I did wonder if it could be ABI related

[19:38] <brrt> and since there is only one function that takes 7 arguments (and there are no more), and since this is a simple boolean, this problem doesn't show on posix

[19:38] <brrt> it had to be ABI related :-) there's no difference anywhere else

[19:39] <brrt> fixing will take up a bit of work, though

[19:39] * brrt afk

[20:26] *** itz_ joined
[20:32] *** itz joined
[20:52] *** ggoebel111116 joined
[21:41] *** brrt joined
[22:27] *** ventica joined
[22:28] *** ventica_desktop joined
[23:14] *** cognome joined
[23:14] *** cognominal joined
[23:14] *** cognome joined
[23:24] *** ggoebel111116 joined
[23:40] *** itz_ joined
