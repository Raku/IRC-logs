[01:14] *** btyler joined
[01:57] * _sri wonders if Supply should really be called Observable

[01:59] <timotimo> well, there's a dualism between observables and iterators and the whole reactive programming thing

[01:59] <timotimo> jnthn has pointed it out multiple times in the past

[02:00] <timotimo> so the decision to name the thingies supplies was deliberate with that in mind, i believe

[02:00] <_sri> i see

[02:32] <japhb> .ask FROGGS re: 4a6dac6 and following, why did you write the function in tail-recursive form rather than simple iteration?

[02:32] <japhb> Gah, ENOBOT

[03:40] *** cxreg joined
[05:06] *** woosley joined
[05:11] *** woosley joined
[05:20] *** woosley joined
[05:52] *** btyler joined
[06:59] *** FROGGS joined
[07:05] *** zakharyas joined
[07:51] <jnthn> Yeah, Rx calls it an observable, for sure. But just because things have a certain name elsewhere doens't mean they'll end up with that name in Perl 6.

[07:53] *** btyler joined
[09:36] *** donaldh joined
[10:08] *** dalek joined
[10:53] *** eternaleye joined
[13:48] *** btyler joined
[14:24] *** donaldh joined
[14:25] *** benabik joined
[14:40] <timotimo> jnthn: should i expect there to ever be a way to introduce new registers to specialized bytecode segments?

[14:40] *** cognominal joined
[14:40] <timotimo> and would it make a difference if the code would have to promise that new registers would never "leak" into the rest of the bytecode?

[15:07] *** FROGGS joined
[15:10] <FROGGS> m: say <body><blink>WAT</blink></body>

[15:10] <camelia> rakudo-moar d2dfb6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/EJC_mX9xS0␤Two terms in a row␤at /tmp/EJC_mX9xS0:1␤------> [32msay <body><blink>[33m⏏[31mWAT</blink></body>[0m␤    expecting any of:␤        postfix␤        infix stopper␤       …»

[15:10] <synopsebot> Link: http://perlcabal.org/syn/S0.html#line_1

[15:11] <tadzik> confused synopsebot

[15:11] <timotimo> %)

[15:13] <timotimo> jnthn: also, do you think it'd be worth something to teach spesh, that the boxing instructions return an instance of the type object they get passed?

[16:08] <timotimo> i wonder if link time optimization (which has been dramatically improved compilation-performance-wise in the newest gcc) will give us a lot of benefits for moarvm

[16:10] <timotimo> sadly, fedora doesn't have gcc 4.9 yet

[16:12] <timotimo> ah, it'll probably only go in rawhide, if even.

[16:13] *** btyler joined
[16:40] *** [Coke] joined
[16:40] <[Coke]> ... Hey, everybody. Forgot I wasn't here.

[17:18] *** brrt joined
[17:20] <FROGGS> hi [Coke]

[18:03] *** benabik joined
[19:49] <timotimo> o/

[22:20] *** d4l3k_ joined
[23:51] *** benabik joined
[23:52] *** synopsebot joined
[23:52] *** Util joined
[23:52] *** [Coke] joined
