[00:45] *** cognome joined
[00:48] *** cognome joined
[01:19] *** FROGGS_ joined
[01:45] *** cognome joined
[02:45] *** cognome joined
[03:45] *** cognome joined
[04:45] *** cognome joined
[05:37] *** FROGGS_ joined
[05:45] *** cognome joined
[05:55] *** FROGGS_ joined
[06:38] *** FROGGS joined
[06:45] *** cognome joined
[06:56] *** camelia joined
[07:10] *** zakharyas joined
[07:28] *** camelia joined
[07:45] *** cognome joined
[08:04] *** kjs_ joined
[08:45] *** cognome joined
[08:58] *** FROGGS joined
[09:30] *** camelia joined
[09:45] *** cognome joined
[09:48] *** ggoebel1111119 joined
[10:03] *** JimmyZ joined
[10:07] *** JimmyZ_ joined
[10:09] *** JimmyZ__ joined
[10:23] *** cognome joined
[10:33] *** JimmyZ_ joined
[10:34] *** JimmyZ__ joined
[10:50] *** cognome joined
[11:05] *** cognome joined
[11:48] *** kjs_ joined
[12:10] *** brrt joined
[13:03] *** JimmyZ joined
[13:09] *** LLamaRider joined
[13:27] *** JimmyZ_ joined
[13:51] *** kjs_ joined
[13:57] *** JimmyZ joined
[14:44] <hoelzro> jnthn: I don't know how much time you have for Perl 6 right now, but I found a moar bug and I was hoping you could perhaps point me in the right direction as to how to fix it

[14:44] <hoelzro> the bug is here: https://rt.perl.org/Ticket/Display.html?id=122773

[14:44] <hoelzro> and the offending commit is 7a722dc4018ce1b99bbd4abea198e242d7da0157

[14:44] <hoelzro> (if you have time, of course)

[14:45] <timotimo> jnthn: could you or masak give instructions on what exactly the escape analysis annotations mean and maybe i'll be able to annotate some more ops?

[14:45] <jnthn> hoelzro: Quite time-constrained at the moment...

[14:45] <timotimo> so that you can get started doing the actual escape analysis code instead of slogging over the opcode annotations?

[14:45] <hoelzro> ok, don't worry about it =)

[14:45] <jnthn> timotimo: I'd not spend itme on that so far, we're not convinced we have the API right yet.

[14:46] <timotimo> OK

[14:46] <jnthn> We've been discussing algorithm stuff around it over dinner a few times :)

[14:46] <timotimo> good to hear :)

[14:47] <timotimo> i'm also wondering if removing boxing/unboxing redundancies is even possible before escape analysis exists

[14:47] <timotimo> and if so: how to handle the relevant data

[14:48] <timotimo> i suppose we could have known type + type == Int box type, but we don't store anything like "the instruction that boxes the value" or "the register and version the datum comes from"

[14:48] <timotimo> (and in addition, i haven't actually identified any actual example code where it would make a noticable difference to throw out boxing/unboxing)

[15:00] *** woolfy1 left
[15:02] *** woolfy joined
[15:24] *** flussence joined
[15:25] *** flussence joined
[15:25] *** flussence joined
[15:55] *** FROGGS joined
[16:58] *** vendethiel joined
[18:03] *** Ven joined
[18:53] *** zakharyas joined
[19:02] *** brrt joined
[19:03] <brrt> \o

[19:03] <brrt> timotimo: dunno if you were talking about it, but it doesn't seem to me that the right place for escape analysis is moar

[19:04] <timotimo> oh?

[19:04] *** Ven joined
[19:04] <brrt> moar basically only has a linear sequence of register ops

[19:04] <brrt> nqp / perl6 compilers have a whole tree

[19:05] <timotimo> masak and jnthn are planning to implement it based on the ops

[19:05] <brrt> welll

[19:05] <brrt> masak and jnthn are both much smarter in this regard, so they're probably right :-)

[19:06] <timotimo> hehe :)

[19:07] <timotimo> well, the tree can still have some transformations applied to them

[19:07] <timotimo> and we may also only want to subject hot code to this analysis

[19:07] <timotimo> depending on how much work it is

[19:12] * brrt wonders if we can get moarvm to run on minix

[19:12] <timotimo> that'll help us get mad street cred

[19:14] <brrt> i say

[19:17] <timotimo> i'm now almost sure i'll go to the APW :)

[19:17] <timotimo> how do you feel about that?

[19:18] <FROGGS> +1 from me

[19:18] <FROGGS> :o)

[19:18] <brrt> you should do that

[19:29] <brrt> multiboot has gotten so uninteresting since virtualisation

[19:32] *** camelia joined
[19:32] <brrt> i can't imagine going through the trouble of setting it up again

[19:42] *** ggoebel11111110 joined
[19:50] <brrt> ugh... i'm actually forced to compile moarvm with clang

[19:53] <brrt> ain't that an epic fail

[19:53] <brrt> libuv doesn't seem to support minix

[19:54] <brrt> wait, it's prettier than that

[19:54] <brrt> i can't checkout libuv because minix-git doesn't know how to deal with https urls

[19:55] <TimToady> .oO(the course of true minimalism never did run smooth)

[19:56] <brrt> i'm guessing nobody's been dogfooding minix

[19:56] <TimToady> obviously something named "moar" is against the spirit of something named "minix" :)

[19:56] <TimToady> was minix ever more than a toy?

[19:58] <brrt> it's burned over 2,5 million euros of EU grant money over the past 5 years

[19:59] <FROGGS> so it is a toy with bling bling now? :o)

[19:59] <TimToady> that's chump change compared to the investment in linux

[20:05] <brrt> maybe so

[20:07] *** camelia joined
[20:36] *** cognome_ joined
[20:36] *** ggoebel11111110 joined
[21:26] * [Coke] wishes perl6 could get some of that money. :P

[21:29] <FROGGS> I would whish parrot and jvm wouldn't be that damn slow

[21:29] <FROGGS> I would clearly suffer less

[23:05] *** cognome joined
