[01:51] <JimmyZ> timotimo: I didn't...

[02:34] <timotimo> that's okay

[02:34] *** FROGGS_ joined
[03:08] *** eternaleye joined
[05:12] *** lizmat joined
[08:35] *** brrt joined
[08:54] *** woolfy left
[09:02] <brrt> jnthn - if present - I'd really like to see your plans / code on bytecode specialisation

[09:02] <brrt> it owuld be much awesome if we / i could get a running start on the JIT compiler

[09:03] <brrt> would

[10:36] *** colomon joined
[11:46] *** colomon joined
[12:49] *** colomon joined
[13:54] *** zakharyas joined
[14:17] <dalek> MoarVM: cd19a1e | jimmy++ | src/6model/reprs/ (4 files):

[14:17] <dalek> MoarVM: Clean up more static allocate functions in REPRs

[14:17] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/cd19a1e8a4

[15:37] *** lizmat joined
[15:48] *** brrt joined
[15:54] *** lizmat joined
[16:07] *** lizmat_ joined
[16:08] *** woolfy joined
[16:33] *** lizmat joined
[17:56] *** woolfy left
[18:36] *** colomon joined
[20:24] *** benabik joined
[20:32] <jnthn> .tell brrt I'm on target to have the initial code available on Tuesday

[20:33] <jnthn> bah, no message bot here

[20:50] *** dalek joined
[20:56] *** benabik joined
[21:03] *** colomon joined
[22:40] *** colomon joined
[23:00] *** lizmat joined
[23:02] <jnthn> If anybody here is got at carefully reading code and placing locks, lemme know.

[23:04] <timotimo> oh shit :)

[23:05] <jnthn> Well, I've a concrete task, but it's one where if it's screwed up we'll get deadlocks.

[23:05] <timotimo> this is inside moarvm, aye?

[23:05] <jnthn> yeah

[23:05] <jnthn> There's some palces the VM ain't threadsafe yet

[23:05] <jnthn> IO is one of them.

[23:05] <jnthn> I've just sorta done it (hurriedly) for syncstream, but it really needs a careful analysis.

[23:06] <jnthn> Like, what if the decoders throw, etc.

[23:06] <jnthn> We may need a "release stack"

[23:06] <jnthn> Just like temproots are tossed in the event of an exception.

[23:12] <dalek> MoarVM: fe0962f | jnthn++ | src/6model/reprs/MVMOSHandle. (2 files):

[23:12] <dalek> MoarVM: Give MVMOSHandle a mutex slot.

[23:12] <dalek> MoarVM:

[23:12] <dalek> MoarVM: We need to protect the various IO handles from multiple threads doing

[23:12] <dalek> MoarVM: input/output operations.

[23:12] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fe0962fcb8

[23:12] <dalek> MoarVM: 1261936 | jnthn++ | src/io/syncstream.c:

[23:12] <dalek> MoarVM: First pass at locking for syncstream.

[23:12] <dalek> MoarVM:

[23:12] <dalek> MoarVM: Deals with the immediate issues when multiple threads 'say' at once,

[23:12] <dalek> MoarVM: but we really need to take the time to do a systematic pass through IO

[23:12] <dalek> MoarVM: and the things it calls (like decode stream) and make sure we never

[23:12] <timotimo> oh yikes

[23:13] <jnthn> Yeah, it's non-trivial, which is why I was asking for volunteers experienced in the dark arts :)

[23:13] <jnthn> I'm fine with doing it, I just try to hand out isolated/explainable tasks :)

[23:14] <timotimo> yes, that's very sensible

[23:14] * timotimo is unfortunately not a master in the dark arts of lock placement

[23:16] <jnthn> It's kinda learned the hard way

[23:16] <jnthn> And this being C doesn't help.

[23:17] <jnthn> In the OO world you can get a lot of sanity by doing good OO design and strongly encapsualting stuff under lock

[23:17] <jnthn> If you do OO design right.

[23:18] <jnthn> In the C# world, depressingly, the MSDN advises you to assume OO designs are crap generally and so advise to avoid a perfectly good pattern in a well-designed system...

[23:18] *** woolfy joined
[23:25] <timotimo> ouch

[23:27] <jnthn> It doesn't quite word it like that. It lists it as a guideline without explaining why.

[23:28] <jnthn> Got quite a bit of $dayjob tasks tomorrow. But Tuesday is for Perl 6. :)

[23:29] <jnthn> Confident I'll get the specialization code into shape enough that I'm happy to land it.

[23:30] <jnthn> timotimo: What's state of NQP lex->loc and block inlines?

[23:30] * jnthn may want to join in with that in the next week or two...

[23:31] <jnthn> Actually, gonna sleep now...but will backlog tomorrow :)

[23:31] <jnthn> 'night
