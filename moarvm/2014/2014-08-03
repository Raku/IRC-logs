[00:00] <dalek> MoarVM: bc560bc | (Timo Paulssen)++ | src/core/ (3 files):

[00:00] <dalek> MoarVM: fetch static lexical vivification values from SC lazily

[00:00] <dalek> MoarVM:

[00:00] <dalek> MoarVM: not working properly yet.

[00:00] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/bc560bc451

[00:00] <timotimo> didn't mean to push it to master

[00:01] <dalek> MoarVM/lazy_static_lex_vivify: bc560bc | (Timo Paulssen)++ | src/core/ (3 files):

[00:01] <dalek> MoarVM/lazy_static_lex_vivify: fetch static lexical vivification values from SC lazily

[00:01] <dalek> MoarVM/lazy_static_lex_vivify:

[00:01] <dalek> MoarVM/lazy_static_lex_vivify: not working properly yet.

[00:01] <dalek> MoarVM/lazy_static_lex_vivify: review: https://github.com/MoarVM/MoarVM/commit/bc560bc451

[00:01] <timotimo> jnthn: i won't be at my keyboard for much of tomorrow, i believe, so you'll have to fix this up :P

[01:45] *** FROGGS_ joined
[01:45] *** ventica joined
[10:39] *** ventica joined
[10:46] *** colomon joined
[12:40] <dalek> MoarVM: d9dda14 | jnthn++ | src/ (5 files):

[12:40] <dalek> MoarVM: Lazily deserialize meta-objects.

[12:40] <dalek> MoarVM:

[12:40] <dalek> MoarVM: Now we only deserialize what ->HOW points to upon the first usage.

[12:40] <dalek> MoarVM: This saves 16.5MB off a base Rakudo (running loop { }) and nearly

[12:40] <dalek> MoarVM: 2MB doing similar in NQP.

[12:40] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d9dda14af7

[12:55] *** avar joined
[13:41] *** avar joined
[13:45] <timotimo> oh nice

[13:48] * carlin loving all these improvements

[13:50] <dalek> MoarVM: 6332835 | jnthn++ | src/spesh/graph.c:

[13:50] <dalek> MoarVM: Make throwing instructions end a basic block.

[13:50] <dalek> MoarVM:

[13:50] <dalek> MoarVM: This will make lowering some of them into gotos work out OK without

[13:50] <dalek> MoarVM: making a mess of the spesh graph.

[13:50] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/633283594c

[13:55] <timotimo> jnthn: did you get the chance to look at lazy_static_lex_vivify?

[13:56] <jnthn> Not yet

[13:56] <jnthn> Probably will do so later today

[13:57] <timotimo> cool

[13:57] <timotimo> the code looked good to me, so i must have missed something "far away"

[13:57] <timotimo> spooky action at a distance :)

[14:00] *** jimmyz joined
[14:01] <jimmyz> \o, rakudo repl is 14M now. before 26M

[14:01] <jnthn> "not bad" :)

[14:02] <jimmyz> it's very good

[14:10] <timotimo> how do you measure that? o_O

[14:11] <timotimo> wait what. how does it use way less memory than any compiled piece of code?

[14:11] <timotimo> ah, ok, the first input makes it jump back up to 140 mb

[14:11] <jnthn> huh?

[14:11] <jnthn> Was < 100 here

[14:11] * timotimo should compile a fresh moar

[14:12] <jnthn> But yeah, it loads the setting on demand. That's been the case forever just about :)

[14:16] <timotimo> ah, ok

[14:16] <timotimo> i never measured the repl

[14:16] <timotimo> but ... that's pretty useless :)

[14:17] <jnthn> Not really

[14:17] <jnthn> Deserializing half the amount of stuff = REPL loads faster

[14:17] <timotimo> hm

[14:17] <timotimo> well, fair enough

[14:17] <timotimo> but loading the whole setting as soon as we type anything into the repl isn't so good

[14:17] <timotimo> but you're working on that right now

[14:18] <timotimo> so that's fantastic :)

[14:20] <jnthn> Well, we load 25MB less stuff now than we did earlier on. :)

[14:22] <timotimo> yup

[14:22] <timotimo> for me the rakudo repl is 18M, curiously

[14:30] * jnthn measured 13,588K

[14:30] <jnthn> Possibly we're looking at slightly differet numbers or something

[14:30] <jnthn> (Like whether shared mmap'd things are included, maybe)

[14:31] <timotimo> hm perhaps

[14:37] <jnthn> Or maybe it's just hotter where you are than in Scandinavia, so the bits expand and take more space... :P

[14:39] <timotimo> :)

[14:56] <jnthn> ooh, nice; EXPR's lasts get rewritten into gotos by the thing I'm curerntly working on

[14:57] <timotimo> yus! :)

[14:59] <jnthn> No particular measurable improvement to CORE.setting build, but well, it's a drop in the ocean :)

[14:59] <timotimo> it'll make some customer happy at some point, at the very least

[15:01] <nwc10> "every little helps", as a certain supermarket was fond of saying

[15:02] <jnthn> aye

[15:03] <jnthn> Talking of which, I should probably go buy my missing curry ingredients before the thunderstorm forecast for in an hour or two arrives...

[15:04] <nwc10> that sounds like a good plan

[15:05] <timotimo> yeah, wouldn't want to miss the thunderstorm forecast because you're still out shopping

[15:12] <dalek> MoarVM: fb13b5e | jnthn++ | src/spesh/optimize.c:

[15:12] <dalek> MoarVM: Rewrite some simple throws into gotos.

[15:12] <dalek> MoarVM:

[15:12] <dalek> MoarVM: Works for next/redo/last control exceptions, for example. Could be

[15:12] <dalek> MoarVM: enhanced in the future to take inlined things into account too, but

[15:12] <dalek> MoarVM: that will need a good deal of care.

[15:12] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fb13b5e580

[15:12] <jnthn> bbiab

[15:12] <timotimo> i like that.

[15:32] <timotimo> .o( must be a nice place where you can buy curry ingredients on a sunday )

[15:37] <jnthn> tbh, the things I picked up weren't very curry specific...just fresh ginger, chicken, onion, etc. :)

[15:37] <jnthn> The harder to get things I already have a nice stash of :)

[17:27] *** zakharyas joined
[18:30] *** vendethiel joined
[19:04] *** ventica joined
[19:06] *** ventica2 joined
[19:13] *** zakharyas joined
[19:14] <jnthn> Hot curry was hot :)

[19:17] <FROGGS> sounds good :o)

[19:28] *** pmurias joined
[19:34] <[Coke]> jnthn++ # you've been busy

[20:21] *** oetiker joined
[22:26] *** zakharyas joined
[22:33] *** brother joined
[23:02] * timotimo is back at le keyboard

[23:34] *** vendethiel joined
[23:37] *** vendethiel joined
[23:47] <timotimo> that curry has launched jnthn into a deeply concentrated coding session, it seems
