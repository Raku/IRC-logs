[00:05] *** tadzik joined
[00:09] <jnthn> timotimo: There will be a way, but I don't have a design I'm happy with yet. I have to figure it out for inlining. It'll get figured out when that's near the top of the task list.

[00:09] <jnthn> timotimo: On the boxing instructions, yes, makes sense.

[00:31] *** lizmat joined
[01:06] *** btyler joined
[01:23] *** FROGGS_ joined
[02:06] *** woosley joined
[06:52] *** zakharyas joined
[08:54] *** FROGGS joined
[10:06] *** cognominal joined
[13:30] <dalek> MoarVM/optimize_isreprid: a6205ef | (Timo Paulssen)++ | src/spesh/optimize.c:

[13:30] <dalek> MoarVM/optimize_isreprid: try to optimize islist/isnum/... (not helpful yet)

[13:30] <dalek> MoarVM/optimize_isreprid:

[13:30] <dalek> MoarVM/optimize_isreprid: the problem is that islist and friends also include a null

[13:30] <dalek> MoarVM/optimize_isreprid: check on their argument. At best, we could - if we only know

[13:30] <dalek> MoarVM/optimize_isreprid: the type - turn these ops into a negated "isnull" op, but that

[13:30] <dalek> MoarVM/optimize_isreprid: doesn't exist. So we have to wait for spesh's ability to

[13:30] <dalek> MoarVM/optimize_isreprid: allocate new registers and add new operations on those.

[13:30] <dalek> MoarVM/optimize_isreprid: review: https://github.com/MoarVM/MoarVM/commit/a6205ef0f6

[13:39] <dalek> MoarVM: c34942c | (Timo Paulssen)++ | src/spesh/facts.c:

[13:39] <dalek> MoarVM: boxing ops carry their types and result in concrete objects

[13:39] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c34942c797

[13:39] <timotimo> this ought to get rid of a few decont ops, too.

[13:40] <timotimo> they are not that expensive, but better is better.

[13:40] <moritz> ... unless you spend more time rewriting the bytecode than executing the original bytecode

[13:40] <timotimo> hehe.

[13:41] <timotimo> in our experience, the specializer seems to be blazing fast

[13:42] <timotimo> i'm not expecting us to gain good performance just by removing lots of decont ops :)

[13:42] <timotimo> especially since currently we turn them into set ops instead of renaming the registers

[13:42] <timotimo> which i would prefer if it weren't complicated to do :)

[13:43] <JimmyZ> :)

[13:44] *** btyler joined
[13:44] <timotimo> maybe we should introduce a KNOWN_NOT_NULL fact?

[13:46] <timotimo> after object creation, we should know it's not null, for example

[13:50] <timotimo> hmm. in theory, with a KNOWN_TYPE, we should be able to turn a getwhat into a wval or something like that; i wonder if that'd be more efficient?

[13:50] <timotimo> (but if we do turn it into a wval, we also have its known object value available in the specializer)

[13:55] <timotimo> gethow should be specializable, too, shouldn't it?

[14:17] <timotimo> [Annotation: INS Deopt (idx 0 -> pc 170)]

[14:18] <dalek> MoarVM: eadd2c8 | (Timo Paulssen)++ | src/spesh/dump.c:

[14:18] <dalek> MoarVM: dump deopt instruction annotations, too.

[14:18] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/eadd2c8f73

[14:33] <timotimo> not sure what to do next. somehow i still don't feel up to the task of making nameds work properly :|

[14:34] <timotimo> with interned callsites and spesh, that is

[14:35] <FROGGS> timotimo: implement LABLEs \o/

[14:35] <FROGGS> err, LABELs, even

[14:38] <timotimo> oh, look at my wrist! i gotta go!

[14:38] <timotimo> how about something easy that'll result in a dramatic speed improvement in common cases?

[14:38] <timotimo> oh ... right ... those things aren't easy :|

[14:38] <moritz> FROGGS: now you've scared him away :-)

[14:39] <FROGGS> timotimo: these things are perhaps just wishes and dreams :o)

[14:40] <FROGGS> at least I merged master into nqp/loop_labels, so if someone wants to play with it, nqp-p supports loop labels :o)

[14:48] <timotimo> what's the exact significance of 512, 513 and 514?

[14:51] <FROGGS> these are just IDs of exception handlers

[14:51] <FROGGS> (next/last/redo)

[14:51] <moritz> feels like they could go into pir::const thingy

[14:52] <FROGGS> moritz: and then I can use such a const in pir code?

[14:53] <moritz> FROGGS: in the NQP that generates the pir code

[14:54] <FROGGS> moritz: well, then I can stick to my hash: https://github.com/perl6/nqp/compare/loop_labels#diff-900522366d019758be5b6ddbd59b29f1R552

[14:55] <moritz> ah, right

[15:26] *** FROGGS[mobile] joined
[16:06] *** FROGGS joined
[17:59] *** benabik joined
[18:58] *** zakharyas joined
[19:10] *** woolfy1 joined
[19:44] <moritz> FROGGS: https://rt.perl.org/Ticket/Display.html?id=121720 you recently fixed a bug with the same symptoms. HALP?

[19:45] <FROGGS> moritz: last time it thought it never hit eof

[19:49] * moritz was hoping for a patch :-)

[19:50] *** woolfy joined
[19:51] <FROGGS> moritz: *g*

[19:51] <FROGGS> let me take a sip on my beer first

[19:53] <FROGGS> btw, working on loop labels again on nqp-m feels like wearing that old good jacket that fits so well...

[19:53] <FROGGS> it feels right somehow

[20:00] <timotimo> there's not as many weird gotchas everywhere :)

[20:12] *** woolfy joined
[20:31] *** brrt joined
[20:31] <brrt> hey #moarvm

[20:32] <FROGGS> ho brrt

[20:33] <brrt> much progress for me to catch up with

[20:34] <jnthn> well, not in Moar

[20:34] <jnthn> Since weekend, anyway

[20:39] <timotimo> aye, mostly cool supply methods

[20:40] <timotimo> jnthn: comments about the things i wrote about spesh before?

[20:42] <brrt> jnthn: https://github.com/MoarVM/MoarVM/blob/master/src/io/eventloop.c#L38 - shouldn't this be += ?

[20:51] <jnthn> brrt: The code using the return value only cares about it in boolean sense.

[20:51] <brrt> ok

[20:51] <brrt> :-)

[20:52] <jnthn> timotimo: Not at the moment...busy trying to write my talk and debug code for it... :)

[20:52] <jnthn> Turns out we have some issue involving continuations when multiple threads are involved :(

[20:54] <FROGGS> :{

[20:54] <brrt> jnthn - btw, i'm sorry to say i won't make it to the dutch perl workshop this friday

[20:55] <jnthn> brrt: ok, no worries

[20:55] <brrt> its just a shame

[20:55] <jnthn> aye

[20:55] <brrt> hopefully you'll visit our pretty country another time

[20:55] <jnthn> probably :)

[20:55] <brrt> or, i'll go to sweden

[20:56] <jnthn> or that :)

[20:57] <timotimo> that's fair :)

[20:57] <timotimo> (re: my spesh things)

[21:19] * brrt is off to sleep again, see you tomorrow

[21:19] *** brrt left
[21:27] <FROGGS> moritz: I have a patch

[21:32] <dalek> MoarVM: a109e8d | (Tobias Leich)++ | src/io/syncfile.c:

[21:32] <dalek> MoarVM: stat file descriptor in eof() when filename is unset

[21:32] <dalek> MoarVM:

[21:32] <dalek> MoarVM: This can happen when we get a file redirected, and therefor open it via

[21:32] <dalek> MoarVM: MVM_file_handle_from_fd instead of MVM_file_open_fh.

[21:32] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a109e8d765

[21:38] <timotimo> cool

[21:43] <timotimo> what was the gsoc irc channel for perl again?

[21:45] <tadzik> soc-help

[21:45] <timotimo> oh

[22:06] *** donaldh joined
[22:43] *** cognominal joined
[23:05] *** benabik joined
[23:41] *** benabik joined
[23:48] *** woolfy joined
[23:57] *** benabik joined
