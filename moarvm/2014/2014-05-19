[00:29] *** colomon joined
[00:34] *** woolfy joined
[00:34] *** woolfy left
[02:08] *** btyler joined
[06:17] *** lizmat joined
[06:43] *** woolfy joined
[07:01] *** zakharyas joined
[07:05] *** woosley joined
[07:22] *** woolfy left
[07:23] *** brrt joined
[07:31] *** brrt left
[09:03] *** lue joined
[09:34] *** donaldh joined
[09:39] *** brrt joined
[09:52] *** FROGGS joined
[10:19] *** brrt joined
[10:25] *** donaldh joined
[12:04] *** colomon joined
[12:10] *** FROGGS joined
[12:12] <sergot_> I have a question.

[12:13] <sergot_> I'm working on Bug #121273

[12:13] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=121273

[12:17] <sergot_> I'm at point, where nqp::mul_n returns wrong value (it's 3.40282366920938e+2), when the value of GET_REG(cur_op, 0).n64 contains (after multiplication) good value (it's 340282366920938029056.000000).

[12:17] <sergot_> in OP(mul_n):

[12:20] <sergot_> 340282366920938029056.000000 == 3.402824e+20 (using %e)

[12:21] <sergot_> Do you know maybe where can I look for a bug now?

[12:22] <sergot_> the OP(mul_n) is defined like this: GET_REG(cur_op, 0).n64 = GET_REG(cur_op, 2).n64 * GET_REG(cur_op, 4).n64;

[12:25] <sergot_> any ideas? :)

[12:34] *** harrow joined
[12:37] <FROGGS> sergot_: I'd  think that the code that does the scientific notation is off

[13:06] <sergot_> What do you mean?

[13:06] <sergot_> FROGGS: :)

[13:07] <FROGGS> something converts it to a string to be printed with '...e+2...'

[13:07] <FROGGS> and that might be faulty when the numeric value stays intact

[13:08] <sergot_> Do you know maybe where should I look for it?

[13:08] <FROGGS> I'd guess that nqp::sprintf is involved

[13:08] <FROGGS> but I'm not sure

[13:09] <sergot_> ok, I'll try

[13:10] *** colomon joined
[13:37] *** btyler joined
[14:04] *** john3213 joined
[14:09] *** john3213 left
[15:00] <sergot_> FROGGS++, thank you!

[15:02] <FROGGS> sergot_: did you run the nqp-m tests and the rakudo spectests for moarvm?

[15:03] <FROGGS> I think we should do that to make sure nothing breaks

[15:03] <FROGGS> and I also guess we can unfudge tests

[15:08] <sergot_> I ran nqp-m tests, I should do the same with spectests - give me a sec.

[15:22] <sergot_> We can unfudge them after merging my pull request I think.

[15:22] <FROGGS> sure

[15:23] <FROGGS> I just want to know what we can unfudge and that nothing breaks

[15:26] *** lizmat joined
[15:39] *** woolfy joined
[15:42] *** camelia joined
[15:45] *** camelia joined
[15:52] *** raiph joined
[16:35] *** woolfy left
[16:52] *** FROGGS joined
[17:13] <FROGGS> sergot_: the spedctests are fine?

[18:02] <sergot_> FROGGS: yes, they are

[18:03] <FROGGS> awesome :o)

[18:03] <dalek> MoarVM: 651bf11 | sergot++ | src/core/coerce.c:

[18:03] <dalek> MoarVM: Bug #121273 fixed - losing a 0 from end of exponent

[18:03] <dalek> MoarVM:

[18:03] <dalek> MoarVM: it was removing zeros from the end of a num. FROGGS++

[18:03] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/651bf11065

[18:03] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=121273

[18:03] <dalek> MoarVM: d84b1dd | sergot++ | src/core/coerce.c:

[18:03] <dalek> MoarVM: NewLine removed

[18:03] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d84b1dd260

[18:03] <dalek> MoarVM: 3818135 | (Tobias Leich)++ | src/core/coerce.c:

[18:03] <dalek> MoarVM: Merge pull request #99 from sergot/master

[18:03] <dalek> MoarVM:

[18:03] <dalek> MoarVM: Bug #121273 fixed - losing a 0 from end of exponent

[18:03] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/3818135671

[18:03] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=121273

[18:04] <sergot_> You can check too :)

[18:04] <sergot_> \o/ yay

[18:05] <FROGGS> also please respond to that RT ticket

[18:05] <sergot_> Ok :)

[18:09] <sergot_> FROGGS: that's weitd, I can't do that: http://oi57.tinypic.com/33p360j.jpg

[18:10] <sergot_> the same with "Comment"

[18:10] <FROGGS> works for me...

[18:10] <FROGGS> are you signed in?

[18:12] <sergot_> If I am, it always redirects me to https://rt.perl.org/SelfService/ - I cannot even open this bug.

[18:13] <FROGGS> weird

[18:13] <sergot_> If I use "Goto Ticket..." it shows: No permission to display that ticket

[18:13] <FROGGS> https://rt.perl.org/Ticket/Display.html?id=121273

[18:13] <sergot_> The same, no permission

[18:14] *** btyler joined
[18:41] <FROGGS> I closed that ticket

[18:41] <FROGGS> sergot++

[18:43] <nwc10> MVMint64 is_not_scientific = !strstr(buf, "e");

[18:43] <nwc10> wouldn't that be more efficient as !strchr(buf, 'e');  ?

[18:43] <nwc10> (not tested)

[18:44] <FROGGS> I dunno

[18:44] <FROGGS> same goes for the check of the dot I guess

[18:47] *** brrt joined
[18:48] <brrt> \o #moarvm

[18:50] <FROGGS> hi brrt

[18:51] <[Coke]> sergot_: what is your login id on rt?

[18:51] <[Coke]> (it'll show in the "logged in as..."

[18:52] <[Coke]> FROGGS: get him the public link.

[18:52] <brrt> today is start-of-coding, isn't it? :-)

[18:52] <tadzik> I think so :)

[18:59] <brrt> then i should've gotten to work

[19:03] <brrt> jnthn, timotimo, you here?

[19:04] <sergot_> [Coke]: [email@hidden.address]
[19:04] <sergot_> brrt: yes. that's right

[19:04] <brrt> :-) i'm as excited as i'm tired

[19:06] <[Coke]> sergot_: ok, you're not listed as a perl 6 bugadmin.

[19:07] <[Coke]> ... and now you are.

[19:07] <sergot_> \o/ [Coke]++ thanks

[19:07] <sergot_> It works :)

[19:09] <[Coke]> non bugadmins must use the "public" urls.

[19:09] <[Coke]> so urls shared by us here probably won't work.

[19:51] *** lizmat joined
[19:51] *** cognominal joined
[19:52] *** dalek joined
[19:56] *** Util joined
[20:14] <timotimo> brrt: i'm here

[20:14] <brrt> hi :-)

[20:15] <brrt> briefly, i'm wondering where to begin

[20:16] <brrt> oh, i've put myself up for 'research weeks'

[20:16] <brrt> but i've already done some of that

[20:16] <brrt> hmm

[20:16] <brrt> the first 1,5 month is just spesh, it seems

[20:17] <timotimo> are scientific number renderings proper now?

[20:17] <brrt> i have no idea, i haven't looked at that

[20:27] <brrt> i'd just like to start at something :-)

[20:29] <lizmat> brrt: there are a number of segfaults in the rakudo spectest

[20:29] <brrt> fair enough

[20:29] <lizmat> that go away if MVM_SPESH_DISABLE=1 is specified

[20:29] <brrt> hmm

[20:29] <brrt> ok

[20:29] <brrt> i'll take a look

[20:29] <brrt> (somewhere later today)

[20:30] <lizmat> the faiing tests are: t/spec/S05-transliteration/with-closure

[20:30] <lizmat> t/spec/S05-transliteration/trans.t

[20:30] <nwc10> t/spec/S05-transliteration/with-closure.rakudo.moar t/spec/S05-transliteration/trans.rakudo.moar t/spec/integration/advent2009-day09.t t/spec/integration/real-strings.t

[20:30] <lizmat> nwc10++

[20:49] <jnthn> evening, #moarvm

[20:49] <FROGGS> hi jnthn

[20:49] <jnthn> Did we bump MOAR_REVISION enough so anybody building with that sees the segvs?

[20:50] <FROGGS> we are at HEAD right now

[20:50] <jnthn> Anyway, I can look at them tomorrow. I saw the conf has tables and white power strips to plug into. :)

[20:50] <FROGGS> tables++ :o)

[20:52] <jnthn> Saw the backtrace somebody posted. I suspect it'll be something silly in the end...

[20:53] <brrt> hi jnthn :-)

[20:53] <brrt> haven't seen the backtrace

[20:54] <jnthn> http://paste.scsys.co.uk/377252

[20:56] <jnthn> Anyway, if anybody else wants to look at it, feel free...

[20:57] <brrt> hmm

[20:57] <brrt> seems to be happening during spesh, no?

[20:59] <jnthn> right

[21:02] <lizmat> nwc10: were you contacted about using hardware for testing?

[21:06] *** colomon joined
[21:21] *** donaldh joined
[21:22] <dalek> MoarVM: 845bb6f | (Tobias Leich)++ | src/6model/reprs/P6opaque.c:

[21:22] <dalek> MoarVM: don't try to get slot of an NULL attribute name

[21:22] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/845bb6f4c6

[21:24] *** vendethiel joined
[21:24] <FROGGS> jnthn: I dunno if that is correct or not, but it helps right now at least

[21:25] <FROGGS> spesh_attr_name returns NULL in one case, so I think it is not too bad what I did

[21:27] <jnthn> FROGGS: uh, no, I thought name was checked in all the branches

[21:27] <jnthn> If not it was just a fail

[21:28] <FROGGS> ohh lol, now I see that the other branches do what I did *g*

[21:28] <FROGGS> hehe

[21:28] <FROGGS> looks like There Is Only One Way To Do It :o)

[21:29] <FROGGS> Stage parse      :  46.257

[21:29] <FROGGS> still 26.2s to go :P

[21:29] <FROGGS> damn, I love that

[21:29] <FROGGS> :o)

[21:35] <jnthn> On my box it's already at around 35s :)

[21:37] <FROGGS> yeah, your box + MSVC is a nice combination

[21:38] <FROGGS> ahh, and I always build with --debug=3

[21:38] <jnthn> Have you tried building with CGOTO?

[21:38] <FROGGS> no

[21:38] <jnthn> Worth a try. If it helps (especially in combination with optimization flags) we may want to make it the default

[21:38] <FROGGS> ahh, will try now

[21:39] <FROGGS> btw, spectests are clean (except S17 and a test that lizmat++ touched in the last hour)

[21:39] <lizmat> which one?

[21:39] <FROGGS> <FROGGS> t/spec/S02-types/deprecations.rakudo.moar ..................... Dubious, test returned 1 (wstat 256, 0x100)

[21:39] <FROGGS> <FROGGS> Failed 6/39 subtests

[21:40] <lizmat> hmmmm

[21:41] <lizmat> willl look in a mo

[21:42] <FROGGS> -O2 with CGOTO and without -g feels very fast at least

[21:44] <FROGGS> Stage parse      :  41.706

[21:44] <FROGGS> nice -----------^

[21:45] * brrt is going to sleep :-) FROGGS++ for fixing

[21:45] <brrt> although i wonder why name was null

[21:45] <FROGGS> dunno, but the function returns NULL in on case so... we better check anyway

[21:45] <FROGGS> gnight brrt :o)

[21:47] *** brrt left
[21:48] <jnthn> NULL is used to indicate "we don't know the attribute name at compile time"

[21:52] *** tadzik joined
[22:04] *** cognominal joined
[22:06] <timotimo> how does i builds with cgoto?

[22:09] <jnthn> make CGOTO=1 maybe

[22:09] <jnthn> see Makefile

[22:41] *** woolfy joined
[23:28] *** woolfy left
