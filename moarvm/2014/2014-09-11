[00:23] <FROGGS> this is the bad libuv commit: https://github.com/joyent/libuv/commit/b197515367d1a996dca9009483d202b306f9474e

[00:24] <FROGGS> tomorrow I'll try to revert it locally on top of libuv latest... we'll see

[00:24] <FROGGS> gnight

[00:52] *** avuserow joined
[00:55] *** cognome joined
[00:55] <leedo> FROGGS: wow i never would have found that, nice job :o

[01:11] <[Coke]> FROGGS++ FROGGS++ # That's dedication.

[01:15] <diakopter> FROGGS++ # impressive as all get out :)

[01:29] *** FROGGS_ joined
[01:47] <japhb> So since the description says that it is a retry of a revert, after fixing a "select trick" for OS X ... what is different for them such that this trick works for them and not us?

[02:04] *** cognome joined
[02:49] *** vendethiel- joined
[02:52] <[Coke]> older version of OS X?

[03:09] *** cognome joined
[03:50] *** JimmyZ joined
[05:44] *** Ven joined
[05:46] *** JimmyZ_ joined
[06:28] *** cognome joined
[06:30] *** JimmyZ_ joined
[06:31] <sergot> hi o/

[06:37] *** FROGGS[mobile] joined
[06:50] *** FROGGS joined
[07:26] *** zakharyas joined
[07:39] *** JimmyZ_ joined
[07:47] *** JimmyZ_ joined
[08:29] *** itz_ joined
[08:30] *** JimmyZ_ joined
[08:30] *** cognome joined
[08:47] *** colomon joined
[09:54] <dalek> MoarVM/libuv-upgrade: 2af01a9 | (Tobias Leich)++ | src/io/procops.c:

[09:54] <dalek> MoarVM/libuv-upgrade: we are not supposed to open a children's pipe to our stdin

[09:54] <dalek> MoarVM/libuv-upgrade:

[09:54] <dalek> MoarVM/libuv-upgrade: We hand back the other side of the pipe in order to read from it, so it does not make any sense to ground it to stdin.

[09:54] <dalek> MoarVM/libuv-upgrade: Same goes for the other direction, where we want to print to the children.

[09:54] <dalek> MoarVM/libuv-upgrade: review: https://github.com/MoarVM/MoarVM/commit/2af01a9316

[10:16] <FROGGS> leedo: you've got now a working rakudo on you mac :o)

[10:16] <FROGGS> your*

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: 20eb200 | (Tobias Leich)++ | / (6 files):

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: Revert "Revert "update libuv from 0.11.18 to 0.11.29""

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade:

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: This reverts commit b24c94bf32fc312d6793aab2cad115ebfe908921.

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: review: https://github.com/MoarVM/MoarVM/commit/20eb200a5f

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: 6a1b339 | (Tobias Leich)++ | src/io/syncfile.c:

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: Revert "Revert "uv_fs_write also takes an uv_buf_t instead of char*""

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade:

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: This reverts commit 93d47ddcef3e3fb308dd158b6273fa997038ba24.

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: review: https://github.com/MoarVM/MoarVM/commit/6a1b339bb2

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: 8f70d1a | (Tobias Leich)++ | src/io/procops.c:

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: we are not supposed to open a children's pipe to our stdin

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade:

[10:20] <dalek> MoarVM/smoke-me-libuv-upgrade: We hand back the other side of the pipe in order to read from it, so it does not make any sense to ground it to stdin.

[10:27] *** travis-ci joined
[10:27] <travis-ci> [travis-ci] MoarVM build passed. Tobias Leich 'we are not supposed to open a children's pipe to our stdin

[10:27] <travis-ci> [travis-ci] http://travis-ci.org/MoarVM/MoarVM/builds/35000245 https://github.com/MoarVM/MoarVM/compare/20eb200a5f99^...8f70d1a32ff6

[10:27] *** travis-ci left
[10:33] <jnthn> FROGGS++ # outstanding work

[10:33] <nwc10> good UGT heresy, jnthn

[10:33] <jnthn> o/

[10:35] <FROGGS> jnthn: it wasnt me after all :o)

[10:35] <FROGGS> saghul++ # really

[11:30] *** oetiker joined
[11:57] <nwc10> FROGGS: origin/libuv-upgrade passes all* spectests on x86_64 when built with ASAN

[11:57] <nwc10> previously things hung

[11:57] <nwc10> but on Power all things involving shelling out hang

[11:57] <nwc10> * except already failing spectests. Naughty #perl6 devs

[11:59] <FROGGS> nwc10: what about smoke-me-libuv-upgrade?

[11:59] * nwc10 tretries

[11:59] <nwc10> retries

[12:00] <nwc10> also, previously new libuv failed assertions on Power

[12:00] <nwc10> that's gone

[12:01] <FROGGS> yeah, these #perl6ers are just loonies :o)

[12:09] <FROGGS> jnthn: smoke-me-libuv-upgrade is purrfect AFAICT...

[12:09] <FROGGS> of course, I'd like to know if it works on lizmat++'s box before merging anything :o)

[12:16] <lizmat> building now

[12:19] <FROGGS> lizmat: in case rakudo builds, please also test a 'say qx/sw_vers/'

[12:20] <lizmat> yes, that was the first thing I was going to test

[12:20] <lizmat> if that didn't work, the problem still exists

[12:22] <lizmat> $ perl6 -e 'say qx/sw_vers/'

[12:22] <lizmat> ProductName:	Mac OS X

[12:22] <lizmat> ProductVersion:	10.9.4

[12:22] <lizmat> BuildVersion:	13E28

[12:22] <lizmat> aka Success!

[12:22] <FROGGS> \o/

[12:22] <lizmat> running spectest now

[12:22] <FROGGS> okay...

[12:23] <FROGGS> I'm still curious why shell() hangs on powerpc...

[12:25] <nwc10> I doubt that I have time to dig into it and figure out the answer

[12:25] <lizmat> came out of spectest with no unexpected errors

[12:28] <JimmyZ> FROGGS: I see there still is some uv_pipe_open , which is in stderr but not stdout, is it right?

[12:30] <FROGGS> JimmyZ: where?

[12:31] <FROGGS> lizmat: awesome! thank you :o)

[12:31] <lizmat> FROGGS: no, thank you!  :-)

[12:31] *** JimmyZ_ joined
[12:31] <JimmyZ_> FROGGS: https://github.com/MoarVM/MoarVM/blob/8f70d1a32ff63016a3c9ad2a6817623a4540e2cd/src/io/procops.c#L834-L845

[12:32] <FROGGS> JimmyZ: ohh, yeah, that is most likely wrong too

[12:34] <dalek> MoarVM/smoke-me-libuv-upgrade: 3519a6d | (Tobias Leich)++ | src/io/procops.c:

[12:34] <dalek> MoarVM/smoke-me-libuv-upgrade: remove more troublemaking calls to uv_pipe_open, JimmyZ++

[12:34] <dalek> MoarVM/smoke-me-libuv-upgrade: review: https://github.com/MoarVM/MoarVM/commit/3519a6d3b6

[12:34] <FROGGS> damn

[12:34] <FROGGS> wrong lines *g*

[12:36] <dalek> MoarVM/libuv-upgrade: d0f7340 | (Tobias Leich)++ | src/io/procops.c:

[12:36] <dalek> MoarVM/libuv-upgrade: remove more troublemaking calls to uv_pipe_open, JimmyZ++

[12:36] <dalek> MoarVM/libuv-upgrade: review: https://github.com/MoarVM/MoarVM/commit/d0f7340bba

[12:36] <FROGGS> so libuv-upgrade will be the branch I'm going to merge

[12:37] * nwc10 tests

[12:37] <FROGGS> nwc10: and shell() succeeded on powerpc before, is that right?

[12:37] <FROGGS> or... it just did not hang

[12:38] <nwc10> yes, it worked on the previous version of libuv that moar bundled

[12:38] * lizmat builds with latest changes

[12:38] <JimmyZ> https://github.com/MoarVM/MoarVM/compare/libuv-upgrade # I didn't see any libuv upgrade?

[12:39] <FROGGS> dang

[12:39] <lizmat> brb

[12:41] <FROGGS> JimmyZ: that's because there are reverted commits on master that did not get reverted in that branch

[12:41] <JimmyZ> oh

[12:42] <dalek> MoarVM/libuv-upgrade: c924cb0 | (Tobias Leich)++ | Configure.pl:

[12:42] <dalek> MoarVM/libuv-upgrade: Revert "forcing a realclean to get rid of old libuv"

[12:42] <dalek> MoarVM/libuv-upgrade:

[12:42] <dalek> MoarVM/libuv-upgrade: This reverts commit cf8088a28e894610309b0b7327de0d5b7dfcafb2.

[12:42] <dalek> MoarVM/libuv-upgrade: review: https://github.com/MoarVM/MoarVM/commit/c924cb0dc1

[12:42] <FROGGS> sorry dalek /o\

[12:43] *** dalek joined
[12:43] <nwc10> FROGGS: seems that problem exists between the keyboard, chair and git submodules

[12:43] <FROGGS> nwc10: that's what I wanted to hear! :D

[12:47] <FROGGS> I am going to merge now

[12:48] <dalek> Heuristic branch merge: pushed 16 commits to MoarVM by FROGGS

[12:50] *** FROGGS[mobile] joined
[13:03] <lizmat> FROGGS[mobile]: I guess we need REVISION bumps again?

[13:04] <FROGGS[mobile]> we can do that, yes

[13:04] <lizmat> ok, I'll take care of it

[13:06] <FROGGS[mobile]> lizmat++

[13:25] *** JimmyZ_ joined
[13:41] *** JimmyZ_ joined
[13:57] *** JimmyZ_ joined
[14:15] *** JimmyZ_ joined
[14:20] * jnthn back :)

[14:21] *** JimmyZ_ joined
[14:22] *** JimmyZ__ joined
[14:23] <leedo> FROGGS++ awesome work!

[14:28] <jnthn> Indeed :)

[14:29] <nine> jnthn: how is MoarVM supposed to know when I'm not using NativeCall callbacks anymore so it can free the memory (and objects referenced from the closures)?

[14:30] <jnthn> It doesn't.

[14:30] <jnthn> For now, don't use closures there unless they have program lifetime.

[14:30] *** JimmyZ_ joined
[14:30] <jnthn> Just use a non-closure sub instead.

[14:31] <jnthn> We should probably have a mechanism for letting you release them.

[14:32] <JimmyZ_> good night, moarvm

[14:32] <nine> jnthn: the whole point of those callbacks is that they are closures. I use them to get back at the Perl 6 object from the Perl 5 wrapper.

[14:33] <nine> jnthn: if you have another idea on how I can get back the Perl 6 object I'm all ears!

[14:34] <jnthn> OK, then (uness you want to maintain a closure pool yourself) it'll need some work to let them be free-able somehow

[14:35] *** xiaomiao joined
[14:35] *** brrt joined
[14:35] <nine> Actually using closures for this is not my favourite solution anyway. It's just the only solution I found.

[14:36] <nine> I'd much rather just store a pointer in my Perl 5 object and use that to get back at the Perl 6 object from some (non-closure) callback

[14:49] <nine> jnthn: head -> table. The solution is so obvious and simple it's really embarassing.

[14:49] <jnthn> ;)

[14:49] * jnthn knows that feeling :)

[14:50] <nine> jnthn: without closures I have to reference the wrapped Perl 6 objects manually from Perl 6 code. I'd just push them to an array. Now I can use the index in the array and store it in my Perl 5 wrapper object and use it to get back to the object in Perl 6.

[14:59] <jnthn> Sounds workable :)

[15:01] <[Coke]> jnthn: JNTHN!

[15:01] <[Coke]> (nothing, just hi. :)

[15:01] <jnthn> :)

[15:01] <jnthn> Hi from...a hotel which is having a power outage

[15:02] <jnthn> Oddly, the wifi network is still up. :)

[15:09] *** brrt joined
[15:14] <[Coke]> priorities

[15:34] *** JimmyZ joined
[15:34] <JimmyZ> jnthn: I reported a bug in #perl6 about thread :)

[15:35] <jnthn> Since when was #perl6 a bug tracker? :P

[15:35] <jnthn> Please pop it in RT, or Moar's issue tracker if it's VM-specific :)

[15:35] <JimmyZ> jnthn: http://irclog.perlgeek.de/perl6/2014-09-11#i_9335568

[15:35] <JimmyZ> I don't know whether is MoarVM or rakudo ...

[15:36] <JimmyZ> really..

[15:37] <jnthn> Well, segv is suggestive of VM...

[15:39] <JimmyZ> https://github.com/MoarVM/MoarVM/issues/140

[15:39] <JimmyZ> 'night

[15:41] <jnthn> Thanks :)

[16:08] <jnthn> Fun fact: Hong Kong's underground has a station called Long Ping. Guess that's *not* a place to find fast internets... :)

[16:09] <TimToady> unless that refers to the size of the packet, not the latency

[16:10] <jnthn> heh, true :)

[16:19] <jnthn> Well, that's my route planning for tomorrow evening done.

[16:19] * jnthn is having a weekend in HK :)

[16:19] <jnthn> Time for sleep...'night

[16:36] <brrt> 'night jnthn

[18:33] * nwc10 still continues to be pleasantly surprised how (relatively) unbroken Power is.

[18:58] <timotimo> FROGGS[mobile]: why is there a travis.yml and a travis.yaml?

[19:04] *** FROGGS joined
[19:08] <FROGGS[mobile]> timotimo: the .travis.yaml should go

[19:09] <timotimo> OK

[19:18] <FROGGS[mobile]> from reading the backlog it seems like there was no complaints until now?

[19:22] *** brrt joined
[19:23] <dalek> MoarVM: 095bb8b | (Tobias Leich)++ | .travis.yaml:

[19:23] <dalek> MoarVM: remove duplicate travis config file

[19:23] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/095bb8b86c

[19:26] <timotimo> ah, good

[19:37] *** TimToady_ joined
[19:58] *** cognome joined
[20:08] *** Ven joined
[20:34] *** brrt joined
[22:26] *** colomon joined
[22:52] *** carlin joined
