[00:41] *** ilbot3 joined
[00:44] *** PerlJam joined
[00:57] *** ilbot3 joined
[01:03] *** woolfy1 joined
[01:03] *** colomon joined
[01:03] *** rblackwe joined
[01:03] *** PerlJam joined
[01:03] *** 45PABAHJL joined
[01:03] *** timotimo joined
[01:03] *** Util_ joined
[01:03] *** bibifuc_ joined
[01:03] *** BinGOs_ joined
[01:03] *** tadzik1 joined
[01:03] *** benabik joined
[01:03] *** japhb_ joined
[01:03] *** tokuhirom joined
[01:03] *** sorear joined
[01:03] *** diakopter joined
[01:03] *** ingy joined
[01:03] *** brother joined
[01:03] *** rurban joined
[01:03] *** lee__ joined
[01:03] *** ChanServ joined
[01:03] *** cxreg joined
[01:08] *** dalek joined
[01:08] *** 17WAA0G5X joined
[01:08] *** arnsholt joined
[01:08] *** 45PABAHJL joined
[01:08] *** PerlJam joined
[01:12] *** dalek joined
[01:12] *** masak joined
[01:12] *** Util_ joined
[01:18] *** dagurval joined
[01:21] *** tokuhirom joined
[01:21] *** dalek joined
[01:21] *** woolfy joined
[01:21] *** rurban_ joined
[01:21] *** arnsholt_ joined
[01:24] *** cxreg joined
[01:26] *** tokuhirom joined
[01:27] *** tokuhirom joined
[01:27] *** camelia joined
[01:33] *** rurban__ joined
[01:34] *** lee__ joined
[01:34] *** 23LAAZKPG joined
[01:36] *** dagurval joined
[01:36] *** lue joined
[01:36] *** PerlJam joined
[01:41] *** _sri joined
[01:41] *** japhb__ joined
[01:41] *** chipdude joined
[01:48] *** cxreg joined
[01:49] *** nwc10 joined
[01:53] *** d4l3k_ joined
[01:54] *** cxreg joined
[01:55] *** camelia joined
[01:58] *** lue joined
[01:59] *** dalek joined
[02:01] *** TimToady joined
[02:09] *** JimmyZ joined
[02:14] *** lee_ joined
[02:15] *** nwc10 joined
[02:20] *** PerlJam joined
[02:29] *** dalek joined
[02:29] *** JimmyZ joined
[02:34] *** lee_ joined
[02:34] *** camelia joined
[02:34] *** cxreg joined
[02:44] *** cognominal joined
[02:49] *** JimmyZ joined
[02:50] *** PerlJam joined
[02:56] *** lue joined
[03:11] *** tokuhirom joined
[03:13] *** nwc10 joined
[03:15] *** tokuhirom joined
[03:25] *** tokuhirom joined
[03:26] *** woolfy joined
[03:26] *** tokuhirom joined
[03:28] *** PerlJam joined
[04:05] *** lue joined
[04:19] *** JimmyZ joined
[04:22] *** dagurval joined
[04:28] *** woolfy joined
[04:28] *** PerlJam joined
[04:28] *** TimToady joined
[04:28] *** bibifuc joined
[04:28] *** benabik joined
[04:30] *** ingy1 joined
[04:38] *** JimmyZ joined
[04:41] *** ingy2 joined
[04:43] *** lue joined
[04:45] *** JimmyZ joined
[04:46] *** masak joined
[04:59] *** TimToady_ joined
[05:03] *** Util joined
[05:05] *** PerlJam joined
[05:05] *** woolfy joined
[05:15] *** nwc10 joined
[05:16] *** Util joined
[05:17] *** JimmyZ joined
[05:23] *** _sri joined
[05:46] *** cxreg joined
[05:50] *** _sri joined
[05:55] *** PerlJam joined
[05:59] *** masak joined
[05:59] *** JimmyZ joined
[05:59] *** woolfy joined
[05:59] *** bibifuc joined
[05:59] *** lue joined
[05:59] *** dagurval joined
[06:00] *** japhb__ joined
[06:00] *** chipdude joined
[06:09] *** ingy2 joined
[06:11] *** PerlJam joined
[06:13] *** cxreg joined
[06:29] *** TimToady joined
[06:32] *** dagurval joined
[06:33] *** _sri joined
[06:33] *** JimmyZ joined
[06:35] *** TimToady joined
[06:39] *** JimmyZ joined
[06:44] *** lue joined
[06:44] *** masak joined
[06:45] *** camelia joined
[06:51] *** woolfy joined
[06:56] *** masak joined
[06:58] *** 14WAB1GFF joined
[07:01] *** masak joined
[07:10] *** masak_ joined
[07:14] *** Util joined
[07:23] *** nwc10 joined
[07:40] *** JimmyZ joined
[07:41] *** japhb__ joined
[07:41] *** chipdude joined
[07:48] *** FROGGS joined
[07:51] *** cxreg joined
[07:52] *** BinGOs joined
[08:22] *** nwc10 joined
[08:22] *** cxreg joined
[08:22] *** TimToady joined
[08:22] *** ingy2 joined
[08:22] *** bibifuc joined
[08:22] *** dagurval joined
[08:22] *** woolfy joined
[08:24] *** JimmyZ joined
[08:30] *** camelia joined
[08:30] *** lue joined
[08:32] *** cxreg2 joined
[08:32] *** 45PABCLNP joined
[08:37] *** camelia joined
[08:37] *** lue joined
[08:42] *** japhb__ joined
[08:42] *** chipdude joined
[08:43] *** nwc10 joined
[08:52] *** odc joined
[08:54] *** masak joined
[08:55] *** odc joined
[08:56] *** lue joined
[08:57] *** dagurval_ joined
[08:58] *** PerlJam joined
[09:03] *** woolfy left
[09:06] *** masak joined
[09:06] *** TimToady joined
[09:06] *** camelia joined
[09:11] *** _sri joined
[09:12] *** Util joined
[09:15] *** masak_ joined
[09:20] *** bibifuc_ joined
[09:24] *** TimToady joined
[09:26] *** japhb__ joined
[09:26] *** chipdude joined
[09:36] *** ingy2 joined
[09:48] *** lee joined
[10:05] *** camelia joined
[10:05] *** bibifuc_ joined
[10:05] *** masak joined
[10:05] *** Util joined
[10:05] *** timotimo joined
[10:05] *** cognominal joined
[10:05] *** Util joined
[10:05] *** bibifuc joined
[10:05] *** timotimo joined
[10:05] *** masak joined
[10:05] *** BinGOs joined
[10:08] <nwc10> Good *, #moarvm

[10:09] <diakopter> good

[10:09] <jnthn> o/ nwc10

[10:09] <FROGGS> morning

[10:46] *** ilbot3 joined
[10:47] <jnthn_> diakopter: What are the code ID and callsite ID? Just unique IDs for each one of them?

[10:51] <diakopter> yeah

[10:51] <diakopter> to be traced back to static frames and callsites within static frames, respectively

[10:52] <diakopter> er, the lines numbers and sub names and filenames associated with those things, I mean

[10:53] *** cognominal joined
[10:54] <diakopter> http://www.youtube.com/watch?v=WCqm4H3m3Ew

[10:59] <FROGGS> EYOUPOSTEDITTWICE

[10:59] <FROGGS> :P

[10:59] * FROGGS .oO( Dear Diamond Diamond Kopter... )

[10:59] *** bibifuc joined
[11:16] *** woolfy left
[11:21] *** timotimo joined
[11:23] *** lizmat joined
[11:35] *** harrow joined
[11:44] *** timotimo joined
[11:46] *** harrow joined
[11:53] *** bibifuc_ joined
[12:00] *** timotimo_ joined
[12:26] *** bibifuc joined
[13:13] *** _sri joined
[13:13] *** odc joined
[13:13] *** hoelzro_ joined
[13:13] *** flussence joined
[13:52] *** cognominal joined
[13:52] *** timotimo_ joined
[15:06] *** camelia joined
[15:06] *** lizmat joined
[15:15] *** jnap joined
[15:16] *** cognominal joined
[16:04] *** timo joined
[16:05] *** timo joined
[16:11] *** japhb__ joined
[16:11] *** chipdude joined
[16:21] *** ChanServ joined
[16:28] *** tweemo joined
[16:36] *** timo joined
[16:46] *** timo_ joined
[16:47] *** cognominal joined
[16:49] *** lue joined
[17:03] *** camelia joined
[17:12] *** timo_weechat joined
[18:03] *** timo1 joined
[18:10] *** lizmat joined
[18:12] *** lizmat joined
[18:21] <timotimo> i think i'll go ahead and do some little big int work now.

[18:21] <timotimo> i can't stand the low amount of moarvm commits recently :P

[18:27] <TimToady> timotimo++

[18:45] *** colomon joined
[18:52] <timotimo> diakopter: should i put the malloc for the mp_int * into the allocate 'method' of the P6bigint repr?

[18:53] <timotimo> that seems like the most sensible place to put it

[18:53] <diakopter> usually in the init

[18:53] <diakopter> the allocate is meant just be interaction with the gc/managed allocator

[18:53] <diakopter> wow, I've dropping lots lately

[18:54] <timotimo> oh, hm.

[18:54] <diakopter> what about init?

[18:54] *** woolfy joined
[18:55] <timotimo> what about it?

[18:55] <timotimo> it has the malloc in it now

[18:55] <diakopter> oh

[18:55] <timotimo> and in gc_free i put the free

[18:55] <diakopter> good

[18:55] <diakopter> the MVM_checked_free_null macro is convenient there

[18:56] <timotimo> i'll have a look

[18:58] <timotimo> i'm running into a coredump, thoughd

[18:58] <diakopter> eww

[19:00] *** krunen joined
[19:00] <TimToady> diakopter: now that moar is getting along pretty well, you see any big blockers for starting in on P5 interop sometime soon?

[19:00] <timotimo> er, a segfault

[19:00] <timotimo> MVM_repr_alloc_init seems to return a null pointer in the "i" slot

[19:00] <timotimo> does that mean using MVM_repr_alloc_init is not the right function to use?

[19:01] <diakopter> well in somes cases, init takes parameters, iirc, so yeah you'd want to split it up into calling the alloc and init separately

[19:01] <timotimo> i'm not using malloc wrong, right? body->i = malloc(sizeof(mp_int))?

[19:02] <diakopter> as long as ->i is pointer-sized, seems okay

[19:02] <diakopter> how are you testing it for being null?

[19:02] <timotimo> gdb

[19:02] <diakopter> hrm

[19:05] *** ChanServ joined
[19:05] *** FROGGS joined
[19:06] <timotimo> yeah, the malloc returns 0

[19:06] <japhb__> Is FOSDEM still going on, or is that over now?

[19:06] <lizmat> FOSDEM is over

[19:06] <timotimo> er, nope.

[19:06] <lizmat> was only Sat/Sun

[19:07] <FROGGS> o/

[19:07] <japhb__> Ah, OK.  Any rough ETA on video?

[19:07] <lizmat> Wendy and I just got home and unloaded the van

[19:07] <lizmat> check the FOSDEM website

[19:07] <lizmat> it was all done by the organization, not by any of the devroom people

[19:09] <japhb__> http://video.fosdem.org/2014/  # Gah, I was going to say "Yay, lots of videos!" and then I went "Boo, all named badly!" and "Wow, small files ... hmmm" finally ending with "Ah shucks, that top filename says it all."  :-(

[19:11] <japhb__> jnthn: Slide decks, pretty please with your choice of garnish on top?  ;-)

[19:11] <japhb__> Any other 6'ers/Moarvians give a talk?

[19:12] <japhb__> diakopter: Did you manage to create the slide deck for your talk before you got sick?

[19:12] <timotimo> i'm confused. it segfaults in a pretty benign looking mp_copy

[19:14] <timotimo> huh.

[19:14] <timotimo> in copy_to, would i need to check if the target object already has a mp_int allocated for it?

[19:15] <timotimo> well, copy_to isn't executed anyway.

[19:15] <timotimo> (before the segfault happens)

[19:31] <timotimo> whhhhyyyyyyy >:(

[19:35] <jnthn> ffs, the netsplits have made a real mess of my irssi windows...

[19:36] <jnthn> japhb__: I linked slides earlir on #perl6

[19:36] <japhb__> jnthn: Ah, sorry, I'm about a day backlogged there.

[19:36] <japhb__> I'll go look for them on my next mental break

[19:36] <japhb__> .oO( Hopefully not a psychotic one )

[19:37] <jnthn> japhb__: jnthn.net/papers/2014-fosdem-perl6-today.pdf

[19:38] <japhb__> Oh, thanks!

[19:38] <jnthn> ok, about time to get off the airport train...

[19:38] <jnthn> Probably back tomorrow, in the moments I can steal while teaching :)

[19:39] <timotimo> oh, hm

[19:40] <timotimo> i've been printing the result of (MVMP6bigint *) casting a P6Opaque that was merely containing a P6bigint

[19:40] <jnthn> &

[19:40] <timotimo> (ooc, why do we do that?)

[19:41] <timotimo> at least that tells me why i've been finding null pointers to be in the "i" slot

[19:49] <timotimo> okay, now i'm convinced i need help.

[19:50] <timotimo> it seems like get_boxed_ref is misbehaving quite radically

[19:52] <timotimo> diakopter: would you be so kind and check out the little_big_int branch? (you may need to have it overwritten when pulling or something)

[19:53] <timotimo> get_boxed_ref returns something that's not the mp_int i've been trying to build

[19:55] *** FROGGS joined
[19:56] *** benabik joined
[20:32] *** FROGGS joined
[21:22] <timotimo> diakopter: can you tell me why the objects that get created are a P6opaque rather than "just" a P6bigint? is that because they also have class-stuff?

[21:37] *** TimToady_ joined
[21:38] *** nwc10_ joined
[21:38] *** cxreg2 joined
[21:38] *** lee__ joined
[21:43] <timotimo> well, i suppose that's because it's a p6bigint boxed into a p6 class

[21:43] *** PerlJam joined
[21:43] <FROGGS> froggs@TL02L-R8RXTCW-linux:~/dev/MoarVM$ perl6-m -e 'my $fh = "/usr/bin/wc".IO.open(:p, :w); $fh.print("hello world\n"); $fh.close;'

[21:43] <FROGGS> 1       2      12

[21:43] <FROGGS> froggs@TL02L-R8RXTCW-linux:~/dev/MoarVM$ perl6-p -e 'my $fh = "/usr/bin/wc".IO.open(:p, :w); $fh.print("hello world\n"); $fh.close;'

[21:43] <FROGGS> 1       2      12

[21:43] <FROGGS> \o/

[21:43] <FROGGS> no segfault, just memleak!

[21:50] <FROGGS> here is the openpipe diff for everybody who is curious: https://gist.github.com/FROGGS/998bacca7b3d3abab644

[21:51] <FROGGS> next: read from a child's stdout and then get rid of mem leaks

[22:30] <timotimo> \o/

[22:31] <timotimo> i'm running into a situation where OBJECT_BODY(obj) inside get_bigint seems to return crap

[22:31] <timotimo> and i don't know enough about the stuff to figure out why it's going wrong

[22:32] <timotimo> (gdb) print *(MVMObject *)data

[22:32] <timotimo> $32 = {header = {owner = 0, flags = 0, size = 0, forwarder = 0x2f03d20, sc = 0x30000000000000},

[22:32] <timotimo> st = 0x0}

[22:45] *** harrow joined
[22:50] <jnthn> timotimo: I rather doubt data, if it's a thing passed into a REPR func, is an MVMObject

[22:51] <jnthn> It already *is* the object body

[22:56] *** jnthn joined
[23:16] <timotimo> yes it should be the body

[23:16] <timotimo> why did i think it would be that?

[23:30] *** cognominal joined
[23:31] <japhb__> jnthn: Got a chance to read your slides.  I really liked this new example, and how you ran with it.  The code was a little dense (pseudo-golfing idioms), but fun.

[23:32] <japhb__> And FWIW I've used the "factor out a special iterator into a private method that is used kinda like for" idiom and really like it.

[23:42] *** eternaleye joined
[23:55] <timotimo> jnthn: can you help me with my boxing trouble? :\

[23:56] *** jnap joined
[23:57] <timotimo> in the new little_big_int branch, you'll see that get_bigint is looking at a wrong offset or something?
