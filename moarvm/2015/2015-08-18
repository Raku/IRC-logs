[01:03] *** danaj joined
[05:14] *** ShimmerFairy joined
[05:47] *** brrt joined
[05:59] *** TEttinger joined
[06:02] *** brrt joined
[06:09] <brrt> good *

[06:14] <dalek> MoarVM: 8f82955 | (Jimmy Zhuo)++ | src/6model/containers.c:

[06:14] <dalek> MoarVM: fixed signal SEGV from RT #125371, now "my $a := $a; say $a" outputs (Mu)

[06:14] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8f829555e7

[06:14] <synbot6> Link:  https://rt.perl.org/rt3/Public/Bug/Display.html?id=125371

[06:17] <JimmyZ> m: my multi bar ($) { }; my sub foo () { my $q := bar($q); }; foo();

[06:17] <camelia> rakudo-moar 375435: OUTPUT«===SORRY!=== Error while compiling /tmp/ZpY4XuWPwY␤Cannot use variable $q in declaration to initialize itself␤at /tmp/ZpY4XuWPwY:1␤------>  ($) { }; my sub foo () { my $q := bar($⏏q); }; foo();␤    expecting any of:␤        argumen…»

[06:21] *** JimmyZ joined
[06:50] *** Ven joined
[06:57] *** camelia joined
[07:22] <brrt> JimmyZ: shouldn't that null container be a vmnull?

[07:25] <brrt> like, in the first place :-)

[08:20] *** zakharyas joined
[09:46] *** FROGGS_ joined
[09:47] <JimmyZ> brrt, I think it's not

[09:47] <brrt> no, it probably isnt

[09:47] <JimmyZ> it don't SEGGV if it is vmnull

[09:47] <brrt> but i think it ought to be?

[09:48] *** rurban_ joined
[09:48] <JimmyZ> I think it is not since regs in moarvm is not vmnull too.

[09:49] <JimmyZ> by default, it is NULL

[09:53] <timotimo> i think we use null vs vmnull to differentiate stuff that needs to be autoviv'd

[09:53] <timotimo> at least in some places

[10:14] <dalek> MoarVM/even-moar-jit: 66f2bf8 | brrt++ | src/jit/ (6 files):

[10:14] <dalek> MoarVM/even-moar-jit: Define argument registers

[10:14] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/66f2bf8df6

[10:52] *** Ven joined
[11:24] <brrt> i need to move use information calculation to the tiling step....

[11:25] <brrt> because we often address nodes deeply

[11:25] * brrt wonders how to manage the complexity of it all

[11:38] *** FROGGS joined
[11:50] <brrt> how... to fix it

[11:53] <dalek> MoarVM/even-moar-jit: efe423e | brrt++ | / (7 files):

[11:53] <dalek> MoarVM/even-moar-jit: WIP on compiling tiles

[11:53] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/efe423ee4a

[12:03] *** colomon_ joined
[12:07] *** colomon_ joined
[12:09] *** ShimmerFairy joined
[13:22] *** lizmat joined
[15:01] *** Util joined
[15:04] *** oetiker joined
[15:12] *** mtj_ joined
[16:33] *** ilbot3 joined
[17:11] *** camelia joined
[17:14] *** camelia joined
[17:19] *** camelia joined
[17:21] *** camelia joined
[17:47] *** zakharyas joined
[18:15] *** TEttinger joined
[19:09] <dalek> MoarVM/even-moar-jit: aedf261 | brrt++ | / (4 files):

[19:09] <dalek> MoarVM/even-moar-jit: Calculate usage information after tiling

[19:09] <dalek> MoarVM/even-moar-jit:

[19:09] <dalek> MoarVM/even-moar-jit: During tiling we change the tree, and only after tiling

[19:09] <dalek> MoarVM/even-moar-jit: do we know which values are really used during which

[19:09] <dalek> MoarVM/even-moar-jit: instructions. Hence usage information should really be

[19:09] <dalek> MoarVM/even-moar-jit: calculated post-tiling (except if ever used during

[19:09] <dalek> MoarVM/even-moar-jit: optimization, which is not currently the case).

[19:09] <dalek> MoarVM/even-moar-jit:

[19:09] <dalek> MoarVM/even-moar-jit: Also fixed a nasty bug I overlooked in tiling DO

[19:09] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/aedf261c4b
