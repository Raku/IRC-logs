[01:03] *** lizmat joined
[03:57] *** vendethiel joined
[04:45] *** TimToady joined
[06:08] *** vendethiel joined
[06:21] *** FROGGS joined
[06:34] *** lizmat joined
[06:40] *** vendethiel joined
[07:33] *** Ven joined
[07:55] *** Ven_ joined
[08:30] *** FROGGS joined
[09:43] *** brrt joined
[09:43] <brrt> \o

[09:43] * brrt is clearly missing sufficient brainpower to deal with moarvm this week

[09:44] *** zakharyas joined
[09:44] <brrt> also: laziness. i knew i should've taken ref of .o the moment i closed my laptop

[09:45] <brrt> sorry :-(

[09:45] <FROGGS> brrt: eat a snickers :o)

[09:46] <brrt> yeah, i suppose i'll do something like that

[10:11] *** Ven joined
[10:28] <jnthn> This morning so far: "Why is MSVC giving me an insane stacktrace?" "Hmm...gdb gives me the same impossible stack trace." "Gah, valgrind agrees and whines loudly." "Oh, it actually happens."

[10:45] <dalek> MoarVM: c14339c | jnthn++ | src/core/frame. (2 files):

[10:45] <dalek> MoarVM: Function to return without running exit handlers.

[10:45] <dalek> MoarVM:

[10:45] <dalek> MoarVM: Will be used from a Perl 6 ext-op that fakes up a frame in order to

[10:45] <dalek> MoarVM: run constraint checks under it, and then wants to tear it down. If we

[10:45] <dalek> MoarVM: do try to run the exit handlers in this case, we've got a frmae that

[10:45] <dalek> MoarVM: is not set up for it, and so get all manner of odd behavior.

[10:45] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c14339cec0

[11:24] <timotimo> interesting thing that happened

[11:25] <timotimo> that one there, i mean

[11:30] <arnsholt> jnthn: So much fun, one might think today's a monday! =)

[11:31] <nwc10> nooooooooo - I was hoping that the week is all downhill from here

[11:31] <nwc10> and this week has 5 working days in it

[11:31] <nwc10> (and so do all the following weeks, until the APW)

[11:31] <nwc10> (unless I burn up holiday)

[11:38] *** FROGGS joined
[12:01] *** Ven joined
[12:05] *** brrt joined
[12:05] <brrt> \o

[12:06] <brrt> a really evil stacktrace may be the result of being interrupted in a JIT frame

[12:28] <timotimo> src/strings/ops.c:26:19: warning: return type defaults to ‚Äòint‚Äô [-Wimplicit-int]

[12:28] <timotimo> MVM_STATIC_INLINE MVM_string_check_arg(MVMThreadContext *tc, MVMString *s, const char *operation) {

[12:28] <timotimo> i can fix this

[12:29] <dalek> MoarVM: f092e80 | timotimo++ | src/strings/ops.c:

[12:29] <dalek> MoarVM: MVM_string_check_arg is void, not (implicitly) int

[12:29] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f092e80c78

[12:36] *** Ven joined
[13:25] *** Ven joined
[13:51] <brrt> oh, timotimo, i've another pretty one

[13:51] <brrt> for the sp_get_* series

[13:51] <brrt> there's a difference between getting a signed and an unsigned byte/word/dword from memory

[13:52] <brrt> because you have to alternate between zero-extension (unsigned) and sign-extension moves

[13:54] <brrt> note to self

[13:54] <brrt> we need a conversion node in the expression tree

[13:59] *** JimmyZ_ joined
[14:13] <brrt> maybe the whole sp_get_* stuff isn't really worth it

[14:23] *** Ven joined
[14:39] *** Ven joined
[14:48] *** Ven joined
[14:49] * jnthn is closing in on which optimization busts the Test::CSV test suite

[14:49] <jnthn> Relax, it wasn't the exception ops :P

[14:53] <jnthn> darn, narrowed it down to findmeth...

[15:05] <jnthn> It seems that we spesh-time select the incorrect method.

[15:05] <jnthn> *an

[15:05] <jnthn> It's incredibly odd

[15:06] *** lizmat joined
[15:07] *** Ven joined
[16:19] *** lizmat joined
[16:24] <timotimo> right, i was thinking we might want signed and unsigned

[16:24] <timotimo> i'm not building all those for the jit, btw :)

[16:26] <japhb> jnthn: With the bugs you're finding, I'm starting to have "how did it ever work?" feelings.  That's a bit scary.

[16:27] <japhb> timotimo: p6weekly likely this week?

[16:28] <jnthn> japhb: Mostly they're rarely tried things or things that only happen in sufficiently rare circumstances that you go a long way without noticing them.

[16:30] <jnthn> Given the sorts of language features we're dealing with along with the optimizations we're performing, we do pretty well.

[16:30] *** mj41 joined
[16:30] <jnthn> Especially given the "budget" :)

[16:30] <japhb> Well sure.

[16:31] <jnthn> (Yes, I'm funded now, but wasn't for MoarVM work until now. :))

[16:31] <jnthn> (And others ain't.)

[16:31] <japhb> I know.  :-(

[16:31] <japhb> Wish I could change that.

[16:32] <jnthn> But yeah, this stuff's hard in places, and the analysis to really understand bugs and do proper fixes is time-consuming and needs a good deal of patience.

[16:33] <mj41> timotimo: p6weekly - my two "tips": https://github.com/mj41/Perl6-Analytics-results/blob/master/slides/mj41-brnopm-prev2.md and http://www.slideshare.net/michaljurosz1/perl-family-15-years-of-perl-6-and-perl-5

[16:37] <mj41> ohh, afk

[16:48] <timotimo> thanks, mj41 :)

[16:48] <timotimo> japhb: i was going to! but i'm procrastinating rather effectively :P

[16:53] * japhb wonders if there's a good song for procrastination ... maybe something riffing on Stevie Wonder's song "Superstition"

[16:55] <timotimo> a single song isn't nearly enough to procrastinate effectively

[16:56] <japhb> I guess I should have s/for/about/, since that's what I actually meant.

[16:57] <japhb> Songs *for* procrastination?  Comedy ones where you have to pay attention to lyrics.

[16:57] <timotimo> OK :)

[16:59] <arnsholt> Once again, I need to point out how nice the 6model code is to work with

[16:59] <arnsholt> Really, a gem among C APIs

[17:00] <timotimo> argh, i turned on the screen reader on my gnome3 and can't turn it back off

[17:00] <timotimo> it's woefully useless with weechat over ssh m)

[17:23] *** FROGGS joined
[17:34] <jnthn> timotimo: So if I type stuff, it'll say it? :)

[17:35] * jnthn goes for some dinner &

[17:35] <lizmat> m: my $a = "üç∫"; say ++$a; say --$a

[17:35] <camelia> rakudo-moar 14458a: OUTPUT¬´üçª‚ê§üç∫‚ê§¬ª

[17:36] <[Coke]> nice.

[17:37] <timotimo> more like: whenever i switch tabs or someone says something, it starts reading from the top

[17:38] <lizmat> m: my $a = "üê™"; say ++$a; say --$a

[17:38] <camelia> rakudo-moar 14458a: OUTPUT¬´üê´‚ê§üê™‚ê§¬ª

[17:38] <lizmat> just a bit of -Ofun :-)

[17:56] *** lizmat joined
[17:59] <FROGGS> m: say uninames "üê´üê™"

[17:59] <camelia> rakudo-moar 4f3687: OUTPUT¬´BACTRIAN CAMEL DROMEDARY CAMEL‚ê§¬ª

[17:59] <FROGGS> can't see them :o(

[18:00] <lizmat> :-(

[18:04] <timotimo> me neiter :(

[18:04] <timotimo> they look like whitespace to me ;\

[18:06] <lizmat> ah...  they look fine on my MBP   :)

[18:06] <japhb> And here on Ubuntu LTS.

[18:06] <lizmat> .u üçªüç∫

[18:06] <lizmat> m: say uninames "üçªüç∫"

[18:06] <camelia> rakudo-moar 4f3687: OUTPUT¬´CLINKING BEER MUGS BEER MUG‚ê§¬ª

[18:06] <japhb> Though a lot of these want to be fullwidth, and they get stuffed in narrow columns, thus overlapping

[18:55] <jnthn> I don't see them well on IRC, but my iPhone renders 'em nice :)

[19:04] *** dagurval joined
[19:29] *** Peter_R joined
[19:51] *** lizmat joined
[19:56] *** lizmat_ joined
[20:33] *** colomon joined
[21:06] *** sivoais joined
[21:15] *** Ven joined
[21:37] *** colomon joined
[21:46] *** lizmat joined
