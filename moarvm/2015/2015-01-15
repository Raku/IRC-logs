[00:05] *** ggoebel111111117 joined
[01:54] *** colomon joined
[03:58] *** colomon joined
[04:27] *** vendethiel joined
[05:09] *** vendethiel joined
[05:43] *** vendethiel joined
[06:10] *** vendethiel joined
[06:56] *** vendethiel joined
[07:24] <dalek> MoarVM: e81b97d | (Jimmy Zhuo)++ | src/spesh/graph.h:

[07:24] <dalek> MoarVM: reorder struct in MVMSpeshOperand

[07:24] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e81b97dc74

[07:24] <dalek> MoarVM: ed63097 | (Jimmy Zhuo)++ | src/ (9 files):

[07:24] <dalek> MoarVM: avoid call MVM_callsite_get_common twice

[07:24] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ed6309714f

[07:29] <dalek> MoarVM: 2bce4e5 | (Jimmy Zhuo)++ | src/core/coerce.c:

[07:29] <dalek> MoarVM: removed unused code

[07:29] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2bce4e5d42

[07:52] *** FROGGS joined
[07:56] *** zakharyas joined
[08:03] <jnthn> JimmyZ: e81b97d is senseless, not to mention weird

[08:03] <jnthn> The notation in the literature is always orig with i as a subscript.

[08:05] <nwc10> jnthn: not knowing that, it looks initially reasonable, if one assumes that a reasonable approach to avoiding alignment holes on structures is to order them with biggest things first (unless some other reason pre-empts that)

[08:06] <nwc10> also, why is SSA-computed version signed?

[08:30] *** brrt joined
[08:32] *** vendethiel joined
[08:51] *** rurban joined
[09:00] <jnthn> nwc10: Yeah but there are 64-bit things in the union.

[09:00] <jnthn> So the hole is not making things any worse.

[09:01] <jnthn> Signed? Good question, quite possibly because -1 is used as a sentinel...or was going to be.

[09:04] <nwc10> not sure whether one ends up with more bugs as a result of negative values accidentally becoming array subscripts, or unsigned "all bits set" not being transfered "correclty" to larger integer types

[09:05] <jnthn> I should check if it ended up using the -1 in such a way

[09:05] <jnthn> If not it can become unsigned

[09:09] <JimmyZ> jnthn: Do I still need to revert it?

[09:09] <jnthn> It just feels like a really pointless patch :/

[09:09] <jnthn> It achieves nothing.

[09:09] <jnthn> Except wasting my time reviewing it.

[09:10] <JimmyZ> sorry :(

[09:18] <jnthn> ed6309714f is sensible overall, though I'd have preferred to see the various extracting of tc->cur_frame to a local in a separate patch.

[09:19] <jnthn> In most cases it's "obviously correct", but in some places ti's in code that is messing with which frame is the current frame. I think it's correct where it's been done, however.

[09:29] <JimmyZ> jnthn: Thanks  for review. I did take a care of right time about extracting of tc->cur_frame.

[09:30] <jnthn> Yeah. It's one of those times where it's borderline whether it's better to extract it, or to do the "obviously correct" thing and leave the compiler's CSE to try and take care of it.

[09:31] <jnthn> (In the unwind/exception run cases where such a refactor could be delicate, I mean)

[09:34] <JimmyZ> I objdumped libmoar.so and found gcc doesn't do CSE to tc->cur_frame->xxxx =  yyyy; the tc->cur_frame part. at least O1 doesn't

[09:35] <JimmyZ> -O1

[09:35] <JimmyZ> so I did some extracting

[09:39] *** kjs_ joined
[10:05] *** zakharyas joined
[11:38] *** colomon joined
[14:24] *** woolfy left
[14:27] *** woolfy joined
[17:10] *** rurban joined
[18:12] *** tgt joined
[18:51] *** kjs_ joined
[19:16] <TimToady> m: for <aa aba> xx 50 { if not m/b/ { print "."; next }; print "!"; }; say "";

[19:16] <camelia> rakudo-moar 9c74ab: OUTPUT«.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!............................................␤»

[19:17] <TimToady> spesh bug

[19:17] <TimToady> but not jit, inline, or osr

[19:19] <TimToady> removing the not fixes it

[19:19] <TimToady> changing the control flow to if/else fixes it

[19:19] <TimToady> using unless instead of 'if not' fixes it

[19:20] <TimToady> it's quite picky :)

[19:21] <TimToady> well, you can change the 'not' to '!' and it still breaks, anyway

[19:22] <TimToady> m: for <aa aba> xx 50 { if m/b/ { print "."; next }; print "!"; }; say "";

[19:22] <camelia> rakudo-moar 9c74ab: OUTPUT«!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.␤»

[19:22] <TimToady> m: for <aa aba> xx 50 { if not not m/b/ { print "."; next }; print "!"; }; say "";

[19:22] <camelia> rakudo-moar 9c74ab: OUTPUT«!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!␤»

[19:23] <TimToady> hmm

[19:23] <TimToady> m: for <aa aba> xx 50 { if not not not m/b/ { print "."; next }; print "!"; }; say "";

[19:23] <camelia> rakudo-moar 9c74ab: OUTPUT«.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!............................................␤»

[19:23] <TimToady> m: for <aa aba> xx 50 { if not not not !m/b/ { print "."; next }; print "!"; }; say "";

[19:23] <camelia> rakudo-moar 9c74ab: OUTPUT«!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!␤»

[19:25] *** kjs_ joined
[19:46] *** FROGGS joined
[19:58] *** rurban joined
[20:03] *** kjs_ joined
[20:33] * timotimo ducks

[21:01] * FROGGS quacks

[21:02] * lizmat doctor

[21:14] *** vendethiel joined
[21:36] <tgt> TimToady: Reverting https://github.com/rakudo/rakudo/commit/661439a595e6b65a306ac01d445cb38966382ef2 fixes that issue. No idea why, I just let git bisect lose on it.

[21:37] <timotimo> i KNEW it'd be my fault :)

[21:51] <lizmat> FWIW, I would think only the Mu candidates need reverting

[21:52] <lizmat> timotimo: something should have ticked you off, because you could optimize that further by removing the Bool candidates :-)

[21:52] <timotimo> oh

[21:53] * lizmat is a great fan of lining out similar code

[21:53] <lizmat> you would have seen it then

[22:02] <jnthn> I'd probably not revert the Rakudo patch if it's clearly a VM-level issue

[22:03] <jnthn> Should fix the spesh bug instead.

[22:04] <lizmat> fg

[22:05] <lizmat> oops

[22:36] *** kjs_ joined
[22:46] *** nebuchad` joined
[22:47] *** moritz_ joined
[22:47] *** Util_ joined
[22:49] *** bonsaikitten joined
[22:49] *** btyler joined
[22:51] *** BinGOs_ joined
[22:51] *** sivoais_ joined
[22:53] *** ggoebel111111117 joined
[22:53] *** tadzik joined
[22:53] *** ingy joined
[22:53] *** daxim joined
[22:53] *** jnthn joined
[22:53] *** leedo_ joined
[22:54] *** BinGOs joined
[22:54] *** harrow` joined
[22:54] *** pyrimidine joined
[22:54] *** vendethiel- joined
[23:03] *** ilbot3 joined
[23:05] *** leedo joined
[23:05] *** camelia joined
[23:05] *** flussence joined
[23:05] *** dalek joined
[23:05] *** JimmyZ joined
[23:06] *** btyler joined
[23:07] *** arnsholt joined
[23:09] *** tadzik joined
[23:10] *** ingy joined
[23:12] *** dalek joined
[23:12] *** moritz joined
[23:12] *** jnthn joined
[23:12] *** nwc10 joined
[23:12] *** pyrimidine joined
[23:12] *** harrow` joined
[23:12] *** ggoebel111111118 joined
[23:12] *** sivoais joined
[23:13] *** 18VABY4HM joined
[23:13] *** daxim joined
[23:13] *** TimToady joined
[23:13] *** FROGGS joined
[23:13] *** synopsebot joined
[23:23] *** 77CAABZU1 joined
[23:23] *** 1JTAABMSD joined
[23:35] *** 64MABRKDD joined
[23:35] *** 7YUAAFL3J joined
[23:46] *** sivoais joined
[23:49] *** sivoais_ joined
