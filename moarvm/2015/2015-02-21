[00:01] *** kjs_ joined
[00:34] *** kjs_ joined
[00:54] *** xiaomiao joined
[01:57] <timotimo> note to self: find out if we can directly invoke or even inline postcircumfix:<( )> for classes that offer it

[02:16] *** TimToady joined
[02:38] *** TimToady joined
[02:53] *** TimToady joined
[07:44] <FROGGS_> timotimo: the sounds a bit like the boolspec... do we need an invokespec?

[08:35] *** rurban joined
[09:33] <jnthn> timotimo: The invokespec hangs off the STable, so yes

[09:33] <jnthn> timotimo: I'd just turn it into a normal invoke and leave the inlining decison to the existing inlining code.

[09:34] <jnthn> I've been pondering that we may go and hang native calling off invoke spec too.

[09:35] <jnthn> But need to think about that a bit more.

[10:34] *** kjs_ joined
[10:48] *** FROGGS[mobile] joined
[11:13] *** kjs_ joined
[12:13] *** FROGGS_ joined
[12:22] *** kjs_ joined
[12:56] *** ggoebel111111114 joined
[14:18] <FROGGS_> I like it:

[14:18] <FROGGS_> $ perl6-m -e 'use NativeCall; say nqp::nativecallsizeof(nqp::decont(long))' # 64

[14:18] <FROGGS_> $ perl6-m -e 'use NativeCall; class Foo is repr<CStruct> { has long $.foo; has int8 $.bar }; say nqp::nativecallsizeof(nqp::decont(Foo))' # 72

[14:18] <FROGGS_> $ perl6-m -e 'use NativeCall; class Foo is repr<CStruct> { has int8 $.foo; has long $.bar }; say nqp::nativecallsizeof(nqp::decont(Foo))' # 128

[14:20] <timotimo> oooooh

[14:21] <timotimo> i didn't know we could do such a thing!

[14:21] <timotimo> btw, i'm still seeing cases where the profile says "we're not allocating a lot of stuff" but there's multiple gc runs

[14:21] <timotimo> i'll try to investigate

[14:22] <dalek> MoarVM/sizeof: cad876f | FROGGS++ | src/6model/reprs/CStruct.h:

[14:22] <dalek> MoarVM/sizeof: make clear what strict_size is about

[14:22] <dalek> MoarVM/sizeof: review: https://github.com/MoarVM/MoarVM/commit/cad876f9fd

[14:22] <dalek> MoarVM/sizeof: dc0bd10 | FROGGS++ | / (8 files):

[14:22] <dalek> MoarVM/sizeof: implement nativecallsizeof of

[14:22] <dalek> MoarVM/sizeof: review: https://github.com/MoarVM/MoarVM/commit/dc0bd10218

[14:23] <FROGGS_> struct_size', dang

[14:41] <jnthn> FROGGS_: Mebbe set the decont flag on the nqp::op when registering it

[14:41] <jnthn> FROGGS_++ for working on it

[14:45] <FROGGS_> jnthn: ohh? we could do that for nativecast too then

[14:46] <jnthn> aye

[15:07] <dalek> MoarVM/sizeof: c314d3d | FROGGS++ | src/core/nativecall.c:

[15:07] <dalek> MoarVM/sizeof: return number of bytes from MVM_nativecall_sizeof

[15:07] <dalek> MoarVM/sizeof: review: https://github.com/MoarVM/MoarVM/commit/c314d3dffc

[15:14] *** zakharyas joined
[16:43] *** tadzik joined
[17:41] *** kjs_ joined
[18:14] *** dsm left
[18:47] *** colomon joined
[19:40] *** zakharyas joined
[20:12] *** kjs_ joined
[20:33] *** mj41 joined
[20:43] *** LLamaRider joined
[20:49] *** zakharyas joined
[21:26] <dalek> MoarVM/sizeof: b1640b8 | FROGGS++ | src/6model/reprs/CStruct.c:

[21:26] <dalek> MoarVM/sizeof: round up struct_size to the multiple of its biggest elem

[21:26] <dalek> MoarVM/sizeof: review: https://github.com/MoarVM/MoarVM/commit/b1640b854f

[21:29] <dalek> MoarVM/cpp: 4451797 | FROGGS++ | src/6model/reprs/CStruct.c:

[21:29] <dalek> MoarVM/cpp: round up struct_size to the multiple of its biggest elem

[21:29] <dalek> MoarVM/cpp: review: https://github.com/MoarVM/MoarVM/commit/4451797a79

[21:29] <dalek> MoarVM/cpp: 4cb69bc | FROGGS++ | src/core/nativecall.c:

[21:29] <dalek> MoarVM/cpp: use fixed struct_size provided by CStruct repr

[21:29] <dalek> MoarVM/cpp: review: https://github.com/MoarVM/MoarVM/commit/4cb69bc325

[22:07] <dalek> MoarVM: cad876f | FROGGS++ | src/6model/reprs/CStruct.h:

[22:07] <dalek> MoarVM: make clear what strict_size is about

[22:07] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/cad876f9fd

[22:07] <dalek> MoarVM: dc0bd10 | FROGGS++ | / (8 files):

[22:07] <dalek> MoarVM: implement nativecallsizeof of

[22:07] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/dc0bd10218

[22:07] <dalek> MoarVM: c314d3d | FROGGS++ | src/core/nativecall.c:

[22:07] <dalek> MoarVM: return number of bytes from MVM_nativecall_sizeof

[22:07] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c314d3dffc

[22:07] <dalek> MoarVM: b1640b8 | FROGGS++ | src/6model/reprs/CStruct.c:

[22:07] <dalek> MoarVM: round up struct_size to the multiple of its biggest elem

[22:07] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b1640b854f

[23:18] *** lizmat_ joined
[23:20] *** flussence joined
