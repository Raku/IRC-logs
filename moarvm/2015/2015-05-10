[03:45] *** FROGGS_ joined
[03:51] *** vendethiel joined
[06:19] *** vendethiel joined
[06:24] *** lizmat joined
[06:48] *** FROGGS[mobile] joined
[06:55] *** lizmat_ joined
[07:56] *** lizmat joined
[09:06] *** lizmat joined
[09:06] *** vendethiel joined
[09:15] *** rurban joined
[09:26] *** FROGGS[mobile] joined
[10:59] *** lizmat joined
[11:00] *** vendethiel joined
[12:10] *** lizmat joined
[14:04] *** agentzh_ joined
[15:07] *** FROGGS[mobile] joined
[15:24] *** tadzik joined
[15:25] *** lizmat joined
[15:31] *** agentzh_ joined
[15:55] *** agentzh_ joined
[16:37] *** zakharyas joined
[17:41] *** zakharyas joined
[19:00] <FROGGS> I think I found a codegen bug :o(

[19:01] <TimToady> \o/

[19:01] <FROGGS> a 'bitand_i' op that I emit in the charrange method in the regex compiler ends up being a no_op

[19:02] <FROGGS> that is, I see that no_op in the --dump

[19:13] <FROGGS> AHHHHHHHHHHHHHH

[19:13] <TimToady> \o/?

[19:13] <FROGGS> m: say "a" ~~ /:i <[b..c]>/

[19:13] <camelia> rakudo-moar a040b1: OUTPUT«Nil␤»

[19:13] <FROGGS> m: say "d" ~~ /:i <[b..c]>/

[19:13] <camelia> rakudo-moar a040b1: OUTPUT«｢d｣␤»

[19:13] <FROGGS> -.-

[19:14] *** zakharyas joined
[19:14] <FROGGS> it was not a code gen bug, it was a bug in the person wo wrote the code that I just copied

[19:15] <vendethiel> lol

[19:15] <vendethiel> well :-)

[19:15] * FROGGS is not smart when he copies old bugs from his self

[19:15] <FROGGS> https://github.com/perl6/nqp/blob/master/src/vm/moar/QAST/QASTRegexCompilerMAST.nqp#L541

[19:15] <FROGGS> this op should read 'band_i'

[19:16] *** agentzh_ joined
[19:16] <FROGGS> so beware, typos there are just translated to no_op

[19:26] <nwc10> is there a reason why it's that way?

[19:26] <FROGGS> no idea

[19:26] <nwc10> It seems LTA to silenty carry on, but I'm wondering if there's a particular bootstrapping (or something) use case that the behaviour makes easier

[19:32] <FROGGS> hmmm, I am unable to find the place where we translate op names to their index...

[19:33] <dalek> MoarVM/ignoremark: d0f139b | FROGGS++ | src/6model/reprs/NFA.c:

[19:33] <dalek> MoarVM/ignoremark: remove debug output

[19:33] <dalek> MoarVM/ignoremark: review: https://github.com/MoarVM/MoarVM/commit/d0f139b99f

[19:39] <dalek> MoarVM/ignoremark: 99435bf | FROGGS++ | src/6model/reprs/NFA.c:

[19:39] <dalek> MoarVM/ignoremark: fix leftover from refactoring ignoremark in NFA

[19:39] <dalek> MoarVM/ignoremark: review: https://github.com/MoarVM/MoarVM/commit/99435bf353

[20:38] <dalek> MoarVM: 4c35019 | FROGGS++ | / (10 files):

[20:38] <dalek> MoarVM: implement ordbaseat and eqatim_s for ignoremark

[20:38] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/4c35019653

[20:38] <dalek> MoarVM: c985680 | FROGGS++ | src/core/interp.c:

[20:38] <dalek> MoarVM: chars are not equal beyond end of string

[20:38] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c98568024a

[20:38] <dalek> MoarVM: f63f1c5 | FROGGS++ | src/6model/reprs/NFA.c:

[20:38] <dalek> MoarVM: remove debug output

[20:38] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f63f1c5255

[20:38] <dalek> MoarVM: 65c89e7 | FROGGS++ | src/6model/reprs/NFA.c:

[20:38] <dalek> MoarVM: fix leftover from refactoring ignoremark in NFA

[20:38] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/65c89e731e

[20:46] <FROGGS> is that new?

[20:46] <FROGGS> src/jit/graph.c: In function ‘jgb_consume_reprop’:

[20:46] <FROGGS> src/jit/graph.c:767:21: warning: pointer type mismatch in conditional expression [enabled by default]

[20:46] <FROGGS> : ((MVMObject*)type_facts->type)->st->REPR->pos_funcs.at_pos;

[20:48] <timotimo> FROGGS: yes, it's due to the jit_devirtualize_reprop branch merge; jnthn fixed it to not bust the msvc build any more, but that causes this warning

[20:49] <FROGGS> ahh

[20:58] *** colomon joined
[21:14] *** cygx joined
[21:14] <cygx> o/

[21:15] <cygx> FROGGS: you get rid of the warning, you need to add a cast (void *) after both ? and :

[21:15] <FROGGS> cygx: that's what I think too

[21:16] <cygx> FROGGS: it's actually mandatory as function pointers don't auto-convert to void*

[21:17] <cygx> I suspect that goes back to segmented memory modes where function pointers could be FAR

[21:18] * FROGGS turns on his Windows machine Justin Case

[21:21] <timotimo> 224637    FROGGS │ src/jit/graph.c:767:21: warning: pointer type mismatch in conditional expression [enabled by

[21:22] <timotimo> sorry

[21:22] <timotimo> cat on mouse pad

[21:23] <FROGGS> that how it is meant to be :o)

[21:29] <dalek> MoarVM: fe125e5 | FROGGS++ | src/jit/graph.c:

[21:29] <dalek> MoarVM: silence warning about pointer type mismatch

[21:29] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fe125e5052

[22:01] *** cygx left
[22:18] *** jepeway joined
[22:46] *** lizmat joined
[23:15] *** danaj joined
[23:45] *** agentzh_ joined
