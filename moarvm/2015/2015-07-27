[00:32] *** dalek joined
[01:19] *** ggoebel joined
[01:30] *** TEttinger joined
[01:46] *** dalek joined
[01:47] *** JimmyZ joined
[01:47] *** avuserow joined
[01:48] *** Util joined
[01:48] *** [Coke] joined
[01:48] *** sergot joined
[01:48] *** masak joined
[01:48] *** PerlJam joined
[01:48] *** psch joined
[02:11] *** colomon joined
[02:14] *** colomon_ joined
[02:19] *** colomon_ joined
[02:25] *** colomon_ joined
[02:30] *** colomon_ joined
[02:34] *** colomon_ joined
[02:37] *** colomon joined
[02:42] *** colomon joined
[02:45] *** colomon_ joined
[06:53] *** FROGGS joined
[06:53] <FROGGS> o/

[06:54] <nwc10> \o

[06:56] *** zakharyas joined
[07:01] <jnthn> o/

[07:02] <nwc10> jnthn: never mind the 10 minute commute, is the curry good? :-)

[07:02] *** rurban joined
[10:52] <timotimo> i hope jnth's teachings go well today :)

[11:18] <jnthn> nwc10: No curry yet :)

[11:18] <jnthn> Last night was beer and burger

[11:19] <jnthn> Maybe curry tonight :)

[11:19] <jnthn> But certainly curry at end of week ocne I'm back home...

[11:19] * jnthn has a long list of curry recipes he wants to try cooking

[13:09] *** ggoebel joined
[13:40] *** JimmyZ_ joined
[14:04] *** _longines joined
[14:56] *** brrt joined
[14:57] <brrt> \o

[14:58] <nwc10> o/

[14:58] <brrt> i just had a *horrible* road trip

[14:58] <nwc10> oh :-(

[15:00] <tadzik> :(

[15:00] <brrt> actually, train trip

[15:00] <brrt> dunno why i sad road trip

[15:02] <brrt> anyway, can you help me with something? i still need to represent the 3d array efficiently

[15:02] <brrt> oh, and another problem; i need to prune rulesets, and earlier = better

[15:06] <brrt> for pruning, i currently have no good solution other than the idea that it'll have something to do with topological sort

[15:06] <brrt> (early pruning, that is)

[15:07] <brrt> for the 3d array, i was thinking of having a linear array of 3 integers and using binary search

[15:10] <brrt> that's not the most space efficient way to do it, but it'll be very easy to implement

[15:19] <brrt> pruning (late) reduces 17003 rules to 1202

[15:50] <timotimo> i put the "run" in "prune"

[15:56] <[Coke]> You can't spell prune without a pun.

[16:02] *** rurban joined
[17:58] *** zakharyas joined
[18:32] <jnthn> .oO( I put in the prune and got runs... )

[18:42] *** FROGGS joined
[19:36] *** zakharyas joined
[19:49] *** brrt joined
[19:51] <brrt> hmm... i think i have a strategy for 'early' pruning

[19:51] <brrt> what's the difference? oh, why not, i'll explain

[19:52] <brrt> (what's the use? currently the table construction algorithm is O(m*n^2), n = number of rules, m = number of IR tree node types

[19:52] <brrt> actually, that's wrong

[19:54] <brrt> n = number of rule*sets*, which are combinations-of-rules; given any tree node type (head) with i matching rules, we have 2^i combinations

[19:54] <brrt> but many of those 2^i combinations are 'invalid', i.e. are never generated

[19:57] <brrt> now, a simple way to figure out which sets *are* generated is by generating the entire table and picking all rulesets from those

[19:57] <brrt> but of course, by then i've already done my million-or-so iterations

[19:58] <brrt> so what is needed is a way to figure out all the rulesets generated by the grammar without generating the entire ruleset-table

[20:00] <brrt> first observation: the tiler table maps heads with specific children-states to new rulesets-states

[20:00] <brrt> hence, only rulesets with the same head can combine

[20:12] <brrt> hmm

[20:32] <dalek> MoarVM/even-moar-jit: e165986 | brrt++ | tools/tiler-table-generator.pl:

[20:32] <dalek> MoarVM/even-moar-jit: Add rule pruning, making the table much smaller

[20:32] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/e16598633a

[20:44] <dalek> MoarVM/even-moar-jit: 499d4c2 | timotimo++ | / (12 files):

[20:44] <dalek> MoarVM/even-moar-jit: add special support for nativecallinvoke to profiler

[20:44] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/499d4c2eff

[20:44] <dalek> MoarVM/even-moar-jit: b0e6608 | timotimo++ | src/profiler/profile.c:

[20:44] <dalek> MoarVM/even-moar-jit: fix output of profiler wrt. native function names

[20:45] *** dalek joined
[21:53] *** colomon_ joined
[21:58] *** colomon joined
