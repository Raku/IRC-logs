[01:08] *** TimToady joined
[03:34] *** jepeway joined
[04:07] *** vendethiel joined
[04:49] *** vendethiel joined
[06:01] *** harrow joined
[06:09] *** vendethiel joined
[07:00] *** FROGGS joined
[07:03] *** vendethiel joined
[07:04] *** Ven joined
[07:20] *** FROGGS joined
[07:54] *** zakharyas joined
[08:07] *** colomon joined
[08:12] *** Ven joined
[08:12] <FROGGS> ha!

[08:13] <FROGGS> why does push_X in interp.c has MVM_SC_WB_OBJ while unshift does not?

[08:13] <FROGGS> jnthn: commenting out that MVM_SC_WB_OBJ for push_X makes push work...

[08:13] <FROGGS> the question is: what does that mean?

[08:15] *** vendethiel joined
[08:18] *** Ven joined
[08:58] *** vendethiel joined
[09:00] *** colomon joined
[09:55] *** vendethiel joined
[10:28] *** FROGGS joined
[10:47] *** Ven_ joined
[10:51] *** FROGGS joined
[12:16] *** brrt joined
[12:25] *** vendethiel joined
[12:27] <masak> FROGGS: well, it's a write barrier, but you probably know that already.

[12:28] <masak> FROGGS: at a guess, removing the write barrier "makes push work" within quotes because there is some race that could be triggered but that you're not triggering.

[12:29] <masak> FROGGS: the only reason I could see unshift not needing a wb is if it does everything completely safely by atomically moving the pointer to the array itself. but more likely that's just an oversight, and a race waiting to happen.

[12:29] <FROGGS> I just wonder why/how hitting a write barrier makes my playing cards building collapse

[12:30] <masak> that is a really good question.

[12:30] <FROGGS> and I dont understand enough about that topic

[12:32] <FROGGS> I mean, I dont understand how hitting a WB has an influence of (dis)owning objects on an SC

[12:53] *** Ven_ joined
[13:05] <brrt> FROGGS, silly question, does it still collapse on MVM_JIT_DISABLE=1

[13:06] <brrt> :-)

[13:06] <brrt> because the JIT also does direct sc access

[13:06] <FROGGS> I disabled spesh yesterday and that did not change anything

[13:07] <brrt> ah well

[13:07] <brrt> shame

[13:08] <FROGGS> and it is nice that it is not a spesh or jit(ter)bug

[13:09] <brrt> well, yes :-)

[13:09] <nwc10> FROGGS: is the testcase more than a branch in the 3 repositories?

[13:11] <FROGGS> nwc10: no, it is exactly that

[13:11] <FROGGS> nwc10: jsoff in all three, then running: perl6 ser.pl thrice

[13:11] <FROGGS> "thrice"

[13:15] <FROGGS> hmmmm, does that mean that I do not clear the SC ownership correctly?

[13:15] <FROGGS> so that MVM_get_idx_of_sc still reports something > 0 for my (meant to be) disowned objects

[13:15] <FROGGS> okay, I've got something to look at

[13:23] <FROGGS> hmmm no, I'm doing that right

[13:24] <FROGGS> so if the thing I am pushing to was one of the objects of my SC, the WB code would be (correctly) a noop

[13:33] *** FROGGS joined
[13:41] <FROGGS> hmmm, how does one translate fremdsch√§men...

[13:42] <nebuchadnezzar> FROGGS: https://en.wiktionary.org/wiki/fremdsch%C3%A4men

[13:42] <nebuchadnezzar> ?

[13:42] <FROGGS> ohh, it actually is a word...

[13:43] <FROGGS> nebuchadnezzar: that expresses my feelings at the workshop right now

[13:44] <nebuchadnezzar> erf, so you are embarrassed because someone else embarrassed himself witout noticing it

[13:45] <nebuchadnezzar> I may you that work for our french deputies, but I'm more ashamed by the whole country :-/

[13:49] <FROGGS> nebuchadnezzar: the current speaker seems to be on another level than the audience it seems

[13:49] <FROGGS> it is hard to put in words

[13:50] <nebuchadnezzar> I think I see, he does not notice that nobody follows his explanation because it's too high level, or something like that

[13:54] <FROGGS> nebuchadnezzar: sort of, the audience now asks: why are you doing that? what is its goal? what problems do you want to solve?

[13:54] <FROGGS> and it is getting more strange every minute it goes

[14:22] <nwc10> FROGGS: ser.pl under valgrind produces no errors

[14:22] <timotimo> right; that's not the failure mode, though :(

[14:22] <nwc10> (run 3 times, "version skew" error on third run

[14:22] <nwc10> also, FROGGS++ is up on stage currently

[14:22] <nwc10> so might be a bit slow in replying :-)

[14:23] <timotimo> FROGGS: there ought to be an SC WB in all "put something into a list" instructions

[14:23] <timotimo> the SC WB triggers reposession, AFAIK

[14:43] *** vendethiel joined
[14:48] <jnthn> FROGGS: See src/6model/6model.h:157; clearing the SC is a bit more involved than just setting sc_idx to 0, also idx needs to be, and see the bit in the #ifdef two which may give somehting to NULL, barrier, and free

[14:48] <jnthn> Uh, darn, that'll still be a data race

[15:12] <FROGGS> ohh, MVM_USE_OVERFLOW_SERIALIZATION_INDEX is actually defined

[15:13] <jnthn> :)

[15:13] <FROGGS> I totally missed that

[15:14] <FROGGS> ohh no, it isnt

[15:30] *** vendethiel joined
[15:59] <FROGGS> okay, setting sc_idx *and* idx to zero does not improve it much :o(

[16:02] <japhb> FROGGS: What did you give a talk on?  (nwc10 mentioned you were on stage earlier)

[16:03] <FROGGS> japhb: Perl5 XS, XSpp, SWIG and NativeCall

[16:04] <japhb> FROGGS: Ooh, nice.  Slides?

[16:05] <timotimo> i surely hope NativeCall made a good impression

[16:05] <timotimo> even though we still don't have arrays inside chars ;(

[16:05] <timotimo> structs*

[16:06] <japhb> We have AoS but not SoA?

[16:07] <timotimo> %)

[16:22] *** tadzik joined
[16:38] *** vendethiel joined
[17:24] *** FROGGS joined
[18:08] <timotimo> oh, wait, that was serious and you meant "Array of Struct" and "Struct of Arrays" rather than "Array of String" and "String of Array"

[18:09] <timotimo> the problem is that we don't have a way to say "this in-line array has a size of $n" yet

[18:09] <FROGGS> right, that's blocking it

[18:20] <timotimo> i'm close to just saying "fuck it" and implement *something* that brings us closer

[18:20] <FROGGS> :o)

[18:20] <timotimo> "well, you have to be root and load this textfile into /dev/mem and then use the sha256sum of your kenrel config as the name of the class, but then it works!"

[18:21] <timotimo> "also, it only works if the in-line array has a prime number of elements in it"

[18:21] <timotimo> "on a friday"

[18:23] <FROGGS> "but not this friday"

[18:25] <timotimo> so basically, if i put a trait "is inline-array-size['@!foobar', 10]" on the class, that'd be a workable first step so that we can at least experiment with the rest?

[18:47] *** Peter_R joined
[18:49] *** danaj joined
[18:49] *** colomon joined
[18:50] *** harrow joined
[19:19] *** danaj joined
[19:22] *** lizmat joined
[19:30] *** Peter_R joined
[19:48] *** Peter_R joined
[19:53] *** lizmat_ joined
[19:54] *** Peter_R joined
[20:01] *** lizmat_ joined
[20:05] *** rurban joined
[20:33] *** colomon joined
[20:50] *** brrt joined
[20:56] *** Peter_R joined
[21:05] *** lizmat_ joined
[21:09] *** lizmat__ joined
[21:39] *** colomon joined
[21:49] *** Peter_R joined
[23:11] *** vendethiel joined
