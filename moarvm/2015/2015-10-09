[01:47] *** ilbot3 joined
[02:08] *** tokuhirom joined
[02:23] *** vendethiel joined
[02:43] *** leedo joined
[06:09] *** FROGGS[mobile] joined
[06:24] *** FROGGS joined
[06:35] *** domidumont joined
[06:39] *** Ven joined
[07:25] *** zakharyas joined
[07:41] *** Ven joined
[07:45] *** sivoais joined
[07:55] *** sivoais joined
[08:06] *** sivoais joined
[08:16] *** sivoais joined
[08:25] *** domidumont joined
[08:26] *** sivoais joined
[08:36] *** sivoais joined
[08:46] *** sivoais joined
[08:56] *** sivoais joined
[09:06] *** sivoais joined
[09:12] *** domidumont joined
[09:15] <dalek> MoarVM: bee5299 | jnthn++ | src/strings/ops.c:

[09:15] <dalek> MoarVM: Toss a dead macro.

[09:15] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/bee529979a

[09:15] <dalek> MoarVM: edc44b5 | jnthn++ | src/strings/ops.c:

[09:15] <dalek> MoarVM: Implement final sigma special casing rule.

[09:15] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/edc44b5efb

[09:17] *** sivoais joined
[09:17] <jnthn> Who'da thunk case changes would be so involved... :)

[09:20] <FROGGS> ohh dΣΣr

[09:21] * jnthn writes tests to make sure we're getting the precomposed lower -> synthetic upper transitions right...

[09:27] *** sivoais joined
[09:31] *** domidumont joined
[09:37] *** sivoais joined
[09:48] *** sivoais joined
[09:58] *** sivoais joined
[09:59] <dalek> MoarVM/debug-dynvar-bug: 043a779 | brrt++ | src/ (7 files):

[09:59] <dalek> MoarVM/debug-dynvar-bug: Add a sequence number to distinguish frames

[09:59] <dalek> MoarVM/debug-dynvar-bug:

[09:59] <dalek> MoarVM/debug-dynvar-bug: I suspect there may be multiple spesh candidates or something

[09:59] <dalek> MoarVM/debug-dynvar-bug: similar involved with the JIT bug, so I add a sequence number

[09:59] <dalek> MoarVM/debug-dynvar-bug: to test this.

[09:59] <dalek> MoarVM/debug-dynvar-bug: review: https://github.com/MoarVM/MoarVM/commit/043a779fb2

[09:59] <dalek> MoarVM/debug-dynvar-bug: 1a090f3 | brrt++ | src/jit/compile.c:

[09:59] <dalek> MoarVM/debug-dynvar-bug: Log specific exit (useful for gdb :-))

[09:59] <dalek> MoarVM/debug-dynvar-bug: review: https://github.com/MoarVM/MoarVM/commit/1a090f3158

[10:01] *** Ven joined
[10:08] *** sivoais joined
[10:18] *** sivoais joined
[10:21] <nwc10> jnthn: ASAN welcomes careful coders

[10:22] <jnthn> nwc10: But does it welcome me? :)

[10:22] <nwc10> well, it didn't barf at what it saw

[10:22] <jnthn> Phew

[10:22] <nwc10> (and yes, good question)

[10:22] <jnthn> And I added a bunch of tests, so... :)

[10:29] *** sivoais joined
[10:39] *** sivoais joined
[10:50] *** sivoais joined
[11:00] *** sivoais joined
[11:11] *** sivoais joined
[11:21] *** sivoais joined
[11:29] *** Ven joined
[11:32] *** sivoais joined
[11:40] *** Peter_R joined
[11:42] *** sivoais joined
[11:52] *** sivoais joined
[12:03] *** sivoais joined
[12:14] *** sivoais joined
[12:25] *** sivoais joined
[12:36] *** sivoais joined
[12:37] *** Ven joined
[12:46] *** sivoais joined
[12:56] *** sivoais joined
[13:06] *** sivoais joined
[13:16] *** sivoais joined
[13:23] *** Ven joined
[13:27] *** sivoais joined
[13:36] *** sivoais joined
[13:47] *** sivoais joined
[13:57] *** sivoais joined
[14:07] *** sivoais joined
[14:17] *** sivoais joined
[14:27] *** sivoais joined
[14:32] *** Ven joined
[14:37] *** sivoais joined
[14:47] *** sivoais joined
[14:58] *** sivoais joined
[15:10] *** sivoais joined
[15:20] *** sivoais joined
[15:30] *** sivoais joined
[15:32] *** tokuhirom joined
[15:41] *** sivoais joined
[15:51] *** sivoais joined
[16:01] *** sivoais joined
[16:10] *** FROGGS joined
[16:11] *** sivoais joined
[16:17] <dalek> MoarVM: 9a9a43c | jnthn++ | src/strings/nfg.c:

[16:17] <dalek> MoarVM: Turn abort() into a panic with useful message.

[16:17] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9a9a43c4f9

[16:17] <dalek> MoarVM: dbd15dc | jnthn++ | src/strings/nfg.c:

[16:17] <dalek> MoarVM: Provide fc on synthetics.

[16:17] <dalek> MoarVM:

[16:17] <dalek> MoarVM: Or at least, make it work as well as uc/tc/lc do. We still need to

[16:17] <dalek> MoarVM: take care of synthetics that involving a base grapheme that has a

[16:17] <dalek> MoarVM: special casing or full case folding rule.

[16:17] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/dbd15dc126

[16:18] <jnthn> Fixes the SIGABRT someone got on #perl6 an hour ago, at least :)

[16:19] <FROGGS> :o)

[16:22] *** sivoais joined
[16:22] <jnthn> Now I just have the really evil cases left.

[16:25] <jnthn> m: say "\c[LATIN SMALL LETTER J WITH CARON]\c[COMBINING DOT BELOW]".NFC

[16:25] <camelia> rakudo-moar d05cb8: OUTPUT«NFC:0x<01f0 0323>␤»

[16:26] <jnthn> m: say "\c[LATIN SMALL LETTER J WITH CARON]\c[COMBINING DOT BELOW]".chars

[16:26] <camelia> rakudo-moar d05cb8: OUTPUT«1␤»

[16:26] <jnthn> m: say "\c[LATIN SMALL LETTER J WITH CARON]\c[COMBINING DOT BELOW]"

[16:26] <camelia> rakudo-moar d05cb8: OUTPUT«ǰ̣␤»

[16:28] *** Ven joined
[16:28] <jnthn> m: say "\c[LATIN SMALL LETTER N PRECEDED BY APOSTROPHE]\c[COMBINING DOT BELOW]".NFC

[16:28] <camelia> rakudo-moar d05cb8: OUTPUT«NFC:0x<0149 0323>␤»

[16:32] *** sivoais joined
[16:40] <jnthn> m: say uniprop

[16:40] <camelia> rakudo-moar d05cb8: OUTPUT«===SORRY!=== Error while compiling /tmp/FuBPs3gQ1V␤Calling uniprop() will never work with any of these multi signatures:␤    (Str $str, |c is raw) ␤    (Int $code, Stringy $propname = { ... })␤at /tmp/FuBPs3gQ1V:1␤------> say ⏏unipr…»

[16:40] <jnthn> m: say uniprop(0x030C, 'Canonical_Combining_Class')

[16:40] <camelia> rakudo-moar d05cb8: OUTPUT«230␤»

[16:40] <jnthn> m: say uniprop(0x0323, 'Canonical_Combining_Class')

[16:40] <camelia> rakudo-moar d05cb8: OUTPUT«220␤»

[16:41] <jnthn> m: say Uni.new(0x004A, 0x0323, 0x030C).NFD

[16:41] <camelia> rakudo-moar d05cb8: OUTPUT«NFD:0x<004a 0323 030c>␤»

[16:42] *** sivoais joined
[16:51] <jnthn> m: say Uni.new(0x0046, 0x0323).NFC

[16:51] <camelia> rakudo-moar d05cb8: OUTPUT«NFC:0x<0046 0323>␤»

[16:52] *** sivoais joined
[17:03] *** sivoais joined
[17:14] *** sivoais joined
[17:16] <jnthn> m: say Uni.new(0x01F0, 0x0323).NFD

[17:16] <camelia> rakudo-moar d05cb8: OUTPUT«NFD:0x<006a 0323 030c>␤»

[17:18] <dalek> MoarVM: 6a4423b | jnthn++ | src/strings/nfg.c:

[17:18] <dalek> MoarVM: Partially deal with SpecialCasing in NFG.

[17:18] <dalek> MoarVM:

[17:18] <dalek> MoarVM: This handles the cases where something casefolds into multiple code

[17:18] <dalek> MoarVM: points, but they still come out as a single grapheme. The case where

[17:18] <dalek> MoarVM: even with NFG we get multiple graphemes is still to do.

[17:18] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/6a4423b996

[17:19] <jnthn> Enough for now... :)

[17:19] <jnthn> dinner &

[17:25] *** sivoais joined
[17:34] *** tokuhirom joined
[17:35] *** sivoais joined
[17:45] *** sivoais joined
[17:50] * japhb rezzes in after 2-3 weeks away

[17:51] <japhb> .ask jnthn How do you keep track (aside from in commit messages) of what you haven't finished in work like the NFG casefolding that you've only partially completed, when you switch often to other work?

[17:52] <japhb> Right, no bot

[17:52] <japhb> Well, in any case, I'm basically wondering what you're doing to make sure you don't forget to finish up some line of coding work that you've context switched off of?

[17:53] <timotimo> oh hey japhb!

[17:55] *** sivoais joined
[17:57] <nwc10> japhb: from a somewhat outsider perspsective, it looks to me like jnthn is only doing stuff when he thinks he has time to get the whole chunk finished

[17:58] <nwc10> and in particular, he's not task switching between Big Job A and Big Job B.

[17:58] <nwc10> so there's only one pointer to state to be tracked

[18:05] <nwc10> jnthn: ASAN still happy. Try harder!

[18:05] *** sivoais joined
[18:15] *** sivoais joined
[18:20] *** vendethiel joined
[18:23] *** leont joined
[18:25] <[Coke]> nwc10: I got a malloc error running perl6-doc the other night...

[18:25] <[Coke]> couldn't duplicate it, though. :(

[18:25] *** sivoais joined
[18:36] *** sivoais joined
[18:46] *** sivoais joined
[18:48] *** Ven joined
[18:56] *** sivoais joined
[19:06] *** sivoais joined
[19:09] *** Ven joined
[19:14] <TimToady> well, and jnthn++ actually writes tests

[19:16] *** sivoais joined
[19:27] *** sivoais joined
[19:37] *** sivoais joined
[19:47] *** sivoais joined
[19:57] *** sivoais joined
[20:03] *** sivoais joined
[20:06] <japhb> TimToady: Shocking.  Really, who does that?  :-P

[20:11] <FROGGS> and jnthn regularly talks about The List™, and I believe he really has one :o)

[20:18] <jnthn> japhb: nwc10 is about right - I tend to only have one really involved ongoing task at a time.

[20:19] <jnthn> japhb: When I push not entirely done stuff, I also often do it in a way that makes it clear where the next additions/changes need to go.

[20:20] <jnthn> Like https://github.com/MoarVM/MoarVM/commit/6a4423b996 took a panic away, dealt with some of what needed doing, and left a new one in for the remaining bits

[20:20] <jnthn> In this case I've also a bunch of tests I wrote beforehand

[20:22] <jnthn> There isn't actually One True List. https://rt.perl.org/Ticket/Display.html?id=123766 is my current worklist, to a large degree.

[20:23] <FROGGS> really, huh

[20:23] <jnthn> There's a few on my phone

[20:23] <jnthn> The NFG one is nearly empty, it just has "fix the NFA engine to have a clue about NFG" on it. :)

[20:23] <FROGGS> ahh, so you are a list item ticker :o)

[20:23] <jnthn> I tend to delete the ones I got done :)

[20:23] <FROGGS> and then you're happy?

[20:24] <jnthn> Dunno, just doesn't really help me to keep lists of things I *did* do :)

[20:24] <jnthn> I've got git for that :P

[20:25] <FROGGS> hehe, yeah

[20:25] <jnthn> Mostly they're on my phone so I can stick things in if I think of them and I'm somewhere random

[20:26] <jnthn> But yeah, "how do I know where to continue" I mostly handle by leaving myself enough reminders in the code, and then "git show" or so when I come back to it.

[20:27] <FROGGS> nice

[20:27] <psch> sometimes things go on my white board

[20:27] <psch> but mostly it has other chores and errands

[20:27] <psch> jvm-interop went on it a lot...

[20:27] <jnthn> Generally, I like to keep things related to code in the code, though... :)

[20:28] <psch> yeah, it's rare enough for me to conceptualize what-needs-to-be-done high-level enough to have it make sense on the white board :P

[20:31] <jnthn> You can also tell how hard I had to think about things when implementing them by comment density :)

[20:31] <jnthn> Because I often describe the algo in comments and then fill it out in code when it's something tricky.

[20:32] <psch> ...that just makes me think i'm bad at programming :P

[20:32] <jnthn> https://github.com/MoarVM/MoarVM/blob/master/src/spesh/deopt.c probably has some of the more dense commenting :)

[20:33] <jnthn> tbh, I probably put more effort into commenting data structures than code, though...

[20:34] <jnthn> https://github.com/MoarVM/MoarVM/blob/master/src/strings/nfg.h for example

[20:34] <FROGGS> jnthn: I do sometimes something similar... I write pseudo code (in english) for the needed steps, and then I translate that to code and later to comments

[20:36] <FROGGS> yes, I really like these concept describing blocks

[20:37] <FROGGS> because especially when I'm hunting for a bug you find something the is coded differently than meant... and such a comment helps getting clarity

[21:35] *** tokuhirom joined
[23:02] <japhb> Ah, very interesting.  I especially liked the 'moving panic' and 'comment pseudocode, then translate' ideas.

[23:31] *** tokuhirom joined
