[01:33] *** colomon joined
[01:47] *** ilbot3 joined
[02:54] *** agentzh_ joined
[04:51] *** agentzh_ joined
[05:19] *** jnthn_ joined
[05:49] *** FROGGS joined
[06:53] <dalek> MoarVM/cunion: 9edfc5f | FROGGS++ | src/6model/reprs/CUnion. (2 files):

[06:53] <dalek> MoarVM/cunion: allow to inline CStructs in CUnions

[06:53] <dalek> MoarVM/cunion: review: https://github.com/MoarVM/MoarVM/commit/9edfc5f1d8

[07:12] *** Ven joined
[07:45] *** zakharyas joined
[08:09] *** Ven joined
[08:12] *** brrt joined
[09:05] *** FROGGS joined
[10:24] *** d4l3k_ joined
[10:37] *** ilbot3 joined
[10:38] *** Ven joined
[11:10] *** Ven joined
[11:48] *** rurban joined
[11:56] <brrt> \o

[11:57] <brrt> rurban, now that you're here; what exactly did you mean with '100% performance improvement' for a JIT

[11:57] <brrt> i liked your slides, mostly, though :-)

[12:01] <masak> are the slides online somewhere?

[12:02] <masak> found them: https://dresden-pm.github.io/gpw2015/html/talks/VmStatus.html#1

[12:08] <masak> wow, those are some bitter slides. :)

[12:43] <jnthn> .oO( "Dammit, Jonathan, stop getting stuff right!" )

[12:47] <masak> :P

[12:47] * masak .oO( jnthn got one moar thing right )

[12:58] <brrt> some of those are really bitter, yes

[13:02] <[Coke]> To be fair, it's really hard not to get bitter after working on this project on and off for a decade.

[13:04] <rurban> I wanted to give a fair parrot post-portem, with the related and alarming p5p problems. But it's not that bitter, python is still much worse, and there's a lot of light at the end of the tunnel

[13:06] <rurban> brrt: I estimated the improved parrot perf by 2x faster by re-instating our old jit. (and fix 64bit mode). verbally I said that yours is still much better as it does much better optimizations

[13:07] <[Coke]> rurban: fyi, broken image on https://dresden-pm.github.io/gpw2015/html/talks/VmStatus.html#27 seems to have a broken image.

[13:07] <rurban> I'm not sure if I mentioned the possible trace-based optimizations, which are stilll missing.

[13:07] <brrt> i'd argue that these optimisations are mostly jnthns and timotimos' work, though :-)

[13:08] <[Coke]> rurban - moarvm is installable via macports, btw. I got that going about 2 months ago.

[13:08] <rurban> [Coke] thanks, I'll fix the link. It's online

[13:08] <brrt> but fair enough. i was just stuck on the word '100% perfomance' rather than '2x' performance'

[13:08] <rurban> 50% perf win is for me 1.5x faster

[13:08] <rurban> 100% 2x

[13:09] <rurban> [Coke] I tried macports with gcc-mp-5 last week, and didn't work. I fixed dyncall before.

[13:10] <rurban> It was just an example of the limited architectural focus, which is a fair point to make for moar.

[13:10] <[Coke]> I basically relied on their buildbots to tell me if there was an issue.

[13:11] <rurban> if we would get a proper moar macports package that would be super!

[13:15] <[Coke]> FYI, the simple portfile is here: https://github.com/MoarVM/MoarVM/tree/master/ports/macports  - if we can do a straight build on whatever architecture, should be OK here - when we did the initial rollout there were some macport-used env vars we had to respect on the build; might be missing a few more.

[13:16] <rurban> fixed the image

[13:16] <[Coke]> hoping to get back to this so I can make an nqp macport that has both moar & jvm support. (and if I can get the parrot one updated, maybe that a well - although nqp-parrot currently has a few test failures)

[13:17] <rurban> I never got around with tcl, thanks for doing that

[13:32] <dalek> MoarVM: d2e5c76 | hoelzro++ | build/setup.pm:

[13:32] <dalek> MoarVM: Add lib install dir to rpath

[13:32] <dalek> MoarVM:

[13:32] <dalek> MoarVM: This will allow Moar to find shared objects used by NativeCall

[13:32] <dalek> MoarVM: libraries without hacks to set LD_LIBRARY_PATH for local installs

[13:32] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d2e5c768f1

[13:35] <tadzik> aww yiss

[13:35] <tadzik> hoelzro++

[13:40] <brrt> uh, what is rpath :-)

[13:41] <brrt> ah, i see

[13:41] <brrt> nice hoelzro++

[13:56] *** Ven_ joined
[14:30] *** FROGGS[mobile] joined
[14:57] *** Ven_ joined
[15:20] *** FROGGS joined
[18:11] <japhb> Are the .so's being saved under unique names, so that multiple versions of the

[18:11] <japhb> "same" .so can be installed at once?

[18:11] <japhb> Or is that not yet addressed?

[18:11] <japhb> (I guess this is partly a Panda/CUR/S11 question, too.)

[18:16] <tadzik> yeah, depends on what CUR does

[18:52] <timotimo> i'm considering inspecting bb's we inline for any deopt annotations and if none exist, just paste the bb's contents into the inlining block

[18:52] <timotimo> since we don't re-use inlined bb's anyway

[19:53] *** rurban joined
[20:34] *** colomon joined
[20:41] *** lizmat joined
[21:05] *** moritz_ joined
[21:05] *** betterworld joined
[21:26] *** Peter_R joined
[21:35] *** colomon joined
