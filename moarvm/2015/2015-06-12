[00:06] *** FROGGS joined
[00:23] *** lizmat joined
[02:04] *** ggoebel joined
[05:51] *** FROGGS[mobile] joined
[06:20] *** FROGGS joined
[06:59] *** Ven joined
[07:19] *** brrt joined
[07:34] <arnsholt> jnthn: I was going to say that implementing my patch on JVM wasn't going to be too much trouble, but then I went and looked at the JVM code and realized there's no HashAttrStore =)

[07:49] <brrt> good *

[08:27] *** zakharyas joined
[08:53] *** pyrimidine joined
[09:00] *** nebuchadnezzar joined
[09:09] *** zakharyas joined
[09:37] *** vendethiel joined
[09:40] <timotimo> o/

[10:17] *** btyler joined
[10:19] *** zakharyas1 joined
[10:21] *** oetiker joined
[11:26] *** zakharyas joined
[11:57] *** Ven joined
[12:15] *** Ven joined
[12:39] *** Ven joined
[13:19] *** zakharyas joined
[13:55] *** tadzik joined
[14:15] *** JimmyZ_ joined
[15:00] *** FROGGS joined
[15:48] <FROGGS> jnthn: ping

[16:14] <FROGGS> jnthn: you got VisualStudioVersion in your build environnment set, right?

[18:44] <FROGGS> where does one read about $@ in makefiles?

[18:46] <FROGGS> because it does something different using gcc on windows and linux

[18:48] <timotimo> gcc doesn't do anything with makefiles, though

[18:49] <timotimo> i thought basically everybody uses "gmake" on windows, which is just a port of gnu make?

[18:52] <FROGGS> ahh yes

[18:52] <FROGGS> I mean gmake of course

[18:53] <timotimo> :)

[18:53] <FROGGS> nmake does seem to do it right though

[18:54] <FROGGS> my problem is that the target is 'dynext/libsomething.dll' and $@ is the entire target (with directory) instead of the filename

[18:54] <FROGGS> and that's not the case on linux or when I use nmake

[19:02] <timotimo> huh

[19:14] <FROGGS> gcc  -LC:\nqp\install/lib -lmoar -shared -Wl,--out-implib,libdynext\perl6_ops_moar.dll.a -O1 -DNDEBUG -g1   -O1 -DNDEBUG -lshell32 -lws2_32 -lmswsock -lrpcrt4 -ladvapi32

[19:14] <FROGGS> -lpsapi -liphlpapi -o dynext\perl6_ops_moar.dll dynext/perl6_ops.o dynext/container.o C:\nqp\install/lib/libmoar.dll.a

[19:14] <FROGGS> Can't open .lib file: libdynext\perl6_ops_moar.dll.a

[19:15] <FROGGS> and the pattern is: -Wl,--out-implib,lib$@.a

[19:29] <arnsholt> FROGGS: $@ is the name of the file currently being built

[19:29] <arnsholt> Used in pattern rules, usually

[19:30] <FROGGS> including its path under gmake sadly

[19:30] <arnsholt> Yeah, that's part of the file name, after all

[19:30] <arnsholt> But there's a function

[19:31] <arnsholt> $(notdir $@) should give you the filename without the directory portion

[19:31] <FROGGS> ohh

[19:31] <FROGGS> will try

[19:31] <arnsholt> Of course, that's GNU Make specific, which means that the Makefile will stop working with nmake

[19:31] <arnsholt> (And IIRC jnthn uses nmake =)

[19:32] <FROGGS> no problem there

[19:32] <timotimo> "notdir"? o_O

[19:35] <FROGGS> it will be emited for gmake only so it is safe

[19:36] <FROGGS> arnsholt++ # it works

[19:39] <FROGGS> \o/

[19:40] <FROGGS> just built moar+nqp+rakudo using mingw32 that comes with strawberry perl

[20:07] *** bonsaikitten joined
[20:07] *** moritz joined
[20:08] *** nwc10 joined
[21:26] <timotimo> that's new, right?

[21:26] <timotimo> we've been recommending visual studio instead of that, right?

[22:36] *** cygx joined
[22:39] <cygx> timotimo: MoarVM explicitly supports MinGW but has some minor problems with installation (the dll should to go into /bin but end up in /lib, the import lib should go into /lib but isn't copied at all)

[22:40] <cygx> NQP builds fine on MinGW but tries to invoke nmake at first

[22:40] <cygx> Rakudo has issues, and I just used my own Makefile that I fixed manually: https://github.com/cygx/rakudo/blob/mingw32/Makefile.mingw32

[22:40] <cygx> note that on MinGW, compiling the setting fails if spesh is enabled

[22:41] <cygx> or at least it used to - haven't checked lately

[23:06] <cygx> o/

[23:06] *** cygx left
