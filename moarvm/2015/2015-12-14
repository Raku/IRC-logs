[02:06] *** llfourn joined
[02:56] *** hoelzro joined
[03:11] *** vendethiel joined
[04:38] *** hoelzro joined
[07:27] *** domidumont joined
[07:32] *** domidumont joined
[07:44] *** dalek joined
[07:56] *** FROGGS joined
[08:29] *** Ven joined
[09:13] *** zakharyas joined
[09:21] *** Peter_R joined
[09:51] <dalek> MoarVM/even-moar-jit: 58bab11 | brrt++ | src/jit/tile.c:

[09:51] <dalek> MoarVM/even-moar-jit: Factor tiling state out of info node

[09:51] <dalek> MoarVM/even-moar-jit:

[09:51] <dalek> MoarVM/even-moar-jit: Tiling state is temporary data, no need to tag the tree with it.

[09:51] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/58bab11b4f

[09:55] *** brrt joined
[09:57] <brrt> good * #moarvm

[10:12] <nwc10> good *, brrt

[10:13] <brrt> ohai nwc10

[10:35] <brrt> turns out i think TL was more difficult than i anticipated

[10:35] <brrt> i'm in the process of writing a blog about it :-)

[10:54] *** Ven_ joined
[10:54] <jnthn> ohhai o/

[10:55] <brrt> ohhai jnthn

[10:55] <brrt> how is life today?

[10:58] <jnthn> Well, I slept way later than expected, due to staying up rather late finishing my advent post :)

[10:58] <jnthn> And a delivery of curry-cooking ingredients and beer will show up later today.

[10:59] <nwc10> \o/

[10:59] <nwc10> #london.pm topic, now out of date, reads:  Only 11 debugging all-nighters until Christmas | http://london.pm.org/

[10:59] <jnthn> And I have stroopwafels for with coffee

[10:59] <nwc10> so, it should have been "advent post all-nighters" instead?

[10:59] <jnthn> So, life seems OK :)

[11:00] <nwc10> is your food and important-stuff delivery firm only operatin in Prague?

[11:00] * nwc10 is still working out how to get interesting things without air freight

[11:00] <nwc10> or air-freight-like prices

[11:03] <brrt> stroopwafels++

[11:03] <jnthn> nwc10: It is, believe it or not, Tesco Online :)

[11:03] <nwc10> aha

[11:03] <nwc10> yes. OK

[11:03] <nwc10> I wonder if they deliver from Bratislava :-)

[11:04] <jnthn> I never used the service in Bratislava, 'cus I lived 2 mins walk to 4-story Tesco department store :)

[11:05] <nwc10> does a non-UK Tesco have a section for "UK products" for expats?

[11:05] <nwc10> eg cider that is actually cider, and not some evil blend of actual cider bulked up with apple juice and sweetner

[11:08] <jnthn> Um...yes to the section.

[11:09] <jnthn> If Strongbow counts then yes, they have it

[11:10] <jnthn> Then, there's a bar just up the street that also claims to have cider, though I don't know if it's "actually cider" :)

[11:10] <nwc10> um, yes, I agree with the need for clarification

[11:10] <nwc10> Strongbow is cider like Bud is beer.

[11:10] <jnthn> http://nakup.itesco.cz/cs-CZ/Search/List?searchQuery=cider&Search=Search

[11:10] <nwc10> but it is, at least, made from the right ingredients

[11:11] <jnthn> Bud is...beer??!

[11:13] <jnthn> 21 xmas RTs. 7 days left at my comfy dev computer.

[11:13] <nwc10> Anheuser-Busch make a lot of money from folks who think that it is

[11:14] <jnthn> A beer in the hand is worth two from Anheuser-Busch...

[11:14] <nwc10> deal!

[11:14] <nwc10> ("two")

[11:15] <nwc10> I think your exchange rate is wrong (although the parody doesn't work without it)

[11:32] *** cognominal_ joined
[12:18] <dalek> MoarVM: 58b81ac | jnthn++ | src/ (5 files):

[12:18] <dalek> MoarVM: Generalize "is TTY" interface to "introspection".

[12:18] <dalek> MoarVM:

[12:18] <dalek> MoarVM: So we can hang the "get the fileno" off it too.

[12:18] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/58b81acea7

[12:21] *** rurban_ joined
[12:24] <brrt> jnthn++

[12:24] * brrt recalls having plans to do that and never getting around to it

[12:27] <jnthn> :)

[12:27] <jnthn> Will finish it up after lunch :)

[12:36] *** travis-ci joined
[12:36] <travis-ci> MoarVM build errored. jnthn 'Generalize "is TTY" interface to "introspection".

[12:36] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/96729522 https://github.com/MoarVM/MoarVM/compare/e7edb06caf41...58b81acea774

[12:36] *** travis-ci left
[12:36] <nwc10> oh, odd, works on "my" machine

[13:05] *** colomon joined
[13:13] *** cognominal joined
[13:14] <jnthn> What an odd failure

[13:14] <jnthn> "No output has been received in the last 10 minutes, this potentially indicates a stalled build or something wrong with the build itself."

[13:15] <jnthn> The other 7 builds worked out

[13:15] <jnthn> Maybe heisenfail

[13:16] <moritz> is that the gocd on hack?

[13:21] *** leont joined
[13:24] <rurban_> sometimes it's travis fault, sometimes a real hang

[13:54] <jnthn> grmbl

[13:55] <jnthn> So it's easy enough to get the "fileno" from a libuv handle

[13:55] <jnthn> Except on Windows that's a HANDLE, not a C runtime descriptor

[13:55] <jnthn> And there seems to be no way to go from HANDLE to "existing" file descriptor.

[13:56] <jnthn> Perl 5 uses FILE * for its I/O, so gets away with already being in C descriptor emulation land.

[13:56] <jnthn> nqp-m -e "say(nqp::fileno(nqp::getstdout()))"

[13:56] <jnthn> 8

[13:56] <jnthn> :)

[13:57] <leont> ?

[13:57] <jnthn> leont: Well, I'm only going on a grep of the Perl 5 source :)

[13:57] <jnthn> leont: But I'm feeing FILE * being used, which you can _fileno

[13:57] <leont> I'm pretty sure there is such a function in the Windows API

[13:58] <jnthn> I'd love to find it if there is one :)

[13:58] <jnthn> There's this one: https://msdn.microsoft.com/en-US/library/bdts1c9x.aspx

[13:58] <jnthn> But this actually gives a fresh descriptor

[13:58] <jnthn> From the HANDLE

[13:59] <jnthn> So if you do that on, say, stdin, you get...3.

[13:59] <jnthn> And if you do it again on stdin you get 4 :P

[14:00] <leont> First question: why would you want this?

[14:00] <jnthn> I'm not actually sure whether I do

[14:00] <leont> File descriptors on Windows are nothing more than a global table that points to HANDLEs

[14:01] <jnthn> I'm looking into https://rt.perl.org/Ticket/Display.html?id=126541

[14:01] <jnthn> Which wants a way to get the native file descriptor, presumably mostly for passing off to native calls.

[14:02] <jnthn> And then I got curious what Perl 5's fileno does, and discovered that on Windows it does managed to give 0..2 for the standard handles.

[14:02] <jnthn> *manage

[14:02] <leont> https://msdn.microsoft.com/en-us/library/ks2530z6.aspx

[14:03] <leont> No wait, I wasn't paying attention

[14:03] <jnthn> That's the opposite way around.

[14:03] <leont> If you can get away with not exposing either HANDLEs or descriptors, that's a very good thing

[14:03] <jnthn> Well, that works fine until somebody needs it

[14:03] <leont> (well, exposing them as nqp::native_descriptor() or some such is ok, but then it comes without any guarantees

[14:04] <jnthn> Yeah, I'm pondering calling the method .native-descriptor

[14:04] <jnthn> Which dehuffmanizes it somewhat

[14:04] <jnthn> And makes clear it's native, as in "you better care about platform issues"

[14:05] <leont> The main reason why people need a file descriptor is when implementing an event loop and/or asynchronous IO

[14:05] <FROGGS> nqp::fileno?

[14:05] <jnthn> FROGGS: Yes, that's what they op ended up being called

[14:05] <FROGGS> nice that we have it now :o)

[14:05] <leont> Since we already provide both, this should be a rare need

[14:05] <jnthn> Just debating semantics :)

[14:05] <jnthn> leont: Indeed

[14:06] <jnthn> So I'll go with "long method name, and platform specific"

[14:06] <jnthn> I don't really want to shut out people doing interesting I/O stuff we don't provide in core over in module space.

[14:07] <leont> Only piece of p5 I ever wrote that would otherwise need it was a portable sendfile, but given it's actually 5 implementations in one modules that already says a lot about how unportable that is.

[14:07] * leont isn't awake enough to type English

[14:08] <jnthn> Close enough :)

[14:10] <dalek> MoarVM: 344113c | jnthn++ | / (10 files):

[14:10] <dalek> MoarVM: Implment fileno_fh op.

[14:10] <dalek> MoarVM:

[14:10] <dalek> MoarVM: Provides access to the native descriptor/handle underlying some OS

[14:10] <dalek> MoarVM: handle. Platform specific.

[14:10] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/344113cecb

[14:12] *** Ven joined
[14:22] *** Ven joined
[14:28] *** travis-ci joined
[14:28] <travis-ci> MoarVM build passed. jnthn 'Implment fileno_fh op.

[14:28] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/96747723 https://github.com/MoarVM/MoarVM/compare/58b81acea774...344113cecbf5

[14:28] *** travis-ci left
[14:39] *** Ven joined
[14:45] *** colomon joined
[15:14] <timotimo> o\

[15:31] *** zakharyas joined
[16:14] *** retupmoca joined
[16:21] *** brrt joined
[16:22] <brrt> ohai #moarvm

[16:23] <diakopter> hiiiiiii

[16:25] <timotimo> ohai brrt!

[16:40] <brrt> timotimo: the nativeref/multidimref stuff looks cool

[16:40] <brrt> i hope to add support for that pretty soom

[16:41] <timotimo> multidimref was easy; just reproducing what jnthn did for all other cases

[16:41] <brrt> don't knock it :-)

[16:42] <timotimo> it was necessary and i'm glad i could take it off of jnthn plate, that much is for sure :)

[17:25] *** brrt joined
[17:49] *** japhb joined
[17:57] *** japhb joined
[17:57] *** vendethiel joined
[18:05] <dalek> MoarVM: eafdbc0 | jnthn++ | / (20 files):

[18:05] <dalek> MoarVM: Implement async UDP sockets.

[18:05] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/eafdbc03ae

[18:06] <timotimo> wait, when did that happen o_O

[18:07] <jnthn> I just did it now :)

[18:07] <timotimo> holy crap, now i can doodle with OSC using perl6

[18:07] <jnthn> Yay, one test bunny recruited \o/

[18:23] <nwc10> jnthn: second potential test bunny is rabidgravy?

[18:24] <jnthn> Probably :)

[18:24] *** FROGGS joined
[18:25] <jnthn> It's a bit of a pity we don't have more IO-hacking folks with copious free time. Implementing this UDP support is probably the first thing I've done in my life with UDP :P

[18:28] * leont would ordinarily be an IO-hacker, but free time is in rather limited supply at the moment :-/

[18:29] <timotimo> your work on a pure-perl6 test harness is also very valuable

[18:30] <leont> Well, lots of that was IO hacking :-p

[18:31] <timotimo> heh

[18:31] <timotimo> and hammering our IO implementation

[18:31] <timotimo> from the user space

[18:31] <timotimo> that's good, indeed

[19:15] <FROGGS> wow, gcc 5.2.1 is quite colorful

[19:29] *** mtj_ joined
[20:12] *** vendethiel- joined
[20:28] *** virtualsue joined
[21:01] *** virtualsue joined
[21:36] <dalek> MoarVM: df3bbce | FROGGS++ | / (5 files):

[21:36] <dalek> MoarVM: probe for _Bool, and expose bool/size_t to nativecall

[21:36] <dalek> MoarVM:

[21:36] <dalek> MoarVM: Skarsnik++ for the original patch.

[21:36] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/df3bbce97f

[21:49] <leont> Should probably file a separate issue for the last issue I hit (non-concrete number in Proc::Async)

[22:20] <dalek> MoarVM: 27f15d9 | FROGGS++ | / (2 files):

[22:20] <dalek> MoarVM: unbreak build on platforms without _Bool

[22:20] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/27f15d9156
