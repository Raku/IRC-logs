[01:23] *** vendethiel joined
[01:46] *** vendethiel joined
[02:03] *** colomon joined
[02:14] *** vendethiel joined
[02:22] *** colomon joined
[02:46] *** vendethiel joined
[02:49] *** ilbot3 joined
[03:10] *** vendethiel joined
[04:10] *** colomon joined
[04:27] *** vendethiel joined
[07:57] *** FROGGS joined
[08:07] *** zakharyas joined
[08:08] *** kjs_ joined
[09:19] *** kjs_ joined
[09:48] *** rurban_ joined
[10:33] *** kjs_ joined
[10:41] *** donaldh joined
[10:43] *** kjs_ joined
[11:29] *** kjs_ joined
[12:55] *** zakharyas joined
[14:41] * JimmyZ saw jnthn++ said building a spesh graph *as* we trace, is it something a bit like the luajit one?

[14:41] <JimmyZ> so we can avoids many branches?

[14:41] <JimmyZ> *avoid

[14:41] <jnthn> Traces don't have branches, that's kinda the point... :)

[14:42] <jnthn> But yeah, it's along those lines.

[14:43] <jnthn> This stuff is *not* on the cards until The Big Three are done, though...

[14:43] <timotimo> in order to find out the class name of a P6Opaque repr'd thing, i'd have to invoke the "name" method that its HOW provides on the type object, yes?

[14:43] <JimmyZ> aye, I'm expecting that(Trace spesh) :P

[14:44] <timotimo> +"from C code"

[14:44] <timotimo> oh! GTG!

[14:45] <jnthn> But you can't invoke from C code really, as that's a nested runloop

[14:48] *** donaldh joined
[15:24] <timotimo> oh, bleh :)

[15:25] <timotimo> was there at some point a desire to have a field in the P6opaque repr data to hold the name of a class or something like that

[15:25] <timotimo> p6opaque repr data could be shared between different classes with the same structure, though

[15:28] *** kjs_ joined
[16:42] *** kjs_ joined
[17:12] *** rurban_ joined
[18:44] *** tadzik joined
[18:58] *** mj41 joined
[19:09] *** FROGGS joined
[20:08] *** kjs_ joined
[20:44] *** kjs_ joined
[22:04] *** FROGGS_ joined
[22:37] *** tgt joined
[23:02] *** tgt joined
