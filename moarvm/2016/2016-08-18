[02:41] <unmatched}> p6: "hello.o: hello.c" ~~ / .+ ':' \s* $<stuff>=.+ /; say $<stuff>

[02:41] <camelia> rakudo-moar e97fb7: OUTPUT«｢hello.c｣␤»

[06:35] <dalek> MoarVM/even-moar-jit: 6079744 | brrt++ | / (2 files):

[06:35] <dalek> MoarVM/even-moar-jit: Work-in-progress pieces for linear scan

[06:35] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/607974481a

[06:52] *** TheLemonMan joined
[07:26] *** zakharyas joined
[07:56] <TheLemonMan> another day, another bug triaged! and once again it's at the MoarVM level :P

[07:58] <TheLemonMan> RT#127075, caused by the second branch in the or (https://github.com/perl6/nqp/blob/master/src/QRegex/P6Regex/Actions.nqp#L890) that causes $_ (a unicode string) to be numified via smrt_numify -> MVM_coerce_smart_numify -> MVM_coerce_s_n which in turn calls MVM_string_ascii_encode and hell breaks loose when it encounters a non-ascii codepoint

[07:58] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=127075

[08:03] <TheLemonMan> I'm also pretty sure there has to be a better way than to recompile mvm, nqp, and rakudo each time :|

[08:03] <nine> TheLemonMan: you don't have to recompile nqp and rakudo after changes to MoarVM

[08:04] <TheLemonMan> nine, I get some errors I didn't write down if I don't recompile everything :|

[08:35] *** kjs_ joined
[08:50] *** domidumont joined
[08:54] <jnthn> Curious what errors, I do that all the time and it works out fine... There are changes that need it but you gotta be adding ops, pretty much.

[09:01] <TheLemonMan> then I probably forgot to 'make install' the updated nqp, sorry for the noise

[09:02] <nine> TheLemonMan: big difference between nqp and moar

[09:02] <nine> You do need to recompile rakudo when changing nqp

[09:03] <TheLemonMan> yeah, learned that the hard way

[10:26] *** kjs_ joined
[10:40] *** edehont joined
[10:44] <Zoffix> TheLemonMan so you tried Perl 6 because of one of my articles and now you're fixing issues in things I've not even learned yet?

[10:44] * Zoffix feels old and stupid :)

[11:30] <TheLemonMan> Zoffix, I think the best way to learn a language is to start digging into the internals :)

[12:08] <TheLemonMan> now I got an 'opcode validation error' that gives me an offset but afaics there's no (immediate) way to dump the bytecode stream

[12:08] *** kjs_ joined
[12:09] <jnthn> moar --dump foo.moarvm

[12:11] <TheLemonMan> the next question is about how to get the moarvm dump from p6

[12:12] <jnthn> Compile with --target=mbc --output=foo.moarvm :)

[12:13] <TheLemonMan> now I feel silly heh, thanks jnthn

[13:14] <TheLemonMan> hmm, moarvm segfaults when I try to run it now

[13:19] <TheLemonMan> and the --dump switch generates a lot of spurious trailing characters

[13:55] <TheLemonMan> a patch like https://ptpb.pw/lWQN stops the segfault, you might come up with a better message though

[13:56] *** kjs_ joined
[14:03] *** leedo joined
[16:38] <TheLemonMan> apparently a 'rakudo_scalar' is missing

[16:59] <TheLemonMan> timotimo, the problem disappears if you disable the jit

[17:02] <TheLemonMan> oops, s/jit/spesh/

[17:32] *** zakharyas joined
[17:38] <timotimo> which one are we talking about right now?

[17:38] <timotimo> the "perfect numbers" thing that segfaults?

[17:40] <TheLemonMan> yes, that one

[17:41] <timotimo> and the patch you had on ptpb.pw? was that for the same crash?

[17:42] <TheLemonMan> that prevents moarvm to crash when I try to run a .moarvm file dumped from p6

[17:47] *** kjs_ joined
[17:54] <timotimo> oh

[18:00] *** brrt joined
[18:01] <brrt> good * #moarvm

[18:01] <brrt> jitbugs?

[18:01] <unmatched}> \o\\

[18:01] <timotimo> good brrt

[18:01] <brrt> good timotimo

[18:01] <timotimo> we're potentially kicking out a guard or something

[18:01] <brrt> oh...

[18:01] <brrt> wasn't that what jnthn was working on yesterday

[18:01] <timotimo> he had something in that general vicinity

[18:02] <timotimo> where a guard was wrongly kicked out in some cases, causing trouble

[18:02] <brrt> who guards the guards?

[18:03] <brrt> (in unrelated news.. them register allocator 's gonna be /sweet/)

[18:04] <brrt> one of the funnest things i've had the opportunity to write in a while

[18:04] <timotimo> whoa

[18:04] <timotimo> i'm glad to hear it!

[18:06] <brrt> glad to finally have some time for it

[18:07] <brrt> of course i have to fix a whole bunch of stuff before it can be fully implemented

[18:09] <brrt> hmm, and i've decided i need to be able to split according to a range, not just for a certain branch

[18:09] <brrt> eh, not just past a certain step

[18:09] <brrt> that means... that means

[18:09] <brrt> that means we're going to need basic block ranges after all

[18:09] <brrt> which was always the plan, mind you

[18:09] <brrt> but it was never necessary before

[18:11] <brrt> and i've learned in hard ways against doing things that aren't yet necessary

[18:11] <timotimo> hehehe

[18:12] <timotimo> right, when things are not necessary yet, but still implemented, cutting them out is extra painful when it turns out neither that nor a dependency of it ended up being needed

[18:13] <brrt> uhuh

[18:13] <brrt> 'but it was beautiful'

[18:13] <brrt> worse is when you start modifying your solution to the existing systems rather than the problem

[18:14] <timotimo> %)

[18:16] <brrt> there's still open bits, of course

[18:18] <brrt> let me see what are the worst ones

[18:19] <brrt> hmmm

[18:20] <brrt> i still don't know how to cleanly fit ARGLIST in there

[18:20] <brrt> but that's it i guess

[18:20] <brrt> it's more a question of much to do

[18:29] * TheLemonMan is still trying to figure out what libpaths are needed

[18:52] *** kjs_ joined
[20:36] *** Ven_ joined
[20:39] *** zakharyas joined
[20:56] *** kjs_ joined
[21:28] *** kjs_ joined
[22:10] *** Zoffix joined
[22:22] *** lizmat joined
[22:43] *** kjs_ joined
