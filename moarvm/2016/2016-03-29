[00:53] *** Unavowed joined
[01:47] *** Unavowed joined
[02:03] *** colomon joined
[06:25] *** domidumont joined
[06:30] *** domidumont joined
[07:12] *** zakharyas joined
[10:10] *** stmuk_ left
[10:54] *** colomon joined
[14:21] *** colomon joined
[16:23] *** vendethiel- joined
[17:03] *** vendethiel joined
[17:06] *** Unavowed_ joined
[17:07] *** JimmyZ__ joined
[17:07] *** timotimo joined
[17:08] *** retupmoca joined
[17:14] *** domidumont joined
[17:17] *** vendethiel- joined
[18:16] *** FROGGS joined
[20:06] *** Ven joined
[20:33] *** cognominal_ joined
[20:50] *** Ven joined
[21:05] *** leont joined
[23:12] <leont> jnthn: it seems that the stdout supply on a proc-async isn't closed properly, even when the process is definitely dead

[23:17] <leont> http://paste.scsys.co.uk/509023

[23:18] <diakopter> m-star: https://gist.github.com/anonymous/a3399f46d43fc8fe6b58a1ad643fac06

[23:18] <diakopter> star-m: https://gist.github.com/anonymous/a3399f46d43fc8fe6b58a1ad643fac06

[23:18] <camelia> star-m 2016.01: OUTPUT«Proc::Async is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting line 1␤  in method new at src/RESTRICTED.setting line 32␤  in block <unit> at /tmp/xPQTTUrR1K line 1␤␤»

[23:18] <diakopter> oh

[23:19] <diakopter> leont: the default `die` doesn't clean up such things, I think

[23:19] <leont> The die is unrelated to the bug

[23:20] <leont> It will fail the same without, it was just to illustrate that the :done handler isn't being run

[23:20] <diakopter> what happens if you await stdout before the start

[23:22] <diakopter> oh, hmm

[23:23] <leont> The same

[23:23] <leont> (well, not before the start, but before the promise start returns)
