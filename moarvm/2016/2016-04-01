[03:00] *** japhb joined
[03:02] *** lizmat_ joined
[03:26] *** japhb joined
[03:32] *** geekosaur joined
[03:56] *** geekosaur joined
[06:28] *** leont joined
[06:44] *** geekosaur joined
[07:34] *** leont joined
[07:48] *** zakharyas joined
[08:27] *** lizmat joined
[11:05] *** domidumont joined
[11:50] *** lizmat joined
[11:52] *** leont joined
[11:55] <dalek> MoarVM: 45a071e | jnthn++ | src/strings/decode_stream.c:

[11:55] <dalek> MoarVM: Fix typo in comment.

[11:55] <dalek> MoarVM:

[11:55] <dalek> MoarVM: The keys are like, right next to each other.

[11:55] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/45a071ed85

[12:39] <dalek> MoarVM: 5f76d03 | jnthn++ | src/strings/ (10 files):

[12:39] <dalek> MoarVM: Make stream decodes return if stopper was reached.

[12:39] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/5f76d030d7

[12:39] <dalek> MoarVM: 7d59b00 | jnthn++ | src/strings/decode_stream.c:

[12:39] <dalek> MoarVM: Don't do hopeless separator searches.

[12:39] <dalek> MoarVM:

[12:39] <dalek> MoarVM: If the decoder doesn't find the stopper, there's no point in going on

[12:39] <dalek> MoarVM: a separator hunt with the newly decoded chars. Removes a bunch of the

[12:39] <dalek> MoarVM: cost associated with reading really long lines.

[12:39] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7d59b005a4

[13:08] *** zakharyas joined
[13:21] *** lizmat joined
[13:30] *** leont joined
[13:50] *** domidumont joined
[13:53] *** domidumont joined
[14:04] *** lizmat joined
[14:17] *** cognominal joined
[15:04] <dalek> MoarVM: b9afd77 | jnthn++ | src/strings/decode_stream. (2 files):

[15:04] <dalek> MoarVM: Another big speed-up for reading long lines.

[15:04] <dalek> MoarVM:

[15:04] <dalek> MoarVM: Just skip over buffers that can't possibly contain the separator, so

[15:04] <dalek> MoarVM: we save on expensively scanning them. With this and the previous

[15:04] <dalek> MoarVM: commit, the heap profiler reaches its prompt within a second or so

[15:04] <dalek> MoarVM: when reading in a 25MB heap profile.

[15:04] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b9afd772d5

[15:05] <jnthn> OK, that makes moar-ha feel nicer :)

[15:05] <timotimo> 25 megabytes? that's *nothing*! :P

[15:06] <moritz> moar-ha? moar highly available? :-)

[15:06] <moritz> (I guess "heap analyzer")

[15:07] <jnthn> heap analyzer :)

[15:07] <jnthn> timotimo: :P

[15:45] *** domidumont joined
[16:39] *** geekosaur joined
[17:24] <dalek> MoarVM: 4afd7b6 | jnthn++ | src/strings/utf8_c8.c:

[17:24] <dalek> MoarVM: Fix utf8-c8 decode crash caused by off-by-1.

[17:24] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/4afd7b6242

[17:27] <timotimo> huh! i thought i had tried that and it wasn't enough

[17:27] <timotimo> though, what do i know :)

[19:59] *** domidumont joined
[20:52] *** leont joined
[21:32] *** cognominal_ joined
[22:03] *** lizmat joined
[23:57] <timotimo> jnthn: do you have a good suggestion for how to deal with the safepoint thing?

[23:58] <timotimo> i mean the leak that exists because we're doing "free at safepoint" over and over but never actually reach a safe point
