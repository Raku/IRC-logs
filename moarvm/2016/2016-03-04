[02:48] *** ilbot3 joined
[03:47] *** vendethiel joined
[04:25] *** ggoebel17 joined
[04:30] *** harrow joined
[07:02] *** vendethiel joined
[07:15] *** domidumont joined
[07:20] *** domidumont joined
[08:13] *** zakharyas joined
[09:50] *** domidumont joined
[09:57] *** zakharyas joined
[10:56] *** lizmat joined
[17:10] *** harrow joined
[17:16] *** domidumont joined
[18:26] *** lizmat joined
[18:49] *** vendethiel joined
[19:22] *** lizmat joined
[19:30] *** vendethiel joined
[19:45] *** lizmat joined
[19:48] *** FROGGS joined
[19:52] *** lizmat_ joined
[20:28] *** brrt joined
[20:45] *** vendethiel joined
[20:47] <brrt> jnthn: note that get_string is a macro that accesses cu->body.strings directly

[20:47] <brrt> in the jit i mean

[20:48] <timotimo> well, that could cause trouble :)

[20:50] <brrt> making that a function may be difficult

[20:53] <brrt> not every place that uses it, is register-clean

[21:01] *** domidumont joined
[21:04] <brrt> oh, btw, JSON::Fast breaks under even-moar-jit

[21:05] <brrt> i'm intending to build some kind of bisecting tool

[21:05] <brrt> to pass env vars, 'don't compile after seq nr $x', and 'don't compile basic blocks beyond $y with expressions'

[21:06] <brrt> should be easy to do and pinpoint the breakage

[21:13] <brrt> anyway, off i am

[21:45] *** vendethiel joined
[22:02] <jnthn> brrt: Yes, that's on my todo list already...I'll just ask for the string while JIT-compiling, which means it'll certainly be available. :)

[22:02] <jnthn> Thanks for spotting, though :)

[22:16] <timotimo> oh, right, those are just the at-compile-time-fixed strings

[22:18] <jnthn> aye

[22:20] <timotimo> in that case, doing it at jit time is absolutely fine

[22:21] <timotimo> the jit would be rather happy having the strings just as a pointer

[22:32] <jnthn> That's how it JIT's em usually, I think :)

[22:33] * jnthn continues on his way for sleep :)

[22:33] <lizmat> gnight jnthn

[22:33] <jnthn> o/
