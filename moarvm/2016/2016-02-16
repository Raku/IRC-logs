[02:04] *** vendethiel joined
[02:48] *** ilbot3 joined
[02:55] *** FROGGS_ joined
[04:32] *** TimToady joined
[07:37] *** FROGGS joined
[08:39] *** zakharyas joined
[08:52] *** vendethiel joined
[09:11] <dalek> MoarVM: 7d0e60f | FROGGS++ | src/io/procops.c:

[09:11] <dalek> MoarVM: plug memory leak when shelling out without capturing

[09:11] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7d0e60f096

[09:11] <FROGGS> jnthn / hoelzro: ^^

[09:18] *** zakharyas joined
[10:00] *** brrt joined
[10:07] <brrt> timotimo: thanks for that link on LLVM

[10:07] <brrt> was interesting

[10:30] *** vendethiel joined
[11:47] *** brrt joined
[11:53] *** vendethiel joined
[12:39] *** vendethiel joined
[12:44] <timotimo> i'm glad :)

[14:19] *** vendethiel joined
[15:43] *** brrt joined
[16:34] *** vendethiel joined
[17:04] *** vendethiel joined
[17:05] *** FROGGS joined
[17:05] *** zakharyas joined
[17:29] *** vendethiel joined
[18:36] *** colomon joined
[18:40] *** vendethiel joined
[18:49] *** FROGGS[mobile] joined
[18:57] *** FROGGS[mobile] joined
[18:58] *** FROGGS[mobile]2 joined
[18:59] <FROGGS[mobile]2> o/

[19:15] <[Coke]> Getting a hang on non-jit moar at rakudo/nom and roast/master for t/spec/S32-io/IO-Socket-Async.t on hack.p6c.org

[19:16] *** patrickz joined
[20:37] <jnthn> FROGGS: Your patch fixed two of the three leaking t/nqp tests

[20:38] <jnthn> 86-pipes.t still has 3KB worth of leaks

[20:44] <jnthn> qregex.t seems to take forever under valgrind, so skipping that for now

[20:44] <jnthn> t/hll/*.t is clean. t/qast/*.t also.

[20:45] <jnthn> t/moar/*.t has some leaks

[20:45] <timotimo> qregex.t is a pretty huge

[20:45] <jnthn> Yeah

[20:45] <timotimo> i think it does an eval per regex that comes in via the declarative file?

[20:46] <jnthn> yeah

[20:46] <timotimo> that probably does a gigantic amount of churn memory-wise

[20:46] <jnthn> I may try it with cut down input

[20:46] <jnthn> But there's other leaks "on the table" first

[20:49] <timotimo> good good :)

[20:53] <jnthn> ooh, naughty multidim code

[21:06] <dalek> MoarVM: 35d5ff1 | jnthn++ | src/ (3 files):

[21:06] <dalek> MoarVM: Fix leak on out-of-bounds multi-dim access.

[21:06] <dalek> MoarVM:

[21:06] <dalek> MoarVM: In-bounds ones never leaked. Along the way, improve performance by

[21:06] <dalek> MoarVM: avoiding a load of malloc/free churn. While most real-life accesses

[21:06] <dalek> MoarVM: should eventually go through the cheaper 2D/3D special-case APIs, this

[21:06] <dalek> MoarVM: improves things for the remaining cases, and in the interim.

[21:06] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/35d5ff127e

[21:27] <dalek> MoarVM: 0e96e1c | jnthn++ | src/core/ (3 files):

[21:27] <dalek> MoarVM: Make sure unused continuation tags get freed.

[21:27] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0e96e1cf26

[21:28] *** colomon joined
[21:34] <jnthn> Turns out disabling the fixed size allocator is a good way to uncover more issues.

[21:40] <timotimo> oh, good point

[21:41] <timotimo> we don't have leak analysis for that

[21:52] <dalek> MoarVM: a4b683e | jnthn++ | src/ (3 files):

[21:52] <dalek> MoarVM: Fix a couple of NFG cleanup flaws.

[21:52] <dalek> MoarVM:

[21:52] <dalek> MoarVM: Free memory allocated with fixed size allocator using it, and make

[21:52] <dalek> MoarVM: sure we don't trip over the unchanged case sentinel.

[21:52] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a4b683e5fe

[22:02] <dalek> MoarVM: 6f9be70 | jnthn++ | src/ (2 files):

[22:02] <dalek> MoarVM: Free synthetic combiner storage.

[22:02] <dalek> MoarVM:

[22:02] <dalek> MoarVM: Like other NFG leaks, not really interesting for long-lived programs,

[22:02] <dalek> MoarVM: just missing cleanup at shutdown with --full-cleanup.

[22:02] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/6f9be70679

[22:02] <jnthn> Still need to walk/free the trie

[22:08] * jnthn decides to trie it tomorrow... :)

[22:08] * jnthn needs to place an order, to fix the "extreme low beer stock" condition here...

[22:08] <[Coke]> that test is still hung, btw, hours later. The memory/cpu ulimits in place aren't killing it.

[22:09] * [Coke] remembers beer. :|

[22:09] <jnthn> [Coke]: I'm guessing it's a deadlock...

[22:09] <[Coke]> it happens consistently for me on hack sans jit.

[22:09] <[Coke]> (so I don't know if it happens with jit, because non-jit always runs first. :)

[22:09] <jnthn> [Coke]: Possibly the really nasty GC orchestration one that I need to get the brane to tackle...

[22:15] <jnthn> Noooo...they stopped selling the nice regional breweries ale selection :(

[22:26] <timotimo> :<

[22:40] *** vendethiel joined
[23:20] *** vendethiel joined
[23:31] *** ilmari_ joined
[23:32] *** [Coke]_ joined
[23:39] *** khagan joined
[23:41] *** TimToady joined
[23:50] *** synopsebot6 joined
