[01:54] *** pyrimidine joined
[02:06] *** pyrimidine joined
[02:15] *** pyrimidine joined
[02:19] *** FROGGS_ joined
[02:34] *** pyrimidine joined
[02:46] *** pyrimidine joined
[02:48] *** ilbot3 joined
[03:54] *** pyrimidine joined
[04:06] *** pyrimidine joined
[04:13] *** pyrimidine joined
[04:50] <JimmyZ> FROGGS_: I suspect changing readdir_r to readdir may fix your problem :)

[04:50] <JimmyZ> FROGGS_: anyway, I will  commit it someday :P

[04:52] <geekosaur> um. making it less thread safe does not sound like a good fix

[04:52] <geekosaur> (granting that readdir/readdir_r thread safety is a bit dubious to begin with)

[04:53] <JimmyZ> readdir_r has some problem https://womble.decadent.org.uk/readdir_r-advisory.html too

[04:56] <JimmyZ> since it's low api, who want to keep it more safe, can write it with a lock or something by perl6 :P

[09:04] <FROGGS_> JimmyZ: let me do that... then I can hack in some proper detection...

[09:37] *** brrt joined
[09:37] <brrt> \o

[09:37] <stmuk> . o O ( that womble url is scary! )

[09:37] <yoleaux2> 18 Oct 2016 17:52Z <FROGGS> stmuk: have a look at https://github.com/MoarVM/MoarVM/commit/0402247933

[09:38] <brrt> i need one minor name thing for the JIT (and then I'm done, sort of)

[09:43] <stmuk> FROGGS_: yeah that moar change fixed one of my probs! cheers

[09:45] <FROGGS_> JimmyZ: it is not about readdir vs readdir_r directly... it is more about "struct dirent entry;" being not enough

[09:45] <FROGGS_> sizeof(struct dirent)=20

[09:45] <FROGGS_> (offsetof(struct dirent, d_name) + NAME_MAX + 1)=274

[09:45] <FROGGS_> NAME_MAX=255

[09:53] <FROGGS_> nqp and rakudo pass now all tests on solaris 11.3 x86_64 \o/

[10:05] <dalek> MoarVM: fdfc1f9 | FROGGS++ | build/setup.pm:

[10:05] <dalek> MoarVM: request POSIX.1.c compliance on solaris

[10:05] <dalek> MoarVM:

[10:05] <dalek> MoarVM: Otherwise we get funtions compatible to POSIX.1.c Draft 6 only.

[10:05] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fdfc1f94bf

[10:34] <JimmyZ> FROGGS_: yeah, but seems that readdir() doesn't have this issue.

[10:37] <FROGGS_> true, but I'm going the "safe" way :o)

[10:40] *** lizmat joined
[10:44] <dalek> MoarVM: c0a2997 | FROGGS++ | src/io/dirops.c:

[10:44] <dalek> MoarVM: alloc enough memory for readdir_r on solaris

[10:44] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c0a2997e05

[12:17] <dalek> MoarVM/multidimarray_view: deadf05 | timotimo++ | src/6model/reprs (4 files):

[12:17] <dalek> MoarVM/multidimarray_view: WIP on MultiDimArrayView REPR.

[12:17] <dalek> MoarVM/multidimarray_view: review: https://github.com/MoarVM/MoarVM/commit/deadf05de4

[12:17] <timotimo> (transfer from laptop to desktop)

[12:41] <dalek> MoarVM/readdir: 15c8190 | (Jimmy Zhuo)++ | src/io/dirops.c:

[12:41] <dalek> MoarVM/readdir: change to use readdir insteal of readdir_r

[12:41] <dalek> MoarVM/readdir: review: https://github.com/MoarVM/MoarVM/commit/15c81903f0

[12:43] <JimmyZ> FROGGS_: Could you try this one? I hope it will fix all the platform which have some issue with readdir_r

[12:43] <JimmyZ> FROGGS_: not just on solaris

[12:54] *** vendethiel joined
[13:13] *** TimToady joined
[13:32] *** lizmat joined
[13:58] <FROGGS_> JimmyZ: and what about thread safety?

[14:00] <JimmyZ> FROGGS_: we don't use dirhandle by multi-thread in rakudo

[14:00] <JimmyZ> FROGGS_: we just have a dir() function

[14:03] <dalek> MoarVM: 15c8190 | (Jimmy Zhuo)++ | src/io/dirops.c:

[14:03] <dalek> MoarVM: change to use readdir insteal of readdir_r

[14:03] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/15c81903f0

[14:03] <FROGGS_> JimmyZ++ # all tests pass

[14:04] <JimmyZ> FROGGS_: I think I can merge it?

[14:06] <JimmyZ> anyone who wants to use dirhandle by multi-thread through nqp ops , should give it a mutex :)

[14:07] <JimmyZ> though readdir is thread safe in gnu libc

[14:09] <JimmyZ> oh, you merged it

[14:09] <FROGGS_> JimmyZ: I did

[14:13] <dalek> MoarVM: 656143c | (Jimmy Zhuo)++ | src/io/dirops.c:

[14:13] <dalek> MoarVM: code clean up

[14:13] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/656143ce72

[14:14] <JimmyZ> FROGGS_: thanks

[14:48] *** domidumont joined
[16:16] <FROGGS_> sad that the qemu sparc64 emulator seems not be reliable...

[16:21] <dalek> MoarVM: 8047226 | FROGGS++ | build/setup.pm:

[16:21] <dalek> MoarVM: use gcc on solaris by default

[16:21] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/80472263a4

[16:56] *** zakharyas joined
[17:38] <timotimo> i think i'll just make setstrides an op that explicitly handles *View only, rather than adding that to the associative reprops all things share

[18:07] <dalek> MoarVM/multidimarray_view: b024ad3 | timotimo++ | / (5 files):

[18:07] <dalek> MoarVM/multidimarray_view: MultiDimArrayView can compile now

[18:07] <dalek> MoarVM/multidimarray_view:

[18:07] <dalek> MoarVM/multidimarray_view: need to implement setting and getting stride and

[18:07] <dalek> MoarVM/multidimarray_view: calling that via custom ops now ...

[18:07] <dalek> MoarVM/multidimarray_view: review: https://github.com/MoarVM/MoarVM/commit/b024ad3319

[18:24] *** domidumont joined
[19:17] <dalek> MoarVM: 90d7f1e | FROGGS++ | / (2 files):

[19:17] <dalek> MoarVM: give diagnostic output when compiling fails

[19:17] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/90d7f1e86d

[19:31] <dalek> MoarVM: 340cd0d | FROGGS++ | build/setup.pm:

[19:31] <dalek> MoarVM: current solaris compiler does not understand -mt

[19:31] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/340cd0d9e8

[19:31] <dalek> MoarVM: 1f41fd5 | FROGGS++ | Configure.pl:

[19:31] <dalek> MoarVM: query libffi header directory on solaris

[19:31] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/1f41fd513c

[20:39] *** leego joined
[20:42] *** leego joined
[20:54] *** lizmat joined
