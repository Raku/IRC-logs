[01:48] *** ilbot3 joined
[05:24] *** domidumont joined
[05:54] *** domidumont joined
[07:22] *** zakharyas joined
[09:57] *** zakharyas joined
[13:06] *** zakharyas joined
[13:24] *** dalek joined
[15:37] *** lizmat joined
[17:27] *** zakharyas joined
[18:02] *** FROGGS joined
[19:52] *** Ven_ joined
[20:16] <dalek> MoarVM/even-moar-jit: ff5f25a | LemonBoy++ | src/io/syncfile.c:

[20:16] <dalek> MoarVM/even-moar-jit: Fix mvm_tell for files that haven't been read from.

[20:16] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/ff5f25abb1

[20:16] <dalek> MoarVM/even-moar-jit: 2793d53 | paultcochrane++ | src/profiler/heapsnapshot.c:

[20:16] <dalek> MoarVM/even-moar-jit: Fix typo in comment

[20:16] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/2793d5307e

[20:16] <dalek> MoarVM/even-moar-jit: b005d7e | paultcochrane++ | src/6model/ (4 files):

[20:16] <dalek> MoarVM/even-moar-jit: Remove unused variables (src/6model)

[20:16] <dalek> MoarVM/even-moar-jit:

[20:16] <dalek> MoarVM/even-moar-jit: GCC noticed that these variables were unused; removing them did not cause

[20:16] <dalek> MoarVM/even-moar-jit: any test failures in the nqp test suite.  This commit is restricted to the

[20:16] <dalek> MoarVM/even-moar-jit: `src/6model` directory in order to keep the patch size small.

[20:16] <dalek> MoarVM/even-moar-jit:

[20:16] <dalek> MoarVM/even-moar-jit: Fix mvm_tell for files that haven't been read from.

[20:16] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/3abddcf335

[20:16] <dalek> MoarVM/even-moar-jit: 3d04391 | jnthn++ | src/io/syncsocket.c:

[20:16] <dalek> MoarVM/even-moar-jit: Mark thread GC blocked while accepting a socket.

[20:16] <dalek> MoarVM/even-moar-jit:

[20:16] <dalek> MoarVM/even-moar-jit: This means that other threads doing work will not end up with their

[20:16] <dalek> MoarVM/even-moar-jit: GC runs hanging until a connection comes in.

[20:16] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/3d04391033

[20:16] <dalek> MoarVM/even-moar-jit: 7b6c092 | moritz++ | Configure.pl:

[20:16] <dalek> MoarVM/even-moar-jit: Configure: explicit use lib ".". Closes #403.

[20:16] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/7b6c092559

[20:16] <dalek> MoarVM/even-moar-jit: ef129c4 | jnthn++ | src/core/threadcontext.c:

[20:16] <dalek> MoarVM/even-moar-jit: Fix missing finalization queue cleanup.

[20:16] <dalek> MoarVM/even-moar-jit:

[20:16] <dalek> MoarVM/even-moar-jit: Only a small leak, but it adds to the clutter when looking at valgrind

[20:16] <dalek> MoarVM/even-moar-jit: leak check output.

[20:16] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/ef129c42ca

[20:16] <dalek> MoarVM/even-moar-jit: 4938b65 | jnthn++ | src/core/bytecode.c:

[20:16] <dalek> MoarVM/even-moar-jit: Mark SC used in bytecode loading as claimed.

[20:16] <dalek> MoarVM/even-moar-jit:

[20:16] <dalek> MoarVM/even-moar-jit: Otherwise, it might be considered unclaimed and so go uncollected,

[20:16] <dalek> MoarVM/even-moar-jit: thus leading to things like EVAL leaking memory.

[20:16] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/4938b65065

[20:16] <dalek> MoarVM/even-moar-jit: 2eedba8 | jnthn++ | src/6model/ (2 files):

[20:16] <dalek> MoarVM/even-moar-jit: Fix a-bit-too-few error in multi cache.

[20:16] <dalek> MoarVM/even-moar-jit:

[20:16] <dalek> MoarVM/even-moar-jit: The indexes we store for args are indexes into the args buffer (which

[20:16] <dalek> MoarVM/even-moar-jit: includes names) rather than the callsite flags, meaning that they can

[20:16] <dalek> MoarVM/even-moar-jit: be up to twice as long. Fixes a bug where we could fail to find some

[20:16] <dalek> MoarVM/even-moar-jit: entries when caching callsites with many named args, resulting in the

[20:16] <dalek> MoarVM/even-moar-jit: same entries being put into the cache again and again.

[20:16] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/2eedba88d2

[20:16] <dalek> MoarVM/even-moar-jit: b8a8e6b | brrt++ | / (20 files):

[20:16] <dalek> MoarVM/even-moar-jit: Merge remote-tracking branch 'origin/master' into even-moar-jit

[20:16] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/b8a8e6bf32

[20:22] *** Ven__ joined
[21:25] *** stmuk joined
[21:48] *** hoelzro joined
[22:02] *** lizmat joined
[22:47] <timotimo> huh. i've got MVM_JIT_EXPR_ENABLE=yes but i don't see the pretty outputs in the jitlog ?!?

[22:49] <timotimo> ah

[22:49] <timotimo> it goes through itoa, so it has to be numeric

[22:56] <timotimo> neat little trick of the day: select a digraph (% key helps to jump between braces for the selection) and do :w! dot -Tx11

[22:57] <timotimo> (when you have a selection in vim and hit :, it'll automatically insert the "use selection for this command" thing at the beginning)

[22:57] <timotimo> i think i might turn that into a keybind for when i look at a jit log in vim

[23:07] <timotimo> decont and wval are the top 2 "Cannot get template for" lines in my little test case

[23:08] <timotimo> the next one after that causes only half as many graphs to be broken up: prepargs, very closely followed by sp_p6ogetvt_o

[23:10] <timotimo> i imagine takedispatcher would be sort of easy to implement as a template. it's 6th with 291 break-offs (top spot has 935)

[23:13] <timotimo> lastexpayload + return_o could be a nice combo to have; return_o is in the 5th spot (but potentially not easy to do?), and the 14th spot goes to lastexpayload (but pretty much every lastexpayload is immediately followed by return_o)

[23:13] <timotimo> and with that i'll go to bed

[23:15] <timotimo> a big chunk of break-offs during the beginning (i.e. inside the compiler) are from box_i (coming directly after hllboxtype_i, which *is* implemented)
