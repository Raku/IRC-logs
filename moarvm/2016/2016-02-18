[02:38] *** colomon joined
[02:48] *** ilbot3 joined
[03:02] <orbus> anybody feel like taking a look at a sparc stack trace?

[03:02] <orbus> http://paste.scsys.co.uk/505729

[03:02] <orbus> I've coaxed it into building, but it dumps core as soon as I try to Configure nqp

[03:03] <orbus> seems to be an alignment problem

[03:48] *** colomon joined
[04:07] <orbus> that's built on gcc by the way

[07:32] *** FROGGS joined
[07:35] <FROGGS> orbus: nwc10 might be able to give some pointers... I understand too little to help here

[07:53] *** nebuchadnezzar joined
[08:55] *** zakharyas joined
[09:17] *** kjs_ joined
[09:19] *** kjs_ joined
[10:47] *** donaldh joined
[11:55] *** kjs_ joined
[12:03] *** kjs_ joined
[12:53] *** donaldh joined
[14:00] <orbus> .tell FROGGS thanks - I'll wait until nwc10 is around

[14:00] <orbus> oops, no tell bot - oh well, I'll tell him later

[14:04] *** kjs_ joined
[14:55] *** kjs_ joined
[16:14] *** kjs_ joined
[16:34] *** zakharyas joined
[18:18] <timotimo> hm. it seems like in order to speed up my current thing, i'd be implementing the extend_i32 op for the jit. and then probably also the others, because why stop at one?

[18:27] <timotimo> i got around needing extend_i32, so ... slacking off again :P

[18:33] *** zakharyas joined
[18:39] <timotimo> https://i.imgur.com/R2aM7fD.png

[18:40] <timotimo> nooooo, what are you doing spesh?!?

[18:40] <timotimo> whhhhyyyyyyyyyyy

[18:41] <timotimo> i don't think i've seen code-gen crap out something so bad before

[18:43] <timotimo> oh

[18:43] <timotimo> that's before inserting the logging

[18:43] <timotimo> thank god

[19:26] <nwc10> orbus: I apologise - I have rather too much $work and $other to be able to really give you the time that you deserve

[19:27] <nwc10> your backtrace doesn't seem to have line numbers. I'm not familiar enough with Solaris tools to know - is this because the thing you used to generate the backtrace doesn't do line numbers? (and gdb would?)

[19:27] <nwc10> or because the binary wasn't built with debugging information?

[19:27] <nwc10> it's pretty much impossible to figure out why it breaks without line numbers

[19:28] <nwc10> and it might be possible to have a good guess from just a backtrace with linenumbers (and no further information)

[19:29] <nwc10> implied - if the binary isn't built with line numbers, I'm not totally sure how to fix that. It might be as simple as needing to re-run Configure.pl for MoarVM adding --debug

[19:51] *** patrickz joined
[19:53] *** FROGGS joined
[19:53] <FROGGS> o/

[20:07] *** cognominal_ joined
[20:10] *** FROGGS_ joined
[20:12] *** nine joined
[20:14] *** camelia joined
[20:26] <FROGGS_> wow

[20:26] <FROGGS_> $ perl6 -Ilib -MBox2D::PolygonShape -MNativeCall -e 'my $p = Box2D::PolygonShape.new(:m_type(42)); say nativecast(Box2D::Shape, $p)'

[20:26] <FROGGS_> b2Shape.new(vmt => NativeCall::Types::Pointer, m_type => 42, m_radius => 0e0)

[20:26] <FROGGS_> I did not even know we can let one CStruct inherit from another

[20:26] <jnthn> :)

[20:27] <FROGGS_> do we have that since a long time?

[20:27] <jnthn> I thought so

[20:27] <FROGGS_> nice :o)

[20:27] <jnthn> Maybe since the start

[20:28] <jnthn> Since the repr compose protocol for attrs would almost need you to opt out of handling this case...

[20:28] <jnthn> Or put better, it's probably as hard to not support it as it is to support it :)

[20:29] <FROGGS_> hehe

[20:29] <FROGGS_> I like it :o)

[20:32] <arnsholt> Yeah, I think it falls out naturally from how classes work

[20:32] <FROGGS_> yeah

[20:33] <FROGGS_> we probably have the best ffi...

[20:40] <jnthn> repr poly really helps

[20:40] <jnthn> Still, we've room for further improvement :)

[20:40] <jnthn> I suspect our push on leaks will show up some FFI bits to address

[20:41] *** Ven joined
[20:45] <arnsholt> I know it will

[20:46] <arnsholt> I think I know how I'd implement a feature to handle freeing of NativeCall objects, but it's those dang tuits =(

[20:49] <FROGGS_> hmmm, how do I "refresh" a CPPStruct?

[20:49] <FROGGS_> I've got a method that calls into the C++ lib and these method sets some fields

[20:50] <FROGGS_> but Perl 6 does not seem to know, and the attributes stay unchanged

[20:50] * FROGGS_ tries to call refresh

[20:56] <FROGGS_> hmmm, no luck

[20:56] <FROGGS_> refresh() is a noop for int/num attributes

[20:58] <FROGGS_> that's it for today...

[20:58] <FROGGS_> gnight

[21:00] <timotimo> huh, if the structs change but perl6 doesn't see that, that'd really be a problem

[21:00] <timotimo> of the "your cpp lib is writing to a copy rather than the original" sort

[21:01] *** Ven joined
[21:08] *** Ven joined
[21:36] *** Ven joined
[21:38] *** Coke__ joined
[22:04] *** Ven joined
[23:59] *** brrt joined
