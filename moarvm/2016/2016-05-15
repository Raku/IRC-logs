[01:36] *** ggoebel115 joined
[01:40] *** TimToady joined
[01:48] *** ilbot3 joined
[04:14] *** mtj_ joined
[06:01] *** domidumont joined
[06:07] *** domidumont joined
[06:26] *** lizmat joined
[06:34] <dalek> MoarVM: d0243ee | (Jimmy Zhuo)++ | src/6model/serialization.c:

[06:34] <dalek> MoarVM: Update more serialization from int32 to varint.

[06:34] <dalek> MoarVM:

[06:34] <dalek> MoarVM: This reduces rakudo core setting size about 33KB.

[06:34] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d0243eed17

[08:20] *** Ven joined
[09:50] *** zakharyas joined
[11:02] <dalek> MoarVM/serialization_int: 35a4f35 | (Jimmy Zhuo)++ | src/6model/serialization.c:

[11:02] <dalek> MoarVM/serialization_int: Update more serialization from int32 to varint.

[11:02] <dalek> MoarVM/serialization_int:

[11:02] <dalek> MoarVM/serialization_int: This reduces rakudo core setting size about 512 KB.

[11:02] <dalek> MoarVM/serialization_int: review: https://github.com/MoarVM/MoarVM/commit/35a4f35161

[11:06] <dalek> MoarVM/serialization_int: 32b9ffe | (Jimmy Zhuo)++ | src/6model/serialization.c:

[11:06] <dalek> MoarVM/serialization_int: Update more serialization from int32 to varint.

[11:06] <dalek> MoarVM/serialization_int:

[11:06] <dalek> MoarVM/serialization_int: This reduces rakudo core setting size about 512 KB.

[11:06] <dalek> MoarVM/serialization_int: review: https://github.com/MoarVM/MoarVM/commit/32b9ffe6e3

[11:44] <dalek> MoarVM/serialization_int: 225719f | (Jimmy Zhuo)++ | src/6model/serialization.c:

[11:44] <dalek> MoarVM/serialization_int: Update more serialization from int32 to varint.

[11:44] <dalek> MoarVM/serialization_int:

[11:44] <dalek> MoarVM/serialization_int: This reduces rakudo core setting size about 512 KB.

[11:44] <dalek> MoarVM/serialization_int: review: https://github.com/MoarVM/MoarVM/commit/225719f835

[12:01] <dalek> MoarVM: cd5dfcf | (Jimmy Zhuo)++ | src/6model/serialization.c:

[12:01] <dalek> MoarVM: Update more serialization from int32 to varint.

[12:01] <dalek> MoarVM:

[12:01] <dalek> MoarVM: This reduces rakudo core setting size about 512 KB.

[12:01] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/cd5dfcff64

[12:36] <dalek> MoarVM: 89d185e | (Jimmy Zhuo)++ | src/6model/serialization.c:

[12:36] <dalek> MoarVM: rename a function name, so it's easy to find

[12:36] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/89d185efa6

[13:00] *** Ven joined
[14:49] <timotimo> the heap profiler needs a bit of work related to reframe, i think. it seems to reliably stumble over pointers that make no sense

[15:04] <timotimo> huh. even with moar and rakudo checked out to a pre-reframe commit, i get a frame that's 0x0 in process_workitems

[15:04] <timotimo> well, an item with its .target set to 0x0

[15:08] * timotimo doesn't have brane today, like, at all

[16:08] *** cognominal joined
[16:38] <jnthn> timotimo: No brane here either, alas, but I'll see if I can figure it tomorrow... :)

[18:16] *** domidumont joined
[19:45] *** dalek joined
[19:46] *** dalek joined
[19:47] *** dalek joined
[19:48] *** dalek joined
[19:55] *** ilbot3 joined
[20:25] <timotimo> i'll pepper a few aggressive checks into worklist_add or something, and see where the data comes from

[20:38] *** cognominal joined
[21:48] <timotimo> 925

[21:48] <timotimo> NULL REPR in item added to GC worklist

[21:48] <timotimo> there we go

[21:53] <timotimo> it's gc_mark of MVMCode, it seems like

[21:58] <timotimo> https://gist.github.com/timo/9eae73b3f633066f3111b96caa5d4274  -  so the frame (in outer) is a heap-promoted frame, yet its st and everything is nulled out. that's what the heap snapshot taking code is stumbling over

[22:02] <timotimo> so it could either be we're missing an extra case in the heap snapshot thing for MVM_CF_FRAME, or something isn't setting the st on the frame object when promoting or something

[22:02] <timotimo> i'm expecting it'd be the former. on the other hand, i did checkout a moar before reframe and it also segfaulted on the code i wanted to profile ... :\

[22:07] <timotimo> cool, i threw out the diagnostic panic and it runs to completion apparently

[22:08] <timotimo> but in another program it segfaults ...

[22:09] <timotimo> same problem again, too

[22:09] <timotimo> so ... was i barking up the wrong tree perhaps? :\
