[00:26] *** vendethiel joined
[00:28] *** colomon joined
[00:58] *** vendethiel joined
[01:32] * diakopter skipped the laggard May 2016 android update and jumped straight to N beta

[01:39] <diakopter> re-precompiling apps is the longest step

[01:48] *** ilbot3 joined
[01:52] *** vendethiel joined
[01:57] *** zakharyas joined
[02:03] *** tokuhirom joined
[03:09] *** vendethiel joined
[04:19] *** tokuhirom joined
[04:38] *** vendethiel joined
[05:07] *** vendethiel joined
[05:42] *** vendethiel joined
[05:51] *** domidumont joined
[05:55] *** domidumont joined
[06:19] *** domidumont joined
[06:20] *** domidumont joined
[06:24] *** vendethiel joined
[06:29] *** tokuhirom joined
[06:59] *** vendethiel joined
[07:17] *** BinGOs joined
[07:50] *** vendethiel joined
[08:07] *** domidumont joined
[08:55] *** domidumont joined
[09:08] *** domidumont joined
[09:30] *** vendethiel joined
[10:18] *** vendethiel joined
[11:21] *** brrt joined
[11:22] <brrt> good *

[11:26] <jnthn> o/ brrt

[11:26] <brrt> \o jnthn

[11:27] <brrt> did you know.. that the webkit git repo is over 5gb?

[11:27] *** vendethiel joined
[11:29] <jnthn> No, but...wow :)

[11:30] <nwc10> what makes it so big? Source code? Or binaries?

[11:30] <brrt> not sure...

[11:32] <brrt> code it seems

[11:33] <JimmyZ> so they wrote 5gb code by hande?

[11:33] <JimmyZ> hand

[11:34] <brrt> JavascriptCore is 64MB checked-out source

[11:34] <brrt> WebCore is 163mb

[11:34] <brrt> it seems that way

[11:35] <moritz> several developers working full-time in a verbose-ish language

[11:35] <moritz> yes, seems legit.

[11:35] <brrt> 850mb on layouttests

[11:36] <brrt> 307 mb on websites, too

[11:38] <brrt> anyway, it's interesting the b3 backend, but i think the expr jit is and will be much, much smaller

[11:39] <JimmyZ> Is it luajit 2.0 using another jit api instead of dynasm?

[11:40] <brrt> yes

[11:41] <brrt> not sure if i understand the question 100%, but luajit2 does its own machine code generation, it only uses dynasm to compile an interpreter

[11:41] <JimmyZ> I try to find the code , but most is  dynasm

[11:42] <brrt> i.e. at boot, dynasm is used to compile the interpreter, and the real JIT then compiles the subroutines without dynasm

[11:42] <JimmyZ> I didn't see where jit api code is

[11:43] <brrt> lemessee...

[11:44] <JimmyZ> http://repo.or.cz/luajit-2.0.git/blob/HEAD:/src/lj_asm.c ?

[11:45] <brrt> yeah, that's part of it

[11:45] <JimmyZ> so it is lj_asm prefix

[11:46] <brrt> but that's just the assembly

[11:48] <JimmyZ> i see http://repo.or.cz/luajit-2.0.git/blob/HEAD:/src/lj_asm_x86.h for X86

[12:06] *** vendethiel joined
[12:24] *** tokuhirom joined
[12:45] *** brrt joined
[13:01] *** domidumont joined
[13:07] *** vendethiel joined
[13:20] <brrt> fwiw, i wouldn't dare to lift that code out of luajit

[13:25] *** tokuhirom joined
[13:26] <timotimo> heh.

[13:27] <brrt> and i have no particular impetus to remove our dependency on dynasm

[13:38] *** vendethiel joined
[13:38] <brrt> timotimo: the bytecode in the MVMJitCode structure is indeed a static bit

[13:42] *** lizmat joined
[13:50] <dalek> Heuristic branch merge: pushed 218 commits to MoarVM/even-moar-jit by bdw

[13:50] <brrt> that merged even-moar-jit, but i've noticed there are some problems with rakudo still...

[13:51] <brrt> eh, reframe, into even-moar-jit

[13:51] *** mst joined
[13:52] <brrt> ah, a segv in building CORE.setting

[13:52] <brrt> great

[13:56] <brrt> i'm jumping out somewhere to the void..

[13:56] <brrt> foundit

[14:01] <dalek> MoarVM/even-moar-jit: 5b96b18 | brrt++ | src/jit/x64/emit.dasc:

[14:01] <dalek> MoarVM/even-moar-jit: Don't jump to nonexisting labels

[14:01] <dalek> MoarVM/even-moar-jit:

[14:01] <dalek> MoarVM/even-moar-jit: The difference between ->out and ->exit don't exist anymore because

[14:01] <dalek> MoarVM/even-moar-jit: we don't use a return value from MVM_jit_enter_code.

[14:01] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/5b96b1805a

[14:02] <brrt> and with that, even-moar-jit is up to date with reframe

[14:09] *** vendethiel joined
[14:12] * brrt recently realized that pre-coloring would have to happen prior to the other register allocator steps

[14:12] <brrt> what's in a name

[14:50] *** vendethiel joined
[15:01] *** lizmat joined
[15:15] *** domidumont joined
[15:15] *** domidumont left
[16:03] *** vendethiel joined
[16:58] *** domidumont joined
[17:22] *** vendethiel joined
[17:27] *** tokuhirom joined
[17:54] *** lizmat joined
[18:05] *** vendethiel joined
[18:26] *** avar joined
[18:41] *** tokuhirom joined
[18:54] *** vendethiel joined
[20:22] *** lizmat joined
[20:40] *** brrt joined
[20:43] *** Ven_ joined
[20:49] *** tokuhirom joined
