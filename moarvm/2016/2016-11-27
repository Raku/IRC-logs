[02:22] *** xtt2 joined
[04:07] *** viki joined
[04:08] *** viki joined
[06:09] *** xtt2 joined
[08:18] *** domidumont joined
[08:25] *** domidumont joined
[08:58] *** domidumont joined
[09:50] *** zakharyas joined
[11:41] *** domidumont joined
[12:37] *** FROGGS joined
[15:08] *** domidumont joined
[15:51] *** xtt2 joined
[16:38] *** domidumont joined
[17:28] *** vendethiel joined
[18:06] *** lizmat_ joined
[18:25] *** vendethiel joined
[19:56] <dalek> MoarVM: bf777f6 | (Jan-Olof Hendig)++ | src/strings/nfg.c:

[19:56] <dalek> MoarVM: The function MVMNFGTrieNode incorrectly tries to free a memory block of

[19:56] <dalek> MoarVM: sizeof(MVMNGFTrieNodeEntry) when the memory chunk to be freed contains

[19:56] <dalek> MoarVM: an MVMNFGTrieNode. This works on 64-bit systems since both structs

[19:56] <dalek> MoarVM: happens to be of the same size, something which is not the case on 32

[19:56] <dalek> MoarVM: bit systems. This resolves RT #130191 and is spectest clean.

[19:56] <dalek> MoarVM:

[19:56] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=130191

[19:56] <dalek> MoarVM: cygx++ for helping track this down.

[19:56] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/bf777f66bc

[19:56] <dalek> MoarVM: ee0b54e | lizmat++ | src/strings/nfg.c:

[19:56] <dalek> MoarVM: Merge pull request #443 from dogbert17/master

[19:56] <jnthn> Nice catch:)

[19:57] <nwc10> I wonder

[19:57] <nwc10> a) if there are any other bugs like that

[19:57] <nwc10> b) if there's a way to systematically add a build option to prevent any ever happening again

[19:58] <jnthn> Yes, there's a debug mode in fixedsizealloc.c

[19:58] <jnthn> Which validates the size released matches the size allocated

[19:58] <nwc10> aha right. but one would have to build on the 32 bit system

[19:59] <jnthn> Indeed.

[22:06] *** mj41 joined
[22:50] <timotimo> hmm. a function "sizeofbutpretend32bitsystem" :D

[22:51] <timotimo> and then have to pass both to alloc and free

[22:51] <timotimo> so there's two pairs of comparison
