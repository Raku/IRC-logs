[00:59] *** pyrimidine joined
[01:42] *** vendethiel- joined
[02:03] *** pyrimidine joined
[02:28] *** FROGGS joined
[02:31] *** pyrimidine joined
[02:48] *** ilbot3 joined
[03:38] *** pyrimidine joined
[05:00] *** leego joined
[05:03] *** leego joined
[05:33] *** pyrimidi_ joined
[05:55] *** geekosaur joined
[05:57] *** geekosaur joined
[10:31] *** domidumont joined
[10:51] *** FROGGS joined
[12:24] <jnthn> timotimo: In 7d31a884f80 in the gc_free function of compunit when it evacuates string data into separate buffers, should it not clear the foreign_memory flag?

[12:24] * jnthn fears this causes a memory leak :(

[12:42] <timotimo> oh!

[12:42] <jnthn> valgrind evidence is suggestive that it does

[12:42] <jnthn> Confirmation soon

[12:43] <jnthn> But a leak in gc_free proportional to how many EVALs I do is suggestive

[12:43] <jnthn> Just seeing if they disappear with a revert of the two

[12:43] <jnthn> Yes, indeed. Those leaks go with the revert.

[12:43] <jnthn> I'll revert them for the release

[12:43] <timotimo> really does sound like the clearing of the flag ought to happen

[12:43] <timotimo> OK

[12:43] <jnthn> Because I'm not comfortable we can test the fix well enough

[12:43] <jnthn> But I'm fine with them being unreverted post-releaes and the fix put in

[12:44] <jnthn> Just like to keep the risk down on releases :)

[12:44] *** Ven joined
[12:44] <timotimo> yes, indeed

[12:45] <dalek> MoarVM: 47629f3 | jnthn++ | src/6model/reprs/MVMCompUnit.c:

[12:45] <dalek> MoarVM: Revert "prevent access to un-deserialized strings in gc_free"

[12:45] <dalek> MoarVM:

[12:45] <dalek> MoarVM: This reverts commit 530f3cfdf57bacd953dff9a0c9706e4034a4da6d.

[12:45] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/47629f3230

[12:45] <dalek> MoarVM: b8f7229 | jnthn++ | src/ (4 files):

[12:45] <dalek> MoarVM: Revert "share some string's memory with compunit memory"

[12:45] <dalek> MoarVM:

[12:45] <dalek> MoarVM: This reverts commit 7d31a884f80ab3586df916d421995780f4da69c1. It

[12:45] <dalek> MoarVM: causes a memory leak by not clearing the foriegn_memory flag. This

[12:45] <dalek> MoarVM: is likely an easy fix, but we can't test it enough ahead of the

[12:45] <dalek> MoarVM: release. Thus, reverting this for the release.

[12:45] <timotimo> foriegn, eh? :)

[12:46] <dalek> MoarVM: 0ef9963 | jnthn++ | docs/ChangeLog:

[12:46] <dalek> MoarVM: ChangeLog for 2016.12.

[12:46] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0ef996315a

[12:46] <jnthn> Bah, these foriegners who cant English :P

[12:47] <jnthn> Feel free to glance the changelog for gammaros

[12:47] <dalek> MoarVM: 28ccad7 | jnthn++ | VERSION:

[12:47] <dalek> MoarVM: Bump VERSION.

[12:47] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/28ccad7658

[12:47] <timotimo> oh

[12:47] <timotimo> can do

[12:50] <timotimo> the only thing i see is that there's three entries that end in a .

[12:50] <jnthn> d'oh

[12:50] <timotimo> other than that it looks good

[12:50] <dalek> MoarVM: 0595ff8 | jnthn++ | docs/ChangeLog:

[12:50] <dalek> MoarVM: Be consistent; timotimo++.

[12:50] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0595ff82f3

[12:51] <jnthn> OK, just doing an NQP/Rakudo build on this release version to be sure all is well enough

[12:56] <timotimo> good blogpost, too :)

[12:58] <jnthn> The module behind it was a bit tricky in places :)

[13:00] <timotimo> i can imagine

[13:00] <timotimo> getting something priority-queue-like in place

[13:01] <timotimo> does it time code running on the threads to see if they run past another activation?

[13:03] <jnthn> No

[13:04] <jnthn> It tries to make sure that all the consequences of a particular event in virtual time have chance to contribute anything new to schedule

[13:04] <timotimo> right, that's what i imagine a priority queue to be used for

[13:04] <jnthn> Yeah, that may be a smarter data structure than I what I got :)

[13:06] <timotimo> can be refactored later :)

[13:07] <jnthn> It's the biggest MoarVM relesae yet! http://www.moarvm.org/releases/

[13:07] <jnthn> (3.3MB!)

[13:08] <timotimo> must be new unicode additions

[13:10] <jnthn> Release tagged

[13:10] <jnthn> Lunch now; will take care of website update afterwards

[13:10] <timotimo> \o/

[14:06] <dalek> moarvm.org: c102480 | jnthn++ | / (2 files):

[14:06] <dalek> moarvm.org: Update site for 2016.12 release.

[14:06] <dalek> moarvm.org: review: https://github.com/MoarVM/moarvm.org/commit/c1024806cd

[14:07] <jnthn> There we go :)

[14:53] *** dalek joined
[15:24] <dogbert17> o/

[15:25] <dogbert17> does this snippet look suspicious in any way? 'for ^1 { IO::Socket::INET.new( :port($_), :host("127.0.0.1") ); CATCH {next}; say $_~" is open" }'

[15:31] <moritz> yes

[15:31] <dogbert17> why

[15:31] <moritz> I believe you can't open port 0

[15:32] <moritz> or does that have some sort of special semantics?

[15:32] <dogbert17> fair enough :-) I stole it from a MoarVM bug report, the loop went from 0..4000 in that example

[15:32] <moritz> also, if you don't handle the exception in CATCH, it's rethrown

[15:33] <moritz> you need CATCH { default { next } }

[15:33] <dogbert17> ok, I'll try that

[15:35] <dogbert17> if I valgrind this snippet, old version or moritz corrected version I get an:

[15:35] <dogbert17> ==9818== Invalid read of size 4

[15:35] <dogbert17> ==9818==    at 0x41AA07F: uv__platform_invalidate_fd (in /home/dogbert/repos/rakudo/install/lib/libmoar.so)

[15:35] <dogbert17> ==9818==    by 0x41AF42C: uv__io_close (in /home/dogbert/repos/rakudo/install/lib/libmoar.so)

[15:36] <dogbert17> gisted output here: https://gist.github.com/dogbert17/dca0295c16d77b2ff4ae4be19a6f8279

[16:23] *** pyrimidine joined
[16:41] *** stmuk joined
[16:48] *** domidumont joined
[16:52] *** domidumont joined
[17:29] *** pyrimidine joined
[17:43] *** Ven joined
[18:12] *** domidumont joined
[19:30] *** pyrimidine joined
[19:45] *** domidumont joined
[20:46] *** Ven joined
[21:06] *** Ven joined
[21:26] *** Ven joined
[21:46] *** Ven joined
[21:55] <dalek> MoarVM/wip-tile-no-template: f33b0ee | brrt++ | 3rdparty/dynasm:

[21:55] <dalek> MoarVM/wip-tile-no-template: Really ignore minilua

[21:55] <dalek> MoarVM/wip-tile-no-template: review: https://github.com/MoarVM/MoarVM/commit/f33b0eedac

[21:59] <dalek> MoarVM/even-moar-jit: bbe01c2 | brrt++ | 3rdparty/dynasm:

[21:59] <dalek> MoarVM/even-moar-jit: Really ignore minilua

[21:59] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/bbe01c26da

[22:06] *** Ven joined
[22:26] *** pyrimidine joined
[22:26] *** Ven joined
[22:37] *** pyrimidine joined
[22:46] *** Ven joined
[22:55] *** pyrimidine joined
[23:06] *** Ven joined
[23:15] *** pyrimidine joined
[23:33] *** pyrimidine joined
