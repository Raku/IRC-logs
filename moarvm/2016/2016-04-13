[01:24] <diakopter> timotimo: there used to be an instruction that encoded that, but (ironically, perhaps?) it might be optimized away

[01:48] *** ilbot3 joined
[06:50] *** geekosaur joined
[06:50] *** domidumont joined
[06:55] *** domidumont joined
[07:33] *** zakharyas joined
[07:41] <jnthn> timotimo: On callee side, you can look at the callsite to validate it

[08:15] <dalek> MoarVM: ca1a21a | jnthn++ | src/core/frame.c:

[08:15] <dalek> MoarVM: Fix fragility in VMNulling work registers.

[08:15] <dalek> MoarVM:

[08:15] <dalek> MoarVM: It could potentially use the spesh num_local_types when not using the

[08:15] <dalek> MoarVM: spesh local_types.

[08:15] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ca1a21abf0

[08:18] <jnthn> Unfortunately, this (well, actually the original patch that it makes more robust) accounts for a huge slowdown

[08:21] <jnthn> Well, maybe not huge, but 10s or so on the Rakudo build

[09:40] *** zakharyas joined
[09:41] *** ingy1 joined
[09:42] *** ilmari_ joined
[10:29] *** Unavowed joined
[10:34] *** domidumont joined
[11:35] *** ggoebel113 joined
[11:36] *** vendethiel joined
[11:43] *** psch joined
[12:23] *** lizmat joined
[13:37] *** orbus_ joined
[13:42] *** domidumont joined
[13:57] <timotimo> that's bad :|

[13:58] <jnthn> Yeah, though we'll figure something out on it

[13:58] <jnthn> Today I've been digging into the long-awaited invocation/frames re-design.

[13:58] <timotimo> sounds exciting :)

[13:59] <jnthn> Yeah...I think I can save us a decent bit

[13:59] <jnthn> Along various axes

[13:59] <jnthn> And make that refs_frames thing go away

[14:09] *** mtj_ joined
[14:15] <nwc10> and a pony?

[14:15] <timotimo> refs_pony = 1?

[14:18] *** zakharyas joined
[14:19] <jnthn> Well, it maybe prepares for the way for a pony ;)

[14:31] *** domidumont joined
[15:33] *** ilmari joined
[15:35] *** zakharyas joined
[15:41] *** ggoebel113 joined
[15:47] *** geekosaur joined
[15:50] *** geekosaur joined
[16:05] *** domidumont joined
[16:07] *** domidumont joined
[16:30] *** zakharyas joined
[16:49] *** pyrimidine joined
[16:53] <dalek> MoarVM/reframe: 9103b61 | jnthn++ | src/6model/6model.h:

[16:53] <dalek> MoarVM/reframe: Add collectable flag for frames.

[16:53] <dalek> MoarVM/reframe: review: https://github.com/MoarVM/MoarVM/commit/9103b6147d

[16:53] <dalek> MoarVM/reframe: 3daded3 | jnthn++ | src/core/frame.h:

[16:53] <dalek> MoarVM/reframe: Give MVMFrame an MVMCollectable header.

[16:53] <dalek> MoarVM/reframe: review: https://github.com/MoarVM/MoarVM/commit/3daded370d

[16:53] <dalek> MoarVM/reframe: 95c87b2 | jnthn++ | src/gc/allocation. (2 files):

[16:53] <dalek> MoarVM/reframe: Add function for GC-allocating a heap frame.

[16:53] <dalek> MoarVM/reframe: review: https://github.com/MoarVM/MoarVM/commit/95c87b2975

[16:53] <dalek> MoarVM/reframe: 1ce7271 | jnthn++ | src/core/frame. (2 files):

[16:53] <dalek> MoarVM/reframe: Pull frame destroy out of reference dec.

[16:53] <dalek> MoarVM/reframe: review: https://github.com/MoarVM/MoarVM/commit/1ce727182f

[17:15] <dalek> MoarVM/reframe: d2591ad | jnthn++ | src/ (19 files):

[17:15] <dalek> MoarVM/reframe: [WIP] Switch frames to be collectables.

[17:15] <dalek> MoarVM/reframe:

[17:15] <dalek> MoarVM/reframe: Danger: highly explosive branch; very unlikley to build NQP, though

[17:15] <dalek> MoarVM/reframe: passes all but 2 of the NQP test suite. Pushed simply for backup.

[17:15] <dalek> MoarVM/reframe:

[17:15] <dalek> MoarVM/reframe: The eventual goal is to manage frames that are not referenced at all

[17:15] <dalek> MoarVM/reframe: by other collectables in their life time using a traditional-style

[17:15] <dalek> MoarVM/reframe: call stack, and promote them to the heap as normal GC-able objects

[17:15] <dalek> MoarVM/reframe: upon escape. As a stepping stone, we'll allocate all frames on the

[17:15] <dalek> MoarVM/reframe: heap, to help uncover missing mark bugs and the like, as well as to

[17:15] <dalek> MoarVM/reframe: break the big change into steps between which stuff should entirely

[17:15] <jnthn> dinner :) &

[17:16] <jnthn> (btw, I've a list here of stuff to fix still on that branch, plus expect to rebase it further locally)

[17:17] <jnthn> Also, I doubt this branch will merge until the stack part is done, as my guess would be that it'll represent a sizable regression.

[17:17] <jnthn> (Performance wise)

[17:17] <jnthn> Until that is in place.

[17:17] <jnthn> Really dinner. &

[17:18] <timotimo> <3

[17:18] <timotimo> have a good food!

[17:27] *** lizmat joined
[17:48] <nwc10> jnthn: most recent commit on that branch SEGVs in NQP build (looks like a NULL pointer dereference)

[17:48] <nwc10> building previous commit to see how far I get

[18:05] *** zakharyas joined
[18:39] <jnthn> nwc10: It'd be a near micracle if it worked, given there's still missing write barriers to add and some places it's not marking frames at all 'cus it got away with it before

[18:40] <jnthn> (HEAD, that is)

[18:40] <jnthn> The commits leading up to HEAD shoulda been benign refactors though

[18:40] *** leedo joined
[18:42] <nwc10> ASAN "likes" the commit before HEAD

[18:43] *** cognominal joined
[19:07] *** patrickz joined
[19:33] <dalek> MoarVM/reframe: da21d2f | jnthn++ | src/ (3 files):

[19:33] <dalek> MoarVM/reframe: Add some of the missing write barriers.

[19:33] <dalek> MoarVM/reframe: review: https://github.com/MoarVM/MoarVM/commit/da21d2f5f8

[19:33] <dalek> MoarVM/reframe: 17adaa4 | jnthn++ | src/ (3 files):

[19:33] <dalek> MoarVM/reframe: Fix some missing frame marking.

[19:33] <dalek> MoarVM/reframe: review: https://github.com/MoarVM/MoarVM/commit/17adaa4f49

[19:33] <dalek> MoarVM/reframe: 6f61939 | jnthn++ | src/6model/ (44 files):

[19:33] <dalek> MoarVM/reframe: Remove now-unused refs_frames.

[19:33] <dalek> MoarVM/reframe: review: https://github.com/MoarVM/MoarVM/commit/6f61939df1

[19:35] <jnthn> Innerestin'. If you disable spesh it passes all the NQP tests now

[19:35] <jnthn> heh, and if you enable spesh but not inlining you get more fail

[19:37] <jnthn> I've a horrible feeling this trail might lead to deopt.c

[19:46] <nwc10> doesn't build Rakudo, though

[19:46] <nwc10> failed to load library 'dynext/libperl6_ops_moar.so'   at gen/moar/m-BOOTSTRAP.nqp:1066  (<ephemeral file>:)

[19:46] <nwc10> ...

[19:46] <nwc10> however, that's the failure. not ASAN

[19:57] *** orbus_ joined
[19:57] *** arnsholt joined
[19:57] *** _longines joined
[19:57] *** jnthn joined
[19:57] *** khagan_ joined
[20:04] *** _longines_ joined
[20:09] *** orbus_ joined
[20:09] *** arnsholt joined
[20:09] *** jnthn joined
[20:09] *** khagan_ joined
[20:17] *** jnthn joined
[20:17] *** arnsholt joined
[20:17] *** khagan joined
[20:26] *** orbus_ joined
[20:39] *** Util_ joined
[20:40] *** arnsholt_ joined
[20:44] *** harrow` joined
[20:53] *** ingy joined
[21:41] *** Util joined
[22:11] *** diakopter joined
