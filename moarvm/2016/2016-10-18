[01:48] *** dalek joined
[03:54] <[Coke]> jnthn: weird. latest version of the -only-250-times script is now running 253 times.

[05:51] *** domidumont joined
[05:56] *** domidumont joined
[06:37] *** FROGGS joined
[06:47] *** kjs_ joined
[07:16] *** domidumont joined
[07:25] *** zakharyas joined
[07:31] *** lizmat joined
[07:38] *** kjs_ joined
[08:12] *** vendethiel joined
[08:36] *** lizmat joined
[09:24] *** geekosaur joined
[09:27] *** kjs_ joined
[09:45] <dalek> MoarVM: e3cedc1 | timotimo++ | src/strings/utf16.c:

[09:45] <dalek> MoarVM: prevent null deref when calling MVM_string_utf16_encode

[09:45] <dalek> MoarVM:

[09:45] <dalek> MoarVM: it passes NULL for output_size. thanks clang-analyzer!

[09:45] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e3cedc1791

[09:49] <timotimo> clang analyzer still not very happy about our MVMROOT macro

[10:01] <jnthn> Maybe some day it'll be fixed to be OK with it :)

[10:01] <yoleaux2> 17 Oct 2016 23:03Z <japhb> jnthn: Sadly, OO::Monitors still fails without 'no precompilation'.  When I comment it out and run `perl6 -I lib t/precomp.t` I immediately get: Missing serialize REPR function for REPR SCRef (SCRef)

[10:05] <timotimo> it's only the viewer that has problems

[10:05] <jnthn> ah, ok

[10:05] <timotimo> worst case if we suspect a problem it shows is legit, we can rewrite the code to use push/pop instead of MVMROOT

[10:06] <timotimo> right now it treats the whole blocked out part as a single line when it comes to placing bubbles that explain the step-by-step thingie

[10:06] *** kjs_ joined
[10:08] <timotimo> i was hoping it could point out something wrong with my callsite_flags_sso code, but no dice :(

[10:28] *** dalek joined
[10:33] *** zakharyas joined
[10:37] <arnsholt> timotimo: Does it still throw a fit over the uthash stuff too?

[10:38] <arnsholt> I remember getting a huge mess of macroexpanded code and like 20 steps for some kind of error

[10:38] <arnsholt> And it doesn't deal very well with macros, I agree

[10:40] <timotimo> i didn't look at any reports yet that had UTHASH in them, really

[10:40] <timotimo> the newest issue i filed had some uthash code nearby, but it wasn't involved

[10:40] <arnsholt> No big deal. I'm just curious =)

[10:42] <timotimo> mhm

[10:42] <timotimo> coverity is quite confused about trycas, did i mention that?

[10:43] <timotimo> i wonder how many other structs could benefit from compact storage of buffers they own

[10:43] <timotimo> having a single object that owns that set of structs is pretty much a prerequisite, though

[10:43] <timotimo> like the compunit owning all its callsites

[10:44] *** kjs_ joined
[10:46] <timotimo> it'll be another necessary step to give our interpreter compact storage for interned callsites, too, of course

[10:46] <timotimo> i expect them to be a bit "warmer" than the non-interned ones anyway

[10:48] <timotimo> i wonder how to figure out the warmth of any given piece of data

[10:48] <timotimo> maybe it'd be best to use cachegrind and see where many cache misses happen that seem unnecessary

[10:48] <timotimo> but the "unnecessary" thing is something a human would probably have to inspect on a case-by-case basis?

[11:08] <dalek> MoarVM/extract-spesh-alloc: aba07a2 | brrt++ | / (7 files):

[11:08] <dalek> MoarVM/extract-spesh-alloc: Extract spesh allocation from spesh

[11:08] <dalek> MoarVM/extract-spesh-alloc:

[11:08] <dalek> MoarVM/extract-spesh-alloc: The `spesh` allocator uses a strategy known as memory-region

[11:08] <dalek> MoarVM/extract-spesh-alloc: allocation and is suitable for more contexts than just `spesh`.

[11:08] <dalek> MoarVM/extract-spesh-alloc: review: https://github.com/MoarVM/MoarVM/commit/aba07a263d

[11:24] <brrt> timotimo jnthn ^ the above is the extraction of the spesh allocator

[11:24] <brrt> it's almost a full copy-pasta job

[11:57] *** lizmat_ joined
[12:18] *** vendethiel joined
[12:38] *** kjs_ joined
[13:00] *** kjs_ joined
[14:05] *** kjs_ joined
[14:07] *** zakharyas joined
[14:17] *** kjs_ joined
[15:04] *** vendethiel joined
[15:06] *** zakharyas joined
[17:33] *** hoelzro_ joined
[17:34] *** stmuk joined
[17:34] *** moritz joined
[17:36] <dalek> MoarVM: 0402247 | FROGGS++ | src/io/dirops.c:

[17:36] <dalek> MoarVM: Revert "rewrite mkdir_p api, no function changes"

[17:36] <dalek> MoarVM:

[17:36] <dalek> MoarVM: This reverts commit 958a01f5ca2d955bfe1e4b3b2c44bbaffeff2d39.

[17:36] <dalek> MoarVM: This was meant to noch change the behaviour, though it breaks rakudo

[17:36] <dalek> MoarVM: in windows. Creating a non-existent folder returns an error but

[17:36] <dalek> MoarVM: succeeds.

[17:36] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0402247933

[17:38] *** domidumont joined
[17:39] *** zakharyas joined
[17:39] *** zostay joined
[18:00] <dalek> MoarVM: 14b63ea | (Jimmy Zhuo)++ | src/io/dirops.c:

[18:00] <dalek> MoarVM: Revert "Revert "rewrite mkdir_p api, no function changes""

[18:00] <dalek> MoarVM:

[18:00] <dalek> MoarVM: This reverts commit 04022479330216cfca8361a08b2104020ca8f305.

[18:00] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/14b63eab3b

[18:00] <dalek> MoarVM: 404ed26 | (Jimmy Zhuo)++ | src/io/dirops.c:

[18:00] <dalek> MoarVM: fix broken mkdir on windows

[18:00] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/404ed261be

[18:00] *** JimmyZ joined
[18:01] <JimmyZ> FROGGS: ^ I just fixed it on windows

[18:02] <FROGGS> lemme check...

[18:03] <FROGGS> is that new?

[18:03] <FROGGS> dirops.c

[18:03] <FROGGS> src\io\dirops.c(38) : warning C4133: 'initializing' : incompatible types - from 'wchar_t *' to 'char *'

[18:03] <FROGGS> src\io\dirops.c(46) : warning C4133: 'function' : incompatible types - from 'wchar_t *' to 'const char *'

[18:06] <FROGGS> JimmyZ: works on my box...

[18:09] <JimmyZ> FROGGS: not new warning

[18:09] <JimmyZ> oh warning

[18:40] <dalek> MoarVM/mkdir: 360ddcd | (Jimmy Zhuo)++ | src/io/dirops.c:

[18:40] <dalek> MoarVM/mkdir: fixed mkdir warning on windows

[18:40] <dalek> MoarVM/mkdir: review: https://github.com/MoarVM/MoarVM/commit/360ddcdd0d

[18:41] <FROGGS> JimmyZ++

[18:41] <JimmyZ> FROGGS: ^^ Could you try this branch to see if the warning goes out and still works or not? thanks

[18:41] <FROGGS> hold on

[18:41] <JimmyZ> I don't have compiler on windows now  :)

[18:42] <FROGGS> O.o

[18:45] <FROGGS> JimmyZ: dirops.obj : error LNK2001: unresolved external symbol PathFileExistsW

[18:48] <dalek> MoarVM/mkdir: ec7dcb4 | (Jimmy Zhuo)++ | src/io/dirops.c:

[18:48] <dalek> MoarVM/mkdir: add missing header on windows

[18:48] <dalek> MoarVM/mkdir: review: https://github.com/MoarVM/MoarVM/commit/ec7dcb4dc3

[18:48] <JimmyZ> FROGGS: ^^

[18:49] <FROGGS> dirops.obj : error LNK2001: unresolved external symbol __imp_PathFileExistsW

[18:50] <JimmyZ> hmm , where to add the linking Shlwapi.lib code?

[18:51] <FROGGS> build/setup.pm?

[18:58] <dalek> MoarVM/mkdir: 529eb04 | (Jimmy Zhuo)++ | build/setup.pm:

[18:58] <dalek> MoarVM/mkdir: add missing linking lib for windows

[18:58] <dalek> MoarVM/mkdir: review: https://github.com/MoarVM/MoarVM/commit/529eb04530

[18:59] <JimmyZ> FROGGS: hopes it build now

[18:59] <FROGGS> trying msvc, then gc

[18:59] <FROGGS> gcc*

[19:02] <FROGGS> dirops.obj : error LNK2001: unresolved external symbol __imp_PathFileExistsW

[19:03] <FROGGS> after reconfigure...

[19:03] <FROGGS> damn

[19:03] <FROGGS> sorry

[19:03] <FROGGS> wait

[19:03] <FROGGS> (forgot to pull -.-)

[19:09] <JimmyZ> any changes to link? :)

[19:09] <JimmyZ> *chance

[19:10] <FROGGS> built under msvc successfully

[19:11] <FROGGS> but now mkdir fails if the folder exists

[19:11] <FROGGS> which it did not before

[19:14] <JimmyZ> only on windows?

[19:14] <JimmyZ> I test it on linux, it works fine here

[19:14] <FROGGS> no, on linux too

[19:14] <FROGGS> wait..

[19:16] <FROGGS> JimmyZ: works on linux, fails on windows

[19:16] <FROGGS> $ perl6 -Mnqp -e 'my $foo = "foo".IO; say $foo.e; say nqp::mkdir($foo.abspath, 0o777)'

[19:16] <FROGGS> True

[19:16] <FROGGS> /home/froggs/dev/rakudo/foo

[19:17] <FROGGS> C:\rakudo>perl6 -e "my $foo = 'foo'.IO; say $foo.e; say $foo.mkdir"

[19:17] <FROGGS> True

[19:17] <FROGGS> Failed to create directory 'C:\rakudo\foo' with mode '0o777': Failed to mkdir: 258

[19:26] <dalek> MoarVM/mkdir: 0856608 | (Jimmy Zhuo)++ | / (2 files):

[19:26] <dalek> MoarVM/mkdir: more fix on windows

[19:26] <dalek> MoarVM/mkdir: review: https://github.com/MoarVM/MoarVM/commit/0856608b8c

[19:27] <JimmyZ> FROGGS: ^^ last try, thanks , if still fails, I should install msvc ...

[19:27] *** pyrimidi_ joined
[19:31] <FROGGS> doing...

[19:35] *** pyrimidine joined
[19:37] <FROGGS> JimmyZ: seems to work on msvc

[19:37] <FROGGS> testing gcc on windows now

[19:41] <FROGGS> JimmyZ: works on gcc/win also

[19:41] <JimmyZ> FROGGS++, thanks

[19:41] <FROGGS> JimmyZ++

[19:43] <dalek> MoarVM: df20321 | (Jimmy Zhuo)++ | src/io/dirops.c:

[19:43] <dalek> MoarVM: fix mkdir warning on windows

[19:43] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/df203213d7

[20:27] *** Ven_ joined
[21:19] *** dalek joined
[23:05] <timotimo> any reason to not immediately merge the spesh allocator extraction thing?
