[01:05] *** [Coke] joined
[01:47] *** ilbot3 joined
[01:48] *** TimToady joined
[02:09] *** mst joined
[05:20] *** brrt joined
[05:50] *** lizmat joined
[06:09] <dalek> MoarVM/even-moar-jit: 84d8099 | brrt++ | docs/jit/register-allocator.org:

[06:09] <dalek> MoarVM/even-moar-jit: More notes on register allocation

[06:09] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/84d80992d7

[06:12] *** brrt joined
[06:21] *** lizmat joined
[06:28] <dalek> MoarVM/even-moar-jit: cdb7856 | brrt++ | docs/jit/register-allocator.org:

[06:28] <dalek> MoarVM/even-moar-jit: Remove redundant macro parameter

[06:28] <dalek> MoarVM/even-moar-jit: review: https://github.com/MoarVM/MoarVM/commit/cdb7856542

[06:32] *** pyrimidi_ joined
[06:44] *** brrt joined
[06:47] <dalek> Heuristic branch merge: pushed 22 commits to MoarVM/even-moar-jit by bdw

[06:49] <brrt> oh, one more thing

[06:49] <brrt> if nqp::say() could not be deprecated, that'd be awesome

[06:49] <brrt> i don't really care if its reduced to a broken call to puts

[06:50] *** domidumont joined
[06:50] <brrt> but it is a really useful as nobody uses it, and thus it can act as a test case

[06:51] <arnsholt> I use nqp::say all the time, but only when debugging NQP code

[06:51] * lizmat too :-)

[06:52] <brrt> my point exactly

[06:52] <brrt> it's not in production code

[06:52] <arnsholt> What's the reason for the deprecation though? I missed that

[06:52] <brrt> string-based-io sucks

[06:52] <brrt> bytes based io is the future

[06:53] <brrt> for, well, excellent reason

[06:53] <brrt> s

[06:53] <arnsholt> Ah, right

[06:53] <brrt> but nqp::say() is string based io, so i'm asking for it to be exempted

[06:54] <brrt> noting that i don't really care if it is slow or broken

[06:54] <arnsholt> Yeah, that sounds reasonable

[06:54] <brrt> we might argue for a nqp::debug() to replace it

[06:54] <brrt> but why bother :-)

[06:54] *** domidumont joined
[06:56] <arnsholt> I can see the merit of renaming it debug, TBH

[06:56] * nwc10 was wondering this - the functionality seems useful, but the name is (now) wrong

[07:04] *** kjs_ joined
[07:25] *** zakharyas joined
[08:08] *** kjs_ joined
[08:26] *** lizmat joined
[08:35] *** lizmat joined
[08:43] *** domidumont joined
[08:58] <jnthn> Note that since we can choose exactly how we want to compile nqp::say, we could easily just say "oh, it compiles into an encode and a write to stdout" :)

[08:58] <jnthn> nqp ops aren't all direct mappings to individual Moar ops :)

[09:07] *** zakharyas joined
[10:17] *** lizmat joined
[10:47] *** zakharyas joined
[10:51] *** lizmat joined
[11:31] <arnsholt> That's true

[11:31] <arnsholt> But since names are an indicator of intended use, I think calling it debug or some such is probably a good idea

[11:32] <arnsholt> If not, some enterprising hacker is probably going to (rightly) confuse it with something intended for non-debug use

[11:32] <arnsholt> Especially since it has the same name as a normal Perl 6 function

[11:39] <jnthn> I'm not sure I see the harm if they do, tbh :)

[11:39] <jnthn> If it's just an encode + a write, it's doing pretty much what Perl 6's say would do anyway :)

[11:49] *** lizmat joined
[12:13] *** lizmat joined
[12:17] *** [Coke]_ joined
[12:20] *** japhb joined
[12:21] *** mtj_ joined
[12:24] *** TheLemonMan joined
[12:27] *** zakharyas joined
[12:28] <arnsholt> Yeah, that's true

[12:28] <arnsholt> Depends on how hard you want to enforce the new and improved byte-oriented future, I guess =)

[12:59] <TheLemonMan> .tell brrt this might be interesting for you http://www.brendangregg.com/perf.html#JIT_Symbols :)

[13:02] <timotimo> i think brrt was interested in nqp::say surviving because you can put that exact moar op into a frame and use it to trigger stuff like extra debugging

[13:48] *** zakharyas joined
[13:55] *** lizmat joined
[13:57] *** lizmat joined
[14:06] *** lizmat joined
[14:24] *** lizmat joined
[14:39] *** nebuchadnezzar joined
[14:39] *** arnsholt joined
[14:45] *** tomboy65 joined
[16:09] *** kjs_ joined
[16:16] *** lizmat joined
[16:53] *** domidumont joined
[17:06] *** brrt joined
[17:06] <brrt> timotimo, jnthn: that's correct, i want it specifically to have something that is ordinarily never called

[17:06] <brrt> and with a clear side-effect to boot :-)

[17:07] <brrt> also, TheLemonMan, that is interesting indeed; otoh there are already a bunch of standards (ELF? DWARF?) and integrations we could potentially like to support

[17:08] <brrt> doing that is never hard but it is always more or less tedious

[17:10] <timotimo> i've already told brrt about this, but it wasn't interesting the last time i suppose? :\

[17:10] <brrt> aw, didn't mean that

[17:10] <timotimo> :P

[17:10] <brrt> i must have forgotten, or, i must have missed it

[17:10] <brrt> i think the latter is a bit more likely :-P

[17:11] <timotimo> :)

[17:14] <brrt> is it as hot in * as it is here?

[17:14] <jnthn> Getting there

[17:15] <jnthn> The next few days will be hottest

[17:15] <jnthn> Then it'll drop off again

[17:15] <jnthn> If the forecast is right :)

[17:15] <timotimo> it's getting uncomfortable here

[17:18] <jnthn> Making it not so bad is it seems the temperature will drop quite sharply on a night

[17:21] * brrt is rather sad about it all

[17:21] <brrt> hmm

[17:22] <brrt> alright, let's try and get to work

[17:24] <brrt> i'm going to try and add register specs to the jit. we don't need them as much as i had thought, but still

[19:08] *** zakharyas joined
[19:09] *** domidumont joined
[19:15] *** kjs_ joined
[19:23] <timotimo> o/

[19:26] <timotimo> i don't know what register specs are supposed to be

[19:26] <timotimo> and i have no code yet to read to figure it out for myself :S

[19:32] <timotimo> do we have control over frame pointer existence or nonexistence in moar and its jit, btw?

[20:34] *** domidumont joined
[20:34] *** lizmat joined
