[01:36] *** zakharyas joined
[01:48] *** ilbot3 joined
[06:19] *** domidumont joined
[06:24] *** domidumont joined
[09:05] *** zakharyas joined
[09:20] *** domidumont joined
[11:32] *** geekosaur joined
[12:57] *** zakharyas joined
[13:56] *** pyrimidine joined
[15:39] *** zostay joined
[15:40] *** FROGGS joined
[15:50] *** domidumont joined
[15:50] * FROGGS is able to reproduce https://github.com/MoarVM/MoarVM/issues/418

[15:53] <FROGGS> gah, that's silly -.-

[15:53] <FROGGS> FROGGS--

[15:55] <mst> FROGGS: be happy

[15:55] <mst> generally the stupidest mistakes are the easiest to fix

[15:55] <mst> it's intelligent mistakes taht are terribad to unfuck

[15:55] <FROGGS> aye

[15:56] <FROGGS> that's what I am facing here :o)

[15:56] <mst> ah. I assumed "that's silly" meant it was a sufficiently stupid mistake to be easy

[15:56] <mst> ah well

[15:56] <FROGGS> aye

[15:56] <FROGGS> I also tell my colleagues from time to time to be not to clever when writing code...

[15:57] <FROGGS> because I dont want to debug "clever" stuff in the middle of the night

[15:57] <FROGGS> so, here I am facing a simple problem... I just forgot to care about something

[18:20] <nine> Soooo...what's the reason?

[18:26] <arnsholt> I spent more or less all day yesterday and up to lunch today figuring out why the MIME envelope my code output was incorrect

[18:26] <arnsholt> Turns out that when you say boundary="$sep" in the header, the parts are separated by --$sep

[18:27] <arnsholt> Except that was really hard to discern from the example I had, given that $sep started with four dashes already

[18:27] <timotimo> oh

[18:27] <arnsholt> >.<

[18:27] <timotimo> ;(

[18:27] <nine> Great example!

[18:27] <arnsholt> Serves me right for not reading the spec properly right away =)

[18:27] <arnsholt> And I'm yak shaving, reimplementing our HTTP response parser

[18:28] <arnsholt> The joys of working in an environment where libraries for this kind of thing can't necessarily be expected =)

[18:41] <FROGGS> arnsholt: if boundary is "a", then you have one or more "--a" and an "--a--" at the end btw

[18:42] <FROGGS> nine: I'll push in a few minutes

[18:42] <arnsholt> FROGGS: Oh, I didn't know about the --a-- one

[18:43] <arnsholt> Is that optional?

[18:43] <arnsholt> The MIME parser I'm looks like it accepts only a --a at the end, anyways =)

[18:44] <FROGGS> arnsholt: example: https://gist.github.com/FROGGS/9a425efc09a4d6391be845d557c6d8ef

[18:45] <FROGGS> http://stackoverflow.com/questions/4656287/what-rules-apply-to-mime-boundary

[18:45] <FROGGS> seems not to be optional

[18:46] <arnsholt> Indeed. Maybe the parser I'm talking to is lenient, because this is a common misencoding or something =)

[18:47] <arnsholt> Or it could be a bug in the parser. I think it's a lazy pull parser, so it might not trigger the check for correct termination

[18:49] <dalek> MoarVM: 17f33bf | FROGGS++ | src/core/nativecall_libffi.c:

[18:49] <dalek> MoarVM: handle C++ constructors on libffi, closes #418

[18:49] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/17f33bf035

[18:49] <FROGGS> yeah, I guess parsers are very tolerant in that area, so that things "work"

[18:52] <geekosaur> they have to be, yes. there's far too much garbage created by too many mail clients

[18:53] <FROGGS> yeah, it the same with electronics: be pedantic when outputting stuff and be tolerant when working with inputs

[18:54] <psch> i think that's an old jargon file thing, isn't it?

[18:54] <psch> or maybe an RFC, not sure

[18:54] <moritz> but don't exagerate, otherwise you'll interpret error messages as flight data and explode Ariane 5

[18:54] <FROGGS> :S

[18:55] <psch> ah, Postel's law

[18:56] <psch> there's http://trevorjim.com/postels-law-is-not-for-you/ arguing against it

[18:56] <psch> also already old...

[18:56] <geekosaur> yep. mime, and later html, are actually examples of how postel's law goes wrong

[18:56] <psch> it does kind of fit with MIME-headers..?

[18:56] <geekosaur> once you combine it with the tragedy of the commons,

[19:04] <dalek> MoarVM: 0475ede | niner++ | src/core/frame.c:

[19:04] <dalek> MoarVM: Fix uninitialized arg_names of an MVMCallsite

[19:04] <dalek> MoarVM:

[19:04] <dalek> MoarVM: Could be the reason for

[19:04] <dalek> MoarVM: ==12118== Conditional jump or move depends on uninitialised value(s)

[19:04] <dalek> MoarVM: ==12118==    at 0x40BA2D0: MVM_callsite_destroy (callsite.c:100)

[19:04] <dalek> MoarVM: reported by dogbert17++

[19:04] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0475edeeb9

[19:04] <dalek> MoarVM: 2ea6426 | lizmat++ | src/core/frame.c:

[19:04] <dalek> MoarVM: Merge pull request #419 from niner/master

[19:04] <dalek> MoarVM:

[19:04] <dalek> MoarVM: Fix uninitialized arg_names of an MVMCallsite

[19:04] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2ea64267e2

[19:05] <arnsholt> geekosaur: This is over HTTP not SMTP (SOAP with MTOM, if you must know), but yeah. I suspect there's an element of Postel involved

[19:28] <nebuchadnezzar> FROGGS++ thanks for #418

[19:29] <nebuchadnezzar> I'm testing the build right now, lets get a break for dinner

[19:29] <FROGGS> awesome!

[19:31] <nwc10> good *, FROGGS

[19:32] <dalek> MoarVM: d912378 | niner++ | src/6model/reprs/CUnion.c:

[19:32] <dalek> MoarVM: Fix CUnion::get_attribute treating inlined attrs as pointers

[19:32] <dalek> MoarVM:

[19:32] <dalek> MoarVM: valgrind reports a Conditional jump or move depends on uninitialised value

[19:32] <dalek> MoarVM: when checking if cobj is not NULL. That's because inlined attributes are

[19:32] <dalek> MoarVM: not actually pointers but inlined values which may not have been initialized.

[19:32] <dalek> MoarVM: The attribute is still there though. Easily visible because the handlers for

[19:32] <dalek> MoarVM: the inlined cases don't actually use cobj. Fixed by moving the inlined cases

[19:32] <dalek> MoarVM: up and handling them separately.

[19:32] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d912378011

[19:32] <dalek> MoarVM: 542b899 | lizmat++ | src/6model/reprs/CUnion.c:

[19:32] <dalek> MoarVM: Merge pull request #420 from niner/master

[19:32] <dalek> MoarVM:

[19:32] <dalek> MoarVM: Fix CUnion::get_attribute treating inlined attrs as pointers

[19:33] <FROGGS> hi nwc10

[20:05] <dalek> MoarVM: 3297508 | niner++ | src/core/nativecall_dyncall.c:

[20:05] <dalek> MoarVM: Fix 32 bit issue with rw args in NativeCall callbacks

[20:05] <dalek> MoarVM:

[20:05] <dalek> MoarVM: We allocated the size of a pointer for storing a 64 bit integer.

[20:05] <dalek> MoarVM: Reported by valgrind as Invalid write of size 4 in MVM_nativecall_invoke

[20:05] <dalek> MoarVM: (nativecall_dyncall.c:491)

[20:05] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/3297508e9f

[20:05] <dalek> MoarVM: c8d33ae | FROGGS++ | src/core/nativecall_dyncall.c:

[20:05] <dalek> MoarVM: Merge pull request #421 from niner/master

[20:05] <dalek> MoarVM:

[20:05] <dalek> MoarVM: Fix 32 bit issue with rw args in NativeCall callbacks

[20:05] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c8d33aebbf

[20:12] <dalek> MoarVM: 0bdbd6e | FROGGS++ | src/core/nativecall_libffi.c:

[20:12] <dalek> MoarVM: use better throw away type for void nativecalls

[20:12] <dalek> MoarVM:

[20:12] <dalek> MoarVM: The mem before (values[body->num_args]) is not allocated. valgrind++ for

[20:12] <dalek> MoarVM: spotting it.

[20:12] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0bdbd6e04a

[21:18] *** travis-ci joined
[21:18] <travis-ci> MoarVM build failed. Tobias Leich 'handle C++ constructors on libffi, closes #418'

[21:18] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/165617900 https://github.com/MoarVM/MoarVM/compare/a6d44160032b...17f33bf03586

[21:18] *** travis-ci left
[21:23] <timotimo> nine: thanks for all those!

[22:13] *** travis-ci joined
[22:13] <travis-ci> MoarVM build failed. lizmat 'Merge pull request #419 from niner/master

[22:13] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/165622323 https://github.com/MoarVM/MoarVM/compare/17f33bf03586...2ea64267e2e6

[22:13] *** travis-ci left
[23:29] <timotimo> travis is failing hard

[23:37] *** travis-ci joined
[23:37] <travis-ci> MoarVM build passed. lizmat 'Merge pull request #420 from niner/master

[23:37] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/165629390 https://github.com/MoarVM/MoarVM/compare/2ea64267e2e6...542b8995ce31

[23:37] *** travis-ci left
