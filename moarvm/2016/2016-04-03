[04:15] *** geekosaur joined
[07:47] *** domidumont joined
[07:52] *** domidumont joined
[09:19] *** geekosaur joined
[09:51] *** TimToady joined
[12:07] *** zakharyas joined
[15:03] *** domidumont joined
[15:12] <timotimo> i'm considering adding a "add a list of $n sequential pointers to a worklist" for the case where MVMArray has a big amount of objects/strings in its list

[16:19] *** Ven joined
[17:18] *** Ven joined
[17:28] *** Ven joined
[18:34] *** Ven joined
[18:38] <dalek> MoarVM/gc_worklist_add_vector: a9d2a75 | timotimo++ | src/ (3 files):

[18:38] <dalek> MoarVM/gc_worklist_add_vector: use tighter look for marking lots of array slots

[18:38] <dalek> MoarVM/gc_worklist_add_vector: review: https://github.com/MoarVM/MoarVM/commit/a9d2a755bb

[19:09] *** leont joined
[20:06] <timotimo> helps to actually copy the code correctly, not just a signle line out of it

[20:18] <timotimo> OK, i'm dramatically overestimating the number of items that are actually going to go into the worklist

[20:18] <timotimo> "items went from 0 to 46172 for 9982741 count (should be 9982741)"

[22:43] <timotimo> total memory corruption :|

[23:06] *** vendethiel joined
[23:06] <dalek> MoarVM/gc_worklist_add_vector: 217b0ff | timotimo++ | src/ (2 files):

[23:06] <dalek> MoarVM/gc_worklist_add_vector: fixes for the add_vector method of the worklist

[23:06] <dalek> MoarVM/gc_worklist_add_vector: review: https://github.com/MoarVM/MoarVM/commit/217b0fffea

[23:06] <dalek> MoarVM/gc_worklist_add_vector: 68238b6 | timotimo++ | src/ (3 files):

[23:06] <dalek> MoarVM/gc_worklist_add_vector: get rid of offset, bring "should have gen2" out of loop, batch to 1024

[23:06] <dalek> MoarVM/gc_worklist_add_vector: review: https://github.com/MoarVM/MoarVM/commit/68238b6a0b

[23:10] <timotimo> it's not faster at all

[23:44] *** vendethiel joined
