[01:10] *** jnap joined
[01:12] *** odc joined
[02:05] *** benabik joined
[02:21] *** jnap joined
[04:03] <tadzik> :D

[04:25] *** diakopter joined
[04:39] *** crab2313 joined
[05:00] *** johnny5_ joined
[05:41] *** colomon joined
[06:54] *** cognominal joined
[07:04] *** FROGGS joined
[07:06] <FROGGS> morning

[08:04] <FROGGS> #libuv++ # these guys could be Perl6ers, that friendly that they are :o)

[08:16] <jnthn> :)

[08:20] *** ingy1 joined
[08:34] <FROGGS> nqp-m: my $fh := nqp::getstderr(); nqp::sayfh($fh, "test")

[08:34] <camelia> nqp-moarvm: OUTPUT«Error while compiling op sayfh (source text: "nqp::sayfh($fh, \"test\")"): No registered operation handler for 'sayfh'␤frame_name_1108␤»

[08:34] <FROGGS> meh, outdated moarvm

[08:34] <FROGGS> nqp-m: my $fh := nqp::getstderr(); nqp::printfh($fh, "test")

[08:34] <camelia> nqp-moarvm: OUTPUT«test»

[08:35] <FROGGS> why does that only fail on my box??

[08:35] <FROGGS> but anyway, this can be considered fixed

[08:38] <FROGGS> btw, I really should learn how to use gdb properly

[08:45] <dalek> MoarVM: e9b79b0 | (Tobias Leich)++ | src/ (2 files):

[08:45] <dalek> MoarVM: fix printfh/sayfh bug (segfault on linux)

[08:45] <dalek> MoarVM:

[08:45] <dalek> MoarVM: This properly closes filehandles under some circumstances. Before

[08:45] <dalek> MoarVM: we had a garbled req in the active_queue ov the libuv loop, which

[08:45] <dalek> MoarVM: could not be uv_close'd. After malloc-ing write requests and un-

[08:45] <dalek> MoarVM: referening these in the write callback, the requests in the queue

[08:45] <dalek> MoarVM: are safe to be closed.

[08:45] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e9b79b0a5b

[08:45] <FROGGS> s/ov/of/ -.-

[09:42] *** lizmat joined
[09:55] <jnthn> FROGGS: I bet that fixes things up on Windows too \o/

[09:55] <jnthn> FROGGS++

[10:20] *** woosley left
[10:27] <FROGGS> jnthn: I've not seen fails on windows like I had them on linux

[11:18] <jnthn> FROGGS: It tends to fail quieter...

[11:21] <FROGGS> ahh, :o)

[11:32] *** woolfy1 joined
[12:05] *** lizmat joined
[12:24] *** lizmat joined
[12:32] <jnthn> diakopter: I think you could reproduce the thing FROGGS just fixed in the debugger - maybe try checkint it's gone if you have a moment. :)

[13:23] *** lizmat joined
[13:48] *** dalek joined
[14:12] *** jnap joined
[14:23] <diakopter> jnthn: I couldn't reliably reproduce it, or at least, I don't remember how

[14:38] *** johnny5_ joined
[14:52] <jnthn> diakopter: ah, ok

[15:47] *** jnap joined
[16:25] *** ingy joined
[16:27] *** FROGGS_ joined
[20:30] <jnthn> Awww

[20:30] <jnthn> Something busted with Moar on Windows

[20:30] <jnthn> Or maybe more widely

[20:30] <jnthn> nqp-moarvm: nqp::getstderr()

[20:30] <camelia> nqp-moarvm: ( no output )

[20:31] <jnthn> hmm

[20:32] <jnthn> In MVM_file_get_stdstream, uv_guess_handle(type) returns soemthing that hits none of the cases...

[20:32] <FROGGS> O.o

[20:33] <FROGGS> it worked on my boxed

[20:34] <jnthn> Returns 0. Hmmmm.

[20:36] <jnthn> Which is UV_UNKNOWN_HANDLE

[20:37] <FROGGS> are piping the stdout/stderr to somewhere?

[20:37] <FROGGS> err, redirecting

[20:37] <jnthn> Not knowingly.

[20:38] <jnthn> Nothing's changed on this machine / in my environment since before I went on vacation.

[20:39] <jnthn> Oh, this does happen running under the debugger

[20:39] <jnthn> But at the command line it exits with code 1 without any output while building the Rakudo MOP

[20:41] <diakopter> nqp-m: nqp::say(nqp::getstderr())

[20:41] <camelia> nqp-moarvm: OUTPUT«cannot stringify this␤frame_name_0␤»

[20:41] <diakopter> nqp-m: nqp::say(nqp::what(nqp::getstderr()))

[20:41] <camelia> nqp-moarvm: OUTPUT«␤»

[20:42] <FROGGS> nqp-m my $fh := nqp::getstderr(); say($fh.HOW.name($fh))

[20:42] <FROGGS> nqp-m: my $fh := nqp::getstderr(); say($fh.HOW.name($fh))

[20:42] <camelia> nqp-moarvm: OUTPUT«BOOTIO␤»

[20:44] <FROGGS> :/

[20:44] <FROGGS> C:\nqp\install\bin\nqp-m.bat --target=mbc --output=blib/Perl6/Metamodel.moarvm --encoding=utf8  src/gen/m-Metamodel.nqp

[20:44] <FROGGS> NMAKE : fatal error U1077: 'C:\nqp\install\bin\nqp-m.bat' : return code '0x1'

[20:45] <jnthn> Right, matches what I see then.

[20:45] <jnthn> I have to breakpoint the exception thrower in VS to figure out where it's going wrong.

[20:45] <FROGGS> well, must be my last commit

[20:46] <FROGGS> I've not seen any commit touching that piece of code

[20:47] <jnthn> trying a local revert of it

[20:47] <FROGGS> yeah, fixes it here

[20:48] <jnthn> yeah, seems so

[20:48] <FROGGS> now I properly get to Signature binding NYI

[20:48] <FROGGS> bind_sig

[20:48] <FROGGS> :(

[20:48] <jnthn> samma

[20:50] <jnthn> FROGGS: I'm wondering if we should actually create the MVM handles for stdin/stdout/stderr at startup, anchor them somewhere in instance, etc.

[20:50] <FROGGS> I've thought about that too

[20:50] <jnthn> FROGGS: Then we don't have to worry about them getting collected and closed...if I understand what's going on, anyway.

[20:50] <jnthn> Or have I missed the issue?

[20:51] <FROGGS> it seems that we have to clean up the pending requests at least

[20:51] <FROGGS> which should happen by the write callback

[20:51] <diakopter> argh; it's what I said "we" should do months ago..

[20:51] <FROGGS> so maybe that is enough already

[20:51] <diakopter> ;)

[20:51] <FROGGS> diakopter: you should have done it then :o)

[20:52] <FROGGS> because I don't know how to do that

[20:52] <jnthn> FROGGS: Add ->stderr, ->stdin etc to MVMInstance

[20:53] <jnthn> FROGGS: Then create the handles during startup, after 6model bootstrap

[20:53] <jnthn> And MVM_root_add_permanent or whatever 'em.

[20:54] <diakopter> someday, you'll also want to create global statics that enforce opening/closing them only once at the libuv level

[21:06] <FROGGS> jnthn: this bails out on my box again: https://gist.github.com/FROGGS/d245bd7f983e0b5c138f

[21:06] <FROGGS> (libuv assertion)

[21:08] <FROGGS> the assertion only goes away when I close the handle in MVMOSHandle.c

[21:31] <FROGGS> Could not find Perl6::BOOTSTRAP in any of: ., blib

[21:31] <FROGGS> load_module

[21:31] <FROGGS> NMAKE :N MAfKaEt a:l f atearrlo re rrUo1r0 U5180:7 7t:e r'mCi:n\antqepd\ ibnys tuaslelr\

[21:31] <FROGGS> bSitno\pm.o

[21:31] <FROGGS> nice :o)

[21:33] <jnthn> a tear rlos from my eye too :P

[21:33] <diakopter> erm.

[21:33] <diakopter> e r'm

[21:44] *** BenGoldberg joined
[21:54] <FROGGS> hmmm

[21:55] <FROGGS> it seems to work on both-ish when I move the uv_close to MVM_tc_destroy

[21:55] <FROGGS> (linux and windows)

[21:57] <FROGGS> ahh no, fails to build nqp

[22:02] <diakopter> FROGGS: you can't close the standard handles on windows... just don't

[22:02] <diakopter> it breaks stuff always

[22:02] <diakopter> and really confuses visual studio

[22:04] <FROGGS> then I just ifdef it out?

[22:04] <FROGGS> I'd be fine with that

[22:04] <diakopter> yah

[22:09] <dalek> MoarVM: d10b3fb | (Tobias Leich)++ | src/6model/reprs/MVMOSHandle.c:

[22:09] <dalek> MoarVM: don't close filehandles on windows, diakopter++

[22:09] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d10b3fbd99

[22:13] *** colomon joined
[22:15] <FROGGS> works on my böxes

[22:15] *** lizmat joined
[22:21] *** BenGoldberg joined
[22:26] *** woolfy joined
[22:39] *** lizmat joined
[22:54] *** woolfy joined
[23:21] *** lizmat joined
[23:23] *** woolfy joined
