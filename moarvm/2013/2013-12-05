[00:17] *** FROGGS joined
[00:35] *** colomon joined
[01:56] *** jnap joined
[03:32] *** ssutch joined
[04:16] *** jnap joined
[07:19] *** jnap joined
[08:00] *** ssutch joined
[08:16] *** FROGGS joined
[11:22] *** jnap joined
[12:18] *** odc joined
[13:24] *** jnap joined
[13:35] *** woolfy left
[14:14] *** camelia joined
[15:14] *** jnap joined
[16:00] <TimToady> .oO(MoarVM is...resting...right?)

[16:04] <_sri> psssst

[16:14] <diakopter> :)

[16:14] <nwc10> MoarVM is blotto?

[16:14] <TimToady> I shoulda said #moarvm

[16:53] *** jnap joined
[16:54] <jnthn> Well, the Next Problem is hunting something that looks like a closure serialization issue, and I ended up working on indy stuff 'cus I needed to brush up on it for my talk next week. :)

[16:54] * nwc10 is currently testing the NQP indy branch on Moar with moar-support

[16:54] * diakopter dares to ask what indy is

[16:54] <diakopter> "I was named after the dog!?!"

[17:02] <nwc10> jnthn: gets to

[17:02] <nwc10> ./perl6-m --target=mbc --output=blib/Test.moarvm lib/Test.pm

[17:02] <nwc10> Unhandled exception: Cannot invoke this object

[17:02] * nwc10 thinks that that is where we were before

[17:03] <jnthn> Yeah.

[17:03] <jnthn> Sounds like, anyway.

[17:03] <jnthn> diakopter: invoke dynamic

[17:06] <TimToady> maybe in-dy would produce a less FAQ

[17:10] *** colomon joined
[17:10] <jnthn> Wasn't my choice of shortening ;)

[17:28] <diakopter> TimToady: it wouldn't be any less frequently asked by me, since I now realize I'd asked it (at least!) once before already

[17:51] *** FROGGS[mobile] joined
[19:14] *** cognominal joined
[20:11] *** FROGGS joined
[20:44] <dalek> MoarVM: bd782aa | jnthn++ | src/core/exceptions.c:

[20:44] <dalek> MoarVM: Exception category should default to catch.

[20:44] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/bd782aa821

[20:48] <FROGGS> jnthn: how do we want to get rid of that gc bug?

[20:48] <FROGGS> I am really out of ideas on that topi

[20:48] <FROGGS> topic*

[20:48] <jnthn> I need to reproduce it, I guess...

[20:49] <jnthn> More pressing on getting setting loading working at the moment, though...

[20:50] <FROGGS> yeah

[20:51] <FROGGS> hmmm, I could even hack on windows if I had to

[20:53] <jnthn> Or just build with a lower opt level, iirc?

[20:54] <FROGGS> true, that should still work

[20:55] <FROGGS> jnthn: you want to show perl6-m somewhere?

[20:58] <jnthn> FROGGS: No, just would really like to get to "hello world". :)

[20:58] <FROGGS> k

[21:10] *** cognominal joined
[21:14] <dalek> MoarVM: 6f955c8 | jnthn++ | src/core/frame.c:

[21:14] <dalek> MoarVM: Make sure scalar containers are fresh per frame.

[21:14] <dalek> MoarVM:

[21:14] <dalek> MoarVM: Also stub the place we'll later need to provide some support for state

[21:14] <dalek> MoarVM: variables.

[21:14] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/6f955c8b2d

[21:17] <jnthn> We now make it to the $PROCESS::TZ = get-local-timezone-offset(); at 14731

[21:17] <FROGGS> yay!!

[21:19] <jnthn> We don't need that yet so will just comment it out...

[21:19] <FROGGS> :S

[21:20] <jnthn> Well, #?if !moar it

[21:20] <jnthn> It hits some binding thing, but it will also hit the decodelocaltime not being done yet, I'd guess...

[21:20] <FROGGS> yeah

[21:23] <jnthn> Did exactly that for JVM port too :)

[21:23] <jnthn> TZ? Yah, later... :)

[21:25] <FROGGS> hehe

[21:25] <FROGGS> the spec tests will force us to fix it then :o)

[21:26] <jnthn> aye

[21:26] <jnthn> Well, we gotta manage sanity test first... :)

[21:27] <jnthn> I'm gonna probably worry about the GC bug, and the missing GC opt that makes setting comp take ages, before digging too far into that, though.

[21:27] <jnthn> 'cus otherwise it's a long build cycle.

[21:29] <jnthn> 16614...

[21:38] <FROGGS> :o)

[21:38] <FROGGS> happy FROGGS is happy

[21:41] <jnthn> 16640

[21:50] <FROGGS> rebase -i is pain

[21:51] <timotimo> it is?

[21:51] <timotimo> i love rebase -i

[21:53] <FROGGS> well, I wanna fixup 15 commits into one, and have conflicts here and there

[21:53] * jnthn likes it too, but it took a little learning the first time :)

[21:54] <FROGGS> mostly in src/core/Array.pm with diffs that does not fit on my screen

[21:54] <timotimo> oh, oops :)

[22:06] *** tgt joined
[22:16] <jnthn> *drumroll*

[22:17] <jnthn> C:\consulting\rakudo>perl6-m -e "say 'hi moar'"

[22:17] <jnthn> WARNING: State vars NYI

[22:17] <jnthn> WARNING: State vars NYI

[22:17] <jnthn> hi moar

[22:18] <diakopter> wat.

[22:18] <diakopter> time? :)

[22:20] <FROGGS> \o/

[22:20] <FROGGS> I can haz "hi moar"?

[22:21] <jnthn> Yes.

[22:21] <diakopter> what's the startup/run time like?

[22:22] <jnthn> diakopter: 0.72s, probably muchly coming from the time we waste decoding the huge setting blob to NFG only to immediately ASCII it again...

[22:23] <diakopter> well the nfg reader knows to make ascii strings when possible, I thought

[22:23] <diakopter> oh, but yes.

[22:23] <diakopter> :)

[22:23] <jnthn> Well, it does, but it doesn't know it's not UTF-8

[22:23] <jnthn> We actually could consider indicating "assume ascii when decoding" in the bytecode file at the point we create it.

[22:24] <diakopter> I thought I made it assume ascii by default to start, then demote to bigger thing when necessary

[22:24] <jnthn> Ah...I dunno, I thought it only did that when decoding ascii. I may be wrong...

[22:25] <jnthn> Either way it's doing the work to look for potential utf-8...and vice versa when it encodes again...

[22:25] <diakopter> when decoding ascii it never makes anything but ascii

[22:25] <jnthn> Right.

[22:25] <jnthn> But the constant pool in the bytecode file is currently defined as "a bunch of things in utf-8"

[22:26] <jnthn> Goes without saying we still get this thing started/run faster than JVM :)

[22:26] <FROGGS> *g*

[22:26] <jnthn> Anyway, we can optimize later. For today, I'm just happy we can actually do "hello world" :)

[22:27] <FROGGS> yeah

[22:27] <FROGGS> jnthn++

[22:54] <jnthn> Guess I should have a nice beer to mark getting to this point... :)

[22:56] <FROGGS[mobile]> I'll enjoy a nice water then :S

[23:08] <jnthn> No beer?

[23:39] *** woolfy joined
