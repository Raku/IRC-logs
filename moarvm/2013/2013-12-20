[00:08] <diakopter> tadzik: so sleep indeed.

[00:17] <lue> there's no way to specify multiple directories for --libpath, is there? I'm trying to make the perl6-m script work outside of rakudo :)

[00:17] *** cognominal joined
[00:35] *** colomon joined
[01:00] *** grondilu joined
[01:10] *** grondilu left
[01:33] *** seaker joined
[02:03] *** jnap joined
[02:25] *** eternaleye joined
[03:02] *** jnap joined
[05:14] *** eternaleye joined
[05:21] *** jnap joined
[05:41] *** cognominal joined
[05:44] * diakopter realizes that type signatures are actually a type of grammar

[05:56] <diakopter> .. and so are dependency statements

[06:04] <diakopter> .. as is anything that requires any kind of logical resolution

[06:39] *** krunen joined
[07:58] *** FROGGS joined
[08:23] *** jnap joined
[10:24] *** jnap joined
[10:36] *** tgt joined
[12:05] *** cognominal joined
[13:13] *** lizmat joined
[14:04] *** jnap joined
[14:05] *** tgt joined
[16:00] *** jnap joined
[16:20] *** FROGGS joined
[16:31] <nwc10> jnthn: I've found the cause of the GC garbage bug

[16:31] <nwc10> unconditionally pushing MVM args to the temp roots. Which gets all messy if they are optional named arguments that don't exist

[16:47] <lizmat> nwc10++

[16:48] <lizmat> I'm pretty sure jnthn will be very glad when he sees this

[16:49] <TimToady> unless he sez sump'n like: but they're all initialized to something innocuous that could not be mistaken for a pointer

[16:51] *** eternaleye joined
[17:18] <diakopter> .oO( doesn't Nick have a commit flag? )

[17:24] *** rurban joined
[17:30] <diakopter> er, push flag.

[17:44] <TimToady> nwc10++ is not a pushy guy

[18:36] *** ssutch joined
[18:49] <diakopter> nwc10: I can't find which branch you're on

[18:53] <dalek> MoarVM: c506bb3 | diakopter++ | src/core/args.c:

[18:53] <dalek> MoarVM: pushing optional arguments onto the temps stack if they are missing would be a bad thing (TM)

[18:53] <dalek> MoarVM:

[18:53] <dalek> MoarVM: nwc10++

[18:53] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c506bb3153

[18:53] <diakopter> nm

[18:54] <diakopter> TimToady: does yours make test now?

[18:57] <diakopter> with --optimize, I mean

[18:58] <diakopter> moritz: (or anyone) why hasn't moar-support been merged

[19:10] *** FROGGS[mobile] joined
[19:19] <FROGGS[mobile]> diakopter: I dunno, I asked jnthn++ but got no answer

[19:23] * moritz has no idea

[19:24] <moritz> maybe because the setting compilation still occasiontally segfaults?

[19:24] <moritz> also, would somebody please give nwc10++ a commit bit? :-)

[19:24] <moritz> (for moar, that is)

[19:27] <timotimo> something about not wanting to commit to a serialisation version or something?

[19:27] <FROGGS[mobile]> who can do that?

[19:28] <timotimo> we also still need to do the code that puts blobs of data into the moar bytecode files rather than base64 encoding them

[19:28] <FROGGS[mobile]> timotimo: we dont have problem I trink

[19:29] <timotimo> what do you trink? :)

[19:29] <FROGGS[mobile]> (the sc version thing)

[19:29] <FROGGS[mobile]> ohh, I missed a "that"

[19:29] <timotimo> hm, ok

[19:30] <timotimo> still, getting rid of the base64 stuff would probably be a little win for startup time :3

[19:31] <FROGGS[mobile]> go ahead I'd say, but it sounded aß there is some design work needed

[19:31] <FROGGS[mobile]> as*

[19:33] *** eternaleye joined
[19:33] <timotimo> maybe it's easier than you all think :P

[19:33] <timotimo> (i don't actually think i can just do it)

[19:36] <FROGGS[mobile]> I guess we will need a MVMBlob to store binary stuff

[19:39] <timotimo> Test.pm still segfaults even with the fix diakopter just committed for nwc

[20:08] <diakopter> :(

[20:08] <FROGGS> not for me

[20:08] <FROGGS> make test in rakudo is clean now (for the first time)

[20:08] <diakopter> with --optimize?

[20:09] <FROGGS> with --optimize=1

[20:09] * diakopter now reads #perl6 :)

[20:10] <diakopter> I'll try to reproduce timotimo's err

[20:11] <diakopter> timotimo: what's your system (so I can download the same distro/kernel)

[20:12] * diakopter is feeling very ambitious today, being soon surrounded by 100 hacktivists

[20:12] <FROGGS> *g*

[20:13] <timotimo> diakopter: it's a fedora 20

[20:13] <diakopter> #g0v.tw on freenode in case you're curious

[20:13] <timotimo> er, wrong

[20:13] <timotimo> that's remote

[20:13] <timotimo> it's a linux mint

[20:13] <diakopter> :)

[20:13] <diakopter> 32/64? version?

[20:13] <timotimo> Linux kischde 3.8.0-33-generic #48-Ubuntu SMP Wed Oct 23 09:16:58 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux

[20:13] <timotimo> 64

[20:13] <diakopter> clang or gcc?

[20:13] <timotimo> gcc afaict

[20:13] <timotimo> gcc (Ubuntu/Linaro 4.7.3-1ubuntu1) 4.7.3

[20:16] <diakopter> timotimo: which should I download? :√ http://community.linuxmint.com/iso

[20:19] <diakopter> great, now I have to choose between Cinnamon desktop and MATE desktop, neither of which I've heard of :Ω

[20:19] <timotimo> that's a really good question. i never saw this page before

[20:19] <timotimo> if you have a beefy graphics card, you can safely go cinnamon

[20:19] <diakopter> ok :∂

[20:19] <timotimo> mate is a gnome2 fork

[20:20] <timotimo> :Γ

[20:20] <diakopter> gee thanks safari for displaying the utf8 of the .iso in my browser window. just what I wanted. :)

[20:20] <timotimo> :D

[20:31] *** colomon joined
[20:39] <diakopter> well I'll get mint 16; hopefully it still has the problem :)

[20:45] * TimToady uses cinnamon, but hasn't tried to compile on mint 16 yet

[20:55] * TimToady is watching the perl6-m compile go past, and wondering why --encoding=utf8 is not the default

[21:00] <TimToady> perl6-m compile successful on Mint 15

[21:03] <TimToady> (64-bit, cinnamon)

[21:03] <diakopter> is optimize=1 the default nowadays?

[21:03] <TimToady> I believe it used 3

[21:05] <TimToady> yes, 3

[21:08] <diakopter> me 10 years from now: "how many internets does your local internet backup archive contain?" "all of them except the quintillion most recent ones"

[21:08] <TimToady> earlier success was on my 6-core at home; it failed to compile Test on my laptop though

[21:09] * diakopter hasn't built nqp/rakudo in some .. months

[21:09] <TimToady> trying a reconfig

[21:09] <diakopter> let alone on moar. so I'm curious to see how fast.

[21:10] <FROGGS> p: sub caller($o = 0) { try die; Backtrace.new[$o + 2] }; say caller(0) # I love it

[21:10] <camelia> rakudo-parrot 413650: OUTPUT«Backtrace::Frame.new(file => "/tmp/Fq0i3AufIY", line => 1, code => sub caller($o = { ... }) { ... }, subname => "caller")␤»

[21:11] <FROGGS> +3 actually...

[21:12] <FROGGS> ww :o)

[21:14] <diakopter> mint boots absurdly quickly

[21:15] <TimToady> security updates from ubuntu are absurdly slow though, last I knew

[21:16] <diakopter> "a new version of the update manager is available"

[21:16] <diakopter> ok.

[21:17] <diakopter> "enter your password to start the update manager"

[21:17] <diakopter> ok.

[21:18] <diakopter> .. and now 172 updates of 233 MB.

[21:18] <diakopter> yay

[21:19] <diakopter> well it's install gcc 4.8, and timotimo has 4.7

[21:19] <diakopter> *installing

[21:19] <diakopter> bah

[21:22] <TimToady> Test still fails on laptop, blowing away install and nqp now

[21:23] <TimToady> I wonder if it's just a function of less memory available on the laptop; thought jnthn++ said not a week or two ago

[21:23] <diakopter> url?

[21:25] <diakopter> this has got to be the hundredth time I've spent several minutes waiting for libreoffice and thunderbird to download/install without ever intending to use them.

[21:26] <diakopter> thousandth if you count updates, probably

[21:27] <diakopter> TimToady: what else did jnthn say about that

[21:27] <diakopter> how could limited memory trigger the different behavior

[21:28] <TimToady> he said it couldn't, cause the allocation was fixed

[21:28] <TimToady> not based on how much memory you have

[21:29] <diakopter> yeah; currently it never frees any of the main heaps until the very end

[21:33] <diakopter> however, maybe therein lies the clue. if malloc changes its allocation strategy based on constrained memory, perhaps we are hanging onto some freed malloc'd pointer.

[21:34] <TimToady> I don't think malloc cares about that

[21:34] <diakopter> but there are lots of mallocs

[21:34] <diakopter> maybe some reduce the break

[21:34] <diakopter> or whatever it's called

[21:34] <TimToady> I've never met a malloc that cares about that

[21:35] <TimToady> but if it reduces the break, it would be unlikely to do that based on total system memory, methinks

[21:36] <TimToady> usually it's just, "oh, the last thing before the break went away, so I can move the break back"

[21:36] <TimToady> malloc isn't allows to move things around...

[21:36] <TimToady> *wed

[21:37] <diakopter> but maybe if there's less available, it tries harder to avoid fragment

[21:38] <TimToady> maybe, but I've never met that malloc

[21:40] <diakopter> years later, git still depends on perl for a trivial-ish function.  oddity of oddities.

[21:40] <diakopter> .oO( guardian angel.. coattails.. )

[21:48] <diakopter> mwilson@host22 ~/src/rakudo $ perl Configure.pl --gen-moar

[21:48] <diakopter> Use of uninitialized value $default_backend in substr at Configure.pl line 121.

[21:50] *** jnap joined
[21:50] <FROGGS> FIX IT"!!1

[21:51] <diakopter> no rakudo commit bit :)

[21:51] <FROGGS> haha

[21:51] <diakopter> (and forced ignorance to submit a pull request)

[21:53] <FROGGS> um, you are not even joking O.o

[21:53] <diakopter> well..

[21:53] <diakopter> while also poking fun/self-deprecating accurately

[21:54] <diakopter> mint gave me gcc without giving me libc-dev

[21:54] <diakopter> *headdesk*

[21:56] <TimToady> how's it supposed to guess you're a dev?

[21:56] <diakopter> :)

[21:56] <TimToady> most people aren't, or shouldn't...

[21:56] <diakopter> well that was quick.

[21:56] <FROGGS> and especially a libc-dev

[21:56] <diakopter> /home/mwilson/src/rakudo/install/bin/moar --libpath=src/vm/moar/stage0 src/vm/moar/stage0/nqp.moarvm --bootstrap --setting=NULL --no-regex-lib --target=mbc \ --output=gen/moar/stage1/nqpmo.moarvm gen/moar/stage1/nqpmo.nqp

[21:56] <diakopter> make: *** [gen/moar/stage1/nqpmo.moarvm] Segmentation fault

[21:57] <diakopter> very first thing it tried to use moar for, it dieded

[21:59] <diakopter> TimToady: well, -dev is the thing that contains the std .h

[21:59] <TimToady> my laptop still consistently dies on Test.pm, where my home computer worked.  I wonder what's different...

[21:59] <diakopter> I can't build nqp at all

[22:00] <TimToady> fresh from git?

[22:00] <diakopter> right

[22:01] <diakopter> 'course, I didn't have libc much of the way through.

[22:01] <diakopter> trying again.

[22:01] <TimToady> my nom-level configuration is: perl Configure.pl --backends='parrot,jvm,moar' --prefix='/home/larry/nom/install' --gen-parrot --gen-nqp=master --gen-moar=master

[22:02] <TimToady> note the explicit =masters

[22:02] <diakopter> I wish searching for a commit hash on google would link directly to the proper commit on github

[22:02] <diakopter> hm

[22:03] <diakopter> oh ok.

[22:03] <diakopter> well I wonder why the moar-support doesn't do that :)

[22:03] <diakopter> ah, that's better.

[22:04] <TimToady> it also required the absolute path to install, relative didn't work, and maybe still doesn't

[22:05] <diakopter> I've never seen nqp build that quickly

[22:06] <TimToady> well, Configure often doesn't rebuild when you'd want it to, so sometimes you have to blow away nqp and install

[22:08] * TimToady --> nap, try to get well

[22:08] <diakopter> Stage start      :   0.000

[22:08] <diakopter> Stage parse      : 106.056

[22:08] <diakopter> Stage syntaxcheck:   0.000

[22:08] <diakopter> Stage ast        :   0.000

[22:08] <diakopter> Stage optimize   :  12.209

[22:08] <diakopter> does that seem right?

[22:08] <[Coke]> sureish.

[22:08] <diakopter> oh

[22:09] <diakopter> Stage mast       :  81.834

[22:09] <diakopter> Stage mbc        :   0.924

[22:09] <diakopter> Segmentation fault

[22:09] <diakopter> make: *** [CORE.setting.moarvm] Error 139

[22:09] <diakopter> *cry*

[22:13] <FROGGS> make install again

[22:13] <FROGGS> sometimes it fails after building the setting

[22:13] <diakopter> gah.

[22:14] <diakopter> perl -MExtUtils::Command -e cp /home/mwilson/install/bin/perl6-m /home/mwilson/install/bin/perl6

[22:14] <diakopter> perl -MExtUtils::Command -e chmod 755 /home/mwilson/install/bin/perl6

[22:14] <diakopter> Cannot chmod 755 /home/mwilson/install/bin/perl6:No such file or directory at /usr/share/perl/5.14/ExtUtils/Command.pm line 274.

[22:14] <diakopter> so.. how could make install think that there's a perl6-m when there's not

[22:17] <diakopter> ah, there's a bug

[22:18] <diakopter> m-all: $(PERL6_MOAR) $(SETTING_MOAR) $(M_RUNNER) lib/Test.moarvm blib/lib.moarvm blib/Pod/To/Text.moarvm

[22:18] <diakopter> $(M_RUNNER) needs to have its path

[22:20] <diakopter> er

[22:23] <diakopter> mwilson@host22 ~/src/rakudo $ ./perl6-m -e 'hi'

[22:23] <diakopter> ===SORRY!===

[22:23] <diakopter> p6sort NYI

[22:23] <diakopter> moar: 3rdparty/libuv/src/unix/loop.c:150: uv__loop_delete: Assertion `!((((*(&(loop)->active_reqs))[0]) == (&(loop)->active_reqs)) == 0)' failed.

[22:23] <diakopter> Aborted

[22:23] <diakopter> FROGGS: ^ what does this mean

[22:24] <[Coke]> diakopter: try with --ll-exception

[22:24] <[Coke]> (given that 'hi' isn't valid, might be dying on error reporting)

[22:24] <diakopter> yeah

[22:24] <diakopter> what does that do

[22:25] <diakopter> (what does the ll stand for)

[22:25] <diakopter> low-level I'll assume

[22:25] <[Coke]> low level

[22:27] <FROGGS> diakopter: that libuv assertion always pops up if you don't exit cleanly

[22:28] <diakopter> gah :(

[22:30] <FROGGS> ./perl6-m -e 'say "hi"' should work though

[22:32] <diakopter> yeah, does

[22:38] <FROGGS> what optimize flags does moar got?

[22:38] <diakopter> 3

[22:38] <FROGGS> interesting, I guess it still fails on my box

[22:38] <diakopter> I thought moar had a --show-config

[22:41] <diakopter> r: say "","",""

[22:41] <camelia> rakudo-parrot 2b027b, rakudo-jvm 2b027b: OUTPUT«␤»

[22:41] <diakopter> r: say ".",".","."

[22:41] <camelia> rakudo-parrot 2b027b, rakudo-jvm 2b027b: OUTPUT«...␤»

[22:41] <diakopter> oh.

[22:44] <FROGGS> nqp has
