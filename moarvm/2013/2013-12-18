[00:07] <dalek> MoarVM: 41836eb | jnthn++ | src/6model/s (3 files):

[00:07] <dalek> MoarVM: Implement deserialize bit of object repo.

[00:07] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/41836eb4c2

[00:11] <dalek> MoarVM: 9345cbe | jnthn++ | src/core/interp.c:

[00:11] <dalek> MoarVM: Scatter some SC object write barriers.

[00:11] <dalek> MoarVM:

[00:11] <dalek> MoarVM: Taken from all the places the JVM backend puts them.

[00:11] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9345cbef31

[00:12] <jnthn> Note that you'll need to rebuild Moar, NQP and Rakudo with the latest stuff I've done.

[00:14] <jnthn> If you managed to reproduce what I have, Test.pm now pre-compiles and 4 sanity tests fail.

[00:14] <jnthn> *manage

[00:35] <dalek> MoarVM: 576042c | jnthn++ | src/6model/reprs/P6opaque.c:

[00:35] <dalek> MoarVM: Fix clone/null sentinel interaction bug.

[00:35] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/576042c7cd

[01:02] <[Coke]> I just built rakudo-moar... "make test" is trying to run perl6-p ?

[01:04] <jnthn> [Coke]: Likely just makefile copy-pasto

[01:04] <jnthn> [Coke]: I've been invoking prove directly

[01:08] <jnthn> [Coke]: Feel free to commit a fix, of course :)

[01:31] *** seaker joined
[01:59] *** jnap joined
[02:25] <[Coke]> https://gist.github.com/coke/8016363 looks like a good start, but I get a makefile error when I rebuild.

[02:30] <moritz> [Coke]: the rebuild error looks unrelated to your patch

[02:35] <[Coke]> if the patch looks good, feel free to apply. sleep here soon. (and why are you awake?)

[02:35] <[Coke]> oh, you did already. :)

[02:59] *** jnap joined
[03:03] <moritz> why am I awake? $daughter is to blame :-)

[04:00] *** jnap joined
[04:10] *** colomon joined
[04:20] *** harrow joined
[05:01] *** jnap joined
[06:02] *** jnap joined
[07:02] *** jnap joined
[07:30] *** FROGGS joined
[08:03] *** jnap joined
[09:04] *** jnap joined
[09:12] *** flussence joined
[09:12] *** _sri joined
[09:12] *** TimToady joined
[09:21] *** flussence joined
[09:21] *** _sri joined
[09:21] *** TimToady joined
[10:05] *** jnap joined
[10:11] <dalek> MoarVM: 0005ecc | jnthn++ | src/core/exceptions.c:

[10:11] <dalek> MoarVM: Handle CONTROL category correctly.

[10:11] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0005ecce28

[10:12] <jnthn> That was at least half of why warnings ended up fatal.

[10:15] <FROGGS> cool

[10:15] <timotimo> \o/

[10:15] * FROGGS .oO( or rather (Cool) ? )

[10:16] <jnthn> And fixed another issue in NQP related to it

[10:16] <jnthn> Now they still end up fatal. grr.

[10:16] <jnthn> But the handler actually runs.

[10:17] <jnthn> So, suspect nqp::resume is not doing quite what it needs to...

[10:17] * FROGGS builds everything

[10:19] <jnthn> oh hmm, how on earth does resume work...

[10:19] <FROGGS> I did that me thinks

[10:21] <jnthn> I don't quite understand wha tit's doing.

[10:21] <FROGGS> so at least you don't need to blame the weatherman :o)

[10:21] <jnthn> Of note, I don't see it updating tc->cur_frame anywhere...

[10:21] <jnthn> Also I think it's trying to make non-resumable things into resumable ones...somehow ;)

[10:22] <FROGGS> :S

[10:22] <FROGGS> id does some magic here too: src/core/interp.c:3541

[10:23] <FROGGS> but I don't see an update on tc->cur_frame there either

[10:23] <jnthn> Hmm

[10:23] <jnthn> Yeah, this looks...fishy.

[10:24] <FROGGS> I'm sorry

[10:25] <jnthn> Don't be. It was good enough for the NQP tests for resume at least ;)

[10:25] <jnthn> And it's *not* a nice thing to implement...

[10:28] <FROGGS> I still think I learned something at that time, which is always nice :o)

[10:30] *** tgt joined
[10:55] *** FROGGS joined
[11:05] *** jnap joined
[11:06] <jnthn> ooh, I may just have something that works

[11:11] * timotimo is eager to pull before leaving towards his train

[11:14] <dalek> MoarVM: 743bc1b | jnthn++ | src/ (3 files):

[11:14] <dalek> MoarVM: Fix resumable exceptions.

[11:14] <dalek> MoarVM:

[11:14] <dalek> MoarVM: Now warnings in Rakudo are not fatal.

[11:14] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/743bc1b077

[11:15] <timotimo> \o/

[11:22] <jnthn> Down to 3 failing sanity tests with that, btw.

[11:22] <timotimo> wow, that's awesome!

[11:22] <timotimo> and now i'll go train

[11:40] *** FROGGS joined
[11:52] <dalek> MoarVM: 006f6f6 | jnthn++ | src/ (10 files):

[11:52] <dalek> MoarVM: Correctly provide invocant to invocation handlers.

[11:52] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/006f6f6644

[11:52] <jnthn> And then there were 2...

[11:56] <diakopter> O_O

[11:58] <jnthn> 07-op-string.t and 99-test-basic.t

[12:06] *** jnap joined
[12:07] *** woolfy joined
[12:24] <nwc10> I assume that the build shouldn't fail with:

[12:24] <nwc10> src/vm/moar/ops/perl6_ops.c: In function ‘p6capturelex’:

[12:24] <nwc10> src/vm/moar/ops/perl6_ops.c:333: error: too few arguments to function ‘MVM_frame_find_invokee’

[12:24] <nwc10> src/vm/moar/ops/perl6_ops.c: In function ‘p6captureouters’:

[12:24] <nwc10> src/vm/moar/ops/perl6_ops.c:350: error: too few arguments to function ‘MVM_frame_find_invokee’

[12:25] <jnthn> Uh, not if you have the local patch I do... :)

[12:27] <timotimo> d'oh :)

[12:40] <timotimo> okay, i built a fresh nqp-jvm, now i can try going at the boot interop code again

[12:41] *** tgt joined
[12:44] *** tgt joined
[12:57] <jnthn> timotimo: yay :)

[12:57] *** lizmat joined
[13:00] *** FROGGS joined
[13:02] <timotimo> (in reality, i was still missing rakudo)

[13:02] <timotimo> (so i'm compiling that now, while playing a bit of Race The Sun in the mean time :P)

[13:02] <FROGGS> "Rakudo has been built and installed."

[13:02] <FROGGS> I like that :o)

[13:02] <timotimo> .his is a no-cellphone-area with "psst" icons on the walls but still people are talking to each other or on the phone :\

[13:03] <dalek> MoarVM: 67d0815 | jnthn++ | src/strings/ops.c:

[13:03] <dalek> MoarVM: Fix bitwise string and.

[13:03] <dalek> MoarVM:

[13:03] <dalek> MoarVM: Should take length of the shortest string.

[13:03] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/67d081594f

[13:03] <FROGGS> ohh, the runner seems to be wrong

[13:04] <jnthn> FROGGS: While you're looking at that stuff, "make test" doesn't work for me, but running prove --exec=perl6-m t/01-sanity does...

[13:05] <FROGGS> k, I see what is up with the runner at least

[13:06] <jnthn> I'm now down to just one sanity test fail

[13:06] <FROGGS> will looks at `make test` in a sec

[13:06] <FROGGS> jnthn++

[13:06] * FROGGS .oO( but the he took a sanity test to the knee )

[13:07] <moritz> jnthn: does prove --exec=perl6-m.bit t/01-sanity   work?

[13:07] *** jnap joined
[13:07] <FROGGS> bit?

[13:08] <FROGGS> that would be the problem I am about to commit

[13:08] <jnthn> bat

[13:08] <FROGGS> err, I would commit the fix of course

[13:08] <jnthn> But yes, it does with .bat

[13:14] <FROGGS> hmpf, it tries to recompile the ops now when running `make test`

[13:23] <moritz> moar-support setting build segfaults again :(

[13:24] <timotimo> 66

[13:24] <timotimo> ~j.

[13:24] <timotimo> whoops.

[13:24] <moritz> better without the j :-)

[13:25] <timotimo> yeah, works a lot better :D

[13:25] <timotimo> the most frustrating part is when you *think* the connection is dead

[13:25] <timotimo> and you <cr>~. and whatever line you've partially typed before makes it out m)

[13:28] <FROGGS> jnthn: if you set "merge => 1" to 0,  in t/harness, you get:

[13:28] <FROGGS> Unhandled exception: Cannot find method 'postcircumfix:<( )>'

[13:28] <FROGGS> at <unknown>:1  (./CORE.setting.moarvm:print_exception:4294967295)

[13:28] * moritz is familiar with that

[13:28] <FROGGS> ... for all tests

[13:34] <FROGGS> ahh, I think I need to wait for jnthn's local patch...

[13:34] <FROGGS> src/vm/moar/ops/perl6_ops.c: In function ‘p6captureouters’:

[13:34] <FROGGS> src/vm/moar/ops/perl6_ops.c:362:9: error: too many arguments to function ‘MVM_frame_find_invokee’

[13:36] <nwc10> git pull, as it's already there

[13:36] <FROGGS> ahh, have missed that... thanks!

[13:36] <FROGGS> that seems to help :o)

[13:41] <FROGGS> jnthn: `make test` does work for me now

[13:42] <FROGGS> four test files fail

[13:42] <FROGGS> 11, 14, 15 and 99

[13:43] <jnthn> You're likely missing some latest commits from Moar or NQP.

[13:43] * moritz missed a moar commit

[13:44] <FROGGS> k

[13:45] <jnthn> wtf, now I always get a segfault building Test.pm...

[13:49] <FROGGS> :(

[13:49] <FROGGS> I hope it is there under the debugger too

[13:49] <FROGGS> see you later

[13:49] <FROGGS> plain &

[13:59] *** jnap joined
[15:20] *** eternaleye joined
[16:23] *** tgt joined
[17:01] *** cognominal joined
[17:06] *** eternaleye joined
[17:22] *** FROGGS joined
[18:08] <FROGGS> GatherIter is kinda pressing now, right?

[18:13] *** _sri joined
[18:13] *** flussence joined
[18:13] *** TimToady joined
[18:37] <jnthn> Well, I'm gonna do a cheating one.

[18:37] <jnthn> That ain't lazy

[18:37] <jnthn> And then I'll do the continuations in the new year, unless somebody beats me to it :)

[18:40] <timotimo> wouldn't likely be me :)

[18:45] <diakopter> :D

[18:45] <timotimo> jnthn: omg omg omg i think my crap works now

[18:45] <diakopter> hopefully me

[18:45] <diakopter> timotimo: better run to the .. oh nm

[18:48] <diakopter> msg chanserv op #moarvm

[18:48] <diakopter> gah

[19:11] <jnthn> whoz op?

[19:11] <jnthn> ti	yay!

[19:12] <jnthn> wtf

[19:12] <jnthn> timotimo: yay :)

[20:15] *** cognominal joined
[20:21] *** ssutch joined
[20:25] <jnthn> Urgh, current bug is taking quite some hunting... :/

[20:25] <diakopter> talk it out to me :)

[20:28] *** cognominal joined
[20:31] <jnthn> Well, given these lines:

[20:31] <jnthn> nqp::say(nqp::elems($!rest));

[20:31] <jnthn> nqp::say(nqp::elems(nqp::getattr($x, Parcel, '$!storage')));

[20:32] <jnthn> nqp::splice($!rest, nqp::getattr($x, Parcel, '$!storage'), 0, 0);

[20:32] <jnthn> nqp::say(nqp::elems($!rest));

[20:32] <jnthn> The fact the says come out with

[20:32] <jnthn> 0

[20:32] <jnthn> 1

[20:32] <jnthn> 2

[20:32] <jnthn> Seems a bit odd

[20:32] <jnthn> You have a list with 0 elems, you splice in a list of 1 elems, and suddenly you get a list with 2 elems.

[20:32] <diakopter> istr splice was not thoroughly done/reviewed

[20:33] <jnthn> I'd thought it was mostly a fairly direct port...

[20:34] <nwc10> jnthn: one for your later enjoyment - http://paste.scsys.co.uk/285849 - Can't build NQP with a MoarVM with a 2034K nursery

[20:35] *** colomon joined
[20:40] *** eternaleye joined
[20:40] <jnthn> nwc10: Hm, if we try to dereference each thing as we add it to the worklist, it'll crash at a much more informative place, I'd guess.

[20:41] <nwc10> yes, that's an interesting idea that should work

[20:45] <nwc10> but tonight I am going to bed. And no guarantee if I have time tomorrow to figure out how many places need to be tweaked to do that

[20:47] <diakopter> nwc10: I bet you'll have time to count to 1 :)

[20:55] *** eternaleye joined
[20:57] *** eternaleye joined
[21:06] <jnthn> argh, found it

[21:07] <timotimo> \o/

[21:17] <dalek> MoarVM: ac15634 | jnthn++ | src/6model/reprs/MVMArray.c:

[21:17] <dalek> MoarVM: Fix double-adding of start in splice.

[21:17] <dalek> MoarVM:

[21:17] <dalek> MoarVM: Led to incorrectly sized array and potentially looking at garbage.

[21:17] <dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ac15634a8e

[22:29] *** colomon joined
[22:43] *** colomon joined
[23:23] <lue> I just pulled & compiled MVM and NQP, and now I get this with rakudo: src/vm/moar/ops/perl6_ops.c:350:5: error: too many arguments to function ‘MVM_frame_find_invokee’

[23:23] <lue> (also pulled rakudo, I should mention)

[23:24] <jnthn> lue: That sounds like your MVM didn't make install proprely, or it went in a different place then your NQP/Rakudo ended up pointed at.

[23:24] <jnthn> That API change happened yesterday.

[23:25] <lue> I'll run through the process again, then. Maybe manually delete some MVM stuff o'er in the install dir.

[23:39] <lue> jnthn: this is weird. The timestamp of the offending header is today, but apparently it's still mismatched with— the last git log commit was from the 15th *headdesk*

[23:40] <jnthn> That'd do it :P

[23:42] * TimToady blows away all of install and nqp when he's serious about rebuilding

[23:43] <lue> TimToady: detonating /usr/local is generally perceived as dangerous to your health :)

[23:47] <TimToady> putting random junk in /usr/local is also generally perceived as suboptimal :)

[23:50] <lue> /usr/local = non-package-manager programs, to me at least :)

[23:51] <TimToady> /home/larry for me :)

[23:51] <lue> /home feels too volatile for programs I want to use often.

[23:52] <lue> jnthn: as predicted, updating my Moar repo worked, and it's moved on now :)

[23:53] * TimToady doesn't like putting volatile stuff into /usr/local

[23:54] <lue> I basically treat /usr/local as the location for programs that would go in /usr, had I installed them through portage.

[23:55] * lue &
