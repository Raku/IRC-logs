[00:28] *** MasterDuke joined
[00:29] <MasterDuke> timo: this looks like something you'd be interested in https://pypy.org/posts/2024/10/jit-peephole-dsl.html

[00:32] <MasterDuke> https://spidermonkey.dev/blog/2024/10/16/75x-faster-optimizing-the-ion-compiler-backend.html mentions the dominance-calculating algorithm they were previously using is i believe the same one moarvm uses https://github.com/MoarVM/MoarVM/blob/main/src/spesh/graph.c#L3-L7

[00:35] <MasterDuke> i don't remember any dominance-related functions showing up very high in perf profiles, but hey, here's a potential research area for improvement

[09:14] *** sena_kun joined
[09:24] *** sena_kun left
[10:27] <timo> i've thought about a DSL to use in our different optimizers for a long long time. mainly the rakudo qast optimizer, then later when spesh arrived for the spesh optimizer as well

[10:27] <timo> nothing ever came of those thoughts so far

[10:37] *** MasterDuke left
[12:04] <Geth> ¦ MoarVM/more_telemetry: 99cec5d1dc | (Timo Paulssen)++ | src/core/exceptions.c

[12:04] <Geth> ¦ MoarVM/more_telemetry: telemetry: output something when oops or panic

[12:04] <Geth> ¦ MoarVM/more_telemetry: review: https://github.com/MoarVM/MoarVM/commit/99cec5d1dc

[12:04] <Geth> ¦ MoarVM/more_telemetry: 52badcdfea | (Timo Paulssen)++ | src/profiler/telemeh.c

[12:04] <Geth> ¦ MoarVM/more_telemetry: telemetry: ensure at least one batch is serialized

[12:04] <Geth> ¦ MoarVM/more_telemetry: review: https://github.com/MoarVM/MoarVM/commit/52badcdfea

[13:16] <Geth> ¦ MoarVM/spesh_max_inline_depth: 8dc4afa0dc | (Timo Paulssen)++ | 2 files

[13:16] <Geth> ¦ MoarVM/spesh_max_inline_depth: spesh: don't deeply recurse into inline attempts

[13:16] <Geth> ¦ MoarVM/spesh_max_inline_depth: 

[13:16] <Geth> ¦ MoarVM/spesh_max_inline_depth: fixes #1845

[13:16] <Geth> ¦ MoarVM/spesh_max_inline_depth: review: https://github.com/MoarVM/MoarVM/commit/8dc4afa0dc

[13:17] <lizmat> whee!

[13:19] <timo> probably shouldn't put this in the current release, or at least not without another blin run?

[13:45] <[Coke]> correct.

[14:06] <jdv> well.  a blin run takes ~12h and the release is in less than that:)

[17:01] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: f255a28e0a | (Timo Paulssen)++ | src/jit/compile.c

[17:01] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: WIP: RtlAddFunctionTable for jitted code on windows

[17:01] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: review: https://github.com/MoarVM/MoarVM/commit/f255a28e0a

[17:03] <Geth> ¦ MoarVM: timo++ created pull request #1852: WIP: RtlAddFunctionTable for jitted code on windows

[17:03] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1852

[17:11] <jdv> timo: can you please bump nqp and rakudo if and when you commit to main on moarvm

[17:11] <timo> you mean i should always add a bump when i put something into moarvm?

[17:11] <lizmat> I usually do that when I see there are commits in Mpar

[17:12] <lizmat> *Moar

[17:12] <jdv> looks like i missed the top commit for the last blin run

[17:12] <jdv> probably cause i was having trouble with blin:(

[17:12] <timo> the vmeventsubscribe one?

[17:13] <jdv> yes.  how confident are you with that?  we either revert and put back later or bump it in and release without blin'ing it

[17:13] <timo> if so, don't worry about it, that API currently has no users, it's totally fine to release with the commit one before it

[17:13] <lizmat> jdv: I concur

[17:14] <jdv> ok, i'll just release HEAD~1 then

[17:14] <jdv> timo: yeah, that's the convention that preceded me

[17:28] <Geth> ¦ MoarVM/2024.100: ee329994f9 | (Justin DeVuyst)++ | 2 files

[17:28] <Geth> ¦ MoarVM/2024.100: Update changelog and version

[17:28] <Geth> ¦ MoarVM/2024.100: review: https://github.com/MoarVM/MoarVM/commit/ee329994f9

[17:33] <Geth> ¦ MoarVM: jdv++ created pull request #1853: Update changelog and version

[17:33] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1853

[17:34] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: eac290d675 | (Timo Paulssen)++ | 2 files

[17:34] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: mark platform/io functions on windows MVM_PUBLIC

[17:34] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: review: https://github.com/MoarVM/MoarVM/commit/eac290d675

[17:36] <Geth> ¦ MoarVM/main: ee329994f9 | (Justin DeVuyst)++ | 2 files

[17:36] <Geth> ¦ MoarVM/main: Update changelog and version

[17:36] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/ee329994f9

[17:36] <Geth> ¦ MoarVM/main: 4e73df509f | (Justin DeVuyst)++ (committed using GitHub Web editor) | 2 files

[17:36] <Geth> ¦ MoarVM/main: Merge pull request #1853 from MoarVM/2024.100

[17:36] <Geth> ¦ MoarVM/main: 

[17:36] <Geth> ¦ MoarVM/main: Update changelog and version

[17:36] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/4e73df509f

[17:37] <jdv> done here

[17:41] <timo> *big sigh*, looks like compiling with telemeh on windows is going to fail for this release

[17:42] <timo> not sure many people did that anyway?

[17:43] <timo> is there an errata spot for that kind of thing?

[17:44] <jdv> don't think so

[17:59] <timo> i seem to recall we have a section in the release notes or announcement where we put stuff like that

[18:24] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: 2e58e355d4 | (Timo Paulssen)++ | src/jit/compile.c

[18:24] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: set correct offset values, plus debugspam

[18:24] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: review: https://github.com/MoarVM/MoarVM/commit/2e58e355d4

[18:47] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: 9febceb2b3 | (Timo Paulssen)++ | src/jit/compile.c

[18:47] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: debugspam

[18:47] <Geth> ¦ MoarVM/jit_unwind_info_for_windows: review: https://github.com/MoarVM/MoarVM/commit/9febceb2b3

[18:49] *** sena_kun joined
[20:41] *** notable6__ left
[20:41] *** bloatable6__ left
[20:41] *** coverable6 left
[20:41] *** shareable6 left
[20:41] *** sourceable6 left
[20:41] *** releasable6 left
[20:41] *** evalable6 left
[20:41] *** unicodable6__ left
[20:41] *** greppable6 left
[20:41] *** quotable6 left
[20:41] *** committable6 left
[20:41] *** nativecallable6 left
[20:41] *** tellable6 left
[20:41] *** bisectable6 left
[20:41] *** linkable6 left
[20:41] *** benchable6 left
[20:43] *** bloatable6 joined
[20:43] *** releasable6 joined
[20:44] *** benchable6 joined
[20:44] *** sourceable6 joined
[20:44] *** evalable6 joined
[20:44] *** shareable6 joined
[20:45] *** bisectable6 joined
[20:45] *** committable6 joined
[20:45] *** notable6 joined
[20:45] *** linkable6 joined
[20:45] *** quotable6 joined
[20:46] *** unicodable6 joined
[20:46] *** coverable6 joined
[20:46] *** nativecallable6 joined
[20:46] *** greppable6 joined
[20:47] *** tellable6 joined
[22:13] *** sena_kun left
