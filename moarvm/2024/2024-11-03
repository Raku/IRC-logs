[00:09] *** sena_kun left
[01:46] <timo> it's possible it didn't actually turn the thing on. there's a bunch of commented-out fprintf's, the one in moar.c should tell you if it's active or not

[09:35] *** lizmat_ joined
[09:38] *** lizmat left
[09:42] *** lizmat_ left
[09:42] *** lizmat joined
[09:47] *** sena_kun joined
[12:32] <MasterDuke> hm. is anyone else getting lots of fails in `make m-test`?

[12:36] <MasterDuke> not the fails i'm talking about, but i also get these messages:

[12:36] <MasterDuke> t/12-rakuast/xx-fixed-in-rakuast.rakutest                     (Wstat: 0 Tests: 104 Failed: 0)

[12:36] <MasterDuke>   TODO passed:   8, 40, 104

[12:37] <lizmat> yeah.. apparently some things got fixed in legacy as well

[12:40] <lizmat> apart from that one, it's clean for me **after** a fresh recompile

[12:40] <lizmat> having run with RAKUDO_RAKUAST=1 makes t/04-nativecall/24-cpp_param_letter.t fail for me

[12:41] <lizmat> with a compilation error:  Function 'NativeCall::Types::void' needs parens to avoid gobbling block (or perhaps it's a class that's not declared or available in this scope?)

[12:41] <MasterDuke> timo: it looks like i'm pretty consistently getting a fail on your branch, without setting anything at all in the environment

[12:41] <MasterDuke> t/06-telemetry/01-basic.t                                     (Wstat: 256 (exited 1) Tests: 42 Failed: 1)

[12:41] <MasterDuke>   Failed test:  42

[12:41] <MasterDuke>   Non-zero exit status: 1

[12:43] <MasterDuke> but it passes with `MVM_NO_NURSERY_RANGE=1`

[12:50] <MasterDuke> i also get intermittent:

[12:50] <MasterDuke> t/02-rakudo/15-gh_1202.t                                      (Wstat: 256 (exited 1) Tests: 2 Failed: 1)

[12:50] <MasterDuke>   Failed test:  1

[12:50] <MasterDuke>   Non-zero exit status: 1

[13:25] <timo> thanks i will look at it later today

[13:26] <timo> if you're interested in seeing if the nursery range thing actually makes a difference on a "lower level" than "time spent", look at the output of "perf stat", maybe with -d or -dd for extra details, and look at the "page faults" number. also perf stat has -r5 which would run the command 5 times and give you average and std dev which is cool

[17:21] *** MasterDuke left
[23:39] *** sena_kun left
