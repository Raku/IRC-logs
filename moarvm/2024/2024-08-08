[00:21] *** MasterDuke joined
[00:23] <MasterDuke> lizmat_: MVM_string_join creates strands from the pieces and the separator. i am looking to see if there's a fast path possible for just two pieces and a separator that fit in an in-situ string

[01:29] *** nine left
[01:30] *** nine joined
[03:29] <MasterDuke> looks like geth has dropped. https://github.com/MoarVM/MoarVM/pull/1831

[06:29] *** MasterDuke left
[07:48] *** Geth joined
[07:48] <lizmat_> the Geth has been kicked

[07:48] *** lizmat_ left
[07:49] *** lizmat joined
[10:18] <Geth> ¦ MoarVM/main: 2d0e2453a3 | MasterDuke17++ (committed using GitHub Web editor) | src/strings/ops.c

[10:18] <Geth> ¦ MoarVM/main: Add fast path for calculating hash of in_situ_strings

[10:18] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/2d0e2453a3

[15:59] *** rba_ joined
[15:59] *** leedo_ joined
[16:00] *** leedo left
[16:00] *** rba left
[16:00] *** rba_ is now known as rba

[16:53] <timo> lizmat: do you have time to try the runcy_funcy_optimizations branch?

[16:54] <lizmat> timo: sadly, no: running custom MoarVM really upsets my current workflow

[16:54] <timo> OK. i wonder if we can do something clever about that without too much trouble at some point

[16:55] <timo> .o( container-based workflows )

[16:55] <lizmat> well.. we really have a bug in precomp still, and running a custom MoarVM makes it worse

[16:56] <lizmat> e.g. I need to nuke my install dir on every NQP bump  :-(

[16:57] <timo> do we have a reproduction? is it only on macos?

[16:59] <lizmat> I have no idea...

[17:00] <lizmat> I noticed it when rak stopped working after an NQP bump

[17:00] <lizmat> wrong version messages, or just pure crashes

[17:19] *** sena_kun joined
[21:48] *** sena_kun left
