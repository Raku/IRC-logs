[00:51] *** MasterDuke joined
[00:58] <Geth> ¦ MoarVM/main: 2a0dc7f171 | (Timo Paulssen)++ | 2 files

[00:58] <Geth> ¦ MoarVM/main: latin1.c and ascii.c can return str_consts.empty for 0-length string

[00:58] <Geth> ¦ MoarVM/main: 

[00:58] <Geth> ¦ MoarVM/main: except the very first time when creating the 0-length string constant

[00:58] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/2a0dc7f171

[00:58] <Geth> ¦ MoarVM/main: f2c57c0e35 | MasterDuke17++ (committed using GitHub Web editor) | 2 files

[00:58] <Geth> ¦ MoarVM/main: Merge pull request #1827 from MoarVM/better_empty_strings

[00:58] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/f2c57c0e35

[00:58] <Geth> ¦ MoarVM/main: abab265d06 | (Timo Paulssen)++ | src/spesh/optimize.c

[00:58] <Geth> ¦ MoarVM/main: When guarding conc or type and type is known, guard just conc/type

[00:58] <Geth> ¦ MoarVM/main: 

[00:58] <Geth> ¦ MoarVM/main: The difference in moar bytecode is very small, but in JITted code

[00:58] <Geth> ¦ MoarVM/main: it's a bit bigger since the non-"just" variant also jits a spesh

[00:58] <Geth> ¦ MoarVM/main: slot access first.

[00:58] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/abab265d06

[00:58] <Geth> ¦ MoarVM/main: 2b5dcaee98 | MasterDuke17++ (committed using GitHub Web editor) | src/spesh/optimize.c

[00:58] <Geth> ¦ MoarVM/main: Merge pull request #1826 from MoarVM/turn_guard_into_just_if_possible

[00:58] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/2b5dcaee98

[02:49] *** MasterDuke left
[06:49] *** sena_kun joined
[07:24] *** sena_kun left
[16:58] <timo> what's not awesome is that when we merge coolroot into main, everybody will have to re-run Configure so that config.h is regenerated from config.h.in

[17:00] <timo> i wonder if there's a way to get a little output to people when that goes wrong so they know what's going on immediately

[17:04] <lizmat> Configure on NQP ?

[17:05] <timo> no Configure on moar

[17:06] <timo> i guess you need to do that anyway whenever we bump versions since otherwise every step in the make process will yell at you?

[17:10] <ab5tract> Yeah, I think that one kicks in automatically on version bumps

[17:11] <ab5tract> I’d have to check to be sure tho

[17:12] <ab5tract> Then again, I make clean every time..

[17:16] <timo> make clean in moar isn't enough i think? that leaves config.h and config.c undeleted, so that you can "make clean; make all" without trouble

[17:16] <timo> "make distclean" will remove them though, and force you to reconfigure

[17:17] <Geth> ¦ MoarVM/coolroot: f2dcdcae00 | (Timo Paulssen)++ | 98 files

[17:17] <Geth> ¦ MoarVM/coolroot: A re-imagining of the MVMROOT macros

[17:17] <Geth> ¦ MoarVM/coolroot: 

[17:17] <Geth> ¦ MoarVM/coolroot: where we don't have to put the code block inside the macro's argument

[17:17] <Geth> ¦ MoarVM/coolroot: list, which means the whole block is no longer considered a single

[17:17] <Geth> ¦ MoarVM/coolroot: statement by tools like gdb, profilers, and so on.

[17:17] <Geth> ¦ MoarVM/coolroot: review: https://github.com/MoarVM/MoarVM/commit/f2dcdcae00

[17:25] <ab5tract> timo: I meant realclean indeed, but I trigger that in the rakudo directory

[17:27] <timo> ok, you rely on --build-moar of Configure.pl then?

[17:32] <ab5tract> Indeed

[17:37] <timo> i'll quickly look into the possibility of making MVMROOT a var arg macro so we don't need the numbers any more either

[17:40] <timo> never mind, that's a terrible idea

[17:41] <Geth> ¦ MoarVM/coolroot: e5e9553e87 | (Timo Paulssen)++ | 98 files

[17:41] <Geth> ¦ MoarVM/coolroot: A re-imagining of the MVMROOT macros

[17:41] <Geth> ¦ MoarVM/coolroot: 

[17:41] <Geth> ¦ MoarVM/coolroot: where we don't have to put the code block inside the macro's argument

[17:41] <Geth> ¦ MoarVM/coolroot: list, which means the whole block is no longer considered a single

[17:41] <Geth> ¦ MoarVM/coolroot: statement by tools like gdb, profilers, and so on.

[17:41] <Geth> ¦ MoarVM/coolroot: review: https://github.com/MoarVM/MoarVM/commit/e5e9553e87

[17:43] <timo> i forgot a change in one file somehow

[17:58] <timo> i can't find a "re-run failed" button for azure pipelines, and i clicked "re-run" on a few checks on the github side of things and it doesn't seem to be doing anything even though it popped up a "successfully requested X to be re run" or something

[18:04] <timo> it's impressive how slow msvc is at compiling moar

[18:09] <timo> oh i think i found the button

[18:49] *** sena_kun joined
[19:13] <Geth> ¦ MoarVM/main: ac82e446f1 | (Timo Paulssen)++ (committed by timo) | 98 files

[19:13] <Geth> ¦ MoarVM/main: A re-imagining of the MVMROOT macros

[19:13] <Geth> ¦ MoarVM/main: 

[19:13] <Geth> ¦ MoarVM/main: where we don't have to put the code block inside the macro's argument

[19:13] <Geth> ¦ MoarVM/main: list, which means the whole block is no longer considered a single

[19:13] <Geth> ¦ MoarVM/main: statement by tools like gdb, profilers, and so on.

[19:13] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/ac82e446f1

[19:14] <timo> very glad to have this out of the door

[19:15] <lizmat> ok, so now time to bump Rakudo, right?

[19:17] <timo> not strictly necessary, but of course it'd help to get testing in it

[19:17] <lizmat> right, on it

[21:50] <timo> i did some research to make sure the compiler spits out the same thing for old mvmroot and new mvmroot

[22:17] *** sena_kun left
