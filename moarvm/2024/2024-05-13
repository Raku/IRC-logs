[04:11] *** MasterDuke left
[07:52] *** sena_kun joined
[15:49] <ab5tract> say I've added a new field in a struct (`MVMIOFileData`): how do I actually bubble this new information up into NQP / Rakudo?

[15:50] <lizmat> Bump MoarVM in NQP and then Bump NQP in Rakudo ?

[15:50] <ab5tract> My guess is that a new function is required in MoarVM, which is then exposed to QAST via MAST, and then a new nqp::* on top to access it?

[15:50] <ab5tract> lizmat: if it's that simple I will be very happy indeed :D

[15:51] <lizmat> I guess nqp::filemode, looking at nqp::fileislink / filereadable / filewritable implementations ?

[15:55] <ab5tract> excellent

[15:55] <ab5tract> a bit surprised that none of those take BOOTIO, but they're great starting points

[16:14] <nine> New syscall most likely

[16:15] <nine> That will be available in Rakudo directly with no NQP changes required

[16:17] <nine> See stat-is-readable and friends

[16:17] <ab5tract> ah, it looks like the issue at hand (R#1373) can be solved in a simpler manner without leaving MoarVM... but the question is, do we want a way for HLLs to access the requested open modes?

[16:17] <linkable6> R#1373 [closed]: https://github.com/rakudo/rakudo/issues/1373 [LTA] LTA error when trying to exclusive-lock a read-only IO::Handle

[16:20] <ab5tract> oops, nevermind. it requires a combination of the mode + the arguments to lock, so the mission continues. thanks nine for the suggestion

[17:23] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/05/13/2024-20-doc-announcing/

[18:11] <jnthn> nine: It's short for `class Foo { my $foo; method foo() { $foo } }` iirc

[18:13] <Geth> ¦ MoarVM: ab5tract++ created pull request #1803: Provide some mechanisms for introspecting file mode

[18:13] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1803

[21:01] <ab5tract> it's a bit surprising to me that we don't have an `MVMbool` type that could be backed by a short (or C99's bool)

[21:02] <ab5tract> feels a bit weird to stuff a single bit of information into an MVMint64, but maybe I'm holding something wrong?

[21:03] <ab5tract> (the sort-of-pun in that sentence was entirely unintentional :)

[21:10] <lizmat> could be very well that jnthn never felt the need for it

[23:40] *** sena_kun left
