[03:38] *** vrurg_ joined
[03:38] *** vrurg left
[07:30] *** sena_kun joined
[08:22] *** sena_kun left
[08:23] *** sena_kun joined
[08:30] *** Altai-man joined
[08:31] *** sena_kun left
[08:54] <lizmat> timo++ MasterDuke++

[09:15] *** Altai-man left
[09:54] <timo> who doesn't love a good trampoline?

[09:56] <lizmat> FWIW, confirmed on MacOS as well

[11:43] <timo> randomly thinking about exploitability of moarvm when someone gets some shellcode smuggled into it somehow

[11:44] <timo> it'd be swell to have all jitted frames in a special area of memory so a tool could just by looking at the $rip tell if it's looking at a jitted frame or something else

[11:44] <timo> but if the $rip for all jitted frames becomes too regular, an attacker could guess the location of the common jit prologue for example

[13:14] <timo> wow spesh dump is kinda slooow

[13:52] *** nebuchadnezzar joined
[18:14] <timo> looks like we sometimes compile an nqp edge "charlist" for single characters. there's probably a more efficient way to have that

[18:18] <lizmat> perhaps that could be handled at RakuAST opt time?

[18:22] *** sena_kun joined
[18:26] <timo> moar can handle it, i've got a prototype patch, but it could also be possible to do it before optimization time. if not, then at optimization time, yeah

[18:33] <timo> MVM_string_index_of_grapheme goes from 0.62% to 0.5%, barely noticeable (core setting compilation)

[18:33] <timo> since it started at 0.62% in the first place, barely much win to be had even if it were completely gone from the profile now

[18:38] <timo> oh it gets better when you recompile Raku/Grammar.nqp because the optimization makes it into the serialized blob

[19:26] *** nebuchadnezzar left
[19:31] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/07/22/2024-30-part-of-the-toolbox/

[20:11] *** sena_kun left
[23:03] *** vrurg joined
[23:03] *** vrurg_ left
[23:30] *** vrurg left
[23:32] *** vrurg joined
