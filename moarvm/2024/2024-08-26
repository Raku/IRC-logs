[02:29] <MasterDuke> when we're here https://github.com/MoarVM/MoarVM/blob/main/src/strings/utf8.c#L180 (MVM_string_utf8_decode), is there a way to predict the max number of graphs that could be produced?

[02:36] <MasterDuke> if there's an absolute max possible, or a very likely max possible, then perhaps i can add a path that creates in-situ strings directly instead of needing to malloc the buffer, copying it into the in-situ string, and then freeing it

[02:42] <MasterDuke> well, at least when building rakudo the bufsize never actually increases. i wonder if we hit that codepath during a spectest...?

[02:49] *** MasterDuke left
[03:00] *** MasterDuke joined
[03:01] <MasterDuke> nope, doesn't hit that codepath (this loop body https://github.com/MoarVM/MoarVM/blob/main/src/strings/utf8.c#L200-L204) during a spectest either

[03:03] <MasterDuke> should that be tested in a spectest? or  is that just a moarvm implementation detail?

[04:32] *** MasterDuke left
[07:16] *** sena_kun joined
[07:22] <ab5tract> I reckon a test is a good idea. I feel like it is expected that Raku can handle such cases, so a spec test doesn’t feel out of line

[07:23] <ab5tract> However there’s also the moarvm directory in t/, unless I’m misremembering?

[07:32] *** sena_kun left
[09:56] *** nine left
[09:56] *** nine joined
[11:13] *** [Coke] left
[11:16] *** [Coke] joined
[13:29] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/08/26/2024-35-cro-💍-htmx/

[16:41] *** sena_kun joined
[22:57] *** sena_kun left
