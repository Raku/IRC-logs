[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:07] *** jgaz joined
[00:44] *** kjp left
[00:57] *** kjp joined
[04:00] *** quotable6 left
[04:00] *** bisectable6 left
[04:00] *** bloatable6 left
[04:00] *** unicodable6 left
[04:00] *** statisfiable6 left
[04:00] *** nativecallable6 left
[04:00] *** linkable6 left
[04:00] *** sourceable6 left
[04:00] *** squashable6 left
[04:00] *** tellable6 left
[04:00] *** evalable6 left
[04:00] *** releasable6 left
[04:00] *** committable6 left
[04:00] *** notable6 left
[04:00] *** coverable6 left
[04:00] *** greppable6 left
[04:00] *** benchable6 left
[04:00] *** shareable6 left
[04:01] *** evalable6 joined
[04:01] *** releasable6 joined
[04:01] *** greppable6 joined
[04:01] *** committable6 joined
[04:01] *** statisfiable6 joined
[04:01] *** quotable6 joined
[04:01] *** linkable6 joined
[04:02] *** bisectable6 joined
[04:02] *** bloatable6 joined
[04:02] *** nativecallable6 joined
[04:02] *** shareable6 joined
[04:02] *** sourceable6 joined
[04:02] *** squashable6 joined
[04:02] *** unicodable6 joined
[04:03] *** benchable6 joined
[04:03] *** notable6 joined
[04:03] *** tellable6 joined
[04:03] *** coverable6 joined
[05:45] *** Util left
[05:45] *** Util joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:03] *** statisfiable6 left
[07:03] *** notable6 left
[07:03] *** bloatable6 left
[07:03] *** committable6 left
[07:03] *** squashable6 left
[07:03] *** quotable6 left
[07:03] *** evalable6 left
[07:03] *** benchable6 left
[07:03] *** unicodable6 left
[07:03] *** bisectable6 left
[07:03] *** greppable6 left
[07:03] *** sourceable6 left
[07:03] *** reportable6 left
[07:03] *** releasable6 left
[07:03] *** tellable6 left
[07:03] *** coverable6 left
[07:03] *** nativecallable6 left
[07:03] *** shareable6 left
[07:03] *** linkable6 left
[07:03] *** quotable6 joined
[07:03] *** tellable6 joined
[07:04] *** statisfiable6 joined
[07:04] *** committable6 joined
[07:04] *** nativecallable6 joined
[07:04] *** sourceable6 joined
[07:04] *** reportable6 joined
[07:05] *** evalable6 joined
[07:05] *** benchable6 joined
[07:05] *** releasable6 joined
[07:05] *** squashable6 joined
[07:05] *** greppable6 joined
[07:05] *** coverable6 joined
[07:05] *** shareable6 joined
[07:06] *** bisectable6 joined
[07:06] *** notable6 joined
[07:06] *** unicodable6 joined
[07:06] *** linkable6 joined
[07:06] *** bloatable6 joined
[07:57] <lizmat> ugexe: how can that be thread safe ?

[07:58] <lizmat> or does libuv guarantee that ?

[08:42] *** jnthn left
[08:42] *** jnthn joined
[10:46] *** linkable6 left
[10:46] *** evalable6 left
[10:49] *** evalable6 joined
[10:50] *** linkable6 joined
[11:11] <ugexe> Stating a file twice isn’t any more thread safe 

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:22] *** jgaz left
[12:28] <nine> I think the best way to do this would be to add a REPR for wrapping uv_stat_t and one or more syscalls to access the information contained in it.

[12:28] <nine> A working, but worse in every regard solution would be to create a BOOTHash containing the stat buffer's information and pass that to user space.

[12:39] <[Coke]> I love that description.

[13:22] *** evalable6 left
[13:22] *** linkable6 left
[13:23] *** evalable6 joined
[13:23] *** linkable6 joined
[13:40] <ugexe> nodejs does the later

[16:09] *** jgaz joined
[17:06] *** [Coke] left
[17:07] *** [Coke] joined
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:14] <leont> Is anything needed to get https://github.com/MoarVM/MoarVM/pull/1756 merged?

[18:15] <leont> And yes, exposing some sort of stat_t would be most welcome

[18:15] <leont> I've been wanting that for years

[18:15] <lizmat> leont: lemme merge it

[18:15] <lizmat> anything needed as a followup?

[18:16] <leont> There's an accompanying branch on rakudo that actually uses it

[18:16] <lizmat> is that in a PR also ?

[18:16] <Geth> ¦ MoarVM/main: 3df20182bb | (Leon Timmermans)++ (committed using GitHub Web editor) | 3 files

[18:16] <Geth> ¦ MoarVM/main: Add ops for unix domain sockets

[18:16] <Geth> ¦ MoarVM/main: 

[18:16] <Geth> ¦ MoarVM/main: Add async unx domain socket connect/listen

[18:16] <Geth> ¦ MoarVM/main: and syscalls for async unix domain sockets

[18:16] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/3df20182bb

[18:17] <leont> That's https://github.com/rakudo/rakudo/pull/5269

[18:17] <lizmat> oki

[18:34] <lizmat> rakudo PR also merged, leont 

[18:34] <leont> \o/

[18:34] <lizmat> anything in roast that needs merging ?

[18:35] <lizmat> hmmm... looking at the code: this will only work on the MoarVM backend, right?

[19:15] *** evalable6 left
[19:15] *** linkable6 left
[19:17] *** evalable6 joined
[19:17] *** linkable6 joined
[21:00] *** MasterDuke joined
[21:03] <MasterDuke> i thought timo1 had some stat PR, but i guess i was thinking of https://github.com/MoarVM/MoarVM/pull/536

[21:04] <MasterDuke> nine: why would the BOOTHash be worse in every regard?

[21:05] <MasterDuke> also, the stat constants are small and pretty contiguous, it could be an array instead of a hash

[21:06] *** jgaz left
[21:08] *** jgaz joined
