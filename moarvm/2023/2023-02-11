[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[02:26] *** squashable6 left
[02:28] *** squashable6 joined
[04:51] <MasterDuke> ugh, doing things with the CI pipelines always seems like such a slog

[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[07:04] *** squashable6 left
[07:06] *** squashable6 joined
[07:32] *** samcv left
[07:32] *** samcv joined
[08:38] *** japhb left
[09:10] *** japhb joined
[10:46] *** sena_kun joined
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[14:39] *** epony left
[16:23] <timo1> big sigh, thought i found an amazing optimization and the improved code barely runs

[16:25] <timo1> i was hoping for thousands

[16:28] <timo1> 1.8k times during core setting compilation

[16:29] <timo1> 0 times during raku empty program compilation

[16:41] <lizmat> I'll take core setting compilation improvements any day :-)

[17:01] <timo1> uptime

[17:05] <timo1> can you reliably measure improvements?

[17:05] <timo1> i found a few more calls to the optimized thing between the sofa cushions

[17:06] <timo1> now i got to 8460 times during core setting compilation

[17:14] <timo1> 13k

[17:20] <Geth> ¦ MoarVM/specialcase_genarate_dispatch_single_arg: 24a49c1f9a | (Timo Paulssen)++ | 2 files

[17:20] <Geth> ¦ MoarVM/specialcase_genarate_dispatch_single_arg: create single-argument versions of dispatch_* op generators

[17:20] <Geth> ¦ MoarVM/specialcase_genarate_dispatch_single_arg: 

[17:20] <Geth> ¦ MoarVM/specialcase_genarate_dispatch_single_arg: this lets us avoid creating an nqp::list with just one argument

[17:20] <Geth> ¦ MoarVM/specialcase_genarate_dispatch_single_arg: in some spots in both nqp and rakudo, and these simpler versions

[17:20] <Geth> ¦ MoarVM/specialcase_genarate_dispatch_single_arg: end up being called about 13k times during core setting compilation

[17:20] <Geth> ¦ MoarVM/specialcase_genarate_dispatch_single_arg: review: https://github.com/MoarVM/MoarVM/commit/24a49c1f9a

[17:21] <nine> Does that make a measurable difference?

[17:21] <timo1> i am on a machine where measuring reliably is very much not easy

[17:23] <timo1> i've pushed a branch for all three repos, if lizmat wants to, or if you want to do some actual measurements, that would be lovely

[17:23] <timo1> i'm thinking this may cut one or two gc runs off of core setting compile, too?

[17:24] <timo1> i have to go afk now, so can't do my own measurements for this reason also :(

[17:59] <nine> jnthn: I may have hit a RakuAST design issue that I can't solve on my own for the first time.

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:08] <timo1> nine: you think the difference should be negligible?

[18:08] <timo1> i guess since it's in nqp code rather than raku code the for loop is a little cheaper, and a nqp::list is cheaper than a List or Array

[18:36] <Woodi> timo1: is it good ? other have ', $op0, str $op1,':    dispatch_v1', sub ($frame, str $op0, $op1, $arg-index) {

[18:37] <Woodi> btw. in what C version is Moar written ? C99, C11 ?

[18:38] <nine> C99

[18:40] <Woodi> ah, k

[18:42] <nine> MSVC is still the limiting factor. I'm glad we could at least move away from C89

[18:46] <Woodi> MS still develops MS C compiler or just C++ ? but C99 is nice, not magical

[18:47] <Woodi> and on what cpus Moar run ? x86, amd, power somethink other ?

[18:48] <Woodi> s/amd/arm/

[18:48] <Woodi> btw. Gentoo moved to clang

[18:53] <nine> At least x86_64, i586, aarch64, armv7l, ppc64, ppc64le, s390x and riscv64. I have also run it on MIPS, but not recently

[19:52] *** sena_kun left
[19:52] *** sena_kun joined
[20:06] *** epony joined
[22:24] <japhb> That's actually better than I was expecting.

[22:52] *** japhb left
[22:58] *** japhb joined
[23:09] *** Voldenet left
[23:10] *** Voldenet joined
