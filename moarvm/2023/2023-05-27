[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[01:36] *** jdv_ joined
[01:42] *** camelia left
[01:42] *** jdv left
[01:48] *** camelia joined
[02:52] <Geth> ¦ MoarVM/main: ab61b04468 | (Timo Paulssen)++ | src/spesh/optimize.c

[02:52] <Geth> ¦ MoarVM/main: log reason when not inlining into inlined bb

[02:52] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/ab61b04468

[02:54] <timo> the inline log said things like this before: Can NOT inline set (21) with bytecode size 32746 into  (16): (null)

[02:54] <timo> this (null) is now replaced by a reason

[04:56] *** nativecallable6 left
[04:56] *** linkable6 left
[04:56] *** statisfiable6 left
[04:56] *** shareable6 left
[04:56] *** bisectable6 left
[04:56] *** benchable6 left
[04:56] *** squashable6 left
[04:56] *** evalable6 left
[04:56] *** unicodable6 left
[04:56] *** bloatable6 left
[04:56] *** quotable6 left
[04:56] *** notable6 left
[04:56] *** reportable6 left
[04:56] *** greppable6 left
[04:56] *** releasable6 left
[04:56] *** tellable6 left
[04:56] *** committable6 left
[04:56] *** sourceable6 left
[04:56] *** coverable6 left
[04:57] *** bloatable6 joined
[04:57] *** bisectable6 joined
[04:57] *** greppable6 joined
[04:57] *** squashable6 joined
[04:57] *** shareable6 joined
[04:57] *** evalable6 joined
[04:58] *** tellable6 joined
[04:58] *** quotable6 joined
[04:58] *** benchable6 joined
[04:58] *** reportable6 joined
[04:58] *** unicodable6 joined
[04:58] *** coverable6 joined
[04:58] *** releasable6 joined
[04:58] *** sourceable6 joined
[04:59] *** committable6 joined
[04:59] *** notable6 joined
[04:59] *** statisfiable6 joined
[04:59] *** nativecallable6 joined
[04:59] *** linkable6 joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[09:02] *** sena_kun joined
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:59] <timo> a fun random distraction: i saw a getattr_o being called on a p6int repr'd object and was wondering how that could be, and it was just some code that depended on the type of the argument and spesh couldn't prove the branch in question was impossible

[19:30] *** japhb left
[22:26] *** sena_kun left
[22:50] *** sena_kun joined
[22:52] *** sena_kun left
[23:30] <timo> saw a load of unbox_u ops in the spesh log that were not being turned into something simpler, in this case it was unboxing a MAST::Local which happens in the op writer functions in lib/MAST/Ops.nqp

[23:31] <timo> so now they turn into sp_p6oget_i or sp_p6oget_i32 (the 16 and 8 variants don't exist yet and i didn't feel like creating them yet)

[23:42] <timo> and i think there's a possibility yet to devirtualize atkey_* and atpos_* better when it's on a p6opaque with a positional or associative delegation slot

[23:44] <timo> we do do atkey_o on Perl6::Grammar objects (i.e. to get submatches) and atpos_o on QAST::Op (i.e. to get at the child nodes)

[23:46] <timo> in that case we devirtualize directly into the reprop of P6opaque that looks up the position of the slot and the embedded STable and then gets the function pointer from there

