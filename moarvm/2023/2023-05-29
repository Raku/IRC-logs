[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:17] *** timo left
[00:18] *** timo joined
[00:27] *** timo left
[00:28] *** timo joined
[01:20] *** MasterDuke joined
[01:45] <MasterDuke> timo: i haven't looked at your commits closely yet, think they conflict with https://github.com/MoarVM/MoarVM/pull/1746 or complement it?

[04:18] *** evalable6 left
[04:18] *** linkable6 left
[04:19] *** linkable6 joined
[04:19] *** evalable6 joined
[06:00] *** lizmat left
[06:00] *** vrurg left
[06:00] *** rypervenche left
[06:00] *** gfldex left
[06:00] *** xiaomiao left
[06:00] *** JRaspass left
[06:00] *** reportable6 left
[06:00] *** gfldex joined
[06:00] *** rypervenche joined
[06:00] *** xiaomiao joined
[06:00] *** JRaspass joined
[06:01] *** lizmat joined
[06:01] *** vrurg joined
[06:01] *** rypervenche left
[06:01] *** rypervenche joined
[06:01] *** reportable6 joined
[07:24] *** squashable6 left
[07:26] *** squashable6 joined
[09:57] *** quotable6 left
[09:57] *** reportable6 left
[09:57] *** squashable6 left
[09:57] *** bloatable6 left
[09:57] *** bisectable6 left
[09:57] *** linkable6 left
[09:57] *** greppable6 left
[09:57] *** statisfiable6 left
[09:57] *** unicodable6 left
[09:57] *** tellable6 left
[09:57] *** evalable6 left
[09:57] *** sourceable6 left
[09:57] *** releasable6 left
[09:57] *** shareable6 left
[09:57] *** benchable6 left
[09:57] *** notable6 left
[09:57] *** nativecallable6 left
[09:57] *** coverable6 left
[09:57] *** committable6 left
[09:57] *** committable6 joined
[09:57] *** squashable6 joined
[09:57] *** notable6 joined
[09:57] *** statisfiable6 joined
[09:58] *** linkable6 joined
[09:58] *** bloatable6 joined
[09:58] *** unicodable6 joined
[09:58] *** releasable6 joined
[09:58] *** nativecallable6 joined
[09:58] *** coverable6 joined
[09:59] *** evalable6 joined
[09:59] *** benchable6 joined
[09:59] *** greppable6 joined
[09:59] *** shareable6 joined
[09:59] *** tellable6 joined
[09:59] *** bisectable6 joined
[09:59] *** reportable6 joined
[09:59] *** sourceable6 joined
[10:00] *** quotable6 joined
[11:37] *** linkable6 left
[11:39] *** linkable6 joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[13:23] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/05/29/2023-22-rakuast-rolling/

[13:59] *** linkable6 left
[13:59] *** evalable6 left
[13:59] *** linkable6 joined
[14:01] *** evalable6 joined
[14:46] <timo> just a tiny bit of conflict i thin, mostly complement

[15:59] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: d42ed3e275 | (Timo Paulssen)++ | src/spesh/optimize.c

[15:59] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: Also note rewrite_callercode relies on no nested inlines

[15:59] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: review: https://github.com/MoarVM/MoarVM/commit/d42ed3e275

[15:59] <Geth> ¦ MoarVM/main: 3b4d55a081 | (Timo Paulssen)++ (committed by timo) | 3 files

[15:59] <Geth> ¦ MoarVM/main: callercode no longer prevents inlining

[15:59] <Geth> ¦ MoarVM/main: 

[15:59] <Geth> ¦ MoarVM/main: assuming that an inliner's curcode is what an inlinee's callercode

[15:59] <Geth> ¦ MoarVM/main: is supposed to return, we can just turn callercode into

[15:59] <Geth> ¦ MoarVM/main: curcode when inlining. There is already a guard that prevents

[15:59] <Geth> ¦ MoarVM/main: an inlining block from immediately inlining another so we can't for

[15:59] <Geth> ¦ MoarVM/main: example by accident skip over one level of

[15:59] <Geth> ¦ MoarVM/main: <…commit message has 48 more lines…>

[15:59] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/3b4d55a081

[15:59] <Geth> ¦ MoarVM/main: b9df871d1f | (Timo Paulssen)++ (committed by timo) | src/spesh/optimize.c

[15:59] <Geth> ¦ MoarVM/main: Also note rewrite_callercode relies on no nested inlines

[15:59] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/b9df871d1f

[16:03] <lizmat> ok, shall I bump NQP/Rakudo ?

[16:03] <lizmat> timo ^^ ?

[16:10] <timo> you can if you like, it's not urgent i think, but of course it always helps to have the code in the hands of everyone who build the bleeding edge

[16:11] <lizmat> my feelings exactly :-)

[16:13] <timo> are we able to run the regular profiler on core setting compilation at the moment? :D

[16:13] <lizmat> I don't think so

[16:14] <lizmat> generally anything running more than a few seconds, creates too much data

[16:23] <timo> i tried --profile-compile=coresettingprofile.sql and it didn't crash but there's also no file

[16:37] <timo> it could be at some point we changed whether Raku's HLL Symbol @END_PHASERS is defined or not at the position where run_profiled is used for profile-compile, and maybe the end phasers don't actually run in this case?

[16:37] <timo> i'm digging into it in any case

[16:38] *** linkable6 left
[16:38] *** evalable6 left
[16:38] *** linkable6 joined
[16:38] <lizmat> ++timo

[16:40] <timo> yeah, the dump_profile_data never runs after it got pushed into the end phasers

[16:41] *** evalable6 joined
[16:45] <timo> we could get a flag that makes mvm not track allocations, which would reduce the size of profiling data

[16:47] <lizmat> fwiw, I'm usually less interested in allocation info

[16:52] <lizmat> not seeing much difference in speed in core setting building or spectests

[16:59] <timo> sad

[17:16] <timo> i still get a crash, let's see if i can figure it out

[17:18] <timo> oh it's a stack overflow from the dump call graph node loop

[17:48] <timo> i could only get the frame size for the dump call graph node loop function from 144 or so to 112 bytes

[17:51] <timo> 74k stack frames, whew ...

[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:14] <timo> something Very broke when we added return_u but forgot to tell the profiler to instrument that with "returned from frame" instruction

[18:58] <timo> with spesh's inlining disabled, the output can actually be written

[18:59] <timo> i think i will really need to go through the code again and find that nasty situation where IIRC optimizing a throw to a goto would cause trouble

[19:04] <MasterDuke> timo: i think my PR fixes a segfault in the profiler

[19:06] <timo> maybe it does the exact thing i just menitoned

[19:08] <timo> i mean adding return_u to instrument.c

[19:26] <MasterDuke> https://github.com/MoarVM/MoarVM/pull/1746/commits/0b5e746ca71e1d331a171583e0b13d7c4f8fde2d yep, i thought that sounded familiar

[19:26] <MasterDuke> i need to address nine++'s comments and finish that one up

