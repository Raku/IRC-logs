[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[01:53] *** jgaz left
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[07:21] *** sena_kun joined
[07:40] *** sena_kun left
[08:13] *** Techcable left
[08:16] *** Techcable joined
[09:21] *** timo left
[09:48] *** lizmat left
[09:52] *** lizmat joined
[10:07] *** timo joined
[10:27] <timo> !cursor_start uses the callercode op, which is currently :noinline, can't we relatively easily transform this when inlining in spesh though?

[10:28] <lizmat> oooh... that would be a relative hot spot for regex heavy code

[10:46] *** squashable6 left
[10:48] *** squashable6 joined
[11:19] <timo> i did the trivial implementation and it doesn't explode violently

[11:19] <timo> Files=1355, Tests=117980, 83 wallclock secs (12.10 usr  2.20 sys + 1393.01 cusr 173.75 csys = 1581.06 CPU)

[11:19] <timo> damn this cpu is fine

[11:21] <lizmat> indeed  :)

[11:24] <timo> now i don't actually know in what way things would break if callercode would result in the wrong thing

[11:40] <timo> https://gist.github.com/timo/e0710330b99df029165c2c4b80b7103c can you apply this patch to your moarvm and do some general testing, and maybe measurements with core setting compilation and other grammar-related tasks? check the inlining stats and whatnot? still have lots of dayjob stuff to do

[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[14:05] *** notable6 left
[14:05] *** coverable6 left
[14:05] *** statisfiable6 left
[14:05] *** bloatable6 left
[14:05] *** sourceable6 left
[14:05] *** committable6 left
[14:05] *** quotable6 left
[14:05] *** nativecallable6 left
[14:05] *** benchable6 left
[14:05] *** unicodable6 left
[14:05] *** greppable6 left
[14:05] *** evalable6 left
[14:05] *** linkable6 left
[14:05] *** releasable6 left
[14:05] *** reportable6 left
[14:05] *** tellable6 left
[14:05] *** squashable6 left
[14:05] *** shareable6 left
[14:05] *** bisectable6 left
[14:05] *** tellable6 joined
[14:05] *** squashable6 joined
[14:06] *** releasable6 joined
[14:06] *** linkable6 joined
[14:06] *** notable6 joined
[14:06] *** quotable6 joined
[14:07] *** committable6 joined
[14:07] *** bloatable6 joined
[14:07] *** greppable6 joined
[14:07] *** statisfiable6 joined
[14:07] *** reportable6 joined
[14:07] *** unicodable6 joined
[14:07] *** nativecallable6 joined
[14:07] *** evalable6 joined
[14:07] *** benchable6 joined
[14:08] *** shareable6 joined
[14:08] *** sourceable6 joined
[14:08] *** bisectable6 joined
[14:08] *** coverable6 joined
[17:13] *** sena_kun joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[19:36] *** squashable6 left
[19:37] *** squashable6 joined
[20:36] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: e15c55036a | (Timo Paulssen)++ | 3 files

[20:36] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: callercode no longer prevents inlining

[20:36] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: 

[20:36] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: assuming that an inliner's curcode is what an inlinee's callercode

[20:36] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: is supposed to return, we can just turn callercode into

[20:36] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: curcode when inlining. There is already a guard that prevents

[20:36] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: an inlining block from immediately inlining another so we can't for

[20:36] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: example by accident skip over one level of

[20:37] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: <…commit message has 48 more lines…>

[20:37] <Geth> ¦ MoarVM/callercode_in_inline_is_just_curcode: review: https://github.com/MoarVM/MoarVM/commit/e15c55036a

[20:37] <Geth> ¦ MoarVM: timo++ created pull request #1753: callercode no longer prevents inlining

[20:37] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1753

[20:37] <timo> lizmat: have you had time to do some testing?

[21:31] *** sena_kun left
[22:11] <lizmat> timo: no

[22:12] <timo> OK! that's no problem :)

[22:12] <timo> if nothing asplodes in the spec tests, i'm sure it's fine :P :P :P :P

[22:13] <timo> but no really i would like to have someone who's had to deal with inlining issues and wrote spesh code before review this, maybe nine has a moment to poke at it

[22:15] <timo> moarvm.org's "features" page and the readme have outdated unicode versions, they say 13.1 but in january we got support for 15 afaict

[22:17] <Geth> ¦ MoarVM/main: 80559738e1 | (Timo Paulssen)++ | README.markdown

[22:17] <Geth> ¦ MoarVM/main: mention we have unicode 15

[22:17] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/80559738e1

[22:31] <lizmat> sleep&

[23:09] *** linkable6 left
[23:09] *** evalable6 left
[23:12] *** evalable6 joined
[23:12] *** linkable6 joined
