[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:23] *** epony left
[00:49] *** epony joined
[01:22] *** rypervenche joined
[01:53] *** MasterDuke joined
[01:57] <MasterDuke> that was sad news about Kaiepi. i don't know that we ever chatted much directly, but i respected all his work and was particularly excited to see jvm performance optimizations happening

[02:10] <MasterDuke> on to happier things i saw in the logs. timo1, were your recent investigations inspired by that python stuff i linked? i had some patch stashed a while ago which ran the code in the runner multiple times, i think maybe it just called `MVM_vm_create_instance()` 1000 times or something like that. not 100% identical to starting just once since code

[02:10] <MasterDuke> will get hot, but made profiling easier

[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[09:30] *** sena_kun joined
[11:56] <timo1> i think create_instance doesn't do too much work though

[11:57] <timo1> you would probably have run everything in the runner multiple times, and perhaps put in the instance destroy function as well, but since we normally don't do that, that would add some more execution time

[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[15:36] <Woodi> 17x - 8x page faults then 90's-style scripting languages ? why so much memory usage ? a) just becouse everything is opaqued [few times] ut can be opimized out; or b) what is done is Very Important, enables Next Level things and should not be removed ?

[15:52] <nine> "Everything is a first class object" does have its cost

[16:34] *** camelia left
[16:34] *** nine left
[16:35] *** nine joined
[16:38] *** nine left
[16:40] *** camelia joined
[16:40] *** nine joined
[17:57] <Voldenet> the runtime is more flexible - the same stdlib can run on jvm/js/moarvm, this uses the architecture that makes it harder to optimize things to the limit

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:02] <Voldenet> a lot of scripting languages simply write tons of things in C, which makes some crazy optimizations possible

[18:09] *** nine left
[18:10] *** nine joined
[19:06] <lizmat> Voldenet: yes, and then they get hooked on XS and can never move forward

[19:10] *** epony left
[19:11] *** epony joined
[19:28] <nine> Voldenet: actually, the recent trend is to put back more logic in high level code (i.e. the stdlib being able to run on multiple backends) because that makes it _better_ optimizable

[22:07] *** sena_kun left
