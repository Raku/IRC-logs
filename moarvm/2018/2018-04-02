[00:42] <MasterDuke> timotimo: you around?

[00:42] <Geth_> ¦ MoarVM: ed4201e92a | (Timo Paulssen)++ | src/debug/debugserver.c

[00:42] <Geth_> ¦ MoarVM: debugserver: cut module names out of filenames

[00:42] <Geth_> ¦ MoarVM:

[00:42] <Geth_> ¦ MoarVM: otherwise you'd have to supply not just the filename

[00:42] <Geth_> ¦ MoarVM: where your breakpoint shall reside, but also the

[00:42] <Geth_> ¦ MoarVM: module name in parenthesis afterwards, but not always,

[00:42] <Geth_> ¦ MoarVM: only if the file was included from a CompUnitRepo or

[00:42] <Geth_> ¦ MoarVM: something like that.

[00:42] <Geth_> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ed4201e92a

[00:44] <timotimo> MasterDuke: is that an answer? :)

[00:44] <MasterDuke> i think it'll suffice

[00:45] <MasterDuke> i'm trying to write a template for floor_n

[00:45] <MasterDuke> the case in interp.c just calls floor()

[00:47] <MasterDuke> but doing `(template: floor_n   (call (^func &floor)     (arglist       (carg $1 ptr)) num_sz))` errors with `src/jit/core_templates.h:722:50: error: ‘floor’ undeclared here (not in a function); did you mean ‘flock’?`

[00:47] <timotimo> yup, i stumbled over that before

[00:49] <timotimo> i think maybe you have to trick the compiler into making that function a reality

[00:49] <timotimo> try putting it into the op_to_func program in graph.c and see if that changes things

[00:49] <timotimo> though maybe that's too far away for this

[00:53] <MasterDuke> you mean use the lego jit, not create a template?

[00:55] <timotimo> yes

[00:55] <timotimo> somewhere it'd be available

[00:55] <timotimo> just a random spot

[00:59] *** Ven`` joined
[01:13] <MasterDuke> hm. a profile says it's jitted now, but it's not any faster

[01:14] <timotimo> yeah, that can be

[01:14] <timotimo> ideally we'd compile floor_n to actual assembly that floors a double

[01:15] <timotimo> roundsd xmm0, xmm0, 9

[01:15] <timotimo> cvttsd2si       eax, xmm0

[01:15] <timotimo> ret

[01:15] <timotimo> https://gcc.godbolt.org/#compilers:!((compiler:clang380,options:'-xc+-std%3Dgnu11+-O3+-Wall+-Wextra+-fverbose-asm+-march%3Dhaswell+-mno-avx+-ffast-math',source:'%23include+%3Cmath.h%3E%0A%0Aint+floor_double(double+x)+%7B+return+(int)+floor(x)%3B+%7D%0A%0Aint+truncate_double(double+x)+%7B+return+(int)+(x)%3B+%7D')),filterAsm:(commentOnly:!t,directives:!t,intel:!t,labels:!t),version:3 - use this fantastic tool

[01:15] <timotimo> oh lord that url

[01:16] <timotimo> https://godbolt.org/g/awTmPH

[01:16] <MasterDuke> that would be done in emit.dasc ?

[01:16] <timotimo> yeah, i think so

[01:17] <timotimo> wait what the heck

[01:17] <timotimo> the floor_double(double) function just became much much longer

[01:18] <timotimo> you may have to switch on the "intel" view to have the registers in the right order

[01:19] <timotimo> https://godbolt.org/g/2axcS2

[01:19] <timotimo> this is the one that uses only two ops

[01:21] <timotimo> oh, possibly -ffast-math is responsible for the short one

[01:24] <MasterDuke> i haven't written assembly in 15 years, and then it was mips

[01:25] <MasterDuke> it's probably best if i leave this to someone else

[01:25] <timotimo> hah

[01:25] <timotimo> *nice* the compiler explorer lets you right-click on an asm instruction and view asm help

[01:27] <MasterDuke> that is a pretty awesome tool

[01:28] <timotimo> gotta go to bed, seeya!

[01:28] <MasterDuke> later...

[01:56] *** ilbot3 joined
[02:31] *** Kaiepi joined
[03:06] *** robertle joined
[04:15] *** Kaiepi joined
[04:17] *** Kaiepi joined
[06:01] *** robertle_ joined
[06:56] *** robertle_ joined
[07:12] *** domidumont joined
[07:15] *** AlexDaniel joined
[07:18] *** domidumont joined
[07:39] *** FROGGS joined
[08:00] *** zakharyas joined
[08:22] *** Geth joined
[11:07] *** zakharyas joined
[12:12] *** Geth joined
[12:12] *** synopsebot joined
[12:48] <timotimo> .ask brrt so how do i go about finding the right line number when printing a backtrace when there's jit involved?

[12:48] <yoleaux> timotimo: I'll pass your message to brrt.

[12:53] <MasterDuke> timotimo: think i should create MoarVM issues for floor/pow/ceil/etc? about jitting them or handcrafting some assembly

[12:53] <timotimo> yeah, maybe :)

[13:39] *** zakharyas joined
[13:47] <Geth> ¦ MoarVM/dont_gc_in_spesh: 4ec52aed01 | (Timo Paulssen)++ | src/spesh/worker.c

[13:47] <Geth> ¦ MoarVM/dont_gc_in_spesh: init a field we access right away

[13:47] <Geth> ¦ MoarVM/dont_gc_in_spesh: review: https://github.com/MoarVM/MoarVM/commit/4ec52aed01

[14:00] *** FROGGS joined
[14:24] <Geth> ¦ MoarVM: b5609f8372 | (Timo Paulssen)++ | 8 files

[14:24] <Geth> ¦ MoarVM: spesh worker: when wval fix fails, retry a few times

[14:24] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b5609f8372

[14:24] <Geth> ¦ MoarVM: 4ec52aed01 | (Timo Paulssen)++ | src/spesh/worker.c

[14:24] <Geth> ¦ MoarVM: init a field we access right away

[14:24] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/4ec52aed01

[14:24] <Geth> ¦ MoarVM: a925baeea5 | (Timo Paulssen)++ | 8 files

[14:24] <Geth> ¦ MoarVM: Merge branch 'dont_gc_in_spesh'

[14:24] <Geth> ¦ MoarVM:

[14:24] <Geth> ¦ MoarVM: Running GC inside the spesh worker is forbidden, but when

[14:24] <Geth> ¦ MoarVM: fixing up wval instructions during inlining, we sometimes

[14:24] <Geth> ¦ MoarVM: caused objects to be deserialized for the first time.

[14:24] <Geth> ¦ MoarVM:

[14:24] <Geth> ¦ MoarVM: Now we check if an object we're refering to has not yet

[14:24] <Geth> ¦ MoarVM: <…commit message has 5 more lines…>

[14:24] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a925baeea5

[14:25] *** releasable6 joined
[14:57] *** zakharyas joined
[15:05] *** zakharyas joined
[16:10] *** zakharyas joined
[16:10] *** AlexDaniel joined
[16:40] *** Kaiepi joined
[17:02] *** geospeck joined
[17:02] *** geospeck left
[17:17] *** TimToady joined
[17:25] *** Kaiepi joined
[17:41] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/04/02/2018-14-a-perl-6-idea/

[18:19] *** Kaiepi joined
[18:26] *** Kaiepi joined
[18:43] *** domidumont joined
[19:47] *** FROGGS joined
[20:48] *** lizmat joined
[21:54] <lizmat> someone here with access to modules.perl6.org ??   it seems to be giving 500's   :-(

[22:12] <lizmat> JITting MoarVM is going to get interesting on MacOS in 2020: https://www.bloomberg.com/news/articles/2018-04-02/apple-is-said-to-plan-move-from-intel-to-own-mac-chips-from-2020

[22:19] <timotimo> oh, fascinating

[22:27] <jnthn> Interesting indeed

[22:28] <jnthn> 'night

[22:29] <lizmat> night&

[23:03] *** AlexDaniel joined
[23:17] *** Kaiepi joined
[23:28] *** MasterDuke joined
[23:41] *** Kaiepi joined
