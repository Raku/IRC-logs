[01:22] *** Zoffix joined
[01:57] *** ilbot3 joined
[02:31] <Geth> ¦ MoarVM: 7942fdd1f1 | (Samantha McVey)++ | docs/ChangeLog

[02:31] <Geth> ¦ MoarVM: Update ChangeLog for release

[02:31] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7942fdd1f1

[02:33] <Geth> ¦ MoarVM: f00e975736 | (Samantha McVey)++ | docs/ChangeLog

[02:33] <Geth> ¦ MoarVM: Remove accidently included line in ChangeLog

[02:33] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f00e975736

[02:33] <samcv> jnthn: if you are around want to check out the tentative changelog?

[02:47] *** travis-ci joined
[02:47] <travis-ci> MoarVM build failed. Samantha McVey 'Update ChangeLog for release'

[02:47] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/370868976 https://github.com/MoarVM/MoarVM/compare/0ad859add862...7942fdd1f10f

[02:47] *** travis-ci left
[02:53] *** travis-ci joined
[02:53] <travis-ci> MoarVM build failed. Samantha McVey 'Update ChangeLog for release'

[02:53] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/370868976 https://github.com/MoarVM/MoarVM/compare/0ad859add862...7942fdd1f10f

[02:53] *** travis-ci left
[02:55] <samcv> not sure why that test is failing on travis...

[02:55] <samcv> it's this one: lstat_time doesn't follow symlink

[03:00] *** travis-ci joined
[03:00] <travis-ci> MoarVM build failed. Samantha McVey 'Remove accidently included line in ChangeLog'

[03:00] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/370869338 https://github.com/MoarVM/MoarVM/compare/7942fdd1f10f...f00e9757362a

[03:00] *** travis-ci left
[03:00] <Zoffix> samcv: FWIW, it used to be fudged until very recently: https://github.com/perl6/nqp/commit/6c982a88f1e056cb44721525d4fb10e176854c06

[03:00] <Zoffix> Perhaps, it need to be re-fudged

[03:00] <samcv> hm

[05:40] <Geth> ¦ MoarVM: 1e967475f4 | (Samantha McVey)++ | tools/release.sh

[05:40] <Geth> ¦ MoarVM: Make sure libatomic_ops submodule gets included in release

[05:40] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/1e967475f4

[05:40] <Geth> ¦ MoarVM: 8a90168c72 | (Samantha McVey)++ | VERSION

[05:40] <Geth> ¦ MoarVM: Release 2018.04

[05:40] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8a90168c72

[05:45] <Geth> ¦ MoarVM: 577857ae02 | (Samantha McVey)++ | docs/release_guide.md

[05:45] <Geth> ¦ MoarVM: Add instructions to the release guide about gpg signing

[05:45] <Geth> ¦ MoarVM:

[05:45] <Geth> ¦ MoarVM: Give instructions about how to gpg sign the releases.

[05:45] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/577857ae02

[05:54] *** domidumont joined
[05:54] <AlexDaniel`> samcv++

[06:00] *** domidumont joined
[06:31] *** robertle joined
[07:36] *** domidumont1 joined
[07:47] <nwc10> good *, #moarvm

[07:48] <samcv> good * nwc10

[08:22] *** zakharyas joined
[08:31] *** zakharyas joined
[08:38] *** brrt joined
[08:42] *** zakharyas joined
[09:35] <jnthn> samcv++

[09:35] <jnthn> samcv: Was already sleeping when you asked, sorry :)

[09:46] *** zakharyas joined
[10:59] *** zakharyas joined
[11:03] <Zoffix> samcv++

[11:17] *** brrt joined
[11:54] *** Zoffix left
[12:03] *** zakharyas joined
[12:06] *** zakharyas joined
[12:14] *** domidumont joined
[12:26] *** ingy joined
[12:26] *** avar joined
[12:38] *** ZofBot joined
[12:44] *** releasable6 joined
[12:58] *** committable6 joined
[13:04] *** zakharyas joined
[13:18] <brrt> good *

[13:23] *** quotable6 joined
[13:23] *** benchable6 joined
[13:23] *** evalable6 joined
[13:23] *** coverable6 joined
[13:23] *** greppable6 joined
[13:23] *** bloatable6 joined
[13:26] <brrt> .ask jnthn if you maybe have any experience with ml64 or soemsuch assemlber for microsoft

[13:26] <yoleaux> brrt: I'll pass your message to jnthn.

[14:34] *** Kaiepi joined
[14:42] *** ggoebel joined
[14:46] *** zakharyas joined
[15:04] *** avar joined
[15:04] *** ingy joined
[15:04] *** moritz joined
[15:04] *** leedo joined
[15:04] *** [Coke] joined
[15:04] *** japhb joined
[15:04] *** jsimonet joined
[15:04] *** mst joined
[15:04] *** krunen joined
[15:04] *** SmokeMachine joined
[15:04] *** jnthn joined
[15:04] *** hoelzro joined
[15:04] *** nebuchadnezzar joined
[15:04] *** mtj_ joined
[15:04] *** sivoais joined
[15:04] *** samcv joined
[15:04] *** BinGOs joined
[15:04] *** TimToady joined
[15:04] *** jpf joined
[15:04] *** camelia joined
[15:04] *** geekosaur joined
[15:04] *** dalek joined
[15:04] *** Geth joined
[15:04] *** synopsebot joined
[15:04] *** SourceBaby joined
[15:04] *** Util joined
[15:04] *** p6lert joined
[15:04] *** yoleaux joined
[15:04] *** ilmari joined
[15:04] *** Voldenet joined
[15:04] *** dogbert2_ joined
[15:04] *** gtodd joined
[15:04] *** tbrowder_ joined
[15:04] *** ilmari[m] joined
[15:04] *** AlexDaniel` joined
[15:04] *** wictory[m] joined
[15:04] *** nativecallable6 joined
[15:04] *** notable6 joined
[15:04] *** unicodable6 joined
[15:04] *** reportable6 joined
[15:04] *** shareable6 joined
[15:04] *** bisectable6 joined
[15:04] *** huggable joined
[15:04] *** buggable joined
[15:04] *** nwc10 joined
[15:04] *** timotimo joined
[15:04] *** AlexDaniel joined
[15:04] *** lizmat joined
[15:04] *** dogbert17 joined
[15:04] *** MasterDuke joined
[15:04] *** brrt joined
[15:04] *** ZofBot joined
[15:04] *** committable6 joined
[15:04] *** quotable6 joined
[15:04] *** benchable6 joined
[15:04] *** evalable6 joined
[15:04] *** coverable6 joined
[15:04] *** greppable6 joined
[15:04] *** bloatable6 joined
[15:04] *** Kaiepi joined
[15:04] *** zakharyas joined
[15:04] *** ggoebel joined
[15:04] *** harrow joined
[15:04] *** scovit joined
[15:04] *** bartolin joined
[15:04] *** btyler joined
[15:04] *** nine joined
[15:04] *** ChanServ joined
[15:05] *** squashable6 joined
[15:19] *** FROGGS joined
[15:27] <Geth> ¦ MoarVM/master: 5 commits pushed by (Jonathan Worthington)++

[15:27] <Geth> ¦ MoarVM/master: 510b578754 | For NFAs with many codepoints, use binary search

[15:27] <Geth> ¦ MoarVM/master: b8cd9cab69 | Specialize isnull

[15:27] <Geth> ¦ MoarVM/master: e56901549a | Set type facts on a resolved method

[15:27] <Geth> ¦ MoarVM/master: b6030cee68 | Merge branch 'nfa-codepoint-fanout-opt'

[15:27] <Geth> ¦ MoarVM/master: 6f40cbd5d1 | Merge branch 'more-op-opts'

[15:27] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/577857ae0214...6f40cbd5d1d0

[15:42] <Geth> ¦ MoarVM: 641c7a1d13 | (Timo Paulssen)++ | 2 files

[15:42] <Geth> ¦ MoarVM: debugserver: add a "handle equivalence class" command

[15:42] <Geth> ¦ MoarVM:

[15:42] <Geth> ¦ MoarVM: lets you find out if handles actually refer to the

[15:42] <Geth> ¦ MoarVM: same object.

[15:42] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/641c7a1d13

[15:42] <Geth> ¦ MoarVM: cfe1378fcd | (Timo Paulssen)++ | src/debug/debugserver.c

[15:42] <Geth> ¦ MoarVM: bump minor protocol version for new messagetype

[15:42] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/cfe1378fcd

[15:48] <jnthn> Some design notes on making spesh "teachable" to help us better deal with various optimization challenges: https://gist.github.com/jnthn/e51a06c6882fbc6219e0fa0a3dd373e6

[15:49] <jnthn> Thoughts welcome. I won't publish this anywhere, so don't bother reporting typos.

[15:51] <jnthn> It's also possible that all of our method caching might go away in favor of this

[15:52] <jnthn> (Eventually)

[16:00] <timotimo> should we remove the "Better optimization around closures

[16:00] <timotimo> " part from the roadmap on moarvm.org?

[16:00] <timotimo> "Today's optimizer does a poor job of, and has an inability to inline, first class functions and closures. Recent work has started to collect the data needed to do better; optimizations to exploit it are still to come."

[16:01] <jnthn> ooh, yes

[16:01] <jnthn> we do that now :)

[16:01] <timotimo> or maybe there's still more to be added in the future and we should just reword that?

[16:01] *** releasable6 joined
[16:01] *** evalable6 joined
[16:01] <timotimo> whoops, the release page has a part of the document displayed wrong

[16:01] <timotimo> the debug server section accidentally has all bullet points in one line

[16:04] <timotimo> m: my $foo = try await Promise.broken("Oh no!"); say $foo

[16:04] <camelia> rakudo-moar c40fc5d71: OUTPUT: «(Any)␤»

[16:04] <timotimo> is this right?

[16:04] <timotimo> m: my $foo; try $foo = await Promise.broken("Oh no!"); say $foo

[16:04] <camelia> rakudo-moar c40fc5d71: OUTPUT: «(Any)␤»

[16:04] <timotimo> m: my $foo; try $foo = await Promise.broken("Oh no!"); CATCH { .say }; say $foo

[16:04] <camelia> rakudo-moar c40fc5d71: OUTPUT: «(Any)␤»

[16:04] <jnthn> Yes

[16:04] <timotimo> m: my $foo; $foo = await Promise.broken("Oh no!"); CATCH { .say }; say $foo

[16:04] <camelia> rakudo-moar c40fc5d71: OUTPUT: «An operation first awaited:␤  in block <unit> at <tmp> line 1␤␤Died with the exception:␤    Oh no!␤      in block <unit> at <tmp> line 1␤␤An operation first awaited:␤  in block <unit> at <tmp> line 1␤␤Died with the exception:␤   …»

[16:04] <jnthn> m: my $foo; try $foo = await Promise.broken("Oh no!"); say $!

[16:04] <camelia> rakudo-moar c40fc5d71: OUTPUT: «An operation first awaited:␤  in block <unit> at <tmp> line 1␤␤Died with the exception:␤    Oh no!␤      in block <unit> at <tmp> line 1␤␤»

[16:05] <timotimo> mhm

[16:05] *** ilmari_ joined
[16:08] *** statisfiable6 joined
[16:10] *** ilmari joined
[16:10] *** brrt joined
[16:18] *** ilmari[m] joined
[16:28] <lizmat> https://vorpus.org/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/  # wonder how this applies to Perl 6

[16:35] <jnthn> Looks at least somewhat related to `react`

[16:36] <jnthn> Though I'd argue that the list form of await is more convenient for "set two tasks off at once and wait for both" :)

[16:37] <jnthn> But in terms of the automated tracking of completion and automatic propagation of errors, that's very much what a react block is about

[16:50] *** domidumont joined
[16:56] *** wictory[m] joined
[16:56] *** AlexDaniel` joined
[16:57] <Geth> ¦ MoarVM/pluggable-spesh: 615d5f913a | (Jonathan Worthington)++ | 10 files

[16:57] <Geth> ¦ MoarVM/pluggable-spesh: Stub the spesh plugin ops

[16:57] <Geth> ¦ MoarVM/pluggable-spesh: review: https://github.com/MoarVM/MoarVM/commit/615d5f913a

[17:01] *** robertle joined
[17:34] <brrt> i was also looking at that just now and owndering what was actually ned

[17:34] <brrt> new

[17:36] *** chansen_ joined
[17:48] *** coverable6 joined
[18:11] <Geth> ¦ MoarVM: b87b03e234 | (Timo Paulssen)++ | src/debug/debugserver.c

[18:11] <Geth> ¦ MoarVM: throw out superfluous debugspam

[18:11] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b87b03e234

[18:47] *** brrt joined
[18:53] <jnthn> brrt: Talking of new, did you see the design notes I linked earlier on the spesh plugin mechanism? :)

[18:53] <yoleaux> 18:33Z <Zoffix> jnthn: we need an "executive" decision: **nqp**'s numerics are parsed with `MVM_coerce_s_n`. It has precision issues, such as parsing 3.145e-20 into 3.14149999999999969e-20 instead of the closest representable num 3.14150000000000029e-20 and it also can't handle denormals (5e-324 parses as 0). This makes 2 sprintf nqp tests fail on 32bit boxes and it's currently proposed to fix that and make a point

[18:53] <yoleaux> 18:33Z <Zoffix> jnthn: rest of that message: https://irclog.perlgeek.de/perl6-dev/2018-04-25#i_16094868 (it's fairly long)

[19:00] <brrt> i was looking at them just now

[19:00] <timotimo> i haven't looked deeply into invokedynamic, but i feel reminded of it

[19:01] <brrt> i am incidentally looking at the java vm specification recently

[19:02] <jnthn> timotimo: Yes, they're in the same problem space

[19:02] <timotimo> these handlers are almost traced, aren't they?

[19:03] <jnthn> Not quite but kinda-ish :)

[19:04] <timotimo> right, any ops that aren't on that list won't be "recorded"

[19:04] <jnthn> Well, mostly all that one is doing there is setting up the guards that should apply in order for the eventual result to be valid

[19:05] <timotimo> right, and what those guards apply to is very restricted

[19:05] <timotimo> which keeps us from having to trace ops

[19:05] <jnthn> *nod*

[19:06] <timotimo> i like it in general :)

[19:06] <jnthn> It'll give us some traction on various thorny problems, not least assignment

[19:07] <timotimo> in the first example, i don't see how the resolve is referencing "privmeth" from the speshreg op

[19:07] <timotimo> ah, the example's use of speshresolve differs from the declaration of speshresolve

[19:08] <timotimo> nqp::speshresolve(str $name --> obj)

[19:08] <timotimo> vs

[19:08] <timotimo> nqp::speshresolve(nqp::decont(self), 'foo')(self, $bar)

[19:08] <jnthn> oops, yes :)

[19:08] <timotimo> .o( and the missing ` at the end of a few of those lines making code non-highlighted

[19:08] <jnthn> I didn't quite figure out the exact interface yet

[19:08] <jnthn> (At an NQP level, I mean)

[19:09] <jnthn> But could just put the name as the first arg

[19:09] <jnthn> And compile the rest as call args

[19:09] <timotimo> that sounds like it'd work, yeah

[19:13] *** squashable6 joined
[19:26] <brrt> hmmm.

[19:29] *** releasable6 joined
[19:35] <brrt> any idea if we still look up the current inline position in the frame, or if we've removed that?

[19:39] <timotimo> "inline position in the frame"? in what situation?

[19:45] *** huggable joined
[19:45] *** ZofBot joined
[19:46] *** buggable joined
[19:49] <brrt> which inlined frame(s) the current position of the JIT is in

[19:49] <brrt> anyway, i found it, and we do

[19:49] <brrt> is there a maximum number of inlines?

[19:50] <jnthn> As in maximum depth?

[19:50] <jnthn> No

[19:52] <brrt> hmm. i kind of want to avoid malloc()-ing a buffer for getting that

[19:52] <brrt> i can of course avoid doing so...

[19:53] <brrt> the thing is, MVM_frame_find_contextual_by_name has to inspect the inline structure, and I want to start hiding that from core

[19:54] <brrt> my initial idea was, let's allocate a buffer and get the full list of inlines that we are 'in'

[19:54] <brrt> but i don't want to do that in a potentially hot path like find_contextual_by_name

[19:54] <timotimo> time for alloca?

[19:54] <brrt> there are other options :-)

[19:54] <brrt> i'm not sure we do alloca cross-platformy these days?

[19:57] <brrt> actually, we do use alloca

[19:57] <brrt> samcv has been using it, it seems

[19:57] <brrt> ok,

[19:57] <brrt> that might make it more reasonable

[20:01] <brrt> see, the other alternative is, just pass a start offset to search from, and iterate starting from there

[20:02] <brrt> int i; for (i = MVM_jit_code_get_active_inline(tc, code, frame, 0); i < code->num_inlines; i = MVM_Jit_code_get_active_inlines(tc, code, frame, i))

[20:06] <brrt> yeah, i think i'll do that

[20:08] <brrt> jnthn: i'll look further into it, but it looks basically good to me

[21:11] <Geth> ¦ MoarVM/master: 5 commits pushed by (Samantha McVey)++

[21:11] <Geth> ¦ MoarVM/master: b2eb9e1e71 | Randomly seed a hash secret to mitigate ease of DOS attack

[21:11] <Geth> ¦ MoarVM/master: b027eb2bda | On Linux and BSD's, fall back to /dev/urandom if call fails

[21:11] <Geth> ¦ MoarVM/master: 9da2a007ba | Fix some of the Windows MVM_getrandom code and clean it up

[21:11] <Geth> ¦ MoarVM/master: 7d83f32bf5 | Make a few of the MVM_getrandom comments more clear

[21:11] <Geth> ¦ MoarVM/master: 81f988e291 | Merge pull request #841 from samcv/crypt3

[21:11] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/b87b03e234da...81f988e2916a

[21:19] <timotimo> cool

[21:19] <lizmat> timotimo: still no time to bump ?

[21:20] <jnthn> samcv++

[21:20] <Geth> ¦ MoarVM: ffdd62d487 | (Timo Paulssen)++ | src/debug/debugserver.c

[21:20] <Geth> ¦ MoarVM: debugserver: allow unrecognized fields in messages

[21:20] <Geth> ¦ MoarVM:

[21:20] <Geth> ¦ MoarVM: the versioning part of the protocol design says that moar

[21:20] <Geth> ¦ MoarVM: shall accept any and all fields in the message map, even

[21:20] <Geth> ¦ MoarVM: ones that it doesn't know. So we skip anything we see

[21:20] <Geth> ¦ MoarVM: for keys that we don't know about.

[21:20] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ffdd62d487

[21:20] <Geth> ¦ MoarVM: 24a91a460b | (Timo Paulssen)++ | src/debug/debugserver.c

[21:20] <Geth> ¦ MoarVM: use official API for thread lock count

[21:21] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/24a91a460b

[21:21] <jnthn> lizmat: Think samcv just said she'd do so

[21:22] *** benchable6 joined
[21:22] <lizmat> jnthn: ok

[22:10] <Geth> ¦ MoarVM: 5728e1f399 | (Samantha McVey)++ | 4 files

[22:10] <Geth> ¦ MoarVM: Fix CJK Unified Ideograph and other derived Unicode names

[22:10] <Geth> ¦ MoarVM:

[22:10] <Geth> ¦ MoarVM: Conform to Unicode spec Name Derivation Rule Prefix Strings, and ditch

[22:10] <Geth> ¦ MoarVM: the angle brackets. <CJK Ideograph-XXXX> becomes

[22:10] <Geth> ¦ MoarVM: "CJK Unified Ideograph-XXXX". Also effects the other non-named

[22:10] <Geth> ¦ MoarVM: ideographs like Tangut.

[22:10] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/5728e1f399

[22:21] *** Geth joined
[22:22] *** Geth joined
[23:17] <samcv> jnthn: i'm getting ASAN errors in t/nqp/106-unicodenames.t

[23:17] <samcv> caused by NFA

[23:22] <jnthn> New ones?

[23:22] <jnthn> If they're recent, they're perhaps caused by the recent change I did there

[23:22] <jnthn> Please file an issue if so, and I'll take a look tomorrow

[23:22] <samcv> ok

[23:22] <jnthn> Well, file an issue anyway, though it's nice if we know if it's the recent change :)

[23:24] <jnthn> Time for me to rest; 'night o/

[23:25] <Geth> ¦ MoarVM: samcv assigned to jnthn Issue ASAN errors due to NFA changes https://github.com/MoarVM/MoarVM/issues/846

[23:55] <Geth> ¦ MoarVM: e7d79d8691 | (Samantha McVey)++ | 3 files

[23:55] <Geth> ¦ MoarVM: Fix issues with previous commit overzealously removing brackets

[23:55] <Geth> ¦ MoarVM:

[23:55] <Geth> ¦ MoarVM: The previous Unicode commit would remove brackets from almost all

[23:55] <Geth> ¦ MoarVM: codepoint names. Instead make sure we only remove the ones we want.

[23:55] <Geth> ¦ MoarVM: Also in the Unicode database use uppercase for the CJK and Tangut

[23:55] <Geth> ¦ MoarVM: names.

[23:55] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e7d79d8691
