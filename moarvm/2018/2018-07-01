[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 2 ballots submitted by 2 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 10! Congratulations to samcv, nine! You win a roll of duck tape!

[00:06] *** stmuk joined
[00:08] *** stmuk_ left
[03:33] *** p6lert left
[03:33] *** dalek joined
[03:33] *** Geth joined
[03:33] *** p6lert joined
[03:33] *** synopsebot joined
[03:33] *** SourceBaby left
[03:34] *** SourceBaby joined
[05:22] *** Kaiepi left
[05:23] *** Kaiepi joined
[09:36] *** robertle joined
[09:59] *** lizmat left
[10:29] *** Ven`` joined
[10:33] *** Ven`` left
[10:44] *** lizmat joined
[13:48] *** brrt joined
[13:48] <brrt> .tell lizmat gc documentation here: https://github.com/MoarVM/MoarVM/blob/master/docs/gc.markdown

[13:48] <yoleaux> brrt: I'll pass your message to lizmat.

[13:49] <lizmat> brrt: thanks!

[13:49] <yoleaux> 13:48Z <brrt> lizmat: gc documentation here: https://github.com/MoarVM/MoarVM/blob/master/docs/gc.markdown

[14:16] <brrt> :-)

[14:27] *** lizmat left
[14:50] *** zakharyas joined
[15:15] *** lizmat joined
[15:44] <lizmat> brrt: opinions about https://github.com/MoarVM/MoarVM/pull/882 ?

[15:50] <brrt> i was actually looking through that

[15:50] <brrt> i wanted to give that a proper review, but it looks alright

[15:51] <lizmat> .ask jnthn is https://github.com/MoarVM/MoarVM/blob/master/docs/gc.markdown still up to date, or could it use an update / refinement ?

[15:51] <yoleaux> lizmat: I'll pass your message to jnthn.

[15:51] <lizmat> brrt: so you're ok with merging ?

[15:54] <brrt> ehm. well, if it passes the test suite, then my hand-review is not likely to contribute much

[15:54] <brrt> but if it's all the same to you please give me 15 more minutes :-)

[15:54] <lizmat> yeah, I can wait 15 minutes

[15:54] <lizmat> :-)

[16:00] *** zakharyas left
[16:01] *** zakharyas joined
[16:06] <brrt> so I learned is that we actually know a lot about the templates that we're not currently exploiting

[16:06] * lizmat is intrigued

[16:07] <brrt> ok, for instance, we're computing the operand types and sizes at runtime

[16:07] <brrt> we don't actually need to do that

[16:07] <brrt> and we're inserting casts

[16:07] <brrt> also at runtime

[16:08] <brrt> and that as well can be eliminated, since we know (per oplist) the proper size of all things going in

[16:08] <brrt> and types

[16:14] <lizmat> that sounds like an interesting optimization opportunity ?

[16:18] <brrt> well, the result of it will probably be very minor since it is compiler internal

[16:19] <brrt> what it does do however is make it much easier to assert that a given template actually is correct

[16:19] <brrt> that is kind of a valuable thing, I think

[16:20] <lizmat> indeed  :-)

[16:50] <brrt> I reviewed and left comments on a bunch of *very* minor things

[16:56] *** brrt left
[17:06] *** zakharyas left
[17:16] *** zakharyas joined
[17:36] *** domidumont joined
[17:41] *** robertle left
[17:43] *** domidumont left
[17:44] *** domidumont joined
[17:45] *** domidumont left
[17:56] *** robertle joined
[18:25] *** zakharyas left
[18:38] *** brrt joined
[18:41] *** Kaiepi left
[19:21] *** domidumont joined
[19:28] *** domidumont left
[20:38] *** ggoebel left
[20:39] *** brrt left
[21:07] *** robertle left
[21:59] *** MasterDuke joined
[22:59] <Geth> ¦ MoarVM: 9f005086e3 | (Samantha McVey)++ | 11 files

[22:59] <Geth> ¦ MoarVM: Used fixed size allocator for hashes. Nice speedup for table expansion

[22:59] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9f005086e3

[23:40] <Geth> ¦ MoarVM: 6646038f59 | (Samantha McVey)++ | src/strings/ops.c

[23:40] <Geth> ¦ MoarVM: Factor out our hashing function and speed up hashing flat strings

[23:40] <Geth> ¦ MoarVM:

[23:40] <Geth> ¦ MoarVM: Factor out our string hashing code into one function which adds three

[23:40] <Geth> ¦ MoarVM: graphemes and another one which finishes the hash adding 0, 1 or 2

[23:40] <Geth> ¦ MoarVM: further graphemes.

[23:40] <Geth> ¦ MoarVM:

[23:40] <Geth> ¦ MoarVM: This makes it easier for us to provide faster hashing for flat 8 or 32

[23:40] <Geth> ¦ MoarVM: bit strings by not having to use a grapheme iterator.

[23:41] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/6646038f59

[23:41] *** MasterDuke left
