[01:27] *** MasterDuke joined
[02:59] *** ilbot3 joined
[04:42] *** AlexDaniel joined
[06:13] *** reportable6 joined
[06:16] *** reportable6 joined
[06:38] *** brrt joined
[06:41] *** reportable6 joined
[06:46] <brrt> good *

[06:46] <yoleaux> 25 Feb 2018 18:03Z <MasterDuke> brrt: the box_s jit-bisect data is here https://gist.github.com/MasterDuke17/e74e14627f6bf7086e961d256ba2487a

[06:46] <brrt> thanks :-)

[07:44] *** quotable6 joined
[07:44] *** greppable6 joined
[07:45] *** brrt joined
[07:45] *** KDr2 joined
[07:59] *** domidumont joined
[08:08] *** domidumont joined
[08:21] *** robertle joined
[08:26] *** zakharyas joined
[08:30] *** zakharyas joined
[08:56] *** zakharyas joined
[08:58] <brrt> so far i can see that the expr JIT has been good at removing STORE for this frame

[09:27] <timotimo> i see why we end up trying to remove a BB's succ twice

[09:30] <timotimo> optimize_iffy can end up removing the instruction entirely. after that it'll call decompose_object_conditional if the ins's opcode is either if_o or unless_o. decompose_object_conditional will sometimes call optimize_iffy again if it thinks a change means another optimization attempt could be helpful

[09:31] <timotimo> however, removing the instruction does not clear the instruction's opcode, so the "removed" instruction is considered "still active" and the reoptimization step wants to throw out the successor a second time

[09:32] <brrt> wait, what

[09:32] <brrt> oh

[09:32] <timotimo> :)

[09:32] <timotimo> now i changed manipulate_ins to just turn the instruction into a no_op

[09:32] <timotimo> er, i mean manipulate_remove_ins

[09:32] <brrt> how does removeing the instruction not remove an opcode? i don't follow

[09:33] <timotimo> https://github.com/MoarVM/MoarVM/blob/master/src/spesh/optimize.c#L2072

[09:33] <timotimo> removing the ins with the manipulate function will only kick it out of the doubly-linked-list, but this code won't check that

[09:39] <timotimo> whoops, compilation is now extremely unhappy

[09:42] <timotimo> huh, it was my phi optimization where i drop phis that have only two operands

[09:47] <brrt> oh, i see

[09:47] <brrt> good find

[09:48] <brrt> we could check if the thing is deleted by (ins == ins->prev->next)

[09:48] <brrt> alternatively

[09:48] <brrt> we could do the decompose first

[09:50] <timotimo> currently i replace its info with no_op, that works

[09:51] <brrt> yeah

[09:51] <brrt> but it remains a hack :-)

[09:52] <timotimo> yeah, and it made things worse if i just unconditionally do it after delete_ins

[09:52] <timotimo> so, now i'm confused, i thought i had a perl6 for loop with nqp::getenvhash<FOO> work with this optimization

[09:53] <timotimo> but it goes through a proper call to &postcircumfix:<{ }> now

[09:53] <timotimo> that call isn't inlined, either

[10:00] <timotimo> analyze_phi doesn't propagate known_value ye

[10:00] <timotimo> yet

[10:30] <brrt> timotimo: do you have an example of a failure due to that misoptimization?

[10:45] <timotimo> which one are you refering to?

[10:46] <timotimo> MoarVM oops: Didn't find the successor to remove from a Spesh Basic Block

[10:47] <timotimo> that's what happens without setting the no_op opcode on the removed if/unless

[10:47] <timotimo> Missing infixish operator precedence at line 50, near " :inherita"

[10:47] <timotimo> at gen/moar/stage2/NQPHLL.nqp:707  (src/vm/moar/stage0/NQPHLL.moarvm:panic)

[10:47] <timotimo> that's what i get if i put in "a PHI with only two operators copies the facts instead"

[10:48] <timotimo> i'll be AFK for a little bit

[11:10] *** brrt joined
[11:26] *** zakharyas joined
[11:49] <brrt> so the suspicious thing I'm seeing in the box_s bug, is we're spilling over the result of sp_getarg

[11:49] <brrt> with the value of a sp_getspeshslot

[11:49] <brrt> and i'm not sure why that would be happening

[12:16] <brrt> .ask timotimo if you have a replication where this goes wrong (i can easily see that it would) then I'd love to see it because then i can test if my fix fixes it

[12:16] <yoleaux> brrt: I'll pass your message to timotimo.

[13:10] *** zakharyas joined
[13:10] *** zakharyas1 joined
[13:50] *** notable6 joined
[14:47] *** zakharyas joined
[15:47] *** zakharyas joined
[16:08] *** brrt joined
[16:30] *** brrt joined
[16:54] <timotimo> brrt: requires my local patches to bring out the problem ;)

[16:54] <yoleaux> 12:16Z <brrt> timotimo: if you have a replication where this goes wrong (i can easily see that it would) then I'd love to see it because then i can test if my fix fixes it

[16:55] <brrt> ah, ok

[16:56] <timotimo> i can totally push them

[16:58] <brrt> or to a branch, if needed

[17:00] *** zakharyas joined
[17:06] <timotimo> yes, i was thinking of a branch

[17:07] <Geth> Â¦ MoarVM/getenvhash_constant_fold: 5 commits pushed by (Timo Paulssen)++

[17:07] <Geth> Â¦ MoarVM/getenvhash_constant_fold: 9ee875e403 | getenvhash is supposed to :usehll

[17:07] <Geth> Â¦ MoarVM/getenvhash_constant_fold: 7235516cd8 | spesh can now constant-fold ifnonnull

[17:07] <Geth> Â¦ MoarVM/getenvhash_constant_fold: b32504110b | teach trace_spesh_optimizer.gdb about optimize_bb_switch

[17:07] <Geth> Â¦ MoarVM/getenvhash_constant_fold: 14d4cf9287 | constantfold operations on nqp::getenvhash

[17:07] <Geth> Â¦ MoarVM/getenvhash_constant_fold: 7f0cf168a4 | a phi analysis patch that should work but doesn't

[17:07] <Geth> Â¦ MoarVM/getenvhash_constant_fold: review: https://github.com/MoarVM/MoarVM/compare/9ee875e40350^...7f0cf168a437

[17:54] *** dalek joined
[17:54] *** synopsebot joined
[17:54] *** Geth joined
[17:54] *** SourceBaby joined
[18:03] *** domidumont joined
[18:09] <samcv> good *

[18:09] <yoleaux> 24 Feb 2018 22:12Z <tbrowder> samcv: try modifying yr .travis.yml as in the current nqp master branch. it will help push yr jvm job along in NQP#425

[18:09] <synopsebot> NQP#425 [open]: https://github.com/perl6/nqp/pull/425 [moar] Add encodeconf and decodeconf ops

[19:04] *** Util joined
[19:33] *** robertle joined
[19:38] *** domidumont joined
[19:45] *** Kaiepi joined
[21:06] *** geospeck joined
[21:37] *** Kaypie joined
[21:48] *** notable6 joined
[21:48] *** Kaiepi joined
[21:50] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/02/26/2018-09-say-cheese-d/

[22:36] *** AlexDaniel joined
[22:54] *** releasable6 joined
[23:51] *** committable6 joined
