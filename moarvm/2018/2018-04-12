[01:38] *** undersightable6 joined
[01:57] *** ilbot3 joined
[02:37] *** quotable6 joined
[06:04] *** brrt joined
[06:17] <brrt> good *

[06:21] *** robertle joined
[06:38] *** brrt joined
[06:38] <nine> MasterDuke: the description reads as if it works similar to NativeCall in MoarVM before I added JIT compilation capability. So we're already nicely ahead there. What could be interesting is the part that gathers function signatures from debug information.

[06:38] * nwc10 has not read it yet, but I've been thinking about the possibility of that for some years

[06:38] <nwc10> and I think mentioned it to timotimo at GPW2018

[06:39] <nwc10> only as "it ought to be possible"

[06:40] <brrt> what is or isn't possible?

[06:40] *** domidumont joined
[06:40] <nwc10> getting C function signatures direct from the debug section of a shared object (if one is present)

[06:40] <nwc10> so avoid the DRY violation of having to also write them in the Perl code

[06:40] <nwc10> or having to find the relevant C header file and parse it

[06:42] <brrt> that is an awesome idea right until you install it on a server and the administrators / policy has decided not to ship header files and debug sections

[06:44] <nwc10> which is a very logical thing to do on a production server

[06:45] <nine> So it would make more sense to gather that information at build time (probably from header files), just like in C.

[06:45] <nine> Now this core feature list reads darn impressive: https://github.com/pybind/pybind11

[06:48] *** domidumont joined
[07:12] <brrt> on the other hand, if you could precompile the nativecall'bindingness on a dev server (where you'd have headers), and ship that as-is to the production server, then, that's probably a good idea

[07:13] <brrt> x64 ABI support aint that hard though

[07:13] <brrt> (windows x64 ABI)

[07:13] <brrt> it is arguably simpler /better than the unix one

[07:14] <nine> brrt: that's what I meant with "gather that information at build time"

[07:16] <brrt> it is a good idea

[07:20] *** domidumont joined
[07:21] *** domidumont1 joined
[07:25] *** domidumont joined
[07:25] <nine> Btw. we already have something in that regard: https://github.com/Skarsnik/gptrixie

[07:50] *** AlexDaniel joined
[07:55] <Geth> ¦ MoarVM: samcv++ created pull request #841: Randomly seed a hash secret to mitigate ease of DOS attack

[07:55] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/841

[07:56] *** zakharyas joined
[08:57] *** zakharyas joined
[09:56] *** zakharyas joined
[10:07] *** zakharyas joined
[10:14] *** zakharyas joined
[10:28] *** zakharyas joined
[10:33] *** zakharyas joined
[11:05] *** zakharyas joined
[11:20] <AlexDaniel> can somebody look at this please? https://github.com/rakudo/rakudo/issues/1663#issuecomment-379541036

[11:46] *** brrt joined
[12:40] *** zakharyas joined
[13:32] <robertle> regarding 1663, I can help with debugging/testing. just holler if you don't have a mips or s390x around

[14:00] *** zakharyas joined
[14:06] *** FROGGS joined
[14:46] *** AlexDaniel joined
[14:56] *** domidumont1 joined
[15:06] *** zakharyas joined
[15:17] *** releasable6 joined
[15:19] *** brrt joined
[15:59] *** robertle_ joined
[16:08] *** zakharyas joined
[16:56] *** robertle_ joined
[16:57] *** domidumont joined
[17:49] *** zakharyas joined
[18:58] *** robertle_ joined
[19:11] *** Kaiepi joined
[19:12] *** Kaiepi joined
[19:32] *** Kaiepi joined
[19:45] *** FROGGS joined
[19:47] *** zakharyas joined
[19:50] *** Kaiepi joined
[20:00] *** brrt joined
[23:48] *** etshtirlic joined
