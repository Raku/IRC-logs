[00:06] *** dalek left
[01:40] *** Kaiepi left
[01:59] *** MasterDuke joined
[01:59] *** p6bannerbot sets mode: +v MasterDuke

[01:59] *** MasterDuke left
[01:59] *** MasterDuke joined
[01:59] *** herbert.freenode.net sets mode: +v MasterDuke

[01:59] *** p6bannerbot sets mode: +v MasterDuke

[04:37] *** lizmat left
[05:20] *** lizmat joined
[05:20] *** p6bannerbot sets mode: +v lizmat

[06:32] *** robertle joined
[06:32] *** p6bannerbot sets mode: +v robertle

[07:42] *** robertle left
[09:05] *** AlexDaniel left
[09:27] *** brrt joined
[09:28] *** p6bannerbot sets mode: +v brrt

[09:35] *** domidumont joined
[09:35] *** p6bannerbot sets mode: +v domidumont

[09:56] *** Geth left
[10:21] <brrt> \o

[10:22] <brrt> I now think most of the issues we're having may be related to signs

[10:28] *** brrt left
[10:28] *** brrt joined
[10:29] *** p6bannerbot sets mode: +v brrt

[10:35] <dogbert11> hello brrt

[10:35] *** brrt left
[11:53] *** squashable6 left
[11:53] *** releasable6 left
[11:53] *** statisfiable6 left
[11:53] *** reportable6 left
[11:53] *** bisectable6 left
[11:53] *** unicodable6 left
[11:53] *** bloatable6 left
[11:53] *** undersightable6 left
[11:53] *** shareable6 left
[11:53] *** greppable6 left
[11:53] *** nativecallable6 left
[11:53] *** evalable6 left
[11:53] *** committable6 left
[11:53] *** notable6 left
[11:53] *** quotable6 left
[11:53] *** benchable6 left
[11:53] *** coverable6 left
[11:53] *** nativecallable6 joined
[11:53] *** quotable6 joined
[11:53] *** notable6 joined
[11:53] *** greppable6 joined
[11:53] *** committable6 joined
[11:53] *** evalable6 joined
[11:53] *** coverable6 joined
[11:53] *** bloatable6 joined
[11:53] *** bisectable6 joined
[11:53] *** benchable6 joined
[11:53] *** benchable6 left
[11:53] *** bisectable6 left
[11:53] *** committable6 left
[11:53] *** evalable6 left
[11:53] *** quotable6 left
[11:53] *** releasable6 joined
[11:53] *** reportable6 joined
[11:53] *** unicodable6 joined
[11:53] *** releasable6 left
[11:53] *** reportable6 left
[11:53] *** unicodable6 left
[11:53] *** coverable6 left
[11:53] *** bloatable6 left
[11:53] *** notable6 left
[11:53] *** greppable6 left
[11:53] *** nativecallable6 left
[11:54] *** p6bannerbot left
[11:54] *** p6bannerbot joined
[11:54] *** ChanServ sets mode: +o p6bannerbot

[12:40] *** Kaiepi joined
[12:41] *** p6bannerbot sets mode: +v Kaiepi

[13:23] *** dogbert2_ left
[13:43] <timotimo> that's a bad sign?

[13:46] <dogbert11> it's a sign of the times

[14:13] *** brrt joined
[14:13] *** p6bannerbot sets mode: +v brrt

[14:21] *** brrt` joined
[14:22] *** p6bannerbot sets mode: +v brrt`

[14:23] *** brrt left
[14:23] *** dogbert2_ joined
[14:24] *** p6bannerbot sets mode: +v dogbert2_

[14:24] *** brrt` is now known as brrt

[14:44] <brrt> test case; trunc is dead

[14:44] <brrt> https://gist.github.com/bdw/0dd3ece19d87710b6b08262fb7ce1216

[14:45] <timotimo> nqp-m: https://gist.github.com/bdw/0dd3ece19d87710b6b08262fb7ce1216

[14:45] <camelia> nqp-moarvm: OUTPUT: «ERROR␤   at <tmp>:12  (<ephemeral file>:<mainline>)␤ from gen/moar/stage2/NQPHLL.nqp:1685  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/NQPHLL.moarvm:eval)␤ from gen/moar/stage2/NQPHLL.nqp:1928  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/NQPHLL.moarvm:ev…»

[15:09] *** brrt left
[15:10] *** robertle joined
[15:11] *** p6bannerbot sets mode: +v robertle

[15:57] <dogbert11> hmm, that doesn't look very good

[16:01] * dogbert11 tries to figure out when this happened ...

[16:03] <timotimo> use bisectable with a "run" command to invoke nqp-m

[16:08] <dogbert11> is that the way to do it?

[16:19] *** zakharyas joined
[16:20] *** p6bannerbot sets mode: +v zakharyas

[16:21] <timotimo> it's *a* way to do it :)

[16:21] <timotimo> you could of course do it manually if you like

[16:21] <timotimo> i wouldn't like it ;)

[16:21] *** zakharyas left
[16:22] *** zakharyas joined
[16:23] *** p6bannerbot sets mode: +v zakharyas

[16:37] <dogbert11> I'm trying manueal ATM and as you write it's not very fun :)

[16:44] *** AlexDaniel joined
[16:44] *** p6bannerbot sets mode: +v AlexDaniel

[16:45] <dogbert11> perhaps AlexDaniel will solve this quicker but here's what we have so far

[16:46] <dogbert11> nqp commit https://github.com/perl6/nqp/commit/8476ecbd8473d772b3438f73d60abb9948ca6c67 is broken

[16:47] <dogbert11> I got it wrong immediately https://github.com/perl6/nqp/commit/8476ecbd8473d772b3438f73d60abb9948ca6c67 is working but https://github.com/perl6/nqp/commit/4acf8573ea8dfaaaf261d6a56624842272c3cc7f does not

[16:52] <AlexDaniel> e: chdir ‘sandbox’; run ‘wget’, ‘https://gist.githubusercontent.com/bdw/0dd3ece19d87710b6b08262fb7ce1216/raw/cb42f72fc943be960d5d6a50e8b1ee4ff9b66dda/trunc.nqp’

[16:52] <dogbert11> between the two we have nine's recent work in nqp and MoarVM which doesn't lend itself to bisection

[16:52] <AlexDaniel> c: HEAD chdir ‘sandbox’; run ‘wget’, ‘https://gist.githubusercontent.com/bdw/0dd3ece19d87710b6b08262fb7ce1216/raw/cb42f72fc943be960d5d6a50e8b1ee4ff9b66dda/trunc.nqp’

[16:52] <AlexDaniel> where are the bots O_o

[16:52] <dogbert11> perhaps they ran away :)

[16:54] <AlexDaniel> dogbert11: banned

[16:55] <dogbert11> how come

[16:56] <dogbert11> MVM_JIT_EXPR_DISABLE=1 seems to resolve the problem

[16:57] <AlexDaniel> timotimo: btw do you know about this? https://gist.github.com/AlexDaniel/88b38af5db9adcf0b711ac3df31dd431

[16:58] <AlexDaniel> basically it bisects with builds from whateverable, but locally

[16:58] <AlexDaniel> so you can run any code you need

[16:59] <timotimo> cool, thanks

[16:59] <timotimo> bookmarked

[17:00] <AlexDaniel> I wish somebody turned it into App::Bisect module, or something like that

[17:02] <timotimo> CoreHackers may be the right namespace for that

[17:03] <AlexDaniel> or that, ya

[17:03] <yoleaux> 17:01Z <lizmat> AlexDaniel: I've documented all of my commits for this release (I think)

[17:17] <AlexDaniel> timotimo: ah, also you'll need to read some comments in this file if you decide to use it https://github.com/perl6/whateverable/blob/master/lib/Whateverable/Bisection.pm6#L29

[17:23] <lizmat> .ask samcv how hard would it be to create a "nqp::iterleft" op on an nqp::iterator object that would tell you how many elements can still be produced by the iterator

[17:23] <yoleaux> lizmat: I'll pass your message to samcv.

[17:24] <lizmat> that would allow us to make all Mappy iterators to easily become PredictiveIterators

[17:24] <samcv> lizmat, for hashes specifically?

[17:24] <yoleaux> 17:23Z <lizmat> samcv: how hard would it be to create a "nqp::iterleft" op on an nqp::iterator object that would tell you how many elements can still be produced by the iterator

[17:25] <timotimo> how should it behave when the count is unknown?

[17:25] <timotimo> we could have different "modes" of iterators in the future

[17:26] <lizmat> return -1 ?

[17:26] <samcv> lizmat, also i can do that for hashes

[17:27] <samcv> yes

[17:27] <lizmat> I mean, if it can be done as  a cheap operation...

[17:27] <lizmat> (very) cheap

[17:27] <samcv> well actually. hmm

[17:28] <lizmat> if not, then just scratch the idea  :-)

[17:28] <lizmat> what happens if you do nqp::elems on an nqp hash ?

[17:28] <samcv> we can quickly know how many are in the other buckets but i don't think we know where in the current bucket we are

[17:28] <timotimo> for a hash it might have to count how often it has been iterated so far

[17:28] <samcv> lizmat, that is very fast. it just returns the hash's count in the hash struct

[17:28] <timotimo> because, yeah, you can't easily tell what you're pointing at at the moment

[17:28] <timotimo> you can, however, just iterate the iterator to the finish line to figure out how long it takes, lol

[17:30] <lizmat> samcv: so maybe an  'nqp::iterdone' op that produces the number values produced ?

[17:30] <lizmat> but I guess you're not keeping that now, are you ?

[17:31] <timotimo> well

[17:31] <timotimo> the first entry in MVMIter is uint32 mode; there's a 32bit wide gap after that before the pointer to the target

[17:31] <timotimo> and we only have two different modes at the moment anyway :)

[17:31] <timotimo> oh

[17:31] <timotimo> fourm odes

[17:32] <samcv> yeah no we don't keep how far we've gone

[17:32] <timotimo> in arrays we do, though, because that's how we go from one to the next there :)

[17:33] <timotimo> "unsigned", is that a 32bit int?

[17:33] <lizmat> gotcha...  :-)

[17:33] <lizmat> samcv: ok, so scratch the idea, it's probably not worth it

[17:34] <timotimo> fwiw, just unbox_i on the iterator could give the number of iterations so far

[17:34] <timotimo> so there doesn't even have to be a new op

[17:34] *** zakharyas left
[17:35] <lizmat> hmmm... I don't think we use nqp::iterator on arrays in core

[17:35] <lizmat> it's all based on atpos

[17:35] <timotimo> we probably do if we "for @foo" in nqp code

[17:46] *** virtualsue joined
[17:47] *** p6bannerbot sets mode: +v virtualsue

[17:47] *** virtualsue left
[17:50] *** bisectable6 joined
[17:51] *** p6bannerbot sets mode: +v bisectable6

[17:51] *** committable6 joined
[17:51] *** evalable6 joined
[17:51] *** p6bannerbot sets mode: +v committable6

[17:52] *** p6bannerbot sets mode: +v evalable6

[17:52] *** notable6 joined
[17:53] *** reportable6 joined
[17:53] *** p6bannerbot sets mode: +v notable6

[17:53] *** p6bannerbot sets mode: +v reportable6

[17:53] *** unicodable6 joined
[17:54] *** releasable6 joined
[17:54] *** p6bannerbot sets mode: +v unicodable6

[17:54] *** p6bannerbot sets mode: +v releasable6

[17:55] <lizmat> m: my @a = ^10; use nqp; my $i := nqp::iterator(nqp::getattr(@a,List,q/$!reified/)); nqp::while($i,nqp::say(nqp::iterval(nqp::shift($i))))

[17:55] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «This is not an iterator, it's a P6opaque (Scalar)␤  in block <unit> at <tmp> line 1␤␤»

[17:55] <lizmat> timotimo: ^^^ what am I doing wrong ?

[17:56] <timotimo> forgot a decont

[17:56] <timotimo> also

[17:56] <timotimo> i'm not sure nqp::shift($i) returns the iterator itself

[17:58] *** quotable6 joined
[17:58] <lizmat> m: my @a = ^10; use nqp; my $i := nqp::iterator(nqp::getattr(@a,List,q/$!reified/)); nqp::while($i,nqp::stmts(nqp::shift($i),nqp::say(~nqp::iterval($i))))

[17:58] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤»

[17:59] <lizmat> whee

[17:59] *** p6bannerbot sets mode: +v quotable6

[18:00] <AlexDaniel> c: HEAD chdir ‘sandbox’; run ‘wget’, ‘https://gist.githubusercontent.com/bdw/0dd3ece19d87710b6b08262fb7ce1216/raw/cb42f72fc943be960d5d6a50e8b1ee4ff9b66dda/trunc.nqp’

[18:00] <committable6> AlexDaniel, https://gist.github.com/9fc76730444284fcad826b221d5f5531

[18:00] <lizmat> m: my @a = ^10 .reverse; use nqp; my $i := nqp::iterator(nqp::getattr(@a,List,q/$!reified/)); nqp::while($i,nqp::say(~nqp::shift($i)))

[18:00] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «9␤8␤7␤6␤5␤4␤3␤2␤1␤0␤»

[18:00] <lizmat> looks like nqp::shift already returns the next value

[18:00] <AlexDaniel> c: HEAD run <nqp-m sandbox/trunc.nqp>

[18:00] <committable6> AlexDaniel, https://gist.github.com/accf0a11a05cfa166accc9e6e6d09e72

[18:01] <timotimo> cool

[18:01] <timotimo> in that case, it's probably only necessary for hashes

[18:02] <timotimo> or maybe even in that case you just need iterkey

[18:02] *** benchable6 joined
[18:02] *** p6bannerbot sets mode: +v benchable6

[18:02] <AlexDaniel> c: 2018.10 run <nqp-m sandbox/trunc.nqp>

[18:02] <committable6> AlexDaniel, ¦2018.10: «»

[18:02] <AlexDaniel> bisect: old=2018.10 run <nqp-m sandbox/trunc.nqp>

[18:03] <bisectable6> AlexDaniel, Bisecting by exit code (old=2018.10 new=86ce4f4). Old exit code: 0

[18:03] <AlexDaniel> hey that was easy?

[18:03] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/65bb18fee0661dcfb59fa718f124e6f8

[18:03] <bisectable6> AlexDaniel, (2018-10-30) https://github.com/rakudo/rakudo/commit/b8176dc5bfe65af2487a8a68af299f08b1c37fe8

[18:03] <AlexDaniel> c: b8176dc5bf^,b8176dc5bf run <nqp-m sandbox/trunc.nqp>

[18:03] <committable6> AlexDaniel, https://gist.github.com/92fc2e97799fc869f863ed79930c606b

[18:03] <AlexDaniel> who was looking for it? dogbert11? timotimo?

[18:03] <timotimo> dogbert i think

[18:03] <AlexDaniel> brrt?

[18:04] <AlexDaniel> .tell brrt bisected: https://colabti.org/irclogger/irclogger_log/moarvm?date=2018-11-17#l196

[18:04] <yoleaux> AlexDaniel: I'll pass your message to brrt.

[18:04] <AlexDaniel> is there a ticket for it?

[18:04] <timotimo> probably not yet

[18:06] <dogbert11> well that commit does quite a lot :)

[18:07] <timotimo> yeah, we can't really bisect in between bumps yet

[18:07] <timotimo> since whateverable builds rakudos up front, and it'd be immense to build them with every in-between commit up front

[18:07] <AlexDaniel> no, I almost did it actually

[18:08] <AlexDaniel> the code started to get very hairy though, so I abandoned my attempt…

[18:08] <AlexDaniel> so yeah, it's not an issue and we can and should do it

[18:08] <AlexDaniel> someone just has to write some nice code for it :)

[18:12] <AlexDaniel> btw it's not M × N × R, it's just M + N

[18:13] <AlexDaniel> as in we don't have to try all combinations, just shift the *_VERSION a bit on bumps

[18:13] <AlexDaniel> https://github.com/perl6/whateverable/issues/40

[18:14] *** bloatable6 joined
[18:15] *** p6bannerbot sets mode: +v bloatable6

[18:16] *** coverable6 joined
[18:17] *** p6bannerbot sets mode: +v coverable6

[18:18] *** greppable6 joined
[18:19] *** p6bannerbot sets mode: +v greppable6

[18:20] *** zakharyas joined
[18:20] *** squashable6 joined
[18:20] <dogbert11> holy shit, I think I found it

[18:20] *** p6bannerbot sets mode: +v zakharyas

[18:20] <lizmat> dogbert11++

[18:20] <dogbert11> it seems to be this one https://github.com/MoarVM/MoarVM/commit/2c4967d120e438e3da758555a20f6d2b4b131976

[18:21] *** p6bannerbot sets mode: +v squashable6

[18:21] * dogbert11 haven't done assembler since the 68000 days

[18:21] *** shareable6 joined
[18:22] <dogbert11> something for nine or brrt or timotimo I guess

[18:22] *** p6bannerbot sets mode: +v shareable6

[18:24] *** Kaiepi left
[18:24] *** zakharyas left
[18:25] *** Kaiepi joined
[18:26] *** p6bannerbot sets mode: +v Kaiepi

[18:27] *** zakharyas joined
[18:28] *** p6bannerbot sets mode: +v zakharyas

[18:33] *** statisfiable6 joined
[18:33] <AlexDaniel> I'm very tired today so I'll go to bed soon. See you all tomorrow!

[18:34] *** p6bannerbot sets mode: +v statisfiable6

[18:35] <lizmat> good night, AlexDaniel++

[18:37] *** nativecallable6 joined
[18:38] *** p6bannerbot sets mode: +v nativecallable6

[18:50] *** undersightable6 joined
[18:51] *** p6bannerbot sets mode: +v undersightable6

[19:14] <lizmat> timotimo samcv did some benchmarks, but any different between an atpos based iterator and one based one nqp::iterator is lost in the noise

[19:14] <lizmat> so I'm not going to pursue that atm

[19:15] <lizmat> (as somehow it also breaks the install process when I do that change)

[19:34] *** zakharyas left
[19:34] <timotimo> OK

[19:35] *** MasterDuke left
[19:41] *** domidumont left
[20:11] *** lizmat left
[20:13] *** lizmat joined
[20:13] *** p6bannerbot sets mode: +v lizmat

[21:03] *** domidumont joined
[21:03] *** p6bannerbot sets mode: +v domidumont

[21:20] *** domidumont left
[22:35] *** Kaiepi left
[22:35] *** Kaiepi joined
[22:36] *** p6bannerbot sets mode: +v Kaiepi

[22:37] <nine> dogbert11: how did you end up with that commit? With the expr JIT disabled brrt++'s testcase works fine. Same when I just comment out the expr JIT template for trunc_i16.

[22:40] *** patrickb joined
[22:40] <nine> dogbert11: now the weird thing is that I think, my lego JIT implementation of trunc_i16 is just as wrong. It does exactly what the expr JIT template claims to do. I think, trunc_i16 should actually be exactly the same as extend_i16. We probably just emit a trunc_i16 in places where we really do use only the lower 16 bits.

[22:40] *** p6bannerbot sets mode: +v patrickb

[22:52] <dogbert11> hello nine

[22:54] <dogbert11> there are three files changed in that commit. I took the ones from the provious commit anf copied them to master. Real shady :)

[22:54] <dogbert11> *previous

[22:56] <dogbert11> I then wiped the rakudo install dir and rebuilt everything

[23:00] <dogbert11> probably not the best way to go about things

[23:02] *** patrickb left
