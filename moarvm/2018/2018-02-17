[02:27] *** releasable6 joined
[02:55] *** ilbot3 joined
[02:57] *** greppable6 joined
[02:58] *** greppable6 joined
[02:59] *** greppable6 joined
[03:53] *** MasterDuke_ joined
[06:10] *** AlexDani` joined
[11:21] *** greppable6 joined
[11:44] *** releasable6 joined
[11:46] <nwc10> OK, this is nuts. It used to be that it (Rakudo I think) would reliably SEGV, caused it seemed by box_i

[11:46] <nwc10> for referece, commit dd72e1f1ecc16ce75e78db3c813bb6cf43b574ba -- Disable box_i template for the time being

[11:46] <nwc10> if I revert that, life no longer SEGVs

[11:46] <nwc10> OK

[11:46] <nwc10> so, if I check out dd72e1f1ecc16ce75e78db3c813bb6cf43b574ba^

[11:46] <nwc10> and then wind NQP back to the last commit that will build on MoarVM

[11:47] <nwc10> and Rakudo back to the last commit that will build on that NQP

[11:47] <nwc10> it *now* doesn't SEGV

[11:47] <nwc10> but surely that was approximately the setup that used to SEGV reliably

[11:47] <nwc10> this doesn't make sense

[11:48] <nwc10> jnthn's fix in commit cf523c89c06a0f480ec43a8adbc54d0ff453ebee *would* have made sense.

[11:48] <nwc10> But it does not seem to be that

[11:55] *** mst_ joined
[12:04] *** releasable6 joined
[13:05] *** robertle joined
[13:34] *** brrt joined
[13:35] <brrt> good *

[13:35] <yoleaux> 16 Feb 2018 19:20Z <samcv> brrt: that sounds like a good idea

[13:36] <brrt> nwc10: that.. sucks...

[13:36] <brrt> because we can't repro the original issue then

[13:36] <brrt> :-(

[13:37] <brrt> i kind of also want to push the template for getlexstatic_o

[13:37] <brrt> since it now works (for me)

[13:44] <dogbert17> o/

[13:44] * dogbert17 clickbaits https://github.com/MoarVM/MoarVM/issues/804 and hides ...

[13:48] <MasterDuke> brrt: fwiw, i just tried enabling box_i and getlexstatic_o, but nqp segfaults during the build

[13:50] <MasterDuke> works with just box_i enabled

[13:53] <brrt> ah

[13:53] <brrt> on linux?

[13:53] <brrt> I'm on a mac and i'm not getting it :-(

[13:53] <brrt> but my suspicion is that it is threading-dependent

[13:54] <brrt> \o dogbert17, MasterDuke

[13:54] <MasterDuke> yeah, this is kubuntu 17.10

[13:54] <brrt> oh, blimey

[13:54] <brrt> hmm

[13:55] <MasterDuke> also gets through a rakudo build with just box_i enabled

[13:56] <MasterDuke> trying now with just getlexstatic_i enabled

[13:56] <MasterDuke> nope, nqp segfaults just about right away

[13:57] <brrt> yeah

[13:57] <brrt> hmm

[13:59] <brrt> don't do that then, yet :-P

[13:59] <brrt> no, in seriousness, we should probably put it in a branch

[13:59] <brrt> i was doing that but you can as well, if you want

[13:59] <brrt> (i'm heading out in 30 minutes or so)

[14:00] <brrt> thanks dogbert17

[14:01] <MasterDuke> brrt: here's a backtrace of the segfault i get https://gist.github.com/MasterDuke17/9f386a024a4be69572a9a45fbab53376

[14:07] <MasterDuke> hm, the segv doesn't seem to trigger under valgrind

[14:08] <MasterDuke> ah, got one

[14:09] <MasterDuke> gist updated with gdb and valgrind output

[14:20] <brrt> dogbert17: not bisectable :-(

[14:21] <brrt> oh, spesh bisectable though

[14:26] <brrt> MasterDuke: that affirms what I found earlier

[14:26] <brrt> *confirms

[14:26] <brrt> so it's going wrong in the call to MVM_spesh_log_static

[14:27] <brrt> my suspicion is now, that the call to MVM_spesh_is_logging, returns a zero value that is smaller than 32 bit

[14:29] <MasterDuke> `MVMSpeshLogEntry *entry = &(sl->body.entries[sl->body.used]);` is the line it segfaults on

[14:29] <MasterDuke> and sl is 0

[14:29] *** lizmat joined
[14:29] <brrt> this is because sl = 0 :-)

[14:54] <timotimo> you mean the "is_logging" function is set to return, like, an 8bit integer and the compiler expects any caller to ignore everything past the 8th bit?

[15:04] <MasterDuke> MVMint32 MVM_spesh_log_is_logging(MVMThreadContext *tc)

[15:05] <MasterDuke> https://github.com/MoarVM/MoarVM/blob/master/src/jit/unsafe.expr#L10 is `(do (when (nz (call (^func &MVM_spesh_log_is_logging)`, think that's the problem?

[15:24] <Geth> Â¦ MoarVM: jstuder-gh++ created pull request #805: Rakudo RT#102994: Add flag indicating HLL init status on StaticFrame

[15:24] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/805

[15:24] <synopsebot> RT#102994 [open]: https://rt.perl.org/Ticket/Display.html?id=102994 [BUG] State variables are never initialized if the first call of the containing block does not reach them

[15:31] *** AlexDani` joined
[16:44] *** greppable6 joined
[17:21] *** zakharyas joined
[17:33] <Geth> Â¦ MoarVM: 720705d253 | (Timo Paulssen)++ | src/6model/reprs/P6opaque.c

[17:33] <Geth> Â¦ MoarVM: don't optimize getattr unless known concrete

[17:33] <Geth> Â¦ MoarVM:

[17:33] <Geth> Â¦ MoarVM: otherwise a loop of calling an accessor on a type

[17:33] <Geth> Â¦ MoarVM: object will segfault once it gets speshed.

[17:33] <Geth> Â¦ MoarVM:

[17:33] <Geth> Â¦ MoarVM: Fixes R#1540

[17:33] <synopsebot> R#1540 [open]: https://github.com/rakudo/rakudo/issues/1540 [SEGV] Some snippet that segfaults

[17:33] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/720705d253

[17:41] *** zakharyas joined
[18:12] <Geth> Â¦ MoarVM: 8d94732aad | (Zoffix Znet)++ | src/io/syncfile.c

[18:12] <Geth> Â¦ MoarVM: Fix eof detection on zero-size files

[18:12] <Geth> Â¦ MoarVM:

[18:12] <Geth> Â¦ MoarVM: Including special files, like those in /proc.

[18:12] <Geth> Â¦ MoarVM:

[18:12] <Geth> Â¦ MoarVM: Fixes R#1533 https://github.com/rakudo/rakudo/issues/1533

[18:12] <Geth> Â¦ MoarVM:

[18:12] <synopsebot> R#1533 [open]: https://github.com/rakudo/rakudo/issues/1533 [RFC][regression][âš  blocker âš ] /proc/â€¦/status can no longer be read line by line

[18:12] <Geth> Â¦ MoarVM: When we detect seek pos <= file size, we go to check if file size

[18:12] <Geth> Â¦ MoarVM: is zero. Both of those are true on zero-size files and /proc files,

[18:12] <Geth> Â¦ MoarVM: so we always report EOF for those files, which breaks some read operations.

[18:12] <Geth> Â¦ MoarVM:

[18:12] <Geth> Â¦ MoarVM: Fix by falling back on the eof_reported flag for such files.

[18:12] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8d94732aad

[19:10] *** zakharyas joined
[19:31] *** zakharyas joined
[19:37] *** brrt joined
[19:53] *** releasable6 joined
[21:37] *** brrt joined
[21:52] *** AlexDaniel joined
[23:37] *** brrt joined
