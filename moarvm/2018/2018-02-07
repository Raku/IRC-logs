[00:01] <timotimo> time to use an allocator that fills new allocations with random data

[00:01] <timotimo> maybe?

[00:02] <timotimo> or, you know, just use valgrind and maybe make sure the allocator it uses cooperates by marking memory regions as "allocated but uninitialized" and such

[00:02] <brrt> uhuh. but this is the register allocator though :-)

[00:02] <timotimo> could be a good idea to add support to the spesh allocator for --valgrind and redzones and such, though i wouldn't expect it to find something

[00:03] <timotimo> right, i'd be filling the register allocator's data with random bytes

[00:03] <timotimo> though maybe using rr and just going backwards a bit with a watchpoint is easier

[00:04] <brrt> hmm

[00:04] <brrt> in this case, the 0-is-rax-is-illegal rule also works though :-)

[00:07] <timotimo> hm, right, it'd always cause trouble, right?

[00:10] <brrt> yeah, and i can detect it easily enough

[00:14] *** klapperl joined
[00:15] *** evalable6 joined
[00:27] *** reportable6 joined
[00:27] *** greppable6 joined
[00:27] *** squashable6 joined
[00:27] *** statisfiable6 joined
[00:27] <brrt> ok, going to sleep now, will debug further in the morning

[00:27] *** bloatable6 joined
[00:27] *** coverable6 joined
[00:27] <timotimo> the quality of my thoughts has declined sharply during the moving process

[00:27] <timotimo> good nigth brrt++ :)

[00:27] <brrt> good night timotimo

[00:35] <jnthn> 'night brrt

[00:35] * jnthn also figures it's time for sleep

[00:41] *** MasterDuke joined
[00:48] *** ilmari[m] joined
[01:13] *** bisectable6 joined
[01:13] *** releasable6 joined
[01:18] *** AlexDaniel` joined
[01:18] *** wictory[m] joined
[01:43] <Geth> ¦ MoarVM: samcv++ created pull request #798: RFC Allow optional strict decoding of windows-1251/1252 (new ops)

[01:43] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/798

[02:05] *** MasterDuke_ joined
[02:18] *** notable6 joined
[02:21] *** quotable6 joined
[02:58] *** ilbot3 joined
[03:00] *** MasterDuke joined
[03:19] *** MasterDuke joined
[03:55] *** quotable6 joined
[04:12] *** evalable6 joined
[05:40] *** AlexDaniel` joined
[06:24] *** ilmari[m] joined
[06:25] *** wictory[m] joined
[06:48] *** domidumont joined
[06:55] *** domidumont joined
[07:30] *** domidumont joined
[08:10] *** brrt joined
[09:09] <brrt> good * #moarvm

[09:14] *** zakharyas joined
[10:01] <nine> /win 9

[10:01] <buggable> nine, Thank you for entering Accidental /win Lottery! The next draw will happen in 3 weeks, 13 hours, 58 minutes, and 50 seconds

[10:21] <jnthn> morning o/

[10:24] <brrt> morning

[11:12] <nwc10> not totally good *, #moarvm, as currently NQP fails with a SEGV during build

[11:13] <nwc10> src/spesh/log.c:152:41: runtime error: member access within null pointer of type 'struct MVMSpeshLog'

[11:21] *** zakharyas joined
[11:36] <brrt> that's not totally good, no

[11:59] *** MasterDuke joined
[12:04] *** zakharyas joined
[12:09] *** zakharyas joined
[12:55] *** domidumont joined
[13:00] *** domidumont joined
[13:53] *** brrt1 joined
[14:00] *** brrt joined
[14:20] *** colomon joined
[15:18] *** AlexDaniel joined
[15:26] <samcv> /win dows

[15:31] <nwc10> odd

[15:31] <nwc10> /win 0

[15:31] <buggable> nwc10, Thank you for entering Accidental /win Lottery! The next draw will happen in 3 weeks, 8 hours, 28 minutes, and 25 seconds

[15:31] <nwc10> /win 1

[15:31] <buggable> nwc10, Thank you for entering Accidental /win Lottery! The next draw will happen in 3 weeks, 8 hours, 28 minutes, and 24 seconds

[15:31] <nwc10> /win 00

[15:31] <buggable> nwc10, Thank you for entering Accidental /win Lottery! The next draw will happen in 3 weeks, 8 hours, 28 minutes, and 20 seconds

[15:31] <nwc10> /win -1

[15:53] *** domidumont joined
[16:18] *** brrt joined
[16:43] <brrt> once you start seeing graphs, you start seeing them everywhere...

[16:43] <brrt> case in point

[16:43] <brrt> i just realized i can make the linear scan allocator make a graphviz of life range relations

[17:47] *** nebuchadnezzar joined
[17:51] *** domidumont joined
[18:06] <TimToady> /win ꧓

[18:06] <buggable> TimToady, Thank you for entering Accidental /win Lottery! The next draw will happen in 3 weeks, 5 hours, 53 minutes, and 55 seconds

[18:06] *** zakharyas joined
[18:18] <TimToady> /win ⅷ

[20:18] *** zakharyas joined
[20:49] *** evalable6 joined
[20:54] *** squashable6 joined
[21:37] *** brrt joined
[22:06] <brrt> good evening #moarvm

[22:20] *** MasterDuke joined
[22:21] <MasterDuke> brrt: did you see my latest comment on https://github.com/MoarVM/MoarVM/pull/787/ ?

[22:21] <brrt> didn't

[22:26] <brrt> oh, i did, and i thought i responded, but that didn't come through

[22:26] <MasterDuke> i think i'm not quite sure what the overall status of JITting sp_findmeth is. i.e., i know you've been doing some work, but i'm not sure if what you're doing would potentially replace my PR

[22:26] <MasterDuke> or would be an optimization to it

[22:27] <MasterDuke> afk for a bit, but will check back

[22:27] <brrt> no, your PR is correct :-)

[22:28] <brrt> and yes, that was the correct place for the check

[22:30] <MasterDuke> (not quite afk yet apparently). so the first branch is all that's needed, since the entire thing is marked as invokish? or the other way around?

[22:31] <brrt> both branches are needed. but there's a check in there setting a dynamic label

[22:31] <brrt> and branching out to the interpreter

[22:31] <brrt> but it's arguably kind of difficult to see if you don't know what you're looking for :-)

[22:32] <brrt> what i can do, is lift the internal invokish check out of there in a separate commit and then merge your template

[22:32] <MasterDuke> ahhh

[22:33] <brrt> but i'm once more on a quest to debug a linear scan problem

[22:34] <brrt> so that's currenlty occupying my attention

[22:34] <MasterDuke> no worries, just wanted to make sure there wasn't anything i needed to do

[23:03] <brrt> :-)

[23:03] <brrt> i found my bug

[23:06] <[Coke]> \o/

[23:11] <brrt> in the final 'cleanup' phase of the linear scan allocator, i'm not taking into account the fact that new live ranges might be added during processing

[23:12] <brrt> of tiles, e.g. during spills

[23:12] <brrt> so the change is to switch from an iterate-the-heap + cleanup model, to iterate-the-list and peek-the-heap model

[23:15] <MasterDuke> cool. easy fix?

[23:15] <brrt> hmm, needs a bit of care to ensure that everything keeps on happening in the right order :-)

[23:15] <MasterDuke> is this what was blocking merging your optimization branch?

[23:27] *** brrt joined
[23:31] <brrt> no, blockign merging that is a case of 'not done yet' :-)

[23:32] <brrt> there's a bunch of things i want to experiment with before i merge that

[23:36] <MasterDuke> ahh

[23:58] <brrt> hmm. not so simple to fix after all
