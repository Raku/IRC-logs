[01:15] *** Kaiepi joined
[02:56] *** ilbot3 joined
[05:23] *** AlexDaniel joined
[05:49] *** releasable6 joined
[06:54] *** greppable6 joined
[07:06] *** bisectable6 joined
[07:06] *** nativecallable6 joined
[07:06] *** bisectable6 joined
[07:27] *** robertle joined
[07:54] *** bartolin joined
[08:05] *** committable6 joined
[08:45] *** quotable6 joined
[09:37] *** shareable6 joined
[09:37] *** unicodable6 joined
[09:39] *** releasable6 joined
[09:51] *** domidumont joined
[09:57] *** domidumont joined
[10:34] *** bisectable6 joined
[10:34] *** benchable6 joined
[10:34] *** committable6 joined
[10:35] *** statisfiable6 joined
[12:26] *** Kaiepi joined
[15:02] *** bart joined
[15:06] <brrt> good *

[15:06] <brrt> i can't replicate the failure of MVM_box_str

[15:06] <brrt> on my machine :-(

[15:10] <MasterDuke> have you tried a linux vm? you're on osx, correct?

[15:12] <MasterDuke> would it help if i did a jit-bisect again?

[15:13] <brrt> i'm on fedora

[15:13] <brrt> specially for this

[15:18] <brrt> :-(

[15:18] <brrt> you'll never hear me complain about bugs, but bugs i can't replicate are... madenning

[15:18] <brrt> *maddening

[15:19] <brrt> MasterDuke: if you would?

[15:19] <brrt> maybe only in combination with box_i

[15:19] <brrt> since i haven't enabled that one

[15:28] <brrt> i can replicate them when they're both enabled

[15:32] <brrt> (and it's bisectable. this is going to be weird)

[15:36] *** committable6 joined
[15:39] <brrt> also, bugs in CORE.setting compilation suffer from being rather slow to bisect

[15:48] <MasterDuke> bisect with both box_s and box_i?

[15:52] <MasterDuke> afk for a while, but i started it running

[16:01] *** brrt joined
[16:04] *** zakharyas joined
[16:24] *** zakharyas joined
[16:24] *** Kaiepi joined
[16:31] *** Kaiepi joined
[16:38] <timotimo> we cache the envhash even though getenvhash is marked "usehll"

[16:43] *** unicodable6 joined
[17:09] *** Kaiepi joined
[17:38] <timotimo> rather surprised to see that getenvhash is hardly encountered by spesh at all

[17:39] <timotimo> perhaps the code that uses getenvhash should be changed to access it via nqp::getenvhash more often rather than binding to a variable

[18:01] <timotimo> trying to get note("foobar") if nqp::getenvhash<LOUD> to disappear if LOUD is not set in the environment

[18:01] <timotimo> there's so many left-overs %)

[18:03] <MasterDuke> .tell brrt the box_s jit-bisect data is here https://gist.github.com/MasterDuke17/e74e14627f6bf7086e961d256ba2487a

[18:03] <yoleaux> MasterDuke: I'll pass your message to brrt.

[18:06] <MasterDuke> timotimo: what do you mean left-overs?

[18:18] <timotimo> bytecode that was involved in the check and call

[18:19] <MasterDuke> ah

[18:20] <timotimo> why do we have PHI nodes with only two arguments %)

[18:22] <timotimo> YES! \o/

[18:22] <timotimo> all that's left from this whole ordeal is the const_s for the LOUD string

[18:23] <timotimo> it's probably only left because of deopt boundaries

[18:26] <timotimo> hm, the effect isn't quite as extreme as i'd hoped

[18:26] <timotimo> 7.7s before my patch, 6.9s after my patch

[18:26] <timotimo> perl6 -e 'use nqp; for ^5_000_000 { say "test" if nqp::getenvhash<LOUD> };'

[18:27] <timotimo> though with the debug output completely removed from the bytecode, i imagine it could press a frame or two below the inline limit

[18:29] <MasterDuke> cool

[18:30] <timotimo> we just need to rewrite every usage of debug switching in nqp and rakudo to use this pattern instead of assigning to a variable of some kind

[18:30] <timotimo> because variable assignment could very well mess this up

[18:34] <timotimo> (more tests surely needed)

[18:34] <timotimo> unfortunately, my code breaks nqp's build rather early

[19:57] *** hoelzro joined
[20:34] *** zakharyas joined
[20:46] *** zakharyas joined
[21:19] *** Kaiepi joined
[21:25] *** Kaiepi joined
[21:32] *** Kaiepi joined
[21:34] *** Kaiepi joined
[21:37] *** Kaiepi joined
[21:44] <MasterDuke> timotimo: btw, have you ever looked at http://www.libtom.net/TomsFastMath/ ?

[21:48] <timotimo> only briefly peeked at the main page

[21:50] <MasterDuke> think there's any chance moarvm could use (at least some of) it?

[22:00] <timotimo> probably

[23:15] *** Kaypie joined
[23:27] <Geth> ¦ MoarVM: Kaiepi++ created pull request #810: Panic when Dyncall fails to allocate native callbacks

[23:27] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/810
