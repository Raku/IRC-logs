[00:59] *** MasterDuke joined
[00:59] *** p6bannerbot sets mode: +v MasterDuke

[01:00] *** MasterDuke left
[01:00] *** MasterDuke joined
[01:00] *** herbert.freenode.net sets mode: +v MasterDuke

[01:00] *** p6bannerbot sets mode: +v MasterDuke

[01:32] *** nwc10 left
[03:00] *** leont left
[04:35] *** MasterDuke left
[06:58] *** nwc10 joined
[06:59] *** p6bannerbot sets mode: +v nwc10

[07:11] *** domidumont joined
[07:12] *** p6bannerbot sets mode: +v domidumont

[08:07] *** leont joined
[08:08] *** p6bannerbot sets mode: +v leont

[08:23] *** leont left
[08:24] *** zakharyas joined
[08:25] *** p6bannerbot sets mode: +v zakharyas

[10:00] *** statisfiable6 left
[10:10] *** lizmat left
[10:28] *** lizmat joined
[10:28] *** p6bannerbot sets mode: +v lizmat

[10:52] *** zakharyas left
[11:03] *** statisfiable6 joined
[11:04] *** p6bannerbot sets mode: +v statisfiable6

[11:06] *** leont joined
[11:07] *** p6bannerbot sets mode: +v leont

[11:31] *** domidumont left
[11:39] *** statisfiable6 left
[11:54] *** brrt joined
[11:54] *** p6bannerbot sets mode: +v brrt

[11:55] <brrt> \o

[11:58] <nwc10> o/

[12:14] *** brrt left
[12:37] *** statisfiable6 joined
[12:37] *** p6bannerbot sets mode: +v statisfiable6

[12:54] *** domidumont joined
[12:55] *** p6bannerbot sets mode: +v domidumont

[14:39] *** reportable6 left
[14:39] *** reportable6 joined
[14:40] *** p6bannerbot sets mode: +v reportable6

[15:00] *** dogbert2_ joined
[15:00] *** p6bannerbot sets mode: +v dogbert2_

[15:25] *** zakharyas joined
[15:25] *** p6bannerbot sets mode: +v zakharyas

[15:52] *** brrt joined
[15:53] *** p6bannerbot sets mode: +v brrt

[16:18] *** avar left
[16:18] *** avar joined
[16:18] *** avar left
[16:18] *** avar joined
[16:18] *** p6bannerbot sets mode: +v avar

[16:19] *** p6bannerbot sets mode: +v avar

[16:21] *** zakharyas left
[16:29] *** robertle joined
[16:29] *** p6bannerbot sets mode: +v robertle

[16:41] *** brrt left
[16:50] <Geth> Â¦ MoarVM: 7ba02259bc | (Jonathan Worthington)++ | src/6model/reprs/MVMMultiCache.c

[16:50] <Geth> Â¦ MoarVM: Correct named argument type tuple index calc

[16:50] <Geth> Â¦ MoarVM:

[16:50] <Geth> Â¦ MoarVM: Thus fixing an out-of-bounds memory access. Resolves #996.

[16:50] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7ba02259bc

[16:52] *** domidumont left
[17:03] *** robertle left
[17:06] *** domidumont joined
[17:06] *** p6bannerbot sets mode: +v domidumont

[17:21] *** domidumont left
[17:55] *** brrt joined
[17:56] *** p6bannerbot sets mode: +v brrt

[17:57] *** domidumont joined
[17:57] <brrt> \o

[17:57] <brrt> so. I think I've figured out a fix for one of dogberts' issues

[17:57] <brrt> specifically the one that was related to trunc

[17:58] *** p6bannerbot sets mode: +v domidumont

[18:04] *** brrt left
[18:06] *** brrt joined
[18:07] *** p6bannerbot sets mode: +v brrt

[18:44] *** brrt left
[18:49] <dogbert11> brrt, sounds great. Is it a difficult fix?

[19:03] *** brrt joined
[19:04] *** p6bannerbot sets mode: +v brrt

[19:06] <brrt> no, but it is a typical case of 'what is actually the desired behaviour here'

[19:06] <brrt> if I have a 64 bit integer, and I truncate it to 16 bits, and then I reuse it as a 64 bit integer, do I want that to be a): signed b): unsigned

[19:07] <brrt> does trunc mean that the upper bits are 0, or sign-extended?

[19:08] <brrt> officially this shouldn't matter. but in practice it clearly does

[19:09] *** brrt left
[19:10] *** brrt joined
[19:11] *** p6bannerbot sets mode: +v brrt

[19:26] *** squashable6 left
[19:28] *** squashable6 joined
[19:29] *** p6bannerbot sets mode: +v squashable6

[19:31] *** emerson left
[19:50] *** domidumont left
[20:06] *** brrt left
[20:07] *** brrt joined
[20:08] *** p6bannerbot sets mode: +v brrt

[20:09] <Geth> Â¦ MoarVM: 9468b7f750 | (Bart Wiegmans)++ | src/jit/core_templates.expr

[20:09] <Geth> Â¦ MoarVM: [JIT] Fix trunc to cast upwards

[20:09] <Geth> Â¦ MoarVM:

[20:09] <Geth> Â¦ MoarVM: This is a bit confusing altogether.

[20:09] <Geth> Â¦ MoarVM:

[20:09] <Geth> Â¦ MoarVM: My original theory of trunc was that we'd do a downcast, clearing the

[20:09] <Geth> Â¦ MoarVM: upper bits, storing only the lower bits, but treating the number as

[20:09] <Geth> Â¦ MoarVM: being smaller. But all sorts of downstream code didn't really agree.

[20:09] <Geth> Â¦ MoarVM:

[20:10] <Geth> Â¦ MoarVM: So now we do the opposite - zero-extend a smaller number into a bigger

[20:10] <Geth> Â¦ MoarVM: one (and store that instead). And that seems to fix a few bugs.

[20:10] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9468b7f750

[20:33] <dogbert11> brrt++

[20:33] <lizmat> And yet another weekly hits the Net: https://p6weekly.wordpress.com/2018/11/19/2018-47-piensa-en-perl-6/

[20:52] <brrt> lizmat++

[20:53] *** brrt left
[21:17] *** Kaiepi left
[21:18] *** Kaiepi joined
[21:19] *** p6bannerbot sets mode: +v Kaiepi

[22:38] *** TimToady_ joined
[22:39] *** p6bannerbot sets mode: +v TimToady_

[22:39] *** TimToady left
