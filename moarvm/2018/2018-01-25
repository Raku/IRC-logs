[00:46] <AlexDaniel`> Yeey :)

[00:49] <MasterDuke> .tell brrt i added the loads to the sp_findmeth template and updated the PR. rakudo builds ok, any easy way to be sure that path is being taken?

[00:49] <yoleaux> MasterDuke: I'll pass your message to brrt.

[00:50] <Zoffix> samcv++

[00:50] <MasterDuke> .tell brrt running into some weirdness with a box_i template, some details/discussion here https://irclog.perlgeek.de/moarvm/2018-01-24#i_15733736

[00:50] <yoleaux> MasterDuke: I'll pass your message to brrt.

[00:59] <samcv> anybody getting failures on t/spec/S32-io/IO-Socket-Async.t

[01:00] <samcv> i get this if i run it without prove: Unhandled exception in code scheduled on thread

[01:00] <samcv> 4

[01:00] <MasterDuke> i've run a couple spectests today, haven't seen that

[01:04] <Zoffix> samcv: try changing the $port in the test? Maybe you got something blocking it

[01:04] <samcv> ok

[01:05] <samcv> Zoffix: no change

[01:05] <samcv> gonna try compiling withou --has-ffi

[01:06] <samcv> nope still failing :(

[01:06] <Zoffix> :(

[01:06] <samcv> ah i think i have ipv6 disabled?

[01:06] <samcv> ok that makes sense then :)

[01:07] <MasterDuke> ah, right. i got that on my desktop all the time when i had ipv6 disabled also

[01:07] <samcv> though it having unhandled exceptions doesn't sound great either :|

[01:08] <MasterDuke> i think the test is making an assumption good user code wouldn't

[01:11] <Geth> ¬¶ MoarVM: 67cde5bf03 | (Samantha McVey)++ | VERSION

[01:11] <Geth> ¬¶ MoarVM: Bump VERSION to 2018.01

[01:11] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/67cde5bf03

[01:12] <samcv> tag pushed

[01:15] <samcv> released!

[01:18] <Zoffix> woooo \o/ samcv++

[01:20] * TimToady also sez samcv++

[01:22] <samcv> MasterDuke: oops missed your comment

[01:39] <AlexDaniel> samcv++ indeed!

[01:44] <MasterDuke> samcv++ i don't think a stray . will break the release

[01:54] <AlexDaniel> perhaps time to start calling it Chaneglog, accepting that it may be less than awesome :)

[01:58] <timotimo> should the "feel free to edit this page" have stayed in the changelog? :S

[02:00] <AlexDaniel> oh, oops

[02:01] <AlexDaniel> and ‚ÄúNew in 2018.01‚Äù twice

[02:02] <timotimo> i find it slightly strange that there's only a single entry that has an explanation attached to it (the last one in the spesh section)

[02:03] <Geth> ¬¶ MoarVM: 726ca9b596 | (Aleks-Daniel Jakimenko-Aleksejev)++ | docs/ChangeLog

[02:03] <Geth> ¬¶ MoarVM: Remove unneeded text

[02:03] <Geth> ¬¶ MoarVM:

[02:03] <Geth> ¬¶ MoarVM: It was moved from the wiki and shouldn't be in the actual changelog.

[02:03] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/726ca9b596

[02:12] <TimToady> in the fwiw department, I experimented with a config.o that had extra null padding on all the strings containing the PREFIX directory, and it seemed to work fine, so I suspect making a relocatable binary won't be all that difficult

[02:12] *** Kaiepi joined
[02:15] *** _Kaiepi joined
[02:16] <TimToady> 'course, things that copy PREFIX around inside nqp may have to be a bit more dynamic in adding padding

[02:18] <timotimo> TimToady: could probably also use ./././././././ as i think samcv did in the appimage stuff

[02:19] <TimToady> yeah, thought about that, but it's uglificatious and has performance implications :)

[02:19] <timotimo> fair enough

[02:20] <TimToady> hopefully we can keep files distinct that need padding vs those that can just s/// the text

[02:23] <TimToady> and since each ./ is presumably a system call, it might get worse with recent CPU security patches

[02:23] <TimToady> though arguably most such paths aren't used in a hot path

[02:25] <TimToady> also, arguably, one could use the relocator to remove the ././././ spacers just as easily from the standard install, as long as the relocator knows which ones to null pad, and which ones to s///

[02:25] <timotimo> we already do a crapton of superfluous syscalls on startup; many times we stat the same thing many times in a row

[02:26] <TimToady> (and it tends to be obvious by whether the string is \0 terminated already)

[02:26] <timotimo> perl6 -e '' stats ModuleLoader.moarvm 81 times for example

[02:26] <timotimo> more precisely, almost all of those are lstat

[02:26] <TimToady> nice to still have optimization targets

[02:28] <Zoffix> :)

[02:36] <timotimo> almost all of these come from MVM_file_exists

[02:38] <timotimo> https://gist.github.com/timo/33acff43fa16a42b0ef1b4e98705a832 - go nuts

[02:38] <timotimo> fwiw, i have not actually timed if stat takes any meaningful amount of time out of our startup

[02:40] <timotimo> callgrind seems to think it's only a tiny amount of instructions spent, but i'm not sure how it measures syscalls, if at all.

[02:40] *** Zoffix left
[02:56] *** ilbot3 joined
[03:32] *** _Kaiepi joined
[04:15] *** _Kaiepi joined
[04:53] *** nativecallable6 joined
[06:48] *** brrt joined
[07:17] <brrt> good * #moarvm

[07:17] <yoleaux> 00:49Z <MasterDuke> brrt: i added the loads to the sp_findmeth template and updated the PR. rakudo builds ok, any easy way to be sure that path is being taken?

[07:17] <yoleaux> 00:50Z <MasterDuke> brrt: running into some weirdness with a box_i template, some details/discussion here https://irclog.perlgeek.de/moarvm/2018-01-24#i_15733736

[07:17] <brrt> .tell MasterDuke seeing it, I will check it out as well. I was hoping you'd find bugs like these :-)

[07:17] <yoleaux> brrt: I'll pass your message to MasterDuke.

[07:18] <brrt> also, that looks sane, it should probably just work

[07:19] <samcv> i'm curious does ././././ actually use more cpu or does the system just optimize it away?

[07:19] <brrt> .tell jnthn that $0 always refers to the address rather than the register value

[07:19] <yoleaux> brrt: I'll pass your message to jnthn.

[07:20] <brrt> ans all others do refer to the register value

[07:20] <brrt> samcv: what's the context?

[07:20] <samcv> brrt: any

[07:20] <samcv> tbh

[07:21] <brrt> eh. and this is file paths?

[07:21] <brrt> i suppose the system can optimize it away. i'd be very surprised if you could measure that

[07:39] *** domidumont joined
[07:42] *** brrt joined
[07:43] <nine> Fun fact: the inline in place stuff actually reduces the code size: 5 files changed, 100 insertions(+), 160 deletions(-)

[07:48] <brrt> \o/

[07:49] <samcv> nice!

[08:01] <Geth> ¬¶ MoarVM/master: 16 commits pushed by (Stefan Seifert)++, (Timo Paulssen)++

[08:01] <Geth> ¬¶ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/726ca9b596...39928851f8

[08:01] <nine> .oO(pushing largish branches is just not as satisfying)

[08:04] <nine> samcv++ # release

[08:14] *** Ven`` joined
[08:32] *** zakharyas joined
[08:57] *** travis-ci joined
[08:57] <travis-ci> MoarVM build failed. Samantha McVey 'Update ChangeLog for release'

[08:57] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/333049969 https://github.com/MoarVM/MoarVM/compare/cd902eb585fd...76b09504eeb3

[08:57] *** travis-ci left
[09:06] <lizmat> Thanks everybody for the MoarVM release!

[09:07] <lizmat> http://moarvm.org  # still showing 2017.09   :-(

[09:07] <lizmat> which could give people the wrong idea that there's no development with MoarVM anymore

[09:31] *** statisfiable6 joined
[09:31] *** _Kaiepi joined
[09:37] *** Ven`` joined
[09:40] <samcv> i thought that was fixed?

[09:40] <samcv> i'm not really sure how the site works :\

[09:41] <samcv> oh the releases page shows 2017.12

[09:41] <samcv> i think we need an update to the release document to make sure the rest of the site is updated properly? jnthn

[09:48] *** zakharyas joined
[10:09] <jnthn> Yes, we can put that into the release document

[10:09] <yoleaux> 07:19Z <brrt> jnthn: that $0 always refers to the address rather than the register value

[10:09] <jnthn> https://github.com/MoarVM/moarvm.org is the git repo for the site, and it auto-deploys

[10:09] <jnthn> Anybody who has time/interest to help keep it up to date, please just ask for a commit bit :-)

[10:10] <jnthn> (I've got interest, of course, but apparently not time...)

[10:29] *** travis-ci joined
[10:29] <travis-ci> MoarVM build failed. Samantha McVey 'A few ChangeLog adjustments'

[10:29] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/333050302 https://github.com/MoarVM/MoarVM/compare/76b09504eeb3...c522511e3a51

[10:29] *** travis-ci left
[10:42] *** bisectable6 joined
[10:45] *** releasable6 joined
[10:56] *** benchable6 joined
[11:02] *** coverable6 joined
[11:17] *** zakharyas joined
[11:28] *** El_Che joined
[11:29] <El_Che> samcv, jnthn: It seems the new 2018.01 release is missing from http://moarvm.org/releases/. Can you upload a tar? I needed to build the rakudo-pkg Linux OS packages for Rakudo

[11:29] <El_Che> thx

[11:33] <jnthn> El_Che: Seems it wasn't committed: https://github.com/MoarVM/moarvm.org/commits/master

[11:33] <jnthn> samcv: ^^

[11:38] <jnthn> Or at least, not pushed

[11:54] *** zakharyas joined
[12:03] *** zakharyas joined
[12:37] *** reportable6 joined
[13:00] <timotimo> --collect-systime=<no|yes> [default: no]

[13:00] <timotimo> This specifies whether information for system call times should be collected.

[13:02] <timotimo> it estimates a "sysTime" of 1 for MVM_file_exists, but for some reason MVM_repr_set_int has a self sysTime of 2.599??

[13:09] *** travis-ci joined
[13:09] <travis-ci> MoarVM build passed. Aleks-Daniel Jakimenko-Aleksejev 'Remove unneeded text

[13:09] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/333083190 https://github.com/MoarVM/MoarVM/compare/67cde5bf0380...726ca9b596ea

[13:09] *** travis-ci left
[13:09] <jnthn> timotimo: Anything that allocates can trigger GC. A top allocator will thus show some of the GC cost

[13:10] <timotimo> ah, i suppose we maybe do a single gc run during startup - though i had believed we were down to 0?

[13:12] <jnthn> Hmm

[13:12] <jnthn> If it's startup then no idea

[13:13] <timotimo> yeah, i was measuring perl6 -e ''

[13:13] <timotimo> i was hoping i could get more details on how costly the lstats are

[13:13] <jnthn> ah

[13:17] <timotimo> i expect strace to be rather overhead-heavy. maybe i'll try perf trace, that's allegedly a lot lighter

[13:18] <timotimo> 65.483 (18446744073709.523 ms): moar/26304 mprotect(start: 0x7f3860279000, len: 8192, prot: READ|WRITE           ) ...

[13:18] <timotimo> i've seen this somewhere before ...

[13:20] *** Ven`` joined
[13:21] <timotimo> adding all lstats and stats up gives me 0.54 miliseconds

[13:21] <lizmat> wow

[13:21] <lizmat> ah, 0.54 *milli* seconds

[13:22] <lizmat> that's not too bad then, is it ?

[13:22] <timotimo> with some care we could probably cut it down to a third of that?

[13:22] <timotimo> not terribly bad, no

[13:25] <timotimo> fwiw, all our mprotect calls added up give me 24.8 milliseconds ;)

[13:25] <lizmat> now, *that* I call significant

[13:26] <timotimo> without jit it's only 0.69, but that makes me thing all of that is on the background thread

[13:46] *** zakharyas joined
[14:10] *** zakharyas joined
[14:18] *** KDr2 joined
[14:36] <brrt> imho 24.8 milliseconds is a reasonable price to pay to have some security against (some) attacks

[14:39] <nine> brrt: it's only on the spesh worker thread anyway, isn't it?

[14:39] <brrt> yep

[14:39] *** Ven`` joined
[14:41] <timotimo> the stats, on the other hand, are all on the main thread ;)

[14:41] <jnthn> Stats?

[14:41] <jnthn> Oh, recording of stuff

[14:41] <timotimo> lstat and stat

[14:41] <jnthn> Oh, right, not spesh stats :D

[14:41] <jnthn> haha

[14:41] <timotimo> yeah :)

[15:08] *** domidumont joined
[15:21] *** domidumont joined
[15:26] *** zakharyas joined
[15:32] *** Ven`` joined
[15:45] *** zakharyas joined
[16:07] *** brrt joined
[16:22] <psch> ooc, is moar on a SPARC T2 interesting?  a friend has access to a T5140 iirc

[16:23] <japhb> psch: Well, it won't have JIT, but porting to it might expose some remaining portability bugs in the main codebase.

[16:25] <psch> it's running debian currently, although there was talk of throwing one of the free solaris forks on it, if that matters

[16:25] <psch> but then i also don't know how liberally they want to hand out shells

[16:25] <timotimo> is that a LE or BE architecture?

[16:25] <timotimo> i *think* we're currently not doing little/big endian conversion properly everywhere

[16:25] <psch> so at worst this might be nothing more than "well i tried building it here's the errors: ..."

[16:26] <geekosaur> SPARC is BE

[16:27] <ilmari> _and_ alignment-picky

[16:28] <japhb> Which makes it 1) great for weeding out portability bugs, and 2) probably a LOT of work

[16:33] <ilmari> ubsan already catches unaligned reads

[16:33] <ilmari> Configure.pl (well build/probe.pm) disables CAN_UNALIGNED_* under -fsanitize=undefined

[17:01] *** zakharyas joined
[17:44] *** evalable6 joined
[17:53] *** stmuk joined
[17:54] <stmuk> Is the moarvm release tarball likely to appear at https://moarvm.org/releases/ ?

[17:55] <El_Che> stmuk: i pinged jnthn and samcv. It should soon proably

[17:55] <stmuk> ah great

[18:06] *** zakharyas joined
[18:29] *** domidumont joined
[18:54] *** quotable6 joined
[19:00] <AlexDaniel> I guesss we'll need to wait for samcv for that, yea

[19:01] <AlexDaniel> oh

[19:01] <AlexDaniel> I see it's there already?

[19:01] <AlexDaniel> stmuk, El_Che ‚Üë

[19:01] <stmuk> ah great!

[19:04] <El_Che> restarting the test build: https://travis-ci.org/nxadm/rakudo-pkg

[19:37] <AlexDaniel> samcv: fwiw the main page on https://www.moarvm.org/ talks about 2017.09

[19:37] <samcv> jnthn: pls help with site

[19:37] <samcv> do we have a way to generate the site automatically?

[19:38] <AlexDaniel> also https://www.moarvm.org/releases.html has no 2018.01

[19:38] <El_Che> everything is there now

[19:38] <El_Che> my builds pass

[19:38] <AlexDaniel> yey

[19:38] <El_Che> (running, but most of them passed already)

[19:39] <samcv> we need a script to generate the page i guess?

[19:39] <samcv> the tarball you can dl it's just not linked..

[19:40] <El_Che> thx samcv

[19:42] <El_Che> just added opensuse support

[19:42] <lizmat> El_Che++

[19:43] <samcv> maybe i'll come up with a script if nobody has one

[19:48] *** committable6 joined
[19:48] *** unicodable6 joined
[19:48] *** bloatable6 joined
[19:49] *** greppable6 joined
[19:52] *** statisfiable6 joined
[19:52] <jnthn> samcv: No script to update it as of yet, but that'd probably be wise

[19:52] <samcv> ok i will write one!

[19:52] <samcv> working on it right now

[19:52] <jnthn> Cool

[19:53] <jnthn> I've kinda meant to for ages, but something always pushed it off the top of the priority list

[19:53] <samcv> seems important since the site keeps falling behind

[19:53] <jnthn> *nod*

[19:56] *** nativecallable6 joined
[19:56] *** squashable6 joined
[19:56] *** coverable6 joined
[20:04] <El_Che> thx samcv, building the pkgs now

[20:04] *** El_Che left
[20:28] <samcv> almost got it i thkn

[20:37] *** zakharyas joined
[21:45] *** brrt joined
[21:55] *** buggable joined
[23:10] *** domidumont joined
[23:36] *** Merfont joined
[23:55] <Geth> ¬¶ MoarVM: f1197e42ed | (Samantha McVey)++ | docs/ChangeLog

[23:55] <Geth> ¬¶ MoarVM: Edit the ChangeLog to include the original release

[23:55] <Geth> ¬¶ MoarVM:

[23:55] <Geth> ¬¶ MoarVM: Also fix the top heading. This was added so we can generate

[23:55] <Geth> ¬¶ MoarVM: moarvm.org/releases.html from this document easily and this release was

[23:55] <Geth> ¬¶ MoarVM: missing from the ChangeLog file but existed on the website.

[23:55] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f1197e42ed
