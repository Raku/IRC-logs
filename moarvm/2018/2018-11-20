[00:39] *** lizmat_ joined
[00:39] *** p6bannerbot sets mode: +v lizmat_

[00:39] *** lizmat left
[00:49] *** MasterDuke joined
[00:49] *** p6bannerbot sets mode: +v MasterDuke

[00:50] *** MasterDuke left
[00:50] *** MasterDuke joined
[00:50] *** herbert.freenode.net sets mode: +v MasterDuke

[00:50] *** p6bannerbot sets mode: +v MasterDuke

[01:24] *** leont left
[02:28] *** Kaiepi left
[02:31] *** Kaiepi joined
[02:32] *** p6bannerbot sets mode: +v Kaiepi

[02:39] *** Kaiepi left
[02:39] *** Kaiepi joined
[02:40] *** p6bannerbot sets mode: +v Kaiepi

[02:49] *** Kaiepi left
[02:49] *** Kaiepi joined
[02:50] *** p6bannerbot sets mode: +v Kaiepi

[02:53] *** lizmat_ left
[06:58] *** domidumont joined
[06:59] *** p6bannerbot sets mode: +v domidumont

[07:20] *** nine left
[07:22] *** nine joined
[07:22] *** camelia left
[07:22] *** p6bannerbot sets mode: +v nine

[07:23] *** camelia joined
[07:24] *** p6bannerbot sets mode: +v camelia

[07:30] *** nine left
[07:32] *** nine joined
[07:33] *** camelia left
[07:33] *** p6bannerbot sets mode: +v nine

[07:40] *** nine left
[07:41] *** nine joined
[07:42] *** p6bannerbot sets mode: +v nine

[08:41] *** zakharyas joined
[08:42] *** p6bannerbot sets mode: +v zakharyas

[09:17] *** zakharyas left
[09:19] *** zakharyas joined
[09:20] *** p6bannerbot sets mode: +v zakharyas

[09:25] *** zakharyas1 joined
[09:26] *** p6bannerbot sets mode: +v zakharyas1

[09:28] *** zakharyas left
[09:35] *** zakharyas1 left
[09:38] *** zakharyas joined
[09:38] *** p6bannerbot sets mode: +v zakharyas

[09:51] *** brrt joined
[09:51] *** p6bannerbot sets mode: +v brrt

[09:53] *** zakharyas left
[10:02] *** lizmat joined
[10:02] *** p6bannerbot sets mode: +v lizmat

[10:04] *** domidumont left
[10:06] *** domidumont joined
[10:07] *** p6bannerbot sets mode: +v domidumont

[10:10] *** domidumont left
[10:10] *** domidumont joined
[10:11] *** p6bannerbot sets mode: +v domidumont

[10:14] <brrt> \o

[10:16] <nwc10> o/

[10:39] <lizmat> sanity check: in pure nqp, there is no implicit slurpy hash that eats any unexpected named parameters on methods ?

[10:40] <timotimo> not sure about that actually. should be easy to check, though?

[10:40] <brrt> I'm wondering if it is worth the while improving the jit/spesh bisect script

[10:41] <jnthn> lizmat: No, NQP doesn't do that

[10:43] <lizmat> jnthn: this is re R#2401

[10:43] <synopsebot_> R#2401 [open]: https://github.com/rakudo/rakudo/issues/2401 Match.^roles   does not behave

[10:43] <lizmat> src/how/NQPParametricRoleHOW.nqp method roles does not have a :$transitive named param

[10:45] *** brrt left
[10:46] <lizmat> just adding a :$transitive though feels wrong to me...  or not ?

[10:50] <timotimo> if the API requires a named parameter to be accepted, i suppose we better take it, though of course you can use transitive => $ so that it doesn't actually put it into a variable, at least i think so

[10:51] *** zakharyas joined
[10:51] *** p6bannerbot sets mode: +v zakharyas

[10:59] *** lizmat left
[11:01] *** yoleaux left
[11:03] *** lizmat joined
[11:03] *** p6bannerbot sets mode: +v lizmat

[11:30] *** domidumont left
[12:29] *** brrt joined
[12:30] *** p6bannerbot sets mode: +v brrt

[12:55] *** domidumont joined
[12:56] *** p6bannerbot sets mode: +v domidumont

[12:56] *** yoleaux joined
[12:57] *** p6bannerbot sets mode: +v yoleaux

[12:59] <Geth> Â¦ MoarVM/jit-expr-optimizer: 4 commits pushed by (Bart Wiegmans)++

[12:59] <Geth> Â¦ MoarVM/jit-expr-optimizer: 441aa2cbb0 | [JIT] Simple tree-rewriting optimizer

[12:59] <Geth> Â¦ MoarVM/jit-expr-optimizer: 653051a636 | [JIT] Optimize multiple loads to a COPY

[12:59] <Geth> Â¦ MoarVM/jit-expr-optimizer: b28bdd61d6 | Optimize ADD of CONST to ADDR

[12:59] <Geth> Â¦ MoarVM/jit-expr-optimizer: ee5d6c88ea | Eliminate COPY of CONST

[12:59] <Geth> Â¦ MoarVM/jit-expr-optimizer: review: https://github.com/MoarVM/MoarVM/compare/2d0b4d74b124...ee5d6c88ea78

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: 65f40100fa | (Bart Wiegmans)++ | 4 files

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: [JIT] Implement invoke sequence in expr JIT

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: review: https://github.com/MoarVM/MoarVM/commit/65f40100fa

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: e3e3677ab1 | (Bart Wiegmans)++ | src/jit/graph.c

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: [JIT] Eliminate special consume_invoke opcode

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke:

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: Except for nativecall_invoke, we no longer need this part of the

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: legacy JIT.

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: review: https://github.com/MoarVM/MoarVM/commit/e3e3677ab1

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: 3ccad429cc | (Bart Wiegmans)++ | 7 files

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: [JIT] WIP on nativeinvoke in the expression JIT

[13:30] <Geth> Â¦ MoarVM/expr-jit-invoke: review: https://github.com/MoarVM/MoarVM/commit/3ccad429cc

[13:34] <dogbert2_> hmm, the duplicate label bug is still present on 32 bit systems

[13:38] <brrt> what bug is that?

[13:38] <brrt> know what's ironic

[13:40] <brrt> despite all the immense effort spent on making java fast, it still doesn't relaly work

[13:40] <brrt> Trying to use it at 'scale' breaks down because a): every object must have an object header b): every object is heap allocated c): garbage collection is the only strategy

[13:40] <brrt> At the end you're back into reading to and from byte streams to avoid heap tracing overhead

[13:46] <dogbert2_> brrt, all I know is that it's not JIT related but here's how it looks when running t/spec/S15-nfg/emoji-test.t: ===SORRY!=== Duplicate label at <seemingly random number>

[13:52] <brrt> hmmm

[13:58] <brrt> yeah, i know nothing whatever

[14:23] <nine> The seemingly random number is an objectid

[14:24] <nine> No idea though why it would behave differently on 32 bit

[14:24] <timotimo> hmm, ubsan time?

[14:30] <timotimo> i mean, 32bit doesn't have jit at all, isn't that there a jit bug?!

[14:31] <jnthn> timotimo: The JIT ain't the only thing with labels

[14:31] <timotimo> well, then. label me a fool.

[14:31] <jnthn> The QAST -> bytecode thing does too, for example

[14:32] <timotimo> ah, of course, that's why nine is interested in it

[14:33] <timotimo> can we provoke the problem on 64bit by turning the jit off? i.e. a difference in impl of something in interp vs jit?

[14:33] *** brrt left
[14:47] <nine> Works just fine here

[14:56] *** Kaiepi left
[14:57] *** Kaiepi joined
[14:57] *** p6bannerbot sets mode: +v Kaiepi

[14:58] <lizmat> .ask jnthn should "BEGIN $foo := nqp::hash" work in a compiled module or not ?

[14:58] <yoleaux> lizmat: I'll pass your message to jnthn.

[15:04] *** zakharyas left
[15:11] *** Kaiepi left
[15:11] *** Kaiepi joined
[15:12] *** p6bannerbot sets mode: +v Kaiepi

[15:14] *** leont joined
[15:15] *** p6bannerbot sets mode: +v leont

[15:16] *** brrt joined
[15:17] *** p6bannerbot sets mode: +v brrt

[15:22] *** MasterDuke left
[15:30] <dogbert2_> nine, timotimo: it's a nasty problem in that it does not fail every time

[15:50] <jnthn> lizmat: No, we don't preserve bindings, only assignments. The reason being that what you're binding into is the "proto"-lexical scope, because the actual one that we'll have at runtime doesn't exist yet. Whereas assignment works because you assign into the Scalar container that will be used as the basis for the runtime lexical scope(s)

[15:50] <yoleaux> 14:58Z <lizmat> jnthn: should "BEGIN $foo := nqp::hash" work in a compiled module or not ?

[15:54] <lizmat> jnthn: thanks

[17:15] *** patrickb joined
[17:16] *** p6bannerbot sets mode: +v patrickb

[17:30] *** Kaiepi left
[17:31] <timotimo> samcv: are you the same samcv that speedruns spelunky?

[17:33] *** Kaiepi joined
[17:33] *** p6bannerbot sets mode: +v Kaiepi

[17:41] <samcv> nope

[17:50] <brrt> what is spelunky even

[17:58] <timotimo> it's a video game :)

[18:25] *** zakharyas joined
[18:26] *** p6bannerbot sets mode: +v zakharyas

[18:30] *** Kaiepi left
[18:33] *** Kaiepi joined
[18:34] *** p6bannerbot sets mode: +v Kaiepi

[18:35] *** lizmat left
[18:50] *** Kaiepi left
[18:50] *** Kaiepi joined
[18:50] *** domidumont1 joined
[18:51] *** p6bannerbot sets mode: +v Kaiepi

[18:51] *** p6bannerbot sets mode: +v domidumont1

[18:53] *** domidumont left
[18:57] *** lizmat joined
[18:57] *** p6bannerbot sets mode: +v lizmat

[19:01] <japhb> brrt: More precisely, it is a famous "roguelite" 2D realtime platformer, spawning many imitators and even a nonfiction book

[19:03] *** domidumont1 left
[20:51] <brrt> :-)

[20:51] * brrt wishes he had / took time for video games more often

[20:59] *** Kaiepi left
[21:01] *** Kaiepi joined
[21:02] *** p6bannerbot sets mode: +v Kaiepi

[21:39] *** zakharyas left
[22:09] *** brrt left
[22:10] *** MasterDuke joined
[22:10] *** p6bannerbot sets mode: +v MasterDuke

[22:10] *** MasterDuke left
[22:10] *** MasterDuke joined
[22:10] *** herbert.freenode.net sets mode: +v MasterDuke

[22:11] *** p6bannerbot sets mode: +v MasterDuke

[22:37] *** patrickb left
