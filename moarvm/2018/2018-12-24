[00:11] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/12/24/2018-52-three-years-later/

[00:36] <AlexDaniel> please, #moarvm, take a look at https://github.com/rakudo/rakudo/issues/2564

[00:37] * AlexDaniel looks up

[00:37] <AlexDaniel> oh :)

[02:02] *** lizmat left
[03:53] *** reportable6 left
[03:53] *** shareable6 left
[03:53] *** squashable6 left
[03:53] *** evalable6 left
[03:54] *** shareable6 joined
[03:55] *** p6bannerbot sets mode: +v shareable6

[03:55] *** squashable6 joined
[03:55] *** evalable6 joined
[03:56] *** p6bannerbot sets mode: +v squashable6

[03:56] *** p6bannerbot sets mode: +v evalable6

[03:57] *** reportable6 joined
[03:58] *** p6bannerbot sets mode: +v reportable6

[05:41] *** shareable6 left
[05:43] *** shareable6 joined
[05:44] *** p6bannerbot sets mode: +v shareable6

[07:36] *** shareable6 left
[07:38] *** shareable6 joined
[07:39] *** p6bannerbot sets mode: +v shareable6

[09:21] <nine> timotimo: that's exactly what I have done ;) But I'm no longer sure its result is valid...

[09:21] *** robertle left
[09:22] *** robertle joined
[09:23] *** p6bannerbot sets mode: +v robertle

[09:26] *** domidumont joined
[09:27] *** p6bannerbot sets mode: +v domidumont

[09:45] <timotimo> say, are those int attributes 64bit sized inside the Match object?

[09:46] <timotimo> but if !cursor_fail is broken, it would have exploded way earlier

[09:46] <timotimo> so yeah, no clue what's up with that

[09:57] <nine> I guess the only way to find out is to disable spesh optimizations until the error goes away. But that will take longer than I have before going to my parents' for Christmas

[09:59] <nine> I've already tried disabling the getattr/bindattr optimizations in P6Opaque. That's why I suspect the bisect to be misleading

[10:03] <timotimo> a patch to make that would probably be a single line to main.c :)

[10:03] <nine> Err....I meant disabling optimizations one by one until we find the broken one

[10:04] <timotimo> oh

[10:04] <timotimo> yeah that'd take a bit longer

[10:04] <timotimo> AFKBBL

[10:04] *** lizmat joined
[10:04] *** p6bannerbot sets mode: +v lizmat

[12:59] *** domidumont left
[13:12] *** brrt joined
[13:12] *** p6bannerbot sets mode: +v brrt

[13:12] <brrt> \o

[13:12] <brrt> nine++ # debugging

[13:51] <timotimo> i'm sure the bytecode compiler could be loads faster if it didn't calculate 3*4 every insert_bytecode call :P

[13:56] <timotimo> hm, how do we get an int from inside a BOOTInt in nqp code?

[13:57] <timotimo> nqp-m: my $foo := nqp::list; nqp::push($foo, 1); my int $foo := nqp::shift($foo); say($foo)

[13:57] <camelia> nqp-moarvm: OUTPUT: «Redeclaration of symbol $foo at line 2, near "; say($foo"␤   at gen/moar/stage2/NQPHLL.nqp:819  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/NQPHLL.moarvm:panic)␤ from gen/moar/stage2/NQP.nqp:2903  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/nqp.moarvm:vari…»

[13:57] <timotimo> nqp-m: my $foo := nqp::list; nqp::push($foo, 1); my int $bar := nqp::shift($foo); say($bar)

[13:57] <camelia> nqp-moarvm: OUTPUT: «1␤»

[13:57] <timotimo> nqp-m: my $foo := nqp::list; nqp::push($foo, 1); my int $bar := nqp::unbox_i(nqp::shift($foo)); say($bar)

[13:57] <camelia> nqp-moarvm: OUTPUT: «1␤»

[14:09] <timotimo> elems, coerce_in, const_n64, div_n, coerce_in, coerce_iu, trunc_u16

[14:09] <timotimo> amazing

[14:12] *** evalable6 left
[14:14] *** evalable6 joined
[14:15] *** p6bannerbot sets mode: +v evalable6

[14:16] *** brrt left
[14:17] <timotimo> smrt_numify may want to be one of the things that counts as an unbox

[14:27] <timotimo> could put an nqp::unbox_i around basically every method call in write_frame. that would be pretty terrible :\

[14:33] <timotimo> because at the moment it's numifying the integer objects that these methods return, and then coerces that resulting num to an int

[14:34] <timotimo> but tbh i haven't measured the performance yet

[14:34] <timotimo> so it could very well be wasted time :) :)

[14:39] *** eater left
[14:40] *** domidumont joined
[14:41] *** p6bannerbot sets mode: +v domidumont

[15:08] *** domidumont left
[15:41] *** eater joined
[15:41] *** p6bannerbot sets mode: +v eater

