[01:30] <timotimo> i just submitted a current moarvm build to coverity

[01:31] <timotimo> i think the debugserver is new in this :D

[01:33] <timotimo> we'll see the number of defects go up tenfold

[01:33] <timotimo> May 29, 2018

[01:33] <timotimo> Last Analyzed

[01:33] <timotimo> Defect changes since previous build dated Aug 12, 2017

[01:34] <timotimo> 63

[01:34] <timotimo> Newly detected

[01:34] <timotimo> 29

[01:34] <timotimo> Eliminated

[01:35] <timotimo> it finds an "integer overflowed argument" in twoway_memmem_uint32, interesting.

[01:35] <timotimo> "overflow: add operation overflows on operands ms and 1UL", on line 143 of memmem32.c

[01:35] <timotimo> i suppose that only happens with a string that's a few gigabytes or maybe even terabytes big?

[01:36] <geekosaur> sounds like this is the kind of thing samcv wanted to add typedefs to fix, so everything uses consistent string lengths?

[01:37] <timotimo> this is actually directly about straight-up memory buffers

[01:37] <timotimo> i.e. no confusion as to what the individual graphemes are sized

[01:37] <geekosaur> buffer lengths were randomly signed or unsigned 32 or 64 bit though

[01:37] <timotimo> i see

[01:38] <geekosaur> I also recall seeing that last time I poked at the string stuff

[01:40] <timotimo> https://scan.coverity.com/projects/paultcochrane-moarvm - anyway, here's the link where you can find the "view defects" thing if you've got access

[01:50] *** ilbot3 left
[01:51] * timotimo already fixed a few low-hanging fruits

[01:57] *** ilbot3 joined
[02:04] <timotimo> Defect changes since previous build dated May 29, 2018

[02:04] <timotimo> 0

[02:04] <timotimo> Newly detected

[02:04] <timotimo> 5

[02:04] <timotimo> Eliminated

[02:18] <Geth> ¬¶ MoarVM/master: 4 commits pushed by (Timo Paulssen)++

[02:18] <Geth> ¬¶ MoarVM/master: e6eec23027 | acknowledge explicit fallthrough in switch statement

[02:18] <Geth> ¬¶ MoarVM/master: c426d7cc2f | acknowledge explicit fallthrough in switch statement

[02:18] <Geth> ¬¶ MoarVM/master: 2ed01e7ea9 | Free local variables in debugserver

[02:18] <Geth> ¬¶ MoarVM/master: 9df44f4797 | Free local variable in line coverage

[02:18] <Geth> ¬¶ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/33d94f7ee7e5...9df44f4797ab

[02:40] *** committable6 joined
[02:40] *** coverable6 joined
[02:40] *** statisfiable6 joined
[02:40] *** undersightable6 joined
[02:40] *** benchable6 joined
[02:40] *** greppable6 joined
[02:42] *** wictory[m] left
[02:43] *** yoleaux left
[02:44] *** mst left
[02:44] *** committable6 left
[02:44] *** coverable6 left
[02:44] *** statisfiable6 left
[02:44] *** undersightable6 left
[02:44] *** benchable6 left
[02:44] *** greppable6 left
[02:45] *** TimToady joined
[02:45] *** mst joined
[02:45] *** camelia joined
[02:45] *** bartolin joined
[02:45] *** nebuchadnezzar joined
[02:45] *** tolkien.freenode.net sets mode: +o mst

[02:46] *** squashable6 left
[02:46] *** ilbot3 left
[02:46] *** Util left
[02:46] *** ingy left
[02:46] *** mst left
[02:46] *** camelia left
[02:46] *** bartolin left
[02:46] *** nebuchadnezzar left
[02:46] *** TimToady left
[02:46] *** MasterDuke left
[02:46] *** ilmari left
[02:46] *** btyler_ left
[02:46] *** huggable left
[02:46] *** buggable left
[02:46] *** tbrowder_ left
[02:46] *** synopsebot left
[02:46] *** dalek left
[02:46] *** SmokeMachine left
[02:46] *** chansen_ left
[02:46] *** hoelzro left
[02:46] *** japhb left
[02:46] *** sivoais left
[02:46] *** moritz left
[02:46] *** jnthn left
[02:46] *** BinGOs left
[02:46] *** AlexDaniel left
[02:46] *** timotimo left
[02:47] *** nebuchadnezzar joined
[02:47] *** bartolin joined
[02:47] *** camelia joined
[02:47] *** mst joined
[02:47] *** TimToady joined
[02:47] *** ilbot3 joined
[02:47] *** MasterDuke joined
[02:47] *** squashable6 joined
[02:47] *** AlexDaniel joined
[02:47] *** bisectable6 joined
[02:47] *** releasable6 joined
[02:47] *** unicodable6 joined
[02:47] *** ChanServ joined
[02:47] *** lizmat joined
[02:47] *** p6lert joined
[02:47] *** nine joined
[02:47] *** avar joined
[02:47] *** dogbert17 joined
[02:47] *** evalable6 joined
[02:47] *** notable6 joined
[02:47] *** reportable6 joined
[02:47] *** quotable6 joined
[02:47] *** bloatable6 joined
[02:47] *** nativecallable6 joined
[02:47] *** mtj_ joined
[02:47] *** jsimonet joined
[02:47] *** Geth joined
[02:47] *** geekosaur joined
[02:47] *** ZofBot joined
[02:47] *** harrow joined
[02:47] *** leedo joined
[02:47] *** krunen joined
[02:47] *** nwc10 joined
[02:47] *** samcv joined
[02:47] *** huggable joined
[02:47] *** buggable joined
[02:47] *** Util joined
[02:47] *** jnthn joined
[02:47] *** btyler_ joined
[02:47] *** SmokeMachine joined
[02:47] *** synopsebot joined
[02:47] *** dalek joined
[02:47] *** hoelzro joined
[02:47] *** timotimo joined
[02:47] *** chansen_ joined
[02:47] *** ilmari joined
[02:47] *** tbrowder_ joined
[02:47] *** tolkien.freenode.net sets mode: +oo mst ChanServ

[02:47] *** BinGOs joined
[02:47] *** sivoais joined
[02:47] *** japhb joined
[02:47] *** moritz joined
[02:47] *** eater joined
[02:47] *** jpf1 joined
[02:47] *** Voldenet joined
[02:47] *** ingy joined
[02:50] *** squashable6 left
[02:50] *** bisectable6 left
[02:50] *** releasable6 left
[02:50] *** unicodable6 left
[02:50] *** lizmat left
[02:50] *** p6lert left
[02:50] *** evalable6 left
[02:50] *** notable6 left
[02:50] *** reportable6 left
[02:50] *** quotable6 left
[02:50] *** bloatable6 left
[02:50] *** nativecallable6 left
[02:50] *** ilbot3 left
[02:50] *** krunen left
[02:50] *** Util left
[02:50] *** squashable6 joined
[02:50] *** bisectable6 joined
[02:50] *** releasable6 joined
[02:50] *** unicodable6 joined
[02:50] *** lizmat joined
[02:50] *** p6lert joined
[02:50] *** evalable6 joined
[02:50] *** notable6 joined
[02:50] *** reportable6 joined
[02:50] *** quotable6 joined
[02:50] *** bloatable6 joined
[02:50] *** nativecallable6 joined
[02:51] *** ilbot3 joined
[02:51] *** krunen joined
[02:51] *** Util joined
[02:51] *** leedo left
[02:52] *** leedo joined
[03:00] *** shareable6 joined
[03:19] *** ilmari[m] joined
[03:42] *** coverable6 joined
[03:42] *** benchable6 joined
[03:59] *** nebuchadnezzar left
[04:00] *** nebuchadnezzar joined
[04:07] *** wictory[m] joined
[04:07] *** AlexDaniel`` joined
[04:43] *** yoleaux joined
[05:58] *** undersightable6 joined
[06:00] *** domidumont joined
[06:02] *** shareable6 left
[06:06] *** domidumont left
[06:07] *** domidumont joined
[06:28] *** AlexDaniel left
[06:32] *** brrt joined
[06:32] <brrt> good * #moarvm

[06:32] <brrt> https://nullprogram.com/blog/2018/05/27/ <- this is of some interest to us (and to nine++, who wrote the JIT-nativecall thing)

[06:46] *** greppable6 joined
[06:50] *** brrt left
[06:59] *** shareable6 joined
[07:10] <nine> .tell brrt indeed, it is interesting

[07:10] <yoleaux> nine: I'll pass your message to brrt.

[07:28] *** AlexDaniel joined
[07:29] <AlexDaniel> squashable6: next

[07:29] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in 3 days and ‚âà2 hours (2018-06-02 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:34] *** zakharyas joined
[07:34] *** brrt joined
[07:59] *** robertle joined
[10:47] *** brrt left
[10:50] *** shareable6 left
[11:08] *** brrt joined
[11:14] *** zakharyas left
[11:38] *** AlexDaniel left
[12:00] <timotimo> moarvm defect density is approaching the "average defect density of OSS" :|

[12:17] *** zakharyas joined
[12:29] *** zakharyas left
[12:30] *** zakharyas joined
[12:30] <timotimo> http://hack.p6c.org/~timo/ - fuzzing moarvm again

[12:32] <brrt> that just means we're getting more features though :-P

[12:32] <yoleaux> 07:10Z <nine> brrt: indeed, it is interesting

[12:34] <brrt> timotimo: didn't you say there was a way to get repeatable thread scheduling somehow?

[12:34] *** AlexDaniel joined
[12:34] <timotimo> i don't recall details

[12:34] <timotimo> i know that rr has a way to get the opposite :)

[12:34] <brrt> either that or I figure out how to make the spesh worker be repeatable ....

[12:35] <timotimo> or just turn it off; what are you looking to accomplish?

[12:36] <timotimo> fwiw, fuzzing nqp code is not working well at all. perhaps i should have tried giving it a dictionary, because it's having ah ard time coming up with one by itself

[12:36] <timotimo> i suppose an interpreter is pretty opaque to the fuzzer, and the jit is probably not helping matters

[12:37] *** zakharyas left
[12:37] <brrt> i'm looking to debug a case where threads + the invokish removal thing causes an infinite loop

[12:38] <timotimo> can i recommend rr again?

[12:38] <brrt> you can

[12:38] <timotimo> yeah, use rr for this :)

[12:38] *** zakharyas joined
[12:39] <brrt> let's, then

[12:40] *** zakharyas left
[12:45] *** zakharyas joined
[12:49] <brrt> hm, it is almost but not quite what i want...

[12:49] *** zakharyas left
[12:51] <brrt> because it also keeps the environment variables the same

[12:55] <timotimo> ah

[12:55] <timotimo> without that it'll have a hard time replaying :)

[13:04] <brrt> yeah, i guess that's true

[13:05] <dogbert17> brrt: have you looked at the latest coverity scan issue list, there are a couple if JIT related issues there

[13:05] *** zakharyas joined
[13:07] *** zakharyas1 joined
[13:09] *** zakharyas left
[13:19] <brrt> i have

[13:54] <nine> -win 10

[13:57] <nwc10> nine: you need to try harder to get into the accidental /win sweepstake

[14:02] <lizmat>  /win /win /win /win /win :-)

[14:33] *** brrt left
[15:02] *** domidumont left
[15:12] *** robertle left
[15:15] <samcv> good *

[15:15] <samcv>  /win

[15:32] <timotimo> good win

[15:46] *** zakharyas1 left
[15:46] *** squashable6 left
[15:46] *** shareable6 joined
[15:46] *** squashable6 joined
[15:47] *** zakharyas joined
[16:31] *** zakharyas left
[17:38] *** shareable6 left
[17:38] *** statisfiable6 joined
[18:16] *** zakharyas joined
[18:20] <Geth> ¬¶ MoarVM: db50291228 | (Samantha McVey)++ | 7 files

[18:20] <Geth> ¬¶ MoarVM: Speed of at_pos, bind_key and at_key by about 4% by speeding up dispatch

[18:20] <Geth> ¬¶ MoarVM:

[18:20] <Geth> ¬¶ MoarVM: The compiler can optimize a little more if we add the functions in

[18:20] <Geth> ¬¶ MoarVM: directly instead of using the pointer attached to the object.

[18:20] <Geth> ¬¶ MoarVM:

[18:20] <Geth> ¬¶ MoarVM: These are used a lot in core compilation which is why I decided to

[18:20] <Geth> ¬¶ MoarVM: optimize these specific ops.

[18:20] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/db50291228

[18:37] *** travis-ci joined
[18:37] <travis-ci> MoarVM build errored. Samantha McVey 'Speed of at_pos, bind_key and at_key by about 4% by speeding up dispatch

[18:37] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/385331675 https://github.com/MoarVM/MoarVM/compare/9df44f4797ab...db502912281f

[18:37] *** travis-ci left
[18:37] *** domidumont joined
[18:38] *** zakharyas left
[18:40] *** zakharyas joined
[18:42] *** domidumont left
[18:53] *** ilbot3 left
[18:55] *** undersightable6 left
[18:55] *** undersightable6 joined
[18:55] *** squashable6 left
[18:55] *** benchable6 left
[18:55] *** coverable6 left
[19:10] *** ilbot3 joined
[19:53] *** coverable6 joined
[19:53] *** benchable6 joined
[19:53] *** squashable6 joined
[19:54] *** zakharyas left
[20:03] *** brrt joined
[20:26] <lizmat> samcv: that looks very interesting  :-)

[20:29] <brrt> the invokish-remvoal-thread-bug is proving to be difficult to track down :-(

[20:37] <brrt> hmm. i can set degree =>1 and get a pretty nice and repeatable failure

[20:37] <brrt> problem is, there's just about 5 different invokish things in there

[20:39] <lizmat> only 32 combinations

[20:39] <lizmat> :-)

[20:44] <samcv> lizmat: what does? the last commit?

[20:44] <lizmat> yeah..  :-)

[20:45] <samcv> :)

[20:45] <samcv> it's not a huge difference. but measurable

[20:45] * lizmat is tempted to bump Moar and nqp

[20:45] <samcv> lizmat: go ahead :)

[20:45] *** shareable6 joined
[20:48] * lizmat is testing

[21:03] *** brrt left
[21:09] <lizmat> bumped

[21:10] <lizmat> fwiw, looks like it's within noise for test-t, but Tux will tell

[21:11] <timotimo> yeah, only tux will tell

[21:11] <timotimo> who can say where the perf goes, where csv flows, only tux.

[21:19] <lizmat> https://www.youtube.com/watch?v=4X0hJ3ac6yU  # only s/time/tux/ will tell

[21:24] <timotimo> let's perl together, whoa-oh

[21:42] * lizmat is too tired and goes to bed

[22:24] *** shareable6 left
