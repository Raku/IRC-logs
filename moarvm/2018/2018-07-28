[07:06] *** lizmat left
[07:33] *** domidumont joined
[07:39] *** domidumont left
[07:40] *** domidumont joined
[08:31] *** lizmat joined
[09:21] *** lizmat left
[09:30] *** lizmat joined
[11:40] *** domidumont left
[12:36] <MasterDuke> looks like ryu is available. https://github.com/ulfjack/ryu and https://pldi18.sigplan.org/event/pldi-2018-papers-ry-fast-float-to-string-conversion

[13:48] *** lizmat left
[13:51] *** stmuk_ joined
[13:54] *** stmuk left
[14:46] *** domidumont joined
[14:48] *** domidumont left
[15:09] *** Ven`` joined
[15:22] *** lizmat joined
[16:28] *** Kaiepi left
[16:48] *** zakharyas joined
[16:58] *** Ven`` left
[19:06] <stmuk_> I bisected the windows issue to 9f005086e31e938fb9e3334b9275393a0bae0117

[19:06] <stmuk_>     Used fixed size allocator for hashes. Nice speedup for table expansion

[19:08] <lizmat> samcv: ^^^

[19:08] <lizmat> stmuk_++

[19:14] <samcv> which issue is this one?

[19:14] <yoleaux> 04:32Z <Zoffix> samcv: Spotted this propspec: https://github.com/perl6/roast/commit/f1581ac71  Got curious about `\c@` => `\0` is that a Unicode thing or Perl 6 thing?

[19:15] <samcv> .tell Zoffix that is a perl 6 thing. it's not anywhere in MoarVM for sure

[19:15] <yoleaux> samcv: I'll pass your message to Zoffix.

[19:17] <stmuk_> samcv: it's in MoarVM

[19:17] <samcv> you mean zoffix's thing?

[19:18] <samcv> or your thing

[19:18] <samcv> i was refering to zoffix's question

[19:18] <stmuk_> oh sorry

[19:18] <samcv> stmuk_: also what are the symptoms/issue number for the windows issue

[19:19] <stmuk_> samcv: https://github.com/rakudo/rakudo/issues/2070

[19:20] *** Zoffix joined
[19:21] <Zoffix> samcv: but why do we have something so weird?

[19:21] <yoleaux> 19:15Z <samcv> Zoffix: that is a perl 6 thing. it's not anywhere in MoarVM for sure

[19:21] <samcv> i don't know :(

[19:21] <samcv> it is super weird though. check if it's in perl 5

[19:21] <samcv> if it's not then i have no clue

[19:22] <Zoffix> $ perl -wlE 'say "\c@" eq "\0"'

[19:22] <Zoffix> 1

[19:22] <samcv> well there you go :)

[19:22] <Zoffix> Alright. Thanks :)

[19:22] *** Zoffix left
[19:22] <samcv> also i didn't know we had that. but now I do and will be using it extensively in my code! /s

[19:35] <geekosaur> yeh, that's inherited from perl 5, and argiably inherited from an US-ASCII world

[19:35] <geekosaur> \cX ~~ ^X ~~ control-X

[19:57] *** Kaiepi joined
[21:38] *** zakharyas left
[21:58] <lizmat> timotimo: would it be an idea to abstract the logic for the for ^42 loop optimization into a nqp::p6fastforloop(&block, $from, $to) op

[21:59] <lizmat> so we could codegen this also for native integer *variables* ?

[22:01] <lizmat> if we could do that, we could get rid of quite a number of nqp loops in the setting

[22:03] * lizmat is tired of banging her head against QASTs and goes to bed

[22:10] <samcv> night lizmat

[22:39] *** lizmat left
[22:55] *** Voldenet joined
[22:55] *** Voldenet left
[22:55] *** Voldenet joined
[23:00] *** lizmat joined
[23:09] <Geth> Â¦ MoarVM: 3a1d6913ab | (Samantha McVey)++ | src/strings/siphash/test.c

[23:09] <Geth> Â¦ MoarVM: Add "standard" siphash tests using siphashadd64bits + large time test

[23:09] <Geth> Â¦ MoarVM:

[23:09] <Geth> Â¦ MoarVM: Also test siphashadd64bits with the same tests that we know for sure to

[23:09] <Geth> Â¦ MoarVM: be correct (the ones that come from the original upstream siphash

[23:09] <Geth> Â¦ MoarVM: source). We know these are right so add further coverage. This helps us

[23:09] <Geth> Â¦ MoarVM: know more fully that our MVM specific tests are correct.

[23:09] <Geth> Â¦ MoarVM:

[23:09] <Geth> Â¦ MoarVM: Also add a test meant to be used for timing very long strings (10,000

[23:09] <Geth> Â¦ MoarVM: graphemes in this case).

[23:09] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/3a1d6913ab

[23:09] <Geth> Â¦ MoarVM: f06a725671 | (Samantha McVey)++ | src/strings/siphash/csiphash.h

[23:09] <Geth> Â¦ MoarVM: Save 3 instructions per 64bits in siphash24() function

[23:09] <Geth> Â¦ MoarVM:

[23:09] <Geth> Â¦ MoarVM: This saves 3 instructions per 64-bits processed on GCC, while saving 2

[23:09] <Geth> Â¦ MoarVM: per 64-bits processed on clang. It does add about 3 instructions before

[23:09] <Geth> Â¦ MoarVM: the loop, but we will do better when processing more than 2 graphemes at

[23:09] <Geth> Â¦ MoarVM: a time.

[23:09] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f06a725671

[23:12] *** Zoffix joined
[23:13] <Zoffix> Talk Slides and Recording: "Faster Perl 6 Programs": https://rakudo.party/post/Faster-Perl-6-Programs-Perl-6-Talk--Slides-Recording

[23:21] <Geth> Â¦ MoarVM: 7467836d70 | (Samantha McVey)++ | src/strings/siphash/csiphash.h

[23:21] <Geth> Â¦ MoarVM: Fix compiler warning from last commit

[23:21] <Geth> Â¦ MoarVM:

[23:21] <Geth> Â¦ MoarVM: Explicitly cast the pointer in csiphash.h

[23:21] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7467836d70

[23:29] *** travis-ci joined
[23:29] <travis-ci> MoarVM build failed. Samantha McVey 'Save 3 instructions per 64bits in siphash24() function

[23:29] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/409403222 https://github.com/MoarVM/MoarVM/compare/41108cdaaa07...f06a72567130

[23:29] *** travis-ci left
[23:42] *** travis-ci joined
[23:42] <travis-ci> MoarVM build failed. Samantha McVey 'Fix compiler warning from last commit

[23:42] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/409405134 https://github.com/MoarVM/MoarVM/compare/f06a72567130...7467836d7061

[23:42] *** travis-ci left
