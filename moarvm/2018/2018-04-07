[01:02] *** live_the_dream joined
[01:59] *** ilbot3 joined
[02:39] *** releasable6 joined
[03:43] *** Kaiepi joined
[03:45] *** Kaiepi joined
[03:45] *** Kaypie joined
[06:42] *** domidumont joined
[06:49] *** domidumont joined
[07:24] *** lizmat joined
[07:58] <Geth> ¦ MoarVM: fa167464ac | (Zoffix Znet)++ | src/math/bigintops.c

[07:58] <Geth> ¦ MoarVM: Define INFINITY for MVC

[07:58] <Geth> ¦ MoarVM:

[07:58] <Geth> ¦ MoarVM: Should unbreak build on Windows

[07:58] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fa167464ac

[08:41] *** brrt joined
[08:41] <brrt> good *

[08:41] <yoleaux> 6 Apr 2018 22:05Z <timotimo> brrt: don't worry about the "potential version skew detected" bug, it's entirely my fault and there'll be a fantastic patch that'll make everything nicer tomorrow or so

[08:42] <brrt> .ask timotimo i'm far too curiuos aa to what the issue might be

[08:42] <yoleaux> brrt: I'll pass your message to timotimo.

[08:42] <brrt> have been

[09:04] <timotimo> oh

[09:04] <yoleaux> 08:42Z <brrt> timotimo: i'm far too curiuos aa to what the issue might be

[09:05] <timotimo> so you'll debug it even if i rip it out completely? :)

[09:14] <timotimo> looks like currently we have an MVM_oops if fix_coderef ever gets called

[09:14] <timotimo> so i might not have to implement that part yet, if it's never used

[09:23] *** domidumont joined
[09:53] <timotimo> jnthn: my spesh inlining work leads me into deopt.c =o

[09:55] <jnthn> Congrats? :)

[09:57] <timotimo> hah, some guardconc instruction has a want of "0x1234"

[09:58] <timotimo> no, 011248

[09:58] <timotimo> 0x1248

[09:58] <jnthn> That...doesn't look like a pointer

[10:27] <nwc10> dear hackathon, please don't forget lunhc

[10:27] <nwc10> ah, oops, that won't highlght

[10:27] <nwc10> lunch

[10:27] <lizmat> LUNCH!  ;-)

[10:27] <lizmat> BRÖTCHEN!

[10:27] <nwc10> BIER

[10:27] <nwc10> (Pivo)

[10:28] <lizmat> .oO( Pivotal for a good hackathon )

[10:28] <nwc10> lizmat: I believe that ilmari has now configured "lunch" as an "alternative nick" in his IRC client

[10:28] <TimToady> here they only have Piwo...

[10:28] <nwc10> (not that he's at the hackathon)

[10:29] <nwc10> and, I guess, Wódka

[10:30] <nwc10> good *, *

[10:30] <timotimo> kuchen

[10:40] *** FROGGS joined
[10:46] <timotimo> jnthn: turns out, since the fixups are only ever invoked if we inline, turning inline off completely eliminates all code i have, and so finding the bug is completely impossible :D

[10:49] <jnthn> oh, of course!

[10:49] <jnthn> duh :)

[10:49] <jnthn> Shows how smart I am today :)

[10:49] <FROGGS> haha

[10:51] <timotimo> heyo FROGGS

[10:51] <FROGGS> o/

[11:02] *** lizmat joined
[12:01] <timotimo> the "much more elegant" code is rather a bit explosive

[12:06] <dogbert17> elegantly explosive

[12:08] <timotimo> i'm sitting in the splash zone and i can tell you it's not actually elegant

[12:15] <Geth> ¦ MoarVM/lazier_inline_fixups: b3ff8b78d8 | (Timo Paulssen)++ | 7 files

[12:15] <Geth> ¦ MoarVM/lazier_inline_fixups: try to make fixups on inline less bad

[12:15] <Geth> ¦ MoarVM/lazier_inline_fixups:

[12:15] <Geth> ¦ MoarVM/lazier_inline_fixups: very crashy

[12:15] <Geth> ¦ MoarVM/lazier_inline_fixups: review: https://github.com/MoarVM/MoarVM/commit/b3ff8b78d8

[12:37] <timotimo> ==31440== Thread 2:

[12:37] <timotimo> ==31440== Invalid write of size 8

[12:37] <timotimo> ==31440==    at 0x512962D: MVM_spesh_add_spesh_slot (optimize.c:79)

[12:37] <timotimo> ^- smoking is bad for a gun's health!

[12:45] <timotimo> fix_callsite and fix_str can have their inlinee changed to inliner and it won't do an invalid write any more, but it'll MoarVM panic: Deopt: did not find code object when uninlining

[12:49] <timotimo> so it's finding garbage in the code_ref_reg, but wouldnt that be set before entering the inline and thus not influenced by the fixed-up inline code at all?

[13:27] <jnthn> greppable6: APPEND_TO_ORIG

[13:27] <greppable6> jnthn, Found nothing!

[13:28] <jnthn> timotimo: Odd indeed, I thought that was just set up by the calling code

[13:30] <timotimo> could be that the inlinee writes some garbage to that register for some reason

[13:30] <jnthn> But inlines should only ever touch their own registers

[14:03] <FROGGS> damn, it doesnt help to be absent for a few years... inlined fixed sized CArrays arn't there still :S

[14:04] <FROGGS> example: class Foo is repr<CStruct> { has uint8 @.bar[32] is CArray; }

[14:04] <FROGGS> first I need to know what happens to [32] I guess

[14:14] <FROGGS> IIRC it became part of the attribute...

[14:27] <timotimo> jnthn: we're adding the STable to the spesh slots list when logging the facts of an invoke_o op, it comes from agg_type->st

[14:28] <timotimo> while optimizing EXPR

[14:33] <timotimo> the annotation that belongs to it has a bytecode offset of 322, but in the spesh log i only see 264 and 344

[14:33] <jnthn> timotimo: Hmm...I think we started to add facts for inlined code (nine++ did it iirc), is it happening during that phase?

[14:35] <timotimo> no, looks not to be the case

[14:35] <timotimo> #8  0x00007f3499f28fac in MVM_spesh_facts_discover (tc=0x23eb2f0, g=0x7f34900de110, p=0x7f34900cff50)

[14:35] <timotimo> at src/spesh/facts.c:659

[14:35] <timotimo> #9  0x00007f3499f2118f in MVM_spesh_candidate_add (tc=0x23eb2f0, p=0x7f34900cff50) at src/spesh/candidate.c:63

[14:35] <timotimo> #10 0x00007f3499f38d52 in worker (tc=0x23eb2f0, callsite=0x7f349a673360 <null_args_callsite>, args=0x0)

[14:35] <jnthn> Hm, ok

[14:35] <timotimo> maybe i'll drive home soon-ish

[14:38] <jnthn> Yeah, I'm a bit tired to look at it more for now also

[14:41] <timotimo> i was looking at a different candidate, actually

[14:41] <timotimo> now i see the logged at bytecode part that matches better

[14:41] <timotimo> 11 x type NQP::Grammar (Conc)

[14:41] <timotimo> 20 x static frame '!cursor_start_cur' (84) (caller is outer: 0, multi 0)

[14:41] <timotimo> 11 x type tuple:

[14:41] <timotimo> Type 0: NQP::Grammar (Conc)

[14:43] *** zakharyas joined
[14:48] *** zakharyas joined
[14:49] *** zakharyas joined
[14:50] *** AlexDaniel joined
[15:08] *** domidumont joined
[15:44] *** zakharyas joined
[17:16] *** dogbert17 joined
[18:35] *** zakharyas joined
[18:37] *** zakharyas joined
[19:11] *** zakharyas joined
[19:36] *** zakharyas joined
[19:51] *** lizmat joined
[22:07] <Geth> ¦ MoarVM/inlined-shaped-carray: 2ed75977a1 | (Tobias Leich)++ | 2 files

[22:07] <Geth> ¦ MoarVM/inlined-shaped-carray: Implement one dimensional inlined shaped CArrays

[22:07] <Geth> ¦ MoarVM/inlined-shaped-carray:

[22:07] <Geth> ¦ MoarVM/inlined-shaped-carray: A C(PP)Struct can now hold an inlined array with a fixed sized shape.

[22:07] <Geth> ¦ MoarVM/inlined-shaped-carray: There is one issue though. We always assumed that CArray attributes of CStructs

[22:07] <Geth> ¦ MoarVM/inlined-shaped-carray: will always hold pointers to other things than numeric types.

[22:07] <Geth> ¦ MoarVM/inlined-shaped-carray: I've changed the default for inlined CArray attributes which have a shape.

[22:07] <Geth> ¦ MoarVM/inlined-shaped-carray: The memory of the CArray slots will be inlined by default as well.

[22:07] <Geth> ¦ MoarVM/inlined-shaped-carray: If someone wants the opposite, (s)he can declare a CArray of pointers.

[22:07] <Geth> ¦ MoarVM/inlined-shaped-carray: review: https://github.com/MoarVM/MoarVM/commit/2ed75977a1

[22:07] <FROGGS> woohoo

[22:08] <jnthn> wow!

[22:08] <jnthn> FROGGS++

[22:08] <FROGGS> :D

[22:08] <FROGGS> hope it gets your approval

[22:09] <jnthn> Will take a look when I'm not about to fall asleep :)

[22:09] <jnthn> Nice long train journey tomorrow... :)

[22:09] <FROGGS> sure :o)

[22:11] <timotimo> holy wow

[22:11] <timotimo> that's a thing we've been wanting for so long!

[22:12] <FROGGS> I need that for my Box2D port, so I can finally continue to hack on my game

[22:13] <timotimo> i like to hear that!

[22:14] <FROGGS> jnthn: I hope the internet connection does not suck too much in germany

[22:14] <FROGGS> (while being on a train, that is)

[22:14] <jnthn> It was pretty alright on the ICE from Berlin - Hagen

[22:14] <jnthn> Will try it out on the Cologne - Munich one tomorrow :)

[22:16] * jnthn goes to rest ahead of that trip

[22:16] <jnthn> 'night

[22:17] <FROGGS> gnight jnthn
