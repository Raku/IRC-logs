[00:04] <AlexDaniel> timotimo: hmm‚Ä¶ what's the difference?

[00:05] <AlexDaniel> ‚ÄúQuiet" mode is pretty much like normal mode, in that it will still register your activity, and notice that you need to take a break, but it will not actually prompt you to take one, nor block you from using the computer‚Äù

[00:07] <timotimo> yeah

[00:07] <timotimo> how does it get in your way?

[00:14] *** Kaiepi joined
[00:36] <AlexDaniel> timotimo: it breaks the flow

[00:36] <timotimo> oh

[00:36] <timotimo> can always postpose

[00:36] <timotimo> postpone*

[00:37] <AlexDaniel> yeah or just disable :)

[00:38] <AlexDaniel> at first it was ok, then I started noticing that I am postponing way too much‚Ä¶ then I gave up :)

[00:39] <AlexDaniel> it's ok though, as it seems that my RSI is not coming back

[00:39] <MasterDuke> inclusive >100% seems like it could be fine

[00:39] <AlexDaniel> and my eyes, hmm‚Ä¶ I think I just need glasses

[00:47] <timotimo> there's no shame in that

[00:51] <MasterDuke> i am quite blind without them, worn them every day of my life since i was young

[00:52] <Geth> ¬¶ MoarVM/profiler_new_spesh_semantics: e14e666cf2 | (Timo Paulssen)++ | src/profiler/instrument.c

[00:52] <Geth> ¬¶ MoarVM/profiler_new_spesh_semantics: let sequence numbers start at 0 in the profile

[00:52] <Geth> ¬¶ MoarVM/profiler_new_spesh_semantics:

[00:52] <Geth> ¬¶ MoarVM/profiler_new_spesh_semantics: i don't think it'd be worth much to have them

[00:52] <Geth> ¬¶ MoarVM/profiler_new_spesh_semantics: match up exactly with the internal numbers

[00:52] <Geth> ¬¶ MoarVM/profiler_new_spesh_semantics: (in which case I'd only subtract 1)

[00:52] <Geth> ¬¶ MoarVM/profiler_new_spesh_semantics: review: https://github.com/MoarVM/MoarVM/commit/e14e666cf2

[00:59] <MasterDuke> does the "inclusive can go >100%" question have to be answered in moarvm? or can that be a toggle in the profile viewer?

[01:04] <MasterDuke> timotimo: ^^^

[01:11] <timotimo> the profile viewer would do it

[01:18] <MasterDuke> so you could just have a "scaled view" option or something like that?

[01:18] <samcv> AlexDaniel: i'll get the release ready later tonight

[01:18] <samcv> since it seems all is ok?

[01:18] <samcv> at least from what i read in #perl6-dev

[01:20] <timotimo> that'd work

[01:23] <MasterDuke> timotimo: oh, btw, both the close button on the bottom right and the x in the upper right don't work for me (FF 58 on kubuntu 17.10) on pop-up windows in the profile (e.g., after clicking "view" in the "allocating routines" column)

[01:27] <timotimo> yeah, known for years ;)

[01:28] <MasterDuke> heh

[01:40] <AlexDaniel> samcv: yeah, everything is ok

[02:57] *** ilbot3 joined
[03:29] *** greppable6 joined
[07:40] *** brrt joined
[07:40] <brrt> good * #moarvm

[07:40] <yoleaux> 18 Feb 2018 15:30Z <nine> brrt: MVM_SPESH_BLOCKING=1 MVM_SPESH_NODELAY=1 perl6 -Ilib t/spec/S09-typed-arrays/hashes.t

[07:40] <yoleaux> 18 Feb 2018 15:30Z <nine> brrt: fails with "Incompatible MROs in P6opaque rebless for types NQPClassHOW and QAST::WVal+{QAST::SpecialArg}" but passes with MVM_JIT_EXPR_DISABLE=1

[07:40] <yoleaux> 18 Feb 2018 15:59Z <nine> brrt: Please disregard that. I didn't realize that I was running with an experimental patch applied.

[07:40] <brrt> ohai nine

[07:41] <brrt> i almost had something similar pinned down, but this morning it's 'gone'

[07:51] *** domidumont joined
[07:57] *** domidumont joined
[08:13] *** brrt joined
[08:40] <Geth> ¬¶ MoarVM/jit-expr-optimizer: 13 commits pushed by (Bart Wiegmans)++

[08:40] <Geth> ¬¶ MoarVM/jit-expr-optimizer: review: https://github.com/MoarVM/MoarVM/compare/ac876f06a4ce...c7df8272c7c2

[09:18] *** zakharyas joined
[09:21] *** zakharyas joined
[09:27] *** zakharyas joined
[09:42] *** zakharyas joined
[11:28] *** zakharyas joined
[11:46] *** Kaiepi joined
[12:14] *** zakharyas joined
[12:52] *** dogbert2 joined
[13:39] <MasterDuke> brrt: i don't remember where the debugging left off. you figured out the getlexstatic_o problem?

[13:41] <brrt> did not

[13:42] <MasterDuke> ah. anything more i could get out of lldb to help?

[13:42] <brrt> ehm, maybe, but it's a pretty slow interface this way :-)

[13:42] <MasterDuke> heh, that it is

[13:58] *** domidumont1 joined
[14:06] *** zakharyas joined
[14:13] <MasterDuke> brrt: which of your recent commits was a fix for box_i?

[14:15] <MasterDuke> hm, maybe it wasn't specifically for box_i, but fixed it also

[14:18] *** zakharyas joined
[14:21] <brrt> i think the if_o -> istrue + if_o split

[14:22] <MasterDuke> k, thanks

[14:23] <Geth> ¬¶ MoarVM/jit-expr-optimizer: 95cffa2567 | (Bart Wiegmans)++ | 2 files

[14:23] <Geth> ¬¶ MoarVM/jit-expr-optimizer: Restore ^func macro

[14:23] <Geth> ¬¶ MoarVM/jit-expr-optimizer:

[14:23] <Geth> ¬¶ MoarVM/jit-expr-optimizer: Even though it is now useless, it doesn't hurt either, and it keeps

[14:23] <Geth> ¬¶ MoarVM/jit-expr-optimizer: us synchronized with master.

[14:23] <Geth> ¬¶ MoarVM/jit-expr-optimizer: review: https://github.com/MoarVM/MoarVM/commit/95cffa2567

[14:35] *** domidumont joined
[14:37] <MasterDuke> brrt: how do i pass a NULL to a function in a template?

[14:38] <brrt> just (const 0)

[14:38] <brrt> (const 0 ptr_sz)

[14:38] <MasterDuke> k, thanks

[14:38] <brrt> :-)

[14:41] *** zakharyas joined
[14:48] *** zakharyas joined
[14:58] <MasterDuke> huh. box_i is fine, but adding box_s causes `Cannot look up attributes in a VMNull type object    at src/Perl6/Grammar.nqp:4018` when building rakudo

[15:42] *** zakharyas joined
[16:00] *** releasable6 joined
[16:01] *** brrt joined
[16:19] *** buggable joined
[16:20] *** buggable joined
[16:20] *** huggable joined
[16:21] <MasterDuke> that's being thrown from getattr_s, `if (!IS_CONCRETE(obj)) MVM_exception_throw_adhoc(tc, "Cannot look up attributes in a %s type object", MVM_6model_get_debug_name(tc, obj));`

[16:21] *** ZofBot joined
[16:32] <MasterDuke> .ask brrt is this something i could use the jit-bisect tool for? https://irclog.perlgeek.de/moarvm/2018-02-19#i_15834025

[16:32] <yoleaux> MasterDuke: I'll pass your message to brrt.

[16:33] *** brrt joined
[16:52] *** nativecallable6 joined
[16:52] *** bisectable6 joined
[16:52] *** releasable6 joined
[16:52] *** bloatable6 joined
[16:52] *** reportable6 joined
[16:52] *** committable6 joined
[16:52] *** quotable6 joined
[16:52] *** coverable6 joined
[16:52] *** notable6 joined
[16:52] *** benchable6 joined
[16:53] *** evalable6 joined
[16:53] *** statisfiable6 joined
[16:53] *** unicodable6 joined
[16:53] *** greppable6 joined
[16:53] *** squashable6 joined
[16:53] *** shareable6 joined
[16:59] <MasterDuke> brrt: i just tried running `perl ..//MoarVM/tools/jit-bisect.pl -- <the command to compile rakudo's core setting>`. will that do what i want?

[16:59] <brrt> usually yes

[16:59] <yoleaux> 16:32Z <MasterDuke> brrt: is this something i could use the jit-bisect tool for? https://irclog.perlgeek.de/moarvm/2018-02-19#i_15834025

[17:00] <MasterDuke> the rakudo compile doesn't segfault, just exits from a thrown exception

[17:00] <brrt> doesn't matter, as long as it exits anomalously

[17:00] <MasterDuke> cool

[17:01] <MasterDuke> working on last frame = 128 now

[17:01] <MasterDuke> probably should have run it on my desktop

[17:02] <MasterDuke> ah, 256 was not ok

[17:13] *** bisectable6 joined
[17:26] <MasterDuke> .ask brrt there wasn't any output from the two jit-comparify-asm.pl calls at the end, is that expected?

[17:26] <yoleaux> MasterDuke: I'll pass your message to brrt.

[17:26] <MasterDuke> oh, there are some log files created

[17:28] <MasterDuke> .ask brrt if i put the two sets of .bin, .asm, and .log files somewhere you could get them would you be able to use them?

[17:28] <yoleaux> MasterDuke: I'll pass your message to brrt.

[17:42] *** domidumont joined
[18:16] *** bart__ joined
[18:16] <brrt> .

[18:16] <yoleaux> 17:26Z <MasterDuke> brrt: there wasn't any output from the two jit-comparify-asm.pl calls at the end, is that expected?

[18:16] <yoleaux> 17:28Z <MasterDuke> brrt: if i put the two sets of .bin, .asm, and .log files somewhere you could get them would you be able to use them?

[18:16] <brrt> yes, and yes, on both counts

[18:19] <MasterDuke> cool, let me put them somewhere...

[18:20] <brrt> you can skip the .bins, they might not pass the malwarwe filters

[18:21] <MasterDuke> try https://gist.github.com/MasterDuke17/be6b651f2ee64dda09f30c3d39d0215a

[18:34] *** domidumont joined
[20:18] *** brrt joined
[20:23] <samcv> brrt: any clue how much speed increase we get when an op has a JIT expression template added?

[20:24] <brrt> per op, negligible

[20:24] <brrt> or 'it depends'

[20:32] <MasterDuke> the value comes from being able to combine multiple ops/blocks and perform optimizations on the combination, so a missing template forces an end to optimization potential

[20:32] <MasterDuke> is my understanding

[20:33] <MasterDuke> brrt: is ^^^ somewhat correct?

[20:34] <samcv> well. that description sounds like A Good Thing‚Ñ¢

[20:39] <brrt> that is more or less correct

[20:40] <brrt> and in some cases, the expr jit can generate better code

[20:40] <brrt> but the difficulty is that it effectively competes against handwritten assembly

[20:40] <samcv> competes? in what sennse

[20:40] <samcv> *sense

[20:43] <MasterDuke> compared to the "lego" jit i believe

[20:43] <brrt> yeah

[20:44] <brrt> the lego jit composes together handwritten pieces

[20:44] <brrt> the expr jit compiles together invidiual instructions

[20:45] <MasterDuke> brrt: btw, see anything in those log files?

[20:45] <brrt> people who write assembly by hand can be cleverer than programs

[20:45] <brrt> probably, but i'm not actively looking atm :-)

[20:45] <brrt> i'm trying to debug my washing machine

[20:45] <brrt> well, i've debugged it, with the help of that wonderful thing called The Internet

[20:46] <MasterDuke> heh. doubt that involves looking at assembly

[20:52] <brrt> it does involve disassembly though

[20:55] <MasterDuke> of drum memory?

[20:59] <brrt> not the drum, the water inlet valve, as a matter of fact

[22:46] <timotimo> water has memory!

[22:46] <timotimo> (wow, i'm fashionably late to this party)

[23:01] <samcv> Disable getlexstatic_o for the time being # is this still disabled?

[23:20] <MasterDuke> samcv: yeah

[23:20] <samcv> ok cool

[23:29] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/02/19/2018-08-perl-6ya-giris/

[23:30] <timotimo> yay
