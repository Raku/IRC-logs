[00:12] <japhb> jnthn: Good luck on the vote!

[01:20] *** AlexDaniel joined
[02:57] *** ilbot3 joined
[03:35] *** Util joined
[06:51] *** brrt joined
[07:08] <brrt> good *

[07:08] <brrt> samcv: re names, why not suffix the ops with _strict

[07:08] <brrt> so nqp::encode_strict()

[07:08] <samcv> i could do that

[07:09] <brrt> although

[07:09] <brrt> from a JIT compilers' perspective

[07:09] <brrt> i'd rather have a nqp::encode_strict that would -fail- and then have the caller throw, than to have the op throw

[07:09] <brrt> i'm not sure how practical that is

[07:10] <brrt> because you'd need to return a boolean while taking a buffer-out argument

[07:52] *** domidumont joined
[07:57] *** domidumont joined
[08:04] *** brrt joined
[08:42] *** brrt left
[08:42] *** brrt joined
[09:41] *** AlexDaniel joined
[11:43] *** AlexDaniel joined
[12:03] *** SmokeMachine joined
[12:27] *** Zoffix joined
[12:28] <Zoffix> Reminder that there is a release blocker JIT bug R#1483

[12:28] <synopsebot> R#1483 [open]: https://github.com/rakudo/rakudo/issues/1483 [SEGV][regression][âš  blocker âš ] Cross-HLL inlining segfault 

[12:29] <brrt> i know i know

[12:29] <Zoffix> I don't know anything about JIT but I could try to do the legwork for the fix if someone points to where to start. Ticket comments say "jit-bisect pinpoints it to a miscompile - in all probability in a template of sp_p6ogetvt_o."

[12:29] <brrt> so

[12:29] <brrt> i have a patch for part of the miscompile,

[12:29] <brrt> but i have no patch for the other part of the miscompile, because i can't figure out what it is

[12:29] <Zoffix> oh

[12:29] <brrt> figuring that out takes time because it means stepping trhough the assembly and seeing what's changing

[12:30] <brrt> which i can do

[12:30] <brrt> but it's hard

[12:30] <brrt> and takes time

[12:30] <Zoffix> (that's probably a few levels up from my current skill level :))

[12:31] <brrt> i'd rather think a few levels lateral from your current skill level :-)

[12:31] <brrt> thing is, that template has been with us for a while

[12:44] <Geth> Â¦ MoarVM: 296620e862 | (Bart Wiegmans)++ | src/jit/linear_scan.c

[12:44] <Geth> Â¦ MoarVM: Register allocator should process all live ranges on worklist

[12:44] <Geth> Â¦ MoarVM:

[12:44] <Geth> Â¦ MoarVM: In order to ensure that we have set up function call arguments

[12:44] <Geth> Â¦ MoarVM: properly, we need to iterate over every tile during linear scan

[12:44] <Geth> Â¦ MoarVM: allocation, even after the last live range in the worklist has been

[12:44] <Geth> Â¦ MoarVM: processed. However, during tile processing we might still create new

[12:44] <Geth> Â¦ MoarVM: live ranges (e.g. when we spill a value).

[12:44] <Geth> Â¦ MoarVM:

[12:44] <Geth> Â¦ MoarVM: This fixes a miscompile in sp_p6ogetvt_o which affects rakudo issue

[12:44] <Geth> Â¦ MoarVM: 4283, but that issue is not fixed with this commit.

[12:44] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/296620e862

[12:51] *** Zoffix left
[12:57] *** notable6 joined
[12:57] *** coverable6 joined
[12:57] *** greppable6 joined
[13:00] *** travis-ci joined
[13:00] <travis-ci> MoarVM build passed. Bart Wiegmans 'Register allocator should process all live ranges on worklist

[13:00] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/339437956 https://github.com/MoarVM/MoarVM/compare/4f6938800350...296620e86288

[13:00] *** travis-ci left
[15:27] *** lizmat joined
[15:42] *** statisfiable6 joined
[16:24] <dogbert17> one of the examples given in RT #125978 tends to crash at the same place, i.e https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/P6opaque.c#L1214

[16:24] <synopsebot> RT#125978 [open]: https://rt.perl.org/Ticket/Display.html?id=125978 [CONC] [SEGV] (and other crashes) when using .hyper

[16:24] <dogbert17> there's a slightly worrying comment a few lines above: /* Copy existing to new.

[16:24] <dogbert17> * XXX Need more care here, as may have to re-barrier pointers. */

[16:26] <dogbert17> more specifically ASAN writes: ==21770== ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x9f904c30

[17:02] *** brrt joined
[17:32] *** AlexDaniel joined
[17:39] *** domidumont joined
[17:51] *** Ven`` joined
[18:43] *** Ven` joined
[20:31] *** brrt joined
[22:01] *** brrt joined
