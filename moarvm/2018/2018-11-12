[00:30] *** Kaiepi left
[00:43] *** MasterDuke joined
[00:43] *** p6bannerbot sets mode: +v MasterDuke

[00:43] *** MasterDuke left
[00:43] *** MasterDuke joined
[00:43] *** herbert.freenode.net sets mode: +v MasterDuke

[00:43] *** p6bannerbot sets mode: +v MasterDuke

[00:54] <timotimo> made some progress today for more detailed deopt

[01:06] <MasterDuke> something for the profiler?

[01:07] *** Kaiepi joined
[01:07] <timotimo> aye

[01:07] <timotimo> the current profiler gives you "how often did which frames deopt_one or deopt_all"

[01:07] <timotimo> i want the new one to display what expectations were violated, and by what.

[01:07] *** p6bannerbot sets mode: +v Kaiepi

[01:30] <timotimo> getting a strange segfault

[02:09] <timotimo> nine: if you could remove sp_* and prof_* and similar ops from the functions that write ops in MAST/Ops.nqp that'd be good

[02:11] <timotimo> among other things because if you write any of these ops to your own code, the bytecode validator will yell at you

[02:11] <timotimo> only spesh is allowed to build these

[02:13] <timotimo> i wonder if perhaps a few of these functions should be re-used, i.e. whenever two opcodes have the exact same signature, which probably happens a bunch with the mathy ones

[02:18] <timotimo> also, i wonder if $*MAST_FRAME is a major performance drain

[02:24] <timotimo> rr replay being extremely slow right now :|

[05:58] *** lizmat left
[06:40] *** nebuchadnezzar left
[06:40] *** nebuchad` joined
[06:41] *** p6bannerbot sets mode: +v nebuchad`

[06:52] <nine> timotimo: aye, $*MAST_FRAME cannot be good for performance. Alas adding a :$bytecode = $*MAST_FRAME.bytecode arg and passing it in in any place that already had access did not produce any measurable performance benefit :/

[06:52] *** nebuchad` is now known as nebuchadnezzar

[06:58] *** lizmat joined
[06:58] *** p6bannerbot sets mode: +v lizmat

[07:19] *** domidumont joined
[07:20] *** p6bannerbot sets mode: +v domidumont

[07:39] *** robertle joined
[07:39] *** p6bannerbot sets mode: +v robertle

[08:24] *** zakharyas joined
[08:25] *** p6bannerbot sets mode: +v zakharyas

[08:37] *** dalek left
[09:24] *** dogbert11 left
[10:56] *** domidumont left
[12:01] <timotimo> OK!

[12:01] <timotimo> maybe the dynamic var cache is really hot for this one

[12:23] *** domidumont joined
[12:24] *** p6bannerbot sets mode: +v domidumont

[12:45] *** zakharyas left
[14:13] <dogbert2_> ok, so there seems to be one bug left in nine++ recent work

[14:36] <nine> just one? :)

[14:53] *** reportable6 left
[14:53] *** reportable6 joined
[14:53] *** p6bannerbot sets mode: +v reportable6

[14:54] <dogbert2_> :) one I 'know'

[14:55] <dogbert2_> nine: take a look at this: https://gist.github.com/dogbert17/f57316a449deff98346e4ae1e3b9f465

[14:55] *** undersightable6 left
[14:55] *** undersightable6 joined
[14:56] *** p6bannerbot sets mode: +v undersightable6

[15:02] *** zakharyas joined
[15:03] *** p6bannerbot sets mode: +v zakharyas

[15:07] <timotimo> ugh, could this please finally crash properly under rr thanks

[15:07] <nine> dogbert2_: timotimo may have been on the right track but in the wrong place. Look at lib/MAST/Nodes.nqp:853. Here's also a + but this time the operands are not guaranteed to be int32

[15:08] <nine> No idea though why this would fail only sometimes

[15:13] *** dalek joined
[15:14] *** Geth_ joined
[15:14] *** synopsebot_ joined
[15:14] *** p6lert_ joined
[15:14] *** synopsebot left
[15:14] *** Geth left
[15:14] *** p6bannerbot sets mode: +v dalek

[15:14] *** p6bannerbot sets mode: +v Geth_

[15:14] *** p6bannerbot sets mode: +v synopsebot_

[15:14] *** p6bannerbot sets mode: +v p6lert_

[15:15] *** p6lert left
[15:15] *** SourceBaby left
[15:19] <dogbert2_> nine: cool I'll try it out using timotimo's add_i suggestion

[15:33] <dogbert2_> nine, timotimo: I changed line 853 to '%!labels{nqp::iterkey_s($_)} := nqp::add_i(nqp::iterval($_), $insert_offset);' and now I get this instead ...

[15:33] <dogbert2_> Duplicate label at 341678 at /home/dogbert/repos/rakudo/install/bin/../share/nqp/lib/MAST/Nodes.nqp:1088  (/home/dogbert/repos/rakudo/install/share/nqp/lib/MASTNodes.moarvm:add-label)

[15:34] <dogbert2_> the number given for the duplicate label changes with each run

[15:35] <timotimo> what the heck ...

[15:37] <nine> the number is just the objectid

[15:38] <timotimo> so maybe it gets further after something borked earlier ...

[15:41] <timotimo> grrr

[15:41] <timotimo> now i'm trying to debugprint something and gdb believes that MVMP6int doesn't exist

[16:00] *** domidumont left
[16:29] *** TimToady left
[16:29] *** TimToady joined
[16:29] *** tolkien.freenode.net sets mode: +v TimToady

[16:29] *** p6bannerbot sets mode: +v TimToady

[16:51] *** zakharyas left
[16:52] *** reportable6 left
[16:52] *** reportable6 joined
[16:52] *** p6bannerbot sets mode: +v reportable6

[17:27] *** domidumont joined
[17:28] *** p6bannerbot sets mode: +v domidumont

[18:02] *** robertle left
[19:41] *** domidumont left
[22:02] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/11/12/2018-45-46-post-diwali/

