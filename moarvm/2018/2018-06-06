[00:00] <japhb> I ... dunno?  The last time I ran it, it worked on my install, which has a few non-core Perl 5 add-ons, but not like half of CPAN or anything.

[00:01] <MasterDuke> it may be simpler just to start with 2018, ISTR some Configure.pl changes in 2016 or 2017

[00:01] <MasterDuke> because of '.' no longer being in @INC and things like that

[00:02] <MasterDuke> there's some command line option to start at a certain point in time?

[00:03] <MasterDuke> ah.. https://github.com/MoarVM/MoarVM/issues/403

[00:06] <japhb> I tried to make https://github.com/japhb/perl6-bench/blob/master/bench relatively easy to understand/hack on.

[00:06] <japhb> timeall and analyze were necessarily less transparent.

[00:06] <japhb> :-/

[06:39] *** domidumont joined
[06:44] *** domidumont left
[06:45] *** domidumont joined
[07:15] *** robertle joined
[07:31] *** brrt joined
[07:32] <brrt> good *

[07:32] <yoleaux> 5 Jun 2018 21:24Z <samcv> brrt: it seems slower by the testing i've done

[07:32] <brrt> yeah, i'm not entirely sure that is a test that benefits that much by the JIT though :-)

[07:32] <samcv> brrt: 4.54 before after 4.60 for this thing

[07:32] <samcv> dd if=/dev/urandom bs=100 count=800000 | base64 > /tmp/stuff;  perl6 -e 'use nqp; my $hash := nqp::hash(); my @file = "/tmp/stuff".IO.slurp.lines; my $t1 = now; for @file { nqp::bindkey($hash, $_, 1) };my $t2 = now; for @file { nqp::atkey($hash, $_) }; '

[07:33] <samcv> and those times i ran it before 100 times, then ran it after the changes 100 times, then 100 times of before and after again

[07:33] <samcv> then averaged the scores

[07:33] <brrt> hmmm

[07:33] <samcv> also both before runs were slower than either after runs.

[07:34] <brrt> just for giggles, have you tried running that with MVM_JIT_DISABLE

[07:34] <samcv> no i haven't. should i?

[07:34] <brrt> try it out

[07:34] <samcv> though actually

[07:34] <samcv> is it up to date with master?

[07:34] <brrt> not 100% sure it is

[07:35] <brrt> you've been productive the last few weeks :-)

[07:35] <samcv> that could be why

[07:35] <samcv> :-)

[07:36] <samcv> the speed difference may have been from https://github.com/MoarVM/MoarVM/commit/f0a837c41

[07:38] <brrt> yeah, let me just check if the branch has that

[07:40] <brrt> nope, it should have that commit

[07:40] <brrt> weird. and distressing

[07:40] <samcv> hm

[07:45] <brrt> it compiles less code and does less work

[07:48] <samcv> brrt: i don't see that utf8 speed commit in that branch

[08:02] *** lizmat joined
[08:03] *** zakharyas joined
[08:07] <brrt> hang on.. there's a way to check it out

[08:08] <brrt> jit-stack-walker should have it, for sure

[08:09] <samcv> hmm oh i think it wasn't fully updated

[08:26] *** zakharyas left
[08:28] *** zakharyas joined
[08:35] <samcv> ok i'm getting 4.38 after the changes and 4.35 before

[08:35] <samcv> i gotta head to bed right now though

[08:36] <samcv> night o/

[08:40] <brrt> good night

[08:40] <brrt> (i'm still going to call that 'noise', though :-))

[09:27] <brrt> .tell japhb perl6-bench doesn't work today anymore

[09:27] <yoleaux> brrt: I'll pass your message to japhb.

[09:34] *** brrt left
[10:14] *** domidumont left
[10:27] *** brrt joined
[10:58] <brrt> naive perl6 is still depressingly slow though...

[10:59] <brrt> this while type-specialized nqp is pretty fast

[11:15] <brrt> m: say 1.034/0.993

[11:15] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´1.041289‚ê§¬ª

[11:15] <brrt> meh, that's not so bad

[11:15] <brrt> this is on a hopelessly happy-case for the JIT, though, with explicitly-annotated ints

[11:26] *** lizmat left
[11:49] *** lizmat joined
[11:52] *** zakharyas left
[12:35] *** brrt left
[12:56] *** zakharyas joined
[13:07] *** brrt joined
[13:39] *** zakharyas left
[13:40] *** zakharyas joined
[13:52] <brrt> in other 'OpenBSD hates JIT compilers' news: https://marc.info/?l=openbsd-cvs&m=152824407931917&w=2

[13:59] *** lizmat left
[14:06] <jnthn> o/ brrt

[14:06] <jnthn> Hope my review was of some use :)

[14:09] <brrt> it was, thanks

[14:10] <brrt> i've figured out why we don't put `MVM_frame_effective_bytecode` in `frame.h` - at the point frame.h is included, `compile.h` (responsible for `MVMJitCode`) is not, so `MVMJitCode` isn't yet a complete type

[14:10] <brrt> in another refactor, I want to inline that stuff into the spesh candidate anyway

[14:10] <brrt> but that's for another day

[14:11] <jnthn> OK

[14:12] <brrt> i'm not feeling like figuring out a better ordering right now, although I suspect that we can include the spesh headers before core/frame.h

[14:14] <jnthn> It's OK to move it, just wanted to know there was a reasonable reason :)

[14:19] <Geth> ¬¶ MoarVM/jit-stack-walker: 7f39e47a56 | (Bart Wiegmans)++ | 2 files

[14:19] <Geth> ¬¶ MoarVM/jit-stack-walker: Fix some review things

[14:19] <Geth> ¬¶ MoarVM/jit-stack-walker:

[14:19] <Geth> ¬¶ MoarVM/jit-stack-walker: Leftover commented code and comments that had become stale

[14:19] <Geth> ¬¶ MoarVM/jit-stack-walker: review: https://github.com/MoarVM/MoarVM/commit/7f39e47a56

[14:20] <brrt> anyway, if it's okay with you, i'll hit the 'merge' button then :-)

[14:23] <jnthn> +1

[14:25] *** lizmat joined
[14:36] <Geth> ¬¶ MoarVM/master: 20 commits pushed by (Bart Wiegmans)++

[14:36] <Geth> ¬¶ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/2052888ebabb...5835aa7c4331

[14:36] <brrt> done

[14:36] <brrt> now all that is left is to blog about it :-)

[14:37] <nwc10> and then beer? or have you been doing that already?

[14:38] <brrt> no beer, not yet

[14:38] <brrt> good point though

[14:38] <nwc10> glad to be of *some* use

[14:38] <nwc10> but not very much - can't even *buy* you the beer. At least, not this one this time.

[14:41] <brrt> hehe. Are you planning on going to TPC?

[15:26] <brrt> i'm slightly afraid of the whole type punning situation in C now

[15:27] <jnthn> Cast your fears into the void...

[15:29] <nwc10> brrt: apparently I am: http://act.perlconference.org/tpc-2018-glasgow/talk/7349

[15:33] <brrt> oh, i recall seeing that

[15:33] <brrt> cool

[15:33] <brrt> jnthn: thing is, i was planning on doing the following evil trick

[15:33] <brrt> union { struct { MVM_VECTOR_DECL(MVMJitExprNode, nodes); }; struct { MVM_VECTOR_DECL(MVMuint32, links); } };

[15:34] <brrt> this will give me a vector links and nodes, aliased to the same thing

[15:34] <brrt> i thought that was kind of cool

[15:34] <nwc10> as found by one of work's sysamdins: https://img.pr0gramm.com/2018/06/06/61e7e58b70ecefff.jpg

[15:34] <dogbert17> brrt++

[15:35] <dogbert17> brrt, there might be a bug lurking in your latest merge

[15:35] <dogbert17> got this: https://gist.github.com/dogbert17/f2a82fc084cb9fa7212d7b6b559649a4

[15:35] <brrt> tell me

[15:36] <brrt> i'll be surprised, I didn't add any additional free()

[15:36] <brrt> hmmmm

[15:36] <brrt> i'll try to reproduce

[15:36] <brrt> thanks dogbert17++

[15:36] <nwc10> ASAN is very excited

[15:36] <brrt> hehe, or so i hear

[15:37] <nwc10> brrt: ASAN is excited by t/qast/01-qast.t

[15:37] <nwc10> same error trace as that valgrind report

[15:40] <brrt> ok. thanks. I'll debug

[15:46] *** robertle left
[15:46] <brrt> use-after-free, i'm an idiot

[15:47] <Geth> ¬¶ MoarVM: c58dadb1a8 | (Bart Wiegmans)++ | src/core/frame.c

[15:47] <Geth> ¬¶ MoarVM: [frame.c] use-after-free fix

[15:47] <Geth> ¬¶ MoarVM:

[15:47] <Geth> ¬¶ MoarVM: Oops, didn't recognise ud == sr_data, so didn't see the use-after-free.

[15:47] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c58dadb1a8

[15:47] <brrt> thanks nwc10++, dogbert17++

[15:50] <dogbert17> brrt++, you made short work of that one :)

[15:58] *** Redfoxmoon left
[16:00] *** Redfoxmoon joined
[16:01] *** Redfoxmoon left
[16:01] *** Redfoxmoon joined
[16:25] *** Geth joined
[16:45] *** robertle joined
[16:57] *** AlexDaniel joined
[17:06] *** zakharyas left
[17:13] *** zakharyas joined
[17:46] *** zakharyas left
[18:04] *** brrt left
[18:09] *** lizmat left
[18:57] *** Merfont is now known as Kaiepi

[19:12] *** domidumont joined
[19:24] *** domidumont left
[19:45] <japhb> .

[19:45] <yoleaux> 09:27Z <brrt> japhb: perl6-bench doesn't work today anymore

[19:46] <japhb> .tell brrt MasterDuke found it was just a couple lines that needed to be patched to get perl6-bench working with HEAD again.

[19:46] <yoleaux> japhb: I'll pass your message to brrt.

[19:47] * japhb had totally forgotten he gave lizmat++ merge rights in the perl6-bench repo -- Thanks lizmat!

[19:47] <Kaiepi> i wasn to get into coding for moarvm at some point

[19:47] <Kaiepi> it's been helping a lot with learning c

[20:19] *** zakharyas joined
[20:35] *** TimToady joined
[20:44] *** jimmyz joined
[20:48] *** jimmyz left
[20:57] *** zakharyas left
[21:38] *** MasterDuke joined
[22:08] *** MasterDuke left
[22:23] *** lizmat joined
[22:29] *** moritz left
[22:30] *** moritz joined
[22:36] *** MasterDuke joined
[23:24] *** Redfoxmoon left
[23:29] *** Redfoxmoon joined
