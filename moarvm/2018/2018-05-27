[00:17] *** shareable6 left
[01:28] <Geth> ¦ MoarVM: 7e9dbbe402 | (Timo Paulssen)++ | src/debug/debugserver.c

[01:28] <Geth> ¦ MoarVM: don't hit the same breakpoint over and over

[01:28] <Geth> ¦ MoarVM:

[01:28] <Geth> ¦ MoarVM: this is still not correct when a line has

[01:28] <Geth> ¦ MoarVM: invocations in it, which can cause it to be

[01:28] <Geth> ¦ MoarVM: hit twice or more times, but it's better

[01:28] <Geth> ¦ MoarVM: than it was.

[01:28] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7e9dbbe402

[01:28] <Geth> ¦ MoarVM: ffa9cb6bc5 | (Timo Paulssen)++ | src/instrument/line_coverage.c

[01:28] <Geth> ¦ MoarVM: comment out some semi-dead code

[01:28] <Geth> ¦ MoarVM:

[01:28] <Geth> ¦ MoarVM: the code may want to come back at some point.

[01:28] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ffa9cb6bc5

[01:33] *** Kaiepi left
[01:43] *** Kaiepi joined
[01:45] <samcv> jnthn: are you for or against something like this https://cry.nu/p/ukrf

[01:47] *** ilbot3 left
[01:47] <samcv> to speed up paths which are very common

[01:56] *** ilbot3 joined
[02:28] *** zakharyas joined
[03:05] *** Kaiepi left
[03:42] *** zakharyas left
[04:07] *** Kaiepi joined
[04:27] <Geth> ¦ MoarVM: e7f5f64a74 | (Samantha McVey)++ | 3 files

[04:27] <Geth> ¦ MoarVM: Use the Unicode db defines instead of querying property codes on init

[04:27] <Geth> ¦ MoarVM:

[04:27] <Geth> ¦ MoarVM: This code was added long before we got define's for the property

[04:27] <Geth> ¦ MoarVM: codes. Remove the code that initialized these variables on boot and

[04:27] <Geth> ¦ MoarVM: instead just use defines.

[04:27] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e7f5f64a74

[04:28] <Geth> ¦ MoarVM: 7411fb4c99 | (Samantha McVey)++ | src/strings/ops.c

[04:28] <Geth> ¦ MoarVM: Remove an unneeded variable from grapheme_is_cclass

[04:28] <Geth> ¦ MoarVM:

[04:28] <Geth> ¦ MoarVM: May not affect the generated code, but it can't hurt.

[04:28] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7411fb4c99

[05:32] *** robertle left
[05:53] <Geth> ¦ MoarVM: aed4e3886f | (Samantha McVey)++ | src/strings/ops.c

[05:53] <Geth> ¦ MoarVM: Handle synthetics and normalization property in string bitwise ops

[05:53] <Geth> ¦ MoarVM:

[05:53] <Geth> ¦ MoarVM: Previously we could XOR, AND or OR synthetics and the result could be

[05:53] <Geth> ¦ MoarVM: explosive, creating non-existent synthetics (in addition to not doing it

[05:53] <Geth> ¦ MoarVM: by codepoint as the user would expect).

[05:53] <Geth> ¦ MoarVM:

[05:53] <Geth> ¦ MoarVM: Now we iterate by codepoint and then at the end of doing the operation

[05:53] <Geth> ¦ MoarVM: <…commit message has 5 more lines…>

[05:53] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/aed4e3886f

[06:00] *** robertle joined
[06:07] <samcv> night all

[07:02] *** domidumont joined
[07:08] *** domidumont left
[07:09] *** domidumont joined
[08:00] *** domidumont left
[08:00] *** domidumont joined
[09:00] *** domidumont left
[11:56] <jnthn> samcv: Hmm, I'd thought the compiler might already be doing something like that, from various stack traces I've seen. Also the JIT does such an optimization already. I guess if there's a measurable win then I don't mind it, though

[13:10] *** domidumont joined
[13:35] <dogbert17> .seen samcv

[13:35] <yoleaux> I saw samcv 13:14Z in #perl6-dev: <samcv> good *

[13:36] <samcv> hi

[13:37] <dogbert17> samcv: should it be possible to run e.g. spectest with both MVM_DEBUG_NFG 1 MVM_DEBUG_NFG_STRICT set to  1?

[13:37] <samcv> dogbert17: yes

[13:38] <dogbert17> dogbert@dogbert-VirtualBox ~/repos/rakudo $ ./perl6 t/02-rakudo/08-repeat.t

[13:38] <dogbert17> 1..5

[13:38] <dogbert17> MoarVM panic: Memory allocation failed; could not allocate 8589934592 bytes

[13:38] <dogbert17> samcv ^^

[13:38] <samcv> dogbert17: yep. don't run that test with those two on :)

[13:39] <dogbert17> :-)

[13:39] <samcv> since it tries to do a repeat over over 90000000000 graphemes or something

[13:39] <samcv> i know it's ridiculously large

[13:39] <dogbert17> ok, sounds fair

[13:40] <dogbert17> what about t/concurrency/02-lock.t, in the nqp test suite, that one hangs (or is veeery slow)

[13:41] <samcv> well it should work

[13:42] <samcv> i remember it being slow though

[13:43] <dogbert17> seems to use all my memory

[13:43] <samcv> yeah. that could happen

[13:44] <dogbert17> perhaps I should drop the strict flag

[14:59] *** shareable6 joined
[14:59] *** brrt joined
[15:16] *** robertle left
[15:23] *** brrt left
[15:39] *** AlexDaniel left
[15:40] *** AlexDaniel joined
[15:53] *** robertle joined
[16:16] *** robertle left
[17:31] *** MasterDuke left
[17:41] *** MasterDuke joined
[18:27] <Geth> ¦ MoarVM: fede5cf506 | (Samantha McVey)++ | src/strings/ops.c

[18:27] <Geth> ¦ MoarVM: Fix the bitwise ops so STRAND_CHECK is done on result string

[18:27] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fede5cf506

[18:53] *** domidumont left
[19:01] *** domidumont joined
[19:10] *** domidumont left
[19:20] *** shareable6 left
[21:08] *** Kaiepi left
[21:09] *** Kaiepi joined
