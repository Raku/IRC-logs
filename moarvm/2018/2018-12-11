[00:53] *** MasterDuke joined
[00:53] *** p6bannerbot sets mode: +v MasterDuke

[00:54] *** MasterDuke left
[00:54] *** MasterDuke joined
[00:54] *** herbert.freenode.net sets mode: +v MasterDuke

[00:54] *** p6bannerbot sets mode: +v MasterDuke

[01:48] *** lucasb left
[01:50] *** reportable6 left
[01:50] *** committable6 left
[01:50] *** evalable6 left
[01:50] *** squashable6 left
[01:50] *** releasable6 left
[01:51] *** reportable6 joined
[01:51] *** committable6 joined
[01:52] *** releasable6 joined
[01:52] *** p6bannerbot sets mode: +v reportable6

[01:52] *** p6bannerbot sets mode: +v committable6

[01:52] *** p6bannerbot sets mode: +v releasable6

[01:55] *** squashable6 joined
[01:55] *** evalable6 joined
[01:55] *** lizmat left
[01:56] *** p6bannerbot sets mode: +v squashable6

[01:56] *** p6bannerbot sets mode: +v evalable6

[03:18] *** timotimo left
[03:26] *** timotimo joined
[03:26] *** p6bannerbot sets mode: +v timotimo

[03:53] *** avar left
[04:12] *** MasterDuke left
[06:15] *** dalek left
[06:17] *** Geth left
[06:50] *** dalek joined
[06:50] *** p6lert left
[06:50] *** p6lert_ joined
[06:50] *** Geth joined
[06:50] *** SourceBaby left
[06:50] *** p6bannerbot sets mode: +v dalek

[06:50] *** p6bannerbot sets mode: +v p6lert_

[06:50] *** p6bannerbot sets mode: +v Geth

[06:57] *** domidumont joined
[06:58] *** p6bannerbot sets mode: +v domidumont

[07:17] <nine> .tell robertle yes, writeuint is an integral part of every compilation. There's no way around it if you want to generate bytecode. Which makes your result all the more baffling.

[07:17] <yoleaux> nine: I'll pass your message to robertle.

[07:30] *** robertle joined
[07:30] *** p6bannerbot sets mode: +v robertle

[07:46] <robertle> morning

[07:46] <yoleaux> 07:17Z <nine> robertle: yes, writeuint is an integral part of every compilation. There's no way around it if you want to generate bytecode. Which makes your result all the more baffling.

[07:48] <robertle> yes, I was stupid yesterday evening. I thought re-running "make" in nqp was enough, but apparently I need to re-run Configure.pl as well. anyway, on s390 OP(writeuint) always goes through the byte-swapping branch, never through the else branch

[07:48] <robertle> yet I still get the "Bytecode stream version too high"

[07:55] *** xlat joined
[07:56] *** p6bannerbot sets mode: +v xlat

[08:05] <xlat> Hi, I'm trying to build nqp+moqrvm to test https://stackoverflow.com/questions/53691576/perl6-nativecall-with-str-is-encodedutf16-got-randomly-corrupted-result

[08:06] <xlat> Moarvm has compiled fine, but nqp / gmake command failed with: MoarVM op 'writeint' is unknown as a core or extension op

[08:07] <xlat> any idea how to fix that ?

[08:54] <nwc10> Hi xlat. Sorry, I don't know, and I don't even have a good idea where to start.

[08:54] <nwc10> I suspect that the silence means that no-one awake feels confident to suggest what to do next

[08:59] <xlat> I've  tryed to regress nqp of some commits, but it was too old for the vm i think;

[09:02] <xlat> maybe I've done something wrong; after build MVM; I've copied moar.exe, moard.dll and libmoar.dll.a in c:\rakudo\bin.

[09:03] <xlat> then tryed perl6 and got p6captureouters second arg must be MVMCode at src/Perl6/World.nqp:3965  (C:\rakudo\share\nqp\lib/Perl6/World.moarvm:resolve) ...

[09:03] <xlat> so I decided to build nqp from source

[09:04] <xlat> with: perl Configure.pl --backends=moar --prefix=c:\rakudo & gmake

[09:04] <xlat> And I got the nqp build error with writeint

[09:12] *** zakharyas joined
[09:13] *** p6bannerbot sets mode: +v zakharyas

[09:14] <robertle> xlat: does your nqp commit roughly match the moar one? they need to be in-sync-ish

[09:27] <xlat> nqp is b4de55eda64a03f72656336457bcd059194fb0a1, moarvm is 0d5f389c35b9b287f5af063ea00b02e10d3bc026

[09:28] <xlat> how to check for them to be in-sync-ish ?

[09:41] <jnthn> If you grab Rakudo and `perl Configure.pl --gen-moar` or some such then it'll build a compatible MoarVM and NQP automatically for you with matching versions.

[09:41] <jnthn> (Pass --prefix to tell it where to put the install)

[09:45] <xlat> the trick is that I want to build a patch moarvm

[09:47] <jnthn> It does a MoarVM git checkout, so you can still do that once you get a working build. Just make your changes and `make install` in MoarVM afterwards.

[09:47] <xlat> s/patch/patched/

[09:48] <xlat> ok, I'll try it

[10:01] *** lizmat joined
[10:01] *** p6bannerbot sets mode: +v lizmat

[10:36] <xlat> thank you all; that's worked fine now

[10:51] *** domidumont left
[10:52] *** lucasb joined
[10:52] *** p6bannerbot sets mode: +v lucasb

[10:55] <Geth> ¬¶ MoarVM: xlat++ created pull request #1018: keep end of string bytes \x0000

[10:55] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1018

[10:56] <xlat> So I fill https://github.com/MoarVM/MoarVM/issues/1017 and PR mentionned above

[11:10] *** domidumont joined
[11:11] *** p6bannerbot sets mode: +v domidumont

[11:15] *** domidumont left
[11:53] *** avar joined
[11:53] *** avar left
[11:53] *** avar joined
[11:53] *** p6bannerbot sets mode: +v avar

[11:54] *** p6bannerbot sets mode: +v avar

[12:30] *** zakharyas left
[12:31] <Geth> ¬¶ MoarVM: lizmat assigned to niner Issue nqp::readnum appears to ignore size flag https://github.com/MoarVM/MoarVM/issues/1020

[12:43] *** domidumont joined
[12:44] *** p6bannerbot sets mode: +v domidumont

[13:43] *** zakharyas joined
[13:43] *** p6bannerbot sets mode: +v zakharyas

[15:26] *** AlexDaniel left
[16:14] *** domidumont left
[16:24] *** robertle left
[16:48] *** domidumont joined
[16:49] *** p6bannerbot sets mode: +v domidumont

[16:54] *** robertle joined
[16:55] *** p6bannerbot sets mode: +v robertle

[17:08] *** Ven`` joined
[17:08] *** domidumont left
[17:09] *** p6bannerbot sets mode: +v Ven``

[17:13] *** Ven`` left
[17:54] *** brrt joined
[17:55] *** p6bannerbot sets mode: +v brrt

[18:46] *** AlexDaniel joined
[18:46] *** p6bannerbot sets mode: +v AlexDaniel

[18:49] *** zakharyas left
[19:16] *** sivoais left
[19:32] *** sivoais joined
[19:32] *** p6bannerbot sets mode: +v sivoais

[19:37] <nine> OMG I finally got the powerpc VM to boot and successfully compiled MoarVM

[19:38] <brrt> \o/

[19:38] <brrt> nine++

[19:43] <nine> And it's indeed massively faster than the mips VM. Taking just about a minute to compile interp.c

[19:47] <brrt> how'd you get a powerpc vm?

[19:48] <nine> Third is the charm. After the Debian and openSUSE failures I managed to install Ubuntu. That however told me at the end of the installation that it won't install a boot loader. Today I managed to extract the initrd and kernel from the VM image and boot those directly

[19:49] <brrt> fuu

[19:54] <nine> And I did get past the "Bytecode stream version too high" error, but it's weird.

[19:56] <nine> Well actually it's my code that doesn't make any sense at all.

[19:57] <nine> This code will always write in big endian when the target endianness differs from the native one: https://github.com/MoarVM/MoarVM/blob/master/src/core/interp.c#L5412

[19:58] <nine> Which satisfies the tests I wrote but is bound to fail when the target is little and the native one is big :)

[20:00] *** brrt left
[20:07] *** sivoais left
[20:11] <nine> Yep, looks much better. Except for labels being broken

[20:16] *** sivoais joined
[20:16] *** p6bannerbot sets mode: +v sivoais

[20:16] *** sivoais left
[20:22] *** sivoais joined
[20:22] *** p6bannerbot sets mode: +v sivoais

[20:23] *** sivoais left
[20:29] <Geth> ¬¶ MoarVM: 35ea958185 | (Stefan Seifert)++ | src/core/interp.c

[20:29] <Geth> ¬¶ MoarVM: Fix bytestream ops always converting to big endian if a switch is necessary

[20:29] <Geth> ¬¶ MoarVM:

[20:29] <Geth> ¬¶ MoarVM: We were detecting the neccessity of switching correctly but also need to

[20:29] <Geth> ¬¶ MoarVM: differentiate on the target endianness.

[20:29] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/35ea958185

[20:30] <nine> robertle: this is it!

[20:37] <robertle> awesome, will give it a go in one sec!

[20:40] <robertle> any specific commits, or just the tip of master of both?

[20:40] <nine> master

[20:48] *** travis-ci joined
[20:48] *** p6bannerbot sets mode: +v travis-ci

[20:48] <travis-ci> MoarVM build errored. Stefan Seifert 'Fix bytestream ops always converting to big endian if a switch is necessary

[20:48] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/466688783 https://github.com/MoarVM/MoarVM/compare/0d5f389c35b9...35ea958185e2

[20:48] *** travis-ci left
[20:50] *** domidumont joined
[20:51] *** p6bannerbot sets mode: +v domidumont

[20:51] <robertle> moar g35ea95818 and nqp gf8e87c58c, works like a charm! awesome stuff!

[21:05] *** domidumont left
[21:28] <Geth> ¬¶ MoarVM: 437d5b0105 | (Stefan Seifert)++ | 2 files

[21:28] <Geth> ¬¶ MoarVM: Fix big endian (read|write)u?int of < qword on big endian systems

[21:28] <Geth> ¬¶ MoarVM:

[21:28] <Geth> ¬¶ MoarVM: When not memcpying a full qword, we need to index into the source or target

[21:28] <Geth> ¬¶ MoarVM: 64 bit value to get the interesting part on big endian systems. On little

[21:28] <Geth> ¬¶ MoarVM: endian systems, smaller words are naturally aligned at the lowest address.

[21:28] <Geth> ¬¶ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/437d5b0105

[21:29] <nine> This commit fixes the test failure of moar/13-writeint.t on big endian systems.

[21:29] <lizmat> nine: stable enough for a bump?

[21:30] <lizmat> m: dd blob8.new(255).read-int8(0)   # nine: does this fix this?

[21:30] <camelia> rakudo-moar 011c6f11d: OUTPUT: ¬´255‚ê§¬ª

[21:36] *** robertle left
[21:43] *** travis-ci joined
[21:43] *** p6bannerbot sets mode: +v travis-ci

[21:43] <travis-ci> MoarVM build errored. Stefan Seifert 'Fix big endian (read|write)u?int of < qword on big endian systems

[21:43] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/466712571 https://github.com/MoarVM/MoarVM/compare/35ea958185e2...437d5b0105bc

[21:43] *** travis-ci left
[21:47] *** xlat left
[23:21] *** Voldenet left
[23:39] *** Voldenet joined
[23:39] *** Voldenet left
[23:39] *** Voldenet joined
[23:39] *** p6bannerbot sets mode: +v Voldenet

[23:40] *** p6bannerbot sets mode: +v Voldenet

