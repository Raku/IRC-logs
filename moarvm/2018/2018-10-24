[00:00] *** lizmat joined
[00:00] *** p6bannerbot sets mode: +v lizmat

[01:14] *** Kaiepi left
[01:15] *** Kaiepi joined
[01:15] *** p6bannerbot sets mode: +v Kaiepi

[01:19] *** lizmat left
[03:45] *** fake_space_whale left
[06:34] *** domidumont joined
[06:35] *** p6bannerbot sets mode: +v domidumont

[06:39] *** robertle joined
[06:40] *** p6bannerbot sets mode: +v robertle

[07:30] *** lizmat joined
[07:30] *** p6bannerbot sets mode: +v lizmat

[08:02] <nine> And it works!

[08:02] <nine> Though it doesn't seem to have done anything for performance :(

[08:05] <nine> At least it got rid of those extra QAST::SVals, but there are still 6636 more QAST::Ops than on master (61446 vs 54810). Of course compiling ops takes much more time than just SVals, so the hope for a performance gain is not lost at all.

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: 25d12cdec6 | (Stefan Seifert)++ | 2 files

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: Seed the deserialization string heap for getting correct indexes

[08:24] <Geth> Â¦ MoarVM/nqp-mbc:

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: Originally there were two pieces of code for collecting the string heap:

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: the data serialization (nqp::serialize) and the MAST compiler. The strings

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: collected during serialization were used as seed for the MAST compiler's

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: string heap. MVM_serialization_serialize assumed that it was passed an

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: empty string heap to fill.

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: Since we now assemble bytecode (and the string heap) before serializing

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: data, we have to flip this. Serialization's string heap is now seeded with

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: the bytecode compiler's.

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: review: https://github.com/MoarVM/MoarVM/commit/25d12cdec6

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: da09a981a6 | (Stefan Seifert)++ | tools/update_ops.p6

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: Use unbox_u to get at MAST::Local's $!index to avoid the coercion dance

[08:24] <Geth> Â¦ MoarVM/nqp-mbc: review: https://github.com/MoarVM/MoarVM/commit/da09a981a6

[08:38] *** zakharyas joined
[08:39] *** p6bannerbot sets mode: +v zakharyas

[09:14] *** dogbert2_ left
[10:10] *** dogbert2_ joined
[10:11] *** p6bannerbot sets mode: +v dogbert2_

[11:32] *** zakharyas left
[11:34] *** ItchyPlant joined
[11:35] *** p6bannerbot sets mode: +v ItchyPlant

[11:35] <ItchyPlant> Hi All! May I ask for help about compiling MoarVM on an AIX 7.1 LPAR? :)

[11:36] <nine> ItchyPlant: of course you may ask! I hope we'll also be able to help

[11:38] *** KoroMi joined
[11:38] *** ItchyPlant left
[11:38] *** KoroMi left
[11:39] *** ItchyPlant joined
[11:39] *** p6bannerbot sets mode: +v ItchyPlant

[11:39] <ItchyPlant> The compilation ends up with these errors:

[11:40] <ItchyPlant> ...

[11:40] <ItchyPlant> compiling 3rdparty/libuv/src/unix/thread.o

[11:40] <ItchyPlant> compiling 3rdparty/libuv/src/threadpool.o

[11:40] <ItchyPlant> compiling 3rdparty/libuv/src/unix/tty.o

[11:40] <ItchyPlant> compiling 3rdparty/libuv/src/unix/udp.o

[11:40] <ItchyPlant> linking 3rdparty/libuv/libuv.a

[11:40] <ItchyPlant> linking libmoar.so

[11:40] <ItchyPlant> ld: 0711-317 ERROR: Undefined symbol: .uv__hrtime

[11:40] <ItchyPlant> ld: 0711-317 ERROR: Undefined symbol: .uv_free_cpu_info

[11:40] <ItchyPlant> ld: 0711-345 Use the -bloadmap or -bnoquiet option to obtain more information.

[11:40] <ItchyPlant> collect2: error: ld returned 8 exit status

[11:40] <ItchyPlant> make: *** [Makefile:602: libmoar.so] Error 1

[11:43] <ItchyPlant> I had to comment out the block about "endian.h" in out the the block in src/strings/siphash/csiphash.h, and also replaced the "STAT" word by something else in src/io/syncfile.c, because the compilation failed in the beginning. Now it compiles for some minutes and ends with the above.

[11:44] <nine> According to their docs, libuv would support AIX

[11:45] <ItchyPlant> the details about how I'm progressed for now can be found also in Reddit: https://www.reddit.com/r/perl6/comments/9qcd3l/perl_6_on_aix/

[11:46] <nine> There are some notes however: https://github.com/libuv/libuv#aix-notes

[11:46] <ItchyPlant> OK, let's see...

[11:47] <ItchyPlant> the mentioned bos.ahafs is installed already

[11:48] <ItchyPlant> and it stops at "linking libmoar.so"

[11:50] <ItchyPlant> I also tried with passing the "--static" parameter to Configure.pl and interestingly the compilation passes the libmoar.so, and stops at "linking moar".

[12:06] <ItchyPlant> But is it possible to get fully functional Perl 6 on AIX, right? There are notes about it on MoarVM's site at Releases, so I was really excited about it. It is still possible, right?

[12:22] <jnthn> Once you get past having MoarVM linking, then that should be most of the platform-specific stuff. I don't think any of the regular MoarVM developers have AIX access, so I'd not be surprised if some tweaks are needed.

[12:22] <yoleaux> 22 Oct 2018 15:48Z <Xliff> jnthn: Supplier.quit(), instead of note() is crashing MoarVM -- https://gist.github.com/Xliff/010d1ea5a92ea6e3524e70f0a1b4b77a

[12:23] <Zoffix> jnthn \o/

[12:23] <Zoffix> You're our only hope :)

[12:23] <jnthn> The errors look like missing symbols

[12:23] <Zoffix> For R#2400

[12:23] <synopsebot> R#2400 [open]: https://github.com/rakudo/rakudo/issues/2400 [fudged tests committed][regression][âš  blocker âš ] Module Crane is failing tests on HEAD

[12:23] <jnthn> Zoffix: Uff...that'll be fun :)

[12:24] <jnthn> Zoffix: I'll try and find time for it tomorrow once I'm home :)

[12:25] <Zoffix> ok, cool

[12:25] <Zoffix> .tell AlexDaniel FYI: status of the blocker: https://colabti.org/irclogger/irclogger_log/moarvm?date=2018-10-24#l77

[12:25] <yoleaux> Zoffix: I'll pass your message to AlexDaniel.

[12:51] *** ZofBot joined
[12:51] *** p6bannerbot sets mode: +v ZofBot

[12:52] *** Zoffix left
[12:55] *** zakharyas joined
[12:56] *** p6bannerbot sets mode: +v zakharyas

[13:01] <AlexDaniel> .

[13:01] <yoleaux> 12:25Z <Zoffix> AlexDaniel: FYI: status of the blocker: https://colabti.org/irclogger/irclogger_log/moarvm?date=2018-10-24#l77

[13:02] *** ItchyPlant left
[13:02] *** ItchyPlant joined
[13:03] *** p6bannerbot sets mode: +v ItchyPlant

[13:06] *** brrt joined
[13:06] *** p6bannerbot sets mode: +v brrt

[13:42] *** KoroMi joined
[13:42] *** ItchyPlant left
[13:43] *** p6bannerbot sets mode: +v KoroMi

[13:58] *** KoroMi is now known as ItchyPlant

[14:28] *** ItchyPlant left
[14:33] *** Zoffix joined
[14:33] *** p6bannerbot sets mode: +v Zoffix

[15:04] *** brrt left
[15:14] *** ItchyPlant joined
[15:15] *** p6bannerbot sets mode: +v ItchyPlant

[15:21] *** fake_space_whale joined
[15:22] *** p6bannerbot sets mode: +v fake_space_whale

[15:24] *** domidumont left
[15:30] <ItchyPlant> OK, thank you for your help so far, I'll check in sometimes and surely be back if the AIX compilation will be ever successful. Bye :)

[15:31] *** ItchyPlant left
[15:50] *** domidumont joined
[15:51] *** p6bannerbot sets mode: +v domidumont

[16:13] *** robertle left
[16:28] *** Zoffix left
[17:05] <ugexe> https://github.com/libuv/libuv/issues/2048 -- win: uv_fs_XXX lossily decoding invalid UTF-16 filenames / paths

[17:05] <ugexe> interesting issue

[17:08] <ugexe> WTF-8 (Wobbly Transformation Format âˆ’ 8-bit)

[17:42] <nine> The coerce_iu and coerce_ui expr JIT templates are definitely broken.

[17:45] *** zakharyas left
[17:48] <Geth> Â¦ MoarVM/nqp-mbc: 39 commits pushed by (Stefan Seifert)++

[17:48] <Geth> Â¦ MoarVM/nqp-mbc: review: https://github.com/MoarVM/MoarVM/compare/da09a981a6d6...d86a697fd440

[18:03] <nine> timotimo: Writing profiler output to profile.sql

[18:03] <nine> bloop?

[18:04] <nine> I'm not gonna paste the ~ 1 million more bloop?s :)

[18:19] *** MasterDuke left
[18:19] *** domidumont left
[18:21] <timotimo> whoops :)

[18:21] <timotimo> i didn't mean to commit that

[18:21] <timotimo> but it's completely harmless

[18:35] *** zakharyas joined
[18:36] *** p6bannerbot sets mode: +v zakharyas

[18:48] *** btyler_ left
[18:51] *** btyler joined
[18:52] *** p6bannerbot sets mode: +v btyler

[19:02] *** fake_space_whale left
[19:03] *** brrt joined
[19:03] *** p6bannerbot sets mode: +v brrt

[19:07] *** Kaiepi left
[19:08] *** Kaiepi joined
[19:09] *** p6bannerbot sets mode: +v Kaiepi

[19:29] *** AlexDaniel left
[19:30] *** AlexDaniel joined
[19:30] *** p6bannerbot sets mode: +v AlexDaniel

[19:43] <nine> timotimo: DBDish::SQLite: Error: no such column: parent_thread_id (1)

[19:46] <nine> timotimo: btw I'm running with this patch to actually get output from --profile-stage in CORE.setting compilation: https://gist.github.com/niner/b03b60b8af77d562131977fa3cb2c5e1

[20:07] *** zakharyas left
[20:26] <timotimo> did you get both the branches i told you about?

[20:26] <timotimo> actually, parent_thread_id is totally uninteresting to the frontend at the moment

[20:26] <timotimo> so you can just throw it out of the sql query in ProfilerWeb.pm6

[20:30] *** brrt left
[21:17] *** tbrowder___ left
[21:18] *** tbrowder___ joined
[21:18] *** p6bannerbot sets mode: +v tbrowder___

[21:19] <nine> I did so and it worked :)

[21:20] <nine> And it showed me exactly where the superfluous QAST::Ops were coming from - I misread some code and accidentally removed an optimization. Easily fixed :)

[21:20] <nine> Current numbers for stage mast: 12.133s on nqp-mbc vs. 11.576s on master

[21:21] <timotimo> \o/

[21:21] <timotimo> fantastic

[21:21] <timotimo> how does gc usage compare?

[21:21] <timotimo> probably just compare number of gc runs during that stage?

[21:27] <nine> 246 collections on nqp-mbc vs 267 on master

[21:28] <nine> http://niner.name/files/profile.sql.zst and http://niner.name/files/profile-master.sql.zst if you want to play with them

[21:32] <timotimo> how big is the difference in time spent in gc?

[22:01] *** ggoebel left
[23:40] <timotimo> i'll have to build my own micro-ORM to handle different versions of the sql schema without hundreds of hours of tedium :)

