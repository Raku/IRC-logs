[00:20] *** MasterDuke joined
[02:04] <Geth> Â¦ MoarVM: b03c8fdf93 | (Samantha McVey)++ | tools/UCD-download.p6

[02:04] <Geth> Â¦ MoarVM: Have UCD-Download also download Shift-JIS code index

[02:04] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b03c8fdf93

[02:04] <Geth> Â¦ MoarVM: 9ce054d099 | (Samantha McVey)++ | tools/generate_encoding_codetables.p6

[02:04] <Geth> Â¦ MoarVM: Update generate_encoding_codetables.p6 to gen shiftjis switch

[02:04] <Geth> Â¦ MoarVM:

[02:04] <Geth> Â¦ MoarVM: For now we only generate the one used for encoding, but will later add

[02:04] <Geth> Â¦ MoarVM: decoding support as well which will create an array structure, since for

[02:04] <samcv> yay

[02:04] <Geth> Â¦ MoarVM: decoding the indexes are sequential.

[02:04] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9ce054d099

[02:04] <Geth> Â¦ MoarVM: a14ecc1245 | (Samantha McVey)++ | 7 files

[02:04] <Geth> Â¦ MoarVM: Implement ShiftJIS encode support

[02:04] <Geth> Â¦ MoarVM:

[02:04] <Geth> Â¦ MoarVM: This implements ShiftJIS as outlined here:

[02:04] <Geth> Â¦ MoarVM: https://encoding.spec.whatwg.org/#shift_jis-encoder

[02:04] <Geth> Â¦ MoarVM: Encode replacements and a decoder is not implemented yet.

[02:04] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a14ecc1245

[02:57] *** ilbot3 joined
[04:01] *** Kaiepi joined
[05:57] <Geth> Â¦ MoarVM: 5a407295f8 | (Samantha McVey)++ | src/strings/shiftjis.c

[05:57] <Geth> Â¦ MoarVM: Fix buffer overflow in shiftjis encode

[05:57] <Geth> Â¦ MoarVM:

[05:57] <Geth> Â¦ MoarVM: If we write two bytes to the buffer at the same time, this can overflow

[05:57] <Geth> Â¦ MoarVM: the buffer. Make sure to reallocate before this happens.

[05:57] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/5a407295f8

[06:00] <Geth> Â¦ MoarVM: 41711ff260 | (Samantha McVey)++ | build/Makefile.in

[06:00] <Geth> Â¦ MoarVM: Make sure shiftjis_codeindex.h is added to Makefile.in

[06:00] <Geth> Â¦ MoarVM:

[06:00] <Geth> Â¦ MoarVM: Otherwise if changes are made to the file, make won't recompile.

[06:00] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/41711ff260

[06:33] *** brrt joined
[06:50] *** domidumont joined
[06:55] <Geth> Â¦ MoarVM: dd2072da14 | (Samantha McVey)++ | docs/ChangeLog

[06:55] <Geth> Â¦ MoarVM: Fix missing `:` in ChangeLog, causing website not to generate right

[06:55] <Geth> Â¦ MoarVM:

[06:55] <Geth> Â¦ MoarVM: The Perl script which generates the website's html does not detect it as

[06:55] <Geth> Â¦ MoarVM: a heading and causes a minor formatting error.

[06:55] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/dd2072da14

[06:58] *** domidumont joined
[06:59] *** AlexDaniel joined
[07:40] *** robertle joined
[08:19] *** domidumont joined
[08:59] <lizmat> what does it mean if I get a "Unhandled exception: const_iX NYI" when I run code with --profile ?

[09:01] *** AlexDaniel joined
[10:18] <jnthn> Corruption of some sort

[11:17] *** bisectable6 joined
[11:43] *** MasterDuke joined
[12:35] *** Util joined
[13:55] *** SourceBaby joined
[14:09] *** wictory[m] joined
[14:47] <timotimo> last time i looked into this it was rather confusing

[14:47] <timotimo> but it is on my list for sure

[15:14] *** domidumont joined
[16:28] <MasterDuke> jnthn: i rebased https://github.com/MoarVM/MoarVM/pull/689 against master, rebuilt nqp and rakudo, and all tests passed

[16:28] <MasterDuke> oddly enough there was even a passing todo in t/spec/S09-typed-arrays/native-int.t

[16:38] <MasterDuke> heh, nevermind about the passing todo, that was just because of https://github.com/perl6/roast/commit/cabc5b3f33

[16:43] *** AlexDaniel joined
[17:36] *** d4l3k_ joined
[17:37] *** synopsebot joined
[17:50] *** domidumont joined
[18:21] <dogbert11> .seen timotimo

[18:21] <yoleaux> I saw timotimo 14:47Z in #moarvm: <timotimo> but it is on my list for sure

[18:22] <timotimo> ohai

[18:22] <dogbert11> hi timotimo

[18:22] <dogbert11> time for a profiler question?

[18:23] <dogbert11> this short script https://gist.github.com/dogbert17/f639322dd4d6b5b660009a0d57c7cb15 generates an insanely large profile. Why?

[18:25] <timotimo> # This is Rakudo version 2016.03-39-gf220a5e built on MoarVM version 2016.03-46-g50c7f6a

[18:25] <timotimo> this could be your problem

[18:25] <timotimo> oh, that's just old, sorry

[18:26] <dogbert11> I use this script, and others, for benchmarking :) the numbers are from an old version

[18:27] <dogbert11> it's much faster now :)

[18:28] <dogbert11> on my system the generated html file is 44 megs !

[18:28] <timotimo> 41 here

[18:29] <timotimo> somehow there's >300k call graph nodes in there

[18:31] <dogbert11> sounds a bit much no

[18:32] <dogbert11> I'm not saying it's a bug, just that it's a bit strange :)

[18:32] <MasterDuke> wow, i created a sql profile, but am getting an integer overflow exception when trying to run some queries

[18:34] <dogbert11> uh oh

[18:34] <timotimo> shouldn't be this much, no

[18:34] <MasterDuke> it's the exclusive_time column, i can't sum it

[18:34] <timotimo> did i break something, i wonder?

[18:34] <timotimo> dogbert11: can you use some older commits and see if that changes things?

[18:34] <dogbert11> how old?

[18:36] <timotimo> maybe a week

[18:37] <dogbert11> I'll see what I can do, is building 2017.12 atm

[18:39] <timotimo> thank you

[18:40] <timotimo> because i just fixed something right after the last release

[18:42] <dogbert11> timotimo: you're off the hook, 2017.12 is as bad as HEAD

[18:43] <timotimo> strange, still.

[18:44] <timotimo> i'll have an svg soon

[18:45] <timotimo> it'll be humongous, probably, but myabe i can see something

[19:06] <timotimo> graphviz is still working, and i'll go afk for a significant bit

[19:06] <timotimo> it'll surely finish until then. i'll also make a "minimal" version of the graph for good measure

[19:07] <dogbert11> timotimo: removing a bunch lines making up $num will make the profile smaller

[19:07] <dogbert11> timotimo: until later :)

[19:07] <timotimo> how much smaller?

[19:12] <dogbert11> 3 megs

[19:12] <MasterDuke> dogbert11: does it change anything if you re-write it to use .rotor on a .comb of $num instead of a .comb on a .substr of $num?

[19:13] <dogbert11> timotimo: you can cut lines 8-25 in the gist

[19:13] <dogbert11> MasterDuke: will check

[19:34] <dogbert11> MasterDuke: that change didn't help much https://gist.github.com/dogbert17/1b45cc1d16e621bc5c3e686bcf630f96

[20:03] *** domidumont joined
[20:23] <MasterDuke> huh. does it run any faster?

[20:26] <dogbert11> roughly the same speed

[21:46] <timotimo> haha, remember when i thought graphviz would be finished when i come back?

[21:50] <dogbert11> let me guess, it wasn't

[21:51] <dogbert11> timotimo: change to this instead: my $num = '731671765313306249192251196744';

[21:52] <timotimo> i suppose it's not faster because we don't call &infix:<~> as often? ;)

[21:52] <dogbert11> the profile will be 250k but I suspect the 'problem' will be visible anyway

[21:52] <dogbert11> perhaps that's easier for graphviz to handle :)

[21:53] <samcv> hmm i have this utf8 file and it seems to be changing the line endings from \r\n to \n i know that's an option but i didn't think it was the default

[21:53] <dogbert11> I could see the profile in the browser but something was seriously wrong with the call graph

[21:54] <samcv> or maybe i altered something

[21:56] <jnthn> samcv: It's the default (and should be), and is controlled by an option passed to the decoder

[21:56] <jnthn> samcv: Never quite got around to wiring up exposing it on IO::Handle yet

[21:56] <jnthn> Or maybe did...I forget :)

[21:57] <samcv> hah

[21:57] <jnthn> (Also, should be the default for IO::Handle, but not for sockets.)

[21:57] <jnthn> (So the latter configure the decoder differently)

[21:57] <samcv> i don't see translate-nl anywhere in roast

[21:59] <samcv> jnthn: i don't see :$translate-nl in IO::Handle.encoding

[22:00] <samcv> well there is $!decoder := $encoding.decoder(:translate-nl, :$replacement, :$strict); inside the method, but there's no translate-nl argument to control the setting

[22:01] <samcv> well that is good news. that means my shiftjis decoder works :) only issue was getting different line endings and that is just the utf8 decoder altering the text

[22:01] <samcv> though maybe that means i need to implement line ending changing in shiftjis!

[22:02] <samcv> hmm though it should work since i use graph = MVM_unicode_normalizer_translated_crlf(tc, &(ds->norm));

[22:05] <MasterDuke> timotimo: not just the size of the profile is weird. it also puts all the info on the front/overview page (i.e., routines, allocations, call graph, etc.)

[22:05] <samcv> ah it seems to work. great. made some changes to rakudo and i think that was causing it. forgot to pass that through

[22:07] <jnthn> samcv++ # shiftjis \o/

[22:10] <samcv> wonder if a compiler will optimize a switch that goes from 0 to 11103 almost seqentially into an array

[22:11] <jnthn> Hopefully...I mean, in theory it does it for our interp :)

[22:11] * jnthn afk a little

[22:11] <samcv> there's 10 gaps between those two numbers in the shiftjis switch I have now. I was going to leave the codepoint -> shiftjis index switch. since the codepoints are not at all in order and many many gaps

[22:12] <samcv> though then i also have to make sure that it catches an error if it hits a point where it dosen't have an index. so i may leave it how it is for now. I don't want to introduce any bugs

[22:12] <samcv> by complicating it

[22:24] <dogbert11> timotimo, MasterDuke: a bizarre observation, if I run the profile under valgrind the output suddenly gets a lot smaller !?!?

[22:25] <dogbert11> perhaps something to do with threading

[22:28] <dogbert11> timotimo: setting MVM_SPESH_DISABLE=1 on the original gist makes the profile go from 44 Meg to 93k

[22:34] <MasterDuke> dogbert11: what about disabling just parts of spesh?

[22:35] <dogbert11> MasterDuke: yeah, it seems to be something with inlining, setting MVM_SPESH_INLINE_DISABLE=1 also makes the profile <100k

[22:36] <MasterDuke> timotimo: ^^^ seems relevant, didn't you fix a related bug recently?

[22:38] <dogbert11> 2017.12 behaves the same way, i.e. normal profile is 40+ megs while a run with inlining disabled goes down to ~90k

[22:41] <Geth> Â¦ MoarVM: samcv++ created pull request #820: Implement ShiftJIS decode and decodestream

[22:41] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/820

[22:46] *** AlexDaniel joined
