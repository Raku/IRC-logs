[01:31] *** MasterDuke joined
[02:28] *** Kaiepi joined
[02:40] <MasterDuke> .tell brrt i spun up an ubuntu 14.04 vm and built my branch, but nqp and rakudo both built just fine

[02:40] <yoleaux> MasterDuke: I'll pass your message to brrt.

[02:54] <MasterDuke> .tell brrt i take that back. if i do `--optimize=0` i get the same failure

[02:54] <yoleaux> MasterDuke: I'll pass your message to brrt.

[02:56] *** ilbot3 joined
[02:56] <MasterDuke> .tell brrt don't need the vm, i get the failure on my laptop and desktop with --optimize=0. some debug info and the jit-bisect data here https://gist.github.com/MasterDuke17/27feb037abdddb9528b4cf15f1af9b17

[02:56] <yoleaux> MasterDuke: I'll pass your message to brrt.

[04:04] <samcv> .ask jnthn where do I need to set gc mark? not sure where it is https://github.com/MoarVM/MoarVM/pull/815#discussion-diff-173675573R40

[04:04] <yoleaux> samcv: I'll pass your message to jnthn.

[06:18] *** domidumont joined
[06:27] *** domidumont joined
[06:59] *** quotable6 joined
[07:01] *** domidumont joined
[07:37] *** domidumont joined
[07:37] *** brrt joined
[07:38] <brrt> good *

[07:38] <yoleaux> 02:40Z <MasterDuke> brrt: i spun up an ubuntu 14.04 vm and built my branch, but nqp and rakudo both built just fine

[07:38] <yoleaux> 02:43Z <MasterDuke> brrt: i take that back. if i do `--optimize=0` i get the same failure

[07:38] <yoleaux> 02:56Z <MasterDuke> brrt: don't need the vm, i get the failure on my laptop and desktop with --optimize=0. some debug info and the jit-bisect data here https://gist.github.com/MasterDuke17/27feb037abdddb9528b4cf15f1af9b17

[07:38] <brrt> MasterDuke++

[07:38] <nine> So it's an inverse-Heisenberg bug? It appears only when debugging?

[07:43] <brrt> hehe, that's better right :-)

[07:52] *** robertle joined
[07:53] <brrt> also nice, is that it breaks quite fast

[08:35] *** FROGGS joined
[08:42] *** lizmat joined
[08:46] *** brrt joined
[08:58] <Kaiepi> how would you force moar to crash instead of allowing MVM_panic to bubble back up to rakudo?

[08:59] <Kaiepi> er, MVM_throw_exception_throw_addhoc`

[09:00] <Kaiepi> *MVM_throw_exception_adhoc

[09:01] <Kaiepi> agh **MVM_exception_throw_adhoc

[09:02] <Kaiepi> there are some errors in IO::Socket::Async that look like they could be a problem, but i don't know how to force it to coredump

[09:19] *** FROGGS joined
[09:44] <brrt> Kaiepi: MVM_oops

[09:44] <brrt> or

[09:44] <brrt> MVM_panic

[09:45] <brrt> MVM_oops is for when the stack is not corrupted, but there's still an unrecoverable error

[09:45] <brrt> MVM_panic is when you might expect a memory corruption and theres no hope of recovering

[09:49] <Kaiepi> thanks

[09:50] <brrt> np

[12:02] *** domidumont joined
[12:25] *** dogbert17 joined
[12:43] *** domidumont joined
[12:46] *** domidumont joined
[13:43] *** greppable6 joined
[13:43] *** brrt joined
[14:05] *** brrt joined
[14:25] <brrt> i think i found the bug uncovered by MasterDuke++

[14:26] <brrt> well, or at least, the proximate cause; there's nothing emitted for the ZR test

[14:32] <Geth> Â¦ MoarVM: ee83e78b68 | (Bart Wiegmans)++ | src/jit/x64/tiles.dasc

[14:32] <Geth> Â¦ MoarVM: [JIT] Test with default size of 8

[14:32] <Geth> Â¦ MoarVM:

[14:32] <Geth> Â¦ MoarVM: We'd skip on emitting a test if the size of the operand was not given,

[14:32] <Geth> Â¦ MoarVM: which would happen whenever we'd have the result of a CALL node.

[14:32] <Geth> Â¦ MoarVM:

[14:32] <Geth> Â¦ MoarVM: The real bug is that CALL nodes can introduce zero-sized values into

[14:32] <Geth> Â¦ MoarVM: the tree, which we should fix.

[14:33] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ee83e78b68

[14:33] <brrt> anyway, MasterDuke++, pls try travis again on your pull request

[14:53] *** releasable6 joined
[15:09] *** AlexDaniel joined
[15:32] *** Kaiepi joined
[15:50] *** Kaiepi joined
[15:56] *** Kaypie joined
[16:03] *** FROGGS joined
[16:33] *** bisectable6 joined
[16:43] *** Kaiepi joined
[17:15] *** Kaiepi joined
[18:00] *** domidumont joined
[18:03] *** domidumont joined
[19:12] *** greppable6 joined
[19:21] *** Kaiepi joined
[19:22] *** Ven`` joined
[19:31] *** Ven`` joined
[22:27] <Geth> Â¦ MoarVM: timo++ created pull request #817: MoarVM Remote Debugging Support

[22:27] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/817

[22:29] <timotimo> oh look what's this

[22:30] <jnthn> Oh my goodness, look at that :)

[22:30] <jnthn> https://6guts.wordpress.com/2018/03/13/remote-debug-support-for-moarvm/ :)

[22:33] <lizmat> wow!  :-)

[22:33] <yoleaux> 15:32Z <Zoffix> lizmat: FYI, I listed you as stakeholder (https://github.com/perl6/6.d-prep/commit/ce7fab350a) for nixing Pair.freeze in 6.d (per https://github.com/rakudo/rakudo/commit/c229022cb0941). Implementing that is currently blocked by R#1289 tho

[22:33] <synopsebot> R#1289 [open]: https://github.com/rakudo/rakudo/issues/1289 [6.d][severe] [6.d BLOCKER] Implement a Way to Know Caller's Language

[22:33] <jnthn> Blog post about it here: https://6guts.wordpress.com/2018/03/13/remote-debug-support-for-moarvm/

[22:33] <jnthn> oh, I already linked it :D

[22:33] <jnthn> Clearly too execited :)

[22:33] <jnthn> To type, even :)

[22:43] <lizmat> :-)

[22:43] <lizmat> jnthn: I was looking at the ThreadPoolScheduler code wrt to number of worker threads

[22:44] <lizmat> I found that test-t --race typically uses 3 workers only

[22:44] <lizmat> that's because at each interval at least 1 worker finished something, afaics

[22:45] <MasterDuke> brrt++ looks like his commit fixed my PR

[22:46] <MasterDuke> and timotimo++, jnthn++ for remote debugging

[22:47] <lizmat> jnthn: that feels like a wrong heuristic to me, is there a reason for that?

[22:47] <lizmat> jnthn: fwiw, blog post now also mentioned on Perl 6 FB group

[22:47] <lizmat> courtesy of woolfy

[22:51] <timotimo> MasterDuke: couldn't have done it without jnthn's guidance :)

[22:51] * timotimo does the GUI dance

[22:51] <lizmat> whee!

[22:53] <lizmat> jnthn timotimo: so when will the PR be merged and revisions bumped ?

[23:01] <MasterDuke> timotimo: are you working at/for Edument now?

[23:01] *** robertle joined
[23:06] <jnthn> lizmat: Are you sure that's not because :$degree defaults to 4?

[23:06] <lizmat> wouldn't that imply 4 workers then ?

[23:18] <jnthn> lizmat: Hmm, good point

[23:18] <jnthn> Did you try passing :degree to see what happens?

[23:18] <lizmat> will do so tomorrow

[23:18] <samcv> jnthn: how do I gc mark this? https://github.com/MoarVM/MoarVM/pull/815#discussion-diff-173675573R40

[23:18] <lizmat> jnthn: and get back to you

[23:18] <jnthn> As to the heuristic not making perfect decisions - of course, it's a heuristic. ;) We can explore better ones though :)

[23:19] <jnthn> samcv: Well, directly or indirectly from gc_mark of the Decoder REPR

[23:19] <lizmat> ok, I will do that...  have had some interesting effects with increasing the sleep gradually to .1 second

[23:19] <jnthn> Yeah, the 0.01 was picked for a reason :)

[23:20] <lizmat> well, the thing is that for test-t --race 20, it only made a small difference for total wallclock, but 10% less overall CPU

[23:21] <jnthn> samcv: https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/Decoder.c#L26 is currently empty

[23:21] <jnthn> samcv: But it'd want to be handled in there

[23:21] <samcv> so i do MVM_gc_worklist_add then?

[23:21] <jnthn> Yup

[23:21] <jnthn> But also

[23:22] <jnthn> Make sure you use MVM_ASSIGN_REF when storing the replacement too

[23:22] <jnthn> To make sure we don't violate the inter-gen constraint

[23:22] <samcv> ok thanks

[23:41] <timotimo> lizmat: i'd like it to be in the upcoming release, which is Real Soon Now

[23:47] <samcv> doing this makes MoarVM segfault. not sure if i'm doing it right? https://gist.github.com/42b9e67a199316656b0ebfc0431dd5a4

[23:47] <samcv> in Decoder.c

[23:47] <timotimo> hm, i assume gc_mark is also called for non-concrete objects

[23:48] <jnthn> samcv: Cast to MVMDecoderbody

[23:48] <jnthn> *MVMDecoderBody

[23:49] <samcv> ah ok thanks

[23:49] <jnthn> Also maybe guard against ds being null

[23:50] <jnthn> About the remote debug PR - I can merge it tomorrow (I already gave it a good reviewing), if there aren't any comments against that from others.

[23:56] <timotimo> Undefined symbols for architecture x86_64:

[23:56] <timotimo> "_htobe16", referenced from:

[23:56] <timotimo> _send_greeting in debugserver.o

[23:56] <timotimo> ld: symbol(s) not found for architecture x86_64

[23:56] <timotimo> what fun!
