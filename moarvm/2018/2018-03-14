[00:41] <jnthn> sleep time for me; 'night

[01:16] <japhb> timotimo++  # Remote debugging!

[01:18] *** MasterDuke joined
[01:50] *** MasterDuke joined
[02:08] *** Kaiepi joined
[02:13] *** lizmat joined
[02:57] *** ilbot3 joined
[02:57] *** releasable6 joined
[04:13] *** lizmat_ joined
[06:24] *** brrt joined
[07:33] *** brrt joined
[07:39] *** robertle joined
[07:55] <brrt> \o

[07:55] <brrt> jnthn++ timotimo++ remote debugger yay

[07:56] <brrt> .tell MasterDuke the real problem is that some of your CALL nodes contain a size 'int' which isn't a size but a type

[07:56] <yoleaux> brrt: I'll pass your message to MasterDuke.

[08:13] *** domidumont joined
[08:22] <Geth> ¦ MoarVM: e9e54c8a47 | (Bart Wiegmans)++ | tools/expr-template-compiler.pl

[08:22] <Geth> ¦ MoarVM: [JIT] Warn for things that should be a size but may not be

[08:22] <Geth> ¦ MoarVM:

[08:22] <Geth> ¦ MoarVM: In MasterDuke++'s set of templates there is a (CALL) node in the

[08:22] <Geth> ¦ MoarVM: existskey template that indicates its size as 'int'. The 'int' keyword

[08:22] <Geth> ¦ MoarVM: is however resered to indicate a *type* in a (CARG) node - what was

[08:22] <Geth> ¦ MoarVM: meant was the int_sz keyword instead.

[08:22] <Geth> ¦ MoarVM:

[08:22] <Geth> ¦ MoarVM: This is confusing but somewhat difficult to clean up entirely. What we

[08:22] <Geth> ¦ MoarVM: can do easily though is warn when an argument that *should* be a size

[08:22] <Geth> ¦ MoarVM: looks like it isn't (not a number, not a macro, and doesn't end with

[08:22] <Geth> ¦ MoarVM: _sz).

[08:22] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e9e54c8a47

[08:23] <brrt> .tell MasterDuke if you can fix that I'll merge the code

[08:23] <yoleaux> brrt: I'll pass your message to MasterDuke.

[08:54] *** brrt joined
[10:04] *** brrt joined
[10:13] <jnthn> morning o/

[10:16] <brrt> morning jnthn

[10:16] <brrt> awesome work on the remote debugger

[10:29] <jnthn> Thanks :-)

[10:29] <jnthn> timotimo++ for turning my design for it into working code :)

[10:31] <jnthn> And sena_kun++ of Cro fame provided an amount of testing too :)

[10:35] <lizmat_> good *

[10:36] <lizmat> https://stackoverflow.com/questions/49245522/what-are-all-the-unicode-properties-a-perl-6-character-will-match  # perhaps something for samcv ?

[10:49] <dogbert2_> timotimo++, jnthn++ remote debugging

[10:49] * dogbert2_ will definitely try that out :-)

[11:39] <brrt> yes, all of you ++

[12:42] *** domidumont joined
[13:35] *** AlexDaniel joined
[14:11] <japhb> Ah!  That explains why jnthn did the blog entry (I had assumed it was some combination of Edument funding it and letting timotimo focus his energy on the coding).  jnthn++ and sena_kun++ too then.  :-)

[14:13] <timotimo> aye, without jnthn++ and sena_kun++ it wouldn't have turned out very good ;)  jnthn came up with the protocol design and that gave a good set of design decisions right from the start

[14:15] <timotimo> and of course lots of assistance and guidance from jnthn++ throughout the whole implementation phase and bug spotting and debugging help from sena_kun++

[14:20] <timotimo> https://gist.github.com/panzi/6856583 - this is a dual-licensed public-domain, BSD, MIT, Apache header file that makes all the endian functions available on different systems. with that maybe the debug branch can be merged

[14:29] <japhb> From the comments, there are patches to apply and/or forks to follow.  Which one(s) do you plan to use, OOC?

[14:57] <timotimo> no clue, i don't have the necessary systems to test stuff on

[14:57] <timotimo> i'm sure kaiepi has something to say about at least one of the BSDs

[14:59] *** rba joined
[16:04] *** brrt joined
[16:06] *** Kaiepi joined
[16:09] <jnthn> timotimo: Where in particular do we need the endian stuff, ooc? For cmp?

[16:10] <timotimo> no, just the handshake :)

[16:11] <timotimo> we could NIH it, too

[16:15] <jnthn> Don't we have some endian swapping code for reading bytecode anywya?

[16:33] <timotimo> we should, yeah

[16:37] <timotimo> oh, it was cmp after all that requires endian.h

[16:37] <timotimo> huh, no, i don't see endian.h anywhere

[16:38] <timotimo> i was using it without including a header at all?

[16:39] *** releasable6 joined
[16:41] <timotimo> moarvm's endian switching code is the other way around :D

[16:48] *** FROGGS joined
[17:05] *** Kaiepi joined
[17:13] *** robertle joined
[17:23] *** rba joined
[17:30] *** Kaiepi joined
[18:43] <timotimo> we'll have our own fork of cmp soon too

[19:14] <timotimo> m: say (2486 * 2 + 1138 * 2) / 1024

[19:14] <camelia> rakudo-moar 5031dab3a: OUTPUT: «7.078125␤»

[19:15] <timotimo> out of the 4.2 megabytes that Grammar.moar has, I could save 7 kilobytes by introducing const_i1 and const_i0

[19:16] <timotimo> m: say (2486 * 2 + 1138 * 2 + 2290 * 2 + 1473 * 2) / 1024

[19:16] <camelia> rakudo-moar 5031dab3a: OUTPUT: «14.427734␤»

[19:16] <timotimo> 14.4 kilobytes if i add const_i2 and const_i3

[19:16] <timotimo> (i.e. constant values 0 through 3)

[19:26] <timotimo> a friend suggests varints for every single piece of data in our bytecode files

[19:26] <timotimo> which ... no

[19:28] <timotimo> that would have rather a lot of effort involved to get it working at all

[19:34] <timotimo> m: say 11754136 / 1024

[19:34] <camelia> rakudo-moar 5031dab3a: OUTPUT: «11478.648438␤»

[19:35] <timotimo> m: say 11754136 / 25972

[19:35] <camelia> rakudo-moar 5031dab3a: OUTPUT: «452.569536␤»

[19:35] <timotimo> 452 chars per string, huh?

[19:38] <timotimo> i probably read that wrong.

[19:43] <timotimo> totally

[19:43] <timotimo> potentially the string_heap_read_limit is just the end of the file

[20:01] *** domidumont joined
[20:01] *** MasterDuke joined
[20:02] <MasterDuke> brrt, et al.: https://github.com/MoarVM/MoarVM/pull/816 is good now

[20:02] <yoleaux> 07:56Z <brrt> MasterDuke: the real problem is that some of your CALL nodes contain a size 'int' which isn't a size but a type

[20:02] <yoleaux> 08:23Z <brrt> MasterDuke: if you can fix that I'll merge the code

[20:03] *** Kaypie joined
[20:26] *** Kaypie joined
[21:26] *** dogbert17 joined
[21:26] <dogbert17> #join #whateverable

[21:27] <AlexDaniel> :)

[21:29] <dogbert17> a bit of a fail there

[21:29] <japhb> #hash #all #the #words

[21:32] <Geth> ¦ MoarVM/spesh-refactor-iffy: 4 commits pushed by (Bart Wiegmans)++

[21:32] <Geth> ¦ MoarVM/spesh-refactor-iffy: 87651d296e | [Spesh] remove object boolification from optimize_iffy

[21:32] <Geth> ¦ MoarVM/spesh-refactor-iffy: c29c3f21e4 | [Spesh] Optimize known values for istrue

[21:32] <Geth> ¦ MoarVM/spesh-refactor-iffy: f127ed37d3 | [Spesh] optimize more cases of istrue known type

[21:32] <Geth> ¦ MoarVM/spesh-refactor-iffy: bf1e2ec7a4 | [Spesh] unbreak rakudo by not optimizing isconcrete in istrue

[21:32] <Geth> ¦ MoarVM/spesh-refactor-iffy: review: https://github.com/MoarVM/MoarVM/compare/0b0db780abfe...bf1e2ec7a46d

[22:14] *** Kaiepi joined
[22:43] *** Kaiepi joined
[22:56] *** evalable6 joined
[23:20] *** MasterDuke joined
[23:24] *** Kaiepi joined
[23:26] <Geth> ¦ MoarVM/master: 5 commits pushed by (Samantha McVey)++, (Jonathan Worthington)++

[23:26] <Geth> ¦ MoarVM/master: 47f2d04665 | Add proper support for replacements in decodestream for windows1252/1

[23:26] <Geth> ¦ MoarVM/master: fec29f641b | Change arguments for windows1252/1 decodestream ops

[23:26] <Geth> ¦ MoarVM/master: 506573b496 | Add some string consts in MVMStringConsts for MVMDecodeStream

[23:26] <Geth> ¦ MoarVM/master: a57b19881d | Set gc_mark for the DecodeStream replacement

[23:26] <Geth> ¦ MoarVM/master: 449c7214fc | Merge pull request #815 from samcv/decodestream-conf

[23:26] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/2ff952244753...449c7214fc1b

[23:27] <jnthn> huh, I merged https://github.com/MoarVM/MoarVM/pull/817 (the debug server PR) too, but it didn't report it here

[23:27] <jnthn> timotimo++ anyway :)

[23:31] <timotimo> yays

[23:32] *** Zoffix joined
[23:33] <Zoffix> Yeah, there's a bug where it doesn't report huge merges. Though now I get a chance to debug and fix it.

[23:34] <timotimo> cool, ++Zoffix

[23:39] *** Geth joined
[23:39] <jnthn> Zoffix: I wondered if it was the size of it :)

[23:40] *** MasterDuke joined
[23:42] <MasterDuke> timotimo++

[23:43] <Geth> ¦ MoarVM/master: 5 commits pushed by (Samantha McVey)++, (Jonathan Worthington)++

[23:43] <Geth> ¦ MoarVM/master: 47f2d04665 | Add proper support for replacements in decodestream for windows1252/1

[23:43] <Geth> ¦ MoarVM/master: fec29f641b | Change arguments for windows1252/1 decodestream ops

[23:43] <Geth> ¦ MoarVM/master: 506573b496 | Add some string consts in MVMStringConsts for MVMDecodeStream

[23:43] <Geth> ¦ MoarVM/master: a57b19881d | Set gc_mark for the DecodeStream replacement

[23:43] <Geth> ¦ MoarVM/master: 449c7214fc | Merge pull request #815 from samcv/decodestream-conf

[23:43] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/2ff952244753...449c7214fc1b

[23:43] <Zoffix> hmm

[23:43] <Zoffix> (trying to find the webhook event for the merge)

[23:45] <Zoffix> found it

[23:45] <jnthn> oh, there's 2 that are marked error

[23:45] <jnthn> (In the GitHub webhooks UI)

[23:45] <jnthn> And yeah, one was the merge

[23:46] <timotimo> that means an error came back from the http server?

[23:47] *** Geth joined
[23:48] * timotimo is waiting for the world's slowest swapoff

[23:50] <jnthn> The hover of the error said it was "Couldn't connect to server"

[23:52] *** MasterDuke joined
[23:53] *** Geth joined
[23:54] <Geth> ¦ MoarVM/master: 5 commits pushed by (Samantha McVey)++, (Jonathan Worthington)++

[23:54] <Geth> ¦ MoarVM/master: 47f2d04665 | Add proper support for replacements in decodestream for windows1252/1

[23:54] <Geth> ¦ MoarVM/master: fec29f641b | Change arguments for windows1252/1 decodestream ops

[23:54] <Geth> ¦ MoarVM/master: 506573b496 | Add some string consts in MVMStringConsts for MVMDecodeStream

[23:54] <Geth> ¦ MoarVM/master: a57b19881d | Set gc_mark for the DecodeStream replacement

[23:54] <Geth> ¦ MoarVM/master: 449c7214fc | Merge pull request #815 from samcv/decodestream-conf

[23:54] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/2ff952244753...449c7214fc1b

[23:54] <Geth> ¦ MoarVM/master: 112 commits pushed by (Timo Paulssen)++, (Jonathan Worthington)++

[23:54] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/e9e54c8a47e0...2ff952244753

[23:54] <Zoffix> :/

[23:54] <Zoffix> Ah, yeah

[23:54] <Geth> ¦ MoarVM/master: 112 commits pushed by (Timo Paulssen)++, (Jonathan Worthington)++

[23:54] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/e9e54c8a47e0...2ff952244753

[23:54] <Zoffix> Yeah. fixed now

[23:55] <timotimo> i bet the ~2% cpu usage by a couple of moar processes are all the supervisor thread ...

[23:55] *** Geth joined
[23:59] *** Zoffix left
