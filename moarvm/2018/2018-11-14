[00:18] *** emerson joined
[00:18] *** p6bannerbot sets mode: +v emerson

[00:20] *** Kaypie left
[00:20] *** Kaypie joined
[00:20] *** p6bannerbot sets mode: +v Kaypie

[01:33] *** ZzZombo left
[02:40] *** ZzZombo joined
[02:40] *** p6bannerbot sets mode: +v ZzZombo

[03:19] *** ZzZombo_ joined
[03:19] *** p6bannerbot sets mode: +v ZzZombo_

[03:20] *** ZzZombo left
[03:20] *** ZzZombo_ is now known as ZzZombo

[04:23] *** ZzZombo left
[05:20] *** ZzZombo joined
[05:20] *** p6bannerbot sets mode: +v ZzZombo

[05:40] *** Kaypie left
[05:41] *** Kaypie joined
[05:41] *** p6bannerbot sets mode: +v Kaypie

[06:43] *** rba left
[07:09] *** domidumont joined
[07:10] *** p6bannerbot sets mode: +v domidumont

[07:48] *** robertle joined
[07:48] *** p6bannerbot sets mode: +v robertle

[08:24] <samcv> going through and tagging all issues if they're uni related, and closing some pretty old ones that have been fixed

[09:07] <Geth_> ¬¶ MoarVM: samcv self-assigned build on x32 has "pointer cast size mismatch" https://github.com/MoarVM/MoarVM/issues/444

[09:11] *** zakharyas joined
[09:12] *** p6bannerbot sets mode: +v zakharyas

[09:19] *** rba joined
[09:20] *** p6bannerbot sets mode: +v rba

[10:23] *** rba_ joined
[10:24] *** p6bannerbot sets mode: +v rba_

[10:25] *** rba left
[10:31] *** rba joined
[10:32] *** p6bannerbot sets mode: +v rba

[10:34] *** rba_ left
[10:46] *** rba_ joined
[10:47] *** p6bannerbot sets mode: +v rba_

[10:49] *** rba left
[11:01] *** rba joined
[11:02] *** p6bannerbot sets mode: +v rba

[11:03] *** rba_ left
[11:09] *** domidumont left
[11:16] *** rba_ joined
[11:17] *** p6bannerbot sets mode: +v rba_

[11:18] *** rba left
[11:31] *** rba joined
[11:32] *** p6bannerbot sets mode: +v rba

[11:33] *** rba_ left
[11:46] *** rba_ joined
[11:47] *** p6bannerbot sets mode: +v rba_

[11:49] *** rba left
[12:01] *** rba joined
[12:02] *** p6bannerbot sets mode: +v rba

[12:03] *** rba_ left
[12:17] *** rba_ joined
[12:17] *** p6bannerbot sets mode: +v rba_

[12:18] *** rba left
[12:31] *** rba joined
[12:32] *** p6bannerbot sets mode: +v rba

[12:33] *** rba_ left
[12:44] *** zakharyas left
[12:46] *** rba_ joined
[12:47] *** p6bannerbot sets mode: +v rba_

[12:48] *** rba left
[13:01] *** rba joined
[13:02] *** p6bannerbot sets mode: +v rba

[13:04] *** rba_ left
[13:06] *** Kaypie left
[13:06] *** Kaypie joined
[13:07] *** p6bannerbot sets mode: +v Kaypie

[13:16] *** rba_ joined
[13:17] *** p6bannerbot sets mode: +v rba_

[13:18] *** rba left
[13:31] *** rba joined
[13:32] *** p6bannerbot sets mode: +v rba

[13:34] *** rba_ left
[13:46] *** rba_ joined
[13:47] *** p6bannerbot sets mode: +v rba_

[13:48] *** rba left
[13:50] *** Kaypie left
[13:50] *** Kaypie joined
[13:51] *** p6bannerbot sets mode: +v Kaypie

[13:59] *** zakharyas joined
[14:00] *** p6bannerbot sets mode: +v zakharyas

[14:03] *** rba_ left
[14:10] *** Kaypie left
[14:54] *** rba joined
[14:55] *** rba left
[15:45] <dogbert11> oh, a SEGV

[15:46] <dogbert11> #0  0x00007f68f633b0be in MVM_multi_cache_find_spesh (tc=0x139aef0, cache_obj=0x47aa390, arg_info=0x7f68f4fa6450, type_tuple=0x7f68ec118990) at src/6model/reprs/MVMMultiCache.c:501

[15:46] <dogbert11> 501                 known_type_st = type_tuple[tt_offset].type->st;

[15:49] <dogbert11> when running the included example in R#1951

[15:49] <synopsebot_> R#1951 [open]: https://github.com/rakudo/rakudo/issues/1951 Improve empty hash creation performance with {}

[15:53] <dogbert11> gist for those interested: https://gist.github.com/dogbert17/c627e75bf4bafb17a6082733c1a1eced

[16:11] *** Kaiepi joined
[16:11] *** p6bannerbot sets mode: +v Kaiepi

[16:15] *** robertle left
[16:27] *** domidumont joined
[16:28] *** p6bannerbot sets mode: +v domidumont

[16:42] *** zakharyas1 joined
[16:43] *** p6bannerbot sets mode: +v zakharyas1

[16:43] *** zakharyas left
[16:55] *** robertle joined
[16:55] *** p6bannerbot sets mode: +v robertle

[19:02] *** dogbert11 left
[19:51] *** zakharyas1 left
[19:58] *** dogbert17 joined
[19:59] *** p6bannerbot sets mode: +v dogbert17

[20:02] *** domidumont left
[20:15] <dogbert17> reported as https://github.com/MoarVM/MoarVM/issues/996

[21:17] *** Kaiepi left
[21:17] *** Kaiepi joined
[21:18] *** p6bannerbot sets mode: +v Kaiepi

[21:54] <AlexDaniel> Please someone take a look at https://github.com/rakudo/rakudo/issues/2477

[21:54] <AlexDaniel> there are modules failing because of it

[21:56] *** lucasb joined
[21:57] *** p6bannerbot sets mode: +v lucasb

[21:57] <lucasb> m: sub f1 { hash a=>1 }; sub f2 { hash b=>2 }; sub f3 { hash c=>3 }; f1 for ^10000; f2 for ^10000; f3 for ^10000

[21:57] <camelia> rakudo-moar 534d8f657: OUTPUT: ¬´(signal SEGV)¬ª

[21:58] <lucasb> ^^ dogbert17 I tried golf it a little

[21:58] <lucasb> on my 32-bit 1000 iterations is enough to segfault

[21:59] <lucasb> *machine

[22:00] <dogbert17> lucasb: cool, if it fails everytime perhaps the bisectbot might be able to furnish additional info

[22:01] <dogbert17> .seen AlexDaniel

[22:01] <yoleaux> I saw AlexDaniel 21:54Z in #moarvm: <AlexDaniel> there are modules failing because of it

[22:01] <dogbert17> :)

[22:03] <AlexDaniel> .

[22:03] <AlexDaniel> bisect: sub f1 { hash a=>1 }; sub f2 { hash b=>2 }; sub f3 { hash c=>3 }; f1 for ^10000; f2 for ^10000; f3 for ^10000

[22:03] <bisectable6> AlexDaniel, On both starting points (old=2015.12 new=534d8f6) the exit code is 0 and the output is identical as well

[22:03] <bisectable6> AlexDaniel, Output on both points: ¬´¬ª

[22:04] <AlexDaniel> argh

[22:04] <AlexDaniel> bisect: sub f1 { hash a=>1 }; sub f2 { hash b=>2 }; sub f3 { hash c=>3 }; f1 for ^100000; f2 for ^100000; f3 for ^100000

[22:05] <lucasb> hehe tumuch

[22:05] <bisectable6> AlexDaniel, On both starting points (old=2015.12 new=534d8f6) the exit code is 0 and the output is identical as well

[22:05] <bisectable6> AlexDaniel, Output on both points: ¬´¬ª

[22:06] <AlexDaniel> bisect: for ^10 { exit 42 if run(<perl6 -e>, ÔΩ¢sub f1 { hash a=>1 }; sub f2 { hash b=>2 }; sub f3 { hash c=>3 }; f1 for ^10000; f2 for ^10000; f3 for ^10000ÔΩ£).signal != 0 }

[22:06] <dogbert17> ah, nice trick

[22:06] <dogbert17> unless it times out ofc

[22:06] <bisectable6> AlexDaniel, Bisecting by exit code (old=2015.12 new=534d8f6). Old exit code: 0

[22:07] <dogbert17> I'm reasonably certain that the problem is newer than 2918.09

[22:07] <AlexDaniel> oh wow

[22:07] <dogbert17> *2018

[22:07] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/cfe99f2eebc7aeaa593ababdd540041b

[22:07] <bisectable6> AlexDaniel, (2018-09-25) https://github.com/rakudo/rakudo/commit/ace87cb5d99c4a80b6d093cd92c73d5b952f1093

[22:07] <AlexDaniel> if they still have segfaults in 2918 that's sad

[22:07] <dogbert17> indeed :)

[22:07] <AlexDaniel> okay that's probably it

[22:07] <AlexDaniel> let's confirm

[22:08] <AlexDaniel> c: ace87cb5d9^,ace87cb5d9 for ^10 { say run(<perl6 -e>, ÔΩ¢sub f1 { hash a=>1 }; sub f2 { hash b=>2 }; sub f3 { hash c=>3 }; f1 for ^10000; f2 for ^10000; f3 for ^10000ÔΩ£).signal }

[22:08] <committable6> AlexDaniel, ¬¶ace87cb5d9^: ¬´0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§¬ª ¬¶ace87cb: ¬´11‚ê§0‚ê§11‚ê§0‚ê§11‚ê§0‚ê§11‚ê§11‚ê§0‚ê§11‚ê§¬ª

[22:08] <AlexDaniel> c: ace87cb5d9^,ace87cb5d9 for ^10 { say run(<perl6 -e>, ÔΩ¢sub f1 { hash a=>1 }; sub f2 { hash b=>2 }; sub f3 { hash c=>3 }; f1 for ^10000; f2 for ^10000; f3 for ^10000ÔΩ£).signal }

[22:08] <committable6> AlexDaniel, ¬¶ace87cb5d9^: ¬´0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§0‚ê§¬ª ¬¶ace87cb: ¬´11‚ê§11‚ê§11‚ê§0‚ê§0‚ê§11‚ê§11‚ê§0‚ê§0‚ê§0‚ê§¬ª

[22:08] <AlexDaniel> yeah that's definitely it

[22:08] <AlexDaniel> lucasb: can you file a ticket please?

[22:08] <dogbert17> or update the existing one

[22:08] <lucasb> I think dogbert17 already did

[22:08] <dogbert17> lucasb++

[22:08] <AlexDaniel> which one is it?

[22:09] <dogbert17> 996

[22:09] <AlexDaniel> R#996

[22:09] <synopsebot_> R#996 [closed]: https://github.com/rakudo/rakudo/pull/996 [JVM] Don't use --nqp-lib=blib for evalserver

[22:09] <AlexDaniel> M#996

[22:09] <synopsebot_> M#996 [open]: https://github.com/MoarVM/MoarVM/issues/996 SEGV when running example code from R#1951

[22:10] <lucasb> dogbert17++ AlexDaniel++ thanks

[22:10] *** lucasb left
[22:11] <AlexDaniel> cool

[22:11] <dogbert17> indeed

[22:12] <dogbert17> the other thing, i.e. R#2477 is probably something for brrt

[22:12] <synopsebot_> R#2477 [open]: https://github.com/rakudo/rakudo/issues/2477 [‚ö† blocker ‚ö†] MoarVM panic: Register types do not match between value and node

[22:15] * jnthn wonders if accidentally snorting chili will help his cold...

[22:16] <jnthn> I'll probably have chance to investigate the SEGV tomorrow

[22:16] <lizmat> jnthn: snorting lukewarm water with a little salt, helps me every now and then

[22:18] <tadzik> jnthn: "accidentally"? ;)

[22:21] <jnthn> I got distracted when cooking, and then couldn't remember if the thing I'd picked out of the spice rack was the chili of paprika, so decided to sniff it, except I've got a cold and sniffed harder, and then I knew...because of the burning sensation :P

[22:22] <jnthn> *or

[22:22] <tadzik> ouch :D

[22:23] <jnthn> 8501e2e Fix off-by-one in multi cache spesh lookup

[22:23] <jnthn> Is in the bump the bissect found

[22:23] <jnthn> And guess what's on top of the stack when it SEGVs?

[22:23] <jnthn> MVM_multi_cache_find_spesh (tc=0x68eae0, cache_obj=0x7ffff3347368, arg_info=0x7ffff6237450, type_tuple=0x7fffec207590)

[22:24] <jnthn> ASAN or valgrind can probably tell us what kind of naughty memory access it is.

[23:02] *** MasterDuke joined
[23:02] *** p6bannerbot sets mode: +v MasterDuke

[23:02] *** MasterDuke left
[23:02] *** MasterDuke joined
[23:02] *** herbert.freenode.net sets mode: +v MasterDuke

[23:02] *** p6bannerbot sets mode: +v MasterDuke

