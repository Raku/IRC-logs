[00:17] *** fake_space_whale joined
[00:18] *** p6bannerbot sets mode: +v fake_space_whale

[03:33] *** ZofBot joined
[03:34] *** p6bannerbot sets mode: +v ZofBot

[03:45] *** SourceBaby joined
[03:46] *** p6bannerbot sets mode: +v SourceBaby

[05:21] *** fake_space_whale left
[05:45] *** AlexDaniel left
[06:35] *** domidumont joined
[06:36] *** p6bannerbot sets mode: +v domidumont

[06:39] *** patrickb joined
[06:39] *** p6bannerbot sets mode: +v patrickb

[06:55] *** brrt joined
[06:56] *** p6bannerbot sets mode: +v brrt

[07:15] *** domidumont left
[07:16] *** domidumont joined
[07:17] *** p6bannerbot sets mode: +v domidumont

[07:31] *** domidumont left
[07:31] *** brrt` joined
[07:32] *** brrt` left
[07:32] *** domidumont joined
[07:33] *** p6bannerbot sets mode: +v domidumont

[07:34] *** brrt left
[08:15] *** domidumont left
[08:16] *** domidumont joined
[08:16] *** p6bannerbot sets mode: +v domidumont

[08:34] *** zakharyas joined
[08:35] *** p6bannerbot sets mode: +v zakharyas

[08:54] *** AlexDaniel joined
[08:54] *** p6bannerbot sets mode: +v AlexDaniel

[09:13] *** robertle joined
[09:14] *** p6bannerbot sets mode: +v robertle

[09:52] *** zakharyas left
[10:00] *** MasterDuke left
[11:06] *** brrt joined
[11:07] *** p6bannerbot sets mode: +v brrt

[11:07] <brrt> \o

[11:08] <timotimo> o/

[12:02] *** zakharyas joined
[12:03] *** p6bannerbot sets mode: +v zakharyas

[12:12] *** AlexDaniel left
[12:23] *** brrt left
[12:25] *** brrt joined
[12:26] *** p6bannerbot sets mode: +v brrt

[12:54] <brrt> ugh, too much to do

[12:54] <brrt> I suppose you'd like to have shift and truncate instructions in the JIT?

[12:54] <brrt> I want to split signed and unsigned cast into separate operators

[13:02] <timotimo> somewhat importantly, these shift ops would be for big ints, but i can probably just steal how jnthn already implemented add and such.

[13:05] <timotimo> we probably already have shift ops for regular native ints

[13:05] <timotimo> but yeah, truncate (do we also have extend ops?) would be good to have in the jit

[13:11] *** patrickb left
[13:12] <brrt> we have cast (up)

[13:13] <brrt> truncate would be implemented essentially the same, with movzx, except that we'd assign a different size

[13:13] <brrt> I think I'm going to merge MasterDuke++ and jstuder++'s PRs

[13:14] <timotimo> mhh. since registers are 64bit either way, even when using int8, it's probably actually better performance either way to use "int" instead of "int8" here

[13:14] <timotimo> since i grab the value out of an int8 @foo anyway

[13:14] <brrt> depends on how you read them, yes

[13:14] <timotimo> BTW SIMD when? ;) ;)

[13:15] <timotimo> perhaps we'll actually keep a bit of .c code in rakudo so we can implement SIMD-improved fast paths for some operations there

[13:15] <timotimo> like "oh, [+] on a int16 @foo? i have a native call for that!"

[13:17] <timotimo> since we're pretty sure we don't want to try autovectorization, right?

[13:23] <timotimo> i wonder if it's a terrible idea to implement some "heavy" ops in the interp.c thing by having the labels for multiple ops point at the same body and then differentiate inside

[13:23] <timotimo> like sp_add_I and sp_sub_I are pretty big, and only differ in one single little spot

[13:24] <timotimo> well, two little spots

[13:24] <timotimo> one is the fallback, which is extra expensive anyway, because it's a call

[13:24] <brrt> no, no C code in rakudo

[13:24] <timotimo> OK, OK :)

[13:24] <brrt> :-P

[13:25] <timotimo> but how about ... writing the assembly into a Buf using nqp code!

[13:25] <brrt> question is... and I'm going to slightly lean on jnthn's design chops here

[13:25] <brrt> how can we design an interface that allows us to use SIMD internally, that is useable by a (high-level) rakudo compiler

[13:26] <brrt> and if we have that, can we scale it to GPU if there are platforms that support it

[13:26] <brrt> counterquestion is, how much perl code *isn't* reading and writing from files/sockets

[13:27] <brrt> timotimo: actually, if we had done that, we'd have had graal

[13:27] <timotimo> well, graal is well received ;)

[13:29] <timotimo> but yeah, at some point we'll reach the limit of opcodes if we just build opcodes for loads of simd things

[13:30] <brrt> I think their bucks-for-bang ratio slightly exceeds our

[13:30] <timotimo> then we can have an argument that differentiates between the different things we could want

[13:30] <brrt> ever heard of liborc?

[13:30] <timotimo> yep

[13:30] <timotimo> optimized ... something

[13:30] <brrt> started as liboil, optimized inner loops

[13:31] <timotimo> yes, exactly that one

[13:31] <brrt> then became a JIT compiler for the same

[13:31] <timotimo> and orc is the oil compiler

[13:31] <brrt> maybe we can expose a sort of interface to that

[13:32] <timotimo> well, obviously we could nativecall into it ;)

[13:32] <brrt> or that. but I think we can do better

[14:31] *** brrt left
[14:55] *** AlexDaniel joined
[14:55] *** p6bannerbot sets mode: +v AlexDaniel

[15:16] *** fake_space_whale joined
[15:16] *** p6bannerbot sets mode: +v fake_space_whale

[15:49] *** domidumont left
[15:57] *** zakharyas left
[16:14] *** robertle left
[16:22] *** brrt joined
[16:22] *** p6bannerbot sets mode: +v brrt

[16:25] *** diakopter joined
[16:25] *** p6bannerbot sets mode: +v diakopter

[16:29] *** lizmat joined
[16:29] *** p6bannerbot sets mode: +v lizmat

[16:41] <brrt> ugh, how do I convince whitespace-mode that no, I really do want spaces rather than tabs

[16:41] *** lizmat left
[17:08] *** hoelzro_ left
[17:29] <Geth> Â¦ MoarVM: 17365037b6 | (Daniel Green)++ | 2 files

[17:29] <Geth> Â¦ MoarVM: Add a macro for decoder_ensure_decoder and ...

[17:29] <Geth> Â¦ MoarVM:

[17:29] <Geth> Â¦ MoarVM: templates for decoder<addbytes takebytes takeline empty>.

[17:29] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/17365037b6

[17:29] <Geth> Â¦ MoarVM: df121f9d29 | (Bart Wiegmans)++ | 2 files

[17:29] <Geth> Â¦ MoarVM: Merge remote-tracking branch 'Masterduke17/jit_macro_and_template_for_decoder_ops'

[17:29] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/df121f9d29

[17:29] <Geth> Â¦ MoarVM: f1e83f6f60 | (Bart Wiegmans)++ | 5 files

[17:29] <Geth> Â¦ MoarVM: [JIT] A few more macros

[17:29] <Geth> Â¦ MoarVM:

[17:29] <Geth> Â¦ MoarVM: - repr_id, is_repr_id and not_repr_id

[17:29] <Geth> Â¦ MoarVM: - throw_adhoc - what it says

[17:30] <Geth> Â¦ MoarVM: - &CAT3 for string concatentation

[17:30] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f1e83f6f60

[17:37] *** fake_space_whale left
[17:43] *** travis-ci joined
[17:43] *** p6bannerbot sets mode: +v travis-ci

[17:43] <travis-ci> MoarVM build failed. Bart Wiegmans '[JIT] A few more macros

[17:43] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/425842859 https://github.com/MoarVM/MoarVM/compare/2fb3265a183a...f1e83f6f60b6

[17:43] *** travis-ci left
[17:44] *** hoelzro joined
[17:44] *** p6bannerbot sets mode: +v hoelzro

[17:45] <brrt> ugh, i'm an idiot

[17:46] <diakopter> we are all idiots, sometimes more often than other times :D

[17:52] <AlexDaniel> but typically very often, which is why we delegate our tasks to machines as much as we canâ€¦

[17:52] * AlexDaniel is speaking for himself obviously

[17:53] <AlexDaniel> ðŸ¤¤

[17:54] <Geth> Â¦ MoarVM: 22c98176a1 | (Bart Wiegmans)++ | tools/tiler-table-generator.pl

[17:54] <Geth> Â¦ MoarVM: [JIT] Tiler table generator changes

[17:54] <Geth> Â¦ MoarVM:

[17:54] <Geth> Â¦ MoarVM: - sexpr::encode -> sexpr_encode (oops)

[17:54] <Geth> Â¦ MoarVM: - package rule -> package tiler

[17:54] <Geth> Â¦ MoarVM: - renames

[17:54] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/22c98176a1

[18:02] <Geth> Â¦ MoarVM/master: 5 commits pushed by (Jeremy Studer)++, (Bart Wiegmans)++

[18:02] <Geth> Â¦ MoarVM/master: 6556de6dcd | Make minor jit doc changes

[18:02] <Geth> Â¦ MoarVM/master: 9590c483b3 | Implement cast_load_addr tile for exprjit

[18:02] <Geth> Â¦ MoarVM/master: 9bef425a28 | Add objprimspec exprjit template

[18:02] <Geth> Â¦ MoarVM/master: 37a2cd360f | Increase array size of args on MVMJitTile struct

[18:02] <Geth> Â¦ MoarVM/master: bbc718411a | Merge remote-tracking branch 'jstuder/exprjit_cast_load_addr'

[18:02] <Geth> Â¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/22c98176a154...bbc718411abe

[18:03] <brrt> ok, /me afk

[18:03] *** brrt left
[18:14] *** travis-ci joined
[18:14] *** p6bannerbot sets mode: +v travis-ci

[18:14] <travis-ci> MoarVM build passed. Bart Wiegmans '[JIT] Tiler table generator changes

[18:14] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/425852245 https://github.com/MoarVM/MoarVM/compare/f1e83f6f60b6...22c98176a154

[18:14] *** travis-ci left
[18:17] *** domidumont joined
[18:18] *** p6bannerbot sets mode: +v domidumont

[18:30] *** travis-ci joined
[18:30] *** p6bannerbot sets mode: +v travis-ci

[18:30] <travis-ci> MoarVM build passed. Bart Wiegmans 'Merge remote-tracking branch 'jstuder/exprjit_cast_load_addr''

[18:30] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/425855309 https://github.com/MoarVM/MoarVM/compare/22c98176a154...bbc718411abe

[18:30] *** travis-ci left
[18:31] *** domidumont left
[20:01] *** AlexDaniel left
[20:37] *** lizmat joined
[20:38] *** p6bannerbot sets mode: +v lizmat

[20:56] <Geth> Â¦ MoarVM: 477ec445f8 | (Bart Wiegmans)++ | 7 files

[20:56] <Geth> Â¦ MoarVM: [JIT] Split signed and unsigned cast operators

[20:56] <Geth> Â¦ MoarVM:

[20:56] <Geth> Â¦ MoarVM: Have different semantics, are different operators.

[20:56] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/477ec445f8

[21:01] <jnthn> For SIMD at the op level, we can probably have a small number of ops that take an operand indicating the operation to distribute (add, sub, mul, etc) and maybe the width of the operands or some such

[21:01] <jnthn> Rather than an op explosion over all the pairings of those

[21:05] <masak> I love it when a force multiplier comes together

[21:06] <diakopter> force left-shifter

[21:06] <masak> hey didn't Knuth warn you to not prematurely optimize

[21:07] <diakopter> arbitrary-precision left-shift a trillion

[21:07] * masak boggles

[21:08] <masak> I think I... need to sit down

[21:08] <diakopter> on that note, decommute &

[21:08] * masak .oO( you're commute consists of a trillion-step left shift!?! )

[21:09] <masak> your*

[23:59] *** MasterDuke joined
[23:59] *** p6bannerbot sets mode: +v MasterDuke

[23:59] *** MasterDuke left
[23:59] *** MasterDuke joined
[23:59] *** herbert.freenode.net sets mode: +v MasterDuke

[23:59] *** p6bannerbot sets mode: +v MasterDuke

