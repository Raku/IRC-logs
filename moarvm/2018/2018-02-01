[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 3 ballots submitted by 2 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 10! Congratulations to [Coke]! You win a roll of duck tape!

[02:05] *** _Kaiepi joined
[02:58] *** ilbot3 joined
[04:28] *** unicodable6 joined
[06:05] *** _Kaiepi joined
[06:46] *** brrt joined
[06:47] <brrt> good * #moarvm

[06:55] *** domidumont joined
[07:12] *** domidumont joined
[08:07] *** brrt joined
[08:30] *** AlexDaniel joined
[08:43] <samcv> good * brrt

[08:44] <brrt> ohai samcv

[08:46] *** zakharyas joined
[08:49] *** zakharyas joined
[08:51] <samcv> jnthn: any particular way src/strings/windows1252.c was created (the binary if/else chain)

[08:51] <samcv> i'm considering adding more encodings to MoarVM

[09:01] <samcv> so seems ISO-8859-1 and Windows-1251 may be able to both be decoded as windows-1251 from my research and i'm guessing both of ours go through the w-1251 path. and after that most popular encodings on the web are Shift JIS (japanese), Windows-1252(cyrillic) and GB2312 at 0.8, 0.7 and 0.6% usage

[09:01] <samcv> so i'm considering creating a script that can generate some perl 6 code and create C code for all of the non-utf8 encodings that are 1 byte per char

[09:02] <samcv> then we can just add them all trivially

[09:06] *** samcv left
[09:06] *** samcv joined
[09:41] *** reportable6 joined
[09:45] <Geth> ¦ MoarVM: dd72e1f1ec | (Bart Wiegmans)++ | src/jit/core_templates.expr

[09:45] <Geth> ¦ MoarVM: Disable box_i template for the time being

[09:45] <Geth> ¦ MoarVM:

[09:45] <Geth> ¦ MoarVM: Seems to break the build (in a way that is difficult to reproduce for

[09:45] <Geth> ¦ MoarVM: some and consistent for others). No idea why so far...

[09:45] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/dd72e1f1ec

[09:46] *** reportable6 joined
[10:01] *** travis-ci joined
[10:01] <travis-ci> MoarVM build passed. Bart Wiegmans 'Disable box_i template for the time being

[10:01] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/336022142 https://github.com/MoarVM/MoarVM/compare/7434f5e334ca...dd72e1f1ecc1

[10:01] *** travis-ci left
[10:08] *** evalable6 joined
[10:09] *** bisectable6 joined
[10:09] *** committable6 joined
[10:20] <jnthn> samcv: No; pretty sure it wasn't me that added it. If there's any script that did it, it'll be in the bin/ directory. But I'm not quite sure that an if ladder like that would be faster than just having a lookup table anyway, for decoding?

[10:21] <samcv> jnthn: ah, you show up in the git blame but maybe you just modified an earlier version

[10:22] <samcv> Feb 2014: Correct Latin-1; add Windows-1252. The Latin-1 implementation we had actually did Windows-1252. We're not HTML 5, so should actually Latin-1 when asked to. Keep the original code around as a Windows-1252 implementation.

[10:23] <samcv> ok it's old. by diakopter from 2012

[10:23] <samcv> looked at the log from src/strings/latin1.c

[10:33] *** zakharyas joined
[11:10] *** ilmari_ joined
[11:11] *** timo joined
[11:11] *** ilmari joined
[11:23] *** geekosaur joined
[11:24] *** bisectable6 joined
[11:31] *** evalable6 joined
[11:31] *** committable6 joined
[11:39] *** nativecallable6 joined
[11:40] *** coverable6 joined
[11:41] *** quotable6 joined
[11:41] *** greppable6 joined
[11:41] *** unicodable6 joined
[12:37] *** colomon joined
[13:48] *** zakharyas joined
[15:01] *** zakharyas joined
[15:43] *** AlexDaniel joined
[15:52] *** _Kaiepi joined
[15:57] *** nativecallable6 joined
[16:16] *** brrt joined
[16:17] *** reportable6 joined
[16:29] *** brrt joined
[16:33] *** unicodable6 joined
[16:34] *** nativecallable6 joined
[16:34] *** bisectable6 joined
[16:46] <Geth> ¦ MoarVM/jit-expr-optimizer: 13 commits pushed by (Bart Wiegmans)++

[16:46] <Geth> ¦ MoarVM/jit-expr-optimizer: review: https://github.com/MoarVM/MoarVM/compare/dce091807d...3291dc3509

[17:12] *** Kaiepi joined
[18:26] *** domidumont joined
[19:53] *** committable6 joined
[20:49] *** zakharyas joined
[21:22] <samcv> so it looks like there's only one line different between the latin and windows-1252 decoder

[21:26] <jnthn> Yeah, I'd pondered before that for some byte encodings we might be able to just have same code, different tables

[22:20] *** stmuk left
[22:24] <Geth> ¦ MoarVM: 7fdc6aa3dd | (Zoffix Znet)++ | src/moar.c

[22:24] <Geth> ¦ MoarVM: Fix SEGV when opening MVM_*_LOG files; dogbert17++

[22:24] <Geth> ¦ MoarVM:

[22:24] <Geth> ¦ MoarVM: Phixes https://github.com/rakudo/rakudo/issues/1451

[22:24] <Geth> ¦ MoarVM:

[22:24] <Geth> ¦ MoarVM: Check the return value of fopen() and give proper error when

[22:24] <Geth> ¦ MoarVM: we fail to open the file we were given.

[22:24] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7fdc6aa3dd

[22:36] <Geth> ¦ MoarVM: 6306b824a5 | (Samantha McVey)++ | 2 files

[22:36] <Geth> ¦ MoarVM: Add script to generate Windows-1251 and 1252 codetables

[22:36] <Geth> ¦ MoarVM:

[22:36] <Geth> ¦ MoarVM: Also update tools/UCD-download.p6 to download these codetables.

[22:36] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/6306b824a5

[22:39] <samcv> i see a bug in our windows-1252 encoding right now

[22:39] <samcv> m: 0x2122.chr.encode: 'windows-1252'

[22:39] <camelia> rakudo-moar 92c6a29af: OUTPUT: «Error encoding Windows-1252 string: could not encode codepoint 8482␤  in block <unit> at <tmp> line 1␤␤»

[22:39] *** lizmat joined
[23:05] *** evalable6 joined
[23:05] *** bisectable6 joined
[23:05] *** committable6 joined
[23:20] *** nativecallable6 joined
[23:43] <Geth> ¦ MoarVM: samcv++ created pull request #793: Add windows-1251 (Cyrillic) decode/encode. Fix bug in windows-1252

[23:43] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/793

[23:52] <samcv> jnthn: i turned the binary if/else chain into a switch, so we can just let the compiler make its own

[23:52] <samcv> for the unicode->windows-125x encoder
