[00:11] *** MasterDuke left
[00:51] *** MasterDuke joined
[02:01] *** MasterDuke left
[02:17] *** MasterDuke joined
[03:34] *** AlexDaniel left
[03:34] *** AlexDaniel joined
[04:06] <samcv> so i did some work over a few days. and i wasn't able to do a meet in the middle attack on our current hash implementation. due to how it has three state variables rather than just 1 in most hashing systems

[04:08] <samcv> the space of three uint32's is too great to be able to attack it easily this way it appears to me

[04:08] <samcv> i may still switch to siphash since it's been studied more though, but the need isn't very pressing

[04:10] <samcv> and i think they're about the same speed as each other in the testing i had previously done

[04:11] <samcv> though i may be able to speed up what we're doing now a bit

[04:17] <samcv> and i would like a 64 bit hash value

[04:17] *** AlexDaniel left
[04:17] *** AlexDaniel joined
[05:55] <samcv> I got this with asan https://gist.github.com/samcv/4d12bb5e80a6d509a3b4654dd6efb541

[05:56] <samcv> in t/concurrency/01-thread.t. it's a flapper

[06:03] <samcv> actually it only happened once :\

[06:03] <samcv> even though i tried runnig it in a loop

[06:23] *** AlexDaniel`` left
[06:23] *** wictory[m] left
[06:24] *** ilmari[m] left
[06:26] *** benchable6 left
[06:26] *** greppable6 left
[06:26] *** squashable6 left
[06:26] *** bisectable6 left
[06:26] *** releasable6 left
[06:26] *** releasable6 joined
[06:26] *** squashable6 joined
[06:26] *** greppable6 joined
[06:26] *** bisectable6 joined
[06:26] *** benchable6 joined
[06:31] *** lizmat left
[06:54] *** lizmat joined
[07:05] *** MasterDuke left
[07:35] *** stmuk_ joined
[07:36] *** ilmari[m] joined
[07:54] *** domidumont joined
[08:01] *** domidumont left
[08:02] *** domidumont joined
[08:12] *** wictory[m] joined
[08:12] *** AlexDaniel`` joined
[10:05] <lizmat> do we have a writeup on MoarVM's garbage collection somewhere I can refer to in an article?

[10:53] *** MasterDuke joined
[11:50] *** domidumont left
[14:59] *** lizmat left
[15:10] <japhb> samcv: https://www.schneier.com/blog/archives/2011/04/schneiers_law.html seems relevant.  :-)

[15:11] *** Ven`` joined
[15:16] *** MasterDuke left
[15:25] *** Ven`` left
[15:26] *** Ven`` joined
[15:46] *** domidumont joined
[15:54] *** domidumont left
[16:10] *** Ven`` left
[16:11] *** Ven`` joined
[17:18] *** domidumont joined
[17:47] <samcv> japhb: yep very true. switching seems good just because i haven't found any security research on it. though it doesn't appear Meet in the middle vulnerable. there may be other ways to exploit it :P

[17:48] <samcv> or it is, though i fairly suspect it's not given it has three but not two state variables

[17:49] <samcv> since you need all three 32 bit uints to match up to do it properly. just not likely enough to make it feasible and i think slower than a brute force attack

[18:11] *** Ven`` left
[18:15] *** Ven`` joined
[18:17] *** domidumont left
[18:27] *** Ven`` left
[18:28] *** Ven`` joined
[19:17] *** MasterDuke joined
[19:28] <samcv> siphash is slower though

[19:28] *** Ven`` left
[19:29] *** zakharyas joined
[21:07] *** MasterDuke left
[21:10] *** lizmat joined
[21:29] *** ggoebel left
[21:45] *** ggoebel joined
[22:14] *** dalek left
[22:29] *** zakharyas left
[22:57] *** Ven`` joined
[23:09] *** Ven`` left
[23:27] *** synopsebot left
