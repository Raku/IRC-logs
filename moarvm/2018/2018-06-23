[00:37] <MasterDuke> timotimo: fyi, ran the --profile-compile of the rakudo build in gdb, it just exited normally (but no profile actually written)

[02:44] *** MasterDuke_ joined
[02:45] *** MasterDuke left
[03:10] *** lizmat left
[03:27] *** MasterDuke_ is now known as MasterDuke

[03:28] <Geth> Â¦ MoarVM: f75abe7c69 | (Samantha McVey)++ | src/strings/uthash.h

[03:28] <Geth> Â¦ MoarVM: Fix the grammar of a comment in uthash.h

[03:28] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f75abe7c69

[03:52] *** MasterDuke left
[06:24] *** lizmat joined
[07:29] *** [Coke] left
[07:29] *** [Coke] joined
[08:08] *** Geth joined
[08:08] *** synopsebot joined
[08:12] *** lizmat left
[08:18] *** domidumont joined
[08:25] *** domidumont left
[08:25] *** domidumont joined
[10:22] *** domidumont left
[12:59] *** MasterDuke joined
[13:12] <MasterDuke> timotimo: what's the sequence of functions called in moar after normal execution is done and writing out profiling data is starting?

[13:14] <MasterDuke> i.e., my --profile-compile of the rakudo build doesn't get to dump_instrumented_profile_data in HLL/Backend.nqp, so i want to add some debug prints in moar to see where it does get to there

[13:15] <timotimo> have you seen src/vm/moar/HLL/Backend.nqp and its run_profiled method?

[13:17] <MasterDuke> hm, that just sticks self.dump_profile_data into an END phaser?

[13:19] <MasterDuke> i guess i can stick a note() in there to see if it gets called...

[13:21] <timotimo> oh, end phaser, huh?

[13:21] <timotimo> that's probably what's going wrong

[13:23] <MasterDuke> how so? i mean, --profile-compile does work for some other test scripts i tried, and it used to work for the rakudo build

[13:28] <timotimo> the core setting profile doesn't have a setting, so perhaps the END_PHASERS symbol doesn't exist at the beginning

[13:31] <MasterDuke> did something change with @END_PHASER in the past 9 months?

[13:32] <MasterDuke> because in september 2017 i could profile the build

[14:03] *** Voldenet joined
[14:03] *** Voldenet left
[14:03] *** Voldenet joined
[14:16] *** lizmat joined
[14:44] *** domidumont joined
[16:44] <dogbert17> libuv 1.21.0 is out, https://github.com/libuv/libuv/blob/v1.x/ChangeLog

[17:08] <samcv> .tell brrt when you get the chance can you review my PR for expr jit templates? https://github.com/MoarVM/MoarVM/pull/873

[17:08] <yoleaux> samcv: I'll pass your message to brrt.

[17:22] *** evalable6 left
[17:23] *** evalable6 joined
[18:10] *** domidumont left
[18:46] *** lizmat left
[19:28] *** brrt joined
[19:28] <brrt> samcv++ # expr templates yay

[19:28] <yoleaux> 17:08Z <samcv> brrt: when you get the chance can you review my PR for expr jit templates? https://github.com/MoarVM/MoarVM/pull/873

[19:56] *** zakharyas joined
[19:59] *** MasterDuke left
[20:06] *** zakharyas left
[20:07] <Kaiepi> what does it mean when there's a ! after an expr template name?

[20:09] <samcv> brrt: 57 more! whee

[20:11] <samcv> Kaiepi: uh the function puts something in the return register without assistance

[20:11] <samcv> so it writes to the return value register directly

[20:12] *** zakharyas joined
[20:12] <brrt> the idea is that without a '!', a template forms an expression (that returns a value); the JIT can decide whether it is necessary to store that to memory

[20:12] <brrt> the '!' basically constrains that

[20:13] <brrt> dunno if you know about scheme, but it has the same sort of convention :-)

[20:13] <samcv> brrt: could you figure out how to turn this into a command line script? https://github.com/yashi/org-asciidoc

[20:13] <samcv> i don't know much about emacs or lisp

[20:14] *** zakharyas left
[20:14] <brrt> you probably could, actually, but i've never quite learned the magic incantations to do so :-)

[20:14] <brrt> something about emacs --batch somethingsomething

[20:15] <Kaiepi> i think i understand

[20:16] <samcv> if we can get them all to asciidoc i should be able to make a nice website that has all the pages in an index or something

[20:18] *** Kaiepi left
[20:18] *** Kaiepi joined
[20:19] *** zakharyas joined
[20:21] <Kaiepi> there are a few jit templates i think i'd be able to add after samcv's pullreq gets merged

[20:22] <samcv> brrt: well this tool seems to work perfectly even with tables in emacs

[20:22] <samcv> not sure how to export it to a file though

[20:23] <samcv> i run org-asciidoc-export-as-asciidoc and then it comes up with another emacs window showing the converted file

[20:28] <brrt> normally org gives you a window to choose how to export

[20:29] *** MasterDuke joined
[20:35] <brrt> i'm a bit too tired to figure it out at this point though :-)

[20:36] <brrt> and there's also the weird thing about Inline::Perl5 and throwpayloadlexcaller

[20:36] <brrt> throwpayloadlexcaller needs a review anyway, I just don't understand that stuff

[20:41] <brrt> speak y'all later

[20:41] *** brrt left
[21:02] <samcv> o/

[21:44] <Kaiepi> are there any cases where it'd be a bad idea to make a jit template for an op?

[21:45] <Kaiepi> also, how do i test templates i've added? just use the ops?

[21:56] *** zakharyas left
[22:02] *** MasterDuke left
[22:10] *** Kaiepi left
[22:10] <samcv> this looks pretty decent https://cry.nu/files/mvmdoc/README.html

[22:11] <samcv> sample page with text: https://cry.nu/files/mvmdoc/jit/overview.html https://cry.nu/files/mvmdoc/collation.html

[22:11] *** Kaiepi joined
[22:13] <samcv> haven't dealt with the markdown files yet though but orgmode and asciidoc ones are working

[22:17] *** Kaiepi left
[22:17] *** Kaiepi joined
[22:18] *** Kaiepi left
[22:19] *** Kaiepi joined
[22:28] <Geth> Â¦ MoarVM: f12567907d | (Jonathan Worthington)++ | 8 files

[22:28] <Geth> Â¦ MoarVM: Add a negated object literal spesh plugin guard

[22:28] <Geth> Â¦ MoarVM:

[22:28] <Geth> Â¦ MoarVM: This will be useful for specializing on "not Nil" in the Perl 6 spesh

[22:28] <Geth> Â¦ MoarVM: plugin for assignment.

[22:28] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f12567907d

[22:30] <Geth> Â¦ MoarVM: 02bddce853 | (Jonathan Worthington)++ | 2 files

[22:30] <Geth> Â¦ MoarVM: JIT the object non-match guard

[22:30] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/02bddce853

[22:40] <Geth> Â¦ MoarVM: b3ce4f6d33 | (Jonathan Worthington)++ | src/spesh/plugin.c

[22:40] <Geth> Â¦ MoarVM: Elide object non-match guard in a bunch of ways

[22:40] <Geth> Â¦ MoarVM:

[22:40] <Geth> Â¦ MoarVM: The "must not be object X" guard can be eliminated by noticing any of:

[22:40] <Geth> Â¦ MoarVM: * That we know the value and it's not the one we guard against

[22:40] <Geth> Â¦ MoarVM: * That we know the value's type and it's not the same type as the one

[22:40] <Geth> Â¦ MoarVM:   we guard against

[22:40] <Geth> Â¦ MoarVM: * Knowing the concreteness of the value is opposite to the one we guard

[22:40] <Geth> Â¦ MoarVM:   against

[22:40] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b3ce4f6d33

[22:41] *** travis-ci joined
[22:41] <travis-ci> MoarVM build errored. Jonathan Worthington 'Add a negated object literal spesh plugin guard

[22:41] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/395942209 https://github.com/MoarVM/MoarVM/compare/0c04e6cad1b5...f12567907d9d

[22:41] *** travis-ci left
[22:42] <jnthn> ah, apt failure

[22:48] *** MasterDuke joined
[22:49] <MasterDuke> Kaiepi: you know about setting MVM_JIT_LOG=<something> and checking there?

[22:54] <Kaiepi> no

[23:09] *** travis-ci joined
[23:09] <travis-ci> MoarVM build failed. Jonathan Worthington 'JIT the object non-match guard'

[23:09] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/395942575 https://github.com/MoarVM/MoarVM/compare/f12567907d9d...02bddce853ad

[23:09] *** travis-ci left
[23:40] *** MasterDuke left
[23:48] *** MasterDuke joined
[23:49] <MasterDuke> Kaiepi: if you grep for 'BAIL' you'll see non-jitted ops

[23:50] <MasterDuke> so then you can try and jit them and see if they don't cause BAILs afterwards

