[00:26] *** Geth joined
[01:01] *** japhb joined
[02:57] *** ilbot3 joined
[07:15] *** evalable6 joined
[07:53] *** Ven`` joined
[09:06] *** evalable6 joined
[09:17] *** domidumont joined
[09:25] *** domidumont joined
[09:41] *** bart__ joined
[09:42] <nine> Good morning, brrt!

[09:42] <brrt> good * nine

[09:42] <brrt> i presume morning, fwiw

[09:42] <brrt> :-)

[09:42] <brrt> i was reading jnthn++ s nice post. and i was thinking obviously only of the technical issue

[09:42] <brrt> see,

[09:43] <brrt> since fork() will kill any threads

[09:43] <brrt> except for the forking thread

[09:43] <brrt> why don't we... cooperate with that a bit?

[09:43] <brrt> as in, implement and wait for orderly shutdown of all currently running threads, and fork only then

[09:46] <brrt> (seeing the activity from MasterDuke++ and nine++ tells me it is high time for me to blog once more)

[10:02] <nine> Reading pthread_atfork (3p) it sounds at least possible to safely fork() a program running only one thread + the spesh worker. We'd have to synchronize the threads, properly shut down the spesh worker and restart it in both processes after the fork.

[10:05] *** committable6 joined
[10:06] <brrt> proper shutdown of the spesh worker should be possible

[10:06] <brrt> also

[10:06] <brrt> we already have the gc syncpoint

[10:07] <brrt> *mechanism for waiting for threads to block

[10:08] <brrt> the way i'm thinking off spesh worker shutdown, is to: - flush the existing work quue and put a sentinel value

[10:08] <brrt> and for those threads that are waiting for a syscall, we might be able to interupt them with a well-placed signal

[10:13] *** nine joined
[10:14] *** camelia joined
[10:31] *** dogbert17 joined
[12:41] *** bisectable6 joined
[14:27] *** bisectable6 joined
[14:42] *** bisectable6 joined
[15:31] *** unicodable6 joined
[16:27] *** zakharyas joined
[16:28] *** zakharyas joined
[16:34] *** zakharyas joined
[16:48] *** zakharyas joined
[17:11] *** colomon joined
[18:41] *** zakharyas joined
[20:01] *** colomon_ joined
[20:28] *** Kaiepi joined
[21:00] *** releasable6 joined
[21:13] *** nativecallable6 joined
[21:54] *** zakharyas joined
[22:14] *** nativecallable6 joined
[22:19] *** coverable6 joined
[22:25] *** quotable6 joined
[22:40] *** Kaiepi joined
[23:04] <Geth> Â¦ MoarVM: cygx++ created pull request #789: Make MVM_spesh_manipulate_remove_handler_successors() public

[23:04] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/789

[23:10] *** sivoais joined
[23:27] *** colomon joined
