[00:39] <Geth> Â¦ MoarVM: e783f56759 | (Samantha McVey)++ | tools/update-changelog.p6

[00:39] <Geth> Â¦ MoarVM: Unbreak update-changelog.p6 and use new Git::Log module

[00:39] <Geth> Â¦ MoarVM:

[00:39] <Geth> Â¦ MoarVM: Use my new module, Git::Log instead of a super hackish parsing of git

[00:39] <Geth> Â¦ MoarVM: log's output. The new version should be less error prone and simpler.

[00:39] <samcv> the changelog is so long

[00:39] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e783f56759

[00:39] <samcv> got the script working again though, here is the output atm https://gist.github.com/90fb70be9a536518d11b0dfd584d91ba

[02:01] *** MasterDuke joined
[02:01] *** p6bannerbot sets mode: +v MasterDuke

[02:03] *** MasterDuke left
[02:03] *** MasterDuke joined
[02:03] *** herbert.freenode.net sets mode: +v MasterDuke

[02:03] *** p6bannerbot sets mode: +v MasterDuke

[02:44] *** MasterDuke left
[03:07] <AlexDaniel> samcv: if it is generated like that, maybe it should also include commit shas at the end like rakudo changelog does

[03:07] <AlexDaniel> or maybe not, you decide :)

[05:06] *** fake_space_whale left
[05:11] *** AlexDaniel left
[05:11] *** AlexDaniel joined
[05:11] *** livingstone.freenode.net sets mode: +v AlexDaniel

[05:11] *** p6bannerbot sets mode: +v AlexDaniel

[08:55] *** lizmat joined
[08:56] *** p6bannerbot sets mode: +v lizmat

[09:12] <lizmat> .tell brrt nice blog post, s/langauge/language/

[09:12] <yoleaux> lizmat: I'll pass your message to brrt.

[09:31] *** brrt joined
[09:32] *** p6bannerbot sets mode: +v brrt

[09:35] <brrt> \o

[09:35] <yoleaux> 09:12Z <lizmat> brrt: nice blog post, s/langauge/language/

[09:35] <brrt> thank you lizmat  :-) changed

[09:45] *** stmuk_ joined
[09:46] *** p6bannerbot sets mode: +v stmuk_

[09:46] *** lizmat left
[09:47] *** stmuk left
[10:21] *** brrt left
[11:44] *** lizmat joined
[11:45] *** p6bannerbot sets mode: +v lizmat

[12:09] *** stmuk joined
[12:10] *** p6bannerbot sets mode: +v stmuk

[12:12] *** stmuk_ left
[12:26] *** AlexDaniel left
[12:28] *** AlexDaniel joined
[12:28] *** p6bannerbot sets mode: +v AlexDaniel

[12:36] *** stmuk_ joined
[12:37] *** p6bannerbot sets mode: +v stmuk_

[12:39] *** stmuk left
[14:47] *** stmuk joined
[14:48] *** p6bannerbot sets mode: +v stmuk

[14:49] *** stmuk_ left
[15:14] *** zakharyas joined
[15:14] *** p6bannerbot sets mode: +v zakharyas

[15:23] *** zakharyas left
[15:23] <TimToady> brrt: I think I saw a s/Truffe/Truffle/ while you're at it

[15:24] *** zakharyas joined
[15:24] *** p6bannerbot sets mode: +v zakharyas

[15:24] <TimToady> though given the extra images in my "good" eye, counting ascenders is a bit problematic right now :)

[15:26] <TimToady> hmm, not on, actually...

[15:26] <TimToady> .tell brrt I think I saw a s/Truffe/Truffle/ while you're at it

[15:26] <yoleaux> TimToady: I'll pass your message to brrt.

[15:56] *** reportable6 left
[15:56] *** reportable6 joined
[15:57] *** p6bannerbot sets mode: +v reportable6

[16:13] *** avar left
[16:18] *** avar joined
[16:18] *** avar left
[16:18] *** avar joined
[16:18] *** p6bannerbot sets mode: +v avar

[16:19] *** p6bannerbot sets mode: +v avar

[16:27] *** fake_space_whale joined
[16:28] *** p6bannerbot sets mode: +v fake_space_whale

[16:59] *** diakopter joined
[16:59] *** p6bannerbot sets mode: +v diakopter

[17:15] *** stmuk_ joined
[17:16] *** p6bannerbot sets mode: +v stmuk_

[17:17] *** stmuk left
[17:34] <timotimo> hm, do we ever inline something into a P6opaque that has its own unmanaged_size? because in that case we'd be missing calling that on our inlined objects

[17:53] <timotimo> i want to record the maxrss in the profiler, though it'd be much nicer if i could get a "current rss" value instead :|

[18:04] *** zakharyas left
[18:04] *** zakharyas joined
[18:05] *** p6bannerbot sets mode: +v zakharyas

[18:15] *** benjikun joined
[18:15] *** p6bannerbot sets mode: +v benjikun

[18:35] <jnthn> timotimo: I guess a P6bigint with an allocated bigint part would be such a case

[18:37] <timotimo> that's what i thought; we inline P6str sometimes, but that's "just" a pointer to a VMString iirc

[18:37] <timotimo> the allocation tracker may want to learn a bit more about some ops, like ones that create a VMString + a P6str

[18:39] <timotimo> https://imgur.com/Lh7Ye6s - until then it'll look a bit like this; i'll also add a column with bytes * count

[18:58] <timotimo> *sigh* i wonder if it's time to burn this system to the ground and start anew

[19:04] *** zakharyas left
[19:29] *** robertle left
[19:31] *** brrt joined
[19:32] *** p6bannerbot sets mode: +v brrt

[19:32] <brrt> \o

[19:32] <yoleaux> 15:26Z <TimToady> brrt: I think I saw a s/Truffe/Truffle/ while you're at it

[19:32] <brrt> thanks, updated

[19:39] *** fake_space_whale left
[20:18] *** brrt left
[20:46] *** diakopter left
[22:52] *** avar left
[22:59] <lizmat> .tell brrt https://www.reddit.com/r/perl6/comments/9aebjz/a_curious_benchmark_brrt_to_the_future/e4vw9br/

[22:59] <yoleaux> lizmat: I'll pass your message to brrt.

[23:00] *** avar joined
[23:00] *** avar left
[23:00] *** avar joined
[23:00] *** p6bannerbot sets mode: +v avar

[23:01] *** p6bannerbot sets mode: +v avar

[23:03] <jnthn> I suspect he really meant bytes, and that he's also talking precisely about the size of the machine code produced for that function

[23:03] <jnthn> But it's also a bit misleading, in that JIT will have been triggered by OSR

[23:04] <jnthn> And that means it includes the bunch of boilerplate that we spit out at the start of every program unit, such as the stuff that deals with CTXSAVE

[23:04] <jnthn> Of course, that isn't part of the interesting loop under consideration

[23:04] <jnthn> So it's probably not as bad as those numbers make it look

[23:12] <lizmat> jnthn: thanks!

[23:12] <lizmat> afk again&&

[23:20] <timotimo> i'll write something about the OSR thing

[23:28] *** avar left
[23:38] *** avar joined
[23:38] *** avar left
[23:38] *** avar joined
[23:38] *** p6bannerbot sets mode: +v avar

[23:38] *** p6bannerbot sets mode: +v avar

[23:44] <timotimo> oooh, why don't i take the rusage of cpu time before and after every gc run and use that to figure out how much the program has been doing between GC runs (and i guess also during the GC run)

