[01:19] <timotimo> the reverse-cont i set up with a watchpoint has been running for what feels like 4 hours now

[01:27] <timotimo> ok, looks like rr kind of died

[02:07] *** Kaiepi joined
[02:40] *** FROGGS_ joined
[02:56] *** ilbot3 joined
[03:23] <MasterDuke> reverse-cont?

[03:40] *** unicodable6 joined
[04:47] *** Ven`` joined
[05:32] *** bisectable6 joined
[06:46] *** greppable6 joined
[07:16] *** domidumont joined
[07:25] *** domidumont joined
[07:31] *** robertle joined
[07:59] *** robertle joined
[08:16] *** lizmat joined
[08:51] <Geth> ¦ MoarVM: 67056c2041 | (Stefan Seifert)++ | src/spesh/optimize.c

[08:51] <Geth> ¦ MoarVM: Fix optimization of zombie conditional causing segfault

[08:51] <Geth> ¦ MoarVM:

[08:51] <Geth> ¦ MoarVM: optimize_iffy may end up removing a conditional altogether if the tested

[08:51] <Geth> ¦ MoarVM: value is known. In this case the call to decompose_object_conditional right

[08:51] <Geth> ¦ MoarVM: after would process an already removed conditional instruction and insert a

[08:51] <Geth> ¦ MoarVM: new instruction for processing the same input as the original conditional.

[08:51] <Geth> ¦ MoarVM: However the original conditional may have been the only instruction keeping

[08:51] <Geth> ¦ MoarVM: <…commit message has 5 more lines…>

[08:51] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/67056c2041

[09:03] *** travis-ci joined
[09:03] <travis-ci> MoarVM build failed. Stefan Seifert 'Fix optimization of zombie conditional causing segfault

[09:03] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/357720705 https://github.com/MoarVM/MoarVM/compare/a3bd17b4f0f7...67056c20416a

[09:03] *** travis-ci left
[09:05] <nine> No idea what this ^^^ is about

[11:01] *** committable6 joined
[11:36] *** lizmat joined
[11:48] *** domidumont joined
[11:55] *** Ven`` joined
[12:03] <MasterDuke> nine: have you seen brrt's branch about fixing something in optimize_iffy?

[12:15] <nine> no

[12:24] <MasterDuke> nine: https://github.com/MoarVM/MoarVM/tree/spesh-refactor-iffy i think

[13:12] <nine> MasterDuke: I think https://github.com/MoarVM/MoarVM/commit/87651d296e9e91e7961bded3615d69eda7c88f78 would have fixed the issue, too

[13:28] <timotimo> if i can get that error locally, i can figure out what part makes it go boom

[13:30] <timotimo> i'd really like travis to re-run the last command that failed with a few different flags, like MVM_SPESH_LOG, so that we can grab the logs from the artifacts part of the build

[13:51] *** AlexDaniel joined
[14:37] *** Ven`` joined
[14:38] *** committable6 joined
[15:07] <Geth> ¦ MoarVM: b5b69681f6 | (Stefan Seifert)++ | src/spesh/optimize.c

[15:07] <Geth> ¦ MoarVM: Fix "'optimize_iffy' : not all control paths return a value"

[15:07] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b5b69681f6

[16:03] *** bisectable6 joined
[16:55] <timotimo> fish: “python syncthing-gtk.py” terminated by signal SIGBUS (Misaligned address error)

[16:55] <timotimo> what have i done?!

[17:02] *** Ven`` joined
[17:18] <timotimo> why's my hard drive so full? oh, a 1.1 gig big heap snapshot, okay!

[17:20] <timotimo> so which of my konsole sessions is the one with 1.8 gigs of scrollback stored on my hard drive

[17:45] *** Ven`` joined
[19:17] <Geth> ¦ MoarVM/grisu: 3ad2183389 | (Zoffix Znet)++ | 4 files

[19:17] <Geth> ¦ MoarVM/grisu: Stringify Num using Grisu3 algo

[19:17] <Geth> ¦ MoarVM/grisu:

[19:17] <Geth> ¦ MoarVM/grisu: - Makes Num stringification 2x faster (tested with rand.Str)

[19:17] <Geth> ¦ MoarVM/grisu: - Fixes RT#127184 https://rt.perl.org/Ticket/Display.html?id=127184

[19:17] <Geth> ¦ MoarVM/grisu: - Fixes RT#124796 https://rt.perl.org/Ticket/Display.html?id=124796

[19:17] <Geth> ¦ MoarVM/grisu: - Fixes RT#132330 https://rt.perl.org/Ticket/Display.html?id=132330

[19:17] <Geth> ¦ MoarVM/grisu:   (fixes Num.WHICH and problems with set()s mentioned in that ticket)

[19:17] <synopsebot> RT#127184 [open]: https://rt.perl.org/Ticket/Display.html?id=127184 [BUG]  One digit short to correctly stringify a double

[19:17] <Geth> ¦ MoarVM/grisu: <…commit message has 40 more lines…>

[19:17] <Geth> ¦ MoarVM/grisu: review: https://github.com/MoarVM/MoarVM/commit/3ad2183389

[19:17] <synopsebot> RT#124796 [new]: https://rt.perl.org/Ticket/Display.html?id=124796 Roast rakudo skip/todo test:./S32-num/stringify.t line:69 reason: 'big stuff'

[19:17] <synopsebot> RT#132330 [open]: https://rt.perl.org/Ticket/Display.html?id=132330 [MATH] Floating point anomalies

[19:24] <AlexDaniel> Zoffix++

[19:25] * dogbert11 is a bit worried about the NQP bump

[19:31] <AlexDaniel> dogbert11: ok, what's wrong with it?

[19:31] <dogbert11> same problem as before, when you bumped

[19:31] <dogbert11> dilbert@Linux-Mint18 ~/repos/rakudo $ ./perl6 t/02-rakudo/03-cmp-ok.t

[19:31] <dogbert11> ===SORRY!===

[19:31] <dogbert11> Missing or wrong version of dependency 'gen/moar/Metamodel.nqp' (from '/home/dilbert/repos/rakudo/lib/Test.pm6 (Test)')

[19:32] <AlexDaniel> try nuking rakudobrew again?

[19:32] <dogbert11> I'm not using rakudobrew now :)

[19:33] <dogbert11> can you run that test with the latest version?

[19:35] <dogbert11> there are 3 possibilities: 1/ I'm a moron, 2/ the build process is broken, 3/one of the NQP commits is no good

[19:39] <AlexDaniel> dogbert11: travis did that without issues

[19:40] <dogbert11> so we're leaning towards alternative 1 then :)

[19:40] <MasterDuke> both my laptop and desktop built nqp+rakudo fine after the bumps

[19:40] <dogbert11> hmm, this is strange

[19:45] * dogbert11 runs another spectest after wiping t/spec/packages/.precomp

[19:56] <timotimo> zoffix++ good work! i saw the screenshot on twitter :D

[20:02] <timotimo> zoffix, if you want something purely for performance, this is an algo that we probably can just put into 3rdparty that does integers quickly: https://pvk.ca/Blog/2017/12/22/appnexus-common-framework-its-out-also-how-to-print-integers-faster/

[20:39] <dogbert11> had to wipe out several .precomp directories in order to get everything to work properly

[20:39] <timotimo> huh. we're supposed to not load precomp files that don't fit our stuff

[20:39] <timotimo> did something go wrong in nine's reproducible builds patch?

[20:40] <Geth> ¦ MoarVM/grisu: 067c059410 | (Zoffix Znet)++ | 4 files

[20:40] <Geth> ¦ MoarVM/grisu: Stringify Num using Grisu3 algo

[20:40] <Geth> ¦ MoarVM/grisu:

[20:40] <Geth> ¦ MoarVM/grisu: - Makes Num stringification 2x faster (tested with rand.Str)

[20:40] <Geth> ¦ MoarVM/grisu: - Fixes RT#127184 https://rt.perl.org/Ticket/Display.html?id=127184

[20:40] <Geth> ¦ MoarVM/grisu: - Fixes RT#132330 https://rt.perl.org/Ticket/Display.html?id=132330

[20:40] <Geth> ¦ MoarVM/grisu:   (fixes Num.WHICH and problems with set()s mentioned in that ticket)

[20:40] <Geth> ¦ MoarVM/grisu:

[20:40] <Geth> ¦ MoarVM/grisu: <…commit message has 39 more lines…>

[20:40] <synopsebot> RT#127184 [open]: https://rt.perl.org/Ticket/Display.html?id=127184 [BUG]  One digit short to correctly stringify a double

[20:40] <Geth> ¦ MoarVM/grisu: review: https://github.com/MoarVM/MoarVM/commit/067c059410

[20:40] <synopsebot> RT#132330 [open]: https://rt.perl.org/Ticket/Display.html?id=132330 [MATH] Floating point anomalies

[20:48] <dogbert11> timotimo: dunno, perhaps my setup is different since I'm the only one complaining

[21:43] <Geth> ¦ MoarVM/grisu: 8841c4241b | (Zoffix Znet)++ | src/math/grisu.c

[21:43] <Geth> ¦ MoarVM/grisu: Mod post-Grisu3 Num renderer…

[21:43] <Geth> ¦ MoarVM/grisu:

[21:43] <Geth> ¦ MoarVM/grisu: …to prefer normalized forms over the shortest possible ones.

[21:43] <Geth> ¦ MoarVM/grisu:

[21:43] <Geth> ¦ MoarVM/grisu: - Also, add a bit of fudging to maintain old format, such us

[21:43] <Geth> ¦ MoarVM/grisu:     collapsing into scientific form for `e > 14` and adding

[21:43] <Geth> ¦ MoarVM/grisu:     leading zero to 1-digit exponents.

[21:43] <Geth> ¦ MoarVM/grisu: - Also, toss the assert()s #YOLO

[21:43] <Geth> ¦ MoarVM/grisu: review: https://github.com/MoarVM/MoarVM/commit/8841c4241b

[21:57] <Geth> ¦ MoarVM/grisu: 49b7389058 | (Zoffix Znet)++ | src/math/bigintops.c

[21:57] <Geth> ¦ MoarVM/grisu: Generalize mp_get_double()

[21:57] <Geth> ¦ MoarVM/grisu:

[21:57] <Geth> ¦ MoarVM/grisu: The current impl assumes a single libtommath digit can fit the entire

[21:57] <Geth> ¦ MoarVM/grisu: mantissa of a double (53 bits, where 1 bit is implied), but DIGIT_BIT

[21:57] <Geth> ¦ MoarVM/grisu: can be as low as 28 bits, which is insufficient.

[21:57] <Geth> ¦ MoarVM/grisu:

[21:57] <Geth> ¦ MoarVM/grisu: Fix by calculating the number of wanted digit from the

[21:57] <Geth> ¦ MoarVM/grisu: size of DIGIT_BIT.

[21:57] <Geth> ¦ MoarVM/grisu: review: https://github.com/MoarVM/MoarVM/commit/49b7389058

[22:28] <Geth> ¦ MoarVM/spesh-refactor-iffy: e5a7f867d1 | (Bart Wiegmans)++ | src/spesh/optimize.c

[22:28] <Geth> ¦ MoarVM/spesh-refactor-iffy: [Spesh] fix negated spesh of known type

[22:28] <Geth> ¦ MoarVM/spesh-refactor-iffy:

[22:28] <Geth> ¦ MoarVM/spesh-refactor-iffy: Facts that were set on input facts were copied to temp facts, but it ws

[22:28] <Geth> ¦ MoarVM/spesh-refactor-iffy: supposed to be set on the result facts. Furthermore, explicitly forget

[22:28] <Geth> ¦ MoarVM/spesh-refactor-iffy: the 'known value' on the result facts.

[22:28] <Geth> ¦ MoarVM/spesh-refactor-iffy: review: https://github.com/MoarVM/MoarVM/commit/e5a7f867d1

[22:41] <Geth> ¦ MoarVM/spesh-refactor-iffy: 5 commits pushed by (Bart Wiegmans)++

[22:41] <Geth> ¦ MoarVM/spesh-refactor-iffy: 8eab56668f | [Spesh] remove object boolification from optimize_iffy

[22:41] <Geth> ¦ MoarVM/spesh-refactor-iffy: ba1b8d347b | [Spesh] Optimize known values for istrue

[22:41] <Geth> ¦ MoarVM/spesh-refactor-iffy: 177ca76413 | [Spesh] optimize more cases of istrue known type

[22:41] <Geth> ¦ MoarVM/spesh-refactor-iffy: e0dabc144a | [Spesh] unbreak rakudo by not optimizing isconcrete in istrue

[22:41] <Geth> ¦ MoarVM/spesh-refactor-iffy: 28e76057e6 | [Spesh] fix negated spesh of known type

[22:41] <Geth> ¦ MoarVM/spesh-refactor-iffy: review: https://github.com/MoarVM/MoarVM/compare/e5a7f867d11c...28e76057e68b
