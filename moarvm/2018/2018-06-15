[00:03] <timotimo> i notice i haven't used my rss feed reader in a while

[00:35] *** lizmat left
[03:29] <samcv> i'm making an atkey for unsigned native int. should i name it atkey_u or atkey_u64

[03:37] <Geth> ¦ MoarVM: 4eda279b5f | (Samantha McVey)++ | src/6model/serialization.c

[03:37] <Geth> ¦ MoarVM: Fix three memory leaks when serialization fails

[03:37] <Geth> ¦ MoarVM:

[03:37] <Geth> ¦ MoarVM: In some instances when calling fail_deserialize we pass through c

[03:37] <Geth> ¦ MoarVM: strings malloc'd by a different function but never free it. Pass these

[03:37] <Geth> ¦ MoarVM: through and use MVM_exception_throw_adhoc_free_va instead of the

[03:37] <Geth> ¦ MoarVM: non-free version.

[03:37] <Geth> ¦ MoarVM:

[03:37] <Geth> ¦ MoarVM: Also ensure that reader->root.dependent_scs is free'd if it exists.

[03:37] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/4eda279b5f

[04:04] <Geth> ¦ MoarVM: samcv++ created pull request #876: Add support for all native int types to getlexref_ni and new atkey_i/u* ops

[04:04] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/876

[04:11] *** huggable left
[04:11] *** huggable joined
[04:50] *** AlexDaniel left
[06:00] *** AlexDaniel joined
[06:09] *** brrt joined
[06:12] *** domidumont joined
[06:18] *** domidumont left
[06:18] *** domidumont joined
[06:28] *** robertle joined
[07:11] *** lizmat joined
[08:23] *** zakharyas joined
[08:31] *** MasterDuke left
[08:46] *** lizmat left
[09:50] *** brrt left
[09:51] *** AlexDaniel left
[10:02] *** AlexDaniel joined
[10:14] *** squashable6 left
[10:38] *** squashable6 joined
[10:54] *** zakharyas left
[10:55] *** zakharyas joined
[11:05] *** AlexDaniel left
[11:10] *** AlexDaniel joined
[11:14] *** zakharyas left
[11:20] *** brrt joined
[12:11] *** AlexDaniel left
[12:12] <brrt> \o

[12:30] *** AlexDaniel joined
[12:41] <timotimo> samcv: but jnthn already refused to accept atkey_iEverySize ops?

[12:43] <jnthn> Indeed. :S

[12:43] <jnthn> A _u one is fine

[12:43] <jnthn> But not all the sized variants

[12:44] <jnthn> Should just do the required introspection inside of the MVMContext

[12:48] * jnthn left a note on the PR suggesting what to do

[12:49] *** zakharyas joined
[12:57] *** brrt left
[13:03] *** brrt joined
[13:07] *** AlexDaniel left
[13:08] *** scovit left
[13:13] *** scovit joined
[13:13] *** scovit left
[13:14] *** scovit joined
[13:31] *** jnthn is now known as KingWhenceless

[13:32] *** lizmat joined
[13:46] *** lizmat left
[13:51] *** zakharyas1 joined
[13:51] *** KingWhenceless is now known as jnthn

[13:53] *** zakharyas left
[14:35] *** dogbert2_ left
[14:43] *** brrt left
[15:00] *** domidumont left
[15:26] *** robertle left
[15:49] *** zakharyas1 left
[16:09] *** AlexDaniel joined
[16:46] *** AlexDani` joined
[16:47] *** AlexDaniel left
[17:20] *** robertle joined
[19:05] *** MasterDuke joined
[19:45] *** MasterDuke left
[19:50] *** MasterDuke joined
[19:54] *** MasterDuke left
[20:02] *** MasterDuke joined
[20:18] <MasterDuke> i still get a warning: src/profiler/telemeh.c: In function ‘MVM_telemetry_interval_annotate_dynamic’: src/profiler/telemeh.c:203:5: warning: ‘strncpy’ specified bound depends on the length of the source argument [-Wstringop-overflow=]      strncpy(temp, description, temp_size);      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ src/profiler/telemeh.c:201:17: note: length computed here      temp_size = strlen(description) + 1;

[20:19] <MasterDuke> the problem is that `char* description` is passed into MVM_telemetry_interval_annotate_dynamic, but its length isn't

[20:20] <MasterDuke> so i guess gcc thinks if it isn't terminated, the strlen could give bad results, and then the strncpy would be bad

[20:22] <MasterDuke> however, the only string that's ever passed to MVM_telemetry_interval_annotate_dynamic is created by MVM_string_utf8_c8_encode_C_string (which does put a null at the end of the string it returns)

[20:22] <MasterDuke> we could just pass the size that MVM_string_utf8_c8_encode_C_string knows about along to MVM_telemetry_interval_annotate_dynamic and use that in the strncpy, and hopefully that would quite the warning

[20:23] <MasterDuke> or is there some way to mark that that particular occurance is safe?

[20:23] <MasterDuke> i haven't found anything searching around yet

[20:30] <timotimo> i should probably look into that ...

[20:30] <timotimo> i'm actually doing grant work right now and webstorm is giving me some major grief

[20:31] <timotimo> it finds that some of my code is unreachable, though clearly i see it being executed

[20:32] <MasterDuke> never heard of webstorm?

[20:42] <timotimo> it's one of the JetBrains IDEs

[20:42] <timotimo> i run mine with the Comma plugin ;)

[20:43] <MasterDuke> ah, nice

