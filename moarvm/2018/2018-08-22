[00:04] <timotimo> will this become the "free things in an extra thread" mechanism later, jnthn?

[00:11] <jnthn> No, I don't think it'll ever be that heavily used

[00:11] <jnthn> That'd be doing the nursery sweep asyncronously

[00:12] <jnthn> Though that needs careful checking we can really get away with it :)

[00:12] <jnthn> (we'd need to audit all the gc_free methods for assumptions)

[00:13] <jnthn> That mechanism is just for when you'd use the FSA free at safepoint but didn't allocate with the FSA :)

[00:20] <timotimo> OK

[00:24] <jnthn> 'night

[00:24] <timotimo> gnite jnthn

[01:02] *** ggoebel left
[01:48] *** fake_space_whale joined
[01:49] *** p6bannerbot sets mode: +v fake_space_whale

[02:23] *** ZzZombo joined
[02:23] *** p6bannerbot sets mode: +v ZzZombo

[02:27] *** lizmat left
[05:06] *** stmuk_ joined
[05:07] *** p6bannerbot sets mode: +v stmuk_

[05:08] *** stmuk left
[05:12] *** dindon16 joined
[05:13] *** dindon16 left
[05:47] *** brrt joined
[05:48] *** p6bannerbot sets mode: +v brrt

[05:48] <brrt> \o

[05:50] <brrt> pmurias: I was under the impression that it had to be GPL fullstop

[05:53] <brrt> but anyway, i'm not so convinced that'd be actually cheaper than writing an ELF file

[06:18] *** fake_space_whale left
[06:44] <brrt> btw, the simplest thing I can do for supporting jump-on-overflow in the expression JIT, is just to have it take a value and yield a flag

[06:44] <brrt> that way, we can do it after any value-yielding expression

[06:45] <brrt> it is also most portable. the downside is that we'd have to rely on subexpression elimination to eliminate the redundant ADD

[06:46] <brrt> but the good thing about it is, that on platforms that would not support an overflow flag (no idea if these are popular), this could still be made to work

[06:46] <brrt> whereas if we treat overflow as a 'trap' or conditional statement by itself we could not

[07:00] *** greppable6 joined
[07:01] *** p6bannerbot sets mode: +v greppable6

[07:23] *** brrt left
[08:03] *** zakharyas joined
[08:04] *** brrt joined
[08:04] *** p6bannerbot sets mode: +v zakharyas

[08:04] *** p6bannerbot sets mode: +v brrt

[08:15] *** lizmat joined
[08:16] *** p6bannerbot sets mode: +v lizmat

[08:31] <brrt> on the other hand, actually writing ELF files, on linux, isn't so hard....

[08:46] *** brrt left
[09:07] *** lizmat left
[09:39] *** dogbert2 joined
[09:40] *** p6bannerbot sets mode: +v dogbert2

[09:42] *** Guest73014 joined
[09:49] *** Guest73014 left
[10:15] *** jwhisnant16 joined
[10:17] *** jwhisnant16 left
[10:55] *** ZzZombo left
[11:22] *** zakharyas left
[12:38] *** zakharyas joined
[12:39] *** p6bannerbot sets mode: +v zakharyas

[13:20] *** mozzarella29 joined
[13:27] *** mozzarella29 left
[14:04] *** Tools3 joined
[14:06] *** mz`24 joined
[14:09] *** mz`24 left
[14:09] *** Tools3 left
[14:58] *** domidumont joined
[14:59] *** p6bannerbot sets mode: +v domidumont

[15:03] *** domidumont left
[15:03] *** domidumont joined
[15:04] *** p6bannerbot sets mode: +v domidumont

[15:11] *** AlexDaniel left
[15:30] *** fake_space_whale joined
[15:31] *** p6bannerbot sets mode: +v fake_space_whale

[15:36] *** beuker joined
[15:40] *** beuker left
[15:44] *** richardjohn17 joined
[15:48] *** richardjohn17 left
[16:29] *** fake_space_whale left
[16:34] *** Miklo14 joined
[16:34] *** zakharyas left
[16:38] *** Miklo14 left
[16:51] *** ggoebel joined
[16:51] *** p6bannerbot sets mode: +v ggoebel

[17:04] *** ggoebel left
[17:17] <japhb> testing

[17:17] <timotimo> success

[17:17] <jnthn> FAIL

[17:17] <jnthn> :P

[17:17] <timotimo> race'd

[17:18] <japhb> It was a success.  Needed to see if voice was winning over restrictions.

[17:18] <japhb> (Partially because I noticed that after the system message about restricting new connections, #moarvm and #perl6-dev got really quiet.)

[17:19] *** ggoebel joined
[17:19] *** p6bannerbot sets mode: +v ggoebel

[17:25] *** samcv left
[17:25] *** camelia left
[17:26] *** camelia joined
[17:26] *** mtj_ joined
[17:26] *** AlexDaniel joined
[17:27] *** p6bannerbot sets mode: +v mtj_

[17:27] *** p6bannerbot sets mode: +v camelia

[17:27] *** notable6 left
[17:27] *** p6bannerbot sets mode: +v AlexDaniel

[17:28] *** statisfiable6 left
[17:28] *** MasterDuke left
[17:28] *** releasable6 left
[17:30] *** AlexDaniel left
[17:30] *** AlexDaniel joined
[17:30] *** barjavel.freenode.net sets mode: +v AlexDaniel

[17:30] *** p6bannerbot sets mode: +v AlexDaniel

[17:35] *** samcv joined
[17:36] *** samcv left
[17:36] *** samcv joined
[17:36] *** p6bannerbot sets mode: +v samcv

[17:36] *** p6bannerbot sets mode: +v samcv

[18:04] *** [Coke]_ is now known as [Coke]

[18:11] *** domidumont left
[18:16] *** ChanServ left
[18:22] *** ChanServ joined
[18:22] *** cherryh.freenode.net sets mode: +o ChanServ

[18:23] *** p6bannerbot sets mode: +v ChanServ

[18:25] *** releasable6 joined
[18:26] *** p6bannerbot sets mode: +v releasable6

[18:26] *** brrt joined
[18:27] *** p6bannerbot sets mode: +v brrt

[19:00] *** brrt left
[21:02] *** AlexDani` joined
[21:03] *** p6bannerbot sets mode: +v AlexDani`

[21:04] *** AlexDaniel left
[21:16] *** AlexDani` is now known as AlexDaniel

[21:44] *** notable6 joined
[21:44] *** MasterDuke joined
[21:44] *** p6bannerbot sets mode: +v MasterDuke

[21:45] *** MasterDuke left
[21:45] *** MasterDuke joined
[21:45] *** herbert.freenode.net sets mode: +v MasterDuke

[21:45] *** p6bannerbot sets mode: +v MasterDuke

[21:45] *** p6bannerbot sets mode: +v notable6

[21:59] *** lizmat joined
[21:59] *** p6bannerbot sets mode: +v lizmat

[22:08] *** lizmat_ joined
[22:08] *** drakythe joined
[22:08] *** drakythe left
[22:09] *** p6bannerbot sets mode: +v lizmat_

[22:09] *** lizmat__ joined
[22:10] *** p6bannerbot sets mode: +v lizmat__

[22:11] *** lizmat left
[22:13] *** lizmat_ left
[22:15] *** lizmat__ is now known as lizmat

[22:22] *** codex2064 joined
[22:24] <Geth> Â¦ MoarVM: ugexe++ created pull request #948: Update libuv to 1.23.0

[22:24] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/948

[22:25] <Geth> Â¦ MoarVM/postrelease-opts: eb6110f8b8 | (Jonathan Worthington)++ | 3 files

[22:25] <Geth> Â¦ MoarVM/postrelease-opts: Correct tracking of log guards at PHI nodes

[22:25] <Geth> Â¦ MoarVM/postrelease-opts:

[22:25] <Geth> Â¦ MoarVM/postrelease-opts: Previously, we only had them on the facts of the PHI node itself.

[22:25] <Geth> Â¦ MoarVM/postrelease-opts: However, those facts could then be copied and relied on elsewhere. With

[22:25] <Geth> Â¦ MoarVM/postrelease-opts: this change, we now keep a list of the log guards that we depend on for

[22:25] <Geth> Â¦ MoarVM/postrelease-opts: each fact, and at a PHI node we copy all the input lists into a target

[22:25] <Geth> Â¦ MoarVM/postrelease-opts: list. We then, when we depend on or copy facts, just assign the input

[22:25] <Geth> Â¦ MoarVM/postrelease-opts: log guards list and count (which is safe since it's immutable, and we

[22:25] <Geth> Â¦ MoarVM/postrelease-opts: use the region allocator so there's no memory management concerns).

[22:25] <Geth> Â¦ MoarVM/postrelease-opts: review: https://github.com/MoarVM/MoarVM/commit/eb6110f8b8

[22:27] <timotimo> oh, so we were not marking facts as "relied upon" when they went through a PHI, and that caused us to leave out guards that were necessary?

[22:28] <jnthn> The original code set the merged log guards flag on a PHI node

[22:28] <jnthn> But then the code that marked the facts as used expected that any node with that flag was a PHI node

[22:29] <jnthn> This caused crashes when it wasn't a PHI node, so I stopped copying it

[22:29] <jnthn> But that was also wrong

[22:29] <jnthn> So now we just keep a list of the log guards that a given fact entry depend on

[22:29] <jnthn> Merging them at a PHI node

[22:29] <timotimo> that sounds sensible

[22:30] <jnthn> And then we can carry them as far forward as we need, including through further PHIs

[22:30] <jnthn> It's possible that we can carry a fact derived from a log guard through multiple PHI nodes before we reach the point something actually uses it

[22:30] <jnthn> With this we can track it all the way back

[22:30] <timotimo> good

[22:31] <jnthn> CORE.setting on my home machine on that branch is now a reliable SEGV rather than sometimes another error...progress? :P

[22:31] <timotimo> \o/

[22:31] *** codex2064 left
[22:32] <[Coke]> reliably exploding sounds good.

[22:34] <jnthn> Well, in 2 runs...then I did it with MVM_JIT_DISABLE=1 and it worked, though I'm not entirely sure if that's legit :)

[22:34] <jnthn> But I really want a test case that isn't CORE.setting...

[22:40] <jnthn> Alas, not yet. I thought there was one in test, but it was in the test for a bug I fixed yesterday in MoarVM master

[22:41] <jnthn> Not much else in master that looks like it could help, alas

[22:48] *** Randy12 joined
[22:49] *** p6bannerbot sets mode: +v Randy12

[22:49] <Randy12> |          \   l  /-----~~" /

[22:49] <Randy12> |           Y   \          /

[22:49] <Randy12> |           |    "x______.^

[22:49] <Randy12> |           |           \      |

[22:49] <Randy12> |           j          /        |

[22:49] <Randy12> |           |; ;  ;  ; ;  ;        /        ,--.........,

[22:49] <Randy12> |           |; ;  ;  ;  ;/       ;       .'           -='.

[22:49] <Randy12> |           | ;  ;  ; ; /       /       .\               '

[22:49] <Randy12> |           |  ;   ;  /`      .\   _,=="  \             .'

[22:49] <Randy12> |           \;  ; ; .'. _  ,_'\.\~"   //`. \          .'

[22:49] <Randy12> |            |  ;  .___~' \ \- | |    /,\ `  \      ..'

[22:49] <Randy12> |          ~ ; ; ;/  =="'' |`| | |       =="''\.==''

[22:49] <Randy12> |          ~ /; ;/=""      |`| |`|   ==="`

[22:49] <Randy12> |          ~..==`     \\   |`| / /=="`

[22:49] <Randy12> |           ~` ~      /,\ / /= )")

[22:49] <Randy12> |          ~ ~~         _')")

[22:49] <Randy12> |          ~ ~   _,=~";`

[22:49] <Randy12> |          ~  =~"|;  ;|       Homerbird

[22:49] <Randy12> |           ~  ~ | ;  |       =========

[22:49] <Randy12> |        ~ ~     |;|\ |

[22:49] <Randy12> |                |/  \|

[22:49] *** ChanServ left
[22:50] <jnthn> bah, I try to kick it and ChanServ netsplits before I can get ops

[22:51] <timotimo> it seems to have finished anyway

[22:51] <jnthn> Indeed

[22:51] <jnthn> Randy indeed.

[22:51] <jnthn> :P

[22:52] *** Randy12 left
[22:55] <jnthn> Ah, got some spectest blowup now

[22:55] <jnthn> One of them a SEGV in mp_mul

[22:55] <jnthn> And only happens when the JIT is enabled

[22:55] <jnthn> Wonder what I messed up...

[23:03] *** ChanServ joined
[23:03] *** cherryh.freenode.net sets mode: +o ChanServ

[23:04] *** p6bannerbot sets mode: +v ChanServ

[23:16] <jnthn> Don't see the problem, alas

[23:19] *** lizmat left
[23:21] * jnthn leaves it for another day

[23:30] *** fake_space_whale joined
[23:31] *** p6bannerbot sets mode: +v fake_space_whale

[23:58] <jnthn> OK, so I failed to stop working on it but did figure it out and it was silly

