[00:03] *** MasterDuke joined
[00:03] *** p6bannerbot sets mode: +v MasterDuke

[00:03] *** MasterDuke left
[00:03] *** MasterDuke joined
[00:03] *** herbert.freenode.net sets mode: +v MasterDuke

[00:03] *** p6bannerbot sets mode: +v MasterDuke

[00:12] <MasterDuke> hm, there's no way to mention a constant #define'd in a .h file in a jit template is there?

[00:15] <samcv> MasterDuke: not sure what you're asking?

[00:16] <samcv> oh. you mean to have inserted into the expr template?

[00:38] *** Monkeh1 joined
[00:44] *** Monkeh1 left
[01:10] *** nukedclx13 joined
[01:13] *** nukedclx13 left
[01:50] <MasterDuke> yeah

[01:51] <MasterDuke> oh, wait, maybe there is

[02:55] *** MasterDuke left
[04:01] *** avar left
[04:01] *** avar joined
[04:01] *** avar left
[04:01] *** avar joined
[04:01] *** p6bannerbot sets mode: +v avar

[04:01] *** p6bannerbot sets mode: +v avar

[05:42] *** domidumont joined
[05:43] *** p6bannerbot sets mode: +v domidumont

[06:18] *** brrt joined
[06:18] <Geth> Â¦ MoarVM/fork-safety: 73156ba02a | (Bart Wiegmans)++ | 5 files

[06:18] <Geth> Â¦ MoarVM/fork-safety: [Spesh] Tear down spesh worker in full_cleanup

[06:18] <Geth> Â¦ MoarVM/fork-safety:

[06:18] <Geth> Â¦ MoarVM/fork-safety: If the spesh worker is still active the GC can try to free a lock that

[06:18] <Geth> Â¦ MoarVM/fork-safety: is being held, which leads to an abort in libuv. Stopping the thread

[06:18] <Geth> Â¦ MoarVM/fork-safety: makes full-cleanup work (although it still leaks).

[06:18] <Geth> Â¦ MoarVM/fork-safety:

[06:18] <Geth> Â¦ MoarVM/fork-safety: Thread is stopped by signalling with VMNull. Ideally we'd unshift this

[06:19] <Geth> Â¦ MoarVM/fork-safety: to the front of the queue, but that is more complicated.

[06:19] *** p6bannerbot sets mode: +v brrt

[06:19] <Geth> Â¦ MoarVM/fork-safety: review: https://github.com/MoarVM/MoarVM/commit/73156ba02a

[06:19] <Geth> Â¦ MoarVM/fork-safety: ac44769b9f | (Bart Wiegmans)++ | 3 files

[06:19] <Geth> Â¦ MoarVM/fork-safety: [ConcBlockingQueue] Unmoving body

[06:19] <Geth> Â¦ MoarVM/fork-safety:

[06:19] <Geth> Â¦ MoarVM/fork-safety: The locks structure was already malloc'd, and I extended this to include

[06:19] <Geth> Â¦ MoarVM/fork-safety: the entire body. This prevents the GC from moving the body while we are

[06:19] <Geth> Â¦ MoarVM/fork-safety: blocked on acquiring a lock, simplifying the code, and has negligible

[06:19] <Geth> Â¦ MoarVM/fork-safety: cost.

[06:19] <Geth> Â¦ MoarVM/fork-safety: review: https://github.com/MoarVM/MoarVM/commit/ac44769b9f

[06:19] <Geth> Â¦ MoarVM/fork-safety: f5e4dfde79 | (Bart Wiegmans)++ | 3 files

[06:19] <Geth> Â¦ MoarVM/fork-safety: [IO] Stop event loop thread

[06:19] <Geth> Â¦ MoarVM/fork-safety:

[06:19] <Geth> Â¦ MoarVM/fork-safety: Stop loop with uv_stop(uv_loop) and join the thread

[06:19] <Geth> Â¦ MoarVM/fork-safety: review: https://github.com/MoarVM/MoarVM/commit/f5e4dfde79

[06:20] <Geth> Â¦ MoarVM/jit-expr-optimizer: 4 commits pushed by (Bart Wiegmans)++

[06:20] <Geth> Â¦ MoarVM/jit-expr-optimizer: e873fbd0d8 | [JIT] Simple tree-rewriting optimizer

[06:20] <Geth> Â¦ MoarVM/jit-expr-optimizer: 59f433491b | [JIT] Optimize multiple loads to a COPY

[06:20] <Geth> Â¦ MoarVM/jit-expr-optimizer: 5b4a263d6b | Optimize ADD of CONST to ADDR

[06:20] <Geth> Â¦ MoarVM/jit-expr-optimizer: ad278ed924 | Eliminate COPY of CONST

[06:20] <Geth> Â¦ MoarVM/jit-expr-optimizer: review: https://github.com/MoarVM/MoarVM/compare/340abc82efe9...ad278ed924da

[06:21] *** domidumont left
[06:52] *** robertle joined
[06:53] *** p6bannerbot sets mode: +v robertle

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: c09e4595a2 | (Bart Wiegmans)++ | 5 files

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: [JIT] New template compiler

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor:

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: - Single-pass compilation (no separate 'validate_template' step

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: - Better type and format checking (operands should be expressions or

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor:   references, parameters should be barewords, numbers or macros)

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: - Write-out parameters need to be refered with a \$ sigil, like \$0,

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor:   and templates without output operands should not get a '!' suffix

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: review: https://github.com/MoarVM/MoarVM/commit/c09e4595a2

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: 16c45f2c57 | (Bart Wiegmans)++ | tools/expr-template-compiler.pl

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: [JIT] Tighten scope rules

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor:

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: - Reintroduce lexical scope for let declarations

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: - Forbid redeclarations (even inner-scope shadowing), because this is

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor:   currently unhygienic

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: - We do allow right-to-left references to declarations in the same let

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor:   scope

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: <â€¦commit message has 9 more linesâ€¦>

[07:04] <Geth> Â¦ MoarVM/template-compiler-refactor: review: https://github.com/MoarVM/MoarVM/commit/16c45f2c57

[07:08] <brrt> also a rebase.....

[07:11] *** fake_space_whale left
[07:11] <Geth> Â¦ MoarVM/template-compiler-refactor: 5c8e050d8c | (Bart Wiegmans)++ | tools/expr-template-compiler.pl

[07:11] <Geth> Â¦ MoarVM/template-compiler-refactor: [JIT] Bind 'let:' declarations eagerly

[07:11] <Geth> Â¦ MoarVM/template-compiler-refactor:

[07:11] <Geth> Â¦ MoarVM/template-compiler-refactor: If we resolve 'let:' declarations before applying macros, then there is

[07:11] <Geth> Â¦ MoarVM/template-compiler-refactor: no possibility of macros introducing a name clash. Also the compiler no

[07:11] <Geth> Â¦ MoarVM/template-compiler-refactor: longer needs to maintain an environment, and can reuse the deduplication

[07:11] <Geth> Â¦ MoarVM/template-compiler-refactor: logic that was already necessary due to macros.

[07:11] <Geth> Â¦ MoarVM/template-compiler-refactor: review: https://github.com/MoarVM/MoarVM/commit/5c8e050d8c

[07:25] *** domidumont joined
[07:26] *** p6bannerbot sets mode: +v domidumont

[07:29] <brrt> I intend to merge the above ^

[07:33] *** Kinsmir0 joined
[07:34] *** zakharyas joined
[07:35] *** p6bannerbot sets mode: +v zakharyas

[07:36] *** Kinsmir0 left
[07:38] <nine> brrt: what I've seen so far looks good

[07:56] *** zakharyas left
[07:57] *** zakharyas joined
[07:57] *** p6bannerbot sets mode: +v zakharyas

[08:15] *** zakharyas left
[08:21] *** graingert8 joined
[08:25] *** graingert8 left
[08:39] *** lizmat left
[08:53] *** lizmat joined
[08:54] *** p6bannerbot sets mode: +v lizmat

[08:59] *** zakharyas joined
[09:00] *** p6bannerbot sets mode: +v zakharyas

[09:01] <brrt> ok, then i'll go for it

[09:10] *** zakharyas left
[09:19] <brrt> ugh, fill_macro still manages to screw up substitution

[09:36] *** See joined
[09:37] *** See left
[09:51] <Geth> Â¦ MoarVM/template-compiler-refactor: 620acf556a | (Bart Wiegmans)++ | tools/expr-template-compiler.pl

[09:51] <Geth> Â¦ MoarVM/template-compiler-refactor: [JIT] Maintain link identity during macro expansion

[09:51] <Geth> Â¦ MoarVM/template-compiler-refactor:

[09:51] <Geth> Â¦ MoarVM/template-compiler-refactor: Because the expand_macro routine constructs a new expression (it makes a

[09:51] <Geth> Â¦ MoarVM/template-compiler-refactor: copy of the original macro) it is necessary to maintain a substitution

[09:51] <Geth> Â¦ MoarVM/template-compiler-refactor: table to ensure that we replace the same references with identical

[09:51] <Geth> Â¦ MoarVM/template-compiler-refactor: substitutions. Added a test case to prove that we do this.

[09:51] <Geth> Â¦ MoarVM/template-compiler-refactor: review: https://github.com/MoarVM/MoarVM/commit/620acf556a

[09:56] *** zakharyas joined
[09:57] *** p6bannerbot sets mode: +v zakharyas

[10:09] *** brrt left
[10:34] <lizmat> Q: is QASTOperationsMAST.nqp still used?  I'm trying to add a "nqp::ifnull_s" there, but it won't even get compiled after a do a configure

[10:38] <lizmat> ah, it's in NQP, duh

[10:44] *** brrt joined
[10:44] *** p6bannerbot sets mode: +v brrt

[10:45] <Geth> Â¦ MoarVM/master: 4 commits pushed by (Bart Wiegmans)++

[10:45] <Geth> Â¦ MoarVM/master: e4542ee130 | [JIT] New template compiler

[10:45] <Geth> Â¦ MoarVM/master: dc1cc51bdc | [JIT] Tighten scope rules

[10:45] <Geth> Â¦ MoarVM/master: 1d4bd3ecd6 | [JIT] Bind 'let:' declarations eagerly

[10:45] <Geth> Â¦ MoarVM/master: 3a0934fce9 | [JIT] Maintain link identity during macro expansion

[10:45] <Geth> Â¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/c49fc88a38f7...3a0934fce91f

[10:46] <lizmat> brrt: feels like a bump is in order ?

[10:50] <brrt> Let me see, what else is there to merge

[10:50] <brrt> I want to get ugexe++'s libuv bump in as well

[10:50] <lizmat> sounds like a plan

[10:51] <brrt> what's cool about these patches is that macro's and let declarations kind of work like you should expect in the template compiler

[10:51] <brrt> the blurb for the weekly is that this makes writing expression templates safer and simpler

[10:51] <brrt> :-)

[10:52] <lizmat> brrt: thanks

[10:52] <lizmat> weekly: the blurb for the weekly is that this makes writing expression templates safer and simpler

[10:52] <notable6> lizmat, Noted!

[10:54] <lizmat> brrt: perhaps make them separate bumps for easier bisectability

[10:54] <brrt> that's possible too

[11:03] *** aaron7 joined
[11:06] *** aaron7 left
[11:13] <lizmat> brrt: should we see any performance difference after these changes ?

[11:13] <brrt> no

[11:13] <brrt> there's a tiny memory leak cleanup

[11:13] <brrt> and the template compiler bit is all about correctness

[11:14] <lizmat> ok, well, test-t feels a bit slower after the bump

[11:14] <lizmat> but that could be noise

[11:14] <brrt> there could be a *tiny* advantage since we now correctly do the implied subexpression elimination in let: expressions

[11:14] <brrt> but I don't think it makes any difference

[11:15] <lizmat> if there is a difference, it's not positive  :-)

[11:15] <lizmat> at least, I'm not seeing it  :-)

[11:15] <brrt> oh well

[11:15] <brrt> I'll give speed for correctness :-)

[11:16] <lizmat> indeed

[11:17] <masak> a commonly held stance in software development :P

[11:50] <Geth> Â¦ MoarVM/master: 7 commits pushed by (Jeremy Studer)++, (Bart Wiegmans)++

[11:50] <Geth> Â¦ MoarVM/master: 77d752107b | Add unshift_* exprjit templates

[11:50] <Geth> Â¦ MoarVM/master: 14f6956c63 | Add existspos exprjit template

[11:50] <Geth> Â¦ MoarVM/master: 8a70d24d05 | Add ctx exprjit template

[11:50] <Geth> Â¦ MoarVM/master: f59288038f | Add getpid and hintfor exprjit templates

[11:50] <Geth> Â¦ MoarVM/master: c1b7b5494a | Add paramnamesused exprjit template

[11:50] <Geth> Â¦ MoarVM/master: 5b6d7fd3f2 | Fix unshift_* templates (no destructive '!')

[11:50] <Geth> Â¦ MoarVM/master: c0c4e78017 | Merge remote-tracking branch 'jstuder/exprjit_08_14_18'

[11:50] <Geth> Â¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/3a0934fce91f...c0c4e780175d

[11:51] <Geth> Â¦ MoarVM: 73e2f53d73 | (Nick Logan)++ (committed by Bart Wiegmans) | 3rdparty/libuv

[11:51] <Geth> Â¦ MoarVM: Update libuv to 1.23.0

[11:51] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/73e2f53d73

[11:51] <Geth> Â¦ MoarVM: aacd1a7883 | (Nick Logan)++ (committed by Bart Wiegmans) | build/Makefile.in

[11:51] <Geth> Â¦ MoarVM: Update libuv timer source path

[11:51] <Geth> Â¦ MoarVM:

[11:51] <Geth> Â¦ MoarVM: The unix and win implementations were consolidated and thus the

[11:51] <Geth> Â¦ MoarVM: path of the source no longer had 'unix/' in it.

[11:51] <Geth> Â¦ MoarVM:

[11:51] <Geth> Â¦ MoarVM: https://github.com/libuv/libuv/commit/95c5bf8db1535c5e709dda95e9f4656730ae703b

[11:51] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/aacd1a7883

[11:51] <lizmat> brrt: hmmm....  :-)

[11:51] * lizmat will bump unless told otherwise

[11:51] * brrt hasn't yet tested the libuv changes

[11:52] <brrt> that said, I trust ugexe

[11:52] * lizmat is going to test nqp ow

[11:52] <lizmat> now and if clean, bump rakudo

[11:56] <Geth> Â¦ MoarVM: f71f55cf76 | (Daniel Green)++ (committed by Bart Wiegmans) | src/jit/graph.c

[11:56] <Geth> Â¦ MoarVM: JIT decoder(empty|takebytes)

[11:56] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f71f55cf76

[11:56] <Geth> Â¦ MoarVM: e4b75b8b8d | (Daniel Green)++ (committed by Bart Wiegmans) | src/jit/graph.c

[11:56] <Geth> Â¦ MoarVM: Use uintptr_t for decoder* char * to integer casts

[11:56] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e4b75b8b8d

[12:10] <lizmat> hmmm... rakudo doesn't build anymore

[12:11] <lizmat>       'uv/errno.h' file not found

[12:11] <lizmat> #include "uv/errno.h"

[12:11] <lizmat> In file included from src/vm/moar/ops/perl6_ops.c:2:

[12:11] <lizmat> In file included from /Users/liz/Github/rakudo.moar/install/include/moar/moar.h:19:

[12:14] <lizmat> https://gist.github.com/lizmat/1cc5df073b8e6f1e7de84d05edecf460

[12:14] <lizmat> FWIW, make test on NQP was fine

[12:17] <lizmat> commute&

[12:17] *** lizmat left
[12:18] *** lizmat joined
[12:18] *** lizmat left
[12:21] *** brrt left
[12:25] *** brrt joined
[12:26] *** p6bannerbot sets mode: +v brrt

[12:35] <jnthn> Lots going on here, I see. Nice. :-)

[12:36] <dogbert2> lizmat is correct rakudo doesn't build with the new libuv

[12:36] <dogbert2> In file included from /home/dogbert/repos/rakudo/nqp/MoarVM/../../install/include/moar/moar.h:19:0,  from src/vm/moar/ops/perl6_ops.c:2:

[12:36] <dogbert2> /home/dogbert/repos/rakudo/nqp/MoarVM/../../install/include/libuv/uv.h:48:22: fatal error: uv/errno.h: No such file or directory      #include "uv/errno.h"

[12:37] <jnthn> OK, maybe not entirely nice :D

[12:38] <dogbert2> it's probably not impossible to fix :)

[12:40] *** ori12 joined
[12:40] <dogbert2> comparing rakudo (with the new libuv) with the previous version, i.e. my rakudobrew uncovers a difference

[12:40] *** ori12 left
[12:40] <dogbert2> /home/dogbert/repos/rakudo/install/include/libuv/uv-errno.h

[12:41] <dogbert2> /home/dogbert/repos/rakudo/nqp/MoarVM/3rdparty/libuv/include/uv/errno.h

[12:41] *** lizmat joined
[12:42] *** p6bannerbot sets mode: +v lizmat

[12:42] <dogbert2> eh, I meant this

[12:42] <dogbert2> /home/dogbert/.rakudobrew/moar-master/nqp/MoarVM/3rdparty/libuv/include/uv-errno.h

[12:52] <lizmat> dogbert2: there are more cases where it looks like uv/foo.h became uv-foo.h

[12:54] <lizmat> nuking install doesn't fix the issue

[12:55] <lizmat> perhaps we should revert the libuv update ?

[12:55] <dogbert2> unless brrt can fix it in a flash :)

[12:56] <jnthn> Probably easier to wait a few hours to see if somebody can fix it (not me, alas, teaching :)) and just don't bump the MOAR_REVISION/NQP_REVISION

[12:57] <dogbert2> the difference seems to be that previously the libuv include files were present in 3rdparty/libuv/include but now all except one have been moced to 3rdparty/libuv/include/uv

[12:57] <dogbert2> *moved

[12:59] <lizmat> what I don't understand is why this doesn't show up with building MoarVM  / NQP ?

[13:01] * lizmat tries a fresh checkout of MoarVM

[13:05] <lizmat> fresh checkout of MoarVM builds ok

[13:05] <dogbert2> aha

[13:05] <lizmat> !

[13:05] <dogbert2> ah, MoarVM, that worked before no

[13:09] <lizmat> dogbert2: is that a question ?

[13:15] <dogbert2> I think so, didn't MoarVM build before you did a fresh checkout ?

[13:16] <lizmat> it also built

[13:16] <dogbert2> I'm probably just confused atm .)

[13:16] <lizmat> but I was thinking that since there are files missing in the rakudo case, maybe my checkout somehow had the files

[13:17] <lizmat> so it built ok using files not in the repo

[13:17] <lizmat> a fresh checkout also builds, so scratch that idea

[13:18] <lizmat> I'm out of ideas atm

[13:23] <timotimo> could be another case of "submodules changing around too much makes git pull unhappy", just in a different way this time

[13:24] <lizmat> yeah, that was my idea in nuking install

[13:24] <lizmat> alas

[13:25] <timotimo> perhaps nuking 3rdparty/ would have been more helpful

[13:25] <timotimo> well

[13:25] <timotimo> nuking is not quite the right word

[13:25] <timotimo> some things in there aren't submodules, and therefor won't just be restored after an rm -rf

[13:25] <lizmat> rm -rf install  # that's nuking to me

[13:26] * lizmat tries a fresh rakudo checkout

[13:26] <timotimo> oh

[13:26] <timotimo> the Makefile.in has been changed, right?

[13:26] <timotimo> so what you need is at least a Configure.pl in moarvm

[13:29] <dogbert2> I got it working with some shenanighans

[13:29] <lizmat> doesn't make a differece :-(

[13:29] <timotimo> hans, is that you?

[13:31] <dogbert2> then you run 'make install' in the MoarVM directory it seems as if some/most 3rdparty h-files are copied to <rakudodir>/install/include

[13:31] <dogbert2> s/then/when/

[13:31] <dogbert2> unfortunately only one libuv h-file is copied, i.e. uv.h the files in the new uv directory are not copied

[13:32] <lizmat> datapoint: a fresh rakudo checkout + NQP bump doesn't build either (same error)

[13:32] <dogbert2> lizmat, see above

[13:33] <lizmat> feels like a workaround at best ?

[13:34] <dogbert2> yes, I suspect that should be done automatically

[13:34] <brrt> make reeconfig?

[13:34] <brrt> i'm slightly confused as to what is the issue

[13:35] <dogbert2> rakudo doesn't build

[13:35] <brrt> i'll check it out...

[13:37] <dogbert2> I suspect this line is not enough (taken from a Makefile in my MoarVM dir) - $(CP) 3rdparty/libuv/include/*.h $(DESTDIR)$(PREFIX)/include/libuv

[13:37] <brrt> that could well be possible yes

[13:38] <dogbert2> the libuv header files, except one, have moved to rdparty/libuv/include/uv

[13:39] <brrt> right

[13:57] *** AlexDani` joined
[13:57] *** p6bannerbot sets mode: +v AlexDani`

[14:00] *** zakharyas left
[14:01] *** zakharyas joined
[14:01] *** AlexDaniel left
[14:01] *** p6bannerbot sets mode: +v zakharyas

[14:05] *** zakharyas left
[14:06] *** AlexDani` is now known as AlexDaniel

[14:06] *** AlexDaniel left
[14:06] *** AlexDani` joined
[14:07] *** p6bannerbot sets mode: +v AlexDani`

[14:13] * brrt has a fix

[14:13] <brrt> there are reasons to want to overhaul the Configure.pl

[14:14] <brrt> and there are reasons not to, including 'time limits'

[14:14] <brrt> I think mst++ once complained loudly about our Configure.pl, and not without reason

[14:17] <Geth> Â¦ MoarVM: ccc315f712 | (Bart Wiegmans)++ | Configure.pl

[14:17] <Geth> Â¦ MoarVM: [LibUV] Install subdirectory of headers

[14:17] <Geth> Â¦ MoarVM:

[14:17] <Geth> Â¦ MoarVM: Now that we have libuv 1.23, platform specific headers are placed under

[14:17] <Geth> Â¦ MoarVM: 'libuv/uv/', rather than directly under 'libuv/'n and we didn't install

[14:17] <Geth> Â¦ MoarVM: them yet, but now we do.

[14:17] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ccc315f712

[14:28] <lizmat> brrt++   # rakudo's building

[14:29] <dogbert2> brrt++

[14:29] <lizmat> spectesting now

[14:37] <lizmat> bumped!

[14:47] <dogbert2> didn't nine have some cool stuff in the works, something with hllbool?

[14:49] <lizmat> afk for a bit&

[14:49] *** lizmat left
[14:57] <brrt> I think so, and timotimo also had branches

[14:57] <timotimo> i have some branches, yeah

[14:57] <brrt> what's the deadline for those :-P

[14:58] <timotimo> hm

[14:58] <timotimo> i've got some changes that want a coordinated moarvm and nqp merge

[15:03] <japhb> timotimo: ready to go, or still working on them?

[15:05] <timotimo> i think i actually want to change the api just a little bit

[15:08] *** brrt left
[15:16] *** robertle left
[15:19] *** fake_space_whale joined
[15:20] *** p6bannerbot sets mode: +v fake_space_whale

[15:27] *** BuildTheRobots4 joined
[15:29] *** BuildTheRobots4 left
[15:35] *** lizmat joined
[15:36] *** p6bannerbot sets mode: +v lizmat

[15:42] *** domidumont left
[15:49] *** zakharyas joined
[15:50] *** p6bannerbot sets mode: +v zakharyas

[15:56] *** robertle joined
[15:57] *** p6bannerbot sets mode: +v robertle

[16:09] <timotimo> you see, it's about adding more data from the program to the profile, more precisely it's about getting type info; size of objects of that given type, and whatever other info we can get

[16:10] *** zakharyas left
[17:22] *** zakharyas joined
[17:22] *** p6bannerbot sets mode: +v zakharyas

[17:38] *** AlexDani` is now known as AlexDaniel

[17:48] *** zakharyas left
[19:04] <dogbert11> lizmat: I've now reported the RPi SEGV problem, from yesterday, as https://github.com/MoarVM/MoarVM/issues/951

[20:56] *** lizmat left
[21:29] *** robertle left
[21:44] *** MasterDuke joined
[21:44] *** p6bannerbot sets mode: +v MasterDuke

[21:46] *** MasterDuke left
[21:46] *** MasterDuke joined
[21:46] *** herbert.freenode.net sets mode: +v MasterDuke

[21:46] *** p6bannerbot sets mode: +v MasterDuke

[22:04] <Geth> Â¦ MoarVM: ugexe++ created pull request #952: Fix sprintf formatting for the debugserver port

[22:04] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/952

[22:06] *** Kaiepi joined
[22:07] *** p6bannerbot sets mode: +v Kaiepi

