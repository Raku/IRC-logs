[00:40] *** Kaiepi joined
[00:55] *** Kaiepi left
[00:55] *** Kaiepi joined
[01:45] *** ilbot3 left
[01:50] <Geth> ¦ MoarVM: Kaiepi++ created pull request #869: Set UV_TCP_IPV6ONLY flag when binding async IPv6 TCP connnections

[01:50] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/869

[01:53] *** Kaiepi left
[01:54] *** Kaiepi joined
[01:57] *** ilbot3 joined
[02:08] *** lizmat left
[02:46] *** MasterDuke left
[02:48] *** MasterDuke joined
[02:53] *** ZofBot joined
[02:53] *** huggable joined
[02:53] *** buggable joined
[04:25] *** TimToady left
[04:32] *** TimToady joined
[05:18] <Geth> ¦ MoarVM: fdaf8e0e7d | (Samantha McVey)++ | src/6model/serialization.c

[05:18] <Geth> ¦ MoarVM: Optimize MVM_serialization_read_int so as not to need memcpy calls

[05:18] <Geth> ¦ MoarVM:

[05:18] <Geth> ¦ MoarVM: We only do this on CPU's that allow int64 unaligned memory accesses.

[05:18] <Geth> ¦ MoarVM: Technically the switch works on any CPU since the compiler just

[05:18] <Geth> ¦ MoarVM: optimizes it, but I think it may be faster to use memcpy in those

[05:18] <Geth> ¦ MoarVM: instances.

[05:18] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fdaf8e0e7d

[05:21] <Geth> ¦ MoarVM: 7ea1b5c301 | (Samantha McVey)++ | src/platform/memmem32.c

[05:21] <Geth> ¦ MoarVM: Only use the 64 bit memory access code in memmem32 for supported cpus

[05:21] <Geth> ¦ MoarVM:

[05:21] <Geth> ¦ MoarVM: The code accesses 64 bit integers aligned to 32 bits, so only use it on

[05:21] <Geth> ¦ MoarVM: CPU's we've detected allow unaligned accesses.

[05:21] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7ea1b5c301

[05:33] <Geth> ¦ MoarVM: fa13c6d01f | (Samantha McVey)++ | src/core/interp.c

[05:33] <Geth> ¦ MoarVM: Optimize sp_jit_enter in interp.c a very small amount

[05:33] <Geth> ¦ MoarVM:

[05:33] <Geth> ¦ MoarVM: The compiler seems to generate better code by declaring it as a variable

[05:33] <Geth> ¦ MoarVM: due to the large number of pointer indirections involved.

[05:33] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fa13c6d01f

[05:44] *** quotable6 left
[05:44] *** quotable6 joined
[06:00] *** robertle joined
[06:36] *** TimToady left
[06:36] *** TimToady joined
[06:47] <Geth> ¦ MoarVM: a8507b8f07 | (Samantha McVey)++ | 2 files

[06:47] <Geth> ¦ MoarVM: Separate out code into MVM_string_buf32_can_fit_into_8bit

[06:47] <Geth> ¦ MoarVM:

[06:47] <Geth> ¦ MoarVM: This is separated out so we can use it in the utf8 decoder to decide to

[06:47] <Geth> ¦ MoarVM: create an 8 bit string or not. This will allow us to use this very fast

[06:47] <Geth> ¦ MoarVM: code which vectorizes nicely.

[06:47] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a8507b8f07

[06:47] <Geth> ¦ MoarVM: f0a837c413 | (Samantha McVey)++ | src/strings/utf8.c

[06:47] <Geth> ¦ MoarVM: Make MVM_string_utf8_decode 8% faster with vectorized 8bit check

[06:47] <Geth> ¦ MoarVM:

[06:47] <Geth> ¦ MoarVM: Use the MVM_string_buf32_can_fit_into_8bit function added in the

[06:47] <Geth> ¦ MoarVM: previous commit to allow us to check if the 32 bit buffer can fit in

[06:47] <Geth> ¦ MoarVM: 8 bits using the vectorizable code. This is instead of keeping a running

[06:47] <Geth> ¦ MoarVM: count of the max and min grapheme we see at all steps along the way.

[06:47] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f0a837c413

[07:47] *** domidumont joined
[07:54] *** domidumont left
[07:55] *** domidumont joined
[08:10] *** domidumont left
[08:11] *** domidumont joined
[08:17] <nine> .tell brrt yes, I came a cross the same discrepancy. It doesn't make sense, but apparently works. But I guess it does so only because of some happy accident in how the Perl 6 code is compiled

[08:17] <yoleaux> nine: I'll pass your message to brrt.

[08:17] <yoleaux> 2 Jun 2018 20:24Z <brrt> nine: i'm suspicious of encoderepconf. I know that's what interp.c does, but it is not what oplist says

[08:17] <yoleaux> 2 Jun 2018 23:44Z <jnthn> nine: Well, it comes with the same caveats of using any nqp:: ops outside of core, which is that while they're often de facto stable, there's no promises made about them. There's a non-zero chance that the current multi cache mechanism will eventually be subsumed by my work on spesh plugins.

[08:17] <yoleaux> 2 Jun 2018 23:49Z <jnthn> nine: So, effectively, you can commit it, but those ops might at some point go away, so there'd be some updating to do at that point. So long as you're good with that, I'm also ok.

[08:20] <nine> .tell brrt The "good" news is that the JIT compiled version is not yet used anyway, since the getattr_* ops are still missing and I've hit another strange issue trying to implement them.

[08:20] <yoleaux> nine: I'll pass your message to brrt.

[08:21] *** domidumont left
[08:22] *** domidumont joined
[08:26] <nine> .tell brrt note that the original encoderep op shares the same oddity which was introduced in a commit by jnthn titled "JIT-compile write_fhb and encode ops."

[08:26] <yoleaux> nine: I'll pass your message to brrt.

[08:42] *** lizmat joined
[08:55] <Geth> ¦ MoarVM: 89dee3be30 | (Stefan Seifert)++ | 3 files

[08:55] <Geth> ¦ MoarVM: Fix encoderep/encoderepconf returning value into wrong register

[08:55] <Geth> ¦ MoarVM:

[08:55] <Geth> ¦ MoarVM: No idea why this worked before, as the return value is supposed to be written

[08:55] <Geth> ¦ MoarVM: to register 0. My guess is that it's a lucky coincidence in how the Perl 6

[08:55] <Geth> ¦ MoarVM: code gets compiled.

[08:55] <Geth> ¦ MoarVM: Oddity was introduced in commit 1bc55b7d728c8ce85599141bbdc65a30975e3582 and

[08:55] <Geth> ¦ MoarVM: then copied into the encoderepconf implementation.

[08:55] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/89dee3be30

[08:55] <nine> jnthn, samcv: please have a look at ^^^

[09:26] <samcv> nine: will check in the morning. night

[12:10] *** Kaiepi left
[12:16] *** Kaiepi joined
[12:26] <jnthn> nine: Looks sensible

[13:18] *** AlexDani` joined
[13:20] *** AlexDaniel left
[13:58] *** Kaiepi left
[13:58] *** Kaiepi joined
[14:02] *** Kaiepi left
[14:02] *** Kaiepi joined
[14:28] *** zakharyas joined
[14:34] *** Kaiepi left
[14:45] *** TimToady left
[14:47] *** TimToady joined
[16:23] *** Kaiepi joined
[17:07] *** zakharyas left
[17:08] <Geth> ¦ MoarVM: jstuder-gh++ created pull request #870: Change getsignals output from hash to array 

[17:08] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/870

[17:09] *** zakharyas joined
[17:19] *** zakharyas left
[17:31] *** domidumont left
[17:32] *** domidumont joined
[17:44] *** zakharyas joined
[17:52] *** MasterDuke left
[17:58] *** MasterDuke joined
[18:24] *** AlexDani` is now known as AlexDaniel

[18:38] *** Kaiepi left
[19:00] *** domidumont left
[19:48] *** lizmat left
[20:07] *** zakharyas left
[20:12] *** lizmat joined
[20:21] <samcv> looks ok for me. not sure about the jit stuff as much but the rest look sgood

[21:14] *** Kaiepi joined
[21:25] *** Kaiepi left
[21:27] *** Kaiepi joined
[23:33] *** lizmat left
[23:42] *** lizmat joined
