[00:59] *** shareable6 joined
[00:59] *** p6bannerbot sets mode: +v shareable6

[01:50] *** MasterDuke left
[01:58] *** MasterDuke joined
[01:58] *** p6bannerbot sets mode: +v MasterDuke

[01:58] *** MasterDuke left
[01:58] *** MasterDuke joined
[01:58] *** herbert.freenode.net sets mode: +v MasterDuke

[01:58] *** p6bannerbot sets mode: +v MasterDuke

[02:54] *** disi joined
[02:55] *** disi is now known as Guest68038

[02:55] *** p6bannerbot sets mode: +v Guest68038

[02:59] *** Guest68038 left
[04:58] *** FuzzySockets joined
[05:00] *** FuzzySockets left
[05:12] *** Ben6426 joined
[05:13] *** Ben6426 left
[05:29] *** brrt joined
[05:30] *** p6bannerbot sets mode: +v brrt

[05:51] *** greppable6 joined
[05:52] *** p6bannerbot sets mode: +v greppable6

[05:55] *** lizmat left
[06:27] *** Sharker joined
[06:27] *** Sharker left
[06:28] <brrt> \o

[06:30] *** lizmat joined
[06:31] <brrt> .tell jnthn i'll have a look at the gist

[06:31] <yoleaux> brrt: I'll pass your message to jnthn.

[07:02] *** TehNut joined
[07:06] *** TehNut left
[07:45] *** zakharyas joined
[07:45] *** p6bannerbot sets mode: +v zakharyas

[07:49] *** lizmat left
[08:04] *** zakharyas left
[08:05] *** zakharyas joined
[08:06] *** p6bannerbot sets mode: +v zakharyas

[08:14] *** GigabytePro12 joined
[08:14] *** p6bannerbot sets mode: +v GigabytePro12

[08:16] *** GigabytePro12 left
[08:22] *** norkle27 joined
[08:23] *** p6bannerbot sets mode: +v norkle27

[08:27] *** LambdaComplex21 joined
[08:28] *** p6bannerbot sets mode: +v LambdaComplex21

[08:28] *** LambdaComplex21 left
[08:30] *** norkle27 left
[08:48] *** macky joined
[08:49] *** p6bannerbot sets mode: +v macky

[08:49] *** macky left
[08:52] *** ZzZombo joined
[08:52] *** p6bannerbot sets mode: +v ZzZombo

[08:57] <samcv> timotimo: did the slides show up properly with that link?

[09:00] *** brrt left
[09:05] *** zakharyas left
[09:05] *** zakharyas joined
[09:06] *** p6bannerbot sets mode: +v zakharyas

[09:07] *** sophiya joined
[09:08] *** p6bannerbot sets mode: +v sophiya

[09:08] *** sophiya left
[09:28] <nine> Seems to me that having a release branch and keeping master open for development would be the better strategy overall. That way we can keep the normal development workflow with feature branches and don't have to rely on all involved people to know not to push to master. So in essence, people wouldn't have to know or care about the release process unless they really want to get a fix into the release - which

[09:28] <yoleaux> 15 Aug 2018 16:40Z <brrt> nine: that's an interesting case for the jit optimizer... I want to make it so that we can use spesh facts that correspond to nodes

[09:28] <nine> seems to be the exception anyway.

[09:29] *** L2358 joined
[09:30] *** p6bannerbot sets mode: +v L2358

[09:30] *** L2358 left
[09:39] *** L0j1k21 joined
[09:40] *** L0j1k21 left
[09:43] <Geth> Â¦ MoarVM/postrelease-opts: e6104a7d01 | (Jonathan Worthington)++ | src/jit/x64/emit.dasc

[09:43] <Geth> Â¦ MoarVM/postrelease-opts: Use mov64 to load a pointer; brrt++

[09:43] <Geth> Â¦ MoarVM/postrelease-opts: review: https://github.com/MoarVM/MoarVM/commit/e6104a7d01

[09:46] *** lizmat joined
[09:47] *** p6bannerbot sets mode: +v lizmat

[10:01] *** lizmat left
[10:04] *** zakharyas left
[10:04] *** mniip8 joined
[10:05] *** p6bannerbot sets mode: +v mniip8

[10:07] *** mniip8 left
[10:10] <jnthn> Stage parse      :  45.864

[10:10] <jnthn> Today's new low :)

[10:11] <jnthn> (with commit I'll push in a moment, after spectesting)

[10:13] *** zakharyas joined
[10:14] *** p6bannerbot sets mode: +v zakharyas

[10:16] <Geth> Â¦ MoarVM/postrelease-opts: 4bda18a426 | (Jonathan Worthington)++ | 4 files

[10:16] <Geth> Â¦ MoarVM/postrelease-opts: Lower unbox of P6[int|num|str]

[10:16] <Geth> Â¦ MoarVM/postrelease-opts:

[10:16] <Geth> Â¦ MoarVM/postrelease-opts: This aids the performance of NQP code, which uses these rather than

[10:16] <Geth> Â¦ MoarVM/postrelease-opts: P6opaque-based box types. Also includes a fix for the interpretation

[10:16] <Geth> Â¦ MoarVM/postrelease-opts: of sp_get_s, which I can only figure has never been exercised before

[10:16] <Geth> Â¦ MoarVM/postrelease-opts: as it was utterly broke.

[10:16] <Geth> Â¦ MoarVM/postrelease-opts: review: https://github.com/MoarVM/MoarVM/commit/4bda18a426

[10:18] <jnthn> Righty, now to see if I can get faster unbox of bigints too

[10:21] *** lizmat joined
[10:22] *** p6bannerbot sets mode: +v lizmat

[10:31] *** lizmat left
[10:38] *** johnpark_pj joined
[10:39] *** p6bannerbot sets mode: +v johnpark_pj

[10:42] *** johnpark_pj left
[10:52] <Geth> Â¦ MoarVM/postrelease-opts: 2cc53306e1 | (Jonathan Worthington)++ | 11 files

[10:52] <Geth> Â¦ MoarVM/postrelease-opts: Lower the unboxing of a bigint in a P6opaque

[10:52] <Geth> Â¦ MoarVM/postrelease-opts:

[10:52] <Geth> Â¦ MoarVM/postrelease-opts: Now, if it's a small bigint (fits within 32 bits), we just pull it

[10:52] <Geth> Â¦ MoarVM/postrelease-opts: right out without having to make a function call. We only make a call

[10:52] <Geth> Â¦ MoarVM/postrelease-opts: in the case there's a real mp_int that we need to range check and take

[10:52] <Geth> Â¦ MoarVM/postrelease-opts: the value from.

[10:52] <Geth> Â¦ MoarVM/postrelease-opts: review: https://github.com/MoarVM/MoarVM/commit/2cc53306e1

[10:52] <jnthn> Yes, I can :)

[10:56] <Geth> Â¦ MoarVM/hllbool: 6 commits pushed by (Stefan Seifert)++

[10:56] <Geth> Â¦ MoarVM/hllbool: 82afc230cd | Add true_value and false_value to HLL config for future hllbool op

[10:56] <Geth> Â¦ MoarVM/hllbool: b814282e48 | New hllbool and hllboolfor ops

[10:56] <Geth> Â¦ MoarVM/hllbool: 587561f9a0 | Teach spesh to replace hllbool by the result for known values

[10:56] <Geth> Â¦ MoarVM/hllbool: c1aaa116ab | Teach spesh to replace hllboolfor by the result for known values

[10:56] <Geth> Â¦ MoarVM/hllbool: 890c9f4e57 | JIT compile hllbool

[10:56] <Geth> Â¦ MoarVM/hllbool: c207d10c45 | JIT compile hllboolfor

[10:56] <Geth> Â¦ MoarVM/hllbool: review: https://github.com/MoarVM/MoarVM/compare/5275b0e08c65...c207d10c4539

[10:56] *** ZzZombo left
[11:04] *** zakharyas left
[11:04] *** zakharyas joined
[11:05] *** p6bannerbot sets mode: +v zakharyas

[11:09] *** CrunchyChewie7 joined
[11:10] *** p6bannerbot sets mode: +v CrunchyChewie7

[11:11] *** CrunchyChewie7 left
[11:14] *** zakharyas left
[11:15] <Geth> Â¦ MoarVM/postrelease-opts: 3edfdf2b91 | (Jonathan Worthington)++ | src/6model/reprs/P6opaque.c

[11:15] <Geth> Â¦ MoarVM/postrelease-opts: Use a cheaper op for str/num P6opaque box bind

[11:15] <Geth> Â¦ MoarVM/postrelease-opts:

[11:15] <Geth> Â¦ MoarVM/postrelease-opts: We know that the body of the object will always be the direct one, not

[11:15] <Geth> Â¦ MoarVM/postrelease-opts: a replacement version of it, so we can simply bind directly into that

[11:15] <Geth> Â¦ MoarVM/postrelease-opts: without paying for the cost of the indirection.

[11:15] <Geth> Â¦ MoarVM/postrelease-opts: review: https://github.com/MoarVM/MoarVM/commit/3edfdf2b91

[11:17] <dogbert17> jnthn: you're on a roll today, impressive

[11:25] *** lizmat joined
[11:25] *** p6bannerbot sets mode: +v lizmat

[11:30] *** lizmat left
[11:33] *** lizmat joined
[11:33] *** lizmat left
[11:37] *** lizmat joined
[11:38] *** p6bannerbot sets mode: +v lizmat

[11:41] *** lizmat left
[12:15] *** RichiH8 joined
[12:15] *** RichiH8 left
[12:17] <timotimo> ooh, that last one could maybe be made a more general opt that spesh knows about; when things just got created, the p6o versions could be lowered automatically

[12:20] *** lagbox24 joined
[12:21] *** lagbox24 left
[12:31] <timotimo> samcv: the slides work well

[12:33] <jnthn> timotimo: Yeah, already pondered that :)

[12:34] <jnthn> Didn't quite figure where to put it though

[12:47] *** lutoma12 joined
[12:47] *** lutoma12 left
[12:49] *** jelly11 joined
[12:50] *** p6bannerbot sets mode: +v jelly11

[12:50] *** stmuk joined
[12:51] *** p6bannerbot sets mode: +v stmuk

[12:53] *** stmuk_ left
[12:57] *** jelly11 left
[13:02] *** lizmat joined
[13:03] *** p6bannerbot sets mode: +v lizmat

[13:16] <Geth> Â¦ MoarVM/postrelease-opts: a302b04bbf | (Jonathan Worthington)++ | 10 files

[13:16] <Geth> Â¦ MoarVM/postrelease-opts: Don't enforce write barrier when boxing

[13:16] <Geth> Â¦ MoarVM/postrelease-opts:

[13:16] <Geth> Â¦ MoarVM/postrelease-opts: The object was only just created. It must be in the nursery, since

[13:16] <Geth> Â¦ MoarVM/postrelease-opts: that's a rule for using `fastcreate`. Thus it can not be a gen2

[13:16] <Geth> Â¦ MoarVM/postrelease-opts: object pointing to a nursery object, which is when the barrier would

[13:16] <Geth> Â¦ MoarVM/postrelease-opts: trigger.

[13:16] <Geth> Â¦ MoarVM/postrelease-opts: review: https://github.com/MoarVM/MoarVM/commit/a302b04bbf

[13:18] *** zakharyas joined
[13:18] *** p6bannerbot sets mode: +v zakharyas

[13:21] *** lizmat left
[13:25] <nine> Oh, it looks like hllbool already makes stage parse a bit faster. Even without any more advanced spesh optimizations.

[13:26] *** lizmat joined
[13:26] <timotimo> huh, but how?

[13:27] *** p6bannerbot sets mode: +v lizmat

[13:28] * jnthn also wonders

[13:32] <nine> JIT compilation

[13:32] <timotimo> huh, but p6bool should have been at least compiled to C function calls

[13:32] <timotimo> i.e. not bail the frames completely

[13:33] * timotimo looks at the jit impls

[13:33] <jnthn> I thought extops compiled to C function calls

[13:33] <jnthn> But yeah, can help

[13:33] <timotimo> yes, they normally do

[13:33] <jnthn> (to get rid of the function call)

[13:33] <nine> Maybe also the spesh optimization turning hllbool of a known value into a set.

[13:33] <nine> Of course it may just be benchmarking noise

[13:34] <timotimo> hm, i wonder how often that even happens

[13:34] <timotimo> pro tip: we could use the spesh_comments mechanism to find out :) :)

[13:35] <timotimo> nine: usually we'd compare ins->info->opcode against MVM_OP_* rather than comparing ins->info against MVM_op_get_op(MVM_OP_*)

[13:35] <timotimo> (in optimize_hllbool)

[13:36] <dogbert17> jnthn: that last fix might contain a bug

[13:37] <Geth> Â¦ MoarVM/hllbool: 4 commits pushed by (Stefan Seifert)++

[13:37] <Geth> Â¦ MoarVM/hllbool: b24f4b1bef | Teach spesh to replace hllboolfor by the result for known values

[13:37] <Geth> Â¦ MoarVM/hllbool: 78db33de7e | JIT compile hllbool

[13:37] <Geth> Â¦ MoarVM/hllbool: 12cea5c276 | JIT compile hllboolfor

[13:37] <Geth> Â¦ MoarVM/hllbool: cd43ab9332 | Teach the lego JIT to compile hllbool, too

[13:37] <Geth> Â¦ MoarVM/hllbool: review: https://github.com/MoarVM/MoarVM/compare/c207d10c4539...cd43ab933209

[13:37] <nine> timotimo: oh thanks! I forgot fixing that

[13:37] <jnthn> dogbert17: Details?

[13:37] <jnthn> (Was an opt rather than a fix)

[13:37] <dogbert17> Literally all spectests fails

[13:38] <timotimo> hah

[13:38] <jnthn> Looked good here

[13:38] <dogbert17> now, that's odd

[13:38] <jnthn> Platform?

[13:39] <jnthn> Also make sure you rebuild Rakudo

[13:39] <jnthn> Or the extops

[13:39] <jnthn> *or at least

[13:40] <dogbert17> ok, I did only rebuild MoarVM

[13:43] <dogbert17> yeah, looks better after a Rakudo rebuild, sorry for the noise

[13:44] <jnthn> np :)

[13:44] *** lizmat left
[13:45] <dogbert17> I usually get away with rebuilding MoarVM only. I guess specific changes requires a Rakudo rebuild as well

[13:45] <jnthn> Yeah, things that add spesh ops can

[13:46] *** lizmat joined
[13:46] *** Guest42469 joined
[13:46] <timotimo> https://github.com/MoarVM/MoarVM/issues/293 - if someone wants to improve that situation

[13:47] *** p6bannerbot sets mode: +v lizmat

[13:47] *** p6bannerbot sets mode: +v Guest42469

[13:47] <jnthn> I think we're making progress towards improving it my getting rid of the extops... :)

[13:47] *** johtso joined
[13:48] <timotimo> true

[13:48] *** johtso left
[13:48] *** Guest42469 left
[13:50] <dogbert17> only two files failed now - with 'Parse errors: No plan found in TAP output'. This time it was t/spec/S04-statement-parsing/hash.t and t/spec/S32-basics/xxPOS-native.t

[13:51] <dogbert17> running these tests solo uncovers nothing nor does valgrind

[13:52] <jnthn> D'oh, my new inline size decision algorithm produces negative sizes...

[13:52] <timotimo> whoops

[13:52] <jnthn> oh, I guess it has to approximate in one case...heh

[13:58] *** lizmat left
[14:03] <jnthn> Grr...that attempt helps some micro-benchmarks, but hurts CORE.setting and similar quite a bit

[14:03] *** zakharyas left
[14:04] *** zakharyas joined
[14:05] *** p6bannerbot sets mode: +v zakharyas

[14:13] <jnthn> dogbert17: Yeah, I've been seeing the odd thing that fails like that, it varies between run and has happened for a while on that branch

[14:15] <Geth> Â¦ MoarVM/postrelease-opts: 498f189297 | (Jonathan Worthington)++ | 3 files

[14:15] <Geth> Â¦ MoarVM/postrelease-opts: Subtract nested inlinees when checking inline size

[14:15] <Geth> Â¦ MoarVM/postrelease-opts:

[14:15] <Geth> Â¦ MoarVM/postrelease-opts: So that if we do nested inlines, they don't contribute to the size of

[14:15] <Geth> Â¦ MoarVM/postrelease-opts: the overall thing. This seems to be on the most part a win: various

[14:15] <Geth> Â¦ MoarVM/postrelease-opts: Perl 6 microbenchmarks run faster, spectest seems unimpacted, there is

[14:15] <Geth> Â¦ MoarVM/postrelease-opts: a slight impact on spectest compilation time but nothing enormous.

[14:15] <Geth> Â¦ MoarVM/postrelease-opts: review: https://github.com/MoarVM/MoarVM/commit/498f189297

[14:19] <dogbert17> jnthn: I have one gist showing this behaviour: https://gist.github.com/dogbert17/2d499ec5d8ae0b7f4a3b0f9c7db6107b

[14:19] *** lizmat joined
[14:20] *** p6bannerbot sets mode: +v lizmat

[14:20] <jnthn> hmmm

[14:22] *** MasterDuke left
[14:23] <timotimo> a recording made with rr might be useful

[14:23] <timotimo> do you just need to run it often enough to reproduce it?

[14:24] *** lizmat left
[14:35] <dogbert17> timotimo: the gisted SEGV came from t/spec/S03-operators/buf.t, I usually have to run the system under load to make it appear

[14:36] <timotimo> maybe it's time to try out rr's chaos mode

[14:36] <timotimo> though it doesn't do any multithreading of its own, right?

[14:36] <timotimo> only the spesh thread?

[14:38] <dogbert17> why do I get the feeling that the gist was utterly useless :-)

[14:39] <timotimo> the oh, i could have seen it from the "info threads" output

[14:39] <timotimo> i just looked at the one code line; i've seen that same thing before, too

[14:39] <timotimo> the sc_idx somehow gets to be a wildly out-of-bounds value

[14:42] <dogbert17> I believe that is indeed the case

[14:44] <timotimo> we have the case, now let's go for the cause

[14:46] <dogbert17> ran a new spectest including jnthn's latest commit, this time t/spec/S03-operators/autoincrement.t failed with Parse errors: No plan found in TAP output

[14:47] <dogbert17> it's definitely random and seems to happen early during the program run

[14:47] *** hiya26 joined
[14:48] *** p6bannerbot sets mode: +v hiya26

[14:49] *** hiya26 left
[14:53] <dogbert17> timotimo: got it again, sc_idx = 32181872

[14:54] <dogbert17> unfortunately I had forgot to turn off the JIT this time

[15:00] <dogbert17> there's an assert commented out a few rows above, 367     /*assert(REPR(new_addr));*/, perhaps I should reenable that

[15:04] *** zakharyas left
[15:04] <dogbert17> no, that was a bad idea

[15:05] <timotimo> haha

[15:05] *** zakharyas joined
[15:05] <timotimo> perhaps it doesn't hold for STables themselves? or maybe frames get to be in there, too?

[15:06] *** p6bannerbot sets mode: +v zakharyas

[15:09] *** lizmat joined
[15:10] *** p6bannerbot sets mode: +v lizmat

[15:10] *** lizmat left
[15:24] <dogbert17> damn, now it failed at another location

[15:24] <jnthn> Yeah, soemthing's up...I'll bug hunt it probably next week though :)

[15:26] <dogbert17> here's a gist, perhaps there might be a clue in there

[15:26] <dogbert17> https://gist.github.com/dogbert17/988ea189e4a75fec5c6ed3d2d94c102d

[15:27] <timotimo> interesting, so the entry that's in there seems to have an object id, though that could also be reading bogus memory to come up with that idea

[15:49] <Geth> Â¦ MoarVM/postrelease-opts: 560df3dbc6 | (Jonathan Worthington)++ | src/spesh/optimize.c

[15:49] <Geth> Â¦ MoarVM/postrelease-opts: Turn hllize to set if the change is a no-op

[15:49] <Geth> Â¦ MoarVM/postrelease-opts:

[15:49] <Geth> Â¦ MoarVM/postrelease-opts: This not only avoids a little work, but also eliminates an op that

[15:49] <Geth> Â¦ MoarVM/postrelease-opts: might prevent inlining.

[15:49] <Geth> Â¦ MoarVM/postrelease-opts: review: https://github.com/MoarVM/MoarVM/commit/560df3dbc6

[16:02] *** zakharyas left
[16:27] <jnthn> Aside from microbenchmark improvements, it seems postrelease-opts brings a ~8% wallclock improvement in one real-world application too

[16:31] <jnthn> Enough for now. Maybe a little more optimization fun over the weekend. We'll see :)

[16:31] <jnthn> o/

[16:42] *** pierte joined
[16:42] *** pierte left
[18:13] *** MasterDuke joined
[18:13] *** p6bannerbot sets mode: +v MasterDuke

[18:14] *** MasterDuke left
[18:14] *** MasterDuke joined
[18:14] *** herbert.freenode.net sets mode: +v MasterDuke

[18:14] *** p6bannerbot sets mode: +v MasterDuke

[18:25] *** zakharyas joined
[18:25] *** p6bannerbot sets mode: +v zakharyas

[18:26] *** tesu15 joined
[18:27] *** p6bannerbot sets mode: +v tesu15

[18:27] *** tesu15 left
[18:35] *** EXCEPTS joined
[18:36] *** p6bannerbot sets mode: +v EXCEPTS

[18:37] *** EXCEPTS left
[18:45] *** RichiH13 joined
[18:45] *** p6bannerbot sets mode: +v RichiH13

[18:47] *** RichiH13 left
[18:58] *** stmuk_ joined
[18:59] *** p6bannerbot sets mode: +v stmuk_

[19:00] *** zakharyas left
[19:00] *** stmuk left
[19:30] *** thomasb9511 joined
[19:31] *** p6bannerbot sets mode: +v thomasb9511

[19:32] *** thomasb9511 left
[19:55] *** diakopter left
[20:07] *** Kaiepi left
[20:07] *** Kaypie joined
[20:08] *** p6bannerbot sets mode: +v Kaypie

[20:37] *** d__b joined
[20:38] *** p6bannerbot sets mode: +v d__b

[20:38] *** d__b left
[21:23] <MasterDuke> timotimo: i don't think MVM_dump_bytecode_stackframe(tc, 1) is what i want

[21:24] <MasterDuke> the annotations in what it dumps are all in src/Perl6/*, but i'm hoping for stuff in src/core/*

[21:41] *** y0sh11 joined
[21:42] *** p6bannerbot sets mode: +v y0sh11

[21:47] *** drakythe joined
[21:48] *** p6bannerbot sets mode: +v drakythe

[21:50] *** drakythe left
[21:50] *** y0sh11 left
[21:57] *** ski_ joined
[21:57] *** p6bannerbot sets mode: +v ski_

[22:04] *** ski_ left
[22:28] *** Syfer joined
[22:28] *** p6bannerbot sets mode: +v Syfer

[22:29] *** Syfer left
[22:31] *** ruunyan joined
[22:31] *** ruunyan left
[22:45] *** Connecting joined
[22:46] *** p6bannerbot sets mode: +v Connecting

[22:48] *** Connecting left
[22:49] *** janus23 joined
[22:50] *** p6bannerbot sets mode: +v janus23

[22:55] *** janus23 left
[22:59] *** Kaiepi joined
[22:59] *** Kaypie left
[22:59] *** p6bannerbot sets mode: +v Kaiepi

[23:00] *** Kaiepi left
[23:01] *** Kaiepi joined
[23:01] *** p6bannerbot sets mode: +v Kaiepi

[23:06] *** stmuk joined
[23:06] *** p6bannerbot sets mode: +v stmuk

[23:07] *** pringlecake joined
[23:07] *** p6bannerbot sets mode: +v pringlecake

[23:08] *** stmuk_ left
[23:08] *** pringlecake left
[23:37] *** e27 joined
[23:37] *** e27 left
[23:37] *** mpmc23 joined
[23:37] *** p6bannerbot sets mode: +v mpmc23

[23:38] *** mpmc23 left
[23:46] *** hoelzro left
