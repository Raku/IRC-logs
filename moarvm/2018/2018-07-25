[00:32] * [Coke] fires up a build.

[00:43] <[Coke]> passed here, 10.13.6

[00:49] <MasterDuke> https://github.com/perl6/nqp/issues/274

[02:08] *** mst joined
[02:08] *** ChanServ sets mode: +o mst

[03:15] *** stmuk joined
[03:17] *** stmuk_ left
[04:40] *** squashable6 joined
[06:05] *** MasterDuke left
[06:51] *** robertle joined
[06:52] *** domidumont joined
[06:58] *** domidumont left
[06:59] *** domidumont joined
[07:47] <masak> jnthn, timotimo: do we still have that AngularJS app for doing metric on GC/JIT etc?

[07:48] <masak> I remember it being slow, and I remember semi-promising to make it faster. :) I've actually done that now with other things. the trick is to remove the AngularJS

[07:53] <robertle> haha! so the trick to making angular faster is not using angular? I'll remember that...

[07:57] <masak> robertle: you think it's a joke... :P

[07:58] <masak> there's a tweet somewhere that goes further. something like "we hired this JavaScript performance expert to help make our site faster. she advised us to get rid of most of the JavaScript"

[08:05] *** zakharyas joined
[08:10] *** lizmat left
[08:23] *** lizmat joined
[09:08] <jnthn> masak: fwiw, I think timotimo is building a new profiler interface (not using Angular :))

[09:16] <masak> oh!

[09:16] <masak> good for him! :)

[09:16] <masak> is it published somewhere?

[09:17] <tadzik> masak: oh, that might be a joke, but reminds me of a story of a certain nosql database :)

[09:17] <tadzik> where a trick to improve performance by a few orders of magnitute was disabling one of the 8 monster servers powering its cluster

[09:18] <masak> tadzik: I guess that's why "serverless" is so hyped these days :P

[09:18] <tadzik> just imagine 8 boxes, each with 32 cores (64 threads), 128G of ram and a 1TB of storage, all put together putting up a whooping... 100req/s

[09:19] <tadzik> masak: well, if it scales linearly like that... :P

[09:22] <masak> tadzik: sometimes I think the engineers who built the computers that landed us on the moon would look at our current practices and cry in anguish

[09:24] <tadzik> masak: probably :)

[09:25] <tadzik> I used to find it funny when my phone was running quake 3 more smoothly than angry birds. Who can one's engineering be *so much* better than the other? These days that phone wouldn't even be able to run Everyone's Favourite Chat App[tm]

[09:26] <tadzik> it's a known fact that software is getting slower more rapidly than hardware is getting faster, but we've really accelerated that process in recent years, it feels

[09:34] <masak> ah, yes. the tower of abstractions is so high you can't see the ground anymore

[09:35] <tadzik> I read that as "can't see the ground above" :P

[09:40] <masak> well, the way we draw trees in CS, it only stands to reason the ground would be found above

[09:44] <tadzik> back to the roots

[09:50] *** timotimo joined
[09:52] <timotimo> masak: i'd have already published it, were i not so ashamed of the code quality :|

[09:52] <timotimo> though it ought to be public soon, after all it's grant work for tpf

[09:54] <masak> timotimo: your call completely -- but consider me interested

[09:55] <masak> "your profiler is intriguing to me and I wish to subscribe to your newsletter" :P

[09:55] <timotimo> wakelift.de ;)

[09:55] <tadzik> "here's my seal of consent to you handling my email address" :P

[09:56] <masak> tadzik: I used to use seals for expressing consent, but the zoo called me and said don't do that

[09:57] <tadzik> queue Ylvis - The language of love

[09:58] <tadzik> (https://youtu.be/MCxDJnHiLqs?t=123)

[09:58] <tadzik> right, time to get to work... :P

[10:01] <timotimo> oh lord i haven't seen that one yet

[10:02] <tadzik> I never thought I'd voluntarily get back to it :P

[10:03] <masak> tadzik: that made my day, thanks

[10:03] <timotimo> baeutiful cgi seal .. sealGI?

[10:03] <tadzik> I CAN'T UNDERSTAND WHAT YOU SAID

[10:04] <masak> timotimo: I have now read all your blog posts. please write more of them.

[10:04] <timotimo> masak: yes, it goes by way too fast, doesn't it

[10:04] <timotimo> that "asian technique" is something else, though

[10:04] <masak> I can confirm the asian technique locally.

[10:05] * masak .oO( works on my box! )

[10:05] <tadzik> ...asian technique?

[10:05] <masak> tadzik: it's in the video you posted

[10:06] <masak> there are... tongs

[10:06] <timotimo> tongs on the tongue

[10:06] <tadzik> oh

[10:06] <tadzik> I have to admit, I only watched the sealed part :)

[10:06] <timotimo> oh, OK

[10:07] <tadzik> time to catch up

[10:07] *** domidumont left
[10:08] <tadzik> ......oh

[10:10] <masak> :P

[11:03] *** zakharyas left
[11:30] *** domidumont joined
[11:38] *** robertle left
[11:40] *** robertle joined
[11:59] *** robertle left
[12:10] *** robertle joined
[12:24] *** diakopter left
[12:39] *** zakharyas joined
[14:14] *** domidumont left
[14:15] *** domidumont joined
[14:22] *** domidumont left
[14:23] *** domidumont joined
[14:25] <timotimo> masak: your blog has a mascot!!!

[14:27] <masak> :D

[14:27] <timotimo> a masakscot!

[14:31] *** AlexDaniel joined
[14:31] *** AlexDaniel` joined
[14:33] *** ZofBot joined
[14:35] *** AlexDaniel left
[14:36] *** AlexDaniel joined
[14:38] *** AlexDaniel left
[14:38] *** AlexDaniel joined
[15:24] *** robertle left
[15:42] *** domidumont left
[15:52] *** zakharyas left
[15:53] *** robertle joined
[16:07] <Geth> ¦ MoarVM/pea: e7c1855c5b | (Jonathan Worthington)++ | 13 files

[16:07] <Geth> ¦ MoarVM/pea: Minimal escape analysis and scalar replacement

[16:07] <Geth> ¦ MoarVM/pea:

[16:07] <Geth> ¦ MoarVM/pea: This only handles the case where:

[16:07] <Geth> ¦ MoarVM/pea:

[16:07] <Geth> ¦ MoarVM/pea: * No aliasing

[16:07] <Geth> ¦ MoarVM/pea: * No deoptimizing instructions

[16:07] <Geth> ¦ MoarVM/pea: * No control flow (conditionals, loops)

[16:07] <Geth> ¦ MoarVM/pea: <…commit message has 7 more lines…>

[16:07] <Geth> ¦ MoarVM/pea: review: https://github.com/MoarVM/MoarVM/commit/e7c1855c5b

[16:12] <jnthn> https://gist.github.com/jnthn/580ca984c63427b900ee43183fb18ae8 runs in 60% of the time that it took before that optimization :)

[16:15] <timotimo> nice improvement

[16:19] <jnthn> Yeah. It's too limited for any really interesting cases yet, but it's nice to have a starting point to bulid upon

[16:19] <timotimo> of course

[16:22] <masak> I suspect the tricky parts of EA come in the aliasing and the control flow

[16:22] <masak> but it seems to me that having it be partial will actually help much of the time

[16:22] <timotimo> mhm

[16:32] <Geth> ¦ MoarVM/pea: 137ab0f6e6 | (Carl Masak)++ | src/spesh/usages.h

[16:32] <Geth> ¦ MoarVM/pea: Reset MVM_SPESH_CHECK_DU to 0

[16:32] <Geth> ¦ MoarVM/pea: review: https://github.com/MoarVM/MoarVM/commit/137ab0f6e6

[16:36] <Geth> ¦ MoarVM/pea: 025bdfd7d5 | (Carl Masak)++ | src/spesh/manipulate.c

[16:36] <Geth> ¦ MoarVM/pea: Add missing comment to a new function

[16:36] <Geth> ¦ MoarVM/pea: review: https://github.com/MoarVM/MoarVM/commit/025bdfd7d5

[17:50] *** Ven`` joined
[17:55] *** Ven`` left
[17:57] *** Ven`` joined
[18:14] *** Ven`` left
[18:18] *** Ven`` joined
[18:22] *** Ven`` left
[19:07] <lizmat> .ask jnthn in lib/experimental.pm6 for "is cached", is the nqp::bindattr_i still needed ?

[19:07] <yoleaux> lizmat: I'll pass your message to jnthn.

[19:17] *** domidumont joined
[19:24] *** domidumont left
[19:25] *** Ven`` joined
[19:35] *** Ven`` left
[20:11] *** MasterDuke joined
[20:31] *** robertle left
[20:39] *** avar joined
[20:39] *** avar left
[20:39] *** avar joined
[20:56] <lizmat> .tell jnthn related to that, I've done https://github.com/rakudo/rakudo/commit/434ede491d

[20:56] <yoleaux> lizmat: I'll pass your message to jnthn.

[21:17] <jnthn> .tell lizmat 434ede49 looks reasonable to me

[21:17] <yoleaux> jnthn: I'll pass your message to lizmat.

[21:17] <yoleaux> 19:07Z <lizmat> jnthn: in lib/experimental.pm6 for "is cached", is the nqp::bindattr_i still needed ?

[21:17] <yoleaux> 20:56Z <lizmat> jnthn: related to that, I've done https://github.com/rakudo/rakudo/commit/434ede491d

[21:18] <lizmat> ok, then I'll remove the bindattr_i from lib/experimental, as that is now handled by Routine.wrap

[21:18] <yoleaux> 21:17Z <jnthn> lizmat: 434ede49 looks reasonable to me

