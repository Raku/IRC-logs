[00:01] *** MasterDuke left
[00:23] <timotimo> https://wakelift.de/2018/11/10/rakudo-perl-6-performance-analysis-tooling-progress-report/ - lol i blogged a second time!

[00:26] *** MasterDuke joined
[00:26] *** p6bannerbot sets mode: +v MasterDuke

[00:26] *** MasterDuke left
[00:26] *** MasterDuke joined
[00:26] *** herbert.freenode.net sets mode: +v MasterDuke

[00:26] *** p6bannerbot sets mode: +v MasterDuke

[00:40] *** pmurias left
[01:35] *** MasterDuke left
[01:57] *** MasterDuke joined
[01:57] *** p6bannerbot sets mode: +v MasterDuke

[02:04] *** MasterDuke left
[02:04] *** MasterDuke joined
[02:04] *** herbert.freenode.net sets mode: +v MasterDuke

[02:04] *** p6bannerbot sets mode: +v MasterDuke

[08:10] *** domidumont joined
[08:11] *** p6bannerbot sets mode: +v domidumont

[08:42] *** AlexDaniel left
[10:27] *** AlexDaniel joined
[10:27] *** p6bannerbot sets mode: +v AlexDaniel

[13:34] *** AlexDaniel left
[14:44] *** AlexDaniel joined
[14:44] *** p6bannerbot sets mode: +v AlexDaniel

[14:48] *** MasterDuke left
[17:01] *** MasterDuke joined
[17:01] *** p6bannerbot sets mode: +v MasterDuke

[17:01] *** MasterDuke left
[17:01] *** MasterDuke joined
[17:01] *** herbert.freenode.net sets mode: +v MasterDuke

[17:01] *** p6bannerbot sets mode: +v MasterDuke

[17:29] *** zakharyas joined
[17:29] *** p6bannerbot sets mode: +v zakharyas

[17:31] *** zakharyas left
[17:33] *** zakharyas joined
[17:34] *** p6bannerbot sets mode: +v zakharyas

[17:40] <hoelzro> timotimo: FWIW, the fastest I can seem to get a tree-building query for that DB you sent me is about 7s

[17:40] <hoelzro> it's been a fun little exercise, though =)

[17:41] <timotimo> 7s for the entire thing?

[17:41] <timotimo> or for one step? :D

[17:42] <hoelzro> just to build the tree - no writes

[17:43] <hoelzro> I ended up making an index on parent_id to help a bit with the run time

[17:43] <hoelzro> but I'm guessing your code that you added is going to be more efficient

[17:46] <timotimo> yeah, index on parent_id helps tremendously

[17:53] <Geth> Â¦ MoarVM: 1bf132125c | (Stefan Seifert)++ | src/6model/reprs/VMArray.c

[17:53] <Geth> Â¦ MoarVM: Fix uninitialized values reported by valgrind.

[17:53] <Geth> Â¦ MoarVM:

[17:53] <Geth> Â¦ MoarVM: Thanks to dogbert11++ for reporting!

[17:53] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/1bf132125c

[18:17] *** travis-ci joined
[18:17] *** p6bannerbot sets mode: +v travis-ci

[18:17] <travis-ci> MoarVM build passed. Stefan Seifert 'Fix uninitialized values reported by valgrind.

[18:17] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/453334521 https://github.com/MoarVM/MoarVM/compare/2fdde4a21014...1bf132125ce4

[18:17] *** travis-ci left
[18:49] *** emerson left
[19:12] *** evilem joined
[19:12] *** p6bannerbot sets mode: +v evilem

[20:01] *** domidumont left
[20:03] <dogbert11> nine++

[20:04] <dogbert11> that fix seems to have unbusted the 32 bit build

[20:28] <dogbert11> there's still the problem with 'Register types do not match between value and node' in t/02-rakudo/12-proto-arity-count.t though. Seems to (possibly)) be expr jit related.

[20:59] <nine> Oh that's a relief :)

[21:24] <timotimo> hum. what conclusion did i last reach when i wondered how best to log what kind of wrongness happened to cause a deopt ...

[21:28] <timotimo> maybe i'll just duplicate all the guard* ops under prof_

[21:30] <timotimo> it's only 9 anyway, 10 if you count sp_rebless, but for a start i'll only do sp_guard*

[22:16] *** zakharyas left
