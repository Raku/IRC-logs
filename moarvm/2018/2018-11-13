[00:41] *** Kaiepi left
[01:21] <timotimo> lizmat: i wonder what you mean in the weekly by "looking forward to when this hits master"

[02:10] <Geth_> ¦ MoarVM/informative_deopt_profile: d188b7a22f | (Timo Paulssen)++ | 12 files

[02:10] <Geth_> ¦ MoarVM/informative_deopt_profile: WIP on storing more data about deopts

[02:10] <Geth_> ¦ MoarVM/informative_deopt_profile: review: https://github.com/MoarVM/MoarVM/commit/d188b7a22f

[02:53] *** Kaiepi joined
[02:54] *** p6bannerbot sets mode: +v Kaiepi

[06:08] *** Kaiepi left
[06:20] *** lizmat left
[06:24] *** Kaiepi joined
[06:24] *** p6bannerbot sets mode: +v Kaiepi

[07:08] *** domidumont joined
[07:09] *** p6bannerbot sets mode: +v domidumont

[07:36] *** robertle joined
[07:37] *** p6bannerbot sets mode: +v robertle

[10:45] *** Kaypie joined
[10:45] *** Kaiepi left
[10:46] *** p6bannerbot sets mode: +v Kaypie

[10:57] *** zakharyas joined
[10:58] *** p6bannerbot sets mode: +v zakharyas

[11:00] *** lizmat joined
[11:00] *** p6bannerbot sets mode: +v lizmat

[11:41] *** zakharyas left
[11:46] *** zakharyas joined
[11:46] *** p6bannerbot sets mode: +v zakharyas

[12:27] *** nebuchadnezzar left
[12:27] *** nebuchadnezzar joined
[12:28] *** p6bannerbot sets mode: +v nebuchadnezzar

[12:36] *** shareable6 left
[12:36] *** shareable6 joined
[12:37] *** p6bannerbot sets mode: +v shareable6

[12:56] *** dogbert17 joined
[12:57] *** p6bannerbot sets mode: +v dogbert17

[13:14] *** ZofBot joined
[13:14] *** p6bannerbot sets mode: +v ZofBot

[13:18] *** dalek left
[13:18] *** dalek joined
[13:19] *** p6bannerbot sets mode: +v dalek

[13:30] *** rba joined
[13:31] *** p6bannerbot sets mode: +v rba

[14:49] *** MasterDuke left
[15:01] *** zakharyas left
[15:02] *** rba left
[15:22] <Geth_> ¦ MoarVM/pea: 15 commits pushed by (Jonathan Worthington)++, (Carl Masak)++

[15:22] <Geth_> ¦ MoarVM/pea: review: https://github.com/MoarVM/MoarVM/compare/dc36f75615d2...0f51f33e5a6d

[15:22] <jnthn> Rebase, to keep atop of master :)

[15:38] *** greppable6 left
[15:39] *** greppable6 joined
[15:39] *** greppable6 left
[15:39] *** greppable6 joined
[15:39] *** p6bannerbot sets mode: +v greppable6

[15:40] *** undersightable6 left
[15:40] *** releasable6 left
[15:40] *** bisectable6 left
[15:40] *** squashable6 left
[15:40] *** notable6 left
[15:40] *** statisfiable6 left
[15:40] *** bloatable6 left
[15:40] *** p6bannerbot sets mode: +v greppable6

[15:40] *** unicodable6 left
[15:40] *** undersightable6 joined
[15:40] *** releasable6 joined
[15:40] *** benchable6 left
[15:40] *** coverable6 left
[15:40] *** bisectable6 joined
[15:40] *** quotable6 left
[15:40] *** notable6 joined
[15:40] *** squashable6 joined
[15:40] *** committable6 left
[15:40] *** shareable6 left
[15:40] *** notable6 left
[15:40] *** squashable6 left
[15:40] *** bisectable6 left
[15:40] *** greppable6 left
[15:40] *** evalable6 left
[15:40] *** nativecallable6 left
[15:40] *** committable6 joined
[15:40] *** shareable6 joined
[15:41] *** p6bannerbot sets mode: +v undersightable6

[15:41] *** p6bannerbot sets mode: +v releasable6

[15:41] *** p6bannerbot sets mode: +v committable6

[15:41] *** p6bannerbot sets mode: +v shareable6

[15:43] *** evalable6 joined
[15:43] *** nativecallable6 joined
[15:43] *** greppable6 joined
[15:43] *** notable6 joined
[15:43] *** quotable6 joined
[15:44] *** p6bannerbot sets mode: +v evalable6

[15:44] *** p6bannerbot sets mode: +v nativecallable6

[15:44] *** p6bannerbot sets mode: +v greppable6

[15:44] *** p6bannerbot sets mode: +v notable6

[15:44] <Geth_> ¦ MoarVM/pea: 8e85c3947e | (Jonathan Worthington)++ | 4 files

[15:44] <Geth_> ¦ MoarVM/pea: Add an envvar to turn PEA on/off

[15:44] <Geth_> ¦ MoarVM/pea: review: https://github.com/MoarVM/MoarVM/commit/8e85c3947e

[15:44] *** p6bannerbot sets mode: +v quotable6

[15:46] *** bisectable6 joined
[15:47] *** p6bannerbot sets mode: +v bisectable6

[15:49] <jnthn> Anyone seen a "MoarVM oops: Spesh: failed to fix up inline 4 (last) 902 -1" lately?

[15:50] <timotimo> only with --profile, and very rarely

[15:50] <jnthn> After rebase of pea atop of master, and my lexical => local lowering atop of Rakudo master, I suddenly have some new cases of this (probably all the same root cause)

[15:50] <jnthn> All in spectest

[15:50] <lizmat> fwiw, not seen those in a long time

[15:50] <jnthn> Disabling PEA doesn't help, so it can't just be that

[15:51] <jnthn> It's in Spesh of '' (cuid: 12163, file: SETTING::src/core/operators.pm6:177)

[15:52] <jnthn> Which is part of SEQUENCE

[15:52] <timotimo> i, for one, would love to know how a b0rked object enters an object register purely by virtue of having had my prof_guard* ops substituted in for the regular guard_* ops; it happens after profiling has ended, but moar no longer tries to change code back when it hits the end of the profile

[15:52] <jnthn> Goodness this thing has big PHIs...

[15:52] <timotimo> .o( i like big BBs and i cannot PHI )

[15:53] <jnthn> :P

[15:53] <jnthn> Yeah, the Inline End annotation really has gone amiss

[15:54] <lizmat> jnthn: permission to refactor SEQUENCE ?

[15:54] <lizmat> :-)

[15:54] <timotimo> the current SEQUENCE will have served its purpose once this code gen / optimization bug has been fixed ;)

[15:54] <lizmat> okidoki

[15:55] <jnthn> lizmat: I think it was TimToady++ who wrote most of it

[15:55] <timotimo> (not serious)

[15:55] <lizmat> yeah, before we had modern day iterators

[15:55] <timotimo> those were simpler times

[15:56] <lizmat> (and slower times)

[16:01] <lizmat> m: dd a => 42 <<+>> b => 666   # what should that give ?

[16:01] <camelia> rakudo-moar fa5215b61: OUTPUT: «Cannot modify an immutable Pair (Nil => Nil)␤  in block <unit> at <tmp> line 1␤␤»

[16:09] *** zakharyas joined
[16:09] *** p6bannerbot sets mode: +v zakharyas

[16:11] <Geth_> ¦ MoarVM/pea: d1d6fbe0d9 | (Jonathan Worthington)++ | src/spesh/dead_bb_elimination.c

[16:11] <Geth_> ¦ MoarVM/pea: Fix inline end annotation motion on BB deletion

[16:11] <Geth_> ¦ MoarVM/pea:

[16:11] <Geth_> ¦ MoarVM/pea: So that the end annotation does not get lost. This can happen if the

[16:11] <Geth_> ¦ MoarVM/pea: last block(s) of an inline become unreachable.

[16:11] <Geth_> ¦ MoarVM/pea: review: https://github.com/MoarVM/MoarVM/commit/d1d6fbe0d9

[16:13] <jnthn> That fixes it. Maybe it'll eliminate timotimo++'s cases of seeing that bug too. :)

[16:13] <jnthn> And now I'm back to the one test failure in my lexical to local lowering branch that I've no clue how I'm going to fix :)

[16:15] <nwc10> jnthn: master is somewhat in a state of sin currently

[16:15] <nwc10> (re-running

[16:15] <timotimo> don't forget to cherry-pick it into moarvm/master

[16:16] *** robertle left
[16:16] <jnthn> nwc10: How so?

[16:17] <nwc10> t/nqp/033-init.t t/nqp/081-radix.t t/nqp/101-lexpad-stuff.t fail

[16:17] <nwc10> MoarVM panic: Register types do not match between value and node

[16:17] <jnthn> timotimo: My branch did a change to fix succ fixup after the optimization of a throw into a goto

[16:17] <nwc10> MVM_SPESH_BLOCKING=1 MVM_SPESH_NODELAY=1

[16:18] <nwc10> #define MVM_ARRAY_CONC_DEBUG 1

[16:18] <nwc10> #define FSA_SIZE_DEBUG 1

[16:18] <jnthn> timotimo: I don't believe the thing I just fixed could possibly have happened before I fixed that, since the BB won't have been considered dead.

[16:18] <nwc10> #define MVM_SPESH_CHECK_DU 1

[16:18] <nwc10> (and ASAN, but ASAN does not comment_

[16:18] <nwc10> and I need to go eat, I'm told

[16:18] <timotimo> in that case i don't know how fixing it only in pea would get rid of my cases of seeing that bug :)

[16:18] <timotimo> or i might misunderstand just in general

[16:18] <timotimo> today is not a "brain is working" day

[16:19] <nwc10> jnthn: I don't know how to be more helpful in further diagnosis or attempting to locate the root cause

[16:19] <nwc10> (and I need to be afk)

[16:20] *** domidumont left
[16:20] <jnthn> timotimo: Ho, good point. Unless there's something in the profiler that could trigger a similar case? Dunno.

[16:29] *** zakharyas left
[16:29] *** zakharyas joined
[16:30] *** p6bannerbot sets mode: +v zakharyas

[16:34] *** Kaypie left
[16:34] *** Kaypie joined
[16:35] *** p6bannerbot sets mode: +v Kaypie

[16:40] *** benchable6 joined
[16:40] *** squashable6 joined
[16:41] *** coverable6 joined
[16:41] *** unicodable6 joined
[16:41] *** statisfiable6 joined
[16:41] *** bloatable6 joined
[16:41] *** p6bannerbot sets mode: +v benchable6

[16:41] *** p6bannerbot sets mode: +v squashable6

[16:41] *** p6bannerbot sets mode: +v coverable6

[16:41] *** p6bannerbot sets mode: +v unicodable6

[16:41] *** p6bannerbot sets mode: +v statisfiable6

[16:42] *** p6bannerbot sets mode: +v bloatable6

[16:49] *** zakharyas left
[17:12] <jnthn> releasable6: status

[17:12] <releasable6> jnthn, Next release in ≈4 days and ≈1 hour. 3 blockers. 0 out of 125 commits logged

[17:12] <releasable6> jnthn, Details: https://gist.github.com/68a9fc75f164aaad4d10dd75b843fc1a

[18:35] *** zakharyas joined
[18:36] *** p6bannerbot sets mode: +v zakharyas

[18:40] *** zakharyas left
[18:40] *** zakharyas joined
[18:41] *** p6bannerbot sets mode: +v zakharyas

[18:49] *** emerson left
[18:50] <dogbert17> .seen brrt

[18:50] <yoleaux> I saw brrt 8 Nov 2018 19:58Z in #moarvm: <brrt> \o

[18:52] *** emerson joined
[18:52] *** p6bannerbot sets mode: +v emerson

[19:11] <timotimo> a random piece of code i'm looking at:

[19:11] <timotimo> the code is ((Bool.pick ?? Tree !! Empty) xx $!width) xx $!height

[19:11] <timotimo> or so

[19:11] <timotimo> pro: the &infix:<xx> call actually inlines the (Bool.pick ?? Tree !! Empty) inside itself

[19:11] <timotimo> that's pretty cool

[19:12] <timotimo> but a missed opportunity is that Tree and Empty are set in two branches, then PHI-merged

[19:12] <timotimo> but the register it gets merged into doesn't have any facts on it, and so it has a sp_guardconc following it

[19:13] <timotimo> which could completely go if we had propagated merged flags from the phi

[19:13] <timotimo> well, just a itsy-bitsy tiny-whiny thing i stumbled upon

[19:20] *** zakharyas left
[19:25] <timotimo> i'm not quite sure why the After: section has so many empty BBs still left

[19:29] *** robertle joined
[19:29] *** p6bannerbot sets mode: +v robertle

[19:40] <jnthn> timotimo: I'm not sure what facts those two would have in common?

[19:40] <timotimo> type and concreteness

[19:40] <jnthn> Tree and Empty are of different types, no?

[19:40] <timotimo> oh

[19:40] <timotimo> not in this program :)

[19:40] <jnthn> m: say Empty.DEFINITE

[19:40] <camelia> rakudo-moar d5a751d94: OUTPUT: «True␤»

[19:41] <timotimo> m: enum <Empty Tree Heating Burning>; say Empty.^mro

[19:41] <camelia> rakudo-moar d5a751d94: OUTPUT: «(() (Int) (Cool) (Any) (Mu))␤»

[19:41] <jnthn> Is Tree also .DEFINITE?

[19:41] <jnthn> Oh...not *that* Empty :)

[19:41] <jnthn> Yeah, OK, then I dunno why it doesn't merge

[19:41] <timotimo> yes, it is

[19:41] <timotimo> could be an order-of-operations problem again

[19:41] <timotimo> as always :)

[19:42] <timotimo> append @foo: 1, 2; is sloooowww. if @foo is an int16 array it's 1/6th faster. if you push twice instead it's like 100x faster, maybe more

[19:42] <timotimo> it's hard to measure that because you have a list that grows a whole bunch, and gc could become a big part of your run time

[19:43] <timotimo> and assigning Empty over and over must not become a major time sink either

[19:45] <timotimo> lizmat: wanna investigate if appending a couple of elements into an array could be made a bunch faster? :)

[19:45] <lizmat> like Array.push ?

[19:45] <timotimo> specifically @foo.append: 1, 2

[19:46] <timotimo> versus @foo.push: 1; @foo.push: 2;

[19:46] <lizmat> ok, tell me

[19:46] <timotimo> m: my int16 @foo; for ^1_000 { @foo = Empty; for ^1_000 { append @foo: 1, 2; } }; say now - ENTER now

[19:46] <camelia> rakudo-moar d5a751d94: OUTPUT: «4.58774029␤»

[19:46] <timotimo> m: my int16 @foo; for ^1_000 { @foo = Empty; for ^1_000 { push @foo: 1; push @foo: 2; } }; say now - ENTER now

[19:46] <camelia> rakudo-moar d5a751d94: OUTPUT: «0.08808437␤»

[19:47] <timotimo> m: my int16 @foo; for ^1_000 { @foo = Empty; for ^1_000 { append @foo, 1, 2; } }; say now - ENTER now

[19:47] <timotimo> ^- much worse

[19:47] *** rba joined
[19:47] <camelia> rakudo-moar d5a751d94: OUTPUT: «12.9074396␤»

[19:47] <timotimo> that's the sub form, instead of the method form

[19:47] <timotimo> so perhaps you're in the mood for a commit with "make append 100x faster" in it ):

[19:47] *** p6bannerbot sets mode: +v rba

[19:48] <timotimo> if not, maybe i'll have a look

[19:49] * lizmat is looking

[19:50] <lizmat> timotimo: also, if you're timing with for loops, add -> int $_

[19:50] <lizmat> that will remove the noise of the Int's being made for $_ on each iterationn

[19:50] <timotimo> ah

[19:50] <timotimo> m: my int16 @foo; for ^1_000 -> int $_ { @foo = Empty; for ^1_000 -> int $_ { append @foo, 1, 2; } }; say now - ENTER now

[19:50] <camelia> rakudo-moar d5a751d94: OUTPUT: «13.1483053␤»

[19:51] <timotimo> m: my int16 @foo; for ^1_000 -> int $ { @foo = Empty; for ^1_000 -> int $ { append @foo, 1, 2; } }; say now - ENTER now

[19:51] <camelia> rakudo-moar d5a751d94: OUTPUT: «13.33780948␤»

[19:51] <timotimo> not in this case apparently?

[19:51] <lizmat> int $_

[19:51] <timotimo> that's what i tried first

[19:52] <lizmat> m: for ^10_000_000 { }; say now - ENTER now

[19:52] <camelia> rakudo-moar d5a751d94: OUTPUT: «0.2908868␤»

[19:52] <lizmat> m: for ^10_000_000 -> int $_ { }; say now - ENTER now

[19:52] <camelia> rakudo-moar d5a751d94: OUTPUT: «1.37746726␤»

[19:53] <timotimo> whoops!

[19:53] <lizmat> huh?

[19:53] <lizmat> m: for ^10_000_000 -> int $_ { }; say now - ENTER now

[19:53] <camelia> rakudo-moar d5a751d94: OUTPUT: «1.36683639␤»

[19:53] <lizmat> $ 6 'for ^10_000_000 { }; say now - ENTER now'

[19:53] <lizmat> 0.299314

[19:53] <lizmat> $ 6 'for ^10_000_000 -> int $_ { }; say now - ENTER now'

[19:53] <lizmat> 0.0917367

[19:53] <lizmat> m: for ^10_000_000 -> int $_ { }; say now - ENTER now

[19:53] <camelia> rakudo-moar d5a751d94: OUTPUT: «1.333836␤»

[19:53] <lizmat> m: for ^10_000_000 { }; say now - ENTER now

[19:53] <camelia> rakudo-moar d5a751d94: OUTPUT: «0.2944897␤»

[19:53] <lizmat> weird

[19:54] <timotimo> anyway, the append i have in this code, which is rc-forest-fire, spends a bunch of its time in Array's append-list (Array.pm6:750), and another chunk in from-slurpy

[19:54] <timotimo> and a tiny sliver in is-lazy

[19:54] <lizmat> well, I'm about to go afk for a double helping of Fantastic Beasts

[19:54] <timotimo> but the program itself spends only a miniscule amount actually appending double-values anyway

[19:54] <timotimo> so it won't be a big help for performance in this case

[19:55] <lizmat> so it'll be tomorrow for me

[19:56] <timotimo> no problem

[19:56] <timotimo> enjoy the movies! :)

[19:56] <lizmat> I will!

[20:05] *** Kaypie left
[20:05] *** Kaypie joined
[20:06] *** p6bannerbot sets mode: +v Kaypie

[20:41] *** Kaypie left
[20:43] *** Kaiepi joined
[20:44] *** p6bannerbot sets mode: +v Kaiepi

[20:55] *** Kaiepi left
[20:55] *** Kaiepi joined
[20:56] *** p6bannerbot sets mode: +v Kaiepi

[22:08] *** AlexDaniel left
[22:08] *** AlexDaniel joined
[22:08] *** p6bannerbot sets mode: +v AlexDaniel

[22:09] *** robertle left
[23:14] *** dogbert11 joined
[23:15] *** p6bannerbot sets mode: +v dogbert11

[23:16] *** dogbert17 left
[23:19] *** Kaypie joined
[23:19] *** p6bannerbot sets mode: +v Kaypie

[23:20] *** Kaiepi left
[23:29] <timotimo> oh, merge_bbs is commented out, probably only in the pea branch

[23:57] *** emerson left
