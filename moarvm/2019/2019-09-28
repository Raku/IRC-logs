[00:18] *** discord61 joined
[00:18] *** discord61 left
[00:18] *** discord61 joined
[00:18] *** discord6 left
[00:19] *** discord61 is now known as discord6

[00:56] *** AlexDani` joined
[01:00] *** AlexDaniel left
[02:44] *** harrow left
[02:46] *** harrow joined
[05:01] *** AlexDani` is now known as AlexDaniel

[05:01] *** AlexDaniel left
[05:01] *** AlexDaniel joined
[07:21] *** domidumont joined
[07:44] *** domidumont left
[08:15] *** squashable6 left
[08:16] *** domidumont joined
[08:18] *** squashable6 joined
[08:24] *** domidumont left
[08:56] *** sena_kun joined
[08:57] *** chloekek joined
[09:04] *** chloekek left
[09:26] *** MasterDuke joined
[10:04] *** camelia left
[10:04] *** Geth left
[10:39] <nine> How on earth is my spesh plugin state refactor breaking the UTF-8 stream decoder?!

[11:55] *** nine joined
[11:58] *** Geth joined
[11:58] *** camelia joined
[12:35] *** lucasb joined
[12:43] *** ggoebel joined
[13:17] <dogbert17> is it the 'Decoder may not be used concurrently' message?

[13:21] <nine> No, more obscure things like .lines on a precomp file not stopping at the line end and then running into a \0

[13:24] <nine> There's also t/01-sanity/17-isa.t which fails this test: if $code.isa("Code")  { say "ok 3" } else { say "not ok 3" }

[13:25] <nine> My only guess is: spesh plugins just giving wrong results will create all sorts of inexplicable errors

[13:26] <nine> Could even be that nqp's t/moar/52-pluggable-spesh.t

[13:26] <nine> show those wrong results. But the test has been running for > 5 hours already :)

[13:27] <nine> It does its loops for millions of iterations. Not sure this will ever finish will all the GC debug checks turned on

[13:27] <MasterDuke> nine: my example from yesterday had a segv into the middle of sp_guardconc in interp.c, think it's related?

[13:29] <nine> doesn't sound like spesh plugins

[13:30] <dogbert17> and valgrind and asan are completely silent I guess

[13:32] *** sena_kun left
[13:35] <nine> of course

[13:37] <dogbert17> annoying

[13:40] <dogbert17> stupid question but are you running with the JIT disabled?

[13:42] <timotimo> probably because backtraces?

[13:43] <dogbert17> oh, it's timotimo

[13:44] <MasterDuke> has anybody tried ThreadSanitizer? is it of any use?

[13:45] * dogbert17 has not tried it

[13:46] <MasterDuke> or any of the others? memorysanitizer, leaksanitizer

[13:47] <dogbert17> I believe I have tried somthing called ubsan

[13:47] <dogbert17> guess that doesn't do the things you're looking for though

[15:38] <nine> Ouch.... git checkout . on the wrong machine is...bad

[15:54] *** greppable6 left
[15:56] *** greppable6 joined
[16:00] *** greppable6 left
[16:02] *** greppable6 joined
[16:17] *** greppable6 left
[16:22] *** greppable6 joined
[16:47] <Kaiepi> if i'm looping over a linked list but can't assign the pointer to the current element to the start of the linked list in the loop itself, is it better written like `for (foo; foo != NULL; foo = foo->next)` or `for (; foo != NULL; foo = foo->next)`?

[16:50] <nine> That foo; there won't do anything

[16:52] <Kaiepi> ik

[17:05] <AlexDaniel> Kaiepi: I'd prefer to read the second one because then I wouldn't need to wonder why someone put foo there

[18:15] <MasterDuke> well, i got moarvm to build with threadsanitizer, but the segv i get after doesn't seem all that helpful

[18:16] <MasterDuke> https://gist.github.com/MasterDuke17/672fd54eb24d44bfa485f3c5591b8c47 if anybody is curious

[18:17] <MasterDuke> i get that just running `perl6 -e ''`

[19:31] *** MasterDuke left
[19:55] *** MasterDuke joined
[20:03] <MasterDuke> think this would be useful for moarvm https://lemire.me/blog/2019/06/06/nearly-divisionless-random-integer-generation-on-various-systems/ ?

[20:08] <nine> Ah, I see it now. It's an ordering issue. In add_resolution_to_guard_set the frame's special return data is already cleared, thus srd is no longer anchored and allocating the new plugin state can trigger GC

