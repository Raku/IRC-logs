[00:48] *** MasterDuke joined
[00:49] *** MasterDuke left
[00:49] *** MasterDuke joined
[01:28] *** zakharyas joined
[03:43] *** squashable6 left
[03:45] *** squashable6 joined
[05:13] *** discord61 joined
[05:14] *** discord6 left
[05:14] *** discord61 is now known as discord6

[05:20] *** discord62 joined
[05:21] *** discord6 left
[05:21] *** discord62 is now known as discord6

[06:16] *** robertle left
[06:28] *** domidumont joined
[06:58] *** domidumont left
[07:08] *** zakharyas left
[07:38] *** domidumont joined
[07:42] *** domidumont left
[07:43] *** domidumont joined
[07:43] *** domidumont left
[07:45] *** domidumont joined
[08:08] *** zakharyas joined
[09:16] *** zakharyas left
[10:01] *** robertle joined
[11:54] *** brrt joined
[11:54] <brrt> good * #moarvm

[12:12] <nwc10> good *, brrt

[12:24] <brrt> so, the HN discussion on my post was fruitful in that it gave me this link: https://github.com/eclipse/omr/blob/master/doc/compiler/il/IntroToTrees.md

[12:24] <brrt> which ehm, describes an IR that is very much like mine

[12:28] <masak> great minds think alike

[12:38] <brrt> I'd say we read the same source :-D

[12:42] *** squashable6 left
[12:43] *** squashable6 joined
[13:57] *** robertle left
[13:58] *** robertle joined
[14:05] *** lizmat left
[14:05] *** lizmat joined
[14:10] *** lizmat_ joined
[14:10] *** lizmat left
[14:10] *** lizmat__ joined
[14:14] *** lizmat_ left
[14:20] *** lizmat__ left
[14:29] *** lizmat joined
[14:39] *** squashable6 left
[14:42] *** squashable6 joined
[14:50] *** squashable6 left
[14:52] *** lizmat left
[14:56] *** squashable6 joined
[15:35] *** robertle left
[16:11] *** domidumont left
[16:51] *** TimToady left
[16:52] *** TimToady joined
[17:35] *** brrt left
[17:37] *** lucasb joined
[17:46] *** robertle joined
[17:47] *** lizmat joined
[17:48] *** domidumont joined
[17:48] *** lizmat left
[17:48] *** lizmat joined
[17:59] *** brrt joined
[18:15] *** lizmat left
[18:21] *** lizmat joined
[18:26] *** brrt left
[18:36] *** ggoebel joined
[18:53] *** patrickb joined
[19:15] *** patrickb left
[19:21] *** ggoebel left
[19:34] *** lizmat left
[19:36] *** lizmat joined
[19:40] *** domidumont left
[19:48] *** brrt joined
[19:57] *** MasterDuke left
[20:11] <brrt> ohai #moarvm

[20:12] <timotimo> ohai brrt

[20:12] <brrt> ohai timotimo

[20:12] <brrt> I have been thinking and pondering and doing more thinking

[20:13] <brrt> Which is dangerous

[20:13] <brrt> But here's my idea.

[20:13] <timotimo> i've been paralyzed by my next task on the heap snapshot profiler - which should be a trivial thing to just code up, but my brain is being a donkey

[20:13] <timotimo> so i started a blog post

[20:13] <brrt> oh, I listen

[20:13] <brrt> :-)

[20:13] <brrt> and maybe I can help

[20:13] <timotimo> i listen, too, though

[20:14] <brrt> Ok!

[20:14] <brrt> what if I change the expression IR

[20:14] <timotimo> would you say the design of the data structure has ... exp IR ed?

[20:14] <brrt> from a DAG, value based, unordered structure, to an instruction-based structure

[20:14] <brrt> underlying data structure can stay mostly the same, I think. Maybe slightly simplified

[20:15] <brrt> we do most of the conversion in the perl template precompiler

[20:15] <brrt> ... or maybe not, maybe at runtime

[20:16] <brrt> we get real basic blocks... and we can make low-level blocks over more than one basic block

[20:17] <timotimo> ah, that's probably important :)

[20:17] <timotimo> low-level blocks would be the kind where we have conditions inside expr templates right now, right?

[20:18] <timotimo> and the real basic blocks are the bbs we have in spesh already?

[20:20] *** lizmat left
[20:23] <brrt> yeah

[20:23] <brrt> and it'd all be the same

[20:23] <timotimo> so they could even overlap?

[20:24] <timotimo> or if there's a block over more than one bb it'd just be a merged bb? or split at different points?

[20:25] *** lizmat joined
[20:30] *** brrt left
[20:30] *** brrt joined
[20:30] *** lizmat left
[20:33] <brrt> I lost connection for a second

[20:33] <brrt> No, I really just mean that an entire MoarVM routine could be in a single IR structure

[20:33] <brrt> rather than one tree per basic block as is the case now

[20:33] <timotimo> oh, ok

[20:37] <timotimo> well, it does sound like a rosy future

[20:38] <brrt> hehe :-)

[20:38] <brrt> it sounds like a bunch of work.... but nothing that can't be managed

[20:38] <brrt> it sounds like converging with what guile scheme also does

[20:44] <timotimo> but of course we can't just steal half of that, huh?

[20:53] <brrt> if only

[20:53] <brrt> guile has its compiler written in scheme iirc

[20:54] <timotimo> isn't scheme one of the easiest languages to implement? :D

[20:54] <timotimo> maybe forth could be easier?

[20:56] <brrt> forth would be easier. But scheme is fairly simple

[20:56] <brrt> oh, I see your point :-D

[20:56] <brrt> yeah, well, if there's no GSoC student interested in the spesh/jit testing tool, I'll be writing it myself

[20:57] <brrt> (and it would, in a way, be a scheme)

[20:58] <brrt> or almost-a-scheme

[21:01] <timotimo> there'll have to be a pun on that for the name

[21:03] <timotimo> now how do i visualize my data format ...

[21:03] <timotimo> the graphviz approach i tried wasn't really satisfactory

[21:05] <brrt> graphviz didn't work?

[21:05] <brrt> :-o

[21:06] <discord6> <timotimo> https://cdn.discordapp.com/attachments/557618333755768832/558396132682760192/unknown.png

[21:07] <discord6> <timotimo> i'm not too happy with the look

[21:10] <brrt> oh, I kind of like it

[21:10] <timotimo> i'm considering maybe taking a screenshot (or even html dump) of a hex editor and coloring it in or something

[21:14] <brrt> I'm slowly coming around to appreciating rust

[21:16] <masak> it's nice to see you talking about converging on Scheme

[21:16] <masak> I think I understand the context, but even without it, I'm just a fan of the idea ;)

[21:16] <brrt> :-)

[21:19] <brrt> I guess what happens is that in both our case and in their case, we're moving slowly from a high-level language with polymorphic primitives, via a low-level language to assembly

[21:19] <timotimo> masak: got a hot tip on how to visualize the interior design of a file format?

[21:22] <masak> something like a collapsible hierarchy with hyperlinks in it?

[21:22] <masak> which file format are we talking about? moarvm bytecode?

[21:23] *** domidumont joined
[21:27] *** domidumont left
[21:33] <timotimo> nah, the new heap snapshot format

[21:34] <timotimo> it should be more like a diagram of how the format is designed rather than an actual file that you can scroll through

[22:02] <brrt> I don't mind ascii graphs for that purpopse

[22:02] <timotimo> i wonder what blind people would prefer in this case

[22:02] <timotimo> an html table would let them

[22:02] <timotimo> probably let them* navigate cell-to-cell comfortably

[22:03] <timotimo> but a braille display might be better with an ascii diagram?

[22:08] <timotimo> annoyingly, my browser recently crashed, and ghost hadn't saved a draft since i started the latest paragraph

[22:21] <brrt> :-(

[22:21] <brrt> I don't think a braille display would work well with ascii. But I don't know

[22:27] <timotimo> since i'm randomly fascinated by blind computer usage, i should get a braille display. except those things are incredibly expensive

[22:32] *** lizmat joined
[22:52] <brrt> moar blog: https://brrt-to-the-future.blogspot.com/2019/03/reverse-linear-scan-allocation-is.html

[22:52] <brrt> about how LuaJIT's register allocation algorithm is cool

[22:52] <brrt> and how we should totally steal that

[22:52] <brrt> timotimo: they are

[22:53] <brrt> I once had a program called 'zoomtext'

[22:53] <brrt> This was paid for me by.... some government agency

[22:53] <brrt> It was *ridiculously* expensive

[22:53] <brrt> fortunately zooming is built-in on most platforms now

[23:09] *** Geth left
[23:17] *** brrt left
[23:24] *** MasterDuke joined
[23:24] *** MasterDuke left
[23:24] *** MasterDuke joined
[23:25] <timotimo> oh lord

[23:25] <timotimo> what exactly did it do?! just hook into every kind of program and turn font sizes up?

