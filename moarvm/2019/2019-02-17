[00:08] <MasterDuke> timotimo: is moarperf integrated into comma at all?

[00:12] <timotimo> no

[00:12] <timotimo> comma has its own profiler stuff :)

[00:12] <MasterDuke> huh, didn't realize that

[00:13] <timotimo> well, only its own profiler UI

[00:13] <timotimo> it uses the sql profiler stuff

[00:14] <MasterDuke> nice

[00:16] <timotimo> it's a bit simpler than what moarperf has, but i'm on the comma team as well :)

[00:16] <jnthn> timotimo: That wasn't actually merged yet, though probably will be next week and in the next release. :)

[00:16] <timotimo> oh!

[00:18] <jnthn> But yeah, there'll be loads of stuff we can do with presenting the performance data alongside the code :)

[00:19] <timotimo> yep!

[00:19] <timotimo> exciting times ahead

[00:24] <MasterDuke> well, just bought comma. don't think i've ever used any jetbrains products before, but i'm looking forward to it

[00:28] <timotimo> it'll hopefully be a good time :)

[00:29] <timotimo> especially looking forward to what other magic stuff comma's gonna get. like integration with Cro

[00:30] <MasterDuke> first question, how do i point it to a non-system perl6?

[00:31] <timotimo> it has a concept of "SDKs"

[00:31] <jnthn> Project Structure dialog, and then New SDK in there

[00:32] <timotimo> oh, i gave the "correct, but completely useless" answer

[00:33] <MasterDuke> well, i tried creating a new project and figured it out (and saw "SDK" in the text, so timotimo's hint did help)

[00:35] <jnthn> Ah, I figured you'd just sailed past that while making a project already :)

[00:36] <MasterDuke> have you guys been using for hacking on rakudo itself?

[00:36] <timotimo> nah, i'm still using vim for that mostly

[00:37] <timotimo> comma doesn't have (a reason to have) support for nqp or nqp-heavy perl6 code

[00:38] <MasterDuke> i would think at least the syntax highlighting would pretty much be the same

[00:38] <timotimo> and i'm still experiencing an oddity in syntax highlighter/parser performance on bigger files

[00:38] <timotimo> even though jnthn had that at one point and fixed it two or more releases ago

[00:42] *** manchicken joined
[00:44] <manchicken> Hello. I just encountered (and _DEFEATED_) a build problem brought on by having mixed Xcode + GNU toolchain on OSX Mojave. As such, I thought it might be a good idea to add a safety to the `Configure.pl` for moarvm to throw out a big warning.

[00:46] <manchicken> That seems like the quick fix. Long-term, I'm wondering if it might be a good idea to try to infer (based on the path or the `--version`) of the compiler and the ar/ranlib to add a self-correcting safety.

[00:46] <manchicken> I know that this is a problem that exists sometimes, but I wanted to make sure I'm not duplicating efforts.

[00:48] <jnthn> A "you probably are going to have a bad time" warning would probably be friendly, if you're able to patch that in.

[00:48] <timotimo> maybe even reference the error message that you're likely to get in that instance

[00:48] <timotimo> so that when you search for it you may stumble upon it, too

[00:49] <timotimo> unfortunately, the error will come at the most amount of output that moarvm's "make" step is capable of

[00:49] <timotimo> so it'd be as far away from Configure.pl's warning message as possible

[00:53] <manchicken> That seems like it'd be a pretty straight-forward patch.

[00:54] <manchicken> Well, I was thinking of having a prompt to continue.

[00:54] <jnthn> timotimo: BTW, will you be at the German Perl Workshop this year?

[00:54] <manchicken> "This isn't going to go well. Would you like to continue anyway? [y|n]"

[00:55] <jnthn> manchicken: Hmm, maybe better would be to exit with non-zero exit code unless there's some --force flag passed or similar

[00:56] <jnthn> A prompt isn't so friendly to anyone scripting stuff

[00:56] <manchicken> Yeah, that's true.

[00:56] <manchicken> Righto.

[00:56] <manchicken> That seems pretty straight-forward.

[01:03] <timotimo> jnthn: oh! i still need to get all of that set up!

[01:03] <jnthn> :)

[01:03] <jnthn> I did my hotel a while back, but booked trains there today

[01:03] <jnthn> Should probably write my talks soon also :)

[01:03] <timotimo> wait, munich?

[01:03] <jnthn> Yeah

[01:03] <timotimo> ... oh yeah

[01:04] <timotimo> somehow i was confusing munich with cologne?!?

[01:04] <jnthn> On the upside, there's a comfy ICE between them if you went to the wrong one :P

[01:05] <timotimo> oh, it'd have been karneval time in köln

[01:05] <timotimo> that's a thing up there

[01:08] <jnthn> I heard about that...in the days before the workshop I'm going to be in Železna Ruda / Bayerisch Eisensteinen for a few days relaxing, and the Localbahnmuseum is open more than usual thanks to karneval. I've no idea if that means it'll also be packed. :)

[01:16] <timotimo> schedule's not yet ready to be seen; not sure if the evening before the 6th would have a meetup

[01:16] <jnthn> Dunno; I'll be arriving sometime in the afternoon of the 5th

[01:26] <timotimo> https://archinect.imgix.net/uploads/ai/aiyrnxjgwzeojp4t.jpg?auto=compress%2Cformat - why don't they have ose of those in munich? :D

[01:32] *** manchicken left
[01:34] *** manchicken joined
[01:35] <manchicken> Apple's making this easy. `grep -b gnu $(which ar)` yields `$? != 0`. Yay.

[01:35] <timotimo> .o( was für ein vergnügen )

[01:38] <MasterDuke> i'm going to be in the uk for roughly the next three years, maybe i'll be able to make it to some european perl6 conferences

[01:46] <jnthn> MasterDuke: PerlCon in Riga in August is probably a good one to go to :)

[01:47] <jnthn> Sleep time for me; 'night o/

[01:47] <MasterDuke> well, not arriving until mid-june, so that might be too soon, but it's certainly attractive

[01:47] <MasterDuke> later...

[01:49] <timotimo> gnite jnthn

[01:54] <timotimo> if the schedule isn't ready to be seen yet, does that mean i can still consider giving a talk? :D

[01:54] <manchicken> @jnthn: I'm not sure I need to implement a `--force`, we already have a `--toolchain=gnu` in the configure. If I see that the basics are GNU-derived, and we didn't get that arg, it seems like we should die then.

[01:58] *** manchicken left
[02:01] *** manchicken joined
[02:22] <manchicken> Weeeee! Submitted PR.

[02:22] <manchicken> I haven't submitted a PR for a few months. Too much work stuff going on.

[02:38] <manchicken> Sweet! Passed my checks. I'd be interested in any feedback anybody had. https://github.com/MoarVM/MoarVM/pull/1055

[03:47] *** manchicken left
[03:53] *** manchicken joined
[03:58] <manchicken> There are a bunch of PRs which are failing tests.

[03:59] <manchicken> Are any of them worth digging in to?

[04:00] <MasterDuke> manchicken: you'd want to check why exactly they're failing. sometimes travis/appveyor just time out downloading/installing required things

[04:02] <manchicken> Yeah; I see one of them (branch `reloc`) is failing due to some non-macOS friendly linker flags.

[04:18] *** Ven`` joined
[04:36] *** manchicken left
[04:37] *** Ven`` left
[08:05] *** robertle joined
[08:54] *** MasterDuke left
[10:04] *** synopsebot left
[10:04] *** dalek joined
[10:04] *** synopsebot joined
[10:04] *** p6lert joined
[10:04] *** Geth joined
[12:16] *** MasterDuke joined
[12:16] *** MasterDuke left
[12:16] *** MasterDuke joined
[12:44] <MasterDuke> timotimo: do we really need this mp_clear? https://github.com/libtom/libtommath/blob/develop/bn_mp_div_d.c#L103

[12:44] <yoleaux> 10:50Z <timotimo> MasterDuke: this seems to be the big integer to string algorithm cpython uses: https://github.com/python/cpython/blob/master/Objects/longobject.c#L1679

[12:48] <timotimo> that's necessary to free the buffer inside the mp_int, isn't it?

[12:49] <MasterDuke> i saw some commentary that suggested those were for security in crypt applications, but maybe we don't care?

[12:50] <timotimo> doesn't mp_init_size have some kind of malloc in it? or is it a macro that uses alloca?

[12:51] <MasterDuke> `XMALLOC(sizeof(mp_digit) * (size_t)size)`

[12:51] <timotimo> what does XMALLOC do, then?

[12:52] <timotimo> is that what we're free to redefine to supply our own memory management?

[12:52] <MasterDuke> https://github.com/libtom/libtommath/blob/develop/tommath_private.h#L39-L52

[12:52] <timotimo> ah, ok

[12:53] <timotimo> so it seems like if you don't mp_clear the q, it'll be leaking that buffer

[12:53] <MasterDuke> mp_clear sets it to zeroes before freeing, we could just free directly instead

[12:54] <MasterDuke> https://github.com/libtom/libtommath/blob/develop/bn_mp_clear.c

[12:58] <MasterDuke> or just remove the setting to zero from mp_clear if we *never* need it

[13:04] <MasterDuke> hm, what do i have to do for edits to 3rdparts/libtommath to be picked up?

[13:05] <timotimo> oh, i see

[13:06] <timotimo> will probably have to commit it inside the submodule and then "git add" and commit the submodule itself inside the moar repo?

[13:07] <MasterDuke> thanks. probably won't be able to experiment right now, but will try later

[13:23] <timotimo> though it'd surprise me if "make" would immediately revert any changes to 3rdparty things

[14:16] *** scovit left
[14:19] *** lucasb joined
[14:33] <MasterDuke> hm, commenting out the setting to zero in mp_clear doesn't seem to have much effect speedwise

[14:38] <MasterDuke> oh, and we're using 1.0 of libtommath, but 1.1 was just released last month https://github.com/libtom/libtommath/blob/v1.1.0/changes.txt

[14:39] <timotimo> ah, yeah

[14:39] <MasterDuke> how do i specify/upgrade to 1.1 to test?

[14:56] <timotimo> you'd go into the libtommath submodule in moarvm's 3rdparty folder, "git pull" or whatever it takes to bring it to the right commit, then go back out and "git add 3rdparty/libtommath" and commit that

[15:22] *** manchicken joined
[15:45] *** Ven`` joined
[16:12] *** scovit joined
[16:14] *** Ven`` left
[16:24] *** manchicken left
[16:25] *** manchicken joined
[16:44] *** manchicken left
[16:50] *** zakharyas joined
[17:39] *** Ven`` joined
[18:32] *** Geth left
[18:32] *** Geth joined
[18:40] <MasterDuke> well, i think i updated to libtommath v1.1.0, and nqp built ok and passed `make m-test` and rakudo built ok and passed `make m-test m-spectest`

[18:40] <MasterDuke> but i didn't rebase, so i assume any custom commits we had on top of v1.0.0 weren't included? in that case maybe they aren't required anymore?

[18:41] <timotimo> some of them probably got replaced by upstream changes

[18:47] *** Geth left
[18:47] *** Geth joined
[18:50] <MasterDuke> i have no idea how to submit this as a PR

[18:54] <timotimo> just pretend that the folder with the changes in it is a single file

[18:57] <MasterDuke> or...........blow away all my changes and create a new issue saying i tested it already...

[18:58] *** Geth left
[18:58] *** Geth joined
[19:09] *** Geth left
[19:09] *** Geth joined
[19:28] *** lucasb left
[19:30] *** Kaiepi joined
[19:49] *** Ven`` left
[19:56] *** Kaypie joined
[19:56] *** Kaiepi left
[21:04] *** Kaypie left
[21:29] *** zakharyas left
[21:59] *** Ven`` joined
[22:55] *** Geth left
[22:56] *** Geth joined
[23:09] *** Ven`` left
