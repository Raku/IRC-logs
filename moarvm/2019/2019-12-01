[00:03] *** patrickb left
[00:13] *** colomon left
[00:29] *** sena_kun left
[01:49] *** colomon joined
[01:51] *** colomon left
[02:23] *** colomon joined
[02:51] *** Kaiepi left
[02:53] *** Kaiepi joined
[02:53] *** Kaiepi left
[02:54] *** Kaiepi joined
[02:55] *** Kaiepi left
[02:56] *** Kaiepi joined
[03:10] *** Kaiepi left
[03:11] *** Kaiepi joined
[06:30] *** Kaiepi left
[06:37] *** Kaiepi joined
[06:37] *** Kaiepi left
[06:38] *** Kaiepi joined
[06:39] *** Kaiepi left
[06:40] *** discord61 joined
[06:40] *** Kaiepi joined
[06:40] *** discord6 left
[06:40] *** discord61 is now known as discord6

[06:55] *** discord6 left
[06:55] *** discord6 joined
[07:13] *** Kaiepi left
[08:07] *** Kaiepi joined
[09:16] *** Kaiepi left
[09:22] *** Kaiepi joined
[09:46] <Geth> Â¦ MoarVM: 47892d379c | (Stefan Seifert)++ | 7 files

[09:46] <Geth> Â¦ MoarVM: Avoid signedness issues by using MVMuint8 in stream decoder

[09:46] <Geth> Â¦ MoarVM:

[09:46] <Geth> Â¦ MoarVM: char may be signed or unsigned depending on compiler and architecture.

[09:46] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/47892d379c

[09:46] <Geth> Â¦ MoarVM: eb3d981d75 | (Stefan Seifert)++ | 2 files

[09:46] <Geth> Â¦ MoarVM: Do not rely on signedness of char in (gb2312|gb18030)_decode

[09:47] <Geth> Â¦ MoarVM:

[09:47] <Geth> Â¦ MoarVM: char may be signed or unsigned depending on compiler and architecture. Use

[09:47] <Geth> Â¦ MoarVM: MVMuint8 internally instead. Fixes compiler warnings on ARM.

[09:47] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/eb3d981d75

[09:48] <nine> With this we consistently use MVMuint8 internally in string processing (encoding and decoding) while we continue to use char * in interfaces.

[09:49] <nine> We were already rather close to that anyway.

[10:06] <dogbert17> nine++

[10:09] <dogbert17> and the failing tests now passes on the RPi 4, yay

[10:22] <nine> If nothing else comes off this work, at least I've learned a lot about C in this endeavour :)

[10:40] <dogbert17> nine: are you done with the cleanup or do you intend to fix even more stuff?

[10:42] <nine> Well for now I'm finally working of fixing my NativeCall screwup.

[10:42] <dogbert17> the one you mentioned the other day

[10:43] <nine> yep

[10:50] *** sena_kun joined
[10:51] <nine> I think I'll add a flag to the NativeCall repr, so the higher layer can indicate whether it's safe to serialize the lib_name. And a similar flag to Distribution::Resource. That way CompUnit::Repository::Staging can prevent the build path from getting serialized.

[10:53] <nine> The cost is having to go through the generic NativeCall wrapper during the BUILD with the Staging repo and during the first call of a native sub of a module loaded from a package.

[10:56] <nine> Initially I thought I thought I could get away with being able to serialize a different lib name than the one used for setup. But a module installed into the Staging repo may get used (and one of its native subs called) during the build of another module in the same repo. In that case it would'nt find its library.

[11:02] *** sena_kun left
[11:16] *** sena_kun joined
[11:58] *** MasterDuke left
[12:23] <dogbert17> nine: wrt the warnings you fixed. Is it your intention to keep the 'extra' compiler options which shows them all or will they be removed now?

[12:30] <nine> Oh keeping those was very much the point of fixing the existing violations

[12:33] <dogbert17> the reason for asking is that the gcc (8.3.0) on the RPi 4 enables -Wunused-variable which in turn leads to a mass of warnings

[12:34] <dogbert17> I guess that the gcc devs changes what the 'extra' options does from time to time

[12:36] <nine> -Wunused-variable seems to be included in -Wall already, which is why I fixed a host of them: https://github.com/MoarVM/MoarVM/commit/758ef58b074c91353634bdecaa2ca202b9fb6c25

[12:37] <nine> Don't know why your gcc would show additional ones though. Could be that they are in code paths that only get compiled on ARM?

[12:38] <dogbert17> aha, so perhaps it's an RPi specific problem, What happens is that the same warning is printed like 100 times, more specifically this one:

[12:38] <dogbert17> src/core/interp.h: In function â€˜MVM_BC_get_N64â€™:

[12:38] <dogbert17> src/core/interp.h:119:27: warning: unused variable â€˜whereâ€™ [-Wunused-variable]

[12:38] <dogbert17>      const MVMuint8 *const where = cur_op + offset;

[12:38] <Geth> Â¦ MoarVM: be5f206c85 | (Stefan Seifert)++ | src/gc/collect.c

[12:38] <Geth> Â¦ MoarVM: Remove bogus debug assertion in the GC's process_worklist

[12:38] <Geth> Â¦ MoarVM:

[12:38] <Geth> Â¦ MoarVM: The assertion checks if a pointer the GC encountered hasn't already been

[12:38] <Geth> Â¦ MoarVM: updated to the object's new location. It was added in the early days and the

[12:38] <Geth> Â¦ MoarVM: author nwc10 doesn't seem to remember the reason behind it.

[12:38] <Geth> Â¦ MoarVM:

[12:38] <Geth> Â¦ MoarVM: In the case in which the assertion would fail, the pointer would just get

[12:38] <Geth> Â¦ MoarVM: <â€¦commit message has 5 more linesâ€¦>

[12:39] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/be5f206c85

[12:39] <nine> dogbert17: ah, of course. The variable is used in code depending on MVM_CAN_UNALIGNED_NUM64 which x86 does but ARM doesn't

[12:39] <nine> So moving it down a line will fix the warnings

[12:40] <nine> Sames is true for MVM_BC_get_I64

[12:41] <dogbert17> it doesn't complain about the last one though

[12:41] <nine> still true

[12:43] <dogbert17> let me give it a try

[12:46] <dogbert17> yes, that change led to a massive improvement

[12:47] <dogbert17> among the ones that are left I see something I missed yesterday

[12:47] <dogbert17> src/strings/ascii.c: In function â€˜MVM_string_ascii_decodeâ€™:

[12:47] <dogbert17> src/strings/ascii.c:18:27: warning: comparison is always true due to limited range of data type [-Wtype-limits]

[12:47] <dogbert17>          else if (ascii[i] >= 0) {

[12:51] <nine> Oh, and I missed that file today. MVM_string_ascii_decode should really use an MVMuint8 internally, like here: https://github.com/MoarVM/MoarVM/blob/master/src/strings/latin1.c#L8

[12:54] <dogbert17> perhaps I should fix that so that you can concentrate on the Nativecall stuff

[12:55] <nine> would be nice :)

[12:55] <dogbert17> :)

[13:02] *** sena_kun left
[13:17] *** sena_kun joined
[13:17] *** sena_kun left
[13:18] <Geth> Â¦ MoarVM: dogbert17++ created pull request #1219: Move incorrectly placed variable declaration which causes a lot of waâ€¦

[13:18] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1219

[13:19] <dogbert17> There's one of them. I only changed MVM_BC_get_N64 as MVM_BC_get_I64 looks legit to me, i.e. 'where' is used in both branches there

[13:20] <nine> Oh, right!

[13:21] <Geth> Â¦ MoarVM: 4924390c76 | (Jan-Olof Hendig)++ | src/core/interp.h

[13:21] <Geth> Â¦ MoarVM: Move incorrectly placed variable declaration which causes a lot of warnings on ARM

[13:21] <Geth> Â¦ MoarVM:

[13:21] <Geth> Â¦ MoarVM: MVM_CAN_UNALIGNED_NUM64 is not used by ARM, it is on x86 though, which in

[13:21] <Geth> Â¦ MoarVM: turn leads to gcc outputting a bucketload of unused-variable warnings on

[13:21] <Geth> Â¦ MoarVM: ARM based systems like e.g. the RPi.

[13:21] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/4924390c76

[13:21] <Geth> Â¦ MoarVM: 47a0beb6d6 | niner++ (committed using GitHub Web editor) | src/core/interp.h

[13:21] <Geth> Â¦ MoarVM: Merge pull request #1219 from dogbert17/fix-warnings-on-ARM

[13:21] <Geth> Â¦ MoarVM:

[13:21] <Geth> Â¦ MoarVM: Move incorrectly placed variable declaration which causes a lot of waâ€¦

[13:21] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/47a0beb6d6

[13:30] *** MasterDuke joined
[13:33] <MasterDuke> these are the warnings i currently see when building moarvm with gcc https://gist.github.com/MasterDuke17/71f16363562f1af4200a047c94a0051b

[13:38] <nine> MasterDuke: well....fix them? :)

[13:41] <MasterDuke> heh, i probably will give it a go later. i also see some when building nqp and rakudo (mostly in the runner code), will ping patzim about them

[13:52] *** domidumont joined
[14:04] <Geth> Â¦ MoarVM: 610e05fa0f | (Stefan Seifert)++ | 2 files

[14:04] <Geth> Â¦ MoarVM: Give upper layers a way to veto serializing a NativeCall's lib_name

[14:04] <Geth> Â¦ MoarVM:

[14:04] <Geth> Â¦ MoarVM: There are cases where we actually don't want the library's path to get

[14:04] <Geth> Â¦ MoarVM: serialized into the bytecode file, e.g. when building a module into a Staging

[14:04] <Geth> Â¦ MoarVM: repository for packaging. Give the upper layer a way to make us aware of that

[14:04] <Geth> Â¦ MoarVM: by having them set the "serialize_lib_name" attribute on the native callsite.

[14:04] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/610e05fa0f

[14:09] *** sena_kun joined
[14:52] *** domidumont left
[15:01] <dogbert17> MasterDuke: btw, there's a possibility that M#1093 has been fixed. Have you had the chance to try it on your system?

[15:01] <synopsebot> M#1093 [open]: https://github.com/MoarVM/MoarVM/issues/1093 SEGV when using Proc::Async

[15:02] *** sena_kun left
[15:13] *** domidumont joined
[15:18] *** sena_kun joined
[15:22] <dogbert17> hmm, I just got two SEGV's while running a spectest

[15:33] * dogbert17 tries to repro ...

[15:36] <nine> Did you get core dumps?

[15:39] <dogbert17> I did, but the first one was overwritten by the second and that one looked messed up

[15:40] <dogbert17> besides, I suspect that I didn't have debug info on

[15:41] <nine> systemd is really great in these cases. I get all my core dumps compressed and named after the executable + timestamp in /var/lib/systemd/coredumps

[15:41] <dogbert17> do you have to do anything specific in order to get that behavior

[15:44] <dogbert17> fwiw, the failing files were t/spec/S07-hyperrace/for.t and t/spec/S32-io/io-cathandle.rakudo.moar

[15:44] <nine> I didn't do anything. May be openSUSE'd defaults. man systemd-coredump should be a good start

[15:45] <dogbert17> will check

[15:52] *** patrickb joined
[16:25] <dogbert17> also, t/spec/S16-io/watch.t is flapping

[16:26] <lizmat> dogbert17: on what OS

[16:26] <lizmat> ?

[16:27] <dogbert17> Linux

[16:27] <lizmat> ok, then I have no idea

[16:27] <lizmat> MacOS sometimes gets sluggish in delivering events when under load

[16:36] <dogbert17> it seems to be the same for me, running a spectest in the background makes the error appear rather quickly

[16:36] <dogbert17> it always claims to have missed one of the 10 events it is looking for

[16:54] <dogbert17> interesting, one of the test files, i.e. t/spec/S29-os/system.t, can actually trigger a core dump without any tests failing

[17:00] *** sena_kun left
[17:11] *** discord6 left
[17:11] *** AlexDaniel left
[17:11] *** vrurg left
[17:11] *** jjatria left
[17:11] *** moon-child left
[17:11] *** jnthn left
[17:11] *** timotimo left
[17:11] *** nwc10 left
[17:11] *** patrickb left
[17:11] *** colomon left
[17:11] *** Geth left
[17:11] *** robertle left
[17:11] *** nebuchadnezzar left
[17:11] *** unicodable6 left
[17:11] *** committable6 left
[17:11] *** kawaii left
[17:11] *** Kaiepi left
[17:11] *** samcv left
[17:11] *** japhb left
[17:11] *** mst left
[17:11] *** leedo left
[17:11] *** TimToady left
[17:11] *** moritz left
[17:11] *** avar left
[17:11] *** Ulti left
[17:11] *** jpf1 left
[17:11] *** domidumont left
[17:11] *** quotable6 left
[17:11] *** bloatable6 left
[17:11] *** benchable6 left
[17:11] *** coverable6 left
[17:11] *** reportable6 left
[17:11] *** greppable6 left
[17:11] *** nativecallable6 left
[17:11] *** statisfiable6 left
[17:11] *** shareable6 left
[17:11] *** squashable6 left
[17:11] *** tellable6 left
[17:11] *** rba left
[17:11] *** synopsebot left
[17:11] *** mtj_ left
[17:11] *** eater left
[17:11] *** krunen left
[17:11] *** MasterDuke left
[17:11] *** lizmat left
[17:11] *** releasable6 left
[17:11] *** notable6 left
[17:11] *** bisectable6 left
[17:11] *** evalable6 left
[17:11] *** DrEeevil left
[17:11] *** ZzZombo left
[17:11] *** AlexDaniel` left
[17:11] *** BinGOs left
[17:11] *** ChanServ left
[17:12] *** patrickb joined
[17:12] *** domidumont joined
[17:12] *** MasterDuke joined
[17:12] *** Kaiepi joined
[17:12] *** discord6 joined
[17:12] *** colomon joined
[17:12] *** AlexDaniel joined
[17:12] *** ZzZombo joined
[17:12] *** Geth joined
[17:12] *** lizmat joined
[17:12] *** vrurg joined
[17:12] *** robertle joined
[17:12] *** quotable6 joined
[17:12] *** releasable6 joined
[17:12] *** notable6 joined
[17:12] *** unicodable6 joined
[17:12] *** bloatable6 joined
[17:12] *** committable6 joined
[17:12] *** benchable6 joined
[17:12] *** coverable6 joined
[17:12] *** bisectable6 joined
[17:12] *** reportable6 joined
[17:12] *** nativecallable6 joined
[17:12] *** greppable6 joined
[17:12] *** statisfiable6 joined
[17:12] *** shareable6 joined
[17:12] *** squashable6 joined
[17:12] *** jjatria joined
[17:12] *** AlexDaniel` joined
[17:12] *** moon-child joined
[17:12] *** nebuchadnezzar joined
[17:12] *** samcv joined
[17:12] *** tellable6 joined
[17:12] *** japhb joined
[17:12] *** evalable6 joined
[17:12] *** mst joined
[17:12] *** jnthn joined
[17:12] *** camelia joined
[17:12] *** harrow joined
[17:12] *** dogbert17 joined
[17:12] *** bartolin joined
[17:12] *** Util joined
[17:12] *** chansen_ joined
[17:12] *** nine joined
[17:12] *** tadzik joined
[17:12] *** hoelzro joined
[17:12] *** tobs joined
[17:12] *** niven.freenode.net sets mode: +o mst

[17:12] *** klapperl joined
[17:12] *** timotimo joined
[17:12] *** nwc10 joined
[17:12] *** mtj_ joined
[17:12] *** leedo joined
[17:12] *** eater joined
[17:12] *** avar joined
[17:12] *** kawaii joined
[17:12] *** TimToady joined
[17:12] *** Ulti joined
[17:12] *** jpf1 joined
[17:12] *** krunen joined
[17:12] *** moritz joined
[17:12] *** ChanServ joined
[17:12] *** BinGOs joined
[17:12] *** DrEeevil joined
[17:12] *** synopsebot joined
[17:12] *** rba joined
[17:12] *** niven.freenode.net sets mode: +o ChanServ

[17:15] *** sena_kun joined
[17:40] *** AlexDaniel left
[17:41] *** AlexDaniel joined
[17:41] *** AlexDaniel left
[17:41] *** AlexDaniel joined
[18:11] *** zakharyas joined
[18:57] *** lucasb joined
[19:00] *** sena_kun left
[19:17] *** sena_kun joined
[20:05] *** zakharyas left
[21:01] *** sena_kun left
[21:05] *** zakharyas joined
[21:10] *** domidumont left
[21:11] *** zakharyas left
[21:16] *** sena_kun joined
[23:01] *** sena_kun left
[23:18] *** sena_kun joined
