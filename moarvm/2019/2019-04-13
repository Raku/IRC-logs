[00:17] *** tbrowder left
[00:49] *** tbrowder joined
[01:14] <MasterDuke> it seems LD_PRELOADing libasan got things to work. however, running the same code i ran under valgrind last night only shows memory leaks in asan

[01:15] <MasterDuke> even -e '' shows a memory leak

[01:16] <MasterDuke> are container_specs ever freed?

[01:19] <MasterDuke> https://gist.github.com/MasterDuke17/de7c683b4f503b03628f14a2a1cb0235

[06:45] *** domidumont joined
[07:11] *** sivoais_ joined
[07:11] *** sivoais left
[07:47] *** purcell joined
[07:49] *** purcell left
[08:43] *** sivoais_ left
[08:43] *** sivoais joined
[09:10] *** brrt joined
[09:51] *** brrt left
[10:53] *** brrt joined
[11:43] *** MasterDuke left
[11:52] *** brrt left
[11:56] <jnthn> .tell MasterDuke Put ASAN_DETECT_LEAKS=0 into the environment. Container specs are process lifetime, and - like anything we're holding on to at process termination - we simply leave them to the OS to free, which is rather faster at it. :)

[11:56] <yoleaux> jnthn: I'll pass your message to MasterDuke.

[12:03] *** MasterDuke joined
[12:03] *** MasterDuke left
[12:03] *** MasterDuke joined
[12:04] <MasterDuke> .

[12:04] <yoleaux> 11:56Z <jnthn> MasterDuke: Put ASAN_DETECT_LEAKS=0 into the environment. Container specs are process lifetime, and - like anything we're holding on to at process termination - we simply leave them to the OS to free, which is rather faster at it. :)

[12:05] <MasterDuke> jnthn: are they freed when --full-cleanup is used?

[12:12] <jnthn> MasterDuke: Maybe

[12:12] <jnthn> (In principle, they should be, but --full-cleanup has only received so much attention :)

[12:17] <MasterDuke> jnthn: https://gist.github.com/MasterDuke17/d481ccee733e5a8bf68d4b47759eb0b6

[12:21] <jnthn> huh, that'd imply spesh_slots is NULL but num_spesh_slots is non-zero...how could that ever happen...

[12:23] <MasterDuke> it isn't happening every time

[12:26] <timotimo> you know, you can use rr to find out when that happens :)

[12:27] <MasterDuke> fwiw, here is the script and input https://gist.github.com/MasterDuke17/074d0da6bf29eaf78a9d9c57745dd191

[12:27] <MasterDuke> timotimo: if i create an rr file can you explore it on your system?

[12:28] <timotimo> hm, not entirely sure; it might actually put everything that gets mmapped (like binaries and libraries) in there too

[12:28] <timotimo> but it's probably better if i do it locally so the debug info lines up with my source code locations?!

[12:29] <MasterDuke> good thing i made the relevant files available then

[12:29] <timotimo> aye

[12:30] <jnthn> MasterDuke: Please create a MoarVM issue, so it doesn't get forgotten

[12:31] <timotimo>     my $proc = Proc::Async.new: '/home/dan/p6/install/bin/perl6-m', '-e', $oneliner;

[12:31] <timotimo> well this surely won't work here :D

[12:32] <MasterDuke> https://github.com/MoarVM/MoarVM/issues/1093 for a start

[12:33] <timotimo> so is it the 9.p6 script that dies that way?

[12:33] <timotimo> or one of the one-liners?

[12:33] <MasterDuke> yeah

[12:33] <MasterDuke> 9.p6

[12:33] <timotimo> how long does it usually take?

[12:34] <timotimo> there it is

[12:35] <MasterDuke> nice

[12:36] <nine> jnthn: any ideas where to start looking greatly appreciated: https://github.com/rakudo/rakudo/issues/2838

[12:38] <nine> My original guess was that it's ye olde "we copy pretty much all available symbols just to make sure into a BEGIN block" issue. But with the env hash not even getting assigned to a variable but subscripted directly instead I'm not so sure.

[13:09] <MasterDuke> .tell samcv i get a warning about non-vectorized code in clang 8.0.0 https://gist.github.com/MasterDuke17/46224e4879af857662e2304c2a71677e

[13:09] <yoleaux> MasterDuke: I'll pass your message to samcv.

[13:18] <jnthn> nine: Yeah, it's odd; I'd expect it's happening out of closure serialization but I don't immediately see how

[13:19] <jnthn> nine: Does it take all of the lines to be commented out or just some of them?

[13:19] <jnthn> And would $dist contain such paths?

[14:24] <nine> jnthn: it's enough to replace nqp::getenvhash<RAKUDO_LOG_PRECOMP> with 0

[14:31] <lizmat> actually, I think it's enough to change the binding to an assignment  :-)

[14:32] <lizmat> I can't find my own environment in installed core libraries anymore after that

[14:36] <nine> Confirmed! What the?

[14:40] <lizmat> sometimes the simplest solutions...  :-)

[14:40] <lizmat> what I did:

[14:40] <lizmat> nuke the install/share/perl6/precomp dir

[14:40] <lizmat> make install

[14:40] <lizmat> check a file in there for the string /Users : there are many of them in there, related to uppercase strings

[14:41] <lizmat> nuke the install/share/perl6/precomp dir

[14:41] <lizmat> change the code to use " instead of :=

[14:41] <lizmat> make install

[14:41] <lizmat> check a file in there for the string /Users : there is only one of them left, not related to uppercase strings

[14:42] <nine> Would still be nice to find out why it broke that way and how to get rid of the underlying issue

[14:42] <lizmat> well, when you bind, you essentially don't copy

[14:42] <nine> But your fix is definitely tremendous help

[14:42] <nine> But the code only bound the single string? Not the whole env hash

[14:43] <lizmat> well, I guess it created a Scalar container ?  not sure what getenvhash does for keys it can't find ?

[14:44] <lizmat> anyways, that was my theory, which seems to work out

[15:07] <dogbert17> the file with oneliners posted by MasterDuke contains lots of nasty stuff

[15:10] <dogbert17> if a process gets killed, because 20s has passed, things sometimes goes horribly wrong

[15:12] <dogbert17> https://gist.github.com/dogbert17/f902f4a8d0c8e1b2958fcdc227eeaa17

[15:16] <dogbert17> hmm, I get the impression that the barfage occurs when the line 'whenever Promise.in(20)' is triggered

[16:38] *** zakharyas joined
[16:48] *** masak left
[16:48] *** jpf1 left
[17:06] *** masak joined
[17:06] *** jpf1 joined
[17:06] *** masak is now known as Guest47580

[17:29] *** Kaiepi left
[17:40] *** lucasb joined
[17:54] *** zakharyas left
[17:54] *** brrt joined
[18:22] *** brrt left
[19:06] *** domidumont left
[21:31] *** Guest47580 is now known as masak

[22:05] *** squashable6 left
[22:10] *** squashable6 joined
[22:29] <Geth> ¦ MoarVM/more-pea: 4579a30a1d | (Jonathan Worthington)++ | src/spesh/pea.c

[22:29] <Geth> ¦ MoarVM/more-pea: Handle some further object read ops in EA

[22:29] <Geth> ¦ MoarVM/more-pea: review: https://github.com/MoarVM/MoarVM/commit/4579a30a1d

[22:35] *** MasterDuke left
[23:12] *** MasterDuke joined
[23:12] *** MasterDuke left
[23:12] *** MasterDuke joined
[23:39] *** lucasb left
[23:57] *** Kaiepi joined
[23:59] *** Kaiepi left
[23:59] *** Kaiepi joined
