[00:15] *** patrickz joined
[00:18] *** patrickb left
[01:22] *** patrickz left
[02:11] <ugexe> MasterDuke: how do i fix https://github.com/MoarVM/MoarVM/pull/1083 ? for instance your comment is on operand 2, but the expression template goes like $1, $2, null, $3 when I expect $1, $2, null, $4 . I tried a few different ways and all of them seemed to work so I dont know what is actually correct

[02:12] <ugexe> s/operand 2/operand 3/

[02:17] <MasterDuke> $1, $2, null, $3 is what i assumed should be used based on https://github.com/MoarVM/MoarVM/blob/master/src/core/interp.c#L5293-L5297

[02:19] <ugexe> so inside graph.c i can just ignore operand 3?

[02:21] <ugexe> or ignore operand 4?

[02:21] <ugexe> i know i still need to set a null inside MVMJitCallArg args

[02:23] <ugexe> but i dont need to get that from anything, i can just do { MVM_JIT_LITERAL_PTR, { 0 } }

[02:23] <MasterDuke> i think i would just ignore ins->operands[3]

[02:25] <ugexe> so does operands[4] end up in $4 (and thus not used) or is put into $3?

[02:27] <ugexe> i feel like im overlooking something very obvious

[02:30] <MasterDuke> decodeconf should only have 3 operands, decoderepconf should have 4

[02:30] <MasterDuke> as i understand it

[02:31] <MasterDuke> they both call the same underlying moarvm function, but decodeconf calls it with a NULL as one of its arguments and decoderepconf calls it with all 4 of its arguments

[02:33] <MasterDuke> i think grabbing 4 operands for decodeconf works because C doesn't bounds check and you're just grapping some random memory, which just happens to not cause any problems

[03:08] <ugexe> that does make sense, good explaination

[03:12] <MasterDuke> oO(grapping? how did i make that typo?)

[06:19] *** robertle left
[06:57] *** nebuchadnezzar joined
[07:12] *** domidumont joined
[07:38] *** domidumont1 joined
[07:41] *** domidumont left
[08:03] *** zakharyas joined
[08:04] *** robertle joined
[08:45] *** domidumont1 left
[10:14] *** domidumont joined
[10:53] *** domidumont1 joined
[10:56] *** domidumont left
[11:48] *** lucasb left
[12:15] *** zakharyas left
[12:46] *** AlexDaniel joined
[12:50] *** yoleaux joined
[12:58] *** domidumont1 left
[13:12] *** domidumont joined
[13:27] *** zakharyas joined
[13:29] *** AlexDaniel left
[13:58] *** robertle left
[14:01] *** robertle joined
[15:03] *** lucasb joined
[16:23] *** domidumont left
[16:42] *** robertle left
[17:31] *** robertle joined
[18:09] *** mgoebel joined
[18:47] *** zakharyas left
[18:50] *** mgoebel left
[18:57] *** domidumont joined
[19:49] *** domidumont left
[22:04] <japhb> Why does 645a70c0d include the lego jit pieces for both backtrace and backtracestrings, but the expr jit template for only backtrace?

[22:09] <ugexe> because there is already exprjit template for backtracestrings

[22:13] <japhb> Ah.

[23:12] *** lucasb left
