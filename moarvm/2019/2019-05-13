[00:10] *** lucasb left
[05:31] *** robertle left
[06:12] *** domidumont joined
[06:52] *** brrt joined
[06:59] <brrt> \o

[07:00] <nwc10> o/

[07:10] *** brrt left
[07:14] *** patrickb joined
[07:41] *** zakharyas joined
[07:49] *** domidumont left
[07:52] *** domidumont joined
[08:20] *** brrt joined
[08:33] *** brrt left
[08:33] *** brrt joined
[09:02] <jnthn> o/

[09:11] <nwc10> \o

[09:22] *** brrt left
[09:33] *** domidumont left
[11:05] <timotimo> o/

[11:05] *** patrickb left
[11:15] *** brrt joined
[11:19] *** zakharyas left
[11:41] <Geth> ¦ MoarVM: ed1ce32f7c | MasterDuke17++ (committed using GitHub Web editor) | 5 files

[11:41] <Geth> ¦ MoarVM: Silence -Wlogical-op-parentheses warnings (#1100)

[11:41] <Geth> ¦ MoarVM:

[11:41] <Geth> ¦ MoarVM: But adding parentheses around some expressions.

[11:41] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ed1ce32f7c

[11:42] *** sena_kun joined
[12:15] *** domidumont joined
[12:20] *** patrickb joined
[13:00] *** sivoais left
[13:01] *** sivoais joined
[13:02] *** Kaiepi left
[13:02] *** zakharyas joined
[13:02] *** Kaiepi joined
[13:33] <MasterDuke> what would be a good default return value for this? https://github.com/MoarVM/MoarVM/blob/master/src/core/interp.c#L83-L99

[13:34] <MasterDuke> clang warns `control may reach end of non-void function [-Wreturn-type]`

[13:35] <timotimo> throw an exception or MVM_panic or whatever

[13:35] <MasterDuke> will that silence the warning?

[13:36] <timotimo> probably?

[13:36] <timotimo> MVM_panic is probably marked NO_RETURN or something

[13:41] *** pamplemousse joined
[13:41] <MasterDuke> yep, MVM_panic silences it

[13:54] *** pamplemousse left
[14:00] <MasterDuke> timotimo: what should be returned here https://github.com/MoarVM/MoarVM/blob/master/src/debug/debugserver.c#L2153-L2198 ?

[14:01] <MasterDuke> 0?

[14:14] *** brrt left
[14:15] *** brrt joined
[14:15] <timotimo> ah, yeah, 0 would be for "no error"

[14:16] <Geth> ¦ MoarVM: MasterDuke17++ created pull request #1102: Silence clang dangling-else & return-type warnings

[14:16] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1102

[14:18] <MasterDuke> timotimo: ^^^ look good?

[14:18] <timotimo> i don't think check_requirements should explode at the end

[14:18] <timotimo> in fact, i think it always reaches the end

[14:18] <timotimo> if things are correct

[14:19] <timotimo> so i think if it reaches the end it's successful

[14:19] <timotimo> but the return value of parse_message_map is ignored; only the argument.parse_fail is used

[14:19] <timotimo> so perhaps they both want to become void functions

[14:22] <MasterDuke> so just run check_requirements at the end, don't return its value?

[14:22] <timotimo> yes, and check_requirements shouldn't panic

[14:23] <MasterDuke> just return 1?

[14:23] <timotimo> yes

[14:24] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/05/13/2019-19-infrastructure-pumpkings/

[14:24] <timotimo> or make it void, too

[14:25] <timotimo> lizmat++

[14:25] * timotimo also AFK

[14:27] <MasterDuke> timotimo: can't make check_requirements and parse_message_map void without also changing a bunch of macros

[14:28] <MasterDuke> e.g., FIELD_FOUND and CHECK have returns in them

[14:51] <brrt> what are some of the low-hanging fruit PRs I can send my mentee?

[14:52] <brrt> eh, issues, not PRs

[14:53] <patrickb> brrt: moar only?

[14:56] <brrt> moar is most interesting, yes

[14:58] <brrt> https://github.com/MoarVM/MoarVM/issues/1068 this one is interesting, I think

[14:58] <jnthn> brrt: Remind me what they'll work on?

[14:58] <Geth> ¦ MoarVM: bdw assigned to pamplemoussecache Issue SEGV when using --full-cleanup https://github.com/MoarVM/MoarVM/issues/1068

[14:58] <Geth> ¦ MoarVM: bdw self-assigned SEGV when using --full-cleanup https://github.com/MoarVM/MoarVM/issues/1068

[14:58] <brrt> jnthn: Linking into semi-native executables

[14:59] <jnthn> ah, neat

[14:59] <brrt> semi-native, because the bytecode will still be MoarVM

[14:59] <brrt> but loadable by the system loader

[14:59] * brrt dinner

[15:00] <jnthn> Well, https://github.com/MoarVM/MoarVM/issues/1046 is probably an easy "get your first commit in" task :)

[15:00] <brrt> or that, yes

[15:01] <MasterDuke> https://github.com/MoarVM/MoarVM/issues/1022 maybe?

[15:05] *** brrt left
[15:22] *** domidumont left
[15:38] *** patrickb left
[15:42] *** pamplemousse joined
[15:44] *** zakharyas left
[16:01] *** brrt joined
[16:12] *** brrt left
[16:14] *** pamplemousse left
[16:22] *** patrickb joined
[17:00] *** robertle joined
[17:18] *** brrt joined
[17:33] *** brrt left
[18:24] <MasterDuke> timotimo: did you see my comments about check_requirements and parse_message_map?

[18:25] <timotimo> changing the "return 0" to "return" in those macros should be absolutely fine

[18:25] <MasterDuke> k, i'll give that a try

[18:25] <timotimo> thank you for taking care of my rubbish code!

[18:25] <timotimo> AFK

[18:33] <MasterDuke> timotimo: src/debug/debugserver.c:2392:13: error: non-void function 'skip_whole_object' should return a value [-Wreturn-type]             CHECK(0, "could not skip object: unhandled type");

[18:34] <MasterDuke> hmm, making skip_whole_object void fixes all those, but now `src/debug/debugserver.c:2336:21: error: invalid argument type 'void' to unary expression                 if (!skip_whole_object(tc, ctx, data)) {`

[19:35] <MasterDuke> huh, p6doc has a bunch of `bailed completely`: popcompsc, settypecache, setmethcache, speshguardtype, param_on_o, ctxouter (some of which i've never seen before)

[19:44] <timotimo> MasterDuke: maybe i can fix all this up, but perhaps it'll be easiest to have check_requirements return 1 on success and just ignore it in the caller

[19:45] <timotimo> for now

[20:37] *** sena_kun left
[20:56] *** brrt joined
[21:20] <brrt> \o

[21:21] <brrt> Kaiepi: I'm thinking of closing this: https://github.com/MoarVM/MoarVM/issues/1091

[21:22] <brrt> I understand the problem on OpenBSD, but I'm not inclined to 'fix' it; the alternative of return-address manipluation by the JIT is really rather annoying, and I'm not convinced I want to take on that tech debt

[21:23] <Kaiepi> i'm alright with that

[21:23] <brrt> If you want, you maybe can research if it could be reasonably implemented with setjmp/longjmp

[21:24] <brrt> (but it's possible that OpenBSD frowns on that, too :-D)

[21:43] <MasterDuke> timotimo: https://github.com/MoarVM/MoarVM/pull/1102 updated

[21:45] <timotimo> OH!

[21:45] <timotimo> github have finally split the "show more context" button into two buttons!

[21:45] <timotimo> one for "expand below section upwards" and one for "expand upper section downwards"

[21:46] <timotimo> looks good!

[21:53] <MasterDuke> cool, gonna merge then

[21:54] <Geth> ¦ MoarVM: 61f0b7e80e | MasterDuke17++ (committed using GitHub Web editor) | 3 files

[21:54] <Geth> ¦ MoarVM: Silence clang dangling-else & return-type warnings (#1102)

[21:54] <Geth> ¦ MoarVM:

[21:54] <Geth> ¦ MoarVM: With this, both clang 8.0.0-3 and gcc 8.3.0 don't show any warnings on my machine.

[21:54] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/61f0b7e80e

[22:00] *** brrt left
[22:47] *** patrickb left
