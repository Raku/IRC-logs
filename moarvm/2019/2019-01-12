[00:50] <MasterDuke> timotimo: when you said "in that case the last breakpoint in the trace script is too early", did you mean the list of breakpoints in the trace script is missing something?

[00:50] <timotimo> yeah, i think so

[00:51] <MasterDuke> ah. i was interpreting it to mean that the breakpoint i was creating manually in gdb in MVM_spesh_candidate_add was wrong

[00:51] <MasterDuke> have any idea what should be added to the script?

[00:51] <timotimo> oh, sorry about that

[00:52] <timotimo> at the very least a breakpoint for when the whole speshing work is done

[00:52] <MasterDuke> no worries, it's pretty clear now, i just wasn't reading clearly

[00:52] <timotimo> but we'll want one as close to the point where it gets put in so we can sensibly "bisect" i guess

[00:53] <MasterDuke> i am kind of surprised i didn't see anything (useful) when i added optimize_plugin

[00:53] <timotimo> you only added "the start" of it, right?

[00:54] <MasterDuke> ?

[00:54] <timotimo> well, the script only uses the function names

[00:54] <timotimo> so what you get is a dump before that function runs

[00:57] <MasterDuke> ah, so i should also add whatever function runs next?

[00:57] <timotimo> yeah

[00:58] <timotimo> i'm not sure if gdb has some kind of syntax for "break on return from the function 'blah'"

[00:58] <timotimo> that would be a suitable candidate, too

[00:58] <timotimo> line numbers on the other hand are a very bad idea :D

[00:59] <MasterDuke> actually bad?

[01:00] <timotimo> yeah

[01:00] <timotimo> when the file changes, you'd have to keep the script up to date

[01:00] <timotimo> uuugh :)

[01:01] <MasterDuke> afk for a bit, but i may hardcode things for this current debugging effort

[01:01] <timotimo> that's fine. maybe the script should just offer another function that lets you add more breakpoints

[01:01] <MasterDuke> since it's taking longer than i thought and i soon wont have quite as much time to devote

[01:34] <MasterDuke> timotimo: hm, i added a breakpoint at the line immediately after optimize_plugin is called. i see a commit for optimize_plugin, but not the newly added breakpoint

[01:49] *** Kaiepi left
[02:00] <MasterDuke> ugh, why is this not working?!?!

[02:01] <Geth> Â¦ MoarVM: 30ab2af3b3 | (Daniel Green)++ | src/jit/graph.c

[02:01] <Geth> Â¦ MoarVM: Add op name to jit "bailed completely" error

[02:01] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/30ab2af3b3

[02:01] <Geth> Â¦ MoarVM: 1ff55bf1cc | MasterDuke17++ (committed using GitHub Web editor) | src/jit/graph.c

[02:01] <Geth> Â¦ MoarVM: Merge pull request #1031 from MasterDuke17/add_op_name_to_jit_bail_error_string

[02:01] <Geth> Â¦ MoarVM:

[02:01] <Geth> Â¦ MoarVM: Add op name to jit "bailed completely" error

[02:01] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/1ff55bf1cc

[02:12] <MasterDuke> huh, the script hangs even if the only two breakpoints i have are optimize_plugin and the line after where it's called

[02:15] <MasterDuke> even weirder, now it finished, but there aren't any commits from the breakpoint after optimize_plugin is called. i guess that means the output didn't change?

[02:17] <timotimo> yeah

[02:17] <timotimo> i do think i enabled "make empty commits"? or maybe i didn't

[02:21] <timotimo> it could very well be that you'd end up with a crapton of empty commits

[02:22] <timotimo> you can put a "--allow-empty" in the commandline for "git commit" in the trace script

[02:24] <MasterDuke> hm, i'll give that a try

[02:25] <MasterDuke> ah, now there is a commit for the next line, but yes, it's empty

[02:26] <timotimo> OK

[02:26] <timotimo> "no changes", then

[02:27] <MasterDuke> heh, still no idea why the speshresolve doesn't show up. there are some in other BBs, but it never appears in the BB i care about

[02:28] <timotimo> oh

[02:28] <timotimo> the numbers change around a few times

[02:29] <MasterDuke> it seems to be very consistent

[02:29] <timotimo> no i mean

[02:29] <timotimo> from start to end of one spesh run

[02:29] <timotimo> the BBs get renumbered

[02:29] <timotimo> the addresses in the parenthesis stay the same

[02:29] <timotimo> but sometimes BBs get deleted, split, merged, etc

[02:29] <MasterDuke> hm. afk for a bit, i'll see if i can see that happening when i get back

[02:48] *** lizmat left
[03:07] *** Kaiepi joined
[03:08] *** p6bannerbot sets mode: +v Kaiepi

[03:27] *** Kaiepi left
[03:27] *** Kaiepi joined
[03:28] *** p6bannerbot sets mode: +v Kaiepi

[03:31] *** Kaypie joined
[03:31] *** Kaiepi left
[03:32] *** p6bannerbot sets mode: +v Kaypie

[05:26] *** undersightable6 left
[05:26] *** quotable6 left
[05:26] *** quotable6 joined
[05:26] *** undersightable6 joined
[05:26] *** MasterDuke left
[05:27] *** p6bannerbot sets mode: +v quotable6

[05:27] *** p6bannerbot sets mode: +v undersightable6

[07:42] *** reportable6 left
[07:42] *** coverable6 left
[07:43] *** coverable6 joined
[07:43] *** reportable6 joined
[07:43] *** p6bannerbot sets mode: +v coverable6

[07:43] *** p6bannerbot sets mode: +v reportable6

[08:47] *** coverable6 left
[08:47] *** reportable6 left
[08:48] *** reportable6 joined
[08:48] *** coverable6 joined
[08:48] *** p6bannerbot sets mode: +v reportable6

[08:48] *** p6bannerbot sets mode: +v coverable6

[09:34] *** robertle joined
[09:35] *** p6bannerbot sets mode: +v robertle

[10:06] *** Kaypie left
[10:06] *** Merfont joined
[10:07] *** p6bannerbot sets mode: +v Merfont

[10:31] *** domidumont joined
[10:32] *** p6bannerbot sets mode: +v domidumont

[10:32] <Geth> Â¦ MoarVM: pmurias++ created pull request #1033: Trim array returned by nqp::decodelocaltime

[10:32] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1033

[12:08] *** lizmat joined
[12:08] *** p6bannerbot sets mode: +v lizmat

[12:09] *** pmurias joined
[12:09] *** p6bannerbot sets mode: +v pmurias

[12:48] *** lucasb joined
[12:48] *** p6bannerbot sets mode: +v lucasb

[13:02] *** zakharyas joined
[13:03] *** p6bannerbot sets mode: +v zakharyas

[14:27] *** evalable6 left
[14:29] *** evalable6 joined
[14:30] *** p6bannerbot sets mode: +v evalable6

[14:45] *** zakharyas left
[15:00] *** Ven`` joined
[15:01] *** p6bannerbot sets mode: +v Ven``

[15:04] *** lizmat left
[15:08] *** Ven`` left
[15:54] <nine> How comes that when precompiling Inline::Perl5::Parent (and only that) serialize_repossessions finds a reference to CompUnit::Repository::Staging's serialization context and even weirder through Perl6::Grammar's methods?

[17:25] *** zakharyas joined
[17:26] *** p6bannerbot sets mode: +v zakharyas

[18:07] *** lucasb left
[18:39] *** zakharyas left
[18:54] *** Ven`` joined
[18:55] *** p6bannerbot sets mode: +v Ven``

[19:38] *** zakharyas joined
[19:39] *** p6bannerbot sets mode: +v zakharyas

[19:41] *** Kaiepi joined
[19:41] *** Merfont left
[19:42] *** p6bannerbot sets mode: +v Kaiepi

[19:44] *** domidumont left
[20:08] *** Kaiepi left
[20:11] *** Kaiepi joined
[20:12] *** p6bannerbot sets mode: +v Kaiepi

[21:17] *** lizmat joined
[21:17] *** p6bannerbot sets mode: +v lizmat

[21:32] *** zakharyas left
[21:33] *** zakharyas joined
[21:34] *** p6bannerbot sets mode: +v zakharyas

[21:50] *** pmurias left
[21:56] *** pmurias joined
[21:56] *** p6bannerbot sets mode: +v pmurias

[22:49] *** zakharyas left
[23:05] *** pmurias left
[23:20] *** Kaiepi left
[23:21] *** Kaiepi joined
[23:21] *** p6bannerbot sets mode: +v Kaiepi

[23:34] *** Kaypie joined
[23:34] *** Kaiepi left
[23:34] *** p6bannerbot sets mode: +v Kaypie

