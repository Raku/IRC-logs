[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:09] *** Kaiepi left
[00:09] *** leedo left
[00:10] *** leedo joined
[00:10] *** Kaypie joined
[01:13] *** evalable6 left
[01:14] *** AlexDaniel left
[04:45] *** AlexDaniel joined
[04:47] *** chloekek joined
[04:48] *** AlexDaniel left
[04:49] *** AlexDaniel joined
[05:07] *** AlexDaniel left
[05:12] *** lizmat left
[05:30] *** chloekek left
[05:34] *** squashable6 left
[05:36] *** squashable6 joined
[05:52] *** AlexDaniel joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:09] *** AlexDaniel left
[06:22] *** AlexDaniel joined
[06:42] *** AlexDaniel left
[06:43] *** AlexDaniel joined
[07:33] *** lizmat joined
[07:34] *** lizmat left
[07:53] *** zakharyas joined
[08:01] *** AlexDaniel left
[08:14] *** AlexDaniel joined
[08:20] *** AlexDaniel left
[09:04] *** lizmat joined
[09:25] *** lizmat left
[09:31] *** AlexDaniel joined
[09:36] *** AlexDaniel left
[11:01] <Guest37021> timotimo: did rr solve yesterdays heap profile problem?

[11:29] *** pamplemousse joined
[11:39] *** zakharyas left
[11:55] <timotimo> Guest37021: it will, i didn't finish the work yet and then while i was trying to do something "for fun" stumbled upon another bug i recently put into rakudo

[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:11] *** pamplemousse left
[12:35] <Guest37021> so you got a bonus bug then :)

[12:36] <timotimo> yeah

[12:36] <timotimo> thankfully that bug i mentioned hasn't gotten into the recent release

[12:36] <timotimo> but also, there isn't a test that catches it, which is not so good

[12:36] * jnthn survived his workshop and first talk :)

[12:36] <timotimo> yay

[12:37] <jnthn> Though still pretty tired and ear-achey

[12:37] <timotimo> i'm still watching your talk, since i got up a little too late; using youtube's DVR-like feature

[12:37] <jnthn> Will be next week before I really get to look much at things here.

[12:43] <Guest37021> how does this DVR feature work?

[12:45] <timotimo> *shruuuuug*

[12:45] <timotimo> they just immediately store the streamed video on top of livestreaming it to people?

[12:46] <Guest37021> I figured it out

[12:46] <Guest37021> it was super difficult :-)

[12:46] <timotimo> oh

[12:46] <timotimo> that's what you mean

[12:47] <Guest37021> I was wathching the talk but then someone wanted to get ice cream

[12:48] <Guest37021> I also managed to find a fromspace for Nine

[12:48] <Guest37021> *fromspace error

[12:49] <Guest37021> perhaps it's the last one

[12:55] *** lucasb joined
[13:27] <timotimo> perhaps using nine's patches to poison the fromspace and turning on the different profiling options we have will find another thing or two

[13:32] <Guest37021> perhaps I should try his stuff out

[13:34] <Guest37021> timotimo: so how will you stop spesh during GC if that's your plan?

[13:40] *** zakharyas joined
[13:41] <timotimo> it's supposed to already be stopped during GC

[13:41] <timotimo> actually, it's the other way around

[13:42] <timotimo> GC is stopped until spesh joins in, and spesh shouldn't be able to resume work until GC is done

[13:42] <Guest37021> and what says that a GC is done?

[13:42] <timotimo> orchestrate.c has that

[13:43] <timotimo> a combination of atomic variables and condition variables

[13:48] <Guest37021> is it possible that https://github.com/MoarVM/MoarVM/blob/master/src/gc/orchestrate.c#L264 is placed too far down in finish_gc() ?

[13:53] <discord6> <timotimo> Oh, hmm

[13:54] *** anagura joined
[13:54] *** anagura left
[13:55] *** anagura joined
[13:56] <discord6> <timotimo> Can you try moving that up a little?

[13:57] <Guest37021> do you have any specific line in mind?

[13:59] <Guest37021> around line 194 perhaps?

[14:00] <discord6> <timotimo> I wonder if before the fixed size safe point is okay

[14:03] <Guest37021> that would be around line 184 then

[14:07] <timotimo> is anatofuz here?

[14:08] <timotimo> anagura, that you?

[14:09] <anagura> timotimo Yes, I'm anagura (a.k.a. AnaTofuZ )

[14:09] <anagura> (Real name is Takahiro Shimizu)

[14:09] <timotimo> hi

[14:10] <timotimo> I'm on my phone to now which makes typing a little more difficult but I can still answers your questions

[14:10] <timotimo> just with some typos from autocorrect

[14:13] *** pamplemousse joined
[14:13] <anagura> Thaks!

[14:13] <anagura> Jonathan talked about dynamic optimization with MoarVM. I want to know that he was logging (probably) the calling method.

[14:14] <anagura> (I'm sorry because I'm not good at English)

[14:17] <anagura> I read interp.c, but I think that this features not implementation in this c source code..?

[14:17] <timotimo> interp.c puts data into logs at different points

[14:18] <timotimo> I believe some other places that do that are everywhere in the code

[14:19] <timotimo> https://github.com/MoarVM/MoarVM/blob/master/src/spesh/log.h the functions at the bottom here are the ones you should search for on the code

[14:20] <anagura> Thank you!! I try read this implementation using lldb!

[14:23] <timotimo> good luck! I did not use lldb yet, I do all my c debugging with gdb

[14:23] <timotimo> sometimes ddd

[14:23] <anagura> ddd?

[14:24] <anagura> I often use lldb, Because I use mac os...! ( when use linux, I use gdb)

[14:25] <moritz> ddd = data display debugger, visual frontend for gdb that shows some more data without you having to poke everything

[14:26] <anagura> I did not know that. Thank you

[14:26] <timotimo> the spesh log functions are designed to be as fast as possible do all of the real work happens in the spesh worker

[14:26] <timotimo> the threads running bytecode want to have add little overhead from logging add possible

[14:27] <timotimo> worker.c is the spesh thread

[14:27] <timotimo> it waits for a complete log to arrive and analyzes it and optimizes the byte code a everything

[14:31] <anagura> MoarVM is rewriting bytecode, isn't it?

[14:32] <anagura> I'm so excited ... !!! (wow funny)

[14:32] <timotimo> it adds new versions to the old ones

[14:32] <timotimo> the original is kept

[14:32] <anagura> Ohhhhh!!! I see!!

[14:33] <timotimo> hey Guest37021 can you run a small program and gist the spesh log?

[14:35] <Guest37021> sure

[14:36] <timotimo> anagura: the spesh log gives a lot of insight into how spesh operates

[14:38] <anagura> OK , I will try look spesh log.

[14:38] <timotimo> it should arrive shortly

[14:42] <discord6> <timotimo> I should mention that what I call spesh log there is what SRC/spesh/dump.c creates

[14:43] <discord6> <timotimo> But you activate it with the environment variable MVM_SPESH_LOG

[14:44] <discord6> <timotimo> Btw anagura you can also chat here with discord if you have that already

[14:53] <anagura> Now, I try  install latest Perl6 ( execute z init )

[14:53] <timotimo> oh z script?

[14:53] <timotimo> cool

[14:55] <Guest37021> the smallest spesh log you can get seems to be over 1 meg in size

[14:55] <timotimo> ha, oops

[14:55] <timotimo> maybe bad for gist's web interfacw

[14:55] <timotimo> but can you post the "raw" url?

[14:55] <Guest37021> I tried perl6 -e ''

[14:56] <timotimo> that can be curl'd or even opened in the browser

[14:56] <timotimo> yeah the spesh log includes lots of stuff from the compiler

[14:56] <Guest37021> are you even allowed to post files of that size

[14:56] <timotimo> probably

[14:57] <Guest37021> 3200 lines :)

[14:57] *** anagura left
[14:57] <Guest37021> 32k lines I mean

[14:58] <discord6> <timotimo> It surely compresses well

[14:59] <Guest37021> can I post a binary as a gist

[15:00] <discord6> <timotimo> Using got, probwbly

[15:06] <discord6> <timotimo> Got clone, got add, got commit, got pish

[15:06] <discord6> <timotimo> Autocorrect, go!

[15:12] <Guest37021> timotimo: https://gist.githubusercontent.com/dogbert17/04ee77f9e84d7d07805b995996fabe0a/raw/b96cfec16a8950cb4618f66f76645a7654075803/gistfile1.txt

[15:13] <timotimo> oh no, anagura left :(

[15:16] <timotimo> haha

[15:16] <timotimo> that spesh log only contains a single frame being specialized

[15:17] <timotimo> and another had its "before" state dumped when the process shut down

[16:09] *** pamplemousse left
[16:20] *** brrt joined
[16:51] <brrt> \o

[16:52] *** chloekek joined
[16:52] <timotimo> o/

[17:21] *** AlexDaniel joined
[17:24] *** AlexDani` joined
[17:26] *** AlexDaniel left
[17:26] *** AlexDani` is now known as AlexDaniel

[17:26] *** AlexDaniel left
[17:26] *** AlexDaniel joined
[17:41] *** Kaypie is now known as Kaiepi

[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:06] <Geth> ¦ MoarVM: d189b29bc3 | (Ben Davies)++ | 11 files

[18:06] <Geth> ¦ MoarVM: Make socket family handling portable

[18:06] <Geth> ¦ MoarVM:

[18:06] <Geth> ¦ MoarVM: MVM_io_resolve_host_name assumes a 64-bit system where the values of the

[18:06] <Geth> ¦ MoarVM: AF constants are the same as those on Linux. This breaks domain name

[18:06] <Geth> ¦ MoarVM: resolution on OSes where the values of AF constants aren't the same as

[18:06] <Geth> ¦ MoarVM: Linux's, such as FreeBSD. In addition, Rakudo never set the family to

[18:06] <Geth> ¦ MoarVM: the upper bits of the port passed to the function, meaning that its

[18:06] <Geth> ¦ MoarVM: <…commit message has 8 more lines…>

[18:06] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d189b29bc3

[18:06] <Geth> ¦ MoarVM: 352ae27e4c | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | 11 files

[18:06] <Geth> ¦ MoarVM: Merge pull request #1126 from Kaiepi/portable-socket-families

[18:06] <Geth> ¦ MoarVM:

[18:06] <Geth> ¦ MoarVM: [IP6NS Grant] Make socket family handling portable

[18:06] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/352ae27e4c

[18:21] <dogbert17> timotimo: moving the calls to MVM_profile_dump_instrumented_data(tc) and MVM_profile_heap_take_snapshot(tc) from lines 263-4 to https://github.com/MoarVM/MoarVM/blob/master/src/gc/orchestrate.c#L184 seems to help

[18:28] <Kaiepi> i'm gonna try to refactor the entirety of src/io/asyncsocketudp.c out of existence for my networking grant at some point so async unix sockets don't triplicate code once i implement them

[18:29] <Kaiepi> that's not gonna be happening for a while, though. at least two months

[18:32] *** zakharyas left
[18:51] *** AlexDaniel left
[18:53] *** brrt left
[19:00] *** lizmat joined
[19:08] <ugexe> why not do it outside of your grant?

[19:08] <ugexe> by adding scope to your grant you make it harder for yourself to deliver everything you claimed

[19:08] <ugexe> if you don't add the scope to your grant (and just do it) your grant is still the same size, but you don't lose out if you don't hit your targets

[19:29] *** camelia left
[19:32] *** camelia joined
[19:37] *** vesper11 left
[19:42] *** pamplemousse joined
[19:42] *** MasterDuke joined
[20:26] *** chloekek left
[20:40] *** AlexDani` joined
[20:41] *** AlexDani` is now known as AlexDaniel

[20:41] *** AlexDaniel left
[20:41] *** AlexDaniel joined
[20:49] *** pamplemousse left
[20:59] *** AlexDaniel left
[21:09] *** vesper11 joined
[21:10] *** brrt joined
[21:19] *** MasterDuke left
[21:29] *** AlexDaniel joined
[21:31] *** pamplemousse joined
[21:32] <brrt> \o

[21:33] <pamplemousse> o/

[21:34] <brrt> pamplemousse: are you still stuck?

[21:38] <timotimo> .o( thunderstuck! )

[21:39] <pamplemousse> I am substantially less stuck than before. There was an issue with how I was saving the module files, which was causing some trouble, but I've fixed that. I've been following up on what ugexe said about approaching the modules issues: https://colabti.org/irclogger/irclogger_log/moarvm?date=2019-08-06#l51

[21:40] <pamplemousse> But as far as I can tell, I think I am actually zipping up all the necessary dependencies now, which is good.

[21:40] <brrt> yay

[21:40] <brrt> :-)

[21:45] *** AlexDaniel left
[22:03] <Kaiepi> ugexe, that may be a better idea. i'm already making a lot of changes for the time i gave myself as it is

[22:16] *** AlexDaniel joined
[22:55] *** brrt left
[23:48] *** pamplemousse left
[23:52] *** lucasb left
