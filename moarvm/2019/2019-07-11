[02:24] *** squashable6 left
[02:29] *** squashable6 joined
[07:08] *** patrickb joined
[07:12] *** robertle joined
[07:20] *** domidumont joined
[07:47] *** zakharyas joined
[08:21] *** domidumont left
[08:21] *** domidumont joined
[08:45] <Geth> ¦ MoarVM: Kaiepi++ created pull request #1137: Implement NativeCall wide string support

[08:45] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1137

[09:54] *** domidumont left
[10:30] *** sena_kun joined
[11:04] *** brrt joined
[11:04] <brrt> \o

[11:06] <nwc10> o/

[11:23] *** zakharyas left
[11:45] *** brrt left
[12:06] *** domidumont joined
[12:21] *** domidumont left
[12:54] *** zakharyas joined
[12:54] *** squashable6 left
[12:56] *** squashable6 joined
[12:57] <Kaiepi> to decode a wchar_t array to an MVMString on windows, is this all i need to do? they're just utf16 strings http://fpaste.scsys.co.uk/585289

[12:57] *** lucasb joined
[12:57] *** domidumont joined
[12:58] <jnthn> Kaiepi: It's not a very efficient way, and the & with WCHAR_MAX looks a little strange to me

[12:59] <jnthn> Oh, and...

[12:59] <jnthn> If it's utf16 you need to handle surrogate paris

[13:00] <jnthn> But if that's what it is then just use the exising UTF-16 decoder?

[13:00] <Kaiepi> wchar_t is an unsigned short on windows, so i can't use it

[13:00] <Kaiepi> brb

[13:17] <Kaiepi> back

[13:17] *** domidumont left
[13:18] <Kaiepi> i mean i could use the existing utf16 decoder if i split the shorts into chars but that seems less efficient than it should be

[13:22] <Kaiepi> how would you handle this jnthn?

[13:24] <Kaiepi> would copying the code from MVM_string_utf16_decode_main but making it work with shorts instead of chars work better?

[13:25] <jnthn> But the UTF16 decoder surely works with 2-byte things (e.g. short)?

[13:25] <timotimo> does it require more than just a cast to go from char to short or vice versa?

[13:25] <jnthn> So just...what timotimo said

[13:26] <Kaiepi> you can cast from unsigned short * to char * like that?

[13:26] <jnthn> Sure, it's C ;)

[13:28] *** dogbert17 joined
[13:28] <Kaiepi> that's convenient

[13:34] <timotimo> surely if you had written code to "convert" from unsigned short* to char* the c compiler would have turned that into a call to memcpy

[13:44] *** pamplemousse joined
[13:51] *** domidumont joined
[13:56] *** domidumont left
[13:57] <pamplemousse> \o

[13:58] *** domidumont joined
[13:59] *** domidumont left
[14:01] <patrickb> o/

[14:10] <nwc10> \o

[14:12] *** domidumont joined
[14:15] *** domidumont1 joined
[14:16] * dogbert17 is hoping for some cool merges now that the MoarVM release is done

[14:18] *** domidumont left
[14:25] *** domidumont joined
[14:28] *** domidumont1 left
[14:41] <pamplemousse> I was wondering if someone could point me to where I could find definitions for the internal errors thrown by MoarVM. I'm hitting an error "Cannot invoke object (REPR: Null; VMNull)" and am not sure what that means

[14:42] <timotimo> something's trying to do an invoke_o op on a high-level null

[14:42] <timotimo> high-level nulls are what we introduced so that operations give meaningful errors instead of segfaulting due to null pointer dereference

[14:46] <pamplemousse> By it being passed a high-level null, does that mean it's not being passed something it should be?

[14:47] <timotimo> right

[14:47] <timotimo> many operations can return a VMNull, you'd want to find out where it comes from

[14:48] <timotimo> you should be able to breakpoint where it does MVM_exception_throw_adhoc for that error, then continue with MVM_dump_bytecode(tc) and MVM_dump_backtrace(tc) and such

[14:48] <timotimo> though with a debugger able to step backwards it'd surely be easier to figure out; you can try out rr for that purpose

[14:58] <pamplemousse> Thank you! I found the issue

[15:00] *** domidumont left
[15:05] *** robertle left
[15:10] *** pamplemousse left
[15:10] *** pamplemousse joined
[15:13] *** domidumont joined
[15:17] *** pamplemousse left
[15:22] *** domidumont1 joined
[15:23] *** domidumont1 left
[15:24] *** domidumont1 joined
[15:25] *** domidumont left
[15:34] *** patrickb left
[15:34] *** pamplemousse joined
[15:46] *** MasterDuke joined
[15:47] *** zakharyas left
[16:05] *** domidumont1 left
[16:06] *** pamplemousse left
[16:10] *** pamplemousse joined
[16:13] *** pamplemousse2 joined
[16:13] *** brrt joined
[16:18] *** pamplemousse left
[16:21] *** brrt left
[16:43] *** robertle joined
[16:58] *** pamplemousse2 left
[17:36] <Geth> ¦ MoarVM: 9f679f3234 | (Daniel Green)++ | 2 files

[17:36] <Geth> ¦ MoarVM: Jit and add a template for smrt_intify

[17:36] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9f679f3234

[17:36] <Geth> ¦ MoarVM: 5d8095b8d9 | (Daniel Green)++ | src/spesh/optimize.c

[17:36] <Geth> ¦ MoarVM: Spesh optimize smrt_intify like smrt_(num|str)ify

[17:36] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/5d8095b8d9

[17:36] <Geth> ¦ MoarVM: 06dd9c0d59 | MasterDuke17++ (committed using GitHub Web editor) | 3 files

[17:36] <Geth> ¦ MoarVM: Merge pull request #1133 from MasterDuke17/jit_and_spesh_optimize_smrt_intify

[17:36] <Geth> ¦ MoarVM:

[17:36] <Geth> ¦ MoarVM: Jit and spesh optimize smrt_intify

[17:36] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/06dd9c0d59

[17:37] <Geth> ¦ MoarVM: e5321a3662 | (Daniel Green)++ | 5 files

[17:37] <Geth> ¦ MoarVM: Jit captureposarg_n

[17:37] <Geth> ¦ MoarVM:

[17:37] <Geth> ¦ MoarVM: Also change MVM_args_get_pos_num into MVM_args_get_required_pos_num and

[17:37] <Geth> ¦ MoarVM: MVM_args_get_optional_pos_num to match the implementations for the other

[17:37] <Geth> ¦ MoarVM: types.

[17:37] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e5321a3662

[17:37] <Geth> ¦ MoarVM: defe0a959b | MasterDuke17++ (committed using GitHub Web editor) | 5 files

[17:37] <Geth> ¦ MoarVM: Merge pull request #1136 from MasterDuke17/jit_captureposarg_n

[17:37] <Geth> ¦ MoarVM:

[17:37] <Geth> ¦ MoarVM: Jit captureposarg_n

[17:37] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/defe0a959b

[17:56] *** brrt joined
[18:01] *** brrt` joined
[18:02] *** brrt left
[18:27] *** brrt` left
[19:25] *** brrt` joined
[19:56] *** Kaiepi left
[20:24] <brrt`> good *

[20:24] *** brrt` is now known as brrt

[20:26] *** squashable6 left
[20:29] *** squashable6 joined
[21:15] *** MasterDuke left
[21:18] *** Kaiepi joined
[21:24] *** MasterDuke joined
[21:55] *** Kaiepi left
[22:01] <jnthn> o/

[22:07] <brrt> \o

[22:12] <timotimo> o/

[22:12] <timotimo> i have angered my btrfs root filesystem

[22:12] <timotimo> the irc channel has been hugely supportive, though

[22:16] *** Kaiepi joined
[22:34] *** brrt left
[22:37] <MasterDuke> any idea why a profile would show https://github.com/rakudo/rakudo/blob/master/src/core/IterationBuffer.pm6#L20 as being entirely non-jitted? but the spesh log only has 3 'bailed completely', and none are in that method

[22:58] *** Kaiepi left
[23:24] *** Kaiepi joined
[23:26] *** lucasb left
[23:42] *** sena_kun left
