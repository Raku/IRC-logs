[00:33] *** lucasb left
[01:27] *** lizmat_ joined
[01:30] *** lizmat left
[02:19] *** lizmat joined
[02:22] *** lizmat_ left
[02:22] *** Kaiepi left
[03:27] *** AlexDani` joined
[03:29] *** AlexDaniel left
[04:20] *** Kaiepi joined
[04:26] *** lizmat left
[05:23] *** MasterDuke left
[06:11] *** Kaiepi left
[06:12] *** Kaiepi joined
[06:42] *** AlexDani` is now known as AlexDaniel

[06:53] *** hoelzro_ joined
[06:57] *** hoelzro left
[06:57] *** synopsebot left
[07:57] *** zakharyas joined
[08:41] *** lizmat joined
[08:53] *** lizmat left
[09:15] *** zakharyas left
[12:05] *** lucasb joined
[12:32] *** lucasb left
[12:32] *** lucasb joined
[12:44] *** AlexDaniel left
[13:33] *** AlexDaniel joined
[13:38] *** andrzejku joined
[13:38] <andrzejku> hello

[13:38] <andrzejku> I back with the same question 'load_setting' on a null object

[13:38] <andrzejku> how can I inspect that bug?

[13:42] <andrzejku> https://github.com/perl6/nqp/blob/50bb7de4da1e90907f42fa86ee68884e79c71811/src/vm/moar/ModuleLoader.nqp

[13:54] <timotimo> what did you do to provoke the bug? :)

[13:55] <timotimo> that's the implementation of load_setting, but it isn't called, because the ModuleLoader object (or whatever else) is undefined at the place it's trying to call that module

[13:55] <timotimo> have you tried --ll-exception yet to get a fuller backtrace?

[13:58] <andrzejku> timotimo, wait I will try

[14:00] <andrzejku> I build my own package and after installing I get that error

[14:00] <andrzejku> Unhandled exception: Cannot call method 'load_setting' on a null object

[14:00] <andrzejku>    at <unknown>:1  (/usr/lib64/perl6/runtime/ModuleLoader.moarvm:<dependencies+deserialize>)

[14:00] <andrzejku>  from <unknown>:1  (/usr/lib64/perl6/runtime/perl6.moarvm:<dependencies+deserialize>)

[14:02] <andrzejku> got the newest version 2019.03

[14:06] <timotimo> have you tried nuking the install directory and reinstalling?

[14:10] <andrzejku> nuking?

[14:11] <andrzejku> I have one idea

[14:11] <andrzejku> wait :D

[14:13] <andrzejku> as I understand those nqp files they are generated to kind of binary moarvm file which is interpreted by vm

[14:13] <andrzejku> and they are loaded in sequence somewhere

[14:14] <andrzejku> that's the base of language

[14:15] <andrzejku> timotimo, xD

[14:16] <andrzejku> timotimo, > say "hello, world"

[14:16] <andrzejku> hello, world

[14:16] <andrzejku> it is working

[16:33] *** domidumont joined
[16:48] *** andrzejku left
[16:51] *** MasterDuke joined
[16:51] *** MasterDuke left
[16:51] *** MasterDuke joined
[17:05] *** andrzejku joined
[17:42] *** andrzejku left
[17:46] *** andrzejku joined
[18:31] *** AlexDaniel left
[18:37] *** andrzejku left
[18:41] *** lizmat joined
[19:53] *** domidumont left
[20:03] *** lucasb left
[20:14] *** AlexDaniel joined
[20:19] *** AlexDaniel left
[21:09] *** AlexDaniel joined
[21:22] *** AlexDaniel left
[21:35] <timotimo> MasterDuke: would you like to look at the heap snapshot format that i came up with by looking at one of the files and trying to figure it out? %)

[21:37] <timotimo> actually it's currently not working right i think?

[21:37] <MasterDuke> is there some sort of specific feedback you're looking for?

[21:38] <MasterDuke> i haven't used the heap profiler recently, you think it's broken right now?

[21:39] <timotimo> it is not

[21:39] <timotimo> the files are just way too big

[21:40] <timotimo> and the format reading code is a bit too complex for my tastes

[22:05] <timotimo> i was silently dropping some exceptions, that caused the output to not be quite correct

[22:10] <timotimo> MasterDuke: http://hack.p6c.org/~timo/bloop.mvmheap

[22:10] <timotimo> check it out

[22:13] <timotimo> the main concern so far has been the framing data format

[22:16] <timotimo> total   compressed size 7123.40332 KiB

[22:16] <timotimo> total uncompressed size 123252.400391 KiB

[22:16] <timotimo> that seems rather worth a lot

[22:23] <timotimo> i think it's still wrong somewhere

[22:23] <timotimo> only the new format, of course

[22:36] <timotimo> i'll tweak the offsets a bit ...

[22:38] <MasterDuke> current moarperf can read it?

[22:39] <timotimo> not at all

[22:39] <MasterDuke> ah. current heap analyzer?

[22:40] <timotimo> nope

[22:40] <timotimo> it's not even written by moar itself :D

[22:41] *** Kaiepi left
[22:41] <MasterDuke> ah, we have some artisinal, bespoke heap snapshots then...

[22:42] <timotimo> at the moment moarvm is hacked to spit out all the values to gzipped files in /tmp

[22:42] <timotimo> and my tool takes them and spits out the new format

[22:43] <timotimo> the next step will be to implement the reading of the format and writing the "one gzipped file per kind of data" to /tmp in perl6 so i can compare if it's correct

[22:43] <timotimo> and then the writing part gets ported to C

[22:44] <timotimo> did you have a look at it in a hex editor?

[22:45] <MasterDuke> it's opened in one, but my daughter wants to watch videos of dogs...

[22:46] <timotimo> that is very important

[22:55] <timotimo> i've re-uploaded the file, it's a bit more sensible now

[23:26] *** Kaiepi joined
