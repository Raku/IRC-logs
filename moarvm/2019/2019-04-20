[00:09] *** fake_space_whale left
[06:59] *** domidumont joined
[07:20] *** krunen left
[07:20] *** krunen joined
[07:50] *** domidumont left
[07:59] *** avar left
[08:03] *** avar joined
[08:03] *** avar left
[08:03] *** avar joined
[08:38] <nine> I dare say one can already easily wait until GC occurs: just have a destructor of a throw away object clear a mutex and wait on the latter. After all destructors are called during GC.

[08:54] *** robertle joined
[09:47] <timotimo> nine: not guaranteed, and that's a total hack ;)

[11:55] <lizmat> *if* an object is GC collected, then it *will* call any DESTROY method on it (in the next run of the GC, I believe)

[11:55] <lizmat> that is guaranteed, is it not?

[11:56] <lizmat> perhaps you could also clear the mutex in an END block ?

[14:51] *** lucasb joined
[16:43] *** zakharyas joined
[17:11] *** patrickb joined
[17:36] *** patrickb left
[18:34] <japhb> lizmat: But if an object is in gen2, there's no guarantee that a GC will be a full one and thus collect the object.

[18:35] <japhb> Meaning, the hack would completely depend on whether the object happened to be in an area that gets swept on any given GC.

[18:55] <timotimo> japhb: you can not cause objects to be born in gen2

[18:55] <timotimo> so when you create a new object every time and not holding on to it, it should die the next time gc runs

[19:54] <japhb> timotimo: Who says it is born and dies in the same nursery lifecycle?  That's *at best* a race condition ...

[19:57] <timotimo> aye, it races

[20:16] *** zakharyas left
[21:51] *** harrow left
[22:01] *** harrow joined
[22:46] *** lucasb left
