[02:10] *** AlexDaniel joined
[02:27] *** ggoebel joined
[02:32] *** ggoebel left
[03:53] *** Kaiepi left
[04:35] *** Kaiepi joined
[04:52] *** MasterDuke left
[05:52] *** domidumont joined
[07:28] *** zakharyas joined
[08:47] *** brrt joined
[09:12] <brrt> \o

[09:13] <nwc10> o/

[09:20] <brrt> I think the only thing left for FPR support is spare register selection, and maybe something for function calls

[09:29] <timotimo> that doesn't sound like a terribly big amount of stuff!

[09:46] <brrt> it's not

[09:46] <brrt> and the good thing is that this mostly falls out of treating register sets as bitmap consistently

[09:47] <timotimo> nice.

[10:09] <timotimo> MFW a process spends 20% self time in mvm_fixed_size_alloc, which is often called by MVM_exception_backtrace via MVM_repr_bind_key_o

[10:09] <timotimo> the heck are all these backtraces

[10:12] <timotimo> 20% of the process' time is spent in run_gc, really?

[10:12] *** domidumont left
[10:14] <jnthn> o.O

[10:15] <timotimo> this is htmlify.p6 in perl6-examples

[10:15] <timotimo> though it's running on a machine that's low on ram

[10:16] <timotimo> ugghhh i don't get any variables in gdb

[10:17] <timotimo> No symbol "MVMThreadContext" in current context.

[10:17] <timotimo> omfg

[10:18] <timotimo> i wonder if it's literally running in a loop that does nothing but "throw exception, catch exception, retry"

[10:19] <jnthn> --profile it? :)

[10:19] <timotimo> i don't wanna start from the beginning :D

[10:19] <timotimo> though a guess it's all the same

[10:19] <timotimo> also, it doesn't finish running

[10:20] <timotimo> a sampling profiler would be great here :P

[10:20] <timotimo> cough cough

[11:26] *** zakharyas left
[11:38] *** domidumont joined
[11:42] *** domidumont1 joined
[11:45] *** domidumont left
[11:51] *** ggoebel joined
[12:43] *** brrt left
[12:54] *** zakharyas joined
[13:00] *** pamplemousse joined
[13:29] *** sena_kun joined
[13:57] *** Kaypie joined
[13:58] *** dogbert17 joined
[14:00] *** nebuchad` joined
[14:01] *** klapperl_ joined
[14:01] *** Woodi_ joined
[14:01] *** scovit_ joined
[14:06] *** Kaiepi left
[14:06] *** dogbert11 left
[14:06] *** klapperl left
[14:06] *** jpf1 left
[14:06] *** scovit left
[14:06] *** Woodi left
[14:06] *** nebuchadnezzar left
[14:07] *** brrt joined
[14:09] *** nebuchad` is now known as nebuchadnezzar

[14:11] *** jpf1 joined
[14:16] *** domidumont joined
[14:18] *** domidumont1 left
[14:35] <brrt> \o

[14:39] <pamplemousse> o/

[14:41] <timotimo> o/

[14:46] <brrt> pamplemousse: not sure I told you yet, but if you do get yourself a blog, lizmat will be able to post it on the perl6 weekly

[14:51] <pamplemousse> That's nifty. I'm going to try to get something written up on Friday about what I've done so far

[15:00] *** domidumont left
[15:02] <pamplemousse> I looked through the github issue notes.  When I use gdb to step through things, an unhandled exception "Cannot find method 'name' on object of type Perl6::Metamodel::ClassHOW at gen/moar/BOOTSTRAP.nqp:3720" throws when it hits this line: https://github.com/rakudo/rakudo/blob/master/src/vm/moar/runner/main.c#L392

[15:02] <pamplemousse> Going through the valgrind output, I still think the invalid read traces to https://github.com/MoarVM/MoarVM/blob/master/src/io/eventloop.c#L299

[15:02] <pamplemousse> Stepping through, I can't get to that point in the code because it throws the unhandled exception, and I can't set a breakpoint there because gdb can't find eventloop.c, and I can't tell how it's being linked into ./install/bin/perl6

[15:03] <pamplemousse> Any thoughts?

[15:05] <timotimo> it completely refuses your breakpoint?

[15:06] <pamplemousse> It says that there's no source file with that name and asks if I want to make a breakpoint pending on future shared library load. If I go ahead and make the breakpoint, it never hits it.

[15:12] <timotimo> can you check what CFLAGS were used in moarvm's Makefile and rakudo's Makefile?

[15:12] <timotimo> perhaps something is preventing the --debug from working right

[15:13] <pamplemousse> Sure, can do. One sec

[15:18] <brrt> pamplemousse; that commonly happens when moar isn't bootstrapped quite correctly

[15:18] <brrt> (there's a bunch of initialization to do)

[15:18] <brrt> my current, not-quite-foolproof solution is one of the following:

[15:18] <brrt> -- either I start gdb with --args, followed by the complete command line

[15:19] <brrt> - or I write a script, setting the correct directory, setting the args, setting the executable, and load that

[15:19] <brrt> I agree that's the line that is the invalid read, but I'm really confused where that should be freed

[15:20] <brrt> I don't think your problem is necessary the debug CFLAGS

[15:21] <brrt> in gdb, 'show args'

[15:24] <pamplemousse> timotimo: The rakudo cflags includes -g3, and moarvm's includes DMVM_TRACING, DMVM_CGOTO, and DMVM_RDTSCP. Those are all the differences.

[15:25] <pamplemousse> brrt: That's how I'm currently calling gdb

[15:25] <brrt> hmmm

[15:25] <brrt> are you sure you are in the right directory?

[15:25] <brrt> that your working directory is correct

[15:27] <timotimo> pamplemousse: would you be okay with giving us ssh access to your computer for co-operative tmux sessions or so?

[15:27] <brrt> timotimo: even I don't know how to do that :-P

[15:28] <timotimo> oh?

[15:28] <brrt> presumably you do, though

[15:28] <timotimo> it's super easy and potentially a fun team building exercise ;) ;)

[15:28] <timotimo> it's like a trust fall

[15:28] <pamplemousse> Sure, I'm not sure how to do that though

[15:29] <timotimo> if you let someone onto your machine via ssh they could do *anything*!

[15:29] <brrt> well, anything that account can do

[15:29] <timotimo> OK, we'll need a whole bunch of prereqs, though

[15:29] <timotimo> that's true. but who goes around making extra accounts for special situations like that!

[15:30] <brrt> I would

[15:30] <timotimo> you'll of course need to be running an sshd and give one of us access, ideally with ssh public keys, so that nobody can guess a password or so

[15:30] <brrt> Not good at trust building exercises maybe

[15:30] <timotimo> and have whatever port you're running the sshd on forwarded to the open internet

[15:31] <timotimo> if you have an ipv6, there may not be a NAT in between you and the internet, so that could perhaps be easier

[15:32] <pamplemousse> Do you have a tutorial you could point me to that could walk me through setting this up?

[15:33] <brrt> ubuntu does: https://help.ubuntu.com/lts/serverguide/openssh-server.html.en

[15:38] <timotimo> i'm actually going semi-afk now :o

[15:38] * brrt is going for dinner

[15:38] <timotimo> but brrt, all you need to do to tmux cooperatively is "tmux a" from two terminals, and it should work immediately

[15:38] <brrt> I see

[15:43] *** brrt left
[15:43] <timotimo> you can also specify the tmux socket path and chmod it so that both unix users have access

[15:44] <timotimo> that's a little less dangerous, but the "guest" user can still open more windows and do nefarious things in the background

[15:49] *** discord6 left
[15:49] *** discord6 joined
[15:50] <pamplemousse> I don't have a fixed IP and am behind multiple layers of NAT that I don't have rights to set up port forwarding

[15:51] <pamplemousse> I have the sshd set up but I can't set up port forwarding

[15:58] *** brrt joined
[16:02] <brrt> that's going to be difficult then

[16:04] * brrt is thinking of a way out

[16:17] <brrt> so. I can't get it to trigger either

[16:17] <brrt> that's odd

[16:18] <timotimo> pamplemousse: any ipv6 connectivity?

[16:19] <brrt> oh, now it works

[16:20] <pamplemousse> No, no ipv6 connectivity.

[16:27] <brrt> I may have a theory...

[16:27] <timotimo> why don't we set up a perl6 contributor VPN ...

[16:27] <timotimo> pamplemousse: do you have ssh access to a server that has an open port that you're allowed to use?

[16:28] <pamplemousse> timotimo: Possibly. I'll have to get back to you on that.

[16:30] <timotimo> networking, y u so hard

[16:32] <brrt> networking engineers get paid crazy money i'm told

[16:33] <pamplemousse> I'll put in a request and it would probably take a bit of time, but could be possible in the future.

[16:33] <timotimo> i would invite you onto my ssh server, but all that gets us is that you can work on your problem on my computer where the problem doesn't appear

[16:34] <timotimo> what we could do if we were silly, which perhaps we are, is that you can connect to my ssh server, but only forward a port; the remote port would listen on my computer and connect to a port on your computer locally

[16:35] <timotimo> hm. with socat we might be able to just set that up without ssh

[16:35] <brrt> pamplemousse: the other thing you can do, of course, is to have a printf in the right place :-)

[16:35] <timotimo> oh, huh, what are filan and procan

[16:36] <brrt> This just looks much, much weirder than I thought it would

[16:38] <timotimo> pamplemousse: can you install "socat"? let's try something wild

[16:39] <timotimo> oh, food's herek

[16:41] <pamplemousse> timotimo: I can, but the fun, wild solution may be more trouble than it's worth if my request winds up going through fairly quickly.

[16:43] <timotimo> it'll be great, though!

[16:43] <timotimo> i locally have socat TCP-LISTEN:5900 TCP-LISTEN:5901

[16:44] <timotimo> you will have TCP:85.216.40.52:5900 TCP:localhost:22

[16:44] <timotimo> i think 22 is the ssh port?

[16:44] <timotimo> if you can run that real quick we can see if it works

[16:47] <timotimo> pamplemousse: ^- ? :)

[16:48] *** pamplemousse_ joined
[16:48] <timotimo> ah! that's not the port i have forwarded!

[16:48] <pamplemousse_> Sorry, connection cut out.

[16:48] <timotimo> TCP:85.216.40.52:4900 TCP:localhost:22

[16:49] <timotimo> that is the command that should work

[16:49] *** pamplemousse left
[16:49] *** pamplemousse joined
[16:49] <timotimo> hey, you're on an ipv6 now!

[16:50] *** pamplemousse_ left
[16:50] <timotimo> anyway, food's getting cold :o

[16:52] <pamplemousse> You should go eat, sorry for keeping you from your food. I'll install socat and see if I can run the thing

[16:52] <timotimo> i can look at the screen from the corner of my eye

[16:54] <timotimo> of course when you made the connection nothing happens until i try to connect to my local thingie

[16:54] <timotimo> omg i misread the port number *again*

[16:54] <timotimo> it's actually 4009

[17:01] <pamplemousse> Alright, I think I've made the connection

[17:03] <brrt> \o/

[17:06] *** brrt left
[17:07] <timotimo> OK, i tried to connect and it went unhappy

[17:08] <timotimo> we'll try again after i eated

[17:08] <pamplemousse> Alrighty

[17:10] *** zakharyas left
[17:18] <timotimo> OK, let's see what this is all about

[17:18] <timotimo> launching socat with -d should give a bit of information. i also have -D but that seems to be mostly a lot of output that i don't know how to properly parse

[17:24] <pamplemousse> My connection is being refused

[17:24] <timotimo> let me try again

[17:25] <timotimo> i'm running it. 4009, right?

[17:25] <pamplemousse> Yep, 4009. I'll try again

[17:25] <timotimo> wait, i might have put it the wrong way around again

[17:26] <timotimo> try again please

[17:26] <pamplemousse> Alright, it's hanging now, but it's not refusing the connection

[17:26] <timotimo> that probably means it's connected

[17:26] <timotimo> now i'm connecting ssh to it

[17:26] <timotimo> nothing's happening tho :|

[17:26] <timotimo> i'll kill my socat, tell me if your socat quits, too

[17:27] <timotimo> with -d -d i get a message that it's listening

[17:28] <pamplemousse> It's no longer hanging, but it didn't give me any message (I also used -d)

[17:28] <timotimo> try two -d in a row

[17:29] <timotimo> i wonder if it's necessary to switch the two arguments around on your end or if it makes no difference

[17:29] <timotimo> oh, i should also ask, does the ssh server run already?

[17:29] <pamplemousse> Yes, it does

[17:30] <timotimo> if not we can fake a server with socat, too, though listening on port 22 requires root privs of course

[17:31] *** robertle joined
[17:32] <timotimo> does -d -d give any particular output?

[17:32] <timotimo> aha!

[17:32] <timotimo> 2019/05/21 19:32:47 socat[27084] N accepting connection from AF=2 24.126.148.100:62526 on AF=2 192.168.0.73:4009

[17:32] <timotimo> 2019/05/21 19:32:47 socat[27084] N listening on AF=2 0.0.0.0:4010

[17:33] <timotimo> The authenticity of host '[localhost]:4010 ([127.0.0.1]:4010)' can't be established.

[17:33] <timotimo> ECDSA key fingerprint is SHA256:H0+q4e1oHapQB8EzjcKyJjDXWPTmRy+uJUtWM30ijTQ.

[17:33] <timotimo> i expect that's your server

[17:33] <timotimo> that's great

[17:33] <timotimo> now all i need to do is give you my ssh public key so that you can put it into ~/.ssh/authorized_keys and you give me the username you did that for

[17:35] <pamplemousse> Okay

[17:36] <timotimo> https://github.com/timo.keys - the first one is the right one, i believe

[17:37] <timotimo> yes, it is the right one

[17:38] <timotimo> anyway, i started the socat thing up again

[17:38] <timotimo> you'll also have to make your ~/.ssh and ~/.ssh/authorized_keys unreadable for anyone but your own user

[17:39] <timotimo> i.e. chmod 700 ~/.ssh; chmod 600 ~/.ssh/authorized_keys

[17:39] <timotimo> at least i think that's right?

[17:40] <pamplemousse> Okay, I'll let you know when I have that done

[17:40] <timotimo> thanks

[17:40] <timotimo> sorry it's such an arduous process, i thought it'd be easier :|

[17:42] <pamplemousse> It's alright, thank you for walking me through it

[17:46] *** Kaypie is now known as Kaiepi

[18:15] *** sena_kun left
[18:16] *** sena_kun joined
[18:31] *** pamplemousse_ joined
[18:31] *** pamplemousse_ left
[18:33] *** pamplemousse_ joined
[18:33] <pamplemousse_> timotimo: I think I have everything set up now

[18:34] *** pamplemousse left
[18:34] *** pamplemousse_ is now known as pamplemousse

[18:35] <timotimo> cool

[18:35] <timotimo> i hope i'll actually be able to help at all, lol

[18:37] <pamplemousse> Hopefully :)

[18:38] <timotimo> OK, what's the username?

[18:38] <timotimo> i see the connection

[18:38] <pamplemousse> It's timotimo

[18:38] *** sena_kun left
[18:38] <timotimo> cool, i'm connected

[18:39] <timotimo> though i shouldn't be connecting with -vvv, else it'll regularly spam my terminal with debug messages in the worst moments

[18:39] *** sena_kun joined
[18:39] <timotimo> ok, do we start a tmux session as "timotimo" or do i connect to a socket you make available to me?

[18:41] <timotimo> i believe you'd "tmux -S /tmp/this-socket-belongs-to-everyone"

[18:42] <timotimo> chmod the file it creates so timotimo can have it

[18:47] <pamplemousse> Alright, I've done that

[18:48] <timotimo> look, it's spooky action-at-a-distance

[18:51] <pamplemousse> Are you connected? I can't see anything different. Do we need to be logged in as the same person?

[18:51] <pamplemousse> This is my first time using tmux

[18:51] <timotimo> i am connected

[18:51] <timotimo> are you looking at the terminal you did the chmod in?

[18:52] <pamplemousse> I see you now, thanks

[18:52] <Kaiepi> iirc if you can't figure out how to exit tmux you just need to press <return><return><tilde><period>

[18:53] <Kaiepi> i think it uses cu

[18:54] <timotimo> that will at least kill an ssh session

[18:54] <timotimo> pamplemousse: i'll try switching to a different window, tell me if it switches for you, too

[18:54] <Kaiepi> i'm wrong, it has its own set of special commands

[18:55] <timotimo> the prefix is ctrl-b and then you can do all the things, though of course ctrl-b can be changed

[18:57] <timotimo> pamplemousse: the command is still with -e 'for ^2 { my $cmd = run « echo 1 », :out; $cmd.out.close }' ?

[18:59] <pamplemousse> Yep, it is! I was double checking I had it right

[18:59] <timotimo> OK, should we just try running it first?

[18:59] <pamplemousse> Sure

[19:00] <timotimo> is thath ow it usually breaks?

[19:00] <pamplemousse> Yes

[19:00] <timotimo> let's see if we can somehow breakpoint that

[19:01] <timotimo> i see that's the only thing it prints

[19:03] <pamplemousse> It happens when you try to execute this line, if that helps: https://github.com/rakudo/rakudo/blob/master/src/vm/moar/runner/main.c#L392

[19:03] <timotimo> i see the quality of debug symbols is kind oflacking

[19:04] <timotimo> there isn't actually a -g in the CFLAGS

[19:04] <timotimo> let's try running Configure.pl again

[19:05] <timotimo> looks like the user we're sharing has no access here

[19:05] <timotimo> if you run the tmux as the madeleine user we'll have shells that can access all that

[19:05] <timotimo> i'll quit tmux right quick

[19:06] <pamplemousse> Whoops, sorry about that.

[19:06] <timotimo> no prob

[19:08] <timotimo> actually i only detached from the tmux session i think? the socket file at least still exists in /tmp

[19:11] <pamplemousse> Sorry, I'm a little lost. Should I remove the socket file? And then use the same command as earlier to start the tmux session?

[19:12] <timotimo> that ought to work

[19:14] <timotimo> is your user in the perl6_people group, too? you may have to chgrp the socket to that group for me to access it

[19:15] <dogbert17> hmm, just ran a profile on htmlify.p6 while generating the p6 docs

[19:16] <timotimo> i hope it didn't crash?

[19:16] <dogbert17> not with MVM_SPESH_DISABLE=1

[19:16] <timotimo> ow

[19:16] <dogbert17> it didn't crash with spesh enabled either but all memoey and swap was gobbled up

[19:17] <pamplemousse> Yes, my user is.

[19:17] <dogbert17> anyway, the profile is 31 megs in size

[19:17] <timotimo> that's not too bad for the sql-based profiler at least

[19:17] <timotimo> pamplemousse: can you chgrp perl6_people /tmp/this-socket-*

[19:18] <dogbert17> if the numbers in the routine tab, sorted on exclusive time, is to be believed 99% of the time is spent in ThreadPoolScheduler.pm6

[19:19] <pamplemousse> timotimo: done

[19:19] <lizmat> dogbert17: that's an artefact of multi-threaded programs, afaik

[19:19] <timotimo> dogbert17: yeah, it's probably some threads that are just waiting for work to appear

[19:20] <dogbert17> the wors offender is line 612 followed by 278 and 304

[19:20] <dogbert17> *worst

[19:21] <lizmat> 612 is the scheduler loop

[19:21] <dogbert17> aha

[19:21] <timotimo> pamplemousse: the -- in front of debug=3 were missing

[19:22] <timotimo> it should probably spit out an error for something it doesn't recognize

[19:22] <lizmat> dogbert17: the other two are the general worker started and the affinity worker starter

[19:22] <lizmat> well, actually the code waiting for stuff to do

[19:22] <timotimo> there's a big difference between wallclock and system/user time there, but i'm not sure how to measure that properly

[19:23] <timotimo> pamplemousse: how many cores does that machine have?

[19:24] <dogbert17> isn't that a bit of a false positive then, i.e. the waiting?

[19:24] <timotimo> it kind of is, but it is where it's spending time

[19:25] <pamplemousse> timotimo: It has 1. It's a VM. I can change it and reboot the VM if needed

[19:25] <timotimo> no need, would just make compiling moarvm faster

[19:28] <dogbert17> The profiled code did 12350 garbage collections. There were 17 full collections involving the entire heap.

[19:31] <timotimo> pamplemousse: i see the thread it just switched to is still running code while the main thread is doing the gc_global_destruction

[19:31] <timotimo> that's probably Very Bad™

[19:32] <pamplemousse> That's doesn't sound very good, no

[19:32] <pamplemousse> *That

[19:32] <timotimo> i'm not sure why the Hello World only comes through once the main thread's IO loop is destroyed?

[19:33] <timotimo> oh, the hello world doesn't belong to the program being run

[19:33] <timotimo> that only does "echo 1"

[19:33] <pamplemousse> No, I plugged that in to see if I was even getting that far before things failed out.

[19:33] <pamplemousse> Sorry, misleading print statement

[19:33] <timotimo> nah, i do that all the time, too

[19:34] <timotimo> where does that print statement live?

[19:35] <pamplemousse> It's at MoarVM/src/io/eventloop.c:293

[19:35] <timotimo> the ssh connection has quite some delay from typing to seeing what's up, so i wouldn't want to browse the source over there

[19:36] <pamplemousse> Sorry things are so slow.

[19:36] <timotimo> are you from the US? :D

[19:37] <timotimo> *in* the US

[19:37] <pamplemousse> I am

[19:38] <pamplemousse> Yes to both, I mean

[19:39] <pamplemousse> The print statement is right before this line: https://github.com/MoarVM/MoarVM/blob/master/src/io/eventloop.c#L293

[19:39] <timotimo> IIUC, ISPs have divided up the US with fixed borders, so they don't have any competition at all and can be as awful as they like

[19:40] <timotimo> i just tried it locally with valgrind

[19:40] <timotimo> it looks like doing the uv_loop_close tries to use the instance->event_loop_wakeup while it's going through everything during the uv_loop_close thing

[19:41] <timotimo> so it may be enough to move the MVM_free of instance->event_loop_wakeup to below the uv_loop_close

[19:41] <timotimo> well, i say "enough", but really it'd only get rid of the first failure we can see

[19:43] <pamplemousse> Yep, our connection is pretty darn slow most the time and at home, I only have one provider I can get internet through. Not really ideal. Most places only have one ISP.

[19:44] <timotimo> i just made that change on your VM

[19:44] <timotimo> the US of A is a joke :( :(

[19:45] <timotimo> i think we only get the "cannot find method 'name'" error because the VM has only one core and it'd have to do a very lucky switch between the threads to explode in that other way

[19:46] <timotimo> locally i see it exploding trying to gc_free a mutex inside a MVMConcBlockingQueue

[19:47] <timotimo> i'm not sure which one it is, but it could very well be the job queue for the ThreadPoolScheduler

[19:48] <timotimo> hah, i wanted to dump a backtrace from the other thread

[19:48] <timotimo> but of course the instance is already half-destroyed

[19:48] <timotimo> so it kind of can't

[19:49] <timotimo> but yeah, one thread is in pthread_cond_wait on the mutex while the other is trying to uv_mutex_destroy it

[19:49] <timotimo> the man page for pthread_destroy or whatever it uses says that leads to "undefined behaviour" which in this case is aborting it seems like

[19:51] <timotimo> we could do something very bold and signal the condition variable before we destroy it

[19:51] <timotimo> no, that just means another thread will immediately take the lock itself to do whatever

[19:54] <pamplemousse> Sorry, I'm a little lost on where the gc_free that's making it explode is.

[19:55] <timotimo> oh, i'm talking about the crash I get

[19:55] <timotimo> let's see what valgrind says about the "cannot find method" one

[19:56] *** robertle left
[19:57] <timotimo> if you want to reboot the VM into two cores mode, it'll probably get the crash i'm talking about as well, though only sometimes i guess?

[19:58] <pamplemousse> Okay, I can do that. One sec

[20:07] *** Kaiepi left
[20:08] *** Kaiepi joined
[20:10] <pamplemousse> timotimo: I can see the same crash now

[20:15] <timotimo> i started the socat again

[20:16] *** sena_kun left
[20:16] <pamplemousse> Alright, I'm connecting

[20:17] <timotimo> the socket needs the chgrp again

[20:19] <pamplemousse> Okay, done

[20:19] <timotimo> i should probably point out that valgrind will not simulate multiple threads at the same time, so it won't be useful for this particular crash

[20:20] <pamplemousse> Good to know

[20:21] <timotimo> ctrl-b [ will turn on "scroll/copy/select mode"

[20:21] <timotimo> which is what's on right now

[20:21] <timotimo> you can tell by the thing in the top right, the [0/36]

[20:21] <timotimo> oh, cool, it did get that crash even with valgrind

[20:22] <timotimo> you can get out of that scrolling mode by pressing q

[20:22] <timotimo> OK, i'm not sure what to do next

[20:23] <timotimo> like, can we get cleaning up at the end to be safe without every code that uses mutexes to know about vm shutdown?

[20:25] <timotimo> or is it perhaps enough to send a special "btw shut down now please" event to the event queue that the ThreadPoolScheduler listens to

[20:28] <pamplemousse> I think that's a question for someone more familiar with things than I am.

[20:29] <timotimo> right, i might even say "invoke the jnthn"

[20:29] <timotimo> but moving the MVM_free for the eventloop_wakeup or what it was can probably go in already

[20:30] <pamplemousse> Alright. I can commit that change and make a pull request

[20:30] <pamplemousse> Thank you so much for all your help today

[20:30] <timotimo> was this the task to get a start at the moarvm codebase?

[20:30] <pamplemousse> Yes, it was

[20:30] <timotimo> always happy to help contributors :)

[20:34] <jnthn> At the end of the day, if we want to really get mutex cleanup right, I think we'd have to do as the JVM does and implement them ourselves.

[20:34] <timotimo> can i say "ugh" :) :) :)

[20:35] <jnthn> Basically, use a condvar per thread for it to be able to be suspended/awoken efficiently

[20:35] <jnthn> And so we control the only real OS-level mutexes that exist

[20:35] <jnthn> Yes, it's some work, and probably has its own cons, though do-able

[20:36] <timotimo> hm, so when we signal any mutex we'd look through all threads to see if they are currently waiting on it? or something?

[20:37] <timotimo> and then signal their condvar as a stand-in for the actual condvar that was signaled in the first place?

[20:38] <jnthn> Pretty much

[20:39] <timotimo> there's probably some documentation on how best to manage the "which thread is waiting on which mutex" data

[20:39] <timotimo> so that if we have like a hundred threads we're not in trouble

[20:39] <timotimo> also, we've got that mutex we have to lock if we want to go through the list of threads, too

[20:51] *** MasterDuke joined
[20:52] *** MasterDuke left
[20:52] *** MasterDuke joined
[21:06] *** sena_kun joined
[21:27] <Geth> ¦ MoarVM: pamplemoussecache++ created pull request #1103: Move freeing of event_loop_wakeup to after uv_loop_close

[21:27] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1103

[21:38] <jnthn> pamplemousse++ # first PR

[21:55] *** pamplemousse left
[23:01] <ugexe> https://github.com/MoarVM/MoarVM/commit/2fe2f588fd931e9bed982da97f352207ddab9e62 this is where windows starts failing that test

[23:03] <timotimo> i wonder if the mp_int types are different on the windows machine for some reason

[23:03] <MasterDuke> what version of libtommath are we using? maybe there's a newer version

[23:03] <timotimo> like, libtommath has support for changing the sizes of some of the datastructure parts with defines

[23:03] <timotimo> but i don't think we do any of that on a per-platform basis

[23:04] *** tobs left
[23:05] <MasterDuke> git describe in 3rdparty/libtommath say v1.0-rc2-15-g289e346, but it looks like they have a v1.1 tag upstream

[23:06] <MasterDuke> these two changes might be relevant https://github.com/libtom/libtommath/blob/v1.1.0/changes.txt#L14-L17

[23:06] *** sena_kun left
[23:07] <timotimo> do we still have our own fork of libtommath that we include?

[23:07] <timotimo> i think we might not actually be using the build system of libtommath

[23:08] <timotimo> they have mp_set_double and mp_get_double in 1.1.0, we might have our own implementation of that feature that we could replace with something from libtommath

[23:11] *** Kaiepi left
[23:12] *** Kaiepi joined
[23:12] <MasterDuke> i don't know how to updated submodules, but if someone creates a PR doing so for libtommath we can see if that fixes anything

[23:12] <ugexe> wouldnt we first have to identify the non upstreamed changes?

[23:12] <timotimo> you cd in, you git fetch the remote and git checkout the right commit, then you cd out and "git add" the submodule, then you commit

[23:13] <timotimo> so pretend the whole folder is just one file, basically

[23:13] <timotimo> except you can't just do changes in the submodule's files, then "git add"ing the changes from the outside repository

[23:15] <ugexe> also you have to script those steps on windows

[23:15] <ugexe> s/have to/can/

[23:17] <ugexe> making the change in the rakudo repo wont work actually, because it needs an older rakudo to do this on appveyor

[23:18] *** tobs joined
[23:30] *** ggoebel left
