[00:39] *** tellable6 left
[00:43] *** tellable6 joined
[00:45] *** lucasb left
[01:40] *** zakharyas joined
[02:33] *** AlexDani` joined
[02:37] *** AlexDaniel left
[02:45] *** AlexDani` is now known as AlexDaniel

[02:45] *** AlexDaniel left
[02:45] *** AlexDaniel joined
[03:04] *** MasterDuke left
[04:56] *** brrt joined
[05:25] *** robertle left
[06:07] *** domidumont joined
[06:08] *** domidumont left
[06:29] <brrt> timotimo: suggestion wasn't to use ConcurrentBlockingQueue, though, but to have a fixed-size (ring?) buffer

[06:29] <nwc10> good *, brrt

[06:33] <brrt> ohai nwc10

[06:50] *** domidumont joined
[07:17] *** patrickb joined
[07:28] *** brrt left
[07:53] *** patrickb left
[08:29] *** brrt joined
[08:31] *** sena_kun joined
[09:12] *** zakharyas left
[10:13] *** sena_kun left
[10:38] *** brrt left
[12:03] *** brrt joined
[12:36] *** sena_kun joined
[12:45] *** lucasb joined
[12:45] *** zakharyas joined
[12:58] *** zakharyas left
[13:17] *** zakharyas joined
[13:49] *** zakharyas left
[13:53] *** Kaiepi left
[13:53] *** Kaypie joined
[13:54] *** brrt left
[13:57] *** zakharyas joined
[14:00] *** Kaypie left
[14:00] *** Merfont joined
[14:15] *** zakharyas left
[14:16] *** Merfont is now known as Kaiepi

[15:23] *** domidumont left
[16:08] *** MasterDuke joined
[16:38] *** sena_kun left
[16:59] *** squashable6 left
[17:00] *** squashable6 joined
[17:24] *** domidumont joined
[17:26] *** domidumont left
[17:27] *** domidumont joined
[17:49] *** squashable6 left
[17:54] *** squashable6 joined
[18:01] <timotimo> moarvm spesh vm events coming up

[18:06] <timotimo> oooh, C is angry at me

[18:09] *** domidumont left
[18:18] <timotimo> hm, all the uninitialized values

[18:37] *** pamplemousse joined
[19:13] <timotimo> turns out values stay uninitialized if you don't write to them

[19:15] <MasterDuke> those crazy C compilers, can never be trusted...

[19:16] *** Ven`` joined
[19:17] <timotimo> m: constant \T := array[int64] but role { }; my T @foo = 1, 2, 3; say @foo

[19:17] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) Type check failed in assignment to @foo; expected array[int64]+{<anon|1>} but got Int (1)␤  in block <unit> at /tmp/faBIugDgBS line 1␤␤»

[19:17] <timotimo> m: constant \T := array[int64] but role { }; my T @foo; @foo = 1, 2, 3; say @foo

[19:17] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) Type check failed in assignment to @foo; expected array[int64]+{<anon|1>} but got Int (1)␤  in block <unit> at /tmp/Ayyt_KkO4p line 1␤␤»

[19:18] <timotimo> er

[19:18] <timotimo> m: constant \T := array[int64] but role { }; my T $foo; @($foo) = 1, 2, 3; say @foo

[19:18] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) ===SORRY!=== Error while compiling /tmp/QVGjW7ablA␤Variabl…»

[19:18] <evalable6> timotimo, Full output: https://gist.github.com/0c3765b6edbc5201d66ae20a3205f71b

[19:18] <timotimo> m: constant \T := array[int64] but role { }; my T $foo; @($foo) = 1, 2, 3; say $foo

[19:18] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) Invocant of method 'iterator' must be an object instance of type 'array::intarray', not a type object of type 'array[int64]+{<anon|1>}'.  Did you forget a '.new'?␤  in block <unit> at /tmp/oHlCzBCLsE line 1␤␤»

[19:18] <timotimo> i see that a native array loses its nativeness when a role is mixed in

[19:18] <timotimo> m: class test is array[int64] { }; say test.^repr

[19:18] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) No such method 'repr' for invocant of type 'Perl6::Metamodel::ClassHOW+{<anon>}'. Did you mean any of these?␤    grep␤    ver␤␤  in block <unit> at /tmp/rsh3_wcEsJ line 1␤␤»

[19:19] <timotimo> m: class test is array[int64] { }; .name.say for test.^roles

[19:19] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) P6opaque: missing attribute protocol in compose of array::intarray[int64]␤  in block <unit> at /tmp/NFIByoMFd2 line 1␤␤»

[19:20] <timotimo> m: class test is repr<VMArray> is array_type(int64) { }; .name.say for test.^roles

[19:20] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «»

[19:25] <timotimo> wtf: releases constant \T := array[int64] but role { }; my T $foo; @($foo) = 1, 2, 3; say $foo

[19:26] <timotimo> i thought this is supposed to get all the bots to got o work

[19:26] <timotimo> committable: releases constant \T := array[int64] but role { }; my T $foo; @($foo) = 1, 2, 3; say $foo

[19:26] <timotimo> c: releases constant \T := array[int64] but role { }; my T $foo; @($foo) = 1, 2, 3; say $foo

[19:26] <committable6> timotimo, https://gist.github.com/09c9cf649101826e0d04b120cba19c91

[19:26] <committable6> timotimo, https://gist.github.com/8d59d7fabc3855c540abb2c74677345b

[19:27] <timotimo> oh

[19:27] <timotimo> i was just forgetting a .new wasn't i

[19:27] <timotimo> m: constant \T := array[int64] but role { }; my T $foo .= new; @($foo) = 1, 2, 3; say $foo

[19:27] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «[]␤»

[19:27] <timotimo> m: constant \T := array[int64] but role { }; my T $foo .= new; $foo[0] = 1; say $foo

[19:27] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) MVMArray: bindpos expected object register␤  in block <unit> at /tmp/j1XDUaOOZD line 1␤␤»

[19:27] <timotimo> m: constant \T := array[int64] but role { }; my T $foo .= new; $foo[0] = "hello"; say $foo

[19:27] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «(exit code 1) Type check failed in assignment to int array element #0; expected int64 but got Str ("hello")␤  in block <unit> at /tmp/vXCeZrCvl4 line 1␤␤»

[19:27] <timotimo> m: constant \T := array[int64]; my T $foo .= new; $foo[0] = 1; say $foo

[19:27] <evalable6> timotimo, rakudo-moar 0455f42e3: OUTPUT: «[1]␤»

[19:28] <timotimo> not sure how that difference happens

[19:28] <timotimo> c: releases constant \T := array[int64] but role { }; my T $foo .= new; $foo[0] = "hello"; say $foo

[19:28] <committable6> timotimo, https://gist.github.com/0dba709161d1e335bc55c6a4cd7e6eee

[19:33] <discord6> <RaycatWhoDat> c: say 42

[19:33] <committable6> RaycatWhoDat, Seems like you forgot to specify a revision (will use “v6.c” instead of “say”)

[19:33] <committable6> RaycatWhoDat, ¦v6.c (39 commits): «42␤»

[19:33] <discord6> <RaycatWhoDat> c: releases say 42

[19:34] <committable6> RaycatWhoDat, ¦releases (39 commits): «42␤»

[19:37] <timotimo> https://gist.github.com/timo/f4020bb85a1021f39b53483424cf0276 - jnthn first draft of SpeshOverviewEvent

[19:37] <timotimo> perhaps instead of cleared_stats it should just give the current size of the stats array

[19:54] <Geth> ¦ MoarVM: 6f72c92f9c | (Timo Paulssen)++ | src/gc/orchestrate.c

[19:54] <Geth> ¦ MoarVM: vmevent: divide timing numbers by 1000

[19:54] <Geth> ¦ MoarVM:

[19:54] <Geth> ¦ MoarVM: just like we do in the profiler

[19:54] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/6f72c92f9c

[19:54] <Geth> ¦ MoarVM: 204eb28f0e | (Timo Paulssen)++ | 8 files

[19:54] <Geth> ¦ MoarVM: vmevent: new event type: SpeshOverviewEvent

[19:54] <Geth> ¦ MoarVM:

[19:54] <Geth> ¦ MoarVM: spits out some timings and stats about work done,

[19:54] <Geth> ¦ MoarVM: like how many static frames showed up for the first

[19:54] <Geth> ¦ MoarVM: time, how many specializations were due to OSR,

[19:54] <Geth> ¦ MoarVM: how long the individual stages took, etc.

[19:54] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/204eb28f0e

[21:44] *** lucasb left
[22:20] *** Ven`` left
[23:14] *** MasterDuke left
[23:46] *** pamplemousse left
