[00:13] *** anatofuz joined
[01:27] *** anatofuz left
[01:27] *** anatofuz joined
[01:28] *** harrow left
[01:29] *** harrow joined
[01:31] *** TimToady joined
[02:00] *** anatofuz left
[02:02] *** anatofuz joined
[02:09] *** anatofuz left
[02:22] *** anatofuz joined
[02:27] *** anatofuz left
[02:46] *** anatofuz joined
[02:58] *** anatofuz left
[03:56] *** anatofuz joined
[04:21] *** anatofuz left
[05:03] *** anatofuz joined
[05:15] *** robertle left
[05:23] *** anatofuz left
[05:32] *** anatofuz joined
[05:33] *** anatofuz left
[05:41] *** domidumont joined
[05:48] *** anatofuz joined
[05:53] *** domidumont left
[06:54] *** domidumont joined
[07:07] <Geth_> ¦ MoarVM/fix_spesh_plugin_guard_set_threading_issue: a3d18b2f2c | (Stefan Seifert)++ | 13 files

[07:07] <Geth_> ¦ MoarVM/fix_spesh_plugin_guard_set_threading_issue: Fix access to freed memory in resolve_using_guards

[07:07] <Geth_> ¦ MoarVM/fix_spesh_plugin_guard_set_threading_issue:

[07:07] <Geth_> ¦ MoarVM/fix_spesh_plugin_guard_set_threading_issue: Commit acb04a448bd7b067f1a0943b6fd521e21057c96e fixed outdated pointers in the

[07:07] <Geth_> ¦ MoarVM/fix_spesh_plugin_guard_set_threading_issue: guard set, but it was still possible that the guard set was freed while still

[07:07] <Geth_> ¦ MoarVM/fix_spesh_plugin_guard_set_threading_issue: in use by resolve_using_guards as the next GC safe point may occur in

[07:07] <Geth_> ¦ MoarVM/fix_spesh_plugin_guard_set_threading_issue: evaluate_guards. Fix this by turning SpeshPluginState into a 6model object, so

[07:07] <Geth_> ¦ MoarVM/fix_spesh_plugin_guard_set_threading_issue: we can let the GC figure out whether the state is still in use somewhere or not

[07:07] <Geth_> ¦ MoarVM/fix_spesh_plugin_guard_set_threading_issue: review: https://github.com/MoarVM/MoarVM/commit/a3d18b2f2c

[07:09] *** sena_kun joined
[07:23] *** anatofuz left
[07:32] *** anatofuz joined
[08:03] *** anatofuz left
[08:14] *** anatofuz joined
[08:34] *** anatofuz left
[08:40] *** anatofuz joined
[08:43] *** anatofuz_ joined
[08:44] *** anatofuz left
[08:52] *** anatofuz_ left
[08:54] *** anatofuz joined
[08:56] *** anatofuz_ joined
[08:57] *** anatofuz left
[09:04] *** anatofuz joined
[09:04] *** anatofuz_ left
[09:23] *** anatofuz left
[09:27] *** anatofuz joined
[09:33] *** anatofuz_ joined
[09:37] *** anatofuz left
[09:56] *** anatofuz_ left
[09:57] *** anatofuz joined
[10:04] *** anatofuz left
[10:27] *** domidumont left
[10:28] *** anatofuz joined
[10:37] *** anatofuz left
[10:38] *** Voldenet left
[10:41] *** Voldenet joined
[10:41] *** Voldenet left
[10:41] *** Voldenet joined
[11:01] *** anatofuz joined
[11:04] *** dogbert17 joined
[11:19] *** anatofuz left
[11:24] *** anatofuz joined
[11:29] *** anatofuz left
[11:43] *** domidumont joined
[12:31] *** lucasb joined
[12:53] *** vesper11 left
[12:54] *** vesper11 joined
[12:59] *** vesper11 left
[13:27] *** vesper11 joined
[13:31] *** vesper11 left
[13:32] *** vesper11 joined
[13:34] *** AlexDaniel left
[13:34] *** AlexDaniel joined
[13:34] *** AlexDaniel left
[13:34] *** AlexDaniel joined
[13:35] *** Kaiepi left
[15:03] <nine> The failures in t/05-messages/02-errors.t are just timing issues as well. This leaves t/05-messages/10-warnings.t, t/02-rakudo/repl.t and t/06-telemetry/01-basic.t to investigate

[15:04] *** domidumont left
[15:12] <dogbert17> nine: are those errors specific to your branch?

[15:14] <nine> dogbert17: that's what I want to find out. I'm very sure that they are not. I have never had a completely successful make test with extreme GC debugging measures active. My branch fixes some of the failures. The rest appears to be just timing and maybe additional, unknown issues.

[15:16] <nine> I think repl.t has had interemittend failures for ages. Telemetry may have some specific issues just like we've found in the profiling code.

[15:17] <dogbert17> very interesting

[15:27] * lizmat looks forward to any findings wrt Telemetry  :-)

[15:35] <MasterDuke> nine: given you've been looking at profiling related stuff recently, do you have any thoughts/suggestions re the problem dogbert17++ found and then timotimo++ helped golf last night?

[15:35] *** Kaiepi joined
[15:36] <nine> MasterDuke: no, nothing to add at this time

[15:38] <MasterDuke> ah well

[17:04] *** robertle joined
[17:49] *** domidumont joined
[18:56] *** domidumont left
[19:19] *** sena_kun left
[19:51] *** cinch__ is now known as cinch

[20:00] <lizmat> somehow, this sounds familiar: https://thenewstack.io/a-new-linux-memory-controller-promises-to-save-lots-of-ram/

[20:01] <MasterDuke> lizmat: i remember seeing that a couple days ago. i still have the same question, does it only help if you're using multiple cgroups?

[20:02] <lizmat> I have no idea...  :-)

[20:05] <MasterDuke> well, maybe i'll find out in a year or so if it gets merged

[22:32] <MasterDuke> nine: completely changing topic, but after all your mast generation changes, is it as optimized as it could easily be?

[22:35] <Geth_> ¦ MoarVM: 01f85c8bf8 | (Daniel Green)++ | 19 files

[22:35] <Geth_> ¦ MoarVM: Revert "Revert "Merge pull request #1139 from MasterDuke17/add_context_to_error_messages""

[22:35] <Geth_> ¦ MoarVM:

[22:35] <Geth_> ¦ MoarVM: This reverts commit b2dc3f3ba2f0c4dc9c7bb35c0925a307b60b98d6.

[22:35] <Geth_> ¦ MoarVM:

[22:35] <Geth_> ¦ MoarVM: This was reverted because a previous commit also had to be reverted and

[22:35] <Geth_> ¦ MoarVM: I wanted these changes to get their own NQP bump for easy bisecting.

[22:35] <Geth_> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/01f85c8bf8

[23:19] *** anatofuz joined
[23:52] *** anatofuz left
