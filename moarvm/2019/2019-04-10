[01:10] *** Kaiepi left
[01:13] *** Kaiepi joined
[01:16] *** lucasb left
[01:23] *** MasterDuke joined
[01:24] *** MasterDuke left
[01:24] *** MasterDuke joined
[01:32] <Kaiepi> for IO::Socket::INET connections, what should i do on EAGAIN when SO_SNDTIMEO/SO_RCVTIMEO is used with the socket?

[03:33] <Xliff> m: class A { }; my A $a = Nil;

[03:33] <evalable6> Xliff, rakudo-moar dc02335dd: OUTPUT: «»

[05:24] *** robertle left
[06:38] *** brrt` joined
[06:47] *** domidumont joined
[06:56] *** brrt` left
[07:30] *** robertle joined
[07:55] *** Voldenet left
[08:01] *** Voldenet joined
[08:01] *** Voldenet left
[08:01] *** Voldenet joined
[08:15] *** zakharyas joined
[10:08] *** domidumont left
[11:08] *** AlexDaniel left
[11:11] *** zakharyas left
[11:42] <timotimo> yesterday i found out that out of 466k collectables in this one heap snapshot file, about 261k collectables have only a single outgoing reference

[11:42] <timotimo> today, i want to find out if there's potential for deduplication at all

[11:48] <timotimo> 28.5k collectables had only two outgoing refs, probably not worth as much, though i should give it a try anyway

[12:25] *** robertle left
[12:27] *** robertle joined
[12:46] *** Kaiepi left
[12:47] *** Kaiepi joined
[12:49] *** MasterDuke left
[13:03] *** zakharyas joined
[13:12] *** Kaiepi left
[13:16] *** Kaiepi joined
[13:38] *** Kaiepi left
[13:40] *** Kaiepi joined
[13:42] *** brrt` joined
[14:50] *** Kaiepi left
[14:54] *** Kaiepi joined
[15:15] *** Kaiepi left
[15:16] *** Kaiepi joined
[15:38] *** brrt` left
[15:45] *** domidumont joined
[15:47] *** robertle left
[16:22] *** dogbert17 left
[16:27] *** Kaiepi left
[16:30] *** Kaiepi joined
[16:31] *** AlexDaniel joined
[16:52] *** Kaiepi left
[16:55] *** Kaiepi joined
[17:27] *** lucasb joined
[17:41] *** zakharyas left
[17:42] *** Kaiepi left
[17:46] *** Kaiepi joined
[18:31] *** domidumont left
[18:38] *** domidumont joined
[18:39] *** domidumont left
[18:47] *** domidumont joined
[18:48] *** domidumont left
[19:19] *** brrt` joined
[19:21] *** brrt` left
[19:43] *** Kaypie joined
[19:50] *** Kaypie left
[20:40] *** domidumont joined
[20:43] *** domidumont left
[21:07] <Kaiepi> uhhhhh

[21:07] <Kaiepi> moarvm may potentially be vulnerable to ROP

[21:08] <Kaiepi> openbsd has a feature called retguard that protects against it, but can be disabled by passing -fno-return-protector to clang and that fixes nearly all the page traps i get when i try to run perl6

[21:10] <Kaiepi> s/page trap/trace trap/

[21:13] <timotimo> does it work fine when the jit is turned off?

[21:14] <timotimo> it probably has to write its own return protection data somewhere for it to not explode every time it returns from inside jit code

[21:16] <Kaiepi> yes, this is with the jit turned off and with -fno-ret-protector enabled

[21:17] <Kaiepi> er

[21:17] <Kaiepi> the jit's enabled

[21:18] <timotimo> and with ret protector turned on, does turning off the jit make things work again?

[21:18] <Kaiepi> yes

[21:18] <timotimo> OK

[21:19] <timotimo> the return protector stuff is a CPU feature that has the same API on all OSes?

[21:19] <timotimo> or do we have to build platform-specific support for it?

[21:30] <Kaiepi> -fno-ret-protector is openbsd specific

[21:31] <Kaiepi> so probably platform specific depending on what security features they have

[22:39] *** ggoebel left
