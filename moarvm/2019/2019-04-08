[04:36] *** dalek left
[04:48] *** AlexDaniel left
[04:48] *** AlexDaniel joined
[05:23] *** robertle left
[05:53] *** Geth left
[06:41] *** domidumont joined
[07:07] *** robertle joined
[07:22] *** domidumont left
[07:31] *** zakharyas joined
[07:40] *** domidumont joined
[09:59] <jnthn> Aww, no dalek

[10:00] <jnthn> Just pushed a leak fix, and got a proposed fix for the `make test` regression at HEAD also

[10:04] *** dalek joined
[10:04] *** p6lert_ joined
[10:04] *** synopsebot joined
[10:04] *** Geth joined
[10:04] *** synopsebot_ left
[10:04] *** p6lert left
[10:07] <timotimo> oh, we've just been nulling out earlier entries of the eventloop work item list?

[10:09] <jnthn> Yup

[10:12] <Geth> ¦ MoarVM: 0c014bfb98 | (Jonathan Worthington)++ | src/core/exceptions.c

[10:12] <Geth> ¦ MoarVM: Remove premature opt to unbreak backtraces

[10:12] <Geth> ¦ MoarVM:

[10:12] <Geth> ¦ MoarVM: It seems that this doesn't work out too well in combination with

[10:12] <Geth> ¦ MoarVM: continuations; will need to look into why, but in the meantime this

[10:12] <Geth> ¦ MoarVM: fixes the regression in Rakudo `make test` and preserves the leak fix

[10:12] <Geth> ¦ MoarVM: introduced in 25b486dee8.

[10:12] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0c014bfb98

[10:12] <jnthn> ah, it's geth that reports these, fo course :)

[10:12] <jnthn> That resolves the regression in Rakudo `make test`, so we can bump it

[10:17] *** domidumont left
[10:17] <timotimo> i gave hack a little kick

[10:59] <Guest16965> oh, jnthn++ is on a bug fixing streak

[11:11] <Geth> ¦ MoarVM: 64679b9993 | (Jonathan Worthington)++ | 5 files

[11:11] <Geth> ¦ MoarVM: Allow selection of max inline size per HLL

[11:11] <Geth> ¦ MoarVM:

[11:11] <Geth> ¦ MoarVM: It's clear from measurements that the number that makes sense for Rakudo

[11:11] <Geth> ¦ MoarVM: is a bit on the high side for NQP. Make it possible to set a maximum

[11:11] <Geth> ¦ MoarVM: inline size limit per HLL.

[11:11] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/64679b9993

[11:11] <Geth> ¦ MoarVM: 9cd8a06df3 | (Jonathan Worthington)++ | src/spesh/inline.h

[11:11] <Geth> ¦ MoarVM: Set the default inline max size to 192 bytes

[11:11] <Geth> ¦ MoarVM:

[11:11] <Geth> ¦ MoarVM: Rakudo will set the 384 from before in its HLL config. Meanwhile, some

[11:11] <Geth> ¦ MoarVM: measurements show that this number seems to come out best for NQP code,

[11:11] <Geth> ¦ MoarVM: or at least for the kind of NQP code that's most common (compiling Perl

[11:11] <Geth> ¦ MoarVM: 6 source). On My Machine, I observe:

[11:11] <Geth> ¦ MoarVM:

[11:11] <Geth> ¦ MoarVM: <…commit message has 10 more lines…>

[11:11] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/9cd8a06df3

[11:14] <jnthn> And an opt one too, ;)

[11:15] <jnthn> Lunch time now, then got some other tasks this afternoon :)

[11:18] *** zakharyas left
[11:58] *** domidumont joined
[13:03] *** robertle left
[13:04] *** zakharyas joined
[13:07] *** robertle joined
[13:16] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/04/08/2019-14-challenge-taking-off/

[13:38] *** [Coke] joined
[13:38] *** [Coke] left
[13:38] *** [Coke] joined
[13:42] *** robertle left
[13:49] *** robertle joined
[13:52] *** lucasb joined
[14:01] *** [Coke] left
[15:59] *** domidumont left
[16:00] *** robertle left
[16:29] *** zakharyas left
[16:56] *** robertle joined
[17:23] *** domidumont joined
[17:35] <jnthn> Hm, curious. Put in some more accurate tracking of when a return handler is needed, so we can generate less of them, which'll lead to smaller bytecode and maybe less PHIs and thus perhaps less guards. Seems to help.

[17:35] <jnthn> But...it tickles some kind of spesh inline bug where the handler goes missing :/

[17:35] <jnthn> I guess somehow before, there was some other handler in place that hid the bug

[17:59] *** Kaiepi left
[18:00] *** Kaiepi joined
[18:15] * jnthn gives up for today

[18:20] *** kawaii left
[18:20] *** kawaii joined
[18:44] *** Kaiepi left
[18:46] *** Kaiepi joined
[18:50] *** domidumont left
[18:55] *** brrt joined
[18:55] <brrt> ohai #moarvm

[18:55] <yoleaux> 6 Apr 2019 09:34Z <patrickb> brrt: Have you seen the gsoc linking proposal?

[18:55] <yoleaux> 6 Apr 2019 09:35Z <patrickb> brrt: Also did you notice that in rakudo/master the perl6 executable already is no longer a shell script but instead a binary?

[18:55] <brrt> .tell patrickb yes, I have seen it, I couldn't really do anything with it

[18:55] <yoleaux> brrt: I'll pass your message to patrickb.

[18:55] <brrt> .tell patrickb actually I had not

[18:55] <yoleaux> brrt: I'll pass your message to patrickb.

[19:07] *** Kaiepi left
[19:51] *** Kaiepi joined
[20:05] <brrt> turns out I don't have a clue how SSE instructions really work

[20:33] *** brrt left
[20:37] <timotimo> how they *really* work, eh? me kind of neither tbh ...

[20:37] <timotimo> that shouldn't come as a surprise i suppose

[23:51] *** lucasb left
