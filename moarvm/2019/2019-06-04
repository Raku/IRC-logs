[00:01] <timotimo> good question :\

[00:01] <timotimo> could just set it to 0 if it goes below 0

[00:07] <MasterDuke> then that is the right place? no other place(s) i should be doing anything?

[00:08] <timotimo> i think that ought to be the only place

[00:09] <MasterDuke> ugh, i don't know how to detect overflow in c. let's just try a hack for now...

[00:10] <timotimo> just compare the values before subtracting :)

[00:11] <MasterDuke> that's what i'm doing, but what if `pcn->total_entries * tcpds->tc->instance->profiling_overhead` is so big it wraps around and then is less that exclusive_time?

[00:13] <timotimo> oh

[00:13] <timotimo> maybe it would be best to google that, there's surely a few gotchas that i wouldn't think of immediately

[00:19] <MasterDuke> ohhh!

[00:20] <MasterDuke> that made have made a real difference

[00:20] <MasterDuke> *may have

[00:22] <MasterDuke> btw, completely unrelated, but i found it amusing. before lunch on this first day of the intro to python class i'm taking this week i already had a PR in to cpython

[00:22] <timotimo> nice

[00:25] <MasterDuke> just some whitespace fixes to a couple docstrings and the output of `pydoc3 --help`, but it was fun

[00:26] <MasterDuke> so a fresh profile without my changes has identity in 12th place, with 1514399 entries and 77.64ms exclusive

[00:26] <MasterDuke> after my most recent change, it's really far down, same number of entries, 0.0ms exclusive

[00:46] <MasterDuke> timotimo: this is what the patch looks like now https://gist.github.com/MasterDuke17/2dac190140c56447eeb175b58151f8b0

[00:47] <timotimo> you could debug-print how much the overhead is larger than the exclusive time

[00:47] <timotimo> that's perhaps interesting

[00:53] <MasterDuke> https://gist.github.com/MasterDuke17/ab7108070054f92e4cab5313033ea3f8

[00:55] <timotimo> i don't see a " = 0"

[00:56] <MasterDuke> those are only printed in the `if (exclusive_time - overhead > exclusive_time)` branch

[00:57] <timotimo> oh

[01:00] <MasterDuke> some of the differences are pretty close to 0, but some are pretty big

[01:06] *** AlexDaniel left
[01:38] <timotimo> bedtime, gnite!

[01:38] <timotimo> (actually far past)

[01:38] <MasterDuke> later...

[02:39] *** discord6 left
[02:42] *** discord6 joined
[02:42] *** discord6 left
[02:42] *** discord6 joined
[02:47] *** discord63 joined
[02:48] *** discord63 left
[02:49] *** synopsebot_ joined
[02:49] *** synopsebot left
[02:49] *** Geth_ joined
[02:55] *** discord6 left
[02:58] *** discord6 joined
[02:59] *** discord6 left
[03:00] *** squashable6 left
[03:05] *** squashable6 joined
[03:23] *** discord6 joined
[03:24] *** Voldenet left
[03:28] *** discord6 left
[03:29] *** Voldenet joined
[03:29] *** Voldenet left
[03:29] *** Voldenet joined
[03:49] *** Geth left
[03:49] *** synopsebot_ left
[03:50] *** Geth_ left
[03:54] *** Geth joined
[03:54] *** synopsebot joined
[03:58] *** Geth left
[03:58] *** synopsebot left
[04:08] *** Geth joined
[04:08] <MasterDuke> looks like geth was missing when i created https://github.com/MoarVM/MoarVM/pull/1111

[04:15] *** synopsebot joined
[04:34] *** Geth left
[04:34] *** synopsebot left
[04:39] *** Geth joined
[04:39] *** synopsebot joined
[04:46] *** Geth left
[04:47] *** Geth joined
[04:57] *** robertle left
[05:05] *** synopsebot left
[05:12] *** Geth left
[05:14] *** synopsebot joined
[05:18] *** synopsebot left
[05:21] *** synopsebot joined
[05:21] *** Geth joined
[05:32] *** Geth left
[05:32] *** synopsebot left
[05:39] *** patrickb joined
[05:40] *** Geth joined
[05:42] *** synopsebot joined
[05:49] *** synopsebot left
[05:50] *** Geth left
[05:52] *** synopsebot joined
[05:53] *** discord6 joined
[05:54] *** Geth joined
[05:57] *** discord6 left
[05:58] *** discord6 joined
[05:59] *** discord6 left
[06:02] *** discord6 joined
[06:04] *** discord6 left
[06:04] *** Geth_ joined
[06:04] *** discord6 joined
[06:04] *** discord6 left
[06:04] *** discord6 joined
[06:05] *** Geth left
[06:06] *** discord6 left
[06:06] *** discord6 joined
[06:06] *** discord6 left
[06:06] *** discord6 joined
[06:07] *** discord6 left
[06:08] *** synopsebot_ joined
[06:08] *** synopsebot left
[06:12] *** discord6 joined
[06:12] *** discord6 left
[06:12] *** discord6 joined
[06:19] *** domidumont joined
[07:11] *** TimToady left
[07:19] *** TimToady joined
[08:41] <nwc10> good *, #moarvm

[08:51] *** lizmat left
[09:11] *** lizmat joined
[09:17] <jnthn> o/

[09:22] <nwc10> \o

[09:22] <nwc10> I was about to typo that as o\

[09:23] <lizmat> ohoh

[09:34] *** zakharyas joined
[10:08] *** domidumont left
[10:26] <Guest12727> jnthn: should I report the error, when running t/spec/S04-phasers/in-loop.t, uncovered by https://github.com/MoarVM/MoarVM/commit/9ed86e4c95f929f2960e87c83ea009fe62bf366e

[10:29] <jnthn> Guest12727: Yes, please

[10:29] <jnthn> That's odd, I wonder if it's scribbling on an object header flag somewhere...

[10:30] *** lizmat left
[10:35] <nwc10> http://pyfound.blogspot.com/2019/06/python-language-summit-lightning-talks.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+PythonSoftwareFoundationNews+%28Python+Software+Foundation+News%29 -- The asyncio philosophy is to avoid mixture by converting all blocking code to asynchronous coroutines, but converting a huge codebase all at once is intractable. ‚ÄúIt's a harder problem than moving

[10:35] <nwc10> from Python 2 to 3,‚Äù he said, ‚Äúbecause at least I can go gradually from Python 2 to 3.‚Äù

[10:36] <nwc10> "fixed in six" ?

[10:36] <timotimo> Guest12727: could it be rakudo's extops aren't using the up-to-date flags?

[10:36] <nwc10> (I can't remember who coined that phrase, but rgs used it a lot)

[10:37] <timotimo> hm. i think it should be possible to use valgrind client requests to lock object headers except for operations that are explicitly allowed to change them

[10:37] <jnthn> nwc10: It's not just a huge codebase problem, if they mean the problem I think they mean

[10:38] <jnthn> Hm, or maybe not, but...

[10:39] <jnthn> It reminds me of when using Node.js and needing to do something that would take time, e.g. be async, but the library I was using didn't provide for doing anything async at that point, and there's no escape hatch really.

[10:39] <jnthn> But since they mention "coroutines" then in theory you can yield anywhere

[10:39] <jnthn> But in practice, I dunno :)

[10:40] <nwc10> is this like "it said Win95 or better, so I used a Mac" -- "so I used Cro" ?

[10:40] <jnthn> :)

[10:41] <nwc10> I admit that I'm possibly missing details on any of this stuff. I'm finding it interesting partly from the bigguer picture perspective - the problems that Python is facing, and what solutions they are finding

[10:41] <nwc10> the problems seem to map reasonably closely

[10:41] <nwc10> hence my desire to steal solutions

[10:43] <Guest12727> timotimo: nqp and MoarVM were bumped yesterday so I guess that the extops should be ok

[10:45] <Guest12727> it crashes every other run, with assertion error, if MoarVM is compiled with --no-optimize. If it is compiled with opts it crashes, SEGV, one times in 100

[10:46] <timotimo> does turning jit or spesh off make a difference?

[10:46] <Guest12727> MVM_SPESH_INLINE_DISABLE=1 makes the problem vanish

[10:47] <Guest12727> timotimo: here's the assertion crash, https://gist.github.com/dogbert17/ebfd1ff0ac02c4a86f4f6218f4d9b208

[10:47] <timotimo> no inlining also probably means much less escape analysis

[11:01] *** zakharyas left
[11:02] *** AlexDaniel joined
[11:46] *** ggoebel joined
[12:06] *** pamplemousse joined
[12:08] *** zakharyas joined
[12:16] *** zakharyas left
[12:21] *** zakharyas joined
[12:22] *** domidumont joined
[13:28] *** brrt joined
[13:53] *** zakharyas left
[13:56] <brrt> \o

[13:56] <pamplemousse> o/

[14:00] *** brrt left
[14:11] <Geth_> ¬¶ MoarVM/more-pea: 47 commits pushed by (Jonathan Worthington)++

[14:11] <Geth_> ¬¶ MoarVM/more-pea: review: https://github.com/MoarVM/MoarVM/compare/25ea4a09ee4c...625910cf9cb4

[14:11] <jnthn> (rebase)

[14:13] <nwc10> no new things to tempt ASAN with (yet?)

[14:14] <jnthn> :)

[14:14] <jnthn> Well, some Rakudo spectests run with MVM_SPESH_BLOCKING=1 errupt with SEGV :)

[14:14] <jnthn> And a couple seem to hang

[14:14] <jnthn> So certainly some work to do yet :)

[14:15] <nwc10> "have fun' (but not *too* much fun)

[14:15] <japhb> .oO( rebass: When the DJ drops it twice )

[14:18] <jnthn> Darn, every crash I've found so far happens in concurrent code

[14:18] <jnthn> I was really hoping for a case that might be easier to debug :)

[14:19] *** brrt joined
[14:20] <jnthn> Hm, many start with a backtrace like

[14:20] <jnthn> (gdb) p MVM_dump_backtrace(tc)

[14:20] <jnthn>    at SETTING::src/core/Promise.pm6:44  (/home/jnthn/dev/rakudo/CORE.setting.moarvm:BUILD)

[14:20] <jnthn>  from SETTING::src/core/Promise.pm6:38  (/home/jnthn/dev/rakudo/CORE.setting.moarvm:new)

[14:20] <jnthn>  from SETTING::src/core/Promise.pm6:249  (/home/jnthn/dev/rakudo/CORE.setting.moarvm:start)

[14:20] <jnthn> So yeah, if Promise starting blows, that'll blow up many things :)

[14:47] *** lizmat joined
[14:58] *** brrt left
[15:11] <pamplemousse> Progress update blog post is out! https://yakshavingcream.blogspot.com/2019/06/the-linker-for-perl-6.html

[15:18] <jnthn> grmbl, after a wild goose chase I realized it's because it's not nulling non-auto-viv registers out

[15:21] <jnthn> Which is annoying because I was planning to re-work object creation some also, and now I might go and do that first :)

[15:22] <jnthn> Since what I had in mind would solve this problem without having to write any more code

[15:36] *** patrickb left
[15:52] *** sena_kun joined
[15:54] *** domidumont left
[15:56] * nwc10 tries to imagine how to play Jenga by stacking yaks

[15:56] <nwc10> it's unclear if it would work

[16:02] *** brrt joined
[16:35] <dogbert17> jnthn: M#1112

[16:35] <synopsebot_> M#1112 [open]: https://github.com/MoarVM/MoarVM/issues/1112 Assertion error or SEGV when running t/spec/S04-phasers/in-loop.t

[16:36] <nwc10> Oh I'd missed that

[16:36] <nwc10> moar: src/gc/collect.c:589: MVM_gc_collect_free_nursery_uncopied: Assertion `item->sc_forward_u.forwarder != ((void *)0)' failed.

[16:36] <nwc10> Aborted

[16:36] <nwc10> ASAN considers this problem boring and says nothing

[16:37] <jnthn>     vm_code->header.flags |= RAKUDO_FIRST_FLAG;

[16:37] <jnthn> It's because RAKUDO_FIRST_FLAG needs to be a bit that doesn't mean something to the GC :)

[16:39] <dogbert17> so the value of that constant has to change ?

[16:40] <jnthn> Yes

[16:41] <jnthn> 16384 is probably safest

[16:42] <dogbert17> it's 128 atm

[16:42] <jnthn>     MVM_CF_FORWARDER_VALID = 128,

[16:42] <jnthn> haha

[16:42] <jnthn> that'll go very badly

[16:42] <dogbert17> :)

[16:44] <dogbert17> the file defining this is in the Rakudo repo it seems

[16:44] *** robertle joined
[16:45] <jnthn> Yes, it should just be a change there

[16:45] <dogbert17> me, you or nwc10 :)

[16:45] * dogbert17 tries it out

[16:45] <jnthn> I'm in a branch trying to put Rakudo back together after some MoarVM changes :)

[16:49] <dogbert17> a few days ago 128 meant MVM_CF_GEN2_LIVE = 128

[16:50] <jnthn> That'd be less likely to break, but still in theory could

[16:51] <dogbert17> is it enough to rebuild rakudo?

[16:52] <jnthn> brrt: Yes

[16:54] <dogbert17> it seems to be working a lot better now :)

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: 504835a7dd | (Jonathan Worthington)++ | 3 files

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: Prepare for more general P6opaque setup

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup:

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: This will initially just be about initial setup of VMNull so we need

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: not check for it on every read, but will then get exposed as part of

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: the REPR interface in order to allow non-lazy (that is, without the

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: auto-viv) object setup to be specified too.

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: review: https://github.com/MoarVM/MoarVM/commit/504835a7dd

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: 9638d3a71c | (Jonathan Worthington)++ | 4 files

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: Null non-auto-viv P6opaque object slots at init

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup:

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: And when we specialize the `create`, then spit out instructions to

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: initialize the slots to VMNull. This in turn means we can get rid of the

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: NULL checks on attribute access, so it can JIT into something far

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: simpler.

[16:55] <Geth_> ¬¶ MoarVM/p6o-setup: review: https://github.com/MoarVM/MoarVM/commit/9638d3a71c

[16:56] <jnthn> oops, I meant to aim at dogbert17 above :)

[16:56] <jnthn> brrt: You'll probably be glad to see the p6o-setup branch though :-)

[16:57] <jnthn> brrt: I've realized that in Rakudo we only need lazy attr init in the case that an attribute has a default AND appears in a class that ha a BUILD. In all other cases, we don't actually need it.

[16:58] <jnthn> brrt: And so can eliminate the laziness :)

[16:58] <jnthn> We'll then spesh that into a sequence of normal object setup instructions

[16:58] <jnthn> Which in turn will work out much better for the escape analyzer than trying to figure out the auto-viv stuff :)

[17:06] <brrt> oh, hey

[17:06] <brrt> that is pretty cool

[17:06] <jnthn> Yeah, should be far tighter JIT output in a load of cases

[17:06] <brrt> \o/

[17:18] <jnthn> dinner &

[17:27] <dogbert17> jnthn: have sent a PR

[17:43] * brrt should have dinner as well

[17:43] *** brrt left
[18:59] *** lizmat left
[19:00] *** lizmat joined
[19:02] <timotimo> hum. i'm rebasing my confprog changes on latest origin/master and it's giving me such odd conflicts

[19:10] <timotimo> why are there add/add conflicts?

[19:13] <nwc10> I don't know. I don't think that I've met these before. Is git helpful enough to tell you which commit it thinks added the files on each "side"?

[19:14] <nwc10> did it get the rebase start point wrong? (ie the same commit is on both "sides" - the real master, and the string of commits it wants to rebase)?

[19:14] <nwc10> I am awake, but I hope someone else with a better idea is also awake

[19:23] <timotimo> it does give me one commit message as well as "HEAD" for the other side

[19:24] <nwc10> er, not sure what to do.

[19:24] <nwc10> HEAD (I think) is the detached head that is your "in progress" rebase

[19:24] <timotimo> that makes sense

[19:24] <nwc10> I don't know if there's a way to get the planned list of things it was giong to do

[19:25] <nwc10> ie, what you would get in your editor at the start if you do --interactive

[19:25] <nwc10> if you're not going to loose anything by --abort

[19:25] <nwc10> then I suggest trying to figure out which commit it's talking about with the commit message you see currently

[19:25] <nwc10> then --abort

[19:25] <nwc10> then try again with --interactive

[19:25] <nwc10> and see if commits with that message are *both* in the list of things it intends to rebase

[19:26] <nwc10> and also the thing it intends to rebase onto

[19:26] <nwc10> "the thing it intends to rebase onto" being master?

[19:26] <timotimo> https://gist.github.com/timo/18fab69687fbe85c429a9dd9d3687126 here's some deets

[19:27] <nwc10> also, I can't totally be helpful right now as I'm trying to untangle the cazy history of the work code that got the better of me this morning

[19:27] <timotimo> oh you're also in commit history hell :)

[19:28] <nwc10> yes, ish. this is (literally) a line in this 10 year old thing with # wtf

[19:28] <nwc10> that is now

[19:28] <timotimo> :D

[19:28] <nwc10> if (0) # wtf

[19:28] <nwc10> but I think was

[19:28] <nwc10> if (1) # wtf

[19:28] <nwc10> earlier

[19:28] <nwc10> there's an else block

[19:28] <nwc10> I missed that this morning when everythign on the time tracking system was titsup

[19:29] *** lizmat left
[19:29] <timotimo> i *think* i have rerere turned on

[19:29] <timotimo> hum.

[19:29] <timotimo> no, i don't think i do

[19:29] <nwc10> I'm sort of aware of what rerere is.

[19:30] <nwc10> OK. had you said "and I have it enabled' then I know this problem is "above my paygrade"

[19:30] <nwc10> I've never used it

[19:30] <timotimo> it'll remember how you resolved a given conflict "the last time" and allows you to just let it do the same thing you did before again

[19:31] <nwc10> oh, erk, a Yak

[19:31] <nwc10> (mine, not yours)

[19:31] <nwc10> timotimo: that summary is about as much as I know about it

[19:31] <timotimo> right

[19:32] <timotimo> um

[19:32] <timotimo> it does look like it's trying to put the same commits on top of each other

[19:32] <nwc10> aha. yes, had that happen

[19:32] <nwc10> I can't remember why

[19:33] <timotimo> check "start on a parser/compiler" appearing twice

[19:33] <timotimo> what the flying spaghetti monster?

[19:33] <nwc10> "I don't know" and I think I need to concentate ony my small yak's nest

[19:33] <nwc10> (sorry)

[19:34] <nwc10> I hope a refereshed jnthn reappears soon

[19:34] <nwc10> unlike Flash, he might "saveeveryoneofus"

[19:34] <nwc10> (yes, the Yak is "I guess this would be easier if I first deleted the code to serve the Flash policy-file-request XML")

[19:35] <timotimo> flash, as in Macromedia Flash?

[19:35] <nwc10> yes

[19:35] <nwc10> there is a lot of cruft

[19:35] <timotimo> could be worse. could be shockwave3d

[19:35] <nwc10> the flash implementation was deleted years ago

[19:36] <timotimo> anyway, i'm quite glad to see that none of these conflicts were actually something i need to be worried about

[19:43] <timotimo> it seems like i recently merged one version of origin/configurable-subsystems into my local configurable-subsystems

[19:43] <timotimo> that's where the duplication seems to come from, both had copies of the same changes but based on different other commits

[19:44] <timotimo> resetting before that merge commit and rebasing gives me a clean rebase run

[19:46] <nwc10> That seems to make sense (the "why rebase might be confused")

[20:13] <Geth_> ¬¶ MoarVM/configurable-subsystems: 17 commits pushed by (Timo Paulssen)++

[20:13] <Geth_> ¬¶ MoarVM/configurable-subsystems: review: https://github.com/MoarVM/MoarVM/compare/7252cb0aa96a...6a1732de6645

[20:13] *** pamplemousse left
[20:28] *** Kaiepi joined
[21:01] *** lizmat joined
[21:51] *** lizmat left
[22:05] *** robertle left
[23:00] *** Altai-man_ joined
[23:02] *** sena_kun left
[23:03] *** lizmat joined
[23:05] *** sena_kun joined
[23:07] *** Altai-man_ left
