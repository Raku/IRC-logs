[00:22] *** anatofuz joined
[00:27] *** anatofuz left
[00:40] *** anatofuz joined
[00:42] *** anatofuz_ joined
[00:42] *** anatofuz left
[00:43] *** anatofuz joined
[00:43] *** anatofuz_ left
[01:32] *** anatofuz left
[01:33] *** anatofuz joined
[01:38] *** anatofuz left
[01:38] *** anatofuz joined
[01:45] *** anatofuz left
[01:46] *** anatofuz joined
[01:53] *** anatofuz left
[02:12] *** anatofuz joined
[02:18] *** anatofuz left
[02:19] *** anatofuz joined
[03:15] *** anatofuz left
[03:20] *** japhb left
[03:24] *** anatofuz joined
[03:26] *** anatofuz_ joined
[03:29] *** anatofuz left
[04:01] *** anatofuz_ left
[04:02] *** anatofuz joined
[04:06] *** anatofuz left
[04:12] *** anatofuz joined
[04:20] *** japhb joined
[05:26] *** anatofuz left
[05:27] *** anatofuz joined
[05:31] *** anatofuz left
[05:33] *** anatofuz joined
[06:10] *** domidumont joined
[06:44] *** anatofuz left
[06:45] *** anatofuz joined
[06:50] *** anatofuz left
[06:58] <nine> So, the morale of the story is: beware of the closure! Failures can become serialized, even if they are just the result of an indirect lookup and the result is just used in 2 lines of code if those lines create a lexical variable and further down the function a closure is created.

[06:58] <nine> Even if the closed over code doesn't actually use that variable!

[06:59] <nine> And of course, this being Perl 6, even if statements can create closures...

[07:36] *** anatofuz joined
[07:40] *** zakharyas joined
[07:41] *** sena_kun joined
[07:47] *** anatofuz left
[07:49] *** anatofuz joined
[07:53] *** anatofuz left
[07:53] *** anatofuz_ joined
[07:53] *** anatofuz_ left
[07:54] *** anatofuz joined
[08:42] *** anatofuz_ joined
[08:42] *** anatofuz_ left
[08:46] *** anatofuz left
[08:49] *** anatofuz joined
[08:54] *** anatofuz left
[08:56] *** anatofuz joined
[10:19] <Kaiepi> can M#1166 be merged today? i was hoping to get started on sync udp/unix/raw socket support today

[10:19] <synopsebot> M#1166 [open]: https://github.com/MoarVM/MoarVM/pull/1166 [IP6NS Grant] Improve hostname resolution

[10:22] *** anatofuz left
[10:58] *** zakharyas left
[11:00] *** zakharyas joined
[11:51] <lizmat> Kaiepi: it seems to have conflicts ?

[11:51] <lizmat> in src/io/syncsocket.c

[11:59] <Kaiepi> ah, i'll fix those in a sec

[12:05] *** zakharyas left
[12:15] <Kaiepi> lizmat, fixed

[12:16] <lizmat> the leak issue is also fixed? https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2019-09-06#l1

[12:19] <Kaiepi> yes

[12:19] <Geth_> Â¦ MoarVM/master: 8 commits pushed by (Ben Davies)++, (Elizabeth Mattijsen)++

[12:19] <Geth_> Â¦ MoarVM/master: 5533a78734 | Use more appropriate flags in MVM_io_resolve_host_name

[12:19] <Geth_> Â¦ MoarVM/master: 5bf9e00c4a | Try using all resolved addresses before throwing

[12:19] <Geth_> Â¦ MoarVM/master: 2b835211d3 | Actually make async sockets work again

[12:19] <Geth_> Â¦ MoarVM/master: 3fa99b4dc3 | Fix some memory issues and race conditions with async sockets

[12:19] <Geth_> Â¦ MoarVM/master: 2f4798b859 | Actually fix GC in async sockets

[12:19] <Geth_> Â¦ MoarVM/master: d9a067d46b | Never call freeaddrinfo more than once, always hold on to socket errors

[12:19] <Geth_> Â¦ MoarVM/master: 379ec77a1b | Ensure UDP sockets actually get bound when binding them

[12:19] <Geth_> Â¦ MoarVM/master: 39f5774386 | Merge pull request #1166 from Kaiepi/ipv6-unsupported

[12:20] <Geth_> Â¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/01f85c8bf833...39f5774386bb

[12:20] <lizmat> Kaiepi: have fun!

[12:21] <Kaiepi> sweet, thanks

[12:28] *** brrt joined
[12:40] <brrt> \o

[12:53] *** lucasb joined
[12:57] <nwc10> o/

[13:03] *** sena_kun left
[13:04] <brrt> ohai nwc10

[13:36] *** Guest3346 joined
[13:37] <Guest3346> brrt, should we remind you of sp_bind or whatever the name was?

[13:38] <brrt> yes, that's a decent plan

[13:38] <brrt> it's on the back of my mind

[13:38] <brrt> it's just very annoying to debug

[13:39] <Guest3346> you mentioned something like that some time ago

[13:40] <Guest3346> are the bisect tools more or less unusable in this case?

[13:56] *** zakharyas joined
[13:59] <brrt> I'm not quite sure why I haven't been able to pin it down yet

[14:07] <Guest3346> perhaps you just need a few more minutes of debugging before the solution presents itself

[14:17] <brrt> hehe

[14:17] <brrt> I think you may underestimate the difficulty of debugging JIT problems

[14:17] <brrt> more like hours

[14:19] *** AlexDaniel` left
[14:24] <Guest3346> I might have underestimated the the problem a tiny bit :-)

[14:24] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/10/07/2019-40-quick-syntaxing/

[14:27] <brrt> it's probably a simple problem, but a JIT has many moving parts, most of them not directly interfacing with the user, so hard to trigger and test

[14:28] <brrt> lizmat++

[15:23] *** sena_kun joined
[15:24] *** sena_kun left
[15:55] *** zakharyas left
[16:03] *** domidumont left
[16:04] *** brrt left
[16:29] *** domidumont joined
[16:34] *** AlexDaniel` joined
[18:53] *** brrt joined
[19:01] *** domidumont left
[19:58] *** hankache joined
[19:58] <hankache> Hello *

[19:59] <hankache> I found a weird issue while building Rakudo on WIndows 10

[19:59] <hankache> I tried three sets of settings:

[19:59] <hankache> 1) perl Configure.pl --backends=moar --gen-moar --moar-option="--cc=cl" --moar-option="--ld=link" --moar-option="--make=nmake" --relocatable

[20:00] <hankache> 2) perl Configure.pl --backends=moar --gen-moar --moar-option="--cc=cl" --moar-option="--make=nmake" --relocatable

[20:00] <hankache> 3) perl Configure.pl --backends=moar --gen-moar --moar-option="--cc=gcc" --moar-option="--make=gmake" --relocatable

[20:01] <brrt> and what happened?

[20:01] <hankache> All of them build correctly and install most modules I tested except for LWP::Simple

[20:02] <hankache> using option 1 the tests of LWP::Simple fails

[20:02] <hankache> PS: Windows 10

[20:04] <hankache> The culprit seems to be --moar-option="--ld=link"

[20:05] <hankache> This is the failing test: https://github.com/perl6/perl6-lwp-simple/blob/46d3fdb698b5ec0cd819e533abf2e8d235f18765/t/getstore.t#L38

[20:06] <hankache> MasterDuke++ proposed I raise the issue here instead of #perl6-dev

[20:13] <hankache> Am I missing something?

[20:43] *** hankache left
[20:46] *** brrt left
[21:28] <dogbert17> valgrind seems to be upset with t/spec/S17-procasync/encoding.t

[21:29] <dogbert17> ==17964== Invalid read of size 4

[21:29] <dogbert17> ==17964==    at 0x5155F4A: MVM_string_utf8_decodestream (utf8.c:453)

[22:05] *** squashable6 left
[22:08] *** squashable6 joined
[23:26] *** anatofuz joined
[23:48] *** anatofuz left
[23:48] *** anatofuz joined
[23:50] *** anatofuz left
[23:50] *** anatofuz joined
