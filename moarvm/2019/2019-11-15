[00:57] *** benchable6 left
[00:57] *** quotable6 left
[00:57] *** statisfiable6 left
[00:57] *** coverable6 left
[00:57] *** nativecallable6 left
[00:57] *** reportable6 left
[00:57] *** committable6 left
[00:57] *** unicodable6 left
[00:57] *** releasable6 left
[00:57] *** bloatable6 left
[00:57] *** shareable6 left
[00:57] *** greppable6 left
[00:57] *** notable6 left
[00:57] *** squashable6 left
[00:57] *** greppable6 joined
[00:57] *** unicodable6 joined
[00:58] *** committable6 joined
[00:58] *** bloatable6 joined
[00:58] *** releasable6 joined
[00:59] *** quotable6 joined
[00:59] *** shareable6 joined
[00:59] *** statisfiable6 joined
[00:59] *** reportable6 joined
[00:59] *** coverable6 joined
[01:00] *** squashable6 joined
[01:00] *** nativecallable6 joined
[01:00] *** notable6 joined
[01:00] *** benchable6 joined
[01:11] *** chansen_ joined
[01:12] *** tbrowder joined
[06:09] *** sena_kun joined
[06:14] *** robertle left
[06:31] *** Util_ left
[06:38] *** sena_kun left
[06:38] *** domidumont joined
[06:41] *** domidumont left
[06:48] *** Util joined
[06:48] *** lizmat joined
[06:48] *** bartolin joined
[06:48] *** camelia joined
[07:15] *** Util left
[07:15] *** lizmat left
[07:15] *** bartolin left
[07:15] *** camelia left
[07:16] *** AlexDaniel left
[07:16] *** Util joined
[07:16] *** lizmat joined
[07:16] *** bartolin joined
[07:16] *** camelia joined
[07:16] *** AlexDaniel joined
[07:17] *** AlexDaniel left
[07:17] *** AlexDaniel joined
[07:47] *** squashable6 left
[07:49] *** squashable6 joined
[08:22] *** brrt joined
[08:23] *** robertle joined
[10:17] *** sena_kun joined
[10:18] <brrt> \o

[10:26] *** robertle left
[10:34] <nwc10> o/

[10:43] <brrt> quiet here the last few days

[10:43] <brrt> well, nine++ fixed bugs

[10:49] *** robertle joined
[10:56] *** brrt left
[11:08] *** Altai-man_ joined
[11:10] *** sena_kun left
[11:14] *** robertle left
[11:17] *** robertle joined
[11:18] *** hankache joined
[11:51] <lizmat> I think a lot of people are waiting for a MoarVM release

[11:51] <lizmat> seems samcv is too busy IRL  :-(

[11:59] *** hankache left
[12:28] *** jjatria joined
[12:30] *** hankache joined
[12:45] <samcv> yeah, sorry about that. i have the flu now as well. after being really busy IRL i got sick

[12:46] <samcv> if anybody else wants to do up the changelog this month, I can do the minting

[12:57] <lizmat> samcv: get well soon!

[13:09] *** sena_kun joined
[13:10] *** Altai-man_ left
[13:51] *** lucasb joined
[14:00] *** brrt joined
[14:47] *** brrt left
[14:51] *** squashable6 left
[14:51] *** squashable6 joined
[15:08] *** Altai-man_ joined
[15:10] *** sena_kun left
[15:20] *** AlexDaniel` joined
[15:50] *** robertle left
[15:56] *** robertle joined
[16:10] *** robertle left
[16:12] *** robertle joined
[16:18] *** hankache left
[16:54] *** domidumont joined
[17:02] *** domidumont left
[17:09] *** sena_kun joined
[17:10] *** Altai-man_ left
[17:19] *** robertle left
[19:08] *** Altai-man_ joined
[19:10] *** sena_kun left
[20:09] *** squashable6 left
[20:10] *** squashable6 joined
[20:15] *** hankache joined
[21:08] <MasterDuke> is this something moarvm could use? https://github.com/zwegner/faster-utf8-validator

[21:09] *** sena_kun joined
[21:11] *** Altai-man_ left
[21:41] <jnthn> MasterDuke: Hard to say, since we don't actually want to validate it, but rather transform it into an internal NFG representation, and "validator" sounds like something that would be applicable if you wanted to keep the same representation and just check it first.

[21:41] <jnthn> I mean, we do want to validate it along the way, of course, but it's not our whole process.

[21:42] <jnthn> There may well be things to learn, though I've spent hours tuning that lot already :)

[21:42] <jnthn> But patches with callgrind measurements welcome! :)

[21:43] <jnthn> "random ASCII text at .09 cycles/byte" => this is impressive, though

[21:43] <jnthn> Especially since we can potentially do a scheme whereby we walk through the thing until we find non-ASCII

[21:49] <MasterDuke> hm. this is pretty far from my area of expertise. if anybody else wants to take a crack at it please do so

[21:50] <Voldenet> decode_utf8_byte and add_codepoint_to_buffer could really use some vectorization

[21:58] <Voldenet> fwiw "reading utf8 string" may not be the best abstraction when dealing with xml/json

[21:59] <Voldenet> .net core introduced Utf8JsonReader which consumes stream and produces a reader - not even using utf8 encoding inbetween makes it a lot faster

[22:00] <Voldenet> (reading is around 2x faster, writing is around 1.5x faster)

[22:11] <jnthn> We don't do JSON down at the VM level anyway; a Raku module could certainly do it at the Buf level

[22:15] <jnthn> Voldenet: If you know how to do the vectorization and have time/motivation to look at it, I'd be very glad to see that.

[22:31] *** evalable6 left
[22:32] *** jjatria left
[22:32] *** jjatria joined
[22:33] *** evalable6 joined
[22:40] *** hankache left
[22:51] <lizmat> jnthn: fwiw, I tried to do a from-json based on Uni, but couldn't get it to go significantly faster  :-(

[22:51] <lizmat> afk&

[23:08] *** Altai-man_ joined
[23:10] *** sena_kun left
[23:19] <jnthn> lizmat: Probably would have more luck on buf/blob, since nine++ optimized those a bunch when doing the bytecode writing

[23:20] *** lucasb left
[23:22] *** Altai-man_ left
