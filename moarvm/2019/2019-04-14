[00:02] *** Kaiepi left
[00:09] *** Kaiepi joined
[00:17] *** Kaiepi left
[00:20] *** Kaiepi joined
[00:43] *** Kaiepi left
[00:44] *** Kaiepi joined
[01:07] *** Kaiepi left
[01:10] *** Kaiepi joined
[01:18] *** squashable6 left
[01:18] *** squashable6 joined
[02:05] *** Kaypie joined
[03:39] *** Kaypie left
[03:39] *** Kaiepi left
[05:37] *** bloatable6 left
[05:37] *** bisectable6 left
[05:37] *** shareable6 left
[05:37] *** benchable6 left
[05:37] *** notable6 left
[05:37] *** committable6 left
[05:37] *** undersightable6 left
[05:37] *** statisfiable6 left
[05:37] *** evalable6 left
[05:37] *** nativecallable6 left
[05:37] *** quotable6 left
[05:37] *** squashable6 left
[05:37] *** reportable6 left
[05:37] *** releasable6 left
[05:37] *** coverable6 left
[05:37] *** unicodable6 left
[05:37] *** greppable6 left
[05:38] *** unicodable6 joined
[05:38] *** squashable6 joined
[05:39] *** bisectable6 joined
[05:39] *** evalable6 joined
[05:39] *** bloatable6 joined
[05:39] *** quotable6 joined
[05:39] *** greppable6 joined
[05:40] *** benchable6 joined
[05:40] *** reportable6 joined
[05:40] *** committable6 joined
[05:40] *** releasable6 joined
[05:41] *** coverable6 joined
[05:41] *** undersightable6 joined
[05:42] *** nativecallable6 joined
[05:42] *** statisfiable6 joined
[05:42] *** notable6 joined
[05:42] *** shareable6 joined
[05:48] *** squashable6 left
[05:54] *** squashable6 joined
[06:23] *** domidumont joined
[06:39] *** Guest16965 left
[07:24] *** squashable6 left
[07:24] *** squashable6 joined
[08:13] *** squashable6 left
[08:15] *** squashable6 joined
[10:49] *** squashable6 left
[10:49] *** squashable6 joined
[11:35] <Ulti_> https://github.com/MoarVM/MoarVM/blob/master/Configure.pl#L205  how important is this? I've only recently (last month or so) had my build abort with it

[11:36] *** Ulti_ is now known as Ulti

[11:55] <timotimo> we could make it not exit immediately, and instead output a gigantic warning at the end of configure

[11:56] <timotimo> in the hopes that if it does indeed go wrong, the user would scroll up and see a screen full of "WARNING WARNING WARNING" and maybe decide to read what it says

[11:59] *** Kaiepi joined
[12:01] <Ulti> yeah my build is fine the GNU tool I have is GNU grep alongside everything else being BSD stuff from core macOS

[12:04] <timotimo> it'd be cool if you could find out what exact check fails there and if we can rely on whatever you have to be fine and make the check less sensitive

[12:07] <Ulti> yeah Im working on it, this is kind of infuriating I've just stripped anything I know I've installed with homebrew and Im still getting the warning

[12:08] <Ulti> I cant actually find that script in the rakudobrew cache though I think its downloading moar then wiping it each time

[12:21] <Ulti> from what I can see this script is tripping

[12:22] <Ulti> ar cc ld make  <--- none of these are GNU

[12:22] <Ulti> not installed and not in my path

[12:23] <Ulti> aha make is

[12:24] <Ulti> but also appears to be built by Apple and is ancient :/ so....

[12:28] <timotimo> should probably be enough to run rakudobrew with a custom PATH?

[12:29] <Ulti> FOUND GNU TOOL /usr/local/opt/llvm/bin/clang

[12:29] <Ulti> errr

[12:29] <Ulti> >____>

[12:30] <Ulti> yup thats the only one its hung up on

[12:30] <timotimo> d'oh, that's what you get when your --version pretends it's something else

[12:30] <Ulti> and it really is clang... but fails the grep -b 'gnu'

[12:31] <Ulti> I feel like we should trust a binary called clang to not secretly be gcc :)

[12:33] <Ulti> yeah there are loads of gnu mentions in that binary

[12:34] <Ulti> ok so the system clang rather than my one from homebrew doesnt have any gnu mentions so that's kind of reasonable

[12:41] <Geth> Â¦ MoarVM: MattOates++ created pull request #1094: Update README.markdown

[12:41] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1094

[12:42] <Ulti> yeah that fixed it, I can try and add an additional check for weird clang as a specific error in the Config

[12:44] <timotimo> what changed in that last line? i see red/green, but no actual change?

[12:47] <Ulti> weird have no idea

[12:48] <Ulti> I used the github editor :/ and didnt touch the last line

[12:48] <timotimo> it's not a "no end of line at end of file" thing, right?

[12:48] <timotimo> i thin that has a special icon for that

[12:49] <Ulti> I'm noticing start up time is super fast recently in relative terms

[12:49] <timotimo> oh?

[12:50] <timotimo> that sounds interesting

[12:52] <Ulti> at least at the level of Rakudo

[13:23] <timotimo> i'm hoping we'll reach a point where fuzzing rakudo (or at the very least nqp) becomes a possibility

[13:24] <timotimo> i mean, it's already possible, but it's so slow that it might as well not work at all

[13:35] <MasterDuke> timotimo: couldn't we fuzz moarvm directly? give something like afl some moar bytecode to start with and let it just mutate that?

[13:35] <timotimo> yeah, i've done that before and it mostly found very easy ways to crash it

[13:36] <timotimo> some ways that moarvm files can be corrupted to make the parser unhappy

[13:37] <timotimo> check bca85b242eb4f54941cb0659562c783d3d460580 for example

[13:38] <MasterDuke> nice

[13:43] <timotimo> and commits later than that also harden against corrupt moarvm files

[13:45] <MasterDuke> and afl couldn't find anything useful after those?

[13:45] <timotimo> it could

[13:46] <timotimo> i'm not sure if i fixed the one where it built a series of static frames that make a loop with their outer pointers

[14:05] *** Kaiepi left
[14:07] *** Kaiepi joined
[14:30] *** Kaiepi left
[14:31] *** Kaiepi joined
[15:09] *** domidumont left
[16:39] *** AlexDaniel left
[17:05] *** domidumont joined
[18:10] *** zakharyas joined
[18:16] *** Kaiepi left
[18:16] *** Kaiepi joined
[19:06] *** domidumont left
[19:12] *** brrt joined
[19:12] <brrt> ohai

[19:12] <timotimo> hey there

[19:37] *** brrt left
[19:42] *** brrt joined
[20:42] *** brrt left
[20:50] <Kaiepi> posted in the wrong channel, check #perl6-dev

[21:00] *** brrt joined
[21:04] *** zakharyas left
[21:06] <brrt> so.... lesson learned

[21:06] <brrt> dynasm calls, what intel manuals call 'movq', 'movd'

[21:06] <timotimo> whoa

[21:06] <brrt> or at least, it emits the right thing

[21:07] <brrt> e.g.

[21:07] <brrt> 'movd xmm0, rcx' in dynasm

[21:07] <timotimo> so double and quad, clearly the opposite of each other and themselves

[21:07] <brrt> is diassembled as 'movq xmm0, rcx'

[21:07] <brrt> now, it so happens that 'movq' is indeed the instruction that I need

[21:08] <brrt> it's just that all our code looks very wrong

[21:08] <timotimo> we'll just have to put comments everywhere that happens

[21:08] <timotimo> but damn ...

[21:08] <timotimo> we could make macros

[21:09] <timotimo> all uppercase for example

[21:10] <brrt> hehe

[21:10] <brrt> maybe that's not such a bad idea though

[21:10] <brrt> the alternative is that I fix the dynasm template

[21:10] <brrt> I mean, I know how to do that?

[21:10] <brrt> I guess?

[21:11] <brrt> (do I?)

[21:11] <timotimo> what's easier? :)

[21:12] <brrt> ignoring it

[21:12] <timotimo> okay, what's the next step up from that? :)

[21:13] <timotimo> the macro thing would almost be trivial, wouldn't it?

[21:13] <timotimo> it'll also make people who want to add to the code look at it and go "huh" without us having to put comments everywhere

[21:14] <timotimo> i bet there's some ludicrous but kind of defendable reason for things to be the way they are ?!?!

[21:17] *** brrt left
[21:52] *** robertle left
[21:56] *** AlexDaniel joined
[22:31] <timotimo> random idea i had while i was trying to fall asleep last night - or maybe at another time, not sure - is to generate a bytecode verifier from the oplist right there in update-ops.p6; perhaps that'll let us come up with one that is much faster

[22:31] <timotimo> though of course that might want to wait until the verifier goes up further in profiles

[23:39] <Kaiepi> is MVMInstance an MVMCollectable?

[23:48] *** evalable6 left
[23:49] <Kaiepi> never mind, i have an MVMThreadContext on hand anyway

[23:50] *** evalable6 joined
[23:50] <Kaiepi> i know 6model stuff can be cast to MVMCollectible, but what else?

