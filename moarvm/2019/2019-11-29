[00:05] *** Altai-man_ joined
[00:06] *** sena_kun left
[00:36] *** colomon joined
[00:38] *** lucasb left
[00:40] *** Altai-man_ left
[01:23] *** MasterDuke left
[01:41] *** colomon left
[01:43] *** colomon joined
[03:18] *** colomon left
[05:08] *** quotable6 left
[05:08] *** statisfiable6 left
[05:08] *** coverable6 left
[05:08] *** shareable6 left
[05:08] *** reportable6 left
[05:08] *** greppable6 left
[05:08] *** releasable6 left
[05:08] *** squashable6 left
[05:08] *** nativecallable6 left
[05:08] *** benchable6 left
[05:08] *** bisectable6 left
[05:08] *** unicodable6 left
[05:08] *** bloatable6 left
[05:08] *** notable6 left
[05:08] *** committable6 left
[05:08] *** coverable6 joined
[05:08] *** reportable6 joined
[05:09] *** shareable6 joined
[05:09] *** greppable6 joined
[05:09] *** squashable6 joined
[05:09] *** bisectable6 joined
[05:09] *** benchable6 joined
[05:09] *** notable6 joined
[05:10] *** quotable6 joined
[05:10] *** nativecallable6 joined
[05:10] *** bloatable6 joined
[05:10] *** statisfiable6 joined
[05:10] *** committable6 joined
[05:11] *** unicodable6 joined
[05:11] *** releasable6 joined
[07:00] *** greppable6 left
[07:00] *** benchable6 left
[07:00] *** shareable6 left
[07:00] *** reportable6 left
[07:00] *** bisectable6 left
[07:00] *** notable6 left
[07:00] *** bloatable6 left
[07:00] *** releasable6 left
[07:00] *** committable6 left
[07:00] *** coverable6 left
[07:00] *** statisfiable6 left
[07:00] *** squashable6 left
[07:00] *** quotable6 left
[07:00] *** unicodable6 left
[07:00] *** nativecallable6 left
[07:00] *** squashable6 joined
[07:00] *** shareable6 joined
[07:00] *** statisfiable6 joined
[07:00] *** greppable6 joined
[07:00] *** nativecallable6 joined
[07:01] *** reportable6 joined
[07:01] *** bisectable6 joined
[07:02] *** coverable6 joined
[07:02] *** benchable6 joined
[07:02] *** committable6 joined
[07:02] *** bloatable6 joined
[07:02] *** unicodable6 joined
[07:03] *** notable6 joined
[07:03] *** releasable6 joined
[07:03] *** quotable6 joined
[08:09] *** domidumont joined
[08:23] <samcv> AlexDaniel, wikipedia updated

[08:34] <nine> Our Makefile copies src/gen/config.h to /usr/include/moar in addition to /usr/include/moar/gen. Is this actually useful? moar.h #includes "gen/config.h" and that's all an embedder would include.

[09:02] *** zakharyas joined
[09:26] *** zakharyas left
[09:27] *** zakharyas joined
[09:29] *** zakharyas left
[09:30] *** zakharyas joined
[09:42] *** AlexDaniel left
[09:54] *** zakharyas left
[09:56] *** zakharyas joined
[11:15] *** sena_kun joined
[12:04] *** AlexDaniel joined
[12:04] *** AlexDaniel left
[12:04] *** AlexDaniel joined
[12:04] *** Altai-man_ joined
[12:06] *** sena_kun left
[12:07] <Guest38485> nwc10: I actually had my RPi 4 standing vertically. It did help a little. Anyway I have since bought a https://flirc.tv/more/raspberry-pi-4-case

[12:18] *** zakharyas left
[12:37] *** brrt joined
[12:37] <brrt> \o

[12:45] *** colomon joined
[12:59] <nine> Damn it, I screwed things up.

[13:00] <nine> The whole support for serializing NativeCall sites that underlies the NativeCall precompilation improvements has a fatal flaw: it breaks packaging

[13:00] <nine> That's because the path to a %?RESOURCES library will change between precompilation and runtime. But now the old path is baked into the precomp file :(

[13:02] <nine> I fixed that issue in the HLL by having %?RESOURCES return not strings but objects that resolve paths relative to the current path of the repository and NativeCall knows how to deal with those objects. But the same won't work for MoarVM

[13:30] *** MasterDuke joined
[13:41] *** brrt left
[14:05] *** sena_kun joined
[14:06] *** Altai-man_ left
[14:18] *** zakharyas joined
[14:18] *** colomon left
[14:58] <lizmat> interesting NativeCall issue: https://stackoverflow.com/questions/59106793/test-failing-when-executed-in-a-different-order

[15:05] *** robertle joined
[15:05] <nine> lizmat: would be most helpful to know which exact rakudo version

[15:05] <lizmat> will ask

[16:04] *** Altai-man_ joined
[16:06] *** sena_kun left
[16:07] <Geth> Â¦ MoarVM: 8a9444b115 | (Stefan Seifert)++ | 3 files

[16:07] <Geth> Â¦ MoarVM: A couple more minor signedness fixes

[16:07] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8a9444b115

[16:07] <Geth> Â¦ MoarVM: ef7d0ecf4d | (Stefan Seifert)++ | 16 files

[16:07] <Geth> Â¦ MoarVM: Fix numerous signedness inconsistencies in the JIT compiler

[16:07] <Geth> Â¦ MoarVM:

[16:07] <Geth> Â¦ MoarVM: Try to stick to using unsigned numbers for counting things and for indexing

[16:07] <Geth> Â¦ MoarVM: into arrays. Fixes compiler warnings.

[16:07] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ef7d0ecf4d

[16:18] *** Guest38485 left
[16:28] <Geth> Â¦ MoarVM: a335add83b | (Stefan Seifert)++ | src/debug/debugserver.c

[16:28] <Geth> Â¦ MoarVM: Fix potential NULL pointer dereference in debugserver

[16:28] <Geth> Â¦ MoarVM:

[16:28] <Geth> Â¦ MoarVM: find_handle_target can return NULL

[16:28] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a335add83b

[16:29] <nine> There is a -Wnull-dereference since GCC 6 that can be very handy

[16:29] <jnthn> nine++

[16:30] <nine> Btw. there are only 2 warnings left. One in complicated string code that I'm not sure about and one in our imported memmem implementation

[16:31] <nine> That's why I'm experimenting with additional warnings not even covered by -Wall and -Wextra

[16:32] *** zakharyas left
[16:34] <Kaiepi> do builds work on windows? my pr is failing the appveyor build because of a syntax error in src/core/ops.c, even though i haven't changed it https://ci.appveyor.com/project/samcv/moarvm-35u74/builds/29209649/job/fr9oaqle2c5tcado

[16:36] <nine> src/spesh/optimize.c:2208:52: warning: potential null pointer dereference

[16:37] <nine> That warning seems legit

[16:40] <jnthn> nine: Will take a quick look

[16:40] <jnthn> Hm, it thinks logged_ann could be null?

[16:41] <jnthn> Hm, I think I agree

[16:42] <nine> jnthn: yes and the author of the code thought so, too, as there's an if(logged_ann) above

[16:42] <jnthn> Wonder who wrote this... :)

[16:43] <jnthn> Maybe `else if (logged_ann)` is sensible

[16:43] <jnthn> Though really this should probably never happen

[16:45] <Geth> Â¦ MoarVM: 14f581683d | (Stefan Seifert)++ | src/spesh/graph.c

[16:45] <Geth> Â¦ MoarVM: Fix misplaced closing curly brace

[16:45] <Geth> Â¦ MoarVM:

[16:45] <Geth> Â¦ MoarVM: Probably a merge error. It's harmless but certainly confusing and may cause

[16:45] <Geth> Â¦ MoarVM: issues when code is added at some point.

[16:45] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/14f581683d

[16:46] <nine> That ^^^ one was was cought by -Wjump-misses-init

[16:47] *** domidumont left
[16:59] <nine> Oooh....we actually do not even enable -Wall!

[17:00] <lizmat> nine: I seem to recall that jnthn didn't like that

[17:01] *** vrurg left
[17:01] <jnthn> The only thing I can remember not liking was the warning about not inserting extra parens in case folks don't know that & is tighter than | :P

[17:02] *** vrurg joined
[17:03] <nine> We probably also don't want -Wunused-parameter as it flags too many places where the parameter is just part of the interface and not used by all implementations

[17:03] <nine> But we can disable those separately

[17:06] *** vrurg left
[17:13] *** vrurg joined
[17:14] *** Kaiepi left
[17:15] *** Kaiepi joined
[17:17] *** vrurg left
[17:24] <nine> There are some warnings about undefined behaviour that are certainly worth a look

[17:28] <Geth> Â¦ MoarVM: 20804df5bb | (Stefan Seifert)++ | src/profiler/configuration.c

[17:28] <Geth> Â¦ MoarVM: Remove return type of function that doesn't actually return anything.

[17:28] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/20804df5bb

[17:40] *** lucasb joined
[17:47] *** Kaiepi left
[17:49] *** Kaiepi joined
[18:05] *** sena_kun joined
[18:06] *** Altai-man_ left
[18:07] *** domidumont joined
[18:19] *** domidumont left
[18:27] *** AlexDaniel left
[18:28] *** AlexDaniel joined
[18:28] *** AlexDaniel left
[18:28] *** AlexDaniel joined
[18:56] *** MasterDuke left
[18:59] *** domidumont joined
[19:05] *** vrurg joined
[19:10] *** domidumont left
[19:16] *** Ven`` joined
[19:18] *** Ven`` left
[19:53] *** vrurg left
[19:53] *** vrurg joined
[19:55] *** Ven`` joined
[19:58] *** vrurg left
[20:01] *** Ven`` left
[20:04] *** Altai-man_ joined
[20:06] *** sena_kun left
[20:08] <Geth> Â¦ MoarVM: f59f8f5de6 | (Stefan Seifert)++ | 2 files

[20:08] <Geth> Â¦ MoarVM: Fix strict aliasing violations when accessing floating point number's memory

[20:08] <Geth> Â¦ MoarVM:

[20:08] <Geth> Â¦ MoarVM: C does not allow for two different objects of different types to use the same

[20:08] <Geth> Â¦ MoarVM: memory location. While the compiler accepts casting the address of a local

[20:08] <Geth> Â¦ MoarVM: variable to a different pointer type and to dereference the result, this

[20:08] <Geth> Â¦ MoarVM: actually yields undefined behaviour. The compiler may e.g. reorder reads and

[20:08] <Geth> Â¦ MoarVM: writes, so the result of the operation may be some unrelated leftover from

[20:08] <Geth> Â¦ MoarVM: memory.

[20:08] <Geth> Â¦ MoarVM:

[20:08] <Geth> Â¦ MoarVM: Fix by assigning to and reading from a union.

[20:08] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f59f8f5de6

[20:12] *** Kaiepi left
[20:17] *** Kaiepi joined
[20:29] <Geth> Â¦ MoarVM: 13b618c25d | (Stefan Seifert)++ | 2 files

[20:29] <Geth> Â¦ MoarVM: Fix strict aliasing violation in MVMHash_gc_mark

[20:29] <Geth> Â¦ MoarVM:

[20:29] <Geth> Â¦ MoarVM: C does not allow for two different objects of different types to use the same

[20:29] <Geth> Â¦ MoarVM: memory location. While the compiler accepts casting the address of a local

[20:29] <Geth> Â¦ MoarVM: variable to a different pointer type and to dereference the result, this

[20:29] <Geth> Â¦ MoarVM: actually yields undefined behaviour. The compiler may e.g. reorder reads and

[20:29] <Geth> Â¦ MoarVM: writes, so the result of the operation may be some unrelated leftover from

[20:29] <Geth> Â¦ MoarVM: memory.

[20:29] <Geth> Â¦ MoarVM:

[20:29] <Geth> Â¦ MoarVM: Fix by adding MVM_gc_worklist_add_object_no_include_gen2_nocheck for MVMObject*

[20:29] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/13b618c25d

[20:57] <nine> This is undefined behaviour: MVM_VECTOR_ENSURE_SPACE(compiler->spills, idx = compiler->spills_num++);

[20:57] <nine> And frankly, I wouldn't really know what exactly it's supposed to do.

[20:57] <nine> It does after all expand to: MVM_VECTOR_ENSURE_SIZE(compiler->spills, (compiler->spills_num) + (idx = compiler->spills_num++))

[20:58] <nine> So should it end up as compiler->spills_num * 2 or as compiler->spills_num * 2 + 1?

[21:00] <nine> Since this is about growing a vector, I guess just x2

[21:09] <Geth> Â¦ MoarVM: 8ac4ac2cf4 | (Stefan Seifert)++ | src/spesh/arg_guard.c

[21:09] <Geth> Â¦ MoarVM: Fix warnings about unhandled enumeration values

[21:09] <Geth> Â¦ MoarVM:

[21:09] <Geth> Â¦ MoarVM: Simply adding a default to the switch statement makes it clear that the other

[21:09] <Geth> Â¦ MoarVM: values don't need special treatment. Makes the compiler specific pragmas

[21:09] <Geth> Â¦ MoarVM: obsolete.

[21:09] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/8ac4ac2cf4

[21:09] <Geth> Â¦ MoarVM: de1bebc72a | (Stefan Seifert)++ | 6 files

[21:09] <Geth> Â¦ MoarVM: Remove a bunch of variables that were written to but never read

[21:09] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/de1bebc72a

[21:09] <Geth> Â¦ MoarVM: d91f86ba81 | (Stefan Seifert)++ | src/jit/compile.c

[21:09] <Geth> Â¦ MoarVM: Fix undefined behaviour in MVM_jit_spill_memory_select

[21:09] <Geth> Â¦ MoarVM:

[21:09] <Geth> Â¦ MoarVM: The MVM_VECTOR_ENSURE_SPACE macro expanded to MVM_VECTOR_ENSURE_SIZE(

[21:09] <Geth> Â¦ MoarVM: compiler->spills, (compiler->spills_num) + (idx = compiler->spills_num++))

[21:09] <Geth> Â¦ MoarVM: So it was unclear whether the size should be compiler->spills_num * 2

[21:09] <Geth> Â¦ MoarVM: or compiler->spills_num * 2 + 1.

[21:09] <Geth> Â¦ MoarVM: I'm pretty sure the former was meant, so let's make that clear.

[21:09] <Geth> Â¦ MoarVM: Fixes a compiler warning.

[21:09] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d91f86ba81

[21:33] <Geth> Â¦ MoarVM: 4ce5570e24 | (Stefan Seifert)++ | 2 files

[21:33] <Geth> Â¦ MoarVM: Fix warnings about control reaching end of function without return value

[21:33] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/4ce5570e24

[21:39] <Geth> Â¦ MoarVM: cac9b9a9d7 | (Stefan Seifert)++ | src/6model/sc.h

[21:39] <Geth> Â¦ MoarVM: Remove useless assertion - unsigned value will always be >= 0

[21:39] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/cac9b9a9d7

[21:39] <Geth> Â¦ MoarVM: 91e3530acf | (Stefan Seifert)++ | src/6model/sc.h

[21:39] <Geth> Â¦ MoarVM: Fix signedness mismatch in comparisons in assertions

[21:39] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/91e3530acf

[21:43] *** Ven`` joined
[22:05] *** sena_kun joined
[22:07] *** Altai-man_ left
[22:12] *** AlexDani` joined
[22:13] *** AlexDaniel left
[22:37] *** vrurg joined
[22:42] *** vrurg left
[23:17] *** AlexDani` is now known as AlexDaniel

[23:17] *** AlexDaniel left
[23:17] *** AlexDaniel joined
[23:44] *** sena_kun left
