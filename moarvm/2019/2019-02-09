[00:46] *** Kaiepi left
[00:47] *** Kaiepi joined
[01:34] *** Kaiepi left
[01:36] *** Kaypie joined
[02:31] *** Kaypie is now known as Kaiepi

[06:49] *** Kaiepi left
[06:50] *** Kaiepi joined
[07:45] *** lizmat_ left
[08:30] *** lizmat joined
[08:43] *** robertle joined
[10:52] *** Kaiepi left
[10:53] *** Kaiepi joined
[11:49] *** Ven`` joined
[13:12] *** Kaiepi left
[13:14] *** Kaypie joined
[13:15] *** Kaiepi joined
[13:15] *** Kaiepi left
[13:20] *** Voldenet left
[13:25] *** Voldenet joined
[13:25] *** Voldenet left
[13:25] *** Voldenet joined
[13:25] *** greppable6 left
[13:26] *** greppable6 joined
[14:08] *** domidumont joined
[15:15] *** lizmat left
[15:26] *** zakharyas joined
[16:12] *** Ven`` left
[16:19] *** brrt joined
[16:36] <brrt> ohai #moarvm

[16:48] <brrt> Have I said that register allocation is not my favorite problem?

[16:49] <samcv> i believe so :)

[16:49] <brrt> well..

[16:49] <brrt> it still isn't :-)

[16:55] *** zakharyas left
[16:58] <brrt> and I'm not convinced that there's much I can actually learn from luajit's allocator

[16:58] <brrt> maybe register hints

[17:01] <brrt> the register allocator and machine code emitter are totally fused

[17:02] <brrt> and the luajit IR appears to be designed to be emitted efficiently

[17:06] *** brrt left
[17:08] *** Kaypie is now known as Kaiepi

[17:22] *** brrt joined
[17:26] <masak> brrt: did you see the Wikipedia section saying that linear scanning does a decent job?

[17:26] <masak> (my guess is you did, and you're already way beyond that point)

[17:27] <timotimo> i think i heard him point that out in the past

[17:27] <masak> maybe "decent" is the wrong word. more like "interesting speed/quality ratio"

[17:27] *** brrt left
[17:27] <timotimo> i think right now this is less the general problem and more making sure the x86 processor is also sufficiently satisfied with what you do

[17:28] <timotimo> since brrt's currently working on getting floating point stuff into the jit

[17:29] <masak> oh!

[17:30] <masak> well, first off, brrt++

[18:06] *** zakharyas joined
[18:40] *** brrt joined
[18:52] <brrt> ohai masak. Yes, floating point support is work in progress. (And somewhat works, but there's corner cases in which it doesn't).

[18:52] <brrt> what I'm trying to figure out is if there's a way in which I can do the same, but with less corner cases

[18:52] <brrt> my preliminary findings are that if that's possible, luajit doesn't have it, but it does have some other ideas

[19:08] *** zakharyas left
[19:38] *** brrt left
[19:50] *** domidumont left
[23:55] *** Kaiepi left
