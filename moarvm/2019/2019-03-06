[00:37] *** Kaiepi left
[00:37] *** Kaiepi joined
[00:41] *** patrickz joined
[00:45] *** patrickb left
[01:06] *** patrickz left
[01:10] *** Kaypie joined
[01:11] *** Kaiepi left
[01:27] *** Merfont joined
[01:27] *** Kaypie left
[01:32] *** Kaypie joined
[01:32] *** Merfont left
[01:57] *** squashable6 left
[01:58] *** squashable6 joined
[02:06] *** Kaypie left
[02:07] *** Kaypie joined
[02:35] *** Kaypie left
[02:35] *** Merfont joined
[02:48] *** TimToady left
[02:48] *** TimToady joined
[03:00] *** squashable6 left
[03:04] *** squashable6 joined
[03:30] *** Kaypie joined
[03:32] *** Kaypie left
[03:33] *** Merfont left
[03:35] *** Kaiepi joined
[03:47] *** Kaypie joined
[03:47] *** Kaiepi left
[04:51] *** Kaypie left
[04:56] *** Kaiepi joined
[05:30] *** AlexDaniel left
[05:52] *** Kaiepi left
[05:53] *** Kaiepi joined
[05:54] *** Kaiepi left
[05:54] *** Kaiepi joined
[05:55] *** Kaiepi left
[05:59] *** Kaiepi joined
[06:26] *** Kaiepi left
[06:28] *** Kaiepi joined
[07:05] *** domidumont joined
[07:06] *** domidumont left
[07:06] *** domidumont joined
[07:08] *** lizmat joined
[07:16] *** Kaiepi left
[07:16] *** Kaiepi joined
[07:27] <samcv> AlexDaniel`, i should release after the movers deliver all my belongings. i finally get my stuff today :)

[07:27] <samcv> well. actually they're unpacking the stuff now

[07:48] <AlexDaniel`> sounds great

[07:58] *** lizmat left
[07:58] *** Kaiepi left
[07:59] *** Kaiepi joined
[08:04] *** zakharyas joined
[08:34] <timotimo> o/ from GPW

[08:58] *** Kaiepi left
[09:00] *** Kaiepi joined
[09:25] <Geth> ¦ MoarVM: 16d03884ec | (Timo Paulssen)++ | 3 files

[09:25] <Geth> ¦ MoarVM: Put Inline-preventing Insturction In Spesh Log

[09:25] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/16d03884ec

[09:35] <timotimo> i'm seeing AT-POS with a fixed callsite that still has checkarity and param_rp_o (and i) inside it for some reason

[09:40] <timotimo> it's probably that the arg flag is ARG_OBJ for an param_rp_i, because it's got an intlexref

[09:41] <timotimo> whoops laptop battery almost completely empty

[09:41] <timotimo> anyway, the boxed primitive of native ref is "none", so there'd potentially have to be an extra case there which seems totally doable

[09:44] *** travis-ci joined
[09:44] <travis-ci> MoarVM build errored. Timo Paulssen 'Put Inline-preventing Insturction In Spesh Log'

[09:44] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/502471514 https://github.com/MoarVM/MoarVM/compare/a70833f90cc3...16d03884ec42

[09:44] *** travis-ci left
[10:29] *** Kaiepi left
[10:32] *** Kaiepi joined
[10:56] <timotimo> wow that typo

[11:00] <timotimo> some errors from package downloads from apt repositories it looks like

[11:05] *** domidumont left
[11:07] *** travis-ci joined
[11:07] <travis-ci> MoarVM build errored. Timo Paulssen 'Put Inline-preventing Insturction In Spesh Log'

[11:07] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/502471514 https://github.com/MoarVM/MoarVM/compare/a70833f90cc3...16d03884ec42

[11:07] *** travis-ci left
[11:33] *** Kaiepi left
[11:33] *** Kaiepi joined
[11:44] *** zakharyas left
[11:49] *** lizmat joined
[12:16] *** lizmat_ joined
[12:17] *** lizmat left
[12:20] *** lizmat_ is now known as lizmat

[12:26] *** lizmat left
[12:35] *** lucasb joined
[12:40] *** domidumont joined
[12:55] *** wictory[m] left
[13:37] *** brrt joined
[13:43] *** lizmat joined
[13:45] *** lizmat left
[13:45] *** lizmat_ joined
[13:47] *** zakharyas joined
[14:02] *** lizmat_ left
[14:52] <samcv> run() seems to be leaking memory

[14:53] <samcv> i'm testing running this https://p.tyil.nl/ej0v and checking and every time it runs the memory usage increases

[14:53] <samcv> it's been reported to me it will eventualy exhaust the system's entire memory

[15:19] <japhb> samcv: Is it a regression, or is it an old problem?

[15:21] <samcv> old problem i think

[15:21] <samcv> i think they're running the latest rakudo star release. and i can reproduce on latest git

[15:27] *** ugexe joined
[15:28] <brrt> run() of what?

[15:28] <samcv> https://p.tyil.nl/ej0v see this

[15:28] <ugexe> is it unexpected that a tight loop opening handles and not closing them is leaking?

[15:28] <yoleaux> 29 Jan 2019 13:27Z <lizmat> ugexe: https://stackoverflow.com/questions/54421415/how-to-prevent-the-perl-compiler-from-changing-the-name-of-dynamic-link-library

[15:28] <yoleaux> 20 Feb 2019 16:55Z <lizmat> ugexe: https://www.reddit.com/r/perl/comments/asczvg/about_the_various_pans/egvtxmc/

[15:31] <samcv> AlexDaniel`, starting to release now

[15:33] <ugexe> the way to ignore input is to use :!out -- otherwise if a handle like :out is opened then it needs to be closed.

[15:33] <samcv> timotimo, also you only need to capitalize the first letter of commit subjects, not every one

[15:34] <samcv> sorry if i wasn't clear before

[15:34] <ugexe> s/input/output/

[15:39] *** brrt left
[16:08] <samcv> AlexDaniel`, about to release

[16:22] *** brrt joined
[16:25] <Geth> ¦ MoarVM: f64f2ee1d8 | (Samantha McVey)++ | docs/ChangeLog

[16:25] <Geth> ¦ MoarVM: Add another entry to the ChangeLog

[16:25] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f64f2ee1d8

[16:25] <Geth> ¦ MoarVM: 7b80f2c58a | (Samantha McVey)++ | VERSION

[16:25] <Geth> ¦ MoarVM: Bump version for release 2019.03

[16:25] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7b80f2c58a

[16:31] *** AlexDaniel joined
[16:31] <Geth> ¦ moarvm.org: e155efe0a0 | (Samantha McVey)++ | 4 files

[16:31] <Geth> ¦ moarvm.org: Release 2019.03

[16:31] <Geth> ¦ moarvm.org: review: https://github.com/MoarVM/moarvm.org/commit/e155efe0a0

[16:37] <lucasb> yay, thank you samcv & others!

[16:39] <lucasb> since it was tagged as 2019.03, I assume the "regular" third-saturday release will *not* happen this month, correct?

[16:39] <samcv> lucasb, i believe that is true

[16:39] <samcv> AlexDaniel said as much at least

[16:40] <lucasb> ok, just to know :)

[16:47] *** MasterDuke left
[16:48] <AlexDaniel> yeah, and fyi next month I'm won't have time to make a release

[16:48] <AlexDaniel> and a May release is also unlikely from me

[16:49] <AlexDaniel> so find a new release manager, or wait till June :)

[16:49] <AlexDaniel> the spot was open for quite a bit and it's a bit worrying that nobody is volunteering

[16:50] <AlexDaniel> ok we didn't stress the urgency so maybe that's why, but now we probably should

[16:51] <brrt> samcv++

[16:51] <AlexDaniel> samcv++ for sure

[16:52] <AlexDaniel> why is that code not running out of handles, btw?

[16:52] <samcv> i'm going to try running valgrind on that memory leak on using run()

[16:52] <samcv> AlexDaniel, the run?

[16:52] <AlexDaniel> yea

[16:53] <AlexDaniel> maybe check how many open handles it has

[16:53] <samcv> how many handles are allowed? like 40k?

[16:53] <samcv> how do i check how many are allowed

[16:53] <AlexDaniel> depends on the system

[16:53] <samcv> err. open

[16:54] <samcv> but yeah it runs out of memory first

[16:54] <AlexDaniel> ulimit -n

[16:54] <samcv> 1024

[16:54] <AlexDaniel> also use lsof on the process to see how many it has

[16:55] <samcv> the server has 1024. same as me

[16:55] <samcv> dunno how that factors into it

[16:56] <AlexDaniel> hmm I don't see the number of handles increasing

[16:56] <samcv> yeah if that was it i'd think it'd run out of handles much faster than memory

[16:57] <AlexDaniel> though I'm also not seeing any growth in memory usage…

[16:58] * AlexDaniel reaches for more precise measurement tools

[16:58] <samcv> i'm gonna try it with just "echo" command. and taking the sleep away

[16:59] <samcv> yeah the memory usage is going up pretty fast

[16:59] <AlexDaniel> not really

[16:59] <samcv> well. not *that* fast but steadly increasing about 1mb every 5 seconds

[16:59] <AlexDaniel> I don't think it's linear

[17:00] <samcv> well. i will run it for some time

[17:00] * AlexDaniel graphs it

[17:03] <AlexDaniel> IIRC I already looked into this a few months ago, and the situation was that while the memory does seem to increase at first, it eventually settles

[17:03] <AlexDaniel> and it was somewhat better in the past, but the behavior changed after jnthn++'s changes

[17:04] <samcv> AlexDaniel, i got 8GB

[17:04] <AlexDaniel> holy shit

[17:04] <AlexDaniel> OK… sounds like an issue :)

[17:04] <samcv> if i do: my $cmd = run « cat ubuntu.iso », :out; $cmd.out.close; in a loop

[17:05] <samcv> looped about 10 times

[17:05] <samcv> it's a 1.8GB file

[17:05] <samcv> so it isn't equal to, but seems maybe 1/2 the size of the file that's been outputted?

[17:06] <samcv> or maybe it is the full amount hmm

[17:08] <AlexDaniel> here's the graph: https://imgur.com/a/nZGmcno

[17:10] <AlexDaniel> that's for the curl snippet

[17:10] <AlexDaniel> slurping large files, hmm… that should be investigated

[17:13] <samcv> i have it sleeping. and it's at 8.2GB usage

[17:13] <samcv> well i had it do run() and then close filehandle then sleep 10 seconds. it does those 5 times. then it just sleeps forever. i wanted to see if it would ever free it

[17:13] <samcv> it is not

[17:16] <AlexDaniel> speaking of sleeping, I need to get the other half of my sleep :)

[17:17] <samcv> AlexDaniel, what's the best way to see what's allocating that memory?

[17:17] <AlexDaniel> btw nqp and rakudo master branches are open for new contributions

[17:17] <AlexDaniel> samcv: oh, maybe timotimo knows

[17:17] <AlexDaniel> timotimo: ↑ ?

[17:17] <AlexDaniel> the profiler can probably tell that, right?

[18:11] *** zakharyas left
[18:12] *** brrt left
[18:31] *** domidumont left
[19:01] <Geth> ¦ MoarVM: ce2152df1e | (Samantha McVey)++ | docs/strings.asciidoc

[19:01] <Geth> ¦ MoarVM: Fix typo in strings documentation

[19:01] <Geth> ¦ MoarVM:

[19:01] <Geth> ¦ MoarVM: Thanks to MidCheck for spotting it.

[19:01] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ce2152df1e

[19:18] *** travis-ci joined
[19:18] <travis-ci> MoarVM build errored. Samantha McVey 'Fix typo in strings documentation

[19:18] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/502720637 https://github.com/MoarVM/MoarVM/compare/7b80f2c58a9e...ce2152df1e68

[19:18] *** travis-ci left
[19:33] *** domidumont joined
[19:54] *** zakharyas joined
[19:56] *** domidumont left
[20:38] <timotimo> d'oh samvc, roger that

[20:38] <yoleaux> 18:07Z <Kaiepi> timotimo: you've done networking work right? can you take a look at https://github.com/rakudo/rakudo/issues/2733 and comment on it?

[20:41] <timotimo> i think sometimes i am dropping nputs thoug?

[20:48] <Kaiepi> grr, i can't build the js vm without bugging the maintainers of some of it's dependencies to make them build properly on openbsd

[20:48] <Kaiepi> such as https://github.com/node-ffi-napi/node-ffi-napi/issues/40

[20:49] <Kaiepi> shit wc

[20:54] <timotimo> doh

[20:59] <timotimo> kaiepi, what do you need input on, exactly? i'm not sure if making the listen method immediately bind the socket would be a good idea; i'm not sure if i really saw it somewhere or not, but the tapping being the point where something actually starts is a common occurence, right?

[20:59] <Kaiepi> yeah

[21:00] <Kaiepi> i had the same thoughts, dropping connections before the server's tapped isn't a very good idea

[21:02] <timotimo> m: my $s = Supply.interval(3); $s.tap(*.say); sleep 3; $s.tap(say *x2:); sleep 3

[21:02] <camelia> rakudo-moar 9770c1aa1: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3); $s.tap(*.say); sleep 3; $s.tap(say *⏏x2:); sleep 3␤    e…»

[21:03] <timotimo> m: my $s = Supply.interval(3); $s.tap(*.say); sleep 3; $s.tap({ say $_ x 2 }); sleep 3

[21:03] <camelia> rakudo-moar 9770c1aa1: OUTPUT: «0␤1␤00␤»

[21:03] <timotimo> like here it starts over at 0

[21:03] <timotimo> i'm not sure about other examples right now

[21:04] <timotimo> but proc::async comes to mind, where setting up inputs and outputs before the process actually starts

[21:08] *** zakharyas left
[21:24] *** MasterDuke joined
[21:24] *** MasterDuke left
[21:24] *** MasterDuke joined
[21:25] <MasterDuke> samcv: heaptrack is a good tool for profiling memory allocations

[21:27] <timotimo> hey MD how are you?

[21:28] <MasterDuke> now that the release has happened (++s all around), i'm going to merge https://github.com/MoarVM/MoarVM/pull/1059 and https://github.com/MoarVM/MoarVM/pull/1038 later today or tomorrow unless there are any objections

[21:28] <MasterDuke> timotimo: going to go see into the spiderverse in a couple minutes, so hoping that's as good as i've been hearing

[21:28] <timotimo> i liked it a whole lot

[21:29] <timotimo> looking forward to iNtQP

[21:31] <MasterDuke> samcv, et al.: did you see that unicode 12 was just announced? http://blog.unicode.org/2019/03/announcing-unicode-standard-version-120.html

[21:32] <MasterDuke> timotimo: i haven't figure out what that stands for yet...

[21:33] <timotimo> just a mash-up o fint and nqp, no further thoughts from me yet

[21:33] <MasterDuke> ha, i was trying to come up with movie titles it fit

[21:33] <timotimo> oooh

[21:33] <timotimo> because into the spiderverse

[21:34] <timotimo> i will join playing fluxx now

[21:37] <MasterDuke> timotimo: i haven't seen much of a performance difference when on my default_int branches. i don't know if that's because a lot of the hot spots were already explicitly intified? or if my changes aren't deep/comprehensive enough?

[21:51] *** Kaiepi left
[21:51] *** Kaiepi joined
[22:06] <MasterDuke> timotimo: btw, just got a couple of these, don't know how important it is: `src/spesh/inline.c: In function ‘is_graph_inlineable’: src/spesh/inline.c:111:37: warning: assignment discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]                      *no_inline_info = ins->info;`

[22:35] *** patrickb joined
[22:58] <timotimo> thats not important, but it's also easy to shut it up :)

[22:58] <timotimo> i would just have to look up where exactly the const goes. well i guess trying both ways would get the compiler to tell mer which one is wrong

[23:11] <timotimo> maybe the int-qp will make more code optimizeable

[23:11] <timotimo> i will have to look into that a bit, i suppose

[23:15] *** lucasb left
[23:30] *** patrickb left
