[00:36] *** Kaiepi left
[00:59] *** ZzZombo_ joined
[01:02] *** ZzZombo left
[01:02] *** ZzZombo_ is now known as ZzZombo

[01:15] *** hoelzro joined
[02:33] *** Kaiepi joined
[03:27] *** ZzZombo_ joined
[03:30] *** ZzZombo left
[03:30] *** ZzZombo_ is now known as ZzZombo

[03:32] *** Kaiepi left
[05:31] *** Kaiepi joined
[05:46] *** Kaiepi left
[05:51] *** Kaiepi joined
[06:19] *** sena_kun joined
[06:21] *** domidumont joined
[06:41] <MasterDuke> i thought  https://github.com/MoarVM/MoarVM/commit/27dcb378ef4236b4f7394eef3926cb652ba2186a was one of the two brrt wanted to revert, not https://github.com/MoarVM/MoarVM/commit/76cd034ae3fbba919d25f2ef75951d430f97f576 ?

[07:13] *** sena_kun left
[07:39] *** ZzZombo_ joined
[07:42] *** ZzZombo left
[07:43] *** ZzZombo_ is now known as ZzZombo

[08:11] *** ZzZombo left
[08:29] *** brrt joined
[08:37] <brrt> \o

[08:37] <tellable6> 2019-10-17T22:49:37Z #moarvm <lizmat> brrt looks like the bind_o errors are back: t/spec/S32-temporal/DateTime.t t/spec/S32-list/combinations.t fail

[08:38] <nwc10> o/

[08:38] <brrt> .tell lizmat I know, I pushed those accidentally, then couldn't push back, or didn't want to

[08:38] <tellable6> brrt, I'll pass your message to lizmat

[08:38] <brrt> the good news is, I know what the issue is

[08:38] <brrt> its...... *drumroll*.... operand sizes

[08:38] <nwc10> \o/

[08:38] <brrt> it always is operand sizes

[08:39] <nwc10> I was too slow, because I was hoping to get that in before asking "and the bad news is?"

[08:39] <brrt> (well, that or I screwed up register allocation)

[08:39] <brrt> but in this case, operand sizes

[08:39] <brrt> I'm loading a 32 bit constant, to a 64 bit word, with sign extension, and it's wrong

[08:44] <nwc10> because (in this case) the constant is unsigned?

[08:46] <brrt> well, hmmm

[08:46] <brrt> I'm no longer sure that's the issue

[08:47] <brrt> it should be an unsigned load, for sure, but we do the comparison at the right size

[08:47] <brrt> so it shouldn't matter

[08:50] <brrt> hmm, it's still operand sizes, but not where I expected

[08:51] <Geth> ¦ MoarVM: 16485506d6 | (Daniel Green)++ | src/io/syncsocket.c

[08:51] <Geth> ¦ MoarVM: Fix format strings

[08:51] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/16485506d6

[08:57] *** brrt left
[09:06] <Geth> ¦ MoarVM: 1747535086 | (Bart Wiegmans)++ | 2 files

[09:06] <Geth> ¦ MoarVM: [JIT] Syntactically distinguish let keyword variants

[09:06] <Geth> ¦ MoarVM:

[09:06] <Geth> ¦ MoarVM: The 'let' keyword expands to a 'do' or 'dov' list of declarations,

[09:06] <Geth> ¦ MoarVM: depending on whether the last statement returns a value or not.

[09:06] <Geth> ¦ MoarVM: However, we need to expand declaration references before applying

[09:06] <Geth> ¦ MoarVM: macros, because macro application could theoretically introduce name

[09:06] <Geth> ¦ MoarVM: conflicts otherwise. Hence, type-checking the 'let' expression during

[09:06] <Geth> ¦ MoarVM: declaration linking isn't actually possible, because we don't know the

[09:06] <Geth> ¦ MoarVM: types of macro expressions. Instead, introduce the syntactic variant

[09:06] <Geth> ¦ MoarVM: 'letv' that makes the result type explicit.

[09:06] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/1747535086

[09:06] <Geth> ¦ MoarVM: f8eca66ba9 | (Bart Wiegmans)++ | 2 files

[09:06] <Geth> ¦ MoarVM: Revert "Revert "exprjit sp_p6oget_bi""

[09:06] <Geth> ¦ MoarVM:

[09:06] <Geth> ¦ MoarVM: This reverts commit 986e05beab2845ec5e29672aadb739170a645e17.

[09:06] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f8eca66ba9

[09:06] <Geth> ¦ MoarVM: e594fbcbdc | (Bart Wiegmans)++ | 2 files

[09:06] <Geth> ¦ MoarVM: [JIT] Add missing cast to sp_p6oget_bi

[09:06] <Geth> ¦ MoarVM:

[09:06] <Geth> ¦ MoarVM: We normally insert casts automatically, but we don't for branches.

[09:06] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e594fbcbdc

[09:07] *** brrt joined
[09:08] <brrt> .tell lizmat I'm decently sure that I fixed *those* bugs now

[09:08] <tellable6> brrt, I'll pass your message to lizmat

[09:13] *** brrt left
[09:31] *** travis-ci joined
[09:31] <travis-ci> MoarVM build errored. Bart Wiegmans '[JIT] Add missing cast to sp_p6oget_bi

[09:31] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/599537445 https://github.com/MoarVM/MoarVM/compare/16485506d60e...e594fbcbdc36

[09:31] *** travis-ci left
[10:11] *** sena_kun joined
[10:47] <Guest13443> brrt++ fixes

[11:02] <lizmat> .tell brrt looks like they are indeed fixed now

[11:02] <tellable6> lizmat, I'll pass your message to brrt

[11:03] *** brrt joined
[11:08] *** brrt left
[11:14] <Geth> ¦ MoarVM: MasterDuke17++ created pull request #1198: Add libzstd-dev to travis...

[11:14] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1198

[11:18] *** brrt joined
[11:19] *** MasterDuke left
[11:35] *** brrt` joined
[11:37] *** brrt left
[12:02] *** MasterDuke joined
[12:40] *** brrt` left
[12:44] *** Kaiepi left
[12:53] *** Kaiepi joined
[12:56] <Guest13443> I see new fromspace errors

[13:01] <Guest13443> moar: src/6model/sc.c:401: MVM_SC_WB_OBJ: Assertion `!(obj->header.flags & MVM_CF_FORWARDER_VALID)' failed.

[13:02] <Guest13443> hmm, am I the only one getting these?

[13:04] <MasterDuke> what code are you running?

[13:11] *** bisectable6 joined
[13:49] <Guest13443> MasterDuke: ./perl6-m -Ilib t/spec/APPENDICES/A03-older-specs/01-misc.rakudo.moar

[13:49] <Guest13443> small nursery, like 5k

[13:50] <Guest13443> there's a risk that brrt might be involved ...

[13:54] <Guest13443> other failing tests are e.g. t/spec/S32-io/chdir.t, t/spec/S11-repository/cur-candidates.t, t/spec/S03-operators/set_multiply.t etc

[13:59] <Guest13443> here's one example, perhaps nine can see something immediately: https://gist.github.com/dogbert17/2dac52a598e341f06ffbd886080073c7

[14:05] <nine> Guest13443: not from that backtrace alone. Would need to know what object triggered it and better catch it when it got added to the worklist (which rr is very handy for)

[14:09] <Guest13443> nine: unfortunately I'm not an rr person, I'm more of a Ryzen person :)

[14:11] <Guest13443> the errors seem to disappear with MVM_JIT_EXPR_DISABLE=1 !

[14:14] <nine> That's....worrysome

[14:15] <Guest13443> I hope that I'm wrong

[14:18] <Guest13443> could have something to do with

[14:18] <Guest13443> (template: sp_bind_o

[14:18] <Guest13443>   (^store_write_barrier! $0 (add $0 $1) $2))

[14:19] <jnthn> A bug in the write barrier could surely cause such a thing

[14:21] <nine> Well there weren't that many changes in MoarVM lately, so it shouldn't be hard to find the offending code

[14:22] <nine> jnthn: sorry to bother you again. How are chances for that review? We ought to do a release soon

[14:23] *** brrt` joined
[14:24] *** lucasb joined
[14:28] <Guest13443> here's a golf: ./perl6-m -e 'say (^1000 .grep: -> $n {([+] ^$n .grep: -> $m {$m and $n %% $m}) == $n })'

[14:28] <brrt`> hmmm

[14:28] <tellable6> 2019-10-18T11:02:32Z #moarvm <lizmat> brrt looks like they are indeed fixed now

[14:28] *** brrt` is now known as brrt

[14:28] <brrt> Guest13443: thank you, I'll try it out

[14:28] <Guest13443> I have nursery set tonursery is 4k

[14:29] <brrt> any other flags?

[14:29] <brrt> gc debug?

[14:29] <Guest13443> MVM_GC_DEBUG=1

[14:30] <brrt> Ok

[14:30] <Guest13443> at least we can't blame sp_p6oget_bi

[14:31] <Guest13443> methinks

[14:32] <Guest13443> it could of course be that the new template(s) have uncovered a bug somewhere else in the codebase

[14:32] <brrt> we'll see what bisecting shows

[14:33] <Guest13443> hopefully you'll be able to repro

[14:34] <brrt> one can surely hope

[14:37] <AlexDaniel> nine: speaking of which, can you take a look at this? https://github.com/rakudo/rakudo/issues/3243

[14:37] <nine> AlexDaniel: I've already spent quite some time on it and am right now. It's hard though

[14:37] <AlexDaniel> nine: oh

[14:38] <AlexDaniel> nine: well, let me know how it goes. For the release we can pick an earlier revision or we can revert this stuff

[15:01] * Guest13443 relocates &

[15:06] *** Guest13443 left
[15:07] *** domidumont left
[15:21] <brrt> Guest13443: cannot reproduce :-(

[15:52] *** brrt left
[16:08] <dogbert17> brrt: try    ./perl6-m -e 'say (^1000 .grep: -> $n {([+] ^$n .grep: -> $m {$m and $n %% $m}) == $n }) for ^5'

[16:08] <tellable6> dogbert17, I'll pass your message to brrt

[16:08] <dogbert17> at home one iteration wasn't enough but at work it was, odd

[16:15] <MasterDuke> dogbert17: i can repro with the above code+GC_DEBUG=2+4k nursery

[16:15] <dogbert17> yay

[16:15] <MasterDuke> MoarVM panic: Adding pointer 0x565557559088 to past fromspace to GC worklist

[16:16] <dogbert17> and if you try with MVM_JIT_EXPR_DISABLE=1

[16:17] <MasterDuke> works just fine

[16:18] <MasterDuke> same with t/spec/APPENDICES/A03-older-specs/01-misc.rakudo.moar

[16:20] <dogbert17> perfect

[17:40] *** Kaiepi left
[18:04] *** Kaiepi joined
[19:14] *** ggoebel left
[19:25] *** Kaiepi left
[19:26] *** Kaiepi joined
[21:01] *** Kaiepi left
[21:02] *** Kaiepi joined
[21:08] *** sena_kun left
[21:16] *** sena_kun joined
[22:12] *** ggoebel joined
[22:16] *** sena_kun left
[22:17] *** ggoebel left
[22:45] *** brrt joined
[22:45] <brrt> ok, suspect is currently indeed sp_bind_o

[22:45] <tellable6> 2019-10-18T16:08:09Z #moarvm <dogbert17> brrt: try    ./perl6-m -e 'say (^1000 .grep: -> $n {([+] ^$n .grep: -> $m {$m and $n %% $m}) == $n }) for ^5'

[22:45] <brrt> yeah, I can repro

[22:45] <brrt> it's the '^' operator that breaks

[22:52] <dogbert17> aha, is it a dynamic label with negative offset again?

[22:52] <brrt> no

[22:54] <dogbert17> easy fix?

[23:01] <brrt> I don't know yet

[23:30] *** brrt left
