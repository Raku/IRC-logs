[00:13] *** sena_kun left
[00:27] *** Kaeipi left
[00:27] *** sena_kun joined
[00:28] *** Kaeipi joined
[01:41] *** vrurg_ is now known as vrurg

[02:14] *** sena_kun left
[02:30] *** sena_kun joined
[04:15] *** sena_kun left
[04:30] *** sena_kun joined
[04:56] *** Kaeipi left
[04:57] *** Kaeipi joined
[04:57] *** Kaeipi left
[04:58] *** Kaeipi joined
[06:14] *** sena_kun left
[06:30] *** sena_kun joined
[07:31] *** sourceable6 left
[07:31] *** nativecallable6 left
[07:31] *** greppable6 left
[07:31] *** notable6 left
[07:31] *** releasable6 left
[07:31] *** quotable6 left
[07:31] *** benchable6 left
[07:31] *** coverable6 left
[07:31] *** tellable6 left
[07:31] *** reportable6 left
[07:31] *** bisectable6 left
[07:31] *** bloatable6 left
[07:31] *** statisfiable6 left
[07:31] *** squashable6 left
[07:31] *** shareable6 left
[07:31] *** evalable6 left
[07:31] *** committable6 left
[07:31] *** unicodable6 left
[07:32] *** statisfiable6 joined
[07:32] *** unicodable6 joined
[07:32] *** shareable6 joined
[07:32] *** benchable6 joined
[07:32] *** nativecallable6 joined
[07:32] *** quotable6 joined
[07:33] *** sourceable6 joined
[07:33] *** notable6 joined
[07:33] *** greppable6 joined
[07:33] *** committable6 joined
[07:33] *** releasable6 joined
[07:33] *** coverable6 joined
[07:33] *** squashable6 joined
[07:33] *** evalable6 joined
[07:34] *** bisectable6 joined
[07:34] *** reportable6 joined
[07:34] *** tellable6 joined
[07:34] *** bloatable6 joined
[08:04] *** domidumont joined
[08:14] *** sena_kun left
[08:28] *** sena_kun joined
[09:15] *** Voldenet left
[10:14] *** sena_kun left
[10:28] *** sena_kun joined
[12:14] *** sena_kun left
[12:29] *** sena_kun joined
[12:40] *** Voldenet joined
[12:40] *** Voldenet left
[12:40] *** Voldenet joined
[13:21] <Geth_> ¦ MoarVM: e224567df8 | (Stefan Seifert)++ | docs/ChangeLog

[13:21] <Geth_> ¦ MoarVM: Update ChangeLog for 2019.12 release

[13:21] <Geth_> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/e224567df8

[13:29] <nine> I went through the release guide and finished all steps except for the ones about signing and tags. Looks like everything's fine

[13:32] <sena_kun> nine++

[13:40] *** evalable6 left
[13:40] *** evalable6 joined
[13:45] <sena_kun> we do need to finish the process properly, though. as for https://github.com/rakudo/rakudo/issues/3311 I am not really sure. one thing it can be reproduces on macos, another one it reproduces on some macos setups, excluding MBP in question.

[14:13] *** sena_kun left
[14:29] *** sena_kun joined
[14:43] <nine> Apparently the test in question has long been troublesome: https://rt.perl.org/Public/Bug/Display.html?id=130042

[14:45] <nine> But this commit actually gives a hint about what may be the issue again: https://github.com/rakudo/rakudo/commit/49fd82517f

[14:46] <nine> And indeed, I can reproduce it by adding a sleep 1; after the nqp::buildnativecall!

[16:14] *** sena_kun left
[16:29] *** sena_kun joined
[17:32] <nine> Apparently there is still one more side effect of my callback deopt fix: exceptions (even control exceptions like return) don't find a handler.

[17:48] <dogbert2> m: sub { await start { return } }()

[17:48] <camelia> rakudo-moar 672c5d403: OUTPUT: «MoarVM panic: Internal error: Unwound entire stack and missed handler␤»

[18:13] *** sena_kun left
[18:28] *** sena_kun joined
[18:32] <nine> It's....gone? Cannot reproduce it anymore

[18:34] <nine> Could on my desktop. Then wanted to repro on my laptop for rr but there it worked just fine. Then I noticed that I actually had a local change to Inline::Perl5 that could explain perfectly why I didn't see the missed handler message: I removed the return from the exact callback that I saw failing on the desktop

[18:34] <nine> But, reverting that change didn't bring on the failure and after trying the same change on my desktop, the failure is gone there, too. Even after I reverted it again!

[18:38] <nine> So maybe the recompile fixed it

[18:44] <Geth_> ¦ MoarVM: 2ac1fa27f5 | (Stefan Seifert)++ | src/core/nativecall.c

[18:44] <Geth_> ¦ MoarVM: Fix race condition with multi threaded NativeCall users

[18:44] <Geth_> ¦ MoarVM:

[18:44] <Geth_> ¦ MoarVM: A NativeCall site is considered set up as soon as its body->lib_handle is

[18:44] <Geth_> ¦ MoarVM: non-NULL. If we initialize lib_handle too early, a different thread might think

[18:44] <Geth_> ¦ MoarVM: everyting's already set up and run into strange issues. So instead, initialize

[18:44] <Geth_> ¦ MoarVM: it last, after everything else is done.

[18:44] <Geth_> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2ac1fa27f5

[18:44] <nine> This is just an extension of the fix for https://github.com/rakudo/rakudo/issues/3311

[18:45] <lizmat> nine++

[18:46] <dogbert2> nine++, soon there won't be any bugs left :)

[18:56] *** domidumont left
[19:13] *** domidumont joined
[19:53] *** zakharyas joined
[19:58] *** domidumont left
[20:14] *** sena_kun left
[20:30] *** sena_kun joined
[21:26] *** zakharyas left
[21:55] *** Kaeipi left
[21:56] *** Kaeipi joined
[21:57] *** domidumont joined
[21:59] *** domidumont left
[22:14] *** sena_kun left
[22:28] *** sena_kun joined
[23:28] *** sena_kun left
