[00:54] *** sena_kun left
[01:09] *** sena_kun joined
[01:35] *** sena_kun left
[04:33] *** lucasb left
[05:35] *** quotable6 left
[05:35] *** squashable6 left
[05:35] *** coverable6 left
[05:35] *** bisectable6 left
[05:35] *** sourceable6 left
[05:35] *** shareable6 left
[05:35] *** reportable6 left
[05:35] *** statisfiable6 left
[05:35] *** committable6 left
[05:35] *** unicodable6 left
[05:35] *** releasable6 left
[05:35] *** notable6 left
[05:35] *** bloatable6 left
[05:35] *** greppable6 left
[05:35] *** nativecallable6 left
[05:35] *** benchable6 left
[05:35] *** releasable6 joined
[05:35] *** greppable6 joined
[05:36] *** sourceable6 joined
[05:36] *** squashable6 joined
[05:36] *** committable6 joined
[05:36] *** reportable6 joined
[05:37] *** quotable6 joined
[05:37] *** statisfiable6 joined
[05:37] *** shareable6 joined
[05:37] *** benchable6 joined
[05:37] *** coverable6 joined
[05:37] *** nativecallable6 joined
[05:37] *** bloatable6 joined
[05:38] *** unicodable6 joined
[05:38] *** notable6 joined
[05:38] *** bisectable6 joined
[06:41] *** moritz_ is now known as moritz

[07:44] *** domidumont joined
[08:37] *** MasterDuke joined
[08:42] *** zakharyas joined
[09:14] *** sena_kun joined
[09:29] *** sena_kun left
[10:10] *** MasterDuke left
[10:22] *** sivoais left
[10:22] *** sivoais joined
[10:57] *** Guest38485 joined
[12:41] *** zakharyas left
[12:54] *** lucasb joined
[13:15] *** domidumont left
[14:08] <jnthn> Wow...compiling HEAD is very warning-y

[14:13] *** sena_kun joined
[14:14] *** sena_kun left
[14:16] *** MasterDuke joined
[14:18] <lizmat> I only see lots and lots of "loop not vectorized"

[14:18] <lizmat> and some format specifies type 'long' but

[14:18] <lizmat>       the argument has type 'MVMuint64'

[14:20] *** sena_kun joined
[14:25] <jnthn> https://gist.github.com/jnthn/d2c700e9d1922130797b92a2e5a9bed3 fwiw

[14:25] <jnthn> I don't have time to go digging at the moment.

[14:29] *** discord6 joined
[14:29] *** synopsebot joined
[14:43] *** synopsebot_ joined
[14:47] *** lizmat left
[14:49] *** discord6 left
[14:50] *** zakharyas joined
[14:51] *** discord6 joined
[14:56] *** synopsebot left
[14:56] *** sena_kun left
[14:58] *** discord6 left
[14:58] *** discord6 joined
[15:00] *** discord6 left
[15:01] *** discord6 joined
[15:01] *** discord6 left
[15:01] *** discord6 joined
[15:04] *** discord6 left
[15:05] *** discord6 joined
[15:05] *** discord6 left
[15:05] *** discord6 joined
[15:08] *** discord6 left
[15:11] *** sena_kun joined
[15:12] *** discord6 joined
[15:16] *** discord6 left
[15:16] *** Geth left
[15:16] *** synopsebot_ left
[15:19] <Kaiepi> can someone review https://github.com/MoarVM/MoarVM/pull/1222 ?

[15:39] <Guest38485> jnthn, lizmat: a few more warning options have been enabled recently

[16:03] <Guest38485> nine: after some more debugging it turns out that the 'sc' is somehow cleared in this routine https://github.com/MoarVM/MoarVM/blob/master/src/6model/serialization.c#L2843

[16:28] *** zakharyas left
[16:30] *** Guest38485 left
[16:39] *** discord6 joined
[16:39] *** discord6 left
[16:39] *** discord6 joined
[16:55] *** sena_kun left
[17:08] *** discord6 left
[17:10] *** sena_kun joined
[17:34] *** lizmat joined
[18:01] *** lizmat left
[18:12] *** lizmat joined
[18:26] *** Kaiepi left
[18:26] *** Kaiepi joined
[18:27] *** Kaiepi left
[18:28] *** Kaiepi joined
[18:36] <nine> jnthn: we compile with -Wall and -Wextra now. I've fixed almost all the warnings I got but different compiler (versions) will be more noisy still

[18:38] <jnthn> nine: Yeah, mine is a bit noisy. I'm all for more warnings in principle, just know it's easy to not spot new ones among the noise when there's a lot of them triggered.

[18:39] <nine> I know. That's why I've fixed several hundreds of them. I only left ~ 3 that I hope will be tackled by domain specialists. And of course those I simply do not get on my gcc

[18:44] <jnthn> nine++

[18:45] <jnthn> Will hopefully get chance to look at the ones I see soonish

[18:45] <jnthn> The fallthrough ones are very odd, it's a warning on something that looks like it's meant to prevent one...

[18:45] <jnthn> Anyways, home time... :)

[18:46] <nine> Oh, seems like that fallthrough attribute is only supported on gcc >= 7

[18:48] <nine> Same for #pragma GCC diagnostic ignored "-Wimplicit-fallthrough"

[18:56] *** sena_kun left
[19:11] *** sena_kun joined
[19:31] *** Geth joined
[19:31] *** discord6 joined
[19:41] *** lizmat left
[20:05] *** bisectable6 left
[20:05] *** nativecallable6 left
[20:05] *** committable6 left
[20:05] *** releasable6 left
[20:05] *** rba left
[20:05] *** rba joined
[20:10] *** releasable6 joined
[20:10] *** bisectable6 joined
[20:10] *** nativecallable6 joined
[20:10] *** committable6 joined
[20:47] *** vrurg_ joined
[20:50] *** vrurg left
[20:56] *** sena_kun left
[21:11] *** sena_kun joined
[22:00] <nine> dogbert17: I think I got it!

[22:01] <nine> or still not :(

[22:03] <nine> Or maybe there's just more issues with this code.

[22:04] <nine> One thing's certain: this line https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/NativeCall.c#L189 must be moved 2 down to be outside the if just like the pushes. Otherwise we may end up with outdated pointers on the temp root stack

[22:21] <dogbert17> nine: cool

[22:22] <dogbert17> the only thing I have found is that the sc, which get trashed has the following description: site#sources/0F50B574622C7F9833911E194CCEAFFE83348161 (Inline::Perl5::Interpreter)

[22:23] <dogbert17> it shows up many times before the crash occurs

[22:34] <dogbert17> Native call expected return type with CPointer representation, but got a P6opaque (Scalar)

[22:34] <dogbert17>   in method p5_call_parent_gv

[22:43] <dogbert17> on the positive side, the SEGV's seems to have vanished

[22:54] *** Kaiepi left
[22:55] *** sena_kun left
[22:56] *** Kaiepi joined
[22:56] *** Kaiepi left
[22:56] *** Kaeipi joined
[23:01] *** Kaeipi left
[23:02] *** Kaeipi joined
[23:07] *** lizmat joined
[23:09] *** sena_kun joined
[23:44] *** lucasb left
