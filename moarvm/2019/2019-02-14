[01:56] *** MasterDuke left
[01:56] *** MasterDuke joined
[01:57] *** MasterDuke left
[01:57] *** MasterDuke joined
[02:01] <timotimo> chars requires a concrete string, but got null

[02:01] <timotimo>    at gen/moar/stage2/QAST.nqp:5526  (/home/timo/perl6/install/share/nqp/lib/QAST.moarvm:serialize_sc)

[02:01] <timotimo>  from gen/moar/stage2/QAST.nqp:5533  (/home/timo/perl6/install/share/nqp/lib/QAST.moarvm:deserialization_code)

[02:01] <timotimo>  from gen/moar/stage2/QAST.nqp:5473  (/home/timo/perl6/install/share/nqp/lib/QAST.moarvm:compile_node)

[02:01] <timotimo> well, this is certainly fun!

[02:03] <MasterDuke> unrelated to your enum hacking?

[02:03] <timotimo> no, very related indeed

[02:04] <MasterDuke> whoops

[02:04] <MasterDuke> btw, do you know anything about the js backend?

[02:04] <timotimo> barely. i've built it once or twice

[02:05] <MasterDuke> the nqp-js-cross binary is always created?

[02:05] <timotimo> don't know

[02:06] <MasterDuke> k

[02:07] <timotimo> i mean it might not

[02:07] <timotimo> sounds like that's the initial thing that lets you generate js code by running nqp on moar

[02:07] <MasterDuke> i'm in a clean nqp, built with --backends=moar,js

[02:08] <MasterDuke> make install dies with `Unhandled exception: While looking for 'nqp.moarvm': no such file or directory`

[02:09] <timotimo> no clue what's wrong there

[02:13] <timotimo> i can run the code directly, but when i "use" the module it asplodes

[02:14] <MasterDuke> doing anything crazy in it?

[02:20] <MasterDuke> .ask pmurias i'm trying to build (nqp|rakudo)-js, but `perl Configure.pl --prefix=/home/dan/Source/perl6/install/ --backends=moar,js && make -j6 install` dies in the `make -j6 install` with `Unhandled exception: While looking for 'nqp.moarvm': no such file or directory`. any suggestions?

[02:20] <yoleaux> MasterDuke: I'll pass your message to pmurias.

[02:35] <timotimo> well, i'm evaling some code that's supposed to add methods to a bunch of classes

[02:38] <timotimo> what i would really want to do is make it a macro :)

[02:38] <timotimo> so that it just makes a value at compile time

[02:41] <MasterDuke> there is currently experimental support for some macro functionality, correct?

[02:41] <timotimo> aye

[02:41] <timotimo> it hasn't changed in a long long time :)

[02:42] <timotimo> but i think it could very well be good enough

[02:42] <timotimo> unfortunately, i want it to be a method on the enum, methods and macros don't mix

[02:42] <timotimo> so it'd have to be a sub or operator instead

[02:43] <timotimo> m: macro postcircumfix:<[| |]>($pre, $post) { say "blep"; }; Bool[| True, False |]

[02:43] <camelia> rakudo-moar 121ca5fda: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Use of macros is experimental; please 'use experimental :macros'␤at <tmp>:1␤------> macro⏏ postcircumfix:<[| |]>($pre, $post) { sa␤»

[02:43] <timotimo> m: use experimental :macros; macro postcircumfix:<[| |]>($pre, $post) { say "blep"; }; Bool[| True, False |]

[02:43] <camelia> rakudo-moar 121ca5fda: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Missing required term after infix␤at <tmp>:1␤------> t) { say "blep"; }; Bool[| True, False |⏏]␤    expecting any of:␤        prefix␤        term␤»

[02:43] <timotimo> it don't like my braces :(

[02:43] <timotimo> *shrug*, i'll go to bed and redo it tomorrow :)

[02:44] <MasterDuke> later...

[04:12] *** vendethiel- joined
[04:21] *** vendethiel- left
[05:45] *** robertle left
[07:46] *** domidumont joined
[08:25] *** zakharyas joined
[12:37] *** zakharyas left
[13:01] *** AlexDaniel left
[13:53] *** lucasb joined
[14:47] *** zakharyas joined
[16:26] *** domidumont left
[17:13] *** robertle joined
[18:18] *** AlexDaniel joined
[18:35] *** zakharyas left
[18:38] *** zakharyas joined
[19:02] *** lucasb left
[19:42] *** zakharyas left
[20:26] *** AlexDaniel left
[21:09] *** Ven`` joined
[21:14] *** dogbert17 joined
[23:19] *** Ven`` left
