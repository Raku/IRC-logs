[00:04] *** lucasb left
[00:05] *** Kaiepi left
[02:02] *** Kaiepi joined
[03:04] *** evalable6 left
[03:05] *** Kaiepi left
[03:05] *** evalable6 joined
[04:41] *** sena_kun joined
[05:01] *** Kaiepi joined
[05:48] *** robertle left
[06:04] *** Kaiepi left
[06:41] *** domidumont joined
[07:46] *** zakharyas joined
[07:50] *** robertle joined
[08:16] *** Kaiepi joined
[08:45] *** Kaiepi left
[08:55] *** domidumont left
[08:55] *** domidumont joined
[10:11] *** sena_kun left
[10:57] *** Kaiepi joined
[11:10] *** zakharyas left
[11:53] *** lizmat joined
[12:45] *** lizmat left
[12:50] *** sena_kun joined
[12:50] *** lizmat joined
[13:41] *** zakharyas joined
[13:42] *** lucasb joined
[14:52] *** domidumont left
[15:26] *** zakharyas left
[15:28] *** brrt joined
[15:29] <brrt> \o

[15:30] <nwc10> o/

[15:39] *** robertle left
[16:07] *** Kaiepi left
[16:12] <nine> Could it be that it may actually take longer to trigger a full collection on a 32 bit system?

[16:17] <brrt> how so?

[16:18] <brrt> (I've startd the change to have the guard ops use the deopt index... this is mostly going well but I have a few failing tests)

[16:19] *** MasterDuke left
[16:25] <jnthn> nine: Yes

[16:26] <jnthn> nine: Pointers are smaller, so objects are smaller, and grep for MVM_GC_GEN2_THRESHOLD_MINIMUM for the rest of the story :)

[16:27] <brrt> d'oh, never thought of that

[16:34] <nine> Ooooh....that makes so much sense :)

[16:35] <nine> With that explanation and the one test run where a different GC test failed, I'm now confident in just raising the iteration limit of my tests :)

[16:37] <dogbert17> nine: looking for more GC-related errors?

[16:37] *** Kaiepi joined
[16:38] <nine> dogbert17: it's about an Inline::Perl5 issue

[16:39] <dogbert17> aha

[16:51] *** robertle joined
[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: 142f51068b | (Bart Wiegmans)++ | 10 files

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: [Spesh] Make deopt use index rather than target address

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize:

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: We'd use the index to search for the deopt address during compilation,

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: which makes the deopt index 'special'. And then we'd use the deopt

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: address to search for the deopt index, in order to find the objects

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: that we'd need to rematerialize.

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize:

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: <…commit message has 9 more lines…>

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: review: https://github.com/MoarVM/MoarVM/commit/142f51068b

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: 147f269792 | (Bart Wiegmans)++ | tools/jit-bisect.pl

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: [Tools] Spesh bisect should learn about PEA

[16:56] <Geth> ¦ MoarVM/expr-jit-devirtualize: review: https://github.com/MoarVM/MoarVM/commit/147f269792

[17:01] *** brrt left
[17:07] <dogbert17> libuv 1.32 is now out - https://github.com/libuv/libuv/blob/v1.x/ChangeLog

[17:58] <timotimo> when running a script with heap snapshots activated, seen takes up almost 10% and saw just over 5%

[17:59] <timotimo> to be fair, zstd also takes like 9% in total

[18:00] <timotimo> i've been meaning to look into how multiple threads could work on compressing different attribute streams at the same time to get the heap snapshot speed up a little

[18:03] <timotimo> i see 12.61% of perf's hits inside __strcmp_sse2_unaligned

[18:03] <timotimo> i suppose i'll have to run without jit and with callgrind to get accurate info on this

[18:28] *** MasterDuke joined
[18:52] *** vesper11 left
[19:08] <timotimo> there was a get_type_index-related cache that wasn't being used at all yet, I put that in and its hit rate is at 100% after the initial miss that sets up the cache slot

[19:08] <timotimo> but now there's a crash, too

[19:09] <timotimo> reducing the debug value makes it go away

[19:09] <timotimo> which is always welcome

[19:09] <MasterDuke> how/where is a cache existing but not being used?

[19:10] <timotimo> existing as in "there's an array put into a struct"

[19:10] <timotimo> not being used as in "never read from, never written to"

[19:10] <timotimo> it's just for the heap dump profiler

[19:10] <MasterDuke> huh

[19:10] <timotimo> ==31911== Invalid read of size 8

[19:10] <timotimo> ==31911==  Address 0x901bc8e0 is not stack'd, malloc'd or (recently) free'd

[19:10] <timotimo> bleh

[19:19] <timotimo> at least i got the crash in rr now

[19:20] <timotimo> oh, that's a different crash

[19:20] <timotimo> well ain't that fun

[19:41] *** vesper11 joined
[20:05] <timotimo> i'm seeing a string be put into the strings list of a CU, allocated in the gen2, then later on being overwritten by an object coming from the nursery

[20:10] <timotimo> i should have looked at GC_DEBUG earlier

[20:18] <timotimo> MoarVM panic: Collectable 0x5d9fd00 in a gen2 freelist accessed

[20:18] <timotimo> yes, exactly

[20:21] *** sena_kun left
[20:38] *** Ven`` joined
[20:57] *** tadzik is now known as nvidia

[20:57] *** nvidia is now known as tadzik

[21:34] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/09/09/2019-35-6-ovid-trepidated/

[22:16] *** tobs joined
[22:24] *** Ven`` left
[22:24] *** Ven`` joined
[22:24] *** Ven`` left
[22:38] *** Kaiepi left
[22:39] *** Kaiepi joined
[23:23] *** Kaiepi left
[23:23] *** Kaypie joined
[23:52] *** lucasb left
