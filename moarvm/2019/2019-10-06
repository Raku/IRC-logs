[01:00] *** Kaiepi left
[01:01] *** Kaiepi joined
[01:28] *** anatofuz left
[01:34] *** anatofuz joined
[01:38] *** anatofuz left
[02:06] *** lucasb left
[02:14] *** anatofuz joined
[02:48] *** anatofuz left
[02:54] *** anatofuz joined
[04:18] *** anatofuz left
[04:19] *** anatofuz joined
[04:19] *** nebuchad` joined
[04:21] *** nebuchadnezzar left
[04:32] *** anatofuz left
[04:40] *** anatofuz joined
[04:45] *** anatofuz left
[04:54] *** anatofuz joined
[05:18] *** anatofuz left
[05:24] *** anatofuz joined
[05:28] *** anatofuz left
[05:29] *** anatofuz joined
[05:35] *** anatofuz left
[05:36] *** anatofuz joined
[05:39] *** anatofuz left
[05:41] *** anatofuz joined
[06:15] <nine> Oh, repl.t has also a time out through doesn't-hang. That's just 15 seconds.

[06:17] <nine> 15 seconds sound rather short for a test where the failure condition seems to be that it won't finish at all. Why not wait 3 minutes or so? If a bug so tested reappears, it will still tell you.

[06:40] *** nebuchad` is now known as nebuchadnezzar

[06:55] *** sena_kun joined
[07:27] *** anatofuz left
[07:28] *** anatofuz joined
[07:32] *** anatofuz left
[07:34] *** anatofuz joined
[07:42] *** anatofuz left
[07:44] *** anatofuz joined
[07:49] *** anatofuz left
[07:58] *** anatofuz joined
[08:09] *** anatofuz left
[09:13] *** anatofuz joined
[09:37] *** anatofuz left
[11:25] *** anatofuz joined
[11:54] *** AlexDaniel` left
[12:05] *** AlexDaniel` joined
[12:29] *** anatofuz left
[12:29] *** domidumont joined
[12:30] *** anatofuz joined
[12:33] *** domidumont left
[12:33] *** domidumont1 joined
[12:42] *** anatofuz left
[13:45] *** sena_kun left
[13:46] *** sena_kun joined
[14:07] *** lucasb joined
[14:51] <Kaiepi> idk if anyone saw last time i asked but is there anything i need to do before pr 1166 can be merged?

[15:22] <timotimo> M#1166

[15:22] <synopsebot> M#1166 [open]: https://github.com/MoarVM/MoarVM/pull/1166 [IP6NS Grant] Improve hostname resolution

[15:38] <timotimo> i haven't looked again since nine asked if you could make it more mechanism than policy

[15:48] <nine> timotimo: I'm also fine with a merge of the functionality now and moving of the policiy to upper layers later on. As we already have a different policy hard coded in MoarVM it'd not really be a regression in that regard.

[15:49] <timotimo> that's true

[15:49] <nine> The only thing I don't want is to get us locked into one particular policy by some part of the API design. But if Kaiepi is positive that the policy part can be moved without problem later, that's fine with me.

[15:49] <timotimo> i haven't reviewed the code, but i'd be +1 on the merge then

[15:51] <Kaiepi> i'm fairly certain it can

[15:51] <Kaiepi> without being breaking

[16:32] <nine> So...when I come across what's obviously a Backtrace's frame list in a serialization issue. How would I find out where that Backtrace comes from? I'd guess that there's some Failure that shouldn't be there

[16:35] <timotimo> we need something like the heap snapshot profiler but for serialization

[16:48] <timotimo> something something gdb python script?

[17:15] *** Kaiepi left
[17:16] *** Kaiepi joined
[17:48] *** Kaiepi left
[17:51] *** Kaiepi joined
[18:06] <lizmat> nine: should a Backtrace / Failure / Exception *ever* be serialized ??

[18:22] <nine> lizmat: no. And AFAIK we can't even serialize exceptions

[18:23] *** domidumont1 left
[18:23] *** domidumont joined
[18:23] <nine> Here I am, wondering where that backtrace comes from.... the backtrace...which is literally the thing that is only there for showing where something happened

[18:23] <lizmat> m: dd Backtrace.new

[18:23] <camelia> rakudo-moar 6c35cef60: OUTPUT: ¬´Backtrace.new‚ê§¬ª

[18:23] <lizmat> m: dd Backtrace.new.list

[18:23] <camelia> rakudo-moar 6c35cef60: OUTPUT: ¬´(Backtrace::Frame.new(file => "SETTING::src/core.c/Backtrace.pm6", line => 94, code => { ... }, subname => ""), Backtrace::Frame.new(file => "SETTING::src/core.c/Backtrace.pm6", line => 94, code => multi method new (Backtrace: *%_) { #`(Method|7890018‚Ä¶¬ª

[18:24] <lizmat> are there actually Backtrace::Frames in that list?

[18:26] *** domidumont1 joined
[18:29] *** domidumont left
[18:29] *** domidumont1 left
[18:33] *** domidumont joined
[18:38] <nine> Ooook....I now know that it's the require Inline::Perl5; in CompUnit::Repository::Perl5 which is throwing. Progress!

[18:40] <nine> Intriguingly that's a failure in INDIRECT_NAME_LOOKUP. The program however continues happily until the serialization phase

[18:40] *** Kaiepi left
[18:40] <nine> And Inline::Perl5 gets loaded just fine

[18:40] *** domidumont left
[18:44] *** Kaiepi joined
[20:35] *** Kaiepi left
[20:36] *** Kaiepi joined
[20:53] *** sena_kun left
[22:36] *** lucasb left
[22:40] *** anatofuz joined
[23:08] *** anatofuz left
[23:12] *** anatofuz joined
[23:13] *** Elronnd is now known as MoonChild

[23:13] *** MoonChild is now known as Moon_Child

[23:13] *** Moon_Child is now known as Moon_child

[23:13] *** anatofuz left
[23:13] *** anatofuz joined
[23:19] *** Moon_child is now known as moon_child

[23:46] *** anatofuz left
