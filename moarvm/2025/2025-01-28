[03:57] *** guifa left
[04:45] *** harrow left
[04:52] *** harrow joined
[10:02] *** sena_kun joined
[11:55] *** Geth joined
[15:08] *** lizmat_ joined
[15:10] *** lizmat__ joined
[15:12] *** lizmat left
[15:14] *** lizmat_ left
[15:16] *** sena_kun left
[15:30] *** sena_kun joined
[16:37] *** lizmat__ left
[16:37] *** lizmat joined
[17:29] *** El_Che joined
[17:30] <El_Che> hi, regarding the build problem lizmat posted, I essentially do "git clone --recurse-submodules https://github.com/moarvm/moarvm.git && cd moarvm && git checkout 2025.01" before I get the "warning: unable to rmdir '3rdparty/rapidhash': Directory not empty"

[17:30] <tellable6> 2025-01-26T01:39:50Z #raku <[Coke]> el_che 2025.01 releases are on github

[17:34] <El_Che> the container is clean, it's a new directory, is the clone && checkout tactic a bad idea?

[17:37] <lizmat> well...maybe: it feels to me that this could well have been the first time that MoarVM had commits *after* the release, but *before* you started building packages

[17:37] <[Coke]> can you try starting the clone in the one tag you care about?

[17:38] <ugexe> i doubt it is the first time

[17:38] <ugexe> it is just the first time that it involved code that would break the olderish code

[17:39] <[Coke]> if it ws a branch you could git clone --branch ... not sure if that works on a tag.

[17:39] <ugexe> the rapid-hash thing is a red herring

[17:40] <ugexe> the problem is specifically libuv

[17:40] <[Coke]> or maybe don't do the submodule step until you've checked out the tag?

[17:42] <ugexe> yeah doing the submodule step after the checkout would probably avoid the issue

[17:43] <[Coke]> (I can duplicate the error, unsurprisingly, with the sample git commands above)

[17:49] <[Coke]> try: git clone, git checkout 2025.01, git submodule init, git submodule update

[18:17] <El_Che> sorry, I answered in #raku: 

[18:17] <El_Che> 18:47 < El_Che> I'll add --recurse-submodules to the checkout and test

[18:17] <El_Che> 18:53 < El_Che> .that seems to do it, thx for thinking with us for a solution

[18:17] <El_Che> [Coke]: I missed your answer, but we were thinking amond the same lines :)

[18:18] <El_Che> ugexe: it was the first time we hit this problem. Coincidence probably, could have happened sooner

[19:01] *** rba left
[19:01] *** rba joined
[19:01] *** camelia left
[19:45] *** arda_arda joined
[19:51] *** arda_arda left
[20:19] <ugexe> El_Che: how do you know this is the first time and not just the first time it resulted in a compiler error and thus a visible CI issue?

[20:20] <ugexe> I would have expected this same issue to have occured for other e.g. libuv updates immediately after a release

[20:20] <ugexe> however for those times the updated libuv (that shouldn't be in whatever release) would have still compiled fine

[20:21] <ugexe> similarly for other submodules

[20:21] <timo> i guess you can't just "checkout" to before a submodule was introduced, unless you manually rm -rf the submodule itself? or is there a submodule inside rapidhash too?

[20:26] <ugexe> El_Che: although to be clear I wouldn't spend any effort going back to actually check them. it is just interesting to ponder

[20:36] <El_Che> ugexe: good point. Let's say this is the first time a build failed because of it.

[20:45] <[Coke]> onward and upward.

[20:47] *** camelia joined
[23:15] *** sena_kun left
[23:18] *** guifa joined
[23:23] <jdv> [Coke]: backup?  please?1

