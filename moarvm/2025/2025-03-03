[00:07] *** bloatable6 left
[00:07] *** greppable6 left
[00:07] *** bisectable6 left
[00:07] *** sourceable6 left
[00:07] *** benchable6 left
[00:07] *** shareable6 left
[00:07] *** quotable6 left
[00:07] *** Techcable left
[00:07] *** ab5tract left
[00:07] *** mst left
[00:07] *** gfldex left
[00:07] *** jjatria left
[00:07] *** ugexe left
[00:07] *** SmokeMachine left
[00:07] *** patrickb left
[00:07] *** evalable6 left
[00:07] *** sugarbeet left
[00:07] *** jnthn left
[00:07] *** japhb left
[00:07] *** xiaomiao left
[00:07] *** vrurg left
[00:07] *** tbrowder left
[00:07] *** camelia left
[00:07] *** leedo left
[00:07] *** tellable6 left
[00:07] *** unicodable6 left
[00:07] *** releasable6 left
[00:07] *** linkable6 left
[00:07] *** committable6 left
[00:07] *** timo left
[00:07] *** rakkable left
[00:07] *** kjp left
[00:07] *** Woodi left
[00:07] *** ingy left
[00:07] *** JRaspass left
[00:07] *** Geth left
[00:07] *** rba left
[00:07] *** gfldex joined
[00:07] *** jjatria joined
[00:07] *** ugexe joined
[00:08] *** rakkable joined
[00:08] *** kjp joined
[00:08] *** camelia joined
[00:08] *** leedo joined
[00:08] *** ingy joined
[00:08] *** JRaspass joined
[00:08] *** Woodi joined
[00:08] *** timo joined
[00:08] *** committable6 joined
[00:08] *** linkable6 joined
[00:08] *** releasable6 joined
[00:08] *** unicodable6 joined
[00:08] *** tellable6 joined
[00:08] *** greppable6 joined
[00:08] *** bloatable6 joined
[00:08] *** bisectable6 joined
[00:08] *** sourceable6 joined
[00:08] *** benchable6 joined
[00:08] *** shareable6 joined
[00:08] *** quotable6 joined
[00:09] *** SmokeMachine joined
[00:09] *** Techcable joined
[00:09] *** ab5tract joined
[00:09] *** mst joined
[00:09] *** japhb joined
[00:09] *** xiaomiao joined
[00:09] *** Geth joined
[00:09] *** rba joined
[00:11] *** vrurg joined
[00:11] *** tbrowder joined
[00:16] *** patrickb joined
[00:16] *** evalable6 joined
[00:16] *** sugarbeet joined
[00:16] *** jnthn joined
[03:49] *** japhb left
[03:51] *** japhb joined
[06:37] *** japhb left
[06:41] *** japhb joined
[06:59] *** [Coke] left
[06:59] *** [Coke] joined
[09:14] *** sena_kun joined
[10:09] *** sena_kun left
[12:57] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2025/03/03/2025-09-counting-down/

[17:18] <timo> once again i am confused by the internal structure of NFAs

[17:21] <lizmat> do we have docs on that ?

[17:21] <timo> never mind, I was just Doing Pointers Wrong

[17:22] <lizmat> heh... there was a time when that acronym was used a lot

[17:28] <timo> i once had a commit that turned "charlist" edges with just a single character into a "codepoint" edge, that would also come in handy for what i'm currently looking at

[17:29] <timo> right now i'm seeing if i can make a fast path for when the NFA would immediately return "no match" and compile that into the code

[17:31] <timo> unclear if that's a win or not

[17:31] <timo> "nfa engine startup" is not really an expensive "operation", and the fast check would always have to happen and can't really take work away from the real engine

[17:42] <timo> the fast check can actually be a bunch simpler than a full nfa run, as it doesn't have to care about fates at all, and therefore the acceptable characters from all targets can be collapsed into a short list of deduplicated characters

[17:51] <timo> for example, the NFA for "proto token term" gives me 259 lines of output for "interesting edges" for the first character; subtract 43 from that for synthetic edges and epsilons, then when i deduplicate all codepoint and codepoint longlit together i'm down to 66 unique codepoints, two character classes, and four charlists that i haven't looked at yet

[17:52] <timo> the charlists expand to 9 characters

[17:54] <timo> and they are all already there as codepoint edges, too

[17:57] <timo> ok, this particular example has char classes 4 and 8 which are "alphabetic" and "numeric" respectively, which covers a quite wide variety of stuff

[18:40] *** sena_kun joined
[23:45] *** sena_kun left
