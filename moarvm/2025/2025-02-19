[00:13] *** MasterDuke left
[00:15] <timo> what are the facts of r0(2) and r26(2)?

[00:38] *** MasterDuke joined
[00:39] <MasterDuke> `r0(2): usages=3, deopt=10,9,8,7,6,5,4,3,2, flags=9     KnTyp Concr (type: Perl6::Grammar)`

[00:39] <MasterDuke> `r26(2): usages=1, flags=0`

[00:40] <timo> ok, without any knowledge of what r26(2) is, we won't be able to do anything there

[00:41] <MasterDuke> hm. so how do we teach spesh what's in there?

[00:41] <timo> i have it in front of me here now also

[00:42] <timo> getlexperinvtype_o  r26(2),  r25(1) <- this is where it comes from 

[00:43] *** MasterDuke left
[00:44] *** MasterDuke joined
[00:44] <MasterDuke> ugh, don't know why my connection's so flaky this evening

[00:51] <timo> we currently don't have a plan (MVMSpeshPlan that is) when inlining something where we didn't take an existing spesh candidate for an invocation target, which i think is what happens in the case of MARKED getting the fail cursor private method

[00:51] <timo> that's what makes the getlexperinvtype optimization bail out

[00:54] <MasterDuke> afk to run an errand, but hopefully will be back in a bit

[01:11] *** MasterDuke left
[01:20] *** MasterDuke joined
[01:20] <MasterDuke> https://gist.github.com/MasterDuke17/e11993790e4ac1c3e93fdd1a3d09c561 gets rid of all almost all those `getattr`s from MARKED

[01:21] <MasterDuke> ~1.8m fewer during CORE.c compile

[01:24] <MasterDuke> `2793502 Perl6::Grammar.$!name   at NQP::src/QRegex/Cursor.nqp:1402  (/home/dan/Source/raku/install/share/nqp/lib/QRegex.moarvm:MATCH)` is the most common

[01:45] <MasterDuke> and MARKED speshes smaller. 11 BBs instead of 14

[01:46] <MasterDuke> but it still couldn't be inlined into `ws`, `could not inline 'MARKED' (98) candidate 0: bytecode is too large to inline`

[02:10] <MasterDuke> it's 364 now instead of 436 before

[02:14] <MasterDuke> switching gears, i notice at least on this laptop that stage mast is the 2nd longest. 33s for parse, 6.4s for mast, 3.7s for optimize, 1.2s for mbc. has mast always taken that long?

[02:20] <timo> no clue

[02:22] <MasterDuke> seems to take roughly proportionally as long on the desktop. 45s parse, 9s mast, 5s optimize, 1.5s mbc

[03:05] <MasterDuke> timo: what do you think of https://gist.github.com/MasterDuke17/1882fdd002002a007db19e60eb0e37e0 ?

[03:06] <MasterDuke> but afk for today, will probably get on tomorrow evening

[03:16] *** MasterDuke left
[09:57] *** sena_kun joined
[10:27] *** sena_kun left
[18:41] *** sena_kun joined
[19:24] <timo> do you have some measurements for that patch? i don't have anything against it

[23:53] *** sena_kun left
