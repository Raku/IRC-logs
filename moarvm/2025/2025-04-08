[00:14] *** MasterDuke joined
[00:35] *** MasterDuke left
[01:37] *** RakuIRCLogger left
[04:23] *** lizmat_ left
[04:43] *** guifa left
[07:53] *** sena_kun joined
[08:29] *** sena_kun left
[08:54] *** sena_kun joined
[12:14] *** guifa joined
[12:31] *** guifa left
[12:46] *** JimmyZhuo joined
[13:39] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2025/04/08/2025-14-diving/

[14:01] *** sena_kun left
[14:02] *** sena_kun joined
[14:10] *** JimmyZhuo left
[14:17] *** leont left
[14:17] *** leont joined
[14:19] *** ab5tract left
[14:20] *** ab5tract joined
[16:02] *** sena_kun left
[16:07] *** sena_kun joined
[16:30] *** tbrowder left
[16:30] *** Techcable left
[16:30] *** Techcable joined
[16:31] *** tbrowder joined
[16:42] *** guifa joined
[19:23] <timo> we can possibly use ds->abs_byte_pos (plus perhaps some of the other members) inside of MVM_string_utf8_decodestream to get a reliable position when decodestream runs into invalid utf8 - though this is probably not the issue Coke was hitting.

[19:38] <timo> for the case where we're right at the start, i.e. pos == 0, we currently aren't outputting any "near bytes ..." information, because we only look backwards. if there's 3 bytes available ahead of our position, and we're at position 0, we should perhaps output these 3 bytes instead of nothing

[20:38] *** [Coke] left
[20:56] *** [Coke] joined
[22:10] *** guifa left
[22:51] *** sena_kun left
[22:55] *** lizmat left
[22:55] *** lizmat_ joined
