[01:29] *** nine left
[01:30] *** nine joined
[08:51] *** nine left
[08:51] *** nine joined
[10:42] <SmokeMachine> lizmat: Said I should be reporting it here... so, there we go:

[10:42] <SmokeMachine> m: m: \() ~~ Signature.new

[10:42] <camelia> rakudo-moar 92068d9b4: OUTPUT: «(signal SEGV)»

[10:43] <lizmat> additional info: in RakuAST, the AST builds ok

[10:43] <lizmat> m: say Q|\() ~~ Signature.new|.AST

[10:43] <camelia> rakudo-moar 92068d9b4: OUTPUT: «RakuAST::StatementList.new(␤  RakuAST::Statement::Expression.new(␤    expression => RakuAST::ApplyInfix.new(␤      left  => RakuAST::Term::Capture.new(␤        RakuAST::ArgList.new()␤      ),␤      infix => RakuAST::Infix.new("~~"),␤    …»

[10:43] <lizmat> m: say Q|\() ~~ Signature.new|.AST.statements.head

[10:43] <camelia> rakudo-moar 92068d9b4: OUTPUT: «RakuAST::Statement::Expression.new(␤  expression => RakuAST::ApplyInfix.new(␤    left  => RakuAST::Term::Capture.new(␤      RakuAST::ArgList.new()␤    ),␤    infix => RakuAST::Infix.new("~~"),␤    right => RakuAST::ApplyPostfix.new(␤    …»

[10:44] <lizmat> m: say Q|\() ~~ Signature.new|.AST.EVAL

[10:44] <camelia> rakudo-moar 92068d9b4: OUTPUT: «(signal SEGV)»

[10:44] <lizmat> but an EVAL segfaults

[10:44] <lizmat> m: Signature.new.ACCEPTS( \() 

[10:44] <camelia> rakudo-moar 92068d9b4: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> Signature.new.ACCEPTS( \()<HERE><EOL>␤»

[10:45] <lizmat> m: Signature.new.ACCEPTS( \() )

[10:45] <camelia> rakudo-moar 92068d9b4: OUTPUT: «(signal SEGV)»

[10:45] <lizmat> looks like it's in Signature.ACCEPTS

[10:47] <SmokeMachine> it seems to be specific on Capture candidate...

[10:49] <SmokeMachine> m: say $_, " => ", Signature.new.ACCEPTS: $_ for 1, :(), Signature.new, \()

[10:49] <camelia> rakudo-moar 92068d9b4: OUTPUT: «(signal SEGV)1 => False␤»

[10:55] <lizmat> m: Signature.new.ACCEPTS( Capture.new )

[10:55] <camelia> rakudo-moar f95f85ac3: OUTPUT: «(signal SEGV)»

[10:59] <lizmat> golfed to:

[11:00] <lizmat> m: use nqp; nqp::p6isbindable(Signature.new,Capture.new)

[11:00] <camelia> rakudo-moar f95f85ac3: OUTPUT: «(signal SEGV)»

[11:08] <lizmat> the problem appears to be at: https://github.com/rakudo/rakudo/blob/main/src/Perl6/bootstrap.c/BOOTSTRAP.nqp#L1210

[11:08] * lizmat is hoping someone will be taking it from here

[11:18] <lizmat> https://github.com/rakudo/rakudo/issues/5909

[11:54] <timo> m: use nqp; nqp::p6invokeunder("hi", "bye") for ^1000

[11:54] <camelia> rakudo-moar f95f85ac3: OUTPUT: «===SORRY!===␤No registered operation handler for 'p6invokeunder'␤»

[11:56] <timo> what did i do wrong? :)

[12:07] <timo> > p6invokeunder first argument has to be a concrete MVMCode, got a concrete P6opaque (type ContainerDescriptor)

[12:07] <timo> better than a segfault

[16:53] *** nine left
[16:53] *** nine joined
