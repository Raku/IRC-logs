[01:28] *** guifa left
[03:18] *** lizmat left
[05:30] *** guifa joined
[06:36] *** guifa left
[07:31] *** [Coke] left
[08:52] *** sena_kun joined
[09:11] *** lizmat joined
[09:26] *** [Coke] joined
[10:20] *** sena_kun left
[13:12] *** guifa joined
[16:09] *** sena_kun joined
[17:01] *** guifa left
[17:02] *** guifa joined
[19:32] *** guifa left
[20:02] *** guifa joined
[20:19] *** sena_kun left
[21:13] *** guifa left
[21:30] <Geth> ¦ MoarVM/unhandled_target_type_error_message_details: 8865659a00 | (Timo Paulssen)++ | src/core/nativecall.c

[21:30] <Geth> ¦ MoarVM/unhandled_target_type_error_message_details: in nativecast, output more details

[21:30] <Geth> ¦ MoarVM/unhandled_target_type_error_message_details: 

[21:30] <Geth> ¦ MoarVM/unhandled_target_type_error_message_details: This helped diagnose rakudobug 5682

[21:30] <Geth> ¦ MoarVM/unhandled_target_type_error_message_details: review: https://github.com/MoarVM/MoarVM/commit/8865659a00

[21:31] <timo> ok cool geth is reporting pushes, i wonder why it didn't have the one the other day

[21:32] <timo> i'm not at the computer where i'm logged in to github (because the cat has my chair) so i can't make a pull request right now, but if someone wants to review the change, it's quite small. the branch could be merged IMO

[21:48] <Geth> ¦ MoarVM/main: fa5bfd9264 | (Timo Paulssen)++ | azure-pipelines.yml

[21:48] <Geth> ¦ MoarVM/main: Port over "cache devshell dll location" from rakudo CI

[21:48] <Geth> ¦ MoarVM/main: review: https://github.com/MoarVM/MoarVM/commit/fa5bfd9264

[21:49] <timo> oops that was meant to be in a branch ... huh

[21:50] <Nicholas>  blame the cat?

[21:51] <timo> yes that is exactly what happened!

[21:51] <Nicholas> :-)

[21:51] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: 1beaf49e2f | (Timo Paulssen)++ | azure-pipelines.yml

[21:51] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: Fix OS-is-windows check that doesn't work in this file

[21:51] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: review: https://github.com/MoarVM/MoarVM/commit/1beaf49e2f

[21:52] <timo> is there a way to prevent pushes to main, but only from me? :D

[21:53] <timo> aw crud, non-main-branch commits don't get azure runs?

[21:53] <timo> i guess i don't have to sit down to click a few things

[21:54] <Geth> ¦ MoarVM: timo++ created pull request #1883: azure CI improvements taken from the recent rakudo CI re-imagining

[21:54] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1883

[21:54] <ab5tract> timo: IIUC you should only need to create a (draft) PR for the azure runs

[21:54] <Nicholas> prevent pushes - it's certainly possible on gitlab, but I don't know exactly how there, let alone where to look on github for something similar

[21:54] <Nicholas> no idea about the Azure thing

[21:54] <timo> yeah, can't make one without being logged into github though

[21:54] <timo> yeah gitlab and github both have "protected branches". not sure if the rule "only disallow timo" would be something you can configure in either?

[21:54] <Nicholas> your cat needs to watch more Bond films - the human is supposed to be *between* the cat and the chair

[21:55] <Nicholas> "Problem Exists Between Cat And Chair"

[21:55] <timo> :D

[21:56] <Nicholas> I assume that it's technically possible to make everyone the "admin who can push to main" apart from timo's cat's staff

[21:56] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: 092232206e | (Timo Paulssen)++ | azure-pipelines.yml

[21:56] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: aaaaand a typo

[21:56] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: review: https://github.com/MoarVM/MoarVM/commit/092232206e

[21:56] <timo> yeah but of course i would become sad if i lose all the other privileges that come with being an admin on a github repo :)

[21:57] <timo>  

[21:57] <timo> The macOS-12 environment is deprecated, consider switching to macOS-13, macOS-14 (macos-latest) or macOS-15. For more details, see https://github.com/actions/runner-images/issues/10721

[21:57] <timo> ^- also something we should put into the moar CI, but that's also easy enough

[21:58] <timo> a thingie that runs clang's scan-build and gcc's -fanalyzer would be neat, too.

[22:03] <timo> ummm have we always had the "Build NQP" step attempt to run PWSH code on mac because mac is not linux?

[22:04] <Nicholas> This is a sensible question and I have no idea about the answer. (Sorry)

[22:04] <timo> :D

[22:07] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: df017973f4 | (Timo Paulssen)++ | azure-pipelines.yml

[22:07] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: Switch "linux" vs "non-linux" to "windows" vs "non-windows"

[22:07] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: 

[22:07] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: The code for mac should be the same as linux, not the same

[22:07] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: as windows. We do not use powershell nor Visual Studio on mac.

[22:07] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: review: https://github.com/MoarVM/MoarVM/commit/df017973f4

[22:08] <Nicholas> I need to go to bed. Don't stay up too late.

[22:15] <timo> haha

[22:19] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: 370eff49aa | (Timo Paulssen)++ | azure-pipelines.yml

[22:19] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: don't error out if catchsegv doesn't exist (like on mac)

[22:19] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: review: https://github.com/MoarVM/MoarVM/commit/370eff49aa

[22:20] <timo> looks like i might have to wait extra-long this time around for the windows builds to even consider starting

[22:34] <timo> why am i doing azure pipelines to myself again

[22:37] <timo> azure has decided that the best order to run the 22 jobs in is first 20 jobs i am not interested in seeing, then the two i want at the very end.

[22:38] <timo> one of them has finally started

[22:40] *** lizmat left
[22:41] <timo> so, push commit introducing caching, wait 19 minutes for the first windows build to start, wait about 9 minutes for the "find dev shell dll" process to finish, then another however-many minutes for the entire build and tests to finish. after all that - and not earlier, because github would cancel the pipeline build, then you don't get anything in the caches at all - push another change to see if

[22:41] <timo> the caching is loaded properly, wait 19 minutes again for the first windows job to start, and then you may find out if it works or not. if it doesn't work, start from step one.

[22:52] <[Coke]> ugh

[22:52] <[Coke]> thanks for slogging through it

[22:57] <timo> yep. i got it wrong. haha. fun.

[22:57] <timo> i did notice it before it ran to completion

[22:58] <timo> i'll see what happens if i cancel the other jobs in the run

[22:59] <timo> oh i'm not signed in to azure on this computer either, of course

[23:01] <timo> nope. can't even when signed in. cancel all, or cancel nothing, no in-between

[23:02] <timo> that's a benefit of the different way i've set it up in the new rakudo implementation, there you can cancel "the mac builds" or "the windows builds" or "the linux builds"

[23:49] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: f402efa477 | (Timo Paulssen)++ | azure-pipelines.yml

[23:49] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: Use macos-14 by default and -13 for the "old OS" job

[23:49] <Geth> ¦ MoarVM/faster_dev_powershell_in_azure_pipelines: review: https://github.com/MoarVM/MoarVM/commit/f402efa477

[23:49] <timo> ^- no-change commit to cause a new azure pipeline run

[23:50] <timo> oh, i guess i hadn't pushed the commit yet? so it actually *is* a new commit?

