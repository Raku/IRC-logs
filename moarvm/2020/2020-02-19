[00:28] *** dogbert17 left
[00:28] *** dogbert17 joined
[01:34] *** sena_kun joined
[01:35] *** Altai-man_ left
[01:43] *** unicodable6 joined
[01:43] *** tellable6 joined
[01:44] *** evalable6 joined
[01:44] *** linkable6 left
[01:46] *** linkable6 joined
[03:33] *** Altai-man_ joined
[03:36] *** sena_kun left
[05:34] *** sena_kun joined
[05:35] *** Altai-man_ left
[07:33] *** Altai-man_ joined
[07:36] *** sena_kun left
[08:35] *** kawaii left
[08:37] *** kawaii joined
[08:52] *** zakharyas joined
[08:54] *** domidumont joined
[09:02] *** domidumont left
[09:06] *** domidumont joined
[09:10] *** domidumont1 joined
[09:14] *** domidumont left
[09:34] *** sena_kun joined
[09:35] *** Altai-man_ left
[09:40] *** domidumont1 left
[09:40] *** domidumont joined
[09:42] *** domidumont left
[09:43] *** domidumont joined
[10:28] <nwc10> good *, #moarvm

[11:02] *** domidumont left
[11:30] *** yego joined
[11:33] *** yego left
[11:33] *** Altai-man_ joined
[11:35] *** sena_kun left
[11:58] *** zakharyas left
[12:15] <Guest1277> Hello, nwc10. It's a bit empty here atm, no trace of jnthn, nine, timotimo, MasterDuke or brrt. Perhaps they're having lunch.

[12:49] <jnthn> Lunch was nice. :)

[12:55] <nine> Guest1277: well, $dayjob is kinda demanding :)

[13:04] <Guest1277> nine: indeed

[13:29] *** lucasb joined
[13:34] *** sena_kun joined
[13:36] *** Altai-man_ left
[13:50] *** zakharyas joined
[14:14] *** MasterDuke left
[14:32] *** brrt joined
[14:32] <brrt> \o

[14:33] <nwc10> o/

[14:36] <Guest1277> Hello brrt

[14:56] *** brrt left
[14:58] <Guest1277> on master I get the following test failures when using MVM_SPESH_NODELAY=1 and MVM_SPESH_BLOCKING=1

[14:59] <Guest1277> t/spec/S02-types/isDEPRECATED.rakudo.moar and t/spec/S05-grammar/parse_and_parsefile-6e.t

[15:00] <jnthn> Guest1277: I think the S02 one is longstanding and about the backtrace being less accurate, the other one looks like a real spesh bug though

[15:03] <Guest1277> jnthn: do you want the spesh bug reported in the issue tracker

[15:06] <jnthn> Can do

[15:12] *** brrt joined
[15:33] *** Altai-man_ joined
[15:35] *** sena_kun left
[15:39] <Guest1277> heh, github gives me a 500 when I try to report an issue

[15:39] <lizmat> .oO( perhaps you should make an issue for that )

[15:42] <Guest1277> aargh

[15:44] <Guest1277> something's seriously messed up atm

[15:44] <Guest1277> "Investigating - We are investigating reports of increased error rates and webhook delivery times. "

[15:59] <Guest1277> M#1242

[15:59] <linkable6> M#1242 [open]: https://github.com/MoarVM/MoarVM/issues/1242 Failure when running S05-grammar/parse_and_parsefile-6e.t under MVM_SPESH_BLOCKING and MVM_SPESH_NODELAY

[16:03] <brrt> Guest1277: does it go away with MVM_JIT_EXRP_DISABLE=1 ?

[16:04] <Altai-man_> a regression or?

[16:09] <Guest1277> brrt: nope

[16:10] <Guest1277> Altai-man_: if AlexDaniel is around we can find out

[16:11] <Guest1277> or someone who knows bisectable well

[16:11] <Altai-man_> Guest1277, can't you just test it on 2020.01? it'll be enough for deciding if we want a blocker tag or not

[16:13] <Guest1277> Altai-man_: sure, will do

[16:13] <brrt> Guest1277: I mistyped.... MVM_JIT_EXPR_DISABLE=1

[16:13] <brrt> :-)

[16:14] <Guest1277> brrt: no change :)

[16:15] <AlexDaniel> hello?

[16:16] <AlexDaniel> e: shell ‘cd sandbox; git clone https://github.com/perl6/roast.git’

[16:16] <evalable6> AlexDaniel, rakudo-moar 58e8fb150: OUTPUT: «Cloning into 'roast'...␤»

[16:17] <AlexDaniel> e: run <perl6 t/spec/S05-grammar/parse_and_parsefile-6e.t>;

[16:17] <evalable6> AlexDaniel, rakudo-moar 58e8fb150: OUTPUT: «(exit code 1) Could not open t/spec/S05-grammar…»

[16:17] <evalable6> AlexDaniel, Full output: https://gist.github.com/2d77c90f9174d17e6fd3f11993da51d2

[16:17] <AlexDaniel> e: run <perl6 sandbox/t/spec/S05-grammar/parse_and_parsefile-6e.t>;

[16:17] <evalable6> AlexDaniel, rakudo-moar 58e8fb150: OUTPUT: «(exit code 1) Could not open sandbox/t/spec/S05…»

[16:17] <evalable6> AlexDaniel, Full output: https://gist.github.com/478bd372aa83fd4b0d64f24730871a38

[16:18] <AlexDaniel> e: run <perl6 sandbox/roast/S05-grammar/parse_and_parsefile-6e.t>;

[16:18] <evalable6> AlexDaniel, rakudo-moar 58e8fb150: OUTPUT: «(exit code 1) 1..24␤ok 1 - grammar is created u…»

[16:18] <evalable6> AlexDaniel, Full output: https://gist.github.com/1908b236abebe99cdd1b5d8c80d03961

[16:18] <AlexDaniel> e: %*ENV<MVM_SPESH_BLOCKING> = 1; %*ENV<MVM_SPESH_NODELAY> = 1; run <perl6 sandbox/roast/S05-grammar/parse_and_parsefile-6e.t>;

[16:18] <evalable6> AlexDaniel, rakudo-moar 58e8fb150: OUTPUT: «(exit code 1) 1..24␤ok 1 - grammar is created u…»

[16:18] <evalable6> AlexDaniel, Full output: https://gist.github.com/829fc22370aa46e5eba6a40303f7c291

[16:19] <AlexDaniel> e: chdir ‘sandbox/roast’; %*ENV<MVM_SPESH_BLOCKING> = 1; %*ENV<MVM_SPESH_NODELAY> = 1; run <perl6 S05-grammar/parse_and_parsefile-6e.t>;

[16:19] <evalable6> AlexDaniel, rakudo-moar 58e8fb150: OUTPUT: «(exit code 1) 1..24␤ok 1 - grammar is created u…»

[16:19] <evalable6> AlexDaniel, Full output: https://gist.github.com/3315a81b3d3c0c7f1f45d78e3cddc1cb

[16:19] <AlexDaniel> that?

[16:19] <AlexDaniel> e: chdir ‘sandbox/roast’; run <perl6 S05-grammar/parse_and_parsefile-6e.t>;

[16:19] <evalable6> AlexDaniel, rakudo-moar 58e8fb150: OUTPUT: «1..24␤ok 1 - grammar is created using 6.e versi…»

[16:19] <evalable6> AlexDaniel, Full output: https://gist.github.com/e080aef9bc48e168ec5455b0bb6eb9d7

[16:20] <AlexDaniel> yep

[16:20] <AlexDaniel> 6c: chdir ‘sandbox/roast’; %*ENV<MVM_SPESH_BLOCKING> = 1; %*ENV<MVM_SPESH_NODELAY> = 1; run <perl6 S05-grammar/parse_and_parsefile-6e.t>;

[16:20] <committable6> AlexDaniel, https://gist.github.com/4f84b846751551427a93db72ecf95533

[16:21] <AlexDaniel> so it was there since at least 2019.11

[16:22] <AlexDaniel> and that's very likely related to the .raku change?

[16:24] <AlexDaniel> if you want we can checkout an older version of roast and see what's there

[16:32] *** zakharyas left
[16:34] <Guest1277> AlexDaniel++

[16:39] <Guest1277> the difference compared to the derived-specializations branch are t/spec/S11-modules/require.t and t/spec/S17-procasync/nonexistent.t

[16:41] <lizmat> so is there something that I should / could fix ?

[16:44] <Guest1277> bindkey_o requires a concrete object (got a Nil type object instead)

[16:44] <Guest1277>   in block <unit> at t/spec/S11-modules/require.t line 108

[16:44] <Guest1277> test 21 in t/spec/S11-modules/require.t

[16:44] <jnthn> Guest1277: Yeah, that's pretty much the difference I found too

[16:46] <lizmat> so when does that test fail exactly ?

[16:47] <Guest1277> lizmat: when run under jnthn's derived-specializations branch and with MVM_SPESH_BLOCKING and MVM_SPESH_NODELAY set

[16:48] <jnthn> And S05-grammar/parse_and_parsefile-6e.t fails on master with those flags also

[16:48] *** patrickb joined
[16:50] <Guest1277> brrt: does this mean anything to you - moar: src/jit/x64/tiles.dasc:675: MVM_jit_tile_sub_load_idx: Assertion `out != in1' failed.

[16:51] <jnthn> Guest1277: brrt already reproduced that one yesterday I think :)

[16:52] <jnthn> Or at least, is aware of it

[16:52] <Guest1277> ah, cool

[16:53] <lizmat> Unexpected named argument 'cache' passed

[16:53] <lizmat>    at gen/moar/stage2/NQPHLL.nqp:2463

[16:53] <lizmat> but that line *does* have a :$cache

[16:54] <lizmat> ok, I moved that test to be the first in the file, and then it just passed

[16:54] <lizmat> so it's something that gets borked *before* that

[17:04] <lizmat> hmm... should smart-matching a Failure perhaps disable the Failure ?

[17:04] <lizmat> m: my $a := Failure.new; dd $a ~~ Failure; dd $a.Int   # still throws

[17:04] <camelia> rakudo-moar 8c995febd: OUTPUT: «Bool::True␤Failed␤  in block <unit> at <tmp> line 1␤␤»

[17:05] <lizmat> m: my $a := Failure.new; dd $a.Bool; dd $a.Int   # still throws

[17:05] <camelia> rakudo-moar 8c995febd: OUTPUT: «Bool::False␤Int␤»

[17:05] <lizmat> *does not throw

[17:06] <brrt> Guest1277: I heard about that yes, but I haven't reproduced it yet

[17:06] <brrt> (locally)

[17:21] *** Kaiepi left
[17:21] *** Kaiepi joined
[17:23] <brrt> I seem to get failures when running 'make spectest' though

[17:23] <brrt> not make test

[17:27] <patrickb> o/

[17:28] <patrickb> Can someone have a look at https://github.com/MoarVM/MoarVM/pull/1241 ?

[17:31] *** Kaiepi left
[17:32] *** Kaiepi joined
[17:34] *** sena_kun joined
[17:35] *** Altai-man_ left
[17:36] *** brrt left
[17:36] *** domidumont joined
[17:37] <Geth> ¦ MoarVM: 2cc4d30271 | (Patrick Böker)++ | 2 files

[17:37] <Geth> ¦ MoarVM: Revert "Dynamic library loading works with unicody paths on Windows"

[17:37] <Geth> ¦ MoarVM:

[17:37] <Geth> ¦ MoarVM: This reverts commit efeec455e025f273eede110e099a8f8b21b5e108.

[17:37] <Geth> ¦ MoarVM: It's not needed anymore, because the fix has been pushed upstream and been

[17:37] <Geth> ¦ MoarVM: released with Dyncall 1.1 which we just bumped to.

[17:37] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2cc4d30271

[17:37] <Geth> ¦ MoarVM: b0604e575b | (Jonathan Worthington)++ (committed using GitHub Web editor) | 2 files

[17:37] <Geth> ¦ MoarVM: Merge pull request #1241 from patrickbkr/win-unicode-workaround-revert

[17:37] <Geth> ¦ MoarVM:

[17:37] <Geth> ¦ MoarVM: Revert "Dynamic library loading works with unicody paths on Windows"

[17:37] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b0604e575b

[17:37] <patrickb> Thanks!

[17:39] <lizmat> m: my $a = Failure.new; $a.not; dd $a   # doesn't this look, weird ???

[17:39] <camelia> rakudo-moar 8c995febd: OUTPUT: «Failure $a = &CORE::infix:<orelse>(Failure.new(exception => X::AdHoc.new(payload => "Failed"), backtrace => Backtrace.new), *.self)␤»

[17:39] <lizmat> where does the infix<orelse> come from ?

[17:55] <dogbert17> .tell brrt compile moarvm with --no-optimize and then run: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 ./perl6-m -Ilib t/spec/S05-grammar/parse_and_parsefile-6e.t

[17:55] <tellable6> dogbert17, I'll pass your message to brrt

[18:08] *** domidumont left
[18:48] *** MasterDuke joined
[19:32] *** brrt joined
[19:33] *** Altai-man_ joined
[19:35] *** sena_kun left
[19:51] *** brrt` joined
[19:52] *** brrt left
[20:01] *** Kaiepi left
[20:01] *** Kaiepi joined
[20:30] *** brrt`` joined
[20:32] *** brrt` left
[21:34] *** sena_kun joined
[21:35] *** Altai-man_ left
[22:19] *** lucasb left
[22:21] *** patrickb left
[22:31] *** brrt`` left
[23:21] *** MasterDuke left
[23:33] *** Altai-man_ joined
[23:35] *** sena_kun left
