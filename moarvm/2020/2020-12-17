[00:36] *** Kaeipi left
[00:36] *** Kaeipi joined
[01:03] *** dogbert17 joined
[01:06] *** dogbert11 left
[01:09] *** sxmx left
[01:22] *** Merfont joined
[01:22] *** Kaeipi left
[01:24] *** Geth left
[01:24] *** tbrowder left
[01:24] *** BinGOs left
[01:30] *** Geth joined
[01:30] *** tbrowder joined
[01:30] *** BinGOs joined
[03:57] *** leont left
[05:17] *** evalable6 left
[05:17] *** linkable6 left
[05:17] *** linkable6 joined
[05:18] *** evalable6 joined
[06:30] *** frost-lab joined
[08:34] *** domidumont joined
[09:03] *** zakharyas joined
[09:07] *** domidumont left
[09:08] *** sena_kun joined
[10:05] *** domidumont joined
[10:24] <MasterDuke> hm, so 3rdpart/gmp/gmp.h only exists after gmp is built

[10:27] <Geth> Â¦ MoarVM: timgates42++ created pull request #1406: docs: fix simple typo, instruciton -> instruction

[10:27] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1406

[10:27] <Geth> Â¦ MoarVM: 88cf264bcb | (Tim Gates)++ | src/spesh/args.c

[10:27] <Geth> Â¦ MoarVM: docs: fix simple typo, instruciton -> instruction

[10:27] <Geth> Â¦ MoarVM: 

[10:27] <Geth> Â¦ MoarVM: There is a small typo in src/spesh/args.c.

[10:27] <Geth> Â¦ MoarVM: 

[10:27] <Geth> Â¦ MoarVM: Should read `instruction` rather than `instruciton`.

[10:27] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/88cf264bcb

[10:27] <Geth> Â¦ MoarVM: 0323c7bce1 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/spesh/args.c

[10:27] <Geth> Â¦ MoarVM: Merge pull request #1406 from timgates42/bugfix_typo_instruction

[10:27] <Geth> Â¦ MoarVM: 

[10:27] <Geth> Â¦ MoarVM: docs: fix simple typo, instruciton -> instruction

[10:27] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0323c7bce1

[10:29] <MasterDuke> so how does a normal build succeed when building moar before gmp?

[10:32] <jnthn> Leftover previous build?

[10:32] <jnthn> Did `make clean` get updated to clean it up also?

[10:35] <MasterDuke> i did a `make realclean` and then even went to 3rdparty/gmp and did `git clean -xdf`. there was no 3rdparty/gmp/gmp.h anymore

[10:36] <jnthn> System gmp?

[10:37] <jnthn> (it falls back to a system version of the header, which is close enough)

[10:38] <MasterDuke> i guess. so i just need to force gmp to be built first?

[10:39] <MasterDuke> i do have a /usr/include/gmp.h

[10:48] <jnthn> Yes

[10:48] <jnthn> Maybe this explains the Windows issue :)

[10:49] <nine> So the question is no longer "does it work with system gmp" but "does it actually work with the bundled gmp" ;)

[10:49] <MasterDuke> ugh, i hate trying to figure out build stuff. i now have it saying it's building gmp before moar, but it doesn't actually

[10:50] <MasterDuke> well, ldd of libmoar isn't pointing at my system gmp unless i do --has-gmp

[10:50] <jnthn> Yes, I think the question is actually "does the unholy alliance of my system gmp headers and the gmp I've built work together" :)

[10:52] <MasterDuke> https://gist.github.com/MasterDuke17/fbd7669a0addf08a561ffd0e2c12ea7f

[10:53] <MasterDuke> why does it start compiling moarvm files before actually doing the gmp build?

[10:56] <jnthn> > /dev/null

[10:56] <MasterDuke> and i guess the linux/mac vm in our CI also have a system gmp installed

[10:56] <jnthn> Maybe there's an error and it's getting sent there? :)

[10:56] <jnthn> Though they should really go on stderr...and cause it to terminate the build :S

[11:01] <MasterDuke> if i copy that string of commands https://gist.github.com/MasterDuke17/fbd7669a0addf08a561ffd0e2c12ea7f#file-gistfile1-txt-L5 and manually run it, it does build gmp. but why is the make doing it later?

[11:02] <jnthn> Are you `make -j` or something?

[11:02] <jnthn> So it's doing some kind of parallel build?

[11:03] <MasterDuke> i usually do, but i haven't been to test exactly that

[11:06] <jnthn> I'm out of guesses if it's not that

[11:08] <MasterDuke> oh wait. -j1 does in fact built gmp first

[11:08] <nine> So you're missing dependencies in the Makefile

[11:09] <MasterDuke> i've manually edited the Makefile so the `moar` target looks like `moar: $(THIRDPARTY) $(MAIN_OBJECTS) libmoar.so` (the `$(THIRDPARTY) ` is new)

[11:10] <MasterDuke> and `THIRDPARTY = 3rdparty/cmp/libcmp.a 3rdparty/dyncall/dyncall/libdyncall_s.a 3rdparty/dyncall/dyncallback/libdyncallback_s.a 3rdparty/dyncall/dynload/libdynload_s.a 3rdparty/gmp/libgmp.a 3rdparty/libatomicops/src/libatomic_ops.a 3rdparty/ti    nymt/libtinymt.a 3rdparty/sha1/libsha1.a 3rdparty/libuv/libuv.a`

[11:10] <nine> With that make may run everything in parallel, except for the very last step of linking moar

[11:10] <nine> Which may be just fine?

[11:11] <MasterDuke> no, it's the actual compiling of moar that visual studio complains about since it can't find a gmp.h, which is only generated after gmp is built

[11:11] <jnthn> Depends if the header file (or others) get generated

[11:11] <MasterDuke> so gmp at least needs to happen first

[11:14] <nine> So moar.h needs a dependency on gmp.h

[11:24] <MasterDuke> let's see what https://github.com/MoarVM/MoarVM/pull/1402/commits/b142e5286c4130523a43b8d092346bada7e778b0 does

[11:28] <MasterDuke> ugh, appveyor complains `NMAKE : fatal error U1073: don't know how to make '3rdparty\gmp\libgmp.a'`

[11:29] <MasterDuke> but maybe that's not unexpected? it's at least trying to build it first, now we just have to figure out how to actually build gmp on windows

[11:32] <MasterDuke> no wait. that means it doesn't know about the target, not that executing the target failed...

[11:33] <nine> And how should it? There's no rule for creating that file in the Makefile

[11:34] <MasterDuke> there is on that branch

[11:34] <nine> where?

[11:35] <MasterDuke> https://github.com/MoarVM/MoarVM/pull/1402/files#diff-032892f2b40899c7dd66577777bc7d6c0383ec93c6182321453ed306fdfe393dR698-R700

[11:35] <MasterDuke> so i have this in my Makefile locally

[11:35] <MasterDuke> 3rdparty/gmp/libgmp.a:

[11:35] <MasterDuke>     $(MSG) building $@...

[11:35] <MasterDuke>     $(CMD)cd 3rdparty/gmp && sh .bootstrap && CC='$(CC)' CFLAGS='$(CFLAGS)' ./configure --enable-shared=no --with-pic  && $(MAKE) && cp .libs/libgmp.a . && cd ..

[11:37] <MasterDuke> does the order of the targets in the file matter for nmake? does `3rdparty/gmp/libgmp.a:` need to move before `$(MAIN_OBJECTS) $(OBJECTS):`?

[11:38] <nine> in general no

[11:39] <nine> The list is a list of requirements. All of them have to be satisfied before the target can be built

[11:39] <nine> So order does not matter as such

[11:39] <MasterDuke> didn't think so...

[11:40] <MasterDuke> same error in azure

[11:40] <nine> FWIW it works here, even if I move /usr/include/gmp.h out of the way

[11:40] <nine> with make -j19

[11:41] <MasterDuke> before the most recent commit? or with it?

[11:41] <nine> with it

[11:42] <nine> So, what does the generated Makefile on Windows look like?

[11:42] <MasterDuke> don't know

[11:42] <nine> I think getting hold of a copy with reveal the issue quite quickly :)

[11:43] <nine> You could just add a "cat Makefile" to the build process at an appropriate place to get it into the build log

[11:43] <nine> or the Windows equivalent

[11:44] <nine> Oh, it's even easier! should be 3rdparty/gmp/gmp.lib on Windows, not libgmp.a

[11:44] <nine> Look at the Configure.pl output

[11:44] <MasterDuke> doh

[11:47] <timotimo> is the file really called .bootstrap

[11:48] <timotimo> and i guess windows wouldn't be able to `sh .bootstrap` anyway?

[11:48] <MasterDuke> yep

[11:52] <nine> MasterDuke: it's not just the extension. There's also no "lib" prefix on Windows

[11:53] <jnthn> Windows builds often have their separate set of things you need to invoke

[11:53] <MasterDuke> https://github.com/MoarVM/MoarVM/pull/1402/commits/6ce37d1e680a7f1424f740cddaf0c0fa9bf84624

[11:54] <MasterDuke> think that's the right way

[11:55] <MasterDuke> ah ha. not success, but a better failure https://ci.appveyor.com/project/samcv/moarvm-35u74/builds/36885759/job/66rqt4r56mou65qi#L93

[11:56] <nine> indeed....so the next question is: what to run instead of .bootstrap?

[11:58] <MasterDuke> https://stackoverflow.com/questions/4711315/build-gmp-on-64bit-windows maybe just run configure and make?

[11:58] <nine> https://gmplib.org/manual/Notes-for-Particular-Systems

[12:05] *** travis-ci joined
[12:05] <travis-ci> MoarVM build passed. Elizabeth Mattijsen 'Merge pull request #1406 from timgates42/bugfix_typo_instruction

[12:05] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/750195047 https://github.com/MoarVM/MoarVM/compare/98fccebf983e...0323c7bce1dc

[12:05] *** travis-ci left
[12:05] <MasterDuke> this is where i start to bow out in hopes that somebody who knows how to build things on windows can take over

[12:05] <lizmat> whee!  the power of fixing misspellings  :-)

[12:06] <jnthn> MasterDuke: Aren't we using a fork of gmp that builds on Windows, and doesn't it have instructions?

[12:06] *** zakharyas left
[12:07] <jnthn> Yes, see https://github.com/ShiftMediaProject/gmp/tree/master/SMP

[12:07] <MasterDuke> it adds a visual studio project aiui https://github.com/ShiftMediaProject/gmp/tree/master/SMP

[12:07] <MasterDuke> jinx

[12:08] <jnthn> haha

[12:09] <jnthn> Yeah, so I guess that has to be built, but then it mentions some other dependency too :S

[12:11] <MasterDuke> but do we want to *require* visual studio to build moarvm? doesn't our current windows build just use nmake and such, not build via VS projects?

[12:11] <MasterDuke> so do we need to figure out both?

[12:12] <jnthn> Hmmm, does it require the IDE or just the toolchain?

[12:12] *** lizmat_ joined
[12:13] <MasterDuke> don't know, does https://github.com/ShiftMediaProject/gmp/blob/master/SMP/appveyor.yml help?

[12:14] <MasterDuke> i haven't used VS in probably 20 years, so not sure how much help i can be

[12:14] *** lizmat left
[12:15] *** lizmat_ is now known as lizmat

[12:38] <cog> Hi, in tile_pattern.file I don't understand the purpose of symbols with $ sigils. I thought pattern for immediate value but that does not seem the case in (define: (guard void $before $after) void)

[12:41] <cog> Probably the generated tile_patternm.h will help me to understand

[12:51] *** leont joined
[13:08] *** Altai-man joined
[13:11] *** sena_kun left
[13:18] *** zakharyas joined
[13:21] *** frost-lab left
[13:51] *** zakharyas left
[15:08] <[Coke]> (windows build) let me know if you need a test run on something other than master.

[15:10] <[Coke]> yes, we don't require VS

[15:10] <[Coke]> (but I'm using the VS x64 command prompt to do the build)

[15:13] <[Coke]> MVM_Sset_running_threadds_context - void function returning a value

[15:13] <[Coke]> MVM_set_running_threadds_context - void function returning a value

[15:14] <[Coke]> ... still a typo. :)

[15:16] <[Coke]> anyone want a capture of all the widows compiler warnings? (There's a lot, but many dupes)

[15:16] <[Coke]> *windows. wow. typing is hard today

[15:30] *** zakharyas joined
[15:48] <MasterDuke> [Coke]: i assume that's just from master? can you try https://github.com/MoarVM/MoarVM/pull/1402 ? are you up for trying to adopt suggestions from https://gmplib.org/manual/Notes-for-Particular-Systems and/or https://github.com/ShiftMediaProject/gmp/blob/master/SMP/appveyor.yml ?

[15:55] <[Coke]> is there an easy way to do that from rakudo's configure, or should I do a 3-stage build?

[15:55] <MasterDuke> do what?

[15:56] <[Coke]> any configure options needed on that moarvm branch?

[15:57] <MasterDuke> oh, nope

[15:57] <[Coke]> "do what" == build. I'll just build your moarvm separately and then build on top of it if it works.

[15:58] <MasterDuke> it won't build as is on windows, it needs something done. exactly what i don't know

[15:59] <[Coke]> is it expected that "updating submodules" is slow?

[16:01] <[Coke]> configure gave a warning about libzstd but completed

[16:03] <MasterDuke> i think the slow updating modules is just a windows thing, but i'm not sure

[16:03] <MasterDuke> yeah, configure should be fine

[16:04] <[Coke]> building, no issues yet...

[16:05] <MasterDuke> that's kind of surprising...

[16:07] <[Coke]> .. it's building libtonmath?

[16:09] <MasterDuke> must not be on my branch then

[16:10] <MasterDuke> did this? https://github.com/TeamPorcupine/ProjectPorcupine/wiki/How-to-Test-a-Pull-Request

[16:12] <[Coke]> (branch) DOH

[16:13] <MasterDuke> heh

[16:14] <[Coke]> trying again. :)

[16:19] <[Coke]> aaahahaha

[16:19] <[Coke]> build dies immediately with "sh is not recognized...'

[16:22] <MasterDuke> yeah, right now it does this https://github.com/MoarVM/MoarVM/pull/1402/files#diff-ba6609baf53b3f3d02c18be173bbe1fa52739b47523ae83049e43527df92f95cR26

[16:22] <[Coke]> OK. I'm at $dayjob, but will see if I can find an answer this evening.

[16:23] <MasterDuke> could you try manually running just the configure and make part? i.e., not doing the `sh .bootstrap` at all

[16:23] <MasterDuke> thanks

[16:25] <[Coke]> removing && sh .boot.... gives an error about 'CC' is not recognized... (doesn't like that shell syntax, guessing)

[16:26] <[Coke]> and there's no .\configure

[16:27] <[Coke]> and .bootstrap is calling things that don't exist on windows

[16:28] <[Coke]> so your note before about just running configure: doesn't exist.

[16:29] <[Coke]> the link from earlier doesn't show how to generate it. (unless I have to install cygwin)

[16:29] <MasterDuke> yeah, interesting

[16:43] *** squashable6 left
[16:43] *** squashable6 joined
[17:09] *** sena_kun joined
[17:11] *** Altai-man left
[17:44] *** lucasb joined
[18:21] *** domidumont left
[18:27] *** MasterDuke left
[19:02] *** Merfont left
[19:02] *** Merfont joined
[19:19] *** vrurg left
[19:20] *** zakharyas left
[19:58] *** vrurg joined
[20:52] *** vrurg left
[20:58] *** zakharyas joined
[21:08] *** Altai-man joined
[21:10] *** sena_kun left
[21:38] *** MasterDuke joined
[21:39] *** Altai-man left
[21:54] *** vrurg joined
[22:00] <[Coke]> so there's an MPIR fork of GMP that includes build stuff for windows.

[22:00] *** zakharyas left
[22:02] <[Coke]> Looking at GMP build instructions, I don't see anything in core that really fits with our build system. it's basically "install enough *nix so you can generate ./configure"

[22:08] <[Coke]> could we always build windows with the old math lib?

[22:08] <[Coke]> or is the goal to throw that one out?

[22:30] <MasterDuke> we could do that. but gmp is so much faster i'd prefer to switch over completely

[22:30] <MasterDuke> the mpir fork is quite a bit outdated i believe. the smp fork we're using is current with upstream releases

[22:31] <MasterDuke> [Coke]: were you able to pull anything useful from https://github.com/ShiftMediaProject/gmp/blob/master/SMP/appveyor.yml ?

[22:33] <[Coke]> I don't know what to do with that file, nope.

[22:34] <[Coke]> would require a deeper dive than I've been able to do today

