[00:00] *** MasterDuke joined
[01:34] *** sena_kun joined
[01:36] *** Altai-man_ left
[03:33] *** Altai-man_ joined
[03:35] *** sena_kun left
[05:34] *** sena_kun joined
[05:36] *** Altai-man_ left
[07:33] *** Altai-man_ joined
[07:35] *** sena_kun left
[07:53] *** domidumont joined
[07:55] *** brrt joined
[08:47] *** zakharyas joined
[08:56] <nwc10> good *, #moarvm

[09:07] <brrt> good * nwc10

[09:07] <tellable6> 2020-02-19T17:55:04Z #moarvm <dogbert17> brrt compile moarvm with --no-optimize and then run: MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 ./perl6-m -Ilib t/spec/S05-grammar/parse_and_parsefile-6e.t

[09:07] <brrt> thank you dogbert17

[09:34] *** sena_kun joined
[09:35] *** Altai-man_ left
[09:40] *** brrt left
[10:24] <jnthn> i.

[10:24] <jnthn> um, o/

[10:30] <nwc10> \o

[11:33] *** Altai-man_ joined
[11:36] *** sena_kun left
[11:53] *** MasterDuke left
[12:30] *** brrt joined
[12:49] <Geth> Â¦ MoarVM: 978480b288 | (Jonathan Worthington)++ | 2 files

[12:49] <Geth> Â¦ MoarVM: Mark cmp_tc static to avoid linker errors

[12:49] <Geth> Â¦ MoarVM:

[12:49] <Geth> Â¦ MoarVM: Hopefully helps with #1234.

[12:49] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/978480b288

[12:49] <linkable6> MOARVM#1234 [open]: https://github.com/MoarVM/MoarVM/issues/1234 [BLOCKER] Various issues when gcc-10 is used on macOS

[12:49] <jnthn> That's a cute issue number :)

[12:51] <Altai-man_> jnthn, any chances you'll be able to help with the signature blocker?

[12:53] <jnthn> Maybe, first I need to figure out how to repro it...

[12:53] <jnthn> Altai-man_: About the other MoarVM one you marked blocker: not sure we'll find that long-standing issue in a hurry...

[12:53] <Altai-man_> jnthn, checkout to errata (either c or d) and then just make stresstest.

[12:53] <Altai-man_> releasable6, status

[12:54] <releasable6> Altai-man_, Next release in â‰ˆ2 days and â‰ˆ6 hours. 4 blockers. 139 out of 242 commits logged (âš  2 warnings)

[12:54] <releasable6> Altai-man_, Details: https://gist.github.com/65d46bc860541eb88fa448b0a235fae1

[12:55] <Altai-man_> jnthn, I think if it is reliable on macos, we can somehow debug that, no?

[12:56] <Altai-man_> if it is very heizen, not a blocker, but I saw lizmat confirming it's not.

[12:56] <lizmat> sorry, which one are we talking about now?

[12:56] <Altai-man_> https://github.com/MoarVM/MoarVM/issues/1237

[12:57] <Altai-man_> lock-async-stress2.t panic.

[13:00] <lizmat> yeah, between 30 and 50 runs, and it would fail

[13:00] <lizmat> running it again now... so far no fail

[13:02] <lizmat> no fail yet

[13:07] <lizmat> still not broken

[13:07] <jnthn> Yes, it's good at hiding

[13:08] <lizmat> the times I tried it the other day, it would have produced it already

[13:09] * lizmat adds a displayable counter

[13:09] <lizmat> bingo: MoarVM panic: Corrupt multi dispatch cache: cur_node != 0, re-check == 0x0

[13:11] <jnthn> committable6: all say :($ is raw where True, $ is copy, Int $ is rw, $ is raw where True = 2).perl

[13:11] <lizmat> this is the code I run: loop { say $++; run <raku t/spec/S17-promise/lock-async-stress2.t> }

[13:12] <jnthn> bisectable6: say :($ is raw where True, $ is copy, Int $ is rw, $ is raw where True = 2).perl

[13:12] <committable6> jnthn, https://gist.github.com/2011d735147bf20180d028cf292ceb55

[13:12] <bisectable6> jnthn, Bisecting by output (old=2015.12 new=9217b1c) because on both starting points the exit code is 0

[13:12] <bisectable6> jnthn, bisect log: https://gist.github.com/4712dbed9d0300c7f735e91cac4997e3

[13:12] <bisectable6> jnthn, (2016-03-04) https://github.com/rakudo/rakudo/commit/eac1e26d6342d0d65ff39a82d7b204341e986a91

[13:12] <jnthn> Something changed $ into \ in the output

[13:12] <jnthn> In the latest release

[13:12] *** brrt left
[13:13] <jnthn> (this is the signautre one)

[13:13] <jnthn> ah, maybe more on topic in #raku-dev

[13:14] *** zakharyas left
[13:34] *** sena_kun joined
[13:36] *** Altai-man_ left
[13:49] <Guest1277> jnthn: wrt the Corrupt multi dispatch cache bug. Can't you leave it running in gdb, in another terminal, while doing something else?

[13:50] <Guest1277> I seem to remember that you aquired a super PC last year (12 cpu's ?)

[13:50] <Guest1277> *12 cores

[14:05] <jnthn> The problem is more once it's reproduced; I've got to that point before, and it was still really unclear what was wrong.

[14:21] <nine> So you'll want to run it in rr

[14:21] <nine> rr is a real life safer in such cases

[14:23] <Guest1277> as long as you don't have a ... processor :)

[14:24] <Guest1277> but I suspect that jnthn has an Intel cpu

[14:25] <lizmat> made a small change to the script, and now it's been running 340x without a hitch

[14:26] <lizmat> when it reaches 1000 I will tell what the change is

[14:26] <lizmat> *if

[14:30] <lizmat> ok, 403, so that doesn't make a difference  :-(

[14:38] *** lucasb joined
[14:44] *** zakharyas joined
[14:55] *** brrt joined
[14:59] <Guest1277> hi brrt

[14:59] <lizmat> jnthn: I changed the cas in Lock::Async::lock to nqp::cas...  which shouldn't make any difference

[14:59] <brrt> hi Guest1277

[15:00] <lizmat> now at 370 runs

[15:01] <Guest1277> brrt: have you managed to repro the assert failure?

[15:06] <lizmat> 600 runs

[15:07] <lizmat> this fix is probably just making it even more difficult to create the error

[15:07] <lizmat> or could be an indication as to where the actual problem is?

[15:10] <sena_kun> if it is in 300 times range, and not a new issue, this removes the blocker tag for me, so not a hill to die on

[15:11] <brrt> Guest1277: I've been swamped by $dayjob

[15:11] <lizmat> sena_kun: I'm gonna let it run to 1000

[15:12] <jnthn> lizmat: Well, if the problem shows up in the multi dispatch cache, and we don't call the cas multi, then that fits

[15:12] <lizmat> ah, duh..  :-)

[15:13] <lizmat> jnthn: but that also means that the problem is either in multi-dispatch, possibly in conjunction with cas

[15:14] <lizmat> also: I did *not* change the cas() in the unlock method, just in the lock() method

[15:14] <lizmat> so if there's corruption, it's only when acquiring a lock

[15:14] <lizmat> but that would be strange, as acquiring the lock hasn't got anything to do with case, right

[15:14] <lizmat> ?

[15:17] <lizmat> 1000+   :-)

[15:20] *** moritz_ is now known as moritz

[15:33] *** Altai-man_ joined
[15:36] *** sena_kun left
[16:38] *** domidumont left
[16:53] *** brrt left
[17:29] <Geth> Â¦ MoarVM: a71eee4c25 | (Jonathan Worthington)++ | 3 files

[17:29] <Geth> Â¦ MoarVM: Allow closing handle bound to async proc stdin

[17:29] <Geth> Â¦ MoarVM:

[17:29] <Geth> Â¦ MoarVM: This provides a way for the thing spawning the process to request that

[17:29] <Geth> Â¦ MoarVM: the handle bound to its stdin is closed at the point that the process

[17:29] <Geth> Â¦ MoarVM: exits (or when spawing fails). This will help us to fix the handle leak

[17:29] <Geth> Â¦ MoarVM: reported in https://github.com/rakudo/rakudo/issues/3057.

[17:29] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a71eee4c25

[17:34] *** sena_kun joined
[17:36] *** Altai-man_ left
[18:26] *** domidumont joined
[18:26] *** domidumont left
[18:28] *** domidumont joined
[18:48] *** zakharyas left
[19:33] *** Altai-man_ joined
[19:35] *** brrt joined
[19:36] *** sena_kun left
[19:50] *** domidumont left
[20:10] *** zakharyas joined
[20:14] *** brrt left
[20:55] *** zakharyas left
[21:34] *** sena_kun joined
[21:35] *** patrickb joined
[21:36] *** Altai-man_ left
[21:47] *** camelia left
[22:19] *** MasterDuke joined
[23:03] *** patrickb left
[23:33] *** Altai-man_ joined
[23:36] *** sena_kun left
[23:38] *** lucasb left
