[01:34] *** sena_kun left
[01:49] *** sena_kun joined
[03:34] *** sena_kun left
[03:47] *** sena_kun joined
[05:34] *** sena_kun left
[05:51] *** sena_kun joined
[07:34] *** sena_kun left
[07:48] *** domidumont joined
[07:48] *** sena_kun joined
[08:47] *** zakharyas joined
[09:33] *** sena_kun left
[09:42] *** sena_kun joined
[10:45] *** zakharyas left
[10:48] *** zakharyas joined
[11:27] *** Guest4508 left
[11:32] *** Altai-man_ joined
[11:34] *** sena_kun left
[11:50] *** Altai-man_ is now known as sena_kun

[12:09] *** Guest1277 joined
[12:14] *** zakharyas left
[12:59] *** patrickb joined
[13:00] *** lucasb joined
[13:32] *** Altai-man_ joined
[13:34] *** sena_kun left
[14:12] *** zakharyas joined
[14:19] *** Util_ is now known as Util

[15:21] *** sena_kun joined
[15:23] *** Altai-man_ left
[15:32] *** Altai-man_ joined
[15:34] *** sena_kun left
[16:14] *** domidumont left
[16:19] <Geth> Â¦ MoarVM/derived-specializations: 4fd8740463 | (Jonathan Worthington)++ | src/6model/reprs/MVMStaticFrameSpesh.c

[16:19] <Geth> Â¦ MoarVM/derived-specializations: Mark the type tuple stored in a spesh candidate

[16:19] <Geth> Â¦ MoarVM/derived-specializations: review: https://github.com/MoarVM/MoarVM/commit/4fd8740463

[17:06] <Geth> Â¦ MoarVM/derived-specializations: 61176ca3e2 | (Jonathan Worthington)++ | src/spesh/plan.c

[17:06] <Geth> Â¦ MoarVM/derived-specializations: Use candidates for existing specialization check

[17:06] <Geth> Â¦ MoarVM/derived-specializations:

[17:06] <Geth> Â¦ MoarVM/derived-specializations: This is much simpler than walking the guard tree, and also will be

[17:06] <Geth> Â¦ MoarVM/derived-specializations: robust in the face of derived specializations.

[17:06] <Geth> Â¦ MoarVM/derived-specializations: review: https://github.com/MoarVM/MoarVM/commit/61176ca3e2

[17:08] <jnthn> Hurrah, the new specialization guard tree builder that I now have locally is good enough to survive NQP make test

[17:10] <jnthn> Two missing bits to add to make it, in theory, good for Raku also

[17:11] <nine> Nice progress :)

[17:11] <jnthn> This is all a yak shave for derived specializations, although it will also simplify the arg guard tree walking too, by needing a piece of state less

[17:13] <jnthn> oh wow, turns out I also never implemented a possible optimization in the guard tree walker too...

[17:15] *** patrickb left
[17:20] <nine> I know how it is. I'm currently about 4 layers of yak shaving deep myself :)

[17:28] *** patrickb joined
[17:28] <Geth> Â¦ MoarVM: Kaiepi++ created pull request #1240: Include system headers after headers local to MoarVM in the Makefile

[17:28] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1240

[17:30] *** domidumont joined
[17:30] *** domidumont left
[17:33] *** sena_kun joined
[17:35] *** Altai-man_ left
[17:48] <Geth> Â¦ MoarVM/derived-specializations: 9a59e28fe5 | (Jonathan Worthington)++ | 2 files

[17:48] <Geth> Â¦ MoarVM/derived-specializations: Re-implement arg guard rebuilding

[17:48] <Geth> Â¦ MoarVM/derived-specializations:

[17:48] <Geth> Â¦ MoarVM/derived-specializations: Now we rebuild the argument guard tree as a whole, rather than trying to

[17:48] <Geth> Â¦ MoarVM/derived-specializations: copy and tweak the existing tree. This makes things far easier to reason

[17:48] <Geth> Â¦ MoarVM/derived-specializations: about, especially given we're about to add support for specializations

[17:48] <Geth> Â¦ MoarVM/derived-specializations: on only some argument types, which are far more challening to update an

[17:48] <Geth> Â¦ MoarVM/derived-specializations: existing tree to incorporate. This approach also means we can convey the

[17:48] <Geth> Â¦ MoarVM/derived-specializations: certain specialization results to all the needed places, so we should be

[17:48] <Geth> Â¦ MoarVM/derived-specializations: able to remove the special-case result node for that also, just making

[17:48] <Geth> Â¦ MoarVM/derived-specializations: the arg guard walker a little simpler.

[17:48] <Geth> Â¦ MoarVM/derived-specializations: review: https://github.com/MoarVM/MoarVM/commit/9a59e28fe5

[17:50] <jnthn> Now it handles the Raku cases too, so switched over to it :)

[17:55] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/02/17/2020-07-irky-reblessing/

[18:06] <jnthn> And reapplying the derived specialization patch atop of all that yak shave means it goes from a build failure very early in the NQP build process to a single SEGV in the NQP test suite

[18:06] <jnthn> The rakudo build makes it to CORE.setting compilation before SEGV, and probably it'll be for the very same reason.

[18:06] <nwc10> but first, food?

[18:06] *** AlexDaniel` left
[18:07] *** rba[m] left
[18:07] <nine> So it's nice of that test case to fail, so you won't have to debug CORE.setting compilation :)

[18:09] <Geth> Â¦ MoarVM/derived-specializations: 5e7e701615 | (Jonathan Worthington)++ | src/spesh/plan.c

[18:09] <Geth> Â¦ MoarVM/derived-specializations: First attempt at derived specializations

[18:09] <Geth> Â¦ MoarVM/derived-specializations:

[18:09] <Geth> Â¦ MoarVM/derived-specializations: This tries to find patterns where some types are very stable, and others

[18:09] <Geth> Â¦ MoarVM/derived-specializations: vary, and then makes specializations that only specialization the stable

[18:09] <Geth> Â¦ MoarVM/derived-specializations: types. The hope is that this will allow for far better scalability of

[18:09] <Geth> Â¦ MoarVM/derived-specializations: our optimizations in real world programs, where some things - such as

[18:09] <Geth> Â¦ MoarVM/derived-specializations: array and hash operations - encounter a broad range of types in the

[18:09] <Geth> Â¦ MoarVM/derived-specializations: value, but are pretty much always called on the same kind of thing

[18:09] <Geth> Â¦ MoarVM/derived-specializations: (Array, Hash, etc.)

[18:09] <Geth> Â¦ MoarVM/derived-specializations: review: https://github.com/MoarVM/MoarVM/commit/5e7e701615

[18:09] <jnthn> nine: Indeed :)

[18:09] <jnthn> nwc10: Yeah, though first I need to walk home, then when I get there I need to cook it... :)

[18:09] <jnthn> Will probably get back to this tomorrow morning.

[18:09] <jnthn> Happy ASAN barf, I guess... ;)

[18:13] <jnthn> o/

[18:37] <nwc10> jnthn: was testing the previous commit. ASAN finds the previous commit very boring

[18:37] <nwc10> will update you when I get to test the new one

[18:38] <nwc10> \o

[18:40] <nwc10> Oooh, intersting, ASAN *already* excitied about part of  t/02-rakudo/99-misc.t

[18:46] *** AlexDaniel` joined
[18:46] *** rba[m] joined
[18:59] <nwc10> http://paste.scsys.co.uk/587848

[19:20] <timotimo> deck the halls with barf of asan, fa fa fa fa fa, fa fa fa fa

[19:23] <nwc10> :-)

[19:24] <nwc10> hmmm, I assume that t/nqp/057-construction.t is supposed to finish

[19:24] <nwc10> (ie, it hasn't)

[19:30] <timotimo> sha-dow bytes around the ad-dress

[19:30] <timotimo> fa fa fa fa fa, fa fa fa fa

[19:32] *** Altai-man_ joined
[19:33] <timotimo> tweeted that joke

[19:34] <nwc10>   2    Thread 0x7f7121237700 (LWP 1621) 0x00007f71257f011c in MVM_spesh_arg_guard_run_types (tc=0x61800000f480, ag=0x62700041fbe0,

[19:34] <nwc10> very busy. Other thread is in pthread_cond_wait@@GLIBC_2.3.2

[19:35] *** sena_kun left
[19:46] *** AlexDaniel` left
[19:46] *** rba[m] left
[20:19] *** AlexDaniel` joined
[20:23] <jnthn> Hmm, that's an interesting ASAN output...

[20:38] *** patrickb left
[20:43] <MasterDuke> timotimo: seems like something you might be interested in https://github.com/rohanrhu/gdb-frontend

[20:43] *** patrickb joined
[20:46] <timotimo> interesting

[20:52] <timotimo> gdbgui is a bit wonky, maybe this is better

[20:57] *** rba[m] joined
[21:00] *** zakharyas left
[21:33] *** sena_kun joined
[21:34] *** Altai-man_ left
[21:35] <Geth> Â¦ MoarVM: patrickbkr++ created pull request #1241: Revert "Dynamic library loading works with unicody paths on Windows"

[21:35] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1241

[21:41] <patrickb> ^ That PR removes a workaround that has been made obsolete by the recent dyncall bump.

[22:05] *** Kaiepi left
[22:05] *** Kaiepi joined
[22:18] *** patrickb left
[23:32] *** Altai-man_ joined
[23:35] *** sena_kun left
