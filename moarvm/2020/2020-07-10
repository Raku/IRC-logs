[00:03] *** sena_kun joined
[00:04] *** Altai-man_ left
[01:34] *** raku-bridge left
[01:34] *** raku-bridge joined
[01:34] *** raku-bridge left
[01:34] *** raku-bridge joined
[01:39] *** timotimo left
[02:02] *** Altai-man_ joined
[02:05] *** sena_kun left
[04:08] *** [Coke] left
[04:08] *** samcv left
[04:08] *** raku-bridge left
[04:08] *** nine left
[04:08] *** ChanServ left
[04:08] *** nebuchadnezzar left
[04:08] *** bingos left
[04:08] *** rypervenche left
[04:08] *** rba left
[04:08] *** jpf1 left
[04:08] *** AlexDaniel` left
[04:08] *** eater left
[04:08] *** camelia left
[04:08] *** krunen left
[04:08] *** Voldenet left
[04:08] *** lizmat left
[04:08] *** discoD left
[04:08] *** mst left
[04:08] *** TimToady left
[04:08] *** nwc10 left
[04:08] *** jjatria left
[04:08] *** Util left
[04:08] *** moritz left
[04:08] *** squashable6 left
[04:08] *** releasable6 left
[04:08] *** quotable6 left
[04:08] *** linkable6 left
[04:08] *** sourceable6 left
[04:08] *** benchable6 left
[04:08] *** evalable6 left
[04:08] *** coverable6 left
[04:08] *** shareable6 left
[04:08] *** harrow left
[04:08] *** leedo left
[04:08] *** robertle left
[04:08] *** xiaomiao left
[04:08] *** vesper11 left
[04:08] *** hoelzro left
[04:08] *** Altreus left
[04:08] *** moon-child left
[04:08] *** jnthn left
[04:08] *** kawaii left
[04:08] *** elcaro_ left
[04:08] *** mtj_ left
[04:08] *** Altai-man_ left
[04:08] *** Geth left
[04:08] *** japhb left
[04:08] *** gugod left
[04:08] *** tobs left
[04:08] *** Kaiepi left
[04:08] *** dogbert17 left
[04:08] *** SmokeMachine left
[04:08] *** vrurg left
[04:08] *** sivoais left
[04:08] *** chansen_ left
[04:08] *** avar left
[04:08] *** greppable6 left
[04:08] *** committable6 left
[04:08] *** bisectable6 left
[04:08] *** reportable6 left
[04:08] *** tbrowder left
[04:08] *** statisfiable6 left
[04:08] *** bloatable6 left
[04:08] *** notable6 left
[04:08] *** tellable6 left
[04:08] *** unicodable6 left
[04:08] *** nativecallable6 left
[04:12] *** Kaeipi joined
[04:12] *** eater joined
[04:12] *** krunen joined
[04:12] *** camelia joined
[04:12] *** Altai-man_ joined
[04:12] *** gugod joined
[04:12] *** japhb joined
[04:12] *** Geth joined
[04:12] *** sena_kun joined
[04:12] *** tobs joined
[04:12] *** Kaiepi joined
[04:12] *** dogbert17 joined
[04:12] *** chansen_ joined
[04:12] *** tbrowder joined
[04:12] *** SmokeMachine joined
[04:12] *** vrurg joined
[04:12] *** statisfiable6 joined
[04:12] *** greppable6 joined
[04:12] *** committable6 joined
[04:12] *** bloatable6 joined
[04:12] *** notable6 joined
[04:12] *** bisectable6 joined
[04:12] *** reportable6 joined
[04:12] *** tellable6 joined
[04:12] *** unicodable6 joined
[04:12] *** nativecallable6 joined
[04:12] *** sivoais joined
[04:12] *** ChanServ joined
[04:12] *** avar joined
[04:12] *** weber.freenode.net sets mode: +o ChanServ

[04:13] *** vesper11 joined
[04:13] *** hoelzro joined
[04:13] *** Altreus joined
[04:13] *** moon-child joined
[04:13] *** jnthn joined
[04:13] *** elcaro_ joined
[04:13] *** mtj_ joined
[04:14] *** Kaiepi left
[04:14] *** sena_kun left
[04:14] *** kawaii joined
[04:14] *** squashable6 joined
[04:14] *** releasable6 joined
[04:14] *** quotable6 joined
[04:14] *** linkable6 joined
[04:14] *** sourceable6 joined
[04:14] *** benchable6 joined
[04:14] *** evalable6 joined
[04:14] *** coverable6 joined
[04:14] *** shareable6 joined
[04:14] *** harrow joined
[04:14] *** leedo joined
[04:14] *** robertle joined
[04:14] *** xiaomiao joined
[04:14] *** kawaii left
[04:14] *** kawaii joined
[04:14] *** raku-bridge joined
[04:14] *** nine joined
[04:15] *** bingos joined
[04:15] *** rypervenche joined
[04:15] *** rba joined
[04:15] *** jpf1 joined
[04:15] *** nebuchadnezzar joined
[04:15] *** TimToady joined
[04:15] *** nwc10 joined
[04:15] *** jjatria joined
[04:15] *** Util joined
[04:15] *** moritz joined
[04:16] *** Voldenet joined
[04:16] *** lizmat joined
[04:16] *** discoD joined
[04:16] *** mst joined
[04:16] *** weber.freenode.net sets mode: +o mst

[04:16] *** [Coke] joined
[04:16] *** samcv joined
[04:22] *** AlexDaniel` joined
[06:04] *** sena_kun joined
[06:05] *** Altai-man_ left
[07:49] <nwc10> good *, #moarvm 

[07:50] <nwc10> jnthn/lizmat: It's easy to add to the C API to provide one return the hash key on delete (for the MVMHash, because the "value" here is just one pointer)

[08:02] *** Altai-man_ joined
[08:05] *** sena_kun left
[08:09] *** zakharyas joined
[08:13] <nwc10> and I think I know how to make all the "delete at the current itetaror position" work, even with sanity checks on iterator position.

[08:15] <nine> oh, how?

[08:20] <nwc10> if enforcing sanity checks, as well as having a serial number for the hash "state" in the hash (which the iterator records), on a delete, store in the hash, the bucket number of the last delete

[08:21] <nwc10> and reset this to "invalid" (which needs to be ~0 for the UT hash stuff) on an insert

[08:21] <nwc10> and for "next" in the iterator, either the serial number must match

[08:21] <nwc10> or

[08:21] <nwc10> the serial number must be exactly 1 behind, and the iterator's current bucket must match the hash's last deleted bucket

[08:22] <nwc10> I belive that this will work. A build is running

[08:23] <nwc10> (this works better with open addressing, where "bucket number" is the only state)

[08:48] <nwc10> oh yes, debugging question.

[08:49] <nwc10> Is there a good way to trigger a breakpoint at the C level by doing something in NQP code?

[08:49] <nwc10> in that, for Perl 5, a trick was to put a breakpoint on the C function Perl_pp_study

[08:49] <nwc10> and then add `study` to you test case code

[08:49] <nwc10> (as almost nothing uses study. Or reset)

[08:50] <nwc10> and so you could set a breakpoint in gdb, and it would first get hit at that point in the high level code

[08:50] <nwc10> and then you could do your real work

[08:50] <nwc10> without having to figure out how to skip over all the setup

[09:01] *** MasterDuke joined
[09:06] <MasterDuke> nwc10: i've stuck a nqp::tanh(0e0) in code and then in gdb just break on tanh

[09:06] <nwc10> :-)

[09:06] <nwc10> thanks, that sounds useful

[09:17] *** brrt joined
[09:29] <nine> MasterDuke: thanks for that!

[09:29] <nwc10> it seems you actually want nqp::tanh_n(0e0)

[09:29] <nwc10> but this is exactly the thing I was lookign for

[09:29] <nwc10> meanwhile, no plan surives contact with the enemy

[09:30] <nwc10> in that this line of MVMIter.c is currently thwating me:

[09:30] <nwc10> 116                 body->hash_state.curr = body->hash_state.next;

[09:30] <nwc10> because `next` has already been advanced into safety, but I don't (directly) know that

[09:30] <nwc10> there will be a solution

[09:31] <nwc10> but I'm going to mow the lawn and figure it out

[09:31] <nwc10> in the end, I think that MVMIter.c can actually get simpler

[09:31] <nwc10> because my planned new hash has sentinel bytes at both ends, meaning it can easily have a state of "iterator not yet advanced to first", which probably means the whole curr/next dance can go

[09:32] <nwc10> as I think that it's only needed in the C code to support

[09:32] <nwc10> 1) delete at current iterator location

[09:32] <nwc10> 2) having iterators that need to be advanced to the first real entry, when the C API (currently) has "first", and gives you the first entry.

[09:33] <nwc10> but the lawn doesn't mow itself.

[09:37] *** MasterDuke left
[09:38] *** leont joined
[10:03] *** sena_kun joined
[10:05] *** Altai-man_ left
[11:23] *** nebuchadnezzar left
[11:27] *** nebuchadnezzar joined
[11:28] *** zakharyas left
[11:50] *** moon-child left
[12:02] *** Altai-man_ joined
[12:05] *** sena_kun left
[12:20] *** brrt left
[13:11] *** timo joined
[13:11] *** timo is now known as Guest99547

[13:11] *** Guest99547 is now known as timotimo

[13:26] *** chansen__ joined
[13:27] *** chansen_ left
[13:27] *** chansen__ is now known as chansen_

[13:35] *** MasterDuke joined
[14:03] *** sena_kun joined
[14:05] *** Altai-man_ left
[15:45] *** zakharyas joined
[15:55] *** hankache joined
[16:03] *** Altai-man_ joined
[16:05] *** sena_kun left
[16:56] *** hankache left
[17:24] *** zakharyas left
[18:03] *** sena_kun joined
[18:05] *** Altai-man_ left
[18:44] *** patrickb joined
[18:53] *** Kaeipi left
[18:55] *** Kaiepi joined
[18:56] *** vrurg_ joined
[19:02] *** vrurg_ left
[19:23] *** vrurg_ joined
[19:50] <dogbert17> heh, a valgrind error, haven't seen one of these for a while

[19:52] <dogbert17> for those who might be interested: https://gist.github.com/dogbert17/caa46f523e728bfeceee582e89587231

[19:59] <MasterDuke> huh. stock build? or small nursery or anything like that?

[19:59] <dogbert17> stock build

[20:02] *** Altai-man_ joined
[20:04] *** vrurg_ left
[20:05] <timotimo> looks like checking for zero-length seperators may be missing?

[20:05] *** sena_kun left
[20:07] <dogbert17> could very well be, cur_sep_pos is zero here https://github.com/MoarVM/MoarVM/blob/master/src/strings/decode_stream.c#L639 when the error occurs

[20:07] <timotimo> yeah i saw

[20:07] *** vrurg left
[20:07] <dogbert17> what's the proper fix?

[20:07] <timotimo> it looks pretty much exactly like "an empty seperator at the start of the separators list causes this issue"

[20:08] <timotimo> do we expect nl-in to be set to "" to give one character per "line"?

[20:08] <lizmat> so there's no sanity check on the separator list ?

[20:08] <timotimo> i'd say throw an exception at open time

[20:08] <lizmat> throw it at nl-in setting time

[20:08] <timotimo> sure

[20:09] <timotimo> that can be done after opening

[20:09] <dogbert17> ah, so the fix should be made at a higher level then

[20:12] *** vrurg joined
[20:13] *** vrurg_ joined
[20:25] *** vrurg left
[20:32] *** brrt joined
[20:49] *** vrurg_ left
[21:20] *** vrurg joined
[21:35] *** brrt left
[21:44] <timotimo> why?

[21:46] <timotimo> decoder_set_separators seems like the right spot to me

[21:52] *** brrt joined
[21:59] *** zakharyas joined
[22:03] *** sena_kun joined
[22:03] *** patrickb left
[22:05] *** Altai-man_ left
[22:22] *** zakharyas left
[22:34] *** leont_ joined
[22:34] *** leont left
[22:50] *** brrt left
[23:53] *** leont_ left
