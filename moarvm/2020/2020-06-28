[00:02] *** sena_kun joined
[00:04] *** Altai-man_ left
[01:13] *** samcv left
[01:13] *** samcv_ joined
[02:01] *** Altai-man_ joined
[02:03] *** sena_kun left
[03:23] *** lucasb left
[04:02] *** sena_kun joined
[04:03] *** Altai-man_ left
[06:01] *** Altai-man_ joined
[06:04] *** sena_kun left
[08:02] *** sena_kun joined
[08:04] *** Altai-man_ left
[09:00] *** samcv_ left
[09:01] *** samcv joined
[10:01] *** Altai-man_ joined
[10:04] *** sena_kun left
[11:24] <Geth> ¦ MoarVM/kosher-unicode-names-only: 4 commits pushed by (Nicholas Clark)++

[11:24] <Geth> ¦ MoarVM/kosher-unicode-names-only: 0369f512bc | Unwrap the generated codepoint_names to one entry per line.

[11:24] <Geth> ¦ MoarVM/kosher-unicode-names-only: 07dbc19a5e | Don't change the name to NULL (occasionally, if it starts with '<')

[11:24] <Geth> ¦ MoarVM/kosher-unicode-names-only: 1d00a2b599 | Don't add placeholders such as "<control>" to the Unicode names lookup hash.

[11:24] <Geth> ¦ MoarVM/kosher-unicode-names-only: e5d597d185 | Eliminate $annotate_anyway, which is no longer used.

[11:24] <Geth> ¦ MoarVM/kosher-unicode-names-only: review: https://github.com/MoarVM/MoarVM/compare/09dfa207e1f8...e5d597d185db

[11:26] <nwc10> and I think that that is correct solution. And it solves a bug that we didn't know that we had.

[11:35] *** raku-bridge left
[11:35] *** raku-bridge joined
[11:35] *** MasterDuke left
[11:35] *** MasterDuke joined
[11:35] *** kawaii left
[11:35] *** kawaii joined
[11:35] *** lizmat left
[11:35] *** lizmat joined
[11:35] *** samcv left
[11:35] *** samcv joined
[11:36] *** timotimo left
[11:36] *** timotimo joined
[11:44] *** AlexDaniel joined
[11:44] *** AlexDaniel left
[11:44] *** AlexDaniel joined
[12:02] *** sena_kun joined
[12:03] *** Altai-man_ left
[12:56] <lizmat> I've come across a few of those lately :-)

[13:13] <lizmat> Q: given an empty nqp::hash, will an nqp::atkey on it short-circuit and not actually hash the key ?

[14:01] *** Altai-man_ joined
[14:04] *** sena_kun left
[15:47] *** patrickb joined
[16:02] *** sena_kun joined
[16:04] *** Altai-man_ left
[16:14] <Geth> ¦ MoarVM/master: 4 commits pushed by (Nicholas Clark)++

[16:14] <Geth> ¦ MoarVM/master: 0369f512bc | Unwrap the generated codepoint_names to one entry per line.

[16:14] <Geth> ¦ MoarVM/master: 07dbc19a5e | Don't change the name to NULL (occasionally, if it starts with '<')

[16:14] <Geth> ¦ MoarVM/master: 1d00a2b599 | Don't add placeholders such as "<control>" to the Unicode names lookup hash.

[16:14] <Geth> ¦ MoarVM/master: e5d597d185 | Eliminate $annotate_anyway, which is no longer used.

[16:14] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/cfe6ed8f5614...e5d597d185db

[16:23] <nwc10> lizmat: if nqp::atkey ends up calling MVMHash_at_key in MVMHash.c then that ends in HASH_FIND_VM_STR and it will short-circuit (and not hash the key) if the hash is NULL.

[16:23] <nwc10> and I believe that the hash is NULL when (and whenever) it has no elements.

[16:23] <lizmat> nwc10++  # thanks for verifying that!

[16:23] <nwc10> ie, not just "before we allocate storage", but due to the crazy inside-out way UT Hash works, also when the last key is deleted.

[16:56] *** zakharyas joined
[17:45] *** lucasb joined
[18:01] *** Altai-man_ joined
[18:03] *** sena_kun left
[19:00] *** zakharyas left
[19:06] *** zakharyas joined
[20:02] *** sena_kun joined
[20:04] *** Altai-man_ left
[20:57] *** zakharyas left
[22:01] *** Altai-man_ joined
[22:04] *** sena_kun left
[22:15] *** patrickb left
[22:17] <timotimo> i'm having trouble finding any example of raku-assign being recorded?

[22:17] <tellable6> 2020-06-27T23:31:01Z #raku-dev <AlexDaniel> timotimo please file a ticket about .kill! Thanks! https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-06-27#l261

[22:23] <timotimo> okay maybe there's only one occurence of it in this program?

[22:23] <timotimo> in the spesh log, i mean

[22:23] <timotimo> and it's decorated by "never dispatched"

[22:24] <timotimo> but this is in postfix:<--> and that has no branches in it, so if it appears in the spesh log, surely it must have been called a few times

[22:24] <timotimo> well, it has, according to the log anyway, and the next two dispatches in it even have results stored in the spesh log

[22:37] <timotimo> oh

[22:37] <timotimo> maybe when we resolve to invoke a frame, we log the result too late, and we end up storing it in whatever frame that was invoked as the result

[22:42] * timotimo tries something

[22:51] <timotimo> single stepping is giving me very strange behavior, huh.

