[00:25] *** leont left
[00:54] *** Altai-man_ joined
[00:56] *** sena_kun left
[02:13] *** AlexDani` joined
[02:15] *** AlexDaniel left
[02:28] *** vrurg left
[02:29] *** vrurg joined
[02:32] *** vrurg_ joined
[02:33] *** vrurg left
[02:55] *** sena_kun joined
[02:56] *** Altai-man_ left
[03:37] *** vrurg_ is now known as vrurg

[04:54] *** Altai-man_ joined
[04:56] *** sena_kun left
[06:16] <nwc10> good *, #moarvm

[06:24] <Geth> Â¦ MoarVM/prefer-lexical_names_list: c70587551a | (Nicholas Clark)++ | 3 files

[06:24] <Geth> Â¦ MoarVM/prefer-lexical_names_list: Where possible, iterate over lexical_names_list instead of lexical_names.

[06:24] <Geth> Â¦ MoarVM/prefer-lexical_names_list: 

[06:24] <Geth> Â¦ MoarVM/prefer-lexical_names_list: The former is an array, the latter a hash. Given that they have the same

[06:24] <Geth> Â¦ MoarVM/prefer-lexical_names_list: contents, it's much simpler to iterate over the list.

[06:24] <Geth> Â¦ MoarVM/prefer-lexical_names_list: review: https://github.com/MoarVM/MoarVM/commit/c70587551a

[06:24] <Geth> Â¦ MoarVM/prefer-lexical_names_list: 4d0da364d2 | (Nicholas Clark)++ | 7 files

[06:24] <Geth> Â¦ MoarVM/prefer-lexical_names_list: Wrap all access to lexical_names with MVM_get_lexical_by_name.

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: 

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: This permits us to easily tweak the storage format.

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: 

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: The "Indexes were formerly stored off-by-one" comment related to code before

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: 2013, back when hashes were implemented with the Apache Portable Runtime. I

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: don't think that it's useful to retain it. :-)

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: review: https://github.com/MoarVM/MoarVM/commit/4d0da364d2

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: 3658e4cd1f | (Nicholas Clark)++ | 2 files

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: Don't make a lookup hash for lexical names for frames with few lexicals.

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: 

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: If there are 5 or fewer lexicals in the static frame, don't create a lookup

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: hash for them. Instead, find them by a linear scan of the list.  For a short

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: list, this won't be slower, and we save some memory.

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: 

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: The value 5 is an educated guess - there might be a better cut-over point.

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: <â€¦commit message has 5 more linesâ€¦>

[06:25] <Geth> Â¦ MoarVM/prefer-lexical_names_list: review: https://github.com/MoarVM/MoarVM/commit/3658e4cd1f

[06:25] <nwc10> a rebase

[06:55] *** sena_kun joined
[06:57] *** Altai-man_ left
[07:32] *** zakharyas joined
[07:50] *** leont joined
[08:54] *** Altai-man_ joined
[08:57] *** sena_kun left
[09:56] *** AlexDani` is now known as AlexDaniel

[09:56] *** AlexDaniel left
[09:56] *** AlexDaniel joined
[10:33] <Kaiepi> i'm adding ops for getsockname and getpeername, since happy eyeballs requires a way of getting a source address used for a connection and the way that source/peer addresses are handled with IO::Socket::INET and IO::Socket::Async is pretty adhoc atm

[10:34] <Kaiepi> i know they need to go somewhere in struct MVMIOOps in order to work with both sync and async sockets, but i'm not sure whether they belong more in struct MVMIOSockety, struct MVMIOIntrospection, or something like struct MVMIOAddressable instead

[10:37] <Kaiepi> since they're introspective socket ops, but async sockets don't use struct MVMIOSockety, and not everything that uses struct MVMIOIntrospection is a socket, i'm leaning more towards the latter

[10:55] *** sena_kun joined
[10:56] *** patrickb joined
[10:57] *** Altai-man_ left
[11:24] *** zakharyas left
[11:36] <Kaiepi> is tools/update_ops.p6 failing on master for anyone else?

[11:53] <MasterDuke> `Cannot parse operand ':confprog'` ?

[11:59] <timotimo> oh? that should have gotten in there many months ago

[11:59] <timotimo> support for that

[12:15] <timotimo> ah i see it's possibly a problem in rakudo itself

[12:47] <Geth> Â¦ MoarVM: eafa7b3918 | (Ben Davies)++ | 2 files

[12:47] <Geth> Â¦ MoarVM: Ensure MoarVM includes the correct 3rdparty libuv objects on *BSD

[12:47] <Geth> Â¦ MoarVM: 

[12:47] <Geth> Â¦ MoarVM: 3rdparty builds of libuv didn't include the same objects that libuv

[12:47] <Geth> Â¦ MoarVM: itself does. This shouldn't affect MoarVM as it currently stands, but

[12:47] <Geth> Â¦ MoarVM: may cause problems in the future should uv_random or

[12:47] <Geth> Â¦ MoarVM: uv_interface_addresses ever be used.

[12:47] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/eafa7b3918

[12:47] <Geth> Â¦ MoarVM: 43b9962773 | (Jonathan Worthington)++ (committed using GitHub Web editor) | 2 files

[12:47] <Geth> Â¦ MoarVM: Merge pull request #1314 from Kaiepi/libuv-bsd

[12:47] <Geth> Â¦ MoarVM: 

[12:47] <Geth> Â¦ MoarVM: Ensure MoarVM includes the correct 3rdparty libuv objects on *BSD

[12:47] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/43b9962773

[12:54] *** Altai-man_ joined
[12:56] <Geth> Â¦ MoarVM/master: 4 commits pushed by (Nicholas Clark)++, (Jonathan Worthington)++

[12:56] <Geth> Â¦ MoarVM/master: c70587551a | Where possible, iterate over lexical_names_list instead of lexical_names.

[12:56] <Geth> Â¦ MoarVM/master: 4d0da364d2 | Wrap all access to lexical_names with MVM_get_lexical_by_name.

[12:56] <Geth> Â¦ MoarVM/master: 3658e4cd1f | Don't make a lookup hash for lexical names for frames with few lexicals.

[12:56] <Geth> Â¦ MoarVM/master: 9dd5914e6d | Merge pull request #1307 from MoarVM/prefer-lexical_names_list

[12:56] <Geth> Â¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/43b99627732c...9dd5914e6d4a

[12:56] *** sena_kun left
[12:57] *** Altai-man_ is now known as sena_kun

[13:10] <Geth> Â¦ MoarVM: 0racle++ created pull request #1315: Declare loop var before loop

[13:10] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1315

[13:14] <Geth> Â¦ MoarVM: c177e85cc1 | (Daniel Green)++ | 2 files

[13:14] <Geth> Â¦ MoarVM: Remove two unused variables

[13:14] <Geth> Â¦ MoarVM: 

[13:14] <Geth> Â¦ MoarVM: These aren't used anymore after https://github.com/MoarVM/MoarVM/pull/1307

[13:14] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c177e85cc1

[13:21] *** zakharyas joined
[13:26] *** mst left
[13:26] *** mst joined
[13:26] *** ChanServ sets mode: +o mst

[13:30] *** mst left
[13:30] *** mst joined
[13:30] *** mst left
[13:30] *** mst joined
[13:30] *** ChanServ sets mode: +o mst

[13:31] *** greppable6 left
[13:32] *** greppable6 joined
[13:32] *** greppable6 left
[13:34] *** greppable6 joined
[13:35] *** greppable6 left
[13:35] *** greppable6 joined
[13:36] *** greppable6 left
[13:38] *** greppable6 joined
[14:02] <dogbert17> jnthn: not to destroy your afternoon but in case you missed it: Commit https://github.com/MoarVM/MoarVM/commit/3256f14509852469f51f72e8e8e05332becb8e59, which fixed a perf regression, made the SEGV in Spreadsheet::XLSX return.

[14:04] <jnthn> :-(

[14:04] <jnthn> OK, well, screw it

[14:04] <jnthn> Better just work on the dispatch stuff, which will lead to deleting that code anyway

[14:05] <dogbert17> agreed :-)

[14:05] <jnthn> The whole invocation spec mechanism is getting thrown out

[14:06] <dogbert17> Very cool

[14:07] <jnthn> In fact, the whole load of code in optimizing invokes gets simpler, because the dispatch program encodes how to find the VM-level bytecode reference anyway

[14:07] <jnthn> So it won't have to do the whole lot of figuring that out

[14:08] <dogbert17> sounds like it could be faster than the current impl.

[14:09] <nwc10> jnthn: t/moar/53-dispatch.t fails test 20 for me currently. I assume that that's known.

[14:09] <jnthn> Yes, but I don't know exactly why, or when that started to happen.

[14:09] <nwc10> OK. "Me neither". (currently)

[14:10] <jnthn> Currently figuring out how to handle flattening and callsite interning and all that fun

[14:10] <jnthn> Which blocks a few things

[14:10] <dogbert17> You need coffee

[14:11] <jnthn> Already had enough today...onto tea already :)

[14:11] <jnthn> If I drink too many coffees I don't tend to feel all that good

[14:13] <vrurg> In some respect tea isn't better than coffee. I can't drink it a lot.

[14:13] <tellable6> 2020-06-11T15:48:08Z #raku <melezhik> vrurg_ RakuDist fails for the latest release of Vikna, i don't know, may be just docker related - http://rakudist.raku.org/sparky/report/debian/298

[14:13] <jnthn> vrurg: I'm drinking chamomile or mint tea, which is perhaps less bad :)

[14:13] <jnthn> Hm, that spelling looks odd

[14:14] <vrurg> jnthn: oh, sure it is! Except that I'm sleepy enough without their help. :) 

[14:24] <nwc10> jnthn: and for new-disp, rakudo goes SEGV somewhere in the setting:

[14:24] <nwc10>     #0 0x7f7451a8b570 in build_cfg src/spesh/graph.c:660

[14:24] <nwc10>     #1 0x7f7451a8d818 in MVM_spesh_graph_create src/spesh/graph.c:1342

[14:24] <nwc10> ...

[14:24] <nwc10> probably also not news.

[14:24] <jnthn> No, if you want to try anything there at the moment, MVM_SPESH_DISABLE=1 is needed

[14:24] <nwc10> OK

[14:24] <jnthn> I've decided to get things working before digging into making the optimizer understand them.

[14:25] <jnthn> Hoping that this order will lead to the least re-work of things

[14:25] <nwc10> that's far too sensible. :-)

[14:31] *** MasterDuke left
[14:36] *** mst left
[14:36] *** mst joined
[14:36] *** ChanServ sets mode: +o mst

[14:51] *** MasterDuke joined
[14:54] *** Altai-man_ joined
[14:56] *** patrickb left
[14:57] *** sena_kun left
[15:04] *** patrickb joined
[15:05] <nwc10> jnthn: OK, without spesh new-disp has compiled the setting under ASAN and reached the tests

[15:14] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/06/15/2020-24-cloud-approaching/

[15:20] <Geth> Â¦ MoarVM/new-disp: 4 commits pushed by (Jonathan Worthington)++

[15:20] <Geth> Â¦ MoarVM/new-disp: 602d6b72dd | Consistify common callsites

[15:20] <Geth> Â¦ MoarVM/new-disp: 7188f7d217 | Assorted tidying of the callsite header/code

[15:20] <Geth> Â¦ MoarVM/new-disp: 2a826e39c4 | Move intern cleanup code into callsites.c

[15:20] <Geth> Â¦ MoarVM/new-disp: e8f269ef89 | Eliminate duplicate named arg copying code

[15:20] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/compare/13c24f6d3a42...e8f269ef8906

[15:34] <nwc10> jnthn: ASAN makes no comment on your new changes.

[15:45] <Geth> Â¦ MoarVM/new-disp: cbbf5a4990 | (Jonathan Worthington)++ | 5 files

[15:45] <Geth> Â¦ MoarVM/new-disp: Extend the callsite interning API

[15:45] <Geth> Â¦ MoarVM/new-disp: 

[15:45] <Geth> Â¦ MoarVM/new-disp: * Indicate how much we want the callsite to be interned

[15:45] <Geth> Â¦ MoarVM/new-disp: * Make whether we take over the memory of the passed callsite an

[15:45] <Geth> Â¦ MoarVM/new-disp:   option

[15:45] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/cbbf5a4990

[15:46] <jnthn> The callsite intern cache is a potentail source of read after free...

[15:46] <jnthn> *potential

[15:46] <jnthn> Will fix that along with the work I'm currently donig

[15:49] <nwc10> jnthn: I cannot find a revision where t/moar/53-dispatch.t test 20 passes

[15:49] <nwc10> "not ok 20" at commit 653702ecd6ec628aad79ddbfbb41095476e9d157 in MoarVM

[15:49] <nwc10> does not even get that far with commit 653702ecd6ec628aad79ddbfbb41095476e9d157^

[15:50] <jnthn> Huh, interesting

[15:51] <nwc10> yes that's what I thought too.

[15:51] <nwc10> I can't confidently prove that no commit exists. But it sure looks like it

[15:52] <nwc10> maybe you've done what I did at work recently - I know that I had my test passing at some point, but the revision that I checked in didn't pass any more.

[15:52] <jnthn> It's possible, yes

[15:53] <nwc10> also, had a near miss - beer fridge operative failed to restock after yesterday's lunch.

[15:53] <jnthn> oops

[15:54] <jnthn> There's now a Belgian beer bar in Prague with Kwak (and much more) on tap.

[15:54] <jnthn> And it's not that far away from where I live.

[15:59] <nwc10> borders are open! Only 5 hours on the train, isn't it? :-)

[15:59] *** mst left
[15:59] *** mst joined
[15:59] *** ChanServ sets mode: +o mst

[16:00] <Geth> Â¦ MoarVM/new-disp: 1f70bc28b6 | (Jonathan Worthington)++ | src/disp/program.c

[16:00] <Geth> Â¦ MoarVM/new-disp: Force interning of callsites used in dispatch prog

[16:00] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/1f70bc28b6

[16:00] <nwc10> I hadn't even finished running NQP's tests with the previous commit! :-)

[16:12] <Geth> Â¦ MoarVM/new-disp: 062447a96b | (Jonathan Worthington)++ | 3 files

[16:12] <Geth> Â¦ MoarVM/new-disp: Make MVMCapture handle non-interned callsites

[16:12] <Geth> Â¦ MoarVM/new-disp: 

[16:12] <Geth> Â¦ MoarVM/new-disp: It should quite rarely see these, but when it does, then it makes the

[16:12] <Geth> Â¦ MoarVM/new-disp: assumption that it owns and should thus manage the memory associated

[16:12] <Geth> Â¦ MoarVM/new-disp: with them, freeing it when the capture object is GC'd.

[16:12] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/062447a96b

[16:12] <nwc10> I hadn't even finished running NQP's tests with the previous commit! :-)

[16:13] <nwc10> t/moar/53-dispatch.t still fails 20. The rest pass. Implies ASAN considers your work unworthy of comment. :-)

[16:25] <jnthn> At some point I'll go home and this problem will end...for now :P

[16:36] <nwc10> again: t/moar/53-dispatch.t still fails 20. The rest pass

[16:38] *** patrickb left
[16:53] *** MasterDuke left
[16:55] *** sena_kun joined
[16:57] *** Altai-man_ left
[17:21] <Geth> Â¦ MoarVM/new-disp: ff272f3094 | (Jonathan Worthington)++ | 3 files

[17:21] <Geth> Â¦ MoarVM/new-disp: Use FSA for callsite intern store

[17:21] <Geth> Â¦ MoarVM/new-disp: 

[17:21] <Geth> Â¦ MoarVM/new-disp: And also make it resizeable. This also fixes a longstanding unlikely

[17:21] <Geth> Â¦ MoarVM/new-disp: but possible use after free bug: if one thread was looking through the

[17:21] <Geth> Â¦ MoarVM/new-disp: interns while another thread decided to expand it and did a realloc, the

[17:21] <Geth> Â¦ MoarVM/new-disp: other thread would end up still reading from the freed memory.

[17:21] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/ff272f3094

[17:49] *** zakharyas left
[18:14] *** mst left
[18:14] *** mst joined
[18:14] *** ChanServ sets mode: +o mst

[18:52] *** MasterDuke joined
[18:54] *** Altai-man_ joined
[18:57] *** sena_kun left
[19:11] *** zakharyas joined
[20:11] <nwc10> I fear that this is going to sound like a stupid question...

[20:12] <nwc10> I'd like to hit code in src/profiler/heapsnapshot.c

[20:12] <nwc10> I thought that it generated binary output

[20:12] <nwc10> I thought that if I followed the instructions in https://github.com/jnthn/p6-app-moarvm-heapanalyzer I'd get this

[20:12] <nwc10> instead, when I run rakudo-m --profile=heap  -e 'say "Hello world"'

[20:13] <nwc10> I get a file called `heap` which is XML

[20:13] <timotimo> yes, needs to be --profile=blah.mvmprofile

[20:13] <timotimo> no

[20:13] <timotimo> yes, needs to be --profile=blah.mvmheap

[20:13] <timotimo> the "what kind of profile to do" is either a second flag, or it's based on the filename's ending

[20:14] <nwc10> ah OK cool. thanks.

[20:14] <nwc10> I owe you a beer. Or $other drink. Or petrol :-)

[20:14] <timotimo> it used to be yo uhave to --profile-filename separately from --profile=heap vs --profile=instrumented or whatever

[20:28] <timotimo> mhhh, i think if we use nqp::objectid and pass an integer array to the heap snapshot capture thing somehow, they could be listed up on the front page of the heap analyzer

[20:29] <timotimo> without necessarily creating a new reference that'd make the graph less true to the real situation

[20:35] *** zakharyas left
[20:40] *** mst left
[20:40] *** mst joined
[20:40] *** ChanServ sets mode: +o mst

[20:55] *** sena_kun joined
[20:57] *** Altai-man_ left
[22:22] *** murman joined
[22:36] *** murman left
[22:54] *** Altai-man_ joined
[22:57] *** sena_kun left
[23:19] *** murman joined
[23:27] *** murman left
[23:33] *** murman joined
[23:33] *** murman left
[23:57] *** murman joined
