[00:04] *** murman left
[00:04] *** murman joined
[00:05] *** murman left
[00:09] *** murman joined
[00:22] *** leont left
[00:29] *** squashable6 left
[00:31] *** squashable6 joined
[00:31] *** murman left
[00:37] *** murman joined
[00:43] *** mst left
[00:44] *** mst joined
[00:44] *** ChanServ sets mode: +o mst

[00:51] *** murman left
[00:55] *** sena_kun joined
[00:56] *** bisectable6 left
[00:56] *** bisectable6 joined
[00:57] *** Altai-man_ left
[01:02] *** unicodable6 left
[01:02] *** bloatable6 left
[01:02] *** quotable6 left
[01:02] *** squashable6 left
[01:02] *** committable6 left
[01:02] *** sourceable6 left
[01:02] *** bisectable6 left
[01:02] *** reportable6 left
[01:02] *** shareable6 left
[01:02] *** benchable6 left
[01:02] *** releasable6 left
[01:02] *** coverable6 left
[01:02] *** nativecallable6 left
[01:02] *** linkable6 left
[01:02] *** greppable6 left
[01:02] *** statisfiable6 left
[01:02] *** notable6 left
[01:02] *** tellable6 left
[01:02] *** evalable6 left
[01:03] *** greppable6 joined
[01:03] *** releasable6 joined
[01:03] *** notable6 joined
[01:03] *** coverable6 joined
[01:03] *** committable6 joined
[01:04] *** linkable6 joined
[01:04] *** squashable6 joined
[01:04] *** quotable6 joined
[01:04] *** unicodable6 joined
[01:04] *** reportable6 joined
[01:04] *** bloatable6 joined
[01:04] *** nativecallable6 joined
[01:04] *** tellable6 joined
[01:05] *** evalable6 joined
[01:05] *** bisectable6 joined
[01:05] *** shareable6 joined
[01:05] *** statisfiable6 joined
[01:06] *** sourceable6 joined
[02:54] *** Altai-man_ joined
[02:57] *** sena_kun left
[04:48] *** MasterDuke left
[04:55] *** sena_kun joined
[04:56] *** Altai-man_ left
[06:54] *** Altai-man_ joined
[06:57] *** sena_kun left
[07:41] *** zakharyas joined
[08:34] *** leont joined
[08:55] *** sena_kun joined
[08:57] *** Altai-man_ left
[09:36] <jnthn> morning o/

[09:37] <nwc10> \o

[09:38] <jnthn> So, how did ASAN feel about you last commit yesterday? :)

[09:39] <nwc10> my last commit?

[09:39] <jnthn> oops

[09:39] <jnthn> *my last

[09:39] <jnthn> :)

[09:40] <jnthn> The office coffee apparently works better...

[09:40] <jnthn> (At home today)

[09:43] <nwc10> IIRC there's been no ASAN excitement for at least a day. It doesn't find SEGVs very exciting

[09:43] <nwc10> and yesterday seems like a very long time away

[09:44] <nwc10> fighting with NOTwok^Hrk lumpy

[09:44] <nwc10> and $ork thing that hates me

[09:44] <nwc10> even osh has given up

[09:45] <jnthn> What fun...

[09:45] <jnthn> Guess I should try and take on flattening dispatches, given I've managed to put them off so far...

[09:49] <nwc10> well, given up on the predict-your-typing

[10:04] <jnthn> Ouch, that failing test in the nqp repo is a real bug, not just a wrong test...

[10:07] <nwc10> jnthn: if I hack some stuff locally and it gets past all the tests, but when I try to make install I see:

[10:07] <nwc10> MoarVM panic: Internal error: zeroed target thread ID in work pass

[10:07] <nwc10> where might I even start to look?

[10:09] <nwc10> it's not like ASAN has anything to offer...

[10:10] <jnthn> Try to make install what?

[10:11] <nwc10> well, rakudo was one

[10:11] <jnthn> NQP or Rakudo?

[10:11] <nwc10> IIRC yes

[10:11] <nwc10> I should go back and retrace all my steps

[10:12] <nwc10> given that I've just got a SEGV on a previous commit

[10:12] <nwc10> what I *wanted* to do was MoarVM, nqp, rakudo, zef, App::MoarVM::HeapAnalyzer

[10:13] <nwc10> this of course works when I don't mess with things locally :-)

[10:13] <nwc10> I should go back to $work and fighting images and Pg dump formats

[10:13] <nwc10> and missing shared objects on a production host

[10:13] <nwc10> and all the other little things that hate me today

[10:14] <nwc10> oh, ansible. I'm sure it loves me

[10:27] <Geth> ¦ MoarVM/new-disp: 2cb845fd5c | (Jonathan Worthington)++ | src/disp/program.c

[10:27] <Geth> ¦ MoarVM/new-disp: Fix mis-compile of dispatch program

[10:27] <Geth> ¦ MoarVM/new-disp: 

[10:27] <Geth> ¦ MoarVM/new-disp: We used the program value index instead of the argument index when

[10:27] <Geth> ¦ MoarVM/new-disp: emitting a load from the initial capture; often they did match up,

[10:27] <Geth> ¦ MoarVM/new-disp: especially when guarding, and situations where they did not were only

[10:27] <Geth> ¦ MoarVM/new-disp: likely to come about when we were constructing a new argument list.

[10:27] <Geth> ¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/2cb845fd5c

[10:32] <jnthn> That's test 20

[10:32] <jnthn> Very silly

[10:33] <jnthn> Though I'm glad it was silly mistake than flawed algorithm design :)

[10:54] *** Altai-man_ joined
[10:57] *** sena_kun left
[10:58] <nwc10> All tests successful.

[11:07] <jnthn> yay

[11:29] <Geth> ¦ MoarVM/new-disp: e6c469e04a | (Jonathan Worthington)++ | 2 files

[11:29] <Geth> ¦ MoarVM/new-disp: Stub out flattening callstack frame

[11:29] <Geth> ¦ MoarVM/new-disp: 

[11:29] <Geth> ¦ MoarVM/new-disp: When we flatten today, we have to malloc and possibly realloc two

[11:29] <Geth> ¦ MoarVM/new-disp: regions of memory: one for the callsite flags, and another for the args

[11:29] <Geth> ¦ MoarVM/new-disp: themselves. In principle, if we want to do arg names in the new way,

[11:29] <Geth> ¦ MoarVM/new-disp: we'd need a third such buffer too.

[11:29] <Geth> ¦ MoarVM/new-disp: 

[11:29] <Geth> ¦ MoarVM/new-disp: <…commit message has 7 more lines…>

[11:30] <Geth> ¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/e6c469e04a

[12:02] *** zakharyas left
[12:16] <nwc10> still All tests successful.

[12:31] *** MasterDuke joined
[12:55] *** sena_kun joined
[12:57] *** Altai-man_ left
[12:59] *** zakharyas joined
[14:37] <Geth> ¦ MoarVM/new-disp: 09d1149ff4 | (Jonathan Worthington)++ | src/disp/program.c

[14:37] <Geth> ¦ MoarVM/new-disp: Prepare dispatch program running for flattening

[14:37] <Geth> ¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/09d1149ff4

[14:37] <Geth> ¦ MoarVM/new-disp: 1b0841c8f2 | (Jonathan Worthington)++ | 7 files

[14:37] <Geth> ¦ MoarVM/new-disp: Minimal integration of flattening with dispatch

[14:37] <Geth> ¦ MoarVM/new-disp: 

[14:37] <Geth> ¦ MoarVM/new-disp: This fills out most of the flattening algorithm, however it currently

[14:37] <Geth> ¦ MoarVM/new-disp: misses de-dupe of named arguments (that is, making sure the final one

[14:37] <Geth> ¦ MoarVM/new-disp: wins). It also only works on the first use of the callsite, since the

[14:37] <Geth> ¦ MoarVM/new-disp: monomorphic flattening handler is not yet implemented, let alone the

[14:37] <Geth> ¦ MoarVM/new-disp: polymorphic one. However, it's enough to successfully do a dispatch that

[14:37] <Geth> ¦ MoarVM/new-disp: starts out with flattening arguments.

[14:37] <Geth> ¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/1b0841c8f2

[14:37] <nwc10> jnthn: so yes, local changes, and after a lot of loops I see:

[14:37] <nwc10> MoarVM panic: Internal error: invalid thread ID 803208664 in GC work pass

[14:38] <nwc10> nothing from ASAN or valgrind

[14:38] <nwc10> could this happen if I push a garbage pointer as a GC permanent root?

[14:38] <jnthn> Yes, or add a garbage pointer to a worklist

[14:38] <nwc10> mmm, both are possible :-(

[14:38] <jnthn> Where garbage includes "into a GC managed area but the object was already eaten"

[14:39] <jnthn> Well, but...

[14:39] <jnthn> #if MVM_GC_DEBUG

[14:39] <jnthn> #define MVM_gc_worklist_add(tc, worklist, item) \

[14:39] <jnthn> Worklist addition is defined differently in debug mode, and:

[14:39] <jnthn>             if ((*item_to_add)->owner > tc->instance->next_user_thread_id) \

[14:39] <jnthn>                 MVM_panic(1, "Invalid owner in item added to GC worklist"); \

[14:39] <jnthn> I think that would trigger it 

[14:40] <nwc10> ooho, I wasn't aware that I could also turn that on

[14:40] <jnthn> So assuming you turned on GC debugging, I'd expect it to be caught a bit earlier

[14:40] <nwc10> more pain!

[14:40] <jnthn> There's actaully 3 levels of pain, I suggest starting from the lowest

[14:42] <jnthn> You could in theory make a debugging version of adding a perm root that also does such checks

[14:42] <jnthn> Though I think you'll probably be able to make it panic on worklist add, look at the stack trace, and see if it's in the place we add perm roots

[14:52] <jnthn> language class, bbiab

[14:54] *** Altai-man_ joined
[14:57] *** sena_kun left
[15:08] <nwc10> jnthn: All tests successful.

[15:08] <MasterDuke> i  ran ugexe's example from https://github.com/rakudo/rakudo/issues/3740 under perf, killing it after 20s or so. 49% of the time is in MVM_gc_root_add_frame_registers_to_worklist, 32% of the time is in MVM_gc_root_add_frame_roots_to_worklist

[15:09] <MasterDuke> so it's creating tons and tons of objects for the gc to manage, but never cleaning them up?

[15:10] <nwc10> OK, and now:

[15:10] <nwc10> MoarVM panic: Must not GC when in the specializer/JIT

[15:52] <timotimo> what are we talking about right now?

[16:06] <nwc10> timotimo: strange failures in my local branch

[16:06] <nwc10> which likely are caused by something I didn't get right

[16:09] <jnthn> MasterDuke: More significantly, lots of closures

[16:09] <jnthn> Oh, though registers is odd

[16:09] <jnthn> We shouldn't really have those in a closure

[16:09] <jnthn> Hm

[16:09] <nwc10> timotimo: at least, that's what I'm prattling on about

[16:11] <timotimo> there was a recent commit that fixed a problem where spesh could accidentally go into jit

[16:11] <timotimo> er

[16:11] <timotimo> gc

[16:11] <timotimo> is your branch rebased on master recently?

[16:11] <nwc10> oooh, thanks, yes, no

[16:12] <nwc10> but it will conflict with master (or at least, "this week's" master)

[16:12] <nwc10> so it might be easier for me to start a new branch and cherry-pick one by one to deal with that conflict

[16:14] <timotimo> ah

[16:14] <timotimo> it was just the removal of two lines that was necessary

[16:15] <timotimo> there were mark_thread_blocked / unblocked in spesh's optimize.c i think

[16:15] <nwc10> I need to do the reworkng to get things clean atop master

[16:15] <nwc10> so it seems better to bite the bullet and do that now

[16:15] <nwc10> although actually, first I should eat

[16:24] <timotimo> this is the branch that uses the array instead of the hash for lexical names?

[16:39] <MasterDuke> timotimo, nwc10: and removing the write of the facts.value

[16:42] <MasterDuke> for the curious and easily nerd-sniped, the code i ran is: `my $proc = Proc::Async.new: "perl", "-E", q|while(1) { say "y" x 100 }|; react { whenever $proc.stdout.lines { say "stdout: $_"; }; whenever $proc.stderr.lines { say "stderr: $_"; }; whenever $proc.start { say "Exit code: {.exitcode}"; done; } }`

[16:45] <nwc10> timotimo: no, jnthn merged that

[16:45] <timotimo> oh, ok cool

[16:46] <timotimo> that's the code that sometimes stands still?

[16:47] <timotimo> all i see when i run it is that it grows in memory very fast, and then i have the choice of letting my system go unresponsive or i ctrl-c it

[16:47] <MasterDuke> yep

[16:48] <timotimo> i did a "perf trace" of it and that shows mostly writes from perl and reads and mprotect from perl6 %)

[16:55] *** sena_kun joined
[16:56] *** Altai-man_ left
[17:18] <MasterDuke> something easy to optimize?

[17:22] <timotimo> i don't think it was very enlightening on itself; i think we're currently just allowing perl to output as fast as it wants, and we allocate buffers to store all the results while working on the items at the front of the queue a little slower 

[17:23] <timotimo> i didn't get to reproduce the "it just stands still twiddling its thumbs intensely" situation yet

[17:35] *** zakharyas left
[18:01] *** leont left
[18:08] *** leont joined
[18:50] <MasterDuke> hm. re what jnthn mentioned, how can i tell if closures are in fact being created? or if not, what are?

[18:54] *** Altai-man_ joined
[18:57] *** sena_kun left
[19:29] *** zakharyas joined
[20:26] <MasterDuke> https://gist.github.com/MasterDuke17/df2040d655f1afe2b47dae218ece6c72 is a segv i've never seen before

[20:35] <MasterDuke> why would there be ~100k calls to Proc::Async's TWEAK, but only ~720 calls to it's new?

[20:50] *** zakharyas left
[20:50] <MasterDuke> another weird segv added to the gist

[20:55] <MasterDuke> with some more debug info

[20:55] *** sena_kun joined
[20:57] *** Altai-man_ left
[21:52] *** Altai-man_ joined
[21:54] *** sena_kun left
[22:03] *** notable6 left
[22:03] *** notable6_ joined
[22:03] *** statisfiable6 left
[22:04] *** statisfiable6 joined
[22:04] *** AlexDaniel` left
[22:06] *** committable6 left
[22:06] *** committable6 joined
[22:12] *** AlexDaniel` joined
[22:30] *** AlexDaniel` left
[22:33] *** nativecallable6 left
[22:33] *** coverable6 left
[22:33] *** jjatria left
[22:33] *** committable6 left
[22:33] *** nebuchadnezzar left
[22:33] *** colomon_ left
[22:33] *** nine left
[22:33] *** [Coke] left
[22:33] *** MasterDuke left
[22:33] *** Altai-man_ left
[22:33] *** sivoais left
[22:33] *** Geth left
[22:33] *** krunen left
[22:33] *** gugod left
[22:33] *** japhb left
[22:33] *** nwc10 left
[22:33] *** SmokeMachine left
[22:33] *** Util left
[22:33] *** elcaro left
[22:33] *** klapperl_ left
[22:33] *** moritz left
[22:33] *** shareable6 left
[22:33] *** bisectable6 left
[22:33] *** evalable6 left
[22:33] *** releasable6 left
[22:33] *** greppable6 left
[22:33] *** BinGOs left
[22:33] *** mtj_ left
[22:33] *** vrurg left
[22:33] *** dogbert17 left
[22:33] *** Kaiepi left
[22:33] *** AlexDaniel left
[22:33] *** vesper11 left
[22:33] *** statisfiable6 left
[22:33] *** notable6_ left
[22:33] *** eater left
[22:33] *** mst left
[22:33] *** tbrowder left
[22:33] *** lizmat left
[22:33] *** raku-bridge left
[22:33] *** ChanServ left
[22:33] *** Altreus left
[22:33] *** moon-child left
[22:33] *** synthmeat left
[22:33] *** jnthn left
[22:33] *** leont left
[22:33] *** sourceable6 left
[22:33] *** tellable6 left
[22:33] *** bloatable6 left
[22:33] *** reportable6 left
[22:33] *** unicodable6 left
[22:33] *** quotable6 left
[22:33] *** squashable6 left
[22:33] *** linkable6 left
[22:33] *** leedo left
[22:33] *** TimToady left
[22:33] *** Voldenet left
[22:33] *** kawaii left
[22:33] *** robertle left
[22:33] *** xiaomiao left
[22:33] *** rypervenche left
[22:33] *** chansen_ left
[22:33] *** hoelzro left
[22:33] *** rba left
[22:33] *** jpf1 left
[22:33] *** camelia left
[22:33] *** harrow left
[22:33] *** avar left
[22:36] *** [Coke] joined
[22:36] *** ChanServ joined
[22:36] *** nebuchadnezzar joined
[22:36] *** colomon_ joined
[22:36] *** nine joined
[22:36] *** cherryh.freenode.net sets mode: +o ChanServ

[22:37] *** Altai-man_ joined
[22:37] *** sivoais joined
[22:37] *** Geth joined
[22:37] *** krunen joined
[22:37] *** gugod joined
[22:37] *** japhb joined
[22:37] *** statisfiable6 joined
[22:37] *** notable6_ joined
[22:37] *** eater joined
[22:37] *** AlexDaniel joined
[22:37] *** vesper11 joined
[22:37] *** mst joined
[22:37] *** cherryh.freenode.net sets mode: +o mst

[22:37] *** rypervenche joined
[22:37] *** chansen_ joined
[22:37] *** hoelzro joined
[22:37] *** rba joined
[22:37] *** jpf1 joined
[22:38] *** nwc10 joined
[22:38] *** elcaro joined
[22:38] *** SmokeMachine joined
[22:38] *** Util joined
[22:38] *** klapperl_ joined
[22:38] *** moritz joined
[22:38] *** nativecallable6 joined
[22:38] *** coverable6 joined
[22:38] *** jjatria joined
[22:38] *** leont joined
[22:38] *** sourceable6 joined
[22:38] *** tellable6 joined
[22:38] *** bloatable6 joined
[22:38] *** reportable6 joined
[22:38] *** unicodable6 joined
[22:38] *** quotable6 joined
[22:38] *** squashable6 joined
[22:38] *** linkable6 joined
[22:38] *** leedo joined
[22:38] *** TimToady joined
[22:38] *** Voldenet joined
[22:38] *** robertle joined
[22:38] *** xiaomiao joined
[22:38] *** committable6 joined
[22:38] *** vrurg joined
[22:38] *** dogbert17 joined
[22:38] *** Kaiepi joined
[22:38] *** Altreus joined
[22:38] *** moon-child joined
[22:38] *** synthmeat joined
[22:38] *** jnthn joined
[22:38] *** MasterDuke joined
[22:38] *** tbrowder joined
[22:38] *** lizmat joined
[22:38] *** raku-bridge joined
[22:39] *** shareable6 joined
[22:39] *** bisectable6 joined
[22:39] *** evalable6 joined
[22:39] *** releasable6 joined
[22:39] *** greppable6 joined
[22:39] *** BinGOs joined
[22:39] *** mtj_ joined
[22:40] *** kawaii joined
[22:42] *** camelia joined
[22:42] *** harrow joined
[22:42] *** avar joined
[22:46] *** sivoais left
[22:46] *** sivoais joined
[22:51] *** AlexDaniel` joined
[22:55] *** sena_kun joined
[22:57] *** Altai-man_ left
[23:58] *** leont left
