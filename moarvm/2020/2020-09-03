[00:09] *** sena_kun left
[01:40] *** nebuchadnezzar left
[06:00] *** domidumont joined
[06:01] *** nebuchadnezzar joined
[06:03] *** vrurg_ joined
[06:05] *** vrurg left
[07:34] *** MasterDuke joined
[07:37] <MasterDuke> timotimo: i got distracted by quake champions (at which i'm so very out of practice). but i might have some time today to look at the zen vs whatever thing today

[07:40] <MasterDuke> re the lost optimization, not sure i know enough to quickly figure out what parts can be re-implemented, maybe can look at that after zen vs whatever

[08:09] *** sena_kun joined
[08:13] *** brrt joined
[08:41] *** domidumont left
[09:06] *** MasterDuke left
[09:25] *** MasterDuke joined
[10:09] *** brrt left
[11:01] *** MasterDuke left
[11:28] *** MasterDuke joined
[11:45] *** Altai-man joined
[11:47] *** sena_kun left
[12:03] <timotimo> that's okay, i was suggesting to un-implement it for the version that was still faster to see how strong the impact is compared to the whole "new hash" merge

[13:00] <Geth> Â¦ MoarVM/hash-start: 4 commits pushed by (Nicholas Clark)++

[13:00] <Geth> Â¦ MoarVM/hash-start: fbfc8a0ff4 | Testing `hashtable->cur_items == 0` is a better idea in MVM_str_hash_first.

[13:00] <Geth> Â¦ MoarVM/hash-start: 1ef6a37baa | Replace MVMIter's use of MVM_hash_end with MVM_hash_start.

[13:00] <Geth> Â¦ MoarVM/hash-start: e3ad7ced67 | Refactor while((foo = MVM_str_hash_current(...)) { ... } loops.

[13:00] <Geth> Â¦ MoarVM/hash-start: 590bac47ed | Add MVM_str_hash_next_nocheck, which skips the MVM_str_hash_at_end check.

[13:00] <Geth> Â¦ MoarVM/hash-start: review: https://github.com/MoarVM/MoarVM/compare/fbfc8a0ff40b^...590bac47edc3

[13:01] *** Kaeipi left
[13:05] *** Kaiepi joined
[13:16] <Geth> Â¦ MoarVM: nwc10++ created pull request #1342: Hash start

[13:16] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1342

[13:16] <nwc10> I have to make a PR to get the CI tests?

[13:21] <jnthn> I think so

[13:22] <nwc10> OK. I was assuming that I was going to "merge" that (fast-forward) if the CI is happy

[13:23] <nwc10> have not tested this, but it should not conflict with new-disp

[13:23] <nwc10> hey, I can check that...

[13:24] <nwc10> [merge clean, MoarVM, nqp building...]

[13:26] *** domidumont joined
[13:32] *** Geth left
[13:33] *** Geth joined
[13:44] *** brrt joined
[13:56] *** lucasb joined
[14:31] *** brrt left
[15:13] <Geth> Â¦ MoarVM/new-disp: 8c6fee8cb9 | (Jonathan Worthington)++ | 3 files

[15:13] <Geth> Â¦ MoarVM/new-disp: Stub in dispatcher set/get state syscalls

[15:13] <Geth> Â¦ MoarVM/new-disp: 

[15:13] <Geth> Â¦ MoarVM/new-disp: Which will be part of the resumed dispatch mechanism.

[15:13] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/8c6fee8cb9

[15:13] <Geth> Â¦ MoarVM/new-disp: e1cdd54642 | (Jonathan Worthington)++ | 4 files

[15:13] <Geth> Â¦ MoarVM/new-disp: Store captures saved as dispatch state

[15:13] <Geth> Â¦ MoarVM/new-disp: 

[15:13] <Geth> Â¦ MoarVM/new-disp: And note that usage it the recording dump output.

[15:13] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/e1cdd54642

[15:15] * [Coke] wonders why he thought disp was "display" for a few seconds.

[15:17] <timotimo> moarvm gets support for displaying performance metrics on an LCD you plug in

[15:17] <timotimo> you know how back in the dos days there was like a common "secondary monochrome monitor" thing that some programs supported for debug info?

[15:21] <timotimo> i can't find it again

[15:26] <timotimo> Another use for the MDA was as a secondary display for debugging. Applications like SoftICE[8] and the Windows debugger[9] permitted the simultaneous use of an MDA and another graphics card, with the MDA displaying a debugger interface while the other card was showing the primary display. 

[15:27] <timotimo> i actually used a super cheap LCD that was meant to be a digital picture frame that has custom firmware for it to have a status display that works even when my GPU is b0rked or whatever

[15:27] <timotimo> but i can't find it any more since the move

[15:31] <[Coke]> ... thank you for such a compelling backstory to support my dumb brain :)

[15:46] *** sena_kun joined
[15:47] *** Altai-man left
[15:48] *** squashable6 left
[15:49] *** squashable6 joined
[16:04] <Geth> Â¦ MoarVM/master: 4 commits pushed by (Nicholas Clark)++

[16:04] <Geth> Â¦ MoarVM/master: fbfc8a0ff4 | Testing `hashtable->cur_items == 0` is a better idea in MVM_str_hash_first.

[16:04] <Geth> Â¦ MoarVM/master: 1ef6a37baa | Replace MVMIter's use of MVM_hash_end with MVM_hash_start.

[16:04] <Geth> Â¦ MoarVM/master: e3ad7ced67 | Refactor while((foo = MVM_str_hash_current(...)) { ... } loops.

[16:04] <Geth> Â¦ MoarVM/master: 590bac47ed | Add MVM_str_hash_next_nocheck, which skips the MVM_str_hash_at_end check.

[16:04] <Geth> Â¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/9caec0fcada9...590bac47edc3

[16:33] *** brrt joined
[16:56] <brrt> \o

[16:57] <nwc10> o/

[17:02] *** zakharyas joined
[17:16] *** MasterDuke left
[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: 78afc7c934 | (Bart Wiegmans)++ | 3 files

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: [JIT] Implement invoke sequence in expr JIT

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: review: https://github.com/MoarVM/MoarVM/commit/78afc7c934

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: 62a3a6ba50 | (Bart Wiegmans)++ | src/jit/graph.c

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: [JIT] Eliminate special consume_invoke opcode

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: 

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: Except for nativecall_invoke, we no longer need this part of the

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: legacy JIT.

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: review: https://github.com/MoarVM/MoarVM/commit/62a3a6ba50

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: 7f183cf041 | (Bart Wiegmans)++ | 7 files

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: [JIT] WIP on nativeinvoke in the expression JIT

[17:36] <Geth> Â¦ MoarVM/expr-jit-invoke: review: https://github.com/MoarVM/MoarVM/commit/7f183cf041

[17:36] <brrt> that had bitrotted quite a bit

[17:38] <[Coke]> brrt++

[17:41] <brrt> I think the thing that I encountered there was that the rakudo compiler did (imho) a weird and tightly-bound thing that I didn't want it to do, but I also didn't know how to fix it

[18:02] <timotimo> you mean how it compiles stuff for nativecalled subs and methods?

[18:09] <Geth> Â¦ MoarVM/expr-jit-devirtualize: 5 commits pushed by (Bart Wiegmans)++

[18:09] <Geth> Â¦ MoarVM/expr-jit-devirtualize: b548f91dc9 | [JIT] Get type object for type-variant opcodes

[18:09] <Geth> Â¦ MoarVM/expr-jit-devirtualize: 34f8fb74b9 | [JIT] Add devirtualization method for REPRs

[18:09] <Geth> Â¦ MoarVM/expr-jit-devirtualize: 9203769ebd | [JIT] Make template destructive flag redundant

[18:09] <Geth> Â¦ MoarVM/expr-jit-devirtualize: 6debcdb28b | [JIT] Remove template destructive flag

[18:09] <Geth> Â¦ MoarVM/expr-jit-devirtualize: e672f05428 | [JIT] Bugfix - CALLN yields a value

[18:09] <Geth> Â¦ MoarVM/expr-jit-devirtualize: review: https://github.com/MoarVM/MoarVM/compare/6fbcac87f0fa...e672f05428b9

[18:10] <brrt> yeah, that's what I mean

[18:19] *** brrt left
[18:39] *** brrt joined
[18:46] <Geth> Â¦ MoarVM/jit-expr-optimizer: 4 commits pushed by (Bart Wiegmans)++

[18:46] <Geth> Â¦ MoarVM/jit-expr-optimizer: cc49cba1bc | [JIT] Simple tree-rewriting optimizer

[18:46] <Geth> Â¦ MoarVM/jit-expr-optimizer: e0742ba309 | [JIT] Optimize multiple loads to a COPY

[18:46] <Geth> Â¦ MoarVM/jit-expr-optimizer: 8724dbe5f0 | Optimize ADD of CONST to ADDR

[18:46] <Geth> Â¦ MoarVM/jit-expr-optimizer: a907180aa3 | Eliminate COPY of CONST

[18:46] <Geth> Â¦ MoarVM/jit-expr-optimizer: review: https://github.com/MoarVM/MoarVM/compare/b814ddbd2cca...a907180aa38f

[18:49] <brrt> mind that I don't actually think the expr optimizer in it's current form will work

[18:50] <nwc10> brrt: Unhandled exception: Unsupported serialization format version 23 (current version is 21)

[18:50] <nwc10> can I test this someone?

[18:56] *** domidumont left
[18:56] <brrt> nwc10: the optimizer code?

[18:56] *** domidumont joined
[18:56] <brrt> I suppose you can but I recall that it was broken

[18:56] <brrt> on account of it not being able to handle control flow

[18:57] <brrt> expr IR is too dumb

[18:57] *** domidumont left
[18:57] *** domidumont joined
[18:57] <brrt> not unheard-of-dumb, mind you, but too dumb for what I'm aiming to do

[18:57] *** domidumont left
[18:57] <nwc10> jit-expr-optimizer

[18:59] <nwc10> I'm distracted by london.pm

[19:07] <Kaiepi> i picked out udns to handle dns queries for v6.e's dns resolution stuff a while, but it's proving not to be an ideal library to use either

[19:07] <Kaiepi> portability's my main concern, since it won't build on windows unless the master branch is used, but hasn't been contributed to since 2017...

[19:08] <Kaiepi> no one single library i could find for this seems to work for how i envisioned this would work

[19:09] <Kaiepi> ldns comes very close, but isn't supported on windows... which has its own dns query api that can be used, and has what appears to be similar enough configuration for it to work comparably with ldns

[19:11] <Kaiepi> so i'm thinking of doing something similar to what nativecall does, where ldns would be the default library to use in most cases, falling back to windns

[19:15] *** MasterDuke joined
[19:16] <MasterDuke> nwc10: virtually? i thought i got emails about london.pm, but haven't in a while

[19:16] <brrt> nwc10: i haven't actually tested it myself

[19:16] <nwc10> MasterDuke: yes, jitsi

[19:17] <nwc10> https://meet.jit.si/LondonPerlMongers

[19:17] <MasterDuke> hm. i've been meaning to dig up a mic for this desktop for a while...

[19:19] <brrt> it segfaults pretty quickly on nqp :-D

[19:19] <nwc10> oops

[19:19] <nwc10> I'm on the jitsi app on a tablet

[19:45] *** Altai-man joined
[19:47] *** sena_kun left
[21:17] *** zakharyas left
[21:42] *** brrt left
[22:57] *** leont left
[23:20] *** Altai-man left
[23:21] *** MasterDuke left
[23:40] *** Kaiepi left
[23:47] *** Kaiepi joined
