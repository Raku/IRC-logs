[00:19] <timotimo> pamplemousse: https://github.com/timo/moarperf/blob/master/appimage/do_stuff.sh is rakudo + application

[00:19] <timotimo> https://github.com/timo/rakudo-appimage - this is rakudo only

[01:28] *** leont left
[01:41] *** Altai-man joined
[01:44] *** sena_kun left
[01:50] *** pamplemousse left
[05:17] <nwc10> good *, #moarvm 

[05:42] *** sena_kun joined
[05:43] *** Altai-man left
[07:25] *** eater joined
[07:36] *** domidumont joined
[07:37] <MasterDuke> oh, if zoffix++ is back maybe he can help me adjust MVM_bigint_div_num for gmp, he did the last big changes to it

[07:53] *** brrt joined
[07:57] *** zakharyas joined
[07:59] <brrt> \o

[07:59] <nwc10> o/

[07:59] <brrt> .tell pamplemousse no jit news today

[07:59] <tellable6> brrt, I'll pass your message to pamplemousse

[07:59] <brrt> sadly

[08:00] <MasterDuke> but if you get an arm laptop...jit on arm in the future?

[08:01] <nwc10> I guess that it depends how fun it is

[08:02] <nwc10> I suspect that there are more ARM chips in this room than anything else, but I don't seem to think that writing a JIT is fun

[08:03] <nwc10> actually, I'll be more confident onthis - there are almost certainly more 64 bit ARM chips int his room than 64 bit anything else, as the printer won't have a 64 bit CPU

[08:03] <nwc10> although I have no idea whether the SSD control is actually something ARM, so ARM might still win

[08:03] <brrt> hmm, I think I'm personally still surrounded by arm32

[08:04] <brrt> and getting an arm64 (apple arm) laptop is rather a big 'if' :-)

[08:04] <nwc10> 8Gb Pis are still cheaper

[08:04] <nwc10> but "only" 8Gb

[08:05] <nwc10> There was a lovely statement (but maybe a bit too much context needed for SLS): If SpaceX gets Starship to orbit prior to SLS launching, well.. let's just say I am starting to think "Elon Time" is not so much a joke as it is a temporal distortion field. Everything is behind schedule until suddenly it isn't and we're all staring slack-jawed at how quickly they're moving.

[08:05] <nwc10> I'm wondering if ARM in datacenters will be something like this

[08:06] <brrt> that actually makes sense

[08:06] <brrt> engineering is mostly removing faults

[08:06] <brrt> you start with a general idea, you find 100 faults

[08:07] <brrt> you can sort of parallelize, but if you set 1000 people on it,  you'll only get the first 5 fixes slightly faster

[08:07] <brrt> then the next 5 fixes. and then the next, and then the next

[08:07] <nwc10> I wonder if there will be a ("shock") tipping point, where it turns out that there are more AWS instances running on ARM than x86, because it's cheaper

[08:07] <nwc10> some point in the next few years

[08:07] <brrt> we might see that

[08:08] <nwc10> or Google announce something similar about their own datacentres

[08:08] <nwc10> or Facebook

[08:08] <brrt> at the start, only a select few will believe that something might ever work (with 100 failures); at 50 failures, more people will believe it, and more people will work on it;

[08:09] <brrt> probably at 5 or 10 remaining faults it is shipped

[08:09] <nwc10> heck, actually Apple. We *know* that Apple have seriously fast ARM CPUs

[08:09] <nwc10> and Apple are the most secretive

[08:09] <brrt> Hmmm.

[08:09] <brrt> There's two opposing dynamics though

[08:10] <nwc10> "a lot of existing machines" ?

[08:10] <MasterDuke> do MS's new surface devices run on arm?

[08:10] <brrt> On one hand, apple fans will probably swiftly adopt the new platform

[08:10] <nwc10> not everything ports nicely

[08:10] <brrt> yes, but there are also a lot of existing nokia's still

[08:10] <brrt> so that's not the point.

[08:10] <brrt> the point is that apple consumers tend to hold fast to the low depreciation rates of apple computers

[08:11] <brrt> i.e. everybody who's bought an apple thinks they can sell it for 60% of new value a few years down the road

[08:12] <brrt> and I'm not sure whether that works together well.

[08:12] <nwc10> brrt: I was really meaning servers in datacentres. Not consumer devices

[08:14] <brrt> no, datacentres I agree

[08:14] <brrt> probably because for datacentres opex is on a similar scale to capex, and for consumer devices that's not true

[08:19] <brrt> on the other hand, 'will apple consumers take a financial hit in order to get the newest gadget' - I think the answer to that is evident :-D

[08:49] *** squashable6 left
[08:52] *** squashable6 joined
[09:41] *** Altai-man joined
[09:43] *** sena_kun left
[09:48] *** MasterDuke left
[10:00] *** MasterDuke joined
[10:13] *** MasterDuke left
[10:35] *** leont joined
[10:40] <lizmat> anybody has a problem with thundergnat's bump of Unicode ?

[11:03] *** zakharyas left
[11:03] *** brrt left
[11:59] *** brrt joined
[12:05] *** thundergnat joined
[12:08] <thundergnat> lizmat: I would feel better if samcv had a chance to look it over to make sure I didn't do something completely boneheaded. It compiles, Rakudu built on top complies, passes sanity and spec tests, but I really don't know if it is 100% correct. 

[12:08] <lizmat> understood...  

[12:09] <thundergnat> It is almost certainly going to need a closer look at the grapheme break rules.

[12:10] *** pamplemousse joined
[12:12] <pamplemousse> o/

[12:12] <tellable6> 2020-10-02T07:59:49Z #moarvm <brrt> pamplemousse no jit news today

[12:12] <brrt> \o

[12:13] <brrt> I have an oldish JIT devirt branch that I could resurrect somewhat safely

[12:13] *** thundergnat left
[12:27] <pamplemousse> Somewhat safely?

[12:32] *** brrt left
[12:50] *** MasterDuke joined
[12:55] *** pamplemousse left
[13:42] *** sena_kun joined
[13:43] *** Altai-man left
[13:51] *** zakharyas joined
[14:48] *** zakharyas1 joined
[14:51] *** zakharyas left
[14:52] *** zakharyas1 left
[14:55] *** zakharyas1 joined
[14:57] <MasterDuke> ugh. thought i had a fix for MVM_mp_get_double_shift, but it doesn't work for everything. one version has 13 fails in t/spec/S32-num/rat.t, the other has 2

[14:59] <MasterDuke> and differing number of fails in t/spec/S02-types/num.rakudo.moar

[15:19] *** pamplemousse joined
[15:24] *** zakharyas1 left
[15:27] <MasterDuke> https://github.com/MoarVM/MoarVM/compare/master...MasterDuke17:taboege-configure-gmp#diff-da7d01bcfced11bccf24e9234758e807 if anyone feels like looking at what i have now

[15:39] *** domidumont left
[15:44] *** zakharyas joined
[16:36] *** pamplemousse left
[16:36] *** pamplemousse joined
[16:53] *** pamplemousse left
[17:08] *** pamplemousse joined
[17:41] *** Altai-man joined
[17:44] *** sena_kun left
[18:46] *** rypervenche left
[18:47] <MasterDuke> or maybe i switch back to using gmp floats like i first tried, but with massively increased precision...

[18:54] *** rypervenche joined
[18:54] <timotimo> MasterDuke: do you have outputs of the numbers involved? like all the limbs and the resulting double at every step?

[18:59] <MasterDuke> mostly. not in a very organized way

[19:00] <MasterDuke> fyi, requesting 633 bits of precision for the gmp floats didn't improve anything

[19:00] <timotimo> improve in what way?

[19:00] <MasterDuke> still fails, i think the doubles generated with the gmp floats was the same as when i just used their default precision

[19:03] <timotimo> wanna independently verify the results with per-hand math? :\

[19:03] <MasterDuke> not really

[19:03] <timotimo> yeah

[19:04] <MasterDuke> these are large numbers

[19:05] <timotimo> maybe with like wolfram alpha or maxima

[19:07] <timotimo> neil cicierega's newest album is already incredible, having only listened to three tracks of it

[19:12] <MasterDuke> https://gist.github.com/MasterDuke17/b22582cc4d8771c9362411273017ca3d ther's an example

[19:20] <MasterDuke> gist updated

[19:54] *** raku-bridge1 joined
[19:54] *** raku-bridge1 left
[19:54] *** raku-bridge1 joined
[19:56] *** Kaiepi joined
[19:56] *** raku-bridge left
[19:57] *** raku-bridge1 is now known as raku-bridge

[20:27] *** zakharyas left
[20:36] <timotimo> m: say 1152921504606846976.base(16)

[20:36] <camelia> rakudo-moar 85847d2f1: OUTPUT: «1000000000000000␤»

[20:39] <MasterDuke> gist updated

[21:02] *** Altai-man left
[21:08] *** pamplemousse left
[21:21] *** Altai-man joined
[21:25] *** Altai-man left
[21:38] *** MasterDuke left
[21:45] <moon-child> got this from a long-running raku process 'MoarVM panic: Internal error: invalid thread ID 25 in GC work pass'

[21:45] <moon-child> can't repro reliably, though, and no corefile.  Any setup I can do to get a useful dump if it happens again?

[22:51] *** pamplemousse joined
[23:11] *** pamplemousse left
