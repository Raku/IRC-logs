[00:02] *** sena_kun joined
[00:03] *** Altai-man_ left
[00:07] *** nebuchadnezzar left
[00:25] *** [Coke] left
[00:27] *** [Coke] joined
[00:27] *** [Coke] left
[00:27] *** [Coke] joined
[01:10] *** MasterDuke left
[01:55] *** Kaiepi left
[01:58] *** Kaiepi joined
[01:58] <timotimo> hrm. i'm unboxing the enum values at spesh time now (if they're constant and known, of course), but it looks like that part of the optimization happens too late to propagate values forward towards being used as flags for readuint

[02:01] *** Altai-man_ joined
[02:01] <timotimo> doing it post_inline as well seems fine

[02:03] *** sena_kun left
[02:12] <timotimo> how do i even implement coerce_ui and coerce_iu when all we have for known values is a .i value that's MVMint64, but also, bit-per-bit, as long as we don't do some specific ops on the values?

[04:02] *** sena_kun joined
[04:03] *** Altai-man_ left
[05:10] *** nebuchadnezzar joined
[06:01] *** Altai-man_ joined
[06:03] *** sena_kun left
[06:10] <nwc10> good *, #moarvm 

[06:12] *** squashable6 left
[06:13] *** squashable6 joined
[07:57] *** zakharyas joined
[08:02] *** sena_kun joined
[08:04] *** Altai-man_ left
[08:51] *** nebuchadnezzar left
[09:12] *** nebuchadnezzar joined
[09:32] <jnthn> morning o/

[09:32] <tellable6> 2020-07-01T08:05:07Z #raku <SmokeMachine> jnthn I'm still just wondering, sorry if interrupting, but would it make sense if there was something like RakuAST::Statement::Conditional that RakuAST::Statement::If and RakuAST::Statement::With would extend that?

[09:32] <tellable6> 2020-07-01T08:10:29Z #raku <SmokeMachine> jnthn the same for RakuAST::Statement::Elsif and RakuAST::Statement::Orwith

[09:32] <tellable6> hey jnthn, you have a message: https://gist.github.com/b46293967dd7cd9af3543c3647684c58

[09:38] <nwc10> \o

[09:47] *** nebuchadnezzar left
[09:53] *** nebuchadnezzar joined
[10:01] *** Altai-man_ joined
[10:04] *** sena_kun left
[10:08] <jnthn> So...where wsa that ASAN barf that I was going to look at today...

[10:11] <jnthn> Ah, http://paste.scsys.co.uk/591952

[10:12] *** MasterDuke joined
[10:14] <jnthn> And...it doesn't blow up

[10:14] <jnthn> Lots of leaks though :)

[10:17] <nwc10> do we "blame" timotimo for fixing something?

[10:17] <nwc10> the harness reported it in the list of erros when I ran all the tests today in parallel

[10:18] <nwc10> but I can't recreate any technicolor barfage when I run it individually today

[10:18] <nwc10> or even failures

[10:31] <Geth> Â¦ MoarVM/new-disp: 26142fa6c2 | (Jonathan Worthington)++ | 3 files

[10:31] <Geth> Â¦ MoarVM/new-disp: Free memory associated with dispatch recordings

[10:31] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/26142fa6c2

[10:31] <jnthn> That's nearly all of the leak barf

[10:32] <jnthn> Woulda been nice to provoke the other failure though

[10:32] <jnthn> Unless it really is fixed, but that you saw it in the parallel run this morning makes me suspect that it just learned to play hide and seek better...

[10:33] <jnthn> Hm, and it's in legacy args processing too

[10:34] <jnthn> Though still the output makes no sense to me

[10:41] <Geth> Â¦ MoarVM/new-disp: 9ffe441e86 | (Jonathan Worthington)++ | src/core/callsite.c

[10:41] <Geth> Â¦ MoarVM/new-disp: Fix a leak when we drop all callsite args

[10:41] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/9ffe441e86

[10:41] <jnthn> And that nails the last new-disp related ASAN leak complaint I've seen

[10:50] <Geth> Â¦ MoarVM/new-disp: 3cb8874d6b | (Jonathan Worthington)++ | src/core/callstack.c

[10:50] <Geth> Â¦ MoarVM/new-disp: Free dispatch recording on exception too

[10:50] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/3cb8874d6b

[10:50] <jnthn> Of course, right after saying it was the last one, I spot another :)

[11:01] <nwc10> jnthn: no, strictly and to be clear "harness repoted test not OK"

[11:01] <nwc10> reported test not 100% passes

[11:01] <nwc10> er, actually   Parse errors: No plan found in TAP output

[11:02] <nwc10> but there were also all those whatever-it-was syntxa error thingies that I saw and you could never reproduce

[11:02] <nwc10> that made no sense

[11:02] <nwc10> I no longer see those

[11:10] <jnthn> That's something at least

[11:10] <jnthn> ooh, lunch time

[11:28] *** zakharyas left
[12:10] *** mst left
[12:10] *** mst joined
[12:10] *** ChanServ sets mode: +o mst

[12:16] *** bartolin_ left
[12:29] *** sena_kun joined
[12:29] *** Altai-man_ left
[12:29] <nwc10> jnthn: when running tests in parallel, the harness reports "Parse errors: No plan found in TAP output" for all of t/02-rakudo/03-corekeys-6d.t t/02-rakudo/03-cmp-ok.t t/04-nativecall/01-argless.t t/07-pod-to-text/02-input-output.t t/07-pod-to-text/01-whitespace.t

[12:29] <nwc10> there is no extra output on STDERR

[12:29] <nwc10> tests fail like this:

[12:29] <nwc10> t/04-nativecall/01-argless.t .................................... Dubious, test

[12:29] <nwc10> returned 1 (wstat 256, 0x100)

[12:29] <nwc10> No subtests run

[12:29] <nwc10> odd, I seem to be seeing different behaviour between my two terminal windows

[12:29] <nwc10> so ... what differs in the ENV vars

[12:29] *** bartolin joined
[12:29] <jnthn> Mmmm....that was a good bowl of red curry

[12:32] * nine loves red curry

[12:43] *** MasterDuke left
[12:49] <jnthn> I'm lucky to have a place reliably doing a good one about 5 minutes from the office. :)

[12:54] * moritz is more one for fried noodles or fried rice

[12:56] <jnthn> nwc10: In spectest I get t/spec/S17-promise/start.t doing similar, but it runs fine alone. grmbl.

[12:56] <nwc10> my hunch is that it is something related to load average

[12:56] <nwc10> and hence speeds

[12:56] <nwc10> but does that mean that spesh can complete earler-or-later, and that might then inject changes into some other running code at different points in its execution?

[12:56] <jnthn> Potentially, yes

[12:56] <jnthn> Spesh runs on a background thread, so unless the blocking env var is set, its behavior will vary, and in a threaded program it will still vary even with that, due to the timing differences caused by the threads themselves

[12:56] <nwc10> but I do have this set: MVM_SPESH_BLOCKING=1

[12:56] <nwc10> so, hmmm

[12:56] <jnthn> Will see if I can catch one later. Going to try and get the reliable failures sorted out first.

[13:22] *** zakharyas joined
[13:24] <Geth> Â¦ MoarVM/new-disp: f8cef2ff69 | (Jonathan Worthington)++ | 3 files

[13:24] <Geth> Â¦ MoarVM/new-disp: Implement captureexistsnamed on MVMCapture

[13:24] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/f8cef2ff69

[13:32] <nwc10> oh my, there are a lot of code point names in Unicode

[13:34] <nwc10> 138008

[13:35] <nwc10> oh wait, 138007

[13:36] <nwc10> "SIGNWRITING MOVEMENT-DIAGONAL BETWEEN TOWARDS MEDIUM"

[13:46] <jnthn> And it's only growing... :)

[13:47] <jnthn> .oO( or that's that the medium predicted... )

[13:51] <jnthn> Hm, I think I'm missing something in the new dispatcher

[13:53] <jnthn> In some cases, we need to do some late-bound work to decide on a candidate, e.g. more than we can ever reasonably guard.

[13:55] <jnthn> And it'd be nice to be able to decide on the candidate, and then have it invoked, without having an intermediate thingy on the call stack

[13:56] <jnthn> This'd potentially be useful for megamorphic caess too

[13:57] <jnthn> Just not quite sure exactly what it'd look like

[14:01] *** Altai-man_ joined
[14:04] *** sena_kun left
[14:21] <timotimo> rr has a "chaos mode" that does something to scheduling that's supposed to provoke trouble much more often

[14:33] *** brrt joined
[14:39] *** MasterDuke joined
[15:25] <brrt> \o

[15:27] <jnthn> o/

[15:33] <brrt> we're finally having rain again

[15:38] <timotimo> we had cold for two days, now it's heat again, but not as strong

[15:42] <jnthn> 29C outside at the moment.

[15:43] <jnthn> Correction: 30C

[15:44] <[Coke]> only 27C here. (but I'm in the US, so the AC has been on for weeks :)

[15:44] <jnthn> Office air conditioning has a hole through the wall to eject air nowadays. Not a perfect setup, but works way better than tossing the pipe out of an ajar door. It's keeping it to...well, the thermostat thanks 24C, which may be correct, but it feels a little better than that, maybe 'cus the humidity is lower

[15:45] <jnthn> The current bit of design works is quite headache-inducing even in the cool air... :)

[15:46] <jnthn> I've realized that a multi-dispatch that needs late-bound stuff is probably just the same as a megamorphic callsite in that both want to do a little bit of work to get over the megamorphic "hump"

[15:47] <jnthn> My figuring is that many places will be megamoprhic only along one dimension of the dispatch.

[15:48] <jnthn> That is, you may well end up with a site that sees numerous types to dispatch a method on, but once we reach the point of having found one, it'll be a Method object that wants a code ref inside of it unwrapped

[15:49] <jnthn> Ditto with later-bound multi-dispatches that depend on values, unpacking, etc.

[15:52] <jnthn> I'm still not too happy with the lack of answers for polyvariance too

[15:54] <jnthn> OO::Monitors is a classic example; the callsame after the lock acquisition is megamorphic at the location of the callsame, but keyed on the root of the dispatch that we're resuming it's probably monomorphic

[15:55] <jnthn> Maybe resumptions thus want their ICs hung off the IC of the root of the dispatch generally.

[15:56] <jnthn> And that brings me back to wondering if resumption of dispatch and megamorphic dispatch are both looking for some common mechanism.

[15:56] <jnthn> Which I've been going around in circles on for the last hour or so. :)

[16:02] *** sena_kun joined
[16:02] <nine> That megamorphism at the callsite but monomorphism when looking at the larger picture is also true for lots of call chains

[16:04] <nine> But that's probably out of scope if you try to stay sane during this dispatch rework :)

[16:04] *** Altai-man_ left
[16:56] *** zakharyas left
[17:15] *** nine left
[17:15] *** leont_ left
[17:15] *** AlexDaniel left
[17:15] *** dogbert17 left
[17:15] *** japhb left
[17:15] *** gugod left
[17:15] *** MasterDuke left
[17:15] *** camelia left
[17:15] *** avar left
[17:15] *** nativecallable6 left
[17:15] *** linkable6 left
[17:15] *** releasable6 left
[17:15] *** unicodable6 left
[17:15] *** kawaii left
[17:15] *** tbrowder left
[17:15] *** BinGOs left
[17:15] *** mtj_ left
[17:15] *** reportable6 left
[17:15] *** tellable6 left
[17:15] *** bisectable6 left
[17:15] *** evalable6 left
[17:15] *** committable6 left
[17:15] *** statisfiable6 left
[17:15] *** Geth left
[17:15] *** hoelzro left
[17:15] *** Altreus left
[17:15] *** moon-child left
[17:15] *** jnthn left
[17:15] *** nebuchadnezzar left
[17:15] *** squashable6 left
[17:15] *** greppable6 left
[17:15] *** bloatable6 left
[17:15] *** shareable6 left
[17:15] *** benchable6 left
[17:15] *** sourceable6 left
[17:15] *** notable6 left
[17:15] *** quotable6 left
[17:15] *** coverable6 left
[17:15] *** lizmat left
[17:15] *** raku-bridge left
[17:15] *** harrow left
[17:15] *** leedo left
[17:15] *** TimToady left
[17:15] *** Voldenet left
[17:15] *** robertle left
[17:15] *** xiaomiao left
[17:15] *** AlexDaniel` left
[17:15] *** vrurg left
[17:15] *** nwc10 left
[17:15] *** jjatria left
[17:15] *** SmokeMachine left
[17:15] *** Util left
[17:15] *** moritz left
[17:15] *** ChanServ left
[17:15] *** brrt left
[17:15] *** [Coke] left
[17:15] *** samcv left
[17:15] *** synthmeat left
[17:15] *** elcaro left
[17:15] *** vesper11 left
[17:16] *** sena_kun left
[17:16] *** mst left
[17:16] *** Kaiepi left
[17:16] *** sivoais left
[17:16] *** timotimo left
[17:16] *** krunen left
[17:16] *** eater left
[17:16] *** chansen_ left
[17:16] *** rypervenche left
[17:16] *** rba left
[17:16] *** jpf1 left
[17:16] *** bartolin left
[17:16] *** klapperl left
[17:19] *** ilogger2 joined
[17:29] *** leont_ joined
[17:29] *** AlexDaniel joined
[17:29] *** dogbert17 joined
[17:29] *** japhb joined
[17:29] *** gugod joined
[18:02] *** Altai-man_ joined
[18:05] *** brrt joined
[18:15] *** MasterDuke joined
[18:37] *** MasterDuke left
[19:40] *** brrt left
[19:50] *** AlexDaniel` joined
[20:03] *** sena_kun joined
[20:04] *** Altai-man_ left
[22:02] *** Altai-man_ joined
[22:04] *** sena_kun left
[23:11] *** AlexDani` joined
[23:12] *** AlexDaniel left
