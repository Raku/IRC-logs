[00:45] *** vrurg left
[00:46] *** vrurg joined
[00:51] *** vrurg left
[01:08] *** vrurg joined
[06:44] *** vrurg left
[06:45] *** vrurg joined
[06:46] <nine> zostay: /win 10

[06:49] *** vrurg left
[06:55] *** harrow left
[06:56] *** harrow joined
[07:19] *** vrurg joined
[07:23] <nwc10> good *, #moarvm 

[07:24] *** zakharyas joined
[07:44] <nine> *, nwc10 

[08:16] *** leont_ joined
[08:27] <nwc10> just when you thought that you knew what was going on, you find https://github.com/senderista/hashtable-benchmarks

[08:27] <nwc10> (actually, I don't know what is going on, so I'm building with GH_DEBUG at 3)

[08:42] *** patrickb joined
[08:48] *** sena_kun joined
[08:53] *** Altai-man_ joined
[09:13] *** sena_kun left
[09:13] *** sena_kun joined
[09:14] *** Altai-man_ left
[09:20] <jnthn> morning o/

[09:21] <lizmat> jnthn  /o

[09:21] <nwc10> \o

[09:27] *** sena_kun1 joined
[09:57] *** sena_kun1 left
[10:10] <Geth_> Â¦ MoarVM: ffontaine++ created pull request #1326: Fix build with gcc 4.8

[10:10] <Geth_> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1326

[11:06] *** vrurg left
[11:07] *** vrurg joined
[11:11] *** Altai-man_ joined
[11:11] *** vrurg left
[11:13] *** zakharyas left
[11:14] *** sena_kun left
[11:42] *** sena_kun joined
[11:45] *** vrurg joined
[11:51] *** vrurg left
[11:51] *** vrurg joined
[12:03] *** brrt joined
[12:12] *** brrt left
[12:25] *** zakharyas joined
[12:32] *** squashable6 left
[12:36] *** squashable6 joined
[13:14] *** sena_kun left
[13:14] *** Altai-man_ left
[13:15] *** sena_kun joined
[13:19] *** MasterDuke left
[13:28] *** sena_kun left
[13:29] *** sena_kun joined
[13:38] *** Altai-man_ joined
[14:25] *** patrickb left
[14:27] *** sena_kun left
[15:13] *** sena_kun joined
[15:14] *** Altai-man_ left
[15:45] <Kaiepi> is it bad style to do for loops with pointer arithmetic?

[15:45] <Kaiepi> i grepped for them to see if anyone else does them, but didn't see any

[16:15] <nine> Kaiepi: well it is C :)

[17:12] *** Altai-man_ joined
[17:14] *** sena_kun left
[17:22] *** zakharyas left
[18:13] *** sena_kun joined
[18:18] *** squashable6 left
[18:21] *** squashable6 joined
[18:43] *** sena_kun left
[19:13] *** sena_kun joined
[19:14] *** Altai-man_ left
[19:23] *** squashable6 left
[19:24] *** squashable6 joined
[19:27] *** zakharyas joined
[20:03] *** moon-child joined
[20:07] *** moon-child left
[20:38] *** MasterDuke joined
[20:56] *** zakharyas left
[21:12] *** Altai-man_ joined
[21:14] *** sena_kun left
[22:31] <timotimo>  usually use index arithmetic and expect to see compiler to make the same code in the end

[22:35] <timotimo>  have not yet verified but  expected to be just fine

[22:45] <jnthn> I vaguely recall my compilers professor going through an example which was nice and clear using indexes, then one using pointer arith, and I think the punchline was that in that particular example the more readable code came out faster after optimization.

[22:45] <jnthn> Of course this won't generalize to every case.

[22:48] <timotimo>  wonder if you should go look through the code for opportunities to use branchless programming

[22:49] <timotimo> and surely theres something for the JIT optimizer to do at some point in the future

[22:58] *** MasterDuke left
[23:13] *** sena_kun joined
[23:14] *** Altai-man_ left
