[00:48] *** regreg_ joined
[00:51] *** sena_kun joined
[00:53] *** Altai-man_ left
[00:56] *** AlexDaniel left
[00:56] *** AlexDani` joined
[01:20] *** squashable6 left
[01:21] *** squashable6 joined
[02:41] *** regreg_ left
[02:50] *** Altai-man_ joined
[02:53] *** ZzZombo joined
[02:53] *** ZzZombo left
[02:53] *** sena_kun left
[04:51] *** sena_kun joined
[04:53] *** Altai-man_ left
[06:50] *** Altai-man_ joined
[06:52] *** sena_kun left
[08:07] *** Voldenet left
[08:07] *** ilogger2 joined
[09:00] *** zakharyas joined
[09:03] *** zakharyas left
[09:06] *** zakharyas joined
[09:07] <nwc10> good *, #moarvm 

[09:23] <lizmat> o/ nwc10 

[12:31] *** sena_kun joined
[12:52] *** sena_kun left
[13:42] *** lucasb joined
[13:55] <Geth> Â¦ MoarVM: a6bc2a2a65 | (Jonathan Worthington)++ | src/spesh/args.c

[13:55] <Geth> Â¦ MoarVM: Add missing args spesh coercion validation

[13:55] <Geth> Â¦ MoarVM: 

[13:55] <Geth> Â¦ MoarVM: We failed to validate that the incoming named argument was suitable for

[13:55] <Geth> Â¦ MoarVM: rewriting as part of argument handling specialization. This adds the

[13:55] <Geth> Â¦ MoarVM: required validation, bringing it in line with the the checking done on

[13:55] <Geth> Â¦ MoarVM: positional parameters. It also hoists required named missing validation

[13:55] <Geth> Â¦ MoarVM: to before we start doing any transformation; the bailing out after the

[13:55] <Geth> Â¦ MoarVM: positional argument transformations were done was decidedly dubious, and

[13:55] <Geth> Â¦ MoarVM: could potentially also cause problems. Fixes #1242.

[13:55] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a6bc2a2a65

[13:55] <linkable6> MOARVM#1242 [closed]: https://github.com/MoarVM/MoarVM/issues/1242 Failure when running S05-grammar/parse_and_parsefile-6e.t under MVM_SPESH_BLOCKING and MVM_SPESH_NODELAY

[13:58] <jnthn> One more down.

[14:05] <lizmat> jnthn++

[14:09] <nine> jnthn: forcing a full GC run every 100 GCs takes our backend API down from > 6 GiB RSS to 5 GiB RSS after 20K requests

[14:12] <jnthn> Hm, that still seems like a heck of a lot of memory usage

[14:12] <jnthn> It's interesting, but...clearly something is still wrong with there being that much in the first place.

[14:15] <nine> Yes. It does show however that the current heuristic pretty much says: the more you leak, the less we care about keeping memory usage low.

[14:17] <nine> Funny:

[14:18] <nine> Doesn't leak: raku -I/home/nine/Inline-Perl5 -e 'use Atikon::DB::Timemngt:from<Perl5>; my $schema = Atikon::DB::Timemngt.connect("dbi:Pg:database=timemngt"); my $resultset = $schema.resultset("MeinAtikonSession"); loop { $resultset.clear_expired_sessions; }'

[14:18] <nine> Doesn't leak: raku -I/home/nine/Inline-Perl5 -e 'use Atikon::DB::Timemngt:from<Perl5>; my $schema = Atikon::DB::Timemngt.connect("dbi:Pg:database=timemngt"); loop { $schema.resultset("MeinAtikonSession"); }'

[14:18] <nine> Leaks like hell: raku -I/home/nine/Inline-Perl5 -e 'use Atikon::DB::Timemngt:from<Perl5>; my $schema = Atikon::DB::Timemngt.connect("dbi:Pg:database=timemngt"); loop { $schema.resultset("MeinAtikonSession").clear_expired_sessions; }'

[14:18] <nine> So neither the call to resultset, nor the call to clear_expired_sessions are problematic individually, but chain them and memory usage explodes

[14:19] <lizmat> I wonder if that could be reproduced without Inline::Perl5

[14:21] <nine> loop { my $resultset = $schema.resultset("MeinAtikonSession"); $resultset.clear_expired_sessions; }' leaks just as much

[14:24] <Geth> Â¦ MoarVM: 15e94eecb3 | (Jonathan Worthington)++ | src/strings/ops.c

[14:24] <Geth> Â¦ MoarVM: Bounds check codepoint passed to chr

[14:24] <Geth> Â¦ MoarVM: 

[14:24] <Geth> Â¦ MoarVM: So that we don't end up overflowing and trying to look up a synthetic.

[14:24] <Geth> Â¦ MoarVM: The out of bounds codepoints that don't overflow are also a potential

[14:24] <Geth> Â¦ MoarVM: risk, so disallow that too. Also, print the hex value to bring the error

[14:24] <Geth> Â¦ MoarVM: in line with what the Raku level check does. Fixes #1115.

[14:24] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/15e94eecb3

[14:24] <linkable6> MOARVM#1115 [closed]: https://github.com/MoarVM/MoarVM/issues/1115 Synthetic code point checking off ?

[14:30] *** AlexDani` joined
[14:31] *** sivoais joined
[14:31] *** sivoais left
[14:31] *** sivoais joined
[14:42] *** sena_kun joined
[14:43] *** sena_kun left
[14:43] *** sena_kun joined
[14:50] *** Altai-man_ joined
[14:53] *** sena_kun left
[15:40] *** Kaiepi joined
[16:51] *** sena_kun joined
[16:53] *** Altai-man_ left
[18:25] *** dogbert11 joined
[18:36] *** zakharyas left
[18:51] *** Altai-man_ joined
[18:54] *** sena_kun left
[19:10] *** MasterDuke joined
[19:36] *** MasterDuke left
[19:39] *** Kaiepi left
[19:39] *** Kaiepi joined
[20:15] *** MasterDuke joined
[20:52] *** sena_kun joined
[20:53] *** Altai-man_ left
[21:09] <MasterDuke> jnthn: have you seen this (tree-sitter, the parser used in atom) https://www.youtube.com/watch?v=Jes3bD6P0To ? looks like it might be useful for comma

[21:24] *** zakharyas joined
[22:01] *** zakharyas left
[22:06] *** sena_kun1 joined
[22:06] *** sena_kun left
[22:06] *** sena_kun1 left
[22:48] *** AlexDani` is now known as AlexDaniel

[22:48] *** AlexDaniel left
[22:48] *** AlexDaniel joined
[23:02] *** lucasb left
[23:06] *** sena_kun joined
[23:27] *** sena_kun left
