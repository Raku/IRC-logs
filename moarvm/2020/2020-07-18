[05:23] <nwc10> good *, #moarvm

[07:47] *** sena_kun joined
[08:27] *** vrurg left
[08:29] *** vrurg joined
[09:12] *** Altai-man_ joined
[09:14] *** sena_kun left
[09:44] *** MasterDuke joined
[10:02] <nwc10> OK, so I decided to cheat, and built the setting with a known working moarvm. and (after more cheating) I can run -e0

[10:02] <nwc10> and t/01-sanity/18-simple-multisubs.t fails

[10:02] <nwc10> (and then a bunch more)

[10:02] <nwc10> but it's failing like this

[10:02] <nwc10> Can't use unknown trait 'is' -> 'onlystar' in a sub declaration.

[10:03] <nwc10> which looks very similar to the crazy in (failing) to build the setting

[10:07] <timotimo> yeah that's a multi dispatch failure reported as "you wanted something that doesn't exist"

[10:19] *** vrurg left
[10:19] <nwc10> and the testcase reduces to

[10:19] <nwc10> multi sub foo () {}

[10:20] *** vrurg joined
[10:21] *** sena_kun joined
[10:23] *** Altai-man_ left
[10:24] *** vrurg left
[10:56] *** vrurg joined
[10:57] *** vrurg left
[10:57] *** vrurg joined
[11:28] <timotimo> nice

[12:17] <timotimo> i just patched the visualizer to ignore heaps that have a size of 0 in their entry

[12:17] <timotimo> though i must assume i'll be missing important data

[12:19] <timotimo> firefox is having trouble opening the file ..?!

[12:20] *** Altai-man_ joined
[12:23] *** sena_kun left
[12:24] <timotimo> https://imgur.com/UlSmaN1

[12:24] <timotimo> so what does this tell me, i wonder

[12:27] <timotimo>     Red areas are memory locations in use.

[12:27] <timotimo>     Gray areas are free locations, but not released back to the kernel.

[12:27] <timotimo>     White areas are freed to the kernel.

[12:28] <timotimo> so i think that means a malloc_trim ought to release about 33.5 megabytes of memory to the kernel?

[12:29] <timotimo> the visualizer writes out every little square as its own png, all of them are only a few bytes big, but use 4 kilobytes on disk because reasons

[12:51] *** lucasb joined
[13:13] *** vrurg left
[13:17] *** vrurg joined
[14:00] <timotimo> tried to include https://github.com/theoricien/ptmalloc2v, but facing a couple of issues there as well, and the output isn't graphical, it's pages and pages and pages and pages and pages of output

[14:21] *** sena_kun joined
[14:22] *** vrurg left
[14:23] *** vrurg joined
[14:23] *** Altai-man_ left
[14:27] *** vrurg left
[14:30] <timotimo> you are supposed to call heap_init before calling malloc or calloc, but ltrd calls it already before your own binary even gets to have its entry point invoked

[14:45] *** vrurg joined
[16:20] *** Altai-man_ joined
[16:23] *** sena_kun left
[16:44] *** vrurg left
[16:44] *** vrurg joined
[16:48] *** vrurg left
[17:16] *** vrurg joined
[18:22] *** sena_kun joined
[18:22] *** vrurg left
[18:23] *** vrurg joined
[18:23] *** Altai-man_ left
[18:27] *** vrurg left
[18:41] *** vrurg joined
[19:03] *** sena_kun left
[19:05] *** sena_kun joined
[20:21] *** Altai-man_ joined
[20:23] *** sena_kun left
[21:55] *** Altai-man_ left
[22:06] *** sena_kun joined
[22:21] *** Altai-man_ joined
[22:23] *** sena_kun left
[22:32] *** vrurg left
