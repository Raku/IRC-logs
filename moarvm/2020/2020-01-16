[00:40] *** sena_kun left
[00:43] *** kawaii left
[00:49] *** tbrowder left
[00:55] *** sena_kun joined
[01:02] *** chansen_ left
[01:48] *** tbrowder joined
[02:01] *** tbrowder left
[02:41] *** sena_kun left
[02:56] *** sena_kun joined
[03:29] *** Kaiepi joined
[04:41] *** sena_kun left
[04:56] *** sena_kun joined
[05:54] *** chansen_ joined
[05:59] *** chansen_ left
[06:03] *** moon-child left
[06:04] *** moon-child joined
[06:41] *** sena_kun left
[06:52] *** chansen_ joined
[06:57] *** sena_kun joined
[07:05] *** tbrowder joined
[07:16] *** domidumont joined
[07:22] *** kawaii joined
[07:37] *** MasterDuke joined
[08:10] *** SmokeMachine joined
[08:34] *** zakharyas joined
[08:42] *** sena_kun left
[08:57] *** sena_kun joined
[08:58] *** zakharyas left
[08:59] *** zakharyas joined
[09:11] *** zakharyas left
[09:12] *** zakharyas joined
[09:45] <MasterDuke> ah ha! rakudo now builds with libtommath v1.2.0 without disabling the jit. turns out i'd changed the signature of a function that the jit was calling manually and i just needed to make the necessary change there too

[09:45] <MasterDuke> and passes `make m-test`, now to see about a spectest...

[09:59] <MasterDuke> only one failure in t/spec/S32-num/expmod.rakudo.moar (expected, we can't pass negative values to the libtommath function any more), one in t/spec/S32-num/expmod.rakudo.moar (don't understand this one)!

[10:11] *** domidumont left
[10:41] <MasterDuke> ha! jaeckel over in #libtom pointed out that the expmod error was probably pre-existing. i tested on master and it was. the libtommath mp_exptmod() function was failing with a "value out of range error" when passed a negative number for G, but we were silently ignoring it

[10:41] *** sena_kun left
[10:42] <MasterDuke> G is the first argument

[10:45] <MasterDuke> odd thing though. `make m-test` and `./nqp-m t/nqp/060-bigint.t` both report the error (i.e., die because an exception is thrown), but `make t/nqp/060-bigint.t` says 'ok' for the failing test and result is pass

[10:56] *** sena_kun joined
[10:57] *** zakharyas left
[11:01] *** zakharyas joined
[11:07] *** zakharyas1 joined
[11:09] *** zakharyas left
[12:14] *** Kaiepi left
[12:14] *** Kaiepi joined
[12:18] *** zakharyas1 left
[12:41] *** sena_kun left
[12:45] <MasterDuke> huh. `./libmoar.so: undefined reference to `s_read_wincsp'./libmoar.so: undefined reference to `s_read_getrandom'./libmoar.so: undefined reference to `s_read_arc4random'./libmoar.so: undefined reference to `s_read_ltm_rng'clang-7: error: linker command failed with exit code 1 (use -v to see invocation)` in travis when building with clang. but i

[12:45] <MasterDuke> don't get that locally when i use clang

[12:55] *** sena_kun joined
[13:42] *** vesper11 left
[13:42] *** vesper11 joined
[14:05] *** zakharyas joined
[14:07] *** dogbert17 joined
[14:28] *** lucasb joined
[14:42] *** sena_kun left
[14:54] *** lizmat left
[14:55] *** sena_kun joined
[14:56] *** domidumont joined
[16:39] *** domidumont left
[16:41] *** sena_kun left
[16:52] *** patrickb joined
[16:57] *** sena_kun joined
[16:58] <japhb> MasterDuke: Wrong version of a crypto lib?

[16:59] *** lizmat joined
[17:03] <MasterDuke> japhb: don't think so, works with gcc in travis, but not clang

[18:01] *** lizmat left
[18:24] *** patrickb left
[18:30] *** domidumont joined
[18:39] *** rypervenche left
[18:41] *** sena_kun left
[18:55] *** sena_kun joined
[19:01] *** rypervenche joined
[19:18] *** domidumont left
[19:19] *** zakharyas left
[19:22] *** zakharyas joined
[19:27] *** lizmat joined
[19:28] *** zakharyas left
[19:45] *** lizmat left
[19:52] *** patrickb joined
[20:03] *** lizmat joined
[20:27] *** lizmat left
[20:42] *** sena_kun left
[20:55] *** sena_kun joined
[21:09] *** zakharyas joined
[21:48] *** lucasb left
[21:56] *** zakharyas left
[21:56] *** Kaiepi left
[22:28] *** Kaiepi joined
[22:41] *** sena_kun left
[22:46] *** Kaiepi left
[22:48] *** Kaiepi joined
[22:57] *** sena_kun joined
[23:13] *** lizmat joined
