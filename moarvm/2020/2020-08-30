[01:02] *** nativecallable6 left
[01:02] *** quotable6 left
[01:02] *** greppable6 left
[01:02] *** shareable6 left
[01:02] *** squashable6 left
[01:02] *** committable6 left
[01:02] *** sourceable6 left
[01:02] *** evalable6 left
[01:02] *** tellable6 left
[01:02] *** statisfiable6 left
[01:02] *** coverable6 left
[01:02] *** bisectable6 left
[01:02] *** bloatable6 left
[01:02] *** reportable6 left
[01:02] *** linkable6 left
[01:02] *** unicodable6 left
[01:03] *** notable6 left
[01:03] *** releasable6 left
[01:03] *** benchable6 left
[01:03] *** statisfiable6 joined
[01:03] *** committable6 joined
[01:03] *** greppable6 joined
[01:04] *** benchable6 joined
[01:04] *** coverable6 joined
[01:04] *** tellable6 joined
[01:04] *** notable6 joined
[01:04] *** linkable6 joined
[01:04] *** sourceable6 joined
[01:04] *** nativecallable6 joined
[01:04] *** shareable6 joined
[01:04] *** evalable6 joined
[01:05] *** squashable6 joined
[01:05] *** quotable6 joined
[01:05] *** bisectable6 joined
[01:05] *** bloatable6 joined
[01:05] *** releasable6 joined
[01:05] *** reportable6 joined
[01:06] *** unicodable6 joined
[02:06] *** leont left
[04:43] *** linkable6 left
[04:43] *** evalable6 left
[04:45] *** linkable6 joined
[04:46] *** evalable6 joined
[06:39] <timotimo> good, good

[06:56] <timotimo> how bad can it really be to just include the memmem implementation twice

[07:11] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: 77cd533073 | (Timo Paulssen)++ | src/moar.c

[07:11] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: Give a specific error when MVM_platform_mmap_file fails

[07:11] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: 

[07:11] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: perhaps factoring this out to a platform function as well

[07:11] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: would be a good idea, like MVM_platform_describe_mmap_failure.

[07:11] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: review: https://github.com/MoarVM/MoarVM/commit/77cd533073

[07:11] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: feb8a1e831 | (Timo Paulssen)++ | 3rdparty/freebsd/memmem.c

[07:11] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: Make memmem impl static

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: 

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: we only include memmem from files that actually use it,

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: which up until now was just a single file, string/ops.c;

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: so far it has been fine to just include the implementation

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: of memmem from the header file, but now that moar.c also

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: uses it for --dump support, it would cause duplicate

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: definition of symbol errors.

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: 

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: memmem is small, and changing the build system can be

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: annoying. I think it's fine to Do This Later.

[07:12] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: review: https://github.com/MoarVM/MoarVM/commit/feb8a1e831

[07:31] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: 325aa4088d | (Timo Paulssen)++ | 3 files

[07:31] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: Make memmem impl usable from multiple places

[07:31] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: 

[07:31] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: by making 3rdparty/freebsd/memmem.c part of the

[07:31] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: objects lists and removing the implementation from

[07:31] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: the memmem header file

[07:31] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: review: https://github.com/MoarVM/MoarVM/commit/325aa4088d

[07:32] <timotimo> turned out the "make it static" thing wasn't going to work out without even more hacks

[07:35] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: 98457cdbf4 | (Timo Paulssen)++ | src/platform/memmem.h

[07:35] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: don't forget to pull in stdint to get size_t

[07:35] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: review: https://github.com/MoarVM/MoarVM/commit/98457cdbf4

[08:22] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: 004ce49c28 | (Timo Paulssen)++ | src/platform/memmem.h

[08:22] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: don't forget to pull in stdlib.h to get size_t

[08:22] <Geth> Â¦ MoarVM/dump-finds-moar-bytecode-header: review: https://github.com/MoarVM/MoarVM/commit/004ce49c28

[08:22] <timotimo> *ahem*

[09:22] <Geth> Â¦ MoarVM/master: 4 commits pushed by (Timo Paulssen)++

[09:22] <Geth> Â¦ MoarVM/master: da8a385701 | make moar --dump use memmem to find "MOARVM\r\n" string

[09:22] <Geth> Â¦ MoarVM/master: 489ab69602 | Give a specific error when MVM_platform_mmap_file fails

[09:22] <Geth> Â¦ MoarVM/master: 6366564024 | Make memmem impl usable from multiple places

[09:22] <Geth> Â¦ MoarVM/master: 72ea4fc0dd | don't forget to pull in stdlib.h to get size_t

[09:22] <Geth> Â¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/15a76dcb3e21...72ea4fc0dd80

[09:22] <timotimo> bam, a feature

[10:05] *** vrurg_ joined
[10:06] *** vrurg left
[10:06] *** Kaiepi left
[10:10] *** Kaiepi joined
[10:12] *** kawaii left
[10:12] *** tbrowder left
[10:13] *** tbrowder joined
[10:14] *** Kaiepi left
[10:14] *** camelia left
[10:14] *** Kaiepi joined
[10:20] *** camelia joined
[10:35] *** kawaii joined
[10:41] <Geth> Â¦ MoarVM: c3941772c2 | (Timo Paulssen)++ | tools/macroify_mallocs.p6

[10:41] <Geth> Â¦ MoarVM: commit "macroify mallocs" script

[10:41] <Geth> Â¦ MoarVM: 

[10:41] <Geth> Â¦ MoarVM: it turns mallocs and callocs of a fixed format

[10:41] <Geth> Â¦ MoarVM: to using a macro that has the name of the "type"

[10:41] <Geth> Â¦ MoarVM: being allocated as an argument. This allows not

[10:41] <Geth> Â¦ MoarVM: only to mention the type only once in the alloc,

[10:41] <Geth> Â¦ MoarVM: but also to trace allocations not just by size

[10:41] <Geth> Â¦ MoarVM: <â€¦commit message has 5 more linesâ€¦>

[10:41] <timotimo> i can't find the patch any more that adds these functions, lmao

[10:41] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c3941772c2

[10:42] *** kawaii left
[10:49] *** kawaii joined
[10:54] *** travis-ci joined
[10:54] <travis-ci> MoarVM build errored. Timo Paulssen 'commit "macroify mallocs" script

[10:54] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/722452093 https://github.com/MoarVM/MoarVM/compare/72ea4fc0dd80...c3941772c259

[10:54] *** travis-ci left
[11:05] <timotimo> this was not a commit that was supposed to be able to fail

[11:06] *** kawaii left
[11:08] *** kawaii joined
[11:22] <timotimo> aha i found the patch

[11:37] <nwc10> I know this feeling

[11:37] <nwc10> The command "sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test"" failed and exited with 1 during .

[11:41] *** kawaii left
[11:41] *** Util left
[11:43] *** kawaii joined
[11:57] <timotimo> huh

[12:11] <timotimo> https://paste.centos.org/view/876a3c6a if you've ever wondered what kind of stuff nqp deserializes while running an empty program

[12:12] <timotimo> the number at the end is the index in the serialization context

[12:13] <timotimo> oh and the hex value is the address of the serializaiton context body

[12:15] *** kawaii left
[12:15] *** kawaii joined
[12:33] *** Util joined
[12:38] *** kawaii left
[12:39] *** Util left
[12:40] *** kawaii joined
[12:45] <timotimo> the output from tracing confuses me a little bit

[12:45] <timotimo> i see a whole lot of the deserialization work loop being entered with a stable or something in the worklist queue, but then nothing happens

[12:51] *** Util joined
[13:05] <timotimo> my end goal is to instrument (in whatever way is most convenient) moar so it can give all information needed to figure out as exactly as possible how deserialization comes to be during startup and run of a program

[13:13] *** vrurg joined
[13:14] <timotimo> i could imagine a hex viewer in one pane and some clickable navigation on the other side

[13:15] *** vrurg_ left
[15:13] *** MasterDuke joined
[15:21] <MasterDuke> timotimo++

[15:21] <tellable6> 2020-08-25T17:06:37Z #raku <codesections> MasterDuke: ha :D  I guess the question I *should* have asked is whether the `candidates` array returned by .candidates is sorted in any particular way

[15:48] *** zakharyas joined
[16:44] *** sena_kun joined
[19:48] *** sena_kun left
[21:34] *** zakharyas left
[21:59] *** Kaeipi joined
[22:01] *** Kaiepi left
[23:34] *** AlexDaniel left
