[00:28] *** ggoebel_ left
[01:44] *** travis-ci joined
[01:44] <travis-ci> MoarVM build failed. Nicholas Clark 'oops if MVM_fixed_size_alloc() is called for a size of 0 bytes.

[01:44] <travis-ci> https://travis-ci.com/vrurg/MoarVM/builds/191077427 https://github.com/vrurg/MoarVM/compare/a7fa6daadd08...60070970c4a7

[01:44] *** travis-ci left
[02:15] <Geth> Â¦ MoarVM: coke self-unassigned Error!!! https://github.com/MoarVM/MoarVM/issues/995

[05:09] <nwc10> good *, #moarvm 

[06:53] *** patrickb joined
[06:57] <patrickb> o/

[06:58] <nwc10> \o

[07:01] <patrickb> I'd like to merge https://github.com/MoarVM/MoarVM/pull/1361 and the respective Rakudo PR soonish to give it at least a little exposure before the upcoming release. Any objections?

[07:16] *** patrickb left
[08:19] *** domidumont joined
[08:40] *** zakharyas joined
[09:12] *** sena_kun joined
[09:35] *** zakharyas left
[09:35] *** zakharyas joined
[13:03] *** zakharyas left
[13:14] *** squashable6 left
[13:15] *** squashable6 joined
[13:30] *** domidumont left
[14:01] *** domidumont joined
[14:07] *** domidumont left
[14:11] *** domidumont joined
[14:15] *** zakharyas joined
[14:28] *** domidumont left
[14:29] *** domidumont joined
[14:40] *** domidumont left
[15:09] *** domidumont joined
[15:34] *** domidumont left
[16:10] <Geth> Â¦ MoarVM/hash-bits-in-metadata: 21798ee146 | (Nicholas Clark)++ | 2 files

[16:10] <Geth> Â¦ MoarVM/hash-bits-in-metadata: Fix some errors in the previous explanatory comments, and add even more.

[16:10] <Geth> Â¦ MoarVM/hash-bits-in-metadata: 

[16:10] <Geth> Â¦ MoarVM/hash-bits-in-metadata: (Even more explanatory comments, that is. Not errors. I hope.)

[16:10] <Geth> Â¦ MoarVM/hash-bits-in-metadata: review: https://github.com/MoarVM/MoarVM/commit/21798ee146

[16:19] *** sena_kun left
[16:20] *** sena_kun joined
[17:11] <lizmat> :-)

[17:14] <[Coke]> HA

[18:02] *** zakharyas left
[18:21] *** patrickb joined
[18:45] <nine> Looks like mixins are still an issue

[18:46] <lizmat> :(

[18:46] <nine> I think...its about parametric types used as parameters for a mixin.

[18:47] <nine> When processing the param interns table, we deserialize the involved types (including those used as parameters).

[18:47] <nine> When we find an existing matching parametrization, we replace the parametrization's slot in the serialization context with what we found, so when deserializing in the future, we find what we want.

[18:48] <nine> But...when we don't find one, we leave it as it is.

[18:48] <nine> My hypothesis is that this unique parametric still references the un-interned object for its parameters, even if we later found that parameter as its own entry in the param interns table and replaced it in the SC

[19:12] *** sena_kun left
[19:57] <Geth> Â¦ MoarVM: dc50edddc3 | (Nicholas Clark)++ | build/probe.pm

[19:57] <Geth> Â¦ MoarVM: For the pthread_setname_np probe, use an auto char array instead of malloc.

[19:57] <Geth> Â¦ MoarVM: 

[19:57] <Geth> Â¦ MoarVM: There's no requirement from the API of pthread_setname_np to pass in a

[19:57] <Geth> Â¦ MoarVM: pointer from `malloc`. However, as the probe had been implemented, it would

[19:58] <Geth> Â¦ MoarVM: fail under an ASAN build, thus Configure.pl would incorrectly assume that

[19:58] <Geth> Â¦ MoarVM: pthread_setname_np was not available. because ASAN defaults to leak checking

[19:58] <Geth> Â¦ MoarVM: on exit, the leak checking is aggressive and sets a non-zero exit code on

[19:58] <Geth> Â¦ MoarVM: leaks, and `malloc` without `free` is a leak.

[19:58] <Geth> Â¦ MoarVM: 

[19:58] <Geth> Â¦ MoarVM: Hence use a char array, and avoid `malloc`. This way the probe also passes

[19:58] <Geth> Â¦ MoarVM: under ASAN, and we get to test the relevant runtime code with ASAN too.

[19:58] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/dc50edddc3

[20:06] *** zakharyas joined
[20:13] <timotimo> wow

[20:13] <timotimo> good catch

[20:24] <nwc10> it's *kind* of easy because it's been spewing colourful warnings at me for some weeks

[20:24] <nwc10> I'd just been busy with everything else. And now things have calmed down enough to get to *that*

[20:24] <timotimo> d'oh :)

[20:25] <nwc10> (next, we have, lots of warnings from on platforms-that-are-not-x86_64 - eg because char is signed, because long is not 64 bits, etc)

[20:25] <nwc10> (big endian failures)

[20:25] <nwc10> (spectest that appear to be failing only because I have  MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 set)

[20:25] <nwc10> and no promises if/when I ever get to these

[20:26] <nine> Oh, the parametrization issue is actually a bit worse: during resolve_param_intern we load a parameter that is a P6opaque with a not-yet-interned parametric in one of its attributes. That's the pointer that will keep pointing at a non-interned parametric

[20:26] <nwc10> however, right now I probably *should* get to bed because the evil alarm clock announces "good morning" rather sooner thnna I would like

[20:26] <nine> nwc10: it always does...

[20:26] <nwc10> nine: it's going to take more than coffee?

[20:27] <nine> might take some actual branes...

[20:27] <nwc10> school starts at 07:45 and my daughter is nowhere near as efficient as I am at getting out of the house in the morning as I am

[20:28] <nwc10> (or was, until the "office" became the cellar)

[20:28] <[Coke]> "out of the house"? Luxury.

[20:28] <nwc10> yes, quite. I got to the post office today

[20:30] <nwc10> you're supposed to *take* the feed line and say something. So that I can reply that the purpose of the trip was to mail my tax return. :-/

[20:30] <nwc10> (Because it was, and it's done now. At least, I have a tracking code and I now get to see whether it arrives)

[20:40] <Geth> Â¦ MoarVM: 882dbf04a6 | (Patrick BÃ¶ker)++ | 4 files

[20:40] <Geth> Â¦ MoarVM: Add a function to fix up the STD IO handles

[20:40] <Geth> Â¦ MoarVM: 

[20:40] <Geth> Â¦ MoarVM: This is in preparation for a Rakudo fix that will make sure Rakudo won't

[20:40] <Geth> Â¦ MoarVM: silently die if the STD handles are used on Windows in

[20:40] <Geth> Â¦ MoarVM: "windows"-subsystem executables. (`rakudow.exe`, `rakuw.exe` and

[20:40] <Geth> Â¦ MoarVM: `perl6w.exe`)

[20:40] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/882dbf04a6

[20:40] <Geth> Â¦ MoarVM: 4b06df1a61 | (Patrick BÃ¶ker)++ (committed using GitHub Web editor) | 4 files

[20:40] <Geth> Â¦ MoarVM: Merge pull request #1361 from patrickbkr/subsys-win-no-die-on-stdout

[20:40] <Geth> Â¦ MoarVM: 

[20:40] <Geth> Â¦ MoarVM: Add a function to fix up the STD IO handles

[20:40] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/4b06df1a61

[20:53] <nine> My ideas so far are to * take a snapshot of the SC's root objects and root stable tables before resolve_param_interns and restore that afterwards (modulo the modifications we want to do as part of interning) or * introduce a flag to deserialization preventing it from writing to those tables in the first place

[20:53] *** zakharyas left
[20:54] <nine> I think the flag would be easier but of course, there could be unanticipated side effects, e.g. if the same object would be requested twice for the same parametric, we'd actually end up with two different objects

[20:54] <nine> But first...bed...

[20:57] *** patrickb left
[20:58] <[Coke]> nwc10: so sorry, I was off stage. :)

[22:40] *** linkable6 left
[22:40] *** evalable6 left
[22:41] *** linkable6 joined
[22:43] *** evalable6 joined
[23:33] *** nebuchadnezzar left
[23:34] *** nebuchadnezzar joined
