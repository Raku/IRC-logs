[00:07] *** reportable6 left
[00:07] *** reportable6 joined
[00:09] <MasterDuke> i'm afraid it'll be no more debugging for me tonight, off to bed

[01:01] *** CaCode_ left
[01:10] *** squashable6 left
[01:13] *** squashable6 joined
[01:46] *** [Coke] left
[01:54] *** [Coke] joined
[02:55] *** unicodable6 left
[02:55] *** tellable6 left
[02:55] *** squashable6 left
[02:55] *** evalable6 left
[02:55] *** statisfiable6 left
[02:55] *** linkable6 left
[02:55] *** reportable6 left
[02:55] *** sourceable6 left
[02:55] *** coverable6 left
[02:55] *** notable6 left
[02:55] *** bloatable6 left
[02:55] *** releasable6 left
[02:55] *** committable6 left
[02:55] *** shareable6 left
[02:55] *** quotable6 left
[02:55] *** bisectable6 left
[02:55] *** greppable6 left
[02:55] *** benchable6 left
[02:55] *** nativecallable6 left
[02:55] *** quotable6 joined
[02:56] *** evalable6 joined
[02:57] *** shareable6 joined
[02:57] *** coverable6 joined
[02:57] *** reportable6 joined
[02:57] *** committable6 joined
[02:57] *** bisectable6 joined
[02:57] *** sourceable6 joined
[02:57] *** squashable6 joined
[02:58] *** statisfiable6 joined
[03:55] *** bloatable6 joined
[03:56] *** benchable6 joined
[04:55] *** releasable6 joined
[04:55] *** unicodable6 joined
[04:56] *** linkable6 joined
[04:56] *** notable6 joined
[04:57] *** nativecallable6 joined
[04:57] *** greppable6 joined
[05:57] *** statisfiable6 left
[05:57] *** benchable6 left
[05:57] *** evalable6 left
[05:57] *** squashable6 left
[05:57] *** releasable6 left
[05:57] *** bisectable6 left
[05:57] *** reportable6 left
[05:57] *** quotable6 left
[05:57] *** bloatable6 left
[05:57] *** notable6 left
[05:57] *** linkable6 left
[05:57] *** nativecallable6 left
[05:57] *** sourceable6 left
[05:57] *** unicodable6 left
[05:57] *** greppable6 left
[05:57] *** shareable6 left
[05:57] *** coverable6 left
[05:57] *** committable6 left
[05:58] *** greppable6 joined
[06:00] *** statisfiable6 joined
[06:00] *** nativecallable6 joined
[06:00] *** coverable6 joined
[06:00] *** linkable6 joined
[06:08] *** reportable6 joined
[06:58] *** shareable6 joined
[06:58] *** squashable6 joined
[06:59] *** bisectable6 joined
[06:59] *** evalable6 joined
[07:00] *** benchable6 joined
[07:00] *** committable6 joined
[07:58] *** quotable6 joined
[07:58] *** bloatable6 joined
[07:59] *** releasable6 joined
[08:12] <Nicholas> good #moarvm, *

[08:58] *** notable6 joined
[08:59] *** unicodable6 joined
[09:00] *** sourceable6 joined
[09:58] *** tellable6 joined
[10:24] <jnthnwrthngtn> o/

[10:25] <Nicholas> \o

[10:58] *** evalable6 left
[10:58] *** linkable6 left
[11:00] *** evalable6 joined
[11:59] *** linkable6 joined
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[12:50] *** CaCode joined
[12:51] *** TheAthlete joined
[12:58] *** CaCode_ joined
[13:00] *** CaCode left
[13:52] *** discord-raku-bot left
[13:53] *** discord-raku-bot joined
[14:15] *** CaCode_ left
[14:23] <dogbert17> at least the repl.t bug seems to be consistent, i.e. always crashing in the same place

[14:24] <dogbert17> and relatively easy to repl(icate) :)

[14:33] <MasterDuke> it's crashing in an is-run test, right?

[14:37] <MasterDuke> i guess something in the parent process is corrupting the memory state of the child

[14:38] <MasterDuke> i think there's a way to get rr to record parent+child

[14:38] <dogbert17> it seems to be called is-run-repl

[14:39] <dogbert17> using asan seems to scare the bug into hiding

[14:41] <dogbert17> ah, where is timo, he should show up given that you mentioned rr

[14:41] <MasterDuke> does it repro under valgrind?

[14:42] <jnthnwrthngtn> I thought by definition one process can't corrupt the memory of another, at least on any modern OS

[14:44] <nine> As long as you're running on hardware with an MMU (which unless you *know* otherwise, you are)

[14:46] <MasterDuke> hm, right. maybe not corrupting *after* the process has been started, but starting it with a corrupted state?

[14:47] <MasterDuke> iirc the actual code being run in the tests isn't terribly complicated, so any problem is likely in what's being used to execute them

[14:48] <nine> The influence that the starting process has is usually by affecting the environment variables which can affect memory layout which can decide e.g. whether some uninitialized memory contains data that the process stumbles over or not

[14:49] <dogbert17> nine: if you missed it yesterday, here's the backtrace

[14:49] <dogbert17> (gdb) bt

[14:49] <dogbert17> #0  0x00007f9659cb1d6e in MVM_interp_run (tc=0x5632246e8e30, initial_invoke=0x0, invoke_data=0x0, outer_runloop=0xffff) at src/core/interp.c:259

[14:50] <dogbert17> #1  0x000056322343f7fb in main (argc=7, argv=0x7ffe81e46cb8) at src/main.c:307

[18:08] *** reportable6 left
[18:08] *** reportable6 joined
[18:58] *** TheAthlete left
[20:11] *** vrurg_ is now known as vrurg

[21:29] *** brrt joined
[21:29] <brrt> \o

[21:29] <tellable6> 2021-11-08T09:35:43Z #moarvm <Nicholas> brrt good *, brrt

[21:29] <dogbert17> hello brrt

[21:29] <brrt> aw, that's a while ago

[21:29] <brrt> ohai dogbert17

[21:30] <dogbert17> nice seeing you around :)

[21:32] <dogbert17> are you forced to stay inside due to the pandemic?

[21:33] <brrt> ehm, dutch government doesn't force you to stay inside, just to close shops, schools etc.

[21:33] <brrt> thank god though

[21:33] <dogbert17> forced might indeed have been a bit too strong

[21:33] <brrt> I can take a walk outside, and have been able to do so for all of 2020-2021

[21:34] <brrt> well I have colleagues which were so forced!

[21:34] <brrt> unimaginable

[21:35] *** CaCode joined
[21:36] <dogbert17> I suspect other countries will follow suit soon and close shops etc

[21:41] <brrt> I don't know

[21:41] <brrt> I'm done reading tea leaves

[21:45] <dogbert17> does that mean it's time to do some jit hacking?

[21:54] *** brrt left
[22:22] *** CaCode left
[23:22] *** Colt left
[23:23] *** Colt joined
[23:29] *** Colt left
[23:29] *** Colt joined
[23:56] *** [Coke] left
