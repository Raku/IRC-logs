[00:07] *** reportable6 left
[00:16] *** evalable6 joined
[01:01] *** linkable6 left
[01:01] *** linkable6 joined
[01:08] *** reportable6 joined
[01:22] *** frost joined
[01:32] *** frost left
[01:46] *** frost joined
[02:46] *** benchable6 left
[02:46] *** releasable6 left
[02:46] *** nativecallable6 left
[02:46] *** greppable6 left
[02:46] *** evalable6 left
[02:46] *** committable6 left
[02:46] *** notable6 left
[02:46] *** bloatable6 left
[02:46] *** coverable6 left
[02:46] *** tellable6 left
[02:46] *** reportable6 left
[02:46] *** shareable6 left
[02:46] *** bisectable6 left
[02:46] *** unicodable6 left
[02:46] *** statisfiable6 left
[02:46] *** sourceable6 left
[02:46] *** squashable6 left
[02:46] *** quotable6 left
[02:46] *** linkable6 left
[02:47] *** linkable6 joined
[02:47] *** sourceable6 joined
[02:47] *** bisectable6 joined
[02:47] *** shareable6 joined
[02:49] *** squashable6 joined
[02:49] *** bloatable6 joined
[02:49] *** evalable6 joined
[02:49] *** tellable6 joined
[02:49] *** releasable6 joined
[03:47] *** greppable6 joined
[03:47] *** benchable6 joined
[03:48] *** notable6 joined
[03:48] *** statisfiable6 joined
[03:49] *** quotable6 joined
[03:49] *** reportable6 joined
[04:47] *** committable6 joined
[05:30] *** [Coke] left
[05:33] *** [Coke] joined
[05:47] *** unicodable6 joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:47] *** nativecallable6 joined
[09:07] *** committable6 left
[09:07] *** reportable6 left
[09:07] *** unicodable6 left
[09:07] *** notable6 left
[09:07] *** sourceable6 left
[09:07] *** bisectable6 left
[09:07] *** statisfiable6 left
[09:07] *** greppable6 left
[09:07] *** squashable6 left
[09:07] *** linkable6 left
[09:07] *** nativecallable6 left
[09:07] *** quotable6 left
[09:07] *** bloatable6 left
[09:07] *** evalable6 left
[09:07] *** tellable6 left
[09:07] *** releasable6 left
[09:07] *** benchable6 left
[09:07] *** shareable6 left
[09:09] *** linkable6 joined
[09:09] *** quotable6 joined
[09:09] *** reportable6 joined
[09:09] *** sourceable6 joined
[09:09] *** statisfiable6 joined
[09:09] *** bloatable6 joined
[09:09] *** nativecallable6 joined
[09:10] *** bisectable6 joined
[09:10] *** notable6 joined
[09:10] *** committable6 joined
[09:11] *** releasable6 joined
[09:12] <Nicholas> good UGT, #moarvm

[09:17] <nine> good time for greeting

[10:09] *** unicodable6 joined
[10:09] *** evalable6 joined
[10:14] <timo> greetste gemeinsame timer

[10:22] <MasterDuke> collect2: error: ld returned 1 exit status

[10:22] <MasterDuke>  /usr/bin/ld: inst-rakudo.o: undefined reference to symbol 'mi_free'

[10:22] <MasterDuke>  /usr/bin/ld: /usr/lib/libmimalloc.so.2.0: error adding symbols: DSO missing from command line

[10:23] <MasterDuke> could swear i got the same error when switching to gmp

[10:23] <MasterDuke> but don't remember what i did wrong/what the fix was...

[10:25] <MasterDuke> oh, and related to all this. looks like we might need to make cmake a moarvm build dependency. anyone have any objections to that?

[10:26] <timo> it's possible the order of stuff is wrong in the linker list of libraries

[10:38] <timo> or, i dare not say, missing?

[10:44] <Nicholas> cmake is a right bloody pain to build from source

[10:47] <MasterDuke> cmake is what's used to build mimalloc. i assume most of the systems we support have pre-built packages for cmake

[10:48] <Nicholas> several of the gcc compiler farm machines don't, and on some I've given up trying to build cmake from source

[10:48] <Nicholas> it's that bad.

[10:48] <Nicholas> it's not worth it as a *hard* dependency for mimalloc

[11:01] <timo> wow

[11:02] <timo> we use the gcc compiler farm machines for platforms we dont have any of ourselves?

[11:05] <Nicholas> for some value of "we"

[11:07] <timo> no u

[11:09] *** shareable6 joined
[11:09] *** squashable6 joined
[11:11] *** sena_kun joined
[11:17] <Nicholas> but to be clear, by "hard" I meant - if Configure.pl detects cmake then using mimalloc instead of regular malloc sounds like a win. But yes, that's more complex.

[12:08] *** reportable6 left
[12:09] *** benchable6 joined
[12:10] *** tellable6 joined
[12:11] *** reportable6 joined
[12:35] *** frost left
[14:04] *** linkable6 left
[14:04] *** evalable6 left
[15:05] *** linkable6 joined
[15:48] *** coverable6 joined
[16:07] *** evalable6 joined
[16:10] *** greppable6 joined
[17:38] *** discord-raku-bot left
[17:39] *** discord-raku-bot joined
[17:43] *** discord-raku-bot left
[17:43] *** discord-raku-bot joined
[18:08] *** reportable6 left
[18:08] *** reportable6 joined
[19:07] *** sena_kun left
[19:36] *** squashable6 left
[19:36] *** squashable6 joined
[20:13] *** [Coke] left
[20:16] *** [Coke] joined
[21:11] <MasterDuke> why do i pick these project that require knowledge i don't have? i don't know anything about linking, compiling c programs, etc. now moarvm builds and seems to be linking against the the 3rdparty mimalloc, but rakudo running compilation dies with `/usr/bin/ld: inst-rakudo.o: in function `MVM_malloc':

[21:11] <MasterDuke> *rakudo runner

[21:12] <MasterDuke> `/home/dan/Source/perl6/install/include/moar/core/alloc.h:2: undefined reference to `mi_malloc'`

[21:48] <nine> MasterDuke: because you can hardly learn anything from doing things you already know everything about

[21:48] <nine> MasterDuke: rakudo's build system also needs to link mimalloc

[21:49] <MasterDuke> yeah, i thought it picked up the stuff from moarvm's configuration

[21:51] <MasterDuke> e.g., rakudo's Makefile does have $PREFIX/include/mimalloc.h already listed in its includes

[21:53] <nine> But what about -lmimalloc or something like that?

[21:54] <nine> Could be you just missed a spot in MoarVM's configuration system that'd be supposed to forward this information.

[21:54] <nine> Gotta go, but FWIW build systems are just the worst

[21:54] <MasterDuke> what's throwing me off is that i'm looking at the gmp pr and mirroring the changed i made there (where i think i saw that same error before and then ended up with a fix)

[21:55] <japhb> MasterDuke: See #raku-dev -- I think the ?? !! warning you added might be over-conservative; can you take a look?

[21:55] <MasterDuke> i added -lmimalloc originally, but that just links to the "system" mimalloc, we want to link to the bundled libmimalloc.a

[21:55] *** linkable6 left
[21:57] *** linkable6 joined
[22:27] <japhb> Actually, should say this here:

[22:27] <japhb> Lots of pointer size and signedness warnings building MoarVM on RPi4 + Raspbian (32-bit)

[22:28] <moon-child> signedness is probably because char is unsigned

[22:29] <japhb> moon-child: Nah, comparisons between 'int' and 'MVMuint32'

[22:29] <moon-child> ah, huh

[22:30] <japhb> e.g. callstack.c: if (region->alloc_limit - region->alloc < diff)

