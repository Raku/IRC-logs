[00:24] *** lucasb left
[07:02] <nwc10> good *, #moarvm 

[07:35] *** elcaro left
[07:37] *** elcaro joined
[07:58] *** domidumont joined
[08:45] <MasterDuke> dogbert17: fwiw, i can't repro at moarvm and nqp HEAD

[08:57] <nine> me neither

[09:02] <dogbert17> oops

[09:03] <dogbert17> Welcome to Rakudo(tm) v2020.12-39-g53da2061f. Implementing the Raku(tm) programming language v6.d. Built on MoarVM version 2020.12-56-g1e09c82b5.

[09:06] *** Altai-man joined
[09:11] * dogbert17 nukes rakudo install and retries

[09:11] <Geth> ¦ MoarVM/master: 27 commits pushed by (Stefan Seifert)++, niner++

[09:11] <Geth> ¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/1e09c82b5f4f...a5b8a815f97f

[09:22] *** dogbert11 joined
[09:25] <dogbert11> the errors remain, how odd

[09:26] <nine> dogbert11: do you have an idea about what goes wrong?

[09:28] <dogbert11> weren't there changes made to spawnprocasync recently

[09:29] <Altai-man> what's the matter, is it not safe to bump now?

[09:29] <nine> commit 22f1038a952a89d93dd5389afe9b2fcd88397e54

[09:30] <dogbert11> prove -j0 -r -v --exec nqp t/nqp/111-spawnprocasync.t

[09:30] <dogbert11> not ok 2 - got the correct output on stdout

[09:36] <dogbert11> fails on my RPi 4 as well, the plot thickens

[09:37] <dogbert11> nine, MasterDuke: are you running 'This is nqp version 2020.12-4-gd65a8c109 built on MoarVM version 2020.12-83-ga5b8a815f' ?

[09:38] <MasterDuke> This is nqp version 2020.12-7-gf7a0081b2 built on MoarVM version 2020.12-83-ga5b8a815f

[09:40] <dogbert11> ah, you're running a newer nqp

[09:40] <MasterDuke> i think you're missing the merges of PRs 689 and 690

[09:40] <dogbert11> perhaps Altai-man should bump then :)

[09:43] <dogbert11> MasterDuke: it was the missing merges so false alarm

[09:49] *** brrt joined
[10:10] <dogbert11> hello brrt

[10:11] <dogbert11> nine: still satisfied with your new monster machine?

[10:20] *** sena_kun joined
[10:22] *** Altai-man left
[10:22] <brrt> hello dogbert11

[11:11] <nine> dogbert11: absolutely! Works like a charm. And as a bonus I finally have reliable sleep mode on my desktop

[11:40] *** zakharyas joined
[11:41] *** brrt left
[11:56] <jnthn> nine: A threadripper, or something else?

[11:56] <tellable6> 2021-01-10T20:51:01Z #raku-dev <Xliff> jnthn When NativeCall loads a dynamic library, will it also load its prerequisites?

[11:56] <tellable6> 2021-01-10T20:59:46Z #raku-dev <nine> jnthn: I answered Xliff's question about dynamic libraries

[11:56] <nine> jnthn: Ryzen 9 5950X, 16 cores/32 threads. Gets a spectest done in ~77s

[11:57] <jnthn> nine: Wowser. How is its single-core performance?

[11:57] <nine> CORE.c stage parse in about 30s

[11:57] <jnthn> (For example, building CORE.setting)

[11:57] <jnthn> hah, we thought of the same benchmark :D

[11:57] <nine> it's what matters :D

[11:58] <jnthn> Given how the pandemic seems to last for darn ever, I'm thinking to get something better for working at home.

[11:58] <jnthn> Though that beats my machine at the office handily too

[12:00] <jnthn> I want to get back to RakuAST hacking soon but it's quite painful on my current home box :/

[12:00] <nine> It's even slowed down a bit because I only have DDR3000 memory. Though I haven't tested yet how much this impacts the important workloads

[12:01] <sena_kun> jnthn, latest ryzen plus 36000Mhz memory and you're ready.

[12:02] <jnthn> Is there one too many 0 in that number? :)

[12:02] <MasterDuke> unfortunately https://www.phoronix.com/scan.php?page=article&item=amd-3900x-ram&num=1 doesn't have any code compilation benchmarks

[12:02] <sena_kun> jnthn, yesh

[12:02] <nine> well, an order of magnitude faster has never hurt anyone ;)

[12:05] <MasterDuke> https://openbenchmarking.org/result/2007066-NE-3900XTMEM61&sgm=1&stis=Y29tcGlsYXRpb24&sgm=1 doesn't show much of a difference in compiling the kernel or llvm

[12:06] <MasterDuke> but it's zen2, not zen3

[12:07] <nine> Also the more cores you have, the more contention is around those to memory channels. And a C compiler may still have different memory usage than rakudo

[12:07] <sena_kun> "much" - no, but there is a difference between 3000 and 3600 in most tasks and if you can throw money at 5950X, getting some ram is probably not an issue.

[12:41] *** zakharyas left
[13:19] *** brrt joined
[14:00] *** zakharyas joined
[14:19] *** Altai-man joined
[14:21] *** sena_kun left
[14:22] *** lucasb joined
[16:09] *** brrt` joined
[16:11] *** brrt left
[17:26] *** Xliff joined
[17:26] <Xliff> Getting SEGV from rakudo, but stacktrace points at MoarVM

[17:26] <Xliff> MVM_spesh_log_invoke_target (tc=0x55555555a160, invoke_target=0x0, was_multi=0) at src/spesh/log.c:194

[17:26] <Xliff> 194         if (REPR(invoke_target)->ID == MVM_REPR_ID_MVMCode && IS_CONCRETE(invoke_target)) {

[17:26] <Xliff> There is NO golf, as yet.

[17:27] *** brrt` left
[17:59] <timotimo> but is there a corsa?

[18:11] <lizmat> you mean in ID.3 ?

[18:13] <timotimo> hm?

[18:14] <timotimo> Xliff: that smells like memory corruption of some kind; MVM_spesh_log_invoke_target would record what some invoke instruction actually invoked

[18:15] <timotimo> i haven't checked, but i imagine invoking a literal null should have caused an exception earlier than that

[18:16] <lizmat> timotimo: the modern successor of the VW Golf :-)

[18:18] <timotimo> aah

[18:18] *** domidumont left
[18:20] *** sena_kun joined
[18:21] *** Altai-man left
[18:30] <Xliff> timotimo: I think it has something to do with traits and dynamic variables. You will have to wait for the gist. I still have things to do for $dayJob before I can even start on that.

[18:30] <Xliff> Thanks for the comment, though.

[19:19] *** sena_kun left
[19:23] *** zakharyas left
[19:29] *** sena_kun joined
[20:08] <lizmat> and the first Rakudo Weekly News of 2021 hits the Net: https://rakudoweekly.blog/2021/01/11/2021-01-02-so-much-new-stuff/

[20:13] <nine> lizmat++ # wow, there's really much going on

[20:14] <lizmat> yeah, I was pleasantly surprised

[20:15] <nine> It's easy to miss when one just hangs around here. Funny, initially I read the weekly (way back then) to follow what happens in core development. Now I follow it to read what happens outside the core :)

[20:27] *** MasterDuke left
[20:36] *** brrt` joined
[20:37] <jnthn> lizmat++, and yes, really lots going on

[20:38] <brrt`> lizmat++ :-)

[21:06] *** brrt` left
[21:09] *** zakharyas joined
[21:27] *** jnthn joined
[22:16] *** sena_kun left
[22:25] *** zakharyas left
