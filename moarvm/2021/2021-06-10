[00:02] *** reportable6 left
[00:04] *** reportable6 joined
[01:34] *** bloatable6 left
[01:34] *** committable6 left
[01:34] *** notable6 left
[01:34] *** linkable6 left
[01:34] *** greppable6 left
[01:34] *** squashable6 left
[01:34] *** evalable6 left
[01:34] *** reportable6 left
[01:34] *** nativecallable6 left
[01:34] *** benchable6 left
[01:34] *** releasable6 left
[01:34] *** shareable6 left
[01:34] *** sourceable6 left
[01:34] *** coverable6 left
[01:34] *** bisectable6 left
[01:34] *** tellable6 left
[01:34] *** unicodable6 left
[01:34] *** statisfiable6 left
[01:34] *** quotable6 left
[01:35] *** quotable6 joined
[01:35] *** sourceable6 joined
[01:35] *** bisectable6 joined
[01:35] *** committable6 joined
[01:35] *** unicodable6 joined
[01:35] *** linkable6 joined
[01:35] *** squashable6 joined
[01:35] *** benchable6 joined
[01:35] *** statisfiable6 joined
[01:36] *** coverable6 joined
[01:36] *** reportable6 joined
[01:36] *** releasable6 joined
[01:36] *** bloatable6 joined
[01:36] *** evalable6 joined
[01:36] *** notable6 joined
[01:37] *** shareable6 joined
[01:37] *** nativecallable6 joined
[01:38] *** greppable6 joined
[01:38] *** tellable6 joined
[02:17] *** frost joined
[03:17] *** coverable6 left
[03:17] *** squashable6 left
[03:17] *** bisectable6 left
[03:17] *** releasable6 left
[03:17] *** greppable6 left
[03:17] *** committable6 left
[03:17] *** evalable6 left
[03:17] *** quotable6 left
[03:17] *** reportable6 left
[03:17] *** sourceable6 left
[03:17] *** notable6 left
[03:17] *** shareable6 left
[03:17] *** tellable6 left
[03:17] *** bloatable6 left
[03:17] *** linkable6 left
[03:17] *** unicodable6 left
[03:17] *** statisfiable6 left
[03:17] *** nativecallable6 left
[03:17] *** benchable6 left
[03:17] *** reportable6 joined
[03:17] *** notable6 joined
[03:17] *** tellable6 joined
[03:18] *** committable6 joined
[03:18] *** shareable6 joined
[03:18] *** linkable6 joined
[03:18] *** releasable6 joined
[03:18] *** benchable6 joined
[03:18] *** statisfiable6 joined
[03:19] *** bloatable6 joined
[03:19] *** squashable6 joined
[03:19] *** coverable6 joined
[03:19] *** quotable6 joined
[03:19] *** sourceable6 joined
[03:19] *** nativecallable6 joined
[03:19] *** bisectable6 joined
[03:19] *** unicodable6 joined
[03:20] *** greppable6 joined
[03:20] *** evalable6 joined
[04:34] *** squashable6 left
[04:34] *** squashable6 joined
[04:47] *** AlexDaniel left
[04:48] *** AlexDaniel joined
[06:04] *** reportable6 left
[06:06] *** reportable6 joined
[08:49] *** patrickb joined
[09:57] *** patrickb left
[10:21] *** sena_kun joined
[10:28] *** frost left
[11:40] *** patrickb joined
[12:00] *** frost joined
[12:03] *** reportable6 left
[12:04] *** reportable6 joined
[13:21] *** patrickb left
[14:00] *** sena_kun left
[14:11] *** sena_kun joined
[14:31] *** frost left
[16:33] *** japhb left
[18:02] *** reportable6 left
[18:05] *** reportable6 joined
[18:05] <Geth> ¦ MoarVM: 0d63ddadf3 | (Stefan Seifert)++ | src/6model/serialization.c

[18:05] <Geth> ¦ MoarVM: Set sc.idx during deserialization to avoid costly lookup later

[18:05] <Geth> ¦ MoarVM: 

[18:05] <Geth> ¦ MoarVM: When we deserialize a collectable, we actually already know which SC it

[18:05] <Geth> ¦ MoarVM: belongs to and the index in this SC. So far we've already told the the

[18:05] <Geth> ¦ MoarVM: collectable about the SC, but not about the index. So the first call to

[18:05] <Geth> ¦ MoarVM: MVM_sc_find_object_idx had to do a linear search of the SC to find the index.

[18:05] <Geth> ¦ MoarVM: Fix by setting the idx field in the collectable header on deserialization.

[18:05] <Geth> ¦ MoarVM: 

[18:05] <Geth> ¦ MoarVM: This brings installation of rakudo core modules down from 7.89s to 7.21s

[18:05] <Geth> ¦ MoarVM: and reduces CPU time of rakudo make test from 138.98s to 134.27s.

[18:05] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0d63ddadf3

[18:05] <Geth> ¦ MoarVM: 0a62f0c6a0 | niner++ (committed using GitHub Web editor) | src/6model/serialization.c

[18:05] <Geth> ¦ MoarVM: Merge pull request #1506 from MoarVM/set_sc_idx_during_deserialization

[18:05] <Geth> ¦ MoarVM: 

[18:05] <Geth> ¦ MoarVM: Set sc.idx during deserialization to avoid costly lookup later

[18:05] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0a62f0c6a0

[18:55] <lizmat> time for a bump ?

[18:58] <nine> Sure :) Let's give this some exposure

[18:59] <lizmat> ok, will do

[19:20] <MasterDuke34> merge the rakudo pr also?

[19:32] <lizmat> MasterDuke34 which one?

[19:32] <MasterDuke34> https://github.com/rakudo/rakudo/pull/4393

[19:33] <lizmat> done

[19:36] *** patrickb joined
[21:19] *** patrickb left
[21:31] *** linkable6 left
[21:32] *** linkable6 joined
[22:21] *** linkable6 left
[22:23] *** linkable6 joined
[22:55] *** sena_kun left
[23:00] *** samcv left
[23:03] *** samcv joined
