[00:02] *** reportable6 left
[00:04] *** reportable6 joined
[00:24] *** jgaz left
[01:26] *** MasterDuke joined
[03:05] *** evalable6 left
[03:05] *** linkable6 left
[03:06] *** evalable6 joined
[03:07] *** linkable6 joined
[04:34] *** evalable6 left
[04:34] *** linkable6 left
[04:34] *** linkable6 joined
[04:34] *** evalable6 joined
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[07:03] *** linkable6 left
[07:04] *** linkable6 joined
[08:02] <nine> dogbert17: ah, yes, this cannot really work as such: MVM_args_slurpy_positional(tc, &tc->cur_frame->params, GET_UI16(cur_op, 2))
[08:03] <nine> Since cur_frame could be moved by the GC, that pointer into the structure can get outdated
[08:19] <Geth> ¦ MoarVM/new-disp: 539991e410 | (Stefan Seifert)++ | 4 files
[08:19] <Geth> ¦ MoarVM/new-disp: Fix ctx pointing at fromspace in MVM_args_slurpy_positional
[08:19] <Geth> ¦ MoarVM/new-disp: 
[08:19] <Geth> ¦ MoarVM/new-disp: tc->cur_frame can be moved by the GC, so a pointer into this structure can get
[08:19] <Geth> ¦ MoarVM/new-disp: outdated which is what happens when run with GC_DEBUG=3. Since there are only
[08:19] <Geth> ¦ MoarVM/new-disp: two callers anyway, make the ctx arg optional and fall back to
[08:19] <Geth> ¦ MoarVM/new-disp: &tc->cur_frame->params if a NULL was passed. This way we always get a fresh
[08:19] <Geth> ¦ MoarVM/new-disp: pointer.
[08:19] <Geth> ¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/539991e410
[08:45] *** linkable6 left
[08:45] *** evalable6 left
[08:46] *** evalable6 joined
[08:48] *** linkable6 joined
[10:00] *** squashable6 left
[10:03] *** squashable6 joined
[11:03] *** linkable6 left
[11:05] *** linkable6 joined
[11:22] <dogbert17> nine++, that was fast :)
[11:23] <dogbert17> there seems to be at least one more GC related bug lurking somewhere in the new-disp branch
[11:27] <dogbert17> here's what it looks like: https://gist.github.com/dogbert17/e85f9f02c49ea793355006fe9dfa68c9
[11:36] <dogbert17> hmm, there's a function called MVM_args_slurpy_named in the stacktrace
[12:02] *** reportable6 left
[12:05] *** reportable6 joined
[12:20] *** lizmat_ joined
[12:21] *** cognominal_ joined
[12:22] *** TempIRCLogger left
[12:23] *** lizmat left
[12:25] *** cognominal left
[12:27] *** lizmat_ left
[12:28] *** lizmat joined
[12:41] <nine> Could be a similar thing
[12:41] <nine> Didn't have time to check. Visiting parents
[14:00] <dogbert17>  Have a nice visit.
[17:14] <Geth> ¦ MoarVM: coke++ created pull request #1515: Switch from freenode to libera
[17:14] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1515
[17:48] <Geth> ¦ MoarVM: a0d05b4a81 | Coke++ | 4 files
[17:48] <Geth> ¦ MoarVM: Switch from freenode to libera
[17:48] <Geth> ¦ MoarVM: 
[17:48] <Geth> ¦ MoarVM: * remove unhelpful comment
[17:48] <Geth> ¦ MoarVM: * yes, macports is also moved to libera
[17:48] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a0d05b4a81
[17:48] <Geth> ¦ MoarVM: fb5d26a7e3 | MasterDuke17++ (committed using GitHub Web editor) | 4 files
[17:48] <Geth> ¦ MoarVM: Merge pull request #1515 from coke/libera
[17:48] <Geth> ¦ MoarVM: 
[17:48] <Geth> ¦ MoarVM: Switch from freenode to libera
[17:48] <Geth> ¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/fb5d26a7e3
[18:03] *** reportable6 left
[18:03] *** reportable6 joined
[18:17] *** RakuIRCLogger left
[18:18] *** jgaz joined
[18:36] *** jgaz left
[18:50] <[Coke]> MasterDuke++ thanks
[18:54] <MasterDuke> [Coke]++ i was surprised when i saw the pr, i thought it had been done already
[18:54] <tellable6> 2021-07-17T23:05:04Z #raku <lizmat> MasterDuke: thanks for the worries, though  :-)
[18:55] <[Coke]> ... I was suprised when I went to github and saw it wasn't also! :)
[18:55] <[Coke]> afk
[19:20] <nine> dogbert17: this is interesting! Apparently that MVM_args_slurpy_positional issue is not particular to new-disp. In https://github.com/MoarVM/MoarVM/commit/e0bc6e2f1c I already fixed the same issue in MVM_args_slurpy_named
[19:20] <nine> That's 2 years ago
[19:23] <dogbert17> a mystery
[19:23] <nine> In so far as it's surprising that we did not hit that MVM_args_slurpy_positional issue sooner. And that it came up so easily now
[19:23] <dogbert17> aha
[19:28] <nine> Still there's also the "Unhandled exception: Can only use manipulate a capture known in this dispatch" that comes up now as soon as GC_DEBUG=3 is active
[19:39] <dogbert17> so we have 2-3 bugs at the very least 
[19:43] <timo> quite possibly the same kind of missing mvmroot in one of the boot dispatchers as the one the other day
[19:44] <nine> got it
[19:45] <Geth> ¦ MoarVM/new-disp: 0c8538cac4 | (Stefan Seifert)++ | src/disp/boot.c
[19:45] <Geth> ¦ MoarVM/new-disp: Fix possible access to fromspace in boot_code
[19:45] <Geth> ¦ MoarVM/new-disp: 
[19:45] <Geth> ¦ MoarVM/new-disp: We need to protect the args_capture pointer to the newly allocated capture
[19:45] <Geth> ¦ MoarVM/new-disp: because MVM_disp_program_record_track_arg will allocate.
[19:45] <Geth> ¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/0c8538cac4
[19:46] <nine> With this t/01-sanity/01-literals.t now passes with GC_DEBUG=3
[19:52] <dogbert17> ah, the one timo found yesterday
[20:10] <nine> Oh boy, even with the 16 core Zen 3 chip, make test with GC_DEBUG=3 takes forever
[20:11] <nine> Good news is that so far that's 21 files passing and no failures or segfaults
[20:16] <dogbert17> impressive
[21:48] *** Geth left
[21:49] *** lizmat left
[21:50] *** lizmat joined
[22:25] *** squashable6 left
[22:27] *** squashable6 joined
[22:35] *** squashable6 left
[22:37] *** squashable6 joined
[22:38] *** squashable6 left
[22:39] *** squashable6 joined
