[00:03] *** vrurg left
[00:03] *** Kaiepi left
[00:04] *** mtj_ left
[00:04] *** Altreus left
[00:06] *** mtj_ joined
[00:06] *** Altreus joined
[00:06] *** Kaiepi joined
[00:06] *** vrurg joined
[00:09] *** Kaeipi joined
[00:10] *** Kaiepi left
[00:19] *** Kaeipi left
[00:19] *** Kaeipi joined
[02:23] *** lucasb left
[05:45] *** hungrydonkey joined
[05:47] *** hungrydonkey left
[05:54] *** frost60 joined
[05:56] *** frost60 left
[05:59] *** nevore joined
[06:02] *** nevore left
[07:39] *** patrickb joined
[07:45] <nwc10> good *, #moarvm 

[07:59] <nine> TGIF, #moarvm

[08:32] <Geth> Â¦ MoarVM: f7b4e490f6 | (Patrick BÃ¶ker)++ | 6 files

[08:32] <Geth> Â¦ MoarVM: Switch spawnprocasync to use a separate arg for the program name

[08:32] <Geth> Â¦ MoarVM: 

[08:32] <Geth> Â¦ MoarVM: That's a lot more obvious than putting the program name at the start of the

[08:32] <Geth> Â¦ MoarVM: args list.

[08:32] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f7b4e490f6

[08:32] <Geth> Â¦ MoarVM: 2d9899c726 | (Patrick BÃ¶ker)++ (committed using GitHub Web editor) | 6 files

[08:32] <Geth> Â¦ MoarVM: Merge pull request #1416 from patrickbkr/spawnprocasync-prog-arg

[08:32] <Geth> Â¦ MoarVM: 

[08:32] <Geth> Â¦ MoarVM: Switch spawnprocasync to use a separate arg for the program name

[08:32] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2d9899c726

[08:47] *** sena_kun joined
[08:57] *** travis-ci joined
[08:57] <travis-ci> MoarVM build failed. Patrick BÃ¶ker 'Merge pull request #1416 from patrickbkr/spawnprocasync-prog-arg

[08:57] <travis-ci> https://travis-ci.org/MoarVM/MoarVM/builds/754595860 https://github.com/MoarVM/MoarVM/compare/a5b8a815f97f...2d9899c726a8

[08:57] *** travis-ci left
[09:02] *** zakharyas joined
[09:19] *** domidumont joined
[09:36] *** patrickb left
[09:38] *** patrickb joined
[10:34] <jnthn> moarning o/

[10:34] <tellable6> 2021-01-12T23:50:00Z #raku <Xliff> jnthn Is there any way to introspect the symbol table of a template during render()?

[10:38] *** evalable6 left
[10:38] <jnthn> .tell Xliff I assume you're talking about Cro::WebApp? In which case a) no, b) there's a #cro that's good for such questions :)

[10:38] <tellable6> jnthn, I'll pass your message to Xliff

[10:38] *** evalable6 joined
[10:42] <nwc10> \o

[11:25] *** patrickb left
[11:25] *** patrickb joined
[11:30] *** Altai-man joined
[11:32] *** sena_kun left
[12:10] *** zakharyas left
[12:47] *** patrickb left
[12:49] *** patrickb joined
[12:52] *** cog joined
[12:54] *** cog_ left
[14:28] *** lucasb joined
[14:39] <nine> For those interested in these topics: I tried finding out if getting faster memory to accompany my 16 core CPU was worth it. Since I don't have faster memory to test with, instead I disabled XMP in the BIOS, turning my memory down from 3000MHz to 2150MHz.

[14:40] <nine> The effect on CORE.c stage parse is....nonexistent. In a best-of-3-runs comparison we're talking 28.681 vs. 28.731s, which is very well within noise.

[14:41] <nine> Spectest however clearly profits from faster memory. Here we are talking about 76 vs. 89s (again best-of-3-runs)

[14:41] <nine> So buying faster memory will in all likelyhood not reduce rakudo's build time. I could get faster spectests though (maybe ~70s?).

[14:42] <vrurg> nine: I think this is could be explained by spectesting using concurrency heavily while compilation is done mostly single-thread.

[14:43] <nine> As to why there is such a large discrepancy between single- and multithreaded results, I think the huge 64 MiB of L3 cache makes memory speed a non-issue during the build, but with 35 processes competing for that cache, memory speed gains in importance.

[14:44] *** squashable6 left
[14:47] *** squashable6 joined
[14:49] *** MasterDuke left
[14:55] *** zakharyas joined
[15:31] *** sena_kun joined
[15:32] *** Altai-man left
[15:33] *** patrickb left
[15:38] *** patrickb joined
[15:41] *** patrickb left
[15:48] <jnthn> nine: That's interesting to know. I'm getting a new machine soon, and was debating 3600 MHz vs 4000 MHz RAM, and all the reviews I could find suggested it wasn't really worth it. I guess it's about half the difference you tried to observe (and there improvement is non-linear anyway) though...

[17:32] *** domidumont left
[18:03] *** patrickb joined
[19:30] *** Altai-man joined
[19:32] *** sena_kun left
[20:00] *** patrickb left
[20:05] *** MasterDuke joined
[20:21] *** MasterDuke left
[20:57] *** Altai-man left
[20:57] *** zakharyas left
[21:09] *** MasterDuke joined
[23:03] *** rypervenche left
[23:05] *** rypervenche joined
[23:20] *** moon-child left
[23:22] *** moon-child joined
