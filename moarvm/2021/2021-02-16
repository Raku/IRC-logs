[00:00] *** dogbert17 joined
[00:02] *** dogbert11 left
[01:51] *** dogbert17 left
[01:51] *** dogbert17 joined
[02:26] *** lucasb left
[06:16] *** vrurg left
[06:17] *** vrurg joined
[06:19] *** cog joined
[06:19] *** cog__ left
[06:53] *** cog_ joined
[06:56] *** cog left
[07:50] *** squashable6 left
[07:51] *** squashable6 joined
[07:56] <nwc10> good *, #moarvm 

[08:12] <MasterDuke> i would love to know why all of a sudden none of my `if (spesh_cand->body.discarded) { ...}` are hitting...

[08:18] <MasterDuke> ha, ugh. it's because `cand->body.discarded = 1;` was commented out in MVM_spesh_candidate_discard_one. damn this switching branches and vim reloading files

[08:22] <MasterDuke> ok. now the print in MVM_frame_invoke happens. however, just to see what would happen i added a print if discarded in all the sp_fastinvoke_* ops in interp.c and they never hit

[08:27] <MasterDuke> wow. if i run it normally, `if (spesh_cand && spesh_cand->body.discarded) { fprintf(stderr, "oops, discarded\n"); spesh_cand = NULL; }` is hit (because a later `if (spesh_cand->body.discarded) { ... }` isn't being hit), but that print never happens. if i run it in gdb the print does happen

[08:29] <MasterDuke> and this takes 5s to run, could the prints really be buffered that long that they get discarded on exit?

[08:30] <MasterDuke> still doesn't print if i change it to stdout

[08:40] <nine> MasterDuke: you could add an fflush(stderr) after the fprintf(stderr)

[08:42] <MasterDuke> nope, no prints

[08:45] <MasterDuke> recompiling with --optimize=0 didn't change anything

[08:47] <MasterDuke> however, then recompiled without the --optimize=0 and now the prints appear

[08:48] <MasterDuke> removed the fflush, still appearing now

[08:53] *** zakharyas joined
[08:53] <MasterDuke> assuming that was just some weird compiling/building mixup, now i'd like to figure out a way for the 688k deopts to be prevented

[10:21] *** Kaiepi left
[10:23] <jnthn> I assume you ran without JIT, otherwise the things in interp.c won't happen

[10:24] <MasterDuke> yeah. i get the 688k deopts either way, but running with MVM_JIT_DISABLE=1 now for ease of testing

[10:24] *** Kaiepi joined
[10:42] <MasterDuke> any suggestions? i can set the spesh_cand to NULL (either in interp.c or in frame.c), but that's not preventing the deopts

[12:56] *** zakharyas left
[14:46] *** zakharyas joined
[15:33] *** leont joined
[17:16] *** domidumont joined
[18:03] *** patrickb joined
[19:04] *** zakharyas left
[19:23] *** domidumont left
[19:42] <MasterDuke> i was curious about the consistent slowdown on my branch, here's what perf has to say for `MVM_JIT_DISABLE=1 MVM_SPESH_BLOCKING=1 raku -e 'my $r := "a" .. "za"; my @a = $r[^$r.elems]; say now - INIT now'`

[19:42] <MasterDuke> https://gist.github.com/MasterDuke17/9116a80e84871e011b993f0a26501b8b

[19:47] <MasterDuke> and what do you know, MVM_spesh_arg_guard_run is called 637934 times more on my branch...

[21:21] *** patrickb left
[22:24] <MasterDuke> hm, looks like a lot of the MVM_frame_invoke calls are from invoke_o, not sp_fastinvoke_o. those don't pass a spesh_cand, so it's got to look one up each time. but not sure why it's invoke_o...

[22:30] *** japhb joined
[22:48] <jnthn> MasterDuke: Is there any evidence that it produces a new specialization after the other one is discarded?

[22:48] <jnthn> invoke_o is the unoptimized path

[22:49] <jnthn> I think in the static frame (or the static frame spesh data structure that hangs off it) there is also a number of times that we invoked it and did spesh logging for it; that count may need clearing for it to log and specialize again

[22:49] <MasterDuke> in a spesh log i'm pretty sure i saw a specialization, then a removal, then another specialization, but let me confirm

[22:50] <jnthn> OK

[22:51] <jnthn> Not really at the keyboard at the moment, just wondering by...but probably will again a little later on too :)

[22:52] <MasterDuke> yep. observed type specialization, removal because of too many deopts, observed type specialization

[22:57] <MasterDuke> spesh_entries_recorded?

[23:43] <MasterDuke> off to sleep, perchance to dream...

[23:47] *** dogbert11 joined
[23:51] *** dogbert17 left
