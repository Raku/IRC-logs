[00:02] *** reportable6 left
[00:03] *** reportable6 joined
[00:58] *** Kaiepi left
[00:58] *** Kaipi joined
[01:05] *** Kaiepi joined
[01:05] *** Kaipi left
[01:36] *** Kaiepi left
[01:39] *** Kaiepi joined
[01:59] *** squashable6 left
[02:00] *** squashable6 joined
[02:03] *** frost joined
[03:58] *** evalable6 left
[03:58] *** linkable6 left
[03:59] *** evalable6 joined
[04:01] *** linkable6 joined
[06:03] *** reportable6 left
[06:04] *** reportable6 joined
[06:16] <Geth> Â¦ MoarVM: a4d5949202 | (Stefan Seifert)++ | src/spesh/stats.c

[06:16] <Geth> Â¦ MoarVM: Fix memory corruption by accessing freed spesh stats.

[06:16] <Geth> Â¦ MoarVM: 

[06:16] <Geth> Â¦ MoarVM: When cleaning up spesh stats that didn't get updated for a while, we free the

[06:16] <Geth> Â¦ MoarVM: MVMSpeshStats structure and remove the reference from the MVMStaticFrameSpesh

[06:16] <Geth> Â¦ MoarVM: object holding it. It may still be referenced from a MVMSpeshSimStackFrame

[06:16] <Geth> Â¦ MoarVM: however and when we continue processing this sim stack, we access some random

[06:16] <Geth> Â¦ MoarVM: memory.

[06:16] <Geth> Â¦ MoarVM: 

[06:16] <Geth> Â¦ MoarVM: Look through all tc's spesh_sim_stacks for frames still referencing the

[06:16] <Geth> Â¦ MoarVM: MVMSpeshStats and just not free it if we find one.

[06:16] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/a4d5949202

[06:16] <Geth> Â¦ MoarVM: 0d3fc79e59 | niner++ (committed using GitHub Web editor) | src/spesh/stats.c

[06:16] <Geth> Â¦ MoarVM: Merge pull request #1511 from MoarVM/fix_spesh_stats_corruption

[06:16] <Geth> Â¦ MoarVM: 

[06:16] <Geth> Â¦ MoarVM: Fix memory corruption by accessing freed spesh stats.

[06:16] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/0d3fc79e59

[06:17] <Geth> Â¦ MoarVM: 21f8caddb2 | (Stefan Seifert)++ | src/6model/serialization.c

[06:17] <Geth> Â¦ MoarVM: Fix "Collectable in a gen2 freelist accessed" when deserializing a method cache

[06:17] <Geth> Â¦ MoarVM: 

[06:17] <Geth> Â¦ MoarVM: We deserialize the method cache hash itself. Then we run the work_loop to

[06:17] <Geth> Â¦ MoarVM: deserialize its entries. This may trigger GC. Since the cache at that point is

[06:17] <Geth> Â¦ MoarVM: not referenced by any root, we free it.

[06:17] <Geth> Â¦ MoarVM: 

[06:17] <Geth> Â¦ MoarVM: Serialization and deserialization runs with allocation in gen2 enabled, so we

[06:17] <Geth> Â¦ MoarVM: <â€¦commit message has 6 more linesâ€¦>

[06:17] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/21f8caddb2

[06:17] <Geth> Â¦ MoarVM: d7a07bf321 | (Stefan Seifert)++ | src/6model/serialization.c

[06:17] <Geth> Â¦ MoarVM: Fix possible acces to a freed SC during deserialization

[06:17] <Geth> Â¦ MoarVM: 

[06:17] <Geth> Â¦ MoarVM: While deserialized objects get allocated in gen2 directly, the same is not

[06:17] <Geth> Â¦ MoarVM: necessarily true for serialization contexts themselves. And having the

[06:17] <Geth> Â¦ MoarVM: allocate in gen2 directly flag active does not prevent GC runs in all cases

[06:17] <Geth> Â¦ MoarVM: (a different thread may allocate and trigger the GC). So when running the

[06:17] <Geth> Â¦ MoarVM: deserialization work loop, we need to take care to root the sc pointers

[06:17] <Geth> Â¦ MoarVM: that we continue to use later on.

[06:17] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/d7a07bf321

[06:17] <Geth> Â¦ MoarVM: 65ed1ff246 | niner++ (committed using GitHub Web editor) | src/6model/serialization.c

[06:17] <Geth> Â¦ MoarVM: Merge pull request #1512 from MoarVM/fix_serialization_gc_issues

[06:17] <Geth> Â¦ MoarVM: 

[06:17] <Geth> Â¦ MoarVM: Fix serialization gc issues

[06:17] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/65ed1ff246

[06:19] <Geth> Â¦ MoarVM: ab2a01001f | (Tom Browder)++ | src/profiler/heapsnapshot.c

[06:19] <Geth> Â¦ MoarVM: Simplify preprocessor code

[06:19] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/ab2a01001f

[06:19] <Geth> Â¦ MoarVM: f8d5f30021 | (Tom Browder)++ | src/profiler/heapsnapshot.c

[06:19] <Geth> Â¦ MoarVM: Note only the gcc compiler is the one generating the warning

[06:19] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/f8d5f30021

[06:19] <Geth> Â¦ MoarVM: 142f91176e | niner++ (committed using GitHub Web editor) | src/profiler/heapsnapshot.c

[06:19] <Geth> Â¦ MoarVM: Merge pull request #1503 from tbrowder/fix-heapsnapshot-warnings

[06:19] <Geth> Â¦ MoarVM: 

[06:19] <Geth> Â¦ MoarVM: Simplify pre-processor code

[06:19] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/142f91176e

[07:29] *** patrickb joined
[07:32] *** patrickb left
[07:33] *** patrickb joined
[08:55] *** evalable6 left
[08:55] *** linkable6 left
[08:57] *** linkable6 joined
[08:58] *** evalable6 joined
[09:44] *** Kaiepi left
[09:54] *** Kaiepi joined
[10:22] <Geth> Â¦ MoarVM: 4fea2f9af8 | (Samantha McVey)++ | src/strings/shiftjis.c

[10:22] <Geth> Â¦ MoarVM: Fix ShiftJIS decoder bug: \r + error + replacement

[10:22] <Geth> Â¦ MoarVM: 

[10:22] <Geth> Â¦ MoarVM: If the following are true decoding when ShiftJIS:

[10:22] <Geth> Â¦ MoarVM: * The previous character \r

[10:22] <Geth> Â¦ MoarVM: * We encounter a decoding error

[10:22] <Geth> Â¦ MoarVM: * We are using a replacement

[10:22] <Geth> Â¦ MoarVM: 

[10:22] <Geth> Â¦ MoarVM: Then we encounter a case where things are wrong

[10:22] <Geth> Â¦ MoarVM: Input: "\r" + ERROR + "abc"; with replacement="hello"

[10:22] <Geth> Â¦ MoarVM: Expected: "\rhelloabc"

[10:22] <Geth> Â¦ MoarVM: Actual: "\rellohelloabc"

[10:22] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/4fea2f9af8

[10:22] <Geth> Â¦ MoarVM: 74e828f0a8 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | src/strings/shiftjis.c

[10:23] <Geth> Â¦ MoarVM: Merge pull request #1502 from samcv/fix-shiftjis-cr-bug

[10:23] <Geth> Â¦ MoarVM: 

[10:23] <Geth> Â¦ MoarVM: Fix ShiftJIS decoder bug: \r + error + replacement

[10:23] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/74e828f0a8

[10:29] <lizmat> when I try to bump NQP to the latest version of Moar

[10:29] <lizmat> the build fails with: src/vm/moar/runner/main.c:4:10: fatal error: 'uv.h' file not found

[10:30] <lizmat> since nothing was changed in nqp for the past 3 weeks or so, I assume this is something in Moar messing up ?

[10:54] *** linkable6 left
[10:54] *** evalable6 left
[10:55] *** evalable6 joined
[10:56] *** linkable6 joined
[11:00] *** patrickb left
[11:12] <tbrowder> lizmat: check my PR just merged above #1503

[11:13] <tbrowder> it was in MoarVM

[11:33] <lizmat> weird...  I've tried all the intermediate commits one by one, and after that, the final one also built  ?

[11:48] *** squashable6 left
[11:49] *** squashable6 joined
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:11] *** patrickb joined
[12:12] <tbrowder> i think my pr may have been built and tested without samcv's

[12:13] <lizmat> well, they appear all good in the end

[12:13] <tbrowder> gut!

[12:13] <lizmat> maybe it was a local issue with branch switching or so

[12:13] <lizmat> running spectest now

[12:13] <patrickb> lizmat: I suspect https://github.com/MoarVM/MoarVM/commit/42bbff95ed280213b96801bf35decccb6ab9cdbd

[12:14] <lizmat> could

[12:14] <lizmat> be

[13:32] *** linkable6 left
[13:33] *** linkable6 joined
[14:14] *** squashable6 left
[14:15] *** frost left
[14:17] *** squashable6 joined
[14:52] *** linkable6 left
[14:55] *** linkable6 joined
[15:00] *** linkable6 left
[15:01] *** linkable6 joined
[15:13] *** linkable6 left
[15:15] *** linkable6 joined
[15:23] *** linkable6 left
[15:25] *** linkable6 joined
[15:31] *** patrickb left
[15:43] *** brrt joined
[15:59] *** linkable6 left
[16:00] *** linkable6 joined
[17:45] *** brrt left
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[18:36] *** discord-raku-bot joined
[20:36] *** patrickb joined
[21:43] *** patrickb left
