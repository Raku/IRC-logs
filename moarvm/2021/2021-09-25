[00:03] *** reportable6 left
[00:03] <timo> what does "Cannot get template for:" in the spesh log look like with that last commit?

[00:08] <jnthnwrthngtn> timo: Don't think it will have changed; it's BAIL that adds that, and all I did was move it a little earlier.

[00:08] <timo> right

[00:09] <timo> and get_template_for_opcode wouldn't depend on the annotations in the middle or anything like that

[00:10] <jnthnwrthngtn> Don't believe so, no

[00:11] <timo> then i'm not sure why disabling exprjit for liz doesn't change the value noticeably

[00:14] <jnthnwrthngtn> Just means the expr JIT isn't able to produce significantly better code for the program in question

[00:14] <jnthnwrthngtn> Our template coverge still misses some rather common things

[00:15] <timo> well, it's good that it doesn't generate much slower code at least :)

[00:15] <timo> maybe i can put ore effort into the "have templates for reprs" thing

[00:16] <timo> i'll want to have the teplate copiler look at more files and it'd not be based on opcode numbers, but on some custo name so you can have as many templates as you want from the same moar op

[00:50] *** evalable6 joined
[01:08] *** frost joined
[02:04] *** reportable6 joined
[02:59] *** SmokeMachine joined
[06:02] *** reportable6 left
[06:42] *** harrow left
[07:03] *** harrow joined
[08:01] <Nicholas> It's very confusing :-) t/spec/S06-advanced/dispatching.rakudo.moar is making noise. But the noise it makes is "TODO passed:   1-2"

[08:02] <nine> Just seen that as well

[08:04] *** reportable6 joined
[08:06] *** sena_kun joined
[08:18] <MasterDuke> same

[08:21] <MasterDuke> anybody have an opinion on https://github.com/MoarVM/MoarVM/pull/1550 ?

[08:44] <Geth> Â¦ MoarVM/new-disp: 5b570c1122 | (Stefan Seifert)++ | 2 files

[08:44] <Geth> Â¦ MoarVM/new-disp: Fix failing return type check in load-precompilation-file

[08:44] <Geth> Â¦ MoarVM/new-disp: 

[08:44] <Geth> Â¦ MoarVM/new-disp: The loadbytecode* ops do not just load the bytecode, but also run the

[08:44] <Geth> Â¦ MoarVM/new-disp: deserialization frames of the loaded comp units. These frames may trigger a

[08:44] <Geth> Â¦ MoarVM/new-disp: global deoptimization. In this case, the frame with the loadbytecode* op will

[08:44] <Geth> Â¦ MoarVM/new-disp: be marked for lazy deopt. This means that it will be deopted, when we return

[08:44] <Geth> Â¦ MoarVM/new-disp: to it (i.e. when loadbytecode* finishes).

[08:44] <Geth> Â¦ MoarVM/new-disp: <â€¦commit message has 18 more linesâ€¦>

[08:44] <Geth> Â¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/5b570c1122

[08:45] <nine> jnthnwrthngtn: can you please test agrammon with https://github.com/MoarVM/MoarVM/commit/5b570c1122 Our application loads just fine with that fix.

[08:50] *** Altai-man joined
[08:50] *** Altai-man left
[08:55] <Geth> Â¦ MoarVM: b75d00478a | (Daniel Green)++ | 2 files

[08:55] <Geth> Â¦ MoarVM: Add '.new()' suggestion to type object errors

[08:55] <Geth> Â¦ MoarVM: 

[08:55] <Geth> Â¦ MoarVM: Just for attribute binding and lookup though, since I believe those are

[08:55] <Geth> Â¦ MoarVM: more likely arise from something like

[08:55] <Geth> Â¦ MoarVM: ```

[08:55] <Geth> Â¦ MoarVM: class A {

[08:55] <Geth> Â¦ MoarVM:     has $.b = 4;

[08:55] <Geth> Â¦ MoarVM: <â€¦commit message has 5 more linesâ€¦>

[08:56] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/b75d00478a

[08:56] <Geth> Â¦ MoarVM: 7e9f25de39 | MasterDuke17++ (committed using GitHub Web editor) | 2 files

[08:56] <Geth> Â¦ MoarVM: Merge pull request #1550 from MasterDuke17/add_.new_suggestion_to_cannot_look_up_attribute_error

[08:56] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/7e9f25de39

[08:57] <Geth> Â¦ MoarVM: 665ab93785 | dyknon++ | src/strings/decode_stream.c

[08:57] <Geth> Â¦ MoarVM: Stream Decoder: Disallow incomplete code at EOF

[08:57] <Geth> Â¦ MoarVM: 

[08:57] <Geth> Â¦ MoarVM: Break unwanted infinite loop caused by

[08:57] <Geth> Â¦ MoarVM: $ echo 0: c2 | xxd -r | rakudo -ne ''

[08:57] <Geth> Â¦ MoarVM: 

[08:57] <Geth> Â¦ MoarVM: Related to: MoarVM/MoarVM#821

[08:57] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/665ab93785

[08:57] <Geth> Â¦ MoarVM: 3d478190b5 | dyknon++ | src/strings/decode_stream.c

[08:57] <Geth> Â¦ MoarVM: Better error message

[08:57] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/3d478190b5

[08:57] <Geth> Â¦ MoarVM: 919a034a1c | MasterDuke17++ (committed using GitHub Web editor) | src/strings/decode_stream.c

[08:57] <Geth> Â¦ MoarVM: Merge pull request #1519 from dyknon/master

[08:57] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/919a034a1c

[08:58] *** linkable6 left
[10:17] *** squashable6 left
[10:17] *** benchable6 left
[10:17] *** statisfiable6 left
[10:17] *** greppable6 left
[10:17] *** reportable6 left
[10:17] *** committable6 left
[10:17] *** bisectable6 left
[10:17] *** nativecallable6 left
[10:17] *** bloatable6 left
[10:17] *** unicodable6 left
[10:17] *** shareable6 left
[10:17] *** evalable6 left
[10:17] *** sourceable6 left
[10:17] *** coverable6 left
[10:17] *** quotable6 left
[10:17] *** releasable6 left
[10:17] *** tellable6 left
[10:17] *** notable6 left
[10:17] *** greppable6 joined
[10:18] *** notable6 joined
[10:18] *** tellable6 joined
[10:18] *** unicodable6 joined
[10:19] *** statisfiable6 joined
[10:19] *** bloatable6 joined
[10:19] *** quotable6 joined
[10:19] *** nativecallable6 joined
[10:54] *** frost left
[10:59] *** linkable6 joined
[11:17] *** evalable6 joined
[11:18] *** shareable6 joined
[11:19] *** coverable6 joined
[11:19] *** squashable6 joined
[11:19] *** benchable6 joined
[11:19] *** releasable6 joined
[11:20] *** sourceable6 joined
[12:03] *** reportable6 joined
[13:17] *** bisectable6 joined
[13:19] *** committable6 joined
[16:50] *** MasterDuke left
[17:26] *** MasterDuke joined
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:29] <MasterDuke> think https://github.com/MoarVM/MoarVM/blob/master/src/core/interp.c#L3141-L3169 are too big to do as primitives? should they be pulled out into a function for the interpreter and jit to call?

[18:38] <MasterDuke> oh interesting. there is an `MVM_sc_set_object()`, but its implementation is not the same as the `scsetobj` op...

[18:39] <MasterDuke> doh. the op calls that function as part of the implementation

[18:54] *** colemanx left
[18:55] *** colemanx joined
[20:00] *** linkable6 left
[20:00] *** evalable6 left
[20:00] *** linkable6 joined
[20:02] *** evalable6 joined
[20:23] <jnthnwrthngtn> nine: Yes, it fixes Agrammon. Thanks!

[20:24] <nine> \o/

[20:32] <timo> n'evening

[21:53] *** bisectable6 left
[21:53] *** committable6 left
[21:53] *** nativecallable6 left
[21:53] *** releasable6 left
[21:53] *** statisfiable6 left
[21:53] *** sourceable6 left
[21:53] *** unicodable6 left
[21:53] *** benchable6 left
[21:53] *** greppable6 left
[21:53] *** reportable6 left
[21:53] *** notable6 left
[21:53] *** evalable6 left
[21:53] *** coverable6 left
[21:53] *** linkable6 left
[21:53] *** shareable6 left
[21:53] *** tellable6 left
[21:53] *** squashable6 left
[21:53] *** bloatable6 left
[21:53] *** quotable6 left
[21:53] *** unicodable6 joined
[21:53] *** squashable6 joined
[21:53] *** greppable6 joined
[21:54] *** bisectable6 joined
[21:54] *** nativecallable6 joined
[21:54] *** coverable6 joined
[21:55] *** bloatable6 joined
[21:55] *** notable6 joined
[21:55] *** committable6 joined
[21:55] *** reportable6 joined
[21:56] *** tellable6 joined
[22:53] *** quotable6 joined
[22:53] *** releasable6 joined
[22:53] *** shareable6 joined
[22:56] *** statisfiable6 joined
[23:10] *** squashable6 left
[23:28] <[Coke]> Cheers.

[23:34] <timo> sreehc

[23:54] *** sourceable6 joined
