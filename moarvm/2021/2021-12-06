[00:02] *** reportable6 left
[00:25] *** [Coke] left
[00:28] *** Colt left
[00:28] *** Colt joined
[01:05] *** reportable6 joined
[01:20] *** CaCode left
[02:49] *** evalable6 left
[02:49] *** linkable6 left
[02:50] *** evalable6 joined
[04:22] *** shareable6 left
[04:22] *** nativecallable6 left
[04:22] *** sourceable6 left
[04:22] *** quotable6 left
[04:22] *** greppable6 left
[04:22] *** benchable6 left
[04:22] *** evalable6 left
[04:22] *** bloatable6 left
[04:22] *** notable6 left
[04:22] *** bisectable6 left
[04:22] *** unicodable6 left
[04:22] *** squashable6 left
[04:22] *** reportable6 left
[04:22] *** committable6 left
[04:22] *** statisfiable6 left
[04:22] *** releasable6 left
[04:22] *** tellable6 left
[04:22] *** coverable6 left
[04:22] *** bloatable6 joined
[04:22] *** nativecallable6 joined
[04:22] *** coverable6 joined
[04:22] *** bisectable6 joined
[04:22] *** releasable6 joined
[04:23] *** unicodable6 joined
[04:24] *** sourceable6 joined
[04:24] *** shareable6 joined
[04:25] *** committable6 joined
[05:03] *** CaCode joined
[05:10] *** frost joined
[05:22] *** benchable6 joined
[05:23] *** evalable6 joined
[05:24] *** reportable6 joined
[05:24] *** squashable6 joined
[05:26] *** ilogger2 left
[05:26] *** squashable6 left
[05:26] *** CaCode left
[05:26] *** Colt left
[05:26] *** MasterDuke left
[05:26] *** dogbert17 left
[05:26] *** harrow left
[05:26] *** vrurg left
[05:26] *** unicodable6 left
[05:26] *** bisectable6 left
[05:26] *** bloatable6 left
[05:26] *** tbrowder left
[05:26] *** SmokeMachine left
[05:26] *** ugexe left
[05:26] *** leedo left
[05:26] *** timo left
[05:26] *** sena_kun left
[05:26] *** Util_ left
[05:26] *** nine left
[05:26] *** codesections left
[05:26] *** Voldenet left
[05:26] *** JRaspass left
[05:26] *** jdv left
[05:26] *** rypervenche left
[05:26] *** samcv left
[05:28] *** squashable6 joined
[05:28] *** CaCode joined
[05:28] *** unicodable6 joined
[05:28] *** bisectable6 joined
[05:28] *** bloatable6 joined
[05:28] *** Colt joined
[05:28] *** MasterDuke joined
[05:28] *** harrow joined
[05:28] *** dogbert17 joined
[05:28] *** leedo joined
[05:28] *** vrurg joined
[05:28] *** timo joined
[05:28] *** JRaspass joined
[05:28] *** Util_ joined
[05:28] *** nine joined
[05:28] *** rypervenche joined
[05:28] *** tbrowder joined
[05:28] *** SmokeMachine joined
[05:28] *** ugexe joined
[05:28] *** samcv joined
[05:28] *** ilogger2 joined
[05:28] *** sena_kun joined
[05:28] *** codesections joined
[05:28] *** Voldenet joined
[05:28] *** jdv joined
[05:30] *** Colt left
[05:30] *** Colt joined
[05:37] *** jdv left
[05:37] *** jdv joined
[05:50] *** rypervenche left
[05:50] *** samcv left
[05:50] *** rypervenche joined
[05:51] *** rypervenche left
[05:51] *** rypervenche joined
[05:51] *** samcv joined
[06:02] *** reportable6 left
[06:23] *** nebuchadnezzar joined
[06:23] *** quotable6 joined
[06:23] *** tellable6 joined
[06:50] *** linkable6 joined
[06:50] *** CaCode_ joined
[06:53] *** CaCode left
[06:59] <Nicholas> good #moarvm, *

[07:10] <nine> MasterDuke: no, something like https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/P6bigint.c#L16

[07:30] <nine> Oh, and * good!

[08:24] *** notable6 joined
[09:04] *** reportable6 joined
[10:22] *** statisfiable6 joined
[11:03] <jnthnwrthngtn> o/

[11:03] <tellable6> hey jnthnwrthngtn, you have a message: https://gist.github.com/f25ca3e1e241794acef563ad1d6575e6

[11:03] <tellable6> hey jnthnwrthngtn, you have a message: https://gist.github.com/74bfd8efde8e192e5d61fab0d7a1e767

[11:03] <jnthnwrthngtn> Gosh, messages!

[11:16] *** Altai-man joined
[11:23] <Nicholas> \o

[11:26] *** CaCode_ left
[12:02] *** reportable6 left
[13:05] *** reportable6 joined
[13:47] <jnthnwrthngtn> nine: I think the VM knowing about signed ints and unsinged ints is probably the most robust way to go overall. I kinda wish I'd had the foresight to do it from day 1. 

[13:50] <nine> jnthnwrthngtn: ok, then I'll just continue on my track. Things are starting to look better anyway. It's almost funny how correctly distinguishin in one place leads to such a huge chain of necessary changes to get into a stable condition again.

[13:54] *** frost left
[14:00] <nine> I just hope that we won't run into the same amount of issues with sized integers. Those are barely existent inside the VM as well.

[14:03] <lizmat> FWIW, I'd really like to say native 1bit / 2bit / 4bit int / uint support as well, especially for arrays and multidim arrays

[14:04] <lizmat> I'd be willing to look into implementing that in MoarVM, but we would also someone to support that on the JVM as well, I'd say

[14:20] <jnthnwrthngtn> nine: I think those are less invasive, in that we only consider sized integers to be storage types, not operation types

[14:20] <jnthnwrthngtn> All operations are done at full-width

[14:22] *** greppable6 joined
[15:45] *** [Coke] joined
[15:58] <Nicholas> I'm glad that jnthnwrthngtn thought "VM knowing" was the better plan, beacuse it was my hunch too, but I didn't want to bias anyone because it's only a hunch

[16:00] <Nicholas> Specifically, it seems like being explicit at the opcode level is going to avoid mistakes where "but it was unsigned really" gets lost, and conversions from (u)int64 to bigint or (u)int64 to double go wrong

[17:44] *** discord-raku-bot left
[17:45] *** discord-raku-bot joined
[18:02] *** reportable6 left
[18:12] *** Altai-man left
[18:27] *** patrickb joined
[20:41] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/12/06/2021-49-adventing-is-on/

[21:03] *** reportable6 joined
[21:23] <MasterDuke> lizmat++

[21:23] <tellable6> 2021-12-06T10:59:54Z #raku <atroxaper> MasterDuke Many-many thanks to you! You've helped me a lot. I've already add the article to the advent list.

[22:19] *** tbrowder left
[22:22] *** tbrowder joined
