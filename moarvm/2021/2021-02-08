[01:09] *** samcv left
[01:14] *** samcv joined
[01:39] *** MasterDuke left
[03:11] *** benchable6 left
[03:11] *** nativecallable6 left
[03:11] *** sourceable6 left
[03:11] *** releasable6 left
[03:11] *** quotable6 left
[03:11] *** evalable6 left
[03:11] *** coverable6 left
[03:11] *** committable6 left
[03:11] *** committable6 joined
[03:12] *** evalable6 joined
[03:12] *** quotable6 joined
[03:12] *** nativecallable6 joined
[03:13] *** sourceable6 joined
[03:13] *** benchable6 joined
[03:13] *** coverable6 joined
[03:14] *** releasable6 joined
[07:08] <nwc10> good *, #moarvm 

[07:08] <nwc10> good *, #moarvm 

[07:40] *** domidumont joined
[08:17] *** MasterDuke joined
[08:51] *** domidumont left
[08:53] *** domidumont joined
[09:00] *** zakharyas joined
[09:11] *** domidumont left
[09:13] *** domidumont joined
[09:33] *** zakharyas left
[10:23] <jnthn> morning o/

[10:23] <jnthn> morning o/

[10:23] <tellable6> 2021-02-07T09:43:59Z #moarvm <nwc10> jnthn http://paste.scsys.co.uk/594542 -- new-disp t/02-rakudo/15-gh_1202.t ASAN excitement

[10:23] <tellable6> 2021-02-07T09:43:59Z #moarvm <nwc10> jnthn http://paste.scsys.co.uk/594542 -- new-disp t/02-rakudo/15-gh_1202.t ASAN excitement

[10:24] <nwc10> \o

[10:24] <nwc10> \o

[10:25] <nwc10> also, I'd not seen ASAN since then, but there are two slightly different traces whereby it can do a NULL pointer deref in src/core/interp.c:4361

[10:25] <nwc10> also, I'd not seen ASAN since then, but there are two slightly different traces whereby it can do a NULL pointer deref in src/core/interp.c:4361

[10:38] *** MasterDuke left
[10:40] *** MasterDuke joined
[10:47] <MasterDuke> wow, thought i'd give gcc's static analyzer a go at the moarvm build. 32k log file written so far (but it does create very large ascii diagrams) and it seems to have hung on src/strings/shiftjis.o (well, 100% cpu and res is currently 15gb and rising)

[10:47] <MasterDuke> wow, thought i'd give gcc's static analyzer a go at the moarvm build. 32k log file written so far (but it does create very large ascii diagrams) and it seems to have hung on src/strings/shiftjis.o (well, 100% cpu and res is currently 15gb and rising)

[10:48] <MasterDuke> been going for 15min now

[10:48] <MasterDuke> been going for 15min now

[10:54] <jnthn> Maybe the use switch/case in shift_jis_cp_to_index :)

[10:54] <jnthn> Maybe the use switch/case in shift_jis_cp_to_index :)

[10:57] <MasterDuke> i killed it. unfortunately doing so kills the whole make, so i need to see if there's a way to skip certain files

[10:57] <MasterDuke> i killed it. unfortunately doing so kills the whole make, so i need to see if there's a way to skip certain files

[11:02] <MasterDuke> bunch of `warning: dereference of NULL ...` and `warning: double-‘free’ of ...`

[11:02] <MasterDuke> bunch of `warning: dereference of NULL ...` and `warning: double-‘free’ of ...`

[11:29] <MasterDuke> i can follow some of these dereference warnings, but i don't understand the double-free ones

[11:29] <MasterDuke> i can follow some of these dereference warnings, but i don't understand the double-free ones

[11:32] <MasterDuke> here's one about MVM_spesh_pea_destroy_deopt_info https://gist.github.com/MasterDuke17/6479485b8f93cebc72ea1249c584a508 if anybody wants to take a look

[11:32] <MasterDuke> here's one about MVM_spesh_pea_destroy_deopt_info https://gist.github.com/MasterDuke17/6479485b8f93cebc72ea1249c584a508 if anybody wants to take a look

[11:40] <MasterDuke> what would be the right thing to do here https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/VMArray.c#L836 if s_repr_data is NULL here https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/VMArray.c#L813-L814 ?

[11:40] <MasterDuke> what would be the right thing to do here https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/VMArray.c#L836 if s_repr_data is NULL here https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/VMArray.c#L813-L814 ?

[12:55] <nine> MasterDuke: that's on gcc 10 I assume?

[12:55] <nine> MasterDuke: that's on gcc 10 I assume?

[12:55] <MasterDuke> yeah

[12:55] <MasterDuke> yeah

[12:56] <MasterDuke> 10.2.0

[12:56] <MasterDuke> 10.2.0

[12:56] <nine> waiting for 11 should be worth it :0

[12:56] <nine> waiting for 11 should be worth it :0

[12:58] <nine> The author claims a much lower false positive rate and loads of improvements in general compared to the alpha version in gcc 10

[12:58] <nine> The author claims a much lower false positive rate and loads of improvements in general compared to the alpha version in gcc 10

[12:59] <MasterDuke> yeah, and i see you can annotate functions as malloc/free pairs, which i assume would be good for MVM_malloc/MVM_free/etc

[12:59] <MasterDuke> yeah, and i see you can annotate functions as malloc/free pairs, which i assume would be good for MVM_malloc/MVM_free/etc

[13:02] <MasterDuke> looks like gcc 11 should be released soon, guess i'll wait until then to revisit the analyzer

[13:02] <MasterDuke> looks like gcc 11 should be released soon, guess i'll wait until then to revisit the analyzer

[13:02] <MasterDuke> though my question about VMArray's copy_elems still stands

[13:02] <MasterDuke> though my question about VMArray's copy_elems still stands

[13:27] *** tbrowder left
[13:27] *** kawaii left
[13:28] *** tbrowder joined
[13:49] *** kawaii joined
[15:23] *** MasterDuke left
[15:27] *** MasterDuke joined
[16:10] <MasterDuke> rebased https://github.com/MoarVM/MoarVM/pull/1426 and broke apart the commits into some smaller chunks

[16:10] <MasterDuke> rebased https://github.com/MoarVM/MoarVM/pull/1426 and broke apart the commits into some smaller chunks

[16:34] <nine> MasterDuke: is the VMArray question purely hyptothetical, or do you see that irl?

[16:34] <nine> MasterDuke: is the VMArray question purely hyptothetical, or do you see that irl?

[16:41] <MasterDuke> hypothetical

[16:41] <MasterDuke> hypothetical

[16:54] <nine> nqp: my @a := 1, 2, 3; my %b := nqp::hash; %b<a> := 1; nqp::splice(@a, %b, 1, 0)

[16:54] <nine> nqp: my @a := 1, 2, 3; my %b := nqp::hash; %b<a> := 1; nqp::splice(@a, %b, 1, 0)

[16:54] <nine> nqp-m: my @a := 1, 2, 3; my %b := nqp::hash; %b<a> := 1; nqp::splice(@a, %b, 1, 0)

[16:54] <nine> n: my @a := 1, 2, 3; my %b := nqp::hash; %b<a> := 1; nqp::splice(@a, %b, 1, 0)

[16:57] <nine> Darn...camelia is down. Anyway, it's not hypothetical anymore. This ^^^ actually segfaults due to the NULL pointer dereference.

[16:57] <nine> MasterDuke: great spot!

[17:03] <MasterDuke> credit to the gcc analyzer

[17:11] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/02/08/2021-06-collect-conserve-remaster/

[17:41] *** domidumont left
[18:01] *** MasterDuke left
[19:47] *** MasterDuke joined
[20:33] *** linkable6 joined
[20:39] *** zakharyas joined
[21:05] *** patrickb joined
[21:12] *** MasterDuke left
[21:17] *** MasterDuke joined
[22:23] *** zakharyas left
[22:31] *** patrickb left
