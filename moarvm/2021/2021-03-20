[00:56] *** frost-lab joined
[03:48] *** Kaiepi left
[03:48] *** Kaiepi joined
[04:46] *** Kaiepi left
[04:46] *** Kaiepi joined
[05:55] *** Kaiepi left
[05:56] *** Kaiepi joined
[06:16] <nwc10> good *, #moarvm 

[06:35] *** Kaiepi left
[06:35] *** Kaiepi joined
[07:12] *** Kaiepi left
[07:12] *** Kaiepi joined
[07:41] *** squashable6 left
[07:44] *** squashable6 joined
[08:03] <nwc10> and a slightly better morning now, as I have found the bug

[08:04] <nwc10> things I did not know, that might be "obvious" to everyone else (or at least 3 of you) - if the value I'm trying to write out to a pointer happens to be 64 bit, it has to go in temporary register first, and no amount of casts or type thingies are going to save you (with a warning about what you did wrong) - it just gets truncated

[08:05] <nwc10> and

[08:05] <nwc10> does valgrind allocate heap memory with a totally different address layout to system malloc (ie top 32 bits of the pointer are zero ?)

[08:05] <nwc10> because "my bug goes away completely when I run under valgrind" wasn't fun

[08:11] <sena_kun> nwc10, a release blocker?

[08:11] <nwc10> no, private branch not even pushed anywhere

[08:20] *** kawaii_ joined
[08:23] *** kawaii left
[08:23] *** kawaii_ is now known as kawaii

[08:32] <nine> nwc10: what exactly are you working on?

[08:32] <nwc10> sp_add_I / sp_sub_I / sp_mul_I

[08:44] <MasterDuke> interesting. think they can be made much faster? or is this a correctness fix?

[08:44] *** domidumont joined
[08:45] <nwc10> neither. but will push something soon. revisitng one of my stalled/misguided PR

[08:47] <nwc10> I should go upstairs and see if the snow melted. I can only see sky from here, and plants in the rain shadow of the house

[08:47] <nwc10> and blue sky, some clouds, and there is a shadow, implying ths strange bright thing is back

[09:54] <nine> Geth AWOL again?

[09:55] <nine> https://github.com/MoarVM/MoarVM/pull/1445 "Add a setup_notify handler and queue to nqp::signal" Setting up a signal handler happens on the IO eventloop thread. Thus when nqp::signal is done, one must not assume that the handler is already in place. Add setup_notify_queue and setup_notify_schedulee arguments, so we can notify the caller when the handler is setup to avoid race conditions.

[10:29] <sena_kun> make: *** No rule to make target '3rdparty/cmp/cmp.h', needed by 'src/main.o'.  Stop.

[10:31] <sena_kun> never mind

[10:36] *** frost-lab left
[10:54] <MasterDuke> nine++

[11:45] *** Kaiepi left
[11:47] *** Kaiepi joined
[11:59] *** Kaiepi left
[12:00] *** Kaiepi joined
[12:02] *** Kaeipi joined
[12:03] *** Kaiepi left
[12:04] *** Kaeipi left
[12:05] *** Kaeipi joined
[12:16] <lizmat> nine: yeah, seems Geth is not PONGing to freenode's PINGs

[12:16] <lizmat> and is therefor kicked off 

[12:31] <sena_kun> hm

[12:31] <sena_kun> Was anything changed in Rakudo related to kill.t?

[12:32] <sena_kun> I don't think it was, but rakudo does not pass the test reliably on 6.c-errata and 6.d-errata versions.

[12:32] <sena_kun> Master is fine with and without https://github.com/Raku/roast/commit/da922f167ffc7ab1049702d6433ddcf413b07d0f

[12:33] <sena_kun> The failed test is always "not ok 8 - did we get STDOUT"

[12:34] <sena_kun> Oh, no, it is TODOed.

[14:20] *** Kaeipi left
[14:51] *** cog__ joined
[14:54] *** cog_ left
[15:11] *** Kaiepi joined
[17:30] *** evalable6 left
[17:30] *** linkable6 left
[17:32] *** linkable6 joined
[17:32] *** evalable6 joined
[18:21] *** sena_kun left
[18:26] *** sena_kun joined
[18:35] *** domidumont left
[18:38] *** domidumont joined
[18:40] *** domidumont left
[19:27] *** zakharyas joined
[21:17] *** sena_kun left
[21:17] *** sena_kun joined
[21:19] *** sena_kun left
[21:19] *** sena_kun joined
[21:23] *** sena_kun left
[21:25] *** sena_kun joined
[22:22] *** zakharyas left
[23:37] *** [Coke]_ is now known as [Coke]

