[00:02] *** reportable6 left
[00:04] *** reportable6 joined
[00:40] *** frost-lab joined
[05:33] *** shareable6 left
[05:33] *** unicodable6 left
[05:33] *** benchable6 left
[05:33] *** sourceable6 left
[05:33] *** statisfiable6 left
[05:33] *** nativecallable6 left
[05:33] *** reportable6 left
[05:33] *** linkable6 left
[05:33] *** coverable6 left
[05:33] *** evalable6 left
[05:33] *** squashable6 left
[05:33] *** releasable6 left
[05:33] *** quotable6 left
[05:33] *** bloatable6 left
[05:33] *** greppable6 left
[05:33] *** tellable6 left
[05:33] *** notable6 left
[05:33] *** committable6 left
[05:33] *** bisectable6 left
[05:33] *** sourceable6 joined
[05:33] *** nativecallable6 joined
[05:33] *** releasable6 joined
[05:34] *** coverable6 joined
[05:34] *** tellable6 joined
[05:34] *** evalable6 joined
[05:34] *** statisfiable6 joined
[05:34] *** shareable6 joined
[05:34] *** committable6 joined
[05:35] *** benchable6 joined
[05:35] *** greppable6 joined
[05:35] *** squashable6 joined
[05:35] *** notable6 joined
[05:35] *** linkable6 joined
[05:35] *** reportable6 joined
[05:36] *** unicodable6 joined
[05:36] *** bloatable6 joined
[05:36] *** bisectable6 joined
[05:36] *** quotable6 joined
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[07:05] *** Geth left
[07:06] *** Geth joined
[07:41] <Geth> Â¦ MoarVM/libzstd-version-check: 099cdd65f8 | (Nicholas Clark)++ | Configure.pl

[07:41] <Geth> Â¦ MoarVM/libzstd-version-check: We need at least version 1.0.0 of libzstd, to expose the API we need.

[07:41] <Geth> Â¦ MoarVM/libzstd-version-check: 

[07:41] <Geth> Â¦ MoarVM/libzstd-version-check: Ubuntu 16.04 packages version 0.5.1, so an "exists" check alone for the

[07:41] <Geth> Â¦ MoarVM/libzstd-version-check: library is not sufficient - if we jsut do that, we think we can enable our

[07:41] <Geth> Â¦ MoarVM/libzstd-version-check: code, but then it fails to compile.

[07:41] <Geth> Â¦ MoarVM/libzstd-version-check: review: https://github.com/MoarVM/MoarVM/commit/099cdd65f8

[07:42] <Geth> Â¦ MoarVM: nwc10++ created pull request #1490: We need at least version 1.0.0 of libzstd, to expose the API we need.

[07:42] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1490

[07:45] *** domidumont joined
[07:47] <Geth> Â¦ MoarVM: c7a063e560 | (Stefan Seifert)++ | 2 files

[07:47] <Geth> Â¦ MoarVM: Fix corruption of fixkey hash entries

[07:47] <Geth> Â¦ MoarVM: 

[07:47] <Geth> Â¦ MoarVM: Several places in the fixkey hash implementation assumed that entries will be

[07:47] <Geth> Â¦ MoarVM: pointers to strings. However the hash can store arbitrary structs. So when

[07:47] <Geth> Â¦ MoarVM: those structs contained more than just a pointer, often they overwrote other

[07:47] <Geth> Â¦ MoarVM: entries. Fix by replacing all occurences of sizeof(MVMString ***) with

[07:47] <Geth> Â¦ MoarVM: control->entry_size

[07:47] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c7a063e560

[07:47] <Geth> Â¦ MoarVM: 2d14aa9628 | niner++ (committed using GitHub Web editor) | 2 files

[07:47] <Geth> Â¦ MoarVM: Merge pull request #1462 from MoarVM/fix_fixkey_hash_memory_corruption

[07:47] <Geth> Â¦ MoarVM: 

[07:47] <Geth> Â¦ MoarVM: Fix corruption of fixkey hash entries

[07:48] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/2d14aa9628

[07:48] <nwc10> nine: woah, I don't think that that one is correct

[07:50] <nine> nwc10: that's why I requested you review a month ago :/

[07:51] <nwc10> yes, but I got waylaid by everything else

[07:51] <nwc10> and needed time to figure out what the real problem was

[07:51] <nwc10> (sorry)

[07:52] <nine> Feel free to revert.

[07:53] <nine> Though the old code certainly wasn't correct either

[07:53] <nwc10> was there an actual test case that triggered the problem?

[07:54] <nine> https://colabti.org/irclogger/irclogger_log/moarvm?date=2021-04-07

[07:57] <nine> Started the day before: https://colabti.org/irclogger/irclogger_log/moarvm?date=2021-04-06#l154

[08:02] <nwc10> I think that it might just be that at https://github.com/MasterDuke17/MoarVM/commit/88e792b682ad9ca7bb0d5e4b12f44d70b3148ad4#diff-a53b8c6a2d13a92a888974bfb0808363edac4cd84dbca0333cc0213aaea77cebR269 line 269 (which I am struggling to link to)

[08:03] <nwc10> that return value should be cast to (MVMString ***)

[08:03] <nwc10> and then dereferenced

[08:03] <nwc10> but I still have other stuff I need to do first

[08:07] <nwc10> But "enabling HASH_DEBUG_ITER causes valgrind to complain" is never a good feeling about how long it's going to take

[08:39] <Geth> Â¦ MoarVM: 89043c8407 | (Stefan Seifert)++ | 2 files

[08:39] <Geth> Â¦ MoarVM: Revert "Fix corruption of fixkey hash entries"

[08:39] <Geth> Â¦ MoarVM: 

[08:39] <Geth> Â¦ MoarVM: This reverts commit c7a063e560e049daeb50c3c2bb44ebaf17643df6.

[08:39] <Geth> Â¦ MoarVM: 

[08:39] <Geth> Â¦ MoarVM: The author of the original code and CI concur that the change was wrong.

[08:39] <Geth> Â¦ MoarVM: Who am I to argue? :)

[08:39] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/89043c8407

[08:40] <nine> Wouldn't have happened if the re-run button on Github actually worked :/

[08:41] <nine> But at least I've found a bug in my build system patch for giving fully detailed test output on failure. That bug caused a build with failing tests to succeed...

[09:00] <Geth> Â¦ MoarVM: c8c1b4f2b4 | (Stefan Seifert)++ | src/spesh/args.c

[09:00] <Geth> Â¦ MoarVM: Fix spesh missing writes to containers

[09:00] <Geth> Â¦ MoarVM: 

[09:00] <Geth> Â¦ MoarVM: When containers get passed as arguments (i.e. read/write arguments), we collect

[09:00] <Geth> Â¦ MoarVM: statistics on these containers' contents and create facts from them. These

[09:00] <Geth> Â¦ MoarVM: facts are guarded by the arg guard tree which is used for selecting spesh

[09:00] <Geth> Â¦ MoarVM: candidates, so a candidate relying on these facts will only be run, when the

[09:00] <Geth> Â¦ MoarVM: facts hold.

[09:00] <Geth> Â¦ MoarVM: <â€¦commit message has 12 more linesâ€¦>

[09:00] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c8c1b4f2b4

[09:00] <Geth> Â¦ MoarVM: c395a48b8a | niner++ (committed using GitHub Web editor) | src/spesh/args.c

[09:00] <Geth> Â¦ MoarVM: Merge pull request #1476 from MoarVM/fix_spesh_missing_writes_to_containers

[09:00] <Geth> Â¦ MoarVM: 

[09:01] <Geth> Â¦ MoarVM: Fix spesh missing writes to containers

[09:01] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/c395a48b8a

[09:01] <Geth> Â¦ MoarVM: 14d9dd566a | (Stefan Seifert)++ | src/spesh/stats.c

[09:01] <Geth> Â¦ MoarVM: Fix missing gc_mark of simstackframe's arg_types

[09:01] <Geth> Â¦ MoarVM: 

[09:01] <Geth> Â¦ MoarVM: Found through: AddressSanitizer: heap-buffer-overflow src/spesh/stats.c:40 in

[09:01] <Geth> Â¦ MoarVM: incomplete_type_tuple x62f000000040 is located 960 bytes to the left of 51200-

[09:01] <Geth> Â¦ MoarVM: byte region [0x62f000000400,0x62f00000cc00) allocated by thread 0 in setup_bin

[09:01] <Geth> Â¦ MoarVM: src/gc/gen2.c:27

[09:01] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/14d9dd566a

[09:01] <Geth> Â¦ MoarVM: 975346d527 | niner++ (committed using GitHub Web editor) | src/spesh/stats.c

[09:01] <Geth> Â¦ MoarVM: Merge pull request #1478 from MoarVM/fix_missing_gc_mark_in_spesh_sim

[09:01] <Geth> Â¦ MoarVM: 

[09:01] <Geth> Â¦ MoarVM: Fix missing gc_mark of simstackframe's arg_types

[09:01] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/975346d527

[09:02] <Geth> Â¦ MoarVM/master: 4 commits pushed by (Stefan Seifert)++, niner++

[09:02] <Geth> Â¦ MoarVM/master: e1d546ab54 | Propagate spesh facts after optimizing away a guard

[09:02] <Geth> Â¦ MoarVM/master: dc1f710bd5 | Propagate spesh facts after optimizing box/unbox into a set

[09:02] <Geth> Â¦ MoarVM/master: 543258ab10 | Propagate spesh facts after eliminating unuseed log guards

[09:02] <Geth> Â¦ MoarVM/master: 799afa7cba | Merge pull request #1471 from MoarVM/propagate_spesh_facts_after_guard_elimination

[09:02] <Geth> Â¦ MoarVM/master: review: https://github.com/MoarVM/MoarVM/compare/975346d52785...799afa7cba3f

[09:44] <lizmat> so, is it time for a MoarVM bump ?

[09:46] <nine> CI looks good so far: https://build.opensuse.org/project/show/home:niner9:rakudo-git

[09:46] <nine> I guess a bump is appropriate :)

[10:06] <lizmat> bumped

[10:07] *** linkable6 left
[10:07] *** evalable6 left
[10:09] *** evalable6 joined
[10:10] *** linkable6 joined
[10:38] <Geth> Â¦ MoarVM/libzstd-version-check: 5ee04f0fac | (Nicholas Clark)++ | Configure.pl

[10:38] <Geth> Â¦ MoarVM/libzstd-version-check: We need at least version 1.0.0 of libzstd, to expose the API we need.

[10:38] <Geth> Â¦ MoarVM/libzstd-version-check: 

[10:38] <Geth> Â¦ MoarVM/libzstd-version-check: Ubuntu 16.04 packages version 0.5.1, so an "exists" check alone for the

[10:38] <Geth> Â¦ MoarVM/libzstd-version-check: library is not sufficient - if we jsut do that, we think we can enable our

[10:38] <Geth> Â¦ MoarVM/libzstd-version-check: code, but then it fails to compile.

[10:38] <Geth> Â¦ MoarVM/libzstd-version-check: review: https://github.com/MoarVM/MoarVM/commit/5ee04f0fac

[10:40] <nwc10> AFK again for some time

[11:22] <dogbert17> nine: is it possible that any of your merges today could/should lead to perf regressions?

[11:26] <dogbert17> commit https://github.com/MoarVM/MoarVM/commit/c395a48b8a seems to do just that

[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:18] *** frost-lab left
[12:26] *** frost-lab joined
[12:44] *** frost-lab left
[13:30] <Geth> Â¦ MoarVM: 5ee04f0fac | (Nicholas Clark)++ | Configure.pl

[13:30] <Geth> Â¦ MoarVM: We need at least version 1.0.0 of libzstd, to expose the API we need.

[13:30] <Geth> Â¦ MoarVM: 

[13:30] <Geth> Â¦ MoarVM: Ubuntu 16.04 packages version 0.5.1, so an "exists" check alone for the

[13:30] <Geth> Â¦ MoarVM: library is not sufficient - if we jsut do that, we think we can enable our

[13:30] <Geth> Â¦ MoarVM: code, but then it fails to compile.

[13:30] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/5ee04f0fac

[13:30] <nwc10> AFK again again

[13:32] *** squashable6 left
[13:34] *** squashable6 joined
[13:35] <lizmat> dogbert17 nine looks like HEAD drops test-t from roughly 1.1 seconds to 1.4 seconds  :-(

[13:35] <lizmat> on my machine

[14:02] <dogbert17> perhaps nine has a theory as to what's going on

[14:05] * lizmat hopes so

[15:35] <timotimo> well, one of the commits fixes unsafe optimization for arguments that are containers

[15:36] <timotimo> could be a part of the performance was relying on an optimization thit could cause trouble

[15:37] <ugexe> it amazing how fast things can be if they only need to be kinda right most of the time

[16:04] <[Coke]> :)

[16:05] <[Coke]> I remember doing a speed test on something a decade ago and it was much faster than anticipated. turned out it had errored out early and not really done any of the work.

[17:10] <timotimo> very good

[17:10] <timotimo> shareholders love this

[17:15] *** domidumont left
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:29] *** zakharyas joined
[18:51] <lizmat> reminds me of some people not wanting to wait for a tape backup to finish, so decided to use /dev/null as the tape device  :-)

[19:21] <timotimo> reminds me of the client that thought the system can't possibly be doing the work they asked for, so the contractor just put a sleep in there and the client was happy

[19:40] <lizmat> :-)

[19:47] *** MasterDuke joined
[20:14] *** zakharyas left
[20:15] *** zakharyas joined
[20:43] *** zakharyas left
[20:44] *** zakharyas joined
[21:00] <timotimo> was probably a DailyWTF story or so

[21:32] *** zakharyas left
[22:20] *** dogbert11 joined
[22:23] *** dogbert17 left
[23:43] *** MasterDuke left
