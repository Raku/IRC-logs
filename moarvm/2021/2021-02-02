[00:31] *** squashable6 left
[00:35] *** squashable6 joined
[01:47] *** evalable6 left
[01:47] *** linkable6 left
[01:47] *** linkable6 joined
[01:48] *** evalable6 joined
[03:36] *** releasable6 left
[03:36] *** unicodable6 left
[03:36] *** bloatable6 left
[03:36] *** coverable6 left
[03:36] *** notable6 left
[03:36] *** tellable6 left
[03:36] *** sourceable6 left
[03:36] *** committable6 left
[03:36] *** evalable6 left
[03:36] *** bisectable6 left
[03:36] *** quotable6 left
[03:36] *** greppable6 left
[03:36] *** shareable6 left
[03:36] *** benchable6 left
[03:36] *** nativecallable6 left
[03:36] *** statisfiable6 left
[03:36] *** squashable6 left
[03:36] *** linkable6 left
[03:36] *** shareable6 joined
[03:36] *** benchable6 joined
[03:36] *** bisectable6 joined
[03:37] *** sourceable6 joined
[03:37] *** notable6 joined
[03:37] *** bloatable6 joined
[03:37] *** nativecallable6 joined
[03:38] *** quotable6 joined
[03:38] *** tellable6 joined
[03:38] *** evalable6 joined
[03:38] *** committable6 joined
[03:38] *** statisfiable6 joined
[03:38] *** coverable6 joined
[03:38] *** releasable6 joined
[03:38] *** unicodable6 joined
[03:39] *** linkable6 joined
[03:39] *** greppable6 joined
[03:39] *** squashable6 joined
[05:07] *** ggoebel_ left
[08:23] *** MasterDuke joined
[08:37] *** domidumont joined
[08:44] *** brrt joined
[08:51] *** zakharyas joined
[08:56] *** MasterDuke92 joined
[09:00] *** MasterDuke left
[09:19] *** sena_kun left
[09:23] *** sena_kun joined
[10:27] <MasterDuke92> ah ha!

[10:27] *** ggoebel_ joined
[10:29] <MasterDuke92> before this call to MVM_spesh_log_deopt https://github.com/MoarVM/MoarVM/pull/1426/files#diff-d37625c1e4800ae5fa2634c97ff427fa54b7c0493a9ab7f1fc963d6cbfbb2aa0R248 `f` is fine. afterwards it's all 0x0

[10:50] <MasterDuke92> hm, turning these https://github.com/MoarVM/MoarVM/pull/1426/files#diff-8125fd602ee7efb8edd7f77910bb0f73e2d593b53af91e4cefef42fa287556e0R158-R159 into MVM_ASSIGN_REFs didn't seem to help

[10:53] <jnthn> I think MVM_spesh_log_deopt could in theory allocate a new log if the current one fills

[10:53] <jnthn> And a frame can be heap-allocated

[10:54] <jnthn> So an MVMROOT of `f` is probably called for

[10:54] <jnthn> Though there's also an MVMROOT of `f` right above this

[10:54] <nine> Huh! This looks like a spesh bug:

[10:54] <nine> sp_p6oget_n      r67(0),  r20(8), liti16(8)  # [029] sp_p6oget_n a Num

[10:54] <jnthn> So you can just put it in there

[10:54] <nine> r20(8): usages=1, deopt=32, flags=17    KnTyp TyObj (type: Num)

[10:55] <nine> sp_p6oget_n segfaults when called with a type object. Apparently we even know it's a type object, yet we generate that sp_p6oget_n

[10:55] <jnthn> oops, yes

[10:55] <jnthn> Amazing what sneaks by unnoticed for so long

[10:57] <nine> Could be this: https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/P6opaque.c#L1980

[10:59] *** MasterDuke joined
[11:01] *** MasterDuke92 left
[11:10] *** MasterDuke53 joined
[11:12] *** MasterDuke left
[11:26] <MasterDuke53> well, moving the MVM_spesh_log_deopt inside the MVMROOT (and changing the straight assignments in MVM_spesh_log_deopt to MVM_ASSIGN_REFs) got further in the build, but then another segv

[11:26] *** MasterDuke53 left
[11:27] *** MasterDuke joined
[11:30] *** El_Che left
[11:31] *** El_Che joined
[11:40] <MasterDuke> set GC_DEBUG back up to 3, MVM_panic invalid owner again...

[11:40] <tellable6> 2021-02-02T11:31:41Z #raku <PimDaniel> MasterDuke53: Like told me somebody here (you may be) i  gitcloned the main package, went in the directory, then zef installed only its dependencies. Now i can play with the main package.

[11:44] *** brrt left
[11:54] <nine> Yep, easily reproducable:

[11:54] <nine> m: sub foo(Num $version) { $version ?? 1 !! 0 }; for ^100000 { foo(Num); }

[11:54] <evalable6> nine, rakudo-moar 0a25b1260: OUTPUT: «(signal SIGSEGV) »

[11:55] <nine> If I remove that MVM_OP_unbox_n optimization however, the error changes to "Cannot unbox a type object (Num) to a num."

[11:57] <MasterDuke> m: sub foo(Int $version) { $version ?? 1 !! 0 }; for ^100000 { foo(Int); }

[11:57] <evalable6> MasterDuke, rakudo-moar 0a25b1260: OUTPUT: «»

[12:28] <lizmat> nine: segfault confirmed on MacOS

[12:28] <tellable6> 2021-02-02T09:11:30Z #raku <PimDaniel> lizmat Hi lizmat! How can i install locally your code  https://github.com/lizmat/List-AllUtils with dependencies?  , i need to play with it. Thank's in advance.

[12:28] <nine> MasterDuke: that's curious. If you look at the spesh function in src/6model/reprs/P6opaque.c neither for MVM_OP_unbox_i nor for MVM_OP_unbox_n we check if the object is concrete. Yet the Num case segfaults while the Int case passes

[12:29] <lizmat> maybe a type object is Inty enough ?

[12:30] <MasterDuke> no error with Str either

[12:33] *** zakharyas left
[12:36] <nine> We probably just don't get there because of other optimizations (which may apply to Int and Str but not Num)

[12:37] <nine> In that case the Int and Str code would be equally wrong

[12:51] <nine> Ah, yes. The difference is in optimize_istrue_isfalse. That doesn't support Str at all and for MVM_BOOL_MODE_UNBOX_INT it has a if (!guaranteed_concrete) return; safe guard, but for MVM_BOOL_MODE_UNBOX_NUM it doesn't. So it goes on to generate sp_p6oget_n, sp_istrue_n, unless_i

[12:51] <nine> For the other cases it's just istrue, unless_i

[14:10] *** zakharyas joined
[14:43] <MasterDuke> well, it's no great surprise, but if i comment out the call to MVM_spesh_candidate_discard_one then i can build rakudo just fine

[14:47] <MasterDuke> if i don't comment it out, but just comment out the MVM_spesh_arg_guard_destroy and two MVM_fixed_size_free_at_safepoints inside it, still segfault/MVM_panic

[14:51] *** MasterDuke left
[14:54] <jnthn> Hm, so that means at least now the problem is in the discard, but the logging works out OK

[14:57] *** MasterDuke joined
[14:59] <MasterDuke> i tried the trick of following the value of frame->work[i].o back in time, but it didn't reveal anything to me

[16:24] <MasterDuke> just tried commenting out the spesh_graph_destroy and the fixed_size_frees and instead added `memset(cands_and_arg_guards->spesh_candidates, 0xfd, (new_num + 1) * sizeof(MVMSpeshCandidate *));`, but don't see any 0xfds in the backtrace

[16:51] <MasterDuke> anybody have a brilliant suggestion for debugging? doesn't even have to be brilliant, just better than mine (low bar!)

[17:09] *** domidumont left
[18:53] *** MasterDuke left
[19:12] *** patrickb joined
[19:17] *** MasterDuke joined
[19:26] *** zakharyas left
[19:33] <lizmat> SN9 enthusiasts: 27 mins to launch

[19:36] <El_Che> can be buy tickets to Mars yet? :)

[19:37] <El_Che> (Damn The Expanse, giving me ideas)

[19:44] <moritz> El_Che: I'm sure somebody will sell you a ticket :-)

[19:45] <El_Che> aha

[19:45] <El_Che> excellent point

[20:11] <nine> lizmat: so which of the plethora of live streams are you watching?

[20:11] <lizmat> https://www.youtube.com/watch?v=wfHqbahPKpY

[20:12] <nine> Ah, got that on my laptop. On the big scren I have Everyday Astronaut

[20:12] <nine> Everyday Astronaut

[20:13] <nwc10> for me "Video Unavailable"

[20:17] <nwc10> aha, that seems to be Chromium being confused between tabs/windows

[20:17] <nwc10> "Don't cross the streams"

[20:24] <nwc10> https://www.youtube.com/watch?v=_zZ7fIkpBgs

[20:24] <nwc10> 27s

[20:26] <El_Che> it's up

[20:32] <[Coke]> OOPS

[20:32] <MasterDuke> doh

[20:32] <nine> bug!

[20:32] <El_Che> "I told you not ti devide by zero!"

[20:33] <[Coke]> ha. "technically it did land"

[20:33] <lizmat> rud

[20:34] <lizmat> "We'll be back with another starship in the near future"  :-)

[20:34] <El_Che> the commentator was all the time talkign about the "belly flop" while in the air

[20:34] <MasterDuke> i'm amused every time i see those, they look so simple, like a kids craft project

[20:34] <El_Che> yep

[20:34] <nwc10> "another starship" - there, sitting waiting on the other stand

[20:34] <nwc10> (does not have engines yet)

[20:35] <lizmat> Wendy was looking as well:  "did you see those ugly rivets?"  :-)

[20:35] <El_Che> they have enough pieces now

[20:35] <nine> Imagine having to close the road and evacuate the village every time you want to run tests...

[21:01] *** zakharyas joined
[21:02] <El_Che> working on "nines" coredump feature, I see something weird. fedora:rawhide and alpine:edge fail the moarvm compilation

[21:02] <El_Che> while running the debug option (--debug --optimize=0) and verbose tests the error don't occur

[21:02] <El_Che> https://github.com/nxadm/rakudo-pkg/runs/1817741553?check_suite_focus=true#step:8:1155

[21:03] <El_Che> and https://github.com/nxadm/rakudo-pkg/runs/1817741536?check_suite_focus=true#step:8:97

[21:07] <MasterDuke> looks all green to me

[21:08] <El_Che> that's the point

[21:08] <El_Che> without "debug¨ it fails

[21:08] <MasterDuke> oh. ha

[21:08] <MasterDuke> any logs of those?

[21:09] <El_Che> yes https://github.com/MoarVM/MoarVM/issues/1424 and https://github.com/MoarVM/MoarVM/issues/1425

[21:13] <MasterDuke> probably beyond my level of expertise

[21:13] <El_Che> The "other" build is always green because I kind of skip it as far as I can with github actions

[21:14] <El_Che> so if DEBUG_BUILD is set in the version.sh file in the repo, it will build in the debugbuild job and test and skip the normal build-and-package

[21:14] <El_Che> (and the other way round)

[21:15] <El_Che> I can build both at the same time, but 50 builds would take to long to be userfriendly 

[21:15] <El_Che> except if devs think it's useful in DEBUG_BUILD

[21:15] <El_Che> I'll just skip the debugbuild job when DEBUG_BUILD!=1

[21:16] <El_Che> so if someone has opinions: welcome :)

[21:16] <MasterDuke> might be nice to have one or two jobs that also set some of the advanced debug options in moarvm. e.g., GC_DEBUG, FSA_DEBUG

[21:17] <El_Che> we can set it in config

[21:17] <MasterDuke> bunch of those requiring editing #defines in the source though

[21:17] <El_Che> well, the regular user not setting DEBUG_BUILD is me, when releasing packages

[21:18] <El_Che> so we can make the debug build as complicated as we need it to be

[21:20] <MasterDuke> i'd get input from more people than just me about what would be good

[21:20] <El_Che> that would be great

[21:23] <El_Che> ATM the variables in the setup are components versions (rakudo,npqp,moarvm,zef), components commits (preceded by @) and combinations and a DEBUG_BUILD var that changes the moarvm configure options and set tests to verbose

[21:24] <El_Che> I think I cracked the keeping cores of segfaults problem, but I need to verify it

[21:24] <El_Che> so far no cores :)

[21:25] <El_Che> the artifacts of a DEBUG_BUILD run is a tag.gz of the sources and the cores

[21:25] <El_Che> without DEBUG_BUILD, also the packages

[21:28] <MasterDuke> i assume you could edit some moarvm source files if DEBUG_BUILD is set?

[21:29] <El_Che> I could do a perl -pi

[21:29] <El_Che> yes

[21:31] <El_Che> EDIT_SRC_CMD="perl -pi -e 's/foo/fa' moarvm/src/foo.h"

[21:31] <El_Che> could be an option

[22:11] *** zakharyas left
[22:28] <cog__> Starship looks just like special effects of a low budget sci-fi flick of the 70s :).  Where is 2001 a space odyssey with Pan Am flight attendants ?

[22:29] <cog__> Probably the Pan Am reference is lost on most people today.

[22:38] <cog__> Oops, another unscheduled fast disassembly

[22:42] <cog__> Who am I too joke about starship when I am back from the emergency room for a unscheduling meeting of my face with a curb. Fixed with a few stitches. Damn glasses and mask.

[22:42] <El_Che> authc

[22:42] <El_Che> ch

[22:43] *** patrickb left
[22:44] <jnthn> cog__: Urgh, that sounds unpleasant. Hope you heal up quickly enough.

[22:44] <jnthn> And yes, glasses + mask + cold weather so they steam is no fun at all.

[22:46] <[Coke]> cog__: oof. hope you heal up quick

[22:46] <MasterDuke> heh, i've worn my glasses way more in the past 10 months since i haven't bothered putting in contacts every day. but if i know i'm going out somewhere and will need to wear a mask...the contacts go in

[22:52] <cog__> That was spectacular to the bystander, blood, but that was just a small cut. Well I learned how deep the system is disorganised by Covid. The first emergency hospital was not doing emergency anymore because they were doing vaccines. And the other was overloaded. Ho btw, the first one, Hotel Dieu, is scheduled  to be downsized to give place to commercial stores, close to cathedral Notre Dame. Macron gouvernent is a vulture.

[22:54] <El_Che> (great location, walked there a zillion of times )

[23:17] *** squashable6 left
[23:19] *** squashable6 joined
[23:33] *** MasterDuke left
[23:33] *** MasterDuke joined
