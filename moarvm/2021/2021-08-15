[00:12] <timo> well, the one that used to be the junction would be replaced with all the values from the junction in turn
[00:18] <[Coke]> need opcode docs for new items in new-disp
[00:21] *** greppable6 joined
[00:21] *** linkable6 joined
[00:22] *** releasable6 joined
[00:22] *** bisectable6 joined
[00:22] *** squashable6 joined
[00:23] *** quotable6 joined
[00:31] <timo> do you happen to have a little list of the ops without docs ready to go?
[00:32] <[Coke]> dispatch being the obvious one.
[00:33] <timo> right, that one is ... trivial! :P
[00:34] <timo> it's kind of the rest of the machinery that's complicated i guess
[00:35] <[Coke]> Looks like time_i and time_n were deleted but not removed from the docs, guessing that's on master.
[00:35] <[Coke]> I thought more opcodes were deleted, but I guess they weren't documented already.
[00:36] <[Coke]> https://gist.github.com/coke/72cc6871d5fa5d6af54ad02b48cde536 are the test failures on the new-disp branch.
[00:36] <[Coke]> but we weren't passing it 100% on master.
[00:39] <timo> many things were deleted for moarvm only
[00:40] <timo> it doesn't seem like this got all the ops for dispatch in it tho?
[00:42] <timo> ooh
[00:42] <timo> those that i was assuming would be ops are actually all dispatchers of their own
[00:43] <[Coke]> https://gist.github.com/coke/72cc6871d5fa5d6af54ad02b48cde536#file-master-new-diff
[00:43] <timo> documentation for dispatch: "calls a dispatcher named by the first argument. the rest of the arguments vary per dispatcher" :P
[00:44] <[Coke]> those are the failure diffeerences between the two; Looks like several ops that were deleted for moarvm were not deleted for other backends, so they're still missing, but from moar's standpoint, that's fine.
[00:45] <[Coke]> You could probably get away with that if we had a separate doc in repo that was similar to jnthn's presentation.
[00:45] <[Coke]> and it was linked.
[01:02] <timo> if not, then i guess all the boot dispatchers go in the ops.md now? :P
[01:05] *** reportable6 joined
[01:07] <[Coke]> No, I'd rather have a separate doc about how dispatch works.
[01:21] *** committable6 joined
[01:22] *** shareable6 joined
[03:39] *** linkable6 left
[03:39] *** evalable6 left
[03:39] *** releasable6 left
[03:41] *** linkable6 joined
[04:10] *** frost joined
[04:41] *** evalable6 joined
[05:40] *** releasable6 joined
[06:03] *** reportable6 left
[07:04] *** reportable6 joined
[07:33] <nine> Actually dispatch also takes a callsite argument. And the arg list starts with the result register (except for dispatch_v)
[07:33] <nine> As a reader of the docs I'd wonder: what is this callsite argument? What would I need to pass there.
[07:39] <timo> you can't
[07:40] <nine> ?
[07:41] <timo> callsites aren't a thing in the nqp language
[07:41] <timo> just by writing a call to a dispatcher, the callsite is generated
[07:42] <timo> am i wrong?
[07:43] <nine> Well, true. It always depends on which layer you're looking at
[07:43] <timo> indeed
[07:43] <timo> i think the nqp ops docs are for writers (or rather, readers) of nqp code?
[07:43] <timo> or are they for readers of spesh logs?
[07:43] <nine> So we actually don't have docs for the interface to MoarVM
[07:43] <timo> the sp_ ops don't appear there, right?
[07:43] <nine> right
[07:44] <timo> i'd think of the callsite argument as an implementation detail for how var args ops are built
[07:52] <nine> Well, sometimes it'd be quite helpful for e.g. implementors to document such implementation details :)
[09:14] *** evalable6 left
[09:14] *** linkable6 left
[09:15] *** evalable6 joined
[09:15] *** linkable6 joined
[09:45] *** dogbert11 joined
[09:47] *** dogbert17 left
[09:51] <lizmat> I would be willing to document all of these ops...  with a little help from my friends  :-)
[11:42] *** linkable6 left
[11:43] *** linkable6 joined
[11:55] *** frost left
[11:56] *** frost left
[11:59] *** squashable6 left
[12:02] *** reportable6 left
[12:05] *** reportable6 joined
[13:01] *** squashable6 joined
[15:04] *** squashable6 left
[16:04] *** evalable6 left
[16:04] *** linkable6 left
[16:06] *** linkable6 joined
[16:07] *** squashable6 joined
[17:07] *** coverable6 left
[17:07] *** committable6 left
[17:07] *** notable6 left
[17:07] *** shareable6 left
[17:07] *** statisfiable6 left
[17:07] *** reportable6 left
[17:07] *** bisectable6 left
[17:07] *** nativecallable6 left
[17:07] *** releasable6 left
[17:07] *** linkable6 left
[17:07] *** bloatable6 left
[17:07] *** tellable6 left
[17:07] *** unicodable6 left
[17:08] *** nativecallable6 joined
[17:08] *** shareable6 joined
[17:08] *** bloatable6 joined
[17:09] *** tellable6 joined
[17:09] *** committable6 joined
[17:09] *** coverable6 joined
[18:09] *** notable6 joined
[18:09] *** releasable6 joined
[18:10] *** bisectable6 joined
[18:21] <[Coke]> ++'s for everyone.
[19:06] *** evalable6 joined
[19:08] *** unicodable6 joined
[20:05] *** reportable6 joined
[20:08] *** linkable6 joined
[20:10] *** statisfiable6 joined
[21:23] *** lizmat left
[21:24] *** lizmat joined
[22:37] *** RakuIRCLogger joined
[22:40] *** Geth left
[22:40] *** Geth joined
[23:31] *** RakuIRCLogger left
[23:33] *** lizmat left
[23:34] *** lizmat joined
[23:40] *** RakuIRCLogger joined
