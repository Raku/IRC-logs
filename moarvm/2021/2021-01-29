[00:19] *** timotimo left
[00:20] *** timotimo joined
[00:44] *** Kaeipi joined
[00:47] *** Kaiepi left
[01:11] *** squashable6 left
[01:12] *** squashable6 joined
[02:02] *** MasterDuke left
[05:46] *** Geth left
[05:46] *** timotimo left
[05:46] *** timotimo joined
[07:50] *** patrickb joined
[08:00] *** domidumont joined
[08:11] <nwc10> good *, #moarvm 

[08:11] <nwc10> 3 months later, still no update: https://blog.pyston.org/

[08:12] <nwc10> (monetising infrastructure assumed to be free is hard. Let's go shopping)

[08:35] <moritz> good morning, nwc10, *

[08:35] *** Geth joined
[08:36] <moritz> yes, maintaining a separate compiler/JIT/VM is really quite some work, thankless and hard to get paid for

[08:37] <moritz> there are several such projects in the python world, and whenever I try them, they don't quite work for my use case

[08:37] <moritz> nuitka is one of those

[08:38] <nwc10> I've heard of that one, but (like all of them) not tried it, and I forget exactly what it does. Static compiler to C?

[08:39] <nwc10> IIRC it's the one that Guido has dumped on. At least, the only one that I remember that Guido actually noticed enough to say that he thought something about it was not actually a sustainable idea. (But I forget why or when)

[08:44] <moritz> yes, that's the python to C compiler

[08:46] <moritz> and it just had another release 4 days ago. Noice

[09:02] *** zakharyas joined
[10:19] <jnthn> good *

[10:19] <jnthn> So...can I assemble the new coffee machine before it has produced a cup of coffee?

[10:28] <nwc10> this is a bootstrapping problem?

[10:29] <jnthn> Pretty much

[10:31] <nwc10> in normal times this would not a problem - you'd just pop out to a nearby cafe for a "DR site" coffee

[10:57] <jnthn> OK, there is coffee in my cup. It's only half full, and I can't yet figure out how to resolve that.

[10:57] <nwc10> redundant array of inexpensive cups?

[10:58] <nwc10> just iterate on half cups until you find a solution?

[10:58] <nwc10> find inspiration, I meant

[10:59] <jnthn> The original one was a lever-style one and I just had a water on/off switch and waited until the cup was full

[10:59] *** squashable6 left
[11:00] <jnthn> This is one of the fancy automatic ones that I can - once I finish my supply of ground coffee - put beans in and get freshly ground. But it wants to own the whole process. :)

[11:00] <jnthn> Hm, this does paste pretty good at least.

[11:00] <nwc10> no, don't *paste* coffee. It will ruin your keyboard

[11:01] <jnthn> oops, *taste

[11:01] <jnthn> apparently I need to drink more of it :)

[11:01] <nwc10> yes.

[11:01] <nwc10> have you firewalled it yet?

[11:02] *** squashable6 joined
[11:04] <jnthn> I...I don't think it tries to connect to the internets. But given half the washing machines I found when I was shopping for one of those last year did, maybe I should be worried... :)

[11:04] <jnthn> Why do I want my washing machine online?!

[11:04] <nwc10> so that someone else can mine bitcoin with it!

[11:04] <nwc10> well, d'oh!

[11:06] <jnthn> OK, so finally I'm maybe ready to write some code... :)

[11:06] <nwc10> I was misremembering. CVE-2017-7240 was a *dishwasher*, not a washing machine.

[11:07] *** Kaeipi left
[11:08] <nwc10> oh, actually it's more fun than that. I hadn't read this official grovelling admission before: https://www.miele.de/en/m/miele-admits-communication-glitch-4072.htm

[11:08] <jnthn> aha, I found how you configure cup size, so I can get a full cup soon :)

[11:09] *** Kaeipi joined
[11:20] *** Kaeipi left
[11:21] *** Kaeipi joined
[12:01] *** zakharyas left
[12:09] *** Geth left
[13:00] *** cog__ left
[13:01] *** cog__ joined
[13:37] *** lucasb joined
[13:40] <[Coke]> whew

[13:45] *** ggoebel joined
[13:48] <ggoebel> our coffee machine recently gave up the ghost too. Only 5 years old. Our experience has been that the more complicated the coffee machine is, the shorter it lasts. We now use a hot water kettle and french press. 

[13:51] <jnthn> Darn, this new one is more complicated than the 13-year one it replaces :)

[13:51] <[Coke]> I do miss the "going to work" part of the day where you could pick up a coffee on the way (I switched to mostly work from home even before the pandemic)

[13:55] <jnthn> I suspect the old one may well be fixable by somebody with some sort of clue what they're doing (or me if I researched it a bit); it seems like a rubber seal has decayed

[14:53] <jnthn> OK, so..."just" the stateful bit of dispatch resumptions to go, and then in theory I have enough to write a test case for a dispatcher doing basic method deferral

[14:54] * jnthn wonders how long until he sees the light at the end of the new-disp tunnel...

[15:16] *** zakharyas joined
[16:00] *** linkable6 left
[16:01] *** linkable6 joined
[16:33] *** samcv left
[16:33] *** samcv joined
[16:53] *** linkable6 left
[16:53] *** linkable6 joined
[17:25] *** domidumont left
[18:58] <nwc10> nine: I think I have it figured out. If you look at the camera lean on https://www.youtube.com/watch?v=hpqoqJxbNpw&t=0s currently - when SN9 "fell over", it was only trying to get vertical.

[19:47] *** MasterDuke joined
[19:48] <MasterDuke> https://www.sba-research.org/wp-content/uploads/publications/ecoop10.pdf i just gave it a quick skim, but it looks kind of like the specializations spesh does?

[20:16] *** MasterDuke left
[20:18] *** MasterDuke joined
[20:22] *** Kaeipi left
[20:23] *** Kaeipi joined
[20:35] <jnthn> MasterDuke: I've looked through that one before, and yes, it's in the same solution space

[20:46] <MasterDuke> ah ha, glad i'm not completely off base

[20:58] *** Kaeipi left
[20:59] *** Kaeipi joined
[21:00] *** zakharyas left
[21:29] * jnthn is gradually starting to feel comfortable with the dispatch resumption design that he's implementing

[21:30] <jnthn> The pieces I've put in place today have each worked first time (silly thinkos aside, but really I mean there weren't any unexpected design issues).

[21:30] <jnthn> And I can see how they'll handle the gnarly stuff like nextcallee and lastcall

[21:33] <nwc10> [Coke]: actually, my definition wasn't quite accurate - Wet Dress Rehersal is where you test everything about your launch process, right up to the point of (not) lighting the engines. With real fuel.

[21:34] <nwc10> side effect (obviously) is that you also get to test the "how to make it safe again" process that you'd have if your (for real) launch aborts before ignition.

[21:35] <jnthn> I'm also fairly happy that in a steady state of deferrals it can be allocation free, and that it will let us do the calculation of the method to defer through once-ish per `callsame` site and cache it, rather than having to calculate it every time.

[21:35] <jnthn> Plus that the dispatch programs it stacks up at the inline caches will provide information that will let us do specialization linking and, where size allows, inlining.

[21:36] <jnthn> A couple of unknowns on inlining still remain, though nothing that overly worries me

[21:36] <nine> nwc10: that's an.....explanation :D

[21:48] <MasterDuke> jnthn: so mostly a smop left?

[22:03] *** El_Che joined
[22:04] <El_Che> Hi, I am able to build moarvm on 20+ distro/version combinations, except on Fedora Rawhide (the dev, next-to-be-latest OS): https://github.com/nxadm/rakudo-pkg/runs/1794747938?check_suite_focus=true#step:5:308

[22:05] <El_Che> Now building rakudo on the released fedoras 31 and 32

[22:10] <MasterDuke> El_Che: it looks like the 3rdparty/libatomicops submodule didn't get clones/pulled somehow?

[22:11] <El_Che> no

[22:11] <El_Che> I download the tag.gz in an action before running the container

[22:11] <El_Che> and all the containers get the same tar.gz

[22:11] <El_Che> (a copy)

[22:12] <MasterDuke> huh. then i really couldn't say

[22:12] <El_Che> same here 

[22:12] <El_Che> :)

[22:14] <El_Che> fedora 31 builds fine

[22:22] *** raku-bridge2 joined
[22:23] *** raku-bridge2 is now known as raku-bridge

[22:33] *** linkable6 left
[22:37] *** squashable6 left
[22:46] <jnthn> No guesses either, fwiw. It's the same tarball used over all distros? Is it reproducible?

[22:46] *** bisectable6 left
[22:46] *** coverable6 left
[22:47] *** statisfiable6 left
[22:47] *** quotable6 left
[22:47] *** committable6 left
[22:47] *** unicodable6 left
[22:47] *** greppable6 left
[22:47] *** notable6 left
[22:47] *** evalable6 left
[22:47] *** sourceable6 left
[22:47] *** shareable6 left
[22:47] *** benchable6 left
[22:47] *** tellable6 left
[22:47] *** nativecallable6 left
[22:48] <jnthn> MasterDuke: There's still some non-simple things to go, but at least by now I feel I'm making progress; when I last looked at this in the autumn I went through a bunch of designs that each didn't work 

[22:48] <jnthn> Even on paper, let alone in implementation 

[22:49] *** evalable6 joined
[22:49] *** benchable6 joined
[22:49] *** squashable6 joined
[22:50] *** shareable6 joined
[22:50] *** sourceable6 joined
[22:50] *** nativecallable6 joined
[22:50] *** statisfiable6 joined
[22:50] *** bisectable6 joined
[22:51] *** bloatable6 joined
[22:52] *** releasable6 joined
[22:53] <El_Che> jnthn: same file, reproducible

[22:53] <El_Che> my github flow is:

[22:54] <El_Che> - step 1: download the sources and keep them as artefacts

[22:54] <El_Che> - step 2: in parallel build the source for all the distros

[22:55] *** statisfiable6 left
[22:55] *** squashable6 left
[22:55] <El_Che> (fedora 32 builds fine as well)

[22:55] *** benchable6 left
[22:55] *** nativecallable6 left
[22:55] *** sourceable6 left
[22:55] *** shareable6 left
[22:55] *** evalable6 left
[22:56] *** releasable6 left
[22:56] <El_Che> so something changed between distros

[22:57] <El_Che> (we've seen it before in the past)

[22:57] *** bloatable6 left
[22:57] *** bisectable6 left
[22:58] *** notable6 joined
[23:00] <El_Che> I am trying to add the next-stable releases so we can catch things like that early on

[23:00] *** bisectable6 joined
[23:00] *** nativecallable6 joined
[23:00] *** statisfiable6 joined
[23:00] *** unicodable6 joined
[23:00] *** benchable6 joined
[23:00] *** squashable6 joined
[23:00] *** committable6 joined
[23:00] *** shareable6 joined
[23:01] <jnthn> El_Che: Thanks, it's really good to do that. 

[23:02] <jnthn> El_Che: I'm not surprised that things change between distros. I *am* surprised about this particular failure mode

[23:03] <El_Che> I told lizmat earlier, that the idea to allow to run it with commits for every components as well, eg moarvm/nqp releae 2020.12 and rakudo@acdsomehash

[23:04] <El_Che> fork the repo, edit the version file and push and the action will run

[23:04] <El_Che> work in progress :)

[23:04] *** bisectable6 left
[23:04] *** nativecallable6 left
[23:04] *** shareable6 left
[23:04] *** benchable6 left
[23:04] *** unicodable6 left
[23:04] *** squashable6 left
[23:04] *** statisfiable6 left
[23:04] *** committable6 left
[23:04] *** notable6 left
[23:11] *** tellable6 joined
[23:11] *** benchable6 joined
[23:11] *** nativecallable6 joined
[23:11] *** bisectable6 joined
[23:11] *** notable6 joined
[23:12] *** committable6 joined
[23:12] *** bloatable6 joined
[23:12] *** releasable6 joined
[23:12] *** quotable6 joined
[23:12] *** squashable6 joined
[23:12] *** statisfiable6 joined
[23:13] <El_Che> jnthn: alpine edge (dev release) fails earlier  while the released alpines build fine: https://github.com/nxadm/rakudo-pkg/runs/1795106357?check_suite_focus=true

[23:13] <El_Che> I think something like new coreutils

[23:13] <El_Che> I have seen it before

[23:14] <El_Che> when errors don't make sense, look at the build tooling :)

[23:15] <jnthn> hah, that's an interesting one :d

[23:15] <jnthn> *:D

[23:15] <El_Che> I meant binutils

[23:15] <El_Che> I did this for the 2020 release:

[23:15] *** benchable6 left
[23:15] *** bisectable6 left
[23:15] *** tellable6 left
[23:15] *** nativecallable6 left
[23:15] <El_Che> # binutils bug

[23:15] <El_Che> wget \

[23:15] <El_Che> http://de.archive.ubuntu.com/ubuntu/pool/main/b/binutils/binutils_2.35.1-1ubuntu1_amd64.deb && \

[23:15] <El_Che> dpkg -i *.deb && rm -rf *.deb &&

[23:15] *** notable6 left
[23:15] <El_Che> retrieved deb from an older ubuntu release

[23:17] *** statisfiable6 left
[23:17] *** committable6 left
[23:17] *** bloatable6 left
[23:17] *** releasable6 left
[23:17] *** quotable6 left
[23:17] *** squashable6 left
[23:19] *** bisectable6 joined
[23:19] *** benchable6 joined
[23:19] *** quotable6 joined
[23:19] *** committable6 joined
[23:19] *** notable6 joined
[23:19] *** statisfiable6 joined
[23:19] *** squashable6 joined
[23:21] <El_Che> all builds with the 2 aforemetioned disabled: https://github.com/nxadm/rakudo-pkg/actions/runs/522238929

[23:22] *** bloatable6 joined
[23:25] <El_Che> all green, I like that :)

[23:30] *** benchable6 left
[23:30] *** bisectable6 left
[23:30] *** bloatable6 left
[23:30] *** notable6 left
[23:31] *** quotable6 left
[23:31] *** committable6 left
[23:31] *** statisfiable6 left
[23:31] *** squashable6 left
[23:46] *** ggoebel left
[23:48] *** ggoebel joined
[23:49] *** benchable6 joined
[23:49] *** bisectable6 joined
[23:49] *** committable6 joined
[23:49] *** notable6 joined
[23:49] *** squashable6 joined
[23:49] *** statisfiable6 joined
[23:49] *** bloatable6 joined
[23:49] *** greppable6 joined
[23:49] *** nativecallable6 joined
[23:49] *** quotable6 joined
[23:49] *** coverable6 joined
[23:49] *** tellable6 joined
[23:51] *** linkable6 joined
[23:51] *** shareable6 joined
[23:51] *** releasable6 joined
[23:51] *** sourceable6 joined
[23:51] *** unicodable6 joined
[23:59] *** evalable6 joined
