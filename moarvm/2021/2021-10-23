[00:01] <timo> a small grep would already get us very close, i think

[00:01] <timo> like grepping for "Inlining frame" with before-context of one line out of a grep of the whole file with lines "Before:" and the line before it as well as "Inlining frame"

[00:02] *** reportable6 left
[00:04] *** reportable6 joined
[00:04] *** Guest12 joined
[00:15] *** Guest12 left
[00:19] <japhb> Meanwhile I got the multithreaded attacks test working; my hunch was right and precaching all of the possible pixel combinations worked.

[00:20] <japhb> Current:

[00:20] <japhb> Min: 45.7 ms (21.9 fps) - Ave: 104.0 ms (9.6 fps) - Max: 324.4 ms (3.1 fps)

[00:20] <japhb> 50%: 97.8 ms - 75%: 131.3 ms - 90%: 151.3 ms - 95%: 161.8 ms - 99%: 286.7 ms

[00:22] <japhb> 2021.09:

[00:22] <japhb> Min: 60.2 ms (16.6 fps) - Ave: 135.0 ms (7.4 fps) - Max: 363.7 ms (2.7 fps)

[00:22] <japhb> 50%: 126.0 ms - 75%: 166.9 ms - 90%: 191.1 ms - 95%: 203.6 ms - 99%: 327.1 ms

[00:22] <japhb> So the improvement holds there as well, though perhaps not as starkly.

[00:34] <timo> all improvement is appreciated :)

[01:15] *** linkable6 left
[01:15] *** evalable6 left
[01:16] *** linkable6 joined
[01:18] *** evalable6 joined
[02:12] *** MasterDuke left
[02:19] *** SmokeMachine left
[02:19] *** SmokeMachine joined
[02:31] *** leont left
[02:32] *** leont joined
[03:36] *** benchable6 left
[03:36] *** quotable6 left
[03:36] *** releasable6 left
[03:36] *** statisfiable6 left
[03:36] *** nativecallable6 left
[03:36] *** coverable6 left
[03:36] *** unicodable6 left
[03:36] *** tellable6 left
[03:36] *** bisectable6 left
[03:36] *** reportable6 left
[03:36] *** committable6 left
[03:36] *** squashable6 left
[03:36] *** shareable6 left
[03:36] *** sourceable6 left
[03:36] *** linkable6 left
[03:36] *** bloatable6 left
[03:36] *** greppable6 left
[03:36] *** notable6 left
[03:36] *** evalable6 left
[03:37] *** coverable6 joined
[03:37] *** sourceable6 joined
[03:37] *** statisfiable6 joined
[03:37] *** nativecallable6 joined
[03:38] *** reportable6 joined
[03:39] *** tellable6 joined
[04:38] *** unicodable6 joined
[04:39] *** shareable6 joined
[04:39] *** bloatable6 joined
[04:39] *** greppable6 joined
[04:39] *** evalable6 joined
[05:38] *** linkable6 joined
[05:38] *** notable6 joined
[05:39] *** committable6 joined
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[06:38] *** bisectable6 joined
[06:40] *** benchable6 joined
[07:39] *** quotable6 joined
[07:40] *** releasable6 joined
[07:46] *** MasterDuke joined
[08:26] *** squashable6 joined
[10:35] <dogbert17> it's very silent here today

[10:36] * lizmat makes some noise as well :-)

[10:36] <dogbert17> anyway, there seems to be a flapper hiding in t/spec/S12-methods/lastcall.t, more specifically test #3

[10:36] <dogbert17> hello lizmat :)

[10:36] <dogbert17> ok 2 - sanity test for clearing

[10:37] <dogbert17> Can only use manipulate a capture known in this dispatch

[10:37] <lizmat> scare it out of hiding, I'd say!

[10:37] <dogbert17>   in method doit at t/spec/S12-methods/lastcall.t line 21

[10:38] <dogbert17> to repro, run 'MVM_SPESH_NODELAY=1 MVM_SPESH_BLOCKING=1 ./rakudo-m -Ilib t/spec/S12-methods/lastcall.t' a few times

[10:40] * sena_kun finished with a breakfast and looks at the release

[10:40] <dogbert17> ++sena_kun

[10:46] *** evalable6 left
[10:46] *** linkable6 left
[10:47] *** linkable6 joined
[10:48] *** evalable6 joined
[11:05] <dogbert17> some gdb output can be found here, https://gist.github.com/dogbert17/d3fee0f081bb30be355108854faa2f71

[11:06] <MasterDuke> what about an MVM_dump_backtrace(tc)?

[11:06] <dogbert17> MasterDuke: let's see ...

[11:06] <MasterDuke> oh, nm, it's already the first thing there

[11:07] <dogbert17> yeah, added it anyway :)

[11:08] <MasterDuke> what's `record->rec.resume_kind`?

[11:09] <dogbert17> MVMDispProgramRecordingResumeCaller

[11:12] <MasterDuke> so i guess the find_capture(...) returns false

[11:14] <dogbert17> so it would seem

[11:16] <dogbert17> btw, I'm running with a 20k nursery

[11:24] <dogbert17> now all we need is someone recommending rr :)

[11:30] <lizmat> maybe use rr ?

[11:30] <lizmat> .oO( always happy to oblige :-)

[11:45] <sena_kun> ouch, there is no merge commit for new-disp in moarvm?

[11:45] <sena_kun> hmm, I see there is not

[11:58] *** evalable6 left
[11:58] *** linkable6 left
[12:00] *** evalable6 joined
[12:02] *** reportable6 left
[12:05] *** reportable6 joined
[12:05] <sena_kun> [-Wunused-variable]

[12:05] <sena_kun>  6721 |         MVMCallStackRecord *csrecord  = MVM_callstack_allocate_nested_runloop(tc);

[12:14] <Geth> Â¦ MoarVM/2021.10: 48d35da340 | Altai-man++ | docs/ChangeLog

[12:14] <Geth> Â¦ MoarVM/2021.10: Update ChangeLog for 2021.10 release

[12:14] <Geth> Â¦ MoarVM/2021.10: review: https://github.com/MoarVM/MoarVM/commit/48d35da340

[12:14] <Geth> Â¦ MoarVM/2021.10: 23cc724d16 | Altai-man++ | VERSION

[12:14] <Geth> Â¦ MoarVM/2021.10: Bump VERSION for release

[12:14] <Geth> Â¦ MoarVM/2021.10: review: https://github.com/MoarVM/MoarVM/commit/23cc724d16

[12:14] <Geth> Â¦ MoarVM: Altai-man++ created pull request #1576: 2021.10 release

[12:14] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/pull/1576

[12:14] <Geth> Â¦ MoarVM: 48d35da340 | Altai-man++ | docs/ChangeLog

[12:14] <Geth> Â¦ MoarVM: Update ChangeLog for 2021.10 release

[12:14] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/48d35da340

[12:14] <Geth> Â¦ MoarVM: 23cc724d16 | Altai-man++ | VERSION

[12:14] <Geth> Â¦ MoarVM: Bump VERSION for release

[12:14] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/23cc724d16

[12:14] <Geth> Â¦ MoarVM: 07060faf14 | Altai-man++ (committed using GitHub Web editor) | 2 files

[12:15] <Geth> Â¦ MoarVM: Merge pull request #1576 from MoarVM/2021.10

[12:15] <Geth> Â¦ MoarVM: 

[12:15] <Geth> Â¦ MoarVM: 2021.10 release

[12:15] <Geth> Â¦ MoarVM: review: https://github.com/MoarVM/MoarVM/commit/07060faf14

[12:31] <jnthnwrthngtn> sena_kun: There was a merge commit for new-disp, it's 962e835dc1

[12:34] <sena_kun> a bit too late. :P

[12:34] <sena_kun> MoarVM release is done.

[12:38] <jnthnwrthngtn> :)

[12:39] <jnthnwrthngtn> For future reference, `git log --merges --oneline` is an easy way to see all the merge commits

[12:40] <jnthnwrthngtn> timo: For just seeing what gets inlined, MVM_SPESH_INLINE_LOG=1 in the environment will spit inlines out on stderr, and is far cheaper (so doesn't disrupt the program so much) as a spesh log. Sadly, though, also doesn't give that much insight into why.

[12:41] <timo> ooh, of course

[12:50] *** frost left
[12:59] *** linkable6 joined
[14:50] *** evalable6 left
[14:50] *** linkable6 left
[15:51] *** evalable6 joined
[15:53] *** linkable6 joined
[17:33] *** linkable6 left
[17:33] *** evalable6 left
[17:34] *** evalable6 joined
[18:02] *** reportable6 left
[18:05] *** reportable6 joined
[18:34] *** linkable6 joined
[20:41] *** linkable6 left
[20:41] *** evalable6 left
[20:55] *** squashable6 left
[20:56] *** squashable6 joined
[21:43] *** linkable6 joined
[23:02] *** Kaiepi left
[23:19] *** discord-raku-bot left
[23:19] *** discord-raku-bot joined
[23:44] *** evalable6 joined
