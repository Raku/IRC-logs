[00:02] *** reportable6 left
[00:02] *** reportable6 joined
[00:51] *** lucasb left
[02:02] *** frost-lab joined
[04:16] *** bisectable6 left
[04:16] *** bloatable6 left
[04:16] *** statisfiable6 left
[04:16] *** unicodable6 left
[04:16] *** benchable6 left
[04:16] *** shareable6 left
[04:16] *** committable6 left
[04:16] *** squashable6 left
[04:16] *** coverable6 left
[04:16] *** greppable6 left
[04:16] *** notable6 left
[04:16] *** releasable6 left
[04:16] *** linkable6 left
[04:16] *** quotable6 left
[04:16] *** tellable6 left
[04:16] *** sourceable6 left
[04:16] *** reportable6 left
[04:16] *** nativecallable6 left
[04:16] *** evalable6 left
[04:16] *** bloatable6 joined
[04:17] *** bisectable6 joined
[04:17] *** benchable6 joined
[04:17] *** evalable6 joined
[04:17] *** squashable6 joined
[04:17] *** unicodable6 joined
[04:17] *** tellable6 joined
[04:17] *** quotable6 joined
[04:18] *** committable6 joined
[04:18] *** releasable6 joined
[04:18] *** greppable6 joined
[04:18] *** notable6 joined
[04:18] *** sourceable6 joined
[04:18] *** shareable6 joined
[04:18] *** statisfiable6 joined
[04:19] *** reportable6 joined
[04:19] *** coverable6 joined
[04:19] *** nativecallable6 joined
[04:19] *** linkable6 joined
[05:23] <nwc10> good *, #moarvm 

[06:01] *** reportable6 left
[06:03] *** reportable6 joined
[06:25] <nine> Good morning!

[06:39] *** domidumont joined
[06:39] *** dogbert17 left
[06:41] *** dogbert17 joined
[06:44] *** dogbert11 joined
[06:47] *** dogbert17 left
[06:53] *** squashable6 left
[06:57] *** squashable6 joined
[07:39] *** zakharyas joined
[08:55] *** Altai-man_ left
[08:57] *** sena_kun joined
[09:05] *** zakharyas left
[09:11] *** dogbert17 joined
[09:15] *** dogbert11 left
[09:33] <jnthn> morning o/

[09:33] <nwc10> \o

[09:59] <nwc10> The XBox "thing" referenced some weeks ago was https://xboxdevwiki.net/17_Mistakes_Microsoft_Made_in_the_Xbox_Security_System and https://www.youtube.com/watch?v=9NqLljaHc80

[10:00] <nwc10> That talk *is* actually watchable (and fun and worth it) even if the start gives some very bad vibes (240p, just one camera from the back and unclear where the microphone is)

[10:17] *** dogbert11 joined
[10:19] *** squashable6 left
[10:20] *** squashable6 joined
[10:20] *** dogbert17 left
[10:24] *** zakharyas joined
[10:25] *** dogbert17 joined
[10:28] *** dogbert11 left
[11:02] *** MasterDuke joined
[11:07] *** dogbert17 left
[11:07] *** dogbert17 joined
[11:38] *** zakharyas left
[11:44] *** MasterDuke left
[11:44] *** MasterDuke joined
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:15] <timotimo> https://media.ccc.de/v/22C3-559-en-xbox_hacking this could very well be better

[12:16] <timotimo> same person presenting the xbox part as in the google tech talk, with a bonus xbox 360 part by another person

[12:17] <timotimo> what on earth, this is also 240p

[12:17] <nwc10> https://xboxdevwiki.net/17_Mistakes_Microsoft_Made_in_the_Xbox_Security_System doesn't link to that, but to the YouTube, probably the same. The other link is described as: Another recording of a slightly updated talk is available here: YouTube: Deconstructing The Xbox Security System 

[12:17] <nwc10> I haven't watched both to figure out what the "slightly updated" meant

[12:18] <nwc10> timotimo: I forget which conference it was, where Tim Bunce tried the projector, and said roughly "Wow, this thing can actually match the resulotion of my laptop"

[12:18] <timotimo> :D

[12:19] <nwc10> and that was some years ago. Prior to that, we were not living in the future

[12:19] <nwc10> the most evil thing that *I* was told about beamers was that they would *claim* to support 1024x768 (or whatever it is) but actually downscale to about 900xsomethi9ng

[12:19] <nwc10> and produce fuzzy crap

[12:19] <nwc10> whereas forcing the laptop to talk 800x600 to the beamer would make everything sharp and actually look better.

[12:20] <timotimo> tee hee

[12:20] <nwc10> so it doesn't surprise me that cameras were recording in 240p

[12:20] <timotimo> when i want stuff to be really really sharp, i set my resolution to 16k x 16k and increase the dpi so that everything is rendered bigger too

[12:20] <timotimo> so i get multisampled antialiasing

[12:21] <timotimo> just kidding, i haven't actually tried the "increase dpi" part of that

[12:22] <timotimo> but it's very funny that i can just use the biggest size that the GPU will offer with a monitor that can't

[12:25] <MasterDuke> ugh, i still can't find a monitor i want (caveat-ed with...and am willing to pay for)

[12:36] <timotimo> by now i don't even see the single pixel vertical line that's broken on my left monitor any more

[12:36] *** zakharyas joined
[12:39] <MasterDuke> timotimo: change of topic. i saw your comment about how slow it was to get a stack trace with tracey. istr its docs saying something about -fno-omit-frame-pointer (which we don't set), do you know if that would make a difference?

[12:43] <timotimo> i set that in my local makefile, or at least i think i did

[12:43] <timotimo> yes, i did set that

[12:44] <timotimo> thing is, i was taking stacks every time a piece of memory from the fsa was allocated or freed

[12:44] <MasterDuke> oh, ha

[12:44] <MasterDuke> heaptrack will show you that

[12:44] <timotimo> if you have very small frames getting called, that's an alloc and a free extremely close together, and if you have a tight loop or something, it'll be extremely many calls per second

[12:44] <MasterDuke> but yes, it slows things down

[12:45] <timotimo> does heaptrack track every single allocation's lifetime, too?

[12:46] <MasterDuke> i think so. it has a stat it calls temporary allocations

[12:46] <timotimo> because in tracy you can see for any given address (doesn't have to be an actual memory address, can be any value as long as they aren't re-used and only freed after allocation and such) when (in time) and where (in stacktrace) it was allocated and freed

[12:48] <MasterDuke> it might just track it enough to decide whether it considers it temporary or not, i don't think you can see *when* individual alloc/free happen

[12:50] <timotimo> in any case, i love that visualization tracy has for allocations and frees in the "memory map"

[12:50] <MasterDuke> yeah, heaptrack doesn't have that

[12:50] <timotimo> and of course scrubbing through the timeline is fun

[13:30] *** frost-lab left
[13:46] *** dogbert17 left
[13:47] *** dogbert17 joined
[14:10] *** squashable6 left
[14:12] *** squashable6 joined
[14:32] *** dogbert17 left
[14:32] *** dogbert17 joined
[15:27] *** lucasb joined
[15:46] *** dogbert11 joined
[15:50] *** dogbert17 left
[16:51] *** zakharyas left
[17:03] *** dogbert11 left
[17:04] *** dogbert11 joined
[17:08] *** domidumont left
[17:16] *** zakharyas joined
[17:34] *** dogbert11 left
[17:35] *** dogbert11 joined
[17:42] *** zakharyas left
[17:42] *** dogbert11 left
[17:46] *** Kaiepi left
[17:46] *** Kaiepi joined
[17:46] *** dogbert11 joined
[17:48] *** dogbert17 joined
[17:51] *** dogbert11 left
[17:57] *** dogbert17 left
[17:58] *** brrt joined
[17:58] *** dogbert17 joined
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[18:26] *** dogbert11 joined
[18:28] *** dogbert17 left
[18:29] *** brrt left
[18:36] *** patrickb joined
[18:38] *** dogbert17 joined
[18:41] *** dogbert11 left
[18:56] *** Kaiepi left
[18:56] *** Kaiepi joined
[19:04] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/05/10/2021-19-out-of-beta-pod/

[19:58] *** zakharyas joined
[20:44] *** zakharyas left
[21:04] *** patrickb left
[21:31] *** MasterDuke left
[21:32] *** MasterDuke joined
[22:42] *** dogbert11 joined
[22:46] *** dogbert17 left
[23:19] *** Kaiepi left
[23:20] *** Kaiepi joined
