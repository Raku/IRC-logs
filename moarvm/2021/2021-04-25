[02:54] *** MasterDuke left
[04:18] *** shareable6 left
[04:18] *** bloatable6 left
[04:18] *** notable6 left
[04:18] *** unicodable6 left
[04:18] *** quotable6 left
[04:18] *** committable6 left
[04:18] *** bisectable6 left
[04:18] *** linkable6 left
[04:18] *** nativecallable6 left
[04:18] *** benchable6 left
[04:18] *** releasable6 left
[04:18] *** statisfiable6 left
[04:18] *** tellable6 left
[04:18] *** greppable6 left
[04:18] *** unicodable6 joined
[04:19] *** committable6 joined
[04:19] *** statisfiable6 joined
[04:19] *** greppable6 joined
[04:20] *** shareable6 joined
[04:20] *** benchable6 joined
[04:20] *** quotable6 joined
[04:21] *** releasable6 joined
[05:02] *** coverable6 joined
[06:16] *** japhb left
[06:19] *** japhb joined
[07:54] *** MasterDuke joined
[12:04] *** ChanServ left
[12:08] *** ChanServ joined
[12:08] *** kornbluth.freenode.net sets mode: +o ChanServ

[12:32] *** ChanServ left
[12:34] *** ChanServ joined
[12:34] *** kornbluth.freenode.net sets mode: +o ChanServ

[12:41] *** frost-lab joined
[13:00] *** domidumont joined
[13:01] *** frost-lab left
[13:30] *** MasterDuke left
[13:59] *** MasterDuke joined
[14:14] *** brrt joined
[14:36] <nwc10> good *, brrt 

[14:37] *** brrt left
[14:50] *** brrt joined
[14:51] <brrt> good * #moarvm

[16:04] *** brrt left
[17:09] *** domidumont left
[17:18] *** zakharyas joined
[17:52] <sena_kun> nine++ for latest stability fixes, the release process is so much better with flappers being addressed, thank you very much!

[17:55] <[Coke]> nine++ sena_kun++

[17:56] <MasterDuke> ++s all around

[18:01] *** patrickb joined
[18:42] *** sena_kun left
[18:43] *** sena_kun joined
[19:01] *** squashable6 joined
[19:08] *** domidumont joined
[19:10] *** domidumont left
[19:17] <lizmat> meh:

[19:17] <lizmat> raku(24711,0x70000cf76000) malloc: *** error for object 0x7f8af0a79320: pointer being freed was not allocated

[19:17] <lizmat> raku(24711,0x70000cf76000) malloc: *** set a breakpoint in malloc_error_break to debug

[19:17] <lizmat> Abort trap: 6

[19:18] <lizmat> using .hyper on a Seq of IO::Path objects

[19:23] <lizmat> basically: for ".".IO.dir.map({.dir.Slip if .d}).hyper(:1batch).map: *.Str

[19:23] <lizmat> more accurately: my %h = ".".IO.dir.map({.dir.Slip if .d}).hyper(:1batch).map: { .basename => $_ }

[19:24] <lizmat> with the last .map being a little more involved

[19:27] <lizmat> FWIW, this is on 2021.04

[20:48] <MasterDuke> happens all the time? i haven't been able to repro yet

[21:01] <lizmat> it needs some large datasets, apparently

[21:01] <lizmat> I hope to have everything on Github soon, for people to reproduce

[21:17] *** zakharyas left
[21:26] *** dogbert17 joined
[21:28] *** dogbert11 left
[21:40] *** dogbert11 joined
[21:40] *** dogbert12 joined
[21:41] *** dogbert12 left
[21:42] *** dogbert12 joined
[21:44] *** dogbert17 left
[21:44] *** dogbert11 left
[21:55] *** MasterDuke left
[21:57] *** MasterDuke joined
[22:07] *** patrickb left
[22:09] *** MasterDuke left
[22:09] *** MasterDuke joined
[22:37] *** dogbert17 joined
[22:41] *** dogbert12 left
[23:56] *** MasterDuke left
