[00:02] *** reportable6 left
[00:03] *** reportable6 joined
[01:03] *** squashable6 left
[01:03] *** reportable6 left
[01:03] *** releasable6 left
[01:03] *** sourceable6 left
[01:03] *** shareable6 left
[01:03] *** statisfiable6 left
[01:03] *** unicodable6 left
[01:03] *** coverable6 left
[01:03] *** linkable6 left
[01:03] *** evalable6 left
[01:03] *** greppable6 left
[01:03] *** benchable6 left
[01:03] *** notable6 left
[01:03] *** bloatable6 left
[01:03] *** nativecallable6 left
[01:03] *** tellable6 left
[01:03] *** bisectable6 left
[01:03] *** quotable6 left
[01:03] *** committable6 left
[01:03] *** bloatable6 joined
[01:03] *** evalable6 joined
[01:03] *** benchable6 joined
[01:03] *** nativecallable6 joined
[01:04] *** notable6 joined
[01:04] *** tellable6 joined
[01:04] *** quotable6 joined
[01:04] *** squashable6 joined
[01:05] *** statisfiable6 joined
[01:05] *** shareable6 joined
[01:05] *** sourceable6 joined
[01:06] *** committable6 joined
[01:12] *** frost joined
[02:03] *** unicodable6 joined
[02:04] *** bisectable6 joined
[02:04] *** releasable6 joined
[02:05] *** greppable6 joined
[02:05] *** reportable6 joined
[03:05] *** coverable6 joined
[04:04] *** linkable6 joined
[04:57] *** harrow left
[05:01] *** harrow joined
[06:02] *** reportable6 left
[06:21] <Nicholas> good *, new-disp :-)

[06:32] <nine> Yes, new-disp is good indeed!

[07:53] *** linkable6 left
[07:53] *** releasable6 left
[07:53] *** bisectable6 left
[07:53] *** coverable6 left
[07:53] *** unicodable6 left
[07:53] *** greppable6 left
[07:53] *** bloatable6 left
[07:53] *** nativecallable6 left
[07:53] *** committable6 left
[07:53] *** notable6 left
[07:53] *** squashable6 left
[07:53] *** quotable6 left
[07:53] *** shareable6 left
[07:53] *** sourceable6 left
[07:53] *** benchable6 left
[07:53] *** evalable6 left
[07:53] *** statisfiable6 left
[07:53] *** tellable6 left
[07:53] *** sourceable6 joined
[07:53] *** bloatable6 joined
[07:54] *** bisectable6 joined
[07:54] *** statisfiable6 joined
[07:54] *** committable6 joined
[07:54] *** nativecallable6 joined
[07:55] *** notable6 joined
[07:55] *** squashable6 joined
[07:56] *** evalable6 joined
[08:31] <nine> People who claim that computers are fast enough already clearly have never run CORE.c compilation in callgrind...

[08:31] <Nicholas> oh my, oh yes.

[08:31] <Nicholas> and I thought ASAN was tedious

[08:35] *** tealecloud joined
[08:53] <nine> Stage parse      : 1228.403

[08:54] <nine> More time for the piano during the comparison run :)

[08:54] *** benchable6 joined
[08:56] *** unicodable6 joined
[08:56] *** quotable6 joined
[09:03] *** reportable6 joined
[09:55] *** linkable6 joined
[09:55] *** shareable6 joined
[09:55] *** tellable6 joined
[10:41] <Geth> ¦ MoarVM/new-disp: 0fed320794 | (Stefan Seifert)++ | 3 files

[10:41] <Geth> ¦ MoarVM/new-disp: Replace costly $*MAST_FRAME lookup by $frame arg in bytecode generators

[10:41] <Geth> ¦ MoarVM/new-disp: review: https://github.com/MoarVM/MoarVM/commit/0fed320794

[10:42] <nine> According to callgrind, this gets us from 311,532,366,964 (100.0%)  PROGRAM TOTALS to 308,948,475,562 (100.0%)  PROGRAM TOTALS

[10:42] <nine> Less of a speedup than hoped, but it's at least better

[10:46] <nine> It's clearly showing a million fewer lookups of dynamics. The part I don't understand is the ~3 million more lexical lookups using the frame walker we now do.

[10:46] <lizmat> after doing a git pull in rakudo, I get: Too many positionals passed; expected 3 arguments but got 4

[10:46] <lizmat>    at /Users/liz/Github/rakudo.moar/install/share/nqp/lib/MAST/Ops.nqp:10964

[10:46] <nine> lizmat: did you pull nqp and MoarVM as well?

[10:46] <lizmat> guess nqp and MoarVM need to be bumped on new-disp as well?

[10:46] <lizmat> ah... I need to rebuild  :-)

[10:47] <lizmat> I'm using the --gen-moar=new-disp trick  :-)

[10:48] <nine> With the situation as fluid as it is, we don't usually bump the revisions. You want to stay on top of the branches at all times anyway and bumps make rebasing a bit more tedious

[10:51] <lizmat> yeah, just rebuilding it makes it work, sorry for the noise  :-)

[10:53] *** greppable6 joined
[10:54] *** releasable6 joined
[10:55] *** coverable6 joined
[11:05] <nine> Huh...according to my fprintf in MVM_frame_find_lexical_by_name, it's actually doing fewer lookups now. 13861659 lookups of $?CLASS instead of 14337557. Others are exactly the same (and so few that they don't even matter)

[11:05] *** linkable6 left
[11:07] <timo> huh, "find_lexical_by_name" for $?CLASS? isn't it supposed to go via getlexperinvtype?

[11:07] <nine> getlexperinvtype does use MVM_frame_find_lexical_by_name

[11:08] *** linkable6 joined
[11:08] <timo> oh, haha

[11:09] <timo> but we do try to optimize that real good in spesh

[11:09] <timo> could be a result of not inlining at the moment

[11:28] <timo> do we have the callgrind numbers for master handy¿

[11:29] *** TempIRCLogger left
[11:29] *** TempIRCLogger joined
[11:42] <timo> don't want to force 20 minutes of callgrind onto you if not

[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:18] *** brrt joined
[12:33] <Nicholas> good *, brrt

[12:33] <brrt> good * Nicholas

[12:57] *** frost left
[13:50] <nine> master "only" looks up $?CLASS 10921854 times. But there are various other symbols that it looks up quite often that all but disappear from the list in new-disp. Like &needs_cond_passed 75961 vs 5 times or &type_to_local_type 61366 vs 4 or &push_op 33605 vs 9

[13:50] *** linkable6 left
[13:51] *** linkable6 joined
[14:51] *** tealecloud left
[14:54] *** tealecloud joined
[15:46] *** MasterDuke joined
[17:21] *** brrt left
[17:59] *** tealecloud left
[18:04] *** reportable6 left
[18:58] <Nicholas> you know when you've been using rr "too much" when the first command you type in gdb is 'c' and it answers back with "The program is not being run."

[19:12] <timo> when you press "c" on your keyboard to turn your computer on

[19:52] <lizmat> ok, getting slightly annoyed now

[19:52] <lizmat> Missing or wrong version of dependency 'gen/moar/stage2/NQPHLL.nqp' (from 'site#sources/45334C557865A97D1ECA0D3F3A3FAF2017FCE553 (OO::Monitors)')

[19:53] <lizmat> I've nuked my install dir and built from scratch (on master)

[19:55] <lizmat> decided to uninstall OO::Monitors yet again, and install again, and it works :-(

[19:55] <lizmat> sorry for the noise

[19:59] <lizmat> and back to failing again  :-(

[20:00] *** tealecloud joined
[20:06] *** reportable6 joined
[20:24] <lizmat> in the end I did a new rakudo checkout, which appears to have fixed it

[20:27] <dogbert11> lizmat: have you abandoned new-disp :)

[20:29] <lizmat> I'm not sure what caused this, but yeah: in the middle of migrating modules to the zef ecosystem

[20:29] <lizmat> and that still has a few rough edges

[20:29] <lizmat> it was just one too many variables

[20:31] <lizmat> it also was noticeably slower on my local logs server work

[20:32] <dogbert11> yeah, it's still a bit slower than master

[20:33] *** Kaiepi joined
[20:34] *** Kaipi left
[20:50] <timo> one important piece of optimization is missing that currently prevents a lot of inlining, i think?

[21:15] *** tealecloud left
[23:24] *** greppable6 left
[23:24] *** sourceable6 left
[23:24] *** committable6 left
[23:24] *** coverable6 left
[23:24] *** bloatable6 left
[23:24] *** bisectable6 left
[23:24] *** quotable6 left
[23:24] *** evalable6 left
[23:24] *** squashable6 left
[23:24] *** shareable6 left
[23:24] *** linkable6 left
[23:24] *** releasable6 left
[23:24] *** benchable6 left
[23:24] *** unicodable6 left
[23:24] *** notable6 left
[23:24] *** reportable6 left
[23:24] *** statisfiable6 left
[23:24] *** nativecallable6 left
[23:24] *** tellable6 left
[23:25] *** unicodable6 joined
[23:25] *** notable6 joined
[23:25] *** linkable6 joined
[23:26] *** shareable6 joined
[23:26] *** releasable6 joined
[23:26] *** greppable6 joined
[23:26] *** benchable6 joined
[23:26] *** committable6 joined
[23:26] *** nativecallable6 joined
[23:26] *** bloatable6 joined
[23:27] *** sourceable6 joined
