[07:33] *** sena_kun joined
[13:57] *** jgaz left
[15:52] *** Xliff joined
[15:53] <Xliff> \o

[15:53] <Xliff> Has anyone done HTTP Push pages with Cro?

[16:18] <japhb> The only push scenarios I've needed I did with WebSockets.

[16:31] *** jgaz joined
[18:07] <Xliff> japhb++: Got any sample code?

[19:13] <patrickb> Is it possible to nest template parts and subs / macros? I.e. I have a fragment that requires both, page specific data (the path of the page), and common data (logged in user name, URL for login).

[19:14] <lizmat> patrickb: pretty sure you can

[19:22] <patrickb> Thanks!

[19:37] <japhb> Xliff: Depends on what you mean by "sample code".  MUGS-Core has the pair of https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/Server/Connection/WebSocket.rakumod (server) and https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/Client/Connection/WebSocket.rakumod (client), which might help you.

[19:38] <japhb> But those are part of the larger MUGS-Core infrastructure, so you may find yourself a bit confused about how to use these as part of a larger whole, and I've been told that MUGS is ... kindof a lot to take in all at once.

[19:45] <japhb> I guess https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/Connection.rakumod gives you the quick overview of the internal Connection API; the server side of session handling starts here: https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/Server.rakumod#L556

[19:45] <japhb> The client side of session handling is here: https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/Client.rakumod#L170

[19:48] <japhb> So yeah ... not exactly set up as "sample" code, and probably more than you asked for, but it's FOSS code that actually is known to work, so there's that.  ;-)

[21:03] <Xliff> japhb: Exactly what I asked for. Thanks, so much!

[21:04] *** sena_kun left
[21:07] <Xliff> japhb: You are correct. It is a lot, but it isn't unmanageable, and your code is clear enough. My one question: Where is an actual implementation of .send-to-client?

[21:16] <japhb> Xliff: It's hooked up by https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/App/WebSocketServer/Routes.rakumod

[21:18] <japhb> That's where the incoming Cro connection gets turned into a websocket session.  Note that it returns the .from-server supply provided by MUGS::Server::Connection::WebSocket to Cro.  Thus whenever emitting on the $!to-client Supplier, the Supply end feeds a message into the Cro WebSocket connection.  :-)

[21:19] <japhb> So basically the MUGS::Server::Connection::WebSocket.send-to-client just formats a Cro::WebSocket::Message and sends it into its own private Supplier, because the Supply end of that pair is already plumbed through to the client connection by Cro.  :-)

