[18:41] *** sena_kun joined
[20:00] <patrickb> Do we want Cro::HTTP::Client connection reuse to be resilient to races of the remote end closing the connection and us reusing it?

[20:02] <patrickb> I have implemented a retry mechanism for HTTP2 (in a PR). Now I noticed the same failure mode in HTTP1.1 connections.

[20:02] <patrickb> And I start to wonder, do we even want to solve this issue in Cro itself?

[20:03] <patrickb> In the HTTP1.1 case the failure manifests as "Connection unexpectedly closed before response headers received", which is slightly misleading.

[22:04] <japhb> patrickb: My historical understanding is that the many closing states of TCP connections were designed for this kind of problem -- knocking out most of the races by ratching towards a truly down connection.

[22:05] <japhb> I suspect that HTTP needs similar intelligence ... though I'd be a little surprised if there was no guidance available for that.

[22:05] <japhb> We certainly *don't* want to be confusing the heck out of users with misleading errors.

[22:07] <japhb> When you talk about "reusing" a connection, what exactly is getting reused?  Do you just mean continuing to send streams from the same flow down the same pipe?  Or are you talking about reusing the connection in some other way?

[22:33] <patrickb> Sending multiple requests down the same not yet closed tcp connection.

[22:35] <patrickb> HTTP::Client keeps a cache of open connections and reuses those for new requests.

[22:35] <patrickb> https://github.com/croservices/cro-http/blob/master/lib/Cro/HTTP/Client.pm6#L746

[22:36] <patrickb> Also that's the PR that implements the retry for HTTP2: https://github.com/croservices/cro-http/pull/187

[22:38] <patrickb> In the HTTP2 case it's not the TCP connection that gets closed, but a GoAway packet of the HTTP2 protocol that's received (that has a sequence number and communicates which requests were processed and which won't be).

[22:39] <patrickb> From the quick look I had at the error case at hand it seems that in the HTTP1.1 case it's a simple TCP connection close of the server that signals, well, that the connection is closed.

[22:40] <patrickb> Anyways, I'm off to bed. I'll backlog, so feel free to comment further.

[23:03] *** sena_kun left
