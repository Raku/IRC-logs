[01:02] *** Pe_Elle left
[01:09] *** Pe_Elle joined
[06:56] *** leont left
[06:57] *** leont joined
[07:43] *** sena_kun joined
[09:19] *** sena_kun left
[17:31] *** timo joined
[17:32] <timo> a fresh stubbed cro http service with http 1.1 and 2 and websocket is unable to load the fake certs that cro built for it: error:068000A8:asn1 encoding routines::wrong tag

[17:37] <timo> oh i see it does not generate the certs, those fake-tls certs are just shipped with the cro cli tool

[17:42] <Geth> ¦ cro: timo++ created pull request #162: fix links in readme

[17:42] <Geth> ¦ cro: review: https://github.com/croservices/cro/pull/162

[17:45] <timo> https://github.com/croservices/cro/issues/119 i believe this can just be closed since the pull-request that addresses it was merged long ago

[17:47] <timo> also, maybe more worrying than the parse failure with the certs is that the cro application still seems to run, but is then not listening on the socket it is configured to use, instead of stopping by itself, or erroring out more aggressive

[17:47] <timo> -ly

[17:54] <Geth> ¦ cro: timo++ created pull request #163: Try a newer "oldest" raku version in CI

[17:54] <Geth> ¦ cro: review: https://github.com/croservices/cro/pull/163

[17:54] <timo> i hope the github action runs with my changes like that without some extra permissions or extra thumbs-up from an actual project owner

[17:57] <timo> does the cro project have some kind of official stance on supporting specific older rakudo versions in a Long-Term Support kind of way?

[17:57] <timo> then an option could be to use an older package that doesn't asplode

[17:57] <lizmat> the cro team is in a bit of a flux atm... perhaps make an issue for that

[17:58] <timo> sure, no hurries, just doing some drive-by contributions that are hopefully helpful? not meaning to heap work on the good folx

[18:06] <timo> well, it took me a while but i just saw the announcements from the beginning of the year

[18:17] <timo> cool, the 2022.02 version of raku has no trouble installing the dependencies for croservices/cro. maybe i'll make PRs for the same change in the other croservices repos

[18:18] <timo> would surely be a better look to have the CI badges not show "failing" :)

[18:20] <[Coke]> yes please!

[18:39] *** sena_kun joined
[19:42] <timo> i'm not coming up with a good way to flow-control jump out of a get -> { ... } block with my error checks, i.e. i'd enjoy it if i could just `not-found unless $target.e` but that only sets a content and status, and execution just goes on. so i'll have to structure my code with more ifs, or if-else, or i need to build exceptions and an exception handler that does the not-found further outside which

[19:42] <timo> feels kinda redundant

[19:58] <timo> but a try { ... } around everything and then "die not-found" (even though not-found doesn't return anything) *kinda* does it? :D it also eats other kinds of exceptions though which is not ideal

[20:01] <timo> CATCH { when $! === Nil { note "my control flow!" } } is not the absolute worst ...

[20:24] <timo> well, the documentation does warn against putting business logic into handlers

