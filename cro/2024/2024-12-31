[00:15] *** Pe_Elle left
[00:42] *** Pe_Elle joined
[00:46] *** Pe_Elle left
[01:01] *** Pe_Elle joined
[02:03] *** Pe_Elle left
[02:42] *** Pe_Elle joined
[03:45] *** Pe_Elle left
[04:14] *** Pe_Elle joined
[04:24] *** Pe_Elle left
[04:25] *** Pe_Elle joined
[04:47] *** guifa left
[10:02] *** Pe_Elle left
[10:07] *** Pe_Elle joined
[10:12] *** Pe_Elle left
[10:37] *** Pe_Elle joined
[11:24] *** sena_kun joined
[11:49] <patrickb> Maybe to clarify: The critical change is changing the depends specification in the modules from `Cro::TLS:ver<0.8.9>` to `Cro::TLS:ver<0.8.9+>:auth<zef:cro>:api<0>`. So we are not depending on one specific version anymore, but a minimum version and an upper cap via the api spec.

[12:30] *** guifa joined
[12:32] *** Pe_Elle left
[12:33] *** Pe_Elle joined
[12:33] *** Pe_Elle left
[12:39] *** Pe_Elle joined
[12:44] *** Pe_Elle left
[12:44] *** coleman left
[13:09] *** guifa left
[13:11] *** Pe_Elle joined
[14:09] *** Pe_Elle left
[14:09] *** Pe_Elle joined
[17:15] <ab5tract> So I've been poking a bit at SmokeMachine's issue in Cromponent: https://github.com/FCO/Cromponent/pull/9

[17:17] <ab5tract> I think I have narrowed the issue down to the $*TEMPLATE-REPOSITORY being null  when this bit of the prelude is executed `'(BEGIN (((' ~ $decls ~ ') given await($*TEMPLATE-REPOSITORY.resolve-absolute`

[17:19] <ab5tract> but for instance trying to do `($*TEMPLATE-REPOSITORY //= get-template-repository` causes a dependency circularity and I haven't managed to cleanly unwind it

[17:21] <ab5tract> What's a bit confusing for me is why the existing prelude works for this code: https://github.com/ab5tract/cro-webapp/blob/b57c0c758177eb6ef6b85b8f4ce82fdb4e994f90/lib/Cro/WebApp/Template/Repository.rakumod#L195

[17:23] <ab5tract> but not for https://github.com/FCO/Cromponent/blob/322cd9fb02a62fb1825de4162b44cc5341345b7a/lib/Cromponent.rakumod#L179

[18:19] *** sena_kun left
[19:05] *** Pe_Elle left
[19:05] *** Pe_Elle joined
[19:07] <SmokeMachine> ab5tract: one odd thing is that even if I avoid adding Prelude (https://github.com/FCO/Cromponent/blob/minimal-error/lib/Cromponent.rakumod#L37) I still get this error:  https://www.irccloud.com/pastebin/EVJCUzxx/

[19:08] <ab5tract> :/

[19:10] *** Pe_Elle left
[19:20] <SmokeMachine> I think it's breaking on %*WARNINGS now...

[19:23] <SmokeMachine> not only that... :(

[19:31] <ab5tract> It’s weird.. explicitly creating the corresponding object in the prelude instead of using the dynamic variable doesn’t fix anything. I would expect it to be costlier but otherwise equivalent

[19:32] <ab5tract> However it breaks a bunch of tests in the cro web app template distri

[19:32] <ab5tract> *distro

[19:33] <ab5tract> Variants thereof likewise fail..

[19:36] <SmokeMachine> I think I found the minimal example!

[19:36] <SmokeMachine> ab5tract: https://github.com/FCO/Cromponent/blob/minimal-error/lib/Cromponent.rakumod#L37

[19:37] <ab5tract> Nice one!

[19:38] <SmokeMachine> if I replace `Q[sub ($_) { join "", (Q『test』) }].EVAL` with `sub ($_) { join "", (Q『test』) }` it works, and if I replace with `Q[sub ($_) { Q『test』 }].EVAL` it also works

[19:41] <SmokeMachine> it seems to be something related to the EVAL end the join...

[19:41] <SmokeMachine> is the generated sub being lost somehow?

[19:41] *** Pe_Elle joined
[19:47] *** Pe_Elle left
[19:53] <ab5tract> What about the method form of join?

[19:53] <ab5tract> (Can’t check myself atm)

[19:56] <SmokeMachine> then method form also works

[20:10] <ab5tract> Very interesting!

[20:20] <SmokeMachine> .AST.EVAL also does not work…

[20:32] *** Pe_Elle joined
[20:36] <ab5tract> unfortunately switching all uses of `join "", ...` to `(...).join("")` in the relevant Cro files doesn't seem to have any impact :(

[20:36] *** Pe_Elle left
[20:48] <SmokeMachine> Só, that might be more than one problem…

[20:52] <ab5tract> yup :/

[21:05] *** Pe_Elle joined
[21:11] *** Pe_Elle left
[21:26] *** Pe_Elle joined
[21:50] *** guifa joined
[22:27] *** Pe_Elle left
[22:56] *** Pe_Elle joined
[23:00] *** Pe_Elle left
[23:09] *** Pe_Elle joined
