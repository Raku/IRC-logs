[00:03] *** Pe_Elle left
[00:17] *** Pe_Elle joined
[01:19] *** Pe_Elle left
[01:43] *** Pe_Elle joined
[07:42] *** Pe_Elle_ joined
[07:45] *** Pe_Elle left
[08:04] *** Pe_Elle_ left
[08:05] *** Pe_Elle joined
[08:09] *** Pe_Elle left
[08:31] *** Pe_Elle joined
[08:40] *** Pe_Elle left
[08:40] *** Pe_Elle joined
[09:56] *** Pe_Elle left
[10:12] *** Pe_Elle joined
[10:16] *** Pe_Elle left
[10:46] *** Pe_Elle joined
[10:51] *** Pe_Elle left
[11:00] *** Pe_Elle joined
[13:34] *** Pe_Elle left
[13:37] *** Pe_Elle joined
[13:39] *** Pe_Elle left
[13:56] *** Pe_Elle joined
[15:01] *** Pe_Elle left
[15:15] *** Pe_Elle joined
[15:22] *** Pe_Elle left
[15:57] *** Pe_Elle joined
[17:03] *** Pe_Elle left
[17:28] *** Pe_Elle joined
[17:35] <discord-raku-bot> <librasteve> smokemachine: first I will say that I like your new ExportToCroTmp module - it does a great job of letting us call a raku sub from inside a crotmp - kudos!

[17:37] <discord-raku-bot> <librasteve> as I mentioned before crotmp is vital to the success of cro and both Cromponent and ExportToCroTmp are big steps to support LOB and components

[17:40] <discord-raku-bot> <librasteve> BUT (guess you knew that was coming), my picture of how I want to write cro components is with HTML::Functional (which I tried to describe above) - the purest working example of this I can share right now is the SearchTable code in SiteLib.rakumod as I have annotated in the README

[17:46] <discord-raku-bot> <librasteve> in this example (which uses a modified version of your early Cromponent) there is no crotmp file - all is just raku classes as you can see ... and where all is HTML::Functional, then calling raku code as sub from some higher level crotmp is not what I have in mind

[17:47] <discord-raku-bot> <librasteve> ... so I will go back to Plan A and try to port in your latest Cromponent to my example code - hopefully that will provide a way forward we can both agree.

[17:48] <discord-raku-bot> <librasteve> oh - and thanks for the tip on the Red populate method!!

[17:50] <SmokeMachine> But that’s the point with that… if you want to use those components inside crotmp, you use <:use>, if you don’t, on your route you just `content “text/html”, Component(…);` And the component is working…

[17:50] <SmokeMachine> (Because that exported to crotmp, but also the usual raku way…)

[18:06] *** Pe_Elle left
[18:09] <discord-raku-bot> <librasteve> okay - I suppose the most valuable component features for a pure HTML::Functional web app are (i) I want to write my components as a raku class with a method RENDER and (ii) I want to add-component so that the load | create | delete services auto make some cro routes and map those routes to the methods of my component ... since these features are provided in Cromponent (as well as some nice crotmp features), so far

[18:09] <discord-raku-bot> I have combined my (eg) SearchTable code with a modified Cromponent library and that seems to be good to me

[18:10] <discord-raku-bot> <librasteve> the use those components inside crotmp is an added bonus and I hope to make that work too ... but first I think would be best to get the pure HTML::Functional approach right

[18:17] *** Pe_Elle joined
[18:22] *** Pe_Elle left
[18:50] *** Pe_Elle joined
[18:54] *** sena_kun joined
[18:55] *** Pe_Elle left
[19:24] *** Pe_Elle joined
[19:34] *** Pe_Elle left
[20:05] *** Pe_Elle joined
[21:11] *** Pe_Elle left
[21:40] *** Pe_Elle joined
[22:27] *** sena_kun left
[22:44] *** Pe_Elle left
[23:06] *** sena_kun joined
[23:10] *** Pe_Elle joined
[23:23] *** sena_kun left
