[00:09] *** lizmat joined
[06:57] *** Xliff joined
[06:57] <Xliff> \o

[06:58] <Xliff> Is there a way I can stop a SIGINT?

[08:18] *** sena_kun joined
[09:14] *** Geth left
[09:14] *** Geth joined
[09:19] <jnthn> Write a signal handler that does nothing?

[09:19] <jnthn> start react whenever signal(SIGINT) { #`( disregard ) }

[10:37] *** sena_kun left
[10:38] *** sena_kun joined
[12:12] <Xliff> \o

[12:13] <Xliff> Hi, jnthn. Thanks for the suggestion.

[12:13] <Xliff> Sadly, my Cro-based server died just now after a solid 23 hours of operation.

[12:13] <Xliff> Died with: Unhandled exception in code scheduled on thread 8

[12:13] <Xliff> malloc(): smallbin double linked list corrupted

[12:13] <Xliff> What's the best way to debug that?

[12:20] <Xliff> I have the core file and hourly telemetry reports from the server if that will help.

[12:21] <Xliff> Ah.. nope... no core file. Said it dumped, but it's not here.

[12:32] <jnthn> Cro is pure Raku code, so it'd either be a VM bug or a bug in a module with native code. Presumably the core file can be used to get a stack trace. Without the core file, not much can be said.

[13:05] <Xliff> OK, thanks.

[13:15] <jnthn> Ah, also a tip: make sure the MoarVM is built with debug symbols, as that'll give more info.

[13:19] <Xliff> Yep. I do that every week. :)

[15:52] <Xliff> jnthn: Are Cro::WebApp templates compiled to code or bytecode?

[15:52] <Xliff> Could precompiled templates be stored on a database, for example?

[16:08] *** xinming left
[16:12] <jnthn> Turned into Raku code that is EVAL'd on first use of the template

[16:23] <Xliff> Ah, thanks.

[16:23] <Xliff> Does ::Template support comments?

[16:24] <Xliff> I'd like to remove parts of a template without actually removing them.

[16:27] <Xliff> Could such be added by the simple rule of:

[16:27] <Xliff> token sigil-tag:sym<comment> { '<#' .+? '>' }?

[16:28] <Xliff> Ah, no... because I need it to NOT end on any ending tag.

[16:28] <Xliff> So maybe...

[16:29] <Xliff> token sigil-tag:sym<comment> { '<#' .+? '#>' }?

[16:32] <jnthn> Maybe the syntax should be <#> ... </#>

[16:34] <Xliff> Don't mind either. How would yours be implemented?

[16:35] <Xliff> token sigil-tag:sym<comment> { '<#>' .+? '</.#>' }

[16:36] <Xliff> Would I need a <sequence-element>* in there?

[16:49] <Xliff> Nope. Neither one works.

[16:49] <Xliff> Last one fails with "Type check failed in assignment to @!children; expected Cro::WebApp::Template::AST::Node but got Any (Any" and that's probably because of the 

[16:49] <Xliff> action on sigil-tag

[16:53] <Xliff> Wionder if this will work...     method sigil-tag:sym<comment>($/) {   make Nothing.new; }

[16:53] *** sena_kun left
[16:56] <Xliff> Oh shit! That worked! =D

[18:32] *** xinming joined
[18:33] <Xliff> jnthn: Is there a way to trace cro routes?

[18:43] <Geth> ¦ cro-webapp: Xliff++ created pull request #78: - Adds the ability to write comments between <#> and </#> tags

[18:43] <Geth> ¦ cro-webapp: review: https://github.com/croservices/cro-webapp/pull/78

[20:55] <jnthn> Depends what you mean by trace; there's CRO_TRACE=1 which traces the progression through the pipeline

[21:52] <Xliff>  No. I want the ability to trace the router. But thanks.

[21:53] *** lizmat_ joined
[21:55] *** patrickb_ joined
[21:56] *** ecocode____ joined
[21:58] *** ecocode___ left
[21:59] *** patrickb left
[21:59] *** lizmat left
[21:59] *** jjatria left
[21:59] *** ecocode____ is now known as ecocode___

[21:59] *** patrickb_ is now known as patrickb

[22:10] *** jjatria joined
[22:35] *** Xliff left
