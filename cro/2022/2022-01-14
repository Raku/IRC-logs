[12:21] *** Altai-man joined
[14:03] *** Altai-man left
[14:07] *** ecocode left
[14:08] *** Altai-man joined
[14:12] *** ecocode joined
[15:07] *** ecocode left
[15:12] *** ecocode joined
[16:13] <Geth> ¦ cro: 2eb4af983e | (Jonathan Worthington)++ | 2 files

[16:13] <Geth> ¦ cro: Document Cro::HTTP::Log::File

[16:13] <Geth> ¦ cro: 

[16:13] <Geth> ¦ cro: Closes #109.

[16:13] <Geth> ¦ cro: review: https://github.com/croservices/cro/commit/2eb4af983e

[16:59] <Skarsnik> How I can use the websocket object inside a websocket route? I went to send my client a message on connection, not sure how since we only got a supply x)

[17:01] <japhb> Skarsnik: MUGS-Core has code for this.  Lemme dig it up ...

[17:02] <japhb> https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/Server/Connection/WebSocket.rakumod and https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/Client/Connection/WebSocket.rakumod are the two ends of the connection stream.

[17:03] <japhb> https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/App/WebSocketServer/Routes.rakumod is where I convert from route to Connection

[17:04] <Skarsnik> hm, you recreate the whole route thingy?

[17:04] <jnthnwrthngtn> Skarsnik: You return a `supply` block and use `emit` in it to send the message (if you want to send a message on connection, just `emit` it right away)

[17:05] <jnthnwrthngtn> Roughly: get -> 'ws' { websocket -> $incoming { supply { emit 'Oh hi!'; whenever $incoming -> $msg { #`(handle incoming messages) } } }

[17:06] <japhb> Skarsnik: Mine method is a bit more complicated in order to allow swapping different connection methods.  :-)

[17:07] *** Skarsnik left
[17:07] *** Skarsnik joined
[17:14] <Skarsnik> Thank :)

[17:15] <Skarsnik> websocket in webasm are not fun

[17:25] *** TempIRCLogger left
[17:25] *** TempIRCLogger joined
[17:26] *** TempIRCLogger left
[17:26] *** TempIRCLogger joined
[17:26] *** TempIRCLogger left
[17:26] *** TempIRCLogger joined
[17:41] *** Altai-man left
[21:11] *** xinming joined
[22:43] *** Xliff left
