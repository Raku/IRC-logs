[00:26] <SmokeMachine> is there a way to use inline template?

[01:27] <jnthn> Xliff: https://docs.raku.org/type/Telemetry is probably worth a look; don't think there's anything for Cro to specifically do in this area.

[01:29] <jnthn> SmokeMachine: Can do a custom template repo; see https://modules.raku.org/dist/CWT-Repository-Hash:zef:zef:finanalyst for example (and things already merged for the next Cro release will ease that a bit)

[01:31] <jnthn> Xliff: Just assign into a throw-away variable so it won't be sunk

[01:31] <jnthn> (to avoid the warning)

[01:31] <SmokeMachine> jnthn: great, thanks! Another question, it seems a sub's signature is not accepting `|c`should it be accepted? any way of making it work?

[01:31] <jnthn> "a sub"?

[01:32] <SmokeMachine> `<:sub execute($cmd, |c)></:>`

[01:32] <jnthn> No, that's not supported.

[01:33] <SmokeMachine> :( what about +@ or any slurp?

[01:33] <jnthn> Nope.

[01:33] <SmokeMachine> :(

[01:33] <SmokeMachine> thanks

[01:33] <jnthn> It's a templating language. Please but your complicate stuff elsewhere, where there's a chance it can be tested. :/

[01:34] <jnthn> s/but/put

[01:35] <jnthn> I can kinda imagine doing slurpy @ and % in it. |c is really awkward because it doesn't have a sigil so doesn't sit well with the rest of the template language.

[01:35] <SmokeMachine> if I pass a function inside the context, can I run it?

[01:35] <SmokeMachine> you could pretend | is the sigil...

[01:35] <jnthn> If you pass an object you can call methods on it. See also parts

[01:35] <jnthn> I could, but I won't. :)

[01:36] <jnthn> Slurpy params are probably a reasonable request, though.

[01:38] <jnthn> So far as Mac goes, I happily merge PRs, but I won't spend any of my own time on it. It's worthless, every Mac OS release breaks something else.

[01:40] <SmokeMachine> passing a capture as parameter (`<&execute("toggle", \(.id))>)>`) won't work either, right?

[01:40] <jnthn> No.

[01:41] <SmokeMachine> it seems neither do `<&execute("toggle", [.id])>)>`(sorry for keep asking)

[01:42] <SmokeMachine> (I mean [.id,])

[01:46] <jnthn> No. I expect a template language to be rendering the data it's given, not synthesizing new data structures as it goes. Testing the output of a template is fraught, so I figured keeping the language simple pushes this logic out of the templates into something that stands a chance of being testable.

[01:48] <jnthn> Of course, it's a tricky balance to strike, in so far as it's nice to be able to abstract presentation stuff too.

[01:49] <jnthn> (Which is why slurpy params/args feels like a reasonable thing to ask for)

[01:49] <SmokeMachine> maybe the problem is what I'm trying to do (that's just a test to see if it's possible)

[01:50] <jnthn> (But also why I'm reluctant to see the template language expand to being close the a general purpose language :))

[01:51] <jnthn> sigh, *to a. I should probably already be sleeping, I've been tired all week anyway.

[01:51] <jnthn> At least vacation is coming soon.

[01:51] <jnthn> Although there's time for a Cro release before it :)

[01:52] <jnthn> 'night o/

[01:53] <SmokeMachine> my test is to make a way to make the template work kind on web components and having a way to do something like `<a onclick=<&run("fund-name", @parameters)>`and it would add a JS on it that would (when clicked) send a WebSocket message, the server would react to that message, re-render the template, send it back to by through WebSocket and the JS would replace it...\

[01:54] <SmokeMachine> good night! sorry for interrupting. I hope you have some time to rest... :)

[10:51] *** sena_kun joined
[14:51] *** Xliff left
[19:45] <SmokeMachine> should a :sub defined inside a :part be accessible from outside that :part?

[20:19] <jnthn> I'd not expect it to be; :sub decls are meant to be lexical, as in Raku

[20:19] <jnthn> So a sub declared inside a sub should only be visible inside of that sub.

[20:20] <jnthn> If they are visible outside of the part that's probably a bug (although I'm curious how it'd happen, knowing how the code-gen works...)

[20:49] *** sena_kun left
