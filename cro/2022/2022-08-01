[00:20] <japhb> ... and now with my collected recommendations for Rakudo versions for CI.

[00:22] <japhb> I've released CBOR::Simple 0.1.3, and based on my own recommendations in the Gist, I'm now testing on 2021.02, 2022.02, and latest.  That should get you able to test on early 2021 releases again, jnthn.  (2021.01 wasn't released, so 2021.02 is the first one supporting zef/fez natively.)

[06:38] *** rba left
[06:39] *** rba joined
[06:51] *** SmokeMachine joined
[06:52] *** Altreus joined
[07:39] *** sena_kun joined
[09:22] *** sena_kun left
[10:04] *** sena_kun joined
[12:38] *** Xliff left
[16:13] *** Nemokosch joined
[16:39] <Nemokosch> I'm afraid that Cro keeps me from progressing again...

[16:41] <Nemokosch> This time around, thanks to idiotic Jira design and the demands, I have to make a lot of calls to the REST API, possibly even thousands. These aren't big at all, probably a couple of kilobytes.

[16:42] <Nemokosch> Now, both the body parsing issue can appear randomly, and the request can fail in an incomprehensible manner for me

[16:43] <Nemokosch> > No such method 'body' for invocant of type 'Any'.  Did you mean 'Bool'?

[16:43] <Nemokosch> Thank you very much but I'm not trying to access a method called 'body', and I don't have invocant type 'Any' either.

[16:45] <jnthn> Need the backtrace for that exception to have any hope of figuring it out.

[16:45] <Nemokosch> From what I can see in the code, though, Cro itself very well can try to access such a method. And it shouldn't hang either, having specified a 20 seconds timeout...

[16:45] <Nemokosch> How can I get that? The stack trace I get by a simple die call in the CATCH phase isn't great, either.

[16:46] <jnthn> Add `.note;` as the first thing in that `CATCH`, maybe

[16:49] <Nemokosch> okay

[16:51] <Nemokosch> Oh come on... it hung at "parsing" the body (I'm already using body-text in fact)

[16:53] <Nemokosch> one more time...

[16:53] <jnthn> One more thing to try: when constructing the Cro HTTP client, pass in `:http<1.1>`, just in case there's some HTTP/2.0 oddity here

[16:54] <Nemokosch> will do that

[16:56] <Nemokosch> Not sure if it's because of that but this time around it really feels a lot slower

[16:58] <Nemokosch> Anyway, if it's slow but doesn't hang that's a net win for my case so let's just wait

[17:02] <Nemokosch> Seems to me that it did finish (and without one single timeout) with :http<1.1> specified

[17:18] *** sena_kun left
[17:18] <jnthn> OK, good that helps at least

[17:18] <jnthn> home time &

[17:54] *** sena_kun joined
[18:57] *** sena_kun left
[19:00] *** sena_kun joined
[19:18] *** Nemokosch left
[19:19] *** Nemokosch joined
[21:38] *** sena_kun left
[21:40] *** andinus` joined
[21:42] *** jnthn left
[21:48] *** andinus left
[23:17] *** jnthn joined
[23:44] *** Nemokosch left
