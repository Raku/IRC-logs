[03:41] *** melezhik joined
[03:58] *** melezhik left
[08:30] *** xinming left
[08:31] *** xinming joined
[13:03] *** Nemokosch joined
[13:07] *** Nemokosch left
[15:08] <patrickb> I'm not sure anymore it's a bug in Rakudo. The observation is that a request is emitted on the supplier of the cro request -> response pipeline. The supply in the first processor of the pipeline (RequestSerializerExtension) receives the 'emit' call, but is itself not tapped. Thus the request stalls (it's a preserving supplier, but the supply is never tapped).

[15:10] <patrickb> According to the docs the code in supply blocks is called when the supply is tapped. The pipeline is basically built up using supply / whenever blocks. So as long as one of the supplies in the chain isn't tapped all upstream supplies aren' either.

[15:12] *** rbt joined
[15:20] *** rbt left
[15:20] *** rbt joined
[15:30] <patrickb> So I'll have to think up a way to find the one non-tapping processor...

[16:20] *** rbt left
[16:20] *** rbt joined
[16:55] *** rbt left
[16:56] *** rbt joined
[17:53] *** Nemokosch joined
[18:32] *** Nemokosch left
[20:23] *** japhb left
[20:30] *** japhb joined
[20:55] *** n1to joined
[22:45] *** n1to left
