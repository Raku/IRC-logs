[08:19] *** patrickb joined
[13:57] <rba> The virtual server with most of the *.raku.org/*.perl6.org websites will be down for maintenance today 8pm CEST for approximately an hour...
[15:43] <Geth> ¦ cro-http/master: 4 commits pushed by (Jonathan Worthington)++
[15:43] <Geth> ¦ cro-http/master: 4a31e61ac7 | Add a router plugin mechanism
[15:43] <Geth> ¦ cro-http/master: ece966d64c | Provide working serving of resources
[15:43] <Geth> ¦ cro-http/master: 9f72b15d84 | Provide for other plugins wanting resources
[15:43] <Geth> ¦ cro-http/master: 16c44946aa | Merge pull request #142 from croservices/router-plugin-api-and-resources
[15:43] <Geth> ¦ cro-http/master: review: https://github.com/croservices/cro-http/compare/70cfbc76eec3...16c44946aa7a
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: a5c54bf441 | (Jonathan Worthington)++ | 6 files
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: Refactor template library test
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: 
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: Use a META6.json to handle the lib/resources more "officially". We'll
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: want to write a similar such test for the new template location
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: handling that includes resources, so moving this under a subdirectory
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: for consistency.
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: review: https://github.com/croservices/cro-webapp/commit/a5c54bf441
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: 5856b58210 | (Jonathan Worthington)++ | 7 files
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: Implement templates from resources
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: 
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: This builds upon the recent router plugins and `resources-from` features
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: in Cro::HTTP to also provide a way to serve templates from a module's
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: resources. Furthermore, it makes `template-location` inside of a `route`
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: block only apply to the routes into that block and those included into
[15:43] <Geth> ¦ cro-webapp/templates-from-resources: it. This is a potentially breaking change, however also an increase in
[15:44] <Geth> ¦ cro-webapp/templates-from-resources: consistency. A `template-location` outside of any `route` block still
[15:44] <Geth> ¦ cro-webapp/templates-from-resources: works, and will function as adding the location to a set of global
[15:44] <Geth> ¦ cro-webapp/templates-from-resources: template locations.
[15:44] <Geth> ¦ cro-webapp/templates-from-resources: review: https://github.com/croservices/cro-webapp/commit/5856b58210
[15:48] <Geth> ¦ cro-webapp: jnthn++ created pull request #41: Support templates from resources, refine template-location semantics
[15:48] <Geth> ¦ cro-webapp: review: https://github.com/croservices/cro-webapp/pull/41
[15:50] <jnthnwrthngtn> There was also a release of IO::Socket::Async::SSL today that addressed some occasional failures in the Cro::HTTP tests (of note, t/http2-client.t).
[16:13] *** patrickb left
[16:59] <japhb> When you make a correctness fix in a dependency, do you set minimum version requirements on that dependency?  If not, why not?  (I'm curious because I've started to do that in my own modules, but it's not clear to me if that is a net win for all users; for example, what if a version bump included a fix for one bug but created another?  Should I force my users to prioritize the bug that caused problems for me?)
[17:00] <jnthnwrthngtn> I haven't tended to so far, though https://github.com/croservices/release/issues/2 means we'll do it across the core Cro modules from the next release
[17:02] <jnthnwrthngtn> I'm tempted to do the same with Cro::TLS against IO::Socket::Async::SSL too, given there's quite a few fixes there recently that make things more stable
[17:07] <Altreus> japhb: I tend to be of the philosophy of worse the devil you know
[17:08] <Altreus> A known fix is a bigger win than an unknown breakage is a loss, on the theory that everything is reasonably well-tested and therefore egregious issues are not going to factor in
[17:09] <japhb> That's a decent point, especially if a release is a bugfix-only release (meaning that there are no features slipped in at the same time).
[17:10] <japhb> Kindof argues for our community in general getting better about semantic versioning, so that it's highly likely to be safe to bump a dependency if only the patch level changed.
[17:11] <japhb> Many of us (me included) are still treating sub-1.0 release numbering as "Does this change seem likely to break things or not?" as opposed to "Strictly separating functionality versions from bugfix-only versions"
[17:12] <japhb> But it might be worth shifting that towards the latter, recognizing that most of our entire ecosystem claims pre-1.0 versions.
[17:12] <Altreus> There's always the modulo of "Is the author scared of committing to 1.0 or is it actually in flux?"
[17:12] <Altreus> DBIx::Class for example
[17:12] <japhb> Yeah, true.
[17:12] <Altreus> (Assuming perl5 examples work here)
[17:13] <japhb> I started with "Larry languages" back in the Perl 4 days, so sure.  :-)
[17:13] <Altreus> > DBIx-Class-0.082842
[17:14] <japhb> Oh sheesh, I hadn't realized that there's TWO leading zeroes there.
[17:14] <Altreus> This was already a mainstay of large Perl projects when I started my first job in 2008
[17:14] <Altreus> So I'm usually happy to pretend the first 0 is a 1
[17:14] <japhb> Yeah, agreed.
[17:15] <Altreus> But yeah the general idea of semantic versioning sits well with me, even if it doesn't literally mean x.y.z
[19:08] *** hankache joined
[20:26] *** hankache left
[23:14] <Geth> ¦ cro-webapp/templates-from-resources: a85c7465fe | (Jonathan Worthington)++ | .github/workflows/ci.yml
[23:14] <Geth> ¦ cro-webapp/templates-from-resources: Be sure to test against Cro::HTTP HEAD
[23:14] <Geth> ¦ cro-webapp/templates-from-resources: review: https://github.com/croservices/cro-webapp/commit/a85c7465fe
[23:16] <japhb> Oh, now 
[23:16] <japhb> *that's* a really useful idiom
[23:16] <japhb> FEK
[23:18] <japhb> Didn't even know zef could install directly from a github zip