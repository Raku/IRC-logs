[07:39] *** patrickb joined
[08:03] <japhb> Trying to build my way up to Cro (and eventually MUGS) on a Raspberry Pi 4 (4 GB).  So far I've gotten Rakudo built (YAY!) and most of my "easier" modules installed, but I can't get past IO::Socket::Async::SSL, which is failing the t/bad-incoming.t no-hang test.

[08:03] <japhb> Is there some way that test can fail other than the QUIT handling that was added as part of the same commit that created the test file?

[08:03] <japhb> I'm not sure what to investigate.

[08:04] <japhb> (And FWIW, IO::Socket::SSL, the non-async version, *does* install successfully on the RPi)

[08:12] <patrickb> releasable6: status

[08:52] *** patrickb left
[09:17] *** patrickb joined
[10:25] *** sena_kun joined
[11:48] <patrickb> cro.services/ is down for me. Anyone else?

[11:49] <jnthnwrthngtn> Yes. Everybody else.

[11:50] <jnthnwrthngtn> The ultimate blame falls on renaming Perl 6 to Raku :P

[12:03] *** mark joined
[12:03] <mark> Hi all, https://cro.services appears to be down, or is that just me?

[12:04] <sena_kun> mark, it's a known issue, sorry for the inconvenience.

[12:04] <mark> sena_kun: no problem, just thought I'd swing by in case it had just happened and not been noticed yet

[12:04] <mark> thanks for your answer

[12:05] <sena_kun> mark, thanks for your concern and interest in Cro!

[12:20] <mark> no pb

[12:20] *** mark left
[12:32] <jnthnwrthngtn> Everything is back up.

[12:32] <jnthnwrthngtn> That was super annoying :/

[12:33] <sena_kun> jnthnwrthngtn, 

[12:33] <sena_kun> jnthnwrthngtn++

[12:33] <jnthnwrthngtn> But at least I'll not have another round of fun with certbot

[12:33] <jnthnwrthngtn> Because it's gone from the whole thing

[12:34] <jnthnwrthngtn> python--

[12:34] <jnthnwrthngtn> Every time I worry about immaturity of the raku ecosystem, I just have to work with something else, and most of the time I realize it's all crap.

[12:54] <patrickb> For me one of the big benefits of open source, scripting languages and especially perl and raku is the ability to very quickly dig down into the modules I use and fix stuff that is broken. `git clone ... ../some_module`, `raku -I../some_module -I. prog.raku` and you're good to go.

[17:39] *** sena_kun left
[21:46] *** patrickb left
