[04:26] *** Xliff joined
[04:27] <Xliff> Hello gentlemen. This definitely looks like a Cro issue. I have no idea how to fix it, at this time:

[04:27] <Xliff> No such method 'attributes' for invocant of type

[04:27] <Xliff> 'Perl6::Metamodel::CoercionHOW'

[04:27] <Xliff>   in method parse at /home/ubuntu/rakudobrew/versions/moar-blead/install/share/perl6/site/sources/420A8C169D235BFA5450A21197EA59972595651B (Cro::WebApp::Form) line 295

[04:27] <Xliff> ^^ jnthnwrthngtn 

[04:28] <Xliff> The problem comes in .parse, when it wants to access self.^attributes. It cannot because it can't find .^attributes on self as it reports a ::CoercionHOW instead of a ::ClassHOW

[04:30] <Xliff> This is odd, because the class I am using it for reports itself as ::ClassHOW via "Instance.HOW"

[04:32] <Xliff> Ah. I wasn't paying attention. It's not what is being coerced to, it's what it's being coerced FROM. That is the form-data portion.

[04:32] <Xliff> Here's the relevant bit: "post -> 'view', $instance-id { form-data -> Instance() $instance { ... }; }; "

[07:33] *** Xliff left
[09:44] *** lizmat_ joined
[09:47] *** lizmat left
[09:53] *** kawaii_ left
[10:00] *** kawaii_ joined
[10:01] *** perlmaros left
[10:05] *** perlmaros joined
[17:05] *** Altai-man joined
[17:06] <JRaspass> In ad-hoc middleware (e.g. before { ... }) `content 'text/html', render-template ...` still works under the latest Cro but `template ...` now dies with "Can only use 'template' inside of a request handler". Is that intentional? Seemed pretty convenient to use the short-hand in before blocks, my use-case is rendering a "pretty" 404 page.

[17:52] <JRaspass> And annoyingly going the first way means I can't make use of the new template parts as they seem to be loaded via `template`

[18:48] *** kawaii_ left
[18:51] *** kawaii_ joined
[18:52] *** zostay left
[18:53] *** zostay joined
