[06:01] *** avuserow left
[08:39] *** xinming left
[10:16] *** xinming joined
[10:41] *** xinming left
[11:25] *** Xliff joined
[11:40] *** xinming joined
[12:25] <Geth> Â¦ cro-http/link-gen-no-fork: d8cd5f580c | Altai-man++ | 2 files

[12:25] <Geth> Â¦ cro-http/link-gen-no-fork: WIP

[12:25] <Geth> Â¦ cro-http/link-gen-no-fork: review: https://github.com/croservices/cro-http/commit/d8cd5f580c

[12:28] <Geth> Â¦ cro-webapp/link-support: 524b988471 | Altai-man++ | 4 files

[12:28] <Geth> Â¦ cro-webapp/link-support: WIP

[12:28] <Geth> Â¦ cro-webapp/link-support: review: https://github.com/croservices/cro-webapp/commit/524b988471

[13:00] <Xliff> jnthnwrthngtn: What would you suggest is the best way to mark templates in a directory from being subject to compile-all?

[13:00] <Xliff> I have an easy change that allows templates ending with ".off" or ".disabled" to be excluded. 

[13:00] <Xliff> Would that be a fair PR for Cro::WebApp::Template::Repository?

[13:01] <jnthnwrthngtn> I thought compile-all already took a filtering argument?

[13:02] <Xliff> Ah. Was that mentioned in the docs?

[13:02] <jnthnwrthngtn> Dunno

[13:02] <jnthnwrthngtn> Maybe not

[13:02] <jnthnwrthngtn> Probably it's got API docs

[13:02] <jnthnwrthngtn> (The declarator ones)

[13:04] <Xliff> OK. Will look. Thanks!

[13:08] <Xliff> Yep. There was a mention there. Mea culpa. 

[13:48] <Xliff> jnthnwrthngtn: Is there any way to force the order of fields?

[13:49] <Xliff> I have one field that is comprised in a role, and the other is in the class.

[13:49] <Xliff> I would like the one in the role to appear first on the form.

[13:49] <jnthnwrthngtn> No, although you could use `is` with the role to force inheritance instead

[13:49] <jnthnwrthngtn> Which I think would get the thing you want

[13:52] <jnthnwrthngtn> hm, or at least, I think it made it do that kinda thing with inheritance, but I may not have

[13:52] <Xliff> OK, so how would that work with submethod BUILD?

[13:53] <Xliff> I think all "$!attributes" will have to be replaced with self.attribute 

[13:54] <jnthnwrthngtn> Doubt BUILD is a problem since that's worked well with inheritance far longer than it has with roles

[13:54] <jnthnwrthngtn> But yes, there's the visibility change issue if you're referring to attributes

[13:55] <Xliff> Yes. Using "is" does not affect form order.

[13:55] <Xliff> So I was trying to comprise a self-contained role that contained attribute and select method.

[13:55] <jnthnwrthngtn> Ah, then probably I didn't make it do base-class first

[13:56] <Xliff> Would that be a hard thing to add?

[13:58] <jnthnwrthngtn> Probably easy

[13:58] <jnthnwrthngtn> At https://github.com/croservices/cro-webapp/blob/master/lib/Cro/WebApp/Form.pm6#L386

[13:58] <jnthnwrthngtn> Try something like self.^mro.reverse.map({ |.^attributes(:local) }).grep(*.has_accessor)

[13:59] <Xliff> Heheh! I almost had exactly that.

[14:00] <Xliff> Perfect!

[14:00] <Xliff> jnthnwrthngtn++!

[19:23] *** TempIRCLogger left
[19:23] *** TempIRCLogger joined
[19:34] *** TempIRCLogger left
[19:35] *** TempIRCLogger joined
[20:52] *** TempIRCLogger left
[20:52] *** TempIRCLogger joined
[22:42] *** jgaz joined
[22:55] *** xinming left
[22:58] *** jgaz left
