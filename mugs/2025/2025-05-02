[01:00] <timo> > ♥♥♥♥♥♥♥♥♥♥♥♥♥���♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥

[01:00] <timo> what's that all about?

[01:02] <timo> is it just showing escape sequences that Terminal::Print uses there?

[02:22] <japhb> The use of the replacement character there is a bit odd, yeah.

[05:37] *** lizmat_ joined
[05:41] *** lizmat left
[09:46] *** Geth joined
[11:22] <patrickb> I actually have the tests succeeding on my windows box.

[11:23] <patrickb> Putting a debug print printing cold and rows in the failing test file gives cols: 120, rows: 9001

[11:23] <patrickb> That's probably the culprit.

[11:34] <patrickb> A quick googling on how to manipulate the terminal size gave nothing. Would it make sense to skip the affected test if the terminal height is > 300 ?

[11:51] <patrickb> I have adapted the test accordingly. Now we are succeeding on all platforms.

[14:42] <japhb> It sounds like somehow the rows is returning the scrollback length rather than the viewport height?  That's ... rather odd.

[15:01] <japhb> I let this roll around in my brain while I got ready for the morning, and have some thoughts ...

[15:03] <japhb> Something is wrong with either the test or the T-P implementation if it crashes because there's lots of rows that actually *can* be addressed.

[15:04] <japhb> Something is wrong with the T-API implementation on Windows if the number of rows is completely bogus, and furthermore people won't actually be able to *use* T-P if the row count is nonsense.

[15:05] <japhb> I feel like instead of skipping this test for bogus row counts we need an *earlier* test that the row count is actual sensical.

[15:06] <japhb> Oddly, this is one of those places where using a hacky version of T-W's query-based detection might actually make a useful test;

[15:07] <japhb> it might actually be worth having a test that checks whether the escape sequence queries and T-API's detection return the same result.

[15:08] <japhb> Seems like the kind of test that belongs in the T-API test suite, actually.

[15:11] <japhb> (It doesn't need to be the actual implementation, and in fact probably *shouldn't* be.  But as a test checking that multiple different methods produce the same result?  Seems valid.)

[15:38] <japhb> Odd thought: Are you sure that Windows CI actually even has a properly set up terminal?  I kinda wonder if we're just *assuming* that the Windows CI environment makes sense for terminal UI code

[17:28] <timo> yeah i was kind of surprised that there's even something at all that responds to asking the terminal how big it is

[18:52] <patrickb> I kind of fear it's actually a correct size, an artifact of how the CI works with the apps. I'll try to validate this.

[22:22] <japhb> Thank you patrickb++

