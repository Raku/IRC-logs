[09:32] *** wayland left
[09:55] *** wayland76 joined
[12:52] *** lizmat left
[17:53] *** lizmat joined
[21:02] *** librasteve_ joined
[22:17] <patrickb> I'm still working on PTY support in raku. (Currently implements PTY support in libuv). I've taken a lot of inspiration from node-pty. There is one commit in there, where the termios of the PTY is explicitly specified. 30 lines with loads of options. Other PTY libraries don't do this. I think I don't have enough context to judge if I should copy that code or not.

[22:17] <patrickb> https://github.com/microsoft/node-pty/commit/424842d4553d3297c2705e60222e3329f41b6979

[22:17] <patrickb> That's the commit.

[22:19] <patrickb> I'd value any opinions and insights.

[22:20] <patrickb> Questions I have: Why would the defaults be bad? How did that committer come up with those specific values?

[22:29] <japhb> My recollection is that the CC array is just a way to remap the terminal control codes.  I think you'd need them if you wanted a way for an embedded PTY to accept an alternate set of keys for control so as to differentiate from the ones that affect the surrounding UI, without having to do some sort of modal control or escape-control UX

[22:32] <japhb> As for the i/o/c/l flag bitfields, on first glance that looks like "made some specific set of default flags explicit, so that we're not surprised if some OS/kernel uses a slightly different default set"

[22:33] <japhb> But actual useful comments would have been nice ... JEREMY.  *glares in disappointed dad/manager*

