[15:36] <lizmat> https://github.com/dankamongmen/notcurses looks interesting  ....

[15:38] <japhb> It is indeed.  Had half an eye on that for a while.  It's not a good match for what I want to do at the moment, but as a proof of the possibilities?  Dang ...

[15:40] <lizmat> would you use it if there were a Raku interface for it ?

[15:58] *** japhb_ joined
[15:59] <japhb_> Gosh, I just *love it* when the screen locker crashes, thus preventing all interaction with the computer and requiring a hard reboot just to get access again.  :eyeroll:

[16:01] *** japhb left
[16:10] <japhb_> *checks logs*  To answer your question of whether I'd use it if there was a Raku interface: Maybe.  It certainly seems to have speed and power, and a not bad memory footprint for what it does, but I've spent quite some time going deep into terminal work over the years.  If there's anything I'm using now that it *doesn't* support, I'd probably be frustrated by that.

[16:11] <japhb_> OTOH, if we could make Terminal::Print a crapload faster by wrapping it around notcurses, that would help everyone.  Depends on how fast the NativeCall wrappers are, I guess.

[16:12] *** japhb_ is now known as japhb

[16:12] <japhb> Ah, old nick connection finally timed out, wheeeee

[16:13] <lizmat> Xliff_ ^^

[16:13] <japhb> lizmat: Did you still want to send me terminal-quick-test and terminal-autodetect results for your various Mac terminals, or is the current autodetection sufficient?

[16:13] <lizmat> argh... forgot, will do so now

[16:15] <lizmat> terminal-quick-test doesn't appear to be installed ?

[16:16] <japhb> Should be installed with Terminal::Tests?

[16:16] <japhb> terminal-autodetect comes with Terminal::Capabilities

[16:24] <lizmat> https://gist.github.com/lizmat/c60b767736683b37f46cab9bc48df49c

[16:25] <japhb> The quick-test result needs to be a screenshot, because otherwise it gets filtered by GitHub

[16:32] <lizmat> hmmm... how do you get a screen shot into a gist ?

[16:35] <lizmat> sent screenshot by mail

[16:37] <japhb> You can comment on your gist, use the paperclip icon to add an attachment, select the image on your hard drive, and it will upload it and then create a markdown link to the uploaded file.

[16:37] <japhb> thx

[16:37] <lizmat> also done

[16:39] <lizmat> afk&

[16:40] <japhb> Goodness gracious Apple Terminal has issues

[16:43] <japhb> One annoying thing is that it has decent *feature* support ... it just seems to implement those features really badly.

[16:44] <japhb> Now I know why so many Mac folk are iTerm2 fans

[16:51] <japhb> What are the env variables LANG and LC_ALL in that terminal?

[18:09] <lizmat> they are not set

[19:40] * japhb smacks Apple around with a wet POSIX spec

[19:42] <japhb> lizmat: Are there *any* environment variables set that include mention of UTF-8?  (ignoring case and punctuation, since they might instead say 'utf8' or somesuch)

[19:43] <japhb> (The lack of LANG and LC_ALL are why the autodetection is assuming ASCII semantics.)

[19:55] <Xliff_> So what's the difference between "static inline" and not "static inline"?

[19:56] <Xliff_> Aside from the fact that functions marked as such are not shared lib friendly.

[20:01] <japhb> This matches my (admittedly slightly rusty) memory, more or less: https://stackoverflow.com/questions/7762731/whats-the-difference-between-static-and-static-inline-function#7767858

[20:09] <japhb> lizmat: Also, what version of macOS are you running?

[20:26] <japhb> Ah, looking at old Terminal-Tests results, it looks like LizyPro is your *old* macOS install, 10.14 or so?

[20:26] <japhb> That would explain why it looked so "off"

[20:29] <japhb> lizmat: And can you send terminal-quick-test screenshot, terminal-autodetect results, macOS version, and LANG/LC_ALL/UTF-8 env var info for the *newer* install as well.

