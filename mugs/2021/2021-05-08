[01:04] <[Coke]> ... breaking it into chunks worked. wt
[01:04] <[Coke]> f
[01:06] <[Coke]> so if I want to test out a game with a UI?
[01:07] <japhb> "breaking it into chunks"?  What do you mean?
[01:08] <japhb> And what are you asking?  How to just play a game to prove the system is working?  Or to try adding an new UI to an existing game?
[01:08] <[Coke]> I did zef install <prereq1> , then <prereq2>, then tried MUGS, and it worked.
[01:09] <[Coke]> Just to play an existing game.
[01:25] <japhb> Gah
[01:26] <japhb> So, CLI and WebSimple both have (uber-simplistic) lobby functionality, which is to say that you can choose games directly in the UI
[01:26] <japhb> So if you do `mugs-cli` or `raku -Ilib mugs-cli`, you'll get a chance to select a game
[01:26] <japhb> (From whatever games you have installed, which in 0.1.1 is a short list.
[01:26] <japhb> )
[01:27] <japhb> If you start up a mugs-web-simple server and connect to it with your browser, it's the same.
[01:28] <japhb> If you use on of the newer UIs, like TUI, they don't have in-UI lobbies, so you have to specify the game-type on the command line: `mugs-tui foobar` to play the "foobar" game type
[01:28] <[Coke]> run mugs-cli; type "tic-tac-toe" and hit return. "waiting for game to start"
[01:28] <japhb> Oh~
[01:28] <japhb> Heh, that's a two-person-required game since I haven't done bots yet.  :-)
[01:29] <japhb> So, for that you'd need to start a server using `mugs-ws-server`
[01:29] <japhb> And then connect from two different windows: `mugs-cli --server=...`
[01:30] <japhb> I thought I made README info about all this, but maybe not?  Harrumph.
[01:30] <japhb> Oh, forgot to add:
[01:30] <japhb> The first person to select tic-tac-toe creates the game instance.
[01:31] <japhb> The other player needs to look at the available active games ('/games' ought to do that)
[01:31] <japhb> ... and then say '/game ID', where ID is the GameID of the game they want to join, to join that game.
[01:31] <japhb> Note that unlike e.g. TUI, CLI is designed for turn-based games, and currently has a fully-modal command prompt.
[01:32] <japhb> So if you want to see the actions of the other player, just press <enter> and it should show you the effect of queued async messages.
[01:32] <japhb> GAH, explaining all this reminds me of just how much *isn't* done./
[01:33] <japhb> SO MUCH WORK ...
[01:35] <[Coke]> got the number game working.
[01:35] <japhb> Phew
[01:35] <japhb> snowman and adventure and echo should all work too
[01:35] <[Coke]> snowman says "Launching" and then hangs.
[01:35] <[Coke]> ... and then doesn't. :)
[01:35] <[Coke]> (it's starteD)
[01:36] <japhb> Oh FFS, really?
[01:36] <japhb> Oh, phew
[01:36] <japhb> ARe you running with an internal stub server, or with an external WebSocket server (mugs-ws-server)?
[01:37] <[Coke]> I just ran mugs-cli like you said earlier.
[01:37] <[Coke]> snowman doesn't tell you the word you couldn't guess??
[01:38] <japhb> Ah, that would be the internal stub
[01:38] <japhb> No, right now it just gives you a new word of the same length (if you run out of guesses), or of a shorter length (if you guess successfully).
[01:38] <japhb> It was my test case for multi-round games.
[01:39] <japhb> Basically all the games *currently* there exist to exercise/test out some part of the infrastructure.
[01:39] <[Coke]> now it's hung. I went to another word, guessed a few letters, now it's hanging after I guessed.
[01:39] <[Coke]> anything I can do to help diagnose before I kill it?
[01:39] <[Coke]> ah. word was "to_nist". dict/words suggests "townist". :)
[01:40] <japhb> Not *before* you kill it, but you can run with --debug to turn on (relatively heavy, because you can't yet specify verbosity) debug output
[01:41] <japhb> Yeah, I don't think I would have gotten that word either.  :-)
[01:41] <[Coke]> ok. thanks. just wanted to make sure I could do *something*. :)
[01:42] <[Coke]> anyone working on poker of any type?
[01:42] <japhb> It's an 0.1.x release ... I'm working as fast as I can to make it easier for game makers, but *phew* are there a lot of yaks to shave!
[01:42] * japhb feels like he's already sheared an entire flock
[01:43] <japhb> I think you were the one person who talked about working on a poker trainer ...?
[01:43] <japhb> I have some *early* bits of CardGame support, but just enough to do things like define and shuffle a deck, and stuff like that.
[01:44] <japhb> Someone else has a blackjack game that they were thinking of porting (the person who is working on the Pop! UI)
[01:48] <japhb> Biggest new functionality right now is the CBOR support (which will be in 0.1.2), and the PFX test "game" to go with it.
[01:48] <japhb> That stuff hasn't been pushed yet because it needs a new Cro (the Cro team is working on a release).