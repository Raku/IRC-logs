[01:41] *** lizmat_ joined
[01:45] *** lizmat left
[04:49] <japhb> Apologies for disappearing for a couple weeks!  Life happened.  :-/

[04:49] <japhb> Let's see, first [Coke] .

[04:50] <japhb> Here's a (synchronous) program that does work in a pile of Git trees.  I use it personally just to see if I've forgotten to finish work, or make sure I've fetched all my upstreams.

[04:50] <japhb> https://gist.github.com/japhb/8dc8046b5718313a1629801d1fe3279b

[04:52] <japhb> Generally speaking, you should be able to see the most useful bits in the show-progress-bar() and hide-progress-bar() routines.

[04:52] <japhb> I've provided commented-out alternate implementations if you'

[04:53] <japhb> re having any compatibility problems with any of the Unicode or VT100 escape sequences.

[04:54] <japhb> You can see them get used liberally in the big for loop at the end

[04:56] <japhb> For async work, as long as you can serialize the actual output such that hide-progress-bar gets called before printing a regular line (e.g. something captured by Proc::Async) and show-progress-bar after, you're good.

[04:57] <japhb> One simple way would be to create a Channel or Supply that actually manages that, and any other `whenever` blocks that want to print just send to that common Channel/Supply as needed.

[05:01] <japhb> (Normally I license all Raku I write publicly under Artistic 2, but in case your $day-job is allergic to that license, I hereby grant you a license to incorporate/use any of the code there in your work code.)

[05:02] <japhb> (royalty-free, non-exclusive, worldwide, blah blah blah)

[05:05] <japhb> Oh, and let me know if anything isn't clear; I tried to comment liberally for your benefit.

[07:32] *** lizmat_ left
[07:32] *** lizmat joined
[12:12] <[Coke]> japhb++ I will have to digest that, thank you

[15:42] *** Geth left
[15:42] *** Geth joined
