[00:43] *** lizmat joined
[14:19] <patrickb> I'm wondering: Terminal-Print is only using a hand full of commands. My impression is that in today's time terminals are pretty much standardized. Could we just hard code the VT sequences for those few commands? That would rid us of our dependency on tput, curses and termcap/terminfo.

[14:20] <patrickb> Oh, ab5tract is not lurking here...

[15:22] <japhb> I have co-maint on T-P, FWIW.

[15:24] <japhb> Personally I have no objection to hardcoding the ANSI sequences, but that doesn't actually obviate tput without changing the architecture a bit -- there still needs to be a way to pull the terminal size.

[15:24] <patrickb> Hi japhb! Always nice reading you.

[15:25] <japhb> :-D

[15:25] <japhb> Ditto

[15:26] <patrickb> Btw. I have changing the PTY size implemented. Next on my list: Porting all of the Terminal stuff over to Windows.

[15:28] <japhb> So ... T-LE and T-W just directly query the terminal for its size, but T-P wasn't originally written with query capability, and was output only.  The ability to handle input at all was added later, but T-P remained procedural rather than event driven in general.

[15:28] <japhb> Go patrickb! 

[15:30] <japhb> (Of course, under *nix you can ask the terminal *driver* via API about the current terminal size, but that requires POSIX, so was considered less portable.)

[15:32] <japhb> Your efforts to switch out Term::termios for Terminal::MakeRaw indicate it would probably be viable to just do the same thing with the terminal size API anyway ....

[15:33] <japhb> The terminal landscape is indeed rather different than it once was.  At this point I guess there's only ANSI for in-stream commands and POSIX or Windows for out-of-stream API.

[15:53] <patrickb> Yes, I'd think the same.

[23:00] <japhb> Responded to your set-span-sgr PR

[23:01] <japhb> patrickb: ^^ and also: Want to make a Terminal::Size module or so?

