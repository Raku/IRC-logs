[07:05] *** patrickb joined
[07:53] <patrickb> o/

[07:56] <patrickb> I'm pretty sure Red fails to do "-" -> "_" conversion somewhere in INSERT statement creation on the SQLite backend. Any clues on where to look?

[07:57] <patrickb> Is that a drivers responsibility?

[08:00] <SmokeMachine> it should be done here: https://github.com/FCO/Red/blob/master/lib/Red/Driver/CommonSQL.pm6#L172

[08:01] <SmokeMachine> have you used `my $*RED-DEBUG = True;` to see the generated SQL?

[08:01] <patrickb> yes

[08:01] <SmokeMachine> patrickb: ^^

[08:03] <SmokeMachine> would you mind to share the code with that problem. please?

[08:03] <patrickb> https://nopaste.chaoz-irc.net/view/3c58b1ed

[08:04] <patrickb> https://nopaste.chaoz-irc.net/view/8b2e1063 <- that's the table class

[08:05] <patrickb> all those DB::Stuff thingies are enums

[08:07] <patrickb> https://nopaste.chaoz-irc.net/view/d1439ed1 <- that's the full Schema

[08:07] <SmokeMachine> it seems event-top is not being set...

[08:08] <SmokeMachine> oh! MAIN_BANCH is the enum?

[08:08] <patrickb> also source-retrieval-retries is still set to its default value

[08:08] <SmokeMachine> I mean, is MAIN_BRANCH the enum?

[08:09] <patrickb> project is also an enum, and that is set

[08:10] <patrickb> so my thesis is, it silently ignores attributes with - in them

[08:10] <patrickb> commit-sha is also missing

[08:10] <SmokeMachine> it seems a deeper problem... it seems it's not understanding enums... (I don't remember of testing enums...)

[08:11] <patrickb> it is well possible enums also don't work, but I'm really sure it also fails to deal with - in attributes

[08:12] <patrickb> commit-sha is a plain string column. It's missing. source-retrieval-retries is a plain Int column, its passed value is ignored and the default value applied

[08:12] <SmokeMachine> I've already had many problems forgetting to do the transformation from kebabcase to snake case on Red's code... I thought it was fixed... but it's possible I've forgot it somewhere else...

[08:12] <SmokeMachine> what's your Red version?

[08:13] <patrickb> project on the other hand is *not* missing

[08:13] <patrickb> 0.1.44

[08:14] <SmokeMachine> I'll need to investigate that...

[08:15] <patrickb> are there any hopes for enums to somehow work? (once the - _ thing is solved?)

[08:15] <SmokeMachine> I'll try to fix that as soon as possible... would you mind to open an issue with that, please?

[08:15] <patrickb> will do

[08:16] <SmokeMachine> if you continue trying to find the problem, and you fix that, please PR it

[08:22] <patrickb> I'll have another quick look, but won't spend much time on it. I guess you'll be a lot quicker than me in finding the problem.

[08:22] <SmokeMachine> thank you!

[08:23] <patrickb> https://github.com/FCO/Red/issues/487

[08:24] <SmokeMachine> thanks!

[08:30] <patrickb> Isn't it possible to specify a column name different from the attribute? `is column<name => 'col-name'> or something like that?

[08:36] <SmokeMachine> yes, exactly that

[08:36] <patrickb> SmokeMachine: Thanks for your work and caring for the users of Red. This is much appreciated and not taken for granted.

[08:36] <SmokeMachine> :)

[08:49] <SmokeMachine> patrickb: one example of renaming a column: https://github.com/FCO/Red/blob/658511fd434d2689eec71c79cf48499507fadc6c/t/02-tdd.t#L93

[08:55] <patrickb> how can I give a `referencing` a name?

[09:01] <SmokeMachine> at the same way, `is referencing(*.id, :model<Bla>)` is just a fancy way of doing a `is column{ :references{ .id }, :model-name<Bla>}` ... for example: https://github.com/FCO/Red/blob/658511fd434d2689eec71c79cf48499507fadc6c/t/24-metamodel-model.t#L31

[09:03] <SmokeMachine> patrickb: ^^

[10:20] <patrickb> SmokeMachine: I think you were right. It's actually the enums that cause this, not the "-". 

[10:21] <SmokeMachine> :) and :( at the same time... :)

[10:23] <SmokeMachine> I don't remember testing it with enums... I think I've completely forgot about them... I only thought about creating tables from the enums... but haven't implemented that...

[10:24] <SmokeMachine> patrickb: https://github.com/FCO/Red/issues/34

[10:25] <patrickb> Hm. Couldn't it just do a very thin mapping to Plain ints?

[10:26] <SmokeMachine> I think we should support all of those options... (but we could start with the mapping to the enum's value...)

[10:27] <SmokeMachine> what do you think?

[10:28] <SmokeMachine> for now, you maybe could use custom inflators and deflators for that (while that's not implemented)

[10:29] <patrickb> I suspect that would cover most uses. I guess one typically would want enums to just list alternatives. Especially in the context of a DB. For that case just writing the enum value to the DB is the obvious solution.

[10:29] <SmokeMachine> a custom inflator/deflator example: https://github.com/FCO/Red/blob/658511fd434d2689eec71c79cf48499507fadc6c/examples/blog2/Post.rakumod#L11

[10:30] <patrickb> Thanks! I'll have a look.

[10:31] <patrickb> Is it possible to provide inflators / deflators for a type instead of a column? Quite some typing otherwise...

[10:36] <SmokeMachine> It's planed to be possible... currently we have a hardcoded one... https://github.com/FCO/Red/blob/master/lib/Red/Type/Json.pm6

[10:39] <patrickb> So can I implement such a Type class myself and just reference it in `is column{}`?

[10:41] <SmokeMachine> I don't think that will be that easy... if I remember well Json was kind special... and I was still trying to find a goodly to generalize that...

[10:42] <SmokeMachine> and Json isn't defined on `is column{}` but on the attribute itself, for example: https://github.com/FCO/Red/blob/658511fd434d2689eec71c79cf48499507fadc6c/t/36-json.t#L15

[10:43] <SmokeMachine> (I really need to improve the documentation...)

[10:46] <SmokeMachine> patrickb: can I ask you a favor? if you learning something you find useful while testing Red, would you mind to write. piece of documentation about that and PR it? My poor English make it too hard to me to write documentation... (if any other person would like to also help me on that, I'd thank a lot)

[11:05] <patrickb> Will see what I can do

[11:06] <SmokeMachine> thank you very much!

[11:35] <patrickb> I have now added respective inflators and deflators to my schema and the values in the generated SQL are now properly deflated. But the SQL still only includes default values. All values I passed to the Object constructor are still missing in the SQL.

[11:35] <patrickb> This is such an obvious problem that I suspect I'm doing something quite obvious wrong.

[11:36] <SmokeMachine> odd, can I see your code?

[11:37] <patrickb> https://nopaste.linux-dev.org/?1335494

[11:38] <SmokeMachine> ok, that's it!

[11:38] <SmokeMachine> there are 2 options to insert data on database:

[11:39] <SmokeMachine> 1 - `Model.new(:col1<data1>, :col2<data2>).^save`

[11:39] <SmokeMachine> 2 - `Model.^create(:col1<data1>, :col2<data2>)`

[11:39] <patrickb> ouch

[11:40] <SmokeMachine> when you do `Model.new(...).^create` you are calling `Model.^create` without any parameter

[11:41] <SmokeMachine> is it possible that's the problem since the beginning? (sorry for not seeing that before)

[11:41] <patrickb> Is it possible to forbid ^create on a defined object?

[11:41] <patrickb> well, the inflators and deflators are probably still necessary.

[11:41] <SmokeMachine> yes... I think that's a good idea

[11:42] <SmokeMachine> would you mind to open a new issue, please?

[11:42] <patrickb> :-)

[11:42] <SmokeMachine> (I mean for forbidding .^create on defined obj)

[11:44] <patrickb> https://github.com/FCO/Red/issues/488

[11:44] <SmokeMachine> thanks!

[11:46] <SmokeMachine> for creating/updating/deleting rows, we have a documentation page: https://fco.github.io/Red/tutorials/start.html

[11:47] <SmokeMachine> have you already seen this? https://fco.github.io/Red/

[11:47] <SmokeMachine> (almost everything is missing there... but that's a start...)

[11:47] <patrickb> I have read through most of it, yes.

[13:09] *** abraxxa left
[19:46] <patrickb> SmokeMachine: https://github.com/FCO/Red/issues/490

[19:46] <patrickb> This has haunted me for the last few hours.

[19:48] <patrickb> SmokeMachine: I suspect it's a rakudo bug, but it makes sense that you have a look first, as I think you can pinpoint better where things go wrong.

[20:05] <SmokeMachine> Have you tried adding `use Red:api<2>` to CITestSetManager.rakumod?

[20:06] <SmokeMachine> Without that the operators are not being override…

[20:06] <SmokeMachine> patrickb: ^^

[20:08] <patrickb> Works. Thanks!

[20:08] <SmokeMachine> But that error is completely LTA…

[20:08] <patrickb> The failure mode is... suboptimal.

[20:08] <SmokeMachine> Yes, it is

[20:08] <patrickb> Yeah...

[20:09] <SmokeMachine> Would you mind to add that tou tour issue, please?

[20:09] <SmokeMachine> Sorry and thanks for finding all these issues! :)

[20:13] <SmokeMachine> I really need some help finding and fixing Red issues…

[20:33] <patrickb> Done

[20:49] <SmokeMachine> thanks!

[21:39] *** patrickb left
