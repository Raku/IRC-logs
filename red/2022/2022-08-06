[01:47] <leont> Question about the example in the README: in the .active-posts.grep example does that filtering client side or on the server?

[01:47] <leont> I assume the former, but if it's the latter I'm really curious how you did that

[02:50] <japhb> leont: One of the Red pieces of magic is that it essentially builds ASTs from simple greps and turns them into where clauses.  Remember that .grep doesn't have to be the one provided by Raku.  ;-)

[03:21] <SmokeMachine> Not only for grep, but also map, first and etcâ€¦

[03:23] <SmokeMachine> leont: thatâ€™s DB side. You can see the generated SQL just below that on README.

[03:25] <SmokeMachine> leont: this is whatâ€™s used to do that: https://github.com/FCO/Red/blob/master/lib/Red/PrepareCode.pm6#L56

[03:26] <SmokeMachine> I plan to make it even more powerful with RakuAST once itâ€™s doneâ€¦

[03:27] <SmokeMachine> And here is the grep it uses: https://github.com/FCO/Red/blob/master/lib/Red/ResultSeq.pm6#L131

[11:30] <leont> That sounds cool, but I'm not understanding it quite yet

[11:31] <leont> PrepareCode.pm6#L62 looks like where the magic happens, but just calling func with a type object shouldn't do much, right?

[11:50] <leont> And $try-again should be False at that point, so the next line should always return??

[12:08] <lizmat> pretty much looks like that, yes  :-)

[13:24] <SmokeMachine> Red::AST have a special Bool methodâ€¦  https://github.com/FCO/Red/blob/master/lib/Red/AST.pm6#L28

[13:26] <SmokeMachine> leont: ðŸ‘†

[13:29] <leont> I didn't see that one coming

[13:30] <lizmat> hmmm  me neither

[13:32] <SmokeMachine> (I hope that become much better with RakuAST)

[13:32] <leont> Yeah, I don't think this can be done in a sane way without RakuAST. I'm surprised you got this far

[13:35] <SmokeMachine> I hope it become as simple as a RakuAST â€”> Red::AST translator

[13:40] <SmokeMachine> lizmat: ant thatâ€™s why I wanted a easy way of getting the ast of a blockâ€¦ ðŸ‘†

[13:41] <lizmat> gotcha

[13:44] <SmokeMachine> Would that make sense?

[14:02] <leont> It makes sense on your side, but would it make sense to keep those ASTs around everywhere?

[14:07] <leont> It's easy to imagine an Â«ast { ... }Â» block though

[14:57] <SmokeMachine> I think that could be a way to do that optionally

[16:55] <leont>  Also, SQLite supports RETURNING nowadays (since 3.35), I think your docs would be a lot more readable if you used that

[18:11] <SmokeMachine> leont: would mind to create an issue for that?

[22:55] <SmokeMachine> I'm preparing a presentation for The Raku Conference about Red and I'm wondering... to run an update for several rows, one could just run a map doing the changes on a ResultSeq and call .save on the returned ResultSeq, like this: `Post.^all.grep(not *.title.ends-with: "!!!").map({ .title ~= "!!!" }).save`... and now I'm wondering... should ResultSeq.sink call .save?

[22:56] <SmokeMachine> what do you all think?

