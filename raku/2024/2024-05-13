[00:19] *** Manifest0 left
[00:20] *** guifa_ left
[00:29] *** tejr left
[00:35] *** tejr joined
[00:51] *** guifa_ joined
[01:05] *** guifa_ left
[01:23] *** guifa_ joined
[01:43] *** kylese joined
[01:43] *** hulk left
[02:15] *** kylese left
[02:15] *** kylese joined
[03:00] *** Some-body_ joined
[03:01] *** DarthGandalf left
[03:04] *** Some-body_ is now known as DarthGandalf

[03:27] *** bdju joined
[04:11] *** MasterDuke left
[04:40] *** sadome joined
[04:40] *** sadome left
[04:41] *** sadome joined
[04:41] *** sadome left
[04:42] *** sadome joined
[04:42] *** sadome left
[04:43] *** sadome joined
[04:43] *** sadome left
[04:47] *** sadome joined
[04:47] *** sadome left
[04:47] *** sadome joined
[04:47] *** sadome left
[05:34] *** Sgeo left
[06:41] *** silug left
[06:53] *** silug joined
[07:52] *** sena_kun joined
[07:57] *** dakkar joined
[08:30] *** jpn joined
[08:35] *** jpn left
[08:50] *** jpn joined
[08:56] *** jpn left
[09:00] *** jpn joined
[10:20] *** thaewrapt left
[10:35] *** thaewrapt joined
[10:41] *** thaewrapt left
[10:46] *** jpn left
[10:49] *** thaewrapt joined
[12:45] *** jpn joined
[14:04] *** Xliff joined
[14:05] <Xliff> nine: I know I have brought this up earlier, but was there a reason why raku can't use an assumed ~/.raku/precomp directory instead of basing things on -I, and would it be possible to set it via environment var?

[14:05] <tellable6> 2024-05-11T09:27:44Z #raku-dev <lizmat> Xliff_: a git clone tells me:

[14:16] <Xliff> lizmat: Message received. Will fix! Thanks!

[14:20] <coleman> what is the difference between precomp and RAKU_LIB?

[14:23] <[Coke]> raku_lib is where to search. precomp is "for this particular thing you're trying to use, let me create a bytecode version of it"

[14:24] <[Coke]> then next time you can load the bytecode, saving some compile time.

[14:24] <[Coke]> (only done for modules, not scripts)

[14:26] <lizmat> actually, I think scripts are also precompiled nowadays?  ugexe ?

[14:27] <Xliff> So wait. RAKU_LIB is the environment var that determines where .precomp lives?

[14:35] <[Coke]> er, also, isn't it RAKULIB (no underscore?)

[14:36] <lizmat> "RAKUDOLIB and RAKULIB append a comma-delimited list of paths to the search list for modules"

[14:36] <[Coke]> and I don't believe those are the same thing xliff. I think RAKULIB is where to search for installed code, not which precomp dir to use.

[14:44] <[Coke]> what's the bot to search released modules for a code snippet?

[14:45] <ugexe> where .precomp lives is an implementation detail of whatever repository gets used to load some module

[14:46] <ugexe> scripts are not precompiled

[14:47] <ugexe> i tried to get scripts precompiling at the PTS in England I think, but never managed to get it to work

[14:47] *** soverysour joined
[14:48] *** soverysour left
[14:48] *** soverysour joined
[14:51] <ugexe> https://github.com/rakudo/rakudo/commit/f4c591b9cfcf589096f6cf4f6001387a14df93de from the precompile-installed-scripts branch

[14:57] <lizmat> ugexe++  TIL

[15:02] <Xliff> lizmat: GLib v0.0.7 released with URI Uri issue resolved

[15:03] <lizmat> Xliff++

[15:07] <nine> Xliff: just prepend the desired precomp storage to the repository list: raku -I/path/to/precomps -Ilib ...

[15:13] <Xliff> nine: Ah. That will do! Thanks

[15:18] <discord-raku-bot> <antononcube> Where -- in what name space -- packages for particular types of modeling (say, epidemiological) are placed? I think "Math::" is more generic functionalities, like, integration or polynomial manipulation.

[16:29] *** ttyyls left
[16:29] *** ttyyls joined
[16:29] *** ttyyls left
[16:36] *** dakkar left
[16:43] *** ttyyls joined
[17:18] <discord-raku-bot> <_grenzo> um....Science?

[17:19] <discord-raku-bot> <_grenzo> or if it's all modelling...Model?

[17:23] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/05/13/2024-20-doc-announcing/

[17:24] * sjn reads RWN \o/ # lizmat++

[17:24] *** thaewrapt left
[17:35] *** thaewrapt joined
[17:41] *** thaewrapt left
[17:52] *** thaewrapt joined
[17:59] *** teatwo joined
[18:00] *** hankache joined
[18:01] *** teatime left
[18:01] *** tea3po joined
[18:04] *** teatwo left
[18:07] <tbrowder> lizmat: ref CSV::Table, that was new, v0.0.1

[18:08] <lizmat> indeed it is!

[18:08] <lizmat> Oops

[18:09] <lizmat> Fixed, thanks for the headsup!

[18:12] *** hankache left
[18:12] *** hankache joined
[18:12] *** teatwo joined
[18:16] <ab5tract> tbrowder: congrats on the release!

[18:16] *** tea3po left
[18:28] *** jpn left
[18:37] *** oogle joined
[18:38] <oogle> is there a module I can import to unicode symbolic logic operators or can I make them with infix somehow?

[18:39] <oogle> sub infix:<∧> ($n, $b) {

[18:39] <oogle>   return ($n and $b);

[18:39] <oogle> }

[18:39] <oogle> for example

[18:39] <oogle>  sub infix:<∨> ($n, $b) {

[18:39] <oogle>   return ($n or $b);

[18:39] <oogle> }

[18:40] <oogle> etc

[18:41] <[Coke]> many are already builtin: https://docs.raku.org/language/unicode_ascii

[18:41] <lizmat> m: my constant &infix:<∧> = &infix:<and>; dd 42 ∧ 666

[18:41] <camelia> rakudo-moar 774cc8641: OUTPUT: «666␤»

[18:42] <lizmat> if it's about renaming ops

[18:42] <oogle> ok great

[18:43] <oogle> lizmat thanks

[18:44] <lizmat> mind you: in the case && and || or you will lose short-circuiting

[18:45] <lizmat> m: my constant &infix:<∧> = &infix:<and>; dd 0 ∧ (say "foo")

[18:45] <camelia> rakudo-moar 774cc8641: OUTPUT: «foo␤0␤»

[18:45] <lizmat> m: dd 0 and (say "foo")

[18:45] <camelia> rakudo-moar 774cc8641: OUTPUT: «0␤»

[18:46] <oogle> lizmat: I had seen code like this:

[18:46] <oogle> multi sub prefix:<¬> ($n) {

[18:46] <oogle>   return not $n;

[18:46] <oogle> }

[18:47] <lizmat> yeah, that works too, but add another level of indirection

[18:47] <oogle> (and lists of infix equiivalents)

[18:47] <oogle> OK

[18:48] <lizmat> m: my constant &prefix:<¬> = &prefix:<not>; say ¬True

[18:48] <camelia> rakudo-moar 774cc8641: OUTPUT: «False␤»

[18:48] <lizmat> m: my constant &prefix:<¬> = &prefix:<not>; dd &prefix:<¬>

[18:48] <camelia> rakudo-moar 774cc8641: OUTPUT: «Mu prefix:<not> = proto sub prefix:<not> (Mu $, *%) {*}␤»

[18:49] <lizmat> note that it really is just an alias

[18:50] <oogle> It was a while ago (before raku rename) but someone had a repl with an exhaustive set of logic symbols defined and it was fun seeing perl6 handle it .. they even had some error messages that were straight out a symbolic logic text

[18:50] <lizmat> well, if that list exists somewhere still, it could be turned into a module indeed

[18:56] <oogle> lizmat yeah would be cool if it were really well done (might take a a long time) the one I saw seemed simple toy application but had messages like "A statement cannot be true & false at the same time according to the law of non-contradiction". I remember asking if it written in scheme or something and they said "No. In perl. Version *6*".

[18:56] <tbrowder> ab5tract: thanks! i’m sure it has warts, but i’m pretty pleased with it

[18:57] <lizmat> oogle: did you ask on an IRC channel?

[18:58] <oogle> is there another one?

[18:58] <oogle> oh #raku-beginners

[18:59] <oogle> no I saw it demoed by some geeky philopsophers

[18:59] <lizmat> there are quite a few #raku- channels

[19:00] <lizmat> oogle: https://irclogs.raku.org/ is where you can search them

[19:00] <Geth> ¦ raku.org/hankache-patch-1: 2379c096f4 | (Naoum Hankache)++ (committed using GitHub Web editor) | source/whatever/index.html

[19:00] <Geth> ¦ raku.org/hankache-patch-1: Add Notepad++ to list of IDEs

[19:00] <Geth> ¦ raku.org/hankache-patch-1: review: https://github.com/Raku/raku.org/commit/2379c096f4

[19:00] <oogle> lizmat: nice! cheers

[19:00] <Geth> ¦ raku.org: hankache++ created pull request #222: Add Notepad++ to list of IDEs

[19:00] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/pull/222

[19:03] *** thaewrapt left
[19:03] <Geth> ¦ raku.org: 995c614971 | (Naoum Hankache)++ (committed by Will Coleda) | source/whatever/index.html

[19:04] <Geth> ¦ raku.org: Add Notepad++ to list of IDEs

[19:04] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/commit/995c614971

[19:18] *** jpn joined
[19:20] <oogle> raku & rust are in a heated competition re: error messages  ... and the results beeyootiful

[19:21] <oogle> beyond words

[19:22] <oogle> thanks y'all

[19:22] *** oogle left
[19:31] <discord-raku-bot> <antononcube> Well, modeling and simulation.

[19:42] *** jpn left
[20:04] *** eseyman left
[20:07] *** manu_ joined
[20:15] *** manu_ is now known as eseyman

[20:45] *** jpn joined
[20:55] *** hankache left
[21:04] <discord-raku-bot> <librasteve> Model++

[21:06] *** soverysour left
[21:17] *** jpn left
[21:45] *** jpn joined
[21:45] *** sadome joined
[21:45] *** sadome left
[21:51] *** jpn left
[22:09] *** sadome joined
[22:09] *** sadome left
[22:09] *** sadome joined
[22:09] *** sadome left
[22:21] *** Sgeo joined
[22:54] *** thaewrapt joined
[23:03] *** jpn joined
[23:23] *** jpn left
[23:40] *** sena_kun left
[23:48] <discord-raku-bot> <antononcube> Ok. I will think about using "Model::" .

[23:52] *** bdju left
[23:54] *** bdju joined
