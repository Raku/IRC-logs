[01:01] *** inspork left
[01:55] *** sjn left
[02:04] *** Manifest0 left
[02:07] *** sjn joined
[02:21] *** hulk joined
[02:22] *** kylese left
[02:31] <discord-raku-bot> <antononcube> weekly: https://youtu.be/fwQrQyWC7R0

[02:31] <notable6> antononcube, Noted! (weekly)

[02:53] *** Aedil joined
[03:01] *** yewscion joined
[03:06] *** yewscion left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:50] *** yewscion joined
[03:54] *** yewscion left
[04:22] *** yewscion joined
[04:27] *** yewscion left
[04:46] *** yewscion joined
[04:51] *** yewscion left
[05:22] *** yewscion joined
[05:29] *** Sgeo_ joined
[05:32] *** Sgeo left
[05:34] *** xinming left
[05:56] *** xinming joined
[06:07] *** yewscion left
[06:23] *** yewscion joined
[06:27] *** yewscion left
[07:05] *** Sgeo_ left
[08:50] *** sena_kun joined
[08:57] *** Manifest0 joined
[09:14] *** jmcgnh left
[09:22] *** jmcgnh joined
[09:45] *** Aedil left
[09:51] *** Aedil joined
[10:01] *** sena_kun left
[10:03] <lizmat> weekly: https://raku-advent.blog/2024/12/09/day-9-the-end-of-the-year/

[10:03] <notable6> lizmat, Noted! (weekly)

[11:07] *** yewscion joined
[11:12] *** yewscion left
[12:08] *** yewscion joined
[12:10] *** inspork joined
[12:12] *** yewscion left
[12:24] *** inspork left
[12:24] *** inspork joined
[12:54] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/12/09/2024-50-duckduckcool/

[13:09] *** yewscion joined
[13:14] *** yewscion left
[14:08] *** yewscion joined
[14:49] <patrickb> lizmat: The nativecallcast issue fix was by timo. I just merged the PR.

[15:16] *** yewscion left
[15:35] *** Sgeo joined
[15:39] *** yewscion joined
[16:14] *** finanalyst joined
[16:37] <[Coke]> is our raku.land maintainer here?

[16:40] *** guifa joined
[16:40] <guifa> Although I can imagine ugexe saying (and me agreeing with him!) that it sounds like a terrible idea....

[16:41] <guifa> I recently found if you have a very large file in resources install will hang

[16:41] <guifa> (very large = > 2 GB, haven't tested to see if 2 GB is a threshold though)

[16:50] <ugexe> what is the output when it hangs

[16:52] <ugexe> the code for moving files from resources isn't very complicated - it slurps from the original file and then spurts it into a different file (see https://github.com/rakudo/rakudo/blob/9bf3be4d2e1e0aec472c5f118292e7d57b8a1b23/src/core.c/CompUnit/Repository/Installation.rakumod#L306-L317). Maybe that can help golf it down?

[16:53] <finanalyst> ugexe: I'm trying to get $?DISTRIBUTION to work but getting a Nil.

[16:54] <finanalyst> I'm using `zef install . -/precompile-install

[16:54] <timo> does it also have to sha1 or something? though that should easily be doing many megabytes per second

[16:55] <ugexe> finanalyst: without looking at code i don't know what to tell you

[16:56] <finanalyst> multi sub MAIN(

[16:56] <finanalyst>         Bool :version(:$v)! #= Return version of distribution

[16:56] <finanalyst> ) { say 'got here again';say $?DISTRIBUTION.meta if $v };

[16:56] <finanalyst> RenderDocs -v

[16:56] <finanalyst> got here again

[16:56] <finanalyst> Nil

[16:57] <finanalyst> The `RenderDocs -v` is the terminal invocation

[17:00] <ugexe> do any compile time variables work there?

[17:00] <[Coke]> I think you need $?DISTRIBUTION to be in a module, not a script

[17:00] <[Coke]> no?

[17:01] <[Coke]> (and would expect your MAIN to be in a script by default)

[17:01] <ugexe> yeah that is true... i always put my script into a module so I didn't think to mention that

[17:01] <finanalyst> [Coke] Ahhh

[17:03] <[Coke]> checked https://docs.raku.org/language/variables#$?DISTRIBUTION and it's not called out there.

[17:03] <finanalyst> ugexe: I was going from your SO answer. But assumed it would work in a script. Also looked at the docs.

[17:05] * [Coke] opened https://github.com/Raku/doc/issues/4541

[17:14] <finanalyst> ugexe: Does `$?DISTRIBUTION.meta<version>` (as given in the SO answer) work? Docs gives `$?DISTRIBUTION.meta<ver>`

[17:15] <lizmat> patrickb: fixed, thanks for the headsup

[17:17] <[Coke]> both work

[17:18] <ugexe> finanalyst: you should use the one you define in your META6.json, which would be `version`. For historical/backcompat reasons `ver` also gets added to the META6.json upon install, but prior to install it might not exist based on what type of Distribution object gets used to create it

[17:18] <[Coke]> ah. changing my answer to "both work for me" :)

[17:31] <[Coke]> ugexe: so ver works 'sometimes' - does version work all the time?

[17:32] <ugexe> what you put in the meta6.json will work all the time

[17:32] <ugexe> if you put coca-cola in your meta6.json you can reference that

[17:33] <ugexe> ver will conditionally be added, potentially based on what you put for version

[17:33] <ugexe> in other words I would suggest pretending ver does not exist at all

[17:34] <ugexe> although it is slightly confusing because for imports we use :ver<...> and not :version<...>

[17:34] <ugexe> so in zef there is code like `use Zef::Foo:ver($?DISTRIBUTION.meta<version>)`

[17:35] *** abraxxa-home joined
[17:35] *** abraxxa-home left
[17:36] *** abraxxa-home joined
[17:51] *** yewscion left
[17:55] *** yewscion joined
[17:58] *** abraxxa-home left
[18:01] *** finanalyst left
[18:08] *** sena_kun joined
[18:11] *** gfldex joined
[19:10] *** japhb left
[19:11] *** japhb joined
[19:41] *** yewscion left
[20:10] *** japhb left
[20:29] *** japhb joined
[20:50] *** japhb left
[21:25] *** sena_kun left
[21:35] *** MyNetAz left
[21:50] *** MyNetAz joined
[22:08] *** finanalyst joined
[22:12] *** MyNetAz left
[22:27] *** MyNetAz joined
[23:00] *** MyNetAz left
[23:03] *** sena_kun joined
[23:05] <guifa> ugexe: it wasn't giving a message.  Just hung on the Installing... and in Activity Monitor I saw some massive amounts of read/write -- but at the 50-200 MB/sec, which shouldn't have taken 20+ min for a 2Gb file.  That's when I cut it off.  I was brushing up against a deadline so I did some work arounds (telling instructor to run with `use lib`, ugh) but I'll try to play around now that I have a month off of school and see if it was a fluke or if there's

[23:05] <guifa>  something more

[23:10] <ugexe> if i run mkfile -n 2g test.txt to create a 2gb file

[23:10] <ugexe> raku -e 'my $in = "test.txt".IO.open(); my $out = "test2.txt".IO.open(:w); $out.spurt($in.slurp(:close), :close); say "done";'

[23:10] <ugexe> MoarVM panic: Memory allocation failed; could not allocate 18446744065119617024 bytes

[23:15] *** MyNetAz joined
[23:20] <ugexe> i guess that is a different issue since using :bin avoids it

[23:33] *** sena_kun left
[23:39] *** human-blip left
