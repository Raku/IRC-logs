[00:02] *** kjp left
[00:06] *** kjp joined
[00:21] *** Guest94 joined
[00:33] *** guest912 joined
[00:42] <discord-raku-bot> <nemokosch> melezhik: do you have an idea why I can't get Sparky working on the new VPS on Debian 12?

[00:42] <tellable6> nemokosch, I'll pass your message to melezhik

[00:42] <discord-raku-bot> <nemokosch> Sqlite3 doesn't work

[00:43] <discord-raku-bot> <nemokosch> I installed sqlite3, then I installed libsqlite3-dev as well, no use

[00:44] <guest912> Hi, I’m having an issue with the type checker. It seems I’m doing it correctly but I’m getting an error.

[00:44] <guest912> I have a sub like this (using my own custom subset type): sub foo(CustomType:D %bar) {}

[00:44] <guest912> And I’m trying to pass another hash to it of the same type: my CustomType:D %abc = …; foo(%abc)

[00:44] <guest912> But this gets me an error

[00:44] <guest912> > Constraint type check failed in binding to parameter '%bar';

[00:44] <guest912> > expected CustomType but got Hash[CustomType:D] ((my CustomType::...)

[00:44] <guest912> Am I doing something wrong?

[00:46] <guest912> My variable looks like “Type %name” and I accept the same “Type %name” in the sub signature passing that variable. Still the type check fails.

[00:47] <lizmat> I think you have found a bug

[00:47] <lizmat> m: my Int:D %h = a => 42; sub a(Int:D %f) { dd %f }; a %h

[00:47] <camelia> rakudo-moar 4e68b5387: OUTPUT: «Int:D %h = (my Int:D % = :a(42))␤»

[00:47] <lizmat> this works fine

[00:48] <lizmat> m: subset Foo of Int; my Foo:D %h; sub a(Foo:D %f) { dd %f }; a %h   # this does not

[00:48] <camelia> rakudo-moar 4e68b5387: OUTPUT: «Constraint type check failed in binding to parameter '%f'; expected Foo but got Hash[Foo:D] ((my Foo:D %))␤  in sub a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[00:49] <lizmat> could you make an issue for this?  https://github.com/rakudo/rakudo/issues/new

[00:49] <lizmat> sleep&

[00:51] <guest912> Will do, thanks for confirming

[00:52] *** Guest94 left
[01:00] <discord-raku-bot> <nemokosch> ah nevermind, maybe I was just stupid

[01:00] <discord-raku-bot> <nemokosch> db-init.raku is a thing

[01:03] <discord-raku-bot> <nemokosch> okay, now the db works but the build does not...

[01:48] *** TieUpYourCamel joined
[01:48] <japhb> [Coke], ugexe -- Looks like from the conversation above that Terminal::LineEditor does *not* need to be fixed?  Is that correct?

[01:52] <[Coke]> it is more likely that the issue is at the termios level or lower

[02:30] *** epony joined
[02:39] *** kylese left
[02:39] *** hulk joined
[03:04] *** greppable6 left
[03:04] *** quotable6 left
[03:04] *** coverable6 left
[03:04] *** bloatable6 left
[03:04] *** nativecallable6 left
[03:04] *** linkable6 left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:59] <guest912> What is the most straightforward way to append one list into another?

[04:03] <kjp> @list1.append: @list2

[04:09] <Xliff_> Where can I get latest rakudo packages for Ubuntu? Is there an apt source?

[04:16] <guest912> kjp, thanks, that’s it. Can maybe somehow just list all the available methods of a value’s type?

[04:17] <guest912> Sadly not everything can be found in the docs. Though it doesn’t apply to this .append method, it was there.

[04:29] <Xliff_> Has anyone written a WebSocket client with raku and Cro? Could someone please point me to some examples?

[04:52] *** Summer left
[05:21] *** Summer joined
[05:22] <thowe> Like with this?  https://cro.services/docs/reference/cro-websocket-client

[06:44] <kjp> guest912: Well you can try "say Array.new.^methods", or go to docs/raku.org/types and find what you're interested in. (If there's a method not documented there, then that's probably a bug which should be reported on #raku-doc.)

[06:51] *** Xliff_ left
[07:09] <patrickb> japhb: From how I understand the issue, it's a problem in Termios, but fixed in 0.2.7. Terminal::LineEditor pins it to 0.2.0 though. So one could argue that it's also an issue in T::LE.

[07:19] <guest912> If I define a package B below package A how can I refer to package B from package A?

[07:21] <guest912> Oh, nevermind, that wasn’t actually the problem, it works as-is.

[07:33] <guest912> I’m reading about “IO::Path::dir” in the docs: “Objects corresponding to special directory entries . and .. are not included.”

[07:34] <guest912> But I’m getting both “.” and “..” in the output

[07:34] <guest912> Am I missing something or this is a bug?

[07:35] <guest912> https://docs.raku.org/routine/dir

[07:53] <tonyo>  m: say $*TEMP.dir

[07:53] <camelia> rakudo-moar 4e68b5387: OUTPUT: «Dynamic variable $*TEMP not found␤  in block <unit> at <tmp> line 1␤␤»

[07:53] <tonyo>  m: say $*TEMPDIR.dir

[07:53] <camelia> rakudo-moar 4e68b5387: OUTPUT: «Dynamic variable $*TEMPDIR not found␤  in block <unit> at <tmp> line 1␤␤»

[07:53] <tonyo>  m: say $*TMPDIR.dir

[07:53] <camelia> rakudo-moar 4e68b5387: OUTPUT: «("/tmp/.X11-unix".IO "/tmp/.ICE-unix".IO "/tmp/.XIM-unix".IO "/tmp/.font-unix".IO "/tmp/.Test-unix".IO "/tmp/.precomp".IO "/tmp/systemd-private-06a3200e6d844657b91fc513ecfce8ba-systemd-logind.service-uJ9Ysh".IO "/tmp/systemd-private-06a3200e6d844657b9…»

[07:54] <tonyo>  m: say $*TMPDIR.dir.map(*.basename).join(", ")

[07:54] <camelia> rakudo-moar 4e68b5387: OUTPUT: «.X11-unix, .ICE-unix, .XIM-unix, .font-unix, .Test-unix, .precomp, systemd-private-06a3200e6d844657b91fc513ecfce8ba-systemd-logind.service-uJ9Ysh, systemd-private-06a3200e6d844657b91fc513ecfce8ba-ntpd.service-Clt95h, evalbot-file-G6GqQ2MYXj, evalbot-f…»

[07:55] <tonyo>  m: say $*TMPDIR.dir.map(*.basename).grep(* ~~ '.'|'..')

[07:55] <camelia> rakudo-moar 4e68b5387: OUTPUT: «()␤»

[08:25] <Voldenet> iirc . and .. are being filtered explicitly by the iterator, but I can't find relevant code

[08:29] <Voldenet> there it is > https://github.com/rakudo/rakudo/blob/main/src/core.c/Rakudo/Iterator.rakumod#L1602

[08:31] <Voldenet> so, if you're running raku on moarvm, the newest version should skip . and ..

[09:01] *** sena_kun joined
[09:13] *** Summer left
[09:13] *** Summer joined
[09:18] *** sena_kun left
[09:42] *** constxqt_ left
[09:42] *** Sgeo left
[10:01] <discord-raku-bot> <librasteve> m: my @a=[1,2]; my @b=[3,4]; say @a,@b; dd @a,@b;

[10:01] <discord-raku-bot> <Raku eval>  [1 2][3 4]  Array @a = [1, 2] Array @b = [3, 4] 

[10:02] <discord-raku-bot> <librasteve> m: my @a=[1,2]; my @b=[3,4]; say (@a,@b)

[10:02] <discord-raku-bot> <Raku eval>  ([1 2] [3 4]) 

[10:03] <discord-raku-bot> <librasteve> m: my @a=[1,2]; my @b=[3,4]; say |@a,|@b;

[10:03] <discord-raku-bot> <Raku eval>  1234 

[10:04] <discord-raku-bot> <librasteve> m: my $a=(1,2);my $b=(3,4); say $a,$b;

[10:04] <discord-raku-bot> <Raku eval>  (1 2)(3 4) 

[10:05] <discord-raku-bot> <librasteve> guess you need comma and slip (|) to join two listy things

[10:16] *** melezhik joined
[10:17] <discord-raku-bot> <melezhik> @nemokosch hi! Do you still have an issues with SQLite/sparky on Debian 12?

[10:17] <tellable6> 2024-01-03T00:42:36Z #raku <nemokosch> melezhik: do you have an idea why I can't get Sparky working on the new VPS on Debian 12?

[10:18] <discord-raku-bot> <nemokosch> No, turns out it was all stuff I just forgot to set up. However, I commented to the JSON::Tiny issue because I still got "can't find JSON::Tiny" errors while running sparkyd

[10:19] <discord-raku-bot> <melezhik> Yeah, I have fixed it already , please install the latest version of Sparrow6 from zef

[10:19] <discord-raku-bot> <melezhik> And please upgrade Sparky from master

[10:20] *** melezhik left
[10:21] <discord-raku-bot> <nemokosch> Okay, thank you, right now the workaround works fine but I will get to doing it the clean way ^^

[10:21] *** tellable6 left
[10:22] *** jpn joined
[10:23] <discord-raku-bot> <melezhik> Sure

[10:24] <discord-raku-bot> <melezhik> I am going to release Spary quite so, the version that does not use JSON::Tiny

[10:25] <discord-raku-bot> <nemokosch> I drastically turned all testing off during installation because apparently Cro testing just hung

[10:25] <discord-raku-bot> <nemokosch> these are sad things

[10:26] <discord-raku-bot> <melezhik> Yeah, you mean cro tests hang ? Or CEO’s dependency’s tests hang ?

[10:26] <discord-raku-bot> <melezhik> CEO->cro

[10:26] <discord-raku-bot> <nemokosch> it looked like Cro's own tests

[10:26] <discord-raku-bot> <melezhik> Ah, ok

[10:26] *** constxqt_ joined
[10:27] <discord-raku-bot> <melezhik> I honestly for that reasons often use —/test flag when install stuff

[10:27] <discord-raku-bot> <melezhik> Tests are slow and broken )))

[10:28] <discord-raku-bot> <nemokosch> my migration experience was pretty much expected. Node is easy to work with, no matter the amount of jokes about node_modules. Raku is... well, something is always gonna happen, sadly. But at least I know what to do so all it takes is patience really. And Python is total embarrassment

[10:29] <discord-raku-bot> <nemokosch> Python doesn't even seem to have an appropriate default way of package installation, it immediately insists on this virtual environment crap

[10:29] <discord-raku-bot> <melezhik> Yeah. By the way , I have an experimental Raku alpine packages repository , which partly mitigates this issue

[10:30] <discord-raku-bot> <melezhik> When a user does not need to recompile stuff

[10:30] <discord-raku-bot> <melezhik> Just use binary packages - quick and simple

[10:30] <discord-raku-bot> <melezhik> But only works for alpine

[10:30] <discord-raku-bot> <nemokosch> Rakubrew downloads didn't work, neither was the versioning of rakudo-pkg good

[10:30] <discord-raku-bot> <nemokosch> so I hand downloaded the right deb, registered it to rakubrew and ran build-zef, that worked

[10:31] *** constxqt_ left
[10:31] <discord-raku-bot> <nemokosch> I should check back because I'm pretty sure I ran the suggested commands for rakudo-pkg but there was a point where the instructions branched

[10:32] <discord-raku-bot> <nemokosch> okay, I checked, that was supposedly only about OS version

[10:32] <discord-raku-bot> <nemokosch> so I have no idea why it was stuck at like 2021.05

[10:44] <El_Che> hey

[10:44] <El_Che> somewhere in the past, rakudo-pkg moved to new repos at cloudsmith

[10:45] <El_Che> and along the ways non-supported version of distros are dropped

[10:54] *** Xliff_ joined
[10:54] <Xliff_> .

[10:57] <Xliff_> Has 12.2023 been made into a binary, yet?

[11:02] <discord-raku-bot> <nemokosch> yes, at cloudsmith

[11:02] <discord-raku-bot> <nemokosch> I did all the instructions for apt and rakudo-pkg still installed some severely outdated version

[11:02] <discord-raku-bot> <nemokosch> does that mean the instructions themselves are outdated?

[11:16] <lizmat> El_Che ^^

[11:19] <El_Che> normally nog

[11:19] <El_Che> no

[11:19] <El_Che> t

[11:19] <El_Che> the script picks the correct os version

[11:19] *** constxqt_ joined
[11:19] <lizmat> perhaps the OS needs updating ?

[11:19] <El_Che> i can try to reproduce with docker if you give me the os + version

[11:20] <El_Che> if the OS version is EOL, I drop it 

[11:20] <El_Che> so it stays on an old version forever

[11:43] *** kaskal joined
[12:25] <discord-raku-bot> <melezhik> If someone is interested I have upgraded SparrowCI to the latest version of Rakudo

[12:47] <Xliff_> Where are the instructions for Cloudsmith?

[13:29] <lizmat> https://nxadm.github.io/rakudo-pkg/ has all the necessary links?

[14:09] *** jpn left
[14:10] *** jpn joined
[14:11] *** Summer left
[14:34] *** edr joined
[14:49] <tbrowder__> hi, anyone use Nextcloud? if so, is it truly cross-platform including ipad and iphone?

[14:54] <tbrowder__> hm, looks like it, but servers i see so far are outside us

[14:57] <tbrowder__> ah, takes me to owncloud…

[15:02] <discord-raku-bot> <melezhik> I am going to add support of old Rakudo versions to SparrowCI, if someone is interested in testing Raku modules against old Rakudos ?

[15:03] <discord-raku-bot> <nemokosch> re rakudo-pkg: this was on Debian 12 "bookworm"

[15:04] <discord-raku-bot> <nemokosch> I did the "or ... you can manually configure it yourself before installing packages:" steps

[15:14] <discord-raku-bot> <melezhik> https://fosstodon.org/@melezhik/111692668750720808

[15:25] *** jmcgnh left
[15:34] *** cm left
[15:43] *** cm joined
[16:38] <discord-raku-bot> <.vushu> @melezhik wouldn’t this be useful for raku in production, to test if the code still works as intended after migrating to a newer rakudo?

[16:41] <El_Che> nemokosch: have a look at the generated sources file. What version of debian it targets there

[16:42] <El_Che> nemokosch: or that it isn't commented out during am upgrade

[16:56] <discord-raku-bot> <melezhik> @.vushu - makes a sense , here is the list of available versions to test against - https://github.com/melezhik/SparrowCI/blob/main/docs/dsl.md#docker-images

[16:59] <discord-raku-bot> <.vushu> @melezhik very cool ! 😎

[17:00] <El_Che> Architecture: x86 is weird. Do they mean amd64 or x86_64?

[17:01] <El_Che> .tell melezhik: Architecture: x86 is weird. Do you mean amd64 or x86_64?

[17:08] <discord-raku-bot> <melezhik> El_Che - I mean x86_64

[17:09] <discord-raku-bot> <melezhik> x86 is kinda short term / casual term , but I can change the doc to be more accurate

[17:46] *** jmcgnh joined
[18:52] *** jpn left
[19:18] *** unicodable6 left
[19:46] *** jpn joined
[19:50] *** jpn left
[20:46] *** epony left
[20:49] *** jpn joined
[21:05] *** epony joined
[21:13] *** sena_kun joined
[21:13] *** jpn left
[21:46] *** jpn joined
[21:50] *** jpn left
[22:01] *** jpn joined
[22:39] <discord-raku-bot> <nemokosch> What even is the difference

[22:41] <discord-raku-bot> <nemokosch> I think amd64 and x86_64 are different names for the same thing. 32bit x86 would be different, or arm64 obviously

[22:42] *** jpn left
[22:48] *** jpn joined
[22:51] *** ecocode left
[22:51] *** ecocode joined
[22:52] *** sena_kun left
[22:53] *** jpn left
[22:55] *** maylay left
[23:02] *** maylay joined
[23:19] *** teatime joined
[23:19] *** teatime left
[23:27] *** Sgeo joined
[23:27] <El_Che> amd64 is the name debian uses, x86_64 is the name red hat uses

[23:27] <El_Che> potato - potato

[23:28] <El_Che> x86, however, means 32 bit. It's no shorthand

[23:29] <El_Che> (in the context of linux/windows/macos naming, not an historical absolute (it used to be 16-bit))

