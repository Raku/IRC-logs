[00:21] *** MasterDuke joined
[00:31] *** guifa left
[01:29] *** nine left
[01:30] *** nine joined
[01:48] *** hulk joined
[01:50] *** kylese left
[02:15] *** hulk left
[02:15] *** kylese joined
[02:41] <Xliff> Does Raku still have USAGE?

[02:48] *** greaser|q left
[02:48] *** greaser|q joined
[02:48] *** greaser|q is now known as GreaseMonkey

[03:45] *** Aedil joined
[05:29] *** peder left
[05:29] *** sjn left
[05:32] *** peder joined
[05:34] *** sjn joined
[05:36] *** guifa joined
[06:10] *** guifa left
[06:29] *** MasterDuke left
[06:39] *** Sgeo left
[07:28] <ab5tract> Xliff: it’s been deprecated in favor of GENERATE-USAGE

[07:48] *** Geth joined
[07:48] *** lizmat_ left
[07:49] *** lizmat joined
[07:55] *** wayland joined
[08:20] *** thaewrapt left
[08:33] <patrickb> rougerakudev: You can look at https://github.com/rakudo/rakudo/blob/main/src/vm/moar/runner/main.c

[08:33] <patrickb> Compile that as a library and you should be good to to go.

[08:39] *** Xliff left
[08:47] *** thaewrapt joined
[09:33] *** abraxxa-home joined
[10:18] *** guifa joined
[10:23] *** guifa left
[11:08] <tbrowder> roguerakudev: depends on how you need use it. see the docs on interfacing with C, and a bit with C++.

[11:11] <tbrowder> in my working years, while larry and damian lizmat and others were creating raku, i used perl to drive C and FORTRAN progs. raku can do that much easier. also excels at data postprocessing.

[11:43] *** guifa joined
[13:08] <discord-raku-bot> <antononcube> rougerakudev == Rog ?

[13:23] *** guifa left
[13:25] <discord-raku-bot> <antononcube> @tbrowder Are you an (ex-)pilot?

[13:34] *** abraxxa-home left
[13:37] <lizmat> antononcube afaik, indeed!

[13:45] <discord-raku-bot> <antononcube> @lizmat Ok. I just characterized @tbrowder as "Raku-bound ex-pilot" on Reddit. But @trbrowder can be: (1) a current pilot, and (2) "just" ex-air-force, not an ex-pilot.

[13:48] <discord-raku-bot> <roguerakudev> yeah

[13:48] <discord-raku-bot> <roguerakudev> I guess the bot uses actual usernames, not server nicknames

[13:48] <discord-raku-bot> <roguerakudev> the name sounds a bit redundant in the context of a Raku channel, so I wish it would use Rog instead...

[13:51] <discord-raku-bot> <antononcube> Can help it! > Bad bot Rog not.

[13:58] <tbrowder> i like to say "former fighter pilot"

[13:59] <tbrowder> now i just fight with raku and debian

[14:00] <discord-raku-bot> <antononcube> @tbrowder Ok, good -- my characterization is correct.

[14:00] <tbrowder> hm, not fight, a mostly friendly wrestling match with a few cuss words now and then

[14:02] <tbrowder> speaking of raku, using mi6 i discovered a new thing with generating markdown in the dist.ini and can't believe i haven't heard anyone mention it

[14:04] <tbrowder> i usually generate a module's markdown from pure pod files (rakudoc), but now i'm writing the pod closer to the action inside a rakumod file.

[14:06] <tbrowder> and that requires a "-I." on the cli to ensure the rakumod gets compiled. probably obvious to everyone else but this is new to me

[14:23] *** Sgeo joined
[14:38] <[Coke]> if you're running code inside an uninstalled checkout, you need to tell it how to find the modules, yup.

[15:44] <patrickb> One of the next tasks on my list is creating a simple raku lexer. I'm unsure if I better start from scratch (taking some existing raku lexer as inspiration) or try to strip down rakudos grammar. Any opinions on what might be a better approach?

[15:47] <patrickb> s/a/the/ (though if you have a different idea, I'm all ears as well)

[15:54] <lizmat> if you want to try strip down Rakudo's grammar, I suggest you use the RakuAST grammar

[15:54] <lizmat> of course, the big issue is really that Raku is capable of changing its lexer on the fly

[15:55] *** eof left
[15:56] *** summerisle joined
[15:58] *** skyesoss joined
[15:59] *** rba_ joined
[15:59] *** leedo_ joined
[16:00] *** leedo left
[16:00] *** rba left
[16:00] *** rba_ is now known as rba

[16:02] <discord-raku-bot> <librasteve> I would write my own starting here https://www.perplexity.ai/search/please-write-a-lexer-with-a-ra-hel9eR4vRu2bAcupvgqQfw

[16:05] <discord-raku-bot> <librasteve> why? I think that raku is a very intricate and huge language and just mentally capturing it's lexer is a big and likely unnecessary overhead, whereas from a language user (ie a coder) pov, the Grammar / Actions capabilities are very straightforward and provide great defaults and guardrails

[16:10] <patrickb> lizmat: I just want something good enough to sprinkle some color on a piece of code. I'm pretty sure I can just ignore that issue.

[16:10] <lizmat> is the code guaranteed to be valid Raku ?

[16:11] <patrickb> I.e. if you "use BeSqlInsteadOfRaku;" then your colors are random, but then just use a different highlighter. :-P

[16:13] <patrickb> For my use case technically yes, but given I invest time to create something suitable for highlighting, I should aim for a thing that works on anything.

[16:13] <lizmat> use RakuAST::Deparse::Highlight; say highlight($source);   # how does that work for you?

[16:13] <lizmat> if that does, then no investment needed :-)

[16:18] <patrickb> I think we had a bit of discussion about the topic somewhere some time ago. I need a highlighter for the raku debugger I'm working on. That needs to highlight any code it reads from disk or gets passed from the debug server. As it is code currently executingp, it should be valid Raku code. But there is the code execution at begin time issue. And the Raku version debugged is not necessarily the 

[16:18] <patrickb> same that is running the debugger. In general, I think it's worthwhile for us to have a no-strings-attached tool to highlight Raku written Raku.

[16:19] <lizmat> sure, then by all means... :-)

[16:19] <patrickb> :-)

[16:20] <lizmat> but in that case, i'd say get your inspiration from highlighters such as used by vim and JS

[16:20] <lizmat> rather than the Raku grammar

[16:21] <patrickb> The most feature rich highlighter that I know of is the one of chroma. I guess I'll have a look at that one then...

[16:23] <patrickb> Thanks for the input!

[16:23] <patrickb> librasteve: Thanks for the link!

[16:47] <[Coke]> lizmat: Bug in RAKUDOC_RAKUAST rakudoc, I think: C«%*ENV<PATH>»

[16:47] <[Coke]> old parser renders as %*ENV<PATH> - new as %*EN

[16:48] <lizmat> a golf would be appreciated....  fwiw, I'm starting to run out of mental stack space

[16:48] <lizmat> :-)

[16:49] <[Coke]> That was the golf! I'll open a ticket though so you don't need to keep this in current mem. :)

[16:49] <lizmat> thanks!

[16:54] <[Coke]> also: notice that we have two very similar tags in rakudo/rakudo issues: "Fixed in RakuAST" and "Addressed in RakuAST" - do we want these combined? If so, pick one and I'll update all the tickets.

[16:55] <[Coke]> er, *I noticed*

[17:19] *** sena_kun joined
[17:33] <ab5tract> [Coke]: So far those have been used as "Done" vs "Aspirational"

[17:45] <ab5tract> so maybe it would make sense to change from "Addressed" to "Addressable"

[17:48] <[Coke]> ahhhh, that makes sense.

[17:49] <ab5tract> yeah, certainly the current wording wouldn't ah just lead you to this 

[17:50] <ab5tract> erm, fat fingered

[17:50] <ab5tract> " certainly the current wording wouldn't just automatically lead you to this distinction"

[18:48] <[Coke]> the test comparing old and rakuast pod rendering keeps finding occasional places where we were accidentally relying on a bug in the old renderer.

[18:49] <[Coke]> e.g. C< some stuff C<other stuff> > used to just be `some stuff other stuff`. lizmat++

[19:20] *** swaggboi left
[19:21] *** swaggboi joined
[19:47] *** Aedil left
[20:12] *** Sgeo_ joined
[20:12] *** Sgeo left
[20:34] *** wayland76 joined
[20:35] *** wayland left
[21:20] *** skyesoss left
[21:48] *** sena_kun left
[23:03] *** wayland76 left
