[00:35] *** jpn joined
[00:40] *** jpn left
[01:08] *** consteval is now known as smol-hors

[01:21] *** Manifest0 left
[01:31] *** jpn joined
[01:36] *** jpn left
[01:57] *** jpn joined
[02:03] *** jpn left
[02:20] *** hulk joined
[02:20] *** kylese left
[02:28] *** smol-hors is now known as ponycat

[02:58] *** jpn joined
[03:03] *** jpn left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:53] *** jpn joined
[03:57] *** jpn left
[04:07] *** haxxelotto joined
[04:09] *** haxxelotto left
[04:10] *** haxxelotto joined
[04:20] *** teatwo left
[04:47] *** jpn joined
[04:52] *** jpn left
[05:43] *** jpn joined
[05:48] *** jpn left
[06:01] *** jpn joined
[06:06] *** jpn left
[06:26] *** Sevalecan left
[06:27] *** Sevalecan joined
[06:57] *** jpn joined
[07:07] *** jpn left
[07:09] *** jpn joined
[07:20] *** jpn left
[07:29] *** merp left
[07:29] *** jpn joined
[07:34] *** merp joined
[07:48] *** haxxelotto left
[08:00] *** Sgeo left
[08:12] *** abraxxa joined
[08:28] *** haxxelotto joined
[08:32] *** Manifest0 joined
[08:51] *** nine left
[08:51] *** nine joined
[09:01] *** haxxelotto left
[09:02] *** haxxelotto joined
[09:08] *** dakkar joined
[09:13] *** sena_kun joined
[09:36] *** ponycat left
[09:37] *** ponycat joined
[09:56] *** sena_kun left
[10:40] *** wafflus joined
[10:46] *** ptc joined
[10:46] *** ptc left
[11:15] *** Manifest joined
[11:17] *** hulk joined
[11:18] *** kylese left
[11:18] *** wafflus left
[11:18] *** Manifest0 left
[11:32] *** bdju left
[11:34] *** bdju joined
[11:36] *** jpn left
[11:38] *** jpn joined
[12:16] *** Tigerpaws joined
[12:22] *** Tigerpaws left
[12:24] *** Tigerpaws joined
[12:44] *** tadzik left
[12:52] *** melezhik joined
[12:52] <melezhik> .

[12:55] *** tadzik joined
[12:56] *** melezhik left
[12:57] *** jpn left
[13:02] *** abraxxa left
[13:03] *** xinming left
[13:03] *** xinming joined
[13:07] *** bdju left
[13:09] *** bdju joined
[13:11] *** Tigerpaws left
[13:13] *** Tigerpaws joined
[13:34] <tbrowder> hi, i'm using $string.split(/some regex/, :k) on a long string. that works.

[13:36] <tbrowder> m: my @s = "1abc2abc3abc".split(/\d/, :k); say $_.Str for @s;

[13:36] <camelia> rakudo-moar 85e07ec89: OUTPUT: «␤0␤abc␤0␤abc␤0␤abc␤»

[13:39] *** jpn joined
[13:39] <tbrowder> hm, i meant to use :v but i see @s puts out two strings for each match. docs don't really explain that, nor does it have a good example of such.

[13:40] <tbrowder> my use case is extracting text from pdfs.

[13:41] <tbrowder> and the best way to iterate over the "pairs" is?

[13:44] <Voldenet> iirc .split(//, :v) returns Seq

[13:45] <Voldenet> and it looks iterable

[13:45] *** jpn left
[13:48] *** Manifest is now known as Manifest0

[13:50] *** haxxelotto left
[13:50] *** haxxelotto joined
[13:51] *** jpn joined
[13:57] *** jpn left
[14:04] <Voldenet> m: for "1abc2def3ghi".split(/\d/, :v).batch(2) -> $pair { $pair.say };

[14:04] <camelia> rakudo-moar 85e07ec89: OUTPUT: «( ｢1｣)␤(abc ｢2｣)␤(def ｢3｣)␤(ghi)␤»

[14:04] <Voldenet> consider this

[14:04] <Voldenet> or

[14:04] *** haxxelotto left
[14:04] <Voldenet> m: for "1abc2def3ghi".split(/\d/, :v :skip-empty).batch(2) -> $pair { $pair.say };

[14:04] <camelia> rakudo-moar 85e07ec89: OUTPUT: «(｢1｣ abc)␤(｢2｣ def)␤(｢3｣ ghi)␤»

[14:05] *** haxxelotto joined
[14:10] <Voldenet> nevermind, that :skip-empty is a bad idea because it makes iterations unpredictable

[14:15] *** jpn joined
[14:41] *** xinming left
[14:42] *** Sgeo joined
[14:43] *** xinming joined
[14:45] *** haxxelotto left
[15:07] *** haxxelotto joined
[15:07] *** tadzik left
[15:07] *** tadzik joined
[15:08] <tbrowder> you need to add .Str to the match to get a usable string

[15:11] <tbrowder> and i want to join the match.Str and its result into a new string

[15:11] <tbrowder> a space-separated string

[15:12] <lizmat> m: say "1abc2def3ghi".split(/\d/, :v).join(" ")

[15:12] <camelia> rakudo-moar 85e07ec89: OUTPUT: « 1 abc 2 def 3 ghi␤»

[15:12] <tbrowder> $pair.Str.say maybe

[15:13] <tbrowder> lizmat: i need "1 abc", "2 abc", ... a list

[15:14] <lizmat> and what if the string begins with "foo", like "foo1abc2def" ?

[15:15] <Voldenet> I'm starting to believe that using grammars is a better solution

[15:19] <discord-raku-bot> <antononcube> @Voldenet Better than using LLMs?

[15:20] <lizmat> m: .say for "1abc2def3ghi".split(/\d/, :v).skip.map(-> $a, $b { "$a $b" })

[15:20] <camelia> rakudo-moar 85e07ec89: OUTPUT: «1 abc␤2 def␤3 ghi␤»

[15:20] <Voldenet> m: for "1abc2def3ghi".match(/$<k>=(\d)$<v>=(<-:N>+)/, :g) -> $pair { $pair.say };

[15:20] <camelia> rakudo-moar 85e07ec89: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[15:20] <lizmat> tbrowder: ^^  in case there's no string before the first numeric

[15:21] <Voldenet> uh oh

[15:22] <Voldenet> m: for "1abc2def3ghi".match(/$<k>=(\d)$<v>=(<-:N>+)/, :g) { .say };

[15:22] <camelia> rakudo-moar 85e07ec89: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[15:22] <Voldenet> odd, it works for me

[15:22] <Voldenet> m: for "1abc2def3ghi".match(:g, /$<k>=(\d)$<v>=(<-:N>+)/) { .say };

[15:22] <camelia> rakudo-moar 85e07ec89: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[15:24] <Voldenet> either way, the above should work, contrary to what bot says

[15:24] <lizmat> doesn't work for me eitherv  :-(

[15:25] <Voldenet> m: for "1abc2def3ghi" ~~ m:g/$<k>=(\d)$<v>=(<-:N>+)/ { .say };

[15:25] <camelia> rakudo-moar 85e07ec89: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[15:25] <lizmat> Voldenet: which version of Rakudo are you using ?

[15:27] <Voldenet> not a specific version, maybe that's my problem

[15:27] <lizmat> if it's pre 2023.12, then that could be the reason

[15:27] <Voldenet> 6.0d, seems ancient

[15:27] <lizmat> 5606fb657c

[15:27] <linkable6> (2023-12-15) https://github.com/rakudo/rakudo/commit/5606fb657c Make Match.print more aware of its surroundings

[15:27] <lizmat> afk&

[15:28] <Voldenet> m: for "1abc2def3ghi" ~~ m:g/$<k>=(<:Nd>+)$<v>=(<-:Nd>+)/ { say .<k>, .<v> };

[15:28] <camelia> rakudo-moar 85e07ec89: OUTPUT: «｢1｣｢abc｣␤｢2｣｢def｣␤｢3｣｢ghi｣␤»

[15:28] <Voldenet> yeah, that was it

[16:10] *** abraxxa-home joined
[16:18] *** vrurg_ joined
[16:21] *** vrurg left
[16:25] <tbrowder> lizmat: "use ^^", thnx for reminder

[16:27] *** abraxxa-home left
[17:36] *** haxxelotto_ joined
[17:36] *** vlad joined
[17:36] *** haxxelotto left
[17:42] *** vlad left
[17:43] *** vlad joined
[17:47] *** vlad left
[17:48] *** vlad joined
[17:50] *** dakkar left
[17:54] <lizmat> weekly: https://github.com/Raku/intellij-ide-plugin?tab=readme-ov-file#comma-source-dump

[17:54] <notable6> lizmat, Noted! (weekly)

[17:54] <lizmat> aka the Comma Source is available

[18:20] *** sena_kun joined
[18:20] *** vrurg_ is now known as vrurg

[18:53] *** vlad left
[20:21] <discord-raku-bot> <antononcube> weekly:https://rakuforprediction.wordpress.com/2024/03/15/wwwllama/

[20:21] <notable6> antononcube, Noted! (weekly)

[20:32] *** jpn left
[20:38] *** jpn joined
[20:43] *** jpn left
[21:00] *** guifa left
[21:01] *** jpn joined
[21:37] *** Tigerpaws left
[21:40] *** Tigerpaws joined
[21:46] *** Tigerpaws left
[21:48] *** Tigerpaws joined
[21:52] *** jpn left
[21:53] *** Tigerpaws left
[21:56] *** jpn joined
[21:56] *** jpn left
[22:47] *** ponycat left
[23:24] *** sena_kun left
[23:38] *** xinming left
[23:39] *** xinming joined
[23:43] *** ponycat joined
