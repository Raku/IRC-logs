[00:00] <Xliff> I've run into a segfault using Raku + NativeCall. Where is the best place to craft that bug report?

[00:03] *** vrurg left
[00:09] <Xliff> I've had this issue before, and I would rather get the right repo so I don't have to write the bug report twice. This will be a tedius one.

[00:09] <Xliff> s/tedius/tedious/

[00:10] <MasterDuke> probably rakudo

[00:13] *** Sgeo joined
[00:19] *** vrurg joined
[00:24] *** vrurg left
[00:35] *** vrurg joined
[00:38] <Xliff> Thanks, MasterDuke

[00:38] *** vrurg left
[00:40] *** vrurg joined
[02:38] *** hulk joined
[02:40] *** kylese left
[03:15] *** hulk left
[03:15] *** kylese joined
[05:04] *** bent_fingers left
[08:16] <Xliff> OK, here's something I havent seen in any of those Raku code snippet sites on the web...

[08:17] <Xliff> How can I get the size of an Image in raku. Shortest code wins?

[08:25] <lizmat> something with "run"  ?

[08:27] <Xliff> I wasw hoping a library binding. I only want to get width and height for crissakes!

[08:28] <Xliff> Searching "image" on RakuLand hasn't yeilded a single, successful entry.

[08:30] <Xliff> Is there a raku version of "file" for example?

[08:35] <Xliff> An attempt with File::Metadata::Libextractor met with a core-dump for a SIMPLE script

[08:35] <Xliff> Let me gist it.

[08:42] <Xliff> OK, segfault solved. Package failes (does not list width and height)

[08:49] <Xliff> In the end I had to go with my own GDK code to get what I wanted! Wow.

[08:50] <lizmat> hehe

[08:53] <Xliff> It's something that I would have hoped would have been bloggable. I wanted to have GDK released right now, but I'm stuck on JSON-GLib. It's not passing its tests.

[08:53] <Xliff> And I haven't felt well enough to devote time into it for the last 90 days.

[08:59] <lizmat> which is not in the ecosystem ?

[09:02] <Xliff> No, not yet.

[09:02] <Xliff> Again, not passing its tests. 

[09:02] <Xliff> Pango might be ready to though.

[09:02] <Xliff> However I am too filled with cough syrup to think clearly enough to deal with frustrating mi5

[09:10] *** sena_kun joined
[09:14] *** pony joined
[09:21] *** Sgeo left
[09:37] *** pony left
[09:38] *** abraxxa joined
[10:05] *** abraxxa left
[10:19] *** jpn joined
[11:00] *** abraxxa joined
[11:08] *** hudo__ left
[11:08] *** hudo__ joined
[11:09] *** haxxelotto joined
[11:10] *** haxxelotto left
[11:22] *** hudo__ left
[11:34] *** jpn left
[11:34] *** jpn joined
[11:53] *** hudo__ joined
[12:19] *** jpn left
[12:23] *** jpn joined
[12:25] *** vlad joined
[12:28] *** jpn left
[12:35] *** jpn joined
[12:40] <Geth> Â¦ problem-solving: patrickbkr assigned to codesections Issue Code highlighting / inspection / IDE tooling https://github.com/Raku/problem-solving/issues/422

[12:44] *** jpn left
[13:04] *** jpn joined
[13:09] *** jpn left
[13:13] *** vlad left
[13:14] *** jgaz joined
[13:16] *** jpn joined
[13:18] <discord-raku-bot> <vendethiel> Did the comma source get published?

[13:18] <lizmat> not yet, afaik

[13:40] <El_Che> there is this paradox in open source comma that the standalone version work but it's more complex to update, and the plugin does not work on recent intellij but should be easier to update (problem: update is a constant process, intellij relases often)

[14:35] *** vlad joined
[14:44] *** sena_kun left
[14:59] *** Xliff left
[15:07] *** sena_kun joined
[15:10] *** vlad_ joined
[15:12] <discord-raku-bot> <bscan> Has there ever been a survey to figure out who uses standalone Comma vs the Comma plugin vs vim, vscode, etc. I'm curious on the relative popularity among Raku users.

[15:15] *** vlad left
[15:18] *** sena_kun left
[15:19] *** sena_kun joined
[16:05] *** abraxxa left
[16:08] *** synthmeat left
[16:17] *** Xliff joined
[16:27] <patrickb> bscan: Did you notice the above problem solving issue? I guess you might have an opinion.

[16:31] <Xliff> This is about to be filed as an issue in rakudo/rakudo: https://gist.github.com/Xliff/912683918767dd30bf381dbd3c2e2610

[16:31] <Xliff> Please help!

[16:34] <Xliff> Report submitted: https://github.com/rakudo/rakudo/issues/5534

[16:35] <Xliff> Issue is standalone. All code is included in the description.

[16:35] <discord-raku-bot> <bscan> @patrickb. Thanks! I can weigh in on the ticket with more details on the Raku Navigator, as well as potential future directions. The Navigator contains a module documentation parser as well that it uses in hover/autocompletion.

[16:39] *** saint- joined
[16:39] *** Manifest0 joined
[16:43] *** synthmeat joined
[16:48] <ugexe> bscan: my primary issue with raku navigator in vscode is that if gives a bunch of errors when working on the rakudo source code. when working on the core it'd be nice to still have the syntax highlighting without all the errors. ideally i'd be able to bounce around to definitions as well although I'm not sure if that is possible

[16:49] <ugexe> (i'm guess the later is not entirely possible since parts of the rakudo source code are generated at build time)

[16:57] <discord-raku-bot> <bscan> @ugexe, sure that's an easy fix. I can add a feature that allows simply disables syntax checking.   The Navigator includes an error tolerant typescript-based parser, so go-to definition and autocompletion would still work within the same file. Go-to definition and displaying documentation for modules should still work as well.

[17:00] *** vlad_ left
[17:02] *** jpn left
[17:25] *** vlad joined
[18:24] *** teatime joined
[18:40] *** abraxxa-home joined
[19:24] <Xliff> MasterDuke: Valgrind run added to #5534

[19:26] <lizmat> Xliff: did you run it with sudo ?

[19:30] <Xliff> No. Not with the script I use. sudo won't grant elevated privs because raku still needs to call the script as cuid

[19:30] <Xliff> Not that it makes a difference.

[19:31] <Xliff> Just redid. Only difference is the number of warnings was reduced. No change in output.

[19:32] <Xliff> Do you want me to add that output?

[19:34] <Xliff> Added.

[19:36] *** vlad left
[19:37] *** Geth left
[19:37] *** Geth joined
[20:04] *** codesections1 joined
[20:09] *** itaipu joined
[20:59] *** codesections1 left
[21:02] *** jpn joined
[21:08] *** jpn left
[21:12] *** codesections1 joined
[21:18] *** avuserow left
[21:21] *** abraxxa-home left
[21:31] *** codesections1 left
[21:31] *** codesections1 joined
[21:32] *** codesections1 left
[21:34] *** codesections1 joined
[21:46] *** avuserow joined
[22:09] *** codesections1 left
[22:20] *** jgaz left
[22:27] *** sena_kun left
[22:32] *** tejr joined
[23:09] *** lizmat_ joined
[23:12] *** lizmat left
[23:17] <tbrowder__> what is the modern way to debug a raku core dump?

[23:32] *** bent_fingers joined
