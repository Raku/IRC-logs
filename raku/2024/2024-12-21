[01:29] *** Aedil joined
[02:08] *** hulk joined
[02:09] *** kylese left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:30] *** kylese left
[03:35] *** kylese joined
[04:17] *** hudo_ left
[04:18] *** hudo_ joined
[07:22] *** skyesoss joined
[07:23] *** skyesoss left
[07:25] *** skyesoss joined
[07:27] *** skyesoss_ joined
[07:28] *** skyesoss left
[07:34] *** Sgeo_ joined
[07:38] *** Sgeo left
[08:09] *** Xliff joined
[08:09] <Xliff> \o

[08:09] <Xliff> Is there a way to get raku to list its infix ops?

[08:09] <Xliff> m: say &infix:<+>

[08:09] <camelia> rakudo-moar e5a715ab7: OUTPUT: «&infix:<+>␤»

[08:12] <Xliff> Oh! CORE!~

[08:14] <Xliff> m: CORE::.keys.grep({ .starts-with("\&infix") }).gist.say

[08:14] <camelia> rakudo-moar e5a715ab7: OUTPUT: «(&infix:<gt> &infix:«<=>» &infix:<^…^> &infix:<unicmp> &infix:<≤> &infix:</> &infix:«>=» &infix:<and> &infix:<≠> &infix:<⚛=> &infix:<⩵> &infix:<before> &infix:<^..^> &infix:«(>=)» &infix:<**> &infix:<÷> &infix:<!~~> &infix:<⊎> &infi…»

[08:22] *** Xliff left
[08:43] *** skyesoss_ left
[08:50] <discord-raku-bot> <antononcube> @ab5tract Brian Duggan figured out a (short) workaround, see : https://github.com/bduggan/raku-jupyter-kernel/issues/115

[09:13] <discord-raku-bot> <antononcube> @ab5tract I also successfully tried out the Rakudo-HEAD Docker file you provided -- thanks!

[09:34] <discord-raku-bot> <librasteve> wonders do these docker images get posted to hub.docker.com or similar?

[09:38] <discord-raku-bot> <antononcube> The one I referred to seems experimental -- I think @ab5tract made a change in Rakudo in order to make the chatbook evaluations work.

[09:47] *** finanalyst joined
[09:49] *** Aedil left
[10:02] *** Aedil joined
[10:04] *** Aedil left
[10:04] *** Aedil joined
[10:17] *** Sgeo_ left
[11:06] <finanalyst> .tell [Coke] there is a rendered version of RakuDoc v2 at https://raku.github.io/rakudoc I'm putting up a PR with a link to it in the raku.docs/language/pod file

[11:14] <ab5tract> I created a Dockerfile based on debian:latest that builds its own rakudo

[11:15] <ab5tract> I’m not sure of any docker base images that track rakudo head. There used to be rakudo:daily but it was still using a 2023 build when I checked

[11:16] <lizmat> wouldn't that mean that every CI run with that image would rebuild Rakudo from scratch ?

[11:16] <ab5tract> Only if you set the image to be built by CI

[11:17] <lizmat> what happens if you don't ?

[11:17] <ab5tract> It’s not the default Dockerfile in the project

[11:17] <ab5tract> It’s just a custom Dockerfile that users can choose to build locally

[11:18] <ab5tract> The regular Dockerfile in Jupyter-chat book is also not built by CI afaik

[11:18] <lizmat> so what would be needed to revive a daily build ?

[11:19] <lizmat> e.g. I wouldn't mind seeing all of my modules being checked every night with the latest Rakudo

[11:19] <ab5tract> contact Dr. Suman Khamal I guess?

[11:19] <lizmat> but I guess I could do that locally  hmmmm

[11:19] <lizmat> with your Docker file I mean

[11:20] <ab5tract> You could base such an effort on mine indeed

[11:20] <ab5tract> https://github.com/antononcube/Raku-Jupyter-Chatbook/blob/master/Dockerfile.rakudo-HEAD

[11:22] <ab5tract> https://hub.docker.com/r/sumankhanal/rakudo

[11:22] <ab5tract> Weird that it says updated 5 months ago on docker hub

[12:54] <guifa> nice.  just got a DNS and mDNS packet module done.  Probably in the next day or so I'll have a fully functioning ZeroConf service module

[12:57] <guifa> (once mods are made in moarvm and rakudo)

[12:59] <lizmat> guifa++

[13:03] <guifa> we don't have any way to expose private innards to subclasses right?

[13:03] <guifa> outside of trusts

[13:04] <lizmat> indeed, that's why they're private

[13:04] <lizmat> I guess the next level would be "implementation-detail"

[13:04] <lizmat> * a public method with

[13:09] <guifa> ah yeah

[13:09] <guifa> good point

[13:09] <guifa> I always forget about that trait

[13:09] <guifa> to keep things speedy, all the DNS packets are just being kept as blobs with an offfset

[13:10] <guifa> queries and responses just keep a reference to the same blob, but with a different offset

[13:11] <guifa> there's a method for calculating the name (does a weird format) that doesn't need to be exposed, but an mDNS packet shifts the interpretation a teeny bit (utf8 instead of ascii) 

[13:12] <guifa> and of course I over-obsess over these tiny details ^_^ 

[14:00] *** melezhik joined
[14:01] <melezhik> o/

[14:02] *** melezhik left
[14:03] *** finanalyst left
[14:03] <discord-raku-bot> <antononcube> I assume it is fine making Raku packages with the Affero GPL3 (AGPL3)?

[14:04] <discord-raku-bot> <antononcube> How can I find / search AGPL3 packages in raku.land? Or anywhere else.

[15:19] <ab5tract> antononcube: looks like a license filter would be a nice addition to raku.land

[15:20] <ab5tract> when I add a package management UI to Comma, I'll try to remember to add it

[15:21] <ab5tract> for now, I think your best option is to download the ecosystem and filter the meta files

[15:22] <discord-raku-bot> <antononcube> Right, I have to do that anyway at some point in order to repeat the package recommender exercise.

[15:23] *** finanalyst joined
[15:24] *** sena_kun left
[15:24] *** guifa left
[15:24] *** sena_kun joined
[15:25] <ab5tract> https://360.zef.pm/ <--- this has got the goods :)

[15:25] <ab5tract> and this one too: https://raw.githubusercontent.com/Raku/REA/main/META.json

[15:26] <ab5tract> also here: https://raw.githubusercontent.com/ugexe/Perl6-ecosystems/master/p6c1.json

[15:28] *** sena_kun left
[15:30] *** sena_kun joined
[15:38] *** zetaaaa joined
[15:52] *** finanalyst left
[15:53] <ugexe> p6c1.json hasnt been updated in a long time. it shouldnt be used

[15:54] <ugexe> the REA META.json replaces it

[15:56] *** zetaaaa left
[15:57] *** MyNetAz left
[16:12] *** MyNetAz joined
[16:56] <[Coke]> Your own packages can have whatever license you like, I'm sure - if you're asking about raku community, I'd love to get a concensus first.

[17:00] <[Coke]> c: HEAD say 3

[17:00] <committable6> [Coke], ¦HEAD(e5a715a): «3␤»

[17:01] *** melezhik joined
[17:03] <melezhik> Thinking about building micro service framework on top of Sparky - https://github.com/melezhik/Dormitory

[17:03] *** melezhik left
[20:42] *** Sgeo joined
[21:02] *** abraxxa-home joined
[21:46] *** Sgeo left
[21:46] *** Sgeo joined
[22:33] *** abraxxa-home left
[22:34] *** sena_kun left
[23:22] <ab5tract> melezhik: cool!

[23:22] <ab5tract> ugexe, thanks for clarification

[23:58] *** MyNetAz left
