[00:10] *** wlhn joined
[01:44] *** hulk joined
[01:44] *** kylese left
[02:15] *** hulk left
[02:15] *** kylese joined
[03:41] *** beastieboo_ joined
[03:44] *** beastieboo left
[04:21] <Geth> Â¦ setup-raku/dependabot/npm_and_yarn/braces-3.0.3: b4479fa17c | dependabot[bot]++ (committed using GitHub Web editor) | package-lock.json

[04:21] <Geth> Â¦ setup-raku/dependabot/npm_and_yarn/braces-3.0.3: Bump braces from 3.0.2 to 3.0.3

[04:21] <Geth> Â¦ setup-raku/dependabot/npm_and_yarn/braces-3.0.3: 

[04:21] <Geth> Â¦ setup-raku/dependabot/npm_and_yarn/braces-3.0.3: Bumps [braces](https://github.com/micromatch/braces) from 3.0.2 to 3.0.3.

[04:21] <Geth> Â¦ setup-raku/dependabot/npm_and_yarn/braces-3.0.3: - [Changelog](https://github.com/micromatch/braces/blob/master/CHANGELOG.md)

[04:21] <Geth> Â¦ setup-raku/dependabot/npm_and_yarn/braces-3.0.3: - [Commits](https://github.com/micromatch/braces/compare/3.0.2...3.0.3)

[04:21] <Geth> Â¦ setup-raku/dependabot/npm_and_yarn/braces-3.0.3: 

[04:21] <Geth> Â¦ setup-raku/dependabot/npm_and_yarn/braces-3.0.3: ---

[04:21] <Geth> Â¦ setup-raku/dependabot/npm_and_yarn/braces-3.0.3: <â€¦commit message has 6 more linesâ€¦>

[04:21] <Geth> Â¦ setup-raku/dependabot/npm_and_yarn/braces-3.0.3: review: https://github.com/Raku/setup-raku/commit/b4479fa17c

[04:21] <Geth> Â¦ setup-raku: dependabot[bot]++ created pull request #35: Bump braces from 3.0.2 to 3.0.3

[04:21] <Geth> Â¦ setup-raku: review: https://github.com/Raku/setup-raku/pull/35

[04:32] <Geth> Â¦ setup-raku: b4479fa17c | dependabot[bot]++ (committed using GitHub Web editor) | package-lock.json

[04:32] <Geth> Â¦ setup-raku: Bump braces from 3.0.2 to 3.0.3

[04:32] <Geth> Â¦ setup-raku: 

[04:32] <Geth> Â¦ setup-raku: Bumps [braces](https://github.com/micromatch/braces) from 3.0.2 to 3.0.3.

[04:32] <Geth> Â¦ setup-raku: - [Changelog](https://github.com/micromatch/braces/blob/master/CHANGELOG.md)

[04:32] <Geth> Â¦ setup-raku: - [Commits](https://github.com/micromatch/braces/compare/3.0.2...3.0.3)

[04:32] <Geth> Â¦ setup-raku: 

[04:32] <Geth> Â¦ setup-raku: ---

[04:32] <Geth> Â¦ setup-raku: <â€¦commit message has 6 more linesâ€¦>

[04:33] <Geth> Â¦ setup-raku: review: https://github.com/Raku/setup-raku/commit/b4479fa17c

[04:33] <Geth> Â¦ setup-raku: 7217521be4 | (Shoichi Kaji)++ (committed using GitHub Web editor) | package-lock.json

[04:33] <Geth> Â¦ setup-raku: Merge pull request #35 from Raku/dependabot/npm_and_yarn/braces-3.0.3

[04:33] <Geth> Â¦ setup-raku: 

[04:33] <Geth> Â¦ setup-raku: Bump braces from 3.0.2 to 3.0.3

[04:33] <Geth> Â¦ setup-raku: review: https://github.com/Raku/setup-raku/commit/7217521be4

[04:55] *** eseyman left
[04:59] *** beanbrain joined
[05:23] *** wenzel_ joined
[05:27] *** wlhn left
[05:30] *** Sgeo left
[05:40] *** manu_ joined
[05:40] *** manu_ is now known as eseyman

[06:52] *** beanbrain left
[07:05] *** beanbrain joined
[07:08] *** beastieboo_ left
[07:10] *** wenzel_ left
[07:10] *** wlhn joined
[07:18] *** jpn joined
[07:25] *** jpn left
[07:30] *** beanbrain left
[07:39] *** wayland joined
[07:45] *** jpn joined
[07:46] <wayland> librasteve: I shall await your module People::Roman::JuliusCaesar :p 

[08:37] *** sena_kun joined
[08:37] *** dawids joined
[09:18] *** beastieboo joined
[09:39] *** avuserow_ left
[09:40] *** avuserow_ joined
[09:55] *** jpn left
[10:07] <discord-raku-bot> <librasteve> o/

[10:07] <discord-raku-bot> <librasteve> I find myself going $r.=subst(:g, /(<{%subtractives.keys}>)/, { %subtractives{$0} });

[10:08] <discord-raku-bot> <librasteve> this works, but I can help thinking that raku .subst comes with a better way ???

[10:09] *** jpn joined
[10:17] <lizmat> librasteve: are the keys strings or regexes ?

[10:18] <discord-raku-bot> <librasteve>  my %subtractives = (      IV => 'IIII',   #( 5 - 1 == 4 )      IX => 'VIIII',  #( 10 - 1 == 9 )      XL => 'XXXX',   #( 50 - 10 == 40 )     XC => 'LXXXX',  #( 100 - 10 == 90 )     CD => 'CCCC',   #( 500 - 100 == 400 )     CM => 'DCCCC',  #( 1000 - 100 == 900 ) );

[10:18] <discord-raku-bot> <librasteve> (hope that looks Ok on the IRC side)

[10:23] <wayland> librasteve: It looks about the same as at https://irclogs.raku.org/raku/live.html

[10:23] <discord-raku-bot> <librasteve> phew

[10:23] <wayland> (also, my previous comment was in relation to the Wikipedia discussion :) )

[10:24] <wayland> If that's not what you wanted, maybe a github gist?

[10:24] <discord-raku-bot> <librasteve> that's cool - Im aiming not to pollute the IRC side with Discord backticks

[10:28] <lizmat> $r .= subst(.key, .value, :g) for %substractives;    # librasteve

[10:28] <discord-raku-bot> <librasteve> my $p = %subtractives.keys => %subtractives.values; $r.=trans($p);

[10:28] <discord-raku-bot> <librasteve> getting their with the "non-string" multi of trans

[10:30] <wayland> lizmat: Nice!  I was starting to work in that direction, but much more slowly :) 

[10:30] <discord-raku-bot> <librasteve> my $p = (.keys => .values) given %subtractives;      $r.=trans($p);

[10:31] <discord-raku-bot> <librasteve> $r.=trans: (.keys => .values) given %subtractives;     

[10:32] <discord-raku-bot> <librasteve> heh heh

[10:34] <wayland> Is there a module that adds an "else" clause to a for loop?  

[10:34] <wayland> Oh, found it

[10:34] <wayland> Slang::Otherwise.  

[10:34] <lizmat> https://raku.land/zef:elcaro/Slang::Otherwise

[10:35] <lizmat> indeed

[10:35] <wayland> Thanks :) 

[10:51] <discord-raku-bot> <librasteve> I merged the fix to Slang::Roman (seems I have the power) ... should I fez it?

[10:52] <discord-raku-bot> <librasteve> (or maybe there is a raku community auth to use for fez?)

[10:53] <discord-raku-bot> <librasteve> [yikes I messed up the README ... will sort that]

[10:57] <discord-raku-bot> <librasteve> that's better (gh markdown !)

[10:59] <discord-raku-bot> <librasteve> anyway we should bump to 0.6 and fez it

[11:16] *** dawids left
[11:28] <lizmat> well, I'd say mi6 release it

[12:14] *** thaewrapt left
[12:35] *** itaipu left
[12:36] *** human-blip joined
[12:38] *** jpn left
[12:39] <discord-raku-bot> <antononcube> I am looking at the code of https://raku.land/zef:raku-community-modules/Slang::Roman . There should be a grammar for that Roman numbers.

[12:40] <discord-raku-bot> <antononcube> What are the differences between "Slang::Roman" and "Math::Roman" ? Do they produce the  same or comparable results? Do they "agree" on how roman numbers are translated?

[12:49] *** itaipu joined
[12:49] *** raiph joined
[12:49] *** jpn joined
[12:54] *** jpn left
[12:58] *** thaewrapt joined
[12:59] <lizmat> librasteve alternately, I could do the release to zef

[13:00] <discord-raku-bot> <librasteve> lizmat: I can happily Mi6 release also --- but I will need the credentials for "auth": "zef:raku-community-modules",

[13:01] <lizmat> I sent you invite :-)

[13:01] <discord-raku-bot> <librasteve> since sharing credentials is probably a nono, suggest that you do it

[13:02] <discord-raku-bot> <librasteve> checking

[13:02] <lizmat> librasteve there's non sharing of credentials needed

[13:02] <lizmat> you become part of the fez raku-community-modules organization, that gives you the right to release modules with he zef:raku-community-modules auth

[13:02] <discord-raku-bot> <librasteve> yes - I see that from your message

[13:04] <discord-raku-bot> <librasteve> >>= You're now a very nice member of raku-community-modules

[13:06] <discord-raku-bot> <librasteve> which mi6

[13:06] <discord-raku-bot> <librasteve> (oops wrong window)

[13:13] *** jpn joined
[13:14] *** raiph left
[13:16] <discord-raku-bot> <librasteve> anton: there is a (trivial) Grammar for that Roman numbers in that code --- so I guess you mean that you wouldl ike to see a Grammar that checks that the Roman numbers are correctly formed? ... actually a very nice starter challenge for a raku Grammar newbie

[13:17] <discord-raku-bot> <librasteve> on the differences, I do not know ... I chose App::Crag to depend on Slang::Roman since I want to eventually migrate all of Crag to a Slang ... haven't looked at Math::Roman - perhaps the maintainer can tell us

[13:23] <discord-raku-bot> <librasteve> released ok

[13:23] <lizmat> librasteve++

[13:23] *** beastieboo left
[13:24] *** beastieboo joined
[13:29] <lizmat> librasteve changing the README.md will not survive the next mi6 release process

[13:29] <lizmat> you need to add it to the pod

[13:33] *** Sgeo joined
[13:40] <[Coke]> I wonder if when we generate .md from .rakudoc if we should include a _generated from XXX_ at the top

[13:40] <[Coke]> (Also nice to advertise on github that we're using rakudoc)

[13:46] <discord-raku-bot> <antononcube> @Coke If LLMs -- or at least one LLM -- can generate reliably rakudoc output, that would be good advertisement.

[13:47] <discord-raku-bot> <antononcube> Current trends in LLMs, though, are to have reliable JSON and Markdown outputs.

[13:49] <discord-raku-bot> <librasteve> wondered why it didn't survive the release ;-(

[13:59] <discord-raku-bot> <antononcube> @librasteve What didn't? ðŸ™‚

[13:59] <discord-raku-bot> <librasteve> the lovely README that I made

[14:01] <discord-raku-bot> <librasteve> apparently Mi6 requires you to write your doc in POD6 and autoconverts to DM and adds to the README - I personally dislike POD6 since the effort of learning it (vs just getting more fluent in MD) is a waste of time

[14:01] <discord-raku-bot> <librasteve> I would much rather have a one time PO6 directive that says "MD markup here"

[14:02] <discord-raku-bot> <librasteve> (but I lost that argument a long time back)

[14:06] <discord-raku-bot> <antononcube> Hmmm... I see. Would the converter from Markdown to POD6 help?

[14:06] <discord-raku-bot> <librasteve> nope

[14:09] <lizmat> librasteve sorry to hear that: I think RakuDoc v2.0 gives you a much richer documentation language to work with

[14:10] <discord-raku-bot> <librasteve> who needs yet another markup language

[14:12] <discord-raku-bot> <librasteve> (to be clear this is not meant to be a criticism of POD6, more of a personal taste timtowdi style and I do see that a richer markup language - with ToC and so on has a place)

[14:12] <discord-raku-bot> <librasteve> and now I learned that you can do tables with it

[14:15] <discord-raku-bot> <antononcube> That is why I think I you should have converters from/to any of those markup languages. (For Raku purposes.)

[14:17] <discord-raku-bot> <antononcube> It is likely some of the LLMs with large input-token counts to be able to convert to POD6 and / or RakuDoc. (With or without pre-feeding of the corresponding specs.)

[14:17] <discord-raku-bot> <librasteve> to be fair to Mi6, it does default to [ReadmeFromPod] ; enable = false filename = lib/Slang/Roman.rakumod

[14:22] <discord-raku-bot> <antononcube> BTW, Chebyshev polynomials computations are perfect showcase of FatRat!

[14:53] *** soverysour joined
[15:14] *** human-blip left
[15:21] *** thaewrap1 joined
[15:24] *** thaewrapt left
[15:38] *** itaipu left
[15:48] *** soverysour left
[15:55] *** itaipu joined
[16:00] *** mtj left
[16:00] *** lesihctej left
[16:02] *** lesihctej joined
[16:04] <[Coke]> using any of the pod to markdown modules, is there a way to get the special links like these: https://github.com/Raku/doc/blob/main/README.md?plain=1#L3-L4

[16:08] *** jpn left
[16:10] <[Coke]> I can do links, but that's really an img src, I think

[16:13] *** mtj joined
[16:40] *** lesihctej left
[16:41] *** lesihctej joined
[17:33] *** andinus left
[17:34] *** andinus joined
[18:26] *** andinus left
[18:30] *** andinus joined
[18:33] *** andinus left
[18:35] *** andinus joined
[18:35] <discord-raku-bot> <librasteve> <[Coke]>: good question

[18:36] *** andinus left
[18:39] *** andinus joined
[18:39] <discord-raku-bot> <librasteve> more fundamentally, I suppose it would be really cool if we (all coders) had a standard way of marking =begin md to =end md (from the raku side) and xxxraku to xxx from the markdown side [where x == a backtick] and so on

[18:47] *** jpn joined
[18:47] *** sjn left
[18:54] *** sjn joined
[18:58] *** jpn left
[19:10] *** beanbrain joined
[20:06] *** soverysour joined
[20:06] *** soverysour left
[20:06] *** soverysour joined
[20:16] *** soverysour left
[20:26] *** beanbrain left
[20:30] *** beanbrain joined
[20:33] *** soverysour joined
[20:33] *** soverysour left
[20:33] *** soverysour joined
[20:41] *** wayland76 joined
[20:41] *** wayland left
[20:49] *** soverysour left
[21:26] <tbrowder> re Mi6: it does NOT require pod6

[21:29] <tbrowder> however, given the ease of converting pod6 to Markdown, and the richness of pod6, i just donâ€™t understand the dislike of pod6; itâ€™s not your old perl pod, either

[21:31] *** japhb left
[21:31] <tbrowder> and thanks to antononcube, we can easily convert any markdown to pod6 and be done with it.

[21:31] *** jpn joined
[21:36] *** jpn left
[21:36] *** japhb joined
[21:42] <wayland76> tbrowder: I'm not arguing against Pod, but I think librasteve's idea is that, "Given that people already know Markdown, is Pod6 enough of an improvement to be worth the learning curve".  Personally I think I prefer the Pod6 option because of the extra richness (though maybe an improved markdown would be a better option), but is the learning curve a barrier to entry for newbies?  

[22:16] <wayland76> Hi!  Can Test::ContainerizedService be used in GitHub Actions?  

[22:17] *** hudo_ left
[22:17] *** hudo_ joined
[22:28] <wayland76> Does anyone know if Comma can do multiple windows?  I have 4 screens, and want to use 2 for code.  

[22:32] *** jpn joined
[22:37] *** jpn left
