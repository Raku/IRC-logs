[00:06] *** sena_kun left
[01:01] *** jpn joined
[01:07] *** jpn left
[02:02] *** jpn joined
[02:08] *** jpn left
[02:25] *** kylese left
[02:25] *** kylese joined
[02:46] *** TieUpYourCamel left
[03:03] *** jpn joined
[03:09] *** jpn left
[03:15] *** kylese left
[03:15] *** kylese joined
[03:30] *** kylese left
[03:33] *** kylese joined
[04:05] *** jpn joined
[04:10] *** jpn left
[04:16] *** festerdam left
[05:06] *** jpn joined
[05:10] *** jpn left
[05:49] *** jpn joined
[05:54] *** jpn left
[06:45] *** jpn joined
[06:50] *** jpn left
[07:03] *** jpn joined
[07:12] *** jpn left
[07:31] *** gh joined
[07:31] <gh> g

[07:32] *** gh left
[07:40] *** tjr left
[07:41] *** jpn joined
[07:46] *** jpn left
[08:33] *** sena_kun joined
[08:38] *** jpn joined
[08:44] *** jpn left
[10:04] *** jpn joined
[10:09] *** jpn left
[10:16] *** abraxxa joined
[10:20] *** CIAvash joined
[10:24] *** abraxxa left
[10:59] *** jpn joined
[11:04] *** jpn left
[11:20] *** blendux joined
[11:28] *** Sgeo left
[11:54] *** jpn joined
[11:59] *** jpn left
[12:03] *** epony left
[12:10] *** blendux left
[12:11] *** melezhik joined
[12:11] <melezhik> o/

[12:12] <melezhik> I've read the https://cro.services/community-transfer - so, I hope cro will remain, I wonder if we as a community ready to maintain the project, like I said, I have a lot of production projects which are based on it ...

[12:12] <melezhik> just a thoughts ...

[12:19] *** epony joined
[12:20] <lizmat> we would need more people to contribute and get acquainted with the code base 

[12:20] <lizmat> patrickb is already going ahead with this

[12:23] <melezhik> yeah, I mean , I've been building an internal installation and configuration platform based on Spark for product in the  company I work for, and Sparky is built on cro

[12:25] <melezhik> so if everything goes well we might have another big company using Raku and cro ), the stakes are high )

[12:25] <lizmat> well, the Raku IRC logs site also runs on Cro  :-)

[12:27] <melezhik> right/right , we "all" do )

[12:28] <melezhik> so don't make me say that Humming Bird is our last resort, this is going to be a lot of code to rewrite ha-ha )))

[12:33] *** melezhik left
[12:50] *** jpn joined
[12:55] <xinming> All my personal projects are written in raku, I believe Raku will shine :-)

[12:55] *** jpn left
[12:56] <xinming> also when cro handles to community, I'll also use it, and still using it.

[12:57] <lizmat> maybe a strange thought: should cro become Raku core ?

[13:02] <lizmat> core, as in living in the lib directory, so a "use Cro::..." would always work

[13:10] *** melezhik joined
[13:10] <melezhik> lizmat: imho I found cro code a bit "heavy" to be included in the core ... I might be wrong though ...

[13:10] *** stanrifkin_ joined
[13:10] <lizmat> well, there's that  :-)

[13:11] <melezhik> so, you're agree or disagree?

[13:12] <lizmat> that the code is heavy?  yes

[13:12] <melezhik> anyways, having a web framework built into a language is a good idea

[13:12] <melezhik> ah, ok ))

[13:12] <lizmat> whether that would matter for inclusion?   not sure

[13:12] <lizmat> one point against it would be that the spectest would run considerably longer

[13:13] <melezhik> well, I mean code included into a core should lightweight and basic enough, so it won't get degrade with a  language inevitable changes

[13:13] <melezhik> > one point against it would be that the spectest would run considerably longer - that's just the consequences of this )

[13:14] *** discord-raku-bot left
[13:14] *** discord-raku-bot joined
[13:19] <Voldenet> I do think there is worth in having as much as possible as built-ins

[13:21] *** melezhik left
[13:23] *** jpn joined
[13:26] <Voldenet> built-ins don't even have to be the best in anything, but they make doing anything a lot easier

[13:30] *** CIAvash left
[13:33] <xinming> lizmat: I don't think it's good to add Cro to the core. I wish the language thing should be as small as possible. probably we can also create a raku-bundle, which is the same as raku distribution but with stablized lib bundles.

[13:33] <lizmat> is cro in Rakudo Star ?

[13:34] <Voldenet> > https://github.com/rakudo/star/blob/master/etc/modules.txt

[13:34] <xinming> and I doubt bundle kind of thing will work

[13:34] <Voldenet> doesn't appear so

[13:40] <Voldenet> I believe some kind of http server/client should be included with the core language, like IO::Socket

[13:45] <Voldenet> but it should be something basic, that'd fit in two files perhaps

[13:49] <Voldenet> for example, python has very basic http.server that fits in one* file

[13:49] <Voldenet> * - around 1kLOC

[13:50] <lizmat> does it do https://  ?

[13:50] <Voldenet> I'm not sure, I'd guess not

[13:51] <Voldenet> There's ssl.wrap_socket, which accepts the socket from http server

[13:53] <Voldenet> very similar to IO::Socket::Async::SSL, which uses openssl as dependency

[13:56] <Voldenet> golang has net/http, node has http.server, php has built-in server

[13:59] *** jpn left
[14:00] <Voldenet> I don't think anything beats `python -m http.server` oneliner in convenience

[14:07] *** festerdam joined
[14:21] <ugexe> its the yaer 2024, if a http client/server library is being included it should include ssl support out of the box

[14:22] *** epony left
[14:25] <lizmat> so that would mean putting OpenSSL into core

[14:26] <El_Che> go had great success by adding a web client and server in the core library, not by providing something simple, but by providing something usefull that frameworks could easily extend. Even those with code from scratch use the same abstractions.

[14:28] <lizmat> I for one wouldn't mind "slurp" taking a URL  :-)

[14:30] <El_Che> of course it needs to get the size/usefulness balance right

[14:30] <El_Che> and that's hard

[14:30] <lizmat> on that thought, I wonder whether it would make more sense to include libcurl into MoarVM

[14:35] <ugexe> the old design docs had IO::File.new(uri => ...)

[14:35] <ugexe> which could have taken non-file backends

[15:03] *** tejr left
[15:06] *** tejr joined
[15:24] *** FFCode joined
[15:28] *** xinming left
[15:30] <guifa_> tonyo : we can pullback a fez upload if it's only been a few minutes right?  Realized I left some files there because I had to change the build process -- public domain so not a huuuuuuge deal but I'm a perfectionist ha

[15:38] *** epony joined
[15:44] *** epony left
[15:45] *** jpn joined
[15:49] *** jpn left
[15:51] <tbrowder__> do it quickly

[15:52] <tbrowder__> maybe 4 hrs, but i forget

[15:52] <guifa_> tbrowder: was it just a case of needing to reupload?

[15:53] <tbrowder__> no i was trying to remove it so i could change something and resubmit

[15:54] <guifa_> yeah I mean to do it did you just rerun fez upload wiwth the same version or?

[15:55] <tbrowder__> well, you can remove it if you haven't exceeded the time limit, but i usually have exceeded the time so i just have to bump the version

[15:56] <tbrowder__> fumble fingers!!

[15:57] <tbrowder__> and raku.land is quickly advertising new uploads now

[15:57] <guifa_> Ah I got it, just needed to use version before auth for the remove command

[16:00] <tbrowder__> m: class Foo { has $.a  = 1;}; my $o = Foo.new; say $o.a

[16:00] <camelia> rakudo-moar 344f7978d: OUTPUT: «1␤»

[16:03] <tbrowder__> m: class Foo { has $.a=1}; my $a = Foo.new; class Bar is Foo { submethod TWEAK { $!a = 2 }}; my $b = Bar.new; say $a.a; say $b.a

[16:03] <camelia> rakudo-moar 344f7978d: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Attribute $!a not declared in class Bar␤at <tmp>:1␤------> ar is Foo { submethod TWEAK { $!a = 2 }}⏏; my $b = Bar.new; say $a.a; say $b.a␤    expecting any of:␤        horizontal whites…»

[16:08] <tbrowder__> m: class F {has $.a = 1}; class B is F { $.a = 2}; my $b = B.new; say $b.a

[16:08] <camelia> rakudo-moar 344f7978d: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable $.a used where no 'self' is available␤at <tmp>:1␤------> lass F {has $.a = 1}; class B is F { $.a⏏ = 2}; my $b = B.new; say $b.a␤    expecting any of:␤        term␤»

[16:09] *** epony joined
[16:12] <tbrowder__> m: class F { has $.a =1}; class B is F { has $.a = 2}; my $a = F.new; my $b = B.new; say $a.a; say $b.a;

[16:12] <camelia> rakudo-moar 344f7978d: OUTPUT: «1␤2␤»

[16:21] <guifa_> vrurg & lizmat I just updated Timezones::ZoneInfo to include the fix for https://github.com/rakudo/rakudo/issues/5502

[16:40] *** jpn joined
[16:44] *** jpn left
[17:05] *** bjorkintosh joined
[17:05] *** bjorkintosh left
[17:06] *** festerdam left
[17:36] *** jpn joined
[17:41] *** jpn left
[18:12] *** jpn joined
[19:07] *** dakkar joined
[19:37] *** Sgeo joined
[19:51] *** jpn left
[20:10] *** dakkar left
[20:37] *** jpn joined
[20:42] *** jpn left
[21:07] <discord-raku-bot> <librasteve> it's an interesting idea to bundle cro with raku --- initially I liked it, but since even ruby does not include rails, I think best to keep cro distinct as a zef install

[21:31] *** jpn joined
[21:36] *** jpn left
[21:48] *** jpn joined
[21:52] *** jpn left
[22:11] *** tjr joined
[22:11] <SmokeMachine> I think adding it on Star would be good

[22:20] <leont> librasteve: That's also because ruby has tons of frameworks that are better than rails.

[22:27] *** jpn joined
[22:29] *** FFCode left
[22:32] *** jpn left
[22:49] <El_Che> librasteve: part of the success of go was the included webserver, and like leont mentioned, ruby is in a different place as raku.

[22:49] <El_Che> *due

[22:53] <discord-raku-bot> <librasteve> hmmm - maybe I am coming round ... it's certainly a big positive asset to the raku capabilities and I really like the way that cro leverages core features such as react and routes ...

[22:53] <El_Che> it's something that needs a lot of thought and vision, not a decision to take hastely

[22:55] *** jpn joined
[23:02] *** jpn left
[23:42] *** sena_kun left
