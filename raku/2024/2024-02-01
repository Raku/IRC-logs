[00:00] *** Sgeo joined
[00:02] *** jpn left
[00:21] *** jpn joined
[00:26] *** jpn left
[00:44] *** tejr left
[00:47] *** TieUpYourCamel joined
[00:47] *** tejr joined
[01:10] *** laidback_01_ is now known as laidback_01

[01:24] *** jgaz left
[02:04] *** jpn joined
[02:09] *** jpn left
[02:25] *** jpn joined
[02:26] *** kylese left
[02:26] *** hulk joined
[02:32] *** jpn left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:24] *** derpydoo left
[03:33] *** festerdam joined
[03:33] <festerdam> Hi, all!

[03:33] <tellable6> 2024-01-17T12:39:40Z #raku <lizmat> festerdam: do I see a yiddish localization on the horizon ?

[03:35] <festerdam> I see the Raku docs repository once provided a means to generate an epub for the whole of the raku documentation, but there is not mention of it in the README anymore. Why is that?

[03:40] <festerdam> tellable6: Probably not since I don't know much of it. I can read and understand it somewhat. Add any loshn koydesh and I don't understand anything. :D

[03:40] <tellable6> festerdam, I haven't seen Probably around

[03:41] <festerdam> linkable6: lizmat: Probably not since I don't know much of it. I can read and understand it somewhat. Add any loshn koydesh and I don't understand anything. :D

[03:41] <festerdam> (sorry for repeated message)

[03:44] <festerdam> I just noticed I didn't mention the bot and instead mentioned some random person, I won't resend it, so the chat isn't over and over the same message.

[03:47] <festerdam> The makefile for the docs no longer seems to have an "epub" rule, but neither does it seem to have any rules to generate the html pages, so I assume I'm looking in the wrong place.

[03:52] <Voldenet> docs are here https://github.com/Raku/doc

[03:54] <festerdam> Voldenet: That's the makefile I'm looking at. It only has rules to run tests.

[03:54] <Voldenet> for tooling, readme has mention of rakudoc and doc-website

[04:02] <festerdam> Voldenet: Thanks! Seems like doc-website doesn't provide a tool to generate an epub. An issue for it has been opened a year ago. I'll see if there is a way to generate all in a single html page. Maybe I can convert that into an epub.

[04:04] <Voldenet> maybe looking at markdown in raku-pod-render would be a good idea, since it's easier to combine markdown files if necessary

[04:50] *** festerdam left
[05:50] *** CIAvash joined
[05:56] *** CIAvash left
[05:56] *** CIAvash joined
[06:28] *** abraxxa joined
[06:40] *** hudo_ joined
[06:43] *** hudo left
[07:22] *** CIAvash left
[07:46] *** wenzel_ left
[09:12] *** dakkar joined
[09:14] *** Sgeo left
[10:01] *** sena_kun joined
[10:19] *** jpn joined
[10:23] <El_Che> 22

[10:23] <tellable6> 2024-01-26T21:34:01Z #raku-dev <jdv> El_Che the 2024.01 release happened

[10:23] <El_Che> damn, missed it too busy

[10:23] <El_Che> will build no

[10:23] <El_Che> w

[11:11] <discord-raku-bot> <antononcube> @Voldenet Are you saying that Markdown should be rendered inside Pod? (I think Alexande Zahatski's packages are doing that.)

[11:20] <discord-raku-bot> <antononcube> Also, I would like to point out that "Markdown::Grammar" can convert Markdown files into Pod6 and HTML. But I do make those kind of conversions often, so there might some (small) glitches and incosistencies.

[11:25] <El_Che> rakudo-pkg released to the repos: ttps://github.com/nxadm/rakudo-pkg/releases/tag/v2024.01

[11:25] *** gabiruh_ left
[11:34] <lizmat> El_Che++

[12:10] <tbrowder__> hi, asking for advice again. is there any way to define something like a class template. a role is kind of teemplate, but i want to define a methods signature but NOT its insides. something like this: template T { has $.attr1;;

[12:11] <tbrowder__> * has $.attr1; method U(Std

[12:12] <tbrowder__> sorry about the fumble, back later with a gist

[12:13] <tbrowder__> basically i want something like a role that cam

[12:14] <tbrowder__> *can define a method's signature (with its return type) but not its guts

[12:25] <lizmat> role Foo { method bar($a, $b) { ... } }; class A does Foo { }

[12:25] <lizmat> m: role Foo { method bar($a, $b) { ... } }; class A does Foo { }

[12:25] <camelia> rakudo-moar d4468a417: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Method 'bar' must be implemented by A because it is required by roles: Foo.‚ê§at <tmp>:1‚ê§¬ª

[12:25] <lizmat> m: role Foo { method bar($a, $b) { ... } }; class A does Foo { method bar($a) { } }

[12:25] <camelia> rakudo-moar d4468a417: ( no output )

[12:26] <lizmat> m: role Foo { proto method bar($a, $b) {*} }; class A does Foo { method bar($a) { } }

[12:26] <camelia> rakudo-moar d4468a417: ( no output )

[12:26] <lizmat> m: role Foo { proto method bar($a, $b) {*} }; class A does Foo { multi method bar($a) { } }

[12:26] <camelia> rakudo-moar d4468a417: ( no output )

[12:26] <lizmat> m: role Foo { proto method bar($a, $b) {*} }; class A does Foo { multi method bar($a) { } }; A.foo(42)

[12:26] <camelia> rakudo-moar d4468a417: OUTPUT: ¬´No such method 'foo' for invocant of type 'A'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:26] <lizmat> m: role Foo { proto method bar($a, $b) {*} }; class A does Foo { multi method bar($a) { } }; A.bar(42)

[12:26] <camelia> rakudo-moar d4468a417: OUTPUT: ¬´Too few positionals passed; expected 3 arguments but got 2‚ê§  in method bar at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:26] <lizmat> m: role Foo { proto method bar($a, $b) {*} }; class A does Foo { multi method bar($a,$b) { } }; A.bar(42,666)

[12:26] <camelia> rakudo-moar d4468a417: ( no output )

[12:37] <discord-raku-bot> <antononcube> @trbrowder The script for generating the "Date::Names" files is here: https://github.com/antononcube/Date-Names/blob/master/dev/date-names-files-generation.raku

[12:38] <discord-raku-bot> <antononcube> I verified with Bulgarian and Russian language generations.

[12:44] *** jpn left
[12:47] <tbrowder__> lizmat: thnx, any hope? i think my design needs a rethin

[12:48] <tbrowder__> antononcube: thank you very much!

[12:48] <lizmat> well, with the proto in the role, you *can* force an interface as long as the class also uses multi method

[12:48] <lizmat> otherwise, you're out of luck I'm afraid

[12:50] <tbrowder__> ok, i'll see. my use case is with very structured data, with your help i mm

[12:51] <tbrowder__> may be able to get it to work.

[12:51] <discord-raku-bot> <antononcube> @tbrowder I guess I have to generate the test files too.

[12:56] <tbrowder__> that would be very helpful, thanks so much

[12:58] *** epony left
[12:59] <tbrowder__> even without a native language input, we can put the generated data out there and have something a native language user can easely critique rather than expecting a user of the final product to be a raku programmer

[13:00] <discord-raku-bot> <antononcube> @tbrowder Right!

[13:00] <discord-raku-bot> <antononcube> @tbrowder I committed the first versions of the files for Bulgarian, Portuguese, Serbian, and Turkish. I make the test generations later.

[13:00] <discord-raku-bot> <antononcube> See: https://github.com/antononcube/Date-Names

[13:01] <tbrowder__> i envision an online calendar-type generation site witj language and year selection, button push, and pdf download.

[13:01] <tbrowder__> maybe html with yr llm stuff

[13:03] <discord-raku-bot> <antononcube> Well, LLMs can be used directly to generate the calendars. But, of course, that is slow.

[13:05] *** festerdam joined
[13:05] *** epony joined
[13:09] *** epony left
[13:10] <tbrowder__> color me skeptical, but i would be surprised to see beautiful pdf output.

[13:12] <tbrowder__> but i guess i could sit here with a microphone and carefully describe the necessary moves...i'm living in a new world!

[13:14] *** jpn joined
[13:17] *** epony joined
[13:19] *** jpn left
[13:23] *** jpn joined
[13:33] *** jpn left
[13:37] <tbrowder__> antononcube: any fellow raku ppl in yr part of florida?

[13:44] *** jpn joined
[14:09] *** CIAvash joined
[14:18] <discord-raku-bot> <antononcube> @tbrowder There might be some, but I do not know them. üôÇ

[14:46] <tbrowder__> i would love to see raku/perl conf back in flow

[14:48] <tbrowder__> florida, the one in 2016 was great, larry, damian, lizmat, bruce gray, and lots more there

[14:50] <El_Che> amterdam 2017 was also with Larry, Damian and Lizmat

[14:50] <lizmat> sadly, Florida, as many other places in the US, are off my list: https://travelwhiletrans.com/#/us/fl

[14:52] <El_Che> crazy shit

[15:05] *** Sgeo joined
[15:07] <[Coke]> the epub generation wasn't working well, and finanalyst has it in his backlog to fix.

[15:07] <[Coke]> If someone else wants to steal it as a todo, that'd be awesome.

[15:07] <[Coke]> feel free to join us in #raku-doc and chat.

[15:08] <[Coke]> (was never true epub, was just "big html file")

[15:09] <[Coke]> lizmat: My state of NY is much better if you want to stop by!

[15:09] * [Coke] is not surprised that his birth state of CT is not as good as NY but not as bad as FL. *sigh*

[15:19] *** CIAvash left
[15:28] <jdv> i think ct has the richest county

[15:28] <jdv> or town...

[15:39] <discord-raku-bot> <antononcube> Yeah, if I knew about the Raku conference in Orlando 2016, I would have tried to attend.

[15:41] <discord-raku-bot> <antononcube> I do not live in FL by choice. But it looks I am accustomed to it...

[15:54] <tbrowder__> with META6.json, is it valid to have a depends line like this: "Foo:api<2>"

[16:07] <tbrowder__> lizmat: so far it looks like yr solution will do the tricks i need, thanks!

[16:08] <lizmat> tbrowder__: Foo:api<2> is valid in despends, and recommended to be as strict as possible

[16:09] <tbrowder__> cool!

[16:20] <tbrowder__> regarding api 2, so a user just asks zef for Foo, zef should just hand latest version even if there were a later version without an api tag? just asking on off chance in real life one could have (1) Foo:ver<3> and (2) Foo:api<2> without specifying its latest version of 1.9 [hopefully an unlikely case]

[16:23] <lizmat> well, if you want to be sure, you also specify the :auth ad :ver in the depends

[16:30] <discord-raku-bot> <librasteve> also worth checking the docs on version class and comparisons since i think you can specify thinks like ‚Äúv6 or higher‚Äù and so on

[16:32] *** raju joined
[16:39] *** raju left
[17:03] *** jpn left
[17:17] *** laidback_01 left
[17:20] <tbrowder__> lizmat: thanks

[17:21] <tbrowder__> librasteve: thanks

[17:26] *** perlbot left
[17:26] *** simcop2387 left
[17:32] *** dakkar left
[17:35] *** abraxxa left
[18:00] *** Maximus joined
[18:01] *** Sevalecan left
[18:01] *** Maximus is now known as Sevalecan

[18:04] *** antim0d3s left
[18:05] *** sdfgsdfg joined
[18:12] *** simcop2387 joined
[18:14] *** perlbot joined
[19:00] *** TieUpYourCamel left
[19:01] *** TieUpYourCamel joined
[19:43] <discord-raku-bot> <antononcube> @tbrowder I assume you want to make calendars similar to those found in Emacs calendar function. If yes, then prompting an LLM to do that is most likely not that hard.

[19:58] *** Maximus joined
[19:59] <discord-raku-bot> <antononcube> With the following two lines code we get a reasonably good looking calendars (which are correct most of the time.)

[19:59] *** Sevalecan left
[19:59] *** Maximus is now known as Sevalecan

[20:00] <discord-raku-bot> <antononcube>  my &fcal0 = llm-function(     {"Make make an Emacs style calendar from $^a to $^b.\n" ~ llm-prompt('NothingElse')('Emacs calendar  text') },      e => llm-configuration('ChatGPT', model => 'gpt-3.5-turbo', max-tokens => 2048, temperature => 0.12));  &fcal0("January 1, 2024", "April 30, 2024") 

[20:02] <discord-raku-bot> <antononcube> Well, of course, one has to decide where to invest development time: 1) massaging prompts that convince LLMs to produce good looking calendars, 2) make program calendars the "hard way."

[20:03] <discord-raku-bot> <antononcube> There is also, a third option: 3) figure out which parts LLM does wrong, program that parts in Raku, and then "visualize" using an LLM.

[20:37] *** epony left
[20:44] *** jpn joined
[20:51] *** jpn left
[20:55] *** nort joined
[21:42] *** jpn joined
[21:48] *** jpn left
[22:46] *** jpn joined
[22:52] *** jpn left
[22:57] *** sena_kun left
[23:47] *** jpn joined
[23:50] <tbrowder__> antononcube: yes, option 3 sounds like the right path imho

[23:52] *** jpn left
