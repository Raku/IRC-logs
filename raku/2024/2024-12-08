[00:18] <discord-raku-bot> <aruniecrisps> ah thank you!

[00:32] *** Manifest0 left
[00:47] *** yewscion joined
[00:50] <lizmat> \   (aka unspace) predates being allowed to have whitespace between the invocant and .method

[00:52] <lizmat> before that was allowed, the unspace was the only way to make functional style programming go across a single line

[00:52] <lizmat> or to line method calls up across lines

[00:57] *** yewscion left
[01:02] <guifa> lizmat++ thanks for history lesson

[01:20] *** Manifest0 joined
[01:38] *** MyNetAz left
[01:50] <discord-raku-bot> <.landyacht.> is there an easy way to copy a SetHash?

[01:51] <discord-raku-bot> <.landyacht.> oh nevermind, .new works

[01:51] <discord-raku-bot> <.landyacht.> I assumed SetHash(...) and SetHash.new(...) would have the same behavior

[01:52] <discord-raku-bot> <.landyacht.> is copy does not work as expected for SetHash :P

[01:52] *** yewscion joined
[01:53] *** MyNetAz joined
[01:58] *** yewscion left
[02:09] *** Manifest0 left
[02:21] *** hulk joined
[02:22] *** kylese left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:37] *** guifa left
[03:44] *** Aedil joined
[03:55] *** yewscion joined
[04:00] *** yewscion left
[04:24] *** yewscion joined
[04:32] *** yewscion left
[04:42] <discord-raku-bot> <.landyacht.> no, nevermind - the way it prints is just deceptive

[04:42] <discord-raku-bot> <.landyacht.> SetHash.new($other-set) creates a set-of-sets

[05:00] *** MyNetAz left
[05:06] *** yewscion joined
[05:15] *** yewscion left
[05:15] *** MyNetAz joined
[05:17] *** MyNetAz left
[05:26] *** yewscion joined
[05:31] *** yewscion left
[05:32] *** MyNetAz joined
[05:57] *** kjp left
[05:58] *** kjp joined
[05:59] *** kjp left
[05:59] *** kjp joined
[09:31] *** yewscion joined
[09:35] *** yewscion left
[09:39] *** Manifest0 joined
[09:40] *** sena_kun joined
[10:20] *** yewscion joined
[10:26] *** yewscion left
[10:47] *** yewscion joined
[10:52] *** yewscion left
[11:42] *** Aedil left
[11:46] <ab5tract> m: my $uno = <a b c>.SetHash; my $dos = SetHash.new: |$uno.keys; $dos<a>:delete; dd $uno, $dos

[11:46] <camelia> rakudo-moar e4e226943: OUTPUT: «$uno = SetHash.new("b","c","a")␤$dos = SetHash.new("c","b")␤»

[11:52] *** yewscion joined
[11:54] <ab5tract> I agree, it's a bit confusing

[11:58] *** yewscion left
[11:59] <discord-raku-bot> <nahita3882> hi, pblock is "parametrized" block, "xblock" is "expression followed by a pblock"; for example, in for @vals -> $v { ... }, the "@vals" is the expression, the -> $v { ... } is the pblock part. In fact, it's a pblock(0) -- that number 0 can be 3 things (https://github.com/rakudo/rakudo/blob/main/src/Perl6/Grammar.nqp#L999-L1002); 0 means no $_ will be installed (e.g., above because $v is there),  and in the

[11:59] <discord-raku-bot> "forgiven"s case, I'm manually inserting a $_ := ... in front of the block, so I thought it would make sense to have pblock(0) to relieve of any extra Action to happen for an implicit topic instantaniation. However, I'm also overriding the corresponding action, so it probably doesn't matter if it was pblock(1) or 2... Because the "parent" action of pblock (in Actions.nqp) is not called. Still, it signals something i guess when

[11:59] <discord-raku-bot> not spreading confusion :p

[12:17] *** sena_kun left
[12:20] *** finanalyst joined
[12:39] *** yewscion joined
[12:40] *** Sgeo left
[12:44] *** yewscion left
[13:19] *** guifa joined
[13:36] <ab5tract> first beta of the Raku IntelliJ plugin has been pushed. Not terribly exciting in that it is just a name change, but there may hopefully be one or two bug squishes in there as well

[13:38] <ab5tract> guifa: a major change is that now the version displayed in the settings panel reflects the current beta. I also set it to not require restarts on installation, with a glimmer of hope that this may somehow influence the "coming back to life after crashes" behavior you mentioned

[13:41] <lizmat> https://github.com/slid1amo2n3e4/mv2d/issues/1

[13:45] <guifa> ab5tract noted!  will jump into this at some point this week

[13:45] <guifa> Today is crunch time :( project paper and exam all due today lol

[13:46] <ab5tract> You got this!

[13:46] <ab5tract> Enjoy the other side of the finish line once you get there :)

[13:47] * guifa is too old too be doing freshman-college-style cramming.  Likely literally 2x too old ha

[14:11] <discord-raku-bot> <antononcube> @ab5tract I see only "v2.0-beta.31" from 2 weeks agon on the GitHub page.

[14:12] <discord-raku-bot> <antononcube> If that is newest comma-2.0 version then I have it. I am just not sure "first beta" means.

[14:12] <ab5tract> antononcube Thanks for pointing it out. I have to adjust the CI pipeline: https://github.com/ab5tract/comma-plugin/releases/tag/2024.3-beta.1

[14:13] <ab5tract> The plugin has been renamed

[14:13] <discord-raku-bot> <antononcube> Ok.

[14:14] <ab5tract> Though I expect we may all be saying Comma colloquially anyway

[14:14] <discord-raku-bot> <antononcube> Ok

[14:42] <discord-raku-bot> <antononcube> @ab5tract When I try to install the new Comma plugin I get the message:  "Fail to load plugin descriptor from file comma-plugin-2024.3-beta.1.zip"

[14:42] <ab5tract> Interesting. I'll look into this now

[15:05] <ab5tract> antononcube: This ought to be better https://github.com/ab5tract/comma-plugin/releases/tag/2024.3-beta.1

[15:05] <lizmat> weekly: https://github.com/ab5tract/comma-plugin/releases/tag/2024.3-beta.1

[15:05] <notable6> lizmat, Noted! (weekly)

[15:07] <discord-raku-bot> <antononcube> @ab5tract Yes, it works!

[15:07] <ab5tract> \o/

[15:12] *** Aedil joined
[15:37] *** guifa left
[15:38] *** guifa joined
[16:12] *** finanalyst left
[16:52] *** yewscion joined
[16:58] *** yewscion left
[17:05] *** Sgeo joined
[17:47] *** guifa left
[18:00] *** yewscion joined
[18:05] *** yewscion left
[18:06] *** yewscion joined
[18:14] *** yewscion left
[18:38] *** sena_kun joined
[18:56] <ky> is there a cute way to "zip join" two lists? <1 2 3> Z~ <a b> becomes <1a 2b> but I want <1 a 2 b 3>. this could be like join, but where the argument is a list: <1 2 3>.join: <a b> but join does not work that way

[18:58] <discord-raku-bot> <nahita3882> maybe flat roundrobin $a, $b?

[19:00] <ky> that'll work

[19:03] *** gfldex left
[19:16] *** yewscion joined
[19:27] *** yewscion left
[19:46] <avuserow> m: say <1 2 3> <<,>> <a b>

[19:46] <camelia> rakudo-moar 4082d2c70: OUTPUT: «((1 a) (2 b) (3 a))␤»

[19:46] <avuserow> ky: ^ like that?

[19:47] <lizmat> no, that repeats the rhs

[19:47] <lizmat> is  my understanding  :-)

[19:47] <avuserow> oh, yes, you are correct :)

[19:47] <avuserow> so many ways to combine lists of unequal sizes

[19:50] <discord-raku-bot> <librasteve> flat roundrobin |$a, |$b  <== need to slip the args if they are in scalar container ;-)

[19:51] <discord-raku-bot> <librasteve> flat roundrobin @a, @b <=== much better to use @ when you have many things imo

[19:58] <timo> i assume @$a or $a.list would also work

[20:03] <discord-raku-bot> <nahita3882> yes also $a[], $a[*], $a{}, $a<>, $a.self

[20:03] <discord-raku-bot> <nahita3882> and you can bind to begin with no container (attempt to justify $ :p)

[20:10] *** leah2 left
[20:23] *** leah2 joined
[20:25] *** yewscion joined
[20:30] *** yewscion left
[20:39] *** Aedil left
[21:15] *** hvxgr left
[21:16] *** hvxgr joined
[21:35] *** inspork left
[21:37] *** inspork joined
[23:17] *** sena_kun left
[23:29] *** inspork left
[23:31] *** inspork joined
