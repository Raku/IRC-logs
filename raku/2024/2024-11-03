[00:06] *** abraxxa-home left
[00:09] *** sena_kun left
[01:01] *** guifa left
[01:01] *** guifa joined
[01:26] *** human-blip joined
[01:44] *** Manifest0 left
[02:57] *** hulk joined
[02:57] *** kylese left
[03:15] *** hulk left
[03:15] *** kylese joined
[04:34] *** human-blip left
[04:48] *** stanrifkin_ joined
[04:51] *** stanrifkin left
[06:05] <SmokeMachine> m: use experimental :rakuast; say RakuAST::VarDeclaration ~~ Any

[06:05] <camelia> rakudo-moar ba526e30d: OUTPUT: «===SORRY!===␤Cannot find method 'archetypes' on object of type (null)␤»

[06:06] <SmokeMachine> m: use experimental :rakuast; say RakuAST::VarDeclaration.^mro

[06:06] <camelia> rakudo-moar ba526e30d: OUTPUT: «Method KnowHOW.mro not found␤  in block <unit> at <tmp> line 1␤␤»

[06:13] <SmokeMachine> https://github.com/rakudo/rakudo/issues/5678

[06:24] *** guifa left
[06:31] <SmokeMachine> now it's a bit easier to understand what ASTQuery is doing: https://github.com/FCO/ASTQuery?tab=readme-ov-file#debug

[07:07] *** LainExperiments joined
[07:13] *** Aedil joined
[07:47] *** silug left
[08:06] *** silug joined
[09:35] *** lizmat_ joined
[09:38] *** lizmat left
[09:42] *** lizmat_ left
[09:42] *** lizmat joined
[09:47] *** sena_kun joined
[10:00] <timo> i'm not sure i can make the knohows turn into fully realized objects with metaobjects and whatnot, but i could probably build some nqp::syscall(blah, $theobj) that let you introspect knowhow-repred objects

[10:24] <lizmat> the problem was that RakuAST::VarDeclaration was a package, not a class

[10:37] *** oodani left
[10:39] *** oodani joined
[11:19] *** LainExperiments left
[11:19] *** LainExperiments joined
[11:29] *** Manifest0 joined
[11:41] *** Sgeo left
[11:45] <lizmat> weekly: https://github.com/renormalist/raku-tools-bash-completion

[11:45] <notable6> lizmat, Noted! (weekly)

[12:01] *** leah2 left
[12:02] *** leah2 joined
[12:23] <SmokeMachine> m: use experimental :rakuast; say RakuAST::VarDeclaration::Simple ~~ Any

[12:23] <camelia> rakudo-moar d1c99054a: OUTPUT: «True␤»

[12:26] <SmokeMachine> Sorry, my fault

[12:30] <lizmat> what is?

[12:30] <lizmat> m: use experimental :rakuast; say RakuAST::VarDeclaration ~~ Any

[12:30] <camelia> rakudo-moar d1c99054a: OUTPUT: «True␤»

[12:30] <SmokeMachine> The VarDeclaration confusion…

[12:31] <SmokeMachine> Oh! I misunderstood your message then!

[12:33] <lizmat> m: class A::B { }; dd A.^mro

[12:33] <camelia> rakudo-moar d1c99054a: OUTPUT: «No such method 'mro' for invocant of type␤'Perl6::Metamodel::PackageHOW'␤  in block <unit> at <tmp> line 1␤␤»

[12:33] <lizmat> which is a correct message I think

[12:33] <lizmat> the other one was caused by some bootstrap issues, which I worked around by making it a class

[12:34] <SmokeMachine> Yes, makes sense. Thanks

[12:39] <lizmat> yw

[12:58] <lizmat> afk&

[13:07] *** guifa joined
[13:52] *** leah2 left
[14:00] *** LainExperiments left
[14:35] *** leah2 joined
[14:54] *** stanrifkin_ left
[15:20] *** abraxxa-home joined
[15:21] *** abraxxa-home left
[15:28] *** abraxxa-home joined
[16:20] *** stanrifkin joined
[16:58] *** xinming left
[16:58] *** xinming joined
[17:18] *** constxd left
[17:21] *** MasterDuke left
[17:28] *** constxd joined
[18:09] *** swaggboi left
[18:23] *** swaggboi joined
[18:30] *** swaggboi left
[18:32] <SmokeMachine> lizmat: have I told you about this issue? https://github.com/lizmat/rak/issues/5

[18:32] <SmokeMachine> I’m not sure if that should be there or in other repo…

[18:44] *** swaggboi joined
[19:32] *** LainExperiments joined
[20:03] <tbrowder> ok, got 'rak' doing what i want on debian. i used this command: "rak --find --is-readable --paths=/usr/share/fonts,/User,~/Library/Fonts --extensions=pfb,woff,otf,ttf --absolute" 

[20:04] <tbrowder> that should also work on mac. i would appreciate a mac user trying it and see if it finds any fonts on your host

[20:04] <tbrowder> the advantage to me is is makes using a Build script easier on multiple OSs

[20:15] <[Coke]> I think you might mean /Users

[20:16] *** LainExperiments left
[20:25] <tbrowder> ok, i’ll change that. thanks!

[20:27] <tbrowder> did it find any fonts?

[20:28] *** Sgeo joined
[20:34] <[Coke]> ** Stopped showing results after 1000 matches **

[20:35] <SmokeMachine> tbrowder: It returned many lines here…

[20:36] <SmokeMachine> (with /Users)

[20:42] <tbrowder> SmokeMachine: thank you! and thanks to lizmat for an awesome multi-os tool!

[20:44] <tbrowder> talk about a giant Swiss raku knife…what a swell Christmas present

[22:06] <patrickb> I have the following token in a grammar: `token routine { <!ww> @routines <!ww> }` with @routines having 960 entries. That token is really slow. Of the 70 seconds it takes to parse 144 lines of input more than the half is this token alone. Is this a stupid way of searching for a fixed set of tokens? How could I do better?

[22:11] *** abraxxa-home left
[22:14] <[Coke]> is <?wb> faster than <!ww> ?

[22:15] <[Coke]> and or do you want     << @routines >> ?

[22:15] <[Coke]> wondering if either of those are faster 

[22:15] <guifa> I think technically when you do @routines it treats it as 

[22:16] <guifa> @routine[0] | @routine[1] | @routine[2] |...

[22:16] <guifa> so then LTM kicks in so it has to check all of them

[22:19] *** bdju left
[22:20] *** stanrifkin left
[22:21] <patrickb> guifa: How would I get around that?

[22:21] <patrickb> I don't need LTM here.

[22:45] *** bdju joined
[23:02] <ab5tract> There should be some way to deactivate that…

[23:12] <lizmat> {}

[23:12] <ab5tract> patrickb: It’s not exactly elegant, but maybe using @routines.join(“ || “) in an EVAL’d regex might work?

[23:13] <lizmat> afaik, an empty code block in a regex will stop LTM

[23:15] <lizmat> afk again

[23:15] <ab5tract> That seems kind of random :)

[23:15] <tbrowder> and [Coke] also thanks for checking

[23:16] <ab5tract> Feels like an adverb would be more discoverable

[23:39] *** sena_kun left
