[01:07] *** hulk joined
[01:08] *** kylese left
[01:34] *** manu_ joined
[01:34] *** manu_ is now known as eseyman

[02:15] *** hulk left
[02:15] *** kylese joined
[02:50] *** xinming_ left
[02:52] *** xinming_ joined
[02:56] *** xinming_ left
[02:59] *** xinming_ joined
[03:05] *** xinming_ left
[04:08] *** Aedil joined
[05:30] *** Sgeo left
[06:22] *** merp joined
[06:40] *** jjido joined
[07:14] *** jjido left
[07:29] *** Geth joined
[07:30] *** lizmat_ left
[07:30] *** lizmat joined
[07:59] *** bdju left
[07:59] *** bdju joined
[08:00] *** dakkar joined
[08:00] *** sena_kun joined
[09:29] *** sena_kun left
[09:45] *** librasteve_ joined
[09:52] <discord-raku-bot> <librasteve> https://github.com/ab5tract/comma-plugin/issues/2   <== looks similar to anton issue ... I'm on Ultimate btw (details in Issue)

[10:05] <ab5tract> librasteve: thanks for the debug output. Can you confirm that the ide was restarted after installing the plugin? And have you tried “new from existing sources”?

[10:16] <ab5tract> ok, good news is that I'm able to recreate this locally

[10:16] <ab5tract> it doesn't seem to happen to each existing comma project that I have, so it's a bit of a flapper

[10:31] <discord-raku-bot> <librasteve> IDE was restarted after the plugin install; I did not try new from existing sources

[10:32] <discord-raku-bot> <librasteve> this is my "small project" for test https://github.com/librasteve/raku-Decimal

[10:32] <discord-raku-bot> <librasteve> I have also seen issues with larger projects, thought it would be best to start with a very small one

[10:33] <discord-raku-bot> <librasteve> [Coke]: my local 3d printer seems to have folded ... probably I will try a countrywide one next

[10:37] <ab5tract> librasteve: cheers! and thanks for the details. I think I see what the issue is, should be resolvable by added a migration step to the processor responsible for opening projects

[10:38] <ab5tract> I *think* the distingushing factor is whether or not a packagemanager (zef, pakku) was setup for the project or not. this would explain why it never happened when I opened my pre-existing Comma project for rakudo.git

[10:50] <discord-raku-bot> <librasteve> new from source works for this project

[10:52] <discord-raku-bot> <librasteve> in general I never bother configuring zef for my projects - I did try opening this project in CommaComplete, adding zef and then opening in Intellij with the new plugin - that failed

[10:52] <tbrowder> .tell [Coke] i removed my comment from raku.land

[10:52] <tellable6> tbrowder, I'll pass your message to [Coke]

[10:53] <ab5tract> it might have happened somewhat transparently, for example when setting up META6.json

[10:54] <discord-raku-bot> <librasteve> one slight nit is that very little of my raku source appears to be syntax highlit eg compared to the CommaIDE ... I did see some kind of mapping setup in the settings, so maybe that something that can be tweaked later when we are up and running (or maybe it's a symptom of something not loading that can help your diagnosis)

[10:54] <ab5tract> right now it's only a hunch, but it's also the only setting in `.idea` that makes much sense at the moment

[10:55] <librasteve_> this is what I get with the new plugin in Intellij (eg new from source) https://usercontent.irccloud-cdn.com/file/ROOcznOJ/Screenshot+2024-09-16+at+11.55.07.png

[10:55] <ab5tract> yeah, I've notice that too. but when fiddling with the color scheme settings, the few things I've tried appear to imply that the parser is recognizing everything

[10:56] <librasteve_> one step at a time ;-)

[10:56] <ab5tract> it's probably that the actual tmPlugin files weren't adjusted during the PERL6 -> RAKU migration

[10:56] <tbrowder> .seen finaa

[10:57] <tellable6> tbrowder, I haven't seen finaa around, did you mean fling?

[10:58] <tbrowder> .seen finanalyst

[10:58] <tellable6> tbrowder, I saw finanalyst 2024-09-07T09:53:57Z in #raku-dev: <finanalyst> [Coke] Sorry for delay. re 'use v6.e.PREVIEW' and 'use experimental'. Are they not the same thing?

[12:09] *** jjido joined
[12:26] <[Coke]> tbrowder: thanks. Don't forget to open your requests as tickets so they get tracked too!

[12:26] <tellable6> 2024-09-16T10:52:30Z #raku <tbrowder> [Coke] i removed my comment from raku.land

[12:53] *** jjido left
[15:35] *** librasteve_ left
[16:23] <discord-raku-bot> <antononcube> @ab5tract I just cloned the "comma-plugin" repostory and tried to build it. I get the error "cannot find symbol" for: > import org.raku.comma.pm.IgnoreObsoletePackageManagerSettings;

[16:24] <ab5tract> fixing

[16:25] <discord-raku-bot> <antononcube> Ok, I might have cloned the repository while you are in the middle of something...

[16:27] <ab5tract> it's my fault for pushing a bad commit.

[16:27] <lizmat> PSA: the Rakudo Weekly News will hit the Net tomorrow

[16:28] <discord-raku-bot> <scullucs> Thanks for maintaining it lizmat.

[16:29] <discord-raku-bot> <antononcube> @lizmat Hmmm... then I might make a new video today..

[16:31] <ab5tract> antononcube: it should be fixed. along with properly setting the SDK from the project creation stage

[16:31] <ab5tract> please ensure that you use `New Project from Existing Sources...` when opening Comma projects

[16:38] *** dakkar left
[16:41] <discord-raku-bot> <antononcube> @ab5stract I updated the repository, made the built it, installed the plugin, made a new Raku module with the plugin, and after closing it and/or quiting IntelliJ I was able to open and work with the new repository again.

[16:43] <discord-raku-bot> <antononcube> I will try previously made projects in the next hour...

[17:01] <ab5tract> Cheers

[18:10] *** sena_kun joined
[18:53] <ab5tract> librasteve: syntax highlighting should be fixed :)

[18:53] <tellable6> ab5tract, I'll pass your message to librasteve_

[19:10] <discord-raku-bot> <antononcube> @ab5st

[19:17] <ab5tract> antononcube: feeling truncated? :)

[19:23] <discord-raku-bot> <antononcube> There is Discord user  id @abc3354  which Discord keeps replacing @ab5tract with.

[19:24] <ab5tract> `@ab5st` is what I see, which is neither of those

[19:25] <ab5tract> anyway, you don't `@` people on IRC, referencing their names is enough

[19:26] <ab5tract> let me know if I can help you with something

[19:28] *** swaggboi left
[19:30] *** Aedil left
[19:30] *** vrurg joined
[19:30] *** teatwo joined
[19:32] <SmokeMachine> I can’t believe I’m the only one using and liking declarator docs… Red even uses them to add comments to tables, columns and queries…

[19:33] *** dutchie_ joined
[19:33] *** simcop2387_ joined
[19:33] *** bloatable6__ joined
[19:34] *** tellable6__ joined
[19:34] *** greppable6__ joined
[19:35] *** m6locks joined
[19:35] *** hvxgr joined
[19:35] *** andinus2 joined
[19:35] *** xinming_ joined
[19:35] *** avar joined
[19:36] *** tailgate joined
[19:37] *** swaggboi joined
[19:38] <ab5tract> SmokeMachine: you aren't the only one. 

[19:38] <discord-raku-bot> <antononcube> @SmokeMachine "declarator docs" or "declarator blocks" ? I use the latter.

[19:38] *** dgl joined
[19:39] <SmokeMachine> antononcube: docs

[19:39] <SmokeMachine> ab5tract: I thought most of us would use that…

[19:40] *** xinming left
[19:40] *** teatime left
[19:40] *** dg left
[19:40] *** bloatable6 left
[19:40] *** andinus left
[19:40] *** hvxgr_ left
[19:40] *** avarab left
[19:40] *** facetious left
[19:40] *** m6locks_ left
[19:40] *** greppable6 left
[19:40] *** simcop2387 left
[19:40] *** vrurg_ left
[19:40] *** tellable6 left
[19:40] *** dutchie left
[19:40] *** simcop2387_ is now known as simcop2387

[19:42] <discord-raku-bot> <antononcube> @SmokeMachine Hmm... I am not familiar with "declarator docs" -- docs.raku.org talks very little about them, too.

[19:43] <SmokeMachine> antononcube: I may have misnamed it… but I mean #| and #=

[19:43] <ab5tract> they are hard to find there, unforunately. raiph introduced a great name for them: "decks"

[19:44] <ab5tract> and also a decent (imo) new name for RakuDoc: "docks"

[19:44] <discord-raku-bot> <antononcube> @SmokeMachine Ok. Those a "declarator blocks" -- I put them in 80+% of my code.

[19:44] <ab5tract> SmokeMachine: "declaration docs" is the name used in the specs, so you got it right

[19:49] <ab5tract> I don't personally use them, but I see their utility. But depending on how much difficulty they cause in terms of safety and implementation complexity, I'm willing to propose sacrificing their current status as "these can go anywhere! on (almost) anything!"

[19:53] <SmokeMachine> I think removing then (I know that’s not what you said) we would lost a lot… but where, do you think, they shouldn’t go to make it easier to implement?

[19:57] *** jjido joined
[20:03] <ab5tract> AFAICT, the conversation has moved on from removing them

[20:04] <ab5tract> Re: where they shouldn't go, right now I personally feel that they should be constrained to routine declarations (`#|`) and paramater declarations (`#=`)

[20:05] <patrickb> And classes / methods?

[20:05] <ab5tract> but if the implementation hurdles are low enough, allowing them on arbitrary variables also seems fine

[20:05] <patrickb> s/methods/modules/

[20:06] <ab5tract> patrickb: if needed. but I don't like the multi-line variant, and I don't think packages should can generally be described in a single line

[20:06] <ab5tract> *usefully described

[20:06] <SmokeMachine> I think that’s very important to classes, attributes and parameters…

[20:07] <SmokeMachine> Sorry, you said parameters…

[20:11] <ab5tract> My position is that it's all relative to implementation complexity

[20:11] <ab5tract> if it's easy enough to put almost everywhere, let's go!

[20:12] <ab5tract> this was lizmat++'s response to my proposal to constrain to routines + parameters: https://github.com/Raku/problem-solving/issues/438#issuecomment-2351623849

[20:14] <ab5tract> since she's the one being tormented by the implementation, I think that's a fair place to start

[20:25] <ab5tract> the discussion moves on to traits after that, but that might be a bit too little implementor-torment traded off for user-torment in my opnion

[20:26] <ab5tract> Maybe there is a way to bridge the gap so that the grammar can interpret `#|` as applying a doc trait on the routine below it

[20:34] *** [Coke]__ left
[20:53] *** [Coke]_ joined
[20:54] <[Coke]> stricter++

[21:06] *** [Coke]_ left
[21:17] *** dutchie_ is now known as dutchie

[21:19] *** [Coke]_ joined
[21:29] *** [Coke]_ left
[21:32] <Geth> ¦ docker/update_apt_packages_in_build: c7ac771228 | timo++ (committed using GitHub Web editor) | 2024.08/bookworm/Dockerfile

[21:32] <Geth> ¦ docker/update_apt_packages_in_build: add "apt-get upgrade" to get security updates

[21:32] <Geth> ¦ docker/update_apt_packages_in_build: 

[21:32] <Geth> ¦ docker/update_apt_packages_in_build: docker is showing a couple high-severity security issues, this may help.

[21:32] <Geth> ¦ docker/update_apt_packages_in_build: review: https://github.com/Raku/docker/commit/c7ac771228

[21:32] <Geth> ¦ docker: timo++ created pull request #68: add "apt-get upgrade" to get security updates

[21:32] <Geth> ¦ docker: review: https://github.com/Raku/docker/pull/68

[21:40] *** sena_kun left
[22:01] *** [Coke]_ joined
[22:02] <Geth> ¦ raku.org: coke assigned to ab5tract Issue Update description of comma ide from the /whatever/ page https://github.com/Raku/raku.org/issues/223

[22:03] <Geth> ¦ docker/deprecation_of_set_output: f097442d06 | timo++ (committed using GitHub Web editor) | .github/workflows/test-docker-image.yml

[22:03] <Geth> ¦ docker/deprecation_of_set_output: Use `$GITHUB_OUTPUT` instead of `::set-output`

[22:03] <Geth> ¦ docker/deprecation_of_set_output: 

[22:03] <Geth> ¦ docker/deprecation_of_set_output: https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/

[22:03] <Geth> ¦ docker/deprecation_of_set_output: 

[22:03] <Geth> ¦ docker/deprecation_of_set_output: The deprecation has been postponed, but that doesn't mean it won't come ...

[22:03] <Geth> ¦ docker/deprecation_of_set_output: review: https://github.com/Raku/docker/commit/f097442d06

[22:03] <Geth> ¦ docker: timo++ created pull request #69: Use `$GITHUB_OUTPUT` instead of `::set-output`

[22:03] <Geth> ¦ docker: review: https://github.com/Raku/docker/pull/69

[22:15] <[Coke]> timo++ very busy

[22:15] <timo> just distracted by shinies

[22:16] <timo> i think it turns out the "apt-get upgrade" suggestion isn't so sensible after all. there's just a single package that can be updated to fix vulnerabilities and that's git

[22:17] <timo> i saw "oh a bunch of vulns" and thought "must be out of date" but that was not so

[22:17] <timo> stuff seen in the docker build log: Term::termios uses Distribution::Resource's Str method and is supposed to use %?RESOURCES<key> instead (Term::termios line 145)

[22:18] <timo> Config::Parser::jaml is failing some tests, 01-read.t uses nil in string context on lines 15 and 16, and "ensure configurations are merged" fails with an empty result instead of the expected

[22:19] <timo> Config::Parser::json also fails a bunch of tests with "got: (Nil)" (i didn't know we stringify it like that)

[22:19] <timo> NativeHelpers::Blob has a .pm module

[22:20] <timo> the docker image doesn't contain any mysql or pg libraries but maybe it should?

[22:21] <timo> LibXml is trying to compile stuff against libxml/tree.h which i imagine isn't being installed as a build dependency either

[22:21] <timo> the OpenSSL package complains about a marked lack of libssl.so

[22:22] <timo> same for IO::Socket::SSL and LWP::Simple

[22:35] <Geth> ¦ docker: f097442d06 | timo++ (committed using GitHub Web editor) | .github/workflows/test-docker-image.yml

[22:35] <Geth> ¦ docker: Use `$GITHUB_OUTPUT` instead of `::set-output`

[22:35] <Geth> ¦ docker: 

[22:35] <Geth> ¦ docker: https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/

[22:35] <Geth> ¦ docker: 

[22:35] <Geth> ¦ docker: The deprecation has been postponed, but that doesn't mean it won't come ...

[22:35] <Geth> ¦ docker: review: https://github.com/Raku/docker/commit/f097442d06

[22:35] <Geth> ¦ docker: c441dda3c7 | timo++ (committed using GitHub Web editor) | .github/workflows/test-docker-image.yml

[22:35] <Geth> ¦ docker: Merge pull request #69 from Raku/deprecation_of_set_output

[22:35] <Geth> ¦ docker: 

[22:35] <Geth> ¦ docker: Use `$GITHUB_OUTPUT` instead of `::set-output`

[22:35] <Geth> ¦ docker: review: https://github.com/Raku/docker/commit/c441dda3c7

[22:42] *** jjido left
[22:42] *** xinming joined
[23:03] *** Sgeo joined
