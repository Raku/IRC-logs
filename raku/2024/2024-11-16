[01:39] *** euandreh left
[01:42] *** euandreh joined
[01:48] *** Manifest0 left
[02:43] *** kylese left
[02:43] *** hulk joined
[02:47] *** stanrifkin joined
[03:15] *** hulk left
[03:15] *** kylese joined
[03:30] *** kylese left
[03:34] *** kylese joined
[03:42] *** swrogers joined
[03:57] *** zetaaaa left
[04:33] *** stanrifkin_ joined
[04:33] *** hellwolf left
[04:33] *** Aedil joined
[04:35] *** stanrifkin left
[04:44] *** Aedil left
[04:50] *** Aedil joined
[09:18] *** stanrifkin_ left
[09:50] *** sena_kun joined
[09:59] *** finanalyst joined
[10:15] *** finanalyst left
[10:19] *** finanalyst joined
[11:16] *** finanalyst left
[11:21] *** bartolin left
[11:41] *** MoC joined
[11:45] <Geth> ¬¶ ecosystem/main: a827606742 | (Elizabeth Mattijsen)++ | META.list

[11:45] <Geth> ¬¶ ecosystem/main: Remove samcv's modules, they are being moved to zef

[11:45] <Geth> ¬¶ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/a827606742

[12:01] *** Sgeo left
[12:36] *** hellwolf joined
[13:29] *** hellwolf left
[13:36] *** bartolin joined
[13:42] <botato> timo: thanks, looks like it's already fixed! the moarvm error is LTA but looks like there's already an open issue to improve that too

[13:47] *** swrogers left
[13:50] <discord-raku-bot> <librasteve> üç¨

[14:05] <discord-raku-bot> <c.a53> @ab5tract I've just installed Comma v2.0-beta.27 and the multi-line REPL seems to work indeed. Thanks for the fix :).

[14:07] <timo> you were wondering if raku's "start" is like green threads or not; we do have "await" that puts an item back into the thread pool's queue of work, but we also have both sync and async IO and it looks like HTTP::UserAgent uses sync IO so it will actually block real threads, and the thread pool scheduler will create quite a few real OS threads; you can turn on RAKUDO_SCHEDULER_DEBUG in the environment

[14:07] <timo> to see what it's thinking, and optionally RAKUDO_SCHEDULER_DEBUG_STATUS for a lot more messages

[14:11] <timo> we also offer the Thread class which lets you make a full OS thread for lower-level needs, and you can create multiple ThreadPoolScheduler instances with different min and max threads variables, plus CurrentThreadScheduler exists for very specific use cases, and making a custom Scheduler is also possible

[14:28] <botato> thanks, are those debugging environment variables documented? searching I find it in some irc logs and blog posts but no official documentation

[14:29] <botato> it looks like there's good facilities for debugging threaded code, the moarvm debugger supports listing all threads, threads are named, you can view their stacktraces etc

[14:30] <timo> it's quite possible that there's no official documentation for these vars. all i could find is the changelog mentioning the _STATUS one

[14:33] <timo> the Comma IDE plugin has support for the debugger as well. the CLI debugger is not very ergonomic, but lizmat and me just a few weeks ago started looking at those pieces again, and patrickb is also working towards a new TUI debugger

[14:34] <timo> there's some bits and pieces for using GDB with a process that has moarvm in it, but it's all kind of spread out and undocumented, so you really have to already know what exists and how to use it

[14:35] <timo> like the MVM_dump_backtrace, MVM_dump_bytecode, MVM_dump_p6opaque functions you can invoke with gdb's "print" or "call" commands

[14:37] <botato> for async IO like async networking with Cro are there facilities for debugging it? now everything is in promises and I don't find a way to list all pending promises, get backtraces, etc? ie ruby Async::Debug will list all fibers, their stacktraces, you can open a repl in local context of some fiber. I think I remember reading raku/perl6 has green threads, but it seems that's not the case? ie there is

[14:37] <botato> thread pool of system threads, and async stuff is based on promises, not green/lightweight threads with their own stack? though I think both is more or less equivalent, ie bluebird promises library for javascript has debug option of longStackTraces that adds extra info to promises to give stacktraces 

[14:47] <timo> when you "await", we take a continuation, so our tasks ("green threads") do have their own stacks

[14:49] <timo> there is currently nothing built in to the App::MoarVM::Debugger that gives you a list of all the tasks that exist in a given scheduler for example. you'd have to manually dig through the objects, and that's no fun, of course

[14:49] <timo> I definitely want that to exist, though

[14:52] <timo> did you see Log::Timeline? https://github.com/jnthn/raku-log-timeline

[14:52] <timo> the only viewer i know of is in Comma

[14:53] <timo> but it does specifically point out that it shows the start and end times of "start" blocks as well as await statements, and stuff

[14:53] <timo> but logging and realtime display of a timeline is not the same thing as a debugger

[14:59] <timo> https://github.com/jnthn/raku-log-timeline/blob/master/lib/Log/Timeline/Raku/Setup.rakumod#L179-L211 that isn't terribly complicated

[15:02] *** abraxxa-home joined
[15:19] <discord-raku-bot> <librasteve> o/

[15:20] *** Manifest0 joined
[15:34] *** hellwolf joined
[15:35] *** hellwolf left
[15:36] *** hellwolf joined
[15:44] <discord-raku-bot> <librasteve> okaaay - I have been jealous of the Fragments feature in other web template engines - as described here https://htmx.org/essays/template-fragments/

[15:45] <discord-raku-bot> <librasteve> sooo - I went and made this feature in cro-webapp and have just submitted a PR there and at cro-website for the docs

[15:47] <discord-raku-bot> <librasteve> hopefully there is general support for this as a new Cro feature and if it is accepted it will show that Cro (like Comma) is definitely not a dead parrot

[15:47] <discord-raku-bot> <librasteve> (questions / feedback welcome!)

[15:53] *** hellwolf left
[15:54] *** hellwolf joined
[15:57] <timo> ah, that's neat

[16:09] *** Aedil left
[16:09] *** bdju left
[16:09] *** summerisle_ left
[16:09] *** gabiruh left
[16:09] *** peder left
[16:09] *** Opus left
[16:09] *** GreaseMonkey left
[16:09] *** charsbar left
[16:09] <botato> interesting, thanks

[16:15] <timo> so where would a good place be to put documentation about the various environment variables that can influence rakudo and moarvm behaviour?

[16:15] *** Aedil joined
[16:15] *** bdju joined
[16:15] *** charsbar joined
[16:15] *** GreaseMonkey joined
[16:15] *** Opus joined
[16:15] *** peder joined
[16:15] *** gabiruh joined
[16:15] *** summerisle_ joined
[16:16] <timo> https://github.com/rakudo/rakudo/wiki/dev-env-vars#moarvm this is linked from rakudo/docs/running.pod

[16:21] *** rajj joined
[16:21] *** euandreh left
[16:21] *** ky3 left
[16:21] *** dpk left
[16:21] *** camelia left
[16:21] *** mtj left
[16:21] *** Altreus left
[16:21] *** thaewrapt left
[16:21] *** xinming left
[16:21] *** coleman left
[16:21] *** human-blip left
[16:21] *** bisectable6 left
[16:21] *** destroycomputer- left
[16:21] *** toddr left
[16:21] *** ingy left
[16:21] *** zostay left
[16:21] *** JRaspass left
[16:21] *** gugod left
[16:21] *** slu left
[16:21] *** dmvrtx left
[16:21] *** sjn left
[16:21] *** cm left
[16:21] *** renormalist left
[16:21] *** simcop2387 left
[16:21] *** dano left
[16:21] *** tinita left
[16:21] *** jast left
[16:21] *** swaggboi left
[16:21] *** thowe left
[16:21] *** avar left
[16:21] *** perlbot left
[16:21] *** andinus left
[16:21] *** hudo__ left
[16:21] *** dustinm` left
[16:21] *** gfldex left
[16:21] *** ilogger2_ left
[16:21] *** tbrowder left
[16:21] *** tonyo left
[16:21] *** drakonis left
[16:21] *** MoC left
[16:21] *** kylese left
[16:21] *** tjr left
[16:21] *** kaskal left
[16:21] *** greppable6 left
[16:21] *** unicodable6 left
[16:21] *** bloatable6 left
[16:21] *** sourceable6 left
[16:21] *** samebchase left
[16:21] *** tellable6 left
[16:21] *** coverable6 left
[16:21] *** jmcgnh left
[16:21] *** corwin left
[16:21] *** mst left
[16:21] *** broquaint left
[16:21] *** popebob left
[16:21] *** lucs left
[16:22] <timo> i guess that already has a good portion of all the env vars documented

[16:22] <timo> not the github wiki page, i mean the running.pod document

[16:22] <timo> https://github.com/rakudo/rakudo/blob/main/docs/running.pod

[16:22] <timo> but that's kind of out-of-the-way still. it should perhaps be migrated or at least copied over to docs.raku.org, even though it's about rakudo and not necessarily about raku

[16:22] <timo> https://docs.raku.org/programs/03-environment-variables

[16:24] *** Sevalecan left
[16:24] *** vrurg left
[16:24] *** sivoais left
[16:24] *** hvxgr left
[16:24] *** acidsys left
[16:24] *** _________ left
[16:24] *** dutchie_ left
[16:24] *** timo left
[16:24] *** rjbs left
[16:30] *** euandreh joined
[16:30] *** xinming joined
[16:30] *** dmvrtx joined
[16:30] *** coleman joined
[16:30] *** sjn joined
[16:30] *** cm joined
[16:30] *** human-blip joined
[16:30] *** renormalist joined
[16:30] *** ky3 joined
[16:30] *** simcop2387 joined
[16:30] *** dano joined
[16:30] *** dpk joined
[16:30] *** bisectable6 joined
[16:30] *** camelia joined
[16:30] *** mtj joined
[16:30] *** Altreus joined
[16:30] *** destroycomputer- joined
[16:30] *** thaewrapt joined
[16:30] *** tinita joined
[16:30] *** jast joined
[16:30] *** JRaspass joined
[16:30] *** zostay joined
[16:30] *** ingy joined
[16:30] *** toddr joined
[16:30] *** slu joined
[16:30] *** gugod joined
[16:30] *** Sevalecan joined
[16:30] *** vrurg joined
[16:30] *** sivoais joined
[16:30] *** hvxgr joined
[16:30] *** acidsys joined
[16:30] *** _________ joined
[16:30] *** dutchie_ joined
[16:30] *** timo joined
[16:30] *** rjbs joined
[16:30] *** rajj left
[16:30] *** bartolin left
[16:30] *** bartolin_ joined
[16:30] *** swaggboi joined
[16:30] *** thowe joined
[16:30] *** avar joined
[16:30] *** perlbot joined
[16:30] *** andinus joined
[16:30] *** hudo__ joined
[16:30] *** dustinm` joined
[16:30] *** gfldex joined
[16:30] *** ilogger2_ joined
[16:30] *** tbrowder joined
[16:30] *** tonyo joined
[16:30] *** drakonis joined
[16:30] *** MoC joined
[16:30] *** kylese joined
[16:30] *** tjr joined
[16:30] *** kaskal joined
[16:30] *** greppable6 joined
[16:30] *** unicodable6 joined
[16:30] *** sourceable6 joined
[16:30] *** bloatable6 joined
[16:30] *** samebchase joined
[16:30] *** tellable6 joined
[16:30] *** coverable6 joined
[16:30] *** jmcgnh joined
[16:30] *** corwin joined
[16:30] *** mst joined
[16:30] *** broquaint joined
[16:30] *** popebob joined
[16:30] *** lucs joined
[16:30] *** abraxxa-home left
[16:30] *** lizmat left
[16:30] *** Geth left
[16:30] *** leah2 left
[16:30] *** synthmeat left
[16:30] *** esh left
[16:30] *** jdv left
[16:30] *** itaipu left
[16:30] *** phogg left
[16:30] *** m6locks_ left
[16:30] *** nicole left
[16:30] *** xkr47 left
[16:30] *** abraxxa-home joined
[16:30] *** lizmat joined
[16:30] *** Geth joined
[16:30] *** leah2 joined
[16:30] *** synthmeat joined
[16:30] *** esh joined
[16:30] *** jdv joined
[16:30] *** itaipu joined
[16:30] *** phogg joined
[16:30] *** m6locks_ joined
[16:30] *** nicole joined
[16:30] *** xkr47 joined
[16:30] *** jmcgnh left
[16:30] *** tjr left
[16:30] *** samebchase left
[16:30] *** kaskal left
[16:30] *** samebchase6 joined
[16:30] *** orangebot left
[16:30] *** zups left
[16:30] *** elcaro left
[16:30] *** evalable6 left
[16:30] *** releasable6 left
[16:30] *** tadzik left
[16:30] *** benchable6 left
[16:30] *** linkable6 left
[16:30] *** dfarnsworth left
[16:30] *** skaji__ left
[16:30] *** xelxebar left
[16:30] *** perryprog left
[16:30] *** SmokeMachine left
[16:30] *** ky2 left
[16:30] *** samebchase6 is now known as samebchase

[16:30] *** kaskal joined
[16:30] *** orangebot joined
[16:30] *** zups joined
[16:30] *** elcaro joined
[16:30] *** evalable6 joined
[16:30] *** releasable6 joined
[16:30] *** tadzik joined
[16:30] *** benchable6 joined
[16:30] *** linkable6 joined
[16:30] *** dfarnsworth joined
[16:30] *** skaji__ joined
[16:30] *** xelxebar joined
[16:30] *** perryprog joined
[16:30] *** SmokeMachine joined
[16:30] *** ky2 joined
[16:31] *** guifa left
[16:31] *** snonux left
[16:31] *** Tirifto left
[16:31] *** eseyman left
[16:31] *** maylay left
[16:31] *** DarthGandalf left
[16:31] *** guifa joined
[16:31] *** snonux joined
[16:31] *** Tirifto joined
[16:31] *** eseyman joined
[16:31] *** maylay joined
[16:31] *** DarthGandalf joined
[16:31] *** sena_kun left
[16:31] *** rba left
[16:31] *** oodani left
[16:31] *** BooK left
[16:31] *** shareable6 left
[16:31] *** sorenson left
[16:31] *** hudo left
[16:31] *** tailgate left
[16:31] *** teatime left
[16:31] *** teatwo joined
[16:32] *** sena_kun joined
[16:37] <xinming> m: class T { {my $set = <a b c>.Set; has $.t where * (elem) $set = "a" }; submethod BUILD (:$!t) { $!t.say; }; }; T.new(:t<x>)

[16:37] <camelia> rakudo-moar 4e051c5b2: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Can never assign default value Str ("a") to attribute '$!t', it expects: <anon>‚ê§at <tmp>:1‚ê§¬ª

[16:37] <xinming> m: class T { { has $.t where * (elem) <a b c> = "a" }; submethod BUILD (:$!t) { $!t.say; }; }; T.new(:t<x>)

[16:37] <camelia> rakudo-moar 4e051c5b2: OUTPUT: ¬´Type check failed in assignment to $!t; expected <anon> but got Str ("x")‚ê§  in submethod BUILD at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:37] <xinming> m: class T { { has $.t where * (elem) <a b c> = "a" }; submethod BUILD (:$!t) { $!t.say; }; }; T.new(:t<a>)

[16:37] <camelia> rakudo-moar 4e051c5b2: OUTPUT: ¬´a‚ê§¬ª

[16:37] <xinming> m: class T { {my $set = <a b c>.Set; has $.t where * (elem) $set = "a" }; submethod BUILD (:$!t) { $!t.say; }; }; T.new(:t<a>)

[16:37] <camelia> rakudo-moar 4e051c5b2: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Can never assign default value Str ("a") to attribute '$!t', it expects: <anon>‚ê§at <tmp>:1‚ê§¬ª

[16:38] <xinming> m: my $set = <a b c>.Set; ("a" (elem) $set).raku.say;

[16:38] <camelia> rakudo-moar 4e051c5b2: OUTPUT: ¬´Bool::True‚ê§¬ª

[16:38] <xinming> Is this a bug in where ?

[16:40] <xinming> m: class T { {my $set = <a b c>.Set; has $.t where { $_ (elem) $set } = "a" }; submethod BUILD (:$!t) { $!t.say; }; }; T.new(:t<x>)

[16:40] <camelia> rakudo-moar 4e051c5b2: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Can never assign default value Str ("a") to attribute '$!t', it expects: <anon>‚ê§at <tmp>:1‚ê§¬ª

[16:40] <xinming> m: class T { {my $set = <a b c>.Set; has $.t where { $_ (elem) $set } = "a" }; submethod BUILD (:$!t) { $!t.say; }; }; T.new(:t<a>)

[16:40] <camelia> rakudo-moar 4e051c5b2: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Can never assign default value Str ("a") to attribute '$!t', it expects: <anon>‚ê§at <tmp>:1‚ê§¬ª

[16:41] <xinming> hmm, The   'where * (elem) $set'   'where { $_ (elem) $set)'   Neither worked.

[16:42] *** tjr joined
[16:46] *** jmcgnh joined
[16:48] *** hellwolf left
[16:48] *** japhb left
[16:48] *** discord-raku-bot left
[16:48] *** nine left
[16:48] *** committable6 left
[16:48] *** ecocode left
[16:48] *** quotable6 left
[16:48] *** dutchie left
[16:48] *** BinGOs left
[16:48] *** jcallen left
[16:49] *** hellwolf joined
[16:49] *** japhb joined
[16:49] *** discord-raku-bot joined
[16:49] *** nine joined
[16:49] *** committable6 joined
[16:49] *** ecocode joined
[16:49] *** quotable6 joined
[16:49] *** dutchie joined
[16:49] *** BinGOs joined
[16:49] *** jcallen joined
[16:49] <timo> i don't think you can do that with a { my ... } because it's not compile-time-known?

[16:49] <timo> m: class T { {my $set = <a b c>.Set; has $.t where { say "evaluating $_ against $set.raku()"; $_ (elem) $set } = "a" }; };

[16:50] <camelia> rakudo-moar 4e051c5b2: OUTPUT: ¬´evaluating a against Any‚ê§===SORRY!=== Error while compiling <tmp>‚ê§Can never assign default value Str ("a") to attribute '$!t', it expects: <anon>‚ê§at <tmp>:1‚ê§¬ª

[16:50] <timo> m: class T { BEGIN { my $set = <a b c>.Set; has $.t where { say "evaluating $_ against $set.raku()"; $_ (elem) $set } = "a" }; };

[16:50] <camelia> rakudo-moar 4e051c5b2: OUTPUT: ¬´evaluating a against Set.new("a","c","b")‚ê§¬ª

[16:50] <timo> so not a bug in "where" per se

[16:51] <timo> somewhere between an LTA, a footgun, and something we should be able to fix?

[16:52] <timo> also, would be good to have the error show something better than "<anon>". even if it's only like "expected to match against unnamed subset / condition" or whatever

[16:52] *** leedo left
[16:52] *** silug left
[16:52] *** El_Che left
[16:52] *** greenfork left
[16:52] *** ashfield left
[16:52] *** atweedie left
[16:52] *** ab5tract left
[16:52] *** PotatoGim left
[16:52] *** jjatria left
[16:52] *** leont left
[16:52] *** jetchisel left
[16:52] *** ugexe left
[16:52] *** dutchie left
[16:52] *** leedo joined
[16:52] *** silug joined
[16:52] *** El_Che joined
[16:52] *** ashfield joined
[16:52] *** greenfork joined
[16:52] *** atweedie joined
[16:52] *** ab5tract joined
[16:52] *** PotatoGim joined
[16:52] *** jjatria joined
[16:52] *** leont joined
[16:52] *** jetchisel joined
[16:52] *** ugexe joined
[16:52] <timo> also, probably a good idea to make it clear / known / documented that this is a way for compile-time code execution to happen? we don't really document that kind of thing thoroughly at the moment i don't think?

[16:55] *** dutchie joined
[16:55] *** leedo left
[16:55] *** silug left
[16:55] *** El_Che left
[16:55] *** greenfork left
[16:55] *** ashfield left
[16:55] *** atweedie left
[16:55] *** ab5tract left
[16:55] *** PotatoGim left
[16:55] *** jjatria left
[16:55] *** leont left
[16:55] *** jetchisel left
[16:55] *** ugexe left
[16:55] *** hellwolf left
[16:55] *** japhb left
[16:55] *** discord-raku-bot left
[16:55] *** nine left
[16:55] *** committable6 left
[16:55] *** ecocode left
[16:55] *** quotable6 left
[16:55] *** BinGOs left
[16:55] *** jcallen left
[16:55] *** sena_kun left
[16:55] *** guifa left
[16:55] *** snonux left
[16:55] *** Tirifto left
[16:55] *** eseyman left
[16:55] *** maylay left
[16:55] *** DarthGandalf left
[16:55] *** orangebot left
[16:55] *** zups left
[16:55] *** elcaro left
[16:55] *** evalable6 left
[16:55] *** releasable6 left
[16:55] *** tadzik left
[16:55] *** benchable6 left
[16:55] *** linkable6 left
[16:56] *** dfarnsworth left
[16:56] *** skaji__ left
[16:56] *** xelxebar left
[16:56] *** perryprog left
[16:56] *** SmokeMachine left
[16:56] *** ky2 left
[16:56] *** abraxxa-home left
[16:56] *** lizmat left
[16:56] *** Geth left
[16:56] *** leah2 left
[16:56] *** synthmeat left
[16:56] *** esh left
[16:56] *** jdv left
[16:56] *** itaipu left
[16:56] *** phogg left
[16:56] *** m6locks_ left
[16:56] *** nicole left
[16:56] *** xkr47 left
[16:56] *** swaggboi left
[16:56] *** thowe left
[16:56] *** avar left
[16:56] *** perlbot left
[16:56] *** andinus left
[16:56] *** hudo__ left
[16:56] *** dustinm` left
[16:56] *** gfldex left
[16:56] *** ilogger2_ left
[16:56] *** tbrowder left
[16:56] *** tonyo left
[16:56] *** drakonis left
[16:56] *** tjr left
[16:56] *** MoC left
[16:56] *** kylese left
[16:56] *** greppable6 left
[16:56] *** unicodable6 left
[16:56] *** bloatable6 left
[16:56] *** sourceable6 left
[16:56] *** tellable6 left
[16:56] *** coverable6 left
[16:56] *** corwin left
[16:56] *** mst left
[16:56] *** broquaint left
[16:56] *** popebob left
[16:56] *** lucs left
[16:56] *** Sevalecan left
[16:56] *** vrurg left
[16:56] *** sivoais left
[16:56] *** hvxgr left
[16:56] *** acidsys left
[16:56] *** _________ left
[16:56] *** dutchie_ left
[16:56] *** timo left
[16:56] *** rjbs left
[16:56] *** jmcgnh left
[16:56] *** euandreh left
[16:56] *** ky3 left
[16:56] *** dpk left
[16:56] *** camelia left
[16:56] *** mtj left
[16:56] *** Altreus left
[16:56] *** thaewrapt left
[16:56] *** dutchie left
[16:56] *** kaskal left
[16:56] *** xinming left
[16:56] *** coleman left
[16:56] *** human-blip left
[16:56] *** bisectable6 left
[16:56] *** destroycomputer- left
[16:56] *** toddr left
[16:56] *** ingy left
[16:56] *** zostay left
[16:56] *** JRaspass left
[16:56] *** gugod left
[16:56] *** slu left
[16:56] *** teatwo left
[16:56] *** samebchase left
[16:56] *** dmvrtx left
[16:56] *** sjn left
[16:56] *** cm left
[16:56] *** renormalist left
[16:56] *** simcop2387 left
[16:56] *** dano left
[16:56] *** tinita left
[16:56] *** jast left
[16:56] *** bartolin_ left
[16:56] *** Aedil left
[16:56] *** bdju left
[16:56] *** summerisle_ left
[16:56] *** gabiruh left
[16:56] *** peder left
[16:56] *** Opus left
[16:56] *** GreaseMonkey left
[16:56] *** charsbar left
[16:56] *** Manifest0 left
[16:56] *** botato left
[16:56] *** dg left
[16:56] *** Voldenet left
[16:56] *** kjp left
[16:56] *** ACfromTX left
[16:56] *** tobs left
[16:56] *** constxd left
[16:56] *** pierrot left
[16:56] *** Ekho left
[16:56] *** dutchie joined
[16:56] *** ugexe joined
[16:56] *** jetchisel joined
[16:56] *** leont joined
[16:56] *** jjatria joined
[16:56] *** PotatoGim joined
[16:56] *** ab5tract joined
[16:56] *** atweedie joined
[16:56] *** greenfork joined
[16:56] *** ashfield joined
[16:56] *** El_Che joined
[16:56] *** silug joined
[16:56] *** leedo joined
[16:56] *** jcallen joined
[16:56] *** BinGOs joined
[16:56] *** quotable6 joined
[16:56] *** ecocode joined
[16:56] *** committable6 joined
[16:56] *** maylay joined
[16:56] *** eseyman joined
[16:56] *** Tirifto joined
[16:56] *** snonux joined
[16:56] *** guifa joined
[16:56] *** ky2 joined
[16:56] *** SmokeMachine joined
[16:56] *** perryprog joined
[16:56] *** xelxebar joined
[16:56] *** skaji__ joined
[16:56] *** dfarnsworth joined
[16:56] *** linkable6 joined
[16:56] *** benchable6 joined
[16:56] *** tadzik joined
[16:56] *** releasable6 joined
[16:56] *** evalable6 joined
[16:56] *** elcaro joined
[16:56] *** zups joined
[16:56] *** orangebot joined
[16:56] *** kaskal joined
[16:56] *** samebchase joined
[16:56] *** xkr47 joined
[16:56] *** nicole joined
[16:56] *** m6locks_ joined
[16:56] *** phogg joined
[16:56] *** itaipu joined
[16:56] *** jdv joined
[16:56] *** esh joined
[16:56] *** synthmeat joined
[16:56] *** leah2 joined
[16:56] *** Geth joined
[16:56] *** lizmat joined
[16:56] *** abraxxa-home joined
[16:56] *** lucs joined
[16:56] *** popebob joined
[16:56] *** broquaint joined
[16:56] *** mst joined
[16:56] *** corwin joined
[16:56] *** coverable6 joined
[16:56] *** tellable6 joined
[16:56] *** bloatable6 joined
[16:56] *** sourceable6 joined
[16:56] *** unicodable6 joined
[16:56] *** greppable6 joined
[16:56] *** kylese joined
[16:56] *** MoC joined
[16:56] *** drakonis joined
[16:56] *** tonyo joined
[16:56] *** tbrowder joined
[16:56] *** ilogger2_ joined
[16:56] *** gfldex joined
[16:56] *** dustinm` joined
[16:56] *** hudo__ joined
[16:56] *** andinus joined
[16:56] *** perlbot joined
[16:56] *** avar joined
[16:56] *** thowe joined
[16:56] *** swaggboi joined
[16:56] *** bartolin_ joined
[16:56] *** rjbs joined
[16:56] *** timo joined
[16:56] *** dutchie_ joined
[16:56] *** _________ joined
[16:56] *** acidsys joined
[16:56] *** hvxgr joined
[16:56] *** sivoais joined
[16:56] *** vrurg joined
[16:56] *** Sevalecan joined
[16:56] *** gugod joined
[16:56] *** slu joined
[16:56] *** toddr joined
[16:56] *** ingy joined
[16:56] *** zostay joined
[16:56] *** JRaspass joined
[16:56] *** jast joined
[16:56] *** tinita joined
[16:56] *** thaewrapt joined
[16:56] *** destroycomputer- joined
[16:56] *** Altreus joined
[16:56] *** mtj joined
[16:56] *** camelia joined
[16:56] *** bisectable6 joined
[16:56] *** dpk joined
[16:56] *** dano joined
[16:56] *** simcop2387 joined
[16:56] *** ky3 joined
[16:56] *** renormalist joined
[16:56] *** human-blip joined
[16:56] *** cm joined
[16:56] *** sjn joined
[16:56] *** coleman joined
[16:56] *** dmvrtx joined
[16:56] *** xinming joined
[16:56] *** euandreh joined
[16:56] *** Ekho joined
[16:56] *** pierrot joined
[16:56] *** constxd joined
[16:56] *** tobs joined
[16:56] *** ACfromTX joined
[16:56] *** kjp joined
[16:56] *** Voldenet joined
[16:56] *** dg joined
[16:56] *** botato joined
[16:56] *** Manifest0 joined
[16:56] *** Aedil joined
[16:56] *** bdju joined
[16:56] *** charsbar joined
[16:56] *** GreaseMonkey joined
[16:56] *** Opus joined
[16:56] *** peder joined
[16:56] *** gabiruh joined
[16:56] *** summerisle_ joined
[16:58] *** Manifest0 left
[16:58] *** botato left
[16:58] *** dg left
[16:58] *** Voldenet left
[16:58] *** kjp left
[16:58] *** ACfromTX left
[16:58] *** tobs left
[16:58] *** constxd left
[16:58] *** pierrot left
[16:58] *** Ekho left
[16:58] *** Manifest0 joined
[16:58] *** botato joined
[16:58] *** dg joined
[16:58] *** Voldenet joined
[16:58] *** kjp joined
[16:58] *** ACfromTX joined
[16:58] *** tobs joined
[16:58] *** constxd joined
[16:58] *** pierrot joined
[16:58] *** Ekho joined
[17:00] *** dutchie left
[17:10] <xinming> timo: Thanks, I forgot about the compile-time vs runtime thing.

[17:16] <xinming> timo: I think there is a bug

[17:18] <xinming> timo: https://termbin.com/wl2i   This is the sample which works with  'where { }', But doesn't work with  'where * ...'

[17:19] <xinming> Also, Move the 'my %calculator' out of the BEGIN block will also trigger same errors with 'has $.t ...' line

[17:21] <xinming> neither 'has $.t where * ...'  nor  'has $.t where { }'  works.

[17:25] <guifa> I wonder if the whatever there is for some reason clobbering the default

[17:25] <guifa> but no that would give an error of assigning 'min' to True

[17:25] <ugexe> xinming: in your example should :method be :t?

[17:27] <xinming> ugexe: Yea

[17:51] *** zetaaaa joined
[18:12] <timo> all this will be extra fun because the error probably won't show up if you --optimize=off or --optimize=0

[18:13] *** hellwolf joined
[18:16] <timo> you're right, with the { } the argument passed to (elem) is the right set, but with the WhateverCode it's "Any", even though outputting $set a line above it (still in the BEGIN block) gives the expected output

[18:17] <timo> funny enough, if you use `where $set` it works fine

[18:18] <timo> since the default smartmatch on Set is element check

[18:18] <timo> it side-steps the bug, but i've not looked at how we could fix that issue. assuming it is an actual bug. i think it is a bug

[18:22] <xinming> So, this is a optimization bug related with whatever code convertion.

[18:25] <timo> well, the optimizer being involved here is mostly because that's the stage where we do this kind of check, at least it is for some similar checks, like `sub a(Str $a) { }; a(6)` is caught by the optimizer

[18:36] <timo> cool, i was wrong, this happens immediately in stage parse apparently

[18:36] <timo> wait, no, it's in a begin block, so stagestats doesn't tell the whole story

[18:37] <timo> create_BUILDPLAN is the spot where the check happens and fails for the * (elem) $set case

[18:38] <timo> the optimizer is actually not involved in this

[18:52] *** dutchie joined
[19:04] *** abraxxa-home left
[19:09] *** guifa left
[19:10] *** guifa joined
[19:13] <SmokeMachine> is there a way to force RAKUDO_RAKUAST=1 with out setting the envvar? from inside the scipt? I think there is a `use` to that, am I right?

[19:15] <guifa> I don't think so

[19:15] <timo> there is the "use experimental :rakuast" but that doesn't cause your program to be parsed by the rakuast parser i don't think

[19:15] <timo> that use only gives you the AST method and rakuast classes i imagine

[19:16] <timo> what's your use case?

[19:17] <SmokeMachine> I think `use experimental :rakuast` only gives you access to the RakuAST classes... :?

[19:17] <SmokeMachine> :)

[19:18] <SmokeMachine> :( that's what I meant...

[19:18] <SmokeMachine> my problem it that I'm writing a test that needs RAKUDO_RAKUAST=1...

[19:19] <timo> then i would say put the source code of the test in a huge heredoc string and "run" it?

[19:19] <discord-raku-bot> <librasteve> err $*ENV<RAKUDO_RAKUAST> = 1 maybe

[19:19] <timo> probably easier to get the rakuast compiler, feed the source in, compile it, and run the result

[19:20] <timo> librasteve, even if you put that in BEGIN, it's probably too late to actually switch into rakuast mode

[19:20] <discord-raku-bot> <librasteve> oh

[19:21] <SmokeMachine> maybe I'll need to not test that as it should be used, but using Str.AST... :(

[19:22] <SmokeMachine> this was my test: https://usercontent.irccloud-cdn.com/file/Pj5pYrdp/image.png

[19:27] <guifa> SmokeMachine: or just fail if it's not with RAKUDO_RAKUAST ? 

[19:28] <SmokeMachine> but it would always fail, no?

[19:29] <timo> maybe skip instead of fail, but without a way to get the test run with rakuast turned on, for example by `zef test`, how would the test be useful?

[19:29] <timo> also, in the future, rakuast will be the default parser even without RAKUDO_RAKUAST

[19:30] <SmokeMachine> I think I'm going with this: https://usercontent.irccloud-cdn.com/file/XKO72uyI/image.png

[19:33] <discord-raku-bot> <librasteve> &afk

[19:48] *** lizmat_ joined
[19:51] *** lizmat left
[19:54] *** lizmat_ left
[19:54] *** lizmat joined
[20:34] *** Sgeo joined
[21:09] <SmokeMachine> I released 2 modules but I can't install them...

[21:09] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/F2LN7dTM/image.png

[21:10] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/tH3MYzje/image.png

[21:11] <SmokeMachine> https://raku.land/?q=ASTQuery and https://raku.land/?q=Acme::Overreact

[21:20] *** MoC left
[21:31] *** stanrifkin joined
[21:33] *** finanalyst joined
[21:38] <[Coke]> what are the git repos?

[21:38] <[Coke]> (and when did you upload?)

[21:39] <[Coke]> Looks like Acme::Overreact is in the ecosystem, but not ASTQuery, but since it depends on that..

[21:39] <[Coke]> What's the git repo for ASTQuery?

[21:45] *** stanrifkin left
[21:47] * [Coke] finds https://github.com/FCO/ASTQuery.

[21:47] <[Coke]> git

[21:48] <[Coke]> installs fine from git repo, fwiw.

[21:49] <[Coke]> don't see any obvious errors in the META6.json

[21:56] <SmokeMachine> ASTQuery was released last week and a new version today just before I released the other one‚Ä¶

[21:57] <SmokeMachine> [Coke]: üëÜ

[22:09] *** Aedil left
[22:14] <[Coke]> ok. ASTQuery isn't on 360.zef.pm - so let's ping tonyo, I guess?

[22:20] <[Coke]> or coleman - any idea on how to diagnose why something that a user uploaded with fez isn't available?

[22:22] <guifa> [Coke] that's a good tonyo question

[22:32] <coleman> ask tonyo, because I dunno, but whenever we figure out the answer I'd be interested 

[22:41] <[Coke]> SmokeMachine: maybe open a ticket here: https://github.com/tony-o/raku-fez ?

[22:43] <SmokeMachine> Yeah, thanks! I‚Äôll do that!

[23:02] <SmokeMachine> [Coke]: https://github.com/tony-o/raku-fez/issues/121

[23:16] *** Chanakan joined
