[01:13] *** hulk joined
[01:15] *** kylese left
[02:15] *** hulk left
[02:15] *** kylese joined
[03:10] *** Sgeo joined
[03:23] <wayland> I guess what I really want to know is, why do the "returns" methods of two completely different signatures match this in the first place?  

[05:36] *** rir joined
[05:37] *** rir__ left
[05:56] *** rir left
[07:54] *** Sgeo left
[08:04] *** samebchase left
[09:01] *** snonux left
[09:29] *** snonux joined
[09:48] *** sena_kun joined
[09:59] *** jpn joined
[10:46] *** snonux left
[10:47] *** Tirifto left
[10:55] *** snonux joined
[10:57] *** jpn left
[10:57] *** Tirifto joined
[11:17] *** samcv left
[11:30] *** snonux left
[11:31] *** snonux joined
[11:32] *** snonux left
[11:33] *** snonux joined
[11:39] *** snonux left
[11:40] <ab5tract> wayland: fair question.. I tried poking at it bit last night but it was too late for coherency

[11:40] *** snonux joined
[11:43] *** snonux left
[11:43] *** snonux joined
[11:44] *** snonux left
[11:45] *** snonux joined
[11:49] *** snonux left
[11:50] *** snonux joined
[13:17] *** rir joined
[15:12] *** thaewrap1 joined
[15:15] *** thaewrapt left
[15:54] *** esh_ joined
[16:25] *** Sgeo joined
[16:31] *** wayland76 joined
[16:32] *** wayland left
[16:36] *** soverysour joined
[16:36] *** soverysour left
[16:36] *** soverysour joined
[17:10] *** soverysour left
[17:23] *** jpn joined
[17:33] *** soverysour joined
[17:45] *** jpn left
[17:51] *** jpn joined
[18:01] *** jpn left
[18:29] *** jpn joined
[18:40] *** jpn left
[18:56] *** soverysour left
[19:01] *** sena_kun left
[19:02] *** sena_kun joined
[20:47] *** Tirifto left
[20:49] *** hankache joined
[20:50] *** Tirifto joined
[20:57] <wayland76> ab5tract: Thanks anyway :) 

[21:06] *** teatwo joined
[21:07] <wayland76> Interesting -- I've created a Parameter programmatically, and then passed it to Signature.new in the params array, and it wraps it inside another Parameter.  Is that avoidable?  

[21:08] *** tea3po joined
[21:08] *** teatime left
[21:11] *** teatwo left
[21:11] <wayland76> No, my bad, it's just not desstructuring something.  

[21:15] *** teatwo joined
[21:17] *** hankache left
[21:19] *** tea3po left
[21:31] <wayland76> Is there a way to get the debugger in Comma to show when it's jumped into the Raku code (ie. into Signature)?  At the moment, I can see in the call stack when it jumps into Signature, but the code doesn't show up.  

[21:41] <wayland76> (I'm wanting to step through Signature.ACCEPTS and see where it's actually exiting, so I can figure out what it doesn't like about my programmatically-created Signature)

[21:43] <tbrowder> ref signatures: is an explicit return type enough to distinguish between otherwise identical signatures? i thought not, but i don't understand the nqp comments earlier

[21:44] <wayland76> And it might not be.  There are some structural differences (eg. some of the Parameter objects I've passed in seem to be getting wrapped in other Parameter objects), and I'm wanting to put my finger on the exact difference.  

[21:45] <wayland76> (IOW, I don't know, but see the line of code I linked yesterday -- it seems to be saying that maybe they have to be the same)

[21:50] *** jpn joined
[22:03] <wayland76> Is there a way we can use adverbs/traits/something on a function /call/ instead of on a function /definition/ ?  

[22:03] <ab5tract> adverbs are already supported on calls

[22:04] <wayland76> Oh, you mean as syntactic sugar on named parameters?  

[22:04] <ab5tract> but they only have an impact if you have accounted for them in your function definition *or* if you dig into %_ manually

[22:04] <wayland76> OK.  

[22:04] <ab5tract> adverbs "are" named parameters :)

[22:04] <wayland76> Yep :) 

[22:06] <ab5tract> and of course, you'll be digging into %_ manually in your function definition... or it might work to take a &code block that looks into OUTER::<%_> ... hmmm

[22:07] <ab5tract> also, you may want to consider doing all of this signature generation via RakuAST

[22:07] <ab5tract> it may prove to be less fiddly, if more verbose

[22:08] <ab5tract> you can check `t/S12-rakuast/signature.rakutest` for a view on what that might look like

[22:11] <wayland76> Oh, thanks!  

[22:11] <wayland76> OTOH, maybe this is our chance to debug manual Signature/Parameter debugging.  

[22:14] <wayland76> s/debugging/creation/

[22:14] <wayland76> Also, just to make things more complicated, I'm creating a new Signature using parameters from an old Signature :) 

[22:26] <ab5tract> to me that definitely sounds like an RakuAST-appropriate use case

[22:27] <ab5tract> but it's probably a bit of torment here and a bit of torment there either way :)

[22:35] <wayland76> Actually, the part that might make it particularly difficult is turning the regular Parameter objects I'm nicking from the other Signature into RakuAST parameters.  

[22:44] *** wayland76 left
[23:09] *** sena_kun left
