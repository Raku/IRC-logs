[00:03] *** thaewrapt left
[00:05] *** thaewrapt joined
[00:10] *** Manifest0 left
[00:13] *** thaewrapt left
[00:31] *** vrurg_ joined
[00:34] *** vrurg left
[01:58] *** kylese left
[01:58] *** hulk joined
[02:15] *** hulk left
[02:15] *** kylese joined
[02:59] *** thaewrapt joined
[03:04] *** thaewrapt left
[03:05] *** thaewrapt joined
[03:10] *** thaewrapt left
[03:21] *** thaewrapt joined
[03:32] *** thaewrapt left
[03:43] *** thaewrapt joined
[03:49] *** thaewrapt left
[03:59] *** thaewrapt joined
[04:05] *** thaewrapt left
[04:15] *** thaewrapt joined
[04:23] *** thaewrapt left
[04:34] *** thaewrapt joined
[04:40] *** thaewrapt left
[04:51] *** thaewrapt joined
[04:56] *** thaewrapt left
[04:59] *** hudo_ joined
[05:01] *** hudo left
[05:07] *** thaewrapt joined
[05:14] *** thaewrapt left
[05:24] *** thaewrapt joined
[05:29] *** thaewrapt left
[05:30] *** Sgeo left
[05:40] *** thaewrapt joined
[05:46] *** thaewrapt left
[05:58] *** thaewrapt joined
[06:03] *** thaewrapt left
[06:13] *** thaewrapt joined
[06:20] *** thaewrapt left
[06:31] *** thaewrapt joined
[06:36] *** thaewrapt left
[06:47] *** thaewrapt joined
[06:47] *** teatime left
[06:53] *** thaewrapt left
[07:04] *** thaewrapt joined
[07:09] *** thaewrapt left
[07:17] *** Manifest0 joined
[07:20] *** thaewrapt joined
[07:22] *** wayland76 joined
[07:26] *** thaewrapt left
[07:35] *** derpydoo joined
[07:37] *** thaewrapt joined
[07:43] *** thaewrapt left
[07:52] *** derpydoo left
[07:52] <discord-raku-bot> <librasteve> wayland: what I mean by table stakes is that unless raku has a path to run large scale data analytics workflows at native library speed and unless there is a paradigm for Pythonistas to continue to use familiar Pandas style APIs, then we cannot expect raku to be a future home for the fraction of Data Science folks who are feeling constricted by Python's coding style.

[07:53] <discord-raku-bot> <librasteve> So no matter how intuitive and powerful the Data::Reshapers and wrangling tools in antons world, they will have limited attraction if, when you need to upscale to millions of rows the performance nosedives unless you port back out to Python Polars

[07:54] *** thaewrapt joined
[07:57] <discord-raku-bot> <librasteve> my focus is to embed the Rust Polars library in Raku via Dan::Polars which, in turn, is built on the Apache Arrow columnar array processing ... https://pola.rs/posts/benchmarks/ and ultimately to get this to work in an efficient multi-core / multi-processor way .. anyone who is interested in helping on this Raku / Rust codebase is super welcome to join the fun

[08:00] *** sena_kun joined
[08:02] *** thaewrapt left
[08:14] *** thaewrapt joined
[08:16] *** jpn joined
[08:20] *** thaewrapt left
[08:33] *** thaewrapt joined
[08:38] *** thaewrapt left
[08:45] *** sena_kun left
[08:45] *** haxxelotto joined
[08:48] *** wayland joined
[08:48] *** thaewrapt joined
[08:49] *** wayland76 left
[08:52] *** haxxelotto left
[08:53] *** haxxelotto joined
[08:55] *** thaewrapt left
[09:06] *** thaewrapt joined
[09:10] <wayland> librasteve: Sounds good, but I think I'm going to be more on Anton's side of the fence than yours.  Not because I disagree with what you're doing, but because of where my needs and expertise lie.  

[09:13] *** thaewrapt left
[09:17] <wayland> (I'm also going to see if I can encourage the dBase/Harbour people to join us, but that may require both of us to work together -- I'm going to worry about that when I get a bit further in to my project, though).  

[09:22] <ab5tract> wayland: I’m a bit confused about the results you got using unshift. I left my laptop at home to avoid hacking my vacation away, so I can’t check. But unshiftjng a parameter onto the @params and then having @params as the sole, un-nested value to ‘parameters’ *should* work.

[09:23] *** thaewrapt joined
[09:27] <ab5tract> I’ll definitely be checking into what’s going on with | when I get back. We don’t actually interact with HLL arrays much, if at all, when working on RakuAST internals, so thank you for surfacing and reporting this.

[09:28] *** thaewrapt left
[09:29] <ab5tract> If you can share any other surprising behavior on the issue ticket, it will very much come in handy when I can get to it.

[09:32] <wayland> ab5tract: Nothing else I can think of.  But I've added a summary of my "unshift" findings to the ticket.  HTH,

[09:34] <ab5tract> Could I trouble you for some code examples?  as I can’t tell what you are unshifting onto the array nor how you are including it in the argument list to RakuAST::Sugnature…

[09:38] <wayland> I've included some redefinitions of $sig2 (though I'm going from memory here, rather than tested code).  

[09:38] <wayland> ie. I've just added them.  

[09:39] *** thaewrapt joined
[09:43] <ab5tract> Thanks!

[09:45] <ab5tract> ah, I see the problem. The point of unshift is to put an element at the head of the array. My suggestion was to unshift that first parameter onto the array and then pass that array, un-nested as the sole value to ‘parameters’

[09:45] <ab5tract> Ie unshift is the same as push except it is for the front of the array instead of the back

[09:46] *** thaewrapt left
[09:49] <wayland> Oh, duh!  I just completely didn't think.  I needed to be doing shift.  

[09:52] <wayland> Yeah, OK, if I use "shift" it works.  

[09:52] <wayland> Thanks!  

[09:57] *** thaewrapt joined
[09:57] <ab5tract> Awesome! I hope this unblocks the issues you are facing with HLL signature objects

[09:59] <wayland> Well, now that I have that working, I'm still not getting the signatures to match, and it seems to be the return value again, as per https://github.com/rakudo/rakudo/issues/5591 .  Maybe I'll get a chance to put in a PR over the weekend (if the fix is what I think it is, then it's one line).  

[10:00] <wayland> (well, plus a test to ensure the problem doesn't come back).  

[10:00] <wayland> But yes, definitely unblocked on that problem -- thanks!  :) 

[10:03] *** thaewrapt left
[10:12] <ab5tract> Cheers!

[10:14] *** thaewrapt joined
[10:21] *** thaewrapt left
[10:31] *** thaewrapt joined
[10:36] *** rba_ joined
[10:37] *** rba left
[10:37] *** rba_ is now known as rba

[10:39] *** thaewrapt left
[10:41] *** xinming left
[10:43] *** derpydoo joined
[10:43] *** xinming joined
[10:48] *** thaewrapt joined
[10:57] *** teatime joined
[11:18] *** derpydoo left
[11:18] *** haxxelotto left
[11:28] *** GreaseMonkey left
[11:29] *** greaser|q joined
[11:35] <wayland> Does anyone know when https://hub.docker.com/layers/rakuland/raku/latest/images/sha256-f42f16dec2ce0f111cbd0ed4868d5abba9f6c812ca55949c7f9f802950652a93?context=explore will be updated?  JRaspass ?  

[11:36] <wayland> Also, does anyone know how difficult it would be to hook up a github action so that every time there's a release, it gets pushed to dockerhub?  

[11:37] <wayland> librasteve: to clarify, when I was talking about the dBase/xHarbour people joining us, and said it may require both of us to work together, I was referring to getting your Dan stuff and my Tables stuff talking.  

[11:39] <JRaspass> Oh I didn't realise people were actually using those images, they're sorta byproduct of publishing what raku.land uses, I can totally get on that though, thanks for reminding me!

[11:39] <JRaspass> Need to rebuild them on Alpine 3.20 too

[11:41] <wayland> Yeah, I use them because I'm too lazy to update my OS :p 

[11:42] <wayland> Thanks very much!  

[11:53] *** avuserow_ left
[11:53] *** avuserow_ joined
[12:11] <wayland> Hi all.  When I set up the tests as per https://github.com/rakudo/rakudo?tab=readme-ov-file#testing and then run "make t/spec/S03-smartmatch/signature-signature.t" I get "make: Nothing to be done for 't/spec/S03-smartmatch/signature-signature.t'."  What am I doing wrong?  

[12:12] *** haxxelotto joined
[12:13] <wayland> Oh, do I need to do Configure.pl.  

[12:13] <wayland> What are the recommended options for Configure.pl if I want to not stomp on my other installations?  

[12:14] *** jpn left
[12:15] *** haxxelotto left
[12:16] *** haxxelotto joined
[12:16] *** jpn joined
[12:18] <JRaspass> wayland: $ docker run --pull always --rm rakuland/raku raku -e 'say "Rakudo $*RAKU.compiler.version() on Alpine $*DISTRO.release()"' # Rakudo 2024.05 on Alpine 3.20.0

[12:19] *** thaewrapt left
[12:19] <JRaspass> I prioritied building the ones from 2024, going to re-build the older images now

[12:19] <JRaspass> Got a newer zef bump too

[12:19] <wayland> Yay!  Thanks JRaspass!  That's the exact version I was after :D  

[12:21] <JRaspass> np, ta for the reminder

[12:22] *** jpn left
[12:33] *** thaewrapt joined
[12:34] <wayland> OK, so I tried running Configure.pl as per the instructions (perl Configure.pl --gen-moar --gen-nqp --backends=moar --prefix=~/src/raku/prefix-moarvm/), and I got the error "Can't locate NQP/Config.pm in @INC".  Am I doing something wrong, or should the docs say to install that module before running configure?  

[12:38] *** jpn joined
[12:47] <[Coke]> is this the rakudo source? where did you get it?

[12:49] <[Coke]> that should be in rakudo/3rdparty/nqp-configure

[12:49] <[Coke]> so I'm guess you got the rakudo source in some non-standard way.

[12:50] <[Coke]> (3rdparty/nqp-configure/lib/NQP/Config.pm specifically)

[12:51] <[Coke]> (it's a git submodule which is why I'm guessing shenanagins)

[13:09] <[Coke]> also what does perl -V say?

[13:09] <[Coke]> (er, perl -v is probably fine)

[13:11] *** haxxelotto left
[13:32] <discord-raku-bot> <librasteve> wayland: I made my own Docker chain(s) for raku since I needed (eg) the Jupyter Scipy stack and raku all in one image ... even if you don't benefit from my Docker images, they use GHA to autobuild/test on the latest (weekly in this case) - see https://github.com/librasteve/raku-Dockerfiles/blob/main/.github/workflows/basic-ma-weekly.yaml for example

[13:33] <discord-raku-bot> <librasteve> (ma means multi-arch ... i need to do linux/arm64 and linux/amd64 for my nefarious purposes)

[13:34] <discord-raku-bot> <librasteve> JRaspass: you are also welcome to use my GHA examples if that would help to automate, of course (I see you just pushed the latest)

[13:43] *** haxxelotto joined
[13:56] <discord-raku-bot> <antononcube> wayland: I made my own Docker chain(s) for raku since I needed (eg) the LLM stack and raku all in one image. See "LLM::Containerization", https://raku.land/zef:antononcube/LLM::Containerization

[13:57] <discord-raku-bot> <antononcube> Ok, my wording starts the same way as Steve's because we use(d) the same LLM to copy edit our post here.

[14:16] *** Sgeo joined
[14:43] *** haxxelotto left
[14:48] *** haxxelotto joined
[15:52] *** thaewrapt left
[15:54] *** thaewrapt joined
[16:09] *** thaewrapt left
[16:10] *** thaewrapt joined
[16:18] *** thaewrapt left
[16:18] *** thaewrapt joined
[16:50] *** haxxelotto left
[18:20] *** jpn left
[18:21] *** jpn joined
[18:26] *** jpn left
[18:26] *** haxxelotto joined
[19:09] *** stanrifkin joined
[19:15] *** jpn joined
[19:20] *** jpn left
[19:27] *** haxxelotto left
[21:02] *** sena_kun joined
[21:16] *** thaewrapt left
[21:18] *** thaewrapt joined
[21:32] *** thaewrapt left
[21:40] *** sjn left
[22:19] *** bisectable6 left
[22:19] *** bisectable6 joined
[22:25] *** sjn joined
[22:52] *** sena_kun left
[22:59] <wayland> [Coke]: I got it by forking the github repo (rakudo/rakudo) and then adding in the test spec as mentioned by the readme.  

[23:01] <wayland> librasteve: Definitely handy!  I was about to try to figure out how to do GHA testing for the TOP modules I'd written.  Thanks!  

[23:01] <wayland> antononcube: Great!  I'll definitely be interested in that at some point

[23:02] <wayland> antononcube: Also, I've been meaning to ask, why were you wanting to feed my TOP site to a LLM?  No objections, just wondering.  

[23:03] <wayland> When I Google "docker chain", it's all stuff about docker+iptables.  I think I got the gist of what you're saying, just saying that the LLM hallucinated that one :p 

[23:04] <wayland> So it looks like my git checkout has an empty nqp-configure

[23:05] <wayland> We don't use submodules at work, which means there's a git incantation I'm missing

[23:07] <discord-raku-bot> <antononcube> @wayland "[...] why were you wanting to feed my TOP site to a LLM? " -- (i) Marketing of Raku's LLM tools, and (ii) Exercising the "Eat your own dog food" principle.

[23:08] <wayland> Oh, right!  

[23:08] <wayland> Do we have a Raku tool that let you make a network of agents that talk to each other?  

[23:10] <discord-raku-bot> <antononcube> Sure, you can just use a loop.

[23:11] <discord-raku-bot> <antononcube> Here is a staged number guessing game between ChatGPT and PaLM: https://rakuforprediction.wordpress.com/2023/08/06/number-guessing-games-palm-vs-chatgpt/

[23:13] <discord-raku-bot> <antononcube> Basically, each agent has an object. Those objects can talk to each to other.

[23:14] <discord-raku-bot> <antononcube> If Raku had a Graph package, then the setup of the chats might be easier. But I think just graph edge lists made of Pair objects would suffice.

[23:15] <discord-raku-bot> <antononcube> @wayland It will be too hard to program ToDataQueryWorkflow to generate TOP code. So, LLMs can be used instead. At least to a point.

[23:15] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1248777316457255065/DSL-DataQueryWorkflow-demo-geographics.png?ex=6664e601&is=66639481&hm=88a0411de480a77271f1923f97e033011e9bea4700dddb6930ef935256bb3a4d&

[23:16] <wayland> Right.  I was looking at https://github.com/Pythagora-io/gpt-pilot#-how-gpt-pilot-works some time ago, and was impressed by the concept.  Basically, there are a bunch of agents that communicate with each other through a ticketing system (I think it's just an on-disk ticketing system), and each agent is specialised.  

[23:17] <wayland> Google has exactly one hit for ToDataQueryWorkflow, and it's a Wolfram page :) 

[23:17] <wayland> And it's written by you :) 

[23:18] <wayland> It's also next to that chart you posted the other day, so I'll read the article :) 

[23:18] <discord-raku-bot> <antononcube> Yeah 🙂 I wrote that DSL approach / software in Mathematica first, then I moved to Raku.

[23:19] <discord-raku-bot> <antononcube> Oh, yeah, this was a Wolfram U class on data wrangling.

[23:20] <wayland> Fortunately it's linked me through to https://github.com/antononcube/Raku-DSL-English-DataQueryWorkflows so I might be able to make sense of what you said.  

[23:20] <discord-raku-bot> <antononcube> You can try it out "live" here: https://antononcube.shinyapps.io/DSL-evaluations/

