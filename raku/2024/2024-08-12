[01:44] *** hulk joined
[01:44] *** kylese left
[02:15] *** hulk left
[02:15] *** kylese joined
[05:18] *** kst`` left
[05:30] *** Sgeo_ left
[06:13] *** Ideapp joined
[06:49] *** kst joined
[06:56] *** Ideapp left
[06:56] *** leont left
[06:57] *** leont joined
[06:57] *** Ideapp joined
[06:58] *** pony left
[06:58] *** jcallen left
[06:58] *** camelia left
[06:59] *** drakonis left
[06:59] *** jcallen joined
[07:00] *** pony joined
[07:00] *** drakonis joined
[07:25] *** Aedil joined
[07:43] *** sena_kun joined
[07:49] *** camelia joined
[08:30] *** camelia left
[08:55] *** camelia joined
[09:04] <ab5tract> izel: it doesn’t work for base, so I wouldn’t expect it to work in RakuAST

[09:04] <tellable6> ab5tract, I'll pass your message to izel

[09:04] <ab5tract> m: CHECK { say $*CU }

[09:04] <camelia> rakudo-moar 09deed5de: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤An exception X::Dynamic::NotFound occurred while evaluating a CHECK:␤Dynamic variable $*CU not found␤at <tmp>:1␤Exception details:␤  Dynamic variable $*CU not found␤    in block  at <tmp> line…»

[09:19] *** sena_kun left
[10:09] *** izel joined
[10:11] <izel> ab5tract: thanks but then how the author here https://dev.to/lizmat/walking-the-rakuast-tree-3fbd makes it work?

[10:11] <tellable6> 2024-08-12T09:04:27Z #raku <ab5tract> izel: it doesn’t work for base, so I wouldn’t expect it to work in RakuAST

[10:11] <izel> after "So let's look at the RakuAST tree of the most trivial program"

[10:12] <lizmat> guess I'll need to revisit that article...

[10:13] <izel> oh you are the author!!

[10:13] <izel> thanks for these

[10:14] <lizmat> you're very welcome :-)

[10:24] <ab5tract> Oh, sorry about that :)

[10:29] <Ideapp> what is the main feature of this programming language ?

[10:30] <El_Che> Manipulexity and Whipuptitude

[10:33] <pony> expressipossibility 

[10:34] <El_Che> and lizmat 

[10:44] <Ideapp> but the syntax is unreadable, I think it will be ok for those who write a lot in shellscript

[10:48] *** tejr left
[10:48] <lizmat> beauty is in the eye of the beholder  :-)

[10:56] *** tejr joined
[10:59] *** izel left
[11:38] <El_Che> I thin that Raku cleaned up Perl syntax nicely. More consistent and ortogonal. The only thing is that the language is big

[12:56] <lizmat> weekly: https://dev.to/lizmat/the-end-of-p6c-2868

[12:56] <notable6> lizmat, Noted! (weekly)

[13:19] *** simcop2387 left
[13:19] *** perlbot left
[13:21] <discord-raku-bot> <antononcube> @Ideapp Please point to language(s) whose syntax you find readable. (That might help certain better answers or advice can be given to your inquiries and questions.)

[13:24] *** xelxebar_ joined
[13:24] *** xelxebar left
[13:29] *** simcop2387 joined
[13:30] *** perlbot joined
[13:38] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/08/12/2024-33-p6c-ending/

[13:46] *** perlbot left
[13:46] *** simcop2387 left
[13:50] <discord-raku-bot> <antononcube> I would like to point out that "DSL::English::SearchEngineQueries" is a new module for the Zef ecosystem (and raku.land.) But I have had it and used to for awhile, so it has the version 0.5.0 (which misleads lizmat.)

[13:50] <lizmat> indeed it did

[13:51] <tbrowder> And I like it that the Raku language is big. And its syntax is MUCH cleaner than perl (not

[13:52] <lizmat> antononcube fixed

[13:52] <tbrowder> to speak of the very dangerous snake language)

[13:53] <discord-raku-bot> <antononcube> Thanks!

[13:53] <discord-raku-bot> <antononcube> (Although, that package should be of a fairly niche interest...)

[13:54] <discord-raku-bot> <antononcube> As for Arne Sommer's knight moves -- something similar had to be done in "Graph" in order to implement the creation of Knight-tour graphs. (Over arbitrary chessboard dimensions, BTW.)

[13:55] <discord-raku-bot> <antononcube> So, far those Knight-tour graphs are on 2D boards. I consider to "upgrade" a fair amount of the parameterized graph makers in "Graph" to be not just 2D but nD.

[13:56] <discord-raku-bot> <antononcube> Definitely, should be done for Graph::Complete  and  Graph::Grid  .

[13:58] *** simcop2387 joined
[13:59] *** perlbot joined
[14:18] <discord-raku-bot> <librasteve> Ideapp: I wonder if your eye is getting stuck on the sigils -- while these are not unique to raku (bash, PHP are a couple of examples), they can take some time to get used to ... one of the raku core team wrote a nice blog on sigils https://raku-advent.blog/2022/12/20/sigils/ that you may enjoy?

[14:21] <discord-raku-bot> <librasteve> ldeapp: the main features of raku are:  - Object-oriented programming including generics, roles and multiple dispatch - Functional programming primitives, lazy and eager list evaluation, junctions, autothreading and hyperoperators (vector operators) - Parallelism, concurrency, and asynchrony including multi-core support - Definable grammars for pattern matching and generalized string processing - Optional and

[14:21] <discord-raku-bot> gradual typing

[14:22] *** Ideapp left
[14:22] *** Ideapp joined
[14:35] <Ideapp> runtime speed like go or python ?

[14:37] <discord-raku-bot> <antononcube> Slower, sometimes much slower. Comparing with Python is tricky since many Python packages are just interfaces to C and C++ implementations.

[15:09] <discord-raku-bot> <librasteve> Like Python, raku is a glue language and speed is comparable to Python in the early days - also like Python many raku packages are just interfaces to C and C++ libraries. Raku also has Python::Inline and Perl5::Inline so you can use packages from the Python and CPAN libraries if they have not yet been ported to raku.

[15:27] *** Ideapp left
[17:14] *** mst_ joined
[17:15] *** mst_ left
[17:23] <tbrowder> librasteve: excellent reference, i loved it then and i just finished rereading it!

[17:23] <tbrowder> i never can remember :

[17:24] <tbrowder> the significance of := versus = except := is required in nqp

[17:34] <lizmat> that's because nqp doesn't have any containers

[18:07] <tbrowder> that’s ‘cause i forget to think of containers—that would help fer sure

[18:08] <tbrowder> i’ll put that on a postit note…

[18:08] <tbrowder> whew

[18:39] *** sena_kun joined
[18:41] *** thaewrapt left
[18:43] *** thaewrapt joined
[20:58] <tbrowder> since i can remember everything is a class, i ought to be able to remember a class is a container…

[20:59] *** guifa joined
[21:05] <discord-raku-bot> <librasteve> tbrowder: I recall lizmat saying that she always defaults to := binding unless the code needs a mutable copy of the rhs in which case = becomes a signpost of the presernce of a container

[21:05] <discord-raku-bot> <librasteve> seems like good coding style to me

[21:09] *** Aedil left
[21:23] *** guifa left
[21:36] <[Coke]> Anyone looking to contribute to the docs project, I have some nice small items to work on, join me over in #raku-doc for details

[21:40] <tbrowder> librasteve: that's right! and i've seen it, too

[22:08] <Geth> ¦ ecosystem/main: 35a58eaa46 | (Elizabeth Mattijsen)++ | META.list

[22:08] <Geth> ¦ ecosystem/main: Remove leont's dists in p6c

[22:08] <Geth> ¦ ecosystem/main: 

[22:08] <Geth> ¦ ecosystem/main: As per https://github.com/Leont/build-graph6/issues/5#issuecomment-2284861046

[22:08] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/35a58eaa46

[22:11] *** Sgeo joined
