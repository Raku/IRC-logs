[00:42] *** jpn joined
[00:44] *** Manifest0 left
[00:47] *** jpn left
[00:49] *** jpn joined
[00:54] *** jpn left
[01:35] *** MasterDuke joined
[01:50] *** jpn joined
[01:55] *** jpn left
[02:35] *** hulk joined
[02:36] *** kylese left
[02:36] *** bent_fingers left
[02:45] *** MasterDuke left
[02:51] *** jpn joined
[02:54] *** MasterDuke joined
[02:56] *** jpn left
[02:57] *** bdju left
[03:00] *** bdju joined
[03:10] *** MasterDuke left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:26] *** londoed joined
[03:26] *** londoed_ joined
[03:28] *** londoed_ left
[03:52] *** jpn joined
[03:57] *** jpn left
[04:02] *** jpn joined
[04:07] *** jpn left
[04:28] *** londoed left
[04:29] *** londoed joined
[04:33] *** nine left
[04:33] *** camelia left
[04:37] *** nine joined
[04:39] *** camelia joined
[05:21] *** londoed left
[05:47] *** jpn joined
[05:52] *** jpn left
[06:02] *** Sgeo_ joined
[06:03] *** Sgeo left
[06:42] *** jpn joined
[06:47] *** jpn left
[06:47] *** bent_fingers joined
[06:48] *** CIAvash joined
[07:00] *** jpn joined
[07:07] *** jpn left
[07:34] *** CIAvash left
[07:50] *** abraxxa joined
[07:52] *** jpn joined
[08:00] *** jpn left
[08:46] *** jpn joined
[09:05] *** Sgeo_ left
[09:17] *** bent_fingers left
[09:31] *** sena_kun joined
[09:31] *** haxxelotto joined
[09:33] *** Manifest0 joined
[09:56] *** sena_kun left
[11:16] *** abraxxa left
[12:43] *** haxxelotto left
[13:14] *** haxxelotto joined
[13:58] *** jpn left
[14:10] *** jpn joined
[15:58] *** vrurg_ joined
[16:01] *** vrurg left
[16:01] *** Sgeo joined
[16:12] *** codesections1 joined
[16:17] *** japhb left
[16:21] *** japhb joined
[16:28] *** japhb left
[16:38] *** japhb joined
[16:41] *** jpn left
[16:42] *** codesections1 left
[16:43] *** japhb left
[17:32] *** poohman joined
[17:33] <poohman> m: say "hello"

[17:33] <camelia> rakudo-moar a4ac17207: OUTPUT: «hello␤»

[17:33] <tellable6> 2023-08-02T07:00:23Z #raku <siavash> poohman `my &test_modified = &test.assuming: @a;`

[17:34] *** japhb joined
[17:34] <poohman> m: my @test =[1 2 4]

[17:34] <camelia> rakudo-moar a4ac17207: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> my @test =[1⏏ 2 4]␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier␤        state…»

[17:35] <poohman> m: my @test;

[17:35] <camelia> rakudo-moar a4ac17207: ( no output )

[17:35] <poohman> @test.append(5)

[17:35] <poohman> say @test

[17:35] <poohman> m: @test.append(5)

[17:35] <camelia> rakudo-moar a4ac17207: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '@test' is not declared.  Perhaps you forgot a 'sub' if this␤was intended to be part of a signature?␤at <tmp>:1␤------> <BOL>⏏@test.append(5)␤»

[17:36] <poohman> m: my @test; @test.append(5)

[17:36] <camelia> rakudo-moar a4ac17207: ( no output )

[17:36] <poohman> m: my @test; @test.append(5); say @test;

[17:36] <camelia> rakudo-moar a4ac17207: OUTPUT: «[5]␤»

[17:37] <poohman> m: my @test; @test.append(5);@test.append(6) say @test;

[17:37] <camelia> rakudo-moar a4ac17207: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> y @test; @test.append(5);@test.append(6)⏏ say @test;␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        …»

[17:37] <poohman> m: my @test; @test.append(5);@test.append(6);say @test;

[17:37] <camelia> rakudo-moar a4ac17207: OUTPUT: «[5 6]␤»

[17:38] <poohman> m: my @test; @test.append(5);@test.append(6);@test[0].append(8);say @test;

[17:38] <camelia> rakudo-moar a4ac17207: OUTPUT: «Cannot resolve caller append(Int:D: Int:D); none of these signatures matches:␤    (Any:U \SELF: |values)␤  in block <unit> at <tmp> line 1␤␤»

[17:38] <poohman> Strange

[17:39] <poohman> I had this error message only when tried @test[1].append(), it worked for @test[0].append in my REPL

[17:40] <poohman> m: my @test; @test.append(5);@test.append(6);@test[0].append(8);say @test[0].WHICH;

[17:40] <camelia> rakudo-moar a4ac17207: OUTPUT: «Cannot resolve caller append(Int:D: Int:D); none of these signatures matches:␤    (Any:U \SELF: |values)␤  in block <unit> at <tmp> line 1␤␤»

[17:41] <poohman> m: my @test; @test.append(5);@test.append(6);@test[0].append(8);say @test[0];

[17:41] <camelia> rakudo-moar a4ac17207: OUTPUT: «Cannot resolve caller append(Int:D: Int:D); none of these signatures matches:␤    (Any:U \SELF: |values)␤  in block <unit> at <tmp> line 1␤␤»

[17:41] <poohman> m: my @test; @test.append(5);@test.append(6);@test[0].append(8);say @test;

[17:41] <camelia> rakudo-moar a4ac17207: OUTPUT: «Cannot resolve caller append(Int:D: Int:D); none of these signatures matches:␤    (Any:U \SELF: |values)␤  in block <unit> at <tmp> line 1␤␤»

[17:41] <poohman> m: my @test; @test.append(5);@test.append(6);say @test[0].WHICH;

[17:41] <camelia> rakudo-moar a4ac17207: OUTPUT: «Int|5␤»

[17:42] <poohman> I somehow made @test[0] also an array in my REPL

[17:43] <poohman> m: my @test; @test.append(5);my @test1 = @test,5;@test.append(6);say @test[0].WHICH;

[17:43] <camelia> rakudo-moar a4ac17207: OUTPUT: «Int|5␤»

[17:43] <poohman> m: my @test; @test.append(5);my @test1 = @test,5;@test.append(6);say @test1[0].WHICH;

[17:43] <camelia> rakudo-moar a4ac17207: OUTPUT: «Array|6477495559048␤»

[17:43] <poohman> ok got it

[17:44] <poohman> sorry for making a mess, wanted to earnestly ask a question

[17:45] *** jgaz joined
[17:48] *** japhb left
[17:51] *** bent_fingers joined
[17:52] *** japhb joined
[17:57] *** japhb left
[18:13] *** poohman left
[18:13] *** sena_kun joined
[18:23] *** japhb joined
[18:29] *** japhb left
[18:40] *** japhb joined
[18:47] *** japhb left
[18:51] *** haxxelotto left
[19:12] *** japhb joined
[19:17] *** japhb left
[19:53] *** japhb joined
[19:59] *** japhb left
[20:24] *** japhb joined
[20:52] *** xinming left
[20:53] *** xinming joined
[21:00] *** lizmat_ left
[21:00] *** lizmat joined
[21:12] *** notna joined
[21:16] *** notna left
[21:25] <tbrowder__> hi, i'm getting core dumps again. are there any ways with a modern raku to analyze it?

[21:26] <tbrowder__> i have tried running with -ll-exception with no results at all

[21:27] <tbrowder__> i have not tried jnthn's old module because of its warning about being old.

[21:28] <tbrowder__> but i'll give it a try now...

[22:00] *** jpn joined
[22:11] *** jpn left
[22:18] *** jgaz left
[22:56] *** jpn joined
[23:01] *** jpn left
[23:19] *** japhb left
[23:58] *** japhb joined
