[00:03] *** ky1 left
[00:03] *** ky1 joined
[00:22] *** ky1 left
[00:23] *** ky1 joined
[00:32] *** ky1 left
[00:33] *** ky1 joined
[00:42] *** ky1 left
[00:43] *** ky1 joined
[00:52] *** ky1 left
[00:53] *** ky1 joined
[01:02] *** ky1 left
[01:03] *** ky1 joined
[01:12] *** ky1 left
[01:13] *** ky1 joined
[01:22] *** ky1 left
[01:23] *** ky1 joined
[01:28] *** Manifest0 left
[01:29] *** stanrifkin left
[01:30] *** hulk joined
[01:31] *** kylese left
[01:32] *** ky1 left
[01:33] *** ky1 joined
[01:42] *** ky1 left
[01:43] *** ky1 joined
[01:45] *** Aedil joined
[01:53] *** ky1 left
[01:53] *** ky1 joined
[02:02] *** ky1 left
[02:03] *** ky1 joined
[02:05] *** hulk left
[02:06] *** kylese joined
[02:13] *** ky1 left
[02:13] *** ky1 joined
[02:15] *** kylese left
[02:15] *** kylese joined
[02:22] *** ky1 left
[02:23] *** ky1 joined
[02:23] *** Xliff joined
[02:30] *** kylese left
[02:32] *** ky1 left
[02:33] *** ky1 joined
[02:34] *** kylese joined
[02:37] <Xliff> \o

[02:37] <Xliff> Hass setting function pointers through NativeCall gotten any easier?

[02:38] <Xliff> timo: I remember you came up with a way to do it, but I can't find your example through the search on logs.liz.nl

[02:42] *** ky1 left
[02:43] *** ky1 joined
[02:51] <Xliff> use NativeCall; sub sprintf-v(Blob, Str, & () ) returns int64 is native is symbol('sprintf') { * }; sub set_func_pointer( \func, &sprint) { my $buf = buf8.allocate(20); my $len = &sprint($buf, '%lld', func); $buf.say; my $b =$buf.subbuf(^$len).decode.Int; say $b; Pointer.new($b) }; sub a { 1 }; say set_func_pointer(&a, &sprintf-v)

[02:51] <evalable6> Xliff, rakudo-moar c32cb4f6a: OUTPUT: «Buf[uint8]:0x<31 33 39 38 31 37 39 37 33 35 30 …»

[02:51] <evalable6> Xliff, Full output: https://gist.github.com/f19f20d37f92696b4f11e5a569b4f70b

[02:53] *** ky1 left
[02:53] *** ky1 joined
[02:57] <Xliff> What does "Native callback must be a code handle" mean?

[03:02] *** ky1 left
[03:03] *** ky1 joined
[03:12] *** ky1 left
[03:13] *** ky1 joined
[03:16] <discord-raku-bot> <antononcube> @librasteve Here is a Markdown file with lists of packages for doing Data Science and LLMs: https://github.com/antononcube/RakuForPrediction-blog/blob/main/Articles/Raku-for-Data-Science-and-LLMs.md

[03:19] <Xliff> What is the proper way to test for Any?

[03:20] <Xliff> Not .defined, I want to know if a container contains the type object Any

[03:20] <Xliff> m: say Any =:= Any

[03:20] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «True␤»

[03:20] <Xliff> m: say Any === Any

[03:20] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «True␤»

[03:20] <Xliff> m: say Any === Int

[03:20] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «False␤»

[03:20] <Xliff> m: my $a; say $a === Int

[03:20] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «False␤»

[03:20] <Xliff> m: my $a; say $a =:= Int

[03:20] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «False␤»

[03:21] <Xliff> m: my $a; say $a =:= Any

[03:21] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «False␤»

[03:22] *** ky1 left
[03:23] *** ky1 joined
[03:33] *** ky1 left
[03:33] *** ky1 joined
[03:43] *** ky1 left
[03:43] *** ky1 joined
[03:50] <ugexe> m: say 1.isa(Any); say Any.isa(any); say Mu.isa(any);

[03:50] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «===SORRY!===␤Function "any" may not be called without arguments (please use () or whitespace to denote arguments, or &any to refer to the function as a noun, or use .any if you meant to call it as a method on $_)␤at <tmp>:1␤------> say 1…»

[03:50] <ugexe> m: say 1.isa(Any); say Any.isa(Any); say Mu.isa(Any);

[03:50] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «True␤True␤False␤»

[03:50] <ugexe> yeah that isn't what you asked

[03:53] *** ky1 left
[03:53] *** ky1 joined
[04:02] *** ky1 left
[04:03] *** ky1 joined
[04:11] *** teatime left
[04:12] *** ky1 left
[04:13] *** ky1 joined
[04:22] *** ky1 left
[04:23] *** ky1 joined
[04:32] *** ky1 left
[04:33] *** ky1 joined
[04:43] *** ky1 left
[04:43] *** ky1 joined
[04:52] *** ky1 left
[04:53] *** ky1 joined
[05:03] *** ky1 left
[05:03] *** ky1 joined
[05:13] *** ky1 left
[05:13] *** ky1 joined
[05:23] *** ky1 left
[05:23] *** ky1 joined
[05:32] *** ky1 left
[05:33] *** ky1 joined
[05:42] *** ky1 left
[05:43] *** ky1 joined
[05:52] *** ky1 left
[05:53] *** ky1 joined
[06:03] *** ky1 left
[06:03] *** ky1 joined
[06:13] *** ky1 left
[06:13] *** ky1 joined
[06:22] *** ky1 left
[06:23] *** ky1 joined
[06:32] *** ky1 left
[06:33] *** ky1 joined
[06:43] *** ky1 left
[06:43] *** ky1 joined
[06:53] *** ky1 left
[06:53] *** ky1 joined
[07:00] <discord-raku-bot> <librasteve> thanks

[07:02] *** ky1 left
[07:03] *** ky1 joined
[07:12] *** ky1 left
[07:13] *** ky1 joined
[07:22] *** ky1 left
[07:23] *** ky1 joined
[07:32] *** ky1 left
[07:33] *** ky1 joined
[07:43] *** ky1 left
[07:43] *** ky1 joined
[07:46] *** sena_kun joined
[07:53] *** ky1 left
[07:53] *** ky1 joined
[08:02] *** ky1 left
[08:03] *** ky1 joined
[08:12] *** ky1 left
[08:13] *** ky1 joined
[08:22] *** ky1 left
[08:23] *** ky1 joined
[08:32] <Xliff> ugexe: Yeah. Thanks for trying, though. I didn't know about .isa

[08:33] *** ky1 left
[08:33] <Xliff> ugexe: Is that related to .ACCEPTS?

[08:33] *** ky1 joined
[08:33] <Xliff> ugexe: So I'm down to this...

[08:33] <Xliff> m: say Any === Any; say 1 === Any; say Mu === Any

[08:33] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «True␤Cannot resolve caller infix:<===>(Mu:U, Any:U); none of these signatures matches:␤    ($? --> Bool::True)␤    (\a, \b --> Bool)␤    (Enumeration:D $a, Enumeration:D $b --> Bool)␤    (Int:D $a, Int:D $b --> Bool)␤    (int $a, int $b --…»

[08:34] <Xliff> m: say Any === Any; say 1 === Any; 

[08:34] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «True␤False␤»

[08:34] <Xliff> say "===" doesn't work on Mu, oddly enough. We won't need to go that far down,

[08:43] *** ky1 left
[08:43] *** ky1 joined
[08:53] *** ky1 left
[08:53] *** ky1 joined
[09:03] *** ky1 left
[09:03] *** ky1 joined
[09:12] *** ky1 left
[09:13] *** ky1 joined
[09:22] *** ky1 left
[09:23] *** ky1 joined
[09:27] *** Sgeo left
[09:32] *** ky1 left
[09:33] *** ky1 joined
[09:37] *** Manifest0 joined
[09:42] *** ky1 left
[09:43] *** ky1 joined
[09:45] <lizmat> m: say Mu === Mu

[09:45] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «Cannot resolve caller infix:<===>(Mu:U, Mu:U); none of these signatures matches:␤    ($? --> Bool::True)␤    (\a, \b --> Bool)␤    (Enumeration:D $a, Enumeration:D $b --> Bool)␤    (Int:D $a, Int:D $b --> Bool)␤    (int $a, int $b --> Bool)…»

[09:45] <lizmat> heh

[09:46] <lizmat> m: say IterationEnd === IterationEnd

[09:46] <camelia> rakudo-moar c32cb4f6a: OUTPUT: «Cannot resolve caller infix:<===>(); none of these signatures matches:␤    ($? --> Bool::True)␤    (\a, \b --> Bool)␤    (Enumeration:D $a, Enumeration:D $b --> Bool)␤    (Int:D $a, Int:D $b --> Bool)␤    (int $a, int $b --> Bool)␤    (uin…»

[09:46] <lizmat> heh

[09:52] *** ky1 left
[09:53] *** ky1 joined
[10:02] *** ky1 left
[10:03] *** ky1 joined
[10:06] *** lizmat_ joined
[10:09] *** lizmat left
[10:12] *** ky1 left
[10:13] *** ky1 joined
[10:22] *** ky1 left
[10:23] *** ky1 joined
[10:27] <discord-raku-bot> <c.a53> Hello. Are the final release binaries of Comma archived somewhere?

[10:28] <discord-raku-bot> <c.a53> (I know about the current plugin develpoment, but it still crashes a lot on my  Windows machine inside IDEA)

[10:32] *** ky1 left
[10:32] *** lizmat_ left
[10:33] *** lizmat joined
[10:33] *** ky1 joined
[10:43] *** ky1 left
[10:43] *** ky1 joined
[10:53] *** ky1 left
[10:53] *** ky1 joined
[10:54] <discord-raku-bot> <antononcube> @c.a53 Most likely not. Maybe this can repository can give some hints: https://github.com/Raku/intellij-ide-plugin?tab=readme-ov-file#comma-source-dump

[10:56] <discord-raku-bot> <antononcube> But, for me, the old CommaIDE was crashing a lot, on macOS. The currently actively developed plugin is producing hangs initially, but those gradually got resolved.

[11:02] <ab5tract> c.a63: what version of the comma plugin have you been running? Stability should be much stronger in the last two or three beta releases

[11:03] *** ky1 left
[11:03] *** ky1 joined
[11:09] <ab5tract> It also requires IDEA 2024.2+

[11:12] *** ky1 left
[11:13] *** ky1 joined
[11:15] <discord-raku-bot> <c.a53> 2.0, beta 21 on IDEA 2024.2.3 Ultimate

[11:17] <discord-raku-bot> <c.a53> When opening a project (previously edited by Comma 2023.04 Community) it tells me to select an SDK and then, before I have any time to navigate through the file structure to find Rakudo, whole IDE freezes and must be killed by task manager.

[11:21] <discord-raku-bot> <c.a53> Previously I was trying beta 15, created a new project and before having an opportunity to write more than 25 lines it froze during editing in the same way, than again after reopening and few edits. Inside IDE REPL didn't work at all.

[11:22] *** ky1 left
[11:22] <discord-raku-bot> <c.a53> My current Rakudo version is 2024.08

[11:23] <discord-raku-bot> <c.a53> (Rakudo Star distribution)

[11:23] *** ky1 joined
[11:23] <discord-raku-bot> <antononcube> I have not tried the REPL yet with new comma-plug-in .

[11:26] <ab5tract> Yeah I haven’t focused on the REPL so thanks for raising it to my attention

[11:26] <ab5tract> What I can say is that old projects are a problem

[11:27] <ab5tract> If at all possible use ‘New Project from Existing Sources’

[11:27] <ab5tract> And better yet, it’s an option, is clone the repo and open it that way

[11:28] <discord-raku-bot> <c.a53> I use default non unicode locale on Windows 10 (as switching to unicode breaks some other programs I use), so that might be a problem as well (but it works mostly fine in the old standalone Comma 2023.04 installation... OK unless I start inputting strings like "ěšč").

[11:28] <ab5tract> As far as I know that shouldn’t be a problem

[11:29] <ab5tract> But there are indexes built from an old versions being loaded with different class names by the new plugin

[11:29] <ab5tract> As well as some other configuration fields that have changed in the project settings files

[11:30] <ab5tract> I try to identify old comma projects and force a clean on them but using New Project from Existing Spurces already does that

[11:31] <ab5tract> So I highly recommend against opening an old project directly

[11:32] <ab5tract> Also, I try to respond to tickets or reported issues almost immediately, so please consider documenting your issues on GitHub or sharing them here

[11:34] <ab5tract> Thanks for trying the new comma and with a bit of luck and time we can nail down any annoyances

[11:42] *** ky1 left
[11:43] *** ky1 joined
[11:44] <discord-raku-bot> <c.a53> Tried it as a new project now, and it allowed me to select the SDK and seems to work. I'll try to report any issues I run into. Thanks for help and all the work put into keeping Comma alive.

[11:45] <ab5tract> Awesome! Ill take a look at the repl situation next

[11:52] *** ky1 left
[11:53] *** ky1 joined
[11:56] *** sena_kun left
[12:02] *** ky1 left
[12:03] <discord-raku-bot> <c.a53> 👍

[12:03] *** ky1 joined
[12:22] *** ky1 left
[12:23] *** ky1 joined
[12:32] *** ky1 left
[12:33] *** ky1 joined
[12:39] <discord-raku-bot> <antononcube> @ab5tract Personal opinion — yes having a Raku REPL in IntelliJ / Comma is very nice, but I do not see it as high priority. (A moderate one.)

[12:41] <discord-raku-bot> <antononcube> With the latest refactoring of “Terminal::LineEditor” I can use Raku in Terminal.app (on macOS.) I also use VSCode for Raku explorations / programming / scripts.

[12:43] *** ky1 left
[12:43] *** ky1 joined
[12:44] <discord-raku-bot> <antononcube> BTW, for a long time — until a week ago —  in order have a decent Terminal.app “experience” with Raku I had to use “Jupyter::Kernel”.

[12:47] <discord-raku-bot> <antononcube> @c.a53 Do you know / use AutoHotKey, by any chance? If yes, how easy it is to write a script that reproduces your crashes using IntelliJ and Comma?

[12:52] *** ky1 left
[12:53] *** ky1 joined
[13:02] *** ky1 left
[13:03] *** ky1 joined
[13:03] <ab5tract> antononcube: I agree with you about the built in REPlL. I’ll probably still look into it because I generally want feature parity with the older editions where possible. Or at least removing the indication that it is a feature, until it can be added back in later.

[13:05] <ab5tract> I also have a long term plan of seeing we can get Jupyter running in IntelliJ’s built in browser

[13:06] <discord-raku-bot> <antononcube> That would be nice. I had success running Jupyter notebooks with Raku kernel in IntelliJ in the past, but the most recent changes in IntelliJ seem to have broken that.

[13:10] <discord-raku-bot> <c.a53> @antononcube My knowledge of AutoHotKey is minimal, so I cannot help here. If AutoHotKey was able to record the key presses during editing, then replay them to reproduce the crash... yes, that would be useful. It's hard to remember what precisely I was typing when the crash happened and as the crash is mostly associated with complete IDE freeze, it's usually impossible to use the IntelliJs issue reporting dialogue after

[13:10] <discord-raku-bot> the crash (it may display, but cannot be interacted with).

[13:11] <discord-raku-bot> <antononcube> Yeah, I never successfully used IntelliJ's crash dialogue. (Tried many time with CommaIDE.)

[13:12] *** ky1 left
[13:13] *** ky1 joined
[13:18] *** xinming left
[13:19] *** xinming joined
[13:22] *** ky1 left
[13:23] *** ky1 joined
[13:32] *** ky1 left
[13:33] *** ky1 joined
[13:42] *** ky1 left
[13:43] *** ky1 joined
[13:53] *** ky1 left
[13:53] *** ky1 joined
[14:02] *** ky1 left
[14:03] *** ky1 joined
[14:22] *** ky1 left
[14:23] *** ky1 joined
[14:32] *** ky1 left
[14:33] *** ky1 joined
[14:52] *** ky1 left
[14:53] *** ky1 joined
[14:53] <discord-raku-bot> <holmdunc> JetBrains aren't packing the parachutes properly!

[14:54] <El_Che> need to test the new comma. Hopefully will the plugin road limit the breakage with intellij updates

[14:54] <tellable6> 2024-10-24T22:29:33Z #raku-dev <jdv> El_Che the 2024.10 release happened

[15:01] <El_Che> ok, kicking the builds

[15:02] *** ky1 left
[15:03] *** ky1 joined
[15:12] *** ky1 left
[15:13] *** ky1 joined
[15:14] <El_Che> t/02-rakudo/15-gh_1202.t and t/12-rakuast/xx-fixed-in-rakuast.rakutest are complaining :)

[15:22] *** ky1 left
[15:23] *** ky1 joined
[15:26] <El_Che> but it looks they are floppers

[15:32] *** ky1 left
[15:33] *** ky1 joined
[15:42] *** ky1 left
[15:43] *** ky1 joined
[15:46] <El_Che> https://github.com/nxadm/rakudo-pkg/releases/tag/v2024.10

[15:46] <El_Che> published, packaes in the respective repositories

[15:52] *** ky1 left
[15:53] *** ky1 joined
[16:03] *** ky1 left
[16:03] *** ky1 joined
[16:13] *** ky1 left
[16:13] *** ky1 joined
[16:33] *** ky1 left
[16:33] *** ky1 joined
[16:43] *** ky1 left
[16:43] *** ky1 joined
[16:52] *** ky1 left
[16:53] *** ky1 joined
[17:03] *** ky1 left
[17:03] *** ky1 joined
[17:13] *** ky1 left
[17:13] *** ky1 joined
[17:22] *** ky1 left
[17:23] *** ky1 joined
[17:33] *** ky1 left
[17:33] *** ky1 joined
[17:42] *** ky1 left
[17:43] *** ky1 joined
[17:52] *** ky1 left
[17:53] *** ky1 joined
[18:01] *** maylay_ left
[18:03] *** ky1 left
[18:03] *** ky1 joined
[18:06] *** maylay joined
[18:12] *** ky1 left
[18:13] *** ky1 joined
[18:22] *** ky1 left
[18:23] *** ky1 joined
[18:32] *** ky1 left
[18:33] *** ky1 joined
[18:42] *** Aedil left
[18:43] *** ky1 left
[18:43] *** ky1 joined
[18:53] *** ky1 left
[18:53] *** ky1 joined
[19:02] *** ky1 left
[19:03] *** ky1 joined
[19:12] *** ky1 left
[19:13] *** ky1 joined
[19:15] *** Sgeo joined
[19:23] *** ky1 left
[19:23] *** ky1 joined
[19:32] *** ky1 left
[19:33] *** ky1 joined
[19:42] *** ky1 left
[19:43] *** ky1 joined
[19:52] *** ky1 left
[19:53] *** ky1 joined
[19:53] *** cm left
[20:02] *** ky1 left
[20:03] *** ky1 joined
[20:12] *** ky1 left
[20:13] *** ky1 joined
[20:20] *** stanrifkin joined
[20:22] *** ky1 left
[20:23] *** ky1 joined
[20:32] *** ky1 left
[20:33] *** ky1 joined
[20:42] *** ky1 left
[20:43] *** ky1 joined
[20:52] *** rapidcow joined
[20:52] *** ky1 left
[20:53] *** ky1 joined
[20:54] <discord-raku-bot> <librasteve> El_Che: I recommend the new comma - but as you mention, it will need active development to keep pace with the current IntelliJ build ... before ab5tracts' rescue, it would often be necessary to have an older IntelliJ version just to run the Comma plugin in parallel with the current version for new developments

[20:56] *** rapidcow left
[21:02] <discord-raku-bot> <antononcube> @librasteve I still keep and use the most recent "old" CommaIDE for macOS.

[21:02] *** ky1 left
[21:03] *** ky1 joined
[21:04] <discord-raku-bot> <librasteve> me too - in general it is the best experience for pure raku code dev and I would love it if we could continue to enjoy both a standalone CommaIDE and an IntelliJ IDEA Comma plugin - my workflow is to use CommaIDE for pleasure and IntelliJ + Comma for work (and this is useful for hybrid projects - raku + Rust for example)

[21:06] <discord-raku-bot> <librasteve> but I would rather we (ie @ab5stract) ensured that the Comma plugin is kept in synch with the latest IntelliJ (which I suspect is quite demanding) rather than having both CommaIDE and the Comma plugin lag the current version

[21:06] <discord-raku-bot> <antononcube> Right, I mentioned this a few times -- I use CLion with Comma-plugin for NativeCall projects.

[21:07] <discord-raku-bot> <antononcube> Here is an example:

[21:07] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1299841828857577492/Raku-NativeCall-project-in-CLion-with-Raku-comma-2.0-plugin.png?ex=671eab89&is=671d5a09&hm=87eec15ac4f196a24cd2fc2381a0b1185299ba5fccdeb6787fd4dc610a3225e2&

[21:08] <discord-raku-bot> <librasteve> yes - I agree ... CommaIDE is a "very nice to have" but the workman tool is the Comma Plugin

[21:08] <discord-raku-bot> <librasteve> did you get Jupyter raku kernel to run in IntellllliJ ?

[21:08] *** sena_kun joined
[21:09] <discord-raku-bot> <antononcube> Before the latest updates of IntelliJ yes. Maybe they still do in PyCharm. (I will check.)

[21:12] <discord-raku-bot> <librasteve> hmmm - whats the latest version number that works will Jupyter raku? (maybe I will downgrade, maybe that will kill Comma Plugin)

[21:12] *** ky1 left
[21:13] *** ky1 joined
[21:16] <discord-raku-bot> <antononcube> I am not sure. I have to say I am getting too lazy to specify the "managed Jupyter server" in IntelliJ...

[21:16] <discord-raku-bot> <antononcube> My biggest problem with IntelliJ Jupyter with Raku-kernel is that I can plot graphics using "JavaScript::D3".

[21:17] <discord-raku-bot> <antononcube> ... cannot plot...

[21:18] <discord-raku-bot> <librasteve> yeah - ok probably better to run jupyter outside the IDE in that case I guess

[21:18] <discord-raku-bot> <librasteve> (too many movng parts)?

[21:22] <discord-raku-bot> <antononcube> @librasteve Just checked -- with the latest IntelliJ Jupyter with Raku-kernel can be run:

[21:22] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1299845662795497532/IntelliJ-Jupyter-Raku-kernel.png?ex=671eaf1b&is=671d5d9b&hm=0997cb7fcc2762e8f8c16c7f84ea45c36108ea50724d628a89c8b75a24c14bc8&

[21:22] *** dustinm`_ left
[21:22] *** ky1 left
[21:24] *** ky1 joined
[21:25] <discord-raku-bot> <librasteve> ok - I will try

[21:32] <El_Che> yes, the IDE was nice, but I suppose most of us are not pure Raku devs and need support for other languages as well

[21:32] *** ky1 left
[21:33] *** ky1 joined
[21:37] *** dustinm` joined
[21:39] <discord-raku-bot> <antononcube> @El_Che VS Code is doing that nicely. I wanted to use Raku with Emacs, but the Raku-mode for Emacs is too basic.

[21:42] *** ky1 left
[21:43] *** ky1 joined
[21:47] <discord-raku-bot> <librasteve> &afk

[21:49] <timo> would be neat if someone were to build a tree-sitter grammar for raku, though i'm not sure if tree sitter is powerful enough to make some of the more advanced things not a royal pain

[21:54] <timo> and it's probably not easy to make tree-sitter grammars react to customizations like custom operators, and especially not to slangs

[22:03] *** ky1 left
[22:03] *** ky1 joined
[22:10] *** cm joined
[22:13] *** ky1 left
[22:13] *** ky1 joined
[22:23] *** ky1 left
[22:23] *** ky1 joined
[22:42] *** ky1 left
[22:43] *** ky1 joined
[22:52] *** ky1 left
[22:53] *** ky1 joined
[22:59] *** sena_kun left
[23:02] *** ky1 left
[23:03] *** ky1 joined
[23:12] *** ky1 left
[23:13] *** ky1 joined
[23:22] *** ky1 left
[23:23] *** ky1 joined
[23:32] *** ky1 left
[23:33] *** ky1 joined
[23:42] *** ky1 left
[23:43] *** ky1 joined
[23:44] *** Xliff left
[23:52] *** ky1 left
[23:53] *** ky1 joined
