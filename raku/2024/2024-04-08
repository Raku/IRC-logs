[00:03] *** jpn joined
[00:07] *** jpn left
[00:38] *** coleman left
[00:40] *** coleman joined
[00:44] *** funnerflipvr3 joined
[01:14] *** funnerflipvr3 left
[01:30] *** hulk joined
[01:31] *** kylese left
[01:43] *** kjp left
[01:45] *** kjp joined
[02:13] *** Xliff joined
[02:13] <Xliff> \o

[02:15] *** hulk left
[02:15] *** kylese joined
[03:08] *** teatime joined
[03:22] *** cm left
[03:22] *** cm joined
[05:01] *** jpn joined
[05:05] *** jpn left
[06:00] *** Sgeo left
[06:49] *** jpn joined
[06:53] *** jpn left
[07:32] *** ptc joined
[08:07] *** El_Che left
[08:08] *** El_Che joined
[08:23] *** jpn joined
[08:38] *** sena_kun joined
[08:43] *** haxxelotto joined
[09:02] *** abraxxa joined
[09:22] *** r1111l joined
[09:23] *** r1111l left
[10:07] *** melezhik joined
[10:07] <melezhik> o/

[10:07] <melezhik> what is quick way to check if string is in base64 ?

[10:16] <discord-raku-bot> <antononcube> Good question. One way is, of course, checking does decoding It makes sense.

[10:17] <discord-raku-bot> <antononcube> What did ChatGPT say?  üôÇ

[10:17] <melezhik> https://stackoverflow.com/questions/8571501/how-to-check-whether-a-string-is-base64-encoded-or-not

[10:17] <melezhik> ¬†I need some sort of help to port this regex to Raku

[10:26] <lizmat> melezhik: off the top of my head: / ^(<[A..Za..z0..9+/]> ** 4)* (<[A..Za..z0..9+/]> ** 3 "=" | <[A..Za..z0..9+/]> ** 2 "==")? $/

[10:27] <lizmat> without positional capture: / ^[<[A..Za..z0..9+/]> ** 4]* [<[A..Za..z0..9+/]> ** 3 "=" | <[A..Za..z0..9+/]> ** 2 "=="]? $/

[10:30] <discord-raku-bot> <melezhik.> Liz++

[10:30] <discord-raku-bot> <melezhik.> Appreciate it

[10:36] *** melezhik left
[11:39] *** nine left
[11:39] *** nine joined
[12:44] *** ptc left
[12:45] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/04/08/2024-14-15-1k-75/

[12:59] *** haxxelotto left
[13:31] *** sena_kun left
[13:32] *** sena_kun joined
[13:44] *** haxxelotto joined
[13:45] <discord-raku-bot> <antononcube> @lizmat Thank you for your efforts on the rakudo-weekly. (And otherwise.)

[13:59] <tbrowder> lizmat: ditto üëè

[14:06] <tbrowder> librasteve: you mentioned multilingual modules. see my Date::Names for one way to handle it.

[14:07] <tbrowder> probably won't quite fit yr use case

[14:14] <discord-raku-bot> <antononcube> @tbrowder Which use case you are refering too. (Cannot easily find it above...)

[14:41] *** vlad joined
[14:42] *** vlad left
[14:46] *** vlad joined
[14:53] <tbrowder> oh, in the weekly, one of the questions about dynamic module names, thought it was librasteve

[15:16] *** perlbot left
[15:16] *** simcop2387 left
[15:25] *** ptc joined
[15:35] *** simcop2387 joined
[15:37] *** perlbot joined
[15:47] *** gfldex left
[16:18] *** abraxxa left
[16:28] *** simcop2387 left
[16:28] *** perlbot left
[16:34] *** perlbot joined
[16:34] *** simcop2387 joined
[16:38] *** teatwo joined
[16:39] *** [Coke]_ joined
[16:39] *** nebuchad` joined
[16:40] *** Maximus joined
[16:42] *** [Coke] left
[16:42] *** teatime left
[16:42] *** nebuchadnezzar left
[16:42] *** Sevalecan left
[16:42] *** discord-raku-bot left
[16:42] *** Maximus is now known as Sevalecan

[16:43] *** discord-raku-bot joined
[16:44] *** gfldex joined
[16:51] *** simcop2387 left
[16:51] *** perlbot left
[16:53] *** teatwo left
[16:53] *** teatwo joined
[16:56] *** perlbot joined
[16:57] *** simcop2387 joined
[17:12] *** MasterDuke left
[17:18] <discord-raku-bot> <librasteve> tbrowder: tx! will take a peek

[17:20] <discord-raku-bot> <librasteve> yes - good ... half my batttle is solved by this approach ... thanks for the steer

[17:22] <discord-raku-bot> <librasteve> the way that Physics::Measure works is that a bunch of "label" classes are defined like this: class Distance is Measure is export {}; `class Time is Measure is export {}; `class Speed is Measure is export {}; ...

[17:23] <discord-raku-bot> <librasteve> then you can go my $d = 5m; my $t = 10s; my $s = $d/$t; say $s.WHAT; # Speed

[17:24] <discord-raku-bot> <librasteve> so I use the type system to reject badly formed math like say $d + $t; #cannot add two different types

[17:25] <discord-raku-bot> <librasteve> I think from a design pov that this is pretty natural - in nature Distance is truly a different type of thing to Time ...

[17:30] <discord-raku-bot> <librasteve> ... BUT when it comes to localization I am thinking ahead to having locallized class names like Longueur, Temps and Vitesse ... so the missing link for me is to be able to load these from an fr.rakumod and then subsequently export them out via the general use statement where eg Date::Names has something like use Date::Names :lang<de<;

[17:30] <discord-raku-bot> <librasteve> use Date::Names :lang<fr>;

[17:30] <discord-raku-bot> <librasteve> and so on

[17:32] <discord-raku-bot> <librasteve> anyway - still open to new ideas on the SO question ... https://stackoverflow.com/questions/78268653/how-can-i-dynamically-export-classes-in-raku

[17:34] <discord-raku-bot> <librasteve> appreciate all the help!

[18:56] *** haxxelotto left
[19:07] *** tib left
[19:10] *** jpn left
[19:12] *** tib_ joined
[19:44] *** jpn joined
[19:48] <Geth> ¬¶ docker: b4705bce4e | AntonOks++ | 4 files

[19:48] <Geth> ¬¶ docker: Bump to 2024.03 and change alpine to alpine:latest

[19:48] <Geth> ¬¶ docker: review: https://github.com/Raku/docker/commit/b4705bce4e

[19:48] <Geth> ¬¶ docker: 64657bbc83 | (Anton Oks)++ (committed using GitHub Web editor) | 4 files

[19:48] <Geth> ¬¶ docker: Merge pull request #64 from AntonOks/bump_to_2024.03

[19:48] <Geth> ¬¶ docker: 

[19:48] <Geth> ¬¶ docker: Bump to 2024.03 and change alpine to alpine:latest

[19:48] <Geth> ¬¶ docker: review: https://github.com/Raku/docker/commit/64657bbc83

[19:49] *** ptc left
[20:01] *** vlad left
[20:09] <discord-raku-bot> <dr.shuppet> Do you require the class name, as returned by .^name, to be localized, or is having only the symbol name localized fine?

[20:10] *** jpn left
[20:16] <discord-raku-bot> <dr.shuppet> If the latter is fine, you can just export different names in different export packages:  $ cat Physics.rakumod  unit module Physics;  my class Length {   has Int $.value; }  my package EXPORT::en {   OUR::<Length> := Length; }  my package EXPORT::de {   OUR::<L√§nge> := Length; } $ raku -I. -e 'use Physics :en; say Length;' (Length) $ raku -I. -e 'use Physics :de; say L√§nge;' (Length) 

[20:25] <discord-raku-bot> <dr.shuppet> I'm quite sure the name can also be changed by using a modified metaclass

[21:04] *** jpn joined
[21:05] *** sena_kun left
[21:20] *** jpn left
[21:24] *** eseyman left
[21:25] *** cleo joined
[21:29] *** manu_ joined
[21:31] *** manu_ is now known as eseyman

[21:54] *** jpn joined
[22:03] *** jpn left
[22:06] *** hudo left
[22:08] *** hudo joined
[22:48] *** Sgeo joined
[22:49] *** jpn joined
[22:53] *** jpn left
