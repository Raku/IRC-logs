[00:08] *** Maylay joined
[01:01] *** thaewrapt left
[01:23] *** kylese left
[01:23] *** kylese joined
[01:42] *** MasterDuke joined
[02:03] *** Maylay left
[02:12] *** Maylay joined
[02:15] *** kylese left
[02:15] *** kylese joined
[02:30] *** kylese left
[02:34] *** kylese joined
[02:52] *** Maylay left
[02:56] *** Maylay joined
[03:17] *** MasterDuke left
[03:20] *** teatime left
[04:10] *** Maylay left
[04:18] *** Maylay joined
[05:01] *** wayland76 joined
[05:11] <wayland76> m: enum Bla (a => sub {})

[05:11] <camelia> rakudo-moar d57b4109a: OUTPUT: «Sub object coerced to string (please use .gist or .raku to do that)␤  in any type_declarator at /home/camelia/rakudo-m-inst-1/share/perl6/lib/Perl6/Grammar.moarvm line 1␤»

[05:12] <wayland76> Was just checking if https://github.com/Raku/old-issue-tracker/issues/5818 has been fixed.  That code generates a different error than it does on my local (which is an older Raku)

[05:26] *** guifa left
[06:05] *** bd3i left
[06:06] *** bd3i joined
[06:11] *** dutchie left
[06:12] *** dutchie joined
[06:35] *** avar left
[06:35] *** avar joined
[08:23] *** defaultxr left
[08:40] *** timo1 left
[08:41] *** timo1 joined
[08:47] *** sena_kun joined
[09:07] *** destroycomputers left
[09:07] *** destroycomputers joined
[09:19] *** Maylay left
[09:22] *** Maylay joined
[09:49] *** Sgeo left
[10:05] *** teatime joined
[10:10] *** leedo left
[10:11] *** leedo joined
[10:22] <lizmat> wayland76: the first part of that issue was easily fixed, the second part will be harder

[10:22] <lizmat> https://github.com/rakudo/rakudo/commit/d0eb6c6f18

[10:36] <wayland76> I updated my docker image to rakudo-star:latest, and got: Cannot auto-generate a proto method for 'Int' in the setting

[10:37] <wayland76> In the end I gave up on the enum though.  

[10:37] <lizmat> could you gist a stack trace ?

[10:37] <lizmat> yeah, the enum case is gnarly

[10:37] <lizmat> enums in general are gnarly

[10:37] <lizmat> from an implementation PoV

[10:38] *** guifa joined
[10:38] <wayland76> For testing on my local, I was just using: https://github.com/rakudo/rakudo/commit/d0eb6c6f18

[10:38] <wayland76> Gah, sorry, 

[10:39] <wayland76> Using: raku -e 'enum Bla (a => sub {})'

[10:39] <wayland76> (wrong paste-buffer on Linux :p )

[10:39] <lizmat> that should be clean now?

[10:39] <wayland76> Is there a way I can turn that one-liner into having a gist stack trace?  

[10:40] <lizmat> --ll-exception ?

[10:42] <wayland76> lizmat: Which raku are you wanting the stack trace on?  (Your options are: a) My local, (easy, but it's 2022.04), or b) the one in a docker container (easy, and it's currently 2024.05), or c) Something based on the commit you just pasted (is there a docker container I can use for that?)

[10:43] <wayland76> (can confirm that stack trace works on my local, btw)

[10:43] <lizmat> we're talking about "Cannot auto-generate a proto method for 'Int' in the setting" right ?

[10:44] <wayland76> Yep :) 

[10:45] <lizmat> which has nothing to do with the enum issue, right?

[10:45] <wayland76> On an unrelated note, if I've got a block of tests, and I've put in a plan for them, is there a way to say "This block of tests is done" before starting a new plan?  

[10:46] <lizmat> subtest ?

[10:46] <lizmat> https://docs.raku.org/routine/subtest

[10:50] <wayland76> lizmat: I started out with the code at https://gist.github.com/wayland/cef503c2931a0874609028f6cfa2e14a and got a very similar error.  I'm thinking I need to restructure that code anyway, but that's where I started.  

[10:52] <wayland76> lizmat: subtest is just what I wanted.  Thanks!  :) 

[10:54] <lizmat> you might also be interested in https://docs.raku.org/routine/is%20test-assertion in that case

[11:03] <lizmat> wayland76: perhaps describe what you're trying to achieve?

[11:03] <lizmat> a ∪ infix op

[11:04] <lizmat> I don't think you need to do a ∪= op, should that be generated the correct way automatically?

[11:05] <wayland76> Sorry.  What I was trying to achieve (I've stopped now, but this is what I was aiming for): to be able to declare a FlagSet, which is a variable that's basically a bit array of the elements of the enum.  And you're right, I probably don't need the ∪= op.  

[11:10] <wayland76> Anyway, feel free to stop working on problem arising from the the FlagSet thing for now as far as I'm concerned -- I may get back to it, but I've worked around it for now by using some booleans instead.  

[11:11] <lizmat> ack, will return to my regularly scheduled programming now  :-)

[11:15] *** perryprog left
[11:16] <wayland76> ack, indeed ( https://beyondgrep.com/ ) :p 

[11:16] *** perryprog joined
[11:16] <wayland76> Thanks for your help, but in this case, I figured you have better things to do for the Raku community :) 

[11:19] <lizmat> I'll put --not on my list for App::Rak  :-)

[11:20] <wayland76> If you like.  I was just linking to it because it was the site for ack :)

[11:22] *** Maylay left
[11:24] <wayland76> Can I declare an attribute that will contain an object, but throw an error if that object can't do a specified role? 

[11:25] *** Maylay joined
[11:26] <wayland76> Oh, looks like if you have two modules that include each other, it's an infinite loop :)

[11:29] <lizmat> wayland76: declare the attribute for that role ?

[11:30] <wayland76> Will doing that also accept subclasses of that role? 

[11:32] <lizmat> yes

[11:39] <wayland76> Great!  When I solve the recursive use issue, I'll do that :) 

[11:46] <lizmat> weird that it's infinilooping

[11:46] <lizmat> should get something like: Circular module loading detected trying to precompile

[11:48] <lizmat> even if the circularity is something like A -> B -> C -> a

[11:48] <lizmat> even if the circularity is something like A -> B -> C -> A

[12:10] *** sena_kun left
[12:29] *** eseyman left
[12:31] *** manu_ joined
[12:31] *** manu_ is now known as eseyman

[12:53] *** defaultxr joined
[13:39] *** guifa left
[14:46] * [Coke] wonders how there can be financial services companies that require emails but DO NOT VERIFY THEM.

[14:47] <[Coke]> (I have a vanity domain very similar to an indian consulting company and their employees often sign up for stuff with *my* domain, and I get emails with info in them. it's crazy)

[15:01] *** rir joined
[15:29] <[Coke]> for math stuff, should docs link to wikipedia? Anyone wish to suggest a better maths source?

[15:30] <[Coke]> e.g. https://en.wikipedia.org/wiki/Miller%E2%80%93Rabin_primality_test

[15:32] *** wayland76 left
[15:32] *** wayland76 joined
[15:38] *** guifa joined
[15:48] *** kybr left
[15:48] *** ky2 joined
[16:29] *** Guest84 joined
[16:41] <Guest84> Problem with types in sub signature. I have two small functions (here: https://gist.github.com/nd3i/86b89bc396515ce6484afc92803e2248). Works fine without specifying any types for the args or return; I can chain the functions, no prob. If I naively specify the types, chaining fails (see the session output in the gist). So any hints appreciated, but

[16:41] <Guest84> the bigger problem is that I (clearly) don't understand raku's type language, so tips on fixing that would be even better. TIA

[16:46] <lizmat> the % sigil implies "Associative"

[16:47] <lizmat> Hash %cp

[16:47] <lizmat> specifies a hash of hashes

[16:49] <lizmat> either remove the "Hash" or use the $ sigil

[16:49] <lizmat> Guest84 ^^

[16:49] <Guest84> Ok, makes sense. Let me digest that a bit. THX!

[16:50] *** thaewrapt joined
[16:55] <Guest84> So, Hash $cp ... works if I also tweak the 'for' to use %$cp

[16:56] <lizmat> yes, indeed...  but why the "Hash"?

[16:57] <lizmat> do you really want to limit to Hashes ?  no Maps, no other classes that do the Associative role ?

[16:57] <lizmat> the % indicates all that for you

[16:58] <Guest84> 'defensive' programming? Fully specifying types looks 'professional' (I've no idea what I'm doing of course)

[16:59] <Guest84> Never thought about what other types might be handy.

[16:59] <lizmat> defensive programming is ok:  using % as a sigil is just that

[17:00] <lizmat> m: sub a(%foo) { dd }; a(42)

[17:00] <camelia> rakudo-moar d57b4109a: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Calling a(Int) will never work with declared signature (%foo)␤at <tmp>:1␤------> sub a(%foo) { dd }; ⏏a(42)␤»

[17:04] <Guest84> Of course. Point taken.

[17:18] *** sena_kun joined
[17:24] *** eseyman left
[17:28] *** Guest84 left
[17:49] *** xinming left
[17:51] *** xinming joined
[17:55] *** teatwo joined
[17:57] *** teatwo left
[18:32] *** Sgeo joined
[18:34] <guifa> Ugh, I have a feeling my TPRC talks may have been lost

[18:34] *** BinGOs left
[18:34] *** bingos joined
[18:34] <guifa> Might be an excuse to regive them at London ha

[18:37] *** rba left
[18:37] *** rba joined
[18:40] *** zups left
[18:40] *** zups joined
[18:42] <lizmat> guifa: yeah , very disappointing  :-(

[18:43] <lizmat> where the Raku presentations in a different room from the others by any chance?

[18:43] <guifa> Generally yes, but some of the talks were presented

[18:43] <guifa> My two talks were back to back though, so if there was any issue, would have hit both of them 

[18:44] <lizmat> I guess Bruce's talk was presented rather than prerecorded ?

[18:44] <guifa> Yeah, everyone was in person for Raku

[18:44] <lizmat> right

[18:46] <guifa> Was cool getting to meet some Raku folk in person I hadn't seen though so I count it as a win either way

[18:47] *** manu_ joined
[18:48] *** manu_ is now known as eseyman

[19:44] <thowe> Wish I could have gone :(

[19:44] <thowe> I hope it is that close to me again.  Was the venue good?

[20:09] <guifa> I mean, it worked :) it's one of the less flashy hotels and that's not a bad thing (price was good)

[20:25] *** ugexe left
[20:26] *** ugexe joined
[20:50] *** ericst joined
[20:52] *** ericst left
[20:53] *** ericst joined
[20:54] *** ericst left
[21:27] <thowe> I've been looking at some of the talks.  The one about PDF::Data was very relevant to me.  I emailed the guy.

[21:38] *** ingy left
[21:39] *** ingy joined
[21:47] <guifa> He was cool!  I missed his talk because mine was concurrent with his 

[21:59] * [Coke] is sorry his travel plans got Delta'd!

[22:06] *** mort left
[22:08] *** mort joined
[22:31] *** sena_kun left
