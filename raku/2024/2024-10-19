[01:39] *** hulk joined
[01:40] *** kylese left
[01:51] *** maylay_ joined
[01:53] *** maylay left
[02:15] *** hulk left
[02:15] *** kylese joined
[02:30] *** kylese left
[02:34] *** kylese joined
[03:29] *** stanrifkin_ joined
[03:31] *** stanrifkin left
[05:31] *** kjp left
[05:32] *** kjp joined
[05:33] *** kjp left
[05:33] *** kjp joined
[06:18] *** Xliff joined
[06:18] <Xliff> Does anyone know if there is code to check if an IP address is a bogon in Raku?

[06:21] *** merp left
[06:22] *** merp joined
[08:47] *** Aedil left
[08:54] *** Sgeo left
[08:55] *** sena_kun joined
[10:03] *** Aedil joined
[11:47] <ab5tract> bogon? I only know that term in the context of Australian slang :)

[11:48] <lizmat> from WP: Bogon filtering is the practice of filtering bogons, which are bogus IP addresses of a computer network. Bogons include IP packets on the public Internet that contain addresses that are not in any range allocated or delegated by the Internet Assigned Numbers Authority or a delegated regional Internet registry and allowed for public Internet use. The areas of unallocated address space are called the bogon space.

[11:49] <ab5tract> Ah, thank you lizmat

[11:53] *** eseyman left
[11:55] *** manu_ joined
[11:55] *** manu_ is now known as eseyman

[13:13] <discord-raku-bot> <antononcube> Good to know!

[13:44] <discord-raku-bot> <antononcube> I was thinking to look up "bogon"... Or make jokes about vogons in Raku. (E.g. writing poetry with it.)

[14:58] <Xliff> Note the distinct difference in the first letter. :p

[14:59] <Xliff> At any rate, I think I have something.

[15:09] <discord-raku-bot> <antononcube> @Xliff The sound corresponding to "v" very often mutates to the sound corresponding to "b" (In and between languages.). E.g. "vivlia" -> 'bible" , "varvaros" -> "barbarian", etc.

[15:10] <discord-raku-bot> <antononcube> So, "vogon" -> "bogon" is a "valid mistake" ! üôÇ

[15:47] <lizmat> in MacOS I just right-clicked on the word "bogon" and then selected: Lookup "bogon"

[15:47] <lizmat> it's a nice feature  :-)

[16:04] <discord-raku-bot> <antononcube> In Discord is "Search by Google", but, yeah, same thing...

[16:05] <discord-raku-bot> <roguerakudev> Seeing a weird issue when trying to print the number of elements in an array inside an interpolated string

[16:05] <discord-raku-bot> <roguerakudev> No such method 'list' for invocant of type 'VMNull'

[16:05] <lizmat> is precompilation involved ?

[16:06] <discord-raku-bot> <roguerakudev> I don't think so

[16:06] <lizmat> can you provide a gist ?

[16:06] <discord-raku-bot> <roguerakudev> this is spread across multiple files but it's all local, not a module

[16:06] <discord-raku-bot> <roguerakudev> yeah trying to get a minimal reproduction now

[16:08] <discord-raku-bot> <antononcube> Here is a "bogon filtering with Raku" poem:

[16:08] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1297229877899956285/Grock-bogon-filtering-with-Raku.png?ex=67152af8&is=6713d978&hm=0afb406c0a74c453809148d64df419a8940451d7fe26e6a3c1ea42f5e5b2258d&

[16:09] * lizmat gets a blanket, just to be sure  :-)

[16:12] <discord-raku-bot> <antononcube> @lizmat Hm... I generated "Vogon poetry with Raku" first.

[16:12] <lizmat> with Vogons you never know  :-)

[16:12] <discord-raku-bot> <antononcube> But it is way too readable.

[16:13] <discord-raku-bot> <roguerakudev> huh, I am having real trouble reproducing this minimally

[16:13] <discord-raku-bot> <roguerakudev> maybe the search to make it break in the correct way will reveal something

[16:41] <discord-raku-bot> <roguerakudev> yeah I just cannot get this to reproduce

[16:42] <discord-raku-bot> <roguerakudev> the original issue is in quite a large project

[17:18] <Xliff> antoncube

[17:18] <Xliff> Only if you're human. Try and pass that reasoning off to a machine and it will laugh at you.

[17:19] <Xliff> antoncube: Oh god.. the poem was nice, but the code IN the poem was too much!

[17:20] <Xliff> Here. Allow me to hand you a working example:

[17:20] <Xliff> https://replit.com/@Xliff/BogonsNotPoetry#main.raku

[17:21] <Xliff> And honestly, I had this written over an hour ago and it slides right in to the ongoing joke!

[17:25] <Xliff> .seen vrurg

[17:25] <tellable6> Xliff, I saw vrurg 2024-10-09T19:14:06Z in #raku-dev: <vrurg> Though I'm not happy with the semantics either way. Using `handles` as a fallback resolution is more appealing to me. In which case `*` becomes the fallback of fallback. :) 

[17:51] <Xliff> What's the best way to encode RAW ANSI into a Raku string?

[17:57] *** Sgeo joined
[18:43] <discord-raku-bot> <roguerakudev> The VMNull issue turned out to be with .assuming

[18:43] *** Aedil left
[18:44] <discord-raku-bot> <roguerakudev> On another note, is there a runtime way to do something like use lib? I have a plugins directory whose location can change based on an environment variable, so it‚Äôs not known at compile time

[18:45] <discord-raku-bot> <roguerakudev> But I want to have rakudo look in there for stuff to require

[18:49] <lizmat> roguerakudev I think there's an issue for that already  :-(

[20:33] <japhb> Xliff: What exactly do you mean by RAW ANSI?  (And for that matter, what do you mean by "best"?  ;-) )

[20:34] <timo> let's make a slang :3

[20:34] <timo> i assume something more pleasant than ... what's it again, "\x0e[99"

[20:35] <japhb> timo: ESC is better represented as just "\e" for clarity

[20:35] <timo> ideally, you could just press the "green" key on your keyboard and start writing green bytes directly into your .rakumod file

[20:35] <japhb> Shades of ColorFORTH

[20:36] <timo> isn't it disappointing that you can't have .rtf.rakumod

[20:36] <timo> wouldn't you love to just `use Blorb:from<odt>` and have your raku sources as .odt OpenDocument Text?

[20:37] <timo> sometimes it would just be much nicer to have `my @data = " and then an embedded open document spreadsheet

[20:37] <japhb> We'll just have to teach `pandoc` how to convert to/from Raku code, and then we're done!

[20:40] <timo> regular raku code doesn't have anything that could even approximate different fonts, bold/italics/underscore, text and background color, font size, and whatever else i forgot

[20:41] <timo> btw is there a way to have a "%15s" in the format string be spelled with 15 characters so it can line up with something else that has these column widths?

[20:41] <timo> can i use "%              s"?

[20:43] <timo> i think perl has a feature just like that, but it might be deprecated or something?

[20:43] <timo> maybe it's only the special variable where you assign that string that's deprecated, or at least not encouraged any more perhaps?

[20:44] <discord-raku-bot> <antononcube> @Xliff I am getting ‚Äúpage not found‚Äù from replit.com.

[20:46] <discord-raku-bot> <librasteve> m: my $s = Format.new("%15s"); say $s('yo');

[20:46] <evalable6> librasteve, rakudo-moar 6c30c5902: OUTPUT: ¬´(exit code 1) 4===SORRY!4=== Error while compiling /tmp/phj0zQ0mFp‚ê§Undeclared name:‚ê§    Format used at line 1‚ê§‚ê§¬ª

[20:46] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Undeclared name:     Format used at line 1  

[20:47] <discord-raku-bot> <librasteve> m: use v6.e.PREVIEW; my $s = Format.new("%15s"); say $s('yo');

[20:47] <evalable6> librasteve, rakudo-moar 6c30c5902: OUTPUT: ¬´             yo‚ê§¬ª

[20:47] <discord-raku-bot> <Raku eval>               yo 

[20:50] <discord-raku-bot> <librasteve> m: use v6.e.PREVIEW; my $s = Format.new("               %s"); say $s('yo');

[20:50] <evalable6> librasteve, rakudo-moar 6c30c5902: OUTPUT: ¬´               yo‚ê§¬ª

[20:50] <discord-raku-bot> <Raku eval>                 yo 

[20:52] <discord-raku-bot> <librasteve> m: use v6.e.PREVIEW; my $s = Format.new("{' ' xx 15}%s"); say $s('yo');

[20:52] <evalable6> librasteve, rakudo-moar 6c30c5902: OUTPUT: ¬´                             yo‚ê§¬ª

[20:52] <discord-raku-bot> <Raku eval>                               yo 

[20:52] <SmokeMachine> Hi! Shoud RakuAST nodes be value objects?

[20:53] <SmokeMachine> I mean, should this be true?

[20:53] <SmokeMachine> m: use experimental :rakuast; say RakuAST::Name.from-identifier("bla") ~~ RakuAST::Name.from-identifier("bla")

[20:53] <camelia> rakudo-moar 6c30c5902: OUTPUT: ¬´False‚ê§¬ª

[21:27] <lucs> If I see something like `my $*x = ...`, what kind of variable is `$*x` called? (to look it up in the docs)

[21:28] <[Coke]> https://docs.raku.org/syntax/Twigil

[21:28] <[Coke]> it's a twigil indicating a dynamic variable.

[21:28] <lucs> Aha, okay, thanks.

[21:28] <[Coke]> https://docs.raku.org/language/variables#Twigils is slightly better.

[21:29] <lucs> Thank you :)

[21:29] <[Coke]> (and from there to https://docs.raku.org/language/variables#Dynamic_variables)

[21:29] <[Coke]> sure.

[21:30] <lucs> I thought it was something like that (I was thinking of Perl's 'local' declarations), but couldn't remember what they were called.

[21:30] <[Coke]> huh. the docs describe dynamic variables after the second url, and the last url is just a list of dynamic variables. weird.

[21:30] <[Coke]> ah, https://docs.raku.org/language/variables#The_*_twigil 

[21:30] <[Coke]> ... which due to a bug isn't rendering the heading.

[21:42] <lucs> I want the bodies of all proto expression of a function to share a variable and using a dynamic variable is one way i've found of making it possible.

[21:42] <lucs> For example:

[21:42] <lucs> m: proto sub baz (|) { my $*n = 21; {*} }; multi sub baz { say $*n * 2 }; baz

[21:42] <camelia> rakudo-moar 6c30c5902: OUTPUT: ¬´42‚ê§¬ª

[21:42] <lucs> Is that a good (best?) way to do it?

[21:45] <[Coke]> i wonder what the logic is about just $n not working there.

[21:45] <[Coke]> I half expect declaring it in the proto would carry over.

[21:46] <lucs> It unfortunately doesn't.

[21:46] <lucs> m: proto sub baz (|) { my $n = 21; {*} }; multi sub baz { say $n * 2 }; baz

[21:46] <camelia> rakudo-moar 6c30c5902: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Variable '$n' is not declared.  Perhaps you forgot a 'sub' if this was‚ê§intended to be part of a signature?‚ê§at <tmp>:1‚ê§------>  my $n = 21; {*} }; multi sub baz { say ‚èè$n * 2 }; baz‚ê§¬ª

[21:46] <timo> can you put the multi candidates into the proto sub's body? :D

[21:47] <[Coke]> But yes, that seems very reasonable. (ah, the proto dispatches to the {*}? that would do it)

[21:47] <timo> even if that works, i don't think it would actually work

[21:47] <timo> with regards to closure semantics and whatnot

[21:47] <lucs> timo: When there'e only one, sure, but this is very golfed down compared to what I'm really trying to do :)

[21:47] <timo> don't multithread this at home, kids!

[22:01] *** stanrifkin_ left
[23:03] *** sena_kun left
[23:41] *** swaggboi left
[23:45] *** swaggboi joined
[23:53] *** Xliff left
