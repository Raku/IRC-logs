[01:45] <[Coke]> docs question for users. We have a role with 'has $.proc' - it is documented as "method proc" - is this desired/acceptable/wrong?

[01:45] <[Coke]> https://docs.raku.org/type/X/Proc/Async

[01:46] <[Coke]> the test to make sure the docs match the source complain, and I'm trying to decide if I fix the test to allow it or change the docs

[01:47] <discord-raku-bot> <antononcube> @Coke Are the tests derived from the docs? Or are the docs derived from the tests?

[01:48] <discord-raku-bot> <antononcube> These didactic questions, of course.

[01:49] <discord-raku-bot> <antononcube> But I assume they might identify which one -- docs or tests -- is more likely to be "the single origin of truth."

[01:49] <[Coke]> no, the tests call out differences and I as the author decide how to resolve the issue

[01:50] *** jgaz left
[01:51] <discord-raku-bot> <antononcube> I see -- so the docs are the single origin of truth then. (If correct.)

[01:51] <[Coke]> that's not what I said, but yes, that's the *intention*

[01:52] <[Coke]> the docs describe the *spec*, not *rakudo*, but we use rakudo as our only other source of information about the class/role hierarchy.

[01:52] <discord-raku-bot> <antononcube> Right -- I exagerate(d) for didactic / rhetorical reasons.

[01:53] <discord-raku-bot> <antononcube> And that is good to know that the docs describe the spec.

[01:54] <discord-raku-bot> <antononcube> I think it also means that the test has to be fixed.

[01:54] <ugexe> the docs for that were written 10 years ago. if other objects don't list methods for their attribute accessors it should probably be changed to match whatever is more common

[01:56] <ugexe> it being marked as a method also misses that the user can instantiate it with a proc object

[01:58] *** hulk joined
[01:59] *** kylese left
[02:01] <[Coke]> I like that last point, but the spec doesn't ever deal with that attribute.

[02:02] <[Coke]> (which brings up another thing that happens reviewing the docs, do we consider that getter/setter an implementation detail or do we now open a ticket to spec it)

[02:03] <ugexe> IO::Handle docs looks like it list attribute setter methods, but also describe them in the first sentence like "One of the attributes that can be set via .new or open" (see: https://docs.raku.org/type/IO/Handle#method_chomp)

[02:05] <ugexe> i dunno if that is good or not, but it does suggest maybe there isnt a common way on how to handle getter/setters

[02:06] <[Coke]> That points out a gap in the test, which doesn't report on chomp at all in that file.

[02:07] <[Coke]> (not even as a skipped method)

[02:12] * [Coke] opens https://github.com/Raku/doc/issues/4506

[02:15] *** hulk left
[02:15] *** kylese joined
[02:41] *** Aedil joined
[05:05] *** drakonis left
[05:05] *** corwin left
[05:05] *** jjatria left
[05:05] *** sivoais left
[05:05] *** hvxgr left
[05:05] *** leah2 left
[05:05] *** pony left
[05:05] *** leont left
[05:05] *** andinus left
[05:05] *** jcallen left
[05:05] *** gfldex left
[05:05] *** tailgate left
[05:05] *** camelia left
[05:06] *** drakonis joined
[05:06] *** corwin joined
[05:06] *** jjatria joined
[05:06] *** sivoais joined
[05:06] *** hvxgr joined
[05:06] *** pony joined
[05:06] *** leah2 joined
[05:06] *** leont joined
[05:06] *** andinus joined
[05:06] *** jcallen joined
[05:06] *** gfldex joined
[05:06] *** tailgate joined
[05:06] *** camelia joined
[05:06] *** leah2 left
[05:06] *** leah2 joined
[05:06] *** nine left
[05:06] *** cleo left
[05:06] *** zostay left
[05:06] *** coleman left
[05:06] *** mtj left
[05:06] *** JRaspass left
[05:06] *** snonux left
[05:06] *** nine joined
[05:06] *** cleo joined
[05:06] *** zostay joined
[05:06] *** coleman joined
[05:06] *** mtj joined
[05:06] *** JRaspass joined
[05:06] *** snonux joined
[05:30] *** Sgeo left
[06:27] *** Chanakan left
[06:37] *** Chanakan joined
[07:44] *** skyesoss left
[07:49] *** sena_kun joined
[07:57] *** wayland76 joined
[08:41] *** sena_kun left
[08:58] *** alaziz joined
[09:01] *** skyesoss joined
[09:06] *** skyesoss left
[09:08] *** wayland joined
[09:08] *** wayland76 left
[09:24] *** alaziz left
[10:46] <tbrowder> btw, i tested roundtripping all 360 unique font files on my main debian box (using utf8-c8) and got over 100 failures. somebody smart should fix that if they want a challenge.

[10:51] <tbrowder> i'm trying to come up with an algorithm to match the two different streams of code points using gnu bin (with option "-l" (list)  but haven't spent much time on it.

[10:52] <tbrowder> antononcube: it might be easy with your LLM magic

[10:55] <lizmat> tbrowder: it's my impression that it's basically unfixable, though  as some sequences produces the same "fix", and thus differ on roundtripping

[10:55] <tbrowder> "gnu bin" should be "gnu 'cmp'"

[10:55] <lizmat> tbrowder: if you want to roundtrip, slurp(:bin) and spurt(:bin)

[10:57] <discord-raku-bot> <antononcube> Why use ‚Äúgnu cmp‚Äù, why not ‚Äú‚ÄòAlgorithm ::Diff‚Äù ?

[10:57] <tbrowder> i tried that once and ran into problems, but i probably did it wrong. before the roundtrip i tried to only use :bin on files that were !~~ Str

[10:58] <tbrowder> so :bin *should* roundtrip?

[10:58] <discord-raku-bot> <antononcube> Using LLMs to compare files is possible, of course, but, generally, ‚Äúexpensive‚Äù and having size limitations.

[10:59] <lizmat> tbrowder: perhaps https://raku.land/zef:lizmat/path-utils#path-is-text can be of help ?

[10:59] <lizmat> tbrowder: yes, :bin *should* roundtrip

[11:02] <tbrowder> ok, i'll try both on just the font files, thanks!!

[11:02] <tbrowder> will report back later...

[11:13] *** MasterDuke left
[11:28] *** skyesoss joined
[11:29] *** elcaro left
[11:30] *** elcaro joined
[11:33] *** skyesoss left
[11:37] <ab5tract> Neat CSS https://neat.joeldare.com/

[11:38] <ab5tract> librasteve: ^^ maybe something usable for the htmx efforts?

[11:47] <tbrowder> wow, :bin did the trick, ZERO bad comps. and thatb

[11:48] <tbrowder> *that include PostScript type 1 fonts which have text reprs. gonna try on known pdfs now.

[11:49] <tbrowder> the docs misled me a bit, but i'll look again after all works for my baby module

[11:57] <discord-raku-bot> <antononcube> ‚Äúbaby module‚Äù -> ‚Äúbabe module‚Äù -> ‚Äúcougar module‚Äù -> ‚Äúcommunity module‚Äù

[12:08] <discord-raku-bot> <librasteve> ab5tract: neat idea (geddit?)

[12:09] <discord-raku-bot> <librasteve> I'm doing a bit of rubber ducking about Htmx and Cro here btw https://github.com/librasteve/raku-HTMX/issues/8 all f/back & contributions welcome

[12:13] <tbrowder> just searched 950 pdf files and found only 50 bad ones. all of them are very old 1200 dpi scans of photograhs.

[12:14] <tbrowder> i'm going to try rescanning the bad ones using the utf8-c8 option

[12:16] <tbrowder> no, the scans were from my classmate's 1200 dpi scan of our college freshman annual, using an old windows app, circa pre-2015

[12:17] <tbrowder> all the bad pdfs were from that batch

[13:07] *** jgaz joined
[13:16] <ab5tract> Haha!

[13:17] <ab5tract> (I geddit)

[13:19] <ab5tract> tbrowder: interesting, I would think that image-based PDFs would have little to get wrong relative to text oriented ones with embedded fonts and extensions and other weirdness

[13:48] <tbrowder> well, i think @lizmat mentioned OCR having differing bits somehow, as well as i think the original images were tiff fomat and i think i created the pdfs with some  gnu app.

[13:48] <lizmat> that shouldn't matter if your reading with ":bin" ?

[13:49] <tbrowder> lots of ‚Äúthinkos‚Äù there. i‚Äôll see if i can find the original creation path

[13:50] <tbrowder> i know i was using perl wrappers at the time

[13:51] <discord-raku-bot> <antononcube> üò±

[13:51] <tbrowder> gotta go‚Äî‚Äúon the road again‚Äù

[13:56] *** Sgeo joined
[14:16] <ugexe> i'm not sure what purpose round tripping binary data using slurp/spurt would serve over just copying the file

[14:18] <ugexe> in other words: why are you not just copying the font file?

[14:31] *** [Coke] left
[14:33] *** [Coke] joined
[15:00] *** skyesoss joined
[15:46] *** skyesoss left
[17:58] *** skyesoss joined
[18:14] <[Coke]> anyone have a recommendation for a windows laptop for dev work (and also, I guess, gaming?) Would like to get a personal machine to work on windows related raku stuff that isn't also a worktop.

[18:19] <discord-raku-bot> <ivarec> Gaming laptops are usually a sane choice. They handle well the heat. I've been lucky with my Asus ROG

[19:21] *** skyesoss left
[19:30] *** skyesoss joined
[20:03] *** swaggboi left
[20:08] *** swaggboi joined
[20:47] *** swaggboi left
[20:56] *** swaggboi joined
[21:02] *** dustinm` left
[21:05] *** swaggboi left
[21:07] *** dustinm` joined
[21:17] *** swaggboi joined
[21:21] *** jgaz left
[21:25] <tbrowder> ugexe: in order to extract resources/files from published modules

[21:25] *** swaggboi left
[21:26] <tbrowder> slurp the content, spurt the content to a local file.

[21:26] <tbrowder> INSTALLED modules

[21:26] *** sena_kun joined
[21:26] <tbrowder> didn'mean to shout

[21:30] *** swaggboi joined
[21:45] *** sena_kun left
[22:27] *** skyesoss left
[22:40] <tbrowder> [Coke]: have you tried a KVM host of windows on yr personal mac? with enough ram and disk space it can work well

[23:05] *** calma joined
[23:06] <calma> hello c:

[23:06] <calma> i have a question

[23:06] <calma> raku is a niche language?

[23:06] <calma> is worth to learn?

[23:13] *** MasterDuke joined
[23:37] *** calma left
