[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:13] *** benchable6_ left
[00:13] *** linkable6_ left
[00:13] *** coverable6_ left
[00:13] *** committable6_ left
[00:13] *** bloatable6_ left
[00:13] *** unicodable6_ left
[00:13] *** quotable6_ left
[00:13] *** shareable6_ left
[00:13] *** bisectable6_ left
[00:13] *** notable6_ left
[00:13] *** greppable6_ left
[00:13] *** statisfiable6 left
[00:13] *** evalable6_ left
[00:13] *** nativecallable6_ left
[00:13] *** sourceable6_ left
[00:13] *** releasable6_ left
[00:13] *** tellable6_ left
[00:13] *** squashable6 left
[00:13] *** reportable6 left
[00:20] *** AlexDaniel joined
[00:21] <AlexDaniel> .tell ab5tract buildable is making builds for all branches

[00:21] <tellable6> AlexDaniel, I'll pass your message to ab5tract

[00:21] <AlexDaniel> c: HEAD say 42

[00:21] <committable6> AlexDaniel, ¦HEAD(a4c7d5d): «42␤»

[00:22] <AlexDaniel> c: is-item-redux say 42

[00:22] <committable6> AlexDaniel, ¦is-item-redux: «42␤»

[00:22] <AlexDaniel> c: liz-ProtoInfo say 42

[00:22] <committable6> AlexDaniel, ¦liz-ProtoInfo: «Cannot test this commit (Commit exists, but an executable could not be built for it)»

[00:22] <AlexDaniel> that specific branch doesn't work, but it did create a build for it

[00:23] <AlexDaniel> c: liz-Possible say 42

[00:23] <committable6> AlexDaniel, ¦liz-Possible: «Cannot test this commit (Commit exists, but an executable could not be built for it)»

[00:23] <AlexDaniel> anyways, it's surprising that this feature is not used more often

[00:23] <AlexDaniel> it has been there for a few years

[00:24] <ab5tract> nice :)

[01:12] *** kylese left
[01:12] *** kylese joined
[01:34] *** AlexDaniel left
[01:41] *** mocha joined
[01:47] <mocha> Heya! I've been kinda interested in Raku, and was just wondering: what is it mostly used for?

[01:48] <mocha> i.e. I see Julia / R mostly used in data science, Ruby is mostly Rails, etc

[01:48] <mocha> So what niche does Raku (or the whole perl family for that matter) fill?

[02:15] *** kylese left
[02:15] *** kylese joined
[02:19] *** mocha left
[03:46] *** jpn joined
[03:51] *** jpn left
[05:30] *** Sgeo left
[07:02] *** abraxxa joined
[07:51] *** sena_kun joined
[08:17] <discord-raku-bot> <antononcube> Julia in data science?  I doubt it -- I alsways found it too slow to ingest data and too incomplete ecosystem-wise. Granted, things might change / have changed rapidly.

[08:18] <discord-raku-bot> <antononcube> R in data science -- some people really claim to be case. But those people are mostly from healthcare or government backgrounds. (At least in USA.)

[08:19] <discord-raku-bot> <antononcube> Lots of people try to convince others that Python is the language for Data Science. (Yeah, whatever.)

[08:22] <discord-raku-bot> <antononcube> As for Raku -- the best features of Raku are (1) regexes and grammars, and (2) Command Line Interfaces (CLI). Yes, there other good/great features, it is a big language. But for me at least grammars being first class citizens in general purpose programming language and the good / ease CLI support are the main reasons to use.

[08:24] <discord-raku-bot> <antononcube> At least two consequences from those:  1) Raku can be used to produce workflows for other languages, say, Data Science workflows for R, Python, Julia, etc. 2) Raku can be nicely paired or utilized with Large Language Models (LLMs)

[08:30] *** MasterDuke left
[08:31] *** jpn joined
[08:31] <discord-raku-bot> <antononcube> Both of those, though, need a fair amount of "facilitation" and the corresponding Raku packages impose the learning and adopting of a few specific DSLs.

[09:25] *** sena_kun left
[09:41] *** jpn left
[10:02] *** jpn joined
[10:07] <Geth> ¦ raku-mode: 7e8284b37c | (Steffen Schwigon)++ | raku-font-lock.el

[10:07] <Geth> ¦ raku-mode: Split variable name faces into different types

[10:07] <Geth> ¦ raku-mode: 

[10:07] <Geth> ¦ raku-mode: Instead of coloring all variables all the same way this

[10:07] <Geth> ¦ raku-mode: change sets up different faces for

[10:07] <Geth> ¦ raku-mode: 

[10:07] <Geth> ¦ raku-mode:  $ - Mu

[10:07] <Geth> ¦ raku-mode:  @ - Positional

[10:07] <Geth> ¦ raku-mode: <…commit message has 7 more lines…>

[10:07] <Geth> ¦ raku-mode: review: https://github.com/Raku/raku-mode/commit/7e8284b37c

[10:07] <Geth> ¦ raku-mode: 14f9b9bba0 | Altai-man++ (committed using GitHub Web editor) | raku-font-lock.el

[10:07] <Geth> ¦ raku-mode: Merge pull request #60 from Raku/variable-colors

[10:08] <Geth> ¦ raku-mode: 

[10:08] <Geth> ¦ raku-mode: Split variable name faces into different types

[10:08] <Geth> ¦ raku-mode: review: https://github.com/Raku/raku-mode/commit/14f9b9bba0

[10:46] *** jpn left
[10:58] *** rba left
[10:59] *** jast left
[11:01] *** rba joined
[11:01] *** tinita left
[11:06] *** jast joined
[11:06] *** tinita joined
[11:17] *** jpn joined
[11:28] *** jpn left
[12:47] <discord-raku-bot> <antononcube> @mocha I forgot to address “Ruby is mostly Rails” — “Cro” is a significant package in Raku’s ecosystem. A few years ago in a presentation at The Raku Conference (TRC) was discussed that “the distance to Cro” matters. (I think by @leont .)

[12:48] <discord-raku-bot> <antononcube> I use and have used “Cro” in a few projects — it was fairly easy to build and run the web services I intended to have.

[13:16] *** jpn joined
[13:57] <leont> Yeah I said that

[14:01] <discord-raku-bot> <antononcube> @leont It was very cool to hear it. 🙂 Made me pay more attention to your talk.,

[14:02] <El_Che> does it mean we're in bad shape now Cro is orphaned?

[14:02] <tellable6> 2024-04-25T19:58:04Z #raku-dev <jdv> El_Che 2024.04 release is done

[14:02] <tellable6> 2024-04-27T00:06:36Z #raku <ab5tract> El_Che is there any way I could contribute arm64 editions of rakudo-pkg?

[14:03] <ab5tract> El_Che: considering the tuits that were available to be applied previously, I would say we are probably in the same exact shape

[14:03] <El_Che> ab5tract: the packages themselves build and work find. The missing piece is sending them from cirrus to github/cloudsmith: https://github.com/nxadm/rakudo-pkg/blob/arm64/.cirrus.yml

[14:04] <ab5tract> oh, nice!

[14:17] <El_Che> s/find/fine/

[14:29] <patrickb> There are several people interested in keeping Cro alive. We just need to get organized.

[14:34] <ab5tract> El_Che: do I understand correctly that the missing piece is just a missing CD pipeline? Or is there some integration missing between these services?

[14:38] *** hvxgr left
[14:46] <El_Che> exactly

[14:46] <discord-raku-bot> <holmdunc> Did the official transfer of Cro to the community happen or is there still some step pending?

[14:46] <El_Che> something without leaking secrets, indeed

[14:46] <El_Che> patrickb: I am not saying it's dead, just that it's a setback

[14:55] <[Coke]> cro++

[15:15] <discord-raku-bot> <antononcube> @El_Che So, no testing on Windows?

[15:18] <jdv> i like cro for simpler things but until it comes closer to mojo i can't use it for some things

[15:27] *** mocha joined
[15:27] *** mocha left
[15:36] <discord-raku-bot> <antononcube> @jdv Do you have any performance and scalability observations about "Cro" web apps?

[15:38] <jdv> not more than just perl vs cro.  with cro its more that mojo is just more mature and feature "complete".

[15:39] <jdv> oh, i mean perl vs raku:)

[15:56] <ab5tract> "something without leaking secrets, indeed" <-- this sounds like its not really a job that an 'outsider' can take care of

[15:56] <ab5tract> or am I misunderstanding something?

[16:08] *** abraxxa left
[16:19] <discord-raku-bot> <librasteve> mocha: So what niche does raku (or the whole perl family for that matter) fill? Thanks for the question. The things you mention - Ruby/Rails for web, Python/Pandas for data sciences, etc - illustrate the result of once small, niche languages hitting the zeitgeist with a use case, a language and library that beat everything else at the time. Ruby, for example was around for 10 years before the 15 minute Rails video

[16:19] <tellable6> librasteve, I'll pass your message to mocha

[16:19] <discord-raku-bot> smashed it. So, for perl this was perl/modperl CGI in about 1994 that was at the heart of v1 of the web. I think that raku is still in the small, niche language phase and we have not yet seen the killer app (and it may never come). There is a lineage of scripting languages - bash, perl, PHP, Ruby, Python, Lua - and raku is certainly in this style. With gradual typing, it spans from simple CLI one-liners to large codebases. It

[16:19] <discord-raku-bot> is multi-paradigm - supporting Procedural, Object Oriented, and Functional programming. There is amazing support for Unicode, Regexes and Grammars to help craft solutions around Domain Specific Languages. And the eco-system has some unique capabilities, notably ORM (Red), Cro (web services), and Anton's Data workflows and LLM services. But no-one has made the raku killer video yet. Maybe it will be you!

[16:31] *** manu_ joined
[16:36] <discord-raku-bot> <librasteve> TLDR: "Python without constrictions"

[16:44] *** thaewrapt joined
[16:56] *** jpn left
[16:59] <discord-raku-bot> <antononcube> @librasteve Wouldn't un-constrincting python die of hunger?!

[17:01] <discord-raku-bot> <antononcube> @librasteve "But no-one has made the raku killer video yet." -- Damn! I thought I was making killer Raku-videos all this time, but guess not... sigh...

[17:08] *** thaewrapt left
[17:10] *** thaewrapt joined
[17:29] *** manu_ is now known as eseyman

[17:49] *** jpn joined
[17:53] *** sena_kun joined
[17:57] *** jpn left
[17:59] *** jpn joined
[18:00] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/04/29/2024-18-over-the-finish-line/

[18:13] *** thaewrapt left
[18:33] <ab5tract> lizmat++

[18:37] *** xinming left
[18:39] *** xinming joined
[18:48] <discord-raku-bot> <librasteve> maybe the vido has been made, but no one has seen it yet

[18:48] <discord-raku-bot> <librasteve> lizmat +++

[18:49] <discord-raku-bot> <dr.shuppet> Or it's not the time yet

[18:50] <discord-raku-bot> <dr.shuppet> Programming language design and development is hard, it takes years of gradual improvement to reach a state in which the project is more massively picked up

[18:53] <discord-raku-bot> <librasteve> we are lucky that raku has such a great team that plug away with no thought of reward or fame

[19:09] <discord-raku-bot> <antononcube> @librasteve Or I work for fame! It is fame has not worked for me, yet...

[19:11] <discord-raku-bot> <librasteve> :-)

[19:45] <discord-raku-bot> <librasteve> python without the ankle-braclet?

[19:51] *** jpn left
[19:53] <[Coke]> bisectable: Metamodel::InvocationProtocol.new

[19:53] <bisectable6> [Coke], Will bisect the whole range automagically because no endpoints were provided, hang tight

[19:54] <bisectable6> [Coke], Output on all releases: https://gist.github.com/cac1cdf5007c3fa7085301d95362bc3d

[19:54] <bisectable6> [Coke], More than 3 changes to bisect, please try a narrower range like old=2024.02 new=HEAD

[19:55] <[Coke]> bisectable: class bar does Metamodel::InvocationProtocol { ... }

[19:55] <bisectable6> [Coke], Will bisect the whole range automagically because no endpoints were provided, hang tight

[19:56] <bisectable6> [Coke], Output on all releases: https://gist.github.com/efd2bd86a85688973e6d6bb6380ddf59

[19:56] <bisectable6> [Coke], Bisecting by output (old=2024.02 new=2024.03) because on both starting points the exit code is 1

[19:56] <bisectable6> [Coke], bisect log: https://gist.github.com/9c96b2d564d32f68c01c9d6abe676cd2

[19:56] <bisectable6> [Coke], (2024-03-23) https://github.com/rakudo/rakudo/commit/18abe8c32f28f025f8e5dccdf93cd1bbca4db43c

[19:56] <bisectable6> [Coke], Bisecting by output (old=2017.08 new=2017.09) because on both starting points the exit code is 1

[19:56] <bisectable6> [Coke], bisect log: https://gist.github.com/75189a818342ddf6de23e7fbfab6b320

[19:56] <bisectable6> [Coke], (2017-09-11) https://github.com/rakudo/rakudo/commit/edac1d687099794ac163549adff1863839994653

[19:56] <bisectable6> [Coke], Output on all releases and bisected commits: https://gist.github.com/737dc4c947066d0fe94857ce15d0b8ba

[19:57] <[Coke]> oh! it was removed and we didn't update the docs yet. 

[20:07] <[Coke]> broken sample golfed from the docs:

[20:08] <[Coke]> bisectable: class bar does Metamodel::Naming does Metamodel::RolePunning {}

[20:08] <bisectable6> [Coke], Will bisect the whole range automagically because no endpoints were provided, hang tight

[20:09] <bisectable6> [Coke], Output on all releases: https://gist.github.com/cfbca913b3f29d20e324202981484031

[20:09] <bisectable6> [Coke], Bisecting by exit code (old=2024.02 new=2024.03). Old exit code: 0

[20:09] <bisectable6> [Coke], bisect log: https://gist.github.com/52983ddfdfdbbbbd52da46147bceec75

[20:09] <bisectable6> [Coke], (2024-03-20) https://github.com/rakudo/rakudo/commit/98ca8eb950c61acc9901cdcb11c9a5e05b3d485f

[20:09] <bisectable6> [Coke], Output on all releases and bisected commits: https://gist.github.com/08c95a6a95dd346f0338b399b67bbccd

[20:15] *** jpn joined
[20:20] *** jpn left
[21:00] *** jpn joined
[21:16] *** thaewrapt joined
[22:52] *** sena_kun left
[23:00] *** Sgeo joined
