[01:18] *** eseyman left
[01:20] *** eseyman joined
[01:46] *** hulk joined
[01:46] *** kylese left
[01:49] *** guifa joined
[02:15] *** hulk left
[02:15] *** kylese joined
[02:17] <guifa> m: my %nums = %( even => (2,4,6,8,10), odd => (1,3,5,7,9), three => (3,6,9,12)); sub get-nums(*@types) { %nums.grep(*.key eq any @types)>>.value.flat }; say get-nums <even three>;

[02:17] <camelia> rakudo-moar 59631b18d: OUTPUT: ¬´((3 6 9 12) (2 4 6 8 10))‚ê§¬ª

[02:18] <guifa> there's no containers, not sure why those aren't flattening

[02:42] <timo> m: say my %nums = %( even => (2,4,6,8,10), odd => (1,3,5,7,9), three => (3,6,9,12)); say %nums.raku

[02:42] <camelia> rakudo-moar 59631b18d: OUTPUT: ¬´{even => (2 4 6 8 10), odd => (1 3 5 7 9), three => (3 6 9 12)}‚ê§{:even($(2, 4, 6, 8, 10)), :odd($(1, 3, 5, 7, 9)), :three($(3, 6, 9, 12))}‚ê§¬ª

[02:45] <timo> my %nums = %( even => (2,4,6,8,10), odd => (1,3,5,7,9), three => (3,6,9,12)); sub get-nums(*@types) { %nums.grep(*.key eq any @types)>>.value.map(*.<>).flat }; say get-nums <even three>;

[02:45] <evalable6> timo, rakudo-moar 59631b18d: OUTPUT: ¬´(3 6 9 12 2 4 6 8 10)‚ê§¬ª

[02:56] *** Aedil joined
[03:48] *** guifa left
[03:53] <discord-raku-bot> <librasteve> guifa: Hash (and Array) items are stored in containers, so even=>(2,4) aka even=>$(2,4)

[03:53] <tellable6__> librasteve, I'll pass your message to guifa

[03:58] <discord-raku-bot> <librasteve> m: my %nums = %( even => (2,4,6,8,10), odd => (1,3,5,7,9), three => (3,6,9,12)); sub get-nums(@types) { %nums.grep({.key eq any @types})>>.value.flat: :hammer }; say get-nums <even three>;

[03:58] <tellable6__> 2024-10-03T21:18:33Z #raku <wayland76> librasteve we'd also have to get the grammar to do whatever Chroma does with syntax highlighting, but agreed.  

[03:58] <evalable6> librasteve, rakudo-moar 59631b18d: OUTPUT: ¬´(2 4 6 8 10 3 6 9 12)‚ê§¬ª

[03:58] <discord-raku-bot> <Raku eval>  ((2 4 6 8 10) (3 6 9 12)) 

[04:01] <discord-raku-bot> <librasteve> ha!

[04:02] <discord-raku-bot> <librasteve> (^^ this is a joyous laugh that my :hammer adverb is useful

[04:02] <discord-raku-bot> <librasteve> )

[04:45] *** Aedil left
[04:50] *** floyza joined
[06:13] *** ptc joined
[06:29] *** derpydoo joined
[06:40] *** Aedil joined
[06:43] *** kylese left
[06:47] *** kylese joined
[07:00] *** Sgeo left
[07:06] *** floyza left
[07:20] *** ptc left
[08:11] *** johan994 joined
[08:25] *** derpydoo left
[08:39] *** abraxxa-home joined
[08:42] *** abraxxa-home left
[08:43] *** abraxxa-home joined
[08:56] *** sena_kun joined
[09:18] *** Aedil left
[09:19] *** Aedil joined
[09:22] <lizmat> weekly: https://github.com/zag/raku-knowledge-base

[09:22] <notable6__> lizmat, Noted! (weekly)

[09:29] *** xinming_ left
[09:30] *** xinming left
[09:30] *** xinming joined
[09:31] *** xinming_ joined
[09:50] *** johan994 left
[10:02] *** abraxxa-home left
[11:12] <discord-raku-bot> <antononcube> Flattening, for some reason or five, is very hard in Raku.

[11:21] <tbrowder> wish i could help, only thing i've flattened are arrays with "|@arr"

[11:22] <discord-raku-bot> <antononcube> Well, .flat works sometimes; .map(*.Slip) works much more often.

[11:23] <discord-raku-bot> <antononcube> I have flatten in "Data::Reshapers", which at some I will make to take level specifications.

[11:24] <discord-raku-bot> <antononcube> Actually, I think @lizmat recently worked on similar/same functionality...

[11:26] <lizmat> .flat(:hammer)

[11:27] <discord-raku-bot> <antononcube> üí°

[11:29] <discord-raku-bot> <antononcube> @lizmat That is good to know! I was referring to, say, flat(level => (3, 5)) that flattens a nested structure between depth levels 3 and 5.

[11:29] <discord-raku-bot> <antononcube> BTW, currently, flatten  takes only "max-level" argument.

[11:31] <tbrowder> any way to "unprecompile" for a module during testing other than deleting .precomps and setting the *NO_PRECOMPILATION env var?

[11:34] <lizmat> https://raku.land/zef:lizmat/Repository::Precomp::Cleanup

[11:35] <lizmat> sorry, that's for core precomp files

[11:38] <tbrowder> i think i'll try the env var and dump .precomp route.

[11:40] <tbrowder> but i thought i saw something here one time about a --no-precomp option for zef maybe, but i don't see it in zef help

[11:46] <lizmat> ugexe?

[12:08] *** johan994 joined
[12:27] *** wayland76 joined
[12:53] *** wayland76 left
[13:00] *** wayland76 joined
[13:04] *** wayland76 left
[13:06] *** holyghost left
[13:08] *** wayland76 joined
[13:11] <wayland76> How long does fez/zef take to index a package?  Like, are we talking, 5 minutes, 30 minutes, 2 hours?  

[13:12] *** johan994 left
[13:13] <timo> you mean until it shows up on the website?

[13:14] *** johan994 joined
[13:14] *** johan994 left
[13:15] <wayland76> Yeah, that's what I mean :) 

[13:15] <wayland76> Or maybe just how long before I can do a zef install and get the new version.  

[13:18] <wayland76> timo: Thanks for your help with the installation question.  It made me re-examine META6.json, and I found the problem :) 

[13:19] <wayland76> Anyway, it looks like 10 minutes is a good rule of thumb for my package :)

[13:20] <timo> i actually don't know how the zef ecosystem works exactly

[13:22] <wayland76> Well, you knew enough to help me :)

[13:22] <tbrowder> arg, ran into this before. setting the env var does not completely work because the .precomp dir keeps coming back magically when raku starts up early in the process with one the phasers, or something like that.

[13:22] <wayland76> Apologies to anyone who tried the TOP module.  The new one should work better.  

[13:24] <timo> oh, what i meant by zef ecosystem was uploads to, downloads from, and metadata updates inside of the zef ecosystem; we also get raku dists from cpan, and there used to be the p6c ecosystem which was based on a text file with URLs to META6.json files that was held in a repo on github, but we deprecated that

[13:49] *** dg left
[13:54] *** dg joined
[13:55] *** bdju left
[13:58] *** bdju joined
[14:02] *** floyza joined
[14:28] *** Sgeo joined
[14:42] *** Sgeo_ joined
[14:45] *** Sgeo left
[14:53] *** xinming_ left
[14:59] *** xinming_ joined
[15:05] *** Aedil left
[15:05] *** lizmat_ joined
[15:06] *** rba_ joined
[15:07] *** greppable6 joined
[15:09] *** tellable6 joined
[15:09] *** avarab joined
[15:10] *** tejr_ joined
[15:10] *** elcaro_ joined
[15:10] *** kjp_ joined
[15:14] *** hvxgr_ joined
[15:15] *** bdju left
[15:15] *** lizmat left
[15:15] *** elcaro left
[15:15] *** tejr left
[15:15] *** kjp left
[15:15] *** rba left
[15:15] *** avar left
[15:15] *** hvxgr left
[15:15] *** tellable6__ left
[15:15] *** greppable6__ left
[15:15] *** rba_ is now known as rba

[15:15] *** tejr_ is now known as tejr

[15:16] *** wayland joined
[15:16] *** wayland76 left
[15:26] *** bdju joined
[15:37] *** ptc joined
[15:48] *** xinming_ left
[15:51] *** xinming_ joined
[16:38] *** Aedil joined
[16:58] *** ptc left
[17:51] *** lizmat_ left
[17:51] *** lizmat joined
[18:31] <[Coke]> greppable: experimental :pack

[18:31] <greppable6> [Coke], 54 lines, 25 modules: https://gist.github.com/cb0ceefdb6724aa0181b4b5ea19b00d0

[19:28] *** Aedil left
[19:49] *** xinming_ left
[19:56] *** xinming_ joined
[21:44] *** xinming_ left
[21:46] *** xinming_ joined
[22:13] *** guifa joined
[22:19] *** jjido joined
[22:38] <guifa> making some cool new additions to Test::Inline, but now stuck on how to give options, when tags (akin to export tags) are given using colon pairs

[22:38] <tellable6> 2024-10-04T03:53:51Z #raku <librasteve> guifa: Hash (and Array) items are stored in containers, so even=>(2,4) aka even=>$(2,4)

[22:45] <wayland> if I have a scalar that does Positional, how do I loop over the items, ie. for $scalar -> $item {...   ?

[22:54] <timo> did you actually make a Scalar that has the Positional role, or is the thing inside the scalar a Positional?

[22:55] <timo> but it should work to `for $scalar.list -> $item { ... }` or you can decont like `for $scalar<> -> $item { ... }`

[22:59] <wayland> Great, I'll try those.  Thanks!  

[22:59] *** sena_kun left
[23:20] *** jjido left
[23:57] <wayland> Hi!  Does anyone have general suggestions about how to resolve this kind of error?  https://gist.github.com/wayland/e2b585612adbd805378696f61775bcd5  The annoying thing is that, in the module tests, this seems to work, but it's not working for me now.  

