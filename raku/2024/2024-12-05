[00:03] <seamusb> yeah, that is what I thought. I was poking around in Cro and trying to see if the localhost value is set somewhere but nothing obvious. This is a Cro problem though, I have other simple services running in the same setup. I suspect there is some magic with IP addresses I am missing. I don't think I am doing anything wrong as I took out my own app and dropped in an example CRO app. That did not work either :)

[00:04] <seamusb> It is binding to localhost in the container and that is it... it does not seem to bubble up through to the docker host. I tried host vs bridge networking too and no luck.

[00:19] *** abraxxa-home left
[00:23] *** seamusb left
[00:24] *** seamusb joined
[00:24] <timo> do you have the service.raku that it autogenerated for you if you used "cro stub"?

[00:24] <timo> it takes NAME_OF_YOUR_APP_HOST and NAME_OF_YOUR_APP_PORT from the environment

[00:25] <timo> but you should be able to search for a call to Cro::HTTP::Server.new

[00:26] <seamusb> cool, I will take a look, cheers!

[00:28] <timo> cro stub also generates a Dockerfile for you that has the env vars set in it and also the correct EXPOSE directive

[00:29] <timo> at least i assume it did that for me for this project because i don't remember doing any of this by hand

[00:34] *** eseyman left
[01:27] *** Manifest0 left
[01:52] *** MasterDuke joined
[02:24] *** kylese left
[02:24] *** kylese joined
[03:15] *** kylese left
[03:15] *** kylese joined
[03:33] *** nine left
[03:34] *** camelia left
[03:48] *** silug5 joined
[03:49] *** MasterDuke left
[03:49] *** silug left
[03:49] *** silug5 is now known as silug

[04:05] *** camelia joined
[04:10] *** nine joined
[05:03] *** gabiruh left
[05:03] *** skaji__ left
[05:03] *** skaji__ joined
[05:04] *** gabiruh joined
[05:04] *** Ekho left
[05:05] *** Aedil joined
[05:08] *** Ekho- joined
[05:57] *** elcaro left
[06:59] *** eseyman joined
[08:01] *** Sgeo left
[08:41] *** seamusb left
[08:41] *** seamusb joined
[09:07] *** zenmov left
[09:12] *** seamusb left
[09:13] *** eseyman left
[09:18] *** zenmov joined
[09:24] *** dakkar joined
[09:38] *** Aedil left
[09:52] *** Manifest0 joined
[09:56] *** sena_kun joined
[10:27] <Geth> ¬¶ advent/main: 4ecef5234a | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | raku-advent-2024/authors.md

[10:27] <Geth> ¬¶ advent/main: 6 -> 24, 19 -> 6

[10:27] <Geth> ¬¶ advent/main: review: https://github.com/Raku/advent/commit/4ecef5234a

[10:37] <lizmat> 6 -> 23 actually

[11:53] *** mscha joined
[11:53] <mscha> m: for <a b c>.pairs.combinations(2) -> ($a, $b) { say $a; say $b; }

[11:53] <camelia> rakudo-moar ef46c8e9c: OUTPUT: ¬´Too few positionals passed to '<anon>'; expected 2 arguments but got 0 in sub-signature‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[11:53] <mscha> What's wrong with this?

[13:05] <discord-raku-bot> <antononcube> Interesting... ü§î

[13:09] <discord-raku-bot> <antononcube> @mscha More containerization is needed.

[13:10] <discord-raku-bot> <antononcube> Or flattening.

[13:11] <discord-raku-bot> <antononcube> @mscha Here is code that kind of explains what is going on:  for <a b c>.pairs.combinations(2).flat -> $a, $b { say $a; say $b; } 

[13:12] <discord-raku-bot> <antononcube> Basically, <a b c> has odd number elements, that is why the message "Too few positionals ..."

[13:13] <discord-raku-bot> <antononcube> Another illustration code:  for <a b c>.pairs.combinations(2) -> $a, $b { say (:$a, :$b); } 

[13:13] <discord-raku-bot> <librasteve> seamus‚Äôs: are you going docker run -p 8888:8888 -it name. .?

[13:27] *** seamusb joined
[13:28] <seamusb> just wanted to thank timo for the headup on the cro stub command... the docker images it pulls are out of date, but the dockerfile struture was a help. I also removed Docker Desktop and just used docker-ce.

[13:31] <seamusb> That actually worked :) so two issues - Cro does not seemm to like some level of indirection that happens in Docker Desktop (it has a more complex internal IP routing thingy, compared to standard docker-ce) and also Cro seems to need to be the primary/first thread started in the app. I switched my app logic to a background thread and started Cro first. Bingo! Popped up at localhost:10000 using docker-cd. Nice one timo, thanks!

[13:31] <seamusb> (docker-ce is the simpler community edition cli available for Linux)

[13:32] <lizmat> seamusb++   

[13:32] <lizmat> perhaps turn that into a Cro PR ?

[13:34] <seamusb> Well, I might actually do that :) But I am struggling through building a prototype for a deadline at the moment. It will be January before I get to it. It needs a proper write up really, so on the todo list.

[13:48] <lizmat> ++seamusb 

[14:17] <[Coke]> https://github.com/tony-o/perl6-data-dump/issues/40

[14:26] *** seamusb left
[14:27] <[Coke]> timo: https://github.com/timo/json_fast/pull/93

[14:33] <discord-raku-bot> <nahita3882> > Basically, <a b c> has odd number of elements, that is why the message "Too few positionals ..."  but if you try with, e.g., <a b c d>, same error appears; the oddness would be a problem in the code you shared afterwards (for <a b c>.pairs.combinations(2) -> $a, $b { say (:$a, :$b); }) because the signature now tries to take 2 elements at a time

[14:33] *** Sgeo joined
[14:33] <discord-raku-bot> <nahita3882> but with ($a, $b) it's supposed to take 1 item at a time, then destructure it to 2 things

[14:33] <discord-raku-bot> <nahita3882> when one (or both) of those things is a Pair, the mysterious error mscha showed appears (and I think it's a bug)

[14:46] *** Guest89 joined
[14:47] *** Guest89 left
[15:03] <[Coke]> weird. my PR to json-fast seems to fix my windows issue ('zef test .') in a checkout of my PR passes... 9 times out of 10? I got one test failure with a --debug run... which did not recur.

[15:03] <[Coke]> so maybe there's a flapper in there?

[15:04] <[Coke]> bah, the next 10 didn't fail either.

[15:05] <[Coke]> timo: if you can get a release out for that would be appreciated.

[15:07] <[Coke]> ... heh. I just tried to do 'zef install .' from my PR - failed a test. rerun. passed. wondering if there's still some comp issue that happens first time?

[15:14] <[Coke]> ugexe, japhb : github.com/japhb/CBOR-Simple/issues/4 - there is a 'use lib' in those tests, but it's pulling in libs that are JUST for testing, not the installable libs. The error message, however, is identical to the one I was seeing on JSON::Fast which was resolved by removing the 'use lib 'lib'' from the test files.

[15:14] <[Coke]> (this on my win11 box)

[15:17] <[Coke]> (and that's the only failure left from my windows cert revocation yak shaving yesterday)\

[15:17] <[Coke]> thanks to ugexe++ and ab5tract++ for their help on that.

[15:25] <ugexe> seems like it might be hitting the path length issue trying to precopile t/lib/CodecMatches.rakumod

[15:29] <ugexe> not sure how it could pass its tests with the `use lib ...` removed though since presumably it is needed to use that test helper module in the tests

[15:32] *** thundergnat joined
[15:36] <thundergnat> Actually, mschas example fails due to trying to pass in a list of pairs. When the list is destructured, the pairs are treated as named parameters so there are no positionals to slot into the $a and $b variables.

[15:36] <tellable6> 2024-02-16T00:50:40Z #raku <[Coke]> thundergnat Terminal::ReadKey does not work here, no

[15:37] <thundergnat> Unfortunately, there doesn't seem to be an easy way to override the behavior, other than destructuring inside the block.

[15:38] <thundergnat> m: for <a b c>.pairs.combinations(2) { my ($a, $b) = @_; say $a,' and ',$b; }

[15:38] <camelia> rakudo-moar a4b87c918: OUTPUT: ¬´0 => a and 1 => b‚ê§0 => a and 2 => c‚ê§1 => b and 2 => c‚ê§¬ª

[15:39] <thundergnat> So, not really a bug, but maybe LTA.

[15:41] *** thundergnat left
[15:46] *** donaldh_ is now known as donaldh

[15:55] *** abraxxa-home joined
[16:01] *** Aedil joined
[16:05] *** Aedil left
[16:08] *** yewscion joined
[16:13] *** Aedil joined
[16:21] <[Coke]> patrickb: The path on that is actually slightly longer because I switched out my work ID for "coke". :|

[16:21] <[Coke]> Thankfully it didn't reduce it under the critical limit.

[16:32] *** seamusb joined
[17:33] *** dakkar left
[17:50] *** eseyman joined
[17:50] <ugexe> each time you run `zef install foo` it will precompile everything into a new temporary staging comp unit repository, so a "first time" precompilation failure that gets reused for a second attempt that can succeed wouldnt be a thing

[17:51] <[Coke]> ok. then it

[17:51] <[Coke]> 's probably "just" a flapper.

[17:51] <ugexe> yeah

[17:51] <[Coke]> I can try to setup a stress test and see if I can get it to trigger with more details.

[17:53] <ugexe> im still not sure how you were able to remove that `use lib "lib"` and have tests pass though

[17:54] <[Coke]> .. that's the direction you've been giving for ages?

[17:55] <[Coke]> perhaps you're refering to the CBOR issue as opposed to the JSON::Fast issue?

[17:55] <ugexe> i should have said `use lib "t/lib"`

[17:55] <ugexe> which is fine

[17:55] <ugexe> use lib $*PROGRAM.sibling('lib');

[17:55] <evalable6> ugexe, rakudo-moar 0911eca22: OUTPUT: ¬´Saw 1 occurrence of deprecated code.‚ê§==========‚Ä¶¬ª

[17:55] <evalable6> ugexe, Full output: https://gist.github.com/663eb4c1eb44900458023e4a59145527

[17:56] <ugexe> which gives the tests access to CodecMatches (https://github.com/japhb/CBOR-Simple/blob/452d127acdbcbf2d5ea869475d9b0a2a1cb3b747/t/01-basic.rakutest#L3C5-L3C17)

[17:57] *** mscha left
[17:58] <ugexe> ah i misunderstood your message earlier. i thought you had removed the `use lib`s similar to what you did in JSON::Fast, not that you were just seeing a similar situation but hadnt attempted to correct it

[18:00] <[Coke]> right, that's it. :)

[18:00] <[Coke]> so if it's the path length, will hopefully be able to test patrickb's branch after he makes a build for me.

[18:19] *** mscha joined
[18:19] <mscha> A bit late, but thanks all for the explanations.  The last one (thundergnat) seems correct.  ("for <a b c>.combinations(2) -> ($a, $b)" works fine.)  LTA indeed.

[18:27] <lizmat> if you feel this should be fixed, please make an issue for it

[18:42] <patrickb> [Coke]: Since the new CI pipeline, we have now artifacts for every commit, including relocatable builds for Windows. :-)

[18:42] <patrickb> https://dev.azure.com/Rakudo/rakudo/_build/results?buildId=6659&view=artifacts&pathAsName=false&type=publishedArtifacts

[19:12] *** mscha left
[19:50] *** hellwolf left
[19:50] *** hellwolf joined
[20:01] <ab5tract> patrickb++ and timo++  and. MasterDuke++ and everyone else++ who helped get the CI back into pristine shape!

[20:04] <ab5tract> That was some serious work that you all put in and it‚Äôs deeply appreciated

[20:15] <[Coke]> looks like #20241205.6 ‚Ä¢ Hopefully address $*USER / $*GROUP on Windows

[20:15] <[Coke]> failed on win?

[20:18] *** Aedil left
[20:20] <[Coke]> (I tried to rerun it but I don't have privs - looks like that test might be a flapper?)

[20:36] *** seamusb left
[21:03] *** tjr left
[21:04] *** tjr joined
[21:04] *** whatsnew joined
[21:05] *** whatsnew left
[21:05] *** whatsnew joined
[21:06] *** whatsnew left
[21:20] *** yewscion left
[21:26] *** yewscion joined
[21:33] *** seamusb joined
[21:48] *** yewscion left
[21:56] *** sena_kun left
[22:20] *** seamusb left
[22:35] <patrickb> [Coke]: Did you manage to download and use one one of the CI builds?

[22:48] *** perlbot_ joined
[22:49] *** perlbot left
[22:49] *** perlbot_ is now known as perlbot

[23:03] <[Coke]> I didn't realize that was an option.

[23:03] <[Coke]> I'll give it a shot when back on the windows box

[23:04] <patrickb> üëçüèº

[23:31] *** rakufan1 joined
[23:41] <Geth> ¬¶ advent/main: 865595c29d | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | raku-advent-2024/authors.md

[23:41] <Geth> ¬¶ advent/main: Scheduled day 7

[23:41] <Geth> ¬¶ advent/main: review: https://github.com/Raku/advent/commit/865595c29d

