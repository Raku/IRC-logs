[00:01] <Xliff> How can I get documentation for an installed module?

[00:07] *** jpn joined
[00:07] <ab5tract> Xliff: unfortunately I don't think it's easy atm

[00:12] *** jpn left
[00:15] <ab5tract> That is to say, I'm not sure of an equivalent to, say, `perldoc`

[00:16] <ab5tract> though perhaps, weirdly enough, Podlite might work for this use case..

[00:17] <Xliff> $ zef install rakudoc; rakudoc <module>

[00:17] <Xliff> ab5stract: I was surprised as well.

[00:19] <ab5tract> did `rakudoc` do what you needed?

[00:19] <ab5tract> if so, double surprise :)

[00:28] <Xliff> Actually, yes!

[00:28] <Xliff> How R U btw?

[00:29] <Xliff> I appreciate your willingness to try my software, but for now it works only for Ubuntu

[00:29] <Xliff> I don't have library data on other distributions

[00:30] <Xliff> If you are NOT on ubuntu. Would appreciate the names for the following libs: glib, gio, gobject, pango, gdk and gtk+3

[00:34] *** sftp left
[00:34] *** sftp joined
[01:08] *** jpn joined
[01:13] *** jpn left
[01:21] <ab5tract> Xliff: sure, I'll give it a try

[01:21] <ab5tract> I'm a long-time Linux user that de-camped to macOS last year

[01:21] *** hulk joined
[01:23] *** kylese left
[01:30] <ab5tract> gtk is notoriosly unsupported over here, but that's as good a reason to give it a try as any

[01:49] *** jpn joined
[01:55] *** jpn left
[02:03] <jdv> https://www.reddit.com/r/programming/comments/1cw2ri4/the_ages_of_programming_language_creators/

[02:04] <jdv> perl 6 and raku were created by people of different ages?:)

[02:15] *** hulk left
[02:15] *** kylese joined
[02:16] <discord-raku-bot> <antononcube> @jdv Yeah, but just different middle ages.

[02:16] *** sftp left
[02:20] <discord-raku-bot> <antononcube> Hmm... I can make a better version of that graph in Raku.

[02:20] <discord-raku-bot> <antononcube> And an even better one in Mathematica.

[02:23] <jdv> what do you mean about middle ages?

[02:26] <discord-raku-bot> <antononcube> Maturity of the creator(s), I guess... And that the average age Raku users is 56.

[02:26] <jdv> the graph is about creator age.  not user age.

[02:27] <jdv> the age of the creator or perl 6 and raku are both the same cause they are the same thing and it was larry

[02:27] <jdv> *of

[02:33] <discord-raku-bot> <antononcube> I know it is about the creator age. I am basically saying "made by old people for old people."

[02:44] *** jpn joined
[02:48] *** DarthGandalf left
[02:50] *** jpn left
[03:07] <ugexe> Larry wasn‚Äôt the same age when he created each 

[03:08] <ugexe> Oh wait I thought it was Perl and Raku, not Perl 6 and Raku üò¨

[03:41] *** jpn joined
[03:42] <discord-raku-bot> <antononcube> This is what I got (so far) using "JavaScript::D3":

[03:42] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1242321595951874109/Raku-JS-D3-Bubble-Chart-AgeAtCreation.png?ex=664d69a5&is=664c1825&hm=1fc25d3db3b4c37eed370a543eeff9a650978831f72b7c9a6db46cbd195e8bac&

[03:46] *** jpn left
[03:51] <discord-raku-bot> <antononcube> I have to mark bubble charts more ‚Äútunable‚Äù when it comes to labels colors and font sizes .

[03:57] <discord-raku-bot> <antononcube> Probably the correlation of age-at-creation vs appeared vs rank is more interesting.

[03:57] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1242325319395053618/Raku-JS-D3-Bubble-Chat-Appeared-vs-AgeAtCreation-vs-Rank.png?ex=664d6d1d&is=664c1b9d&hm=62cead8dabc690cc91537aef7a56ce8a55f614dba7f53b48de9406d6e69032a0&

[04:07] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1242327789680590878/Raku-JS-D3-Bubble-Chat-Appeared-vs-AgeAtCreation-vs-NumberOfUsersEstimate.png?ex=664d6f6a&is=664c1dea&hm=c2c41ca0ff3d65ca872860c7d142d9929558089a22a4165ca9ccf1941b38f2fc&

[04:51] <Xliff> antoncube: Can you send me that data set?

[04:57] <Xliff> Ah! https://datawrapper.dwcdn.net/rT0yG/1/ -- There is a link at the bottom to get the .csv

[05:05] *** jpn joined
[05:10] *** jpn left
[05:21] *** jpn joined
[05:26] *** jpn left
[05:30] *** Sgeo left
[05:30] <discord-raku-bot> <librasteve> according to the data, Larry was 33 when he released perl - so smack in the middle of the Gaussian

[05:40] *** kylese left
[05:40] *** kylese joined
[05:45] *** ranie joined
[05:46] *** ranie left
[05:51] <discord-raku-bot> <librasteve> if raku is to continue to thrive, we need to appeal to a new generation of coders ‚Ä¶ there‚Äôs a renaissance of languages for them to try Nim or Elm or Zig or Roc instead

[06:13] *** jpn joined
[06:18] *** jpn left
[06:40] *** Chanakan left
[06:53] <discord-raku-bot> <holmdunc> Elm is a bit moribund already and fading away. Doubt many teenagers use it

[07:02] <discord-raku-bot> <holmdunc> Though that's due to the idiosyncratic stonewall way the project is managed, not a reflection of the language features

[07:14] *** jpn joined
[07:26] *** jpn left
[07:54] *** DarthGandalf joined
[08:16] *** dakkar joined
[08:21] <patrickb> m: "a".lines

[08:21] <camelia> rakudo-moar cf87ccf95: ( no output )

[08:21] <patrickb> m: dd "a".lines

[08:21] <camelia> rakudo-moar cf87ccf95: OUTPUT: ¬´("a",).Seq‚ê§¬ª

[08:22] <patrickb> m: dd "".lines

[08:22] <camelia> rakudo-moar cf87ccf95: OUTPUT: ¬´().Seq‚ê§¬ª

[08:22] <patrickb> Is this a bug or a feature?

[08:22] <patrickb> (The empty string returning no lines instead of an empty line.)

[08:40] <patrickb> roast has no test covering this.

[08:42] <lizmat> m: dd "".split("\n")

[08:42] <camelia> rakudo-moar cf87ccf95: OUTPUT: ¬´("",).Seq‚ê§¬ª

[08:43] <lizmat> good question

[08:44] <lizmat> it's at least consistent with "foo".IO.lines where "foo" is an empty file

[08:44] *** sena_kun joined
[08:54] *** sftp joined
[09:09] <discord-raku-bot> <antononcube> @Xliff The provided TSV file is with incomplete lines. So, I cheated ‚Äî I imported it in R first and exported it as ‚Äúfull lined‚Äù CSV. (It was too late at night for me to make an ad hoc proper importer.) That R importing introduced zeroes for missing data ‚Äî so, the plots I pasted above can be misleading.

[09:13] <patrickb> Datapoint the current behavior of Str.lines makes the following necessary: https://github.com/patrickbkr/Terminal-Widgets/commit/6d672a7f424a7acf19e3fb50719af7026efd1d40

[09:15] <lizmat> you can also write that as if $.text and the code blocks reversed

[09:15] <patrickb> i.e. mapping lines of text will always return a list, except for the empty string where it returns nil 

[09:15] <lizmat> fwiw, I'm afraid changing it to produce an empty string, might break quite a bit of code

[09:17] <lizmat> patrickb: alternately, you could use .split("\n")

[09:20] <patrickb> In any case this should be roasted and doced.

[09:21] *** jpn joined
[09:38] <lizmat> and offered split(/ <?after \n> /) for the !chomp alternative

[10:14] *** dpk left
[10:28] *** jpn left
[10:29] *** jpn joined
[10:29] *** dpk joined
[10:53] *** jpn left
[11:19] *** jpn joined
[11:23] *** jpn left
[11:46] *** vrurg left
[12:14] *** jpn joined
[12:19] *** jpn left
[12:32] <tbrowder> Xliff: a

[12:33] * lizmat clickbaits https://rakudoweekly.blog/2024/05/20/2024-21-curry-primed/

[12:33] <tbrowder> for a quick look you can look up the module in Raku.land

[12:34] <tbrowder> for most modules that should give you source repo where you can read its README

[12:35] <tbrowder> but it all depends on the author--you may have to read the code. in any event, file an issue for doc suggestions

[13:00] *** jpn joined
[13:16] *** vrurg joined
[13:34] <patrickb> I just found https://github.com/Raku/old-design-docs/blob/master/S32-setting-library/Str.pod#user-content-lines That states `Str.lines` should behave similar to `Str.comb(/ \S+ /, $limit)`.

[13:34] <patrickb> m: dd "".comb(/ \S+ /)

[13:34] <camelia> rakudo-moar cf87ccf95: OUTPUT: ¬´().Seq‚ê§¬ª

[13:36] <patrickb> That was a wrong paste. Should be similar to `Str.comb(/ ^^ \N* /, $limit)`

[13:36] <patrickb> m: dd "".comb(/ ^^ \N* /)

[13:36] <camelia> rakudo-moar cf87ccf95: OUTPUT: ¬´("",).Seq‚ê§¬ª

[13:38] <patrickb> So that'd be a minor datapoint to have .lines return a non empty list. I wonder if a Blin run could suffice to find out about the extent of fallout if we'd change this.

[13:43] <patrickb> bisectable: dd "".lines

[13:43] <bisectable6> patrickb, Will bisect the whole range automagically because no endpoints were provided, hang tight

[13:43] <bisectable6> patrickb, ¬¶6c (79 commits): ¬´().Seq‚ê§¬ª

[13:43] <bisectable6> patrickb, Nothing to bisect!

[13:54] <discord-raku-bot> <antononcube> Except patronizing patricks.

[13:58] <lizmat> bisectable6: old=2018.01 dd "".lines

[13:58] <bisectable6> lizmat, On both starting points (old=2018.01 new=cf87ccf) the exit code is 0 and the output is identical as well

[13:58] <bisectable6> lizmat, Output on both points: ¬´().Seq‚ê§¬ª

[13:58] <lizmat> bisectable6: old=2017.01 dd "".lines

[13:58] <bisectable6> lizmat, On both starting points (old=2017.01 new=cf87ccf) the exit code is 0 and the output is identical as well

[13:58] <bisectable6> lizmat, Output on both points: ¬´().Seq‚ê§¬ª

[13:58] <lizmat> bisectable6: old=2016.01 dd "".lines

[13:58] <bisectable6> lizmat, On both starting points (old=2016.01 new=cf87ccf) the exit code is 0 and the output is identical as well

[13:58] <bisectable6> lizmat, Output on both points: ¬´().Seq‚ê§¬ª

[13:58] <lizmat> bisectable6: old=2015.01 dd "".lines

[13:58] <bisectable6> lizmat, Bisecting by exit code (old=2015.01 new=cf87ccf). Old exit code: 1

[13:59] <bisectable6> lizmat, bisect log: https://gist.github.com/1029a14eba401e41e870b7a2940b3476

[13:59] <bisectable6> lizmat, (2015-04-16) https://github.com/rakudo/rakudo/commit/e1e71d39818ffa75d3257f0d3e41d12d4c7ee415

[14:00] <lizmat> hehe... that's the introduction of "dd"  :-)

[14:00] <lizmat> bisectable6: old=2015.01 new=2016.01 say "".lines

[14:00] <bisectable6> lizmat, Bisecting by output (old=2015.01 new=2016.01) because on both starting points the exit code is 0

[14:00] <bisectable6> lizmat, bisect log: https://gist.github.com/7c5d746465483b703dab97b995a131fb

[14:00] <bisectable6> lizmat, (2015-08-29) https://github.com/rakudo/rakudo/commit/eac8b76246e2e4e9f5caa24017b3b57d1c7e724d

[14:01] <lizmat> bisectable6: old=2015.01 new=2016.01 say "".lines.elems

[14:01] <bisectable6> lizmat, On both starting points (old=2015.01 new=2016.01) the exit code is 0 and the output is identical as well

[14:01] <bisectable6> lizmat, Output on both points: ¬´0‚ê§¬ª

[14:01] <lizmat> bisectable6: old=2014.01 new=2015.01 say "".lines.elems

[14:01] <bisectable6> lizmat, On both starting points (old=2014.01 new=2015.01) the exit code is 0 and the output is identical as well

[14:01] <bisectable6> lizmat, Output on both points: ¬´0‚ê§¬ª

[14:01] <lizmat> bisectable6: old=2013.01 new=2014.01 say "".lines.elems

[14:01] <bisectable6> lizmat, No build for revision ‚Äú2013.01‚Äù

[14:02] <lizmat> patrickb: looks like it has had this behaviour since like forever

[14:02] <lizmat> design docs or not

[14:03] <patrickb> I've looked up the original implementation of lines. It behaves the same.

[14:31] <discord-raku-bot> <antononcube> @jdv Thanks for bringing up the "age of creation" post! It was motivating to finish up some plotting routines features.

[14:34] <discord-raku-bot> <antononcube> @Xliff Thanks for the link the plot and data ! Also, I was wrong about the TSV file being with incomplete lines. (This is the TSV file I used :  https://pldb.io/posts/age.tsv .)

[14:53] <ab5tract> patrickb: if you push a branch which fixes it, I'll blin it for you

[14:53] <patrickb> ab5tract: Whoop! Will do!

[15:02] <discord-raku-bot> <antononcube> Here is my latest Raku-made age-of-creation plot. Raku's / Larry's bubble is the top one in the top-rightmost rectangle.

[15:02] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1242492838873399397/Raku-JavaScript-D3-demo-AgeAtCreation-vs-Appeared-vs-NumberOfUsers-for-programming-languages.png?ex=664e0921&is=664cb7a1&hm=f08812d5439ccb62f9fdac9fbee1bef5f9c038dd182cf8a2bca8d91cc250bfc8&

[15:48] *** soverysour joined
[16:07] *** jpn left
[16:24] <discord-raku-bot> <librasteve> my opinion of Elm and Roc success comes from Richard Feldman ‚ÄúUnscripted‚Äù podcast, so not entirely objective

[16:27] <discord-raku-bot> <librasteve> good podcast tho

[16:30] <discord-raku-bot> <librasteve> i was wondering if raku would benefit from the equivalent of the elm html package approach to building more maintainable websites https://package.elm-lang.org/packages/elm/html/latest/ ‚Ä¶ forgive me maybe we have it already? what do you‚Äôll think?

[16:31] <discord-raku-bot> <librasteve> you‚Äôall

[16:34] *** jgaz joined
[16:38] *** dakkar left
[17:04] <discord-raku-bot> <holmdunc> Agreed. I like this one too which has a similar format https://signalsandthreads.com

[17:10] <ab5tract> librasteve: reminds me of SmokeMachine's presentation last year, though that was a bit more focused on components

[17:11] <ab5tract> it would be very cool to have something like what elm offers

[17:23] <discord-raku-bot> <librasteve> pretty much raku can do elm - (except for purity and javascript target ‚Ä¶ which may dilute the benefits a bit)

[17:24] *** jpn joined
[17:28] <SmokeMachine> Why not js target?

[17:29] <SmokeMachine> https://fco.github.io/MemoizedDOM/todo6.html

[17:29] *** soverysour left
[17:31] <ab5tract> SmokeMachine: slick!

[17:32] *** jpn left
[17:32] <SmokeMachine> (It takes long to compile‚Ä¶ but please, take a look att the code on the browser‚Ä¶ you will see it‚Äôs Raku‚Ä¶)

[17:37] <SmokeMachine> (I just used other people stuff..)

[17:38] *** soverysour joined
[17:38] *** soverysour left
[17:38] *** soverysour joined
[17:40] <lizmat> how long is long?

[17:46] <SmokeMachine> Less than a minute on my arc‚Ä¶.

[17:46] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/n0QRDtRL/1716313613.JPG

[17:47] <lizmat> I guess Safari doesn't like it

[17:49] <SmokeMachine> it took 5s on my safari...

[17:49] <lizmat> I waited several minutes :-(

[17:49] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/bEjIB2aj/image.png

[17:50] <SmokeMachine> on a Mac? or on iphone? it didnt open on my iphone...

[17:52] *** jgaz left
[17:52] <SmokeMachine> it's very old... I wonder how better it would work with current code

[17:53] <SmokeMachine> (it used to work on iphone... :(  )

[17:54] <lizmat> MBP in Intel

[17:54] <SmokeMachine> mine is arm... but it used to work on my old intel as well...

[17:55] <lizmat> on an M1: same< just the text "loading..."   :-(

[17:58] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/nb1F4ZUl/CleanShot%202024-05-21%20at%2018.57.18.gif

[17:59] <SmokeMachine> is there any error message on console?

[18:07] <lizmat> TypeError: stack[stackIndex].getFunctionName is not a function. (In 'stack[stackIndex].getFunctionName()', 'stack[stackIndex].getFunctionName' is undefined)

[18:08] <lizmat> TypeError: Raku.eval is not a function. (In 'Raku.eval(code)', 'Raku.eval' is undefined)

[18:37] *** soverysour_ joined
[18:49] *** soverysour left
[18:51] *** xinming left
[18:51] *** PolarBearXL joined
[18:52] *** soverysour joined
[18:53] *** xinming joined
[18:55] *** jgaz joined
[19:15] *** soverysour left
[19:27] <[Coke]> is it me or is Z<broken> in pod?

[19:28] <[Coke]> This is Z<not> OK. -> "This is not OK" when run through raku --doc

[19:31] <lizmat> contents => ["This is ", Pod::FormattingCode.new(type => "X", meta => [], config => {}, contents => ["not"]), " OK"])])]

[19:31] <lizmat> is what $=pod gives me

[19:32] <[Coke]> "X" ??

[19:32] <lizmat> yeah, oddly, RakuAST does the same:

[19:32] <lizmat> RakuAST::Doc::Paragraph.new(

[19:32] <lizmat>       "This is ",

[19:32] <lizmat>       RakuAST::Doc::Markup.new(

[19:32] <lizmat>         letter => "X",

[19:32] <lizmat>         opener => "<",

[19:32] <lizmat>         closer => ">",

[19:32] <lizmat>         atoms  => (

[19:32] <lizmat>           "not",

[19:32] <lizmat>         )

[19:32] <lizmat>       ),

[19:32] <lizmat>       " OK\n\n"

[19:32] <lizmat>     )

[19:33] <[Coke]> ... Should be Z, no?

[19:35] *** xinming left
[19:36] <lizmat> feels like, yes

[19:37] *** xinming joined
[19:42] <lizmat> [Coke]: fwiw it deparses incorrectly, so please make an issue for it

[19:42] <lizmat> I will fix it in RakuAST  :-)    and maybe in the legacy grammar, unless someone beats me to it

[19:42] <[Coke]> $=pod is giving me Z here.

[19:44] <lizmat> hmmmm

[19:45] <lizmat> indeed... my source was wronng  :-(

[19:46] <lizmat> the deparse in RakuAST is also ok  *phew*

[19:47] <lizmat> % RAKUDO_RAKUAST=1 raku --rakudoc 1

[19:47] <lizmat> This is OK

[19:47] <lizmat> so "fixed in RakuAST"  :-)

[19:53] <[Coke]> does rakuast use Pod::To::Text?

[19:58] *** jpn joined
[19:58] *** PolarBearXL left
[19:58] <lizmat> no, RakuDoc::To::Text   (from memory)

[19:59] <lizmat> lib/RakuDoc/To/Text.rakumod

[20:01] <[Coke]> I think it's just NYI ater 20 years and no one noticed.

[20:02] <[Coke]> working on a patch.

[20:14] *** jpn left
[20:15] <[Coke]> https://github.com/rakudo/rakudo/pull/5575

[20:18] <gfldex> Is there a way to add a multi candidate to the front of the list, without a lexical proto and forwarding to the sub in core?

[20:33] <lizmat> not that I know of

[20:35] <lizmat> afk&

[21:00] *** soverysour_ left
[21:03] *** soverysour joined
[21:03] *** soverysour left
[21:03] *** soverysour joined
[21:07] *** soverysour left
[21:47] *** jpn joined
[21:52] *** jpn left
[22:02] <patrickb> ab5tract: I've created a patch. It breaks loads of spectest and some STDOUT output of compile. That settles the matter. No need for a Blin. Thanks anyways!

[22:02] *** Sgeo joined
[22:18] *** sena_kun left
[23:44] <[Coke]> I have a patch. is there a way to do the equivalent of git commit -p where I pick and choose what gets applied?

[23:47] <[Coke]> (Trying to get some of kaipei's old doc patches finally applied)

[23:47] <[Coke]> er, kaiepi!

