[00:05] <japhb> timo: Cool asciinema!  

[00:07] <japhb> FYI for anyone that doesn't know: I am in the process of selling/buying/moving my home, so if you want me to take a look at something, please do use my nick like timo did!  :-)

[00:07] <japhb> (Otherwise I'll miss it, since I can't keep up with IRC at the moment.)

[00:23] *** vrurg_ joined
[00:23] *** vrurg left
[01:05] *** Manifest0 left
[01:09] *** MasterDuke joined
[01:18] <timo> wait, i am supposed to use your nick? but you're already using your nick??

[02:19] *** merp left
[02:21] *** merp joined
[02:33] *** hulk joined
[02:34] *** kylese left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:54] *** MasterDuke left
[04:17] *** Aedil joined
[04:35] *** Guest996 joined
[04:37] *** Guest996 left
[06:09] *** mtj left
[06:19] *** Aedil left
[06:26] *** mtj joined
[06:30] *** Sgeo left
[07:53] <xinming> releasable6: status

[07:53] <releasable6> xinming, Next release will happen when it's ready. There are no known blockers. Changelog for this release was not started yet

[07:53] <releasable6> xinming, Details: https://gist.github.com/b6382276b0757e6d776b03cfd530558f

[08:09] *** human-blip left
[08:12] *** human-blip joined
[08:43] *** Aedil joined
[09:04] *** Manifest0 joined
[09:06] *** finanalyst joined
[09:21] *** dakkar joined
[09:32] *** sena_kun joined
[10:03] *** finanalyst left
[10:13] *** sena_kun left
[10:46] *** human-blip left
[10:48] <discord-raku-bot> <librasteve> hi! I am using submethod TWEAK in a role - my guess is that this is then called on punning or on class new where the class does the role ...? is that roughly right?

[10:51] *** human-blip joined
[10:52] <discord-raku-bot> <librasteve> the problem I have is that I want my role to have defaults but I want my doing class to have it's own defaults ... seems like one solution is to rename submethod TWEAK {...} in the role to method defaults {...} and then to go submethod TWEAK { self.defaults; ... } but that seems a bit manual. Perhaps a better way to ask is "How can I have a role do automatic self initialization?"

[10:58] <lizmat> there is currently no way to do that automatic

[10:58] <lizmat> you will need to do it manually, e.g.:

[10:58] <lizmat> m: role A { method TWEAK(|c) { say "A"; dd c } }; class B does A { method TWEAK(|c) { say "B"; self.A::TWEAK(|c) } }; B.new(:a(42))

[10:58] <camelia> rakudo-moar 7d29c62a9: OUTPUT: «B␤\(:a(42))␤A␤»

[10:58] <discord-raku-bot> <librasteve> yeah - I see ... thought that would be the case

[10:59] <discord-raku-bot> <librasteve> tx!

[11:00] <discord-raku-bot> <librasteve> guess it's probably best to keep the word TWEAK away from roles to help maintainability - I will stick with method defaults

[11:04] <lizmat> fwiw, the object initialization machinery would support multiple TWEAK calls

[11:04] <lizmat> we only need to decide how to indicate that, and possibly in which order they should be called

[11:38] <discord-raku-bot> <librasteve> I imagine that "formally" the TWEAK/BUILD mechanisms could/should be confined to classes and that any parallel autoinit for roles be given a new name and potentially a different calling pattern --- why do I say that, well there's a bunch of things that work at compile time and a bunch of things that don't --- for example I tried to use BEGIN {...} to init my role (durrr). So to a beginner/intermediate coder then a

[11:38] <discord-raku-bot> different name would make this a lot clearer ... maybe submethod TUNE {...}

[11:40] <discord-raku-bot> <librasteve> I have discovered that I can either put my TWEAK in my class, or it can be provided in a role ... that's cool - but it still only gets called when the role is instantiated by a class ... so no need to change that if we have a new name

[11:48] <lizmat> m: role A { method TWEAK { dd } }; A.new

[11:48] <camelia> rakudo-moar 7d29c62a9: OUTPUT: «method TWEAK(A $:: *%_)␤»

[11:48] <lizmat> if you instantiate a role, the TWEAK will get called ?

[11:49] <lizmat> in any case, a TUNE method would just be another way to apply syntactic sugar

[11:49] <lizmat> in the object build mechanism it would just be another Callable to be called

[11:55] <patrickb> Also, role init is a solved problem in 6.e. Vrurg put a lot of work into improving the situation.

[11:57] <patrickb> https://blogs.perl.org/users/vadim_belman/2019/12/post.html

[11:58] <patrickb> librasteve, lizmat: ^

[12:00] *** apac joined
[12:04] <lizmat> patrickb: good point !

[12:14] *** clarkema left
[12:59] <guifa> ah, I just needed to use 6.e.PREVIEW haha I was literally dealing with the overridden TWEAK the other day

[12:59] <lizmat> yeah, TIL again

[13:03] <guifa> I think the only major thing I've come across (and now forgotten the context) is to get the COMPOSE method, but I guess TWEAK is a decent enough substitute

[13:03] <lizmat> there is no COMPOSE method afaik

[13:03] <lizmat> it was sorta speculated

[13:04] <lizmat> but never considered to be needed, as the mainline of a role serves that purpose

[13:14] <guifa> hmm, mainline almost works

[13:15] *** Aedil left
[13:15] <guifa> problem is referencing $?CLASS almost always gets a "could not instantiate" error (makes sense) 

[13:18] <guifa> actually wait, it's more than that.  it gets called both at composition (foo does bar) but also on each instantiation.  TWEAK sounds right for the latter

[13:19] <guifa> nope I'm an idiot and shouldn't think outloud.  I was doing bar.new instead of foo.new in my example LOL

[13:25] <xinming> Today when I organize chat log snippets I asked, I saw Zoffix answered a lot of my questions, How is he now?

[13:28] <patrickb> I think little is known. From the little I've heard it seems he's fine and found other fun endeavors to pursue.

[13:28] <guifa> he has popped back to the Raku world *very* occasionally

[13:41] <lizmat> he is still missed

[13:50] *** silug left
[13:50] *** silug joined
[13:50] <guifa> indeed

[14:19] *** yewscion joined
[14:20] * [Coke] sends zoffix some good vibes.

[14:21] <discord-raku-bot> <antononcube> @guifa What is the status of your LLM endeavors?

[14:21] <guifa> antononcube: about to get back to it today

[14:21] <discord-raku-bot> <antononcube> More importantly (for me) are you using chatbooks?

[14:21] <guifa> had to finish up a project for my networking class 

[14:22] <discord-raku-bot> <antononcube> I have to update "WWW::Gemini" with Google's new models. (This should be automated soon.)

[14:23] *** apac left
[14:31] <discord-raku-bot> <antononcube> I hope to go to the Perl/Raku conference in June 2025. Is there any restriction for the number of talks a person can present?

[14:47] *** yewscion left
[14:56] *** yewscion joined
[15:11] <discord-raku-bot> <librasteve> patrickb, lizmat: I simultaneously hopeful and confused - not got time to try 6.e.PREVIEW (on something else) but will definitely let you'all know how it pans out ... no doubt I will have some troubles!

[15:11] <discord-raku-bot> <librasteve> (getting mhy head around it)

[15:13] <tbrowder> antononcube: i suspect not based on recent raku/perl conf in us

[15:38] <guifa> antononcube: negative.  What may happen is if there are a fair number of others we might balance things out

[16:21] *** apac joined
[16:29] <Geth> ¦ advent: massa++ created pull request #119: Update authors.md

[16:29] <Geth> ¦ advent: review: https://github.com/Raku/advent/pull/119

[16:32] *** guifa left
[16:41] *** Aedil joined
[16:55] *** donaldh_ is now known as donaldh

[17:22] *** guifa joined
[17:26] <Geth> ¦ advent/main: 8405953843 | (Humberto Massa)++ (committed using GitHub Web editor) | raku-advent-2024/authors.md

[17:26] <Geth> ¦ advent/main: Update authors.md (#119)

[17:26] <Geth> ¦ advent/main: 

[17:26] <Geth> ¦ advent/main: I have idea for two articles, and maybe a third... but I will only commit the two first for now

[17:26] <Geth> ¦ advent/main: review: https://github.com/Raku/advent/commit/8405953843

[17:46] *** apac left
[17:47] <xinming> Is it possible to get the memory usage of a var?

[17:48] <xinming> let's say 'my Num $v = 100',  <-- In this case, Is it possible to know how much memory is used for the $var?

[17:48] *** dakkar left
[17:52] <Geth> ¦ advent/main: 121ad3fa52 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | raku-advent-2024/authors.md

[17:52] <Geth> ¦ advent/main: Schedule Marcel Timmerman's presentation

[17:52] <Geth> ¦ advent/main: review: https://github.com/Raku/advent/commit/121ad3fa52

[18:36] *** sena_kun joined
[18:42] <[Coke]> with that, looks like we need 8 more blog posts to fill up the advent calendar this year.

[18:43] <coleman> I'm on the list already. I'll get mine drafted soon. 

[18:44] <[Coke]> Thanks to everyone volunteering!

[18:44] <lizmat> indeed!

[18:44] <[Coke]> I am happy to act as an editor if anyone needs it

[19:02] *** sena_kun left
[19:12] <guifa> zostay : heads up on your DOM::Tiny module, the auth: is off in META6.json

[19:32] <guifa> is there any good way to catch whenever a socket can't be opened?

[19:33] <lizmat> CATCH { } ?

[19:33] <guifa> it doesn't seem to be catching it

[19:33] <guifa> I wonder if somehow something deeper in Cro is consuming it?

[19:34] <lizmat> ah, Cro...

[19:34] <lizmat> :-)

[19:34] <guifa> haha yeah

[19:34] <guifa> $service.start --> "Nope, can't get the socket"

[19:36] <guifa> it's super minor, but feels like from a webapp standpoint you don't really care too much which port you're on, you can launch on a random one

[19:37] <coleman> For local dev? Maybe. But ports matter

[19:38] <coleman> Some languages (Go?) allow asking for a random listening port by passing 0 for the port number, e.g. net.Listen("tcp", ":0")

[19:38] <guifa> yeah I was just about to try that to see if I could do 0

[19:39] <coleman> The #cro channel is fairly active with Raku community members, too

[20:15] *** guifa left
[21:02] *** guifa joined
[21:08] *** bingos is now known as BinGOs

[21:09] *** Aedil left
[21:11] <xinming> is it possible to get idx along val within .map method?

[21:13] <xinming> m: m: my @x = <a b c>; ((0 .. @x.elems) Z @x).map({ "index: {.[0]}, value: {.[1]}".say; });

[21:13] <camelia> rakudo-moar ba3b24cff: OUTPUT: «index: 0, value: a␤index: 1, value: b␤index: 2, value: c␤»

[21:13] <[Coke]> instead of map you could do .kv.map?

[21:15] <[Coke]> my @x = <a b c>; @x.kv.rotor(2).map({say .[0], .[1]})

[21:15] <evalable6> [Coke], rakudo-moar ba3b24cff: OUTPUT: «0a␤1b␤2c␤»

[21:15] <[Coke]> kv gives you a flat list, so you have to rotor it back to get the structure.

[21:15] <xinming> [Coke]: Thanks, that's what I want.

[21:16] <[Coke]> my @x = <a b c>; for @x.kv -> $k, $v { say $k, $v}

[21:16] <evalable6> [Coke], rakudo-moar ba3b24cff: OUTPUT: «0a␤1b␤2c␤»

[21:16] <xinming> the .grep with :k returns index, the .kv thing returns idx with values. Quite handy.

[21:16] <[Coke]> ^^ if you can do a for, that's a little cleaner IMO

[21:17] <xinming> Yea, I think pair is more useful in my case

[21:17] <xinming> m: my @x = <a b c>; @x.pairs.map({ "index: {.key}, value: {.value}".say; });

[21:17] <camelia> rakudo-moar ba3b24cff: OUTPUT: «index: 0, value: a␤index: 1, value: b␤index: 2, value: c␤»

[21:17] <xinming> :-)

[21:18] <xinming> bed time, thanks

[21:18] <[Coke]> cool!

[21:18] <xinming> I can sleep well without question hang in my head.

[21:21] *** apac joined
[21:24] <[Coke]> the most relaxing

[22:24] *** yewscion left
[22:26] <discord-raku-bot> <nahita3882> when map's mapper has arity 2, it also DWIMs, so we don't need to rotor actually

[22:26] <discord-raku-bot> <nahita3882> m: my @x = <a b c>; @x.kv.map(-> $k, $v {say "$k$v"})

[22:26] <evalable6> nahita3882, rakudo-moar ba3b24cff: OUTPUT: «0a␤1b␤2c␤»

[22:26] <discord-raku-bot> <Raku eval>  0a 1b 2c 

[22:27] <discord-raku-bot> <nahita3882> or with placeholders:

[22:27] <discord-raku-bot> <nahita3882> m: my @x = <a b c>; @x.kv.map({ say "$^k$^v" })

[22:27] <discord-raku-bot> <Raku eval>  0a 1b 2c 

[22:27] <evalable6> nahita3882, rakudo-moar ba3b24cff: OUTPUT: «0a␤1b␤2c␤»

[22:27] <discord-raku-bot> <nahita3882> conveniently ord("k") < ord("v")

[22:28] <[Coke]> nice

[22:30] *** apac left
[22:56] <discord-raku-bot> <librasteve> m: my @x = <a b c>; @x.kv.map(~).say

[22:56] <evalable6> librasteve, rakudo-moar ba3b24cff: OUTPUT: «(exit code 1) ===SORRY!=== Error while compilin…»

[22:56] <discord-raku-bot> <Raku eval>  (0a 1b 2c) 

[22:56] <evalable6> librasteve, Full output: https://gist.github.com/f964d6fec078ff2894d884dcd6d069fa

[22:57] *** inspork joined
[22:57] <discord-raku-bot> <librasteve> m: my @x = <a b c>; @x.kv.map(*~*).say

[22:57] <evalable6> librasteve, rakudo-moar ba3b24cff: OUTPUT: «(0a 1b 2c)␤»

[23:21] *** yewscion joined
[23:31] <tbrowder> lizmat: re advent: i’m having serious computer isd

[23:32] <tbrowder> *issues and will probably not be able to start on the first few days…

[23:36] *** yewscion left
[23:46] *** Sgeo joined
