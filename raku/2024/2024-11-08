[01:22] *** tejr left
[01:27] *** tejr joined
[01:41] *** tejr left
[01:49] *** tejr joined
[02:09] *** Manifest0 left
[02:52] *** hulk joined
[02:53] *** kylese left
[03:15] *** hulk left
[03:15] *** kylese joined
[04:10] *** Aedil joined
[05:06] *** guifa left
[07:28] *** bdju left
[07:30] *** bdju joined
[08:01] *** Sgeo__ left
[08:16] *** holyghost left
[08:47] *** Manifest0 joined
[08:49] *** sena_kun joined
[09:26] *** sena_kun left
[09:38] *** bdju left
[09:40] *** bdju joined
[09:56] *** bdju left
[09:56] *** bdju joined
[10:23] *** abraxxa-home joined
[10:35] *** abraxxa-home left
[11:50] *** zara joined
[12:26] *** abraxxa-home joined
[12:41] *** apac joined
[12:51] *** abraxxa-home left
[12:53] *** guifa joined
[15:46] *** abraxxa-home joined
[16:13] *** jgaz joined
[16:34] *** jgaz left
[16:39] *** jgaz joined
[16:53] *** daci joined
[16:54] *** daci left
[17:19] *** jgaz left
[17:23] *** jgaz joined
[17:24] *** jgaz left
[17:24] *** jgaz joined
[17:46] *** apac left
[17:47] *** Sgeo joined
[17:59] <discord-raku-bot> <librasteve> o/

[18:00] <discord-raku-bot> <librasteve> I am trying to install Inline::Python and get my Dockerfile sorted out - but hetting this error https://github.com/niner/Inline-Python/issues/46

[18:01] <discord-raku-bot> <librasteve> at the bottom of the Issue I wrote There is no dir /home/jovyan/Inline-Python/resources at all which makes me suspect the "builder": "Distribution::Builder::MakeFromJSON"

[18:01] <discord-raku-bot> <librasteve> maybe a zef expert (tonyo?) can take a look and advise?

[18:02] <discord-raku-bot> <librasteve> [I suspect that this is the root cause of the https://github.com/niner/Inline-Python/issues/44 prior issue that has been open since 2022

[18:02] <discord-raku-bot> <librasteve> ]

[18:06] *** jgaz left
[18:06] *** jgaz joined
[18:13] <tonyo> what's the output of `make clean all` ?

[18:13] <tonyo> you might have to run it as two commands, depending on your make eg `make clean && make` 

[18:39] <discord-raku-bot> <librasteve> make: *** No rule to make target 'clean'.  Stop.

[18:41] <discord-raku-bot> <librasteve> well I'm not running any build commands apart from zef install https://github.com/niner/Inline-Python.git --exclude="python3" --/test

[18:42] <discord-raku-bot> <librasteve> I'm assuming that these are being run by Distribution::Builder::MakeFromJSON during the install

[18:44] <discord-raku-bot> <librasteve>      "resources"   : [ "libraries/pyhelper" ],     "source-url"  : "git://github.com/niner/Inline-Python.git",     "builder": "Distribution::Builder::MakeFromJSON",     "build": {         "makefile-variables": {             "pyhelper": {"resource": "libraries/pyhelper"},             "cflags": {                 "run": [                     "python3-config",                     "--cflags",                    

[18:44] <discord-raku-bot> "--embed"                 ]             },             "ldflags": {                 "run": [                     "python3-config",                     "--ldflags",                     "--embed"                 ]}}} 

[18:52] <discord-raku-bot> <librasteve> sorry - must dash ... can continue on the Issue 46 maybe?

[18:59] <jdv> wut is happenin?

[19:07] *** japhb left
[19:12] *** japhb joined
[19:17] *** apac joined
[19:19] *** abraxxa-home left
[19:23] <discord-raku-bot> <antononcube> @jdv "Offline::Python"... By @librasteve might figure out why...

[19:49] *** Aedil left
[19:54] *** eseyman left
[19:56] *** manu_ joined
[19:57] *** manu_ is now known as eseyman

[20:00] *** yewscion joined
[20:58] <jdv> i meant the crazy paste in chan:)

[20:58] *** discord-raku-bot left
[20:58] *** discord-raku-bot joined
[20:58] <jdv> and fyi @nick does nothing for my irc client.

[20:59] <jdv> who runs the bridge?

[20:59] *** discord-raku-bot left
[20:59] *** discord-raku-bot joined
[20:59] <jdv> good riddance

[20:59] <jdv> who runs the bridge?

[20:59] *** discord-raku-bot left
[20:59] *** discord-raku-bot joined
[21:00] <jdv> whatever.  i see its a shit show.

[21:00] *** discord-raku-bot left
[21:00] *** discord-raku-bot joined
[21:00] <jdv> "shut it down" 

[21:00] *** discord-raku-bot left
[21:00] <jdv> i liked Dark City

[21:00] *** discord-raku-bot joined
[21:03] <jdv> lizmat: who runs this chan?

[21:03] *** discord-raku-bot left
[21:04] *** discord-raku-bot joined
[21:47] *** yewscion left
[21:53] *** sena_kun joined
[22:03] *** oodani left
[22:04] *** oodani joined
[22:20] *** Xliff joined
[22:21] <Xliff> lizmat: You around?

[22:22] <Xliff> Or anyone with a Mac who has distributed a shared lib with their Raku modules before...

[22:23] <guifa> Xliff: I have

[22:25] <guifa> https://github.com/alabamenhu/UserLanguage/

[22:35] <Xliff> guifa: I need to compile a shared lib for the tests of my Pango module.

[22:35] <Xliff> https://github.com/Xliff/p6-Pango

[22:35] <Xliff> You can find the source code in the t/ library.

[22:35] <Xliff> What would be the best way to set that up to build for both PC and Mac

[22:35] <Xliff> ?

[22:36] <Xliff> guifa: Thanks in advance, btw -- this will be a big help! :)

[22:38] <guifa> looks like the scripts folder is a symbolic link so I can't follow fully what's there.  In my case, I prebuild (since not all Mac users have a c compiler, although I imagine most Raku users do) and link to the library as a resource

[22:38] <guifa> so I guess I was installing it more as an internal native, rather than a shared

[22:39] <Xliff> Yeah. scripts/ won't be a part of the distro. That's where my build-tools go

[22:39] <Xliff> OK, so you are suggesting I have a prebuilt .dyllib?

[22:40] <Xliff> And it has to be shared because the test uses NativeCall

[22:40] <guifa> For the Mac it seems to work okay for simple stuff -- if there's more than a single binary might be trickier?  

[22:40] <guifa> NativeCall can call something in %?RESOURCES

[22:41] <Xliff> Yep.

[22:41] <guifa> https://github.com/alabamenhu/UserLanguage/blob/393e86ecf545fac17f2a18a45a5bda18e14bebb7/lib/User/Language/Mac.rakumod#L30 

[22:41] <Xliff> Cool

[22:41] <guifa> I believe however on the newer versions there's one more step -- lizmat made a library for it

[22:42] <guifa> not sure if this technique triggers it though

[22:42] <Xliff> It's a start though. Thanks!

[22:44] <guifa> I would imagine, however, that doing it in a build script would work much the same -- you could detect you're on a Mac, compile and install to some location, and then generate a value to be read in as a BEGIN statement

[22:44] <guifa> the latter bit may be overkill but I use it in one of my other modules

[22:46] <guifa> https://github.com/alabamenhu/TimezonesZoneInfo/blob/main/Build.pm6 this detects two values, writes them to a resources file, which are then read into the main script on precompile: https://github.com/alabamenhu/TimezonesZoneInfo/blob/main/lib/Timezones/ZoneInfo.rakumod#L57

[22:47] *** apac left
[22:57] *** sena_kun left
[23:02] *** kaskal left
[23:29] *** kaskal joined
