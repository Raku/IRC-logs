[00:47] *** skyesoss left
[00:49] *** skyesoss joined
[00:55] *** guifa left
[01:23] *** MasterDuke joined
[01:49] *** kylese left
[01:49] *** kylese joined
[02:15] *** kylese left
[02:15] *** kylese joined
[02:52] *** thaewrapt left
[02:57] *** thaewrapt joined
[03:02] *** thaewrapt left
[03:13] *** thaewrapt joined
[03:43] *** thaewrapt left
[03:51] *** skyesoss left
[03:55] *** thaewrapt joined
[04:03] *** thaewrapt left
[04:14] *** thaewrapt joined
[04:19] *** thaewrapt left
[04:30] *** thaewrapt joined
[04:41] *** thaewrapt left
[04:44] *** roh joined
[04:51] *** roh left
[04:52] *** thaewrapt joined
[04:59] *** Aedil joined
[04:59] *** thaewrapt left
[05:10] *** thaewrapt joined
[05:19] *** thaewrapt left
[05:30] *** thaewrapt joined
[05:30] *** Sgeo left
[05:36] *** thaewrapt left
[05:45] *** MasterDuke left
[05:46] *** thaewrapt joined
[05:52] *** thaewrapt left
[06:02] *** thaewrapt joined
[06:15] *** vrurg_ joined
[06:17] *** jmcgnh left
[06:18] *** vrurg left
[06:33] *** jmcgnh joined
[07:07] *** guifa joined
[07:10] <Geth> ¦ ecosystem/main: a450c0a480 | (Elizabeth Mattijsen)++ | META.list

[07:10] <Geth> ¦ ecosystem/main: GFLW has moved to fez

[07:10] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/a450c0a480

[07:13] <Geth> ¦ ecosystem/main: e8d4f66378 | (Elizabeth Mattijsen)++ | META.list

[07:13] <Geth> ¦ ecosystem/main: Removed because repo will be archived

[07:13] <Geth> ¦ ecosystem/main: 

[07:13] <Geth> ¦ ecosystem/main: See https://github.com/uasi/messagepack-pm6/issues/8#issuecomment-2272667939

[07:13] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/e8d4f66378

[07:24] *** sena_kun joined
[08:03] *** sena_kun left
[08:12] *** xinming joined
[08:16] *** guifa left
[08:51] <Geth> ¦ ecosystem/main: 39c232c070 | (Elizabeth Mattijsen)++ | META.list

[08:51] <Geth> ¦ ecosystem/main: Remove kalkin's distros

[08:51] <Geth> ¦ ecosystem/main: 

[08:51] <Geth> ¦ ecosystem/main: See https://github.com/kalkin/Ddt/issues/19#issuecomment-2272923540

[08:51] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/39c232c070

[09:10] *** abraxxa-home joined
[09:57] *** abraxxa-home left
[10:54] <Geth> ¦ ecosystem/main: e9b29d6b1d | (Elizabeth Mattijsen)++ | META.list

[10:54] <Geth> ¦ ecosystem/main: Chemistry::Elements now lives in raku-community-modules

[10:54] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/e9b29d6b1d

[11:23] *** guifa joined
[11:43] *** xinming left
[11:50] <discord-raku-bot> <antononcube> @lizmat I like —paragraph context of rak . Its mission is obvious from the name.

[11:50] <lizmat> yeah, I thought you would like it

[11:51] <lizmat> latest String::Utils already has the basic logic for it, just need to put it into App::Rak

[11:57] <discord-raku-bot> <antononcube> I strongly suspect I will change / update “Chemistry::Elements”. A big part of “Chemistry::Stoichiometry” should become “Chemistry::Elements”.

[12:00] <discord-raku-bot> <antononcube> Then “Chemistry::Stoichiometry” would do “only” formulas and equations parsing and the corresponding molecular mass and balancing computations.

[12:10] <lizmat> antononcube go ahead  :-)  as long as the current interface continues to exist

[12:27] <guifa> When I've changed names for modules I honor the old names but toss a warning about the changes 

[12:28] <guifa> and then give myself something like 12-18 months before finally removing that entirely

[12:53] <discord-raku-bot> <antononcube> It seems to me that “Chemistry::Elements” was made more for didactic purposes. If you look at the code it looks like “example Raku code.”

[12:54] <discord-raku-bot> <antononcube> And B. Foy did write a book on Raku. (The first Raku-book I read.)

[12:54] <discord-raku-bot> <antononcube> (Or maybe the 2nd…)

[12:55] <lizmat> maybe you'd take some elements of ::Elements to ::Stoichiometry and leave ::Elements as is?

[12:55] <discord-raku-bot> <antononcube> So, is it a good idea to rename that package from “Chemistry::Elements” to “Chemistry::Elements::Didactic” or “Chemistry::Elements::Exemplary”, etc.?

[12:56] <discord-raku-bot> <antononcube> @lizmat No need for that: “Chemistry::Stoichiometry“ does everything “Chemistry::Elements” and the issues / future plans listed “Chemistry::Elements” issues.

[12:56] <lizmat> I'm not sure...  it's a functional package afaics

[12:57] <lizmat> then I guess we can leave it as is?  

[12:57] <lizmat> afk for a bit&

[12:57] <discord-raku-bot> <antononcube> Ok. Doing nothing is just fine.

[13:36] <Geth> ¦ ecosystem/main: 4736426fc7 | (Elizabeth Mattijsen)++ | META.list

[13:36] <Geth> ¦ ecosystem/main: Remove hartenfels' distros

[13:36] <Geth> ¦ ecosystem/main: 

[13:36] <Geth> ¦ ecosystem/main: - Javascript::Spidermonkey has been archived

[13:36] <Geth> ¦ ecosystem/main: - Text::Markdown::Discount now lives in raku-community-modules

[13:36] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/4736426fc7

[13:39] <Geth> ¦ ecosystem/main: df7655f548 | (Elizabeth Mattijsen)++ | META.list

[13:39] <Geth> ¦ ecosystem/main: Remove bluebar94's distros

[13:39] <Geth> ¦ ecosystem/main: 

[13:39] <Geth> ¦ ecosystem/main: They live in raku-community-modules now and will soon be released on

[13:39] <Geth> ¦ ecosystem/main: zef

[13:39] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/df7655f548

[13:42] *** guifa left
[13:51] *** thaewrapt left
[14:05] *** skyesoss joined
[14:06] *** thaewrapt joined
[14:07] *** guifa joined
[14:09] *** sadome joined
[14:09] *** sadome left
[14:09] *** sadome joined
[14:09] *** sadome left
[14:10] *** skyesoss left
[14:12] *** sadome joined
[14:12] *** sadome left
[14:12] *** sadome joined
[14:12] *** sadome left
[14:14] *** sadome joined
[14:14] *** sadome left
[14:14] *** sadome joined
[14:14] *** sadome left
[14:23] *** thaewrapt left
[14:25] *** thaewrapt joined
[14:46] *** GreaseMonkey left
[14:46] *** greaser|q joined
[15:23] <Geth> ¦ ecosystem/main: 3c1cafa63e | (Elizabeth Mattijsen)++ | META.list

[15:23] <Geth> ¦ ecosystem/main: Remove titsuki's distros

[15:23] <Geth> ¦ ecosystem/main: 

[15:23] <Geth> ¦ ecosystem/main: See: https://github.com/titsuki/raku-Algorithm-BinaryIndexedTree/issues/6#issuecomment-2273273536

[15:23] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/3c1cafa63e

[15:48] <discord-raku-bot> <antononcube> Hmm... titsuki was recently active on "Algorithm::KdTree".

[15:50] <lizmat> yeah...but without this removal, their current work on moving to zef would show up as updated modules in raku.land

[15:50] <lizmat> all of the modules are still installable from the REA, and once titsuki has moved the distros to zef, will re-appear again

[15:50] <lizmat> which I think could well be today

[16:12] *** jdv left
[16:13] *** jdv joined
[16:14] <discord-raku-bot> <antononcube> Good to know!

[16:22] *** skyesoss joined
[18:32] *** sena_kun joined
[19:40] *** Aedil left
[19:43] <tbrowder> antononcube: i understand, but for my stuff i prefer classes. and i try to calculate data rather than store it when possible.

[19:45] <tbrowder> but now that i think i have the resources thing semmingly  *solved* (100% roundtrip in my current baby module), there will be more stored data (but not too much)

[19:46] <tbrowder> *seemingly

[20:29] *** skyesoss left
[21:06] *** guifa left
[21:06] *** guifa joined
[21:38] *** sena_kun left
[22:08] <discord-raku-bot> <roguerakudev> Has anyone used Raku for scripting in a C/C++ project? Something where Raku gets executed by the C(++) code and has access to its functions

[22:09] <discord-raku-bot> <roguerakudev> I'm wondering if that's even feasible or if it would be better to use some type of IPC or just call Raku and return data via STDOUT or something

[22:17] <ab5tract>  I’m not aware of a project that has done so. It would definitely be n interesting exercise. I think you might make the most progress by explicitly tying yourself to MoarVM and its data structures

[22:21] *** Sgeo joined
[22:26] <guifa> Hmm, I mean, Raku can access C++ functions.  I think I do remember someone showing how to more or less do a call back but I forget who/where.  MIght be a starting point

[22:29] <guifa> https://stackoverflow.com/questions/66286010/whats-the-protocol-for-calling-raku-code-from-c-code

[22:29] <guifa> It's not 100% seamless, but you could make a call sending an array of function pointers, and assign those to variables accordingly in C

[22:42] <ab5tract> I wish we could wrap entire C++ classes easily. But very few languages seem to have managed that

[22:43] <ab5tract> guifa: Great link!

[22:44] <guifa> meanwhile I ended up going the STDIN / STDOUT route for my current project, but it had some other considerations there that made that just a lot easier

[22:47] <guifa> (it needed to start up an Obj-C loop and then things were getting passed around tons of different

[23:06] *** vrurg_ left
[23:13] *** vrurg joined
