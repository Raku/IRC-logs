[00:04] *** Manifest0 left
[01:05] *** hulk joined
[01:05] *** kylese left
[02:15] *** hulk left
[02:15] *** kylese joined
[05:09] *** soverysour joined
[05:13] *** soverysour left
[05:30] *** Sgeo left
[05:56] *** sena_kun left
[05:56] *** sena_kun joined
[06:04] *** jpn joined
[06:47] *** jpn left
[07:11] *** jpn joined
[07:17] *** jpn left
[07:19] *** jpn joined
[07:25] *** jpn left
[07:42] *** sena_kun left
[07:45] *** sena_kun joined
[07:54] *** dakkar joined
[08:11] *** lizmat_ joined
[08:12] *** Geth left
[08:14] *** lizmat left
[08:16] *** lizmat_ left
[08:16] *** lizmat joined
[08:33] *** jpn joined
[08:36] *** nine left
[08:36] *** nine joined
[08:44] *** Manifest0 joined
[08:44] <xinming> m: my $t = "1"; my $str = q:c["Hello" \{  {$t}]; $str.say;

[08:44] <camelia> rakudo-moar 1a61ed025: OUTPUT: «"Hello" \{  1␤»

[08:45] <xinming> In this example, shouldn't the \{ be output as {  instead of \{    ?

[08:45] <xinming> Is the escape wrong in this case? as q:c means escape the \{

[08:45] <xinming> means \{ shouldn't be processed as closure, But not output as \{

[08:48] <ab5tract> :c is short for :closure which means “Interpolate {...} expressions”

[08:51] *** jpn left
[08:51] <ab5tract> q is analogous to single quotes, so escaped sequences are reperesented literally

[08:52] <ab5tract> m: say qq[ \{ say “not in a closure” \}]

[08:52] <camelia> rakudo-moar 1a61ed025: OUTPUT: « { say “not in a closure” }␤»

[08:53] *** jpn joined
[08:53] <ab5tract> m: my $t = "1"; my $str = q:b:c["Hello" \{  {$t}]; $str.say;

[08:53] <camelia> rakudo-moar 1a61ed025: OUTPUT: «"Hello" {  1␤»

[08:54] <ab5tract> xinming: ^^

[09:00] *** Geth joined
[09:04] <xinming> Thanks for the clarification, I don't know there is :b adv for the q :-)

[09:09] *** sena_kun left
[09:20] <ab5tract> That one and plenty more besides :). https://docs.raku.org/syntax/Q

[12:05] *** jpn left
[12:54] *** jpn joined
[12:59] *** jpn left
[13:11] *** jpn joined
[13:19] *** soverysour joined
[13:23] *** soverysour left
[13:24] <andinus> i get "ERROR: Could not retrieve executable path." when trying to run rakudo, downloaded the binary from https://rakudo.org/downloads/rakudo - this is running inside a chroot, when i run `strace raku` - just before printing the error it tries to open /proc/self/exe - which is not available inside the chroot

[13:24] <andinus> any workarounds?

[13:30] <[Coke]> from here: https://github.com/libuv/libuv/blob/e9f29cb984231524e3931aa0ae2c5dae1a32884e/src/unix/procfs-exepath.c#L36

[13:31] <[Coke]> Can you get a trace to what's invoking it?

[13:32] <discord-raku-bot> <antononcube> releasable6: status

[13:32] <releasable6> antononcube, Next release in ≈24 days and ≈5 hours. There are no known blockers. Changelog for this release was not started yet

[13:32] <releasable6> antononcube, Details: https://gist.github.com/b35a6f6d4832186639b6a05fada0e400

[13:36] <[Coke]> andinus: https://superuser.com/questions/165116/mount-dev-proc-sys-in-a-chroot-environment ?

[13:39] <andinus> yes, i'll just run strace on it, i was playing around with the vm and it weirdly it worked but i'm unable to replicate that again 

[13:39] <[Coke]> Good luck!

[13:39] <andinus> [Coke]: mounting proc won't be an option, i need to do it without that

[13:42] <andinus> thanks!

[13:42] <andinus> now the error changes to 'raku: error while loading shared libraries: libmoar.so: cannot open shared object file: No such file'

[13:46] <andinus> oh it goes back to that error, once i put libmoar in /usr/lib

[13:47] <andinus> [Coke]: strace prints these lines before the program terminates: https://paste.debian.net/hidden/6f7cfd33/

[13:47] <andinus> is there a way to specify the executable path?

[13:53] <[Coke]> I don't know, but I'd google for libuv solutions.

[13:55] <[Coke]> I see a jvm call in that trace - are you using the JVM version of raku or the (default) MoarVM version?

[13:57] <[Coke]> I imagine you'd have some options if you were building rakudo from source, we could check to see if /proc was available and try something from https://stackoverflow.com/questions/1023306/finding-current-executables-path-without-proc-self-exe

[13:57] <[Coke]> but I don't think there's anything you can just run today to make that work.

[13:58] <andinus> no, i'm using moarvm version, it seems like it's just looking for some .so files (the reason for jvm dir)

[14:00] <andinus> i see, makes sense. i'll look for some other workarounds

[14:00] <andinus> thank you :)

[14:01] <andinus> same trouble when installing with rakubrew, which makes sense it does the same thing as i did manually

[14:09] <[Coke]> Might be worth opening a ticket on rakudo/rakudo on github that you can't run the exe in a chroot.

[14:09] <[Coke]> might get some dev eyeballs on it that way

[14:13] <andinus> yes, i'll open a ticket in sometime

[14:46] <[Coke]> andinus++

[15:16] *** haxxelotto joined
[15:38] *** soverysour joined
[15:46] * [Coke] givers DDG a week as his default search engine to see how it goes.

[15:49] *** haxxelotto left
[15:51] *** haxxelotto joined
[15:52] *** haxxelotto left
[15:53] *** haxxelotto joined
[16:00] <coleman> andinus: on the docs CI environment we build Rakudo w/o root and the configure script can be run to look for shared libs in a non-standard directory; https://github.com/Raku/infra/blob/main/images/scripts/install_rakudo.sh#L8

[16:01] <coleman> perl Configure.pl --prefix=$HOME/MoarVM/install --gen-moar --backends=moar  # (in the rakudo git checkout)

[16:01] <coleman> see scripts for nqp, moarvm, and rakudo

[16:32] *** jpn left
[16:32] <[Coke]> colman++

[16:47] *** jpn joined
[16:48] *** loihjlj joined
[16:48] *** loihjlj left
[17:01] *** dakkar left
[17:02] <[Coke]> coleman++ #oops

[17:05] <coleman> :) Thanks for the props

[17:42] *** jpn left
[17:43] *** Tirifto left
[17:46] *** Tirifto joined
[18:38] *** haxxelotto left
[18:43] *** sena_kun joined
[18:48] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/06/03/2024-23-sparkling/

[18:55] <discord-raku-bot> <antononcube> @lizmat Thanks for the update!

[19:30] *** haxxelotto joined
[20:07] *** soverysour left
[20:15] *** soverysour joined
[20:20] *** soverysour left
[20:24] *** soverysour joined
[20:30] *** haxxelotto left
[20:47] *** AlexDaniel joined
[20:54] <jdv> hmm, how come searching for "Whateverable" doesn't work on raku.land?

[20:54] *** soverysour left
[20:56] <AlexDaniel> jdv: yeah, it's not listed for some reason hmmm

[20:57] *** soverysour joined
[20:57] *** soverysour left
[20:57] *** soverysour joined
[21:00] <AlexDaniel> if you find the reason and it's something in META6.json, feel free to commit a fix :)

[21:00] <AlexDaniel> c: say 42

[21:00] <committable6> AlexDaniel, Seems like you forgot to specify a revision (will use “v6.c” instead of “say”)

[21:00] <committable6> AlexDaniel, ¦v6.c (80 commits): «42␤»

[21:01] <AlexDaniel> c: HEAD say 42

[21:01] <committable6> AlexDaniel, ¦HEAD(16ce594): «42␤»

[21:01] <AlexDaniel> well, it takes quite some time to run code on *all* releases… :)

[21:03] *** soverysour left
[22:16] *** Sgeo joined
[22:23] *** AlexDaniel left
[23:04] *** sena_kun left
[23:39] *** Manifest0 left
