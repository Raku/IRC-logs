[00:10] *** itaipu joined
[00:30] *** jpn joined
[00:34] *** jpn left
[00:45] *** epony left
[00:47] *** epony joined
[00:59] *** Manifest0 left
[01:02] *** epony left
[01:04] *** epony joined
[01:04] *** Xliff joined
[01:04] <Xliff> \o

[01:04] <tellable6> 2024-01-17T13:36:32Z #raku <ugexe> Xliff_: but yes, you can slurp a resource, and you can use a resource directly in a is native

[01:04] <tellable6> hey Xliff, you have a message: https://gist.github.com/a97e18e8a9e2cd230d87dad5d1ae6640

[01:05] <Xliff> ugexe: When I attempt to use a Distribution::Resource in this form: "is native(&subname)" where subname() returns that Distribution::Resource, I get the following error:

[01:05] <Xliff> This type cannot unbox to a native string: P6opaque, Distribution::Resource

[01:05] <Xliff>   in method setup at /home/cbwood/.rakubrew/versions/moar-blead/install/share/perl6/core/sources/C2A04A287139FDA9DBF2B3A9A160B040FB27D294 (NativeCall) line 296

[01:05] <Xliff>   in method setup at /home/cbwood/.rakubrew/versions/moar-blead/install/share/perl6/core/sources/C2A04A287139FDA9DBF2B3A9A160B040FB27D294 (NativeCall) line 366

[01:05] <Xliff>   in sub raku-nativecall at /home/cbwood/.rakubrew/versions/moar-blead/install/share/perl6/core/sources/B7A8A3BB8F916D9DC9EF34B47D440C8234E7FCB2 (NativeCall::Dispatcher) line 46

[01:06] <Xliff> I am defining a sub that is then used in an INIT block. Commenting out the INIT block prevents the error.

[01:07] *** mark22k left
[01:08] <Xliff> And when I am talking about editing a resource, you keep saying it should not be editable. Why can't I distribute a CSS file (or any file for that matter) and not edit it? 

[01:09] <Xliff> Consider: theme files distributed with a themeable application.

[01:09] <Xliff> Are you implying that I should look for another mechanism for such resource distribution, then?

[01:09] *** mark22k joined
[01:35] *** jpn joined
[01:39] *** jpn left
[02:05] *** yoo14 joined
[02:05] <yoo14> what is this for

[02:13] *** yoo14 left
[02:23] *** hulk joined
[02:23] *** kylese left
[02:35] <ugexe> The same reason you shouldn’t edit source files that are installed - anything that is precompiled would not pick up those changes and would still effectively be using the old code / resource 

[02:39] <ugexe> So yeah if you want editable files you should not use %?RESOURCES, you should use some path your application can control like ~/.myapp

[02:43] <ugexe> you could store the originals under resources, copy them to ~/.myapp in a Build.rakumod, then reference ~/.myapp/some-resource-name in your app instead of %?RESOURCES<some-resource-name>

[02:47] <ugexe> %?RESOURCES isn't a good match for html like stuff anyway. consider resources/foo/bar.css will get installed to like site/resources/91j019j2e09j109je019j2e.css (with files from other distributions in the same site/resources directory). so any e.g. html docs that reference resources/foo/bar.css (or tries to service resources/foo as a directory) isn't going to work right because those files are renamed

[02:48] <ugexe> sure you can write a handler on %?RESOURCES to route things appropriately but thats not what most people want to do for status content 

[03:01] <ugexe> if returning a %?RESOURCE<foo> from a Callable doesn't work with `is native(&callable-name)` then I think thats a bug with somewhere in lib/NativeCall.rakumod

[03:03] <ugexe> if changing some INIT fixes that problem it is probably some interaction with how NativeCall creates compile time roles

[03:10] *** antim0d3s joined
[03:12] *** sdfgsdfg left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:25] *** jpn joined
[03:30] *** jpn left
[03:44] *** jmcgnh left
[03:52] *** jmcgnh joined
[03:56] *** jmcgnh left
[04:02] *** jmcgnh joined
[04:07] *** Sgeo joined
[04:20] *** vrurg left
[04:20] *** vrurg joined
[04:34] *** epony left
[04:36] *** epony joined
[05:20] *** vrurg_ joined
[05:23] *** vrurg left
[05:43] *** Guest8902 joined
[05:47] *** Guest8902 left
[06:20] *** Util left
[07:53] *** abraxxa joined
[08:15] *** jjido joined
[08:26] *** jpn joined
[08:33] *** jpn left
[09:02] *** Manifest0 joined
[09:15] *** dakkar joined
[09:22] *** Util joined
[09:27] *** sena_kun joined
[09:27] *** epony left
[09:29] *** epony joined
[09:44] *** jjido left
[09:55] *** Sgeo left
[10:21] *** jpn joined
[10:26] *** jpn left
[10:26] *** jpn joined
[10:55] *** nine left
[10:55] *** nine joined
[11:12] <lizmat> weekly: https://github.com/Raku/Raku-Steering-Council/blob/main/announcements/20240117.md

[11:12] <notable6> lizmat, Noted! (weekly)

[11:12] *** ChanServ sets mode: +o lizmat

[11:27] *** ChanServ sets mode: -o lizmat

[11:28] <El_Che> autch

[12:41] *** abraxxa left
[12:42] *** jjido joined
[12:53] *** abraxxa joined
[12:59] *** abraxxa left
[13:06] *** jpn left
[13:08] <discord-raku-bot> <nemokosch> I stand by all of the quoted messages that ironically include a rather baseless personal attack from Steve Roe, as evidence to I don't really know what. It would hurt some people to own up to their actions/ lack of actions in wasting the potential of Raku and since they managed to outlast everybody who cared, they get to act in the name of "the Raku community". The actual Raku community has been in danger from

[13:08] <discord-raku-bot> pretty much its inception, much thanks to the sandbox attitude maintained by the people who now act as the protectors of the project by banning people, rather than do things better or resign if they are unable to. AlexDaniel has already congratulated and there are some other people who i wouldn't want to expose to the self-proclaimed Raku community. Farewell.

[13:14] *** abraxxa joined
[13:16] *** jjido left
[13:34] *** jpn joined
[13:36] <Geth> ¦ Raku-Steering-Council/main: 454a94d731 | (Elizabeth Mattijsen)++ | announcements/20240117.md

[13:36] <Geth> ¦ Raku-Steering-Council/main: Fix year, duh, dakkar++

[13:36] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/454a94d731

[13:39] * lizmat goes back to regularly scheduled programming

[13:39] *** jpn left
[13:42] *** jpn joined
[14:52] *** Sgeo joined
[15:11] *** jjido joined
[15:37] *** itaipu left
[15:38] *** itaipu joined
[16:03] *** Xliff left
[16:07] *** jjido left
[16:08] *** abraxxa left
[16:18] *** epony left
[16:21] *** jpn left
[16:33] <tbrowder__> i just looked at the banning action. isn't two years a little overkill?

[16:36] <tbrowder__> on another topic, the other day i wondered about a way to get an input arg in a regex to allow one or more of the leading chars to be recognized. i have found a solution

[16:38] <tbrowder__> with the current state of my Abbreviations distro one can do this:

[16:39] <tbrowder__> :abbrev("arg", out-type(L)).join("|"); whic

[16:40] <tbrowder__> ignore the leading colon. the result is "a|ar|arg"

[16:41] <tbrowder__> i can easily add an easier option to do that

[16:43] <tbrowder__> in fact, that should be the default for a single word. on my TODO list

[17:01] <tbrowder__> or maybe another distro: Arg::Utils

[17:03] <discord-raku-bot> <antononcube> @tbrowder ... And and "ACME::Utils" for loading all "::Utils" packages in the current / global namespace.

[17:20] *** epony joined
[17:30] <discord-raku-bot> <antononcube> Does the ban "from all Raku related spaces" includes publishing at raku.land?

[17:35] <lizmat> my personal opinion is that it shouldn't, but that's up to the CAT

[17:37] <jdv> yeah, that seems ridiculous.  publishing code is so easy whats the point?

[17:39] <jdv> or more generally how is that part of the point?

[17:40] <tbrowder__> ACME::Utils? is that new, or did i just forget about it?

[17:41] *** dakkar left
[17:41] <discord-raku-bot> <antononcube> @tbrowder It was a joke/suggestion -- there are at least few "::Utils" packages, so, an umbrella package might wanted.

[18:04] *** jpn joined
[18:09] <discord-raku-bot> <antononcube> @jdv I do not know -- I was too lazy to feed Raku's CoC to an LLM and or peruse it myself in order to figure does the phrase "all Raku related spaces" include package repositories.

[18:10] <discord-raku-bot> <antononcube> Also, if publishing is easy, most likely un-publishing is easy too. It is not clear -- to me -- how opinions "voiced" through packages are censored.

[18:19] <lizmat> I don't think there will be, or should be any censoring

[18:20] <lizmat> publishing a module is like writing a book and putting it in a library

[18:20] <lizmat> only people interested in that book, will know of its contents

[18:20] <lizmat> this is different from e.g. an IRC channel

[18:21] <lizmat> that's more akin to a bar: and visitors to the bar that keep on being disrupting, can be told by personnel to leave and not come back

[18:43] <discord-raku-bot> <librasteve> actually unpublishing a module is not possible afaict (since some downstream code may rely on it)

[19:01] <jdv> fez maybe l

[19:07] <discord-raku-bot> <librasteve>  ~ > fez remove 'Physics::Unit:ver<1.1.3>:auth<zef:p6steve>' >>= Request received, if it is past the 24 hour window for removing modules then the module will remain in the ecosystem and indexed 

[19:53] <discord-raku-bot> <antononcube> lizmat, jdv, librasteve  -- Thanks for the clarifications!

[19:59] *** jpn left
[20:03] *** jpn joined
[20:14] *** jjido joined
[20:31] *** jrjsmrtn left
[20:40] *** jrjsmrtn joined
[20:41] <tbrowder__> i will make an Args::Utils. I can think of all kinds of goodies, at least for my work flow. (but i need to revisit state of Raku MAIN. i see lots of use. but i do not like the unfolded LONG help strings (e.g. zef)

[21:28] <tonyo> tbrowder__: fez has a nice way of doing USAGE if you want something with a little nicer output

[21:29] <tonyo> it's buried in the CLI

[21:30] *** jjido left
[21:34] *** jjido joined
[21:45] <tbrowder__> tonyo: thnx

[22:17] <tbrowder__> tonyo: i cant't find it. i dumped help to a file and looked at pretty closely. maybe it's a plugin i don't have?

[22:17] <tbrowder__> *at it

[22:20] *** jpn left
[22:40] *** jpn joined
[22:47] *** jpn left
[22:54] *** jjido left
[23:00] *** epony left
[23:17] *** sena_kun left
[23:21] *** epony joined
[23:23] *** jpn joined
[23:23] *** dustinm` left
[23:32] *** jpn left
[23:37] *** dustinm` joined
