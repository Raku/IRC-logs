[00:18] *** tobs joined
[01:27] *** Manifest0 left
[01:44] *** ACfromTX joined
[02:46] <ab5tract> c.a63: beta 25 should fix the mult-line REPL

[02:46] <ab5tract> c.a53: beta 25 should fix the mult-line REPL

[02:54] *** hulk joined
[02:55] *** kylese left
[03:15] *** hulk left
[03:15] *** kylese joined
[04:09] *** lizmat_ joined
[04:12] *** kjp left
[04:13] *** lizmat left
[04:13] *** kjp joined
[04:14] *** kjp left
[04:14] *** kjp joined
[04:16] *** avarab left
[04:28] *** avar joined
[04:40] *** xinming joined
[05:25] *** summerisle_ left
[05:25] *** gabiruh left
[05:25] *** peder left
[05:25] *** Opus left
[05:25] *** GreaseMonkey left
[05:25] *** gordonfish left
[05:25] *** charsbar left
[05:25] *** avar left
[05:25] *** kylese left
[05:25] *** swaggboi left
[05:25] *** perlbot left
[05:25] *** andinus left
[05:25] *** hudo__ left
[05:25] *** dustinm` left
[05:25] *** gfldex left
[05:25] *** discord-raku-bot left
[05:25] *** ilogger2_ left
[05:25] *** tbrowder left
[05:25] *** tonyo left
[05:25] *** drakonis left
[05:25] *** committable6 left
[05:25] *** ecocode left
[05:25] *** quotable6 left
[05:25] *** kst`` left
[05:25] *** dutchie left
[05:25] *** BinGOs left
[05:25] *** jcallen left
[05:25] *** Sgeo_ joined
[05:27] *** committable6 joined
[05:27] *** ecocode joined
[05:27] *** quotable6 joined
[05:27] *** kst`` joined
[05:27] *** dutchie joined
[05:27] *** BinGOs joined
[05:27] *** jcallen joined
[05:27] *** Sgeo left
[05:27] *** avar joined
[05:27] *** kylese joined
[05:27] *** swaggboi joined
[05:27] *** perlbot joined
[05:27] *** andinus joined
[05:27] *** hudo__ joined
[05:27] *** dustinm` joined
[05:27] *** gfldex joined
[05:27] *** discord-raku-bot joined
[05:27] *** ilogger2_ joined
[05:27] *** tbrowder joined
[05:27] *** tonyo joined
[05:27] *** drakonis joined
[05:28] *** summerisle_ joined
[05:28] *** gabiruh joined
[05:28] *** peder joined
[05:28] *** Opus joined
[05:28] *** GreaseMonkey joined
[05:28] *** gordonfish joined
[05:28] *** charsbar joined
[05:38] *** ACfromTX left
[05:39] *** ACfromTX joined
[06:18] *** Aedil joined
[06:30] *** Sgeo_ left
[07:39] *** lizmat_ left
[07:40] *** lizmat joined
[07:54] *** human-blip left
[07:55] *** human-blip joined
[07:55] *** human-blip left
[07:56] *** human-blip joined
[09:03] *** Manifest0 joined
[09:14] *** dakkar joined
[09:49] *** sena_kun joined
[10:54] *** merp joined
[11:36] *** librasteve_ joined
[12:46] * lizmat clickbaits https://rakudoweekly.blog/2024/11/04/2024-43-one-of-21/

[13:27] *** sena_kun left
[13:33] *** sena_kun joined
[13:34] *** sena_kun left
[13:34] *** sena_kun joined
[15:43] *** RAJ joined
[15:43] *** RAJ is now known as Guest915

[15:43] *** Guest915 left
[15:46] <SmokeMachine> is there a way to avoid conflicts from local code when you call .AST on a string 

[15:46] <SmokeMachine> ?

[15:46] <SmokeMachine> like this:

[15:47] <SmokeMachine> m: class C {}; Q|class C {}|.AST

[15:47] <camelia> rakudo-moar 34cd4c58a: OUTPUT: «===SORRY!=== Error while compiling ␤Redeclaration of symbol 'C'.␤at line ␤»

[15:47] *** sena_kun left
[15:47] *** sena_kun joined
[15:49] <timo> m: class C {}; package { say Q|class C {}|.AST }

[15:49] <camelia> rakudo-moar 34cd4c58a: OUTPUT: «RakuAST::StatementList.new(␤  RakuAST::Statement::Expression.new(␤    expression => RakuAST::Class.new(␤      name => RakuAST::Name.from-identifier("C"),␤      body => RakuAST::Block.new(␤        body => RakuAST::Blockoid.new(␤          Ra…»

[15:49] <timo> :D

[15:49] <ugexe> you could make one my scoped if that is an option

[15:50] <ugexe> m: class C {}; Q|my class C {}|.AST

[15:50] <camelia> rakudo-moar 34cd4c58a: ( no output )

[15:50] <timo> `my $eval_ctx := nqp::getattr(CALLER::,PseudoStash,'$!ctx');` the AST method is explicitly doing this and it doesn't look configurable

[15:51] <timo> but it's also saying that the AST method is "for core debugging mainly"

[15:55] <SmokeMachine> what about this?

[15:55] <SmokeMachine> m: class C { sub a is export {} }; package {say Q|class C { sub a is export {} }|.AST}

[15:55] <camelia> rakudo-moar 34cd4c58a: OUTPUT: «===SORRY!=== Error while compiling EVAL_0␤A symbol '&a' has already been exported␤at EVAL_0:1␤»

[15:56] <timo> m: class C { sub a is export {} }; my package { say Q|class C { sub a is export {} }|.AST }

[15:56] <camelia> rakudo-moar 34cd4c58a: OUTPUT: «===SORRY!=== Error while compiling EVAL_0␤A symbol '&a' has already been exported␤at EVAL_0:1␤»

[15:56] <timo> m: class C { sub a is export {} }; my package { say Q|my class C { sub a is export {} }|.AST }

[15:56] <camelia> rakudo-moar 34cd4c58a: OUTPUT: «RakuAST::StatementList.new(␤  RakuAST::Statement::Expression.new(␤    expression => RakuAST::Class.new(␤      scope => "my",␤      name  => RakuAST::Name.from-identifier("C"),␤      body  => RakuAST::Block.new(␤        body => RakuAST::Blo…»

[15:56] <timo> m: class C { sub a is export {} }; package { say Q|my class C { sub a is export {} }|.AST }

[15:56] <camelia> rakudo-moar 34cd4c58a: OUTPUT: «RakuAST::StatementList.new(␤  RakuAST::Statement::Expression.new(␤    expression => RakuAST::Class.new(␤      scope => "my",␤      name  => RakuAST::Name.from-identifier("C"),␤      body  => RakuAST::Block.new(␤        body => RakuAST::Blo…»

[15:56] <timo> the "my class" seems to do that as well, ugexe++

[16:02] <SmokeMachine> my problem is that I'm searching by code on my home (this intends to become a tool) and when if finds the code I'm using to find the AST, it breaks... Something like this: https://usercontent.irccloud-cdn.com/file/2reTDRRb/image.png

[16:04] <timo> yeah, i'd say steal the contents of the AST method and make a change or two. then use a context that doesn't have anything in it. i'm not sure what happens if you don't pass the "outer_ctx" named parameter to $compiler.compile, maybe that's exactly what you need

[16:14] *** RandalSchwartz joined
[16:25] *** RandalSchwartz left
[16:33] <ab5tract> SmokeMachine: you'll want to port the AST method anyway, I think, as it may be marked as an implementation detail or otherwise removed/replaced

[16:59] *** silug5 joined
[16:59] *** silug left
[16:59] *** silug5 is now known as silug

[17:44] *** dakkar left
[18:05] *** kst`` left
[20:05] <coleman> rebooting docs sites

[20:24] <SmokeMachine> Thank you all! Sorry for the delay, I had to go back to work... I think that's almost there: https://usercontent.irccloud-cdn.com/file/J02GPF6Z/image.png

[20:31] *** Xliff joined
[20:31] <Xliff> \o

[20:32] <Xliff> Who runs the @raku.rocks domain?

[20:37] <coleman> I think Liz owns it

[21:12] *** Aedil left
[21:16] <discord-raku-bot> <melezhik.> Just dropped a small post on Raku/Golang integration in pipelines. Comments are welcome . https://news.ycombinator.com/item?id=42055130

[21:53] <coleman> melezhik: i am reminded (favorably) of Puppet Bolt's task definitions and argument parsing

[22:14] *** apac joined
[22:42] *** Sgeo joined
[23:21] *** sena_kun left
