[00:02] *** haxxelotto left
[00:30] *** Manifest0 left
[01:00] *** haxxelotto joined
[01:37] *** guifa_ left
[02:00] *** hulk joined
[02:01] *** kylese left
[02:15] *** hulk left
[02:15] *** kylese joined
[02:31] *** guifa_ joined
[03:15] *** stanrifkin left
[03:54] *** guifa_ left
[04:26] *** tejr left
[04:31] *** tejr joined
[05:08] *** stanrifkin_ joined
[05:20] *** ACfromTX left
[05:30] *** Sgeo left
[05:44] *** sivoais left
[05:45] *** sivoais joined
[05:52] *** swaggboi left
[05:53] *** swaggboi joined
[06:09] *** abraxxa joined
[06:41] *** Manifest0 joined
[06:55] *** ACfromTX joined
[07:27] *** jpn joined
[07:51] *** jpn left
[07:55] *** jpn joined
[08:04] *** dakkar joined
[08:04] *** jpn left
[08:19] *** haxxelotto left
[08:35] *** sena_kun joined
[09:37] *** jpn joined
[11:01] *** xinming left
[11:02] *** xinming joined
[11:49] *** jpn left
[12:14] <tbrowder> hi all

[12:17] <tbrowder> i am about to release my new module CSV::Table and would appreciate anyone looking at its README to see if any stupidisms are found. it is on Github at https://github.com/tbrowder/CSV-Table

[12:33] *** jpn joined
[12:38] *** jpn left
[13:01] *** frost joined
[13:18] *** jpn joined
[13:25] *** frost left
[13:45] *** frost joined
[13:55] *** frost left
[14:03] <discord-raku-bot> <antononcube> I did not expect my "WWW::WolframAlpha" post to be that popular. It seems @lizmat has to be credited for that too, for mentioning it in the weekly.

[14:03] <lizmat> nice  :-)

[14:04] <lizmat> in other news: I've just uploaded a new version of App::Rak with PDF support

[14:04] <lizmat> librasteve++ for the underlying logic

[14:08] <discord-raku-bot> <antononcube> @lizmat Google's Gemini's latest model can take input with 1 million tokens (≈2.5 million characters.) This means, all of the documentation "App::Rak" and its code can be uploaded to Gemini, and get very plausible, working -- or almost working -- "App::Rak" CLI code from natural language specifications.

[14:08] <lizmat> if the documentation is sufficient and correct of course  :-)

[14:09] <lizmat> looking forward to your findings!

[14:09] <discord-raku-bot> <antononcube> Right -- that is why I said to upload the code itself too.

[14:11] <discord-raku-bot> <antononcube> This is, of course, both less effort and more expensive approach than the one I presented 7 months ago. But it has to be tried out.

[14:13] <discord-raku-bot> <antononcube> Is it a good idea rename the package "Lingua::Translation::DeepL" into "WWW::DeepL" ? If yest, is there are "standard" procedure for renaming an existing package in Zef ecosystem.

[14:14] <lizmat> there is no procedure really

[14:14] <lizmat> upload the renamed module

[14:14] <lizmat> upload a release of the old name with just a single dependency on the new name to remain compatible 

[14:16] <discord-raku-bot> <antononcube> Ok, seems simple enough. And, does this mean that you think "WWW::DeepL" is a better name? (Maybe you -- and others -- do not care, you are just giving an advice.)

[14:17] <lizmat> I was just giving advice: naming is hard!

[14:17] <lizmat> PSA: App::Rak users, a new release of App::Rak and App::Rak::Complete now in the ecosystem

[14:18] <discord-raku-bot> <librasteve> you can never, ever remove anything from the zef ecosystem (after the first 24 hours cooling off period) - I recommend you just stay with the old name even if its a bit out of date

[14:31] <discord-raku-bot> <antononcube> @librasteve Thanks -- that seems the best decision! (Easiest too -- do nothing.)

[14:31] <discord-raku-bot> <librasteve> lazyness is a virtue

[14:50] <discord-raku-bot> <librasteve> note to self...

[14:50] <discord-raku-bot> <librasteve> m: say Hash.new: 1,2,3,4

[14:50] <discord-raku-bot> <Raku eval>  {1 => 2, 3 => 4} 

[14:50] <evalable6> librasteve, rakudo-moar 335a0b0ce: OUTPUT: «{1 => 2, 3 => 4}␤»

[14:50] <discord-raku-bot> <librasteve> ^ I had forgotten just how easy it is to mak ea Hash (or Map)

[14:56] <discord-raku-bot> <librasteve> lizmat: tx also for pointing out the split limit value

[15:48] *** sjn joined
[16:30] *** kylese left
[16:34] *** kylese joined
[16:34] *** dakkar left
[16:38] *** avuserow left
[16:40] *** avuserow joined
[17:06] *** jpn left
[17:37] <coleman> Quick announcement. Richard has made an EBook version of the documentation available for download.

[17:37] <coleman> Please test

[17:37] <coleman> Go to https://docs.raku.org and click "More"

[17:43] <lizmat> I don't see a "More" ?

[17:44] <coleman> top navigation bar should have it

[17:45] <lizmat> aaah... ok

[18:28] *** abraxxa left
[18:41] *** swaggboi left
[18:42] <discord-raku-bot> <holmdunc> Failed to import the ePub into Apple Books.app. Oh well, that disclaimer about compliance maybe applies

[18:43] <discord-raku-bot> <librasteve> ditto

[18:43] *** swaggboi joined
[18:48] <discord-raku-bot> <librasteve> how about a pdf?

[18:49] <discord-raku-bot> <librasteve> ^^ this is a bit snarky - sorry - actually I have many times longed for the rakudoc when offline (longhaul flight) to the extent that I have resorted to cloning the repo before I travel

[18:51] <discord-raku-bot> <holmdunc> I used to use Calibre's ebook-convert CLI command to turn the Swift language epub into a PDF. Worked well

[18:51] <tbrowder> but pdf would be handy, esp for kindle readers

[18:52] <tbrowder> does caliber xform epub?

[18:55] <discord-raku-bot> <holmdunc> The application itself probably can too. I've hardly ever used it

[19:14] <[Coke]> now that we have -an- ebook, adding support for v2 or a pdf should be doable. it also needs some editing.

[19:17] <discord-raku-bot> <antononcube> I think it should be in Markdown.

[19:18] <lizmat> I guess https://raku.land/cpan:SOFTMOTH/Pod::To::Markdown needs some TLC

[19:23] <coleman> Yes and the ebook is clearly noted as experimental you hungry wolves :)

[19:42] <[Coke]> ^_^

[19:42] <[Coke]> finanalyst++

[20:08] *** jpn joined
[20:13] *** jpn left
[20:35] *** jpn joined
[20:41] *** jpn left
[20:48] <Voldenet> very nice book, when I'm trying to read code in calibre, the code is on white background while the book is on black

[20:49] <Voldenet> example https://i.imgur.com/hGMbXaM.png

[20:54] <Voldenet> I do wonder if syntax hl is going to be useful on ebook readers, some books ditch syntax colors entirely

[21:01] *** guifa_ joined
[21:03] <Voldenet> though in some books syntax coloring messes up any schemes in calibre

[21:05] <Voldenet> https://i.imgur.com/heNWA9V.png (example from https://github.com/dotnet-architecture/eBooks/blob/main/archives/microservices/NET-Microservices-Architecture-for-Containerized-NET-Applications-v1.1.epub )

[21:06] <Voldenet> imo "no colors" would be better, on black and white reader it's going to look even worse

[21:12] <Voldenet> on low-res kindle colored code is difficult to read

[21:14] *** jpn joined
[21:21] *** jpn left
[21:40] *** guifa_ left
[22:36] *** jpn joined
[22:42] *** sena_kun left
[22:43] *** Sgeo joined
[22:44] *** jpn left
[23:04] <ab5tract> It seems a bit weird that ebook readers can’t gracefully degrade the experience.. though not entirely surprising

[23:37] *** jpn joined
[23:37] *** Manifest0 left
[23:42] *** jpn left
[23:55] <Voldenet> they only degrade the experience of books that were meant for computer screen, mangas and normal books look better

