[00:04] <discord-raku-bot> <nemokosch> I'm lowkey thinking that x86 could cover any iteration of that instruction set

[00:04] <discord-raku-bot> <nemokosch> from 8 bit up

[00:08] <discord-raku-bot> <nemokosch> for the sources list, I can't see anything that should come from the rakudo-pkg setup

[00:08] <discord-raku-bot> <nemokosch> honestly, at this point I will just take it as some shady trigger setting the sources.list file for this VPS

[00:17] <guest912> Is there any usable Raku LSP implementation?

[00:22] <discord-raku-bot> <nemokosch> RakuNavigator is usable but it would definitely deserve a bit of help

[00:36] *** jpn joined
[00:41] *** jpn left
[00:43] *** jpn joined
[00:48] *** jpn left
[01:22] <guest912> Is it possible to define recursive subset types?

[01:24] <guest912> subset Json where * ~~ Int | Str | Bool | JsonHash | JsonArr; subset JsonHash where .all ~~ Json; subset JsonArr where .all ~~ Json;

[01:24] <guest912> Something like this. I get an error “Illegally post-declared types”

[01:44] *** jpn joined
[01:49] *** jpn left
[01:53] *** rypervenche_ left
[02:10] *** rypervenche joined
[02:26] <guifa> No, because subsets are really just a type of run time type chec

[02:26] <guifa> so if you do subset Foo where Bar

[02:26] <guifa> and subset Bar where Foo

[02:26] <guifa> when you ask for Foo, it will check if something is a Bar...which requries checking if it's a Bar...which requires checking if it's a Foo....

[02:38] *** hulk joined
[02:38] <guest912> I don’t see a problem here really.

[02:38] <guest912> As long as the values of those types are not pointing back to the parent reference the type-check will terminate

[02:39] *** kylese left
[02:39] <guest912> And it’s even simpler than static-type checking. Because static type-checker MUST terminate.

[02:39] <guifa> yes, but the idea is that was never the intended design of the subsets -- something like that would probably be done with roles and classes

[02:40] <guifa> so no one designed a subset stub

[02:40] <guifa> but

[02:41] <guifa> subset JsonSimple where Str | Int | Bool; subset JsonArray where .all ~~ ::('Json'); subset JsonHash where .all ~~ { .key ~~ Str && .value ~~ ::('Json') } subset Json where JsonSimple | JsonArray | JsonHash;

[02:41] <guifa> you can force runtime type checking wih ::(…) syntax

[02:42] <guest912> Is this is some kind of lazy reference resolution?

[02:42] <guifa> yes

[02:42] <guest912> Cool, thanks

[02:42] <guifa> you can do that actually almost anywhere a compile time value is technically required

[02:43] <guifa> emphasis on almost, as there are definitely some places where it's not possible

[03:09] *** jpn joined
[03:14] *** jpn left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:44] *** edr left
[04:49] <guest912> Can I parametrize a “subset” type?

[04:49] <guest912> Like make some kind of generic, to have some type variable?

[04:53] <guest912> Like: subset NonEmptyListLike(\t) where .elems > 0 && .all ~~ t

[04:58] *** jpn joined
[05:03] *** jpn left
[06:03] <guest912> How could I apply a random block or an anonymous sub as a method to anything?

[06:05] <guest912> I can passed a named thing as .&foo but I want to do something like this: .&{ do-whatever $_ }

[06:30] *** jpn joined
[06:35] *** jpn left
[07:01] *** jpn joined
[07:07] *** jpn left
[07:13] <guest912> Can I use custom data structure as a key for a hash?

[07:26] *** jpn joined
[07:31] *** jpn left
[07:57] *** jpn joined
[08:05] *** Sgeo_ joined
[08:06] *** Sgeo left
[08:10] *** jpn left
[08:16] *** jpn joined
[08:20] *** jpn left
[08:42] *** epony left
[08:44] *** epony joined
[09:06] *** Summer joined
[09:32] *** Summer left
[09:32] <discord-raku-bot> <nemokosch> Yes

[10:04] *** sena_kun joined
[10:15] <discord-raku-bot> <nemokosch> melezhik: can Sparky run some trigger before updating the scm-managed folder? I'm running pm2 with watcher for that folder and it would be good to uninstall or at least stop that task before the folder gets updated

[10:23] <guest912> nemokosch, any working example? I tried to do so and it’s converted to a string automatically

[10:23] <guest912> I tried to use a list of couple integers as a key and it takes first one as key and converts to a string

[10:23] <guest912> Or was it a response to a different question?

[10:24] <lizmat> m: my %h{Int} = 42 => "a"; dd %h{42}; dd %h<42>

[10:24] <camelia> rakudo-moar 354843815: OUTPUT: «Any %h = "a"␤Any element of %h = Any␤»

[10:24] <lizmat> guest912 ^^

[10:24] <lizmat> you need to indicate you want a so-called "object hash"

[10:24] <guest912> By “custom data structure" I mean something more complex that an “Int”

[10:25] <guest912> Like: subset Foo where * ~~ (UInt:D, UInt:D);

[10:25] <lizmat> m: class Foo { }; my %h{Foo} = Foo.new => 42;  dd %h

[10:25] <camelia> rakudo-moar 354843815: OUTPUT: «Any %h = (my Any %{Foo} = Foo.new => 42)␤»

[10:26] *** jpn joined
[10:26] <lizmat> m: subset Foo where * ~~ (UInt:D, UInt:D); my %h{Foo} = (42,666) => "a"; dd %h

[10:26] <camelia> rakudo-moar 354843815: OUTPUT: «Any %h = (my Any %{Foo} = (42, 666) => "a")␤»

[10:26] <guest912> %h{(12,34)} = 'foo'; %{(56,78)} = 'bar';

[10:27] <guest912> %h{(12,34)} = 'foo'; %h{(56,78)} = 'bar';

[10:27] <guest912> Hm...

[10:28] <guest912> I didn’t find any examples like this and found something similar in Associative docs

[10:28] <guest912> And tried to use Associative for this purpose it didn’t work.

[10:28] <guest912> But as you are showing it it seems a regular Hash should work

[10:29] <lizmat> it's *NOT* a regular hash if you specify my %h{type};

[10:29] <lizmat> m: subset Foo where * ~~ (UInt:D, UInt:D); my %h{Foo}; %h{$(42,666)} = "a"; dd %h

[10:29] <camelia> rakudo-moar 354843815: OUTPUT: «Any %h = (my Any %{Foo} = (42, 666) => "a")␤»

[10:29] <guest912> m: subset Foo where * ~~ (UInt:D, UInt:D); my %h{Foo}; %h{(12,34)}='foo'; %{(56,78)}='bar'; dd %

[10:29] <camelia> rakudo-moar 354843815: OUTPUT: «Type check failed in binding to parameter 'key'; expected Foo but got Int (12)␤  in block <unit> at <tmp> line 1␤␤»

[10:29] <lizmat> also, you need to itemize the list in the assignment, otherwise it will flatten it

[10:30] <guest912> By a regular hash I mean a regular Hash syntax, without defining custom classes

[10:30] <lizmat> m: m: subset Foo where * ~~ (UInt:D, UInt:D); my %h{Foo}; %h{$(12,34)}='foo'; %h{$(56,78)}='bar'; dd %h

[10:30] <camelia> rakudo-moar 354843815: OUTPUT: «Any %h = (my Any %{Foo} = (12, 34) => "foo", (56, 78) => "bar")␤»

[10:30] <lizmat> ah, ok, well that's not actually called Hash syntax, but Associative

[10:31] <guest912> Okay, I need to make sure the keys are scalar-container wrapped

[10:31] <lizmat> https://docs.raku.org/type/Associative

[10:31] <lizmat> yes, if you insist on using lists like that, yes

[10:32] <guest912> I was trying to define a custom class like this: class DateHash is Hash does Associative[Cool,DateTime] {};

[10:32] <guest912> But maybe the problem was that I didn’t use scalar containers

[10:32] <lizmat> my %h{DateTime}    will do fine

[10:32] *** abraxxa joined
[10:33] <guest912> I mean this is just an example from the docs. I tried to modify it for my use case.

[10:33] <lizmat> ah, you want a Cool and a DateTime as key

[10:33] <guest912> No, this is copy-paste from the docs

[10:33] <guest912> I was doing something like: class MyType is Hash does Associative[Foo,Bar] {};

[10:33] <lizmat> well, I guess there were 2 issues: 1. not parameterizing the hash to become an object hash, and the flattening of the list

[10:33] <guest912> Where Foo was that “subset”

[10:35] <guest912> What is a solution for zero-padding a number when converting to a string?

[10:35] <discord-raku-bot> <nemokosch> don't know better than sprintf

[10:36] <guest912> I guess “fmt” would be one option?

[10:36] <lizmat> fmt works, but is a wrapper for sprintf  :-)

[10:36] <discord-raku-bot> <nemokosch> I don't know fmt lol

[10:36] <guest912> :m say 4.fmt('%03d');

[10:37] <discord-raku-bot> <nemokosch> wrong order

[10:37] <guest912> :m my @a = 8..11; say @a.fmt('%03d', ',');

[10:37] <discord-raku-bot> <nemokosch> m: it is

[10:37] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Undeclared routines:     is used at line 1     it used at line 1  

[10:38] <guest912> Ah, 

[10:38] <guest912> m: say 4.fmt('%03d');

[10:38] <camelia> rakudo-moar 54ee127be: OUTPUT: «004␤»

[10:38] <guest912> Okay, works

[10:39] *** Sgeo_ left
[10:43] <lizmat> ok, I just realized there's one giant snag in what you're trying to do

[10:43] <lizmat> Lists are not value types

[10:44] <lizmat> m: subset Foo where * ~~ (UInt:D, UInt:D); my %h{Foo} = (42,666) => "foo"; dd %h{$(42,666)}

[10:44] <camelia> rakudo-moar 54ee127be: OUTPUT: «Any element of %h = Any␤»

[10:44] <lizmat> m: dd (42,666).WHICH; dd (42,666).WHICH

[10:44] <camelia> rakudo-moar 54ee127be: OUTPUT: «ObjAt.new("List|2993533998480")␤ObjAt.new("List|2993534002608")␤»

[10:44] <lizmat> note that these strings are *not* the same

[10:47] <discord-raku-bot> <nemokosch> it would be really really good to have a proper tuple type in the language

[10:47] <discord-raku-bot> <nemokosch> sadly, Daniel Sockwell pulled an eldorado with the "persistent data types" or what it was called

[10:47] <lizmat> https://raku.land/zef:lizmat/Tuple

[10:47] <discord-raku-bot> <nemokosch> the promised magic land that never comes

[10:56] <discord-raku-bot> <nemokosch> I mean it's clearly not a solution that I keep pointing out that a so-called architect shouldn't just run off for years without proper "notice", or somebody shouldn't talk about an influential grant project once every year with no visible results or deadline

[10:57] <discord-raku-bot> <nemokosch> I just can't wrap my head around why this happens in the first place, like I'd feel unbearably guilty if I did this in a community effort

[11:14] <guest912> lizmat, yeah, that’s a shame. There’s a proper equality check implementation but it doesn’t help here.

[11:15] <guest912> :m (42,666) ~~ (42,666)

[11:15] <guest912> m: (42,666) ~~ (42,666)

[11:15] <camelia> rakudo-moar 54ee127be: ( no output )

[11:15] <guest912> m: say (42,666) ~~ (42,666)

[11:15] <camelia> rakudo-moar 54ee127be: OUTPUT: «True␤»

[11:16] <lizmat> but that's not the comparison needed

[11:16] <lizmat> m: say (42,666) === (42,666)

[11:16] <camelia> rakudo-moar 54ee127be: OUTPUT: «False␤»

[11:16] <guest912> It depends on the implementation.

[11:16] <lizmat> https://docs.raku.org/routine/%3D%3D%3D%2C%20infix%20⩶

[11:16] <guest912> It would be nice if I could define a custom class implementing the comparison method

[11:16] <guest912> Forking from Hash or Associative

[11:17] <lizmat> https://raku.land/zef:lizmat/Hash::Agnostic

[11:17] *** broquain1 is now known as broquaint

[11:18] <guest912> So the answer to my original question is “no”. I can’t use complex data structures as keys.

[11:18] <guest912> Because of how the key lookup is implemented

[11:18] <lizmat> you *can* use complex data structures *if* they are value types

[11:19] <guest912> lizmat, for my Raku use cases I don’t use any dependencies, I rely only on builtin features

[11:19] <lizmat> the Tuple class in the ecosystem is one example

[11:19] <lizmat> ok, then: my class A { ...; method WHICH { ValueObjAt.new(...) } }

[11:20] <lizmat> create a class for your complex data structure, make sure it has a WHICH method that returns a ValueObjAt object that is unique for the given attribute values

[11:20] <lizmat> and parameterize the hash with that class

[11:21] <lizmat> that would be using core features only

[11:22] <lizmat> possibly wrap the creation of that class in a prefix op, so you can do %h{op(...)} 

[11:22] <lizmat> note to self: maybe it's time to write a blog post about value types  :-)

[11:23] <guest912> So WHICH method provides an identity value used for === comparison?

[11:23] <lizmat> yes

[11:24] <lizmat> m: dd 42.WHICH

[11:24] <camelia> rakudo-moar 54ee127be: OUTPUT: «ValueObjAt.new("Int|42")␤»

[11:24] <lizmat> m: dd "foo:.WHICH

[11:24] <camelia> rakudo-moar 54ee127be: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> dd "foo:.WHICH⏏<EOL>␤    expecting any of:␤        argument…»

[11:24] <lizmat> m: dd "foo".WHICH

[11:24] <camelia> rakudo-moar 54ee127be: OUTPUT: «ValueObjAt.new("Str|foo")␤»

[11:24] <lizmat> m: dd now.WHICH

[11:24] <camelia> rakudo-moar 54ee127be: OUTPUT: «ObjAt.new("Instant|4162932840064")␤»

[11:24] <lizmat> m: dd DateTime.now.WHICH

[11:24] <camelia> rakudo-moar 54ee127be: OUTPUT: «ObjAt.new("DateTime|3795698575104")␤»

[11:24] <guest912> Nice. Basically I need some kind of hashing function for my custom type.

[11:25] <lizmat> yes  wrap that in a class, and you're set

[11:25] <guest912> But looking https://github.com/lizmat/Tuple/blob/main/lib/Tuple.rakumod#L3C1-L5C2

[11:25] <guest912> I guess I can just copy-paste these 3 lines? :)

[11:25] <lizmat> no, ValueList is not core

[11:26] <guest912> Ah, okay, got it.

[11:26] <lizmat> I hope to see ValueList in core at some point  :-)

[11:27] <lizmat> in fact, I should probably make a PR for that  :-)

[11:28] <discord-raku-bot> <nemokosch> yep, you can hash complex data types (tbh this is mostly the same situation as with Java)

[11:29] <discord-raku-bot> <nemokosch> the other thing is that smartmatching is not any equivalence check

[11:29] <discord-raku-bot> <nemokosch> the supposed generic equivalence check is eqv

[11:30] <discord-raku-bot> <nemokosch> m: (42, 666) ~~ (*, *)

[11:30] <discord-raku-bot> <Raku eval>  

[11:30] <discord-raku-bot> <nemokosch> stoopid

[11:30] <discord-raku-bot> <nemokosch> m: say (42, 666) ~~ (*, *)

[11:30] <discord-raku-bot> <Raku eval>  True 

[11:30] <discord-raku-bot> <nemokosch> I suppose we can agree that these two Lists aren't equivalent

[11:31] <discord-raku-bot> <nemokosch> m: say (42, 666) eqv (*, *)

[11:31] <discord-raku-bot> <Raku eval>  False 

[11:39] *** Scotteh left
[11:52] <lizmat> https://github.com/rakudo/rakudo/pull/5510

[11:59] <lizmat> how would this look for syntax:  ⁅1,2,3⁆

[11:59] <lizmat> ?

[12:01] *** atweedie left
[12:01] *** clarkema left
[12:01] *** patrickb left
[12:01] *** atweedie joined
[12:01] *** clarkema joined
[12:01] *** patrickb joined
[12:51] *** lizmat left
[12:52] *** lizmat joined
[12:53] *** jpn left
[12:54] *** edr joined
[12:59] <Xliff_> Off topic: Can I get someone to look at a page and tell me what's wrong with my Javascript?

[13:02] <Xliff_> http://71.178.216.231:20000/observable/word-cloud -- why is this not working?

[13:02] <Xliff_> Help!

[13:03] <lizmat> I see a blank page ?

[13:12] <discord-raku-bot> <nemokosch> confirmed

[13:12] <discord-raku-bot> <nemokosch> this is horribly broken HTML by the way

[13:13] <Xliff_> Yes.

[13:14] <Xliff_> It's the javascript and I can't figure out why.

[13:14] <Xliff_> You will need to open the debugger.

[13:14] <Xliff_> And nemokosch... :P

[13:14] <Xliff_> (please explain)

[13:14] <discord-raku-bot> <nemokosch> not sure if this is worth fixing but I think I understand the JS error at least

[13:15] <Xliff_> Please share!

[13:15] <discord-raku-bot> <nemokosch> JS is better than Raku in this regard, it doesn't pollute your scope with the exports

[13:15] <Xliff_> (I had it working at one point and then it just stopped working again)

[13:15] <discord-raku-bot> <nemokosch> it basically collects them into one big object and you can pick from that

[13:15] <Xliff_> The exporting is the problem!

[13:16] <discord-raku-bot> <nemokosch> so import XY is likely to install zero symbols

[13:16] <Xliff_> *groan*

[13:16] <Xliff_> So how do I install symbols? This is my first time using import

[13:17] <discord-raku-bot> <nemokosch> import { WordCloud } from '...' ?

[13:18] <Xliff_> \o/

[13:18] <discord-raku-bot> <nemokosch> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import

[13:20] <discord-raku-bot> <nemokosch> this HTML doesn't even have a body

[13:20] <discord-raku-bot> <nemokosch> the coding style of the JS also isn't very fashionable or consistent but that's a small thing compared to the invalid HTML lol

[13:21] <Xliff_> :P

[13:21] <Xliff_> It's not there to be pretty.

[13:21] <Xliff_> It's also a .crotmp

[13:22] <Xliff_> And the JS isn't consistent because it comes from 3 different places.

[13:22] <Xliff_> Reload the page you should now see a word cloud

[13:22] * lizmat is seeing a wordcloud

[13:24] *** abraxxa left
[13:24] <discord-raku-bot> <nemokosch> well if you aren't going to show it to others 😄

[13:24] <Xliff_> The page should be working now... :p

[13:28] <Xliff_> And now it is multicolored!

[13:41] *** jpn joined
[13:49] *** jpn left
[13:50] *** jpn joined
[13:52] <Xliff_> And that's it! Thanks so much, nemokosch. Meany... you know Javscript is not my first language. That's Raku!

[13:52] <Xliff_> It's not even a close second!

[13:52] <Xliff_> Wordcloud now has colors and thicker words. And that's what I'm showing the boss!

[14:05] <discord-raku-bot> <nemokosch> as you wish ^^

[14:49] *** Ekho left
[14:58] *** Ekho joined
[14:58] *** epony left
[14:59] *** epony joined
[15:30] <discord-raku-bot> <antononcube> @Xliff If you want to learn JavaScript via Raku, start using "JavaScript::D3". At some point you can / should be able to develop it further.

[15:31] <discord-raku-bot> <antononcube> Well, that is mostly D3.js, not JavaScript, but still...

[16:05] *** itaipu left
[16:18] *** itaipu joined
[16:39] <Xliff_> antoncube: Funnily, that's pretty much what I was using. Except with a pure JS page.

[16:40] <Xliff_> My almost-two-decades-out-of-date Javascript knowledge has been enough to keep me going, but D3... and in particular d3-layout-cloud, forced me to quickly retrain in the use of import statements.

[16:58] * leont is also two decades out of date in that area

[16:58] * lizmat only slightly less

[17:06] *** jpn left
[17:18] <discord-raku-bot> <antononcube> Aha. Lots of "closed" JavaScriters here, then!

[17:20] <discord-raku-bot> <antononcube> I have to say, being able to use JavaScript -- and D3.js --  with Jupyter Raku-kernel and LLM-connectivity, made me use Raku more often for data science projects.

[17:20] <discord-raku-bot> <antononcube> Still, mostly for "small size" data though.

[17:23] <discord-raku-bot> <antononcube> Currently, my biggest impediment is that I cannot reliably do web scraping with Raku. LLMs help for that to a point, that road is usually to slow and unreliable.

[17:23] <discord-raku-bot> <antononcube> Anyway, I plan to demostrate those points soon in a blog post.

[17:30] <[Coke]> What's your blocker on web scraping? I've done that a bit with some one offs for $dayjob

[17:31] <[Coke]> (though am always happier when I can get a JSON api)

[17:34] <discord-raku-bot> <antononcube> @Coke Thank you for your interest / offer to help!

[17:34] <discord-raku-bot> <antononcube> @Coke  For example, I want easy / immediate conversion of HTML tables in Raku datasets.

[17:35] <discord-raku-bot> <antononcube> (With the package "Data::Translators" I do that the other way around -- translating Raku datasets to HTML.)

[17:36] <[Coke]> ah, so not the networking part, the html part.

[17:37] <discord-raku-bot> <antononcube> More generally, given an HTML page I would like to have a function that imports:  1) Whole page as plain text 2) Only the hyperlinks 3) Only the data in the page (e.g. tables) 4) Whole page as XML document / object

[17:39] <discord-raku-bot> <antononcube> @Coke Yeah, the "networking part" is still somewhat "too long" for me and too idiomatic. Meaning, I use 3-4 command lines to import an HTML page in some form.  (Say, with "HTTP::Tiny" or similar.)

[17:42] <discord-raku-bot> <antononcube> I use the function example-dataset from  "Data::ExampleDatasets" to import CSV files from local drive or WWW. Bascially, I at some point (in Raku) I have to have similar function, say, import-html that helps getting different elements of HTML pages.

[17:42] <[Coke]> so you'd like something like 'use HTML::Grab; grab("https://www.some.com/stuff").extract-tables' ?

[17:43] *** Sgeo joined
[17:43] <discord-raku-bot> <antononcube> Yes.

[17:44] <discord-raku-bot> <antononcube> I am looking for some (MVP) version of this design: https://reference.wolfram.com/language/ref/format/HTML.html

[17:45] <discord-raku-bot> <antononcube> (I am very Mathematica pre-conditioned...)

[17:49] <tonyo> i used to contribute heavily to node, using python and headless whatever is much easier for webscraping antoncube.  headless bindings for raku would make it nice 

[17:49] <tonyo> and there's this: https://raku.land/zef:tony-o/Web::Scraper

[17:51] <discord-raku-bot> <antononcube> @tonyo It did not occure to me search raku.land with "Scraper". 🙂 But I did look into (again) "HTML::Parser::XML".

[17:52] <discord-raku-bot> <antononcube> @tonyo How can use "Web::Scraper" to convert an HTML table into a Raku array of hashes?

[18:07] *** guest912 left
[18:11] *** guest912 joined
[18:28] <tonyo> it would only convert them into more objects, so you'd do `scraper { process 'table', 'tables[]' => scraper { ... } }`, you can also provide some option other than another scraper too but you'd generally do that and then extract the parts of the table you'd like inside of there 

[18:30] <tonyo> and that will result in a hash

[18:51] <discord-raku-bot> <antononcube> @tonyo Ok, I will epxeriment with that.

[18:53] <tonyo> warning, it's likely going to be slow - there wasn't a lot of other modules back when i wrote that..and i think it was my second module written in raku

[18:53] <tonyo> but, an option nonetheless 

[19:32] *** jpn joined
[19:57] <discord-raku-bot> <librasteve> oh i looked to do web scraping recently, tried and failed use Selenium::WebDriver and totally missed Web::Scraper … now using Python & Selenium so please let me know how Web::Scraper works

[20:03] <clarkema1> Yeah, I had a go recently with the Marionette library (p5) which looked promising, but I needed something that could connect to an existing browser instance rather than managing its own for everything, so I ended up with node and Puppeteer

[20:23] *** guest912 left
[20:39] *** jpn left
[20:46] *** jpn joined
[20:50] *** jpn left
[21:29] *** jpn joined
[21:56] <discord-raku-bot> <librasteve> clarkema1: selenium can in theory connect to an open browser eg via CDP - my use case is to handle login manually first - woud that have been ok for you? (if so I will try to fix raku selenium and PR the repo)

[21:56] *** jpn left
[22:24] <clarkema1> librasteve: That's exactly what I was doing -- I had to log in and get past a CAPTCHA before downloading some PDF files from an account details page

[22:25] <clarkema1> It would be cool to have done it with selenium, but there's no rush for changes -- I've got the info I was after

[22:27] <discord-raku-bot> <librasteve> tx just trying to get a sense of what may be useful to others...

[22:29] <clarkema1> If you want to see what I was doing there's a write-up at https://clarkema.org/lab/2023/2023-12-30-semi-automated-pdf-download/ (although the code has changed a bit since.)  The main issues were connecting to an existing browser so I could log in and deal with the captcha, and persuading it to download PDFs

[22:29] <clarkema1> I should probably update the code on that post; the current version does some fancier selection stuff with xpath as well as css selectors

[22:42] <discord-raku-bot> <librasteve> nice - actually your JS flows quite well ... be interesting to see it translated to raku ;-) [not the top of my list tbh]

[22:47] <clarkema1> thanks - it's not a language I use often, but it gets the job done

[23:46] *** clarkema1 left
[23:54] *** sena_kun left
[23:58] *** explorer joined
