[00:10] *** Sgeo joined
[01:27] *** Guest5 joined
[01:42] *** Manifest0 left
[02:13] *** Guest5 left
[02:29] *** kylese left
[02:30] *** kylese joined
[02:47] *** eseyman left
[03:03] *** eseyman joined
[03:15] *** kylese left
[03:15] *** kylese joined
[04:28] *** xinming left
[04:29] *** xinming joined
[04:51] <discord-raku-bot> <roguerakudev> where can one find the Apocalypses these days? The old URIs are broken

[06:10] *** CIAvash joined
[07:35] *** abraxxa joined
[07:40] *** Sgeo left
[07:48] *** human-blip left
[07:57] *** human-blip joined
[08:50] *** jpn joined
[08:51] *** Manifest0 joined
[09:07] *** haxxelotto joined
[09:10] *** dakkar joined
[09:32] *** sena_kun joined
[10:12] *** hudo__ joined
[10:27] *** jpn left
[10:30] *** jpn joined
[10:37] <Xliff> \o

[10:38] <Xliff> How can I force raku to use a class method over a role method of the same name?

[10:44] *** haxxelotto left
[10:44] *** haxxelotto joined
[10:46] <lizmat> m: role A { method a() { say "A" } }; class B does A { method a() { say "B" } }; B.a; B.A::a

[10:46] <camelia> rakudo-moar 99f52bcd7: OUTPUT: ¬´B‚ê§A‚ê§¬ª

[10:46] <lizmat> Xliff ^^

[10:47] <lizmat> assuming that's what you meant, as a method in a class always shadows the same method in a role

[10:52] <Xliff> Does that apply to multis, as well?

[10:54] <Xliff> m: role A { multi method a() { say "A" } multi methold a(Int) { say "IntA" }; }; class B does A { multi method a() { say "B" }; method a(Int) { say "IntB" }; }; B.a; B.A::a

[10:54] <camelia> rakudo-moar 99f52bcd7: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> role A { multi method a() { say "A" }‚èè multi methold a(Int) { say "IntA" }; };‚ê§    expecting any of:‚ê§        in‚Ä¶¬ª

[10:54] <Xliff> m: role A { multi method a() { say "A" }; multi methold a(Int) { say "IntA" }; }; class B does A { multi method a() { say "B" }; method a(Int) { say "IntB" }; }; B.a; B.A::a

[10:54] <camelia> rakudo-moar 99f52bcd7: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> ti method a() { say "A" }; multi methold‚èè a(Int) { say "IntA" }; }; class B does ‚ê§    expecting any of:‚ê§        new name to be defined‚ê§¬ª

[10:55] <Xliff> m: role A { multi method a() { say "A" }; multi method a(Int) { say "IntA" }; }; class B does A { multi method a() { say "B" }; method a(Int) { say "IntB" }; }; B.a; B.A::a

[10:55] <camelia> rakudo-moar 99f52bcd7: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Cannot have a multi candidate for 'a' when an only method is also in the package 'B'‚ê§at <tmp>:1‚ê§¬ª

[10:56] <Xliff> m: role A { multi method a() { say "A" }; multi method a(Int) { say "IntA" }; }; class B does A { multi method a() { say "B" }; multi method a(Int) { say "IntB" }; }; B.a; B.A::a

[10:56] <camelia> rakudo-moar 99f52bcd7: OUTPUT: ¬´B‚ê§Cannot dispatch to method a on A because it is not inherited or done by B‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:56] <Xliff> m: role A { multi method a() { say "A" }; multi method a (Int) { say "IntA" }; }; class B does A { multi method a() { say "B" }; multi method a (Int) { say "IntB" }; }; B.a; B.A::a

[10:56] <camelia> rakudo-moar 99f52bcd7: OUTPUT: ¬´B‚ê§Cannot dispatch to method a on A because it is not inherited or done by B‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:56] <Xliff> m: role A { multi method a() { say "A" }; multi method a (Int) { say "IntA" }; }; class B does A { multi method a() { say "B" }; multi method a (Int) { say "IntB" }; }; B.a; 

[10:56] <camelia> rakudo-moar 99f52bcd7: OUTPUT: ¬´B‚ê§¬ª

[10:59] *** itaipu joined
[11:01] *** CIAvash left
[11:27] *** MasterDuke left
[11:51] <Xliff> m: role A { multi method a(*@a) { say "A" }; multi method a (Int) { say "IntA" }; }; class B does A { multi method a(*@a) { say "B" }; multi method a (Int) { say "IntB" }; }; B.a(1, 2, 3); 

[11:51] <camelia> rakudo-moar 70be8a091: OUTPUT: ¬´B‚ê§¬ª

[12:00] <Voldenet> roguerakudev: https://www.perl.com/pub/2001/04/02/wall.html/

[12:02] <Voldenet> also https://web.archive.org/web/20200123132845/https://raku.org/archive/doc/design/apo/A01.html

[12:12] <tbrowder__> ugexe: when accessing a distro oobject from RESOURCES, is the .open always required (as in %?RESOURCES<key>.open.slurp)?

[12:22] <tbrowder__> it seems to work ok while testing a module locally during a test install with zef

[12:42] <ugexe> tbrowder__: yes‚Ä¶ if it does work without it it‚Äôs probably because it was unintentionally made so at one point. Since it has to be implemented per comp unit repository you should still use open because other comp unit repos *do* still require it to be opened first 

[12:47] *** jpn left
[13:10] <ugexe> Actually I‚Äôm think about DISTRIBUTION, but you‚Äôre talking about RESOURCES 

[13:18] <tbrowder__> yes. i'm tidying up a module giving me the warning from zef about RESOURCES

[13:24] <tbrowder__> for us journeyman raku coders a good HOWTO would be very helpful. you could submit a corrective PR for my HowToUseModuleResources distro (or a new but similar distro).   :-)

[13:27] <tbrowder__> with a better name

[13:29] <tbrowder__> say, DistroHowTo or...take a vote on Raku.land

[13:30] <tbrowder__> for a good name

[13:33] <tbrowder__> DistroBestPractices ...

[13:43] <ugexe> what warning?

[14:08] *** jpn joined
[14:10] *** derpydoo joined
[14:55] *** justache left
[14:56] *** justache joined
[14:59] <discord-raku-bot> <roguerakudev> Voldenet - thanks!

[15:04] *** justache left
[15:05] *** justache joined
[15:10] <jdv> since when can't a rakudo install dir be moved?

[15:17] *** justache left
[15:19] *** justache joined
[15:41] *** vlad joined
[15:46] *** derpydoo left
[15:49] *** ericst joined
[15:50] *** justache left
[15:52] *** Summer joined
[15:53] <tadzik> I'm pretty sure that's since the original Rakudo Star release :)

[15:53] <tadzik> unless it's changed later and broke again

[15:59] <discord-raku-bot> <antononcube> @tadzik Do you use "Geo::Coder::OpenCage", or you have abandoned it? üôÇ

[16:12] *** ericst left
[16:23] *** vlad_ joined
[16:23] *** vlad left
[16:57] <patrickb> jdv: I implemented that in 2019. That was my first contribution to rakudo back then.

[16:59] *** justache joined
[16:59] <patrickb> tadzik: I'm pretty sure it never worked before my changes. The binary Rakudo Star releases back then relied on being installed into the exact same location they were compiled in.

[17:02] <patrickb> 2019.07 was the first relocatable release.

[17:06] <tadzik> antononcube: I did it for a customer back then, I never used it myself

[17:06] <tadzik> patrickb: aha, I missed the news back then it seems (or have forgotten :))

[17:13] *** Geth joined
[17:22] *** jpn left
[17:30] *** jpn joined
[17:32] *** abraxxa left
[17:35] *** jpn left
[17:41] *** dakkar left
[18:23] *** vlad joined
[18:23] *** vlad_ left
[18:41] *** vlad left
[18:42] *** vlad joined
[18:58] *** derpydoo joined
[19:06] *** jpn joined
[19:14] <tbrowder__> ugexe: my bad, i thought this warning was from zef but it looks like it was from App::Mi6

[19:14] <tbrowder__> https://gist.github.com/tbrowder/f2757cc16a34bb3f554fcea853301e5c

[19:29] <tbrowder__> that's when i changed to use %?RESOURCES<key>.slurp to get the file contents and then rewrote it in a tempdir for use

[19:48] *** gfldex left
[19:49] *** haxxelotto left
[19:50] <tbrowder__> fyi, i just submitted a PR for community module File::Temp (github.com/raku-community-modules/raku-File-Temp). i could merge it but o prefer someone else do it for 2-person control.

[19:50] <tbrowder__> s/o/i

[19:58] <[Coke]> tbrowder__: is it common to show git hash ids in the changes file?

[19:58] <[Coke]> Thought that was just "everything that rolls up into the next version" usually

[19:59] <[Coke]> otherwise seems OK to me on the documentation side (I can't speak to the testing parts)

[20:03] <tbrowder__> hm...looking...mine do because i haven't squashed stuff. i used to be careful about not submitting a  PR before extensive testing, but using mi6 and the auto changes to the README make that harder for me because i forget about it until after the first submission. 

[20:04] <tbrowder__> i don't know how to squash an active PR

[20:04] <tbrowder__> or whatever the proper git term is

[20:06] <tbrowder__> i have to change to the proper receiving repo name in the  README

[20:09] <tbrowder__> oh, you mean the Changes file? those are changes i made to ensure there is a record of changes prior to any Changes file

[20:10] <tbrowder__> docos were sparse when the repo was started

[20:11] *** abraxxa-home joined
[20:16] *** abraxxa-home left
[20:18] *** abraxxa-home joined
[20:22] *** derpydoo left
[20:25] <[Coke]> ok

[20:29] *** vlad left
[20:39] *** Guest30 joined
[20:48] *** ericst joined
[20:52] *** jpn left
[20:58] <patrickb> weekly: https://dev.to/patrickbkr/stability-3mla

[20:58] <notable6> patrickb, Noted! (weekly)

[21:03] *** derpydoo joined
[21:08] *** mark22k left
[21:10] *** mark22k joined
[21:28] *** Summer left
[21:28] *** Summer joined
[21:32] *** Guest30 left
[21:34] *** tbrowder__ left
[21:39] *** maylay left
[21:48] *** gfldex joined
[21:48] *** maylay joined
[21:53] *** jpn joined
[21:54] *** ericst left
[22:07] *** derpydoo left
[22:13] *** tbrowder__ joined
[22:15] *** jpn left
[22:22] <discord-raku-bot> <aruniecrisps> @SmokeMachine, do you think you'd wanna pair up on migrations for Red? Or are you still working on HTML::Component?

[22:22] *** tbrowder__ left
[22:23] *** tbrowder_ left
[22:25] *** Tirifto left
[22:26] *** Tirifto joined
[22:26] *** tbrowder__ joined
[22:28] <tbrowder__> hi

[22:33] *** abraxxa-home left
[22:49] *** Summer left
[22:49] *** Summer joined
[23:14] <tbrowder__> can anyone see this msg?

[23:16] <tbrowder__> can anyone see this msg?

[23:16] <tbrowder__> howdy

[23:18] <tbrowder__> hello

[23:19] * gfldex looks at msg

[23:19] *** Summer left
[23:19] <Voldenet> yes

[23:20] *** Summer joined
[23:21] *** Sgeo joined
[23:50] *** Summer left
[23:51] *** Summer joined
