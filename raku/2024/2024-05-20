[00:17] *** Manifest0 left
[01:23] *** hulk joined
[01:23] *** kylese left
[02:00] *** discord-raku-bot left
[02:00] *** discord-raku-bot joined
[02:15] *** hulk left
[02:15] *** kylese joined
[02:35] *** DarthGandalf left
[04:11] *** [Coke] left
[04:14] *** [Coke] joined
[05:30] *** Sgeo left
[05:31] *** thaewrapt left
[05:44] *** thaewrapt joined
[06:09] *** jpn joined
[06:09] *** thaewrapt left
[06:21] *** jpn left
[06:21] *** thaewrapt joined
[06:41] *** thaewrapt left
[06:52] *** thaewrapt joined
[06:53] *** jpn joined
[06:57] *** thaewrapt left
[07:05] *** jpn left
[07:09] *** thaewrapt joined
[07:14] *** thaewrapt left
[07:22] *** thaewrapt joined
[07:33] *** jpn joined
[07:34] *** thaewrapt left
[07:39] *** sena_kun joined
[07:43] *** jpn left
[07:47] *** thaewrapt joined
[07:52] *** thaewrapt left
[08:01] *** dakkar joined
[08:02] *** DarthGandalf joined
[08:03] *** thaewrapt joined
[08:09] *** thaewrapt left
[08:11] *** tirnanog joined
[08:21] *** thaewrapt joined
[08:27] *** jpn joined
[08:31] *** bdju left
[08:33] *** thaewrapt left
[08:44] *** thaewrapt joined
[08:49] *** thaewrapt left
[08:50] *** jpn left
[08:55] *** jpn joined
[08:58] *** bdju joined
[09:01] *** thaewrapt joined
[09:06] *** thaewrapt left
[09:17] *** thaewrapt joined
[09:18] *** sena_kun left
[09:29] *** thaewrapt left
[09:41] *** thaewrapt joined
[09:47] *** thaewrapt left
[09:49] *** thaewrapt joined
[11:24] *** jpn left
[11:27] *** jpn joined
[11:40] *** jpn left
[12:14] *** drewjose left
[12:42] *** perlbot left
[12:42] *** simcop2387 left
[12:42] *** jpn joined
[12:44] *** MasterDuke left
[13:21] *** tirnanog left
[13:27] *** jpn left
[13:35] *** ceux_ is now known as ceux

[13:37] *** simcop2387 joined
[13:39] *** perlbot joined
[13:42] *** jpn joined
[14:57] *** El_Che left
[14:57] *** El_Che joined
[15:16] <[Coke]> is there a way to create a shortcut for editing in vim? (e.g. if I'm on a word, I want to insert a C< before the word and a > after, without caring what the word is - I know I can redo the last edit, but that typically turns into two edits if I do it manually)

[15:17] <ab5tract> [Coke]: I *think* that's the general use case for vim macros, but I haven't done much with them myself

[15:20] <[Coke]> ab5tract: thanks, that's enough for me to google what I need. Wish I had done this 500 edits ago. :)

[15:23] *** jpn left
[15:29] *** soverysour joined
[15:50] <Voldenet> [Coke]: vim-surround, point on the word, type in `ysiw>iC` and you're done

[15:51] <[Coke]> ... that's harder than doing it manually, for me.

[15:53] <Voldenet> then

[15:53] <Voldenet> type in `qxysiw>iCq`

[15:53] <Voldenet> afterwards @x

[15:54] <Voldenet> erm

[15:54] <Voldenet> `qxysiw>iC{esc}q`

[15:54] <[Coke]> ... This is not helping. :)

[15:54] <Voldenet> :>

[15:55] <Voldenet> @x will replay the macro recorded by qx{anything}q

[15:56] <Voldenet> vim-surround is here https://github.com/tpope/vim-surround?tab=readme-ov-file#installation

[15:57] <Voldenet> once you set up macros, it's almost as nice as emacs

[16:00] <[Coke]> vim-surround++

[16:04] <[Coke]> Voldenet: ok, was able to grok that and create a saved macro called @c that now does wraps a word in C<>. Thank you!

[16:04] <Voldenet> happy to help

[16:05] <[Coke]> now to make it work on Foo::Bar also. :)

[16:06] <ab5tract> [Coke]:  `vE` should extend a selection across all of Foo::Bar

[16:06] <ab5tract> ah, sorry, just caught up on the convo :)

[16:07] <[Coke]> I'm not sure which of Voldenet's macro suggestion would be replaced with vE

[16:07] <ab5tract> yeah, I don't know anything about vim-surround, but with a bare macro I would expect `vE` to work

[16:08] <ab5tract> but I've heard good things about vim-surround, so maybe that's a better bet

[16:08] <[Coke]> Might have to do this without vim-surround, but having this work for even 1/3 of my cases is a time saver.

[16:12] <Voldenet> [Coke]: ysiW>iC

[16:14] <Voldenet> (WORD is delimited by ws, word is delimited by anything non-wordy)

[16:17] <Voldenet> `BiC<{esc}Ea>` would do similar thing

[16:36] *** dakkar left
[16:36] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/05/20/2024-21-curry-primed/

[16:37] <[Coke]> Voldenet++

[16:39] <[Coke]> huh. found some pod that didn't complain but is weird: C<thing|other thing> - for a L<> the | is special, but for C<> it's just a literal.

[16:40] <lizmat> seems to parse ok in RakuAST

[16:41] <[Coke]> Yup - it's fine, just found two doc snippets like C<Foo|/type/Foo> which weren't setting off any author test alarms.

[16:42] <lizmat> ah.. ok  :-)

[16:42] <[Coke]> Glad I happened to see them (searched, didn't find any others)

[16:42] <[Coke]> Voldenet: so W is too aggressive for me.

[16:44] <[Coke]> it works on the Foo::Bar cases, but L<Foo::bar|/type/Foo::Bar>, where I want L<C<Foo::Bar>|/type/Foo::Bar>, I instead get C<L<Foo::Bar|/type/Foo:Bar>>

[16:44] <[Coke]> so I might need to do it manually. By the time I sort this out, I will be mostly done with this exercise, though. the 'w' version gets me 90% of the way there.

[17:08] <Voldenet> I like that currying -> priming change, makes me realize that currying can be added too

[17:15] <Voldenet> m: sub curry($fn, *@a) { my @args; sub inner-call(*@n) { @args.push(|@n); $fn.arity > @args ?? &inner-call !! $fn(|@args) }; inner-call(@a) }; curry( -> $a, $b, $c { say "$a $b $c" }, 1)(2, 3)

[17:15] <camelia> rakudo-moar cf87ccf95: OUTPUT: «1 2 3␤»

[17:17] *** jpn joined
[17:39] *** jpn left
[17:39] <[Coke]> codesections++

[17:44] *** jpn joined
[18:06] *** jpn left
[18:18] *** sena_kun joined
[18:52] *** jpn joined
[18:54] *** sadome joined
[18:54] *** sadome left
[18:57] *** jpn left
[19:12] *** jpn joined
[19:19] *** jpn left
[19:25] *** jpn joined
[19:54] *** jpn left
[20:11] <ab5tract> Voldenet: that's a cool example!

[20:16] *** jpn joined
[20:20] *** soverysour left
[20:21] *** jpn left
[20:36] <discord-raku-bot> <antononcube> I assume some special (new) rakudo version is needed for Voldenet's example to work?

[20:42] <lizmat> bisectable6: old=2023.01 sub curry($fn, *@a) { my @args; sub inner-call(*@n) { @args.push(|@n); $fn.arity > @args ?? &inner-call !! $fn(|@args) }; inner-call(@a) }; curry( -> $a, $b, $c { say "$a $b $c" }, 1)(2, 3)

[20:42] <bisectable6> lizmat, Cannot find revision “2023.01” (did you mean “2024.01”?)

[20:42] <lizmat> bisectable6: old=2023.02 sub curry($fn, *@a) { my @args; sub inner-call(*@n) { @args.push(|@n); $fn.arity > @args ?? &inner-call !! $fn(|@args) }; inner-call(@a) }; curry( -> $a, $b, $c { say "$a $b $c" }, 1)(2, 3)

[20:42] <bisectable6> lizmat, On both starting points (old=2023.02 new=cf87ccf) the exit code is 0 and the output is identical as well

[20:42] <bisectable6> lizmat, Output on both points: «1 2 3␤»

[20:42] <lizmat> antononcube seems to work for quite a while already :-)

[20:44] <discord-raku-bot> <antononcube> @lizmat Ok, good to know. (Cannot make in VS Code + notebook.)

[21:13] *** jpn joined
[21:52] <[Coke]> Voldenet: given C<FOO>, how can I wrap that to get L<C<FOO>|/type/FOO> with a macro? :)

[22:12] *** jpn left
[22:13] *** Sgeo joined
[22:13] *** Xliff joined
[22:13] <Xliff> \o

[22:14] <Xliff> Does anyone know if there are Raku source definitions for SourceView or GEdit?

[22:24] <lucs> [Coke]: Between the pointies in C<Foo>, do you expect to have only alpha characters?

[22:28] <[Coke]> lucs: could be :'s also

[22:28] <[Coke]> C<IO::Path>, e.g.

[22:28] <[Coke]> but even one that just did alpha would get me a huge time savings

[22:29] <lucs> And that should expand to  L<C<IO::Path>|/type/IO::Path> ?

[22:35] <lucs> Have this in your vimrc, or enter it on the ex command line ( :... ):

[22:35] <lucs> :let @r = "F<lvf>hyf>a|/type/\<esc>pa>\<esc>F<\<esc>hiL<\<esc>2f>"

[22:36] <lucs> Now in command mode, when your cursor is between the pointies, pressing  @r  will do what you want.

[22:36] *** sena_kun left
[22:38] <lucs> You can see how it works by pressing those keys interactively:  F<  moves back to the opening  < ,  l  moves right one space,  v  begins highlight mode, etc.

[22:39] <lucs> And it works with any characters between the pointies (well, except other pointies, eh).

[22:40] <lucs> (I said "Now in command mode...", I meant "normal" mode.)

[22:42] <[Coke]> lucs++!

[22:42] <[Coke]> I also just accidentally found that @@ is repeat last macro, apparently

[22:43] <lucs> Oh, I'd forgotten about that one :)

[22:45] <[Coke]> Voldenet, lucs, thanks so much!

[22:45] <lucs> You're very welcome.

[23:03] *** jpn joined
[23:09] *** jpn left
