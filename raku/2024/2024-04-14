[00:26] *** Manifest0 left
[01:24] *** hulk joined
[01:25] *** kylese left
[01:34] *** jmcgnh left
[01:45] *** jmcgnh joined
[01:59] *** jpn joined
[02:04] *** jpn left
[02:15] *** hulk left
[02:15] *** kylese joined
[03:17] *** jpn joined
[03:21] *** jpn left
[04:18] *** jpn joined
[04:23] *** jpn left
[05:48] *** jpn joined
[05:52] *** jpn left
[08:03] *** holyghost joined
[08:12] *** sena_kun joined
[08:16] *** holyghost left
[08:16] *** holyghost joined
[08:16] *** holyghost left
[08:17] *** holyghost joined
[08:18] *** holyghost left
[09:18] *** Manifest0 joined
[09:51] *** holyghost joined
[09:52] *** holyghost left
[10:07] *** holyghost joined
[10:14] *** holyghost left
[10:15] *** jpn joined
[10:20] *** jpn left
[10:24] *** jpn joined
[10:29] *** jpn left
[11:13] *** evalable6 left
[11:16] *** gordonfish left
[11:18] *** evalable6 joined
[11:24] *** gordonfish joined
[11:24] *** synthmeat left
[11:27] *** synthmeat joined
[11:37] *** jpn joined
[11:49] *** jpn left
[11:54] *** sena_kun left
[12:17] *** jpn joined
[12:22] *** jpn left
[12:43] <tbrowder> anyone have a use case for a CSV file with row names but no header? i'll chk back later afk&

[12:44] <lizmat> in my experience, CSV files come with or without headers

[13:34] *** jpn joined
[13:39] *** jpn left
[13:58] *** Manifest0 left
[14:06] *** jpn joined
[14:11] *** jpn left
[14:16] <ab5tract> ooc, how would you do row names without a header?

[14:21] <greenfork> What does "iron-manning" mean in the context of this article, under the "Archer" heading? http://strangelyconsistent.org/blog/perl-6-is-my-mmorpg

[14:27] <discord-raku-bot> <antononcube> @ab5tract "how would you do row names without a header?" -- Just using integers corresponding to the columns? (This what I do in my some of  "Data::*" packages.)

[14:29] <ab5tract> ah, I was confused. I misread that tbrowder was referring to column names.

[14:33] *** jpn joined
[14:34] <ab5tract> and of course you can map column ids to column names on the consumer side. but I don't see how the parser would interact with that at all beyond taking a list of column names as an argument to use as a lookup

[14:40] *** jpn left
[14:47] *** [Coke] left
[14:47] *** [Coke] joined
[15:08] <tbrowder> back again. well, my plan is to have my csv handler do some fancy tricks. and then you can do things like keep a table of monthly (columns)  recurring expenses (rows) and summarize totals and averages for the expenses by name

[15:29] <tbrowder> with column names you can get total expenses for, say, Jun

[15:36] *** jpn joined
[15:41] *** jpn left
[15:48] *** bdju left
[15:51] *** bdju joined
[15:53] *** jpn joined
[15:58] *** MasterDuke left
[15:58] *** jpn left
[15:59] *** jpn joined
[16:04] <jdv> ab5tract: yeah, i guess its harder

[16:05] *** jpn left
[16:10] *** abraxxa-home joined
[16:29] *** haxxelotto joined
[16:37] *** jpn joined
[16:40] *** haxxelotto left
[16:42] *** jpn left
[17:13] *** Manifest0 joined
[17:30] <tbrowder> ab5tract. my project is a CSV file handler which include data management after parsing the file.

[17:37] *** sena_kun joined
[17:38] *** jpn joined
[17:43] *** jpn left
[17:52] <ab5tract> Sure. I guess I don’t understand the question about row names without a header.

[17:56] <ab5tract> Specifying column names with a list of names passed to the parser is definitely important for a CSV library. IMO

[17:57] <ab5tract> Apologies if I‘m still misunderstanding

[18:06] <discord-raku-bot> <librasteve> tbrowder: to answer your question about row and col - here's my deck on raku Dan from tprc 2022 https://static.sched.com/hosted_files/tprc2022/97/Raku-Dan-v2.pdf ... scroll down through the BS until you get to the DataFrame Anatomy slide and you can see the "top level design"

[18:11] <discord-raku-bot> <librasteve> in a nutshell a DataFrame (ie a spreadsheet) looks like this

[18:11] <discord-raku-bot> <librasteve>  role DataFrame {   has Any @.data =[];  #2d [m;n]   has Int %.index;     #row index   has Int %.columns;   #col index } 

[18:12] <discord-raku-bot> <librasteve> and you access like this

[18:14] <discord-raku-bot> <librasteve>  say df[0;0]; df[0;0] = 3;                # set value  # Cascading Accessors (ok to mix Positional and Associative) say df[0][0]; say df[0]<A>; 

[18:14] <discord-raku-bot> <librasteve> ie there is a row index and a col index - both are hashes that you can address by row name and col name

[18:16] <discord-raku-bot> <librasteve> DataFrames as popularized by Pandas and so on are good for data science where you process big data in columnar format ... so they are a bit overkill for a spreadsheet

[18:18] *** jpn joined
[18:19] <discord-raku-bot> <librasteve> i am not suggesting you do cascading accessors (although imo it is cool to go say df<x><y>; and so on) there are certainly less painful ways to use hash keys to address cells ;-) ... and Dan does not handle multiple header rows

[18:21] <discord-raku-bot> <librasteve> fwiw I can see the benefit of a less formal / more lightweight version of spreadsheets in raku ... when you have a v1 I can try and work out how to easily go to/from Dan and also would be cool to make it work with my other Net::Google::Sheets module

[18:37] *** jpn left
[18:52] <tbrowder> librasteve: gosh, my bad, i now remember seeing the slides and thinking: this is a seriously powerful thing for an egineer or scientist!! but i think i dismissed it 'cause i couldn't see it fitting into my little world view then.

[18:55] <tbrowder> my current thing started because i needed a good csv handler for my calendar event data input...and you probably know the rest...just add one more method...

[19:12] *** jpn joined
[19:19] *** MasterDuke joined
[19:23] *** abraxxa-home left
[19:24] *** jpn left
[19:33] *** Donjon joined
[19:33] *** Donjon left
[19:36] *** haxxelotto joined
[20:51] <tbrowder> librasteve: can i ask about yr use of the raku OAuth2? i

[20:56] <discord-raku-bot> <teatime2000> yeah ofc they still happen, I never said there were none

[21:04] *** sena_kun left
[21:05] *** sena_kun joined
[21:13] <discord-raku-bot> <librasteve> tbrowder: sure - it works well for me ... but for Google APIs there is the console app API key setup of course ... all that is explainedin the OAuth2 module

[21:14] <discord-raku-bot> <librasteve> if you want to use it, why not take a look at class Session {...} in Net::Google::Sheets ... step one would be for you to take it for a spin and I'm happy to help if needed

[21:20] <ab5tract> teatime2000: I definitely didn't mean to imply that you said that, I was trying to clarify that _I_ wasn't saying that

[22:09] <discord-raku-bot> <antononcube> weekly: https://rakuforprediction.wordpress.com/2024/04/14/exorcism-for-exercism/

[22:09] <notable6> antononcube, Noted! (weekly)

[22:15] *** haxxelotto left
[22:16] *** haxxelotto joined
[22:30] *** haxxelotto left
[23:11] <tbrowder> librasteve: thnx

[23:16] *** bdju left
[23:18] *** bdju joined
[23:29] *** sena_kun left
[23:59] *** Manifest0 left
