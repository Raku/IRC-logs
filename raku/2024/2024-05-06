[00:08] *** popebob joined
[00:28] *** jpn joined
[00:36] *** jpn left
[00:37] *** jpn joined
[00:41] *** jpn left
[01:04] *** hulk joined
[01:05] *** kylese left
[01:29] *** jpn joined
[01:34] *** jpn left
[02:15] *** hulk left
[02:15] *** kylese joined
[02:23] *** jpn joined
[02:28] *** jpn left
[02:30] *** jpn joined
[02:34] *** jpn left
[02:56] *** lilbabyboogie joined
[03:04] *** lilbabyboogie left
[03:18] *** jpn joined
[03:23] *** jpn left
[03:31] *** jpn joined
[03:36] *** jpn left
[04:06] *** jpn joined
[04:11] *** jpn left
[04:45] *** jpn joined
[05:14] *** jpn left
[05:20] *** jpn joined
[05:29] *** jpn left
[05:30] *** Sgeo left
[05:33] *** jpn joined
[05:38] *** jpn left
[06:34] *** jpn joined
[06:39] *** jpn left
[07:02] *** CIAvash joined
[07:19] *** CIAvash left
[07:20] *** abraxxa joined
[07:33] *** CIAvash joined
[07:35] *** jpn joined
[07:40] *** jpn left
[07:48] *** sena_kun joined
[08:12] *** CIAvash left
[08:17] *** CIAvash joined
[08:27] *** jpn joined
[08:28] *** CIAvash left
[08:37] *** Manifest0 joined
[08:40] <Manifest0> Hi. I updated my raku to latest main, and now i'm getting the error: An exception X::AdHoc occurred while evaluating a CHECK: Could not find symbol '&EXPORT' in 'NativeCall' 

[08:41] <Manifest0> full exception stack: https://paste.opensuse.org/pastes/894e37f1a7b2

[08:50] <lizmat> Manifest0: thanks for the report

[08:51] <lizmat> is there a way to look at he code that is causing this?  The stacktrace is sadly not very informative

[08:54] <Manifest0> i can provide you a zip with my code

[08:54] <Manifest0> just a sec

[09:02] *** abraxxa left
[09:03] <Manifest0> lizmat, you can download the code from here: https://www.swisstransfer.com/d/23a25e89-dd55-4f6e-b93b-089869be9a64

[09:03] <Manifest0> i ran now without the --ll-exception, and it seems the error originates in the DBIish module: https://paste.opensuse.org/pastes/2ac152c9d2ab

[09:06] <lizmat> seems this is the problem:

[09:06] <lizmat> CHECK for NativeCall::EXPORT::.keys {

[09:07] <lizmat> m: use NativeCall; CHECK for NativeCall::EXPORT::.keys { .say }    # golf

[09:07] <camelia> rakudo-moar f253d68b8: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§An exception X::AdHoc occurred while evaluating a CHECK:‚ê§Could not find symbol '&EXPORT' in 'NativeCall'‚ê§at <tmp>:1‚ê§Exception details:‚ê§  Could not find symbol '&EXPORT' in 'NativeCall'‚ê§    in ‚Ä¶¬ª

[09:07] <lizmat> bisectable6: old=2024.04 use NativeCall; CHECK for NativeCall::EXPORT::.keys { .say }

[09:07] <bisectable6> lizmat, Bisecting by exit code (old=2024.04 new=f253d68). Old exit code: 0

[09:07] <bisectable6> lizmat, bisect log: https://gist.github.com/d3f9ee4b6a2f31ad78ec489678d98c81

[09:07] <bisectable6> lizmat, (2024-05-02) https://github.com/rakudo/rakudo/commit/894075587d5d8d36c848a933a19740cd93093f76

[09:09] <lizmat> Manifest0: fixing this now!

[09:10] <Manifest0> :-D

[10:32] *** jpn left
[10:36] *** abraxxa joined
[10:52] *** jpn joined
[11:31] <lizmat> Manifest0: fwiw, still mulling over what would be the best approach to fix

[11:44] <Manifest0> sure, take your time. Should i open a ticket so it could be tracked?

[12:00] *** abraxxa left
[12:22] *** jpn left
[13:28] *** MasterDuke joined
[13:38] <tbrowder> Manifest0: is your company use of Raku shown on the Raku.org page?

[13:38] <tbrowder> if not, pls file an issue there

[13:39] <tbrowder> if appropiate, that is

[13:41] <lizmat> Manifest0: please do, using my golf  :-)

[13:42] <Manifest0> tbrowder, no. I just use it in my personal scripts at home.

[13:42] <Manifest0> lizmat, will do

[13:42] *** jpn joined
[13:50] <Manifest0> lizmat, https://github.com/rakudo/rakudo/issues/5561

[13:51] <lizmat> Manifest0++

[13:54] *** MasterDuke left
[13:58] *** MasterDuke joined
[14:06] <discord-raku-bot> <librasteve> @antononcube - they say that when steamships arrived, the sailing ships got faster (viz. Cutty Sark)

[14:07] <discord-raku-bot> <librasteve> tbh I don't want to implement the 10'5" shorthand since it messes up my code highlighting

[14:09] <discord-raku-bot> <librasteve> so instead I can now annouce the addition of proper fractions to App::Crag

[14:09] <discord-raku-bot> <librasteve> eg. crag 'say :<¬ß|10‚Åµ/‚ÇÅ‚ÇÇ| ft> .in: <m>'

[14:09] <discord-raku-bot> <antononcube> > they say that when steamships arrived, the sailing ships got faster Actually, I use that as analogy why grammars become more relevant because of the popularity of LLMs.

[14:10] <discord-raku-bot> <librasteve> (note the new ¬ß|...| syntax I made that goes Q|...|.AST.EVAL without all the boring typing

[14:11] <discord-raku-bot> <librasteve> and the use of subscripts to put proper and improper fractions into raku)

[14:12] <discord-raku-bot> <librasteve> imo this is better than typing `wolfram-alpha-result('what is 10 feet and 5 inches in metres');

[14:12] <discord-raku-bot> <librasteve> `

[14:17] <discord-raku-bot> <antononcube> Sure -- W|A is slower, requires internet connection, and one has limited number of calls, (or pays for them.)

[14:18] <discord-raku-bot> <antononcube> As I mentioned yesterday, it has been in my TODO list for at least a year to make "WWW::WolframAlpha". I finally did it yesterday because, well, it seemed fun/easy and it can be useful for testing some functionalities in my day job.

[14:20] <discord-raku-bot> <antononcube> Hooking up the WolframEngine with "Proc::ZMQed" is fine, but I cannot make Docker images with WolframEngine yet. And linking to Wolfram|Alpha is really "lightweight" distribution-wise.

[14:21] <discord-raku-bot> <librasteve> yeah - to paraphrase our motto, there's more than one way to skin a cat

[14:22] <discord-raku-bot> <antononcube> And there is more than one cat to skin. üôÇ

[14:23] <discord-raku-bot> <antononcube> BTW, my first "official" release of the functionalities of "Chemistry::Stoichiometry" was for Wolfram|Alpha.

[14:24] <discord-raku-bot> <antononcube> Although, I worked on some functionalties of Wolfram|Alpha, I am not using often. I might do that now, because of having it readily accessible in Raku sessions.

[15:29] *** Xliff_ joined
[15:29] <Xliff_> \o

[15:29] <Xliff_> Hope everyone had a great weekend.

[15:30] <Xliff_> Is there a way to tell if a module needs to be precompiled?

[15:30] <jdv> was ok.  yours?

[15:30] <Xliff_> Meh. 

[16:19] *** jpn left
[17:23] <discord-raku-bot> <roguerakudev> I saw in the latest rakudo weekly that a new ‚Äúis item‚Äù trait was added

[17:23] <discord-raku-bot> <roguerakudev> I don‚Äôt see anything in the docs about it so I was wondering what it does

[17:37] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/05/06/2024-19-behaviorally-constrained/

[17:38] <lizmat> roguerakudev it hasn't made it into a release yet

[17:38] <lizmat> so it's not 100% sure it'll be properly available

[17:39] <lizmat> though I'd say 99.9% sure  :-)

[17:40] <lizmat> m: multi a(@a) { dd "array" }; multi a(@a is item) { dd "item" }; a [1,2,3]; a $[1,2,3]; a (1,2,3); a $(1,2,3)

[17:40] <camelia> rakudo-moar 69a335640: OUTPUT: ¬´"array"‚ê§"item"‚ê§"array"‚ê§"item"‚ê§¬ª

[17:40] <lizmat> roguerakudev ^^

[17:40] <lizmat> hope that clarifies!

[17:41] <lizmat> it is basically a tie breaker on what would otherwise be a ambiguous dispatch

[17:55] <discord-raku-bot> <librasteve> chucking down with rain

[18:08] <discord-raku-bot> <librasteve> only the weekly relieves the misery

[18:08] <discord-raku-bot> <librasteve> Rog - I share your curiosity

[18:12] <lizmat> fg

[18:14] <discord-raku-bot> <librasteve> I see that Q|10‚Åµ/‚ÇÅ‚ÇÇ|.AST.EVAL  (fractions with super-/sub-scripts) works ... is there some plan to have a more pithy literal style for this? (apologies if already there and I didn't notice)

[18:15] <lizmat> 10 + <5/12>  ?

[18:17] <discord-raku-bot> <librasteve> ah yes, sorry

[18:18] <discord-raku-bot> <librasteve> .oO (on the item thing)

[18:36] <discord-raku-bot> <librasteve> clojure on MoarVM - yikes

[18:44] <discord-raku-bot> <roguerakudev> lizmat - I'm assuming the ambiguity would arise when one candidate takes a $-sigiled param?

[18:44] <discord-raku-bot> <roguerakudev> e.g.

[18:45] <discord-raku-bot> <roguerakudev> m: multi a(@a) { dd 'array'; }; multi a($a) { dd 'item' }; a [1, 2, 3]; a $[1, 2, 3]; a (1, 2, 3); a $(1, 2, 3);

[18:45] <evalable6> roguerakudev, rakudo-moar 335a0b0ce: OUTPUT: ¬´"array"‚ê§"array"‚ê§"array"‚ê§"array"‚ê§¬ª

[18:45] <discord-raku-bot> <Raku eval>  "array" "array" "array" "array" 

[18:46] <discord-raku-bot> <roguerakudev> I need adjust the bot permissions

[18:46] <lizmat> yeah, that was exactly the issue: you could not distinguish between [] and $[] as an argument in dispatch

[18:47] <lizmat> and even if you'd mark the $ case as Positional, it wouldn't work

[18:47] <lizmat> m: 'multi a(@a) { dd }; multi a(Positional $a) { dd }; a $[1,2,3]

[18:47] <camelia> rakudo-moar 69a335640: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Unable to parse expression in single quotes; couldn't find final "'" (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> ulti a(Positional $a) { dd }; a $[1,2,3]‚èè<EOL>‚ê§    expecting ‚Ä¶¬ª

[18:47] <lizmat> m: multi a(@a) { dd }; multi a(Positional $a) { dd }; a $[1,2,3]

[18:47] <camelia> rakudo-moar 69a335640: OUTPUT: ¬´Ambiguous call to 'a(Array)'; these signatures all match:‚ê§  (@a)‚ê§  (Positional $a)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:48] <discord-raku-bot> <roguerakudev> that makes sense

[18:49] <discord-raku-bot> <roguerakudev> I would kind of expect $(1, 2, 3) to take the $-sigiled candidate

[18:49] <discord-raku-bot> <roguerakudev> there are probably reasons why it shouldn't though

[18:50] <lizmat> well, perhaps it should, but that would be a breaking change

[18:51] <lizmat> perhaps the Positional $ candidate should

[18:51] <lizmat> but generally, containerization is not considered in dispatch

[18:52] <lizmat> e.g. if you have an Array as an element on another Array, or a Hash, it will be containerized unless you do something special

[18:54] <discord-raku-bot> <antononcube> Maybe the rain mood got to you...

[18:57] <lizmat> afk&

[19:05] *** Xliff_ left
[19:07] <discord-raku-bot> <antononcube> @Rog "I need adjust the bot permissions" -- Bot permits...

[19:35] *** MasterDuke left
[19:45] *** jpn joined
[19:50] *** jpn left
[20:07] <ab5tract> roguerakudev: I implemented that differentiation (@a vs Positional $a) first but it's actually a bit more intrusive while being less comprehensive than `is item`

[20:07] <ab5tract> m: multi s(@a) { '@' }; multi s(@a is item) { '$' }; say s [<a l r e a d y>]; say s $[<h e r e>]

[20:07] <camelia> rakudo-moar 335a0b0ce: OUTPUT: ¬´@‚ê§$‚ê§¬ª

[20:08] *** MasterDuke joined
[20:10] *** MasterDuke left
[20:11] <ab5tract> m: multi s(%a) { '%' }; multi s(%a is item) { '$' }; say s %( :already ); say s ${ :here }

[20:11] <camelia> rakudo-moar 335a0b0ce: OUTPUT: ¬´%‚ê§$‚ê§¬ª

[20:13] <ab5tract> Ah, I didn't scroll back far enough, I see lizmat++ already demo'd it

[20:40] <ab5tract> gfldex: not sure if you are seeing the efforts @ https://github.com/rakudo/rakudo/issues/5175#issue-1563090611 so poking you here about it as well

[20:40] * gfldex looks

[21:12] *** jpn joined
[21:17] *** jpn left
[21:20] <discord-raku-bot> <roguerakudev> btw the bot on this end should no longer respond to queries - I removed its ability to view this channel

[21:32] *** MasterDuke joined
[21:40] <discord-raku-bot> <antononcube> @Rog Did you tell it "bad bot, bad!"

[21:56] *** Sgeo joined
[21:58] <Geth> ¬¶ problem-solving: bbkr assigned to samcv Issue Add `nomark` for striping accents, `samemark` is counterintuitive and slow for that purpose. https://github.com/Raku/problem-solving/issues/427

[22:12] <discord-raku-bot> <roguerakudev> No, it would like that too much...

[22:15] <discord-raku-bot> <antononcube> Yeah, no negative reinformcements for bots.

[23:03] *** jpn joined
[23:08] *** jpn left
[23:34] *** sena_kun left
[23:56] *** Manifest0 left
