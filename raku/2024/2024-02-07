[00:04] *** Sgeo joined
[00:11] *** jpn joined
[00:11] *** epony joined
[00:12] <discord-raku-bot> <aruniecrisps> wait @bscan how do you run this file?

[00:13] <discord-raku-bot> <aruniecrisps> I'm seing that you're providing both $*IN and @ARGS

[00:16] *** jpn left
[00:19] *** sena_kun left
[00:30] <discord-raku-bot> <bscan> Something like cat test.raku | raku navigator.raku test.raku  The 2nd specification of test.raku isn't truly needed, but it tells the script the name of where the code came from (even though it won't actually read the file)

[01:06] *** jpn joined
[01:11] *** jpn left
[02:20] *** kylese left
[02:20] *** hulk joined
[02:29] <discord-raku-bot> <aruniecrisps> I'm getting this as a response:   Running navigator.raku Received file: test.raku  90d0cb6c-4a53-427b-8d30-b1195895c2df   It looks like it's running, but the data being given seemss to be just a UUID

[02:29] <discord-raku-bot> <aruniecrisps> here's test.raku for reference:  say "Hello world!"; 

[03:15] *** hulk left
[03:15] *** kylese joined
[03:49] *** jpn joined
[03:53] *** jpn left
[04:01] *** epony left
[04:04] *** derpydoo left
[04:45] *** dead1 joined
[05:03] *** itaipu left
[05:21] *** itaipu joined
[05:22] *** CIAvash joined
[05:39] *** jpn joined
[05:44] *** jpn left
[06:21] *** jpn joined
[06:25] *** jpn left
[07:15] *** itaipu left
[07:41] *** mrlo left
[07:50] *** epony joined
[08:06] *** teatime left
[08:07] *** JRaspass left
[08:07] *** JRaspass joined
[08:07] *** teatime joined
[08:16] *** Sgeo left
[08:29] *** epony left
[08:46] *** CIAvash left
[08:49] *** jpn joined
[08:54] *** epony joined
[09:16] *** dakkar joined
[09:29] *** sena_kun joined
[10:15] *** sena_kun left
[10:25] *** sena_kun joined
[10:25] *** sena_kun left
[11:14] *** jpn left
[11:19] *** epony left
[11:25] <tbrowder__> hi, is there now in modern Raku any simple way for a routine to detect unknown (unexpected)  named arguments?

[11:27] *** jpn joined
[11:29] <tbrowder__> i think one can iterate through the capture elements and check that way, but lizmat's tricks with sets may be the way to simplify things for a one liner.

[11:31] <lizmat> m: sub a(:$a, :$b, *%_) { dd %_ }; a :foo

[11:31] <camelia> rakudo-moar 02bc10c21: OUTPUT: «{:foo}␤»

[11:34] <lizmat> tbrowder_: is that what you're looking for ?

[11:34] *** epony joined
[11:47] <tbrowder__> great, that looks like the important part, thanks!

[12:12] <tbrowder__> btw, i've decided that trying to specify a new api number isn't worth the headache

[12:12] <lizmat> .oO( with great power comes great responsibility :-)

[12:13] <tbrowder__> and doesn't work like i thought it did when there was an "api" key in the META6 file

[12:14] <tbrowder__> yes, you are right!

[12:39] <discord-raku-bot> <librasteve> @aruniecrisps ++ ... I have been thinking about LSP support in the light of the recent CommaIDE announcements. Would you say it would be less effort for the raku community to support a single LSP for use across VSCode, vim and JetBrains (via https://github.com/ballerina-platform/lsp4intellij for example) than to do your work AND continue to support the Edument IntelliJ custom plugin?

[12:39] <discord-raku-bot> <librasteve> interested to hear thoughts from others

[12:43] <discord-raku-bot> <librasteve> [as an aside, I suspect that CommaIDE / IntelliJ plugin has richer features (Grammar debugging and so on) vs. a vanilla LSP and deeper integration / more touch points with the IntelliJ platform ... so jumping from Comma Plugin to LSP Plugin for JetBrains IDEs may reduce the features, in return for a more effective path to a maintainable future...]

[12:51] <lizmat> I think going for a better maintainable future is the way to go

[12:51] <lizmat> If someone needs Comma's more advanced features, there'll still be there: it's not like Comma will stop working all of a sudden?

[12:58] *** Some-body_ joined
[13:00] *** DarthGandalf left
[13:01] *** Some-body_ is now known as DarthGandalf

[13:28] *** itaipu joined
[13:44] <tbrowder__> .tell Xliff got yr prs, thnx

[13:44] <tellable6> tbrowder__, I'll pass your message to Xliff

[15:17] *** jpn left
[15:35] *** jpn joined
[15:49] *** jpn left
[15:54] <tbrowder__> lizmat: ref the Capture stuff, is it possible to create something a dev could use to (1) list named args allowed for a given sub and (2) programmatically apply it when the sub is called?

[15:55] *** dano left
[15:55] *** dano joined
[16:03] *** jpn joined
[16:07] *** El_Che left
[16:07] *** El_Che joined
[16:07] <discord-raku-bot> <aruniecrisps> @librasteve i mean an LSP is generally designed to be a protocol that works across different editors, not sure exactly what you mean

[16:15] *** discord-raku-bot left
[16:16] *** discord-raku-bot joined
[16:26] <tbrowder__> i'm getting failing tests  on github for windows workflows testing. 

[16:27] <tbrowder__> https://www.irccloud.com/pastebin/LFSVnp4m/bigtom

[16:29] <lizmat> yeah, that looks familiar

[16:30] <lizmat> :-(

[16:31] <[Coke]> is there a dry run option for mi6 release?

[16:31] <tbrowder__> any ideas about how to proceed? here's the whole failure part:

[16:31] <tbrowder__> https://www.irccloud.com/pastebin/MA8zaPzA/tbrowder

[16:32] <lizmat> [Coke]: mi6 build ?

[16:33] <tbrowder__> [Coke]: i don't see anything like it..;.

[16:35] <discord-raku-bot> <antononcube> @Coke and @tbrowder My calendars are bigger than yours!

[16:35] <discord-raku-bot> <antononcube> Well, maybe, not bigger, but nicer.

[16:36] <tbrowder__> ;-)

[16:36] <discord-raku-bot> <antononcube> And, of course, the size of the calendar is not that important, but how you use it.

[16:37] <tbrowder__> i use mi6 build all the time, esp for doc redoes

[16:37] <[Coke]> I just ran it and thankfully it prompted me for the one thing I wasn't sure it would get right.

[16:38] <discord-raku-bot> <antononcube> For example, in Jupyter notebook I can make these kind of calendars (with highlights):

[16:38] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1204828617406685194/Jupyter-calendar-year-html-demo.png?ex=65d62717&is=65c3b217&hm=fed1e635f2c9a2ba0277b04d4cb2113078cfb3544825719336f1b67783b18a9e&

[16:40] <tbrowder__> antononcube; cool for quick lookups and online use!

[16:42] <discord-raku-bot> <antononcube> @tbrowder Yes, exactly. I plan to add (hovering) toolips and hyperlinks.

[16:43] <tbrowder__> i'll leave that arena to you! i probably will never get around to using your LLM interface, but i will try to remember to demo some of yr stuff  when i get the chance--new devs ought to jump on it--esp with raku interface

[16:44] <discord-raku-bot> <antononcube> @tbrowder Well, the package "Markup::Calendar" can make standalone HTML calendar files.

[16:45] <tbrowder__> so i think RSC ought to think about pushing/fixing Raku on Windows--that's, unfortunately, where the young devs are

[16:46] <tbrowder__> paying the few windows experts around, or google summer of code maybe

[16:47] <discord-raku-bot> <antononcube> And, yes, I started working on "Text::Calendar" and "Markup::Calendar" because of some LLM and data science projects. Hence, the use in Jupyter is a primary use case.

[16:48] <tbrowder__> i should say "where they appear to be". just visit CodeProject

[16:51] *** derpydoo joined
[16:53] <discord-raku-bot> <bscan> I like LSP because it allows people to use their preferred editors. People who currently use neovim, emacs or vscode for every other language generally don't want to switch to CommaIDE just for Raku.

[17:00] <discord-raku-bot> <aruniecrisps> @bscan did you get a chance to look at this?

[17:03] <discord-raku-bot> <bscan> Ah, yes, that output looks good to me. The script will dump out all classes, grammars,  subs, tokens, etc used in your test.raku (of which there are 0). It will also show warnings and syntax errors. Try it with a more complex script.

[17:04] <discord-raku-bot> <bscan> You can also add me as a "Discord friend" if you want to side chat.

[17:15] *** vlad joined
[17:42] <discord-raku-bot> <aruniecrisps> Is there any documentation on RakuAST?

[17:44] <discord-raku-bot> <antononcube> @arun Yes, "for early adopters."

[17:45] <discord-raku-bot> <antononcube> https://dev.to/lizmat/series/23109

[18:05] *** dakkar left
[18:22] *** vlad left
[18:24] *** vlad joined
[18:40] *** jpn left
[18:42] *** sena_kun joined
[18:49] <discord-raku-bot> <librasteve> arun: there are two versions of the raku Comma IDE - one is a standalone IDE based on IntelliJ, the other is a plugin for IntelliJ IDEA. (IntelliJ is made by JetBrains).

[18:53] <discord-raku-bot> <librasteve> if there is an LSP for raku, then there is a way to create an LSP-based plugin for IntelliJ also ... therefore if we support the Comma tech, then we could have two parallel IntelliJ plugins ... my question is whether it would be better to "put all the wood behind one arrow" and to focus primarily on the LSP route ... ??

[18:56] <discord-raku-bot> <aruniecrisps> right now it looks ike neither RakuNavigator nor the Comma IDE plugin is at feature parity with PerlNavigator, for me I imagine the first priority would be to first get the base LSP server functionality to a point that whatever frontend we decide to go with for the LSP client we have a solid foundation to use

[18:57] <discord-raku-bot> <aruniecrisps> i'm playing around with RakuAST to see what I can do, and it seems like we can do a lot with it

[18:57] <discord-raku-bot> <bscan> I'd strongly vote LSP since the market share of neovim+vim+emacs+vscode greatly exceeds the market share of JetBrains.  Basically, we need a good LSP either way.

[18:58] <discord-raku-bot> <bscan> (And I agree that the Raku Navigator does not yet count as a great LSP)

[18:59] <jdv> who runs the discord bot?

[18:59] <discord-raku-bot> <aruniecrisps> but it doesn't look like .AST parses use statements at least in Raku REPL, so it looks like we can't just do file-name.IO.slurp.AST wholesale, we'd probaly have to parse the use statements before reading the rest of the Raku file

[19:00] <discord-raku-bot> <aruniecrisps> @lizmat any thoughts?

[19:04] <jdv> the discord bot's nick should be shortened.

[19:04] *** discord-raku-bot left
[19:04] <[Coke]> aruniecrisps - what command are you trying to run in the REPL?

[19:04] *** discord-raku-bot joined
[19:04] <jdv> this is what i see: https://ibb.co/MNtH79h

[19:05] <[Coke]> yah, for thin windows it's a lot.

[19:06] <jdv> its a waste!:)

[19:06] <[Coke]> I'm at 120 wide and even that is a big gap.

[19:06] <jdv> who does the discord bot work for?!

[19:07] <[Coke]> It's self documenting, but maybe even just "discord" or "bridge" would be ok.

[19:16] *** xinming left
[19:16] *** xinming joined
[19:30] *** vlad left
[19:36] *** jgaz joined
[19:42] <jdv> well, it has to be unique to be registered or whatever.  rdb123 or whatever would be fine.  the self documenting is only important to newbies and they can ask or figure it out given there's a "sub-nick" in the message.

[19:45] *** jpn joined
[19:49] *** jpn left
[20:28] *** kjp left
[20:28] *** kjp joined
[21:41] *** jpn joined
[22:14] *** jgaz left
[22:48] <Voldenet> weechat has weechat.bar.nicklist.size_max for this case

[22:49] <Voldenet> I use different layout settings on mobile and it works quite well

[23:01] <lizmat> aruniecrisps .AST does parse "use" statements, and creates RakuAST::Statement::Use for them

[23:09] *** jpn left
[23:34] *** Sgeo joined
[23:51] *** sena_kun left
