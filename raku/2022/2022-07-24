[00:01] <japhb> Quibono: Sure, the more the merrier.  Do note that it's a LOT of work to go from "the basics" to "can compete with Rakudo on MoarVM".  But this is why the language is defined by its test suite -- if your compiler can pass the test suite, it compiles Raku.

[00:01] <discord-raku-bot> <Quibono> Yeah that makes sense, like 1000 tests in the roasts?

[00:02] <Voldenet> more backends is doable

[00:03] *** Sankalp joined
[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[01:09] *** sourceable6 left
[01:09] *** releasable6 left
[01:09] *** linkable6 left
[01:09] *** quotable6 left
[01:09] *** tellable6 left
[01:09] *** statisfiable6 left
[01:09] *** greppable6 left
[01:09] *** bloatable6 left
[01:09] *** coverable6 left
[01:09] *** evalable6 left
[01:09] *** nativecallable6 left
[01:09] *** reportable6 left
[01:09] *** committable6 left
[01:09] *** unicodable6 left
[01:09] *** bisectable6 left
[01:09] *** shareable6 left
[01:09] *** benchable6 left
[01:09] *** notable6 left
[01:09] *** sourceable6 joined
[01:10] *** bloatable6 joined
[01:10] *** nativecallable6 joined
[01:10] *** benchable6 joined
[01:10] *** linkable6 joined
[01:10] *** coverable6 joined
[01:10] *** greppable6 joined
[01:10] *** evalable6 joined
[01:10] *** tellable6 joined
[01:11] *** notable6 joined
[01:11] *** reportable6 joined
[01:11] *** shareable6 joined
[01:11] *** quotable6 joined
[01:11] *** unicodable6 joined
[01:12] *** releasable6 joined
[01:12] *** committable6 joined
[01:12] *** bisectable6 joined
[01:12] *** statisfiable6 joined
[02:12] *** notable6 left
[02:12] *** evalable6 left
[02:12] *** coverable6 left
[02:12] *** greppable6 left
[02:12] *** quotable6 left
[02:12] *** releasable6 left
[02:12] *** shareable6 left
[02:12] *** statisfiable6 left
[02:12] *** sourceable6 left
[02:12] *** benchable6 left
[02:12] *** bloatable6 left
[02:12] *** nativecallable6 left
[02:12] *** tellable6 left
[02:12] *** reportable6 left
[02:12] *** bisectable6 left
[02:12] *** committable6 left
[02:12] *** linkable6 left
[02:12] *** unicodable6 left
[02:12] *** coverable6 joined
[02:13] *** linkable6 joined
[02:13] *** releasable6 joined
[02:13] *** reportable6 joined
[02:13] *** notable6 joined
[02:13] *** tellable6 joined
[02:13] *** bisectable6 joined
[02:13] *** benchable6 joined
[02:14] *** committable6 joined
[02:14] *** unicodable6 joined
[02:14] *** bloatable6 joined
[02:14] *** statisfiable6 joined
[02:14] *** sourceable6 joined
[02:14] *** quotable6 joined
[02:14] *** greppable6 joined
[02:14] *** evalable6 joined
[02:14] *** shareable6 joined
[02:15] *** nativecallable6 joined
[02:23] *** thowe left
[02:24] *** thowe joined
[02:24] *** thowe left
[02:29] *** thowe joined
[03:29] *** quotable6 left
[03:29] *** sourceable6 left
[03:29] *** coverable6 left
[03:29] *** tellable6 left
[03:29] *** benchable6 left
[03:29] *** notable6 left
[03:29] *** bisectable6 left
[03:29] *** linkable6 left
[03:29] *** bloatable6 left
[03:29] *** statisfiable6 left
[03:29] *** greppable6 left
[03:29] *** shareable6 left
[03:29] *** evalable6 left
[03:29] *** committable6 left
[03:29] *** nativecallable6 left
[03:29] *** unicodable6 left
[03:29] *** releasable6 left
[03:29] *** reportable6 left
[03:29] *** reportable6 joined
[03:29] *** committable6 joined
[03:30] *** bloatable6 joined
[03:30] *** unicodable6 joined
[03:30] *** notable6 joined
[03:30] *** releasable6 joined
[03:30] *** sourceable6 joined
[03:30] *** bisectable6 joined
[03:30] *** quotable6 joined
[03:31] *** nativecallable6 joined
[03:31] *** statisfiable6 joined
[03:31] *** greppable6 joined
[03:31] *** benchable6 joined
[03:31] *** evalable6 joined
[03:31] *** tellable6 joined
[03:31] *** linkable6 joined
[03:31] *** shareable6 joined
[03:32] *** coverable6 joined
[04:32] *** coverable6 left
[04:32] *** evalable6 left
[04:32] *** notable6 left
[04:32] *** tellable6 left
[04:32] *** bisectable6 left
[04:32] *** greppable6 left
[04:32] *** linkable6 left
[04:32] *** bloatable6 left
[04:32] *** committable6 left
[04:32] *** statisfiable6 left
[04:32] *** sourceable6 left
[04:32] *** reportable6 left
[04:32] *** nativecallable6 left
[04:32] *** unicodable6 left
[04:32] *** benchable6 left
[04:32] *** shareable6 left
[04:32] *** releasable6 left
[04:32] *** quotable6 left
[04:32] *** notable6 joined
[04:33] *** statisfiable6 joined
[04:33] *** benchable6 joined
[04:33] *** unicodable6 joined
[04:33] *** nativecallable6 joined
[04:33] *** bisectable6 joined
[04:34] *** evalable6 joined
[04:34] *** reportable6 joined
[04:34] *** shareable6 joined
[04:34] *** linkable6 joined
[04:34] *** tellable6 joined
[04:34] *** greppable6 joined
[04:35] *** sourceable6 joined
[04:35] *** bloatable6 joined
[04:35] *** quotable6 joined
[04:35] *** committable6 joined
[04:35] *** releasable6 joined
[04:35] *** coverable6 joined
[05:26] *** daxim joined
[06:06] *** reportable6 left
[06:07] *** reportable6 joined
[06:26] *** saint- left
[06:58] *** linkable6 left
[06:59] *** linkable6 joined
[07:00] *** linkable6 left
[07:01] *** Nemokosch joined
[07:01] <Nemokosch> .

[07:01] <tellable6> 2022-07-22T23:16:22Z #raku <SmokeMachine> Nemokosch: I have done something that looks like that: https://github.com/FCO/MemoizedDOM/blob/master/examples/todo/Todo.pm6

[07:01] <tellable6> 2022-07-23T11:11:01Z #raku <lizmat> Nemokosch: https://github.com/lizmat/HTML-Entities-Fast on its way to the ecosystem

[07:02] *** linkable6 joined
[07:03] <Nemokosch> Okay okay, thank you. I'm gonna check it out soon. First I want to profile HTML::Tag without the entity encoding because yes... that's still too slow

[07:11] <discord-raku-bot> <Nemokosch> öööh

[07:11] <discord-raku-bot> <Nemokosch> is join meant to be slow?

[07:15] <discord-raku-bot> <Nemokosch> I rendered a 4 column, 3 row table, the whole program ran for 180 milliseconds with the profiling

[07:15] <discord-raku-bot> <Nemokosch> 90 of which belongs to one single join call, apparently

[07:16] *** dustinm` left
[07:24] <discord-raku-bot> <Nemokosch> yeah no, this is bullshit; hypering has a high initial cost that kills the benchmark

[07:25] <discord-raku-bot> <Nemokosch> actually you might have even pointed this out in a way, now that I think of it

[07:44] *** dustinm` joined
[07:59] *** linkable6 left
[08:01] *** linkable6 joined
[08:06] <discord-raku-bot> <Nemokosch> I don't know who to reach out to with the MoarVM profiler HTML but it would be really-really desirable to properly handle the history with JS

[08:06] <discord-raku-bot> <Nemokosch> it's quite tough to return

[08:14] <Kaiepi> the profiler js has a habit of printing massive numbers for no obvious reason and grinding my browser to a halt at times

[08:17] <discord-raku-bot> <Nemokosch> true

[08:17] <discord-raku-bot> <Nemokosch> but the biggest problem is that I'm yet to find out how to get anything useful from it

[08:18] <Kaiepi> i'm on this whole MOP tangent from my networking work out of readings i got from the profiler when benchmarking a prototype of some packet abstractions

[08:19] <Kaiepi> it was spending a weirdly long amount of time in routines originating from there

[08:27] *** jaguart joined
[08:29] <discord-raku-bot> <Nemokosch> I don't know... could it be that the sheer cost of running methods is this big? I wouldn't know

[08:29] <discord-raku-bot> <Nemokosch> and this profiler seems barely useful at all

[08:29] <discord-raku-bot> <Nemokosch> I click on something that seems big and the parts that show up don't nearly add up to the value

[08:30] <Kaiepi> metamethods are small and run as such, the problem is they carry a lot of weight and inefficiencies get blown out of proportion that way

[08:32] <Kaiepi> the changes from https://github.com/rakudo/rakudo/pull/4936 etc. influence build times, for instance

[08:35] <discord-raku-bot> <Nemokosch> there were 174361 sink calls...

[08:36] <discord-raku-bot> <Nemokosch> I think the "exclusive time" row doesn't contain valid percentages, by the way

[08:36] <discord-raku-bot> <Nemokosch> inclusive time:      

[08:36] <discord-raku-bot> <Nemokosch> 9.48% (20.98ms)

[08:36] <discord-raku-bot> <Nemokosch> exclusive time:

[08:36] <discord-raku-bot> <Nemokosch> 0.6% (12.99ms)

[08:36] <discord-raku-bot> <Nemokosch> BRUH

[08:52] *** sena_kun joined
[09:02] *** habere-et-disper joined
[09:06] <habere-et-disper> Adverbs appear to not be checked for syntax/typos. Is this meant to be the case?

[09:07] <habere-et-disper> For example the plural form tripped me up:

[09:07] <habere-et-disper> m: say '123abc456'.substr-eq: 'abç', 3, :ignoremarks

[09:07] <camelia> rakudo-moar a7e9b1938: OUTPUT: «False␤»

[09:09] <habere-et-disper> Compare with:

[09:09] <habere-et-disper> m: say '123abc456'.substr-eq: 'abç', 3, :ignoremark

[09:09] <camelia> rakudo-moar a7e9b1938: OUTPUT: «True␤»

[09:24] *** lichtkind__ joined
[09:29] *** discord-raku-bot left
[09:30] *** discord-raku-bot joined
[09:34] *** ab5tract joined
[09:34] *** discord-raku-bot left
[09:34] *** discord-raku-bot joined
[09:35] <ab5tract> o/

[09:42] <discord-raku-bot> <Nemokosch> I think adverbs are just pairs

[09:43] <discord-raku-bot> <Nemokosch> I don't know if there was some deliberate design choice with this, I mean that they don't check the keys

[09:55] *** Nemokosch left
[10:14] *** Sgeo left
[10:23] *** habere-et-disper left
[11:23] *** evalable6 left
[11:26] *** evalable6 joined
[11:29] *** RaycatWhoDat left
[11:42] *** discord-raku-bot left
[11:43] *** discord-raku-bot joined
[11:48] *** discord-raku-bot left
[11:48] *** discord-raku-bot joined
[11:56] *** jaguart left
[11:58] *** discord-raku-bot left
[11:58] *** discord-raku-bot joined
[12:07] *** reportable6 left
[12:08] *** reportable6 joined
[12:24] <ab5tract> any idea why two datetimes that for all intents and purposes look the same don't smartmatch each other?

[12:24] <ab5tract> m: my $dt = DateTime.now; say $dt ~~ $dt.clone

[12:24] <camelia> rakudo-moar 3d3966b0c: OUTPUT: «False␤»

[12:25] <ab5tract> Seems... strange

[12:27] <discord-raku-bot> <Nemokosch> I don't see any ACCEPTS method for them...

[12:30] <discord-raku-bot> <Nemokosch> If this really is the case, I suppose Any.ACCEPTS would be used, which checks for object identity

[12:30] <discord-raku-bot> <Nemokosch> I don't know if there is any specific reason for this, though. Maybe it just went unnoticed

[12:30] <gfldex> ab5tract: please file a rakudobug

[12:32] <ab5tract> gfldex: will do

[12:38] <ab5tract> gfldex: just to clarify, that just means adding a bug to the rakudo repo on github, correct?

[12:38] <gfldex> aye

[12:40] <discord-raku-bot> <Nemokosch> if we can trust the documentation, it seems like it's rather a "design bug" than an "environment bug" 😅

[12:41] <discord-raku-bot> <Nemokosch> probably not intentional though

[12:42] <ab5tract> It could do string comparison or even an instant comparison 

[12:43] <ab5tract> hmm, it even provides ==

[12:44] <ab5tract> good to know, but makes ACCEPTS an even stranger omition, as I wouldn't expect the numeric op to be provided for DateTime

[12:45] <discord-raku-bot> <Nemokosch> == does Int coercion, as you might know

[12:45] <ab5tract> in this case that involves a cast to Instant

[12:46] <ab5tract> Just going by the docs here. Maybe == isn't specifically defined, it's behavior is just documented...

[12:48] <discord-raku-bot> <Nemokosch> sorry, not Int, Numeric

[12:48] <discord-raku-bot> <Nemokosch> I tend to forget there are other numbers as well 😅

[12:50] <discord-raku-bot> <Nemokosch> and yes, apparently Instant "is Cool does Real", so for some, to me unknown reason, it can be used for Numeric coercion

[12:51] <guifa> an Instant is at its core just a number, and it logically makes sense to use > < = ≤ ≥ ≠ with that value

[12:53] <discord-raku-bot> <Nemokosch> how does this coercion happen, though?

[12:54] <gfldex> Comparing DateTime is quite wonky in general. If you compare 2 timestamps, what precision do you want?

[12:54] <ab5tract> I would say you want the precision that is defined

[12:54] <ab5tract> as precise as the datetime's themselves, that is

[12:54] <discord-raku-bot> <Nemokosch> there is no .Numeric on DateTime or Dateish, yet I can call .Numeric on an instance

[12:54] <ab5tract> so if you don't want seconds, you make sure you are comparing datetimes that don't have seconds

[12:55] <gfldex> That may mean that some ppl will miss appointments. Humans tend to think about equalness down to the minute, maybe second.

[12:55] <guifa> Nemokosch: an Instant turns into (at the moment) a POSIX-like time stamp (unix epoch, but iirc POSIX doesn't do fractional time, but Instant.Numeric preserves sub-second precision)

[12:55] <tellable6> guifa, I'll pass your message to Nemokosch

[12:57] *** Nemokosch joined
[12:57] <Nemokosch> .

[12:57] <tellable6> 2022-07-24T12:55:52Z #raku <guifa> Nemokosch: an Instant turns into (at the moment) a POSIX-like time stamp (unix epoch, but iirc POSIX doesn't do fractional time, but Instant.Numeric preserves sub-second precision)

[12:58] <Nemokosch> negative:

[12:58] <Nemokosch> m: DateTime.now andthen .Instant eqv .Numeric andthen .say

[12:58] <camelia> rakudo-moar 3d3966b0c: OUTPUT: «True␤»

[13:00] <Nemokosch> They do the same - but how does DateTime get a .Numeric method in the first place?

[13:05] *** dakkar joined
[13:10] *** Nemokosch left
[13:12] <lizmat> re DateTime.ACCEPTS: https://github.com/rakudo/rakudo/commit/31779f4701797bfb4e9ea980eb5ad300b6e74797

[13:13] *** linkable6 left
[13:14] <discord-raku-bot> <Nemokosch> In master already? 😂

[13:15] *** linkable6 joined
[13:32] <ab5tract> Thanks lizmat! I had a feeling you would be on top of this :)

[13:33] <ab5tract> Gotta go for now. Have a great afternoon everyone!

[13:34] *** ab5tract left
[13:40] <discord-raku-bot> <Nemokosch> 👋

[13:52] *** dakkar left
[14:07] <discord-raku-bot> <Quibono> Hello everyone

[14:11] *** Xliff joined
[14:21] <lizmat> Quibono /o

[14:46] <discord-raku-bot> <Quibono> How are you doing lizmat?

[14:47] <lizmat> pretty well :-)  and you?

[14:52] <discord-raku-bot> <Quibono> Good. Hoping to start making a VM tonight and maybe learn some raku.

[14:52] <lizmat> good for you!

[14:59] *** equinox joined
[15:50] *** vrurg_ joined
[15:50] *** vrurg left
[16:05] *** sena_kun left
[16:07] *** ab5tract joined
[16:09] *** sena_kun joined
[16:16] *** guifa left
[16:41] *** jaguart joined
[17:01] *** equinox left
[17:20] *** sena_kun left
[17:27] *** Kaiepi left
[17:34] *** sena_kun joined
[17:42] <nine> Nemokosh: the parts that show up when you click on something big in the profiler cannot add up to the total, since there's also the exclusive time spent in that big thing itself.

[17:42] <tellable6> 2022-07-22T15:48:42Z #raku <ab5tract> nine I'd be interested in perusing a list of low-hanging fruit for new-disp, if you have the tuits to put one together

[17:43] <nine> new-disp? Isn't it a little late for that considering it's been merged for almost a year now?

[17:48] <discord-raku-bot> <Nemokosch> 🤣

[17:49] *** jaguart left
[17:52] <discord-raku-bot> <Nemokosch> \s/new-disp/RakuAST, then 🧠

[17:57] *** jaguart joined
[17:58] *** jaguart left
[17:58] <discord-raku-bot> <Nemokosch> by the way

[17:58] <discord-raku-bot> <Nemokosch> you must come to discord, s// is built in

[17:58] *** jaguart joined
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:23] *** lichtkind__ left
[18:24] *** lichtkind joined
[18:28] <nine> ab5tract: sorry, I'm quite under the weather right now. I'd just run a spectest with RAKUDO_RAKUAST=1 and look at a few of the failing ones. Compilation failures due to unrecognized syntax are often the easier ones as you often just have to copy&paste from the old grammar and adjust a little. Actions are much easier to write now. Hardest part is finding the relevant bits of the old actions.

[18:37] *** guifa joined
[18:40] *** lichtkind left
[18:41] *** lichtkind joined
[18:48] *** lichtkind left
[18:49] *** lichtkind joined
[18:58] *** Kaiepi joined
[18:59] *** dogbert11 joined
[18:59] *** dogbert17 left
[19:01] *** [Coke]_ joined
[19:02] *** [Coke] left
[19:08] *** Sgeo joined
[19:29] *** [Coke]_ left
[19:37] *** [Coke] joined
[19:49] <SmokeMachine> I don't know how useful it is (if useful at all), but I've been playing on adding Cro web components using pro template and web socket. Would someone like to take a look at it and tell me if it could be useful for anything, please? https://github.com/FCO/Cro-WebSocket-WebComponents-test/blob/main/lib/Routes.pm6

[19:58] *** coleman left
[20:02] *** coleman joined
[20:16] <SmokeMachine> Does anyone have any opinion about that?

[20:28] *** ab5tract left
[20:44] <discord-raku-bot> <Nemokosch> I'm not competent at this, sorry

[21:17] *** sena_kun left
[21:35] *** vrurg_ is now known as vrurg

[22:35] *** evalable6 left
[22:35] *** linkable6 left
[22:36] *** linkable6 joined
[22:36] *** evalable6 joined
[23:13] *** [Coke] left
[23:15] *** [Coke] joined
[23:23] *** vasko left
[23:26] *** melezhik joined
[23:26] <melezhik> .tell lizmat for some reasons rak does not search on my SparkyCI alpine test box - http://sparrowhub.io:2222/report/914 - but maybe this Rakudo version thing?

[23:26] <tellable6> melezhik, I'll pass your message to lizmat

[23:34] *** melezhik left
[23:35] *** aris32 joined
