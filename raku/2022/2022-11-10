[00:00] *** kjp left
[00:01] *** kjp joined
[00:01] *** codesections1 left
[00:02] *** codesections1 joined
[00:02] *** ProperNoun joined
[00:07] *** codesections left
[00:07] *** codesections1 is now known as codesections

[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[00:44] <lucs> Are there any slots still available for the Advent calendar? (how can I find out?)

[00:54] <gfldex> lucs: https://github.com/Raku/advent/blob/master/raku-advent-2022/authors.md

[00:54] <lucs> Thanks :)

[00:56] *** Nemokosch left
[00:56] *** Nemokosch joined
[01:29] <discord-raku-bot> <Nemokosch> test

[01:30] <discord-raku-bot> <Nemokosch> 🥳

[01:30] <ugexe> avuserow++

[01:32] *** discord-raku-bot left
[01:32] *** discord-raku-bot joined
[02:23] *** Nemokosch left
[02:29] *** Nemokosch joined
[02:30] *** Nemokosch left
[02:31] *** frost12 joined
[02:32] *** frost12 left
[02:32] *** frost52 joined
[02:38] *** sortiz joined
[02:40] *** frostsdasd joined
[02:41] *** Kaiepi joined
[02:42] *** razetime joined
[02:43] *** frostsdasd left
[02:43] *** frost48 joined
[02:43] *** frost52 left
[02:43] *** frost48 left
[02:43] *** frost56 joined
[02:44] *** frost56 left
[02:52] *** frost71 joined
[02:54] *** frost71 is now known as frost

[03:56] *** reportable6 left
[03:56] *** greppable6 left
[03:56] *** evalable6 left
[03:56] *** notable6 left
[03:56] *** squashable6 left
[03:56] *** quotable6 left
[03:56] *** benchable6 left
[03:56] *** unicodable6 left
[03:56] *** nativecallable6 left
[03:56] *** tellable6 left
[03:56] *** releasable6 left
[03:56] *** sourceable6 left
[03:56] *** bisectable6 left
[03:56] *** committable6 left
[03:56] *** linkable6 left
[03:56] *** statisfiable6 left
[03:56] *** shareable6 left
[03:56] *** bloatable6 left
[03:56] *** coverable6 left
[03:56] *** bisectable6 joined
[03:56] *** shareable6 joined
[03:56] *** statisfiable6 joined
[03:57] *** unicodable6 joined
[03:57] *** bloatable6 joined
[03:57] *** coverable6 joined
[03:57] *** greppable6 joined
[03:58] *** benchable6 joined
[03:58] *** nativecallable6 joined
[03:58] *** notable6 joined
[03:58] *** evalable6 joined
[03:58] *** linkable6 joined
[03:58] *** quotable6 joined
[03:58] *** sourceable6 joined
[03:59] *** reportable6 joined
[03:59] *** committable6 joined
[03:59] *** squashable6 joined
[03:59] *** releasable6 joined
[03:59] *** tellable6 joined
[04:00] *** derpydoo left
[04:08] *** razetime left
[04:33] *** Nemokosch joined
[04:36] *** Nemokosch left
[05:19] *** Kaiepi left
[05:19] *** razetime joined
[06:07] *** reportable6 left
[06:09] *** reportable6 joined
[06:51] *** abraxxa joined
[06:55] *** abraxxa left
[06:56] *** abraxxa joined
[06:57] *** razetime left
[07:07] *** Sgeo left
[07:09] *** sortiz left
[07:37] *** abraxxa left
[07:55] *** abraxxa joined
[07:57] *** abraxxa left
[08:00] *** releasable6 left
[08:00] *** squashable6 left
[08:00] *** committable6 left
[08:00] *** sourceable6 left
[08:00] *** linkable6 left
[08:00] *** notable6 left
[08:00] *** nativecallable6 left
[08:00] *** greppable6 left
[08:00] *** unicodable6 left
[08:00] *** bisectable6 left
[08:00] *** epony left
[08:00] *** sjn left
[08:00] *** synthmeat left
[08:00] *** gugod_ left
[08:00] *** eseyman left
[08:00] *** djerius left
[08:00] *** sivoais left
[08:00] *** [Coke] left
[08:00] *** sftp left
[08:00] *** tinita left
[08:00] *** Ekho left
[08:00] *** vrurg left
[08:00] *** xkr47 left
[08:00] *** jdv left
[08:00] *** BinGOs left
[08:00] *** avar left
[08:00] *** Scotteh left
[08:00] *** tobs left
[08:00] *** perlmaros left
[08:00] *** nicole left
[08:00] *** charsbar left
[08:00] *** KotH left
[08:00] *** polettix left
[08:00] *** charsbar_ joined
[08:00] *** eseyman_ joined
[08:00] *** xkr47_ joined
[08:00] *** jdv joined
[08:00] *** KotH joined
[08:00] *** bingos joined
[08:00] *** tinita joined
[08:00] *** perlmaros joined
[08:00] *** avar joined
[08:00] *** bingos left
[08:00] *** bingos joined
[08:00] *** xkr47_ is now known as xkr47

[08:00] *** polettix joined
[08:00] *** sjn joined
[08:00] *** tobs joined
[08:00] *** [Coke] joined
[08:00] *** charsbar_ is now known as charsbar

[08:00] *** nicole joined
[08:00] *** vrurg joined
[08:02] *** Scotteh joined
[08:02] *** djerius joined
[08:02] *** sftp joined
[08:02] *** gugod joined
[08:03] *** synthmeat joined
[08:10] *** Ekho joined
[08:10] *** sivoais joined
[08:11] *** abraxxa joined
[08:13] *** bingos is now known as BinGOs

[08:15] *** abraxxa left
[08:16] *** abraxxa joined
[08:21] *** razetime joined
[08:40] *** Kaiepi joined
[08:57] *** squashable6 joined
[08:58] *** bisectable6 joined
[08:58] *** committable6 joined
[08:59] *** notable6 joined
[09:00] *** nativecallable6 joined
[09:09] *** dakkar joined
[09:28] *** frost left
[09:52] *** lizmat_ joined
[09:55] *** lizmat left
[09:57] *** lizmat_ left
[09:57] *** lizmat joined
[10:00] *** unicodable6 joined
[10:00] *** releasable6 joined
[10:11] *** habere-et-disper joined
[10:24] *** kueppo joined
[10:46] *** kueppo left
[11:00] *** greppable6 joined
[11:14] *** discord-raku-bot left
[11:15] *** discord-raku-bot joined
[11:18] *** sena_kun joined
[11:25] *** Nemokosch joined
[11:31] <discord-raku-bot> <Nemokosch> What does née exactly mean? "also draws on an earlier attempt at a Perl 6 (nee Raku) port (XML::LibXML)." - isn't it rather Raku née Perl 6?

[11:32] <guifa> yeah that's backwards

[11:33] <guifa> it should be Raku née Perl 6

[11:33] <guifa> née is used to indicate someone had a previous name.  Most common for women who change their surname upon marriage.  So if Jane Smith marries John Doe, you might say Mrs. Jane Doe (née Smith)

[11:35] <guifa> comes from French, meaning "born" (if a guy changed his name, it'd be "né", but I've always seen Raku/Perl 6 as femenine, thanks to Camelia)

[11:35] <lizmat> yeah, and in that context in french, it means "born as"

[11:35] *** habere-et-disper left
[11:39] *** Nemokosch left
[11:41] *** Nemokosch joined
[11:44] <discord-raku-bot> <Nemokosch> okay, thanks, just a little sanity check. Not sure such a minor README correction is issue worthy 😄

[11:44] <discord-raku-bot> <Nemokosch> (Saw it in the LibXML module)

[11:49] *** Kaiepi left
[11:51] *** MoC joined
[11:58] *** linkable6 joined
[11:59] *** sourceable6 joined
[12:01] *** MoC left
[12:06] *** Kaiepi joined
[12:07] *** reportable6 left
[12:12] <discord-raku-bot> <Anton Antonov> @guifa Good explanations nee clarifications. Or vice versa ...

[12:20] <El_Che> nothing wrong with a little revisionism and cut the perl 6 references

[12:21] *** habere-et-disper joined
[12:21] <guifa> I still have a few modules that keep the née Perl 6 on them.  The reality is many people are behind the curve when it comes to news, etc., so I'm goign to wait a good while before I start taking it off personally

[12:22] * guifa would prefer the perl 5 isms to be opt in, instead of opt out though

[12:22] <guifa> The warnings, I mean

[12:22] <lizmat> hmmm.. perhaps if you put "isms" in RAKULIB?

[12:22] <discord-raku-bot> <Nemokosch> good point

[12:23] <discord-raku-bot> <Nemokosch> I've been thinking that there is one situation where the Perl 6 references could still do good service. And that's education, Hungarian education at the very least, which has always been off the trends.

[12:24] <discord-raku-bot> <Nemokosch> If I were to tell a teacher or an institute "hey, why don't you embrace this language you have never heard of", I'd get nowhere

[12:25] <discord-raku-bot> <Nemokosch> However, if I said "you know Perl, right? this is the next iteration, it should be quite easy for you to catch up with it", that might even work

[12:27] *** epony joined
[12:34] <El_Che> I love Perl, but sadly it's not a good reference today

[12:35] <El_Che> most people haven't seen it, but heard terrible things about it :)

[12:35] <El_Che> I have set quite a few young colleagues in their place :)

[12:35] <guifa> I sometimes make references where I point out flexibility, or clean syntax, etc, and I mention this is a legacy of Perl 

[12:35] *** reportable6 joined
[12:35] <guifa> Perl does a lot of things right — it just has a lot of reeeeeeeallly bad code floating out online that gives the wrong impression

[12:36] <guifa> and I'm happy to try to help break those misconceptions where I can, even if I don't use Perl that much these days

[12:37] <discord-raku-bot> <Nemokosch> and that's okay - however, there are still places where Perl is "living legacy" without anybody meaning it in a negative way

[12:37] <discord-raku-bot> <Nemokosch> as you can expect, these are the places where Raku is unheard of, and will be unheard of for the next 10 years

[12:38] <El_Che> where I work they have been migrating of a Perl app for longer than a decade and the end is not in sight

[12:38] <El_Che> :)

[12:39] <discord-raku-bot> <Nemokosch> but... those people might remember that there was a Perl 6 planned, and you might be able to tell them "oh it's long done, just not called that way anymore"

[13:00] <tbrowder> hi, what's the syntax for writing a module test to run its bin/prog file? i've tried "lives-ok { bin/prog }" with and without the bin and other path combos. thnx

[13:08] <ugexe> probably something like `run($*EXECUTABLE, "-I", $*PROGRAM.parent, $*REPO.repo-chain.map({ ("-I", $_).Slip }), $*PROGRAM.parent.child("bin/program.raku"))`

[13:09] <ugexe> its not so simple because you dont know how the dependencies to your program are being supplied. i.e. if you are using Test::FooBar in your test it might be fulfilled because its already installed (in which case the `$*REPO.repo-chain.map({ ("-I", $_).Slip })` isnt needed) or via -Isome/path or via $RAKULIB=some/path

[13:09] <lizmat> if it's in a test-script, I think you can assume a -I. has been done already ?

[13:09] <ugexe> that doesnt do any good for an external process

[13:10] <ugexe> i guess if $RAKULIB is set it might be fine depending on when it gets set, but definitely not -I

[13:12] *** Nemokosch left
[13:13] <ugexe> what i personally do is put bin/script code in a module and then test *that*. and direct testing of running the bin/script itself is done via CI while the unit tests test the CLI module

[13:13] *** habere-et-disper left
[13:30] *** Nemokosch joined
[13:44] *** derpydoo joined
[13:58] <leont> ugexe: that .Slip is a good example of why we should never have deprecated flatmap

[14:17] *** dakkar left
[14:34] *** derpydoo left
[14:37] * [Coke] wonders if he can close a raku-adjacent GH issue each day

[14:45] *** Sgeo joined
[14:47] <discord-raku-bot> <Nemokosch> I read "choose" and I was like..."only one? hard pick!"

[14:47] <discord-raku-bot> <Nemokosch> leont: I thought it was only "deprecated" in the sense of "disapproval"

[14:47] <discord-raku-bot> <Nemokosch> which could be undone without any effect

[15:08] <[Coke]> I don't know if .flatmap was only deprecated, or eventually removed.

[15:09] <avuserow> In 2022.07 it still exists and runs without any warnings :shrug:

[15:09] <avuserow> m: dd [1, 2, 3].flatmap(*+1)

[15:09] <camelia> rakudo-moar 64f552f32: OUTPUT: «(2, 3, 4).Seq␤»

[15:09] <leont> I remember it warning, but I might be mistaken

[15:10] <leont> It is documented as «This method is deprecated in 6.d and will be removed in 6.e. Use .map followed by .flat instead.»

[15:14] *** derpydoo joined
[15:17] <tbrowder> ugexe: thnx, i like the idea of putting the script code in a module

[15:19] <tbrowder> which it mostly already is, duh! just test that interface (he says as he slaps his forehead)

[15:20] <leont> And it annoys me greatly because a rather significant percentage of my maps are really flatmaps

[15:28] *** derpydoo left
[15:31] *** codesections left
[15:31] *** codesections joined
[15:41] <discord-raku-bot> <Nemokosch> yes well, you have me on this one

[15:41] <discord-raku-bot> <Nemokosch> I see no reason whatsoever to remove it

[15:41] <discord-raku-bot> <Nemokosch> ceterum censeo, fix the smartmatch of Matches instead

[15:57] *** sena_kun left
[15:57] *** sena_kun joined
[16:03] *** melezhik joined
[16:03] <melezhik> .

[16:03] <melezhik> o/

[16:04] <melezhik> .tell avuserow I created a SparrowCI pipeline to test raku-audio-taglib against different versions of Linux (Alpine/Arch/Debian/Ubuntu) - https://ci.sparrowhub.io/report/1686

[16:04] <tellable6> melezhik, I'll pass your message to avuserow

[16:05] <melezhik> .tell avuserow let me know if you're interested and I can create a PR

[16:05] <tellable6> melezhik, I'll pass your message to avuserow

[16:05] <melezhik> https://github.com/melezhik/raku-audio-taglib/blob/master/sparrow.yaml

[16:16] <melezhik> .tell avuserow sorry,  this is correct link - https://ci.sparrowhub.io/report/1685

[16:16] <tellable6> melezhik, I'll pass your message to avuserow

[16:23] *** melezhik left
[16:35] *** sortiz joined
[16:39] <discord-raku-bot> <Nemokosch> leont: moreover, https://docs.raku.org/type/List#method_flatmap shows no hints of being removed, that's why I remembered it as "only disapproved"

[16:40] <leont> Ah, maybe only Any.flatmap will be removed

[16:44] <leont> I find the «please use .map( ).flat as it is clear when the .flat is called and is not confusing like .flatmap.» really confusing, as I have no idea what would be confusing about it.

[16:45] *** nd3i joined
[16:47] <nd3i> Is there a current command line debugger, or should I dive in and try to install comma?

[16:51] <nd3i> Back up a step: I'm having trouble getting either raku-debug or rakudo-debug to load my code. While raku -c myfile.raku shows no errors, raku-debug dies with:Unexpected structure of 'when' statement QAST node:

[16:51] <nd3i> - QAST::Op(if)  :when_block<?> :statement_id<35> when \"raw\" { }\n\t

[16:51] <nd3i>   - QAST::Stmts

[16:52] *** japhb left
[16:53] <discord-raku-bot> <Nemokosch> I hope there is somebody who can help you but that's not me unfortunately

[16:54] <discord-raku-bot> <Nemokosch> for leont: I think the idea is that there is .flat.map and .map.flat but anyway, I also don't buy this argument. The question is: will you back me up if I open a revision issue?

[16:54] <leont> Absolutely

[16:56] <discord-raku-bot> <Nemokosch> also: what do you think of this RT issue that led to the current situation https://github.com/Raku/old-issue-tracker/issues/5989 ?

[16:57] <leont> I've never wanted the former, and flatmap exists in a number of other languages (including Javascript) where it isn't considered confusing

[16:57] <discord-raku-bot> <Nemokosch> because for any change, this needs to be countered

[16:58] *** japhb joined
[16:58] <discord-raku-bot> <Nemokosch> so basically you prefer flatmap over deepmap if this comes up as a dichotomy, do I understand right?

[16:59] <leont> I'm not sure I understand your question

[17:00] <discord-raku-bot> <Nemokosch> what is "the former"?

[17:00] <leont> I've never been in a situations where I wanted .flat.map, but I've been in a lot of situations where I've wanted .map.flat

[17:01] <leont> Also, there's an end-weight issue with the latter: a method call after a coderef is very poorly readable IMNSHO (even more so if the coderef is multi-line)

[17:03] *** japhb left
[17:03] *** japhb joined
[17:04] <discord-raku-bot> <Nemokosch> in my not-so-humble opinion? 😂

[17:04] <discord-raku-bot> <Nemokosch> you know, the argument was that "flatmap" reads kinda like "deepmap" and therefore it's confusing. This is the argument to take on

[17:07] <leont> I don't see why that would be confusing TBH

[17:08] <leont> (nor I see why anyone would ever want to do a deepmap, but that's an entirely different discussion)

[17:08] <leont> Or maybe it isn't different, IDK

[17:08] <nd3i> Looks like my question would fit better in the beginner channel. I'll try there.

[17:09] <discord-raku-bot> <Nemokosch> leont: that's why I asked about it

[17:09] *** nd3i left
[17:09] <discord-raku-bot> <Nemokosch> here comes a (possibly) funny one:

[17:09] <discord-raku-bot> <Nemokosch> > One of the goals in the design of Perl 6 is that it is worse to confuse an expert than a neophyte.

[17:10] *** nd3i joined
[17:10] <discord-raku-bot> <Nemokosch> ^ and for some reason, this should be read as a con of deepmap? lol

[17:10] <discord-raku-bot> <Nemokosch> flatmap*, sorry

[17:10] *** nd3i left
[17:11] *** nd3i joined
[17:15] *** Nemokosch1 joined
[17:18] <tonyo> nd3i: do you have a gist?

[17:19] *** Nemokosch left
[17:22] <nd3i> I can make one, but I get the same problem with a one-liner:

[17:22] <nd3i> $ raku-debug -e "given 42 { when Int { say 'NUMBER' }}"

[17:22] <nd3i> >>> LOADING -e

[17:22] <nd3i> Unexpected structure of 'when' statement QAST node:

[17:22] <tonyo> send it

[17:22] <nd3i> - QAST::Op(if) <sunk> :when_block<?> :statement_id<2> when Int { say 'NUMBER' } ...

[17:22] <tonyo> ah

[17:23] <tonyo> what's your raku -v?

[17:23] <tonyo> m: given 42 { when Int { say "NUMBER" }}

[17:23] <camelia> rakudo-moar 64f552f32: OUTPUT: «NUMBER␤»

[17:23] <nd3i> $ raku -v

[17:23] <nd3i> Welcome to Rakudo™ v2022.07.

[17:23] <nd3i> Implementing the Raku® Programming Language v6.d.

[17:23] <nd3i> Built on MoarVM version 2022.07.

[17:24] <tonyo> moar --version ?

[17:25] <nd3i> $ moar  --version

[17:25] <nd3i> This is MoarVM version 2022.07 built with JIT support

[17:25] <Nemokosch1> leont: I think that eventually this is all up to 2 factors:

[17:25] <Nemokosch1> 1. is the deprecation already acted upon, or somebody added it to the documentation while others didn't care?

[17:25] <Nemokosch1> 2. if the deprecation is in (actual) progress, what is somebody willing to do in order to undo it?

[17:25] <tonyo> nd3i: can you try `given 42 { when * ~~ Int { say 'number' } }` ?

[17:26] *** Nemokosch1 left
[17:28] <nd3i> $ raku -e "given 42 { when * ~~ Int { say 'number' } }"

[17:28] <nd3i> number

[17:28] <nd3i> $ raku-debug -e "given 42 { when * ~~ Int { say 'number' } }"

[17:28] <nd3i> >>> LOADING -e

[17:28] <nd3i> Unexpected structure of 'when' statement QAST node:

[17:28] <nd3i> - QAST::Op(if) <sunk> :when_block<?> :statement_id<2> when * ~~ Int { say 'number' }

[17:28] <avuserow> .tell melezhik sure, a PR would be welcome :)

[17:28] <tellable6> avuserow, I'll pass your message to melezhik

[17:29] <tonyo> what is the raku-debug -v?  same as raku?  strangely raku-debug won't run at all for me.  i build from source but am in the same 2022.07

[17:30] <nd3i>  raku-debug -v

[17:30] <nd3i> Welcome to Rakudo™ v2022.07.

[17:30] <nd3i> Implementing the Raku® Programming Language v6.d.

[17:30] <nd3i> Built on MoarVM version 2022.07.

[17:31] <tonyo> does it work if you do raku-debug and then just run `e given ...` ?

[17:34] <nd3i> BTW, I'm using the "rakudo" package from Arch (AUR), which builds from source on my machine (gcc or maybe clang. Gcc is the default for raku, no?).

[17:36] <nd3i> Goal!

[17:36] <tonyo> ?

[17:36] <nd3i> $ rakudo-debug

[17:36] <nd3i> >>> LOADING <REPL 1>

[17:36] <nd3i> + <REPL 1> (1 - 1)

[17:36] <nd3i> | REPL

[17:36] <nd3i> > e given 42 { when * ~~ Int { say 'number' } }

[17:36] <nd3i> number

[17:37] *** razetime left
[17:41] <discord-raku-bot> <Nemokosch> what changed?

[17:44] <nd3i> It works if you first start the debugger, then e (eval) the given/when.

[17:45] *** sena_kun left
[17:54] <tonyo> that seems like a bug

[18:01] *** abraxxa left
[18:07] *** reportable6 left
[18:10] *** reportable6 joined
[18:11] <nd3i> Should I report something? Best practice? (I'm not seeing an up-to-date bug link)

[18:12] <tonyo> i'm not sure if that's a bug in the debugger module or the `rakudo-debug` app 

[18:12] <nd3i> Seems like something that more people would have noticed, no?

[18:12] <tonyo> i think most people use an IDE

[18:12] <tonyo> i wonder if you do rakudo-debug <script> with that code in the <script> if it behaves the same

[18:13] <nd3i> Well, that was my fall back route.

[18:14] <nd3i> I'm not excited by having another complex thing to learn & fiddle with. Maybe I can get by with REPL and "say".

[18:15] <nd3i> Thanks for your help! ttfn

[18:16] *** nd3i left
[18:21] *** abraxxa joined
[18:25] <Voldenet> for me rakudo-debug doesn't even work

[18:25] <Voldenet> >Could not find Debugger::UI::CommandLine

[18:26] <Voldenet> not that I'm complaining, it was a foreign feature to me a sec ago

[18:29] <tonyo> that's what i got too, had to zef i

[18:31] *** sena_kun joined
[18:49] *** abraxxa left
[18:50] *** abraxxa joined
[19:15] *** abraxxa left
[19:16] *** melezhik joined
[19:16] <melezhik> .

[19:16] <tellable6> 2022-11-10T17:28:43Z #raku <avuserow> melezhik sure, a PR would be welcome :)

[19:17] <melezhik> I started interrogation of Sparrow and Go - allows to write Sparrow tasks in go, compile them in binaries and run from Sparrow - https://github.com/melezhik/sparrowgo

[19:18] <melezhik> interrogation -> integration HA-HA )))

[19:25] *** codesections left
[19:33] *** abraxxa joined
[19:34] *** abraxxa left
[19:36] *** Justin90 joined
[19:36] *** Justin90 left
[19:39] *** abraxxa joined
[19:42] <melezhik> .tell avuserow -  https://github.com/avuserow/raku-audio-taglib/pull/1 sorry for lot of commits, I guess we can squash them ?

[19:42] <tellable6> melezhik, I'll pass your message to avuserow

[19:49] *** nicole left
[19:49] *** nicole joined
[19:52] <avuserow> yeah let's squash them. should be easy to do at merge time I think

[19:52] <tellable6> 2022-11-10T16:04:45Z #raku <melezhik> avuserow I created a SparrowCI pipeline to test raku-audio-taglib against different versions of Linux (Alpine/Arch/Debian/Ubuntu) - https://ci.sparrowhub.io/report/1686

[19:52] <tellable6> 2022-11-10T16:05:10Z #raku <melezhik> avuserow let me know if you're interested and I can create a PR

[19:52] <tellable6> 2022-11-10T16:16:07Z #raku <melezhik> avuserow sorry,  this is correct link - https://ci.sparrowhub.io/report/1685

[19:53] <melezhik> sure!

[19:55] *** Guest38 joined
[20:01] <Guest38> Hello! Anyone from Brazil making money in Raku?

[20:07] <[Coke]> The only person I know in Brazil is not. :)

[20:07] <melezhik> LOL )))

[20:22] <[Coke]> IME, the best way to make money using Raku is to already be making money, and then use Raku to do it.

[20:22] <[Coke]> I have introduced several various projects (back through Parrot days) at $dayjobs I already had.

[20:24] <Guest38> Thank you.

[20:24] *** melezhik left
[20:26] *** bigdata joined
[20:27] *** sena_kun left
[20:29] *** sena_kun joined
[20:33] *** melezhik joined
[20:35] <discord-raku-bot> <Anton Antonov> @Coke Yeah, that is my approach. When I "earn money with Raku" is am basically using Raku to speed-up the invocation or application of my usual workflows.

[20:36] *** eseyman_ is now known as eseyman

[20:36] <[Coke]> (y)

[20:37] *** jjido joined
[20:57] *** Guest38 left
[21:06] *** melezhik left
[21:26] *** abraxxa left
[21:39] <discord-raku-bot> <Nemokosch> Yes, I'm also trying to use Raku in a similar fashion

[21:39] <discord-raku-bot> <Nemokosch> Honestly, mostly as a good shell toolset

[21:42] <El_Che> The Red author is a Brazilian

[21:45] <El_Che> I had a raku program in prod for 2 years. No longer because its task was done. We moved from Certificate CA and we have hundreds of domains. The raku program identified who was using the old CA and how long they still could use it and send mails how to get a new cert with the new CA and how long their cert would be valid.

[21:45] <El_Che> zero problems, hurray for raku

[21:50] *** lichtkind joined
[21:56] *** sena_kun left
[22:04] *** melezhik joined
[22:05] <melezhik> .

[22:05] <El_Che> ..

[22:06] <melezhik> ...

[22:07] <melezhik> 😁

[22:19] <discord-raku-bot> <Nemokosch> 😄

[22:19] *** codesections joined
[22:21] <El_Che> ... --- ...

[22:25] <discord-raku-bot> <Nemokosch> -.-

[22:28] *** melezhik left
[22:30] <El_Che> .-. .- -.- ..-

[22:38] *** melezhik joined
[22:39] *** jjido left
[22:39] <melezhik> El_Che ---...--- ))

[22:41] <sortiz> m: my %h = a => 1, b =>2; say %h ~~ :2b

[22:41] <camelia> rakudo-moar 64f552f32: OUTPUT: «True␤»

[22:42] *** Guest38 joined
[22:42] <El_Che> 🐻 in Spanish, it could be useful in Florida :)

[22:48] <discord-raku-bot> <Nemokosch> is pod6 extensible?

[22:48] *** melezhik left
[22:55] <guifa> it was designed to be

[22:55] <guifa> I think there's one or two modules that take advantage of it but I can't remember them off hand

[22:55] * guifa is afk 

[23:15] *** Guest38 left
[23:22] *** melezhik joined
[23:23] <melezhik> El_Che ++

[23:34] *** melezhik left
[23:54] *** codesections left
[23:55] *** Nemokosch1 joined
[23:55] *** codesections joined
[23:55] *** codesections left
[23:56] *** codesections joined
[23:56] *** codesections left
[23:56] <Nemokosch1> > I start to dislike "the ship has sailed" metaphore. it sounds to me as "I don't really need arguments for this"

[23:57] <Nemokosch1> El_Che, 2018

[23:59] *** codesections joined
[23:59] *** codesections left
