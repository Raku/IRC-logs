[00:06] *** Sankalp- joined
[00:06] *** Sankalp left
[00:06] *** Sankalp- is now known as Sankalp

[00:08] *** reportable6 left
[00:09] *** reportable6 joined
[00:38] *** [Coke] left
[00:42] *** [Coke] joined
[01:13] *** aris32 left
[01:16] *** lichtkind left
[01:21] *** summer left
[02:21] *** evalable6 left
[02:21] *** linkable6 left
[02:23] *** linkable6 joined
[02:24] *** evalable6 joined
[03:24] *** linkable6 left
[03:24] *** evalable6 left
[03:27] *** linkable6 joined
[03:27] *** evalable6 joined
[03:38] *** Sankalp left
[03:42] *** Sankalp joined
[04:16] *** vrurg left
[04:17] *** vrurg joined
[05:04] *** andinus left
[05:04] *** donpdonp|z_ left
[05:04] *** dg left
[05:04] *** jjatria left
[05:04] *** broquain1 left
[05:04] *** pat_js left
[05:04] *** broquaint joined
[05:04] *** donpdonp|z_ joined
[05:04] *** jjatria joined
[05:04] *** dg joined
[05:04] *** andinus joined
[05:04] *** pat_js joined
[05:07] *** avuserow left
[05:07] *** dcx left
[05:07] *** phogg left
[05:07] *** tailgate left
[05:07] *** bartolin_ left
[05:07] *** JRaspass left
[05:07] *** El_Che left
[05:07] *** goblin left
[05:07] *** renormalist left
[05:07] *** El_Che joined
[05:07] *** goblin joined
[05:07] *** renormalist joined
[05:07] *** bartolin joined
[05:07] *** avuserow joined
[05:08] *** JRaspass joined
[05:08] *** phogg joined
[05:09] *** tailgate joined
[05:09] *** dcx joined
[06:07] *** reportable6 left
[06:09] *** reportable6 joined
[07:09] *** evalable6 left
[07:09] *** linkable6 left
[07:09] *** Sgeo left
[07:11] *** evalable6 joined
[07:12] *** linkable6 joined
[07:48] *** Sankalp left
[07:48] *** dakkar joined
[07:51] *** sena_kun joined
[07:53] *** Sankalp joined
[07:54] *** ab5tract joined
[07:56] *** sena_kun left
[07:57] *** sena_kun joined
[08:06] <discord-raku-bot> <Nemokosch> A few things:

[08:06] <discord-raku-bot> <Nemokosch> 1. I kept so much time pondering on the performance

[08:06] <discord-raku-bot> <Nemokosch> of HTML::Tag using --profile that I still haven't checked HTML::Entities::Fast, sorry

[08:06] <discord-raku-bot> <Nemokosch> of HTML::Tag using --profile that I still haven't checked HTML::Entity::Fast, sorry

[08:08] <discord-raku-bot> <Nemokosch> 2. I got basically nowhere... I would be really thankful if someone more knowledgeable could point out what is so costly about .render. Now I uploaded the version benchmarked to both github and fez as the latest version <https://gist.github.com/2colours/6de5e16b49c1367344473affcafc8b4a> also I made this little test file which is how I tried to see the expensive part

[08:08] <discord-raku-bot> <Nemokosch> what really hits me is the number of sink calls - where do they come from?

[08:10] <discord-raku-bot> <Nemokosch> 3. Where to look for the rakudo profile HTML file generation? I would take a look for it, maybe I could add a more useful navigation back and forth; I would have been happy if there was something like that.

[08:11] <discord-raku-bot> <Nemokosch> since it's an SPA, I would hope that it cannot be too difficult... the content must be loaded some way, the same data could be identified and stored in the window history

[08:17] <lizmat> timo knows

[08:17] <tellable6> 2022-07-24T23:26:51Z #raku <melezhik> lizmat for some reasons rak does not search on my SparkyCI alpine test box - http://sparrowhub.io:2222/report/914 - but maybe this Rakudo version thing?

[08:18] *** jdv left
[08:19] *** vasko joined
[08:19] *** vasko left
[08:19] *** vasko joined
[08:24] *** jdv joined
[08:24] <timo> Nemokosch, the profiler html app lives in the nqp repository, i think under src/vm/moar or so

[08:39] <discord-raku-bot> <Nemokosch> Oh right

[08:39] <discord-raku-bot> <Nemokosch> https://github.com/Raku/nqp/blob/master/src/vm/moar/profiler/template.html

[08:43] <timo> there's also moarperf, which has a Cro backend to do some heavy lifting for you, and also supports the memory snapshot profiler

[08:56] <discord-raku-bot> <Nemokosch> haha, heard of it!

[08:57] <timo> i wish i had more energy for it next to my day job

[08:57] <timo> at the day job i'm working with svelte and some of the performance benefits it has over react could be amazing for moarperf

[08:58] *** ab5tract left
[08:58] <discord-raku-bot> <Nemokosch> is the code of this template file deliberately this legacy-ish?

[08:59] <discord-raku-bot> <Nemokosch> because I doubt the history api would work with browsers that demand this sort of code

[09:03] <timo> it hasn't been touched in a couple of years

[09:03] <timo> it's still the previous version of angular

[09:08] <discord-raku-bot> <Nemokosch> It doesn't help that I'm clueless about angular...

[09:08] <discord-raku-bot> <Nemokosch> or pretty much any JS frontend frameworks for that matter

[09:10] <timo> back and forth navigation would indeed be cool, yeah

[09:11] <timo> moarperf tries to do that, i don't remember how well i got it to work

[09:17] *** sena_kun left
[09:22] <timo> regarding sink calls, often times they can be almost completely optimized away, and in the profiling case, overhead from recording the call and return may balloon up the cost artificially, so that's a thing to keep in mind

[09:23] *** djerius left
[09:23] *** djerius_ joined
[09:28] <lizmat> yeah, that's the uncertainty principle at work there  :-)

[09:29] <SmokeMachine> maybe you could use component-like solution Raku-only like what I was playing with last weekend... https://github.com/FCO/Cro-WebSocket-WebComponents-test (I'm still trying to understand how useful it is...)

[09:30] <SmokeMachine> sorry... it seems there is no server on what you are talking... sorry...

[09:30] <timo> moarperf does have a server, the SPA for the default --profile does not

[09:32] <timo> the most reliable way to figure out if the sink calls are actually cheap is to read the spesh log, but that's a science unto itself

[09:32] <timo> lizmat: haven't looked if you added more to the spesh module, could this be something it could learn, how good sink calls are handled? %)

[09:33] <jaguart> JRasspass++ - thank you! I see that https://raku.land/github:jsimonet/Log::Any and friends have readme!

[09:33] <lizmat> I haven't touched the Spesh module for a long time

[09:34] <timo> that's fine

[09:39] <discord-raku-bot> <Nemokosch> I mean, the profiler wouldn't lie that they are costly, right? ...

[09:39] <timo> i think it does try to measure the overhead of measuring a call up front, so that it can subtract that

[09:40] *** amenonsen left
[09:40] *** amenonsen joined
[09:40] <lizmat> the profile inserts code that (sometime? always?) prevents inlining, so it *can* make a difference

[09:40] *** lichtkind joined
[09:40] <timo> it tries not to prevent inlining

[09:41] <timo> i'm not sure when it does prevent it?

[09:41] <lizmat> when it puts the size above the inlining limit ?

[09:42] <timo> i definitely wrote code to subtract profiling-added instruction sizes

[09:42] <timo> it may not be in master, but i sure hope it is :) :)

[09:43] <discord-raku-bot> <Nemokosch> I mean, really, if you have time, I'd be more than thankful if you took a look at it. I uploaded both the module and a little gist that I tried to analyze.

[09:47] <timo> installing zef as we speak

[10:01] *** sena_kun joined
[10:05] *** Kaiepi left
[10:05] <timo> i froze up my computer for a bit there :D

[10:05] <timo> are the tests supposed to be clean? because i do have some failures

[10:07] *** Kaiepi joined
[10:10] <discord-raku-bot> <Nemokosch> aaaah bruh

[10:10] <discord-raku-bot> <Nemokosch> one space is missing

[10:11] <timo> the benchmark only runs for one second, that's really not much for benchmarking

[10:12] <discord-raku-bot> <Nemokosch> ...

[10:12] <discord-raku-bot> <Nemokosch> Liz told me that the HTML gets out of hand if it runs for longer :heh:

[10:12] <discord-raku-bot> <Nemokosch> decide you guys

[10:14] <lizmat> depends on the browser you use, I guess...

[10:15] <lizmat> my experience is that if you profile something that runs longer than a few seconds, you get a HTML file of several MBs that at least Safari basically chokes on

[10:16] <timo> Seq.pm's sink spends a lot of time inclusive but barely an time exclusive, which looks to me like that just does the work of a loop, like a for loop or so

[10:16] <discord-raku-bot> <Nemokosch> I'm gonna upload the test-passing version, thank you for noticing the big dumb

[10:18] <discord-raku-bot> <Nemokosch> I'm not sure what you are looking at

[10:18] <discord-raku-bot> <Nemokosch> 7.01 ms just on sinks, exclusive time

[10:18] <discord-raku-bot> <Nemokosch> compared to 9.75ms on maps, exclusive time

[10:18] <discord-raku-bot> <Nemokosch> the percentages are quite surely wrong in the exclusive time column

[10:19] <discord-raku-bot> <Nemokosch> but they are wrong consistently, at least

[10:27] <timo> map itself shouldn't do much at all

[10:28] <timo> 2ms on List sink, 30ms on List's sink

[10:28] <timo> map 18.6ms exclusive time

[10:30] <timo> "The profiled code ran for 264.96ms. Of this, 56.37ms were spent on garbage collection (that's 21.27%)."

[10:39] <discord-raku-bot> <Nemokosch> Still, these are at the top

[10:39] <timo> could be from being called a whole lot, too :)

[10:40] <timo> i put a `for ^10 {` around the code including the "render to file" call

[10:41] <discord-raku-bot> <Nemokosch> okay

[10:42] <timo> sorting exclusive time now puts sink far to the bottom

[10:43] <discord-raku-bot> <Nemokosch> also, thank you for the help either way, I really spent hours pondering about it and got nowhere, partly because I don't comprehend the generated data itself

[10:43] <timo> yes it definitely is A Bit Much

[10:44] <timo> List.pm's sink is at 142130 calls total, 1% inclusive, 0.5% exclusive time

[10:44] <timo> so each individual call does barely anything apparently

[10:45] <discord-raku-bot> <Nemokosch> I don't know/think that it's the main reason for the module (and the render call in particular!) to be this slow

[10:46] <discord-raku-bot> <Nemokosch> But it got my attention why there is such a big number of sink calls in the first place

[10:47] <discord-raku-bot> <Nemokosch> I don't see how it would follow from the code

[10:47] <timo> right, sink calls are generated in the background and we rely on optimization to throw them out when they are not needed

[11:07] *** evalable6 left
[11:07] *** linkable6 left
[11:09] *** evalable6 joined
[11:10] *** linkable6 joined
[12:06] *** reportable6 left
[12:07] *** [Coke] left
[12:09] *** reportable6 joined
[12:11] *** Xliff left
[12:27] *** [Coke] joined
[13:27] *** evalable6 left
[13:27] *** linkable6 left
[13:30] *** linkable6 joined
[13:30] *** evalable6 joined
[13:46] *** morte_ joined
[13:54] *** Xliff joined
[13:54] <Xliff> \o

[13:55] <Xliff> Is it possible to adjust the timezone of an existing datetime instance?

[13:55] <Xliff> : my $dt = DateTime.new( year => 2021, month => 12, day => 1); $dt.gist.say; $dt.timezone = -14400; $dt.gist.say

[13:55] <Xliff> m: my $dt = DateTime.new( year => 2021, month => 12, day => 1); $dt.gist.say; $dt.timezone = -14400; $dt.gist.say

[13:55] <camelia> rakudo-moar aa5e68005: OUTPUT: «2021-12-01T00:00:00Z␤Cannot modify an immutable Int (0)␤  in block <unit> at <tmp> line 1␤␤»

[13:55] <Xliff> This seems oddly limiting to me.

[13:57] <discord-raku-bot> <Nemokosch> what? immutability?

[13:59] <Xliff>  Well, the fact that you can't adjust the timezone. Yes.

[13:59] <discord-raku-bot> <Nemokosch> look https://docs.raku.org/type/DateTime#method_in-timezone

[13:59] <Xliff> At least, not without creating a new DateTime object.

[14:00] <Xliff> Oh, LOL! My eyes skipped right over that. I thought that method meant "Is object 'in this timezone'"

[14:00] <Xliff> Nemokosch++

[14:01] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/07/25/2022-30-what/

[14:04] <discord-raku-bot> <Nemokosch> yeah, tbf the name is disturbing

[14:04] <discord-raku-bot> <Nemokosch> why not with-timezone or something

[14:07] *** DarthGandalf left
[14:07] *** Tirifto left
[14:08] <lizmat> I wonder if https://raku.land/zef:lizmat/Method::Also would work on core classes

[14:10] <lizmat> afk&

[14:13] *** Sgeo joined
[14:28] *** sena_kun left
[14:28] *** Altai-man joined
[14:28] <Xliff> lizmat++

[14:29] *** DarthGandalf joined
[14:29] <Xliff> What's the best way to pass a parameter to an grammar action class? Can you .new?

[14:37] <Voldenet> sure you can

[14:38] <Voldenet> m: grammar { rule TOP { .+ } }.parse("whatever", :actions(class :: { has $.x; method TOP ($/) { make ($.x ~~ ~$/) } }.new(:x("whatever")))).made.say

[14:38] <camelia> rakudo-moar aa5e68005: OUTPUT: «True␤»

[14:57] *** melezhik joined
[14:57] <melezhik> o/

[14:57] <melezhik> Hi lizmat - any thoughts on this App-Rak failure? - http://sparrowhub.io:2222/report/912

[15:03] *** wingfold joined
[15:09] <melezhik> I also create a positive/negative test for App-Rak search within dir - in "Sparrow" style - https://raw.githubusercontent.com/melezhik/images/master/BC9A1952-F523-47D7-AD79-4BFF9357CBF2.jpeg

[15:17] *** Tirifto joined
[15:20] *** melezhik left
[16:16] *** morte_ left
[16:22] *** alethkit left
[16:22] *** patrickb left
[16:27] *** alethkit joined
[16:27] *** patrickb joined
[16:34] *** alethkit left
[16:34] *** patrickb left
[16:36] *** patrickb joined
[16:37] *** alethkit joined
[16:42] *** dakkar left
[16:42] *** morte_ joined
[17:06] *** Altai-man left
[17:21] *** alethkit left
[17:21] *** patrickb left
[17:22] *** patrickb joined
[17:22] <discord-raku-bot> <Nemokosch> For the whatever anomaly I've shown...

[17:23] *** alethkit joined
[17:23] <discord-raku-bot> <Nemokosch> Either I'm very stupid some way or some serious issue is going on

[17:32] <discord-raku-bot> <Nemokosch> but I can't be _that_ stupid, after all, I just expect { .&function($second-argument) } and *.&function($second-argument) do exactly the same thing regardless of context...

[17:33] <discord-raku-bot> <Nemokosch> also this cannot be just a parsing error because the behavior changes if the argument I try to bind is a fully fledged local variable, not a function parameter itself

[17:33] <discord-raku-bot> <Nemokosch> it goes from Mu to Any

[17:33] <discord-raku-bot> <Nemokosch> so it does take something, after all

[17:42] *** sena_kun joined
[17:51] *** lizmat_ joined
[17:52] *** discord-raku-bot left
[17:53] *** gfldex left
[17:55] *** lizmat left
[17:55] *** Xliff left
[18:00] *** lizmat_ is now known as lizmat

[18:06] *** reportable6 left
[18:09] *** reportable6 joined
[18:15] *** mexen joined
[18:15] *** Nemokosch joined
[18:16] <Nemokosch> .

[18:16] <Nemokosch> For the weird parameter problem earlier

[18:17] <Nemokosch> I have a reasonably golf-ish way to do it, I still don't understand the behavior even if it is possibly correct

[18:18] <Nemokosch> what I need is a function with 2 arguments and another function with andthen .map andthen .map chaining in it

[18:19] <Nemokosch> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { (1 .. 100).roll(10) andthen .map(* + 2) andthen .map(*.&lin5($x)) }; say problems(10)

[18:19] <camelia> rakudo-moar aa5e68005: OUTPUT: «Type check failed in binding to parameter '$b'; expected Any but got Mu (Mu)␤  in sub lin5 at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:20] <Nemokosch> I don't see how I messed up the precedence if I did

[18:20] <Nemokosch> the WhateverCode bit sees $x but not its actual value

[18:21] <Nemokosch> if I define a variable inside the function and try to pass that, it will be (Any) instead of (Mu)

[18:21] <Nemokosch> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { my $y = 11; (1 .. 100).roll(10) andthen .map(* + 2) andthen .map(*.&lin5($y)) }; say problems(10)

[18:21] <camelia> rakudo-moar aa5e68005: OUTPUT: «Use of uninitialized value of type Any in numeric context␤(250 95 375 270 270 420 170 310 90 340)␤  in sub lin5 at <tmp> line 1␤Use of uninitialized value of type Any in numeric context␤  in sub lin5 at <tmp> line 1␤Use of uninitialized valu…»

[18:22] <Nemokosch> any idea ^^

[18:23] *** Nemokosch left
[18:43] <Voldenet> you _can't_ do .map(*.&lin5($y))

[18:43] <Voldenet> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { my $y = 11; (1 .. 100).roll(10) andthen .map(* + 2) andthen .map({.&lin5($y)}) }; say problems(10)

[18:43] <camelia> rakudo-moar aa5e68005: OUTPUT: «(166 211 156 436 146 361 396 486 146 276)␤»

[18:55] *** sena_kun left
[18:56] *** sena_kun joined
[18:58] <Voldenet> it is a bit weird to me that $y is Any in this context, but method calls with whatever-star always cause problems to me

[19:20] *** irc_user joined
[19:25] *** Nemokosch joined
[19:27] <Nemokosch> Actually, you _can_

[19:27] <Nemokosch>  m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { my $y = 11; (1 .. 100).roll(10).map(* + 2) andthen .map(*.&lin5($y)) }; say problems(10)

[19:27] <camelia> rakudo-moar aa5e68005: OUTPUT: «(131 426 391 311 206 46 141 421 156 511)␤»

[19:28] <Nemokosch> literally one andthen less and it works

[19:29] <Nemokosch> I can agree that WhateverCode usually gets one into trouble - but this very apparently can work so it sounds more like a personal opinion that one can't use it here :P

[19:31] <Nemokosch> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { (1 .. 100).roll(10).map(* + 2) andthen .map(*.&lin5($x)) }; say problems(10)

[19:31] <camelia> rakudo-moar aa5e68005: OUTPUT: «(165 225 205 120 50 340 330 295 450 220)␤»

[19:31] <Nemokosch> right, this works with the parameter as well

[19:36] <Voldenet> "can work" never beats "will always work" ;)

[19:38] <Nemokosch> it beats "can't work", however

[19:43] <Voldenet> true that :)

[19:49] *** sena_kun left
[19:50] *** sena_kun joined
[19:56] *** morte_ left
[19:59] *** Nemokosch left
[20:07] <Voldenet> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { my $y = 11; (1 .. 100).roll(10) andthen .map(* + 2) andthen { .map(*.&lin5($y)) } }; say problems(10)

[20:07] <camelia> rakudo-moar aa5e68005: OUTPUT: «(46 271 76 271 71 396 506 366 491 416)␤»

[20:07] <Voldenet> …uh oh

[20:12] *** Nemokosch joined
[20:12] <Nemokosch> what's up

[20:15] <Voldenet> that looks like a bug of some sort

[20:17] <Nemokosch> what is this, even, a code block out of the blue? because andthen is an operator, not a statement

[20:18] <Nemokosch> sometimes I can't decide if the problem is that something works or that it doesn't

[20:19] <Nemokosch> oh wait... andthen creates a block from the right side

[20:20] <Voldenet> I've been swimming a bit in –target=ast and apparently nothing gets bound to a declared variable

[20:25] *** vrurg left
[20:26] <Nemokosch> vrurg already fleeing

[20:34] <Voldenet> I'm unsure if I'm even right though, reading qast is difficult

[20:35] <jjatria> Is there a way to load a module at runtime while validating auth and version? I can do `require`, but that seems to ignore `:auth<>` and `:ver<>`

[20:44] <Voldenet> "validating"?

[20:44] <Voldenet> you use the module with version an auth

[20:44] <Voldenet> e.g. > use MIME::Base64:ver<1.2.3>:auth<zef:raku-community-modules>

[20:44] <jjatria> But that is at compile time

[20:45] <jjatria> "validating" = "making sure that the one I loaded is the one I think I loaded"

[21:13] <Voldenet> there's ^auth and ^api on ModuleHOW but I'm not sure whether it returns anything useful: `(require MIME::Base64).^auth.say` has usable result but `(require Libarchive).^auth.say` doesn't

[21:14] *** discord-raku-bot joined
[21:14] <Nemokosch> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { (1 .. 100).roll(10) andthen ( .map(* + 2) andthen  .map(*.&lin5($y)) ) }; say problems(10)

[21:14] <camelia> rakudo-moar aa5e68005: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '$y' is not declared.  Perhaps you forgot a 'sub' if this was␤intended to be part of a signature?␤at <tmp>:1␤------> hen ( .map(* + 2) andthen  .map(*.&lin5(⏏$y)) ) }; say proble…»

[21:15] <Nemokosch> oh right

[21:15] <Nemokosch> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { (1 .. 100).roll(10) andthen ( .map(* + 2) andthen  .map(*.&lin5($x)) ) }; say problems(10)

[21:15] <camelia> rakudo-moar aa5e68005: OUTPUT: «(80 155 200 405 195 150 500 295 480 55)␤»

[21:15] <Nemokosch> see? with this precedence, it would work

[21:15] <Nemokosch> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { (1 .. 100).roll(10) andthen .map(* + 2) andthen ( .map(*.&lin5($x)) ) }; say problems(10)

[21:15] <camelia> rakudo-moar aa5e68005: OUTPUT: «Type check failed in binding to parameter '$b'; expected Any but got Mu (Mu)␤  in sub lin5 at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:15] <Nemokosch> with this, however

[21:17] <discord-raku-bot> <Nemokosch> oh cool, we're back again

[21:19] <Nemokosch> anyway, I'm gonna open an issue for this, as usual :D

[21:20] *** discord-raku-bot left
[21:20] *** discord-raku-bot joined
[21:26] <Nemokosch> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { (1 .. 100).roll(10) andthen .map(*.&lin5($x)) andthen .map(* + 2) }; say problems(10)

[21:26] <camelia> rakudo-moar aa5e68005: OUTPUT: «(297 182 247 272 392 42 402 62 342 262)␤»

[21:27] <Nemokosch> the order is also important

[21:27] *** gfldex joined
[21:27] <Voldenet> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { (1 .. 100).roll(10) andthen .map(*.&lin5($x)) andthen .map(* + $x) }; say problems(10)

[21:27] <camelia> rakudo-moar aa5e68005: OUTPUT: «Cannot resolve caller infix:<+>(Int:D, VMNull); none of these signatures matches:␤    ($x = 0)␤    (\a, \b)␤    (Real $a, Real $b)␤    (Int:D $a, Int:D $b --> Int:D)␤    (int $a, int $b --> int)␤    (uint $a, uint $b --> uint)␤    (Num:D…»

[21:28] <Nemokosch> yes yes, that would have been the next remark

[21:28] <Nemokosch> it doesn't even have to be a function call

[21:28] <Nemokosch> it can be anything whatevercurried and it has to be on the right

[21:28] *** discord-raku-bot left
[21:29] *** discord-raku-bot joined
[21:29] *** irc_user left
[21:32] <Nemokosch> m: sub lin5($a, $b) { 5*$a + $b }; sub problems($x) { (1 .. 100).roll(10) andthen .map(* + 2) andthen ( .&(* + $x) ) }; say problems(16)

[21:32] <camelia> rakudo-moar aa5e68005: OUTPUT: «26␤»

[21:32] <Nemokosch> This, however, works

[21:32] <Nemokosch> this is really annoyingly complicated to reproduce

[21:33] <Nemokosch> or describe, for that matter...

[21:38] *** kjp joined
[21:39] <Nemokosch> it's not even that WhateverCode's can't form closures because sometimes it looks like they can, or it's optimized away at least

[21:41] *** sena_kun left
[21:43] <jjatria> Voldenet: yeah, I tried those and they didn't seem to work for me. But knowing after loading that the one I loaded was not the right one doesn't really help if I cannot then somehow load the right one

[21:45] <Nemokosch> https://github.com/rakudo/rakudo/issues/5004 today's piece of art, lol

[21:48] <Voldenet> "art" :)

[21:49] <Nemokosch> I'd like to think this is art, since it was a huge effort to get to this point with the analysis even

[21:49] <Voldenet> true

[21:50] <Voldenet> jjatria: https://github.com/rakudo/rakudo/blob/aa5e68/src/Perl6/Actions.nqp#L2354 – I'm looking for hints and it might just be that auth is never being attached when doing `require`

[21:53] <jjatria> Oh, interesting. I wonder if this was intentional

[21:54] <lizmat> I would find that strange, really

[21:54] <jjatria> It does seem like a strange limitation, because both `use` and `need` honour it

[21:54] <Nemokosch> I only made one issue today, let's go for it!

[21:55] <lizmat> Nemokosch++

[21:57] <Nemokosch> I would write an issue for that as well, seriously, but for that, first I would need to know the context and so on... also, it would be nice to go to sleep :D

[21:57] <lizmat> yeah, /me is hitting the straw now

[21:58] <Voldenet> I could be also reading the code for require wrong, it's sufficiently complex for me

[21:59] *** Nemokosch left
[22:12] *** vrurg joined
[22:33] *** discord-raku-bot left
[22:33] *** discord-raku-bot joined
[22:39] *** melezhik joined
[22:39] <melezhik> o/

[22:51] <melezhik> .tell jjatria I bumped on Lorea tool and think that Tomtit could be good combination with it - https://gitlab.com/jjatria/lorea/-/tree/master/#configuration , what if distribute standard Lorea configurations suitable for different environments (like ruby/Raku/go) as Tomtit profiles ? - https://github.com/melezhik/Tomtit#profiles , so user can just

[22:51] <melezhik> say "tom --profile lorea && tom lorea-ruby-conf" and voila, loira for Ruby configuration file is populated ?

[22:51] <tellable6> melezhik, I'll pass your message to jjatria

[22:52] <melezhik> I can drop a simple Tomtit::Profile::Loira module for that or even you can try this ...it's simple coding required ...

[22:54] <melezhik> we could even ship Tomtit::Profile::Loira as a dependency of App::Loira , so a user always have uptodate version of Loira config bootstrapers ...

[22:54] <melezhik> of App::Loira  -> for of App::Loira

[22:56] *** melezhik left
[23:12] *** maettu left
[23:25] *** wingfold left
[23:29] *** Woodi left
[23:38] *** maettu joined
