[00:00] <Xliff> I don't think zef buffers or is compatible with programs like less
[00:00] <Xliff> Why are you trying to page --help?
[00:01] <Xliff> coleman: Yeah, --help outputs to STDERR, which isn't what less uses to pagte.
[00:01] <Xliff> s/pagte/page/
[00:02] <Xliff> Try doing this: "zef --help 2>&1 | less"
[00:02] <coleman> stderr, gotcha
[00:04] <coleman> is that a perlism? most programs print help to stdout
[00:04] <coleman> i needed a pager becuase i was in a wee terminal window :)
[00:07] *** reportable6 left
[00:10] *** reportable6 joined
[00:12] <moon-child> I think it's fairly common to output help to stderr
[01:10] *** evalable6 left
[01:10] *** linkable6 left
[01:11] *** evalable6 joined
[01:11] *** linkable6 joined
[02:06] *** frost joined
[03:06] *** reportable6 left
[03:06] *** sourceable6 left
[03:06] *** greppable6 left
[03:06] *** benchable6 left
[03:06] *** notable6 left
[03:06] *** linkable6 left
[03:06] *** statisfiable6 left
[03:06] *** coverable6 left
[03:06] *** unicodable6 left
[03:06] *** tellable6 left
[03:06] *** evalable6 left
[03:06] *** shareable6 left
[03:06] *** nativecallable6 left
[03:06] *** bloatable6 left
[03:06] *** committable6 left
[03:06] *** quotable6 left
[03:06] *** bisectable6 left
[03:06] *** releasable6 left
[03:06] *** benchable6 joined
[03:06] *** nativecallable6 joined
[03:06] *** bloatable6 joined
[03:07] *** sourceable6 joined
[03:07] *** reportable6 joined
[03:07] *** notable6 joined
[03:07] *** tellable6 joined
[03:07] *** releasable6 joined
[03:07] *** committable6 joined
[03:08] *** greppable6 joined
[03:08] *** statisfiable6 joined
[03:08] *** bisectable6 joined
[03:08] *** quotable6 joined
[03:08] *** shareable6 joined
[03:09] *** coverable6 joined
[03:09] *** evalable6 joined
[03:09] *** linkable6 joined
[03:09] *** unicodable6 joined
[04:01] *** whaaat joined
[04:09] <whaaat> hello
[04:14] *** whaaat left
[05:05] *** dwarring left
[05:55] *** Oshawott joined
[06:06] *** reportable6 left
[06:08] *** reportable6 joined
[06:33] <moritz> btw since bash 4 you can write "zef --help |& less"
[06:39] *** abraxxa joined
[06:43] *** abraxxa left
[06:44] *** abraxxa joined
[07:09] *** japhb joined
[07:22] *** Sgeo left
[08:01] *** holyghost joined
[08:08] *** eseyman left
[08:09] *** eseyman joined
[08:26] *** mexen joined
[08:33] <nine> moritz: nice!
[08:34] <discord-raku-bot> <Nemokosch#9980> what does it do exactly?
[08:34] *** Nemokosch joined
[08:35] <nine> From bash(1): "If |& is used, command's standard error, in addition  to  its standard output, is connected to command2's standard input through the pipe; it is shorthand for 2>&1 |."
[08:37] <discord-raku-bot> <Nemokosch#9980> quite peculiar syntax ngl
[09:13] *** abraxxa left
[09:40] *** abraxxa joined
[09:41] *** jjido joined
[09:53] *** abraxxa left
[09:54] *** abraxxa joined
[10:03] *** abraxxa left
[10:04] *** jjido left
[10:24] *** abraxxa joined
[11:15] *** abraxxa left
[11:15] *** abraxxa joined
[11:27] *** vrurg joined
[11:28] *** vrurg_ left
[11:32] *** Nemokosch left
[11:58] *** discord-raku-bot left
[11:59] *** discord-raku-bot joined
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[12:10] *** gcd joined
[12:20] *** perlbot left
[12:21] *** simcop2387 left
[12:21] *** simcop2387 joined
[12:22] *** perlbot joined
[12:31] *** jjido joined
[12:36] *** perlbot left
[12:38] *** perlbot joined
[12:39] *** Sankalp- joined
[12:40] *** Sankalp left
[12:40] *** Sankalp- is now known as Sankalp
[12:49] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/05/30/2022-22-complete-timeline/
[12:51] <synthmeat> lizmat: i don't care much about this but just a bit of unsolicited feedback - i liked previous (newsletter) styling better! it was a beaut.
[12:52] <lizmat> hmmm... previous week?  I don't think I change the styling?
[13:09] *** ocomporto left
[13:10] *** jjido left
[13:17] <synthmeat> lizmat: [2022.16/7, *>
[13:19] *** morte_ joined
[13:19] <lizmat> I don't see a difference in styling?
[13:24] <lizmat> synthmeat: what are you reading it on?
[13:30] <discord-raku-bot> <Anton Antonov#7232> @lizmat Thanks for the "Complete Timeline" !
[13:31] *** dextercd joined
[13:51] *** guifa joined
[13:51] <guifa> o/
[14:00] *** Guest35 joined
[14:04] *** frost left
[14:11] <synthmeat> lizmat: gmail app on ios, and mail app on macos. both the same. i'll query you two dropbox links before and after screenshots
[14:12] <lizmat> aahh... so it's in the mail version of the weekly...
[14:13] <lizmat> weird... I see what you mean now
[14:14] <lizmat> I guess I will need to take a subscription to my own blog to monitor that
[14:15] <synthmeat> yay, communication successful!
[14:15] * synthmeat goes back to handling a ddos
[14:17] <lizmat> good luck!
[14:19] <synthmeat> no luck needed! https://www.youtube.com/watch?v=qLo-NZBLkr8
[14:27] <tbrowder> El_Che: hi, just installed rakudo_pkg on a new debian host and got a /etc/profile.d/rakudo-pkg.sh with a different path to zef than was actually installed
[14:31] <tbrowder> actual zef location: /opt/rakudo-pkg/share/perl6/site/bin/zef
[14:36] <tbrowder> rakudo-pkg.sh path: /opt/rakudo-pkg/share/perl6/bin
[14:38] <tbrowder> i just looked at another, older host and same thing
[14:39] <tbrowder> maybe i messed up the curl incantation...
[14:44] *** kaskal- is now known as kaskal
[14:59] <kiti_nomad[m]> what is zef called in ubuntu?
[15:03] *** razetime joined
[15:04] * kiti_nomad[m] uploaded an image: (188KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/YQBsbAloxyjWRqBzrggCijlH/image.png >
[15:08] *** Sgeo joined
[15:08] <ugexe> maybe its raku-zef
[15:09] <ugexe> https://packages.ubuntu.com/kinetic/raku-zef
[15:10] <ugexe> i think https://github.com/nxadm/rakudo-pkg provides more update to date raku ubuntu packages as well 
[15:11] <ugexe> https://cloudsmith.io/~nxadm-pkgs/repos/rakudo-pkg/setup/#formats-deb
[15:19] <kiti_nomad[m]> sudo raku -I. bin/zef install .
[15:31] *** vrurg left
[15:31] *** vrurg joined
[16:04] *** japhb left
[17:04] *** shareable6 left
[17:04] *** nativecallable6 left
[17:04] *** greppable6 left
[17:04] *** sourceable6 left
[17:04] *** reportable6 left
[17:04] *** unicodable6 left
[17:04] *** statisfiable6 left
[17:04] *** benchable6 left
[17:04] *** tellable6 left
[17:04] *** quotable6 left
[17:04] *** releasable6 left
[17:04] *** coverable6 left
[17:04] *** evalable6 left
[17:04] *** committable6 left
[17:04] *** bloatable6 left
[17:04] *** bisectable6 left
[17:04] *** linkable6 left
[17:04] *** notable6 left
[17:04] *** bisectable6 joined
[17:05] *** shareable6 joined
[17:05] *** bloatable6 joined
[17:05] *** committable6 joined
[17:05] *** releasable6 joined
[17:05] *** notable6 joined
[17:06] *** coverable6 joined
[17:06] *** evalable6 joined
[17:06] *** quotable6 joined
[17:06] *** sourceable6 joined
[17:06] *** greppable6 joined
[17:06] *** statisfiable6 joined
[17:06] *** benchable6 joined
[17:06] *** nativecallable6 joined
[17:06] *** reportable6 joined
[17:06] *** linkable6 joined
[17:07] *** unicodable6 joined
[17:07] *** tellable6 joined
[17:09] *** p6steve joined
[17:17] *** avuserow joined
[17:18] *** razetime left
[17:28] <p6steve> Coke: routine splice is provided by class Array
[17:29] <p6steve> I would voat for an immutable(functional) splice like this https://www.npmjs.com/package/immutable-splice
[17:30] <p6steve> so instead of returning the removed items, it returns the new result
[17:34] <p6steve> I guess the limitation today is that splice needs to change the length of the Array and Lists have fixed length
[17:34] <p6steve> so the new isplice could be a List routine
[17:43] *** mexen left
[17:46] *** Kaiepi left
[17:46] *** Kaiepi joined
[17:53] *** abraxxa left
[17:58] *** jjido joined
[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[18:15] <discord-raku-bot> <Anton Antonov#7232> <@928301352029937715> Hi Steve! I think you are "doing it wrong" in raku::Dan. (Because you say it is Python pandas inspired.) I will try to convince you by making a natural language interface to that package. Do you have a more detailed usage guide for raku::Dan than the GitHub README?
[18:17] *** morte_ left
[18:22] *** morte_ joined
[18:24] <drakonis> p6steve: i'd suggest not copying pandas' api, it is quite poorly designed, R's packages have a much cleaner approach
[18:27] <discord-raku-bot> <Anton Antonov#7232> <@135870802489901056> Agreed -- I used R-tidyverse and R-dplyr as starting points. Nevertheless, Python-pandas is so popular that I had to include as target.
[18:30] <drakonis> tidyverse is eons ahead of pandas
[18:32] *** Kaiepi left
[18:34] <coleman> I'm working on a personal CI environment, and I've typed up some questions in a gist. https://gist.github.com/dontlaugh/1d73c8745b5f4a8dfb3e7b02457ab029
[18:34] <drakonis> pandas has a fairly confusing API yet it succeeded because there was nothing else at the time
[18:34] <coleman> I'd like to create a deployment environment next. But I'm unsure what to ship over from CI
[18:35] <coleman> Please leave comments on the gist if you have recommendations.
[18:38] *** Kaiepi joined
[18:44] <discord-raku-bot> <Anton Antonov#7232> <@135870802489901056> Please, see this comparison interface: https://antononcube.shinyapps.io/DSL-evaluations/ . I want to include the raku-dan package in those comparisons.
[18:45] <drakonis> ah shiny.
[18:45] <drakonis> does R have anything besides shiny?
[18:48] <discord-raku-bot> <Anton Antonov#7232> <@135870802489901056> In general, or dynamic-interface-wise?
[18:50] <drakonis> either of them
[18:50] <drakonis> if there's anything else, shiny is still the most mature option
[18:51] <discord-raku-bot> <Anton Antonov#7232> The only R alternatives of R/Shiny is R/flexdashboard. (Which is based on shiny.)
[18:52] <discord-raku-bot> <Anton Antonov#7232> And, yeah, RStudio as company makes money from web services. (Like shinyapps.io and RStudio Connect.)
[18:52] <discord-raku-bot> <Anton Antonov#7232> And, yeah, RStudio as a company makes money from web services. (Like shinyapps.io and RStudio Connect.)
[18:54] <discord-raku-bot> <Anton Antonov#7232> R/Shiny replicates the dynamic interfaces in Mathematica. In general RStudio is replicating many of business solutions of Wolfram Research.
[19:03] *** n1to joined
[19:36] <drakonis> i see
[19:36] <drakonis> by the way, arent meta operators basically macros?
[19:36] <lizmat> eventually, maybe, but that's not how they're implemented atm
[19:40] <drakonis> hyperoperators, that is
[19:41] <drakonis> eh, conflated both names but i asked about metaoperators
[19:42] <lizmat> also currently not implemented as macro's, but there is some grammar wizardry going to make it happen
[19:44] <tbrowder> .tell El_Che see my remarks about rakudo-pkg at 09:27 above
[19:44] <tellable6> tbrowder, I'll pass your message to El_Che
[19:49] <drakonis> ah grammar wizardry...
[19:51] <drakonis> the introduction of macros will surely make it significantly easier to maintain raku in the future
[19:53] <guifa> basically they're hardcoded in the Rakudo grammar.  In theory, someone could create a `multi meta_circumfix:<[ ]> (&infix)`, but I could see it getting complicated fast, and given how I can't think of any metaops that we'd need to add off the top of my head, it might be easier to do it in slang/macro
[19:55] *** morte_ left
[19:55] <drakonis> it likely would
[19:57] *** TempIRCLogger left
[19:57] <drakonis> i checked out serapeum, a common lisp utility library and it featured a macro for generating higher order functions
[19:58] <drakonis> which is then used to implement various bits of code that are functionally meta operators
[19:58] <guifa> you mean like o ?
[19:59] <drakonis> https://github.com/ruricolist/serapeum/blob/master/functions.lisp#L86
[19:59] <drakonis> no
[20:00] <drakonis> neat, J has a thing called monadic hooks
[20:01] <drakonis> which is like the signature constraints
[20:05] *** Geth left
[20:06] *** Geth joined
[20:06] *** RakuIRCLogger left
[20:07] *** lizmat_ is now known as lizmat
[20:09] *** jjido left
[20:12] *** morte_ joined
[20:16] <lizmat> going afk for at least the night...
[20:16] <lizmat> my MBP is starting to swell... so I'm fearing battery issues...
[20:16] *** lizmat left
[20:17] <guifa> yikes
[20:25] *** jjido joined
[20:26] *** Kaiepi left
[20:26] *** Kaiepi joined
[20:27] <discord-raku-bot> <Anton Antonov#7232> <@135870802489901056> Afro me the forward feed operator (==>) and  OOP method invocation dot (.) are monadic enough.
[20:36] <discord-raku-bot> <Anton Antonov#7232> <@135870802489901056> For me the forward feed operator (==>) and  OOP method invocation dot (.) are monadic enough.
[20:57] *** n1to left
[20:57] <drakonis> it is certainly something
[21:07] *** perlbot left
[21:07] *** perlbot joined
[21:09] *** melezhik joined
[21:10] <melezhik> SmokeMachine you can use `verbose : true` to get more details from prove6/TAP report - http://sparrowhub.io:2222/report/505
[21:10] <melezhik> like this - https://github.com/melezhik/rakudist-teddy-bear/blob/master/.sparkyci.yaml#L16
[21:13] <discord-raku-bot> <Anton Antonov#7232> <@135870802489901056> Python allows for fairly nice display of monadic pipelines through OOP -- one just have surround the pipeline with parentheses.  I.e.  `( <pipeline> )` .
[21:44] *** ecocode[m] joined
[21:47] *** [Coke] left
[21:48] *** melezhik left
[21:49] *** morayj joined
[22:02] *** [Coke] joined
[22:18] *** morte_ left
[22:26] *** dextercd left
[22:38] *** jjido left
[23:24] *** morayj left
[23:24] *** morayj joined
[23:40] *** morayj left
