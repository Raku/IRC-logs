[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[00:20] *** jrjsmrtn_ joined
[00:21] *** jrjsmrtn left
[00:39] *** bigdata left
[01:05] *** londoed_ left
[01:05] *** londoed_ joined
[01:13] *** Darkcoal left
[01:38] *** japhb left
[01:49] *** japhb joined
[02:49] *** nativecallable6 left
[02:49] *** bisectable6 left
[02:49] *** evalable6 left
[02:49] *** releasable6 left
[02:49] *** coverable6 left
[02:49] *** sourceable6 left
[02:49] *** bloatable6 left
[02:49] *** benchable6 left
[02:49] *** linkable6 left
[02:49] *** shareable6 left
[02:49] *** greppable6 left
[02:49] *** unicodable6 left
[02:49] *** statisfiable6 left
[02:49] *** notable6 left
[02:49] *** committable6 left
[02:49] *** tellable6 left
[02:49] *** reportable6 left
[02:49] *** quotable6 left
[02:49] *** greppable6 joined
[02:49] *** reportable6 joined
[02:49] *** unicodable6 joined
[02:49] *** releasable6 joined
[02:50] *** committable6 joined
[02:50] *** evalable6 joined
[02:50] *** sourceable6 joined
[02:50] *** nativecallable6 joined
[02:51] *** coverable6 joined
[02:51] *** statisfiable6 joined
[02:51] *** notable6 joined
[02:51] *** quotable6 joined
[02:51] *** linkable6 joined
[02:51] *** benchable6 joined
[02:51] *** bisectable6 joined
[02:52] *** shareable6 joined
[02:52] *** tellable6 joined
[02:52] *** bloatable6 joined
[03:12] *** Guest35 left
[04:12] *** reportable6 left
[04:12] *** coverable6 left
[04:12] *** committable6 left
[04:12] *** sourceable6 left
[04:12] *** nativecallable6 left
[04:12] *** tellable6 left
[04:12] *** linkable6 left
[04:12] *** evalable6 left
[04:12] *** bisectable6 left
[04:12] *** shareable6 left
[04:12] *** unicodable6 left
[04:12] *** statisfiable6 left
[04:12] *** greppable6 left
[04:12] *** bloatable6 left
[04:12] *** benchable6 left
[04:12] *** releasable6 left
[04:12] *** quotable6 left
[04:12] *** notable6 left
[04:13] *** tellable6 joined
[04:13] *** nativecallable6 joined
[04:13] *** coverable6 joined
[04:13] *** committable6 joined
[04:14] *** reportable6 joined
[04:14] *** bisectable6 joined
[04:14] *** notable6 joined
[04:14] *** evalable6 joined
[04:14] *** bloatable6 joined
[04:14] *** greppable6 joined
[04:14] *** statisfiable6 joined
[04:14] *** unicodable6 joined
[04:15] *** benchable6 joined
[04:15] *** linkable6 joined
[04:15] *** quotable6 joined
[04:15] *** sourceable6 joined
[04:15] *** releasable6 joined
[04:15] *** shareable6 joined
[04:21] *** Tirifto left
[04:47] *** Sgeo left
[05:07] *** ocomport joined
[05:16] *** Tirifto joined
[06:04] *** jjido joined
[06:07] *** reportable6 left
[06:10] *** reportable6 joined
[06:33] *** abraxxa joined
[06:39] *** abraxxa left
[06:40] *** abraxxa joined
[07:40] *** statisfiable6 left
[07:40] *** tellable6 left
[07:40] *** releasable6 left
[07:40] *** linkable6 left
[07:40] *** reportable6 left
[07:40] *** quotable6 left
[07:40] *** benchable6 left
[07:40] *** evalable6 left
[07:40] *** committable6 left
[07:40] *** coverable6 left
[07:40] *** unicodable6 left
[07:40] *** shareable6 left
[07:40] *** nativecallable6 left
[07:40] *** notable6 left
[07:40] *** bloatable6 left
[07:40] *** greppable6 left
[07:40] *** bisectable6 left
[07:40] *** sourceable6 left
[07:41] *** quotable6 joined
[07:41] *** committable6 joined
[07:41] *** evalable6 joined
[07:41] *** statisfiable6 joined
[07:41] *** bisectable6 joined
[07:41] *** coverable6 joined
[07:41] *** notable6 joined
[07:41] *** unicodable6 joined
[07:41] *** sourceable6 joined
[07:42] *** reportable6 joined
[07:42] *** nativecallable6 joined
[07:42] *** benchable6 joined
[07:42] *** bloatable6 joined
[07:42] *** shareable6 joined
[07:42] *** releasable6 joined
[07:43] *** linkable6 joined
[07:43] *** greppable6 joined
[07:43] *** tellable6 joined
[08:10] *** dakkar joined
[08:14] *** jjido left
[08:15] *** jmcgnh left
[08:27] *** jmcgnh joined
[08:44] *** grondilu joined
[08:44] *** frost joined
[08:45] <grondilu> how do I remove C-style comments from a string?  I thought .subst(/'//' .* $$/, '') would work at least for the // comments

[08:46] <grondilu> m: say "foo //bar\nthat line should remain".subst(/'//' .* $$/, '')

[08:46] <camelia> rakudo-moar 530e17848: OUTPUT: «foo ␤»

[08:47] <grondilu> m: say "foo //bar\nthat line should remain".subst(/'//' <-[\n]>* $$/, '')

[08:47] <camelia> rakudo-moar 530e17848: OUTPUT: «foo ␤that line should remain␤»

[08:48] *** linkable6 left
[08:49] *** linkable6 joined
[08:49] <Voldenet> m: say "foo //bar\nthat line should remain".subst(/'//' \N* $$/, '')

[08:49] <camelia> rakudo-moar 530e17848: OUTPUT: «foo ␤that line should remain␤»

[08:49] <Voldenet> grondilu: ^ consider this

[08:51] <Voldenet> there's gotchas in it, because C doesn't support unicode

[08:51] <Voldenet> (I'm not sure how VT/FF are supported)

[09:00] *** fatrix[m] left
[09:06] *** linkable6 left
[09:07] <grondilu> \N is a useful shortcut indeed

[09:08] *** linkable6 joined
[09:49] *** jaguart joined
[10:08] *** ocomport left
[11:08] *** linkable6 left
[11:08] *** coverable6 left
[11:08] *** releasable6 left
[11:08] *** nativecallable6 left
[11:08] *** evalable6 left
[11:08] *** quotable6 left
[11:08] *** notable6 left
[11:08] *** reportable6 left
[11:08] *** greppable6 left
[11:08] *** tellable6 left
[11:08] *** committable6 left
[11:08] *** bisectable6 left
[11:08] *** benchable6 left
[11:08] *** bloatable6 left
[11:08] *** sourceable6 left
[11:08] *** unicodable6 left
[11:08] *** statisfiable6 left
[11:08] *** shareable6 left
[11:08] *** linkable6 joined
[11:08] *** notable6 joined
[11:09] *** evalable6 joined
[11:09] *** releasable6 joined
[11:09] *** sourceable6 joined
[11:09] *** coverable6 joined
[11:09] *** benchable6 joined
[11:09] *** nativecallable6 joined
[11:09] *** quotable6 joined
[11:10] *** shareable6 joined
[11:10] *** committable6 joined
[11:10] *** bloatable6 joined
[11:10] *** unicodable6 joined
[11:10] *** bisectable6 joined
[11:11] *** reportable6 joined
[11:11] *** statisfiable6 joined
[11:11] *** greppable6 joined
[11:11] *** tellable6 joined
[11:30] *** [Coke] left
[11:48] *** [Coke] joined
[12:06] *** [Coke]_ joined
[12:07] *** reportable6 left
[12:08] *** [Coke] left
[12:09] *** [Coke]_ is now known as [Coke]

[12:10] *** reportable6 joined
[12:35] *** jaguart left
[12:40] *** Chaul-Jhin-Kim joined
[12:41] <Chaul-Jhin-Kim> Dear GOD/GODS and/or anyone else who can HELP ME (e.g. TIME TRAVELERS or MEMBERS OF SUPER-INTELLIGENT ALIEN CIVILIZATIONS): The next time I wake up, please change my physical form to that of FINN MCMILLAN formerly of SOUTH NEW BRIGHTON at 8 YEARS OLD and keep it that way FOREVER. I am so sick of this chubby Asian man body! Thank you! - CHAUL JHIN

[12:41] <Chaul-Jhin-Kim> KIM (a.k.a. A DESPERATE SOUL)

[12:41] *** Chaul-Jhin-Kim left
[13:03] *** aqua joined
[13:06] <Voldenet> what

[13:29] <nine> I guess that just had to get out

[13:32] *** morte_ joined
[13:35] *** Sgeo joined
[13:38] *** discord-raku-bot left
[13:39] *** discord-raku-bot joined
[13:48] *** discord-raku-bot left
[13:48] *** discord-raku-bot joined
[13:49] <[Coke]> let's build a MOO on top of Raku and ditch irc. :)

[14:08] *** discord-raku-bot left
[14:08] *** discord-raku-bot joined
[14:17] <grondilu> "MOO"?

[14:17] *** frost left
[14:24] <japhb> grondilu: One of several variants on MUD (Multi-User Dungeon).  Text-based MMORPG, essentially.

[14:31] <[Coke]> my college had a bunch of people in the late 80s/early 90s who built a chat system and I think it's still in use today. Always prefered it to irc, but we had the luxury of being able to provision users so random spam like that was not present. (Entirely different kind of spam, but at least you knew the person spewing it)

[14:45] *** Guest35 joined
[14:48] <tonyo> irc used to have MUD type games in it too, or blackjack bots, it probably still does somewhere

[14:49] <tonyo> though stuff like napster and limewire and whatever people use today probably killed the file dump side 

[14:54] *** Guest35 left
[14:58] *** RaycatWhoDat joined
[14:58] <RaycatWhoDat> Morning.

[14:59] <RaycatWhoDat> I recall hearing whispers on the wind about macros coming to Raku. Did anything come of that?

[15:07] <[Coke]> work in progress on adding RakuAST which will be the basis of any macro rewrite.

[15:12] <RaycatWhoDat> Oh, neat. 

[15:12] <RaycatWhoDat> Thanks for that

[15:15] *** [Coke] left
[15:16] *** [Coke] joined
[15:16] *** morte_ left
[15:21] *** morte_ joined
[15:57] *** bigdata joined
[15:59] *** TheAthlete joined
[15:59] *** Sankalp- joined
[16:00] *** Sankalp left
[16:00] *** Sankalp- is now known as Sankalp

[16:06] *** dakkar left
[16:07] *** bigdata left
[16:08] <TheAthlete> Uploaded file: https://uploads.kiwiirc.com/files/d42d603a8fdac2e734bd96d1e2ce8abc/pasted.txt

[16:09] <TheAthlete> Hello! How to implement an object pool for Promises. This implementation is not quite correct - only 3 URLs are downloaded and stopped.

[16:09] <TheAthlete> my $*SCHEDULER = ThreadPoolScheduler.new(max_threads => 3);

[16:09] <TheAthlete> sub MAIN($urls = 'urls.txt') {

[16:09] <TheAthlete>   my @promises;

[16:09] <TheAthlete>   for $urls.IO.lines -> $url {

[16:09] <TheAthlete>     push @promises, start {

[16:09] <TheAthlete>       run 'youtube-dl', '--no-progress', $url;

[16:09] <TheAthlete>     }

[16:09] <TheAthlete>   }

[16:09] <TheAthlete>   say await Promise.allof(@promises).then({ so all(@promises>>.result) });

[16:09] <TheAthlete> }

[16:09] <TheAthlete> Hello! How to implement an object pool for Promises? This implementation is not quite correct - only 3 URLs are downloaded and stopped.

[16:09] <TheAthlete> my $*SCHEDULER = ThreadPoolScheduler.new(max_threads => 3);

[16:09] <TheAthlete> sub MAIN($urls = 'urls.txt') {

[16:09] <TheAthlete>   my @promises;

[16:09] <TheAthlete>   for $urls.IO.lines -> $url {

[16:09] <TheAthlete>     push @promises, start {

[16:09] <TheAthlete>       run 'youtube-dl', '--no-progress', $url;

[16:09] <TheAthlete>     }

[16:09] <TheAthlete>   }

[16:09] <TheAthlete>   say await Promise.allof(@promises).then({ so all(@promises>>.result) });

[16:09] <TheAthlete> }

[16:38] *** sena_kun left
[16:38] *** sena_kun joined
[16:48] *** bigdata joined
[16:58] *** TheAthlete left
[17:01] *** Sankalp left
[17:05] *** TheAthlete joined
[17:07] *** Sankalp joined
[17:09] *** abraxxa left
[18:06] *** reportable6 left
[18:09] *** reportable6 joined
[18:12] <moritz> TheAthlete: I'd solve it without promises: my @result = $urls.IO.lines.race.map(-> $url { run 'youtube-dl', '--no-progress', $url })

[18:14] <moritz> https://docs.raku.org/routine/race you can control parallelism there as well. Use hyper() instead of race() if the order of the result matters

[18:28] *** melezhik joined
[18:32] <melezhik> I am trying to build https://github.com/Raku/doc on Alpine linux using SparkyCI and get this error - http://sparrowhub.io:2222/report/290 , not sure why, Nodejs, npm, perl and grafitz are installed , maybe something Raku/doc maintainers might be interested

[18:33] *** melezhik left
[18:33] *** melezhik joined
[18:35] <melezhik> doc say "cpanm --installdeps ." , maybe this is the reason? I miss this step

[18:37] *** sena_kun left
[18:39] *** sena_kun joined
[18:39] *** melezhik left
[18:43] <grondilu> hey guys, I'm working on a module about Google's protobuffer.

[18:43] <grondilu> I'm reading this : https://developers.google.com/protocol-buffers/docs/encoding#varints

[18:44] <grondilu> and there is something I don't understand : why the hell do they say they use the two's complement?  From the example they give, I don't see them using any complement.

[18:44] *** n1to joined
[18:44] <grondilu> Anyone would like to look at it and tell me what I'm missing?

[18:46] <grondilu> btw I know there is a raku module about protobuffers already, but from what I can tell, it only parses proto files, it doesn't generate code for actual serialization.

[18:48] *** RaycatWhoDat left
[19:06] *** sena_kun left
[19:07] *** sena_kun joined
[19:40] <[Coke]> that failure is on Raku::Pod::Render, which is maintained by finanalyst

[19:40] <[Coke]> I'd open an issue at https://github.com/finanalyst/raku-pod-render

[19:48] *** TheAthlete left
[19:54] *** timo left
[19:57] *** morte_ left
[20:06] *** melezhik joined
[20:06] <melezhik> .

[20:07] *** morte_ joined
[20:08] <Voldenet> TheAthlete: The problem is caused by `run`, not the sheduler - thread pool scheduler is not simply a thread pool, but a scheduler - you can easily create a thread pool using Channel and Thread classes though

[20:08] <tellable6> Voldenet, I'll pass your message to TheAthlete

[20:18] *** melezhik left
[20:21] *** timo joined
[20:24] *** bigdata left
[20:26] *** timo left
[20:36] *** grondilu left
[21:11] *** timo joined
[21:22] *** n1to left
[22:07] *** perlbot left
[22:08] *** simcop2387 left
[22:19] *** morte_ left
[22:19] *** simcop2387 joined
[22:20] *** perlbot joined
[22:26] *** melezhik joined
[22:27] <melezhik> SmokeMachine I see last 3 Red builds have succeeded on SparkyCI, which is really cool, that SparkyCI handled that and did not shut down - ha-ha )))

[22:28] <melezhik> Uploaded file: https://uploads.kiwiirc.com/files/26164c71c019c40dca497e4c2ea7007e/Screen%20Shot%202022-04-28%20at%205.26.33%20PM.png

[22:28] <melezhik> so you've managed to fix PostgreSQL tests?

[22:57] *** melezhik left
[23:09] <SmokeMachine> melezhik: still working on that…

[23:09] <tellable6> SmokeMachine, I'll pass your message to melezhik

[23:16] *** guifa joined
[23:40] *** londoed_ left
[23:40] *** londoed_ joined
[23:43] *** londoed_ left
[23:43] *** londoed_ joined
[23:47] *** londoed_ left
[23:47] *** londoed_ joined
