[00:06] *** reportable6 left
[00:08] *** reportable6 joined
[00:14] *** jgaz left
[00:32] *** coverable6 joined
[00:33] *** squashable6 joined
[00:34] *** tellable6 joined
[00:43] *** jgaz joined
[01:10] *** jgaz left
[01:26] *** xkr47 left
[01:27] *** xkr47 joined
[01:33] *** sourceable6 joined
[02:22] *** simcop2387 left
[02:22] *** perlbot left
[02:24] *** simcop2387 joined
[02:30] *** perlbot joined
[02:32] *** committable6 joined
[02:39] *** [Coke] joined
[02:39] *** [Coke] left
[02:56] *** frost joined
[03:38] *** swaggboi left
[03:48] *** swaggboi joined
[04:25] *** clarkema left
[05:25] *** tellable6 left
[05:25] *** coverable6 left
[05:25] *** notable6 left
[05:25] *** committable6 left
[05:25] *** benchable6 left
[05:25] *** bisectable6 left
[05:25] *** releasable6 left
[05:25] *** reportable6 left
[05:25] *** nativecallable6 left
[05:25] *** linkable6 left
[05:25] *** squashable6 left
[05:25] *** evalable6 left
[05:25] *** greppable6 left
[05:25] *** sourceable6 left
[05:25] *** bloatable6 left
[05:25] *** quotable6 left
[05:25] *** unicodable6 left
[05:25] *** statisfiable6 left
[05:25] *** shareable6 left
[05:27] *** releasable6 joined
[05:27] *** benchable6 joined
[05:27] *** shareable6 joined
[05:27] *** committable6 joined
[05:28] *** evalable6 joined
[05:28] *** coverable6 joined
[05:29] *** tellable6 joined
[06:07] *** reportable6 joined
[06:20] *** tirnanog joined
[06:26] *** greppable6 joined
[06:29] *** unicodable6 joined
[07:26] *** squashable6 joined
[07:26] *** bloatable6 joined
[07:26] *** notable6 joined
[07:28] *** sourceable6 joined
[07:28] *** bisectable6 joined
[07:30] *** suman joined
[07:44] <suman> what does this mean Num(Cool) :$xx = 1e0

[07:44] <suman> num cool part

[08:04] *** suman left
[08:27] *** nativecallable6 joined
[08:28] *** linkable6 joined
[08:31] *** jjido joined
[08:31] <nine> suman: https://docs.raku.org/syntax/Coercion%20type

[08:31] <tellable6> nine, I'll pass your message to suman

[08:31] <CIAvash> suman: type of $xx values of type `Cool` and `Num` are accepted and values of type `Cool` are coerced to target type `Num` https://docs.raku.org/syntax/Coercion%20type

[08:32] <tellable6> CIAvash, I'll pass your message to suman

[09:16] *** Sgeo left
[09:26] *** statisfiable6 joined
[09:39] *** jjido left
[10:39] *** nativecallable6 left
[10:39] *** reportable6 left
[10:39] *** statisfiable6 left
[10:39] *** bloatable6 left
[10:39] *** notable6 left
[10:39] *** unicodable6 left
[10:39] *** releasable6 left
[10:39] *** sourceable6 left
[10:39] *** greppable6 left
[10:39] *** squashable6 left
[10:39] *** bisectable6 left
[10:39] *** benchable6 left
[10:39] *** evalable6 left
[10:39] *** coverable6 left
[10:39] *** tellable6 left
[10:39] *** linkable6 left
[10:39] *** shareable6 left
[10:39] *** committable6 left
[10:39] *** benchable6 joined
[10:40] *** sourceable6 joined
[10:40] *** evalable6 joined
[10:40] *** greppable6 joined
[10:41] *** nativecallable6 joined
[10:41] *** tellable6 joined
[10:41] *** squashable6 joined
[10:41] *** notable6 joined
[10:42] *** bisectable6 joined
[10:42] *** coverable6 joined
[11:27] *** sena_kun left
[11:41] *** linkable6 joined
[11:41] *** releasable6 joined
[11:45] *** sena_kun joined
[11:59] *** djerius left
[11:59] *** djerius joined
[12:20] <p6steve> looking at Inline::Python ... thought I might whet my appetite with fixing https://github.com/niner/Inline-Python/issues/43

[12:21] <p6steve> good news is that this has necessitated getting the probes into the code and getting an idea how it works

[12:22] <p6steve> bad news is that I have got stuck trying to debug

[12:22] <p6steve> Digging in a bit, the p6_to_py.t error msg is on value Buf.new(228,98,99) throws 'This container does not reference a native unsigned integer'

[12:22] <p6steve> I naively expect that this error is thrown by the PyObject lib on CallObject and may have something to do with the UniCode representation of this object having changed between 2021.05 (works) and 2022.02 (fails)

[12:24] <p6steve> so wondering if Buf.new('äbc'.encode('latin-1')) may have changed between 2021.05 and 2022.02 - does anyhone know??

[12:25] <p6steve> this is python 3.9.7 on ubuntu

[12:27] *** quotable6 joined
[12:27] *** squashable6 left
[12:30] <lizmat> m: dd Buf.new('äbc'.encode('latin-1'))

[12:30] <camelia> rakudo-moar 8fb0a66dc: OUTPUT: «Buf.new(228,98,99)␤»

[12:31] <lizmat> bisactable: old=2021.05 dd Buf.new('äbc'.encode('latin-1'))

[12:31] <bisectable6> lizmat, On both starting points (old=2021.05 new=8fb0a66) the exit code is 0 and the output is identical as well

[12:31] <bisectable6> lizmat, Output on both points: «Buf.new(228,98,99)␤»

[12:31] <p6steve> ah yes --- could have tried that - sorry

[12:33] <lizmat> afk again&

[12:37] <p6steve> did raku NativeCode change?

[12:40] *** bloatable6 joined
[12:40] *** unicodable6 joined
[12:41] *** shareable6 joined
[12:58] <nine> It was trying to take int8 from a CArray and write those into a Buf (which is uint8 by default). Since 2022.02 Rakudo properly supports unsigned native ints which includes that it differs between them and signed native ints.

[13:22] <p6steve> thanks @nine ... so the error is when casting back over to raku and is a raku error ... (the test mentions something about a round trip, guess that didn't sink in) ... appreciate the steer - hopefully that will give me enough to work on

[13:40] <nine> Actually I've already pushed the fix :) It was just a single character similar to a lot of PRs that I submitted in the past month.

[13:41] *** linkable6 left
[13:41] *** evalable6 left
[13:42] *** committable6 joined
[13:42] *** xinming left
[13:42] *** evalable6 joined
[13:43] *** xinming joined
[13:44] *** linkable6 joined
[13:51] <p6steve> @nine that's cool thanks! btw I also found and fixed based on your steer ;-)

[14:29] *** eseyman left
[14:42] *** statisfiable6 joined
[14:50] *** eseyman joined
[14:57] *** frost left
[15:08] *** reportable6 joined
[15:28] *** squashable6 joined
[15:54] <xinming> What is the right way to check %h is empty or not? %h.DEFINITE always returns true

[15:54] <xinming> m: my %h; %h.defined.raku.say;

[15:54] <camelia> rakudo-moar 8fb0a66dc: OUTPUT: «Bool::True␤»

[15:55] <ugexe> %h.so

[15:58] <xinming> Got it, Thanks

[16:12] *** abraxxa-home joined
[16:12] *** razetime joined
[16:32] *** wild joined
[16:32] *** wild left
[16:33] *** Evenwilder joined
[16:34] *** Evenwilder left
[16:35] <guifa> xinming also, if you're doing it in a conditional, you can just put the hash in as such.  

[16:35] <guifa> if %hash { say "has items" } else { say "has no items" }

[16:40] *** jjido joined
[17:05] *** razetime left
[17:27] *** jjido left
[18:09] *** reportable6 left
[18:39] *** jjido joined
[18:40] *** Xliff joined
[18:40] <Xliff> \o

[18:40] * Xliff is recovering from a Hard Drive crash :(

[18:40] <Xliff> Lost like 6 months of workaaaa.

[18:41] <Xliff> And my keyboard. I am now using a more-expensive keyboard with soft-keys. I hate soft keys. It takes only the lightest touch to make you sound like an idiot.

[18:41] <Xliff> I tend to get repeat "s"es and "a"es by just tapping the thing.

[18:41] <Xliff> Hence the "workaaaa" above. 

[18:42] <Xliff> So.... what's the best way to convert a CStruct to a CArray[uint8]?

[18:43] *** Sgeo joined
[19:02] <nine> Can you nativecast it?

[19:18] *** tirnanog left
[19:26] *** irced joined
[19:26] * irced tumbles in thru a vortex and knocks over a bookcase crushing a table and tipping chairs.

[19:27] * irced brushes off some wood splinters.

[19:28] <irced> pardon my intrusion but did anyone notice there is a nonworking link at https://examples.raku.org/index.html to the FAQs (footer area)?

[19:28] <irced> my god, you've all turned to stone!

[19:29] * irced attempts to cow-tip timo.

[19:29] * irced chisels a tattoo of a butterfly on ugexe.

[19:32] * irced puts a dainty feathered cap on vrurg.

[19:34] * irced moves lizmat to the top of the rubble (lizmat's fault clearly for the mess).

[19:36] *** irced left
[19:53] *** Kaiepi left
[19:55] *** Kaiepi joined
[19:59] <nine> The link points at http://faq.perl6.org/ which does look a bit dated

[19:59] <nine> While faq.raku.org is just nginx default page

[20:30] <Xliff> nine: I went that route in the end.

[20:31] <Xliff> Originally I wanted an attribute to be CArray[uint8]. I wanted to take a structs binary data and break it down into its binary representation and stuff it into a CArray[uint8] iteriatively.

[20:31] <Xliff> If you cast, the CArray doens't know its size.

[20:33] <Xliff> Now I need to know something... why isn't there a default exception handler for warn? If there is, then why do I keep getting this message: No exception handler located for warn?

[20:56] *** jjido left
[21:12] *** reportable6 joined
[21:15] <gfldex> Xliff: I believe that handler is setup here: https://github.com/rakudo/rakudo/blob/master/src/core.c/Exception.pm6#L618

[21:34] <nine> Xliff: is this happening in a callback from native code?

[21:35] <nine> If yes, then you'll just have to add those handlers like I do in: https://github.com/niner/Inline-Perl5/blob/master/lib/Inline/Perl5.pm6#L1240

[21:46] <Xliff>  nine++ -- Thanks!

[21:53] *** jjido joined
[22:06] *** abraxxa-home left
[22:15] *** Kaiepi left
[22:16] *** Kaiepi joined
[22:16] *** euandreh left
[23:12] *** jjido left
[23:56] *** epony left
