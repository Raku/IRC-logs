[00:00] *** Voldenet left
[00:00] *** jast left
[00:00] *** polettix left
[00:00] *** sjn left
[00:00] *** KotH left
[00:00] *** charsbar left
[00:00] *** JRaspass left
[00:00] *** lucs left
[00:00] *** dac left
[00:00] *** maettu left
[00:00] *** lucs_ joined
[00:00] *** KotH joined
[00:00] *** maettu joined
[00:00] *** charsbar joined
[00:00] *** sjn joined
[00:00] *** polettix joined
[00:00] *** jast joined
[00:00] *** reportable6 left
[00:01] *** JRaspass joined
[00:02] *** reportable6 joined
[00:02] *** Voldenet joined
[00:03] *** habere-et-disper left
[00:04] *** dcx joined
[00:06] *** coleman left
[00:06] *** coleman joined
[00:11] *** Nemokosch left
[00:12] *** Nemokosch joined
[00:18] *** lichtkind left
[00:23] *** grondilu left
[00:24] *** coleman left
[00:24] *** coleman joined
[00:29] *** coleman left
[00:33] *** jpn left
[00:43] *** coleman joined
[00:53] *** Nemokosch left
[01:00] *** jpn joined
[01:03] *** xinming left
[01:05] *** xinming joined
[01:09] *** coleman left
[01:09] *** coleman joined
[01:13] *** coleman left
[01:17] *** xinming left
[01:17] *** xinming joined
[01:42] *** Kaiepi left
[01:45] *** jpn left
[02:12] *** jpn joined
[02:25] *** jpn left
[02:51] *** jpn joined
[02:57] *** razetime joined
[02:58] *** jpn left
[03:10] <[Coke]> this used to work: a 'proto sub MAIN() { ...; {*} }; in a module and a sub MAIN() { ... } in a script. (from some adventofcode helper scripts I had last year that now don't work)

[03:12] *** jpn joined
[03:14] <[Coke]> m: proto MAIN(|) { say "proto"; {*} }; multi MAIN() { say "hi"; }

[03:14] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´proto‚ê§hi‚ê§¬ª

[03:15] <[Coke]> seems happy enough in a single script

[03:15] <[Coke]> any thoughts appreciated

[03:23] <tonyo> what -v

[03:24] *** jaguart joined
[03:30] <[Coke]> 2022.07

[03:33] <ugexe> hmm, i always thought only the first MAINline gets run

[03:34] <ugexe> but that might be if you have two MAINs in different modules only one of them gets used

[03:34] <[Coke]> ... there has beem a very annoying change on my osx 12.6 box; if I highlight text, ther is no highlight color until I stop the selection. then it highlights. any way to get this back to highlight-as-you-go greatly appreciated.

[03:41] *** jaguart left
[03:41] *** jaguart joined
[03:53] *** lesihctej left
[03:57] *** jetchisel joined
[04:05] *** grondilu joined
[04:05] <grondilu> check this out, basically RIPEMD-160 as a FP one-liner : https://github.com/grondilu/libdigest-raku/blob/master/lib/Digest/RIPEMD.rakumod

[04:06] <grondilu> it's also the fastest version I wrote to date

[04:06] *** jpn left
[04:07] <grondilu> "one-liner" being a figure of speech here ;)

[04:09] <grondilu> still, no variable here.  Like, there is no C<my>.

[04:13] * grondilu considers creating a 'constrained programming' contest and grant himself the first prize üòÑ

[04:19] *** jpn joined
[04:21] <[Coke]> ... rebooting fixed my #$%^&* trackpad issues.

[04:25] *** jpn left
[04:26] *** grondilu left
[04:34] *** Kaiepi joined
[04:38] <MasterDuke> that's certainly something...i like it, but am not sure that i like that i like it

[04:39] *** jpn joined
[04:46] *** MasterDuke left
[04:53] *** squashable6 left
[04:54] *** squashable6 joined
[05:03] *** jpn left
[05:12] *** coleman joined
[05:14] *** jpn joined
[05:19] *** jpn left
[05:32] *** jpn joined
[05:38] *** jpn left
[05:56] *** jpn joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:15] *** jpn left
[06:42] *** grondilu joined
[06:42] <grondilu> m: class { has $.x; multi method new { samewith rand }; multi method new(Num $x) { samewith

[06:42] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> d }; multi method new(Num $x) { samewith‚èè<EOL>‚ê§    expecting any of:‚ê§        statement end‚ê§        statement modifier‚ê§        statement modifier loo‚Ä¶¬ª

[06:42] <grondilu> m: class { has $.x; multi method new { samewith rand }; multi method new(Num $x) { samewith :$x } }.new

[06:42] <grondilu> ^I'm not quite sure why this hangs

[06:43] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´(timeout)¬ª

[06:43] <grondilu> I think I've used that kind of scheme before, a constructor with no parameters to set a random attribute.

[06:44] <grondilu> For some reason I can't make it work anymore.

[06:44] <grondilu> unless I use bless or something but really I shouldn't have to, should I?

[06:45] <grondilu> m: say class { has $.x; multi method new { samewith rand }; multi method new(Num $x) { self.bless: :$x } }.new.x

[06:45] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´0.1505676333858187‚ê§¬ª

[06:54] *** TheVirginian joined
[06:55] *** TheVirginian left
[06:57] *** jpn joined
[07:57] *** greppable6 left
[07:57] *** sourceable6 left
[07:57] *** tellable6 left
[07:57] *** coverable6 left
[07:57] *** notable6 left
[07:57] *** bloatable6 left
[07:57] *** committable6 left
[07:57] *** statisfiable6 left
[07:57] *** shareable6 left
[07:57] *** benchable6 left
[07:57] *** releasable6 left
[07:57] *** bisectable6 left
[07:57] *** unicodable6 left
[07:57] *** reportable6 left
[07:57] *** nativecallable6 left
[07:57] *** evalable6 left
[07:57] *** linkable6 left
[07:57] *** squashable6 left
[07:57] *** quotable6 left
[07:57] *** squashable6 joined
[07:57] *** quotable6 joined
[07:57] *** bloatable6 joined
[07:57] *** committable6 joined
[07:58] *** linkable6 joined
[07:58] *** sourceable6 joined
[07:58] *** shareable6 joined
[07:58] *** greppable6 joined
[07:58] *** benchable6 joined
[07:58] *** evalable6 joined
[07:58] *** releasable6 joined
[07:59] *** statisfiable6 joined
[07:59] *** bisectable6 joined
[07:59] *** notable6 joined
[07:59] *** reportable6 joined
[07:59] *** coverable6 joined
[08:00] *** nativecallable6 joined
[08:00] *** unicodable6 joined
[08:02] *** tellable6 joined
[08:17] *** abraxxa joined
[08:36] *** jpn left
[08:42] *** lichtkind joined
[08:46] *** Sgeo left
[09:09] *** dakkar joined
[09:11] *** Nemokosch joined
[09:20] *** sena_kun joined
[09:26] <discord-raku-bot> <Nemokosch> Guys, what do you think 1 ~~ @foo should return on a lazy list?

[09:37] *** Nemokosch left
[09:49] *** jaguart left
[09:49] *** jpn joined
[09:49] *** jaguart joined
[10:09] <lizmat> although I'm not one of the guys, I'd say: no

[10:11] <discord-raku-bot> <Nemokosch> You mean _False_?

[10:11] <discord-raku-bot> <Nemokosch> https://github.com/rakudo/rakudo/issues/2468 for context

[10:12] <lizmat> the "no" was on the question whether it should return a lazy list

[10:15] <discord-raku-bot> <Nemokosch> Sorry but that wasn't the question. "*what* do you think (...) should return *on* a lazy list"

[10:17] *** grondilu left
[10:19] *** grondilu joined
[10:29] *** epony left
[10:35] *** holyghost joined
[10:39] *** holyghost left
[10:53] *** mscha joined
[10:53] <mscha> m: my %h; say 'yes' if %h<a>:exists && %h<b>:exists;

[10:53] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§You can't adverb &infix:<&&>‚ê§at <tmp>:1‚ê§------> ay 'yes' if %h<a>:exists && %h<b>:exists‚èè;‚ê§    expecting any of:‚ê§        pair value‚ê§¬ª

[10:54] <mscha> m: my %h; say 'yes' if %h<a>:exists and %h<b>:exists;

[10:54] <camelia> rakudo-moar d52342eb0: ( no output )

[10:54] <mscha> m: my %h; say 'yes' if (%h<a>:exists) && (%h<b>:exists);

[10:54] <camelia> rakudo-moar d52342eb0: ( no output )

[10:54] <mscha> Does && really bind tighter than :exists??

[11:05] <discord-raku-bot> <Nemokosch> this seems to be characteristic of adverbs... I still don't know where they go exactly

[11:11] <discord-raku-bot> <Nemokosch> https://design.raku.org/S03.html#Adverbs

[11:11] <discord-raku-bot> <Nemokosch> I'd expect that this holds to this day

[11:12] <lizmat> yeah, I've heard stories about how difficult it was to get adverbs to work

[11:21] *** habere-et-disper joined
[11:42] <grondilu> I tried very naively to create a NativeCall to openssl's digest : https://gist.github.com/grondilu/e5d11be7ba6a58e761b753119631c805

[11:43] <grondilu> oh wait I thought it wasn't working but maybe it does

[11:43] <grondilu> it was printing just "NativeCall::Types::CArray[uint8].new"

[11:44] <grondilu> I thought that was just an empty array but when I coerce it to Str I get some numbers

[11:46] <grondilu> oh yes it does work, I get the good hash.  Pretty neat.

[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:04] *** epony joined
[12:30] *** razetime left
[12:38] <discord-raku-bot> <Anton Antonov> I wonder how many Rakunistas use Jupyter (with Raku or other language.) Any comments on this? (Or confessions.)

[12:43] *** jpn left
[12:49] * lizmat confesses nothing :)

[12:56] <discord-raku-bot> <Anton Antonov> @lizmat I see. üôÇ I know some Rakuns have hard time putting vi down. That might be more confessable...

[12:56] <lizmat> to that I will confess  :-)

[13:06] *** grondilu left
[13:08] *** habere-et-disper left
[13:49] *** jpn joined
[13:54] <mscha> m:¬† say '[[8,7,6]]'.EVAL # Bug or feature?

[13:54] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´[8 7 6]‚ê§¬ª

[13:54] *** lichtkind left
[13:54] <mscha> m: say '[[8,7,6],]'.EVAL # I know, this works, but that's not the data I have - https://adventofcode.com/2022/day/13

[13:54] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´[[8 7 6]]‚ê§¬ª

[13:54] *** lichtkind joined
[13:56] <discord-raku-bot> <Nemokosch> [[asd]] is the same as [asd]

[13:56] <discord-raku-bot> <Nemokosch> I'm not sure what's the principle behind it since the square bracket is pretty much dedicated to these literals

[13:57] <mscha> Too bad, no `.EVAL`-based solution for today's Advent of Code then...

[14:03] <mscha> Luckily, it's also valid JSON, and JSON _does_ do the right thing with [[8,7,6]].¬† :-)

[14:08] *** mcmillhj joined
[14:09] <discord-raku-bot> <Nemokosch> so basically JS does üòõ

[14:15] <discord-raku-bot> <Nemokosch> in fact, it seems you can build whole convoluted structures that still give you an empty array

[14:16] <discord-raku-bot> <Nemokosch> [[()[]]] - look at this boi

[14:16] <jast> beautiful

[14:19] *** mscha left
[14:36] <Geth> ¬¶ doc: tbrowder++ created pull request #4168: Improve discussion and examples of programmatically using class method names

[14:36] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/4168

[14:36] <Geth> ¬¶ doc: 1d41f3822b | (Will Coleda)++ | xt/aspell.t

[14:36] <Geth> ¬¶ doc: use higher level Lock

[14:36] <Geth> ¬¶ doc: 

[14:36] <Geth> ¬¶ doc: tbrowder++, part of #4162

[14:36] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/1d41f3822b

[14:37] *** linkable6 left
[14:38] *** linkable6 joined
[14:49] <Geth> ¬¶ doc: a0f57177eb | (Will Coleda)++ | 2 files

[14:49] <Geth> ¬¶ doc:     use higher level Lock

[14:49] <Geth> ¬¶ doc: 

[14:49] <Geth> ¬¶ doc: tbrowder++, part of #4162

[14:49] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/a0f57177eb

[14:49] <hobbified> I didn't think of going via JSON, I just wrote a parser. Which wasn't awful :)

[14:50] *** linkable6 left
[14:52] *** linkable6 joined
[14:59] <discord-raku-bot> <Nemokosch> Seems this year is a lot about parsing üòÑ

[15:00] <discord-raku-bot> <Nemokosch> once again I'd like to remind yall of this supposed AoC collection https://github.com/codesections/advent-of-raku-2022

[15:01] <discord-raku-bot> <Nemokosch> I don't think I could dive into this before this weekend

[15:23] *** xinming left
[15:23] *** mscha joined
[15:23] *** xinming joined
[15:24] <mscha> I used a grammar at first: https://github.com/mscha/aoc/blob/master/aoc2022/aoc13b

[15:25] <mscha> Then I saw a Perl solution which used eval and though: nice trick, I'm sure Raku can do that as well.¬† Not...

[15:25] <mscha> My JSON-based solution: https://github.com/mscha/aoc/blob/master/aoc2022/aoc13b

[15:25] *** Sgeo joined
[15:27] <mscha> I used a grammar at first: correct link https://github.com/mscha/aoc/blob/master/aoc2022/aoc13

[15:29] *** xinming left
[15:30] *** xinming joined
[15:32] <mcmillhj> What's the correct way to iterate through an array in pairs in Raku? I was trying `for @d -> ($l, $r) { dd [$l, $r]; }` but that isn't quite right

[15:32] <tellable6> 2022-01-04T08:50:00Z #raku <SmokeMachine> .tell mcmillhj it seems you‚Äôve just missed the sigil‚Ä¶ (https://glot.io/snippets/g5scg1bf5l)

[15:32] <discord-raku-bot> <Nemokosch> wow ü§£

[15:33] <discord-raku-bot> <Nemokosch> mcmillhj: can you give an example of what @d would contain?

[15:33] <mcmillhj> yep, sorry.

[15:33] <mcmillhj> m: my @d = [[1], [2], [3], [4]]; for @d -> (@l, @r) { dd [@l, @r]; }

[15:33] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´Type check failed in binding to parameter '@l'; expected Positional but got Int (1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:33] <mcmillhj> shoot, sorry 1 sec

[15:34] <mcmillhj> m: my @d = [[1], [2], [3], [4]]; for @d -> ($l, $r) { dd [$l, $r]; }

[15:34] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´Too few positionals passed to '<anon>'; expected 2 arguments but got 1 in sub-signature‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:36] <dutchie> m: my @d = [[1], [2], [3], [4]]; for @d -> $l, $r { dd [$l, $r]; }

[15:36] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´[[1], [2]]‚ê§[[3], [4]]‚ê§¬ª

[15:36] <mcmillhj> oh, what does wrapping `$l` and `$r` in `()` tell to the compiler. I must not quite understand that.

[15:36] <dutchie> `-> ($l, $r) {}` takes one argument and deconstructs it

[15:37] <mcmillhj> ahh, okay. thank you dutchie.

[15:37] <mscha> m: my @d = [[1], [2], [3], [4]]; for @d.rotor(2) -> ($l, $r) { dd [$l, $r]; } # works as well

[15:37] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´[[1], [2]]‚ê§[[3], [4]]‚ê§¬ª

[15:37] <dutchie> https://docs.raku.org/type/Signature#Destructuring_arguments

[15:38] <discord-raku-bot> <Nemokosch> I tend to forget that the () is significant there...

[15:39] *** NemokoschKiwi joined
[15:39] <NemokoschKiwi> m: my @d = [[1], [2], [3], [4]]; for @d -> @l, @r { dd [@l, @r]; }

[15:39] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´[[1], [2]]‚ê§[[3], [4]]‚ê§¬ª

[15:39] <NemokoschKiwi> epicc

[15:40] *** NemokoschKiwi left
[15:42] *** xinming left
[15:42] *** xinming joined
[15:44] *** abraxxa left
[15:50] <mcmillhj> m: my @L = [[]]; @L;

[15:50] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of @L in sink context (line 1)‚ê§¬ª

[15:50] <mcmillhj> m: my @L = [[]]; dd @L;

[15:50] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´Array @L = []‚ê§¬ª

[15:50] <mcmillhj> ^ how come `@L` gets collapsed here? The inner empty Array is removed.

[15:52] <discord-raku-bot> <Nemokosch> very good question, just got mentioned like 2 hours ago

[15:52] <mcmillhj> probably by someone else doing aoc :)  I can check the logs

[15:53] <discord-raku-bot> <Nemokosch> if I were to guess, [] doesn't say "put this inside an array" but "store this as an array"

[15:53] <discord-raku-bot> <Nemokosch> I'm afraid this should be checked on the syntax level, unless you are lucky to pinpoint it somewhere in the docs

[15:54] <mscha> "someone else doing aoc", yup, me.¬† :-)

[15:54] <mscha> Final version I'm happy with: https://github.com/mscha/aoc/blob/master/aoc2022/aoc13b

[15:54] <discord-raku-bot> <Nemokosch> https://docs.raku.org/routine/[%20]

[15:55] <discord-raku-bot> <Nemokosch> luck might be on our side today - this is just an operator

[15:56] <mcmillhj> Oh okay, I initially did today's problem in JS because the input was valid JSON. Was trying to clean it up in Raku. I did a similar multi sub compare but wasn't zipping the two lists together.

[15:58] <discord-raku-bot> <Nemokosch> üòÇ

[15:58] <mscha> The input is also valid Perl with `eval`, but not Raku with `.EVAL`.¬† Well, it's valid Raku, but it collapses arrays with one element, that's why this came up before.

[15:59] <discord-raku-bot> <Nemokosch> lately, I've been addicted to this module that helps you look up source code in the compiler

[15:59] <discord-raku-bot> <Nemokosch> so here we go: https://github.com/rakudo/rakudo/blob/704a05b934ba10f3240e8764827bbfd7fe089cdf/src/core.c/array_operators.pm6#L13

[15:59] <discord-raku-bot> <Nemokosch> the very line that gets triggered

[15:59] <discord-raku-bot> <Nemokosch> Array.from-list([]) gives []

[16:02] <discord-raku-bot> <Nemokosch> the source also hints that [$[]] would indeed be an array inside an array

[16:11] *** Xliff joined
[16:11] <Xliff> Hi ho!

[16:11] <tellable6> 2022-12-09T20:03:16Z #raku <guifa> Xliff: you can override it by wrapping it

[16:11] <Xliff> Congrats on the release of RakuAST to main: nine++, vrurg++

[16:11] <Xliff> However, can someone tell me why this isn't working?

[16:11] <Xliff> RAKUDO_RAKUAST=1 raku call.t

[16:12] <vrurg> Xliff: do you take into account that RakuAST is far from being complete yet?

[16:13] <Xliff> Yes.

[16:13] <Xliff> However the tests should be working, yes?

[16:14] <Xliff> Is that the correct way to invoke a RAKUAST enabled program?

[16:14] <Xliff> And that is t/12-rakuast/call.t -- I thought that one WAS working?

[16:22] <mcmillhj> mscha what does the `?*` passed to `.first(?*)` mean in your solution?

[16:22] <mscha> First one with a true value.

[16:22] <mscha> Values are Less, Same, More.¬† More == 0, so ?More = False

[16:22] <discord-raku-bot> <Nemokosch> bool conversion?

[16:22] *** Tirifto left
[16:23] <mscha> `first(*)` probably works as well.

[16:23] <discord-raku-bot> <Nemokosch> you mean, Same == 0

[16:23] <mscha> Yes, sorry, Same == 0, so ?Same == False

[16:24] <mcmillhj> oh okay, that means the same thing as `.first(* != Same)` right?

[16:24] *** Tirifto joined
[16:26] <mscha> Yes

[16:27] <mscha> That might indeed be the cleanest way to do that

[16:35] <smol-hors> hi

[16:35] <vrurg> Xliff: don't remember right now about call.t. I think it should. But either way, we're not done with post-merge procedures yet, so let it stabilize first.

[16:35] * vrurg is afk

[16:37] *** epony left
[16:38] <Xliff> vrurg: Sure thing. How long do you estimate that will be?

[16:39] * lizmat clickbaits https://rakudoweekly.blog/2022/12/12/2022-50-mainified/

[16:40] <smol-hors> aoc day 13 https://github.com/esnk86/aoc22/blob/main/13/main.raku

[16:40] <smol-hors> my correct-order function could have been better, but eh ;p

[16:42] <smol-hors> mscha: looks like we had a similar thought process

[16:43] *** xinming left
[16:43] <mscha> Yes, although it took me quite a while to get there.¬† :-)

[16:43] <smol-hors> day 12 took me ages

[16:44] *** xinming joined
[16:52] <hobbified> my @packets = lines.grep(*.chars > 0).map(*.EVAL).List; that shouldn't work though :)

[16:53] <mscha> Problem with .EVAL:

[16:53] <mscha> m: dd '[[[[1]]]]'.EVAL

[16:53] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´[1]‚ê§¬ª

[16:54] <mscha> But I guess that doesn't actually make a difference for the answer.

[16:55] <mscha> m: use JSON::Fast; dd from-json('[[[[1]]]]');

[16:55] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Could not find JSON::Fast in:‚ê§    /home/camelia/.raku‚ê§    /home/camelia/rakudo-m-inst-1/share/perl6/site‚ê§    /home/camelia/rakudo-m-inst-1/share/perl6/vendor‚ê§    /home/camelia/rakudo-m-inst-1/sh‚Ä¶¬ª

[16:55] <mscha> Oh well.¬† But that does work.

[17:18] *** epony joined
[17:21] *** spacekookie left
[17:22] *** spacekookie joined
[17:28] *** jpn left
[17:28] <discord-raku-bot> <Nemokosch> okay but the bot doesn't have JSON::Fast installed üôÇ

[17:31] <ugexe> m: dd from-json('[[[[1]]]]');

[17:31] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´Array @result = [[[[1],],],]‚ê§Saw 1 occurrence of deprecated code.‚ê§================================================================================‚ê§Sub from-json (from GLOBAL) seen at:‚ê§  <tmp>, line 1‚ê§Please use JSON::Fast, JSON::Tiny or JSON‚Ä¶¬ª

[17:33] *** jpn joined
[17:34] *** dakkar left
[17:43] *** epony left
[17:49] *** epony joined
[17:50] *** greaser|q joined
[17:53] *** elcaro_ joined
[17:53] *** silug5 joined
[17:53] *** daxim_ joined
[17:54] *** coleman_ joined
[17:54] *** kawaii__ joined
[17:55] *** GreaseMonkey left
[17:55] *** linkable6 left
[17:55] *** kawaii_ left
[17:55] *** daxim left
[17:55] *** thowe left
[17:55] *** elcaro left
[17:55] *** coleman left
[17:55] *** silug left
[17:55] *** coleman_ is now known as coleman

[17:55] *** kawaii__ is now known as kawaii_

[17:55] *** silug5 is now known as silug

[17:55] *** thowe joined
[17:56] *** linkable6 joined
[18:00] *** reportable6 left
[18:01] *** jpn left
[18:02] *** reportable6 joined
[18:03] *** rf joined
[18:07] *** jpn joined
[18:11] *** jpn left
[18:15] <tonyo> lizmat: does the wordpress have linkbacks ?

[18:15] <lizmat> think it does, yes

[18:16] <tonyo> can you add one so we don't get flagged for the post today?

[18:16] <tonyo> should be https://deathbykeystroke.com/articles/20221205-virtual-environments-in-raku.html

[18:16] <tonyo> jj gave me authorship but i can't seem to edit that post

[18:17] <lizmat> authorship on WP ?

[18:18] <lizmat> do you have a WP login?

[18:19] <lizmat> tonyo386 ?

[18:19] <lizmat> tonyo ^^

[18:34] <tonyo> yea

[18:34] <tonyo> that's me

[18:35] *** jpn joined
[18:37] *** mcmillhj left
[18:47] <lizmat> tonyo: you're the author now

[19:00] <rf> Hey folks! Are there any Raku books that people recommend to get started with? I've been using Raku for about a month but i'd like to go deeper into it.

[19:03] <lizmat> https://raku.org/resources/ has a few book suggestions

[19:08] <rf> Thanks!

[19:20] *** sena_kun left
[19:21] *** Xliff left
[19:32] *** sena_kun joined
[19:49] *** sena_kun left
[19:50] *** sena_kun joined
[20:05] *** greaser|q left
[20:05] *** greaser|q joined
[20:06] *** greaser|q is now known as GreaseMonkey

[20:07] <tonyo> lizmat: ty

[20:09] <vrurg> .tell Xliff make use you have rakudo correctly installed. call.t passes for me.

[20:09] <tellable6> vrurg, I'll pass your message to Xliff

[20:11] *** jpn left
[20:30] *** n1to joined
[20:38] *** mscha left
[20:50] *** n1to left
[20:51] *** mcmillhj joined
[20:54] <mcmillhj> @mscha This is how my day13 turned out: https://github.com/mcmillhj/aoc/blob/main/2022/13/distress-signal.raku. I updated my Array -> Array comparison to use your zip solution since it looked a lot cleaner. Main difference is `multi` subs for compare.

[20:59] <vrurg> .tell Xliff Correction. For test to work with RAKUDO_RAKUAST env RakuAST must fully or nearly fully complete which is far the case. Tests in 12-rakuast are for already implemented nodes only.

[20:59] <tellable6> vrurg, I'll pass your message to Xliff

[21:03] <hobbified> oh, that's smart

[21:05] <hobbified> (using multi sub instead of a big type switch)

[21:07] <Geth> ¬¶ doc: 0rir++ created pull request #4169: Consolidate once from statement-prefixes.pod6 into control.pod6.

[21:07] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/4169

[21:08] <Geth> ¬¶ doc: 0rir++ created pull request #4170: Consolidate start from statement-prefixes.pod6 into control.pod6.

[21:08] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/4170

[21:09] <Geth> ¬¶ doc: 0rir++ created pull request #4171: Consolidate start from statement-prefixes.pod6 to control.pod6.

[21:09] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/4171

[21:11] *** sena_kun left
[22:06] *** abhinav left
[22:07] *** sena_kun joined
[22:13] *** mcmillhj left
[22:50] *** euandreh left
[22:59] *** euandreh joined
[23:28] *** lichtkind left
[23:29] *** sena_kun left
[23:48] *** Nemokosch joined
[23:48] <Nemokosch> bisectable6: say ¬´a¬†bb¬ª.raku;

[23:48] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[23:48] <bisectable6> Nemokosch, Output on all releases: https://gist.github.com/1acc5b7889b3af8f892bc6792874d9fb

[23:48] <bisectable6> Nemokosch, Bisecting by exit code (old=2019.07.1 new=2019.11). Old exit code: 1

[23:49] <bisectable6> Nemokosch, bisect log: https://gist.github.com/6a25b76c69cf12914edc50a25747238d

[23:49] <bisectable6> Nemokosch, (2019-11-01) https://github.com/rakudo/rakudo/commit/7cf73de0d47f3f4a0a96a4108194d93c0a81e7ad

[23:49] <bisectable6> Nemokosch, Bisecting by output (old=2017.05 new=2017.06) because on both starting points the exit code is 1

[23:49] <Nemokosch> oops

[23:49] <bisectable6> Nemokosch, bisect log: https://gist.github.com/b26cafc220b44a962e6d28cb5c3bc71c

[23:49] <bisectable6> Nemokosch, (2017-06-01) https://github.com/rakudo/rakudo/commit/7cf01296d95ef7abd4369db25e996f656b955cd7

[23:49] <bisectable6> Nemokosch, Bisecting by output (old=2016.09 new=2016.10) because on both starting points the exit code is 1

[23:49] <bisectable6> Nemokosch, bisect log: https://gist.github.com/21d902965bcc028249c32db9d51f6e27

[23:50] <bisectable6> Nemokosch, Output on all releases and bisected commits: https://gist.github.com/aefe8b99dcf9e951feb9a6b4a5631d72

[23:50] <Nemokosch> bisectable6: dd ¬´a¬†bb¬ª;

[23:50] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[23:50] <bisectable6> Nemokosch, ¬¶6c (66 commits): ¬´"a¬†bb"‚ê§¬ª

[23:50] <bisectable6> Nemokosch, Nothing to bisect!

[23:51] <Nemokosch> that's... peculiar?

[23:51] <Nemokosch> bisectable6: enum¬†Foo¬†¬´a¬†b¬ª; say¬†Foo.enums<a>:exists;

[23:51] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[23:52] <bisectable6> Nemokosch, ¬¶6c (66 commits): ¬´False‚ê§¬ª

[23:52] <bisectable6> Nemokosch, Nothing to bisect!

[23:53] <Nemokosch> b-but...

[23:53] <Nemokosch> the docs say it's True...

[23:54] <Nemokosch> bisectable6: my¬†$a¬†=¬†42;¬†say¬†<<¬†"$a¬†b"¬†c¬†>>.raku;

[23:54] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[23:55] <bisectable6> Nemokosch, Output on all releases: https://gist.github.com/c538dcd87d085bfee9edb13f42eb0903

[23:55] <bisectable6> Nemokosch, Bisecting by exit code (old=2019.07.1 new=2019.11). Old exit code: 1

[23:55] <bisectable6> Nemokosch, bisect log: https://gist.github.com/e6c40464faf917e728d908481ec2e59d

[23:55] <bisectable6> Nemokosch, (2019-11-01) https://github.com/rakudo/rakudo/commit/7cf73de0d47f3f4a0a96a4108194d93c0a81e7ad

[23:55] <bisectable6> Nemokosch, Bisecting by output (old=2017.05 new=2017.06) because on both starting points the exit code is 1

[23:55] <bisectable6> Nemokosch, bisect log: https://gist.github.com/fed5764f38156456f8e4e95d99c73027

[23:55] <bisectable6> Nemokosch, (2017-06-01) https://github.com/rakudo/rakudo/commit/7cf01296d95ef7abd4369db25e996f656b955cd7

[23:56] <bisectable6> Nemokosch, Bisecting by output (old=2016.09 new=2016.10) because on both starting points the exit code is 1

[23:56] <bisectable6> Nemokosch, bisect log: https://gist.github.com/8ac89bfc646c588d8f4f9d9e98c2fe26

[23:56] <bisectable6> Nemokosch, Output on all releases and bisected commits: https://gist.github.com/29836733fe6cd35df3bee4ee7c7efda4

[23:57] <Nemokosch> dayum, the same trap again

[23:58] <Nemokosch> bisectable6: my¬†$a¬†=¬†42;¬†dd <<¬†"$a¬†b"¬†c¬†>>;

[23:58] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[23:58] <bisectable6> Nemokosch, ¬¶6c (66 commits): ¬´("42¬†b", "c¬†")‚ê§¬ª

[23:58] <bisectable6> Nemokosch, Nothing to bisect!

[23:59] <Nemokosch> also doesn't match the docs!

