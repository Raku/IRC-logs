[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:03] *** jpn left
[00:32] *** jpn joined
[00:34] *** sena_kun left
[00:52] <Geth> ¦ ecosystem/main: 45030b4dcb | thundergnat++ (committed using GitHub Web editor) | META.list

[00:52] <Geth> ¦ ecosystem/main: Modules migrated to fez ecosystem

[00:52] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/45030b4dcb

[01:01] *** jpn left
[01:15] *** Averna left
[01:25] *** djerius left
[01:27] *** djerius joined
[01:39] *** djerius left
[01:39] *** jpn joined
[01:41] *** epony joined
[01:41] *** djerius joined
[02:14] *** jpn left
[02:29] *** jpn joined
[02:34] *** razetime joined
[02:35] *** jpn left
[02:42] *** melezhik joined
[02:47] *** melezhik left
[02:48] *** jpn joined
[02:53] *** jpn left
[02:59] <leont> guifa_: yeah, we don't really have a standard for "how old versions should you support".

[02:59] <leont> I don't think a lot of people use distro supplied raku, so I guess not that long in practice, but I may be mistaken

[03:00] <guifa_> I've been doing two-ish years for when I, e.g., change the name of a module (to continue to `provide` under the old name)

[03:02] <leont> I think I've been doing something similar, but it has varied with the module and the issue at hand

[03:07] *** jpn joined
[03:07] *** jgaz joined
[03:15] *** jgaz left
[03:17] *** deoac joined
[03:26] *** jpn left
[03:39] *** jpn joined
[03:46] *** Kaiepi left
[03:47] *** jpn left
[04:01] *** jpn joined
[04:07] *** jpn left
[04:20] *** jpn joined
[04:29] *** deoac left
[04:35] *** jpn left
[04:49] *** jpn joined
[04:53] *** jpn left
[05:06] *** jpn joined
[05:12] *** jpn left
[05:25] *** jpn joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[07:01] *** linkable6 left
[07:01] *** nativecallable6 left
[07:01] *** evalable6 left
[07:01] *** sourceable6 left
[07:01] *** coverable6 left
[07:01] *** committable6 left
[07:01] *** tellable6 left
[07:01] *** releasable6 left
[07:01] *** quotable6 left
[07:01] *** shareable6 left
[07:01] *** bloatable6 left
[07:01] *** notable6 left
[07:01] *** bisectable6 left
[07:01] *** statisfiable6 left
[07:01] *** squashable6 left
[07:01] *** unicodable6 left
[07:01] *** benchable6 left
[07:01] *** greppable6 left
[07:01] *** reportable6 left
[07:01] *** unicodable6 joined
[07:01] *** shareable6 joined
[07:02] *** squashable6 joined
[07:02] *** evalable6 joined
[07:02] *** quotable6 joined
[07:02] *** linkable6 joined
[07:03] *** bloatable6 joined
[07:03] *** statisfiable6 joined
[07:03] *** sourceable6 joined
[07:03] *** benchable6 joined
[07:03] *** greppable6 joined
[07:03] *** coverable6 joined
[07:03] *** releasable6 joined
[07:03] *** tellable6 joined
[07:03] *** reportable6 joined
[07:03] *** notable6 joined
[07:03] *** committable6 joined
[07:04] *** bisectable6 joined
[07:04] *** nativecallable6 joined
[07:18] <Geth> ¦ App-Rakubrew: 254bd09061 | Jasmin++ | Changes

[07:18] <Geth> ¦ App-Rakubrew: Document master/main changes for moar-blead

[07:18] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/254bd09061

[07:18] <Geth> ¦ App-Rakubrew: 44b5db8d16 | Jasmin++ | 3 files

[07:18] <Geth> ¦ App-Rakubrew: Version 32

[07:18] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/44b5db8d16

[07:22] *** jpn left
[07:56] *** jpn joined
[08:56] *** committable6 left
[08:56] *** bisectable6 left
[08:56] *** benchable6 left
[08:56] *** squashable6 left
[08:56] *** nativecallable6 left
[08:56] *** notable6 left
[08:56] *** quotable6 left
[08:56] *** shareable6 left
[08:56] *** reportable6 left
[08:56] *** tellable6 left
[08:56] *** evalable6 left
[08:56] *** linkable6 left
[08:56] *** unicodable6 left
[08:56] *** coverable6 left
[08:56] *** sourceable6 left
[08:56] *** releasable6 left
[08:56] *** bloatable6 left
[08:56] *** greppable6 left
[08:56] *** statisfiable6 left
[08:56] *** nativecallable6 joined
[08:57] *** tellable6 joined
[08:57] *** bisectable6 joined
[08:57] *** coverable6 joined
[08:57] *** evalable6 joined
[08:57] *** shareable6 joined
[08:57] *** statisfiable6 joined
[08:57] *** greppable6 joined
[08:58] *** linkable6 joined
[08:58] *** unicodable6 joined
[08:58] *** benchable6 joined
[08:58] *** reportable6 joined
[08:58] *** quotable6 joined
[08:58] *** bloatable6 joined
[08:58] *** releasable6 joined
[08:59] *** sourceable6 joined
[08:59] *** notable6 joined
[08:59] *** squashable6 joined
[08:59] *** committable6 joined
[09:00] *** jpn left
[09:08] *** razetime left
[09:09] *** Kaiepi joined
[09:23] *** jpn joined
[09:28] *** jpn left
[09:36] *** jpn joined
[09:41] *** jpn left
[09:56] <patrickb> I was on a different computer. The above commits are authored by me. I really need to change the gitconfig.

[10:00] <discord-raku-bot> <Nemokosch> Lol 😄

[10:31] *** jpn joined
[10:35] *** jpn left
[10:47] *** sena_kun joined
[11:05] *** Sgeo left
[11:53] *** epony left
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:13] <discord-raku-bot> <Anton Antonov> @patrickb Unfortunately, I doing that also… (Way too often!)

[12:18] *** jpn joined
[12:27] *** jpn left
[12:40] *** jpn joined
[12:46] *** jpn left
[13:16] *** Nemokosch joined
[13:16] <Nemokosch> :abloy:

[13:16] <tellable6> 2022-12-24T15:22:41Z #raku-dev <MasterDuke> Nemokosch: any idea why the windows tests failed? can you force push to get them to rerun? i tried to rerun them from the PR, but it's too old and it won't let me

[13:16] <tellable6> 2022-12-24T15:24:24Z #raku-dev <MasterDuke> Nemokosch: btw, were you asking about Actions.nqp? i think it will eventually go away when rakuast fully takes over

[13:16] <Nemokosch> had to try :D

[13:20] *** jpn joined
[13:24] *** epony joined
[13:24] *** jpn left
[13:30] *** grondilu joined
[13:43] *** epony left
[14:09] *** jgaz joined
[14:09] *** amenonsen left
[14:10] *** amenonsen joined
[14:25] *** Nemokosch left
[14:30] *** epony joined
[14:35] *** jgaz left
[15:07] *** jpn joined
[15:12] *** jpn left
[15:13] *** TieUpYourCamel left
[15:25] *** TieUpYourCamel joined
[15:50] *** Kaiepi left
[16:02] *** jpn joined
[16:06] *** jpn left
[16:18] *** Kaiepi joined
[16:46] *** melezhik joined
[16:46] <melezhik> .

[16:47] *** melezhik left
[16:53] *** jpn joined
[16:58] *** jpn left
[17:03] *** Sevalecan is now known as maximus

[17:11] *** jpn joined
[17:16] *** jpn left
[17:30] *** melezhik joined
[17:30] *** melezhik left
[17:45] *** sena_kun left
[17:46] *** grondilu left
[17:47] *** sena_kun joined
[17:55] *** ProperNoun left
[18:00] *** ProperNoun joined
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:28] *** retroman joined
[18:28] *** retroman left
[18:30] *** Xliff joined
[18:31] *** Homer_Simpson joined
[18:33] <Homer_Simpson> is there a way to print str from my @a = (["string1", "string2"]); but without using  a method

[18:33] <Homer_Simpson> i,e using operators

[18:34] <Homer_Simpson> or if not can I just make a character array instead of using a  string type

[18:36] <Homer_Simpson> str from string1

[18:38] <Homer_Simpson>  I could do the retarded way but this doesnt work with a scalar: my @a = ('s','t','r','i','n','g','1');

[18:43] *** jpn joined
[18:48] *** jpn left
[18:53] <Juerd> Homer_Simpson: I don't understand your question.

[18:54] <discord-raku-bot> <Nemokosch> same, kind of

[18:54] <Homer_Simpson> I want to print str (for example from the string "string1"

[18:55] <discord-raku-bot> <Nemokosch> so far so good, what next?

[18:55] <Homer_Simpson> but without using .trim or any other method

[18:56] <Juerd> Homer_Simpson: What do you mean by "print str"?

[18:56] <Juerd> "string1" is a Str and you can print it

[18:56] <Homer_Simpson> I want to print "stri" for example

[18:56] <Juerd> Have a look at substr

[18:56] <Homer_Simpson> or whatever

[18:57] <Homer_Simpson> is it a method

[18:57] <Juerd> m: print substr "string1", 0, 4

[18:57] <camelia> rakudo-moar cdc9aa987: OUTPUT: «stri»

[18:57] <discord-raku-bot> <Nemokosch> method, subroutine, whatever you prefer

[18:58] <Homer_Simpson> ok that seems to work I guess

[19:01] <Homer_Simpson> my @a = (["string1]);

[19:01] <Homer_Simpson> print(substr(@a[0], 0, 4)); #fail

[19:01] <Homer_Simpson> never mind

[19:02] <Homer_Simpson> ok what if I wanted a raw array

[19:02] <discord-raku-bot> <Nemokosch> by the way, ([]) is kinda paranoid. The outer () is not doing anything

[19:02] <Juerd> Homer_Simpson: What is a "raw" array?

[19:03] <Homer_Simpson> oh ok, im coming from perl 5

[19:03] <Homer_Simpson> its a byte array

[19:03] <Juerd> Raku has Buf for byte buffers

[19:03] <discord-raku-bot> <Nemokosch> in fact, in this case, not even [] is really doing anything, iirc

[19:04] <discord-raku-bot> <Nemokosch> the assignment takes care of all this

[19:04] <Homer_Simpson> yes, It is just to make it obvious that its a single dimentional array

[19:05] <Homer_Simpson> I wish raku could do [2][2], instead  you gotta do [2;2]

[19:05] <Homer_Simpson> ill try buf thx

[19:05] <discord-raku-bot> <Nemokosch> Raku can do [2][2], what do you mean

[19:06] <discord-raku-bot> <Nemokosch> one more thing: don't forget that [] is rather a way of conversion than "encapsulation" (or how to put it)

[19:06] <discord-raku-bot> <Nemokosch> it's the comma that builds the list

[19:07] <Homer_Simpson> I get an error saying "sorry multiple shapes not yet supported!"

[19:07] *** Nemokosch joined
[19:07] <Nemokosch> then there is something else off with the code

[19:07] <Xliff> \o

[19:08] <Xliff> Regarding NativeCall and C function pointers... could subsets be used to make them reusable?

[19:08] <Xliff> Full disclosure: I am trying to revisit this: https://github.com/Raku/problem-solving/issues/98#issue-489427474

[19:08] <Xliff> Oh.. how rude of me. Merry Christmas, everyone!

[19:08] <Xliff> Nemokosch: Here -> https://github.com/Xliff - that's the total of all of my Raku projects.

[19:09] <Xliff> Homer_Simpson: Can we see what the problem code is? Generaly that means that you are trying to access an array in more than one dimension.

[19:09] <Nemokosch> m: (1..10).batch(3)[1][2].say

[19:09] <camelia> rakudo-moar cdc9aa987: OUTPUT: «6␤»

[19:09] <Homer_Simpson> my @a[2][2] = ([0,0],[0,0]); 

[19:09] <Xliff> Yeah.

[19:10] <Xliff> m: my @a[2;2] = ([0, 0], [0, 0]); @a.gist.say

[19:10] <camelia> rakudo-moar cdc9aa987: OUTPUT: «[[0 0]␤ [0 0]]␤»

[19:10] <Nemokosch> but why would you do that on declaration...

[19:10] <Xliff> Use a semicolon. Not another set of square braces.

[19:10] <Homer_Simpson> same applies if I try and do print(@a[0][0]);

[19:11] <Xliff> m: my @a[2;2] = ([0, 0], [0, 0]); @a[0;0].say

[19:11] <camelia> rakudo-moar cdc9aa987: OUTPUT: «0␤»

[19:11] <Nemokosch> m: use v6.e.PREVIEW; (1..10).batch(3).snitch.[1].snitch.[2].say

[19:11] <camelia> rakudo-moar cdc9aa987: OUTPUT: «((1 2 3) (4 5 6) (7 8 9) (10))␤6␤(4 5 6)␤»

[19:12] <Xliff> Nemokosch: That will always work, since you are using references for the extra dimension.

[19:12] <Nemokosch> the order is a bit funky, I don't quite grasp this snitch method yet

[19:12] <Nemokosch> anyway, it does work very apparently

[19:12] <Homer_Simpson> maybe its my compiler

[19:13] <Nemokosch> Xliff: I mean, is the goal that it don't work? :D

[19:13] <Xliff> Nemokosch: No. That's not t he goal. It's just not completed, yet.

[19:14] <Nemokosch> having said that, I don't see much value in shaped array declarations when you can just nest arrays

[19:14] <Xliff> TIMTOWTDI

[19:14] <Nemokosch> and it seems that people shared this opinion enough to always have greater priorities

[19:15] <Homer_Simpson> yeah I tried nested arrays, those work

[19:15] <Xliff> Nemokosch: I think the completed object will make column access easier.

[19:15] <Nemokosch> what is "the completed object"?

[19:15] <Xliff> m: (1..10).batch(3).map( *[1] ).say 

[19:15] <camelia> rakudo-moar cdc9aa987: OUTPUT: «(2 5 8 Nil)␤»

[19:16] <Xliff> Yes, that's easy enough, but not as easy as [for example] "(1..10).batch(3).col(2)"

[19:16] <Xliff> Or .col(1), really

[19:20] <Nemokosch> It's probably not as easy on the runtime, either, as sequential access of elements...

[19:21] <Nemokosch> This is sort of whataboutism but I would rather any optimisation on data structures before adding more sugar for expensive operations

[19:21] <Nemokosch> (looking at you, Daniel :P)

[20:06] *** Nemokosch left
[20:10] *** jpn joined
[20:12] *** Sgeo joined
[20:15] *** jpn left
[20:16] <[Coke]> i think shaped arrays can use more compact storage

[20:31] *** guifa_ left
[20:41] *** maximus is now known as Sevalecan

[21:06] *** jpn joined
[21:11] *** jpn left
[21:29] *** Homer_Simpson left
[21:36] *** xinming joined
[21:38] *** melezhik joined
[21:39] *** melezhik left
[21:39] *** melezhik joined
[21:43] *** melezhik left
[21:51] *** Xliff left
[22:01] <Voldenet> Merry christmas #raku

[22:01] <smol-hors> 🎄 🦋

[22:10] <MasterDuke> i'm not 100% sure that shaped arrays do actually use more compact storage right now, but that is the idea

[22:14] *** jpn joined
[22:21] *** jpn left
[22:25] *** guifa_ joined
[23:05] *** sena_kun left
