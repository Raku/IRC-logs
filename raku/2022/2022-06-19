[00:03] *** Garbanzo joined
[00:07] *** reportable6 left
[00:08] *** reportable6 joined
[00:47] *** eseyman left
[00:55] *** eseyman joined
[00:56] *** Sankalp left
[00:56] *** Sankalp- joined
[00:57] *** Sankalp- is now known as Sankalp

[01:57] *** benchable6 left
[01:57] *** sourceable6 left
[01:57] *** bloatable6 left
[01:57] *** statisfiable6 left
[01:57] *** tellable6 left
[01:57] *** committable6 left
[01:57] *** unicodable6 left
[01:57] *** nativecallable6 left
[01:57] *** notable6 left
[01:57] *** quotable6 left
[01:57] *** shareable6 left
[01:57] *** evalable6 left
[01:57] *** greppable6 left
[01:57] *** coverable6 left
[01:57] *** reportable6 left
[01:57] *** releasable6 left
[01:57] *** bisectable6 left
[01:57] *** linkable6 left
[01:57] *** shareable6 joined
[01:57] *** releasable6 joined
[01:58] *** notable6 joined
[01:58] *** linkable6 joined
[01:58] *** committable6 joined
[01:58] *** unicodable6 joined
[01:58] *** evalable6 joined
[01:59] *** greppable6 joined
[01:59] *** coverable6 joined
[01:59] *** benchable6 joined
[01:59] *** sourceable6 joined
[01:59] *** tellable6 joined
[01:59] *** bloatable6 joined
[01:59] *** bisectable6 joined
[01:59] *** quotable6 joined
[01:59] *** statisfiable6 joined
[01:59] *** nativecallable6 joined
[02:00] *** reportable6 joined
[03:00] *** quotable6 left
[03:00] *** coverable6 left
[03:00] *** sourceable6 left
[03:00] *** shareable6 left
[03:00] *** notable6 left
[03:00] *** tellable6 left
[03:00] *** linkable6 left
[03:00] *** nativecallable6 left
[03:00] *** evalable6 left
[03:00] *** bloatable6 left
[03:00] *** greppable6 left
[03:00] *** benchable6 left
[03:00] *** reportable6 left
[03:00] *** bisectable6 left
[03:00] *** unicodable6 left
[03:00] *** releasable6 left
[03:00] *** committable6 left
[03:00] *** statisfiable6 left
[03:00] *** statisfiable6 joined
[03:00] *** shareable6 joined
[03:00] *** evalable6 joined
[03:00] *** benchable6 joined
[03:00] *** bloatable6 joined
[03:01] *** tellable6 joined
[03:01] *** releasable6 joined
[03:01] *** unicodable6 joined
[03:01] *** quotable6 joined
[03:01] *** greppable6 joined
[03:02] *** sourceable6 joined
[03:02] *** linkable6 joined
[03:02] *** reportable6 joined
[03:02] *** nativecallable6 joined
[03:02] *** coverable6 joined
[03:02] *** notable6 joined
[03:02] *** bisectable6 joined
[03:03] *** committable6 joined
[03:36] *** ToddAndMargo joined
[03:38] <ToddAndMargo> newbie question: is there a way I can create a buf such that I can dynamically add toit, like a string, or do I always have to allocate their size with the .new at creation?

[03:46] *** discord-raku-bot left
[03:47] *** discord-raku-bot joined
[04:01] *** guifa left
[04:11] *** ToddAndMargo left
[04:12] *** Sgeo joined
[04:41] *** sftp left
[04:42] *** sftp joined
[05:42] *** coverable6 left
[05:42] *** nativecallable6 left
[05:42] *** bloatable6 left
[05:42] *** notable6 left
[05:42] *** tellable6 left
[05:42] *** committable6 left
[05:42] *** reportable6 left
[05:42] *** benchable6 left
[05:42] *** linkable6 left
[05:42] *** shareable6 left
[05:42] *** unicodable6 left
[05:42] *** quotable6 left
[05:42] *** sourceable6 left
[05:42] *** greppable6 left
[05:42] *** releasable6 left
[05:42] *** evalable6 left
[05:42] *** statisfiable6 left
[05:42] *** bisectable6 left
[05:42] *** nativecallable6 joined
[05:42] *** evalable6 joined
[05:43] *** greppable6 joined
[05:43] *** unicodable6 joined
[05:43] *** quotable6 joined
[05:43] *** benchable6 joined
[05:43] *** bloatable6 joined
[05:43] *** reportable6 joined
[05:43] *** linkable6 joined
[05:44] *** shareable6 joined
[05:44] *** committable6 joined
[05:44] *** coverable6 joined
[05:44] *** releasable6 joined
[05:44] *** statisfiable6 joined
[05:45] *** notable6 joined
[05:45] *** bisectable6 joined
[05:45] *** sourceable6 joined
[05:45] *** tellable6 joined
[05:49] *** Garbanzo left
[06:08] *** reportable6 left
[06:09] *** reportable6 joined
[06:15] *** frost joined
[06:42] *** melezhik joined
[06:44] <melezhik> Anton Antonov I do see last builds failed for Data Reshaper on sparkyci - sparrowhub.io:2222/report/665 hopefully you will this useful

[06:48] *** melezhik left
[06:52] <nine> TodddAndMargo: you dont have to allocate the size at all. Buf will auto grow when you https://docs.raku.org/type/Buf#method_push or assign to a position outside its current size

[06:52] <tellable6> nine, I'll pass your message to ToddAndMargo

[07:21] *** Sankalp left
[07:25] <discord-raku-bot> <Anton Antonov#7232> <@779471841270038528> Thanks ‚Äî I will investigate.

[07:47] *** Sankalp joined
[07:58] *** melezhik joined
[07:59] *** melezhik left
[07:59] *** melezhik joined
[08:00] *** melezhik left
[08:02] *** ToddAndMargo joined
[08:02] <ToddAndMargo> anyone on newbie duty?

[08:02] <tellable6> 2022-06-19T06:52:01Z #raku <nine> TodddAndMargo: you dont have to allocate the size at all. Buf will auto grow when you https://docs.raku.org/type/Buf#method_push or assign to a position outside its current size

[08:03] <ToddAndMargo> Hi tellable6. Thank you!¬† got it working!

[08:04] *** frost left
[08:07] <ToddAndMargo> I have a string `$x ="0x1B, 0xB6, 0x7A, 0xE8, 0x5A"`.¬† I would like to load these values into a new buffer using `my buf8 $y = buf8.new( 0x1B, 0xB6, 0x7A, 0xE8, 0x5A )` EXCEPT I want to use the string variable to do such.¬† `my buf8 $y = buf8.new( $x )`¬† does not work.¬† How do I get a variable to work inside .new?

[08:19] <discord-raku-bot> <Nemokosch#9980> It was nine üòÇ

[08:20] <discord-raku-bot> <Nemokosch#9980> Tellable is the name of the IRC bot

[08:20] <discord-raku-bot> <Nemokosch#9980> Just like I'm writing via the discord bridge

[08:21] <discord-raku-bot> <Nemokosch#9980> Anyway... so the string contains all the data you'd like to pass?

[08:22] <ToddAndMargo> yes

[08:24] <ToddAndMargo> so far I wind up with with ord("0"),ord("x"),ord("1"),etc. using encode.¬† Not the hex values in the string

[08:24] <discord-raku-bot> <Nemokosch#9980> Perhaps not the nicest solution but you could definitely compose an EVAL call.

[08:24] <discord-raku-bot> <Nemokosch#9980> If you want to parse the string into values, split and comb can be your friend

[08:25] <ToddAndMargo> can you show me a quick example using some of my values?

[08:25] <nine> Start out with a string holding a single one of those values. Once you made it with that, you can try a string with multiple values.

[08:25] <nine> Programming is all about making your own life easier.

[08:26] <discord-raku-bot> <Nemokosch#9980> https://docs.raku.org/routine/parse-base

[08:26] <ToddAndMargo> My 2 cents: the purpose of a computer is to automate repatives tasks

[08:28] <Kaiepi> ToddAndMargo, saw your mailing list post, but am unsure how to reply from thunderbird. there's a list of encodings in Encoding::Registry (src/core.c/Encoding/Registry.pm6), though it doesn't appear to be exposed beyond its find method

[08:28] <discord-raku-bot> <Nemokosch#9980> That's what scripting is all about, pretty much :)

[08:28] <discord-raku-bot> <Nemokosch#9980> Id go about it using comb and parse-base, that's for sure

[08:29] <ToddAndMargo> any chance of a comb and parse-base example?

[08:29] <ToddAndMargo> I am about to do it with a loop

[08:31] *** discord-raku-bot left
[08:31] *** discord-raku-bot joined
[08:31] <discord-raku-bot> <Anton Antonov#7232> <@779471841270038528> I cannot reproduce that failure of http://sparrowhub.io:2222/report/665 . I just installed successfully the package on newly downloaded 2022.04 and 2022.06. I will try to make SparkyCI setup.

[08:31] <discord-raku-bot> <Anton Antonov#7232> <@779471841270038528> I cannot reproduce that failure of http://sparrowhub.io:2222/report/665 . I just installed successfully the package on newly downloaded 2022.04 and 2022.06. I will try to make a SparkyCI setup.

[08:32] <discord-raku-bot> <Nemokosch#9980> I'm not at a PC so I might mess up sth

[08:35] *** lichtkind joined
[08:37] *** discord-raku-bot left
[08:37] *** discord-raku-bot joined
[08:38] <ToddAndMargo> This would work in a loop: `> say "0xBB".Int.base(16)`¬† BB¬† Push the on one at a time

[08:39] <discord-raku-bot> <Nemokosch#9980> ```perl

[08:39] <discord-raku-bot> <Nemokosch#9980> my $x = '0x1B, 0xB6, 0x7A, 0xE8, 0x5A';

[08:39] <discord-raku-bot> <Nemokosch#9980> my @int-values <==

[08:39] <discord-raku-bot> <Nemokosch#9980>     $x.comb: / '0x' <( <[0-9A-F]>{2} )> /

[08:39] <discord-raku-bot> <Nemokosch#9980>     andthen .map: *.parse-base(16);

[08:39] <discord-raku-bot> <Nemokosch#9980> ```

[08:39] <discord-raku-bot> <Nemokosch#9980> Id be happy if someone could check this

[08:41] <nine> ToddAndMargo: of course you are free to ignore my advise. Your loss

[08:42] <ToddAndMargo> Hi Nine, Do you mean "Start out with a string holding a single one of those values".¬† I have not been able to get that working

[08:43] <discord-raku-bot> <Nemokosch#9980> Oof

[08:44] <discord-raku-bot> <Nemokosch#9980> The thing is, I'm not sure about the interface of Buf itself

[08:45] <discord-raku-bot> <Nemokosch#9980> But what I posted, assuming I haven't messed it up, should turn the string into an array of integers with the right value

[08:49] *** discord-raku-bot left
[08:49] *** discord-raku-bot joined
[09:13] *** melezhik joined
[09:13] <melezhik> .

[09:14] *** melezhik left
[09:15] *** lichtkind_ joined
[09:17] *** lichtkind left
[09:21] <ToddAndMargo> buf8 wont push an integer either

[09:25] <ToddAndMargo> Did I just trip across a bug? > my uint8 $z = 0xBC;

[09:25] <ToddAndMargo> 188

[09:25] <ToddAndMargo> [9] > say $z.base(16);

[09:25] <ToddAndMargo> Cannot invoke object of type 'NQPMu'

[09:25] <ToddAndMargo> ¬† in any¬† at gen/moar/stage2/NQPCORE.setting line 893

[09:25] <ToddAndMargo> `

[09:30] <nine> m: my uint8 $z = 0xBC; say $z.base(16);

[09:30] <camelia> rakudo-moar d253dc79e: OUTPUT: ¬´BC‚ê§¬ª

[09:33] *** Sgeo left
[09:35] *** thundergnat joined
[09:36] <ToddAndMargo> break it up into two lines:

[09:36] <thundergnat> m: my $x = '0x84 0x73 0x77 0x84 0x79 0x87 0x84 0x68 0x73'; say Buf.new($x.match(/(<xdigit> ** 2)/, :g)¬ª.Str¬ª.Int).decode;

[09:36] <camelia> rakudo-moar d253dc79e: OUTPUT: ¬´TIMTOWTDI‚ê§¬ª

[09:37] <ToddAndMargo> > my uint8 $z = 0xBC; say $z.base(16);

[09:37] <ToddAndMargo> BC

[09:37] <ToddAndMargo> > my uint8 $z = 0xBC;

[09:37] <ToddAndMargo> 188

[09:37] <ToddAndMargo> > say $z.base(16);

[09:37] <ToddAndMargo> Cannot invoke object of type 'NQPMu'

[09:37] <ToddAndMargo> ¬† in any¬† at gen/moar/stage2/NQPCORE.setting line 893

[09:37] <ToddAndMargo> That is the bug.

[09:37] <ToddAndMargo> Fedora 35; rakudo-pkg-2022.6.0-01.x86_64

[09:39] <nine> REPL has many issues

[09:40] <ToddAndMargo> > my Str $x = '0x84 0x73 0x77 0x84 0x79 0x87 0x84 0x68 0x73'

[09:40] <ToddAndMargo> 0x84 0x73 0x77 0x84 0x79 0x87 0x84 0x68 0x73

[09:40] <ToddAndMargo> > my buf8 $y = buf8.new($x.match(/(<xdigit> ** 2)/, :g)¬ª.Str¬ª.Int).decode;

[09:40] <ToddAndMargo> Type check failed in assignment to $y; expected Buf[uint8] but got Str ("TIMTOWTDI")

[09:40] <ToddAndMargo> ¬† in block <unit> at <unknown file> line 1

[09:41] <ToddAndMargo> REPL is getting better.¬† It use to not let me constrain variables with Str and such

[09:44] <thundergnat> Well you've decoded it into a string. I just decoded it to demonstrate that it was indeed a buf.

[09:46] <thundergnat> m: m: my $x = '0x84 0x73 0x77 0x84 0x79 0x87 0x84 0x68 0x73'; say Buf.new($x.match(/(<xdigit> ** 2)/, :g)¬ª.Str¬ª.Int)

[09:46] <camelia> rakudo-moar d253dc79e: OUTPUT: ¬´Buf:0x<54 49 4D 54 4F 57 54 44 49>‚ê§¬ª

[09:49] <ToddAndMargo> Well, buf finally takes the data, but it does not come out right

[09:49] <ToddAndMargo> > my Str $x = '0x84 0x73 0x77 0x84 0x79 0x87 0x84 0x68 0x73'

[09:49] <ToddAndMargo> 0x84 0x73 0x77 0x84 0x79 0x87 0x84 0x68 0x73

[09:49] <ToddAndMargo> > my buf8 $y = buf8.new($x.match(/(<xdigit> ** 2)/, :g)¬ª.Str¬ª.Int);

[09:49] <ToddAndMargo> Buf[uint8]:0x<54 49 4D 54 4F 57 54 44 49>

[09:51] <thundergnat> Just be careful about decimal - hexadecimal conversion (like I screwed up above)

[09:51] <thundergnat> m: my $x = '0x54 0x49 0x4d 0x54 0x4f 0x57 0x54 0x44 0x49'; say Buf.new($x.match(/(<xdigit> ** 2)/, :g)¬ª.Str¬ª.parse-base(16));

[09:51] <camelia> rakudo-moar d253dc79e: OUTPUT: ¬´Buf:0x<54 49 4D 54 4F 57 54 44 49>‚ê§¬ª

[09:52] <ToddAndMargo> Works

[09:52] <ToddAndMargo> thank you!

[09:54] <ToddAndMargo> oops!

[09:54] <ToddAndMargo> > my buf8 $y = buf8.new($x.match(/(<xdigit> ** 2)/, :g)¬ª.Str¬ª.Int);

[09:54] <ToddAndMargo> Buf[uint8]:0x<54 49 4D 54 4F 57 54 44 49>

[09:54] <ToddAndMargo> ¬†> my buf8 $y = buf8.new($x.match(/(<xdigit> ** 2)/, :g)¬ª.Str¬ª.parse-base(16));

[09:54] <ToddAndMargo> Buf[uint8]:0x<84 73 77 84 79 87 84 68 73>

[09:54] <ToddAndMargo> still not right

[09:55] <discord-raku-bot> <Nemokosch#9980> Well, what's not right about it

[09:58] <ToddAndMargo> 0x54 ne 0x84 and so on

[09:59] <thundergnat> Like I said, be careful about decimal hexadecimal conversion. The ¬ª.Int was a thinko on my part.

[09:59] <discord-raku-bot> <Nemokosch#9980> Well it is the timtowdi string

[10:01] <discord-raku-bot> <Nemokosch#9980> And i would still pick comb over match :P

[10:02] <thundergnat> TIMTOWTDI

[10:02] <discord-raku-bot> <Nemokosch#9980> You immediately don't need either :g or the >>.Str part

[10:02] <ToddAndMargo> something is funny.¬† Give me a few minutes to double check some stuff

[10:03] <thundergnat> Um. Well. Yes you do.

[10:03] <discord-raku-bot> <Nemokosch#9980> That seems kinda superior to me

[10:04] <thundergnat> Oh wait, when you use comb. Ok yes you are correct.

[10:04] <discord-raku-bot> <Nemokosch#9980> :P

[10:04] <ToddAndMargo> My fault.¬† Much better now.¬† I restart REPL and started over.

[10:04] <ToddAndMargo> > my Str $x = '0x84 0x73 0x77 0x84 0x79 0x87 0x84 0x68 0x73'

[10:04] <ToddAndMargo> > my buf8 $y = buf8.new($x.match(/(<xdigit> ** 2)/, :g)¬ª.Str¬ª.parse-base(16));

[10:04] <ToddAndMargo> Buf[uint8]:0x<84 73 77 84 79 87 84 68 73>

[10:05] <ToddAndMargo> thankyouthankyouthankyouthankyouthankyouthankyouthankyouthankyou

[10:08] <discord-raku-bot> <Nemokosch#9980> TIL <xdigit> and ** in  regex

[10:09] <thundergnat> You pick this stuff up over time. Raku is a large language.

[10:10] <thundergnat> And I've been messing around with it off and on since long before it was Raku

[10:11] <thundergnat> My oldest module is from 2010

[10:20] *** Guest99 joined
[10:20] <Guest99> Hello

[10:21] <Guest99> How do i loop chars backwards in a string?

[10:21] <Guest99> my $word = "1234567890";

[10:21] <Guest99> loop (my $i = 0; $i < $word.chars(); $i++) {

[10:21] <Guest99> ¬† ¬† say substr $word, $i, 1;

[10:21] <Guest99> }

[10:21] <Guest99> I can do it only forward

[10:22] <Guest99> I want to see 0 9 8 7 6 5 4 3 2 1

[10:22] *** guer joined
[10:34] <discord-raku-bot> <Anton Antonov#7232> @Guest99 You can just do `$word.comb.reverse`

[10:36] <lizmat> m: .say for "1234567890".flip.comb

[10:36] <camelia> rakudo-moar d253dc79e: OUTPUT: ¬´0‚ê§9‚ê§8‚ê§7‚ê§6‚ê§5‚ê§4‚ê§3‚ê§2‚ê§1‚ê§¬ª

[10:37] <Guest99> thank you very much

[10:37] <discord-raku-bot> <Anton Antonov#7232> @Guest99 If you really want to use a loop you can do:

[10:37] <discord-raku-bot> <Anton Antonov#7232> ```

[10:37] <discord-raku-bot> <Anton Antonov#7232> for ($word.chars-1)...0 -> $i {

[10:37] <discord-raku-bot> <Anton Antonov#7232>     say substr $word, $i, 1;

[10:37] <discord-raku-bot> <Anton Antonov#7232> }

[10:37] <discord-raku-bot> <Anton Antonov#7232> ```

[10:40] *** discord-raku-bot left
[10:40] *** discord-raku-bot joined
[10:41] <lizmat> m: my $word = "foo"; say $word.substr($_,1) for  (^$word.chars).reverse

[10:41] <camelia> rakudo-moar d253dc79e: OUTPUT: ¬´o‚ê§o‚ê§f‚ê§¬ª

[10:42] *** Guest99 left
[10:45] <ToddAndMargo> Thank you! Signing off

[11:21] *** ToddAndMargo left
[11:51] <discord-raku-bot> <Nemokosch#9980> What is flip?

[11:54] <Voldenet> a move like this: o/  o`  `o   \o  _o    o_  o/

[11:55] <Voldenet> a Str routine that reverses a string

[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:39] *** Nemokosch joined
[12:41] <discord-raku-bot> <Nemokosch#9980> this looks completely unreadable thanks to markdown üòÖ

[13:05] <uzl[m]> m: say 'hello'.flip eq 'olleh'

[13:05] <camelia> rakudo-moar d253dc79e: OUTPUT: ¬´True‚ê§¬ª

[13:08] <uzl[m]> I wonder if there's a set of test cases for common data structures ü§î Like let's say I'm implementing DFS traversal on a BT, it'd be nice to have a series of test cases that I could simply plug into my language's test suite 

[13:14] <Voldenet> I wonder if there's any plans to support things like python's `with` automatically closing the underlying resource

[13:17] <Voldenet> I'm using libarchive and `with archive-write("out.zip") { ‚Ä¶; .close }` is bug-prone for no useful reason

[13:21] *** cmburn joined
[13:21] *** cmburn left
[13:22] *** cmburn joined
[13:22] *** cmburn left
[13:22] *** cmburn joined
[13:22] *** cmburn left
[13:23] *** cmburn joined
[13:23] *** cmburn left
[13:23] *** cmburn joined
[13:24] *** cmburn left
[13:24] *** cmburn joined
[13:24] *** cmburn left
[13:30] <discord-raku-bot> <Nemokosch#9980> yeah not sure it should be related to `with` though

[13:30] <discord-raku-bot> <Nemokosch#9980> that's rather confusing in Python as well

[13:33] *** discord-raku-bot left
[13:33] *** discord-raku-bot joined
[13:35] <lizmat> Voldenet: what is wrong with .spurt ?

[13:45] <Voldenet> `libarchive` is the key word here, the full code is something like `with archive-write($storage.file, format => 'zip') { .write: 'file1', $blob; .close }`

[13:46] <Voldenet> and, ofc, I forgot the .close

[13:47] <Voldenet> it's minor pain though, doesn't happen often

[13:59] <lizmat> https://docs.raku.org/routine/spurt#(IO::Handle)_method_spurt

[14:00] <lizmat> .spurt: "file1", $blob ?

[14:00] <lizmat> then you cannot forget the close ?

[14:02] <Voldenet> but then you keep opening archive for every file

[14:02] <Voldenet> not exactly nice if you have more than 100 files

[14:02] <lizmat> but wouldn't you need to re-open everytime if you're closing ?

[14:03] * lizmat apparently doesn't understand the problem

[14:04] <Voldenet> `with archive-write($storage.file, format => 'zip') { for ^100 -> $n { .write: 'file' ~ $n, $n.Str; }; .close }`

[14:09] <lizmat> hmm.  I misread the docs: .spurt on IO::Handle actually doesn't close by default

[14:09] <lizmat> on IO::Path it does  :)

[14:09] <lizmat> afk&

[14:33] *** evalable6 left
[14:33] *** linkable6 left
[14:34] *** evalable6 joined
[14:35] *** linkable6 joined
[15:20] *** Garbanzo joined
[15:29] <Util> uzl[m]: I have also wished for such, for data structures and special functions.

[15:29] <Util> I have had success scraping special function test data from https://www.boost.org/ ; the Stanford GraphBase *might* have what you need for some data structures: https://www-cs-faculty.stanford.edu/~knuth/sgb.html

[15:35] *** discord-raku-bot left
[15:36] *** discord-raku-bot joined
[15:57] *** Garbanzo left
[16:28] *** guer left
[16:42] *** Nemokosch left
[16:43] <discord-raku-bot> <Anton Antonov#7232> I see that the routine `combinations` produces sorted lists -- each list is a combination -- but is that guaranteed ?

[16:48] <discord-raku-bot> <Nemokosch#9980> https://docs.raku.org/routine/combinations

[16:49] <discord-raku-bot> <Nemokosch#9980> okay gg I might have missed the key word

[16:49] <discord-raku-bot> <Nemokosch#9980> "sorted"

[16:49] <discord-raku-bot> <Nemokosch#9980> But then I'm not sure what you mean, actually

[16:51] <discord-raku-bot> <Nemokosch#9980> you mean that the elements appear in the same order as in the original list?

[16:51] <discord-raku-bot> <Anton Antonov#7232> Yes! Thanks.

[16:51] <discord-raku-bot> <Anton Antonov#7232> See this code: 

[16:51] <discord-raku-bot> <Anton Antonov#7232> ```

[16:51] <discord-raku-bot> <Anton Antonov#7232> my $t = ("A"..."F").pick(6); 

[16:51] <discord-raku-bot> <Anton Antonov#7232> say $t;

[16:51] <discord-raku-bot> <Anton Antonov#7232> say $t.combinations(3)

[16:51] <discord-raku-bot> <Anton Antonov#7232> ```

[16:53] <discord-raku-bot> <Nemokosch#9980> hm I don't see any note about it in the docs... Roast should be checked

[17:01] *** Xliff joined
[17:17] *** sena_kun left
[17:21] *** sena_kun joined
[17:33] *** perlbot left
[17:33] *** simcop2387 left
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:09] *** sena_kun left
[18:10] *** sena_kun joined
[18:12] *** Sgeo joined
[19:12] *** notable6 left
[19:12] *** quotable6 left
[19:12] *** coverable6 left
[19:12] *** benchable6 left
[19:12] *** greppable6 left
[19:12] *** bloatable6 left
[19:12] *** nativecallable6 left
[19:12] *** tellable6 left
[19:12] *** releasable6 left
[19:12] *** shareable6 left
[19:12] *** statisfiable6 left
[19:12] *** evalable6 left
[19:12] *** reportable6 left
[19:12] *** committable6 left
[19:12] *** bisectable6 left
[19:12] *** linkable6 left
[19:12] *** sourceable6 left
[19:12] *** unicodable6 left
[19:12] *** linkable6 joined
[19:12] *** sourceable6 joined
[19:12] *** bisectable6 joined
[19:13] *** statisfiable6 joined
[19:13] *** shareable6 joined
[19:13] *** coverable6 joined
[19:13] *** quotable6 joined
[19:13] *** reportable6 joined
[19:13] *** greppable6 joined
[19:13] *** notable6 joined
[19:14] *** bloatable6 joined
[19:14] *** tellable6 joined
[19:14] *** committable6 joined
[19:14] *** benchable6 joined
[19:15] *** evalable6 joined
[19:15] *** nativecallable6 joined
[19:15] *** unicodable6 joined
[19:15] *** releasable6 joined
[19:39] *** sena_kun left
[19:42] *** sena_kun joined
[20:03] *** simcop2387 joined
[20:04] *** perlbot joined
[20:25] <japhb> Anyone know how to deal with the MacOS "loading libcrypto in an unsafe way" failure on GHA?

[20:26] <japhb> https://github.com/japhb/Cro-CBOR/runs/6957373377?check_suite_focus=true#step:7:5

[20:29] <lizmat> japhb : https://github.com/rakudo/rakudo/blob/master/CAVEATS.md#macos

[20:38] *** vrurg_ is now known as vrurg

[20:39] <uzl[m]> Util: Thanks! Any specific directories you remember looking?

[20:40] <japhb> lizmat: Ah thank you.  What a damn mess

[20:40] <lizmat> yeah, jnthn is also becoming more and more enamoured with MacOS.  Not.

[21:07] <japhb> That plus the inability to create long-lived test certs (so requiring new releases of otherwise stable code just to make cert validation happy for -- again -- TEST certs) is making me grumbly today.

[21:23] <El_Che> japhb: what do you need specifically as certs?

[21:23] <El_Che> (longest is 1y nowadays)

[21:25] <japhb> El_Che: Yeah, I know about the 1 year limit.  What I want is for my otherwise completely stable code to not suddenly break because I didn't notice the TEST cert's window expiring.  I keep emphasizing TEST because it's bloody annoying when tests break for reasons completely unrelated to whether the code works.  :-(

[21:25] <japhb> It's hostile to people who contribute heavily to the ecosystem.

[21:27] <El_Che> japhb: and a long-lived self signed one + CA is not an option?

[21:28] <japhb> El_Che: Last I checked, a long-lived self-signed will fail validation.  The 1 year limit for leaf certs seems to be hard-enforced.

[21:32] <El_Che> I ask because I don't know how you validate stuff

[21:32] <El_Che> with openssl, by example, you can give the CA to use for validation

[21:33] <El_Che> (I don't know the code if it was not clear :) )

[21:38] *** evalable6 left
[21:38] *** linkable6 left
[21:39] *** linkable6 joined
[21:39] *** evalable6 joined
[22:20] <japhb> Right, you can override the CA, and that's expected for a test cert, but that doesn't help with the 1 year limit on the leaf cert, unless I'm misunderstanding you.

[22:32] *** Furor joined
[22:34] <Xliff> If I were to get a new Mac, what should I get?

[22:35] *** Colere left
[22:36] <vrurg> Xliff: depends on you budget and the purpose.

[22:38] <Xliff> vrurg: ~1800. Raku dev and general Mac use

[22:41] <vrurg> I'd consider a mini, unless you need a portable.

[23:23] <Xliff> Yeah, that's what I'd like, too.

[23:23] <Xliff> Any particular models in mind?

[23:32] <vrurg> Xliff: there is not so many options. Best is just to play with the constructor on the site.

[23:33] <vrurg> Surprisingly, they still sell Intel version.

[23:35] *** evalable6 left
[23:35] *** linkable6 left
[23:36] *** evalable6 joined
[23:38] *** linkable6 joined
[23:38] <vrurg> Xliff: What I don't like is the 16GB limit on M1 minis. I'd try to go a little over the budget and consider a Studio with M2 and 32G in the base.

[23:46] <SmokeMachine> Are there studios with M2 already?! I thought M2 was only for Mac book air and pro for now‚Ä¶

[23:50] <Geth> ¬¶ doc: coke self-assigned Fix duplicated index entries and avoid them in the future by adding a test. https://github.com/Raku/doc/issues/1912

[23:50] <Voldenet> It would be very useful to set up mac m1 VM from x86 machine, I wonder if anyone even tries implementing that

[23:58] <[Coke]> lizmat: Geth is reporting on assignment of issues in doc, but not creation of new issues

[23:58] <[Coke]> added https://github.com/Raku/doc/issues/4090 for anyone on the *-users list

