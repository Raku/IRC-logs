[00:06] *** reportable6 left
[00:08] *** reportable6 joined
[00:14] <discord-raku-bot> <Anton Antonov> @guifa Cook in a more segregational manner, then.

[00:15] <guifa> that's normally the plan.  I got sidetracked with some stuff and they ended up all over the place.  But finally getting them all to a cohesive point

[00:16] <discord-raku-bot> <Anton Antonov> For me "releasing to public" usually means writing a lot of documentation.

[00:16] <discord-raku-bot> <Anton Antonov> @guifa Do you have - and use -- a dependency graph of the packages you develop?

[00:18] <guifa> Yeah I have one — there was one point where I had to lay everything out to be very careful to avoid a circular dependency

[00:19] <guifa> and had to make the call for where I was ultiamtely going to have to duplicate some minor bits of code for the sake of modularity

[00:21] <discord-raku-bot> <Anton Antonov> @guifa Ok, a few related questions: 1) Is it automatically derived? 2) Is in some "formal" language, e.g. PlantUML or Mermaid-JS (not just JSON or XML) ?  3) If it is automatically derived, is it with a package?

[00:21] <guifa> 1 - no.  I just drew it in OmniGraffle haha

[00:22] <discord-raku-bot> <Anton Antonov> Yeah, unfortunately, it seems I "have to" duplicate functionalities to achieve modularity in my DSL packages.

[00:26] <guifa> I've managed to reduce it by a lot but it took a lot of work

[00:27] *** ToddAndMargo joined
[00:30] <discord-raku-bot> <Anton Antonov> I am interested in making these kind of package dependencies graph: https://i.imgur.com/33P7QmG.png . But instead of using Mathematica, to produce, say, Mermaid-JS, and/or graphviz specs.

[00:31] <ToddAndMargo> Windows-11 22H2.  Is there a way to get my session ID?  And predefined variables?  I need this for https://learn.microsoft.com/en-us/windows/win32/api/wtsapi32/nf-wtsapi32-wtssendmessagea  `[in]  DWORD  SessionId` when I am running as administrator from Task Scheduler (otherwise -1 works)

[00:31] <tellable6> 2022-11-12T10:08:17Z #raku <bartolin> ToddAndMargo: That looks like the problem described in https://github.com/rakudo/rakudo/issues/5096. I'd guess that Rakudo hasn't write permissions for a precomp directory when running as administrator.

[00:33] <ToddAndMargo> that sure looks like it.  And I did a native call right before I did exit.  But that did not happen on the other exact calls that were not followed by and exit.  I sighed up for the thread.   Thank you!!!

[00:37] <guifa> anton antonov: jeez.... yeah I keep my graph at the high level.  I tried to start to do one for Intl::CLDR and it was.... nightmarish lol

[00:37] <guifa> https://imgur.com/a/NwyOGXi

[00:37] <guifa> ^^ the complex web of international module dependencies

[00:47] <guifa> interesting

[00:47] <guifa> so I'm renaming a module

[00:47] <discord-raku-bot> <Anton Antonov> [![](https://mermaid.ink/img/pako:eNptkD0OwjAMha9SeYYLZGChqoQUdYBmIh0MNWkFSas0GRDi7qQlAfGTye99L7blGxz7hoCBsji0WZVLk4XHq7Hdb4y7MMbRKI-KKlSqG9s6S4lfXj_RmufbCKcyuoLvxUj2_SH6RRmzRW8NOsZKrw9kExVfVJjO1WmFbLlczbu-B0crzfyQRTlLwVPvWRblh3yFxb_wNAIWoMlq7Jpwt9uEJbiWNElgoWzQniVIcw859K7fXc0RmLOeFuCHBh3lHYZza2AnvIx0fwAAXnL4?type=png)](https://mermaid.live/edit#pako:eNptkD0OwjAMha9SeYYLZGChqoQUdYBmIh0MNWkFSas0GRDi7qQlAfGTye9

[00:48] <guifa> In the old name, I issue a warning and then do `use Foo::NewName`, and pass along all the symbols

[00:49] <guifa> all works well, including with named arguments but it bombs on positional ones

[00:49] <guifa> The error is "Could not evaluate arguments"

[00:49] <discord-raku-bot> <Anton Antonov> @guifa Here is a Mermaid-JS start:

[00:49] <discord-raku-bot> <Anton Antonov> ```

[00:49] <discord-raku-bot> <Anton Antonov> graph TD

[00:49] <discord-raku-bot> <Anton Antonov>     LTsh[Intl::LanguageTaggish] 

[00:49] <discord-raku-bot> <Anton Antonov>     LT[Intl::LanguageTag]

[00:49] <discord-raku-bot> <Anton Antonov>     CLDR[Intl::CLDR]

[00:49] <discord-raku-bot> <Anton Antonov>     UL[User::Language]

[00:49] <discord-raku-bot> <Anton Antonov>     FN[Intl::Fornat::Number]

[00:49] <discord-raku-bot> <Anton Antonov>     FU[Intl::Fornat::Unit]

[00:49] <discord-raku-bot> <Anton Antonov>     LT --> LTsh

[00:49] <discord-raku-bot> <Anton Antonov>     CLDR --> LT

[00:49] <discord-raku-bot> <Anton Antonov>     UL --> LT

[00:49] <discord-raku-bot> <Anton Antonov>     FN --> UL

[00:49] <discord-raku-bot> <Anton Antonov>     FU --> FN

[00:49] <discord-raku-bot> <Anton Antonov>     FU --> LT

[00:49] <discord-raku-bot> <Anton Antonov>     FU --> UL

[00:49] <discord-raku-bot> <Anton Antonov>     FU --> CLDR

[00:49] <discord-raku-bot> <Anton Antonov> ```

[00:51] <guifa> oh nice

[00:51] <discord-raku-bot> <Anton Antonov> @guifa Here is a Mermaid-JS start:

[00:51] <discord-raku-bot> <Anton Antonov> ```

[00:51] <discord-raku-bot> <Anton Antonov> graph TD

[00:51] <discord-raku-bot> <Anton Antonov>     LTsh[Intl::LanguageTaggish] 

[00:51] <discord-raku-bot> <Anton Antonov>     LT[Intl::LanguageTag]

[00:51] <discord-raku-bot> <Anton Antonov>     CLDR[Intl::CLDR]

[00:51] <discord-raku-bot> <Anton Antonov>     UL[User::Language]

[00:51] <discord-raku-bot> <Anton Antonov>     FN[Intl::Format::Number]

[00:51] <discord-raku-bot> <Anton Antonov>     FU[Intl::Format::Unit]

[00:51] <discord-raku-bot> <Anton Antonov>     LT --> LTsh

[00:51] <discord-raku-bot> <Anton Antonov>     CLDR --> LT

[00:51] <discord-raku-bot> <Anton Antonov>     UL --> LT

[00:51] <discord-raku-bot> <Anton Antonov>     FN --> UL

[00:51] <discord-raku-bot> <Anton Antonov>     FU --> FN

[00:51] <discord-raku-bot> <Anton Antonov>     FU --> LT

[00:51] <discord-raku-bot> <Anton Antonov>     FU --> UL

[00:51] <discord-raku-bot> <Anton Antonov>     FU --> CLDR

[00:51] <discord-raku-bot> <Anton Antonov> ```

[00:52] <discord-raku-bot> <Anton Antonov> @guifa You can enter that Mermaid code here: https://mermaid.live .

[00:53] <discord-raku-bot> <Anton Antonov> @guifa You can enter that Mermaid code here: https://mermaid.live .

[00:58] <perryprog> Anton, it might be better if you use a pastebin service for codeblocks

[00:59] <discord-raku-bot> <Anton Antonov> Ok, I will try.

[01:00] <perryprog> mainly for IRC readability and so discord-raku-bot doesn't get automatically kicked for flooding or something silly :P

[01:02] <discord-raku-bot> <Anton Antonov> I see...

[01:04] <perryprog> (I'm pretty certain that won't happen though since it looks like it's ratelimiting itself)

[01:04] *** ToddAndMargo left
[01:10] *** ToddAndMargo joined
[01:12] *** deoac joined
[01:13] *** Kaipei left
[01:17] *** deoac left
[01:24] <gfldex> perryprog: you are correct! see: https://gist.github.com/gfldex/c69612be47e078d090467bf3972fc3f2

[01:27] <guifa> The big issue is editing things means it resends all the messsages lol

[01:28] <discord-raku-bot> <Anton Antonov> Right ! I notice that some time ago -- should keep it in mind.

[01:32] *** mahafyi joined
[01:32] *** jjido left
[01:41] *** razetime joined
[01:53] *** frost joined
[02:04] <[Coke]> (package deps: https://github.com/coke/raku-zef-deps)

[02:13] <Geth> ¦ doc: 552607a6a1 | Coke++ | xt/search-categories.t

[02:13] <Geth> ¦ doc: Revert "slight improvement to output"

[02:13] <Geth> ¦ doc: 

[02:13] <Geth> ¦ doc: This reverts commit 830d524a39098cdda34d2fa375648d24dc266344.

[02:13] <Geth> ¦ doc: 

[02:13] <Geth> ¦ doc: the CI is using an old version of raku

[02:13] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/552607a6a1

[02:18] <Geth> ¦ doc: coke assigned to Altai-man Issue Put “Raku” in page titles https://github.com/Raku/doc/issues/3989

[02:22] <Geth> ¦ doc: coke self-assigned Clarify testing levels, supporting code and execution https://github.com/Raku/doc/issues/3935

[02:22] <Geth> ¦ doc: coke self-assigned error when binding variables https://github.com/Raku/doc/issues/3908

[02:53] *** linkable6 left
[02:53] *** evalable6 left
[02:55] *** evalable6 joined
[02:56] *** linkable6 joined
[03:00] *** frost left
[03:04] *** Geth left
[03:05] *** RakuIRCLogger left
[03:06] *** lizmat left
[03:10] *** euandreh left
[03:18] *** frost joined
[03:29] *** euandreh joined
[03:33] *** euandreh left
[03:33] *** euandreh joined
[03:38] *** razetime left
[03:40] *** euandreh left
[03:51] *** frost left
[04:08] *** euandreh joined
[04:09] <ToddAndMargo> I have to go.  If anyone wants to contact me, I am always looking at the perl6 mailing list or eMail me at ToddAndMargo@zoho.com

[04:09] *** ToddAndMargo left
[04:13] *** euandreh left
[04:31] *** razetime joined
[04:50] *** euandreh joined
[04:57] *** euandreh left
[05:04] *** kjp left
[05:06] *** kjp joined
[05:17] *** mahafyi left
[05:31] *** euandreh joined
[06:00] *** Guest95 left
[06:08] *** reportable6 left
[06:10] *** reportable6 joined
[07:10] *** bisectable6 left
[07:10] *** nativecallable6 left
[07:10] *** bloatable6 left
[07:10] *** releasable6 left
[07:10] *** linkable6 left
[07:10] *** committable6 left
[07:10] *** shareable6 left
[07:10] *** benchable6 left
[07:10] *** evalable6 left
[07:10] *** squashable6 left
[07:10] *** quotable6 left
[07:10] *** reportable6 left
[07:10] *** tellable6 left
[07:10] *** sourceable6 left
[07:10] *** unicodable6 left
[07:10] *** notable6 left
[07:10] *** coverable6 left
[07:11] *** notable6 joined
[07:11] *** bisectable6 joined
[07:11] *** releasable6 joined
[07:11] *** evalable6 joined
[07:11] *** benchable6 joined
[07:12] *** reportable6 joined
[07:12] *** bloatable6 joined
[07:12] *** unicodable6 joined
[07:12] *** tellable6 joined
[07:12] *** committable6 joined
[07:12] *** epony left
[07:13] *** shareable6 joined
[07:13] *** sourceable6 joined
[07:13] *** nativecallable6 joined
[07:13] *** coverable6 joined
[07:13] *** squashable6 joined
[07:13] *** linkable6 joined
[07:13] *** quotable6 joined
[07:16] *** sortiz left
[07:21] *** Kaipei joined
[07:30] *** abraxxa joined
[07:35] *** abraxxa left
[07:36] *** abraxxa joined
[07:36] *** mykhal left
[07:38] *** euandreh left
[08:05] <discord-raku-bot> <Nemokosch> I think resending on edits is a feature, not a bug

[08:05] <discord-raku-bot> <Nemokosch> The problem is, rather, that you cannot edit messages on IRC at all

[08:07] *** frost joined
[08:08] *** razetime left
[08:10] *** mykhal joined
[08:21] *** frost left
[08:22] *** razetime joined
[08:24] *** Sgeo left
[08:38] <discord-raku-bot> <Nemokosch> Is there a way to not count ANSI escape characters in strings?

[08:38] <discord-raku-bot> <Nemokosch> it would be highly useful for actual visual string width

[08:51] <CIAvash> m: my &string_width = *.subst(:g, /"\e[" <[0..9;]>+ 'm'/, '').chars; say string_width "\eThis is bold\e"

[08:51] <camelia> rakudo-moar 67513cb87: OUTPUT: «12␤»

[08:59] <discord-raku-bot> <Nemokosch> that much I understand... the deeper I look, the more demotivating this whole escape sequence business seems

[09:03] *** jaguart left
[09:03] *** jaguart joined
[09:09] *** dakkar joined
[09:19] <CIAvash> I don't know what you are doing, but there are modules for dealing with ANSI, https://raku.land/zef:lizmat/Terminal::ANSIColor https://raku.land/cpan:UZLUISF/Colorizable https://raku.land/cpan:BDUGGAN/Terminal::ANSI

[09:26] *** lizmat_ left
[09:27] *** lizmat joined
[09:30] <discord-raku-bot> <Nemokosch> Can I check the matching multi candidates for a certain capture?

[09:32] *** sena_kun joined
[09:33] <discord-raku-bot> <Nemokosch> CIAvash: I wanted to check Prettier::Table in case there is a low-hanging fruit - but didn't seem like that with this ANSI madness

[09:38] <discord-raku-bot> <Nemokosch> ohh, this is the cando method

[09:58] <SmokeMachine> m: use nqp; class Bla is Regex { method ACCEPTS($a) { my $slash = [ %(bla => $a), ] but NQPMatchRole; nqp::decont(nqp::getlexcaller(q[$/]) = $slash); $slash } }; say 42 ~~ Bla.bless; say $/ # Is Regex the only class allowed to return values when smart matched? Is this the only way of doing this?

[09:58] <camelia> rakudo-moar 67513cb87: OUTPUT: «[{bla => 42}]␤[{bla => 42}]␤»

[10:03] <discord-raku-bot> <Anton Antonov> Where is this method?

[10:03] <discord-raku-bot> <Nemokosch> https://docs.raku.org/routine/cando

[10:04] <discord-raku-bot> <Anton Antonov> I asked first then looked for it… 🙂

[10:05] <SmokeMachine> Is Regex the only class allowed to return value different from Bool when smart matched?

[10:05] <lizmat> there is no specific check on return values of .ACCEPTS methods in the core

[10:05] <lizmat> afaik

[10:05] <discord-raku-bot> <Nemokosch> SmokeMachine: what do you mean? I think anything can return any value from ACCEPTS and that value will be the return value of the smartmatch. The rest is all up to the context.

[10:05] <lizmat> indeed

[10:06] <discord-raku-bot> <Nemokosch> Moreover, there is the horrible anomaly I called out several times in the last couple of weeks: Match.ACCEPTS will just return itself, no matter what

[10:07] <lizmat> fwiw, I think this is all down to wanting to have Perlish behaviour for m:/foo/

[10:08] <SmokeMachine> m: class B { method ACCEPTS(|) { “not Bool” } }; say 42 ~~ B.new # it usually boolify it…

[10:08] <camelia> rakudo-moar 67513cb87: OUTPUT: «True␤»

[10:08] <discord-raku-bot> <Nemokosch> that's because of Callable.ACCEPTS

[10:08] <SmokeMachine> m: class B is Regex { method ACCEPTS(|) { “not Bool” } }; say 42 ~~ B.new # but not if it’s a regex…

[10:08] <camelia> rakudo-moar 67513cb87: OUTPUT: «Cannot make a B object using .new␤  in block <unit> at <tmp> line 1␤␤»

[10:08] <SmokeMachine> m: class B { method ACCEPTS(|) { “not Bool” } }; say 42 ~~ B.bless

[10:08] <camelia> rakudo-moar 67513cb87: OUTPUT: «True␤»

[10:09] <SmokeMachine> Something wrong on this example… but it’s true on my first example…

[10:09] <lizmat> m: class B { method ACCEPTS(|) { “not Bool” } }; dd B.bless

[10:09] <camelia> rakudo-moar 67513cb87: OUTPUT: «B.new␤»

[10:09] <lizmat> he

[10:10] <lizmat> m: class B { method ACCEPTS(|) { “not Bool” } }; dd B.ACCEPTS

[10:10] <camelia> rakudo-moar 67513cb87: OUTPUT: «"not Bool"␤»

[10:10] <lizmat> m: class B { method ACCEPTS(|) { “not Bool” } }; dd B.bless.ACCEPTS

[10:10] <camelia> rakudo-moar 67513cb87: OUTPUT: «"not Bool"␤»

[10:10] <SmokeMachine> But not with ~~

[10:10] <discord-raku-bot> <Nemokosch> lizmat: and you are right, probably. I wonder if it's worth it in the first place, and also, since it looks "slangish" like crazy, it could be syntax special-cased, if it's so important

[10:10] <lizmat> well, at one point in time is was considered very important...  

[10:11] <SmokeMachine> m: class B { method ACCEPTS(|) { “not Bool” but NQPMatchRole} }; say 42 ~~ B.new

[10:11] <camelia> rakudo-moar 67513cb87: OUTPUT: «1␤»

[10:14] <discord-raku-bot> <Nemokosch> maybe we can pull the RakuAST card again, and say it might become much easier to syntax special-case something when that lands

[10:15] <lizmat> well, it will definitely will make slangs much easier to make

[10:15] <lizmat> so theoretically, we could create a slang that would no longer have the current semantics

[10:15] <lizmat> and maybe make that the default for future language versions

[10:16] <El_Che> (would slang not result in perl-like critiques of "difficult to read") 

[10:16] <lizmat> there is always that

[10:17] <SmokeMachine> m: use nqp; class Bla is Regex { method ACCEPTS($a) { nqp::decont(nqp::getlexcaller(q[$/]) = $a); $a } }; say "Bla: ", 42 ~~ Bla.bless; say "Bla: ", $/; class Ble { method ACCEPTS($a) { nqp::decont(nqp::getlexcaller(q[$/]) = $a); $a } }; say "Blae: ", 42 ~~ Ble.bless; say "Ble: ", $/

[10:17] <camelia> rakudo-moar 67513cb87: OUTPUT: «Bla: 42␤Bla: 42␤Blae: True␤Ble: 42␤»

[10:17] <SmokeMachine> m: use nqp; class Bla is Regex { method ACCEPTS($a) { nqp::decont(nqp::getlexcaller(q[$/]) = $a); $a } }; say "Bla: ", 42 ~~ Bla.bless; say "Bla: ", $/; class Ble { method ACCEPTS($a) { nqp::decont(nqp::getlexcaller(q[$/]) = $a); $a } }; say "Ble: ", 42 ~~ Ble.bless; say "Ble: ", $/

[10:17] <camelia> rakudo-moar 67513cb87: OUTPUT: «Bla: 42␤Bla: 42␤Ble: True␤Ble: 42␤»

[10:18] <discord-raku-bot> <Nemokosch> El_Che: I think $foo ~~ m/ bar / is already "difficult to read" unless you specifically know this very structure by heart. It doesn't integrate well with the rest of the language. Same for this use of s, tr and all.

[10:19] <SmokeMachine> I'm testing it to try to make a RakuAST matcher and make it feels like Regexes/Grammars is anyone working on something like that?

[10:20] <discord-raku-bot> <Nemokosch> So my sentiment is rather, don't break the concept of ACCEPTS for the sake of this "insider slang"

[10:20] <discord-raku-bot> <Nemokosch> and right now, it is broken

[10:20] <discord-raku-bot> <Nemokosch> SmokeMachine: this stuff is beyond me but I wonder if what we are seeing here isn't simply a bug

[10:21] <lizmat> SmokeMachine: nine maybe ?

[10:21] <lizmat> "right now, it is broken" is a judgement

[10:21] <SmokeMachine> Nemokosch: if it's a bug, it's an old one...

[10:21] <tellable6> SmokeMachine, I'll pass your message to Nemokosch

[10:22] <lizmat> Nemokosch: please don't pass judgement too easily  :-)

[10:22] <tellable6> lizmat, I'll pass your message to Nemokosch

[10:22] <discord-raku-bot> <Nemokosch> yes, it is a judgement definitely. the very same judgement as "horrible anomaly"

[10:23] <SmokeMachine> .ask nine Are you working on some kind of RakuAST matcher?

[10:23] <tellable6> SmokeMachine, I'll pass your message to nine

[10:23] <lizmat> Nemokosch: you'd be surprised how much of the interwebs is held together by horrible anomalies

[10:24] <tellable6> lizmat, I'll pass your message to Nemokosch

[10:24] <discord-raku-bot> <Nemokosch> Match.ACCEPTS returning itself, well, if you have a better way to put it _without_ taking away the part that it goes against the whole designed semantics of ACCEPTS, I welcome it

[10:24] <lizmat> fixing horrible anomalies may actually break a lot of useful stuff

[10:30] <discord-raku-bot> <Nemokosch> I don't think that's the case here. Let's find out.

[10:32] *** linkable6 left
[10:32] *** evalable6 left
[10:32] *** linkable6 joined
[10:33] *** evalable6 joined
[11:10] *** euandreh joined
[11:13] *** euandreh left
[11:13] *** euandreh joined
[11:35] <discord-raku-bot> <Anton Antonov> "you'd be surprised how much of the interwebs is held together by horrible anomalies" -- this should be kept secret, otherwise, "strangely consistent" would be looked at with a great(er) suspicion.

[11:36] <lizmat> well, I was more thinking of legacy systems there  :-)

[11:40] *** Geth__ left
[11:40] *** Geth joined
[11:40] *** razetime left
[11:44] *** Geth left
[11:44] *** Geth joined
[11:45] <discord-raku-bot> <Anton Antonov> @lizmat Ok, good to know! I will stop googling "how to switch to Rust from Raku" ...

[11:45] <discord-raku-bot> <Anton Antonov> For the record, I would rather program in Swift, not Rust. (Well, if I do not spend that much time with Raku...)

[11:52] <discord-raku-bot> <Nemokosch> I like the word/concept of "consistency" in general because it rules out a lot of subjectivity. You can like something or not but that has no effect whatsoever if it is consistent or not.

[11:55] <guifa> SmokeMachine I am :-)

[11:56] <SmokeMachine> guifa: great! So I don't need doing that! (that's kinda sad because it seems fun...)

[11:58] <guifa> Right now IIRC the way that I coded the Polyglot::Regexen module is to basically create nodes that are virtually identical in function to RakuAST nodes, but just stringify into EVAL'able code (at least until RakuAST has more regex support)

[11:58] <guifa> but after that

[11:59] <guifa> I'm going to return to the idea of a binary regex.  I've got some really promising stuff sitting on my drive but I it's been half baked enough times that I probably should start over from scratch — and that'll ultimately compile to something internally that's not regex at all, methinks

[12:01] <SmokeMachine> guifa: that sounds interesting...

[12:01] <discord-raku-bot> <Nemokosch> by binary regex, you mean better matching possibilities for binary data?

[12:02] <guifa> Nemokosch: yes.  a syntax designed exclusively for binary stuff (so it'll match against blobs, rather than strings)

[12:02] <tellable6> guifa, I'll pass your message to Nemokosch

[12:06] *** reportable6 left
[12:07] *** reportable6 joined
[12:07] <discord-raku-bot> <Anton Antonov> @guifa So, "Polyglot::Regexen" lives only here: https://raku.land/zef:guifa/Polyglot::Regexen ?

[12:08] <guifa> AntonAntonov: https://github.com/alabamenhu/PolyglotRegexen

[12:10] <discord-raku-bot> <Anton Antonov> @guifa Ah, I searched with "Polyglot::Regexen" (not  "PolyglotRegexen".)

[12:12] <discord-raku-bot> <Anton Antonov> @guifa "Right now IIRC the way that I coded the Polyglot::Regexen module is to basically create nodes that are virtually identical in function to RakuAST nodes, [...]" -- This makes want to study your code.

[12:14] <guifa> ah actually ignore me.  I think that's in an update and not in that released code

[12:14] <guifa> (unreleased update... remember what I said last night about too many in-progress things hahaha)

[12:16] <discord-raku-bot> <Anton Antonov> @guifa Good to know! I recently worked on "random sentence generation" from Raku grammars. I was told that with RakuAST that might/should be easy, but until RakuAST is released, I am interested in "current Raku" solutions.

[12:16] *** dakkar left
[12:18] <discord-raku-bot> <Anton Antonov> @guifa Ok, I remember -- I should have realized it is a blanket excuse that covers future references to non-released features.

[12:19] <guifa> The idea is understanding that most all of the RakuAST nodes can ultimately stringify into actual Raku code

[12:20] <guifa> so for instance, you could create a StringLiteral node that stringifies to '…', escaping the backslashes and single quotes

[12:20] <discord-raku-bot> <Anton Antonov> @guifa Yes! That is what I discovered over the weekend -- I can get strings of the code definitions for the regexes in grammars.

[12:22] <nine> SmokeMachine: what do you mean by "RakuAST matcher"?

[12:24] <SmokeMachine> nine: I mean something that you'll use to find something inside your AST (for, for example, change it)

[12:25] *** razetime joined
[12:25] <nine> No. That will come once it's time to create an optimizer.

[12:30] <guifa> okay time for $day-job 

[12:30] <SmokeMachine> nine: I was thinking on making something like a Regex/Grammar for that, but it seems guifa is doing that already... (I'll probably only play with that)

[12:34] <discord-raku-bot> <Anton Antonov> @guifa Same here after 1.5 hours. 🙂

[12:36] <nine> guifa, SmokeMachine: why don't you join the RakuAST implementation effort? You are both obviously interested in the topic and in the kind of challenges this entails. If want to hvae RakuAST ever see the light of the day, helping may even be necessary. I honestly don't know if I can ever finish it by myself.

[12:38] <SmokeMachine> nine: I'd love to help... I'm just not sure if I have enough time or knowledge... I'm struggling to find some time for Red...

[12:39] <nine> Knowledge can be acquired (and I'd be happy to help there). And every little bit helps.

[12:40] <SmokeMachine> nine: is there a list of tasks from where I could get an easy one (related to RakuAST, I mean)?

[12:40] <discord-raku-bot> <Anton Antonov> <@886919719066697749> "I'm struggling to find some time for Red..." -- I am struggling finding time for Red and Dan...

[12:44] <nine> src/Raku/ast/README.md in the rakuast branch gives some general information and has a few TOODs for the RakuAST node compiler. Work is easy to find though: just run a spectest with RAKUDO_RAKUAST=1 set in the environment, look at the failures and pick one that doesn't look too scary and try to fix it. I'd go with syntax errors since those can usually be solved by copying some code from src/Perl/Grammar.nqp to 

[12:44] <nine> src/Raku/Grammar.nqp and following up in Actions and maybe RakuAST nodes

[12:45] *** euandreh left
[12:46] *** euandreh2 joined
[12:47] <discord-raku-bot> <Nemokosch> I should watch vrurg's presentation from last year at least, and then maybe I'd have a general understanding of the architecture

[12:48] *** euandreh2 is now known as euandreh

[12:49] <discord-raku-bot> <Nemokosch> by the way: are method forms of operators really not visible globally? Does one essentially have to add operators as multi sub candidates all the time?

[13:00] *** dakkar joined
[13:07] *** derpydoo joined
[13:41] <SmokeMachine> nine: I'll give it a try today after work, thanks

[13:41] <nine> ++SmokeMachine

[14:12] *** linkable6 left
[14:12] *** evalable6 left
[14:13] *** evalable6 joined
[14:13] *** linkable6 joined
[15:01] <discord-raku-bot> <Nemokosch> Actually, is there a detailed description of the multi dispatch process and tiebreakers anywhere?

[15:01] <discord-raku-bot> <Nemokosch> I couldn't find what I was looking for even in the so-called old design docs, let alone the docs site

[15:03] *** ToddAndMargo joined
[15:03] *** ToddAndMargo left
[15:17] *** epony joined
[15:24] *** razetime left
[15:28] *** Sgeo joined
[15:36] *** razetime joined
[16:22] *** derpydoo left
[16:24] * lizmat clickbaits https://rakudoweekly.blog/2022/11/14/2022-46-rainbow-butterfly/

[16:28] <[Coke]> rakudo's multi dispatch *process* is probably an implementation detail, not part of the spec/docs.

[16:29] <[Coke]> And I would suppose that it's different between RakuAST/Existing - might be worth reading jnthn's notes about moving to AST that probably describe both.

[16:30] <[Coke]> Trying to find the slide deck that covered this.

[16:32] <[Coke]> no love. (but always a good time to go through jnthn's videos/slides)

[16:33] <discord-raku-bot> <Nemokosch> The exact order should be specified, I'd assume

[16:36] *** Guest61 joined
[16:38] *** razetime left
[16:39] *** razetime joined
[16:40] <discord-raku-bot> <Nemokosch> And that's what I am mostly curious about. I'm not sure how much the implementation can be flexible if the outcome is defined but that's beside the point.

[16:49] *** razetime left
[16:50] *** razetime joined
[17:02] <[Coke]> there is roast's S06-multi

[17:09] *** Sauvin left
[17:15] *** Sauvin joined
[17:17] *** abraxxa left
[17:35] *** dakkar left
[17:53] *** Guest61 left
[18:01] *** masukomi joined
[18:04] *** codesections joined
[18:06] *** Guest61 joined
[18:07] *** reportable6 left
[18:08] *** razetime left
[18:09] *** reportable6 joined
[18:14] *** Guest61 left
[18:23] *** Guest61 joined
[18:35] <tbrowder> nine: wouldn't it be helpful to have a reasonably visible RakuAST page or link on one of the Raku websites? maybe inside or linked to the CONTRIBUTING page. I just took a quick look and don't see anthing.

[18:35] <tbrowder> *anythingo

[18:35] <tbrowder> **anything

[18:36] <tbrowder> ^^^ tried to use aussie lingo :-D

[18:40] <SmokeMachine> nine: Am I doing something wrong to compile this? https://usercontent.irccloud-cdn.com/file/p1PItPA8/image.png

[18:48] *** Guest61 left
[18:57] *** Nemokosch joined
[18:57] *** Nemokosch left
[19:00] *** derpydoo joined
[19:01] <nine> SmokeMachine: yes. The setting cannot be compiled with RakuAST yet. So just run make and then RAKUDO_RAKUAST=1 make test

[19:01] <nine> tbrowder: sure that would be useful. Feel free to create such a page :)

[19:01] *** sena_kun left
[19:02] *** sena_kun joined
[19:07] *** Guest61 joined
[19:08] <nine> [Coke]: RakuAST does not affect multi dispatch in any way. The former is compile time, the latter a runtime thing.

[19:11] <discord-raku-bot> <Nemokosch> the thing is, what I strongly suspect but hard to find written anywhere: slurpiness is a stronger tiebreaker than given types

[19:12] <discord-raku-bot> <Nemokosch> which probably wouldn't cause problem in 95% of cases but I wonder what would the other 5% break, if anything

[19:14] <SmokeMachine> it seems I have an error on configure.pl...

[19:15] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/wTVkh3tw/image.png

[19:16] <SmokeMachine> let me try on a intel machine...

[19:43] <discord-raku-bot> <Nemokosch> https://github.com/Raku/infrastructure-doc I see this was last maintained when moritz did the lifting. Is there anything similar but more up-to-date?

[20:00] <[Coke]> nine: thank you!

[20:02] <[Coke]> that repo is probably a good place to refresh going forward. not sure if rba et al. have been using someplace else.

[20:07] *** evalable6 left
[20:07] *** linkable6 left
[20:07] *** linkable6 joined
[20:08] *** evalable6 joined
[20:15] <SmokeMachine> on my intel machine it's working...

[20:21] *** bigfondue left
[20:27] *** sena_kun left
[20:29] *** sena_kun joined
[20:33] <ugexe> SmokeMachine: are you on apple silicon? if yes, is rosetta installed (does `pgrep oahd` show a number)? 

[20:35] <El_Che> building Fedora 37 pkg

[20:36] <SmokeMachine> ugexe: yes, apple silicon...

[20:38] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/zJAo44hS/image.png

[20:40] <ugexe> i just got a m2 the other day and, after installing rosetta, got moar 2022.07 to install via rakubrew

[20:45] <[Coke]> i'm using rakubrew on m2

[20:53] <tbrowder> nine: WILCO

[20:54] *** jgaz joined
[21:07] *** Guest61 left
[21:24] <El_Che> new rakudo-pkg release with support for fedora 37 and workaround for zef install problem is ready, waiting on cloudsmith to add the repo

[21:41] *** Guest61 joined
[21:50] <xinming> releasable6: status

[21:50] <releasable6> xinming, Next release will happen when it's ready. There are no known blockers. Changelog for this release was not started yet

[21:50] <releasable6> xinming, Details: https://gist.github.com/dda48f5ba74d625ab1f66260b25892bd

[21:51] <xinming> So, we are waiting for the christmas release. :-)

[21:53] <lizmat> not if I can help it   :-(   jdv ?

[21:59] *** jgaz left
[22:04] *** bigdata joined
[22:20] *** tejr left
[22:21] *** bigfondue joined
[22:21] *** bigdata left
[22:25] <El_Che> weekly: a new rakudo-pkg release with support for Fedora 37 https://github.com/nxadm/rakudo-pkg/releases/tag/v2022.07-03

[22:25] <notable6> El_Che, Noted! (weekly)

[22:26] *** tejr joined
[22:34] *** sena_kun left
[22:35] *** sena_kun joined
[23:04] *** discord-raku-bot left
[23:04] *** discord-raku-bot joined
[23:05] <Geth> ¦ doc: 2colours++ created pull request #4129: Fix the link of "arity" at Multi-dispatch section

[23:05] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4129

[23:06] *** sena_kun left
[23:09] <[Coke]> ugexe: do you have a method in zef that can extract the bits from module::name:ver<x>:this<that>?

[23:10] <[Coke]> (want module name, and then a hash of the colon bits.

[23:14] <ugexe> use Zef::Identity; say Zef::Identity.new("Foo::Bar:ver<1.0>:api<0.1>").hash

[23:16] <ugexe> use Zef::Identity; say identity2hash("Foo::Bar:ver<1.0>:api<0.1>").hash

[23:17] <[Coke]> sweet, thanks!

[23:18] <ugexe> https://github.com/ugexe/zef/blob/main/lib/Zef/Identity.rakumod#L13-L30

[23:19] <ugexe> that grammar is pretty small for c&p as well

[23:21] <[Coke]> I'm already using zef guts in this thing, so the sub is perfect.

[23:26] <Geth> ¦ doc: 2colours++ created pull request #4130: Fix (cont) link around the .contains gotcha

[23:26] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4130

[23:27] *** discord-raku-bot left
[23:27] *** discord-raku-bot joined
[23:35] <[Coke]> 'zef-deps' now has a --json flag on master; feedback on the format welcome before I push a release.

[23:36] <[Coke]> ugexe++ for doing the hard part ages ago.

[23:38] <tonyo> what're you writing [Coke] ?

[23:47] <[Coke]> .seen gfldex

[23:47] <tellable6> [Coke], I saw gfldex 2022-11-15T01:24:40Z in #raku: <gfldex> perryprog: you are correct! see: https://gist.github.com/gfldex/c69612be47e078d090467bf3972fc3f2

[23:47] <gfldex> o/

[23:48] <[Coke]> tonyo: https://github.com/coke/raku-zef-deps

[23:48] <[Coke]> gfldex: looking at https://github.com/Raku/doc/pull/4126 - the space doesn't seem to be required

[23:49] <gfldex> m: sub foo(|c(Int, Int)) {}

[23:49] <camelia> rakudo-moar 17062c32f: ( no output )

[23:50] <gfldex> I did have problems with that on glot.io .

[23:50] <[Coke]> Looks like a glot.io issue?

[23:51] <[Coke]> maybe it's an old version of rakudo?

[23:51] <gfldex> could very well be

[23:51] <gfldex> I will investigate further and close the pull request when it's a false alarm.

[23:51] <[Coke]> Going to close the PR; thanks, though!

[23:51] <gfldex> ok

[23:51] <[Coke]> ... ok, that works too!

[23:52] <[Coke]> Just trying to be better about new PRs going forward. ;)

[23:52] <[Coke]> (some of those got olllld)

[23:52] <Geth> ¦ doc: 09900e5c44 | (Márton Polgár)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[23:52] <Geth> ¦ doc: Fix (cont) link around the .contains gotcha

[23:52] <Geth> ¦ doc: 

[23:52] <Geth> ¦ doc: Closes https://github.com/Raku/doc/issues/4128

[23:52] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/09900e5c44

[23:52] <Geth> ¦ doc: 7bb93fcacb | (Will Coleda)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[23:52] <Geth> ¦ doc: Merge pull request #4130 from 2colours/patch-2

[23:53] <Geth> ¦ doc: 

[23:53] <linkable6> Link: https://docs.raku.org/language/traps

[23:53] <Geth> ¦ doc: Fix (cont) link around the .contains gotcha

[23:53] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7bb93fcacb

[23:54] <gfldex> Today I learned that super nova explosions create 10**58 neutrinos. Looks like we should pitch Raku to astronomers.

[23:55] <Geth> ¦ doc: bb05d9b70c | (Márton Polgár)++ (committed using GitHub Web editor) | doc/Language/glossary.pod6

[23:55] <Geth> ¦ doc: Fix the link of "arity" at Multi-dispatch section

[23:55] <Geth> ¦ doc: 

[23:55] <Geth> ¦ doc: Closes https://github.com/Raku/doc/issues/4127.

[23:55] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/bb05d9b70c

[23:55] <Geth> ¦ doc: a7451ce0cf | (Will Coleda)++ (committed using GitHub Web editor) | doc/Language/glossary.pod6

[23:55] <Geth> ¦ doc: Merge pull request #4129 from 2colours/patch-1

[23:55] <Geth> ¦ doc: 

[23:55] <linkable6> Link: https://docs.raku.org/language/glossary

[23:55] <Geth> ¦ doc: Fix the link of "arity" at Multi-dispatch section

[23:55] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/a7451ce0cf

[23:56] <[Coke]> .seen kaipei

[23:56] <tellable6> [Coke], I saw kaipei 2022-10-04T15:16:09Z in #moarvm: <Kaipei> be careful not to break ($a, $b) = ($b, $a) in the process

