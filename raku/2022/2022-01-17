[00:07] *** reportable6 left
[00:13] *** xinming joined
[00:40] *** Geth__ joined
[00:40] *** lizmat_ joined
[00:40] *** TempIRCLogger__ joined
[00:40] *** Geth left
[00:41] *** RakuIRCLogger left
[00:42] *** TempIRCLogger left
[00:42] *** lizmat left
[00:44] *** TempIRCLogger__ left
[00:44] *** TempIRCLogger joined
[01:09] *** reportable6 joined
[01:30] <discord-raku-bot> <Anton Antonov#7232> @Coke Support of parquet or feather would be nice.

[01:50] *** linkable6 left
[01:51] *** linkable6 joined
[02:22] *** Yeuph left
[02:50] *** dogbert11 joined
[02:54] *** dogbert17 left
[03:52] *** frost joined
[04:19] *** seednode99 left
[04:20] *** seednode99 joined
[04:37] *** bd3i joined
[04:56] *** frost left
[05:29] <discord-raku-bot> <stevied#8273> where do I report a bug about raku.land?

[05:29] <discord-raku-bot> <stevied#8273> don't immediately see a repo for it

[05:29] <discord-raku-bot> <stevied#8273> oh, found it on gitlab

[05:56] *** linkable6 left
[05:56] *** evalable6 left
[05:57] *** linkable6 joined
[05:59] *** evalable6 joined
[06:07] *** reportable6 left
[06:08] *** nebuchadnezzar joined
[06:38] *** djerius left
[06:39] *** djerius joined
[07:19] *** abraxxa joined
[07:30] *** abraxxa left
[07:30] *** abraxxa joined
[07:43] *** seednode99 left
[07:44] *** seednode99 joined
[07:44] *** lichtkind joined
[07:48] *** lichtkind left
[08:00] *** Manifest0 joined
[08:08] *** lizmat_ left
[08:08] *** lizmat joined
[08:41] *** hasrthur joined
[08:45] *** hasrthur left
[08:51] *** dakkar joined
[08:59] *** razetime joined
[09:10] *** reportable6 joined
[09:11] *** hasrthur joined
[09:11] *** hasrthur left
[09:36] *** kjp left
[09:58] *** hasrthur joined
[09:59] *** kjp joined
[10:22] *** Sgeo_ left
[11:02] *** Altreus_ is now known as Altreus

[11:04] *** dogbert11 left
[11:23] *** jjido joined
[11:28] *** rir left
[11:29] *** rir joined
[11:44] *** MasterDuke left
[11:53] *** dogbert17 joined
[12:07] *** jjido left
[12:08] *** reportable6 left
[12:10] *** reportable6 joined
[13:01] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/01/17/2022-03-rakucon-how/

[13:10] *** linkable6 left
[13:10] *** evalable6 left
[13:12] *** linkable6 joined
[13:12] *** evalable6 joined
[13:22] *** MasterDuke joined
[13:29] *** solitario_ is now known as solitario

[13:33] *** [Coke] left
[13:37] *** jjido joined
[13:42] *** [Coke] joined
[13:51] *** jjido left
[14:04] *** dogbert11 joined
[14:04] *** dogbert17 left
[14:13] *** solitario left
[14:25] *** solitario joined
[14:35] *** morte_ joined
[14:37] *** qorg11 left
[14:40] *** razetime left
[14:40] *** qorg11 joined
[14:55] *** rir_ joined
[14:56] *** [Coke]_ joined
[14:57] *** [Coke] left
[14:57] *** kjp left
[14:58] *** kjp joined
[14:58] *** rir left
[15:00] *** Kaiepi left
[15:06] *** ProperNoun left
[15:07] *** ProperNoun joined
[15:17] *** xinming left
[15:20] *** avarab left
[15:20] *** avar joined
[16:20] <discord-raku-bot> <Nemokosch#9980> ValueList will be veeery useful

[16:24] *** lucerne joined
[16:35] <Xliff> What would be the easiest way to re-export a CompUnit's symbols without using something from modulespace?

[16:38] <lizmat> Xliff: perhaps this can be of inspiration: https://github.com/lizmat/P5built-ins/blob/main/lib/P5built-ins.rakumod

[16:41] <Xliff> lizmat++ -- I might use this and see if my suspicion about #4655 plays out.

[16:48] <Xliff> lizmat: Why are you using late binding, here? Can't you just use '%export = MY::.map'?

[16:48] <Xliff> Or do you have to do it that way to limit it just to Callables?

[16:49] <lizmat> the late binding is because you can limit on what gets imported as parameters

[16:49] <lizmat> use P5built-ins <shift quotemeta lcfirst>

[16:50] <Xliff> Ah! I see.

[16:50] <lizmat> if you don't specify anything, you do get the early bindings in %export

[16:50] <Xliff> If I'm not interested in that and just exporting everything in ::EXPORT::DEFAULT, would using MY::.map work?

[16:50] <lizmat> from the first EXPORT candidate

[16:51] <lizmat> probably, never tried that

[17:03] *** dextercd joined
[17:11] *** sftp left
[17:14] *** [Coke] joined
[17:14] <Xliff> lizmat: This isn't working -- https://github.com/Xliff/p6-ICal/blob/exports-1/lib/ICal/Raw/Types.pm6

[17:14] <Xliff> Anything loom out at you as being wrong?

[17:15] <lizmat> my @default-symbols = MY::.keys;    # that's runtime

[17:15] *** [Coke]_ left
[17:16] <lizmat> also, why the module?

[17:17] <lizmat> also: %exports = MY::.pairs.grep({ .key ne @default-symbols.any }).Map;  is runtime

[17:17] <Xliff> Equivalent compile time?

[17:17] <lizmat> also: the sub should be called EXPORT not EXPORTS

[17:18] <lizmat> whatever you put in %exports needs to be done at compile time

[17:19] <Xliff> After rename to EXPORT it works.

[17:19] <lizmat> it does?

[17:19] <Xliff> My small golf worked.

[17:19] <Xliff> Now testing via compile

[17:19] <Xliff> Yup.

[17:20] <lizmat> are you "need"ing this module, or "use"ing it ?

[17:20] <Xliff> using

[17:20] <Xliff> Prior it was need

[17:20] <Xliff> Now to see if I trigger SET-SELF error

[17:23] *** sftp joined
[17:39] *** dakkar left
[17:46] <Xliff> And... no such luck. Still encountering the message.

[17:51] <lizmat> and if you make all of that happen at compile time ?

[17:52] <moon-child> m: BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN BEGIN say 5

[17:52] <camelia> rakudo-moar fb909efce: OUTPUT: «5␤»

[17:53] <lizmat> .oO( that's a start :-)

[17:53] <moon-child> haha

[17:54] *** clarjon1 left
[17:55] <tbrowder> a question about stubs. docs indicate stubs are used for methods in abstract classes. i thought they could be used as declarations before being defined as in C++

[18:01] <moon-child> m: sub f { ... }; sub f { 5 }; sub f { 6 }; say f

[18:01] <camelia> rakudo-moar fb909efce: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Redeclaration of routine 'f'.  Did you mean to declare a multi-sub?␤at <tmp>:1␤------> sub f { ... }; sub f { 5 }; sub f { 6 }⏏; say f␤    expecting any of:␤        horizontal whitespac…»

[18:01] <moon-child> gah

[18:01] <moon-child> repl bites again

[18:02] <tbrowder> example: class Foo {...}; class Bar { has Foo $.foo }

[18:02] <tbrowder> then define Foo after Bar

[18:03] <lizmat> m: class Foo {...}; class Bar { has Foo $.foo }

[18:03] <camelia> rakudo-moar fb909efce: OUTPUT: «The following packages were stubbed but not defined:␤    Foo␤»

[18:03] <lizmat> m: class Foo {...}; class Bar { has Foo $.foo }; class Foo { }

[18:03] <camelia> rakudo-moar fb909efce: ( no output )

[18:03] <lizmat> seems to work ?

[18:05] <tbrowder> yes, but i had a problem a few days ago (i think my error) and wanted to revisit the docs. i think the forward decl use needs to be mentioned, but i wanted to be sure it's correct.

[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[18:09] *** morte_` joined
[18:12] *** morte_ left
[18:15] *** morte_` left
[18:15] *** morte_ joined
[18:18] <Xliff> Getting a lot of these, now: 

[18:18] <Xliff> Missing serialize REPR function for REPR CArray (NativeCall::Types::CArray[uint64])

[18:18] <Xliff> Will CArrays ever have serialization into a CompUnit?

[18:21] <moon-child> hmm, seems doubtful, as there's no way in the general case to know the length of one

[18:36] *** kjp left
[18:40] *** Sgeo joined
[18:43] <Geth__> ¦ doc: tbrowder self-assigned Describe "forward declaration" of classes using a "stub" https://github.com/Raku/doc/issues/4018

[18:44] *** kjp joined
[18:53] *** jjido joined
[19:05] *** jjido left
[19:34] *** younder joined
[19:36] <younder> I have a problem with 'zef install JSON::Name' it gives a error 'Can't use unknown trait 'is' -> 'json-name' in an attribute declaration'. This is a real pain as alot of libraries including Cro use this module.

[19:53] <lizmat> installs fine for me.  Which version of Rakudo are you using ?

[19:54] <younder> verion 1019.11

[19:54] <lizmat> that's *really* old  :-)

[19:54] <El_Che> :)

[19:54] <lizmat> but I'm afraid that's the reason it doesn't work

[19:54] <El_Che> Around the time of the first cities

[19:55] <lizmat> please try it with a more recent version  :-)

[19:55] <younder> That's the version on the rakudo website..

[19:55] <El_Che> younder: what os do you run?

[19:55] <younder> Ubuntu 20.04

[19:56] *** morte_ left
[19:57] <El_Che> ok, that's what the OS provices on 20.04

[19:57] *** morte_ joined
[19:57] <El_Che> on the rakudo there is normally the latest version listed

[19:58] <lizmat> 2021.12 on the website as far as I can see

[19:58] <El_Che> younder: I supply ubuntu repositories with the latest version: https://github.com/nxadm/rakudo-pkg#os-repositories

[19:58] <El_Che> they are also listed on the rakudo website

[20:03] <younder> Yes, I downloaded that now.. Must have done 'sudo apt install rakudo' .. These Ubuntu repositories always lag a bit behind.

[20:04] <El_Che> normally OS repos are good enough, but 2 y is a little too much for a lang with lots of development

[20:09] <younder> Yes! It works now. Thanks.

[20:09] <El_Che> \o/

[20:09] <lizmat> :-)

[20:11] *** jjido joined
[20:12] *** Kaiepi joined
[20:15] *** jjido left
[20:23] *** morte_ left
[20:48] *** morte_ joined
[20:55] <Geth__> ¦ examples: sdondley++ created pull request #91: improve link to POD example template

[20:55] <Geth__> ¦ examples: review: https://github.com/Raku/examples/pull/91

[20:55] <younder> 'zef install rakudoc' failed.. I needed 'zef -v install https://github.com/Raku/rakudoc.git'

[20:56] <El_Che> that looks related to the module itself

[20:58] <MasterDuke> istr rakudoc is known not to install cleanly right now, i think it doesn't pass all its tests, so you have to do something like `zef install --/test rakudoc`

[20:58] *** aitron joined
[21:12] *** abraxxa left
[21:49] *** aitron left
[21:49] *** aitron joined
[21:50] *** jjido joined
[22:05] *** [Coke]_ joined
[22:07] *** [Coke] left
[22:30] *** younder left
[22:30] *** Kaiepi left
[22:33] *** andinus left
[22:36] *** Kaiepi joined
[22:50] *** Kaiepi left
[22:51] *** Kaiepi joined
[22:55] *** morte_ left
[22:55] *** jjido left
[23:28] *** [Coke]_ left
[23:30] *** jaguart joined
[23:31] *** [Coke] joined
[23:35] <Xliff> I'm in this branch of p6-GLib (only this project!) https://github.com/Xliff/p6-GLib/tree/raw-types-refactor

[23:36] <Xliff> And I'm now getting this error whenever I "use GLib::Raw::Types" -- Missing serialize REPR function for REPR CArray (NativeCall::Types::CArray[uint64])

[23:36] <Xliff> Could someone clone the above and attempt to run ./build.sh in the root and see if it triggers on their end?

[23:50] *** hasrthur left
