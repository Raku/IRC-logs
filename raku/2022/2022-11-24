[00:07] *** jjido left
[00:07] *** reportable6 left
[00:10] *** reportable6 joined
[00:17] *** epony joined
[00:20] *** jpn joined
[00:31] *** jpn left
[00:43] *** jpn joined
[00:53] *** jpn left
[01:00] *** swaggboi left
[01:05] *** jpn joined
[01:18] *** euandreh left
[01:19] *** euandreh joined
[01:27] *** jpn left
[01:30] *** swaggboi joined
[01:42] *** jpn joined
[01:46] *** euandreh left
[01:47] *** jpn left
[01:47] *** euandreh joined
[01:53] *** Xliff joined
[01:54] <Xliff> \o

[01:54] <Xliff> Is there a &*ROUTINE analog for Blocks?

[01:55] <Xliff> my $a = -> *@a {  ... $*BLOCK or &*BLOCK doesn't work ... }

[01:57] <Xliff> m: my $a = -> *@a { &?BLOCK.signature.params.say }; $a()

[01:57] <camelia> rakudo-moar 59a348538: OUTPUT: «(*@a)␤»

[01:57] <Xliff> \o/

[01:57] <Xliff> m: sub a { &?BLOCK.signature.params.say }; a()

[01:57] <camelia> rakudo-moar 59a348538: OUTPUT: «()␤»

[01:57] <Xliff> m: sub a { &?ROUTINE.signature.params.say }; a()

[01:57] <camelia> rakudo-moar 59a348538: OUTPUT: «()␤»

[01:57] <Xliff> m: sub a { &*ROUTINE.signature.params.say }; a()

[01:57] <camelia> rakudo-moar 59a348538: OUTPUT: «Dynamic variable &*ROUTINE not found␤  in sub a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:58] <Xliff> m: sub a (*@a) { &?BLOCK.signature.params.say }; a()

[01:58] <camelia> rakudo-moar 59a348538: OUTPUT: «(*@a)␤»

[01:58] <Xliff> Ah! That's nice

[01:59] <Xliff> m: sub a (*@a) { { &?BLOCK.signature.params.say } }; a()

[01:59] <camelia> rakudo-moar 59a348538: OUTPUT: «(Mu $_? is raw = OUTER::<$_>)␤»

[02:00] *** jpn joined
[02:01] <Xliff> m: sub a (*@a) { rand -> $_ { &?BLOCK.signature.params.say } }; a()

[02:01] <camelia> rakudo-moar 59a348538: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> sub a (*@a) { rand⏏ -> $_ { &?BLOCK.signature.params.say } ␤    expecting any…»

[02:01] <Xliff> m: sub a (*@a) { (^10).pick -> $_ { &?BLOCK.signature.params.say } }; a()

[02:01] <camelia> rakudo-moar 59a348538: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> sub a (*@a) { (^10).pick⏏ -> $_ { &?BLOCK.signature.params.say } ␤    expecti…»

[02:01] <Xliff> m: sub a (*@a) { do (^10).pick -> $_ { &?BLOCK.signature.params.say } }; a()

[02:01] <camelia> rakudo-moar 59a348538: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> sub a (*@a) { do (^10).pick⏏ -> $_ { &?BLOCK.signature.params.say } ␤    expe…»

[02:01] <Xliff> m: sub a (*@a) { $_ = (^10).pick; { &?BLOCK.signature.params.say } }; a()

[02:01] <camelia> rakudo-moar 59a348538: OUTPUT: «(Mu $_? is raw = OUTER::<$_>)␤»

[02:01] <Xliff> m: sub a (*@a) { $_ = (^10).pick; { &?BLOCK.signature.params.say ; .say} }; a()

[02:01] <camelia> rakudo-moar 59a348538: OUTPUT: «(Mu $_? is raw = OUTER::<$_>)␤6␤»

[02:03] *** razetime joined
[02:05] *** euandreh left
[02:13] *** euandreh joined
[02:18] *** euandreh left
[02:29] *** perlbot left
[02:30] *** perlbot joined
[02:30] *** simcop2387 left
[02:33] *** simcop2387 joined
[02:37] *** euandreh joined
[02:41] *** jpn left
[02:41] *** euandreh left
[02:44] *** euandreh joined
[02:47] *** habere-et-disper left
[02:55] *** razetime left
[02:56] *** razetime joined
[03:04] *** Kaiepi joined
[03:09] *** jpn joined
[03:18] *** jpn left
[03:31] *** jpn joined
[03:36] *** sgrs left
[04:09] *** jpn left
[04:36] *** jpn joined
[04:50] *** jpn left
[04:57] *** sortiz joined
[05:03] *** jpn joined
[05:03] <sortiz> ToddAndMargo: My NativeHelpers::Blob module includes a blob-from-pointer sub. See: https://raku.land/github:salortiz/NativeHelpers::Blob

[05:09] <ToddAndMargo> would you write out a sample so I can see what the syntax is?  I have a Pointer and I have the number of bytes.  How would I use them in your sub?

[05:10] *** jpn left
[05:17] *** Guest15 left
[05:18] <sortiz> my Pointer[uint8] $P = get-a-pointer-somehow(...); my $buff = blob-from-pointer($P, 9); # Now buff is a Buf of size 9 taken from the memory pointed by $P  

[05:22] <sortiz> I'm using Pointer[uint8] for $P so it point to bytes.

[05:22] *** jpn joined
[05:25] *** razetime left
[05:26] *** razetime joined
[05:27] <sortiz> Ups, the use is `… = blob-from-pointer($P :elems(9));` elems is a named argument, sorry.

[05:31] <sortiz> In the code of some DBDIsh drivers you can see some real use-cases. For example https://github.com/raku-community-modules/DBIish/blob/main/lib/DBDish/SQLite/StatementHandle.rakumod#L76

[05:41] *** razetime left
[05:41] *** razetime joined
[05:48] <ToddAndMargo> Thank you!

[05:58] *** sortiz left
[05:59] *** jpn left
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:22] *** razetime left
[06:22] *** razetime joined
[06:26] *** tirnanog left
[06:26] *** jpn joined
[06:32] *** jpn left
[06:45] *** jpn joined
[07:01] *** squashable6 left
[07:02] *** squashable6 joined
[07:09] *** jpn left
[07:33] *** a3r0 left
[07:34] *** a3r0 joined
[07:38] *** jpn joined
[07:40] *** abraxxa joined
[07:44] *** patterner____ left
[07:44] *** kybr left
[07:44] *** patterner____ joined
[07:45] *** kybr joined
[07:45] *** abraxxa left
[07:45] *** abraxxa joined
[07:58] *** jjido joined
[08:27] *** jpn left
[08:40] *** jpn joined
[09:07] *** jjido left
[09:10] *** dakkar joined
[09:28] *** razetime left
[09:29] *** razetime joined
[09:36] *** Sgeo left
[09:44] *** MoC joined
[09:47] *** razetime_ joined
[09:48] *** razetime left
[09:54] *** razetime_ left
[09:55] *** razetime joined
[10:03] *** sena_kun joined
[10:08] *** jpn left
[10:15] *** razetime left
[10:16] *** razetime joined
[10:18] *** MoC left
[10:23] *** jpn joined
[10:25] *** razetime left
[10:25] *** razetime joined
[10:30] *** razetime left
[10:31] *** razetime joined
[10:50] *** habere-et-disper joined
[11:04] *** sgrs joined
[11:06] *** habere-et-disper left
[11:12] *** jmcgnh left
[11:19] *** razetime left
[11:20] *** jmcgnh joined
[11:20] *** razetime joined
[11:30] *** sena_kun left
[11:31] *** sena_kun joined
[11:34] *** razetime left
[11:34] *** razetime_ joined
[11:43] *** razetime_ is now known as razetime

[12:08] *** reportable6 left
[12:11] *** reportable6 joined
[12:34] *** frost19 joined
[12:34] *** ToddAndMargo left
[12:46] *** jpn left
[12:52] *** Maylay left
[12:52] *** Maylay joined
[13:13] *** jpn joined
[13:21] *** frost19 left
[13:42] *** Maylay left
[13:46] *** jpn left
[13:50] *** tirnanog joined
[13:51] *** abraxxa left
[14:02] *** Maylay joined
[14:03] *** jpn joined
[14:36] *** Maylay left
[14:52] *** Maylay joined
[15:24] *** Maylay left
[15:31] <tbrowder> happy Thanksgiving for all US Rak[uu|oo]ns!

[15:35] *** m_athias left
[15:35] *** nine left
[15:35] *** nine joined
[15:35] *** m_athias joined
[15:40] <discord-raku-bot> <Nemokosch> 😮

[15:48] <tbrowder> ugexe: In a situation where two different modules have the same names for a bin prog. is there any way to get zef to warn about that before installation?

[15:58] *** razetime left
[16:03] <Geth> ¦ advent: tbrowder++ created pull request #100: update

[16:03] <Geth> ¦ advent: review: https://github.com/Raku/advent/pull/100

[16:03] <Geth> ¦ advent: e6de99eb2c | (Tom Browder)++ | raku-advent-2022/articles/tbrowder.md

[16:03] <Geth> ¦ advent: update

[16:03] <Geth> ¦ advent: review: https://github.com/Raku/advent/commit/e6de99eb2c

[16:03] <Geth> ¦ advent: 57d73c0813 | (Tom Browder)++ (committed using GitHub Web editor) | raku-advent-2022/articles/tbrowder.md

[16:03] <Geth> ¦ advent: Merge pull request #100 from tbrowder/tbrowder

[16:03] <Geth> ¦ advent: 

[16:03] <Geth> ¦ advent: update

[16:03] <Geth> ¦ advent: review: https://github.com/Raku/advent/commit/57d73c0813

[16:05] *** linkable6 left
[16:06] *** Maylay joined
[16:06] *** linkable6 joined
[16:10] *** Kaiepi left
[16:23] <discord-raku-bot> <Anton Antonov> @tbrowser Ditto... 🦃

[16:35] *** jpn left
[16:43] *** jpn joined
[17:04] *** epony left
[17:09] *** MasterDuke joined
[17:29] *** habere-et-disper joined
[17:34] *** dakkar left
[17:40] *** habere-et-disper left
[17:46] <Xliff> tbrowder: Thanks! Happy Thanksgiving to you as well!

[18:07] *** reportable6 left
[18:08] *** jjido joined
[18:08] *** reportable6 joined
[18:29] *** Kaiepi joined
[18:36] *** jpn left
[18:42] *** euandreh left
[18:42] *** euandreh joined
[18:44] *** euandreh left
[18:44] *** euandreh joined
[18:48] *** euandreh left
[18:48] *** euandreh joined
[18:49] *** deoac joined
[19:12] *** eseyman left
[19:29] *** euandreh left
[19:29] *** euandreh joined
[19:34] *** Sgeo joined
[19:48] *** euandreh left
[19:48] *** deoac left
[19:51] *** Guest9774 joined
[19:53] *** Guest9774 left
[19:57] *** euandreh joined
[19:59] *** euandreh left
[20:02] *** euandreh joined
[20:09] <patrickb> o/

[20:10] <patrickb> I'm currently debugging Cro::Client. It seems as if a supply is not doing what it should. Is there a way to introspect a supplier/supply pair to see what subscribers there are?

[20:17] *** ToddAndMargo joined
[20:25] *** sena_kun left
[20:31] *** MasterDukeMobile joined
[20:40] *** MasterDukeMobile left
[20:43] *** Xliff left
[21:06] *** sgrs left
[21:09] *** Guest32 joined
[21:12] *** NemokoschKiwi joined
[21:13] <discord-raku-bot> <Nemokosch> nine: can Inline::Python be used to import object from Python, or only for function calls?

[21:13] *** NemokoschKiwi left
[21:54] *** defaultxr left
[22:01] *** sgrs joined
[23:01] *** linkable6 left
[23:01] *** evalable6 left
[23:03] *** evalable6 joined
[23:04] *** linkable6 joined
[23:09] *** epony joined
[23:16] <[Coke]> is there a way I can tell raku to ignore any installed modules? or setup a specific install directory so I can use just certain modules?

[23:40] *** deoac joined
