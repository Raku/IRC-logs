[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:03] *** kolofon joined
[00:14] *** Maylay left
[00:16] *** jgaz left
[00:22] *** kolofon left
[00:30] *** Maylay joined
[01:30] *** reportable6 left
[01:30] *** evalable6 left
[01:30] *** greppable6 left
[01:30] *** committable6 left
[01:30] *** quotable6 left
[01:30] *** sourceable6 left
[01:30] *** nativecallable6 left
[01:30] *** bloatable6 left
[01:30] *** statisfiable6 left
[01:30] *** coverable6 left
[01:30] *** releasable6 left
[01:30] *** bisectable6 left
[01:30] *** shareable6 left
[01:30] *** tellable6 left
[01:30] *** unicodable6 left
[01:30] *** linkable6 left
[01:30] *** notable6 left
[01:30] *** benchable6 left
[01:30] *** sourceable6 joined
[01:30] *** evalable6 joined
[01:30] *** linkable6 joined
[01:31] *** notable6 joined
[01:31] *** unicodable6 joined
[01:31] *** Kaiepi left
[01:31] *** bisectable6 joined
[01:31] *** greppable6 joined
[01:32] *** shareable6 joined
[01:32] *** quotable6 joined
[01:32] *** coverable6 joined
[01:32] *** statisfiable6 joined
[01:32] *** benchable6 joined
[01:32] *** nativecallable6 joined
[01:33] *** reportable6 joined
[01:33] *** bloatable6 joined
[01:33] *** releasable6 joined
[01:33] *** committable6 joined
[01:45] *** japhb left
[01:58] *** japhb joined
[01:59] *** ProperNoun left
[02:01] *** ProperNoun joined
[02:14] *** Maylay left
[02:19] *** Maylay joined
[02:23] *** Maylay left
[02:50] *** Maylay joined
[03:21] *** Maylay left
[03:22] *** Maylay joined
[03:33] *** Maylay left
[04:10] *** Maylay joined
[05:00] *** Maylay left
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:14] *** Maylay joined
[06:32] *** Maylay left
[06:44] *** discord-raku-bot left
[06:57] *** Maylay joined
[07:22] *** Maylay left
[07:35] *** bingos is now known as BinGOs

[07:50] *** Maylay joined
[07:53] *** Sgeo left
[08:03] *** Maylay left
[08:16] *** Maylay joined
[08:38] *** Maylay left
[08:42] *** Maylay joined
[08:55] *** Maylay left
[09:17] *** gfldex joined
[09:18] *** dakkar joined
[09:19] *** discord-raku-bot joined
[09:22] *** Maylay joined
[09:23] *** discord-raku-bot left
[09:30] *** Maylay left
[09:31] *** synthmeat left
[09:31] *** synthmeat joined
[09:35] *** Maylay joined
[09:36] *** sena_kun joined
[09:47] *** Maylay left
[10:01] *** Kaiepi joined
[10:06] *** Maylay joined
[10:07] *** lichtkind joined
[11:07] *** notable6 left
[11:07] *** coverable6 left
[11:07] *** quotable6 left
[11:07] *** greppable6 left
[11:07] *** benchable6 left
[11:07] *** committable6 left
[11:07] *** nativecallable6 left
[11:07] *** linkable6 left
[11:07] *** statisfiable6 left
[11:07] *** bisectable6 left
[11:07] *** unicodable6 left
[11:07] *** shareable6 left
[11:07] *** evalable6 left
[11:07] *** sourceable6 left
[11:07] *** bloatable6 left
[11:07] *** releasable6 left
[11:07] *** reportable6 left
[11:08] *** linkable6 joined
[11:08] *** greppable6 joined
[11:08] *** statisfiable6 joined
[11:08] *** bisectable6 joined
[11:08] *** releasable6 joined
[11:08] *** shareable6 joined
[11:09] *** benchable6 joined
[11:09] *** coverable6 joined
[11:09] *** unicodable6 joined
[11:09] *** nativecallable6 joined
[11:10] *** notable6 joined
[11:10] *** bloatable6 joined
[11:10] *** reportable6 joined
[11:10] *** sourceable6 joined
[11:10] *** committable6 joined
[11:10] *** quotable6 joined
[11:10] *** evalable6 joined
[11:36] *** andinus` left
[11:37] *** andinus joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[13:02] *** nativecallable6 left
[13:02] *** greppable6 left
[13:02] *** shareable6 left
[13:02] *** unicodable6 left
[13:02] *** evalable6 left
[13:02] *** sourceable6 left
[13:02] *** coverable6 left
[13:02] *** bloatable6 left
[13:02] *** reportable6 left
[13:02] *** statisfiable6 left
[13:02] *** committable6 left
[13:02] *** bisectable6 left
[13:02] *** benchable6 left
[13:02] *** linkable6 left
[13:02] *** quotable6 left
[13:02] *** releasable6 left
[13:02] *** notable6 left
[13:03] *** bisectable6 joined
[13:03] *** benchable6 joined
[13:03] *** sourceable6 joined
[13:03] *** unicodable6 joined
[13:04] *** statisfiable6 joined
[13:04] *** evalable6 joined
[13:04] *** bloatable6 joined
[13:04] *** committable6 joined
[13:04] *** releasable6 joined
[13:05] *** linkable6 joined
[13:05] *** nativecallable6 joined
[13:05] *** notable6 joined
[13:05] *** coverable6 joined
[13:05] *** shareable6 joined
[13:06] *** greppable6 joined
[13:06] *** quotable6 joined
[13:06] *** reportable6 joined
[14:06] *** reportable6 left
[14:06] *** releasable6 left
[14:06] *** notable6 left
[14:06] *** shareable6 left
[14:06] *** committable6 left
[14:06] *** sourceable6 left
[14:06] *** statisfiable6 left
[14:06] *** benchable6 left
[14:06] *** evalable6 left
[14:06] *** nativecallable6 left
[14:06] *** bloatable6 left
[14:06] *** coverable6 left
[14:06] *** unicodable6 left
[14:06] *** quotable6 left
[14:06] *** linkable6 left
[14:06] *** greppable6 left
[14:06] *** bisectable6 left
[14:06] *** bloatable6 joined
[14:06] *** unicodable6 joined
[14:06] *** releasable6 joined
[14:06] *** bisectable6 joined
[14:06] *** notable6 joined
[14:06] *** greppable6 joined
[14:07] *** linkable6 joined
[14:07] *** committable6 joined
[14:07] *** quotable6 joined
[14:07] *** evalable6 joined
[14:07] *** statisfiable6 joined
[14:07] *** sourceable6 joined
[14:08] *** nativecallable6 joined
[14:08] *** coverable6 joined
[14:09] *** shareable6 joined
[14:09] *** benchable6 joined
[14:09] *** reportable6 joined
[14:19] <tbrowder> ref path parts, that's not quite correct. iour IO guide doesn't

[14:22] <tbrowder> show how deeper dir structures work. in fact, i would like to see more class methods to truly take a path apart. (perhaps one called .subpaths or such since .parts is taken; or .all-parts; OR enhance the current .parts)

[14:37] <Voldenet> consider calling them path segments

[14:37] <Voldenet> it's URI naming, but I find it neat

[14:49] *** dogbert17 joined
[14:51] <tbrowder> i like that. but fiddling deeper with docs i see most examples are using syntax of "/full/path".IO.method but i don't see a more practical example where a prog has a path or file name in  $filename and then operate on that. i'm still working on a possible doc chg and finding lots i've not visited before in the IO and IO::Path classes...

[14:51] *** dogbert11 left
[15:51] *** shareable6 left
[15:51] *** quotable6 left
[15:51] *** bloatable6 left
[15:51] *** nativecallable6 left
[15:51] *** sourceable6 left
[15:51] *** notable6 left
[15:51] *** reportable6 left
[15:51] *** releasable6 left
[15:51] *** linkable6 left
[15:51] *** evalable6 left
[15:51] *** coverable6 left
[15:51] *** unicodable6 left
[15:51] *** bisectable6 left
[15:51] *** statisfiable6 left
[15:51] *** benchable6 left
[15:51] *** committable6 left
[15:51] *** greppable6 left
[15:52] *** nativecallable6 joined
[15:52] *** bisectable6 joined
[15:52] *** coverable6 joined
[15:53] *** benchable6 joined
[15:53] *** committable6 joined
[15:53] *** reportable6 joined
[15:53] *** notable6 joined
[15:53] *** bloatable6 joined
[15:53] *** unicodable6 joined
[15:53] *** quotable6 joined
[15:54] *** linkable6 joined
[15:54] *** shareable6 joined
[15:54] *** greppable6 joined
[15:54] *** sourceable6 joined
[15:54] *** evalable6 joined
[15:54] *** releasable6 joined
[15:54] *** statisfiable6 joined
[15:56] <tbrowder> yep, path handling imho could be better.

[15:57] <[Coke]> I am using proc::async to run a bunch of git commands, and for some reason my list of branches isn't matching up when I run the commands by hand. the async pattern makes it a little challening to true up the output from the various commands to the output I'd get by hand. (esp. since I'm running commands with 100s of branch names)

[15:59] <[Coke]> I'm sure I'm doing something stupid somewhere, just can't do the matchup to see what it is. :)

[16:00] <tbrowder> file.parents for all paths, e.g.: "/a/b/c".IO.parents.say: "/a", "/a/b"

[16:01] <tbrowder> file

[16:02] <tbrowder> "/a/b/c".segments.say: "a", "b", "c"

[16:15] <tbrowder>  hm, a quick glance at rakudo source and it looks like .segments would be a cake walk for lizmat ;-)

[16:18] <ugexe> split on $SPEC.dir-sep

[16:18] <ugexe> $*SPEC.dir-sep

[16:19] <ugexe> which also probably reads better than something like 'segment' which could reasonably be interpreted to mean many other things

[16:19] <tbrowder> .path-segments

[16:20] <ugexe> i dont see how a developer can imply what .path-segments means either

[16:20] <ugexe> (i.e. windows will have a volume, is that part of a segment?)

[16:21] <tbrowder> m: my $p = "/a/b/c"; $p.split: $*SPEC.dir-sep

[16:21] <camelia> rakudo-moar 47f9b2860: ( no output )

[16:22] <ugexe> m: say "/a/b/c".split($*SPEC.dir-sep)

[16:22] <camelia> rakudo-moar 47f9b2860: OUTPUT: «( a b c)␤»

[16:22] <tbrowder> yes, i would expect to get the volume

[16:22] <ugexe> right, but would everyone?

[16:22] <tbrowder> good question

[16:23] <tbrowder> run it up the flag pole and see if anyone salutes it :-D

[16:25] <tbrowder> i think we already show the volume on .parts (or one of the other methods)

[16:26] <tbrowder> anyhow, i see the work-around for my current use case

[16:27] <tbrowder> thnx for the $*SPEC.dir-sep reminder

[16:40] <[Coke]> is there a case where "git show -q --format='...' remotebranch1 remotebranch2 remotebranch3" would not return 3 lines of output?

[16:48] <[Coke]> DOH. Yes - when two of the branches are the same commit.

[16:50] <[Coke]> I had started chunking the git calls (had been doing 2 calls per branch, figured out how to do 1 per a hundred)... but now over the thousands of branches I'm looking at, some are dupes, and so fall off the output list. Oy.

[16:54] *** linkable6 left
[16:55] *** linkable6 joined
[16:57] <[Coke]> raku, sorry I doubted you. :)

[17:02] *** dakkar left
[17:22] *** ProperNoun left
[17:29] *** tejr left
[17:29] *** tejr joined
[17:54] *** Scotteh_ is now known as Scotteh

[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:13] * lizmat clickbaits https://rakudoweekly.blog/2022/08/01/2022-31-justintimerelease/

[18:33] *** mexen left
[19:33] *** linkable6 left
[19:36] *** linkable6 joined
[19:55] *** kolofon joined
[20:22] *** japhb left
[20:33] *** japhb joined
[20:41] <[Coke]> m: class A { has Int $.foo } ; my $a = A.new; $a.foo = 3;

[20:41] <camelia> rakudo-moar 47f9b2860: OUTPUT: «Cannot modify an immutable 'Int' type object␤  in block <unit> at <tmp> line 1␤␤»

[20:41] <[Coke]> What dumb thing am I doing here?

[20:42] <ugexe> m: class A { has Int $.foo is rw } ; my $a = A.new; $a.foo = 3;

[20:42] <camelia> rakudo-moar 47f9b2860: ( no output )

[20:42] <[Coke]> ah, that dumb thing. Thanks

[21:26] *** Maylay left
[21:29] *** Maylay joined
[21:31] *** BinGOs left
[21:37] *** sena_kun left
[21:39] *** kolofon left
[22:26] *** bingos joined
[22:45] *** Sgeo joined
[23:08] *** lichtkind left
[23:31] *** gugod joined
[23:54] *** [Coke]_ joined
[23:56] *** [Coke] left
[23:58] *** gfldex left
