[00:02] *** merpaderp left
[00:02] *** merpaderp joined
[00:07] *** reportable6 left
[01:07] *** evalable6 left
[01:07] *** squashable6 left
[01:07] *** releasable6 left
[01:07] *** bloatable6 left
[01:07] *** nativecallable6 left
[01:07] *** linkable6 left
[01:07] *** notable6 left
[01:07] *** committable6 left
[01:07] *** bisectable6 left
[01:07] *** sourceable6 left
[01:07] *** statisfiable6 left
[01:07] *** quotable6 left
[01:07] *** benchable6 left
[01:07] *** unicodable6 left
[01:07] *** coverable6 left
[01:07] *** greppable6 left
[01:07] *** tellable6 left
[01:07] *** shareable6 left
[01:08] *** releasable6 joined
[01:09] *** notable6 joined
[01:09] *** greppable6 joined
[01:09] *** statisfiable6 joined
[01:09] *** shareable6 joined
[01:09] *** coverable6 joined
[01:10] *** squashable6 joined
[01:10] *** nativecallable6 joined
[01:10] *** linkable6 joined
[01:13] *** eseyman left
[01:35] *** eseyman joined
[01:45] <japhb> Story in what sense?  There is a raku-mode, I use it, it does what I need for the most part.
[02:07] *** frost joined
[02:09] *** benchable6 joined
[02:10] *** sourceable6 joined
[02:11] *** unicodable6 joined
[02:23] *** simcop2387 left
[02:23] *** perlbot left
[02:24] *** simcop2387 joined
[02:24] *** perlbot joined
[02:33] *** floppy_disk joined
[02:39] <drakonis> japhb: code completion works as expected, yeah?
[02:39] <drakonis> i tried emacs and found it odd that completion didn't really work all that well
[02:50] <japhb> drakonis: What kind of "code completion" are you talking about?  Being able to tab-complete partial method/class/constant names, that sort of thing?
[02:50] <drakonis> yeah, that's the one.
[02:51] <japhb> Ah, in that case you're probably looking more for what's in Comma than in Emacs raku-mode
[02:51] <drakonis> ah i see.
[02:51] <japhb> raku-mode is more about highlighting, code layout defaults, correct region commenting, that sort of thing
[02:51] <drakonis> i already have comma installed, but fair enough.
[02:52] <drakonis> its still ways from being competitive with other major modes in emacs
[02:52] <japhb> A recent version, I hope?  Comma does regular releases.
[02:52] <drakonis> its as recent as yesterday
[02:53] <japhb> drakonis: Not terribly surprised; several of the folks who are really good at writing editor plugins work on Comma.
[02:53] <japhb> (And thus not on Emacs, I mean.)
[02:53] <drakonis> bummer
[02:54] <japhb> Opportunity for you?  ;-)
[02:54] <drakonis> ha, perhaps.
[02:54] <drakonis> i'm not particularly great at elisp anyways
[02:54] <japhb> I resemble that remark
[02:55] <perryprog> Tangentially related, but I remember a person at a place I had a paid internship I had who wrote production applications in elisp
[02:55] <perryprog> They loooved it
[02:55] <drakonis> lol, elisp or common lisp?
[02:55] <perryprog> Elisp!
[02:55] <drakonis> ha, that's impressive
[02:56] <perryprog> For sure. Had a pretty sick emacs setup, too.
[02:56] <perryprog> (Duh)
[02:56] <drakonis> haw, you gotta have that.
[02:56] <perryprog> Admittedly emacs's first class support for elisp is pretty nice
[02:56] <japhb> I bet.  If you're going to invest all that time in learning one particular lisp variant, you'll tend to get into customizing
[02:56] <drakonis> i'm coming off common lisp to check out raku
[02:57] <drakonis> i dearly miss the editing experience i suppose
[02:57] <perryprog> I've gotta finish learning sbcl
[02:57] <perryprog> My favorite language has always been Clojure, though :)
[02:58] <drakonis> i'm ambivalent towards clojure
[02:59] <perryprog> It helps if you're coming from JVM land, like I was
[02:59] <drakonis> that's true, yeah.
[02:59] <perryprog> Having access to that giant toolbox helps a ton in understanding the power Clojure gives
[02:59] <drakonis> clojure's popularity is largely due to that
[02:59] <perryprog> Definitely 
[03:00] <perryprog> Somewhat decent interoperability from functional to OO isn't easy to pull off
[03:00] <perryprog> (Not amazing, mind you, but there's only so much you can do ;) )
[03:00] <drakonis> sure thing.
[03:02] <drakonis> raku looks very nice though
[03:02] <drakonis> i've heard about it back when it was still perl 6 but never actually bothered looking too deep into it
[03:03] <drakonis> today i looked up the docs and actually got curious about it
[03:03] <drakonis> seems like a lot of fun to play with
[03:07] *** andinus left
[03:08] *** evalable6 joined
[03:08] *** floppy_disk left
[03:09] *** bisectable6 joined
[03:09] *** bloatable6 joined
[03:12] <drakonis> this rakuast thing looks pretty cool
[03:29] *** tejr left
[03:38] *** tejr joined
[03:42] *** tejr left
[03:50] <Voldenet> Functional languages have the immutability causing performance problems that get shrugged off and clojure is no exception iirc
[03:54] *** tejr joined
[03:59] *** floppy_disk joined
[04:00] <Voldenet> compare HEAD (^100000).reduce({ $^a + $^b }).say; ||| my $a = 0; for ^100000 { $a += $_ }; say $a;
[04:09] *** reportable6 joined
[04:30] <floppy_disk> what is the general file structure of a raku project?
[04:39] *** zacts joined
[04:50] <japhb> floppy_disk: https://docs.raku.org/language/modules#Preparing_the_module is a start (though slightly out of date).  App::Mi6 will create a reasonable starting skeleton, and there are some other tools for that as well; see https://docs.raku.org/language/modules-extra
[04:51] <floppy_disk> i see, thanks a lot
[04:52] <japhb> Sure
[04:53] *** zacts left
[05:06] *** Darkcoal joined
[05:08] *** tellable6 joined
[05:09] *** committable6 joined
[06:02] *** mexen joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:08] *** quotable6 joined
[06:22] *** floppy_disk left
[06:55] *** discord-raku-bot left
[06:55] *** discord-raku-bot joined
[07:08] *** Darkcoal left
[07:10] *** Darkcoal joined
[07:13] *** jjido joined
[07:32] *** Darkcoal left
[07:33] *** Darkcoal joined
[07:41] *** Darkcoal left
[07:41] *** Darkcoal joined
[07:53] *** Darkcoal left
[07:53] *** Sgeo left
[07:54] *** Darkcoal joined
[08:16] *** Darkcoal left
[08:16] *** frost left
[08:17] *** Darkcoal joined
[08:18] *** frost joined
[08:22] *** Darkcoal left
[08:24] *** Darkcoal joined
[08:24] *** jjido left
[08:32] *** abraxxa joined
[08:37] *** abraxxa left
[08:37] *** abraxxa joined
[08:52] *** frost left
[08:53] *** dakkar joined
[08:56] *** Manifest0 joined
[08:59] *** frost joined
[09:00] *** frost left
[09:05] *** Darkcoal left
[09:07] *** Darkcoal joined
[09:21] *** abraxxa left
[09:22] *** abraxxa joined
[09:36] <MasterDuke> benchable6: compare HEAD (^100000).reduce({ $^a + $^b }).say; ||| my $a = 0; for ^100000 { $a += $_ }; say $a;       # Voldenet
[09:36] <benchable6> MasterDuke, starting to benchmark the 1 given commit
[09:36] <benchable6> MasterDuke, ¦HEAD: «4===SORRY!4=== Error while compiling /tmp/Iy9MHdGyDL␤Missing block␤at /tmp/Iy9MHdGyDL:1␤------> 3y $b = Bench.new; $b.cmpthese(10, %subs)8⏏4<EOL>␤»
[09:36] <Voldenet> huh~
[09:36] <Voldenet> it wasn't me, was it
[09:37] <MasterDuke> no, that's new...huh
[09:38] <MasterDuke> benchable6: 2015.12,2022.02 (^100000).reduce({ $^a + $^b }).say
[09:38] <benchable6> MasterDuke, starting to benchmark the 2 given commits
[09:38] <benchable6> MasterDuke, ¦2015.12: «1.6428» ¦2022.02: «0.4185»
[09:38] <benchable6> MasterDuke, benchmarked the given commits and found a performance difference > 10%, now trying to bisect
[09:39] <benchable6> MasterDuke, benchmarked the given commits and found a performance difference > 10%, now trying to bisect
[09:40] <benchable6> MasterDuke, benchmarked the given commits and found a performance difference > 10%, now trying to bisect
[09:41] <benchable6> MasterDuke, benchmarked the given commits and found a performance difference > 10%, now trying to bisect
[09:41] <MasterDuke> i need to quiet that a bit
[09:41] <benchable6> MasterDuke, benchmarked the given commits and found a performance difference > 10%, now trying to bisect
[09:42] <benchable6> MasterDuke, benchmarked the given commits and found a performance difference > 10%, now trying to bisect
[09:42] <benchable6> MasterDuke, «hit the total time limit of 240 seconds»
[09:43] <MasterDuke> benchable6: compare HEAD (^100000).reduce({ $^a + $^b }).say; ||| my $a = 0; for ^100000 { $a += $_ }; say $a;
[09:43] <benchable6> MasterDuke, starting to benchmark the 1 given commit
[09:43] <benchable6> MasterDuke, https://gist.github.com/0b0a6f6df5c5adf045811ffd397d92fa
[09:43] <MasterDuke> looks like it just didn't like the comment
[10:11] <Voldenet> Whoa, that's quite a difference :O
[10:12] *** jjido joined
[10:27] *** jjido left
[10:32] *** euandreh left
[10:32] *** euandreh joined
[10:54] *** frost joined
[11:03] *** razetime joined
[11:10] *** razetime left
[11:11] *** razetime joined
[11:26] *** Altai-man joined
[11:56] *** frost left
[11:56] *** donaldh joined
[12:07] *** reportable6 left
[12:12] <Geth> ¦ ecosystem: 6f7a7f3d35 | (Elizabeth Mattijsen)++ | META.list
[12:12] <Geth> ¦ ecosystem: Fix URL of libdigest
[12:12] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/6f7a7f3d35
[12:29] *** frost joined
[12:47] *** frost left
[13:08] *** reportable6 joined
[13:08] *** razetime left
[13:20] *** razetime joined
[14:06] *** Sgeo joined
[14:11] *** frost joined
[14:14] *** frost left
[14:20] *** frost joined
[14:25] *** frost left
[14:32] *** Darkcoal left
[14:35] *** Darkcoal joined
[14:50] *** morte_ joined
[15:01] *** perlbot left
[15:01] *** perlbot joined
[15:21] *** razetime left
[15:26] *** jjido joined
[15:31] *** razetime joined
[15:32] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/03/14/2022-011-tau-2/
[15:33] *** jjido left
[15:34] *** rjhb joined
[15:36] *** rjhb left
[15:42] *** patrickb left
[15:43] *** patrickb joined
[16:01] *** linkable6 left
[16:02] *** linkable6 joined
[16:14] *** morte_ left
[16:21] *** morte_ joined
[16:49] *** razetime left
[16:54] *** jjido joined
[16:57] *** nebuchadnezzar left
[17:09] *** mexen left
[17:26] *** Altai-man left
[17:26] *** Altai-man joined
[17:38] *** dakkar left
[17:39] *** jjido left
[17:43] *** jjido joined
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:13] *** jjido left
[18:13] *** Altai-man left
[18:27] *** morte_ left
[18:28] <kiti_nomad[m]> 草泥马，别搞政治正确
[18:29] <kiti_nomad[m]> Don't follow the trend of politics
[18:32] <[Coke]> google translate says that included the phrase "political correctness", which in the US, is a weird right-wing way to say "treat other people with respect".
[18:33] <[Coke]> but that's probably just a bad translation.
[18:35] <kiti_nomad[m]> If you do not support Ukraine, will your computer not be able to work? Does politics affect programming? What kind of life did the people of Ukraine live before Russia and Ukraine went to war? Do you understand? No one really cares about life in Ukraine, so why write about those junk things?
[18:37] <lizmat> "No one really cares about life in Ukraine"
[18:37] <lizmat> Actually I do, good friends of mine lived in the Ukraine and had to flee
[18:38] <lizmat> apart from that: Russia's government and clergy want me dead, literally!
[18:38] <lizmat> so yes, I *do* care
[18:40] <lizmat> and that's why I write about them in the Rakudo Weekly
[18:43] <[Coke]> oh, and having googled a bit more about the chinese there, I see the apparently nonsensical intro is probably a standin for a rude phrase.
[18:44] <kiti_nomad[m]> So why don't you support North Koreans, Cubans, Libyans, Syrians, Yugoslavs, and Afghanistan?
[18:46] <lizmat> https://en.wikipedia.org/wiki/Grass_Mud_Horse#Etymology_and_species
[18:46] <lizmat> so why don't you start with a more friendly intro?
[18:51] <kiti_nomad[m]> A dog bit a beggar. No one cares about the life of that beggar unless someone is on the scene, because this is an opportunity to make a show. But they just pretended to intimidate the dog, and no one would really fight with the dog. Now those people say that beggars are pitiful when they see people
[18:56] <lizmat> https://en.wikipedia.org/wiki/Whataboutism
[18:57] *** ChanServ sets mode: +o lizmat
[18:59] <BinGOs> [Coke]: all the cool fascists say "woke" and "cancel culture" these days.
[19:03] <[Coke]> BinGOs: fair, PC is an earlier variant.
[19:03] <kiti_nomad[m]> As far as I know, I think Ukraine is eager to be invaded by Russia. Because you can join the European Union or NATO in this way. Then you don't have to do anything, just stretch out your hands like those beggars, and you can be happy.
[19:04] *** kiti_nomad[m] was kicked by lizmat (Your behavior is not conducive to the desired environment.))
[19:04] <Xliff> 'bout time.
[19:04] *** sena_kun left
[19:05] *** ChanServ sets mode: -o lizmat
[19:05] <[Coke]> Thank you.
[19:05] <Xliff> lizmat: Sorry you had to deal with that. Know you are appreciated for who you are in this direction. 
[19:05] <lizmat> thank you all
[19:06] <lizmat> I understand we are all living in a bubble and may not realize it
[19:06] *** sena_kun joined
[19:06] <lizmat> but I also do not want to have large discussions about that here
[19:07] <ugexe> they were, ahem, begging for it
[19:11] <lizmat> dinner&
[19:12] *** ChanServ sets mode: +o [Coke]
[19:19] *** Darkcoal left
[19:19] <Xliff> No, this place is not for such things.
[20:00] *** monkey_ joined
[20:46] *** sjn_ is now known as sjn
[20:53] <discord-raku-bot> <Nemokosch#9980> what's the semantics of junctions? I find it very confusing but I don't think it's an issue per se
[20:53] <discord-raku-bot> <Nemokosch#9980> to show what I mean:
[20:53] <discord-raku-bot> <Nemokosch#9980> so all(1,4) > 3
[20:55] <discord-raku-bot> <Nemokosch#9980> this is False - makes sense, not all values are greater than 3
[20:55] <discord-raku-bot> <Nemokosch#9980> so all(1,4) <= 3
[20:55] <discord-raku-bot> <Nemokosch#9980> this is also False - again, makes sense, not all values are maximum 3
[20:56] <discord-raku-bot> <Nemokosch#9980> so all(1, 4) == 1
[20:56] <[Coke]> m: say so all(1,4) == 1
[20:56] <camelia> rakudo-moar 377564339: OUTPUT: «False␤»
[20:57] <[Coke]> (does camelia not work on discord bot sends? Guess that makes sense)
[20:57] <discord-raku-bot> <Nemokosch#9980> also False - still makes sense, not all values are equal to 1
[20:57] <discord-raku-bot> <Nemokosch#9980> so all(1, 4) != 1
[20:57] <discord-raku-bot> <Nemokosch#9980> this is True, even though not all values differ from 1 obviously
[20:57] <discord-raku-bot> <Nemokosch#9980> I get that this is because ! is a meta-operator but that's not the semantics I need
[20:57] <discord-raku-bot> <Nemokosch#9980> <= is not the same as !>
[20:57] <discord-raku-bot> <Nemokosch#9980> now, I want the non-meta negative counterpart of ==
[20:59] <[Coke]> m: say any(1,4) &infix<!=> 1; say so any(1,4) &infix<!=> 1
[20:59] <camelia> rakudo-moar 377564339: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> say any(1,4) &infix<!=>⏏ 1; say so any(1,4) &infix<!=> 1␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        st…»
[20:59] <discord-raku-bot> <Nemokosch#9980> Camelia does work on discord sends every now and then btw but it's laggy so I didn't want to use it
[20:59] <[Coke]> m: say any(1,4) &infix:<!=> 1; say so any(1,4) &infix:<!=> 1
[20:59] <camelia> rakudo-moar 377564339: OUTPUT: «all(any(1, 4), True)␤True␤»
[21:03] <[Coke]> so I showed both because I'm not sure the uncollapsed version is correct, but the collapsed version is.
[21:05] <discord-raku-bot> <Nemokosch#9980> again, what is the semantics, then?
[21:07] <discord-raku-bot> <Nemokosch#9980> oh, if you write &infix:<!=> instead of !=, it works well
[21:07] <discord-raku-bot> <Nemokosch#9980> I mean... if this really makes this sort of difference, I might open a problem solving issue for this...
[21:19] *** jjido joined
[21:22] <discord-raku-bot> <Nemokosch#9980> no, the infix:<!=> version isn't actually right either
[21:22] <discord-raku-bot> <Nemokosch#9980> in fact it's completely wrong, as illustrated by the uncollapsed version
[21:24] <discord-raku-bot> <Nemokosch#9980> m: say so any(0,1,4) &infix:<!=> 1;
[21:24] <discord-raku-bot> <Nemokosch#9980> ... anyway, this will be False because of the falsiness of 0
[21:26] <discord-raku-bot> <Nemokosch#9980> wait no, with any, it's no problem
[21:26] <discord-raku-bot> <Nemokosch#9980> with all, however
[21:28] <discord-raku-bot> <Nemokosch#9980> all(1,4) &infix:<!=> 2 #True
[21:28] <discord-raku-bot> <Nemokosch#9980> vs
[21:28] <discord-raku-bot> <Nemokosch#9980> all(0,1,4) &infix:<!=> 2 #False
[21:36] *** abraxxa left
[22:30] *** djerius left
[22:33] *** djerius joined
[22:34] *** jjido left
[22:38] *** jjido joined
[22:59] <discord-raku-bot> <Nemokosch#9980> anyone who can say why 
[22:59] <discord-raku-bot> <Nemokosch#9980> 1+infix:<+> 4 
[22:59] <discord-raku-bot> <Nemokosch#9980> is 5 will get a cookie
[23:01] <discord-raku-bot> <Nemokosch#9980> seems to me it gets parsed as 1+(+4)
[23:01] <discord-raku-bot> <Nemokosch#9980> so `any(1,4) &infix:<!=> 4` was a lie all along
[23:02] <moon-child> m: my &f = &infix:<+>; say 1 + f 4
[23:02] <camelia> rakudo-moar 377564339: OUTPUT: «5␤»
[23:02] <discord-raku-bot> <Nemokosch#9980> it's in fact any(1,4) & (!= 4)
[23:03] <discord-raku-bot> <Nemokosch#9980> and for some reason this != 4 is even `True`
[23:03] <discord-raku-bot> <Nemokosch#9980> infix:<!=> 4
[23:03] <discord-raku-bot> <Nemokosch#9980> now this parsing might not be intended, I don't actually know
[23:04] <moon-child> yes
[23:12] <discord-raku-bot> <Nemokosch#9980> added a comment to the issue I've just created for != being so "meta" for junctions
[23:20] *** squashable6 left
[23:21] *** squashable6 joined
[23:27] *** ChanServ sets mode: -o [Coke]
[23:34] *** monkey_ left
[23:34] <ugexe>  any(0,4) != 0 is False #3748 -- https://github.com/rakudo/rakudo/issues/3748
[23:39] *** ilogger2 left
[23:43] <discord-raku-bot> <Nemokosch#9980> > This may be a notabug, but it's really unexpected and annoying behavior. This makes junctions way too unpredictable to work with.
[23:58] *** jjido left
