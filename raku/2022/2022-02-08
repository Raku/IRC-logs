[00:07] *** reportable6 left
[00:09] *** djerius left
[00:10] *** djerius joined
[01:10] *** greppable6 left
[01:10] *** committable6 left
[01:10] *** linkable6 left
[01:10] *** coverable6 left
[01:10] *** nativecallable6 left
[01:10] *** sourceable6 left
[01:10] *** bisectable6 left
[01:10] *** statisfiable6 left
[01:10] *** notable6 left
[01:10] *** benchable6 left
[01:10] *** squashable6 left
[01:10] *** shareable6 left
[01:10] *** unicodable6 left
[01:10] *** evalable6 left
[01:10] *** tellable6 left
[01:10] *** releasable6 left
[01:10] *** quotable6 left
[01:10] *** bloatable6 left
[01:11] *** benchable6 joined
[01:11] *** squashable6 joined
[01:11] *** coverable6 joined
[01:11] *** notable6 joined
[01:12] *** committable6 joined
[01:12] *** tellable6 joined
[01:12] *** statisfiable6 joined
[01:12] *** nativecallable6 joined
[01:13] *** greppable6 joined
[01:13] *** shareable6 joined
[01:13] *** sourceable6 joined
[01:13] *** releasable6 joined
[01:57] *** discord-raku-bot left
[01:58] *** discord-raku-bot joined
[02:10] *** reportable6 joined
[02:10] *** ajr left
[02:11] *** bisectable6 joined
[02:12] *** frost joined
[02:13] *** evalable6 joined
[02:13] *** quotable6 joined
[02:13] *** linkable6 joined
[02:14] *** juanfra__ left
[02:16] *** juanfra__ joined
[02:16] *** sena_kun left
[02:17] *** sena_kun joined
[02:20] *** ajr joined
[02:22] *** mahafyi left
[02:25] *** ajr left
[02:26] *** razetime joined
[02:45] *** ajr joined
[02:50] *** ajr left
[03:10] *** ajr joined
[03:13] *** bloatable6 joined
[03:15] *** ajr left
[03:26] *** guifa joined
[03:26] <guifa> o/
[03:35] *** ajr joined
[03:39] *** frost left
[03:40] *** ajr left
[04:00] *** ajr joined
[04:00] *** discord-raku-bot left
[04:00] *** discord-raku-bot joined
[04:05] *** ajr left
[04:13] *** frost joined
[04:24] *** ajr joined
[04:42] *** frost left
[04:51] *** Darkcoal joined
[04:58] *** yosik left
[05:21] *** perlenjoyer joined
[05:21] *** perlenjoyer left
[05:48] *** abraxxa joined
[05:51] *** ajr left
[05:58] *** abraxxa left
[05:58] *** abraxxa joined
[06:08] *** reportable6 left
[06:10] *** reportable6 joined
[06:11] *** unicodable6 joined
[06:13] *** abraxxa left
[06:14] *** abraxxa joined
[07:14] *** linkable6 left
[07:14] *** evalable6 left
[07:17] *** jaguart joined
[07:17] *** evalable6 joined
[07:19] *** mexen joined
[07:24] <jaguart> Folks - anyone available for a 1hr paid zoom raku tutorial specifically on Grammars, please DM me with timezone, rate, availability, payment arrangement. I'm a Perl programmer, looking to move to Raku, have a specific use-case but can't quite get my Grammar recursive foo working. I have a simple test.raku to use as the starting point, about 280 lines - most of which is test data.
[07:42] <moritz> (sent you a privmsg)
[08:05] *** MasterDuke left
[08:10] *** bdju left
[08:12] *** bdju joined
[08:17] *** linkable6 joined
[08:31] *** Sgeo left
[08:43] *** MasterDuke joined
[08:50] *** dakkar joined
[09:05] *** jjido joined
[09:31] *** jjido left
[10:19] *** lgtaube left
[10:24] *** lockywolf_ left
[10:28] *** lockywolf_ joined
[10:34] *** lgtaube joined
[10:58] *** slowtyper left
[10:59] *** slowtyper joined
[11:47] *** Altai-man joined
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[12:15] <elcaro> moritz: fyi, your snippet shows that `&::($name)` also returns the ref
[12:26] *** jjido joined
[12:56] *** [Coke] left
[12:58] *** Altai-man left
[12:59] *** Altai-man joined
[13:01] *** [Coke] joined
[13:09] * lizmat clickbaits https://rakudoweekly.blog/2022/02/07/2022-06-basicly/
[13:32] *** [Coke]_ joined
[13:35] *** [Coke] left
[13:47] *** jjido left
[14:34] <tbrowder> who am i today?
[14:34] <tbrowder> yea!
[14:34] <El_Che> confused?
[14:35] <tbrowder> yes, but prob was client and help desk helped me
[14:51] *** Sgeo joined
[15:27] *** MasterDuke left
[15:36] *** MasterDuke joined
[15:40] *** jjido joined
[15:44] *** jjido left
[16:07] *** [Coke]_ is now known as [Coke]
[16:14] *** dakkar left
[16:25] *** razetime left
[16:35] *** abraxxa left
[16:54] *** jjido joined
[17:07] *** Altai-man left
[17:10] <tbrowder> i was logged in with a random nick and didn’t know how to fix it…now i have the desired nickname back.
[17:12] *** Merfont left
[17:12] *** Kaiepi joined
[17:17] *** lichtkind joined
[17:21] <tbrowder> cro question (also asked on #cro): can anyone explain how to create a systemd setup to manage the cro app?
[17:24] *** mexen left
[17:24] <moritz> `cro run` runs in the foreground, yes?
[17:25] <moritz> then in the [Services] section, you can just write ExecStart=/path/to/your/cro run
[17:26] <moritz> possibly configure working directory and some environment variables
[17:29] <moritz> WorkingDirectory= and Environment=
[17:29] <moritz> or to start from the basics: you must write a systemd unit file (with the directives I've mentioned above)
[17:30] *** jjido left
[17:31] <moritz> then you can either start them as the current user (systemctl --user start ...), or install them system wide by putting them into /etc/systemd/system/; then you need to run `systemctl daemon-reload` to the make sure systemd looks for new unit files
[17:32] <moritz> ... and then you can run something like `systemctl start your-service` to start it, and with `systemctl enable ...` you can have it started automatically
[17:32] <moritz> tbrowder: ^^ does that help?
[17:33] <guifa> ah moritz is around!  
[17:34] * guifa might start bugging him mercilessly soon now that he's returned to Binex development 
[17:48] *** Garbanzo__ left
[17:48] *** Garbanzo__ joined
[18:01] *** Garbanzo__ left
[18:02] *** Garbanzo__ joined
[18:04] <tbrowder> moritz: yes, thank you!
[18:06] *** reportable6 left
[18:07] *** reportable6 joined
[18:08] *** Garbanzo__ left
[18:08] *** Garbanzo__ joined
[18:22] *** jjido joined
[18:25] *** Garbanzo__ left
[18:25] *** Garbanzo__ joined
[18:52] <leont> When writing rakudoc, how can I link to another module's documentation?
[18:57] *** Darkcoal left
[19:00] <tbrowder> L<>?
[19:03] <tbrowder> it works for some situations like READMEs on github where one may use pod::to::markdown.
[19:04] <tbrowder> the only way i know is to link to the module’s repo
[19:07] *** bdju left
[19:15] *** Garbanzo__ left
[19:16] *** Garbanzo__ joined
[19:17] *** Kaiepi left
[19:17] *** Kaiepi joined
[19:23] <leont> I added some L<>, but they don't appear to work
[19:25] <leont> E.g. https://raku.land/cpan:LEONT/Protocol::MQTT
[19:26] <leont> Like, you probably want either Protocol::MQTT::Client or Net::MQTT, but there's no way to send a user to either of those documentation pages
[20:05] <leont> Actually, is there any way to show more than one module in a dist at all? I have the impression none of our ecosystem sites support it
[20:17] *** linkable6 left
[20:17] *** evalable6 left
[20:19] *** evalable6 joined
[20:51] *** timo joined
[21:20] *** jjido left
[21:34] <tonyo>  
[21:35] *** jjido joined
[21:35] <tonyo> leont: didn't see you asked here, responded on twitter but you could do something like `curl -s 360.zef.pm | jq '.[] | select(.provides|has("Fez::CLI"))` (changing `Fez::CLI` to whatever you're seeking) to find out what dists report that module provided
[21:43] <leont> That's barely easier than browsing the git repository
[21:44] <leont> But it dosen't solve the real problem: actually showing the documentation of the other modules in a dist
[21:44] <tonyo> leont: ah, i misread your gripe as how to _find_ what provides that module and not the other way round
[21:49] *** bdju joined
[22:18] *** linkable6 joined
[22:34] <leont> Is there any way to encode a unicode-normalized string? A Uni object doesn't have an encode method, and .Str.encode seems to undo the normalization (because NFG I assume)
[22:37] <leont> m: my $a = "ë"; say $a.NFC.Str.encode eq $a.NFD.Str.encode
[22:37] <camelia> rakudo-moar 34c938c58: OUTPUT: «True␤»
[22:42] <gfldex> m: $*ENODOC++ for Parameter.new.constraint_list;
[22:42] <camelia> rakudo-moar 34c938c58: ( no output )
[22:43] <gfldex> lizmat++ # for cool code in cool module :)
[22:46] *** MasterDuke left
[22:59] *** djerius left
[22:59] <gfldex> Thinking about it, this might actually be an ENOAPI.
[23:00] <gfldex> Thinking about it, this might actually be an ENOAPI.
[23:02] *** djerius joined
[23:08] <leont> I've used it, but I suspect it isn't really api.
[23:20] *** lichtkind left
[23:32] *** curiosa joined
[23:32] <curiosa> Hello
[23:32] <curiosa> how do I know the line number when emitting a warning while parsing using a grammar?
[23:34] <gfldex> curiosa: You have to use a counter in the rule that is parsing lines.
[23:34] <gfldex> A grammar doesn't really know what a line is, so it can't do that for you.
[23:41] *** MasterDuke joined
[23:42] <curiosa> gfldex i'm not parsing lines but declarations
[23:42] <curiosa> a linebreak is a whitespace to me
[23:43] <curiosa> I would still like to put a warning with a line number in case of redeclaration of a symbol
[23:43] <curiosa> it's not about software but about the user
[23:44] <curiosa> I can imagine some weird workaround
[23:45] <MasterDuke> i'm not sure if it works in user grammars, but you could try experimenting with something like https://github.com/rakudo/rakudo/blob/master/src/Perl6/Grammar.nqp#L1009
[23:45] <curiosa> oh I will check it thanks MasterDuke
[23:46] *** curiosa left
