[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:04] *** MasterDuke left
[00:12] *** japhb left
[00:13] *** japhb joined
[01:13] *** nativecallable6 left
[01:13] *** reportable6 left
[01:13] *** quotable6 left
[01:13] *** bloatable6 left
[01:13] *** squashable6 left
[01:13] *** greppable6 left
[01:13] *** bisectable6 left
[01:13] *** coverable6 left
[01:13] *** evalable6 left
[01:13] *** statisfiable6 left
[01:13] *** unicodable6 left
[01:13] *** sourceable6 left
[01:13] *** notable6 left
[01:13] *** committable6 left
[01:13] *** linkable6 left
[01:13] *** shareable6 left
[01:13] *** benchable6 left
[01:13] *** releasable6 left
[01:13] *** squashable6 joined
[01:13] *** committable6 joined
[01:14] *** bloatable6 joined
[01:14] *** evalable6 joined
[01:14] *** greppable6 joined
[01:14] *** benchable6 joined
[01:15] *** bisectable6 joined
[01:15] *** reportable6 joined
[01:15] *** unicodable6 joined
[01:15] *** releasable6 joined
[01:16] *** shareable6 joined
[01:28] *** razetime joined
[02:14] *** nativecallable6 joined
[02:15] *** statisfiable6 joined
[02:16] *** linkable6 joined
[02:16] *** SqrtNegInf left
[02:42] *** razetime left
[03:02] *** nine left
[03:02] *** m_athias left
[03:02] *** nine joined
[03:03] *** m_athias joined
[03:04] *** razetime joined
[03:14] *** coverable6 joined
[03:14] *** quotable6 joined
[03:15] *** notable6 joined
[03:49] *** razetime left
[03:51] *** ocomport left
[04:01] *** amenonsen left
[04:09] *** amenonsen joined
[04:14] *** xinming left
[04:15] *** sourceable6 joined
[04:21] *** razetime joined
[04:47] *** xinming joined
[05:16] *** tejr left
[05:16] *** tejr joined
[05:52] *** djerius left
[05:52] *** tejr left
[05:57] *** djerius joined
[05:59] *** tejr joined
[06:00] *** reportable6 left
[06:07] *** djerius left
[06:07] *** djerius joined
[06:08] *** tejr left
[06:08] *** Sgeo left
[06:09] *** tejr joined
[06:10] *** tejr left
[06:39] *** perlmaros left
[06:44] *** perlmaros joined
[07:26] *** Summer left
[07:26] *** Summer joined
[07:32] *** tejr joined
[07:55] *** frost joined
[08:02] *** frost left
[08:17] *** abraxxa-home joined
[08:22] *** abraxxa-home left
[08:24] *** abraxxa-home joined
[08:26] *** razetime left
[08:34] *** MasterDuke joined
[08:36] *** jjido joined
[08:37] *** razetime joined
[08:46] *** razetime left
[08:47] *** razetime joined
[09:29] *** jjido left
[09:59] *** sena_kun left
[10:00] *** reportable6 joined
[10:01] *** sena_kun joined
[10:05] *** MasterDuke left
[10:13] <tbrowder> hi, all

[10:15] <lizmat> tbrowder  o/

[10:16] <discord-raku-bot> <Nemokosch#9980> üëã

[10:18] <tbrowder> i need to dynamically use a class' attributes. i know it can be done (moritz demoed it) but i cannot remember the syntax. say i have a class Foo with attribute a is rw, i would like to do something like my $attr = "a".  my $o = Foo.new; $o.{$attr} = 5;

[10:18] <tbrowder> lizmat: hi

[10:19] <lizmat> $o.attr = 5

[10:19] <lizmat> m: class Foo { has $.a is rw }; my $f = Foo.new; $f.a = 42; dd $f

[10:19] <camelia> rakudo-moar 8d284d8c1: OUTPUT: ¬´Foo $f = Foo.new(a => 42)‚ê§¬ª

[10:23] <tbrowder> yes, that's known, but how can i have an external scalar define the attribute name and use it with the class object?

[10:24] <tbrowder> in perl one could separate the object's arrow with whitespace and use a var for the attribute name

[10:25] <moritz> https://docs.raku.org/routine/get_value

[10:25] <moritz> also set_value

[10:26] <lizmat> m: class A { has $.foo = 42 }; my $a = A.new; my $b = "foo"; $a."$b"()

[10:26] <camelia> rakudo-moar 8d284d8c1: ( no output )

[10:26] <lizmat> m: class A { has $.foo = 42 }; my $a = A.new; my $b = "foo"; say $a."$b"()

[10:26] <camelia> rakudo-moar 8d284d8c1: OUTPUT: ¬´42‚ê§¬ª

[10:26] <tbrowder> i'm not explaining this very well

[10:26] *** frost joined
[10:27] <tbrowder> ah, my george that's it! thnx!

[10:27] <tbrowder> *by

[10:27] <discord-raku-bot> <Nemokosch#9980> my george? xD

[10:27] *** Xliff joined
[10:27] <lizmat> it's a euphemism for "by Jove" I believe  :-)

[10:27] <Xliff> \o

[10:27] <tbrowder> "by george" a mild epithet

[10:27] <Xliff> https://gist.github.com/Xliff/74ffdc15f4c20943185f9449240c5e78

[10:28] <tbrowder> yes, same as by jove

[10:28] <discord-raku-bot> <Nemokosch#9980> I think you explained it well - that is, if you really meant this $a."$b"()

[10:29] *** MasterDuke joined
[10:29] <discord-raku-bot> <Nemokosch#9980> this is too advanced language use for me o.O

[10:30] <tbrowder> yes. that may be in docs but i can't find it. it is probably in one of our raku/perl books

[10:36] *** frost left
[10:39] <Xliff> Could someone take a look at that gist and see if I am missing something obvious which would account for the referenced error message?

[10:39] <Xliff> TIA

[10:42] <lizmat> Xliff: please provide a full stacktrace with the gist

[10:43] <Xliff> --ll-exception?

[10:43] <lizmat> yup

[10:43] <Xliff> One sec

[10:44] <Xliff> Done

[10:45] <lizmat> and t/10-raw-hashtable.t ?

[10:46] <Xliff> That's the listing in the gist.

[10:46] <Xliff> Added a header to make that clear.

[10:47] <lizmat> where is g_hash_table_insert defined ?

[10:48] <Xliff> In the listing to t/10-raw-hashtable.t

[10:48] <Xliff> It's the... 2nd sub definition

[10:48] <lizmat> ack

[10:48] <Xliff> :)

[10:49] <Xliff> I made this as self-contained as possible!

[10:50] <Xliff> My golfs tend to be an entire course. 

[10:50] <lizmat> why are you using := on the guint and gboolean definition ?

[10:50] <lizmat> could you make that "=" ?

[10:50] <Xliff> No particular reason. That's very old code. 

[10:50] <Xliff> Yes, I can.

[10:50] <Xliff> Do you think that would make a difference

[10:50] <Xliff> ?

[10:51] <lizmat> the "uint32" makes it suspect to me, as that has recently had changes

[10:51] <lizmat> internally

[10:51] <Xliff> Nah. No diff.

[10:54] <Xliff> Oh, hey! My uints are actually unsigned, now!

[10:55] <Xliff> nine++\

[10:55] <lizmat> { * }  perhaps {*} ?

[10:55] <Xliff> That has caught me before, but never on NC stubs. Attempting.

[10:56] <Xliff> Nope.

[10:56] <lizmat> then I'm out of ideas  :-(

[10:56] <Xliff> I am legit confused, because I don't know where in that code a Whatever could be injected.

[10:57] <Xliff> I thought like you did and couldn't fix it.

[10:57] <Xliff> It's weird because much of my other code works and they all use "{ * }"

[10:57] <Xliff> So why these particular routines?!

[10:57] <Xliff> lizmat: So... bug it?

[10:58] <lizmat> guess so... it looks like a golf people could work with

[10:58] <tbrowder> ref dynamic attr help: i think that's the last piece needed to port a very ugly Perl module to a much more  attractive Raku module. thanks again, lizmat (and moritz)!

[10:58] <Xliff> OK

[10:59] <tbrowder> this time i did as todd does and saved it in a README keeper

[11:04] <Xliff> #4820

[11:04] <lizmat> yeah, just saw it coming in :-)

[11:06] <Xliff> lizmat: Thanks for taking a look.

[11:06] <Xliff> Now off to $dayJob.

[11:31] *** razetime left
[11:34] *** razetime joined
[11:37] *** perlbot_ joined
[11:37] *** perlbot left
[11:38] *** perlbot_ is now known as perlbot

[11:51] *** Altai-man joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:08] *** Altai-man left
[12:11] *** Altai-man joined
[12:48] <Xliff> Has anyone used raku to successfully send commands to mysql?

[12:52] <lizmat> DBish supports MySQL, doesn't it ?

[13:11] <Xliff> Yes, but for reasons... I need to go through the client.

[13:12] <Xliff> I've tried using run(:in), but it doesn't seem to work.

[13:39] *** jjido joined
[14:24] *** jjido left
[14:25] *** mjgardner left
[14:27] *** jjido joined
[14:27] *** mjgardner joined
[14:33] *** razetime left
[14:34] *** razetime joined
[14:35] *** razetime left
[14:35] *** razetime joined
[14:55] <moritz> how does it not work?

[15:05] <MasterDuke> moritz: have you seen https://github.com/rakudo/rakudo/pull/4807 ?

[15:10] *** jjido left
[15:10] <Voldenet> Xliff: mysql (well, mariadb in this case) works for me http://ix.io/3SKU

[15:11] *** Util left
[15:11] <Voldenet> I needed libmysqlclient, because DB::MySQL installs just fine even without it

[15:13] <Xliff> Voldenet++

[15:14] <Xliff> Ah, but that is not through the client. 

[15:14] <Xliff> No matter. I think I've worked around most of it.

[15:14] <Xliff> Thanks for looking, though.

[15:14] <Voldenet> Oh right, I missed the /through the client/ part

[15:14] <Xliff> :)

[15:16] <moritz> MasterDuke: I have, but I'm allergic to these low-level builtins, so not commenting on the PR

[15:16] <moritz> the part in the actions is cool though

[15:17] <MasterDuke> ha. well, fwiw, the one commit where i really had a question is just https://github.com/rakudo/rakudo/pull/4807/commits/72f2f40055f4307b209de08435c997fa2b5e4531

[15:24] *** discord-raku-bot left
[15:25] *** discord-raku-bot joined
[15:25] <Voldenet> Xliff: http://ix.io/3SKY actually it wasn't that complicated fortunately

[15:28] <Voldenet> i'm sure it'd be even better with ‚Äìdefaults-file instead of stdin password

[15:28] <Voldenet> (i just wrote this for the sake of finishing what I started)

[15:35] <Voldenet> btw, I'm quite surprised that this way of providing password works, I wouldn't have expected that

[15:36] *** Sgeo joined
[16:34] *** djerius left
[16:34] *** djerius joined
[16:44] <Xliff> Voldenet: Huh! And here I was using run()!

[16:46] *** bdju left
[16:48] *** bdju joined
[16:59] *** razetime left
[17:15] *** Kaiepi left
[17:23] <Xliff> So.

[17:23] <Xliff> It turns out that if you have a NativeCall stub ala: sub malloc (uint64 $size) returns pointer is native  { * }

[17:24] <Xliff> You CANNOT use &malloc as a function pointer. 

[17:24] <Xliff> Not directly. It must be surrounded by an anonymous sub.

[17:24] <Xliff> Otherwise Rakudo will used the subs defined block, and ignore the NativeCall traits.

[17:24] <Xliff> This is the root cause of #4820

[18:02] *** Kaiepi joined
[18:08] *** reportable6 left
[18:10] *** Altai-man left
[18:10] *** reportable6 joined
[18:17] *** jjido joined
[18:32] *** donpdonp- joined
[18:34] *** donpdonp|z_ left
[18:55] *** jjido left
[19:25] *** p6steve joined
[20:25] *** dg left
[20:32] *** Util joined
[21:25] *** discord-raku-bot left
[21:25] *** discord-raku-bot joined
[21:53] *** jmcgnh left
[22:01] *** jmcgnh joined
[22:04] *** abraxxa-home left
[22:07] *** p6steve left
[22:19] *** p6steve joined
[22:23] *** p6steve left
[22:36] *** p6steve joined
[22:40] *** p6steve left
[22:53] *** p6steve joined
[22:57] *** p6steve left
[22:57] *** colemanx joined
[23:10] *** p6steve joined
[23:14] *** p6steve left
[23:25] *** jjido joined
[23:29] *** p6steve joined
[23:31] *** ismustachio joined
[23:55] *** dg joined
