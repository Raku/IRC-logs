[00:07] *** reportable6 left
[00:08] *** reportable6 joined
[01:08] *** sourceable6 left
[01:08] *** reportable6 left
[01:08] *** squashable6 left
[01:08] *** benchable6 left
[01:08] *** shareable6 left
[01:08] *** linkable6 left
[01:08] *** greppable6 left
[01:08] *** unicodable6 left
[01:08] *** notable6 left
[01:08] *** tellable6 left
[01:08] *** coverable6 left
[01:08] *** quotable6 left
[01:08] *** nativecallable6 left
[01:08] *** statisfiable6 left
[01:08] *** releasable6 left
[01:08] *** bisectable6 left
[01:08] *** evalable6 left
[01:08] *** committable6 left
[01:08] *** bloatable6 left
[01:08] *** unicodable6 joined
[01:08] *** statisfiable6 joined
[01:08] *** greppable6 joined
[01:09] *** bisectable6 joined
[01:09] *** committable6 joined
[01:09] *** squashable6 joined
[01:09] *** linkable6 joined
[01:09] *** bloatable6 joined
[01:09] *** reportable6 joined
[01:09] *** shareable6 joined
[01:09] *** releasable6 joined
[01:10] *** tellable6 joined
[01:10] *** nativecallable6 joined
[01:10] *** notable6 joined
[01:10] *** sourceable6 joined
[01:10] *** quotable6 joined
[01:10] *** benchable6 joined
[01:10] *** evalable6 joined
[01:11] *** coverable6 joined
[01:30] *** m_athias left
[01:30] *** nine_ left
[01:30] *** nine joined
[01:31] *** m_athias joined
[01:43] *** frost joined
[01:45] *** razetime joined
[02:45] *** benchable6 left
[02:45] *** bisectable6 left
[02:45] *** committable6 left
[02:45] *** squashable6 left
[02:45] *** unicodable6 left
[02:45] *** evalable6 left
[02:45] *** releasable6 left
[02:45] *** coverable6 left
[02:45] *** reportable6 left
[02:45] *** nativecallable6 left
[02:45] *** notable6 left
[02:45] *** linkable6 left
[02:45] *** tellable6 left
[02:45] *** sourceable6 left
[02:45] *** quotable6 left
[02:45] *** statisfiable6 left
[02:45] *** greppable6 left
[02:45] *** bloatable6 left
[02:45] *** shareable6 left
[02:46] *** statisfiable6 joined
[02:46] *** squashable6 joined
[02:46] *** shareable6 joined
[02:47] *** linkable6 joined
[02:47] *** notable6 joined
[02:47] *** committable6 joined
[02:47] *** unicodable6 joined
[02:47] *** quotable6 joined
[02:47] *** coverable6 joined
[02:47] *** greppable6 joined
[02:48] *** benchable6 joined
[02:48] *** releasable6 joined
[02:48] *** bloatable6 joined
[02:48] *** bisectable6 joined
[02:48] *** evalable6 joined
[02:48] *** nativecallable6 joined
[02:48] *** tellable6 joined
[02:48] *** sourceable6 joined
[02:49] *** reportable6 joined
[02:55] *** Util_ left
[03:02] *** bigdata joined
[04:02] *** bisectable6 left
[04:02] *** bloatable6 left
[04:02] *** reportable6 left
[04:02] *** quotable6 left
[04:02] *** statisfiable6 left
[04:02] *** greppable6 left
[04:02] *** coverable6 left
[04:02] *** linkable6 left
[04:02] *** notable6 left
[04:02] *** releasable6 left
[04:02] *** tellable6 left
[04:02] *** nativecallable6 left
[04:02] *** committable6 left
[04:02] *** benchable6 left
[04:02] *** sourceable6 left
[04:02] *** shareable6 left
[04:02] *** evalable6 left
[04:02] *** unicodable6 left
[04:02] *** squashable6 left
[04:03] *** benchable6 joined
[04:03] *** bloatable6 joined
[04:03] *** releasable6 joined
[04:03] *** squashable6 joined
[04:03] *** greppable6 joined
[04:03] *** reportable6 joined
[04:03] *** nativecallable6 joined
[04:04] *** sourceable6 joined
[04:04] *** coverable6 joined
[04:04] *** evalable6 joined
[04:04] *** linkable6 joined
[04:04] *** shareable6 joined
[04:04] *** quotable6 joined
[04:04] *** unicodable6 joined
[04:04] *** statisfiable6 joined
[04:04] *** tellable6 joined
[04:04] *** bisectable6 joined
[04:05] *** committable6 joined
[04:05] *** notable6 joined
[05:05] *** quotable6 left
[05:05] *** bisectable6 left
[05:05] *** squashable6 left
[05:05] *** nativecallable6 left
[05:05] *** sourceable6 left
[05:05] *** benchable6 left
[05:05] *** tellable6 left
[05:05] *** unicodable6 left
[05:05] *** statisfiable6 left
[05:05] *** notable6 left
[05:05] *** evalable6 left
[05:05] *** greppable6 left
[05:05] *** committable6 left
[05:05] *** coverable6 left
[05:05] *** bloatable6 left
[05:05] *** shareable6 left
[05:05] *** linkable6 left
[05:05] *** releasable6 left
[05:05] *** statisfiable6 joined
[05:05] *** shareable6 joined
[05:06] *** squashable6 joined
[05:06] *** bloatable6 joined
[05:06] *** notable6 joined
[05:07] *** evalable6 joined
[05:07] *** committable6 joined
[05:07] *** sourceable6 joined
[05:07] *** greppable6 joined
[05:07] *** nativecallable6 joined
[05:07] *** releasable6 joined
[05:07] *** unicodable6 joined
[05:07] *** benchable6 joined
[05:07] *** bisectable6 joined
[05:08] *** coverable6 joined
[05:08] *** quotable6 joined
[05:08] *** tellable6 joined
[05:08] *** linkable6 joined
[05:30] *** Util joined
[05:38] *** vrurg_ joined
[05:38] *** vrurg left
[06:06] *** reportable6 left
[06:08] *** reportable6 joined
[06:37] *** MoC joined
[07:25] *** Sgeo left
[07:42] <discord-raku-bot> <Nemokosch> For the first time in my life, I feel I found a use for "scalar is one-element array" üòÑ

[07:58] *** axmed99 joined
[08:06] *** lizmat_ left
[08:06] *** lizmat joined
[08:28] *** discord-raku-bot left
[08:28] *** discord-raku-bot joined
[09:00] *** elcar0[m] left
[09:53] *** jaguart joined
[10:21] *** linkable6 left
[10:21] *** linkable6 joined
[11:21] *** Kaiepi joined
[11:24] *** Kaipei left
[11:25] *** axmed99 left
[11:27] <gfldex>  I just wrote `LAST say (ENTER ++$), ‚Äò rounds‚Äô;` and I liked it.

[12:06] *** reportable6 left
[12:08] *** reportable6 joined
[12:33] *** raiph joined
[12:33] *** raiph left
[12:54] *** frost left
[13:21] *** Geth joined
[13:24] <tbrowder> tonyo: i'm having trouble github testing with a module using Text::CSV::LibCSV. it tests fine locally on my debian box. mine uses mi6's workflow with the following line added to test.yml: "run: sudo apt-get install -y libcsv-dev"

[13:25] <tbrowder> can you trigger yr mod to see if it still tests ok on github?

[13:26] <tbrowder> thanks

[13:32] *** vrurg_ left
[13:33] *** vrurg joined
[13:50] *** Kaiepi joined
[14:11] <discord-raku-bot> <p6steve> nemokosch - do share the use case for Scalar is a one element array

[14:11] *** raiph joined
[14:14] *** rbt joined
[14:23] *** rbt left
[14:25] *** HvszrStykp joined
[14:31] *** bigdata left
[14:31] <discord-raku-bot> <Nemokosch> I needed to write a function that can operate both on an element type and a list of that type

[14:32] <discord-raku-bot> <Nemokosch> I can use the same for on decont data if it's the supposed list, or the scalar data if it's an element

[14:34] <discord-raku-bot> <Nemokosch> Not having to worry that the element might be a list itself

[14:43] *** Sgeo joined
[14:58] *** raiph left
[15:30] *** squashable6 left
[15:32] *** squashable6 joined
[15:33] *** raiph joined
[16:22] <tonyo> tbrowder: just an empty CI build?

[16:24] <tbrowder> hi! trying to debug now. i‚Äôm trying to convert yr module to github testing with workflows

[16:25] <tbrowder> in the past i haven‚Äôt used yr mod with a published module so haven‚Äôt had a problem

[16:26] <tbrowder> now i want to use it with two new modules

[16:27] <tbrowder> so i need it to work with .github

[16:27] <tonyo> oh nice, you want me to kick off an empty CI build for that repo to make sure it's still OK?

[16:28] <tbrowder> i don‚Äôt know anything about circleci

[16:28] *** tailgate left
[16:28] *** JRaspass left
[16:28] *** El_Che left
[16:28] *** daxim left
[16:28] *** avar left
[16:28] *** tbrowder left
[16:28] *** El_Che joined
[16:28] *** avar joined
[16:28] *** JRaspass joined
[16:28] *** tbrowder joined
[16:28] *** daxim joined
[16:29] *** tailgate joined
[16:29] <tbrowder> i thought we were getting away from travis and the other non-github testers

[16:29] <raiph> anyone know bisectable6?

[16:30] <tbrowder> tonyo: yes, pls

[16:30] <raiph> if so, can one use it to test a MAIN which needs some stdin?

[16:31] <tbrowder> i know you need to chg c code to (int options) to remove a compiler warning

[16:34] <tbrowder> i also chgd Build.pm to Build.rakumod

[16:48] <leont> m: class Value { method COERCE() { Value } }; multi foo(Hash:D) {}; multi foo(Value(Any:D)) {}; foo({ :foo })

[16:48] <camelia> rakudo-moar 958537b12: OUTPUT: ¬´Ambiguous call to 'foo(Hash)'; these signatures all match:‚ê§  (Hash:D $)‚ê§  (Value(Any:D) $)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:48] <leont> That is a bug, right?

[16:48] <leont> Clearly the hash should dispatch to the hash multi

[16:54] * [Coke] doesn't think he's ever seen "Value" before.

[16:54] <[Coke]> ... oh, because it's defined right there. :)

[17:03] <tonyo> tbrowder: will do, cannot at the moment

[17:29] *** evalable6 left
[17:29] *** linkable6 left
[17:30] *** razetime left
[17:31] *** linkable6 joined
[17:32] *** evalable6 joined
[17:32] *** melezhik joined
[18:06] *** reportable6 left
[18:07] *** p6steve joined
[18:07] <p6steve> m: sub fn($x) {say $x.first}; my $a = 42; fn($a); my @b = 1,2,3; fn(@b);

[18:07] <camelia> rakudo-moar 958537b12: OUTPUT: ¬´42‚ê§1‚ê§¬ª

[18:08] <p6steve> nemokosch: I imagine something like this ... interesting

[18:08] <tellable6> p6steve, I'll pass your message to Nemokosch

[18:09] *** reportable6 joined
[18:12] *** jgaz joined
[18:14] <tbrowder> .tell tonyo no rush, i'm working now on a PR for Text::CSV::LibCSV to use github workflows

[18:14] <tellable6> tbrowder, I'll pass your message to tonyo

[18:17] <guifa> I feel like i remember someone asking this a few days ago

[18:17] <guifa> Let's say I want arguments for MAIN() to be a literal string starting with a hyphen ... how can? 

[18:23] *** raiph left
[18:25] <lizmat> raku -e '@*ARGS.unshift("--"); sub MAIN(|c) { dd c }' --foo

[18:25] <lizmat> guifa ^^

[18:27] <guifa> Okay that works but ‚Ä¶¬†how LOL

[18:27] <lizmat> any arguments after a -- are not interpreted in any way

[18:28] <guifa> Yeah, I just thought that @*ARGS represented the arguments

[18:29] <guifa> so if you did @*ARGS.unshift('foo'), it would ignore things beginning with foo?  

[18:29] <guifa> raku -e '@*ARGS.unshift("foo"); sub MAIN(|c) { dd c }' foo

[18:29] <lizmat> no

[18:30] <lizmat> no, the unshift just makes it look like:

[18:30] <lizmat> raku -e 'sub MAIN(|c) { dd c }' -- --foo

[18:35] * guifa is making an interface where -z is "don't include z as a possibility" and +z is "require z in output" in a generator

[18:51] <Voldenet> why not ‚Äìinclude-z ‚Äìexclude-z

[18:51] <guifa> because takes too long to type ha

[18:51] <guifa> it's a password generator

[18:52] <guifa> pwgen 16 -s +uln

[18:52] <guifa> "generate a 16 digit passsword, don't use symbols, but must include upper, lower, and numbers"

[18:52] <Voldenet> too long? My solution is `cat /dev/random | tr -dc '[:alpha:]' | head -c8 | add-password site@whatever.com'

[18:53] <Voldenet> now that's too long to type :D

[18:53] <guifa> hahaha

[18:53] <tonyo> don't you get that for free with the bool type?

[18:53] <tellable6> 2022-09-02T18:14:25Z #raku <tbrowder> tonyo no rush, i'm working now on a PR for Text::CSV::LibCSV to use github workflows

[18:54] <guifa> I'm pretty sure that's what Firefox does ‚Äî¬†but it's alpha only which is annoying when sites require numbers or symbols.

[18:54] <Voldenet> I wish you could create accounts just by sending properly formatted email

[18:55] <tonyo> raku -e 'sub MAIN(Bool :$z = False) { dd $z; };' -z # true

[18:55] <tonyo> raku -e 'sub MAIN(Bool :$z = False) { dd $z; };' -/z # false

[18:56] <Voldenet> (I wonder why people insist on sending verification emails when they could receive the verificatione mail)

[19:06] *** melezhik left
[19:09] *** squashable6 left
[19:12] *** squashable6 joined
[19:28] *** raiph joined
[19:29] *** jgaz left
[19:37] *** raiph left
[19:50] *** ToddAndMargo joined
[19:52] <ToddAndMargo> Found something interesting.¬† I have a `BEGIN {}` that I use for a splash screen.¬† `-c` executes the BEGIN {}, not just syntax check it.¬†¬† This suppose to happen?

[19:52] <ToddAndMargo> Fedora 36

[19:52] <ToddAndMargo> rakudo-pkg-2022.6.0-01.x86_64

[19:52] <ToddAndMargo> $ raku -c GetUpdates.pl6

[19:52] <ToddAndMargo> Syntax OK

[20:13] *** jaguart left
[20:18] <Voldenet> ToddAndMargo: BEGIN blocks run at compile time by design, so yes

[20:18] <Voldenet> it's a gift and a curse I suppose

[20:20] <Voldenet> You could use environment variable or argument to silence it

[20:24] <guifa> You may want INIT instead of BEGIN ‚Äî¬†INIT runs at script execution, rather than compile

[20:27] <Voldenet> guifa: the problem was that compilation took too long

[20:27] <Voldenet> over 20s iirc

[20:27] <Voldenet> and splash screen has to show up for those 20s

[20:29] <Voldenet> It could be solved by having script spawn splash screen and pass its handle/id/whatever to the "real" script that takes longer to run

[20:29] <Voldenet> Which wouldn't be as cool as using BEGIN, but more predictable

[20:33] *** jgaz joined
[20:48] <ToddAndMargo> Oh I do not mind it.¬† I was just perplexed by it.¬†¬† I do typically run -c before to catch all my stinkin' typos before I run the program itself.¬† and the programs works the way I want with the BEGIN as it is.¬†¬† Thank you for the explanation and tips: "it's a gift and a curse I suppose"

[21:01] *** melezhik joined
[21:04] *** melezhik left
[21:13] <ToddAndMargo> I make a call to zenity with an "okay" to dismiss the pop up.¬† I though that was sweet.¬† Sometimes splash screens can be annoying trying to work around them

[21:19] *** jgaz left
[21:45] *** MoC left
[21:51] *** greaser|q left
[21:51] *** greaser|q joined
[21:51] *** greaser|q is now known as GreaseMonkey

[22:18] *** Kaiepi left
[22:19] *** Kaiepi joined
[22:21] *** ToddAndMargo left
[23:21] *** coverable6 left
[23:21] *** tellable6 left
[23:21] *** linkable6 left
[23:21] *** statisfiable6 left
[23:21] *** nativecallable6 left
[23:21] *** unicodable6 left
[23:21] *** quotable6 left
[23:21] *** bloatable6 left
[23:21] *** releasable6 left
[23:21] *** notable6 left
[23:21] *** sourceable6 left
[23:21] *** committable6 left
[23:21] *** squashable6 left
[23:21] *** evalable6 left
[23:21] *** shareable6 left
[23:21] *** greppable6 left
[23:21] *** benchable6 left
[23:21] *** bisectable6 left
[23:21] *** reportable6 left
[23:21] *** committable6 joined
[23:21] *** squashable6 joined
[23:21] *** quotable6 joined
[23:21] *** Kaiepi left
[23:21] *** sourceable6 joined
[23:22] *** notable6 joined
[23:22] *** nativecallable6 joined
[23:22] *** greppable6 joined
[23:22] *** epony left
[23:23] *** evalable6 joined
[23:23] *** bloatable6 joined
[23:23] *** linkable6 joined
[23:23] *** reportable6 joined
[23:23] *** shareable6 joined
[23:23] *** bisectable6 joined
[23:23] *** benchable6 joined
[23:23] *** tellable6 joined
[23:24] *** unicodable6 joined
[23:24] *** coverable6 joined
[23:24] *** statisfiable6 joined
[23:24] *** releasable6 joined
