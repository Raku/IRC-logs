[00:07] *** reportable6 left
[00:08] *** reportable6 joined
[00:15] *** rbt left
[00:15] *** rbt joined
[00:24] *** slu left
[00:29] *** daxim left
[00:38] *** Xliff left
[00:43] *** hhcryfqnut left
[00:43] *** daxim joined
[00:51] *** jjido left
[00:52] *** juanfra__ left
[01:05] *** Sub left
[01:05] *** Sub joined
[01:05] *** rbt left
[01:05] *** rbt joined
[01:11] *** rbt left
[01:11] *** rbt joined
[01:21] *** rbt left
[01:21] *** rbt joined
[01:31] *** melezhik left
[01:35] *** Sub left
[01:36] *** gordonfish- joined
[01:37] *** Some-body_ joined
[01:37] *** statisfiable6 left
[01:37] *** Ekho left
[01:37] *** jmcgnh left
[01:37] *** gordonfish left
[01:37] *** DarthGandalf left
[01:37] *** statisfiable6 joined
[01:37] *** tellable6 left
[01:37] *** tellable6 joined
[01:37] *** bartolin left
[01:37] *** xkr47 left
[01:37] *** bartolin joined
[01:38] *** gordonfish- is now known as gordonfish

[01:39] *** xkr47 joined
[01:40] *** Some-body_ is now known as DarthGandalf

[01:40] *** Gruber joined
[01:40] *** frost joined
[01:41] *** simcop2387_ joined
[01:42] *** linkable6 left
[01:42] *** corwin left
[01:42] *** statisfiable6 left
[01:42] *** sourceable6 left
[01:42] *** releasable6 left
[01:42] *** tellable6 left
[01:42] *** evalable6 left
[01:42] *** coverable6 left
[01:42] *** quotable6 left
[01:42] *** swaggboi left
[01:42] *** kjp left
[01:42] *** sourceable6 joined
[01:42] *** bisectable6 left
[01:42] *** simcop2387 left
[01:42] *** bd3i left
[01:42] *** avar left
[01:42] *** pejayes left
[01:42] *** Grrrr left
[01:42] *** simcop2387_ is now known as simcop2387

[01:43] *** pejayes joined
[01:43] *** kjp joined
[01:43] *** avar joined
[01:43] *** jercos left
[01:43] *** jercos joined
[01:44] *** statisfiable6 joined
[01:44] *** bd3i joined
[01:44] *** swaggboi joined
[01:45] *** jmcgnh joined
[01:50] *** Ekho joined
[01:51] *** corwin joined
[01:59] *** ocomport joined
[02:07] *** sourceable6 left
[02:07] *** greppable6 left
[02:07] *** gugod left
[02:07] *** statisfiable6 left
[02:07] *** bartolin left
[02:07] *** statisfiable6 joined
[02:10] *** statisfiable6 left
[02:11] *** rbt left
[02:11] *** rbt joined
[02:13] *** gugod joined
[02:25] *** bartolin joined
[02:32] *** rbt left
[02:32] *** linkable6 joined
[02:32] *** rbt joined
[02:39] *** coverable6 joined
[02:40] *** tellable6 joined
[02:40] *** releasable6 joined
[02:40] *** bisectable6 joined
[02:40] *** evalable6 joined
[02:40] *** quotable6 joined
[03:01] *** greppable6 joined
[03:02] *** sourceable6 joined
[03:08] *** statisfiable6 joined
[03:20] *** Guest35 left
[03:42] *** rbt left
[03:42] *** rbt joined
[04:26] *** zacts joined
[04:40] *** zacts left
[05:27] *** ocomport left
[06:02] *** rbt left
[06:07] *** reportable6 left
[06:10] *** reportable6 joined
[06:36] *** jjido joined
[07:00] *** abraxxa joined
[07:04] *** abraxxa left
[07:05] *** abraxxa joined
[07:07] *** dakkar joined
[07:33] <Geth> ¦ flycheck-raku: 4da1970a75 | (Siavash Askari Nasr)++ | 2 files

[07:33] <Geth> ¦ flycheck-raku: Update CHANGES.md, add 2022 to copyright

[07:33] <Geth> ¦ flycheck-raku: review: https://github.com/Raku/flycheck-raku/commit/4da1970a75

[07:59] *** suman joined
[08:00] <suman> How to read this piece of raku documentation? method race(Int(Cool) :$batch = 64, Int(Cool) :$degree = 4 --> Iterable)

[08:00] <tellable6> 2022-02-27T08:31:00Z #raku <nine> suman: https://docs.raku.org/syntax/Coercion%20type

[08:00] <tellable6> 2022-02-27T08:31:00Z #raku <CIAvash> suman: type of $xx values of type `Cool` and `Num` are accepted and values of type `Cool` are coerced to target type `Num` https://docs.raku.org/syntax/Coercion%20type

[08:00] <suman> What does Int(Cool) mean? Is it Int inherting from Cool?

[08:02] <MasterDuke> it's actually very similar to that message. anything of type Cool is coerced to type Int

[08:18] *** rbt joined
[08:26] <discord-raku-bot> <Nemokosch#9980> It reads just like a function call

[08:36] *** rbt left
[08:49] *** suman left
[08:51] *** lichtkind joined
[09:08] *** rbt joined
[09:13] *** perlmaros joined
[09:33] *** rbt left
[10:05] *** saint- left
[10:20] *** jjido left
[10:34] *** zacts joined
[10:50] *** Altai-man joined
[10:53] *** wybpip[m] joined
[10:53] *** wybpip[m] left
[10:54] *** rbt joined
[11:04] *** rbt left
[11:04] *** rbt joined
[11:44] *** rbt left
[11:46] *** razetime joined
[11:52] *** jjido joined
[12:01] *** zacts left
[12:06] *** reportable6 left
[12:07] *** reportable6 joined
[12:09] *** perlbot left
[12:09] *** simcop2387 left
[12:10] *** simcop2387 joined
[12:13] *** perlbot joined
[12:15] *** rbt joined
[12:49] *** wingfold joined
[12:57] *** zacts joined
[13:05] *** DumbleOuaf joined
[13:05] *** razetime left
[13:07] *** rba left
[13:07] *** rba joined
[13:12] *** DumbleOuaf left
[13:19] *** Guest35 joined
[13:28] <[Coke]_> It's like the first thing the routine does is call .Int on that parameter and use *that* instead of the passed in value.

[13:28] *** [Coke]_ is now known as [Coke]

[13:28] *** zacts left
[13:30] <[Coke]> do we have instructions on how to release new versions of, say, IO::Path::ChildSecure? (community module)

[13:31] <lizmat> is it still on the old ecosystem?

[13:31] <[Coke]> I don't know

[13:31] <lizmat> but it needs a new release ?

[13:32] <[Coke]> There's a pending PR

[13:32] <[Coke]> (which I submitted)

[13:33] <[Coke]> want to get it merged and then an update released with it. (And we should consider also https://github.com/raku-community-modules/IO-Path-ChildSecure/issues/5 at the same time, probably a small effort)

[13:33] <lizmat> ok, will look at it in a mo

[13:33] <[Coke]> I can do #5 too if we can get another release.

[13:34] <[Coke]> lizmat: thanks; please feel free to just tell me the steps as opposed to doing them, that's fine.

[13:34] <[Coke]> (or just do them, also fine. :)

[13:35] <lizmat> well, I'd start with merging the PR  :-)

[13:36] <lizmat> ok, looks like it needs to be moved to the zef ecosystem as well... and that's a little more involved

[13:37] <lizmat> Coke: do you already have a zef login ?

[13:37] <lizmat> [Coke] rather  :-)

[13:40] *** rbt left
[13:40] *** rbt joined
[14:01] *** Sgeo left
[14:06] *** londoed left
[14:06] *** londoed joined
[14:08] *** Sgeo joined
[14:25] <[Coke]> Probably not

[14:43] <Geth> ¦ ecosystem: 103576ca1a | (Elizabeth Mattijsen)++ | META.list

[14:43] <Geth> ¦ ecosystem: Freeze IO::Path::ChildSecure

[14:43] <Geth> ¦ ecosystem: 

[14:43] <Geth> ¦ ecosystem: while it is being moved to the zef ecosystem

[14:43] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/103576ca1a

[14:50] *** rbt left
[14:51] *** rbt joined
[14:57] *** jjido left
[15:04] *** londoed left
[15:04] *** londoed joined
[15:22] *** jjido joined
[15:36] *** rbt left
[15:36] *** rbt joined
[15:56] *** dakkar left
[16:01] *** rbt left
[16:01] *** rbt joined
[16:46] *** londoed left
[16:46] *** londoed joined
[16:48] *** londoed left
[16:48] *** londoed joined
[17:02] *** Util left
[17:02] *** Util joined
[17:17] *** Altai-man left
[17:28] *** somebody joined
[17:29] <Tirifto> Is there any direct way a Raku program can write to its own STDIN? I found that it is read-only, and one can get pipes to external programs run with ‘run’, but can a program to this to itself?

[17:29] *** somebody left
[17:53] <[Coke]> could you do it from C? you could probably cheat and get $*IN.native-descriptor and do something with that.

[17:53] *** sena_kun left
[17:53] <[Coke]> m: dd $*IN.native-descriptor

[17:53] <camelia> rakudo-moar 530e17848: OUTPUT: «0␤»

[17:54] <[Coke]> ah, right, that's just the ID. so slightly modified answer: probably with NativeCall

[17:54] <Voldenet> You can't write to your own stdin

[17:55] <[Coke]> m: $*IN.say: 3; #wtf?

[17:55] <camelia> rakudo-moar 530e17848: OUTPUT: «Failed to write 2 bytes to filehandle: Bad file descriptor␤  in block <unit> at <tmp> line 1␤␤»

[17:55] <[Coke]> (weirdly, that works locally)

[17:57] <Tirifto> (Huh, same here, at least in a clean script…)

[17:57] <Voldenet> "it works" meaning… what exactly?

[17:58] <Voldenet> You still can't read contents you wrote using $*IN.slurp.say

[17:58] *** frost left
[17:58] <Tirifto> Well, the placed line is printed, so it does *something*. :P

[18:00] <Tirifto> I guess I won’t be pursuing this if there’s no straightforward way though. I don’t really have that big of a need for it.

[18:01] *** sena_kun joined
[18:07] *** reportable6 left
[18:08] <nine> Why would you need it in the first place?

[18:08] *** reportable6 joined
[18:12] *** rbt left
[18:12] <nine> m: $*IN does role :: { method READ(Int:D $bytes) { "foo\nbar".encode } }; say get;

[18:12] <camelia> rakudo-moar 530e17848: OUTPUT: «foo␤»

[18:12] *** rbt joined
[18:19] <Tirifto> nine, just a silly thing. I made a small text adventure for a game jam and have thought of adding a game saving/loading functionality. The most straightforward way seems to be saving by exporting the history of the player’s commands, and loading by interpreting them after starting a new game. And of course commands are read from STDIN, so it seemed like the most straightforward way to do that would be feeding them to STDIN. :P

[18:21] <Tirifto> (It should still be easy to do it without touching STDIN directly.)

[18:22] <nine> Tirifto: well it is! There is a reason why $*IN is a dynamic variable: so you can replace it with a different handle or handle-like object. So: { my $*IN = ReplayHandle.new(:$commands); execute-commands-from-stdin() }

[18:25] <Tirifto> … that’s a really good point! :D

[18:27] *** rbt left
[18:35] *** wingfold left
[18:42] *** rbt joined
[18:48] *** morte_ joined
[18:53] *** rbt left
[18:53] *** rbt joined
[18:54] *** simcop2387 left
[18:54] *** perlbot left
[18:56] *** simcop2387 joined
[18:57] *** perlbot joined
[18:57] *** donpdonp|z_ joined
[18:58] *** jjido left
[18:58] <japhb> Also ... being able to change your input source is quite useful for testing, if you don't want to go through the pain of writing tests via pty.

[19:01] <ugexe> whats another word for whitespace (\s) that could be used in place of it?

[19:01] <tellable6> 2021-12-30T18:10:00Z #raku <atroxaper> .tell ugexe, please, tell me, is there a legal way to know which module what to 'use' from a custom CompUnit::Repository's need or so? An argument only tell us about what to load, but who needs it?

[19:06] <japhb> ugexe: What are you trying to do?

[19:08] <ugexe> basically s/whitespace/foospace/ on some non raku related stuff

[19:09] <ugexe> also its not for me even. but i thought it was interesting i couldnt think of anything so i asked here

[19:13] <MasterDuke> blankspace

[19:16] <ugexe> yeah that could work

[19:29] <[Coke]> what's the context of the space? Only other word I can think of is "gutter" for typesetting.

[19:43] *** n1to joined
[19:53] *** rbt left
[19:53] *** abraxxa left
[19:53] *** morte_ left
[19:56] *** abraxxa-home joined
[19:58] *** rbt joined
[20:03] *** sena_kun left
[20:04] *** rbt left
[20:04] *** rbt joined
[20:05] *** sena_kun joined
[20:05] *** morte_ joined
[20:15] *** jjido joined
[20:22] *** morte_ left
[20:23] *** morte_ joined
[20:34] *** ThDrMz joined
[21:08] *** n1to left
[21:13] *** ThDrMz left
[21:24] *** rbt left
[21:24] *** rbt joined
[21:28] *** ThDrMz joined
[21:28] *** n1to joined
[21:43] *** saint- joined
[21:45] *** jjido left
[21:57] *** n1to left
[22:00] *** Xliff joined
[22:02] <Xliff> Has anyone been able to use Raku to script for Hexchat?

[22:06] <phogg> Looks like it has a d-bus interface, maybe that could be used. Else I suppose you must write a plugin first.

[22:07] *** vrurg left
[22:07] <Xliff> D-Bus? Huh. Thanks, phogg

[22:10] *** morte_ left
[22:14] *** rbt left
[22:15] *** vrurg joined
[22:16] <Xliff> How easy would it be for Raku to tie into a Perl5 XS module?

[22:26] *** jjido joined
[22:27] <lizmat> not.... but with Inline::Perl5  you can use just about any Perl module as long as it's not a source filter

[22:33] *** melezhik joined
[22:33] <melezhik> .

[22:34] <melezhik> I have this error - 992686 Segmentation fault      (core dumped)  , from Rakudo , how can I debug it ?

[22:35] <melezhik> https://gist.github.com/melezhik/f5e86c2ef627a1f32c1611707d9bcc0c

[22:35] <tbrowder> anyone here going to raku conf in houston? if so, interested in some core hacking?

[22:36] <melezhik> Not sure , what causes it. Maybe I also need to run dmesg on the server

[22:36] *** abraxxa-home left
[22:37] *** melezhik left
[22:38] *** melezhik joined
[22:39] *** melezhik left
[22:40] *** rbt joined
[22:41] *** melezhik joined
[22:41] *** melezhik left
[22:51] *** Xliff left
[22:55] *** vrurg left
[23:03] *** lichtkind left
[23:10] *** jjido left
[23:23] *** vrurg joined
[23:40] *** rbt left
[23:45] *** rbt joined
[23:55] *** melezhik joined
