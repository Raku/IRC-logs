[00:03] *** Kaipei left
[00:03] *** Kaipei joined
[00:06] *** reportable6 left
[00:06] *** kjp left
[00:07] *** reportable6 joined
[00:48] *** Sankalp left
[00:53] *** Sankalp joined
[01:11] *** frost joined
[01:11] *** ProperN[out] joined
[01:12] *** ProperNoun left
[02:12] *** greppable6 left
[02:12] *** nativecallable6 left
[02:12] *** sourceable6 left
[02:12] *** unicodable6 left
[02:12] *** notable6 left
[02:12] *** shareable6 left
[02:12] *** coverable6 left
[02:12] *** quotable6 left
[02:12] *** linkable6 left
[02:12] *** benchable6 left
[02:12] *** reportable6 left
[02:12] *** statisfiable6 left
[02:12] *** tellable6 left
[02:12] *** bloatable6 left
[02:12] *** evalable6 left
[02:12] *** committable6 left
[02:12] *** releasable6 left
[02:12] *** bisectable6 left
[02:12] *** evalable6 joined
[02:12] *** shareable6 joined
[02:12] *** reportable6 joined
[02:13] *** releasable6 joined
[02:13] *** bisectable6 joined
[02:13] *** benchable6 joined
[02:13] *** greppable6 joined
[02:13] *** linkable6 joined
[02:13] *** unicodable6 joined
[02:13] *** quotable6 joined
[02:14] *** nativecallable6 joined
[02:14] *** bloatable6 joined
[02:14] *** statisfiable6 joined
[02:14] *** sourceable6 joined
[02:14] *** committable6 joined
[02:15] *** coverable6 joined
[02:15] *** notable6 joined
[02:15] *** tellable6 joined
[02:34] <tonyo> .
[03:15] *** linkable6 left
[03:15] *** evalable6 left
[03:15] *** linkable6 joined
[03:17] *** evalable6 joined
[03:34] *** tirnanog left
[03:52] *** Xliff left
[04:32] *** kjp joined
[05:32] *** quotable6 left
[05:32] *** statisfiable6 left
[05:32] *** bisectable6 left
[05:32] *** unicodable6 left
[05:32] *** coverable6 left
[05:32] *** shareable6 left
[05:32] *** notable6 left
[05:32] *** linkable6 left
[05:32] *** releasable6 left
[05:32] *** evalable6 left
[05:32] *** sourceable6 left
[05:32] *** tellable6 left
[05:32] *** nativecallable6 left
[05:32] *** committable6 left
[05:32] *** greppable6 left
[05:32] *** reportable6 left
[05:32] *** bloatable6 left
[05:32] *** benchable6 left
[05:32] *** unicodable6 joined
[05:32] *** sourceable6 joined
[05:32] *** evalable6 joined
[05:33] *** coverable6 joined
[05:33] *** shareable6 joined
[05:33] *** quotable6 joined
[05:34] *** statisfiable6 joined
[05:34] *** greppable6 joined
[05:34] *** linkable6 joined
[05:34] *** bloatable6 joined
[05:34] *** nativecallable6 joined
[05:34] *** committable6 joined
[05:34] *** reportable6 joined
[05:34] *** bisectable6 joined
[05:34] *** releasable6 joined
[05:34] *** notable6 joined
[05:35] *** benchable6 joined
[05:35] *** tellable6 joined
[06:01] *** djerius_ left
[06:02] *** djerius_ joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:33] *** Sgeo_ left
[06:35] *** abraxxa joined
[06:40] *** abraxxa left
[06:40] *** abraxxa joined
[07:02] *** dakkar joined
[08:02] *** unicodable6 left
[08:02] *** statisfiable6 left
[08:02] *** linkable6 left
[08:02] *** quotable6 left
[08:02] *** nativecallable6 left
[08:02] *** releasable6 left
[08:02] *** shareable6 left
[08:02] *** committable6 left
[08:02] *** bloatable6 left
[08:02] *** tellable6 left
[08:02] *** sourceable6 left
[08:02] *** notable6 left
[08:02] *** greppable6 left
[08:02] *** coverable6 left
[08:02] *** reportable6 left
[08:02] *** bisectable6 left
[08:02] *** evalable6 left
[08:02] *** benchable6 left
[08:03] *** benchable6 joined
[08:03] *** sourceable6 joined
[08:03] *** bloatable6 joined
[08:04] *** releasable6 joined
[08:04] *** greppable6 joined
[08:04] *** notable6 joined
[08:04] *** linkable6 joined
[08:04] *** statisfiable6 joined
[08:04] *** tellable6 joined
[08:04] *** committable6 joined
[08:04] *** nativecallable6 joined
[08:04] *** reportable6 joined
[08:04] *** quotable6 joined
[08:05] *** bisectable6 joined
[08:05] *** unicodable6 joined
[08:05] *** shareable6 joined
[08:05] *** coverable6 joined
[08:05] *** evalable6 joined
[08:31] *** HobGoblin is now known as goblin
[08:40] *** ProperN[out] left
[08:40] *** ProperNoun joined
[08:48] *** lichtkind_ joined
[09:03] <jjatria> lizmat: that issue that melezhik reported on HTTP::Tiny seems to actually be down to an error message that became less clear with https://github.com/rakudo/rakudo/commit/6a21196cdc9ed1bc6bb5a08cc8260d905949d1e6 when you do eg. `Blob.new(Nil)`
[09:04] <tellable6> 2022-06-14T22:43:00Z #raku <melezhik> jjatria I am having problem with running HTTP::Tiny put method
[09:12] *** lichtkind_ left
[09:29] *** Colere left
[09:55] *** Colere joined
[10:01] *** frost left
[10:22] *** lizmat_ joined
[10:26] *** lizmat_ is now known as lizmat
[10:39] <patrickb> Is SetHash meant to be iterable?
[10:40] <discord-raku-bot> <Nemokosch#9980> Why wouldn't it?
[10:40] <lizmat> m: dd SetHash ~~ Iterable
[10:40] <camelia> rakudo-moar 32a407915: OUTPUT: «Bool::False␤»
[10:40] <lizmat> it's not, making it Iterable introduces all sorts of issues...
[10:40] <lizmat> I forget which ones exactly atm, but I recall it was a mess
[10:41] <lizmat> none of the QuantHashes are Iterable
[10:41] <discord-raku-bot> <Nemokosch#9980> wait wait wait
[10:41] <patrickb> OK. Then I'm happy.
[10:41] <lizmat> I suggest adding "does Iterable" to role QuantHash and watch the fallout
[10:42] <patrickb> for $sh.keys isn't that much to type. Just need to remember adding the `.keys`.
[10:42] <lizmat> if you want the keys, and not Pairs, you'd have to do that anyway
[10:43] <discord-raku-bot> <Nemokosch#9980> Set is Setty
[10:43] <discord-raku-bot> <Nemokosch#9980> Setty does QuantHash
[10:44] *** Nemokosch joined
[10:45] <Nemokosch> m: my $test = SetHash.new: 1, 2, 5, 7; .say for $test;
[10:45] <camelia> rakudo-moar 32a407915: OUTPUT: «SetHash(1 2 5 7)␤»
[10:45] <Nemokosch> m: my $test = SetHash.new: 1, 2, 5, 7; .say for $test.Set;
[10:45] <camelia> rakudo-moar 32a407915: OUTPUT: «1 => True␤7 => True␤5 => True␤2 => True␤»
[10:45] <Nemokosch> ++WAT
[10:46] <lizmat> QuantHashes *do* have an iterator method
[10:46] <lizmat> m: say 42 ~~ Iterable
[10:46] <camelia> rakudo-moar 32a407915: OUTPUT: «False␤»
[10:46] <lizmat> m: .say for 42
[10:46] <camelia> rakudo-moar 32a407915: OUTPUT: «42␤»
[10:47] <discord-raku-bot> <Nemokosch#9980> Why wouldn't a SetHash iterate as a Set?
[10:47] <discord-raku-bot> <Nemokosch#9980> But tbh none of this is as weird as Arrays inheriting from Lists
[10:47] <discord-raku-bot> <Nemokosch#9980> that's a dirty hack
[10:48] <discord-raku-bot> <Nemokosch#9980> and if Arrays inherit from their immutable counterparts, the expectation would be that this stands for the Hash suffixed types as well, to be at least consistent
[10:48] <lizmat> Nemokosch: don't get me started on that
[10:49] <lizmat> thing is that you could consider Arrays also as lists, because they have a container *bound* to their elements
[10:49] <discord-raku-bot> <Nemokosch#9980> although I think it would be overall better if Arrays just didn't inherit from Lists
[10:50] <lizmat> which gives it the suggestion of mutability
[10:51] <Nemokosch> There are just so many gotchas related to the concept of containers and list containers in particular
[10:52] <Nemokosch> since the fundamentals are not subject to change anymore, at least the side effects should be reduced...
[10:53] <Nemokosch> If Arrays should descend from Lists for whatever reason, at least so do the other mutable compound data structures descend from their immutable counterparts...
[10:53] <lizmat> FWIW, I *do* think some fundamentals *are* subject to change
[10:53] <lizmat> but not in the coming year(s)
[10:54] <Nemokosch> also, I suppose you know much more about this than I do... is it possible to make scalar-style assignments to @variables ?
[10:54] <Nemokosch> or all you have is binding and the .STORE based assignment
[10:55] <lizmat> binding and .STORE based assignments
[10:56] <lizmat> if you ask "is it possible to make scalar-style assignments to @variables?"  you still don't grok that that is impossible  :-)
[10:56] <Nemokosch> well, ouch
[10:56] *** frost joined
[10:56] <lizmat> just as an array is an Array object
[10:57] <lizmat> which you can bind to an @-sigilled lexpad entry because it is Positional
[10:58] <lizmat> a scalar variable is a Scalar object, which you can **not** bind to a @-sigilled lexpad entry because it is *not* Positional
[10:58] <Nemokosch> I think this will bite many more people in the long run
[10:58] <lizmat> what exactly?
[10:59] <Nemokosch> this abstraction that relabels "normal variables" as "scalars"
[10:59] <Nemokosch> taking away the certainty that you can assign to a variable
[10:59] <Nemokosch> this is why for example swapping two @variables turns into hell
[10:59] <lizmat> well, if you go native, you have the assurance you can assign
[11:00] <Nemokosch> this is why having a @variable in $_ also breaks the expectations if you try to assign to it
[11:01] <Nemokosch> what does "go native" mean? Not the first time I hear this "native" stuff :)
[11:01] <sienet_ja_LSD[m]> write in nqp ?
[11:02] <lizmat> m: my int $a = 42
[11:02] <camelia> rakudo-moar 6584775cc: ( no output )
[11:03] <lizmat> then you don't have scalar containers... just memory pretending to be Scalar  :-)
[11:05] <Nemokosch> Okay but isn't this a bit like saying "everything can be done in Fortran; if it cannot be done in Fortran, it can be done in assembly (...)"
[11:05] <lizmat> m: my @a = 1,2,3; my @b = <a b c>; my @c := @a; @a := @b; @b := @c; say @a; say @b  # swapping arrays
[11:05] <camelia> rakudo-moar 6584775cc: OUTPUT: «[a b c]␤[1 2 3]␤»
[11:06] <lizmat> Nemokosch: ^^ what is the problem with swapping arrays?
[11:06] <Nemokosch> That it's unreasonably wordy. Had you had scalars, you could do ($a, $b) = ($b, $a)
[11:07] <Nemokosch> you need to take a different route because of an abstraction that threw some of your variables to a swamp
[11:08] <Nemokosch> meanwhile in Python, you can always just have a, b = b, a
[11:08] <Nemokosch> and in C, you always know the temp variable solution would be the best - in return, you can mess with the memory adresses directly and reduce the costs
[11:09] <lizmat> m: my ($a,@b) = 1,2,3; dd $a, @b   # do you want this to work ?
[11:09] <camelia> rakudo-moar 6584775cc: OUTPUT: «Int $a = 1␤Array @b = [2, 3]␤»
[11:10] <Nemokosch> I would rather this not work, if the cost is to break (@a, @b) = (@b, @a)
[11:10] <lizmat> well... I guess that decision was made *long* ago  :-)
[11:10] <Nemokosch> anyway, it flattens implicity that is not nice
[11:10] *** discord-raku-bot left
[11:10] *** discord-raku-bot joined
[11:11] <Nemokosch> something like ($a, *@b) = 1, 2, 3 makes more logical sense
[11:11] <lizmat> agree
[11:11] <Nemokosch> also, long ago? before the list rework or after? :P
[11:11] <Nemokosch> before it could make sense, after... much less so
[11:12] <SmokeMachine> m: my @a = 1,2,3; my @b = <a b c>; :(@a, @b) := @b, @a; say @a; say @b
[11:12] <camelia> rakudo-moar 6584775cc: OUTPUT: «[a b c]␤[1 2 3]␤»
[11:12] <lizmat> but I'm afraid the ($a,@b) = 1,2,3 behaviour was decided on before there even were slurpies
[11:12] <lizmat> but yeah, you could argue that this behaviour was missed in the Great List Refactor
[11:13] <lizmat> anything like that would need to be fixed at a language level
[11:13] <Nemokosch> I'm not 100% sure but
[11:14] <Nemokosch> I had the impression that (@a, @b) = (@b, @a) could still have a better behavior, with a different implementation around the STORE call
[11:14] <Nemokosch> but for that I should know where exactly do the objects on the left handside turn into one thing
[11:15] <lizmat> well, they're a List
[11:15] <lizmat> basically, you'd be changing the List = List semantics
[11:16] <sienet_ja_LSD[m]> that ($a,@b) = 1,2,3 is very LISPish
[11:16] <Nemokosch> I think vrurg said something about the calls, if not it had to be Jonathan himself
[11:17] <Nemokosch> iirc it was something like, once you reach a @var on the left handside, it will STORE everything remaining on the right handside
[11:18] <Nemokosch> so yes you are right I guess
[11:19] <Nemokosch> long story short, 95% of cases, I'd always like to see the "scalar behavior"
[11:19] <Nemokosch> because that's what I've always known and meant by "variable"
[11:20] <Nemokosch> if a @var is reached, it would act a bit like a "voluntary single argument rule"
[11:20] <Nemokosch> if the RHS starts with a Positional, STORE that, otherwise eat them up, or idk
[11:20] <lizmat> m: my @a = 1,2,3; my @b = <a b c>; ($@a, $@b) = ($@b, $@a);   # maybe this should be made to work
[11:20] <camelia> rakudo-moar 6584775cc: OUTPUT: «Cannot assign to a readonly variable or a value␤  in block <unit> at <tmp> line 1␤␤»
[11:20] <Nemokosch> just a random thought
[11:21] <lizmat> m: my @a = 1,2,3; my @b = <a b c>; (@a, @b) := (@b, @a);   # or maybe better: this
[11:21] <camelia> rakudo-moar 6584775cc: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Cannot use bind operator with this left-hand side␤at <tmp>:1␤------> 33; my @b = <a b c>; (@a, @b) := (@b, @a)⏏;   # or maybe better: this␤»
[11:22] <sienet_ja_LSD[m]> m: my @a = 1,2,3; my @b = <a b c>; (@a, @b) = $@b, $@a;
[11:22] <camelia> rakudo-moar 6584775cc: ( no output )
[11:22] <SmokeMachine> m: my @a = 1,2,3; my @b = <a b c>; :(@a, @b) := (@b, @a) # Why not use this?
[11:22] <camelia> rakudo-moar 6584775cc: ( no output )
[11:23] <lizmat> SmokeMachine++   # duh!
[11:23] <SmokeMachine> m: my @a = 1,2,3; my @b = <a b c>; :(@a, @b) := @b, @a; say @a; say @b
[11:23] <camelia> rakudo-moar 6584775cc: OUTPUT: «[a b c]␤[1 2 3]␤»
[11:23] <sienet_ja_LSD[m]> hehe
[11:24] <lizmat> I keep forgetting you can use destructuring like that  :-)
[11:28] <Nemokosch> can you bind as many times as you wish?
[11:29] <SmokeMachine> Nemokosch: what do you mean?
[11:31] <SmokeMachine> @a = 1,2,3; my @b = <a b c>; my ($c, %d) :(@a, $c, @b, %d) := @b, 42, @a, { :13a }; say @a; say @b; say $c; say %d
[11:31] <SmokeMachine> m: @a = 1,2,3; my @b = <a b c>; my ($c, %d) :(@a, $c, @b, %d) := @b, 42, @a, { :13a }; say @a; say @b; say $c; say %d
[11:31] <camelia> rakudo-moar 6584775cc: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '@a' is not declared.  Perhaps you forgot a 'sub' if this was␤intended to be part of a signature?␤at <tmp>:1␤------> <BOL>⏏@a = 1,2,3; my @b = <a b c>; my ($c, %d)␤»
[11:31] <SmokeMachine> m: my @a = 1,2,3; my @b = <a b c>; my ($c, %d) :(@a, $c, @b, %d) := @b, 42, @a, { :13a }; say @a; say @b; say $c; say %d
[11:31] <camelia> rakudo-moar 6584775cc: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤You can't adverb my ($c, %d)␤at <tmp>:1␤------> = <a b c>; my ($c, %d) :(@a, $c, @b, %d)⏏ := @b, 42, @a, { :13a }; say @a; say @b␤»
[11:31] <SmokeMachine> m: my @a = 1,2,3; my @b = <a b c>; my ($c, %d); :(@a, $c, @b, %d) := @b, 42, @a, { :13a }; say @a; say @b; say $c; say %d
[11:31] <camelia> rakudo-moar 6584775cc: OUTPUT: «[a b c]␤[1 2 3]␤42␤{a => 13}␤»
[11:37] <Nemokosch> the more I read back, the more I get the impression that this :() just went straight unnoticed or forgotten, whenever this came up
[11:37] <lizmat> Nemokosch: and you'd be right  :-)
[11:38] <Nemokosch> Not just here, also at the issue I opened for this half a year ago :v
[11:39] <Nemokosch> I can't get it working, though...
[11:39] <SmokeMachine> Nemokosch: what are you trying to do?
[11:40] <Nemokosch> the exact same thing
[11:40] <Nemokosch> > Lexical with name '@a' does not exist in this frame
[11:42] <SmokeMachine> Nemokosch: with that same code?
[11:42] <Nemokosch> moment
[11:42] <Nemokosch> I think it was the REPL being a potato
[11:44] <Nemokosch> m: my @a= 1, 2, 3; my @b= 7, 8, 9; :(@a, @b) := (@b, @a); print '@a is: '; dd @a; print '@b is: '; dd @b;
[11:44] <camelia> rakudo-moar 6584775cc: OUTPUT: «@a is: Array @b = [7, 8, 9]␤@b is: Array @a = [1, 2, 3]␤»
[11:44] <Nemokosch> a bit funny though
[11:46] <lizmat> yeah..  Array object knows it's own name
[11:47] <lizmat> and *that* wasn't changed when you swapped themm
[11:47] <lizmat> *its
[11:48] <Nemokosch> I think this is a quite good workaround, although still a workaround to me
[11:53] <lizmat> fwiw, I have a "did you know" item for next week's Rakudo Weekly News
[11:53] <Nemokosch> nice :D
[11:53] * lizmat also clickbaits https://rakudoweekly.blog/2022/06/14/2022-24-conference-2022/
[11:55] <Nemokosch> ACTION tries to wrap his head around this irc stuff
[11:55] <Nemokosch> rip xD
[11:55] <jast> close, but as I recall it needs to be wrapped in \001 bytes
[11:56] <Nemokosch>  ACTION gives up
[11:56] * Nemokosch gives u
[11:56] <Nemokosch> :DD
[11:56] <jast> i.e. PRIVMSG #raku :
[11:56] <jast> dang
[11:56] <jast> i.e. PRIVMSG #raku :\001ACTION says hi\001
[11:57] <jast> not literal "\001" of course
[11:57] <Nemokosch> how would I get \001 anyway
[11:57] <Nemokosch> doesn't sem to be worth the fuss
[11:58] <SmokeMachine> sorry, what are you trying to do?
[11:58] <jast> that's why most IRC clients have a command for it :)
[11:58] *** discord-raku-bot left
[11:58] <Nemokosch> back to diss cord
[11:58] *** Nemokosch left
[11:58] * SmokeMachine thinks it's something like this?
[11:58] *** discord-raku-bot joined
[11:58] <jast> correct
[11:58] <jast> /me is implemented internally as a CTCP ACTION message
[12:00] <discord-raku-bot> <Nemokosch#9980> got the ticket for the conference...
[12:02] <discord-raku-bot> <Nemokosch#9980> if it will be as good as it was last year, already worth it
[12:05] *** discord-raku-bot left
[12:05] *** dogbert17 left
[12:05] *** discord-raku-bot joined
[12:06] *** jgaz joined
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[12:11] *** dogbert17 joined
[12:15] *** abraxxa left
[12:28] *** lichtkind joined
[13:04] *** johnjaye joined
[13:05] <johnjaye> has anybody compiled raku for freebsd? the top google i hit is outdated
[13:15] *** jgaz left
[13:17] <discord-raku-bot> <Nemokosch#9980> I wonder, does rakubrew not work for freebsd?
[13:17] <johnjaye> i don't know what that is. is that like brew for mac?
[13:18] <johnjaye> also it may not even be supported. the website refers to building for "linux" or for windows
[13:18] <Voldenet> I have not, but makefile.in suggests that moarvm can be compiled under freebsd
[13:19] <discord-raku-bot> <Nemokosch#9980> it refers to "unix-ish"
[13:19] <discord-raku-bot> <Nemokosch#9980> I'd give it a go
[13:20] <johnjaye> what is moarvm? i observed that Configure.pl existed for different subsystems. moarvm, rakudo, and nqp
[13:20] <johnjaye> i also see 3 temporary directories have been created. i assume one for each of those to build
[13:20] <Voldenet> to compile raku from scratch you need 3 things: moarvm, nqp and rakudo
[13:21] <discord-raku-bot> <Nemokosch#9980> moarvm is the underlying virtual machine
[13:21] <Voldenet> https://github.com/MoarVM/MoarVM https://github.com/Raku/nqp https://github.com/rakudo/rakudo/
[13:21] <discord-raku-bot> <Nemokosch#9980> anyway, for what particular reason would one want to compile from scratch?
[13:22] <johnjaye> because it doesn't exist if i don't do that?
[13:23] <discord-raku-bot> <Nemokosch#9980> as I said: just install rakubrew, run `rakubrew download` and profit
[13:23] <discord-raku-bot> <Nemokosch#9980> or at least try it
[13:23] <discord-raku-bot> <Nemokosch#9980> literally 5 minutes to lose
[13:24] <johnjaye> hmm the linux package is not as large as i thought. only 60MB?
[13:25] <johnjaye> tried on my raspi and it has a 'rakudo' package. but this machine is freebsd which is why i asked
[13:25] *** lizmat_ joined
[13:27] <discord-raku-bot> <Nemokosch#9980> I think packaged versions are often outdated
[13:27] <discord-raku-bot> <Nemokosch#9980> maybe guifa knows more about what exists and what doesn't? 😄
[13:27] <discord-raku-bot> <Nemokosch#9980> but from what I learned, rakubrew is the way, if you do not require a premade package
[13:27] *** lizmat left
[13:28] <johnjaye> ok. after the build finishes or fails i'll try that
[13:28] <johnjaye> it's using perl to build raku modules? it's on 3rdparty/mimalloc right now
[13:29] <discord-raku-bot> <Nemokosch#9980> probably
[13:30] <Voldenet> rakubrew is just using perl to fetch git repos, run makefiles and so on
[13:31] <Voldenet> oh, and Configure.pl is in perl
[13:31] *** duplex_line joined
[13:31] <discord-raku-bot> <Nemokosch#9980> so yeah, it pretty much does the build for you, haha
[13:31] <discord-raku-bot> <Nemokosch#9980> and it indeed wouldn't hurt if it worked properly on FreeBSD
[13:32] <Voldenet> otoh if it doesn't work on FreeBSD then it's likely not rakubrew's fault
[13:32] *** lizmat_ is now known as lizmat
[13:33] <discord-raku-bot> <Nemokosch#9980> if the creator paid attention to which shell to invoke and mundane stuff like this
[13:34] *** stanrifkin joined
[13:35] <johnjaye> well. is rakubrew not part of raku?
[13:35] <johnjaye> the rakustar tarball i downloaded explicitly checks for bash. which is good as freebsd does not use bash as the default shell
[13:35] <discord-raku-bot> <Nemokosch#9980> khm, having to write shell that runs under Debian 9 and Solaris 8...
[13:36] <johnjaye> it uses something like tsch for root and a sh-clone for sh
[13:36] * johnjaye wonders how to check for shell if $SHELL is not defined
[13:37] <discord-raku-bot> <Nemokosch#9980> I don't know how much Rakudo Star is still maintained
[13:37] <discord-raku-bot> <Nemokosch#9980> rakubrew is a little tool that the community likes, I don't think it's "official" in any sense
[13:39] <discord-raku-bot> <Nemokosch#9980> it reminds me of fpcupdeluxe in the Free Pascal world
[13:39] <discord-raku-bot> <Nemokosch#9980> except it's much simpler
[13:40] <johnjaye> is raku star not the official build method?
[13:40] <johnjaye> it says so in the readme.
[13:40] <johnjaye> haha. funny you mention free pascal. i  was playing with it last week and couldn't get lazarus to build.
[13:40] <johnjaye> (this was on linux)
[13:41] <El_Che> that's wrong then
[13:41] <johnjaye> another funny thing is that by default the 'fp' ide can't compile anything. because it can't read pascal unit files correctly or something. you have to invoke fpc directly
[13:41] <El_Che> the official way is just configure, make test and make install
[13:41] <johnjaye> El_Che: i went to the website, clicked through a few windows, then on a tarball
[13:42] <johnjaye> well not exactly. i scroll down to where it said raku star since i read that was the complete bundle
[13:42] <johnjaye> was i supposed to click on the main tgz file?
[13:43] <El_Che> johnjaye: a bourne script of how I build the linux packages: https://github.com/nxadm/rakudo-pkg/blob/master/actions/build.sh
[13:44] <johnjaye> that's a big script. lots of paths
[13:45] <johnjaye> i can kind of see why people use docker even if i disagree with it
[13:45] <El_Che> yeah, it's for "all" the linux distros :)
[13:45] <johnjaye> what does --relocatable do
[13:46] <El_Che> relocatable means you can copy the rakudo lib to somewhere else and it will keep working
[13:46] <discord-raku-bot> <Nemokosch#9980> Oh right sorry, El_Che is the builder 😄
[13:48] <El_Che> "Yes we can!" 
[13:48] <discord-raku-bot> <Nemokosch#9980> I don't even know the "fp ide"
[13:51] <johnjaye> it's a recreation of the turbo vision ide from the 80s that shipped with the original ibm pc
[13:52] <johnjaye> ok i found rakubrew. running as root in tcsh it said i needed a shell line in my .profile. not sure what that means. i ran ~/.rakubrew/bin/rakubrew mode shim and then ~/.rakubrew/bin/rakubrew available
[13:53] <johnjaye> it said no binary for freebsd is available so run 'rakubrew build' which i did.
[13:54] <discord-raku-bot> <Nemokosch#9980> so where are we now?
[13:55] <johnjaye> receiving objects, 30000/96000.
[13:55] <johnjaye> by the way the compilation from raku star succeeded. i could run raku from the build directory. i think i wasn't root there so it failed to install fully
[13:55] <johnjaye> but i'm running root now. freebsd has this oddity where root and ordinary users have different default shells (tcsh and sh resp)
[13:57] <Voldenet> iirc rakubrew uses perl's system for everything
[13:57] <johnjaye> this is freebsd 13 by the way. i like the rakubrew procedure mostly. didn't get what it meant by 'mode shim' exactly
[13:57] <johnjaye> Voldenet: so did raku star i believe
[13:57] <johnjaye> or at least to do something.
[13:57] <johnjaye> i thought raku and perl5 were totally separate in terms of dependencies
[13:58] <Voldenet> though the whole procedure is just fetching 3 repos, doing `perl Configure.pl ; make ; make install` on them
[13:58] <johnjaye> is that Configure.pl step from rakubrew or rakudo itself?
[13:58] <discord-raku-bot> <Nemokosch#9980> depends on what you call a "dependency"
[13:59] <Voldenet> perl5 is only necessary to build raku, it's convenient since perl5 is everywhere
[14:00] <johnjaye> yeah i've noticed that. i use mac and windows also and i think they both have perl by default? not sure but mac does
[14:00] <johnjaye> kind of surprised how much out there still depends on just plain perl5
[14:00] <discord-raku-bot> <Nemokosch#9980> one can say that building itself is not exactly bootstrapped
[14:01] <discord-raku-bot> <Nemokosch#9980> The software we are deploying also uses quite a lot of perl for building in particular
[14:01] <johnjaye> well that's probably most systems though right. if a compiler compiles itself that's not bootstrapping if i understand the term right?
[14:01] <johnjaye> bootstrapping would be like you make some x86 which compiles the c compiler which compiles the build compiler which compiles the compiler
[14:02] <discord-raku-bot> <Nemokosch#9980> well I'd think one indirection is enough 🤷‍♂️
[14:03] <discord-raku-bot> <Nemokosch#9980> anyway, raku is generally not used to build raku
[14:03] <discord-raku-bot> <Nemokosch#9980> from what I've seen
[14:03] <johnjaye> i was talking to someone from nix or guix or something and they were explaining how bootstrapping "really" works
[14:07] *** frost left
[14:07] <Voldenet> fundamentally it's possible to build raku with gcc only though
[14:08] <discord-raku-bot> <Nemokosch#9980> and then build gcc with raku? 😂
[14:10] *** morte_ joined
[14:17] <SmokeMachine> Nemokosch: I think it's possible: https://github.com/FCO/GccJit
[14:17] <tellable6> SmokeMachine, I'll pass your message to Nemokosch
[14:17] <Voldenet> what ಠ_ಠ 
[14:18] <Voldenet> but wait a moment, you need gcc to build libgccjit
[14:18] <SmokeMachine> bootstrapping... :P
[14:19] <discord-raku-bot> <Nemokosch#9980> 😂
[14:20] <SmokeMachine> (sorry, that was a joke...)
[14:25] <Voldenet> Btw, I wonder if moarvm would compile with zig cc
[14:27] *** stanrifkin left
[14:31] <johnjaye> SmokeMachine: i'm not exactly sure what that is. it seems it's defining gcc jit data types in a raku file?
[14:36] *** Kaipii joined
[14:37] <johnjaye> hrm. it installed it to /root/.rakubrew/versions/moar-2022.6/install/bin/rakudo
[14:37] <johnjaye> admittedly that's fine for someone like me who knows how to use the find command. but is that really the intended final installation?
[14:39] *** Kaipei left
[14:41] *** Kaipii left
[14:41] *** Kaipii joined
[14:42] <El_Che> what you put in your profile adds the path to your PATH probably
[14:43] <El_Che> (I don't use rakubrew, but tools work like that most of the time: paths or symlinks)
[14:44] *** duplex_line left
[14:46] <discord-raku-bot> <Anton Antonov#7232> <@886919719066697749> Please, be careful what you are joking about...
[14:46] *** duplex_line joined
[14:46] <[Coke]> rakubrew allows you to have multiple versions installed, and it manages which one you get. the shell setup puts it's wrappers in your path first.
[14:46] <discord-raku-bot> <Anton Antonov#7232> (That was a joke.)
[14:46] <[Coke]> You shouldn't be running that version directly.
[14:48] <[Coke]> (e.g. you can use 'rakubrew switch <other version>' and then run 'raku' directly without having to know where that specific version is)
[14:54] *** Sgeo joined
[14:56] *** duplex_line left
[15:21] <johnjaye> yeah but was i supposed to put something in my profile?
[15:21] <johnjaye> the terminal scrolled up too far i think for me to see what it said
[15:22] <[Coke]> https://rakubrew.org has instructions
[15:26] <johnjaye> i know. i'm reading them.
[15:30] <johnjaye> ah ok. so it was tcsh biting me again
[15:31] <johnjaye> once i switch to bash on the root console then I can run /root/.rakubrew/bin/rakubrew init Sh and my $PATH is updated correctly 
[15:31] <johnjaye> so actually i didn't need to be root at all if it's installing to a local directory anyway. and then that command would have worked better
[15:38] *** dakkar left
[15:58] *** melezhik joined
[15:58] <melezhik> .
[15:58] <tellable6> 2022-06-14T23:14:15Z #raku <jjatria> melezhik interesting! I'll take a look. Thanks for the report!
[15:59] <melezhik> .tell jjatria see my last comment - https://gitlab.com/jjatria/http-tiny/-/issues/14#note_992887644
[15:59] <tellable6> melezhik, I'll pass your message to jjatria
[15:59] <melezhik> I am not sure if this is Rakudo issue ...
[16:00] <jjatria> melezhik: So when you do `Blob.new($d)` you get a Blob back?
[16:01] <melezhik> what do you mean? sorry
[16:02] <melezhik> yes, look like Blob.new("/path/to/file/".IO.slurp) fails
[16:02] <jjatria> From what I can tell, the error is being raised when you build the Blob, not when you call `put`
[16:02] <melezhik> I am not sure how can I convert content of binary file into blob
[16:02] <melezhik> yes, I see
[16:02] <jjatria> I think you're fine doing `$file.IO.slurp: :bin`
[16:03] <melezhik> ahh, ok
[16:03] <melezhik> let me try
[16:03] <jjatria> I could be wrong, but I think that's all you need
[16:03] <melezhik> that works! thanks
[16:03] <melezhik> you can close the issue
[16:03] <jjatria> Woo~ :tada: 
[16:04] <melezhik> it'l be good by the way to add this to your examples/
[16:04] <melezhik> when someone wants to PUT a binary file
[16:06] <jjatria> I can add it as a note on https://gitlab.com/jjatria/http-tiny/-/blob/master/examples/cookbook.md#put-binary-data
[16:07] <melezhik> yes, exactly! thanks
[16:14] *** Kaipii left
[16:14] *** Kaipii joined
[16:21] *** melezhik left
[16:33] *** vrurg_ joined
[16:33] *** vrurg left
[16:35] *** morte_ left
[16:36] *** jgaz joined
[16:36] *** Maylay left
[16:39] <Voldenet> : my \_ = False; loop (;_;) {  }
[16:39] <Voldenet> m: my \_ = False; loop (;_;) {  }
[16:39] <camelia> rakudo-moar d253dc79e: ( no output )
[16:44] *** Maylay joined
[16:57] *** jgaz left
[17:10] <discord-raku-bot> <Nemokosch#9980> hey, what are you doing again
[17:39] *** melezhik joined
[17:39] <melezhik> .
[17:39] *** morte_ joined
[17:44] *** morte_ left
[18:01] *** finanalyst joined
[18:06] *** melezhik left
[18:06] *** reportable6 left
[18:07] *** reportable6 joined
[18:49] *** mexen left
[19:29] *** finanalyst left
[20:29] *** linkable6 left
[20:29] *** evalable6 left
[20:31] *** evalable6 joined
[20:31] *** linkable6 joined
[20:42] *** mexen joined
[21:24] *** Kaipii left
[21:27] *** jgaz joined
[21:36] *** jgaz left
[22:04] *** patrickb_ joined
[22:04] *** rjbs_ joined
[22:06] *** m_athias_ joined
[22:06] *** jcallen_ joined
[22:06] *** Woodi_ joined
[22:06] *** pat_js joined
[22:06] *** masak_ joined
[22:07] *** leedo_ joined
[22:07] *** mykhal_ joined
[22:07] *** pi1 joined
[22:07] *** jercos_ joined
[22:07] *** patrickb left
[22:07] *** m_athias left
[22:07] *** Woodi left
[22:07] *** pejayes left
[22:07] *** johnjaye left
[22:07] *** synthmeat left
[22:07] *** jercos left
[22:07] *** rjbs left
[22:07] *** leedo left
[22:07] *** mykhal left
[22:07] *** jcallen left
[22:07] *** masak left
[22:07] *** patrickb_ is now known as patrickb
[22:07] *** rjbs_ is now known as rjbs
[22:08] *** synthmeat joined
[22:10] *** mexen left
[22:10] *** m_athias_ is now known as m_athias
[22:25] *** pi1 is now known as johnjaye
[22:33] *** jgaz joined
[22:52] *** tejr joined
[22:59] *** lichtkind left
[23:01] *** Colere left
[23:06] *** Colere joined
[23:07] <thowe> Is anyone working on a project in Raku that is targeted at users who don't necessarily care about the language it is written in? And I mean, is meant to be run/hosted by those users...  not just presented as a service or web site.
[23:08] <thowe> Maybe I should say "Other than sparrowdo" which is the one thing I know of that may qualify
[23:42] *** jgaz left
