[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:10] *** jpn joined
[00:15] *** jpn left
[00:21] *** melezhik left
[00:29] *** jpn joined
[00:39] *** CodeTortoise left
[00:52] *** jgaz left
[00:53] *** jpn left
[01:01] *** derpydoo left
[01:03] *** xinming left
[01:05] *** xinming joined
[01:08] *** jpn joined
[01:14] *** jpn left
[01:17] *** NemokoschKiwi joined
[01:26] *** jpn joined
[01:31] *** jpn left
[01:41] *** eseyman left
[01:42] *** Voldenet left
[01:45] *** jpn joined
[01:49] *** Voldenet joined
[01:50] *** NemokoschKiwi left
[02:01] *** Voldenet left
[02:22] *** jpn left
[02:36] *** silug left
[02:37] *** jpn joined
[02:37] *** squashable6 left
[02:38] *** squashable6 joined
[02:38] *** Voldenet joined
[02:39] *** silug joined
[02:41] *** silug left
[02:43] *** jpn left
[02:59] *** ProperNoun left
[03:05] *** Homer_Simpson joined
[03:05] <Homer_Simpson> is there a way to type a string liteal and then make a n identifier from it 

[03:06] <Homer_Simpson> eg 'item' in $item

[03:07] <Homer_Simpson> literal* an*

[03:10] <discord-raku-bot> <Nemokosch> yes there is but you should really ask yourself why you want to do it

[03:12] *** jpn joined
[03:13] <discord-raku-bot> <Nemokosch> you can ask the symbol table accessed by `::` - that can give you symbols that exist but it cannot store new symbols

[03:16] <discord-raku-bot> <Nemokosch> https://docs.raku.org/language/packages#Pseudo-packages

[03:17] *** Kaipei left
[03:17] <discord-raku-bot> <Nemokosch> the lookup story starts right below: https://docs.raku.org/language/packages#Looking_up_names

[03:24] *** jpn left
[03:29] *** silug joined
[03:35] <Homer_Simpson> awesome

[03:37] <Homer_Simpson> so like this: my $::'foo'; or like this: my $str = 'bar'; $::$str;

[03:53] <Homer_Simpson> I can't get it to work

[03:54] <Homer_Simpson> my $::('foo');

[03:54] <Homer_Simpson> my $bar = 'bar'; my $::($bar);

[03:54] *** jpn joined
[03:55] <Homer_Simpson> maybe replit just sucks

[03:55] <Homer_Simpson> I wish there was an android raku compiler

[03:56] <Homer_Simpson> with an ide

[03:56] *** silug left
[03:56] <Homer_Simpson> replit app has stopped working even after resetting/reinstall

[04:00] *** jpn left
[04:04] *** silug joined
[04:10] <Homer_Simpson> https://usercontent.irccloud-cdn.com/file/SnRDC2Co/.jpg

[04:12] *** jpn joined
[04:26] *** jpn left
[04:37] *** jpn joined
[04:42] *** jpn left
[04:53] <Homer_Simpson> oh ok they are only package scoped

[05:33] *** jpn joined
[05:39] *** Kaipei joined
[05:42] *** jpn left
[05:45] *** Kaipei left
[05:56] *** jpn joined
[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[06:14] *** jpn left
[06:57] *** jpn joined
[07:23] *** jpn left
[07:28] *** sarna left
[07:28] *** sarna joined
[07:32] <jaguart> m: constant undef="not-defined"; say undef;

[07:32] <camelia> rakudo-moar 42f1f912c: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Unsupported use of undef as a value.  In Raku please use: something‚ê§more specific: an undefined type object such as Any or Int, :!defined as‚ê§a matcher, Any:U as a type constraint, Nil as the absence‚Ä¶¬ª

[07:33] <jaguart> m: our Str constant undef="not-defined"; say undef;

[07:33] <camelia> rakudo-moar 42f1f912c: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Unsupported use of undef as a value.  In Raku please use: something‚ê§more specific: an undefined type object such as Any or Int, :!defined as‚ê§a matcher, Any:U as a type constraint, Nil as the absence‚Ä¶¬ª

[07:53] *** jpn joined
[08:05] *** jpn left
[08:16] *** lucerne joined
[08:17] *** lucerne left
[08:37] *** bartolin left
[08:48] *** jpn joined
[08:52] *** jpn left
[09:00] *** Demos[m] left
[09:11] *** lizmat_ left
[09:11] *** lizmat joined
[09:12] *** tib_ joined
[09:15] <jaguart> oh - but case sensitive :) whew

[09:15] <jaguart> m: constant UNDEF = "nope"; say "lala ", UNDEF;

[09:15] <camelia> rakudo-moar 42f1f912c: OUTPUT: ¬´lala nope‚ê§¬ª

[09:28] <Voldenet> I wouldn't use UNDEF

[09:30] <Voldenet> I'd do something like `class foo { default { foo.new }}; foo.default`

[09:32] <Voldenet> or `class y { our sub default { y.new } }; y::default.say`

[09:41] *** Kaipei joined
[09:43] *** jpn joined
[09:43] <discord-raku-bot> <Nemokosch> Homer_Simpson: as I said, you cannot create new variables to all symbol tables. You can create for ones that have a Stash, as opposed to a PseudoStash

[09:45] <discord-raku-bot> <Nemokosch> Voldenet: I guess it's rather the principle that is funny

[09:46] <discord-raku-bot> <Nemokosch> That you naively do something and the compiler "misguesses" what your motives are

[09:47] <discord-raku-bot> <Nemokosch> Perhaps it shouldn't shut you down if you yourself created a term called undef

[09:53] <Geth> ¬¶ ecosystem/main: 8f8740e49b | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[09:53] <Geth> ¬¶ ecosystem/main: Just a couple to go

[09:53] <Geth> ¬¶ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/8f8740e49b

[09:55] <discord-raku-bot> <Nemokosch> by the way... I'd like to gather allies for a somewhat similar, fairly fundamental issue

[09:56] <discord-raku-bot> <Nemokosch> Grammars have regexes and tokens which are installed as methods, right?

[09:57] <discord-raku-bot> <Nemokosch> This wouldn't necessarily be a problem - if they weren't downright installed with completely unmarked names, hence instantly name-conflicting with all methods that a Grammar class has

[09:59] <discord-raku-bot> <Nemokosch> leont: perhaps you can empathize with this problem; I think this is much like the problem of lexical exports, except in a somewhat closer world

[10:00] <discord-raku-bot> <Nemokosch> however, it seems to me that the offered remedies are also worse, basically "just know by heart what methods your Grammar can have and avoid those names"

[10:00] <discord-raku-bot> <Nemokosch> closer->more closed

[10:31] *** eseyman joined
[10:37] *** jpn left
[10:37] *** jpn joined
[10:42] *** jpn left
[10:43] *** Geth left
[10:43] *** Geth joined
[10:47] *** sena_kun joined
[11:04] *** jpn joined
[11:05] *** Kaipei is now known as Kaiepi

[11:09] *** squashable6 left
[11:10] <lizmat> weekly: https://www.reddit.com/r/rakulang/comments/zxsmvy/rakudo_coredev_class_session_2/

[11:10] <notable6> lizmat, Noted! (weekly)

[11:10] *** squashable6 joined
[11:14] *** Homer_Simpson left
[11:28] *** jpn left
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:14] *** squashable6 left
[12:17] *** squashable6 joined
[13:17] *** evalable6 left
[13:17] *** linkable6 left
[13:17] *** reportable6 left
[13:17] *** squashable6 left
[13:17] *** benchable6 left
[13:18] *** linkable6 joined
[13:18] *** benchable6 joined
[13:18] *** reportable6 joined
[13:19] *** squashable6 joined
[13:20] *** evalable6 joined
[13:36] *** jgaz joined
[14:00] *** jpn joined
[14:04] *** jpn left
[14:30] *** jgaz left
[14:30] *** jgaz joined
[14:36] *** jpn_ joined
[14:43] *** ProperNoun joined
[14:53] *** jpn_ left
[14:59] *** TieUpYourCamel left
[15:01] *** jpn joined
[15:28] *** jpn left
[15:39] *** jpn joined
[16:09] *** TieUpYourCamel joined
[16:14] *** Geth left
[16:14] *** Geth joined
[16:34] *** CodeTortoise joined
[16:43] *** CodeTortoise left
[17:10] *** epony left
[17:21] *** jpn left
[17:26] *** jgaz left
[17:28] *** epony joined
[17:28] *** melezhik joined
[17:59] *** jgaz joined
[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:13] <discord-raku-bot> <melezhik> testing the bridge ...

[18:40] <discord-raku-bot> <Anton Antonov> <@779471841270038528> How? üôÇ

[18:55] <melezhik> Anton, maybe this sounds "silly" I wanted to make it sure that messages from discord raku-bridge also appears here ))

[18:56] <melezhik> I just need done it before ))

[18:56] <melezhik> need -> never

[19:00] *** evalable6 left
[19:00] *** linkable6 left
[19:02] *** linkable6 joined
[19:02] *** evalable6 joined
[19:03] *** CodeTortoise joined
[19:14] *** CodeTortoise left
[19:22] <discord-raku-bot> <Anton Antonov> üëç

[19:44] *** melezhik left
[19:53] *** derpydoo joined
[19:59] *** jpn joined
[20:22] *** epony left
[20:29] *** epony joined
[20:40] *** jpn left
[20:54] *** pippo joined
[20:55] <pippo> m: my @a=[:level(1)]; class A {has $.level}; my $instance=A.new(@a.shift);

[20:55] <camelia> rakudo-moar ddecbe687: OUTPUT: ¬´Default constructor for 'A' only takes named arguments‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:56] *** vrurg_ joined
[20:56] *** vrurg left
[20:58] <pippo> my @a=[:level(1)]; @a.shift ~~ :level(1);

[20:58] <pippo> my @a=[:level(1)]; say @a.shift ~~ :level(1);

[20:58] <evalable6> pippo, rakudo-moar d52342eb0: OUTPUT: ¬´True‚ê§¬ª

[20:59] <pippo> my @a=[:level(1)]; say @a.shift ~~ :level(1); class A {has $.level}; my $i = A.new(:level(1)); say $i; my $j = A.new(@a.shift);

[21:00] <pippo> my @a=[:level(1)]; say @a.shift ~~ :level(1); class A {has $.level}; my $i = A.new(:level(1)); say $i; my $j = A.new(@a.shift); say $j;

[21:00] <pippo> m: my @a=[:level(1)]; say @a.shift ~~ :level(1); class A {has $.level}; my $i = A.new(:level(1)); say $i; my $j = A.new(@a.shift); say $j;

[21:00] <camelia> rakudo-moar ddecbe687: OUTPUT: ¬´True‚ê§Default constructor for 'A' only takes named arguments‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§A.new(level => 1)‚ê§¬ª

[21:01] <pippo> m: my @a=[:level(1)]; class A {has $.level}; my $i = A.new(@a.shift); say $i;

[21:01] <camelia> rakudo-moar ddecbe687: OUTPUT: ¬´Default constructor for 'A' only takes named arguments‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:02] <pippo> ^^ anybody could explain me why this does not work please?

[21:03] *** CodeTortoise joined
[21:03] *** jpn joined
[21:04] *** CodeTortoise left
[21:12] *** jpn left
[21:23] <guifa> The default constructor for a class is .new(:$attr, :$attr‚Ä¶) 

[21:23] <guifa> the problem is

[21:23] <guifa> you're passing the Pair as a positional argument

[21:27] <discord-raku-bot> <Nemokosch> guifa: maybe you know how to pass a pair as a positional argument to a _sub-signature_?

[21:34] <discord-raku-bot> <Nemokosch> pippo: I have something for you based on what guifa said

[21:34] *** NemokoschKiwi joined
[21:35] <NemokoschKiwi> m: my @a=[:level(1)]; class A {has $.level}; my $i = A.new(|(@a.shift)); say $i;

[21:35] <camelia> rakudo-moar ddecbe687: OUTPUT: ¬´A.new(level => 1)‚ê§¬ª

[21:35] <NemokoschKiwi> ü•≥

[21:35] <pippo> Uaaaaaaaaaaa!!! thank you!!!!!!!!!!!!!

[21:38] <NemokoschKiwi> you're welcome. Everybody learns something :D

[21:38] *** pippo left
[21:38] *** NemokoschKiwi left
[21:38] *** pippo joined
[21:39] <pippo> me many! Cheers

[21:40] *** pippo left
[21:51] *** Manifest0 joined
[21:55] <Manifest0> Hi. I made a little script in raku, but from time to time the script core dumps.

[21:56] <Manifest0> I have no idea why. Is anybody interested in the coredump file? Should i open a github issue with just the coredump?

[21:57] *** jpn joined
[21:57] <discord-raku-bot> <Nemokosch> What is the script doing, if I may?

[21:58] <discord-raku-bot> <Nemokosch> Iirc I only got a dump once, in a situation with heavy use of junctions

[21:58] <discord-raku-bot> <Nemokosch> so basically some concurrent access

[22:00] <Manifest0> It's a console rss reader. It will use cro-http to get the rss, and write it to a sqlite db.

[22:03] <discord-raku-bot> <Nemokosch> if the dump should happen while invoking Cro, it might be a good idea to delegate the issue directly there; it can be more visible and most knowledgeable implementors tend to have Cro affiliations anyway

[22:10] <Manifest0> i don't know if it's while invoking cro. It's possible. I have a react loop that reacts every 120s to update the feeds, and also reacts for a key press (i have a text interface). The crash seems to happen when i press the keys to navigate while the cro is extracting the url.

[22:11] <Manifest0> I'm going to ask in #raku-dev

[22:15] <discord-raku-bot> <Nemokosch> Yes, unfortunately, that's a complex and errorprone part, react blocks, that is. Perhaps it takes someone with a good grasp of the internals to say if you did something wrong or it's just downright a bug. Until then, I'd say make sure to check out docs.raku.org materials, including the "traps" section

[22:22] *** vrurg_ is now known as vrurg

[23:09] *** Woodi left
[23:11] *** epony left
[23:16] *** Woodi joined
[23:20] *** CodeTortoise joined
[23:22] *** sena_kun left
[23:33] <Geth> ¬¶ ecosystem/main: 48cdc93d9f | thundergnat++ (committed using GitHub Web editor) | META.list

[23:33] <Geth> ¬¶ ecosystem/main: Migrate modules to fez ecosystem

[23:33] <Geth> ¬¶ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/48cdc93d9f

[23:56] *** Homer_Simpson joined
