[00:00] *** evalable6 joined
[00:06] *** reportable6 left
[00:07] *** reportable6 joined
[00:15] *** nopy left
[00:17] <discord-raku-bot> <Nemokosch> well, it is "normal", yes

[00:52] *** RandalSchwartz joined
[00:53] <[Coke]> if you have a large script, move it to a module and 'use' it from the main script. then you get precompilation speedups on future runs.

[00:54] *** Nemokosch left
[01:02] *** RandalSchwartz left
[01:11] *** bigdata joined
[01:14] *** frost joined
[02:01] *** razetime joined
[02:34] *** Heptite joined
[03:34] *** linkable6 left
[03:34] *** evalable6 left
[03:34] *** quotable6 left
[03:34] *** greppable6 left
[03:34] *** squashable6 left
[03:34] *** unicodable6 left
[03:34] *** tellable6 left
[03:34] *** notable6 left
[03:34] *** bisectable6 left
[03:34] *** coverable6 left
[03:34] *** statisfiable6 left
[03:34] *** bloatable6 left
[03:34] *** releasable6 left
[03:34] *** benchable6 left
[03:34] *** reportable6 left
[03:34] *** sourceable6 left
[03:34] *** committable6 left
[03:34] *** nativecallable6 left
[03:34] *** shareable6 left
[03:34] *** releasable6 joined
[03:34] *** statisfiable6 joined
[03:35] *** quotable6 joined
[03:35] *** tellable6 joined
[03:36] *** unicodable6 joined
[03:36] *** bisectable6 joined
[03:36] *** evalable6 joined
[03:36] *** committable6 joined
[03:36] *** reportable6 joined
[03:36] *** greppable6 joined
[03:36] *** nativecallable6 joined
[03:37] *** bloatable6 joined
[03:37] *** squashable6 joined
[03:37] *** notable6 joined
[03:37] *** benchable6 joined
[03:37] *** linkable6 joined
[03:37] *** coverable6 joined
[03:37] *** sourceable6 joined
[03:37] *** shareable6 joined
[03:49] *** Heptite left
[04:38] *** razetime left
[04:39] *** razetime joined
[04:56] *** axmed left
[04:56] *** axmed joined
[05:15] *** razetime left
[05:16] *** razetime joined
[05:40] *** paddymahoney2 joined
[05:44] *** paddymahoney2 left
[06:07] *** reportable6 left
[06:09] *** reportable6 joined
[06:38] *** razetime left
[06:38] *** razetime_ joined
[06:58] *** nebuchadnezzar joined
[07:09] *** abraxxa joined
[07:14] *** abraxxa left
[07:14] *** Sgeo left
[07:16] *** abraxxa joined
[07:19] *** grondilu joined
[07:20] *** abraxxa left
[07:21] *** abraxxa joined
[07:21] *** mexen_ joined
[07:22] *** jargan joined
[07:22] *** jast left
[07:27] *** mexen_ left
[07:28] *** dg left
[07:38] <grondilu> Hi all.

[07:38] <tellable6> 2022-09-03T14:17:28Z #raku <guifa> grondilu: best you can do is

[07:40] <grondilu> I have a module C<unit module Foo; constant $foo = [ -> {} ]; $foo()> which executes fine but fails when used : "No lexical found with name '$_'"

[07:41] <grondilu> that Foo example is just a golfed version of what I had initially when I encountered this.

[07:42] <grondilu> m: module Foo { constant $foo = [ -> {} ]; $foo(); }; import Foo;

[07:42] <camelia> rakudo-moar 10066021a: OUTPUT: ¬´No such method 'CALL-ME' for invocant of type 'Array'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[07:42] <grondilu> m: module Foo { constant $foo = -> {}; $foo(); }; import Foo;

[07:42] <camelia> rakudo-moar 10066021a: ( no output )

[07:43] <grondilu> oh sorry I copied it wrong

[07:43] <grondilu> the module is C<unit module Foo; constant $foo = -> {}; $foo()>

[07:44] <grondilu> not sure if I can reproduce the error in a one-liner

[07:48] *** sena_kun joined
[07:58] *** razetime_ left
[07:59] <discord-raku-bot> <Nemokosch> so... what is the code? üòÖ

[07:59] *** razetime joined
[08:08] *** dg joined
[08:33] <Geth> ¬¶ ecosystem: 5515f5be2e | (Elizabeth Mattijsen)++ | META.list

[08:33] <Geth> ¬¶ ecosystem: Remove 3 of Brian Duggan's modules that also live in CPAN

[08:33] <Geth> ¬¶ ecosystem: 

[08:33] <Geth> ¬¶ ecosystem: To prevent double mentions in raku.land

[08:33] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/5515f5be2e

[09:08] *** evalable6 left
[09:08] *** linkable6 left
[09:09] *** linkable6 joined
[09:10] *** evalable6 joined
[09:11] <grondilu> the code is just 'use Foo'

[09:11] <grondilu> or -MFoo

[09:15] <grondilu> anyway, on an other note, I was supposed to get the first 64 bits of the fractional part of sqrt(2) and it seems raku truncated it

[09:17] <grondilu> m: put (($_ - .Int)*2**64).Int.fmt("%0x") given sqrt 2

[09:17] <camelia> rakudo-moar 10066021a: OUTPUT: ¬´6a09e667f3bcd000‚ê§¬ª

[09:17] <grondilu> correct result is 6a09e667f3bcc908

[09:17] <discord-raku-bot> <Nemokosch> isn't that too much for an IEEE 754 floating point number?

[09:17] <discord-raku-bot> <Nemokosch> I don't know but wouldn't be surprised

[09:17] <discord-raku-bot> <Nemokosch> I mean doesn't matter what you are doing if you lose precision on sqrt 2 itself

[09:17] <grondilu> probably yes

[09:18] <grondilu> isn't there a way to do better than IEEE754 here?

[09:18] <lizmat> FatRat ?

[09:19] <grondilu> sqrt 2 is not a rational

[09:19] <discord-raku-bot> <Nemokosch> but you can only approximate it either way

[09:20] <grondilu> isn't there a FatNum or something lol?

[09:20] <discord-raku-bot> <Nemokosch> Raku is not a numeric platform to deal with formulae

[09:20] <discord-raku-bot> <Nemokosch> so everything _is_ rational one way or another, right?

[09:21] <discord-raku-bot> <Nemokosch> and if you want accurate digits, it cannot be a bad idea to use rationals

[09:23] <grondilu> I suppose I could tweak the equation to look for an integer

[09:23] <grondilu> (2**64 + x)**2 == 2**128 or something?

[09:24] <lizmat> grondilu: ah duh, yeah  :-)

[09:25] <grondilu> bad formula here, x = 0 lol

[09:25] <grondilu> something similar should work though

[09:25] <discord-raku-bot> <Nemokosch> anyway, why does 2.FatRat.sqrt give a Num?

[09:25] <discord-raku-bot> <Nemokosch> doesn't seem too friendly

[09:26] <discord-raku-bot> <Nemokosch> "Where a Rat degrades to a Num, math with a FatRat keeps chugging along:" says the docs

[09:26] <discord-raku-bot> <Nemokosch> then why does it turn back into a Num

[09:32] <grondilu> I think I would need the integer algorithm for sqrt anyway

[09:32] <grondilu> m: say sqrt(1 + 2**64)

[09:32] <camelia> rakudo-moar 10066021a: OUTPUT: ¬´4294967296‚ê§¬ª

[09:32] <grondilu> ü§î 

[09:33] <grondilu> m: say sqrt(1 + 2**128)

[09:33] <camelia> rakudo-moar 10066021a: OUTPUT: ¬´1.8446744073709552e+19‚ê§¬ª

[09:33] <grondilu> yeah that's what I thought, there is no multi candidate for large integers

[09:36] <discord-raku-bot> <Nemokosch> sqrt exists on Cool and Numeric so in theory that shouldn't be a problem

[09:36] <discord-raku-bot> <Nemokosch> but does the implementation actually preserve all that data....

[09:36] *** sena_kun left
[09:37] <grondilu> integer square root is a thing https://en.wikipedia.org/wiki/Integer_square_root

[09:37] <grondilu> I'm surprised it's not in Raku's core

[09:37] <grondilu> not complaining, just noticing

[09:41] <lizmat> grondilu: there's your chance to gain immortality  :-)

[09:42] <discord-raku-bot> <Nemokosch> well tbh this seems niche enough for a "general-purpose programming language"

[09:42] <discord-raku-bot> <Nemokosch> I'm more concerned about what I was pointing out

[09:42] <discord-raku-bot> <Nemokosch> .sqrt shouldn't collapse a FatRat into a Num

[09:42] <discord-raku-bot> <Nemokosch> and very apparently this is what happens

[09:42] <discord-raku-bot> <Nahita> it took ~28 years for Python to add `math.isqrt`

[09:44] <discord-raku-bot> <Nemokosch> again, implying that it wouldn't rather belong to some numerical calculations package

[09:44] <discord-raku-bot> <Nemokosch> or if we really insist that FatRat is a "true rational" and shouldn't be used for approximations, then at least there should really be a FatNum

[09:44] <discord-raku-bot> <Nemokosch> some arbitrary precision type that doesn't collapse into Num when sqrt is used

[09:55] <grondilu> m: https://gist.github.com/grondilu/72daaea1a235a138597e745d29ce6fee

[09:55] <camelia> rakudo-moar 10066021a: OUTPUT: ¬´6a09e667f3bcc908‚ê§¬ª

[09:56] <grondilu> quite involved, but will do

[09:56] <lizmat> feels like a module  :-)

[10:00] <grondilu> it's in rosetta code

[10:01] <grondilu> btw I can't log in rc anymore since the update, kind of annoying

[10:09] *** sena_kun joined
[10:17] <Xliff> m: 'ü§î'.uniname.say

[10:17] <camelia> rakudo-moar 10066021a: OUTPUT: ¬´THINKING FACE‚ê§¬ª

[10:17] <Xliff> m: 'ü§î'.unichar.say

[10:17] <camelia> rakudo-moar 10066021a: OUTPUT: ¬´No such method 'unichar' for invocant of type 'Str'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:17] <Xliff> m: 'ü§î'.chr.say

[10:17] <camelia> rakudo-moar 10066021a: OUTPUT: ¬´Cannot convert string to number: base-10 number must begin with valid digits or '.' in '‚èèü§î' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:17] <Xliff> m: 'ü§î'.ord.say

[10:17] <camelia> rakudo-moar 10066021a: OUTPUT: ¬´129300‚ê§¬ª

[10:44] *** a3r0 left
[10:44] *** gfldex left
[10:44] *** jmcgnh left
[10:44] *** swaggboi left
[10:44] *** simcop2387 left
[10:44] *** vasko left
[10:44] *** nine left
[10:44] *** tailgate left
[10:44] *** El_Che left
[10:44] *** avar left
[10:44] *** leah2 left
[10:49] *** a3r0 joined
[10:49] *** gfldex joined
[10:49] *** jmcgnh joined
[10:49] *** swaggboi joined
[10:49] *** simcop2387 joined
[10:49] *** vasko joined
[10:49] *** nine joined
[10:49] *** tailgate joined
[10:49] *** avar joined
[10:49] *** El_Che joined
[10:49] *** leah2 joined
[10:54] *** Xliff left
[10:55] *** grondilu left
[11:30] *** razetime left
[11:31] *** razetime joined
[11:40] *** jargan is now known as jast

[12:09] *** reportable6 left
[12:10] *** reportable6 joined
[12:31] *** frost left
[12:35] *** Kaiepi left
[12:36] *** Kaiepi joined
[13:25] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/09/05/2022-36-coming-in-at-50/

[13:28] <guifa> lizmat++

[13:36] *** linkable6 left
[13:36] *** evalable6 left
[13:36] *** evalable6 joined
[13:37] *** linkable6 joined
[13:58] *** Heptite joined
[14:15] <discord-raku-bot> <Nemokosch> being on the IEEE list _at all_ is a good sign in my opinion

[14:16] <lizmat> my thoughts exactly :-)

[14:17] <discord-raku-bot> <Nemokosch> it can get things started, like one can show it around, "see it's that language I'm using, not something esoteric joke"

[14:17] <discord-raku-bot> <Nemokosch> it can get things started, like one can show it around, "see it's that language I'm using, not some esoteric joke"

[14:22] <discord-raku-bot> <Nemokosch> the current "did you know" even works with .=

[14:25] <lizmat> sure, but I wanted to keep it one feature at a time  :-)

[14:25] <lizmat> that's laziness for you :-)

[14:25] <lizmat> nothing happens until something actually needs the values

[14:25] <lizmat> in this case, it's the "say" command

[14:43] <discord-raku-bot> <Nemokosch> I SAID .= WORKS FOR THAT EXAMPLE

[14:43] <discord-raku-bot> <Nemokosch> ^is that what you mean? ü§£

[14:44] <discord-raku-bot> <Nemokosch> I just used the say command

[14:46] <lizmat> yes, and that's what's causing the Seq to actually be executed

[14:58] *** linkable6 left
[14:58] *** evalable6 left
[14:58] *** evalable6 joined
[14:58] *** linkable6 joined
[15:19] *** perlbot left
[15:19] *** simcop2387 left
[15:44] *** simcop2387 joined
[15:45] *** perlbot joined
[16:14] <discord-raku-bot> <Nemokosch> Apparently I don't get how rak works

[16:15] <discord-raku-bot> <Nemokosch> I have HTML files in a folder, generated by HTML::Tag - the whole file is one humonguous line

[16:15] <discord-raku-bot> <Nemokosch> I wanted to see where the images are

[16:15] <discord-raku-bot> <Nemokosch> I did `grep "img src" *` but obviously it would just give me whole, megabyte-sized files

[16:15] <discord-raku-bot> <Nemokosch> I did `rak "img src"` and it did nothing

[16:16] <discord-raku-bot> <Nemokosch> I thought it would at least find the files as grep did, perhaps produce a more manageable output even

[16:17] <discord-raku-bot> <Nemokosch> but it produced no output whatsoever

[16:21] *** perlbot left
[16:21] *** simcop2387 left
[16:24] <discord-raku-bot> <Nemokosch> when I added `--extensions=html`, it did work

[16:24] <discord-raku-bot> <Nemokosch> so there must be something I'm missing

[16:25] *** bigdata left
[16:34] *** abraxxa left
[16:44] *** simcop2387 joined
[16:45] *** justache- joined
[16:45] *** perlbot joined
[16:46] *** justache left
[17:17] *** sena_kun left
[17:28] <lizmat> Nemokosch: no, it's me who missed adding .htm and .html in a #html group

[17:28] <tellable6> lizmat, I'll pass your message to Nemokosch

[17:33] <lizmat> it will be in the next release

[17:41] <discord-raku-bot> <p6steve> on extended precision topic, I have added Raku here https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic#Applications

[17:43] *** Sgeo joined
[17:44] <discord-raku-bot> <p6steve> also ... I think it is a fair design decision to NOT attempt integer sqrt, but to degrade to Num for both Int and FatRat ... otherwise we (i.e. you) will be building a new tower of ln, log, sin, cos, tan... libraries

[17:44] <discord-raku-bot> <p6steve> since all of these produce irrational numbers

[17:49] *** razetime left
[17:49] *** sena_kun joined
[17:53] *** melezhik joined
[17:53] <melezhik> how one can configure rakudo to search packages in alternative locations?

[17:56] <melezhik> https://gist.github.com/melezhik/29ad03155871619e274d3d4224358d92

[17:56] <melezhik> I am trying to build alpine packages for rakudo installed into /opt/rakudo-pkg/ prefix

[17:57] <melezhik> app does not allow to build packages into `/opt` path

[17:57] <melezhik> so here is my problem, how can I make rakudo installed into `/opt/rakudo-pkg/` prefix look up packages installed into `/usr/` prefix ?

[17:58] <melezhik> which is legit prefix for alpine packages ...

[18:04] <lizmat> El_Che might know

[18:04] <melezhik> thanks!

[18:06] *** reportable6 left
[18:08] *** reportable6 joined
[18:14] <El_Che> as far as a know is /opt valid in linux and unix

[18:15] <El_Che>  /usr besides /usr/local is mostly reserved for the OS itself

[18:15] <El_Che> If by packages you mean libraries? env  RAKUDOLIB? or add it at build time?

[18:19] <melezhik> El_Che I mean this - https://github.com/alpinelinux/abuild/blob/master/abuild.in#L761

[18:21] <ugexe> m: role Foo { method bar { ... } }; class MyClass { has Foo $.foo; }; my $c = MyClass.new; say $c.foo; say $c.foo.?bar

[18:21] <camelia> rakudo-moar 7342d9dc2: OUTPUT: ¬´(Foo)‚ê§Method 'bar' must be implemented by Foo because it is required by roles: Foo.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:21] <ugexe> does that make sense?

[18:21] <melezhik> https://gist.github.com/melezhik/4a8ec17d51756ec168418b4c8da5b2e6#file-abuild-L29 and this

[18:22] <ugexe> i assume its called the stubbed bar method, but i really want .?bar to only call bar if an implementation exists

[18:23] <melezhik> if one tries to build an alpine package for Raku module using standard "$pkgdir" path they sendup having package files into `/usr` prefix, so rakudo installed ¬†into `/opt/rakudo-pkg` prefix won't see them

[18:24] <melezhik> obvious way to overcome that is to use `$pkgdir"/opt/rakudo-pkg/` for install-dist.raku however it results in the mentioned error when trying to build a package using `abuild -r`

[18:25] <melezhik> please see this - https://gist.github.com/melezhik/4a8ec17d51756ec168418b4c8da5b2e6?permalink_comment_id=4290938#gistcomment-4290938

[18:31] *** epony left
[18:33] *** epony joined
[18:34] <El_Che> melezhik: so the solution would be adding /usr/local/raku (or something) to the search path of rakudo-pkg? (security consideration aside for a moment)

[18:34] <El_Che> ?

[18:35] *** n1to joined
[18:36] <melezhik> yeah, so as I started my question from the very beginning I would like say to build alpine packages for Raku modules for rakudo distribution shipped into `/opt/rakudo-pkg` and looks like alpine only allows me to ship packages into `/usr` prefix not `/opt/rakudo-pkg` , so look like we need to be able to configure `rakudo-pkg` to see packages in

[18:36] <melezhik> `/usr` path

[18:37] <melezhik> by configuring a `rakudo-pkg` I mean any way to achieve this , maybe via some env var?

[18:40] <El_Che> if you're setting env vars, you can set RAKUDOLIB?

[18:40] <melezhik> yes, I guessed that , however I just wanted to clarify here, maybe there is a better approach ?

[18:41] <El_Che> wel, i am doubtful

[18:42] <El_Che> if you create packages of libs, I think it makes sense to link to the system rakudo

[18:42] <El_Che> I mean distributable packages not private ones

[18:44] <El_Che> if you want to create packages for lib that use rakudo-pkg I would put that in /usr/local and set the environment

[18:44] <El_Che> or use another tooling that does to impose that check

[18:44] <El_Che> (I use https://github.com/goreleaser/nfpm)

[18:45] <melezhik> yeah, make a sense, the reason I try to build for the distribution supported by you is that official alpine distribution gets stuck in old versions

[18:45] <El_Che> melezhik: I was under the impression they had recent releases, maybe is my info outdated

[18:46] <melezhik> let me check real quick

[18:46] <melezhik> so - https://pkgs.alpinelinux.org/package/edge/community/ppc64le/rakudo 2022.06 - so not that bad

[18:47] <melezhik> in that case maybe I'd continue my journey with official alpine rakudo distro

[18:47] <El_Che> yes, that sounds sane to me

[18:47] <melezhik> anyway - thanks!

[18:48] <El_Che> np

[19:09] *** sena_kun left
[19:11] *** melezhik left
[19:11] *** sena_kun joined
[19:29] *** MoC joined
[19:36] *** squashable6 left
[19:38] *** squashable6 joined
[20:22] <gfldex> lolibloggedalittle: PWC SPOILER ALERT! https://gfldex.wordpress.com/2022/09/05/valid-temperatures/

[20:38] *** linkable6 left
[20:38] *** evalable6 left
[20:39] *** linkable6 joined
[20:41] *** evalable6 joined
[20:41] *** sena_kun left
[20:46] *** justache- is now known as justache

[20:49] *** sena_kun joined
[20:49] *** sena_kun left
[20:52] *** xinming left
[20:53] *** xinming joined
[21:27] *** MoC left
[22:04] *** n1to left
[23:04] *** sourceable6 left
[23:04] *** coverable6 left
[23:04] *** statisfiable6 left
[23:04] *** nativecallable6 left
[23:04] *** unicodable6 left
[23:04] *** benchable6 left
[23:04] *** quotable6 left
[23:04] *** linkable6 left
[23:04] *** evalable6 left
[23:04] *** greppable6 left
[23:04] *** squashable6 left
[23:04] *** releasable6 left
[23:04] *** tellable6 left
[23:04] *** committable6 left
[23:04] *** bisectable6 left
[23:04] *** releasable6 joined
[23:05] *** linkable6 joined
[23:05] *** benchable6 joined
[23:05] *** quotable6 joined
[23:05] *** squashable6 joined
[23:05] *** sourceable6 joined
[23:05] *** statisfiable6 joined
[23:06] *** nativecallable6 joined
[23:06] *** bisectable6 joined
[23:06] *** tellable6 joined
[23:06] *** coverable6 joined
[23:06] *** greppable6 joined
[23:06] *** unicodable6 joined
[23:07] *** committable6 joined
[23:07] *** evalable6 joined
[23:57] *** squashable6 left
[23:59] *** squashable6 joined
