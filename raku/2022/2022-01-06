[00:07] *** reportable6 left
[00:07] *** reportable6 joined
[00:26] <thowe> guifa: ipv6 addresses should be lower case.  There is actually an RFC that says so...  I can find it if you like.
[00:26] <thowe> Wasn't always that way, but it is now.
[00:27] <thowe> I think texts and whatever prior to 2010 may not follow that
[00:28] <thowe> rfc 5952
[01:07] *** evalable6 left
[01:09] *** evalable6 joined
[01:20] *** mexen left
[01:21] *** linkable6 joined
[01:39] *** frost joined
[01:48] <guifa> thowe: yeah, that's newer than the original.  The problem is, the original format has already been used in the wild so ‚Ä¶
[01:49] <guifa> "It is expected that the canonical format will be followed by humans and systems when representing IPv6 addresses as text, BUT all implementations MUST accept and be able to handle ANY legitimate RFC 4291 format." (emphases mine)
[01:50] <guifa> so you still have to be able to accept an initial `00AB::`, even if RF 5952 says you must only ever produce `ab::`
[02:39] *** linkable6 left
[02:39] *** evalable6 left
[02:40] *** evalable6 joined
[03:25] *** seednode99 left
[03:26] *** seednode99 joined
[04:19] *** razetime_ joined
[05:00] *** mexen joined
[06:00] *** statisfiable6 left
[06:00] *** coverable6 left
[06:00] *** squashable6 left
[06:00] *** evalable6 left
[06:00] *** shareable6 left
[06:00] *** releasable6 left
[06:00] *** unicodable6 left
[06:00] *** sourceable6 left
[06:00] *** bisectable6 left
[06:00] *** greppable6 left
[06:00] *** tellable6 left
[06:00] *** notable6 left
[06:00] *** committable6 left
[06:00] *** reportable6 left
[06:00] *** nativecallable6 left
[06:00] *** bloatable6 left
[06:00] *** benchable6 left
[06:00] *** quotable6 left
[06:01] *** bisectable6 joined
[06:01] *** unicodable6 joined
[06:01] *** squashable6 joined
[06:02] *** coverable6 joined
[06:03] *** committable6 joined
[06:03] *** sourceable6 joined
[06:03] *** notable6 joined
[06:03] *** greppable6 joined
[07:01] *** evalable6 joined
[07:02] *** statisfiable6 joined
[07:03] *** nativecallable6 joined
[07:34] *** seednode99 left
[07:35] *** seednode99 joined
[07:41] *** [Coke] left
[07:41] *** linkable6 joined
[08:01] *** benchable6 joined
[08:02] *** quotable6 joined
[08:02] *** bloatable6 joined
[08:02] *** releasable6 joined
[08:03] *** tellable6 joined
[08:16] *** lichtkind joined
[08:26] *** Sgeo left
[08:41] *** TheAthlete joined
[08:43] *** yosik joined
[08:48] *** TheAthlete left
[08:55] <yosik> Is there any way to redeclare types (like classes or enums) in runtime?
[08:55] <yosik> This is what I am getting now: https://0x0.st/ozWZ.txt
[08:56] *** [Coke] joined
[08:56] <yosik> Such errors make experimenting in REPL harder as I need to constantly restart raku process
[09:03] *** shareable6 joined
[09:04] <holyghost_> yosik, I don't understand what you mean but AFAIK you cannot
[09:05] <holyghost_> In python you can use a. def to redeclare
[09:05] <holyghost_> In perl6 everything is uni
[09:05] <holyghost_> Perl6/raku
[09:13] <yosik> Looks like I do not need to redeclare types each time I want to change them a bit. It is possible to modify existing enums/classes/etc. via MOP. Not the best solution, but works
[09:14] <holyghost_> no idea then
[09:55] <El_Che> when I think about ipv6 I think of  the [] inconsistencies pain, where each side points to a different rfc to include or omit the surrounding [] :)
[10:03] *** linkable6 left
[10:03] *** evalable6 left
[10:06] *** evalable6 joined
[10:13] *** razetime_ left
[10:14] *** razetime joined
[10:51] <Skarsnik> hm, there is no routine to die without having the raku backtrace? I need to say + exit ?
[11:03] *** tejr left
[11:03] *** tejr joined
[11:05] <lizmat> use Die; https://raku.land/zef:raku-community-modules/Die
[11:05] *** linkable6 joined
[11:24] *** RakuIRCLogger joined
[11:36] *** jjido joined
[11:41] *** jjido left
[11:43] <Skarsnik> http://blogs.perl.org/users/sylvain_colinet/2022/01/writing-a-snes-assembler-compilerdisassembler---day-4.html for bored people x)
[11:49] <Skarsnik> I wonder if I should group these post when I am done 
[11:51] *** camelia left
[11:55] *** camelia joined
[12:07] <Skarsnik> Probably a dumb question: How to store ref to objects? using := ? or = does not clone?
[12:08] <lizmat> an object is already a ref, really
[12:08] <lizmat> when you say: my $a = 42
[12:09] <lizmat> you're creating a Scalar object bound to the local lexpad, and bind the Int.new(42) object to the $!value attribute of the Scalar object
[12:09] <lizmat> basically
[12:10] <El_Che> The first thing to unlearn for me was the use of references in perl
[12:10] <Skarsnik> I mean, I have @allthings and I want to build a @thingstofix where the things are not copy in this
[12:14] <Skarsnik> m: my @t = (0..4); my @p; @p[0] = @t[2]; @p[0] = 42; say @t"
[12:14] <camelia> rakudo-moar 3aa23bf9b: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> my @p; @p[0] = @t[2]; @p[0] = 42; say @t‚èè"‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§‚Ä¶¬ª
[12:14] <Skarsnik> m: my @t = (0..4); my @p; @p[0] = @t[2]; @p[0] = 42; say @t
[12:14] <camelia> rakudo-moar 3aa23bf9b: OUTPUT: ¬´[0 1 2 3 4]‚ê§¬ª
[12:15] <Skarsnik> Ok, so I need to := when affecting to @p
[12:18] <lizmat> yes, and you might find this interesting: https://opensource.com/article/18/8/containers-perl-6
[12:20] *** tejr left
[12:21] *** tejr joined
[12:21] *** camelia left
[12:21] *** camelia joined
[12:22] <Skarsnik> Thank, it's starting to became a strain to work with too much language x)
[12:42] <tbrowder> happy new year, rakuuns, i hope to see some of you in houston in june at us raku conference
[12:44] <lizmat> tbrowder o/   hope you'll have a great time there
[12:44] *** camelia left
[12:44] *** camelia joined
[12:49] <discord-raku-bot> <Nemokosch#9980> I don't think I would make it to Houston but glhf in advance üòÑ
[12:49] *** jjido joined
[12:52] <discord-raku-bot> <Nemokosch#9980> anyways, for the "language speedrun" article... I learned the lesson
[12:52] *** razetime left
[12:53] <discord-raku-bot> <Nemokosch#9980> if I ever write an article about Raku, I will call the behavior of "list assignment" a "bug"
[12:53] <discord-raku-bot> <Nemokosch#9980> maybe that would make an impact xD
[12:53] *** razetime joined
[12:55] <lizmat> hehe... :-)
[12:55] <lizmat> in that case, I might actually agree  :-)
[12:57] <discord-raku-bot> <Nemokosch#9980> Probably not the first time that I bring this up but the overall behavior of @variables seems troublesome
[12:57] <discord-raku-bot> <Nemokosch#9980> We have people asking about Int @sth every week
[12:58] <discord-raku-bot> <Nemokosch#9980> there are very serious anti-dwim things with the @ sigil
[13:12] *** nine_ joined
[13:12] *** m_athias left
[13:12] *** camelia left
[13:13] *** nine left
[13:14] *** m_athias joined
[13:15] <Skarsnik> passing @ to a routine is always something... weird
[13:16] <Skarsnik> my wish was for a pragma/whatever that enforce Raku to check for type when you specify then, even in method call x)
[13:19] <moon-child> m: class A { method f(Int $x) {} }; class B is A { method f($x) {} }; my A $x = B.new; $x.f('bubbles')
[13:19] <evalable6> moon-child, rakudo-moar 8275e9160: OUTPUT: ¬´¬ª
[13:19] <moon-child> Skarsnik: ^^ is the problem with something like that
[13:20] <moon-child> (and this is why I suggest using multis over methods)
[13:20] *** camelia joined
[13:20] *** camelia left
[13:20] <Skarsnik> I guess it's a tricky thing
[13:20] *** camelia joined
[13:21] <Skarsnik> related, can you do multi in a child class from a parent class that was not multi now?
[13:21] <moon-child> yes
[13:22] <Skarsnik> I remember having this issue when wanting to add some specific debug option in User::Agent a long time ago x)
[13:23] <Skarsnik> can you do circular deps now, or it's still NYI because too much issue in precomp?
[13:25] <MasterDuke> you just have to forward declare one of the deps
[13:27] <Skarsnik> I had this issue when writing a Discord module (user are in channels, channel contains users) and trying to generate the libxml binding in multiple files (can't fw declare for native stuff)
[13:32] *** razetime left
[13:32] *** jjido left
[13:34] *** razetime joined
[14:36] *** razetime left
[14:42] *** razetime joined
[14:50] *** frost left
[14:52] *** vrurg left
[14:56] *** vrurg joined
[15:15] *** seednode99 left
[15:16] *** dextercd joined
[15:16] *** seednode99 joined
[15:31] *** linkable6 left
[15:31] *** linkable6 joined
[15:36] *** Sgeo joined
[15:49] *** linkable6 left
[15:52] *** linkable6 joined
[15:55] *** jjido joined
[16:00] *** jjido left
[16:16] *** razetime left
[16:30] *** destroycomputers joined
[16:48] *** linkable6 left
[16:49] *** linkable6 joined
[17:05] *** holyghost___ joined
[17:06] *** holyghost_ left
[17:26] <[Coke]> NYI makes it sound like it's on the roadmap. I think it's just not implemented.
[17:33] <moon-child> my primary association with 'NYI', at least in fairly mature projects, is 'this is gonna be a pain to implement and people don't really need it that badly, soo ... we're probably gonna get to it.  Eventually'
[17:34] <[Coke]> it's just literally not yet implemented, which implies the intent *is* to do it.
[17:34] <[Coke]> but yes, that's a reason why it's often "not yet"
[17:43] <[Coke]> Sorry, not trying to coke-splain. Just wanted to underscore that I don't think anyone is planning to make it work. :)
[17:49] * japhb imagines a Pepsi rolling its eyes at Coke-splaining -- "Yes, we all know what cola is, thank you.  Yes, we all know about your original formula ...."
[17:55] <discord-raku-bot> <Nemokosch#9980> Pepsi just doesn't taste like something you'd want to give real money for üòÑ
[17:55] *** destroycomputers left
[18:02] *** seednode99 left
[18:03] *** xinming joined
[18:03] *** seednode99 joined
[18:09] *** holyghost___ left
[18:12] * guifa imagines Coke telling Pepsi to stop embarassing itself and pull up its pants 
[18:13] <guifa> https://branddunk.files.wordpress.com/2008/10/pepsilogo_oldversusnew1.jpg
[18:16] *** epony left
[18:19] *** linkable6 left
[18:20] *** linkable6 joined
[18:20] *** epony joined
[18:58] *** xinming left
[19:02] *** discord-raku-bot left
[19:03] *** discord-raku-bot joined
[19:19] *** tejr left
[19:19] *** tejr joined
[19:34] *** jjido joined
[19:39] *** jjido left
[20:01] *** reportable6 joined
[20:15] *** jjido joined
[21:15] *** evalable6 left
[21:15] *** linkable6 left
[21:15] *** evalable6 joined
[21:16] *** linkable6 joined
[21:24] *** jjido left
[21:53] *** Sgeo_ joined
[21:56] *** Sgeo left
[22:19] *** destroycomputers joined
[23:07] *** linkable6 left
[23:10] *** TempIRCLogger left
[23:10] *** TempIRCLogger joined
[23:13] *** RakuIRCLogger left
[23:13] *** RakuIRCLogger joined
[23:32] *** lichtkind left
