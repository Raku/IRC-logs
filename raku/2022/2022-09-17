[00:02] <Voldenet> There is something I don't get though

[00:02] *** Maylay joined
[00:02] <Voldenet> m: my %a = :4both, :only-a; my %b = :8both, :only-b; say %a >>+>> %b;

[00:02] <camelia> rakudo-moar 2070ceebb: OUTPUT: ¬´{both => 12, only-a => 1}‚ê§¬ª

[00:02] <Voldenet> only-a becomes "1" in this case, but it shouldn't get anything on the other side

[00:03] <Voldenet> m: my %a = :4both, :only-a; my %b = :8both, :only-b; sub hyper-right(%a, %b, &op) { %a.map({ .key => .key (elem) %b.keys ?? op(.value, %b{.key}) !! .value }).Hash; }; say hyper-right(%a, %b, * + *)

[00:03] <camelia> rakudo-moar 2070ceebb: OUTPUT: ¬´{both => 12, only-a => True}‚ê§¬ª

[00:04] <Voldenet> I'd expect something like this

[00:07] <Voldenet> but what I got is this:

[00:07] <Voldenet> m: my %a = :4both, :only-a; my %b = :8both, :only-b; sub hyper-right(%a, %b, &op) { %a.map({ .key => op(.value, %b{.key}) }).Hash; }; say hyper-right(%a, %b, * + *);

[00:07] <camelia> rakudo-moar 2070ceebb: OUTPUT: ¬´Use of uninitialized value of type Any in numeric context‚ê§{both => 12, only-a => 1}‚ê§  in block  at <tmp> line 1‚ê§¬ª

[00:07] *** reportable6 left
[00:07] *** Maylay left
[00:08] *** reportable6 joined
[00:11] *** Maylay joined
[00:17] *** Heptite left
[00:17] <discord-raku-bot> <Nemokosch> yes, it kinda seems that it's a silenced addition

[00:19] <discord-raku-bot> <Nemokosch> I tried to point this one out - the operator call happens even for the elements that aren't present on both sides

[00:19] <discord-raku-bot> <Nemokosch> Tbh I'm not unhappy with this behavior, the docs kinda contradict though

[00:21] <Voldenet> it's worrying to me that it seems like it's using `quietly` somewhere

[00:21] <Voldenet> m: my %a = :4both, :only-a; my %b = :8both, :only-b; say %a >>|>> %b;

[00:21] <camelia> rakudo-moar 2070ceebb: OUTPUT: ¬´{both => any(4, 8), only-a => any(True, (Any))}‚ê§¬ª

[00:21] <Voldenet> not all operators and methods will expect this

[00:32] <Voldenet> m: my %a is default("a") = :4both, :only-a; my %b is default("b") = :8both, :only-b; say %a >>|>> %b

[00:32] <camelia> rakudo-moar 2070ceebb: OUTPUT: ¬´{both => any(4, 8), only-a => any(True, b)}‚ê§¬ª

[00:33] <Voldenet> No idea if that should that behave like union

[00:38] <Voldenet> though I'm pretty sure that most things and methods won't work properly without both parameters

[01:03] *** nebuchadnezzar left
[01:41] *** razetime joined
[01:48] *** epony joined
[02:14] *** Guest9 joined
[02:14] *** Guest9 left
[02:34] *** bigdata left
[02:38] *** razetime left
[02:39] *** razetime joined
[03:39] *** statisfiable6 left
[03:39] *** reportable6 left
[03:39] *** greppable6 left
[03:39] *** benchable6 left
[03:39] *** notable6 left
[03:39] *** evalable6 left
[03:39] *** squashable6 left
[03:39] *** unicodable6 left
[03:39] *** nativecallable6 left
[03:39] *** bisectable6 left
[03:39] *** coverable6 left
[03:39] *** releasable6 left
[03:39] *** bloatable6 left
[03:39] *** sourceable6 left
[03:39] *** tellable6 left
[03:39] *** shareable6 left
[03:39] *** committable6 left
[03:39] *** quotable6 left
[03:39] *** linkable6 left
[03:39] *** quotable6 joined
[03:39] *** releasable6 joined
[03:40] *** evalable6 joined
[03:40] *** shareable6 joined
[03:40] *** committable6 joined
[03:40] *** notable6 joined
[03:40] *** greppable6 joined
[03:40] *** coverable6 joined
[03:40] *** linkable6 joined
[03:41] *** unicodable6 joined
[03:41] *** tellable6 joined
[03:41] *** reportable6 joined
[03:41] *** bisectable6 joined
[03:41] *** sourceable6 joined
[03:42] *** squashable6 joined
[03:42] *** benchable6 joined
[03:42] *** nativecallable6 joined
[03:42] *** bloatable6 joined
[03:42] *** statisfiable6 joined
[04:38] *** bigdata joined
[04:54] <Geth> ¬¶ rakudoc: mujo-hash++ created pull request #15: Remove failing test

[04:54] <Geth> ¬¶ rakudoc: review: https://github.com/Raku/rakudoc/pull/15

[05:38] *** evalable6 left
[05:38] *** linkable6 left
[05:39] *** evalable6 joined
[05:41] *** linkable6 joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[07:08] *** statisfiable6 left
[07:08] *** bloatable6 left
[07:08] *** committable6 left
[07:08] *** coverable6 left
[07:08] *** evalable6 left
[07:08] *** benchable6 left
[07:08] *** squashable6 left
[07:08] *** quotable6 left
[07:08] *** sourceable6 left
[07:08] *** greppable6 left
[07:08] *** notable6 left
[07:08] *** reportable6 left
[07:08] *** bisectable6 left
[07:08] *** nativecallable6 left
[07:08] *** releasable6 left
[07:08] *** unicodable6 left
[07:08] *** linkable6 left
[07:08] *** shareable6 left
[07:08] *** linkable6 joined
[07:09] *** nativecallable6 joined
[07:09] *** notable6 joined
[07:09] *** unicodable6 joined
[07:09] *** releasable6 joined
[07:09] *** shareable6 joined
[07:09] *** committable6 joined
[07:09] *** sourceable6 joined
[07:09] *** quotable6 joined
[07:09] *** squashable6 joined
[07:10] *** bisectable6 joined
[07:10] *** statisfiable6 joined
[07:10] *** coverable6 joined
[07:10] *** reportable6 joined
[07:11] *** greppable6 joined
[07:11] *** benchable6 joined
[07:11] *** bloatable6 joined
[07:11] *** evalable6 joined
[07:46] *** xinming left
[08:35] *** MoC joined
[08:37] *** Sgeo left
[08:51] *** jjido joined
[08:59] *** frost joined
[09:01] *** sena_kun joined
[09:02] *** frost left
[09:05] *** frost joined
[09:10] *** Colere left
[09:11] *** Colere joined
[09:13] *** xinming joined
[09:13] *** Furor joined
[09:16] *** Colere left
[10:16] *** coverable6 left
[10:16] *** greppable6 left
[10:16] *** sourceable6 left
[10:16] *** linkable6 left
[10:16] *** nativecallable6 left
[10:16] *** squashable6 left
[10:16] *** quotable6 left
[10:16] *** unicodable6 left
[10:16] *** notable6 left
[10:16] *** shareable6 left
[10:16] *** committable6 left
[10:16] *** evalable6 left
[10:16] *** statisfiable6 left
[10:16] *** bisectable6 left
[10:16] *** bloatable6 left
[10:16] *** benchable6 left
[10:16] *** tellable6 left
[10:16] *** releasable6 left
[10:16] *** reportable6 left
[10:17] *** greppable6 joined
[10:17] *** bisectable6 joined
[10:17] *** bloatable6 joined
[10:17] *** unicodable6 joined
[10:17] *** nativecallable6 joined
[10:17] *** sourceable6 joined
[10:18] *** benchable6 joined
[10:18] *** quotable6 joined
[10:18] *** releasable6 joined
[10:18] *** tellable6 joined
[10:18] *** squashable6 joined
[10:19] *** coverable6 joined
[10:19] *** reportable6 joined
[10:19] *** committable6 joined
[10:19] *** shareable6 joined
[10:19] <discord-raku-bot> <p6steve> using Build.pm I got <<Died with the exception: Failed to spawn process Proc<6021553250912>: no such file or directory (error code -2)>>

[10:19] *** evalable6 joined
[10:19] *** statisfiable6 joined
[10:19] *** linkable6 joined
[10:19] *** notable6 joined
[10:21] <discord-raku-bot> <p6steve> the code is <<my $proc = Proc::Async.new: run <cargo build>;$proc.bind-stdout($*ERR);my $promise = $proc.start;await $promise;>>

[10:21] <discord-raku-bot> <p6steve> wondering what the "file or dir" refers to ...? or any other hint for what is going on (maybe permissions?) please

[10:23] <lizmat> p6steve: you're creating a Proc::Async object with the Promise returned by "run" ?

[10:23] <tellable6> lizmat, I'll pass your message to p6steve

[10:27] <discord-raku-bot> <p6steve> lizmat: sorry that's over my head a bit

[10:28] <lizmat> my $proc = Proc::Async.new: run <cargo build>

[10:28] <tellable6> 2022-09-15T22:14:19Z #raku <melezhik> lizmat and finally this one - https://ci.sparrowhub.io

[10:29] <lizmat> p6steve: that feels wrong:  Proc::Async.new: run

[10:29] <tellable6> lizmat, I'll pass your message to p6steve

[10:29] <lizmat> actually run returns a Proc object, not a Promise, my bad

[10:30] <Voldenet> consider this: my $proc = Proc::Async.new: <cargo build>;$proc.bind-stdout($*ERR);my $promise = $proc.start;await $promise;

[10:30] <lizmat> Voldenet: that feels more natural :-)

[10:31] <Voldenet> `Proc<6021553250912>` is what result of run gets converted to‚Ä¶

[10:31] <discord-raku-bot> <p6steve> well I want to go <<cargo build>> on the command line in the async process so that I can bind the STD-ERR

[10:31] <discord-raku-bot> <p6steve> voldenet: yes that makes sense - I will try it - thanks!

[10:38] *** razetime left
[10:44] <discord-raku-bot> <p6steve> voldenet: I tried your version and got a linking error ('cargo build' is making an so,

[10:44] <discord-raku-bot> <p6steve> looked like that was going ok)

[10:44] <discord-raku-bot> <p6steve> if I understand your advice is just to drop the 'run' and go with 'my $proc = Proc::Async.new: <cargo build>;' (otherwise same as my original code)?

[10:44] <Voldenet> the task failed successfully üëå

[10:45] <Voldenet> yes, just drop that run, the result will get coerced into string and stop making sense

[10:46] <discord-raku-bot> <p6steve> ha! a different failure is always progress!

[10:46] <discord-raku-bot> <p6steve> oh look, I found this in the string error msg 'note: /usr/bin/ld: final link failed: No space left on device'

[10:47] <Voldenet> no wonder, the name of the command says `cargo` after all ;)

[10:48] <discord-raku-bot> <p6steve> ok will have to take a break ... but this looks promising

[10:48] <discord-raku-bot> <p6steve> thanks!

[11:21] *** Furor is now known as Colere

[12:05] <[Coke]> how to say "optional dependency" in META6.json?

[12:05] <tellable6> 2022-09-16T22:45:33Z #raku <tbrowder> [Coke] ^^^

[12:07] *** reportable6 left
[12:07] *** reportable6 joined
[12:35] <lizmat> [Coke]: afaik, you can't

[12:35] <lizmat> ugexe ^^

[12:38] <[Coke]> ok. Makes some sense, as optional dependency is kind of an oxymoron. Just documented it instead.

[12:39] <[Coke]> Alzo, moved zef-deps to its own repo and just uploaded a pre-1.0 version with fez.

[12:49] *** bigdata left
[13:04] <[Coke]> notable6: https://github.com/coke/raku-zef-deps , maybe?

[13:04] <notable6> [Coke], I cannot recognize this command. See wiki for some examples: https://github.com/Raku/whateverable/wiki/Notable

[13:05] <[Coke]> notable6: weekly https://github.com/coke/raku-zef-deps , maybe?

[13:05] <notable6> [Coke], Noted! (weekly)

[13:34] *** jjido left
[13:36] <lizmat> [Coke]: just weekly: is enough

[14:15] *** lichtkind joined
[14:23] <ugexe> you can

[14:23] <ugexe> {"any": ["Bar", ""]}

[14:24] <ugexe> for an optional Bar dependency

[14:35] *** razetime joined
[14:48] *** sena_kun left
[14:49] *** sena_kun joined
[14:55] *** jjido joined
[15:10] <ugexe> it would still attempt to install Bar though, so it might not be optional in the sense you want

[15:12] <ugexe> but you could have something like `perl:ver<...>:from<bin>` or some such that doesn't fail when it cant find a perl binary but wants to declare it

[15:12] *** dogbert17 joined
[15:13] *** Heptite joined
[15:15] *** razetime left
[15:18] *** razetime joined
[15:31] *** jjido left
[15:33] *** razetime left
[15:33] *** razetime_ joined
[15:40] *** razetime_ left
[15:40] *** razetime joined
[15:56] *** abraxxa-home joined
[15:59] *** razetime left
[15:59] *** sena_kun left
[16:02] *** razetime joined
[16:05] <jaguart> maybe an optional-dependency is like a recommends...

[16:19] *** [Coke]_ joined
[16:20] *** [Coke] left
[16:27] *** jjido joined
[16:32] <jaguart> Do folks here keep POD and README.md in sync? Do you use a tool?

[16:39] <lizmat> I use App::Mi6, which generates a README from the pod of a distribution

[16:40] <jaguart> Ah ha - thanks - here I am starting to use mi6 and updating the README.md by hand :0

[16:41] <discord-raku-bot> <Nemokosch> How does mi6 work? I honestly couldn't really figure it out what it does and how

[16:41] <discord-raku-bot> <Nemokosch> only noticed that it reformats META6.json some way which is annoying

[16:45] <jaguart> lol - but then so does the META6 class - though I know that work is afoot to make this JSON prettier :)

[16:52] <discord-raku-bot> <Nemokosch> I don't know what the META6 class is

[16:56] <jdv> iirc its kinda like distzilla from the perl world

[16:56] <tellable6> 2022-08-30T19:09:02Z #raku <melezhik> jdv ¬†looks like you need to upgrade glibc to make blin work , you can borrow my code - https://github.com/melezhik/sparrow-plugins/blob/master/sparkyci-package-rakudo/task.bash

[16:57] <jdv> .tell melezhik i tried a few ways and no joy

[16:57] <tellable6> jdv, I'll pass your message to melezhik

[16:59] *** Sgeo joined
[17:07] *** razetime left
[17:21] <discord-raku-bot> <Nemokosch> https://www.youtube.com/watch?v=b8bLIhN04eY I'm watching this video, maybe it helps things clear up

[17:26] *** Heptite left
[17:28] <ugexe> https://github.com/rakudo/rakudo/issues/4907 probably should block any release anyway

[17:29] <ugexe> well, i guess we have a release with that issue anyway so i guess it doesnt technically have to block

[17:29] <ugexe> but still, a pretty big regression since e.g. debian packagers can no longer package new distros

[17:29] <ugexe> s/distros/distributions/

[17:30] <lizmat> somehow that one escaped my attention: I'll have a stab at fixing that tomorrow, unless someone beats me to it

[17:34] *** frost left
[17:35] <ugexe> doh i was wrong, you cant use an empty string dependency with `any`

[17:37] <ugexe> "depends"       : [ "NativeCall:ver<6.c+>", {"name" : { "by-distro.name" : { "" : "" } } } ]

[17:37] <ugexe> it would have to be like that

[17:38] <ugexe> "by-distro.name" -> $*DISTRO.name, which doesn't match any of the entries inside the block (in this case ""), which chooses an empty string dependency

[17:38] <ugexe> "depends"       : [ "NativeCall:ver<6.c+>", {"name" : { "by-distro.name" : { "" : "Foo" } } } ] -- this would always install Foo for example

[17:39] <ugexe> because $*DISTRO.name will never == ""

[17:39] <ugexe> and you can use an empty sring for a dependency here because it might make sense to only install some dependency on Windows but not linux

[17:40] <ugexe> all that being said, its not intended/designed to be used for optional depends. it just happens to be able to work as such

[17:46] <ugexe> er, so to make an optional dependency that is never downloaded but shows up in depends

[17:46] <ugexe> {"name" : { "by-distro.name" : { "xxx" : "Optional::Dependency" } } }

[17:48] <ugexe> {"name" : { "by-distro.name" : { "xxx" : "Optional::Dependency", "":"" } } }

[17:48] <discord-raku-bot> <Nemokosch> Thankfully mi6 itself seems to be maintained by mi6

[17:48] *** epony left
[17:48] <discord-raku-bot> <Nemokosch> that's instantly one up-to-date example üòÑ

[17:52] *** MoC left
[17:54] <Kaiepi> notable6, https://gist.github.com/Kaiepi/3859a7a8032899ca5a98db9dd8300929

[17:54] <notable6> Kaiepi, I cannot recognize this command. See wiki for some examples: https://github.com/Raku/whateverable/wiki/Notable

[17:54] <Kaiepi> notable6: weekly https://gist.github.com/Kaiepi/3859a7a8032899ca5a98db9dd8300929

[17:54] <notable6> Kaiepi, Noted! (weekly)

[18:06] *** reportable6 left
[18:07] *** bigdata joined
[18:08] *** reportable6 joined
[18:44] *** epony joined
[19:19] *** ad-absurdum joined
[19:26] <ad-absurdum> I just updated to moar-2022.07, built zef, and installed Linenoise using rakubrew. I got a testing failure which didn't make a lot of sense to me. These seem to be the relevant lines:

[19:27] <ad-absurdum> ===> Testing: Win32::Registry:ver<0.0.6>:auth<zef:sdondley>

[19:27] <ad-absurdum> [Win32::Registry] ===SORRY!=== Error while compiling /tmp/.zef/6d41b9c45ec18ae014e60587ea89c529f356c8f5.tar.gz/Win32-Registry-0.0.6/t/xt/Author-Tests.rakutest

[19:27] <ad-absurdum> ===> Testing [FAIL]: Win32::Registry:ver<0.0.6>:auth<zef:sdondley>

[19:27] <ad-absurdum> Aborting due to test failure: Win32::Registry:ver<0.0.6>:auth<zef:sdondley> (use --force-test to override)

[19:28] <ad-absurdum> I did $ zef install Linenoise --force-test, and this seemed to work. I am on Linux, and I don't know why Testing::Win32 would be needed, but am I missing something here?

[19:31] <ad-absurdum> Oops, I meant, I don't know why Win32::Registry would be needed on my Linux system ;)

[19:31] *** sena_kun joined
[19:32] <ugexe> because the author of that distribution listed it as a dependency

[19:35] <ad-absurdum> ugexe -- right, but is it needed for a Linux build? Is my build broken now? Is the installation process broken for Linenoise on Linux?

[19:36] <ugexe> if the code does `use Win32::Registry` then yes its still needed, if not then no

[19:41] <ugexe> i dont see Win32::Registry listed as a dependency of Linenoise

[19:45] <ad-absurdum> ugexe -- when I ran zef install Linenoise it searched for dependencies and appeared to find them all before testing commenced. The final dependency was Win32::Registry:

[19:45] <ad-absurdum> ===> Searching for missing dependencies: Win32::Registry

[19:45] <ad-absurdum> ===> Building [OK] for Linenoise:ver<0.1.2>:auth<zef:raku-community-modules>

[19:45] <ad-absurdum> ===> Testing: Win32::Registry:ver<0.0.6>:auth<zef:sdondley>

[19:45] <ad-absurdum> [Win32::Registry] ===SORRY!=== Error while compiling /tmp/.zef/6d41b9c45ec18ae014e60587ea89

[19:52] *** jjido left
[19:52] <ugexe> thats weird

[19:52] <ugexe> can you post the full output with `--debug`

[19:57] <ugexe> ah the repo https://github.com/raku-community-modules/Linenoise/blob/main/META6.json isnt the same one on fez

[19:57] <ad-absurdum> ugexe -- I can; I was thinking about opening a Github issue at raku-community-modules/Linenoise, or would it be better to open at ugexe/zef? Or would it be better just to post a link to output here?

[19:57] <ugexe> zef depends Linenoise --debug indeed shows it as a depends

[19:57] <ugexe> it would be a linenoise issue, but i dont know where the repo is

[20:00] <ad-absurdum> ugexe -- you think that the issue originates at antirez/linenoise?

[20:00] <ugexe> i see

[20:01] <ugexe> it depends on LibraryMake, which depends on Shell::Command, which depends on File::Which, which depends on Win32::Registry

[20:02] <ugexe> so you should open an issue on File::Which and tell them to declare a windows-only dependency like https://github.com/ugexe/zef/blob/main/t/distribution-depends-parsing.rakutest#L19-L29

[20:04] <ugexe> `"depends" : [ {"name" : { "by-distro.name" : { "win32" : "Win32::Registry", "" : "" } } } ]` should probably look like that

[20:13] <ad-absurdum> ugexe -- My Raku is remedial at best; to me it is an interesting language that I check in on from time to time. There was a merged pull request a couple of days ago that looks like it may be the culprit: https://github.com/azawawi/perl6-file-which/commit/7678660b518f5a0598f8bd83c0d0f1f3d6fb6ae7

[20:14] <ad-absurdum> I'm not confident enough to try to create a new pull request on this, but if this looks like the issue I'll raise an issue there.

[20:20] <ugexe> id make an issue on File::Which suggesting that Win32::Registry not be installed on non-windows systems, and then paste my example above

[20:31] <ad-absurdum> ugexe -- It looks like someone opened an issue yesterday about this, but there wasn't much detail. I added a comment to that issue rather than raising a new one: https://github.com/azawawi/perl6-file-which/issues/21

[20:31] <ad-absurdum> Thanks for all of the help tracking this down ;)

[20:50] <ad-absurdum> ugexe -- Let me just add that one of the things that I have always liked about Raku is the community which has been built around it; keep fighting the good fight

[20:52] *** linkable6 left
[20:52] *** evalable6 left
[20:53] *** evalable6 joined
[20:53] *** linkable6 joined
[21:22] <ugexe> https://github.com/azawawi/perl6-file-which/pull/22 should fix it

[21:34] *** ad-absurdum left
[21:40] *** sena_kun left
[21:44] *** abraxxa-home left
[22:01] *** habere-et-disper joined
[22:04] <habere-et-disper> The documentation say we can make multi-line comments using "Only the paired characters (), {}, [], and <> are valid for bounding comment blocks."

[22:04] <habere-et-disper> It appears we can use ÔΩ¢ÔΩ£ as well?

[22:04] <habere-et-disper> m: #`ÔΩ¢ Comment ÔΩ£

[22:04] <camelia> rakudo-moar 2070ceebb: ( no output )

[22:06] *** guifa left
[22:07] *** guifa joined
[22:12] *** habere-et-disper left
[22:23] *** TieUpYourCamel left
[22:27] *** Heptite joined
[22:34] *** TieUpYourCamel joined
[22:37] *** lichtkind left
[23:11] *** [Coke] joined
[23:13] <[Coke]> ugexe: thanks for the optional path - I think it makes sense to leave it off for now and make it obvious to the user they have to install it if they want the functionality it would provide.

[23:13] <[Coke]> ugexe: also, thanks for the Zef::Client suggestion, incorporated in 0.9.1 of zef-deps

[23:13] *** [Coke]_ left
[23:13] *** lichtkind joined
[23:21] *** human_blip left
[23:22] *** human_blip joined
[23:30] *** lichtkind left
[23:37] *** bigdata left
