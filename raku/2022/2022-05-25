[00:07] *** reportable6 left
[00:08] *** reportable6 joined
[00:31] *** Lemniscate joined
[00:34] *** Sauvin left
[00:48] *** bigdata left
[01:01] *** guifa joined
[01:14] *** leah2 joined
[01:16] *** perlbot left
[01:17] *** simcop2387 left
[01:25] *** simcop2387 joined
[01:27] *** perlbot joined
[02:24] *** frost joined
[03:03] *** guifa left
[03:03] *** guifa joined
[03:07] *** guifa left
[03:29] *** Guest35 left
[04:22] *** frost left
[05:22] *** evalable6 left
[05:22] *** greppable6 left
[05:22] *** bisectable6 left
[05:22] *** notable6 left
[05:22] *** shareable6 left
[05:22] *** statisfiable6 left
[05:22] *** tellable6 left
[05:22] *** benchable6 left
[05:22] *** reportable6 left
[05:22] *** releasable6 left
[05:22] *** linkable6 left
[05:22] *** committable6 left
[05:22] *** bloatable6 left
[05:22] *** unicodable6 left
[05:22] *** quotable6 left
[05:22] *** coverable6 left
[05:22] *** sourceable6 left
[05:22] *** nativecallable6 left
[05:22] *** greppable6 joined
[05:22] *** nativecallable6 joined
[05:23] *** notable6 joined
[05:23] *** shareable6 joined
[05:23] *** statisfiable6 joined
[05:23] *** sourceable6 joined
[05:23] *** bisectable6 joined
[05:24] *** coverable6 joined
[05:24] *** quotable6 joined
[05:24] *** committable6 joined
[05:24] *** evalable6 joined
[05:24] *** tellable6 joined
[05:24] *** bloatable6 joined
[05:24] *** benchable6 joined
[05:24] *** linkable6 joined
[05:24] *** releasable6 joined
[05:25] *** reportable6 joined
[05:25] *** unicodable6 joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:26] *** kueppo joined
[06:32] *** kueppo left
[06:38] *** Sgeo left
[06:39] <moritz> `sort` is a listop (a funciton name that wants an argument list aftewards, so expects a term, and interprets the < in the <== as a quote opener
[06:39] <moritz> if you write sort() instead, all should be well
[06:47] *** clarjon_1 joined
[06:49] *** ProperN[out] joined
[06:51] *** Manifest joined
[06:51] *** sivoais_ joined
[06:52] *** sjn_ joined
[06:52] *** xkr47_ joined
[06:56] *** Manifest0 left
[06:56] *** clarjon1 left
[06:56] *** sevvie left
[06:56] *** Tirifto left
[06:56] *** TempIRCLogger left
[06:56] *** sjn left
[06:56] *** ProperNoun left
[06:56] *** sivoais left
[06:56] *** donpdonp|z_ left
[06:56] *** xkr47 left
[06:56] *** jjatria left
[06:56] *** xkr47_ is now known as xkr47
[07:01] *** Tirifto joined
[07:01] *** donpdonp- joined
[07:01] *** sevvie joined
[07:01] *** TempIRCLogger joined
[07:03] *** jjatria joined
[07:06] *** dakkar joined
[07:07] *** Tirifto left
[07:07] *** Tirifto joined
[07:11] *** jjido joined
[07:16] *** japhb left
[07:18] *** japhb joined
[07:21] *** frost joined
[07:26] *** frost left
[07:29] <xinming> DBDish::Pg: Error: could not access file "$libdir/plpgsql": No such file or directory         <--- How could I troubleshooting this issue please?
[07:30] <xinming> seems 2022.04 version of rakudo made a lot of changes to the build system, which caused some regressions
[07:31] *** frost joined
[07:37] *** Manifest left
[07:38] <El_Che> xinming: is the lib installed?
[07:41] *** jjido left
[07:44] <xinming> El_Che: Definitely
[07:48] *** frost95 joined
[07:49] *** frost95 left
[07:52] *** frost left
[07:54] *** frost joined
[07:55] <Geth> ¬¶ ecosystem: 43f91535e0 | (Elizabeth Mattijsen)++ | META.list
[07:55] <Geth> ¬¶ ecosystem: Remove because moved to zef ecosystem
[07:55] <Geth> ¬¶ ecosystem: 
[07:55] <Geth> ¬¶ ecosystem: Date::WorkdayCalendar, Pod::TreeWalker, Test::Builder
[07:55] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/43f91535e0
[08:00] <Geth> ¬¶ ecosystem: 368119f5fe | (Elizabeth Mattijsen)++ | META.list
[08:00] <Geth> ¬¶ ecosystem: Freeze IO::CatHandle::AutoLines
[08:00] <Geth> ¬¶ ecosystem: 
[08:00] <Geth> ¬¶ ecosystem: While it's being moved to the zef ecosystem
[08:00] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/368119f5fe
[08:15] <discord-raku-bot> <Nemokosch#9980> moritz: oh right. frankly I should have remembered
[08:16] <discord-raku-bot> <Nemokosch#9980> although I would consider this warning-worthy
[08:20] <discord-raku-bot> <Nemokosch#9980> https://gist.github.com/2colours/0720e806de9107437a5ab8b53fdaa2b7
[08:20] <discord-raku-bot> <Nemokosch#9980> another example that is beyond my comprehension
[08:21] <discord-raku-bot> <Nemokosch#9980> that `proto` seems to just state the obvious
[08:21] <discord-raku-bot> <Nemokosch#9980> but somehow it enforces that some weird call doesn't happen
[08:21] <discord-raku-bot> <Nemokosch#9980> why does the weird call try to happen?
[08:23] <discord-raku-bot> <gfldex#8222> <@297037173541175296> you need proto to redefine a multi instead of adding another multi candidate.
[08:24] <discord-raku-bot> <Nemokosch#9980> umm... I don't see how this explains anything
[08:24] <discord-raku-bot> <Nemokosch#9980> honestly, I couldn't decide if you rephrased something that I already knew or this was meant to be an explanation
[08:26] <discord-raku-bot> <Nemokosch#9980> "redefine a multi", what does it mean? I want one multi and usually don't need a proto if the arguments are well-defined
[08:27] <discord-raku-bot> <Nemokosch#9980> and what I understand the least is this supposed `next-hexa-word(aa, ab)` call. Why does this happen?
[08:28] <lizmat> that's why I think the automatic "proto" creation is a bit of a two-edged sword
[08:28] <lizmat> but a proto is like the gateway to the multis **under it**
[08:29] <discord-raku-bot> <Nemokosch#9980> And additionally: how does the proto keep it from happening once it wants to happen for some reason?
[08:29] <lizmat> m: multi a() {}; dd &a
[08:29] <camelia> rakudo-moar 19c3bd180: OUTPUT: ¬´Sub a = proto sub a (;; Mu |) {*}‚ê§¬ª
[08:30] <lizmat> so you could consider a proto as an "only" sub that handles the re-dispatching to the multi candidates
[08:31] <discord-raku-bot> <Nemokosch#9980> Yes, I understand this... I think
[08:31] <discord-raku-bot> <Nemokosch#9980> what I really don't understand is why that weird call is made without the proto
[08:31] <lizmat> m: class A { proto method Bool(|) { "foo" } }; dd A.Bool'
[08:31] <camelia> rakudo-moar 19c3bd180: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> to method Bool(|) { "foo" } }; dd A.Bool‚èè'‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§‚Ä¶¬ª
[08:31] <lizmat> m: class A { proto method Bool(|) { "foo" } }; dd A.Bool
[08:31] <camelia> rakudo-moar 19c3bd180: OUTPUT: ¬´"foo"‚ê§¬ª
[08:31] <discord-raku-bot> <Nemokosch#9980> I can't see where &next-hexa-word could eat up two arguments and why
[08:32] * lizmat starts looking at actual code
[08:33] <lizmat> the gist seems to be missing a definition of @hexa-letters ?
[08:35] <discord-raku-bot> <Nemokosch#9980> fair enough
[08:35] <discord-raku-bot> <Nemokosch#9980> edited
[08:35] <discord-raku-bot> <Nemokosch#9980> that seems to be alright for what I intended it to be
[08:44] <lizmat> aaah  I think I understand what's going on
[08:45] <lizmat> it's part of the magic that ... does
[08:45] <lizmat> when ... encounters a Callable, it introspects its signature and depending on that, decides to do something
[08:46] <lizmat> the signature of the implicit proto is (|) and your proto is ($)
[08:47] <lizmat> I would have to dig into the core guts of ... to find out what exactly, but it's been a while since I did that, and I got pretty burned out on trying to make it more predictable
[08:48] <lizmat> I can only assume that ... decided to call the Callable with 2 params if the signature is |
[08:50] <discord-raku-bot> <Nemokosch#9980> That sounds plausible üòÖ
[08:50] <gfldex> m: proto sub infix:<+>(\a, \b) {}; # clean slate, not another multi candidate
[08:50] <camelia> rakudo-moar 19c3bd180: ( no output )
[08:51] <discord-raku-bot> <Nemokosch#9980> Perhaps the nicest fix is indeed to add the proto
[08:51] <discord-raku-bot> <Nemokosch#9980> But I suppose *.&next-hexa-word instead of &next-hexa-word could also work
[08:52] <lizmat> yup, that would also work
[08:52] <nine> Yes, it's about arity. the proto with ($) has arity of 1, so the sequence generator treats it like such. The auto generated proto with a signature of (|) has an arity of Inf, so the sequence generator treats it as something that will use the previous and the current item.
[08:52] <lizmat> because that creates a new Callable
[08:53] <discord-raku-bot> <Nemokosch#9980> Yes, that would also work
[08:53] <discord-raku-bot> <Nemokosch#9980> I mean... it does work, tried it now üòÑ
[08:53] <discord-raku-bot> <Nemokosch#9980> But now that I understand why the proto helps on it, I think that's overall the better idea
[08:54] <discord-raku-bot> <Nemokosch#9980> and I can add a type annotation too
[08:54] *** evalable6 left
[08:54] *** linkable6 left
[08:54] <lizmat> yup, and that's why I think auto-proto generation is a double-edged sword
[08:55] <lizmat> easy for the very beginner, but a bit of a WAT for the people getting more into the use of multis
[08:55] *** linkable6 joined
[08:56] *** evalable6 joined
[08:57] <discord-raku-bot> <Nemokosch#9980> Lesson to learn: multis don't expose a signature by themselves
[08:58] <lizmat> well, not the one you'd expect, I guess  :-)
[08:59] <lizmat> m: multi a($,$,$) { }; dd &a.signature
[08:59] <camelia> rakudo-moar 19c3bd180: OUTPUT: ¬´:(;; Mu |)‚ê§¬ª
[09:00] <Kaiepi> m: multi a($,$,$) { }; dd &a.dispatchees[0].signature
[09:00] <camelia> rakudo-moar 19c3bd180: OUTPUT: ¬´:($, $, $)‚ê§¬ª
[09:01] *** xinming left
[09:02] *** xinming joined
[09:10] <discord-raku-bot> <Nemokosch#9980> Unrelated question
[09:12] <discord-raku-bot> <Nemokosch#9980> If I remember correctly, Rakudo, albeit the de-facto dedicated Raku compiler, isn't privileged among possible Raku implementations
[09:15] <discord-raku-bot> <Nemokosch#9980> How much do you think this introspection data (like dispatchees here but those WHAT, WHERE kind of fields too) is bound to Rakudo or the MoarVM backend in particular?
[09:16] <discord-raku-bot> <Nemokosch#9980> This is more of a theoretical question at this point, I'm curious if it would be realistic to create a different implementation of a Raku-compliant compiler and/or runtime
[09:19] *** Guest2710 joined
[09:22] <Guest2710> Hello, I have a comment about the weekly news. I see that it keeps supporting Ukraine nationalism and I understand that there are very importatant and loved contributors of Raku that are emotionally involved in that cause. I am here just to suggest that these people need help and support, and I am do not think that enabling these kind of
[09:22] <Guest2710> self-destructive political views will help them in the long run. I'll leave
[09:22] *** Guest2710 left
[09:25] <lizmat> Goodbye
[09:34] <MasterDuke> Nemokosch: ISTR you were asking about the alternate backends a little while ago. as recently as a year or so ago, the jvm backend can still be faster for some kinds of long-running programs. and the experimental truffle branch of nqp was even faster than that (for a smaller subset of programs, but still, it shows promise)
[09:34] <tellable6> MasterDuke, I'll pass your message to Nemokosch
[09:35] <discord-raku-bot> <Nemokosch#9980> I think I have asked about alternative backends multiple times
[09:37] <discord-raku-bot> <Nemokosch#9980> But I think this current question goes a little beyond that
[09:37] <discord-raku-bot> <Nemokosch#9980> I could rephrase it as "how much of the code <<we>> (as the broader community) are working with is in fact <<Rakudo code>> rather than <<Raku code>>"
[09:37] <discord-raku-bot> <Nemokosch#9980> And whether this distinction makes sense
[09:44] <nine> When it comes down to it, whatever's tested in roast is part of Raku. The rest may become a part of Raku, or may stay an implementation detail.
[09:50] *** frost left
[09:58] *** Kaiepi left
[10:07] *** Altai-man joined
[10:18] *** frost joined
[10:24] *** razetime joined
[10:26] *** kueppo joined
[10:38] *** Tirifto left
[10:40] *** kueppo left
[10:42] *** Tirifto joined
[10:43] *** Kaiepi joined
[10:45] *** kueppo joined
[10:51] <Geth> ¬¶ ecosystem: 98ea4d2ec3 | (Elizabeth Mattijsen)++ | META.list
[10:51] <Geth> ¬¶ ecosystem: Freeze LN
[10:51] <Geth> ¬¶ ecosystem: 
[10:51] <Geth> ¬¶ ecosystem: While it's being moved to the zef ecosystem
[10:51] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/98ea4d2ec3
[10:56] *** kueppo left
[10:59] <xinming> releasable6: status
[10:59] <releasable6> xinming, Next release in ‚âà2 days and ‚âà8 hours. 1 blocker. Changelog for this release was not started yet
[10:59] <releasable6> xinming, Details: https://gist.github.com/71fc5d9965d58ff52ec8ed541034faf3
[11:23] *** razetime left
[11:26] *** razetime joined
[11:52] <Geth> ¬¶ ecosystem: d82903fcd8 | (Elizabeth Mattijsen)++ | META.list
[11:52] <Geth> ¬¶ ecosystem: Remove p6lert / WWW::p6lert
[11:52] <Geth> ¬¶ ecosystem: 
[11:52] <Geth> ¬¶ ecosystem: The underlying repos are in archive state, so no development will
[11:52] <Geth> ¬¶ ecosystem: be done there.  Also, these modules are really obsolete Raku
[11:52] <Geth> ¬¶ ecosystem: infrastructure, which may get rebuilt some day but probably under
[11:52] <Geth> ¬¶ ecosystem: a different name.
[11:52] <Geth> ¬¶ ecosystem: 
[11:52] <Geth> ¬¶ ecosystem: The existsing versions will continue to be available from the REA.
[11:52] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/d82903fcd8
[11:56] <Geth> ¬¶ ecosystem: 5bfd8bf1c7 | (Elizabeth Mattijsen)++ | META.list
[11:56] <Geth> ¬¶ ecosystem: Freeze Template6
[11:56] <Geth> ¬¶ ecosystem: 
[11:56] <Geth> ¬¶ ecosystem: While it's being moved to the zef ecosystem
[11:56] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/5bfd8bf1c7
[12:05] <xinming> I just found, that examples/pg.p6 file can work well
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:12] *** jaguart joined
[13:12] *** evalable6 left
[13:12] *** linkable6 left
[13:13] *** linkable6 joined
[13:14] *** evalable6 joined
[13:17] *** Sankalp left
[13:22] *** Sankalp joined
[13:22] *** Sankalp left
[13:22] *** Sankalp joined
[13:31] *** Guest35_ joined
[13:54] *** Lemniscate is now known as Sauvin
[14:08] *** Sgeo joined
[14:19] *** frost left
[14:26] *** morte_ joined
[14:39] *** morte_ left
[14:54] <El_Che> fyi, on latest macos op apple silicon: Plugin 'Comma Community Edition (Raku Language Support)' (version '2022.01.0') is not compatible with the current version of the IDE, because it requires build 213.* or older but the current build is IU-221.5591.52
[15:04] <gcd> El_Che: it's never worked for me, not even on my old non-M1 Mac. the one time I got it close to working most of my code was underlined red like it was errors. gave up.
[15:06] <El_Che> it worked for me on Linux except with the latest Intellij
[15:11] <gfldex> I just used [‚à©] and I liked it. :)
[15:13] *** elves-upstate joined
[15:29] *** elves-upstate left
[15:43] *** dakkar left
[15:49] *** jaguart left
[16:16] *** gugod left
[16:20] *** razetime left
[16:40] *** morte_ joined
[16:48] *** bigdata joined
[16:49] *** jaguart joined
[17:11] *** eseyman_ left
[17:11] *** eseyman joined
[17:31] *** Altai-man left
[18:06] *** reportable6 left
[18:06] *** reportable6 joined
[18:07] *** londoed left
[18:08] *** londoed joined
[18:18] *** sena_kun left
[18:19] *** sena_kun joined
[18:35] *** guifa joined
[18:51] *** [Coke] left
[18:54] <discord-raku-bot> <Nemokosch#9980> üëÄ
[19:04] *** morte_ left
[19:05] *** morte_ joined
[19:06] <rjbs> https://docs.raku.org/syntax/%3C%3C
[19:06] <rjbs> The header of this page is showing HTML entities, which seem to have been double-encoded.
[19:06] <lizmat> rjbs: could you make an issue for that ?
[19:07] <rjbs> Absolutely.  What repo?
[19:07] <rjbs> raku/doc ?
[19:07] <lizmat> otoh, it might be a known issue already
[19:07] <rjbs> It appears to be https://github.com/Raku/doc/issues/4075
[19:07] <lizmat> there you go... ok. thanks for checking!
[19:14] <rjbs> I need to learn more Raku just to surprise my coworkers. :)
[19:14] <rjbs> Today, explaining hyperoperators (Which I understand poorly and should ask more questions about).
[19:16] <El_Che> rjbs: interesting experiment you're doing there
[19:16] *** morte_ left
[19:18] *** jaguart left
[19:25] *** [Coke] joined
[19:31] <gfldex> rjbs: please make sure to show off properly
[19:32] <gfldex> I shall write a blogpost to help with that task.
[19:32] <Voldenet> ^fff^ is the best operator
[19:35] <Voldenet> it's not too useful, but I like it graphically
[19:42] *** morte_ joined
[19:49] *** jjido joined
[20:09] *** p6steve__ joined
[20:21] <rjbs> gfldex: I have questions about the ¬´ directions, because the docs confused me, but I need to read more before I ask.
[20:36] *** londoed left
[20:36] <p6steve__> lizmat: are you there?
[20:36] *** londoed joined
[20:37] *** londoed left
[20:37] <p6steve__> lizmat: I would like to send you a photo - please can you let me know best way at [email@hidden.address]
[20:37] <p6steve__> lizmat: I would like to send you a photo - please can you let me know best way at p6steve@furnival.net
[20:38] *** londoed joined
[20:42] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2022/05/25/reducing-sets/  PWC spoiler alert!
[20:44] *** n1to joined
[21:00] <guifa> rjbs: I find the directionality of ¬´¬†and ¬ª¬†with infix to be one of those "I'll trust whoever wrote the code that they're pointing in the right direction to do what seems most sensical" lol
[21:01] <rjbs> Heh.  The docs said something like "they point toward the shorter list" but also "if one is shorter, it will be repeated to fill", which made me wonder what the point was, but I didn't read much further -or- do any practical testing.
[21:04] <gfldex> rjbs: there was need for the yesterday: https://irclogs.raku.org/raku-dev/2022-05-24.html#19:18
[21:06] *** p6steve__ left
[21:12] *** discord-raku-bot left
[21:12] *** discord-raku-bot joined
[21:14] *** elves-upstate joined
[21:31] *** n1to left
[21:32] *** Summer joined
[21:35] <guifa> rjbs: admittedly, te main hyper op I use is the method hyper op 
[21:36] <rjbs> is that like: @obj >>.method
[21:36] <guifa> @foo¬ª.bar is so much more nicer than @foo.map: *.bar
[21:36] <guifa> yeah
[21:37] <guifa> (or worse, in other languages, being forced to do something as verbose as @foo.map: sub ($x) {¬†$x.bar }
[21:38] <Juerd> I hope Perl gets it one day, even if it's just syntactic sugar for map without any hyperness
[21:39] <Juerd> Since Raku, writing  map $_->bar, @foo  gets on my nerves :D
[21:47] *** morte_ left
[21:48] *** morte_` joined
[22:07] *** bigdata left
[22:10] *** morte_` left
[22:10] <discord-raku-bot> <Nemokosch#9980> the thing is, @obj>>.method doesn't do the same as @foo.map: *.bar
[22:10] <discord-raku-bot> <Nemokosch#9980> and the difference is rather significant
[22:12] <discord-raku-bot> <Nemokosch#9980> first off, >>. is recursive while map is "nodal"; it can take positionals and other compound structures just fine
[22:12] <discord-raku-bot> <Nemokosch#9980> second, I'm pretty sure >>. is eager while map is definitely lazy
[22:14] <discord-raku-bot> <Nemokosch#9980> so I pretty quickly figured most of the time it is better to use map, unless I really mean to use recursive list processing and eager evaluation
[22:15] *** guifa left
[22:16] <discord-raku-bot> <Nemokosch#9980> For the directionality of hyper metaoperators, I think this "shorter end vs longer end" is rather a helpful mnemonic but not much more
[22:18] <discord-raku-bot> <Nemokosch#9980> The approach I find better is: think of it as a kind of arrow. Now, the arrow brings the data from the list.
[22:20] <discord-raku-bot> <Nemokosch#9980> `(1, 2, 3) >>*>> (4, 5)` means: the data is coming from (1, 2, 3) - one could say that's the outer loop/join
[22:35] *** guifa joined
[22:50] *** guifa left
[22:58] *** jjido left
[23:28] <gcd> anyone know how to get this Github action to work?  https://github.com/marketplace/actions/raku-container-action  It's failing for me, asking for a Docker login.. never had to provide a Docker login for any of my other Github actions.
[23:32] <gcd> oops. that was not the latest version. got it working.
[23:51] <Summer> $potentially-nil.?Str; :sob:
[23:54] *** Sauvin left
[23:54] *** Sauvin joined
[23:58] <discord-raku-bot> <Nemokosch#9980> I'm not sure if this does what you think it should
