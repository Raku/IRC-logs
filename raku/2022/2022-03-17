[00:00] *** reportable6 left
[00:11] *** TempIRCLogger left
[00:11] *** TempIRCLogger joined
[00:18] *** shareable6 joined
[00:18] *** quotable6 joined
[00:18] *** greppable6 joined
[00:19] *** notable6 joined
[00:19] *** linkable6 joined
[00:20] *** benchable6 joined
[01:17] <drakonis> https://gist.github.com/alabamenhu/2fec7a8f51a24091dc1b104a2ae2f04d ah this is cool

[01:17] <drakonis> a raku proposal for binary grammars

[01:20] *** releasable6 joined
[01:22] *** frost left
[01:23] *** qorg11 left
[01:23] *** qorg11 joined
[01:40] *** Xliff left
[02:20] *** committable6 joined
[02:43] *** floppy_disk joined
[03:18] *** floppy_disk left
[03:42] *** ocomport joined
[04:01] *** reportable6 joined
[04:29] *** phogg left
[04:33] *** frost joined
[04:42] *** phogg joined
[05:32] *** K4rMa joined
[05:32] *** K4rMa left
[05:38] *** razetime joined
[06:00] *** reportable6 left
[06:44] *** razetime left
[06:57] *** epony left
[07:08] *** Sgeo left
[08:02] *** abraxxa joined
[08:08] *** abraxxa left
[08:09] *** abraxxa joined
[08:14] *** epony joined
[08:48] *** squashable6 left
[08:48] *** squashable6 joined
[09:02] *** dakkar joined
[09:20] *** ecocode__ left
[09:22] *** ecocode__ joined
[10:01] *** reportable6 joined
[11:01] *** reportable6 left
[11:01] *** coverable6 left
[11:01] *** bloatable6 left
[11:01] *** nativecallable6 left
[11:01] *** bisectable6 left
[11:01] *** statisfiable6 left
[11:01] *** releasable6 left
[11:01] *** tellable6 left
[11:01] *** linkable6 left
[11:01] *** unicodable6 left
[11:01] *** squashable6 left
[11:01] *** evalable6 left
[11:01] *** quotable6 left
[11:01] *** notable6 left
[11:01] *** benchable6 left
[11:01] *** shareable6 left
[11:01] *** sourceable6 left
[11:01] *** greppable6 left
[11:01] *** committable6 left
[11:02] *** reportable6 joined
[11:02] *** bloatable6 joined
[11:03] *** greppable6 joined
[11:04] *** quotable6 joined
[11:04] *** benchable6 joined
[11:04] *** bisectable6 joined
[11:12] *** razetime joined
[11:33] *** razetime left
[11:33] *** razetime joined
[11:56] *** razetime left
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:02] *** squashable6 joined
[12:03] *** releasable6 joined
[12:03] *** linkable6 joined
[12:04] *** nativecallable6 joined
[12:15] *** Geth left
[12:15] *** Geth joined
[12:19] *** Geth left
[12:20] *** Geth joined
[12:30] *** wingfold joined
[12:39] *** stdInOut joined
[12:40] <stdInOut> hello, I just installed rakudo via tarball and its .sh script, and it shows me that I can start using it via 'raku.exe' while I am on linux ??!

[12:48] <stdInOut> or perhaps "raqu"; "rather quiet"

[12:50] <MasterDuke> do you prefer building yourself? you didn't want to use your distro's package?

[12:51] <stdInOut> MasterDuke, honestly, I didnt scroll down to see that there was a distro package. but then I suppose they are older.

[12:51] <MasterDuke> some are. but for most of those El_Che provides binaries

[12:51] <stdInOut> but why '.exe'  on linux? is it correct? :)

[12:52] <MasterDuke> yeah, something's funny there. what showed that?

[12:52] <stdInOut> when I ran the install script, the output showed that I could run that to start using raku

[12:53] <stdInOut> I didn't run it yet, though

[12:53] <MasterDuke> fyi, https://nxadm.github.io/rakudo-pkg has the up-to-date distro packages i mentioned before

[12:53] <MasterDuke> which tarball did you download?

[12:54] <stdInOut> ah great, thank you, are they newer than the distro ones here; https://rakudo.org/downloads ?#

[12:54] <stdInOut> I downloaded rakudo-moar-2022.02-01-linux-x86_64-gcc.tar.gz

[12:55] <MasterDuke> yeah. the ones listed there are the "official" distro packages, El_Che builds newer ones

[12:59] <patrickb> stdInOut: Thanks for informing us! That's a mistake. Fix is on the way.

[13:00] <stdInOut> ah, glad to have been of help, patrickb :)

[13:00] <stdInOut> MasterDuke, I will proceed with El_Che's downloads, thank you very much :)

[13:01] <MasterDuke> np

[13:01] <patrickb> stdInOut: There are quite a number of different deployment methods made available by different people. Most are kept up to date, amongst them are ElChes rakudo-pkg repositories and the precompiled tarballs.

[13:02] *** notable6 joined
[13:03] *** statisfiable6 joined
[13:04] *** evalable6 joined
[13:04] <El_Che> stdInOut: feel free to ping me if needed

[13:05] <patrickb> MasterDuke: rakudo.org/downloads tries to provide an overview of the different options to deploy a rakudo. Amongst others the official distro packages as well as rakudo-pkg are mentioned and linked to.

[13:05] <stdInOut> El_Che, sure, I will, thank you

[13:05] <patrickb> MasterDuke: I think stdInOut tried the tarballs that can be downloaded on rakudo.org directly. Those are kept up to date, just as rakudo-pkg.

[13:05] <stdInOut> patrickb, yes, I tried those

[13:06] <patrickb> El_Che: Btw. I value your work on rakudo-pkg a lot. Thank you!

[13:06] <El_Che> thx :)

[13:06] <El_Che> I just need to keep an eye on new distro release so I can support them :)

[13:07] <El_Che> before you know it, alpine has a major release, then fedora, then ... :)

[13:07] <patrickb> stdInOut: The tarball you downloaded first was the latest version and was up to date. Feel free to use ElChes disto packages or the tarballs, whatever suits your need better.

[13:09] *** razetime joined
[13:10] <El_Che> yes, tarballs work fine. They are essentially the same compile steps as rakudo-pkg

[13:11] <El_Che> tar balls have the big advantage you can install it in your hone in a machine without root

[13:11] <El_Che> pkgs have the advantage that they use repos so you can update easily with the rest of the system

[13:12] <patrickb> El_Che: Out of curiosity, are rakudo-pkg executables compiled with the relocatability flag set?

[13:13] <El_Che> yes

[13:13] <El_Che> in the past only the tarballs, but for some times all packages

[13:14] <patrickb> Is there a necessity? Don't the packages always install into the same path?

[13:14] <El_Che> not needed no

[13:14] <patrickb> (It doesn't hurt, just curious)

[13:14] <El_Che> just an if less, can be easily changed one way or the other

[13:14] <patrickb> ok

[13:15] <El_Che> https://github.com/nxadm/rakudo-pkg/blob/master/actions/build.sh#L11

[13:16] <El_Che> you can tar your /opt/rakudo-pkg yourself and use it on an other machine on another path :P

[13:25] <stdInOut> patrickb, yes, I just typed 'raku' and was in. I will place raku folder in /opt now.

[13:59] *** tejr left
[13:59] *** tejr joined
[14:02] *** stdInOut left
[14:10] *** razetime left
[14:10] *** razetime joined
[14:12] *** Sgeo joined
[14:18] *** razetime left
[14:20] *** Sevalecan joined
[14:23] <[Coke]> ugh, how long has it been since I tried to run parallels on this 2014 mac mini...

[14:32] *** tejr left
[14:33] *** tejr joined
[14:33] <patrickb> \quit

[14:39] <japhb> Is there anyone doing *current* Docker container builds?  The ones I'm finding are old, but maybe I've lost track of the current ownership.

[14:41] <MasterDuke> i thought i saw jjmerelo updating some recently?

[14:46] <japhb> Oh, hmmm.  It does look like the rakudo-star image has been updated in the last month, but the tags still show 2021 dates

[14:46] <japhb> https://hub.docker.com/_/rakudo-star

[14:55] *** frost left
[14:58] *** razetime joined
[15:03] *** Xliff joined
[15:04] *** unicodable6 joined
[15:04] *** shareable6 joined
[15:08] *** abraxxa left
[15:22] *** razetime left
[15:37] *** razetime joined
[15:44] *** SqrtNegInf joined
[15:52] *** tejr left
[15:52] *** tejr joined
[16:01] *** committable6 joined
[16:03] *** sourceable6 joined
[16:22] <Geth> ¦ doc: 0360de1d0d | (David Warring)++ | doc/Language/pod.pod6

[16:22] <Geth> ¦ doc: make Replacement formatting codes literal

[16:22] <Geth> ¦ doc: 

[16:22] <Geth> ¦ doc: I think this is what's intended

[16:22] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/0360de1d0d

[16:22] <linkable6> Link: https://docs.raku.org/language/pod

[16:26] *** MasterDuke left
[16:33] *** MasterDuke joined
[16:55] <tonyo> that binary grammar proposal is interesting but it seems like it's already doable

[16:57] <tonyo> the maligned part, not as easily but just matching [multi]byte sequences

[17:03] *** coverable6 joined
[17:04] <drakonis> there's an implementation for it and it seems fairly workable

[17:04] <drakonis> its currently on hold due to rakuast, after that lands, it'll resume

[17:23] *** razetime left
[17:31] *** dakkar left
[17:33] <Geth> ¦ doc: e349e63dca | Coke++ | doc/Language/glossary.pod6

[17:33] <Geth> ¦ doc: remove some flowery prose

[17:33] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/e349e63dca

[17:33] <linkable6> Link: https://docs.raku.org/language/glossary

[18:00] *** reportable6 left
[18:00] <Geth> ¦ ecosystem: e6875fa9d7 | (Elizabeth Mattijsen)++ | META.list

[18:00] <Geth> ¦ ecosystem: Freeze Linenoise while we're moving it to zef

[18:00] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/e6875fa9d7

[18:03] *** wingfold left
[18:08] <discord-raku-bot> <Nemokosch#9980> which repl helper module do you advise? what is the difference?

[18:44] <tonyo> i use linenoise because it's smaller, easier to use with BSD. no real usability feedback for either though

[18:55] <discord-raku-bot> <Nemokosch#9980> I know that there is one that didn't work with backspace (or delete, I don't remember)

[19:02] <japhb> tonyo: Have you tried Terminal::LineEditor?

[19:03] *** linkable6 left
[19:05] *** linkable6 joined
[19:44] <tonyo> i haven't, actually just saw it was added to the repl message

[19:47] <discord-raku-bot> <Nemokosch#9980> where can I check the installed modules?

[19:48] <ugexe> zef list --installed

[19:53] <discord-raku-bot> <Nemokosch#9980> Okay, so apparently I am using Terminal::LineEditor at the moment

[19:53] <discord-raku-bot> <Nemokosch#9980> thx

[19:54] <discord-raku-bot> <Nemokosch#9980> and yes, it doesn't support delete

[19:58] <[Coke]> ugexe++ btw for all the zef work.

[20:00] <ugexe> m: say $*REPO.repo-chain.map(*.?installed).grep(*.so).map(*.Slip).map(*.meta<provides>.keys.Slip).join(",")

[20:00] <camelia> rakudo-moar 6e383c204: OUTPUT: «Zef::Repository::LocalCache,Zef::Service::Shell::Test,Zef::Identity,Zef::Service::P6CReporter,Zef::Service::Shell::wget,Zef::Utils::URI,Zef::Client,Zef::Fetch,Zef::Distribution::DependencySpecification,Zef::Utils::FileSystem,Zef::Service::Shell::Build…»

[20:01] <ugexe> or as a raku 1-liner

[20:01] *** reportable6 joined
[20:02] <discord-raku-bot> <Nemokosch#9980> 😂

[20:03] <ugexe> m: use Zef::CLI; @*ARGS = "install", "CSV::Parser"

[20:03] <camelia> rakudo-moar 6e383c204: OUTPUT: «===> Searching for: CSV::Parser␤Failed to open file /home/camelia/.zef/store/MANIFEST.zef: Permission denied␤  in method slurp-manifest at /home/camelia/.raku/sources/84C3559D745406770E8D650CE8B07455F3789078 line 42␤  in method gather-dists at /…»

[20:03] <ugexe> thats no fun

[20:04] <discord-raku-bot> <Nemokosch#9980> 🤣

[20:04] <ugexe> m: use Zef::CLI; @*ARGS = "install", "CSV::Parser", "--/cached"

[20:04] <camelia> rakudo-moar 6e383c204: OUTPUT: «===> Searching for: CSV::Parser, --/cached␤Failed to open file /home/camelia/.zef/store/MANIFEST.zef: Permission denied␤  in method slurp-manifest at /home/camelia/.raku/sources/84C3559D745406770E8D650CE8B07455F3789078 line 42␤  in method gather…»

[20:06] <discord-raku-bot> <Nemokosch#9980> I feel the "raku 1-liner" way gave more results than zef list --installed

[20:06] <discord-raku-bot> <Nemokosch#9980> built-in stuff?

[20:06] <ugexe> zef list --installed shows the dist name only, not the module names in those dists

[20:06] <ugexe> m: say $*REPO.repo-chain.map(*.?installed).grep(*.so).map(*.Slip).map(*.meta<name>).join(",")

[20:06] <camelia> rakudo-moar 6e383c204: OUTPUT: «zef,CSV::Parser,CORE␤»

[20:06] <ugexe> oh hey it installed it afterall

[20:08] <discord-raku-bot> <Nemokosch#9980> XD

[20:09] <ugexe> its a nice bonus of using main

[20:09] <ugexe> raku -MZef::CLI -e '' install CSV::Parser

[20:09] <ugexe> that works the same as bin/zef

[20:12] <japhb> Nemokosch: I was thinking "How could it possibly not support delete?" and then I looked at the keyboard map and went "Ah crap, I forgot to map that key when I started supporting special keys".

[20:12] <japhb> Sigh, will fix.

[20:13] <discord-raku-bot> <Nemokosch#9980> Oh right, I found that ctrl+d can be used as a kind of delete

[20:14] <discord-raku-bot> <Nemokosch#9980> thank you anyway

[20:15] <japhb> Happy to fix!  In the future, do feel free to say something right off when you notice something like that.

[20:16] <discord-raku-bot> <Nemokosch#9980> now that we are at it... there is some button combination after which it stops taking input and eventually I found no other way than to kill the terminal as a whole

[20:18] <discord-raku-bot> <Nemokosch#9980> it revolves around alt and < > maybe?

[20:20] <discord-raku-bot> <Nemokosch#9980> one thing is sure: once I press alt+í (which is the bottom left character next to shift and y in my case), I'm stuck

[20:21] *** sena_kun left
[20:22] <discord-raku-bot> <Nemokosch#9980> same for alt+.

[20:22] <discord-raku-bot> <Nemokosch#9980> maybe this is some terminal weirdness <:cameliathink:897316667653247057>

[20:22] <discord-raku-bot> <Nemokosch#9980> doesn't cause any trouble on xterm

[20:22] <japhb> OK, the Delete is fixed in my local copy (I was right, it was just the missing entry in the default keymap, sigh)

[20:23] *** sena_kun joined
[20:24] <japhb> The default keymap starts here: https://github.com/japhb/Terminal-LineEditor/blob/main/lib/Terminal/LineEditor/RawTerminalInput.rakumod#L175

[20:24] <japhb> Alt-< and Alt-> are history movement keys

[20:24] <japhb> (Start and end of history respectively)

[20:26] <japhb> I don't have keymaps for the alt keys you're talking about, let me see if I can recreate

[20:27] <japhb> Hmmm, alt-. doesn't do it for me.  Which terminal and keyboard layout are you using?

[20:29] <discord-raku-bot> <Nemokosch#9980> seems like this is a GNOME terminal and the layout... well, I think the dot part is the same. I tried standard Hungarian and programmer Polish (which is very much like a US QWERTY)

[20:29] <discord-raku-bot> <Nemokosch#9980> alt+. is apparently some "let's iterate over the words from the terminal history" command

[20:31] <japhb> That's ... not something I ever implemented

[20:31] <japhb> Is '>' the same as 'shift-.' for you?

[20:35] <discord-raku-bot> <Nemokosch#9980> The Polish layout is the same in this regard

[20:35] <discord-raku-bot> <Nemokosch#9980> I wonder what gets passed to poor raku repl in these cases

[20:35] <discord-raku-bot> <Nemokosch#9980> what can that alt+. be when it arrives

[20:35] <discord-raku-bot> <Nemokosch#9980> in xterm, it's some glitchy character and it just shows up

[20:35] <discord-raku-bot> <Nemokosch#9980> nothing special

[20:35] <discord-raku-bot> <Nemokosch#9980> apparently xterm is good for something, after all

[20:35] <japhb> *snrk*

[20:35] <japhb> FWIW, I'm using Gnome Terminal as well

[20:38] <japhb> Nemokosch: ISTR I implemented a raw terminal keycode program for Terminal::Print ...

[20:38] <japhb> Yeah, here it is: https://github.com/ab5tract/Terminal-Print/blob/master/examples/decoded-input.p6

[20:39] <japhb> (Technically that's the version that tries to figure out what key can be decoded from an escape sequence; there's a raw-input.p6 as well, but then you have to be able to grok the raw sequences.)

[20:44] <japhb> Since it appears that this other problem may take some time to figure out, I've released 0.0.11 with just the Delete fix.  It will take a few minutes to appear in the indexes.

[20:44] <japhb> OK, zef sees it now

[20:45] *** Xliff left
[20:56] <discord-raku-bot> <Nemokosch#9980> first time I used zef upgrade... it was about time I suppose

[20:56] <discord-raku-bot> <Nemokosch#9980> oh yeah, nice, it works now 🙂

[21:01] *** Xliff joined
[21:06] <japhb> When I told a friend of mine that I'd forgotten to add Delete to the default keymap, they went "And you never noticed?  Way to humblebrag!" and realized they thought I was claiming to have never needed to correct my inputs.  NOT!

[21:20] <drakonis> does raku have anything along the lines of data manipulation libraries yet?

[21:26] *** Xliff left
[21:27] <japhb> drakonis: Manipulating what particular kind of data?  That's a pretty broad range of possibilities, and we have rather uneven coverage.

[21:28] <drakonis> ah, matrices and vectors i'd say

[21:29] <drakonis> not unlike the kinds of libraries you'd find in the usual languages for this sort of task

[21:29] <drakonis> dataframes and such

[21:44] <japhb> Have you searched on raku.land?  https://raku.land/?q=linear and https://raku.land/?q=vector and https://raku.land/?q=matrix and https://raku.land/?q=matrices all gave results (overlapping of course)

[21:44] <japhb> Though of course those may not be what you're looking for.

[21:44] <japhb> e.g. if you're actually looking for a port of pytorch or so.

[21:48] <drakonis> ah, i haven't yet.

[22:03] <drakonis> also i meant numeric processing libraries

[22:03] <drakonis> if they're not available, they can always be written.

[22:12] <El_Che> japhb: take a small base image and add this https://github.com/nxadm/rakudo-pkg#os-repositories: voila, small image. Usable in docker was one of the first usecases of rakudo-pkg :)

[22:13] <El_Che> japhb: I don't believe in prebuilt images with too much in it, so I prefer to add what I exactly meed

[22:15] *** djerius left
[22:20] *** djerius joined
[22:28] <japhb> El_Che: Sure, I understand.  I had just gotten feedback from someone frustrated that Docker images that were simultaneously *current* and *official* weren't obvious from any of the download spots they looked (including rakudo.org and Docker Hub), which gave an impression of poor Docker support.  I figured the most likely case is that people *were* making Docker images, but we weren't advertising that well.

[22:29] <japhb> rakudo-star appears official but out of date, and others appeared either unofficial or out of date or both.

[22:30] <El_Che> japhb: there is certainly a usecase for rakudo-star, but docker isn't one. It's pretty much the antithesis of the docker mindset (minimalistic)

[22:31] <japhb> El_Che: Oh, no disagreement.  I just meant that that's the only one on Docker Hub that shows with the official marker.

[22:31] <El_Che> japhb: it would be pretty trivial to create rakudo-pkg images as the base images of each OS/Distro is used to build the package in the same place. I just don't know if there is a public for it

[22:31] <El_Che> I have toyed with the idea certainly

[22:32] <japhb> It sounds like you've got at least one "public" request for it.  :-)

[22:32] <El_Che> hehe

[22:33] <El_Che> docker hub though is a dead end

[22:33] <El_Che> with the limits they added

[22:33] <japhb> And I personally have wanted base images of "alpine + rakudo + zef" and "ubuntu + rakudo + zef" in order to simplify some of my stuff -- and make it easier to toss a script to my friends who don't necessarily have rakudo on all their machines.

[22:33] <japhb> Sorry, haven't been keeping up with that news.  What limits?

[22:34] <El_Che> yeah, I am pretty please with the alpine repos that make that possible. I was only able to create rakudo-pkg repos when I moved to cloudsmith

[22:34] <El_Che> https://docs.docker.com/docker-hub/download-rate-limit/

[22:34] <El_Che> For anonymous users, the rate limit is set to 100 pulls per 6 hours per IP address.

[22:34] <El_Che> For authenticated users, it is 200 pulls per 6 hour period. There are no limits for users with a paid Docker subscription.

[22:35] <El_Che> add it to a CI system and you'll be fast out of luck

[22:36] <El_Che> github has now docker  repos and maybe cloudsmith. The problem is that not all the users know how to get images not on docker hub

[22:36] <japhb> There was some verbiage in there about open source projects having an exemption.  I'd sorta assumed we'd need to do that like we do with e.g. GitHub.

[22:36] <japhb> nod

[22:41] <El_Che> (before I do that, I need to find the time to finish the arm64 images :/ )

[22:41] <El_Che> pkgs I mean

[22:42] <japhb> For which OS?

[22:43] <El_Che> the same as rakudo-pkg supports

[22:44] <El_Che> except centos 7 that does not have a arm64 upstream image (they started supporting it at 8)

[22:45] <El_Che> so a 15-20 distribution+release matrix depending on what's supported at the moment

[23:12] <japhb> Ah

[23:20] *** linkable6 left
[23:20] *** linkable6 joined
