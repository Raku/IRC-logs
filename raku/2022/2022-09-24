[00:00] *** squashable6 left
[00:00] *** quotable6 left
[00:00] *** committable6 left
[00:00] *** sourceable6 left
[00:00] *** bloatable6 left
[00:00] *** linkable6 left
[00:00] *** benchable6 left
[00:00] *** unicodable6 left
[00:00] *** statisfiable6 left
[00:00] *** greppable6 left
[00:00] *** releasable6 left
[00:00] *** evalable6 left
[00:00] *** nativecallable6 left
[00:00] *** shareable6 left
[00:00] *** bisectable6 left
[00:00] *** tellable6 left
[00:00] *** reportable6 left
[00:00] *** coverable6 left
[00:00] *** notable6 left
[00:00] *** bloatable6 joined
[00:00] *** linkable6 joined
[00:00] *** benchable6 joined
[00:00] *** bisectable6 joined
[00:00] *** evalable6 joined
[00:01] *** releasable6 joined
[00:01] *** quotable6 joined
[00:01] *** committable6 joined
[00:01] *** shareable6 joined
[00:01] *** notable6 joined
[00:01] *** greppable6 joined
[00:02] *** tellable6 joined
[00:02] *** reportable6 joined
[00:02] *** sourceable6 joined
[00:03] *** statisfiable6 joined
[00:03] *** nativecallable6 joined
[00:03] *** squashable6 joined
[00:03] *** coverable6 joined
[00:03] *** unicodable6 joined
[00:20] *** deoac joined
[00:28] *** [Coke]_ joined
[00:29] *** [Coke] left
[01:29] *** linkable6 left
[01:29] *** nativecallable6 left
[01:29] *** evalable6 left
[01:29] *** statisfiable6 left
[01:29] *** tellable6 left
[01:29] *** bloatable6 left
[01:29] *** coverable6 left
[01:29] *** releasable6 left
[01:29] *** sourceable6 left
[01:29] *** unicodable6 left
[01:29] *** benchable6 left
[01:29] *** greppable6 left
[01:29] *** squashable6 left
[01:29] *** bisectable6 left
[01:29] *** notable6 left
[01:29] *** quotable6 left
[01:29] *** reportable6 left
[01:29] *** committable6 left
[01:29] *** shareable6 left
[01:30] *** releasable6 joined
[01:30] *** benchable6 joined
[01:30] *** shareable6 joined
[01:30] *** nativecallable6 joined
[01:30] *** committable6 joined
[01:31] *** tellable6 joined
[01:31] *** coverable6 joined
[01:31] *** reportable6 joined
[01:31] *** sourceable6 joined
[01:31] *** linkable6 joined
[01:31] *** notable6 joined
[01:32] *** squashable6 joined
[01:32] *** greppable6 joined
[01:32] *** bisectable6 joined
[01:32] *** quotable6 joined
[01:32] *** evalable6 joined
[01:32] *** bloatable6 joined
[01:32] *** unicodable6 joined
[01:32] *** statisfiable6 joined
[01:36] *** Maylay left
[01:37] *** Maylay joined
[01:56] *** bigdata left
[02:06] *** [Coke]_ left
[02:08] *** MasterDuke left
[02:08] *** deoac left
[02:09] *** [Coke] joined
[02:14] *** [Coke] left
[02:14] *** [Coke]_ joined
[03:14] *** coverable6 left
[03:14] *** nativecallable6 left
[03:14] *** sourceable6 left
[03:14] *** bisectable6 left
[03:14] *** greppable6 left
[03:14] *** releasable6 left
[03:14] *** bloatable6 left
[03:14] *** linkable6 left
[03:14] *** unicodable6 left
[03:14] *** quotable6 left
[03:14] *** notable6 left
[03:14] *** benchable6 left
[03:14] *** committable6 left
[03:14] *** evalable6 left
[03:14] *** shareable6 left
[03:14] *** reportable6 left
[03:14] *** tellable6 left
[03:14] *** statisfiable6 left
[03:14] *** squashable6 left
[03:14] *** benchable6 joined
[03:14] *** bloatable6 joined
[03:15] *** shareable6 joined
[03:15] *** greppable6 joined
[03:15] *** reportable6 joined
[03:16] *** releasable6 joined
[03:16] *** squashable6 joined
[03:16] *** coverable6 joined
[03:16] *** nativecallable6 joined
[03:16] *** notable6 joined
[03:16] *** evalable6 joined
[03:16] *** quotable6 joined
[03:16] *** bisectable6 joined
[03:16] *** statisfiable6 joined
[03:16] *** unicodable6 joined
[03:16] *** committable6 joined
[03:17] *** sourceable6 joined
[03:17] *** linkable6 joined
[03:17] *** tellable6 joined
[03:31] *** frost joined
[03:43] *** [Coke] joined
[03:44] *** [Coke]_ left
[04:44] *** bisectable6 left
[04:44] *** nativecallable6 left
[04:44] *** benchable6 left
[04:44] *** linkable6 left
[04:44] *** tellable6 left
[04:44] *** evalable6 left
[04:44] *** greppable6 left
[04:44] *** bloatable6 left
[04:44] *** quotable6 left
[04:44] *** releasable6 left
[04:44] *** unicodable6 left
[04:44] *** shareable6 left
[04:44] *** reportable6 left
[04:44] *** coverable6 left
[04:44] *** committable6 left
[04:44] *** statisfiable6 left
[04:44] *** notable6 left
[04:44] *** sourceable6 left
[04:44] *** squashable6 left
[04:45] *** reportable6 joined
[04:45] *** unicodable6 joined
[04:45] *** releasable6 joined
[04:45] *** bisectable6 joined
[04:45] *** linkable6 joined
[04:45] *** notable6 joined
[04:45] *** committable6 joined
[04:45] *** evalable6 joined
[04:45] *** bloatable6 joined
[04:45] *** quotable6 joined
[04:45] *** shareable6 joined
[04:46] *** squashable6 joined
[04:46] *** nativecallable6 joined
[04:46] *** benchable6 joined
[04:47] *** greppable6 joined
[04:47] *** statisfiable6 joined
[04:47] *** tellable6 joined
[04:47] *** coverable6 joined
[04:47] *** sourceable6 joined
[05:20] *** [Coke]_ joined
[05:21] *** [Coke] left
[05:27] *** [Coke] joined
[05:29] *** [Coke]_ left
[06:08] *** reportable6 left
[06:09] *** reportable6 joined
[06:45] *** Nemokosch joined
[06:45] <discord-raku-bot> <Nemokosch> Apple can always underperform my ever-so-low expectations of them

[06:46] *** Nemokosch left
[06:52] *** MoC joined
[06:57] *** [Coke]_ joined
[06:58] *** [Coke] left
[07:05] <discord-raku-bot> <Nemokosch> Coke: thank you for the JSON link, I finally got to it

[07:06] *** Sgeo left
[08:06] *** sourceable6 left
[08:06] *** benchable6 left
[08:06] *** unicodable6 left
[08:06] *** committable6 left
[08:06] *** bisectable6 left
[08:06] *** shareable6 left
[08:06] *** releasable6 left
[08:06] *** reportable6 left
[08:06] *** tellable6 left
[08:06] *** coverable6 left
[08:06] *** nativecallable6 left
[08:06] *** squashable6 left
[08:06] *** bloatable6 left
[08:06] *** notable6 left
[08:06] *** quotable6 left
[08:06] *** greppable6 left
[08:06] *** evalable6 left
[08:07] *** unicodable6 joined
[08:07] *** greppable6 joined
[08:07] *** tellable6 joined
[08:07] *** quotable6 joined
[08:07] *** committable6 joined
[08:07] *** bisectable6 joined
[08:07] *** squashable6 joined
[08:08] *** benchable6 joined
[08:08] *** sourceable6 joined
[08:08] *** evalable6 joined
[08:08] *** releasable6 joined
[08:09] *** reportable6 joined
[08:09] *** bloatable6 joined
[08:09] *** notable6 joined
[08:10] *** nativecallable6 joined
[08:10] *** shareable6 joined
[08:10] *** coverable6 joined
[08:24] *** razetime joined
[08:34] *** [Coke] joined
[08:36] *** [Coke]_ left
[08:41] *** [Coke]_ joined
[08:43] *** MoC left
[08:43] *** razetime left
[08:44] *** [Coke] left
[08:44] *** MoC joined
[08:55] <discord-raku-bot> <Nemokosch> Is there an exposed <number> token somewhere? For matching numbers in a regular expression

[08:55] <discord-raku-bot> <Nemokosch> I found it in Rakudo, then NQP, then HLL but I wouldn't want to copypaste it to an own script

[08:55] *** razetime joined
[09:07] *** pleasantpheasant left
[09:14] *** pleasantpheasant joined
[09:32] *** razetime left
[09:32] *** razetime joined
[09:56] *** razetime left
[09:58] *** MoC left
[10:11] *** [Coke] joined
[10:12] *** [Coke]_ left
[10:37] *** sena_kun joined
[10:43] *** jaguart joined
[11:19] *** frost left
[11:22] *** jjido joined
[11:30] *** jjido left
[11:32] *** sena_kun left
[11:33] *** sena_kun joined
[11:36] *** simcop2387 left
[11:37] *** simcop2387 joined
[11:42] *** jjido joined
[11:49] *** [Coke]_ joined
[11:51] *** [Coke] left
[11:53] <discord-raku-bot> <Nemokosch> Re: lifting ! negation over junctions - how do I express "if at least one element is not an Array"?

[11:55] *** MoC joined
[11:56] *** [Coke] joined
[11:58] *** [Coke]_ left
[12:04] *** Nemokosch joined
[12:06] *** reportable6 left
[12:09] *** jjido left
[12:09] *** reportable6 joined
[12:11] *** sena_kun left
[12:12] *** sena_kun joined
[12:13] <lizmat> m: dd ([],[],[]).are ~~ Array

[12:13] <camelia> rakudo-moar 90709d533: OUTPUT: «Bool::True␤»

[12:13] <lizmat> m: dd ([],[],()).are ~~ Array

[12:13] <camelia> rakudo-moar 90709d533: OUTPUT: «Bool::False␤»

[12:13] <lizmat> Nemokosch ^^

[12:13] *** squashable6 left
[12:14] <lizmat> sadly not documented yet

[12:14] <lizmat> .are returns the type that is common to all values given

[12:15] *** squashable6 joined
[12:36] *** jaguart left
[13:06] <discord-raku-bot> <Nemokosch> oh wow

[13:06] <discord-raku-bot> <Nemokosch> thank you

[13:23] <El_Che> p6steve: you should give podman a go. You can run the same setup on mac, win and linux and no root needed on Linux to run the containers

[13:23] <tellable6> El_Che, I'll pass your message to p6steve

[13:26] *** [Coke]_ joined
[13:28] *** [Coke] left
[14:28] *** linkable6 left
[14:28] *** evalable6 left
[14:29] *** evalable6 joined
[14:31] *** linkable6 joined
[14:33] *** xinming left
[14:36] *** xinming joined
[14:50] *** Nemokosch left
[14:52] *** Sgeo joined
[15:03] *** [Coke] joined
[15:05] *** [Coke]_ left
[15:08] <tonyo> Podman++

[15:08] <tonyo> Doesn't eat 30gb of ram to run a 512mb container either

[15:10] *** euandreh left
[15:12] *** [Coke] left
[15:14] *** [Coke] joined
[15:17] *** euandreh joined
[15:44] *** tejr left
[15:48] *** tejr joined
[15:51] *** sena_kun left
[15:55] <El_Che> when developing I put my external services like keycloak and mysql in containers to run "author tests"

[15:55] <El_Che> using podman make this very portable

[16:00] *** MARTIMM joined
[16:02] *** MARTIMM left
[16:15] *** jetchisel left
[16:17] *** jetchisel joined
[16:24] *** deoac joined
[16:40] *** [Coke]_ joined
[16:42] *** [Coke] left
[16:43] *** discord-raku-bot left
[16:43] *** xinming left
[16:43] *** discord-raku-bot joined
[16:45] *** discord-raku-bot left
[16:46] *** discord-raku-bot joined
[16:58] *** discord-raku-bot left
[16:58] *** discord-raku-bot joined
[17:07] *** deoac left
[17:41] *** euandreh left
[17:42] *** euandreh joined
[17:49] <ugexe> i'm soliciting ideas for for a zef-focused tpf grant. i was thinking maybe lockfile support, but that doesn't do much good unless we can change/disable the default repos (such that a script can be run using *only* an external repo, i.e. no site repo)

[17:49] <ugexe> change/disable the default repos *in raku*

[17:49] <lizmat> there's Zef::Configuration that allows you to do that

[17:50] <ugexe> no, that can change zef configuration, not what repositories a raku implementation uses

[17:50] <ugexe> `raku -I inst#whatever my-script.raku` will always include the site/home/vendor repos

[17:51] <ugexe> which makes a lockfile mostly pointless

[17:51] <lizmat> ah, ok  :)

[17:52] <ugexe> basically $*REPO.repo-chain should be settable via some ENV var

[17:52] <ugexe> like entirely settable, not just additive

[17:53] <patrickb> ugexe: There is the use case of rakubrew which I'd like to prevent installation into the installation repos, but into the home dir one (or one entirely separate). I think write protecting the repo dirs would word but is non portable. Some way to cleanly and transparently making the rakubrew installed zef do that would be nice. There might already be a related bug report.

[17:53] <ugexe> then one can do `MY_ONLY_REPO=inst#foo raku my-scrip.raku` and only use modules in the inst#foo repo

[17:53] <patrickb> s/word/work/

[17:54] <ugexe> patrickb: there is a zef config to default to home

[17:54] <ugexe> https://github.com/ugexe/zef/blob/6a14c38304d81625321ffc3db9f29733a3826f84/resources/config.json#L5

[17:54] <ugexe> changing that to 'home' makes it install to 'home'. 'auto' installs to 'site' if it is writable, else 'home'

[17:56] <ugexe> see: https://github.com/ugexe/zef/blob/6a14c38304d81625321ffc3db9f29733a3826f84/lib/Zef/CLI.rakumod#L408

[17:56] *** deoac joined
[17:59] <El_Che> ugexe: If you don't take it as an insult, I would suggest refactoring the cli UI. One of the talks at raku conf described as a wall of text.

[17:59] <El_Che> (if you don't take it as constructive criticism, I apologize)

[18:00] <ugexe> yeah it sucks, but its a raku problem

[18:00] <El_Che> a grant may provide you some time to work on that front?

[18:04] <discord-raku-bot> <Nemokosch> well, it can be improved. Maybe not elegantly.

[18:04] <discord-raku-bot> <Nemokosch> Confer GetOpt::Long and related attempts

[18:04] <ugexe> i guess im more inclined to work on an area i have particular expertise in since i can know beforehand what is possible and the actual scope. i dont know enough about argument parsing to pick up that torch

[18:06] *** reportable6 left
[18:06] <discord-raku-bot> <Nemokosch> that's fair enough

[18:08] *** reportable6 joined
[18:08] <discord-raku-bot> <Nemokosch> In fact, I suppose anybody with enough time and patience could improve the feedback of failed argument parsing

[18:17] *** [Coke] joined
[18:19] *** [Coke]_ left
[18:27] *** [Coke] left
[18:30] *** [Coke] joined
[18:34] <El_Che> fair enough

[18:36] <ugexe> another thing is using CUR::Staging which means things would only be precompiled once (currently it happens twice; once when testing when they are loaded with a CUR::FileSystem and once when it gets installed to a CUR::Installation). the problem with this is that 1) `zef test .` would need to reinstall the dist in `.` to the temp CUR::Staging repo each time (which also would re-precompile everything,

[18:36] <ugexe> something that doesn't happen with CUR::FileSystem) and 2) CUR::Staging workflow doesn't work when installing to repos other than site/home/vendor (i.e. no custom install locations) 

[18:40] *** [Coke] left
[18:48] *** [Coke] joined
[19:08] *** [Coke] left
[19:11] *** squashable6 left
[19:11] *** squashable6 joined
[19:14] *** [Coke] joined
[19:15] <patrickb> ugexe: I'd love to see you tackle the double precomp behavior.

[19:24] *** [Coke]_ joined
[19:27] *** [Coke] left
[19:35] *** jjido joined
[19:37] *** [Coke]_ left
[19:49] *** Maylay left
[19:52] *** jjido left
[19:56] *** Maylay joined
[20:16] <tonyo> ugexe: something like pyenv/venv?

[20:18] <tbrowder> lizmat: i’m looking at yr Git::Status module seeking good practices. why do you use := here: “my $proc := run <…>, :out”?

[20:20] <tbrowder> and so on inside the block? anything to do with .precomp?

[20:23] <tonyo> not sure if you saw last night tbrowder but i finally finished the cro tut https://deathbykeystroke.com/articles/20220923-building-a-cro-app-part-b.html

[20:28] <tbrowder> tonyo: you da man! i need to look closer, but it looks like it’s the ultimate cookbook recipe for wannabe website hosts. you really should publish it as a Raku book, or at least part of one.

[20:38] *** MoC left
[20:51] *** archenoth left
[21:05] *** Maylay left
[21:08] *** Maylay joined
[21:16] *** MasterDuke joined
[21:54] *** [Coke] joined
[21:59] *** [Coke] left
[21:59] *** [Coke] joined
[22:07] *** [Coke]_ joined
[22:10] *** [Coke] left
[22:12] *** deoac left
[22:12] *** [Coke] joined
[22:15] *** [Coke]_ left
[22:19] *** deoac joined
[22:25] *** sena_kun joined
[22:35] <tonyo> heh, i think it might make more of a pamphlet unless i add in stuff about how to set up DNS and all the other stuff to consider when choosing a host, etc

[22:35] <tonyo> but, tyvm

[23:11] *** [Coke]_ joined
[23:12] *** [Coke] left
[23:14] *** sena_kun left
[23:42] *** archenoth joined
