[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[00:23] <SmokeMachine> lizmat: are -A, -B and -C still options to rak?those are being cited on other options‚Äô descriptions

[00:25] *** jgaz left
[00:25] <SmokeMachine> lizmat: could ‚Äîedit optionally receive the editor‚Äôs name?

[00:26] *** nicole joined
[00:27] *** mira joined
[00:27] <SmokeMachine> lizmat: -o and -h are also being mentioned

[01:27] *** linkable6 left
[01:27] *** evalable6 left
[01:27] *** evalable6 joined
[01:28] *** linkable6 joined
[01:32] *** Sankalp left
[01:35] *** Sankalp joined
[02:35] *** evalable6 left
[02:35] *** releasable6 left
[02:35] *** statisfiable6 left
[02:35] *** benchable6 left
[02:35] *** unicodable6 left
[02:35] *** committable6 left
[02:35] *** reportable6 left
[02:35] *** coverable6 left
[02:35] *** sourceable6 left
[02:35] *** bloatable6 left
[02:35] *** quotable6 left
[02:35] *** shareable6 left
[02:35] *** linkable6 left
[02:35] *** greppable6 left
[02:35] *** nativecallable6 left
[02:35] *** bisectable6 left
[02:35] *** tellable6 left
[02:35] *** notable6 left
[02:35] *** bisectable6 joined
[02:35] *** sourceable6 joined
[02:36] *** shareable6 joined
[02:36] *** committable6 joined
[02:36] *** nativecallable6 joined
[02:36] *** quotable6 joined
[02:36] *** unicodable6 joined
[02:37] *** releasable6 joined
[02:37] *** reportable6 joined
[02:37] *** linkable6 joined
[02:37] *** evalable6 joined
[02:37] *** bloatable6 joined
[02:37] *** tellable6 joined
[02:38] *** statisfiable6 joined
[02:38] *** coverable6 joined
[02:38] *** greppable6 joined
[02:38] *** notable6 joined
[02:38] *** benchable6 joined
[03:22] <japhb> Nemokosch (and general PSA): If you've been having problems with Terminal::LineEditor and certain keymaps, please try again with Terminal::LineEditor 0.0.12.  :-)

[03:38] *** evalable6 left
[03:38] *** linkable6 left
[03:40] *** evalable6 joined
[03:41] *** linkable6 joined
[04:41] *** bloatable6 left
[04:41] *** reportable6 left
[04:41] *** benchable6 left
[04:41] *** committable6 left
[04:41] *** bisectable6 left
[04:41] *** shareable6 left
[04:41] *** releasable6 left
[04:41] *** unicodable6 left
[04:41] *** tellable6 left
[04:41] *** nativecallable6 left
[04:41] *** quotable6 left
[04:41] *** evalable6 left
[04:41] *** committable6 joined
[04:42] *** shareable6 joined
[04:42] *** nativecallable6 joined
[04:42] *** benchable6 joined
[04:43] *** bisectable6 joined
[04:43] *** tellable6 joined
[04:43] *** evalable6 joined
[04:43] *** bloatable6 joined
[04:43] *** releasable6 joined
[04:43] *** unicodable6 joined
[04:44] *** quotable6 joined
[04:44] *** reportable6 joined
[05:44] *** reportable6 left
[05:44] *** linkable6 left
[05:44] *** committable6 left
[05:44] *** coverable6 left
[05:44] *** releasable6 left
[05:44] *** shareable6 left
[05:44] *** evalable6 left
[05:44] *** notable6 left
[05:44] *** benchable6 left
[05:44] *** quotable6 left
[05:44] *** nativecallable6 left
[05:44] *** bloatable6 left
[05:44] *** bisectable6 left
[05:44] *** greppable6 left
[05:44] *** sourceable6 left
[05:44] *** statisfiable6 left
[05:44] *** tellable6 left
[05:44] *** unicodable6 left
[05:45] *** nativecallable6 joined
[05:45] *** greppable6 joined
[05:45] *** releasable6 joined
[05:45] *** notable6 joined
[05:45] *** evalable6 joined
[05:45] *** benchable6 joined
[05:45] *** bloatable6 joined
[05:46] *** statisfiable6 joined
[05:46] *** linkable6 joined
[05:46] *** sourceable6 joined
[05:46] *** unicodable6 joined
[05:46] *** reportable6 joined
[05:46] *** coverable6 joined
[05:47] *** shareable6 joined
[05:47] *** quotable6 joined
[05:47] *** bisectable6 joined
[05:47] *** committable6 joined
[05:47] *** tellable6 joined
[06:07] *** reportable6 left
[06:11] *** reportable6 joined
[07:11] *** quotable6 left
[07:11] *** evalable6 left
[07:11] *** releasable6 left
[07:11] *** coverable6 left
[07:11] *** benchable6 left
[07:11] *** greppable6 left
[07:11] *** tellable6 left
[07:11] *** reportable6 left
[07:11] *** statisfiable6 left
[07:11] *** committable6 left
[07:11] *** bisectable6 left
[07:11] *** nativecallable6 left
[07:11] *** bloatable6 left
[07:11] *** notable6 left
[07:11] *** unicodable6 left
[07:11] *** sourceable6 left
[07:11] *** linkable6 left
[07:11] *** shareable6 left
[07:11] *** committable6 joined
[07:11] *** greppable6 joined
[07:11] *** evalable6 joined
[07:11] *** statisfiable6 joined
[07:12] *** unicodable6 joined
[07:12] *** shareable6 joined
[07:12] *** sourceable6 joined
[07:12] *** releasable6 joined
[07:12] *** bloatable6 joined
[07:12] *** benchable6 joined
[07:13] *** tellable6 joined
[07:13] *** reportable6 joined
[07:13] *** bisectable6 joined
[07:13] *** nativecallable6 joined
[07:13] *** linkable6 joined
[07:13] *** quotable6 joined
[07:14] *** coverable6 joined
[07:14] *** notable6 joined
[08:14] *** greppable6 left
[08:14] *** linkable6 left
[08:14] *** sourceable6 left
[08:14] *** nativecallable6 left
[08:14] *** benchable6 left
[08:14] *** unicodable6 left
[08:14] *** statisfiable6 left
[08:14] *** evalable6 left
[08:14] *** tellable6 left
[08:14] *** bisectable6 left
[08:14] *** quotable6 left
[08:14] *** notable6 left
[08:14] *** bloatable6 left
[08:14] *** reportable6 left
[08:14] *** releasable6 left
[08:14] *** shareable6 left
[08:14] *** committable6 left
[08:14] *** coverable6 left
[08:14] *** linkable6 joined
[08:15] *** quotable6 joined
[08:15] *** benchable6 joined
[08:15] *** shareable6 joined
[08:15] *** bisectable6 joined
[08:15] *** nativecallable6 joined
[08:15] *** notable6 joined
[08:15] *** committable6 joined
[08:15] *** releasable6 joined
[08:15] *** tellable6 joined
[08:16] *** statisfiable6 joined
[08:16] *** evalable6 joined
[08:16] *** bloatable6 joined
[08:16] *** sourceable6 joined
[08:16] *** reportable6 joined
[08:16] *** coverable6 joined
[08:17] *** greppable6 joined
[08:17] *** unicodable6 joined
[08:18] <lizmat> SmokeMachine++    # all fixed now, including being able to mention the editor on the command line

[08:46] <discord-raku-bot> <Nemokosch> japhb: nice, thank you

[08:47] <discord-raku-bot> <Nemokosch> can confirm that it's typing-friendly now

[08:58] <discord-raku-bot> <Nemokosch> I've been thinking about the Raku conference, by the way

[08:58] <lizmat> Nemokosch: a presentation would be cool  :-)

[08:58] <tellable6> lizmat, I'll pass your message to Nemokosch

[09:00] <discord-raku-bot> <Nemokosch> Yes yes... but about what? It has been bugging me for days now

[09:00] <discord-raku-bot> <Nemokosch> And I think what really would be the best is a presentation about containers - but I don't think I can just master them in a month

[09:10] *** sena_kun joined
[09:13] <lizmat> containers in the sense of my $foo being a container, or more the Docker kind ?

[09:18] <discord-raku-bot> <Nemokosch> the first

[09:18] <discord-raku-bot> <Nemokosch> I don't think there is much Raku specific about the Docker kind

[09:20] <lizmat> you know of my opensource.com posts about containers?

[09:22] <lizmat> https://opensource.com/article/18/8/containers-perl-6

[09:22] <discord-raku-bot> <Nemokosch> Not sure

[09:36] *** Sgeo left
[10:12] <discord-raku-bot> <Nemokosch> Okay, nice

[10:12] <discord-raku-bot> <Nemokosch> Is there anything that doesn't essentially bind to something?

[10:15] <lizmat> ?

[10:15] <lizmat> don't think so: essentially, it's all built on NQP, and NQP only knows binding

[10:27] <discord-raku-bot> <Nemokosch> This article is not bad but well, it misses @ % and \ at least üòÖ

[10:29] <discord-raku-bot> <Nemokosch> I read something in the docs that \foo = something and \foo := something are the same

[10:29] <discord-raku-bot> <Nemokosch> that is, sigilless variables bind, no matter what

[10:31] <discord-raku-bot> <Nemokosch> also https://docs.raku.org/routine/%3C%3E

[10:31] <discord-raku-bot> <Nemokosch> "decontainerization operator"

[10:31] <discord-raku-bot> <Nemokosch> is this not the same as zen-slicing?

[10:32] *** Nemokosch joined
[10:32] <Nemokosch> m: my $demo = 11; say $demo.VAR.WHAT; say $demo[].VAR.WHAT; say $demo<>.VAR.WHAT;

[10:32] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: ¬´(Scalar)‚ê§(Int)‚ê§(Int)‚ê§¬ª

[10:32] <tellable6> 2022-07-17T08:58:58Z #raku <lizmat> Nemokosch: a presentation would be cool  :-)

[10:32] <Nemokosch> :D

[10:44] *** discord-raku-bot left
[10:49] *** discord-raku-bot joined
[10:54] *** discord-raku-bot left
[10:54] *** discord-raku-bot joined
[11:14] *** tejr left
[11:20] *** frost joined
[11:23] *** Nemokosch left
[11:36] *** tejr joined
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:23] *** summer joined
[12:26] <summer> Quick question about bad ideas: https://gist.github.com/Summertime/7d768d9976e5ad1e55e4ac705b60666c could such a thing be done with raku's type system?

[12:27] <summer> (and or, any currently existing language?)

[12:29] <Kaiepi> summer, that looks a bit like Rc from rust

[12:30] <Kaiepi> something similar should be doable with a Proxy

[12:32] <Kaiepi> you're gonna have a bad time if you try the mop route. attributes are gorey

[12:34] <Kaiepi> i.e. attribute references are rarely made with Attribute.get_value or set_value internally, so you'd need a slang of some sort

[12:37] <summer> a proxy would fire twice, which would mean either an eager "grab everything" api call, or two api calls

[12:37] <summer> from my understanding

[12:38] <summer> and yeah its somewhat expected to be gorey, unfortunately. I just wish the docs on the gore didn't go so quickly into "some of this stuff is compiler specific" :sob:

[12:40] <summer> I would be happy still if I could do something like, user.^needs('attribute') or the such, just as long as the attribute-requesting-code is close to the attribute-using-code

[12:40] <summer> I'll look into Rc

[12:42] <summer> I guess the shortest worded form of what I'm asking is "can the type system be used to optimise an API call"

[13:23] *** linkable6 left
[13:23] *** evalable6 left
[13:23] *** linkable6 joined
[13:24] *** evalable6 joined
[13:35] <discord-raku-bot> <Nemokosch> Is Array the data type and Array the container type the same thing?

[13:37] <lizmat> no, containers come in many flavours

[13:38] <lizmat> the Proxy class e.g. also provides a container

[13:39] <discord-raku-bot> <Nemokosch> what would be a containerless Array, then?

[13:40] *** Nemokosch joined
[13:41] <Nemokosch> m: my \bed = <too big>.Array; bed = 'full'; dd bed;

[13:41] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: ¬´["full"]‚ê§¬ª

[13:41] <lizmat> m: my @a; @a[0] := 42; @a[0] = 666    # a containerless Array

[13:41] <discord-raku-bot> <Nemokosch> crazy stuff

[13:41] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: ¬´Cannot assign to an immutable value‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:42] <discord-raku-bot> <Nemokosch> that's not the array but the element

[13:43] <lizmat> you cannot define a containerless Array    you can only make elements containerless

[13:43] <lizmat> or define your own Array compatible class

[13:52] <discord-raku-bot> <Nemokosch> hmm, I mean... I guess you can see why this is causing massive headaches

[13:52] <discord-raku-bot> <Nemokosch> data types and container types aren't the same thing but they also aren't orthogonal

[13:56] <discord-raku-bot> <Nemokosch> I suppose the same thing applies to Hashes as well

[14:15] *** frost left
[14:22] <lizmat> Nemokosch: yes

[14:23] <discord-raku-bot> <Nemokosch> the key part cannot be a Scalar, at least it seems to me

[14:36] <lizmat> indeed

[14:38] *** xinming left
[14:38] *** xinming joined
[14:44] <discord-raku-bot> <p6steve> i have v1 of the Dan::Polars read_csv ... to_dataset basically functional

[14:46] <discord-raku-bot> <p6steve> good news is that it will import a csv with 2 million rows in 2mins 14sec

[14:46] <discord-raku-bot> <p6steve> bad news is this is 3sec for Rust to read the file and 2mins 11sec to import to raku :C   (<= note use of Coercion type saddie)

[14:48] <discord-raku-bot> <p6steve> there is probably quite a lot to be done to speed things up ... ideally would be a zero copy from Rust

[14:48] <discord-raku-bot> <p6steve> I think that means building a Cstruct in Rust that matches a raku (2d) Array

[14:50] <discord-raku-bot> <p6steve> is there any prior art on this -- other modules or in Nativecall maybe?

[14:50] <discord-raku-bot> <p6steve> (funnily enough a containerless array might be ideal for this to save creating 28 million containers

[14:50] <discord-raku-bot> <p6steve> )

[14:50] <lizmat> I guess it could be relatively trivial if you're talking about a native 2d array

[14:51] <lizmat> what's in the containers?  Ints ?

[14:51] *** euandreh left
[14:52] <discord-raku-bot> <p6steve> hmmm - well this is Polars DataFrames where each column is a typed Series

[14:52] <SmokeMachine> Is it `hyper`ing the CSV lines?

[14:54] <discord-raku-bot> <p6steve> so I guess can drop each Series (i32, f64 and so on) into a specific raku (1d) Array variant with known native type

[14:56] <discord-raku-bot> <p6steve> smokemachine: not yet ... hypering is one strategy ... BUT early on in the import I get a zero copy pointer to a CArray(int32) or similar and AFAIK ```my@a = CArray.list``` is the only way to load the array

[14:58] <discord-raku-bot> <p6steve> smokemachine: only Rust Polars gets to handle the csv file ... it's a Polars Series by the time I start the raku import

[14:59] <discord-raku-bot> <p6steve> lizmat: where should I look in rakudo / moarvm for the 1d Array layout?

[15:00] <discord-raku-bot> <p6steve> this is all a bit down and dirty for my skill set

[15:00] <lizmat> good question: it's all hidden in nqp ops I believe

[15:00] * lizmat wouldn't know offhand

[15:00] <lizmat> nine vrurg might

[15:01] <lizmat> need to go afk now&

[15:27] <discord-raku-bot> <p6steve> tx! - probably needs a bit of digging & speed profiling & maybe an SO question or two

[15:51] *** linkable6 left
[15:51] *** evalable6 left
[15:52] *** linkable6 joined
[15:54] *** evalable6 joined
[16:27] *** sena_kun left
[16:42] <discord-raku-bot> <Nemokosch> <> and [] really seem to do the same

[16:50] <[Coke]> lizmat: might I suggest a "-a" alias for --author (which also could stand for "all")

[16:50] <tellable6> 2022-07-16T18:14:26Z #raku <uzl[m]> [Coke]: Could this PR (https://github.com/Raku/doc/pull/4084) be merged assuming everything is fine? I'm looking to document the other 2022.06 changes wherever I am not out of my depth üòÖ

[16:52] <[Coke]> (^^ for run-tests)

[16:53] <Geth> ¬¶ doc: e95983fc83 | (Luis F. Uceta)++ (committed using GitHub Web editor) | doc/Language/operators.pod6

[16:53] <Geth> ¬¶ doc: Make &[max] and &[min] return LHS for ties (#4084)

[16:53] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/e95983fc83

[16:53] <linkable6> Link: https://docs.raku.org/language/operators

[16:53] <[Coke]> uzl[m]: done

[16:54] *** linkable6 left
[16:55] *** linkable6 joined
[17:55] *** tellable6 left
[17:55] *** committable6 left
[17:55] *** statisfiable6 left
[17:55] *** linkable6 left
[17:55] *** bisectable6 left
[17:55] *** unicodable6 left
[17:55] *** notable6 left
[17:55] *** shareable6 left
[17:55] *** coverable6 left
[17:55] *** sourceable6 left
[17:55] *** greppable6 left
[17:55] *** nativecallable6 left
[17:55] *** reportable6 left
[17:55] *** benchable6 left
[17:55] *** bloatable6 left
[17:55] *** quotable6 left
[17:55] *** releasable6 left
[17:55] *** evalable6 left
[17:56] *** bisectable6 joined
[17:56] *** bloatable6 joined
[17:56] *** releasable6 joined
[17:56] *** committable6 joined
[17:56] *** greppable6 joined
[17:56] *** quotable6 joined
[17:57] *** unicodable6 joined
[17:57] *** sourceable6 joined
[17:57] *** coverable6 joined
[17:57] *** evalable6 joined
[17:57] *** tellable6 joined
[17:57] *** linkable6 joined
[17:57] *** notable6 joined
[17:57] *** statisfiable6 joined
[17:57] *** reportable6 joined
[17:57] *** benchable6 joined
[17:57] *** shareable6 joined
[17:58] *** nativecallable6 joined
[18:06] *** reportable6 left
[18:07] *** reportable6 joined
[18:11] *** Sgeo joined
[18:21] *** Nemokosch left
[18:44] *** MoC joined
[18:59] *** Sankalp left
[19:03] *** Sankalp joined
[20:03] *** linkable6 left
[20:03] *** evalable6 left
[20:04] *** linkable6 joined
[20:04] *** evalable6 joined
[20:16] *** thundergnat joined
[20:18] <thundergnat> weekly: As of today Rosettacode has 1500 Raku entries: See https://rosettacode.org/wiki/Rosetta_Code/Rank_languages_by_popularity/Full_list and  https://rosettacode.org/wiki/Category:Raku  

[20:18] <notable6> thundergnat, Noted! (weekly)

[20:20] <thundergnat> Around 3.5 years ago it was 1000 . https://colabti.org/irclogger/irclogger_log/perl6?date=2018-11-11#l491

[20:21] <thundergnat> Only about 50 task entries left undone. Anyone who would like to contribute is more than welcome! https://rosettacode.org/wiki/Reports:Tasks_not_implemented_in_Raku

[20:22] <thundergnat> (Of course, new tasks get added all of the time, so it's a moving target.) 

[20:22] *** thundergnat left
[20:25] *** sena_kun joined
[21:11] *** sena_kun left
[21:23] *** Kaiepi left
[21:36] *** MoC left
[22:24] *** dogbert11 left
[22:33] *** dogbert11 joined
[22:44] *** Kaiepi joined
[23:44] *** linkable6 left
[23:44] *** evalable6 left
[23:44] *** nativecallable6 left
[23:44] *** committable6 left
[23:44] *** sourceable6 left
[23:44] *** statisfiable6 left
[23:44] *** bisectable6 left
[23:44] *** coverable6 left
[23:44] *** benchable6 left
[23:44] *** bloatable6 left
[23:44] *** reportable6 left
[23:44] *** releasable6 left
[23:44] *** shareable6 left
[23:44] *** notable6 left
[23:44] *** tellable6 left
[23:44] *** greppable6 left
[23:44] *** quotable6 left
[23:44] *** unicodable6 left
[23:45] *** linkable6 joined
[23:45] *** statisfiable6 joined
[23:45] *** notable6 joined
[23:45] *** benchable6 joined
[23:45] *** evalable6 joined
[23:45] *** nativecallable6 joined
[23:45] *** releasable6 joined
[23:46] *** tellable6 joined
[23:46] *** unicodable6 joined
[23:46] *** reportable6 joined
[23:46] *** coverable6 joined
[23:46] *** committable6 joined
[23:47] *** bloatable6 joined
[23:47] *** bisectable6 joined
[23:47] *** sourceable6 joined
[23:47] *** shareable6 joined
[23:47] *** quotable6 joined
[23:47] *** greppable6 joined
