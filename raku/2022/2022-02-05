[00:00] <guifa> Ah I just found some samples of it online.  

[00:00] <guifa> Yeah, that psuedo code will translate rather nicely in Raku

[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[00:10] <Zgredu[m]> That's great to hear. I tried Racket and Scheme for a while but the way they handled arrays was a bit too strange. Go was OK but a bit too opinionated and poor in some aspects. Ada was almost ideal if not for the fact that all implementations are not garbage collected and Oberon-2 has no compilers at all. Raku just seemed like a nice language when I went through the examples on Rosetta Code and compared it with others

[00:10] <Zgredu[m]> Should I start with https://raku.guide/ or somewhere else?

[00:11] *** dextercd left
[00:14] <guifa> Raku is also nice in that if something isn't working how you like, it's fairly easy to craft something that does and use it

[00:15] <guifa> raku.guide is nice.  also I think Laurent Rosenfeld has a book that dives into algorithms and such

[00:16] <Zgredu[m]> "Think Perl 6: How to Think Like a Computer Scientist"?

[00:17] <guifa> Yeah.  ALthough actually I just glanced through it, it's no where near as deep dive as CLRS — Rosenfeld calls it a book for beginners so it teaches a lot more fundamental concepts that you probably already understand fairly well

[00:17] <guifa> like the next to the last chapter goes over quick sort :-)

[00:37] *** perlbot left
[00:37] *** simcop2387 left
[00:39] *** simcop2387 joined
[00:40] *** perlbot joined
[00:46] *** Garbanzo__ joined
[01:02] *** perlbot left
[01:02] *** simcop2387 left
[01:06] *** simcop2387 joined
[01:07] *** perlbot joined
[01:17] *** Garbanzo__ left
[01:50] *** clarjon1 left
[02:25] *** jmcgnh left
[02:43] *** razetime joined
[03:01] *** jmcgnh joined
[03:02] *** nine left
[03:02] *** m_athias left
[03:02] *** nine joined
[03:02] *** m_athias joined
[03:17] *** frost joined
[03:18] *** frost left
[03:20] *** codesections left
[03:20] *** codesections joined
[03:21] *** a3r0 left
[03:21] *** a3r0 joined
[03:21] *** frost joined
[03:22] *** Garbanzo__ joined
[03:59] *** discord-raku-bot left
[03:59] *** discord-raku-bot joined
[04:33] *** swaggboi left
[04:43] *** frost left
[04:46] *** frost joined
[05:01] *** swaggboi joined
[05:31] *** frost left
[05:33] *** frost joined
[05:38] <elcaro> I just tried to do  `@a.shift(2)`... seems like something that Raku might implement, but alas, no

[05:38] <elcaro> I know about `splice`... just musing

[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:40] *** frost left
[07:14] *** frost joined
[08:00] *** Garbanzo__ left
[08:04] *** andinus joined
[08:39] *** frost left
[08:54] <lizmat> elcaro: maybe @a.batch(2) ?

[09:20] *** stoned75 left
[09:21] *** stoned75 joined
[09:32] <leont> Good *

[09:54] <patrickb> is there some #raku-fosdem or so channel?

[09:54] <lizmat> there's a #raku-conf channel

[10:21] *** evalable6 left
[10:21] *** linkable6 left
[10:21] *** linkable6 joined
[10:26] *** jjido joined
[10:45] *** guifa left
[10:55] *** Sgeo left
[11:01] <gfldex> m: my @a = 1..10; say @a.shift xx 2; dd @a;

[11:01] *** jjido left
[11:01] <camelia> rakudo-moar 006a920ca: OUTPUT: «(1 2)␤Array @a = [3, 4, 5, 6, 7, 8, 9, 10]␤»

[11:01] <gfldex> elcaro: ^^^

[11:36] *** Darkcoal joined
[12:10] *** reportable6 left
[12:11] *** reportable6 joined
[12:13] *** Darkcoal left
[12:14] *** Darkcoal joined
[12:18] *** stoned75 left
[12:20] *** Darkcoal left
[12:22] *** Darkcoal joined
[12:24] *** evalable6 joined
[12:24] *** stoned75 joined
[14:19] *** evalable6 left
[14:19] *** bloatable6 left
[14:19] *** linkable6 left
[14:19] *** notable6 left
[14:19] *** coverable6 left
[14:19] *** quotable6 left
[14:19] *** shareable6 left
[14:19] *** tellable6 left
[14:19] *** statisfiable6 left
[14:19] *** reportable6 left
[14:19] *** benchable6 left
[14:19] *** unicodable6 left
[14:19] *** committable6 left
[14:19] *** releasable6 left
[14:19] *** sourceable6 left
[14:19] *** greppable6 left
[14:19] *** nativecallable6 left
[14:19] *** bisectable6 left
[14:19] *** squashable6 left
[14:20] *** bisectable6 joined
[14:20] *** benchable6 joined
[14:20] *** nativecallable6 joined
[14:21] *** statisfiable6 joined
[14:21] *** quotable6 joined
[14:22] *** releasable6 joined
[14:36] <jdv> codesections: you're zest thing seems neat.  i did a almost not related thing a long time ago with just one op.   https://github.com/jdv/p6-tolerance

[14:36] <jdv> iirc that was before the =~= was impl

[14:36] <jdv> 'd

[14:41] *** sena_kun joined
[15:20] *** reportable6 joined
[15:21] *** tellable6 joined
[15:21] *** unicodable6 joined
[15:22] *** evalable6 joined
[15:22] *** greppable6 joined
[15:22] *** shareable6 joined
[15:22] *** bloatable6 joined
[15:22] *** sourceable6 joined
[15:51] <andinus> is there a better way to do "$var"()

[15:51] <andinus> m: my $x = "sum"; say "$x"(1, 2)

[15:51] <camelia> rakudo-moar 006a920ca: OUTPUT: «No such method 'CALL-ME' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[16:10] <MasterDuke> m: my $x = "sum"; say ::("&" ~ $x)(1, 2)   # andinus

[16:10] <camelia> rakudo-moar 006a920ca: OUTPUT: «3␤»

[16:11] <ugexe> can also use &::($x)

[16:12] *** timo left
[16:13] *** razetime left
[16:15] <MasterDuke> ugexe++ i was looking for that and tried pretty much every other placement of the '&'

[16:20] *** coverable6 joined
[16:20] *** squashable6 joined
[16:22] *** notable6 joined
[16:34] <leont> Is there a way to connect to a unix domain socket?

[16:37] <ugexe> i thought IO::Socket::INET supported unix socks

[16:40] <leont> I'm seeing that suggestion in the issue tracker now, but it has never been documented

[16:40] <leont> Next question: does IO::Socket::Async support it, because that's what I actually need.

[16:40] *** bobv joined
[16:43] *** bobv left
[16:43] *** bobv joined
[16:44] *** bobv left
[16:49] *** bobv joined
[16:50] *** bobv left
[16:52] *** dextercd joined
[17:02] <andinus> m: put &::("sum")(1,2)

[17:02] <camelia> rakudo-moar 006a920ca: OUTPUT: «3␤»

[17:02] <andinus> m: put sum()

[17:02] <camelia> rakudo-moar 006a920ca: OUTPUT: «0␤»

[17:21] *** linkable6 joined
[17:22] *** Darkcoal left
[17:28] *** timo joined
[17:36] *** bobv joined
[17:37] *** bobv left
[17:53] *** Skarsnik joined
[17:56] *** Skarsnik__ joined
[17:56] *** Skarsnik_ left
[17:58] *** Skarsnik left
[17:59] *** Skarsnik joined
[18:01] *** Skarsnik__ left
[18:08] *** reportable6 left
[18:10] *** reportable6 joined
[18:27] *** Skarsnik left
[18:50] *** bobv joined
[19:20] *** committable6 joined
[19:22] *** jjido joined
[19:34] <leont> Can anyone explain why this doesn't seem to work: my $a = Supplier.new; my $b = Supplier.new; $a.emit($b.Supply); $a.done; react { whenever $a.Supply { dd $_ } }'

[19:36] <ugexe> based on where you are calling .done i would expect $a to be a Supplier::Preserving

[19:37] <leont> Ah, yeah that makes sense

[19:38] <leont> Yes that works wonderfully

[19:38] <ugexe> also seems like maybe thats something https://docs.raku.org/type/Supply#method_migrate might be used for

[19:39] *** bobv left
[19:45] *** Sgeo joined
[19:45] * leont just got a basic but working asynchronous postgres client in raku working

[19:49] <japhb> leont++

[20:15] *** abraxxa-home joined
[20:45] *** Garbanzo__ joined
[20:46] *** bobv joined
[21:05] *** TempIRCLogger joined
[21:05] *** lizmat_ joined
[21:06] *** RakuIRCLogger left
[21:06] *** lizmat left
[21:06] *** TempIRCLogger__ left
[21:06] *** Geth left
[21:14] *** bobv left
[22:14] *** benchable6 left
[22:14] *** nativecallable6 left
[22:14] *** linkable6 left
[22:14] *** coverable6 left
[22:14] *** reportable6 left
[22:14] *** greppable6 left
[22:14] *** quotable6 left
[22:14] *** tellable6 left
[22:14] *** unicodable6 left
[22:14] *** evalable6 left
[22:14] *** statisfiable6 left
[22:14] *** bisectable6 left
[22:14] *** shareable6 left
[22:14] *** bloatable6 left
[22:14] *** squashable6 left
[22:14] *** notable6 left
[22:14] *** releasable6 left
[22:14] *** sourceable6 left
[22:14] *** committable6 left
[22:14] *** quotable6 joined
[22:15] *** bloatable6 joined
[22:16] *** greppable6 joined
[22:16] *** notable6 joined
[22:16] *** sourceable6 joined
[22:16] *** reportable6 joined
[22:16] *** bisectable6 joined
[22:16] *** benchable6 joined
[22:17] *** statisfiable6 joined
[22:17] *** coverable6 joined
[22:58] *** abraxxa-home left
