[00:07] *** reportable6 left
[00:08] *** reportable6 joined
[00:12] <[Coke]> ecocode___: https://docs.raku.org/language/unicode_ascii

[00:13] <[Coke]> (elem)

[00:13] <ecocode___> [Coke]: thx

[00:29] <ecocode___> By any chance, is there an easy way to serialize instance of a class to (and from) json format ?

[01:08] *** evalable6 left
[01:08] *** linkable6 left
[01:09] *** linkable6 joined
[01:11] *** evalable6 joined
[01:11] *** swaggboi left
[01:17] <[Coke]> not easily. there's $instance.raku which gives you an eval-able version, and there's JSON::Fast (et al.) that give you to-json, but jsonifying a .raku response ust gives you an ugly string.

[01:19] <[Coke]> If I needed this, I'd probably write a role that walked attributes (whatever they were) and created a json object, and then did the reverse to create a new instance. (write it once, use it on any class)

[01:33] *** swaggboi joined
[01:34] <ecocode___> hmm that indeed sounds like not so easy ;)

[02:33] *** evalable6 left
[02:33] *** linkable6 left
[02:35] *** evalable6 joined
[02:36] *** linkable6 joined
[03:11] *** Guest35 left
[03:37] *** Sankalp left
[03:38] *** Sankalp joined
[03:55] *** Kaiepi left
[04:39] <CIAvash> ecocode___: https://raku.land/cpan:JSTOWE/JSON::Class

[04:55] *** evalable6 left
[04:55] *** linkable6 left
[04:56] *** linkable6 joined
[04:57] *** evalable6 joined
[05:28] *** Kaiepi joined
[06:05] *** Kaiepi left
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:09] *** Kaiepi joined
[07:09] *** sourceable6 left
[07:09] *** benchable6 left
[07:09] *** bisectable6 left
[07:09] *** shareable6 left
[07:09] *** linkable6 left
[07:09] *** reportable6 left
[07:09] *** evalable6 left
[07:09] *** coverable6 left
[07:09] *** quotable6 left
[07:09] *** releasable6 left
[07:09] *** nativecallable6 left
[07:09] *** tellable6 left
[07:09] *** statisfiable6 left
[07:09] *** notable6 left
[07:09] *** greppable6 left
[07:09] *** bloatable6 left
[07:09] *** unicodable6 left
[07:09] *** committable6 left
[07:09] *** coverable6 joined
[07:09] *** greppable6 joined
[07:10] *** tellable6 joined
[07:10] *** committable6 joined
[07:10] *** reportable6 joined
[07:10] *** bisectable6 joined
[07:10] *** unicodable6 joined
[07:10] *** linkable6 joined
[07:10] *** shareable6 joined
[07:11] *** evalable6 joined
[07:11] *** notable6 joined
[07:11] *** benchable6 joined
[07:11] *** quotable6 joined
[07:11] *** nativecallable6 joined
[07:11] *** sourceable6 joined
[07:11] *** bloatable6 joined
[07:12] *** statisfiable6 joined
[07:12] *** releasable6 joined
[07:50] *** MoC joined
[07:52] *** MoC left
[07:53] *** MoC_ joined
[07:59] *** MoC_ is now known as MoC

[08:35] *** jjido joined
[08:53] <ecocode___> CIAvash: thx, looks awesome 

[09:00] *** grondilu joined
[09:03] *** grondilu left
[09:03] *** lichtkind joined
[09:16] *** lichtkind left
[09:16] *** lichtkind joined
[09:38] *** jjido left
[09:49] *** Sgeo left
[10:40] *** jaguart joined
[10:44] *** jjido joined
[10:45] *** frost joined
[10:53] *** MoC left
[11:14] *** tejr left
[11:16] *** jjido left
[11:19] *** tejr joined
[11:59] *** Maylay joined
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:55] *** jaguart left
[13:27] *** MoC joined
[13:36] *** sena_kun left
[13:38] *** sena_kun joined
[13:45] *** grondilu joined
[13:45] <grondilu> m: say "{$++}" x 3

[13:45] <camelia> rakudo-moar 530e17848: OUTPUT: «000␤»

[13:45] <tellable6> 2022-05-07T19:13:28Z #raku <japhb> grondilu When samuraisam and I worked on Protocol Buffer support, we used the MOP; you'll find it in several places in:  https://github.com/samuraisam/p6-pb 

[13:48] <grondilu> .tell japhb noted

[13:48] <tellable6> grondilu, I'll pass your message to japhb

[14:02] *** jaguart joined
[14:03] *** eseyman left
[14:03] *** jaguart left
[14:03] *** jaguart joined
[14:04] *** discord-raku-bot left
[14:04] *** discord-raku-bot joined
[14:09] *** eseyman joined
[14:16] *** discord-raku-bot left
[14:17] *** discord-raku-bot joined
[14:21] *** discord-raku-bot left
[14:21] *** discord-raku-bot joined
[14:45] *** Guest35 joined
[15:23] *** grondilu left
[15:25] *** frost left
[15:33] *** jjido joined
[15:37] <[Coke]> CIAvash: (JSON::Class). nifty, thanks.

[16:33] *** evalable6 left
[16:33] *** linkable6 left
[16:34] *** linkable6 joined
[16:36] *** evalable6 joined
[17:10] <Geth> ¦ problem-solving: coke++ created pull request #325: Volunteer for Doc wrangling

[17:10] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/pull/325

[17:14] *** jaguart left
[17:45] *** sena_kun left
[17:46] *** sena_kun joined
[18:07] *** reportable6 left
[18:10] *** reportable6 joined
[18:12] *** jjido left
[18:28] <CIAvash> yw

[18:31] *** jjido joined
[19:04] *** Xliff1 joined
[19:04] <Xliff1> \o

[19:05] <Xliff1> Funny thing. The ceiling in the office fell in.

[19:05] <Xliff1> I'm still logged in on that computer.

[19:05] <Xliff1> At any rate, is this a bug?

[19:06] <Xliff1> m: my utf8 $a = "Blah"; sub a (Str $c) { $c.say }; a($a)

[19:06] <camelia> rakudo-moar 530e17848: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Calling a(utf8) will never work with declared signature (Str $c)␤at <tmp>:1␤------> $a = "Blah"; sub a (Str $c) { $c.say }; ⏏a($a)␤»

[19:09] *** Sgeo joined
[19:13] *** jjido left
[19:20] *** Xliff left
[19:21] *** Xliff joined
[19:21] <japhb> utf8 is not a Str.  It's a Blob (that happens to be a utf-8 encoding of a Str).  Raku is careful to keep NFG Str and non-NFG Blobs separate.

[19:30] *** Xliff left
[19:38] *** z4kz joined
[19:45] <Xliff1> Oh shit.

[19:45] *** sena_kun left
[19:45] <Xliff1> So that's why my Buf multi isn't catching. It should be Blob.

[19:45] *** sena_kun joined
[19:46] <Geth> ¦ doc: coke self-assigned Remove the vim mode line. https://github.com/Raku/doc/issues/3058

[19:58] <[Coke]> the discussion about removing the vim line from the docs stalled at some point; Looking at it today, I see no reason not to remove it from the repo.

[19:58] <[Coke]> Probably an easy todo if someone wants to claim it and submit a PR.

[19:59] *** Xliff joined
[20:16] *** z4kz40 joined
[20:20] *** z4kz40 left
[20:20] *** z4kz left
[20:22] *** z4kz joined
[20:23] *** z4kz left
[20:45] *** jjido joined
[20:57] *** vkb joined
[20:58] *** vkb left
[21:58] <[Coke]> release notice still says "The Perl Foundation" - https://www.rakudo.org/post/announce-rakudo-release-2022.04 - ISTR TRF is also a dba now, so we should switch the text, yes?

[22:02] <[Coke]> .tell jdv - I'm in the release announcement twice.

[22:02] <tellable6> [Coke], I'll pass your message to jdv

[22:02] *** jjido left
[22:05] <lizmat> [Coke] : agree it should be The Raku Foundation now

[22:05] <japhb> [Coke]: Yeah, TRF or YAS are both valid (TRF is more relevant and precise for this case though).

[22:11] *** z4kz joined
[22:20] <Geth> ¦ problem-solving: coke self-assigned Separate Community Resource pages https://github.com/Raku/problem-solving/issues/286

[22:21] <[Coke]> so, we have a problem solving repo. What to do about tickets that have no discussion for a year (and very little discussion before that)

[22:22] <Geth> ¦ problem-solving: coke self-assigned Please beware of eliminating (or changing) documented features https://github.com/Raku/problem-solving/issues/40

[22:22] *** z4kz left
[22:27] *** lichtkind left
[22:33] *** raiph joined
[22:35] *** MoC left
[22:36] <[Coke]> any github repos using "Discussions"?

[22:36] <[Coke]> Doesn't seem helpful for raku/doc, but maybe for others.

[22:47] <lizmat> not to my knowledge

[23:00] <Xliff> I should start using them on my repos.

[23:09] *** Kaipei joined
[23:10] *** Kaiepi left
[23:19] <[Coke]> .seen finanalyst

[23:19] <tellable6> [Coke], I saw finanalyst 2021-03-12T22:16:00Z in #raku-dev: <finanalyst> I just hadn't realised how far the whole website project had gone. I am really quite disappointed.

[23:20] <[Coke]> I find it interesting that that was the last send from him, and also that the new website hasn't happened yet.

[23:21] <[Coke]> Reminder about #raku-docs; please join if you want to be involved in conversations about raku/docs, either content, editing, or the site itself.

[23:49] *** raiph left
