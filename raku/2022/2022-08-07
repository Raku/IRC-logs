[00:00] *** evalable6 joined
[00:07] *** reportable6 left
[00:07] *** reportable6 joined
[01:07] *** Colere left
[01:09] *** Furor joined
[01:52] *** Furor is now known as Colere

[02:12] *** frost joined
[02:52] *** frost left
[03:12] *** frost joined
[04:12] *** squashable6 left
[04:12] *** unicodable6 left
[04:12] *** committable6 left
[04:12] *** bloatable6 left
[04:12] *** tellable6 left
[04:12] *** quotable6 left
[04:12] *** nativecallable6 left
[04:12] *** greppable6 left
[04:12] *** coverable6 left
[04:12] *** linkable6 left
[04:12] *** reportable6 left
[04:12] *** bisectable6 left
[04:12] *** statisfiable6 left
[04:12] *** notable6 left
[04:12] *** shareable6 left
[04:12] *** evalable6 left
[04:12] *** benchable6 left
[04:12] *** sourceable6 left
[04:12] *** releasable6 left
[04:13] *** evalable6 joined
[04:13] *** notable6 joined
[04:13] *** nativecallable6 joined
[04:13] *** reportable6 joined
[04:13] *** coverable6 joined
[04:13] *** bloatable6 joined
[04:13] *** greppable6 joined
[04:13] *** quotable6 joined
[04:13] *** linkable6 joined
[04:13] *** unicodable6 joined
[04:14] *** shareable6 joined
[04:14] *** tellable6 joined
[04:14] *** squashable6 joined
[04:15] *** statisfiable6 joined
[04:15] *** sourceable6 joined
[04:15] *** releasable6 joined
[04:15] *** bisectable6 joined
[04:15] *** benchable6 joined
[04:15] *** committable6 joined
[04:26] *** pamplemousse joined
[05:26] *** greppable6 left
[05:26] *** squashable6 left
[05:26] *** tellable6 left
[05:26] *** committable6 left
[05:26] *** linkable6 left
[05:26] *** sourceable6 left
[05:26] *** benchable6 left
[05:26] *** notable6 left
[05:26] *** nativecallable6 left
[05:26] *** unicodable6 left
[05:26] *** bloatable6 left
[05:26] *** statisfiable6 left
[05:26] *** reportable6 left
[05:26] *** coverable6 left
[05:26] *** bisectable6 left
[05:26] *** quotable6 left
[05:26] *** evalable6 left
[05:26] *** shareable6 left
[05:26] *** releasable6 left
[05:26] *** benchable6 joined
[05:27] *** releasable6 joined
[05:27] *** statisfiable6 joined
[05:27] *** linkable6 joined
[05:27] *** evalable6 joined
[05:27] *** greppable6 joined
[05:27] *** bisectable6 joined
[05:27] *** squashable6 joined
[05:27] *** reportable6 joined
[05:27] *** bloatable6 joined
[05:28] *** tellable6 joined
[05:28] *** nativecallable6 joined
[05:28] *** committable6 joined
[05:28] *** coverable6 joined
[05:29] *** shareable6 joined
[05:29] *** quotable6 joined
[05:29] *** notable6 joined
[05:29] *** sourceable6 joined
[05:29] *** unicodable6 joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:37] *** pamplemousse left
[06:40] *** pamplemousse joined
[06:48] *** habu joined
[06:48] *** habu left
[07:01] *** pamplemousse left
[08:01] *** linkable6 left
[08:01] *** evalable6 left
[08:01] *** linkable6 joined
[08:02] *** evalable6 joined
[08:02] *** Kaipei is now known as Kaiepi

[08:14] *** habere-et-disper joined
[08:27] *** deoac left
[08:28] <habere-et-disper> It would seem wonderful/magical to me if a recursive solution could be made dynamic with a single keyword, ie that `state` could apply to a `multi`...

[08:28] <habere-et-disper> But I see:

[08:28] <habere-et-disper> # Cannot use 'state' with individual multi candidates.

[08:28] <habere-et-disper> # Please declare an state-scoped proto instead

[08:31] <discord-raku-bot> <Nemokosch> what would this mean?

[08:34] <habere-et-disper> I'm hoping it would cache the results, so it reduces the number of calls a recursive solution makes...

[08:35] <habere-et-disper> Something like turning

[08:35] <habere-et-disper> m: multi fib (¬† 0 ) { 0 }

[08:35] <camelia> rakudo-moar dc180bd95: ( no output )

[08:35] <habere-et-disper> multi fib (¬† 1 ) { 1 }

[08:35] <habere-et-disper> multi fib ( \n ) {

[08:35] <habere-et-disper> ¬†¬†¬† fib( n - 1 ) + fib( n - 2 )

[08:35] <habere-et-disper> }

[08:35] <discord-raku-bot> <Nemokosch> why don't you use "is cached", then?

[08:35] <habere-et-disper> Into just:

[08:35] <habere-et-disper> m: state multi fib (¬† 0 ) { 0 }

[08:35] <camelia> rakudo-moar dc180bd95: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Cannot use 'state' with individual multi candidates. Please declare an state-scoped proto instead‚ê§at <tmp>:1‚ê§------> state multi fib (¬† 0 ) { 0 }‚èè<EOL>‚ê§¬ª

[08:35] <habere-et-disper> state multi fib (¬† 1 ) { 1 }

[08:35] <habere-et-disper> multi fib ( \n ) {

[08:35] <habere-et-disper> ¬†¬†¬† fib( n - 1 ) + fib( n - 2 )

[08:35] <habere-et-disper> }

[08:37] <habere-et-disper> I don't know how to use `is cached`. Sounds wonderful. Reading docs now. :)

[08:37] <discord-raku-bot> <Nemokosch> I didn't even know a function can be made static or how that would make sense

[08:37] <discord-raku-bot> <Nemokosch> anyway, it really seems to me that you just want cached

[08:44] <habere-et-disper> Hmmm...

[08:45] <habere-et-disper> m: use experimental :cached;

[08:45] <camelia> rakudo-moar dc180bd95: ( no output )

[08:45] <habere-et-disper> multi fib ( 0 ) is cached { 0 }

[08:45] <habere-et-disper> multi fib ( 1 ) is cached { 1 }

[08:45] <habere-et-disper> multi fib ( \n ) {

[08:45] <habere-et-disper> ¬†¬†¬† fib( n - 1 ) + fib( n - 2 )

[08:45] <habere-et-disper> }

[08:45] <habere-et-disper> When I run this locally, I get: <Constraint type check failed in binding to parameter '<anon>'; expected 0 but got 10>

[08:45] *** Sgeo left
[08:46] *** Sgeo joined
[08:49] <lizmat> habere-et-disper: confirmed

[08:50] <lizmat> I'd suggest to drop the "is cached"

[08:54] <habere-et-disper> That runs, but does not seem to cache it...

[08:54] <habere-et-disper> m: use experimental :cached;

[08:54] <camelia> rakudo-moar dc180bd95: ( no output )

[08:54] <habere-et-disper> my $GLOBAL = 0;

[08:54] <habere-et-disper> multi fib ( 0 ) { $GLOBAL++; 0 }

[08:54] <habere-et-disper> multi fib ( 1 ) { $GLOBAL++; 1 }

[08:54] <habere-et-disper> multi fib ( $n ) {

[08:54] <habere-et-disper> ¬†¬†¬† fib( $n-1 ) + fib( $n-2 )

[08:54] <habere-et-disper> }

[08:54] <habere-et-disper> say fib 10;

[08:54] <habere-et-disper> say $GLOBAL;

[08:55] <lizmat> ok, worthy of an issue

[08:56] <lizmat> workaround: drop the "is cached" on the multis, add a "proto fib(|) is cached {*}"

[08:56] <habere-et-disper> Or maybe it is? I'm trying to count the number of times it is called. I get 55/89

[08:57] <habere-et-disper> Thanks, that works! @lizmat++

[08:57] <habere-et-disper> I get 55/2 now!

[08:58] <lizmat> it is some kind of bug in dispatch of callsame, something that was semi-recently changed, so perhaps something has gone wrong there

[08:59] <lizmat> habere-et-disper: please also remember that "is cached" is *not* threadsafe in its current implementation

[09:00] <habere-et-disper> Noted. Experimental. Raku: the R&D division of perl. :)

[09:01] <lizmat> that's not how I see that :-)

[09:06] <discord-raku-bot> <Nemokosch> more like

[09:06] <discord-raku-bot> <Nemokosch> Raku: "they promised us unicorns"

[09:08] <lizmat> perhaps, but "they" left the project

[09:09] <lizmat> so you will have to make do with what is here now

[09:09] <lizmat> with an occasional rainbow

[09:11] <discord-raku-bot> <Nemokosch> Well this opens up the possibility to make junctions less anglocentric among other things üòõ

[09:33] <japhb> Anyone know the process to send in a TRC talk recording?  I must be missing something.

[09:46] *** linkable6 left
[09:46] *** evalable6 left
[09:47] <lizmat> I've pinged @andrewshitov on Twitter

[09:48] <japhb> Thanks lizmat.

[09:49] *** linkable6 joined
[09:49] *** evalable6 joined
[09:57] *** Sgeo left
[10:02] <lizmat> if I remember from last year, just make it available for download somewhere and tell Andrew the URL by mail / twitter / whatever :-)

[10:10] <japhb> Yeah, he sent me email.  I uploaded it and shared it with him.  :-)

[10:10] <japhb> And now ... sleep?

[10:10] <lizmat> well deserved!

[10:18] *** habere-et-disper left
[11:18] *** evalable6 left
[11:18] *** statisfiable6 left
[11:18] *** bisectable6 left
[11:18] *** linkable6 left
[11:18] *** notable6 left
[11:18] *** committable6 left
[11:18] *** unicodable6 left
[11:18] *** tellable6 left
[11:18] *** bloatable6 left
[11:18] *** reportable6 left
[11:18] *** releasable6 left
[11:18] *** quotable6 left
[11:18] *** shareable6 left
[11:18] *** nativecallable6 left
[11:18] *** squashable6 left
[11:18] *** sourceable6 left
[11:18] *** greppable6 left
[11:18] *** benchable6 left
[11:18] *** coverable6 left
[11:19] *** tellable6 joined
[11:19] *** bloatable6 joined
[11:19] *** shareable6 joined
[11:20] *** bisectable6 joined
[11:20] *** notable6 joined
[11:20] *** unicodable6 joined
[11:20] *** nativecallable6 joined
[11:20] *** linkable6 joined
[11:21] *** squashable6 joined
[11:21] *** evalable6 joined
[11:21] *** sourceable6 joined
[11:21] *** greppable6 joined
[11:21] *** committable6 joined
[11:21] *** coverable6 joined
[11:21] *** benchable6 joined
[11:21] *** statisfiable6 joined
[11:21] *** reportable6 joined
[11:21] *** releasable6 joined
[11:21] *** quotable6 joined
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:57] *** tejr left
[13:12] *** andm joined
[14:12] *** evalable6 left
[14:12] *** statisfiable6 left
[14:12] *** reportable6 left
[14:12] *** unicodable6 left
[14:12] *** bisectable6 left
[14:12] *** squashable6 left
[14:12] *** greppable6 left
[14:12] *** bloatable6 left
[14:12] *** shareable6 left
[14:12] *** nativecallable6 left
[14:12] *** quotable6 left
[14:12] *** benchable6 left
[14:12] *** releasable6 left
[14:12] *** sourceable6 left
[14:12] *** coverable6 left
[14:12] *** notable6 left
[14:12] *** tellable6 left
[14:12] *** linkable6 left
[14:12] *** committable6 left
[14:12] *** tellable6 joined
[14:13] *** reportable6 joined
[14:13] *** sourceable6 joined
[14:13] *** unicodable6 joined
[14:13] *** linkable6 joined
[14:13] *** bisectable6 joined
[14:13] *** evalable6 joined
[14:13] *** quotable6 joined
[14:13] *** greppable6 joined
[14:13] *** shareable6 joined
[14:14] *** squashable6 joined
[14:14] *** benchable6 joined
[14:14] *** notable6 joined
[14:14] *** coverable6 joined
[14:14] *** committable6 joined
[14:14] *** bloatable6 joined
[14:15] *** statisfiable6 joined
[14:15] *** nativecallable6 joined
[14:15] *** releasable6 joined
[14:33] *** [Coke] joined
[14:41] *** TieUpYourCamel left
[14:42] <[Coke]> .

[14:45] *** dogbert11 left
[14:56] *** frost left
[15:03] *** dogbert11 joined
[15:08] *** dogbert17 joined
[15:09] *** dogbert11 left
[15:12] *** solitario left
[15:13] *** dogbert17 left
[15:15] *** dogbert17 joined
[15:22] *** TieUpYourCamel joined
[15:23] *** solitario joined
[15:27] *** perlbot left
[15:28] *** perlbot joined
[15:59] *** pamplemousse joined
[16:15] *** squashable6 left
[16:18] *** squashable6 joined
[16:35] *** dogbert11 joined
[16:37] *** dogbert17 left
[16:40] *** dogbert11 left
[16:43] *** dogbert11 joined
[16:50] *** dogbert11 left
[16:53] *** andm left
[16:58] *** Xliff joined
[17:05] *** sena_kun joined
[17:19] *** dogbert11 joined
[17:57] *** Altai-man joined
[17:57] *** Altai-man left
[17:58] *** dogbert11 left
[17:58] *** dogbert11 joined
[18:02] <SmokeMachine> m: proto sub fib(UInt) is pure { * }; multi sub fib(1) { 1 }; multi sub fib(UInt $num) { fib($n - 1) + fib $n - 2 }; say fib 10

[18:02] <camelia> rakudo-moar dc180bd95: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Variable '$n' is not declared.  Perhaps you forgot a 'sub' if this was‚ê§intended to be part of a signature?‚ê§at <tmp>:1‚ê§------> ) { 1 }; multi sub fib(UInt $num) { fib(‚èè$n - 1) + fib $n - 2 ‚Ä¶¬ª

[18:03] <SmokeMachine> 19:02 <SmokeMachine> m: proto sub fib(UInt) is pure { * }; multi sub fib(1) { 1 }; multi sub fib(UInt $n) { fib($n - 1) + fib $n - 2 }; say fib 10

[18:03] *** pamplemousse left
[18:03] <SmokeMachine> m: proto sub fib(UInt) is pure { * }; multi sub fib(1) { 1 }; multi sub fib(UInt $n) { fib($n - 1) + fib $n - 2 }; say fib 10

[18:03] <camelia> rakudo-moar dc180bd95: OUTPUT: ¬´Constraint type check failed in binding to parameter '<anon>'; expected UInt but got Int (-1)‚ê§  in sub fib at <tmp> line 1‚ê§  in sub fib at <tmp> line 1‚ê§  in sub fib at <tmp> line 1‚ê§  in sub fib at <tmp> line 1‚ê§  in sub fib at <tmp> line 1‚ê§‚Ä¶¬ª

[18:07] <SmokeMachine> m: proto sub fib(UInt) is pure { * }; multi sub fib(1) { 1 }; multi sub fib(0) { 1 }; multi sub fib(UInt $n) { fib($n - 1) + fib $n - 2 }; say fib 10

[18:07] <camelia> rakudo-moar dc180bd95: OUTPUT: ¬´89‚ê§¬ª

[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:13] <SmokeMachine> m: proto sub fib(UInt) is pure { * }; multi sub fib(1) { 1 }; multi sub fib(0) { 1 }; multi sub fib(UInt $n) { say ‚Äúfib($n)‚Äù; fib($n - 1) + fib $n - 2 }; say fib 10; BAGIN say ‚ÄúBEGIN‚Äù

[18:13] <camelia> rakudo-moar dc180bd95: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    BAGIN used at line 1‚ê§‚ê§¬ª

[18:13] <SmokeMachine> m: proto sub fib(UInt) is pure { * }; multi sub fib(1) { 1 }; multi sub fib(0) { 1 }; multi sub fib(UInt $n) { say ‚Äúfib($n)‚Äù; fib($n - 1) + fib $n - 2 }; say fib 10; BEGIN say ‚ÄúBEGIN‚Äù

[18:13] <camelia> rakudo-moar dc180bd95: OUTPUT: ¬´BEGIN‚ê§fib(10)‚ê§fib(9)‚ê§fib(8)‚ê§fib(7)‚ê§fib(6)‚ê§fib(5)‚ê§fib(4)‚ê§fib(3)‚ê§fib(2)‚ê§fib(2)‚ê§fib(3)‚ê§fib(2)‚ê§fib(4)‚ê§fib(3)‚ê§fib(2)‚ê§fib(2)‚ê§fib(5)‚ê§fib(4)‚ê§fib(3)‚ê§fib(2)‚ê§fib(2)‚ê§fib(3)‚ê§fib(2)‚ê§fib(6)‚ê§fib(5)‚ê§fib(4)‚ê§fib(3)‚Ä¶¬ª

[18:14] *** dogbert17 joined
[18:14] *** dogbert11 left
[18:19] *** dogbert17 left
[18:27] *** dogbert17 joined
[18:40] *** deoac joined
[18:42] *** dogbert17 left
[18:46] *** dogbert17 joined
[18:55] *** dogbert17 left
[18:55] *** dogbert17 joined
[19:08] *** dogbert17 left
[19:13] *** sena_kun left
[19:15] *** sena_kun joined
[19:19] *** Sgeo joined
[19:41] <tbrowder> [Coke]: doc master branch fails xtest without my pr. so what should i do? i don‚Äôt know how to fix the doc test harness problem.

[19:42] <tbrowder> but i want to submit the revised pr before i forget about it   :-D

[19:47] *** dogbert17 joined
[20:47] *** notable6 left
[20:47] *** evalable6 left
[20:47] *** bisectable6 left
[20:47] *** shareable6 left
[20:47] *** bloatable6 left
[20:47] *** statisfiable6 left
[20:47] *** nativecallable6 left
[20:47] *** quotable6 left
[20:47] *** squashable6 left
[20:47] *** sourceable6 left
[20:47] *** committable6 left
[20:47] *** linkable6 left
[20:47] *** coverable6 left
[20:47] *** benchable6 left
[20:47] *** reportable6 left
[20:47] *** tellable6 left
[20:47] *** unicodable6 left
[20:47] *** releasable6 left
[20:47] *** greppable6 left
[20:47] *** committable6 joined
[20:48] *** greppable6 joined
[20:48] *** tellable6 joined
[20:48] *** squashable6 joined
[20:48] *** releasable6 joined
[20:49] *** evalable6 joined
[20:49] *** bloatable6 joined
[20:49] *** bisectable6 joined
[20:49] *** nativecallable6 joined
[20:49] *** linkable6 joined
[20:49] *** sourceable6 joined
[20:49] *** benchable6 joined
[20:49] *** notable6 joined
[20:50] *** shareable6 joined
[20:50] *** quotable6 joined
[20:50] *** statisfiable6 joined
[20:50] *** unicodable6 joined
[20:50] *** coverable6 joined
[20:50] *** reportable6 joined
[20:55] <Util> What is the difference of `$` and `$?` in a Signature,

[20:55] <Util> as in https://github.com/rakudo/rakudo/blob/master/src/core.c/hash_slice.pm6#L3 ?

[20:55] <Util> (SF.pm Raku Study Group wants to know)

[20:56] <lizmat> $ means a required positional in which we're not interested, so we didn't bother to give it a name

[20:56] <lizmat> $? is an optional positional in which we're not interested, also without name

[20:56] <lizmat> Util ^^

[20:57] <Util> lizmat: Thanks!

[20:58] <discord-raku-bot> <Nemokosch> Raku Study Group? What is that?

[21:02] <Util> Nemokosch: In progress right now on Zoom. Feel free to drop in. https://www.nntp.perl.org/group/perl.perl6.users/2022/08/msg10612.html

[21:02] <tellable6> Util, I'll pass your message to Nemokosch

[21:04] *** bdju left
[21:11] *** bdju joined
[21:42] *** sena_kun left
[22:42] *** linkable6 left
[22:42] *** statisfiable6 left
[22:42] *** greppable6 left
[22:42] *** coverable6 left
[22:42] *** committable6 left
[22:42] *** tellable6 left
[22:42] *** quotable6 left
[22:42] *** releasable6 left
[22:42] *** unicodable6 left
[22:42] *** sourceable6 left
[22:42] *** squashable6 left
[22:42] *** reportable6 left
[22:42] *** bisectable6 left
[22:42] *** notable6 left
[22:42] *** benchable6 left
[22:42] *** shareable6 left
[22:42] *** bloatable6 left
[22:42] *** nativecallable6 left
[22:42] *** evalable6 left
[22:43] *** benchable6 joined
[22:43] *** squashable6 joined
[22:43] *** tellable6 joined
[22:43] *** releasable6 joined
[22:43] *** linkable6 joined
[22:44] *** unicodable6 joined
[22:44] *** greppable6 joined
[22:44] *** committable6 joined
[22:44] *** bisectable6 joined
[22:44] *** nativecallable6 joined
[22:44] *** reportable6 joined
[22:44] *** bloatable6 joined
[22:44] *** statisfiable6 joined
[22:45] *** shareable6 joined
[22:45] *** notable6 joined
[22:45] *** evalable6 joined
[22:45] *** coverable6 joined
[22:45] *** sourceable6 joined
[22:45] *** quotable6 joined
[23:45] *** evalable6 left
[23:45] *** linkable6 left
[23:46] *** linkable6 joined
[23:48] *** evalable6 joined
