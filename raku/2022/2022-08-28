[00:07] *** reportable6 left
[00:08] *** reportable6 joined
[00:15] *** euandreh joined
[00:27] *** YULO left
[00:30] *** bigdata joined
[00:41] *** HvszrStykp joined
[01:25] *** otpv left
[01:27] *** razetime joined
[01:36] *** epony left
[01:48] *** epony joined
[01:56] *** [Coke] left
[02:04] *** [Coke] joined
[02:27] *** habere-et-disper left
[02:32] *** Furor joined
[02:34] *** Colere left
[02:36] *** Furor is now known as Colere

[03:36] *** linkable6 left
[03:36] *** evalable6 left
[03:39] *** linkable6 joined
[03:39] *** evalable6 joined
[04:29] *** razetime left
[04:35] *** vrurg left
[04:35] *** vrurg joined
[04:35] *** epony left
[04:55] *** vrurg_ joined
[04:55] *** vrurg left
[05:07] *** razetime joined
[05:19] *** mac joined
[05:39] *** mac left
[06:07] *** reportable6 left
[06:07] *** reportable6 joined
[06:54] *** YULO joined
[06:57] *** YULO left
[07:57] *** bloatable6 left
[07:57] *** benchable6 left
[07:57] *** nativecallable6 left
[07:57] *** tellable6 left
[07:57] *** linkable6 left
[07:57] *** reportable6 left
[07:57] *** quotable6 left
[07:57] *** shareable6 left
[07:57] *** unicodable6 left
[07:57] *** statisfiable6 left
[07:57] *** evalable6 left
[07:57] *** sourceable6 left
[07:57] *** bisectable6 left
[07:57] *** notable6 left
[07:57] *** greppable6 left
[07:57] *** squashable6 left
[07:57] *** committable6 left
[07:57] *** releasable6 left
[07:57] *** coverable6 left
[07:57] *** reportable6 joined
[07:58] *** greppable6 joined
[07:58] *** evalable6 joined
[07:58] *** coverable6 joined
[07:58] *** bloatable6 joined
[07:58] *** squashable6 joined
[07:58] *** shareable6 joined
[07:58] *** sourceable6 joined
[07:58] *** linkable6 joined
[07:59] *** notable6 joined
[07:59] *** quotable6 joined
[08:00] *** benchable6 joined
[08:00] *** committable6 joined
[08:00] *** releasable6 joined
[08:00] *** statisfiable6 joined
[08:00] *** unicodable6 joined
[08:00] *** tellable6 joined
[08:00] *** bisectable6 joined
[08:00] *** nativecallable6 joined
[08:10] *** sena_kun joined
[08:21] *** Sgeo left
[08:37] *** MoC joined
[08:47] *** frost joined
[09:18] *** sena_kun left
[09:21] *** sena_kun joined
[09:26] <leont> I seem to have finally reduced the dispatcher problem I was seeing yesterday

[09:26] <leont> m: class Foo { multi method foo(Str:D(Int:D) $foo = 1, |rest) {} }; Foo.new.foo

[09:26] <camelia> rakudo-moar 71f5c50be: OUTPUT: «Ambiguous call to 'foo(Foo: )'; these signatures all match:␤  (Foo: Str:D(Int:D):D $foo = 1, |rest)␤  (Foo: Str:D(Int:D):D $foo = 1, |rest)␤  in block <unit> at <tmp> line 1␤␤»

[09:33] <Voldenet> m: class Foo { multi method foo(Str:D(Int:D) $foo = 1) {} }; Foo.new.fo

[09:33] <camelia> rakudo-moar 71f5c50be: OUTPUT: «No such method 'fo' for invocant of type 'Foo'.  Did you mean any of␤these: 'foo', 'so'?␤  in block <unit> at <tmp> line 1␤␤»

[09:33] <Voldenet> m: class Foo { multi method foo(Str:D(Int:D) $foo = 1) {} }; Foo.new.foo

[09:33] <camelia> rakudo-moar 71f5c50be: OUTPUT: «Ambiguous call to 'foo(Foo: )'; these signatures all match:␤  (Foo: Str:D(Int:D):D $foo = 1, *%_)␤  (Foo: Str:D(Int:D):D $foo = 1, *%_)␤  in block <unit> at <tmp> line 1␤␤»

[09:33] <Voldenet> even more reduced

[09:34] <Voldenet> m: multi sub foo(Str:D(Int:D) $foo = 1) {}; foo

[09:34] <camelia> rakudo-moar 71f5c50be: OUTPUT: «Ambiguous call to 'foo(...)'; these signatures all match:␤  (Str:D(Int:D):D $foo = 1)␤  (Str:D(Int:D):D $foo = 1)␤  in block <unit> at <tmp> line 1␤␤»

[09:39] <leont> Actually, I think there are two different issues at place in my case, and I've reduced to the wrong one

[10:21] *** linkable6 left
[10:21] *** evalable6 left
[10:22] *** linkable6 joined
[10:24] *** evalable6 joined
[10:43] *** epony joined
[11:43] *** linkable6 left
[11:43] *** evalable6 left
[11:44] *** linkable6 joined
[11:46] *** evalable6 joined
[11:47] *** sena_kun left
[11:49] *** sena_kun joined
[11:50] *** habere-et-disper joined
[11:50] *** habere-et-disper left
[11:53] *** habere-et-disper joined
[12:07] *** reportable6 left
[12:08] *** reportable6 joined
[12:13] <tbrowder> some time ago we started a detailed doc on how to install rakudo on windows, but i can't find it. any link woul be appreciated. lots of chatter on use on windows on #raku-beginner and those folks could help with the missing doc. ... back later...bye

[12:44] *** habere-et-disper left
[12:46] *** kaskal left
[12:49] *** kaskal joined
[13:07] *** razetime left
[13:19] *** razetime joined
[13:44] *** frost left
[13:50] *** p6steve joined
[13:52] <p6steve> m: my @a = [[0,1],[2,3],[4,5]]; my @b = [Z] @a; say @b;

[13:52] <camelia> rakudo-moar 71f5c50be: OUTPUT: «[(0 2 4) (1 3 5)]␤»

[13:52] <p6steve> BUT ... I want to transpose my AoA to AoA, not to AoL ... 

[13:53] <p6steve> m: my @a = [[0,1],[2,3],[4,5]]; my Array() @b = [Z] @a; say @b;

[13:53] <camelia> rakudo-moar 71f5c50be: OUTPUT: «[[0 2 4] [1 3 5]]␤»

[13:54] <p6steve> https://en.wikipedia.org/wiki/Rubber_duck_debugging

[14:13] *** razetime left
[14:13] *** razetime joined
[14:38] *** andinus left
[14:38] *** andinus joined
[14:40] *** habere-et-disper joined
[14:59] *** razetime left
[14:59] *** razetime_ joined
[15:16] *** lizmat_ joined
[15:17] *** clarjon_1 joined
[15:18] *** archenoth joined
[15:18] *** silug1 joined
[15:18] *** ProperNoun joined
[15:19] *** lucs_ joined
[15:19] *** Furor joined
[15:20] *** ingy1 joined
[15:20] *** razetime_ left
[15:20] *** Woodi_ joined
[15:20] *** dutchie_ joined
[15:21] *** pjs_ joined
[15:21] *** ProperN[out] left
[15:21] *** perlmaros left
[15:21] *** Geth left
[15:21] *** merpaderp left
[15:21] *** dutchie left
[15:21] *** ingy left
[15:21] *** destroycomputers left
[15:21] *** pat_js left
[15:21] *** lucs left
[15:21] *** tejr left
[15:21] *** silug left
[15:21] *** Woodi left
[15:21] *** epony left
[15:21] *** Colere left
[15:21] *** clarjon1 left
[15:21] *** Oshawott left
[15:21] *** lizmat left
[15:21] *** ilogger2 left
[15:21] *** bdju left
[15:21] *** xkr47 left
[15:21] *** moritz_ left
[15:21] *** Scotteh_ left
[15:21] *** perlmaros joined
[15:21] *** xkr47 joined
[15:21] *** merpaderp joined
[15:21] *** moritz joined
[15:21] *** epony joined
[15:21] *** silug1 is now known as silug

[15:21] *** epony left
[15:21] *** epony joined
[15:21] *** ilogger2 joined
[15:22] *** Scotteh joined
[15:22] *** bdju joined
[15:22] *** destroycomputers joined
[15:25] *** tejr joined
[15:28] *** razetime joined
[15:32] *** Nick joined
[15:33] *** Nick left
[15:33] *** p6steve left
[15:35] *** p6steve joined
[15:43] *** habere-et-disper left
[15:45] *** vasko joined
[15:45] *** vasko left
[15:45] *** vasko joined
[16:11] <tbrowder>  .seen tadzik

[16:11] <tbrowder> .seen tadzik

[16:11] <tellable6> tbrowder, I saw tadzik 2021-07-21T07:49:00Z in #raku: <tadzik> .comb predates moarvm quite a lot, but the strands still fit :)

[16:15] *** bigdata left
[16:17] *** ToddAndMargo joined
[16:17] <ToddAndMargo> Hi All,  IS ther any chance of progress on this bug?

[16:17] <ToddAndMargo> https://github.com/perl-foundation-outreach/gsoc-2021-ideas/issues/4

[16:18] <ToddAndMargo> It is professionally embarfrasig to give a customer a program that takes 10 to 20 secobds to start running

[16:23] *** [Coke]_ joined
[16:24] *** [Coke] left
[16:29] <tbrowder> ToddAndMargo: have you optimized your program? Can you post your code somewhere?

[16:32] <tbrowder> has anyone had contact with tadzik lately? his Config::INI hasn't been touched since 2017. it has several outstanding issues and a pr.

[16:38] <ToddAndMargo> same code as was previously in Perl 5, but has grown a little.  It 11,629 lines long.  I suppose I could post it to paste bin.  But the problem is easily reproduce with any program.  Perl 5 is almost instantaneous.  What do you mean by optimize?  According to the bug report, second entry  "Most of the compile time is caused by the fact that

[16:38] <ToddAndMargo> grammars have not been optimized." Is this something I can do myself?

[16:41] *** lizmat_ left
[16:41] *** lizmat joined
[16:42] *** Geth joined
[16:49] <Voldenet> >It is professionally embarfrasig to give a customer a program that takes 10 to 20 secobds to start running

[16:49] <ToddAndMargo> all my typos are embarrassing too

[16:49] <Voldenet> I've shipped some monolythic apps that took longer to get up

[16:51] *** epony left
[16:58] <Voldenet> iirc there was some trick where you put your script in a module, so raku would precompile it

[16:59] *** sftp left
[17:06] <ToddAndMargo> The .precomp trick is not always practical.  Especially when troubleshoot code as it has to be compiled every time.  It would be idea if the issue could just be fixed.

[17:11] <Voldenet> Ok, I admit that it's sort of pain to work on script like that, maybe there's some sort of syntax that causes this slowdown?

[17:13] <Voldenet> the trick is to insert `BEGIN { say now; }` every now and then, it might help

[17:14] <Voldenet> the most problematic would be things altering the grammar (like custom operators)

[17:15] *** epony joined
[17:16] *** Woodi_ is now known as Woodi

[17:21] <Voldenet> I've made some script that's supposed to be reasonably slow, but you can see per-line timings before –stagestats http://ix.io/48X1

[17:26] <ToddAndMargo> take a look at the first entry on the bug report I made.  It included the stagestats

[17:39] *** razetime left
[18:01] <ToddAndMargo> Any chance of getting our intrepid heroes to work on solving this issue?

[18:03] <lizmat> getting more intrepid heroes would help

[18:07] *** reportable6 left
[18:10] *** reportable6 joined
[18:12] *** sftp joined
[18:42] *** ioh left
[18:44] *** ioh joined
[19:05] <tbrowder> ToddAndMargo: can you post your code somewhere, or is it secret? If want help you have to cooperate. Not putting code in a module bevause of debugging isn't a good excuse (I know, I do as you do sometime, but I usually have debug lines embedded).

[19:11] <ToddAndMargo> It is not secret.  The issue is not specific to my code though.  Is there some particular reason you want to troubleshoot against my code?  Any code will do.  The longer the better.  I am not after assistance with my code.  I only want the bug fixed.   Do you still need my code?  The code also uses six of my customer pm6 modules.  It will

[19:11] <ToddAndMargo> be a mess to post.

[19:16] <tbrowder> well don't then. you're not going to get any help by just complaining. but if you can zip up your code and put it in a public place, maybe someone can speed it up a little.

[19:17] <tbrowder> please don't put it here, though.

[19:19] <tbrowder> maybe attach it to email to a mailing list.

[19:19] <ToddAndMargo> I was seeking as to why you need my code specifically, sinc eit is reproducable on any code.  I will if yo really, really need mine specifically.

[19:19] <ToddAndMargo> I would probably tar.gz it.  Do you have access to Fedora Linux?

[19:22] *** Sgeo joined
[19:42] <tbrowder> todd, i don't understand that statement because from my Raku world view, i don't spend too much time analyzing build times. Unless you want to deal with core code, the only thing you can do is try to optimize your own code, and there MAY be something that can gain a few seconds. yes, i run linux, but debian. that may or may not be an issue.

[19:43] <tbrowder> i assume you always run the latest raku.

[19:44] *** [Coke]_ is now known as [Coke]

[19:45] <[Coke]> easiest thing to do: move the code to a module and have your main script load and run it.

[19:46] <tbrowder> yepp

[19:46] <tbrowder> er

[19:47] <tbrowder> and that should take place even if you are still debugging it.

[19:47] * [Coke] adds that note to the bug

[19:52] <[Coke]> any syntax for passing (e.g.) -3 to a program or do I need to parse args by hand for that?

[20:04] <Voldenet> > raku -e 'sub MAIN($n) { say $n }' – -3

[20:04] <Voldenet> erm

[20:05] <Voldenet> > raku -e 'sub MAIN($n) { say $n }' -- -3

[20:16] <ToddAndMargo> I am not looking for help on my code.  I do know about the .precomp work around.   I just want the bug fixed.   I have a lot of trouble understanding why Perl 5 compile 100 times faster.  My goal here is to get one of our intrepid heroes to fix the compile time.

[20:20] <Voldenet> "fix" would imply that it's broken, but it's simply slow

[20:21] <sena_kun> well, we can change the words, but not facts

[20:21] <sena_kun> I think the whole issue is a bit erm.

[20:21] <Voldenet> I believe that optimizing compile times is some goal in the long run, but isn't something that can be fixed overnight

[20:21] <sena_kun> misleading maybe

[20:22] <sena_kun> I mean, it's not like the core devs are not aware of the problem. like they have tons of free time, skills and passion under the belt and all that stops them from making the project fast now is cause nobody asked them

[20:23] <sena_kun> "oh yeah, how dumb I was, if only someone would tell me the compile time is slow, d'oh, now I'll go fix it, expect results in a week"

[20:24] <sena_kun> the real problem is lack of interest and thus maintainers

[20:24] <sena_kun> and it's not something one can solve, really

[20:24] <sena_kun> there are no successful strategies or "do this - get that" kind of thing

[20:25] <sena_kun> thousands of projects got started, a mere fraction gets successful due to how the cards lie on the table

[20:27] <ugexe> i laughed

[20:27] <Voldenet> good for you ;)

[20:29] <sena_kun> to be fair, I'm not blaming reporting problems as is, that's something we should probably do, but some requests are simply unreasonable

[20:34] <ToddAndMargo> 20 seconds or longer to start your program is embarrassing in front of a customer.  You can't even throw up a splash screen until after the compile

[20:35] <sena_kun> true

[20:35] <Voldenet> ToddAndMargo: but you can display splash screen before compilation ends

[20:36] <Voldenet> BEGIN { } will get executed before the code is parsed

[20:36] *** clarjon_1 left
[20:46] <Voldenet> consider this, process will start before parse is done: http://ix.io/48Yq

[20:47] <Voldenet> (in fact you can put that kill/await directly below BEGIN block)

[20:49] <[Coke]> Voldenet: I mean as a named arg

[20:50] <ToddAndMargo> I am going to have to try that BEGIN thing with a call to libnotify.  Cool

[21:32] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2022/08/28/data-sparkle/

[21:36] *** ioh left
[21:42] *** sena_kun left
[22:19] *** ToddAndMargo left
[22:51] *** MoC left
[23:43] *** euandreh left
[23:44] *** euandreh joined
