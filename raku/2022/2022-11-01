[00:00] <guifa_> hmm, weird

[00:02] <guifa_> I have a subclass B of a subclass A of Hash.  The A subclass overrides AT-KEY / SET-KEY, and the B subclass doesn't define anything for it.  But Raku hangs on calling AT-KEY for B and based on say statements, never calls the A method.

[00:02] <discord-raku-bot> <Nemokosch> are they not submethods by any chance?

[00:07] <guifa_> they're just plain methods, which should mask the Hash implementation (confirmed by .^mro)

[00:07] <guifa_> I'll try submethod

[00:07] <guifa_> something feels fishy but I haven't figured out how to figure out the MRO for a method (just for the type)

[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[00:13] <discord-raku-bot> <Nemokosch> yeah I mean who am I trying to fool, you probably wouldn't fall into that trap

[00:14] <guifa_> well that's just the thing, I feel like I *must* be falling into some trap

[00:23] <discord-raku-bot> <Anton Antonov> The trap falling into will continue until raccoons improve.

[00:28] <guifa_> What's stranger about this one is I swear it worked just fine at some point a while ago

[00:29] <guifa_> BUt this is in my CLDR module so golfing it down will take me a while

[00:30] <guifa_> it's an easy enough work around for now (just explicitly giving B an AT-KEY / SET-KEY method, which just call self.Hash::AT-KEY or bomb for SET-KEY) but still, it's weird

[00:46] *** Kaiepi left
[01:21] <discord-raku-bot> <Nemokosch> is there any sort of Raku integration for the `file` program?

[01:46] *** evalable6 left
[01:46] *** linkable6 left
[01:48] *** evalable6 joined
[01:48] *** linkable6 joined
[01:53] *** epony left
[01:55] *** epony joined
[01:56] *** archenoth left
[01:56] <discord-raku-bot> <Anton Antonov> <@297037173541175296> What is th `file` program?

[01:56] <discord-raku-bot> <Anton Antonov> <@297037173541175296> What is the  `file` program?

[01:57] *** archenoth joined
[02:06] *** archenoth left
[02:12] *** archenoth joined
[02:28] <tbrowder>  tonyo: no disrespect, but csv module from tux has an API that doesn't work with my coding style.

[02:32] *** perlbot left
[02:32] *** simcop2387 left
[02:33] *** perlbot joined
[02:36] *** simcop2387 joined
[02:39] <tonyo>  none taken ! I usually ask so when I design other things I can consider how others prefer things to be

[02:48] *** coleman left
[02:48] *** coleman joined
[02:55] <japhb> Anton Antonov: `file` is a Unix/Linux standard command for guessing file type based on the file's *contents*, rather than on extension (as is common on Windows, for instance).

[02:56] <japhb> The Mac folk have (or had, at least) yet another different method for this, based on marking binary files with 4-character type identifiers.

[03:04] *** donpdonp is now known as donpdonp|z

[03:57] *** epony left
[03:59] *** epony joined
[04:11] *** gordonfish left
[04:12] *** gordonfish joined
[04:13] *** aqua2 left
[04:13] *** nine left
[04:14] *** nine joined
[04:14] *** aqua2 joined
[04:18] *** archenoth left
[04:25] *** Kaiepi joined
[04:29] *** archenoth joined
[04:39] *** simcop2387_ joined
[04:40] *** simcop2387 left
[04:41] *** simcop2387_ is now known as simcop2387

[04:43] *** archenoth left
[04:50] *** coleman left
[04:52] *** coleman joined
[05:03] *** lucerne left
[06:02] *** epony left
[06:05] *** epony joined
[06:08] *** reportable6 left
[06:10] *** reportable6 joined
[06:49] *** epony left
[07:03] *** epony joined
[07:09] *** epony left
[07:10] *** epony joined
[07:19] *** lucerne joined
[07:25] *** Sgeo left
[07:36] *** lucerne left
[07:39] *** archenoth joined
[07:48] *** archenoth left
[07:48] *** [Coke]_ joined
[07:49] *** archenoth joined
[07:52] *** [Coke] left
[07:52] *** jjido joined
[07:58] *** archenoth left
[07:59] *** archenoth joined
[08:08] *** archenoth left
[08:09] *** archenoth joined
[08:14] *** xinming joined
[08:18] *** archenoth left
[08:19] *** archenoth joined
[08:28] *** archenoth left
[08:49] *** archenoth joined
[08:58] *** sena_kun joined
[09:00] *** lichtkind joined
[09:00] *** [Coke] joined
[09:01] *** Kaiepi left
[09:03] *** [Coke]_ left
[09:12] *** discord-raku-bot left
[09:13] *** archenoth left
[09:14] *** jjido left
[09:17] *** discord-raku-bot joined
[09:17] *** discord-raku-bot left
[09:23] *** discord-raku-bot joined
[09:29] *** Grrrr left
[09:32] *** Grrrr joined
[09:39] *** archenoth joined
[09:43] *** Grrrr left
[09:49] *** lucerne joined
[09:50] <discord-raku-bot> <Anton Antonov> @japhb Thank you for your clarifications!

[09:52] *** discord-raku-bot left
[09:52] *** discord-raku-bot joined
[10:04] *** Kaiepi joined
[10:11] *** lucerne left
[10:12] *** frost77 joined
[10:13] *** archenoth left
[10:17] <tbrowder> tonyo: also, that module needs to be updated to fit better into current practice like github workflow testing, more info in README, etc., i.e., it also needs an Apo::Mi6 makeover

[10:19] <discord-raku-bot> <Nemokosch> Hey, that doesn't sound like a problem to me, I like to renovate stuff

[10:21] <discord-raku-bot> <Nemokosch> I prefer fixing modules over creating yet another module

[10:54] *** archenoth joined
[11:03] *** [Coke]_ joined
[11:05] *** [Coke] left
[11:08] *** archenoth left
[11:13] * lizmat clickbaits https://rakudoweekly.blog/2022/10/31/2022-44-prename/

[11:17] *** discord-raku-bot left
[11:17] *** discord-raku-bot joined
[11:19] *** eseyman left
[11:23] <guifa_> japhb: yeah, resource forks are mostly gone in the Mac world.  Since most other OSes / file systems (I think it was more embedded in the FS iirc) don't really have an equivalent, it meant the potential for lossy data transfers between systems unless you were being very careful.  But they were really useful used well

[11:33] *** [Coke]_ left
[11:35] *** [Coke] joined
[11:36] <Geth> Â¦ problem-solving: 2colours assigned to codesections Issue Raku / Perl 6 books - CCR measures and beyond https://github.com/Raku/problem-solving/issues/349

[11:47] *** [Coke] left
[11:49] *** [Coke] joined
[11:53] *** jjido joined
[11:54] *** [Coke]_ joined
[11:56] *** [Coke] left
[12:00] *** [Coke]_ left
[12:05] *** Kaipei joined
[12:05] *** frost77 left
[12:07] *** reportable6 left
[12:08] *** Kaiepi left
[12:08] *** reportable6 joined
[12:09] *** jjido left
[12:14] *** [Coke] joined
[12:25] *** vrurg_ joined
[12:27] *** vrurg left
[12:27] *** lucerne joined
[12:33] *** Kaipei left
[12:46] *** Kaipei joined
[12:57] *** [Coke]_ joined
[12:59] *** Kaipei left
[13:00] *** derpydoo joined
[13:00] *** [Coke] left
[13:02] *** abraxxa-home joined
[13:06] *** [Coke] joined
[13:09] *** [Coke]_ left
[13:13] *** archenoth joined
[13:15] *** [Coke]_ joined
[13:18] *** [Coke] left
[13:30] <discord-raku-bot> <Anton Antonov> @lizmat Thanks for finding out (and placing) the conference and video links for my presentation in the last Rakudoweekly post!

[13:32] *** discord-raku-bot left
[13:32] *** discord-raku-bot joined
[13:34] *** [Coke] joined
[13:36] *** [Coke]_ left
[13:36] *** discord-raku-bot left
[13:37] *** discord-raku-bot joined
[13:53] *** Kaipei joined
[14:09] *** eseyman joined
[14:12] <discord-raku-bot> <Nemokosch> Can somebody confirm that `zef --help` writes onto stderr?

[14:24] *** lucerne left
[14:32] *** Sgeo joined
[14:55] <discord-raku-bot> <Nemokosch> Another one: what do you think of ().min producing Inf and ().max producing -Inf?

[14:56] <discord-raku-bot> <Nemokosch> Seems random to me and I couldn't find it in the docs, or any related issues

[15:07] <dutchie> logical enough

[15:10] <dutchie> the idea is that `@a.min min @b.min == (@a, @b).flat.min` is always true even either of @a or @b is empty

[15:10] <dutchie> so .min of an empty list should return an "identity"

[15:10] <discord-raku-bot> <Nemokosch> I would say not enough, actually

[15:11] *** Zero_Dogg left
[15:11] <discord-raku-bot> <Nemokosch> This could be achieved with Nil as well

[15:11] *** Zero_Dogg joined
[15:12] <dutchie> what about ().sum?

[15:12] <dutchie> it's the same idea

[15:12] <discord-raku-bot> <Nemokosch> and I think any argument that applies in numeric context, actually fails when the empty list is not an empty *numeric* list

[15:12] <discord-raku-bot> <Nemokosch> including your very example

[15:14] <dutchie> i guess it also falls apart a bit with a &by argument

[15:14] <discord-raku-bot> <Nemokosch> The problem is that .min makes sense in non-numeric contexts and it does work in general

[15:15] <discord-raku-bot> <Nemokosch> that's unlike .sum

[15:18] *** TieUpYourCamel left
[15:18] *** archenoth left
[15:19] <discord-raku-bot> <Nemokosch> So I think Nil (or even Any) would be a better default, or at least this behavior should be documented, pointing out the special behavior of Inf (~~ Numeric) with regards to non-numeric situations

[15:19] *** archenoth joined
[15:20] *** TieUpYourCamel joined
[15:22] *** jmcgnh left
[15:23] <discord-raku-bot> <Nemokosch> Usually when I ask these questions, the background motive is "should I open an issue for it or not"

[15:32] *** jmcgnh joined
[15:33] <dutchie> imo it's worth opening it to discussion with people who aren't paying attention to this chatroom right now

[15:36] *** [Coke]_ joined
[15:38] *** [Coke] left
[15:48] *** archenoth left
[15:49] *** archenoth joined
[16:03] *** archenoth left
[16:04] *** archenoth joined
[16:08] <tonyo> fez v38 is out in the world now, major change is using `pax` as the bundler rather than `git`/`tar`..people that were using git will see the files on disk (rather than committed to the branch) bundled rather than what was committed 

[16:08] *** justache is now known as justPardoned

[16:17] *** derpydoo left
[16:22] *** archenoth left
[16:24] *** archenoth joined
[16:33] *** Sgeo_ joined
[16:37] *** Sgeo left
[16:39] *** lucerne joined
[16:58] *** archenoth left
[16:59] *** archenoth joined
[17:15] <[Coke]_> TIL about pax

[17:15] *** [Coke]_ is now known as [Coke]

[17:27] *** derpydoo joined
[17:28] *** thundergnat joined
[17:29] <thundergnat> <Nemokosch> is there any sort of Raku integration for the `file` program? - Not exactly, but https://raku.land/github:thundergnat/Filetype::Magic uses libmagic, which id what File uses to determine file types.

[17:29] <tonyo> tbrowder: just pushed some fixes/enhancements for CSV

[17:29] *** thundergnat left
[17:31] <tonyo> please checkout 0.1.3 and lmk how it goes

[17:37] *** derpydoo left
[17:39] *** derpydoo joined
[17:41] *** abraxxa-home left
[17:41] <discord-raku-bot> <Nemokosch> thundergnat: this is really nice, I will check it for sure

[17:43] *** _________ left
[17:45] *** _________ joined
[18:08] *** reportable6 left
[18:09] *** reportable6 joined
[18:26] *** Kaipei left
[18:40] *** swaggboi left
[19:02] *** swaggboi joined
[19:06] *** jjido joined
[19:09] *** swaggboi left
[19:15] *** Xliff joined
[19:15] <Xliff> \o

[19:15] <Xliff> Raku bindings for GDK4 are now a thing...

[19:21] <Xliff> https://github.com/Xliff/raku-GDK4

[19:21] *** swaggboi joined
[19:23] <discord-raku-bot> <Nemokosch> what is GDK?

[19:27] <discord-raku-bot> <Superstart033> I want to know too

[19:27] <Xliff> Nemokosch: Part of the Gnome Took Kit (GTK)

[19:27] <tellable6> Xliff, I'll pass your message to Nemokosch

[19:28] <Xliff> And GTK is this thing: https://docs.gtk.org/gtk4/getting_started.html

[19:29] <discord-raku-bot> <Superstart033> LOL, game dev in Raku is real!

[19:30] <Xliff> Not quite yet.

[19:30] <Xliff> But getting there.... maybe...

[19:30] <Xliff> And TUI games in Raku are already possible.

[19:31] <discord-raku-bot> <Superstart033> So that means a roguelike is possible?

[19:31] <Xliff> Oh, definitely.

[19:32] <Xliff> Please note, work on GDK4 has just started.

[19:32] <Xliff> I don't plan on starting work on GTK4 until late Q2 2023.

[19:43] <discord-raku-bot> <Superstart033> I see

[19:43] <discord-raku-bot> <Superstart033> Then what would you recommend right now for TUI apps?

[19:59] *** jjido left
[20:01] *** sena_kun left
[20:02] *** sena_kun joined
[20:03] *** archenoth left
[20:04] *** archenoth joined
[20:06] <tbrowder> tonyo: thnx, iâll check it out

[20:11] *** habere-et-disper joined
[20:18] *** archenoth left
[20:22] *** derpydoo left
[20:23] <tonyo> also, tbrowder feel free to PM me whenever if you're having something with a module.  i get 1k + github notifications a day from work and they get lost in the sauce

[20:29] <discord-raku-bot> <Nemokosch> japhb has a solid portfolio of Terminal-related modules

[20:35] <tbrowder> tonyo: wilco

[20:44] *** derpydoo joined
[20:47] <tbrowder> tonyo: i'm swamped with non-raku business rest of day, hopefully will check out CSV tomorrow

[20:53] *** habere-et-disper left
[20:58] *** sena_kun left
[21:03] *** epony left
[21:04] *** epony joined
[21:14] *** swaggboi left
[21:16] *** Xliff_ joined
[21:19] *** Xliff left
[21:24] *** swaggboi joined
[21:26] *** [Coke]_ joined
[21:26] <japhb> Superstart033: Talk discussing Terminal-related modules: https://conf.raku.org/talk/178

[21:28] *** phogg joined
[21:29] *** [Coke] left
[21:33] *** lichtkind left
[21:35] <discord-raku-bot> <Superstart033> Thanks

[21:36] *** phogg left
[21:36] *** phogg joined
[21:40] *** [Coke] joined
[21:43] *** [Coke]_ left
[21:52] <japhb> Of course!

[21:56] <discord-raku-bot> <Nemokosch> I'm starting to realize that the "smartmatch with S///" problem boils down to the fact that smartmatch drifted away from its principle

[21:58] <discord-raku-bot> <Nemokosch> it is treated as something that only makes sense in boolean context / always produces boolean values

[21:58] <discord-raku-bot> <Nemokosch> however, this is not true, and it is not true exactly around regexes

[22:08] *** dustinm` left
[22:20] *** Kaipei joined
[22:25] <discord-raku-bot> <Nemokosch> I wanted to use this long weekend for an issue dump but eventually I only managed like one or two

[22:29] *** dustinm` joined
[22:43] *** lucerne left
[23:23] *** jjido joined
[23:25] *** habere-et-disper joined
[23:58] *** discord-raku-bot left
[23:58] *** discord-raku-bot joined
[23:58] *** derpydoo left
