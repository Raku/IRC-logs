[00:01] *** gugod joined
[00:05] *** MasterDuke left
[00:06] *** Kaipei is now known as Kaiepi

[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[00:41] <Voldenet> regarding improving camelia: consider handling discord-raku-bot's `m:` statement

[00:42] <Voldenet> otherwise it's minor pain for people using discord

[00:43] <Voldenet> (I'm not sure where would I suggest this)

[01:00] *** markmarkmark left
[01:00] *** summerisle left
[01:01] *** summerisle joined
[01:14] *** markmarkmark joined
[02:14] *** evalable6 left
[02:14] *** linkable6 left
[02:14] *** evalable6 joined
[02:16] *** linkable6 joined
[02:58] *** summerisle left
[02:58] *** Util left
[03:02] *** summerisle joined
[03:26] *** frost joined
[04:26] *** reportable6 left
[04:26] *** bisectable6 left
[04:26] *** sourceable6 left
[04:26] *** benchable6 left
[04:26] *** statisfiable6 left
[04:26] *** linkable6 left
[04:26] *** evalable6 left
[04:26] *** quotable6 left
[04:26] *** releasable6 left
[04:26] *** nativecallable6 left
[04:26] *** tellable6 left
[04:26] *** committable6 left
[04:26] *** coverable6 left
[04:26] *** bloatable6 left
[04:26] *** notable6 left
[04:26] *** greppable6 left
[04:26] *** unicodable6 left
[04:26] *** shareable6 left
[04:27] *** bloatable6 joined
[04:27] *** benchable6 joined
[04:27] *** evalable6 joined
[04:27] *** quotable6 joined
[04:27] *** statisfiable6 joined
[04:27] *** committable6 joined
[04:27] *** bisectable6 joined
[04:28] *** shareable6 joined
[04:28] *** linkable6 joined
[04:28] *** releasable6 joined
[04:29] *** reportable6 joined
[04:29] *** nativecallable6 joined
[04:29] *** unicodable6 joined
[04:29] *** sourceable6 joined
[04:29] *** greppable6 joined
[04:29] *** tellable6 joined
[04:29] *** notable6 joined
[04:29] *** coverable6 joined
[05:08] *** frost left
[05:23] *** frost joined
[06:04] *** silug5 joined
[06:04] *** silug left
[06:04] *** silug5 is now known as silug

[06:07] *** reportable6 left
[06:09] *** abraxxa joined
[06:10] *** reportable6 joined
[06:13] *** nort joined
[06:16] *** abraxxa left
[06:16] *** abraxxa joined
[06:24] *** nort left
[06:47] *** p6steve left
[06:52] *** nort joined
[06:57] *** lichtkind__ joined
[07:11] *** frost left
[07:14] *** frost joined
[07:37] *** _________ left
[07:53] *** Sgeo left
[08:05] *** discord-raku-bot left
[08:05] *** discord-raku-bot joined
[08:10] *** dakkar joined
[08:23] *** MasterDuke joined
[08:38] *** mexen joined
[08:40] *** Xliff joined
[09:06] *** abraxxa left
[09:06] *** abraxxa joined
[09:15] *** lichtkind_ joined
[09:18] *** lichtkind__ left
[09:58] *** frost left
[10:01] <kawaii>     method mint(UInt $value) {

[10:01] <kawaii>         if !self.is-frozen {

[10:01] <kawaii>             Transaction.^create(batch => UUID.new, :$value, from-account => 'mint', to-account => self.account, termination-point => 'system');

[10:01] <kawaii>             say "✓ minted $value tokens for account: $!account";

[10:01] <kawaii>         } else {

[10:01] <kawaii>             X::Mint::Account::IsFrozen.new(:$!account).throw;

[10:01] <kawaii>             CATCH { when X::Mint::Account::IsFrozen { .resume } }

[10:01] <kawaii>         }

[10:01] <kawaii>     }

[10:01] <kawaii> ah why did that paste directly

[10:01] <kawaii> I think I have some misconception about Exceptions in Raku, I want to both display the error message from the exception to the user, without also killing the program?

[10:02] <kawaii> try/CATCH both seem to swallow the .message from my exception however 

[10:03] <kawaii> I seem to either only be able to have my exception print it's .message in the console and kill the program, or not kill the program but provide no output :(

[10:07] <moritz> m: sub dangerous { die "oh noez"} ; try dangerous(); say $! if $!; say "I'm still standing"

[10:07] <camelia> rakudo-moar f2546b446: OUTPUT: «oh noez␤  in sub dangerous at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤I'm still standing␤»

[10:07] <moritz> kawaii: ^^ something like that?

[10:07] <moritz> I think in your sample code the .resume is wrong

[10:08] <moritz> just print it there? or do nothing

[10:12] <kawaii> moritz: so you're right in the sense that doing this works `CATCH { when X::Mint::Account::IsFrozen { say("✗ account '$!account' is frozen and thus immutable") } }` but it makes me wonder why I would bother to have any error message in the Exception itself at all `class X::Mint::Account::IsFrozen is Exception { has $.account; has $.message = "✗ account '$!account' is frozen and thus immutable"; }`

[10:24] *** frost joined
[10:31] <moritz> kawaii: the point is that as the author of the code that raises the exception, you cannot be sure it'll only be called in context where it is specifically caught

[10:32] <moritz> so you give it a good message in case it's raised and not caught, and also makes debugging easier

[10:32] <moritz> or maybe somebody catches many possible exception classes, logs the error

[10:35] <Voldenet> Error message in Exception is not necessary in any language

[10:36] <Voldenet> but a lot of times you define exceptions that aren't this precise

[10:38] <moritz> in python, anytime any value is slightly unexpected, it's a ValueError. Easy to remember, hard to distinguish between different ValueErrors

[10:39] <moritz> it's tradeoffs all the way down :D

[10:39] <kawaii> I think I understand a little better now, thanks for the explanations 

[10:44] <moritz> you're welcome

[11:05] *** jmcgnh left
[11:11] *** jmcgnh joined
[11:26] *** frost left
[11:48] <Xliff> Does anyone know if you can create a derivative Signature from another Signature?

[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:13] <Xliff> m: sub a ("a", "b", $c, :$d) { }; Signature.new( params => &a.signature.params[1..*] ).gist.say

[12:13] <camelia> rakudo-moar f2546b446: OUTPUT: «("b", Any $c, Any :$d --> Mu)␤»

[12:13] <Xliff> That looks promising.

[12:14] <Xliff> &a.signature.head.say

[12:14] <Xliff> m: &a.signature.head.say

[12:14] <camelia> rakudo-moar f2546b446: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared routine:␤    a used at line 1␤␤»

[12:15] <Xliff> m: sub a ("a", "b", $c, :$d) { }; &a.signature.head.say

[12:15] <camelia> rakudo-moar f2546b446: OUTPUT: «("a", "b", $c, :$d)␤»

[12:15] <Xliff> m: sub a ("a", "b", $c, :$d) { }; &a.signature.params.head.say

[12:15] <camelia> rakudo-moar f2546b446: OUTPUT: «"a"␤»

[12:20] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/06/14/2022-24-conference-2022/

[12:20] <sienet_ja_LSD[m]> nice, nice

[12:24] <Xliff> How many tests are currently in roast?

[12:27] *** [Coke] left
[12:28] *** [Coke] joined
[12:29] <lizmat> Files=1353, Tests=116312

[12:33] <Xliff> Oh. 900 files left for RakuAST. Nice round number! ;)

[12:52] *** Util joined
[13:03] *** morte_ joined
[13:07] <sienet_ja_LSD[m]> how do I coerce a scalar (that could be either Int or Rat) to uint8? there's no method like .Int

[13:09] <lizmat> m: my uint $a = $value.Int

[13:09] <camelia> rakudo-moar f2546b446: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '$value' is not declared.  Did you mean '&values'?␤at <tmp>:1␤------> my uint $a = ⏏$value.Int␤»

[13:09] <lizmat> m: my uint $a = 4.5.Int

[13:09] <camelia> rakudo-moar f2546b446: ( no output )

[13:09] <lizmat> m: my uint $a = 255.5.Int; say $a

[13:09] <camelia> rakudo-moar f2546b446: OUTPUT: «255␤»

[13:09] <lizmat> m: my uint $a = 256.5.Int; say $a

[13:09] <camelia> rakudo-moar f2546b446: OUTPUT: «256␤»

[13:09] <lizmat> m: my uint8 $a = 256.5.Int; say $a

[13:09] <camelia> rakudo-moar f2546b446: OUTPUT: «0␤»

[13:10] <lizmat> sienet_ja_LSD[m] ^^

[13:10] <sienet_ja_LSD[m]> alright, that should do it. thank you

[13:16] *** jgaz joined
[13:26] *** Sankalp left
[13:27] *** Sankalp joined
[13:29] *** jgaz left
[13:32] *** Sankalp left
[13:37] *** Sankalp joined
[14:00] <[Coke]> m: my uint $a = 121; dd $a.WHAT

[14:00] <camelia> rakudo-moar f2546b446: OUTPUT: «Int␤»

[14:01] <[Coke]> m: my uint $a = 121; put $a.WHAT

[14:01] <camelia> rakudo-moar f2546b446: OUTPUT: «Use of uninitialized value of type Int in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤␤  in block <unit> at <tmp> line 1␤»

[14:02] <[Coke]> If I do $a.WHAT in the REPL, I get Cannot invoke object of type 'NQPMu'

[14:02] <[Coke]> m: my uint $a = 121; say $a.WHAT

[14:02] <camelia> rakudo-moar f2546b446: OUTPUT: «(Int)␤»

[14:02] <[Coke]> I can't seem to get it to explode here

[14:06] <uzl[m]> patrickb: The "Think X" series is more CS and programming basics than language-centric per se. I think Laurent Rosenfeld did a great job at both teaching the CS concepts discussed in the book through a Raku lense

[14:07] <uzl[m]> lizmat++ for the weekly!

[14:12] *** Sgeo joined
[14:25] *** _________ joined
[14:50] <Xliff> If I have a parameter that is constant. How can I pull out that value?

[14:50] <Xliff> I am speaking in terms of the Parameter class.

[14:51] *** peder left
[14:51] <Xliff> So in "sub a ("b") { ... }", I can get the parameter by "$p = &a.signature.params[0]", but how do I get $p to print "b"?

[14:52] <moritz> it's in .constraints

[14:52] <MasterDuke> m: sub a ("b") { ... }; my $p = &a.signature.params[0]; say $p.constraints

[14:52] <camelia> rakudo-moar f2546b446: OUTPUT: «all(b)␤»

[14:53] <MasterDuke> m: sub a ("b") { ... }; my $p = &a.signature.params[0]; say $p.constraint_list

[14:53] <camelia> rakudo-moar f2546b446: OUTPUT: «(b)␤»

[14:53] <moritz> m: sub a ("b") { ... }; my $p = &a.signature.params[0]; say  $p.constraint_list[0]

[14:53] <camelia> rakudo-moar f2546b446: OUTPUT: «b␤»

[14:54] <Xliff> Ah, thanks!

[14:56] <Geth> ¦ ecosystem/add-raku-mint-module: 4ed73776d4 | (Keyn Valentayn)++ (committed using GitHub Web editor) | META.list

[14:56] <Geth> ¦ ecosystem/add-raku-mint-module: Add Mint module to ecosystem

[14:56] <Geth> ¦ ecosystem/add-raku-mint-module: 

[14:56] <Geth> ¦ ecosystem/add-raku-mint-module: https://github.com/shuppet/raku-mint

[14:56] <Geth> ¦ ecosystem/add-raku-mint-module: review: https://github.com/Raku/ecosystem/commit/4ed73776d4

[14:57] <Geth> ¦ ecosystem: kawaii++ created pull request #605: Add Mint module to ecosystem

[14:57] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/605

[14:57] *** peder joined
[15:03] <Voldenet> m: sub a ("b") { … }; my $str; { my $*OUT = class :: { method print($b) { $str = $b.trim; } }.new; say &a.signature.params[0]; }; say $str

[15:03] <camelia> rakudo-moar f2546b446: OUTPUT: «"b"␤»

[15:03] <Voldenet> Does the job in this case, otherwise entirely useless

[15:05] <Voldenet> i found it funny though

[15:08] <Geth> ¦ ecosystem: 4ed73776d4 | (Keyn Valentayn)++ (committed using GitHub Web editor) | META.list

[15:08] <Geth> ¦ ecosystem: Add Mint module to ecosystem

[15:08] <Geth> ¦ ecosystem: 

[15:08] <Geth> ¦ ecosystem: https://github.com/shuppet/raku-mint

[15:08] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/4ed73776d4

[15:08] <Geth> ¦ ecosystem: ca2ca916ea | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[15:08] <Geth> ¦ ecosystem: Merge pull request #605 from Raku/add-raku-mint-module

[15:08] <Geth> ¦ ecosystem: 

[15:09] <Geth> ¦ ecosystem: Add Mint module to ecosystem

[15:09] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/ca2ca916ea

[15:25] *** lichtkind_ left
[15:33] *** dakkar left
[15:34] <uzl[m]> m: say 0 max False

[15:34] <camelia> rakudo-moar f2546b446: OUTPUT: «0␤»

[15:35] <uzl[m]> m: say False max 0

[15:35] <camelia> rakudo-moar f2546b446: OUTPUT: «False␤»

[15:39] <Geth> ¦ doc: uzluisf++ created pull request #4084: Make &[max] and &[min] return LHS for ties

[15:39] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4084

[15:50] <[Coke]> uzl[m]++

[15:50] <[Coke]> I may have a small edit on that to specifically call out Rakudo version, but otherwise seems fine.

[15:51] <[Coke]> (we have a long standing request about having a specific way to mark items that deal with specific versions but we don't have to solve that before applying this commit.)

[16:00] *** Colere left
[16:06] *** Colere joined
[16:08] *** Furor joined
[16:10] *** Lemniscate joined
[16:11] *** Colere left
[16:14] *** Furor left
[16:14] *** Colere joined
[16:17] *** Lemniscate left
[16:23] *** perlbot left
[16:25] *** perlbot joined
[17:18] *** abraxxa left
[17:34] <uzl[m]> [Coke]: That sounds fine to me 👍️ 

[17:36] <uzl[m]> Note there's a small discrepancy between my commit message and the one is documenting, namely the "return [LHS|RHS] for ties" part. Probably codesections made a typo there, and used RHS instead of LHS

[17:38] <uzl[m]> <uzl[m]> "codesections: Do you mind..." <- ^ I asked codesections for clarification but he's not around apparently... However from the behavior described and the example, it seems LHS is the right terminology here

[18:06] *** reportable6 left
[18:09] *** reportable6 joined
[18:10] *** samcv joined
[18:13] *** __________ joined
[18:13] *** jrjsmrtn_ joined
[18:16] *** _________ left
[18:16] *** __________ left
[18:17] *** timo1 joined
[18:17] *** _________ joined
[18:18] *** [Coke] left
[18:18] *** lizmat left
[18:18] *** timo left
[18:18] *** corwin left
[18:18] *** samcv_ left
[18:18] *** dustinm` left
[18:18] *** thowe left
[18:18] *** jrjsmrtn left
[18:18] *** donpdonp- left
[18:20] *** [Coke] joined
[18:21] *** thowe joined
[18:22] *** __________ joined
[18:22] *** donpdonp- joined
[18:22] *** _________ left
[18:22] *** __________ left
[18:23] *** thowe left
[18:23] *** _________ joined
[18:24] *** corwin joined
[18:29] *** thowe joined
[18:31] *** kaskal- joined
[18:31] *** kaskal left
[18:53] *** n1to joined
[18:55] *** morte_ left
[18:58] <lizmat> [Coke]: anything with natives in the REPL will fail like that

[19:14] *** Sgeo_ joined
[19:15] *** jargan joined
[19:16] *** samebchase3 joined
[19:19] *** destroycomputer- joined
[19:19] *** perryprog_ joined
[19:19] *** tobs` joined
[19:19] *** bartolin_ joined
[19:19] *** xkr47_ joined
[19:19] *** sivoais joined
[19:19] *** zmoment_ joined
[19:22] *** Tirifto_ joined
[19:24] *** Sgeo left
[19:24] *** jmcgnh left
[19:24] *** discord-raku-bot left
[19:24] *** jjatria left
[19:24] *** phogg left
[19:24] *** Tirifto left
[19:24] *** zmoment left
[19:24] *** xkr47 left
[19:24] *** sivoais_ left
[19:24] *** bd3i left
[19:24] *** gfldex left
[19:24] *** ilogger2 left
[19:24] *** samebchase left
[19:24] *** bartolin left
[19:24] *** destroycomputers left
[19:24] *** perryprog left
[19:24] *** jast left
[19:24] *** tobs left
[19:24] *** jdv left
[19:24] *** xkr47_ is now known as xkr47

[19:24] *** samebchase3 is now known as samebchase

[19:24] *** tobs` is now known as tobs

[19:25] *** jdv joined
[19:25] *** gfldex joined
[19:25] *** discord-raku-bot joined
[19:25] *** phogg joined
[19:27] *** jmcgnh joined
[19:28] *** perryprog_ is now known as perryprog

[19:30] *** bd3i joined
[19:31] *** ilogger2 joined
[19:31] *** jjatria joined
[20:04] *** morte_ joined
[20:06] *** Util left
[20:14] *** lichtkind_ joined
[20:18] *** morte_ left
[20:21] *** morte_`` joined
[20:23] *** Kaipei joined
[20:26] *** morte_`` left
[20:27] *** morte_ joined
[20:27] *** Kaiepi left
[20:42] *** [Coke] left
[20:43] *** [Coke] joined
[20:44] *** summerisle is now known as eof

[20:50] *** Util joined
[20:57] *** morte_` joined
[20:59] *** morte_ left
[21:03] *** morte_`` joined
[21:04] *** [Coke] left
[21:04] *** morte_` left
[21:09] *** [Coke] joined
[21:30] *** morte_`` left
[21:32] *** [Coke] left
[21:32] *** tirnanog joined
[21:37] *** [Coke] joined
[21:59] *** n1to left
[22:09] *** jargan is now known as jast

[22:42] *** melezhik joined
[22:42] <melezhik> .tell jjatria I am having problem with running HTTP::Tiny put method

[22:43] <tellable6> melezhik, I'll pass your message to jjatria

[22:43] <melezhik> I've create ticket on gitlab

[22:45] <melezhik> https://gitlab.com/jjatria/http-tiny/-/issues/14

[22:46] *** melezhik left
[22:57] *** kaskal joined
[22:58] *** kaskal- left
[23:14] <jjatria> .tell melezhik interesting! I'll take a look. Thanks for the report!

[23:14] <tellable6> jjatria, I'll pass your message to melezhik

[23:17] *** lichtkind_ left
[23:26] *** melezhik joined
[23:27] *** melezhik left
