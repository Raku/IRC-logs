[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[00:30] *** lichtkind left
[02:07] *** xinming left
[02:09] *** xinming joined
[02:16] *** xinming left
[02:16] *** xinming joined
[02:32] *** clarjon1 left
[02:55] <discord-raku-bot> <MadcapJake#1989> m: class A { has $.name; has &.block; submethod BUILD(:$!name, :&!block) {} }; my %as = alpha => A.new :name<alpha> :block(->{}), beta => A.new :name<beta> :block(->{}); my Map $m := Map.new(%as.values>>.name Z %as.values>>.block); $m.WHAT.say; $m<alpha>.say; $m<alpha> = 'foo'; $m<alpha>.say;

[02:56] <Voldenet> m: class A { has $.name; has &.block; submethod BUILD(:$!name, :&!block) {} }; my %as = alpha => A.new :name<alpha> :block(->{}), beta => A.new :name<beta> :block(->{}); my Map $m := Map.new(%as.values>>.name Z %as.values>>.block); $m.WHAT.say; $m<alpha>.say; $m<alpha> = 'foo'; $m<alpha>.say;

[02:56] <camelia> rakudo-moar d7d8e9d0f: OUTPUT: ¬´(Map)‚ê§->  { #`(Block|4932231743384) ... }‚ê§foo‚ê§¬ª

[02:56] *** discord-raku-bot left
[02:57] *** discord-raku-bot joined
[03:01] *** discord-raku-bot left
[03:02] *** discord-raku-bot joined
[03:07] *** discord-raku-bot left
[03:07] *** discord-raku-bot joined
[04:01] *** Kaiepi joined
[04:56] *** avuserow left
[05:00] *** Sankalp left
[05:00] *** Sankalp joined
[06:00] *** sourceable6 left
[06:00] *** quotable6 left
[06:00] *** tellable6 left
[06:00] *** coverable6 left
[06:00] *** statisfiable6 left
[06:00] *** notable6 left
[06:00] *** committable6 left
[06:00] *** evalable6 left
[06:00] *** nativecallable6 left
[06:00] *** reportable6 left
[06:00] *** shareable6 left
[06:00] *** bisectable6 left
[06:00] *** greppable6 left
[06:00] *** releasable6 left
[06:00] *** linkable6 left
[06:00] *** unicodable6 left
[06:00] *** bloatable6 left
[06:00] *** benchable6 left
[06:01] *** shareable6 joined
[06:01] *** linkable6 joined
[06:01] *** notable6 joined
[06:02] *** bisectable6 joined
[06:02] *** releasable6 joined
[06:02] *** sourceable6 joined
[06:02] *** unicodable6 joined
[06:02] *** bloatable6 joined
[06:02] *** nativecallable6 joined
[06:02] *** tellable6 joined
[06:02] *** frost joined
[06:02] *** benchable6 joined
[06:03] *** greppable6 joined
[06:03] *** coverable6 joined
[06:03] *** statisfiable6 joined
[06:03] *** evalable6 joined
[06:03] *** committable6 joined
[06:04] *** quotable6 joined
[06:04] *** reportable6 joined
[06:05] *** Kaiepi left
[06:09] *** Kaiepi joined
[06:37] *** Sankalp left
[06:41] *** Sankalp joined
[06:57] *** Sgeo left
[06:58] *** Sgeo joined
[06:59] *** Kaiepi left
[07:12] *** Kaiepi joined
[07:16] *** clarjon1 joined
[07:19] *** Garbanzo left
[07:27] *** Sgeo left
[07:59] *** jrjsmrtn_ left
[08:00] *** jrjsmrtn joined
[08:21] *** ProperN[out] left
[08:22] *** ProperNoun joined
[09:08] *** lichtkind joined
[10:04] *** lichtkind_ joined
[10:06] *** lichtkind left
[10:18] *** Xliff joined
[10:21] *** linkable6 left
[10:21] *** linkable6 joined
[10:39] *** bbrtj joined
[11:39] *** linkable6 left
[11:39] *** evalable6 left
[11:40] *** evalable6 joined
[11:41] *** linkable6 joined
[12:01] *** frost left
[12:02] *** frost joined
[12:06] *** reportable6 left
[12:08] *** reportable6 joined
[12:16] *** frost left
[13:10] *** Xliff left
[14:09] *** jaguart joined
[14:23] *** jgaz joined
[15:00] *** jgaz left
[15:20] <sienet_ja_LSD[m]> why is it that JSON parse fails in every third run?

[15:21] *** jgaz joined
[15:21] <lizmat> sienet_ja_LSD[m]: do you have a golf for that ?

[15:21] <sienet_ja_LSD[m]> I run the script and it works fine like 2 out of 3 times, and then one in 3 it's Type check failed in binding to parameter '%case'; expected Associative but got Any (Any)

[15:22] <sienet_ja_LSD[m]> golf?

[15:22] <lizmat> the smallest piece of code that shows the problem

[15:22] <sienet_ja_LSD[m]> I can upload

[15:24] <lizmat> please

[15:26] <sienet_ja_LSD[m]> http://ix.io/40WL

[15:27] <sienet_ja_LSD[m]> ^

[15:29] <lizmat> looks like the JSON is really at https://raw.githubusercontent.com/exercism/problem-specifications/main/exercises/bob/canonical-data.json :-)

[15:29] <sienet_ja_LSD[m]> yes that one but I downloaded it and renamed it bob.json

[15:30] <sienet_ja_LSD[m]> anyway it fails 

[15:30] <sienet_ja_LSD[m]> it works but fails, unpredictably

[15:30] <lizmat> yeah, confirmed it fails 

[15:30] <lizmat> feels like some race condition deep in the internals  :-(

[15:31] <sienet_ja_LSD[m]> hmm ok

[15:32] <lizmat> could you make a Rakudo issue for that?

[15:32] <sienet_ja_LSD[m]> yeah sure

[15:32] <lizmat> thanks!

[15:35] <lizmat> ah... I think I have a hunch it's not a system issue after all

[15:36] <sienet_ja_LSD[m]> it's fixable?

[15:37] <lizmat> well... where did you derive the [1] in .List[1] from ?

[15:38] <sienet_ja_LSD[m]> I just wanted the second entry, there's only two. [0] is description and [1] an array of cases

[15:38] <lizmat> ah, but the outer structure in the JSON is a hash, and the order of keys in a hash is indeterminate

[15:39] <sienet_ja_LSD[m]> hmm figures

[15:39] <sienet_ja_LSD[m]> yeah true :D 

[15:40] <sienet_ja_LSD[m]> by removing the list method it seems to work

[15:41] <sienet_ja_LSD[m]> thanks

[15:43] <lizmat> as a one liner:

[15:43] <lizmat> say .<description> for from-json("bob.json".IO.slurp)<cases>.list;

[15:47] *** jgaz left
[16:47] *** coverable6 left
[16:47] *** sourceable6 left
[16:47] *** shareable6 left
[16:47] *** notable6 left
[16:47] *** quotable6 left
[16:47] *** evalable6 left
[16:47] *** bisectable6 left
[16:47] *** reportable6 left
[16:47] *** tellable6 left
[16:47] *** committable6 left
[16:47] *** benchable6 left
[16:47] *** linkable6 left
[16:47] *** bloatable6 left
[16:47] *** nativecallable6 left
[16:47] *** unicodable6 left
[16:47] *** releasable6 left
[16:47] *** greppable6 left
[16:47] *** statisfiable6 left
[16:47] *** coverable6 joined
[16:48] *** bisectable6 joined
[16:48] *** unicodable6 joined
[16:48] *** notable6 joined
[16:48] *** benchable6 joined
[16:48] *** statisfiable6 joined
[16:48] *** quotable6 joined
[16:48] *** shareable6 joined
[16:49] *** reportable6 joined
[16:49] *** evalable6 joined
[16:49] *** linkable6 joined
[16:49] *** greppable6 joined
[16:49] *** releasable6 joined
[16:49] *** sourceable6 joined
[16:50] *** tellable6 joined
[16:50] *** nativecallable6 joined
[16:50] *** bloatable6 joined
[16:50] *** committable6 joined
[17:19] *** jaguart left
[17:56] *** Garbanzo joined
[17:57] *** bdju left
[18:06] *** reportable6 left
[18:08] *** reportable6 joined
[18:12] *** Sgeo joined
[18:33] <gfldex> is there any way to protect a class from being exported?

[18:40] <gfldex> Found one. Sadly, I already started with the blogpost and I have no idea how to explain what I'm doing. :)

[19:12] *** evalable6 left
[19:12] *** linkable6 left
[19:12] *** linkable6 joined
[19:13] *** bdju joined
[19:14] *** evalable6 joined
[19:16] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2022/06/26/sinking-errors/

[19:25] <uzl[m]> m: say min [1, 2, 3], {1/$}

[19:25] <camelia> rakudo-moar d7d8e9d0f: OUTPUT: ¬´-> ;; $_? is raw = OUTER::<$_> { #`(Block|2800384389576) ... }‚ê§¬ª

[19:25] <uzl[m]> m: say min [1, 2, 3], by => {1/$}

[19:25] <camelia> rakudo-moar d7d8e9d0f: OUTPUT: ¬´Use of uninitialized value of type Any in numeric context‚ê§1‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in bl‚Ä¶¬ª

[19:27] <uzl[m]> m: say min 1, 2, 3, by => {1/$}

[19:27] <camelia> rakudo-moar d7d8e9d0f: OUTPUT: ¬´Use of uninitialized value of type Any in numeric context‚ê§1‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in bl‚Ä¶¬ª

[19:27] <uzl[m]> m: say min(1,7,3,:by( { 1/$_ } )); 

[19:27] <camelia> rakudo-moar d7d8e9d0f: OUTPUT: ¬´7‚ê§¬ª

[19:28] <uzl[m]> m: say (1, 7, 3).min({1/$_})

[19:28] <camelia> rakudo-moar d7d8e9d0f: OUTPUT: ¬´7‚ê§¬ª

[19:31] <uzl[m]> I was just going to ask why the asymmetry between the function and method calls for `min` and `max` when passing a callable but I now realize it makes sense. If you passed the callable as a positional parameter in the function call, then it'd be considered just another value üòÖ

[19:31] <uzl[m]> m: say min 1, 2, 3, by => {1/$}

[19:31] <camelia> rakudo-moar 7cf264572: OUTPUT: ¬´Use of uninitialized value of type Any in numeric context‚ê§1‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in bl‚Ä¶¬ª

[19:32] <uzl[m]> m: say min 1, 2, 3, :by({1/$})

[19:32] <camelia> rakudo-moar 7cf264572: OUTPUT: ¬´Use of uninitialized value of type Any in numeric context‚ê§1‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in bl‚Ä¶¬ª

[19:32] <uzl[m]> m: say min(1, 2, 3, :by({1/$}))

[19:32] <camelia> rakudo-moar 7cf264572: OUTPUT: ¬´Use of uninitialized value of type Any in numeric context‚ê§1‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in bl‚Ä¶¬ª

[19:33] <uzl[m]> m: say min 1, 2, 3, :by({1/$_})

[19:33] <camelia> rakudo-moar 7cf264572: OUTPUT: ¬´3‚ê§¬ª

[19:33] <uzl[m]> m: say min 1, 2, 3, by => {1/$_}

[19:33] <camelia> rakudo-moar 7cf264572: OUTPUT: ¬´3‚ê§¬ª

[20:01] *** avuserow joined
[20:45] *** sena_kun left
[20:46] *** sena_kun joined
[21:31] *** jgaz joined
[21:37] *** jgaz left
[22:20] *** perlbot left
[22:20] *** simcop2387 left
[22:49] *** tejr left
[22:55] *** tejr joined
[23:12] <Geth> ¬¶ modules.raku.org: zoffixznet++ created pull request #144: s/perl6/raku/ in site tips

[23:12] <Geth> ¬¶ modules.raku.org: review: https://github.com/Raku/modules.raku.org/pull/144

[23:14] <SmokeMachine> I got it right? Is Zoffix back?!

[23:28] <uzl[m]> It seems like it üëçÔ∏è

[23:33] *** simcop2387 joined
[23:33] <SmokeMachine> \o/

[23:34] *** perlbot joined
[23:41] *** perlbot left
[23:41] *** simcop2387 left
[23:47] *** simcop2387 joined
[23:49] *** perlbot joined
[23:53] *** simcop2387 left
[23:55] *** perlbot left
