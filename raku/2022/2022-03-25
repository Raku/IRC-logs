[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[00:13] *** hhcryfqnut joined
[00:24] <hhcryfqnut> Hello 👋 --raku noob with 0 perl experience. Can anyone tell me what I'm doing wrong here: https://github.com/hhcryfqnut/text-adventure/blob/main/main.raku
[00:24] <hhcryfqnut> ```
[00:24] <hhcryfqnut> ? walk north
[00:24] <hhcryfqnut> No such method 'CALL-ME' for invocant of type 'Whatever'
[00:24] <hhcryfqnut>   in sub respond-to-input at text_adventure.raku line 19
[00:24] <hhcryfqnut>   in block <unit> at text_adventure.raku line 1
[00:24] <hhcryfqnut> ```
[00:29] *** melezhik left
[00:30] *** ismustachio left
[01:01] *** _ed left
[01:02] *** hhcryfqnut left
[01:03] *** _ed joined
[01:03] *** hhcryfqnut joined
[01:08] <SmokeMachine> drakonis: this uses rakudo on js: https://github.com/FCO/MemoizedDOM and here is an example of usage: https://fco.github.io/MemoizedDOM/todo6.html (it takes a very long time to load) (open the page source to see its Raku code). But I wouldn’t call it something… just a poc
[01:16] <SmokeMachine> hhcryfqnut: you probably want switch the * for a | on line 25
[01:18] *** _ed left
[01:18] *** hhcryfqnut left
[01:20] *** _ed joined
[01:25] *** _ed left
[01:26] <SmokeMachine> hhcryfqnut: and it seems your hash never gets created
[01:37] *** _ed joined
[01:42] *** ubq323 left
[01:47] *** _ed left
[01:58] *** _ed joined
[02:37] *** _ed left
[02:54] <guifa_> also $input-string.trim.split(/\s+/)  ----> $input-string.words :-) 
[02:58] <guifa_> but indeed, as SmokeMachine notes, the *@foo syntax slurps up arguments in parameter lists.  Where you have *(@command[1..*]), you're wanting to `Slip` the items in, so you use the slip operator (which is a prefixed | )
[02:59] *** _ed joined
[03:01] *** m_athias left
[03:02] *** m_athias joined
[03:04] *** _ed left
[03:16] *** _ed joined
[04:07] *** sisar joined
[04:12] *** sisar left
[04:19] *** _ed left
[04:32] *** _ed joined
[04:37] *** _ed left
[04:52] *** _ed joined
[05:37] *** hhcryfqnut joined
[06:05] *** _ed left
[06:05] *** hhcryfqnut left
[06:08] *** reportable6 left
[06:10] *** reportable6 joined
[06:18] *** _ed joined
[06:29] *** GreaseMonkey left
[06:31] *** _ed left
[06:33] *** _ed joined
[06:49] *** Sgeo left
[06:51] *** _ed left
[07:02] *** _ed joined
[07:06] *** _ed left
[07:09] *** abraxxa-home joined
[07:12] *** abraxxa-home left
[07:15] *** abraxxa-home joined
[07:34] *** _ed joined
[07:39] *** _ed left
[07:51] *** _ed joined
[07:55] *** _ed left
[08:10] *** _ed joined
[08:32] *** Grrrr left
[08:33] *** Grrrr joined
[08:46] *** _ed left
[08:57] *** _ed joined
[09:01] *** sena_kun left
[09:03] *** sena_kun joined
[09:10] *** dutchie joined
[09:55] <patrickb> melezhik: I think being able to configure CI via a text config file in the repo is a good thing to have. Textfiles are accessible and automatable.
[09:56] <patrickb> melezhik: Having a web UI to create / adapt that config file is a bonus.
[10:10] *** evalable6 left
[10:10] *** linkable6 left
[10:12] *** evalable6 joined
[10:24] *** wingfold joined
[10:41] *** sena_kun left
[10:42] *** sena_kun joined
[10:44] *** _ed left
[10:44] *** _ed joined
[10:54] *** _ed left
[11:01] *** wingfold left
[11:12] *** linkable6 joined
[11:17] *** _ed joined
[11:23] *** _ed left
[11:23] *** razetime joined
[11:52] <Geth> ¦ setup-raku/node16: 4be99eb817 | (Shoichi Kaji)++ | 3 files
[11:52] <Geth> ¦ setup-raku/node16: node16
[11:52] <Geth> ¦ setup-raku/node16: review: https://github.com/Raku/setup-raku/commit/4be99eb817
[11:58] <Geth> ¦ setup-raku: skaji++ created pull request #20: node16
[11:58] <Geth> ¦ setup-raku: review: https://github.com/Raku/setup-raku/pull/20
[11:59] <Geth> ¦ setup-raku: 4be99eb817 | (Shoichi Kaji)++ | 3 files
[11:59] <Geth> ¦ setup-raku: node16
[11:59] <Geth> ¦ setup-raku: review: https://github.com/Raku/setup-raku/commit/4be99eb817
[11:59] <Geth> ¦ setup-raku: 41e2bba95f | (Shoichi Kaji)++ (committed using GitHub Web editor) | 3 files
[11:59] <Geth> ¦ setup-raku: Merge pull request #20 from Raku/node16
[11:59] <Geth> ¦ setup-raku: 
[11:59] <Geth> ¦ setup-raku: node16
[11:59] <Geth> ¦ setup-raku: review: https://github.com/Raku/setup-raku/commit/41e2bba95f
[12:01] *** _ed joined
[12:04] *** synthmeat left
[12:07] *** _ed left
[12:07] *** reportable6 left
[12:12] *** wingfold joined
[12:21] *** synthmeat joined
[12:41] *** Altai-man joined
[12:56] <Geth> ¦ doc: 8a88a6eb97 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/containers.pod6
[12:56] <Geth> ¦ doc: Remove incorrect text & non-compiling example (#4035)
[12:56] <Geth> ¦ doc: 
[12:56] <Geth> ¦ doc: This commit removes some text that describes binding semantics that,
[12:56] <Geth> ¦ doc: after discussion, turned out to be the result of a bug rather than
[12:56] <Geth> ¦ doc: intended behavior.  It also removes the accompanying test, which
[12:56] <Geth> ¦ doc: failed to compile once the bug was fixed.
[12:56] <Geth> ¦ doc: 
[12:56] <linkable6> Link: https://docs.raku.org/language/containers
[12:56] <Geth> ¦ doc: Finally, it adds a doc-comment clarifying that an adjacent test fails
[12:56] <Geth> ¦ doc: at runtime even though it *looks* like it would throw a compile-time
[12:56] <Geth> ¦ doc: error (and thus would need to be marked for xt/example-compilation to
[12:56] <Geth> ¦ doc: skip).
[12:56] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/8a88a6eb97
[12:57] <nine> hhcryfqnut: (*(@command[1..*])) is not Raku syntax
[12:57] <nine> looks Pythonish to me
[12:57] *** linkable6 left
[12:57] *** razetime left
[12:58] *** Kirtee joined
[13:02] <Geth> ¦ doc: a58c658b90 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6
[13:02] <Geth> ¦ doc: \d is for decimal (#3991)
[13:02] <Geth> ¦ doc: 
[13:02] <Geth> ¦ doc: * \d is for decimal
[13:02] <Geth> ¦ doc: 
[13:02] <Geth> ¦ doc: As we correctly note [further down the page](https://docs.raku.org/language/regexes#Predefined_character_classes), `\d` matches _decimal digits_ 
[13:02] <Geth> ¦ doc: (Unicode `Nd`) not all numbers (Unicode `N`).  This commit fixes the description here, adds an example of where that makes a difference, and provides
[13:02] <Geth> ¦ doc: a way to match against Numbers if that's what the user meant.
[13:02] <Geth> ¦ doc: 
[13:02] <Geth> ¦ doc: * Minor fixes from reviews
[13:02] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/a58c658b90
[13:05] *** ggoebel_ left
[13:06] *** razetime joined
[13:12] <Geth> ¦ doc: e50230adeb | (JJ Merelo)++ | doc/Language/containers.pod6
[13:12] <Geth> ¦ doc: Minor :memo:
[13:12] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/e50230adeb
[13:16] *** RakuIRCLogger joined
[13:17] *** lizmat_ joined
[13:17] *** razetime left
[13:17] *** TempIRCLogger__ joined
[13:18] *** RakuIRCLogger__ left
[13:18] *** TempIRCLogger left
[13:18] *** Geth left
[13:19] *** lizmat left
[13:19] *** lizmat_ left
[13:20] *** lizmat joined
[13:20] *** Geth joined
[13:32] *** abraxxa-home left
[13:33] *** lainon joined
[13:35] <Geth> ¦ doc: 9ca63f5d17 | (JJ Merelo)++ | doc/Language/operators.pod6
[13:35] <Geth> ¦ doc: Eliminate 1 of course, just delete it #4044
[13:35] <Geth> ¦ doc: 
[13:35] <Geth> ¦ doc: Implicit in the 'also'
[13:35] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/9ca63f5d17
[13:35] <Geth> ¦ doc: 1cdc9b4ad7 | (JJ Merelo)++ | doc/Language/operators.pod6
[13:35] <Geth> ¦ doc: Adds example of skipping anon parameter
[13:35] <Geth> ¦ doc: 
[13:35] <Geth> ¦ doc: Following example by @gfldex :clap: closes #4040
[13:35] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1cdc9b4ad7
[13:35] *** Kirtee left
[13:37] *** _ed joined
[13:39] *** razetime joined
[13:41] *** _ed left
[13:52] * guifa_ is starting to regret refactoring Intl::CLDR.  So. Many. LOC.
[13:54] *** Altai-man left
[13:56] *** Altai-man joined
[14:08] *** reportable6 joined
[14:08] *** Sgeo joined
[14:10] *** holyghost joined
[14:11] <holyghost> re
[14:14] *** lainon left
[14:14] <holyghost> I mentioned 2 years ago I was building a Scheme language system to extend raku such as guile for GNU code
[14:15] <holyghost> I am currently at a symbol API and tables for parsing the thing with a theorem prover
[14:16] <holyghost> As a demo I am trying to make it into a Gameboy microcode client
[14:16] <holyghost> SFY, the code at https://sourceforge.net/projects/gremlin-scheme/files//
[14:17] <holyghost> After the theorem prover thingies are stable I can start on the racial extension to convert/translate files for it
[14:17] <holyghost> S/racial/raku
[14:17] * guifa_ was about to ask lol
[14:19] <holyghost> HTH later on
[14:19] <holyghost> It compiles, that's all
[14:24] *** wingfold left
[14:27] *** ggoebel_ joined
[14:31] <tonyo> yea that took an interesting turn prior to correction
[14:32] <Geth> ¦ doc: 1f201e2d71 | raiph++ (committed using GitHub Web editor) | doc/Language/regexes.pod6
[14:32] <Geth> ¦ doc: Avoid implying C<Nd> = C<\D> = Not decimal digit 
[14:32] <Geth> ¦ doc: 
[14:32] <Geth> ¦ doc: The unfortunate use of a comma and "and" coincides with the possibility that a reader might think Nd means "Not digit" rather than "Number, decimal".
[14:32] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1f201e2d71
[14:41] *** ggoebel_ left
[14:44] *** _ed joined
[14:50] *** _ed left
[15:10] *** _ed joined
[15:14] *** zacts joined
[15:15] *** _ed left
[15:21] *** hesh307 joined
[15:21] *** razetime left
[15:30] *** razetime joined
[15:34] *** _ed joined
[15:36] <Geth> ¦ App-Rakubrew/ugexe-patch-1: ea1edde822 | (Nick Logan)++ (committed using GitHub Web editor) | lib/App/Rakubrew/Build.pm
[15:36] <Geth> ¦ App-Rakubrew/ugexe-patch-1: Use `-I.` instead of `-Ilib`
[15:36] <Geth> ¦ App-Rakubrew/ugexe-patch-1: 
[15:36] <Geth> ¦ App-Rakubrew/ugexe-patch-1: Its probably fine either way, but technically the former is better than the later. For instance older perl6 executables that do not understand the `.rakumod` extension won't be able to discover such modules with `-Ilib` whereas `-I.` explicitly adds any files in the META6.json regardless of their extension.
[15:36] <Geth> ¦ App-Rakubrew/ugexe-patch-1: review: https://github.com/Raku/App-Rakubrew/commit/ea1edde822
[15:36] <Geth> ¦ App-Rakubrew: ugexe++ created pull request #49: Use `-I.` instead of `-Ilib`
[15:36] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/pull/49
[15:44] *** _ed left
[15:58] *** linkable6 joined
[16:16] *** xinming left
[16:17] *** xinming joined
[16:28] *** _ed joined
[16:32] *** _ed left
[16:33] <Geth> ¦ doc: 4a36f187a5 | (JJ Merelo)++ | doc/Language/operators.pod6
[16:33] <Geth> ¦ doc: Solves #4018 by adding examples to the stub reference
[16:33] <Geth> ¦ doc: 
[16:33] <Geth> ¦ doc: Incorporates the OP as well as the comment, with a note
[16:33] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/4a36f187a5
[16:33] <linkable6> Link: https://docs.raku.org/language/operators
[16:34] *** linkable6 left
[16:34] <Geth> ¦ doc: 25180c53e1 | (JJ Merelo)++ | doc/Language/regexes.pod6
[16:34] <Geth> ¦ doc: Change to POD markup
[16:34] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/25180c53e1
[16:37] *** linkable6 joined
[16:53] *** zacts left
[17:04] *** n1to joined
[17:05] *** n1to left
[17:06] *** n1to joined
[17:06] *** n1to left
[17:06] *** n1to joined
[17:06] *** n1to left
[17:09] *** n1to joined
[17:10] *** n1to left
[17:11] *** n1to joined
[17:41] *** razetime left
[17:52] <drakonis> does raku have anything for loading images or saved state?
[17:54] <drakonis> for remote code execution
[17:55] <drakonis> or speeding up binaries
[18:00] *** Altai-man left
[18:07] <japhb> Precompiled modules are bytecode and serialized state.
[18:08] <japhb> The biggest thing that people can do to speed up a Raku *script* is to move all of it into a *module*, leaving just a #! line and a use line in the script, and nothing else.  Because then the module gets precompiled, and it's much faster.
[18:08] *** reportable6 left
[18:10] *** reportable6 joined
[18:15] *** [Coke] left
[18:23] *** _ed joined
[18:30] *** _ed left
[18:34] *** zacts joined
[18:38] *** [Coke] joined
[18:43] *** holyghost left
[18:44] <guifa_> drakonis: codesections++ is working on stuff for persistent data
[18:47] <Geth> ¦ App-Rakubrew: ea1edde822 | (Nick Logan)++ (committed using GitHub Web editor) | lib/App/Rakubrew/Build.pm
[18:47] <Geth> ¦ App-Rakubrew: Use `-I.` instead of `-Ilib`
[18:47] <Geth> ¦ App-Rakubrew: 
[18:47] <Geth> ¦ App-Rakubrew: Its probably fine either way, but technically the former is better than the later. For instance older perl6 executables that do not understand the `.rakumod` extension won't be able to discover such modules with `-Ilib` whereas `-I.` explicitly adds any files in the META6.json regardless of their extension.
[18:47] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/ea1edde822
[18:47] <Geth> ¦ App-Rakubrew: 9b50b4b661 | (Patrick Böker)++ (committed using GitHub Web editor) | lib/App/Rakubrew/Build.pm
[18:47] <Geth> ¦ App-Rakubrew: Merge pull request #49 from Raku/ugexe-patch-1
[18:47] <Geth> ¦ App-Rakubrew: 
[18:47] <Geth> ¦ App-Rakubrew: Use `-I.` instead of `-Ilib`
[18:47] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/9b50b4b661
[18:54] *** ggoebel_ joined
[18:57] *** _ed joined
[19:01] *** _ed left
[19:10] *** zacts left
[19:16] *** _ed joined
[19:19] *** rir joined
[19:20] *** rir left
[19:22] *** squashable6 left
[19:23] *** _ed left
[19:24] *** squashable6 joined
[19:24] *** squashable6 left
[19:25] *** abraxxa-home joined
[19:26] *** squashable6 joined
[19:52] <drakonis> japhb: basically, what i want is to compile raku code and execute it in another machine with a rakudo binary without needing to install the modules in the target and if i understand correctly, doing that should help?
[20:00] *** _ed joined
[20:04] *** _ed left
[20:10] *** _ed joined
[20:18] *** _ed left
[20:23] <Geth> ¦ doc: 1f8c9d4fc2 | Coke++ | doc/Language/operators.pod6
[20:23] <Geth> ¦ doc: fix typo
[20:23] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1f8c9d4fc2
[20:23] <linkable6> Link: https://docs.raku.org/language/operators
[20:50] *** greaser|q joined
[20:51] *** greaser|q left
[20:51] *** greaser|q joined
[20:52] *** greaser|q is now known as GreaseMonkey
[21:05] *** rir joined
[21:13] *** _ed joined
[21:26] <drakonis> guifa_: cool.
[21:26] <drakonis> though i'm not sure it is what i need
[21:29] <[Coke]> m: say 100!
[21:29] <camelia> rakudo-moar 530e17848: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Bogus postfix␤at <tmp>:1␤------> say 100⏏!␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤        statement modifier␤        s…»
[21:29] <[Coke]> m: say [*] (1..100)
[21:29] <camelia> rakudo-moar 530e17848: OUTPUT: «93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000␤»
[21:30] <[Coke]> m: say sqrt(2*pi*100)*(100/e)**100
[21:30] <camelia> rakudo-moar 530e17848: OUTPUT: «9.32484762526942e+157␤»
[21:30] <[Coke]> Man, math is weird.
[21:30] <drakonis> it is, indeed.
[21:33] *** zacts joined
[21:35] *** ProperNoun left
[21:35] <[Coke]> m: say [*] 1..100 / sqrt(2*pi*100)*(100/e)**100
[21:35] *** ProperNoun joined
[21:35] <camelia> rakudo-moar 530e17848: OUTPUT: «(timeout)»
[21:35] <[Coke]> oops
[21:37] <moon-child> m: use NativeCall; sub tgamma(num64 --> num64) is native('m') {*}; say tgamma 101e0
[21:37] <camelia> rakudo-moar 530e17848: OUTPUT: «Cannot locate native library 'libm.so': /usr/lib64/libm.so: invalid ELF header␤  in method setup at /home/camelia/rakudo-m-inst-1/share/perl6/core/sources/947BDAB9F96E0E5FCCB383124F923A6BF6F8D76B (NativeCall) line 319␤  in method setup at /home/ca…»
[21:37] <moon-child> huh?
[21:39] *** zacts left
[21:40] <MasterDuke> i get the same thing locally, /usr/lib/libm.so is a text file
[21:41] <MasterDuke> m: use NativeCall; sub tgamma(num64 --> num64) is native("m", v6) {*}; say tgamma 101e0
[21:41] <camelia> rakudo-moar 530e17848: OUTPUT: «9.332621544394415e+157␤»
[21:46] *** _ed left
[21:58] *** jmcgnh left
[22:03] *** _ed joined
[22:04] *** jmcgnh joined
[22:15] *** Xliff joined
[22:16] *** zacts joined
[22:18] *** zacts left
[22:18] *** melezhik joined
[22:18] <melezhik> .
[22:19] <drakonis> oh, hi.
[22:19] <drakonis> what's your goal for sparrow?
[22:19] <melezhik> hi patrickb thanks! yeah config files for CI are absolutely first thing to go, I just meat, my vision is this CI services should be as simple as possible and provides a A LOT of features out of the box, without necessity to code anything
[22:20] <melezhik> so, I would like to have a list of such features from Raku community , may be I'll need o create a reddit post or something )))
[22:20] <drakonis> you pinged the wrong person, but alright.
[22:20] <melezhik> hi drakonis
[22:21] <melezhik> I answered previous patrickb reply on my idea to start writing Raku focused CI server
[22:21] <drakonis> i see.
[22:21] <melezhik> NP ))
[22:22] <drakonis> i'm writing a automation framework, however it doesnt follow the kind of design you're going for
[22:22] <melezhik> drakonis are you interested in Sparrow, any specific questions? I don't have any specific vision for it right now, I just use it whenever it's possible and this makes my life easier , that is it
[22:22] <melezhik> cool! have you checked Sparrow documentation?
[22:23] <melezhik> also I use Sparrow as a low level framework to build more high level tools, services including Sparky, Tomtit, Tomty
[22:23] <melezhik> if this helps
[22:23] <drakonis> i've checked the code
[22:24] <melezhik> basically Sparrow is just all in one universal language agnostic engine with a Raku orchestrator on the top
[22:24] <drakonis> i see
[22:24] <melezhik> code, could be far from being ideal and optimal
[22:25] <melezhik> I encourage you to read the docs and posts ( which I have produced quite a number for the last X years, he-he ), maybe you'll borrow some my ideas and do better implementation ))))
[22:26] <melezhik> have you checked that? - https://raku-advent.blog/2020/12/07/mixing-bash-and-raku-using-sparrow/
[22:27] <melezhik> Sparrow's GH docs could be maybe tough to start with, these Raku advents and dev.to posts are more easier and friendly ))))
[22:27] <melezhik> anyway, I'd be happy to help you in anyways ...
[22:28] <drakonis> cool
[22:28] <drakonis> it does seem a bit more like the traditional automation tooling but with more syntax options
[22:28] *** zacts joined
[22:28] *** zacts left
[22:29] <melezhik> yeah, it's quite simple by users's API but it has some ( a lot of ) features that cover (many) cases
[22:30] <melezhik> you might be also interested in Sparky, which is a CI/integration  server built on the top of Sparrow - https://github.com/melezhik/sparky#job-api
[22:31] <melezhik> the "latest and greatest" (sorry for showing off) feature is one can run distribute jobs ( Sparrow scenarios basically ) across clusters with VMs or docker instances
[22:31] <melezhik> anyway ... let me know if you have more specific questions or post your thought as GH issues )))
[22:31] <drakonis> no worries
[22:32] <drakonis> i think i'm going with something different for my own
[22:33] <drakonis> it does seem nice though
[22:36] *** melezhik left
[22:36] *** melezhik joined
[22:36] <melezhik> .
[22:37] <melezhik> sure! and good luck!
[22:38] <drakonis> thanks.
[22:40] *** abraxxa-home left
[22:57] *** zacts joined
[23:17] <n1to> hi, can someone tell me how to use external libraries in the Comma IDE. I am using `rakubrew` and installed 'Color' with `zef`. Even though the IDE provides me with auto completion for Color it does not find the module with the use statement and fails with 'Cannot find Color in the ecosystem'. When I try it in the repl inside the IDE, it works though.
[23:26] *** melezhik left
[23:26] *** melezhik joined
[23:31] *** melezhik left
[23:33] <n1to> I think I am missing something really simple.
[23:42] *** zacts left
[23:43] <El_Che> n1to: normally in settings =>  languages you can set paths
[23:43] <El_Che> or set RAKULIB env variable
[23:55] <japhb> n1to: Couple possibilities that I can think of.  Have you added your current rakudo as an "SDK" for the project?  Also, have you added Color to your META6.json as a depends entry?
