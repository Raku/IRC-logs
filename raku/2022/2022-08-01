[00:03] *** gcd left
[00:08] *** reportable6 left
[00:08] *** reportable6 joined
[00:08] *** deoac joined
[00:14] *** gcd joined
[00:25] *** Maylay left
[00:27] <guifa_> [Coke]++
[00:31] *** kolofon joined
[00:32] *** kolofon left
[00:38] *** deoac left
[00:47] *** Maylay joined
[00:53] *** deoac joined
[01:02] *** habere-et-disper left
[01:41] *** guifa joined
[01:41] <guifa> hot damn
[01:42] *** Sankalp left
[01:42] <guifa> I finally figured out how to do quoted regexen in slang
[01:43] <guifa> nine++ for ^∞
[01:43] <guifa> It's all thanks to a bug fix you did back in 2016 lol
[01:48] *** Sankalp joined
[02:27] *** guifa left
[02:36] *** guifa joined
[03:04] *** frost joined
[03:07] *** guifa left
[03:16] *** frost left
[03:20] *** guifa joined
[03:20] *** guifa left
[03:35] *** frost joined
[04:02] *** saint- joined
[04:30] *** Maylay left
[05:17] *** Maylay joined
[06:07] *** reportable6 left
[06:09] *** reportable6 joined
[06:29] <Xliff> guifa: Gonna share the trick?
[06:29] <tellable6> Xliff, I'll pass your message to guifa
[06:37] *** Sankalp left
[06:38] *** ProperNoun left
[06:38] *** Oshawott left
[06:38] *** rba left
[06:38] *** ingy left
[06:38] *** esh left
[06:38] *** dutchie left
[06:38] *** sjn left
[06:38] *** esh joined
[06:38] *** sjn joined
[06:39] *** Oshawott joined
[06:39] *** rba joined
[06:39] *** ProperNoun joined
[06:39] *** dutchie joined
[06:40] *** ingy joined
[06:50] *** Altreus left
[06:50] *** rjbs left
[06:50] *** xkr47 left
[06:50] *** perryprog left
[06:50] *** samebchase left
[06:50] *** jast left
[06:51] *** xkr47 joined
[06:51] *** SmokeMachine joined
[06:51] *** rjbs joined
[06:51] *** Maylay left
[06:52] *** perryprog joined
[06:52] *** Altreus joined
[06:54] *** crystalfrost[m] joined
[06:55] *** RakuIRCLogger left
[06:55] *** RakuIRCLogger joined
[06:59] *** RakuIRCLogger left
[06:59] *** RakuIRCLogger joined
[07:35] *** Maylay joined
[07:39] *** sena_kun joined
[07:49] *** dakkar joined
[08:16] *** jast joined
[08:39] *** RakuIRCLogger left
[08:39] *** RakuIRCLogger joined
[09:00] *** MitarashiDango[m left
[09:07] *** Colere left
[09:08] *** Colere joined
[09:11] *** Furor joined
[09:14] *** Colere left
[09:21] <guifa_> Xliff: yeah, I'm about to post the module
[09:21] <tellable6> 2022-08-01T06:29:54Z #raku <Xliff> guifa: Gonna share the trick?
[09:22] <guifa_> I'm still struggling with installing the lexical symbol and trying to get that figured out first
[09:22] *** sena_kun left
[09:23] *** Furor is now known as Colere
[09:23] <guifa_> but tbh if it's not possible to do "my/our ecma-regex foo { … }", as long as "my &foo = ecma-regex/…/" works, I think I'll be okay
[09:23] <guifa_> (and RakuAST will make the former easy anyways)
[09:40] *** discord-raku-bot left
[09:40] *** discord-raku-bot joined
[10:04] *** sena_kun joined
[10:14] <discord-raku-bot> <Nemokosch> it would be nice to get to know today whether my other talk will be accepted or not. It's also okay if not but yeah... I need to start planning.
[10:27] <lizmat> Nemokosch: you can ping @andrewshitov on Twitter :-)
[10:27] <tellable6> lizmat, I'll pass your message to Nemokosch
[10:28] <lizmat> Nemokosch: this one?  Refurbishing Raku legacy with Raku
[10:28] <tellable6> lizmat, I'll pass your message to Nemokosch
[10:30] *** gfldex left
[10:30] *** discord-raku-bot left
[10:40] *** lichtkind joined
[11:40] *** benchable6 left
[11:40] *** coverable6 left
[11:40] *** greppable6 left
[11:40] *** sourceable6 left
[11:40] *** releasable6 left
[11:40] *** shareable6 left
[11:40] *** reportable6 left
[11:40] *** bloatable6 left
[11:40] *** quotable6 left
[11:40] *** nativecallable6 left
[11:40] *** notable6 left
[11:40] *** unicodable6 left
[11:40] *** linkable6 left
[11:40] *** evalable6 left
[11:40] *** bisectable6 left
[11:40] *** committable6 left
[11:40] *** statisfiable6 left
[11:40] *** tellable6 left
[11:41] *** nativecallable6 joined
[11:41] *** coverable6 joined
[11:41] *** bisectable6 joined
[11:41] *** releasable6 joined
[11:41] *** shareable6 joined
[11:41] *** committable6 joined
[11:41] *** benchable6 joined
[11:42] *** unicodable6 joined
[11:42] *** quotable6 joined
[11:42] *** tellable6 joined
[11:42] *** evalable6 joined
[11:42] *** reportable6 joined
[11:42] *** statisfiable6 joined
[11:42] *** linkable6 joined
[11:43] *** bloatable6 joined
[11:43] *** notable6 joined
[11:43] *** sourceable6 joined
[11:43] *** greppable6 joined
[11:52] *** kaskal joined
[11:52] *** kaskal left
[11:55] *** kaskal- left
[11:55] <tbrowder> G’day all. An off-topic question: I use SmartGit when I (reluctantly) need to use Windows. Does anyone have a fav GUI they use for Git on Win 10? I like SmartGit except its setup for ssh is too much trial and error and its not well documented,
[11:56] <tbrowder> *it’s
[11:56] <tbrowder> not well..,
[12:01] <moritz_> not personal experience, but several Windows-User have told me they like the github client for windows (and despite the name it's also a generic git client, not "just" githbu)
[12:02] <Kaiepi> i use the tui
[12:03] <Kaiepi> <ide> should have something or other for git
[12:03] <Kaiepi> e.g. vs code
[12:04] *** habere-et-disper joined
[12:05] *** kaskal joined
[12:07] *** reportable6 left
[12:07] <lizmat> CommaIDE 2022.07 is out: https://twitter.com/jnthnwrthngtn/status/1554075753771421698
[12:09] *** reportable6 joined
[12:11] *** kaskal left
[12:14] <El_Che> Plugin 'Comma Community Edition (Raku Language Support)' (version '2022.07.0') is not compatible with the current version of the IDE, because it requires build 221.* or older but the current build is IU-222.3345.118
[12:14] <tellable6> 2022-07-31T19:45:31Z #raku-dev <jdv> El_Che 2022.07 release happened
[12:14] <El_Che> (there is a new intellij release)
[12:14] <El_Che> ah, new raku pkg
[12:15] <El_Che> I'll build then today
[12:15] <lizmat> El_Che: yes, please
[12:15] *** kaskal joined
[12:17] <[Coke]> (git on windows) I use git bash
[12:17] <[Coke]> (so, command line)
[12:18] *** kaskal left
[12:19] *** kaskal joined
[12:20] *** jgaz joined
[12:27] <habere-et-disper> I have a fundamental misunderstanding of whatever closures.
[12:27] <habere-et-disper> Is it possible to convert:
[12:27] <habere-et-disper> m: ('a'..'z' Z=> ^26).map( { .pairs, .antipairs } ).flat
[12:27] <camelia> rakudo-moar 556bf98da: ( no output )
[12:27] <habere-et-disper> into:
[12:27] <habere-et-disper> m: ('a'..'z' Z=> ^26).map( *.pairs, *.antipairs ).flat
[12:27] <camelia> rakudo-moar 556bf98da: OUTPUT: «Cannot map a Seq using 'WhateverCode.new, WhateverCode.new'␤Did a * (Whatever) get absorbed by a list?␤  in block <unit> at <tmp> line 1␤␤»
[12:32] <lizmat> m: dd *.pairs, *.antipairs 
[12:32] <camelia> rakudo-moar 556bf98da: OUTPUT: «WhateverCode.new␤WhateverCode.new␤»
[12:33] <lizmat> that's a list of 2 WhateverCode objects
[12:33] <lizmat> habere-et-disper: I'm not sure what you're trying to do ?
[12:35] <El_Che> lizmat: running a test build for all the supported distros
[12:35] <lizmat> El_Che++
[12:37] <El_Che> jdv: thx for the heads-up!
[12:37] <El_Che> .tell jdv: thx for the heads-up!
[12:37] <tellable6> El_Che, I'll pass your message to jdv
[12:38] *** Xliff left
[12:41] <habere-et-disper> I'm trying to declare and append to a hash it's inverse. While this works:
[12:41] <habere-et-disper> m: say ('a'..'z' Z=> ^26).map( { .pairs, .antipairs } ).flat
[12:41] <camelia> rakudo-moar 556bf98da: OUTPUT: «(a => 0 0 => a b => 1 1 => b c => 2 2 => c d => 3 3 => d e => 4 4 => e f => 5 5 => f g => 6 6 => g h => 7 7 => h i => 8 8 => i j => 9 9 => j k => 10 10 => k l => 11 11 => l m => 12 12 => m n => 13 13 => n o => 14 14 => o p => 15 15 => p q => 16 16 => …»
[12:41] <habere-et-disper> I don't like all the parentheses and I think of an intuitive way to move in/out up/down of a closure was to change $_ into * but that doesn't work:
[12:41] <habere-et-disper> m:  say ('a'..'z' Z=> ^26).map( *.pairs, *.antipairs ).flat
[12:41] <camelia> rakudo-moar 556bf98da: OUTPUT: «Cannot map a Seq using 'WhateverCode.new, WhateverCode.new'␤Did a * (Whatever) get absorbed by a list?␤  in block <unit> at <tmp> line 1␤␤»
[12:44] <lizmat> habere-et-disper: because the latter is the equivalent of: 
[12:44] <lizmat> m: say ('a'..'z' Z=> ^26).map( { .pairs }, { .antipairs } ).flat
[12:44] <camelia> rakudo-moar 556bf98da: OUTPUT: «Cannot map a Seq using '-> ;; $_? is raw = OUTER::<$_> { #`(Block|5270057319824) ... }, -> ;; $_? is raw = OUTER::<$_> { #`(Block|5270057319896) ... }'␤Did a * (Whatever) get absorbed by a list?␤  in block <unit> at <tmp> line 1␤␤»
[12:56] <lizmat> m: dd ("a".."z").map: { ($_, .antipair).Slip with $_ => $++ } # habere-et-disper: perhaps a better way ?
[12:56] <camelia> rakudo-moar 556bf98da: OUTPUT: «(:a(0), 0 => "a", :b(1), 1 => "b", :c(2), 2 => "c", :d(3), 3 => "d", :e(4), 4 => "e", :f(5), 5 => "f", :g(6), 6 => "g", :h(7), 7 => "h", :i(8), 8 => "i", :j(9), 9 => "j", :k(10), 10 => "k", :l(11), 11 => "l", :m(12), 12 => "m", :n(13), 13 => "n", :o(1…»
[13:09] *** frost left
[13:09] *** vrurg left
[13:10] *** vrurg joined
[13:18] <habere-et-disper> Thanks lizmat. I've refined it down to:
[13:18] <habere-et-disper> m: say flat ('a'..'z').pairs.map: { $_, .antipair }
[13:18] <camelia> rakudo-moar 556bf98da: OUTPUT: «(0 => a a => 0 1 => b b => 1 2 => c c => 2 3 => d d => 3 4 => e e => 4 5 => f f => 5 6 => g g => 6 7 => h h => 7 8 => i i => 8 9 => j j => 9 10 => k k => 10 11 => l l => 11 12 => m m => 12 13 => n n => 13 14 => o o => 14 15 => p p => 15 16 => q q => 1…»
[13:19] <lizmat> habere-et-disper++
[13:25] *** habere-et-disper left
[13:44] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/08/01/2022-31-justintimerelease/
[13:46] <El_Che> lizmat: package should be up
[13:47] <El_Che> onlu opensuse 15.4 not there yet
[13:47] <El_Che> cloudsmith must add the repo. *Every* raku release is the canary for adding missing repos
[13:47] <El_Che> :)
[13:50] <lizmat> liz@DebianMini:~$ raku -v
[13:50] <lizmat> Welcome to Rakudo™ v2022.07.
[13:50] <lizmat> whee!
[13:50] <lizmat> El_Che: weekly updated :-)
[14:23] *** human-blip left
[14:26] <El_Che> opensuse 15.4 added
[14:32] * leont submitted that talk, for 20 minutes. I might have to ask to make that 45 TBH, but I won't be sure until I've written it
[14:37] *** kaskal left
[14:43] *** kaskal joined
[14:56] *** [Coke]_ joined
[14:58] *** [Coke] left
[15:04] *** Sgeo left
[15:05] *** human-blip joined
[15:12] *** kaskal left
[15:14] *** kaskal joined
[15:30] *** jgaz left
[15:31] *** jgaz joined
[15:48] *** kaskal left
[15:50] *** kaskal joined
[15:54] *** kaskal left
[15:55] *** kaskal joined
[16:05] *** kaskal left
[16:07] *** kaskal joined
[16:11] *** Nemokosch joined
[16:12] *** guifa joined
[16:15] *** guifa_ left
[16:31] *** Maylay left
[16:36] *** martinthewildpig joined
[16:37] *** Maylay joined
[16:38] *** dakkar left
[16:41] *** discord-raku-bot joined
[16:47] *** martinthewildpig left
[16:54] *** deoac left
[16:55] <tbrowder> moritz_:  thanks
[16:57] <tbrowder> [Coke]: using bash works i know, but i see warnings about using files on its file system with Wih
[16:57] <tellable6> tbrowder, I'll pass your message to [Coke]
[16:58] <[Coke]_> Wih?
[16:58] <tbrowder> *Win apps. (ext4 vs ntfs)
[16:58] *** [Coke]_ is now known as [Coke]
[16:58] <tbrowder> Win apps, such as Word
[16:59] <[Coke]> I'm not sure how that relates to git?
[16:59] <tellable6> 2022-08-01T16:57:09Z #raku <tbrowder> [Coke]: using bash works i know, but i see warnings about using files on its file system with Wih
[17:01] <[Coke]> I am using git bash on the same drive as everything else, no issues here.
[17:02] *** sivoais left
[17:03] <tbrowder> ok, good to know, thnks
[17:12] *** lichtkind left
[17:15] *** gugod left
[17:15] *** sivoais joined
[17:18] *** sena_kun left
[17:20] *** lichtkind joined
[17:31] *** sivoais left
[17:39] *** sivoais joined
[17:54] *** sena_kun joined
[18:06] *** reportable6 left
[18:07] *** reportable6 joined
[18:19] <tonyo> tbrowder: does the win10 shell not have git cli?
[18:19] <tonyo> or do you use a gui in your solaris 9 (:)) setup normally?
[18:21] <tbrowder> tonyo: yes, i have bash and can use the git cli. i will use that as a fall-back if i can’t get smartgit to do what i want. thnx
[18:32] *** perlbot left
[18:33] *** simcop2387 left
[18:34] *** eseyman joined
[18:36] <jdv> El_Che: rock on
[18:36] <tellable6> 2022-08-01T12:37:46Z #raku <El_Che> jdv: thx for the heads-up!
[18:54] *** Maylay left
[18:57] *** sena_kun left
[19:00] *** sena_kun joined
[19:06] *** Maylay joined
[19:07] <[Coke]> I have a loop that could start one or two Proc::Async items, but may skip either on any given iteration; can I still use the react {whenever} syntax? can I wrap the whenever block inside an if in the react?
[19:13] *** Maylay left
[19:18] *** Nemokosch left
[19:19] *** Nemokosch joined
[19:22] <[Coke]> "Failed to spawn process... name too long" - how long is too long?
[19:23] <jdv> long
[19:31] <coleman> There is an OS-level limit to the length of a command line but it is REALLY long
[19:31] <coleman> basically you have to blow the stack
[19:38] *** Maylay joined
[20:00] <tbrowder> i
[20:01] <[Coke]> yah, I ended up just playing with the number so it's not exploding right now, but would love to know what my limit really is so I can make sure I don't blow up when the args change slightly later.
[20:08] <tbrowder> looking at the docs i see no clean way to separate an absolute file path onto TWO parts: basename and its parrent. i think its "$f.IO.parent.absolute" but its
[20:09] <tbrowder> *it's not shown as an example anywhere in my searching
[20:09] <discord-raku-bot> <Nemokosch> any particular reason why Any.List is a List _containing_ Any?
[20:09] <tbrowder> 'scuse my typos...
[20:10] <discord-raku-bot> <Nemokosch> even worse: List.List being a nested list
[20:11] <lizmat> m: dd "foo".List
[20:11] <camelia> rakudo-moar 47f9b2860: OUTPUT: «("foo",)␤»
[20:12] <lizmat> calling .List on *any* scalar value, will create a List with that value
[20:12] <lizmat> m: dd List.List
[20:12] <camelia> rakudo-moar 47f9b2860: OUTPUT: «(List,)␤»
[20:12] <lizmat> that's not a recursive list, that's a list with a List type object in it
[20:12] <Nemokosch> indeed, but who thought this was a good idea? :\
[20:12] <tellable6> 2022-08-01T10:27:36Z #raku <lizmat> Nemokosch: you can ping @andrewshitov on Twitter :-)
[20:12] <tellable6> 2022-08-01T10:28:46Z #raku <lizmat> Nemokosch: this one?  Refurbishing Raku legacy with Raku
[20:12] <lizmat> it's the other side of:
[20:13] <lizmat> m: dd List[0]
[20:13] <camelia> rakudo-moar 47f9b2860: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤List cannot be parameterized␤at <tmp>:1␤------> dd List[0]⏏<EOL>␤»
[20:13] *** Maylay left
[20:13] <lizmat> m: dd "foo"[0]
[20:13] <camelia> rakudo-moar 47f9b2860: OUTPUT: «"foo"␤»
[20:13] *** Maylay joined
[20:13] <Nemokosch> and that's also a source of bugs
[20:13] <lizmat> it also simplified a *lot* of things
[20:14] <Nemokosch> indexing strings "works", just never well
[20:14] <Nemokosch> in my particular case - I'm retrieving JSON data and do a map on an array that may be missing
[20:15] <Nemokosch> the missing array acts like an array that contains an Any value
[20:15] <Nemokosch> like really...
[20:15] <lizmat> .map({ ... }) with $value
[20:16] <Nemokosch> it was deep(-ish) in an expression
[20:16] <lizmat> m: my %h; for %h<a> { dd $_ }
[20:16] <camelia> rakudo-moar 47f9b2860: OUTPUT: «Any %h{'a'} = Any␤»
[20:16] <lizmat> same issue, I guess
[20:16] <lizmat> so not just with JSON
[20:17] <Nemokosch> anyway - it can be solved surely, I for example added // () on the supposed array
[20:17] <Nemokosch> but I'm quite confident that it's a bad default...
[20:17] <lizmat> the default allows you to do this:
[20:18] <lizmat> m: my %h; %h<a>++; dd %h
[20:18] <camelia> rakudo-moar 47f9b2860: OUTPUT: «Hash %h = {:a(1)}␤»
[20:18] <Nemokosch> that a missing list will implicitly treated as a list that contains a sole Any
[20:18] <lizmat> the Any is actually a container waiting for a value
[20:18] <Nemokosch> and then throw warnings all over the place
[20:19] <Nemokosch> feels like very unnecessary mental load
[20:19] <lizmat> so you'd rather it be an empty Slip
[20:20] <Nemokosch> Well definitely, although I get it that it's really hard to adjust to that in a consistent manner
[20:21] <Nemokosch> but I do think Any.List itself is questionable as ((Any))
[20:21] <Nemokosch> or any value with .List as that value inside a List, for that matter
[20:21] <lizmat> well, it is consistent: why would Any be different from any other type object ?
[20:22] <Nemokosch> I mean... yes, it escalates from the generally troublesome "type objects are default values" principle, partially
[20:23] <Nemokosch> but it doesn't follow that values have to convert into lists with a wrapping semantics
[20:23] <Nemokosch> That's not a "conversion" in my dictionary for sure
[20:24] <Nemokosch> Especially if we take it into account that a List can be converted into an Int as the number of elements in that List
[20:24] <lizmat> well, if you feel strongly about it, there's the problem solving repo :-)
[20:25] <lizmat> it's just that there have been *extensive* discussions on these behaviours in the 15 years it took to get the first release out
[20:25] <Nemokosch> If I saw any chance that it would be changed, I would open an issue for it
[20:26] <Nemokosch> Frankly speaking, this falls into the category that I consider a waste of time
[20:27] <lizmat> I would have to agree :-)
[20:27] <Nemokosch> Eventually, there will be no convincing argument why it works this way; there will be 5 other things brought up that I all consider issues, and eventually nothing would change.
[20:27] <Nemokosch> Been there, done that at least two times
[20:30] <Nemokosch> Now that we are at it, not even != and ne could be turned into proper first-class operators by all that "lobby" coming from several unrelated people
[20:31] <Nemokosch> And out of all the issues that I consider unjustified gotchas, 1. that would be the easiest fix 2. that got most support from unrelated people
[20:31] <lizmat> how are != and ne not first class operators ?
[20:32] <Nemokosch> You have to know this because you were the one who even opened a pull request to fix this
[20:34] <Nemokosch> m: so (1&2&3&7) < 5
[20:34] <camelia> rakudo-moar 47f9b2860: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "so " in expression "so (1&2&3&7) <" in sink context (line 1)␤»
[20:34] <Nemokosch> oops
[20:34] <Nemokosch> m: dd so (1&2&3&7) < 5
[20:34] <camelia> rakudo-moar 47f9b2860: OUTPUT: «Bool::False␤»
[20:34] <Nemokosch> m: dd so (1&2&3&7) < 5
[20:34] <camelia> rakudo-moar 47f9b2860: OUTPUT: «Bool::False␤»
[20:35] <Nemokosch> me and the clipboard
[20:35] <Nemokosch> m: dd so (1&2&3) < 5
[20:35] <camelia> rakudo-moar 47f9b2860: OUTPUT: «Bool::True␤»
[20:35] <Nemokosch> and you probably know what comes next
[20:35] <Nemokosch> m: dd so (1&2&3&7) != 5
[20:35] <camelia> rakudo-moar 47f9b2860: OUTPUT: «Bool::True␤»
[20:35] <Nemokosch> m: dd so (1&2&3&7&5) != 5
[20:35] <camelia> rakudo-moar 47f9b2860: OUTPUT: «Bool::True␤»
[20:36] <Nemokosch> "all of these are not equal to 5"... seems about right, no? would I lie to you? :D
[20:37] <lizmat> https://github.com/rakudo/rakudo/pull/3874
[20:38] <Nemokosch> Exactly!
[20:38] <lizmat> well, read all the reasoning please :-)
[20:40] <lizmat> Ah, I see you did
[20:41] <lizmat> well, I spent enough time on that already, and as I said on Jan 5th, I gave up
[20:47] <Nemokosch> and ngl I think it's easy to see the logic mistake TimToady made when this came up back in the day on irc
[20:47] <Nemokosch> namely that English (languages I know in general added) doesn't know precedence for words
[20:48] <Nemokosch> therefore natural languages can "contradict themselves" by using different precedence, conveyed by emphasis or just common sense in the context
[20:48] <Nemokosch> this doesn't work for a formal language
[20:53] <Nemokosch> also the whole analogy breaks if we don't insist on reading != as something with "not" in it but say "is different", "is smaller or bigger" or something like that
[20:57] <lizmat> I'm afraid your preaching to the choir here  :-)
[20:58] *** Maylay left
[20:59] *** Maylay joined
[21:01] <Nemokosch> I'm too late to join a conversation from 6 years ago :P
[21:01] <Nemokosch> But frankly I wouldn't even feel chill about it if I didn't leave some traces of what I think has to be commented on
[21:04] <Nemokosch> And this whole reasoning is too easy to break, annoyingly easy, when we are talking about the design of a programming language...
[21:05] <Nemokosch> what does "5 is greater than any of the listed numbers" even mean, for example? It definitely can be understood as "greater than all of them", right?
[21:06] <Nemokosch> but when I pose this as a question, suddenly it leans towards "is there a number in that list that is less than 5"
[21:08] <Nemokosch> we could come to the conclusion that it's "any" that is really weird and "logic-breaking" in English, not negation
[21:11] <tbrowder> erf, solution is "path.dirname, path.basename", i just can't remember it!!!
[21:12] <Nemokosch> sorry for spamming that question "away" - actually if I noticed, I would have known the answer :(
[21:36] *** Sgeo joined
[21:38] *** sena_kun left
[21:40] *** donpdonp- joined
[21:40] *** mjgardner_ joined
[21:40] *** andinus` joined
[21:41] *** mexen_ joined
[21:41] *** Some-body_ joined
[21:42] *** BinGOs left
[21:43] *** lucs_ joined
[21:44] *** broquain1 joined
[21:44] *** mykhal_ joined
[21:47] *** Scotteh_ joined
[21:48] *** mexen left
[21:48] *** DarthGandalf left
[21:48] *** donpdonp|z_ left
[21:48] *** andinus left
[21:48] *** broquaint left
[21:48] *** lucs left
[21:48] *** Scotteh left
[21:48] *** mykhal left
[21:48] *** mjgardner left
[21:48] *** markmarkmark left
[21:48] *** Some-body_ is now known as DarthGandalf
[21:48] *** mjgardner_ is now known as mjgardner
[21:48] *** mexen_ is now known as mexen
[21:55] *** markmarkmark joined
[22:35] <Geth> ¦ doc: 2f18f82501 | (Daniel Mita)++ (committed using GitHub Web editor) | cpanfile
[22:35] <Geth> ¦ doc: Set max AssetPack version in cpanfile (#4094)
[22:35] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/2f18f82501
[22:36] *** linkable6 left
[22:38] *** linkable6 joined
[22:56] *** guifa_ joined
[22:56] *** guifa_ left
[23:09] *** bingos joined
[23:26] *** guifa_ joined
[23:26] *** guifa_ left
[23:36] *** lichtkind left
[23:44] *** Nemokosch left
[23:46] *** guifa_ joined
[23:46] *** guifa_ left
