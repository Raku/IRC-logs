[00:06] *** reportable6 left
[00:07] *** reportable6 joined
[00:35] *** linkable6 left
[00:38] *** linkable6 joined
[00:57] *** jgaz joined
[00:58] *** jgaz left
[01:27] *** atweiden-air_ joined
[01:27] <atweiden-air_> this is my understanding of raku error handling. feedback would be appreciated
[01:27] <atweiden-air_> https://gist.github.com/atweiden/e59cf999308425216e157808a823dffd
[02:03] *** linkable6 left
[02:05] *** linkable6 joined
[03:05] *** linkable6 left
[03:05] *** evalable6 left
[03:06] *** linkable6 joined
[03:06] *** evalable6 joined
[03:20] *** irc_user left
[03:25] <xinming> tonyo: it's an cro app
[03:25] <xinming> web interface written in cro
[04:20] *** evalable6 left
[04:20] *** linkable6 left
[04:23] *** linkable6 joined
[04:23] *** evalable6 joined
[05:23] *** greppable6 left
[05:23] *** bloatable6 left
[05:23] *** linkable6 left
[05:23] *** quotable6 left
[05:23] *** benchable6 left
[05:23] *** squashable6 left
[05:23] *** reportable6 left
[05:23] *** committable6 left
[05:23] *** shareable6 left
[05:23] *** statisfiable6 left
[05:23] *** nativecallable6 left
[05:23] *** releasable6 left
[05:23] *** notable6 left
[05:23] *** bisectable6 left
[05:23] *** tellable6 left
[05:23] *** coverable6 left
[05:23] *** sourceable6 left
[05:23] *** unicodable6 left
[05:23] *** evalable6 left
[05:23] *** unicodable6 joined
[05:23] *** coverable6 joined
[05:23] *** linkable6 joined
[05:24] *** sourceable6 joined
[05:24] *** evalable6 joined
[05:24] *** reportable6 joined
[05:24] *** bisectable6 joined
[05:24] *** statisfiable6 joined
[05:24] *** releasable6 joined
[05:24] *** bloatable6 joined
[05:24] *** squashable6 joined
[05:25] *** nativecallable6 joined
[05:25] *** greppable6 joined
[05:25] *** committable6 joined
[05:25] *** shareable6 joined
[05:25] *** quotable6 joined
[05:25] *** benchable6 joined
[05:26] *** tellable6 joined
[05:26] *** notable6 joined
[05:27] *** squashable6 left
[05:29] *** squashable6 joined
[05:50] *** atweiden-air_ left
[06:07] *** reportable6 left
[06:09] *** reportable6 joined
[06:12] *** xinming left
[06:36] *** Sgeo left
[07:27] *** bingos is now known as BinGOs
[07:48] *** vasko joined
[07:48] *** vasko left
[07:48] *** vasko joined
[07:55] *** sena_kun joined
[07:58] *** [dpk] is now known as dpk
[08:51] *** abraxxa joined
[08:56] *** abraxxa left
[08:56] *** abraxxa joined
[09:12] *** kaskal- left
[09:12] *** samcv left
[09:12] *** kaskal joined
[09:13] *** samcv joined
[09:26] <lizmat> japhb: version 0.9 fixes the issues, afaics
[09:31] *** LilyWhite joined
[09:31] *** sena_kun left
[09:34] *** LilyWhite left
[09:51] *** abraxxa left
[09:51] *** abraxxa joined
[09:51] *** abraxxa left
[10:00] *** abraxxa joined
[10:01] *** abraxxa left
[10:11] *** sena_kun joined
[10:28] *** MoC joined
[10:31] *** djerius joined
[11:31] *** notable6 left
[11:31] *** greppable6 left
[11:31] *** tellable6 left
[11:31] *** bloatable6 left
[11:31] *** releasable6 left
[11:31] *** reportable6 left
[11:31] *** committable6 left
[11:31] *** benchable6 left
[11:31] *** evalable6 left
[11:31] *** unicodable6 left
[11:31] *** linkable6 left
[11:31] *** quotable6 left
[11:31] *** coverable6 left
[11:31] *** nativecallable6 left
[11:31] *** squashable6 left
[11:31] *** bisectable6 left
[11:31] *** sourceable6 left
[11:31] *** shareable6 left
[11:32] *** notable6 joined
[11:32] *** nativecallable6 joined
[11:32] *** sourceable6 joined
[11:32] *** releasable6 joined
[11:33] *** evalable6 joined
[11:33] *** linkable6 joined
[11:33] *** greppable6 joined
[11:33] *** bisectable6 joined
[11:33] *** squashable6 joined
[11:33] *** tellable6 joined
[11:33] *** benchable6 joined
[11:33] *** quotable6 joined
[11:34] *** coverable6 joined
[11:34] *** unicodable6 joined
[11:34] *** reportable6 joined
[11:34] *** bloatable6 joined
[11:34] *** committable6 joined
[11:34] *** shareable6 joined
[11:49] *** simcop2387 left
[11:50] *** perlbot left
[11:50] *** perlbot joined
[11:52] *** simcop2387 joined
[12:07] *** reportable6 left
[12:09] *** reportable6 joined
[12:35] *** bigdata left
[13:19] <tbrowder> note that skaji has a pending chg to mi6 that allows users to mod the dist,ini file to build as many separate docs as desired.
[13:19] <tbrowder> *dist.ini
[13:23] *** tirnanog joined
[13:41] <lizmat> weekly: https://www.reddit.com/r/rakulang/comments/wy8y69/seeking_tui_creation_advice/   Seeking TUI creation advice
[13:41] <notable6> lizmat, Noted! (weekly)
[13:42] <lizmat> weekly: https://www.reddit.com/r/rakulang/comments/wy5zq3/reworked_raku_exercises_on_exercismorg/ reworked Raku exercises on exercism.org
[13:42] <notable6> lizmat, Noted! (weekly)
[13:52] *** Voldenet left
[14:16] *** Sgeo joined
[15:16] *** unicodable6 left
[15:16] *** linkable6 left
[15:16] *** benchable6 left
[15:16] *** statisfiable6 left
[15:16] *** sourceable6 left
[15:16] *** bisectable6 left
[15:16] *** greppable6 left
[15:16] *** squashable6 left
[15:16] *** shareable6 left
[15:16] *** releasable6 left
[15:16] *** shareable6 joined
[15:16] *** releasable6 joined
[15:17] *** greppable6 joined
[15:17] *** unicodable6 joined
[15:17] *** benchable6 joined
[15:17] *** statisfiable6 joined
[15:17] *** sourceable6 joined
[15:18] *** bisectable6 joined
[15:18] *** linkable6 joined
[15:18] *** squashable6 joined
[15:42] *** justDeez is now known as justache
[15:57] *** Voldenet joined
[16:17] *** Voldenet left
[16:20] *** Voldenet joined
[16:26] * [Coke] wonders if he should stick with zsh for his shell as the new mac recommends.
[16:27] * [Coke] has been on bash as long as he can remember.
[16:27] <discord-raku-bot> <stevied> i use zsh. not  much different than bash. and you can still use bash scripts
[16:29] <discord-raku-bot> <stevied> only think that bites me regularly is you have to be sure to quote patterns with globs
[16:29] <discord-raku-bot> <stevied> other than that, I don't notice a difference between zsh and bash
[16:33] <discord-raku-bot> <Nemokosch> positive: using Raku on Mac should never be an issue because it's... completely out-tested
[16:33] <discord-raku-bot> <Nemokosch> negative: using Mac is as far from the Raku ideals as possible within the software industry
[16:33] *** Voldenet left
[16:35] *** Voldenet joined
[16:48] <lizmat> [Coke]: I hardly noticed a difference between zsh and bash, in the way that *I* use it :-)
[16:52] *** xinming joined
[16:53] <xinming> tonyo: sorry, laptop out of power
[16:54] <tonyo> xinming: i'd probably put a wrapper around the DB to catch a connection problem and retry.  if you wanted it to not be a bad xp then you could set a timer to try to reconnect
[17:02] *** sjn left
[17:05] <xinming> tonyo: the reason I don't like the wrapper thing is, It'll add check logic each time a call to database is issued.
[17:06] <xinming> I just thought that I can try to catch the exception, and do reconnect
[17:06] <xinming> will try that
[17:06] *** vasko left
[17:14] *** sjn joined
[17:18] <tonyo> the wrapper should just catch the exception, i mean
[17:18] <tonyo> and then retry once and return the results or the error
[17:20] *** HvszrStykp left
[17:20] <tonyo> using Supply.interval you could set up a check to autoreconnect
[17:23] *** sena_kun left
[17:27] *** andm joined
[17:27] *** andm left
[17:34] *** ioh joined
[17:34] *** axmed99 joined
[17:57] *** sena_kun joined
[18:01] *** tirnanog left
[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[18:36] *** MoC left
[19:26] *** [Coke] left
[19:26] *** [Coke] joined
[19:29] * [Coke] has been on bash as long as he can remember.
[19:37] <Xliff> m: "a/b/c/d".IO.dirname.^name.say
[19:37] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «Str␤»
[19:38] <Xliff> Is there any way to get the directory of an IO::Path as an IO path?
[19:38] <Xliff> Otherways to add a directory to an IO path, I have to roundtrip IO::Path -> Str -> IO::Path
[19:40] <Xliff> m: "a/b/c/d".IO.parent.^name.say
[19:40] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «IO::Path␤»
[19:40] <Xliff> m: "a/b/c/d".IO.parent.say
[19:40] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «"a/b/c".IO␤»
[19:41] <Xliff> Looks like we have a winner!
[19:45] <japhb> Xliff: BTW, there is a .sibling method if that's what you really want (to find a path "next to" an existing one) -- many people end up doing .parent.child, but that's just extra steps.
[19:46] <tonyo> m: 'a/b/c/d'.IO.sibling.^name.say
[19:47] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»
[19:47] <tonyo> m: my \a = 'a/b/c/d'; say a.IO.sibling(a).^name
[19:47] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «IO::Path␤»
[19:47] <tonyo> m: my \a = 'a/b/c/d'; say a.IO.sibling(a).Str
[19:47] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «a/b/c/a/b/c/d␤»
[19:48] <japhb> m: 'a/b/c/d'.IO.sibling('e')
[19:48] <tonyo> m: my \a = 'a/b/c/d'; say a.IO.sibling('.').resolve.Str
[19:48] <camelia> rakudo-moar 5a6344fc6: ( no output )
[19:48] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «/home/camelia/a/b/c␤»
[19:48] <japhb> m: 'a/b/c/d'.IO.sibling('e').say
[19:48] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «"a/b/c/e".IO␤»
[19:48] <tonyo> that looks wrong..adding a '.' shouldn't cause it to back up one
[19:48] <tonyo> oh, i see
[19:49] <tonyo> m: my \a = 'a/b/c/d'; say a.IO.sibling(a.parts[*-1]).resolve.Str
[19:49] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «No such method 'parts' for invocant of type 'Str'.  Did you mean any of␤these: 'pairs', 'path'?␤  in block <unit> at <tmp> line 1␤␤»
[19:49] <tonyo> m: my \a = 'a/b/c/d'.IO; say a.sibling(a.parts[*-1]).resolve.Str
[19:49] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «/home/camelia/a/b/c/volume      ␤»
[19:50] <tonyo> m: my \a = 'a/b/c/d'.IO; say a.sibling(a.parts[*-1]).resolve.Str
[19:50] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «/home/camelia/a/b/c/volume      ␤»
[19:50] <tonyo> hrh
[20:10] <Xliff> OK. Is there a way I can get the location of a compunit at compile time?
[20:13] <lizmat> define location ?
[20:15] <Xliff> It's file
[20:16] <Xliff> I'm currently using: ::?CLASS.^can('init').head.file.split(' ').head.IO.
[20:16] <Xliff> Where 'init' is a method in the class.
[20:16] <Xliff> But I am getting 'gen/moar' from somewhere and I don't know why. Compile time artefact?
[20:26] *** linkable6 left
[20:26] *** evalable6 left
[20:28] *** evalable6 joined
[20:28] *** linkable6 joined
[20:44] *** eseyman joined
[21:06] *** Some-body_ joined
[21:07] *** DarthGandalf left
[21:08] *** Some-body_ is now known as DarthGandalf
[21:10] *** sena_kun left
[21:58] *** axmed99 left
[21:59] <lizmat> https://raku.land/cpan:NINE/Inline::Perl5   # release 0.60, nine++
[22:04] <lizmat> and I can run the Inline::Perl5 integration tests again!  :-)
[22:33] *** vrurg left
[22:33] *** vrurg joined
[22:38] <lizmat> tonyo: I've just uploaded rak:ver<0.0.14> to fez about 30 mins ago, and it still doesn't show
[22:39] <lizmat> tonyo ugexe feels like something is stuck ?
[22:39] <lizmat> Are you sure you want to upload rak-0.0.14.tar.gz to Zef ecosystem? (y/N) y
[22:39] <lizmat> Executing /Users/liz/Github/rakudo/install/bin/rakudo -e use Fez::CLI --file=rak-0.0.14.tar.gz upload
[22:39] <lizmat> >>= Hey! You did it! Your dist will be indexed shortly.
[22:39] <lizmat> It will appear in https://360.zef.pm/
[22:41] <lizmat> but it isn't listed there :-(
[22:50] *** epony left
[23:33] *** sjn left
[23:46] *** sjn joined
[23:53] *** epony joined
