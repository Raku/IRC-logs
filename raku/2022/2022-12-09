[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:54] *** s8 joined
[01:03] *** xinming left
[01:05] *** xinming joined
[01:14] *** squashable6 left
[01:17] *** squashable6 joined
[01:18] *** s8 left
[01:50] <tbrowder> i'm trying to install raku on an ubuntu host but i'm not real familiar with ubuntu. what's the preferred way to install the latest raku on ubuntu?
[01:57] <Guest58> tbrowder there is the rakudo compiler, just install it
[01:59] <tbrowder> i know, but it‚Äôs old, i want the latest raku
[02:08] <avuserow> tbrowder: nxadm has some prebuilt packages at https://cloudsmith.io/~nxadm-pkgs/repos/rakudo-pkg/packages/
[02:09] <avuserow> you should be able to add that repo and then apt-get install the appropriate one
[02:09] <avuserow> I see debian ones, maybe those would work
[02:09] <avuserow> otherwise I would look for a PPA, or use rakubrew
[02:18] *** linkable6 left
[02:18] *** evalable6 left
[02:18] * guifa is late but
[02:18] <guifa> https://gist.github.com/alabamenhu/7261845862162b13b4a2affb4d945f58
[02:19] <guifa> Can annyone read that over and give me some feedback / grammar check / etc?  
[02:21] *** evalable6 joined
[02:21] *** linkable6 joined
[02:27] *** razetime joined
[02:39] <tbrowder> avuserow: yeah, i use nxadm's packages on debian, i guess i'll use that. thnx
[02:52] *** Kaiepi left
[03:28] *** atweedie_ joined
[03:28] *** coleman_ joined
[03:28] *** patterner_____ joined
[03:30] *** Voldenet_ joined
[03:31] *** lesihctej joined
[03:31] *** vrurg_ joined
[03:32] *** jaguart2 joined
[03:34] *** bisectable6 left
[03:34] *** committable6 left
[03:34] *** patterner____ left
[03:34] *** coleman left
[03:34] *** atweedie left
[03:34] *** reportable6 left
[03:34] *** coleman_ is now known as coleman
[03:34] *** vrurg left
[03:34] *** Voldenet left
[03:34] *** jetchisel left
[03:34] *** jaguart left
[03:34] *** Voldenet_ is now known as Voldenet
[03:34] *** atweedie_ is now known as atweedie
[03:38] *** jaguart2 left
[03:38] *** jaguart joined
[03:53] *** bisectable6 joined
[03:53] *** reportable6 joined
[03:55] *** committable6 joined
[04:21] <jaguart> @guifa - this nosey elf couldn't get ``zef install Intl::CLDR`` to install - or Intl::CLDR::Immutability... is there a cyclic dependency?
[04:21] *** Guest58 left
[04:27] *** squashable6 left
[04:28] *** squashable6 joined
[04:29] <jaguart> @guifa = maybe s/ultimately intending her code that much/ultimately indenting her code that much/
[04:32] <jaguart> @guifa maybe s/reduction bit has some many elements/reduction bit has so many elements/
[04:39] <jaguart> @guifa++ - nice article :) thank you
[05:28] *** evalable6 left
[05:28] *** linkable6 left
[05:29] *** evalable6 joined
[05:30] *** linkable6 joined
[05:50] *** Kaiepi joined
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[06:21] *** jpn joined
[07:04] *** Sgeo left
[07:16] *** Kaiepi left
[07:19] *** abraxxa joined
[07:26] *** abraxxa left
[07:27] *** abraxxa joined
[07:37] *** abraxxa left
[07:40] *** abraxxa joined
[07:45] <Geth> ¬¶ advent: 012d0d2f7f | (Ben Davies)++ | 2 files
[07:45] <Geth> ¬¶ advent: Add Kaiepi's "Junction Transformers" article
[07:45] <Geth> ¬¶ advent: review: https://github.com/Raku/advent/commit/012d0d2f7f
[07:45] <Geth> ¬¶ advent: 3d62595572 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | 2 files
[07:45] <Geth> ¬¶ advent: Merge pull request #105 from Kaiepi/junction-transformers
[07:45] <Geth> ¬¶ advent: 
[07:45] <Geth> ¬¶ advent: Add Kaiepi's "Junction Transformers" article
[07:45] <Geth> ¬¶ advent: review: https://github.com/Raku/advent/commit/3d62595572
[07:58] *** Kaiepi joined
[08:23] <discord-raku-bot> <Nemokosch> tbrowder: for what it's worth, rakubrew already has it bundled
[08:27] *** jpn left
[08:48] *** jpn joined
[09:14] *** holyghost joined
[09:19] *** holyghost left
[09:20] *** lichtkind_ joined
[09:25] *** jpn left
[09:31] *** jpn joined
[10:19] <guifa> jaugart: let me test that, Intl::CLDR shouldn't have any problem, Immutability is an old submodule that shouldn't be around anymore
[10:20] <guifa> oh wow, yup there's two or three uses of it, but since i had an old copy of immutability on my machine, it didn't cause an error on my end
[10:26] *** epony left
[10:40] *** mscha joined
[10:42] *** mscha left
[11:13] <tbrowder> <Nemokosch>: thnx, i've been wanting to try rakubrew--this is a good opportuniy to do so
[11:42] *** linkable6 left
[11:42] *** evalable6 left
[11:44] *** linkable6 joined
[11:45] *** evalable6 joined
[11:46] *** djerius left
[11:47] *** djerius joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:06] <discord-raku-bot> <Nemokosch> https://github.com/Raku/problem-solving/issues/336 could someone please read the last paragraph of the long 2colours comment at the end?
[12:07] <discord-raku-bot> <Nemokosch> That really turned into a "spitting facts" paragraph and I would like to hear others' opinion about it
[12:37] *** epony joined
[12:53] *** abraxxa left
[13:10] *** epony left
[13:15] *** epony joined
[13:16] *** Xliff joined
[13:16] <Xliff> Can you override say()?
[13:16] <discord-raku-bot> <Nemokosch> nothing prevents you from it, I think. The question is more, why would you want to, instead of providing string representations for certain data
[13:17] <Xliff> TUI 
[13:17] <Xliff> So how would you do it?
[13:28] <discord-raku-bot> <Nemokosch> well, just define a proto say for yourself... no?
[13:29] <discord-raku-bot> <Nemokosch> or even an only sub, as it suits you
[13:30] <discord-raku-bot> <Nemokosch> lexical scoping
[13:35] <Xliff> Ah. Thanks.
[13:38] <discord-raku-bot> <Nemokosch> built-ins come from a scope that encloses your compilation unit
[13:38] <discord-raku-bot> <Nemokosch> so if you define something with that name, you can just shadow them
[13:44] <Geth> ¬¶ advent: ef6df10497 | (Ben Davies)++ | raku-advent-2022/articles/junction-transformers.md
[13:44] <Geth> ¬¶ advent: Clarify that junction (auto)threading is recursive
[13:44] <Geth> ¬¶ advent: 
[13:44] <Geth> ¬¶ advent: It's why we're slapping Mu everywhere, yet not Junction:D, which a
[13:44] <Geth> ¬¶ advent: reader might assume gets forwarded around in its most literal sense.
[13:44] <Geth> ¬¶ advent: review: https://github.com/Raku/advent/commit/ef6df10497
[13:44] <Geth> ¬¶ advent: a5fd21a8e6 | (Ben Davies)++ | raku-advent-2022/articles/junction-transformers.md
[13:44] <Geth> ¬¶ advent: Use a more up-to-date Kind example link
[13:44] <Geth> ¬¶ advent: review: https://github.com/Raku/advent/commit/a5fd21a8e6
[13:45] *** Xliff left
[13:51] *** vrurg_ is now known as vrurg
[13:55] <discord-raku-bot> <Nemokosch> What is eigenstate?
[14:07] <El_Che> the state of the eigen
[14:10] <moritz> the values in a junction are its eigenstates
[14:10] <moritz> so any(1, 2, 3) => the eigenstates are (1, 2, 3)
[14:11] <El_Che> ethymologie: partial translation of German eigenstand, from eigen- + stand state, condition 
[14:11] <El_Che> how convinient, moritz, how convinien
[14:11] <El_Che> t
[14:11] <El_Che> :P
[14:33] *** Sgeo joined
[15:02] *** kaskal left
[15:03] *** kaskal joined
[15:08] *** discord-raku-bot left
[15:08] *** discord-raku-bot joined
[15:12] *** discord-raku-bot left
[15:18] *** discord-raku-bot joined
[15:19] *** razetime left
[15:19] *** kaskal left
[15:21] *** kaskal joined
[15:37] <japhb> I suspect the more proximate history is a reference to eigenvalues and eigenvectors in linear algebra.
[15:37] *** mcmillhj joined
[15:44] *** lichtkind__ joined
[15:47] *** lichtkind_ left
[15:48] <El_Che> that's one way of looking at it
[15:48] <El_Che> or not looking at it
[15:49] <El_Che> ¬Ø\_(„ÉÑ)_/¬Ø
[15:55] <tbrowder> one more question about rakudo star  installation on Windows: preference on Choclatey or Scoop?
[15:57] <[Coke]> I think I used choclately once and it was OK, but I typically build from source, sorry
[16:06] *** mcmillhj left
[16:10] <discord-raku-bot> <Nemokosch> I'm pretty sure eigenstates have only obscure relation (if at all) to eigenvectors and eigenvalues
[16:17] *** mcmillhj joined
[16:37] *** TieUpYourCamel left
[16:43] *** TieUpYourCamel joined
[17:10] *** discord-raku-bot left
[17:10] *** discord-raku-bot joined
[17:13] <smol-hors> how can I make a hash compare keys with eqv?
[17:20] <smol-hors> nevermind it was an xy problem
[17:20] <smol-hors> and I figured out the x
[17:21] <discord-raku-bot> <Nemokosch> I wonder if you can do that at all
[17:21] <discord-raku-bot> <Nemokosch> But yeah consider value types
[17:21] <discord-raku-bot> <Nemokosch> Like ValueList
[17:22] *** mcmillhj left
[17:49] <smol-hors> m: say -2 leg -1
[17:49] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´More‚ê§¬ª
[17:50] <smol-hors> oh
[17:50] <smol-hors> leg is for strings, right?
[17:51] <smol-hors> silly me
[17:51] <smol-hors> I wanted <=>
[18:00] <[Coke]> smol-hors++
[18:00] *** reportable6 left
[18:01] <smol-hors> well here's my aoc day 9 problem 1 anyway https://github.com/esnk86/aoc22/blob/main/09/main.raku ü¶ã
[18:02] *** reportable6 joined
[18:40] <discord-raku-bot> <lucs> I like the idea of having (I'll be simplifying a bit here) a file "myscript.raku" that just has "use My::Module", where MyModule.rakumod has the MAIN() function.
[18:41] <discord-raku-bot> <lucs> But it seem that if I want a custom USAGE() function, it's not found if it's in the module file, but it is, if in the script file.
[18:41] <discord-raku-bot> <lucs> But it seems that if I want a custom USAGE() function, it's not found if it's in the module file, but it is, if in the script file.
[18:41] <discord-raku-bot> <lucs> How can I have it in the module file?
[18:50] <discord-raku-bot> <gfldex> <@212055773407215616> did you try to put the proto MAIN into the module?
[18:57] <moritz> iirc MAIN is designed to *only* run in the top-level script
[19:01] *** RakuIRCLogger__ joined
[19:01] *** RakuIRCLogger left
[19:02] *** lizmat_ joined
[19:02] *** Geth__ joined
[19:02] *** Geth__ left
[19:04] *** Geth left
[19:04] *** lizmat left
[19:09] *** lizmat_ left
[19:10] *** lizmat joined
[19:44] <tbrowder> .tell [Coke] i get the aspell.t error on Ubuntu, too.
[19:44] <tellable6> tbrowder, I'll pass your message to [Coke]
[19:46] <lucs> moritz: Turns out MAIN can get invoked the way I described it, but...
[19:48] <lucs> gfldex: ... I'm trying to reproduce the problem with two simple (kind of golfed) files to demonstrate the problem (where the module has a ÔΩ¢proto sub MAIN (|) is export {*}ÔΩ£ line), but something weird is going on, and the script hangs.
[19:48] <lucs> Will fix that first, and report then.
[19:49] *** jpn left
[19:51] *** jpn joined
[19:52] *** mcmillhj joined
[19:57] <lucs> Sheesh, I just got up from a nap, am I still asleep?: https://gist.github.com/lucs/672fb1e434cf1bfd3f4bc65fbb233a43
[19:58] <lucs> (I must be doing something profoundly dumb there.)
[20:03] <guifa> Xliff: you can override it by wrapping it
[20:03] <tellable6> guifa, I'll pass your message to Xliff
[20:03] <guifa> It just depends on whether you want it to be global or local
[20:05] *** AAI9YL joined
[20:09] <discord-raku-bot> <Nemokosch> bluntly put: MAIN does have issues, alas
[20:13] *** mcmillhj left
[20:13] *** euandreh joined
[20:22] <lucs> Can someone kindly go to the trouble of making those files from my gist and tell me if it works for them?
[20:30] *** jpn left
[20:30] <discord-raku-bot> <Nahita> lucs: i do "raku myscript.raku" and get "USAGE() in myscript.raku" as the output
[20:32] <discord-raku-bot> <lucs> <@836605577400549436> Aha. Good. That is the expected result.
[20:32] <discord-raku-bot> <lucs> I have no idea why it hangs here, strange.
[20:34] <discord-raku-bot> <lucs> Now, given that, is it possible to have USAGE() in the module file?
[20:34] <discord-raku-bot> <lucs> <@836605577400549436> Also: thanks for trying it.
[20:37] <discord-raku-bot> <Nahita> np, if you mean uncommenting the USAGE sub in MyModule.rakumod, no it did not trigger;  again i did "raku myscript.raku" and get "USAGE() in myscript.raku" as the output
[20:39] *** jpn joined
[20:39] <discord-raku-bot> <lucs> And if you comment out the one in myscript, but leave the one in the module uncommented, there will be no output, correct?
[20:45] <discord-raku-bot> <Nahita> no custom output yes; the default Usage message appears like "Usage: myscript.raku <foo>"
[20:45] *** jpn left
[20:46] <discord-raku-bot> <lucs> Oh, correct, yeah, I forgot, the default USAGE kicks in.
[20:46] *** MoC joined
[20:46] <discord-raku-bot> <lucs> I want my custom one *snif*
[20:48] <El_Che> lo
[20:48] <lucs> hi
[20:54] * lucs goes to practice; back later
[21:14] *** MoC left
[21:21] *** jpn joined
[21:26] *** jpn left
[21:36] *** jpn joined
[22:16] <discord-raku-bot> <Nemokosch> smol-hors: please consider sharing the solutions under https://github.com/codesections/advent-of-raku-2022 üòõ
[22:16] <smol-hors> ok :)
[22:16] <smol-hors> I'm still stuck on problem 2!
[22:16] <smol-hors> works on the example but not the input
[22:24] <smol-hors> https://gist.github.com/esnk86/b8a84a383225dca0900edd9fe7e9cccb
[22:24] <smol-hors> here's what I've got so far (spoilers)
[22:30] *** jpn left
[22:53] <discord-raku-bot> <Nemokosch> in what regard is it broken?
[23:17] *** deoac joined
[23:52] <smol-hors> nvm, I got it fixed.. I'll post the finished version soon
