[00:07] *** reportable6 left
[00:10] *** reportable6 joined
[00:15] *** derpydoo joined
[00:51] *** sgrs left
[02:11] *** epony left
[03:00] *** epony joined
[03:04] *** Kaiepi joined
[03:30] *** Xliff joined
[03:38] <Xliff> \o
[03:40] <tonyo> .
[03:40] <tellable6> 2022-11-25T03:42:18Z #raku <melezhik> tonyo - finally I've made it - full automation of fez upload via pipeline - https://fosstodon.org/@melezhik/109402367802442237
[03:45] <Geth> ¬¶ advent: 2dce590ce8 | (Daniel Sockwell)++ (committed using GitHub Web editor) | raku-advent-2022/authors.md
[03:45] <Geth> ¬¶ advent: Add @codesections posts
[03:45] <Geth> ¬¶ advent: review: https://github.com/Raku/advent/commit/2dce590ce8
[03:46] <Geth> ¬¶ advent: 1607f406c9 | (Daniel Sockwell)++ (committed using GitHub Web editor) | raku-advent-2022/authors.md
[03:46] <Geth> ¬¶ advent: Add @codesections 
[03:46] <Geth> ¬¶ advent: 
[03:46] <Geth> ¬¶ advent: Oops, forgot to put my handle
[03:46] <Geth> ¬¶ advent: review: https://github.com/Raku/advent/commit/1607f406c9
[04:24] <tonyo> melezhik: that's awesome
[04:24] <tellable6> tonyo, I'll pass your message to melezhik
[04:30] *** linkable6 left
[04:30] *** evalable6 left
[04:32] *** linkable6 joined
[04:32] *** evalable6 joined
[04:50] *** alfonsox joined
[05:19] *** Xliff left
[05:31] *** Guest45 left
[06:07] *** reportable6 left
[06:10] *** reportable6 joined
[06:46] *** ToddAndMargo joined
[07:18] <Geth> ¬¶ advent: 29914b75ae | (JJ Merelo)++ | raku-advent-2022/articles/CuBu.md
[07:18] <Geth> ¬¶ advent: Article by @terceranexus
[07:18] <Geth> ¬¶ advent: review: https://github.com/Raku/advent/commit/29914b75ae
[07:46] *** linkable6 left
[07:48] *** linkable6 joined
[07:50] <patrickb> [Coke]: You'll have to do a bit of manual fiddling for that. There is the `register` subcommand to add a version in a given path with a given name.
[07:51] <patrickb> Hm. Even easier. Just mv ~/.rakubrew/versions/moar-2022.XX ~/.rakubrew/versions/somename
[07:52] <patrickb> Then rakubrew download moar 2022.XX again. and repeat
[07:59] *** Sgeo left
[07:59] *** sena_kun joined
[08:18] *** abraxxa joined
[08:23] *** abraxxa left
[08:23] *** abraxxa joined
[08:25] *** frost joined
[08:27] *** derpydoo left
[08:31] *** frost left
[08:37] *** razetime joined
[08:54] *** dakkar joined
[09:14] *** Bocaneri joined
[09:15] *** Bocaneri is now known as Guest9581
[09:17] *** Sauvin left
[09:20] <Geth> ¬¶ ecosystem/main: 8f3a2cab52 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list
[09:20] <Geth> ¬¶ ecosystem/main: Moved to the zef ecosystem
[09:20] <Geth> ¬¶ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/8f3a2cab52
[09:26] *** Guest9581 is now known as Sauvin
[09:42] *** Kaiepi left
[09:42] *** ToddAndMargo left
[10:01] *** alfonsox left
[10:35] *** lichtkind joined
[10:36] *** guifa joined
[10:36] <guifa> o/
[10:40] <El_Che> \o
[10:47] *** Kaiepi joined
[11:32] *** sarna left
[11:33] *** sarna joined
[11:52] *** synthmeat left
[11:52] *** synthmeat joined
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[12:21] <sarna> o/
[12:21] *** drakonis joined
[12:23] <sarna> is there any better way of doing `($foo operator $bar).method`? is that the prettiest it can get? :) I dislike that I have to go back to foo to add the opening paren, I'd prefer something like `$foo operator $bar <magic> { .method }` or similar
[12:23] <sarna> `given $foo operator $bar { .method }` works, but still I have to travel back to foo to add it
[12:29] <discord-raku-bot> <Nahita> \o i think that's what `andthen` can be used for
[12:29] <discord-raku-bot> <Nahita> e.g., `3 ** 7 andthen .succ`
[12:29] <discord-raku-bot> <Nahita> but it needs LHS to produce a defined result
[12:30] <sarna> üòç it works! thank you Nahita
[12:31] <sarna> it will always be defined (it's a set difference) so no worries about that
[12:31] <discord-raku-bot> <Nahita> oh i see
[12:31] <discord-raku-bot> <Nahita> np
[12:34] *** discord-raku-bot left
[12:34] *** discord-raku-bot joined
[12:38] <discord-raku-bot> <Nemokosch> by the way - watch out because `andthen` actually has lower precedence than the assignment operators!
[12:39] <discord-raku-bot> <Nemokosch> this is something that gets me every now and then
[12:51] *** razetime left
[13:00] *** Geth left
[13:01] *** RakuIRCLogger left
[13:01] *** lizmat left
[13:02] *** lizmat joined
[13:05] <sarna> m: my $foo = 4 andthen 3; say $foo
[13:05] <camelia> rakudo-moar 83ffeca03: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§4‚ê§Useless use of constant integer 3 in sink context (line 1)‚ê§¬ª
[13:05] <sarna> like that?
[13:08] *** Geth joined
[13:08] *** RakuIRCLogger joined
[13:13] *** sgrs joined
[13:27] *** derpydoo joined
[13:28] *** sgrs left
[13:44] *** sgrs joined
[13:53] *** sgrs left
[13:55] <Geth> ¬¶ Raku-Steering-Council/main: 0cd59d38ef | (Elizabeth Mattijsen)++ | minutes/20221126.md
[13:55] <Geth> ¬¶ Raku-Steering-Council/main: Minutes of 26 Nov 2022
[13:55] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/0cd59d38ef
[13:55] *** razetime joined
[13:59] *** Sgeo joined
[14:02] *** Geth left
[14:03] *** Geth joined
[14:25] *** Nemokosch joined
[14:26] *** Nemokosch left
[14:28] <[Coke]> all the links on https://github.com/Raku/Raku-Steering-Council/blob/main/papers/README.md are broken on the site.
[14:38] <lizmat> [Coke]: what do you mean witrh "the site" ?
[14:40] <Geth> ¬¶ Raku-Steering-Council/main: 62ffde3331 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | papers/README.md
[14:40] <Geth> ¬¶ Raku-Steering-Council/main: Add extensions
[14:40] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/62ffde3331
[14:41] <lizmat> ah, I see... seems the extensions were forgotten: now fixed!
[14:41] <lizmat> [Coke]++ for the headsup
[14:54] <sarna> what's the name of this style of calling functions? `foo: $arg` (vs `foo($arg)`)
[14:54] <sarna> additional question: can calls be chained in this way? or do I need to use parens/`andthen` :)
[14:56] *** lichtkind_ joined
[14:58] *** lichtkind left
[14:59] *** spacekookie_ is now known as spacekookie
[15:01] <lizmat> sarna: those are *not* equivalent
[15:01] <lizmat> only as a method can you do it like that
[15:01] <El_Che> hi lizmat 
[15:03] <sarna> lizmat: I'm still a bit confused - why does this work? I don't call it like a method, ie with a dot
[15:03] <sarna> m: say: "hello!"
[15:03] <camelia> rakudo-moar 83ffeca03: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of constant string "hello!" in sink context (line 1)‚ê§¬ª
[15:03] <sarna> in my repl it doesn't warn, weird
[15:04] <lizmat> no, it's not
[15:04] <lizmat> in the REPL the last value that is evaluated, will be printed if nothing was printed
[15:04] <lizmat> just type 42 and press ENTER
[15:04] <sarna> oh, so it's as if I wrote "hello"?
[15:05] <lizmat> yup
[15:05] <sarna> ok, if I put it in a file it warns too. neat! :)
[15:06] <sarna> can I chain these calls in any way, besides `andthen`/putting them in `()`?
[15:07] <lizmat> perhaps https://docs.raku.org/routine/==%3E is what you're looking for?
[15:07] <lizmat> going afk&, will be back in a few hours
[15:07] *** Nemokosch joined
[15:07] <Nemokosch> m: say 1 + 2
[15:07] <camelia> rakudo-moar 83ffeca03: OUTPUT: ¬´3‚ê§¬ª
[15:08] <Nemokosch> what do you think?
[15:09] <sarna> thanks lizmat, this might be it!
[15:10] <Nemokosch> don't get too excited, to be honest
[15:11] <Nemokosch> most of the time, you still need the paren (if it's an only argument) for parser magic
[15:11] <Nemokosch> also, you basically give up on using methods
[15:11] <Nemokosch> this is the main reason I stuck to the andthen chaining style
[15:11] <sarna> wdym "give up on using methods"?
[15:12] <Nemokosch> how do you chain a method with ==> ?
[15:13] <sarna> m: [1,2,3] ==> sum()
[15:13] <camelia> rakudo-moar 83ffeca03: ( no output )
[15:13] <sarna> darn
[15:13] <sarna> m: [1,2,3] ==> sum() ==> say()
[15:13] <camelia> rakudo-moar 83ffeca03: OUTPUT: ¬´6‚ê§¬ª
[15:13] <sarna> are these not methods?
[15:14] <sarna> I was convinced I was calling .sum and .say on the array :)
[15:15] <Nemokosch> they are subroutines
[15:15] <Nemokosch> https://github.com/Raku/problem-solving/issues/328
[15:15] <sarna> ohh so there's both a subroutine and a method named in the same way?
[15:15] <Nemokosch> the reason I asked for head and tail subroutines :)
[15:16] <[Coke]> having a sub & a method are not universal, but it's common.
[15:16] <sarna> gotcha, makes sense. I'll skip using the feed operator for now then :) ty
[15:16] <Nemokosch> m: 1..10 ==> roll 10 ==> head 2 ==> say()
[15:16] <camelia> rakudo-moar 83ffeca03: OUTPUT: ¬´(7 3)‚ê§¬ª
[15:16] <Nemokosch> this works now but didn't work up until lizmat added the subs
[15:18] <Nemokosch> it's easier to fake a sub to be a method than vice versa
[15:19] <sarna> with .&?
[15:20] <Nemokosch> yep
[15:29] *** Guest58 joined
[15:36] *** bioexpress joined
[15:39] *** Nemokosch left
[15:43] *** Nemokosch joined
[15:54] *** Nemokosch left
[16:03] *** holyghost joined
[16:10] *** poohman joined
[16:10] <poohman> hello all
[16:11] <poohman> how can one write a negation for a named regex
[16:12] <poohman> my $spacer =/\h ** 1..*/;
[16:13] <poohman> sorry my $spacer =/\h ** 2..*/;
[16:14] <poohman> then can I use use the negation of this $spacer to match all words which are separated by only single spaces??
[16:16] <[Coke]> The opposite 2 or more spaces is not "1 space".
[16:16] <[Coke]> *of
[16:17] <[Coke]> words also match "not two or more spaces"
[16:20] <[Coke]> but: if you have something you can write as <foo>, you can negate that with <!foo>
[16:20] <[Coke]> but you probably need something like "\h*" -and- your restriction, or "\h*" and your negated restriction
[16:21] <[Coke]> should https://github.com/Raku/Raku-Steering-Council/blob/main/papers/cat_membership.md link to github IDs or is that too much?
[16:22] <[Coke]> same question for https://github.com/Raku/Raku-Steering-Council
[16:26] *** poohman left
[16:26] *** poohman joined
[16:28] <poohman> thanks Coke
[16:29] <poohman> I was basically trying to use any whitespace which is longer than 2 white spaces as a separator
[16:31] <poohman> let me see if the neagtion helps
[16:31] <poohman> thanks
[16:31] <poohman> quit
[16:33] *** Averna joined
[16:36] *** poohman left
[16:37] *** Kaiepi left
[16:37] <Geth> ¬¶ doc: coke assigned to Altai-man Issue Runnable snippets using Rakudo-JS https://github.com/Raku/doc/issues/2454
[16:55] *** Guest58 left
[17:17] <tonyo> m: my @matches = "one  two point three  three".split(/ \s ** 2..* /); dd @matches; #poohman
[17:17] <camelia> rakudo-moar 83ffeca03: OUTPUT: ¬´Array @matches = ["one", "two point three", "three"]‚ê§¬ª
[17:28] *** razetime left
[17:32] <Geth> ¬¶ doc: coke self-assigned Policy needed for incomplete snippets https://github.com/Raku/doc/issues/4138
[17:33] *** euandreh joined
[17:34] *** abraxxa left
[17:36] *** discord-raku-bot left
[17:36] *** discord-raku-bot joined
[17:42] *** dakkar left
[17:42] <discord-raku-bot> <Nemokosch> üéâ
[17:44] *** Kaiepi joined
[18:05] *** Guest58 joined
[18:08] *** reportable6 left
[18:11] *** reportable6 joined
[18:16] *** Guest58 left
[18:20] *** Guest58 joined
[18:26] <lizmat> PSA: due to circumstances, the Rakudo Weekly News will be published tomorrow
[18:45] <Geth> ¬¶ ecosystem/main: cf0ffd9161 | (Elizabeth Mattijsen)++ | META.list
[18:45] <Geth> ¬¶ ecosystem/main: Remove Math::Constants
[18:45] <Geth> ¬¶ ecosystem/main: 
[18:45] <Geth> ¬¶ ecosystem/main: It now lives in the zef ecosystem
[18:45] <Geth> ¬¶ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/cf0ffd9161
[18:47] <tonyo> .tell guifa any issues with uploading on that branch?
[18:47] <tellable6> tonyo, I'll pass your message to guifa
[18:50] *** bioexpress left
[19:32] <lucs> lizmat: This line (2064) in App.rakumod fails to compile:  NYI '--sayer'
[19:33] <lucs> Am I missing something in my environment?
[19:50] *** evalable6 left
[19:50] *** linkable6 left
[19:52] *** linkable6 joined
[19:53] *** evalable6 joined
[20:09] <discord-raku-bot> <Nahita> i faced that too, old version of Rakudo
[20:09] <discord-raku-bot> <Nahita> NYI was not present, so need to upgrade Rakudo
[20:11] <[Coke]> m: NYI "eek"
[20:11] <camelia> rakudo-moar 83ffeca03: OUTPUT: ¬´eek not yet implemented. Sorry.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[20:13] <[Coke]> looks like NYI() is an implementation detail in rakudo and not spec?
[20:13] <[Coke]> (but not marked as such)
[20:18] <discord-raku-bot> <Nemokosch> hm, I mean NYI itself could be specified so that different compilers provide the same interface to marking a not yet implemented feature
[20:18] <discord-raku-bot> <Nemokosch> if that makes sense
[20:19] *** Guest58 left
[20:20] <lucs> [Coke]: Hmm... I get "Undeclared name" here.
[20:21] <lucs> Could it be a recent addition?
[20:21] <[Coke]> lucs; what version of rakudo are you using?
[20:21] <[Coke]> nemokosch: it could be, but I don't see "NYI(" in roast
[20:21] <tellable6> [Coke], I'll pass your message to Nemokosch
[20:21] <lucs> Er, 2021.6, not too recent, eh.
[20:22] <lucs> (2021.06)
[20:22] <[Coke]> m: say $*VERSION
[20:22] <camelia> rakudo-moar 83ffeca03: OUTPUT: ¬´Dynamic variable $*VERSION not found‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[20:22] <tonyo> lucs: what's in App.rakumod on line 2064
[20:22] <[Coke]> m: say $*RAKU.compiler.version
[20:22] <camelia> rakudo-moar 83ffeca03: OUTPUT: ¬´v2022.07.97.g.83.ffeca.03‚ê§¬ª
[20:23] <lucs> tonyo: Exactly that line I showed:  NYI '--sayer'
[20:24] <lucs> Probably time for me to upgrade.
[20:24] <[Coke]> easiest way to resolve, yes.
[20:25] <[Coke]> ideally that module should depend on a version that contains NYI, but I'm not sure we can depend on a compiler version instead of a language version.
[20:25] <lucs> I'll do that (upgrade, later, a bit busy now), should fix it.
[20:25] <lucs> Thanks.
[20:36] *** Guest58 joined
[20:58] *** derpydoo left
[20:59] *** derpydoo joined
[21:00] *** Sauvin is now known as s
[21:00] *** s is now known as Sauvin
[21:04] *** tirnanog joined
[21:22] *** Averna left
[21:22] *** Averna joined
[21:27] *** Averna left
[22:07] *** sena_kun left
[22:15] *** Guest6 joined
[22:31] *** sena_kun joined
[22:41] *** sena_kun left
[23:10] <lizmat> lucs: there's also https://raku.land/zef:lizmat/NYI
[23:11] *** euandreh left
[23:37] <lucs> lizmat: Aha, maybe that dependency should be part of the App::Rak project?
[23:37] <lucs> That being said, it's kinda time I upgraded my version of Raku :)
[23:51] *** Guest6 left
