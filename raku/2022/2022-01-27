[00:07] *** reportable6 left
[00:10] *** reportable6 joined
[00:32] <guifa> alright, yay I have some color in Pretty::RAST.  Unfortunately, Comma's terminal gobbles up all the colored text

[00:32] * japhb wonders what terminal it's emulating

[00:33] <guifa> Not sure.  But it's weird that IntelliJ hasn't added basic color support — I tried searching online and I'm definitely not the only one that's missing color output

[01:09] *** bisectable6 joined
[01:09] *** statisfiable6 joined
[01:24] *** DarthGandalf left
[01:29] *** DarthGandalf joined
[01:37] *** DarthGandalf left
[01:49] *** perlbot left
[01:49] *** simcop2387_ joined
[01:50] *** simcop2387 left
[01:52] *** simcop2387_ is now known as simcop2387

[01:52] *** perlbot joined
[01:55] *** hasrthur joined
[02:00] *** hasrthur left
[03:00] *** linkable6 left
[03:00] *** evalable6 left
[03:02] *** linkable6 joined
[03:46] *** DarthGandalf joined
[03:54] *** DarthGandalf left
[03:55] *** frost joined
[04:02] *** DarthGandalf joined
[04:03] *** evalable6 joined
[04:19] *** DarthGandalf left
[04:26] *** guifa__ joined
[04:26] *** guifa left
[04:28] *** DarthGandalf joined
[04:30] *** frost left
[04:36] *** mahafyi joined
[04:49] <guifa__> https://github.com/alabamenhu/PrettyRAST  <-- Xliff, you may be interested in this module (altough it doesn't support very many nodes yet)

[04:50] <moon-child> oh cool

[04:52] <guifa__> moon-child don't peak in the code LOL it's full of half baked ideas and not clean code 

[05:05] *** frost joined
[05:55] *** frost left
[05:57] *** hasrthur joined
[06:01] *** hasrthur left
[06:08] *** reportable6 left
[07:08] *** benchable6 left
[07:08] *** releasable6 left
[07:08] *** unicodable6 left
[07:08] *** notable6 left
[07:08] *** linkable6 left
[07:08] *** shareable6 left
[07:08] *** sourceable6 left
[07:08] *** evalable6 left
[07:08] *** greppable6 left
[07:08] *** bloatable6 left
[07:08] *** coverable6 left
[07:08] *** committable6 left
[07:08] *** quotable6 left
[07:08] *** statisfiable6 left
[07:08] *** bisectable6 left
[07:08] *** tellable6 left
[07:08] *** squashable6 left
[07:08] *** nativecallable6 left
[07:09] *** evalable6 joined
[07:09] *** nativecallable6 joined
[07:09] *** tellable6 joined
[07:10] *** squashable6 joined
[07:10] *** quotable6 joined
[07:10] *** shareable6 joined
[07:11] *** unicodable6 joined
[07:11] *** releasable6 joined
[07:17] *** KotH left
[07:19] *** KotH joined
[07:34] *** abraxxa joined
[07:39] *** abraxxa left
[07:40] *** abraxxa joined
[07:49] *** jjido joined
[08:09] *** linkable6 joined
[08:09] *** Garbanzo_ left
[08:09] *** coverable6 joined
[08:11] *** greppable6 joined
[08:11] *** bisectable6 joined
[08:11] *** sourceable6 joined
[08:15] *** Sgeo left
[08:44] *** jjido left
[08:54] *** jjido joined
[09:01] *** dakkar joined
[09:09] *** notable6 joined
[09:10] *** statisfiable6 joined
[09:38] *** jjido left
[10:00] *** mahafyi left
[10:03] *** lizmat left
[10:04] *** lizmat joined
[10:04] *** Geth joined
[10:06] *** hasrthur joined
[10:09] *** reportable6 joined
[10:11] *** bloatable6 joined
[10:11] *** benchable6 joined
[10:31] *** jjido joined
[10:37] *** Voldenet_ joined
[10:37] *** Voldenet left
[10:37] *** Voldenet_ is now known as Voldenet

[11:04] *** jjido left
[11:29] *** slowtyper left
[11:29] *** slowtyper joined
[11:46] *** whatnext joined
[11:52] *** whatnext left
[11:52] *** whatnext joined
[12:06] <whatnext> do promises/threads leak - does anyone know? :)

[12:07] *** reportable6 left
[12:09] <lizmat> that's a real existential question  :-)

[12:10] <lizmat> I can only say: if you can produce a gist that shows memory leakage in your opinion, people could have a look at that

[12:10] <lizmat> afaik, there aren't many known leaks anymore

[12:10] <whatnext> ok that's good news

[12:11] <whatnext> however I definitely have one

[12:11] <whatnext> I wonder if there are any basic safeguards I should be doing but am missing?

[12:12] <lizmat> we can't say without you showing any code :-)

[12:19] <whatnext>  ok I have put the method which the api is calling in a gist here:# https://gist.github.com/whatnext/a33b7bff81c35ed4766add3a3daa6377

[12:20] <whatnext> not sure how much sense its going to make out of context mind you :D

[12:23] <whatnext> I tried both with `start` and `Thread.start` - it does the same thing

[12:37] <tbrowder> hi, rakuuns!

[12:47] <tbrowder> i'm working on a module needing textual user input to describe detailed 2d drawings and trying to decide whether to use a custom design (line oriented with tags) or json, toml, or some other well-known system. any opinions?

[12:49] <tbrowder> the module is already published but i'm adding more capability: Draw2D::Furniture

[12:54] *** whatnext left
[12:56] <tbrowder> the new, yet p-unpublished version already can draw basic rectangular room outlines, but the follow-on version will be able to draw any kind of 2d line segment (and maybe 3d drawings after that)

[12:57] <tbrowder> as usual, and mentioned by someone cited by lizmat recently, my modules are usually for my needsinput ideas

[12:58] <tbrowder> *needs but someone else may find a use for them

[12:59] <lizmat> whatnext: nothing obvious shows in that code, but it definitely doesn't show the whole story

[12:59] <tellable6> lizmat, I'll pass your message to whatnext

[13:13] *** perlbot left
[13:13] *** simcop2387 left
[13:19] *** simcop2387 joined
[13:21] *** perlbot joined
[13:31] *** whatnext joined
[13:32] <whatnext> lizmat did you see the gist? :)  https://gist.github.com/whatnext/a33b7bff81c35ed4766add3a3daa6377

[13:32] <tellable6> 2022-01-27T12:59:37Z #raku <lizmat> whatnext: nothing obvious shows in that code, but it definitely doesn't show the whole story

[13:32] <whatnext> ah sorry messages just caught up

[13:32] <whatnext> yeah its not obvious

[13:33] <lizmat> afk for a few hours&

[13:54] *** linkable6 left
[13:55] *** clarkema joined
[14:09] *** reportable6 joined
[14:11] *** committable6 joined
[14:15] *** djerius left
[14:15] *** djerius joined
[14:35] <[Coke]> in general in raku, you're better off using the builtins than managing Threads directly.

[14:35] <[Coke]> but yah, nothing obvious

[14:37] *** morte_ joined
[14:57] *** linkable6 joined
[15:01] *** whatnext left
[15:02] *** dogbert17 joined
[15:16] <guifa__> vrurg I'll start moving to fez soon

[15:27] *** Sgeo joined
[15:27] *** frost joined
[15:29] <japhb> tbrowder: Textual 2D vector drawing formats that have worked well in the past (for different use cases): GraphViz, Pic, SVG, PostScript, ... (almost definitely a few more I'm forgetting)

[15:29] <japhb> Oh, how could I forget Logo?!

[15:31] <vrurg> guifa__++ :)

[15:36] *** linkable6 left
[15:37] *** whatnext joined
[15:38] *** linkable6 joined
[15:38] <whatnext> [Coke] by "builtins" do you mean e.g. `start` ?

[15:38] <whatnext> I'm not even sure it's a memory leak tbh - I just got "segmentation fault"

[15:39] <whatnext> something is definitely not happy

[15:41] *** vrurg left
[15:41] <japhb> whatnext: segfaults definitely should not happen (barring forcing one via NativeCall, of course)

[15:47] *** vrurg joined
[15:48] <vrurg> guifa__: BTW, I quick-looked into the module. Why don't you use a Term* module to colorize the output? 

[16:00] *** frost left
[16:05] *** whatnext left
[16:22] *** Guest46 joined
[16:22] <Guest46> Hello,

[16:22] <Guest46> I am an employee with the U.S. Army Intermodal and

[16:22] <Guest46> Distribution Platform Management Office (AIDPMO) responsible for maintaining

[16:22] <Guest46> ownership records for containers on behalf of the U.S. Army.

[16:22] <Guest46> Container FLZU2004640 was found during our inventory.

[16:22] <Guest46> According to the 3 Letter BIC code this container, at one time belonged to your

[16:22] <Guest46> company.

[16:22] <Guest46> Please let me know whether your records indicate that Fine

[16:22] <Guest46> Link Holdings Limited  still owns the container.   If no longer

[16:22] <Guest46> owned by Fine Link Holdings Limited, can you let me know who it was sold

[16:22] <Guest46> to?  (Contact, POC, Email)

[16:22] <Guest46> V/r,

[16:22] <Guest46> Leidos Contractor

[16:22] <Guest46> Ms.Chasity Cosby

[16:22] <Guest46> Inventory Team

[16:22] <Guest46> SDDC G4 Container Management / AIDPMO (LEC-A)

[16:22] <Guest46> Scott AFB, IL

[16:22] <Guest46> 618-220-5444

[16:23] <[Coke]> Can someone block this idiot?

[16:23] <Guest46> disregard that message

[16:23] <[Coke]> (block them anyway)

[16:24] <Guest46> Hello,

[16:24] <Guest46> I am an employee with the U.S. Army Intermodal and

[16:24] <Guest46> Distribution Platform Management Office (AIDPMO) responsible for maintaining

[16:24] <Guest46> ownership records for containers on behalf of the U.S. Army.

[16:24] <Guest46> Containers

[16:24] <Guest46> RAKU1365898

[16:24] <Guest46> RAKU1365922

[16:24] <Guest46> was found during our inventory.

[16:24] <Guest46> According to the 3 Letter BIC code this container, at one time belonged to your

[16:24] <Guest46> company.

[16:24] <Guest46> Please let me know whether your records indicate that RAKU still owns the container.   If no longer

[16:24] <Guest46> owned by RAKU, can you let me know who it was sold

[16:24] <Guest46> to?  (Contact, POC, Email)

[16:24] <Guest46> V/r,

[16:24] <Guest46> Leidos Contractor

[16:24] <Guest46> Ms.Chasity Cosby

[16:24] <Guest46> Inventory Team

[16:24] <Guest46> SDDC G4 Container Management / AIDPMO (LEC-A)

[16:25] *** Guest46 left
[16:26] <guifa__> vrurg: meh, I like not depending on things.  but yeah, long term I should probably go that route

[16:27] <guifa__> but also, didn't I say don't peak at my code? hahahaha

[16:27] <guifa__> it's such an embarassing mess right now

[16:29] <[Coke]> ~Guest46@ec2-54-80-24-206.compute-1.amazonaws.com in case they're gone by the time someone with admin privs shows up

[16:31] *** whatnext joined
[16:31] <whatnext> japhb for me, impossible is nothing! ;)

[16:32] <whatnext> at least when it comes to doing something undesirable

[16:32] <whatnext> how about this one: "longjmp causes uninitialized stack frame" - when using Inline::Perl5 (? I'm guessing)

[16:35] <guifa__> but I'll just be updating the prettifier as I end up hitting more stuff, bu for my formatters I think basic if/then, method and infix calls, and string concats will be the bulk of what I use

[16:35] <whatnext> I added a comment to my gist here: https://gist.github.com/whatnext/a33b7bff81c35ed4766add3a3daa6377

[16:36] <whatnext> i guess it's not looking like a memory leak, but something else

[16:39] <whatnext> `can't locate object method "DESTROY" via package "Spreadsheet::ParseExcel::Workbook"` seems to be the only thing in English :D  - we are using this module from Perl 5 using `Inline::Perl5`. Suggestions anyone? :)

[16:39] <lizmat> you might want to create an Inline::Perl5 issue

[17:13] <lizmat> whatnext: OOC what version of Rakudo / Inline::Perl5 are you using ?

[17:14] <whatnext> $ raku --version

[17:14] <whatnext> Welcome to 𝐑𝐚𝐤𝐮𝐝𝐨™ v2021.09.

[17:14] <whatnext> Implementing the 𝐑𝐚𝐤𝐮™ programming language v6.d.

[17:14] <whatnext> Built on MoarVM version 2021.09.

[17:15] <lizmat> then you might want to upgrade to 2021.12 and the latest version of Inline::Perl5

[17:15] <lizmat> a lot of issues with NativeCall and Inline::Perl5 were solved in that period

[17:15] <whatnext> - Identity: Inline::Perl5:ver<0.58>:auth<github:niner>

[17:16] <whatnext> ah really

[17:16] <whatnext> ok thanks that could be useful

[17:25] *** hasrthur_ joined
[17:25] *** hasrthur left
[17:27] *** hasrthur joined
[17:27] *** hasrthur_ left
[17:29] <[Coke]> Are you on windows, whatnext?

[17:29] <[Coke]> the $ says no but the XXX says yes. :)

[17:30] <whatnext> CentOS 7.9

[17:32] <[Coke]> thanks.

[17:34] *** dakkar left
[17:35] <El_Che> XXX?

[17:37] *** djerius left
[17:38] <[Coke]>  𝐑𝐚𝐤

[17:38] <[Coke]> I was too lazy to cut and paste the first time.

[17:38] <[Coke]> ... ah. could just be me, nevermind!

[17:38] <El_Che> Rakudo™

[17:38] <El_Che> on mine

[17:39] <El_Che> ah that Raku®

[17:39] <El_Che> the TM and R make it USA-silly

[17:40] *** abraxxa left
[17:41] *** jrjsmrtn_ left
[17:42] *** djerius joined
[17:42] *** jrjsmrtn joined
[17:43] <El_Che> are we forced to do that kind of silliness of is it cargo cult?

[17:44] <El_Che> $ ruby -v

[17:44] <El_Che> ruby 2.7.4p191 (2021-07-07 revision a21a3b7d23) [x86_64-linux-gnu]

[17:44] <El_Che> $ go version

[17:44] <El_Che> go version go1.17.3 linux/amd64

[17:45] <El_Che> I don't think google is giving up on trademarks and copyrights

[17:45] <gfldex> If you don't use a R it can become void in many countries.

[17:45] <El_Che> so google just lost their trademark after I ran the command?

[17:46] <gfldex> No, they use their trademark in so many places, that they don't have to for go.

[17:46] <El_Che> so, put the trademark somewhere in a dark corner on the site and problem solved

[17:49] <tonyo> .tell tbrowder i can work on a tut for ya on sunday night 

[17:49] <tellable6> tonyo, I'll pass your message to tbrowder

[17:57] <whatnext> I am sure you all will be excited to learn I may have found a solution

[17:57] <whatnext> that is for my particular case, and meaning it now seems to work but without knowing exactly why

[17:59] <whatnext> I explicitly set the container for the `Spreadsheet::ParseExcel::Workbook` object to Nil after the extraction

[17:59] <gfldex> Magic! \o/

[17:59] <whatnext> and apparently I need to use `Thread.start`. If I use `start` I still get an error

[17:59] <whatnext> pretty weird - but whatever :D

[18:02] <japhb> El_Che: Trademarks must be actively defended in order to remain valid.  Hiding that you have one seems unlikely to count.  Also, both the distinctive font (Unicode block actually, but it *looks* like a different font) and the TM/R were needed when we got the EU trademark registration.

[18:02] <El_Che> so, ruby and go lost their trademark?

[18:03] <gfldex> did they ever have one?

[18:03] <japhb> El_Che: They're probably just protecting them in a different place, that's all.  Like on their main website.

[18:03] <El_Che> japhb: yes, that's my point

[18:03] <El_Che> it looks more applicable there than in the cli

[18:03] <japhb> El_Che: And I'm saying the reason that we did that is because the international trademark lawyers told us to.

[18:04] <japhb> We didn't just do it because we felt like it.

[18:04] <El_Che> yes, I get that

[18:04] <El_Che> I wonder why other more popular languages don't do it

[18:04] <El_Che> there is a lot more money to rip off stealing the go or ruby trademark

[18:04] <ugexe> to me it feels like a lawyer said that because its easiest to assume that to be correct, instead of verifying something else would work

[18:05] <japhb> Possible, sure.

[18:05] <japhb> Interestingly `gcc --version` decides to be explicit about copyright and warranty, rather than trademark

[18:07] <japhb> TIL that `python -v` is rather different than `python --version`

[18:08] <El_Che> perl -v does have a copyright notice and no trademark

[18:08] *** reportable6 left
[18:08] *** guifa__ left
[18:08] <lizmat> because perl doesn't have a trademark, and raku does

[18:09] <El_Che> really?

[18:10] *** reportable6 joined
[18:11] <El_Che> beside the chuckle every time I see it, I'don't care that much. Everything time I see TM is think of people that shout in social media they are famous. :P

[18:11] *** Curiosa joined
[18:12] <El_Che> python seems to be trademarked as well

[18:12] <El_Che> (and no TM in the cli)

[18:12] <japhb> Hmmm, ruby has a --copyright option.

[18:13] <El_Che> well, that looks like a sane approach to me

[18:13] <El_Che> yay for ruby

[18:13] <El_Che> japhb: good catch

[18:14] <El_Che> damn, this didn't work: gcc --copyleft

[18:14] <El_Che> :)

[18:16] <discord-raku-bot> <Nemokosch#9980> Honestly, for me, the whole Raku™️ rather hints that Raku is good with Unicode

[18:17] <El_Che> Nemokosch#9980: that was cool 5 years ago, no less so :)

[18:17] <El_Che> now

[18:17] <discord-raku-bot> <Nemokosch#9980> of course you could just drop the ™️ part but frankly it would still remain flamboyant

[18:17] <discord-raku-bot> <Nemokosch#9980> Well, that's because you have seen it for 5 years 😛

[18:17] <El_Che> true :)

[18:18] <discord-raku-bot> <Nemokosch#9980> the world hasn't moved forward that much in this regard in 5 years

[18:18] <El_Che> yeah, buts langs did catch up

[18:18] <El_Che> -s

[18:19] <japhb> Not very many of them.

[18:19] <El_Che> do you encounter utf8 problems often in other languages?

[18:19] <discord-raku-bot> <Nemokosch#9980> not really tbh

[18:20] <japhb> El_Che: Not a huge number of languages understand the difference between a codepoint and a grapheme.

[18:21] <El_Che> I took it they did it by design

[18:21] <discord-raku-bot> <Nemokosch#9980> Emoji problems, for sure

[18:21] <discord-raku-bot> <Nemokosch#9980> ^THIS

[18:22] <tonyo> half the stuff that says TM on it is just there and there isn't actually any protection unless you register it with specific entities (each with its own set of protections)

[18:24] *** discord-raku-bot left
[18:24] <[Coke]> it was just me. (was remoted in to an osx box from windows and forgot)

[18:24] *** discord-raku-bot joined
[18:25] <El_Che> [Coke]: you see the discussion you started :P

[18:26] <[Coke]> oops!

[18:26] <discord-raku-bot> <Nemokosch#9980> we may call it lazy by design, though

[18:29] *** discord-raku-bot left
[18:29] *** discord-raku-bot joined
[18:34] <[Coke]> (TM/registration) was added to the version based on discussions with a lawyer, ping codesections for details.

[18:41] *** jjido joined
[18:46] *** Curiosa left
[18:50] <ugexe> right, but the question still remains why would e.g. googles lawyer not have them doing the same thing

[18:54] <gfldex> just ask them!

[19:02] <El_Che> lol

[19:29] *** rir_ left
[19:54] *** hasrthur left
[20:00] *** jjido left
[20:02] *** MoC joined
[20:24] *** whatnext left
[21:01] *** [Coke] left
[21:04] *** [Coke] joined
[21:17] *** jjido joined
[21:47] *** MoC left
[22:02] *** jjido left
[22:20] *** jjido joined
[22:24] *** Curiosa joined
[22:25] *** jjido left
[22:47] *** Curiosa left
[22:50] *** jjido joined
[22:51] <leont> Is there a way to use a hash literal when dealing with non-string keys (in my particular case, enum)

[22:52] *** Curiosa joined
[22:55] *** Curiosa left
[23:05] *** El_Che left
[23:07] *** El_Che joined
[23:09] <japhb> leont: :{} IIRC

[23:10] <leont> m: dd { (More) => 1 }

[23:10] <camelia> rakudo-moar 0cd05ca0b: OUTPUT: «{:More(1)}␤»

[23:11] <leont> That is a string key, not an enum key

[23:11] <leont> Oh wait, I missed the semicolon

[23:13] <leont> m: dd :{ (More) => 1 }

[23:13] <camelia> rakudo-moar 0cd05ca0b: OUTPUT: «:{Order::More => 1}␤»

[23:13] <leont> Yeah that's much better

[23:16] *** D5n9sMatrix77 joined
[23:24] *** morte_ left
[23:52] *** djerius left
[23:53] *** djerius joined
