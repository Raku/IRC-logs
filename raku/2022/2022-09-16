[00:06] *** reportable6 left
[00:07] *** reportable6 joined
[00:20] *** lichtkind left
[00:30] *** Heptite joined
[01:30] *** notable6 left
[01:30] *** greppable6 left
[01:30] *** unicodable6 left
[01:30] *** statisfiable6 left
[01:30] *** committable6 left
[01:30] *** sourceable6 left
[01:30] *** shareable6 left
[01:30] *** squashable6 left
[01:30] *** tellable6 left
[01:30] *** evalable6 left
[01:30] *** releasable6 left
[01:30] *** reportable6 left
[01:30] *** bloatable6 left
[01:30] *** quotable6 left
[01:30] *** coverable6 left
[01:30] *** linkable6 left
[01:30] *** nativecallable6 left
[01:30] *** benchable6 left
[01:30] *** bisectable6 left
[01:31] *** linkable6 joined
[01:31] *** sourceable6 joined
[01:31] *** statisfiable6 joined
[01:31] *** benchable6 joined
[01:32] *** bisectable6 joined
[01:32] *** nativecallable6 joined
[01:32] *** coverable6 joined
[01:32] *** bloatable6 joined
[01:32] *** squashable6 joined
[01:32] *** reportable6 joined
[01:32] *** shareable6 joined
[01:33] *** evalable6 joined
[01:33] *** quotable6 joined
[01:33] *** greppable6 joined
[01:33] *** unicodable6 joined
[01:33] *** notable6 joined
[01:33] *** releasable6 joined
[01:33] *** tellable6 joined
[01:33] *** committable6 joined
[02:33] *** releasable6 left
[02:33] *** statisfiable6 left
[02:33] *** unicodable6 left
[02:33] *** coverable6 left
[02:33] *** benchable6 left
[02:33] *** committable6 left
[02:33] *** nativecallable6 left
[02:33] *** notable6 left
[02:33] *** reportable6 left
[02:33] *** shareable6 left
[02:33] *** sourceable6 left
[02:33] *** greppable6 left
[02:33] *** squashable6 left
[02:33] *** bisectable6 left
[02:33] *** bloatable6 left
[02:33] *** quotable6 left
[02:33] *** linkable6 left
[02:33] *** evalable6 left
[02:33] *** tellable6 left
[02:34] *** bisectable6 joined
[02:34] *** nativecallable6 joined
[02:34] *** releasable6 joined
[02:34] *** quotable6 joined
[02:34] *** coverable6 joined
[02:34] *** unicodable6 joined
[02:34] *** sourceable6 joined
[02:35] *** statisfiable6 joined
[02:35] *** reportable6 joined
[02:35] *** bloatable6 joined
[02:35] *** tellable6 joined
[02:35] *** benchable6 joined
[02:36] *** evalable6 joined
[02:36] *** shareable6 joined
[02:36] *** greppable6 joined
[02:36] *** committable6 joined
[02:36] *** notable6 joined
[02:36] *** squashable6 joined
[02:36] *** linkable6 joined
[03:15] *** Furor joined
[03:17] *** Colere left
[03:18] *** Furor left
[03:23] *** Colere joined
[04:05] *** Heptite left
[05:05] *** squashable6 left
[05:05] *** quotable6 left
[05:05] *** nativecallable6 left
[05:05] *** benchable6 left
[05:05] *** shareable6 left
[05:05] *** releasable6 left
[05:05] *** coverable6 left
[05:05] *** evalable6 left
[05:05] *** reportable6 left
[05:05] *** notable6 left
[05:05] *** greppable6 left
[05:05] *** statisfiable6 left
[05:05] *** committable6 left
[05:05] *** unicodable6 left
[05:05] *** bisectable6 left
[05:05] *** tellable6 left
[05:05] *** linkable6 left
[05:05] *** sourceable6 left
[05:05] *** bloatable6 left
[05:06] *** greppable6 joined
[05:06] *** shareable6 joined
[05:06] *** squashable6 joined
[05:07] *** bisectable6 joined
[05:07] *** coverable6 joined
[05:07] *** quotable6 joined
[05:07] *** evalable6 joined
[05:07] *** notable6 joined
[05:07] *** nativecallable6 joined
[05:07] *** sourceable6 joined
[05:07] *** statisfiable6 joined
[05:07] *** tellable6 joined
[05:07] *** bloatable6 joined
[05:08] *** unicodable6 joined
[05:08] *** releasable6 joined
[05:08] *** committable6 joined
[05:08] *** benchable6 joined
[05:08] *** linkable6 joined
[05:09] *** reportable6 joined
[06:07] *** abraxxa joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:24] *** abraxxa left
[06:26] *** abraxxa joined
[06:31] *** abraxxa left
[06:31] *** abraxxa joined
[07:00] *** kueppo joined
[07:00] *** kueppo left
[07:04] *** Sgeo left
[08:04] *** linkable6 left
[08:04] *** evalable6 left
[08:05] *** evalable6 joined
[08:07] *** linkable6 joined
[08:10] *** jaguart joined
[08:35] <El_Che> .tell melezhik a possible usecase could be as a rakudo smoker?

[08:35] <tellable6> El_Che, I'll pass your message to melezhik

[08:47] *** frost joined
[09:29] *** sena_kun joined
[09:39] *** lichtkind joined
[09:47] *** MoC joined
[09:56] *** lichtkind left
[10:04] *** sena_kun left
[10:13] *** sena_kun joined
[10:13] *** sena_kun left
[10:24] *** abraxxa left
[10:31] *** abraxxa joined
[10:31] *** abraxxa left
[10:31] *** jjido joined
[10:42] *** abraxxa-home joined
[10:43] *** sena_kun joined
[10:46] *** abraxxa-home left
[10:48] *** abraxxa-home joined
[11:03] *** jjido left
[11:22] *** lichtkind joined
[12:00] *** abraxxa-home left
[12:06] *** reportable6 left
[12:08] *** reportable6 joined
[12:10] *** razetime joined
[12:20] *** tz-_- joined
[12:22] *** tz-_- left
[12:24] *** tz-_-1 joined
[12:25] *** tz-_-1 left
[12:25] *** tz-_-1 joined
[12:26] *** tz-_-1 left
[12:52] *** tz-_-1 joined
[12:52] *** tz-_-1 left
[13:20] *** Geth joined
[13:26] *** Geth left
[13:26] *** Geth joined
[13:27] *** jgaz joined
[13:41] *** jjido joined
[14:05] *** frost left
[14:28] *** melezhik joined
[14:28] <melezhik> o/

[14:28] <tellable6> 2022-09-16T08:35:48Z #raku <El_Che> melezhik a possible usecase could be as a rakudo smoker?

[14:28] <melezhik> .tell El_Che I will think about it, there is another build for fedora os - https://sparky.sparrowhub.io/report/rakudo-build/5410

[14:28] <tellable6> melezhik, I'll pass your message to El_Che

[14:30] <melezhik> but I guess rakudo build process is more or less irrelevant to an underlying linux distribution ? well it be helpful to test rakudo installation for many linuxes, in the end of the day these are all the same build tools - gcc/make and friends, right ?

[14:30] *** Sgeo joined
[14:32] *** xinming left
[14:34] *** xinming joined
[15:01] *** melezhik left
[15:04] *** Heptite joined
[15:12] *** archenoth joined
[15:19] *** synthmeat left
[15:23] *** synthmeat joined
[16:14] *** epony left
[16:50] *** discord-raku-bot left
[16:51] *** discord-raku-bot joined
[16:52] *** Tirifto left
[16:54] *** bigdata joined
[16:56] *** jjido left
[17:07] *** Tirifto joined
[17:07] *** sena_kun left
[17:44] *** melezhik joined
[17:44] <melezhik> .tell El_Che I enabled color output for sparky builds - https://sparky.sparrowhub.io/report/rakudo-build/5449

[17:44] <tellable6> melezhik, I'll pass your message to El_Che

[17:49] *** sena_kun joined
[18:03] *** razetime left
[18:07] *** reportable6 left
[18:07] *** reportable6 joined
[18:16] *** lucs_ left
[18:16] *** lucs joined
[18:22] *** jaamer joined
[18:23] *** melezhik left
[18:24] <[Coke]> anyone have a pointer on a clean way to optionally use a module? Previous attempts of mine can do the require optionally but then had trouble getting the default symbols imported.

[18:32] *** jgaz left
[18:42] *** jjido joined
[18:57] <ugexe> use is compile time, so is that really what you want?

[18:58] <ugexe> like you might not want to compile-time use e.g. IO::Socket::SSL optionally if i might get installed later

[19:04] <[Coke]> yes, I don't mean literally use

[19:14] *** hankache joined
[19:16] *** Maylay joined
[19:22] *** hankache left
[19:30] <discord-raku-bot> <Nemokosch> Still working on my "magnum opus": the issue regarding the semantics (expectations, specs, actual behavior) of hyper meta-operators. And seems like I will barely cover deeply nested structures, literally just scratching the surface now haha

[19:38] <ugexe> you can do like `try require ::("PathTools") qw<&ls>;`

[19:38] <ugexe> but then using `ls(...)` when loading e.g. PathTools fails will error

[19:52] *** vrurg_ joined
[19:54] *** vrurg left
[20:42] *** jaamer left
[21:03] <discord-raku-bot> <Nemokosch> https://github.com/Raku/problem-solving/issues/346 well this got huge, any feedback is welcome on how to make it more processable...

[21:41] *** MoC left
[22:10] *** vrurg_ is now known as vrurg

[22:22] *** squashable6 left
[22:22] *** squashable6 joined
[22:44] <tbrowder> [Coke]: i can't find it yet, but someone recently, maybe you, showed me a way that works for me. i'm away from my main host but will search. i assume by "default" exports you are using "is export" inside the module.

[22:45] <tbrowder> .tell [Coke] ^^^

[22:45] <tellable6> tbrowder, I'll pass your message to [Coke]

[22:59] *** lichtkind left
[23:05] *** sena_kun left
[23:12] *** jjido left
[23:17] <Voldenet> m: my $neighbors = (-1, -i, 1, i); my $p = 2 + 3i; say $neighbors >>>>+<<>> $p

[23:17] <camelia> rakudo-moar 2070ceebb: OUTPUT: ¬´(1+3i 2+2i 3+3i 2+4i)‚ê§¬ª

[23:19] <Voldenet> m: my $neighbors = (-1, -i, 1, i); my $p = 2 + 3i; say $neighbors >>+>> $p

[23:19] <camelia> rakudo-moar 2070ceebb: OUTPUT: ¬´(1+3i 2+2i 3+3i 2+4i)‚ê§¬ª

[23:20] <Voldenet> m: say 2 >>+<< 3

[23:20] <camelia> rakudo-moar 2070ceebb: OUTPUT: ¬´5‚ê§¬ª

[23:28] <Voldenet> Nemokosch: regarding the %a >>+>> %b syntax, it's not intersection, it's `set difference` op, no idea why `intersection` and `union` are used in docs but not the `set difference`

[23:28] <tellable6> Voldenet, I'll pass your message to Nemokosch

[23:32] <Voldenet> ah, that's because it's a different operation

[23:34] <Voldenet> it's a union without the unique keys from the other set

[23:34] <Voldenet> m: my %a = :4both, :only-a; my %b = :8both, :only-b; say %a >>+>> %b; say %a <<+<< %b;

[23:34] <camelia> rakudo-moar 2070ceebb: OUTPUT: ¬´{both => 12, only-a => 1}‚ê§{both => 12, only-b => 1}‚ê§¬ª

[23:41] <discord-raku-bot> <Nemokosch> a union without the unique keys from the other set in other words... is the set itself üòÑ

[23:42] <discord-raku-bot> <Nemokosch> I mean, the set of keys is the same for the output and the open end of the hyper

[23:43] <discord-raku-bot> <Nemokosch> and this is what I expected, based on lists, and unlike the two other configurations

[23:47] <Voldenet> right, it's the set itself, silly me :D

[23:57] <Voldenet> So, `intersection of keys including keys from %outer`

[23:57] *** Maylay left
