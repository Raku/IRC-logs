[00:08] *** reportable6 left
[00:10] *** reportable6 joined
[00:34] *** Voldenet left
[00:40] *** lichtkind left
[01:03] *** [Coke] left
[01:04] *** [Coke] joined
[01:34] *** Voldenet joined
[02:34] *** greppable6 left
[02:34] *** committable6 left
[02:34] *** notable6 left
[02:34] *** nativecallable6 left
[02:34] *** benchable6 left
[02:34] *** reportable6 left
[02:34] *** sourceable6 left
[02:34] *** bisectable6 left
[02:34] *** bloatable6 left
[02:34] *** linkable6 left
[02:34] *** coverable6 left
[02:34] *** evalable6 left
[02:34] *** releasable6 left
[02:34] *** statisfiable6 left
[02:34] *** quotable6 left
[02:35] *** releasable6 joined
[02:35] *** greppable6 joined
[02:35] *** evalable6 joined
[02:35] *** quotable6 joined
[02:35] *** statisfiable6 joined
[02:36] *** nativecallable6 joined
[02:36] *** notable6 joined
[02:36] *** coverable6 joined
[02:36] *** bloatable6 joined
[02:36] *** benchable6 joined
[02:36] *** linkable6 joined
[02:36] *** committable6 joined
[02:37] *** bisectable6 joined
[02:37] *** reportable6 joined
[02:37] *** sourceable6 joined
[03:37] *** sourceable6 left
[03:37] *** greppable6 left
[03:37] *** tellable6 left
[03:37] *** shareable6 left
[03:37] *** coverable6 left
[03:37] *** reportable6 left
[03:37] *** unicodable6 left
[03:37] *** bisectable6 left
[03:37] *** statisfiable6 left
[03:37] *** committable6 left
[03:37] *** linkable6 left
[03:37] *** nativecallable6 left
[03:37] *** bloatable6 left
[03:37] *** releasable6 left
[03:37] *** evalable6 left
[03:37] *** quotable6 left
[03:37] *** benchable6 left
[03:37] *** notable6 left
[03:37] *** quotable6 joined
[03:38] *** greppable6 joined
[03:38] *** linkable6 joined
[03:38] *** nativecallable6 joined
[03:38] *** notable6 joined
[03:39] *** statisfiable6 joined
[03:39] *** coverable6 joined
[03:39] *** shareable6 joined
[03:39] *** releasable6 joined
[03:39] *** bisectable6 joined
[03:39] *** reportable6 joined
[03:40] *** tellable6 joined
[03:40] *** sourceable6 joined
[03:40] *** committable6 joined
[03:40] *** unicodable6 joined
[03:40] *** benchable6 joined
[03:40] *** evalable6 joined
[03:40] *** bloatable6 joined
[03:52] *** p6steve left
[03:54] *** p6steve joined
[04:10] *** [Coke] left
[04:11] *** [Coke] joined
[04:15] *** [Coke] left
[04:21] *** [Coke] joined
[04:49] *** vrurg_ joined
[04:49] *** vrurg left
[05:12] *** [Coke] left
[05:13] *** [Coke] joined
[05:20] *** [Coke] left
[05:31] *** [Coke] joined
[06:02] *** [Coke] left
[06:02] *** [Coke] joined
[06:06] *** reportable6 left
[06:07] *** reportable6 joined
[06:14] *** Furor joined
[06:17] *** Colere left
[06:17] *** Furor is now known as Colere

[07:17] *** linkable6 left
[07:17] *** greppable6 left
[07:17] *** bisectable6 left
[07:17] *** unicodable6 left
[07:17] *** sourceable6 left
[07:17] *** evalable6 left
[07:17] *** committable6 left
[07:17] *** benchable6 left
[07:17] *** nativecallable6 left
[07:17] *** quotable6 left
[07:17] *** statisfiable6 left
[07:17] *** notable6 left
[07:17] *** bloatable6 left
[07:17] *** reportable6 left
[07:17] *** releasable6 left
[07:17] *** coverable6 left
[07:17] *** shareable6 left
[07:17] *** tellable6 left
[07:17] *** sourceable6 joined
[07:17] *** statisfiable6 joined
[07:18] *** greppable6 joined
[07:18] *** tellable6 joined
[07:18] *** releasable6 joined
[07:18] *** shareable6 joined
[07:18] *** benchable6 joined
[07:18] *** evalable6 joined
[07:18] *** unicodable6 joined
[07:18] *** linkable6 joined
[07:19] *** bloatable6 joined
[07:19] *** committable6 joined
[07:19] *** quotable6 joined
[07:19] *** notable6 joined
[07:20] *** nativecallable6 joined
[07:20] *** bisectable6 joined
[07:20] *** coverable6 joined
[07:20] *** reportable6 joined
[07:24] *** [Coke] left
[07:24] *** [Coke] joined
[07:27] *** frost joined
[07:36] *** Da-ding joined
[07:55] *** discord-raku-bot left
[07:56] *** discord-raku-bot joined
[07:58] *** [Coke] left
[07:59] *** [Coke] joined
[08:04] *** discord-raku-bot left
[08:04] *** discord-raku-bot joined
[08:07] *** [Coke] left
[08:08] *** [Coke] joined
[08:16] *** dustinm`_ left
[08:21] *** dustinm` joined
[08:25] *** randm left
[08:25] *** randm joined
[08:34] *** Nemokosch joined
[08:35] <Nemokosch> tellable please

[08:35] <tellable6> 2022-06-09T10:57:03Z #raku <SmokeMachine> Nemokosch: ☝️

[08:35] <tellable6> 2022-06-11T19:11:12Z #raku <SmokeMachine> Nemokosch: a bug on 2022.06, lizmat gave me a great suggestion on making Red die on that version... so, on my new release this will happen on 2022.06: https://usercontent.irccloud-cdn.com/file/eKLct4AG/image.png

[08:35] <Nemokosch> okay okay

[08:37] *** jjido joined
[08:38] *** frost left
[08:43] *** frost joined
[08:50] *** duplex_line joined
[08:57] *** Nemokosch left
[09:05] *** Sgeo left
[09:08] *** sena_kun joined
[09:35] *** gugod joined
[09:41] *** slbtty joined
[09:42] *** slbtty left
[09:50] *** Kaipii left
[09:50] *** Kaipii joined
[09:54] *** hythm left
[10:08] *** [Coke] left
[10:12] *** jjido left
[10:15] *** [Coke] joined
[10:18] *** lichtkind joined
[10:32] *** Da-ding left
[10:37] *** [Coke] left
[10:37] *** [Coke] joined
[10:45] *** p6steve left
[10:57] *** frost left
[11:09] *** jjido joined
[11:13] *** frost joined
[11:38] *** frost left
[11:39] *** jjido left
[11:40] *** duplex_line left
[11:41] *** duplex_line joined
[11:41] *** [Coke] left
[11:42] *** frost joined
[11:46] *** [Coke] joined
[11:52] *** jjido joined
[11:55] *** jjido left
[12:08] *** reportable6 left
[12:11] *** reportable6 joined
[12:18] *** [Coke] left
[12:18] *** [Coke] joined
[12:35] *** cognominal joined
[12:36] *** cognominal left
[12:46] *** frost left
[12:47] *** frost joined
[12:58] <discord-raku-bot> <stevied#8273> anyone having problems getting the grammar preview working in comma IDE? I have the paid version.

[13:27] *** Sankalp- joined
[13:27] *** Sankalp left
[13:27] *** Sankalp- is now known as Sankalp

[13:29] *** p6steve joined
[13:37] <p6steve> m: role A {}; multi postcircumfix:<[ ]>(A:D $a, Int $p) {say 42}; my $a = A.new; $a[2];

[13:37] <camelia> rakudo-moar f2546b446: OUTPUT: «42␤»

[13:38] <p6steve> works fine as a standalone script Welcome to Rakudo™ v2022.04.

[13:39] <p6steve> BUT errors with Error while compiling /root/raku-Dan-Polars/bin/./synopsis-dan-polars.raku

[13:39] <p6steve> Index out of range. Is: 2, should be in 0..0

[13:41] <p6steve> this is alongside other custom postcircumfix:<[ ]> errors such as <<Type List does not support associative indexing.>>

[13:42] <p6steve> (on the second one I am working with a cascade like this a[0]<a> that has been working fine for weeks

[13:42] <p6steve> )

[13:43] <gfldex> The first multi candidate that fully matches a signature will win.

[13:43] <p6steve> the errors happen in about a 1000 line module ... is it possible this is a rakudo bug?

[13:44] <gfldex> so you either have to define your own proto, or overload AT-POS and friends.

[13:44] <gfldex> Working as intended.

[13:45] <gfldex> here is a complete list of what you might want to implement: https://docs.raku.org/language/subscripts#Methods_to_implement_for_positional_subscripting

[13:45] *** duplex_line left
[13:45] *** duplex_line joined
[13:47] <gfldex> We want the following to DWIM, so postcircumfix:<[ ]> must not care about the type.

[13:47] <gfldex> m: postcircumfix:<[ ]>

[13:47] <camelia> rakudo-moar f2546b446: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Calling postcircumfix:<[ ]>() will never work with signature of the proto ($, |)␤at <tmp>:1␤------> <BOL>⏏postcircumfix:<[ ]>␤»

[13:47] <gfldex> m: my $a = 42; say $a[0];

[13:47] <camelia> rakudo-moar f2546b446: OUTPUT: «42␤»

[13:48] <p6steve> gfldex: yes, I have been successfully doing the positional AT-POS and so on for some months - up to now I have had working (i)

[13:49] <p6steve> (i) class DataFrame does Positional { method AT-POS ... } for this df[1;2] (ie 2d slicing)

[13:50] <p6steve> (ii) multi postcircumfix:<[ ]>( DataFrame:D $df, Int $p ) is export {...} for this df[3] (return list of row objects)

[13:51] <p6steve> these have been working side by side very nicely ... but now seems that (ii) is not winning 

[13:53] <gfldex> I'm building Rakudo HEAD right now.

[13:53] <p6steve> gfldex: I will have another look at proto ... but this will kill (i), right?

[13:54] <gfldex> yes, unless you also implement the missing multi candidates by hand.

[13:56] <p6steve> gfldex: ok thanks - that gives me enough steer to get past this! I suspect that I have been relying on unreliable non-feature

[13:57] <gfldex> You small example works on HEAD. So there may be some other issue somewhere. --ll-exception can provide details.

[13:58] *** duplex_line left
[13:59] *** [Coke] left
[14:02] <p6steve> https://gist.github.com/p6steve/a72382128fbbd472536ac10f4bf44c2f

[14:03] <p6steve> gfldex: does'nt make much sense to me ... is there a way to kist all the candidates for pcf:<[ ]> ??

[14:06] *** [Coke] joined
[14:14] <discord-raku-bot> <Anton Antonov#7232> I do. For me, the few times I tried the grammar preview, it worked for small grammars and, say, 50% of the time.

[14:29] <gfldex> p6steve: define a local proto

[14:31] <discord-raku-bot> <stevied#8273> It was very buggy when I started using it a few months ago. Then a newer version seemed to fix things for the most part. But now I can't get it to run at all. Very odd.

[14:31] *** frost left
[14:41] *** [Coke] left
[14:42] *** [Coke] joined
[14:52] *** jjido joined
[15:27] <p6steve> I just found an issue that shuld be closed here https://github.com/rakudo/rakudo/issues/4722

[15:42] *** jjido left
[16:04] *** djerius left
[16:06] *** djerius joined
[16:33] <uzl[m]> <uzl[m]> "As per 2022.06, both `max 0..." <- codesections: Do you mind clarifying this question I have about this (https://github.com/rakudo/rakudo/commit/175e716f) commit's header? 

[16:58] <uzl[m]> m: class A { has $.attr is rw; }; my $a = A.new(:2attr); $a.attr **= 5; say $a;

[16:58] <camelia> rakudo-moar f2546b446: OUTPUT: «A.new(attr => 32)␤»

[16:58] <uzl[m]> m: class A { has $!attr; method attr is rw { $!attr } }; my $a = A.new(:2attr); $a.attr **= 5; say $a;

[16:58] <camelia> rakudo-moar f2546b446: OUTPUT: «A.new␤»

[17:00] <uzl[m]> m: class A { has $!attr; method attr { return-rw $!attr } }; my $a = A.new(:2attr); $a.attr **= 5; say $a;

[17:00] <camelia> rakudo-moar f2546b446: OUTPUT: «A.new␤»

[17:02] <uzl[m]> m: class A { has $!attr = 2; method attr is rw { $!attr } }; my $a = A.new(:2attr); $a.attr **= 5; say $a;

[17:02] <camelia> rakudo-moar f2546b446: OUTPUT: «A.new␤»

[17:02] <uzl[m]> m: class A { has $!attr = 2; method attr is rw { $!attr } }; my $a = A.new(:2attr); $a.attr **= 5; say $a.attr;

[17:02] <camelia> rakudo-moar f2546b446: OUTPUT: «32␤»

[17:02] *** lichtkind_ joined
[17:02] <uzl[m]> m: class A { has $!attr; method attr { return-rw $!attr } }; my $a = A.new(:2attr); $a.attr **= 5; say $a.attr;

[17:02] <camelia> rakudo-moar f2546b446: OUTPUT: «1␤»

[17:03] *** lichtkind left
[17:03] <uzl[m]> m: class A { has $!attr = 2; method attr { return-rw $!attr } }; my $a = A.new(:2attr); $a.attr **= 5; say $a.attr;

[17:03] <camelia> rakudo-moar f2546b446: OUTPUT: «32␤»

[17:04] <uzl[m]> Is it safe to assume to assume that `class A { has $.attr is rw; };`, `class A { has $!attr; method attr is rw { $!attr } };` and `class A { has $!attr; method attr { return-rw $!attr } };` are all equivalent? I know the first two are according to the docs but what about the third?

[17:05] <uzl[m]> Too many assumes haha

[17:08] <gfldex> uzl[m]: not quite, return-rw will throw CX::return

[17:14] <uzl[m]> gfldex: I see! An example showcasing this exception?

[17:18] <gfldex> uzl[m]: that's how return, last and friends work. They throw a control exception under the hood. Thusly, the compiler has to add a CONTROL block what hinders fastness.

[17:37] *** Sgeo joined
[17:38] *** [Coke] left
[17:49] *** [Coke] joined
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:21] *** andinus` left
[18:21] *** andinus joined
[19:09] *** timo left
[19:25] <Geth> ¦ raku.org: ash++ created pull request #170: Link the Raku Conf 2022

[19:25] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/pull/170

[19:25] *** sena_kun left
[19:26] <Geth> ¦ raku.org: 5365c46ccb | (Andrew Shitov)++ (committed using GitHub Web editor) | source/index.html

[19:26] <Geth> ¦ raku.org: Link the Raku Conf 2022 (#170)

[19:26] <Geth> ¦ raku.org: 

[19:26] <Geth> ¦ raku.org: * Link the Raku Conf 2022

[19:26] <Geth> ¦ raku.org: 

[19:26] <Geth> ¦ raku.org: * Link the Raku Conf 2022

[19:26] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/commit/5365c46ccb

[19:27] *** sena_kun joined
[19:42] *** jjido joined
[19:45] <sienet_ja_LSD[m]> hope there will be numerous classes and tutorials in the conf

[19:46] *** MitarashiDango[m joined
[19:50] <MitarashiDango[m> Noticed that rakuenv wasn't on the AUR so tried my hand at putting together my first package with it: https://aur.archlinux.org/packages/rakuenv-git

[20:46] *** evalable6 left
[20:46] *** linkable6 left
[20:48] *** linkable6 joined
[20:48] *** evalable6 joined
[21:48] *** nativecallable6 left
[21:48] *** benchable6 left
[21:48] *** bloatable6 left
[21:48] *** quotable6 left
[21:48] *** releasable6 left
[21:48] *** shareable6 left
[21:48] *** reportable6 left
[21:48] *** committable6 left
[21:48] *** tellable6 left
[21:48] *** sourceable6 left
[21:48] *** bisectable6 left
[21:48] *** statisfiable6 left
[21:48] *** linkable6 left
[21:48] *** notable6 left
[21:48] *** evalable6 left
[21:48] *** coverable6 left
[21:48] *** greppable6 left
[21:48] *** unicodable6 left
[21:49] *** tellable6 joined
[21:49] *** evalable6 joined
[21:49] *** benchable6 joined
[21:49] *** quotable6 joined
[21:49] *** sourceable6 joined
[21:49] *** greppable6 joined
[21:49] *** coverable6 joined
[21:49] *** committable6 joined
[21:49] *** bisectable6 joined
[21:50] *** statisfiable6 joined
[21:50] *** releasable6 joined
[21:50] *** notable6 joined
[21:51] *** nativecallable6 joined
[21:51] *** shareable6 joined
[21:51] *** reportable6 joined
[21:51] *** unicodable6 joined
[21:51] *** linkable6 joined
[21:51] *** bloatable6 joined
[21:53] *** Kaipii left
[21:53] *** Kaipii joined
[21:59] *** n1to joined
[21:59] *** n1to left
[22:02] *** jjido left
[22:06] *** samcv_ joined
[22:06] *** spacekookie_ joined
[22:14] *** crystalfrost[m] left
[22:14] *** spacekookie left
[22:14] *** kybr left
[22:14] *** samcv left
[22:14] *** corwin left
[22:22] *** kybr joined
[22:22] *** corwin joined
[22:24] *** crystalfrost[m] joined
[23:02] *** Kaipii left
[23:54] *** timo joined
[23:57] *** Kaiepi joined
[23:58] *** [Coke] left
[23:58] *** [Coke] joined
[23:58] *** lichtkind_ left
