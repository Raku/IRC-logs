[00:02] *** jaguart left
[00:06] *** reportable6 left
[00:09] *** reportable6 joined
[00:26] *** frost joined
[01:26] *** greppable6 left
[01:26] *** evalable6 left
[01:26] *** bloatable6 left
[01:26] *** benchable6 left
[01:26] *** linkable6 left
[01:26] *** reportable6 left
[01:26] *** shareable6 left
[01:26] *** sourceable6 left
[01:26] *** nativecallable6 left
[01:26] *** notable6 left
[01:26] *** coverable6 left
[01:26] *** unicodable6 left
[01:26] *** committable6 left
[01:26] *** releasable6 left
[01:26] *** quotable6 left
[01:26] *** tellable6 left
[01:26] *** bisectable6 left
[01:26] *** statisfiable6 left
[01:27] *** unicodable6 joined
[01:27] *** tellable6 joined
[01:27] *** bloatable6 joined
[01:27] *** statisfiable6 joined
[01:27] *** quotable6 joined
[01:28] *** nativecallable6 joined
[01:28] *** committable6 joined
[01:28] *** evalable6 joined
[01:28] *** sourceable6 joined
[01:28] *** greppable6 joined
[01:28] *** benchable6 joined
[01:29] *** shareable6 joined
[01:29] *** linkable6 joined
[01:29] *** coverable6 joined
[01:29] *** releasable6 joined
[01:29] *** notable6 joined
[01:29] *** reportable6 joined
[01:29] *** bisectable6 joined
[02:08] *** xinming left
[02:10] *** xinming joined
[03:10] *** statisfiable6 left
[03:10] *** releasable6 left
[03:10] *** quotable6 left
[03:10] *** sourceable6 left
[03:10] *** committable6 left
[03:10] *** bisectable6 left
[03:10] *** unicodable6 left
[03:10] *** evalable6 left
[03:10] *** linkable6 left
[03:10] *** tellable6 left
[03:10] *** greppable6 left
[03:10] *** shareable6 left
[03:10] *** benchable6 left
[03:10] *** bloatable6 left
[03:10] *** reportable6 left
[03:10] *** nativecallable6 left
[03:10] *** notable6 left
[03:10] *** coverable6 left
[03:10] *** benchable6 joined
[03:10] *** statisfiable6 joined
[03:10] *** nativecallable6 joined
[03:10] *** evalable6 joined
[03:10] *** coverable6 joined
[03:10] *** bisectable6 joined
[03:10] *** releasable6 joined
[03:10] *** notable6 joined
[03:11] *** bloatable6 joined
[03:11] *** quotable6 joined
[03:12] *** shareable6 joined
[03:12] *** linkable6 joined
[03:12] *** sourceable6 joined
[03:12] *** tellable6 joined
[03:12] *** unicodable6 joined
[03:12] *** greppable6 joined
[03:12] *** committable6 joined
[03:13] *** reportable6 joined
[03:28] *** kaskal- joined
[03:28] *** kaskal left
[04:28] *** bloatable6 left
[04:28] *** releasable6 left
[04:28] *** tellable6 left
[04:28] *** benchable6 left
[04:28] *** statisfiable6 left
[04:28] *** committable6 left
[04:28] *** reportable6 left
[04:28] *** nativecallable6 left
[04:28] *** coverable6 left
[04:28] *** notable6 left
[04:28] *** greppable6 left
[04:28] *** sourceable6 left
[04:28] *** bisectable6 left
[04:28] *** linkable6 left
[04:28] *** unicodable6 left
[04:28] *** shareable6 left
[04:28] *** evalable6 left
[04:28] *** quotable6 left
[04:29] *** reportable6 joined
[04:29] *** coverable6 joined
[04:29] *** shareable6 joined
[04:30] *** benchable6 joined
[04:30] *** bloatable6 joined
[04:30] *** tellable6 joined
[04:30] *** quotable6 joined
[04:30] *** statisfiable6 joined
[04:30] *** committable6 joined
[04:30] *** nativecallable6 joined
[04:30] *** sourceable6 joined
[04:31] *** notable6 joined
[04:31] *** releasable6 joined
[04:31] *** unicodable6 joined
[04:31] *** greppable6 joined
[04:32] *** linkable6 joined
[04:32] *** evalable6 joined
[04:32] *** bisectable6 joined
[05:32] *** statisfiable6 left
[05:32] *** evalable6 left
[05:32] *** releasable6 left
[05:32] *** reportable6 left
[05:32] *** greppable6 left
[05:32] *** quotable6 left
[05:32] *** bisectable6 left
[05:32] *** notable6 left
[05:32] *** committable6 left
[05:32] *** sourceable6 left
[05:32] *** bloatable6 left
[05:32] *** linkable6 left
[05:32] *** coverable6 left
[05:32] *** benchable6 left
[05:32] *** shareable6 left
[05:32] *** tellable6 left
[05:32] *** nativecallable6 left
[05:32] *** unicodable6 left
[05:32] *** benchable6 joined
[05:32] *** shareable6 joined
[05:32] *** coverable6 joined
[05:32] *** nativecallable6 joined
[05:33] *** notable6 joined
[05:33] *** statisfiable6 joined
[05:33] *** committable6 joined
[05:33] *** sourceable6 joined
[05:33] *** quotable6 joined
[05:34] *** unicodable6 joined
[05:34] *** evalable6 joined
[05:34] *** reportable6 joined
[05:34] *** releasable6 joined
[05:34] *** linkable6 joined
[05:34] *** bisectable6 joined
[05:34] *** bloatable6 joined
[05:34] *** tellable6 joined
[05:35] *** greppable6 joined
[06:07] *** reportable6 left
[06:08] *** silug left
[06:09] *** silug joined
[06:10] *** reportable6 joined
[06:32] *** abraxxa joined
[06:34] *** Xliff joined
[06:38] *** abraxxa left
[06:39] *** abraxxa joined
[06:52] *** guifa left
[06:57] *** silug left
[06:57] *** silug joined
[07:16] *** Sgeo left
[07:47] *** stevied left
[07:57] *** sena_kun joined
[08:00] *** dakkar joined
[08:15] <discord-raku-bot> <Nemokosch#9980> an online friend says "Raku is a write-only language" and I ask myself: what did I do wrong? üòÖ

[08:15] <discord-raku-bot> <Nemokosch#9980> I guess a lot of people really don't like this "APL style" as Voldenet called it

[08:17] <discord-raku-bot> <Nemokosch#9980> but I'm not gonna write 20 liners for 5 liners when all I'm doing is like string processing automation

[08:18] <Voldenet> it's not even about number of lines btw

[08:19] <Voldenet> I used to laugh at having methods named equals() or add(), but how do I google `that unnamed symbol`

[08:24] <discord-raku-bot> <Nemokosch#9980> For me, it is about the number of lines, though

[08:25] <discord-raku-bot> <Nemokosch#9980> I don't optimize for "that unnamed symbol" but mistake possibilities and time wasted

[09:00] *** linkable6 left
[09:00] *** evalable6 left
[09:00] *** evalable6 joined
[09:03] *** linkable6 joined
[09:04] *** synthmeat left
[09:05] *** synthmeat joined
[09:15] <SmokeMachine> Sorry for resending the same message again, but I really want some feedback about that:

[09:15] <SmokeMachine> I've been rethinking on how the syntax to grammar for event patterns should be. (I have no idea on how to do that yet, but...). Could someone see if any of this (https://github.com/FCO/EventExpressionLanguage/tree/master/mindstorm) make sense? And if someone have any suggestion

[09:37] *** sena_kun left
[09:39] *** sena_kun joined
[09:53] *** Oshawott joined
[09:57] *** archenoth left
[10:57] *** linkable6 left
[10:57] *** bloatable6 left
[10:57] *** benchable6 left
[10:57] *** evalable6 left
[10:57] *** tellable6 left
[10:57] *** releasable6 left
[10:57] *** quotable6 left
[10:57] *** notable6 left
[10:57] *** nativecallable6 left
[10:57] *** bisectable6 left
[10:57] *** sourceable6 left
[10:57] *** reportable6 left
[10:57] *** statisfiable6 left
[10:57] *** coverable6 left
[10:57] *** shareable6 left
[10:57] *** committable6 left
[10:57] *** greppable6 left
[10:57] *** unicodable6 left
[10:57] *** nativecallable6 joined
[10:57] *** shareable6 joined
[10:57] *** bisectable6 joined
[10:58] *** releasable6 joined
[10:58] *** quotable6 joined
[10:58] *** unicodable6 joined
[10:58] *** statisfiable6 joined
[10:58] *** tellable6 joined
[10:58] *** coverable6 joined
[10:59] *** greppable6 joined
[10:59] *** evalable6 joined
[10:59] *** bloatable6 joined
[10:59] *** reportable6 joined
[10:59] *** linkable6 joined
[11:00] *** notable6 joined
[11:00] *** sourceable6 joined
[11:00] *** benchable6 joined
[11:00] *** committable6 joined
[11:23] *** frost left
[11:31] *** Kaipei left
[11:36] *** frost joined
[11:47] *** Kaipei joined
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[12:57] <discord-raku-bot> <stevied#8273> Unless your brain is a compiler, you don‚Äôt ‚Äúread‚Äù a programming language.

[12:59] <discord-raku-bot> <stevied#8273> You review it and then you get the gist of what it does based on major clues in the structure of the code.

[12:59] *** Sgeo joined
[13:00] <Voldenet> I read more code than I write

[13:01] <discord-raku-bot> <stevied#8273> Yeah but I‚Äôm saying the analogy is wrong. ‚ÄúRead‚Äù is a very bad metaphor.

[13:04] <Voldenet> I read it like I'd read the book

[13:05] <Voldenet> it's not a metaphor

[13:09] <discord-raku-bot> <stevied#8273> If I have to read someone‚Äôs code like a book to figure out how to modify and change it, then it‚Äôs poorly written code.

[13:25] *** tejr left
[13:27] <discord-raku-bot> <Nemokosch#9980> to be frank, I do write more Raku than read; this is just the nature of disposable scripts dedicated for one automational task

[13:28] <discord-raku-bot> <Nemokosch#9980> but regardless I don't see why someone would conclude from the particular pieces I've shown to them that it's "write only"

[13:28] <discord-raku-bot> <Nemokosch#9980> in fact I think it's pretty easy to read and it's just _not for modification_

[13:29] *** tejr joined
[13:29] <discord-raku-bot> <Nemokosch#9980> it solves one particular task and that's that

[13:29] <discord-raku-bot> <Nemokosch#9980> if you cannot do it by passing the right parameters, it's just not meant for the task

[13:43] *** dakkar left
[14:35] *** abraxxa left
[14:53] <Xliff> \o

[15:30] *** Garbanzo left
[15:51] *** toddr left
[16:04] <discord-raku-bot> <stevied#8273> anyone got an idea on this? https://stackoverflow.com/questions/72818716/why-cant-comma-ide-find-raku-binary-after-a-reboot

[16:06] <Voldenet> "If I have to read someone‚Äôs code like a book to figure out how to modify and change it, then it‚Äôs poorly written code."

[16:06] <Voldenet> Actually, I read code because I want to know details on how it works usually

[16:07] <discord-raku-bot> <stevied#8273> but that's not reading. that's like looking things up in a dictionary

[16:07] <Voldenet> dictionary is still a book though

[16:07] <discord-raku-bot> <stevied#8273> that's vocabulary building

[16:08] <discord-raku-bot> <stevied#8273> sure, but it's not the same act as reading a magazine article. totally different objectives.

[16:08] <discord-raku-bot> <Nemokosch#9980> in very broad terms, yes

[16:08] <discord-raku-bot> <Nemokosch#9980> it looks like a book, let's put it this way

[16:08] <discord-raku-bot> <stevied#8273> it would be like studying a magazine article and thinking about which word choices were used and which tropes were used and why

[16:08] <discord-raku-bot> <stevied#8273> that's not reading, that's deconstructing

[16:15] <discord-raku-bot> <stevied#8273> now, is Raku a harder language to deconstruct? yes. it has a big vocabulary.

[16:15] <discord-raku-bot> <stevied#8273> But it is much easier to grok what the code is doing because there's much less of it.

[16:15] <discord-raku-bot> <stevied#8273> the implementation details are concise and compact and you don't have to worry about them (as long as they are properly tested).

[16:17] <discord-raku-bot> <stevied#8273> if the implementation is bad, you can easily isolate the problem if the code is well-written

[16:19] <discord-raku-bot> <Nemokosch#9980> regarding vocab, I must say I'd like Raku even for the sole fact that it's not plain anglo-centric

[16:25] <discord-raku-bot> <stevied#8273> we don't say math symbols are "write once"

[16:25] <discord-raku-bot> <stevied#8273> they are the most concise way of conveying ideas ever invented.

[16:25] <discord-raku-bot> <Nemokosch#9980> well, _we_ don't üôÇ

[16:26] <discord-raku-bot> <stevied#8273> well, I do, I'm not a math guy üôÇ

[16:27] <discord-raku-bot> <Nemokosch#9980> now do you or do you not? don't trip me up! üòõ

[16:27] <discord-raku-bot> <stevied#8273> do I call math "write once?" no, because I know if I knew the symbols, I could read them.

[16:27] <discord-raku-bot> <Nemokosch#9980> fair enough

[16:29] <discord-raku-bot> <Nemokosch#9980> also, "write only"

[16:29] <discord-raku-bot> <stevied#8273> each little squiggle has a meaning. just got to practice with those meaning until they become ingrained in your brain

[16:29] <discord-raku-bot> <Nemokosch#9980> writing once is optimal, means you got it right for the first time

[16:29] <discord-raku-bot> <stevied#8273> each little squiggle has a meaning. just got to practice with those meanings until they become ingrained in your brain

[16:29] <discord-raku-bot> <stevied#8273> each little squiggle has a meaning. just got to practice with those meanings until they become ingrained in your brain

[16:29] <discord-raku-bot> <stevied#8273> then it become second nature

[16:29] <discord-raku-bot> <stevied#8273> then it becomes second nature

[16:30] <discord-raku-bot> <Nemokosch#9980> anyway, I have the feeling that I could have shown boring pieces of code and then the same guy wouldn't have said "write only" but probably would have said "genuinely uninteresting"

[16:31] <discord-raku-bot> <Nemokosch#9980> like what, you have objects, you have if and for, arrays, hashes... it's easy to do this

[16:31] <discord-raku-bot> <Nemokosch#9980> but I couldn't show some OO monstrosity for example, since that's just not what I use Raku for

[16:32] <discord-raku-bot> <stevied#8273> any language is basically "write once" until you learn it

[16:33] <discord-raku-bot> <Nemokosch#9980> ^tbh

[16:33] <discord-raku-bot> <Nemokosch#9980> although some languages might stay "write once" even afterwards üòÑ

[16:33] <discord-raku-bot> <stevied#8273> If I looked at c++ code, I'd be totally lost. but it would be stupid for me to say "this is garbage!"

[16:33] <discord-raku-bot> <Nemokosch#9980> I cannot accept /bin/sh as a legit programming language though

[16:34] <discord-raku-bot> <Nemokosch#9980> Really, in an ideal world, all people would have agreed to just use Perl by 1992

[16:34] <discord-raku-bot> <stevied#8273> well, it's a scripting language with some programming constructs slowly built into it over time.

[16:35] <discord-raku-bot> <stevied#8273> these tools evolve over time and the lines get blurrier

[16:35] <discord-raku-bot> <Nemokosch#9980> or Tcl if not Perl

[16:35] <discord-raku-bot> <Nemokosch#9980> I guess Tcl would still make a whole lot of sense compared to the POSIX shell

[16:35] <discord-raku-bot> <stevied#8273> like php was an html generation script

[16:35] <discord-raku-bot> <stevied#8273> that was it

[16:36] <discord-raku-bot> <Nemokosch#9980> it took like 20 years to fix PHP

[16:36] <discord-raku-bot> <stevied#8273> but people understood it and then it took off and had a life of it's own

[16:36] <discord-raku-bot> <Nemokosch#9980> it would took an eternity to fix the POSIX shell, it's just done for

[16:36] <discord-raku-bot> <Nemokosch#9980> it's too late to fix it

[16:37] <discord-raku-bot> <stevied#8273> i was doing a little php programming a few months ago. painful.

[16:37] <discord-raku-bot> <Nemokosch#9980> I don't think it's all that bad these days

[16:37] <discord-raku-bot> <Nemokosch#9980> in fact it has grown into a quite powerful language

[16:37] <discord-raku-bot> <stevied#8273> no, but it is tedious to write

[16:37] <discord-raku-bot> <Nemokosch#9980> ... perhaps I wouldn't use it for string processing

[16:38] <discord-raku-bot> <stevied#8273> hey, anyone got any ideas on this issue: https://github.com/Raku/ecosystem/issues/606

[16:38] *** morte_ joined
[16:38] <discord-raku-bot> <stevied#8273> oops, wrong link.. hold on

[16:38] <discord-raku-bot> <stevied#8273> hey, anyone got any ideas on this issue: https://github.com/Raku/ecosystem/issues/606

[16:38] <discord-raku-bot> <Nemokosch#9980> yeah

[16:38] *** jgaz joined
[16:38] <discord-raku-bot> <stevied#8273> https://stackoverflow.com/questions/72818716/why-cant-comma-ide-find-raku-binary-after-a-reboot

[16:39] <discord-raku-bot> <Nemokosch#9980> some environmental variable mess?

[16:39] <discord-raku-bot> <stevied#8273> has to be, but I have no idea how to fix in comma

[16:39] <discord-raku-bot> <Nemokosch#9980> I'm in a situation where I would always bet on the environmental variables...

[16:39] <discord-raku-bot> <Nemokosch#9980> trying to get Oracle 19c working with Debian 9 ü•¥

[16:39] <discord-raku-bot> <stevied#8273> don't see any obvious setting

[16:42] <discord-raku-bot> <Nemokosch#9980> did something change about your $PATH?

[16:42] <discord-raku-bot> <Nemokosch#9980> if it's after reboot

[16:42] <discord-raku-bot> <Nemokosch#9980> a "reboot" is often what I miss

[16:42] <discord-raku-bot> <stevied#8273> no didn't touch it. everything works fine from a regular terminal window in comma

[16:42] <discord-raku-bot> <stevied#8273> it's only when running tests

[16:42] *** frost left
[16:46] <discord-raku-bot> <stevied#8273> hmm, guess I'll have to echo some shell output to the screen. see if I can figure out what shell it's using

[16:46] <discord-raku-bot> <Nemokosch#9980> ez win

[16:49] <[Coke]> (tcl) having some experience with tcl, I'm not sure it "makes sense" compared to any other language. :)

[17:07] *** jgaz left
[17:34] <nine> Well if your script really just consists of a long list of binaries to run with various arguments, shell is still the better language. It's when you start to do calculations or manipulating data in your script that it becomes the wrong tool for the job very quickly.

[17:43] <Voldenet> Actually, tcl is amazing tool for configs

[17:45] <[Coke]> oh, I love tcl, it's just kind of unlike anything else. :)

[17:51] *** Xliff left
[18:00] *** jgaz joined
[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[18:18] *** morte_ left
[18:31] *** guifa joined
[18:35] *** monkey_ joined
[19:02] *** elves-upstate joined
[19:24] *** guifa left
[19:40] *** monkey_ left
[19:41] *** xinming left
[19:43] *** xinming joined
[19:44] *** monkey_ joined
[19:58] *** elves-upstate left
[20:03] *** discord-raku-bot left
[20:03] *** discord-raku-bot joined
[20:08] *** monkey_ left
[20:09] *** monkey_ joined
[20:40] *** dogbert17 joined
[20:40] *** dogbert11 left
[20:50] *** jgaz left
[20:51] *** guifa joined
[20:53] *** linkable6 left
[20:54] *** linkable6 joined
[21:09] <moritz> TCL is an "everything is a" language, where it joins Lisp ("everything is a list") and C ("everything is undefined behavior") :D

[21:22] <japhb> moritz: "everything is in" also applies -- Forth: "Everything is on the stack or in the dictionary"

[21:28] <lizmat> whereas in Raku, everything is Any, except Junctions :-)

[21:31] <moritz> everything is Mu :-)

[21:31] <moritz> japhb: "or" is not allowed

[21:32] <moritz> .oO( Rust: everything is a type error)

[21:38] *** pierrot left
[21:40] *** pierrot joined
[21:45] <japhb> Haskell: Everything is a pure function.  Even if that means it has to close over the observable universe.

[21:48] *** guifa left
[22:02] *** monkey_ left
[22:19] *** pierrot left
[22:20] *** pierrot joined
[23:20] *** quotable6 left
[23:20] *** releasable6 left
[23:20] *** statisfiable6 left
[23:20] *** notable6 left
[23:20] *** reportable6 left
[23:20] *** coverable6 left
[23:20] *** greppable6 left
[23:20] *** bloatable6 left
[23:20] *** benchable6 left
[23:20] *** sourceable6 left
[23:20] *** bisectable6 left
[23:20] *** linkable6 left
[23:20] *** committable6 left
[23:20] *** evalable6 left
[23:20] *** tellable6 left
[23:20] *** nativecallable6 left
[23:20] *** unicodable6 left
[23:20] *** shareable6 left
[23:21] *** sourceable6 joined
[23:21] *** benchable6 joined
[23:21] *** releasable6 joined
[23:21] *** bloatable6 joined
[23:21] *** reportable6 joined
[23:22] *** greppable6 joined
[23:22] *** unicodable6 joined
[23:22] *** linkable6 joined
[23:22] *** tellable6 joined
[23:22] *** statisfiable6 joined
[23:22] *** quotable6 joined
[23:23] *** bisectable6 joined
[23:23] *** evalable6 joined
[23:23] *** nativecallable6 joined
[23:23] *** coverable6 joined
[23:23] *** committable6 joined
[23:23] *** shareable6 joined
[23:23] *** notable6 joined
