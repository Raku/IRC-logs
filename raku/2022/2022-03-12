[00:07] *** lichtkind left
[00:08] *** reportable6 left
[00:19] *** Juerd joined
[00:28] *** jjido left
[01:28] *** bisectable6 left
[01:28] *** quotable6 left
[01:28] *** greppable6 left
[01:28] *** nativecallable6 left
[01:28] *** statisfiable6 left
[01:28] *** tellable6 left
[01:28] *** releasable6 left
[01:28] *** bloatable6 left
[01:28] *** committable6 left
[01:28] *** evalable6 left
[01:28] *** notable6 left
[01:28] *** shareable6 left
[01:29] *** nativecallable6 joined
[01:29] *** bloatable6 joined
[01:30] *** releasable6 joined
[01:30] *** quotable6 joined
[01:31] *** evalable6 joined
[01:31] *** notable6 joined
[01:32] *** statisfiable6 joined
[01:58] *** Howsthat joined
[02:03] *** slowtype- left
[02:11] *** reportable6 joined
[02:13] <Howsthat> I want to program in Raku and use Cro, but I'm stymied because my computer is a MacBook Pro running Monterey 12.2.1 and the Apple M1 chip. Because of this, I can't get zef to work, and Cro installs but gives me the notorious warning "rakudo is loading libcrypto in an unsafe way." Has anyone solved these problems? I've tried several solutions on

[02:13] <Howsthat> StackOverflow, but no one has the same hardware or OS. I just need to be pointed toward a published solution for Mac, Monterey, M1.

[02:27] *** razetime joined
[02:31] *** tellable6 joined
[02:54] *** Howsthat40 joined
[02:56] *** Howsthat40 left
[03:31] *** bisectable6 joined
[04:06] *** tejr left
[04:07] *** tejr joined
[04:20] *** frost joined
[04:20] *** monkey_ joined
[04:30] *** shareable6 joined
[04:30] *** greppable6 joined
[04:31] *** committable6 joined
[04:50] *** rir joined
[04:53] *** rir left
[05:19] *** squashable6 left
[05:19] *** benchable6 left
[05:19] *** ecocode left
[05:19] *** SmokeMachine left
[05:19] *** coverable6 left
[05:19] *** SmokeMachine joined
[05:20] *** patterner___ left
[05:20] *** pjlsergeant left
[05:20] *** patterner___ joined
[05:20] *** pjlsergeant joined
[05:20] *** evalable6 left
[05:20] *** evalable6 joined
[05:20] *** ecocode joined
[05:21] *** vodkra left
[05:22] *** vodkra joined
[05:37] *** aa joined
[05:37] *** aa left
[05:56] *** coverable6 joined
[05:56] *** benchable6 joined
[05:56] *** squashable6 joined
[05:56] *** monkey_ left
[06:01] *** Darkcoal joined
[06:04] *** Howsthat left
[06:11] *** reportable6 left
[06:11] *** reportable6 joined
[06:13] *** Darkcoal left
[06:15] *** Darkcoal joined
[06:17] *** evelyn joined
[06:18] *** evelyn left
[06:26] *** euandreh left
[06:29] *** euandreh joined
[06:56] *** bartolin_ left
[06:57] *** bartolin joined
[07:57] *** notable6 left
[07:57] *** committable6 left
[07:57] *** bisectable6 left
[07:57] *** shareable6 left
[07:57] *** releasable6 left
[07:57] *** statisfiable6 left
[07:57] *** evalable6 left
[07:57] *** quotable6 left
[07:57] *** bloatable6 left
[07:57] *** reportable6 left
[07:57] *** greppable6 left
[07:57] *** nativecallable6 left
[07:57] *** unicodable6 left
[07:57] *** squashable6 left
[07:57] *** coverable6 left
[07:57] *** benchable6 left
[07:57] *** tellable6 left
[07:58] *** evalable6 joined
[07:58] *** tellable6 joined
[07:59] *** bisectable6 joined
[07:59] *** committable6 joined
[07:59] *** quotable6 joined
[07:59] *** bloatable6 joined
[08:00] *** unicodable6 joined
[08:00] *** releasable6 joined
[08:00] *** nativecallable6 joined
[08:37] <Geth> ¦ docker: sorairolake++ created pull request #47: Update Rakudo Star and base images

[08:37] <Geth> ¦ docker: review: https://github.com/Raku/docker/pull/47

[08:58] *** coverable6 joined
[08:58] *** notable6 joined
[08:58] *** greppable6 joined
[08:58] *** shareable6 joined
[08:59] *** benchable6 joined
[08:59] *** jjido joined
[08:59] *** statisfiable6 joined
[09:00] *** reportable6 joined
[09:00] <CIAvash> weekly: https://www.reddit.com/r/rust/comments/tbu6s3/announcing_rulex_a_new_regular_expression_language/i0am71b/

[09:00] <notable6> CIAvash, Noted! (weekly)

[09:11] <El_Che> CIAvash: you answer is great

[09:11] <CIAvash> thanks

[09:22] *** xinming left
[09:22] *** xinming joined
[10:04] *** frost left
[10:16] *** jjido left
[10:19] *** razetime left
[10:20] *** razetime joined
[10:21] *** lichtkind joined
[10:29] *** avar left
[10:30] *** avar joined
[10:48] <razetime> > {($^a) Z+ ($^b)}((1, 2, 3), (4, 5, 6))

[10:48] <razetime> (6)

[10:48] <razetime> > (* Z+ *)((1, 2, 3), (4, 5, 6))

[10:48] <razetime> (5 7 9)

[10:48] <razetime> why are these two results different?

[10:58] *** frost joined
[11:05] <nine> m: say {@^a Z+ @^b}((1, 2, 3), (4, 5, 6))

[11:05] <camelia> rakudo-moar 6e6ef03c8: OUTPUT: «(5 7 9)␤»

[11:05] <nine> razetime: ^^^

[11:05] <razetime> oh. right.......

[11:15] <discord-raku-bot> <Nemokosch#9980> bang

[11:22] *** zacts joined
[11:37] *** Sgeo left
[11:59] *** lichtkind left
[12:00] *** squashable6 joined
[12:04] *** p6steve joined
[12:08] <p6steve> m:class c {has $.a=42} my $k='a'; my $i=c.new; say $i.a;

[12:08] <evalable6> p6steve, rakudo-moar 6e6ef03c8: OUTPUT: «(exit code 1) 4===SORRY!4=== Er…»

[12:08] <evalable6> p6steve, Full output: https://gist.github.com/2d74803e95f6c27b9a34264b76ed6bd1

[12:09] <p6steve> m:class c {has $.a=42}; my $k='a'; my $i=c.new; say $i.a;

[12:09] <evalable6> p6steve, rakudo-moar 6e6ef03c8: OUTPUT: «42␤»

[12:10] *** reportable6 left
[12:11] <p6steve> ok - that works ... I have a dumb question "(how) can I use a variable as method name (not with EVAL)"?

[12:11] *** reportable6 joined
[12:11] <p6steve> m:class c {has $.a=42}; my $k='a'; my $i=c.new; say $i."$k";

[12:11] <evalable6> p6steve, rakudo-moar 6e6ef03c8: OUTPUT: «(exit code 1) 4===SORRY!4=== Er…»

[12:11] <evalable6> p6steve, Full output: https://gist.github.com/296f377c94f988780a937a402e6bef8d

[12:13] *** zacts left
[12:24] <lizmat> m: class c {has $.a=42}; my $k='a'; my $i=c.new; say $i."$k"();

[12:24] <camelia> rakudo-moar 6e6ef03c8: OUTPUT: «42␤»

[12:24] <lizmat> p6steve: you need the ()

[12:24] *** totomato joined
[12:25] *** jjido joined
[12:30] *** jjido left
[12:31] *** totomato left
[12:37] *** razetime left
[12:50] <lizmat> m: sub MAIN(|c) { dd c }; @*ARGS = "-1"   # meh

[12:50] <camelia> rakudo-moar 6e6ef03c8: OUTPUT: «\("1" => Bool::True)␤»

[12:51] <lizmat> leont ^^  thoughts?

[12:56] *** razetime joined
[13:06] *** ShaneC left
[13:09] *** ShaneC joined
[13:13] *** ShaneC left
[13:20] *** xinming left
[13:22] *** xinming joined
[13:50] <p6steve> class c {has $.a=42}; my $k='a'; my $i=c.new; say $i."$k"();

[13:50] <evalable6> p6steve, rakudo-moar 6e6ef03c8: OUTPUT: «42␤»

[13:51] <p6steve> aha - no I know the answer I can find it in the docs https://docs.raku.org/language/packages#Interpolating_into_names

[13:52] <p6steve> .^dumb

[14:01] <p6steve> hmmm 'A."$m"()' is searchable in the docs.raku.org lookup box, but the resulting page https://docs.raku.org/language/packages#index-entry-A.%22$m%22() seems to be missing this piece

[14:07] <lizmat> time for a doc issue  :-)

[14:09] <p6steve> https://github.com/Raku/doc/issues/4042

[14:15] <lizmat> p6steve++

[14:22] *** evalable6 left
[14:22] *** linkable6 left
[14:25] *** linkable6 joined
[14:51] *** sena_kun left
[14:52] *** sena_kun joined
[14:57] *** sena_kun left
[14:58] *** sena_kun joined
[15:13] *** razetime left
[15:21] *** razetime joined
[15:42] *** sena_kun left
[15:43] *** sena_kun joined
[15:54] <discord-raku-bot> <Whaaat => Prince of Cows#5266> how do I ask you a question @raku-bot#6099 ?

[15:54] <discord-raku-bot> <Whaaat => Prince of Cows#5266> hello everyone

[15:54] <discord-raku-bot> <Whaaat => Prince of Cows#5266> hi @Rogue#2017

[16:33] *** martinthewildpig joined
[16:33] <martinthewildpig> sup

[16:40] *** martinthewildpig left
[17:03] <[Coke]_> Hello.

[17:03] *** [Coke]_ is now known as [Coke]

[17:06] *** razetime left
[17:37] *** phogg left
[17:37] *** perlmaros left
[17:42] *** phogg joined
[17:42] *** perlmaros joined
[18:08] *** reportable6 left
[18:09] *** reportable6 joined
[18:25] *** evalable6 joined
[18:30] <CIAvash> weekly: Rakudo and zef completions for fish shell 3.4.0 https://twitter.com/CIAvash/status/1502712984635904000

[18:30] <notable6> CIAvash, Noted! (weekly)

[18:47] *** Sgeo joined
[19:06] *** Darkcoal left
[19:28] *** euandreh left
[19:32] *** euandreh joined
[19:35] *** clarjon_1 is now known as clarjon1

[19:57] *** jjido joined
[20:25] *** ShaneC joined
[21:12] *** mexen left
[21:45] *** clarjon1 left
[22:02] *** notna joined
[22:04] *** discord-raku-bot left
[22:04] *** discord-raku-bot joined
[22:07] <leont> lizmat: I'm not sure what your question is?

[22:14] *** notna left
[22:27] <jdv> i think i saw recently that Hash doesn't do standard MOP (not straightforward to subclass) was on purpose.  iirc that would be wrong.

[22:30] <vrurg> jdv: You're likely to be confused with something else

[22:30] <vrurg> m: class MH is Hash { }; my $mh = MH.new((a => 1, b => 2)); say $mh; say $mh.WHICH

[22:30] <camelia> rakudo-moar cd02552c9: OUTPUT: «{a => 1, b => 2}␤MH|3639385253440␤»

[22:31] <jdv> i had a ticket about it a while ago

[22:32] <jdv> i think

[22:34] <vrurg> Hash is hard-coded in many places in the compiler. This might be a problem for some tricks, perhaps?

[22:35] <jdv> https://github.com/rakudo/rakudo/issues/3704

[22:35] <jdv> one of the original ideas was that core classes were not special/different - in contrast to tie and stuff in Perl for example 

[22:38] <jdv> oops.   dinner.  sorry &

[22:38] <vrurg> They're special in a way. As the most used ones they need extra optimizations. Sometimes at the cost of some usability. So, if you want attributes while inheriting from some core classes – you can do it manually, by overriding method new.

[22:39] *** jjido left
[22:39] <vrurg> I barely expect anything to change here because it would pose significant slowdown of object creation for core classes..

[23:26] *** djerius left
[23:27] *** djerius joined
[23:33] <discord-raku-bot> <theangryepicbanana#8297> is there a way to do something like `role Foo[Array[::T]] { ... }` in raku without having to specify `::T` beforehand?

[23:46] <lizmat> leont: should command line arguments of the form "-123" be considered an IntStr of a negative Int value, or a boolean flag called "123"

[23:47] <leont> There's rarely one true way in argument parsing

[23:49] <leont> There's precedent for the former though. I think I have seen -0 to indicate using null-byte as record separator.

[23:49] <leont> Most cases I know of that use hyphen-number as a command line option actually use the number itself as the argument (e.g. head -2 filename)

