[00:03] <Xliff> guifa: https://github.com/rakudo/rakudo/blob/rakuast/t/12-rakuast/operators.t#L174 -- I don't know if custom ops are supported, yet.

[00:04] <guifa> Ah okay, so you just apply it as if it were a postfic

[00:06] <guifa> that's I think what was throwing me off.

[00:06] *** reportable6 left
[00:06] <guifa> Also it's interesting that you can do method calls via both dotty infix and as a postfix call.  

[00:08] *** reportable6 joined
[00:16] *** hasrthur left
[00:48] <jaguart> @Nemokosch#9980 - a slug is a usually readable word-like unique id - often used in a url - so 'raku' is already taken at StackShare, but the language doesn't show up in programming languages etc.

[01:16] *** linkable6 left
[01:16] *** evalable6 left
[02:10] *** eseyman left
[02:13] *** eseyman joined
[02:17] *** hasrthur joined
[02:21] *** hasrthur left
[02:29] <guifa> Xliff lizmat: success!  I just got a fully working RakuAST version of Intl::Format::List working.  Only 200 lines to replace 25 hahahaha.  But definitely a great introduction to RakuAST

[02:31] <guifa> But I think I could have the Intl::Format::Number converted very quickly now

[02:33] <guifa> Is there a good way to have a module released with a RASTy and non-RASTy version coexisting?  I guess I could check for %ENV<RAKUDO_RAKUAST>, but the RakuAST::* will bomb on compile before the check would go into play

[02:38] *** xinming left
[02:40] *** xinming joined
[02:41] *** oodani left
[02:41] *** oodani joined
[03:18] *** linkable6 joined
[03:34] *** Garbanzo_ joined
[04:18] *** evalable6 joined
[04:37] *** RandalSchwartz joined
[04:37] *** RandalSchwartz left
[05:01] *** Altai-man joined
[05:03] *** sena_kun left
[05:40] *** jrjsmrtn_ joined
[05:43] *** jrjsmrtn left
[06:06] *** reportable6 left
[06:47] *** Xliff left
[07:07] *** reportable6 joined
[07:07] *** Util left
[07:19] *** seednode99 left
[07:20] *** seednode99 joined
[07:20] *** Util joined
[07:24] *** abraxxa joined
[07:29] *** abraxxa left
[07:30] *** abraxxa joined
[07:36] *** Garbanzo_ left
[07:42] *** TheAthlete joined
[07:55] *** jjido joined
[07:59] *** Sgeo left
[08:59] *** evalable6 left
[08:59] *** linkable6 left
[09:09] *** dakkar joined
[09:09] <lizmat> guifa: well, you could put the code in a Q:to/SOURCE/ block at BEGIN time, so you'd have more control

[09:10] *** jjido left
[09:12] *** jmcgnh left
[09:24] *** jmcgnh joined
[09:49] *** hasrthur joined
[10:28] <leont> r: class Foo { has Order @.orders; }; my %hash = orders => Array[Order].new; Foo.new(|%hash)

[10:28] <camelia> rakudo-moar 9a1752634: OUTPUT: «Type check failed in assignment to @!orders; expected Order but got Array[Order] (Array[Order].new())␤  in block <unit> at <tmp> line 1␤␤»

[10:28] <camelia> ..rakudo-jvm: OUTPUT: «Can't open perl script "/home/camelia/rakudo-j-inst/bin/eval-client.pl": No such file or directory␤»

[10:28] <leont> Is that a bug, or am I misunderstanding something?

[10:28] <leont> It should accept that argument, right?

[10:35] <leont> commit: class Foo { has Order @.orders; }; my %hash = orders => Array[Order].new; Foo.new(|%hash)

[10:35] <committable6> leont, ¦class: «Cannot find this revision (did you mean “Plano”?)»

[10:36] <leont> commit:  v6.c class Foo { has Order @.orders; }; my %hash = orders => Array[Order].new; Foo.new(|%hash)

[10:37] <committable6> leont, https://gist.github.com/afa0920d2c30b5da10b0725b509c3a23

[11:00] *** evalable6 joined
[11:31] <leont> Interestingly, it all works fine if I put the arguments in a Map instead of a hash

[11:33] <lizmat> leont: probably also if you bind the array

[11:33] <lizmat> m: class Foo { has Order @.orders; }; my %hash; %hash<orders> := Array[Order].new; Foo.new(|%hash)

[11:33] <camelia> rakudo-moar 9a1752634: ( no output )

[11:34] *** TheAthlete left
[11:34] <lizmat> m: class Foo { has Order @.orders; }; my %hash = orders :=> Array[Order].new; Foo.new(|%hash)

[11:34] <camelia> rakudo-moar 9a1752634: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Preceding context expects a term, but found infix := instead.␤at <tmp>:1␤------>  Order @.orders; }; my %hash = orders :=⏏> Array[Order].new; Foo.new(|%hash)␤»

[11:34] <lizmat> sadly we don't have a :=> infix

[11:34] <lizmat> well, actually, that wouldn't matter in this case anyway  :-)

[11:35] <lizmat> m: class Foo { has Order @.orders; }; my %hash is Map = orders => Array[Order].new; Foo.new(|%hash)

[11:35] <camelia> rakudo-moar 9a1752634: ( no output )

[11:40] <Voldenet> m: class Foo { has Order @.orders; }; my $hash = orders => Array[Order].new; Foo.new(|$hash)

[11:40] <camelia> rakudo-moar 9a1752634: ( no output )

[11:42] <leont> Voldenet: that last example is not a hash but a pair

[11:43] <Voldenet> It works in the example though

[11:55] *** jjido joined
[12:01] *** linkable6 joined
[12:07] *** reportable6 left
[12:49] *** hasrthur left
[12:54] *** hasrthur joined
[13:08] *** [Coke] left
[13:08] *** sena_kun joined
[13:41] *** jjido left
[13:48] *** hasrthur_ joined
[13:51] *** hasrthur left
[13:53] *** discord-raku-bot left
[13:54] *** xinming left
[13:54] *** discord-raku-bot joined
[14:09] *** reportable6 joined
[14:09] *** morte_ joined
[14:13] *** jjido joined
[14:28] <guifa> I managed to get a RakuAST pretty print semi working last night ^_^

[14:29] <guifa> right now just handles the nodes and attribuets that I've used, but still… going to make coding much easier

[14:29] <lizmat> guifa++

[14:30] <guifa> is there a way to enable ANSI colors in Comma's terminal?

[14:32] <lizmat> .

[14:56] *** jjido left
[15:02] *** jgaz joined
[15:17] *** sena_kun left
[15:17] *** sena_kun joined
[15:19] *** Sgeo joined
[15:37] *** TheAthlete joined
[16:10] *** Juerd left
[16:12] *** Juerd joined
[16:16] *** hasrthur_ left
[16:24] *** bingos is now known as BinGOs

[16:26] *** jgaz left
[16:38] *** hasrthur joined
[17:07] *** hasrthur left
[17:08] *** TempIRCLogger__ joined
[17:09] *** TempIRCLogger left
[17:10] *** lizmat left
[17:11] *** lizmat joined
[17:15] *** lizmat left
[17:15] *** lizmat joined
[17:18] *** [Coke] joined
[17:21] *** Geth left
[17:21] <[Coke]> can anyone ping 9.9.9.9 ? Wondering if non-responsiveness here is part of my home network woes this morning.

[17:22] <sena_kun> [Coke], pings fine

[17:22] <[Coke]> maybe my ISP is being a jerk.

[17:24] *** abraxxa left
[17:36] *** hasrthur_ joined
[17:36] *** hasrthur left
[17:38] *** dakkar left
[18:07] *** reportable6 left
[18:09] *** reportable6 joined
[18:24] *** sena_kun left
[18:30] *** clarjon_1 is now known as clarjon1

[18:40] <lizmat> pings fine for me

[18:56] *** jjido joined
[19:07] *** TheAthlete left
[20:07] *** squashable6 left
[20:07] *** evalable6 left
[20:07] *** quotable6 left
[20:07] *** notable6 left
[20:07] *** linkable6 left
[20:07] *** reportable6 left
[20:07] *** unicodable6 left
[20:07] *** shareable6 left
[20:07] *** sourceable6 left
[20:07] *** statisfiable6 left
[20:07] *** committable6 left
[20:07] *** coverable6 left
[20:07] *** releasable6 left
[20:07] *** nativecallable6 left
[20:07] *** greppable6 left
[20:07] *** tellable6 left
[20:07] *** bloatable6 left
[20:07] *** bisectable6 left
[20:07] *** benchable6 left
[20:08] *** releasable6 joined
[20:08] *** shareable6 joined
[20:09] *** evalable6 joined
[20:09] *** benchable6 joined
[20:09] *** unicodable6 joined
[20:09] *** sourceable6 joined
[20:10] *** greppable6 joined
[20:10] *** notable6 joined
[20:10] *** tellable6 joined
[20:26] *** jjido left
[20:41] *** jjido joined
[20:46] *** seednode99 is now known as seednode

[21:08] *** nativecallable6 joined
[21:08] *** bloatable6 joined
[21:09] *** squashable6 joined
[21:09] *** reportable6 joined
[21:17] *** perlbot left
[21:18] *** simcop2387 left
[21:22] <[Coke]> nqp: class EEK {method Numeric() {return 3}}; my $a:= EEK.new(); say(+$a);

[21:22] <camelia> nqp-moarvm: OUTPUT: «Cannot intify object of type EEK␤   at src/vm/moar/ModuleLoader.nqp:129  (/home/camelia/rakudo-m-inst-1/share/nqp/lib/ModuleLoader.moarvm:)␤ from <tmp>:1  (<ephemeral file>:<mainline>)␤ from gen/moar/stage2/NQPHLL.nqp:1949  (/home/camelia/rakudo-m-inst-1/s…»

[21:26] <MasterDuke> nqp: class EEK {method Int() {return 3}}; my $a:= EEK.new(); say(+$a);

[21:26] <camelia> nqp-moarvm: OUTPUT: «3␤»

[21:28] *** simcop2387 joined
[21:29] *** perlbot joined
[21:29] <MasterDuke> m: class EEK {method Numeric() {return 3}}; my $a:= EEK.new(); say(+$a);

[21:29] <camelia> rakudo-moar 4365d9b6d: OUTPUT: «3␤»

[21:32] <MasterDuke> [Coke]: nqp as of a while ago default to integer operations for everything. so &prefix:<+> calls intify(), which doesn't look for a Numeric method. you'd have to ask someone like jnthn if it should (which i don't believe would be hard to add)

[21:41] *** xinming joined
[21:47] *** thundergnat left
[21:47] *** hasrthur_ left
[21:51] *** jjido left
[22:09] *** linkable6 joined
[22:10] *** coverable6 joined
[22:10] *** quotable6 joined
[22:11] *** committable6 joined
[22:13] *** seednode left
[22:13] *** jaguart left
[22:13] *** seednode joined
[22:15] *** seednode left
[22:21] *** dgl is now known as dg

[22:21] *** vodkra left
[22:25] *** seednode joined
[22:27] *** seednode left
[22:34] *** vodkra joined
[22:47] *** timo1 joined
[22:48] *** timo left
[23:15] *** morte_ left
[23:35] <[Coke]> MasterDuke: https://github.com/Raku/nqp/issues/59

[23:36] <[Coke]> "a while ago" - the ticket is from 2012. ;)

[23:41] <MasterDuke> yeah, i'm not sure that should be expected to work

[23:42] *** Garbanzo_ joined
[23:56] <[Coke]> I would be sad if it took 10 years to say that, but at least the ticket would be closed. :)

[23:59] <MasterDuke> well, i'd get confirmation from somebody else before closing it. jnthn, pmurias, TimToady, etc

