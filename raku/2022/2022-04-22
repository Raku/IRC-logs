[00:07] *** reportable6 left
[00:08] *** reportable6 joined
[00:14] *** melezhik left
[00:39] *** coleman joined
[00:46] *** frost joined
[01:15] *** razetime joined
[01:16] *** guifa left
[01:24] *** londoed_ left
[01:24] *** londoed_ joined
[01:51] *** euandreh left
[02:31] *** coleman left
[03:31] *** committable6 left
[03:31] *** nativecallable6 left
[03:31] *** releasable6 left
[03:31] *** benchable6 left
[03:31] *** bisectable6 left
[03:31] *** unicodable6 left
[03:31] *** greppable6 left
[03:31] *** coverable6 left
[03:31] *** linkable6 left
[03:31] *** tellable6 left
[03:31] *** notable6 left
[03:31] *** statisfiable6 left
[03:31] *** bloatable6 left
[03:31] *** sourceable6 left
[03:31] *** reportable6 left
[03:31] *** shareable6 left
[03:31] *** quotable6 left
[03:31] *** evalable6 left
[03:31] *** quotable6 joined
[03:31] *** sourceable6 joined
[03:31] *** releasable6 joined
[03:31] *** statisfiable6 joined
[03:31] *** shareable6 joined
[03:32] *** linkable6 joined
[03:32] *** nativecallable6 joined
[03:32] *** bloatable6 joined
[03:32] *** benchable6 joined
[03:32] *** reportable6 joined
[03:32] *** tellable6 joined
[03:33] *** bisectable6 joined
[03:33] *** evalable6 joined
[03:34] *** coverable6 joined
[03:34] *** Guest35 left
[03:34] *** greppable6 joined
[03:34] *** committable6 joined
[03:34] *** notable6 joined
[03:34] *** unicodable6 joined
[03:43] *** frost left
[04:10] *** abraxxa-home joined
[04:17] *** gabiruh left
[04:17] *** gabiruh joined
[04:24] *** abraxxa-home left
[04:44] *** abraxxa-home joined
[05:44] *** bloatable6 left
[05:44] *** committable6 left
[05:44] *** sourceable6 left
[05:44] *** bisectable6 left
[05:44] *** releasable6 left
[05:44] *** coverable6 left
[05:44] *** linkable6 left
[05:44] *** statisfiable6 left
[05:44] *** notable6 left
[05:44] *** evalable6 left
[05:44] *** greppable6 left
[05:44] *** benchable6 left
[05:44] *** tellable6 left
[05:44] *** unicodable6 left
[05:44] *** nativecallable6 left
[05:44] *** quotable6 left
[05:44] *** shareable6 left
[05:44] *** reportable6 left
[05:44] *** tellable6 joined
[05:44] *** reportable6 joined
[05:44] *** notable6 joined
[05:45] *** committable6 joined
[05:45] *** releasable6 joined
[05:45] *** sourceable6 joined
[05:45] *** nativecallable6 joined
[05:45] *** bisectable6 joined
[05:45] *** unicodable6 joined
[05:45] *** evalable6 joined
[05:45] *** quotable6 joined
[05:46] *** statisfiable6 joined
[05:46] *** coverable6 joined
[05:46] *** linkable6 joined
[05:46] *** benchable6 joined
[05:46] *** bloatable6 joined
[05:46] *** shareable6 joined
[05:47] *** greppable6 joined
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:18] *** abraxxa-home left
[06:20] *** abraxxa-home joined
[06:40] *** grondilu joined
[06:50] *** Saadi joined
[06:55] *** abraxxa-home left
[06:57] *** abraxxa joined
[06:59] *** abraxxa left
[07:13] *** Saadi left
[07:37] *** abraxxa joined
[07:45] *** abraxxa left
[07:45] *** Sgeo left
[07:46] *** abraxxa joined
[08:04] *** frost joined
[08:16] *** p6steve left
[08:28] *** p6steve joined
[08:33] *** p6steve left
[08:43] *** p6steve joined
[08:47] *** p6steve left
[09:07] *** p6steve joined
[09:09] *** lichtkind joined
[09:11] *** p6steve left
[09:25] *** p6steve joined
[09:46] *** ThDrMz left
[09:55] *** sena_kun left
[09:56] *** sena_kun joined
[09:59] *** ThDrMz joined
[10:26] *** zacts joined
[10:39] *** Altai-man joined
[10:50] *** zacts left
[11:45] *** zacts joined
[11:59] *** euandreh joined
[12:07] *** reportable6 left
[12:08] *** euandreh left
[12:09] *** reportable6 joined
[12:11] *** mexen joined
[12:21] *** razetime left
[12:25] *** euandreh joined
[12:40] <p6steve> 1

[12:40] <p6steve> 2

[12:45] <lizmat> 3

[12:45] *** abraxxa left
[12:49] *** wingfold joined
[12:50] <patrickb> Altai-man: Is it possible to somehow explicitly exclude a heading from inclusion into the index? Maybe `=head1 X<The Task example|>`?

[12:51] <p6steve> lizmat: wrong! https://course.raku.org/essentials/conditional-checks/exercises/fizz-buzz/

[12:53] <lizmat> :-)

[13:29] *** p6steve_ joined
[13:29] *** p6steve_ left
[13:38] *** zacts left
[13:39] *** frost left
[13:39] <Geth> ¦ ecosystem: 0eff270ba1 | (Elizabeth Mattijsen)++ | META.list

[13:39] <Geth> ¦ ecosystem: Remove IO::Path::ChildSecure from git ecosystem

[13:39] <Geth> ¦ ecosystem: 

[13:39] <Geth> ¦ ecosystem: It lives in the zef ecosystem now

[13:39] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/0eff270ba1

[13:42] <patrickb> lizmat: Should WebService::GitHub also be removed from p6c? It now also lives in the zef eco, but the API has changed considerably.

[13:43] <lizmat> well, I assume you have bumped the version?

[13:43] <patrickb> I did.

[13:43] <lizmat> how long ago did you upload to zef ?

[13:44] <patrickb> Yesterday. But did another release (only added a readme, no code changes) a few minutes ago.

[13:44] <lizmat> with a version bump again, right?

[13:44] <patrickb> yesterdays upload is 17 h ago according to raku.land.

[13:45] <lizmat> yeah... that should be long enough

[13:45] <patrickb> Yes, with a version bump. ;-) Is it even possible to reupload a version that already lives in zef?

[13:45] <lizmat> nope, it isn't  :=_

[13:45] <lizmat> :-)

[13:46] <Geth> ¦ ecosystem: 1191f3d81d | (Elizabeth Mattijsen)++ | META.list

[13:46] <Geth> ¦ ecosystem: Remove WebService::Github

[13:46] <Geth> ¦ ecosystem: 

[13:46] <Geth> ¦ ecosystem: it lives in the zef ecosystem now

[13:46] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/1191f3d81d

[13:46] <patrickb> Thanks!

[13:46] <lizmat> you're welcome!

[13:51] <Altai-man> patrickb, I believe headers are not indexed unless they start with number of keywords like `routine`, `method`, 'infix' etc, no?

[13:52] <patrickb> Altai-man: I have been working on https://github.com/Raku/doc/pull/4047

[13:53] <Altai-man> yup

[13:54] <patrickb> Specifically introducion of a "The Task example" header was a problem. In the discussion the index was the problem. I always presumed we talked about the search index...

[13:54] <Altai-man> patrickb, I believe you want to explain problem A to me rather than problem B. :)

[13:55] <patrickb> https://github.com/Raku/doc/pull/3794#discussion_r571381038

[13:55] <patrickb> Thus I was searching for a way to still have that heading (which I think makes a lot of sense) but have it excluded from the index.

[13:56] <Altai-man> patrickb, hmm, interesting. Well, there are a couple of points: 1)it has nothing to do with the _search_ index; 2)on the page there are HTML anchors (id=...) we navigate to/from TOC and also from external URLs. So I think the concerning thing there is that the anchor is renamed which in theory breaks external URLs pointing to it.

[13:56] *** Sgeo joined
[13:56] <patrickb> But maybe I misunderstood JJs comment entirely.

[13:57] <Altai-man> I agree, I am not sure I interpreted his words right, but I can point out what's "wrong" with it from my perspective.

[13:57] <patrickb> Altai-man: I removed and renamed loads of anchors. I thought that was a "nothing we can do about it, versions could fix the problem in the future" thing.

[13:58] <patrickb> OK. I think I now know what I need to know to ask the right questions. Thanks!

[13:59] *** Guest35 joined
[13:59] <Altai-man> patrickb, well, not a lot of things can be done other than "nothing we can do about it, versions could fix the problem in the future", yes.

[14:00] <Altai-man> in fact we need to get versions support ASAP, as introducing it starts the process of normalizing the versioned URLs and gradual deprecation of the current layout.

[14:01] *** Sgeo left
[14:01] <patrickb> To be honest, I don't think it's a big problem. People rarely link to specific anchors from outside the docs. If they do, at least the link to the page itself still works.

[14:03] <Altai-man> patrickb, I think we need some sort of statistics to claim that "rarely link to specific anchors", I find it rather common when you need to point to a specific part of the page instead of pointing to a huge document.

[14:03] <Altai-man> And it's not only about page anchors, but also general changes to the docs.

[14:04] <Altai-man> Introducing new pages, large re-works of existing ones.

[14:04] *** [Coke] left
[14:05] <p6steve> I deep link raku doc quite a lot in my docs and code comments and SO ;-(

[14:05] <patrickb> Altai-man: I agree. Versions are very good to have when the docs are constantly changing (as ours still do).

[14:06] *** guifa joined
[14:06] *** [Coke] joined
[14:06] *** ThDrMz left
[14:09] *** Sgeo joined
[14:17] *** frost joined
[14:19] *** ThDrMz joined
[14:25] *** frost left
[14:39] <patrickb> o/ melezhik

[14:44] *** morte_ joined
[15:26] *** guifa left
[15:34] *** euandreh left
[15:40] *** mexen left
[15:57] *** euandreh joined
[16:17] *** wingfold left
[16:28] *** melezhik joined
[16:29] <melezhik> patrickb I've run WebService-GitHub on SparkyCI and have similar error as you have on GH actions - http://sparrowhub.io:2222/report/214

[16:30] <melezhik> [bash: install deps] :: Type check failed for return value; expected IO::Path but got Any (Any) -  means there is no META6.json file in the root of the project

[16:30] <melezhik> is it intentionally ? I wonder how then this has ever worked?

[16:31] <melezhik> and according the build history - https://github.com/raku-community-modules/WebService-GitHub/actions it has never done ...

[16:32] <melezhik> I guess META6.json for the project lies on here - https://github.com/raku-community-modules/WebService-GitHub/blob/main/dev-scripts/META6.json , right?

[16:33] <melezhik> so the CI would be "zef install --deps-only . in dev-scripts/" right?

[16:43] <patrickb> hi!

[16:43] <patrickb> Ah

[16:43] <patrickb> Stupid me.

[16:44] <patrickb> The module needs to be generated first.

[16:44] <patrickb> cat dev-scripts/README.md

[16:44] <patrickb> OK now I'm unsure if this module is a good fit for automated testing at all.

[16:45] <patrickb> The `generate-modules` script can take quite some time to run.

[16:46] *** Woodi left
[16:48] <melezhik> I can think about customization of SparkyCI build command, so that user can replace default one ( which is just zef install --deps-only . && zef test . ) by any custom command like in this case , however it's quite rare case, huh?

[16:53] *** Woodi joined
[16:55] <patrickb> I guess so.

[16:56] <patrickb> How are cases where binaries need to be compiled currently handled?

[16:56] <patrickb> does `zef test .` trigger these build steps?

[17:05] <[Coke]> given a list like <a b y e d g h>, how can I sort but pull item out to the front, e.g. with 'g': <g a b d e h y>

[17:06] <[Coke]> I am trying to construct a sort algorithm that isn't crazy

[17:07] *** morte_` joined
[17:08] <[Coke]> (worst case I'll grep it out and construct the list with the single item plus the sorted remainder

[17:08] <patrickb> I'm away for a bit...

[17:09] *** morte_ left
[17:12] <melezhik> .tell patrickb in WebService-GitHub  why do you download Rakudo binaries at all? do you test the module against specific Rakudo versions?

[17:12] <tellable6> melezhik, I'll pass your message to patrickb

[17:19] <[Coke]> japhb: ended up re-writing my api crawler to try "download everything" and split it into smaller and smaller chunks until one chunk says "fine, you can have all *that* data". iterate until done

[17:21] *** Altai-man left
[17:29] <SmokeMachine> m: sub sort-wanted-before(@arr, $wanted) { [|.<wanted>, |.<rest>.sort] given @arr.classify: { $_ eq $wanted ?? "wanted" !! "rest" } }; say sort-wanted-before <a b y e d g h>, "g"

[17:29] <camelia> rakudo-moar 530e17848: OUTPUT: «[g a b d e h y]␤»

[17:29] <tellable6> 2022-04-21T21:53:19Z #raku <melezhik> SmokeMachine - thanks

[17:30] <SmokeMachine> [Coke]: something like that? ^^

[17:38] <[Coke]> SmokeMachine: yah, was hoping for something less verbose; can definitely throw something in a sub and hide it there, though. Thanks!

[18:07] <patrickb> melezhik: That code wasn't written by me. I have just taken over the repo yesterday.

[18:07] <tellable6> 2022-04-22T17:12:10Z #raku <melezhik> patrickb in WebService-GitHub  why do you download Rakudo binaries at all? do you test the module against specific Rakudo versions?

[18:08] <patrickb> melezhik: I think the idea was to not recompile rakudo on every test, but use the rakudo downloads instead.

[18:08] <patrickb> melezhik: I haven't dug deeper yet though.

[18:09] *** reportable6 left
[18:11] <patrickb> melezhik: Another module (in progress, not yet in the ecosystem) which is interesting in how to test is Devel::ExecRunnerGenerator (https://git.sr.ht/~patrickb/Devel-ExecRunnerGenerator).

[18:12] *** reportable6 joined
[18:15] <patrickb> That module requires two binaries to be compiled. But those binaries are packaged into the module when released, so they are not compiled when installing the module, but when releasing the module.

[18:32] *** grondilu left
[19:03] *** morte_` left
[19:13] <El_Che> building ubuntu 22.04 packages atm

[19:21] <jdv> for what now?  the april release didnt happen yet.

[19:22] <drakonis> patrickb: ooooh nice.

[19:23] *** melezhik_ joined
[19:23] <El_Che> jdv: 2022.03 with zef update

[19:24] <melezhik_> .

[19:24] <El_Che> but the idea is to add ubuntu 22.04 packages as people will start upgrading

[19:24] <El_Che> melezhik_: ..

[19:24] <jdv> you pkg zef?  i thought that was star only.

[19:25] <drakonis> zef is also available on debian

[19:25] <drakonis> and thus propagated to ubuntu

[19:25] <El_Che> jdv: rakudo-pkg == rakudo + root zef + script to install zef as a user

[19:25] <jdv> huh

[19:26] <melezhik_> @patrickb: I mean why to download rakudo binaries at all? Why not to use preinstalled rakudo which is already in docker image? Unless of course one needs to test against a specific version of rakudo ...

[19:26] <El_Che> drakonis: yes, when the version on the OS suffices, that is certainly the better choice. rakudo-pkg is handy if you always want/need the latest release or if the version on your OS is ancient

[19:26] <melezhik_> El_Che: )))....

[19:26] <El_Che> melezhik_: that looks like lisp

[19:27] <drakonis> its not presently propagated to 22.04 because it made into debian late march

[19:27] <drakonis> so after the freeze

[19:27] <melezhik_> El_Che: what do you mean ?

[19:28] <El_Che> melezhik_: the overdose parentheses

[19:28] <jdv> nail clippings

[19:29] <drakonis> ubuntu's got 2022.02

[19:30] <El_Che> that's excellend

[19:30] <drakonis> we're at 2022.03 and soon at 2022.04

[19:30] <drakonis> not ideal

[19:30] <El_Che> 2020.04 has 2020.12

[19:31] <El_Che> many people will stick sometime with that LTS

[19:31] <drakonis> 22.04 is the current LTS

[19:31] <jdv> a lotvof distros had ?have? years old pkgs

[19:31] <drakonis> so the issue will simply repeat itself

[19:31] <El_Che> I know

[19:31] *** melezhik_ left
[19:31] <El_Che> I am upgrading my machines ATM

[19:31] <jdv> a few months is insignificant and amazing

[19:31] <El_Che> but not everyone is as crazy as me (or us) :)

[19:31] <drakonis> some distros carry old packages because of no maintainers, others are simply due to the large lifecycle

[19:31] *** melezhik_ joined
[19:32] <melezhik_> patrickb: the link you gave me leads to 404 error

[19:33] <El_Che> ubuntu 20.04 is supported until 2025 for support (2030 maerked as EOL)

[19:33] <drakonis> jeeze that's a long cycle

[19:33] <patrickb> melezhik_: which one

[19:33] <patrickb> ?

[19:33] <melezhik_> Dev generator

[19:33] <melezhik_> On source hut

[19:33] <El_Che> I am upgrading my private stuff, work containers need to be tested before jumping :)

[19:34] <patrickb> https://git.sr.ht/~patrickb/Devel-ExecRunnerGenerator

[19:34] <melezhik_> Works now, thanks

[19:36] <melezhik_> SparkyCI bows only supports GH authentication, maybe need to add source hut as well to allow people add their repos from source as well ... or maybe I need to add a text input allowing just add any valid git url , without trying to fetch repositories from accounts

[19:36] <melezhik_> I don't what is better ... flexibility or control in that case ...

[19:37] <melezhik_> bows -> now

[19:37] <patrickb> the quick solution is allowing any git url. I'd value having that option.

[19:37] <melezhik_> Yeah , I am leaning to that as well

[19:38] <patrickb> In the long run it'd be nice to have support for the big platforms to also report the progress back.

[19:38] <drakonis> what's the status on the work to allow rakudo to output binaries?

[19:38] <drakonis> static binaries and such?

[19:38] <patrickb> drakonis: What were you stoked about earlier?

[19:38] <melezhik_> Btw I guess in case of the source hut people don't have GH action available, so SparkyCI with it's pull approach could a reasonable solution for source hut users )))

[19:39] <drakonis> a thing for doing something similar to that?

[19:39] <drakonis> devel-execrunnergenerator that is

[19:39] <patrickb> drakonis: I think the work on self contained rakudo is currently stalled.

[19:39] <patrickb> ah

[19:39] <drakonis> it seems like it might be helpful for that but not quite what i want

[19:40] *** coleman joined
[19:40] <patrickb> Yes. It doesn't package anything, though. It's quite literally a wrapper around C exec().

[19:41] *** simcop2387 left
[19:41] *** perlbot left
[19:41] <patrickb> So the idea is to distribute a folder with your project in it and include a binary generated by that tool which calls rakudo passing the script name, env vars and forwards cmd line args.

[19:42] *** melezhik_ left
[19:42] <drakonis> its not particularly optimal for sending a file over the wire to another machine to execute it there

[19:42] <drakonis> since it still requires installing rakudo

[19:44] <drakonis> but it is an option

[19:44] <drakonis> its the approach used by tools like nix/guix/consfigurator/propellor for executing code on the other side

[19:45] <melezhik> switched to my "melezhik" account, he-he )))

[19:46] <melezhik> have both laptop and phone connected to channel

[19:47] <melezhik> El_Che what about parenthesis ?  😀

[19:47] <patrickb> drakonis: I guess it's a good tool for typical "end user deployment" cases. Rakudo can be compiled in a relocatable manner. The binaries on rakudo.org are compiled as such. So it is possible to use such a rakudo as a base and then add your raku program to it.

[19:47] <drakonis> melezhik: get a bouncer so you don't miss out on discussion :v

[19:48] <drakonis> that'd be quite useful

[19:48] <drakonis> i have to ask though, how do i ensure that the dependencies are included?

[19:49] *** n1to joined
[19:49] <drakonis> the appropriate libraries

[19:50] *** perlbot joined
[19:50] <drakonis> basically, making sure that nothing needs to be installed on the other side to run the code

[19:51] *** simcop2387 joined
[19:53] <melezhik> patrickb what is a typical CI senario `Devel-ExecRunnerGenerator` ?

[19:53] <melezhik> so what else beside `zef install --deps-only . && zef test .` is required ?

[19:53] <melezhik> what do you want to see else for the module CI?

[19:54] <melezhik> I don't quite grasp this logic by just looking at the source, I see there akefile here that does some job, should it be triggered during CI as well?

[19:54] * [Coke] wonders if there's a way to install deps in a local folder so you can easily nuke the test bed when done.

[19:56] <melezhik> Coke: https://github.com/melezhik/Sparrow6/blob/master/lib/Sparrow6/Task/Repository/Helpers/Plugin.pm6#L38

[19:56] *** melezhik left
[19:56] *** melezhik joined
[19:58] <melezhik>   `--to=path` is that what you're looking for?

[19:58] <melezhik> [Coke] ^^

[20:04] *** melezhik left
[20:07] <patrickb> melezhik: `ake deploy-runner echo-args` should build the required executables needed for testing.

[20:07] <tellable6> patrickb, I'll pass your message to melezhik

[20:07] <patrickb> It builds the runner executable under test and the testing helper.

[20:08] <patrickb> when that successfully finishes a `prove6 -I. xt` should work

[20:08] <patrickb> (It's rather WIP at the moment, but works on my local linux machine.)

[20:08] *** melezhik joined
[20:12] *** melezhik left
[20:20] *** TempIRCLogger left
[20:54] *** epony left
[21:14] <El_Che> weekly: new rakudo-pkg for freshly released Ubuntu 22.04

[21:14] <notable6> El_Che, Noted! (weekly)

[21:41] *** zacts joined
[21:49] *** melezhik joined
[21:49] <melezhik> .

[21:49] <tellable6> 2022-04-22T20:07:08Z #raku <patrickb> melezhik: `ake deploy-runner echo-args` should build the required executables needed for testing.

[21:54] *** melezhik left
[22:02] *** dwarring joined
[22:02] *** lichtkind left
[22:07] *** zacts left
[22:17] *** n1to left
[22:45] *** zacts joined
[23:14] <patrickb> melezhik: I have pushed some more progress to Devel::ExecRunnerGenerator. Now a `ake test-setup deploy-runner` is the incantation to use.

[23:14] <tellable6> patrickb, I'll pass your message to melezhik

[23:43] *** zacts left
