[00:09] *** reportable6 left
[00:10] *** reportable6 joined
[00:15] *** monkey_ joined
[00:48] *** monkey_ left
[00:50] *** nativecallable6 joined
[00:50] *** committable6 joined
[00:50] *** benchable6 joined
[00:52] *** coverable6 joined
[00:52] *** bloatable6 joined
[01:06] *** dextercd left
[01:48] *** evalable6 joined
[01:52] *** notable6 joined
[01:58] *** defaultxr left
[01:58] *** defaultxr joined
[02:09] *** monkey_ joined
[02:13] *** Oshawott left
[02:17] *** colemanX joined
[02:27] *** colemanX left
[02:28] *** colemanX joined
[02:46] *** xinming left
[02:48] *** xinming joined
[02:50] *** linkable6 joined
[02:51] *** statisfiable6 joined
[02:52] *** bisectable6 joined
[02:53] <guifa> how does one use the MOP to create a role?  AFAICT this should work 
[02:55] <guifa> my \Foo := Metamodel::ParametricRoleHOW.new_type(name => "Foo"); Foo.^add_method("foo", { "called foo" } ); class Bar { }; my $x = Bar.new; $x does Foo; say $x.foo; 
[02:55] <guifa> bu it bombs with Language revision must be a concrete string
[02:55] *** tejr left
[02:55] *** tejr joined
[03:00] *** Arathorn left
[03:14] *** Arathorn joined
[03:49] *** sabrytos joined
[03:56] *** monkey_ left
[04:02] *** monkey_ joined
[04:13] *** archenoth joined
[04:17] *** sabrytos left
[04:31] *** monkey_ left
[05:20] *** seednode left
[05:20] *** seednode joined
[05:46] *** tejr left
[05:46] *** tejr joined
[06:08] *** reportable6 left
[06:08] *** reportable6 joined
[07:08] *** sourceable6 left
[07:08] *** coverable6 left
[07:08] *** reportable6 left
[07:08] *** statisfiable6 left
[07:08] *** bloatable6 left
[07:08] *** linkable6 left
[07:08] *** notable6 left
[07:08] *** evalable6 left
[07:08] *** bisectable6 left
[07:08] *** unicodable6 left
[07:08] *** nativecallable6 left
[07:08] *** benchable6 left
[07:08] *** tellable6 left
[07:08] *** quotable6 left
[07:08] *** shareable6 left
[07:08] *** squashable6 left
[07:08] *** releasable6 left
[07:08] *** committable6 left
[07:08] *** greppable6 left
[07:08] *** greppable6 joined
[07:09] *** sourceable6 joined
[07:10] *** statisfiable6 joined
[07:10] *** linkable6 joined
[07:10] *** coverable6 joined
[07:10] *** bisectable6 joined
[07:11] *** reportable6 joined
[07:11] *** shareable6 joined
[07:11] *** releasable6 joined
[07:24] *** seednode left
[07:25] *** seednode joined
[07:39] *** msudx joined
[07:44] <msudx> hello
[07:47] <msudx> can someone answer my questions
[07:59] *** frost joined
[08:03] *** msudx left
[08:09] *** squashable6 joined
[08:11] *** tellable6 joined
[09:01] *** jrjsmrtn left
[09:02] *** jrjsmrtn joined
[09:09] *** bloatable6 joined
[09:09] *** nativecallable6 joined
[09:10] *** evalable6 joined
[09:11] *** benchable6 joined
[09:11] *** committable6 joined
[09:11] *** notable6 joined
[09:32] *** lichtkind_ joined
[09:34] *** lichtkind_ left
[10:11] *** quotable6 joined
[10:15] *** jjido joined
[10:55] *** RakuIRCLogger left
[10:55] *** RakuIRCLogger joined
[11:01] *** RakuIRCLogger left
[11:02] *** RakuIRCLogger joined
[11:09] <spacekookie> Is there some way to turn a list of hashes into a hash with the key and values being determined from each hash in the list?
[11:10] <spacekookie> Like [ { key => a, val => b} { key => c, val => d }] ---> { a => b, c => d }
[11:12] <moon-child> m: say [{key => 'a', val => 'b'}, {key => 'c', val => 'd'}].map({$_<key> => $_<val>}).Hash
[11:12] <camelia> rakudo-moar d80fb897e: OUTPUT: «{a => b, c => d}␤»
[11:12] *** Sgeo left
[11:12] <moon-child> spacekookie: ^
[11:13] <spacekookie> huh! I tried $<key> => $<val> but that didn't work. Is $_ special?
[11:13] <moon-child> yes
[11:14] <moon-child> https://docs.raku.org/syntax/$_
[11:14] <spacekookie> thanks!
[11:14] <moon-child> you might also write -> $x { $x<key> => $x<val> }, or { $^x<key> => $^x<val> }, or sub ($x) { $x<key> => $x<val> }
[11:15] <moon-child> in cases where you don't ever use a parameter more than one, you can use * (whatever star) and skip the braces
[11:15] <moon-child> sooo many ways to write functions :P
[11:37] *** holyghost joined
[11:39] <holyghost> Happy newyear, everyone
[12:08] *** reportable6 left
[12:11] *** reportable6 joined
[12:12] *** jjido left
[12:18] *** Xliff joined
[12:43] <discord-raku-bot> <Anton Antonov#7232> @holyghost Happy New Year, to you too!
[12:57] *** jjido joined
[13:02] *** frost left
[13:06] <discord-raku-bot> <Anton Antonov#7232> @moon-child Thanks for mentioning Cyc!
[13:08] <moon-child> no problem
[13:08] <moon-child> symbolic ai is not dead, just on its last elbows!
[13:18] <spacekookie> moon-child: it's very strange because I could have sworn that my map(-> $x { $x<key> => $x<val> }, @list) produced an error along the lines that hashes couldn't be mapped. But I can't actually reproduce it anymore...
[13:19] <holyghost> moon-child, inference engines are not dead :-)
[13:19] <moon-child> as I said, on its last elbows only
[13:20] <moon-child> (though logic programming is alive and well, at least; see z3, sql, kanren, et al)
[13:21] *** lichtkind joined
[13:21] <holyghost> rules/facts based learning may be old yes, from LISP days
[13:22] <holyghost> You can represent more in LISP/Scheme that way
[13:35] *** jjido left
[13:44] *** jjido joined
[13:57] <nine> guifa: you're missing a bit:
[13:57] <nine> m: my \Foo := Metamodel::ParametricRoleHOW.new_type(name => "Foo"); Foo.^add_method("foo", my method :: () { "called foo" } ); Foo.^set_body_block(-> |args {}); Foo.^compose; class Bar { }; Foo.new; my $x = Bar.new; $x does Foo; say $x.foo;
[13:57] <camelia> rakudo-moar d80fb897e: OUTPUT: «called foo␤»
[13:58] <guifa> nine ty! I didn't realize that was required
[13:58] <nine> m: my \Foo := Metamodel::ParametricRoleHOW.new_type(name => "Foo"); { Foo.^add_method("foo", my method foo () { "called foo" } ); Foo.^set_body_block(-> |args {}); }; Foo.^compose; class Bar { }; Foo.new; my $x = Bar.new; $x does Foo; say $x.foo; # probably better yet
[13:58] <camelia> rakudo-moar d80fb897e: OUTPUT: «called foo␤»
[13:59] <nine> You definitely always have to call ^compose on them, before using synthetically created types. And methods really have to be methods
[14:12] *** unicodable6 joined
[14:16] *** jjido left
[14:34] <discord-raku-bot> <Anton Antonov#7232> My Wolfram Community post “Connecting Mathematica and Raku” was made a “Staff pick” this morning: https://community.wolfram.com/groups/-/m/t/2434981 .
[15:02] *** dextercd joined
[15:11] <Geth> ¦ doc/master: 4 commits pushed by finanalyst++, (Richard Hainsworth)++
[15:11] <Geth> ¦ doc/master: 9065f0fb08 | New page with filename extensions
[15:11] <Geth> ¦ doc/master: 274aa693b6 | add EOL
[15:11] <Geth> ¦ doc/master: fe6a97633d | make header consistent
[15:11] <Geth> ¦ doc/master: b926ebab62 | Merge pull request #4005 from finanalyst/master
[15:11] <Geth> ¦ doc/master: review: https://github.com/Raku/doc/compare/398d9591e351...b926ebab621e
[15:24] *** dextercd left
[15:31] *** dextercd joined
[16:26] <guifa> Anton++
[16:48] *** monkey_ joined
[16:56] <guifa> nine: well, thanks for the help :-)  Unfortunately, couldn't quite pull off what i was hoping for.  Is there a way to create a multi sub via MOP?  I see a MultiMethodHOW but not a MultiSubHOW
[16:58] <nine> Everything can be created via the MOP, as that's what the compiler itself uses. It's just not always obvious what to do.
[16:59] <guifa> err, yeah, sorry I haven't had my coffee yet this morning 
[16:59] <nine> Note that there is no MultiMethodHOW either. It's MultiMethodContainer - the role that e.g. a meta class does for supporting multi methods. Multi subs and multi methods themselves are just instances of a normal class.
[17:00] <nine> gotta make dinner now
[17:06] <guifa> ugexe tonyo1 over in #raku-beginners someone mentioned that zef search X is hanging sometimes.  I was able to reproduce just now but it's sporadic.  Any advice I can pass along / debugging I can do ?
[17:20] <ugexe> you'd want to know if https://github.com/ugexe/zef/blob/7d6b48db23eaca06c332fa6d0ca8ecae80ae83d4/lib/Zef/Repository.rakumod#L175-L177 is getting stuck searching one of the ecosystems
[17:25] *** finanalyst joined
[17:26] <ugexe> you can run i.e. 'raku -I. bin/zef search X --debug' if you add debugging statements, no need to keep reinstalling
[17:26] <ugexe> i ran that 10 times without hanging, so i don't have much else to suggest
[17:27] *** monkey_ left
[17:28] *** jjido joined
[17:28] <guifa> ugexe if I can get it to do it again (it's only happened once for me) I'll see if I can track it down.  Is there a way via command line to limit the search to specific ecosystems?
[17:29] *** monkey_ joined
[17:29] <ugexe> --/p6c --/cpan --/cached --/fez would disable all ecosystems
[17:30] <guifa> ugexe++
[17:34] <ugexe> https://github.com/ugexe/zef/blob/7d6b48db23eaca06c332fa6d0ca8ecae80ae83d4/resources/config.json#L25-L79
[17:34] <ugexe> note this is an array of array
[17:34] <ugexe> each inner array will be hyperd
[17:36] <ugexe> so for a search the flow looks like [ [fez].hyper.search(...).Slip, [p6c, cpan].search(...), [cached].search(...).Slip ]
[17:36] <ugexe> er, each of those .search should be .hyper.search
[17:37] <ugexe> i mention because it might not necessarily be a specific ecosystem that is the issue, but e.g. waiting on multiple (the p6c + cpan one)
[17:53] *** Manifest0 joined
[17:58] *** jjido left
[18:08] *** reportable6 left
[18:14] *** jjido joined
[18:39] *** morte_ joined
[18:42] *** Sgeo joined
[18:46] *** holyghost left
[19:17] *** morte_ left
[19:22] *** monkey_ left
[19:27] *** abraxxa-home joined
[19:31] <Geth> ¦ doc: finanalyst++ created pull request #4006: change run on config explanation to match actual behaviour
[19:31] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4006
[20:05] *** Xliff_ joined
[20:05] *** Kaipi joined
[20:05] *** kawaii__ joined
[20:08] *** greyrat_ joined
[20:08] *** [Coke]_ joined
[20:09] *** ProperN[out] joined
[20:09] *** Some-body_ joined
[20:10] *** Od1n1 joined
[20:11] *** djerius_ joined
[20:11] *** jcallen_ joined
[20:12] *** Kaipi left
[20:12] *** dextercd1 joined
[20:12] *** Oshawott joined
[20:13] *** Sgeo__ joined
[20:13] *** dextercd left
[20:13] *** kawaii__ is now known as kawaii_
[20:13] *** unicodable6 left
[20:13] *** Xliff left
[20:14] *** m_athias_ joined
[20:14] *** abraxxa-home1 joined
[20:14] *** charsbar_ joined
[20:14] *** gfldex_ joined
[20:15] *** benchable6 joined
[20:15] *** perlmaros_ joined
[20:15] *** releasable6 joined
[20:15] *** quotable6 joined
[20:15] *** shareable6 joined
[20:15] *** dcx joined
[20:15] *** Kaipi left
[20:15] *** lockywolf left
[20:15] *** TempIRCLogger left
[20:15] *** abraxxa-home left
[20:15] *** m_athias left
[20:15] *** charsbar left
[20:15] *** leah2 left
[20:15] *** RakuIRCLogger__ left
[20:15] *** gfldex left
[20:15] *** Voldenet left
[20:15] *** dg left
[20:15] *** vasko left
[20:15] *** sftp left
[20:15] *** Sgeo_ left
[20:15] *** archenoth left
[20:15] *** merpader1 left
[20:15] *** dustinm` left
[20:15] *** charsbar_ is now known as charsbar
[20:15] *** nativecallable6 joined
[20:15] *** merpaderp joined
[20:15] *** gfldex_ is now known as gflsex
[20:16] *** gflsex is now known as gfldex
[20:16] *** leah2 joined
[20:16] *** dg joined
[20:17] *** Scotteh joined
[20:17] *** perlmaros_ is now known as perlmaros
[20:17] *** RakuIRCLogger_ left
[20:17] *** Some-body_ is now known as DarthGandalf
[20:17] *** [Coke] joined
[20:18] *** dextercd1 left
[20:18] *** Manifest1 left
[20:18] *** Gruber left
[20:19] *** m_athias_ is now known as m_athias
[20:19] *** TempIRCLogger joined
[20:19] *** squashable6 joined
[20:19] *** xinming joined
[20:19] *** vasko joined
[20:19] *** unicodable6 joined
[20:19] *** Sgeo__ joined
[20:19] *** linkable6 joined
[20:19] *** statisfiable6 joined
[20:19] *** lucs joined
[20:19] *** Od1n1 joined
[20:19] *** demostanis[m] left
[20:19] *** jrjsmrtn joined
[20:19] *** Manifest1 joined
[20:20] *** dextercd1 joined
[20:20] *** seednode joined
[20:21] *** AlexDaniel left
[20:21] *** CIAvash left
[20:21] *** greyrat_ left
[20:21] *** sftp joined
[20:21] *** Grrrr left
[20:22] *** Grrrr joined
[20:22] *** greyrat joined
[20:23] *** swaggboi joined
[20:23] *** andrea[m] left
[20:23] *** markmarkmark joined
[20:24] *** Arathorn left
[20:24] *** sienet_ja_LSD[m] left
[20:25] *** Geth joined
[20:26] *** dustinm` joined
[20:27] *** Xliff joined
[20:28] *** [Coke]_ joined
[20:28] *** [Coke] left
[20:35] *** bartolin joined
[20:38] *** monkey_ joined
[20:43] *** leah2 left
[20:44] *** leah2 joined
[20:51] *** abraxxa-home1 left
[21:06] *** demostanis[m] joined
[21:07] *** notable6 joined
[21:08] *** committable6 joined
[21:08] *** bisectable6 joined
[21:08] *** coverable6 joined
[21:23] *** [Coke]_ is now known as [Coke]
[21:24] *** monkey_ left
[21:29] *** AlexDaniel joined
[21:30] *** sienet_ja_LSD[m] joined
[21:31] *** CIAvash joined
[21:48] *** sienet_ja_LSD[m] left
[21:48] *** AlexDaniel left
[21:48] *** demostanis[m] left
[21:50] *** RakuIRCLogger__ joined
[21:51] *** CIAvash joined
[21:52] *** perlmaros left
[21:52] *** RakuIRCLogger left
[21:53] *** perlmaros joined
[22:02] *** monkey_ joined
[22:06] *** greppable6 joined
[22:06] *** bloatable6 joined
[22:09] *** reportable6 joined
[22:15] *** AlexDaniel joined
[22:15] *** sienet_ja_LSD[m] joined
[22:15] *** andrea[m] joined
[22:15] *** demostanis[m] joined
[22:15] *** Arathorn joined
[22:15] *** AlexDaniel left
[22:16] *** CIAvash left
[22:17] *** jjido left
[22:18] *** demostanis[m] left
[22:19] *** andrea[m] left
[22:19] *** jjido joined
[22:37] *** morte_ joined
[22:41] *** kybr left
[22:47] *** colemanX left
[22:49] *** lichtkind left
[22:57] *** MasterDuke joined
[23:01] *** kybr joined
[23:06] *** evalable6 joined
[23:07] *** tellable6 joined
[23:10] *** jjido left
[23:19] *** finanalyst left
[23:33] *** dextercd1 left
