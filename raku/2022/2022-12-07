[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:04] *** Guest46 joined
[01:02] *** Kaiepi left
[01:04] *** xinming left
[01:14] *** epony left
[01:37] *** razetime joined
[01:46] <Guest46> things will be hard for C++. Rust, Cpp2, Carbon and now Val.
[01:47] <Guest46> the new kid on the block: https://www.val-lang.dev/
[02:37] *** evalable6 left
[02:37] *** linkable6 left
[02:38] *** evalable6 joined
[02:39] *** linkable6 joined
[02:57] *** epony joined
[03:15] *** xinming joined
[03:20] *** xinming left
[04:02] *** euandreh joined
[04:05] *** euandreh left
[04:06] *** xinming joined
[04:12] *** xinming left
[04:13] *** xinming joined
[04:18] *** xinming left
[05:18] *** evalable6 left
[05:18] *** greppable6 left
[05:18] *** reportable6 left
[05:18] *** squashable6 left
[05:18] *** linkable6 left
[05:18] *** sourceable6 left
[05:18] *** tellable6 left
[05:18] *** statisfiable6 left
[05:18] *** coverable6 left
[05:18] *** nativecallable6 left
[05:18] *** notable6 left
[05:18] *** benchable6 left
[05:18] *** quotable6 left
[05:18] *** committable6 left
[05:18] *** shareable6 left
[05:18] *** unicodable6 left
[05:18] *** bloatable6 left
[05:18] *** releasable6 left
[05:18] *** bisectable6 left
[05:18] *** shareable6 joined
[05:18] *** linkable6 joined
[05:19] *** sourceable6 joined
[05:19] *** bisectable6 joined
[05:19] *** unicodable6 joined
[05:19] *** reportable6 joined
[05:19] *** committable6 joined
[05:19] *** nativecallable6 joined
[05:19] *** squashable6 joined
[05:20] *** quotable6 joined
[05:20] *** benchable6 joined
[05:20] *** greppable6 joined
[05:21] *** bloatable6 joined
[05:21] *** releasable6 joined
[05:21] *** tellable6 joined
[05:21] *** evalable6 joined
[05:21] *** statisfiable6 joined
[05:21] *** notable6 joined
[05:21] *** coverable6 joined
[05:23] *** cbk joined
[05:39] *** jpn joined
[05:45] *** jpn left
[05:54] *** jpn joined
[06:00] *** reportable6 left
[06:01] *** Guest46 left
[06:02] *** reportable6 joined
[06:22] *** cbk left
[06:39] *** xinming joined
[06:44] *** xinming left
[06:49] *** abraxxa joined
[06:54] *** abraxxa left
[06:54] *** abraxxa joined
[07:08] *** human-blip joined
[07:47] *** razetime left
[07:47] *** razetime joined
[07:53] *** Kaiepi joined
[08:07] *** jpn left
[08:30] *** sena_kun joined
[08:45] *** Sgeo left
[08:48] *** jpn joined
[08:51] *** sena_kun left
[08:53] *** jpn left
[09:09] *** dakkar joined
[09:15] *** xinming joined
[09:21] *** xinming left
[09:26] *** human-blip left
[09:31] *** human-blip joined
[09:53] *** Abhoerschutz left
[09:54] *** Kernspin left
[09:56] *** Abhoerschutz joined
[09:58] *** Kernspin joined
[09:58] *** GreaseMonkey left
[09:59] *** mtj left
[09:59] *** greaser|q joined
[10:07] *** lichtkind_ joined
[10:11] *** mtj joined
[10:24] *** jpn joined
[10:46] *** frost joined
[11:03] <timo> https://raku-advent.blog/2022/12/06/immutable-data-structures-and-reduction-in-raku/ has a "previous entry" link that points to a day 12, and clicking it actually 404s
[11:07] <discord-raku-bot> <Nemokosch> this is a logical consequence of yesterday's events that you can find on this chat
[11:12] *** renormalist left
[11:12] *** renormalist joined
[11:19] *** squashable6 left
[11:21] *** xinming joined
[11:21] *** squashable6 joined
[11:26] *** xinming left
[11:31] *** razetime left
[11:31] *** razetime joined
[11:40] *** xinming joined
[11:46] *** xinming left
[11:46] *** Xliff joined
[11:46] <Xliff> \o
[11:47] <Xliff> Is there a more idomatic way to write this: sub a (&a) { }; a( -> *@a { ... })
[11:55] <discord-raku-bot> <Nemokosch> well, what is this?
[11:57] <Xliff> A sub that takes a Callable (ie a callbacki
[11:58] <Xliff> I'd like that to look closer to the one used by Supply.tap
[12:00] *** reportable6 left
[12:03] <discord-raku-bot> <Nemokosch> what decides the signature?
[12:03] *** reportable6 joined
[12:09] <Kaiepi> i think i forked Raku/advent on raku-community-modules by accident... doesn't belong there, right?
[12:09] <lizmat> no
[12:09] <lizmat> :-)
[12:10] <Kaiepi> ok, gone now
[12:10] <Kaiepi> thakns
[12:10] <Kaiepi> *thanks
[12:10] <discord-raku-bot> <Nemokosch> apropos advent: I think the advent of code repo is quite foggy; it doesn't even match its own instructions
[12:11] <discord-raku-bot> <Nemokosch> it's sad to see there isn't a sole PR for it or anything
[12:12] <discord-raku-bot> <Nemokosch> maybe later on today I could make a PR with some functioning instructions and perhaps a script as well for moving the files to where they belong
[12:12] <discord-raku-bot> <Nemokosch> but then obviously it will be the way I think makes sense
[12:24] *** euandreh joined
[12:31] <Geth> ¬¶ doc: tbrowder++ created pull request #4157: correct grammar
[12:31] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/4157
[12:31] *** xinming joined
[12:37] *** xinming left
[12:47] *** jpn left
[12:50] <Geth> ¬¶ doc: tbrowder++ created pull request #4158: fix cross-reference formats
[12:50] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/4158
[12:57] <Geth> ¬¶ doc: b3cf2ce9be | (Tom Browder)++ | doc/Language/classtut.pod6
[12:58] <Geth> ¬¶ doc: correct grammar
[12:58] <linkable6> Link: https://docs.raku.org/language/classtut
[12:58] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/b3cf2ce9be
[12:58] <Geth> ¬¶ doc: 96fcaf2526 | (Will Coleda)++ (committed using GitHub Web editor) | doc/Language/classtut.pod6
[12:58] <Geth> ¬¶ doc: Merge pull request #4157 from tbrowder/typo
[12:58] <Geth> ¬¶ doc: 
[12:58] <Geth> ¬¶ doc: correct grammar
[12:58] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/96fcaf2526
[13:04] *** jpn joined
[13:38] *** human-blip left
[13:53] <timo> oh i see. wild.
[14:10] *** frost left
[14:17] *** derpydoo joined
[14:22] <Xliff> Is there a more idomatic way to write this: sub a (&a) { }; a( -> *@a { ... })
[14:22] <Xliff> I'd like it so that I can call a() like this: a({ ... })
[14:30] <discord-raku-bot> <Nemokosch> why is everything called a? üòÖ
[14:31] <discord-raku-bot> <Nemokosch> sorry but I really don't get the essence of your question. You can do a({ ... }) without any magic
[14:31] <discord-raku-bot> <Nemokosch> what do you need ->*@a for?
[14:32] <gfldex> m: sub foo(&a:(*@a)) {}; foo({;});
[14:32] <camelia> rakudo-moar d52342eb0: ( no output )
[14:33] <gfldex> m: sub foo(&a:(*@a)) {}; foo({ &?BLOCK.signature.say });
[14:33] <camelia> rakudo-moar d52342eb0: ( no output )
[14:33] <gfldex> m: sub foo(&a:(*@a)) { a(1,2,3) }; foo({ &?BLOCK.signature.say });
[14:33] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´Too many positionals passed; expected 0 or 1 arguments but got 3‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[14:34] <gfldex> Xliff: I'm not sure if it would make sense to make the compiler clever enough to DWIM in this case.
[14:34] <gfldex> m: sub foo(&a:(*@a)) { a |(1,2,3) }; foo({ &?BLOCK.signature.say });
[14:34] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´Too many positionals passed; expected 0 or 1 arguments but got 3‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[14:35] <gfldex> m: sub foo(&a:(*@a)) { a |(1,2,3) }; foo({ dd @^a; &?BLOCK.signature.say });
[14:35] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´Too many positionals passed; expected 1 argument but got 3‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[14:35] <gfldex> m: sub foo(&a:(*@a)) { a $(1,2,3) }; foo({ dd @^a; &?BLOCK.signature.say });
[14:35] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´(1, 2, 3)‚ê§(@a)‚ê§¬ª
[14:35] <gfldex> Xliff: this ^^^ might work
[14:36] <discord-raku-bot> <Nemokosch> why did the slurpy not want to work?
[14:37] <gfldex> Because it's a runtime type constraint not a type hint to be used auto-derive a signature.
[14:41] <discord-raku-bot> <Nemokosch> hmmm, gotcha... I think
[14:43] *** NemokoschKiwi joined
[14:44] <NemokoschKiwi> m: sub foo(&a:($a, $b)) { a |(1, 2) }; foo({ dd $^a, $^b; &?BLOCK.signature.say });
[14:44] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´1‚ê§($a, $b)‚ê§2‚ê§¬ª
[14:45] <discord-raku-bot> <Nemokosch> hm, maybe not
[14:48] <discord-raku-bot> <Nemokosch> the problem was on the side of the block instance, right?
[14:48] <discord-raku-bot> <Nemokosch> that didn't provide the signature to be called by
[14:48] *** NemokoschKiwi left
[14:49] *** jpn left
[14:57] *** jpn joined
[15:01] *** Sgeo joined
[15:12] <discord-raku-bot> <Nemokosch> Do yall think one file slot per person per solution is enough for the repository of solutions?
[15:59] *** jpn left
[16:00] *** jgaz joined
[16:00] *** jpn joined
[16:11] *** xinming joined
[16:14] <[Coke]> how can I stop getting notifications for a github issue that I (shouldn't have) interacted with?
[16:14] <[Coke]> It already shows as not subscribed.
[16:16] * [Coke] tries custom and picking 'reopened' only.
[16:17] *** xinming left
[16:32] <Xliff> Nemokosch: Apparently not in my code. a({ ... }) results in an error.
[16:32] <tellable6> Xliff, I'll pass your message to Nemokosch
[16:37] *** perlbot left
[16:38] <ugexe> [Coke]: i think if you're watching or starred a repo you will see any updates to any issues
[16:38] *** perlbot joined
[16:43] *** euandreh left
[16:48] <[Coke]> I hope the override at the ticket level covers this.
[16:52] *** xinming joined
[17:02] *** jpn left
[17:03] <discord-raku-bot> <Nemokosch> Xliff: consider how you call the callback
[17:04] <discord-raku-bot> <Nemokosch> and also if you want to call everything &a... I don't know if shadowing works well in this case
[17:05] <discord-raku-bot> <Nemokosch> I mean, invoke the callback, and name everything &a - to avoid the ambiguity of "call"
[17:07] *** ToddAndMargo joined
[17:16] *** melezhik joined
[17:16] <melezhik> o/
[17:16] <melezhik> patrickb thanks for binaries !
[17:19] *** melezhik left
[17:29] *** razetime left
[17:29] *** razetime joined
[17:30] *** cbk joined
[17:34] *** dakkar left
[17:48] *** razetime left
[17:57] <[Coke]> m: say $*PERL
[17:57] <camelia> rakudo-moar d52342eb0: OUTPUT: ¬´Raku (6.d)‚ê§¬ª
[17:58] <[Coke]> do we want a ticket to deprecate that?
[17:58] <lizmat> fwiw, I already deprecated it once, but it broke too much code
[17:59] <lizmat> I think it will be deprecated only in 6.e ?
[17:59] <[Coke]> doc site says "Will be deprecated at some point" which honestly seems like the sort of prognostication we should avoid on the docs site.
[17:59] <[Coke]> Shouldn't deprecation not break anything?
[18:00] <lizmat> I forgot the details...  
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:01] <[Coke]> We should be able to deprecate it *in* 6.e preview right now, yes?
[18:01] <[Coke]> We should also have a wiki page for "what's deprecated, when it's getting removed", etc.
[18:02] <[Coke]> will help us keep the docs clear.
[18:02] <[Coke]> That's book-keeping, I can work on that.
[18:03] <discord-raku-bot> <Nemokosch> Coke++
[18:05] <lizmat> agree
[18:07] <Geth> ¬¶ doc: coke self-assigned Track Deprecations https://github.com/Raku/doc/issues/4159
[18:08] <[Coke]> if someone can find me an existing rakudo ticket for $*PERL, I'd appreciate it
[18:08] <[Coke]> searching for "$*PERL" seems to be searching for /perl/
[18:11] <[Coke]> (and create one if one doesn't exist)
[18:16] *** ToddAndMargo left
[18:18] <ugexe> I asked chatgpt to write a raku calculator program and it keeps doing stuff like `my $num1 = =$*IN.get;`
[18:18] <ugexe> i.e. using =$
[18:33] *** melezhik joined
[18:33] <melezhik> if someone is interested in testing their module against fresh 2022.12 rakudo here is an example how to do this in SparrowCI - https://github.com/melezhik/raku-Async-Workers/blob/main/sparrow.yaml#L30
[18:41] *** abhinav joined
[18:43] *** melezhik left
[18:46] *** [Coke] left
[18:48] *** [Coke] joined
[19:22] *** cbk left
[19:28] *** jpn joined
[19:34] *** jpn left
[19:35] *** jpn left
[19:38] *** jgaz left
[19:58] *** abraxxa left
[20:02] *** derpydoo left
[20:31] *** derpydoo joined
[20:32] *** lichtkind_ left
[21:32] *** linkable6 left
[21:32] *** evalable6 left
[21:33] *** linkable6 joined
[21:35] *** evalable6 joined
[21:40] *** segv joined
[21:41] *** greaser|q left
[21:41] *** greaser|q joined
[21:41] *** greaser|q is now known as GreaseMonkey
[21:54] *** segv left
[21:55] *** euandreh joined
[21:59] *** euandreh left
[21:59] *** euandreh joined
[22:00] *** euandreh left
[22:46] *** eseyman left
[22:50] *** eseyman joined
[23:50] *** squashable6 left
[23:50] *** evalable6 left
[23:50] *** unicodable6 left
[23:50] *** nativecallable6 left
[23:50] *** committable6 left
[23:50] *** greppable6 left
[23:50] *** quotable6 left
[23:50] *** linkable6 left
[23:50] *** shareable6 left
[23:50] *** bisectable6 left
[23:50] *** tellable6 left
[23:50] *** notable6 left
[23:50] *** statisfiable6 left
[23:50] *** benchable6 left
[23:50] *** releasable6 left
[23:50] *** reportable6 left
[23:50] *** coverable6 left
[23:50] *** sourceable6 left
[23:50] *** bloatable6 left
[23:51] *** reportable6 joined
[23:51] *** coverable6 joined
[23:51] *** notable6 joined
[23:51] *** tellable6 joined
[23:51] *** shareable6 joined
[23:52] *** statisfiable6 joined
[23:52] *** nativecallable6 joined
[23:52] *** releasable6 joined
[23:52] *** evalable6 joined
[23:52] *** quotable6 joined
[23:52] *** unicodable6 joined
[23:52] *** bisectable6 joined
[23:52] *** benchable6 joined
[23:53] *** squashable6 joined
[23:53] *** greppable6 joined
[23:53] *** committable6 joined
[23:53] *** bloatable6 joined
[23:53] *** sourceable6 joined
[23:54] *** linkable6 joined
