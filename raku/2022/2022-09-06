[00:00] *** vrurg left
[00:02] *** vrurg joined
[00:02] *** GeorgeB joined
[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[00:12] *** GeorgeB left
[00:12] *** kybr left
[00:38] <Geth> ¦ App-Rakubrew/zef-default-branch-rename: 7229cf9bcd | (Nick Logan)++ (committed using GitHub Web editor) | lib/App/Rakubrew/Build.pm
[00:38] <Geth> ¦ App-Rakubrew/zef-default-branch-rename: Update zef default branch to 'main'
[00:38] <Geth> ¦ App-Rakubrew/zef-default-branch-rename: review: https://github.com/Raku/App-Rakubrew/commit/7229cf9bcd
[00:39] <Geth> ¦ App-Rakubrew/zef-update-default-branch: 2048c084c5 | (Nick Logan)++ (committed using GitHub Web editor) | lib/App/Rakubrew/Build.pm
[00:39] <Geth> ¦ App-Rakubrew/zef-update-default-branch: Update zef default branch
[00:39] <Geth> ¦ App-Rakubrew/zef-update-default-branch: review: https://github.com/Raku/App-Rakubrew/commit/2048c084c5
[00:40] <Geth> ¦ App-Rakubrew: ugexe++ created pull request #58: Update zef default branch
[00:40] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/pull/58
[00:55] *** kybr joined
[01:04] *** jgaz joined
[01:05] *** jgaz left
[01:15] *** bigdata joined
[01:28] *** MasterDuke joined
[02:14] *** Heptite left
[02:14] *** Heptite joined
[02:34] *** MasterDuke left
[02:36] *** frost joined
[02:38] *** nebuchadnezzar left
[03:38] *** statisfiable6 left
[03:38] *** notable6 left
[03:38] *** linkable6 left
[03:38] *** squashable6 left
[03:38] *** reportable6 left
[03:38] *** committable6 left
[03:38] *** bisectable6 left
[03:38] *** greppable6 left
[03:38] *** benchable6 left
[03:38] *** releasable6 left
[03:38] *** quotable6 left
[03:38] *** nativecallable6 left
[03:38] *** coverable6 left
[03:38] *** tellable6 left
[03:38] *** evalable6 left
[03:38] *** sourceable6 left
[03:38] *** shareable6 left
[03:38] *** bloatable6 left
[03:38] *** unicodable6 left
[03:39] *** coverable6 joined
[03:39] *** tellable6 joined
[03:39] *** reportable6 joined
[03:40] *** bloatable6 joined
[03:40] *** quotable6 joined
[03:40] *** linkable6 joined
[03:40] *** greppable6 joined
[03:41] *** benchable6 joined
[03:41] *** unicodable6 joined
[03:41] *** committable6 joined
[03:41] *** bisectable6 joined
[03:41] *** nativecallable6 joined
[03:41] *** shareable6 joined
[03:41] *** evalable6 joined
[03:41] *** releasable6 joined
[03:41] *** sourceable6 joined
[03:41] *** statisfiable6 joined
[03:42] *** notable6 joined
[03:42] *** squashable6 joined
[03:44] *** frost left
[03:53] *** Heptite left
[04:53] *** quotable6 left
[04:53] *** bisectable6 left
[04:53] *** sourceable6 left
[04:53] *** committable6 left
[04:53] *** evalable6 left
[04:53] *** squashable6 left
[04:53] *** shareable6 left
[04:53] *** notable6 left
[04:53] *** coverable6 left
[04:53] *** tellable6 left
[04:53] *** linkable6 left
[04:53] *** releasable6 left
[04:53] *** greppable6 left
[04:53] *** nativecallable6 left
[04:53] *** statisfiable6 left
[04:53] *** bloatable6 left
[04:53] *** benchable6 left
[04:53] *** reportable6 left
[04:53] *** unicodable6 left
[04:54] *** squashable6 joined
[04:54] *** linkable6 joined
[04:54] *** committable6 joined
[04:54] *** greppable6 joined
[04:54] *** nativecallable6 joined
[04:54] *** coverable6 joined
[04:55] *** benchable6 joined
[04:55] *** unicodable6 joined
[04:55] *** reportable6 joined
[04:55] *** bloatable6 joined
[04:55] *** sourceable6 joined
[04:55] *** evalable6 joined
[04:55] *** statisfiable6 joined
[04:55] *** bisectable6 joined
[04:55] *** Sgeo left
[04:56] *** shareable6 joined
[04:56] *** quotable6 joined
[04:56] *** releasable6 joined
[04:56] *** notable6 joined
[04:56] *** tellable6 joined
[05:56] *** nativecallable6 left
[05:56] *** benchable6 left
[05:56] *** committable6 left
[05:56] *** bisectable6 left
[05:56] *** bloatable6 left
[05:56] *** tellable6 left
[05:56] *** coverable6 left
[05:56] *** reportable6 left
[05:56] *** evalable6 left
[05:56] *** unicodable6 left
[05:56] *** quotable6 left
[05:56] *** linkable6 left
[05:56] *** squashable6 left
[05:56] *** shareable6 left
[05:56] *** statisfiable6 left
[05:56] *** notable6 left
[05:56] *** greppable6 left
[05:56] *** sourceable6 left
[05:56] *** releasable6 left
[05:57] *** committable6 joined
[05:57] *** greppable6 joined
[05:57] *** reportable6 joined
[05:57] *** nativecallable6 joined
[05:58] *** linkable6 joined
[05:58] *** unicodable6 joined
[05:58] *** squashable6 joined
[05:58] *** benchable6 joined
[05:58] *** bisectable6 joined
[05:58] *** statisfiable6 joined
[05:58] *** releasable6 joined
[05:58] *** coverable6 joined
[05:59] *** evalable6 joined
[05:59] *** shareable6 joined
[05:59] *** bloatable6 joined
[05:59] *** sourceable6 joined
[05:59] *** tellable6 joined
[06:00] *** notable6 joined
[06:00] *** quotable6 joined
[06:07] *** reportable6 left
[06:10] *** reportable6 joined
[06:17] *** oodani_ left
[06:19] *** kjp joined
[06:20] *** oodani joined
[06:23] *** Zero_Dogg joined
[06:40] <discord-raku-bot> <Nemokosch> Guys, not all nonsense needs to be taken into account...
[06:44] <discord-raku-bot> <Nemokosch> it would be nonsense even if it was really about master and slave (who cares if a device is called a slave), but in itself, "master" comes from Latin "magister" which meant teacher, and craft guilds were lead by masters
[06:46] <discord-raku-bot> <Nemokosch> in that context, the complement of "master" is "apprentice"
[06:46] <discord-raku-bot> <Nemokosch> anyway, hopefully you don't need to be told this
[06:47] *** abraxxa joined
[06:51] *** abraxxa left
[06:51] *** abraxxa joined
[06:58] <japhb> Nemokosch: I'm not sure what the context is for your last four messages (they seem to be a bit out of nowhere), but please *do not* attempt to reopen disucssions about the appropriateness of master and slave in computer science contexts.
[06:58] <tellable6> japhb, I'll pass your message to Nemokosch
[07:00] <Voldenet> probably the context is recent commit > Update zef default branch to 'main'
[07:00] <discord-raku-bot> <Nemokosch> japhb: that's easy to achieve - distance yourself with the America-centric, radical barbars who created these discussions in the first place
[07:00] <discord-raku-bot> <Nemokosch> that's not a tall order
[07:01] <Voldenet> but the reason for changing is quite practical
[07:02] <Voldenet> when tools start using main instead of master by default, you just change branch names so tools still work
[07:02] <discord-raku-bot> <Nemokosch> however, the reason tools started using main instead of master, is quite political
[07:02] <discord-raku-bot> <Nemokosch> and in this case as well, it wasn't tools changing on their own
[07:03] <Voldenet> Sure, but are you going to fight authors of tools now?
[07:03] <discord-raku-bot> <Nemokosch> I mean... yes?
[07:03] <japhb> I'm asking you, please don't.
[07:03] <Voldenet> …I think there's better use for your time :)
[07:04] <discord-raku-bot> <Nemokosch> If the alternative is radicals winning without fight, then there is no question
[07:04] <discord-raku-bot> <Nemokosch> There is better use for their time as well, don't you think
[07:04] <Voldenet> it could be called "kitten" for all I care
[07:05] <discord-raku-bot> <Nemokosch> it could, or it could have been called "main" in the first place, that's not the thing
[07:05] <japhb> Nemokosch: If you *must* fight that fight -- do it somewhere else.  NOT HERE.
[07:05] <tellable6> japhb, I'll pass your message to Nemokosch
[07:06] <discord-raku-bot> <Nemokosch> the thing is to not just blindlessly adapt to these idiotic radicals who just want to create friction by deliberately trying to divide us over irrelevant shit
[07:07] <japhb> Nemokosch: STOP.  TAKE THIS ELSEWHERE.
[07:07] <tellable6> japhb, I'll pass your message to Nemokosch
[07:07] <discord-raku-bot> <Nemokosch> we do know well that they don't stop at renaming the "master" brainch to "main", they intervene in all segments of life
[07:07] <japhb> #raku is not the right place for this.
[07:07] <discord-raku-bot> <Nemokosch> DISTANCE YOURSELF FROM THEM.
[07:07] <Voldenet> iirc github decided that first, so if you want to fight, do that on #github
[07:08] <discord-raku-bot> <Nemokosch> I said "don't need to adapt to them", that was a fair and relevant statement I guess
[07:08] <discord-raku-bot> <Nemokosch> and this is the most one can do
[07:11] <discord-raku-bot> <Nemokosch> and it's degradatory as hell that somebody already finds it more important to shut up this opinion (which isn't even "opening a discussion") than to distance from the political voluntarists making these calls
[07:12] <Voldenet> btw, rakudo uses "master" branch everywhere
[07:13] <discord-raku-bot> <Nemokosch> I know.
[07:14] <japhb> Nemokosch: Is there a reason you have not taken this argument elsewhere?  I'm asking you not to have that argument *here*.
[07:14] <tellable6> japhb, I'll pass your message to Nemokosch
[07:15] <discord-raku-bot> <Nemokosch> The reason is that this is the affected community. Do you know another place within the community where this can be discussed?
[07:16] <japhb> This is *an* affected community, not *the* affected community.  The discussion is much larger than anything having to do with Raku.
[07:19] <discord-raku-bot> <Nemokosch> I don't think this of all things can be decided top-down. It's not all-or-nothing. If zef of all things is moving over to main when there was no practical need for that, that's within the community. It's not a demand from anyone.
[07:20] <japhb> And you're not the maintainer of zef.  So it's not really your business, to be frank.
[07:20] <Voldenet> ^
[07:21] <discord-raku-bot> <Nemokosch> I'm not anyone else than myself so you could have said that I don't have a say in anything
[07:21] <discord-raku-bot> <Nemokosch> Either way, zef is not a private thing, quite the contrary, so it is indeed all of our business either way
[07:23] <discord-raku-bot> <Nemokosch> So yes, it is perfectly justified to at least say "you guys surely know better than to blindlessly adapt to whatever nonsense radicals shove onto you"
[07:24] <japhb> Nemokosch: You have made your point.  Now please STOP and take your rant elsewhere.
[07:24] <tellable6> japhb, I'll pass your message to Nemokosch
[07:25] <discord-raku-bot> <Nemokosch> japhb: the damage has been done by you proving that your main concern is to silence and invalidate what I think would be important to also represent
[07:26] <japhb> You have the entire rest of the internet to state your case.  Take it somewhere else, is all I'm asking.
[07:27] <japhb> And to be frank, you've gone way past dog whistling into active attack of another channel member (me), so for the love of sunshine, PLEASE STOP.
[07:27] <discord-raku-bot> <Nemokosch> You didn't have to say this, though. You didn't have to try to invalidate the point. Because now what you did is much like security guard business for the very worst kind of people.
[07:28] <abraxxa> Nemokosch: I hate that change too and didn't make it in my projects because it's just a waste of time. But if someone else does it I notice it and go on. In this case you can talk to the person who did the change, it's not that he asked for permission here.
[07:28] <tellable6> abraxxa, I'll pass your message to Nemokosch
[07:29] <japhb> I haven't either validated or invalidated your point, I just asked you not to have that argument in the #raku* channels on libera.chat IRC.
[07:29] <discord-raku-bot> <Nemokosch> So you try to silence me and then talk about how I attacked you? HOLD YOUR HORSES
[07:29] <discord-raku-bot> <Nemokosch> You attacked me the whole time
[07:30] <Voldenet> I was going to write something wise here, but the whole issue is a waste of everyone's time and there's no point debating it
[07:31] <discord-raku-bot> <Nemokosch> I asked you where else I can address the members of the very same community. If you ask me to just stay silent in the community that I want to address, that is an attempt to silence me, right?
[07:31] <Voldenet> …isn't there zef irc channel?
[07:33] <discord-raku-bot> <Nemokosch> abraxxa: I'm not demanding you to enthusiastically take on this trend, please don't expect me to stay silent, in return
[07:35] <discord-raku-bot> <Nemokosch> The thing you guys were getting wrong is that I demanded some sort of ultimate resolution or any reaction at all. No. I just shared some factually true information and my judgement attached, because I don't think it's represented enough here. That's all.
[07:35] <discord-raku-bot> <Nemokosch> "Take this elsewhere" was the worst possible reaction to that in my view; defeating the whole purpose I wrote it down.
[07:37] <japhb> It's not represented here, because the rest of us *ARE SICK OF DISCUSSING IT*.
[07:37] <japhb> It has been discussed to death.
[07:37] <japhb> It does not need more discussion.
[07:38] <japhb> If you feel the need to keep fighting a battle that is already over, that's being a pest.
[07:38] <japhb> Please stop being a pest.
[07:38] <japhb> If you insist on being a pest, please do it to someone else.
[07:38] <japhb> I prefer my picnics without mosquitos, thank you.
[07:39] <discord-raku-bot> <Nemokosch> I also asked you to at least distance yourself from the agenda to intervene in everything in the name of some bigger justice, that would have been enough.
[07:39] <discord-raku-bot> <Nemokosch> Also, as I said, it was not "discussing", just being able to represent a view that very apparently doesn't triumph
[07:40] <japhb> Let me see if I can explain this in terms you might understand:  YOU ARE TALKING OVER THE MOVIE.  DON'T TALK OVER THE MOVIE.
[07:41] <japhb> Political discussions absolutely have their place in society.  I'm not at all arguing that.  I'm asking you to just let this go.
[07:41] <discord-raku-bot> <Nemokosch> If neither of this is valid or important enough to not aggressively destroy the message, then indeed, YOU ARE SABOTAGING
[07:41] <japhb> Now, I'm going to stop, because god help you if you don't get the last word in.  GO AHEAD.  YOU KNOW YOU WANT TO.
[07:42] <discord-raku-bot> <Nemokosch> YOU SHOULDN'T HAVE HAD A WORD IN THE FIRST PLACE BECAUSE YOU HAD NOTHING TO SAY.
[07:42] <discord-raku-bot> <Nemokosch> Thank you.
[07:44] <discord-raku-bot> <Nemokosch> And now that this wasted effort is over, let me freaking paste the original "forbidden" commentary here, so that it isn't aggressively blown away.
[07:46] <discord-raku-bot> <Nemokosch> > Re: zef 'master' to 'main' - Guys, not all nonsense needs to be taken into account... it would be nonsense even if it was really about master and slave (who cares if a device is called a slave), but in itself, "master" comes from Latin "magister" which meant teacher, and craft guilds were lead by masters. in that context, the complement of "master" is "apprentice". anyway, hopefully you don't need to be told th
[07:47] <lizmat> Nemokosch: whatever people call their default branch, is their prerogative
[07:47] <tellable6> lizmat, I'll pass your message to Nemokosch
[07:48] <abraxxa> Nemokosch: thanks, but I think everybody that has given attention to this change, knows this already
[07:48] <tellable6> abraxxa, I'll pass your message to Nemokosch
[07:48] <lizmat> also, this channel is not just for "Guys"
[07:48] <discord-raku-bot> <Nemokosch> lizmat: sure but you can "educate" people back and forth
[07:49] <lizmat> Nemokosch: please choose your battles wisely
[07:49] <tellable6> lizmat, I'll pass your message to Nemokosch
[07:49] <abraxxa> I'm no native speaker, but isn't 'guys' gender neutral as in 'friends'?
[07:50] <lizmat> and this particular battle does not need to be fought on any of the #raku channels
[07:50] <discord-raku-bot> <Nemokosch> then who is it for...
[07:50] <discord-raku-bot> <Nemokosch> Damn I really hope this wasn't meant to be a troll remark
[07:50] <Voldenet> eh, better fight that battle about Nil being valid return value for defined values
[07:50] <Voldenet> i liked that one better
[07:54] <japhb> abraxxa: Varies by community.  "Folks" is considered more consistently gender-neutral, I believe.
[07:54] <discord-raku-bot> <Nemokosch> They aren't mutually exclusive :p
[07:55] <abraxxa> japhb: haven't used that, thanks
[07:56] <discord-raku-bot> <Nemokosch> _we don't care about the young folks, talkin bout the young style_ 🎶
[07:57] <discord-raku-bot> <Nemokosch> be it "folks", then. If things could be solved once and for all by changing two words, I'd be the happiest
[07:57] <lizmat> Nemokosch: it's a lot more difficult for girls to be one of the "guys" then it is for boys
[07:57] <tellable6> lizmat, I'll pass your message to Nemokosch
[07:58] <lizmat> we want to be inclusive in the Raku community, so please consider your words
[07:58] <lizmat> and if someone on the channel to please stop a specific discussion, because it has already been discussed to death and people have moved on
[07:58] <lizmat> then please listen
[08:00] <Altreus> How do I change the contents of an XML::Text node? :/
[08:00] <lizmat> Altreus: aren't those supposed to be immutable ?
[08:00] <discord-raku-bot> <Nemokosch> it was rather an aggressive attempt to blow a certain view away
[08:00] <Altreus> Maybe I use a different lib
[08:00] <discord-raku-bot> <Nemokosch> so on this we won't agree I'm afraid
[08:00] <Altreus> lizmat: well maybe, but I just need to increment a number in the XML and this is torturous
[08:01] <Altreus> don't really see why anything should be immutable in a document I'm altering :P
[08:01] <lizmat> Altreus: fair enough
[08:01] <Altreus> My last attempt managed to replace the number with 1/>
[08:01] <Altreus> Quite how that happened I do not know
[08:02] <discord-raku-bot> <Nemokosch> Altreus: is this the famous/infamous XML module?
[08:02] <Altreus> yeah I expect it is
[08:02] <lizmat> Nemokosch: no, this was not about blowing a view away, this was about you being a pain on the channel
[08:02] <tellable6> lizmat, I'll pass your message to Nemokosch
[08:02] <Altreus> I was just looking at this LibXML module that exists
[08:03] <lizmat> You should consider the channel as a public place where people meet for various reasons
[08:03] <Altreus> has anyone written an XML module that isn't a low-level pain? :D
[08:04] <lizmat> and if the other people tell you to take your discussion elsewhere, you should at some point
[08:04] <Altreus> LibXML is, at least, mutable
[08:04] <lizmat> .oO( XML is a low level pain )
[08:04] <discord-raku-bot> <Nemokosch> lizmat: then let me be the pain of those people who would earlier silence a view than distance themselves from radicals
[08:04] <discord-raku-bot> <Nemokosch> and I'm definitely not okay with the thought that I should jut let the whole community fall to the most radical of them all
[08:05] <discord-raku-bot> <Nemokosch> these people are willing to cause pain to me, while doing a lot of damage on the greater scale. If I need to pay some of that pain back, so be it.
[08:05] <lizmat> Nemokosch: and I'm not ok with you dragging this discussion on
[08:05] <tellable6> lizmat, I'll pass your message to Nemokosch
[08:05] <lizmat> Nemokosch: if you would be on IRC, you would now have been kicked off the channel to consider your words
[08:05] <tellable6> lizmat, I'll pass your message to Nemokosch
[08:06] <lizmat> Nemokosch: if you continue this nonetheless, I will have no other option than go kick the discord bot from the channel
[08:06] <tellable6> lizmat, I'll pass your message to Nemokosch
[08:06] <discord-raku-bot> <Nemokosch> This discussion never came to be, there just was an attempt to blow away what I said with a _full stop_
[08:06] <discord-raku-bot> <Nemokosch> lizmat: then it's time for you to consider your words about inclusivity
[08:07] <Altreus> lizmat: +1 to that. XML is a pain in the arse exascerbated by XML manipulation libraries
[08:07] *** ChanServ sets mode: +o lizmat
[08:07] <Altreus> What's the Raku equivalent of Mojo::DOM?
[08:08] <discord-raku-bot> <Nemokosch> also I wanted to ask Altreus: is the XML module as much a resource freak as the open issue suggests?
[08:14] <lizmat> Altreus: I wouldn't know  :-(
[08:16] *** sena_kun joined
[08:16] <Altreus> I dunno, the script doesn't take very long
[08:17] <discord-raku-bot> <Nemokosch> I remember the HTML::Tag anomaly, honestly I still don't know what made it magnitudes faster all of a sudden
[08:28] *** lizmat changes topic to: 🦋 Welcome to the MAIN() IRC channel of the Raku Programming Language (https://raku.org). Log available at https://irclogs.raku.org/raku/live.html .  If you're a beginner, you can also check out the #raku-beginner channel!
[08:39] *** frost joined
[08:48] <Altreus> also XML bitches when you give it an IO::Path as a filename
[08:48] <Altreus> type checking is great as long as people use appropriate types
[08:52] <lizmat> make a PR for XML to include a Str() at the right place :-)
[08:56] *** ChanServ sets mode: -o lizmat
[08:56] <discord-raku-bot> <Nemokosch> It might be better the other way around, or at least more consistent with the builtins
[08:56] <discord-raku-bot> <Nemokosch> I think those typically coerce to IO
[08:56] <discord-raku-bot> <Nemokosch> What I also like about that is that it makes the semantics clearer
[08:57] <Altreus> But I'm using LibXML now :D
[08:57] <Altreus> you're right, I should at least feed back
[08:58] <discord-raku-bot> <Nemokosch> what are you working on, if it's public
[09:02] <Altreus> It's just a quick script I wrote to handle thumbnails for my videos
[09:03] <Altreus> They're inkscape SVGs so it just finds the episode number and ++
[09:03] <Altreus> It was fine as string manipulation, but I used to have thumbnails where I'd use a screenshot from the video, so I'm trying to do that again
[09:04] <Altreus> It's quite easy to regex a \d+ after an id is discovered; it's harder to replace two attributes of a tag with a given ID, so now I'm knee-deep in the XML quagmire trying to do a simple operation :D
[09:05] *** jaguart joined
[09:05] <Altreus> I don't wanna be the person who owns the JFDI XML library for raku but at this rate I'm going to be
[09:05] <Altreus> actually XML::JFDI is the perfect name
[09:07] <discord-raku-bot> <Nemokosch> what does JFDI mean?
[09:07] <Altreus> just do it
[09:08] <lizmat> F**ing
[09:08] <lizmat> afk&
[09:08] <discord-raku-bot> <Nemokosch> 🤣
[09:08] <discord-raku-bot> <Nemokosch> ~~F to the ing~~
[09:09] <Altreus> I like to omit F from such responses, as an exercise to the reader
[09:14] <discord-raku-bot> <Nemokosch> there should be a querySelectorAll for XML 😄
[09:16] <Altreus> there is, it's yet another layer of obfuscation called xpath
[09:20] *** nebuchadnezzar joined
[09:21] <discord-raku-bot> <Nemokosch> huh, good to know
[09:37] <Voldenet> XPath can also select attributes and handle xml namespaces, querySelectorAll… wasn't designed with this in mind
[09:39] <discord-raku-bot> <Nemokosch> it wouldn't even make sense
[09:43] <Altreus> Man I always get tripped over basic stuff in Raku
[09:43] <Altreus> You'd think once I have a handle on a text node I could use it as text without having to jump through hoops
[09:44] <Altreus> Stringifying it, surely, should be a thing
[09:53] <Altreus> yeah! finally it works :D
[09:58] <El_Che> Altreus: why do you hate hoops
[09:58] <El_Che> healthy
[10:06] <discord-raku-bot> <Nemokosch> isn't this mostly about the library itself?
[10:08] <Voldenet> very likely, I remember using pQuery in perl5 (which only supports html) a few years ago and suddenly html stopped being pain
[10:09] <Altreus> Well I mean ... yeah, but also it's every damn XML library in every language until someone comes along and writes Mojo::DOM again
[10:10] <Altreus> But I do often run into typing issues with raku, and normally the error message is quite unhelpful
[10:10] <Altreus> I still have trouble parsing the words "Int type object" as a "type object" noun phrase, not an "Int type" adjective phrase
[10:11] <Altreus> my brain does not like the grammar :D
[10:20] *** evalable6 left
[10:20] *** linkable6 left
[10:21] *** linkable6 joined
[10:22] <discord-raku-bot> <Nemokosch> let's write Int.Int instead? 😛
[10:22] *** evalable6 joined
[10:23] <discord-raku-bot> <Nemokosch> by the way...
[10:23] <discord-raku-bot> <Nemokosch> Int.Int actually works and returns the type object, however Int.Numeric throws an error
[10:24] <Altreus> It does seem like a contradiction, in a sense
[10:25] <Altreus> Use of uninitialized value of type Int in numeric context
[10:25] <Altreus> Is an "uninitialized value of type Int" the same as an "Int type object"? The former phrasing is *way* clearer
[10:27] <discord-raku-bot> <Nemokosch> it happens to be the same thing. Think of it as one cowboy wearing two different hats at once
[10:29] <discord-raku-bot> <Nemokosch> another interesting thing coming up:
[10:30] <discord-raku-bot> <Nemokosch> well it wouldn't load, anyway
[10:31] *** Nemokosch joined
[10:31] <Nemokosch> m: my Int $origin; my Numeric $nversion = $origin; my Real $rversion = $origin; dd $origin, $nversion, $rversion;
[10:31] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «Int $origin = Int␤Int $nversion = Int␤Int $rversion = Int␤»
[10:31] <discord-raku-bot> <Nemokosch> my Int $origin; my Numeric $nversion = $origin; my Real $rversion = $origin;
[10:31] <tellable6> 2022-09-05T17:28:32Z #raku <lizmat> Nemokosch: no, it's me who missed adding .htm and .html in a #html group
[10:31] <tellable6> 2022-09-06T07:05:37Z #raku <japhb> Nemokosch: If you *must* fight that fight -- do it somewhere else.  NOT HERE.
[10:31] <tellable6> 2022-09-06T07:07:11Z #raku <japhb> Nemokosch: STOP.  TAKE THIS ELSEWHERE.
[10:31] <tellable6> 2022-09-06T07:14:36Z #raku <japhb> Nemokosch: Is there a reason you have not taken this argument elsewhere?  I'm asking you not to have that argument *here*.
[10:31] <discord-raku-bot> <Nemokosch> after doing this, they will all store the Int type object...
[10:31] <tellable6> hey Nemokosch, you have a message: https://gist.github.com/bd885840c3cd347345b72011ea314c6c
[10:31] <tellable6> 2022-09-06T07:24:16Z #raku <japhb> Nemokosch: You have made your point.  Now please STOP and take your rant elsewhere.
[10:31] <tellable6> 2022-09-06T07:47:55Z #raku <lizmat> Nemokosch: whatever people call their default branch, is their prerogative
[10:31] <tellable6> 2022-09-06T07:48:16Z #raku <abraxxa> Nemokosch: thanks, but I think everybody that has given attention to this change, knows this already
[10:31] <tellable6> hey Nemokosch, you have a message: https://gist.github.com/7257894329b881ff35536e36ac69b55c
[10:31] <tellable6> 2022-09-06T07:49:14Z #raku <lizmat> Nemokosch: please choose your battles wisely
[10:31] <tellable6> 2022-09-06T07:57:43Z #raku <lizmat> Nemokosch: it's a lot more difficult for girls to be one of the "guys" then it is for boys
[10:31] <tellable6> 2022-09-06T08:02:56Z #raku <lizmat> Nemokosch: no, this was not about blowing a view away, this was about you being a pain on the channel
[10:32] <Nemokosch> that was gonna happen, sorry...
[10:32] <Nemokosch> m: my Int $origin; my Numeric $nversion = $origin; my Real $rversion = $origin; dd $origin, $nversion, $rversion;
[10:32] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «Int $origin = Int␤Int $nversion = Int␤Int $rversion = Int␤»
[10:32] *** Nemokosch left
[10:33] <discord-raku-bot> <Nemokosch> so yeah
[10:35] <discord-raku-bot> <Nemokosch> Int implicitly fits into Numeric and even Real, however, "explicitly" (calling the methods) it doesn't seem to
[10:38] <discord-raku-bot> <altreus™> I'mma respond here so I don't make tellable spam you :P
[10:39] <discord-raku-bot> <Nemokosch> Feels like this is issue-worthy imo
[10:39] <discord-raku-bot> <altreus™> I guess the idea of asking a type object for a type object of a different type, even though they're related, is silly
[10:39] <discord-raku-bot> <altreus™> Then again, maybe it's $var.Numeric ...
[10:40] <discord-raku-bot> <altreus™> I really like the "null object" pattern but it does seem to have its pitfalls
[10:40] <discord-raku-bot> <Nemokosch> this is another case where I think the lack of consistency is the problem, not one behavior or the other
[10:42] <discord-raku-bot> <altreus™> It has been my experience of raku that there are consistency issues
[10:42] <discord-raku-bot> <Nemokosch> if (Int) can be assigned to a Numeric or Real variable, it should be able to at least return itself when trying to coerce them
[10:42] <discord-raku-bot> <Nemokosch> *coerce to them
[10:46] <discord-raku-bot> <Nemokosch> I don't even know which candidate is called when doing Int.Int, but it's definitely not a method of Int itself
[10:46] <discord-raku-bot> <Nemokosch> the true irony would be if it took the Int method straight from Real
[10:48] <discord-raku-bot> <altreus™> I think raku can tell you that, no?
[10:50] <discord-raku-bot> <Nemokosch> perhaps it can, I just don't know how 😅
[10:57] <discord-raku-bot> <Nemokosch> waiit
[10:57] <discord-raku-bot> <Nemokosch> Real.Real also doesn't work
[11:06] *** grondilu joined
[11:06] <grondilu> Hi all
[11:07] <grondilu> if I have a Blob made with literals, can I expect it to be compiled before runtime or do I have to explicitely use BEGIN or constant $ = ?
[11:11] <grondilu> as in, is it useful to write `constant $ = Blob.new: ^10;` instead of just `Blob.new: ^10` ?  `^10` is just an exemple here, I have in mind a case where it would rather be a long list of literals.
[11:13] <discord-raku-bot> <Nemokosch> https://docs.raku.org/language/variables#index-entry-constant_(Prefix)
[11:13] <discord-raku-bot> <Nemokosch> seems to me the answer is positive, in all senses 🙂
[11:15] <discord-raku-bot> <Nemokosch> From what I see, constant cannot even be added if the expression can _not_ be evaluated at compile time
[11:23] *** Nemokosch joined
[11:23] *** Nemokosch left
[11:28] <grondilu> I get that using `constant` can be useful, but is it necessary considering the optimizer might very well compile any expression that will clearly not change.
[11:28] <grondilu> such as a Blob made from literal values.
[11:29] <Altreus> Presumably the idea is not about what the compiler does but what it (or the runtime) allows you to do with the resulting variable
[11:31] <discord-raku-bot> <Nemokosch> oops, misread the question
[11:31] <grondilu> I do worry about what the compiler does as my concern is performance here
[11:32] <discord-raku-bot> <Nemokosch> I thought it was whether `constant` does guarantee compile time execution
[11:34] <discord-raku-bot> <Nemokosch> grondilu: I did a little benchmark
[11:35] <discord-raku-bot> <Nemokosch> raku --profile -e 'constant $ = Blob.new: ^10' 
[11:35] <discord-raku-bot> <Nemokosch> versus
[11:35] <discord-raku-bot> <Nemokosch> raku --profile -e 'Blob.new: ^10'
[11:36] <discord-raku-bot> <Nemokosch> it was radically faster with constant
[11:37] <discord-raku-bot> <Nemokosch> executing code: 10ms vs 80ms, 1640 call frames vs 21805 call frames...
[11:37] <discord-raku-bot> <Nemokosch> on MoarVM 2022.04
[11:38] *** Nemokosch joined
[11:39] *** Nemokosch left
[11:39] <CIAvash> Altreus: https://raku.land/cpan:HANENKAMP/DOM::Tiny ?
[11:41] <grondilu> Nemokosch:  noted
[11:41] <tellable6> grondilu, I'll pass your message to Nemokosch
[11:42] <Altreus> CIAvash: yeah! Nice!
[11:43] <Altreus> This looks like the Mojo::DOM interface as well
[11:44] <Altreus> > This module started as a port of Mojo::DOM58 from Perl 5
[11:44] <Altreus> well there we are then :D
[11:54] *** grondilu left
[12:05] *** reportable6 left
[12:09] *** reportable6 joined
[12:38] <rypervenche> Welp, it looks like I'm coming back to Raku to make it my scripting language. Rust has been amazing, but for the quicker things and the regexes *drool*, I haven't found a language that pleases me like Raku did.
[12:58] <discord-raku-bot> <Nemokosch> gee gee
[12:58] <discord-raku-bot> <Nemokosch> ~~come back to Hungarian~~
[13:09] *** evalable6 left
[13:09] *** linkable6 left
[13:11] *** linkable6 joined
[13:11] *** evalable6 joined
[13:16] *** archenoth joined
[13:35] <Altreus> I cannot for the life of me figure out how to replace a text node using DOM::Tiny
[13:35] <Altreus> I can't even figure out how to *get* a text node if I don't know how deep it is
[13:36] <Altreus> And this looks, to me, like I'm supposed to go $parent.text = 'new text', but it doesn't work https://github.com/zostay/raku-DOM-Tiny/blob/master/lib/DOM/Tiny/HTML.pm6#L277
[13:36] <Altreus> It says it's immutable
[13:40] <Altreus> I can .replace(3) on the text node
[13:40] <Altreus> where 3 is the new text
[13:40] *** frost left
[14:06] *** bigdata left
[14:26] *** vasko left
[14:44] *** samcv left
[14:44] *** samcv joined
[14:47] *** Heptite joined
[14:53] *** abraxxa left
[14:54] *** reol joined
[15:10] <reol> is the following code supposed to compile and run without complaints (note: no buf8.new)? my buf8 $x; $x.write-uint16(0,1);
[15:30] <[Coke]> new isn't needed on native types (lower case type names)
[15:31] <[Coke]> ... in general, but doesn't matter for Buf either:
[15:31] <reol> ok. but what is $x.write-uint16(0,1); doing then?
[15:31] <[Coke]> m: my Buf $y; $y.write-uint16(0,1)
[15:31] <camelia> rakudo-moar 7342d9dc2: ( no output )
[15:33] <[Coke]> in both cases, by the time you call .write-uint16, you have an un-initialized Buf to work with
[15:33] <[Coke]> (calling methods on natives upscales them to objects)
[15:34] <reol> it doesn't seem to work that way. because $x,elems is not updated by the write
[15:35] <reol> unless you call buf8.new
[15:37] <[Coke]> maybe the write doesn't fail on an unit version but should.
[15:37] <[Coke]> *un-init'd*
[15:38] <[Coke]> you don't need the native version to see this behavior:
[15:38] <reol> it is quite confusing for a raku beginner. i've literally no idea what is going on with so many things. like why does $x.elems even return 1 or why $x.bytes isn't defined and so on :)
[15:39] <[Coke]> m: my Buf $y; say $y.elems; $y.write-uint16(0,1); say $y.elems
[15:39] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «1␤1␤»
[15:39] <[Coke]> m: my Buf $y = Buf.new; say $y.elems; $y.write-uint16(0,1); say $y.elems
[15:39] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «0␤2␤»
[15:40] <[Coke]> also Buf is a role, not a class.
[15:40] <[Coke]> yes, this seems buggy to me, might be worth a ticket.
[15:43] <reol> the behavour is as expected if the object is constructed by buf8.new(), but without construction it silently produces garbage like .elems returning 1
[15:44] *** simcop2387 left
[15:44] <discord-raku-bot> <Nemokosch> .elems is a method of _lists_ though, right?
[15:44] *** perlbot left
[15:45] *** perlbot joined
[15:46] <discord-raku-bot> <Nemokosch> I don't know by heart but it's quite possible that it just isn't meant to be used for what you are trying to use it
[15:46] <reol> the docs say (Bob) method elems
[15:46] *** simcop2387 joined
[15:46] <discord-raku-bot> <Nemokosch> it says Blob:D though
[15:46] <discord-raku-bot> <Nemokosch> where D stands for DEFINITE iirc
[15:46] <reol> Maybe. but i'm just following https://docs.raku.org/type/Buf
[15:48] <discord-raku-bot> <Nemokosch> so when you don't initialize it, you won't get that call - you will access the Any call, which converts to a list
[15:48] <discord-raku-bot> <Nemokosch> and here we arrive to something I have already complained about: even not DEFINITE values turn into one element lists containing them
[15:48] <discord-raku-bot> <Nemokosch> This is not a "bug" but definitely not a feature either, if you ask me...
[15:49] <reol> I forgot to initialize with buf8.new(). It is not intentional! But the compiler should generate an exception
[15:50] <reol> I though that is what is enforced by "method write-uint16(buf8:D:". 
[15:52] <discord-raku-bot> <Nemokosch> https://docs.raku.org/routine/write-int16
[15:52] <discord-raku-bot> <Nemokosch> looks like if you start writing it, it can return an instance out of thin air?
[15:53] <discord-raku-bot> <Nemokosch> the bottom definition
[15:53] <reol> i will try
[15:54] <reol> it returns a new instance 
[15:54] <reol> this is crazy
[15:54] <reol> hard to detect
[15:58] <discord-raku-bot> <Nemokosch> where did you hit problems?
[15:59] <reol> I just forgot to initialize an object of type buf8 with buf8.new. the program runs though :)
[16:00] <reol> now it is clear that every write-uint16() produced a new instance that went straight to the garbage collector
[16:03] *** sena_kun left
[16:03] *** sena_kun joined
[16:04] <discord-raku-bot> <Nemokosch> what was the write-uint16 for?
[16:05] <reol> I'm implementing an RPC protocol just to learn a bit of raku
[16:10] <discord-raku-bot> <Nemokosch> tricky
[16:12] <reol> Now I read more of the API docs and the little problem I had is definitely intended behaviour. Thank you for helping out.
[16:14] <discord-raku-bot> <Nemokosch> 🍬
[16:18] *** discord-raku-bot left
[16:18] *** discord-raku-bot joined
[16:37] *** clarjon1 joined
[16:56] *** discord-raku-bot left
[16:57] *** discord-raku-bot joined
[17:44] *** TieUpYourCamel left
[17:51] *** TieUpYourCamel joined
[18:05] *** reportable6 left
[18:07] *** epony left
[18:07] *** reportable6 joined
[18:26] *** epony joined
[18:34] <reol> Does anyone know how the argument evaluation order in raku is defined?
[18:37] <tonyo> what're you trying to figure out?
[18:37] <tonyo> or, what behavior, specifically
[18:38] <reol> eval order for f(a(),b())
[18:38] <ugexe> m: sub foo($a = say(1); $b = say(2)) { }()
[18:38] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «1␤2␤»
[18:38] <reol> i found that comma has list associativity but i don't know what that means.
[18:40] *** Kaiepi left
[18:40] <discord-raku-bot> <Nemokosch> or anyway, it would lead to your question
[18:40] <discord-raku-bot> <Nemokosch> because it basically means that the arguments of the operator chain are taken as one list and passed to one function call
[18:41] <tonyo> lists should be ordered, iirc argument evaulation does not race so b() shouldn't ever precede a()
[18:41] <tonyo> m: sub foo($a, $b) { $a.say; $b.say; }(say(1), say(2));
[18:41] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «1␤2␤True␤True␤»
[18:43] <tonyo> that may be untrue on colon pairs, though
[18:44] <tonyo> m: sub foo(:$b, :$a) { $a.say; $b.say; }( a => say('a'), b => say('b') && False );
[18:44] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «a␤b␤True␤False␤»
[18:46] <tonyo> this appears to be where that would be happening https://github.com/rakudo/rakudo/blob/master/src/Perl6/Actions.nqp#L6499
[18:50] <tonyo> which would lead to the implementation of nqp's call here: https://github.com/Raku/nqp/blob/e01f299b4a76193c3405d6840a154dffe70b7695/docs/ops.markdown#call
[18:51] <tonyo> and looks like it's undocumented which means i wouldn't rely on ordering
[18:51] <tonyo> but generally safe to assume a before b since it's a list
[18:55] <discord-raku-bot> <Nemokosch> anyway, this should be specified (or at least noted as "undefined behavior" a la C) for the language itself, not the implementation
[18:55] <reol> ty. I think I will manually serialize arguments. I looked at the following document, but I didn't find anything regarding argument evaluation order except in conjunction with infix operators. https://docs.raku.org/language/operators#Operator_precedence 
[19:12] *** Heptite left
[19:19] *** Kaiepi joined
[19:37] <tonyo> nemokosch, explicitly undocumented means undefined behavior
[19:41] <tonyo> reol: my guess is mainly that it evaluates in list order because of how it gets serialized into NQP and you can see what it actually looks like if you send raku --target=ast -e '...' which shows argument bindings happening as numbers
[19:41] <tonyo> and ordered
[19:46] <discord-raku-bot> <Nemokosch> tonyo: I'm not talking about NQP, I'm talking about Raku
[19:47] <tonyo> not going to engage in pedantry
[19:49] <discord-raku-bot> <Nemokosch> this is not pedantry lmao, just because something works in a certain way in Rakudo, it's not necessarily relevant for people learning Raku
[19:49] <tonyo> yes and the myriad of implementations will definitely confuse beginners trying to figure out the evaluation order of arguments.
[19:49] <reol> the question is whether this is a mere implementation artefact 
[19:50] <reol> the question is whether this is a mere implementation artefact 
[19:50] <tonyo> reol: i would assume so until documented otherwise
[19:50] <discord-raku-bot> <Nemokosch> NQP is meant to be used for compilation, it is a Rakudo thing
[19:50] <tonyo> if you want to be a pedant ding dong please do it elsewhere
[19:52] <discord-raku-bot> <Nemokosch> I wonder what benefit you have from deliberately playing stupid. Saying that something is documented for Raku because <insert something about a Rakudo implementation detail> makes no sense whatsoever.
[19:52] <tonyo> if you want it documented, you could spend less time asking other people to do it and more time learning where the rakudo source is so you can track down what is actually happening so it can be documented and less time arm-chairing guesses and thinking up inane things to argue about
[19:53] <tonyo> i didn't say it was documented, try reading 
[19:53] <tonyo> for raku, anyway
[19:54] *** guifa left
[19:54] <discord-raku-bot> <Nemokosch> hm, I wonder who engages in pedantry. Thanks for the constructive mentality though, and implicitly blaming me for not having the knowledge and audacity to define and document core Raku behavior.
[20:00] <tonyo> pedantry is focusing minor details of something that has no real impact of anything.  what exactly is arguing about raku vs implementation specific doing at this very moment when there is one implementation of the language and no ambiguity to clear
[20:01] <tonyo> i am explicitly blaming you, by the way, i've linked you to source multiple times where your topic of the day could've been answered with the same link as yesterday
[20:03] <discord-raku-bot> <Nemokosch> Maybe you are here from the Perl days but Raku is said to have a standard - no matter the implementation, it doesn't count unless it's specified. If the implementation does the right thing, it should be explicitly noted, this is by no means "pedantry"
[20:03] <tonyo> and rather than asking a question come in here and argue about it until people are blue in the face
[20:03] <discord-raku-bot> <Nemokosch> Especially just one day after the discussion with guifa mentioning how good it would be to make another Raku compiler, _just for the sake of having one more_ and breaking the Raku=Rakudo implication
[20:04] <tonyo> what implementation are you worried about confusing people with?
[20:05] <discord-raku-bot> <Nemokosch> What sort of question is this even. Read what I said one more time.
[20:06] <tonyo> what implementation are you worried about confusing people with? maybe this will explain how that topic isn't a minor detail at the moment
[20:07] <tonyo> and how the topic at all isn't pedantry
[20:07] <discord-raku-bot> <Nemokosch> I don't think anything could help if you just don't understand what having a standard means
[20:07] <tonyo> got it, so it's just pedantry
[20:07] <discord-raku-bot> <Nemokosch> got it, so you're gonna insist on playing stupid
[20:08] *** ChanServ sets mode: +o lizmat
[20:08] <lizmat> Nemokosch: I have been afk for most of the day
[20:08] <tellable6> lizmat, I'll pass your message to Nemokosch
[20:08] <lizmat> but it appears that you are still just wanting to be an annoyance on the channel
[20:09] <lizmat> so, please please PLEASE tone down
[20:09] <discord-raku-bot> <Nemokosch> you could check tonyo as well sometimes
[20:09] *** discord-raku-bot was kicked by lizmat (Your behavior is not conducive to the desired environment.))
[20:10] <lizmat> sorry people, but I got really fed up as many other people have
[20:11] *** discord-raku-bot left
[20:14] *** Nemokosch joined
[20:15] <Nemokosch> lizmat: just answer this question for one before going at me: is the specification of NQP the specification of the Raku language?
[20:15] <tellable6> 2022-09-06T11:41:45Z #raku <grondilu> Nemokosch:  noted
[20:15] <tellable6> 2022-09-06T20:08:35Z #raku <lizmat> Nemokosch: I have been afk for most of the day
[20:15] <lizmat> to answer your question: afaik NQP is NQP, and Rakudo is an implementation of the Raku Programming Language using NQP
[20:20] <Nemokosch> this is all I was saying. Everything works some way in the runtime, some parts are specified for NQP and again some parts are specified for the Raku language
[20:20] <lizmat> no, you were saying a lot of other things as well
[20:21] <Nemokosch> after this was received with personal remarks
[20:21] <Nemokosch> sorry but I'm not a punchbag
[20:21] <lizmat> in any case, you can now be congratulated for being the reason that the discord people will not be connected to IRC anymore
[20:23] <Nemokosch> It wasn't my doing, and I stand by my words: tonyo started provoking me for the second time in a couple of weeks.
[20:23] *** Nemokosch was kicked by lizmat (Your behavior is not conducive to the desired environment.))
[20:23] <lizmat> enough is enough
[20:25] *** Nemokosch joined
[20:27] *** ChanServ sets mode: +oo vrurg japhb
[20:32] *** bigdata joined
[20:34] *** bigdata left
[20:34] *** bigdata_ joined
[20:35] *** bigdata_ is now known as bigdata
[20:51] <Nemokosch> Okay... what next?
[20:51] *** Nemokosch left
[20:54] <lizmat> Nemokosch: you seem to assume that anybody who does not agree with you, or your priorities, is attacking you
[20:54] <tellable6> lizmat, I'll pass your message to Nemokosch
[20:54] <lizmat> as long as you assume this, there is little room for you on any of the #raku channels
[20:55] <lizmat> open source is about being collaborative, and you are not collaborating
[20:56] <lizmat> as tonyo pointed out, you are mainly talking and apparently not willing to put in effort to make things better in the Raku(do) core
[20:56] <lizmat> be it in documentation, or in improving the code, or helping other people doing so
[20:57] <lizmat> you are a time sink for the Raku Community at the moment
[20:57] <lizmat> and time is something that is precious to everybody in open source, as it is only time that people can spend on open source
[20:58] <lizmat> you have now been kicked here because of your behaviour on the discord Raku channel
[20:59] <lizmat> which took down all of discord as well, as the owner of the bot no longer wishes to run it
[20:59] <lizmat> (discord on this channel, of course :-)
[20:59] <lizmat> I suggest you think about this very long and very hard
[21:00] <lizmat> as an older person, I can only suggest you decide to choose your battles well
[21:01] <vrurg> lizmat: he's gone. Won't see it all.
[21:01] <lizmat> it will help you here, as it will help you with your life in general
[21:01] <lizmat> I'm pretty sure he checks up on https://irclogs.raku.org/raku/live.html
[21:02] <lizmat> and if not, well... I hope he will be in a happier place
[21:02] <vrurg> That sounds, well, grim... ;)
[21:03] <lizmat> it's not meant to be grim: he clearly wasn't happy here
[21:03] <lizmat> as he felt that many people were attacking him
[21:03] <lizmat> why you would want to stay in a place where people are attacking you, is beyond me
[21:04] *** Nemokosch joined
[21:04] <lizmat> especially online, as there are so many other places to be
[21:04] <vrurg> Just kidding. But, yes, I barely remember a constructive discussion with him.
[21:05] <Nemokosch> lizmat: no, I don't assume that anyone who doesn't agree with me is attacking me
[21:05] <tellable6> 2022-09-06T20:54:41Z #raku <lizmat> Nemokosch: you seem to assume that anybody who does not agree with you, or your priorities, is attacking you
[21:05] <Nemokosch> actually, I don't even think this has to be a "me-thing"
[21:06] <vrurg> Nemokosch: and yet, somehow you make people think so and react correspondingly. Just take a break and think about it.
[21:08] <Nemokosch> I think anybody could read how the last discussion went and come to a conclusion. Again, sorry n times for not knowing enough after one years of using Raku mainly in my free time beside work, to be of more use. I do think I try my best, or "good enough".
[21:08] <Nemokosch> I do think I'm trying to help others whenever I can
[21:10] <lizmat> I think many of the regulars on the channel have a different opinion on that
[21:10] <Nemokosch> But many would share it
[21:11] <Nemokosch> I know that I am often confrontative but it doesn't help when even a pondering "this should be defined in the language" is received with lecturing and assuming bad faith
[21:12] <lizmat> so why are you confrontative ?
[21:12] <Nemokosch> I'm generally dealing with loads of bad faith assumptions, I wonder if you notice that...
[21:12] <vrurg> Nemokosch: no good deeds justify the bad ones. I'm not a frequent visitor to this channel, can't tell if you are helpful or not. What I did see today is that word `stupid' has been used in a reply to word `pedant'. Just to wind it down to a single point of failure (there are more, actually).
[21:14] <lizmat> Nemokosch: so you came on the channel for the first time, and people started having bad faith assumptions about you immediately ?
[21:15] <gfldex> You are not "confrontative". You are arrogant. You are not just unpolite, you are rude. You ignore the fact that you are dealing with humans, who have feelings. When was the last time you apologised?
[21:15] <Nemokosch> it wasn't a sole word, it was the whole sentence put in a bantering way, and it wasn't a sole word from my side either
[21:15] <lizmat> Nemokosch: could you at least entertain the suggestion that maybe, just maybe, it was your behaviour that caused people having bad faith assumptions about you ?
[21:16] <Nemokosch> gfldex: one could say that about quite a number of people here, yet I have to take it all.
[21:16] <vrurg> Now, to get things done right we have problem-solving. For making something a standard we have roast and PRs. There are docs. Those are the places to resolve technical matters. 
[21:16] <Geth> ¦ ecosystem: 232fd3bbf6 | (Nick Logan)++ (committed using GitHub Web editor) | META.list
[21:16] <Geth> ¦ ecosystem: Rename Perl6->Raku and master->main
[21:16] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/232fd3bbf6
[21:16] <lizmat> ugexe++
[21:18] <Nemokosch> vrurg: and I am doing that, whenever I can clearly point out the thing. I have opened a number of issues and I did care to close the issue when I felt we cannot progress with it in a constructive way
[21:18] <Geth> ¦ ecosystem/main: 135 commits pushed by 8 authors
[21:18] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/compare/70b98dc4f220^...232fd3bbf6ee
[21:19] <vrurg> Nemokosch: So, continue doing so.
[21:19] <Nemokosch> gfldex: one more note - I have an easier time to recall when I apologised than when someone apologised me
[21:20] <vrurg> Nemokosch: In your reply to gfldex you prooflessly offended a group of people. This is unacceptable. But you get this route without event noticing what you do.
[21:21] <Nemokosch> Again, he prooflessly offended me.
[21:21] <lizmat> https://irclogs.raku.org/search.html?query=apologize&type=words&channel=raku
[21:21] <vrurg> Now, this is not the place to proceed with all this altercation. As a member of Community Affairs Team I request Nemokosch to take a break and stop discussing any personal/relational matters here.
[21:22] <lizmat> vrurg: want me to kick Nemokosch now ?
[21:22] <vrurg> If there any single word not related to a technical matter.
[21:22] <Nemokosch> I'm fine with not discussing personal/relational matters
[21:23] <Nemokosch> Sincere question: what am I allowed to do when I feel that I am offended?
[21:24] <Nemokosch> Because right now it just seems "you deserve it, c'est la vie"
[21:24] <lizmat> Nemokosch: what is more important: your ego, or the Raku project ?
[21:25] <vrurg> Nemokosch: This is the last question of the kind. Next time you ask me in PM. 
[21:25] <vrurg> Nemokosch: otherwise would you feel offended then take a deep breath and submit a request to CAT when cooled down.
[21:27] <Nemokosch> what is CAT?
[21:27] <Nemokosch> ~Caterpillar~
[21:27] <lizmat> Community Affairs Team
[21:27] <lizmat> enforcing the Code of Conduct in Raku spaces
[21:28] <reol> m: {}{}
[21:28] <camelia> rakudo-moar 7342d9dc2: ( no output )
[21:28] <reol> m: {} {}
[21:28] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> {}⏏ {}␤    expecting any of:␤        infix␤        infix stopper␤»
[21:29] <Nemokosch> the first one is indexing a Map, no?
[21:29] <lizmat> m: dd {a => 42}{}
[21:29] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «{:a(42)}␤»
[21:29] <lizmat> it's a zen slice on an empty hash
[21:29] <Nemokosch> "zen-slicing"
[21:29] <Nemokosch> or decont, I still don't know if these are meant to be the same thing
[21:30] <lizmat> Nemokosch: you still didn't answer my question
[21:30] <Nemokosch> I was going to, don't worry
[21:30] <Nemokosch> I just thought it also wouldn't be nice to go back when there is actual content on the chat :DD
[21:31] <lizmat> ...
[21:32] <Nemokosch> If my ego were more important, I would have left half a year ago. It's not that convenient to always be that one, whether you believe it or not...
[21:32] <vrurg> lizmat: BTW, what does `rak --json-per-file` do?
[21:34] <lizmat> slurps files and attempts to interpret as JSON and then present that to your pattern (usually a WhateverCode or Callable)
[21:36] <vrurg> (facepalm) long to explain, but I did the right thing, haven't checked the result properly. Thanks!
[21:38] <lizmat> % rak --json-per-file '*.<auth>' */META6.json --unique
[21:38] <lizmat> zef:lizmat
[21:38] <lizmat> cpan:ELIZABETH
[21:40] <lizmat> ah... I thought I missed one module, but it turns out one repo wasnt't checked out on HEAD :-)
[21:44] <reol> Raku transforms my unintentional errors into executable garbage with a consistency that is actually astonishing.
[21:46] *** justache is now known as justache_test
[21:46] *** justache_test is now known as justache
[21:54] <Nemokosch> It resembles Javascript in this regard somewhat
[21:55] *** Sgeo joined
[21:55] <Nemokosch> but the exciting part is when you execute something nobody ever did before :D
[21:55] <reol> I'm not quite sure what { say "hi"; }{} does, maybe it is just a fancy NOP. Reminds me of the early GCC days where a forgotten semicolon could have cost you hours to track down. At least it didn't compile.
[21:55] <Nemokosch> I couldn't tell at first if it runs or not
[21:55] <lizmat> m: dd 42{}
[21:55] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «42␤»
[21:55] <Nemokosch> { say "hi"; } -> this is a block, that much is sure
[21:56] <lizmat> m: dd 42{"a"}
[21:56] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «Failure.new(exception => X::AdHoc.new(payload => "Type Int does not support associative indexing."), backtrace => Backtrace.new)␤»
[21:56] <reol> m: { say "hi"; }{}
[21:56] <camelia> rakudo-moar 7342d9dc2: ( no output )
[21:56] <Nemokosch> oh yeah, it's a "decontainerized" block
[21:56] <Nemokosch> bingo
[21:56] <lizmat> one could argue that zen slicing anything that is not an Associative, should throw
[21:57] <gfldex> reol: you can ask Rakudo what it thinks your Raku code does like so: raku --target=AST -e '{ say "hi"; }{}'
[21:57] <Nemokosch> currently, <>, {} and [] does the same thing, right?
[21:57] <reol> i mistakenly typed an addition { which my editor auto completed into {}, disabling a block which caused a bug to turn up in a seemingly unrelated portion of code. wow
[21:58] <Nemokosch> are blocks executed in sink context?
[21:58] *** sena_kun left
[21:58] <Nemokosch> perhaps this question doesn't sound as good in ENglish as it sounded in my head...
[21:58] <lizmat> m: { say "executed" }
[21:58] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «executed␤»
[21:59] <Nemokosch> I tried to ask about the logical implication of "code object in sink context" -> "the code gets executed"
[22:00] <lizmat> and I answered with a code example
[22:02] <Nemokosch> tbh I never thought sink context could "do more" for certain data than any non-sink context, even though this makes sense
[22:03] <lizmat> m: class A { method sink() { say "sunk } }; A.new
[22:03] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> A { method sink() { say "sunk } }; A.new⏏<EOL>␤    expecting …»
[22:03] <lizmat> m: class A { method sink() { say "sunk" } }; A.new
[22:03] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «sunk␤»
[22:05] *** bigdata left
[22:05] <vrurg> m: class A { method sink() { say "sunk" } }; { A.new }
[22:05] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «sunk␤»
[22:05] <vrurg> m: class A { method sink() { say "sunk" } }; say { A.new }
[22:05] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «-> ;; $_? is raw = OUTER::<$_> { #`(Block|4837339367056) ... }␤»
[22:05] <vrurg> m: class A { method sink() { say "sunk" } }; say { A.new }()
[22:05] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «A.new␤»
[22:05] <vrurg> As simple as it gets...
[22:07] *** Nemokosch left
[22:08] *** Rog joined
[22:08] *** Rog is now known as Rogue2017
[22:11] <reol> It is actually funny
[22:11] <reol> m: { die 1; }{ die 2; }{ die 3; }
[22:11] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «2␤  in block <unit> at <tmp> line 1␤␤»
[22:14] <gfldex> m: { die 1; }{ die 2; die 3; }
[22:14] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «2␤  in block <unit> at <tmp> line 1␤␤»
[22:14] <reol> m: { die 1; }{ {die 2;}{} }{ die 3; }
[22:14] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «3␤  in block <unit> at <tmp> line 1␤␤»
[22:15] <lizmat> m: CATCH { .resume }; die "dead"; say "alive"
[22:15] <camelia> rakudo-moar 7342d9dc2: OUTPUT: «alive␤»
[22:15] <gfldex> Is that a SemiList in the postcircumfix:<{ }> ?
[22:15] <gfldex> Silly me, I can just ask Rakudo.
[22:17] <gfldex> - QAST::Op(call &postcircumfix:<{; }>) <wanted sunk> :statement_id<1> { die 2; die 3; }
[22:17] <gfldex> it is :)
[22:23] *** euandreh left
[22:33] *** Rogue2017 left
[22:37] *** ChanServ sets mode: -o japhb
[22:50] *** reol left
[23:05] *** Discord_Rog joined
[23:10] *** euandreh joined
[23:11] *** guifa joined
[23:15] *** euandreh left
[23:16] *** euandreh joined
[23:36] *** Discord_Rog left
