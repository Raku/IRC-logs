[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[00:21] <SmokeMachine> I like having one class on each file and let a EXPORT decide what to do‚Ä¶

[00:23] *** Xliff joined
[00:23] <Xliff> \o

[00:23] <Xliff> I can't seem to get Inline::Perl5 to install on my Mac Mini. Any ideas?

[00:38] <Xliff> Is anyone alive?

[00:39] * guifa_ is alive

[00:40] <guifa_> Let me give it a try, I've got a mini, but not an M[12]

[00:40] <Xliff> Thanks, guifa!

[00:40] <guifa_> [Inline::Perl5] p5helper.c:1:10: fatal error: 'EXTERN.h' file not found

[00:41] <Xliff> Aha.

[00:41] <Xliff> How are you showing the error? Let me see if I get the same.

[00:41] <guifa_> zef spit it out for me

[00:45] <Xliff> guifa: https://gist.github.com/Xliff/c78fb770c8b1d23d2b7be0bdb007e9c6

[00:47] <guifa_> ooooooh

[00:47] <Xliff> :> !

[00:47] <guifa_> That's an interesting (ab)use of declarator pod

[00:47] <Xliff> I know

[00:48] <Xliff> Should I feel dirty?

[00:48] <guifa_> No

[00:48] <Xliff> :)

[00:48] <guifa_> Because you can make it ultra clean very shortly

[00:48] <guifa_> I actually am about to release a module that finally puts us in sight of the holy grail

[00:48] <Xliff> Really?

[00:48] *** Kaipei joined
[00:48] <Xliff> Please share

[00:49] <guifa_> grammar Foo {¬†ecma-regex foo {¬†‚Ä¶interpreted as javascript regex‚Ä¶ }¬†}

[00:49] <guifa_> will be 100% valid Raku code

[00:49] <Xliff> OK. How does that relate to the SQL use case?

[00:50] <guifa_> So if I allow literal Javascript-style regex code in between the brackets

[00:50] <Xliff> BTW - I tried writing a grammar for SQL.

[00:50] <guifa_> there's nothing stopping me from putting any other kind of grammar there

[00:50] <guifa_> like, say, SQL code :-) 

[00:50] <Xliff> OK. One problem...

[00:51] <Xliff> https://github.com/Xliff/perl6-Parser-SQL [I've already tried that... not yet finished]

[00:52] *** Kaiepi left
[00:52] <guifa_> Did you hit a major roadblock or just need more time to refine stuff ?

[00:56] <Xliff> Nah. It's just time consuming getting all of the tokens defined, tested and integrated.

[00:57] <Xliff> That and the fact that p6-GLib took over my life!

[00:57] <Xliff> This was one of my first Raku (then Perl6) projects.

[00:58] <Xliff> I actually like how my DB modules work now. I have them integrated into a Cro-based App-Server I'm writing for $dayJob.

[01:06] <guifa_> If you could do a dummy grammar enough to detect when the final }  is, that would probably be enough

[01:06] <guifa_> In the meantime, I legit like your hack :-)

[01:07] <guifa_> Also consider you could still write it "in" the block 

[01:07] <guifa_> method foo (‚Ä¶) is query {¬†#= sql-code }

[01:13] <Xliff> Ah. Thanks! I didn't know that.

[01:17] <Xliff> Also note that my hack supports parameters...

[01:17] <Xliff>  #| SELECT id FROM lightsail_instances WHERE data->"$.name" = ?

[01:17] <Xliff>   method getLightsailInstanceByName ($n)

[01:17] <Xliff> So the .prepare and the .execute($n) are handled ....

[01:21] *** Xliff left
[01:30] <guifa_> nice

[01:31] *** Kaiepi joined
[01:33] *** Kaipei left
[01:52] <guifa_> Alright yay it's been posted 

[01:53] <guifa_> Although right now for some reason fez isn't liking it.  Keeps saying that the auth needs to be "zef:" but... it is

[01:55] <guifa_> tonyo ugexe ^^ any ideas on that one?  (checkbuild doesn't report any errors)

[01:58] <guifa_> Nm, I *think* it's related to me needing to reset password.  After the password reset, fez thinks it's logged in properly, but it doesn't seem to be in a perfect state.  I did fez login again, and now it seems to be okay

[01:58] <guifa_> Xliff: https://github.com/alabamenhu/PolyglotRegexen

[01:58] <tellable6> guifa_, I'll pass your message to Xliff

[02:28] *** vrurg joined
[02:28] *** vrurg_ left
[02:31] *** Xliff joined
[03:05] *** pamplemousse joined
[03:20] *** pamplemousse left
[04:14] *** pamplemousse joined
[04:15] *** justache left
[04:19] *** pamplemousse left
[05:02] *** andrea[m]1 left
[05:02] *** merpaderp left
[05:02] *** ecocode___ left
[05:02] *** bd3i left
[05:02] *** ugexe left
[05:02] *** leont left
[05:02] *** skaji left
[05:02] *** skaji joined
[05:02] *** merpaderp joined
[05:02] *** leont joined
[05:02] *** bd3i joined
[05:02] *** ugexe joined
[05:03] *** ecocode___ joined
[05:05] *** andrea[m]1 joined
[05:16] *** kybr left
[05:16] *** Juerd left
[05:16] *** samcv left
[05:17] *** tonyo left
[05:17] *** kybr joined
[05:17] *** Juerd joined
[05:17] *** tonyo joined
[05:17] *** samcv joined
[06:06] *** reportable6 left
[06:08] *** reportable6 joined
[07:00] *** deoac left
[07:29] *** sena_kun joined
[07:43] *** Sgeo left
[07:54] *** dakkar joined
[07:58] *** justache joined
[08:18] <SmokeMachine> guifa_: it seems you committed the .precomp

[08:58] *** evalable6 left
[08:58] *** linkable6 left
[08:59] *** linkable6 joined
[08:59] *** evalable6 joined
[09:16] *** sena_kun left
[09:19] <guifa_> SmokeMachine yeah, I don't know how that happened, esp since .precomp is in the .gitignore

[09:30] <guifa_> is deleted now.  I'm assuming (hoping?) fez strips out the precomp

[09:52] *** justache left
[09:52] *** justache joined
[10:19] *** justache left
[10:20] *** justache joined
[10:23] *** sena_kun joined
[10:27] *** justache left
[10:28] *** justache joined
[10:29] *** justache left
[10:29] *** justache joined
[10:36] *** justache left
[10:37] *** jaguart left
[10:37] *** justache joined
[10:42] *** justache left
[10:43] *** justache joined
[10:48] *** justache left
[11:00] *** justache joined
[11:02] <El_Che> listening to lizmat atm :)

[11:02] <lizmat> oh dear  :-)

[11:03] *** justache left
[11:03] *** justache joined
[11:04] <El_Che> there will be manu frobs in the ecosystem :)

[11:21] *** justache left
[11:21] *** justache joined
[11:22] <El_Che> salve's suggestion about shell autocomplete is a good idea

[11:22] <El_Che> I used to use docopt in go

[11:23] <El_Che> it's nice, but it can be too much or too little on your usage

[11:27] <lizmat> I understand that docopt allows you to create code from an interface description, right ?

[11:27] <El_Che> it creates the cli interfaces from the documentation

[11:28] <lizmat> but you still need to fill in the actual working bits, right ?

[11:31] <El_Che> let me peek in my code

[11:31] <El_Che> it has been ages

[11:32] <El_Che> it autoparses the cli params and creates help, verbose, debug etc

[11:33] <El_Che> I use it to fill a Params struct with all the options and take it there in main

[11:34] <El_Che> so it works the other way round as raku

[11:35] <El_Che> instead of generation usage from signatures, it handles signatures from usage

[11:35] <El_Che> (or at least, that's how I used it)

[11:36] <El_Che> they have plenty of documentation and an org that accepts implementations for other languages

[11:37] <SmokeMachine> At some point will we need something like: `my %SUB-MAIN-OPTS = do-all-the-right-things()`?

[11:38] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/08/15/2022-33-2nd-conf-succeeded/

[11:38] <El_Che> well, I had similar frustation with the builtin go cli param handler (flag) as with raku's: the non gnu way of parameters and the strict order between params and arguments/cmds

[11:39] <El_Che> (raku's params handler is way nicer than go's, by the way)

[11:42] *** Xliff left
[11:42] <discord-raku-bot> <Nemokosch> yey ü•≥

[11:43] <El_Che> Nempkosch: I watched your talk too, what a journey :)

[11:43] <El_Che> (for me Nemokosch == the discord guy)

[11:45] <discord-raku-bot> <Nemokosch> haha üòÑ

[11:46] <discord-raku-bot> <Nemokosch> I'm curious about you as well. One of the names that don't have a face to them in my mind...

[11:48] *** razetime joined
[11:48] <El_Che> we'll met at real live conference in the future :)

[12:01] <discord-raku-bot> <Nemokosch> letsgooo

[12:01] <discord-raku-bot> <Nemokosch> can't promise to go to the US though :DD

[12:02] <El_Che> NemokoschM: I am EU based, not so far from lizmat (another country, though) :)

[12:06] *** reportable6 left
[12:08] *** reportable6 joined
[12:12] *** MasterDuke joined
[12:13] <discord-raku-bot> <Nemokosch> üßê gonna catch you

[12:14] *** justache left
[12:15] *** justache joined
[12:15] <MasterDuke> lizmat: doesn't the race example in that SO question need to be 'race for <‚Ä¶>.race {' ?

[12:22] <leont> El_Che: yeah I think you're closer to lizmat despite me being the one living in the same country üòõ

[12:23] *** MasterDuke left
[12:25] <El_Che> hehe, true

[13:16] *** razetime left
[13:21] *** squashable6 left
[13:23] *** squashable6 joined
[13:27] *** razetime joined
[13:28] *** Sgeo joined
[13:30] <discord-raku-bot> <Anton Antonov> At this point it seems <@297037173541175296> that -- judging by talks and comments at TRC-2022 -- knows Raku better than me. (I started using Raku "intensively" in 2019.)

[13:38] *** Sgeo left
[13:42] <discord-raku-bot> <Nemokosch> well well, that's flattering on one hand, but yes, the trick is that what I know I know pretty well, and then what I don't know well, I might not know to any useful extent

[13:42] <discord-raku-bot> <Nemokosch> like OO

[13:46] <discord-raku-bot> <Nemokosch> also, you know, I wish there were more people like you around Raku

[13:46] <discord-raku-bot> <Nemokosch> The expertise part of Leon's talk

[14:38] *** linkable6 left
[14:38] *** evalable6 left
[14:40] *** linkable6 joined
[14:41] *** evalable6 joined
[14:50] *** justache left
[14:50] *** justache joined
[14:52] *** deoac joined
[15:11] *** razetime left
[15:13] *** nebuchadnezzar left
[15:22] *** razetime joined
[15:33] *** razetime left
[15:37] *** melezhik joined
[15:37] <melezhik> o/

[15:37] <tellable6> 2022-07-26T22:42:55Z #raku <jjatria> melezhik: about the Tomtit profile, I don't think I really understand what those "profiles" are yet. But sure, knock yourself out :)

[15:37] <tellable6> 2022-08-04T19:05:47Z #raku <AlexDaniel> melezhik: thanks for letting me know, I think it works now and it's fixed for good

[15:38] <melezhik> .tell @AntonAntonov SmokeMachine sparkyci queue got stuck, so no new builds are triggered right now, I am planning to fix this, but no sooner then probably next week

[15:38] <tellable6> melezhik, I cannot recognize this command. See wiki for some examples: https://github.com/Raku/whateverable/wiki/Tellable

[15:39] <melezhik> .tell SmokeMachine sparkyci queue got stuck, so no new builds are triggered right now, I am planning to fix this, but no sooner then probably next week

[15:39] <tellable6> melezhik, I'll pass your message to SmokeMachine

[15:39] <SmokeMachine> melezhik: üëç

[15:40] <melezhik> I just left my laptop with my family with the only ssh public available on it, he-he )))

[15:40] <melezhik> so once I get the one ... I'll fix the issue

[15:41] <melezhik> I enjoyed the conference, it was good one, I liked it

[15:41] <melezhik> lizmat ++ for your rak talk, was interesting to hear

[15:42] *** melezhik left
[16:05] *** lizmat_ joined
[16:06] *** Kaipei joined
[16:08] *** Kaiepi left
[16:09] *** lizmat left
[16:15] <discord-raku-bot> <Nemokosch> haven't forgotten to return to your talk üôÇ

[16:20] *** lizmat_ left
[16:20] *** lizmat joined
[16:21] <discord-raku-bot> <Nemokosch> Actually I have time to watch it right now, as things turned out

[16:28] <discord-raku-bot> <Anton Antonov> I have to Melezhik's talk too. (Missed it on Saturday...)

[16:28] <discord-raku-bot> <Anton Antonov> I have to watch Melezhik's talk too. (Missed it on Saturday...)

[16:28] *** Xliff joined
[16:29] <Altreus> Are the videos up or are you scanning through the VOD from the stream?

[16:39] *** dakkar left
[16:39] <lizmat> afaik, the separated videos are not up yet

[16:40] <lizmat> pretty sure Andrew would have tweeted about that

[16:40] <Altreus> ya I guessed :) I will keep an eye out

[16:49] <discord-raku-bot> <Anton Antonov> @lizmat I consider proposing an (OOP) pipeline design for the App::Rak functionalities / intents. For example, `my App::Rak $rk .= new; $rk.find-files(rx/.../).find-lines(rx/.../).grep(...).sort(*.size)` .

[16:50] <discord-raku-bot> <Anton Antonov> @lizmat Probably granularity can be generalized to be not just "files" or "lines", but also "directories" and "code blocks/subs".

[16:51] <lizmat> hmmm.... per-dir   interesting thought

[16:54] <Xliff> Did the ":from<Perl5>" argument for use get taken away?

[16:54] <Xliff> I have old unchanged code that has stopped working after the Sunday upgrade.

[16:56] <Xliff> raku -e 'use Inline::Perl5; use Email::Sender:from<Perl5>'

[16:56] <Xliff> ===SORRY!=== Error while compiling -e

[16:56] <Xliff> Too many positionals passed; expected 1 argument but got 2

[16:58] <lizmat> yeah, that's something that will need to be fixed by an update to Inline::Perl5  nine

[16:58] <lizmat> HEAD and Inline::Perl5 are not compatible atm  :-(

[17:32] *** sena_kun left
[17:47] <Xliff> lizmat: What changed with traits?

[17:48] <lizmat> nothing

[17:48] <lizmat> Inline::Perl5 just doesn't work, the trait tries to do thta

[17:49] <lizmat> *that

[17:49] <lizmat> FWIW, the "use Inline::Perl5" in that case isn't needed

[17:50] <lizmat> Inline::Perl5 just needs to be installed to make :from<Perl5> work (well before vrurg made changes in the mop :-)

[18:05] *** deoac left
[18:06] *** reportable6 left
[18:06] *** reportable6 joined
[18:08] *** deoac joined
[18:13] *** sena_kun joined
[18:34] <discord-raku-bot> <Nemokosch> is it possible to override an existing operator for an existing type? I want % (or mod) to return positive moduli for negative divisors as well

[18:34] <discord-raku-bot> <Nemokosch> and div work accordingly

[18:35] <discord-raku-bot> <Nemokosch> so for example 5 div -2 would be -2 in my file and 5 mod -2 would be 1

[18:36] <discord-raku-bot> <Nemokosch> the whole thing is only useful if the polymod method can take that into account, otherwise I have to reimplement that in my code directly

[18:42] <moritz_> you can lexically override any operator, but the built-in operators will still use the original

[18:43] <moritz_> the original design said the built-ins should also use your version, but so far there hasn't been any even remotely efficient implementation of that behavior

[18:44] <discord-raku-bot> <Nemokosch> Yes, that makes sense unfortunately

[18:47] <discord-raku-bot> <Nemokosch> there is another way to go about it: I could replace the negative digits to their value in the given negative base

[18:47] <discord-raku-bot> <Nemokosch> but I don't know if this has an elegant way

[18:47] <discord-raku-bot> <Nemokosch> > 13289110.polymod(-4 xx *)

[18:47] <discord-raku-bot> <Nemokosch> (-2 -2 -3 -3 -2 -2 0 -3 -2 -3 0 -3)

[18:47] <discord-raku-bot> <Nemokosch> so this is LSD to MSD

[18:48] <discord-raku-bot> <Nemokosch> and I know that -2 is 12 in base -4, for example

[18:49] <discord-raku-bot> <Nemokosch> usually they are 2-digit numbers in base -4, actually all of them but 0

[18:49] <discord-raku-bot> <Nemokosch> is ther a way to turn this array into something properly overlapping so that I can sum them?

[18:49] <discord-raku-bot> <Nemokosch> like -2 -2 is 1 | 2 1 | 2, where the middle digits go into the same slot and therefore should be summed

[18:57] *** morte_ joined
[18:59] <El_Che> gbj's sound needs to be fixed

[19:12] <lizmat> gbj?  You mean japhb ?

[19:14] *** mexen left
[19:15] *** pamplemousse joined
[19:15] *** morte_ left
[19:15] <lizmat> m: 	"the original design said the built-ins should also use your version"  I'm doubtful about this ever working, as it would be different how non-core modules / code works

[19:15] <camelia> rakudo-moar 10feda116: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------>  built-ins should also use your version"‚èè  I'm doubtful about this ever working, ‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§   ‚Ä¶¬ª

[19:15] <lizmat> "the original design said the built-ins should also use your version"  I'm doubtful about this ever working, as it would be different how non-core modules / code works

[19:16] <discord-raku-bot> <Nemokosch> what does that mean?

[19:19] <discord-raku-bot> <Nemokosch> I mean, it makes sense in theory. If something is available everywhere and you override it, the perceived benefit why you didn't just derive something for yourself from it, is that it will be for everything you call

[19:20] <discord-raku-bot> <Nemokosch> it will be *available for everything you call

[19:20] <lizmat> this is one such case: https://github.com/rakudo/rakudo/pull/4484   (or solution?)

[19:21] <discord-raku-bot> <Nemokosch> and it also makes sense that it isn't gonna be terribly fast if the right function to call needs to be looked up in all of your dependencies

[19:22] <discord-raku-bot> <Nemokosch> and cannot really be optimized for

[19:22] <discord-raku-bot> <Nemokosch> lizmat: yes, this is exactly something like that

[19:23] <discord-raku-bot> <Nemokosch> it just sounded silly to ask about polymod letting you to specify mod and div

[19:23] <lizmat> but using CALLERS:: is basically also saying: throw all runtime optimizations out of the door  :-(

[19:23] *** pamplemousse left
[19:24] <discord-raku-bot> <Nemokosch> I can imagine that

[19:26] *** pamplemousse joined
[19:26] <discord-raku-bot> <Nemokosch> It's tough because I cannot say that the current behavior of div and mod is bad. It's not the only possible definition but it is clearly a legitimate definition

[19:26] <discord-raku-bot> <Nemokosch> however, not the one that would be useful in my case

[19:27] <discord-raku-bot> <Nemokosch> but then it seems that eventually all the logic needs to be copied with the preferred definition of div and mod, which is much more painful in theory than in the particular example

[19:28] <discord-raku-bot> <Nemokosch> I mean, I can say that it is bad... because they don't coerce to int, unlike everything else üòù but that's really not the problem here

[19:29] *** pamplemousse left
[19:29] *** pamplemousse joined
[19:44] *** pamplemousse left
[19:46] *** pamplemousse joined
[19:49] *** pamplemousse left
[19:58] *** [Coke] left
[19:59] *** pamplemousse joined
[20:04] *** pamplemousse left
[20:15] *** [Coke] joined
[20:18] *** pamplemousse joined
[20:26] *** pamplemousse left
[20:27] *** pamplemousse joined
[20:43] *** ajr joined
[20:44] *** pamplemousse left
[20:47] *** pamplemousse joined
[20:58] *** pamplemousse left
[21:01] *** pamplemousse joined
[21:04] *** pamplemousse left
[21:08] *** pamplemousse joined
[21:11] *** pamplemousse left
[21:26] *** pamplemousse joined
[21:28] *** pamplemousse left
[21:35] *** pamplemousse joined
[21:40] *** pamplemousse left
[21:49] *** pamplemousse joined
[21:50] *** pamplemousse left
[22:17] *** linkable6 left
[22:19] *** linkable6 joined
[22:37] *** sena_kun left
[22:53] *** pamplemousse joined
[22:56] *** pamplemousse left
[22:57] <japhb> El_Che: Assuming lizmat was right, what was wrong with my audio?  When I did the recording for the first-day talk, I had a lot of fan noise that I had to filter out, which made the talk a bit quiet compared to some of the others.  Was that what you were talking about?  Or was it when I was talking on the RSC Q&A?

[22:57] *** sena_kun joined
[22:58] *** Sgeo joined
[22:58] *** Xliff left
[22:58] *** Xliff joined
[22:59] *** Xliff left
[22:59] *** sena_kun left
[23:49] *** pamplemousse joined
[23:51] *** pamplemousse left
