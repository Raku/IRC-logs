[00:06] *** Manifest0 left
[00:06] *** reportable6 left
[01:06] *** benchable6 left
[01:06] *** greppable6 left
[01:06] *** committable6 left
[01:06] *** bisectable6 left
[01:06] *** nativecallable6 left
[01:06] *** statisfiable6 left
[01:06] *** squashable6 left
[01:06] *** unicodable6 left
[01:06] *** sourceable6 left
[01:06] *** linkable6 left
[01:06] *** quotable6 left
[01:06] *** evalable6 left
[01:06] *** shareable6 left
[01:06] *** tellable6 left
[01:06] *** coverable6 left
[01:06] *** notable6 left
[01:06] *** releasable6 left
[01:06] *** bloatable6 left
[01:07] *** releasable6 joined
[01:08] *** notable6 joined
[01:08] *** evalable6 joined
[01:08] *** benchable6 joined
[01:08] *** linkable6 joined
[01:08] *** greppable6 joined
[01:10] *** sourceable6 joined
[01:27] *** frost joined
[01:28] *** dextercd left
[01:47] *** frost left
[01:50] *** frost joined
[02:06] *** frost left
[02:07] *** shareable6 joined
[02:07] *** statisfiable6 joined
[02:08] *** squashable6 joined
[02:08] *** frost joined
[02:08] *** bloatable6 joined
[02:08] *** reportable6 joined
[02:09] *** nativecallable6 joined
[02:13] *** frost left
[02:59] *** frost joined
[03:07] *** coverable6 joined
[03:07] *** quotable6 joined
[04:07] *** linkable6 left
[04:07] *** releasable6 left
[04:07] *** notable6 left
[04:07] *** greppable6 left
[04:07] *** sourceable6 left
[04:07] *** benchable6 left
[04:07] *** evalable6 left
[04:07] *** nativecallable6 left
[04:07] *** bloatable6 left
[04:07] *** quotable6 left
[04:07] *** coverable6 left
[04:07] *** squashable6 left
[04:07] *** reportable6 left
[04:07] *** statisfiable6 left
[04:07] *** shareable6 left
[04:08] *** quotable6 joined
[04:08] *** nativecallable6 joined
[04:08] *** shareable6 joined
[04:09] *** notable6 joined
[04:09] *** statisfiable6 joined
[04:09] *** unicodable6 joined
[04:09] *** tellable6 joined
[04:09] *** committable6 joined
[04:10] *** sourceable6 joined
[05:08] *** releasable6 joined
[05:08] *** bloatable6 joined
[05:09] *** greppable6 joined
[05:09] *** reportable6 joined
[05:11] *** squashable6 joined
[06:04] *** tejr left
[06:05] *** tejr joined
[06:08] *** reportable6 left
[06:08] *** linkable6 joined
[06:11] *** mexen joined
[06:58] *** squashable6 left
[07:03] *** tejr left
[07:03] *** tejr joined
[07:07] *** bisectable6 joined
[07:26] *** jjido joined
[07:47] <moon-child> m: say 'x' ~~ <[.]>

[07:47] <camelia> rakudo-moar 66a67dee1: OUTPUT: «False␤»

[07:47] <moon-child> m: say '.' ~~ <[.]>

[07:47] <camelia> rakudo-moar 66a67dee1: OUTPUT: «False␤»

[07:47] <moon-child> m: say 'x' ~~ /<[.]>/

[07:47] <camelia> rakudo-moar 66a67dee1: OUTPUT: «Nil␤»

[07:47] *** discord-raku-bot left
[07:47] <moon-child> m: say '.' ~~ /<[.]>/

[07:47] <camelia> rakudo-moar 66a67dee1: OUTPUT: «｢.｣␤»

[07:47] *** discord-raku-bot joined
[07:59] *** squashable6 joined
[08:02] *** Sgeo left
[08:09] *** jast left
[08:09] *** jast joined
[08:10] *** benchable6 joined
[08:10] *** evalable6 joined
[08:11] *** reportable6 joined
[08:12] *** Shane__ left
[08:18] *** Darkcoal joined
[08:21] *** abraxxa joined
[08:27] *** abraxxa left
[08:28] *** abraxxa joined
[08:38] *** juanfra__ joined
[08:41] *** jjido left
[08:44] *** Manifest0 joined
[08:49] *** ProperN[out] left
[08:49] *** ProperNoun joined
[09:00] *** Zgredu[m] left
[09:48] *** epony left
[10:09] *** coverable6 joined
[10:39] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2022/03/07/that-meant-war/

[10:41] <lizmat> s/build up independend/build up an independent/

[10:42] <lizmat> s/solders/soldiers

[10:44] <gfldex> Thanks for denitting.

[10:45] <gfldex> Well, without ppl they wont have tin and thus no solder. So my error was correct.

[10:45] <lizmat> true...  :-)

[10:47] <discord-raku-bot> <Nemokosch#9980> Fun fact: inflation is running crazy high here and as I heard in Poland as well

[10:49] <gfldex> In war the damages are never confined to the land of the aggressor.

[10:52] <discord-raku-bot> <Nemokosch#9980> Well, thanks for nothing

[11:09] *** evalable6 left
[11:09] *** linkable6 left
[11:11] *** linkable6 joined
[12:06] *** reportable6 left
[12:10] *** evalable6 joined
[12:45] *** spacekookie left
[12:47] *** spacekookie joined
[12:49] *** TempIRCLogger joined
[12:58] *** squashable6 left
[13:09] *** reportable6 joined
[13:16] *** jjido joined
[13:50] *** jjido left
[13:54] *** frost left
[14:01] *** morte_ joined
[14:54] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/03/07/2022-09-10-universally-promoted/

[15:00] *** squashable6 joined
[15:02] *** abraxxa left
[15:05] <guifa_> lizmat++

[15:08] *** Sgeo joined
[15:27] *** morte_ left
[15:52] *** suman joined
[15:53] <suman> m: my @test1 = [6,6,4,6,8,6,8,4];my @test2 = [160.0,160.0,108.0,258.0,360.0,225.0];say @test2 Z @test2;

[15:53] <camelia> rakudo-moar 0831a3b5f: OUTPUT: «((160 160) (160 160) (108 108) (258 258) (360 360) (225 225))␤»

[15:53] <tellable6> 2022-02-27T08:31:53Z #raku <nine> suman: https://docs.raku.org/syntax/Coercion%20type

[15:53] <tellable6> 2022-02-27T08:32:00Z #raku <CIAvash> suman: type of $xx values of type `Cool` and `Num` are accepted and values of type `Cool` are coerced to target type `Num` https://docs.raku.org/syntax/Coercion%20type

[15:53] *** jjido joined
[15:53] <suman> Is there something reverse of Z operator to get the arrays back?

[15:54] <suman> m: my @test1 = [6,6,4,6,8,6,8,4];my @test2 = [160.0,160.0,108.0,258.0,360.0,225.0];say @test2 Z @test2;

[15:54] <camelia> rakudo-moar 0831a3b5f: OUTPUT: «((160 160) (160 160) (108 108) (258 258) (360 360) (225 225))␤»

[16:04] *** jjido left
[16:13] <CIAvash> if you meant to write `@test1 Z @test2`, you can run map on the result of `Z`, `(@test1 Z @test2).map: *.head` `(@test1 Z @test2).map: *.tail`. But they have to be the same size if you want everything back

[16:16] <discord-raku-bot> <Nemokosch#9980> anything that could give them back at once?

[16:16] <discord-raku-bot> <Nemokosch#9980> probably categorize or something like that, forgot it

[16:21] <suman> m: my @test1 = [6,6,4,6,8,6]; my @test2 = [160.0,160.0,108.0,258.0,360.0,225.0]; say @test1 Z @test2;

[16:21] <camelia> rakudo-moar 0831a3b5f: OUTPUT: «((6 160) (6 160) (4 108) (6 258) (8 360) (6 225))␤»

[16:21] <suman> It gets what I want. But if I combine my @fathertest = (@test1, @test2);

[16:22] <suman> how to run Z operator within the arrays of `@fathertest`

[16:23] <suman> sometimes it might contain more arrays i.e more than 2

[16:23] <gfldex> zip(|@fathertest)

[16:25] <suman> gfldex it does not give me desired output. I was expecting ((6 160) (6 160) (4 108) (6 258) (8 360) (6 225))

[16:25] <suman> m: my @test1 = [6,6,4,6,8,6]; my @test2 = [160.0,160.0,108.0,258.0,360.0,225.0]; say zip(|@fathertest)

[16:25] <camelia> rakudo-moar 0831a3b5f: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '@fathertest' is not declared␤at <tmp>:1␤------> 360.0,108.0,258.0,360.0,225.0]; say zip(|⏏@fathertest)␤»

[16:26] <suman> m: my @test1 = [6,6,4,6,8,6]; my @test2 = [160.0,160.0,108.0,258.0,360.0,225.0]; my @fathertest = (@test1, @test2);say zip(|@fathertest)

[16:26] <camelia> rakudo-moar 0831a3b5f: OUTPUT: «(([6 6 4 6 8 6] [160 160 108 258 360 225]))␤»

[16:26] <gfldex> dropping the | should work

[16:27] <gfldex> m: my @test1 = [6,6,4,6,8,6]; my @test2 = [160.0,160.0,108.0,258.0,360.0,225.0]; my @fathertest = (@test1, @test2);say zip(@fathertest)

[16:27] <camelia> rakudo-moar 0831a3b5f: OUTPUT: «(([6 6 4 6 8 6] [160 160 108 258 360 225]))␤»

[16:27] <discord-raku-bot> <Nemokosch#9980> it indeed gives the same bad result

[16:27] <discord-raku-bot> <Nemokosch#9980> 😬

[16:27] <CIAvash> m: my @test1 = [6,6,4,6,8,6]; my @test2 = [160.0,160.0,108.0,258.0,360.0,225.0]; my @test3 = @test1, @test2; say [Z] @test3;

[16:27] <camelia> rakudo-moar 0831a3b5f: OUTPUT: «((6 160) (6 160) (4 108) (6 258) (8 360) (6 225))␤»

[16:28] <discord-raku-bot> <Nemokosch#9980> you were faster ^^

[16:28] <discord-raku-bot> <Nemokosch#9980> it would be good to know how zip works, though

[16:28] <suman> CIAvash Perfect (y)

[16:29] <CIAvash> m: my @test1 = [6,6,4,6,8,6]; my @test2 = [160.0,160.0,108.0,258.0,360.0,225.0]; say (@test1 Z @test2).flat.categorize: { $++ %% 2 ?? 'first' !! 'second' } # categorize version for previous question

[16:29] <camelia> rakudo-moar 0831a3b5f: OUTPUT: «{first => [6 6 4 6 8 6], second => [160 160 108 258 360 225]}␤»

[16:30] <gfldex> &zip is just an alias to &infix:<Z>

[16:30] <discord-raku-bot> <Nemokosch#9980> oh yeah 😛

[16:31] <gfldex> and that in turn just calles Rakudo::Iterator.ZipIterables

[16:31] <gfldex> without a capture ...

[16:42] <gfldex> m: my @test1 = [6,6,4,6,8,6]; my @test2 = [160.0,160.0,108.0,258.0,360.0,225.0]; my @fathertest := @test1, @test2; say zip(@fathertest)

[16:42] <camelia> rakudo-moar 0831a3b5f: OUTPUT: «((6 160) (6 160) (4 108) (6 258) (8 360) (6 225))␤»

[16:56] *** abraxxa joined
[17:12] <suman> Is it possible to redefine the parameter of a function inside the function block?

[17:14] <suman> https://andrewshitov.com/2019/10/15/110-is-rw-vs-is-raw-in-raku/

[17:15] <suman> Isn't it possible to provode is rw trait for optional parameter of a function?

[17:22] <discord-raku-bot> <Anton Antonov#7232> I asked this question few weeks ago -- Is there are a way to disable "Live Preview" in Comma / Commaide ?

[17:23] *** mexen left
[17:37] *** suman left
[17:38] <discord-raku-bot> <Anton Antonov#7232> I asked this question few weeks ago -- Is there a way to disable "Live Preview" in Comma / Commaide ?

[17:41] <discord-raku-bot> <Nemokosch#9980> suman is asking some very good questions...

[18:01] *** Shane__ joined
[18:07] *** reportable6 left
[18:08] *** jjido joined
[18:13] *** djerius left
[18:16] *** djerius joined
[18:21] *** donpdonp|z_ joined
[18:22] <donpdonp|z_> I'm freshening up some old raku code and there is a call to 'sub chain_params_by_header(Buf $header) {...' which used to work but now throws 'expected Buf but got Buf (Buf.new(249,190,180,...)' and I'm not sure what the error is saying.

[18:32] <SmokeMachine> bisectable6: say [:bla{ .id }]

[18:32] <bisectable6> SmokeMachine, Will bisect the whole range automagically because no endpoints were provided, hang tight

[18:33] <bisectable6> SmokeMachine, Output on all releases: https://gist.github.com/c7838253ca083f5d09db9674eb382db5

[18:33] <bisectable6> SmokeMachine, More than 4 changes to bisect, please try a narrower range like old=2022.02 new=HEAD

[18:34] *** abraxxa left
[18:52] *** jjido left
[19:04] <SmokeMachine> bisectable6: my %column = :references, :model-name; say so(%column{<model-name model-type>.none}:exists) == so(%column{<model-name model-type>.all}:!exists) # is that expected (that's breaking Red)

[19:04] <bisectable6> SmokeMachine, Will bisect the whole range automagically because no endpoints were provided, hang tight

[19:05] <bisectable6> SmokeMachine, Output on all releases: https://gist.github.com/435c93b83d1fb7d88b0861a1ac678804

[19:05] <bisectable6> SmokeMachine, Bisecting by output (old=2022.02 new=0831a3b) because on both starting points the exit code is 0

[19:05] <bisectable6> SmokeMachine, bisect log: https://gist.github.com/5f9ed9ef5ed7bac881c687f5337b86a0

[19:05] <bisectable6> SmokeMachine, (2022-02-08) https://github.com/rakudo/rakudo/commit/c50f51f9527e39292ccf5ecd89a4788101fe9765

[19:05] <bisectable6> SmokeMachine, Output on all releases and bisected commits: https://gist.github.com/9157675983bd6e0e50ab572e1c28bdf9

[19:43] *** Darkcoal left
[20:09] *** reportable6 joined
[20:11] <nine> donpdonp|z_: is it by any chance possible that you have a class Buf or role Buf somewhere in your code?

[20:23] *** abraxxa-home joined
[20:58] *** [Coke] joined
[20:58] <[Coke]> anyone thought about SignalR on Raku?

[21:07] *** abraxxa-home left
[21:13] *** Shane__ left
[21:18] *** epony joined
[21:24] *** abraxxa-home joined
[21:27] *** jjido joined
[21:28] *** perlbot left
[21:28] *** simcop2387 left
[21:40] *** simcop2387 joined
[21:46] *** simcop2387 left
[21:50] *** simcop2387 joined
[21:52] *** perlbot joined
[22:00] *** abraxxa-home left
[22:00] *** Shane__ joined
[22:49] *** melezhik joined
[22:49] <melezhik> .

[23:17] *** jjido left
[23:26] *** melezhik left
[23:52] *** discord-raku-bot left
[23:53] *** discord-raku-bot joined
