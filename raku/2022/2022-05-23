[00:06] *** reportable6 left
[00:07] *** reportable6 joined
[00:07] *** archenoth left
[00:21] *** jmcgnh joined
[01:13] *** frost joined
[01:56] *** guifa left
[02:03] *** p6steve left
[02:05] *** p6steve_ joined
[02:51] *** jorge joined
[02:51] <jorge> hi

[02:52] <jorge> can I hack people with raku?

[02:58] <Voldenet> computers maybe, but not people

[03:00] *** guifa joined
[03:03] *** jorge left
[03:17] *** Guest35 left
[04:17] *** bloatable6 left
[04:17] *** greppable6 left
[04:17] *** nativecallable6 left
[04:17] *** notable6 left
[04:17] *** quotable6 left
[04:17] *** coverable6 left
[04:17] *** linkable6 left
[04:17] *** benchable6 left
[04:17] *** statisfiable6 left
[04:17] *** bisectable6 left
[04:17] *** releasable6 left
[04:17] *** sourceable6 left
[04:17] *** reportable6 left
[04:17] *** unicodable6 left
[04:17] *** committable6 left
[04:17] *** evalable6 left
[04:17] *** shareable6 left
[04:17] *** tellable6 left
[04:17] *** bisectable6 joined
[04:17] *** releasable6 joined
[04:18] *** sourceable6 joined
[04:18] *** benchable6 joined
[04:19] *** statisfiable6 joined
[04:19] *** bloatable6 joined
[04:19] *** quotable6 joined
[04:19] *** committable6 joined
[04:19] *** coverable6 joined
[04:19] *** greppable6 joined
[04:19] *** reportable6 joined
[04:20] *** evalable6 joined
[04:20] *** tellable6 joined
[04:20] *** nativecallable6 joined
[04:20] *** unicodable6 joined
[04:20] *** linkable6 joined
[04:20] *** notable6 joined
[04:20] *** shareable6 joined
[04:52] *** xinming left
[04:53] *** xinming joined
[04:58] *** Kaiepi left
[05:18] *** perlbot left
[05:18] *** simcop2387 left
[05:19] *** simcop2387 joined
[05:19] *** perlbot joined
[06:07] *** camelia left
[06:07] *** crystalfrost[m] left
[06:07] *** pierrot left
[06:07] *** maettu left
[06:07] *** gordonfish left
[06:07] *** toddr left
[06:07] *** tbrowder left
[06:07] *** merpaderp left
[06:07] *** lucs left
[06:07] *** esh_ left
[06:07] *** SmokeMachine left
[06:07] *** tonyo left
[06:07] *** mtj left
[06:07] *** drakonis left
[06:07] *** maettu joined
[06:07] *** lucs joined
[06:07] *** merpaderp joined
[06:07] *** mtj joined
[06:07] *** esh joined
[06:07] *** lucs left
[06:07] *** lucs joined
[06:07] *** SmokeMachine joined
[06:07] *** tbrowder joined
[06:07] *** drakonis joined
[06:07] *** tonyo joined
[06:07] *** toddr joined
[06:08] *** reportable6 left
[06:08] *** drakonis left
[06:08] *** drakonis joined
[06:08] *** crystalfrost[m] joined
[06:08] *** pierrot joined
[06:08] *** gordonfish joined
[06:09] *** reportable6 joined
[06:14] *** camelia joined
[06:18] *** lockywolf left
[06:18] *** dutchie left
[06:18] *** charsbar left
[06:18] *** pjlsergeant left
[06:18] *** charsbar joined
[06:18] *** pjlsergeant joined
[06:19] *** lockywolf joined
[06:19] *** dutchie joined
[06:23] *** Sgeo_ left
[06:30] <nine> yet

[06:49] *** jjido joined
[07:30] *** abraxxa joined
[07:33] *** abraxxa left
[07:35] *** abraxxa joined
[07:39] *** abraxxa left
[07:40] *** abraxxa joined
[07:42] <moritz> working on it? :D

[07:47] * lizmat is reminded of the final episode of Dollhouse

[07:47] <lizmat> "Despite its best efforts, the L.A. Dollhouse has been unsuccessful in stopping the mind-wiping technology from spreading out of control."

[07:47] <lizmat> "depicts a post-apocalyptic future where the mind-wiping technology of the Dollhouse has developed to the extent that vast numbers of people can be remotely wiped and have new personalities implanted"

[07:48] <lizmat> https://en.wikipedia.org/wiki/Dollhouse_(TV_series)

[07:53] <CIAvash> I'm reminded of Ghost in the Shell

[07:55] <MasterDuke> https://en.wikipedia.org/wiki/The_Left_Hand_(Dollhouse) was a fantastic episode, Victor as Topher was a phenomenal acting job

[07:57] <MasterDuke> also reminiscent of Altered Carbon

[08:02] *** dakkar joined
[08:33] *** jjido left
[09:07] *** frost left
[09:09] *** frost joined
[09:12] *** p6steve_ left
[09:27] *** frost left
[09:41] <kawaii_> Why does smartmatch against true always match?

[09:46] <kawaii_> I've got this sub here, which checks a cache first and then a database if nothing returned from the cache, and I wanted a DRYer way of doing the log output than just if/else based on the state of $cached. https://www.irccloud.com/pastebin/JGXlYhj8/

[09:47] <kawaii_> But apparently I can't use `when True` or `when False` here as they always smartmatch?

[09:49] <MasterDuke> `when * === True` should work

[09:50] *** abraxxa left
[09:51] *** abraxxa joined
[09:52] <kawaii_> oh, they do, thanks!

[09:59] *** abraxxa left
[10:01] *** abraxxa joined
[10:05] *** abraxxa left
[10:06] *** abraxxa joined
[10:09] *** Kaiepi joined
[10:10] <nine> kawaii_: it's simply by definition. It's simply useful to have an "always matching" and "never matching" value, .e.g in $my-version ~~ ($desired-version // True)

[10:24] *** Altai-man joined
[10:37] *** frost joined
[11:13] *** mexen joined
[11:16] *** jjido joined
[11:28] *** maettu left
[11:50] *** maettu joined
[12:06] *** reportable6 left
[12:07] *** reportable6 joined
[12:32] *** jjido left
[12:38] *** jrjsmrtn left
[13:03] *** bigdata joined
[13:14] *** wingfold left
[13:19] *** Sgeo joined
[13:20] *** Sankalp- joined
[13:20] *** Sankalp left
[13:20] *** Sankalp- is now known as Sankalp

[14:12] <moritz> kawaii_: if I remember correctly, it was introduced because people wrote things like { $_ > 0 } or * > 0 as smart-matchers, and those return True when evaluated. If smart-match then went on smart-match the original value against that return value, it would confuse the heck out of everyone

[14:20] *** linkable6 left
[14:20] *** evalable6 left
[14:21] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/05/23/2022-21-math-like/

[14:23] *** evalable6 joined
[14:23] *** linkable6 joined
[14:27] *** Guest35 joined
[14:29] <[Coke]> lizmat++

[14:55] *** frost left
[15:27] *** ChanServ sets mode: +o [Coke]

[15:28] <[Coke]> ? Someone just gave me ops?

[15:30] *** ChanServ sets mode: -o [Coke]

[15:44] <tonyo> fish sucks

[16:01] <[Coke]> squash: what

[16:01] <[Coke]> there used to be a bug called "squashable" - gone, yes?

[16:01] <[Coke]> s/bug/bot/

[16:04] <[Coke]> lizmat: in the live log viewer, topic setting shows as just a send from a user, not that the user has set the topic.

[16:04] <[Coke]> (e.g. raku-doc from a few moments ago)

[16:04] *** Xliff left
[16:10] <Geth> ¦ doc/old-docs: 8e4d915c9b | Coke++ | 3 files

[16:10] <Geth> ¦ doc/old-docs: Remove references to Squashatons

[16:10] <Geth> ¦ doc/old-docs: 

[16:10] <Geth> ¦ doc/old-docs: * explainer doc

[16:10] <Geth> ¦ doc/old-docs: * reference in community page, including defunct bot

[16:10] <Geth> ¦ doc/old-docs: 

[16:10] <Geth> ¦ doc/old-docs: closes #4066

[16:10] <Geth> ¦ doc/old-docs: review: https://github.com/Raku/doc/commit/8e4d915c9b

[16:12] <Geth> ¦ doc/old-docs: 55fe1e9973 | Coke++ | 3 files

[16:12] <Geth> ¦ doc/old-docs: Revert "Remove references to Squashatons"

[16:12] <Geth> ¦ doc/old-docs: 

[16:12] <Geth> ¦ doc/old-docs: This reverts commit 8e4d915c9b1e3654a0cd09f07869f0ffdc4c1fee.

[16:12] <Geth> ¦ doc/old-docs: 

[16:12] <Geth> ¦ doc/old-docs: (Wrong branch, apologies)

[16:12] <Geth> ¦ doc/old-docs: review: https://github.com/Raku/doc/commit/55fe1e9973

[16:12] <Geth> ¦ doc: 165ea10539 | Coke++ | 3 files

[16:12] <Geth> ¦ doc: Remove references to Squashatons

[16:12] <Geth> ¦ doc: 

[16:12] <Geth> ¦ doc: * explainer doc

[16:12] <Geth> ¦ doc: * reference in community page, including defunct bot

[16:12] <Geth> ¦ doc: 

[16:12] <Geth> ¦ doc: closes #4066

[16:12] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/165ea10539

[16:13] *** linkable6 left
[16:14] *** linkable6 joined
[16:38] *** dakkar left
[16:46] *** jjido joined
[17:05] <lizmat> [Coke]: not just on the live view, also on the daily: https://irclogs.raku.org/raku-doc/2022-05-23.html

[17:05] <lizmat> hmmmm

[17:12] *** nebuchadnezzar left
[17:16] *** Altai-man left
[17:24] <tonyo> does finanalyst hang out in here?

[17:26] <lizmat> looks like he last left the channel on 28 Mar 2022

[17:27] <lizmat> https://irclogs.raku.org/search.html?nicks=finanalyst&include-aliases=True&channel=raku

[17:32] *** mexen left
[17:34] <guifa> Would be there a way to do a pragma for different compilers?  Obv we only have Rakudo, so it's pointless, but just thinking if you had code that could be like if $*COMPILER ~~ Rakudo { optimized-NQP-code } else { vanilla-Raku-code }

[17:34] <guifa> I guess maybe Macros could handle that pretty easily

[17:53] *** jrjsmrtn joined
[17:53] <[Coke]> finanalyst is mainly an email person, I think.

[17:54] <[Coke]> He did join the raku-doc call this past weekend, briefly.

[17:54] *** abraxxa left
[17:54] <[Coke]> guifa: assuming macros were evenly distributed across compilers.

[17:54] <[Coke]> m: say $*COMPILER

[17:54] <camelia> rakudo-moar 19c3bd180: OUTPUT: «Dynamic variable $*COMPILER not found␤  in block <unit> at <tmp> line 1␤␤»

[17:55] <guifa> or whatever that dynamic variable was to get at the compiler / VM

[17:55] <[Coke]> but (assuming we find the right var), checking that var is probably easiest.

[17:56] <lizmat> m: say Compiler.new.version

[17:56] <camelia> rakudo-moar 19c3bd180: OUTPUT: «v2022.04.75.g.19.c.3.bd.180␤»

[17:57] <lizmat> m: say Compiler.new.backend

[17:57] <camelia> rakudo-moar 19c3bd180: OUTPUT: «moar␤»

[17:57] <lizmat> m: say Compiler.backend

[17:57] <camelia> rakudo-moar 19c3bd180: OUTPUT: «moar␤»

[17:57] <[Coke]> m: say Compiler.new.keys; # awww

[17:57] <camelia> rakudo-moar 19c3bd180: OUTPUT: «(0)␤»

[17:58] <lizmat> m: say Compiler.^methods

[17:58] <camelia> rakudo-moar 19c3bd180: OUTPUT: «(TWEAK backend id verbose-config supports-op release codename Str gist name auth version signature desc BUILDALL)␤»

[17:58] <[Coke]> m: say Compiler.new.^methods; #ahh

[17:58] <camelia> rakudo-moar 19c3bd180: OUTPUT: «(TWEAK backend id verbose-config supports-op release codename Str gist name auth version signature desc BUILDALL)␤»

[17:59] <[Coke]> heh. I did it in another channel by accident, but you beat me to it. :)

[17:59] <lizmat> m: dd Compiler.new.name

[17:59] <camelia> rakudo-moar 19c3bd180: OUTPUT: «"rakudo"␤»

[18:06] *** reportable6 left
[18:08] *** reportable6 joined
[18:12] <tonyo> m: dd $*VM

[18:12] <camelia> rakudo-moar 19c3bd180: OUTPUT: «VM moar = VM.new(config => {:ar("ar"), :arflags("rcs"), :arout(""), :as("as"), :asm(".s"), :asmout("-o "), :asmswitch("-S"), :auxclean("\@:"), :be("0"), :bindir("/home/camelia/rakudo-m-inst-1/bin"), :booltype("_Bool"), :can_specific_werror("1"), :can_…»

[18:20] *** jjido left
[18:21] *** sftp left
[18:22] *** sftp joined
[18:54] *** zsomta joined
[18:55] *** zsomta left
[19:03] <tbrowder> hi, i have a question about using raku and zef for the debian root user:

[19:04] <tbrowder> does root have to have its own /root/.raku directory?

[19:06] <tbrowder> another question: can the zef executable work properly if linked to /usr/local/bin?

[19:08] <tbrowder> question 3: if root installs a module, where is it stored?

[19:10] <tbrowder> the questions are somewhat rhetorical since i think the zef standards have changed a bit over the years, and also may be implemented differently between os types and whether they are this

[19:11] <tbrowder> *third party packages, local installs, or official packages from the OS provider.

[19:19] <tbrowder> then genesis of my query is the need for spinning up new hosts from a variety of sources such as digital ocean, my favorite bare-iron provider, etc. i would like them all to have the same default behavior: raku (with zef) is installed by root in a location available to all users. when root installs a module with zef, it is installed in the default location for all users to search first.

[19:23] <tbrowder> i am having problems with inconsistent behavior between my primary host having started with raku/zef many years ago versus a new debian 11 host using the rakudo-pkg installation.

[19:41] *** n1to joined
[19:47] *** Xliff joined
[19:48] *** p6steve joined
[19:48] <Xliff> m: my %  = (a => 1, b => 2, c => 3, d => 4); %a.pairs.map( {  .key .= uc if .value %%2 == 0 }); %a.gist.say

[19:48] <camelia> rakudo-moar 19c3bd180: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '%a' is not declared.  Perhaps you forgot a 'sub' if this was␤intended to be part of a signature?␤at <tmp>:1␤------>  %  = (a => 1, b => 2, c => 3, d => 4); ⏏%a.pairs.map( {  .key…»

[19:48] <Xliff> m: my %a = (a => 1, b => 2, c => 3, d => 4); %a.pairs.map( {  .key .= uc if .value %%2 == 0 }); %a.gist.say

[19:48] <camelia> rakudo-moar 19c3bd180: OUTPUT: «Cannot modify an immutable Str (a)␤  in block <unit> at <tmp> line 1␤␤»

[19:48] <Xliff> You can't modify the key of a pair?

[19:49] *** Sauvin left
[19:50] *** Sauvin joined
[19:51] <Xliff> m: my %a = (a => 1, b => 2, c => 3, d => 4); %a.pairs.map( {  .value .= succ if .value %%2 == 0 }); %a.gist.say

[19:51] <camelia> rakudo-moar 19c3bd180: OUTPUT: «{a => 2, b => 2, c => 4, d => 4}␤»

[19:56] <[Coke]> m: say 6 %% 2

[19:56] <camelia> rakudo-moar 19c3bd180: OUTPUT: «True␤»

[19:56] <[Coke]> m: say 6 % 2

[19:56] <camelia> rakudo-moar 19c3bd180: OUTPUT: «0␤»

[19:56] <[Coke]> fyi

[20:39] *** guifa left
[20:52] *** jrjsmrtn left
[20:53] *** merpaderp left
[20:53] *** jrjsmrtn joined
[20:54] *** merpaderp joined
[21:11] *** discord-raku-bot left
[21:12] *** discord-raku-bot joined
[21:18] *** guifa joined
[21:39] *** bigdata left
[22:00] *** jj58 joined
[22:04] *** jjido joined
[22:04] *** n1to left
[22:07] *** jj58 left
[22:46] *** Xliff_ joined
[23:03] <[Coke]> should we remove REA from default zef searches?

[23:03] <[Coke]> shouldn't dead modules be the sort of thing you have to go looking for?

[23:04] <[Coke]> ah, not just dead but also "slightly out of date but still a prereq for something". nevermind

[23:14] *** grondilu joined
[23:15] <grondilu> I get an annowing warning "unhandled Failure in DESTROY".

[23:15] <grondilu> since it's during destruction, it's kind of hard to debug.

[23:16] <grondilu> also it's not consistent: sometimes it appears, sometimes not.

[23:16] <grondilu> it shows about once at of ten on some minimal code I wrote.

[23:17] <grondilu> but everytime on the original code.

[23:17] <grondilu> here is the "minimal code" : https://gist.github.com/grondilu/39bcb969f7aaca7c38ae2533a1289049

[23:17] <grondilu> it's not really small, but hopefully it's clear enough.

[23:18] <grondilu> I could possibly try to minimalize it more, but since the warning does not show at each execution, it's kind of hard to find the truly minimal version.

[23:19] <grondilu> it's for my chess module FYI

[23:19] <grondilu> it might be related to https://github.com/rakudo/rakudo/issues/4852

[23:20] <Xliff_> grondilu: Have you tried adding a "submethod DESTROY { CATCH { default { .message.say; .backtrace.concise.say } }; nextsame }" to class Square?

[23:20] <grondilu> no, I haven't

[23:21] <Xliff_> Let me know if that works for you.

[23:22] <grondilu> I've just tried on my original code, which complains all the time, and I see no differencee

[23:23] <grondilu> (actually almost all the time)

[23:28] <Xliff_> Ah well, it was worth a shot.

[23:31] <Xliff_> grondilu: You might want to range check your .pred calls

[23:31] <Xliff_> m: 0.pred.say

[23:31] <camelia> rakudo-moar 19c3bd180: OUTPUT: «-1␤»

[23:31] <Xliff_> m: Nil.pred.say

[23:31] <camelia> rakudo-moar 19c3bd180: OUTPUT: «Nil␤»

[23:32] <Xliff_> m: 'a'.pred.say

[23:32] <camelia> rakudo-moar 19c3bd180: OUTPUT: «Decrement out of range␤  in block <unit> at <tmp> line 1␤␤»

[23:32] <Xliff_> grondilu: ^^ 

[23:32] *** jjido left
[23:32] <grondilu> oh yes but in my original code I had a subset so -1 was supposd to generate an error too

[23:34] * grondilu edited the gist

[23:36] <grondilu> what I don't get is why would DESTROY call .left?

[23:40] *** grondilu left
[23:42] *** silug left
[23:43] *** silug joined
[23:55] <Xliff_> grondilu: Donno. But sticking a guard on that would effectively kill the Failure.

[23:55] <tellable6> Xliff_, I'll pass your message to grondilu

