[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:41] *** razetime joined
[00:43] <grondilu> a not-so-common error message:

[00:44] <grondilu> m: sub { await Promise.in(2).then: { return pi } }(

[00:44] <camelia> rakudo-moar 7e69a6de5: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> ait Promise.in(2).then: { return pi } }(⏏<EOL>␤    expecting …»

[00:44] <grondilu> hang on

[00:44] <grondilu> m: sub { await Promise.in(2).then: { return pi } }()

[00:44] <camelia> rakudo-moar 7e69a6de5: OUTPUT: «MoarVM panic: Internal error: Unwound entire stack and missed handler␤»

[00:48] *** grondilu left
[01:03] *** xinming left
[01:05] <guifa> Xliff: for your sub a($a, $b, $c, $d), yes, although you'd write the sub as sub a($a, $b, $c = c-param.EVAL, $d) { … }

[01:05] <guifa> although at that rate, you could just say $c = c-param, and in c-param, go ahead and handle the EVAL process

[01:05] *** xinming joined
[01:24] *** jpn left
[01:50] *** jpn joined
[02:25] *** jpn left
[02:38] *** jpn joined
[02:44] *** jpn left
[02:47] *** xinming left
[02:48] *** xinming joined
[02:55] *** MasterDuke left
[02:57] *** jpn joined
[03:01] *** jpn left
[03:13] *** jpn joined
[03:57] *** kjp left
[04:00] *** kjp joined
[04:03] <Xliff> guifa: Sorry, I don't think so. I'm trying to CREATE the $c parameter. Not assign a default value to it.

[04:03] <Xliff> I may just have to wait until Macros... :(

[04:04] *** Xliff left
[04:30] *** jpn left
[04:44] *** jpn joined
[04:50] *** jpn left
[05:03] *** jpn joined
[05:06] *** discord-raku-bot left
[05:09] *** discord-raku-bot joined
[05:19] *** discord-raku-bot left
[05:19] *** jpn left
[05:36] *** razetime left
[05:36] *** razetime joined
[05:41] *** discord-raku-bot joined
[05:45] *** jpn joined
[05:49] *** discord-raku-bot left
[05:51] *** jpn left
[05:58] *** jpn joined
[06:00] *** reportable6 left
[06:01] *** discord-raku-bot joined
[06:02] *** reportable6 joined
[06:03] *** jpn left
[06:06] *** discord-raku-bot left
[06:17] *** jpn joined
[06:48] *** abraxxa joined
[06:53] *** spacebat11 joined
[06:53] *** abraxxa left
[06:54] *** abraxxa joined
[07:06] *** jpn left
[07:08] *** squashable6 left
[07:10] *** squashable6 joined
[07:19] *** jpn joined
[07:24] *** jpn left
[07:37] *** jpn joined
[07:42] *** spacebat11 left
[07:47] *** discord-raku-bot joined
[07:49] *** discord-raku-bot left
[07:49] *** discord-raku-bot joined
[07:54] *** discord-raku-bot left
[07:59] *** discord-raku-bot joined
[08:00] *** discord-raku-bot left
[08:21] *** perlbot left
[08:21] *** simcop2387 left
[08:21] *** perlbot joined
[08:24] *** simcop2387 joined
[08:39] *** jpn left
[08:51] *** Sgeo left
[08:51] *** jpn joined
[08:54] *** sena_kun joined
[08:57] *** jpn left
[09:01] *** jpn joined
[09:04] *** tejr left
[09:05] *** spacebat10 joined
[09:10] *** dakkar joined
[09:14] *** sena_kun left
[09:20] *** sena_kun joined
[09:26] *** spacebat10 left
[10:26] *** linkable6 left
[10:26] *** evalable6 left
[10:28] *** linkable6 joined
[10:28] *** evalable6 joined
[11:23] <guifa> aaaaaah, yeah that'll be macros, unless you're willing to the do the whole sub via RakuAST

[11:28] *** evalable6 left
[11:28] *** linkable6 left
[11:31] *** evalable6 joined
[11:31] *** linkable6 joined
[11:33] *** jpn left
[11:38] *** jpn joined
[11:44] *** epony left
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:29] *** Kaiepi left
[12:56] *** Kaiepi joined
[13:37] *** jpn left
[14:00] *** jpn joined
[14:03] *** mscha joined
[14:05] *** jpn left
[14:06] <mscha> m: say ?(1..10).grep({ say $_; $_ == 5 });

[14:06] <camelia> rakudo-moar d371cb513: OUTPUT: «1␤2␤3␤4␤5␤True␤»

[14:07] <mscha> Grep shortcuts in boolean context, is that guaranteed/documented?

[14:07] <mscha> (Not at https://docs.raku.org/routine/grep it seems)

[14:09] *** epony joined
[14:17] *** discord-raku-bot joined
[14:19] *** jpn joined
[14:27] <hobbified> I think it's an Iterable laziness thing rather than a specific behavior of grep

[14:32] <hobbified> coercing to bool asks "can this produce at least one thing?", and asking grep to produce one thing means it will consume input until either one thing matched or it reaches the end.

[14:33] <hobbified> m: say (1..10).grep({ say $_; $_ %% 2 })[^3]

[14:33] <camelia> rakudo-moar d371cb513: OUTPUT: «1␤2␤3␤4␤5␤6␤(2 4 6)␤»

[14:33] <mscha> Ah, OK, that makes sense

[14:37] *** razetime left
[15:27] *** mscha left
[15:39] *** Sgeo joined
[15:52] *** perlbot left
[15:53] *** simcop2387 left
[15:53] *** perlbot joined
[15:55] <discord-raku-bot> <Nemokosch> leont: good sir, could be that I have asked you before...

[15:56] *** simcop2387 joined
[15:56] <discord-raku-bot> <Nemokosch> do you know something about imported MAIN candidates and their limitations? some things are set to break apparently

[15:57] <discord-raku-bot> <Nemokosch> not only enum arguments - that I already knew

[15:58] <discord-raku-bot> <Nemokosch> but array arguments of Getopt::Long also stopped working when I imported MAIN from another module that does the heavy lifting

[15:59] <leont> That does not ring a bell

[16:00] <leont> Though it is important that «use Getopt::Long;» happens in the primary scope, not (only) in the module where the MAIN subs are defined

[16:01] <discord-raku-bot> <Nemokosch> that's already a good hint because I didn't do that for sure

[16:01] <discord-raku-bot> <Nemokosch> although it seemed that Unix-style argument parsing did kinda work

[16:20] <leont> In case of doubt, look at what App::Prove6 does :-p

[16:21] <discord-raku-bot> <Nemokosch> okay, thankies

[16:56] *** linkable6 left
[16:56] *** evalable6 left
[16:57] *** linkable6 joined
[16:59] *** evalable6 joined
[17:29] *** mscha joined
[17:30] *** mscha left
[17:44] *** dakkar left
[17:56] *** jpn left
[17:57] *** ProperNoun left
[17:58] *** jpn joined
[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:02] *** ProperNoun joined
[18:06] *** abraxxa left
[18:25] *** sena_kun left
[18:26] *** sena_kun joined
[19:07] *** perlbot left
[19:07] *** perlbot joined
[19:15] *** tejr joined
[19:34] *** tejr left
[19:38] *** jpn left
[19:45] *** abraxxa-home joined
[20:00] *** tejr joined
[20:03] *** jpn joined
[20:35] <Geth> ¦ doc: codesections++ created pull request #4177: Add scrollbar for navbar

[20:36] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4177

[21:03] *** linkable6 left
[21:03] *** evalable6 left
[21:05] *** evalable6 joined
[21:05] *** linkable6 joined
[21:06] *** jpn left
[21:17] *** jpn joined
[21:40] *** MasterDuke joined
[21:42] *** jpn left
[22:01] *** sena_kun left
[22:25] *** perlbot left
[22:26] *** simcop2387 left
[22:27] *** simcop2387 joined
[22:42] *** abraxxa-home left
[22:43] *** abraxxa-home joined
[22:43] *** perlbot joined
[22:48] <Geth> ¦ docker: m-dango++ created pull request #51: Bump to 2022.12

[22:48] <Geth> ¦ docker: review: https://github.com/Raku/docker/pull/51

[22:53] *** jpn joined
[22:57] *** jpn left
[23:03] *** hobbified left
[23:35] *** jpn joined
[23:54] *** MitarashiDango[m joined
