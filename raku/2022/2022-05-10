[00:07] *** reportable6 left
[00:07] *** reportable6 joined
[00:42] *** frost joined
[01:42] *** committable6 left
[01:42] *** statisfiable6 left
[01:42] *** benchable6 left
[01:42] *** bisectable6 left
[01:42] *** notable6 left
[01:42] *** quotable6 left
[01:42] *** greppable6 left
[01:42] *** shareable6 left
[01:42] *** linkable6 left
[01:42] *** evalable6 left
[01:42] *** reportable6 left
[01:42] *** releasable6 left
[01:42] *** tellable6 left
[01:42] *** sourceable6 left
[01:42] *** unicodable6 left
[01:42] *** nativecallable6 left
[01:42] *** coverable6 left
[01:42] *** bloatable6 left
[01:43] *** statisfiable6 joined
[01:43] *** benchable6 joined
[01:43] *** notable6 joined
[01:43] *** greppable6 joined
[01:43] *** sourceable6 joined
[01:44] *** evalable6 joined
[01:44] *** coverable6 joined
[01:44] *** bisectable6 joined
[01:44] *** reportable6 joined
[01:45] *** releasable6 joined
[01:45] *** tellable6 joined
[01:45] *** shareable6 joined
[01:45] *** nativecallable6 joined
[01:45] *** bloatable6 joined
[01:45] *** committable6 joined
[01:45] *** linkable6 joined
[01:45] *** quotable6 joined
[01:46] *** unicodable6 joined
[01:56] <[Coke]> codesections: is there some process that needs to occur to accept https://github.com/Raku/problem-solving/pull/325 ?

[02:13] <tonyo> where's JJ goin?

[02:35] *** Sankalp left
[02:47] *** Sankalp joined
[03:01] *** razetime joined
[03:22] *** Guest35 left
[03:27] *** Kaiepi left
[03:56] *** melezhik joined
[03:58] <melezhik> .tell SmokeMachine I've added badges to SparkyCI , you need to go "My repos"-> "Badge" link . The service itself is still not stable, so sometime API becomes unavailable, sorry ahead of time, I am working on it, however not sure how soon I can nail it down ...

[03:58] <tellable6> melezhik, I'll pass your message to SmokeMachine

[03:59] *** razetime left
[03:59] <melezhik> .tell SmokeMachine an example of badge for test GH project is here - https://github.com/melezhik/rakudist-teddy-bear/blob/master/README.md

[03:59] <tellable6> melezhik, I'll pass your message to SmokeMachine

[04:00] *** razetime joined
[04:01] *** coleman left
[04:03] *** melezhik left
[04:17] *** Kaiepi joined
[04:46] *** abraxxa-home joined
[04:51] *** abraxxa-home left
[04:52] *** abraxxa-home joined
[05:01] *** mavles joined
[05:02] *** Xliff left
[05:02] *** Xliff joined
[05:03] *** Xliff1 left
[05:03] * mavles Rolls a 6 sided dice and gets 1

[05:09] *** mavles left
[05:14] <CIAvash> skimmed over https://www.reddit.com/r/rakulang/comments/uk4dv5/everything_is_an_object/, I'd appreciate it if people avoided down-votes and snarky comments

[05:57] *** mexen joined
[06:07] *** reportable6 left
[06:10] *** reportable6 joined
[06:16] *** Sgeo left
[06:26] *** frost left
[06:38] *** jjido joined
[06:39] *** poyo joined
[06:42] *** poyo left
[06:59] *** grondilu joined
[06:59] <grondilu> hi

[07:05] *** jjido left
[07:14] *** sftp left
[07:16] <discord-raku-bot> <Nemokosch#9980> Hello

[07:17] <discord-raku-bot> <Nemokosch#9980> I think you guys are putting way too much effort into reddit people who know everything better but it turns out there is one thing they really know better: shitposting

[07:23] <discord-raku-bot> <Nemokosch#9980> Anyway, if this is a way to get elaborate answers, I will collect the things that bother me and put them into one reddit post :)

[07:25] *** jmcgnh joined
[07:28] <Geth> ¬¶ problem-solving: 4fc031ba7d | (Will Coleda)++ (committed using GitHub Web editor) | 2 files

[07:28] <Geth> ¬¶ problem-solving: Volunteer for Doc wrangling (#325)

[07:28] <Geth> ¬¶ problem-solving: 

[07:28] <Geth> ¬¶ problem-solving: Resolves #324  Force merged to be able to keep momentum.

[07:28] <Geth> ¬¶ problem-solving: review: https://github.com/Raku/problem-solving/commit/4fc031ba7d

[07:32] <grondilu> m: sub ($a) { { my $a = $a; } }

[07:32] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Cannot use variable $a in declaration to initialize itself‚ê§at <tmp>:1‚ê§------> sub ($a) { { my $a = $‚èèa; } }‚ê§    expecting any of:‚ê§        term‚ê§¬ª

[07:32] * grondilu thought this was ok

[07:33] <grondilu> I mean I'm creating a new lexical scope

[07:34] <Xliff> P6-GLib just exceeded 680,000 LOC with raku-Dazzle's 112th commit! :>

[07:35] <Xliff> https://github.com/Xliff/raku-Dazzle/commit/3b189fa464beb095740c27824c75ab4d97102dd6

[07:39] *** yauhen joined
[07:43] <grondilu> m: sub ($a) { { my $a = $OUTER::a; } }

[07:43] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of anonymous sub, did you forget to provide a name? (line 1)‚ê§¬ª

[07:43] <grondilu> m: sub ($a) { { my $a = $OUTER::a; } }(pi)

[07:43] <camelia> rakudo-moar 530e17848: ( no output )

[07:44] *** abraxxa-home left
[07:48] *** abraxxa joined
[07:50] *** frost joined
[07:51] <yauhen> Uploaded file: https://uploads.kiwiirc.com/files/a78454df01f3172aacf5fe60d4765d92/pasted.txt

[07:51] <yauhen> hi people. i have two versions of recurse 'dir'.

[07:52] <SmokeMachine> .tell melezhik thanks! I‚Äôll add that to Red!

[07:52] <tellable6> SmokeMachine, I'll pass your message to melezhik

[07:53] <yauhen> found mistake. forget )))

[07:53] *** yauhen left
[07:53] *** abraxxa left
[07:54] *** abraxxa joined
[08:06] *** razetime left
[08:13] *** dakkar joined
[08:16] *** lichtkind_ joined
[08:32] *** yauhen joined
[08:35] <yauhen> hi. i have problems with 'run' any process on windows. if i go it after starting raku from inside cmd after 'chcp 65001' everything works ok. but if i just start raku that i see incorrect symbols for non-unicode chars. can somebody help? i use command 'c:\rakudo\bin

[08:36] <yauhen> i use command 'c:\rakudo\bin\raku.exe -I c:\rakudo\lib'.

[08:57] *** razetime joined
[08:58] <dakkar> "non-unicode"?

[08:58] <dakkar> do you mean "non-ASCII"?

[08:59] <dakkar> (printing non-ASCII characters in terminals is generally a mess, doing it portably to every OS/terminal/setting is sadly nearly impossible, but maybe rakudo can do it better than it does currently, sometimes)

[08:59] <dakkar> also, what version of rakudo are you using?

[09:02] <yauhen> default encoding was 866 (chcp)

[09:02] <yauhen> v2022.04.

[09:06] * dakkar looks up what 886 is

[09:06] <dakkar> 866, even

[09:06] <dakkar> ah yes, that would screw things up

[09:07] <dakkar> so, keep in mind I haven't touched Windows in over 20 years‚Ä¶

[09:07] <dakkar> my understanding is:

[09:07] <dakkar> * your terminal (before `chcp 65001`) expects to receive bytes representing latin+cyrillic characters

[09:08] <dakkar> * rakudo sends bytes representing the utf-8 encoding of any character

[09:08] <dakkar> * you see apparently-random symbols on screen

[09:09] <dakkar> I do not believe there is a way for rakudo to know what encoding your terminal expects, and I'm not sure it's a good idea for rakudo to forcibly change your terminal encoding

[09:09] <dakkar> but I hope to be wrong on that

[09:09] <dakkar> short version: you need `chcp 65001`

[09:11] <dakkar> or a time machine to go back to the '70s and explain to software people back then that every byte stream needs to declare its encoding, even when it feels like it's a waste of bandwidth

[09:12] <discord-raku-bot> <Nemokosch#9980> üòÇ

[09:18] <grondilu> maybe you can use 'run' in binary and do the encoding of the output yoursely

[09:18] <grondilu> *yourself

[09:18] <yauhen> "short version: you need `chcp 65001`"

[09:18] <yauhen> yes. i use sometime cmd and starting raku from inside cmd. but i'd like start raku immediately and use correct output for 'dir'

[09:18] <dakkar> oh, I may have mis-understood your problem

[09:19] <yauhen> "maybe you can use 'run' in binary and do the encoding of the output yoursely"

[09:19] <yauhen> i think 'shell <dir>' would work but i'd like use builtin functions

[09:20] <grondilu> you could also make a batch file that starts raku in cmd

[09:20] <dakkar> so the problem is that the strings returned by `dir` look wrong? can you show us a minimal program that exhibits the problem?

[09:20] <yauhen> minimal program is `dir` :-)

[09:21] <grondilu> so `run 'dir'`, right?

[09:22] * grondilu realizes `dir` is a raku routine too

[09:22] <grondilu> m: dir

[09:22] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´Failed to get the directory contents of '/home/camelia': Failed to open dir: Permission denied‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:22] <yauhen> Uploaded file: https://uploads.kiwiirc.com/files/1fabce5e73015994ccb57071bd68ad4b/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png

[09:22] <yauhen> Uploaded file: https://uploads.kiwiirc.com/files/4e94a42e283d15f8b35df58886dcc55c/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png

[09:22] <dakkar> ooh, nice, thank you

[09:23] <dakkar> so, I'm pretty sure everything I said above still stands

[09:24] <dakkar> the `dir` function returns a list of `IO::Path` objects, each containing the name of an entry in the on-disk directory you asked for

[09:24] *** razetime left
[09:24] <grondilu> isn't there a $*ENCODING variable or something, to specify specific default encoding?

[09:24] *** razetime joined
[09:25] <dakkar> when *printing* them, rakudo sends to the terminal a sequence of bytes representing the utf-8 encoding of the characters in strings

[09:25] <dakkar> your terminal thinks it's getting cp866 bytes instead, and dutifully interprets them that way

[09:25] <dakkar> result: apparent garbage

[09:25] <yauhen> "so, I'm pretty sure everything I said above still stands"

[09:25] <yauhen> it works so only because i made change for cmd on startup `chcp 65001`

[09:25] <yauhen> @chcp 65001>nul

[09:26] <dakkar> I'm pretty sure `chcp` tells *the terminal* what to expect

[09:27] <yauhen> "I'm pretty sure `chcp` tells *the terminal* what to expect"

[09:27] <yauhen> yes. and how can i say to Raku what to expect? something like `enc => 'this is Microsoft, Dude'`

[09:27] <dakkar> you need to tell raku what to *produce*, not what to expect ‚ò∫

[09:27] <dakkar> I'm checking if `$*OUT.encoding(...)` does anything useful

[09:28] <dakkar> it should, but your preferred terminal encoding is almost certainly not supported

[09:29] <dakkar> https://docs.raku.org/type/IO::Handle#method_encoding

[09:29] <dakkar> so, summary:

[09:29] <dakkar> * the data inside the program is "correct", you can check the length of the various path names, match them with regexes, &c

[09:30] <dakkar> * rakudo can't (at the moment) produce the encoding you use for your terminal

[09:30] <dakkar> * `chcp 65001` (in other words, using UTF-8 as terminal encoding) is the "correct" way to see the correct symbols when rakudo prints them out

[09:31] <yauhen> there is no useful encoding for my case. something changes only for 'windows-125[1,2]' and 'windows-932'. another encodings causes error.

[09:31] <dakkar> (and yes, I understand this is not a great situtation, I've already expressed my thoughts on the general mess‚Ä¶)

[09:31] *** frost left
[09:31] <dakkar> yes

[09:32] <dakkar> the thing is not "this is Microsoft", the thing is "I'm using a Microsoft-specific encoding from the '90s that can't represent most of the characters that rakudo wants to use"

[09:32] <yauhen> i'm understand

[09:34] <yauhen> but if i can start Raku in correct encoding from outside cmd why i cannot start it correct without cmd? maybe there is some variable or process string that REPL use when start and i can modify this for myself?

[09:34] <dakkar> as I understand it, you are changing the encoding of your *terminal*, not of rakudo

[09:35] <dakkar> have you tried running `shell <chcp 65001>` from inside rakudo?

[09:35] <dakkar> (I may be wrong here, as I don't use Windows‚Ä¶)

[09:38] *** sftp joined
[09:39] *** frost joined
[09:42] *** zmoment left
[09:44] *** zmoment joined
[09:54] <yauhen> Uploaded file: https://uploads.kiwiirc.com/files/987898c759cf1ad9901be5dbbd26dfe0/%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5.png

[09:54] <dakkar> well, *something* changed

[09:55] <dakkar> but at this point I've reached the end of my understanding of Windows, so you'll need to wait for someone else to help

[09:56] <dakkar> (btw, `dir <d:\>` is probably better written as `dir 'd:\'`, the <> produce a list, which is not always what you want/need)

[09:57] <yauhen> i'm understanding how it works. works fine but i just need use correct environment encoding. i don't want changing whole system encoding for that purpose.

[09:59] *** yauhen left
[10:09] *** Guest76 joined
[10:09] *** Guest76 left
[10:25] *** euandreh left
[10:57] *** peder left
[10:59] *** peder joined
[11:32] *** wingfold joined
[11:53] <SmokeMachine> is anyone else also having this problem? https://github.com/FCO/Red/runs/6369311220?check_suite_focus=true

[11:53] <tellable6> 2022-05-10T03:59:43Z #raku <melezhik> SmokeMachine an example of badge for test GH project is here - https://github.com/melezhik/rakudist-teddy-bear/blob/master/README.md

[11:53] <tellable6> hey SmokeMachine, you have a message: https://gist.github.com/c78c07d24c8744f27fceefda851facd0

[11:56] *** jjido joined
[11:59] <SmokeMachine> .tell melezhik Thanks! Just added that to Red's README!

[11:59] <tellable6> SmokeMachine, I'll pass your message to melezhik

[12:04] *** frost left
[12:04] <Geth> ¬¶ ecosystem: f764e8dd1c | (Elizabeth Mattijsen)++ | META.list

[12:04] <Geth> ¬¶ ecosystem: Freeze Netstring

[12:04] <Geth> ¬¶ ecosystem: 

[12:04] <Geth> ¬¶ ecosystem: While we move it to the fez ecosystem

[12:04] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/f764e8dd1c

[12:06] *** reportable6 left
[12:09] *** reportable6 joined
[12:13] <CIAvash> SmokeMachine: `:` in `https%3A` is encoded in that version in REA, I think that's why it fails

[12:14] <CIAvash> lizmat: ‚Üë

[12:15] <lizmat> argh.. did I screw up ?

[12:17] <CIAvash> too much encoding üòÄ  colon in `https:` gets encoded as well, not just the name of the files

[12:20] <lizmat> updated the META on the REA, a zef update should give you fixed URLs

[12:25] <CIAvash> SmokeMachine: It should work now, lizmat++

[12:30] *** jjido left
[12:44] <Geth> ¬¶ ecosystem: b1196385fc | (Elizabeth Mattijsen)++ | META.list

[12:44] <Geth> ¬¶ ecosystem: Remove Toaster

[12:44] <Geth> ¬¶ ecosystem: 

[12:44] <Geth> ¬¶ ecosystem: It will continue to live in the REA

[12:44] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/b1196385fc

[13:23] *** Guest35 joined
[13:25] *** Sgeo joined
[13:26] *** patrickb left
[13:27] *** patrickb joined
[13:27] *** jjido joined
[13:33] <SmokeMachine> thank you CIAvash and lizmat !

[13:40] *** Sankalp left
[13:41] *** coleman joined
[13:47] *** euandreh joined
[13:49] *** Sankalp joined
[13:54] *** coleman left
[14:01] *** jjido left
[14:10] *** wingfold left
[14:17] *** discord-raku-bot left
[14:17] *** discord-raku-bot joined
[14:28] *** Kaiepi left
[14:48] *** somebody joined
[14:56] <somebody> hi. this example doesn't work. https://examples.raku.org/categories/interpreters/calc.html

[14:56] <somebody> returns '()'.

[14:56] <somebody> I don't have working example that had made today. But when I had used this example as 'unit module Calc;' then 'my grammar Arith { * }' and 'sub calc($input)', this example worked fine

[14:56] <tellable6> 2022-04-18T19:54:14Z #raku <[Coke]> somebody https://stackoverflow.com/questions/27156329/how-do-i-invoke-a-java-method-from-perl6

[15:00] <dutchie> somebody: that example appears to use the deprecated `$()` where `$/.made` should be used now https://docs.raku.org/language/variables#The_$/_variable

[15:03] <dutchie> alternatively change `use v6;` to `use v6.c;`

[15:04] <somebody> works. thanks

[15:20] *** somebody left
[15:34] *** Kaiepi joined
[16:14] *** kaskal joined
[16:24] *** razetime left
[16:29] *** grondilu left
[16:31] *** grondilu joined
[16:35] *** somebody joined
[16:35] *** dakkar left
[16:49] *** somebody left
[16:51] *** Kaiepi left
[16:54] <grondilu> sometimes I hate programming.

[16:55] <grondilu> I thought I was making progress on my protobuf library.

[16:56] *** vrurg left
[16:56] <grondilu> even though I had to write what I consider ugly code.   Lots of arbitrary hash structures, if/then test on these structures, and `die` at pretty much every steps to check hash values.

[16:57] <grondilu> I thought I had written the worst part of it.

[16:57] *** londoed__ left
[16:57] <grondilu> and then I realize I have to implement the equivalent of lexical scopes.

[16:57] <grondilu> which I will have to do with yet an other set of if/then/die and so on.

[16:59] <grondilu> I'm sure it would be simpler with MOP, but I can't resolve myself to try that for some reason.

[16:59] *** mexen left
[17:00] <grondilu> japhb: you there?

[17:01] <grondilu> honestly I wish someone would write this library instead of me.  Such a hassle to design.

[17:05] *** dogbert11 left
[17:09] *** Kaiepi joined
[17:13] *** jjido joined
[17:15] <grondilu> All implementations of this library do code generation.  I somehow try not to because I don't understand the MOP, but damn that makes it hard.  I guess there is a reason they do code generation.

[17:15] *** londoed joined
[17:26] *** Kaiepi left
[17:45] <kaskal> maybe it is a good chance to test RakuAST? 

[17:47] <lizmat> fwiw, I was thinking the same thing

[17:48] *** Kaiepi joined
[17:49] *** bigdata joined
[17:52] <japhb> grondilu: I am now.  What's up (I haven't backlogged in this channel)

[17:52] <japhb> ?

[17:53] <japhb> grondilu: Protocol Buffers and their API were literally *designed* with code generation in mind.  The experience of which is why one of the original protobuf authors went off and did Cap'n Proto.

[17:53] <grondilu> yeah

[17:54] <grondilu> I think it's doable without code generation but I'm getting discouraged

[17:54] <japhb> Protocol Buffers are so badly statically designed, that's why I eventually said (even *with* MOP help) that it wasn't worth it to me to finish the work I was doing with samuraisam.

[17:55] <japhb> So ... I certainly understand the sentiment.

[17:55] <grondilu> yet, raku is supposed to be great at generating code.  

[17:55] <grondilu> but the MOP is kind of non-beginner friendly, I think

[17:56] <japhb> I mean, it is, but you have to realize: The protobuf people designed it in such a way that eventually java compilers couldn't even *compile* the code that protobuf generates.  There was an emergency get-all-the-principle-engineers-together meeting to work around that one, let me tell you.

[17:57] <japhb> grondilu: Yeah, it takes some time to get any comfort with the MOP -- and I don't even use it all that often.

[17:58] <grondilu> I've seen in your code that you used nqp.  I don't want to have to do that :/

[17:58] <japhb> I will say that it is worth the time investment -- I find just being able to use it for *inspection* is pretty valuable for really deep debugging.  And it makes automatic code generation way easier.  :-)

[17:58] <japhb> Well part of that is stuff that didn't have a non-NQP API back then.

[17:59] <grondilu> would you consider modernizing your code so I could re-use part of it, if not all?

[17:59] <japhb> And as kaskal and lizmat were saying, this is one of those places where a lot of effort is being put into RakuAST to *have* a decent API for a lot of that stuff, rather than hacks or NQP delving.

[17:59] <grondilu> yeah but I don't want to wait for RakuAST to be ready

[18:00] <grondilu> who knows how long it could take

[18:00] <japhb> grondilu: I would say yes if my time weren't very much spoken for right now by $day-job.

[18:00] <kaskal> AFAIK a whole lot is ready in rakuAST right ? 

[18:01] <tonyo> why we're replacing macros with code generation boggles my mind

[18:01] <lizmat> indeed..  I'd say code generation is  pretty feasible atm, I already did the work to make sprintf formatting generate code

[18:01] <japhb> grondilu: nine++ has been doing a ton of work on it recently.  He's gotten to the point (as of last weekend, I think) that he's working on precomp for it.

[18:01] <Kaiepi> code generation...?

[18:01] <lizmat> rather than parsing the format over and over again

[18:01] <tonyo> or, why go does, specifically

[18:01] <lizmat> there are two aspects to RakuAST branch:

[18:01] <japhb> tonyo: Difference between semantic macros and syntactic macros.

[18:01] <lizmat> 1. creating an API to create code

[18:02] <lizmat> 2. use that API to build a new grammar to parse Raku code

[18:02] <lizmat> the first part is largely done

[18:02] <lizmat> and that's the part you'd need

[18:02] <grondilu> "a new grammar to parse Raku code"  you mean you're going to write a new raku grammar?

[18:03] <grondilu> a new STD?

[18:03] <japhb> tonyo: To be clear, RakuAST allows you to directly build the *structure* of the code, rather than the *strings* that would need to be parsed.

[18:03] <El_Che> no matter the language, when I get the message "you need to generate code" I back away

[18:03] <japhb> El_Che: What I said to tonyo.  :-)

[18:04] <lizmat> grondilu: a new grammar in the sense of a new Grammar class, which would support what the Raku grammar supports today

[18:04] <grondilu> ok

[18:04] <lizmat> grondilu: this is *not* about creating a new language, the farthest away from that

[18:04] <lizmat> composability of this new grammar is the most important goal

[18:05] <lizmat> so, there will no longer be a src/Perl6/World.nqp to keep state

[18:06] <grondilu> look what I wrote to encode a protobuf : https://github.com/grondilu/protobuf-raku/blob/e70a429e30f3c2b01d3544e6489a2ed51a6eb58d/lib/Google/ProtocolBuffers.rakumod#L157

[18:06] <grondilu> I don't think I have ever been so disgusted by something I wrote

[18:07] <grondilu> but right now, it's the only raku code I know of that can encode protobufs :/

[18:07] *** reportable6 left
[18:07] <grondilu> as I've said, I'm getting discouraged.  Maybe I should wait for rakuAST indeed.

[18:08] *** reportable6 joined
[18:08] <japhb> grondilu: https://github.com/samuraisam/p6-pb/blob/master/lib/PB/Binary/Writer.pm -- or are you working at a different level in the protobuf stack in your code?

[18:09] <grondilu> oh I thought you weren't doing encoding

[18:09] <japhb> Hah!  That code is so old that #| hadn't been fixed yet

[18:10] <japhb> grondilu: https://github.com/samuraisam/p6-pb/tree/master/lib/PB/Binary is the binary R/W layer in the code I worked on

[18:11] <grondilu> I'll look at it more

[18:11] <grondilu> japhb: do you know about the conformance test program?

[18:12] <japhb> (Yes, it contains nqp code for writing to the buffers -- the native-value-writing Raku API hadn't been created yet when I wrote that.)

[18:13] * grondilu looks at https://github.com/samuraisam/p6-pb/blob/master/t/official.t

[18:13] <japhb> grondilu: We just used tests from Google's docs, plus some of our own.

[18:14] <japhb> We hadn't reached the stage of a full conformance suite.

[18:14] <japhb> *of using a

[18:14] <grondilu> the conformance program might be the way to go, still.  You can skip all the tests you want.

[18:15] <japhb> Well, feel free to use what you like from our code and/or tests.

[18:17] <grondilu> your code really is old.  Not trying to be mean.

[18:18] <grondilu> like you don't even write 'unit module', just 'module'.  I think that alone will throw an exception nowadays, no?

[18:18] <grondilu> I suppose since I have plenty of time, I could fork it and modernize it myself.

[18:20] <grondilu> but then again I'm scared of the NQP stuff

[18:22] <Kaiepi> uint would be more appropriate in some spots nowadays

[18:23] *** ProperNoun left
[18:23] *** ProperN[out] joined
[18:28] * lizmat clickbaits https://www.reddit.com/r/rakulang/comments/ukadpq/the_raku_conference_2022/    # Raku Conference Poll

[18:29] * lizmat also clickbaits https://rakudoweekly.blog/2022/05/09/2022-19-docublast/

[18:30] *** jjido left
[18:31] <grondilu> you have no package method in your Action class?

[18:32] * grondilu was struggling to figure out how to deal with that

[18:32] <grondilu> the name resolution thing is what discouraged me

[18:38] <japhb> grondilu: I absolutely do not take offense at that code being called old.  It's from before 6.c, so ... yeah, it's showing its age for sure.

[18:41] <grondilu> do you see what I mean by name resolution and if you do, how did you deal with it?

[18:42] <grondilu> (or how were you planning to)

[18:56] * grondilu goes to sleep

[18:56] *** grondilu left
[19:07] <tonyo> japhb: not sure i understand your response

[19:24] *** sena_kun left
[19:25] *** sena_kun joined
[19:34] *** Kaipei joined
[19:37] *** Kaiepi left
[19:51] *** jaguart joined
[19:56] *** jjido joined
[20:29] <tonyo> .tell japhb i understand how macros work, referring mostly to the trend of code generation vs just using macros (whether it's syntactic or semantic).  go's use of code generation, in practice, is abhorrent

[20:29] <tellable6> tonyo, I'll pass your message to japhb

[20:34] *** Kaipei left
[20:53] *** sena_kun left
[20:55] *** sena_kun joined
[21:01] <ecocode___> is there some tool like `perldoc` for raku ?

[21:03] <MasterDuke> there's a `rakudoc`, but i'm not 100% sure it's easy to get working right now. some of the doc infrastructure is in a bit of a mild upheaval

[21:04] <MasterDuke> [Coke]: is probably the best person to ask

[21:09] *** jjido left
[21:11] <ecocode___> I installed raku with rakubrew, but I don't seem to have that executable

[21:11] <ecocode___> (rakudoc)

[21:12] <MasterDuke> yeah, it's a separate thing, not part of rakudo

[21:13] <ecocode___> hmm ok

[21:14] <MasterDuke> i don't remember how it's installed, rakubrew, zef, something else...

[21:19] <ecocode___> found this on stackoverflow: `zef install 'rakudoc:auth<github:Raku>'`

[21:20] <ecocode___> which ends in `No candidates found matching identity: rakudoc:auth<github:Raku>`

[21:21] <MasterDuke> what about just `zef install rakudoc`?

[21:25] <ecocode___> lol, how could I not think about that ?

[21:26] <ecocode___> still, gets an error ...

[21:26] <ecocode___> https://www.irccloud.com/pastebin/seYDOetP/

[21:27] <ecocode___> forcing now ...

[21:28] <ecocode___> seems to do the job

[21:28] <ecocode___> thx

[21:28] <MasterDuke> i think you can just follow the suggestion and override the tests and it will install and work for the most part, i don't remember what exactly is causing the test fails

[21:29] <ecocode___> yep, it works

[21:45] *** Kaiepi joined
[21:47] *** vrurg joined
[21:54] *** vrurg left
[22:03] *** vrurg joined
[22:14] *** discord-raku-bot left
[22:15] *** discord-raku-bot joined
[22:16] *** discord-raku-bot left
[22:16] *** discord-raku-bot joined
[22:23] *** jmcgnh left
[22:31] *** jmcgnh joined
[22:39] *** lichtkind_ left
[22:43] *** melezhik joined
[22:45] *** melezhik left
[23:07] *** jaguart left
[23:11] *** Manifest0 left
[23:14] *** Manifest0 joined
[23:42] *** Sgeo left
[23:44] *** Sgeo joined
