[00:07] *** reportable6 left
[00:07] *** reportable6 joined
[00:38] <energizer> i'm not a raku programmer but i read that it supports dispatching on arbitrary predicates using a `where` clause. is that true? do people use it? is it slow?

[00:55] <guifa> where clauses used to be slow, but the new dispatch engine brought them up to snuff

[00:57] <energizer> guifa: where can i read about that?

[00:57] <guifa> They still require run-time checks, though there may be possibilities to optimize some of those out

[00:57] <guifa> on the programmer side or the internal side?

[01:02] <guifa> If the programmer side, https://docs.raku.org/type/Signature#Type_constraints discusses it

[01:02] <guifa> it's a feature that's surprisingly succinct to discuss, but probably required quite a bit more work to pull off internaally

[01:02] <energizer> the dispatch algorithm is what i'm most interested in

[01:07] *** linkable6 left
[01:07] *** evalable6 left
[01:08] *** evalable6 joined
[01:09] *** linkable6 joined
[01:10] <guifa> that is I think partially spread between MoarVM and Rakudo.  jnthn is the one that knows the most about it, but he's not on IRC that much lately.  

[01:11] <guifa> Here's a post on it from him

[01:11] <guifa> https://6guts.wordpress.com/2021/04/15/raku-multiple-dispatch-with-the-new-moarvm-dispatcher/

[01:23] *** frost joined
[02:12] <energizer> thanks

[02:17] *** frost left
[02:25] *** frost joined
[03:25] *** reportable6 left
[03:25] *** bisectable6 left
[03:25] *** benchable6 left
[03:25] *** notable6 left
[03:25] *** greppable6 left
[03:25] *** sourceable6 left
[03:25] *** releasable6 left
[03:25] *** evalable6 left
[03:25] *** linkable6 left
[03:25] *** tellable6 left
[03:25] *** squashable6 left
[03:25] *** statisfiable6 left
[03:25] *** nativecallable6 left
[03:25] *** bloatable6 left
[03:25] *** coverable6 left
[03:25] *** bloatable6 joined
[03:25] *** bisectable6 joined
[03:26] *** notable6 joined
[03:26] *** evalable6 joined
[03:26] *** sourceable6 joined
[03:26] *** reportable6 joined
[03:26] *** squashable6 joined
[03:26] *** nativecallable6 joined
[03:26] *** coverable6 joined
[03:27] *** statisfiable6 joined
[03:27] *** greppable6 joined
[03:27] *** benchable6 joined
[03:27] *** releasable6 joined
[03:27] *** linkable6 joined
[03:28] *** tellable6 joined
[04:04] *** Heptite left
[05:04] *** bisectable6 left
[05:04] *** squashable6 left
[05:04] *** reportable6 left
[05:04] *** tellable6 left
[05:04] *** coverable6 left
[05:04] *** bloatable6 left
[05:04] *** evalable6 left
[05:04] *** nativecallable6 left
[05:04] *** sourceable6 left
[05:04] *** statisfiable6 left
[05:04] *** greppable6 left
[05:04] *** notable6 left
[05:04] *** linkable6 left
[05:04] *** unicodable6 left
[05:04] *** releasable6 left
[05:04] *** shareable6 left
[05:04] *** committable6 left
[05:04] *** quotable6 left
[05:04] *** benchable6 left
[05:04] *** bisectable6 joined
[05:05] *** greppable6 joined
[05:05] *** linkable6 joined
[05:05] *** sourceable6 joined
[05:05] *** benchable6 joined
[05:05] *** notable6 joined
[05:06] *** shareable6 joined
[05:06] *** coverable6 joined
[05:06] *** tellable6 joined
[05:06] *** statisfiable6 joined
[05:06] *** quotable6 joined
[05:06] *** reportable6 joined
[05:07] *** nativecallable6 joined
[05:07] *** bloatable6 joined
[05:07] *** squashable6 joined
[05:07] *** unicodable6 joined
[05:07] *** releasable6 joined
[05:07] *** evalable6 joined
[05:07] *** committable6 joined
[05:31] *** epony left
[06:07] *** reportable6 left
[06:08] *** reportable6 joined
[06:39] *** Sgeo left
[07:10] *** nebuchadnezzar joined
[07:45] *** sena_kun joined
[08:01] *** abraxxa joined
[08:01] *** habere-et-disper joined
[08:06] *** abraxxa left
[08:17] *** razetime joined
[08:17] *** razetime_ joined
[08:17] *** razetime_ left
[08:18] *** razetime left
[08:18] *** razetime joined
[08:21] *** abraxxa joined
[08:26] *** habere-et-disper left
[08:57] *** frost left
[09:12] *** habere-et-disper joined
[09:26] *** sena_kun left
[09:37] *** lichtkind joined
[09:47] *** abraxxa left
[09:59] *** Tirifto joined
[10:20] *** habere-et-disper left
[10:21] *** sena_kun joined
[10:23] *** epony joined
[11:15] *** nebuchadnezzar left
[11:48] *** frost joined
[12:01] *** xinming left
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[12:51] *** lizmat_ left
[12:51] *** lizmat joined
[12:56] *** nebuchadnezzar joined
[13:10] *** razetime left
[13:21] *** razetime joined
[13:44] <tonyo> .

[14:06] *** razetime left
[14:10] *** frost left
[14:25] *** Sgeo joined
[14:45] *** Heptite joined
[14:50] <tonyo> hm, thought i saw something

[14:51] <[Coke]> *boo*

[15:00] <tonyo> heh

[15:45] *** linkable6 left
[15:45] *** evalable6 left
[15:46] *** linkable6 joined
[15:48] *** itoyota joined
[15:48] *** itoyota left
[15:48] *** evalable6 joined
[16:15] *** jercos left
[17:04] *** habere-et-disper joined
[17:11] *** sena_kun left
[17:43] *** Maylay left
[17:47] *** sena_kun joined
[17:49] *** Maylay joined
[18:05] *** jaguart left
[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[18:24] *** sena_kun left
[18:25] *** sena_kun joined
[18:51] <[Coke]> .tell tbrowder looks like Digest 0.18.0 is now visible with 'zef info' (though for some reason still only in REA), so hopefully your issue should be fixed.

[18:51] <tellable6> [Coke], I'll pass your message to tbrowder

[18:52] *** MoC joined
[18:52] <tbrowder> thnx!

[18:56] <[Coke]> I was going to open a ticket with Digest and was prepping the command output to show them, and was surprised with a fixed answer.

[18:58] *** MoC left
[18:59] *** TieUpYourCamel left
[19:12] *** TieUpYourCamel joined
[19:16] *** Heptite left
[19:30] *** MoC joined
[19:35] <tonyo> jjatria: you around? i want to look at what is not being indexed for you

[19:36] *** sena_kun left
[19:37] *** sena_kun joined
[19:37] <tonyo> or lizmat , if you can remember which module

[19:38] *** Heptite joined
[19:40] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/09/19/2022-38-another-wave/

[20:18] <gfldex> Was `x` invented for Perl or was it borrowed from another language?

[20:22] <tonyo> the operator?

[20:22] <gfldex> yes

[20:26] <tonyo> i think before that most things used `*` if they had a shortcut for it at all

[20:28] *** [Coke]_ joined
[20:29] *** [Coke] left
[20:43] *** Maylay left
[20:44] *** [Coke]_ is now known as [Coke]

[20:47] *** Maylay joined
[20:58] *** MoC left
[21:07] *** [Coke]_ joined
[21:09] *** [Coke] left
[21:13] <leont> x in perl is 2 different operators really, which one do you mean

[21:13] <leont> (splitting x and xx in Raku was definitely a good call)

[21:18] <tonyo> lizmat: looks like no extra processing is done on $thisname in that method - i'm basically just trying to inject some data into the `use` statement as a shortcut

[21:19] <tonyo> so that i can do something like `use Dist [$?DISTRIBUTION]; use-dist X;` and I'm very sure that the `X` i get is from the distribution provided to `use Dist` 

[21:20] <tonyo> (use Dist would slang `use-dist` into scope)

[21:20] *** [Coke] joined
[21:21] *** [Coke]_ left
[22:15] *** sena_kun left
[22:15] *** ProperNoun left
[22:15] *** ProperNoun joined
[22:42] <Juerd> leont: I'm annoyed by @foo x= 2 not doing anything in Perl :)

[23:15] *** linkable6 left
[23:15] *** evalable6 left
[23:17] *** evalable6 joined
[23:18] *** linkable6 joined
[23:34] *** lichtkind left
[23:44] *** [Coke] left
[23:46] *** [Coke] joined
[23:48] *** habere-et-disper left
