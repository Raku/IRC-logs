[00:00] *** reportable6 left
[00:00] <Nemokosch> bisectable6: dd «  "$a b" c  ».raku

[00:00] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[00:00] <bisectable6> Nemokosch, Output on all releases: https://gist.github.com/a72a6ca51ac0580f6a9273d6d92ae0b5

[00:00] <bisectable6> Nemokosch, Bisecting by output (old=2022.03 new=2022.04) because on both starting points the exit code is 1

[00:01] <bisectable6> Nemokosch, bisect log: https://gist.github.com/7ac89bcccd5f30dee5a45d32eb07db84

[00:01] <bisectable6> Nemokosch, (2022-03-23) https://github.com/rakudo/rakudo/commit/a56d239d0ce115d60caa772a30acafce933274f0

[00:01] <bisectable6> Nemokosch, Output on all releases and bisected commits: https://gist.github.com/fdf2b765c6e38bca2a39b68ce6fc27bf

[00:02] * Nemokosch is an idiot

[00:02] <Nemokosch> bisectable6: my $a = 42; dd «  "$a b" c  »

[00:02] <bisectable6> Nemokosch, Will bisect the whole range automagically because no endpoints were provided, hang tight

[00:03] *** reportable6 joined
[00:03] <bisectable6> Nemokosch, ¦6c (66 commits): «("42 b", "c  ")␤»

[00:03] <bisectable6> Nemokosch, Nothing to bisect!

[00:03] <Nemokosch> oof

[00:05] <Nemokosch> that's a non-breaking space :clown:

[00:12] *** deoac joined
[00:24] <Geth> ¦ problem-solving: 2colours assigned to codesections Issue Handling of non-breaking spaces when splitting to words https://github.com/Raku/problem-solving/issues/357

[01:02] *** Nemokosch left
[01:30] *** Guest6998 joined
[01:56] *** rf left
[02:18] *** Sgeo_ joined
[02:19] *** Sgeo left
[02:57] *** grondilu joined
[02:57] <grondilu> m: package foo { package bar { sub f is export {} }; sub f is export {} }; 

[02:57] <camelia> rakudo-moar d52342eb0: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤A symbol '&f' has already been exported␤at <tmp>:1␤»

[02:58] <grondilu> ^but its ::bar that exported it, not ::foo

[02:58] <grondilu> m: package { sub f is export {} }; sub f is export {} 

[02:58] <camelia> rakudo-moar d52342eb0: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤A symbol '&f' has already been exported␤at <tmp>:1␤»

[02:59] <grondilu> m: package { multi f(Int) is export {} }; multi f(Str) is export {} 

[02:59] <camelia> rakudo-moar d52342eb0: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤A symbol '&f' has already been exported␤at <tmp>:1␤»

[03:00] <grondilu> even when they are different candidates, they conflict?

[03:15] <Geth> ¦ doc: 0rir++ created pull request #4173: Consolidate supply from statement-prefixes.pod6 to control.pod6.

[03:15] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4173

[03:27] *** Guest6998 left
[04:00] *** razetime joined
[04:13] <Geth> ¦ doc: 0rir++ created pull request #4174: Consolidate gather from statement-prefixes.pod6 to control.pod6.

[04:13] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4174

[04:28] *** xinming left
[04:29] *** xinming joined
[04:48] *** MasterDuke joined
[05:41] *** deoac left
[05:45] *** grondilu left
[05:47] *** grondilu joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:52] *** grondilu left
[06:55] *** abraxxa joined
[06:57] *** grondilu joined
[07:00] *** abraxxa left
[07:00] *** abraxxa joined
[08:00] *** linkable6 left
[08:00] *** reportable6 left
[08:00] *** coverable6 left
[08:00] *** notable6 left
[08:00] *** unicodable6 left
[08:00] *** bloatable6 left
[08:00] *** greppable6 left
[08:00] *** statisfiable6 left
[08:00] *** nativecallable6 left
[08:00] *** committable6 left
[08:00] *** sourceable6 left
[08:00] *** shareable6 left
[08:00] *** bisectable6 left
[08:00] *** releasable6 left
[08:00] *** benchable6 left
[08:00] *** evalable6 left
[08:00] *** quotable6 left
[08:00] *** squashable6 left
[08:00] *** shareable6 joined
[08:00] *** bloatable6 joined
[08:00] *** linkable6 joined
[08:00] *** reportable6 joined
[08:00] *** bisectable6 joined
[08:01] *** notable6 joined
[08:01] *** sourceable6 joined
[08:01] *** quotable6 joined
[08:01] *** greppable6 joined
[08:01] *** statisfiable6 joined
[08:02] *** evalable6 joined
[08:02] *** unicodable6 joined
[08:02] *** committable6 joined
[08:03] *** benchable6 joined
[08:03] *** nativecallable6 joined
[08:03] *** coverable6 joined
[08:03] *** releasable6 joined
[08:03] *** squashable6 joined
[08:27] *** Xliff joined
[08:29] *** razetime left
[08:44] *** Sgeo_ left
[09:03] *** dakkar joined
[09:03] *** alethkit left
[09:06] *** xinming left
[09:41] *** xinming joined
[09:47] *** jpn joined
[09:49] *** holyghost joined
[10:01] *** holyghost left
[10:31] <Geth> ¦ ecosystem/main: ac05b62bbc | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[10:31] <Geth> ¦ ecosystem/main: Continues removals

[10:31] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/ac05b62bbc

[11:01] *** epony left
[11:15] *** epony joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:41] *** dakkar left
[12:42] *** dakkar joined
[13:16] *** Xliff left
[13:17] *** Xliff joined
[13:40] *** mcmillhj joined
[14:40] *** tellable6 left
[14:40] *** bisectable6 left
[14:40] *** reportable6 left
[14:40] *** statisfiable6 left
[14:40] *** committable6 left
[14:40] *** shareable6 left
[14:40] *** quotable6 left
[14:40] *** sourceable6 left
[14:40] *** linkable6 left
[14:40] *** unicodable6 left
[14:40] *** releasable6 left
[14:41] *** tellable6 joined
[14:41] *** committable6 joined
[14:41] *** bisectable6 joined
[14:42] *** shareable6 joined
[14:42] *** reportable6 joined
[14:42] *** quotable6 joined
[14:42] *** statisfiable6 joined
[14:42] *** unicodable6 joined
[14:43] *** linkable6 joined
[14:43] *** sourceable6 joined
[14:43] *** releasable6 joined
[15:31] <Geth> ¦ doc: 0rir++ created pull request #4175: Add glossary to HomePage.pod6

[15:31] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4175

[15:43] *** linkable6 left
[15:43] *** evalable6 left
[15:44] *** evalable6 joined
[15:45] *** linkable6 joined
[15:48] *** Xliff left
[15:54] *** holyghost joined
[16:02] *** mcmillhj left
[16:05] *** holyghost left
[17:05] *** statisfiable6 left
[17:05] *** unicodable6 left
[17:05] *** bloatable6 left
[17:05] *** nativecallable6 left
[17:05] *** greppable6 left
[17:05] *** shareable6 left
[17:05] *** quotable6 left
[17:05] *** reportable6 left
[17:05] *** sourceable6 left
[17:05] *** linkable6 left
[17:05] *** committable6 left
[17:05] *** notable6 left
[17:05] *** benchable6 left
[17:05] *** coverable6 left
[17:05] *** squashable6 left
[17:05] *** tellable6 left
[17:05] *** bisectable6 left
[17:05] *** releasable6 left
[17:05] *** evalable6 left
[17:06] *** shareable6 joined
[17:06] *** releasable6 joined
[17:06] *** linkable6 joined
[17:06] *** quotable6 joined
[17:06] *** coverable6 joined
[17:07] *** nativecallable6 joined
[17:07] *** unicodable6 joined
[17:07] *** tellable6 joined
[17:07] *** notable6 joined
[17:07] *** benchable6 joined
[17:07] *** reportable6 joined
[17:07] *** bisectable6 joined
[17:07] *** bloatable6 joined
[17:07] *** statisfiable6 joined
[17:08] *** greppable6 joined
[17:08] *** committable6 joined
[17:08] *** sourceable6 joined
[17:08] *** squashable6 joined
[17:08] *** evalable6 joined
[17:16] *** jaguart left
[17:17] *** mscha joined
[17:18] <mscha> My Advent of Code for the day: https://github.com/mscha/aoc/blob/master/aoc2022/aoc14

[17:29] <hobbified> mine: https://github.com/arodland/Advent-of-Code-2022/tree/master/14 -- nothing fancy or interesting (or particularly clean) this time, but I did it in one pass and it works. I got to use % in a regex for the second day in a row, so that's nice.

[17:30] <mscha> m: class Foo { has $.bar; method Str { "[$!bar]" } }; my $f = Foo.new(:bar(123)); say "$f"; say $f;

[17:30] <camelia> rakudo-moar 7d4c4ae07: OUTPUT: «[123]␤Foo.new(bar => 123)␤»

[17:30] <mscha> Why doesn't method gist default to self.Str?

[17:30] <mscha> If I had a nickel for every time I wrote method gist { self.Str } ...

[17:37] *** dakkar left
[17:44] <drakonis> oh, rakuast has been merged

[17:44] <drakonis> what a time to be alive.

[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:03] <discord-raku-bot> <Nemokosch> not complete yet but maybe encouraging to participate

[18:17] *** abraxxa left
[18:23] *** perlbot left
[18:23] *** simcop2387 left
[18:34] *** perlbot joined
[18:36] *** simcop2387 joined
[18:46] *** sena_kun joined
[19:08] *** squashable6 left
[19:10] *** squashable6 joined
[19:33] *** simcop2387 left
[19:33] *** simcop2387 joined
[19:40] *** Xliff joined
[19:40] <Xliff> Hi ho.

[19:41] <Xliff> Given: "sub a ($a, $b, $c, $d) { ... }" can RakuAST (in its current state) be used to replace any of the parameters on a()?

[19:50] <Xliff> So that would look something like this:

[19:51] <Xliff> "sub a ($a, $b, EVAL { c-param() }, $d) { ... }"

[19:51] <Xliff> where c-param()  is a function that generates the RakuAst necessary to make a the parameter node $c

[19:54] *** simcop2387 left
[19:56] *** simcop2387 joined
[19:58] *** mscha left
[20:02] *** perlbot left
[20:02] *** perlbot joined
[20:07] *** perlbot left
[20:08] *** perlbot joined
[20:28] *** sena_kun left
[20:29] *** sena_kun joined
[20:30] *** sena_kun left
[20:30] *** perlbot left
[20:30] *** perlbot joined
[20:31] *** sena_kun joined
[20:43] *** sena_kun left
[20:46] *** sena_kun joined
[20:55] *** melezhik joined
[20:56] <melezhik> SmokeMachine: please see my PR, I suggested some fixes and improvements on CI pipeline for Red

[20:59] *** melezhik left
[21:16] *** melezhik joined
[21:18] *** jpn left
[21:22] *** melezhik left
[21:22] <SmokeMachine> melezhik: I just merged that! Thank you!

[21:22] <tellable6> SmokeMachine, I'll pass your message to melezhik

[21:42] *** jpn joined
[21:48] *** jpn left
[22:00] *** jpn joined
[22:08] *** jpn left
[22:10] *** jpn joined
[22:23] *** sena_kun left
[22:39] *** jpn left
[22:48] *** jpn joined
[23:01] *** grondilu_ joined
[23:01] <grondilu_> m: package Foo { our sub bar is export {}; &bar.wrap: -> { say "hi" } }; import Foo; bar;

[23:01] <camelia> rakudo-moar 7e69a6de5: ( no output )

[23:01] <grondilu_> m: package Foo { our sub bar is export {}; &bar.wrap: -> { say "hi" } }; import Foo; our::bar;

[23:01] <camelia> rakudo-moar 7e69a6de5: OUTPUT: «Could not find symbol '&bar' in 'GLOBAL::our'␤  in block <unit> at <tmp> line 1␤␤»

[23:01] <grondilu_> m: package Foo { our sub bar is export {}; &bar.wrap: -> { say "hi" } }; import Foo; Foo::bar;

[23:01] <camelia> rakudo-moar 7e69a6de5: OUTPUT: «hi␤»

[23:02] <grondilu_> the wrapping is lost during exportation?

[23:02] *** grondilu_ left
[23:02] * grondilu just realized he had a running session

[23:05] <grondilu> package Foo { our sub bar is export { "bar" }; &bar.wrap: -> { say "({callsame})" } }; import Foo; say bar; say Foo::bar;

[23:05] <evalable6> grondilu, rakudo-moar d52342eb0: OUTPUT: «bar␤(bar)␤True␤»

[23:05] <Geth> ¦ ecosystem/main: c1ef5cf325 | (Elizabeth Mattijsen)++ | META.list

[23:05] <Geth> ¦ ecosystem/main: Remove Readline by fooist, it lives on CPAN as well

[23:05] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/c1ef5cf325

[23:05] <grondilu> m: package Foo { our sub bar is export { "bar" }; &bar.wrap: -> { "({callsame})" } }; import Foo; say bar; say Foo::bar;

[23:05] <camelia> rakudo-moar 7e69a6de5: OUTPUT: «bar␤(bar)␤»

[23:08] <grondilu> package Foo { our sub bar is export { "bar" }; CHECK &bar.wrap: -> { say "({callsame})" } }; import Foo; say bar; say Foo::bar;

[23:08] <evalable6> grondilu, rakudo-moar d52342eb0: OUTPUT: «(bar)␤True␤(bar)␤True␤»

[23:09] <grondilu> I guess without a phaser, the wrapping is done after the export, so it can't be seen after the import?

[23:10] <grondilu> package Foo { our sub bar is export { "bar" }; INIT &bar.wrap: -> { "({callsame})" } }; import Foo; say bar; say Foo::bar;

[23:10] <evalable6> grondilu, rakudo-moar d52342eb0: OUTPUT: «(bar)␤(bar)␤»

[23:10] <grondilu> meh, that will do

[23:26] <Xliff> Given: "sub a ($a, $b, $c, $d) { ... }" can RakuAST (in its current state) be used to replace any of the parameters on a()?

[23:26] <Xliff> So that would look something like this:

[23:26] <Xliff> "sub a ($a, $b, EVAL { c-param() }, $d) { ... }"

[23:26] <Xliff> where c-param()  is a function that generates the RakuAst necessary to make a the parameter node $c

[23:36] *** Sgeo joined
[23:41] *** jpn left
[23:44] *** jaguart joined
[23:44] *** jaguart left
[23:45] *** jaguart joined
[23:50] <tonyo> are you looking for macros?

[23:57] *** jpn joined
