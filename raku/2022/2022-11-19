[00:03] *** sena_kun left
[00:07] *** reportable6 left
[00:09] *** reportable6 joined
[00:21] *** jgaz left
[00:23] *** Guest16 joined
[00:48] *** lucasb left
[01:03] *** sgrs left
[01:14] *** habere-et-disper joined
[02:10] *** habere-et-disper left
[02:20] *** razetime joined
[02:30] *** m_athias left
[02:30] *** nine left
[02:30] *** nine joined
[02:31] *** m_athias joined
[02:34] *** mahafyi joined
[02:40] *** razetime left
[03:40] *** benchable6 left
[03:40] *** tellable6 left
[03:40] *** releasable6 left
[03:40] *** committable6 left
[03:40] *** nativecallable6 left
[03:40] *** notable6 left
[03:40] *** bloatable6 left
[03:40] *** shareable6 left
[03:40] *** unicodable6 left
[03:40] *** quotable6 left
[03:40] *** sourceable6 left
[03:40] *** statisfiable6 left
[03:40] *** bisectable6 left
[03:40] *** greppable6 left
[03:41] *** bisectable6 joined
[03:41] *** benchable6 joined
[03:41] *** nativecallable6 joined
[03:41] *** tellable6 joined
[03:42] *** greppable6 joined
[03:42] *** unicodable6 joined
[03:42] *** shareable6 joined
[03:42] *** sourceable6 joined
[03:43] *** committable6 joined
[03:43] *** statisfiable6 joined
[03:43] *** quotable6 joined
[03:43] *** bloatable6 joined
[03:43] *** releasable6 joined
[03:43] *** notable6 joined
[03:56] *** jjido left
[04:03] *** Kaiepi joined
[04:28] *** bigdata joined
[04:49] *** sgrs joined
[04:52] *** Guest16 left
[05:44] *** sgrs left
[05:44] *** razetime joined
[06:08] *** reportable6 left
[06:09] *** reportable6 joined
[06:53] *** xinming joined
[07:53] *** squashable6 left
[07:53] *** linkable6 left
[07:53] *** coverable6 left
[07:53] *** committable6 left
[07:53] *** evalable6 left
[07:53] *** nativecallable6 left
[07:53] *** notable6 left
[07:53] *** reportable6 left
[07:53] *** greppable6 left
[07:53] *** bloatable6 left
[07:53] *** sourceable6 left
[07:53] *** releasable6 left
[07:53] *** bisectable6 left
[07:53] *** benchable6 left
[07:53] *** quotable6 left
[07:53] *** shareable6 left
[07:53] *** unicodable6 left
[07:53] *** statisfiable6 left
[07:53] *** tellable6 left
[07:53] *** bloatable6 joined
[07:53] *** sourceable6 joined
[07:54] *** unicodable6 joined
[07:54] *** evalable6 joined
[07:54] *** squashable6 joined
[07:54] *** quotable6 joined
[07:54] *** linkable6 joined
[07:54] *** coverable6 joined
[07:54] *** statisfiable6 joined
[07:54] *** reportable6 joined
[07:55] *** committable6 joined
[07:55] *** shareable6 joined
[07:55] *** benchable6 joined
[07:55] *** releasable6 joined
[07:55] *** tellable6 joined
[07:55] *** notable6 joined
[07:56] *** greppable6 joined
[07:56] *** bisectable6 joined
[07:56] *** nativecallable6 joined
[08:34] <Geth> ¦ advent/master: 6 commits pushed by (Alexey Melezhik)++, (Juan Julián Merelo Guervós)++
[08:34] <Geth> ¦ advent/master: fad70959f7 | parrowCI pipelines for everything
[08:34] <Geth> ¦ advent/master: 94054096eb | minor changes
[08:34] <Geth> ¦ advent/master: f2486518e0 | Small stylistic corrections
[08:34] <Geth> ¦ advent/master: b8a143a94a | this -> thus
[08:34] <Geth> ¦ advent/master: 8f435d11c4 | Update melezhik.md
[08:34] <Geth> ¦ advent/master: 02a9802749 | Merge pull request #98 from melezhik/master
[08:34] <Geth> ¦ advent/master: review: https://github.com/Raku/advent/compare/cfc18acef5c5...02a980274996
[08:52] *** mahafyi left
[09:25] <discord-raku-bot> <Nemokosch> Hi, I have two "marketing" thoughts
[09:26] <discord-raku-bot> <Nemokosch> The first one is about utilizing the weekly challenges for education purposes. Although I haven't given up on the idea of a first language Raku video tutorial, that's quite big pressure and a lot of time; maybe the holidays can decide if I can make reasonable progress with that idea.
[09:29] <discord-raku-bot> <Nemokosch> However, there used to be Weekly Challenge reviews, and I think I could revive that in a looser format that is more about how a certain, relatively simple task might be solved in Raku, and encourages people to do the same
[09:31] *** discord-raku-bot left
[09:31] *** discord-raku-bot joined
[09:34] <discord-raku-bot> <Nemokosch> So my idea was: what if this sort of "academic interest", one can say, could be channeled in a useful manner? I think Raku offers a lot to learn about how a real-life language works in all aspects: ecosystem, parsing, compiler and all the nifty details; and Raku offers this with, I'd say, a relatively low entry point.
[09:39] *** razetime left
[09:39] *** razetime joined
[09:49] <discord-raku-bot> <Nemokosch> Raku problems and challenges could serve as a topic for several master theses for sure
[09:53] <El_Che> morning
[09:56] <Woodi> hi
[09:57] <Woodi> Nemekosch: "several master theses for sure" for sure. but do someone considered doing apps ?
[10:02] <discord-raku-bot> <Nemokosch> Well... what "apps", and why?
[10:11] <Woodi> example i have in mind: wicd that is now obsolote - python 2.x
[10:12] <Woodi> apps that people want to install and use
[10:14] *** Sgeo left
[10:16] <discord-raku-bot> <Nemokosch> Not gonna lie, I don't think that's the niche of Raku, if Raku even has a "niche"
[10:20] <discord-raku-bot> <Nemokosch> "apps" depend on their own graphic frameworks (desktop) or OS-specific SDK's (typically smartphone). What basically follows is that you either use the language that provides those libraries, or you make bindings to them. For Raku, basically this means the latter. Now, making cool bindings to, say, a C/C++ library is anything but easy. leont had an idea about a certain approach to GTK integration, if I understood it right, you can check it 
[10:23] <Woodi> Nemokosh: agree, it's not easy. that why python is considered a standard now. And java and C#
[10:23] <leont> Yeah, GTK has enough introspection that you should be able to mostly make bindings automagically
[10:24] <discord-raku-bot> <Nemokosch> I don't really believe in this "make a couple of apps and dang, you have an established language" approach; I think that's neither a guarantee of success, nor a requirement of it. As it seems currently, Raku is much more a CLI and backend-oriented toolset - much like Perl in its shiniest days.
[10:24] <discord-raku-bot> <Nemokosch> Also, you know... performance is still a too big issue to ignore and hope it would be resolved if somebody publishes enough slow apps 😅
[10:27] <Woodi> Nemokosh: it's at least 4th time I point Java and C# example here and I still belive it is requirement for language to become popular
[10:28] <discord-raku-bot> <Nemokosch> Ironically enough, I believe it would be easier to get "academic" people work on compiler and runtime challenges (and there is enough work to do there) than to get people pick Raku for apps out of all the choices of the world
[10:28] <Woodi> and jnthn++ for initial GTK work but...
[10:28] <Woodi> at least personally i hate GTK
[10:28] <discord-raku-bot> <Nemokosch> Think of Go
[10:30] <discord-raku-bot> <Nemokosch> I know Go has the "google flavor" but to counter that, it's really an ugly language with terrible dependency management, and still
[10:31] <discord-raku-bot> <Nemokosch> for Java and C#, I think they also aren't big because of the "apps"; they are big because of their enterprise-level tech stack offers for, you know, boring ERP stuff and such
[10:35] <discord-raku-bot> <Nemokosch> anyways, ideas are welcome. If you think we can knock down wicd, so be it; I'm not sure what work I can contribute to that
[10:46] <El_Che> Nemokosh: that's a very weird statement about go. Go's module management and build are way more sane than anything we have.
[10:47] <El_Che> Nemokosh: I wouldn't mind Raku copying lots of stuff from there
[10:49] <discord-raku-bot> <Nemokosch> Go's module management is basically copying a list of repositories xD
[10:49] <El_Che> not at all
[10:50] <andinus``> what are the disadvantages to go's modules vs say what raku has? (cpan like)
[10:50] <El_Che> it's build around semver to avoid diamond and breaking dependences
[10:51] <El_Che> go will never upgrade to a major release, dependencies can be vendored and are part of the build
[10:51] <El_Che> if you do SRE kind of stuff, there are not many contenders
[10:52] <discord-raku-bot> <Nemokosch> the sole fact that there is a require and then an infinite list of github repositories is a nonsense
[10:52] <El_Che> there isn't much difference between use, import or whatever other languages use
[10:53] <El_Che> that part is very similar to Raku
[10:53] <discord-raku-bot> <Nemokosch> except you don't end up with a horrible list of infinitely many github url's in other languages
[10:53] <El_Che> except you don't have to write stuff like META6 manually
[10:53] <El_Che> go mod does that for you
[10:54] <El_Che> with pinned versions and hashes
[10:54] <El_Che> go got its act together with go mod
[10:54] <El_Che> before that there where several community modules trying to be a module manager
[10:55] <discord-raku-bot> <Nemokosch> you "don't have to", more like it's basically impossible to write or read it
[10:55] <discord-raku-bot> <Nemokosch> because it's an endless pasta of repo urls
[10:56] <El_Che> it where you dependencies can be retrieved, yes
[10:56] <El_Che> r
[10:56] <El_Che> and once it's retrieved once and vendored, you're good to go
[10:56] <El_Che> (besides that googles proxies and keeps all versions)
[10:57] <El_Che> it's by far the best dependency system I have ever seen
[10:57] <El_Che> e.g. compared to the continous breakage in Ruby and npm
[10:57] <El_Che> or the pain to deploy perl and python
[10:58] <El_Che> so, I get critique about the lack of expressiveness or that it may be slower than rust, but the modules are very fine
[10:59] *** bigdata left
[11:00] <discord-raku-bot> <Nemokosch> wow, even imports are this horror
[11:01] <El_Che> I have used extensively in production, and it's by far the best flow on our CI
[11:01] <El_Che> java and python are orders of magnitudes more complicated and fragile
[11:01] <El_Che> (no raku ci flow yet, that stuff I build with custom docker)
[11:02] <discord-raku-bot> <Nemokosch> exactly, "in production", that is, for some overkill, boring enterprise thing that nobody would really want to use by themselves
[11:02] <El_Che> I have many side projects in Go
[11:03] <El_Che> I don't have to convince you, but I found it a weird point of critique (the others I understand or agree to some point)
[11:03] <discord-raku-bot> <Nemokosch> Sorry for you absolutely
[11:03] <discord-raku-bot> <Nemokosch> Even Java makes this look much more acceptable
[11:03] <discord-raku-bot> <Nemokosch> at least not a part of the language
[11:04] <El_Che> import be.nxadm.myproject.*
[11:04] <discord-raku-bot> <Nemokosch> It's okay but I also don't think I have to convince you that whoever looks at that, will cry in pain
[11:04] <El_Che> import github.com/nxadm/myprojec
[11:04] <El_Che> t
[11:04] <El_Che> I don't see much difference
[11:04] <El_Che> except that go knows where to fetch it and java does not
[11:05] <El_Che> so you end up writing complicated xml's
[11:05] <El_Che> and you end with conflicts
[11:05] <El_Che> and overwriten module loads because of path order
[11:05] <discord-raku-bot> <Nemokosch> it's kinda weird to depend on github.com in your code
[11:05] <El_Che> t
[11:06] <El_Che> I don't
[11:06] <El_Che> we have our own repository and proxy
[11:06] <discord-raku-bot> <Nemokosch> yeah, enterprise level stuff
[11:06] <El_Che> and google proxy as well by default
[11:06] <El_Che> for my home I can setup gitea, gitlab or whatever I want
[11:07] <El_Che> orders of magnitude than setting your own cpan at home
[11:07] <El_Che> but my code resides already in github, so I don't bother
[11:07] <El_Che> some people do
[11:07] *** jjido joined
[11:07] <discord-raku-bot> <Nemokosch> I have heard that the community also isn't fully content with Go's dependency management but frankly, I cannot confirm and don't even want to
[11:07] <discord-raku-bot> <Nemokosch> the fact that there are url's hardcoded in the source code for something that isn't even gonna run in the browser is a big enough red flag for me, let alone ever having to look at go.mod
[11:08] <El_Che> it's a name space
[11:08] <El_Che> it's not used at runtime
[11:08] <El_Che> for getching
[11:08] <El_Che> and in my case not even used at buildtime after vendoring
[11:10] <discord-raku-bot> <Nemokosch> I didn't assume that and that doesn't change the big picture
[11:10] <El_Che> ok
[11:10] <El_Che> no problem there, but I just don't see the issue
[11:11] <El_Che> import owner/path/version vs use name<auth><version>
[11:11] <El_Che> same same but different
[11:14] <discord-raku-bot> <Nemokosch> I do think hardcoding auth and version is a mess either way - but still better than downright specifying the package with an url lmao
[11:14] <discord-raku-bot> <Nemokosch> neither of these have anything to do in a source file
[11:14] <discord-raku-bot> <Nemokosch> 100% pick gradle over that
[11:14] <El_Che> meh
[11:16] *** sena_kun joined
[11:23] <Woodi> standard library solves many things :)  except maintenance effort and fundings for good devs ;)
[11:25] <Woodi> probably story is similiar like with language visual design, you need to pick something
[11:25] <discord-raku-bot> <Nemokosch> anyways, the point that you don't necessarily need "apps" in the stricter sense to succeed (and neither do they guarantee success - confer Tcl/Tk) still stands
[11:25] <Woodi> and dropped pieces are forever pain
[11:26] <Woodi> Nemokosch: never considered Tcl a success....
[11:26] <tellable6> Woodi, I'll pass your message to Nemokosch
[11:27] <discord-raku-bot> <Nemokosch> that's my point exactly
[11:28] <Woodi> Nemokosh: ok, you got me on it :)  but I was talking about language. and gui part in Tcl was actually best part of it
[11:28] <discord-raku-bot> <Nemokosch> even though Tcl/Tk "apps" are definitely a thing, that's a legit stack
[11:30] <Woodi> ...posibly that's why Java have ui parts...
[11:31] <discord-raku-bot> <Nemokosch> and if I were to think from my own perspective... most of the things I am using on desktop are written in C, C++ or some Electron thing
[11:31] <Woodi> becouse you can create ui in them ? :)
[11:32] <Woodi> "fast, ui, x" ? :)
[11:32] <discord-raku-bot> <Nemokosch> yes, there is some C# and Java but it's not more prevalent than Electron
[11:33] <discord-raku-bot> <Nemokosch> the whole "app market" is kinda polluted imo, even for phone, and I think it would really be a tough game to make Raku actually useful for phone
[11:34] <Woodi> yep, phones are new computers...
[11:35] <discord-raku-bot> <Nemokosch> yeah, the hardware specs are insane. My 2019 phone is on par with my 2015 desktop computer in many regards
[11:36] <discord-raku-bot> <Nemokosch> but I think even Python with e.g Kivy has slim chance with mobile apps
[11:37] <discord-raku-bot> <Nemokosch> a change of topic: https://www.youtube.com/watch?v=vfxbTclTMtI what's the aftermath of this? Did we get persistent data structures, is this pending, abandoned...
[11:51] *** sena_kun left
[12:01] *** sena_kun joined
[12:02] *** jaguart left
[12:07] *** sgrs joined
[12:07] *** reportable6 left
[12:08] *** reportable6 joined
[12:22] *** z4kz left
[12:55] <tbrowder> good question, they would be very useful
[12:55] <tbrowder> persistent data, that is
[12:58] <Geth> ¦ raku.org: 2colours++ created pull request #177: Remove yoleaux bot from the community/irc page (extinct bot)
[12:58] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/pull/177
[13:03] *** NemokoschKiwi joined
[13:08] *** razetime left
[13:11] <Geth> ¦ raku.org: 378ed3b3e9 | 2colours++ | source/community/irc/index.html
[13:11] <Geth> ¦ raku.org: Remove yoleaux bot from the community/irc page (extinct bot)
[13:11] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/commit/378ed3b3e9
[13:11] <Geth> ¦ raku.org: 52ac868e4e | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | source/community/irc/index.html
[13:11] <Geth> ¦ raku.org: Merge pull request #177 from 2colours/remove-yoleaux-bot
[13:11] <Geth> ¦ raku.org: 
[13:11] <Geth> ¦ raku.org: Remove yoleaux bot from the community/irc page (extinct bot)
[13:11] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/commit/52ac868e4e
[13:21] *** razetime joined
[13:24] <tbrowder> any mac user here?
[13:25] * guifa raises hand
[13:26] <discord-raku-bot> <Nemokosch> too many mac users here 🙊
[13:27] *** sena_kun left
[13:28] <tbrowder> hi, can you tell me if the GraphicsMagick library is available on mac? if so, can you show me the lines needed in a .github//wotkflows/macos.yml file to install it?
[13:28] *** sena_kun joined
[13:28] <tbrowder> thanks so much
[13:28] <tbrowder> *workflows
[13:30] <guifa> It is definitely available, but I've not worked (sry for pun) with workflows before =/
[13:30] <guifa> most everything I've seen on GM says to use homebrew or macports to install
[13:30] <tbrowder> i would love to have an inexpensive remote mac available but "inexpensive" and mac are incompatible in the same sentence
[13:33] <tbrowder> ok, i think i can create the line if i know the correct package name. the line needed is just the command you use to install the packages on yr mac box
[13:36] <guifa> Not sure your price range, but B&H in the US often has the last-year models available for ~$400-600.  With Parallels and a Windows license, it's a nice dual purpose machine if you're not needing to make a full jump into the Mac 
[13:36] <guifa> for mac minis, that is.  That's what me and lizmat use
[13:38] <guifa> The command for ImageMagick is `brew install imagemagick`;  they also recommend `brew install ghostscript` too
[13:48] *** derpydoo joined
[14:06] *** jjido left
[14:07] *** NemokoschKiwi left
[14:19] *** jjido joined
[14:49] *** TieUpYourCamel left
[15:02] <tbrowder> thnx for the inst line.
[15:03] <tbrowder> what is Parallels, a VM host thing?
[15:03] <tbrowder> *inst lines
[15:06] <tbrowder> hm, is the docker macos image usable locally? if so, that might be an easy way to go.
[15:07] <tbrowder> hm, is the docker macos image usable locally? if so, that might be an easy way to go.
[15:07] <tbrowder> locally on a linux host
[15:08] * guifa doesn't use docker so doesn't know
[15:10] <tbrowder> .ask jmerelo is a docker macos inage usable on a local linux host?
[15:10] <tellable6> tbrowder, I'll pass your message to jmerelo
[15:11] <tbrowder> jj is a big docker fan
[15:16] <discord-raku-bot> <Nemokosch> I'm a big jj fan 😛
[15:18] <El_Che> docker macos image?
[15:20] <guifa> BTW, other than language and timezone, what are some other sysinfo stuff that might be of use for people to query?
[15:20] <discord-raku-bot> <Nemokosch> I'm watching a presentation with Ruby examples and damn, this language really is a mashup of Python and Perl
[15:20] *** razetime left
[15:21] * guifa is going to make a set of modules called User::Foo where each is a one-stop shop for getting user/system information
[15:21] <El_Che> Ruby is pretty nice as a language, it feels like Perl with decent OO. The ecosystem is not fun, though.
[15:22] <El_Che> (and every single person I know moved from Ruby to Go. Anecdotic, of course, but *every* single person)
[15:23] <guifa> ah yeah, keyboard.  That'll be trickier but might be useful for anyone capturing keystrokes in real time
[15:24] *** derpydoo left
[15:24] <discord-raku-bot> <Nemokosch> I mean Go is static and was marketed as a C contender at a time, no surprise it's more "useful" than a scripting language made popular solely by Rails
[15:24] <discord-raku-bot> <Nemokosch> However, Go is not an appealing language whatsoever; it's the polar opposite of what I would like to spend free time with
[15:25] <El_Che> Go was aimed at C. However, the inmediate compile time makes it feasable for people fron dynamic languages. And getting rid of nonsense like makefiles
[15:26] <El_Che> I can honestly say, that in my experience Go is a lot bigger than python in devops
[15:27] <El_Che> that pretty much every big tool in the ecosystem was written in Go helped of course
[15:28] *** razetime joined
[15:34] <tbrowder>  ok, mac hosts tests making progress, note ghostscript is already installed on the base image
[15:36] <discord-raku-bot> <Nemokosch> I'm working on software that will never get rid of nonsense like makefiles. The big milestone was getting rid of some Sun version of Pascal...
[15:36] <discord-raku-bot> <Nemokosch> For devops - the reason I had to even listen to someone complaining about Go is Terraform
[15:39] <guifa> Linux folks: IIRC, for native code stuff, things need to be compiled on a host system because the ABI isn't stable, right?  But one can make an assumption OTOH that a compile of some sort is available, yeah?
[15:39] <El_Che> Nemokosch: like I said, pretty much everything. Docker, Terraform, Vault, Nomad, Kubernetes, Consul, etcd, etc :)
[15:39] <tellable6> El_Che, I'll pass your message to Nemokosch
[15:39] <tbrowder> btw, i use Make a lot for Raku modules and other dev. what do you use in its place?
[15:45] <discord-raku-bot> <Nemokosch> I mean it's not the worst language for devops. There is always Shell. 🙂
[15:45] <discord-raku-bot> <Nemokosch> no surprise those people who were okay with using Shell, are willing to use Go over a comforting language like Python or Ruby or even Perl
[15:49] <El_Che> Nemokosch: You don't seems to be in the devops engine and thinking of admins in a small shop. Devops is all about scale and microservices.
[15:49] <tellable6> El_Che, I'll pass your message to Nemokosch
[15:50] <El_Che> Python and Ruby were very popular in the beginning, but they were slow and difficult to deploy, so people jumped shit when another language fixed those issues
[15:51] <El_Che> and some people will use Rust if they need the last of performance
[15:51] <El_Che> *last bit
[15:52] <El_Che> with the popularity of devSecOps the type safety of go an rust were huge selling points
[15:53] *** sgrs left
[15:53] <discord-raku-bot> <Nemokosch> how are they difficult to deploy?
[15:53] <discord-raku-bot> <Nemokosch> Also, I admittedly wouldn't use the word "devops" for actually developing the deployment, integration, virtualization - you name it - tools
[15:53] <tbrowder> guifa: how do i add an env var in macos at the command line? i tried "export SOMEVAR='1'" in my macos.yml file and got a failure
[15:53] <discord-raku-bot> <Nemokosch> that's just plain "dev" at this point
[15:54] <guifa> weird, it works for me okay.  
[15:54] <guifa> guifa ➤ export FOO='1'
[15:54] <guifa> guifa ➤ echo $FOO
[15:54] <guifa> 1
[15:54] <El_Che> devops is lots of lots of dev work, that very often needs to be very secure and fast
[15:55] <El_Che> devops is lots of lots of dev work, that very often needs to be very secure and fast
[15:55] *** poohman joined
[15:55] <tbrowder> i'll dbl check or typo
[15:55] <tbrowder> *for
[15:56] <El_Che> Nemokosch: go: put this static binary built in 1 second and put in an 5mb alpine container
[15:56] <tellable6> El_Che, I'll pass your message to Nemokosch
[15:57] <poohman> hello all, what would be the best type to use when the object or variable can only have one value of the collections of constant values, like currencies for example. 
[15:57] <tellable6> 2021-08-22T21:33:00Z #raku <tbrowder> Poohmaan: hi
[15:57] <poohman> Enumeration, set, Bag or something else?? 
[15:58] <discord-raku-bot> <Nemokosch> I think "devops" in itself is more... I don't know, perhaps "degradatory" isn't the best word for it, but definitely not mainly about development. If you are solely building operation tools and never do operation tasks, then you are a developer. Now that we are testing the software we are shipping, I started joking that by the end of the project, we will be able to apply as railway operators. I think that's a similar case.
[15:58] <El_Che> Nemokosch: python (at out place). Build a virtual environemt, download and pin the dependencies, package everything,find a system to package your code and the python deps together, make sure the huge container has the necessary binary dependencies (and make sure you follow the updates and CVEs) ==> long buildtime and high maintenance
[15:58] <tellable6> El_Che, I'll pass your message to Nemokosch
[15:59] <guifa> poohman you'd use a subset, actually.  
[15:59] *** poohman left
[15:59] <discord-raku-bot> <Nemokosch> That rather sounds like a paranoid workflow tbh
[16:00] <guifa> but I'd probably combine it with a Set
[16:00] <guifa> so
[16:00] *** poohman joined
[16:00] <poohman> thanks guifa, I'll look into it
[16:00] *** poohman left
[16:01] <El_Che> Devops is the integration of both. E.g. I run a service that does all the networkauthentication. I need to extend the vendor software in Perl, and add Go microservice to do stuff that the vendor software can't do, but our organisation needs. Being authentication and responsable for network segmentation it needs to be very secure and fast
[16:01] *** sena_kun left
[16:01] <El_Che> *microservices
[16:02] *** sena_kun joined
[16:02] <guifa> m: my %currencies is Set = 'EUR', 'USD', 'CAD'; subset Currency of Str where { %currencies{$^code} }; my Currency $a = 'EUR'; my Currency $b = 'EUT';
[16:02] <camelia> rakudo-moar 17062c32f: OUTPUT: «Type check failed in assignment to $b; expected Currency but got Str ("EUT")␤  in block <unit> at <tmp> line 1␤␤»
[16:02] <discord-raku-bot> <Nemokosch> well, from this point of view, why would you need to know if it's written in Go?
[16:02] <El_Che> that operations jobs is certainly more development than doing stuff to the running service (it's rocksolid, pretty much zero operations work because the dev work to automate and extend it)
[16:02] <ugexe> writing sql queries and schema doesnt make you a dba
[16:03] <ugexe> its just overlap
[16:03] *** poohman joined
[16:03] <tbrowder> poohman: hi
[16:03] <El_Che> Nemokosh: my clients don't have to know of care that the services are in go. Incidently their microservices are in go as well, but I don't care in what langauge they do it
[16:04] <El_Che> Lots of Java as well
[16:04] <tbrowder> guifa: i put the
[16:04] *** poohman left
[16:05] <tbrowder> i forgot to have a name line before the run line. that stopped the error.
[16:05] <tbrowder> but it didn't work to stop the msg about brew cleanup.
[16:06] <tbrowder> then i consolidated the export and brew install on one line all is well so far.
[16:09] *** poohman joined
[16:10] *** poohman left
[16:10] <discord-raku-bot> <Nemokosch> Anyway, I don't think there is any actual use of this conversation because it's just a matter of word use. I don't see much "ops" in building a service that someone else is gonna actually operate. And given Google's involvement in these challenges, it's not surprising that these, imo, developers are gonna use a lot of Go.
[16:11] *** poohman joined
[16:11] *** poohman left
[16:12] *** poohman joined
[16:13] <poohman> subset Currency of Str where * ~~ "usd" |"euro" |"inr" 
[16:13] <poohman> does the above make sense?? 
[16:14] <guifa> Yes, it works.  
[16:14] <guifa> I'd use
[16:14] <poohman> or should/can a list be used
[16:14] <guifa> my %currencies is Set = 'EUR', 'USD', 'CAD'; subset Currency of Str where { %currencies{$^code} };
[16:14] <discord-raku-bot> <Nemokosch> poohman: I think it can work but the `* ~~`˙part is redundant
[16:14] <guifa> that way if you want to check if something is a currency code elsewhere in your program, you already havea  Set ready to go
[16:16] *** poohman left
[16:16] *** poohman joined
[16:17] *** poohman left
[16:18] *** poohman joined
[16:18] *** poohman left
[16:21] <El_Che> on other hand, trying to work on the automation of arm64 rakudo builds and packaging, ops enough? :)
[16:21] *** poohman joined
[16:22] <poohman> did not work in the Repl as well
[16:22] *** poohman left
[16:23] <discord-raku-bot> <Nemokosch> if something tricky doesn't work in the Repl, you might suspect it's the fault of Repl
[16:24] <discord-raku-bot> <Nemokosch> it's a quite weird environment
[16:25] *** poohman joined
[16:25] *** poohman left
[16:26] *** poohman joined
[16:26] *** poohman left
[16:27] *** epony left
[16:31] *** poohmaan joined
[16:33] *** poohmaan left
[16:37] *** poohman joined
[16:38] *** poohman left
[16:39] <lucs> After a module has been successfully installed with zef, can the '.../.zef/" directory be removed?
[16:39] *** euandreh left
[16:41] <lizmat> lucs: I think so, but it will be re-created with any subsequent invocation of zef
[16:50] <lucs> Okay. The reason I ask is that I have a mechanism whereby depending on which project I'm working on, my HOME directory changes, and I have .zef directories all over the place, using up 215M -- no big deal, just a bit annoying.
[16:50] <ugexe> you can set ZEF_CONFIG_STOREDIR and ZEF_CONFIG_TEMPDIR (or edit the corresponding configuration file field) to point somewhere else like /tmp/.zef
[16:51] <lucs> Aha, that's a good idea, that way every project would use the same.
[16:51] <lucs> Thanks.
[16:51] *** NemokoschKiwi joined
[16:53] <tbrowder> guifa: my mac run is failing because of "Malformed UTF-8 near bytes 20 20 ff" at lin...
[16:54] *** NemokoschKiwi left
[16:56] <tbrowder> i have tried replacing that line but that didn't help. when i run "$ file badfile" on it i get "GM.rakumod: OS/2 REXX batch file, ASCII text"
[16:57] <tbrowder> weird, any hints appreciated, mac is a strange beast
[16:58] *** NemokoschKiwi joined
[17:01] *** derpydoo joined
[17:02] <tbrowder> i'm trying to trick it with an added comment at the top of the file...
[17:07] *** sena_kun left
[17:09] *** sena_kun joined
[17:34] *** razetime left
[17:39] *** poohman joined
[17:42] *** poohman left
[18:02] *** sena_kun left
[18:07] *** reportable6 left
[18:08] *** sena_kun joined
[18:08] *** reportable6 joined
[18:20] *** Guest89 joined
[18:23] *** euandreh joined
[18:29] *** Sgeo joined
[18:30] <El_Che> We have arm64 artifacts: https://cirrus-ci.com/task/5397261256491008
[18:31] <El_Che> worse case scenario: I could upload the manually. Trying to automate that part though, although cirrus build is slow because of queueing
[18:52] <El_Che> running on all distros: https://cirrus-ci.com/build/6484474112770048
[18:53] *** Abhoerschutz left
[18:53] *** Mikkel joined
[18:55] *** Mikkel left
[18:55] *** Mikkel joined
[18:56] *** Abhoerschutz joined
[19:02] *** poohman joined
[19:06] *** Mikkel left
[19:07] <guifa> tbrowder: I wish I had more ideas for you =/
[19:11] *** mikkelstb joined
[19:12] <tbrowder> guifa: thnx
[19:14] <tbrowder> i’m gonna try a raku char-by-char check on the file, maybe some clues
[19:15] *** poohman left
[19:24] *** perlbot left
[19:25] *** simcop2387 left
[19:43] <discord-raku-bot> <Nemokosch> Hi, second attempt... what would you use in place of Text::Extract::Word?
[19:58] *** NemokoschKiwi left
[20:01] *** mikkelstb left
[20:01] *** mikkelstb joined
[20:18] <Geth> ¦ doc: 2colours++ created pull request #4132: Remove bot examples
[20:18] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4132
[20:36] *** mikkelstb left
[20:41] *** Kaiepi left
[20:51] *** mikkelstb joined
[20:54] *** perlbot joined
[20:55] *** simcop2387 joined
[20:59] *** Kaiepi joined
[21:08] *** derpydoo left
[21:13] *** NemokoschKiwi joined
[21:21] *** sena_kun left
[21:23] *** sena_kun joined
[21:31] *** mikkelstb left
[21:36] *** mikkelstb joined
[21:40] *** mikkelstb left
[21:46] *** NemokoschKiwi left
[21:52] <guifa> has anyone here used NativeCall with Windows ?
[22:21] *** sgrs joined
[22:35] *** Nemokosch joined
[22:39] *** Kaiepi left
[23:20] <discord-raku-bot> <Nemokosch> not me :c
[23:29] *** sena_kun left
[23:50] *** Nemokosch left
