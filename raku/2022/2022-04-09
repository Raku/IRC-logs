[00:02] *** melezhik left
[00:05] *** reportable6 left
[00:06] *** reportable6 joined
[01:06] *** evalable6 left
[01:06] *** committable6 left
[01:06] *** reportable6 left
[01:06] *** notable6 left
[01:06] *** linkable6 left
[01:06] *** statisfiable6 left
[01:06] *** coverable6 left
[01:06] *** releasable6 left
[01:06] *** nativecallable6 left
[01:06] *** shareable6 left
[01:06] *** bisectable6 left
[01:06] *** benchable6 left
[01:06] *** bloatable6 left
[01:06] *** unicodable6 left
[01:06] *** greppable6 left
[01:06] *** sourceable6 left
[01:06] *** quotable6 left
[01:07] *** benchable6 joined
[01:07] *** notable6 joined
[01:07] *** linkable6 joined
[01:07] *** sourceable6 joined
[01:07] *** statisfiable6 joined
[01:07] *** coverable6 joined
[01:08] *** evalable6 joined
[01:08] *** reportable6 joined
[01:08] *** shareable6 joined
[01:08] *** committable6 joined
[01:08] *** bisectable6 joined
[01:08] *** greppable6 joined
[01:08] *** quotable6 joined
[01:08] *** nativecallable6 joined
[01:08] *** bloatable6 joined
[01:09] *** releasable6 joined
[01:09] *** unicodable6 joined
[01:20] *** japhb left
[01:23] *** japhb joined
[01:37] *** swaggboi left
[02:15] *** swaggboi joined
[02:19] *** atweiden_air-- joined
[02:20] <atweiden_air--> m: role A { has $.a = prompt('a: ') }; role B does A { has $.b = prompt('b: ')  }; class AA does A { submethod TWEAK() { say('AA.TWEAK') } }; class AB is AA does B { submethod TWEAK() { say('AB.TWEAK') } }; AB.new.raku.say;

[02:20] <camelia> rakudo-moar 530e17848: OUTPUT: «a: AA.TWEAK␤b: a: AB.TWEAK␤AB.new(b => "   »Um die siebente Stund‘, am Brückendamm.«", a => "     »Am Mittelpfeiler.«", a => "»Wann treffen wir drei wieder zusamm?«")␤»

[02:20] <atweiden_air--> why does this prompt twice?

[02:20] <atweiden_air--> 2 repetitive rounds, i mean

[02:22] <atweiden_air--> m: role A { has $.a = prompt('a: ') }; role B does A { has $.b = prompt('b: ')  }; class AA does A {}; class AB is AA does B {}; AB.new.raku.say;

[02:22] <camelia> rakudo-moar 530e17848: OUTPUT: «a: b: a: AB.new(b => "   »Um die siebente Stund‘, am Brückendamm.«", a => "     »Am Mittelpfeiler.«", a => "»Wann treffen wir drei wieder zusamm?«")␤»

[02:22] <atweiden_air--> m: role A { has $.a = prompt('a: (Str)') }; role B does A { has $.b = prompt('b: (Str)')  }; class AA does A {}; class AB is AA does B {}; AB.new.raku.say;

[02:22] <camelia> rakudo-moar 530e17848: OUTPUT: «a: (Str)b: (Str)a: (Str)AB.new(b => "   »Um die siebente Stund‘, am Brückendamm.«", a => "     »Am Mittelpfeiler.«", a => "»Wann treffen wir drei wieder zusamm?«")␤»

[02:26] <atweiden_air--> I want to TWEAK() $!a in AB

[02:26] <atweiden_air--> this is fine, but repeats twice

[02:26] <atweiden_air--> m: role A {has $.a = prompt 'a (Str): '}; role B does A {has $.b = prompt 'b (Str): '}; class AA does A {}; class AB is AA does B {submethod TWEAK() {$!a = False}}; AB.new.raku.say;

[02:26] <camelia> rakudo-moar 530e17848: OUTPUT: «a (Str): b (Str): a (Str): AB.new(b => "   »Um die siebente Stund‘, am Brückendamm.«", a => Bool::False, a => "»Wann treffen wir drei wieder zusamm?«")␤»

[02:27] <atweiden_air--> not fine, $!a not declared in class AB

[02:27] <atweiden_air--> m: role A {has $.a = prompt 'a (Str): '}; role B {has $.b = prompt 'b (Str): '}; class AA does A {}; class AB is AA does B {submethod TWEAK() {$!a = False}}; AB.new.raku.say;

[02:27] <camelia> rakudo-moar 530e17848: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Attribute $!a not declared in class AB␤at <tmp>:1␤------> does B {submethod TWEAK() {$!a = False}}⏏; AB.new.raku.say;␤    expecting any of:␤        horizontal whitespace␤        postf…»

[02:28] <atweiden_air--> DWIM without TWEAK()

[02:28] <atweiden_air--> m: role A {has $.a = prompt 'a (Str): '}; role B {has $.b = prompt 'b (Str): '}; class AA does A {}; class AB is AA does B {}; AB.new.raku.say;

[02:28] <camelia> rakudo-moar 530e17848: OUTPUT: «a (Str): b (Str): AB.new(b => "   »Um die siebente Stund‘, am Brückendamm.«", a => "»Wann treffen wir drei wieder zusamm?«")␤»

[02:29] <atweiden_air--> m: role A {has $.a = prompt 'a (Str): '}; role B does A {has $.b = prompt 'b (Str): '; submethod TWEAK() {$!a = False}}; class AA does A {}; class AB is AA does B {}; AB.new.raku.say;

[02:29] <camelia> rakudo-moar 530e17848: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Attribute $!a not declared in role B␤at <tmp>:1␤------> tr): '; submethod TWEAK() {$!a = False}}⏏; class AA does A {}; class AB is AA doe␤    expecting any of:␤        horizontal whites…»

[03:19] *** linkable6 left
[03:19] *** evalable6 left
[03:22] *** evalable6 joined
[03:22] *** linkable6 joined
[04:22] *** benchable6 left
[04:22] *** coverable6 left
[04:22] *** sourceable6 left
[04:22] *** notable6 left
[04:22] *** releasable6 left
[04:22] *** greppable6 left
[04:22] *** committable6 left
[04:22] *** statisfiable6 left
[04:22] *** linkable6 left
[04:22] *** unicodable6 left
[04:22] *** shareable6 left
[04:22] *** evalable6 left
[04:22] *** nativecallable6 left
[04:22] *** bisectable6 left
[04:22] *** reportable6 left
[04:22] *** bloatable6 left
[04:22] *** quotable6 left
[04:22] *** greppable6 joined
[04:23] *** quotable6 joined
[04:23] *** nativecallable6 joined
[04:23] *** bloatable6 joined
[04:23] *** sourceable6 joined
[04:23] *** notable6 joined
[04:23] *** unicodable6 joined
[04:23] *** benchable6 joined
[04:23] *** reportable6 joined
[04:23] *** committable6 joined
[04:24] *** linkable6 joined
[04:24] *** bisectable6 joined
[04:24] *** statisfiable6 joined
[04:25] *** releasable6 joined
[04:25] *** coverable6 joined
[04:25] *** evalable6 joined
[04:25] *** shareable6 joined
[04:46] *** xinming left
[04:48] *** xinming joined
[05:12] *** lockywolf left
[05:16] *** lockywolf joined
[05:27] *** frost joined
[05:27] *** frost left
[05:30] *** lockywolf left
[05:34] *** lockywolf joined
[05:35] *** razetime joined
[05:51] *** frost joined
[06:07] *** reportable6 left
[06:07] *** reportable6 joined
[06:38] *** guifa left
[06:38] <CIAvash> atweiden_air--: `AB` does not have the `$!a` attribute, `AA` does, so it can access it via `$.a`. You can do at least three things: 1. make `$.a is rw`, and in AB do `$.a =False`. 2. move `TWEAK` method inside `AA`. 3. Avoid inheritance and do `class AB does B does A { method TWEAK { $!a = false } }`.

[06:39] <CIAvash> atweiden_air--: But I think it's best not to use prompt in attributes, and leave it inside `TWEAK`: `role R {has $.a; has $.b; method TWEAK { self!prompt_a; self!prompt_b; }; method !prompt_a { $!a = prompt 'a (Str): ' }; method !prompt_b { $!b = prompt 'b (Str): ' } }; class A does R {}; A.new.raku.say;`

[06:41] <CIAvash> atweiden_air--: or if you want to override things: `role R {has $.a; has $.b; method TWEAK { self!prompt_a; self!prompt_b; }; method !prompt_a { $!a = prompt 'a (Str): ' }; method !prompt_b { $!b = prompt 'b (Str): ' } }; class A does R { method TWEAK { self!prompt_b } }; A.new.raku.say;`

[06:43] *** guifa joined
[07:05] *** razetime left
[07:38] *** razetime joined
[07:40] *** lichtkind_ joined
[08:05] *** razetime left
[08:12] <lizmat> .tell Xliff please, if you notice any changes, please make an issue.  A workaround is nice, but if we don't know about issues, they continue to exist :-(

[08:13] *** razetime joined
[08:15] *** oodani left
[08:17] *** oodani joined
[08:24] *** Sgeo left
[08:25] *** jjido joined
[08:32] *** Manifest0 joined
[08:41] *** razetime left
[08:49] *** xinming left
[08:49] *** xinming joined
[08:53] *** n1to joined
[09:09] *** phil1 joined
[09:10] <phil1> Hello, I am trying to translate Dough Hoyte's football-game macro (cf. Let Over Lambda, p. 77), to Raku.

[09:10] <phil1> Here's my first attempt.

[09:10] <phil1> Uploaded file: https://uploads.kiwiirc.com/files/b48d7dc3ddb792eab382d4c4a1cdd075/pasted.txt

[09:12] <phil1> When I run it, I get this message: "expecting any of: argument list"

[09:13] <phil1> Sorry, my uploaded file doesn't containt "use experimental :macros;".

[09:14] <phil1> Are macros within macros allowed in Raku?

[09:15] <phil1> And here's the original Lisp code:

[09:15] <phil1> Uploaded file: https://uploads.kiwiirc.com/files/7a0b90472de5a096ae2ba5605959d7c3/pasted.txt

[09:19] *** jjido left
[09:26] <phil1> Hello, I found a solution without macros.

[09:26] <phil1> Uploaded file: https://uploads.kiwiirc.com/files/4827162b95613628fb61237957071625/pasted.txt

[09:26] <phil1> Please ignore my question.

[09:30] *** phil1 left
[10:04] *** jjido joined
[10:06] *** guifa left
[10:36] *** linkable6 left
[10:39] *** linkable6 joined
[10:46] *** silasfox joined
[10:47] *** silasfox left
[11:17] *** jjido left
[11:38] *** sena_kun left
[11:39] *** sena_kun joined
[12:06] *** reportable6 left
[12:08] *** reportable6 joined
[12:22] <atweiden_air--> CIAvash i’ll take a look when i get a moment. thanks

[12:26] *** atweiden_air-- left
[12:32] *** hhcryfqnut joined
[12:49] *** hhcryfqnut left
[13:09] *** coleman joined
[13:21] *** hhcryfqnut joined
[13:30] *** guifa joined
[13:31] *** guifa left
[13:32] *** jjido joined
[13:33] *** razetime joined
[13:35] *** silasfox joined
[13:36] *** jjido left
[13:41] <Manifest0> Hi!

[13:41] <Manifest0> When we define a main function like "sub MAIN(Int $v)" shouldn't the type constraint be enforced when we invoke from the command line (in this example, shouldnt $v be Int and not IntStr)? 

[13:42] <lizmat> m: dd IntStr ~~ Int

[13:42] <camelia> rakudo-moar 530e17848: OUTPUT: «Bool::True␤»

[13:42] <lizmat> that's why an Int is also ok

[13:43] <Manifest0> m: dd IntStr ~~ Str

[13:43] <camelia> rakudo-moar 530e17848: OUTPUT: «Bool::True␤»

[13:44] <Manifest0> This is problematic if i'm passing them to a new multi function

[13:45] *** silasfox left
[13:47] <Manifest0> example: 

[13:47] <Manifest0> Ambiguous call to 'sqlite3_bind(DBDish::SQLite::Native::STMT, Int, IntStr)'; these signatures all match:

[13:47] <Manifest0>   (DBDish::SQLite::Native::STMT $stmt, Int $n, Int:D $i)

[13:47] <Manifest0>   (DBDish::SQLite::Native::STMT $stmt, Int $n, Str:D $d)

[13:48] <Manifest0>   (DBDish::SQLite::Native::STMT $stmt, Int $n, Real:D $d)

[13:48] <Manifest0> :-(

[14:09] *** guifa joined
[14:51] *** dogbert17 joined
[15:01] *** eseyman left
[15:03] *** eseyman joined
[15:09] *** frost left
[15:19] *** n1to left
[15:19] *** bd3i left
[15:19] *** hhcryfqnut left
[15:20] *** bd3i joined
[15:24] *** hhcryfqnut joined
[15:35] <nine> Manifest0: $v.Int

[15:36] <nine> Or maybe declare it as sub MAIN(Int() $v)

[15:45] *** sena_kun left
[15:46] *** sena_kun joined
[16:22] *** razetime left
[16:43] <hhcryfqnut> syntax question:

[16:43] <hhcryfqnut> https://stackoverflow.com/questions/71809995/iife-alternatives-in-raku

[16:56] <lizmat> hhcryfqnut: answered it

[16:57] *** sena_kun left
[16:57] *** guifa left
[16:58] *** sena_kun joined
[17:09] <hhcryfqnut> thanks!

[17:09] <lizmat> you're welcome :-)

[17:14] *** hhcryfqnut left
[17:26] *** jadedctrl joined
[17:40] *** melezhik joined
[17:40] <melezhik> Hi community! I have dropped future design of SparkyCI - https://github.com/melezhik/sparkyci/blob/main/docs/dsl.md , would appreciate for comments

[17:43] *** melezhik left
[17:53] *** melezhik joined
[17:54] <lizmat> melezhik: perhaps also post on reddit ?

[17:54] <melezhik> @lizmat, yeah maybe ... just decided to start with irc first ...

[17:55] <melezhik> Still not sure where people visit more ...

[17:58] *** melezhik left
[18:04] *** p6steve_ left
[18:04] *** discord-raku-bot left
[18:05] *** p6steve left
[18:05] *** discord-raku-bot joined
[18:06] *** p6steve joined
[18:06] *** p6steve_ joined
[18:07] *** reportable6 left
[18:08] *** reportable6 joined
[18:11] *** p6steve left
[18:11] *** p6steve_ left
[18:15] *** Sgeo joined
[18:32] *** melezhik joined
[18:37] *** melezhik left
[18:45] *** melezhik joined
[18:47] *** melezhik left
[18:49] *** jjido joined
[18:59] *** jjido left
[19:10] <Geth> ¦ doc: dd2c13d77d | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | doc/Language/exceptions.pod6

[19:10] <Geth> ¦ doc: Some tweaks on CATCH (#4050)

[19:10] <Geth> ¦ doc: 

[19:10] <Geth> ¦ doc: * Some tweaks on CATCH

[19:10] <Geth> ¦ doc: 

[19:10] <Geth> ¦ doc: In resoponse to https://github.com/Raku/doc/issues/4049

[19:10] <Geth> ¦ doc: 

[19:11] <Geth> ¦ doc: * typo

[19:11] <linkable6> Link: https://docs.raku.org/language/exceptions

[19:11] <Geth> ¦ doc: <…commit message has 7 more lines…>

[19:11] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/dd2c13d77d

[19:11] *** linkable6 left
[19:13] *** jjido joined
[19:13] *** linkable6 joined
[19:35] *** coleman left
[20:11] *** p6steve joined
[20:11] *** p6steve_ joined
[20:20] *** Geth left
[20:20] *** Geth joined
[20:28] *** melezhik joined
[20:29] *** melezhik left
[20:45] *** guifa joined
[20:48] *** p6steve_ left
[20:50] *** p6steve left
[20:57] *** p6steve joined
[20:57] *** p6steve_ joined
[21:06] *** guifa left
[21:14] *** p6steve_ left
[21:14] *** p6steve left
[21:26] *** lichtkind__ joined
[21:29] *** guifa joined
[21:29] *** lichtkind_ left
[22:05] *** discord-raku-bot left
[22:06] *** discord-raku-bot joined
[22:12] *** guifa left
[22:54] *** jjido left
[23:54] *** reportable6 left
[23:54] *** committable6 left
[23:54] *** bloatable6 left
[23:54] *** nativecallable6 left
[23:54] *** linkable6 left
[23:54] *** releasable6 left
[23:54] *** benchable6 left
[23:54] *** quotable6 left
[23:54] *** shareable6 left
[23:54] *** sourceable6 left
[23:54] *** statisfiable6 left
[23:54] *** bisectable6 left
[23:54] *** coverable6 left
[23:54] *** evalable6 left
[23:54] *** greppable6 left
[23:54] *** unicodable6 left
[23:54] *** notable6 left
[23:54] *** reportable6 joined
[23:55] *** linkable6 joined
[23:55] *** greppable6 joined
[23:55] *** bloatable6 joined
[23:56] *** coverable6 joined
[23:56] *** bisectable6 joined
[23:56] *** quotable6 joined
[23:56] *** releasable6 joined
[23:56] *** benchable6 joined
[23:56] *** nativecallable6 joined
[23:56] *** committable6 joined
[23:56] *** sourceable6 joined
[23:57] *** notable6 joined
[23:57] *** statisfiable6 joined
[23:57] *** evalable6 joined
[23:57] *** unicodable6 joined
[23:57] *** shareable6 joined
