[00:07] *** reportable6 left
[00:08] *** reportable6 joined
[00:31] *** xinming left
[00:33] *** xinming joined
[00:58] <tonyo> If you guys have questions or want something clarified lmk and I'll update the post

[01:42] *** tobs left
[01:42] *** tobs joined
[02:42] *** evalable6 left
[02:42] *** benchable6 left
[02:42] *** greppable6 left
[02:42] *** linkable6 left
[02:42] *** bisectable6 left
[02:42] *** notable6 left
[02:42] *** unicodable6 left
[02:42] *** squashable6 left
[02:42] *** shareable6 left
[02:42] *** committable6 left
[02:42] *** quotable6 left
[02:42] *** coverable6 left
[02:42] *** nativecallable6 left
[02:42] *** reportable6 left
[02:42] *** sourceable6 left
[02:42] *** bloatable6 left
[02:42] *** releasable6 left
[02:42] *** statisfiable6 left
[02:42] *** tellable6 left
[02:43] *** notable6 joined
[02:43] *** sourceable6 joined
[02:43] *** reportable6 joined
[02:43] *** committable6 joined
[02:44] *** shareable6 joined
[02:44] *** quotable6 joined
[02:45] *** bloatable6 joined
[02:45] *** evalable6 joined
[03:43] *** squashable6 joined
[03:43] *** bisectable6 joined
[03:44] *** releasable6 joined
[03:44] *** nativecallable6 joined
[03:44] *** benchable6 joined
[03:45] *** unicodable6 joined
[04:45] *** coverable6 joined
[05:43] *** statisfiable6 joined
[05:44] *** linkable6 joined
[05:45] *** tellable6 joined
[06:07] *** reportable6 left
[06:28] *** frost joined
[07:18] *** Darkcoal joined
[07:26] *** Darkcoal left
[07:26] *** Darkcoal joined
[07:34] *** jjido joined
[07:41] *** Sgeo_ left
[07:50] <CIAvash> weekly: https://deathbykeystroke.com/articles/20220224-building-a-cro-app-part-1.html

[07:50] <notable6> CIAvash, Noted! (weekly)

[07:53] <CIAvash> tonyo: I didn't run your code, but this part confused me: `"?client_id={encode-percents: config<gh-client>}"`; isn't `encode-percents` a sub? adding a `:` makes it a label, doesn't it?

[08:01] *** Darkcoal left
[08:02] *** abraxxa joined
[08:03] *** Darkcoal joined
[08:05] *** dakkar joined
[08:08] *** abraxxa left
[08:08] *** Darkcoal left
[08:09] *** abraxxa joined
[08:10] *** Darkcoal joined
[08:23] *** Darkcoal left
[08:23] *** jjido left
[08:24] *** Darkcoal joined
[08:26] *** jjido joined
[08:45] *** greppable6 joined
[08:53] *** ShaneC left
[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: 48d2b014bd | (Elizabeth Mattijsen)++ | solutions/meta/sunsetting-p6c-cpan.md

[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: Stop the REA harvester at the same time as zef

[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: 

[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: This will make the sunsetting of p6c and cpan clearer and more

[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: definite.  It also wouldn't necessitate REA offswitching by default.

[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: 

[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: Anybody who would still like to use p6c / cpan as an ecosystem, is

[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: welcome to take the REA harvester code and set up their own ecosystem

[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: which can then be activated in zef by those people who would like to

[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: do that.

[09:05] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: review: https://github.com/Raku/problem-solving/commit/48d2b014bd

[09:10] <p6steve> m: my $n=1.11; $n.round(0.1)

[09:10] <camelia> rakudo-moar 028828ac8: ( no output )

[09:10] <p6steve> m: my $n=1.11; say $n.round(0.1)

[09:10] <camelia> rakudo-moar 028828ac8: OUTPUT: «1.1␤»

[09:10] <p6steve> m: my $n=1.11; say $n.round: 0.11

[09:10] <camelia> rakudo-moar 028828ac8: OUTPUT: «1.1␤»

[09:11] <p6steve> m: my $n=1.11; say $n.round: 0.01

[09:11] <camelia> rakudo-moar 028828ac8: OUTPUT: «1.11␤»

[09:12] <p6steve> CIAVash: just wondering if tonyo intends colon method call variant

[09:22] *** abraxxa left
[09:24] *** abraxxa joined
[09:30] *** abraxxa left
[09:31] *** abraxxa joined
[09:35] *** archenoth joined
[09:38] *** Oshawott left
[09:39] *** jmcgnh left
[09:48] *** jmcgnh joined
[09:50] *** sena_kun left
[10:08] *** reportable6 joined
[10:34] *** jjido left
[10:45] *** sena_kun joined
[11:21] <lizmat> weekly: https://twitter.com/CondemnedCell/status/1498304431418392583

[11:21] <notable6> lizmat, Noted! (weekly)

[11:35] *** jjido joined
[12:07] *** reportable6 left
[12:18] *** sena_kun left
[12:20] *** sena_kun joined
[12:25] *** jjido left
[12:33] *** jjido joined
[12:53] *** curiosa joined
[13:16] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: e1c5d9e097 | (Elizabeth Mattijsen)++ | solutions/meta/sunsetting-p6c-cpan.md

[13:16] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: Use deprecated instead of sunsetting initially

[13:16] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: 

[13:16] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: - also refer to sunsetting at shutdown of harvesters

[13:16] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: - remove spurious i

[13:16] <Geth> ¦ problem-solving/sunsetting-p6c-cpan: review: https://github.com/Raku/problem-solving/commit/e1c5d9e097

[13:31] <Geth> ¦ ecosystem: 871c6ec825 | (Elizabeth Mattijsen)++ | META.list

[13:31] <Geth> ¦ ecosystem: Freeze DateTime::Math

[13:31] <Geth> ¦ ecosystem: 

[13:31] <Geth> ¦ ecosystem: While we move it to the zef ecosystem

[13:31] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/871c6ec825

[13:32] *** curiosa left
[14:10] *** qorg11 left
[14:11] *** qorg11 joined
[14:14] *** frost left
[14:16] <p6steve> ab73984354e0acdb1e968aa4afdce708674bf52

[14:18] <lizmat> p6steve: if that was a secret, it is no more  :-)

[14:22] <p6steve> oops - will change it!

[14:22] <p6steve> tx

[14:26] <perryprog> very colorful secret though

[14:27] <p6steve> panic over

[14:31] *** Geth left
[14:31] *** Geth joined
[14:58] *** frost joined
[15:14] *** Sgeo joined
[15:14] *** Lucy joined
[15:15] <Lucy> .

[15:15] *** Lucy left
[15:15] *** Lucy_chan joined
[15:23] *** Lucy_chan left
[15:33] *** frost left
[15:39] *** jjido left
[15:57] *** abraxxa left
[16:08] *** tejr left
[16:09] *** reportable6 joined
[16:09] *** tejr joined
[16:19] *** squashable6 left
[16:19] *** squashable6 joined
[16:21] *** melezhik joined
[16:23] <melezhik> .tell Tony - good article on cro/oauth - I did similar things for my butterflies - https://github.com/melezhik/mybutterflies/blob/master/app.raku#L747 ))

[16:23] <tellable6> melezhik, I'll pass your message to Tony_

[16:24] <melezhik> instead of saving authenticated users to database I used file system ...

[16:24] <guifa> That article does have me thinking… does anyone know of any good hosting services that they can run Raku on?  I tried doing a compile of Raku on mine, but the shared hosting memory limitations caused it to not work

[16:25] <melezhik> but your approach is better I thinks, e easier to track statuses just by looking into db table

[16:26] <melezhik> guifa from my experience with doing a lot of Raku applications and serving them via different clouds and hosting, so far I am quite happy with Digital ocean droplets , at least this is a good value for money

[16:27] <melezhik> also if someone on a tied budget they might consider azure spot VMs - ready VMs with a good discount, but without guarantee they won't be destroyed one day ))

[16:28] <melezhik> https://azure.microsoft.com/en-us/services/virtual-machines/spot/

[16:29] <melezhik> and yeas, any Rakudo web applications ( I guess most of the time we imply cro app ) is still quite thirsty in terms on memory

[16:29] <guifa> the pricing for DO doesn't seem too bad.  I was hoping for something in the $10-20/mo range for a side project I wanted.  I mean, I *could* write it all in PHP with my current host but meh.  I'd rather do Raku haha

[16:29] <melezhik> so you'll want at least 4-8 GB memory for reliable configuration

[16:29] <melezhik> guifa ++ ))

[16:30] <melezhik> I host https://sparrowhub.io on DO

[16:31] <guifa> Basically I've had an HTML/JS based scoreboard / scoresheet system for water polo, designed to be crazy cheap for schools to deploy (laptop + browser + HDMI cable to a TV)

[16:32] <melezhik> I have I think 8 GB with DO droplet and I host 2 Raku web apps, one Raku daemon app and 1 Perl app

[16:32] <guifa> I even had basic server code running locally for a while so multiple clients could control it simultaneously (mirroring a real world game's table set up) but it'd be much cooler to handle it remotely.  But it feels like a good time to try to learn Cro and get it set up on that

[16:34] <melezhik> I have a good experience with Cro. It still has some glitches, but I think it is ready for small and medium size projects for sure

[16:35] <melezhik> need to drop off

[16:35] *** melezhik left
[16:36] *** dakkar left
[17:00] <tonyo> p6steve: CIAvash i prefer the colon method call when it doesn't make the argument ambiguous..eg @arr.push: <some stuff>

[17:01] <tonyo> that style makes this type of thing ambiguous though:   @arr.push: encode-percents: 'xyz' if True

[17:03] * guifa does it similarly to tonyo

[17:03] <guifa> The one I don't see as often is the reverse colon call syntax

[17:04] <tonyo> reverse colon?

[17:04] <guifa> push @array: <stuff>

[17:04] <tonyo> ah

[17:04] <guifa> method $invocant: @args

[17:04] <tonyo> a strange artifact of perl

[17:05] <guifa> when doing more OO or functional code it feels out of place, but when you're doing some more old-school like coding, it feels more natural

[17:05] <tonyo> wasn't aware that even worked

[17:06] <tonyo> maybe it's an effect of doing haskell a bit but that pattern looks natural for functional

[17:06] <guifa> I just like the flexibility it gives.  Sometimes you want to put a greater focus on the action

[17:07] <guifa> implode $server: $message jumps out a bit more than $server.implode: $message

[17:07] <tonyo> that's convincing

[17:10] <guifa> the other time it's nice is for teh pretty

[17:10] <guifa> $a.push: @foo; $aaaaaaa.push: @foo; $aaaa.push: @foo

[17:10] <guifa> most folks would just add spaces between the colon and @foo

[17:11] <guifa> but then the push bit isn't lined up

[17:11] *** toddr joined
[17:11] <guifa> reverse syntax lets you line up method, invocant and args much nicer since there's that extra <ws>

[17:17] <tonyo> also a good point

[17:18] <guifa> Only reason I've avoided it is because I switched to Comma and for a long time it didn't understand the syntax.  Haven't tried recently

[17:32] <tonyo> ah, i'm still using vim

[17:32] <tonyo> even for dayjob writing go

[17:45] *** djerius left
[17:46] *** djerius joined
[17:50] *** jjido joined
[18:01] *** ShaneC joined
[18:06] *** reportable6 left
[18:09] *** reportable6 joined
[18:10] *** djerius left
[18:11] *** djerius joined
[18:18] *** jjido left
[18:23] <El_Che> tonyo: intellij is pretty sweet for go

[18:24] <tonyo> too much mouse use in IDEs for me. i have a browser plugin that allows me to browse using only the keyboard

[18:25] <El_Che> tonyo: I have a plugin showing the the shortcut every time I use the mouse

[18:25] <tonyo> goland crashes both of my computers (slows the m1 down to a halt, seems to try to use all 20 cores in my desktop)

[18:25] <El_Che> weird

[18:26] <El_Che> I use it on a 12 inch linux dell inspiron and an old apple air 2015/17 model

[18:26] <CIAvash> tonyo: I meant that `encode-percents` is not a method, so you can't write `encode-percents: config<gh-client>`, you would have to write `encode-percents config<gh-client>` or `config<gh-client>.&encode-precents`. Unless I'm missing something?

[18:26] <El_Che> on the mac it's slow starting (everything is), but works fast 

[18:27] *** discord-raku-bot left
[18:27] *** discord-raku-bot joined
[18:27] <CIAvash> m: encode-percents: 'client'; dd encode-percents

[18:27] <camelia> rakudo-moar 028828ac8: OUTPUT: «WARNINGS for <tmp>:␤Useless use of constant string "client" in sink context (line 1)␤Label encode-percents = Label.new(name => "encode-percents", file => "<tmp>", line => 1)␤»

[18:28] <tonyo> CIAvash: ah! encode-percents is exported by `Cro::Uri`, after all that code is explained you'll see a `use` block that imports that sub

[18:30] <CIAvash> yes, I know, what I mean is that it's a sub, not a method

[18:37] <tonyo> i think because it's not in the same package it's not interpreted as a label but as a sub in that package but now i'm not entirely sure

[18:53] <Geth> ¦ ecosystem: 85d5188c75 | (Elizabeth Mattijsen)++ | META.list

[18:53] <Geth> ¦ ecosystem: Freeze DateTime::TimeZone

[18:53] <Geth> ¦ ecosystem: 

[18:53] <Geth> ¦ ecosystem: While we move it to the zef ecosystem

[18:53] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/85d5188c75

[19:27] *** evalable6 left
[19:27] *** linkable6 left
[19:28] *** linkable6 joined
[19:45] *** DarthGandalf left
[19:46] *** DarthGandalf joined
[19:48] *** jjido joined
[20:10] *** djerius left
[20:11] *** djerius joined
[20:18] *** morte_ joined
[20:18] <p6steve> both: "yes, I know, what I mean is that it's a sub, not a method" is what stumped me too

[20:19] <p6steve> btw m1 is definitely a minefield for all non-core (ie. Apple sic) toolchains

[20:20] *** djerius left
[20:20] <p6steve> viz. https://p6steve.wordpress.com/2021/11/18/raku-at-the-monterey-docks/

[20:21] *** djerius joined
[20:31] <discord-raku-bot> <Anton Antonov#7232> @p6steve Thank you for you comment here: https://www.reddit.com/r/rakulang/comments/rt77t4/connecting_mathematica_and_raku_anton_antonov/ !

[20:33] <discord-raku-bot> <Anton Antonov#7232> @p6steve I plan to use your work here https://github.com/p6steve/raku-Math-Polygons to program random mandalas in Raku.

[20:33] <discord-raku-bot> <Anton Antonov#7232> @p6steve I plan to use your work here https://github.com/p6steve/raku-Math-Polygons to program random mandalas in Raku.

[20:33] <discord-raku-bot> <Anton Antonov#7232> @p6steve Thank you for you comment here: https://www.reddit.com/r/rakulang/comments/rt77t4/connecting_mathematica_and_raku_anton_antonov/ !

[20:55] *** djerius left
[20:55] *** morte_ left
[20:56] *** djerius joined
[20:57] *** ShaneC left
[20:59] *** monkey_ joined
[21:29] *** evalable6 joined
[21:30] *** sena_kun left
[21:31] <p6steve> anton: cool - Math::Polygons was my tiny "starter" proto in the vein of "all real things can be represented as a raku class instance"

[21:31] *** sena_kun joined
[21:32] <p6steve> Math::Polygons so far is a very tiny piece of all polygons and all polygon methods ... feel free to build on this seed!! 

[21:33] <p6steve> (and to PR back any improvements)

[21:34] <p6steve> (PS. this can on;y be done with languages that are approachable and have "proper" polymorpphism (ie inheritance & roles))

[21:38] *** sena_kun left
[21:39] *** sena_kun joined
[21:47] *** jjido left
[21:49] *** djerius left
[21:51] *** djerius joined
[22:12] *** Darkcoal left
[22:22] *** monkey_ left
[22:22] *** monkey_` joined
[22:34] *** sena_kun left
[22:34] *** sena_kun joined
[23:04] *** monkey_` left
[23:53] *** japhb left
[23:58] *** japhb joined
