[00:04] *** jaldhar_ left
[00:05] *** jaldhar_ joined
[00:11] *** cpan-raku left
[00:12] <Geth> ¦ doc: germanrodriguezherrera++ created pull request #3088: Fixed HTTPRequest example.

[00:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/3088

[00:12] *** cpan-raku joined
[00:12] *** cpan-raku left
[00:12] *** cpan-raku joined
[00:15] *** lucasb left
[00:30] *** wildtrees left
[01:30] *** bloatable6 left
[01:30] *** releasable6 left
[01:30] *** notable6 left
[01:30] *** committable6 left
[01:30] *** quotable6 left
[01:30] *** statisfiable6 left
[01:30] *** greppable6 left
[01:30] *** unicodable6 left
[01:30] *** reportable6 left
[01:30] *** shareable6 left
[01:30] *** squashable6 left
[01:30] *** benchable6 left
[01:30] *** nativecallable6 left
[01:30] *** coverable6 left
[01:31] *** coverable6 joined
[01:31] *** unicodable6 joined
[01:31] *** committable6 joined
[01:31] *** releasable6 joined
[01:31] *** statisfiable6 joined
[01:31] *** shareable6 joined
[01:32] *** bloatable6 joined
[01:32] *** reportable6 joined
[01:32] *** greppable6 joined
[01:32] *** quotable6 joined
[01:32] *** notable6 joined
[01:33] *** nativecallable6 joined
[01:33] *** squashable6 joined
[01:33] *** benchable6 joined
[01:37] <Xliff_> m: my @a = 'a'...'z'; @a[* -3 .. * - 1].say

[01:37] <camelia> rakudo-moar 75056dfa1: OUTPUT: «(x y z)␤»

[01:46] *** jaldhar_ left
[01:47] *** jaldhar_ joined
[01:48] *** jaldhar_ left
[01:49] *** jaldhar_ joined
[02:10] <ZzZombo> m: say Nil | Str | '' ~~ .defined

[02:10] <camelia> rakudo-moar 75056dfa1: OUTPUT: «True␤»

[02:11] <ZzZombo> m: say Nil | Str  ~~ .defined

[02:11] <camelia> rakudo-moar 75056dfa1: OUTPUT: «False␤»

[02:17] <ZzZombo> m: <1, 'a'>.succ.say

[02:17] <camelia> rakudo-moar 75056dfa1: OUTPUT: «No such method 'succ' for invocant of type 'List'. Did you mean any of these?␤    sec␤    sech␤    sum␤    uc␤␤  in block <unit> at <tmp> line 1␤␤»

[02:17] <ZzZombo> m: <1/'a'>.succ.say

[02:17] <camelia> rakudo-moar 75056dfa1: OUTPUT: «1/'a'␤»

[02:17] <ZzZombo> m: IntStr.new(1, 'a').succ.say

[02:17] <camelia> rakudo-moar 75056dfa1: OUTPUT: «2␤»

[02:19] <ZzZombo> m: say ~IntStr.new(1, 'a').succ

[02:19] <camelia> rakudo-moar 75056dfa1: OUTPUT: «2␤»

[02:19] <ZzZombo> m: IntStr.new(1, 'a').succ.WHAT.say

[02:19] <camelia> rakudo-moar 75056dfa1: OUTPUT: «(Int)␤»

[02:20] <ZzZombo> m: say (~IntStr.new(1, 'a').succ).WHAT

[02:20] <camelia> rakudo-moar 75056dfa1: OUTPUT: «(Str)␤»

[02:20] <ZzZombo> m: say (~IntStr.new(1, 'a').succ)

[02:20] <camelia> rakudo-moar 75056dfa1: OUTPUT: «2␤»

[02:32] *** jaldhar_ left
[02:33] *** jaldhar_ joined
[02:48] *** jaldhar_ left
[02:49] *** jaldhar_ joined
[02:50] *** maettu left
[02:50] *** jaldhar_ left
[02:51] *** jaldhar_ joined
[02:52] *** maettu joined
[03:18] *** jaldhar_ left
[03:23] *** jaldhar_ joined
[03:34] *** jaldhar_ left
[03:35] *** jaldhar_ joined
[03:44] *** jaldhar_ left
[03:47] *** jaldhar_ joined
[04:10] <ZzZombo> m: say (~(IntStr.new(1, 'a').succ))

[04:10] <camelia> rakudo-moar 75056dfa1: OUTPUT: «2␤»

[04:11] <ZzZombo> m: say (IntStr.new(1, 'a').Str.succ)

[04:11] <camelia> rakudo-moar 75056dfa1: OUTPUT: «b␤»

[04:11] <ZzZombo> WTF

[04:11] *** MasterDuke left
[04:11] <ZzZombo> Is not the string context supposed to make the former return 'b' as well?

[04:42] <Xliff_> m: say ((~(IntStr.new(1, 'a')).succ))

[04:43] <camelia> rakudo-moar 75056dfa1: OUTPUT: «2␤»

[04:46] *** jaldhar_ left
[04:47] *** jaldhar_ joined
[04:48] *** jaldhar_ left
[04:49] *** jaldhar_ joined
[04:50] *** jaldhar_ left
[04:51] *** jaldhar_ joined
[05:03] <ZzZombo> m: role StrIdx { also does Positional;method AT-POS($i) is rw { self.substr-rw($i, 1) }; };my $s = 'asd' does StrIdx;say $s[0];$s[0] = 'b';say $s

[05:03] <camelia> rakudo-moar 75056dfa1: OUTPUT: «a␤Cannot modify an immutable Str+{StrIdx} (asd)␤  in block <unit> at <tmp> line 1␤␤»

[05:04] <Xliff_> m: role StrIdx { also does Positional;method AT-POS($i) is rw { self.substr-rw($i, 1) }; };my $s = 'asd' but StrIdx;say $s[0];$s[0] = 'b';say $s

[05:04] <camelia> rakudo-moar 75056dfa1: OUTPUT: «a␤Cannot modify an immutable Str+{StrIdx} (asd)␤  in block <unit> at <tmp> line 1␤␤»

[05:05] <Xliff_> m: role StrIdx { also does Positional;method AT-POS($i) is rw { self.substr-rw($i, 1) }; };my $s = 'asd'; $s does StrIdx; say $s[0]; $s[0] = 'b';say $s

[05:05] <camelia> rakudo-moar 75056dfa1: OUTPUT: «a␤Cannot modify an immutable Str+{StrIdx} (asd)␤  in block <unit> at <tmp> line 1␤␤»

[05:09] <Xliff_> m: role StrIdx { also does Positional; method AT-POS($i) is rw { self.substr-rw($i, 1) }; };my $s = 'asd'; $s does StrIdx; say $s[0]; $s[0] = 'b'; $a = "asd"; $a.substr-rw(1, 1) = "b"; $a.say

[05:09] <camelia> rakudo-moar 75056dfa1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$a' is not declared␤at <tmp>:1␤------> 3$s does StrIdx; say $s[0]; $s[0] = 'b'; 7⏏5$a = "asd"; $a.substr-rw(1, 1) = "b"; $a␤»

[05:10] *** xinming_ left
[05:10] <Xliff_> m: my $a = "asd"; $a.substr-rw(1, 1) = "b"; $a.say

[05:10] <camelia> rakudo-moar 75056dfa1: OUTPUT: «abd␤»

[05:11] <Xliff_> m: role StrIdx { also does Positional;method AT-POS($i) is rw { self.substr-rw($i, 1) }; };my $s = 'asd'; $s but StrIdx; say $s[0]; $s[0] = 'b';say $s

[05:11] <camelia> rakudo-moar 75056dfa1: OUTPUT: «asd␤Cannot modify an immutable Str (asd)␤  in block <unit> at <tmp> line 1␤␤»

[05:11] <Xliff_> m: role StrIdx { also does Positional;method AT-POS($i) is rw { self.substr-rw($i, 1) }; };my $s = 'asd'; my $t = $s but StrIdx; say $s[0]; $s[0] = 'b';say $s

[05:11] <camelia> rakudo-moar 75056dfa1: OUTPUT: «asd␤Cannot modify an immutable Str (asd)␤  in block <unit> at <tmp> line 1␤␤»

[05:11] <Xliff_> m: role StrIdx { also does Positional;method AT-POS($i) is rw { self.substr-rw($i, 1) }; };my $s = 'asd'; my $t = $s but StrIdx; say $s[0]; $t[0] = 'b';say $s

[05:11] <camelia> rakudo-moar 75056dfa1: OUTPUT: «asd␤Cannot modify an immutable Str+{StrIdx} (asd)␤  in block <unit> at <tmp> line 1␤␤»

[05:12] *** xinming_ joined
[06:29] *** reportable6 left
[06:29] *** committable6 left
[06:29] *** coverable6 left
[06:29] *** releasable6 left
[06:29] *** statisfiable6 left
[06:30] *** releasable6 joined
[06:31] *** reportable6 joined
[06:31] *** coverable6 joined
[06:32] *** committable6 joined
[06:32] *** statisfiable6 joined
[07:17] <Geth> ¦ doc: sztanyi++ created pull request #3089: code example error, add file name

[07:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/3089

[07:41] <Geth> ¦ doc: 7d33a5f11c | (German Rodriguez Herrera)++ | doc/Language/grammars.pod6

[07:41] <Geth> ¦ doc: HTTPRequest example in "grammars" section corrected and slightly improved.

[07:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7d33a5f11c

[07:41] <Geth> ¦ doc: afc638c75f | (German Rodriguez Herrera)++ | doc/Language/grammars.pod6

[07:41] <Geth> ¦ doc: Whitespace fix.

[07:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/afc638c75f

[07:41] <Geth> ¦ doc: f80bd9f1f1 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/grammars.pod6

[07:41] <Geth> ¦ doc: Merge pull request #3088 from germanrodriguezherrera/master

[07:41] <Geth> ¦ doc: 

[07:41] <Geth> ¦ doc: Fixed HTTPRequest example.

[07:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f80bd9f1f1

[08:01] *** hythm joined
[08:03] *** angelds joined
[08:20] <Geth> ¦ doc: 08721e5657 | (JJ Merelo)++ | doc/Language/control.pod6

[08:20] <Geth> ¦ doc: Changes example to reflect intent, not syntax ref #1748

[08:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/08721e5657

[08:20] <Geth> ¦ doc: 42ab7a87b1 | (JJ Merelo)++ | 2 files

[08:20] <Geth> ¦ doc: Changes wrong description

[08:20] <Geth> ¦ doc: 

[08:20] <Geth> ¦ doc: This closes 3075

[08:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/42ab7a87b1

[08:26] <hythm> Xliff_, if you are around, I have a question about how to get the color of widget using P6-GtkPlus

[08:31] <hythm> I'm trying "$color = $w.get-style-context.get-color: GTK_STATE_FLAG_NORMAL", but .get-color expects additional $color parameter. I'm trying to get the color not set it, so not sure how to add the $color parameter

[08:33] *** angelds left
[08:34] *** angelds joined
[09:08] *** sena_kun joined
[09:11] *** angelds left
[09:11] *** angelds joined
[09:17] <Geth> ¦ doc: f37ab1b1d3 | (JJ Merelo)++ | template/footer.html

[09:17] <Geth> ¦ doc: Evolves to use Raku

[09:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f37ab1b1d3

[09:19] <Geth> ¦ doc: bfc9553189 | (JJ Merelo)++ | doc/Language/control.pod6

[09:19] <Geth> ¦ doc: Eliminates tabs

[09:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bfc9553189

[09:24] *** hythm left
[09:29] *** MasterDuke joined
[09:39] *** angelds left
[09:43] <Geth> ¦ doc: 62dc130b35 | (JJ Merelo)++ | template/footer.html

[09:43] <Geth> ¦ doc: Eliminates EDITURL from footer

[09:43] <Geth> ¦ doc: 

[09:43] <Geth> ¦ doc: Where it's no longer substituted. Also full stops.

[09:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/62dc130b35

[10:00] *** rindolf joined
[10:00] <rindolf> hi all, sup?

[10:11] *** clarjon1 left
[11:08] *** Altai-man_ joined
[11:10] *** sena_kun left
[11:18] *** epony left
[11:20] <SmokeMachine> m: say (Nil | Str | '') ~~ *.defined

[11:20] <camelia> rakudo-moar 75056dfa1: OUTPUT: «True␤»

[11:21] <SmokeMachine> m: say (Nil | Str | Int) ~~ *.defined

[11:21] <camelia> rakudo-moar 75056dfa1: OUTPUT: «False␤»

[11:30] *** Manifest0 left
[11:32] *** Manifest0 joined
[12:08] *** epony joined
[12:21] <ZzZombo> m: role StrIdx { also does Positional;method AT-POS($i) is rw { self.substr-rw($i, 1) }; };my $s = 'asd' does StrIdx;say $s[0];$s[0] = 'b';say $s

[12:21] <camelia> rakudo-moar 75056dfa1: OUTPUT: «a␤Cannot modify an immutable Str+{StrIdx} (asd)␤  in block <unit> at <tmp> line 1␤␤»

[12:21] <ZzZombo> Please, does anybody know why does this not work?

[12:23] <tobs> I was also puzzled when I tried it yesterday. No idea.

[12:24] *** jaldhar_ left
[12:27] <tobs> m: role StrIdx { method f { self.substr-rw(0,1) } }; my $s = "asd" but StrIdx; say $s.f; $s.f = "b"; say $s

[12:27] <camelia> rakudo-moar 75056dfa1: OUTPUT: «a␤Cannot modify an immutable Str (a)␤  in block <unit> at <tmp> line 1␤␤»

[12:27] <tobs> it does not seem related to the use of Positional anyway

[12:29] *** jaldhar_ joined
[12:30] *** chloekek_ joined
[13:04] <lizmat> m: role StrIdx { also does Positional;method AT-POS($i) is rw { self.substr-rw($i, 1) }; };my $s = 'asd' does StrIdx;say $s[0];$s.AT-POS(0) = 'b';say $s

[13:04] <camelia> rakudo-moar 75056dfa1: OUTPUT: «a␤Cannot modify an immutable Str+{StrIdx} (asd)␤  in block <unit> at <tmp> line 1␤␤»

[13:04] <lizmat> m: role StrIdx { also does Positional;method AT-POS(\SELF: $i) is rw { SELF.substr-rw($i, 1) }; };my $s = 'asd' does StrIdx;say $s[0];$s.AT-POS(0) = 'b';say $s

[13:04] <camelia> rakudo-moar 75056dfa1: OUTPUT: «a␤bsd␤»

[13:05] <lizmat> ZzZombo tobs I think there was one issue with the vode

[13:05] <lizmat> *code

[13:05] <lizmat> self is always de-containerized, so there's no container to put the changed string into anymore

[13:06] <lizmat> secondly, I think there is an issue with the postcircumfix:<[ ]> also decontainerizing

[13:06] <lizmat> afk&

[13:09] *** sena_kun joined
[13:10] *** Altai-man_ left
[13:14] <tobs> lizmat++, oh so substr-rw needs the invocant to be in a container? Or did I misunderstand?

[13:14] <tobs> m: "abc".substr-rw(0,1) = "b"

[13:14] <camelia> rakudo-moar 75056dfa1: OUTPUT: «Cannot modify an immutable Str (abc)␤  in block <unit> at <tmp> line 1␤␤»

[13:14] <tobs> aha

[13:16] *** angelds joined
[13:19] <tobs> so calling $s.substr-rw modifies the contents of the Scalar at $s? I imagined it would actually really change the string's data underneath, but apparently not. Probably safer this way...?

[13:20] <tobs> m: my $s = "asd"; my $t = $s; say $s.WHERE; say $t.WHERE; $s.substr-rw(0,1) = "b"; say $s; say $t; say $s.WHERE; say $t.WHERE

[13:20] <camelia> rakudo-moar 75056dfa1: OUTPUT: «139644839248768␤139644839248768␤bsd␤asd␤139644840090240␤139644839248768␤»

[14:29] *** Manifest0 left
[14:30] *** Manifest0 joined
[14:42] <ZzZombo> m: role StrIdx { also does Positional;method AT-POS($i) is rw { self.substr-rw($i, 1) } };my $s = 'asd' does StrIdx;say $s[0];$s[0] = 'b';say $s

[14:42] <camelia> rakudo-moar 75056dfa1: OUTPUT: «a␤Cannot modify an immutable Str+{StrIdx} (asd)␤  in block <unit> at <tmp> line 1␤␤»

[14:43] <ZzZombo> m: role StrIdx { also does Positional;method AT-POS(\SELF: $i) is rw { dd SELF.VAR, self.VAR; self.substr-rw($i, 1) } };my $s = 'asd' does StrIdx;say $s[0];$s[0] = 'b';say $s

[14:43] <camelia> rakudo-moar 75056dfa1: OUTPUT: «"asd"␤a␤"asd"␤"asd"␤"asd"␤Cannot modify an immutable Str+{StrIdx} (asd)␤  in block <unit> at <tmp> line 1␤␤»

[14:44] <ZzZombo> m: role StrIdx { also does Positional;method AT-POS(\SELF: $i) is rw { dd SELF.VAR, self.VAR; SELF.substr-rw($i, 1) } };my $s = 'asd' does StrIdx;say $s[0];$s[0] = 'b';say $s

[14:44] <camelia> rakudo-moar 75056dfa1: OUTPUT: «"asd"␤a␤"asd"␤"asd"␤"asd"␤Cannot modify an immutable Str+{StrIdx} (asd)␤  in block <unit> at <tmp> line 1␤␤»

[14:44] <Xliff_> hythm: I'm awake. 

[14:44] <tellable6> Xliff_, I'll pass your message to hythm

[14:45] <ZzZombo> m: role StrIdx { also does Positional;method AT-POS(\SELF: $i) is rw { say SELF.VAR.^name, self.VAR.^name; SELF.substr-rw($i, 1) } };my $s = 'asd' does StrIdx;say $s[0];$s[0] = 'b';say $s

[14:45] <camelia> rakudo-moar 75056dfa1: OUTPUT: «ScalarStr+{StrIdx}␤Cannot modify an immutable Str+{StrIdx} (asd)␤  in block <unit> at <tmp> line 1␤␤a␤Str+{StrIdx}Str+{StrIdx}␤»

[14:47] <ZzZombo> m: role StrIdx { also does Positional;method AT-POS($SELF: $i) is rw { $SELF.substr-rw($i, 1) } };my $s = 'asd' does StrIdx;say $s[0];$s[0] = 'b';say $s

[14:47] <camelia> rakudo-moar 75056dfa1: OUTPUT: «a␤Cannot assign to a readonly variable or a value␤  in block <unit> at <tmp> line 1␤␤»

[14:54] <ZzZombo> lizmat: so anyway to make this work? Looks like a bug to me, to be honest.

[15:08] <Xliff_> hythm: Pull the latest code, I've made those types of parameters optional. They are only there as out params, anyways. So now: $sc.get-color($state) will return a GdkRGBA value, which is a CStruct.

[15:08] <tellable6> Xliff_, I'll pass your message to hythm

[15:09] *** Altai-man_ joined
[15:11] *** sena_kun left
[15:18] <Geth> ¦ doc: b906d93374 | (Stoned Elipot)++ | doc/Language/traps.pod6

[15:18] <Geth> ¦ doc: fix example output style

[15:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b906d93374

[15:34] *** angelds left
[15:39] *** chloekek_ left
[15:49] *** cpan-raku left
[15:50] *** cpan-raku joined
[15:50] *** cpan-raku left
[15:50] *** cpan-raku joined
[16:27] *** chloekek_ joined
[16:49] <lizmat> tobs: yes, substr-rw must have a container as the invocant, since strings are immutable in Raku

[17:06] *** Manifest0 left
[17:06] *** Manifest0 joined
[17:09] *** sena_kun joined
[17:11] *** Altai-man_ left
[17:12] *** Manifest0 left
[17:15] *** Manifest0 joined
[17:44] <Kaiepi> releasable6, status

[17:44] <releasable6> Kaiepi, Next release will happen when it's ready. There are no known blockers. 248 out of 478 commits logged (⚠ 9 warnings)

[17:44] <releasable6> Kaiepi, Details: https://gist.github.com/71699a68e787a72cc8a22fc967e71a6c

[17:59] *** mid_laptop left
[18:10] *** camelia left
[18:11] *** camelia joined
[18:12] *** chloekek_ left
[18:20] *** Micht0 joined
[18:23] *** Micht0 is now known as Micht0[afk]

[18:48] *** Micht0[afk] is now known as Micht0

[18:48] *** chloekek_ joined
[18:49] *** Micht0 left
[18:51] <cpan-raku> New module released to CPAN! Gnome::Gdk3 (0.14.13) by 03MARTIMM

[19:11] *** sena_kun left
[19:19] *** xinming_ left
[19:22] *** xinming_ joined
[19:25] *** cspencer_12345 joined
[20:06] *** rindolf left
[20:16] *** cspencer_12345 left
[20:24] *** squashable6 left
[20:25] *** cspencer_12345 joined
[20:27] *** squashable6 joined
[20:31] *** lucasb joined
[20:33] *** squashable6 left
[20:34] *** titsuki left
[20:36] *** titsuki joined
[20:36] *** squashable6 joined
[20:37] *** cspencer_12345 left
[20:39] *** cspencer joined
[20:44] *** chloekek_ left
[21:45] <lizmat> ZzZombo: it is indeed a bug, checking a fix now

[21:46] <lizmat> ZzZombo: you can work around it by also defining an ASSIGN-POS method

[21:48] *** cspencer left
[21:49] *** jaldhar_ left
[21:50] *** jaldhar_ joined
[21:53] *** cpan-raku left
[21:57] <lizmat> .tell ZzZombo https://github.com/rakudo/rakudo/commit/ed8f5141fe

[21:57] <tellable6> lizmat, I'll pass your message to ZzZombo

[21:57] <lizmat> .tell tobs https://github.com/rakudo/rakudo/commit/ed8f5141fe

[21:57] <tellable6> lizmat, I'll pass your message to tobs

[21:57] <tobs> lizmat++, will try it out tomorrow

[22:09] *** cpan-raku joined
[22:09] *** cpan-raku left
[22:09] *** cpan-raku joined
[22:20] *** ilogger2 joined
[22:27] *** mid_home joined
[22:37] *** xinming_ joined
[23:04] <Xliff_> lizmat++: What's the difference between self and SELF?

[23:38] *** xinming_ left
[23:40] *** xinming_ joined
[23:58] <Xliff_> m: my $a = "Hi!"; $a ~~ s«Hi!»«Bye!»; $a.say

[23:58] <camelia> rakudo-moar ed8f5141f: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter ! (must be quoted to match literally)␤at <tmp>:1␤------> 3my $a = "Hi!"; $a ~~ s«Hi7⏏5!»«Bye!»; $a.say␤Missing infix inside hyper␤at <tmp>:1␤------> 3my $a = "Hi!"; $a ~~ s«Hi…»

[23:59] <Xliff_> m: my $a = "Hi!"; $a ~~ s«Hi\!»«Bye\!»; $a.say

[23:59] <camelia> rakudo-moar ed8f5141f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing infix inside hyper␤at <tmp>:1␤------> 3my $a = "Hi!"; $a ~~ s«Hi\!»«7⏏5Bye\!»; $a.say␤    expecting any of:␤        infix␤        infix stopper␤»

[23:59] <Xliff_> m: my $a = "Hi!"; $a ~~ s[Hi\!][Bye\!]; $a.say

[23:59] <camelia> rakudo-moar ed8f5141f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of brackets around replacement; in Perl 6 please use assignment syntax␤at <tmp>:1␤------> 3my $a = "Hi!"; $a ~~ s[Hi\!]7⏏5[Bye\!]; $a.say␤»

[23:59] <Xliff_> m: my $a = "Hi!"; $a ~~ s[Hi\!] = "Bye!"; $a.say

[23:59] <camelia> rakudo-moar ed8f5141f: OUTPUT: «Bye!␤»

