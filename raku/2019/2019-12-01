[00:00] <sena_kun> AlexDaniel++

[00:01] * sena_kun haz some sleep

[00:02] <AlexDaniel> sena_kun: here's the final version: https://github.com/rakudo/rakudo/files/3907696/CLA.pdf

[00:03] *** patrickb left
[00:03] <AlexDaniel> ah no, damn

[00:03] <AlexDaniel> text-align: justify; went wrong here

[00:03] <AlexDaniel> ok whatever, use the previous one without justify, I already spent too much time on this :D

[00:04] *** rmmm joined
[00:04] <tbrowder> .tell jmerelo wordpress is not showing my latest version!!!! wp sucks rocks

[00:04] <tellable6> tbrowder, I'll pass your message to jmerelo

[00:11] *** stoned75 left
[00:11] *** stoned75_ left
[00:12] <tbrowder> .tell jmerelo it looks like it's finally taken my update-whew!

[00:12] <tellable6> tbrowder, I'll pass your message to jmerelo

[00:13] *** colomon left
[00:29] *** sena_kun left
[00:38] *** finanalyst left
[00:55] *** chloekek left
[01:15] *** wildtrees left
[01:32] *** Tirifto left
[01:38] *** zacts joined
[01:38] *** zacts left
[01:49] *** colomon joined
[01:51] *** colomon left
[02:01] *** rbt left
[02:10] *** wamba left
[02:19] *** rmmm left
[02:51] *** Kaiepi left
[02:53] *** Kaiepi joined
[02:53] *** Kaiepi left
[02:54] *** Kaiepi joined
[02:55] *** Kaiepi left
[02:56] *** Kaiepi joined
[03:04] *** Manifest0 left
[03:06] *** Manifest0 joined
[03:08] *** cognominal joined
[03:10] *** Kaiepi left
[03:11] *** Kaiepi joined
[03:11] *** cognomin_ left
[03:14] *** cognomin_ joined
[03:18] *** cognominal left
[04:08] *** stoned75 joined
[04:08] *** stoned75_ joined
[04:20] *** cpan-raku left
[04:21] *** cpan-raku joined
[04:38] *** mister_flash joined
[04:38] <mister_flash> hi

[04:38] <mister_flash> What is happening to Perl ???

[04:43] <AlexDaniel> mister_flash: seems to be going strong

[04:44] <AlexDaniel> mister_flash: perl5 keeps improving and perl6 (now Raku) is getting its own identity :)

[04:45] <mister_flash> So perl6 does not exist yet ?

[04:45] <mister_flash> perl 5 is the latest perl version ?

[04:46] <AlexDaniel> mister_flash: first release of raku (back when it was still called perl6) was in 2015

[04:47] <mister_flash> So perl6 appellation should be ban

[04:48] <AlexDaniel> mister_flash: sorry, what do you mean?

[04:50] <mister_flash> The word "perl6" should be remove everywhere since it causes misunderstandings.

[04:50] <AlexDaniel> mister_flash: yes, correct, that's what we've been doing :)

[04:51] <mister_flash> nice.

[04:51] <AlexDaniel> as for perl5, the latest version seems to be v5.30.1 released just a month ago

[04:53] <mister_flash> I wonder if Perl will not be deprecated.

[04:54] <AlexDaniel> I don't think perl5 should be deprecated. It is nice and it keeps getting better.

[04:54] <AlexDaniel> Raku is a separate language now, yes it is very inspired by perl5 but it doesn't attempt to deprecate perl5

[04:56] <mister_flash> but It will shade i

[04:56] <mister_flash> it

[04:57] <AlexDaniel> I hope it will shade other languages equally :)

[04:58] <mister_flash> If it could shade Python it will be more than a dream

[04:59] <mister_flash> but I no longer dream

[04:59] <Xliff> Yeah. It has a long road ahead if it is to do that.

[04:59] <AlexDaniel> well, I personally already use Raku for writing things for which I would have used Python if Raku didn't exist

[05:00] <Xliff> Getting the language bindings and attaining some percentage of module parity will be a big help.

[05:00] <AlexDaniel> I understand it's subjective, but it's already the case for me

[05:03] <AlexDaniel> Xliff: just a single web framework can do wonders :)

[05:03] <AlexDaniel> Xliff: Red seems to be on its way so that's one missing piece done

[05:05] *** stoned75 left
[05:06] *** stoned75_ left
[05:07] <Kaiepi> >v5.30.1

[05:07] <Kaiepi> shit the book i got to learn it a while ago is way out of date then

[05:11] <Kaiepi> AlexDaniel, what are some of the other missing pieces? are they all in the most wanted modules repo?

[05:11] <Xliff> AlexDaniel: Red also has a long way to go.

[05:11] <Xliff> But hey, Raku isn't even 5, yet.

[05:11] <Xliff> I think we're doing quite well.

[05:12] <AlexDaniel> Xliff: I'm not sure. I think if someone started using Red seriously it'll get ready very quickly

[05:12] <AlexDaniel> so IMO it's ready to be used by somebody :)

[05:13] <Xliff> AlexDaniel: Still doesn't cover much of the use cases I'd absolutely need it to cover before I'd use it.

[05:13] <Xliff> But it's getting there.

[05:13] <Xliff> He's working on joins, though. That's a big step.

[05:14] <AlexDaniel> Kaiepi: I'm not sure, actually. We have Cro, we have Red, someone just needs to actually make a web framework

[05:15] <Kaiepi> Net::Telnet's probably the closest thing i have to a module that could sway people to use raku since my goal is to make it even better than any existing telnet library

[05:16] <Xliff> AlexDaniel: Um. I thought we had a Web framework. I know Cro could be used to build one, but wasn't there another one?

[05:16] <AlexDaniel> Xliff: no

[05:17] <Xliff> Bailador?

[05:17] <AlexDaniel> it's dead

[05:17] <Xliff> What? When?

[05:19] <AlexDaniel> honestly I don't remember it ever not being dead‚Ä¶

[05:19] <Xliff> Hrm. Better to pick that up than re-invent the wheel?

[05:20] *** rindolf joined
[05:20] <Xliff> Honestly, I'd need to see a spec for a decent web framework and try my hand at it.

[05:22] <AlexDaniel> maybe I'm wrong about Bailador

[05:22] <AlexDaniel> thing is, I tried it in 2017 or maybe earlier

[05:22] <AlexDaniel> it did the job, a little bit, but otherwise was dead :)

[05:23] <AlexDaniel> but now I look at the commit history and there was a lot of stuff going on in 2017-2018

[05:24] <AlexDaniel> as for reworking Bailador instead of starting from scratch, I don't think it makes sense

[05:24] <AlexDaniel> but please feel free to :)

[05:24] <AlexDaniel> nowadays you'd probably start with cro and red

[05:25] <mister_flash> Mojolicious is actually good, someone could port it on Raku and add some things

[05:32] *** huf left
[05:40] *** huf joined
[06:30] *** Kaiepi left
[06:37] *** Kaiepi joined
[06:37] *** Kaiepi left
[06:38] *** Kaiepi joined
[06:39] *** Kaiepi left
[06:40] *** discord61 joined
[06:40] *** Kaiepi joined
[06:40] *** discord6 left
[06:40] *** discord61 is now known as discord6

[06:55] *** discord6 left
[06:55] *** discord6 joined
[06:57] <rindolf> AlexDaniel: hi, sup?

[07:13] *** Kaiepi left
[08:06] *** wamba joined
[08:07] *** Kaiepi joined
[08:23] *** Xliff left
[08:48] *** freezing joined
[09:16] *** Kaiepi left
[09:20] *** shinobicl joined
[09:22] *** Kaiepi joined
[09:27] *** stoned75 joined
[09:27] *** stoned75_ joined
[09:31] *** shinobicl left
[09:37] *** stoned75_ left
[09:37] *** stoned75 left
[10:06] *** Tirifto joined
[10:11] *** Doc_Holliwood left
[10:16] *** Doc_Holliwood joined
[10:22] <Geth> ¬¶ doc: c7ec7cd62e | (JJ Merelo)++ | doc/Language/unicode.pod6

[10:22] <Geth> ¬¶ doc: Adds version of Unicode supported

[10:22] <Geth> ¬¶ doc: 

[10:22] <Geth> ¬¶ doc: Refs #3104

[10:22] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/c7ec7cd62e

[10:23] *** ufobat joined
[10:38] *** stoned75 joined
[10:38] *** stoned75_ joined
[10:40] *** finanalyst joined
[10:48] <ufobat> is Array.clone() supposed to clone multi dimensional arrays deeply? It seems it isn't. But I would assume it should, since you can do a @array[1;2;3] aka It does not feel like it is an Array of Arrays

[10:50] *** sena_kun joined
[11:02] *** sena_kun left
[11:16] *** sena_kun joined
[11:17] *** stoned75_ left
[11:17] *** stoned75 left
[11:31] <Kaiepi> m: class Foo { has $!foo is readonly; method set-foo($!foo) { } }; say Foo.new.set-foo: 1

[11:31] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Potential difficulties:‚ê§    useless use of 'is readonly' on $!foo‚ê§    at <tmp>:1‚ê§    ------> 3class Foo { has $!foo 7‚èè5is readonly; method set-foo($!foo) { } }‚ê§Nil‚ê§¬ª

[11:31] <Kaiepi> m: class Foo { has $.foo is readonly; method set-foo($!foo) { } }; say Foo.new.set-foo: 1

[11:31] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Nil‚ê§¬ª

[11:31] <Kaiepi> m: class Foo { has $.foo is readonly; method set-foo($foo) { $!foo = $foo } }; say Foo.new.set-foo: 1

[11:31] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´1‚ê§¬ª

[11:31] <Kaiepi> what does readonly actually prevent you from doing?

[11:32] <Kaiepi> s/readonly/is readonly/

[11:36] <Kaiepi> the docs say it only applies to the container and not the value itself, but shouldn't $!foo = $foo throw if that's the case?

[11:40] *** ufobat_ joined
[11:40] <lizmat> ufobat: I think .clone is defined to be shallow, with optional args for alternate values for public attributes at the top level

[11:43] *** ufobat left
[11:50] *** ufobat joined
[11:52] *** ufobat_ left
[11:53] <Kaiepi> oh, it doesn't look like this trait is fully implemented for attributes

[11:53] <Kaiepi> it sets its $!ro attribute when it gets applied, but nothing uses this, not even its own readonly method

[11:56] <Kaiepi> apart from its default_to_rw method ig

[11:58] *** MasterDuke left
[11:58] <lizmat> shouldn't "is read-only" only apply to public attributes ?

[11:58] <lizmat> *readonly

[12:00] <Kaiepi> aren't public attributes already readonly by default?

[12:02] <Kaiepi> m: class Foo { has $.foo }; say Foo.^get_attribute_for_usage('$!foo').get_value(Foo).readonly

[12:02] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Cannot look up attributes in a Foo type object‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:02] <Kaiepi> m: class Foo { has $.foo }; say Foo.new.^get_attribute_for_usage('$!foo').get_value(Foo).readonly

[12:02] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Cannot look up attributes in a Foo type object‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:02] <Kaiepi> m: class Foo { has $.foo }; say Foo.new.^get_attribute_for_usage('$!foo').get_value(Foo.new).readonly

[12:02] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´No such method 'readonly' for invocant of type 'Any'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:02] <Kaiepi> m: class Foo { has $.foo }; say Foo.new.^get_attribute_for_usage('$!foo').readonly

[12:02] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´True‚ê§¬ª

[12:03] <Kaiepi> m: class Foo { has $.foo }; say (my $attr = Foo.new.^get_attribute_for_usage('$!foo')).^get_attribute_for_usage('$!ro').get_value($attr)

[12:03] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´No such method 'get_value' for invocant of type 'BOOTSTRAPATTR'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:03] <Kaiepi> m: use nqp; class Foo { has $.foo }; say nqp::getattr((my $attr = Foo.new.^get_attribute_for_usage('$!foo')), $attr.WHAT, '$!ro')

[12:03] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´P6opaque: no such attribute '$!ro' on type Attribute in a Scalar when trying to get a value‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:04] <Kaiepi> m: use nqp; class Foo { has $.foo }; say nqp::getattr((my $attr := Foo.new.^get_attribute_for_usage('$!foo')), $attr.WHAT, '$!ro')

[12:04] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Cannot find method 'gist' on 'int': no method cache and no .^find_method‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:04] <Kaiepi> m: use nqp; class Foo { has $.foo }; say nqp::getattr_i((my $attr := Foo.new.^get_attribute_for_usage('$!foo')), $attr.WHAT, '$!ro')

[12:04] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´0‚ê§¬ª

[12:04] <Kaiepi> huh

[12:06] <Kaiepi> m: use nqp; class Foo { has $.foo }; say nqp::getattr_i((my $attr := Foo.new.^get_attribute_for_usage('$!foo')), $attr.WHAT, '$!rw')

[12:06] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´0‚ê§¬ª

[12:06] <Kaiepi> ig they're "readonly" in that they're not rw by default

[12:09] <Kaiepi> m: class Foo is rw { has $.foo is readonly; method set-foo($!foo) { } }; Foo.new.set-foo: 1

[12:09] <camelia> rakudo-moar f608a7a41: ( no output )

[12:09] <Kaiepi> m: class Foo is rw { has $.foo is readonly; method set-foo($foo) { $!foo = $foo } }; Foo.new.set-foo: 1

[12:09] <camelia> rakudo-moar f608a7a41: ( no output )

[12:10] <Kaiepi> m: class Foo is rw { has $.foo; method set-foo($foo) { $!foo = $foo } }; Foo.new.set-foo: 1

[12:10] <camelia> rakudo-moar f608a7a41: ( no output )

[12:10] <Kaiepi> m: class Foo { has $.foo is readonly; method set-foo($foo) { $!foo = $foo } }; BEGIN Foo.^set_rw; Foo.new.set-foo: 1

[12:10] <camelia> rakudo-moar f608a7a41: ( no output )

[12:12] <Kaiepi> m: class Foo { has $.foo is readonly; method set-foo($foo) { $!foo = $foo } }; BEGIN Foo.^set_rw; (my $foo = Foo.new).^get_attribute_for_usage('$!foo').set_value($foo, 1)

[12:12] <camelia> rakudo-moar f608a7a41: ( no output )

[12:12] <Kaiepi> even in the one case i can find where $!ro is used in any way, it doesn't seem to do anything

[12:14] *** chloekek joined
[12:15] <Kaiepi> wait i was missing `is rw` on the last couple tests

[12:16] <Kaiepi> nvm i forgot about the BEGIN that sets what `is rw` sets

[12:27] <Kaiepi> there aren't any tests for using this trait with attributes in roast either, so ig it just isn't supported rn

[12:31] *** ufobat left
[12:37] <Kaiepi> ohh, i was testing the one case where it does get used wrong

[12:38] <Kaiepi> m: class Foo is rw { has $.foo }; say (try Foo.new.foo = 1) // 0

[12:38] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´1‚ê§¬ª

[12:38] <Kaiepi> m: class Foo is rw { has $.foo is readonly }; say (try Foo.new.foo = 1) // 0

[12:38] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´0‚ê§¬ª

[12:44] <Geth> ¬¶ problem-solving/CoC: 48f4c51ebe | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[12:44] <Geth> ¬¶ problem-solving/CoC: Rework the "Responsibility" section

[12:44] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/48f4c51ebe

[13:02] *** sena_kun left
[13:04] *** stoned75 joined
[13:04] *** stoned75_ joined
[13:08] <Kaiepi> ok i was definitely misunderstanding what the trait's for after reading through the design docs

[13:08] <Kaiepi> i was expecting it to work like ::= would if it were implemented

[13:15] *** normanrockwell joined
[13:15] *** normanrockwell left
[13:17] *** sena_kun joined
[13:17] *** sena_kun left
[13:30] *** MasterDuke joined
[13:37] <AlexDaniel> rindolf: o/

[13:42] <rindolf> AlexDaniel: sup?

[13:45] <AlexDaniel> I woke up :)

[13:47] * chloekek was thinking about implementing symlinkfs; a FUSE file system that stores all data in symlinks, to trick du

[13:47] <chloekek> du reports 0 for symlinks, but they can store like a kilobyte of data. :)

[14:01] <AlexDaniel> m: say "a\x[E01E8]b\x[E01E9]"

[14:01] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´aÛ†á®bÛ†á©‚ê§¬ª

[14:02] <AlexDaniel> chloekek: similarly, use variation selectors to mix binary data into text? :)

[14:09] *** sena_kun joined
[14:20] <cpan-raku> New module released to CPAN! Operator::dB (0.0.95) by 03ALLSOPP

[14:20] <cpan-raku> New module released to CPAN! HTML::BoreDOM (0.0.6) by 03ALLSOPP

[14:30] *** curiouscreamkrac joined
[14:48] *** curiouscreamkrac left
[15:02] *** sena_kun left
[15:13] *** normanrockwell joined
[15:18] *** sena_kun joined
[15:23] <Geth> ¬¶ whateverable/master: 5 commits pushed by Altai-man++, (Aleks-Daniel Jakimenko-Aleksejev)++

[15:23] <Geth> ¬¶ whateverable/master: fa2154793d | First attempt to add Sourceable

[15:23] <Geth> ¬¶ whateverable/master: 9fa9331a3e | Add new dependency

[15:23] <Geth> ¬¶ whateverable/master: 76e86d1138 | Add test coverage for sourceable and adapt code

[15:23] <Geth> ¬¶ whateverable/master: e3c3c79599 | Remove is-safeish

[15:23] <Geth> ¬¶ whateverable/master: f4818765f3 | Sourceable support (#369)

[15:23] <Geth> ¬¶ whateverable/master: review: https://github.com/perl6/whateverable/compare/8c2c846df9b4...f4818765f3b4

[15:26] <Geth> ¬¶ whateverable: f5dcb9b653 | (Aleks-Daniel Jakimenko-Aleksejev)++ | services/whateverable-all.service

[15:26] <Geth> ¬¶ whateverable: Add Sourceable service

[15:26] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/f5dcb9b653

[15:30] <Geth> ¬¶ whateverable: daf36f299b | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/Sourceable.p6

[15:30] <Geth> ¬¶ whateverable: Make Sourceable executable

[15:30] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/daf36f299b

[15:31] <sena_kun> \o/

[15:31] <tellable6> 2019-12-01T11:03:29Z #raku-dev <jmerelo> sena_kun I've done a bit of editing here and there. Other than that, perfect!

[15:41] *** normanro_ joined
[15:44] *** normanrockwell left
[15:47] <stoned75> I was looking for WHAT method (or whatever) definition. I found a method definition in rakudo/src/core.c/operators.pm6, which leads me to MoarVM/src/6model/bootstrap.c:bootstrap_KnowHOW(). Am I on the right track ?

[15:52] *** patrickb joined
[15:52] <stoned75> then I wonder why operators.pm6 has a comment saying "XXX Wants to be macros when we have them." when rakudo/docs/ChangeLog says for 'New in 2011.09': "+ .WHAT and friends as macros"

[15:52] *** normanrockwell joined
[15:56] *** normanr__ joined
[15:56] *** normanro_ left
[15:58] <sena_kun> stoned75 what do you want to do with WHAT? It is Rakudo-specific thing, maybe you want something else? What's the task?

[15:59] <stoned75> eh. only curiosity :)

[16:00] *** ufobat joined
[16:00] *** normanrockwell left
[16:05] <stoned75> also, doc/Language/objects.pod6 says "... by calling the WHAT method, which is actually a macro in method form" so I admit I am a bit confused

[16:08] <AlexDaniel> m: Int.^name

[16:08] <camelia> rakudo-moar f608a7a41: ( no output )

[16:08] <AlexDaniel> m: say Int.^name

[16:08] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Int‚ê§¬ª

[16:08] <AlexDaniel> m: say 42.^name

[16:08] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Int‚ê§¬ª

[16:09] <ufobat> shallow clones suck :-/

[16:22] <Geth> ¬¶ problem-solving/CoC: e2b18bf640 | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[16:22] <Geth> ¬¶ problem-solving/CoC: Make discrimination clause more specific

[16:22] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/e2b18bf640

[16:28] *** ufobat left
[16:28] <chloekek> p6: constant ÁÑ° = Mu; sub f(ÁÑ° $x) { say $x }; f(1 & 2)

[16:28] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´all(1, 2)‚ê§¬ª

[16:29] <lizmat> m: say "ÁÑ°".uninames

[16:29] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´(CJK UNIFIED IDEOGRAPH-7121)‚ê§¬ª

[16:29] <lizmat> hmmm.. :-)

[16:30] <lizmat> ah, nothing!

[16:30] <chloekek> It‚Äôs the Japanese spelling of the term where the name Mu comes from according to the docs.

[16:32] <sena_kun> - what is ÁÑ°? - ah, nevermind, it's nothing.

[16:33] <lizmat> is there an ideograph for nothing + 1 ?

[16:36] <chloekek> constant ‰ªªÊÑè = Any; sub f(‰ªªÊÑè $x) { say $x }; f(1 & 2)

[16:36] <evalable6> chloekek, rakudo-moar ab2ba1ab2: OUTPUT: ¬´1‚ê§2‚ê§¬ª

[16:38] <chloekek> Bad name.

[16:41] <lizmat> I was thinking of adding another easter egg for it  :-)

[16:43] <sena_kun> m: constant ‰Ωï„Å™„Çä = Any; sub f(‰Ωï„Å™„Çä $x) { say $x }; f(1 & 2)

[16:43] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´1‚ê§2‚ê§¬ª

[16:44] <lizmat> m: my $beer = "üç∫"; $beer++; dd $beer

[16:44] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Str $beer = "üçª"‚ê§¬ª

[16:44] * chloekek does use ÔΩ¢ÔΩ£ very frequently.

[16:45] <chloekek> Also qqÔΩ¢ÔΩ£ for interpolation.

[16:51] <chloekek> Currently programming in Perl 5 though.

[16:51] <chloekek> No such goodies :(

[16:54] <lizmat> m: my $perl = "üê™"; $perl++; say $perl   # so glad we didn't turn that into a butterfly

[16:54] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´üê´‚ê§¬ª

[16:54] <chloekek> lmao

[16:56] <chloekek> m: my $perl = "üê´"; $perl++; say $perl

[16:56] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´üê´üê™‚ê§¬ª

[16:57] <chloekek> m: my $perl = "üê´"; $perl++; $perl++; say $perl

[16:57] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´üê´üê´‚ê§¬ª

[16:57] <chloekek> m: my $perl = "üê´"; $perl++; $perl++; $perl++; say $perl

[16:57] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´üê´üê™üê™‚ê§¬ª

[16:57] <chloekek> Not quite base 2 it seems.

[17:00] *** sena_kun left
[17:04] <lizmat> it is if you consider "üê™" and "üê´" one ?

[17:05] <lizmat> m: my $perl = "üê™"; say :2(($perl++).trans("üê´üê™" => "10")) for ^10

[17:05] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§¬ª

[17:06] <chloekek> p6: my $perl = ‚Äûüê´‚Äú; for 1 .. 10 { say $perl++ }

[17:06] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´üê´‚ê§üê´üê™‚ê§üê´üê´‚ê§üê´üê™üê™‚ê§üê´üê™üê´‚ê§üê´üê´üê™‚ê§üê´üê´üê´‚ê§üê´üê™üê™üê™‚ê§üê´üê™üê™üê´‚ê§üê´üê™üê´üê™‚ê§¬ª

[17:06] <chloekek> It never flips the initial digit.

[17:07] <kurahaupo> looks like counting in binary with üê´ == 1, üê™ == 0 ?

[17:07] <lizmat> it does from 0 to 1

[17:07] <lizmat> and in all other cases, the first is the most significant, so always a 1

[17:08] <chloekek> p6: my $perl = ‚Äûüê´‚Äú; for 1 .. 10 { ($perl++).flip.say }

[17:08] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´üê´‚ê§üê™üê´‚ê§üê´üê´‚ê§üê™üê™üê´‚ê§üê´üê™üê´‚ê§üê™üê´üê´‚ê§üê´üê´üê´‚ê§üê™üê™üê™üê´‚ê§üê´üê™üê™üê´‚ê§üê™üê´üê™üê´‚ê§¬ª

[17:09] <chloekek> p6: my $perl = ‚Äûüê´‚Äú; for 1 .. 10 { ($perl++).substr(1).flip.say }

[17:09] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´‚ê§üê™‚ê§üê´‚ê§üê™üê™‚ê§üê´üê™‚ê§üê™üê´‚ê§üê´üê´‚ê§üê™üê™üê™‚ê§üê´üê™üê™‚ê§üê™üê´üê™‚ê§¬ª

[17:09] <chloekek> p6: my $perl = ‚Äûüê´‚Äú; for 1 .. 10 { ($perl++).substr(1).say }

[17:09] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´‚ê§üê™‚ê§üê´‚ê§üê™üê™‚ê§üê™üê´‚ê§üê´üê™‚ê§üê´üê´‚ê§üê™üê™üê™‚ê§üê™üê™üê´‚ê§üê™üê´üê™‚ê§¬ª

[17:10] <chloekek> p6: my $perl = ‚Äûüê´‚Äú; for 1 .. 10 { ($perl++).say }

[17:10] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´üê´‚ê§üê´üê™‚ê§üê´üê´‚ê§üê´üê™üê™‚ê§üê´üê™üê´‚ê§üê´üê´üê™‚ê§üê´üê´üê´‚ê§üê´üê™üê™üê™‚ê§üê´üê™üê™üê´‚ê§üê´üê™üê´üê™‚ê§¬ª

[17:10] <chloekek> Oh yeah of course the MSb is always 1 lol otherwise it would not show up.

[17:11] *** sergot left
[17:11] *** freezing left
[17:11] *** matiaslina left
[17:11] *** CIAvash left
[17:11] *** stoned75 left
[17:11] *** discord6 left
[17:11] *** AlexDaniel left
[17:11] *** vrurg left
[17:11] *** jjatria left
[17:11] *** libertas left
[17:11] *** moon-child left
[17:11] *** pochi left
[17:11] *** skyl4rk left
[17:11] *** guifa left
[17:11] *** marcusr left
[17:11] *** markmarkmark left
[17:11] *** tejr left
[17:11] *** jnthn left
[17:11] *** KotH left
[17:11] *** renormalist left
[17:11] *** elcaro left
[17:11] *** patrickb left
[17:11] *** stoned75_ left
[17:11] *** finanalyst left
[17:11] *** Doc_Holliwood left
[17:11] *** Geth left
[17:11] *** Ekho left
[17:11] *** robertle left
[17:11] *** daxim left
[17:11] *** surrealpie left
[17:11] *** ilbelkyr left
[17:11] *** huf left
[17:11] *** cognomin_ left
[17:11] *** Manifest0 left
[17:11] *** silug left
[17:11] *** dmc00 left
[17:11] *** veesh left
[17:11] *** mid_home left
[17:11] *** lgtaube left
[17:11] *** nebuchadnezzar left
[17:11] *** TreyHarris left
[17:11] *** eythian left
[17:11] *** rba[m] left
[17:11] *** unicodable6 left
[17:11] *** committable6 left
[17:11] *** Demos[m] left
[17:11] *** Nasrudin42 left
[17:11] *** kawaii left
[17:11] *** domm left
[17:11] *** normanr__ left
[17:11] *** Kaiepi left
[17:11] *** rindolf left
[17:11] *** johnjay left
[17:11] *** maettu left
[17:11] *** xinming left
[17:11] *** [Coke] left
[17:11] *** japhb left
[17:11] *** wbn left
[17:11] *** Grrrr left
[17:11] *** lucs left
[17:11] *** moritz left
[17:11] *** jdv79 left
[17:11] *** El_Che left
[17:11] *** leah2 left
[17:11] *** b2gills left
[17:11] *** sjn left
[17:11] *** zeylos left
[17:11] *** pat_js left
[17:11] *** broquaint left
[17:11] *** Ulti left
[17:11] *** uzl[m] left
[17:11] *** timotimo[m] left
[17:11] *** quotable6 left
[17:11] *** bloatable6 left
[17:11] *** benchable6 left
[17:11] *** coverable6 left
[17:11] *** reportable6 left
[17:11] *** greppable6 left
[17:11] *** nativecallable6 left
[17:11] *** statisfiable6 left
[17:11] *** shareable6 left
[17:11] *** squashable6 left
[17:11] *** tellable6 left
[17:11] *** chsanch left
[17:11] *** kubrat left
[17:11] *** rba left
[17:11] *** epony left
[17:11] *** dpk left
[17:11] *** zostay left
[17:11] *** Grinnz left
[17:11] *** MasterDuke left
[17:11] *** mister_flash left
[17:11] *** Tirifto left
[17:11] *** wamba left
[17:11] *** cpan-raku left
[17:11] *** lizmat left
[17:11] *** releasable6 left
[17:11] *** notable6 left
[17:11] *** bisectable6 left
[17:11] *** maggotbrain left
[17:11] *** MitarashiDango[m left
[17:11] *** tyil[m] left
[17:11] *** kybr left
[17:11] *** evalable6 left
[17:11] *** ZzZombo left
[17:11] *** AlexDaniel` left
[17:11] *** sarna left
[17:11] *** BinGOs left
[17:12] <chloekek> Welp.

[17:12] *** normanr__ joined
[17:12] *** patrickb joined
[17:12] *** MasterDuke joined
[17:12] *** stoned75_ joined
[17:12] *** stoned75 joined
[17:12] *** finanalyst joined
[17:12] *** Doc_Holliwood joined
[17:12] *** Tirifto joined
[17:12] *** Kaiepi joined
[17:12] *** freezing joined
[17:12] *** wamba joined
[17:12] *** discord6 joined
[17:12] *** huf joined
[17:12] *** rindolf joined
[17:12] *** mister_flash joined
[17:12] *** cognomin_ joined
[17:12] *** Manifest0 joined
[17:12] *** silug joined
[17:12] *** AlexDaniel joined
[17:12] *** ZzZombo joined
[17:12] *** Geth joined
[17:12] *** sergot joined
[17:12] *** lizmat joined
[17:12] *** Ekho joined
[17:12] *** vrurg joined
[17:12] *** dmc00 joined
[17:12] *** robertle joined
[17:12] *** veesh joined
[17:12] *** mid_home joined
[17:12] *** quotable6 joined
[17:12] *** releasable6 joined
[17:12] *** notable6 joined
[17:12] *** unicodable6 joined
[17:12] *** bloatable6 joined
[17:12] *** committable6 joined
[17:12] *** benchable6 joined
[17:12] *** coverable6 joined
[17:12] *** bisectable6 joined
[17:12] *** reportable6 joined
[17:12] *** nativecallable6 joined
[17:12] *** greppable6 joined
[17:12] *** statisfiable6 joined
[17:12] *** shareable6 joined
[17:12] *** squashable6 joined
[17:12] *** skyl4rk joined
[17:12] *** jjatria joined
[17:12] *** johnjay joined
[17:12] *** maggotbrain joined
[17:12] *** lgtaube joined
[17:12] *** libertas joined
[17:12] *** uzl[m] joined
[17:12] *** CIAvash joined
[17:12] *** matiaslina joined
[17:12] *** Demos[m] joined
[17:12] *** rba[m] joined
[17:12] *** AlexDaniel` joined
[17:12] *** tyil[m] joined
[17:12] *** MitarashiDango[m joined
[17:12] *** timotimo[m] joined
[17:12] *** maettu joined
[17:12] *** daxim joined
[17:12] *** xinming joined
[17:12] *** surrealpie joined
[17:12] *** moon-child joined
[17:12] *** dpk joined
[17:12] *** pochi joined
[17:12] *** Nasrudin42 joined
[17:12] *** kybr joined
[17:12] *** nebuchadnezzar joined
[17:12] *** [Coke] joined
[17:12] *** sarna joined
[17:12] *** tellable6 joined
[17:12] *** japhb joined
[17:12] *** TreyHarris joined
[17:12] *** El_Che joined
[17:12] *** evalable6 joined
[17:12] *** guifa joined
[17:12] *** leah2 joined
[17:12] *** wbn joined
[17:12] *** Grrrr joined
[17:12] *** marcusr joined
[17:12] *** b2gills joined
[17:12] *** epony joined
[17:12] *** markmarkmark joined
[17:12] *** sjn joined
[17:12] *** eythian joined
[17:12] *** tejr joined
[17:12] *** zeylos joined
[17:12] *** jnthn joined
[17:12] *** kubrat joined
[17:12] *** lucs joined
[17:12] *** KotH joined
[17:12] *** ilbelkyr joined
[17:12] *** camelia joined
[17:12] *** dogbert17 joined
[17:12] *** cxreg joined
[17:12] *** tony-o joined
[17:12] *** bartolin joined
[17:12] *** mspo joined
[17:12] *** eiro joined
[17:12] *** SyrupThinker joined
[17:12] *** nine joined
[17:12] *** brass joined
[17:12] *** tadzik joined
[17:12] *** skaji_ joined
[17:12] *** dotdotdot joined
[17:12] *** masak joined
[17:12] *** tyil joined
[17:12] *** Altreus joined
[17:12] *** tobs joined
[17:12] *** Hotbees joined
[17:12] *** kurahaupo joined
[17:12] *** xkr47 joined
[17:12] *** klapperl joined
[17:12] *** go|dfish joined
[17:12] *** a6502 joined
[17:12] *** k-man joined
[17:12] *** xi joined
[17:12] *** timotimo joined
[17:12] *** samebchase joined
[17:12] *** pat_js joined
[17:12] *** Ulti joined
[17:12] *** elcaro joined
[17:12] *** renormalist joined
[17:12] *** moritz joined
[17:12] *** broquaint joined
[17:12] *** kawaii joined
[17:12] *** chsanch joined
[17:12] *** domm joined
[17:12] *** jdv79 joined
[17:12] *** BinGOs joined
[17:12] *** rba joined
[17:12] *** zostay joined
[17:12] *** Grinnz joined
[17:15] *** sena_kun joined
[17:17] *** cpan-raku joined
[17:17] *** cpan-raku left
[17:17] *** cpan-raku joined
[17:25] <lizmat> .oO( chloekek made me do it: https://github.com/rakudo/rakudo/commit/92a8a08f5d )

[17:25] <chloekek> XD

[17:40] *** AlexDaniel left
[17:41] *** AlexDaniel joined
[17:41] *** AlexDaniel left
[17:41] *** AlexDaniel joined
[17:41] *** a6502 left
[17:42] <chloekek> Now make a rosettacode exercise and show off how consise it is in Raku

[17:42] *** skyl4rk left
[17:48] *** skyl4rk joined
[17:51] *** mister_flash left
[17:53] *** skyl4rk left
[17:56] *** skyl4rk joined
[18:00] *** chloekek left
[18:01] *** a6502 joined
[18:26] *** ufobat joined
[18:52] <ufobat> m: my @a[3;3]; say @a.clone.shape

[18:52] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´(3 3)‚ê§¬ª

[18:52] <ufobat> ^ lizmat 

[18:57] *** jmerelo joined
[18:57] *** lucasb joined
[19:00] *** sena_kun left
[19:05] <jmerelo> Thanks, lizmat, for posting the advent calendar entry in Reddit 

[19:05] *** chloekek joined
[19:06] <jmerelo> Everyone else, comment, check, spread the word, check out the Advent Calendar https://rakuadventcalendar.wordpress.com/2019/12/01/day-1-raku-from-perl/

[19:06] <jmerelo> In ~ 4 hours, a fresh new entry by tmtvl

[19:10] <El_Che> jmerelo++

[19:10] <El_Che> tbrowder++

[19:12] <tbrowder> El_Che: thnx!

[19:17] *** sena_kun joined
[19:18] <jmerelo> tbrowder: it's getting a few visits, the problem is the old calendar is getting even more right now...

[19:18] <jmerelo> So we really need to generate some buzz about it: spread it over email groups, social media, and all over...

[19:20] <moritz> I'll post a quick note on the old one that there is a new site

[19:21] <jmerelo> great, moritz. Thanks.

[19:22] <jmerelo> Please also accept the invitation for the new site, and connect it when you do with raku_news, please.

[19:24] <patrickb> jmerelo: Is there a reason we don't try to get a stackoverflow alias perl6 -> raku up? I seem to recall you were on this some time i the past, not sure though...

[19:24] <jmerelo> patrickb: I requested write permission to do it by hand, and got burned, first

[19:25] <jmerelo> patrickb: second, we can create an alias, but there's some numbers involved, I think there must be a balance between old and new name, somethign like 30% difference

[19:25] <jmerelo> patrickb: and then we need 10k karma, but after the last recomputation of karma, I can do it.

[19:26] <jmerelo> patrickb: let me see if I can do it now, but I think I will not be able

[19:27] <jmerelo> now I remember

[19:28] <jmerelo> We can't create a synonym for perl6 because it's a "version specific synonim"

[19:28] <jmerelo> I guess it's like creating a "debian7" synonyn for whatever, like "sid"

[19:28] <jmerelo> Let me try in the other direction

[19:29] <moritz> jmerelo: do you know where I can do the twitter thing you mentioned?

[19:29] <jmerelo> patrickb: no, I can't: "Can't create synonym; the 'perl6' tag appears more than 1.25 times the 'raku' tag"

[19:29] <patrickb> jmerelo: Ugh... that sounds like it shouldn't apply to our case. The 6 in Perl6 is no version number. Should I try to bug some SO staff about it?

[19:29] <jmerelo> So we need to delete many perl6 tags, and add many raku tags

[19:30] <jmerelo> patrickb: that's apparently the only way to do it.

[19:30] <Grinnz> you should be able to get a moderator to do it

[19:31] <moritz> ah, https://rakuadventcalendar.wordpress.com/wp-admin/options-general.php?page=sharing

[19:31] <moritz> done

[19:31] <jmerelo> moritz: great. Thanks!

[19:34] <patrickb> I think a meta.stackoverflow.com question is the way to go. I'll create a question.

[19:35] <jmerelo> patrickb: good luck

[19:35] <jmerelo> patrickb: and thanks.

[19:36] <patrickb> There already is a respective question: https://meta.stackoverflow.com/questions/391733/make-perl6-a-synonym-for-raku

[19:36] <patrickb> Please up vote!

[19:39] <El_Che> favorited and upvoted

[19:40] <jmerelo> patrickb: the thing is, "synonyms" does not quite reflect what StackOverflow does. It's not symmetrical, for instance.

[19:41] <jmerelo> If we suggest perl6 as a synonym for raku, every time someone tags something with raku, the system will tell them if they are sure about that.

[19:41] <jmerelo> What we want is raku as a synonym for perl6. Which we can't do due to their "no synonyms for versions" policy.

[19:42] <patrickb> jmerelo: I think it's the other way round.

[19:42] <jmerelo> patrickb: hm

[19:42] <El_Che> If someone has time, please try the tar.gz relocable install of rakudo. It's a new feature and I think it's a killer one. So please test it: https://github.com/nxadm/rakudo-pkg/releases/tag/v2019.11

[19:42] <El_Che> https://github.com/nxadm/rakudo-pkg/releases/download/v2019.11/rakudo-pkg-2019.11-01-linux-64bit.tar.gz

[19:43] <El_Che> (there is also a 32-bit version if someone is running 32-bit linux: https://github.com/nxadm/rakudo-pkg/releases/download/v2019.11/rakudo-pkg-2019.11-01-linux-32bit-nojit.tar.gz

[19:43] <patrickb> El_Che: You are doing relocatable builds? - Great! I was just about starting to do those my self. (literally now)

[19:43] <Grinnz> jmerelo: a moderator can make it the correct direction regardless, afaik

[19:44] <jmerelo> patrickb: here's the list of synonyms and "targets" https://stackoverflow.com/tags/synonyms

[19:44] <El_Che> patrickb: yes, I started from your notes!

[19:45] <jmerelo> patrickb: so what we want is a target raku for the synonym perl6... So right, we need to create perl6 as a synonym for raku.

[19:45] <jmerelo> In that case, what we need is 1. Delete perl6 tags, add raku tags 2. Suggest perl6 as a synonym 3. Vote. Moderator might be faster, but it's still doable.

[19:46] <jmerelo> So go back to your old questions and retag them, and if you've got the privs, do that to other questions too.

[19:46] <patrickb> jmerelo: I thinkg the meta question I linked above is the way to go. We just need a moderator to have a look at it. It already has the 'support' tag added to it, so I guess upvoting and waiting is all we can do.

[19:46] <patrickb> jmerelo: Just as you say. :-)

[19:46] <jmerelo> patrickb: not all... we can still re-tag questions and then we won't need moderators.

[19:47] <patrickb> El_Che: I am rebuilding the rakudo.org website to also offer such precompiled packages as download. Would you be willing to to the builds for that?

[19:48] <El_Che> how many point do we need to be allowed to remove tags?

[19:48] <El_Che> patrickb: sure, they are already automated on travis

[19:48] <patrickb> Woot!

[19:50] <patrickb> WRT naming of the files: What I currently have in my rakudo.org changes is rakudo-[version]-[platform]-[architecture].[zip|tar.gz] where platform is [win|macos|linux] and architecture is [x86|x86_64].

[19:51] *** rindolf left
[19:51] <patrickb> I'd try not to do "32bit" or similar, as that could equally well be arm64 vs arm32 or so. Better be literal about the architecture.

[19:53] <patrickb> El_Che: Do you think it's worth it to have the "-nojit" stuff in the name? I'm leaning to the side of "not worth it".

[19:53] <El_Che> from a coherence point of view: no

[19:54] <El_Che> from a pragmatic yes: it's a warning as "don't be discouraged if it's slow, we know"

[19:54] <El_Che> patrickb: the name of the file can change if needed

[19:55] <El_Che> (I am in the processing of moving the create-pkgs-with-docker part to a different repo (now private) and use that in rakudo-pkg)

[19:55] <El_Che> *process

[19:56] <patrickb> El_Che: You have a point. Can we decide on a defined format? (The website relies solely on the name to determine what's in it). What about rakudo-[version]-[platform]-[architecture]-[comment].[zip|tar.gz] Where the -[comment] part is optional?

[19:56] <El_Che> works for me

[19:56] <El_Che> we can do even do without the comment

[19:57] <El_Che> and point it out in the download page

[19:57] <El_Che> I have worked somewhat on the windows variant, but it has been painful

[19:58] <El_Che> relocatable --> split out pkg creation -> windows -> macox

[19:58] <El_Che> 1 is done, 2 is written but need finetuning

[19:58] <patrickb> El_Che: You even fixed up the raku and raku-debug sym links. :-)

[19:58] <El_Che> 3: the situation in windows is bad, so it needs to be done

[19:58] *** jmerelo left
[19:59] <El_Che> 4: homebrew has regular rakudo next to rakudo-star, so for homebrew users it's ok for now

[19:59] <El_Che> patrickb: yeah, my travis builds keep failing :)

[19:59] <El_Che> kept

[20:00] <patrickb> El_Che: Did the windows instructions in release-guide-binary.md work when done manually?

[20:01] <El_Che> well, no because I was doing them on travis

[20:02] <El_Che> the idea was that the builds happen there

[20:02] <El_Che> but it's a painful process

[20:02] <El_Che> I used your notes, though

[20:03] <El_Che> but things that are easy on linux/mac are *hard* on windows

[20:03] <El_Che> finding the right make/nmake

[20:03] <El_Che> from all the soft installed

[20:03] <patrickb> I tried doing it in a windows docker container (Microsoft offers those!). But failed because the small containers miss a lot of plumbing...

[20:03] <El_Che> running find / -name "*make.exe" on travis runs to find it :)

[20:04] <El_Che> do those work on travis or other free-for-foss providers?

[20:05] *** Tirifto left
[20:05] <El_Che> patrickb: This is as far as I got: https://github.com/nxadm/rakudo-pkg/blob/windows/.travis.yml#L7

[20:05] <patrickb> El_Che: It requires "Docker for Windows" which requires putting Windows itself in a special mode. In that mode most other virtualization technology doesn't work. So I doubt it it will work on travis.

[20:05] <El_Che> patrickb: there is a problem with the right perl to use

[20:05] <El_Che> patrickb: modules mixed and so on

[20:05] <El_Che> patrickb: so I need to get some paths right

[20:06] <El_Che> patrickb: hyperv?

[20:06] <patrickb> hyperv rings a bell. That might be it

[20:06] <El_Che> that's a no-no then

[20:07] <El_Che> travis (beta) and appveyor offer windows support

[20:07] <El_Che> I am kind of invested on travis so that's my target nr 1, but others are possible

[20:07] <El_Che> since I discovered the parallel builds I am happy :)

[20:08] <patrickb> I'm all for doing what works.

[20:09] <El_Che> rakudo-pkg does 24 builds for every commit

[20:09] <El_Che> so serial building is not an option = after 50min you have an automatic fail

[20:11] <patrickb> El_Che: The rakudo builds you linked work on my machine. You saved me the trouble of doing these builds myself (I need them for some work on rakudobrew I'm doing)

[20:12] <El_Che> patrickb++

[20:12] <El_Che> about the format: rakudo-[version]-[platform]-[architecture].[zip|tar.gz]

[20:12] <El_Che> there is also a revision needed

[20:13] <El_Che> if we change something besides the release; new version of zef, e.g.

[20:13] <patrickb> What's a revision?

[20:13] <patrickb> hm

[20:13] <El_Che> like packages do:

[20:13] <patrickb> like a packaging point release?

[20:13] <El_Che> yes

[20:14] <El_Che> in this case, zef is included

[20:14] <El_Che> what if we need to bump zef but rakudo stays on the same version

[20:14] <El_Che> e.g. a bug or change in the ecosystem

[20:15] <patrickb> So that's what the -01 in your filenames was about.

[20:15] <patrickb> Makes sense.

[20:15] <El_Che> rakudo-2019.11-01-linux-x86_64.tar.gz

[20:15] <El_Che> is that ok?

[20:16] <patrickb> I somehow mourn about small and tidy filenames, but I guess the world is just more complex than I'd like.

[20:16] <patrickb> El_Che: Looks good to me.

[20:16] <El_Che> it's a tar

[20:16] <El_Che> it's unpacked to rakudo-2019.11

[20:16] <El_Che> not the hole name :)

[20:17] <patrickb> I've already given it a try. :-)

[20:18] <patrickb> Do we expect to have more than 9 packaging point releases?

[20:18] *** ufobat_ joined
[20:18] <patrickb> If no, why the 0?

[20:18] <El_Che> you never know

[20:19] <patrickb> We don't do it for normal point releases either.

[20:19] <El_Che> it looks like a revision nr

[20:19] <El_Che> 01 

[20:19] <El_Che> instead of a regular numer

[20:19] <patrickb> I don't have a strong opinion on this one.

[20:20] <patrickb> Let's keep -01 for now. No need for bikeshedding.

[20:21] <El_Che> changed to the new names: https://github.com/nxadm/rakudo-pkg/blob/windows/.travis.yml#L7

[20:21] <El_Che> oops

[20:21] <El_Che> https://github.com/nxadm/rakudo-pkg/releases/tag/v2019.11

[20:22] *** ufobat left
[20:23] <El_Che> bintray adapted

[20:28] <El_Che> patrickb: adapted the build script for the new name, so we don't forget for the next release :)

[20:28] <patrickb> Great!

[20:32] *** ufobat_ left
[21:01] *** sena_kun left
[21:16] *** sena_kun joined
[21:30] *** Xliff joined
[21:30] <Xliff> \o

[21:30] <tellable6> 2019-12-01T13:42:33Z #raku-dev <jnthn> Xliff You'd need to arrange for that to be overridden in the ClassHOW

[21:31] <Xliff> m: (43, 82, 0)¬ª.so¬ª.Int.say

[21:31] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´(1 1 0)‚ê§¬ª

[21:32] <Xliff> jnthn: How would I do that?!

[21:37] <Xliff> .tell jnthn Alright, how do I make incorporate_multi_candidates overridable in the ClassHOW?

[21:37] <tellable6> Xliff, I'll pass your message to jnthn

[21:57] <guifa> Is there a way to export an enum in or outside of a package based on an input flag?

[21:58] <guifa> I have two sets of enums that have overlapping values, but that might want to be used together occasionally

[21:58] <guifa> err overlapping keys

[21:58] <guifa> I can stick them in a dummy namespace, but then the namespace has to be used

[22:01] <Xliff> Hrm...

[22:01] <Xliff> Eliminate the overlapping keys from the enums and then use it as a conditional constant you define in a BEGIN block?

[22:01] <Xliff> guifa ^^

[22:02] <guifa> hmmm

[22:02] <Xliff> I can't think of a more elegant way to do it, unfortunately... :/

[22:02] <guifa> Yeah, I might just leave them fully namespaced for now and if I can find an elegant way later I will

[22:03] <guifa> some of the enums have several hundred values lol

[22:04] <guifa> (I‚Äôm rearranging LanguageTag to make the Language/Region/Variant/etc classes inner to the LanguageTag, so I can then have a lot more freedom to play around with the top level Language:: namespace for language codes

[22:05] <Xliff> Ah, OK.

[22:05] <Xliff> Good luck!

[22:06] <guifa> And I still need to finish my advent day post =\

[22:19] <Xliff> m: class Demo { has $.value; sub foo(Demo $val) is export { put $val }; }; import Demo

[22:19] <camelia> rakudo-moar f608a7a41: ( no output )

[22:19] <Xliff> m: class Demo { has $.value; sub foo(Demo $val) is export { put $val }; }; import Demo; my $d = Demo(value => 42); foo($d)

[22:19] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Cannot coerce to Demo with named arguments‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:19] <Xliff> m: class Demo { has $.value; sub foo(Demo $val) is export { put $val }; }; import Demo; my $d = Demo.new(value => 42); foo($d)

[22:19] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Demo<55840688>‚ê§¬ª

[22:20] <Xliff> m: class Demo { has $.value; sub foo(Demo $val) is export { put $val.value }; }; import Demo; my $d = Demo.new(value => 42); foo($d)

[22:20] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´42‚ê§¬ª

[22:45] <Xliff> .seen zostay

[22:45] <tellable6> Xliff, https://gist.github.com/30c3968728aa4f7032f9df513b2f8041

[22:47] <Xliff> .tell zostay https://zostay.com/category/posts/index.html --> Shouldn't sub foo be "put $val.value" ??

[22:47] <tellable6> Xliff, I'll pass your message to zostay

[22:48] <Xliff> .tell zostay Also... great first article for your Advent! :D

[22:48] <tellable6> Xliff, I'll pass your message to zostay

[22:56] *** finanalyst left
[23:01] *** sena_kun left
[23:18] *** sena_kun joined
[23:20] *** kurahaupo left
[23:29] *** chloekek left
[23:29] *** lgtaube left
[23:39] *** dmc00 left
[23:41] *** dmc00 joined
[23:42] *** dmc00 left
[23:44] *** lgtaube joined
[23:46] <cognomin_> hi, what is the current state of raku js ?

[23:50] <AlexDaniel> cognomin_: it sorta works https://perl6.github.io/6pad/

[23:55] <cognomin_> The compiler is js or just the backend ?

[23:59] <cognomin_> Learning sveltejs. Wish there was a raku svelte

