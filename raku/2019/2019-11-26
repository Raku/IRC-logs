[00:00] *** wildtrees joined
[00:05] *** sena_kun left
[00:06] *** MasterDuke left
[00:08] *** patrickb left
[00:12] *** mid_home left
[00:17] *** pureabsolute left
[00:34] <discord6> <Vendethiel> I‚Äôd need to think first :D that‚Äôs difficult

[00:36] *** lucasb left
[00:49] *** xinming_ left
[00:50] <uzl[m]> lizmat: Good job as always with the Raku weekly. BTW, Calender -> Calendar

[00:51] *** xinming_ joined
[00:51] <uzl[m]> I wasn't aware that changing a Github username was so easy. Also like Camelia with the suitcase.

[00:55] *** lytz joined
[01:25] *** lytz left
[01:29] <Xliff> \o usl!

[01:35] *** Xliff left
[02:21] *** rindolf joined
[02:30] <Kaiepi> i'm writing a way to type check values based off what kind they have. i have a parametric type that can be used for this, but i'm stuck using it in a where clause. is there any way i can write it so it happens at compile-time?

[02:30] <Kaiepi> it being the type check

[02:36] *** cpan-raku left
[02:37] *** cpan-raku joined
[02:37] *** cpan-raku left
[02:37] *** cpan-raku joined
[03:16] *** cognomin_ joined
[03:20] *** cognominal left
[03:31] *** wildtrees left
[03:41] *** cognominal joined
[03:45] *** cognomin_ left
[04:08] *** cognomin_ joined
[04:09] *** cognominal left
[04:51] *** abraxxa left
[04:54] *** abraxxa joined
[05:03] *** gbmor left
[05:12] *** RobRaku joined
[05:17] *** Xliff joined
[05:21] *** xinming_ left
[05:23] *** xinming_ joined
[05:24] *** Xliff left
[05:38] *** ZzZombo left
[05:49] *** abraxxa left
[05:51] *** abraxxa joined
[06:18] *** ZzZombo joined
[06:19] *** jmerelo joined
[06:31] *** angelds joined
[06:40] *** abraxxa left
[06:42] *** abraxxa joined
[06:49] <jmerelo> I've voted to reopen this question in StackOverflow https://stackoverflow.com/questions/59035286/raku-shell-function-within-start-block-wont-end

[06:50] <jmerelo> Even if the answer is elsewhere, and the code is similar, I would rather point the author in a comment or answer to it, than close it. 

[06:51] <jmerelo> Also, they're new contributors. It's always better to help them than to reject them from the beginning closing their question. This is not what the community is about.

[06:52] <jmerelo> BTW, I saw it in the exciting new edition of Rakudo weekly, https://twitter.com/liztormato/status/1199040357423562753

[06:53] <Grinnz> that's more a general stack overflow policy, I kind of agree it's offputting but it's also useful in the long run ü§∑

[06:53] <Grinnz> an answer saying your answer is somewhere is probably clearer for newbies yes

[06:54] <Grinnz> especially when it's not exactly the same answer

[06:54] <jmerelo> Grinnz: I'd like to arrive at the long run first

[06:55] <jmerelo> Grinnz: it's not exactly the same question, also, they're coming at it from a different angle. It's bound to show up in search results, too.

[06:56] <jmerelo> Grinnz: I mean, when we have like 10 questions a day, we'd probably cut the job short a bit by closing those that have been duplicated. But right now there are less than 300 questions with the Raku label.

[06:56] <jmerelo> We can't afford to lose a single one. Let's try and improve them instead of bashing them down.

[06:59] *** nige_ joined
[07:01] <nige_> I just freed up one my advent calendar slots (9th of Dec) another author is welcome to fill it ...

[07:02] <jmerelo> nige_: thanks!

[07:05] <nige_> thanks - new $day-job means less tuits for the next few weeks

[07:05] <jmerelo> nige_: congrats, and thanks for your remaining collaboration anyway.

[07:07] <nige_> no probs - its been good fun to contribute to the calendar over the years

[07:12] <nige_> speaking of collaboration - I've teamed up with three student teams from the uni of bristol to create MVP start up businesses 

[07:12] <nige_> each team is using the same start up api 

[07:13] <nige_> in 2020 i'd like to release a Raku client to help with getting apps started

[07:14] <nige_> (the api isn't yet ready just yet)

[07:15] <jmerelo> nige_: that would be great :-)

[07:16] <nige_> cool :-) ...would love to see some jobs out there for Raku devs

[07:16] <nige_> (another good way to attract users)

[07:16] <jmerelo> nige_++

[07:18] *** jmerelo left
[07:28] <El_Che> morning

[07:32] *** stoned75 left
[07:45] *** Manifest0 left
[07:47] *** Manifest0 joined
[07:58] *** abraxxa left
[08:17] *** nige__ joined
[08:17] *** nige_ left
[08:25] *** nige__ left
[08:29] *** RobRaku left
[08:41] *** RobRaku joined
[09:04] *** abraxxa joined
[09:10] *** RobRaku left
[09:15] <lizmat> uzl[m]++   # fixed

[09:32] *** RobRaku joined
[09:34] *** abraxxa left
[09:34] *** abraxxa joined
[09:37] *** abraxxa left
[09:37] *** abraxxa joined
[09:44] *** abraxxa left
[09:44] *** abraxxa joined
[09:48] <Geth> ¬¶ problem-solving: 0ac3cb71be | (Elizabeth Mattijsen)++ | solutions/language/Path-to-Raku.md

[09:48] <Geth> ¬¶ problem-solving: s/RAKU_HOME/RAKUDO_HOME/

[09:48] <Geth> ¬¶ problem-solving: 

[09:48] <Geth> ¬¶ problem-solving: The 2019.07 Changelog states:

[09:48] <Geth> ¬¶ problem-solving: 

[09:48] <Geth> ¬¶ problem-solving:     Introduced `PERL6_HOME` and `NQP_HOME` which allow to control where

[09:48] <Geth> ¬¶ problem-solving:     Perl¬†6 and NQP look for their installation

[09:48] <Geth> ¬¶ problem-solving: 

[09:48] <Geth> ¬¶ problem-solving: <‚Ä¶commit message has 6 more lines‚Ä¶>

[09:48] <Geth> ¬¶ problem-solving: review: https://github.com/perl6/problem-solving/commit/0ac3cb71be

[10:13] *** sena_kun joined
[10:55] *** RobRaku_ joined
[11:00] *** RobRaku_ left
[11:00] *** abraxxa left
[11:00] *** abraxxa joined
[11:02] *** patrickb joined
[11:18] *** squashable6 left
[11:20] *** squashable6 joined
[11:26] *** mid_laptop joined
[11:30] *** squashable6 left
[11:33] *** squashable6 joined
[11:58] *** mid_laptop left
[12:03] *** Altai-man_ joined
[12:05] *** sena_kun left
[12:06] *** ZzZombo left
[12:09] *** ZzZombo joined
[12:09] *** finanalyst joined
[12:34] *** abraxxa left
[12:35] *** abraxxa joined
[12:46] *** kensanata joined
[12:57] *** mid_laptop joined
[13:36] *** RobRaku left
[13:40] *** chloekek joined
[13:42] *** angelds left
[13:56] *** abraxxa left
[13:58] *** abraxxa joined
[14:04] *** sena_kun joined
[14:06] *** Altai-man_ left
[14:28] *** abraxxa left
[14:28] *** abraxxa joined
[14:39] *** abraxxa left
[14:40] *** abraxxa joined
[14:49] *** abraxxa left
[14:50] *** abraxxa joined
[15:22] *** squashable6 left
[15:23] *** squashable6 joined
[16:03] *** Altai-man_ joined
[16:06] *** sena_kun left
[16:10] *** mid_laptop left
[16:17] <El_Che> lo

[16:21] *** chloekek left
[16:31] *** jmerelo joined
[16:44] *** abraxxa left
[16:45] *** abraxxa joined
[16:48] *** abraxxa left
[16:49] *** abraxxa joined
[16:50] *** chloekek joined
[16:52] *** daxim left
[16:53] *** abraxxa left
[17:04] *** daxim joined
[17:05] *** abraxxa joined
[17:08] *** patrickb left
[17:12] *** joule joined
[17:40] *** maggotbrain joined
[17:49] <Kaiepi> m: my constant Documented = do { $_ := Metamodel::ClassHOW.new_type(:name<Documented>); $_.compose; $_.set_why: Pod::Block::Declarator.new: :leading<foo bar baz>; $_ }; say Documented.WHY

[17:49] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a constant‚ê§at <tmp>:1‚ê§Exception details:‚ê§  No such method 'compose' for invocant of type 'Documented'‚ê§    in block  at <tmp> line 1‚ê§‚ê§¬ª

[17:49] <Kaiepi> m: my constant Documented = do { $_ := Metamodel::ClassHOW.new_type(:name<Documented>); $_.^compose; $_.^set_why: Pod::Block::Declarator.new: :leading<foo bar baz>; $_ }; say Documented.WHY

[17:49] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a constant‚ê§at <tmp>:1‚ê§Exception details:‚ê§  5===SORRY!5=== Error while compiling ‚ê§  Too many positionals passed; expected 2 arguments but got 3‚ê§  at :‚ê§¬ª

[17:50] <Kaiepi> m: my constant Documented = do { $_ := Metamodel::ClassHOW.new_type(:name<Documented>); $_.HOW.compose: $_; $_.HOW.set_why: Pod::Block::Declarator.new: :leading<foo bar baz>; $_ }; say Documented.WHY

[17:50] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´foo bar baz‚ê§¬ª

[17:50] <Kaiepi> how do you use newlines in pod declarator blocks?

[17:52] <tony-o> m: my constant Documented = do { $_ := Metamodel::ClassHOW.new_type(:name<Documented>); $_.HOW.compose: $_; $_.HOW.set_why: Pod::Block::Declarator.new: :leading(["foo\nbar", "baz"]); $_ }; say Documented.WHY

[17:52] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´foo‚ê§bar baz‚ê§¬ª

[17:52] <tellable6> 2019-11-09T14:32:34Z #raku-dev <tbrowder> tony-o is it possible to add the roast master branch to the build testing for a rakudo PR?

[17:52] <tony-o> tbrowder: yes i believe so, do you have somewhere you want me to look for this?

[17:53] <tony-o> or, a CI you're using specifically?  either GH or travis or circle?

[17:54] <Kaiepi> i mean using #| or #= syntax, tony-o 

[17:54] <Kaiepi> that's the desugared form of this:

[17:55] <Kaiepi> #|[foo]

[17:55] <Kaiepi> #|[bar]

[17:55] <Kaiepi> #|[baz]

[18:04] *** sena_kun joined
[18:06] *** Altai-man_ left
[18:10] <tbrowder> tony-o: the github folks said they increased the build time for us, so i would like to try out a spec (roast) test for the master branch. can we somehow create a roast test for master that is selectable instead of the normal build? maybe a special branch for the release managers?

[18:11] <tbrowder> us (rakudo)

[18:14] *** kensanata left
[18:18] <tony-o> yea i can work on that

[18:19] *** caterfxo joined
[18:19] <tony-o> err, sorry, you're referring to gh actions, no? tbrowder 

[18:21] <tbrowder> i'm not sure, build time increase is for rakudo, so i would like us to try a build for rakudo and run the full spec test (or at least as much as we can, using travis).

[18:22] <El_Che> tbrowder: wouldn't you be cut at 50m?

[18:23] <tbrowder> travis folks said build time has been increased 

[18:24] *** wildtrees joined
[18:24] <tony-o> oh, i see..let me think on how to do that

[18:24] <tony-o> yes it can be done, probably in a lot of bad/slow ways

[18:25] <tbrowder> maybe you can talk to the travis engineer: Jan Schulte, i'll send tel number by priv msg

[18:27] <tony-o> ah, danke - i'll whatsapp him once i figure out what i'd like to ask 

[18:33] <Doc_Holliwould> finally I had a use for dynamic variables

[18:33] <Doc_Holliwould> https://pastebin.com/wdC709JJ

[18:33] <Doc_Holliwould> but boy, recursion makes my brain melt.

[18:33] <Doc_Holliwould> everytime

[18:36] <El_Che> tony-o: hi tony-o (it was me in the problem-solution thread)

[18:36] <tony-o> you're nxadm?

[18:36] <El_Che> yes

[18:36] <tony-o> Doc_Holliwould: you would love xslt then

[18:36] <El_Che> tony-o: I am also Batman, but don't tell anyone :)

[18:37] <Doc_Holliwould> I would appreciate it if that word would never be used again in these halls, tyvm

[18:37] <Doc_Holliwould> @tony-o

[18:38] <Doc_Holliwould> i loved xsl-fo though, though I cheated because we used templates to create the xml for the pdfs

[18:39] <tony-o> El_Che: my point, as you pointed out, is off topic in terms of that issue but not in terms of discussing a CoC - my point is mainly that an ask for help like that should come after direct communication channels are attempted (like here), and an attempt at getting mediation elsewhere.  the problem-solving repo seems like more of a place to committee a decision that needs to be made, that issue skirts the 

[18:39] <tony-o> issue of a CoC but mainly is focused on the OP feeling harassed 

[18:39] <tony-o> Doc_Holliwould: haha

[18:41] <El_Che> tony-o: I have no time to discuss it atm (helping daughter with homework in a few minutes), but I get your point of the Coc and I see it connected to a lack of procedure: no one know how to act and what channels to use. Also if you're the accused party.

[18:42] <tony-o> El_Che: ah, no worries 

[18:43] <[Coke]> If we need help with CoC questions, I have a resource in TPF we can probably get some cycles from.

[18:43] <tony-o> i think in this case, specifically, a direct conversation would've alleviated a lot of the tension before it came to what it did

[18:43] <[Coke]> (I don't see the original discussion, just tony-o and el_che's comments just now)

[18:43] <tony-o> as it usually does with most things in the world

[18:44] <tony-o> [Coke]: #131 in the problem-solving repo

[18:58] <[Coke]> Danke

[18:59] <jmerelo> December 9th in the Advent calendar was just released https://github.com/perl6/advent/blob/master/perl6advent-2019/schedule

[18:59] <jmerelo> It's free for anyone to take, first come, first served.

[19:03] <japhb> [Coke]: https://github.com/perl6/problem-solving/issues/131#issuecomment-558772828  (Letting you know because I posted after you did, and you seem to be collecting existing SoC/CCoC docs.)

[19:06] <tony-o> ( [Coke] japhb )++

[19:10] *** daxim left
[19:15] *** daxim joined
[19:18] *** squashable6 left
[19:19] *** squashable6 joined
[19:21] *** cpan-raku left
[19:23] *** MasterDuke joined
[19:26] *** cognominal joined
[19:26] *** cpan-raku joined
[19:26] *** cpan-raku left
[19:26] *** cpan-raku joined
[19:30] *** cognomin_ left
[19:31] *** rindolf left
[19:43] *** rindolf joined
[19:54] *** jmerelo left
[20:03] *** Altai-man_ joined
[20:06] *** sena_kun left
[20:19] *** cognomin_ joined
[20:22] *** cognominal left
[20:24] <Geth> ¬¶ problem-solving: vrurg assigned to jnthn Issue Remove P5 regexes from Raku https://github.com/perl6/problem-solving/issues/133

[20:27] <Grinnz> my uninvested opinion: maybe a PCRE style would be more useful

[20:27] <Grinnz> that's also less of a moving target

[20:28] <Grinnz> (or even a way to use libpcre2 directly, like re::engine::PCRE2 in perl?)

[20:32] <vrurg> Grinnz: in either case, it's better be a 3rd party module, but not in the core.

[20:32] <Grinnz> sounds reasonable

[20:33] <vrurg> Now it's only a matter of someones good will to implement a module. :)

[20:34] <vrurg> easy-peasy...

[20:37] *** stoned75 joined
[20:40] *** stoned75_ joined
[20:53] <Geth> ¬¶ problem-solving: japhb assigned to AlexDaniel Issue Update or replace draft SoC/CCoC https://github.com/perl6/problem-solving/issues/134

[20:53] <Geth> ¬¶ problem-solving: AlexDaniel self-unassigned Update or replace draft SoC/CCoC https://github.com/perl6/problem-solving/issues/134

[20:53] <Geth> ¬¶ problem-solving: AlexDaniel assigned to lizmat Issue Update or replace draft SoC/CCoC https://github.com/perl6/problem-solving/issues/134

[20:54] <japhb> Wow, that was fast AlexDaniel`.  :-)

[21:00] *** joule left
[21:01] *** MasterDuke left
[21:08] *** chloekek left
[21:11] *** chloekek joined
[21:16] *** rindolf left
[21:37] <lizmat> no pressure, eh?

[21:39] <El_Che> now you know how jnthn feels :P

[21:49] <japhb> El_Che: Oh don't worry, she's aware.  :-)

[21:54] * lizmat received a mail about a release ?

[21:54] <El_Che> :)

[21:54] <AlexDaniel> lizmat: what mail?

[21:54] <AlexDaniel> I didn't send anything

[21:55] <AlexDaniel> from github?

[21:55] <lizmat> yup

[21:55] <lizmat> https://github.com/rakudo/rakudo/releases/tag/2019.11

[21:55] <AlexDaniel> well, you all will need to have some patience though :)

[21:55] <lizmat> he, ok

[21:55] <AlexDaniel> because turns out there are no moarvm tars, I guess that will be fixed shortly

[21:56] <AlexDaniel> so technically there is a release, but tough luck if you want to build from tars :)

[21:57] <japhb> AlexDaniel: Speaking of MoarVM, now that you've released do you want to bump nqp/rakudo to pick up nine++'s NativeCall fixes?

[21:58] <AlexDaniel> yes yes

[21:58] <AlexDaniel> that needs to be done anyway to have nicer version files

[21:59] *** chloekek left
[22:00] *** Kaiepi left
[22:01] <El_Che> AlexDaniel: your last release?

[22:01] *** Kaiepi joined
[22:03] <lizmat> El_Che: yes, I think that's correct

[22:05] *** sena_kun joined
[22:06] *** Altai-man_ left
[22:10] <AlexDaniel> El_Che: I hope so

[22:11] <AlexDaniel> there's always a chance of a point release

[22:13] <sena_kun> releasable6, status

[22:13] <releasable6> sena_kun, and I oop! Backtrace: https://gist.github.com/cf537ba8fe61e9218f97a5700d834659

[22:13] * sena_kun runs away

[22:13] *** lizmat left
[22:14] <AlexDaniel> not your fault

[22:14] *** lizmat joined
[22:17] <AlexDaniel> releasable6: status

[22:17] <releasable6> AlexDaniel, and I oop! Backtrace: https://gist.github.com/36d32001758d237a6f237430216b6b19

[22:17] <AlexDaniel> ok we'll need to wait a bit for it to update :)

[22:17] <AlexDaniel> but it should be fixed now

[22:18] <sena_kun> AlexDaniel, care for a couple of questions wrt releasing process?

[22:18] <AlexDaniel> sena_kun: sure!!

[22:19] <AlexDaniel> tellable6: CLA

[22:19] <tellable6> AlexDaniel, I haven't seen CLA around, did you mean CQ?

[22:19] <AlexDaniel> notable6: CLA

[22:19] <notable6> AlexDaniel, 1 note: 2019-08-01T07:40:37Z <AlexDaniel>: https://www.perlfoundation.org/contributor-license-agreement print it out, sign it, scan it in (resize your scan to 250KB or less). Email to trademark -at- perlfoundation.org and don't forget to CC will at coleda.com

[22:20] <AlexDaniel> sena_kun: ‚Üë btw it'll be more convenient to commit stuff if you sign the CLA

[22:20] <AlexDaniel> sena_kun: e.g. quick tweaks to the release guide and stuff like this

[22:29] <Doc_Holliwould> m: my @a = (Any, 1, 2, 6, Any); say @a.grep({ .defined && $_ < 5 })

[22:29] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´(1 2)‚ê§¬ª

[22:30] <Doc_Holliwould> can i get rid of the exlicit defined check without producing warnings?

[22:32] <Doc_Holliwould> m: my @a = (Any, 1, 2, 6, Any); say @a.grep({ ($_|Inf) < 5 })

[22:32] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Use of uninitialized value of type Any in numeric context‚ê§((Any) 1 2 (Any))‚ê§  in block  at <tmp> line 1‚ê§Use of uninitialized value of type Any in numeric context‚ê§  in block  at <tmp> line 1‚ê§¬ª

[22:32] <Doc_Holliwould> m: my @a = (Any, 1, 2, 6, Any); say @a.grep({ ($_//Inf) < 5 })

[22:32] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´(1 2)‚ê§¬ª

[22:32] <Doc_Holliwould> meh

[22:58] *** finanalyst left
[23:20] *** wenjie1991 joined
[23:21] *** wenjie1991 left
[23:51] <japhb> When I try to `zef install HTTP::UserAgent`, I get "Failed to find dependencies: Encode".  How do I figure out what needs to be fixed?  Also, `zef info HTTP::UserAgent` just says "Depends: 10 items" without giving any details, and there doesn't seem to be a verbose option.  Likewise, `zef depends HTTP::UserAgent` tells me "Failed to resolve some missing dependencies", which isn't useful -- I need to actually 

[23:51] <japhb> know what those dependencies are and what it tried.  I ended up looking at https://github.com/sergot/http-useragent/blob/master/META6.json just to see the full depends list, but zef should be able to do that directly.

[23:52] <japhb> (Yes, clearly I know zef is having troubles with the Encode dependency.  It's not clear whether that's a problem with the ecosystem data, or a moved Encode repo, or an out of date META6 for HTTP::UserAgent, or what.)

[23:53] <japhb> (And in the mean time I discovered the apparent problem with using zef to figure out what went wrong.)

