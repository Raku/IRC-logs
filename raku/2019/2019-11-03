[00:00] <Tirifto> AlexDaniel: Good idea! I'll be doing that.

[01:21] *** Tirifto left
[01:44] *** stoned75 left
[02:44] *** squashable6 left
[02:45] *** squashable6 joined
[02:48] <cfa>  /quit

[02:48] *** cfa left
[03:32] *** redable joined
[04:06] *** redable left
[04:29] *** wamba joined
[05:29] *** squashable6 left
[05:32] *** squashable6 joined
[06:32] *** squashable6 left
[06:34] *** squashable6 joined
[07:15] *** stoned75 joined
[08:02] *** stoned75 left
[08:10] *** sena_kun joined
[08:25] *** wamba left
[08:29] <Geth_> ¦ doc/perl6: 882b3f0b4b | (JJ Merelo)++ | template/header.html

[08:29] <Geth_> ¦ doc/perl6: Eliminates edition URL

[08:29] <Geth_> ¦ doc/perl6: 

[08:29] <Geth_> ¦ doc/perl6: Follows #3046

[08:29] <Geth_> ¦ doc/perl6: review: https://github.com/perl6/doc/commit/882b3f0b4b

[08:29] <Geth_> ¦ doc/perl6: 2bde2f14ef | (JJ Merelo)++ | template/footer.html

[08:29] <Geth_> ¦ doc/perl6: Adds temptative new URL marker

[08:29] <Geth_> ¦ doc/perl6: 

[08:29] <Geth_> ¦ doc/perl6: see perl6/Documentable#56

[08:29] <Geth_> ¦ doc/perl6: review: https://github.com/perl6/doc/commit/2bde2f14ef

[08:54] *** wamba joined
[09:02] *** ilogger2_ joined
[09:07] *** Geth joined
[09:09] <xinming> SmokeMachine: When I update the request, Do I recreate the pull request or I update that request by push more patches?

[09:25] <sena_kun> xinming, you push commits to the branch that is a source for PR

[09:25] <sena_kun> xinming, they will be automagically added to your PR

[09:26] <sena_kun> so no need to close / open again

[09:31] *** stoned75 joined
[09:31] <xinming> Ok.

[09:43] *** Altai-man_ joined
[10:10] <Geth> ¦ doc/perl6: d3973d5cd0 | (JJ Merelo)++ | template/footer.html

[10:10] <Geth> ¦ doc/perl6: Changes template

[10:10] <Geth> ¦ doc/perl6: 

[10:10] <Geth> ¦ doc/perl6: Improves typography and phrasing. Refs #3046

[10:10] <Geth> ¦ doc/perl6: review: https://github.com/perl6/doc/commit/d3973d5cd0

[10:40] <xinming> m: my $x = sub ("x", *@cdef) { }; $x.signature.perl.say; my $signature = $x.signature;

[10:40] <camelia> rakudo-moar 7e7aa2626: OUTPUT: «:("x", *@cdef)␤»

[10:40] <xinming> my $x = sub ("x", *@cdef) { }; $x.signature.perl.say; my $signature = $x.signature; my $custom = :(:x, *@cdefg);

[10:40] <xinming> Why can't we create the signature ourselves?

[10:41] <xinming> my $x = sub ("x", *@cdef) { }; $x.signature.perl.say; my $signature = $x.signature; my @cdefg; my $custom = :(:x, *@cdefg);

[10:41] <xinming> m: my $x = sub ("x", *@cdef) { }; $x.signature.perl.say; my $signature = $x.signature; my @cdefg; my $custom = :(:x, *@cdefg); $custom.perl.say;

[10:41] <camelia> rakudo-moar 7e7aa2626: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3gnature; my @cdefg; my $custom = :(:x, *7⏏5@cdefg); $custom.perl.say;␤    expecting any of:␤        infix␤        infix stopper␤        statement…»

[10:42] <xinming> m: my @cdefg; my $custom = :(:x, *@cdefg); $custom.perl.say;

[10:42] <camelia> rakudo-moar 7e7aa2626: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3my @cdefg; my $custom = :(:x, *7⏏5@cdefg); $custom.perl.say;␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤  …»

[11:00] <Geth> ¦ doc: 59daa8f951 | (Stoned Elipot)++ | doc/Language/variables.pod6

[11:00] <Geth> ¦ doc: fix example style

[11:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/59daa8f951

[11:01] <xinming> Is it possible to create multiple "multi"  within block scope?

[11:04] <xinming> m: sub scope ($v) { my multi a ("a") { "a" }; my multi a ("b") { "b" }; a($v).perl.say; }; scope("b");

[11:04] <camelia> rakudo-moar 7e7aa2626: OUTPUT: «"b"␤»

[11:04] <xinming> got it. The reason I ask is, before, I tried to do something like    my &x = multi ("a") { }

[11:08] <Geth> ¦ doc: 2179935325 | (Stoned Elipot)++ | doc/Language/variables.pod6

[11:08] <Geth> ¦ doc: fix xtest run: really skip test as intended

[11:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2179935325

[11:14] *** xinming joined
[11:23] *** cpan-raku joined
[11:23] *** cpan-raku left
[11:23] *** cpan-raku joined
[11:23] <lizmat> weekly: https://www.metafilter.com/183927/Bring-out-your-dead-BONG-Perl-6-Im-not-dead-BDFL-BONK

[11:23] <notable6> lizmat, Noted! (weekly)

[11:43] *** sena_kun joined
[11:45] *** Altai-man_ left
[12:13] *** chloekek joined
[13:06] *** donaldh joined
[13:14] *** lucasb joined
[13:18] *** chloekek left
[13:33] *** ggoebel joined
[13:43] *** Altai-man_ joined
[13:46] *** sena_kun left
[13:49] *** donaldh left
[14:01] *** donaldh joined
[14:02] *** donaldh left
[14:03] *** donaldh joined
[14:10] *** Tirifto joined
[14:26] *** donaldh left
[14:28] *** chloekek joined
[14:59] <maettu> probably my bad, but maybe somebody knows the solution top-of-their-head :-) https://github.com/perl6/Blin/issues/13

[15:08] <tobs> maettu: Blin will fetch cached rakudo builds from a server. It seems like the system on which those were built has a different libc from yours.

[15:12] <El_Che> maettu: just tested using the img we're using to test this release (based on debian-slim stable) and I don't have that problem: https://github.com/nxadm/raku-blin-docker/

[15:12] *** chloekek left
[15:12] <lucs> lizmat: Do items added to the weekly also happen to be tweeted?

[15:12] <El_Che> no

[15:13] <lucs> El_Che: Um, that was for me?

[15:13] <El_Che> yes

[15:13] <El_Che> there is no link, as far as a know, between weekly and twitter accounts

[15:14] <lucs> I wonder if it was considered and perhaps rejected.

[15:14] *** cpan-raku left
[15:15] *** cpan-raku joined
[15:15] *** cpan-raku left
[15:15] *** cpan-raku joined
[15:16] <El_Che> lucs: there is no weekly twitter account

[15:17] <maettu> El_Che: ok, thx

[15:19] <maettu> tobs: thanks for the explanation.

[15:22] <El_Che> maettu: in case you have docker installed, just run the dblin command instead of blin.p6

[15:22] <El_Che> (or the commands inside that file)

[15:22] <maettu> yes

[15:23] <maettu> Of course using docker, alone for the additional isolation / throwaway-ability :-)

[15:23] <El_Che> maettu: then you're set :)

[15:26] <El_Che> maettu: run it with podman to get even more isolation

[15:26] <maettu> oh yes, have to look into podman :-)

[15:30] <maettu> I only wanted to test-test 1 module.. ~/raku-blin-docker$ docker run -ti -v /tmp/blin-output/:/Blin/output rakudo/blin DBIish

[15:31] <maettu> but ⏳ 15 out of 1343 modules processed

[15:44] *** sena_kun joined
[15:45] *** Altai-man_ left
[15:46] *** cfa joined
[15:46] <cfa> o/

[15:46] <El_Che> you need to mount ot /mnt

[15:46] <El_Che> in the container

[15:47] <El_Che> -v /tmp/blin)output:/mnt

[15:48] <cfa> .seen jmerelo

[15:48] <tellable6> cfa, I saw jmerelo 2019-11-03T10:45:12Z in #raku-dev: <jmerelo> releasable6: status

[15:48] <El_Che> the Blin dir is copied at runtime to /mnt

[15:48] <El_Che> because it can not be done at img time: new dirs are created in blin

[15:50] <El_Che> AlexDaniel: wanted the complete Blin dir, not only output. If you mount a volume over it it will be an overlay

[15:57] <Geth> ¦ doc: d685bd32f4 | cfa++ | xt/code.pws

[15:57] <Geth> ¦ doc: Learn a few more bot names; sort.

[15:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d685bd32f4

[15:57] <maettu> ElChe: Oh! But still.. shouldn't this only test the module mentioned? ./dblin DBIish

[15:57] <maettu> (it does the whole lot)

[16:02] <Geth> ¦ doc: cd42c00505 | cfa++ | 2 files

[16:02] <Geth> ¦ doc: Learn a few more words.

[16:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cd42c00505

[16:03] *** markmarkmark joined
[16:20] <Geth> ¦ doc: 0dcaf58cd2 | cfa++ | doc/Type/Cool.pod6

[16:20] <Geth> ¦ doc: Revise a rewritten "Raku" example that was supposed to illustrate nbsp.

[16:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0dcaf58cd2

[16:45] <El_Che> maettu: I'll look into that. Thx

[16:58] <El_Che> maettu: fixed

[16:58] <El_Che> maettu: (don't forget to docker pull)

[17:10] <El_Che> maettu: ping me if you experience problems, but it should be now ok with params

[17:15] <maettu> El_Che: Ah yes, passing the arguments through.. Will ping you.

[17:39] <Geth> ¦ doc: 6c97c4531f | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[17:39] <Geth> ¦ doc: use desired doc output example style

[17:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6c97c4531f

[17:44] *** Altai-man_ joined
[17:44] *** Tirifto left
[17:46] *** sena_kun left
[17:47] <cfa> jmerelo: it looks like https://docs.raku.org isn't building, picking up updates

[17:47] <tellable6> cfa, I'll pass your message to jmerelo

[17:53] <rba> cfa: As far as I know it's not fully automated. Needs a manual build step in between so far.

[17:54] <cfa> oh, hunh

[17:54] <cfa> is that intentional, or just a hiccup in the transition from perl6.org to raku.org?

[18:27] <rba> cfa: No, it just needs more time to get things done...

[18:30] <uzl[m]> I've updated the Learn X in Y Minutes for Raku. The main changes are the document's sections is included in the resulting raku file, the Raku file can now be executed, some examples had minor updates or fixes, mentions of Perl 6 -> Raku, updated links, extensions and commands.  I haven't pushed it yet though so it'd be great if somebody could take a look at it.

[18:30] <uzl[m]> https://github.com/uzluisf/raku-lxiy/blob/master/README.md

[18:35] *** jmerelo joined
[18:45] <cfa> hey jmerelo 

[18:49] <uzl[m]> "As a programmer who works mostly in Ruby but has done some stuff in Python and liked it very much, I'm not sure I find Perl that compelling. I'm not sure I find a renamed Perl that compelling either." I try to put myself on people's shoes as much as possible but the more I do the more dumbfounded I become.  😕😕

[18:56] <cfa> each to their own

[18:59] <lizmat> lucs: depends  :-)

[18:59] <mspo> how anyone finds python "compelling" for anything other than "finding a job" is beyond me

[19:00] <mspo> it's the least fun language around

[19:01] <mspo> bad performance? check, dumb __syntax__? check, impossible versioning and dependencies? check, TONS of industry adoption (new java)? check

[19:04] <moritz> python has its appeal

[19:04] <mspo> I've never managed to like it

[19:04] <mspo> not sure why

[19:04] <moritz> much easier to get a reference to a method that knows its invocant, for example

[19:04] <timotimo> i was very python right before i became perl6

[19:04] <tadzik> it's simple and logical within its limits, imho

[19:04] <mspo> after leaving .pyc files all over the place I was too angry to continue

[19:04] * lucasb never expected that renaming a product would make it more compelling than it was with the original name

[19:05] <mspo> I'm funny about things like that though

[19:05] <mspo> raku attempts to hide its mess in ~/.raku/ iirc

[19:05] <tadzik> I find Python compelling every time I have to wonder how do I work with List vs Array vs Seq in Raku %)

[19:06] <mspo> tadzik: make a generic wrapper?

[19:06] <timotimo> whereever your --lib and $*REPO points and that's writable

[19:07] <mspo> if a lanuage wants to write files I would prefer an explicit compile step

[19:07] <mspo> and if I don't call that step it should just write into memory

[19:08] <cfa> i'm not fond of python; i know plenty of people who love it and aren't fond of perl

[19:08] <cfa> and the world turns

[19:08] <mspo> someone told me CS people prefer python and hackers prefer perl

[19:09] <mspo> and something about pascal

[19:09] <timotimo> python has scapy

[19:09] <cfa> there's ointment for that

[19:10] <cfa> depending on what you're doing, it's the ecosystem rather than language that's probably most important

[19:10] <cfa> consider: tensorflow, pandas, etc. in the python world

[19:10] <cfa> consider also (historical) p5 cpan

[19:11] <cfa> i'd venture that plenty of enthusiastic perl users were at least partially enthusiastic because of cpan

[19:11] <cfa> (not exclusively the language design)

[19:11] <mspo> yeah for sure

[19:11] <mspo> I end up writing python for anything that touches anything external

[19:12] <mspo> lambdas, api calls for X, etc

[19:12] <cfa> lambdas as in aws?

[19:12] <mspo> I should just suck it up and learn to like it

[19:12] <mspo> cfa: yeah

[19:12] <mspo> type that shit right in the browser ;)

[19:13] <mspo> lamdas are like cgi + complex json

[19:14] <mspo> programming with an execution time limit (like in a video game)

[19:14] <mspo> fun stuff

[19:14] <cfa> heh

[19:15] <mspo> I'll bet in roku I could easily wrap my program in some kind of time limit promise

[19:15] <mspo> MustCompleteWithin() or something

[19:19] <mspo> a single-threaded-only PHASER would also be nice

[19:24] *** jmerelo left
[19:28] <CIAvash> Is possible for the people responsible for Cloudflare for *.raku.org to unblock Tor users?

[19:28] <moritz> rba: ^^

[19:30] <CIAvash> maybe unblock is not the right word, because it's not blocked but shows CAPTCHAs

[19:32] <timotimo> hmmm. maybe offer it as a hidden service?

[19:37] <brass> Yeah cloudflare is crappy about tor

[19:38] <timotimo> i expect a big part of traffic coming out of tor is malicious

[19:45] *** Altai-man_ left
[19:49] <maettu> huh, 1st blin run completed: real    164m25.818s

[19:49] *** chloekek joined
[19:50] <maettu> Woder if that is useful. At least some runs per day would be doable.

[19:51] <maettu> s/Woder/Wonder/

[20:11] *** cfa left
[20:11] <maettu> Also, if that is useful, what should kick a new run, and where should the results be posted?

[20:16] <Geth> ¦ doc: a8ba900d6a | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[20:16] <Geth> ¦ doc: Add some qualifications on the info

[20:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a8ba900d6a

[20:20] <rba> CIAvash: I've changed a setting in Cloudflare. May you try again an let us know if it's working now?

[20:28] <CIAvash> rba: yes it's working, thanks

[20:33] <rba> CIAvash: fine

[21:02] *** chloekek left
[21:35] *** veesh joined
[21:48] *** AlexDani` joined
[21:54] *** leonardus joined
[21:54] *** tbrowder joined
[21:54] *** leonardus left
[21:54] *** leonardus joined
[21:55] *** ggoebel left
[21:55] *** leonardus left
[21:57] *** leonardus joined
[22:36] <lizmat> weekly: http://donaldh.wtf/2019/11/spelling-bee/

[22:36] <notable6> lizmat, Noted! (weekly)

[22:37] <lizmat> weekly: https://raku-musings.com/instance-bar.html

[22:37] <notable6> lizmat, Noted! (weekly)

[23:02] *** ToddAndmargo joined
[23:03] *** ToddAndmargo left
[23:05] *** ToddAndMargo12 joined
[23:07] <ToddAndMargo12> I just upgraded Fedora from 30 to 31.   I reinstalled rakudo-pkg-Fedora31-2019.07.1-03.x86_64.rpm.  Now p6 can not find my modules.  

[23:07] <ToddAndMargo12> # perl6 -I/home/linuxutil/p6lib -MPauseLib -e 'my $x; $x=Pause( "Hi\n" );'    ===SORRY!=== Error while compiling -e    Undeclared name:        Pause used at line 1

[23:16] <timotimo> ToddAndMargo12: if it wasn't able to find the pause lib, it would have complained that PauseLib can't be found. are you sure PauseLib exports something called "Pause"?

[23:17] <timotimo> you can test the difference with this:

[23:17] <timotimo> perl6 -I/home/linuxutil/p6lib -MPrauserLiearbs -e 'my $x; $x = Pause("hi");'

[23:18] <ToddAndMargo12> # zef install PrauserLiearbs===> Searching for: PrauserLiearbsNo candidates found matching identity: PrauserLiearbs

[23:18] <timotimo> no no

[23:18] <timotimo> the point was that it's misspelt

[23:18] <timotimo> don't try to zef install it

[23:18] <ToddAndMargo12> It does find the module.  It just can't find the subs inside:

[23:18] <ToddAndMargo12> # perl6 -I/home/linuxutil/p6lib -MPrintColors -e 'PrintGreen( "Hi\n" );'    ===SORRY!=== Error while compiling -e    Undeclared name:        PrintGreen used at line 1

[23:18] <timotimo> just compare the error message you get with "Undeclared name: Pause used at line 1"

[23:19] <ToddAndMargo12> these all worked perfectly under Fedora 30

[23:20] <ToddAndMargo12> What do yo mean by compare?

[23:29] <ToddAndMargo12> unit module PrintColors;#`{     There subs give you the ability to print to the stand output and standard error     with color.          To use these, place the following at the top(ish) of your program        use lib "/home/linuxutil/p6lib";        use PrintColors :PrintRed, :PrintGreen, :PrintBlue, :PrintErr, :PrintRedErr, :PrintGreenErr,

[23:29] <ToddAndMargo12> :PrintBlueErr;}use Terminal::ANSIColor;  # qx[ color ];sub PrintRed   ( **@args ) is export( :PrintRed )   { print color('bold'), color('red'),   |@args, color('reset'); } sub PrintGreen ( **@args ) is export( :PrintGreen ) { print color('bold'), color('green'), |@args, color('reset'); }sub PrintBlue  ( **@args ) is export( :PrintBlue )  { print

[23:29] <ToddAndMargo12> color('bold'), color('blue'),  |@args, color('reset'); }sub PrintErr   ( **@args ) is export( :PrintErr ) { $*ERR.print: |@args; }sub PrintRedErr   ( **@args ) is export( :PrintRedErr )   { $*ERR.print: color('bold'), color('red'),   |@args, color('reset'); }sub PrintGreenErr ( **@args ) is export( :PrintGreenErr ) { $*ERR.print: color('bold'),

[23:29] <ToddAndMargo12> color('green'), |@args, color('reset'); }sub PrintBlueErr  ( **@args ) is export( :PrintBlueErr )   { $*ERR.print: color('bold'), color('blue'),  |@args, color('reset'); }# $ perl6 -I. -MPrintColors -e 'PrintRedTest( "abc", 1, "def", "\n" );'sub PrintRedTest( **@args ) is export( :PrintRedTest ) { print color('bold'), color('red'), |@args,

[23:29] <ToddAndMargo12> color('reset'); } 

[23:33] *** lucasb left
[23:33] <timotimo> IRC doesn't work well for pasting lots of text or code

[23:34] <timotimo> it looks like you've got export tags for all your subs

[23:34] <timotimo> i am slightly surprised that it worked before

[23:34] <timotimo> since i know of no way to pass export tags for import to the -M commandline flag

[23:34] <ToddAndMargo12> No fooling.  Would you like me to put it up on vpaste?

[23:35] <timotimo> can you try using a use statement in the code, like 'use PrintColors :PrintGreen; PrintGreen("Hi\n");'

[23:35] <timotimo> i've got to go, though

[23:35] <timotimo> i hope that solves the problem

[23:37] <ToddAndMargo12> That helps the one lines.  But my programs that all these libs are still corked

[23:40] *** AlexDani` is now known as AlexDaniel

[23:40] *** AlexDaniel left
[23:40] *** AlexDaniel joined
[23:44] <ToddAndMargo12> # GetPublicIP.pl6===SORRY!=== Error while compiling /home/linuxutil/./GetPublicIP.pl6Undeclared names:    RunNoShell used at lines 19, 23    WriteSecondaryClipboard used at line 24

[23:45] <ToddAndMargo12> Would you like GetPublicIP.pl6 up on vpaste?

[23:54] *** sena_kun joined
[23:55] <ToddAndMargo12> Have you guys changed the way you import things?  Does this no longer work?

[23:55] <ToddAndMargo12> use lib '/home/linuxutil/p6lib';use RunNoShell;    # qw[ RunNoShell RunNoShellCode RunNoShellErr ]use X11Clipboard;  # qw[ WritePrimaryClipboard WriteSecondaryClipboard ReadPrimaryClipboard ReadSecondaryClipboard ]use CheckSystemDependancy;  # qw [ Which CheckSysDependancy ];

[23:57] <ToddAndMargo12> Anyone taking Timo's place?

