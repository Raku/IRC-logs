[00:01] *** squashable6 joined
[00:06] *** warriors left
[00:12] <AlexDaniel> SmokeMachine: now it's easy: https://github.com/FCO/RedBot/commit/c19ef81f1492e7b477d5ede2f23ced0f5117468c

[00:13] <Geth> ¦ whateverable: 90c0b66989 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 3 files

[00:13] <Geth> ¦ whateverable: Make a bunch of config values optional

[00:13] <Geth> ¦ whateverable: 

[00:13] <Geth> ¦ whateverable: By either ignoring or autoinitializing them.

[00:13] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/90c0b66989

[00:14] <AlexDaniel> SmokeMachine: but you need to update Whateverable (maybe with --force again?)

[00:24] *** lucasb left
[00:30] *** Kaiepi joined
[00:31] *** Kaiepi left
[00:43] *** wildtrees left
[01:00] *** Kaiepi joined
[01:34] *** ZzZombo_ joined
[01:36] *** squashable6 left
[01:36] *** ZzZombo left
[01:36] *** ZzZombo_ is now known as ZzZombo

[01:38] *** squashable6 joined
[01:40] <Geth> ¦ whateverable: 62603b4dfa | (Aleks-Daniel Jakimenko-Aleksejev)++ | 3 files

[01:40] <Geth> ¦ whateverable: Add default path for multifile gists

[01:40] <Geth> ¦ whateverable: 

[01:40] <Geth> ¦ whateverable: Also make it configurable.

[01:40] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/62603b4dfa

[01:42] <AlexDaniel> SmokeMachine: ok, I think I'm done :) I left some blanks for you to fill in, but otherwise it should be fully functional now https://github.com/FCO/RedBot/tree/whateverable

[02:47] *** wtwt5237 joined
[02:54] *** ZzZombo_ joined
[02:58] *** ZzZombo left
[02:58] *** ZzZombo_ is now known as ZzZombo

[03:03] <sjn> raku: say !False; # testing if a bot answers

[03:03] <sjn> p6: say !False; # testing if a bot answers

[03:03] <camelia> rakudo-moar c745d6b10: OUTPUT: «True␤»

[03:05] *** wtwt5237 left
[03:09] *** stanley_tam joined
[03:14] *** Geth left
[03:14] *** Geth joined
[03:23] *** stanley_tam left
[03:30] *** stanleytam joined
[03:47] *** squashable6 left
[03:48] *** squashable6 joined
[04:14] *** cinch joined
[04:14] *** cinch_ left
[04:26] *** HoboWithAShotgun joined
[04:30] *** Doc_Holliwood left
[04:36] *** stanleytam left
[04:48] <Geth> ¦ problem-solving: Kaiepi assigned to jnthn Issue IO::Socket::INET and IO::Socket::Async need a redesign in v6.e https://github.com/perl6/problem-solving/issues/125

[05:04] <Geth> ¦ whateverable: f40214c9da | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[05:04] <Geth> ¦ whateverable: Support `raku:` shortcut

[05:04] <Geth> ¦ whateverable: 

[05:04] <Geth> ¦ whateverable: https://colabti.org/irclogger/irclogger_log/raku?date=2019-10-23#l30

[05:04] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/f40214c9da

[05:05] *** jmerelo joined
[05:09] *** evalable6 joined
[05:27] <AlexDaniel> raku: say 42

[05:27] <evalable6> AlexDaniel, rakudo-moar c745d6b10: OUTPUT: «42␤»

[05:27] <AlexDaniel> sjn: ↑

[05:41] <AlexDaniel> u: 👹

[05:41] <unicodable6> AlexDaniel, U+1F479 JAPANESE OGRE [So] (👹)

[05:42] <tadzik> why do characters like these exist

[05:42] <tadzik> what happened to "a universal alphabet" :(

[05:44] <AlexDaniel> tadzik: nothing wrong happened! 𓂺

[05:51] <AlexDaniel> tadzik: I can't find the proposal for that symbol, but seems like there are many fantasy beings in unicode

[05:51] <AlexDaniel> interestingly, people are arguing that there should be a symbol for trolls

[05:53] <tadzik> AlexDaniel: I can *kind of* understand people arguing for "internet language" to have some sort of representation, but I still don't see it as sensible to dedicate characters to it

[05:53] <tadzik> we have a perfectly good textual representation of the word "troll". It's the word "troll", 5 letters :)

[05:54] <moritz> as somebody who's married to a half-Norwegian, I'm sad there's no troll emoji

[05:54] <tadzik> 20 years on the internet I never felt like there needs to be a symbol for it. I have used a smiley fice probably every day, and so the symbol for a smiley feels a bit more appropriate

[05:54] <tadzik> :D

[05:54] <AlexDaniel> btw I asked unicodable about that symbol because it was sent to me, so clearly it's useful for communication…

[05:55] <tadzik> AlexDaniel: why, but that's exactly my point! Someone tried to communicate with you, and you needed a lookup software to determine what they meant. Is that good communication?

[05:56] *** marcusr left
[05:56] *** marcusr joined
[05:57] <AlexDaniel> tadzik: it's clearly a red-faced monster thing, that was immediately clear to me, I just want to know a bit more :)

[05:57] <tadzik> AlexDaniel: ah, that's not bad then :)

[05:57] <discord6> <Aearnus> u: 𓂺

[05:57] <unicodable6> Aearnus, U+130BA EGYPTIAN HIEROGLYPH D053 [Lo] (𓂺)

[05:58] <tadzik> I don't really mind when it's just there, amplifying a message, but I can't stand it when people try to replace words with it

[05:58] <AlexDaniel> Aearnus: yeah… this one you just need to see…

[05:58] <tadzik> "don't be such a <Garbled mess>! Sign up for <garbled mess> on our <garbled mess> to receive a new <garbled mess>!"

[05:59] <tadzik> and of course every platform renders these sligthly differently so I never really know if they meant what they said

[05:59] <AlexDaniel> Aearnus: I'm not sure why it doesn't have a descriptive name

[06:02] <discord6> <Aearnus> no, I saw it hahah

[06:03] <discord6> <Aearnus> but I needed to know the story behind it

[06:04] <AlexDaniel> it's not emoji, so no funny proposal document :)

[06:04] <AlexDaniel> here's one I'm looking at right now: http://www.unicode.org/L2/L2019/19334-river-emoji.pdf

[06:05] <AlexDaniel> I wouldn't mind a river emoji, but the argumentation is just weird :D

[06:05] *** cpan-raku left
[06:06] *** cpan-raku joined
[06:06] *** cpan-raku left
[06:06] *** cpan-raku joined
[06:12] *** HoboWithAShotgun left
[06:15] <discord6> <Aearnus> It's always so funny to me when emoji proposals have to explain the rationale behind something as basic as a "river"

[06:15] <discord6> <Aearnus> It's like an alien learning about Earth

[06:16] <moritz> it's not as if the concept of river has to be justified, just why it needs an emoji

[06:16] <moritz> I mean, is the plan to create a full pictogram language?

[06:17] <moritz> emojis were for expressing emotions, hence the name. I never felt river.

[06:34] *** veesh left
[06:34] *** veesh joined
[06:36] *** jmerelo left
[06:45] <El_Che> moritz: maybe you should once in a while

[06:46] <nine> tadzik: FWIW I'm fully with you on that. I've yet to see the need for emojis and they definitely make communication harder

[06:49] <tadzik> moritz: the only river-like emotion I can think of is "cry me a river" – but that would require combining characters, and I'm not sure if that can even be done in unicode :)

[06:49] *** sena_kun joined
[06:49] <tadzik> maybe the authors are trying to tell us something... that PDF sure feels like someone bet they can put *anything* in unicode and are now putting up the most elaborate trolling attempt they can think of

[06:50] <ZzZombo> Somebody request a symbol for Raku.

[06:51] <nine> Feels like "a picture is worth a thousand words" - but try to paint a picture that conveys this sentence

[06:52] <Grinnz> emojis are a supplement, not a replacement - it's quite difficult for me to adequately express 🤦🏻 in words ;)

[06:54] <Grinnz> the weird ones... 🌠 🌉 🌃 for some reason we have paintings?

[06:56] <tadzik> then there's the crowd favourite, FRONT FACING BABY CHICK and sawyer's favourite AVOCADO

[07:02] <nine> OTOH I had to paste  🤦🏻into a website's input field and raise the zoom to 300 % to identify a the facepalm

[07:03] *** ufobat joined
[07:04] <El_Che> did someone already mentioned the ancient Egyptians?

[07:08] <ufobat> does anyone know when the next rakudo star release is going to happen?

[07:14] *** MasterDuke joined
[07:37] <tyil> doesn't seem like it, but I've been playing around with building a R* for GNU+Linux users in my spare time

[07:37] <tyil> not sure if that's of any help to you, tho

[07:39] <nine> I'd be glad to see a rakudo release for a start. That next release would certainly be a good candidate for R*

[07:41] <discord6> <Aearnus> 🦋🐫🏺

[07:41] <discord6> <Aearnus> Raku emojis

[07:44] <SmokeMachine> Thank you so much AlexDaniel! I'll take a look at it when I come home! Thanks!

[07:55] *** stoned75 joined
[08:01] *** cinch left
[08:04] *** stoned75 left
[08:11] *** HoboWithAShotgun joined
[08:13] <ufobat> the current version seems to be 2019.03, which is quite old, isnt it?

[08:13] *** sena_kun left
[08:28] *** stoned75 joined
[09:35] <tyil> compared to ubuntu's default 2018.03, it's not

[09:35] <tyil> but it is over half a year old, which could be considered old

[09:35] <tyil> idk what has been improved over the course of this time, so I'm not sure if it affects anything big

[09:53] <HoboWithAShotgun> is there an equivalent of Module::ScanDeps for raku?

[09:53] *** pmurias joined
[10:26] <Kaiepi> shit

[10:26] <HoboWithAShotgun> happens?

[10:27] <Kaiepi> me closing the problem solving issue i opened earlier was a misclick

[10:32] <Kaiepi> i think something like scanning for the dependencies of a module may be fairly simple to write, depending on how zef stores them

[10:33] <Kaiepi> actually, zef wouldn't be needed, the compunit classes already know what a module's dependencies are iirc

[10:43] *** sena_kun joined
[10:47] <Kaiepi> m: say so qx[zef locate zef].IO

[10:47] <camelia> rakudo-moar c745d6b10: OUTPUT: «/bin/sh: zef: command not found␤Must specify something as a path: did you mean '.' for the current directory?␤  in block <unit> at <tmp> line 1␤␤»

[10:47] <Kaiepi> whoops, forgot a try

[10:48] <Kaiepi> m: say %*ENV<PERL6_HOME>:exists

[10:48] <camelia> rakudo-moar c745d6b10: OUTPUT: «False␤»

[10:49] <Kaiepi> m: say $?FILE.IO.parent.sibling('META6.json').IO.e; CATCH { default { } }

[10:49] <camelia> rakudo-moar c745d6b10: OUTPUT: «False␤»

[10:49] <Kaiepi> m: say $?FILE.IO.sibling('META6.json').IO.e; CATCH { default { } }

[10:49] <camelia> rakudo-moar c745d6b10: OUTPUT: «False␤»

[10:50] *** Ulti joined
[10:50] <Ulti> oh neat

[10:50] <Ulti> how many people are here for the pottery though >:3

[10:53] <Kaiepi> m: my $path = $?FILE.IO; say CompUnit::PrecompilationStore::File.new-unit(:$path).dependencies

[10:53] <camelia> rakudo-moar c745d6b10: OUTPUT: «[]␤»

[11:04] <lizmat> Ulti:  none, as the channel did not exist before being created for the Raku Programming Language

[11:20] *** AlexDaniel left
[11:20] *** AlexDaniel joined
[11:20] *** AlexDaniel left
[11:20] *** AlexDaniel joined
[11:23] *** vrurg left
[11:35] *** xinming left
[11:35] *** xinming joined
[12:00] *** finanalyst_ joined
[12:04] *** finanalyst_ left
[12:05] <HoboWithAShotgun> so, single quotes vs double quotes, what's your philosophy?

[12:05] <tyil> whatever works for you

[12:07] *** AlexDaniel left
[12:10] *** lucasb joined
[12:11] <sena_kun> HoboWithAShotgun, whatever works in this situation. sticking to a single case is weird, because of interpolation

[12:18] <HoboWithAShotgun> I tend to always use double quotes, except for when i explicitly don't want interpolation

[12:19] <sjn> AlexDaniel++ thanks! ^^

[12:19] <HoboWithAShotgun> I think the "single quotes tell me i don't have to look  into the string" argument is a moot point nowadays

[12:19] <HoboWithAShotgun> at least for me, commas highlighter is really excellent

[12:36] <discord6> <noelsken> m: my $either = <double single>; .say with 'I like \qq[$either.pick()] quotes' x 3 # :)

[12:36] <evalable6> noelsken, rakudo-moar c745d6b10: OUTPUT: «I like single quotesI like single quotesI like single quotes␤»

[12:38] *** HoboWithAShotgun left
[12:38] <discord6> <noelsken> my $either = <double single>; .say with 'I like \qq[$either.pick()] quotes ' xx 3

[12:38] <evalable6> noelsken, rakudo-moar c745d6b10: OUTPUT: «(I like single quotes  I like single quotes  I like single quotes )␤»

[12:39] <discord6> <noelsken> my $either = <double single>; (.say with 'I like \qq[$either.pick()] quotes ') xx 3 # !

[12:39] <evalable6> noelsken, rakudo-moar c745d6b10: OUTPUT: «I like single quotes ␤I like double quotes ␤I like double quotes ␤»

[12:39] <discord6> <noelsken> there's no x or xx on a lower precedence is there?

[12:51] *** pmurias left
[12:53] *** pmurias joined
[13:10] *** AlexDaniel joined
[13:10] *** AlexDaniel left
[13:10] *** AlexDaniel joined
[13:12] *** hankache joined
[13:13] <nine> What? this channel isn't about pottery?

[13:13] <nine> Darn...

[13:14] *** warriors joined
[13:16] *** AlexDaniel left
[13:22] *** vrurg joined
[13:34] *** Tirifto joined
[13:40] * Juerd hides the pot

[14:14] <xinming> Hi, just for confirmation, is 'given' and 'with' are the same?  except   given is used in prefix, and with is used as postfix?

[14:14] <xinming> except these, What differences are there?

[14:22] <sena_kun> m: my $a; given $a { .say }

[14:22] <camelia> rakudo-moar c745d6b10: OUTPUT: «(Any)␤»

[14:22] <Altreus> I may be mistaken but I'm sure given will run even with undef

[14:22] <sena_kun> m: my $a; when $a { .say }

[14:22] <camelia> rakudo-moar c745d6b10: OUTPUT: «(Any)␤»

[14:23] <Altreus> my $a; .say with $a;

[14:23] <Altreus> er

[14:23] <moritz> m: with Any { say "foo" }

[14:23] <camelia> rakudo-moar c745d6b10: ( no output )

[14:23] <Altreus> m: my $a; .say with $a;

[14:23] <camelia> rakudo-moar c745d6b10: ( no output )

[14:23] <sena_kun> ugh

[14:23] <Altreus> m: my $a; .say given $a;

[14:23] <camelia> rakudo-moar c745d6b10: OUTPUT: «(Any)␤»

[14:23] <moritz> with = if defined

[14:23] <Altreus> xinming: I was right ^

[14:25] *** hankache left
[15:04] *** Tirifto left
[15:10] *** pmurias left
[15:11] <xinming> Got it, Thanks.

[15:11] <xinming> I forgot that.

[15:21] *** albertferrico joined
[15:22] <albertferrico> m: say 42

[15:22] <camelia> rakudo-moar c745d6b10: OUTPUT: «42␤»

[15:22] <albertferrico> m: say 42; say 13

[15:22] <camelia> rakudo-moar c745d6b10: OUTPUT: «42␤13␤»

[15:24] <albertferrico> m: say 42;␤say 13

[15:24] <camelia> rakudo-moar c745d6b10: OUTPUT: «42␤13␤»

[15:40] *** albertferrico left
[15:47] *** Doc_Holliwood joined
[15:55] <Doc_Holliwood> haha, accidentally put two identical `also does X` statements in one file and spent 20 minutes searching for the error 

[16:16] *** Altai-man_ joined
[16:17] *** Altai-man_ left
[16:18] *** Kaiepi left
[16:19] *** sena_kun left
[16:31] <lizmat> m: role A { method a() { "foo" } }; class B does A does A { }   # that's definitely a LTA error

[16:31] <camelia> rakudo-moar c745d6b10: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Method 'a' must be resolved by class B because it exists in multiple roles (A, A)␤at <tmp>:1␤»

[16:33] *** AlexDaniel joined
[16:33] *** AlexDaniel left
[16:33] *** AlexDaniel joined
[16:35] *** mensvaga left
[16:41] <AlexDaniel> HoboWithAShotgun: “I tend to always use double quotes, except for when i explicitly don't want interpolation” what about always using single quotes, except when you want interpolation? ;)

[16:41] <tellable6> AlexDaniel, I'll pass your message to HoboWithAShotgun

[16:59] <xinming> m: multi x (Bool :$flag? where * === True) { "flag".say; }; multi x () { "default".say }; x(:flag); x();

[16:59] <camelia> rakudo-moar c745d6b10: OUTPUT: «flag␤default␤»

[16:59] <xinming> In this example, What is the right way to write the first x to make it shorter?

[17:04] <xinming> I just realized that I should use Bool :$flag!  rather than  Bool :$flag?

[17:11] <AlexDaniel> m: multi x (Bool :$flag! where .so) { "flag".say; }; multi x(*%) { "default".say }; x(:flag); x(:!flag); x();

[17:11] <camelia> rakudo-moar c745d6b10: OUTPUT: «flag␤default␤default␤»

[17:53] *** wildtrees joined
[18:25] *** Kaiepi joined
[18:36] *** chloekek joined
[19:17] *** Doc_Holliwood left
[19:18] <brass> Is the Raku standard library going to include an HTTP client at some point?

[19:25] <AlexDaniel> brass: there are no plans for it. There are many users who use Rakudo Star, which does come with some HTTP stuff (but not Cro)

[19:26] <AlexDaniel> maybe there are compelling reasons to do it, but I don't think I've heard them yet :)

[19:26] <AlexDaniel> so for now just install a module

[19:27] <Grinnz> don't you need http to install a module (I say, ignorant of how it works)

[19:28] <brass> I figure most languages come with at least a barebones HTTP client since it seems to be the modern transport layer for everything :p 

[19:28] <brass> Do you know what the rakudo star http module is called?

[19:28] <Grinnz> (this is why HTTP::Tiny ended up core in perl)

[19:28] <AlexDaniel> brass: I think this is the list: https://github.com/rakudo/star/tree/master/modules

[19:29] <AlexDaniel> HTTP::UserAgent is what you're looking for, I think

[19:30] <brass> AlexDaniel: Oh perfect, thanks!

[19:30] <AlexDaniel> Grinnz: well, realistically you'll need a module manager too (like zef), so that one you'd need to install separately

[19:31] <Grinnz> right, i guess i wasn't aware zef isn't core

[19:31] <AlexDaniel> and while zef seems to find a way around it, even though it doesn't depend on anything

[19:31] <AlexDaniel> s/while//

[19:31] <Grinnz> well, cpanm in perl works similarly, it will use HTTP::Tiny or LWP if available but otherwise gets on fine with wget or curl

[19:32] <AlexDaniel> wget or curl is what zef does, I think

[19:32] <Grinnz> which is important since there's no core SSL support...

[19:32] <Grinnz> why does SSL have to be so difficult :)

[19:32] <AlexDaniel> mmm PowerShell::download on windows

[19:33] <AlexDaniel> and Pakku simply depends on a bunch of modules :) https://github.com/hythm7/Pakku/blob/26f32c78753710d9374de63452ab608bdbd10f38/META6.json#L8-L18

[19:35] <AlexDaniel> yeah, no idea how that's going to work, but hey it's in larva stage :)

[19:36] * Grinnz is glad to not be in the business of "modules which implement SSL support that require SSL support"

[19:38] <mspo> brass: I think it's expected that ~everything runs star

[19:38] <mspo> everyone I mean

[19:40] <brass> Ah

[19:43] *** ufobat_ joined
[19:46] *** ufobat left
[19:47] *** pmurias joined
[19:59] <El_Che> mspo: I pretty much disagree with that statement

[20:00] <El_Che> I think most windows people do

[20:13] *** stoned75 left
[20:21] *** MasterDuke left
[20:29] *** chloekek left
[20:32] *** Tirifto joined
[20:33] <Tirifto> Hello all!~

[20:34] <mspo> El_Che: k

[20:43] <Tirifto> Question: In a Raku script, is it possible to read and use subroutines stored in a separate Raku file/module, with the names of neither the file nor the subroutines within being known beforehand? I thought of making a script extensible by automatically reading other scripts from a given directory, and letting them (make it) do whatever. (I'm still getting familiar with Raku and don't know if this is a good way to achieve the desired effect

[20:43] <Tirifto>  at all, so let me know if I should just keep doing more research. :-))

[20:45] <Grinnz> i don't know about the raku part of it, but from a general programming perspective, i favor the "explicitly load these plugins which i created a defined api for them to hook into"

[20:47] <Grinnz> there are a few cases where you need to do the "everything available" approach, such as when the user requests a list of what's available, but otherwise it usually does more harm IMO

[20:49] <Tirifto> Grinnz: Ah, I was actually thinking of only passing them some data which either the program already has anyways, or the user has added specially for the ‘plugin’… well, the idea is for them to work with those, at the very least! :-) I guess that might count as an API? I don't think I ever worked with one, but now that you brought it up, it's probably the right keyword to search for!

[20:50] <Grinnz> an API is, abstractly, any interface you set up for the purpose of something using externally

[20:51] <Grinnz> it's much better than the "api" of having things dig into internals :P

[20:53] <Tirifto> Right! :P I'll have to see what's a decent way to go about that… and check my findings here because Raku making stuff neater seems to be a recurring pattern.

[21:06] *** chloekek joined
[21:38] *** chloekek left
[21:40] *** cpan-raku left
[21:41] *** cpan-raku joined
[21:41] *** cpan-raku left
[21:41] *** cpan-raku joined
[21:57] *** stoned75 joined
[22:12] *** ggoebel left
[22:17] *** Xliff joined
[22:20] *** stoned75 left
[22:27] *** Xliff left
[22:48] *** pmurias left
[23:08] *** Tirifto left
[23:19] *** wildtrees left
[23:29] *** ufobat_ left
[23:38] *** cognominal joined
[23:39] *** ufobat joined
