[00:00] *** pilne joined
[00:01] *** patrickz joined
[00:03] *** kshannon joined
[00:04] <kshannon> Is there a way to call a method of the parent class from inside a different method?

[00:05] *** patrickb left
[00:06] <kshannon> I'm writing a subclass of Proc that wraps both .shell() and .spawn() and I would *REALLY* like to be able to call Proc.spawn from my wrap implementation of .shell

[00:09] <kshannon> I'm hoping there's some kind of syntax for the perl5 `$self->SUPER::method(...)`

[00:10] <kshannon> I've read all about callwith etc,  but they only work with the currently executing method.

[00:12] <kshannon> I'm guessing it's going to involve some metamethods.

[00:18] <pilne> me again! as someone currently stuck in win10 if i want to give comma a whirl (and an environment i'm not nearly as comfy as in linux to dick around with things more complicated than"system path" in) will i be making my life noticably more difficult using the rakudo-pkg latest and greatest compiler

[00:18] <pilne> vs using rakudo star 2019.03?

[00:19] <elcaro> kshannon: I'm not an expert, so this is possibly the wrong way to go about it, but this seems to work...

[00:19] <elcaro> kshannon: method bar { self.^parents[0].^find_method('foo').(self, $args) }

[00:20] <elcaro> as an example of calling Parent.foo from Child.bar

[00:21] <kshannon> Thanks elcaro.  That will do for now.

[00:34] *** ZzZombo_ joined
[00:36] *** Kaiepi left
[00:36] *** ZzZombo left
[00:36] *** bbkr left
[00:36] *** AlexDaniel left
[00:37] *** ZzZombo_ is now known as ZzZombo

[00:37] *** bbkr joined
[00:37] *** AlexDaniel joined
[00:37] *** AlexDaniel left
[00:37] *** AlexDaniel joined
[00:37] *** pmurias left
[00:44] *** Kaiepi joined
[00:44] *** Kaiepi left
[00:45] *** Kaiepi joined
[00:58] *** wildtrees joined
[00:59] *** wildtrees left
[00:59] *** patrickb joined
[00:59] *** wildtrees joined
[01:00] *** elcaro left
[01:03] *** patrickz left
[01:04] *** leont left
[01:27] *** lucasb left
[01:55] *** pilne left
[01:58] *** patrickb left
[02:04] *** pilne joined
[02:16] *** wildtrees left
[02:20] <vrurg> kshannon: if you're still around, you're probably looking for class-qualified calls: self.Foo::method(...)

[02:21] <kshannon> I should have tried that :)

[02:21] <kshannon> I didn't see it anywhere in the docs :(

[02:21] <vrurg> kshannon: it's a bit hidden, right. Look in Operators section.

[02:21] <vrurg> method call ops

[02:22] <vrurg> http://docs.perl6.wakelift.de/language/operators#methodop_.::

[02:29] *** elcaro joined
[02:32] *** Kaiepi left
[02:32] *** Kaiepi joined
[02:33] <pilne> so, i went all-out, i did the rakudo-pkg on an 18.04 ubuntu wsl, and rakudo star with comma in win10 (:

[02:46] *** ZzZombo_ joined
[02:47] *** ZzZombo left
[02:47] *** ZzZombo_ is now known as ZzZombo

[03:05] <pilne> is there a good rule of thumb for "temp" vs "let"?

[03:29] <elcaro> pilne: see the docs here: https://docs.perl6.org/language/variables#The_temp_prefix

[03:29] <elcaro> essentially, `temp` always restores the old value at the end of a block... `let` only restores  the old value if the block exits unsuccessfully

[03:30] <elcaro> so it depends on your needs. that said, I've never used either *shrug*

[03:31] <elcaro> but maybe that's because I try to re-assign variables as rarely as possible

[04:31] *** reportable6 left
[04:31] *** bisectable6 left
[04:31] *** releasable6 left
[04:31] *** statisfiable6 left
[04:31] *** quotable6 left
[04:31] *** notable6 left
[04:31] *** nativecallable6 left
[04:31] *** bloatable6 left
[04:31] *** shareable6 left
[04:31] *** committable6 left
[04:31] *** sourceable6 left
[04:31] *** coverable6 left
[04:31] *** greppable6 left
[04:31] *** benchable6 left
[04:31] *** unicodable6 left
[04:31] *** squashable6 left
[04:31] *** releasable6 joined
[04:31] *** shareable6 joined
[04:31] *** notable6 joined
[04:31] *** nativecallable6 joined
[04:31] *** bisectable6 joined
[04:31] *** greppable6 joined
[04:31] *** quotable6 joined
[04:32] *** unicodable6 joined
[04:32] *** committable6 joined
[04:32] *** coverable6 joined
[04:32] *** sourceable6 joined
[04:33] *** bloatable6 joined
[04:33] *** squashable6 joined
[04:33] *** benchable6 joined
[04:33] *** reportable6 joined
[04:33] *** statisfiable6 joined
[05:23] *** xinming_ left
[05:26] *** xinming_ joined
[05:58] *** daxim left
[06:04] *** daxim joined
[06:26] *** jmerelo joined
[06:27] <jmerelo> releasable6: status

[06:27] <releasable6> jmerelo, Next release in ≈8 days and ≈12 hours. There are no known blockers. 0 out of 260 commits logged

[06:27] <tellable6> 2019-12-12T07:58:23Z #raku <Kaiepi> jmerelo, did you get my messages yesterday?

[06:27] <releasable6> jmerelo, Details: https://gist.github.com/6e99822241b8602de408585141150649

[06:27] <jmerelo> .tell Kaiepi I don't think so, sorry.

[06:27] <tellable6> jmerelo, I'll pass your message to Kaiepi

[06:29] *** sauvin joined
[06:50] *** wamba joined
[06:51] <jmerelo> .tell Kaiepi hope it's not you can't make it for the Advent Calendar today...

[06:51] <tellable6> jmerelo, I'll pass your message to Kaiepi

[06:53] <jmerelo> Today's advent calendar compares Raku and Rust, by tmtvl: https://rakuadventcalendar.wordpress.com/2019/12/13/day-4-a-little-rr/ Check it out!

[07:11] *** kshannon left
[07:34] *** rindolf joined
[07:35] *** jmerelo left
[07:54] *** wamba left
[08:39] *** abraxxa left
[08:39] *** abraxxa joined
[08:39] *** mid_home left
[08:43] *** wamba joined
[08:44] *** sena_kun joined
[08:54] *** sena_kun left
[09:07] *** chloekek joined
[09:10] *** sena_kun joined
[09:15] *** robertle joined
[09:21] *** sena_kun left
[09:25] *** ufobat_ joined
[09:28] *** ufobat left
[09:30] <chloekek> p6: my &slurp-file = *.IO R∘ { .slurp }

[09:30] <camelia> rakudo-moar 672c5d403: ( no output )

[09:30] <chloekek> p6: my &slurp-file = *.IO R∘ { .slurp }; say slurp-file(‘/dev/null’);

[09:30] <camelia> rakudo-moar 672c5d403: OUTPUT: «Type check failed in binding to parameter '<anon>'; expected Callable but got IO::Path (IO::Path.new("/dev/null", :SP...)␤  in block <unit> at <tmp> line 1␤␤»

[09:31] <chloekek> p6: my &slurp-file = { .slurp } ∘ *.IO; say slurp-file(‘/dev/null’);

[09:31] <camelia> rakudo-moar 672c5d403: OUTPUT: «␤»

[09:31] <chloekek> Why does it not work with reverse composition?

[09:31] <chloekek> I suspect it has to do with the use of Whatever?

[09:32] <chloekek> p6: my &slurp-file = { .IO } R∘ { .slurp }; say slurp-file(‘/dev/null’);

[09:32] <camelia> rakudo-moar 672c5d403: OUTPUT: «␤»

[09:33] <chloekek> Seems like it. I wonder whether this is due to ambiguity, because it’s not really clear what the scope of * should be in this case (and it seems to include the composition in the *-created function).

[09:40] *** vividsnow left
[09:40] *** vividsnow1 joined
[09:41] <chloekek> Perhaps operators should have a trait that tells Whatever whether to include them or not. Then for higher-order operators such as ∘ it won’t.

[09:42] *** vividsnow1 is now known as vividsnow

[09:44] *** cpan-raku left
[09:45] *** cpan-raku joined
[09:45] *** cpan-raku left
[09:45] *** cpan-raku joined
[09:50] *** vividsnow left
[09:50] *** vividsnow joined
[09:58] *** robertle left
[10:00] *** robertle joined
[10:00] *** vividsnow left
[10:01] *** vividsnow joined
[10:11] *** mscha joined
[10:11] *** robertle left
[10:11] <mscha> enum Direction (:LEFT(-1), :NEUTRAL(0), :RIGHT(1)); say Direction(2 <=> 3);

[10:11] <evalable6> mscha, rakudo-moar 5c00496a7: OUTPUT: «(Direction)␤»

[10:11] <mscha>  enum Direction (:LEFT(-1), :NEUTRAL(0), :RIGHT(1)); say Direction(+(2 <=> 3));

[10:11] <evalable6> mscha, rakudo-moar 5c00496a7: OUTPUT: «LEFT␤»

[10:12] <mscha> Annoying.

[10:12] <chloekek> ‘’ are neat because you can put them inside single quotes in Bash, for raku -pe :D

[10:13] *** robertle joined
[10:23] <sarna> mscha: file an issue, that's definitely LTA

[10:40] *** pilne left
[10:47] *** voegelas joined
[11:13] *** patrickb joined
[12:01] *** robertle left
[12:04] <Kaiepi> .

[12:04] <tellable6> 2019-12-11T17:40:53Z #raku <jmerelo> Kaiepi I'm around, or you can contact me via Telegram or email, double the initial j, and add gmail.com

[12:04] <tellable6> 2019-12-13T06:27:52Z #raku <jmerelo> Kaiepi I don't think so, sorry.

[12:04] <tellable6> 2019-12-13T06:51:58Z #raku <jmerelo> Kaiepi hope it's not you can't make it for the Advent Calendar today...

[12:04] <Kaiepi> .tell jmerelo, resent the draft through email

[12:04] <tellable6> Kaiepi, I'll pass your message to jmerelo

[12:06] *** robertle joined
[12:11] *** leont joined
[12:17] <Geth> ¦ advent: Kaiepi++ created pull request #44: Add draft for the 14th's article

[12:17] <Geth> ¦ advent: review: https://github.com/Raku/advent/pull/44

[12:20] *** mscha left
[12:28] *** lucasb joined
[12:33] *** abraxxa left
[12:34] *** abraxxa joined
[12:49] *** joule joined
[12:52] *** sena_kun joined
[12:56] *** robertle left
[12:58] *** abraxxa left
[13:00] *** robertle joined
[13:00] *** giulianideon joined
[13:03] *** joule left
[13:04] <Geth> ¦ advent: 27773ec1da | (Ben Davies)++ (committed using GitHub Web editor) | raku-advent-2019/drafts

[13:04] <Geth> ¦ advent: Add draft for the 14th's article

[13:04] <Geth> ¦ advent: review: https://github.com/Raku/advent/commit/27773ec1da

[13:04] <Geth> ¦ advent: 944a1bb907 | (Tom Browder)++ (committed using GitHub Web editor) | raku-advent-2019/drafts

[13:04] <Geth> ¦ advent: Merge pull request #44 from Kaiepi/patch-4

[13:04] <Geth> ¦ advent: 

[13:04] <Geth> ¦ advent: Add draft for the 14th's article

[13:04] <Geth> ¦ advent: review: https://github.com/Raku/advent/commit/944a1bb907

[13:07] <tbrowder> .ask Kaiepi yr draft advent looks pretty good to me. can you go  ahead and put it on the wordpress site and schedule it for 0001 UTC on 14 Dec?

[13:07] <tellable6> tbrowder, I'll pass your message to Kaiepi

[13:08] <tbrowder> that would take the heat off me as backup ;-D

[13:09] <Kaiepi> aight

[13:10] <tbrowder> and you can always update it as needed if necessary, even after it is published! (moritz++)

[13:13] *** giuliani__ joined
[13:14] *** pmurias joined
[13:15] *** giulianideon left
[13:21] <chloekek> .

[13:23] *** giuliani__ left
[13:51] *** mid_laptop joined
[13:55] <patrickb> m: my $k; my $x = 'asdf'; $x ~~ s[(sd)] = {$k = $0; "hey"}; say $x;

[13:55] <camelia> rakudo-moar 672c5d403: OUTPUT: «Block object coerced to string (please use .gist or .perl to do that)␤af␤  in block <unit> at <tmp> line 1␤»

[13:56] <patrickb> m: my $k; my $x = 'asdf'; $x ~~ s[(sd)] = &{$k = $0; "hey"}; say $x;

[13:56] <camelia> rakudo-moar 672c5d403: OUTPUT: «Block object coerced to string (please use .gist or .perl to do that)␤af␤  in block <unit> at <tmp> line 1␤»

[13:58] <patrickb> Beginner question: How do I make the above just call the block? Alternatively, is there a better way to do a substitution combined with saving the matches somewhere?

[14:00] *** RobRaku joined
[14:00] <El_Che> patrickb: got your message, I have no problem renaming the package. Just very busy atm (helping daughter with her exams)

[14:01] <patrickb> El_Che: OK. Then I'll persue that path. Thanks for the feedback!

[14:13] *** RobRaku left
[14:13] *** RobRaku joined
[14:14] *** RobRaku left
[14:14] *** RobRaku joined
[14:15] *** RobRaku left
[14:15] *** RobRaku joined
[14:15] *** RobRaku left
[14:16] *** RobRaku joined
[14:16] *** RobRaku left
[14:17] *** RobRaku joined
[14:17] *** RobRaku left
[14:17] *** RobRaku joined
[14:18] *** RobRaku left
[14:20] *** mid_laptop left
[14:21] *** wamba left
[14:21] *** Kaiepi left
[14:21] *** sauvin left
[14:21] *** Kaiepi joined
[14:22] <jnthn> m: my $k; my $x = 'asdf'; $x ~~ s[(sd)] = ($k = $0; "hey"); say $x;

[14:22] <camelia> rakudo-moar 672c5d403: OUTPUT: «asd heyf␤»

[14:22] <jnthn> oh, right

[14:22] <jnthn> m: my $k; my $x = 'asdf'; $x ~~ s[(sd)] = { $k = $0; "hey" }(); say $x;

[14:22] <camelia> rakudo-moar 672c5d403: OUTPUT: «aheyf␤»

[14:23] *** TreyHarris left
[14:23] <jnthn> patrickb: ^^

[14:24] <patrickb> jnthn: Thanks! :-D

[14:24] *** Kaiepi left
[14:25] *** Kaiepi joined
[14:27] *** pmurias left
[14:27] *** pmurias joined
[14:32] *** mid_laptop joined
[14:34] *** leont left
[14:34] *** sauvin joined
[14:36] *** TreyHarris joined
[14:37] *** socomm joined
[14:37] <socomm> Getting following error when running perl6 on fedora "Unhandled exception: While looking for 'ModuleLoader.moarvm': no such file or directory at <unknown>:1  (/usr/lib64/perl6/runtime/perl6.moarvm:<dependencies+deserialize>)"

[14:40] *** patrickb left
[14:43] *** guifa2 joined
[14:44] <moritz> socomm: do you get that error even if you run an empty script? like perl6 -e ''

[14:45] <socomm> moritz, yes.

[14:45] <guifa2> Hrm, somewhere between the md-to-advent and wordpress's publishing feature some of my stuff gets mangled for the advent post.  

[14:46] <guifa2> Also the code block text size is way too large, any quick fix?  I noticed other posts have smaller code text size

[14:47] *** bbkr left
[14:48] <moritz> socomm: then your installation is hosed

[14:49] <moritz> did you install through the package manager?

[14:50] <socomm> Yep.

[14:52] <moritz> then you should report a bug to whoever supplied the packages

[14:54] *** sena_kun left
[14:55] <socomm> thx

[14:55] *** socomm left
[15:00] *** sauvin left
[15:02] <tbrowder> .tell jmerelo day 14 is on wp site as draft looking good. i'm traveling next 3 days and ceasing full-speed work on backup, looking to flesh it out more as backup for day 20. if needed earlier let me know asap.

[15:03] <tellable6> tbrowder, I'll pass your message to jmerelo

[15:07] *** sena_kun joined
[15:13] *** sauvin joined
[15:15] *** wamba joined
[15:17] <guifa2> tbrowder: what did you do fix the text size in code blocks?

[15:19] <tbrowder> guifa2: i did nothing explicit. jmerelo has been tweaking css in the theme. i wrote my article in raw html without psssing it through a gist.

[15:20] <guifa2> ah okay!  Sounds good.  I'll leave it for him to tweak then.

[15:20] <[Coke]> .

[15:20] <tbrowder> for the code blocks is wrapped them in <pre><code> blah blah</code></pre> tags

[15:21] <tbrowder> with the code in lines and spacing as desired

[15:22] <tbrowder> it looks fairly good, but time for jmerelo to polish theme has been very limited.

[15:23] <tbrowder> and i am NOT going to jump in the middle of his plans.

[15:28] *** robertle left
[15:40] <guifa2> tbrowder++

[15:41] * [Coke] was able to compile rakudo on moarvm on his work windows machine after some time of not trying.

[15:50] *** wamba left
[15:54] *** unclechu left
[15:56] <Geth> ¦ doc: 788210ec83 | Coke++ | doc/Language/faq.pod6

[15:56] <Geth> ¦ doc: whitespace

[15:56] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/788210ec83

[15:56] <Geth> ¦ doc: e29cabde75 | Coke++ | doc/Type/Range.pod6

[15:56] <Geth> ¦ doc: remove duplicate word

[15:56] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/e29cabde75

[15:56] <Geth> ¦ doc: 92b753488e | Coke++ | 2 files

[15:56] <Geth> ¦ doc: new words/typos

[15:56] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/92b753488e

[16:11] *** pmurias left
[16:12] <tbrowder> .seen tony-o

[16:12] <tellable6> tbrowder, I saw tony-o 2019-12-09T18:38:01Z in #raku: <tony-o> tbrowder: https://travis-ci.org/rakudo/rakudo/jobs/622786489#L1069 <- check it out

[16:18] <tbrowder> .ask tony-o using xoos with sqlite, as i understand it, i need to create my tables before xoos can use them. and then do i have to create the yaml files then, or are they only needed for complex queries based on column characteristics in the yaml file?

[16:18] <tellable6> tbrowder, I'll pass your message to tony-o

[16:20] *** jmerelo joined
[16:35] *** guifa2 left
[16:53] *** ufobat_ left
[16:55] *** sena_kun left
[17:07] *** chloekek left
[17:08] *** sena_kun joined
[17:13] *** benjif left
[17:44] *** AlexDani` joined
[17:46] *** AlexDaniel left
[17:50] *** jmerelo left
[17:51] *** wamba joined
[18:22] *** wamba left
[18:47] *** mid_laptop left
[18:54] *** sena_kun left
[18:59] *** wildtrees joined
[19:09] *** sena_kun joined
[19:27] *** sauvin left
[19:28] *** TreyHarris left
[19:43] *** pilne joined
[19:45] *** guifa2 joined
[19:48] *** TreyHarris joined
[19:53] *** guifa2 left
[20:16] *** chloekek joined
[20:39] <cpan-raku> New module released to CPAN! Kind::Subset::Parametric (0.0.1) by 03KAIEPI

[20:54] *** sena_kun left
[20:56] *** mensvaga left
[21:08] *** sena_kun joined
[21:13] *** rypervenche left
[21:16] *** rypervenche joined
[21:25] <cpan-raku> New module released to CPAN! Gnome::GObject (0.15.6) by 03MARTIMM

[21:32] *** guifa2 joined
[21:32] *** kensanata joined
[21:38] *** chloekek left
[21:45] *** QuantumPerl joined
[21:46] <QuantumPerl> Hello, world! :)

[21:46] <lizmat> QuantumPerl o/

[21:46] <QuantumPerl> First time on an irc channel, but I am very enthusiastic to learn about Raku and the community

[21:46] <sena_kun> QuantumPerl: welcome

[21:46] <tellable6> 2019-12-13T00:45:34Z #raku-dev <AlexDaniel> sena_kun: interesting release situation: https://colabti.org/irclogger/irclogger_log/raku-dev?date=2019-12-13#l21

[21:46] <tellable6> 2019-12-13T00:46:11Z #raku-dev <AlexDaniel> sena_kun: this can never happen on nqp/rakudo side because the sakefile makes sure it can push everything and then it pushes

[21:46] <tellable6> 2019-12-13T00:47:32Z #raku-dev <AlexDaniel> sena_kun: so it's not a big problem, just something to keep in mind maybe

[21:46] <lizmat> then you've come to the right place, although Friday night may not be the busiest time of the week

[21:47] <QuantumPerl> well, I am planning to visit as often as I can

[21:48] <QuantumPerl> I guess this is a good time to get started with everything that has been going on

[21:49] <QuantumPerl> was wondering if the project which aimed at "translating" Perl 5 programs to Raku ones has had any activity/contribution

[21:50] <QuantumPerl> I saw the idea proposed on the perl website, found it pretty interesting, so I as curious

[21:50] <QuantumPerl> was*

[21:50] <guifa2> I don't think there's been much activity on being able to put in P5 code and spit out Raku, but there is still an inline perl5 module that you can import fairly readily

[21:51] * sena_kun is curious about a regex translation engine, but doesn't know enough perl to estimate

[21:52] *** cpan-raku left
[21:52] <guifa2> sena_kun: you mean one that would take in a P5 regex and convert to a Raku one?  Or would use regex to convert the code?

[21:53] <sena_kun> guifa2: p5 regex into raku

[21:54] <guifa2> That shouldn't be toooooo hard to do.  That could honestly make a pretty nice advent post (creating a Raku grammar to parse a P5 regex and then reconstruct using actions)

[21:54] <sena_kun> yeah

[21:54] <sena_kun> I have one for JS regexes

[21:54] <sena_kun> https://github.com/edumentab/p6-ecma262regex

[21:54] <sena_kun> and I think that if not 100% can be covered, but 99% would be a great help for everyone, as pcre is everywhere

[21:55] <QuantumPerl> that is pretty neat, it would make for a good start for a more general project aiming at spiting p5 into raku

[21:55] <sena_kun> one thing that bothers me is that ecma has a nice and clean grammar defined... but I haven't seen such a thing for perl regexes. OTOH I suspect I just did not search long enough

[21:57] *** pmurias joined
[21:58] *** cpan-raku joined
[21:58] *** cpan-raku left
[21:58] *** cpan-raku joined
[21:58] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.21.0) by 03MARTIMM

[21:59] *** mid_laptop joined
[21:59] *** mid_laptop left
[22:01] <[Coke]> perl or raku ?

[22:03] <brass> Is there any way to change directories in raku so that when the program exits the shell is still in that directory?

[22:03] <Juerd> brass: No program can do that

[22:04] <brass> I didn't think so, just checking though

[22:04] <Juerd> brass: You can't change the working directory of the parent process, but you can start a new shell. However, when you exit that (and your process if it's still running), you'll be back in the old working directory.

[22:05] *** chloekek joined
[22:05] <Juerd> This is independent of whatever programming language you're using

[22:09] <lizmat> also note that chdir does nothing else than changing $*CWD

[22:10] <lizmat> so that this is all lexically constrained, and doesn't cause problems when different threads want to have different working directories

[22:12] <cpan-raku> New module released to CPAN! LibXML (0.2.6) by 03WARRINGD

[22:19] *** pmurias left
[22:32] *** kensanata left
[22:36] *** pmurias joined
[22:45] *** rindolf left
[22:54] *** sena_kun left
[23:01] <guifa2> Raku chan folks get a preview of my new module that will be broken down in the Dec 15th advent day post

[23:01] <guifa2> https://github.com/alabamenhu/RegexFuzzyToken

[23:10] *** guifa2 left
[23:10] *** sena_kun joined
[23:10] *** guifa2 joined
[23:11] *** pmurias left
[23:11] *** pmurias joined
[23:12] *** wamba joined
[23:34] *** sena_kun left
[23:39] *** QuantumPerl left
[23:47] *** chloekek left
[23:48] <Geth> ¦ ecosystem: alabamenhu++ created pull request #475: Added Regex::FuzzyToken

[23:48] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/475

