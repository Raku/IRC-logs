[00:08] *** patrickz joined
[00:10] *** patrickz left
[00:12] *** patrickb left
[00:16] <Xliff> m: my @a = <a b c>; .say while @choices

[00:16] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/T7_zTizwtL‚ê§Variable '@choices' is not declared‚ê§at /tmp/T7_zTizwtL:1‚ê§------> 03my @a = <a b c>; .say while 08‚èè04@choices‚ê§¬ª

[00:16] <Xliff> m: my @a = <a b c>; .say while @a

[00:17] <Xliff> m: my @a = <a b c>; while @a { .say }

[00:17] <Xliff> m: my @a = <a b c>; while @a { @a.pop.say }

[00:17] <Xliff> Oops.

[00:18] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(signal SIGHUP) (Any)‚ê§(Any)‚ê§(Any)‚ê§(Any)‚ê§(Any)‚ê§(‚Ä¶¬ª

[00:20] <Xliff> m: my $a = "test"; say $a.substr(0);

[00:20] <Xliff> I think I killed eet.

[00:21] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(signal SIGHUP) (Any)‚ê§(Any)‚ê§(Any)‚ê§(Any)‚ê§(Any)‚ê§(‚Ä¶¬ª

[00:21] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´c‚ê§b‚ê§a‚ê§¬ª

[00:21] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´test‚ê§¬ª

[00:22] <Xliff> m: my @a = <a b c>; while @a { @a.unshift.say }

[00:22] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(signal SIGHUP) [a b c]‚ê§[a b c]‚ê§[a b c]‚ê§[a b c]‚Ä¶¬ª

[00:22] <evalable6> Xliff, Full output: https://gist.github.com/4a5dbf5bd487ce95dfb36d43cafb6808

[00:23] <Xliff> m: my @a = <a b c>; while @a { @a.shift.say }

[00:23] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´a‚ê§b‚ê§c‚ê§¬ª

[00:50] *** mid_home joined
[00:54] *** pmurias left
[01:03] *** lucasb left
[01:09] *** wildtrees left
[01:20] <elcaro> If I upload a module to CPAN (Perl6 dir), does that mean I _don't_ need to add it to the ecosystem list? Will that prevent my modules from appearing twice on the modules page?

[01:36] <Xliff> m: my $a = 1 +< 31; $a.say;

[01:36] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´2147483648‚ê§¬ª

[01:37] <Xliff> m: my $a = 1 +< 31; $a.say; my $buf = Buf.allocate(4); $buf.write-uint32(0, $a); say $buf.read-int32(0);

[01:37] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´2147483648‚ê§-2147483648‚ê§¬ª

[01:42] <cpan-raku> New module released to CPAN! Point (1.0.1) by 03ELCARO

[02:05] *** hkdtam left
[02:13] <cpan-raku> New module released to CPAN! Point (1.0.2) by 03ELCARO

[02:21] <evalable6> Xliff, Full output: https://gist.github.com/578c5c0c6fff4a14d617391b76338f45

[02:32] *** Doc_Holliwould left
[02:42] <evalable6> Xliff, Full output: https://gist.github.com/a0f90cf651e0a33abd59ce9b9bc703a8

[03:42] *** quotable6 left
[03:42] *** benchable6 left
[03:42] *** bloatable6 left
[03:42] *** sourceable6 left
[03:42] *** statisfiable6 left
[03:42] *** greppable6 left
[03:42] *** shareable6 left
[03:42] *** releasable6 left
[03:42] *** nativecallable6 left
[03:42] *** coverable6 left
[03:42] *** notable6 left
[03:42] *** committable6 left
[03:42] *** unicodable6 left
[03:42] *** reportable6 left
[03:42] *** squashable6 left
[03:42] *** bisectable6 left
[03:42] *** coverable6 joined
[03:42] *** releasable6 joined
[03:42] *** benchable6 joined
[03:42] *** notable6 joined
[03:42] *** reportable6 joined
[03:42] *** bisectable6 joined
[03:43] *** sourceable6 joined
[03:43] *** squashable6 joined
[03:44] *** committable6 joined
[03:44] *** quotable6 joined
[03:44] *** greppable6 joined
[03:44] *** nativecallable6 joined
[03:44] *** statisfiable6 joined
[03:45] *** bloatable6 joined
[03:45] *** shareable6 joined
[03:45] *** unicodable6 joined
[04:45] *** releasable6 left
[04:45] *** bisectable6 left
[04:45] *** sourceable6 left
[04:45] *** shareable6 left
[04:45] *** coverable6 left
[04:45] *** bloatable6 left
[04:45] *** benchable6 left
[04:45] *** unicodable6 left
[04:45] *** evalable6 left
[04:45] *** nativecallable6 left
[04:45] *** reportable6 left
[04:45] *** tellable6 left
[04:45] *** committable6 left
[04:45] *** squashable6 left
[04:45] *** notable6 left
[04:45] *** greppable6 left
[04:45] *** quotable6 left
[04:45] *** statisfiable6 left
[04:46] *** releasable6 joined
[04:46] *** benchable6 joined
[04:46] *** coverable6 joined
[04:46] *** shareable6 joined
[04:46] *** tellable6 joined
[04:46] *** nativecallable6 joined
[04:46] *** evalable6 joined
[04:46] *** unicodable6 joined
[04:46] *** quotable6 joined
[04:47] *** greppable6 joined
[04:47] *** sourceable6 joined
[04:47] *** bloatable6 joined
[04:47] *** notable6 joined
[04:47] *** reportable6 joined
[04:47] *** squashable6 joined
[04:47] *** bisectable6 joined
[04:48] *** statisfiable6 joined
[04:48] *** committable6 joined
[04:51] *** cpan-raku left
[04:52] *** cpan-raku joined
[04:52] *** cpan-raku left
[04:52] *** cpan-raku joined
[05:44] *** Kaiepi left
[05:44] *** Kaiepi joined
[05:54] *** RobRaku joined
[05:55] *** rindolf left
[06:05] *** rindolf joined
[06:35] *** RobRaku left
[06:36] *** RobRaku joined
[06:39] *** Kaiepi left
[06:44] *** wamba joined
[06:57] *** stoned75 joined
[07:20] *** xinming_ left
[07:22] *** xinming_ joined
[07:38] *** jmerelo joined
[07:40] *** stoned75 left
[08:04] *** wamba left
[08:12] <Xliff> m: class T { has @!a = <a b c d>; method a { @!a.List }; }; T.a[1].say

[08:12] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) Cannot look up attributes in a T type object‚ê§  in method a at /tmp/xUYFkjNASS line 1‚ê§  in block <unit> at /tmp/xUYFkjNASS line 1‚ê§‚ê§¬ª

[08:12] <Xliff> m: class T { has @!a = <a b c d>; method a { @!a.List }; }; T.new.a[1].say

[08:12] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´b‚ê§¬ª

[08:12] <Xliff> m: class T { has @!a = <a b c d>; method a { @!a.List }; }; T.new.a[1] = 2

[08:12] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) Cannot modify an immutable List ((a b c d))‚ê§  in block <unit> at /tmp/bcOWc8RPDc line 1‚ê§‚ê§¬ª

[08:14] *** abraxxa left
[08:14] *** abraxxa joined
[08:34] *** xinming joined
[08:38] *** xinming_ left
[08:38] *** benjif left
[08:43] *** wamba joined
[08:54] <jmerelo> New NativeCall question in StackOverflow: https://stackoverflow.com/q/59209789/891440

[08:58] *** scimon joined
[09:07] *** llfourn joined
[09:14] *** llfourn left
[09:14] *** llfourn joined
[09:18] *** Manifest0 left
[09:19] <El_Che> Does the latest rakudo release and zef understand module names with the rakumod extension

[09:19] <El_Che> ?

[09:22] <scimon> Doesn't look like it. I just did a test locally and couldn't get it to work.

[09:22] <El_Che> mm

[09:28] *** wamba left
[09:40] <ZzZombo> Is there an equivalent of Lua `setfenv`?

[09:48] <jmerelo> ZzZombo: being what?

[09:48] <scimon> Why would you need it? I make sense in Lua where everything is global but I;m

[09:48] <scimon> I'm not sure I see the point in Raku

[09:50] <ZzZombo> To `eval` a piece of code with dynamically determined scope.

[09:51] *** llfourn left
[09:52] *** llfourn joined
[09:53] *** llfourn left
[09:53] *** llfourn joined
[09:54] <jmerelo> ZzZombo: when you eval in Raku you so it in the current scope. You can add a new, internal one by wrapping it in {}

[09:54] *** llfourn left
[09:54] *** llfourn joined
[09:55] *** llfourn left
[09:56] *** Doc_Holliwould joined
[09:56] *** llfourn joined
[09:56] *** llfourn left
[09:57] <El_Che> Can I make a dynamic variable global? E.g.: "my %*SUB-MAIN-OPTS = :named-anywere" set in a module would be picked up by the script using the module

[09:57] <El_Che> Had a look at EXPORT and our and don't seem to do that

[09:57] *** llfourn joined
[09:59] *** wamba joined
[10:00] *** sena_kun joined
[10:02] *** llfourn left
[10:02] *** llfourn joined
[10:03] *** veesh_ joined
[10:05] *** veesh left
[10:06] *** veesh_ is now known as veesh

[10:06] *** llfourn left
[10:06] *** llfourn joined
[10:08] <El_Che> monky typing?

[10:23] *** wamba left
[10:25] <El_Che> https://stackoverflow.com/questions/53544352/how-to-export-sub-main-opts?noredirect=1&lq=1

[10:25] <El_Che> mm

[10:26] <El_Che> FH, it works

[10:26] <El_Che> \o/

[10:26] <El_Che> thx stackoverflow for raku :)

[10:26] *** SysPete joined
[10:27] <El_Che> and lizmat who answered the question :)

[10:27] <El_Che> I need to login to give her gold :)

[10:28] <El_Che> Oh, and I have enough reputation to edit the tag and add raku!

[10:35] <scimon> Considering my post in the Raku Advent calender I've deleted my answer to that question... ;)

[10:35] <Geth> ¬¶ doc: 39c5858686 | (JJ Merelo)++ | doc/Language/nativecall.pod6

[10:35] <Geth> ¬¶ doc: Adds clarification about versioned shared libraries

[10:35] <Geth> ¬¶ doc: 

[10:35] <Geth> ¬¶ doc: Helps #3094

[10:35] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/39c5858686

[10:36] <jmerelo> El_Che: I've been deleting and swapping tags in StackOverflow for some time now. lizmat also, AFAIK, maybe some other

[10:36] <jmerelo> El_Che: but there's still a long way to go if we want to define a synonym. We still need to change ~500 posts if we want to do that. Any help is welcome.

[10:40] <El_Che> jmerelo: I'll try to help when possible now that I know I can

[10:40] <El_Che> (last time I checked I couldn't)

[10:41] <jmerelo> El_Che: karma has been recomputed and now we all get a lot of more of it

[10:42] <El_Che> I looks like it

[10:43] <El_Che> no api to do it in batch I imagine?

[10:43] <jmerelo> El_Che: APIs in StackOverflow don't have write permission. You need to create an "application", and ask for permission. And get burned in the process.

[10:44] <El_Che> it sounds painful

[10:45] <jmerelo> I think the question was eventually deleted. I can't find it now.

[10:47] <El_Che> is there a negative tag lookup?

[10:47] <El_Che> like [perl6] (![raku])

[10:47] <jmerelo> https://stackoverflow.com/questions/tagged/perl6+-raku

[10:50] <scimon> Just did a bunch... Should probably get on with some work now ;)

[10:50] <jmerelo> scimon++

[10:51] *** BlackChaosNL[m] joined
[10:52] *** sena_kun left
[11:03] *** MasterDuke left
[11:07] *** sena_kun joined
[11:11] *** jmerelo left
[11:18] <ZzZombo> Is it possible to make methods automatically bound to an instance of object, so it's possible to invoke the method w/o an explicit `self`?

[11:19] <ZzZombo> That is, like `bar()` instead of `foo.bar()`?

[11:20] <Xliff> m: 1¬ª.(Int, Num)

[11:20] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) No such method 'CALL-ME' for invocant of type 'Int'‚ê§  in block <unit> at /tmp/CVN7pHp1WR line 1‚ê§‚ê§¬ª

[11:20] <Xliff> m: 1¬ª.('Int', 'Num')()

[11:20] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) ===SORRY!===‚ê§Cannot find method 'name' on object of type QAST::Want‚ê§¬ª

[11:20] <Xliff> m: 1¬ª.&('Int', 'Num')()

[11:20] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) Invocant of method 'CALL-ME' must be a type object of type 'List', not an object instance of type 'List'.  Did you forget a 'multi'?‚ê§  in block <unit> at /tmp/QoWerzCb8k line 1‚ê§‚ê§¬ª

[11:20] <Xliff> m: (1)¬ª.&('Int', 'Num')()

[11:20] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) Invocant of method 'CALL-ME' must be a type object of type 'List', not an object instance of type 'List'.  Did you forget a 'multi'?‚ê§  in block <unit> at /tmp/0rpkiq6KXn line 1‚ê§‚ê§¬ª

[11:20] *** wamba joined
[11:21] <Xliff> m: (1, 2)¬ª.&('Int', 'Num')()

[11:21] <evalable6> Xliff, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) Invocant of method 'CALL-ME' must be a type object of type 'List', not an object instance of type 'List'.  Did you forget a 'multi'?‚ê§  in block <unit> at /tmp/fxhjr1uQqt line 1‚ê§‚ê§¬ª

[11:29] <sena_kun> m: (1, 2) z (*.Int, *.Num)

[11:29] <evalable6> sena_kun, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Er‚Ä¶¬ª

[11:29] <evalable6> sena_kun, Full output: https://gist.github.com/c9bc5c6e3ee05fda5287c62c49577f40

[11:30] <sena_kun> m: say (1, 2) Z (*.Int, *.Num )

[11:30] <evalable6> sena_kun, rakudo-moar 382d18bda: OUTPUT: ¬´((1 { ... }) (2 { ... }))‚ê§¬ª

[11:30] <sena_kun> hmm, ok

[11:31] * sena_kun runs away to do lots of Comma bugfixes

[11:46] <SmokeMachine> m: sub infix:<bla>($a, &b) { b($a) }; say (1, 2) Z[bla] (*.Int, *.Num ) # :P

[11:46] <evalable6> SmokeMachine, rakudo-moar 382d18bda: OUTPUT: ¬´(1 2)‚ê§¬ª

[11:50] <SmokeMachine> m: say (1, 2) Z[&infix:<.>] (*.Int, *.Num ) # LTA error?

[11:50] <evalable6> SmokeMachine, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/_CTFnLJqA7‚ê§Malformed postfix call‚ê§at /tmp/_CTFnLJqA7:1‚ê§------> 03.08‚èè04<EOL>‚ê§¬ª

[11:51] <SmokeMachine> m: say 1.&(*.Int)

[11:51] <evalable6> SmokeMachine, rakudo-moar 382d18bda: OUTPUT: ¬´1‚ê§¬ª

[11:54] <SmokeMachine> M: say infix:<.>(1, *.Int)

[11:54] <SmokeMachine> m: say infix:<.>(1, *.Int)

[11:54] <evalable6> SmokeMachine, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/IsJ5vkAcqM‚ê§Malformed postfix call‚ê§at /tmp/IsJ5vkAcqM:1‚ê§------> 03.08‚èè04<EOL>‚ê§¬ª

[11:56] <sena_kun> SmokeMachine: are you sure dot is an operator and not a language builtin?

[11:56] <sena_kun> I mean, the very deep special builtin compared to ops like `+`

[11:56] <lizmat> m: dd &infix:<.>

[11:56] <evalable6> lizmat, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/_N80QCTshq‚ê§Malformed postfix call‚ê§at /tmp/_N80QCTshq:1‚ê§------> 03.08‚èè04<EOL>‚ê§¬ª

[11:56] <SmokeMachine> sena_kun: if I‚Äôm not wrong it‚Äôs both...

[11:56] <lizmat> m: dd &infix:<*>

[11:56] <evalable6> lizmat, rakudo-moar 382d18bda: OUTPUT: ¬´Sub+{is-pure}+{Precedence} infix:<*> = proto sub infix:<*> ($?, $?, *%) {*}‚ê§¬ª

[11:56] <lizmat> m: dd &infix:<.>

[11:56] <evalable6> lizmat, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/rUiPkJTRa3‚ê§Malformed postfix call‚ê§at /tmp/rUiPkJTRa3:1‚ê§------> 03.08‚èè04<EOL>‚ê§¬ª

[11:56] <lizmat> hmmm

[11:58] <SmokeMachine> I remember of reading that on code long time ago‚Ä¶ but I could misread that...

[11:59] *** benjif joined
[11:59] <lizmat> yeah, must be a grammar construct

[11:59] <lizmat> just like && and || btw

[12:01] <sena_kun> m: say (.Int, .Num) for 1, 2;

[12:01] <evalable6> sena_kun, rakudo-moar 382d18bda: OUTPUT: ¬´(1 1)‚ê§(2 2)‚ê§¬ª

[12:01] <sena_kun> is a simple and clean and working way to do what Xliff tried, no?

[12:02] <SmokeMachine> ```There is now an infix:<.> operator that does method calls with slightly looser precedence than the postfix unary method call.```

[12:02] <SmokeMachine> https://github.com/rakudo/rakudo/blob/master/docs/announce/2015.10.md

[12:08] <SmokeMachine> Did I miss understood that or was that removed?

[12:13] *** joule joined
[12:21] *** llfourn left
[12:22] *** wamba left
[12:26] <AlexDaniel> SmokeMachine: why do you think it is removed?

[12:26] <AlexDaniel> m: 42 . say

[12:26] <evalable6> AlexDaniel, rakudo-moar 382d18bda: OUTPUT: ¬´42‚ê§¬ª

[12:32] *** lucasb joined
[12:35] <SmokeMachine> AlexDaniel: but why can‚Äôt I use that the way I was trying to use that?

[12:36] <AlexDaniel> m: say &infix:<.>(1, *.Int)

[12:36] <evalable6> AlexDaniel, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/4X6NI8eAFe‚ê§Malformed postfix call‚ê§at /tmp/4X6NI8eAFe:1‚ê§------> 03.08‚èè04<EOL>‚ê§¬ª

[12:36] <SmokeMachine> m: say &infix:<.>

[12:36] <evalable6> SmokeMachine, rakudo-moar 382d18bda: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/jY41nitTX9‚ê§Malformed postfix call‚ê§at /tmp/jY41nitTX9:1‚ê§------> 03.08‚èè04<EOL>‚ê§¬ª

[12:41] <AlexDaniel> yeah, interesting, it doesn't work this way for .

[12:51] *** llfourn joined
[12:52] *** sena_kun left
[12:56] *** llfourn left
[12:59] *** abraxxa left
[13:02] <SmokeMachine> AlexDaniel: and shouldn‚Äôt? if it shouldn‚Äôt, maybe the error message should explain it a little better...

[13:04] *** llfourn joined
[13:04] <SmokeMachine> sourceable6: 1 . is-prime

[13:04] <sourceable6> SmokeMachine, No idea, boss. Can you give me a Code object?

[13:05] <SmokeMachine> sourceable6: &[.]

[13:05] <sourceable6> SmokeMachine, No idea, boss. Can you give me a Code object? Output: 04===SORRY!04=== Error while compiling /tmp/x_pq7o0jNK‚ê§Malformed postfix call‚ê§at /tmp/x_pq7o0jNK:1‚ê§------> 03&[.08‚èè04]‚ê§

[13:05] <AlexDaniel> bisect: old=2015.01 42 .say

[13:05] <bisectable6> AlexDaniel, Bisecting by exit code (old=2015.01 new=382d18b). Old exit code: 1

[13:06] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/6d11563ebb64f275ee5bfd98e4736f5f

[13:06] <bisectable6> AlexDaniel, (2015-09-26) https://github.com/rakudo/rakudo/commit/cb25b2f475f31335d77d018474482aceec2c74de

[13:06] <AlexDaniel> SmokeMachine: ‚Üë

[13:07] *** sena_kun joined
[13:08] *** llfourn left
[13:14] *** llfourn joined
[13:15] *** wamba joined
[13:20] *** llfourn left
[13:21] *** llfourn joined
[13:22] *** benjif left
[13:25] *** llfourn left
[13:25] *** llfourn joined
[13:26] *** wamba left
[13:28] *** llfourn` joined
[13:32] *** llfourn left
[13:34] *** llfourn` left
[13:34] *** llfourn` joined
[13:39] *** llfourn` left
[13:46] *** llfourn` joined
[13:46] *** eater joined
[13:51] *** llfourn` left
[13:53] *** llfourn` joined
[13:54] *** nosqrt joined
[13:55] *** benjif1 joined
[14:00] *** llfourn` left
[14:03] *** llfourn` joined
[14:08] *** llfourn` left
[14:08] *** llfourn` joined
[14:12] *** llfourn` left
[14:20] *** llfourn` joined
[14:21] *** nosqrt left
[14:25] *** llfourn` left
[14:27] *** benjif1 left
[14:31] *** llfourn` joined
[14:37] *** llfourn` left
[14:39] *** llfourn` joined
[14:42] *** llfourn` left
[14:42] *** llfourn` joined
[14:45] *** chloekek joined
[14:45] <chloekek> p6: sub prefix:</>($x) { 1 / $x }; say /2;

[14:45] <evalable6> chloekek, rakudo-moar 382d18bda: OUTPUT: ¬´0.5‚ê§¬ª

[14:47] *** llfourn` left
[14:49] *** llfourn` joined
[14:53] *** sena_kun left
[14:54] *** llfourn` left
[14:55] *** llfourn` joined
[14:56] *** vrurg_ left
[14:57] *** SysPete left
[15:00] *** llfourn` left
[15:01] *** vrurg joined
[15:03] *** llfourn` joined
[15:07] *** sena_kun joined
[15:08] *** llfourn` left
[15:11] *** Kaiepi joined
[15:13] *** Kaiepi left
[15:13] *** Kaiepi joined
[15:14] *** llfourn` joined
[15:16] <Kaiepi> .

[15:16] <tellable6> 2019-12-05T15:55:56Z #raku <jmerelo> Kaiepi please send me in some effective way your email address or ID in wordpress.com for the Advent calendar articles.

[15:20] *** llfourn` left
[15:20] *** llfourn` joined
[15:28] *** llfourn` left
[15:28] *** llfourn` joined
[15:29] *** wamba joined
[15:32] *** llfourn` left
[15:32] *** llfourn` joined
[15:36] *** llfourn` left
[15:37] *** llfourn` joined
[15:41] *** llfourn` left
[15:48] *** llfourn` joined
[15:53] *** llfourn` left
[15:55] *** llfourn` joined
[16:00] *** llfourn` left
[16:03] <AlexDaniel> squashable6: status

[16:03] <squashable6> AlexDaniel, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà19 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:03] <AlexDaniel> oh it started

[16:03] *** llfourn` joined
[16:06] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúRaku FAQ Squashathon Guide‚Äù: https://github.com/Raku/doc/issues/3109#issuecomment-562633496

[16:06] <squashable6> üçïüçïüçï  First contribution by AlexDaniel++! ‚ô•

[16:08] *** llfourn` left
[16:10] *** llfourn` joined
[16:15] *** llfourn` left
[16:22] *** llfourn` joined
[16:23] *** Kaiepi left
[16:24] *** Kaiepi joined
[16:24] *** llfourn` left
[16:27] <moon-child> japhb: I was working on raku support in my game engine.  But that's on hold atm because my graphics card is fried

[16:29] *** llfourn` joined
[16:31] *** Kaeipi joined
[16:31] *** Kaiepi left
[16:32] *** llfourn` left
[16:33] *** llfourn` joined
[16:36] *** Kaiepi joined
[16:38] *** Kaeipi left
[16:38] *** llfourn` left
[16:39] *** Kaiepi left
[16:43] *** llfourn` joined
[16:47] *** veesh left
[16:48] *** llfourn` left
[16:52] *** sena_kun left
[16:53] *** llfourn` joined
[16:57] *** llfourn` left
[16:59] *** veesh joined
[17:00] *** scimon left
[17:02] *** Kaiepi joined
[17:02] *** llfourn` joined
[17:07] *** sena_kun joined
[17:08] *** llfourn` left
[17:10] *** llfourn` joined
[17:13] *** llfourn` left
[17:13] *** llfourn` joined
[17:15] <moon-child> is there any reshape function?

[17:15] *** wamba left
[17:18] *** llfourn` left
[17:18] *** wamba joined
[17:27] *** wamba left
[17:29] <squashable6> üçï uzluisf++ opened issue ‚ÄúProvide more concrete ex‚Ä¶‚Äù: https://github.com/Raku/doc/issues/3111

[17:29] <squashable6> üçïüçïüçï  First contribution by uzluisf++! ‚ô•

[17:31] *** chloekek left
[17:33] <Geth> ¬¶ doc: JJ self-assigned FAQ gives wrong advice about NativeCall https://github.com/Raku/doc/issues/3094

[17:33] <squashable6> üçïüçïüçï  First contribution by JJ++! ‚ô•

[17:33] <squashable6> üçï JJ++ labeled issue ‚ÄúProvide more concrete ex‚Ä¶‚Äù (RFE): https://github.com/Raku/doc/issues/3111

[17:34] *** hkdtam joined
[17:36] *** wamba joined
[17:38] <tbrowder> tony-o: hear from Jan Schulte, the Travis Engineer, he said he had increased our build time to 90 minutes, so maybe we can roast on Rakudo builds

[17:38] <tellable6> 2019-12-05T09:12:44Z #raku-dev <lizmat> tbrowder https://metacpan.org/pod/Inline::Perl6

[17:39] <tbrowder> *heard

[17:43] *** wamba left
[17:46] *** wamba joined
[17:46] *** llfourn` joined
[17:50] <japhb> moon-child: Ah, understood.  Is the WIP in an openly accessible repo?

[17:51] *** wildtrees joined
[17:51] <tony-o> tbrowder: are you looking for me to commit this to the rakudo repo?

[17:51] *** llfourn` left
[17:51] <tellable6> 2019-12-06T17:40:04Z #raku-dev <tbrowder> tony-o  I heard from Jan Schulte, the Travis Engineer, he said he had increased our build time to 90 minutes, so maybe we can roast on Rakudo builds.

[17:52] *** wamba left
[17:52] <moon-child> japhb: the embedding layer is, engine itself is not

[17:52] <moon-child> also embedding layer is also WIP, and I probably won't work on it again until I get a gpu

[17:53] <moon-child> https://github.com/moon-chilled/libport

[17:53] *** wamba joined
[17:53] <moon-child> also, ran into a moar bug I should report at some point

[17:54] *** mid_home left
[17:58] <tbrowder> tony-o: Some days ago (26 nov) you said you would try to find a way to add capability to roast on a rakudo build, and would contact Jan Schulte:  "ah, danke - i'll whatsapp him once i figure out what i'd like to ask".  He just e-mailed me and said our build time has been increased to 90 minutes, so I'm just informing you--they have been very helpful, and I'm sure Jan would be glad to hear from you.

[18:02] <tony-o> ah okay, sorry i got sick and haven't been awake much or looking at this - i was curious if you were envisioning this happening on travis directly when a MR is accepted

[18:08] <japhb> moon-child: Ah, interesting.  Thank you for the link!

[18:10] <tony-o> tbrowder: testing adding roast here

[18:10] <tony-o> : https://travis-ci.org/rakudo/rakudo/jobs/621722775

[18:10] <tbrowder> tony-o: hope you feel better, lots of crud around where i am! it would be nice to be able for rakudo admins to push a button on selected builds to run roast, but that may not be possible.

[18:10] <tony-o> oops, fingers are fat tbrowder, see ^

[18:12] <Geth> ¬¶ doc: 2914172477 | (JJ Merelo)++ | doc/Language/faq.pod6

[18:12] <Geth> ¬¶ doc: Rewrites answer about shared library version

[18:12] <Geth> ¬¶ doc: 

[18:12] <Geth> ¬¶ doc: Closes #3094

[18:12] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/2914172477

[18:12] <squashable6> üçï JJ++ closed issue ‚ÄúFAQ gives wrong advice about NativeCall‚Äù: https://github.com/Raku/doc/issues/3094

[18:12] <tbrowder> ok, tony-o++, fingers crossed!

[18:16] *** hkdtam left
[18:17] <tony-o> looks decent, it's already running spectest here: https://travis-ci.org/rakudo/rakudo/jobs/621722775#L1284

[18:17] *** sena_kun left
[18:17] *** sena_kun joined
[18:17] <tony-o> there's likely a way to report a bisect from that build mechanism

[18:19] *** cpan-raku left
[18:20] *** wamba left
[18:21] <Geth> ¬¶ doc: 84adbbc108 | (JJ Merelo)++ | META6.json

[18:21] <Geth> ¬¶ doc: Add the substitute of Pod::Convenience to start moving it out

[18:21] <Geth> ¬¶ doc: 

[18:21] <Geth> ¬¶ doc: Refs #2696

[18:21] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/84adbbc108

[18:23] *** joule left
[18:26] *** cpan-raku joined
[18:26] *** cpan-raku left
[18:26] *** cpan-raku joined
[18:27] *** hythm joined
[18:28] *** MasterDuke joined
[18:29] <tony-o> that might end up pushing out of 90' though

[18:51] *** sarna left
[18:51] *** sarna joined
[18:52] *** sena_kun left
[19:05] <tbrowder> tony-o: problem, log length exceeded, any solution under your control?

[19:05] <tbrowder> causes early exit from the build

[19:07] *** sena_kun joined
[19:08] <tony-o> could just pipe output to file and print the failures

[19:08] <tony-o> making the assumption that make spectest exits non zero and that i have some kind of bash skill

[19:13] <tony-o> tbrowder: https://travis-ci.org/rakudo/rakudo/jobs/621748397 <- this should do that ^ right now it's just tailing 500 lines if exit nz from make spectest

[19:47] *** llfourn` joined
[19:52] <tony-o> oh excellent, no output in 10 minutes also kills the job

[19:52] <tony-o> TIL

[19:52] *** llfourn` left
[20:10] *** rypervenche joined
[20:21] *** Xliff left
[20:23] *** daxim left
[20:29] *** daxim joined
[20:32] *** Kaiepi left
[20:32] *** Kaiepi joined
[20:33] *** llfourn` joined
[20:35] <tbrowder> need a bash expert! tony-o: try calling Jan, at Travis

[20:36] <tbrowder> the makefile could output a a

[20:37] <tbrowder> output a number pe

[20:37] <tbrowder> fumble fingers....

[20:41] *** Kaiepi left
[20:42] *** Kaiepi joined
[20:47] <tbrowder> can the bash script be modified to output a 0 every few minutes?

[20:47] <tbrowder> or something to fool travis?

[20:48] <tbrowder> i've let Jan know the situation...

[20:48] <tbrowder> and attempts at solution..,

[20:52] *** sena_kun left
[20:56] <nine> tbrowder: something like: perl6 -e 'loop { sleep 60; say 0 }' &

[20:56] <nine> And this to get rid of it: kill $!

[21:00] *** mid_laptop joined
[21:07] *** sena_kun joined
[21:08] <sena_kun> releasable6: status

[21:08] <releasable6> sena_kun, Next release in ‚âà14 days and ‚âà21 hours. There are no known blockers. 0 out of 102 commits logged

[21:08] <releasable6> sena_kun, Details: https://gist.github.com/2464bf3ced4353963ad3279ae463a144

[21:35] <tony-o> tbrowder: yea i'm going to pipe and output is the plan

[21:40] <tony-o> pushed a correction as a test, not sure if something more elegant is needed but likely not

[21:46] *** llfourn` left
[22:11] *** llfourn` joined
[22:14] *** MasterDuke left
[22:18] *** llfourn` left
[22:36] *** kotrcka joined
[22:42] *** hythm left
[22:48] *** llfourn` joined
[22:54] *** sena_kun left
[23:08] *** kotrcka left
[23:08] *** sena_kun joined
[23:28] *** wamba joined
[23:31] *** sena_kun left
[23:54] *** Kaiepi left
