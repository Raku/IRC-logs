[00:22] <Geth_> ¦ doc: Kaiepi++ created pull request #3099: Document Metamodel::Stashing

[00:22] <Geth_> ¦ doc: review: https://github.com/perl6/doc/pull/3099

[01:08] <Geth_> ¦ doc: Kaiepi++ created pull request #3100: Correct how you would imitate static fields in the class tutorial

[01:08] <Geth_> ¦ doc: review: https://github.com/perl6/doc/pull/3100

[01:17] *** evalable6 left
[01:19] *** evalable6 joined
[01:22] *** Kaiepi left
[01:25] *** Kaiepi joined
[01:47] *** Xliff joined
[01:48] <Xliff> m: class A { has $a is rw = 4; }; role B { submethod TWEAK { self.a = 42 }; }; my $a = A.new; $a.a; $a does B; $a.a

[01:48] <camelia> rakudo-moar fc3094191: OUTPUT: «Potential difficulties:␤    useless use of 'is rw' on $!a␤    at <tmp>:1␤    ------> 3class A { has $a 7⏏5is rw = 4; }; role B { submethod TWEAK {␤No such method 'a' for invocant of type 'A'␤  in block <unit> at <tmp> line 1␤␤»

[01:48] <tellable6> 2019-11-24T22:34:16Z #raku-dev <vrurg> Xliff: $*QSIGIL is coming from Perl6::QGrammar. Simply put, it's often tested to see if we're in a quotation context.

[01:49] <Xliff> m: class A { has $.a is rw = 4; }; role B { submethod TWEAK { self.a = 42 }; }; my $a = A.new; $a.a; $a does B; $a.a

[01:49] <camelia> rakudo-moar fc3094191: ( no output )

[01:49] <Xliff> m: class A { has $.a is rw = 4; }; role B { submethod TWEAK { self.a = 42 }; }; my $a = A.new; $a.a.say; $a does B; $a.a.say

[01:49] <camelia> rakudo-moar fc3094191: OUTPUT: «4␤42␤»

[02:03] *** normanrockwell joined
[02:04] *** normanrockwell left
[02:04] *** normanrockwell joined
[02:09] *** normanrockwell left
[02:15] *** normanrockwell joined
[02:20] *** normanrockwell left
[02:34] *** normanrockwell joined
[02:44] <Kaiepi> m: role Foo[::T] { }; sub foo(Foo[::T] $) { T }; say foo Foo[Int]

[02:44] <camelia> rakudo-moar fc3094191: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤No such symbol 'T'␤at <tmp>:1␤------> 3role Foo[::T] { }; sub foo(Foo[::T7⏏5] $) { T }; say foo Foo[Int]␤»

[02:44] <Kaiepi> how do you deal with higher kinded generics in raku?

[02:59] *** normanrockwell left
[03:00] *** AlexDani` joined
[03:04] *** AlexDaniel left
[03:12] <Xliff> m: my ($one, $two, $three) = (1, 2);

[03:12] <camelia> rakudo-moar fc3094191: ( no output )

[03:36] <Xliff> What are the rules on when to use ::T as in "role A[::T]"? When do you need to use it?

[03:39] <Xliff> m: role Foo[::T] { }; sub foo(Foo[\T] $) { T }; say foo Foo[Int]

[03:39] <camelia> rakudo-moar fc3094191: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    T used at line 1␤␤»

[03:40] <Xliff> m: role Foo[::T] { }; sub foo(Foo[::T] $) { T }; say foo Foo[Int]

[03:40] <camelia> rakudo-moar fc3094191: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤No such symbol 'T'␤at <tmp>:1␤------> 3role Foo[::T] { }; sub foo(Foo[::T7⏏5] $) { T }; say foo Foo[Int]␤»

[03:40] <Xliff> m: role Foo[::T] { }; sub foo($) { $^a.^of }; say foo Foo[Int]

[03:40] <camelia> rakudo-moar fc3094191: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Placeholder variable '$^a' cannot override existing signature␤at <tmp>:1␤------> 3role Foo[::T] { }; sub7⏏5 foo($) { $^a.^of }; say foo Foo[Int]␤»

[03:40] <Xliff> m: role Foo[::T] { }; sub foo(\a) {a.^of }; say foo Foo[Int]

[03:40] <camelia> rakudo-moar fc3094191: OUTPUT: «No such method 'of' for invocant of type 'Perl6::Metamodel::CurriedRoleHOW'␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:40] <Xliff> m: role Foo[::T] { }; sub foo(\a) { a.of }; say foo Foo[Int]

[03:40] <camelia> rakudo-moar fc3094191: OUTPUT: «No such method 'of' for invocant of type 'Foo[Int]'␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:44] <Kaiepi> there's syntax for this, but i'm not sure if it does what i hope it would:

[03:45] <Xliff> Yeah. Bugging me now, too. 

[03:45] <Kaiepi> m: role Foo[::T] { }; sub foo(::T Foo[T] $) { T }; say foo Foo[Int]

[03:45] <camelia> rakudo-moar fc3094191: OUTPUT: «Cannot find method 'ACCEPTS' on object of type T␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:45] <Kaiepi> ah, i forgot Metamodel::CurriedRoleHOW doesn't know how to deal with that

[03:45] <Kaiepi> when i made it so it did the signature binder complained about an inconsistent bind result, so i wasn't sure how to proceed from there

[03:47] <Xliff> Ah. Well, I'm just curious as to how and when the "::T" for is used, and it is not documented.

[03:48] <Kaiepi> m: sub foo(::T $) { T }; say foo 1

[03:48] <camelia> rakudo-moar fc3094191: OUTPUT: «(Int)␤»

[03:48] <Kaiepi> it makes a lexical named T that gets filled out with the type of whatever you give it afaik

[03:49] <Kaiepi> only problem is you can't do this:

[03:49] <Kaiepi> m: sub foo(::T $ --> T) { }; say foo 1

[03:49] <camelia> rakudo-moar fc3094191: OUTPUT: «Nil␤»

[03:49] <Kaiepi> m: sub foo(::T $ --> T) { T }; say foo 1

[03:49] <camelia> rakudo-moar fc3094191: OUTPUT: «Died with X::TypeCheck::Return␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:49] <Xliff> sub foo(::A $a, ::B $b, ::C $c) { (A.^name, B.^name, C.^name).say }; foo(1, 'a', 3.145)

[03:49] <evalable6> Xliff, rakudo-moar fc3094191: OUTPUT: «(Int Str Rat)␤»

[03:49] <Xliff> Oh my.

[03:50] <Kaiepi> if this doesn't work i think the return type thing is a bug:

[03:50] <Kaiepi> m: role Foo[::T] { method parameter(--> T) { T } }; say Foo[Int].parameter

[03:50] <camelia> rakudo-moar fc3094191: OUTPUT: «Died with X::TypeCheck::Return␤  in method parameter at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:51] <Xliff> m: sub foo(::T $a --> T) { $a }; say foo 1

[03:51] <camelia> rakudo-moar fc3094191: OUTPUT: «Died with X::TypeCheck::Return␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:51] <Xliff> m: sub foo(::T $a --> T) { $a }; say foo("a")

[03:51] <camelia> rakudo-moar fc3094191: OUTPUT: «Died with X::TypeCheck::Return␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:52] <Xliff> Kaiepi: In my uninformed opinion, I think you might be right.

[03:52] <ZzZombo> It's documented, it's type capture.

[03:52] <Xliff> ZzZombo: Where, pls?

[03:53] <ZzZombo> Search "type capture"?

[04:00] <Kaiepi> fun fact: type parameters are signatures so you can give types named parameters

[04:00] <Xliff> sub d(::T Numeric $x, ::U $y) { (T, u)».^name.say };  d(4, 5e0);

[04:00] <Xliff> m: sub d(::T Numeric $x, ::U $y) { (T, u)».^name.say };  d(4, 5e0);

[04:00] <camelia> rakudo-moar fc3094191: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    u used at line 1␤␤»

[04:00] <Kaiepi> m: role WithConfig[:%config] { method config(--> Positional:D) { %config } }; my %config = :1a, :2b, :3c; say Foo[:%config].config

[04:00] <camelia> rakudo-moar fc3094191: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    Foo used at line 1␤␤»

[04:01] <Xliff> m: sub d(::T Numeric $x, ::U $y) { (T, U)».^name.say };  d(4, 5e0);

[04:01] <camelia> rakudo-moar fc3094191: OUTPUT: «List␤»

[04:01] <Kaiepi> m: role WithConfig[:%config] { method config(--> Positional:D) { %config } }; my %config = :1a, :2b, :3c; say WithConfig[:%config].config

[04:01] <camelia> rakudo-moar fc3094191: OUTPUT: «Type check failed for return value; expected Positional:D but got Hash (${:a(1), :b(2), :c(3)})␤  in method config at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[04:01] <Kaiepi> m: role WithConfig[:%config] { method config(--> Hash:D) { %config } }; my %config = :1a, :2b, :3c; say WithConfig[:%config].config

[04:01] <camelia> rakudo-moar fc3094191: OUTPUT: «{a => 1, b => 2, c => 3}␤»

[04:01] <Xliff> m: sub d(::T Numeric $x, ::U $y) { ( .^name.say for (T, U) };  d(4, 5e0);

[04:01] <camelia> rakudo-moar fc3094191: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in parenthesized expression; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3c $x, ::U $y) { ( .^name.say for (T, U) 7⏏5};  d(4, 5e0…»

[04:01] <Xliff> m: sub d(::T Numeric $x, ::U $y) { .^name.say for (T, U) };  d(4, 5e0);

[04:01] <camelia> rakudo-moar fc3094191: OUTPUT: «T␤U␤»

[04:01] <Xliff> m: sub d(::T Numeric $x, ::U $y) { T.^name.say; U.^name.say };  d(4, 5e0);

[04:01] <camelia> rakudo-moar fc3094191: OUTPUT: «Int␤Num␤»

[04:02] <Kaiepi> wait, Associative is the container for hashes, not Positional

[04:02] <Kaiepi> m: role WithConfig[:%config] { method config(--> Associative:D) { %config } }; my %config = :1a, :2b, :3c; say WithConfig[:%config].config

[04:02] <camelia> rakudo-moar fc3094191: OUTPUT: «{a => 1, b => 2, c => 3}␤»

[04:04] <Kaiepi> m: use nqp; role Foo[:$bar] { }; class Bar does Foo[bar => "a"] { }; say +nqp::typeparameters(Bar.^roles[0]) - 1

[04:04] <camelia> rakudo-moar fc3094191: OUTPUT: «0␤»

[04:04] <Kaiepi> you won't be able to get them from instances of that role, though

[04:06] *** wamba joined
[04:08] <Kaiepi> wait, that uses a Metamodel::ConcreteRoleHOW, not a Metamodel::CurriedRoleHOW, maybe you can

[04:08] <Kaiepi> m: use nqp; role Foo[:$bar] { }; class Bar does Foo[bar => "a"] { }; say nqp::typeparameters(Bar.^roles[0])

[04:08] <camelia> rakudo-moar fc3094191: OUTPUT: «({bar => a})␤»

[04:09] <Kaiepi> yeah i was misreading what Metamodel::ParametricRoleHOW.specialize and .specialize_with do

[04:13] <Xliff> Ah. I had a fight with those when fixing an issue with Method::Also... which still probably isn't fixed and will cause either me or lizmat to fix it again, when it is.

[04:56] *** wamba left
[05:21] *** xinming_ left
[05:22] *** rindolf joined
[05:25] *** xinming_ joined
[05:42] *** [Coke] joined
[05:42] *** [Coke] left
[05:42] *** [Coke] joined
[05:51] *** Manifest0 left
[05:58] *** cpan-raku left
[05:59] *** Manifest0 joined
[06:05] *** wamba joined
[06:06] *** cpan-raku joined
[06:06] *** cpan-raku left
[06:06] *** cpan-raku joined
[06:10] *** jmerelo joined
[06:13] *** Manifest0 left
[06:13] *** Manifest0 joined
[06:26] *** RobRaku joined
[06:31] *** RobRaku left
[06:45] *** wiisports joined
[06:45] *** wamba left
[07:09] *** jmerelo left
[07:12] *** maettu joined
[07:14] *** robraku joined
[07:21] *** RobRaku_ joined
[07:24] *** RobRaku_ left
[07:28] *** abraxxa joined
[07:31] *** abraxxa left
[07:31] *** abraxxa joined
[07:36] *** abraxxa left
[07:37] *** abraxxa joined
[07:47] *** kensanata joined
[08:20] *** mid_home left
[08:28] *** stoned75 left
[08:37] *** El_Che joined
[08:42] <lizmat> Xliff: did I miss something>

[08:42] <lizmat> ?

[08:49] <El_Che> morning

[08:52] <Xliff> lizmat: No.

[08:52] <lizmat> ok, *phew*  :-)

[08:53] <Xliff> :)

[08:53] <Xliff> I did tho: sleep.

[08:53] <Xliff> :(

[08:57] *** sena_kun joined
[08:58] <lizmat> :-(

[09:00] <tadzik> zostay: hey, https://zostay.com/archive/2019/11/24/sterling-s-2019-raku-async-concurrency-advent-calendar.html looks great; is there an RSS feed?

[09:12] *** chloekek joined
[09:17] *** Manifest0 left
[09:20] *** Altai-man_ joined
[09:22] *** sena_kun left
[09:36] *** AlexDani` is now known as AlexDaniel

[09:36] *** AlexDaniel left
[09:36] *** AlexDaniel joined
[10:04] *** sena_kun joined
[10:05] *** Altai-man_ left
[10:18] *** mid_laptop joined
[10:28] *** wiisports left
[10:52] *** mid_laptop left
[11:16] <SmokeMachine> m: say [:.nude] given 3.14

[11:16] <camelia> rakudo-moar 9fa4396f6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Bogus statement␤at <tmp>:1␤------> 3say [:7⏏5.nude] given 3.14␤    expecting any of:␤        colon pair␤»

[11:27] *** mid_laptop joined
[11:31] *** angelds joined
[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue Infix + doesn't show up in documentation https://github.com/Raku/doc/issues/48

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue search box added dynamically. https://github.com/Raku/doc/issues/149

[11:39] <Geth_> ¦ doc: JJ unassigned from moritz Issue split docs still mention :all that was removed https://github.com/Raku/doc/issues/375

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue IO::Handle "replace" deprecated method ins with kv https://github.com/Raku/doc/issues/401

[11:39] <Geth_> ¦ doc: JJ unassigned from niner Issue FAQ entry “what is precompilation?” https://github.com/Raku/doc/issues/446

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue Explain labels in this issue tracker https://github.com/Raku/doc/issues/651

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue Remove all mentions of Parcel https://github.com/Raku/doc/issues/237

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue Re-organise exception types documentation https://github.com/Raku/doc/issues/516

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue Cache generated documentation https://github.com/Raku/doc/issues/717

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue Section on $! Sigils should link to the section on object#Attributes https://github.com/Raku/doc/issues/967

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue pragma nqp is not documented https://github.com/Raku/doc/issues/796

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue The example of uninames method doesn't call uninames https://github.com/Raku/doc/issues/1019

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue highlight-code-blocks has unused optional named parameter https://github.com/Raku/doc/issues/1130

[11:39] <Geth_> ¦ doc: JJ unassigned from hankache Issue pod.pod6 fails xtest https://github.com/Raku/doc/issues/1237

[11:39] <Geth_> ¦ doc: JJ unassigned from tbrowder Issue failing test xt/examples-compilation.t doc/Type/Str.pod6 https://github.com/Raku/doc/issues/1238

[11:39] <Geth_> ¦ doc: JJ unassigned from samcv Issue perl6 htmlify.p6 --no-proc-async - dies https://github.com/Raku/doc/issues/1152

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue doc/Type/IO/Path.pod6 - fails example compilation https://github.com/Raku/doc/issues/1322

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue xt/aspell.t failure https://github.com/Raku/doc/issues/1321

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue 'make run' broken https://github.com/Raku/doc/issues/1332

[11:39] <Geth_> ¦ doc: JJ unassigned from samcv Issue perl6 xt/aspell.t doc/Type/Str.pod6 # failure https://github.com/Raku/doc/issues/1359

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue spelling errors https://github.com/Raku/doc/issues/1349

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue Spelling error in doc/Type/Proc/Async.pod6 https://github.com/Raku/doc/issues/1354

[11:39] <Geth_> ¦ doc: JJ unassigned from timo Issue https://docs.perl6.org/type/PseudoStash is 404 https://github.com/Raku/doc/issues/1341

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue say vs put https://github.com/Raku/doc/issues/1441

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue duplicate word in doc/Type/Failure.pod6 https://github.com/Raku/doc/issues/1371

[11:39] <Geth_> ¦ doc: JJ unassigned from dogbert17 Issue example failure in doc/Type/Parameter.pod6 https://github.com/Raku/doc/issues/1406

[11:39] <Geth_> ¦ doc: JJ unassigned from TisonKun Issue .+ and .* are inaccurate https://github.com/Raku/doc/issues/1421

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue perl6 xt/aspell.t doc/Language/5to6-perlvar.pod6 - failure https://github.com/Raku/doc/issues/1360

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue Make link checker work locally; make it a test https://github.com/Raku/doc/issues/1433

[11:39] <Geth_> ¦ doc: JJ unassigned from Altai-man Issue List.squish supports “with” parameter, but it is not documented https://github.com/Raku/doc/issues/1490

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue minmax actually returns a Range https://github.com/Raku/doc/issues/1455

[11:39] <Geth_> ¦ doc: JJ unassigned from samcv Issue Bad installation instructions https://github.com/Raku/doc/issues/1457

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue Class::Date example shows incorrect result https://github.com/Raku/doc/issues/1463

[11:39] <Geth_> ¦ doc: JJ unassigned from rafaelschipiura Issue Examples for sprintf use OUTPUT instead of RESULT https://github.com/Raku/doc/issues/1521

[11:39] <Geth_> ¦ doc: JJ unassigned from samcv Issue Document utf8 type https://github.com/Raku/doc/issues/1516

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue Linking to pragmas https://github.com/Raku/doc/issues/1488

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue Wrong return type for Any.categorize and Any.classify https://github.com/Raku/doc/issues/1604

[11:39] <Geth_> ¦ doc: JJ unassigned from Xliff Issue How to use AutoHotKey (unicode_entry) https://github.com/Raku/doc/issues/1532

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue any operator | messes up the table  https://github.com/Raku/doc/issues/1764

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue substr documentation lacking https://github.com/Raku/doc/issues/1911

[11:39] <Geth_> ¦ doc: JJ unassigned from fluca1978 Issue <?{<SOMETHING CONDITION>}>and <!{<SOMETHING CONDITION>}> (regex) are not documented https://github.com/Raku/doc/issues/1757

[11:39] <Geth_> ¦ doc: JJ unassigned from fluca1978 Issue The pod section of the docs should mention how to access pod via $= https://github.com/Raku/doc/issues/1907

[11:39] <Geth_> ¦ doc: JJ unassigned from bduggan Issue Deadlink for Metamodel::EnumHOW class in the the Meta-Object Protocol Page https://github.com/Raku/doc/issues/1642

[11:39] <Geth_> ¦ doc: JJ unassigned from coke Issue Unclear or incorrect example of "default" exception CATCHer https://github.com/Raku/doc/issues/1792

[11:39] <Geth_> ¦ doc: JJ unassigned from zoffixznet Issue Broken stand-alone image links https://github.com/Raku/doc/issues/1995

[11:39] <Geth_> ¦ doc: JJ unassigned from Tyil Issue Spin off Perl6::Documentable https://github.com/Raku/doc/issues/1937

[11:39] <Geth_> ¦ doc: JJ unassigned from fluca1978 Issue remove merged branches https://github.com/Raku/doc/issues/2118

[11:39] <Geth_> ¦ doc: JJ unassigned from tbrowder Issue Broken links to 'Language' pages via search https://github.com/Raku/doc/issues/2190

[11:39] <Geth_> ¦ doc: JJ unassigned from tbrowder Issue Perl 6 in a nutshell missing https://github.com/Raku/doc/issues/2196

[11:39] <Geth_> ¦ doc: JJ unassigned from dogbert17 Issue Spin off Perl6::Documentable https://github.com/Raku/doc/issues/1937

[11:39] <Geth_> ¦ doc: JJ unassigned from MorayJ Issue The documentation on ==> should get to the point faster https://github.com/Raku/doc/issues/2316

[11:39] <Geth_> ¦ doc: JJ unassigned from timo Issue IO::Socket::Async and listening to a system-defined (unspecified) port https://github.com/Raku/doc/issues/2207

[11:39] <Geth_> ¦ doc: JJ unassigned from Kaiepi Issue Use always non-breaking space when talking about Perl 6 and Pod 6 https://github.com/Raku/doc/issues/1989

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue Spin off Per6::Type and Perl6::TypeGraph https://github.com/Raku/doc/issues/2573

[11:39] <Geth_> ¦ doc: JJ unassigned from noisegul Issue `p6doc IO::Path` on windows https://github.com/Raku/doc/issues/2534

[11:39] <Geth_> ¦ doc: JJ unassigned from fluca1978 Issue Spin off Perl6::Documentable https://github.com/Raku/doc/issues/1937

[11:39] <Geth_> ¦ doc: JJ unassigned from MorayJ Issue TODOs in typesystem https://github.com/Raku/doc/issues/2232

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue Spin off Perl6::Documentable https://github.com/Raku/doc/issues/1937

[11:39] <Geth_> ¦ doc: JJ unassigned from ronaldxs Issue remove merged branches https://github.com/Raku/doc/issues/2118

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue Indexes that include % do not work https://github.com/Raku/doc/issues/2527

[11:39] <Geth_> ¦ doc: JJ unassigned from taboege Issue Comment "method ^foo" syntax https://github.com/Raku/doc/issues/2856

[11:39] <Geth_> ¦ doc: JJ unassigned from taboege Issue Too many :skip-tests https://github.com/Raku/doc/issues/2738

[11:39] <Geth_> ¦ doc: JJ unassigned from noisegul Issue "p6doc -f exit" doesn't work https://github.com/Raku/doc/issues/2532

[11:39] <Geth_> ¦ doc: JJ unassigned from taboege Issue Create a test to ensure there are no accidental Camelia invocations in examples https://github.com/Raku/doc/issues/2695

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue Document Range.new and revise other methods in Range. https://github.com/Raku/doc/issues/2739

[11:39] *** ChanServ sets mode: +o AlexDaniel

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue type-graph.txt: what is it good for? https://github.com/Raku/doc/issues/2584

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue Inconsistent index escaping https://github.com/Raku/doc/issues/2535

[11:39] <Geth_> ¦ doc: JJ unassigned from antoniogamiz Issue Test documentable https://github.com/Raku/doc/issues/2972

[11:39] *** Geth_ was kicked by AlexDaniel (Kicked by AlexDaniel))
[11:40] <AlexDaniel> hello?

[11:40] <tyil> hi

[11:42] *** [Coke]_ joined
[11:42] *** [Coke]_ left
[11:42] *** [Coke]_ joined
[11:42] *** AlexDani` joined
[11:43] <AlexDani`> did… did someone just transfer the whole doc repo without discussing it first?

[11:43] <AlexDani`> not a smart move I have to say

[11:43] <AlexDani`> but now we know that all assignments will be gone unless the assigned person is in the new org

[11:45] <CIAvash> tadzik: probably https://zostay.com/feed/category/advent-2019/rss.xml ?

[11:45] *** cpan-raku left
[11:45] <AlexDani`> tyil: you can let geth rejoin

[11:45] <AlexDani`> I just wanted the spam to stop

[11:45] <tyil> AlexDani`: ack

[11:46] *** Geth joined
[11:46] *** kensanata left
[11:47] *** TreyHarr1 joined
[11:47] *** angelds left
[11:48] *** [Coke] left
[11:48] <AlexDaniel> did… did someone just transfer the whole doc repo without discussing it first?

[11:48] <AlexDaniel> not a smart move I have to say

[11:48] <AlexDaniel> but now we know that all assignments will be gone unless the assigned person is in the new org

[11:48] *** AlexDaniel left
[11:49] *** AlexDani` is now known as AlexDaniel

[11:49] *** AlexDaniel left
[11:49] *** AlexDaniel joined
[11:52] <AlexDaniel> hmm got my messages doubled

[11:52] <AlexDaniel> weird

[11:58] *** robraku left
[12:03] *** RobRaku joined
[12:03] *** Altai-man_ joined
[12:03] <tadzik> CIAvash: that's it, thanks :) I haven't found it in the source anywhere

[12:05] *** sena_kun left
[12:29] *** joule joined
[12:40] <CIAvash> tadzik: it was in the category page

[12:40] *** mid_laptop left
[12:41] <tadzik> CIAvash: aha, indeed

[12:48] *** cpan-raku joined
[12:48] *** cpan-raku left
[12:48] *** cpan-raku joined
[12:59] *** AlexDaniel left
[12:59] *** AlexDaniel joined
[12:59] *** AlexDaniel left
[12:59] *** AlexDaniel joined
[13:20] *** woolfy1 joined
[13:21] *** woolfy1 left
[13:37] *** woolfy1 joined
[13:37] *** woolfy1 left
[14:01] *** mid_laptop joined
[14:04] *** sena_kun joined
[14:05] *** Altai-man_ left
[14:11] <[Coke]_> .

[14:11] *** [Coke]_ is now known as [Cok]e

[14:11] *** [Cok]e is now known as [Coke]

[14:11] <[Coke]> .

[14:13] *** MasterDuke left
[14:14] <Juerd> lizmat: The weekly no longer has the latest post directly on the front page, is that by design?

[14:16] <lizmat> yes, it is

[14:16] <lizmat> I think

[14:16] <lizmat> :-)

[14:16] <lizmat> I guess you want to put https://rakudoweekly.blog/blog-feed/ in your bookmarks

[14:17] <Juerd> If I used bookmarks I would :)

[14:17] <lizmat> I tweet and post the actual weekly's URL on channel

[14:18] <Juerd> Oh, I have no trouble finding it :)

[14:18] <lizmat> ok  :-)  *phew*  

[14:18] <Juerd> It's just that I go to the .blog/ url, and sometimes get distracted before clicking blog feed :)

[14:18] <Juerd> Which is fine because I have an entire week :)

[14:19] <Juerd> Just wanted to know whether this was a bug or a feature, turns out it's a feature

[14:20] <lizmat> yeah, it's part of the style I chose

[14:20] *** kensanata joined
[14:20] <lizmat> because I wanted to have the option of adding more generic pages in the future

[14:49] *** finanalyst joined
[14:50] *** RobRaku left
[15:12] *** mid_laptop left
[15:18] *** veesh_ joined
[15:20] *** veesh left
[15:20] *** veesh_ is now known as veesh

[15:23] *** cognomin_ joined
[15:27] *** cognominal left
[15:32] *** patrickb joined
[15:39] *** veesh left
[15:41] *** RobRaku joined
[15:49] *** cognominal joined
[15:53] *** cognomin_ left
[15:55] *** pureabsolute joined
[16:03] *** Altai-man_ joined
[16:04] <Kaiepi> greppable6, EXPORTHOW::DECLARE

[16:04] <greppable6> Kaiepi, Found nothing!

[16:04] <Kaiepi> greppable6, EXPORTHOW

[16:04] <greppable6> Kaiepi, 20 lines, 11 modules: https://gist.github.com/fe9f3bf537a89da129ddf18e917273ee

[16:05] *** sena_kun left
[16:10] *** RobRaku left
[16:13] <zostay> tadzik: Yes, the one CIAvash mentioned above, though I just added it to the blog and it might not work well, so if you have problems with it, let me know and I'll fix it: https://zostay.com/feed/category/advent-2019/rss.xml

[16:21] *** patrickb left
[16:37] <Geth> ¦ problem-solving: AlexDaniel assigned to jnthn Issue Release manager for Rakudo 2019.12 and onward https://github.com/perl6/problem-solving/issues/132

[17:41] <cpan-raku> New module released to CPAN! LibXML (0.2.0) by 03WARRINGD

[17:45] *** japhb joined
[18:04] *** sena_kun joined
[18:05] *** Altai-man_ left
[18:42] *** finanalyst left
[18:48] *** lucasb joined
[19:02] <lizmat> and another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2019/11/25/2019-47-late-again-or/

[19:25] *** chloekek left
[19:33] *** Manifest0 joined
[19:39] *** MasterDuke joined
[19:59] *** mid_home joined
[20:03] *** Altai-man_ joined
[20:05] *** sena_kun left
[20:16] <Xliff> m: my \a-i = 0; say a-i + 1

[20:16] <camelia> rakudo-moar f608a7a41: OUTPUT: «1␤»

[20:16] <Xliff> m: my \a-1 = 0; say a-1 + 1

[20:16] <camelia> rakudo-moar f608a7a41: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Term definition requires an initializer␤at <tmp>:1␤------> 3my \a7⏏5-1 = 0; say a-1 + 1␤»

[20:16] <Xliff> m: my \a-a1 = 0; say a-a1 + 1

[20:16] <camelia> rakudo-moar f608a7a41: OUTPUT: «1␤»

[20:17] <Xliff> m: my \a_1 = 0; say a_1 + 1

[20:17] <camelia> rakudo-moar f608a7a41: OUTPUT: «1␤»

[20:23] *** kensanata left
[20:24] *** stoned75 joined
[20:36] *** TreyHarr1 is now known as TreyHarris

[20:46] *** chloekek joined
[20:51] *** joule left
[20:57] *** veesh joined
[20:58] *** veesh left
[21:00] *** veesh joined
[21:01] <Xliff> .seen sergot

[21:01] <tellable6> Xliff, I saw sergot 2019-01-24T14:32:08Z in #perl6: <sergot> oh, Mar and May...

[21:07] *** Kaiepi left
[21:10] *** Kaiepi joined
[21:22] <Xliff> What exit code does raku return when die is invoked?

[21:23] <El_Che> it looks like 1

[21:23] <Xliff> El_Che: How are you checking that?

[21:24] <El_Che> perl -e 'die' ; echo $?

[21:24] <El_Che> perl6 -e 'die' ; echo $?

[21:24] <Xliff> Hrm. Was using &&

[21:24] <El_Che> && only executes if success

[21:25] <El_Che> funy enough perl (5) does return 255

[21:25] <Grinnz> (which is 0 in bash)

[21:26] <Altai-man_> .oO ( can I use funny images in advent article )

[21:28] <Xliff> OK. So I want to get the error code of a qx[]... do I need Proc::Async?

[21:29] <Grinnz> El_Che: it actually exits with the value of $! if it's set to something, $? if it's set by a DESTROY or END, and 255 otherwise

[21:30] <Grinnz> because of the use of $! it's a little unreliable

[21:31] <Grinnz> the only guarantee is it won't be zero

[21:32] <Grinnz> (unless something sets $? to 0... but then that's your own fault :P)

[21:32] <Xliff> Actually... CAN you get an error code from a qx[]'d command? $! isn't set

[21:32] <Grinnz> $! is for errno, not exit codes

[21:33] <Xliff> So what is exit code?

[21:33] <Grinnz> if it's the same as perl 5, $?

[21:33] <Xliff> Unsupported use of $? variable; in Perl 6 please use $! for handling child errors also

[21:33] <Grinnz> interesting

[21:33] <Xliff> Yes. It is.

[21:34] <Grinnz> those are two quite distinct cases :|

[21:34] <Grinnz> i guess that raku is further from the syscalls to set $!?

[21:34] <Xliff> Hrm. I might need shell

[21:45] *** finanalyst joined
[21:46] *** clarjon1 joined
[21:57] *** Kaiepi left
[21:57] *** Kaiepi joined
[22:04] *** sena_kun joined
[22:05] *** Altai-man_ left
[22:08] *** patrickb joined
[22:16] *** rindolf left
[22:36] *** squashable6 left
[22:36] *** shareable6 left
[22:37] *** tellable6 joined
[22:37] *** squashable6 joined
[22:37] *** shareable6 joined
[22:49] *** finanalyst left
[22:59] *** chloekek left
[23:29] *** Doc_Holliwould joined
[23:31] <discord6> <Vendethiel> Oh wow, advent calendar filled already

[23:31] <discord6> <Vendethiel> That’s good news

[23:32] *** Doc_Holliwood left
[23:39] <sena_kun> Ven, if you want to take a spot... ;)

[23:39] <sena_kun> ugh, my complete is wrong

[23:39] <sena_kun> Vendethiel, ^

