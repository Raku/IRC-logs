[00:05] *** Altai-man_ joined
[00:06] *** sena_kun left
[00:12] *** captain-adequate left
[00:16] <stoned75> oops doc build is broken

[00:17] *** finanalyst left
[00:21] <Altai-man_> I knew something like this is possible, but...

[00:21] <Altai-man_> hmm, why so?

[00:22] <Altai-man_> stoned75, is says the build passed at https://github.com/Raku/doc/runs/325368693 no?

[00:23] <stoned75> ah yes indeed. well it's broken for me at least :)

[00:23] <Altai-man_> stoned75, what do you mean by it?

[00:24] <stoned75> the new PrecompilationRepository type pod processing by documentable is broken. lemme check if my working copy is dirty or not

[00:29] <stoned75> ah but the travis build does not run documentable, right ?

[00:31] *** pmurias left
[00:36] *** colomon joined
[00:38] *** lucasb left
[00:39] *** rbt left
[00:40] *** Altai-man_ left
[00:52] *** wamba left
[01:23] *** MasterDuke left
[01:41] *** colomon left
[01:42] <Geth> ¦ doc: 1912269890 | (Stoned Elipot)++ | type-graph.txt

[01:42] <Geth> ¦ doc: Add missing type

[01:42] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1912269890

[01:43] *** colomon joined
[02:04] <Geth> ¦ doc: 353daae206 | (Stoned Elipot)++ | doc/Language/regexes.pod6

[02:04] <Geth> ¦ doc: Align examples' output

[02:04] <Geth> ¦ doc: 

[02:04] <Geth> ¦ doc: ... not necessarily in the source but at least in the rendered document

[02:04] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/353daae206

[03:02] <cpan-raku> New module released to CPAN! LibXML (0.2.2) by 03WARRINGD

[03:18] *** colomon left
[03:43] *** skyl4rk joined
[03:49] *** rindolf joined
[04:08] *** mid_laptop left
[05:08] *** quotable6 left
[05:08] *** statisfiable6 left
[05:08] *** coverable6 left
[05:08] *** shareable6 left
[05:08] *** reportable6 left
[05:08] *** greppable6 left
[05:08] *** releasable6 left
[05:08] *** squashable6 left
[05:08] *** nativecallable6 left
[05:08] *** benchable6 left
[05:08] *** bisectable6 left
[05:08] *** unicodable6 left
[05:08] *** bloatable6 left
[05:08] *** notable6 left
[05:08] *** committable6 left
[05:08] *** coverable6 joined
[05:08] *** reportable6 joined
[05:09] *** shareable6 joined
[05:09] *** greppable6 joined
[05:09] *** squashable6 joined
[05:09] *** bisectable6 joined
[05:09] *** benchable6 joined
[05:09] *** notable6 joined
[05:10] *** quotable6 joined
[05:10] *** nativecallable6 joined
[05:10] *** bloatable6 joined
[05:10] *** statisfiable6 joined
[05:10] *** committable6 joined
[05:11] *** Guest91 joined
[05:11] *** unicodable6 joined
[05:11] *** releasable6 joined
[05:29] *** Guest91 left
[05:43] *** abraxxa left
[06:00] *** abraxxa joined
[07:00] *** greppable6 left
[07:00] *** benchable6 left
[07:00] *** shareable6 left
[07:00] *** reportable6 left
[07:00] *** bisectable6 left
[07:00] *** notable6 left
[07:00] *** bloatable6 left
[07:00] *** releasable6 left
[07:00] *** committable6 left
[07:00] *** coverable6 left
[07:00] *** statisfiable6 left
[07:00] *** squashable6 left
[07:00] *** quotable6 left
[07:00] *** unicodable6 left
[07:00] *** nativecallable6 left
[07:00] *** squashable6 joined
[07:00] *** shareable6 joined
[07:00] *** statisfiable6 joined
[07:00] *** greppable6 joined
[07:00] *** nativecallable6 joined
[07:01] *** reportable6 joined
[07:01] *** bisectable6 joined
[07:02] *** coverable6 joined
[07:02] *** benchable6 joined
[07:02] *** committable6 joined
[07:02] *** bloatable6 joined
[07:02] *** unicodable6 joined
[07:03] *** notable6 joined
[07:03] *** releasable6 joined
[07:03] *** quotable6 joined
[07:11] *** Doc_Holliwould joined
[07:14] *** holli joined
[07:14] *** Doc_Holliwood left
[07:17] *** Doc_Holliwould left
[07:18] *** Doc_Holliwould joined
[07:21] *** holli left
[07:21] *** Doc_Holliwood joined
[07:24] *** Doc_Holliwould left
[07:25] *** Doc_Holliwould joined
[07:28] *** Doc_Holliwood left
[07:29] *** holli joined
[07:30] *** wamba joined
[07:32] *** Doc_Holliwould left
[07:32] *** Doc_Holliwood joined
[07:35] *** holli left
[07:36] *** Doc_Holliwould joined
[07:38] *** Doc_Holliwood left
[07:39] *** Doc_Holliwood joined
[07:42] *** Doc_Holliwould left
[07:43] *** Doc_Holliwould joined
[07:46] *** Doc_Holliwood left
[07:46] *** holli joined
[07:49] *** Doc_Holliwould left
[07:50] *** Doc_Holliwood joined
[07:52] *** holli left
[07:53] *** Doc_Holliwould joined
[07:54] *** ufobat joined
[07:56] *** Doc_Holliwood left
[07:57] *** holli joined
[07:59] <ufobat> does anyone run the comma-ide as a plugin in the current intellij IDEA?

[08:00] *** Doc_Holliwould left
[08:01] *** Doc_Holliwood joined
[08:04] *** holli left
[08:04] *** Doc_Holliwould joined
[08:04] *** stoned75 left
[08:07] *** Doc_Holliwood left
[08:08] *** Doc_Holliwood joined
[08:10] *** Doc_Holliwould left
[08:11] *** Doc_Holliwould joined
[08:14] *** Doc_Holliwood left
[08:15] *** Doc_Holliwood joined
[08:18] *** Doc_Holliwould left
[08:18] *** Doc_Holliwould joined
[08:20] <Geth> ¦ doc: e25bfefd85 | (JJ Merelo)++ | 2 files

[08:20] <Geth> ¦ doc: Revise for doc generation refs #3046

[08:20] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/e25bfefd85

[08:21] *** Doc_Holliwood left
[08:21] *** jmerelo joined
[08:22] *** abraxxa left
[08:22] *** abraxxa joined
[08:22] *** Xliff joined
[08:23] <Xliff> \o

[08:23] <Xliff> .seen vrurg

[08:23] <tellable6> Xliff, I saw vrurg 2019-11-28T20:43:23Z in #raku-dev: <vrurg> I wonder how we gonna handle this when 6.e becomes the default. Shall 6.c core be compileable with 6.e?

[08:23] *** wamba left
[08:23] *** holli joined
[08:23] <Xliff> .tell vrurg I've got some Amazon-AWS-EC2 issues I'm having problems with. Are you going to be around, today with time to help?! Pleeease?

[08:23] <tellable6> Xliff, I'll pass your message to vrurg

[08:24] <Xliff> .oO( I h8 to whine, but I wanna keep my hair. :P )

[08:26] *** Doc_Holliwould left
[08:26] <jmerelo> Xliff is that strictly platform related?

[08:26] <tellable6> 2019-11-28T19:27:54Z #raku <tbrowder> jmerelo my raku advent post is scheduled to publish on time

[08:26] <jmerelo> .tell tbrowder great job!

[08:26] <tellable6> jmerelo, I'll pass your message to tbrowder

[08:26] <Xliff> jmerelo: Yes. It's much to do with dynamic loading.

[08:26] <Xliff> I can't explain why I can do everything I want from the command line, but the script that does it throws errors.

[08:27] *** Doc_Holliwood joined
[08:27] <Xliff> If you want to pick around, you can take a look...

[08:27] <jmerelo> If I can be of help...

[08:27] <Xliff> https://github.com/Xliff/p6-Amazon-AWS-EC2/blob/JulyActionRefactor-1/t/04-actions.t

[08:28] <Xliff> Better yet... download the project. It's fairly stand alone. (IE -- it's no GTK)

[08:28] <Xliff> Then try and run "perl6 -Ilib t/04-actions --unit=CreateKeyPair"

[08:28] <Xliff> You will see errors.

[08:28] <Xliff> However this invocation works....

[08:28] <Xliff> perl6 -Ilib -e 'my \c := (try require ::($ = "Amazon::AWS::EC2::Action::CreateKeyPair")); c.^name.say'

[08:29] <Xliff> ALL of these classes were working back when I stopped on Amazon and went back to GTK, this summer.

[08:29] <jmerelo> You are showing me a branch. 

[08:29] *** holli left
[08:30] <Xliff> You can work from master.

[08:30] *** Doc_Holliwould joined
[08:30] <Xliff> JulyActionRefactor is for another (hopefully not related) bug

[08:31] <Xliff> I'm pretty sure something has changed internally, and I just need to update the code... but I can't figure out where.

[08:31] <jmerelo> still installing dependencies...

[08:32] <Xliff> One that still works: perl6 -Ilib t/04-actions.t --unit=CopySnapshot

[08:32] *** Doc_Holliwood left
[08:40] <jmerelo> tests take some time, but they seem to be working

[08:42] <jmerelo> the test you indicated above says it can't find scripts/dependencies.pl6

[08:43] <jmerelo> And then test 2 fails, it can't create a key pair

[08:43] <jmerelo> Maybe I need to be logged on to Amazon?

[08:43] <Xliff> :(

[08:43] <Xliff> Yeah,.

[08:43] <jmerelo> Ah, sorry...

[08:43] <Xliff> Crap. You need to get the scripts from p6-GtkPlus. I keep meaning to turn those into their own project.

[08:44] <jmerelo> I don't think I have credits now...

[08:44] <Xliff> No worries. I will continue to pull hair until I talk to vrurg.

[08:44] <jmerelo> Ah, scripts is a symbolic link...

[08:44] <jmerelo> Good luck...

[08:47] <Xliff> Yeah

[08:55] <Xliff> *snarl*

[08:55] <Xliff> Found it.

[08:55] <Xliff> :D

[08:59] *** wamba joined
[09:12] <Geth> ¦ doc: 0b35dda966 | (JJ Merelo)++ | 10 files

[09:12] <Geth> ¦ doc: Replaces repo name #3101

[09:12] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/0b35dda966

[09:30] <jmerelo> Just deployed this new version to https://docs-stage.raku.org/ to check for possible errors.

[09:30] <jmerelo> Main change here is simply that now the footer points directly to the new repository, instead of pointing to the old and being redirected to the new

[09:31] <jmerelo> If everything is OK, I'll generate it again and deploy it to docs.raku.org

[09:37] <sarna> works for me

[09:40] <jmerelo> sarna thanks

[09:40] <jmerelo> Also, I'm moving perl6/advent to Raku/advent if no one objects

[09:41] <jmerelo> Also, happily, seems like Google is starting to find the new documentation pages https://www.google.com/search?client=ubuntu&channel=fs&q=raku+associative&ie=utf-8&oe=utf-8

[09:42] <jmerelo> It's also getting much better on the generic search area: https://www.google.com/search?safe=off&client=ubuntu&hs=Ph0&channel=fs&sxsrf=ACYBGNSbYagni6lTAP_Hp_T221Znwvk8gg%3A1575020506530&ei=2ufgXfKJIK-bjLsPkberoAY&q=raku+input+output&oq=raku+input+output&gs_l=psy-ab.3..35i39.12634.14335..14516...0.0..0.110.1326.12j3......0....1..gws-wiz.......0i203j

[09:42] <jmerelo> 0i30j0i5i30j0i8i30j0i22i30j0j0i10i203.7w6V0VKC3l0&ved=0ahUKEwjy3rjOkI_mAhWvDWMBHZHbCmQQ4dUDCAo&uact=5

[09:42] *** AlexDaniel left
[09:45] <jmerelo> OK, the advent calendar repo is now https://github.com/Raku/advent

[09:49] *** abraxxa left
[09:50] *** abraxxa1 joined
[09:52] *** abraxxa1 left
[09:53] *** abraxxa joined
[10:22] *** jmerelo left
[10:54] *** mid_home joined
[10:55] *** veesh_ joined
[10:57] *** veesh left
[10:58] *** veesh_ is now known as veesh

[11:08] *** abraxxa left
[11:08] *** abraxxa joined
[11:15] *** sena_kun joined
[11:30] *** atroxaper joined
[11:30] <atroxaper> Hi, #raku

[11:30] <tellable6> 2019-09-04T05:10:19Z #perl6 <jmerelo> atroxaper thanks

[11:31] <atroxaper> It there a way to access to Perl6::Grammar from my script? I wanted to use it with my own Actions.

[11:32] <lizmat> atroxaper o/

[11:32] <atroxaper> lizmat: \o

[11:32] <lizmat> moritz jnthn might have that info handy

[11:50] *** abraxxa left
[11:50] *** abraxxa joined
[11:59] *** joule joined
[12:04] *** AlexDaniel joined
[12:04] *** AlexDaniel left
[12:04] *** AlexDaniel joined
[12:04] *** Altai-man_ joined
[12:06] *** sena_kun left
[12:10] *** cpan-raku left
[12:11] *** cpan-raku joined
[12:11] *** cpan-raku left
[12:11] *** cpan-raku joined
[12:15] <cpan-raku> New module released to CPAN! Inline::Perl5 (0.43) by 03NINE

[12:21] *** wamba left
[12:36] <abraxxa> I want to check if a value in a given/when statement is one of three possible ones, can I use smartmatch with a List/Array for that?

[12:37] <Altai-man_> abraxxa, you can just junction

[12:37] <Altai-man_> m: given 4 { when 1|2|4 { say "Matched!" } }

[12:37] <camelia> rakudo-moar f608a7a41: OUTPUT: «Matched!␤»

[12:37] <Altai-man_> abraxxa, if you don't know values beforehand and they are in an array, then...

[12:37] <abraxxa> when 'reject', 'deny', 'drop' { is accepted by the compiler as well

[12:38] <Altai-man_> m: my @a = 1, 2, 4; given 4 { when $_ (elem) @a { 42.say } }

[12:38] <camelia> rakudo-moar f608a7a41: OUTPUT: «42␤»

[12:38] <Altai-man_> m: my @a = 1, 2, 4; given 10 { when $_ (elem) @a { 42.say } }

[12:38] <camelia> rakudo-moar f608a7a41: ( no output )

[12:38] <Altai-man_> abraxxa, that's another option

[12:41] *** atroxaper left
[12:42] <abraxxa> Altai-man_: but it doesn't match. I guess its generating a List because of the , and compares to the list

[12:42] <Altai-man_> m: my $a = 'a'; given $a { when 'a', 'b' { 42.say } }

[12:42] <camelia> rakudo-moar f608a7a41: ( no output )

[12:42] <Altai-man_> m: my $a = 'a'; given $a { when 'a'|'b' { 42.say } }

[12:42] <camelia> rakudo-moar f608a7a41: OUTPUT: «42␤»

[12:42] <Altai-man_> abraxxa, ^

[12:42] <Altai-man_> m: my $a = 'a'; given $a { when $_ (elem> 'a', 'b' { 42.say } }

[12:42] <camelia> rakudo-moar f608a7a41: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3my $a = 'a'; given $a { when $_7⏏5 (elem> 'a', 'b' { 42.say } }␤    expecting any of:␤        block or pointy block␤        infix␤        infix stoppe…»

[12:42] <Altai-man_> m: my $a = 'a'; given $a { when $_ (elem) 'a', 'b' { 42.say } }

[12:42] <camelia> rakudo-moar f608a7a41: ( no output )

[12:43] <Altai-man_> m: my $a = 'a'; given $a { when $_ (elem) ('a', 'b') { 42.say } }

[12:43] <camelia> rakudo-moar f608a7a41: OUTPUT: «42␤»

[12:43] <Altai-man_> abraxxa, ^

[12:45] *** colomon joined
[12:45] *** abraxxa left
[12:46] *** abraxxa joined
[12:56] <tobs> yes, it probably smartmatches against the list. I'd use junctions. Syntactically they look like a list and do what you meant

[12:57] <tobs> m: for <apply reject fire drop> { when any <reject deny drop> { say "matched" }; say "didn't match" }

[12:57] <camelia> rakudo-moar f608a7a41: OUTPUT: «didn't match␤matched␤didn't match␤matched␤»

[12:58] *** pmurias joined
[13:04] *** abraxxa left
[13:04] *** atroxaper joined
[13:17] *** wamba joined
[13:30] *** MasterDuke joined
[13:37] *** pmurias left
[13:38] *** pmurias joined
[13:48] *** veesh_ joined
[13:50] *** chloekek joined
[13:50] *** veesh left
[13:51] *** veesh_ is now known as veesh

[13:54] *** wamba left
[14:05] *** sena_kun joined
[14:06] *** Altai-man_ left
[14:18] *** colomon left
[14:24] *** pmurias left
[14:26] <vrurg> .

[14:26] <tellable6> 2019-11-29T08:23:55Z #raku <Xliff> vrurg I've got some Amazon-AWS-EC2 issues I'm having problems with. Are you going to be around, today with time to help?! Pleeease?

[14:27] *** caterfxo left
[14:27] <vrurg> .tell Xliff I'll be afk most of the day today. But hope to be available tonight.

[14:27] <tellable6> vrurg, I'll pass your message to Xliff

[14:33] *** Ven_de_Thiel joined
[14:43] *** pmurias joined
[15:05] *** robertle joined
[15:05] <chloekek> p6: .say for 1..10 X 1..10 X 1..10

[15:05] <camelia> rakudo-moar f608a7a41: OUTPUT: «(1 1 1)␤(1 1 2)␤(1 1 3)␤(1 1 4)␤(1 1 5)␤(1 1 6)␤(1 1 7)␤(1 1 8)␤(1 1 9)␤(1 1 10)␤(1 2 1)␤(1 2 2)␤(1 2 3)␤(1 2 4)␤(1 2 5)␤(1 2 6)␤(1 2 7)␤(1 2 8)␤(1 2 9)␤(1 2 10)␤(1 3 1)␤(1 3 2)␤(1 3 3)␤(1 3 4)␤(1 3 5)…»

[15:05] <chloekek> Is it possible to modify this example to produce (1 1 1) (2 1 1) (3 1 1) …?

[15:06] <chloekek> I tried RX instead of X but it gives a syntax error. :’)

[15:07] <jnthn> p6: .reverse.say for 1..10 X 1..10 X 1..10 # ? :)

[15:07] <camelia> rakudo-moar f608a7a41: OUTPUT: «(1 1 1)␤(2 1 1)␤(3 1 1)␤(4 1 1)␤(5 1 1)␤(6 1 1)␤(7 1 1)␤(8 1 1)␤(9 1 1)␤(10 1 1)␤(1 2 1)␤(2 2 1)␤(3 2 1)␤(4 2 1)␤(5 2 1)␤(6 2 1)␤(7 2 1)␤(8 2 1)␤(9 2 1)␤(10 2 1)␤(1 3 1)␤(2 3 1)␤(3 3 1)␤(4 3 1)␤(5 3 1)…»

[15:08] <lizmat> m: .say for (1..3 X 1..3 X 1..3)>>.reverse

[15:08] <camelia> rakudo-moar f608a7a41: OUTPUT: «(1 1 1)␤(2 1 1)␤(3 1 1)␤(1 2 1)␤(2 2 1)␤(3 2 1)␤(1 3 1)␤(2 3 1)␤(3 3 1)␤(1 1 2)␤(2 1 2)␤(3 1 2)␤(1 2 2)␤(2 2 2)␤(3 2 2)␤(1 3 2)␤(2 3 2)␤(3 3 2)␤(1 1 3)␤(2 1 3)␤(3 1 3)␤(1 2 3)␤(2 2 3)␤(3 2 3)␤(1 3 3)␤(…»

[15:10] <chloekek> jnthn: haha of course, thanks :)

[16:04] *** Altai-man_ joined
[16:06] *** sena_kun left
[16:16] <atroxaper> jnthn: Is there a way to access to Perl6::Grammar from a script? I wanted to use it with my own Actions.

[16:18] *** Guest38485 left
[16:19] *** Xliff left
[16:19] <moritz> I don't think so, except through EVAL

[16:21] <atroxaper> moritz: what do you mean "through EVAL"?

[16:22] <jnthn> atroxaper: You may well find that it depends on some side-effects performed by the actions to work in general, though nothing stops you subclassing them and calling up to them.

[16:22] <jnthn> And also doing your own thing.

[16:22] <jnthn> m: use Perl6::Grammar:from<NQP>; use Perl6::Actions:from<NQP>; class MyActions is Perl6::Actions { method integer(Mu $/) { $/.Str.say; callsame; } }; Perl6::Grammar.parse("42", actions => MyActions)

[16:22] <camelia> rakudo-moar f608a7a41: OUTPUT: «42␤»

[16:22] <jnthn> m: use Perl6::Grammar:from<NQP>; use Perl6::Actions:from<NQP>; class MyActions is Perl6::Actions { method integer(Mu $/) { say "actions says " ~ $/.Str; callsame; } }; Perl6::Grammar.parse("42", actions => MyActions)

[16:22] <camelia> rakudo-moar f608a7a41: OUTPUT: «actions says 42␤»

[16:22] <jnthn> Just to show it's really there :)

[16:23] <jnthn> Note that you'll be dealing with NQP match objects, however.

[16:23] <lizmat> .oO( computer says "yes" )

[16:24] <atroxaper> jnthn: wow! I didn't know about :from<NQP> way. Thank you.

[16:39] *** Xliff joined
[16:40] *** hythm joined
[16:47] *** rbt joined
[16:58] *** caterfxo joined
[17:01] *** vrurg left
[17:02] *** vrurg joined
[17:05] *** wildtrees joined
[17:06] *** vrurg left
[17:08] *** wamba joined
[17:13] *** vrurg joined
[17:13] *** Ven_de_Thiel left
[17:14] *** Kaiepi left
[17:15] *** Kaiepi joined
[17:17] *** vrurg left
[17:18] *** hythm left
[17:24] *** Xliff left
[17:34] *** atroxaper left
[17:38] *** Xliff joined
[17:39] <Xliff> Getting this from OO::Monitors

[17:39] <Xliff> Could not find Test::Counter at line 2 in:

[17:39] <Xliff> Cannot find Test::Counter in zef

[17:40] *** lucasb joined
[17:47] *** Kaiepi left
[17:49] *** Kaiepi joined
[18:05] *** sena_kun joined
[18:06] *** Altai-man_ left
[18:20] *** shinobicl joined
[18:20] <shinobicl> hello!!!!I am happily accepting the #raku name :)  (I would also happily accepting the removal of ":D" declarations hehe)So my first question is.. how this affects the syntax and naming for modules? .rak and .ram instead of .p6 and .p6m?

[18:22] <lizmat> .pm6 you mean ?

[18:22] <lizmat> .raku for scripts, and .rakumod for modules

[18:23] <lizmat> but don't worry, the old extensions will continue to work for quite a long time in the future

[18:23] <shinobicl> i need to ask this: Is there a schism about the name change?

[18:26] <sena_kun> not really

[18:26] <lizmat> well, about a year ago I very much against it, and in August I suggested it, and now I'm getting used to it

[18:26] <lizmat> *wqas

[18:26] <lizmat> *was

[18:26] <lizmat> grrr

[18:27] <tadzik> I didn't like it at first, now I'm fond of it :)

[18:27] <tadzik> but I also haven't adjusted to it myself in any way: my software works just as it did before

[18:27] *** AlexDaniel left
[18:27] <shinobicl> i like it the new name. I will start using #raku from now on. I was thinking on creating a Raku api for coinbase and i will start with the naming. Probably i will convert my 2 modules to the new naming.

[18:27] <tadzik> nice :)

[18:27] <shinobicl> 2 public modules i mean.

[18:27] *** AlexDaniel joined
[18:28] *** AlexDaniel left
[18:28] *** AlexDaniel joined
[18:29] *** ufobat left
[18:32] *** wamba left
[18:36] <shinobicl> so, there is a "requests" module for python. Which one would be "the" REST request modules for Raku today?

[18:37] <tadzik> probably something from Cro

[18:37] <lizmat> not sure what "requests" does, but REST means Cro to me

[18:37] <lizmat> cro.services

[18:37] <tadzik> https://cro.services/docs/reference/cro-http-client

[18:37] <tadzik> lizmat: requests is basically a highlevel LWP

[18:37] <shinobicl> https://2.python-requests.org/en/master/

[18:37] <tadzik> but not quite WWW::Mechanize

[18:42] <shinobicl> How far the name change goes? The package is still perl6? the compiler?

[18:45] <Xliff> The compiler is, and always has been, "rakudo"

[18:45] <Xliff> There will be a "raku" and a "perl6" alias, moving forward.

[18:51] *** pmurias left
[18:56] *** MasterDuke left
[19:05] *** vrurg joined
[19:18] *** pmurias joined
[19:45] *** wildtrees left
[19:46] *** pmurias left
[19:52] *** pmurias joined
[19:53] *** vrurg left
[19:53] *** vrurg joined
[19:58] *** vrurg left
[20:04] *** Altai-man_ joined
[20:06] *** sena_kun left
[20:12] *** Kaiepi left
[20:17] *** Kaiepi joined
[20:24] *** cpan-raku left
[20:25] *** cpan-raku joined
[20:25] *** cpan-raku left
[20:25] *** cpan-raku joined
[20:28] <El_Che> so, we have a release?

[20:29] <lizmat> yes, we haz a release

[20:29] <El_Che> nize

[20:40] *** rindolf left
[20:42] *** joule left
[21:14] <chloekek> shinobicl: could you elaborate on the removal of :D? Is a proposal for this written down somewhere?

[21:16] <El_Che> I am creating pkgs, including relocatable ones

[21:16] <El_Che> question, I see now bin/rakudo is created

[21:16] <El_Che> is it also the case for raku?

[21:17] <El_Che> so I can remove that

[21:17] <El_Che> (the aliases I created manually)

[21:20] <El_Che>  + Added `raku` and `rakudo` executables [5090206d][ab0a6d61]

[21:20] <El_Che> never mind :)

[21:20] <El_Che> \o/

[21:23] <Altai-man_> El_Che++

[21:32] <shinobicl> Lol... no... i just found it looks ugly :)  I understand the need for it though

[21:34] <El_Che> shinobicl: I am also confused by it, even if I understand what it is

[21:35] <shinobicl> i would prefer an "is value-object" or something similar

[21:36] <shinobicl> or whatever terms applies better or raku

[21:37] <Xliff> shinobicl: Where is this discussion stemming from?! 

[21:37] <Xliff> I also think the type smileys are a little off-putting.

[21:37] <Xliff> Doesn't stop me from using them, tho.

[21:44] * jnthn wonders why, when colonpairs are essentially *everywhere* in the language, this particular use of them attracts attention

[21:44] <shinobicl> Ahh from nowhere in particular. I just mentioned that the smileys looked confusing. I mean.. people hop from language to language very frequently these days, and in general is very simple to read a program written in another language without too much effort, and this looks too strange, even for perl6 standards. Particularly because it is

[21:44] <shinobicl> everywhere! But this is just my opinion.

[21:45] <jnthn> I guess it's the only common case where the letter after the : is capitalized

[21:53] *** hythm joined
[21:55] <El_Che> 1 bin/ script [zef] installed to:

[21:55] <El_Che> /opt/rakudo-pkg/share/perl6/core/bin

[21:55] <El_Che> zef installs to share/perl6?

[21:55] <El_Che> is that not changed or it's self that decides that?

[21:56] <jnthn> Probably not changed, and probably will need some careful thought on how to do.

[21:57] * hythm likes the type smileys :D

[21:59] *** finanalyst joined
[22:05] *** sena_kun joined
[22:07] *** Altai-man_ left
[22:10] *** pmurias left
[22:12] *** AlexDani` joined
[22:13] *** AlexDaniel left
[22:20] <El_Che> jnthn: thx

[22:22] *** wildtrees joined
[22:25] <xkr47> weeh added readline support to my calculator

[22:27] <El_Che> jnthn: it is sane/difficult/get-out-of-here to add readline in core compared to a module?

[22:27] <El_Che> people seem to strugle sometimes with the C deps

[22:27] <El_Che> certainly when distros upgrade de lib versions

[22:28] *** hythm left
[22:31] *** wamba joined
[22:33] <El_Che> AlexDaniel`: just did a 32-bit relocatable build and it passed all the tests from the 1st time. This is what I call progress :)

[22:37] *** vrurg joined
[22:39] <sena_kun> in a regex, do I write `/<-[. .. z]>/` or `/<-[\. .. z]>/`? inb4: use codes

[22:40] <sena_kun> m: say 'a' ~~ /<-[. .. z]>/;

[22:40] <camelia> rakudo-moar f608a7a41: OUTPUT: «Nil␤»

[22:42] *** vrurg left
[22:47] <sena_kun> just `.` is enough...

[22:56] <xkr47> what do you want?

[22:56] <xkr47> a character range?

[22:57] <xkr47> is <-[    ]> a negative range? like everything except?

[23:03] *** stoned75 joined
[23:07] *** stoned75_ joined
[23:16] <AlexDani`> El_Che: before or after it was moved? :D

[23:17] *** AlexDani` is now known as AlexDaniel

[23:17] *** AlexDaniel left
[23:17] *** AlexDaniel joined
[23:17] <cpan-raku> New module released to CPAN! Method::Also (0.0.4) by 03ELIZABETH

[23:34] <jnthn> xkr47: Yes; and <+[   ]> is a positive one (the same as <[   ]> on its own, but then you can add and subtract, like <[\w]-[aeiou]>

[23:34] <jnthn> )

[23:35] <jnthn> El_Che: We did once have linenoise in MoarVM, and that wasn't really ideal in that then every backend was expected to provide it, plus we only provided a "read interactive" op, which meant we only gave a fraction of the functionality. So really a NativeCall binding is the easiest way.

[23:36] <jnthn> El_Che: The reliable but frowned upon thing is to ship the source with the binding and compile it at install time and load *that*, ignoring any system version. ;)

[23:37] <El_Che> mm

[23:37] <jnthn> El_Che: Actually originally in MoarVM I decided that I'd just submodule + static link every C-level dependency into the VM. It was lovely...until we got to Debian packaging. :)

[23:38] <El_Che> Is it correct that rakudo is a binary and raku a syslink?

[23:38] <El_Che> it seems to be broken on relocatable builds

[23:38] <El_Che> jnthn: lol, debian :)

[23:39] <jnthn> I think nine++ discovered a problem with the symlink + packaging today also.

[23:39] <El_Che> I'll work around it

[23:39] <El_Che> funny thing is that I added the raku systemlink myself

[23:39] <El_Che> and it broke because rakudo provided

[23:39] <El_Che> so I removed it :)

[23:40] <jnthn> El_Che: Well, I can understand/respect debian's position on this, I guess. Mostly mentioning it because a "bundle the thing and build it" is probably package-hostile.

[23:41] <El_Che> yeah, I mostly meant the functionality, eg link to it. What does python do for their repl?

[23:43] *** chloekek left
[23:44] *** sena_kun left
[23:45] <El_Che> besides the link, relocatable builds look fine

[23:46] <El_Che> alls my build pass

[23:46] <El_Che> will release tomorrow after running some extra tests

[23:49] <El_Che> making sure the broken link is not in the non relocatable builds

