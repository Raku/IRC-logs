[00:05] <zostay> Xliff: thx

[00:05] <tellable6> 2019-12-01T22:47:31Z #raku <Xliff> zostay https://zostay.com/category/posts/index.html --> Shouldn't sub foo be "put $val.value" ??

[00:05] <tellable6> 2019-12-01T22:48:19Z #raku <Xliff> zostay Also... great first article for your Advent! :D

[00:06] <zostay> Xliff: put performs .Str automatically, so put $val is equivalent to put $val.value in this case since $val.Str ~$.value

[00:12] *** patrickz joined
[00:16] <Xliff> zostay: oops! Forgot that method in my quick conversion here. 

[00:17] <Xliff> zostay: Hope you had a happy Thanksgiving! :)

[00:17] *** patrickb left
[00:17] <zostay> It was good. Eating left overs at the moment. Hope yours was great too!

[00:17] *** lucasb left
[00:17] <Xliff> Yep! LOL. Eating leftovers here, too. 

[00:28] *** wamba left
[00:31] * guifa really wants to make a fancy advent-calendar design for the page but he just doesn‚Äôt have the time :(

[00:36] * tobs still has so many round tuits from lizmat++ and a week of vacation ahead....

[00:49] *** patrickz left
[01:02] *** sena_kun left
[01:15] *** sena_kun joined
[01:16] *** stoned75_ left
[01:16] *** stoned75 left
[01:19] *** sena_kun left
[01:51] *** greppable6 left
[02:05] *** greppable6 joined
[02:13] *** skyl4rk_ joined
[02:15] *** skyl4rk left
[02:15] *** skyl4rk_ is now known as skyl4rk

[02:28] <guifa> vrurg: you around?

[02:28] <vrurg> guifa: somewhat

[02:28] * guifa just read your comment on github coercions

[02:29] <guifa> I admit ignorance on the effects but ‚Ä¶¬†would it be possible to have classes ‚Äúregister‚Äù coercion methods with each other?  I‚Äôm having to do that right now with LanguageTag extensions and it seems to work okay.

[02:29] <guifa> What I was thinking is

[02:30] <guifa> class B {¬†method any-name-works (A $source) is coercion-from(A) }

[02:31] <guifa> And then in A keep a list of pairs Type => method to use as the fallback, e.g, 

[02:32] <guifa> Source.^can("Dest") ?? Source.Dest !! Source.^coercers{‚ÄúDest‚Äù) 

[02:32] <vrurg> guifa: I guess it was your's issue a while ago which I can't find now.

[02:32] <vrurg> *yours

[02:33] <guifa> Yeah I was just redfactoring my code and even had mentioned you in the comments ha

[02:33] * guifa is alabamenhu on github

[02:34] <vrurg> It'd be nice if you link the issues to each other.

[02:34] <Xliff> vrurg: Ooh! You're alive.

[02:34] <Xliff> I haz a question.

[02:34] <Xliff> m: role NewRoleHOW { method incorporate_multi_candidates ($obj) { callsame; say 'HIII!'; }; }; role B { multi method a (Str $a) { say 'Str'; }; multi method a (Int $i) { say 'Int'; }; }; class A does B { }; BEGIN { A.HOW does NewRoleHOW; B.HOW does NewRoleHOW; };

[02:34] <camelia> rakudo-moar f608a7a41: ( no output )

[02:34] <Xliff> vrurg: ^^ Why doesn't that work?

[02:35] <guifa> vrurg: is there a way I can link it as a non-admin?  In one of my comments I put in a link (and it shows up on the other issue)

[02:37] <vrurg> Xliff: kinda alive. Last few days is crazingly overloaded.

[02:38] <guifa> vrurg: https://github.com/perl6/problem-solving/issues/22 is the original issue

[02:39] <vrurg> Xliff: I'd need to trace it in the core. I didn't dig into MOP handling of multicandidates.

[02:40] <vrurg> guifa: Then I missed the link.

[02:41] <vrurg> m: role NewRoleHOW { method incorporate_multi_candidates ($obj) { callsame; say 'HIII!'; }; }; role B { multi method a (Str $a) { say 'Str'; }; multi method a (Int $i) { say 'Int'; }; }; BEGIN { A.HOW does NewRoleHOW; B.HOW does NewRoleHOW; }; class A does B { };

[02:41] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    A used at line 1‚ê§‚ê§¬ª

[02:41] <Xliff> vrurg: jnthn++ said something about doing that in ClassHOW?

[02:42] <Xliff> I don't know why I'd need to do it there....

[02:43] <vrurg> Xliff: Basically, the first problem I spot there is the you apply role to the class BEFORE applying NewRoleHOW. So, incorporate_multi_candidates is already executed by the time your BEGIN gets ran.

[02:44] <Xliff> vrurg: You sure? The BEGIN block should run before "class A does B {}"

[02:44] <Xliff> m: role NewRoleHOW { method incorporate_multi_candidates ($obj) { callsame; say 'HIII!'; }; }; role B { multi method a (Str $a) { say 'Str'; }; multi method a (Int $i) { say 'Int'; }; }; BEGIN { A.HOW does NewRoleHOW; B.HOW does NewRoleHOW; class A does B { }; };

[02:44] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Illegally post-declared type:‚ê§    A used at line 1‚ê§‚ê§¬ª

[02:45] <Xliff> m: role NewRoleHOW { method incorporate_multi_candidates ($obj) { callsame; say 'HIII!'; }; }; multi method a (Int $i) { say 'Int'; }; }; BEGIN { A.HOW does NewRoleHOW; B.HOW does NewRoleHOW; role B { multi method a (Str $a) { say 'Str'; };  class A does B { }; };

[02:45] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´5===SORRY!5===‚ê§Unexpected closing bracket‚ê§at <tmp>:1‚ê§------> 3multi method a (Int $i) { say 'Int'; }; 7‚èè5}; BEGIN { A.HOW does NewRoleHOW; B.HOW ‚ê§Other potential difficulties:‚ê§    Useless declaration of a has-scoped multi-method in‚Ä¶¬ª

[02:45] <vrurg> Xliff: this is definitely the case because incorporate_multi_candidates is being called by ClassHOW compose. That's why you better apply NewRoleHOW in a trait which is ran after the class is created but before it is composed.

[02:45] <Xliff> Ahh! Yes. That is how it is being done in my external. My example did not cover that.

[02:45] <Xliff> Will try.

[02:45] <vrurg> Xliff: class A does B { } doesn't actually run. It's a declaration which is being compiled. 

[02:46] <vrurg> Event the body block of the class is being ran at compile time. In this manner it's like a BEGIN block.

[02:47] <vrurg> guifa: Back to the coercions. Registering them in a hash was a thing I thought about. But it'd be rather slow. What could actually be done is a cache provided by MoarVM, similarly to method and typecheck caches we already have.

[02:48] <vrurg> guifa: But we'd need to convince jnthn that this has to be done. 

[02:48] <Xliff> m: role NewRoleHOW { method incorporate_multi_candidates ($obj) { callsame; say 'HIII!'; }; }; multi sub trait_mod:<is> (Mu \o, :$mine) { o.HOW does NewRoleHOW; }; role B { multi method a (Str $a) { say 'Str'; }; multi method a (Int $i) { say 'Int'; }; }; class A is mine does B { };

[02:48] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´HIII!‚ê§¬ª

[02:48] <Xliff> \o/

[02:49] <Xliff> Now need this to work for Roles instead of Classes

[02:49] <vrurg> Xliff: üëçüèª

[02:49] <vrurg> Xliff: it won't. 

[02:49] <Xliff> So better this is done to a class?!?

[02:49] <guifa> Indeed.  I‚Äôm glad the discussion is being had ‚Äî¬†coercion in both directions is an important thing for the Foo() autocoercion, but I get that it has to be done very delicately

[02:50] <Xliff> vrurg++: It's a place to start.

[02:50] <vrurg> Xliff: eventually, you do need it on a class. No matter if it's a puned role.

[02:50] <Xliff> OK.

[02:51] <Xliff> vrurg: Do you know how to get the ParametricRoleHOW objects from a ParametricRoleGroupHOW?

[02:51] <Xliff> Or even from an object that puns the ParametricRoleHOW?

[02:51] <vrurg> Xliff: incorporate_multi_candidates really seems to be a good place to plug yourself into. This is the point where all methods are already fixed in place.

[02:53] <vrurg> Xliff: Not sure you really need this, but R.^candidates gives you a list of ParametricRoles.

[02:55] <vrurg> .^roles on a pun returns the group it's being created from. But .^concretizations gives you ConcreteRoleHOW.

[02:57] * guifa just pushed a massive update to LanguageTag

[02:57] <Xliff> vrurg++: .^candidates it is!!!

[02:58] <guifa> https://github.com/alabamenhu/BCP47

[02:58] <vrurg> Xliff: on a pun?

[02:59] <Xliff> vrurg: No. On a ParametricRoleGroupHOW.

[02:59] <vrurg> Hm, and appveyour is still playing bad... :(

[03:00] <Xliff> vrurg: Main problem... when defining a role, $*PACKAGE.HOW is a ParametricRoleHOW

[03:00] <Xliff> When accessing role.HOW it is a ParametricRoleGroupHOW

[03:00] * guifa mentions vrurg here: https://github.com/alabamenhu/BCP47/blob/3d41cecc46782cfb65b24a7140fc8a4fd52a4df9/lib/Intl/LanguageTag.pm6#L256 :-)

[03:01] <Xliff> When I am punning roles in Method::Also, I need access to the ParametricRoleHOW, not the ParametricRoleGroupHOW.

[03:01] <vrurg> Xliff: sure. When a role is being defined we're in it's namespace. This is what $*PACKAGE reflects.

[03:01] <Xliff> I don't know why this worked until recently.

[03:01] <Xliff> vrurg: Ah. Yes. I didn't know that until now. :/

[03:02] <vrurg> Xliff: I think `Method::Also` must postpone installation of a method until a role is being applied to a class. This is same about the punning which is creation of an empty class an applying the role to it.

[03:03] <vrurg> guifa: thanks! :)

[03:04] <Xliff> vrurg: Which is exactly what I am trying to do. I may be overthinking the mechanism, tho.

[03:06] <vrurg> Xliff: there is one problem: a ClassHOW doesn't report back to a role when it gets applied. But prior to applying a role is specialized with method `specialize`.

[03:07] <Xliff> vrurg: Yes. I was using an override to do that work, initially.

[03:07] <vrurg> Xliff: you could use it because specialize knows both the role and the type object it's being applied to.

[03:07] <Xliff> Somehow now, the ParametricRoleHOW.specialize was never getting called.

[03:08] <Xliff> Which is why I need to override incorporate_multi_candidates

[03:08] <Xliff> Again... my understanding of all this could be incredibly faulty and there's a better way to do all this.

[03:08] <vrurg> Xliff: then most likely you did something wrong. Perhaps applied your HOW after the role was composed.

[03:08] <Xliff> But right now, Method::Also is broken... meaning my GTK projects are all broken.

[03:09] <Xliff> vrurg: I wouldn't be surprised.

[03:13] <vrurg> Though I'm wrong here too. It could only happen if the class has been composed. It's ok to apply your HOW after the role composition because specialize isn't been called anywhere else.

[03:15] <Xliff> k

[03:15] <Xliff> vrurg: You going to be around for a bit?

[03:15] <Xliff> I need to switch gears and go back to Method::Also. Get my changes committed so you can take a look.

[03:15] <vrurg> Perhaps for another 40-45mins

[03:16] <Xliff> Better hurry, then!

[03:16] <vrurg> But can promise you nothing because I'd like to focus on a new project.

[03:16] <Xliff> .oO( Back, GIMP PDB bindings... back! )

[03:16] <Xliff> vrurg: Just a quick look then. Don't want to take you away from that.

[03:17] <vrurg> BTW, I'm trying to implement a simplistic UI based on Terminal::Print.

[03:17] <Xliff> Oh, neat!

[03:17] <guifa> If I rename a repository on github, will that destroy zef?

[03:18] <vrurg> guifa: I think it would work for a while. github redirects to new repos.

[03:18] <vrurg> The questions is for how long it'd happen.

[03:19] <guifa> vrurg++ I was reading that it redirects but didn‚Äôt know for how long.  I can‚Äôt imagine too many people using LanguageTag yet though

[03:19] <guifa> With all the refactoring I did I even went ahead and upped the api in the META6, just as a precaution

[03:19] <Xliff> vrurg: This is the current implementation -- https://github.com/Xliff/Method-Also/blob/master/lib/Method/Also.pm6

[03:20] <Xliff> AliasableRoleHOW.specialize is never getting called.

[03:20] <vrurg> Xliff: I'm off helping my wife in her business. Will be back in a while.

[03:20] <Xliff> vrurg: OK. No worries. Oh! Still trying to work on MWS too...

[03:20] <Xliff> I may end up getting that resource through $dayJob so...

[03:21] <Xliff> If you could write up what you need from it when you get the chance..... 

[03:31] <cpan-raku> New module released to CPAN! HTTP::Headers (0.5.0) by 03HANENKAMP

[03:34] <vrurg> Xliff: I had to postpone the project. Yet, I'm still looking forward to see you in person. That'd be perhaps the best time to discuss it. :)

[03:36] <vrurg> Xliff: BTW, I'd recommend you instead of using $*PACKAGE.HOW all over around do `my \PHOW := $*PACKAGE.HOW` and use PHOW. This would positively affect the compilation times.

[03:40] <Xliff> vrurg: OK. Cool!

[03:41] <Xliff> Mutherf(*&*&!

[03:41] <Xliff> Simple fix... punning the role to a CLASS. 

[03:42] <Xliff> Was working because of a bug that I recently "fixed" LOL!

[03:45] <vrurg> So, you found the cause?

[03:45] <Xliff> Yeah.

[03:45] <Xliff> https://github.com/Xliff/Method-Also/blob/master/lib/Method/Also.pm6#L61 <- That was the "bug" ... and the fix.

[03:46] <Xliff> Note that my version already has $*PACKAGE.HOW aliased... that's not been committed, yet.

[03:47] <vrurg> Xliff: there is a problem in the code, as it seems to me. First, you register aliases on a class. Then you pass it up to the parent and this is when `specialize` gets called.

[03:47] <Xliff> Everything might need to be reorganized, in light of this discussion.

[03:48] <vrurg> Xliff: I didn't analyze any further, but if you rely on the order this might be a problem.

[03:48] <Xliff> First.. MUST be able to do this in a class, since "is also" needs to work on method both in a class and in a role.

[03:48] <Xliff> If the trait is applied in a class, then it can all be done via .compose

[03:48] <Xliff> If it is done via a role, then more work is required.

[03:51] <vrurg> I'm trying to think of a best path. What was the problem with multi-candidates?

[03:51] <Xliff> If a proto was defined in a role with an alias, it only got applied to the proto

[03:51] <Xliff> Nothing else got it since the role had no idea what its candidates were going to be.

[03:52] <Xliff> Hence the need for late application.

[03:52] <vrurg> Aha... Right, of course.

[03:53] <Xliff> So in actuality, there is no need for AliasableRoleHOW. It can all go in to AliasableClassHOW

[03:53] *** cpan-raku left
[03:54] <vrurg> (I'd be now thinking aloud) Since there is one instance of HOW per a role, one could keep the hash of aliases in an HOW's attribute. 

[03:55] <Xliff> Hmmm... that's a better idea!

[03:56] <vrurg> Then, when specialize is being called, you'd have to walk the recorded aliases and install them on the second argument of `specialize`. 

[03:56] *** cpan-raku joined
[03:56] *** cpan-raku left
[03:56] *** cpan-raku joined
[03:57] <vrurg> What could happen at this point is that if the class doesn't have a proto for the multi from the role you'd have nothing to anchor your alias to. On the other hand, RoleToClass applier will install Role's proto on the class.

[03:58] <Xliff> I would consitute that as a bug.

[03:58] <Xliff> Role would need a proto to install an alias, or the alias would be on the methods.

[03:58] <vrurg> So, basically, having the proto in the role is enough to get it in the class if it's not there. Otherwise handwork would be required to add the alias. The good point: 'specialize' is the place for the work because RoleToClass applier is not done yet.

[03:59] <vrurg> Xliff: as soon as you declare a multi you get a proto for it if it's not explicitly declared.

[03:59] <Xliff> Ah.

[03:59] <vrurg> So, you should not worry about that. For your purpose the proto will always be there.

[04:00] <vrurg> I think, the particular implementation is likely to reveal other problems, but that's where I'd start with.

[04:01] <Xliff> OK

[04:02] <vrurg> Xliff: don't forget another thing as this might sting back unexpectedly: the actual thing which is applied to class is ConcreteRoleHOW. This is what you get back from `specialize`. I don't think it would matter in your case, but it'd rather confusing if it would.

[04:03] <Xliff> Um. OK.

[04:03] * vrurg is terrified with how roles are designed but understands that there is no other way.

[04:04] <Xliff> Ah. 

[04:04] <Xliff> Good to know.

[04:05] *** wtwt5237 joined
[04:05] *** wamba joined
[04:06] <vrurg> jmerelo asked if I can write an article. Perhaps, I should try writing something about MOP, but how many people would be interested in it?? In an advent calendar..

[04:06] * Xliff raises hand.

[04:07] <wtwt5237> hello, guys. May I get your advice on how to best do web programming in raku? Should I learn Cro or Bailador? I don't know too much about web programming in general

[04:07] <Xliff> wtwt5237: As I understand it, Bailador is dead.

[04:07] <Xliff> You may still be able to use it, but any bugs you find you'd have to fix yourself. The person to ask about that is ufobat

[04:08] *** normanr__ left
[04:08] <Xliff> You'd be safer off with Cro, as that is actively maintained.

[04:09] *** wtwt523746 joined
[04:09] <wtwt523746> is there any good cro tutorial?

[04:09] <vrurg> I see that ufobat done a few commits over the 2019. So, it's not that dead after all, perhaps. But not very much alive.

[04:09] <Xliff> Morphine maintenance drip, then.

[04:09] <vrurg> wtwt523746: https://cro.services/

[04:10] <wtwt523746> thanks! is there something that is more detailed than this? I myself don't know too much about web programming, so I guess I need to have a book that is somewhat more friendly to new people?

[04:11] <Xliff> Not really. Most of the lessons you find about web programming in one language can be readily converted to Raku, though.

[04:11] <Xliff> Do read up on the section about Cro's routes. That's the big thing.

[04:11] <wtwt523746> ok. i see. thanks!

[04:11] <Xliff> yw!

[04:12] <Xliff> Seriously... if someone would tell me what makes a decent web framework, I'd write the thing myself. :/

[04:12] *** wtwt5237 left
[04:14] * vrurg failed to achieve today's goals. Perfect... :D

[04:14] <vrurg> cu guys!

[04:25] *** wtwt523746 left
[04:27] <Xliff> Shit... was not the fix. Misread the load of output.

[05:01] *** wamba left
[05:14] <cpan-raku> New module released to CPAN! HTTP::Supply (0.5.0) by 03HANENKAMP

[05:18] *** rindolf joined
[06:10] *** wamba joined
[06:13] *** stoned75 joined
[06:14] *** stoned75_ joined
[06:16] *** jmerelo joined
[06:16] <jmerelo> Check out today's tutorial by sena_kun https://rakuadventcalendar.wordpress.com/2019/12/02/crud-cro-http-tutorial/

[06:17] <jmerelo> As seen in Slashdot https://slashdot.org/story/19/12/01/236222/2019-sees-more-geeky-advent-calendars

[06:19] <Xliff>  LOL!

[06:19] * Xliff used to post for Slashdot.

[06:29] *** wamba left
[06:33] *** robertle left
[06:33] *** sena_kun joined
[06:34] <guifa> jmerelo++ 

[06:35] <guifa> I‚Äôm still going to do a bit more reorganizing on the draft, but have to finish writing a final and a conference presentation (si est√°s en Aveiro o LIsboa este fin de te invito a una copa)

[06:37] <jmerelo> guifa: thanks for the offer, I'm in the same peninsula, but a bit far :-)

[06:37] <jmerelo> I'll check it out anyway

[06:53] *** Summertime joined
[07:01] *** sena_kun left
[07:08] *** rindolf left
[07:18] *** stoned75_ left
[07:19] *** stoned75 left
[07:28] *** jmerelo left
[07:49] *** wamba joined
[08:01] *** wamba left
[08:05] *** wamba joined
[08:34] *** xinming_ joined
[08:37] *** xinming left
[08:44] <Geth> ¬¶ problem-solving/CoC: f811de269c | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[08:44] <Geth> ¬¶ problem-solving/CoC: Missed "sexual orientation"

[08:44] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/f811de269c

[08:55] *** mid_home left
[09:14] *** abraxxa joined
[09:16] *** abraxxa left
[09:16] *** abraxxa joined
[09:40] *** abraxxa left
[09:41] *** abraxxa joined
[09:43] *** wamba left
[09:46] <sarna> .tell lizmat we're still missing "technical knowledge/background"

[09:46] <tellable6> sarna, I'll pass your message to lizmat

[09:50] *** wamba joined
[10:02] *** finanalyst joined
[10:02] <sarna> anyone doing advent of code this year?

[10:05] *** abraxxa left
[10:06] *** abraxxa joined
[10:08] *** wamba left
[10:09] *** wamba joined
[10:14] *** scimon joined
[10:15] <scimon> Ooops.... Sorry I got confused and published my advent article early. Reverted it and managed to schedule it for Thursday but the RSS feed got picked up :( Doh. Sorry.

[10:19] <tadzik> :D

[10:19] <tadzik> a preview!

[11:12] *** finanalyst left
[11:16] *** sarna left
[11:27] *** sarna joined
[11:32] *** mid_laptop joined
[11:42] *** abraxxa left
[11:42] *** abraxxa joined
[11:43] <Geth> ¬¶ problem-solving/CoC: 7004eccec9 | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[11:43] <Geth> ¬¶ problem-solving/CoC: Add "technical background"

[11:43] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/7004eccec9

[11:43] *** rindolf joined
[11:43] *** matiaslina left
[11:43] *** CIAvash left
[11:43] *** wamba left
[11:47] *** finanalyst joined
[11:48] *** joule joined
[11:49] *** CIAvash joined
[11:49] *** matiaslina joined
[11:55] *** wamba joined
[11:59] *** mid_laptop left
[12:15] <tbrowder> sena_kun: excellent article! (but i was confused by the name on it, thnx jmerelo)

[12:15] <tellable6> tbrowder, I'll pass your message to sena_kun

[12:17] <tbrowder> um, what determines the author's name that shows up on the article?

[12:17] <tbrowder> jmerelo: ?? ^^

[12:17] <tellable6> tbrowder, I'll pass your message to jmerelo

[12:18] <lizmat> it's the login name they have on Wordpress, afaik

[12:26] *** normanrockwell joined
[12:36] *** wamba left
[12:37] *** lucasb joined
[12:40] *** libertas is now known as Guest90798

[12:41] *** libertas joined
[12:51] *** normanrockwell left
[13:00] *** finanalyst left
[13:20] *** abraxxa left
[13:20] *** abraxxa joined
[13:40] *** veesh_ joined
[13:41] *** ManDeJan joined
[13:42] *** veesh left
[13:43] *** veesh_ is now known as veesh

[13:43] *** pmurias joined
[13:43] <pmurias> [Coke]: hi

[13:48] <tbrowder> thnx for hint lizmat, it's the "display name" in one's profile

[13:50] *** abraxxa left
[13:51] *** abraxxa joined
[13:51] <[Coke]> pmurias: I've been reaching out to some core people to get feedback on the JS port, but have gotten no response. Can you recommend any community members who can give feedback?

[13:51] <tellable6> 2019-11-30T14:41:10Z #raku-dev <lizmat> [Coke] looks like https://www.perlfoundation.org/contributor-license-agreement.html is dead

[13:51] *** abraxxa left
[13:51] *** abraxxa joined
[13:52] <ManDeJan> Hi everyone :)

[13:52] <ManDeJan> Is anyone else doing advent of code in raku?

[13:52] <lizmat> there's Sterling Hanenkamp doing one as well

[13:52] <[Coke]> .tell lizmat - it's up here.

[13:52] <tellable6> [Coke], I'll pass your message to lizmat

[13:53] <lizmat> ManDeJan: https://zostay.com/archive/2019/11/24/sterling-s-2019-raku-async-concurrency-advent-calendar.html

[13:57] <ManDeJan> Nice blog :)

[13:57] <lizmat> ja, goed he ?

[13:58] <[Coke]> lizmat: I didn't do anything to the site, just clicked the link when I saw the message here.

[13:59] <lizmat> https://raku.guide/nl/   # dutch intro into Raku

[14:05] <AlexDaniel> [Coke]: It does work, yeah. However: https://colabti.org/irclogger/irclogger_log/raku?date=2019-11-30#l349

[14:05] <eiro> o/ everyone

[14:06] <AlexDaniel> [Coke]: that is, there's no easy way to get a PDF

[14:06] <AlexDaniel> eiro: o/

[14:07] *** wamba joined
[14:08] <lucasb> ManDeJan: I'm doing AoC in Perl 5 :)

[14:09] <eiro> lucasb: s/Perl 5/Perl :)

[14:09] <eiro> i did the 3 first challenges with raku but have no time 

[14:10] <ManDeJan> lucasb: Do you post your solutions anywhere? I'm interested in comparing :)

[14:10] <ManDeJan> Mine are here https://github.com/ManDeJan/advent-of-code-2019

[14:11] <ManDeJan> I'm new to Raku so comments/feedback would be appreciated 

[14:13] <[Coke]> AlexDaniel: added a ticket for the TPF site to add the PDF back

[14:13] <lizmat> ManDeJan: you don't need the \ anymore

[14:13] <lizmat> m: say "42"   .Int   # works fine

[14:13] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´42‚ê§¬ª

[14:14] <AlexDaniel> m: say "42"   .      Int

[14:14] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´42‚ê§¬ª

[14:15] <lucasb> ManDeJan: I don't usually post them, but here there are, day 1 & 2: https://gist.github.com/lucasbuchala/528aec8565b101d9781db8f79e89f473

[14:15] <lucasb> ManDeJan: thanks for sharing yours! keep going. :)

[14:15] <ManDeJan> I'll try! :)

[14:16] <ManDeJan> lucasb: thanks for sharing

[14:17] <lucasb> ManDeJan: if you wanna join my leaderboard, code is 169430-b1c331b2 

[14:19] <ManDeJan> lucasb: sure!

[14:20] <pmurias> [Coke]: jnthn seems like the obvious person to ask, but I guess you already did that

[14:21] <pmurias> [Coke]: timotimo has used 6pad in his advent posts

[14:21] <eiro> ManDeJan: those are my raku solutions https://github.com/eiro/p6-scripts/tree/master/aoc19

[14:22] *** sena_kun joined
[14:22] <eiro> the 1st day for a total of 4 lines of code :)

[14:23] *** normanrockwell joined
[14:23] *** normanrockwell left
[14:23] *** normanrockwell joined
[14:24] <eiro> i realized that the given block is in sink context so you can't write something like  my $output = do given $input {¬†...

[14:29] <sarna> ManDeJan: how do you run your solutions?

[14:29] <ManDeJan> sarha: perl6 2.p6 < input.txt

[14:30] <ManDeJan> sarna: *

[14:30] <sarna> ManDeJan: oh, thanks :)

[14:35] *** guest42 joined
[14:36] <pmurias> [Coke]: what sort of feeback are you looking in for particular? on the details of how it's integrated into rakudo or will anything from community members help?

[14:41] *** sena_kun left
[14:43] *** mid_laptop joined
[14:46] <sarna> what's the equivalent of the map function in raku?

[14:48] <sarna> oh, there is map.. I just had to scroll down

[14:50] *** Xliff left
[14:57] <[Coke]> at this point, any feedback would be helpful, either technical or as a user.

[14:57] <Doc_Holliwood> m: say sprintf "%04.2f", 1.222

[14:57] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´1.22‚ê§¬ª

[14:58] <Doc_Holliwood> how the heck to i pad a float with zeroes?

[14:58] <Doc_Holliwood> m: say sprintf "%04d", 12

[14:58] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´0012‚ê§¬ª

[14:59] <Doc_Holliwood> i mean, this works. why doesn't my first attempt?

[15:03] <Geth> ¬¶ problem-solving/CoC: 76c6378df8 | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[15:03] <Geth> ¬¶ problem-solving/CoC: Remove some leftover pod thingies

[15:03] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/76c6378df8

[15:06] <sarna> m: say sprintf "%05.2f", 1.222

[15:06] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´01.22‚ê§¬ª

[15:06] *** lgtaube left
[15:09] *** zeylos left
[15:10] *** zeylos joined
[15:12] <Doc_Holliwood> aaaah kay

[15:24] <pmurias> lizmat: would it be possible that I'm looking for rakudo.js feedback for the grant in the weekly?

[15:25] <lizmat> sure, how would people give the feedback ?

[15:28] *** normanro_ joined
[15:29] <pmurias> lizmat: maybe I should write a short blog post asking for feedback and have it in the comments?

[15:29] <[Coke]> maybe on comments on the last blog post?

[15:29] <[Coke]> or a special one, +1

[15:30] <lizmat> pmurias: if it's a blog post on blogs.perl.org to comment on, I would deem than to not be a good idea

[15:31] <lizmat> you need a login on blogs.perl.org to be able to comment, and even if you have that, it is not trivial to be able to make a comment

[15:31] <[Coke]> We could post something on news.perlfoundation.org looking for feedback.

[15:31] <lizmat> personally, I have given up on trying to comment on blogs.perl.org  :-(

[15:32] <lizmat> [Coke]: doesn't that suffer from the same issue?

[15:32] <lizmat> or does the new site use a different authentication scheme?

[15:32] *** normanrockwell left
[15:32] <[Coke]> the new site is its own thing, it's not tied to blogs.perl.org

[15:32] <lizmat> perhaps /r/rakulang on reddit ?

[15:39] *** wamba left
[15:41] *** normanro_ left
[15:43] <pmurias> lizmat: https://www.reddit.com/r/rakulang/comments/e50qqq/asking_for_rakudojs_grant_feedback/? - something like that

[15:44] <lizmat> yup

[15:44] <lizmat> that'll work!

[15:46] *** abraxxa left
[15:46] *** abraxxa joined
[15:52] *** wamba joined
[15:57] *** pmurias left
[16:05] <guest42> Is there a way to do a http post with the standard library or do I need to use a module?

[16:07] *** squashable6 left
[16:10] <lizmat> If you want to figure out all of the HTTP header stuff yourself, then you don't need a library

[16:10] <lizmat> if you don't, then you do

[16:10] *** squashable6 joined
[16:10] <lizmat> https://modules.raku.org/search/?q=HTTP  # options

[16:13] <guest42> was looking at WWW, but there are a lot of options. I don't really know a lot about http, but I have a piece of hardware that can be controlled through a rest api and just need something really simple. I did some proof on concepts using curl and need just need to send some really simple json.

[16:13] <lizmat> then probably Cro::HTTP::Client is what you want

[16:14] <guest42> ok. I will look that one up. thanks so much!

[16:15] <Geth> ¬¶ problem-solving/CoC: dfc986480a | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[16:15] <Geth> ¬¶ problem-solving/CoC: Added missed space

[16:15] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/dfc986480a

[16:27] *** guest42 left
[16:28] *** wamba left
[16:29] *** ManDeJan left
[16:29] <[Coke]> pmurias++

[16:43] *** lgtaube joined
[16:54] *** AlexDani` joined
[16:56] *** AlexDaniel left
[16:56] *** wamba joined
[16:56] <samebchase> https://stackoverflow.com/questions/18427157/how-to-partition-a-list-in-haskell Is there a standard library built-in to do this in Raku?

[16:58] <samebchase> Also, given a list X, how do we get n elements from it. Something like Haskell's "take" i.e. `take 4 list` should give me a list of 4 elements.

[16:59] <samebchase> I am looking through the documentation, but it seems to me that I will need to write my own. Just wondering if there is a better way.

[17:01] <lizmat> m: dd "foobar".comb(2)

[17:01] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´("fo", "ob", "ar").Seq‚ê§¬ª

[17:02] <lizmat> m: dd (1,2,3,4,5,6,7,8,9).batch(3)

[17:02] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´((1, 2, 3), (4, 5, 6), (7, 8, 9)).Seq‚ê§¬ª

[17:02] *** normanrockwell joined
[17:02] <lizmat> samebchase: could you please give us an idea how to improve the documentation, so that others like you won't have to get to the same conclusion?

[17:03] <lizmat> please make that an issue in the doc repository:

[17:03] <lizmat> https://github.com/raku/doc

[17:03] <lizmat> https://github.com/Raku/doc/issues/new   # to make a new issue

[17:05] <samebchase> Oh nice! I am coming from Clojure which has many of Haskell's sequence manipulating functions like take, partition etc. Perhaps, we could update the Haskell -> Raku page to show the names of the Raku counterparts.

[17:06] <samebchase> I'll see if I can find a good place for this information...

[17:06] * lizmat doesn't know enough Haskell for that

[17:06] <lizmat> a PR is also welcome  :-)

[17:06] <samebchase> :-)

[17:08] <Summertime> would be nice to have a short 1 line example next to each item in the table of contents for a given class

[17:08] <Summertime> (in blue) routine elems (in grey like a comment) (1,2,3,4).elems == 4

[17:09] <Summertime> would probably be a lot of re-working for the docs site though

[17:10] <samebchase> Also discoverd a routine called "rotor". Raku certainly has cool sounding names.

[17:12] <El_Che> roto takes your code ans shreds it to pieces

[17:13] <samebchase> And while using perl6-mode (Emacs), is there any way in which I can incrementally redefine functions and test them in a running REPL? For now, I am running "perl6 <file>.p6" repeatedly.

[17:14] <lizmat> rotor is a little more versatile

[17:14] <lizmat> m: dd (1,2,3,4,5,6,7).rotot( 2 => -1 )

[17:14] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´No such method 'rotot' for invocant of type 'List'. Did you mean any of these?‚ê§    roots‚ê§    rotate‚ê§    rotor‚ê§‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:14] <lizmat> m: dd (1,2,3,4,5,6,7).rotor( 2 => -1 )

[17:14] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´((1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7)).Seq‚ê§¬ª

[17:26] *** cpan-raku left
[17:27] *** cpan-raku joined
[17:27] *** cpan-raku left
[17:27] *** cpan-raku joined
[17:29] *** scimon left
[17:31] *** AlexDani` is now known as AlexDaniel

[17:31] *** AlexDaniel left
[17:31] *** AlexDaniel joined
[17:39] *** wamba left
[17:48] *** chloekek joined
[17:48] <cpan-raku> New module released to CPAN! Smack (0.5.1) by 03HANENKAMP

[17:49] <lizmat> And another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2019/12/02/2019-48-released-advent/

[17:49] *** mid_laptop left
[17:51] <AlexDaniel> squashable6: next

[17:51] <squashable6> AlexDaniel, The date for the next SQUASHathon is not set

[17:52] <AlexDaniel> squashable6: next

[17:52] <squashable6> AlexDaniel, The date for the next SQUASHathon is not set

[17:54] <AlexDaniel> come on squashable6 you can do it

[17:57] <AlexDaniel> squashable6 is refusing to cooperate!

[17:59] <uzl[m]> .tell tbrowder Great RAC article! I enjoyed reading it. Minor typos: "with any of the with the following", "affect the using Raku programs"

[17:59] <tellable6> uzl[m], I'll pass your message to tbrowder

[17:59] <AlexDaniel> squashable6: next

[17:59] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in 3 days and ‚âà10 hours (2019-12-07 UTC-12‚åÅUTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:00] <AlexDaniel> squashable6: thank you, could've said that right away‚Ä¶

[18:00] <squashable6> AlexDaniel, Anytime!

[18:01] *** sena_kun joined
[18:04] <discord6> <tmtvl> Shall I share the latest Weekly on the Facebook?

[18:05] *** normanrockwell left
[18:26] *** lil joined
[18:27] <lil> good evening

[18:27] <sena_kun> hi

[18:28] <lil> how i can build rakudo without zef?

[18:30] <sena_kun> lil: there are various helper scripts for that, for example, https://github.com/skaji/p6env or https://github.com/tadzik/rakudobrew or https://github.com/rakudup/rakudup.github.io

[18:30] <sena_kun> also you can use it from the sources if you want some digging in, but it is not necessary

[18:30] <sena_kun> each one of those does not contain zef by default

[18:31] <[Coke]> the compiler doesn't need zef - the star distro comes with it as the way to install modules.

[18:41] <lil> sena_kun: yay! thanks

[18:42] *** normanrockwell joined
[18:48] *** normanrockwell left
[18:50] *** wildtrees joined
[18:52] *** lil left
[18:56] *** wamba joined
[19:02] *** sena_kun left
[19:05] *** caterfxo joined
[19:08] <mspo> rename is a good opportunity tto clean up some of the confusing parts of the distro :)

[19:08] *** jmerelo joined
[19:11] <jmerelo> Visits to the Advent Calendar are really going through the roof

[19:11] <tellable6> 2019-12-02T12:17:26Z #raku <tbrowder> jmerelo: ?? ^^

[19:11] <tellable6> 2019-12-02T15:07:28Z #raku-dev <vrurg> jmerelo Could you contact me when online?

[19:12] <jmerelo> Much higher than last year, and last year we had some fractional number of visits through search engines and links to other years...

[19:12] *** wamba left
[19:12] *** mid_home joined
[19:13] <jmerelo> We're getting a few through this Spanish site. My advocacy in open source events seems to be paying off https://www.genbeta.com/web/chocolate-codigo-calendarios-adviento-para-programadores-geeks

[19:13] *** wamba joined
[19:13] <jmerelo> BTW, I've changed the frame-in-a-store picture in the header to one of Camelia in my kitchen sink

[19:14] <tbrowder> uzl[m]: thanks! and fixing 'minor' (not!) typo now....

[19:14] <tellable6> 2019-12-02T17:59:42Z #raku <uzl[m]> tbrowder Great RAC article! I enjoyed reading it. Minor typos: "with any of the with the following", "affect the using Raku programs"

[19:14] <jmerelo> Also, trying to find the way to change fonts an stuff as requested by tbroder. No luck, so far. Free Wordpress blog don't give you a lot of customization options...

[19:17] *** caterfxo left
[19:19] *** sena_kun joined
[19:36] *** rindolf left
[19:39] *** rindolf joined
[19:45] *** pmurias joined
[19:45] <tbrowder> uzl[m]: i think "affect the using Raku programs is correct" albeit a bit stilted

[19:50] *** rindolf left
[19:50] <tbrowder> but good point, attempting to clarify...

[19:53] *** giulianideon joined
[19:54] *** zeylos4 joined
[19:54] *** lizmat_ joined
[19:55] *** stoned75 joined
[19:55] *** skyl4rk_ joined
[19:57] *** eir0 joined
[19:58] *** kybr_ joined
[20:00] *** rindolf joined
[20:02] *** jmerelo left
[20:02] *** zeylos left
[20:02] *** joule left
[20:02] *** skyl4rk left
[20:02] *** lizmat left
[20:02] *** releasable6 left
[20:02] *** notable6 left
[20:02] *** bisectable6 left
[20:02] *** maggotbrain left
[20:02] *** MitarashiDango[m left
[20:02] *** tyil[m] left
[20:02] *** kybr left
[20:02] *** evalable6 left
[20:02] *** eiro left
[20:02] *** skyl4rk_ is now known as skyl4rk

[20:02] *** zeylos4 is now known as zeylos

[20:05] *** jmerelo joined
[20:05] <tbrowder> uzl[m]: is this a bit better: https://gist.github.com/tbrowder/27c20c78dbe147529b6661f482b83043

[20:06] *** eir0 is now known as eiro

[20:07] *** maggotbrain joined
[20:07] *** jmerelo left
[20:10] <tbrowder> let me tweak it a bit more: ok, check it now

[20:12] *** finanalyst joined
[20:36] *** rindolf left
[20:37] *** rindolf joined
[20:49] *** rindolf left
[20:51] *** bisectable6 joined
[20:51] *** notable6 joined
[20:53] *** giulianideon left
[20:53] *** releasable6 joined
[20:54] *** evalable6 joined
[20:59] <tbrowder> uzl[m]: post has been updated. please let me know if the wording is satisfactory.

[21:01] <xkr47> I get a 404 for that :)

[21:02] <xkr47> tbrowder, is it the advent thingy?

[21:02] *** sena_kun left
[21:03] <tbrowder>  yes, but i deleted the gist. but i used it to update my day 1 post on rakuadvent

[21:03] <xkr47> where's the official place?

[21:05] <xkr47> also, great topic in the draft!

[21:17] *** sena_kun joined
[21:19] *** chloekek left
[21:24] *** uzl[m] left
[21:24] *** timotimo[m] left
[21:32] <AlexDaniel> squashable6: status

[21:32] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in 3 days and ‚âà6 hours (2019-12-07 UTC-12‚åÅUTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[21:37] <tbrowder> xkr47: see https://rakuadventcalendar.wordpress.com/

[21:38] <xkr47> thx!

[21:39] <tbrowder> you're welcome. nice home page, looks busy

[21:39] <xkr47> mine? :D

[21:41] <xkr47> or the calendar?

[21:41] *** wamba left
[21:41] *** wildtrees left
[21:42] <xkr47> is the "2016-01-011" timestamp in the day 1 post a perl5 joke? :)

[21:43] *** wildtrees joined
[21:45] *** wildtrees left
[21:45] *** wildtrees joined
[21:48] *** wamba joined
[21:53] *** chloekek joined
[22:00] *** hythm joined
[22:03] *** hythm left
[22:04] *** hythm joined
[22:06] *** hythm left
[22:06] *** hythm joined
[22:07] <hythm> lizmat, thank you for doing the weekly. i think there is a typo in the link of the new module "Kind" , it is pointing to a different module

[22:17] *** hythm left
[22:19] *** chloekek left
[22:23] *** Xliff joined
[22:24] <Xliff> m: class A { method 2d { say' OHAI!' }; }; A.new.2d;

[22:24] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3class A { method7‚èè5 2d { say' OHAI!' }; }; A.new.2d;‚ê§¬ª

[22:24] <tellable6> 2019-12-02T21:48:10Z #raku-dev <jnthn> Xliff maybe override something in the role meta-object, such as in spcialize, so that when it sees the target of the composition, it checks if its meta-object does some role, and if not, mixes it in?

[22:24] <Xliff> m: class A { method twod { say' OHAI!' }; }; A.new.twod;

[22:24] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´5===SORRY!5===‚ê§Argument to "say" seems to be malformed‚ê§at <tmp>:1‚ê§------> 3class A { method twod { say7‚èè5' OHAI!' }; }; A.new.twod;‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3class A { method twod { say7‚èè5' OHAI!' }; }; A.new.tw‚Ä¶¬ª

[22:24] <Xliff> m: class A { method two-d { say 'OHAI!' }; }; A.new.twod;

[22:24] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´No such method 'twod' for invocant of type 'A'. Did you mean 'two-d'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:24] <Xliff> m: class A { method two-d { say 'OHAI!' }; }; A.new.two-d;

[22:24] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´OHAI!‚ê§¬ª

[22:36] *** normanrockwell joined
[22:40] *** normanrockwell left
[22:40] <tbrowder> xk47: your home page is nice. 

[22:41] <tbrowder> xkr47: ^^

[22:42] *** pmurias left
[22:45] <lizmat_> .tell hythm thanks for the headsup, fixed!  hythm++

[22:45] <tellable6> lizmat_, I'll pass your message to hythm

[22:46] *** lizmat_ is now known as lizmat

[22:47] *** lucasb left
[22:48] *** normanrockwell joined
[22:51] *** normanrockwell left
[22:57] *** ManDeJan joined
[22:59] <Juerd> What made the unspace in the long dot redundant?

[23:02] *** sena_kun left
[23:05] <lizmat> we talked TimToady into it around the time of the GLR, if I remember correctly

[23:05] <lizmat> some time after FROGGS had written Slang::Tuxic

[23:07] *** finanalyst left
[23:07] <AlexDaniel> I think there was a reasonably sized commit message

[23:08] <AlexDaniel> bisect: old=2015.01 42 .say

[23:08] <bisectable6> AlexDaniel, Bisecting by exit code (old=2015.01 new=672c5d4). Old exit code: 1

[23:08] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/e832ed12a466fe16c36e96e06b4c1f6f

[23:08] <bisectable6> AlexDaniel, (2015-09-26) https://github.com/rakudo/rakudo/commit/cb25b2f475f31335d77d018474482aceec2c74de

[23:08] <AlexDaniel> that's the one

[23:13] <Xliff> How did you find that so quickly?

[23:14] <AlexDaniel> Xliff: it's really slow, actually

[23:15] <AlexDaniel> it took 30 seconds to get it

[23:15] <AlexDaniel> it's because most of the builds in that range are long-range compressed into fat slow archives

[23:16] *** sena_kun joined
[23:17] <AlexDaniel> rba: what's the biggest amount of SSD storage I can get on any of the servers we can have?

[23:17] <AlexDaniel> just wondering

[23:23] <Xliff> I was actually referring how you knew what command to run.

[23:23] <AlexDaniel> any code that uses the feature

[23:24] <AlexDaniel> old= can be anything as long as it's old enough

[23:25] <AlexDaniel> so revisions where the feature works will succeed (exit code=0), everything else will fail

[23:25] <AlexDaniel> bisectable picks up on that automatically and bisects

[23:26] <Xliff> Oh. So the code you ran was "42 .say"

[23:26] <AlexDaniel> yeah

[23:26] <Xliff> I read that as two arguments.

[23:27] <AlexDaniel> actually, I can speed it up quite a bit by introducing lookahead

[23:28] <AlexDaniel> so that it unpacks potential candidate builds for the next step

[23:28] <AlexDaniel> I'm somewhat reluctant to introduce features like this because they'll affect perf bisection

[23:28] <AlexDaniel> which I do all the time

[23:29] <AlexDaniel> so having to wait for extra 25 seconds occasionally is perhaps not worth it

[23:31] <AlexDaniel> and it won't save the whole 25 seconds anyway

[23:39] *** xinming_ left
[23:39] *** xinming_ joined
[23:48] *** nosqrt joined
[23:50] *** stoned75 left
[23:53] <Juerd> AlexDaniel, lizmat: Thanks :)

[23:53] <Juerd> Also, nice use of bisectable :)

[23:54] <discord6> <Vendethiel> The bots are very nice

