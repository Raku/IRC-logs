[00:01] *** Ekho left
[00:25] *** Kaiepi left
[00:29] *** vrurg joined
[00:32] *** Kaiepi joined
[00:40] *** lucasb left
[00:41] *** dmc00 joined
[00:47] *** dmc00 left
[00:50] *** dmc00 joined
[00:57] *** vrurg left
[00:59] <shinobicl> @tadzik , thanks, Cro::HTTP::Client worked perfectly :)

[00:59] <shinobicl> use v6;use Cro::HTTP::Client;use Data::StaticTable;my $resp = await Cro::HTTP::Client.get('https://api.pro.coinbase.com/products');my @body = await $resp.body;my $st = StaticTable.new(@body):set-of-hashes;print $st.display;

[01:04] *** vrurg joined
[01:07] *** finanalyst left
[01:13] *** wamba left
[01:15] *** Ekho joined
[01:19] *** colomon joined
[02:05] <Xliff> shinobicl: Why put the results of $resp.body in an @-var?

[02:11] *** wildtrees left
[02:37] *** silug_ joined
[02:49] *** ZzZombo left
[02:54] *** ZzZombo joined
[03:04] *** Manifest0 left
[03:06] *** Manifest0 joined
[03:13] <shinobicl> because StaticTable's constructor can receive an array of hashes

[03:16] <shinobicl> https://github.com/shinobi/Data-StaticTable/wiki/Data::StaticTable#the-rowset-constructor

[03:40] *** colomon left
[03:45] <rbt> Is this not supposed to work?

[03:45] <rbt> my Str(Int) $var2 = 1;

[03:46] <rbt> The docs use that Str(Int) coercion (https://docs.perl6.org/syntax/Coercion%20type) but I get a compile error.

[03:46] <rbt> Int(Str) seems to work as expected.

[03:46] <rbt> Coercion Str(Int) is insufficiently type-like to qualify a variable

[04:34] <Juerd> Neither Str(Int) nor Int(Str) works with 'my', here

[04:34] <Juerd> They do both work in a sub signature

[04:37] <Juerd> I fail to see the practical use of this feature with anything but Any, since the type it's coerced to itself isn't accepted.

[04:41] <Juerd> "The method is assumed to return the correct type‚Äîno additional checks on the result are currently performed."

[04:41] <Juerd> Interesting.

[04:41] <Juerd> m: class Meh { method Str { return 42 } }; sub x(Str(Meh) $foo) { say $foo.WHAT, $foo }; x(Meh.new)

[04:41] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´(Int)42‚ê§¬ª

[04:43] <Juerd> I'd say that coercion types aren't type-like at all :)

[05:17] *** stoned75_ left
[05:18] *** stoned75 left
[05:35] *** holli joined
[05:38] *** Doc_Holliwould left
[05:39] *** Doc_Holliwould joined
[05:40] *** Xliff left
[05:41] *** cpan-raku left
[05:41] *** holli left
[05:42] *** Doc_Holliwood joined
[05:44] *** stoned75 joined
[05:44] *** stoned75_ joined
[05:45] *** Doc_Holliwould left
[05:46] *** Doc_Holliwould joined
[05:48] *** Doc_Holliwood left
[05:50] *** cpan-raku joined
[05:50] *** cpan-raku left
[05:50] *** cpan-raku joined
[05:51] *** holli joined
[05:53] *** Doc_Holliwould left
[05:54] *** Doc_Holliwood joined
[05:57] *** holli left
[05:58] *** Doc_Holliwould joined
[06:01] *** Doc_Holliwood left
[06:01] *** Doc_Holliwood joined
[06:04] *** Doc_Holliwould left
[06:05] *** Doc_Holliwould joined
[06:07] *** Doc_Holliwood left
[06:08] *** Doc_Holliwood joined
[06:11] *** Doc_Holliwould left
[06:12] *** Doc_Holliwould joined
[06:15] *** Doc_Holliwood left
[06:15] *** Doc_Holliwood joined
[06:17] *** Doc_Holliwould left
[06:19] *** Doc_Holliwould joined
[06:22] *** Doc_Holliwood left
[06:24] *** Doc_Holliwood joined
[06:25] *** caterfxo left
[06:26] *** Doc_Holliwould left
[06:27] *** Doc_Holliwould joined
[06:28] *** caterfxo joined
[06:30] *** Doc_Holliwood left
[06:31] *** Doc_Holliwood joined
[06:34] *** Doc_Holliwould left
[07:10] *** rindolf joined
[07:33] *** stoned75_ left
[07:33] *** stoned75 left
[08:03] <shinobicl> A small script to extract market data from Coinbase and get it as CSV files : https://pastebin.com/wa6D2N4S

[08:03] *** rbt left
[08:04] *** rbt joined
[08:16] *** AlexDaniel left
[08:20] *** wamba joined
[08:23] *** lizmat left
[08:33] *** shinobicl left
[08:59] *** Doc_Holliwood left
[09:12] *** stoned75 joined
[09:12] *** stoned75_ joined
[09:34] *** AlexDaniel joined
[09:34] *** AlexDaniel left
[09:34] *** AlexDaniel joined
[09:34] <Geth> ¬¶ doc: 6d2c3c41e0 | (Stoned Elipot)++ | doc/Language/regexes.pod6

[09:34] <Geth> ¬¶ doc: Keep example's code and output in sync

[09:34] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/6d2c3c41e0

[09:43] *** MasterDuke joined
[09:45] *** finanalyst joined
[09:49] *** stoned75_ left
[09:51] *** stoned75 left
[10:11] *** lizmat joined
[10:17] *** sergot left
[10:23] *** sergot joined
[10:23] *** midcheck joined
[10:24] *** midcheck left
[10:33] *** finanalyst left
[10:47] <Geth> ¬¶ problem-solving: lizmat assigned to jnthn Issue How to provide coercers for new types in higher language versions https://github.com/perl6/problem-solving/issues/137

[10:54] *** Doc_Holliwood joined
[10:58] *** sena_kun joined
[11:09] *** colomon joined
[11:18] *** colomon left
[11:42] *** stoned75 joined
[11:42] *** stoned75_ joined
[11:48] *** cpan-raku left
[11:49] *** cpan-raku joined
[11:49] *** cpan-raku left
[11:49] *** cpan-raku joined
[11:52] *** voegelas joined
[12:27] <rbt> Juerd: My trouble is actually a class "has" which I'm trying to pass a Json sourced variable into. Sometimes it's formatted like an Int and sometimes like a String. I can force cast of course, but I was hoping I could mark the class instead.

[12:27] <rbt> m: class a { has Str(Int) $.identifier = "not really an int";}; my Int $json-submitted-value = 1; my $n = a.new(identifier => $json-submitted-value);

[12:27] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Coercion Str(Int) is insufficiently type-like to qualify a variable‚ê§at <tmp>:1‚ê§------> 3class a { has Str(Int) $.identifier7‚èè5 = "not really an int";}; my Int $json-s‚ê§    expecting any of:‚Ä¶¬ª

[12:31] <El_Che> still flappers on the new release

[12:31] <El_Che> in misc

[12:38] *** Geth left
[12:38] *** Geth joined
[12:55] *** ZzZombo left
[12:55] *** ZzZombo joined
[12:59] *** Altai-man_ joined
[13:00] *** Altai-man_ left
[13:02] *** sena_kun left
[13:02] *** sena_kun joined
[13:05] *** sena_kun left
[13:09] *** stoned75 left
[13:10] *** stoned75 joined
[13:51] *** sena_kun joined
[14:09] * sena_kun tests new irc client

[14:12] *** AlexDaniel left
[14:33] *** sena_kun left
[14:34] *** sena_kun joined
[14:35] <tbrowder> .tell jmerelo post updated--basically done, but still some minor edits to make (i need to add another note), and i'll try to fix the wordpress issues with extra newlines.

[14:35] <tellable6> tbrowder, I'll pass your message to jmerelo

[14:47] *** sena_kun left
[14:47] <El_Che> AlexDaniel`: I spoke to soon: the misc performance tests on i386 are frail

[14:48] *** sena_kun joined
[14:49] *** sena_kun left
[14:49] *** sena_kun joined
[15:01] *** sena_kun left
[15:10] <El_Che> AlexDaniel`: I think yesterday evening travis had more free resources than today 

[15:17] *** sena_kun joined
[15:57] *** AlexDaniel joined
[15:57] *** AlexDaniel left
[15:57] *** AlexDaniel joined
[15:59] <AlexDaniel> El_Che: is it the same goddamn test?

[16:00] *** sena_kun left
[16:01] *** sena_kun joined
[16:04] <El_Che> t/08-performance/99-misc.t ...................................... Dubious, test returned 1 (wstat 256, 0x100)

[16:04] <El_Che> the same flapping bastard

[16:06] *** shinobicl joined
[16:07] *** shinobicl left
[16:29] <dogbert17> Isn't that some kind of benchmarking test

[16:31] <El_Che> it is

[16:32] <El_Che> if it fails so badly on i386, image how it will fail in arm

[16:44] <El_Che> if it fails 1 more time, I'll need to add an ifblock to disable testing on 32bit :(

[17:02] *** sena_kun left
[17:05] *** wamba left
[17:06] <El_Che> and of course, it passed on the last run I wans planning to wait for :)

[17:13] <El_Che> https://github.com/nxadm/rakudo-pkg/releases/tag/v2019.11 <-- relocatabme builds on top

[17:13] <El_Che> weekly: https://github.com/nxadm/rakudo-pkg/releases/tag/v2019.11 <-- relocatabme builds on top

[17:13] <notable6> El_Che, Noted! (weekly)

[17:13] *** caterfxo left
[17:15] *** caterfxo joined
[17:15] *** sena_kun joined
[17:23] <El_Che> Please: test the relocatable builds

[17:39] <Geth> ¬¶ problem-solving/CoC: 594c2e0403 | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[17:39] <Geth> ¬¶ problem-solving/CoC: Remove double negation:

[17:39] <Geth> ¬¶ problem-solving/CoC: 

[17:39] <Geth> ¬¶ problem-solving/CoC: So it becomes:

[17:39] <Geth> ¬¶ problem-solving/CoC: 

[17:39] <Geth> ¬¶ problem-solving/CoC:   We discriminate on the ability to be a kind, positive member of our community

[17:39] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/594c2e0403

[17:43] <Geth> ¬¶ problem-solving/CoC: 37204bc9eb | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[17:43] <Geth> ¬¶ problem-solving/CoC: Elaborate on standards of behavior

[17:43] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/37204bc9eb

[17:44] *** finanalyst joined
[17:48] <Geth> ¬¶ problem-solving/CoC: 099419cacd | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[17:48] <Geth> ¬¶ problem-solving/CoC: Removed the "aside about trolls" paragraph

[17:48] <Geth> ¬¶ problem-solving/CoC: 

[17:48] <Geth> ¬¶ problem-solving/CoC: This indeed appears to be written in an era where trolls really were a major

[17:48] <Geth> ¬¶ problem-solving/CoC: issue for Raku.  After the change of name to Raku, this appears to be a lot

[17:48] <Geth> ¬¶ problem-solving/CoC: less the case.  So no reason to actually emphasize something that is quickly

[17:48] <Geth> ¬¶ problem-solving/CoC: becoming a historical artefact.

[17:48] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/099419cacd

[17:49] *** Xliff joined
[17:52] <Geth> ¬¶ problem-solving/CoC: dff95308b8 | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[17:52] <Geth> ¬¶ problem-solving/CoC: Remove the quip about high level language

[17:52] <Geth> ¬¶ problem-solving/CoC: 

[17:52] <Geth> ¬¶ problem-solving/CoC: It feels very Perlish / TimToady-like.  And hard to understand if you do

[17:52] <Geth> ¬¶ problem-solving/CoC: not know the background of Raku and its long gestation process.

[17:52] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/dff95308b8

[17:54] <Xliff> What's the difference between ParametricRoleHOW and ParametricRoleGroupHOW?

[17:56] *** Tirifto joined
[17:56] <lizmat> a role vs grouping of roles of a class / role ?

[17:57] <Xliff> Well, it's being used as a HOW for a single role so....

[17:57] <Geth> ¬¶ problem-solving/CoC: d7d4656206 | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[17:57] <Geth> ¬¶ problem-solving/CoC: We **only** discriminate, japhb++

[17:57] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/d7d4656206

[17:58] <Xliff> Aw...crap.

[17:58] <Xliff> m: role A { }; A.HOW.^name.say

[17:58] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Perl6::Metamodel::ParametricRoleGroupHOW‚ê§¬ª

[17:58] <Xliff> m: role A[::T] { }; A.HOW.^name.say

[17:58] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Perl6::Metamodel::ParametricRoleGroupHOW‚ê§¬ª

[17:58] <japhb> lizmat: Comments on two of the CoC commits.

[17:58] <Xliff> So now all roles are ParametricRoleGroups?

[17:58] <japhb> *I added

[17:58] *** caterfxo left
[17:59] <japhb> Ah, you saw one of them.  :-)

[17:59] <Xliff> m: role A[::T] { }; role B { also does A; }; A.HOW.^name.say; B.HOW.^name.say

[17:59] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Perl6::Metamodel::ParametricRoleGroupHOW‚ê§Perl6::Metamodel::ParametricRoleGroupHOW‚ê§¬ª

[18:02] <lizmat> japhb: how about s/if you have a bad day/but will be bad for your karma/ ?

[18:03] <sena_kun> AlexDaniel ping?

[18:04] <Geth> ¬¶ problem-solving/CoC: 434311f73b | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[18:04] <Geth> ¬¶ problem-solving/CoC: Mention effect on karma, rather than a possible reason

[18:04] <Geth> ¬¶ problem-solving/CoC: 

[18:04] <Geth> ¬¶ problem-solving/CoC: japhb++ again.

[18:04] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/434311f73b

[18:06] <japhb> lizmat++  # Yeah, I like that better.

[18:34] <Xliff> m: role A[::T] { }; role B { }; A.HOW does B; A.HOW.^name.say

[18:34] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Perl6::Metamodel::ParametricRoleGroupHOW+{B}‚ê§¬ª

[18:36] <Xliff> m: role A[::T] { }; role B { }; A.HOW does B; say A.HOW does Metamodel::ParametricRoleGroupHOW

[18:36] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´Cannot mix in non-composable type Perl6::Metamodel::ParametricRoleGroupHOW into object of type Perl6::Metamodel::ParametricRoleGroupHOW+{B}‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:36] <Xliff> m: role A[::T] { }; role B { }; A.HOW does B; say A.HOW ~~ Metamodel::ParametricRoleGroupHOW

[18:36] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´True‚ê§¬ª

[18:37] <Xliff> m: role A[::T] { }; role B { }; A.HOW does B; my @a := (Metamodel::ParametricRoleHOW, Metamodel::ParametricRoleGroupHOW); say A ~~ @a.any

[18:37] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´False‚ê§¬ª

[18:37] <Xliff> m: role A[::T] { }; role B { }; A.HOW does B; my @a := (Metamodel::ParametricRoleHOW, Metamodel::ParametricRoleGroupHOW); say A.HOW ~~ @a.any

[18:37] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´True‚ê§¬ª

[18:41] <Geth> ¬¶ problem-solving/CoC: f2b2694635 | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[18:41] <Geth> ¬¶ problem-solving/CoC: Added section about good intentions and arbitration

[18:41] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/f2b2694635

[18:44] *** lietlaele joined
[18:46] *** lietlaele left
[18:51] <Xliff> m: role A[::T] { }; role B { }; A.HOW does B; A.^roles.map( *.^name ).gist.say

[18:51] <camelia> rakudo-moar f608a7a41: OUTPUT: ¬´()‚ê§¬ª

[18:53] *** pmurias joined
[18:53] <Xliff> OK, so how do I get an individual ParametricRoleHOW from a ParametricRoleGroupHOW?

[18:53] *** chloekek joined
[19:02] <tbrowder> .seen jmerelo

[19:02] <tellable6> tbrowder, I saw jmerelo 2019-11-29T18:39:38Z in #raku-dev: <jmerelo> Point is, anyone wants to grab the remaining slot, just let me know, and in case Dec 9th is too early, let me know too.

[19:02] *** sena_kun left
[19:03] <tbrowder> .tell jmerelo i took 9 dec slot. though i'm happy to give it up if someone else wants it, but speak soon!

[19:03] <tellable6> tbrowder, I'll pass your message to jmerelo

[19:06] <tbrowder> .tell jmerelo check yr email

[19:06] <tellable6> tbrowder, I'll pass your message to jmerelo

[19:11] *** wildtrees joined
[19:12] <Xliff> OK. Method::Also is busted, again. :(

[19:16] *** sena_kun joined
[19:17] *** lucasb joined
[19:29] <lucasb> hey, Advent of Code starts soon (in 9 hours). Please join the private leaderboard I created last year, which already has some folks from the community. Code is 169430-b1c331b2

[19:59] <Geth> ¬¶ doc: c0b771b54e | (JJ Merelo)++ | 2 files

[19:59] <Geth> ¬¶ doc: Changes URL closes #3106

[19:59] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/c0b771b54e

[20:54] *** silug_ left
[20:55] *** silug_ joined
[20:58] *** sena_kun1 joined
[20:58] *** sena_kun left
[21:02] *** sena_kun1 left
[21:04] *** pmurias left
[21:07] <MasterDuke> i don't know how up-to-date the implementation is, might be a nice project for someone to update this https://github.com/kanaka/mal/tree/master/perl6

[21:07] <Geth> ¬¶ problem-solving/CoC: f315ca777f | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[21:07] <Geth> ¬¶ problem-solving/CoC: Define a troll as a person lacking of good intentions

[21:07] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/f315ca777f

[21:16] <Geth> ¬¶ problem-solving/CoC: 21c86e1f35 | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[21:16] <Geth> ¬¶ problem-solving/CoC: First stab at a "Responsibility" section

[21:16] <Geth> ¬¶ problem-solving/CoC: 

[21:16] <Geth> ¬¶ problem-solving/CoC: Definitely *not* happy with the wording yet.  Throwing it out there for

[21:16] <Geth> ¬¶ problem-solving/CoC: feedback.

[21:16] <Geth> ¬¶ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/21c86e1f35

[21:17] *** sena_kun joined
[21:41] *** Kaiepi left
[21:41] *** wamba joined
[21:44] *** silug_ is now known as silug

[21:44] *** patrickb joined
[21:53] *** Kaiepi joined
[21:54] *** Kaiepi left
[21:56] *** pmurias joined
[22:06] <Geth> ¬¶ doc: 0ac1f113c1 | (Stoned Elipot)++ | doc/Language/grammar_tutorial.pod6

[22:06] <Geth> ¬¶ doc: subject-verb agreement

[22:06] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/0ac1f113c1

[22:11] *** Kaiepi joined
[22:17] *** lucasb left
[22:19] *** Kaiepi left
[22:39] *** Kaiepi joined
[22:40] <AlexDaniel> sena_kun: pong

[22:48] <sena_kun> AlexDaniel, o/

[22:49] <AlexDaniel> sena_kun: here's something interesting in the CoC https://github.com/perl6/problem-solving/pull/136/commits/21c86e1f350c5c192d446f88506d590d50af6255

[22:50] <AlexDaniel> I have no idea why it is there and why it is so specific

[22:50] *** voegelas left
[22:59] <jnthn> Also, it's not really what's currently practiced; if a module in the ecosystem is broken the first resort is usually to see what might be done about it in Rakudo itself.

[23:00] <jnthn> 'cus it will often potentially break other code outside of the ecosystem too

[23:02] <AlexDaniel> also even though I have been pushing for 0 breakage anywhere, it's not entirely achievable given that any bug fix can break someone's code

[23:02] *** sena_kun left
[23:02] <jnthn> Indeed, there's some thinking and decision making involved.

[23:03] <jnthn> I also wonder if this will put anyone off contributing.

[23:04] <Grinnz> FWIW the general perl policy on that is, if it's because of a change in documented api compatibility must be maintained, if it's a change in internals people shouldn't be using the module should be fixed (with exceptions in extreme cases)

[23:05] *** colomon joined
[23:05] <AlexDaniel> Grinnz: I guess it means we're torturing ourselves a bit more :)

[23:06] <AlexDaniel> because even for stuff people shouldn't do/use we still do our best to not break existing code

[23:06] <Grinnz> there's some of that in perl too, it's just a matter of where to draw the line

[23:06] <AlexDaniel> we even have some back compat for actual bugs

[23:07] <AlexDaniel> .oO( the line seems to be right about at our necks )

[23:07] <Grinnz> :)

[23:08] <Grinnz> http://pm1.narvii.com/6948/cf3a2d94a18567ff9afa6f5932ae2921c9315e30r1-486-596v2_uhq.jpg

[23:08] <AlexDaniel> anyway, point is that it is questionable CoC material.

[23:09] <tbrowder> maybe so,

[23:10] <tbrowder> but it sounds like good policy

[23:11] <AlexDaniel> I don't know. For example, I think there's room for a fast-moving compiler that doesn't care that much about backcompat

[23:12] <AlexDaniel> that section is very specific to rakudo so maybe that's a not a good point

[23:13] <AlexDaniel> but then maybe it should be part of contribution guidelines in rakudo, not part of CoC

[23:16] *** sena_kun joined
[23:20] <lizmat> fwiw, I'm too tired to digest all of the comments now, will look tomorrow

[23:21] <lizmat> well, after some sleep&

[23:21] <sena_kun> lizmat: have a good sleep!

[23:38] *** rindolf left
[23:40] *** stoned75_ left
[23:41] *** stoned75 left
[23:50] *** stoned75 joined
[23:50] <AlexDaniel> notable6: CLA https://github.com/rakudo/rakudo/files/3907677/CLA.pdf

[23:50] <notable6> AlexDaniel, Noted! (CLA)

[23:50] <AlexDaniel> notable6: CLA

[23:50] <notable6> AlexDaniel, 2 notes: https://gist.github.com/34a4b159bc9184009286003a449d288d

[23:51] <AlexDaniel> sena_kun: ‚Üë

[23:51] <AlexDaniel> sena_kun: is that ok?

[23:51] *** stoned75_ joined
[23:52] <AlexDaniel> or should I make the font black?

[23:52] <AlexDaniel> it's currently gray

[23:53] <AlexDaniel> notable6: reset CLA

[23:53] <notable6> AlexDaniel, Moved existing notes to ‚ÄúCLA_2019-11-30T23:53:40Z‚Äù

[23:54] <AlexDaniel> notable6: CLA https://www.perlfoundation.org/contributor-license-agreement print it out, sign it, scan it in (resize your scan to 250KB or less). Email to trademark -at- perlfoundation.org and don't forget to CC will at coleda.com. PDF: https://github.com/rakudo/rakudo/files/3907678/CLA.pdf

[23:54] <notable6> AlexDaniel, Noted! (weekly)

[23:54] <AlexDaniel> nooooo

[23:54] *** pmurias left
[23:55] <AlexDaniel> notable6: new-topic CLA

[23:55] <notable6> AlexDaniel, New topic added (‚ÄúCLA‚Äù)

[23:55] <AlexDaniel> notable6: CLA https://www.perlfoundation.org/contributor-license-agreement print it out, sign it, scan it in (resize your scan to 250KB or less). Email to trademark -at- perlfoundation.org and don't forget to CC will at coleda.com. PDF: https://github.com/rakudo/rakudo/files/3907678/CLA.pdf

[23:55] <notable6> AlexDaniel, Noted! (CLA)

[23:55] <AlexDaniel> ok the way it gists it is LTA but at least it works

[23:56] <AlexDaniel> [Coke]: I think there's a need to have a proper PDF

[23:56] <AlexDaniel> [Coke]: this one I made by printing to file from the website. I had to tweak a lot of css and html to get it to look right

