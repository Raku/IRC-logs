[00:03] *** Altai-man_ joined
[00:05] *** cognomin_ joined
[00:06] *** sena_kun left
[00:09] *** cognominal left
[00:43] *** lucasb left
[00:46] <uzl[m]> weekly: https://lobste.rs/s/njsigf/advent_code_2019#c_oztrjk

[00:46] <notable6> uzl[m], Noted! (weekly)

[00:58] *** Altai-man_ left
[01:11] *** moon-child left
[01:16] *** moon-child joined
[01:18] *** cpan-raku left
[01:29] *** cpan-raku joined
[01:29] *** cpan-raku left
[01:29] *** cpan-raku joined
[02:08] *** wildtrees left
[02:17] *** cognominal joined
[02:20] *** cognomin_ left
[02:24] *** xinming_ left
[02:27] *** xinming_ joined
[03:03] *** Manifest0 left
[03:05] *** Manifest0 joined
[03:08] *** cognomin_ joined
[03:12] *** cognominal left
[03:42] *** colomon joined
[04:37] *** colomon left
[05:07] *** RobRaku joined
[05:54] *** sergot joined
[05:56] *** rindolf joined
[05:57] *** surrealpie joined
[06:06] *** jmerelo joined
[06:13] <jmerelo> Is it OK if I move the advent calendar (perl6/advent) to the new Raku organization?

[06:14] <jmerelo> .tell tbrowder I'm going to move the perl6/advent to Raku/advent if you don't mind.

[06:14] <tellable6> jmerelo, I'll pass your message to tbrowder

[06:14] <sarna> good morning all o/

[06:14] <jmerelo> hi!

[06:17] *** cpan-raku left
[06:23] <sarna> when is a new version of rakudo-star dropping? the last one was released in march

[06:23] <jmerelo> sarna: it's in the making. 

[06:24] <sarna> any rough estimates? :)  rough as in "maybe this year" or "definitely next year"

[06:24] <jmerelo> tyil is working on it https://github.com/rakudo/star/pull/144

[06:24] <jmerelo> well, tyil mentions it should get going before the end of the year

[06:24] <sarna> oh I see

[06:24] <sarna> nice!

[06:26] *** cpan-raku joined
[06:26] *** cpan-raku left
[06:26] *** cpan-raku joined
[06:52] <sarna> I told the redmonk programming language rankings person about our rename thing :)

[06:55] *** wamba joined
[07:04] <jmerelo> In this tutorial in Spanish they recommend Raku to run Perl: https://eead-csic-compbio.github.io/perl_bioinformatica/node86.html

[07:04] <jmerelo> sarna: thanks!

[07:04] <jmerelo> sarna: problem is, with the rename and everything, results are going to be split

[07:09] *** reportable6 left
[07:11] *** reportable6 joined
[07:20] <sarna> jmerelo: yeah, I told them not everything is ready yet

[07:20] <sarna> the ranking comes out in june and january

[07:27] <sarna> can I provide defaults for optional parameters?

[07:32] *** jmerelo left
[07:37] <tobs> m: sub f ($x? = 10) { $x }; say f; say f 20

[07:37] <camelia> rakudo-moar f608a7a41: OUTPUT: «10␤20␤»

[07:38] <sarna> ha, neat :D  thanks

[07:38] <tobs> sarna: ^ I think providing a default makes the parameter optional as well, so the "?" is not necessary.

[07:38] <sarna> tobs: will it be `defined` in the function body? 

[07:39] <tobs> if you give it a defined value, yes; if it assumes the default value and that is defined, also yes :)

[07:40] <sarna> m: sub f ($x = 10) { say 'yes' if defined $x }; f()

[07:40] <camelia> rakudo-moar f608a7a41: OUTPUT: «yes␤»

[07:40] <sarna> okay, thanks :)

[07:41] *** kensanata joined
[07:46] *** abraxxa left
[07:46] *** abraxxa joined
[08:15] *** wamba left
[08:24] *** chloekek joined
[08:33] *** xinming joined
[08:36] *** xinming_ left
[08:39] <El_Che> morning

[08:39] <sarna> hello

[08:39] <sarna> I have some problems with running a shell command

[08:40] <sarna> I want to run `awk '/MemTotal/ {print $2}' /proc/meminfo`, but raku tells me `/bin/sh: print: command not found `

[08:41] <El_Che> quotes?

[08:41] <sarna> I run it like `shell qx{awk '/MemTotal/ {print $2}' /proc/meminfo}, :out`

[08:42] <sarna> oh, qx already runs the command? I misread the docs

[08:50] *** wamba joined
[08:52] *** Guest91 joined
[08:52] <Guest91> my $f='hi/there/yo'; how do I select only 'yo'? i tried $f ~~ m/ \/ (.*?) $$/; but this selects there/yo. WHY?

[08:53] <Guest91> why isnt .*? being non-greedy?

[08:54] <El_Che> $f ~~ m/ .+ \/ (.+) $$/;

[08:58] <Guest91> thank you;_;

[08:58] <Guest91> i was traumatised

[09:03] *** wamba left
[09:04] <tobs> Guest91: it was non-greedy, but because you wanted to match end-of-line $$ after it, so the capture group got extended to satisfy that.

[09:06] <tobs> m: say 'hi/there/yo'.split('/')[*-1]  # alternative without regexes: split by '/' and give me the last portion

[09:06] <camelia> rakudo-moar f608a7a41: OUTPUT: «yo␤»

[09:09] <Guest91> neat, thank you

[09:11] *** patrickb joined
[09:12] *** RobRaku left
[09:14] *** Guest91 left
[09:20] *** scimon joined
[09:20] *** RobRaku joined
[09:32] *** robertle joined
[09:44] <El_Che> Geth: tobs solution is orders of magnitude better if it fits your use case

[09:44] <El_Che> oops

[09:44] <El_Che> Already left

[09:44] <El_Che> maybe I need to removed the /ignore for channels leavings and quits :)

[09:44] <SmokeMachine> m: say "hi/there/yo".comb(/\w+/).tail

[09:44] <camelia> rakudo-moar f608a7a41: OUTPUT: «yo␤»

[09:45] <El_Che> SmokeMachine: now you're showing off :)

[09:45] <SmokeMachine> :)

[09:45] * sarna really likes comb

[09:45] <El_Che> I like tobs solution better because it's familiar in other languages

[09:46] <sarna> baby raku? :^)

[09:47] <El_Che> acknowledging the width and complexity of raku, I'll say baby raku is pretty close to the language of a linguistic scholar :)

[09:47] <SmokeMachine> m: my $a = "hi/there/yo"; say $a.substr: $a.rindex("/") + 1 # even more common in other languages...

[09:47] <camelia> rakudo-moar f608a7a41: OUTPUT: «yo␤»

[09:50] <sarna> El_Che: only Damian Conway is fluent in regular raku

[09:50] *** RobRaku left
[09:50] <tobs> ah, .tail would've been neater indeed

[09:51] <El_Che> sarna: if he dies, the last native speaker will be gone for ever :)

[09:55] <sarna> is raku critically endangered then :'(

[09:56] <El_Che> no, it will end like a language like english :)

[09:56] <El_Che> compare the complexity of Latin and English :)

[09:58] * sarna thinks

[09:58] <sarna> maybe it's more like arabic, Damian speaks MSA and we're all speaking simpler dialects

[09:58] <El_Che> good point

[09:59] <El_Che> excellent point, actually

[10:01] <sarna> :^)

[10:12] *** daxim left
[10:16] *** sena_kun joined
[10:18] *** daxim joined
[10:36] <SmokeMachine> is there a way to use the subs declared inside of the RUN-MAIN sub outside of it? I’m thinking of writing an auto-completion module… I think that subs could help...

[10:38] *** chloekek left
[10:47] *** abraxxa left
[10:47] *** abraxxa joined
[10:48] <tbrowder> jmerelo: hi, move is good!

[10:48] <tellable6> tbrowder, I'll pass your message to jmerelo

[10:54] *** RobRaku joined
[10:55] *** chloekek joined
[10:59] <sarna> wow, the bot detects when somebody offline was pinged?

[11:00] <sarna> that's some next-level stuff

[11:14] <tbrowder> hi all

[11:14] <tellable6> 2019-11-28T06:14:17Z #raku <jmerelo> tbrowder I'm going to move the perl6/advent to Raku/advent if you don't mind.

[11:15] <tbrowder> anyone here an experienced wordpress user!

[11:15] <tbrowder> ?

[11:17] <tbrowder> .tell jmerelo moving advent to raku is a good thing

[11:17] <tellable6> tbrowder, I'll pass your message to jmerelo

[11:19] *** jmerelo joined
[11:37] *** finanalyst joined
[11:39] *** colomon joined
[11:54] *** MasterDuke joined
[11:57] *** finanalyst left
[11:59] *** wamba joined
[12:04] *** Altai-man_ joined
[12:07] *** sena_kun left
[12:14] *** maettu left
[12:14] *** wamba left
[12:16] *** maettu joined
[12:20] <abraxxa> i have a list containnig hashes which have a key which value is an array containing hashes and I like a like of all those inner hashes.

[12:20] <abraxxa> my @services = $result.map({ .<service> }).Slip; doesn't work, neither does .flat

[12:21] <abraxxa> ah! my @services = $result.map({ .<service>.Slip });

[12:21] <jmerelo> abraxxa: maybe post the code in Stackoverflow? Or a gist? I don't really follow you...

[12:21] <tellable6> 2019-11-28T10:48:10Z #raku <tbrowder> jmerelo: hi, move is good!

[12:21] <tellable6> 2019-11-28T11:17:06Z #raku <tbrowder> jmerelo moving advent to raku is a good thing

[12:21] <tbrowder> g'day jj

[12:22] <jmerelo> hey, tbrowder 

[12:22] <jmerelo> tbrowder: moving should be painless except for assignments, I guess

[12:22] <jmerelo> tbrowder: but I don't think we have any of those.

[12:22] *** maettu left
[12:23] <tbrowder> you've been very busy, the move is not fun i know

[12:23] <jmerelo> tbrowder: class period now, until mid-February

[12:23] <jmerelo> Also reports, conference deadlines...

[12:24] <jmerelo> But that's fast, it's basically clicking as long as you've got the privs in both repos

[12:24] <jmerelo> If you want, I can do it now 

[12:24] *** maettu joined
[12:25] *** joule joined
[12:30] *** wamba joined
[12:46] *** abraxxa left
[12:46] *** abraxxa joined
[12:49] *** lucasb joined
[13:03] *** normanrockwell joined
[13:14] *** tyil[m] left
[13:15] *** MitarashiDango[m left
[13:15] *** matiaslina left
[13:15] *** timotimo[m] left
[13:15] *** Demos[m] left
[13:15] *** AlexDaniel` left
[13:15] *** uzl[m] left
[13:15] *** CIAvash left
[13:15] *** aearnus[m] left
[13:15] *** abraxxa left
[13:15] *** rba[m] left
[13:15] *** abraxxa joined
[13:20] *** finanalyst joined
[13:25] <abraxxa> can I assign the output of a split to two scalars?

[13:25] <abraxxa> in Perl 5 I would write my ($protocol, $port) = split('/', 'tcp/1234', 2);

[13:25] <jmerelo> abraxxa: try that

[13:26] <abraxxa> but split returns a Seq and I haven't found an example how to assign that to a list of scalars

[13:26] <jmerelo> m: my $þ = "a,b"; my ($a, $b) = $þ.split(","); say "$a,$b"

[13:26] <camelia> rakudo-moar f608a7a41: OUTPUT: «a,b␤»

[13:26] <Altai-man_> m: my ($a, $b) = 'he,he'.split(','); say $a;

[13:26] <camelia> rakudo-moar f608a7a41: OUTPUT: «he␤»

[13:26] <Altai-man_> m: my ($a, $b) = 'he,he'.split(','); say $a; say $b;

[13:26] <camelia> rakudo-moar f608a7a41: OUTPUT: «he␤he␤»

[13:26] <jmerelo> abraxxa: ^^^ just use destructuring

[13:27] <abraxxa> destruction?

[13:27] <Altai-man_> structuring, destructuring

[13:28] <Altai-man_> like when you do this cool trick

[13:28] <Altai-man_> m: (-> (:$foo, :$bar) { say $foo + $bar })({ :42foo, :50bar })

[13:28] <camelia> rakudo-moar f608a7a41: OUTPUT: «92␤»

[13:29] <Altai-man_> `my ($foo, $bar)` is very similar to a signature... and in fact it kind of is. so just as you can split some call input into parameters of a block, so you can do with a multi-variable declaration

[13:29] <Altai-man_> and the "smart name" for this "split" is "destructuring"

[13:35] <abraxxa> like in Perl 5 would have been sufficient, thanks

[13:35] <abraxxa> I'd need a trick if something is either a scalar or an array so I can loop both but for the scalar only a single time

[13:37] <lizmat> m: my ($a,@b) = "a,b,c,d,e,f".split(','); dd $a, @b

[13:37] <camelia> rakudo-moar f608a7a41: OUTPUT: «Str $a = "a"␤Array @b = ["b", "c", "d", "e", "f"]␤»

[13:37] <Altai-man_> abraxxa, also keep in mind that if your signature is `my (@foo, $bar)` then $bar will never be assigned.

[13:40] *** mid_laptop joined
[13:42] <abraxxa> why does that return true although the key doesn't exist in the hash? if %Firehol-service<dst-port> {

[13:46] <abraxxa> ah it does work

[13:57] <abraxxa> what does assigning an array to an array create an array with a single element that is an array?

[13:57] <abraxxa> my @services = %Firehol-service<dst-port> ~~ Str

[13:57] <abraxxa>     ?? (%Firehol-service<dst-port>,)

[13:57] <abraxxa>     !! %Firehol-service<dst-port>;

[13:57] <abraxxa> one way to solve it is using .list on the array

[13:57] <abraxxa> another := instead of =

[13:58] <Altai-man_> because containers

[13:59] <Altai-man_> https://perl6advent.wordpress.com/2017/12/02/perl-6-sigils-variables-and-containers/

[13:59] *** abraxxa left
[13:59] <Altai-man_> the := solution is easier and more neat, imho

[13:59] *** abraxxa joined
[14:05] *** sena_kun joined
[14:06] *** Altai-man_ left
[14:18] <AlexDaniel> sarna: yeah, these bots tend to autodetect stuff :)

[14:18] <AlexDaniel> sarna: have you seen this

[14:18] <AlexDaniel> say 42

[14:18] <evalable6> AlexDaniel, rakudo-moar 1945b9d27: OUTPUT: «42␤»

[14:18] *** finanalyst left
[14:19] *** RobRaku left
[14:20] <sarna> AlexDaniel: whoa

[14:20] <AlexDaniel> sarna: here's another one

[14:21] <AlexDaniel> bsiectable6: help

[14:21] <bisectable6> AlexDaniel, Like this: bisectable6: old=2015.12 new=HEAD exit 1 if (^∞).grep({ last })[5] // 0 == 4 # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Bisectable

[14:21] *** abraxxa left
[14:21] <AlexDaniel> notice how I mispelled the nickname

[14:21] <sarna> had to turn off my pc, my bouncer missed the message :^(

[14:22] <AlexDaniel> https://colabti.org/irclogger/irclogger_log/raku?date=2019-11-28#l230

[14:23] <sarna> ooo that’s extraordinary 

[14:23] *** abraxxa joined
[14:23] <AlexDaniel> .seen Altaiman

[14:23] <tellable6> AlexDaniel, I saw Altaiman 2019-11-28T13:59:22Z in #raku: <Altai-man_> the := solution is easier and more neat, imho

[14:23] <AlexDaniel> notice how it doesn't match completely, but it still kinda knows who are you talking about :)

[14:23] <AlexDaniel> and if you change it even more

[14:24] <AlexDaniel> .seen Altiman

[14:24] <tellable6> AlexDaniel, I haven't seen Altiman around, did you mean Altai-man_?

[14:25] <sarna> .seen AxelDaniel

[14:25] <tellable6> sarna, I haven't seen AxelDaniel around, did you mean AlexDaniel?

[14:25] <sarna> hoo boy

[14:25] <sarna> :D

[14:26] *** abraxxa left
[14:26] *** jmerelo left
[14:26] *** abraxxa joined
[14:26] *** abraxxa left
[14:28] *** abraxxa joined
[14:34] *** abraxxa left
[14:34] *** chloekek left
[14:34] *** abraxxa joined
[14:44] *** timotimo[m] joined
[14:44] *** MitarashiDango[m joined
[14:44] *** tyil[m] joined
[14:44] *** AlexDaniel` joined
[14:44] *** Demos[m] joined
[14:44] *** rba[m] joined
[14:44] *** aearnus[m] joined
[14:44] *** matiaslina joined
[14:44] *** CIAvash joined
[14:44] *** uzl[m] joined
[14:47] *** colomon left
[14:50] <cpan-raku> New module released to CPAN! Gnome::Glib (0.15.3) by 03MARTIMM

[14:50] *** rbt joined
[14:51] *** normanro_ joined
[14:53] *** abraxxa left
[14:53] *** abraxxa joined
[14:53] *** chloekek joined
[14:55] *** normanr__ joined
[14:55] *** normanrockwell left
[14:59] *** normanro_ left
[15:00] *** robertle left
[15:26] *** finanalyst joined
[15:32] *** libertas left
[15:37] *** libertas joined
[15:38] <patrickb> bisectable: my $list := (my $, my $, my $); $list[0] := 100;

[15:38] <bisectable6> patrickb, On both starting points (old=2015.12 new=9d89591) the exit code is 1 and the output is identical as well

[15:38] <bisectable6> patrickb, Output on both points: «Cannot use bind operator with this left-hand side␤  in block <unit> at /tmp/3sRWQgt1mz line 1␤␤»

[15:45] *** normanr__ left
[15:57] *** abraxxa left
[15:57] *** abraxxa joined
[16:01] *** kensanata left
[16:04] *** Altai-man_ joined
[16:06] *** sena_kun left
[16:09] *** aearnus[m] left
[16:09] <Kaiepi> using the kind library i released a couple days ago there's a pretty exciting enhancement to types i made that i'll probably release at some point within the next week

[16:09] <Kaiepi> it makes it possible to write `data Maybe a = Just a | Nothing` from haskell not only without knowing how the MOP works, but also in one line

[16:14] <tbrowder> .tell jmerelo change anytime as long as everyone else is happy...

[16:14] <tellable6> tbrowder, I'll pass your message to jmerelo

[16:22] *** patrickb left
[16:38] *** jmerelo joined
[16:42] *** abraxxa left
[16:42] *** abraxxa joined
[16:50] *** mid_laptop left
[16:53] *** wamba left
[16:53] *** wamba joined
[16:56] *** abraxxa left
[16:56] *** abraxxa joined
[17:10] *** wamba left
[17:20] *** lgtaube left
[17:26] *** scimon left
[17:29] <tbrowder> can anyone confirm that a post on wordpress advent that is scheduled can still be edited until the scheduled time for publishing?

[17:29] <jmerelo> tbrowder: if you've got the privs, you should be able

[17:29] <tellable6> 2019-11-28T16:14:38Z #raku <tbrowder> jmerelo change anytime as long as everyone else is happy...

[17:29] <jmerelo> Did you check?

[17:29] <moritz> tbrowder: confirmed

[17:29] <moritz> you can even edit after it's been published :D

[17:30] <tbrowder> moritz: thnx

[17:30] <El_Che> 15:25 < tellable6> sarna, I haven't seen AxelDaniel around, did you mean AlexDaniel? <-- tellable6 leaks information :)

[17:36] *** lgtaube joined
[17:36] <AlexDaniel> El_Che: what do you mean? :)

[17:38] <El_Che> that you can compile a list of seen people even if you don't know their exact name

[17:38] <El_Che> fuzz tellable6 :)

[17:43] *** wamba joined
[17:52] <Doc_Holliwood> .seen DonaldTrump

[17:52] <tellable6> Doc_Holliwood, I haven't seen DonaldTrump around

[17:52] <Doc_Holliwood> Good!

[17:52] <lizmat> :-)  that's not fuzzy at all

[17:52] <tbrowder> Doc_Holliwood: CoC

[17:54] <tbrowder> moritz: can you tell me how wordpress knows my timezone? i can't find a setting anywhere, so i always worry that the publish time setting is wrong

[17:54] <lizmat> tbrowder: perhaps from your IP -> GeoIP -> timezone ?

[17:56] <tbrowder> lizmat: i change time zones fairly often, but haven't noticed a difference on wp

[17:56] <moritz> either that, or javascript

[17:56] <moritz> javascript tends to know your timezone as well

[17:56] <moritz> new Date().getTimezoneOffset()

[17:57] <tbrowder> m: say Date().getTimezoneOffset()

[17:57] <camelia> rakudo-moar f608a7a41: OUTPUT: «No such method 'getTimezoneOffset' for invocant of type 'Date(Any)'␤  in block <unit> at <tmp> line 1␤␤»

[17:58] <tbrowder> m: my $d = Date,new; say $dt.getTimezoneOffset()

[17:58] <camelia> rakudo-moar f608a7a41: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$dt' is not declared␤at <tmp>:1␤------> 3my $d = Date,new; say 7⏏5$dt.getTimezoneOffset()␤»

[17:58] <tbrowder> m: my $d = Date,new; say $d.getTimezoneOffset()

[17:58] <camelia> rakudo-moar f608a7a41: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    new used at line 1 (in Perl 6 please use method call syntax instead)␤␤»

[17:58] <tbrowder> m: my $d = Date.new; say $d.getTimezoneOffset()

[17:58] <camelia> rakudo-moar f608a7a41: OUTPUT: «Cannot call Date.new with no parameters␤  in block <unit> at <tmp> line 1␤␤»

[17:58] <tbrowder> m: my $d = Date.new('now'); say $d.getTimezoneOffset()

[17:58] <camelia> rakudo-moar f608a7a41: OUTPUT: «Invalid Date string 'now'; use yyyy-mm-dd instead␤  in block <unit> at <tmp> line 1␤␤»

[17:59] <tbrowder> m: my $d = Date.new('2019-11-28'); say $d.getTimezoneOffset()

[17:59] <camelia> rakudo-moar f608a7a41: OUTPUT: «No such method 'getTimezoneOffset' for invocant of type 'Date'␤  in block <unit> at <tmp> line 1␤␤»

[17:59] <tbrowder> m: my $d = DateTime.new('2019-11-28'); say $d.getTimezoneOffset()

[17:59] <camelia> rakudo-moar f608a7a41: OUTPUT: «Invalid DateTime string '2019-11-28'; use an ISO 8601 timestamp (yyyy-mm-ddThh:mm:ssZ or yyyy-mm-ddThh:mm:ss+01:00) instead␤  in block <unit> at <tmp> line 1␤␤»

[18:01] <tbrowder> m: my $d = DateTime.new('2019-11-28T12:00:00Z'); say $d.getTimezoneOffset()

[18:01] <camelia> rakudo-moar f608a7a41: OUTPUT: «No such method 'getTimezoneOffset' for invocant of type 'DateTime'␤  in block <unit> at <tmp> line 1␤␤»

[18:01] <tbrowder> m: my $d = Date.new('2019-11-28T12:00:00Z'); say $d.getTimezoneOffset()

[18:01] <camelia> rakudo-moar f608a7a41: OUTPUT: «Invalid Date string '2019-11-28T12:00:00Z'; use yyyy-mm-dd instead␤  in block <unit> at <tmp> line 1␤␤»

[18:03] *** jmerelo left
[18:05] *** sena_kun joined
[18:05] <tbrowder> well, i just have to trust wp i guess, but i suspect its using my TZ setting

[18:06] <tbrowder> and i assume the raku advent site is set to UTC

[18:07] *** Altai-man_ left
[18:25] *** Guest38485 left
[18:32] *** wamba left
[18:33] *** wamba joined
[18:41] *** Guest38485 joined
[18:44] <vrurg> japhb: ping?

[18:59] *** captain-adequate joined
[19:10] *** wamba left
[19:13] *** MasterDuke left
[19:25] <AlexDaniel> El_Che: I mean, you can parse colabti logs too…

[19:26] <AlexDaniel> El_Che: and if you really really ask tellable6 it'll tell you the whole db too :)

[19:26] *** wamba joined
[19:26] <El_Che> AlexDaniel: that's whataboutism you're doing there :)

[19:27] <tbrowder> .tell jmerelo my raku advent post is scheduled to publish on time

[19:27] <tellable6> tbrowder, I'll pass your message to jmerelo

[19:39] *** xenowoolfy joined
[19:39] *** xenowoolfy left
[20:04] *** Altai-man_ joined
[20:06] *** sena_kun left
[20:16] *** cpan-raku left
[20:17] *** cpan-raku joined
[20:17] *** cpan-raku left
[20:17] *** cpan-raku joined
[20:17] *** stoned75 joined
[20:38] *** MasterDuke joined
[21:06] *** rindolf left
[21:11] *** joule left
[21:11] <El_Che> .seen AlexDaniel 

[21:11] <tellable6> El_Che, I saw AlexDaniel 2019-11-28T20:59:05Z in #moarvm: <AlexDaniel> that's not the first time some tiny (but annoying) mistake happened during the release process, just because it's not automated enough

[21:11] <El_Che> .seen Zoffix

[21:11] <tellable6> El_Che, I saw Zoffix 2019-01-06T17:41:14Z in #perl6: <Zoffix> moritz: the project's direction and management style doesn't match my goals and I'll be happier elsewhere.

[21:11] <El_Che> (I was saw him popping on #perl, so I was curious)

[21:15] <lizmat> El_Che: fwiw, you can privmsg tellable as well

[21:15] <El_Che> good to know

[21:15] <El_Che> <insert a animated gif with "dramaaaaa">

[21:17] *** maggotbrain left
[21:18] *** maggotbrain joined
[21:21] <AlexDaniel> you can??

[21:21] <AlexDaniel> youh I don't think it works

[21:22] <AlexDaniel> and that limit should be lifted, actually

[21:24] *** johnjay joined
[21:39] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.19.4) by 03MARTIMM

[21:53] <Geth> ¦ problem-solving/CoC: 946e4d14d5 | (Elizabeth Mattijsen)++ | solutions/language/Path-to-Raku.md

[21:53] <Geth> ¦ problem-solving/CoC: Revert "s/RAKU_HOME/RAKUDO_HOME/"

[21:53] <Geth> ¦ problem-solving/CoC: 

[21:53] <Geth> ¦ problem-solving/CoC: This reverts commit 0ac3cb71be630f4b353c3e02775fb8d85d009530.

[21:53] <Geth> ¦ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/946e4d14d5

[21:53] <Geth> ¦ problem-solving/CoC: 182828725a | (Elizabeth Mattijsen)++ | solutions/meta/CoC.md

[21:53] <Geth> ¦ problem-solving/CoC: Initial version of CoC

[21:53] <Geth> ¦ problem-solving/CoC: 

[21:53] <Geth> ¦ problem-solving/CoC: This is essentially a markdown version of

[21:53] <Geth> ¦ problem-solving/CoC: 

[21:53] <Geth> ¦ problem-solving/CoC:    https://raw.githubusercontent.com/perl6/specs/master/S27-perl-culture-draft.pod6

[21:53] <Geth> ¦ problem-solving/CoC: 

[21:53] <Geth> ¦ problem-solving/CoC: with s/Perl 6/Raku/, intended as a starting point to further alterations and

[21:53] <Geth> ¦ problem-solving/CoC: additions to make it up-to-date and applicable to today's realities.

[21:53] <Geth> ¦ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/182828725a

[22:04] *** chloekek left
[22:05] *** sena_kun joined
[22:06] *** Altai-man_ left
[22:19] *** pmurias joined
[22:19] <pmurias> hi

[22:19] <tellable6> 2019-11-20T19:12:38Z #raku-dev <MasterDuke> pmurias: graalvm 19.3 now supports java 11. i'll give it a try when my os packages are updated. https://www.graalvm.org/docs/release-notes/19_3/

[22:19] <tellable6> 2019-11-20T19:16:28Z #raku-dev <MasterDuke> pmurias: `Added the new execute method to LoopNode, which allows loops to return values.` might be useful

[22:32] <AlexDaniel> lizmat: that revert is not meant to be in that branch

[22:32] <AlexDaniel> lizmat: rebase -i and get rid of the commit, then push -f

[22:34] *** wamba left
[22:34] <Geth> ¦ problem-solving/CoC: 732854aa1d | (Elizabeth Mattijsen)++ | solutions/language/Path-to-Raku.md

[22:34] <Geth> ¦ problem-solving/CoC: Revert "Revert "s/RAKU_HOME/RAKUDO_HOME/""

[22:34] <Geth> ¦ problem-solving/CoC: 

[22:34] <Geth> ¦ problem-solving/CoC: This reverts commit 946e4d14d568b7e47ea99420b729ce84b13b485d.

[22:34] <Geth> ¦ problem-solving/CoC: review: https://github.com/perl6/problem-solving/commit/732854aa1d

[22:37] <AlexDaniel> lizmat: can you submit a draft PR so that we can start leaving comments? Or how can I provide feedback?

[22:37] <lizmat> ah, ok, will wrap it in a draft PR

[22:38] <Geth> ¦ problem-solving: lizmat++ created pull request #136: A CoC for Raku

[22:38] <Geth> ¦ problem-solving: review: https://github.com/perl6/problem-solving/pull/136

[22:39] *** wamba joined
[22:43] <AlexDaniel> hm

[22:43] <AlexDaniel> I don't like the way it starts but then it's really good

[22:44] <AlexDaniel> I'll leave my comments

[22:44] *** mid_laptop joined
[22:50] <sena_kun> it's a first time /me actually sees a cool code of conduct without obvious exploits included

[22:50] <sena_kun> lizmat++

[22:51] <lizmat> sena_kun: I just copied it from the specs!

[22:51] <lizmat> can't take any credit for it

[22:51] <lizmat> except japhb

[22:51] <lizmat> and Faye Niemeyer

[22:51] <sena_kun> lizmat, I knew I read some of these phrases already

[22:53] <AlexDaniel> yea I also knew some of the words

[22:58] <sena_kun> I can't install LWP::Simple, but the repo clonned passes zef tests at ease...

[22:58] <sena_kun> can anyone confirm?

[22:59] <sena_kun> and it is not on CPAN, so the version should be ok...

[22:59] <sena_kun> Failed test 'Found pattern in downloaded file' at t/getstore.t line 38

[22:59] <sena_kun> it is used with advent script, don't wanna for people to run into this. :S

[23:00] *** jjatria joined
[23:01] <AlexDaniel> sena_kun: https://gist.github.com/AlexDaniel/bd8528c66900d3667aa8fbc630a01e77

[23:02] <sena_kun> AlexDaniel, phew, then it's just me... not much better, but better, thanks.

[23:02] * sena_kun does --force

[23:03] <stoned75> hi all

[23:03] <sena_kun> stoned75, hi!

[23:06] *** chloekek joined
[23:09] * sena_kun has the first advent post set and fully ready. m/

[23:10] <stoned75> there's something I don't understand in 'regexes' doc, if I may ask

[23:10] <sena_kun> stoned75, sure, feel wecomed to ask.

[23:11] <stoned75> great ! :) in https://docs.raku.org/language/regexes#Sigspace 2nd paragraph I do not understand the mention of ^&

[23:12] <sena_kun> stoned75, let me check...

[23:17] <sena_kun> hmm, thought it'd be a recent change, but it was there since the beginning of times...

[23:17] <stoned75> indeed. I checked ;-)

[23:19] <sena_kun> well, technically ^& is indeed a valid regex which means conjunction of beginning of the string with another branch that does nothing

[23:19] <sena_kun> ouch, I read it backwards

[23:19] <sena_kun> m: '^&' ~~ / <.ws> /

[23:19] <camelia> rakudo-moar f608a7a41: ( no output )

[23:19] <sena_kun> m: say '^&' ~~ / <.ws> /

[23:19] <camelia> rakudo-moar f608a7a41: OUTPUT: «｢｣␤»

[23:20] <sena_kun> unicodable6, help

[23:20] <unicodable6> sena_kun, Just type any Unicode character or part of a character name. Alternatively, you can also provide a code snippet. # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Unicodable

[23:20] <sena_kun> u: ^&

[23:20] <unicodable6> sena_kun, U+005E CIRCUMFLEX ACCENT [Sk] (^)

[23:20] <unicodable6> sena_kun, U+0026 AMPERSAND [Po] (&)

[23:20] <sena_kun> unidump: ^&

[23:20] <unicodable6> sena_kun, https://gist.github.com/5474ad8597ac71bc8c96046e8f91f3db

[23:21] <jnthn> I think it's actually using ^& as an example of two non-alphanumeric chars

[23:21] <sena_kun> ok, now I am confused

[23:21] <stoned75> :-}

[23:21] <jnthn> And saying that since <!ww> matches between them, then <.ws> also matches between them.

[23:22] <sena_kun> jnthn, but why  does it match `<.ws>`?

[23:22] <jnthn> "will match <.ws> in the middle"

[23:22] <sena_kun> ...but there are no white space characters in the middle...

[23:22] <jnthn> It's not so clearly written, but I think it means that `"^&" ~~ rule { '^' '&' }` is a match

[23:23] <Geth> ¦ doc: 7b2f354898 | finanalyst++ | doc/Type/CompUnit/PrecompilationRepository.pod6

[23:23] <Geth> ¦ doc: PrecompilationRepository document

[23:23] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7b2f354898

[23:23] <Geth> ¦ doc: 31e1fc58af | finanalyst++ | doc/Type/CompUnit/PrecompilationRepository.pod6

[23:23] <Geth> ¦ doc: add =end pod

[23:23] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/31e1fc58af

[23:23] <Geth> ¦ doc: 9a15417ae2 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Type/CompUnit/PrecompilationRepository.pod6

[23:23] <Geth> ¦ doc: Merge pull request #3098 from finanalyst/master

[23:23] <Geth> ¦ doc: 

[23:23] <Geth> ¦ doc: PrecompilationRepository document

[23:23] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/9a15417ae2

[23:23] <jnthn> sena_kun: Becuase the default <.ws> is defined as `<!ww> \s+` or similar

[23:23] <jnthn> And neither ^ nor & are word chars

[23:23] <sena_kun> jnthn, isn't it wrong?

[23:23] <jnthn> (Where `ww` means "there is a word character either side of me")

[23:24] <jnthn> Which "it"? :)

[23:24] <sena_kun> it is not \s*, but \s+

[23:24] <jnthn> Oh, right :)

[23:24] <sena_kun> I'd say this is a bug

[23:24] <jnthn> Yeah, there's a few formulations; `<!ww> | \s+` is the one I was thinking of.

[23:25] <jnthn> Bug...where?

[23:25] <sena_kun> jnthn, a white space rule matches something that is not a white space as long as it is not a word-like character?

[23:25] <jnthn> As long as there's not a word char both sides of the current position.

[23:26] <jnthn> Think about operators like `+` and `cmp`. I can write $a+$b, but not $acmp$b

[23:26] <sena_kun> m: say "I&can&do&things&haha& ~~ / 'I' <.ws> 'can' <.ws> /

[23:26] <camelia> rakudo-moar f608a7a41: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3hings&haha& ~~ / 'I' <.ws> 'can' <.ws> /7⏏5<EOL>␤    expecting …»

[23:26] <sena_kun> hmm

[23:26] <sena_kun> m: say 'I&can&do&things&haha&' ~~ / 'I' <.ws> 'can' <.ws> /

[23:26] <camelia> rakudo-moar f608a7a41: OUTPUT: «Nil␤»

[23:26] <jnthn> The default behavior of <.ws> deals with that.

[23:26] <sena_kun> m: say 'I&can' ~~ / 'I' <.ws> 'can' <.ws> /

[23:26] <camelia> rakudo-moar f608a7a41: OUTPUT: «Nil␤»

[23:26] <sena_kun> m: say 'I&can' ~~ / 'I' <.ws> 'can' /

[23:26] <camelia> rakudo-moar f608a7a41: OUTPUT: «Nil␤»

[23:27] <sena_kun> hmm

[23:27] <jnthn> <.ws> won't match the &; it's just saying that whitespace may be there in any situation, and if it's not then <!ww> better be False

[23:27] <jnthn> Well, "not match" rather than False

[23:28] <jnthn> Anyway, all it's trying to say in the doc is that <.ws> will match between ^ and &

[23:28] <jnthn> Probably it'd be clearer with a table of examples

[23:28] <sena_kun> because `regex ws { <!ww> \s* })`?

[23:28] <jnthn> So it's more obvious what is an example and what is regex syntax :)

[23:29] <sena_kun> oh, actually docs are saying about *, not +

[23:29] <jnthn> I think I had it right the first time actually :)

[23:29] * jnthn is a bit tired

[23:29] *** chloekek left
[23:30] <stoned75> sena_kun where does it say *, not + ?

[23:30] <sena_kun> stoned75, https://docs.raku.org/language/grammars#ws <-

[23:30] <stoned75> thanks

[23:30] <sena_kun> I'm checking the implementation right now, thought it is unlikely there is a thinko, but just maybe...

[23:31] <stoned75> ah I should Iave checked there!

[23:31] <stoned75> *have

[23:32] <jnthn> I don't think `<ww>` is documented

[23:33] <stoned75> m: 'ab' ~~ /<.ws>/

[23:33] <camelia> rakudo-moar f608a7a41: ( no output )

[23:33] <sena_kun> jnthn, https://docs.raku.org/syntax/%3C|w%3E

[23:33] <sena_kun> not a cigar maybe

[23:33] <sena_kun> m: say 'ab' ~~ /<.ws>/

[23:33] <camelia> rakudo-moar f608a7a41: OUTPUT: «｢｣␤»

[23:34] <stoned75> that's a match for me :)

[23:34] <stoned75> when the same paragraph I mentioned says it does not match :-}

[23:36] <sena_kun> stoned75, I think the paragraph refers to something like this:

[23:36] <sena_kun> m: say so "ab" ~~ m:s/a <.ws> a/;

[23:36] <camelia> rakudo-moar f608a7a41: OUTPUT: «False␤»

[23:36] <sena_kun> m: say so "^&" ~~ m:s/'^' <.ws> '&'/

[23:36] <camelia> rakudo-moar f608a7a41: OUTPUT: «True␤»

[23:37] <stoned75> oh IC

[23:38] <sena_kun> m: say so "ab" ~~ m:s/a <.ws> b/;

[23:38] <camelia> rakudo-moar f608a7a41: OUTPUT: «False␤»

[23:38] <sena_kun> actually it should be `b` at the end, but it doesn't change the result

[23:38] <stoned75> of course

[23:38] *** rbt left
[23:39] *** rbt joined
[23:39] <stoned75> <ws> is a strange beast. I'll stick to \s :)

[23:40] <sena_kun> oooooooh, I am starting to get it

[23:40] <sena_kun> ><.ws> > makes sure that words are separated

[23:40] <stoned75> anyway I think I get it now. thanks for your help guys

[23:40] <sena_kun> but ^& is not a, ahem, word

[23:41] <sena_kun> stoned75, thank you for your question! I am updating the docs right now...

[23:41] <stoned75> great! because I admit I'm not sure how I would try to improve it :-}

[23:42] <sena_kun> stoned75, in terms of "what to do" or "how to write it more clearly"?

[23:43] <stoned75> hum... both :-}

[23:44] <sena_kun> stoned75, as for the first one: the docs are on github, https://github.com/perl6/doc/, so if you have an account, you are set. if you want to report a bug or a mistake or something like this, but not sure what to do with it, you can just open an issue at https://github.com/Raku/doc/issues and someone will look into it

[23:45] <sena_kun> stoned75, when you see a typo or a wrong example or something like this, you can fork the repo, commit your fix, push it to your fork and do a pull request

[23:45] <stoned75> oh yes thanks. I meant I'm not sure if this paragraph should be left alone or not and if not I'm not sure how to improve it :)

[23:46] <stoned75> because well AlexDaniel gave me commit access a few weeks ago

[23:46] <sena_kun> stoned75, if you are not sure how to fix, just dropping by here or creating a ticket helps a lot

[23:46] <stoned75> I'm 'stoned' on github

[23:48] <stoned75> sure. thanks for your advices !

[23:49] <sena_kun> stoned75++

[23:50] <Geth> ¦ doc: c84c4bb61a | Altai-man++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[23:50] <Geth> ¦ doc: Clarify how ^& works with regard to <.ws> rule

[23:50] <Geth> ¦ doc: 

[23:50] <Geth> ¦ doc: @stoned++ for reporting and @jnthn++ for discussing.

[23:50] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/c84c4bb61a

[23:50] <AlexDaniel> :)

[23:51] <sena_kun> a-a-and a fix is here!

[23:51] <sena_kun> .oO ( the topic for my second blog post isn't )

[23:51] <stoned75> great. many thanks !

[23:55] <jnthn> sena_kun++

[23:55] <jnthn> Sleep time for me o/

[23:55] <sena_kun> jnthn, is my understanding correct?

[23:55] <sena_kun> jnthn, oh, have a good sleep!

