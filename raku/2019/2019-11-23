[00:03] *** Altai-man_ joined
[00:05] *** sena_kun left
[00:11] *** patrickb left
[00:16] *** holli joined
[00:18] *** Doc_Holliwould left
[00:19] *** Doc_Holliwould joined
[00:19] *** stoned75 left
[00:22] *** holli left
[00:23] *** Doc_Holliwood joined
[00:24] *** Altai-man_ left
[00:25] *** Doc_Holliwould left
[00:26] *** Doc_Holliwould joined
[00:29] *** Doc_Holliwood left
[00:30] *** Doc_Holliwood joined
[00:33] *** Doc_Holliwould left
[00:33] *** Doc_Holliwould joined
[00:35] *** Doc_Holliwood left
[00:37] *** Doc_Holliwood joined
[00:39] *** Doc_Holliwould left
[00:40] *** Doc_Holliwould joined
[00:42] *** Doc_Holliwood left
[00:44] *** holli joined
[00:46] *** Doc_Holliwould left
[00:47] *** Doc_Holliwood joined
[00:50] *** holli left
[00:51] *** Doc_Holliwould joined
[00:53] *** Doc_Holliwood left
[00:54] *** Doc_Holliwood joined
[00:56] *** Doc_Holliwould left
[00:58] *** Doc_Holliwould joined
[01:00] *** Doc_Holliwood left
[01:01] *** holli joined
[01:03] *** Doc_Holliwould left
[01:05] *** Doc_Holliwood joined
[01:07] *** holli left
[01:08] *** Doc_Holliwould joined
[01:10] *** Doc_Holliwood left
[01:12] *** holli joined
[01:14] *** Doc_Holliwould left
[01:15] *** Doc_Holliwould joined
[01:18] *** holli left
[01:19] *** holli joined
[01:21] *** Doc_Holliwould left
[01:22] *** Doc_Holliwould joined
[01:25] *** holli left
[01:26] *** Doc_Holliwood joined
[01:28] *** Doc_Holliwould left
[01:29] *** Doc_Holliwould joined
[01:32] *** Doc_Holliwood left
[01:33] *** holli joined
[01:34] <cpan-raku> New module released to CPAN! LibXML (0.1.12) by 03WARRINGD

[01:35] *** marcusr left
[01:36] *** wildtrees left
[01:36] *** Doc_Holliwould left
[01:36] *** marcusr joined
[01:36] *** Doc_Holliwould joined
[01:38] *** holli left
[01:40] *** Doc_Holliwood joined
[01:42] *** Doc_Holliwould left
[01:43] *** Doc_Holliwould joined
[01:45] *** stoned75 joined
[01:46] *** Doc_Holliwood left
[01:47] *** holli joined
[01:49] *** Doc_Holliwould left
[01:50] *** Doc_Holliwould joined
[01:53] *** holli left
[01:54] *** Doc_Holliwood joined
[01:56] *** Doc_Holliwould left
[01:58] *** Doc_Holliwould joined
[02:00] *** Doc_Holliwood left
[02:01] *** holli joined
[02:04] *** Doc_Holliwould left
[02:05] *** Doc_Holliwould joined
[02:07] *** holli left
[02:08] *** holli joined
[02:11] *** Doc_Holliwould left
[02:12] *** Doc_Holliwould joined
[02:14] *** holli left
[02:15] *** holli joined
[02:18] *** Doc_Holliwould left
[02:19] *** Doc_Holliwood joined
[02:21] *** holli left
[02:22] *** Doc_Holliwould joined
[02:25] *** Doc_Holliwood left
[02:25] *** ZzZombo left
[02:26] *** holli joined
[02:28] *** Doc_Holliwould left
[02:29] *** Doc_Holliwould joined
[02:31] *** holli left
[02:33] *** Doc_Holliwood joined
[02:34] *** Kaiepi left
[02:34] *** ZzZombo joined
[02:35] *** Doc_Holliwould left
[02:35] *** Kaiepi joined
[02:36] *** Doc_Holliwould joined
[02:39] *** Doc_Holliwood left
[02:40] *** Doc_Holliwood joined
[02:43] *** Doc_Holliwould left
[02:43] *** Doc_Holliwould joined
[02:46] *** Doc_Holliwood left
[02:59] *** ZzZombo left
[03:01] *** Manifest0 left
[03:02] *** Manifest0 joined
[03:13] *** ZzZombo joined
[03:16] *** holli joined
[03:19] *** Doc_Holliwould left
[03:20] *** Doc_Holliwould joined
[03:22] *** holli left
[03:23] *** holli joined
[03:27] *** Doc_Holliwould left
[03:27] *** Doc_Holliwood joined
[03:30] *** holli left
[03:30] *** Doc_Holliwould joined
[03:33] *** Doc_Holliwood left
[03:34] *** holli joined
[03:36] *** Doc_Holliwould left
[03:37] *** Doc_Holliwould joined
[03:40] *** holli left
[03:41] *** holli joined
[03:43] *** Doc_Holliwould left
[03:44] *** Doc_Holliwould joined
[03:46] *** holli left
[03:48] *** holli joined
[03:51] *** Doc_Holliwould left
[03:51] *** Doc_Holliwould joined
[03:54] *** holli left
[03:55] *** tamiko left
[03:56] *** holli joined
[03:58] *** Doc_Holliwould left
[04:00] *** Doc_Holliwould joined
[04:02] *** holli left
[04:03] *** holli joined
[04:06] *** Doc_Holliwould left
[04:07] *** Doc_Holliwood joined
[04:09] *** holli left
[04:10] *** Doc_Holliwould joined
[04:13] *** Doc_Holliwood left
[04:14] *** Doc_Holliwood joined
[04:16] *** Doc_Holliwould left
[04:17] *** Doc_Holliwould joined
[04:20] *** Doc_Holliwood left
[04:21] *** Doc_Holliwood joined
[04:23] *** Doc_Holliwould left
[04:24] *** Doc_Holliwould joined
[04:27] *** Doc_Holliwood left
[04:28] *** holli joined
[04:30] *** Doc_Holliwould left
[04:31] *** Doc_Holliwould joined
[04:34] *** holli left
[04:35] *** holli joined
[04:38] *** Doc_Holliwould left
[04:38] *** Doc_Holliwould joined
[04:41] *** holli left
[04:42] *** holli joined
[04:44] *** Doc_Holliwould left
[04:45] *** Doc_Holliwould joined
[04:48] *** holli left
[04:49] *** holli joined
[04:51] *** Doc_Holliwould left
[04:52] *** Doc_Holliwould joined
[04:54] *** holli left
[04:56] *** holli joined
[04:59] *** Doc_Holliwould left
[05:00] *** Doc_Holliwould joined
[05:03] *** holli left
[05:04] *** holli joined
[05:06] *** Doc_Holliwould left
[05:07] *** Doc_Holliwould joined
[05:10] *** holli left
[05:11] *** holli joined
[05:13] *** Doc_Holliwould left
[05:14] *** Doc_Holliwould joined
[05:17] *** holli left
[05:18] *** holli joined
[05:20] *** Doc_Holliwould left
[05:21] *** Doc_Holliwould joined
[05:23] *** holli left
[05:25] *** holli joined
[05:27] *** Doc_Holliwould left
[05:28] *** Doc_Holliwould joined
[05:31] *** holli left
[05:32] *** holli joined
[05:34] *** Doc_Holliwould left
[05:34] *** rindolf joined
[05:35] *** Doc_Holliwould joined
[05:38] *** holli left
[05:39] *** holli joined
[05:41] *** Doc_Holliwould left
[05:42] *** Doc_Holliwould joined
[05:46] *** holli left
[05:47] *** Doc_Holliwood joined
[05:48] *** Doc_Holliwould left
[05:49] *** Doc_Holliwould joined
[05:52] *** Doc_Holliwood left
[05:53] *** holli joined
[05:55] *** Doc_Holliwould left
[05:57] *** ToddAndMargo joined
[05:58] *** Doc_Holliwood joined
[05:58] <ToddAndMargo> in a "for" loop, what is the syntax for "by 3"?  for @x by 3?

[06:00] *** holli left
[06:01] *** Doc_Holliwould joined
[06:04] *** Doc_Holliwood left
[06:05] *** holli joined
[06:07] *** Doc_Holliwould left
[06:08] *** Doc_Holliwould joined
[06:10] *** holli left
[06:12] *** holli joined
[06:13] <ToddAndMargo> anyone on newbie duty?

[06:14] *** Doc_Holliwould left
[06:15] *** Doc_Holliwould joined
[06:17] *** ToddAndMargo left
[06:18] *** holli left
[06:19] *** holli joined
[06:22] *** Doc_Holliwould left
[06:22] *** Doc_Holliwould joined
[06:25] *** holli left
[06:26] *** holli joined
[06:28] *** Doc_Holliwould left
[06:29] *** Doc_Holliwould joined
[06:32] *** holli left
[06:33] *** holli joined
[06:36] *** Doc_Holliwould left
[06:36] *** Doc_Holliwood joined
[06:39] *** holli left
[06:40] *** Doc_Holliwould joined
[06:42] *** Doc_Holliwood left
[06:43] *** holli joined
[06:45] *** Doc_Holliwould left
[06:48] *** Doc_Holliwould joined
[06:51] *** holli left
[06:52] *** holli joined
[06:55] *** Doc_Holliwould left
[06:57] *** Doc_Holliwould joined
[06:59] *** holli left
[07:00] *** holli joined
[07:02] *** Doc_Holliwould left
[07:04] *** Doc_Holliwould joined
[07:07] *** holli left
[07:07] *** holli joined
[07:09] *** Doc_Holliwould left
[07:11] *** Doc_Holliwould joined
[07:13] *** holli left
[07:14] *** holli joined
[07:17] *** Doc_Holliwould left
[07:18] *** Doc_Holliwould joined
[07:21] *** holli left
[07:21] *** holli joined
[07:24] *** robertle joined
[07:24] *** Doc_Holliwould left
[07:25] *** Doc_Holliwould joined
[07:27] *** holli left
[07:28] *** holli joined
[07:30] *** Doc_Holliwould left
[07:32] *** Doc_Holliwould joined
[07:35] *** holli left
[07:36] *** Doc_Holliwood joined
[07:37] *** Doc_Holliwould left
[07:39] *** Doc_Holliwould joined
[07:41] *** Doc_Holliwood left
[07:42] *** holli joined
[07:45] *** Doc_Holliwould left
[07:46] *** Doc_Holliwould joined
[07:48] *** holli left
[07:49] *** holli joined
[07:51] *** Doc_Holliwould left
[07:53] *** Doc_Holliwould joined
[07:55] *** holli left
[07:57] *** holli joined
[07:59] *** Doc_Holliwould left
[08:00] *** Doc_Holliwould joined
[08:03] *** holli left
[08:04] *** holli joined
[08:06] *** Doc_Holliwould left
[08:07] *** Doc_Holliwould joined
[08:09] *** MasterDuke joined
[08:10] *** holli left
[08:11] *** holli joined
[08:14] *** Doc_Holliwould left
[08:14] *** Doc_Holliwould joined
[08:16] *** holli left
[08:18] *** holli joined
[08:21] *** Doc_Holliwould left
[08:21] *** Doc_Holliwould joined
[08:24] *** holli left
[08:25] *** Doc_Holliwood joined
[08:28] *** Doc_Holliwould left
[08:28] *** Doc_Holliwould joined
[08:31] *** Doc_Holliwood left
[08:32] *** holli joined
[08:34] *** Doc_Holliwould left
[08:35] *** Doc_Holliwould joined
[08:35] *** cpan-raku left
[08:37] *** cpan-raku joined
[08:37] *** cpan-raku left
[08:37] *** cpan-raku joined
[08:38] *** holli left
[08:39] *** Doc_Holliwood joined
[08:41] *** Doc_Holliwould left
[08:42] *** Doc_Holliwould joined
[08:45] *** Doc_Holliwood left
[08:46] *** holli joined
[08:49] *** Doc_Holliwould left
[08:49] *** Doc_Holliwould joined
[08:52] *** holli left
[08:53] *** Doc_Holliwood joined
[08:55] *** Doc_Holliwould left
[08:56] *** Doc_Holliwould joined
[08:59] *** Doc_Holliwood left
[09:24] *** chloekek joined
[09:25] *** sena_kun joined
[10:02] *** Altai-man_ joined
[10:05] *** sena_kun left
[10:12] <AlexDaniel> ToddAndMargo: .rotor(3) ?

[10:12] <tellable6> AlexDaniel, I'll pass your message to ToddAndMargo

[10:24] * Altai-man_ finally has some time for sourceable m/

[10:24] *** chloekek left
[10:27] <AlexDaniel> yaay

[11:14] *** robertle left
[11:24] *** robertle joined
[12:03] *** sena_kun joined
[12:05] *** Altai-man_ left
[12:51] *** maettu joined
[12:52] *** lucasb joined
[12:53] *** rbt joined
[12:58] <sena_kun> m: 42.say

[12:58] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´42‚ê§¬ª

[12:58] <sena_kun> evalable6, 42.say

[12:58] <evalable6> sena_kun, rakudo-moar e03f01347: OUTPUT: ¬´42‚ê§¬ª

[13:06] *** stoned75 left
[13:23] *** rbt left
[13:28] <cpan-raku> New module released to CPAN! Pg::Notify (0.0.4) by 03JSTOWE

[14:02] *** Altai-man_ joined
[14:04] *** sena_kun left
[14:09] <AlexDaniel> Altai-man_: haha, that error message :D

[14:12] <Altai-man_> AlexDaniel, I still think we should provide some stacktrace in case of error though, but not sure how to do it nicely.

[14:12] * Altai-man_ runs away to do other tasks for today

[14:13] <AlexDaniel> Altai-man_: where would the stacktrace come from?

[14:14] <AlexDaniel> Altai-man_: I mean, if you just `die`, the bot will gist the full exception and give a link

[14:14] <AlexDaniel> but you can also just return any output from the process, it'll also gist it because it's too long

[14:14] *** holli joined
[14:17] *** Doc_Holliwould left
[14:18] *** Doc_Holliwould joined
[14:18] *** Voldenet left
[14:20] *** holli left
[14:21] *** Doc_Holliwood joined
[14:24] *** Doc_Holliwould left
[14:25] *** Doc_Holliwould joined
[14:27] *** Voldenet joined
[14:27] *** Voldenet left
[14:27] *** Voldenet joined
[14:27] *** Doc_Holliwood left
[14:28] *** holli joined
[14:32] *** Doc_Holliwould left
[14:32] *** Doc_Holliwood joined
[14:34] *** holli left
[14:35] *** Doc_Holliwould joined
[14:38] *** Doc_Holliwood left
[14:39] *** holli joined
[14:41] *** Doc_Holliwould left
[14:42] *** Doc_Holliwould joined
[14:45] *** holli left
[14:46] *** Doc_Holliwood joined
[14:48] *** Doc_Holliwould left
[14:49] *** Doc_Holliwould joined
[14:52] *** Doc_Holliwood left
[15:07] *** chloekek joined
[16:04] *** sena_kun joined
[16:05] *** Altai-man_ left
[16:14] *** wamba joined
[16:14] <Geth> ¬¶ problem-solving: JJ assigned to AlexDaniel Issue Harassment by another member of the community https://github.com/perl6/problem-solving/issues/131

[16:26] *** wildtrees joined
[16:52] *** holli joined
[16:55] *** Doc_Holliwould left
[16:56] *** Doc_Holliwould joined
[16:59] *** holli left
[17:00] *** Doc_Holliwood joined
[17:02] *** Doc_Holliwould left
[17:03] *** Doc_Holliwould joined
[17:03] *** nosqrt joined
[17:05] *** Doc_Holliwood left
[17:07] *** Doc_Holliwood joined
[17:09] *** Doc_Holliwould left
[17:10] *** Doc_Holliwould joined
[17:14] *** Doc_Holliwood left
[17:14] *** holli joined
[17:16] *** Doc_Holliwould left
[17:17] *** Doc_Holliwood joined
[17:20] *** holli left
[17:20] <uzl[m]> Sad to read about that, JJ. With the fear of misjudging someone, I think ugexe has been forgetting about Raku's mantra of being nice to other people. It's undoubtable that he's quite knowledgeable (and most oftentime right about things) but his way of pointing things out are less than nice, and most likely hurtful, disconcerting and discouraging.

[17:21] *** Doc_Holliwould joined
[17:23] *** Doc_Holliwood left
[17:24] *** holli joined
[17:27] *** Doc_Holliwould left
[17:28] *** Doc_Holliwood joined
[17:29] <Geth> ¬¶ problem-solving: lizmat self-assigned Harassment by another member of the community https://github.com/perl6/problem-solving/issues/131

[17:30] <Geth> ¬¶ problem-solving: lizmat unassigned from AlexDaniel Issue Harassment by another member of the community https://github.com/perl6/problem-solving/issues/131

[17:30] *** holli left
[17:31] *** Doc_Holliwould joined
[17:34] *** Doc_Holliwood left
[17:35] *** Doc_Holliwood joined
[17:37] *** Doc_Holliwould left
[17:38] *** Doc_Holliwould joined
[17:40] *** Doc_Holliwood left
[17:42] *** Doc_Holliwood joined
[17:42] *** stoned751 joined
[17:44] *** Doc_Holliwould left
[17:45] *** Doc_Holliwould joined
[17:48] *** Doc_Holliwood left
[17:48] *** its_spaceman joined
[17:49] *** Doc_Holliwood joined
[17:51] *** Doc_Holliwould left
[17:52] *** Doc_Holliwould joined
[17:54] *** Doc_Holliwood left
[17:57] *** holli joined
[18:00] *** Doc_Holliwould left
[18:01] *** Doc_Holliwood joined
[18:02] *** Altai-man_ joined
[18:03] *** holli left
[18:05] *** Doc_Holliwould joined
[18:05] *** sena_kun left
[18:05] *** its_spaceman left
[18:08] *** Doc_Holliwood left
[18:09] *** holli joined
[18:12] *** Doc_Holliwould left
[18:13] *** Doc_Holliwood joined
[18:14] *** holli left
[18:16] *** Doc_Holliwould joined
[18:18] *** Doc_Holliwood left
[18:19] *** Doc_Holliwood joined
[18:22] *** Doc_Holliwould left
[18:23] *** Doc_Holliwould joined
[18:23] *** stoned751 left
[18:25] *** Doc_Holliwood left
[18:26] <cpan-raku> New module released to CPAN! Gnome::GObject (0.15.2) by 03MARTIMM

[18:26] *** Doc_Holliwood joined
[18:29] *** Doc_Holliwould left
[18:30] *** Doc_Holliwould joined
[18:32] *** Doc_Holliwood left
[18:33] *** Doc_Holliwood joined
[18:36] *** Doc_Holliwould left
[18:37] *** Doc_Holliwould joined
[18:39] *** Doc_Holliwood left
[18:40] *** Doc_Holliwood joined
[18:42] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.19.2) by 03MARTIMM

[18:43] *** Doc_Holliwould left
[18:44] *** Doc_Holliwould joined
[18:46] *** Doc_Holliwood left
[18:47] *** Doc_Holliwood joined
[18:50] *** Doc_Holliwould left
[18:51] *** Doc_Holliwould joined
[18:53] *** Doc_Holliwood left
[18:54] *** Doc_Holliwood joined
[18:57] *** Doc_Holliwould left
[18:58] *** Doc_Holliwould joined
[19:00] *** Doc_Holliwood left
[19:01] *** holli joined
[19:04] *** Doc_Holliwould left
[19:05] *** Doc_Holliwood joined
[19:07] *** holli left
[19:08] *** Doc_Holliwould joined
[19:11] *** Doc_Holliwood left
[19:12] *** holli joined
[19:14] *** Doc_Holliwould left
[19:15] *** Doc_Holliwood joined
[19:15] *** Xliff joined
[19:16] <Xliff> .seen moritz

[19:16] <tellable6> Xliff, I saw moritz 2019-11-22T19:51:18Z in #raku: <moritz> it's going to be a three way marriage: the bot, AlexDaniel and me :D

[19:16] <moritz> o/

[19:16] <Xliff> \o

[19:16] <Xliff> moritz++: Do you have any suggestions on the best way to turn this into a proper grammar? https://github.com/Xliff/p6-GtkPlus/blob/master/scripts/c-parser-test.pl6

[19:17] <Xliff> My biggest problem comes with porting the availability token.

[19:18] *** holli left
[19:19] *** Doc_Holliwould joined
[19:20] <moritz> Xliff: you mean parameterizing it?

[19:20] <moritz> there are two approaches here that could work well

[19:21] <moritz> the most obvious is to have a token ad { 'AVAILABLE' | 'DEPRECATED'}

[19:21] <moritz> and if necessary, override this token, either through a mixin or by subclassing

[19:21] *** Doc_Holliwood left
[19:22] <moritz> the other option is to always parse both, but add an assertion afterwards that depends on a dynamic variable

[19:22] *** Doc_Holliwood joined
[19:23] <moritz> token availability { ( <[A..Z]>+'_' )+? <ad> <?{ $<ad>.Str (elem) @*ALLOWED_STATES }> ... }

[19:24] <moritz> the third approach is to always allow both states, and do some kind of filtering afterwards

[19:24] *** wildtrees left
[19:24] <Xliff> m: grammar A { TOP { <a> }; rule a { 'b' } }; grammar B does A { rule a { 'b' }; }; for <a b> { my $g = $_ eq 'a' ?? A !! B; say $g.parse($_) }

[19:24] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§A is not composable, so B cannot compose it‚ê§at <tmp>:1‚ê§¬ª

[19:24] <Xliff> m: grammar A { rule TOP { <a> }; rule a { 'b' } }; grammar B does A { rule a { 'b' }; }; for <a b> { my $g = $_ eq 'a' ?? A !! B; say $g.parse($_) }

[19:24] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§A is not composable, so B cannot compose it‚ê§at <tmp>:1‚ê§¬ª

[19:25] <Xliff> m: grammar A { rule TOP { <a> }; rule a { 'b' } }; grammar B is A { rule a { 'b' }; }; for <a b> { my $g = $_ eq 'a' ?? A !! B; say $g.parse($_) }

[19:25] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´Nil‚ê§ÔΩ¢bÔΩ£‚ê§ a => ÔΩ¢bÔΩ£‚ê§¬ª

[19:25] <Xliff> m: grammar A { rule TOP { <a> }; rule a { 'a' } }; grammar B is A { rule a { 'b' }; }; for <a b> { my $g = $_ eq 'a' ?? A !! B; say $g.parse($_) }

[19:25] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§ a => ÔΩ¢aÔΩ£‚ê§ÔΩ¢bÔΩ£‚ê§ a => ÔΩ¢bÔΩ£‚ê§¬ª

[19:25] <Xliff> Why didn't I think of that... :)

[19:25] <Xliff> ++(moritz++)

[19:25] <moritz> haven't read my book, eh? :D

[19:25] <Xliff> Actually, I was!

[19:25] *** Doc_Holliwould left
[19:26] <Xliff> Got up with trying to look at it too literally.

[19:26] <Xliff> Wanted to add a parameter to availability to do the logic and got caught up with "expecting 2 parameters only got 1" error.

[19:26] <moritz> I think the example I gave in the book was parsing different SQL dialects with subclasses

[19:27] *** Doc_Holliwould joined
[19:27] <moritz> yes, paramaterization is still too easy to do wrong :(

[19:27] <Xliff> Yeah. Started with the search string "code block" and missed it.

[19:27] <Xliff> This is much cleaner. 

[19:28] <Xliff> moritz: It's still not quite clear about the variety of code blocks you can have in a regular expression.

[19:29] <moritz> :(

[19:29] *** Doc_Holliwood left
[19:30] <Xliff> There's <{ }>, <?{ }>, ":...;"

[19:30] <Xliff> Are you going to release a volume 2?

[19:30] *** Doc_Holliwood joined
[19:31] <moritz> I don't think so

[19:31] <moritz> it's the worst selling of my 3 "proper" books

[19:32] <Xliff> :(

[19:32] <moritz> (but the one I'm most proud of)

[19:32] <Xliff> Me too!

[19:33] *** Doc_Holliwould left
[19:34] *** Doc_Holliwould joined
[19:36] *** Doc_Holliwood left
[19:37] *** Doc_Holliwood joined
[19:40] *** Doc_Holliwould left
[19:41] *** Doc_Holliwould joined
[19:43] *** Doc_Holliwood left
[19:43] <Xliff> moritz: Ah! The thing "code blocks" missed was Table 4-3.

[19:44] *** Doc_Holliwood joined
[19:47] *** Doc_Holliwould left
[19:48] *** Doc_Holliwould joined
[19:50] *** Doc_Holliwood left
[19:51] *** Doc_Holliwood joined
[19:54] *** Doc_Holliwould left
[19:55] *** Doc_Holliwould joined
[19:57] *** Doc_Holliwood left
[19:58] *** Geth_ joined
[19:58] <Xliff> What's the easiest way to re-export symbols?

[19:58] *** Doc_Holliwood joined
[19:59] <Xliff> Is there a better way than this? 

[19:59] <Xliff> https://www.nntp.perl.org/group/perl.perl6.users/2017/01/msg3120.html

[20:01] *** Doc_Holliwould left
[20:01] *** Doc_Holliwould joined
[20:03] *** sena_kun joined
[20:04] <lizmat> sub EXPORT { <&foo &bar &baz>.map( { $_ => ::{$_} ).Map }

[20:04] <lizmat> Xliff: off the top of my semi-conscious head

[20:04] *** Doc_Holliwood left
[20:05] *** Altai-man_ left
[20:05] <Xliff> lizmat: Yeah, I got that from the newsgroup method.

[20:05] *** Doc_Holliwood joined
[20:05] <Xliff> Now I am thinking about how I can do that WITHOUT listing the whole sheadload of symbols I have to re-export.

[20:06] <Xliff> I'm thinking of adding another trait, but I wonder about the best way to do that.

[20:06] <lizmat> P5builtins uses: %export = MY::.keys.grep( *.starts-with('&') ).map: { $_ => ::($_) };

[20:06] <Xliff> lizmat++: Ooh! That's nice!

[20:06] <lizmat> and then sub EXPORT { %export }

[20:06] <Xliff> Also need it for constants, though.

[20:07] <Xliff> And classes

[20:07] *** andrzejku joined
[20:07] <andrzejku> hi

[20:07] <tellable6> 2019-11-23T17:26:59Z #perl6 <uzl[m]> andrzejku Make sure to join #raku ;-).

[20:07] <andrzejku> thnks

[20:07] <andrzejku> :)

[20:08] *** Doc_Holliwould left
[20:08] <lizmat> Xliff: that just means you need a smarter grep  :-)

[20:08] <Xliff> lizmat: Or a trait-mod.

[20:08] *** Doc_Holliwould joined
[20:09] <Xliff> lizmat: Or a trait-mod AND a grep!

[20:09] <lizmat> :-)

[20:09] <Xliff> Looking for trait-mod<is>(:$export...) then

[20:11] <lizmat> unfortunately, "is export" doesn't attach anything on the object, it just puts stuff in namespaces  :-(

[20:11] <Xliff> What's a good parameter to use for a trait-mod<is>(:$re-export!) that will work with constants, classes, enums and subs?

[20:11] <Kaiepi> m: use Test; say Test::EXPORT::DEFAULT::.grep(*.key.starts-with: '&').map(*.key)

[20:11] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´(&fails-like &done-testing &eval-dies-ok &MONKEY-SEE-NO-EVAL &cmp-ok &isa-ok &use-ok &is &diag &bail-out &can-ok &isnt &is-approx &ok &is_approx &nok &dies-ok &is-deeply &flunk &unlike &skip &plan &does-ok &throws-like &lives-ok &eval-lives-ok &skip-r‚Ä¶¬ª

[20:11] <tellable6> 2019-11-21T20:42:52Z #raku-dev <nine> Kaiepi: I don't think this is a problem solving issue. It's plain bugs that need fixing and the fix is usually some deconts and hllize. See commit 7bc6e46fbd47d7a3c5d51225348bac756d3b7ff6

[20:11] <Xliff> lizmat: My re-export trait will need to.

[20:12] <lizmat> Xliff: do you want to re-export all things you've imported, or a subset ?

[20:12] *** Doc_Holliwood left
[20:12] <Xliff> Everything that re-export marks as Re-Exportable

[20:12] *** Doc_Holliwood joined
[20:12] <Xliff> But first I need to figure out how to capture everything I want to re-export

[20:12] <Xliff> Would Mu work?

[20:13] <lizmat> ok, so just reading the keys from EXPORT::DEFAULT won't cut it

[20:13] <Xliff> lizmat: constants and enums won't be listed in EXPORT::DEFAULT?

[20:13] <lizmat> do you control the code that you import from ?

[20:13] <Xliff> Yes.

[20:14] <lizmat> then perhaps create a method that would generate the pairs for exporting inside the code you import from ?

[20:14] <Xliff> Well.... everything but cairo-p6, but if I import that, I should be able to re-export, yes?

[20:14] <lizmat> base on its EXPORT::DEFAULT maybe?

[20:14] <Xliff> Hmmm...

[20:14] <lizmat> you can re-export anything  :-)

[20:14] *** Doc_Holliwould left
[20:15] *** Doc_Holliwould joined
[20:18] <Xliff> OK. So what should my trait-mod:<is> look like?

[20:18] *** Doc_Holliwood left
[20:18] <Xliff> m: role ReExportable {}; multi sub trait-mod:<is>(Mu \var, :$re-export!) { var does ReExportable };

[20:18] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Cannot add tokens of category 'trait-mod'‚ê§at <tmp>:1‚ê§------> 3eExportable {}; multi sub trait-mod:<is>7‚èè5(Mu \var, :$re-export!) { var does ReExp‚ê§¬ª

[20:19] <Xliff> m: role ReExportable {}; multi sub trait_mod:<is>(Mu \var, :$re-export!) { var does ReExportable };

[20:19] <camelia> rakudo-moar e03f01347: ( no output )

[20:19] *** holli joined
[20:19] <Xliff> m: package ReExport { role ReExportable {}; multi sub trait_mod:<is>(Mu \var, :$re-export!) { var does ReExportable }; }; package B { require ReExport; };

[20:19] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´Could not find ReExport at line 0 in:‚ê§    inst#/home/camelia/.perl6‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/site‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/vendor‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/core‚ê§   ‚Ä¶¬ª

[20:20] <Xliff> m: package ReExport { role ReExportable {}; multi sub trait_mod:<is>(Mu \var, :$re-export!) { var does ReExportable }; }; package B { require ::(ReExport); };

[20:20] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´Cannot unbox a type object (ReExport) to a str.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:20] <Xliff> m: package ReExport { role ReExportable {}; multi sub trait_mod:<is>(Mu \var, :$re-export!) { var does ReExportable }; }; ReExport.say

[20:20] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´(ReExport)‚ê§¬ª

[20:20] <Xliff> m: package ReExport { role ReExportable {}; multi sub trait_mod:<is>(Mu \var, :$re-export!) { var does ReExportable }; }; package B { sub a is export is re-export { 'a' }; }; 

[20:20] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Can't use unknown trait 'is' -> 're-export' in a sub declaration.‚ê§at <tmp>:1‚ê§    expecting any of:‚ê§        rw raw hidden-from-backtrace hidden-from-USAGE pure default‚ê§        DEPRECATED inlinabl‚Ä¶¬ª

[20:21] <Xliff> m: package ReExport { role ReExportable {}; multi sub trait_mod:<is> is export (Mu \var, :$re-export!) { var does ReExportable }; }; package B { sub a is export is re-export { 'a' }; }; 

[20:21] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3e {}; multi sub trait_mod:<is> is export7‚èè5 (Mu \var, :$re-export!) { var does ReEx‚ê§    expecting any of:‚ê§        new name to be defined‚ê§¬ª

[20:21] <Xliff> m: package ReExport { role ReExportable {}; multi sub trait_mod:<is> (Mu \var, :$re-export!) is export { var does ReExportable }; }; package B { sub a is export is re-export { 'a' }; }; 

[20:21] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Can't use unknown trait 'is' -> 're-export' in a sub declaration.‚ê§at <tmp>:1‚ê§    expecting any of:‚ê§        rw raw hidden-from-backtrace hidden-from-USAGE pure default‚ê§        DEPRECATED inlinabl‚Ä¶¬ª

[20:22] <Xliff> m: package ReExport { role ReExportable {}; multi sub trait_mod:<is> (Mu \var, :$re-export!) is export { var does ReExportable }; }; package B { import ReExport; sub a is export is re-export { 'a' }; }; 

[20:22] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Can't use unknown trait 'is' -> 're-export' in a sub declaration.‚ê§at <tmp>:1‚ê§    expecting any of:‚ê§        rw raw hidden-from-backtrace hidden-from-USAGE pure default‚ê§        DEPRECATED inlinabl‚Ä¶¬ª

[20:22] *** Doc_Holliwould left
[20:22] <Xliff> So how do I import inlined packages?

[20:22] *** Doc_Holliwood joined
[20:24] <lizmat> fully qualified if they are our ?

[20:24] <Xliff> m: our package ReExport { role ReExportable {}; multi sub trait_mod:<is> (Mu \var, :$re-export!) is export { var does ReExportable }; }; package B { sub a is export is re-export { 'a' }; }; 

[20:24] <camelia> rakudo-moar e03f01347: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Can't use unknown trait 'is' -> 're-export' in a sub declaration.‚ê§at <tmp>:1‚ê§    expecting any of:‚ê§        rw raw hidden-from-backtrace hidden-from-USAGE pure default‚ê§        DEPRECATED inlinabl‚Ä¶¬ª

[20:24] <Xliff> :*

[20:25] *** holli left
[20:27] *** Doc_Holliwould joined
[20:30] *** Doc_Holliwood left
[20:31] *** Doc_Holliwood joined
[20:34] <lizmat> afk again&

[20:34] *** Doc_Holliwould left
[20:35] *** holli joined
[20:37] *** Doc_Holliwood left
[20:38] *** Doc_Holliwood joined
[20:41] *** holli left
[20:41] *** Doc_Holliwould joined
[20:44] *** Doc_Holliwood left
[20:45] *** Doc_Holliwood joined
[20:47] *** Doc_Holliwould left
[20:48] *** Doc_Holliwould joined
[20:51] *** Doc_Holliwood left
[20:52] *** Doc_Holliwood joined
[20:55] *** Doc_Holliwould left
[20:57] <SmokeMachine> Xliff: maybe something like this? https://github.com/FCO/Red/blob/master/lib/Red.pm6#L66

[20:57] *** Doc_Holliwould joined
[20:58] <Xliff> SmokeMachine: Will that catch everything?

[20:58] <Xliff> constants, enums, classes?

[20:58] <SmokeMachine> yes...

[20:58] <Xliff> \o/

[20:58] <Xliff> SmokeMachine++

[20:58] <Xliff> That will work, for now.

[20:59] *** maettu left
[20:59] <Xliff> SmokeMachine: What if I have other exportable modules defined in that same compunit. Will it catch those to, or will I need to use MY::EXPORT::ALL::

[21:00] *** Doc_Holliwood left
[21:00] *** Doc_Holliwood joined
[21:04] *** Doc_Holliwould left
[21:04] *** andrzejku left
[21:04] *** Doc_Holliwould joined
[21:07] *** Doc_Holliwood left
[21:07] *** Doc_Holliwood joined
[21:10] *** Doc_Holliwould left
[21:11] *** Doc_Holliwould joined
[21:13] *** Doc_Holliwood left
[21:14] *** Doc_Holliwood joined
[21:17] *** Doc_Holliwould left
[21:18] *** Doc_Holliwould joined
[21:21] *** Doc_Holliwood left
[21:21] *** Doc_Holliwood joined
[21:22] *** stoned751 joined
[21:24] *** Doc_Holliwould left
[21:25] *** Doc_Holliwould joined
[21:28] * sena_kun is somehow close to give up on using Red

[21:28] *** Doc_Holliwood left
[21:28] *** Doc_Holliwood joined
[21:29] * sena_kun also encourages SmokeMachine to apply for a grant

[21:29] <SmokeMachine> why give up?? :(

[21:31] <sena_kun> SmokeMachine, I am getting errors often even on writing "simple" cases. I think it needs more integration testing (along with  bug fixes).

[21:31] *** lucasb left
[21:31] <SmokeMachine> sena_kun: yes... it needs a lot of more tests... :(

[21:31] *** Doc_Holliwould left
[21:32] <sena_kun> A simple User.^create call that worked very ok a couple of days ago now gives me "Type check failed in assignment to &; expected Callable but got Mu (Mu) in method get-build at (MetamodelX::Red::Relationship) line 51" and I have no idea what to do.

[21:32] *** Doc_Holliwould joined
[21:32] <sena_kun> SmokeMachine, thus I believe that dedicating more paid time on it would be helpful. :)

[21:33] <SmokeMachine> sena_kun: was it working on master and stopped working on join?

[21:33] <sena_kun> SmokeMachine, I am not sure, let me try...

[21:35] *** Doc_Holliwood left
[21:35] *** Doc_Holliwood joined
[21:38] <Geth_> ¬¶ perl6.org: f0e8261871 | (Naoum Hankache)++ (committed using GitHub Web editor) | source/whatever/index.html

[21:38] <Geth_> ¬¶ perl6.org: perl6.nanorc -> raku.nanorc

[21:38] <Geth_> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/commit/f0e8261871

[21:38] *** Doc_Holliwould left
[21:39] <Xliff> sena_kun: Can you psot some code?

[21:39] <sena_kun> SmokeMachine, on master I am getting another error, `Too many positionals passed; expected 1 or 2 arguments but got 3` for `User.^create: :$username, :password(argon2-hash($password));`

[21:39] <Xliff> s/psot/post/

[21:39] *** Doc_Holliwould joined
[21:39] <sena_kun> Xliff, I'll be in advent post, so I'd like to avoid that, to be honest... I think I'll write it using DBIish for now and then ones who want to re-implement it with Red - you are welcome!

[21:40] <sena_kun> I have days 2 and 4, and a lot of work to do besides this, so really don't want to risk. :(

[21:40] <Xliff> sena_kun: You are allowed to spoil advent posts when debugging, you know. :)

[21:40] <Xliff> But I get it.

[21:40] <sena_kun> Xliff, well, on 2nd December you can take it and rewrite it. ;)

[21:40] <sena_kun> I'll prepare a nice repo, I think.

[21:40] <Xliff> SmokeMachine: Getting this when running the test suite...does GLib::Roles::StaticClass

[21:40] <Xliff> Oops

[21:41] <sena_kun> I hope, heh.

[21:41] <Xliff> t/31-update.t ...................... 1/? Use of Nil in numeric context

[21:41] <Xliff>   in block  at /home/home/cbwood/Other Projects/Red/lib/.precomp/6087A65AEA3BA6735341C95869FC5014501AA04B/F2/F2E53992C6FFEDC5DC3B09E6E9D69BBEB965D56B line 1

[21:42] *** Doc_Holliwood left
[21:42] <SmokeMachine> sena_kun: sorry for all the troubles...

[21:42] *** Doc_Holliwood joined
[21:43] <SmokeMachine> Xliff: really? for me the tests are passing...

[21:43] <sena_kun> SmokeMachine, no problem at all! I hope Red will mature nicely soon. :)

[21:43] <Xliff> SmokeMachine: Test passes, just I get that warning consistently

[21:44] <Xliff> Rakudo version 2019.07.1-463-g1d84c64d6 built on MoarVM version 2019.07.1-314-ga26d7fff8

[21:44] <SmokeMachine> Xliff: yes... that... :( I have forgotten about that... :(

[21:45] *** Doc_Holliwould left
[21:46] *** Kaiepi left
[21:47] *** Kaiepi joined
[21:48] *** Kaiepi left
[21:52] <Xliff> SmokeMachine: LOL!

[21:53] <Xliff> Well, that was a reminder. We all need them from time to time. :)

[21:55] <SmokeMachine> I think I'll not have enough time to publish the join branch before my post date... :(

[22:01] <Xliff> :(

[22:01] <Xliff> Best to publish when it's done.

[22:02] <El_Che>  if the problem is maturity, is't best not to rush and let thing stabelize (2c)

[22:02] <El_Che> (I would write the word correctly though)

[22:03] *** Altai-man_ joined
[22:04] *** rindolf left
[22:05] *** rindolf joined
[22:05] *** sena_kun left
[22:20] *** veesh left
[22:21] *** veesh joined
[22:49] *** Kaiepi joined
[23:28] *** rindolf left
[23:30] *** wildtrees joined
[23:59] *** Altai-man_ left
