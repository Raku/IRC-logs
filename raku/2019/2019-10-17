[00:26] *** committable6 left
[00:26] *** evalable6 left
[00:26] *** benchable6 left
[00:26] *** reportable6 left
[00:26] *** coverable6 left
[00:26] *** releasable6 left
[00:26] *** tellable6 left
[00:26] *** quotable6 left
[00:26] *** shareable6 left
[00:26] *** greppable6 left
[00:26] *** statisfiable6 left
[00:26] *** unicodable6 left
[00:26] *** squashable6 left
[00:26] *** notable6 left
[00:26] *** nativecallable6 left
[00:26] *** bloatable6 left
[00:26] *** bisectable6 left
[00:26] *** bloatable6 joined
[00:26] *** reportable6 joined
[00:27] *** squashable6 joined
[00:27] *** benchable6 joined
[00:27] *** quotable6 joined
[00:27] *** evalable6 joined
[00:27] *** notable6 joined
[00:28] *** releasable6 joined
[00:28] *** unicodable6 joined
[00:29] *** greppable6 joined
[00:30] *** shareable6 joined
[00:30] *** warriors left
[00:30] *** committable6 joined
[00:30] *** coverable6 joined
[00:30] *** nativecallable6 joined
[00:30] *** Doc_Holliwood left
[00:30] *** statisfiable6 joined
[00:31] *** tellable6 joined
[00:32] *** aviral-goel joined
[00:33] *** aviral-goel left
[00:44] *** ggoebel joined
[01:20] *** lucasb left
[01:32] *** sharmaso joined
[02:48] *** sharmaso left
[03:21] *** stanleytam joined
[03:22] *** warriors joined
[03:50] *** k-man joined
[03:50] <k-man> howdy

[03:55] *** brass joined
[04:13] *** cinch left
[04:14] *** gry joined
[04:16] *** ZzZombo_ joined
[04:20] *** ZzZombo left
[04:20] *** ZzZombo_ is now known as ZzZombo

[04:32] *** Doc_Holliwood joined
[04:35] *** ZzZombo_ joined
[04:38] *** ZzZombo left
[04:38] *** ZzZombo_ is now known as ZzZombo

[04:45] *** cinch joined
[05:07] *** jmerelo joined
[05:14] *** moritz joined
[06:08] *** klapperl joined
[06:26] *** Doc_Holliwood left
[06:54] <jmerelo> I've suggested "raku" as a synonym for Rakudo, and that seems to be possible since there are only ~60 questions tagged Rakudo (and they are probably not referring to the compiler by itself)

[06:54] <jmerelo> It needs 4 votes to be aproved, so please get your karma ready and head here https://stackoverflow.com/tags/raku/synonyms to do that.

[06:55] <jmerelo> If I understood it correctly, once the synonym is approved "Raku" will be suggest for anyone that tries to add "Rakudo" as a tag. They can still do that, but they'll get the suggestion.

[06:55] *** cpan-raku left
[06:55] <jmerelo> That's the plan also for perl6

[06:57] *** cpan-raku joined
[06:57] *** cpan-raku left
[06:57] *** cpan-raku joined
[07:12] *** apathor left
[07:14] *** apathor joined
[07:34] <Geth> ¦ doc: b6940dc1cc | (JJ Merelo)++ | doc/Type/Callable.pod6

[07:34] <Geth> ¦ doc: Changes tabs and rewrites intro to example.

[07:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b6940dc1cc

[07:46] <jmerelo> I'm changing the description of some repositories I have access to Perl 6 → Raku

[08:10] *** warriors left
[08:12] <jmerelo> Can we practice Raku-Go in the next conferences? https://www.youtube.com/watch?v=hbt0jAYDVOw

[08:24] *** sena_kun joined
[08:35] <jmerelo> Commaide.com is rejecting secure connections? https://commaide.com/

[08:39] <stanleytam> seems the website down

[08:52] <sena_kun> ssl certificate issues. :/

[09:08] <jmerelo> sena_kun: can you help? https://stackoverflow.com/questions/58428899/do-we-need-to-modify-a-script-to-be-able-to-use-the-timeline-visualization-of-co

[09:09] <sena_kun> jmerelo, do you actually have Log::Timeline module setup? As in, event types, their usages etc as described in https://github.com/jnthn/p6-log-timelinea ?

[09:10] <sena_kun> jmerelo, or is it a network issue?

[09:10] <jmerelo> sena_kun: no, I didn't do anything like that. Just pressed the button.

[09:11] <jmerelo> sena_kun: OK, I see it's not so straighforward, you really need to prepare code for being logged, and it can't be done in a script...

[09:11] <sena_kun> jmerelo, well, alas the timeline does not magically determine what your code does, so you need to manually specify types of events you have, call them from the code, set up module usage, and then it'll open a socket and draw things.

[09:12] <sena_kun> jmerelo, yes, though I am not sure about "can't be done in a script" part, I think it can

[09:12] <jmerelo> sena_kun: I believe in magic. Raku is magic. But I guess a bit of sweat equity will have to go into it too...

[09:12] <sena_kun> oh, no, it can't, because "These are specified in one or more modules, which should be registered in the provides section of the META6.json. The module name's final component should be LogTimelineSchema" from the readme.

[09:15] <jmerelo> sena_kun: and then you have to set up socket logging, I guess

[09:16] <sena_kun> yes

[09:16] <jmerelo> sena_kun: in a task you don't call log from the task, but you call the task from the log function

[09:16] <tyil> jmerelo: I should arrive at munchen hauptbahnhoff around 2 pm local time

[09:17] <jmerelo> tyil: I'll get to the hotel at 8ish. I'm still in Granada.

[09:17] <tyil> alright, I'll see you at the hotel later tonight, then

[09:18] <jmerelo> tyil: OK. Have a nice trip.

[09:18] <tyil> thanks, and same to you :D

[09:18] <sena_kun> jmerelo, if it is a "tick", a single event when you are saying "Something is done", then you just call it, if it is a "continious" event that can contain ticks or just some work you are logging, then yes, the code is wrapped in a log call.

[09:20] <jmerelo> sena_kun: thanks

[09:30] <jnthn> Provided you have a new enough Cro::HTTP, that includes logging of the HTTP pipeline using Log::Timeline.

[09:31] <jnthn> If you want application-level logging then yes, it's up to you to add that :)

[09:32] <sena_kun> jnthn, I think the question is about a custom script, not cro-based.

[09:44] <jmerelo> jnthn: sena_kun is right, it's my usual evolutionary algorithm with Perl 6...

[09:44] <jmerelo> Sorry, Raku...

[09:54] *** pmurias joined
[09:54] <jnthn> Ah, OK

[09:55] <pmurias> http://blogs.perl.org/users/pawel_murias/2019/10/wip-rakudojs-final-grant-update-1.html - final rakudo.js grant update

[09:55] <jnthn> Then yes, you augment it. It really is a logging tool, not a profiler, even if the interval nature of it makes it useful for a high-level view of what's going on

[10:04] *** maggotbrain joined
[10:06] <jnthn> On conference/workshop naming, Perlyglot is quite cute: http://blogs.perl.org/users/awwaiid_brock_wilcox/2019/10/perlyglot.html

[10:10] * sena_kun .oO ( sounds not so cute from Slavic languages perspective :S )

[10:13] *** pmurias left
[10:16] *** Doc_Holliwood joined
[10:17] <jmerelo> jnthn: ... and cryptic

[10:17] *** jmerelo left
[10:17] <jnthn> I thought the word "polyglot" was relatively widely known

[10:18] *** patrickb joined
[10:18] <patrickb> o/

[10:21] *** cpan-raku left
[10:23] <sena_kun> jnthn, can't say its cryptic, and sure it is relatively widely known. maybe I am just too cautious about things now...

[10:23] <sena_kun> patrickb, o/

[10:23] *** cpan-raku joined
[10:23] *** cpan-raku left
[10:23] *** cpan-raku joined
[10:29] *** gry left
[10:37] *** sena_kun left
[10:38] *** sena_kun joined
[10:45] *** pmurias joined
[11:03] *** stanleytam left
[11:12] <El_Che> Perlesque Rakulicious

[11:13] <moritz> m: say 42

[11:13] <camelia> rakudo-moar f3dda96a8: OUTPUT: «42␤»

[11:14] <lizmat> shazam!

[11:18] <El_Che> hi lizmat!

[11:20] *** pmurias left
[11:21] <Doc_Holliwood> So, are there rules or recommendations about module names and the organization of the namespace?

[11:21] <Doc_Holliwood> specifically, os specific modules. should the os name be at the end of the namespace or at the front?

[11:22] <sena_kun> no guildelines, but usually at the end

[11:22] <Doc_Holliwood> as in "Win32::API::Kernel32" vs "API::Win32::Kernel32"

[11:22] <sena_kun> e.g. IO::Path::Win32 with IO::Path being more general (I know this is a class)

[11:23] <sena_kun> Doc_Holliwood, I am ignorant, but what are other options of `Kernel32`?

[11:23] *** rindolf3 joined
[11:23] <sena_kun> but regardless, API::Win32::Kernel32, API::Linux::Foo, I think.

[11:24] <Doc_Holliwood> well the win-api is divided into DLLs, kernel32.dll is one of them, .dll ~= .so

[11:24] <rindolf3> Hi everypony! Hail fluttershy! Sup?

[11:24] <sena_kun> of course, when you are doing something linux kernel itself specific, then Linux::Foo

[11:24] <sena_kun> Doc_Holliwood, are you writing bindings to WinAPI?

[11:25] <Doc_Holliwood> Only those I need to. It's not an effort to catch the whole

[11:26] <rindolf3> lizmat: i iz here

[11:26] <sena_kun> I mean, it depends on what do you do. If OS-specific (WinAPI, something Linux specific), then Win32::API::Kernel32 sounds great. If you are doing your package Foo that has different implementations for different OS, then Foo::Win32, Foo::Unix etc.

[11:26] <Doc_Holliwood> it would be the former

[11:26] <sena_kun> Doc_Holliwood, I suggested the other one previously, but now I think the opposite is more fitting, sorry

[11:27] <Doc_Holliwood> Ok, so I'll go with Win32::API::Incomplete::*, as in not to pollute the main namespace for something more serious. 

[11:27] <Doc_Holliwood> "main"

[11:28] <Doc_Holliwood> I just have a collection of structures, enums and a few functions

[11:28] <sena_kun> Doc_Holliwood, I'd not add anything like `Incomplete`, maybe. I mean, if you write out some parts, people can write out some other parts they need and just send patches. Of course, if you are strictly against doing "fat" modules and want a tiny wrapper, then something like `Tiny` sounds better than `Incomplete` to me.

[11:31] <sena_kun> maybe for me `Incomplete` kind of implies `It does not work yet, maybe in future`, thus the confusion.

[11:31] <rindolf3> timotim

[11:31] <Doc_Holliwood> I am thinking of compatibility. As you say, people might send in patches, probably conflicting ones (there is more than one windows), the thing grows organically (the win-api is huge), and wwen the time comes for a big refactoring the good namespace is already used.

[11:31] <rindolf3> sorry

[11:32] <Doc_Holliwood> for instance i have a "Constants.pm6" for now, but as i said, huge api and if I were to put all constanst from all header files in there it would come out too big

[11:33] <Doc_Holliwood> but i also don't want to prematurely organize something

[11:35] <Doc_Holliwood> mmh, maybe Win32::Draft::API::*?

[11:42] <Doc_Holliwood> Another question. If a module needs to persist some data, for caching for example, where can it do that?

[11:42] <Doc_Holliwood> just write to the home direcory?

[11:43] <El_Che> Doc_Holliwood: I would write to /var/tmp

[11:44] <El_Che> or tmp depending in the os

[11:44] <Doc_Holliwood> that may be fine for a cache, but what about configuration?

[11:44] *** tadzik joined
[11:49] *** pmurias joined
[12:04] *** sena_kun left
[12:10] *** sena_kun joined
[12:10] *** ggoebel left
[12:23] *** finanalyst_ joined
[12:24] <El_Che> configuration is indeed different, you may want to backup that. For my code is mostly look in a few dirs, e.g.: /etc/$app.yaml; /opt/$team/etc/app.yaml; $home/.app.yaml

[12:26] <Doc_Holliwood> man writing os dependent code is really a pita without macros

[12:27] <Doc_Holliwood> how do i "use" a module depending on the os?

[12:27] <Doc_Holliwood> here: in a test file

[12:28] <tadzik> with `require` :)

[12:29] <Kaiepi> i do that in Net::Telnet, gimme a sec

[12:30] <Doc_Holliwood> thing is, the module exports stuff

[12:31] <Kaiepi> so does this one

[12:31] <Kaiepi> http://fpaste.scsys.co.uk/586532?tx=on

[12:31] <Kaiepi> oh no it doesn't

[12:32] <Kaiepi> it just makes Net::Telnet::Terminal::Client different things depending on os

[12:32] <Doc_Holliwood> yeah, that's easy =)

[12:32] <Doc_Holliwood> whatever, i just use fully qualified calls

[12:33] *** lucasb joined
[12:35] <Kaiepi> this might be useful Doc_Holliwood https://github.com/FROGGS/p6-if

[12:36] <Doc_Holliwood> whatever happened to froggs?

[12:37] <Doc_Holliwood> tx, i try that

[12:37] <lizmat> I believed 3 kids in quick succession 

[12:37] <lizmat> all with a lot of red hair, just like their dad  :-)

[12:38] <Doc_Holliwood> from how many women?

[12:38] <lizmat> 1

[12:42] <Doc_Holliwood> Of course. Once you go ginge you can't go back.

[12:43] <Doc_Holliwood> .oO( https://www.youtube.com/watch?v=KiEUkYCuvuM )

[12:49] <lizmat> afk&

[12:51] *** mensvaga joined
[12:54] *** lizmat left
[12:59] <Geth> ¦ perl6.org/finanalyst-patch-1: cb9c117dcb | (Richard Hainsworth)++ (committed using GitHub Web editor) | source/community/irc/index.html

[12:59] <Geth> ¦ perl6.org/finanalyst-patch-1: Added remaining bots on whateverable list

[12:59] <Geth> ¦ perl6.org/finanalyst-patch-1: review: https://github.com/perl6/perl6.org/commit/cb9c117dcb

[13:00] <Geth> ¦ perl6.org: finanalyst++ created pull request #138: Added remaining bots on whateverable list

[13:00] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/pull/138

[13:02] <finanalyst_> AlexDaniel: I suggest putting a link to the bots section of perl.org/community/irc into the "topic" section for this channel

[13:06] <finanalyst_> .tell

[13:06] <finanalyst_> .seen AlexDaniel

[13:06] <tellable6> finanalyst_, I saw AlexDaniel 2019-10-16T19:51:03Z in #raku-dev: <AlexDaniel> lizmat: https://github.com/perl6/problem-solving/issues/118#issuecomment-542756891

[13:10] <AlexDaniel> .

[13:11] <finanalyst_> AlexDaniel: I just transferred a bit of what you put on the Whateverable wiki to the community html.

[13:11] <AlexDaniel> finanalyst_: “As of today, rakudo is not relocatable”

[13:11] <AlexDaniel> it now is

[13:11] <finanalyst_> Does this count as documentable?

[13:12] <finanalyst_> I'll edit that bit out. The wiki needs editing too

[13:13] <AlexDaniel> yep

[13:13] <AlexDaniel> patrickb: what's the first rakudo release that's relocatable?

[13:16] <AlexDaniel> tyil: btw your bots are missing from this list, please add them: https://github.com/perl6/doc/issues/711#issuecomment-235414744

[13:19] <Geth> ¦ perl6.org/finanalyst-patch-1: c71b9c141a | (Richard Hainsworth)++ (committed using GitHub Web editor) | source/community/irc/index.html

[13:19] <Geth> ¦ perl6.org/finanalyst-patch-1: rakudo updateable

[13:19] <Geth> ¦ perl6.org/finanalyst-patch-1: review: https://github.com/perl6/perl6.org/commit/c71b9c141a

[13:19] <AlexDaniel> finanalyst_: I wonder if there's any easier way to do it

[13:20] <AlexDaniel> finanalyst_: because that page is always out of date

[13:20] <AlexDaniel> once in a while somebody updates it, and then very shortly it's out of date again

[13:20] <finanalyst_> AlexDaniel: ?? doing what? List of bots? or topic?

[13:21] <AlexDaniel> finanalyst_: I mean https://perl6.org/community/irc

[13:21] <finanalyst_> AlexDaniel: I think pointing topic at that page here is important, because some information is better than none, not all info ages at same speed

[13:22] <AlexDaniel> finanalyst_: also, let's delete some bots from that page…

[13:22] <AlexDaniel> finanalyst_: dalek is no longer online, ilbot is no longer online, huggable is no longer online

[13:23] <AlexDaniel> finanalyst_: SourceBaby is not but probably should be, so maybe leave it there for a bit

[13:23] <finanalyst_> Probably also better to have the information in a pod in a raku/docs/tutorial, which can then be updated

[13:23] <AlexDaniel> finanalyst_: Undercover is down and probably won't be up soon

[13:23] <AlexDaniel> finanalyst_: yoleaux was replaced by tellable6

[13:23] <AlexDaniel> ZofBot is a personal bot so shouldn't really be listed there

[13:24] <finanalyst_> A pod6 file in the docs space can be edited relatively quicky and is updated regularly. The community html tab is not so easily updatable

[13:24] <AlexDaniel> PufferBot and BeastieBot are not very useful to the end user anyway

[13:24] <AlexDaniel> finanalyst_: oh, that's a good idea actually

[13:25] <patrickb> AlexDaniel: It's possible that the next release will be the first.

[13:25] *** rindolf3 left
[13:26] <AlexDaniel> patrickb: ahh! OK

[13:26] <patrickb> Not entirely sure, but very well possible.

[13:27] <patrickb> Is it possible to retrieve the length of a Channel is?

[13:27] <patrickb> s/is//

[13:29] <sena_kun> patrickb, no, but you can .list.elems if it is closed on the other end or not e.g. infinite.

[13:30] <AlexDaniel> patrickb: I needed that some time ago, but I don't remember what I did to work around it

[13:31] <patrickb> I think that won't do for me. I want to implement some limiting on the sending side.

[13:31] <AlexDaniel> maybe !peek should be public and should also take an argument as to where you want to peek: https://github.com/rakudo/rakudo/blob/f3dda96a8b9c546644e714a81442f7469d35cad2/src/core.c/Channel.pm6#L100-L117

[13:31] <finanalyst_> AlexDaniel: How about changing the main doc page (perl6/docs/doc/HomePage.pod6) to add 'Community' under FAQ, and have it point to /Language/Community.pod6. Put all the bot stuff in there

[13:32] <AlexDaniel> finanalyst_: makes sense to me

[13:32] <finanalyst_> I'll do a PR in perl6/doc and ask JJ to review

[13:33] <AlexDaniel> sounds like a plan, yep

[13:35] *** Xliff_ joined
[13:40] <vrurg> patrickb: In Async::Workers I count elements manually.

[13:41] *** sena_kun left
[13:42] *** warriors joined
[13:42] *** patrickb left
[13:44] *** patrickb joined
[13:56] <Geth> ¦ doc: 6da71c5f1c | finanalyst++ | doc/Language/community.pod6

[13:56] <Geth> ¦ doc: modify quotes at top

[13:56] <Geth> ¦ doc: 

[13:56] <Geth> ¦ doc: IF we put quotation marks around Larry Wall's first remark about Perl 6, then we cannot simply

[13:56] <Geth> ¦ doc: substitute 'Raku' for 'Perl 6', as that is then not a direct quote.

[13:56] <Geth> ¦ doc: BUT it does seem to me to be consistent with history and philosophy that the rename

[13:56] <Geth> ¦ doc: was community driven and approved by Larry. Hence adding in the second quote is more correct.

[13:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6da71c5f1c

[13:59] <AlexDaniel> finanalyst_++

[14:00] <finanalyst_> AlexDaniel: Glad to see approval. Change made worrying it would trigger an avalanche!!!

[14:01] <AlexDaniel> I was surprised when I saw the quote being changed, and I was about to fix it myself

[14:03] <finanalyst_> Given the huge number of changes to be made to documentation, its inevitable there will be those that are inappropriate in some way

[14:13] <Kaiepi> releasable6, status

[14:13] <releasable6> Kaiepi, Next release in ≈2 days and ≈4 hours. 6 blockers. Unknown changelog format

[14:13] <releasable6> Kaiepi, Details: https://gist.github.com/c4a043cb13b67f579776ee24741acc2f

[14:14] <AlexDaniel> btw

[14:14] <AlexDaniel> squashable6: status

[14:14] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in ≈13 hours (2019-10-19 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:14] <AlexDaniel> that thing is still not figured out :(

[14:14] <AlexDaniel> it's unfortunate because it's Hacktoberfest right now too

[14:14] <AlexDaniel> maybe something about Raku?

[14:15] <warriors> it can be also writen this way 

[14:15] <warriors> +  "Perl 5 was my rewrite of Perl.  I want Perl 6 (now Raku) to be the community's rewrite

[14:15] <warriors> +  of Perl and of the community." - Larry Wall (circa 2000

[14:15] <warriors> i see quote amended all the time, to add clarity 

[14:18] <mspo> shouldn't it be, like, Perl 6 [recte Roku] or Roku [sic Perl 6] ?

[14:19] <mspo> or even just [Roku]†    †(Perl 6 in original quote, but renaming considered)

[14:19] <warriors> Perl 6 [recte Roku] , the brackets includes the clarification, so people know what he originally said, but the brackets for us to know what it means now 

[14:19] <warriors> raku not roku

[14:20] <mspo> yeah

[14:20] <warriors> roku is the tv service thing right :)

[14:20] <mspo> my television corrected it for me ;)

[14:20] <warriors> tv software :)

[14:20] <warriors> should get raku hits, when people mistype roku and search for raku instead 

[14:21] <mspo> or get no hits when google autocorrects

[14:21] <mspo> "did you mean roku sponsored content?!?!?!?!?!!?"

[14:22] <finanalyst_> warriors: Many ways of handling changes of name in a quote about an earlier name. But the change needs to be shown. Actually, I think Larry's next comment is just as important and it underlines that it was community driven

[14:22] <warriors> i like amending the quote, to push raku stronger

[14:23] <mspo> I got [recte] from wikipedia; I've only seen [sic] in the real world

[14:26] <tyil> AlexDaniel: will do

[14:27] *** ggoebel joined
[14:28] <tyil> and done

[14:36] <vrurg> AlexDaniel: I don't think we can find a good subject about Raku for the Squashaton. But I'm already getting "professional distrortion": there're 62 tickets on rakudo still opened because 'tests needed'. Maybe we can make test-writing one?

[14:36] *** mensvaga left
[14:37] <AlexDaniel> vrurg: we can try, I guess, and that's exactlyw hat was proposed

[14:37] *** tamiko is now known as darth_tamiko

[14:39] *** renormalist joined
[14:40] <AlexDaniel> let's do it then

[14:42] <vrurg> Tell me if anything is needed from my side. Sure, I'll be keeping my eye on PRs submitted.

[14:44] *** sena_kun joined
[14:58] *** pmurias left
[15:00] *** pmurias joined
[15:00] *** benjif joined
[15:00] <ufobat> is there a channel regarding the comma ide?

[15:04] <sena_kun> ufobat, no

[15:04] <sena_kun> ufobat, but there is me and jnthn

[15:05] <ufobat> i've installed comma as an intellj plugin. Is there no Settings -> Editor -> Code Style -> Comma/Raku/Perl6 subsection?

[15:06] <sena_kun> ufobat, that's normal, because we don't have one _yet_.

[15:06] <ufobat> 2) i've got a weired behaviour when I create a block like in `if $something {}` - the block defined with the curly braces

[15:06] <sena_kun> and the default formatter is LTA sometimes, which is a known bug too

[15:07] <ufobat> when i push "enter" my closing `}`is now i the beginnin of the line, not indented with the i of `if ...`

[15:07] <ufobat> when i push "tab", with the cursor in front of the `}` nothing happens

[15:08] <jnthn> What is the $something? Literally a variable access, or?

[15:08] <ufobat> literally a variable

[15:09] <ufobat> now "enter" just moves the `}` down a line, and when i push "tap" on one of those empty lines i created compelely strange indtation and my `}` gets moved.. somewhere..

[15:09] <jnthn> Hmm, I must have literally written `if $something {`, had the `}` inserted automatically, and hit enter hundreds of times without problem...I wonder what is happening

[15:10] <jnthn> I'm guessing it's something to do with the surrounding context.

[15:10] *** pmurias left
[15:10] <ufobat> how can I troubleshoot this or help

[15:11] <ufobat> well freshly created pl6 file, just wrote `sub foobar() {<curser_is_here>}` 

[15:11] <ufobat> same thing happens to all blocks

[15:11] <jnthn> Any error indication (bottom right)?

[15:12] <ufobat> i started a new perl6 project, the same

[15:12] <jnthn> What intellij version?

[15:12] <ufobat> yeah one, regarding my emacsplus plugin

[15:12] <jnthn> Also, can you reproduce it in the standalone Comma?

[15:12] <ufobat> let me disable that

[15:13] <jnthn> Ah, an unfortunate interaction with another plugin would be...well, still surprising, but also explain why we'd not seen such an issue before. :)

[15:13] <ufobat> same with disabled emacs plugin

[15:13] <ufobat> i need to install the stand alone version of comma first

[15:13] <benjif> do we keep historic benchmarks done w/ roast?

[15:14] <ufobat> intellij is 2019.2.3

[15:15] <jnthn> sena_kun: Hm, was 2019.2 the version with a ton of breaking changes?

[15:15] <sena_kun> jnthn, yes

[15:15] <sena_kun> we currently support 2019.1

[15:15] <jnthn> Joy.

[15:16] <jnthn> Yeah, I'd known we were going to have a huge headache upgrading to that for the standalone IDE, I hadn't quite realized it was nasty to the point of causing such plugin fallout. :S

[15:16] <ufobat> jnthn, does not happen on comma stand alone

[15:19] <jnthn> OK, well, then we can probably guess what the answer is

[15:19] <ufobat> I have to wait ;-)

[15:21] <jnthn> As so often in software, it's quite distressing how much work one has to do simply to stay still. :/

[15:24] <ufobat> thats true

[15:34] *** ab6tract joined
[15:34] <AlexDaniel> ab6tract: o/

[15:34] <ab6tract> hey hey! love the new digs :D

[15:36] <ab6tract> so, i'm a bit bummed that declaring an infix:<+> for a given type doesn't unlock the reduce operator [+]

[15:37] <ab6tract> but i'm assuming there is some way to get it to work, right? :)

[15:37] *** kybr joined
[15:38] <jnthn> Really?

[15:38] <jnthn> m: class A { has $.i; }; multi infix:<+>(A $x, A $y) { A.new(i => $x.i + $y.i) }; say [+] A.new(i => 2), A.new(i => 30), A.new(i => 10)

[15:38] <camelia> rakudo-moar f3dda96a8: OUTPUT: «A.new(i => 42)␤»

[15:39] <jnthn> Minimal example works, so I'm guessing there's something a tad more interesting in your case

[15:39] <Doc_Holliwood> jnthn, I need your address for the promised cookie

[15:39] <jnthn> A real cookie?!

[15:39] <Doc_Holliwood> Are there others?

[15:39] <ab6tract> jnthn: hey buddy! glad to read you, indeed there must be something odd then :(

[15:40] <jnthn> Well, every website I visit tells me it wants to give me them too... :)

[15:40] <jnthn> ab6tract: If you only have 1 element or 0 elements in the reduce you'd probably need to define the base case too

[15:40] <jnthn> oh, 0 you can't do because... :)

[15:41] <jnthn> but the unit case you can

[15:41] <jnthn> Though it may default to identity anyway there

[15:41] <jnthn> So yeah, probably something else.

[15:45] <ab6tract> ahh, okay yeah, that's a doof! adding an infix:<+> target for a single arg that returns that arg does the trick

[15:45] <jnthn> aha!

[15:45] <Geth> ¦ doc: finanalyst++ created pull request #3064: Highlight Community, add IRC bot list

[15:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/3064

[15:46] *** benjif left
[15:46] *** benjif joined
[15:47] *** matiaslina joined
[15:47] <ab6tract> jnthn: https://gist.github.com/ab5tract/b9b03558c60ffed459aa6cffc019b40e

[15:48] <ab6tract> i'm working through the Programmer's Introduction to Mathematics book. https://pimbook.org

[15:48] <jnthn> Nice :)

[15:49] <jnthn> Interesting indentation in that diff

[15:49] <ab6tract> really fun working through the code in Raku. was able to do some easy tricks to make 'f(x) + g(x)' DWIM, but also 'f(4) + g(5)'

[15:49] <jnthn> Oh, just tab/space confusion :)

[15:49] <ab6tract> yeah, it's all over the place. i blame git diff | pbcopy

[15:51] <ab6tract> turns out i had good reason to be falling behind in math back in the school days, though i've only learned why recently. the book's author definitely sticks to math tradition in that you can't really get through many pages without having a pad out running numbers by hand :)

[15:56] <ab6tract> nice writing test cases you've literally plugged in on paper though ;D

[16:00] *** jeromemathias joined
[16:12] <AlexDaniel> squashable6: status

[16:12] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in ≈11 hours (2019-10-19 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:13] <AlexDaniel> see also: https://hacktoberfest.digitalocean.com/

[16:16] <El_Che> AlexDaniel: regarding your relocatabe comment, are moarvm and nqp relocatable as well (nqp and moarvm inside the rakudo install)

[16:16] <El_Che> AlexDaniel: append a "?" to the sentence

[16:18] *** softmoth joined
[16:19] *** mensvaga joined
[16:26] <Xliff_> Whee! GTKPlus now taking 2445 seconds to compile.

[16:27] <Xliff_> That's 943 .pm6 files

[16:28] *** zacts joined
[16:28] <mspo> .rm and .rk ?

[16:29] <Xliff_> mspo: Until I get the time to do that across all of my repositories, the filenames will remain unchanged. :/

[16:30] <mspo> Xliff_: wondering what the convention will end up being :)

[16:30] <mspo> Xliff_: if they should matter at all

[16:30] <Xliff_> Your guess is as good as mine. :)

[16:31] <Xliff_> Although .rm and .rk aren't a bad idea. Still have to check those for conflicts.

[16:31] <mspo> add some spice and call everything .core ;)

[16:31] <sena_kun> .rakumod is already established for modules

[16:31] <Xliff_> mspo: Um. No. LOL

[16:31] <sena_kun> .raku for scripts

[16:31] <sena_kun> https://github.com/perl6/problem-solving/blob/master/solutions/language/Path-to-Raku.md#extensions

[16:33] <mspo> long

[16:33] <sena_kun> doesn't matter

[16:33] <warriors> lol just noticed the P 6 in the camelia mascot 

[16:34] <warriors> that was deep 

[16:34] <sena_kun> 1)editor or IDE can take care of that; 2)when you are programming, you are programming, not typing file extensions all the day

[16:34] <warriors> it doesnt seem that there is any active vs code or emacs mode for Raku 

[16:35] <warriors> the vs code mode was last updated 2018 and the emacs mode is even older 

[16:35] <sena_kun> well, someone has to volunteer

[16:36] <sena_kun> to update them and make them better. :)

[16:36] <gdonald> the perl6-mode for emacs works fine for me

[16:38] <benjif> iirc ~50% of raku users use vim

[16:39] <sena_kun> maybe 50% of those raku users that participated in the survey...

[16:39] <gdonald> i once heard 27% of all statistics are made up, on the spot.

[16:39] <benjif> yes, 50% for the previous two raku surveys 

[16:41] <sena_kun> gdonald, well, the survey results are not made up, just saying that there is a larger population in general

[16:41] *** chloekek joined
[16:41] <AlexDaniel> Xliff_, mspo: do not change the filenames

[16:41] <gdonald> k

[16:42] <AlexDaniel> Xliff_, mspo: also, please use extensions specified in the path to raku document, don't come up with your own, please

[16:43] <AlexDaniel> warriors: all of them are currently “Perl6” modes

[16:43] <benjif> Having a LSP server for raku would be cool

[16:44] <AlexDaniel> Xliff_, mspo: and by “use” I mean, like, in a year or two…

[16:45] *** zacts left
[16:45] <Xliff_> AlexDaniel: Chill. We were only horsing around.

[16:46] <AlexDaniel> El_Che: surely, otherwise what's the point? :)

[16:46] <AlexDaniel> El_Che: but I haven't tried it myself yet

[16:47] <mspo> benjif: if you want vscode usage to increase then yes

[16:47] <mspo> can you get the current AST and stuff?

[16:51] <El_Che> AlexDaniel: I learnt not to limit my assumptions related to software, long ago :)

[16:52] <ab6tract> regarding the extensions, i kind of wondered why this isn't sort of a local COMPUNIT issue. seems like we could maybe add some compiler flag options and let the community shake out what it wants to use over time, while only accepting the official extensions in published ecosystem modules (thus becoming a footnote to the 'publish' task)

[16:53] <sena_kun> >let the community shake out what it wants to use over time

[16:53] <sena_kun> anything but that

[16:53] <benjif> that might be strange for newcomers, dunno

[16:55] <ab6tract> sena_kun: in general, i agree. but this is community is full of strongly opinionated people.

[16:56] <warriors> you cant help it, smart people are usually strongly opinionated 

[16:56] <ab6tract> none of whom really got a chance to weigh in on that topic. i do understand why the discussion was locked, but it's also more of a top down decision than we are used to here.

[16:56] <ab6tract> my favorite option was .raku, .rakm, .rakd , for instance :)

[16:57] <Grinnz> ab6tract: there were at least 3 separate issues and they were not all locked

[16:57] <ab6tract> but if we were really living in a forward thinking world, we'd be doing this strictly on mimetype and absolve ourselves of extensions altogether

[16:57] <Grinnz> unfortunately the discussion could not be held open until people paid attention

[16:58] <warriors> its a bikeshedding  type of problem, good thing they took a decision and didnt spend too much time on it 

[16:58] <Grinnz> the file extension for executables actually doesn't matter a whole lot, but it still matters for text editors and github

[16:59] <Grinnz> i'm not sure what "on mimetype" means, unless you are proposing that raku files should all start with a magic number

[17:00] <ab6tract> Grinnz: unless i'm mistaken, the blocker thread on extensions was locked to the voters on the name change ticket. like i said, i understand why that happened.

[17:00] <brass> Sorry to bother, is there a good raku intro doc for people who already program regularly?

[17:00] <AlexDaniel> brass: which languages do you know already? :)

[17:00] <Grinnz> there were multiple tickets. and some of them were not.

[17:00] <AlexDaniel> brass: there are some migration guides here: https://docs.perl6.org/language.html#Migration_guides

[17:00] <warriors> there think perl6 

[17:00] <Grinnz> the last one was locked because a decision had to be made.

[17:00] <brass> AlexDaniel: ruby, go, python, elisp :p 

[17:02] <AlexDaniel> brass: also, if you prefer the docs that talk about raku rather than perl6: https://rakudocs.github.io/language.html#Migration_guides :)

[17:02] <warriors> @brass https://greenteapress.com/wp/think-perl-6/

[17:02] <ab6tract> Grinnz: a mimetype is metadata about a file that, in a better world, would be a significant consideration in how the OS deals with that file. BeOS had this on lock 25 years ago.

[17:02] <benjif> brass: The learn x in y page for raku is well paced: https://learnxinyminutes.com/docs/perl6/

[17:03] <Grinnz> ab6tract: so you mean a filesystem thing?

[17:03] <ab6tract> nowadays you see it usually in a header during a post request

[17:03] <AlexDaniel> brass: oh yeah learnxinyminutes is pretty great

[17:03] <Grinnz> that doesn't seem practical to me, considering these files need to be distributed across the internet and to different OSes

[17:03] <brass> Ok thanks I'll check it out :) 

[17:04] <ab6tract> Grinnz: I'm a dreamer. I'm just saying that there are much better technical ways of deciding what to do with a file besides an extension. I guess I can thank progress for the fact that we can extend all the way out to .raku* comfortably in a post 3-letter rule word

[17:04] <Grinnz> :)

[17:05] * ab6tract counts those blessings ;)

[17:05] <Grinnz> still have some 8.3 support on the perl side we need to kill with fire...

[17:05] <Grinnz> it creates bugs on windows, because of course it does

[17:10] <ab6tract> that sounds painful indeed

[17:13] *** jeromemathias left
[17:17] <ab6tract> Grinnz: re: mimetypes, BeOS was back in the POP3 days. so all email was downloaded from the server. it would store each field from the email as metadata. the file itself would be defined as 'text/email', allowing the OS to know to use the email app to open it. meanwhile, you could create folders which represent live queries against the metadata

[17:17] <ab6tract> stored in FS. so your email filters ended up being folder view rules based on metadata. you'd be clicking on a representation of the file in the Tracker (their version of Finder/Explorer) but you wouldn't even be using 'filename' as a field in the representation you were looking at ('from', 'subject' and 'timestamp' usually being enough)

[17:18] <Grinnz> ab6tract: things would certainly be easier if we could get everything to support that

[17:18] <Grinnz> but outlook not good :)

[17:20] *** benjif left
[17:21] *** benjif1 joined
[17:21] *** benjif1 left
[17:21] *** benjif1 joined
[17:24] *** moon_child left
[17:29] *** moon_child joined
[17:31] *** sena_kun left
[17:33] *** asie left
[17:33] *** sena_kun joined
[17:35] *** sena_kun left
[17:36] *** sena_kun joined
[17:44] *** sena_kun left
[18:00] *** benjif1 left
[18:00] *** benji joined
[18:00] *** benji is now known as benjif

[18:07] *** lizmat joined
[18:10] *** ab6tract left
[18:42] *** gry joined
[18:42] *** gry left
[18:42] *** gry joined
[18:54] *** gry left
[18:59] *** patrickb left
[19:00] <AlexDaniel> squashable6: status

[19:00] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in ≈8 hours (2019-10-19 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[19:11] *** MasterDuke joined
[19:16] *** skaji_ joined
[19:24] *** zacts joined
[19:27] *** xinming_ joined
[19:28] *** zacts left
[19:36] *** lizmat left
[19:37] *** pmurias joined
[19:42] *** ufobat_ joined
[19:45] *** ufobat left
[19:55] <El_Che> AlexDaniel: maybe you need to kick everyone out and put a bot that answer with "/join #raku" for everything  :)

[19:57] <cpan-raku> New module released to CPAN! Tomtit (0.1.6) by 03MELEZHIK

[20:00] <Geth> ¦ doc: c72496e497 | (Daniel Green)++ | 22 files

[20:00] <Geth> ¦ doc: Fix a couple double spaces

[20:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c72496e497

[20:03] *** wildtrees joined
[20:04] *** wildtrees left
[20:04] *** wildtrees joined
[20:08] *** vrurg left
[20:09] <softmoth> m: my $x = "--- top number: 123; middle number: 234; bottom number: 456"; $x ~~ /[ <-[;]>* \s "number:" \s*(\d+)\s* ]* %% ";"/; .say for $0;

[20:09] <camelia> rakudo-moar 186dc0273: OUTPUT: «｢123｣␤｢234｣␤｢456｣␤»

[20:10] <softmoth> xinming_, ^ that's not as nice as Alex's .comb version, but maybe it's closer to what you were looking for

[20:15] *** vrurg joined
[20:39] *** jjatria left
[20:43] *** pmurias left
[20:43] *** jjatria joined
[20:44] *** pmurias joined
[21:20] *** kotrcka joined
[21:54] *** jjatria left
[21:54] *** jjatria joined
[21:59] *** benjif left
[21:59] *** benjif joined
[22:07] *** releasable6 left
[22:08] *** lizmat joined
[22:08] *** squashable6 left
[22:12] *** chloekek left
[22:12] *** releasable6 joined
[22:12] *** squashable6 joined
[22:15] <squashable6> Webhook for perl6/roast is now active! Half measures are as bad as nothing at all.

[22:15] <squashable6> Webhook for rakudo/rakudo is now active! Speak like a human.

[22:16] <AlexDaniel> … I don't like these github zen messages

[22:16] <AlexDaniel> anyway

[22:16] <AlexDaniel> squashable6: status

[22:16] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in ≈5 hours (2019-10-19 UTC-12⌁UTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[22:18] *** pmurias left
[22:25] <MasterDuke> AlexDaniel: for the squashathon maybe something about reviewing the various s/Perl 6/Raku/g changes?

[22:25] <AlexDaniel> MasterDuke: I thought about that but vrurg suggested testneeded tickets

[22:25] <AlexDaniel> and we haven't had a testneeded squashathon in a while

[22:26] <MasterDuke> (unfortunately)? i'll be at the LPW all day and probably won't be able to contribute much

[22:26] <AlexDaniel> MasterDuke: all three days? :)

[22:27] <MasterDuke> heh, we'll see

[22:28] *** cpan-raku left
[22:30] *** cpan-raku joined
[22:30] *** cpan-raku left
[22:30] *** cpan-raku joined
[22:36] *** finanalyst_ left
[23:15] *** Xliff_ left
[23:18] <cpan-raku> New module released to CPAN! Red (0.0.5) by 03FCO

[23:28] <discord6> <Aearnus> just learned about Proxies. gives me some really cool ideas

[23:39] <vrurg> Aearnus: just be careful: they're SLOW.

[23:48] <cpan-raku> New module released to CPAN! Red (0.0.6) by 03FCO

[23:50] <discord6> <Aearnus> vrurg: what magnitude

[23:51] <vrurg> Depends. About a half a year go I benchmarked it to ~300-350 times slower.

[23:51] <vrurg> I

[23:51] <vrurg> I'll check if I still have the test in my experimental directory.

[23:52] *** lucasb left
[23:54] <vrurg> Aearnus: with current Rakudo HEAD it's like ~100 times slower on read and 36 times on write.

[23:55] <vrurg> Ah, wait, it's not clear because it's testing not Proxy directly.

