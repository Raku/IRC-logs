[00:00] <tbrowder> ff, sorry

[00:03] *** patrickz joined
[00:06] *** patrickb left
[00:24] *** Kaiepi left
[00:25] *** Kaiepi joined
[00:25] *** Manifest0 left
[00:27] *** Manifest0 joined
[00:27] *** knoop_ joined
[00:36] *** Manifest0 left
[00:37] *** Manifest0 joined
[00:40] *** patrickz left
[00:40] *** pmurias left
[01:01] *** ZzZombo joined
[01:02] *** Xliff joined
[01:03] *** cpan-raku left
[01:05] <Xliff> Still waiting for someone to help me spec out a decent web-app framework for Perl6

[01:05] * Xliff curses AlexDaniel...

[01:11] *** knoop_ left
[01:12] *** cpan-raku joined
[01:12] *** cpan-raku left
[01:12] *** cpan-raku joined
[01:13] *** wildtrees left
[01:14] *** Xliff left
[02:21] *** josef_October joined
[02:23] *** lucasb left
[02:41] <josef_October> does any one uses debian unstable i cannot install there any single raku module - i get an build error

[02:43] <josef_October> these are the errors:

[02:43] <josef_October> [FastCGI::NativeCall] /usr/bin/ld: cannot find -lffi

[02:43] <josef_October> [FastCGI::NativeCall] /usr/bin/ld: cannot find -ltommath

[02:43] <josef_October> [FastCGI::NativeCall] /usr/bin/ld: cannot find -latomic_ops

[02:43] <josef_October> [FastCGI::NativeCall] /usr/bin/ld: cannot find -luv

[02:43] <josef_October> [FastCGI::NativeCall] collect2: error: ld returned 1 exit status

[02:43] *** llfourn joined
[02:43] <josef_October> [FastCGI::NativeCall] make: *** [Makefile:2: all] Error 1

[02:43] <josef_October> [FastCGI::NativeCall] The spawned command 'make' exited unsuccessfully (exit code: 2)

[02:43] <josef_October> [FastCGI::NativeCall]   in method build at /root/.zef/store/FastCGI-NativeCall-0.0.6.tar.gz/FastCGI-NativeCall-0.0.6/Build.pm line 18

[02:43] <josef_October> [FastCGI::NativeCall]   in block <unit> at -e line 1

[02:43] <josef_October> ===> Building [FAIL]: FastCGI::NativeCall:ver<0.0.6>:auth<github:carbin>:api<1.0>

[03:13] *** Xliff joined
[03:14] <Xliff> Can NativeCall handle passing a struct by value?

[03:15] *** RobRaku joined
[03:37] <Xliff> m: my Œ± = 2; say Œ±;

[03:37] <evalable6> Xliff, rakudo-moar 6c1528263: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/u1LSkAYWWk‚ê§Malformed my (did you mean to declare a sigilless \Œ± or $Œ±?)‚ê§at /tmp/u1LSkAYWWk:1‚ê§------> 03my Œ±08‚èè04 = 2; say Œ±;‚ê§¬ª

[03:37] <Xliff> m: my \Œ± say Œ±;

[03:37] <evalable6> Xliff, rakudo-moar 6c1528263: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/pjbZ9eVBdh‚ê§Term definition requires an initializer‚ê§at /tmp/pjbZ9eVBdh:1‚ê§------> 03my \Œ±08‚èè04 say Œ±;‚ê§¬ª

[03:37] <Xliff> m: my \Œ± = 2; say Œ±;

[03:37] <evalable6> Xliff, rakudo-moar 6c1528263: OUTPUT: ¬´2‚ê§¬ª

[03:39] *** kshannon joined
[03:40] <kshannon> I'm having some trouble getting a react block to stop after a listening IO::Socket::Async has been shutdown.

[03:40] <kshannon> react { my $tap = do whenever IO::Socket::Async.listen("localhost", 3078) -> $conn { $tap.close; $conn.close; done }; }

[03:41] <kshannon> This hangs forever.

[03:42] <kshannon> And I mean after I connect to the port from elsewhere.  It properly shuts down the port and doesn't accept more connections but the react block never dies.

[03:48] *** rindolf joined
[03:54] *** RobRaku left
[03:54] *** RobRaku joined
[03:55] *** kshannon left
[03:55] *** kshannon joined
[03:58] <Xliff> kshannon: Sorry. I can't get it to close, either. Caveat: react/whenever is NOT my thing.

[04:00] <Xliff> This immediately closes:

[04:00] <Xliff> my $tap; my $l = IO::Socket::Async.listen("localhost", 3078); my $lt; react { whenever $tap -> $conn { $lt = $l.tap(-> { }, done => { $lt.close }); QUIT { default { done; };  };  }; };'

[04:02] <kshannon> Umm.  Where are you actually tapping the Async.listen?

[04:04] <kshannon> You haven't assigned to $tap so `whenever $tap` === `whenever Nil`

[04:10] <Xliff> Hrm. Good point.

[04:10] <Xliff> Like I said... not my thing.

[04:11] <Xliff> Huh.

[04:11] <Xliff> my $l = IO::Socket::Async.listen("localhost", 3078); my $lt; react { whenever $l -> $conn { $lt = $l.tap(-> { }, done => { $lt.close }); QUIT { default { done; };  };  }; };

[04:12] <Xliff> This closes after the connect, but with an unhandled exception, which is never good.

[04:12] <Xliff> "Unhandled exception in code scheduled on thread 4

[04:12] <Xliff> address already in use"

[04:13] <kshannon> Yes,  you've tapped it twice.  `whenever $l -> ...` and `$l.tap(...)`

[04:14] <kshannon> The `whenever` starts listening and then on the first connection the `$l.tap` attempts to start listening again which it can't because the first listening socket is still open.

[04:15] <Xliff> Yeah. I'll have to seriously research it when I need it for something. :/

[04:16] <Xliff> Sorry I wasn't much help.

[04:16] <kshannon> ¬Ø\_(„ÉÑ)_/¬Ø

[04:16] <kshannon> Thanks for looking at it anyway

[04:32] <kshannon> It doesn't need the Async IO.  I can reproduce it with a Supply.from-list(1..*)

[04:33] <AlexDaniel> kshannon: that's so weird

[04:33] <AlexDaniel> `done` doesn't ‚Äúdone‚Äù it

[04:33] <kshannon> So,  it looks like this has never worked.

[04:34] <kshannon> react { my $tap = do whenever Supply.from-list(1..*) -> $a { $tap.close; done } }

[04:34] <kshannon> This hangs.

[04:35] <kshannon> But this:

[04:35] <kshannon> react { my $tap = do whenever Supply.from-list(1..10) -> $a { $tap.close; say $a; done } }

[04:35] <evalable6> kshannon, rakudo-moar 6c1528263: OUTPUT: ¬´1‚ê§¬ª

[04:35] *** llfourn left
[04:35] <AlexDaniel> kshannon: by any chance are looking for the `supply { }` block?

[04:36] <kshannon> No.  I do mean react.

[04:38] <kshannon> My real issue is working out how to nicely shutdown a server that's using IO::Socket::Async.listen

[04:39] <kshannon> I have my react block which taps the IO::Socket::Async.listen and then responds to requests.

[04:39] <kshannon> According to the IO::Socket::Async docs you can close the socket by calling .close on the tap.

[04:40] <kshannon> That works,  but the react block just hangs.

[04:40] <Xliff> Looks like it won't close without ANY attempt at IO.

[04:44] <kshannon> That's because in my original I am closing the tap inside the accept closure.

[04:44] <kshannon> react { my $tap = do whenever IO::Socket::Async.listen("localhost", 3078) -> $c { $c.close }; whenever Promise.in(3) -> $p { $tap.close; } }

[04:44] <kshannon> That closes the listening socket after 3 seconds

[04:45] <kshannon> But react still hangs forever.

[04:46] <cpan-raku> New module released to CPAN! PDF::Font::Loader (0.2.7) by 03WARRINGD

[04:46] <cpan-raku> New module released to CPAN! HTML::Canvas (0.0.8) by 03WARRINGD

[04:55] <kshannon> I think this might be another form of https://github.com/rakudo/rakudo/issues/2609

[04:58] *** llfourn joined
[05:05] *** mid_home left
[05:32] <ZzZombo> How do I disable autoclosing brackets in Comma?

[05:40] *** ZzZombo_ joined
[05:42] *** ZzZombo__ joined
[05:42] *** ZzZombo__ left
[05:43] <Xliff> m: use NativeCall; class A is repr<CStruct> { has gdouble $.array[2][2] is CArray; }; 

[05:43] <evalable6> Xliff, rakudo-moar 6c1528263: OUTPUT: ¬´(exit code 1) 04===SORRY!04===‚ê§Ty‚Ä¶¬ª

[05:43] <evalable6> Xliff, Full output: https://gist.github.com/d68db114787f62b4a3379be3e9728a11

[05:43] <Xliff> m: use NativeCall; class A is repr<CStruct> { has gdouble $.array[4] is CArray; }; 

[05:43] *** ZzZombo left
[05:43] <evalable6> Xliff, rakudo-moar 6c1528263: OUTPUT: ¬´(exit code 1) 04===SORRY!04===‚ê§Ty‚Ä¶¬ª

[05:43] <evalable6> Xliff, Full output: https://gist.github.com/452ffc31a0bed61ae1c72ab03cd2f7f5

[05:43] <Xliff> m: use NativeCall; class A is repr<CStruct> { has num64 $.array[2][2] is CArray; }; 

[05:43] <evalable6> Xliff, rakudo-moar 6c1528263: OUTPUT: ¬´(exit code 1) 04===SORRY!04===‚ê§Th‚Ä¶¬ª

[05:43] <evalable6> Xliff, Full output: https://gist.github.com/c7eb3e09ea808c09292820ef53beecc2

[05:43] *** ZzZombo__ joined
[05:43] <Xliff> m: use NativeCall; class A is repr<CStruct> { has num64 $.array[4] is CArray; }; 

[05:43] <evalable6> Xliff, rakudo-moar 6c1528263: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Er‚Ä¶¬ª

[05:43] <evalable6> Xliff, Full output: https://gist.github.com/90c4fcf1a2c915796239a265b96a1a81

[05:44] <Xliff> m: use NativeCall; class A is repr<CStruct> { has num64 @.array[2][2] is CArray; }; 

[05:44] <evalable6> Xliff, rakudo-moar 6c1528263: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Er‚Ä¶¬ª

[05:44] <evalable6> Xliff, Full output: https://gist.github.com/e971aa9adbec4052ef880259ba3541f2

[05:44] <Xliff> m: use NativeCall; class A is repr<CStruct> { has num64 @.array[4] is CArray; }; 

[05:44] <evalable6> Xliff, rakudo-moar 6c1528263: OUTPUT: ¬´¬ª

[05:45] *** ZzZombo_ left
[06:06] *** Xliff_ joined
[06:08] *** Xliff left
[06:09] *** ZzZombo__ is now known as ZzZombo

[06:13] *** llfourn left
[06:17] *** jmerelo joined
[06:26] <tyil> Xliff_: I'm not doing much web app development myself these days, but I can try to help you think about design aspects for a framework if you want

[06:26] <tyil> Xliff_: want my email address so you can more easily send bigger messages?

[06:28] *** mid_laptop joined
[06:30] *** sauvin joined
[06:37] <jmerelo> .seen Kaiepi

[06:37] <tellable6> jmerelo, I saw Kaiepi 2019-12-11T15:24:29Z in #raku: <Kaiepi> .

[06:37] <jmerelo> .seen nige

[06:37] <tellable6> jmerelo, I saw nige 2019-11-26T07:16:25Z in #raku: <nige_> (another good way to attract users)

[06:40] <kshannon> My head hurts.  I've been reading the source for how react { } works and I feel like I'm playing ADVENT.  "YOU ARE IN A MAZE OF TWISTY LITTLE PASSAGES, ALL ALIKE"

[06:46] *** ufobat joined
[06:52] <jmerelo> Do you want to make your own bots for this IRC channel? Check out tyil's article today in the advent calendar https://rakuadventcalendar.wordpress.com/2019/12/12/making-a-simple-bot-in-raku/

[06:59] *** RobRaku left
[07:00] *** RobRaku joined
[07:01] <jmerelo> We are already in Advent, but you can still write an article for the calendar. We'd have it as a backup or publish it in the last day https://github.com/Raku/advent/blob/master/raku-advent-2019/schedule Please add yourself there.

[07:21] *** kshannon left
[07:21] <Xliff_> tyil: One sec.

[07:32] *** jmerelo left
[07:50] *** wamba joined
[07:58] <Kaiepi> .tell jmerelo, did you get my messages yesterday?

[07:58] <tellable6> Kaiepi, I'll pass your message to jmerelo

[08:01] *** kensanata joined
[08:08] *** Kaiepi left
[08:09] *** leont joined
[08:12] *** mid_laptop left
[08:16] *** Kaiepi joined
[08:20] *** patrickb joined
[08:29] *** abraxxa left
[08:30] *** abraxxa joined
[08:43] *** leont left
[09:24] *** ufobat_ joined
[09:27] *** ufobat left
[09:28] *** daxim left
[09:33] *** daxim joined
[09:41] *** pmurias joined
[09:43] <pmurias> vrurg: I'm not aware of any, but I only work on the jvm backend from time to time

[09:43] <pmurias> vrurg: but if you have anything golfed I could try fixing it

[09:48] *** sena_kun joined
[10:13] <sarna> does CPAN only host Perl modules? or Raku modules as well

[10:22] <moritz> raku / perl 6 modules as well

[10:23] <sarna> cool! I have to make an account then :D

[10:54] *** sena_kun left
[10:56] *** RobRaku left
[10:56] *** wamba left
[10:57] *** sauvin left
[10:59] *** sauvin joined
[11:08] *** sena_kun joined
[11:12] *** pmurias left
[11:18] *** joule joined
[11:45] *** mid_laptop joined
[11:52] <sena_kun> releasable6: status

[11:52] <releasable6> sena_kun, Next release in ‚âà9 days and ‚âà7 hours. There are no known blockers. 0 out of 258 commits logged

[11:52] <releasable6> sena_kun, Details: https://gist.github.com/1ea34c99a7e7f9367fe222c53f72b517

[12:02] *** wamba joined
[12:19] *** chloekek joined
[12:19] *** pmurias joined
[12:29] *** mid_laptop left
[12:31] *** bbkr joined
[12:36] *** pmurias left
[12:37] *** RobRaku joined
[12:38] *** pmurias joined
[12:44] <bbkr> @zostay: I must say that Async advent calendar rocks! All those patterns like proper $*IN handling in reacts, CAS operations, Supply taps pushback for emits, etc. are worth bookmarking forever.

[12:48] *** wamba left
[12:54] *** sena_kun left
[13:09] *** sena_kun joined
[13:15] *** joule left
[13:23] <sarna> bbkr: which day do you have in mind?

[13:23] <sarna> oh, they have their own calendar :D

[13:24] <bbkr> yes

[13:24] <sarna> their site is really slow for me though :(

[13:25] <sarna> takes almost 21 seconds to load

[13:26] <bbkr> the main calendar page https://zostay.com ? loaded for me <1s

[13:27] <sarna> oh, it's fast for me now too

[13:27] * sarna shrugs

[13:32] *** RobRaku left
[13:34] <ufobat_> jnthn, a while ago i reported that the comma-ide plugin doesn't work well with the current/latest version of intellij idea, is this going to be fixed soon?

[13:34] *** ufobat_ is now known as ufobat

[13:47] *** pmurias left
[14:02] *** wamba joined
[14:02] *** pmurias joined
[14:06] *** lucasb joined
[14:11] <AlexDaniel> perlbot: rakueval say 42

[14:11] <AlexDaniel> lizmat: ‚Üë

[14:11] <AlexDaniel> hmmm

[14:11] <AlexDaniel> rakueval: say 42

[14:11] <AlexDaniel> okay that doesn't work

[14:11] * AlexDaniel shrugs

[14:11] <AlexDaniel> perlbot: rkeval say 42

[14:11] <perlbot> AlexDaniel: 42‚ê§

[14:11] <AlexDaniel> ah it does!

[14:17] <zostay> bbkr: thx... my cluster has a node down this morning, so it's doing the best it can... 

[14:18] <sarna> it loads fast now :D

[14:28] <zostay> now, yes... though until the node I terminated could reprovision, it would have been slow every 15 minutes for a minute or two as the single overloaded server did extra work

[14:31] <sarna> zostay: I see. anyway, amazing posts - I just read a couple and I've learned so much already :)

[14:40] <zostay> I'm glad they're helpful. I was inspired by one of jnthn's talks on the subject to put something out there that would expand the topics he covers in his slides.

[14:54] *** abraxxa left
[14:54] *** sena_kun left
[14:54] *** abraxxa joined
[14:55] <zostay> oh, look, reddit finally let me post today's entry... yesterday i was getting the nebulous "please fix the above requirements" message with no requirements

[15:08] *** sena_kun joined
[15:08] *** Dave48 joined
[15:10] <Geth> ¬¶ ecosystem: 02f9c66b83 | (Marcel Timmerman)++ (committed using GitHub Web editor) | META.list

[15:10] <Geth> ¬¶ ecosystem: Removed modules of MARTIMM

[15:10] <Geth> ¬¶ ecosystem: 

[15:10] <Geth> ¬¶ ecosystem: Removed my module references because they are also stored on CPAN

[15:10] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/02f9c66b83

[15:11] *** Dave48 left
[15:15] *** nine left
[15:16] *** nine joined
[15:19] *** camelia joined
[15:30] *** libertas left
[15:30] *** Guest90798 left
[15:33] *** libertas joined
[15:33] <moritz> man, I just read the first line, and thought somebody rage-quitted raku

[15:33] <moritz> then I read the second line, and all good :D

[15:33] <AlexDaniel> moritz: even that would've been better than just deleting projects on github

[15:33] <AlexDaniel> which someone did in the past :S

[15:34] <moritz> I know

[15:34] <AlexDaniel> as long as they give us a chance to adopt their modules so that anything that depends on them keeps working, I don't mind ragequitting :)

[15:35] <chloekek> Perhaps the packaging solution needs to be resilient by not depending on resources that can disappear.

[15:36] <AlexDaniel> chloekek: that's what CPAN is, yes

[15:36] <chloekek> Amazing! Mission complete!

[15:36] <AlexDaniel> well, not exactly

[15:37] <AlexDaniel> I guess we should really keep proper backups of all github/gitlab modules too

[15:37] <AlexDaniel> I guess my biggest issue with CPAN is that people don't use it. Even those who use it, don't

[15:38] <jnthn> AlexDaniel: What does the last bit mean? :)

[15:38] <jnthn> "don't use it for all of their modules"?

[15:38] <AlexDaniel> countless times I've stumbled upon issues in modules that were already fixed on master, like months ago

[15:38] <jnthn> Ah, that

[15:38] <AlexDaniel> in some cases they even have tags and everything

[15:39] <AlexDaniel> but no new release on CPAN

[15:39] <chloekek> My biggest issue with GitHub is that you have no idea what you will get unless you depend on a specific commit hash, since refs are mutable. This is a security hazard unless you check hashes locally with a lock file.

[15:42] <AlexDaniel> chloekek: I'm not sure I understand, does CPAN solve that somehow?

[15:43] <chloekek> AFAIK CPAN prohibits changing the tarball of a specific version.

[15:43] <chloekek> So as long as you trust CPAN, you good (but you shouldn‚Äôt; checking hashes locally is safe even if CPAN gets compromised).

[15:44] <jnthn> ufobat: Not in this month's release, at least; there's just too many changes. :(

[15:44] <AlexDaniel> chloekek: we should be able to check tag signature if there's one‚Ä¶

[15:45] <jnthn> ufobat: Should hopefully make it by the January one.

[15:45] <AlexDaniel> but then what do we compare it with

[15:45] <chloekek> I have a script somewhere that computes hashes of all of the packages on CPAN and Git{Hub,Lab} but it has @issues. Especially since there‚Äôs no way to check out specific versions of pkgs that are on Git{Hub,Lab}.

[15:45] <ufobat> that would be awesome :-)

[15:45] <ufobat> thanks jnthn 

[15:46] <chloekek> The output is a list of (tarball URL, hash) pairs. For CPAN it‚Äôs the usual tarball URL, for GitHub it‚Äôs https://github.com/<user>/<repo>/archive/<commithash>.tar.gz

[15:46] <chloekek> But it‚Äôs always the latest master commit hash at the time of running the script. :(

[15:50] <chloekek> Oh, apparently I never even got to implementing the GitHub part, I only have a file for CPAN archives: https://github.com/chloekek/cp6t/blob/master/ecosystem/cpan.archives

[15:52] <cpan-raku> New module released to CPAN! BSON (0.11.6.1) by 03MARTIMM

[15:58] <chloekek> AlexDaniel: I think that the whole packaging can be solved by adding just one thing: if people want to host a package with Git, then they *must* tag their releases.

[15:59] <chloekek> If such a requirement is in place, then packages can be crawled by a bot, and archived indefinitely.

[15:59] <zostay> i started using cpan better once i wrote tooling to automate away the painful parts... (except for updating the provides section of META, that part is still very painful)

[15:59] <chloekek> And you can download specific versions from GitHub, instead of always master.

[16:00] <zostay> i'd be happy with any ecosystem setup that included tooling to make it easy to do the right thing and automates away the painful parts of the release process... otherwise, we will just have the same mess in another place

[16:02] <jnthn> Yeah, maintaining the provides section is something I'm glad to no longer have to do manually... :) 

[16:02] <jnthn> I also have some scripts for doing various release tasks; should get the upload incorporated too. :)

[16:02] <zostay> how do you avoid maintaining provides? I would love to know

[16:03] <jnthn> zostay: I use Comma, which does it automatically

[16:03] <zostay> I was afraid you'd say that. 

[16:03] <jnthn> :)

[16:03] <zostay> is there any chance the code that does that could be released as a separate module?

[16:04] <Grinnz> just wait until some crazy person makes a dzil for raku... :)

[16:04] <jnthn> zostay: Given the code is written in Java and relies on file system event APIs from the IntelliJ platform, not really. :)

[16:04] <jnthn> But I think one could write something in Raku using file watching

[16:04] <jnthn> Probably in not very much code at all

[16:05] <zostay> I'd just be happy for the ability to find the names of packages from the compunits or something similar.

[16:06] <chloekek> I happen to have code that indexes packages into a SQLite database and associates compunits with distributions :') but it‚Äôs old and unfinished.

[16:07] <zostay> when i've gone to write it, i discovered that i have to parse every weird kind of package declaration and try to do the right thing... i haven't found a method that would just let me do some reflection on the code to discover the packages in the files

[16:07] *** kensanata left
[16:07] *** pmurias left
[16:08] <zostay> i've started looking at goff's parsing stuff a few times, but haven't made the time to really dig in to understand it enough to use it

[16:08] <chloekek> p6: say $?DISTRIBUTION

[16:08] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´Nil‚ê§¬ª

[16:11] <zostay> i'm too busy trying to figure out how to get raku to run well on pi at the moment... i need to get myself a pi 4 so i can stop screwing around with cross-compiling on qemu, which is super slow

[16:11] <zostay> compiling on a pi 3 is doable, but painful

[16:11] <zostay> compiling on a pi 0 is possible, but excrutiating :-p

[16:12] <patrickb> zostay: I recently learned that moarvm bytecode files are platform independent.

[16:14] <patrickb> Something along these lines should work: Compile rakudo and abort when it starts compiling the setting. Copy the setting over from some other install, adjust timestamps and restart the build.

[16:16] *** patrickb left
[16:18] <zostay> actually, that's not a terrible idea, though i wouldn't probably mess that far up the build

[16:19] <zostay> i could build rakudo itself, which takes an hour or so as the base container, then build a standard container with the modules i want and copy them into the base container for rpi

[16:20] <zostay> once a working rakudo is built, i don't need to build it again very often

[16:29] <ufobat> what would you suggest to install raku, rakudobrew or install the sources from rakudo.org (manually)?

[16:31] <zostay> i don't tend to use rakudobrew anymore, i usually download a release from git and build (or on my mac, just use brew)

[16:36] <AlexDaniel> zostay: just install it from the repo?

[16:36] *** anosajib joined
[16:36] <anosajib> Hi

[16:37] <AlexDaniel> zostay: you should be able to get 2019.07.1 from debian unstable

[16:38] <AlexDaniel> anosajib: hello!

[16:38] <zostay> at the moment i'm working with a variation of rob's Dockerfile, which grabs the latest release of rakudo-star, so i'm still working with 2019.03

[16:38] <anosajib> how are you  ?  Alex. 

[16:40] <AlexDaniel> anosajib: sleepy and unproductive :(

[16:43] *** ZzZombo_ joined
[16:43] *** Xliff_ left
[16:44] *** ZzZombo left
[16:44] *** ZzZombo_ is now known as ZzZombo

[16:47] *** testtestest joined
[16:48] *** robertle joined
[16:49] *** anosajib left
[16:51] *** chloekek left
[16:52] *** againano joined
[16:53] *** sena_kun left
[16:55] *** againano left
[16:59] *** jmerelo joined
[16:59] *** ZzZombo left
[17:00] *** ZzZombo joined
[17:03] *** testtestest left
[17:04] <nine> zostay: > perl6 -Ilib -e '$*REPO.load("Inline/Language/ObjectKeeper.pm6".IO).handle.globalish-package.keys.say'

[17:04] <nine> (Inline)

[17:08] *** sena_kun joined
[17:12] <zostay> ugexe suggested this, which I think I will start from: perl6 -e 'my $repo = CompUnit::Repository::FileSystem.new(prefix => ~$*CWD.child("lib")); say $repo.distribution.meta<provides>

[17:13] *** mid_home joined
[17:15] <nine> zostay: yeah, that's good, too. Depends on whether you stick to the 1 class per file rule and have your names always match the file names

[17:17] <zostay> i definitely have multiple packages per file in many of my modules

[17:29] *** chloekek joined
[17:35] *** cpan-raku left
[17:36] *** cpan-raku joined
[17:36] *** cpan-raku left
[17:36] *** cpan-raku joined
[17:43] <chloekek> Building Rakudo 2019.11 with Nix, exciting. Hope it works out of the box. :√æ

[17:44] <chloekek> Yep it works \o/

[17:48] *** leont joined
[18:05] *** jmerelo left
[18:20] *** vividsnow left
[18:20] *** vividsnow joined
[18:22] *** nirmal joined
[18:22] <nirmal> hey

[18:23] <sena_kun> nirmal: o/

[18:23] <nirmal> how you ?

[18:24] <sena_kun> writing some code. :]

[18:24] <nirmal> hmmm

[18:24] <nirmal> you are from ?

[18:26] *** nirmal left
[18:28] *** vividsnow left
[18:28] *** vividsnow joined
[18:42] *** patrickb joined
[18:49] *** wamba left
[18:54] *** sena_kun left
[18:56] *** veesh_ joined
[18:58] *** veesh left
[18:58] *** veesh_ is now known as veesh

[19:01] <chloekek> What is the difference between <foo>+ and <foo> + in a rule?

[19:01] <vrurg> chloekek: I'm not 100% sure, but in second rule + is being applied to an empty atom.

[19:07] <moritz> no

[19:08] <moritz> the difference is between <foo>+ and [<foo> <.ws>]+

[19:08] <moritz> a rule automatically inserts a <.ws> for spaces (except at the start of the rule, iirc)

[19:09] *** sena_kun joined
[19:09] <vrurg> I didn't use rules for too long, as it seems...

[19:10] <chloekek> I find grammars so difficult to work with.

[19:12] <vrurg> chloekek: Depends on what you compare with. Of lex/flex/yacc/bison, and perl5, and raku ‚Äì Raku's are by far the best.

[19:12] * leont tends to prefer token over rule for exactly that sort of reason

[19:13] <chloekek> I find ocamllex+menhir very easy to use.

[19:14] <chloekek> I‚Äôll probably resort to using regexes for matching terminals and then write a recursive-descend parser by hand using subroutines.

[19:15] <moritz> yes, token holds the least surprises

[19:16] <moritz> m: my token a { a }; say 'a a' ~~ rule { <&a> +}

[19:16] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´ÔΩ¢a aÔΩ£‚ê§¬ª

[19:16] <moritz> m: my token a { a }; say 'a a' ~~ rule { <&a>+}

[19:16] <camelia> rakudo-moar 672c5d403: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§¬ª

[19:24] *** sauvin left
[19:31] *** wamba joined
[20:08] *** finanalyst joined
[20:23] *** pmurias joined
[20:37] *** vividsnow left
[20:39] *** vividsnow joined
[20:42] *** robertle left
[20:55] *** sena_kun left
[21:08] *** rindolf left
[21:08] *** sena_kun joined
[21:08] *** chloekek left
[21:41] *** maggotbrain left
[21:47] *** kensanata joined
[21:48] *** pmurias left
[21:48] *** sena_kun left
[21:52] *** maggotbrain joined
[21:54] *** pmurias joined
[22:17] *** kensanata left
[22:20] *** finanalyst left
[22:56] <josef_October> could some one please help me to get running raku and a web server like apache / nginx / lighthttpd

[22:56] <josef_October> is there somewhere a simple tutorial out there please?

[22:58] <El_Che> josef_October: you want to run raku webapps

[22:58] <tellable6> hey El_Che, you have a message: https://gist.github.com/2cb75909f4b13aa174efab6485989b4b

[23:04] <josef_October> El_Che: please could you tell me what is webapps? i am new to programing and even web server configurations

[23:06] <josef_October> and a search engine did not give me a hint :/

[23:07] <veesh> uh, what's your background, and what are you trying to do?

[23:07] *** vividsnow left
[23:07] *** vividsnow joined
[23:08] *** vrurg left
[23:08] *** vrurg joined
[23:09] <El_Che> josef_October: well, you need to get the basics first then. Programming and sysadmin skills take time to acquire. Do you have access to books? 

[23:09] *** skyl4rk_ joined
[23:09] <El_Che> josef_October: I would suggest this book: http://shop.oreilly.com/product/0636920065883.do

[23:09] <El_Che> iirc it's freely vailable as well

[23:10] *** silug left
[23:10] *** skyl4rk left
[23:10] *** skyl4rk_ is now known as skyl4rk

[23:10] <El_Che> josef_October: http://greenteapress.com/thinkperl6/thinkperl6.pdf

[23:11] <josef_October> is there explained how to use raku for web programing?

[23:11] <josef_October> thanks so much for the link

[23:11] <El_Che> josef_October: use it to get into programming, after that have a look at Cro. Plenty of howtos about setting up webservers after that

[23:11] <El_Che> josef_October: it learns you to program and raku at the same time

[23:11] <El_Che> josef_October: some basic principles

[23:12] <El_Che> first learn to program, then web or whatever special need

[23:13] *** pmurias left
[23:14] <josef_October> well an tutorial how to get up e.g. apache2 and raku working would help me a lot too because otherwise i have no testing environment :( and i would love to use raku for web progrmaing

[23:14] *** silug joined
[23:14] <josef_October> El_Che

[23:15] <josef_October> but i was not lucky with searching for such a tutorial - could perl5 / apache2 tutorials help me there?

[23:16] <El_Che> josef_October: cro has it own developement webserver

[23:16] <El_Che> no need for apache or a reverse proxy at that stage

[23:18] <Grinnz> you also would not involve apache in development of webservices in perl these days either

[23:18] <Grinnz> so any such search results would surely point you at outdated mod_perl garbage

[23:18] <Grinnz> which is completely inapplicable to raku

[23:23] <josef_October> ok thanks you for your help El_Che and Grinnz

[23:24] <El_Che> no problem, have fun learning

[23:29] <josef_October> thanks

[23:34] *** pmurias joined
[23:43] *** wamba left
