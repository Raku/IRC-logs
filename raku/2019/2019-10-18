[00:00] *** wildtrees left
[00:06] <vrurg> Aearnus: I'm having weird discrpancies on read benchmark result where ratio flip-flops between 1.6 and 9 times slow down. But write is consistent and it's only 1.4 times slower.

[00:06] <discord6> <Aearnus> huh, interesting

[00:07] <discord6> <Aearnus> how many reads/writes a second does that come out to vrurg?

[00:09] <vrurg> Try it yourself: https://gist.github.com/vrurg/aa7eb27dd56b6faa898062fe4a0ec5fa

[00:10] <vrurg> On your system it would most likely be different numbers.

[00:22] <discord6> <Aearnus> fair point haha

[00:22] <discord6> <Aearnus> thx vrurg

[00:28] <vrurg> welcom! :)

[00:30] *** warriors left
[00:36] *** Kaiepi left
[00:40] <Doc_Holliwood> did anybody ever try to upload a module with a wide unicode name? like "Moj≈´ru"

[00:40] <Doc_Holliwood> or even real kanji characters? which this client doesn't support

[00:41] <AlexDaniel> Doc_Holliwood: there's this https://modules.perl6.org/dist/Acme::%E0%B2%A0_%E0%B2%A0:cpan:ELIZABETH

[00:42] * guifa chuckles at that module

[00:43] <Grinnz> based on https://metacpan.org/pod/distribution/Acme-LookOfDisapproval/anotherlib/Acme/o_o.pm, but probably has to jump through far less hoops :P

[00:43] <AlexDaniel> guifa: you might also like module ../Foo

[00:43] * Doc_Holliwood joins the chuckling

[00:44] <AlexDaniel> guifa: here on the bottom: https://modules.perl6.org/search/?q=foo

[00:44] <Grinnz> well that seems like a terrible idea :P

[00:45] <AlexDaniel> Grinnz: IIRC you can actually install it if you clone it from here https://github.com/AlexDaniel/foo-dotdotslash

[00:45] <AlexDaniel> Grinnz: and then do `zef install .`

[00:45] <guifa> I think I‚Äôm going to have to have to join in the fun sometime.  Maybe a Raku and/or Perl calendar variant whose epoch is the original release date? 

[00:45] * guifa would then make the Perl calendar always one day behind the Raku one üòà

[00:46] <AlexDaniel> guifa: actually, I'd love to see an implementation of International Fixed Calendar

[00:46] <AlexDaniel> could be handy for certain operations

[00:46] <Doc_Holliwood> are you nuts?

[00:47] <AlexDaniel> Grinnz: also I think it's possible to uninstall it too

[00:47] <AlexDaniel> Grinnz: oh, and it has tests, and they pass!

[00:47] <Grinnz> heh

[00:47] <Doc_Holliwood> it is known that only opening a source file with date related code has led to sudden brain bleeding and strokes

[00:47] <Doc_Holliwood> let alone reading it

[00:47] <Grinnz> i guess having the ability to store the modules without the same name on the filesystem helps

[00:47] <Grinnz> not so much with the URLs, apparently

[00:48] <AlexDaniel> Grinnz: that's just a bug on the website

[00:48] <guifa> Doc_Holliwood: someone has to do it.  I‚Äôm sacrificing myself.  I actually grabbed a copy of the Calendric Calculations book to start work on it

[00:48] <AlexDaniel> I wouldn't be surprised if module <b> does exactly what I expect it to do‚Ä¶

[00:48] * Grinnz is quite happy with the restriction of only word characters and :: in package names

[00:49] <AlexDaniel> yeah, well‚Ä¶ I should really upload a <b> module

[00:49] <Grinnz> if that breaks it that's definitely a bug

[00:49] <Grinnz> url escaping can be ambiguous, html escaping not so much :P

[00:50] *** afasdf joined
[00:50] <AlexDaniel> wait there's an emptystring module too?

[00:50] <guifa> The trick is that some calendars can‚Äôt be converted with 100% accuracy and then you run into issues of date vs datetime.  I‚Äôm actually not sure how to handle a datetime for Hebrew and I‚Äôve not seen any generally advice on handling it

[00:50] <AlexDaniel> oh! There it is

[00:50] <AlexDaniel> https://modules.perl6.org/search/?q=author%3A%22Aleks-Daniel+Jakimenko-Aleksejev%22

[00:50] <AlexDaniel> on the bottom

[00:51] <Grinnz> also a nice link :P

[00:51] <Grinnz> that reminds me of when i didnt check for empty strings on https://cpanmeta.grinnz.com/ but didnt notice because they were all just empty <a> anyway

[00:52] <Grinnz> guifa: https://www.tondering.dk/claus/calendar.html

[00:53] <guifa> Grinnz: that page identifies the problem (without stating it as such) but without a solution.   Hebrew calendar days start basically at sunset

[00:53] <Grinnz> mmmhm

[00:54] <Grinnz> sunset data is not encoded to anything useful, so i think you might be generally out of luck there

[00:55] <guifa> You can calculate it, but it‚Äôs not really useful anyways, because what do you do for polar areas?

[00:55] <Grinnz> perhaps approximations like sunset is at 6pm would be good enough

[00:55] <AlexDaniel> OK I have a module‚Ä¶

[00:56] *** benjif left
[00:58] *** afasdf left
[00:59] *** ZzZombo_ joined
[00:59] <Geth> ¬¶ ecosystem: 098343874e | (Aleks-Daniel Jakimenko-Aleksejev)++ | META.list

[00:59] <Geth> ¬¶ ecosystem: Add Foo::<b>Foo module

[00:59] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/098343874e

[00:59] <guifa> Grinnz: yeah, there‚Äôs no great solution except to give people options (align with Jerusalem, strictly 6pm, align to a supplied location, align to the near non-polar area, etc)

[01:00] <guifa> Islamic calendar has similar problems, it‚Äôs impossible to predict observational calendars in advance, so calculations will always have a margin of error of a day or two

[01:00] <AlexDaniel> now we just wait for the index to update‚Ä¶

[01:01] <AlexDaniel> to see the epic fail

[01:01] <AlexDaniel> Grinnz: what would be a better namespace for stuff like this?

[01:01] <AlexDaniel> Grinnz: ‚ÄúFoo‚Äù doesn't sound like a good one, right?

[01:02] <Grinnz> everything like this is Acme:: in perl 5

[01:02] <Grinnz> unless its a funny pragma that has to be at top level

[01:02] <AlexDaniel> but Acme has like, um, how do I say it

[01:02] <AlexDaniel> ‚Äúuseful stuff‚Äù

[01:02] *** ZzZombo left
[01:02] <Grinnz> eh?

[01:02] *** ZzZombo_ is now known as ZzZombo

[01:03] <AlexDaniel> I mean like stuff that actually works, my modules are simply there to test/break tooling

[01:03] <Grinnz> yeah, Acme:: has both

[01:03] <Grinnz> like Acme::Bleach actually works, but still is pointless

[01:04] <AlexDaniel> we have something like that too, I think: https://github.com/perl6-community-modules/perl6-Acme-Anguish

[01:05] <AlexDaniel> hmm it doesn't allow these characters in the source code? bummer

[01:05] <Grinnz> heh

[01:07] <cpan-raku> New module released to CPAN! LibXML (0.1.5) by 03WARRINGD

[01:10] *** stanleytam joined
[01:20] <AlexDaniel> I guess a null byte in the name can be fun too

[01:24] <AlexDaniel> ===SORRY!=== Cannot use null character (U+0000) as part of the path

[01:24] <AlexDaniel> :S

[01:25] <AlexDaniel> that's weird, I'm not sure why it attempts to

[01:28] <AlexDaniel> eh, it ends up constructing an IO::Path somewhere, I guess

[01:43] <Geth> ¬¶ ecosystem: 9d223885a0 | (Aleks-Daniel Jakimenko-Aleksejev)++ | META.list

[01:43] <Geth> ¬¶ ecosystem: Add Foo::nullbyteFoo module

[01:43] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/9d223885a0

[01:44] <AlexDaniel> zef is happy to `install .` it and it even passes tests‚Ä¶ so, uh, ok?

[01:44] <AlexDaniel> this line makes no difference though: https://github.com/AlexDaniel/foo-nullbyte-foo/blob/4cb0bfaa6b2ee50a2d452fbc582046c27c477087/lib/Foo/nullbyteFoo.pm6#L1

[01:50] *** softmoth left
[01:51] <Geth> ¬¶ ecosystem: 7e7f2b0746 | (Aleks-Daniel Jakimenko-Aleksejev)++ | META.list

[01:51] <Geth> ¬¶ ecosystem: Add Foo::

[01:51] <Geth> ¬¶ ecosystem: 

[01:51] <Geth> ¬¶ ecosystem: Foo module

[01:51] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/7e7f2b0746

[01:52] <AlexDaniel> enough for now

[01:57] *** Doc_Holliwood left
[02:03] <AlexDaniel> Grinnz: nope, <b> is ok https://modules.perl6.org/search/?q=foo

[02:03] <AlexDaniel> null byte maybe not so much, but it's not too horrible

[02:14] *** softmoth joined
[02:19] *** kotrcka left
[02:22] *** warriors joined
[02:27] <discord6> <Aearnus> just got back from a lecture with Noam Chomsky. cool stuff

[02:28] <warriors> did you tell him about raku 

[02:33] *** Kaiepi joined
[02:33] <discord6> <Aearnus> haha, I was definitely thinking about it

[02:34] <discord6> <Aearnus> but the moderators were like "only questions about the class, please"

[02:34] <discord6> <Aearnus> I'll try to bring it up when we talk about generative grammars

[02:34] <warriors> tell him raku is a shinto shrine :)

[02:35] <warriors> and give him the Clay Shirky presentation

[03:07] *** hythm joined
[03:17] <hythm> hello

[03:17] <hythm> p6: my $str1 = 'abc'; my $str2 = '/.*bc/'; say 'abc' ~~ / <$str1> /; say 'abc' ~~ / <$str2> /

[03:17] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´ÔΩ¢abcÔΩ£‚ê§5===SORRY!5===‚ê§Unrecognized regex metacharacter / (must be quoted to match literally)‚ê§at /home/camelia/EVAL_1:1‚ê§------> 3anon regex {7‚èè5  /.*bc/}‚ê§Unrecognized regex metacharacter . (must be quoted to match literally)‚ê§at‚Ä¶¬ª

[03:18] <hythm> how can I fix the eror in the last statement?

[03:18] <hythm> s/eror/error/

[03:22] <hythm> p6: y $str = '/.*bc/'; say 'abc' ~~ / <{$str}> /

[03:22] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unsupported use of y///; in Perl 6 please use tr///‚ê§at <tmp>:1‚ê§------> 3y7‚èè5 $str = '/.*bc/'; say 'abc' ~~ / <{$str}‚ê§¬ª

[03:22] <hythm> p6: my $str = '/.*bc/'; say 'abc' ~~ / $<str> /

[03:22] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´Nil‚ê§¬ª

[03:23] <hythm> p6: my $str = '/.*bc/'; say 'abc' ~~ / <{$str}> /

[03:23] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´5===SORRY!5===‚ê§Unrecognized regex metacharacter / (must be quoted to match literally)‚ê§at /home/camelia/EVAL_0:1‚ê§------> 3anon regex {7‚èè5  /.*bc/}‚ê§Unrecognized regex metacharacter . (must be quoted to match literally)‚ê§at /home/camel‚Ä¶¬ª

[03:26] <warriors> look i am complete nood

[03:27] *** ZzZombo_ joined
[03:27] <warriors> but adding / / once in str2 and again in the regex

[03:27] <warriors> looks off

[03:27] <warriors> been a while since i looked at regex

[03:30] *** ZzZombo left
[03:30] *** ZzZombo_ is now known as ZzZombo

[03:32] <hythm> agree, I saw it in SO question, and it's not working without the // so I added it to try

[03:32] *** Kaiepi left
[03:37] <hythm> the question is how can I interpolate a variable into a regex and acts as Str or Regex, so it can be matched as literal string or regex based on the content of the variable

[03:42] <hythm> the goal is to have :auth<github:raku> ~~ :auth<github:raku> and :auth</.*:raku/> ~~ :auth<github:raku> both returns true

[03:43] <hythm> I made it work before but forgot how I did it

[03:44] <hythm> typo: :auth</github:raku/> ~~ :auth<github:raku> and :auth</.*:raku/> ~~ :auth<github:raku> both returns true

[03:46] <hythm> ops typo again, it's confusing: :auth<github:raku> ~~ :auth<github:raku> and :auth</.*:raku/> ~~ :auth<github:raku> both returns true

[03:47] <warriors> p6: my $str2 = /.*bc/; say 'abc' ~~ $str2

[03:47] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´ÔΩ¢abcÔΩ£‚ê§¬ª

[03:47] <warriors> is that what you want

[03:47] <warriors> p6: my $str2 = /.*bf/; say 'abc' ~~ $str2

[03:47] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´Nil‚ê§¬ª

[03:47] <warriors> p6: my $str2 = /.*b./; say 'abc' ~~ $str2

[03:47] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´ÔΩ¢abcÔΩ£‚ê§¬ª

[03:49] <warriors> p6: my $str2 = /.*b./; say 'abc' ~~ "$str2"

[03:49] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´Regex object coerced to string (please use .gist or .perl to do that)‚ê§False‚ê§  in block <unit> at <tmp> line 1‚ê§¬ª

[03:49] <warriors> p6: my $str2 = /.*b./; say 'abc' ~~ /$str2/

[03:49] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´ÔΩ¢abcÔΩ£‚ê§¬ª

[03:49] <warriors> hmmm

[03:49] <warriors> p6: my $str2 = /.*b./; say 'abc' ~~ ///$str2///

[03:49] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Null regex not allowed‚ê§at <tmp>:1‚ê§------> 3my $str2 = /.*b./; say 'abc' ~~ //7‚èè5/$str2///‚ê§¬ª

[03:50] <warriors> p6: my $str2 = /.*b./; say 'abc' ~~ //$str2//

[03:50] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Null regex not allowed‚ê§at <tmp>:1‚ê§------> 3my $str2 = /.*b./; say 'abc' ~~ //7‚èè5$str2//‚ê§¬ª

[03:50] <warriors> p6: my $str2 = /.*b./; say 'abc' ~~ /$str2/

[03:50] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´ÔΩ¢abcÔΩ£‚ê§¬ª

[03:52] <hythm> p6: my $str = '/.*:def/'; say 'abc:def' ~~ $str

[03:52] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´False‚ê§¬ª

[03:53] <hythm> p6: my $str = 'abc:def'; say 'abc:def' ~~ $str

[03:53] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´True‚ê§¬ª

[03:55] <hythm> :p6 my $str = '/.*:def/'; say 'abc:def' ~~ / <$str> /

[03:55] <hythm> p6: my $str = '/.*:def/'; say 'abc:def' ~~ / <$str> /

[03:55] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´5===SORRY!5===‚ê§Unrecognized regex metacharacter / (must be quoted to match literally)‚ê§at /home/camelia/EVAL_0:1‚ê§------> 3anon regex {7‚èè5  /.*:def/}‚ê§Unrecognized regex metacharacter . (must be quoted to match literally)‚ê§at /home/cam‚Ä¶¬ª

[04:01] <warriors> p6: my $str = '/.*bc/'; say $str.WHAT ; my $str2 = /.*bc/ ; say $str2.WHAT

[04:01] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´(Str)‚ê§(Regex)‚ê§¬ª

[04:01] <warriors> i think is your answer

[04:01] <hythm> p6: my $dist-auth = 'github:raku'; my $needed-auth = 'github:raku'; say $needed-auth ~~ / $dist-auth /

[04:01] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´ÔΩ¢github:rakuÔΩ£‚ê§¬ª

[04:01] <hythm> p6: my $dist-auth = 'github:raku'; my $needed-auth = '/.*:raku/'; say $needed-auth ~~ / $dist-auth /

[04:01] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´Nil‚ê§¬ª

[04:01] <warriors> why are you saving the regex in a str

[04:01] <warriors> in the first place

[04:01] <hythm> because it is coming from user input

[04:02] <warriors> p6: my $str = '/.*bc/'; say $str.WHAT ; my $str2 = /$str/ ; say $str2.WHAT

[04:02] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´(Str)‚ê§(Regex)‚ê§¬ª

[04:03] <warriors> cast the input to  regex

[04:11] <hythm> p6: my $dist-auth = 'github:raku'; my regex needed-auth { /.*:raku/ }; say $dist-auth ~~ <$needed-auth>

[04:11] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´5===SORRY!5===‚ê§Unrecognized regex metacharacter / (must be quoted to match literally)‚ê§at <tmp>:1‚ê§------> 3 = 'github:raku'; my regex needed-auth {7‚èè5 /.*:raku/ }; say $dist-auth ~~ <$needed‚ê§Unrecognized regex metacharacter . (must be‚Ä¶¬ª

[04:15] <hythm> may be I dont need to cast the input to regex, if its string or regex  ~~ should match fine, no?

[04:17] <hythm> may be I have too, I think I should sleep can't focus on anything... gn

[04:53] <hythm> p6: say 'github:raku' ~~ / .*:raku / # sigh

[04:53] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´Nil‚ê§¬ª

[04:57] <hythm> p6: say 'githubraku' ~~ / .*raku /

[04:57] <camelia> rakudo-moar 75d705f19: OUTPUT: ¬´ÔΩ¢githubrakuÔΩ£‚ê§¬ª

[05:07] *** hythm left
[05:29] *** warriors left
[05:31] *** Kaiepi joined
[05:46] *** Kaiepi left
[05:51] *** Kaiepi joined
[05:59] *** xinming_ left
[06:01] *** xinming_ joined
[06:13] *** softmoth left
[06:15] <El_Che> < discord6> <Aearnus> but the moderators were like "only questions about the class, please" <-- the working class, I hope ;)

[06:17] <discord6> <Aearnus> hahah El_Che

[06:19] *** sena_kun joined
[07:13] *** sena_kun left
[07:24] *** Doc_Holliwood joined
[07:39] *** ZzZombo_ joined
[07:42] *** ZzZombo left
[07:43] *** ZzZombo_ is now known as ZzZombo

[07:48] *** marcusr left
[07:49] *** marcusr joined
[07:54] *** marcusr left
[07:54] *** marcusr joined
[08:11] *** ZzZombo left
[08:20] <Geth> ¬¶ doc: d5c8b8c6b4 | finanalyst++ | 2 files

[08:20] <Geth> ¬¶ doc: Highlight Community, add IRC bot list

[08:20] <Geth> ¬¶ doc: 

[08:20] <Geth> ¬¶ doc: 1 - Place the Community resources in HomePage (leaving the same link in the Language page)

[08:20] <Geth> ¬¶ doc: 2 - Add a list of bots (the text is taken from perl6.org/community/IRC) to the Community page.

[08:20] <Geth> ¬¶ doc: 3 - Some editing of Raku / Perl6

[08:20] <Geth> ¬¶ doc: 4 - Added channel #raku to resource list.

[08:20] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d5c8b8c6b4

[08:21] <Geth> ¬¶ doc: 7e4014ae4b | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | 2 files

[08:21] <Geth> ¬¶ doc: Merge pull request #3064 from finanalyst/master

[08:21] <Geth> ¬¶ doc: 

[08:21] <Geth> ¬¶ doc: Highlight Community, add IRC bot list

[08:21] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7e4014ae4b

[08:25] *** xinming_ left
[08:27] *** xinming_ joined
[08:30] <Geth> ¬¶ problem-solving: JJ self-assigned Generic name for FALLBACK and CALL-ME https://github.com/perl6/problem-solving/issues/119

[08:32] *** ufobat_ is now known as ufobat

[09:04] *** Doc_Holliwood left
[09:12] <Geth> ¬¶ doc: 6a5cebe7e6 | (JJ Merelo)++ | doc/Type/Str.pod6

[09:12] <Geth> ¬¶ doc: Clarifies with examples how :delete and :squash work, closes #3057

[09:12] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6a5cebe7e6

[09:18] *** stanleytam left
[09:53] *** Doc_Holliwood joined
[10:11] *** sena_kun joined
[10:28] <squashable6> üçï lizmat++ opened issue ‚ÄúEmpty #| cause compilation error‚Äù: https://github.com/rakudo/rakudo/issues/3242

[10:28] <squashable6> üçïüçïüçï  First contribution by lizmat++! ‚ô•

[10:44] <squashable6> üçï lizmat++ labeled issue ‚ÄúEmpty #| cause compilation error‚Äù (BLOCKER): https://github.com/rakudo/rakudo/issues/3242

[11:19] *** MasterDuke left
[11:20] <lizmat> weekly: https://raku.online/2019/10/18/raku-one-liners-a-free-book/

[11:20] <notable6> lizmat, Noted! (weekly)

[11:29] <Doc_Holliwood> did somebody try the "resources" feature. i put a file into that field in the meta6, and installed the module. in the module code i dump %?RESOURCES but it doesn't show the file i included there

[11:31] <Doc_Holliwood> If i understand the docs right, there should be and additional entry in there that points to the location of the resource

[11:31] <Doc_Holliwood> https://docs.perl6.org/language/modules#index-entry-META6.json-META6.json

[11:36] *** xinming_ left
[11:37] *** xinming_ joined
[11:43] *** pmurias joined
[11:47] *** ufobat left
[11:49] <sena_kun> Doc_Holliwood, how does your `resources` field in META6.json look like? where is your file placed, in `resources/$filename`? in the module distribution directory?

[11:50] <Doc_Holliwood> Mmh. I could find my file in rakudo\share\perl6\site\resources

[11:50] <Doc_Holliwood> but how do I know the checksum?

[11:50] <sena_kun> Doc_Holliwood, you don't need to know those details, you are using external API only

[11:51] <sena_kun> Doc_Holliwood, you can check if your setup fits to some working example

[11:51] <sena_kun> e.g. with cro-http:

[11:51] <sena_kun> https://github.com/croservices/cro-http/blob/master/META6.json#L74 <- META6.json

[11:51] <sena_kun> https://github.com/croservices/cro-http/blob/master/resources/index.html <- the file placement itself

[11:51] <sena_kun> https://github.com/croservices/cro-http/blob/b9d03aa8b608aa126ea9edda7939c9990973e7b2/lib/Cro/HTTP/Router.pm6#L1068 <- usage

[11:55] <sena_kun> Doc_Holliwood, makes sense or not really?

[11:55] <Doc_Holliwood> finrah i seee

[11:55] <Doc_Holliwood> ah, i see

[11:55] <Doc_Holliwood> see i dumped %?RESOURCES and saw no keys

[11:56] <Doc_Holliwood> but when I ask for %?RESOURCES{"myfile"} it return something

[11:56] <sena_kun> well, that's because there is some magic involved, so you don't don't inspect it directly, rather you ask it "Give me something by this name".

[11:56] <sena_kun> s/don't don't/don't/

[11:57] <Doc_Holliwood> That could be mentioned in the documentation. 

[11:58] <sena_kun> https://github.com/perl6/doc/issues/2240 <- there is even my ticket that asks for that...

[11:59] <sena_kun> Doc_Holliwood, if you want, you can volunteer to document it. :)

[11:59] * Doc_Holliwood starts to cry

[12:00] <Doc_Holliwood> All I wanted was to write a nicely coded cross platform implementation of a command line pac man

[12:00] <Doc_Holliwood> Now I find myself rewriting half of mi6 because it annoys me so much

[12:00] <Doc_Holliwood> And you ask me to shave another yak

[12:00] * Doc_Holliwood shakes fists

[12:01] <Doc_Holliwood> I'm kidding. But you can also do it. I think pretty much everybody has commit bits to the docs

[12:02] <sena_kun> I can, of course, and I did not insist, just asked.

[12:02] *** MasterDuke joined
[12:08] *** pmurias left
[12:09] *** pmurias joined
[12:14] *** scimon joined
[12:16] *** pmurias left
[12:17] *** pmurias joined
[12:22] *** pmurias left
[12:39] <Kaiepi> squashable6, status

[12:39] <squashable6> Kaiepi, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà23 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:39] <squashable6> Kaiepi, Log and stats: https://gist.github.com/fd718ceef5ec50e517160b136cd9183d

[12:44] *** Kaiepi left
[12:44] *** pmurias joined
[12:50] <Doc_Holliwood> can i deconstruct a `Pair` in a loop variable assignment? this doesn't work: for @pairs -> ($key, $value) {}

[12:53] *** Kaiepi joined
[12:57] <vrurg> Doc_Holliwood: (:key($key), :value($value)

[13:11] *** bisectable6 joined
[13:16] <Doc_Holliwood> i see, tx

[13:17] <moritz> or just -> (:$key, :$value) should work

[13:17] <moritz> m: for :a, :b, :c -> (:$key, :$value) { say $key }

[13:17] <camelia> rakudo-moar 33192b5e9: OUTPUT: ¬´a‚ê§b‚ê§c‚ê§¬ª

[13:18] *** ufobat joined
[13:20] <squashable6> üçïüçïüçï  First contribution by Kaiepi++! ‚ô•

[13:27] *** warriors joined
[13:39] *** veesh_ joined
[13:40] *** veesh left
[13:40] *** veesh_ is now known as veesh

[13:42] <squashable6> üçïüçïüçï  First contribution by AlexDaniel++! ‚ô•

[13:43] <squashable6> üçï AlexDaniel++ unlabeled issue ‚ÄúEmpty #| cause compilation error‚Äù (BLOCKER): https://github.com/rakudo/rakudo/issues/3242

[13:43] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúEmpty #| cause compilation error‚Äù (tests needed): https://github.com/rakudo/rakudo/issues/3242

[13:43] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúEmpty #| cause compilation error‚Äù: https://github.com/rakudo/rakudo/issues/3242#issuecomment-543754093

[13:50] <squashable6> üçï vrurg++ closed pull request ‚ÄúPreparing for possible c‚Ä¶‚Äù: https://github.com/perl6/roast/pull/566

[13:50] <squashable6> üçïüçïüçï  First contribution by vrurg++! ‚ô•

[14:07] <nine> Oh boy...just found out where that bug in our Perl 5 code base at work is coming from that went away when I added some debug output.

[14:08] <nine> The debug statement was: warn((scalar keys %$links) . " entries in cache");

[14:08] <nine> Followed by while (my ($name, $target) = each %$links) { ... } So the bug was that the hash iterator for %$links wasn't reset between calls to that function. This makes me appreciate the cleanup that Raku as a language got all the more!

[14:12] <squashable6> üçï tbrowder++ wrote a comment on ‚ÄúEmpty #| cause compilation error‚Äù: https://github.com/rakudo/rakudo/issues/3242#issuecomment-543765926

[14:12] <squashable6> üçïüçïüçï  First contribution by tbrowder++! ‚ô•

[14:15] *** pmurias left
[14:16] *** cpan-raku left
[14:17] *** cpan-raku joined
[14:17] *** cpan-raku left
[14:17] *** cpan-raku joined
[14:21] *** pmurias joined
[14:21] <Grinnz> nine: yes each is gross don't use it ;)

[14:24] *** lucasb joined
[14:28] <El_Che> releasable6: status

[14:28] <releasable6> El_Che, Next release in ‚âà1 day and ‚âà4 hours. 6 blockers. Unknown changelog format

[14:28] <releasable6> El_Che, Details: https://gist.github.com/58dd4ad0211cd0c862365610d9430df4

[14:28] <squashable6> üçï lucasbuchala++ labeled issue ‚ÄúMMD in role not working with natives‚Äù (native types): https://github.com/rakudo/rakudo/issues/3210

[14:28] <squashable6> üçïüçïüçï  First contribution by lucasbuchala++! ‚ô•

[14:28] <squashable6> üçï lucasbuchala++ labeled issue ‚ÄúMMD in role not working with natives‚Äù (multimethods): https://github.com/rakudo/rakudo/issues/3210

[14:30] <squashable6> üçï lucasbuchala++ labeled issue ‚ÄúEmpty #| cause compilation error‚Äù (POD6): https://github.com/rakudo/rakudo/issues/3242

[14:30] <squashable6> üçï Kaiepi++ opened pull request ‚ÄúAdd tests for R#3035‚Äù: https://github.com/perl6/roast/pull/584

[14:31] <AlexDaniel> vrurg: can you take a look at https://github.com/perl6/roast/pull/584 ? :)

[14:31] <squashable6> üçï Kaiepi++ synchronize pull request ‚ÄúAdd tests for R#3035‚Äù: https://github.com/perl6/roast/pull/584

[14:32] <AlexDaniel> vrurg: it's a new file, it needs to be added to a list somewhere, right?

[14:32] <AlexDaniel> Kaiepi++ :)

[14:32] <vrurg> AlexDaniel: later tosay, I'm off for breakfast. :) But have it opened in a tab already.

[14:34] <squashable6> üçï lucasbuchala++ labeled issue ‚ÄúRegression in NativeCall, seems Role related‚Äù (NativeCall): https://github.com/rakudo/rakudo/issues/3235

[14:36] <squashable6> üçï AlexDaniel++ opened issue ‚ÄúLarge nativecall-related ecosystem fallout ‚Äù: https://github.com/rakudo/rakudo/issues/3243

[14:36] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúLarge nativecall-related ecosystem fallout ‚Äù (BLOCKER): https://github.com/rakudo/rakudo/issues/3243

[14:38] *** pmurias left
[14:38] <squashable6> üçï lucasbuchala++ labeled issue ‚ÄúMatch operator: error wi‚Ä¶‚Äù (junctions): https://github.com/rakudo/rakudo/issues/3221

[14:38] <squashable6> üçï lucasbuchala++ labeled issue ‚ÄúMatch operator: error wi‚Ä¶‚Äù (regex): https://github.com/rakudo/rakudo/issues/3221

[14:50] *** pmurias joined
[14:50] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúWeird issue in epoll module‚Äù (BLOCKER): https://github.com/rakudo/rakudo/issues/3244

[14:50] <squashable6> üçï AlexDaniel++ opened issue ‚ÄúWeird issue in epoll module‚Äù: https://github.com/rakudo/rakudo/issues/3244

[14:51] <AlexDaniel> Kaiepi: I don't know if your commits are the actual cause of this issue, but maybe you'll be able to tell: https://github.com/rakudo/rakudo/issues/3244

[14:52] *** RubioTerra joined
[14:58] *** pmurias left
[15:01] <Kaiepi> taking a look rn AlexDaniel 

[15:19] *** scimon left
[15:29] *** ufobat left
[15:38] *** scimon joined
[15:44] *** jjmerelo joined
[15:46] <Geth> ¬¶ problem-solving: JJ assigned to AlexDaniel Issue Wikipedia and Wikidata curation https://github.com/perl6/problem-solving/issues/120

[15:47] <squashable6> üçï Kaiepi++ wrote a comment on ‚ÄúWeird issue in epoll module‚Äù: https://github.com/rakudo/rakudo/issues/3244#issuecomment-543805114

[15:50] <jjmerelo> releasable6: status

[15:50] <releasable6> jjmerelo, Next release in ‚âà1 day and ‚âà3 hours. 8 blockers. Unknown changelog format

[15:50] <releasable6> jjmerelo, Details: https://gist.github.com/587eade43791192a272494ac5c3fd9fc

[15:50] <jjmerelo> squashable6: status

[15:50] <squashable6> jjmerelo, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà20 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[15:51] <squashable6> jjmerelo, Log and stats: https://gist.github.com/2d43a2068aedf3cb164d38c96652e97f

[15:51] <jjmerelo> Is the squashathon really going on?

[15:53] <AlexDaniel> yep

[15:53] <AlexDaniel> Kaiepi++ did a roast pull request :)

[15:59] <jjmerelo> AlexDaniel with testneeded, I guess

[15:59] *** scimon left
[16:01] <AlexDaniel> ‚ö† please think twice before doing disruptive changes on wikipedia and other related projects: https://github.com/perl6/problem-solving/issues/120#issuecomment-543810775

[16:08] <El_Che> Is it likely we hava release tomorrow or it more a generic timer what releasable shows? (I am preparing the addition of Centos 8 and Ubuntu 19.10 packages)

[16:08] *** jjmerelo left
[16:11] <AlexDaniel> El_Che: eh there are a few issues right now

[16:12] <AlexDaniel> El_Che: so it will likely take a bit more than that

[16:12] <El_Che> ok, good to know. I may relase 2019.07 packages for these new distros in the meantime

[16:13] <AlexDaniel> I'm optimistic, I don't think it'll take too long, just not 1 day I guess

[16:13] <El_Che> AlexDaniel: are you the release manager again?

[16:13] <AlexDaniel> El_Che: still is, unfortunately

[16:13] <AlexDaniel> kawaii is running Blin, so that's some help

[16:14] <AlexDaniel> kawaii: btw, it'd be even better if you were creating tickets for detected regressions :)

[16:14] <El_Che> That should teach you not to do a great job in your future endehavours :)

[16:14] <vrurg> AlexDaniel: isn't it time to start thinking about release branching and cherry-picking only blocker fixes?

[16:15] <AlexDaniel> vrurg: yeah, it's a common complaint, but it's not as simple

[16:16] <AlexDaniel> sure I can start a release branch like twoo weeks ahead or whatever, but then people would be sad that the commits are not making their way into the next release and start cherry-picking a bunch of stuff

[16:16] <vrurg> AlexDaniel: we make a policy on this. It's normal for a release to lag behind, I don't see a big deal here.

[16:17] <AlexDaniel> it's already hard to keep master branch sane with all the bumps and stuff, and doing the same for release branches is doable but not as great as people suggest

[16:17] <AlexDaniel> and then, whateverable doesn't even track branches, so all the tooling will suck

[16:18] <AlexDaniel> as I mentioned previously, I'll likely submit a grant proposal that'll have this covered, so maybe it'll be easier in the future

[16:18] <AlexDaniel> (I mean, making whateverable better)

[16:18] <El_Che> AlexDaniel++

[16:19] <AlexDaniel> vrurg: I also don't, but in my experience whenever we had release branches for just a few days people would keep asking if their amazing fixes will make their way into the release

[16:19] <vrurg> AlexDaniel: tooling is the only serious problem as to me. It is technical. The rest we can manage.

[16:20] <AlexDaniel> vrurg: I guess it's less of an issue now because rakudo is very stable and pretty fast too

[16:20] <AlexDaniel> so yeah, that's definitely something we can improve

[16:20] <vrurg> With a good release policy in place the answer to those requests would be: see paragraph 'WHY NO'

[16:21] <AlexDaniel> there's this thing also‚Ä¶ every new release manager used to introduce a bunch of good changes to the release process

[16:21] <vrurg> Ok, I have things to be done first place... Won't be able to answer but would try to follow.

[16:22] <AlexDaniel> and if you look at this list you'll probably see an issue :) https://github.com/rakudo/rakudo/blob/master/docs/release_guide.pod#releases-so-far

[16:22] <AlexDaniel> I'm out of steam, someone needs to take over

[16:24] *** softmoth joined
[16:28] <AlexDaniel> and people who haven't contributed much to raku or rakudo are even more welcome to this job

[16:28] <AlexDaniel> because I'd much rather not distract existing devs with release management

[16:30] <AlexDaniel> kawaii: you had something you were working on, any news? https://github.com/perl6/problem-solving/issues/54#issuecomment-507668134

[16:55] <kawaii> Sorry yes, I've been extremely distracted recently due to $real-life but I do have some long-term plans for how the "release team" should structure and organize releases in the future. I need to find some time to find my feet in the community again, as I took a backseat during the name transition to see what would happen, and contemplated my position here as I'm one of the few people who chose Perl 6 _because_ it's Perl.

[16:55] <kawaii> As opposed to people who see the name "Perl" and are dissuaded from reading further into it.

[17:02] <sena_kun> While people can feel, the language itself won't change whatever name it is under. The features are here, the ideas behind are here.

[17:06] <sena_kun> imho, names (in general) are just links, just as words are in general. once people made an agreement that, hmm, an abstract class of objects with some common traits is called "a chair", and some other imaginary class to be "a table". We, humans, use our cool telepathy powers to recognize that "Oh, so when my ears perceive those waves in the air, I should parse them and get an imaginary brain concept linked to this pattern of air waves, 

[17:06] <sena_kun> ok, I'll do that". But virtually there is no difference, as world does not need words to operate at all.

[17:07] <sena_kun> alas, the world is complex and our brains are simpler than it by definition, so our way of doing telepathy is often very LTA.

[17:10] <sena_kun> I did not intend to say something like "Your feelings are not important!" right now, only to provide a (possibly) different perspective.

[17:30] <AlexDaniel> btw those participating in the squashathon, you can also register here too: https://hacktoberfest.digitalocean.com/

[17:30] <AlexDaniel> free t-shirt, hey!

[17:30] <AlexDaniel> for everyone who makes at least 4 pull requests, as far as I can see

[17:31] <AlexDaniel> and for squashathon itself there's one camelia :)

[17:40] *** Kaiepi left
[17:45] *** benjif joined
[17:54] <japhb> AlexDaniel: What is this squashathon's subject?

[17:54] *** wildtrees joined
[17:54] *** wildtrees left
[17:55] <vrurg> japhb: writing test for "testneeded" tickets in rakudo.

[17:55] <vrurg> *writing tests

[17:56] <japhb> Oooh, that's a good one

[18:04] *** Kaiepi joined
[18:31] <brass> .raku is the new file extension right?

[18:36] <sena_kun> brass, for scripts - yes.

[18:42] *** simcop2387 left
[18:51] *** simcop2387 joined
[18:52] <AlexDaniel> brass: most tools don't know about it yet, but yeah

[18:52] *** fingolfin3 joined
[18:52] <brass> Ah ok

[18:52] <brass> Thanks!

[18:54] <brass> I'm slowly making my way through the learnxiny for raku and I'm really liking it!

[18:57] * guifa is holding off changing the filenames in modules until the 6e release

[18:57] <AlexDaniel> guifa: üëç

[19:04] <guifa> (plus I don‚Äôt think zef can handle them right now, right?)

[19:12] <AlexDaniel> guifa: it depends, I think ‚Äú.pm6‚Äù files can have any extension, but I'm not sure

[19:12] <AlexDaniel> guifa: as long as the path to them is right in META6.json

[19:13] <AlexDaniel> I guess there are other ways they won't work, but just saying that it's possible to get away with it :)

[19:14] *** ggoebel left
[19:19] *** lelf joined
[19:21] <guifa> AlexDaniel: fair.  I just wanna make sure to maximize compatibility for the time being.  Actually TBH if zef/6.e together will still accept .pm6 and such I might leave them as such until 6.f, much as I want to be the avante garde of the change over

[19:22] <guifa> Interesting that binding can‚Äôt be done for attribuets.  Is there any particular reason for that?  /me is trying to apply a proxy to an attribute

[19:24] <squashable6> üçïüçïüçï  First contribution by niner++! ‚ô•

[19:25] *** Kaiepi left
[19:26] *** Kaiepi joined
[19:27] *** lelf left
[19:27] *** lelf joined
[19:29] <tbrowder> i'm asking those who used "stacked" leading declarator blocks, a sequence of lines before a sub like"("#| some comment

[19:30] <tbrowder> like: #| comment 1; #| comment 2;... how you would like that to be rendered

[19:31] <guifa> tbrowder: I asked that actually just yesterday or maybe it was day before.  timotimo said that the presumption is two oneliners like that should be joined

[19:31] <tbrowder> at the moment the sequence is concatenated into one normalized string

[19:31] <guifa> #| Hello, my

[19:31] <guifa> #| name is 

[19:31] <guifa> #| Camelia

[19:32] <guifa> sub foo ‚Ä¶

[19:32] <guifa> The whole thing would be ‚ÄúHello, my name is Camelia‚Äù and get attached to sub foo

[19:32] <squashable6> üçï niner++ wrote a comment on ‚ÄúRegression in NativeCall, seems Role related‚Äù: https://github.com/rakudo/rakudo/issues/3235#issuecomment-543903663

[19:32] <squashable6> üçï niner++ closed issue ‚ÄúRegression in NativeCall, seems Role related‚Äù: https://github.com/rakudo/rakudo/issues/3235

[19:32] <tbrowder> but i woulld like to see my text as is, newlines and spaces as i entered them

[19:34] <tbrowder> at the moment, you can use the #|( .... ) form to do the same thing, one string

[19:34] <guifa> Based on some other systems I‚Äôve seen, I think the optimal would be to assume that if the line starts on the same indent level, consider it a continuation of the previous.  If it has a higher space indent, then new line + indent X spaces

[19:35] <guifa> Because thinking about how I‚Äôve done those style comments in my code, I definitely have some indented stuff that should be preserved.

[19:35] <tbrowder> my proposal is to modify the "stack" of #| lines to keep the text as is, not stringify it into one line

[19:37] <tbrowder> guifa: the problem with the fancier method you're suggesting is grammar complexity. we already have good pod elements to do that kind of thing.

[19:39] <tbrowder> i have been able to implement my proposal but don't want to waste any more time if the idea is shot down

[19:45] <guifa> tbrowder: i‚Äôm not opposed to yours.  I don‚Äôt think either one is inherintely better or worse, I‚Äôd just be curious to see how most people use them and would interpret the typical uses (that‚Äôs an real curiousity, in case textchat isn‚Äôt conveying it well).

[19:45] <guifa> Or, thinking outloud, perhaps since the #|( ‚Ä¶¬†) ‚Äúwill not translate to a multi-line display‚Äù, we could say that a sequence of #| over various lines by default implies newlines, but have ¬¨ or something force join it, and allow \n or a double newline imply a newline for the #|( ‚Ä¶¬†) syntax ?

[19:46] *** wildtrees joined
[19:48] <tbrowder> guifa: we're on the same page, but in any case, at present, the single line is all you can get. my simple proposal gives you a choice and provides a path to future improvements.

[19:59] <tbrowder> by the way, as the code is now, a #|newline is just an ordinary comment that is NOT added to previous or later #| leading declarator comment lines

[20:00] <guifa> ^^ so since it‚Äôs not combining them, this is a great time to decide on how to interpret it :-)

[20:01] *** xkr47 joined
[20:02] <tbrowder> i agree!

[20:02] <xkr47> hi!

[20:02] <guifa> hi xkr47!

[20:02] <xkr47> "Hi, I'm xkr47 and I'ma perl5 addict"

[20:02] <xkr47> (does that get me kickbanned? :)

[20:03] <guifa> Not at all!

[20:03] <tbrowder> xkr47: hi, no, all are welcome

[20:04] <xkr47> thanks!

[20:05] <Grinnz> and indeed, it's less confusing now ;)

[20:05] <tbrowder> guifa: i'll see if i can mod my impl to recognize intervening newlines,

[20:05] *** pmurias joined
[20:05] <tbrowder>  as a first ste

[20:05] <tbrowder> *step

[20:10] <tbrowder> guifa: see rakudo issue #2332 for my original proposal. i don't think i will attempt that given what i've seen after trying to mod the actual code for that area.

[20:11] <xkr47> anyone tried using the graal vm with raku?

[20:12] <guifa> tbrowder: definitely will take a look at it and drop some comments over there.  Have to get some tests and papers graded but will probably do that afterwards.  

[20:15] <pmurias> xkr47: currently working on a truffle/graalvm backend for rakudo

[20:15] <tellable6> 2019-10-17T22:24:18Z #raku-dev <MasterDuke> pmurias: nice. i see a lot of graalvm in the news and i hope to do some more after i finish up this libtommath work

[20:15] <guifa> pmurias: nice!

[20:15] <pmurias> xkr47: it's in very early stages currently

[20:16] <pmurias> but the truffle design seems like a perfect fit for Raku

[20:16] <Geth> ¬¶ doc/document-resources: a24093fc8c | Altai-man++ | doc/Language/modules.pod6

[20:16] <Geth> ¬¶ doc/document-resources: Remove redundant newline

[20:16] <Geth> ¬¶ doc/document-resources: review: https://github.com/perl6/doc/commit/a24093fc8c

[20:16] <Geth> ¬¶ doc/document-resources: 09016b78a0 | Altai-man++ | doc/Language/variables.pod6

[20:16] <Geth> ¬¶ doc/document-resources: Document %?RESOURCES

[20:16] <Geth> ¬¶ doc/document-resources: review: https://github.com/perl6/doc/commit/09016b78a0

[20:17] <Geth> ¬¶ problem-solving: JJ assigned to jnthn Issue Check MoarVM out using OSS-fuzz https://github.com/perl6/problem-solving/issues/121

[20:18] <Geth> ¬¶ doc: Altai-man++ created pull request #3065: Document resources

[20:18] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/3065

[20:24] <xkr47> pmurias, cool!

[20:28] <xkr47> pmurias, any links? :)

[20:29] *** pmurias left
[20:30] <squashable6> üçï Altai-man++ opened pull request ‚ÄúTest Parameter subclassing‚Äù: https://github.com/perl6/roast/pull/585

[20:30] <squashable6> üçïüçïüçï  First contribution by Altai-man++! ‚ô•

[20:31] *** pmurias joined
[20:38] <squashable6> üçï Altai-man++ synchronize pull request ‚ÄúTest Parameter subclassing‚Äù: https://github.com/perl6/roast/pull/585

[20:40] <squashable6> üçï Altai-man++ opened pull request ‚ÄúTest runtime-created classes being attributes‚Äù: https://github.com/perl6/roast/pull/586

[20:41] <pmurias> xkr47: https://github.com/perl6/nqp/tree/truffle - truffle branch in NQP

[20:54] <squashable6> üçï Altai-man++ opened pull request ‚ÄúTest rakudo-specific warning for shape specifier‚Äù: https://github.com/rakudo/rakudo/pull/3245

[20:54] <squashable6> üçï Altai-man++ wrote a comment on ‚ÄúDifference between Int @a and @a[Int]‚Äù: https://github.com/rakudo/rakudo/issues/2554#issuecomment-543941516

[20:59] *** cj joined
[20:59] <cj> hey folks

[20:59] <cj> what's the suggested install path for raku?

[20:59] <cj> I want to install it and see if I can translate my p5 NLP parser to raku

[21:00] <sena_kun> cj, hi! are you on gnu/linux?

[21:00] <cj> almost always

[21:01] *** Kaiepi left
[21:01] <sena_kun> https://github.com/nxadm/rakudo-pkg#introduction

[21:01] <xkr47> pmurias, created a PR :)

[21:01] <cj> danke

[21:02] *** Kaiepi joined
[21:02] <sena_kun> cj, you are welcome. alternatively you can use your distro packages if any (these tend to be outdated sometimes) or less "we approve this" options.

[21:05] <squashable6> üçï Altai-man++ opened pull request ‚ÄúTest hyperop results in a slip‚Äù: https://github.com/perl6/roast/pull/587

[21:07] <Geth> ¬¶ doc/document-resources: 44f2cf489c | Altai-man++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[21:07] <Geth> ¬¶ doc/document-resources: Thinko

[21:07] <Geth> ¬¶ doc/document-resources: review: https://github.com/perl6/doc/commit/44f2cf489c

[21:08] *** sena_kun left
[21:09] <Doc_Holliwood> rich syntax has it's drawbacks. took me a while to figure this out: $app.all-files>.Array>.Str , which should have been $app.all-files.Array>>.Str of course

[21:10] <Doc_Holliwood> and then you sit there and wonder why your value 3 levels down the stack is True instead of something to iterate on =)

[21:10] <simcop2387> this place is slowly filling up, congrats on the new name and all.

[21:16] *** sena_kun joined
[21:16] <squashable6> üçï Altai-man++ edited pull request ‚ÄúTest hyperop results in a slip‚Äù: https://github.com/perl6/roast/pull/587

[21:17] <squashable6> üçï Altai-man++ synchronize pull request ‚ÄúTest hyperop results in a slip‚Äù: https://github.com/perl6/roast/pull/587

[21:18] <squashable6> üçï Altai-man++ wrote a comment on ‚ÄúAssignment to hash via array subscript fails‚Äù: https://github.com/rakudo/rakudo/issues/2490#issuecomment-543951666

[21:19] <simcop2387> i'm going to upgrade the install of raku on perlbot (and also probably setup a rakubot) this weekend, i think I ask this every time, but are there any particular libraries or modules that you folks would like added (or removed) when I do so?  only real restriction is that the pastebin and eval can't do network traffic

[21:20] <simcop2387> will also ask that in #perl6 too

[21:20] <xinming_> IIRC, there is a sweet function to generate the random string with template, which is like    given template like  "yyyyyy=xxxxxx"    then, we replace yyyy and xxxx with random string, Do I remember wrong?

[21:21] <xinming_> I now finish it with @list.pick(15) to do the trick

[21:27] *** k-man left
[21:29] *** softmoth left
[21:48] *** delimited joined
[21:54] <cj> fwiw, https://salsa.debian.org/perl6-team/rakudo.git is what I was looking for

[22:08] <lelf> How do you go from 1...3 to (1, (1,2), (1,2,3)) ?

[22:09] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúLarge nativecall-related ecosystem fallout ‚Äù: https://github.com/rakudo/rakudo/issues/3243#issuecomment-543974499

[22:09] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúLarge nativecall-related ecosystem fallout ‚Äù: https://github.com/rakudo/rakudo/issues/3243

[22:12] <AlexDaniel> m: say [\,] 1...3

[22:12] <camelia> rakudo-moar e45bb3418: OUTPUT: ¬´((1) (1 2) (1 2 3))‚ê§¬ª

[22:12] <AlexDaniel> lelf: what about this?

[22:12] *** ggoebel joined
[22:13] <AlexDaniel> lelf: see https://docs.perl6.org/language/operators#Reduction_metaoperators

[22:16] *** sena_kun left
[22:17] *** ggoebel left
[22:18] <squashable6> üçï AlexDaniel++ opened pull request ‚ÄúAdd support for .rakumod extension‚Äù: https://github.com/rakudo/rakudo/pull/3246

[22:19] <lelf> AlexDaniel: thanks üëç

[22:19] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúAdd support for .rakumod extension‚Äù: https://github.com/rakudo/rakudo/pull/3246#issuecomment-543978836

[22:31] *** delimited left
[22:38] *** xinming_ left
[22:39] *** xinming_ joined
[22:48] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúAdd support for .rakumod extension‚Äù: https://github.com/rakudo/rakudo/pull/3246#issuecomment-543990606

[22:54] *** pmurias left
[23:02] <squashable6> üçï jnthn++ wrote a comment on ‚ÄúAdd support for .rakumod extension‚Äù: https://github.com/rakudo/rakudo/pull/3246#issuecomment-543995739

[23:02] <squashable6> üçïüçïüçï  First contribution by jnthn++! ‚ô•

[23:17] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúAdd support for .rakumod extension‚Äù: https://github.com/rakudo/rakudo/pull/3246#issuecomment-544000307

[23:18] <mla> im interesting in using raku to interface with a static library i use. it's build system generates a .a file and .h headers, is there a way to use NativeCall with static libs? NativeCall seems to be expecting an .so only

[23:23] <Grinnz> complete educated guess, but probably not; FFI::Platypus in perl5 requires the dynamic lib, while building XS works with either (static preferred)

[23:25] <jnthn> mla: I'm pretty sure you'd need to first link it into a .so. It's not so much nativecall itself, as that you can't dlopen (the OS-provided thing nativecall depends on for library loading) the static library.

[23:26] <mla> ah got it thanks, i guess my best bet is to figure out if i can somehow generate a .so

[23:26] <Grinnz> i use the term "educated" lightly; mostly i've just thrown myself at ffi a lot and some things stuck :P

[23:26] <mla> XS sounds interesting too

[23:27] <Grinnz> that's a perl thing, not raku

[23:27] <mla> but perl6 -> inline -> xs -> c seems like a lot

[23:27] <mla> yeah

[23:27] <jnthn> You might also consider https://github.com/retupmoca/P6-LibraryMake

[23:27] <jnthn> Which could well help getting the .a -> .so step integrated into the Raku module install workflow

[23:32] <mla> i see, makes sense via .a to .so via p6librarymake, probably a bit over my head atm being a c intermediate and p6 beginner but will take a try if i can't just generate a so from the source lib

[23:32] <mla> thx for the help

[23:33] <squashable6> üçï jnthn++ wrote a comment on ‚ÄúAdd support for .rakumod extension‚Äù: https://github.com/rakudo/rakudo/pull/3246#issuecomment-544006217

[23:36] *** warriors left
[23:39] <squashable6> üçï ugexe++ opened issue ‚ÄúWindows NativeCall regression ‚Äù: https://github.com/rakudo/rakudo/issues/3247

[23:39] <squashable6> üçïüçïüçï  First contribution by ugexe++! ‚ô•

[23:39] <squashable6> üçï ugexe++ labeled issue ‚ÄúWindows NativeCall regression ‚Äù (regression): https://github.com/rakudo/rakudo/issues/3247

[23:42] <squashable6> üçï ugexe++ wrote a comment on ‚ÄúWindows NativeCall regression ‚Äù: https://github.com/rakudo/rakudo/issues/3247#issuecomment-544009342

[23:45] <squashable6> üçï vrurg++ wrote a comment on ‚ÄúAdd support for .rakumod extension‚Äù: https://github.com/rakudo/rakudo/pull/3246#issuecomment-544010563

[23:48] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúWindows NativeCall regression ‚Äù (BLOCKER): https://github.com/rakudo/rakudo/issues/3247

[23:50] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúWindows NativeCall regression ‚Äù: https://github.com/rakudo/rakudo/issues/3247#issuecomment-544012086

[23:56] <squashable6> üçï jnthn++ wrote a comment on ‚ÄúAdd support for .rakumod extension‚Äù: https://github.com/rakudo/rakudo/pull/3246#issuecomment-544014238

