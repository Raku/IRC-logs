[00:11] *** guifa2 joined
[00:18] *** tyil[m] left
[00:18] *** tbrowder left
[00:19] *** tyil[m] joined
[00:24] *** leonardus joined
[00:24] *** tbrowder joined
[00:24] *** leonardus left
[00:24] *** leonardus joined
[00:25] *** leonardus left
[00:27] *** leonardus joined
[00:30] *** pmurias left
[00:32] *** warriors left
[00:53] *** wildtrees left
[01:09] *** ggoebel joined
[01:14] *** Xliff left
[01:37] *** ggoebel left
[03:04] *** guifa2 left
[03:50] *** rindolf left
[03:55] *** marcusr left
[03:55] *** marcusr joined
[03:55] *** marcusr left
[03:55] *** marcusr joined
[04:15] *** marcusr left
[04:15] *** marcusr joined
[04:17] *** guifa2 joined
[04:19] *** marcusr left
[04:19] *** marcusr joined
[04:19] *** marcusr left
[04:19] *** marcusr joined
[04:25] *** guifa2 left
[04:49] *** ggoebel joined
[05:01] *** guifa2 joined
[05:03] *** guifa2 left
[05:03] *** b2gills left
[05:05] *** b2gills joined
[05:11] *** guifa2 joined
[05:33] *** AlexDaniel left
[06:02] *** guifa2 left
[06:11] *** wamba joined
[06:14] *** jmerelo joined
[06:14] <jmerelo> releasable6: status

[06:14] <releasable6> jmerelo, Next release will happen when it's ready. There are no known blockers. 248 out of 451 commits logged (⚠ 9 warnings)

[06:14] <releasable6> jmerelo, Details: https://gist.github.com/60f8b0e33379f96a273a9f6b4ded115f

[06:15] *** mspo left
[06:18] *** xinming_ left
[06:19] *** xinming_ joined
[06:38] *** stoned75 left
[07:20] *** wamba left
[07:27] *** kensanata joined
[07:31] *** ggoebel left
[07:33] *** jmerelo left
[08:03] *** wamba joined
[08:07] *** xinming_ left
[08:08] *** sena_kun joined
[08:08] *** xinming_ joined
[08:18] *** Doc_Holliwould joined
[08:21] *** Doc_Holliwood left
[08:21] *** holli joined
[08:24] *** Doc_Holliwould left
[08:25] *** Doc_Holliwould joined
[08:27] *** holli left
[08:28] *** Doc_Holliwood joined
[08:31] *** Doc_Holliwould left
[08:32] *** Doc_Holliwould joined
[08:35] *** Doc_Holliwood left
[08:35] *** holli joined
[08:38] *** Doc_Holliwould left
[08:39] *** Doc_Holliwood joined
[08:42] *** holli left
[08:42] *** Doc_Holliwould joined
[08:45] *** Doc_Holliwood left
[08:46] *** Doc_Holliwood joined
[08:49] *** Doc_Holliwould left
[08:49] *** maettu joined
[08:49] *** Doc_Holliwould joined
[08:52] *** Doc_Holliwood left
[08:53] *** Doc_Holliwood joined
[08:55] *** Doc_Holliwould left
[08:56] *** Doc_Holliwould joined
[08:58] *** wamba left
[08:59] *** Doc_Holliwood left
[09:00] *** Doc_Holliwood joined
[09:03] *** Doc_Holliwould left
[09:03] *** Doc_Holliwould joined
[09:03] *** wamba joined
[09:05] *** wamba left
[09:06] *** Doc_Holliwood left
[09:07] *** Doc_Holliwood joined
[09:10] *** holli joined
[09:10] *** Doc_Holliwould left
[09:13] *** Doc_Holliwood left
[09:30] <El_Che> hi jmerelo

[09:32] <El_Che> weekly: new rakudo-pkg support (and packages) for new releases: ubuntu 19.10, Fedora 31, centos 8

[09:32] <notable6> El_Che, Noted! (weekly)

[09:44] *** Altai-man_ joined
[09:46] *** sena_kun left
[09:53] *** Doc_Holliwood joined
[09:55] *** holli left
[09:57] *** xinming_ left
[09:57] *** xinming_ joined
[10:07] <xinming_> SmokeMachine: How do we do soemthing like    UPDATE SET table column = (column + 1)     Just passing the SQL  "column + 1" directly?

[10:13] *** AlexDaniel joined
[10:13] *** AlexDaniel left
[10:13] *** AlexDaniel joined
[10:34] <SmokeMachine> Model.^all.update: { .column += 1 }

[10:42] *** Doc_Holliwould joined
[10:46] *** Doc_Holliwood left
[10:51] <xinming_> SmokeMachine: Do you plan to add something like  passing SCALAR ref which is like perl5 to underline db?  in DBIx::Class,   people can pass literal sql directly.

[10:52] <SmokeMachine> xinming_: I've never though about that... but I'm not sure if I like it...

[10:54] <Ulti> imho you're better off with a Text or SQL object for that sort of thing

[10:54] <Ulti> rather than relying on hacky implied behaviour from something utterly unrelated like pass by reference

[10:55] <Ulti> plus you can write a slang or something to hijack `` quoting to construct that object, thats what I have in my bioinformatics libraries where strings in `GCTA` get promoted to bio sequence objects

[11:00] <SmokeMachine> Ulti: yes, that would make more sense...

[11:06] <xinming_> m: role HashStr { method Str () { die "sdf"; } }; my %h := { :a, :b } does HashStr; "{%h}".say;

[11:06] <camelia> rakudo-moar 9f433da0d: OUTPUT: «sdf␤  in method Str at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[11:06] <xinming_> m: role HashStr { method Str () { die "sdf"; } }; my %h = { :a, :b } does HashStr; "{%h}".say;

[11:06] <camelia> rakudo-moar 9f433da0d: OUTPUT: «a       True␤b  True␤»

[11:06] <xinming_> In this example, How can we keep the "HashStr" role accross passing?

[11:07] <jnthn> Bind, not assign.

[11:07] <jnthn> Oh, you did bind

[11:07] <xinming_> SmokeMachine: I don't like it either, But it does save time when we needed.

[11:07] <jnthn> Well, you can't, because assignment is a copying operation

[11:07] <jnthn> e.g. it iterates the RHS

[11:07] <jnthn> And copies into an (already existing) LHS

[11:07] <xinming_> jnthn: I do did bind, What I mean is, How can we keep the "HashStr" role when we passing that object around.

[11:08] <jnthn> xinming_: If you mean passing it to another routine, then it will be retained, because arguments are bound (unless `is copy`)

[11:08] <xinming_> Or, We can set the "Hash" class when we declare the hash object.

[11:09] <xinming_> What I mean is, soemthing like,   my %h is HashStr = { ... };

[11:09] <jnthn> Oh, you can do that

[11:09] <jnthn> m: role HashStr { method Str () { die "sdf"; } }; my %h does HashStr = { :a, :b }; say %h.Str

[11:09] <camelia> rakudo-moar 9f433da0d: OUTPUT: «Potential difficulties:␤    Useless use of hash composer on right side of hash assignment; did you mean := instead?␤    at <tmp>:1␤    ------> 3f"; } }; my %h does HashStr = { :a, :b }7⏏5; say %h.Str␤sdf␤  in method Str at <tmp> line 1…»

[11:10] <jnthn> m: role HashStr { method Str () { die "sdf"; } }; my %h does HashStr =  :a, :b; say %h.Str

[11:10] <camelia> rakudo-moar 9f433da0d: OUTPUT: «sdf␤  in method Str at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[11:10] <jnthn> Like that.

[11:11] <Doc_Holliwould> m: role HashStr { method Str () { die "sdf"; } }; my %h = :a, :b; say (%h but HashStr).Str

[11:11] <camelia> rakudo-moar 9f433da0d: OUTPUT: «sdf␤  in method Str at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[11:11] <xinming_> But that results error

[11:11] <Doc_Holliwould> or like that :)

[11:11] <Doc_Holliwould> m: role HashStr { method Str () { say "sdf"; } }; my %h = :a, :b; say (%h but HashStr).Str

[11:11] <camelia> rakudo-moar 9f433da0d: OUTPUT: «sdf␤True␤»

[11:11] <Doc_Holliwould> because of the `die`

[11:11] <xinming_> jnthn: The my %h does HashStr is what I want, It's just I failed to try that.

[11:13] <jnthn> OK, cool :)

[11:15] <xinming_> m: role HashStr { method Str () { die "sdf"; } }; my %h does HashStr := { :a, :b }; say %h.Str;

[11:15] <camelia> rakudo-moar 9f433da0d: OUTPUT: «a       True␤b  True␤»

[11:15] <xinming_> This example worked, Is it because, the %h with HashStr role is bound to   { :a, :b }?

[11:18] *** wamba joined
[11:18] <xinming_> I think so.

[11:18] <jnthn> Yes, it's because you totally throw away the object on the left in that case.

[11:44] *** wamba left
[11:45] *** sena_kun joined
[11:46] *** Altai-man_ left
[11:48] *** MasterDuke left
[12:00] <ZzZombo> m: my $a := 1;my $b := $a;$a := 2;dd $a;dd $b

[12:00] <camelia> rakudo-moar 9f433da0d: OUTPUT: «2␤1␤»

[12:00] <ZzZombo> m: my $a := 1;my $b := $a;$a = 2;dd $a;dd $b

[12:00] <camelia> rakudo-moar 9f433da0d: OUTPUT: «Cannot assign to an immutable value␤  in block <unit> at <tmp> line 1␤␤»

[12:01] <tyil> .tell jmerelo can you accept my request to join the outreach ML with my personal email address?

[12:01] <tellable6> tyil, I'll pass your message to jmerelo

[12:05] *** joule joined
[12:13] <xkr47> installing rakudo star 2019.03!

[12:13] <xkr47> I want to see if I can replace my bison/yacc time calculator with something new in 30 mins :)

[12:15] <xkr47> am I too 1990 if I use emacs to code raku? does any editor have syntax hilighting yet?

[12:19] <xkr47> ===> Testing: LWP::Simple:ver<0.106>:auth<github:perl6>

[12:19] <xkr47> # Failed test 'Found pattern in downloaded file'

[12:29] * xkr47 discovers p6doc

[12:30] *** guifa2 joined
[12:31] <xkr47> oo coloured parsing erros

[12:32] *** leah2 joined
[12:44] *** marcusr left
[12:48] <xkr47> nope, did not manage to do that in 30 minutes :D

[12:48] <xkr47> but it parses numbers, timestamps and variable names now :)

[12:56] <xkr47> sooo my recursive grammar is eating 100%

[12:59] <kensanata> xkr47: M-x list-packages still lists perl6-mode and flycheck-perl6...

[13:00] <xkr47> I seem to lack the gpg sig to verify the list of packages :P

[13:00] <xkr47> kensanata, thanks

[13:00] *** marcusr joined
[13:01] <xkr47> 10 mintues later it parses "5 * (a - 3) / -foo"

[13:03] *** ggoebel joined
[13:08] *** ZzZombo_ joined
[13:10] *** ZzZombo left
[13:10] *** ZzZombo_ is now known as ZzZombo

[13:11] <kensanata> xkr47: If you haven't updated in a few months, you will have to download the keyring manually. Did you figure it out?

[13:11] <xkr47> no, I'm going black & white for now :D

[13:11] <kensanata> xkr47: Hah. Also feel free to join #emacs... :)

[13:11] <xkr47> ;)

[13:12] <xkr47> I've been using emacs for over 20 years now, but I never used M-x list-packages *blush*

[13:12] <kensanata> I made the change not too long ago. :D

[13:19] <xkr47> wow @ '%' modifier in regexes

[13:19] <xkr47> it's like BNF 2.0! :D :D

[13:24] <xkr47> and now my grammar recognizes a = b = 5 + c

[13:44] *** Altai-man_ joined
[13:46] *** sena_kun left
[13:46] *** Altai-man_ left
[13:47] *** sena_kun joined
[13:56] <SmokeMachine> xinming_: I was wrong… this is the way of doing that… but infix:<+> is not implemented yet and doing that without a WHERE  clause is giving an error… both will be fixed tonight... https://www.irccloud.com/pastebin/bnZOPXOs/

[13:57] <Kaiepi> releasable6, status

[13:57] <releasable6> Kaiepi, Next release will happen when it's ready. There are no known blockers. 248 out of 451 commits logged (⚠ 9 warnings)

[13:57] <releasable6> Kaiepi, Details: https://gist.github.com/a2c16afa8c21d07d3986dc69bdee6fcf

[13:59] <xkr47> kensanata, https://elpa.gnu.org/packages/gnu-elpa-keyring-update.html

[14:01] <xkr47> but still can't find those

[14:04] <xkr47> raku should have called the regex operators "ahead" and "behind", not "before" and "after"

[14:12] <xkr47> soo somebody introduce me to what these "｢" "｣" things are

[14:13] <xkr47> .. shown when I "say" things

[14:13] <[Coke]> u: ｢

[14:13] <xkr47> from regex captures

[14:13] <unicodable6> [Coke], U+FF62 HALFWIDTH LEFT CORNER BRACKET [Ps] (｢)

[14:14] <[Coke]> basically, "fancy quotes"

[14:14] <[Coke]> m: say ｢ this is a {3+2} quoting construct ｣

[14:14] <camelia> rakudo-moar 9f433da0d: OUTPUT: « this is a {3+2} quoting construct ␤»

[14:14] <xkr47> yes.. so are they emitted from regex capture objects or

[14:15] <[Coke]> it's the quote we happened to choose when stringifying matches.

[14:15] <xkr47> great

[14:15] <xkr47> so "are" matches also strings?

[14:15] *** LtStaffel joined
[14:15] <[Coke]> matches are objects.

[14:16] <[Coke]> one sec.

[14:16] <xkr47> okay, how do I use them as strings without getting the quotes? :)

[14:16] <[Coke]> https://docs.perl6.org/type/Match

[14:17] <xkr47> 🙇‍♂️

[14:17] <sena_kun> xkr47, just stringify, `.Str` or `~`

[14:17] <sena_kun> m: say ('1234' ~~ /\d/).Str;

[14:17] <camelia> rakudo-moar 9f433da0d: OUTPUT: «1␤»

[14:17] <sena_kun> m: say ~('1234' ~~ /\d/)

[14:17] <camelia> rakudo-moar 9f433da0d: OUTPUT: «1␤»

[14:17] <LtStaffel> Hello all, I'm having trouble with making an HTTP get request with Cro. Using this code https://pastebin.com/LDGTen54 devours my system's entire 8GB of memory in a minute or less. Making a head request works, and removing the await keyword gives the proper promise. What should I do to test further?

[14:18] <[Coke]> m: '1234' ~~ /\d/ ; say $/; dd $/ ; say ~$/

[14:18] <camelia> rakudo-moar 9f433da0d: OUTPUT: «｢1｣␤Match $/ = Match.new(list => (), hash => Map.new(()), pos => 1, from => 0, made => Any, orig => "1234")␤1␤»

[14:18] <xkr47> ooh dd, my new friend

[14:18] <sena_kun> LtStaffel, can you grab the latest version from the cro-http repo and try with it?

[14:19] <xkr47> soo ~ makes a string out of it without the fancy quotes?

[14:19] <[Coke]> ^^ shows the .gist of a match, a data dump, and then the stringified version, off the implicit match object. sena_kun's show it against the in place match.

[14:19] <sena_kun> zef install https://github.com/croservices/cro-http.git

[14:19] <[Coke]> xkr47: the fancy quotes are part of the .gist method.

[14:19] <LtStaffel> sena_kun: Sure, be right back

[14:19] <[Coke]> it's intended to make a human readable output.

[14:19] *** LtStaffel left
[14:20] <[Coke]> the .Str (or ~ prefix) return the string match itself. yes.

[14:20] <xkr47> ok will understand that later :)

[14:20] <[Coke]> er, the "matched string" is a clearer way to say that.

[14:20] <xkr47> I was ref to ".gist"

[14:21] <[Coke]> say uses .gist, which isn't necessarily the same as .Str

[14:21] <[Coke]> m: my $a = 1234; say $a; say ~$a;

[14:21] <camelia> rakudo-moar 9f433da0d: OUTPUT: «1234␤1234␤»

[14:21] *** LtStaffel joined
[14:22] <[Coke]> m: my $a = ^1000; say $a; say ~$a;

[14:22] <camelia> rakudo-moar 9f433da0d: OUTPUT: «^1000␤0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 8…»

[14:22] <[Coke]> ^^ for simple stuff, it's usually teh same. for objects, it may not be.

[14:22] <LtStaffel> sena_kun: What was the command again?

[14:22] <sena_kun> zef install https://github.com/croservices/cro-http.git

[14:22] <sena_kun> LtStaffel, ^?

[14:22] <sena_kun> should install latest

[14:23] <LtStaffel> Thanks

[14:23] <sena_kun> jnthn promises a new release with some very important fixes (that might eat RAM too) included this or next week

[14:24] <xkr47> [Coke] so raku still retaining some of that mysteriousness of perl5 huh :D

[14:25] <LtStaffel> sena_kun it's testing, I'll let you know as soon as I can run the script again

[14:25] * xkr47 listens to https://yagya.bandcamp.com/track/the-phantom-of-us while learning raku.. good times :)

[14:26] *** huf joined
[14:29] <LtStaffel> sena_kun that works now, thanks! Any idea what more specifically was the issue?

[14:29] *** guifa2 left
[14:29] *** guifa left
[14:29] <LtStaffel> zef complained about it cro already being installed, so it didn't seem to think it was out of date

[14:30] <sena_kun> LtStaffel, there was a bug, it was fixed, but not yet "released"... no version bump, so zef thinks it's the same version, but when you -force it, new commits are working and all's good

[14:30] <LtStaffel> ah okay

[14:45] <xkr47> what does ":D" in documentation mean, "defined" ? 

[14:46] <xkr47> [Coke], just found ".gist" in https://docs.perl6.org/type/Mu :)

[14:47] <sena_kun> xkr47, `defined` is a method (and may be used as a routine too), while `:D` sets a type constraint

[14:47] <sena_kun> "something that is a value, not a type object", while `:U` is "undefined" == "something that is a type object, not a value", and omitting it means both.

[14:48] <xkr47> `fail` apparently also is undefined

[14:50] <xkr47> return types døn't seem to specify constraints?

[14:54] <sena_kun> how so?

[14:55] *** holli joined
[14:59] *** Doc_Holliwould left
[14:59] *** Doc_Holliwould joined
[15:02] *** holli left
[15:02] *** Doc_Holliwood joined
[15:03] *** LtStaffel left
[15:05] *** Doc_Holliwould left
[15:06] *** Doc_Holliwould joined
[15:08] *** Doc_Holliwood left
[15:09] *** Doc_Holliwood joined
[15:12] *** patrickb joined
[15:12] *** Doc_Holliwould left
[15:13] *** Doc_Holliwould joined
[15:13] <patrickb> LtStaffel: Can you document your findings here? -> https://github.com/rakudo/rakudo/issues/1501

[15:16] *** Doc_Holliwood left
[15:16] *** Doc_Holliwood joined
[15:19] *** cpan-raku left
[15:19] *** holli joined
[15:19] *** cpan-raku joined
[15:19] *** cpan-raku left
[15:19] *** cpan-raku joined
[15:20] *** Doc_Holliwould left
[15:21] *** Wahnburger joined
[15:22] <Wahnburger> Hello, I just installed rakudo on a windows server .. I copied a script which is running well on a openbsd box..on windows Ill get this error:  Server certificate verification failed: unable to get local issuer certificate 

[15:22] *** Doc_Holliwood left
[15:23] <Wahnburger> i am using Cro to post a request to get a bearer token.. can someone tell how to look to get it fixed?

[15:25] <Wahnburger> or is there a way to disable the certificate verification?

[15:29] <lizmat> Wahnburger: perhaps someone on the #cro channel would have a solution more readily availlable

[15:34] <Wahnburger> most of the guys are also here :)

[15:35] <Wahnburger> i am wondering whether i need to tell perl6 something about ssl?..path ..something like that?

[15:37] <lizmat> sorry, da bin ich überfragt  :-(

[15:43] *** Altai-man_ joined
[15:46] *** sena_kun left
[15:52] <Wahnburger> same thing on windows7 :/

[15:52] <Wahnburger> wtf

[15:53] <Wahnburger> this line wont work: my $resp = await Cro::HTTP::Client.get('https://www.perl6.org/');  after a normal installation of perl6 on windows 

[15:54] *** LtStaffel joined
[15:57] *** japhb left
[16:01] <xkr47> Wahnburger, what are the symptoms?

[16:02] <xkr47> (I have no idea of the answer, just helping you bring forth the needed details for others to help :)

[16:03] <Wahnburger> symptom is "Server certificate verification failed: unable to get local issuer certificate "

[16:04] <Wahnburger> stuff like curl is working well wit hhttpS

[16:04] <timotimo> i feel like this could go on stackoverflow, i think i just recently saw someone else ask

[16:35] *** kensanata left
[16:35] <Wahnburger> did it: https://stackoverflow.com/questions/58647713/problem-with-perl6-als-ssl-on-windows-machine

[16:51] *** patrickb left
[16:55] <lizmat> Wahnburger: changed tag to raku, as that is what we're moving to  :-)

[17:00] <Wahnburger> thx :)

[17:03] *** Ekho left
[17:04] *** Ekho joined
[17:08] <Wahnburger> that drives me crazy...other httpS stuff is working

[17:08] *** Ekho left
[17:10] *** Ekho joined
[17:11] *** Ekho left
[17:12] *** hythm joined
[17:13] *** Ekho joined
[17:16] *** japhb joined
[17:20] <tony-o> Wahnburger: does this command fail or pass: openssl s_client -connect httpbin.org:443

[17:21] <tony-o> does it connect and you can type `GET /get?x=42 HTTP/1.0` followed by two enter key strokes ?

[17:21] *** Ekho left
[17:28] <Wahnburger> yep

[17:30] *** Manifest0 left
[17:30] *** Ekho joined
[17:30] <Wahnburger> so it does connet..shows the certificate (validation OK) etc..

[17:45] *** sena_kun joined
[17:46] *** Altai-man_ left
[17:51] *** chloekek joined
[18:00] *** Wahnburger left
[18:07] *** wildtrees joined
[18:16] *** hythm left
[18:20] *** lucasb joined
[18:22] *** guifa2 joined
[18:26] *** Manifest0 joined
[18:31] *** tellable6 left
[18:34] *** tellable6 joined
[18:38] *** pmurias joined
[18:38] <SmokeMachine> xinming_: done...

[18:48] *** stoned75 joined
[18:55] *** stoned75 left
[19:12] *** LtStaffel left
[19:21] *** stoned75 joined
[19:22] *** stoned75 left
[19:23] *** stoned75 joined
[19:23] *** stoned75 left
[19:28] *** wildtrees left
[19:30] *** MasterDuke joined
[19:32] *** stoned75 joined
[19:39] <holli> Wahnburger: Did you force install IO::Socket::Async::SSL?

[19:39] <holli> I'm just wondering because its tests fail on my Win10 box

[19:43] *** Altai-man_ joined
[19:46] *** sena_kun left
[20:05] <SmokeMachine> just 1 more test to Red:api<2>

[20:06] <SmokeMachine> If some one would like to review/test/fix it: https://github.com/FCO/Red/pull/402

[20:23] *** guifa joined
[20:27] <Geth_> ¦ doc: uzluisf++ created pull request #3078: Place C<> around operator and types

[20:27] <Geth_> ¦ doc: review: https://github.com/perl6/doc/pull/3078

[20:39] *** guifa2 left
[20:58] *** pmurias left
[20:58] *** pmurias joined
[21:09] *** LtStaffel joined
[21:12] *** Wild62 joined
[21:12] *** Wild62 left
[21:12] *** joule left
[21:13] *** Wild62 joined
[21:13] *** wildtrees joined
[21:16] *** Wild62 left
[21:30] <SmokeMachine> all tests passing for Red:api<2>

[21:30] <SmokeMachine> \o/

[21:34] *** Altai-man_ left
[21:42] *** chloekek left
[21:50] *** lucasb left
[22:56] *** LtStaffel left
[23:00] *** pmurias left
[23:02] *** pmurias joined
[23:08] <El_Che> is there still useful to stay in #perl6 (eg to help new people) or have all the links been changed to this channel?

[23:28] * lizmat has just left #perl6 and #perl6-dev permanently

[23:37] <AlexDaniel> just move, yes

[23:46] <El_Che> will do that, thx

[23:51] <brass> Happy Halloween :^)

[23:55] *** wildtrees left
