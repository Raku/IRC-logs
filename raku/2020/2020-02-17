[00:00] *** m4t left
[00:27] *** hungrydonkey joined
[00:45] *** titsuki left
[00:46] *** cognominal joined
[01:04] *** Actualeyes left
[01:34] *** sena_kun left
[01:49] *** sena_kun joined
[02:08] *** Xliff left
[02:26] *** molaf left
[02:38] *** molaf joined
[02:39] *** eythian_ is now known as eythian

[02:56] *** uzl joined
[02:56] <uzl> I've created a parameterized class (by following a SO answer üòÖÔøΩ) and I'm trying to use the type from the type capture but getting X::TypeCheck::Assignment. Any idea how do to it if possible? Link: https://github.com/uzluisf/HCCS335/blob/master/implementations/raku/lib/BinarySearchTree.rakumod#L5

[02:56] *** uzl left
[03:34] *** sena_kun left
[03:47] *** sena_kun joined
[03:48] *** aborazmeh left
[04:20] *** aborazmeh joined
[04:20] *** aborazmeh left
[04:20] *** aborazmeh joined
[04:40] *** epony left
[04:47] *** epony joined
[04:56] *** molaf left
[05:34] *** sena_kun left
[05:35] *** hungrydonkey left
[05:38] *** hungrydonkey joined
[05:51] *** sena_kun joined
[05:58] *** hungrydonkey left
[05:58] *** hungrydonkey joined
[05:59] *** hungrydonkey left
[06:00] *** hungrydonkey joined
[06:01] *** hungrydonkey left
[06:03] *** dansolo42_ joined
[06:05] *** dansolo42 left
[06:05] *** dansolo42_ is now known as dansolo42

[06:13] *** dansolo42_ joined
[06:13] *** dansolo42 left
[06:13] *** dansolo42_ is now known as dansolo42

[06:25] *** [Sno] left
[06:30] *** aborazmeh left
[06:39] *** jmerelo joined
[07:08] *** abraxxa joined
[07:12] *** abraxxa left
[07:14] *** abraxxa joined
[07:23] *** kensanata joined
[07:27] *** xinming_ joined
[07:28] *** rindolf joined
[07:29] <jmerelo> .tell jnthn commaide.com is returning a 503 now https://commaide.com/download/community/linux

[07:31] *** xinming left
[07:31] *** kensanata left
[07:34] *** sena_kun left
[07:38] <Voldenet> m: CATCH { when X::TypeCheck { say .^name ~ " - got: " ~ .got().^name ~ " expected: " ~ .expected().^name }}; class A { my role R[::T] { method id (T $e) { say T.^name; say $e.WHAT; $e }}; method ^parameterize(Mu:U \this, Mu \T) { my $type := this.^mixin: R[T]; $type.^set_name: this.^name ~ <[> ~ T.^name ~ <]>; $type }}; my Int $he = A[Int].new.id(1); say $he

[07:38] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´Int‚ê§(Int)‚ê§1‚ê§¬ª

[07:38] <Voldenet> m: CATCH { when X::TypeCheck { say .^name ~ " - got: " ~ .got().^name ~ " expected: " ~ .expected().^name }}; class A { my role R[::T] { method id (T $e ‚Äì> T) { say T.^name; say $e.WHAT; $e }}; method ^parameterize(Mu:U \this, Mu \T) { my $type := this.^mixin: R[T]; $type.^set_name: this.^name ~ <[> ~ T.^name ~ <]>; $type }}; my Int $he = A[Int].new.id(1); say $he

[07:38] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed parameter‚ê§at <tmp>:1‚ê§------> 3ass A { my role R[::T] { method id (T $e7‚èè5 ‚Äì> T) { say T.^name; say $e.WHAT; $e }}‚ê§    expecting any of:‚ê§        constraint‚ê§¬ª

[07:38] <Voldenet> m: CATCH { when X::TypeCheck { say .^name ~ " - got: " ~ .got().^name ~ " expected: " ~ .expected().^name }}; class A { my role R[::T] { method id (T $e --> T) { say T.^name; say $e.WHAT; $e }}; method ^parameterize(Mu:U \this, Mu \T) { my $type := this.^mixin: R[T]; $type.^set_name: this.^name ~ <[> ~ T.^name ~ <]>; $type }}; my Int $he = A[Int].new.id(1); say $he

[07:38] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´Int‚ê§(Int)‚ê§X::TypeCheck::Return - got: Int expected: T‚ê§¬ª

[07:39] <Voldenet> "expected: T", wut Ôºà¬¥_„Çù`) 

[07:41] <Voldenet> however, T.ACCEPTS($e) evals to True

[07:42] *** stoned75 left
[07:43] *** abraxxa left
[07:46] *** cpan-raku left
[07:47] *** cpan-raku joined
[07:47] *** cpan-raku left
[07:47] *** cpan-raku joined
[07:48] *** domidumont joined
[07:48] *** sena_kun joined
[07:49] <Voldenet> m: role R[::T] { method id (T $e ‚Äì> T) { $e }}; my Int $huh = R[Int].new.id(1)

[07:49] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed parameter‚ê§at <tmp>:1‚ê§------> 3role R[::T] { method id (T $e7‚èè5 ‚Äì> T) { $e }}; my Int $huh = R[Int].new‚ê§    expecting any of:‚ê§        constraint‚ê§¬ª

[07:49] <Voldenet> m: role R[::T] { method id (T $e --> T) { $e }}; my Int $huh = R[Int].new.id(1)

[07:49] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´Died with X::TypeCheck::Return‚ê§  in method id at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[07:50] <Voldenet> ‚Ä¶is this a bug?

[07:50] <Voldenet> apparently https://github.com/rakudo/rakudo/issues/2595

[07:59] *** wamba joined
[08:00] *** wamba1 joined
[08:04] *** epony left
[08:04] *** hungrydonkey joined
[08:04] *** wamba left
[08:07] *** hungrydonkey left
[08:09] *** hungrydonkey joined
[08:13] *** hungrydonkey left
[08:14] *** hungrydonkey joined
[08:15] *** epony joined
[08:17] *** hungrydonkey left
[08:18] *** abraxxa joined
[08:18] *** hungrydonkey joined
[08:20] *** hungrydonkey left
[08:20] *** hungrydonkey joined
[08:21] *** abraxxa left
[08:21] *** abraxxa joined
[08:27] *** wamba1 left
[08:29] *** kensanata joined
[08:40] *** NODE left
[08:43] *** NODE joined
[08:43] *** NODE left
[08:47] *** NODE joined
[08:47] *** zakharyas joined
[09:06] *** dakkar joined
[09:21] <cpan-raku> New module released to CPAN! Archive::Libarchive::Raw (0.1.0) by 03FRITH

[09:27] <Geth> ¬¶ doc: 5197cd7939 | (JJ Merelo)++ | doc/Type/Hash.pod6

[09:27] <linkable6> Link: https://docs.raku.org/type/Hash

[09:27] <Geth> ¬¶ doc: Fixing text for grammar while doing #2632

[09:27] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/5197cd7939

[09:27] <Geth> ¬¶ doc: 81917dd3de | (JJ Merelo)++ | doc/Type/Hash.pod6

[09:27] <Geth> ¬¶ doc: Adds example for mixed-level classify-list closes #3222

[09:27] <linkable6> DOC#2632 [open]: https://github.com/Raku/doc/issues/2632 [Hacktoberfest][RFE][big][docs][good first issue][help wanted][new][‚ö† Top Priority ‚ö†] Checklist for 6.d

[09:27] <Geth> ¬¶ doc: 

[09:27] <Geth> ¬¶ doc: Refs to #2632

[09:27] <linkable6> DOC#3222 [closed]: https://github.com/Raku/doc/issues/3222 [RFE][docs] Improve the example for mixed-level classify-list

[09:27] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/81917dd3de

[09:27] <Geth> ¬¶ doc: dd879a14af | (JJ Merelo)++ | doc/Type/Hash.pod6

[09:27] <Geth> ¬¶ doc: Illustrates error of  mixed-level classify-list refs to #2632

[09:27] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/dd879a14af

[09:33] *** sena_kun left
[09:36] *** [Sno] joined
[09:42] *** sena_kun joined
[09:46] *** Actualeyes joined
[09:57] *** cognomin_ joined
[10:00] *** cognominal left
[10:01] *** wamba joined
[10:12] *** Actualeyes left
[10:12] *** Actualeyes joined
[10:22] <jjatria> m: 'x'.encode('utf32') # I'm confused

[10:22] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´Unknown string encoding: 'utf32'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:22] <jjatria> But https://github.com/rakudo/rakudo/blob/586b9f2eaad486a44616e4f6f1dcafe4a3ff3319/src/core.c/Encoding/Registry.pm6#L18

[10:24] <sena_kun> m: 'x'.encode('utf-32')

[10:24] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´Unknown string encoding: 'utf32'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:27] <MasterDuke> committable6: all 'x'.encode('utf32')

[10:27] <committable6> MasterDuke, https://gist.github.com/1c8c7c747aa287fc8c917a15a099ddf7

[10:28] *** pecastro joined
[10:28] <MasterDuke> so that never worked

[10:29] <jjatria> The plot thickens

[10:30] <rindolf> Hi all! Where can I find the sources of the https://rakubrew.org/ site?

[10:39] <xkr47> rindolf, you like the visuals?

[10:40] <xkr47> LetMeGithubThatForYou https://github.com/search?q=rakubrew

[10:40] <rindolf> xkr47: they are ok, but some links are broken

[10:41] <huf> that logo looks pretty garbled, maybe try not using webfonts exclusively?

[10:45] *** zakharyas left
[10:48] *** zakharyas joined
[10:51] <rindolf> xkr47: thanks! https://github.com/Raku/rakubrew.org/pull/3

[10:51] <xkr47> rindolf, thanks to you! :)

[10:53] <rindolf> xkr47: you're welcome 

[10:56] <Altreus> What's idiomatic for "slice of hash with defined keys"?

[10:56] <Altreus> Had to double-check where I was because I don't normally see rindolf and huf in here

[10:57] <sena_kun> Altreus, idiomatic what, code?

[10:57] <sena_kun> m: my %a = a => 1, b => 2, c => 3; %a<a b>.say

[10:57] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´(1 2)‚ê§¬ª

[10:58] <xkr47> m: my %a = a => 1, b => 2, c => 3; %a<a d>.say

[10:58] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´(1 (Any))‚ê§¬ª

[10:59] <Altreus> uh

[10:59] *** WilhelmVonWeiner joined
[10:59] <WilhelmVonWeiner> hello

[10:59] <Altreus> I guess those words don't mean the same in raku

[10:59] <Altreus> I meant the subset of the hash

[10:59] <huf> Altreus: i had an opportunity to bash webfonts and i felt i had to take it

[11:00] <Altreus> bash doesn't use webfonts

[11:00] <huf> your father smelt of elderberries

[11:00] <WilhelmVonWeiner> i'm learning raku and was wondering if there's a better way to sort a comma-separated list of strings over `split(', ').sort.join(', ')`

[11:00] <Altreus> That seems like a pretty good way

[11:01] <Altreus> You could use a variable for the string to avoid repeating yourself

[11:01] <WilhelmVonWeiner> well this is in a pipe

[11:01] <Altreus> ceci n'est pas une pipe

[11:01] <WilhelmVonWeiner> to use as a oneliner

[11:01] <Altreus> o

[11:01] <WilhelmVonWeiner> since with shell you pipe it through like four programs

[11:02] <MasterDuke> m: my %a = a => 1, b => 2, c => 3; %a<a d>.grep(*.defined).say

[11:02] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´(1)‚ê§¬ª

[11:06] <Altreus> MasterDuke: that's the values but not a subset of the hash :)

[11:07] <Altreus> oh! You can get a list of pairs

[11:07] *** Redfoxmoon left
[11:08] *** Redfoxmoon joined
[11:09] <Altreus> it's %a.grep( *.value.defined )

[11:10] <WilhelmVonWeiner> "get.split(', ').sort.join(', ').say"

[11:10] <WilhelmVonWeiner> is anything about that immoral

[11:13] *** skyl4rk left
[11:17] *** samebchase- joined
[11:18] *** skyl4rk joined
[11:26] <Altreus> not really no

[11:26] <Altreus> you might end up with an extra newline depending on how get handles it

[11:27] *** Guest4508 left
[11:31] *** jmerelo left
[11:32] <MasterDuke> jjatria: that error is actually coming from moarvm, which looks like it doesn't support utf32 https://github.com/MoarVM/MoarVM/blob/master/src/strings/ops.c#L2781-L2794

[11:32] *** Altai-man_ joined
[11:32] <MasterDuke> maybe other backends do, or maybe it should be removed from that list in rakudo

[11:33] <MasterDuke> yeah, jvm backend supports it

[11:34] *** sena_kun left
[11:36] *** reach_satori left
[11:41] *** wamba left
[11:50] *** Altai-man_ is now known as sena_kun

[11:52] *** wamba joined
[12:00] <jjatria> MasterDuke: Oh... interesting...

[12:01] <jjatria> Thanks for chasing that up!

[12:01] <jjatria> Now I need to find a workaround... ü§î

[12:04] *** WilhelmVonWeiner left
[12:05] *** pecastro left
[12:08] *** titsuki joined
[12:09] *** Guest1277 joined
[12:14] *** zakharyas left
[12:55] *** sarna left
[12:55] *** natrys joined
[12:57] *** sarna joined
[12:59] *** patrickb joined
[13:00] *** lucasb joined
[13:03] *** wamba left
[13:07] *** wamba joined
[13:14] <patrickb> xkr47, rindolf: Did you know that the rakubrew website can be viewed in a console without a browser? (... talking about absolutely useless, but fun features ...)

[13:14] *** pecastro joined
[13:21] <xkr47> does it use ncurses? :)

[13:22] <patrickb> xkr47: try curl or wget

[13:22] <xkr47> heh

[13:24] <rindolf> patrickb: what?

[13:25] <jjatria> I think this works as an alternative to `.encode('utf32')`

[13:25] <[Coke]> lynx

[13:25] <jjatria> m: Blob.new: |"string!".comb.map: { |.encode('utf16le'), 0, 0 }

[13:25] <camelia> rakudo-moar 8c995febd: ( no output )

[13:26] <jjatria> m: say Blob.new: |"string!".comb.map: { |.encode('utf16le'), 0, 0 }

[13:26] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´Blob:0x<73 00 00 00 74 00 00 00 72 00 00 00 69 00 00 00 6E 00 00 00 67 00 00 00 21 00 00 00>‚ê§¬ª

[13:28] <rypervenche> Altreus: I may be one of the only ones who got that pipe joke. ><

[13:28] <rypervenche> .tell jnthn There's a typo on commaide.com, "whitespce"

[13:28] <patrickb> Coke, rindolf, xkr47: no lynx or anything, just curl or wget the website.

[13:29] <xkr47> telnet localhost 80

[13:29] <xkr47> GET / HTTP/1.1

[13:29] <xkr47> Host: localhost

[13:29] <xkr47> Connection: close

[13:30] <xkr47>  

[13:30] <rypervenche> curl rakubrew.org "Found"

[13:30] <discord6> <Highlander> Haha same here--I just get "Found"

[13:32] <xkr47> curl https://rakubrew.org

[13:32] *** Altai-man_ joined
[13:32] <xkr47> < content-type: text/plain; charset=utf-8

[13:32] <discord6> <Highlander> Oh wow, mighty impressive

[13:33] <xkr47> but it contains vt102/ansi codes, is it still text/plain? :)

[13:33] <xkr47> but I gotta say it looks nice

[13:33] <patrickb> xkr47: That's a difficult question. Not sure there exists a content-type for this...

[13:33] *** foo222 joined
[13:34] <rypervenche> I do like the Markdown look.

[13:34] <discord6> <Highlander> That's slick

[13:34] *** sena_kun left
[13:37] <Altreus> rypervenche: jokes are best when they exclude most people!

[13:37] <rypervenche> :D En effet

[13:39] <Altreus> I was also using it to refer to the fact the code was pasted out of context!

[13:43] <tyil> rypervenche: use `curl -L`, the http version wants to redirect to the https version

[13:43] <rypervenche> Yeah, I saw that afterward :)

[13:43] <tyil> (that in turn will present you an error because TLS is not configured correctly)

[13:43] *** aborazmeh joined
[13:43] *** aborazmeh left
[13:43] *** aborazmeh joined
[13:43] <xkr47> rypervenche, but is it markdown though?

[13:43] <tyil> which seems to be a traefik thing, which could imply a kubernetes setup

[13:43] <rypervenche> xkr47: No idea. I was waiting for someone to correct me.

[13:44] <xkr47> rypervenche, but will someone correct you though? :)

[13:44] <rypervenche> Oof, heavy Monday.

[13:44] <xkr47> sorry

[13:44] *** hungrydonkey left
[13:44] <rypervenche> :P

[13:45] *** hungrydonkey joined
[13:47] <Altreus> just another manic monday

[13:49] <tyil> reading all this makes me feel better about having my last couple days of vacation

[14:30] *** foo222 left
[14:36] <patrickb> xkr47: I haven't run it though a validator, but I intended to write vanilla markdown.

[14:37] <patrickb> Except for the logo of course

[14:39] *** Actualeyes left
[14:40] *** Actualeyes joined
[14:43] *** wamba left
[14:46] *** astronavt joined
[14:50] *** NODE left
[14:53] *** NODE joined
[14:57] *** wamba joined
[14:58] <rypervenche> How might I do what normal "

[14:58] <rypervenche> oops

[14:59] <rypervenche> How might I do what a normal grep would do in Raku? I've got a text file that I'm .lineing through and only want lines with [ "this" | "that" ] to be output and ultimately go into a variable.

[15:00] <Altreus> next unless?

[15:00] <Altreus> sometimes the perl5 way also works!

[15:01] <rypervenche> I wasn't sure if there was a more efficient way to do it using a method or if I should just be doing a regex.

[15:02] <[Coke]> .lines.grep(regex) or .lines.contain("this"|"that"). I imagine the former is faster.

[15:04] <rypervenche> .contains would only return a boolean though. I'll give the .grep a shot. I didn't realize you could a regex directly in there.

[15:05] <Altreus> The problem with using grep ... uh, might not apply actually

[15:05] <Altreus> I was going to say it loads it into memory but raku has lazy evaluation

[15:19] <[Coke]> rypervenche: ah, right: .lines.map(*.contains("this"|"that"))

[15:20] <rypervenche> Ooooh

[15:21] <[Coke]> er.

[15:21] <[Coke]> that is also wrong!

[15:21] <[Coke]> .lines.grep(*.contains("this"|"that")) ... that one, I think. but I'd guess it's slower than regex.

[15:21] *** sena_kun joined
[15:23] *** Altai-man_ left
[15:24] <[Coke]> contains is over 2x as slow

[15:25] <MasterDuke> contains should be faster that regexes in general, but probably the juction is slowing things down

[15:25] <[Coke]> ... with the junction. contains with a single string is much faster.

[15:26] <[Coke]> MasterDuke++ # exactly

[15:26] <MasterDuke> jinx

[15:26] <[Coke]> I got there eventually. :)

[15:27] <rypervenche> Good to know.

[15:28] *** aborazmeh left
[15:32] *** Altai-man_ joined
[15:34] *** sena_kun left
[15:36] *** abraxxa left
[15:36] *** abraxxa joined
[15:37] *** Xliff joined
[15:37] <Xliff> \o

[15:37] <Xliff> Anyone here use comma?

[15:37] <Xliff> s/comma/Comma/

[15:38] <lizmat> jnthn sena_kun I think  :-)

[15:38] <jnthn> I probably use it more days than not :)

[15:38] <Xliff> :)

[15:39] <Xliff> jnthn: Is there a project creation guide?

[15:39] <jnthn> Like https://commaide.com/docs/creating-project ?

[15:40] <Xliff> Hmmm...

[15:41] <Xliff> I went through and did a mass delete of backup files and now Comma has hung.

[15:41] <Xliff> Oh. LOL! I had it suspended.

[15:43] <Xliff> jnthn: Will the "Raku paraneters" box accept environment vars?

[15:44] <Altai-man_> Xliff, there is a separate field for envvars

[15:45] <Xliff> Altai-man_: That's not what I'm asking.

[15:45] <Xliff> Will the "Raky parameters" box allow environment vars?

[15:46] <Altai-man_> Xliff, nope. Raku parameters is what is passed after call to `perl6 ... script-name.foo`.

[15:46] <Altai-man_> so e.g. -Ilib will be ok there, but `perl6 FOO=BAR script.p6` isn't going to work, I think

[15:46] <jnthn> No, it doesn't go via a shell

[15:51] <rypervenche> jnthn: Did you see my comment on the typo on commaide.com? I wasn't sure where to put in an issue.

[15:59] *** wamba left
[16:01] <Geth> ¬¶ ecosystem: 668818b4e5 | thundergnat++ (committed using GitHub Web editor) | META.list

[16:01] <Geth> ¬¶ ecosystem: Add Text::Center to the ecosystem

[16:01] <Geth> ¬¶ ecosystem: 

[16:01] <Geth> ¬¶ ecosystem: See https://github.com/thundergnat/Text-Center

[16:01] <Geth> ¬¶ ecosystem: Simple but useful.

[16:01] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/668818b4e5

[16:04] <[Coke]> thundergnat: looks like you committed .precomp files in the git repo. Intentional?

[16:04] <jnthn> rypervenche: No, missed that; there is an issue tracker on the site, if logged in, or you can email.

[16:05] <thundergnat> [Coke] Sigh. no. I'll fix that. thanks.

[16:05] <rypervenche> jnthn: All right, I'll email it then.

[16:05] *** wamba joined
[16:05] <[Coke]> thundergnat++

[16:14] *** domidumont left
[16:32] *** molaf joined
[16:32] *** molaf left
[16:48] *** hungrydonkey left
[16:50] *** Redfoxmoon left
[16:50] *** Redfoxmoon joined
[16:54] *** hungrydonkey joined
[16:58] *** xelxebar_ joined
[16:59] *** xelxebar left
[17:10] *** pecastro left
[17:15] *** patrickb left
[17:17] *** pyrimidine left
[17:26] *** stoned75 joined
[17:27] *** dakkar left
[17:28] *** patrickb joined
[17:30] *** domidumont joined
[17:30] *** domidumont left
[17:33] *** sena_kun joined
[17:35] *** Altai-man_ left
[17:40] *** wamba left
[17:42] *** thundergnat left
[17:47] *** [Sno] left
[17:47] *** pyrimidine joined
[17:49] *** melezhik joined
[17:53] *** wamba joined
[17:55] <lizmat> and yet another Rakudo Weekly News hits the Net: https://wordpress.com/block-editor/post/rakudoweekly.blog/563

[17:55] <lizmat> oops

[17:55] <lizmat> let's ty that again:

[17:55] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/02/17/2020-07-irky-reblessing/

[17:56] <Altreus> do we have a raku blog platform yet? :P

[17:56] <Altreus> grant proposal?

[17:56] <Altreus> ^_^

[17:57] <El_Che> short one

[17:58] <[Coke]> There is Rapi::Blog written in p5 that we could use as an app. (if your goal is to have one for content, rather than a platform to "sell")

[17:58] <[Coke]> That's what's powering news.perlfoundation.org

[17:59] <El_Che> (oh, I have a rapi application at work: rapi, short for RADIUS API :) )

[17:59] <sena_kun> .oO ( have to write Raphi::Blog )

[18:00] <El_Che> lol

[18:01] <Altreus> hmm I feel like $! should not be Nil if Nil has that behaviour

[18:01] <Altreus> I was just asking because lizmat might have let the word wordpress cross my field of view

[18:01] *** molaf joined
[18:01] <Altreus> And I thought, new generation, new tools

[18:02] *** hungrydonkey left
[18:02] *** chloekek joined
[18:04] *** DarthGandalf left
[18:06] *** uzl[m] left
[18:06] *** CIAvash left
[18:06] *** pmf[m] left
[18:06] *** unclechu left
[18:06] *** tadzik[m]1 left
[18:06] *** AlexDaniel` left
[18:07] *** wamba left
[18:07] *** wamba joined
[18:07] *** jmerelo joined
[18:07] *** rba[m] left
[18:07] *** EuAndreh[m] left
[18:07] *** BlackChaosNL[m] left
[18:07] *** matiaslina left
[18:08] *** awwaiid left
[18:08] *** DarthGandalf joined
[18:08] *** mojca left
[18:09] *** xelxebar_ left
[18:10] *** mojca joined
[18:10] *** xelxebar joined
[18:11] *** wamba left
[18:17] *** titsuki left
[18:18] *** DarthGandalf left
[18:18] *** DarthGandalf joined
[18:19] *** [Sno] joined
[18:19] <jmerelo> A new Raku module template, with the bare minimum to start a module: https://github.com/JJ/raku-module-template

[18:19] *** awwaiid joined
[18:20] <Altreus> a dist

[18:20] <Altreus> "module" is overloaded :D

[18:20] <sena_kun> .weekly A new Raku dist template, with the bare minimum to start a module: https://github.com/JJ/raku-module-template

[18:20] *** wamba joined
[18:20] <jmerelo> Altreus: so right

[18:21] *** aborazmeh joined
[18:21] *** aborazmeh left
[18:21] *** aborazmeh joined
[18:21] <sena_kun> weekly: A new Raku dist template, with the bare minimum to start a module: https://github.com/JJ/raku-module-template

[18:21] <notable6> sena_kun, Noted! (weekly)

[18:21] <jmerelo> Just renamed to dist-template  :-) https://github.com/JJ/raku-dist-template

[18:21] <Altreus> :D

[18:21] * Altreus is a helper

[18:22] <jmerelo> Altreus++

[18:22] <Altreus> thank you

[18:22] <Altreus> Low-hanging fruit in raku still - it's like exploring a new land

[18:22] <jmerelo> Altreus: lots of stuff that are not there

[18:23] <jmerelo> BTW, I just noticed that GitHub merged the .gitignore for perl6 that was submitted like 2 years ago

[18:23] <jmerelo> Just in time for the change of name

[18:23] <Altreus> punctual as ever

[18:23] <jmerelo> As a matter of fact, 4 years old https://github.com/github/gitignore/blob/master/Perl6.gitignore

[18:24] *** CIAvash joined
[18:24] <Altreus> a valuable 2 lines

[18:24] <Altreus> wow, 2016

[18:24] <jmerelo> Merged in 2018

[18:24] <jmerelo> And only recently deployed

[18:24] <jmerelo> (or at least it's the first time I've noticed)

[18:25] *** kensanata left
[18:26] *** tadzik[m]1 joined
[18:27] <Grinnz> in perl land, we *still* get distribution vs module wrong :D

[18:28] <Geth> ¬¶ doc/supply-first: e94d112bc9 | (Stoned Elipot)++ | doc/Type/Supply.pod6

[18:28] <Geth> ¬¶ doc/supply-first: rephrase Supply.first description

[18:28] <Geth> ¬¶ doc/supply-first: review: https://github.com/Raku/doc/commit/e94d112bc9

[18:29] <Grinnz> https://perldoc.pl/ExtUtils::Installed is a mess for instance

[18:29] <Grinnz> its operations are almost all on distributions, but it talks about modules

[18:29] <Grinnz> (packlist is a distribution specific file)

[18:30] <Grinnz> https://metacpan.org/pod/Module::Starter is, of course, a distribution starter ;)

[18:31] <Kaiepi> package is another overloaded term

[18:31] *** uzl[m] joined
[18:32] <Kaiepi> packages are packages, but lots of other types are also packages, just not package packages

[18:33] <Grinnz> "package" vs "module" vs "file", also fun in perl

[18:33] <Grinnz> don't know how much of that is still around in raku

[18:36] *** pecastro joined
[18:37] *** pmf[m] joined
[18:41] *** matiaslina joined
[18:42] *** NODE left
[18:42] *** BlackChaosNL[m] joined
[18:43] *** NODE joined
[18:44] <Altreus> At least perl only has one keyword though: package

[18:44] <Altreus> in this realm there's class, module, package at least

[18:45] * Altreus &

[18:46] *** AlexDaniel` joined
[18:46] *** rba[m] joined
[18:48] <Geth> ¬¶ doc: ffccbfdbfb | (Stoned Elipot)++ | doc/Type/Supply.pod6

[18:48] <Geth> ¬¶ doc: Add Supply.first

[18:48] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/ffccbfdbfb

[18:48] <Geth> ¬¶ doc: e94d112bc9 | (Stoned Elipot)++ | doc/Type/Supply.pod6

[18:48] <Geth> ¬¶ doc: rephrase Supply.first description

[18:48] <linkable6> Link: https://docs.raku.org/type/Supply

[18:48] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/e94d112bc9

[18:48] <Geth> ¬¶ doc: 7b1585e5ba | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Type/Supply.pod6

[18:48] <Geth> ¬¶ doc: Merge pull request #3221 from Raku/supply-first

[18:48] <Geth> ¬¶ doc: 

[18:48] <Geth> ¬¶ doc: Add Supply.first

[18:48] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/7b1585e5ba

[18:57] *** lumin joined
[18:58] *** lumin left
[19:00] *** lumin joined
[19:02] *** kst joined
[19:05] *** sauvin left
[19:28] *** |Sno| joined
[19:31] *** [Sno] left
[19:31] *** melezhik left
[19:32] *** Altai-man_ joined
[19:32] *** wamba left
[19:33] *** wamba joined
[19:35] *** sena_kun left
[19:40] *** eiro left
[19:46] *** AlexDaniel` left
[19:46] *** rba[m] left
[19:46] *** awwaiid left
[19:47] *** pmf[m] left
[19:47] *** CIAvash left
[19:47] *** uzl[m] left
[19:47] *** matiaslina left
[19:47] *** tadzik[m]1 left
[19:47] *** BlackChaosNL[m] left
[19:50] *** jmerelo left
[19:50] *** wamba left
[19:51] *** wamba joined
[19:56] *** lumin left
[19:56] *** lumin joined
[20:01] *** Doc_Holliwood joined
[20:05] <Doc_Holliwood> I measure 2/3 of a millisecond speedup per "say" when using the "unprint" module

[20:05] <Doc_Holliwood> . that's more than I expected

[20:05] <Doc_Holliwood> @lizmat

[20:06] <lizmat> yeah, there's a lot of overhead involved in dynamic variable lookup

[20:07] *** aborazmeh left
[20:16] *** cognominal joined
[20:19] *** AlexDaniel` joined
[20:19] *** cognomin_ left
[20:32] *** wamba left
[20:36] *** sarna left
[20:37] *** Black_Ribbon joined
[20:38] *** patrickb left
[20:41] <Geth> ¬¶ doc: Kaiepi++ created pull request #3224: Document how `when` can be used in `for` loops

[20:41] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3224

[20:43] *** patrickb joined
[20:44] *** sarna joined
[20:46] *** wamba joined
[20:47] *** EuAndreh[m] joined
[20:47] *** CIAvash joined
[20:47] *** matiaslina joined
[20:47] *** unclechu joined
[20:47] *** BlackChaosNL[m] joined
[20:47] *** awwaiid joined
[20:47] *** rba[m] joined
[20:47] *** pmf[m] joined
[20:47] *** uzl[m] joined
[20:47] *** tadzik[m]1 joined
[20:51] *** wamba left
[20:57] *** kensanata joined
[21:15] *** census joined
[21:15] <census> Hi! It's been a few years since I've posted here

[21:16] <cpan-raku> New module released to CPAN! Text::VimColour (0.5.0) by 03KBUCHELI

[21:16] <cpan-raku> New module released to CPAN! unprint (0.0.3) by 03ELIZABETH

[21:16] <cpan-raku> New module released to CPAN! Math::Libgsl::Sort (0.0.2) by 03FRITH

[21:16] <cpan-raku> New module released to CPAN! Math::Libgsl::Elementary (0.0.2) by 03FRITH

[21:16] <cpan-raku> New module released to CPAN! Math::Libgsl::Polynomial (0.0.1) by 03FRITH

[21:16] *** cpan-raku left
[21:16] <census> Does perl6 have the ability to process the text of a .pdf?

[21:16] *** cpan-raku joined
[21:16] *** cpan-raku left
[21:16] *** cpan-raku joined
[21:19] <nine> census: there seem to be several PDF reading modules these days: https://modules.raku.org/search/?q=pdf

[21:30] <patrickb> lizmat++ (weekly)

[21:30] *** census left
[21:31] <patrickb> nine, lizmat: What's the clash of work of nine and me in the weekly referring to? (Just wondering...)

[21:33] *** sena_kun joined
[21:34] *** Altai-man_ left
[21:40] *** census joined
[21:42] *** census left
[21:42] *** pasodoble joined
[21:53] <rypervenche> I'm trying to create an array of hashes in my grammar. I found that when I "say @data" inside of the loop, instead of adding a hash to the array each time, it's adding a hash, but all of the hashes are identical. I'm guessing it has to do with how $_ works. How might I get it to keep the values after each loop through? (I tried adding a variable to the loop with ->, same result)

[21:54] <rypervenche> Might help to add the link: https://gist.github.com/rypervenche/0bd38ec28e89c961b112a5577ca86835

[21:55] *** reach_satori joined
[21:57] <[Coke]> rypervenche: move the my into the loop.

[21:58] <[Coke]> you've got a single call info, and you're adding it each time around, presumably changing it to the last value of the loop.

[21:58] *** reach_satori_ joined
[21:58] <rypervenche> Oh...I thought that might be costly or something since it would be doing it many times.

[21:59] <[Coke]> costly or not, it'll force a separate instance each time through. You could also push a copy of it into the array, but that's probably about the same cost.

[22:00] <rypervenche> Gotcha. Out of curiosity, what would pushing a copy of it look like?

[22:01] *** reach_satori left
[22:02] *** alcy0n joined
[22:05] *** Kaiepi left
[22:05] *** wamba joined
[22:05] *** Kaiepi joined
[22:10] *** reach_satori_ left
[22:11] *** reach_satori joined
[22:11] <[Coke]> m: my %a=<hi there fellow kids>; say %a.copy

[22:11] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´No such method 'copy' for invocant of type 'Hash'. Did you mean any of these?‚ê§    chop‚ê§    comb‚ê§    conj‚ê§    cos‚ê§‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:12] <[Coke]> m: my %a=<hi there fellow kids>; say %a.clone

[22:12] <camelia> rakudo-moar 8c995febd: OUTPUT: ¬´{fellow => kids, hi => there}‚ê§¬ª

[22:12] <[Coke]> wrong verb! you could .clone the hash in the push call. 

[22:13] *** pasodoble left
[22:13] <[Coke]> @data.push: %call-info.clone;

[22:13] * [Coke] wonders how many languages worth of method calls are in his head.

[22:14] *** alcy0n left
[22:16] *** natrys left
[22:18] *** patrickb left
[22:27] *** reach_satori_ joined
[22:30] *** reach_satori left
[22:46] *** kensanata left
[22:51] *** chloekek left
[23:17] *** rindolf left
[23:26] *** Doc_Holliwood left
[23:32] *** Altai-man_ joined
[23:35] *** sena_kun left
[23:40] *** pecastro left
[23:46] *** aborazmeh joined
[23:46] *** aborazmeh left
[23:46] *** aborazmeh joined
[23:55] *** libertas left
