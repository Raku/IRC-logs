[00:02] *** mowcat left
[00:28] *** thundergnat left
[00:39] *** wildtrees left
[00:41] *** xinming joined
[00:41] *** wildtrees joined
[01:19] *** sena_kun joined
[01:21] *** Altai-man_ left
[01:30] *** markoong joined
[01:30] *** markoong left
[01:33] *** wildtrees left
[02:03] *** AlexDaniel joined
[02:03] *** AlexDaniel left
[02:03] *** AlexDaniel joined
[02:47] *** hungrydonkey joined
[02:56] *** molaf left
[03:09] *** molaf joined
[03:18] *** Altai-man_ joined
[03:21] *** sena_kun left
[03:33] *** pilne left
[03:51] *** hungryd44 joined
[03:55] *** hungrydonkey left
[04:37] *** aborazmeh joined
[04:37] *** aborazmeh left
[04:37] *** aborazmeh joined
[04:37] *** ensamvarg joined
[04:41] *** MasterDuke left
[05:19] *** sena_kun joined
[05:21] *** Altai-man_ left
[05:32] *** molaf left
[05:45] *** sauvin joined
[05:52] *** Altai-man_ joined
[05:55] *** sena_kun left
[06:04] *** TeamBlast joined
[06:09] *** cxreg joined
[06:10] *** simcop2387 joined
[06:10] *** simcop2387 left
[06:10] *** simcop2387 joined
[06:11] *** wamba joined
[06:27] *** sena_kun joined
[06:29] *** Altai-man_ left
[06:43] *** hungrydonkey joined
[06:44] *** hungryd44 left
[06:52] *** hungrydonkey left
[06:52] *** hungrydonkey joined
[06:54] *** TeamBlast left
[06:55] *** TeamBlast joined
[07:10] *** aborazmeh left
[07:12] *** aluaces joined
[07:16] *** TeamBlast left
[07:16] *** TeamBlast joined
[07:18] *** Altai-man_ joined
[07:21] *** sena_kun left
[07:41] *** ensamvarg left
[07:48] *** hungryd99 joined
[07:49] *** hungrydonkey left
[07:54] *** hungryd99 left
[07:59] *** hungrydonkey joined
[08:01] *** hungrydonkey left
[08:02] *** hungrydonkey joined
[08:03] *** rindolf joined
[08:08] *** cpan-raku left
[08:08] *** cpan-raku joined
[08:08] *** cpan-raku left
[08:08] *** cpan-raku joined
[08:31] *** hungrydonkey left
[08:40] *** dakkar joined
[08:51] *** ufobat joined
[08:58] *** chloekek joined
[09:02] *** [Sno] left
[09:19] *** sena_kun joined
[09:21] *** Altai-man_ left
[09:28] *** [Sno] joined
[09:28] *** xfix joined
[09:29] <xfix> p6: say 2 + 2 * 2;

[09:29] <camelia> rakudo-moar 9ebbad306: OUTPUT: «6␤»

[09:30] <xfix> i find it interesting that the command is still `p6` when it's not Perl 6 anymore

[09:30] <xfix> raku: say 2 + 2 * 2

[09:30] <evalable6> xfix, rakudo-moar 9ebbad306: OUTPUT: «6␤»

[09:30] *** ensamvarg joined
[09:32] <lizmat> xfix: we deem backward compatibility to be important  :-)

[09:32] <xfix> fair, although the channel topic could be updated

[09:32] <lizmat> good poing

[09:32] <lizmat> *point

[09:32] *** hungrydonkey joined
[09:33] <lizmat> turns out I don't have the rights to do that  

[09:33] <lizmat> moritz ^^ ?

[09:35] <xfix> raku: say Q[@A`DO world!]~|<HeLhg>

[09:35] <evalable6> xfix, rakudo-moar 9ebbad306: OUTPUT: «Hello world!␤»

[09:38] *** pecastro joined
[09:40] <moritz> 10:40 -ChanServ(ChanServ@services.)- You are not authorized to (de)op moritz on #raku.

[09:42] <tadzik> Anarchy in the IRC :)

[09:43] <chloekek> p6: say ‘Ⓐ’.charss

[09:43] <camelia> rakudo-moar 9ebbad306: OUTPUT: «No such method 'charss' for invocant of type 'Str'. Did you mean any of these?␤    chars␤    chrs␤␤  in block <unit> at <tmp> line 1␤␤»

[09:43] <chloekek> p6: say ‘Ⓐ’.chars

[09:43] <camelia> rakudo-moar 9ebbad306: OUTPUT: «1␤»

[09:43] <chloekek> True anarchy: make this return 2. 😈

[09:43] <xfix> that's Raku for you, it uses graphemes by default :)

[09:44] <lizmat> m: say "😈".uninames

[09:44] <camelia> rakudo-moar 9ebbad306: OUTPUT: «(SMILING FACE WITH HORNS)␤»

[09:44] <xfix> raku: say '🏴‍☠️'.chars

[09:44] <evalable6> xfix, rakudo-moar 9ebbad306: OUTPUT: «1␤»

[09:44] <lizmat> m: say "😈".encode

[09:44] <camelia> rakudo-moar 9ebbad306: OUTPUT: «utf8:0x<F0 9F 98 88>␤»

[09:45] <xfix> raku: say ‘Ⓐ’.uninames

[09:45] <evalable6> xfix, rakudo-moar 9ebbad306: OUTPUT: «(CIRCLED LATIN CAPITAL LETTER A)␤»

[09:45] <xfix> well, i guess it's a single codepoint too

[09:47] <xfix> raku: for my $x (1, 2, 3) { say "This shouldn't compile: $x" }

[09:47] <evalable6> xfix, rakudo-moar 9ebbad306: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/AhSdzM5SWc␤This appears to be Perl code␤at /tmp/AhSdzM5SWc:1␤------> 03for 08⏏04my $x (1, 2, 3) { say "This shouldn't co␤»

[09:47] <synthmeat> what, that's supposed to be emojis combined to jollyroger?

[09:47] <xfix> 🏴‍☠️ is a pirate flag

[09:47] <synthmeat> nice. TIL.

[09:48] <xfix> raku: say '🏴󠁧󠁢󠁷󠁬󠁳󠁿'.chars

[09:48] <evalable6> xfix, rakudo-moar 9ebbad306: OUTPUT: «1␤»

[09:48] <xfix> raku: say '🏴󠁧󠁢󠁷󠁬󠁳󠁿'.encode

[09:48] <evalable6> xfix, rakudo-moar 9ebbad306: OUTPUT: «utf8:0x<F0 9F 8F B4 F3 A0 81 A7 F3 A0 81 A2 F3 A0 81 B7 F3 A0 81 AC F3 A0 81 B3 F3 A0 81 BF>␤»

[09:49] <xfix> raku: say '🏴󠁧󠁢󠁷󠁬󠁳󠁿'.uninames

[09:49] <evalable6> xfix, rakudo-moar 9ebbad306: OUTPUT: «(WAVING BLACK FLAG TAG LATIN SMALL LETTER G TAG LATIN SMALL LETTER B TAG LATIN SMALL LETTER W TAG LATIN SMALL LETTER L TAG LATIN SMALL LETTER S CANCEL TAG)␤»

[09:49] <xfix> raku: say join ' ', '🏴󠁧󠁢󠁷󠁬󠁳󠁿'.uninames

[09:49] <evalable6> xfix, rakudo-moar 9ebbad306: OUTPUT: «WAVING BLACK FLAG TAG LATIN SMALL LETTER G TAG LATIN SMALL LETTER B TAG LATIN SMALL LETTER W TAG LATIN SMALL LETTER L TAG LATIN SMALL LETTER S CANCEL TAG␤»

[09:49] <xfix> raku: say join ' | ', '🏴󠁧󠁢󠁷󠁬󠁳󠁿'.uninames

[09:49] <evalable6> xfix, rakudo-moar 9ebbad306: OUTPUT: «WAVING BLACK FLAG | TAG LATIN SMALL LETTER G | TAG LATIN SMALL LETTER B | TAG LATIN SMALL LETTER W | TAG LATIN SMALL LETTER L | TAG LATIN SMALL LETTER S | CANCEL TAG␤»

[10:07] <chloekek> p6: say(chr(0xE000))

[10:07] <camelia> rakudo-moar 9ebbad306: OUTPUT: «␤»

[10:08] <chloekek> p6: say(chr(0xE000).uninames)

[10:08] <camelia> rakudo-moar 9ebbad306: OUTPUT: «(<private-use-E000>)␤»

[10:12] <xfix> p6: say chr(0xD800)

[10:12] <camelia> rakudo-moar 9ebbad306: OUTPUT: «Error encoding UTF-8 string: could not encode Unicode Surrogate codepoint 55296 (0xD800)␤  in block <unit> at <tmp> line 1␤␤»

[10:13] <xfix> p6: say chr(0xD800).uninames

[10:13] <camelia> rakudo-moar 9ebbad306: OUTPUT: «(<surrogate-D800>)␤»

[10:14] <xfix> p6: say chrs 0xD801, 0xDC37

[10:14] <camelia> rakudo-moar 9ebbad306: OUTPUT: «Error encoding UTF-8 string: could not encode Unicode Surrogate codepoint 55297 (0xD801)␤  in block <unit> at <tmp> line 1␤␤»

[10:19] *** natrys joined
[10:19] *** hungrydonkey left
[10:20] *** sarna left
[10:22] *** sarna joined
[10:28] *** kawaii joined
[10:29] *** hungrydonkey joined
[10:38] *** hungryd70 joined
[10:39] *** hungrydonkey left
[10:43] *** hungryd70 left
[10:45] *** hungrydonkey joined
[10:55] *** ufobat_ joined
[10:58] *** ufobat left
[11:02] *** aluaces left
[11:03] *** aluaces joined
[11:03] <kawaii> Hi, I'm a little confused about some code I have here. I send some data to a remote API and then use the same API to add some reactions (emojis) to the message - after this I then start a tap on the event supply for the message I created but it's picking up the two add-reaction() events from the first block of code. https://www.irccloud.com/pastebin/R3ukTWoV/

[11:03] <kawaii> am I misunderstanding something about how `start react` works?

[11:04] <kawaii> my initial thought was that the event supply was sending historical events, but this isn't the case

[11:04] <kawaii> surely since I am `awaiting` that first block of code, there's no way the latter half is running at all, is there? at least not until the first finishes 

[11:05] * lizmat is not immediately seeing it, jnthn might

[11:06] <Altreus> I feel better when the grown-ups also can't immediately see what's happening :D

[11:07] <jnthn> kawaii: Certainly all the stuff in the `.then` block will have run before the `react` block is started (and you can probably confirm that by logging something before the `start react` line)

[11:07] <Altreus> here's where the supply happens https://github.com/shuppet/p6-api-discord/blob/messages/lib/API/Discord/Message.pm6#L150

[11:07] <Altreus> I'm pretty sure I've used a live supply

[11:08] <jnthn> Note that `start react` is "fire and forget", so if that were your full program it'd just exit (I'm guessing it's not)

[11:08] <Altreus> it's not

[11:08] <Altreus> I haven't hit him with the "post the whole code" learning stick enough yet

[11:10] <Altreus> I think the tap on the line I just linked to might also be better as a start react whenever ... maybe?

[11:10] <Altreus> vague memories of being told only to use a tap if I know I need to use a tap

[11:18] <jnthn> Sorry, bit distracted debugging a pathalogical parser backtracking case at $dayjob...

[11:18] *** Altai-man_ joined
[11:19] *** xelxebar joined
[11:19] <Altreus> fun stuff derailed by real work :(

[11:19] <Altreus> story of my career

[11:21] *** sena_kun left
[11:22] *** aborazmeh joined
[11:22] *** aborazmeh left
[11:22] *** aborazmeh joined
[12:04] *** vike left
[12:30] *** xelxebar left
[12:32] *** xelxebar joined
[12:34] *** cpan-raku left
[12:34] *** cpan-raku joined
[12:34] *** cpan-raku left
[12:34] *** cpan-raku joined
[13:07] *** aborazmeh left
[13:09] *** mensvaga joined
[13:14] *** Doc_Holliwood left
[13:19] *** sena_kun joined
[13:21] *** Altai-man_ left
[13:27] *** lucasb joined
[13:47] *** aborazmeh joined
[13:47] *** aborazmeh left
[13:47] *** aborazmeh joined
[14:15] *** rypervenche joined
[14:17] *** ensamvarg left
[14:28] *** wamba left
[14:32] *** mowcat joined
[14:38] *** wamba joined
[14:47] *** Itaipu_ left
[15:07] * lizmat reluctantly clickbaits https://rakudoweekly.blog/2020/03/16/2020-11-farewell-good-friend/

[15:14] <El_Che> mm

[15:17] <El_Che> it's was a nice text, lizmat 

[15:18] *** Altai-man_ joined
[15:21] *** sena_kun left
[15:55] *** aborazmeh_ joined
[15:55] *** aborazmeh_ left
[15:55] *** aborazmeh_ joined
[15:56] *** Manifest0 joined
[16:00] *** Itaipu joined
[16:01] <El_Che> is this sarcasm or is it just me: https://twitter.com/ThePerlShop/status/1239944691510120450?s=20

[16:02] <Grinnz> doesn't seem like it to me?

[16:02] *** wildtrees joined
[16:02] <El_Che> it's me then :)

[16:02] <El_Che> and that's a good thing :)

[16:03] <wildtrees> to whom it may concern: page https://docs.raku.org/language/performance needs a s/#perl6/#raku/ :) 

[16:04] <[Coke]> doesn't seem like sarcasm to me. Seems like a small factual update.

[16:04] <El_Che> not that there is something wrong with a little sarcasm :)

[16:04] <[Coke]> wildtrees: can you open an issue at github.com/Raku/doc/issues? (A pr with updates would be awesome, but an issue helps too)

[16:05] <chloekek> Changing the title of a book is probably very difficult.

[16:05] <chloekek> It would have to be a completely new book, not just a new print of a book.

[16:05] <El_Che> chloekek: I don't think so, but it would require editing inside

[16:06] <chloekek> Apparently the author is working on it.

[16:08] *** chloekek left
[16:10] *** sena_kun joined
[16:12] *** Altai-man_ left
[16:13] <tbrowder> hi, #raku people

[16:14] <tbrowder> question: is there any way to publish a raku module in our ecosystem that uses a p5 module?

[16:16] <tbrowder> i.e., can zef install p6 modules from cpan?

[16:16] <tbrowder> what about dependent linux executables?

[16:17] <tbrowder> s/p6/p5/

[16:20] <AlexDaniel> tbrowder: you can publish it, zef won't do anything automatically

[16:24] *** Itaipu_ joined
[16:25] *** Itaipu left
[16:29] <tbrowder> ok, thnx

[16:36] *** aborazmeh left
[16:36] *** aborazmeh_ is now known as aborazmeh

[16:51] *** renormalist joined
[16:53] <wildtrees> m: my @a = (1,2,3) ; say [Z] (@a,@a,@a) ; 

[16:53] <camelia> rakudo-moar 9ebbad306: OUTPUT: «((1 1 1) (2 2 2) (3 3 3))␤»

[16:53] <lizmat> El_Che: it's you

[16:53] <wildtrees> you can fold the zip operator over a list of arrays, how nice :) 

[16:54] <AlexDaniel> wildtrees: not exactly

[16:54] *** vike joined
[16:54] <AlexDaniel> I mean, you can

[16:54] <AlexDaniel> but is it nice?

[16:55] <El_Che> lizmat: good, like I said above

[16:56] <wildtrees> it's not exactly doing that in the code I passed to camelia bot? 

[16:56] <lizmat> El_Che: I just wanted to confirm a good thing  :-)

[16:58] <AlexDaniel> wildtrees: well, here:

[16:58] <AlexDaniel> m: my @a = 1,2,3; my @b = @a,@a,@a; dd @b; say [Z] @b

[16:58] <camelia> rakudo-moar 9ebbad306: OUTPUT: «Array @b = [[1, 2, 3], [1, 2, 3], [1, 2, 3]]␤((1 1 1) (2 2 2) (3 3 3))␤»

[16:58] <AlexDaniel> m: my @a = 1,2,3; my @b = @a,@a; dd @b; say [Z] @b

[16:58] <camelia> rakudo-moar 9ebbad306: OUTPUT: «Array @b = [[1, 2, 3], [1, 2, 3]]␤((1 1) (2 2) (3 3))␤»

[16:58] <AlexDaniel> m: my @a = 1,2,3; my @b = @a; dd @b; say [Z] @b

[16:58] <camelia> rakudo-moar 9ebbad306: OUTPUT: «Array @b = [1, 2, 3]␤((1 2 3))␤»

[16:58] <AlexDaniel> hmmm, hold on, it's the @b itself that is wrong?

[16:59] <AlexDaniel> ah wait

[16:59] <AlexDaniel> m: my @a = 1,2,3; my @b = @a,; dd @b; say [Z] @b

[16:59] <camelia> rakudo-moar 9ebbad306: OUTPUT: «Array @b = [[1, 2, 3],]␤((1 2 3))␤»

[16:59] <AlexDaniel> there

[17:00] <wildtrees> m: my @a = 1,2,3 ; dd @a ; 

[17:00] <camelia> rakudo-moar 9ebbad306: OUTPUT: «Array @a = [1, 2, 3]␤»

[17:01] <wildtrees> m: my @a = 1,2,3 ; my @b = @a ; dd @b ; 

[17:01] <camelia> rakudo-moar 9ebbad306: OUTPUT: «Array @b = [1, 2, 3]␤»

[17:02] <AlexDaniel> wildtrees: https://docs.raku.org/language/traps#Using_[%E2%80%A6]_metaoperator_with_a_list_of_lists

[17:02] <AlexDaniel> wildtrees: the way [ ] DWIMs is nice but it's a design flaw

[17:02] <AlexDaniel> you should be alright as long as you know about it though

[17:05] *** Voldenet joined
[17:05] *** Voldenet left
[17:05] *** Voldenet joined
[17:19] *** aborazmeh left
[17:21] *** sena_kun left
[17:33] *** skyl4rk joined
[17:34] <rypervenche> Hmm, I'm guesing that completely changing the cover is too difficult, but I feel that "Raku" should be the main name of the O'Reilly book. I hope to see that in a future version.

[17:36] *** sena_kun joined
[17:36] *** dakkar left
[17:41] *** squashable6 joined
[17:48] *** MasterDuke joined
[17:54] *** aborazmeh joined
[17:54] *** aborazmeh left
[17:54] *** aborazmeh joined
[17:59] *** chloekek joined
[18:02] *** hungrydonkey left
[18:20] *** stoned75 joined
[18:21] *** mensvaga left
[18:25] <wildtrees> m: <a b c>.map: *.say 

[18:25] <camelia> rakudo-moar 73c7ded2e: OUTPUT: «a␤b␤c␤»

[18:26] *** sauvin left
[18:26] <wildtrees> is there like a foreach or something instead of map when I just want effects but don't care about the return result? like mapM_ from haskell? 

[18:27] <Geth> ¦ doc: 0116351a5a | (Stoned Elipot)++ | doc/Type/Any.pod6

[18:27] <Geth> ¦ doc: correct plural form

[18:27] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/0116351a5a

[18:27] <linkable6> Link: https://docs.raku.org/type/Any

[18:28] <jnthn> wildtrees: Just use map in a void context, or force the void context by writing `sink <a b c>.map: *.say`

[18:31] *** [Sno] left
[18:36] *** natrys left
[18:38] <sena_kun> releasable6: status

[18:38] <releasable6> sena_kun, Next release in ≈11 days and ≈0 hours. 2 blockers. Changelog for this release was not started yet

[18:38] <releasable6> sena_kun, Details: https://gist.github.com/ce2c49e3257087346ff4388cce920879

[18:49] *** theangryepicbana joined
[18:51] *** theangryepicbana left
[18:59] *** holyghost joined
[19:07] *** Woodi left
[19:08] *** Woodi joined
[19:09] *** caterfxo left
[19:11] *** Doc_Holliwood joined
[19:14] *** hankache joined
[19:14] <hankache> hello #raku

[19:14] <tellable6> 2020-02-26T21:10:56Z #raku-dev <rba> hankache: Still like to know what you fixed to build Rakudo Star on Windows. As I'm getting the same error.

[19:14] <tellable6> hey hankache, you have a message: https://gist.github.com/414ec05f8d812bc818a2de3d20d919c5

[19:17] *** stoned75 left
[19:17] <chloekek> Is there a way to get positional arguments into a hash without repeating their names?

[19:18] <chloekek> In Perl 5 I could write: my %hash = ( foo => shift, bar => shift );

[19:19] <chloekek> I could do that in Raku but it’d be a variadic function: sub f(*@c) { my %hash = <foo bar> Z @c }.

[19:21] *** sena_kun left
[19:22] <Altreus> that sounds messy

[19:23] <Altreus> You could make a multi function where the positional form calls the named form

[19:24] *** kawaii left
[19:25] <AlexDaniel> chloekek: you can still do that if you want

[19:25] <AlexDaniel> ah that's what you said in the last message :)

[19:26] <AlexDaniel> this almost works:

[19:26] <AlexDaniel> m: sub f(|c($foo, $bar)) { dd $foo; say c.pairs }; f 42, 50

[19:26] <camelia> rakudo-moar 945a4d816: OUTPUT: «42␤(0 => 42 1 => 50)␤»

[19:31] <chloekek> p6: sub f($foo, $bar) { say MY:: }; f(1, 2)

[19:31] <camelia> rakudo-moar 945a4d816: OUTPUT: «PseudoStash.new(($! => Nil, $*DISPATCHER => (Mu), $*NEXT-DISPATCHER => (Mu), $/ => Nil, $_ => (Any), $bar => 2, $foo => 1, $¢ => Nil))␤»

[19:33] <Doc_Holliwood> m: sub foo( $bar, $baz ) { my %h = :$bar, :$baz; }; dd foo('BAR', 'BAZ')

[19:33] <camelia> rakudo-moar 945a4d816: OUTPUT: «Hash %h = {:bar("BAR"), :baz("BAZ")}␤»

[19:33] <Doc_Holliwood> chloekek: this? ^^

[19:33] <AlexDaniel> “without repeating their names” :)

[19:34] <chloekek> Still have to write the argument names twice, but that’s better than bar => $bar :)

[19:35] <tadzik> well, you can probably still use @_ and shift like in Perl 5, for the most part :)

[19:35] *** sena_kun joined
[19:36] <tadzik> m: sub foo(*@args) { my %h = foo => @args.shift, bar => @args.shift; say %h.perl }; foo('bar', 'baz')

[19:36] <camelia> rakudo-moar 945a4d816: OUTPUT: «{:bar("baz"), :foo("bar")}␤»

[19:36] <AlexDaniel> m: sub f($foo, $bar) { dd $_ for &?ROUTINE.signature.params }; f 42, 50

[19:36] <camelia> rakudo-moar 945a4d816: OUTPUT: «Parameter $foo = $foo␤Parameter $bar = $bar␤»

[19:36] <tadzik> oh that's just lovely AlexDaniel :D

[19:36] <AlexDaniel> but then what? Look it up by name in MY:: ?

[19:36] <tadzik> it's a good lead

[19:36] <tadzik> you can eval them :>

[19:37] <Grinnz> MY::? /me has ExtUtils::MakeMaker flashbacks

[19:37] <tadzik> OH::MY

[19:39] <tadzik> hrm, I seem to recall a time when you could declare a sub with no signature and it'd work Perl5 style... do I misremember?

[19:39] <tadzik> now it doesn't compile as it assumes the signature is ()

[19:39] <AlexDaniel> m: sub f($foo, $bar) { say $_, ‘ – ’, ::(.name) for &?ROUTINE.signature.params }; f 42, 50

[19:39] <camelia> rakudo-moar 945a4d816: OUTPUT: «$foo – 42␤$bar – 50␤»

[19:39] <tadzik> AlexDaniel++

[19:40] <AlexDaniel> still not a hash though

[19:40] <AlexDaniel> but that's much easier to figure out

[19:43] <AlexDaniel> m: sub f($foo, $bar) { dd &?ROUTINE.signature.params.map({.name => ::(.name)}).hash }; f 42, 50

[19:43] <camelia> rakudo-moar 945a4d816: OUTPUT: «Hash % = {("\$bar") => 50, ("\$foo") => 42}␤»

[19:43] <AlexDaniel> maybe there's a shorter way

[19:43] <AlexDaniel> btw I don't know why it puts () around keys

[19:43] <AlexDaniel> 6c: sub f($foo, $bar) { dd &?ROUTINE.signature.params.map({.name => ::(.name)}).hash }; f 42, 50

[19:44] <committable6> AlexDaniel, https://gist.github.com/d99f4633f7c372e03360c207cd8732d6

[19:44] <AlexDaniel> riiiiiight

[19:44] <AlexDaniel> bisect: sub f($foo, $bar) { dd &?ROUTINE.signature.params.map({.name => ::(.name)}).hash }; f 42, 50

[19:44] <bisectable6> AlexDaniel, Bisecting by output (old=2015.12 new=945a4d8) because on both starting points the exit code is 0

[19:44] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/50efe65176d9bc8413130f53db7e2bdc

[19:44] <bisectable6> AlexDaniel, (2020-01-06) https://github.com/rakudo/rakudo/commit/08aec410ef68251e3bdad0987528e50c9087c687

[19:47] <AlexDaniel> c: 08aec410ef6^,08aec410ef6 ("\$foo") => 42

[19:47] <committable6> AlexDaniel, ¦08aec410ef6^,08aec41: «WARNINGS for /tmp/5smSwNEVBz:␤Useless use of "=>" in expression "(\"\\$foo\") => 42" in sink context (line 1)␤»

[19:47] <AlexDaniel> c: 08aec410ef6^,08aec410ef6 (‘$foo’ => 42).raku.say

[19:47] <committable6> AlexDaniel, ¦08aec410ef6^: «"\$foo" => 42␤» ¦08aec41: «("\$foo") => 42␤»

[19:48] <AlexDaniel> R#3555

[19:48] <linkable6> R#3555 [open]: https://github.com/rakudo/rakudo/issues/3555 [LTA][regression] pair.raku adds unnecessary parens

[19:55] <wildtrees> what does ~= do in raku? 

[19:56] <Altreus> x = x ~ y

[19:56] <Altreus> same as += except for ~

[19:57] *** aborazmeh left
[20:07] *** hankache left
[20:09] *** lizmat joined
[20:15] *** rouking joined
[20:15] <rouking> It looks like the download instructions on raku.org are out of sync with the directory structure on rakudo.org

[20:16] <rouking> the correct link is https://rakudo.org/dl/star/rakudo-star-2020.01.tar.gz

[20:17] <rouking> The instructions have "downloads" instead of "dl" there

[20:19] *** wamba left
[20:25] *** molaf joined
[20:25] *** mensvaga joined
[20:27] * matiaslina uploaded an image: 2020-03-17-172716_460x236_scrot.png (39KB) < https://matrix.org/_matrix/media/r0/download/matrix.deprecated.org/CwHGdWAAioLndBZulWsEXzst >

[20:39] *** dogbert17 joined
[20:41] *** wildtrees left
[20:43] *** wildtrees joined
[20:46] *** wildtrees left
[20:46] *** wildtrees joined
[20:56] *** Black_Ribbon joined
[21:00] <AlexDaniel`> Matias: heh

[21:01] <wildtrees> how do I check if an instance of an object is a certain class hierarchy or does a certain role at runtime? 

[21:02] <lizmat> m: say Int ~~ Numeric

[21:02] <camelia> rakudo-moar 945a4d816: OUTPUT: «True␤»

[21:02] *** [Sno] joined
[21:02] <lizmat> wildtrees: aka ~~ it

[21:02] <lizmat> m: say 42 ~~ Int

[21:02] <camelia> rakudo-moar 945a4d816: OUTPUT: «True␤»

[21:02] <lizmat> m: say 42 ~~ Rat

[21:02] <camelia> rakudo-moar 945a4d816: OUTPUT: «False␤»

[21:03] <matiaslina> AlexDaniel: Oops. Wrong room.

[21:03] <matiaslina> sry!

[21:04] <AlexDaniel`> Matias: surprisingly on IRC it did upload the image :) But of course deletions don't work

[21:13] *** lizmat left
[21:13] *** lizmat joined
[21:17] <matiaslina> Yeah, the bridge sends the public link. Really don't know if irc supports deletion of messages

[21:20] *** sena_kun left
[21:26] *** rindolf left
[21:27] *** ufobat_ left
[21:35] *** sena_kun joined
[21:37] *** TeamBlast left
[21:37] *** TeamBlast joined
[21:41] <lizmat> this feels like an interesting problem to fix with a Supply: https://twitter.com/AlanSwithenbank/status/1240029424734449665

[21:43] * Grinnz instinctually thinks "show code"

[21:45] *** rouking left
[21:52] *** chloekek left
[22:06] *** sivoais joined
[22:25] *** __jrjsmrtn__ joined
[22:29] *** dotdotdot left
[22:30] *** dotdotdot joined
[22:36] <guifa> Let’s say someone wanted to do have a “use Fortran;” statement in a block, and have the entire block evaluated as if it were Fortran.  I know how to set up the grammar and actions, but I’m not sure how to set up the slangy part.  (I know how to do it if, for instance, it were going to be “fortran { … }”, as there’s a few examples of doing that with, e.g. SQL)

[22:36] *** lucasb left
[22:36] <guifa> The P5 model is a bit overwhelming for me to follow

[22:44] <MasterDuke> guifa: i think Slang::Tuxic might be a simple example of doing what you're talking about

[22:55] <guifa> Hmm that just seems to modify a few tokens.  Could I go so far as to modify the TOP token?

[23:20] *** sena_kun left
[23:23] *** mowcat left
[23:27] *** hungrydonkey joined
[23:35] <MasterDuke> i don't actually know, i've never worked with slangs at all

[23:35] *** sena_kun joined
[23:43] *** TeamBlast left
[23:44] *** TeamBlast joined
[23:59] *** agentzh joined
[23:59] *** agentzh left
[23:59] *** agentzh joined
