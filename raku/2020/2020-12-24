[00:10] *** kensanata left
[00:14] <tony-o> guifa2: do you mean through use of grammars?

[00:14] <tellable6> 2020-12-23T22:23:34Z #raku <patrickb> tony-o password reading seems to work on my machine. (Unless the server accepts empty passwords and the prompt just ignored all input or something similar went wrong).

[00:15] <tony-o> .tell patrickb i'll merge winpass and that should get rid of the gcc requirement

[00:15] <tellable6> tony-o, I'll pass your message to patrickb

[00:19] <notagoodidea> Is it a pratical reason why permutations refuses to accepts more than 20 elements?

[00:19] <guifa2> tony-o: if they're modifying Raku's grammar, absolutely

[00:20] <guifa2> Basically, I'm thinking of things that integrate with the language at a level that's impossible in most other languages, which makes using them feel very natural

[00:23] *** schlaftier left
[00:29] <guifa2> sort of like how cro lets you say "route { … }" 

[00:30] *** xinming_ left
[00:30] *** xinming_ joined
[00:44] *** xinming_ left
[00:45] *** xinming_ joined
[00:53] *** monkey_ joined
[00:56] *** pecastro left
[01:27] *** monkey_ left
[01:34] *** frost-lab joined
[01:46] *** xinming_ left
[01:46] *** xinming_ joined
[01:49] *** lucasb left
[01:56] *** xinming_ left
[01:57] *** xinming_ joined
[02:03] *** mowcat left
[02:11] <leont> guifa2: "seamless integration with Raku" is rather poorly defined, if you ask me

[02:19] *** Doc_Holliwood left
[02:31] <notagoodidea> \exit

[02:31] *** notagoodidea left
[02:33] *** xinming_ left
[02:34] *** xinming_ joined
[02:35] *** thdrmz left
[02:41] *** leont left
[02:51] *** xinming_ left
[02:52] *** xinming_ joined
[02:52] *** jmchael left
[03:00] *** rindolf joined
[03:07] <[Coke]> m: my @data[2;2] = [[1,2],[3,4]]; my @adta[2;2] = [[1,2],[3,4]]; say @data eqv @adta;

[03:07] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «Partially dimensioned views of shaped arrays not yet implemented. Sorry.␤  in block <unit> at <tmp> line 1␤␤»

[03:24] *** xinming_ left
[03:24] *** xinming_ joined
[04:01] *** xinming_ left
[04:02] *** xinming_ joined
[04:14] *** __jrjsmrtn__ joined
[04:14] *** _jrjsmrtn left
[04:18] *** guifa2 left
[04:20] *** cooper joined
[04:47] *** aborazmeh joined
[04:47] *** aborazmeh left
[04:47] *** aborazmeh joined
[04:59] *** xinming_ left
[05:01] *** xinming_ joined
[05:07] *** Doc_Holliwood joined
[05:09] *** xinming_ left
[05:10] *** xinming_ joined
[05:20] *** SmokeMachine left
[05:20] *** jhill left
[05:20] *** BuildTheRobots left
[05:20] *** SmokeMachine joined
[05:22] *** jhill joined
[05:22] *** BuildTheRobots joined
[05:38] <Geth> ¦ ecosystem: 931b173f54 | (Elizabeth Mattijsen)++ | META.list

[05:38] <Geth> ¦ ecosystem: Make GTK::Simple available in the ecosystem again

[05:38] <Geth> ¦ ecosystem: 

[05:38] <Geth> ¦ ecosystem: At least until the repo has been properly transferred to finanalyst++

[05:38] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/931b173f54

[05:47] *** aborazmeh left
[05:52] *** schlaftier joined
[05:52] *** brtastic joined
[06:05] *** brtastic left
[06:06] *** brtastic joined
[06:14] *** parabolize left
[06:17] *** Altai-man joined
[06:35] *** Doc_Holliwood left
[07:02] *** brtastic left
[07:11] *** aluaces joined
[07:17] *** ChoppedBacon left
[07:19] *** ChoppedBacon joined
[07:35] *** brtastic joined
[07:39] *** xinming_ left
[07:39] *** xinming_ joined
[08:17] *** brtastic left
[08:29] *** xinming_ left
[08:30] *** xinming_ joined
[08:32] *** Sgeo left
[08:36] <Geth> ¦ problem-solving: JJ self-assigned Documentation and the ecosystem https://github.com/Raku/problem-solving/issues/252

[08:39] *** warriors joined
[08:46] *** xinming_ left
[08:46] *** xinming_ joined
[08:49] *** pecastro joined
[08:58] *** Black_Ribbon left
[09:01] *** ChoppedBacon left
[09:02] *** ChoppedBacon joined
[09:10] *** sena_kun joined
[09:12] *** Altai-man left
[09:12] *** frost-lab left
[09:18] *** xinming_ left
[09:19] *** xinming_ joined
[09:32] *** tib_ left
[09:57] *** sjm_uk joined
[10:09] *** thdrmz joined
[10:14] *** Doc_Holliwood joined
[10:19] *** frost-lab joined
[10:22] *** frost-lab left
[10:34] *** frost-lab joined
[10:36] *** thdrmz left
[10:39] *** thdrmz joined
[10:42] *** kensanata joined
[10:57] *** thdrmz left
[11:08] *** warriors left
[11:38] *** jmchael joined
[11:42] *** leont joined
[11:54] *** wamba joined
[12:05] *** notandinus left
[12:07] *** notandinus joined
[12:20] *** Tirifto joined
[12:27] <tbrowder> Merry Christmas Eve!

[12:28] <tbrowder> is there a way to define two constants with the same value in the same statement?

[12:29] <tbrowder> m: constant $x = $y = 4

[12:29] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$y' is not declared␤at <tmp>:1␤------> 3constant $x = 7⏏5$y = 4␤»

[12:29] <lizmat> best wishes returned!  :-)

[12:29] <tbrowder> m: constant ($x = $y = 4)

[12:29] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing initializer on constant declaration␤at <tmp>:1␤------> 3constant7⏏5 ($x = $y = 4)␤»

[12:30] <lizmat> m: constant $x = (constant $y = 4);  dd $x, $y

[12:30] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$y' is not declared␤at <tmp>:1␤------> 3onstant $x = (constant $y = 4);  dd $x, 7⏏5$y␤»

[12:30] <lizmat> m: my constant $x = (my constant $y = 4);  dd $x, $y

[12:30] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$y' is not declared␤at <tmp>:1␤------> 3tant $x = (my constant $y = 4);  dd $x, 7⏏5$y␤»

[12:30] <tbrowder> constant ($x, $y) = 0,0

[12:31] <lizmat> m: my constant ($x, $y) = 0,0

[12:31] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing initializer on constant declaration␤at <tmp>:1␤------> 3my constant7⏏5 ($x, $y) = 0,0␤»

[12:31] <lizmat> m: my $constant $y = 4; my constant $x = $y; dd $x, $y

[12:31] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3my $constant7⏏5 $y = 4; my constant $x = $y; dd $x, $y␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        …»

[12:31] <lizmat> m: my constant $y = 4; my constant $x = $y; dd $x, $y

[12:31] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «4␤4␤»

[12:32] <lizmat> ^^ closest thing I think

[12:32] <tbrowder> thnx, it would be handy for aliasing which is my real use case, e.g.

[12:33] <tbrowder> my $reallongvar = $x # it would be self-documenting

[12:37] <tbrowder> m: (constant x, constant y)=0,0

[12:37] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing initializer on constant declaration␤at <tmp>:1␤------> 3(constant x7⏏5, constant y)=0,0␤»

[12:38] *** frost-lab left
[12:38] <tbrowder> m: constant x = constant y = 0

[12:38] <camelia> rakudo-moar 4b6b2e070: ( no output )

[12:39] <tbrowder> m: constant x = constant y = 0; say x

[12:39] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «0␤»

[12:39] <tbrowder> not too bad

[12:40] *** xinming_ left
[12:40] *** xinming_ joined
[12:41] <tbrowder> m: const = &constant; const x = const y = 0; say y

[12:41] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix = instead.␤Did you make a mistake in Pod syntax?␤at <tmp>:1␤------> 3const =7⏏5 &constant; const x = const y = 0; say y␤»

[13:01] *** kensanata left
[13:09] *** Altai-man joined
[13:10] *** xinming_ left
[13:11] *** xinming_ joined
[13:12] *** sena_kun left
[13:36] *** xinming_ left
[14:13] <tbrowder> bummer: the constant thingy above doesn't work in real life.

[14:14] <tbrowder> m: constant x = constant y = 0: say x; say y

[14:14] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3constant x = constant y = 0:7⏏5 say x; say y␤    expecting any of:␤        colon pair␤»

[14:14] <tbrowder> arg!

[14:15] <tbrowder> m: constant x = constant y = 0; say x; say y

[14:15] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «0␤0␤»

[14:15] <tbrowder> hm, doesnt work on local host...

[14:19] <tbrowder> aha, it seems the sigil i used on local host is the culprit:

[14:20] <tbrowder> m: constant $x = constant $y = 0; say $x; say $y

[14:20] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$y' is not declared␤at <tmp>:1␤------> 3stant $x = constant $y = 0; say $x; say 7⏏5$y␤»

[14:22] <tbrowder> m: constant $x = my constant $y = 0; say $x; say $y

[14:22] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$y' is not declared␤at <tmp>:1␤------> 3nt $x = my constant $y = 0; say $x; say 7⏏5$y␤»

[14:23] <tbrowder> so there is something magic about constants and sigils i guess.

[14:36] *** linkable6 left
[14:36] *** evalable6 left
[14:37] *** evalable6 joined
[14:38] *** linkable6 joined
[14:49] <masak> tbrowder: looks like a bug to me

[14:49] <masak> (hi, #raku)

[14:49] <lizmat> masak o/

[14:49] <lizmat> ltns

[14:49] <masak> that's a Chinese expression :) and yes

[14:49] <tbrowder> hi

[14:51] <tbrowder> masak: ok, i'll file one

[14:52] <masak> either a name `$y` should've been declared, or `constant $y` shouldn't've parsed

[14:54] <tbrowder> when i used the sigiless version in my program, shouldn't i be able to use them in quoted strings if i put them in curlies? i tried and i'm still debugging so may be other offending pieces. i'll try here...

[14:54] <tbrowder> m: constant x = 4,

[14:54] <camelia> rakudo-moar 4b6b2e070: ( no output )

[14:55] <tbrowder> m: constant x =4.2; say "x = {x}"

[14:55] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «x = 4.2␤»

[14:55] <tbrowder> ok, good

[14:55] <masak> m: say "x = {constant x = 4.2}"

[14:55] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «x = 4.2␤»

[14:56] <masak> m: say "y = {constant $x = constant $y = 1}"

[14:56] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «y = 1␤»

[14:58] <tbrowder> m: constant x =3; my $z=2; say "x+z = {$z+x}"

[14:58] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «x+z = 5␤»

[14:58] <tbrowder> good. i must have my own prog bug, what a concept  ;-D

[14:59] <tbrowder> merry christmas, all

[15:11] <masak> m: say Array.^name

[15:11] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «Array␤»

[15:12] <masak> m: say Array.^name.subst("A", "Me").subst("a", "") ~ " Christmas"

[15:12] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «Merry Christmas␤»

[15:12] <masak> :D

[15:17] *** wamba1 joined
[15:17] *** wamba left
[15:19] *** Sgeo joined
[15:22] *** wamba1 left
[15:25] *** sno left
[15:35] *** guifa2 joined
[15:39] *** wamba joined
[15:43] *** thdrmz joined
[16:02] *** parabolize joined
[16:06] *** wamba left
[16:11] *** cpan-raku left
[16:17] *** cpan-raku joined
[16:17] *** cpan-raku left
[16:17] *** cpan-raku joined
[16:20] *** thdrmz left
[16:21] *** thdrmz joined
[16:32] *** xinming joined
[16:58] *** guifa2 left
[17:05] *** thdrmz left
[17:07] *** guifa2 joined
[17:09] <guifa2> leont: sure, it's intentionally not well defined

[17:10] *** sena_kun joined
[17:10] <guifa2> but what I?m looking for is something that goes beyond just "here's a class that does X or here's a sub that does Y" which is what a lot of modules are (and there's nothing wrong with that, of course)

[17:11] *** Altai-man left
[17:13] *** guifa2 left
[17:14] *** guifa2 joined
[17:14] <leont> I think my Path::Finder module is a good example of "this is something you can't do without named arguments and smartmatch", would that count?

[17:16] <leont> e.g. find(@dirs, :file, :name<foo.*>, size(* > 1024), :depth(1..3), :!follow-symlinks)

[17:17] <leont> Er, :size

[17:27] *** natrys joined
[17:45] *** lucasb joined
[18:11] *** b2gills left
[18:25] *** b2gills joined
[18:54] *** lizmat_ joined
[18:58] *** lizmat left
[19:05] *** lizmat_ left
[19:06] *** lizmat joined
[19:19] *** lizmat_ joined
[19:21] *** lizmat left
[19:26] *** guifa2 left
[19:32] *** lizmat_ is now known as lizmat

[19:34] *** wamba joined
[20:16] *** Black_Ribbon joined
[20:19] *** sjm_uk left
[20:29] *** wamba left
[20:36] *** mowcat joined
[21:09] *** Altai-man joined
[21:11] *** sena_kun left
[21:31] *** rindolf left
[21:45] *** ChoppedBacon left
[21:46] *** ChoppedBacon joined
[21:57] *** Altai-man left
[22:13] *** wamba joined
[22:34] *** grondilu joined
[22:57] *** natrys left
[23:10] *** lizmat_ joined
[23:13] *** wamba left
[23:13] *** lizmat left
[23:15] *** lizmat_ is now known as lizmat

[23:30] *** cpage left
[23:34] *** cpage joined
[23:47] *** Kaiepi left
[23:54] <timotimo> :size(1024..*) :)

[23:54] <timotimo> m: say 1024..

[23:54] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing required term after infix␤at <tmp>:1␤------> 3say 1024..7⏏5<EOL>␤    expecting any of:␤        prefix␤        term␤»

[23:54] <timotimo> m: say 1024..*

[23:54] <camelia> rakudo-moar 4b6b2e070: OUTPUT: «1024..Inf␤»

