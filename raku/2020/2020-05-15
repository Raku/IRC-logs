[00:01] *** melezhik left
[00:18] *** aborazmeh joined
[00:18] *** aborazmeh left
[00:18] *** aborazmeh joined
[00:25] *** Xliff joined
[00:31] <Xliff> \o

[00:31] <tellable6> 2020-05-07T10:50:55Z #raku <MasterDuke> Xliff: looks like the fastest is something like `my Buf $b =  <...>; my $ca = CArray[uint8].allocate($b.elems); @$ca = @$b`

[00:31] <tellable6> hey Xliff, you have a message: https://gist.github.com/5fdc4d64aae1323e567c3376e45de2bd

[00:31] <Xliff> Hey all! Long time no type.

[00:31] <Xliff> I hit it. 400k lines of Raku in 2 years!

[00:31] <Xliff> https://drive.google.com/file/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/view?usp=sharing

[00:31] <Xliff> Personal goal reached.

[00:31] <Xliff> :)

[00:32] <Xliff> .tell MasterDuke Ooh! Thanks!

[00:32] <tellable6> Xliff, I'll pass your message to MasterDuke

[00:32] *** konvertex left
[00:38] <Xliff> What this means? Hopefully now I will have time between this completion and $dayJob to finish work on the Raku changes I've been working on... LOL

[01:05] *** patrickz left
[01:36] *** molaf left
[01:41] <tigerpaws> Supposing I wish to convert some XS module from perl5 to raku. What is the recommended approach? 

[01:43] <Xliff> tigerpaws: NativeCall. What modules are you interested in?

[01:50] *** molaf joined
[01:51] *** pilne left
[02:04] <tigerpaws> I'm looking at interfacing tensorflow, but that needs google's protobuff. For that, I found https://code.google.com/archive/p/protobuf-perlxs/. I don't know how old it is, but at worst it might give me a headstart. 

[02:05] <Xliff> Looking...

[02:05] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:06] <Xliff> Damn. File not found.

[02:07] *** ensamvarg_g6 joined
[02:07] <Xliff> Found this

[02:07] <Xliff> https://github.com/spiritloose/protobuf-perlxs

[02:09] <tigerpaws> Ah. Good catch. I was about to download the source and move it manually to github.  It's not so old. I was worried it might be 2008 or something. 

[02:10] <Xliff> I think the best bet is to take the XS code and convert it using NativeCall. It's not trivial, though. I tried doing this with libxml2 and it I never finished.

[02:11] <Xliff> So it looks like this code needs to be run against something. Do you know what?

[02:12] <tigerpaws> But what I saw of NativeCall (not actually having used it yet) it seems generally simpler than XS.  Yes, the code is run against .proto files that specify the interface to google libraries, in my case, tensorflow. 

[02:15] <tigerpaws> The protocode is a grammar specifying the interface parameters to the different library functions. I expect to use the tensorflow C library directly, but there are a lot of functions, and they may change, since the api is not yet stable. It's safer for me to use tensorflow's .proto files so I can catch changes as they happen. 

[02:15] <Xliff> I think the best thing to do is convert this to a set of NativeCall defs: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/c/c_api.h

[02:15] <Xliff> Do you have examples of the .proto files?

[02:17] <tigerpaws> yes. for example, https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/protobuf/cluster.proto

[02:18] <Xliff> Hmmm... I'd have to examine this more closely before I could provide you a strategy.

[02:18] <tigerpaws> But you may be right, maybe I'm better off going directly to the C api and just using the proto files as examples. 

[02:18] <Xliff> I think so.

[02:18] <Xliff> If you would like, I'd be happy to help you with this.

[02:21] <tigerpaws> There are a lot of protobuf files in that directory. Yes, I would certainly appreciate some help. I'll start by cloning the tensorflow C api. The description for adding new language bindings to tensorflow is minimal, but at least they specify the minimum set of classes we need. 

[02:22] <tigerpaws> So I'll start with bare skeletons of all the classes, then see how to fill them in. 

[02:22] <Xliff> It's better if you don't use C++ and go straight to the C API.

[02:23] <Xliff> But go ahead and break things down into classes and we'll touch base. You have my email, right?

[02:24] <tigerpaws> Yes, C++ would require another level of wrappers. What's your email? 

[02:24] <Xliff> Check your PMs

[02:24] <tigerpaws> ??

[02:25] <Xliff> Oh. I never sent it... LOL!

[02:25] <Xliff> I just did.

[02:25] <tigerpaws> PM=private message?  Got it. Thanks. 

[02:28] <tigerpaws> Let me get a skeleton going. I intend to try to interface tensorflow into raku so we can run tensorflow with native raku vector objects. I'm realtively new to raku, but have over 20 years of perl experience. Now I'd like to help raku get some traction where python runs the world. 

[02:30] <Xliff> Excellent! Sounds like a plan!

[02:31] <Xliff> Looking forward to working with you.

[02:31] <tigerpaws> I'm also wondering whether having Inline::J (https://www.jsoftware.com/#/README)  might be interesting. It's faster than numpy for matrix stuff. It's an APL offshoot

[02:31] <tigerpaws> Trouble is, it's not open source. 

[02:32] <tigerpaws> It is a C library. 

[02:32] <Xliff> Does it have header files?

[02:32] <tigerpaws> and the source is available. It has header files. 

[02:33] <Xliff> As long as we have that, we can use it. We'll just have to be very careful with the licensing issues.

[02:33] <tigerpaws> Those are my two project ideas. J is free for non-commercial use. For commercial use, a license is required from jsoftware. 

[02:35] <tigerpaws> I haven't seen any place where J has been embedded, so I don't know how it might work. I an sending them an email to find out how receptive they are to the idea, and how it might work. 

[02:36] <Xliff> Well, I assume we will start this out as non-commercial and move from there, so the initial work should be covered, yes?

[02:36] <Xliff> However an exploratory email is as good idea.

[02:36] <Xliff> BTW - Here are some of the projects I've been working on, if you are curious: https://drive.google.com/file/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/view?usp=sharing

[02:37] <Xliff> Think of that as a CV ... :)

[02:39] <tigerpaws> Great. Your knowledge of spreadheets might come in handy on the data loading side... tensorflow eats data like there was no tomorrow. 

[02:41] <tigerpaws> As for J, I was not worried about the non-commercial side, just how much assistance they might be willing to provide (especially if we run into bugs in their library). 

[02:43] <Xliff> OK.

[02:45] *** poohman joined
[02:45] <tigerpaws> Thanks for offering to help. I'll get back to you as soon as I have a skeleton built on github.  Have a good evening!

[02:49] *** aborazmeh left
[03:48] *** Itaipu left
[03:51] *** brtastic joined
[03:52] *** poohman left
[03:58] <elcaro> Hey... so can someone explain to me what "relocatable" builds are, and why I would (or would not) want it?

[04:08] *** xelxebar left
[04:10] *** poohman joined
[04:22] *** xelxebar joined
[04:36] *** flyingtiger left
[04:53] *** poohman left
[04:57] *** Itaipu joined
[05:05] *** brtastic left
[05:07] *** mayuresh joined
[05:07] <mayuresh> hello. :)

[05:07] <tellable6> 2020-05-09T07:29:20Z #raku <nine> mayuresh: it's quite common for the channel to be quiet when Europe is asleep

[05:13] *** mayuresh left
[05:13] *** mayuresh joined
[05:19] <mayuresh> anyone active?

[05:19] <mayuresh> i guess not!

[05:19] <mayuresh> see you all after 12 hours.

[05:20] *** mayuresh left
[05:27] *** sauvin joined
[05:30] *** brtastic joined
[05:39] <Geth> ¦ doc/fix-link: 5b2ff62290 | (Stoned Elipot)++ | doc/Language/list.pod6

[05:39] <Geth> ¦ doc/fix-link: Fix link

[05:39] <Geth> ¦ doc/fix-link: review: https://github.com/Raku/doc/commit/5b2ff62290

[05:39] <Geth> ¦ doc: stoned++ created pull request #3406: Fix link

[05:39] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3406

[05:43] *** poohman joined
[05:46] *** sjm_uk joined
[05:54] <Geth> ¦ doc/fix-link: c816f08079 | (Stoned Elipot)++ | doc/Language/list.pod6

[05:54] <Geth> ¦ doc/fix-link: fix link

[05:54] <Geth> ¦ doc/fix-link: review: https://github.com/Raku/doc/commit/c816f08079

[06:09] <poohman> hello all,

[06:10] <poohman> do we have the concept of car and cdr from lisp

[06:10] <poohman> ?

[06:10] <poohman> for our lists and arrays?

[06:10] <poohman> or we should manipulate the arrays with tail or something similar?

[06:14] <poohman> guifa2 - wrote a regex for what was needed, but the Intl::Numbers look interesting - will have a look - thanks

[06:29] <Geth> ¦ doc: 5b2ff62290 | (Stoned Elipot)++ | doc/Language/list.pod6

[06:29] <Geth> ¦ doc: Fix link

[06:29] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/5b2ff62290

[06:29] <Geth> ¦ doc: c816f08079 | (Stoned Elipot)++ | doc/Language/list.pod6

[06:29] <Geth> ¦ doc: fix link

[06:29] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/c816f08079

[06:29] <Geth> ¦ doc: fdb6afdaad | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/list.pod6

[06:29] <Geth> ¦ doc: Merge pull request #3406 from Raku/fix-link

[06:29] <linkable6> Link: https://docs.raku.org/language/list

[06:29] <Geth> ¦ doc: 

[06:29] <Geth> ¦ doc: Fix link

[06:29] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/fdb6afdaad

[06:32] <Geth> ¦ doc: b6c5380990 | (Tom Browder)++ | 12 files

[06:32] <Geth> ¦ doc: Replace 'RESUME:' with 'OUTPUT:' for consistency

[06:32] <Geth> ¦ doc: 

[06:32] <Geth> ¦ doc: The latest convention for the docs is to show output in examples in

[06:32] <Geth> ¦ doc: this manner:

[06:32] <Geth> ¦ doc: 

[06:32] <Geth> ¦ doc:    ...some Raku code...   # OUTPUT: <<...some example output...\n>>

[06:32] <Geth> ¦ doc: 

[06:32] <Geth> ¦ doc: <…commit message has 21 more lines…>

[06:32] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/b6c5380990

[06:32] <Geth> ¦ doc: 3e742e8f2e | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 12 files

[06:32] <Geth> ¦ doc: Merge pull request #3405 from tbrowder/indie-output

[06:32] <Geth> ¦ doc: 

[06:32] <Geth> ¦ doc: Replace 'RESULT' with 'OUTPUT:' for consistency

[06:32] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/3e742e8f2e

[06:34] *** jjmerelo joined
[06:43] *** sjm_uk left
[06:45] *** sjm_uk joined
[06:46] <poohman> m: my @a=1 .. 10; for @a.kv -> $cnt,$val{for @a.tail(@a.elems-$cnt) ->$t {say $t}}

[06:46] <camelia> rakudo-moar f33ce01c1: OUTPUT: «5===SORRY!5===␤Shape declaration is not yet implemented; please use whitespace if you meant something else␤at <tmp>:1␤------> 3my @a=1 .. 10; for @a.kv -> $cnt,$val7⏏5{for @a.tail(@a.elems-$cnt) ->$t {say $t␤Malformed parameter␤at …»

[06:46] <poohman> m: my @a=1 .. 10; for @a.kv -> $cnt,$val {for @a.tail(@a.elems-$cnt) ->$t {say $t}}

[06:46] <camelia> rakudo-moar f33ce01c1: OUTPUT: «1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤2␤3␤4␤5␤6␤7␤8␤9␤10␤3␤4␤5␤6␤7␤8␤9␤10␤4␤5␤6␤7␤8␤9␤10␤5␤6␤7␤8␤9␤10␤6␤7␤8␤9␤10␤7␤8␤9␤10␤8␤9␤10␤9␤10␤10␤»

[06:47] <poohman> in the above example do we have an idiomatic way or a simpler way than using  @a.tail(@a.elems-$cnt)??

[06:51] <guifa2_> poohman: hmm...

[06:52] <guifa2_> Are you needing the elements like that, or just wanting a list of lists?

[06:52] <guifa2_> (e.g., (1..10), (2..10), (3..10), etc)

[06:53] <poohman> list of lists I guess

[06:53] <poohman> want it for recursion

[06:54] <poohman> just like cdr in lisp

[06:56] * guifa2_ doesn't know lisp so .... hopefully he can help

[06:56] <guifa2_> I would do this

[06:57] <guifa2_> m: my @a = 1..10;  for ^@a -> $c { .say for @a.tail(@a - $c) }

[06:57] <camelia> rakudo-moar f33ce01c1: OUTPUT: «1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤2␤3␤4␤5␤6␤7␤8␤9␤10␤3␤4␤5␤6␤7␤8␤9␤10␤4␤5␤6␤7␤8␤9␤10␤5␤6␤7␤8␤9␤10␤6␤7␤8␤9␤10␤7␤8␤9␤10␤8␤9␤10␤9␤10␤10␤»

[06:58] <guifa2_> theoretically you shoul dbe able to do @a.tail(* - $c) but for some reason it's not taking.

[07:09] *** patrickb joined
[07:14] *** cpan-raku left
[07:15] *** cpan-raku joined
[07:15] *** cpan-raku left
[07:15] *** cpan-raku joined
[07:17] *** jjmerelo left
[07:19] *** Altai-man_ joined
[07:40] *** pecastro joined
[07:50] <Kaiepi> m: my @a = (1..10); for @a -> $c { .say for @a.skip: $c }

[07:50] <camelia> rakudo-moar f33ce01c1: OUTPUT: «2␤3␤4␤5␤6␤7␤8␤9␤10␤3␤4␤5␤6␤7␤8␤9␤10␤4␤5␤6␤7␤8␤9␤10␤5␤6␤7␤8␤9␤10␤6␤7␤8␤9␤10␤7␤8␤9␤10␤8␤9␤10␤9␤10␤10␤»

[07:51] <Kaiepi> m: my @a = (1..10); for @a -> $c { .say for @a.skip: $c - 1 }

[07:51] <camelia> rakudo-moar f33ce01c1: OUTPUT: «1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤2␤3␤4␤5␤6␤7␤8␤9␤10␤3␤4␤5␤6␤7␤8␤9␤10␤4␤5␤6␤7␤8␤9␤10␤5␤6␤7␤8␤9␤10␤6␤7␤8␤9␤10␤7␤8␤9␤10␤8␤9␤10␤9␤10␤10␤»

[08:11] *** jjmerelo joined
[08:18] *** xinming left
[08:19] *** xinming joined
[08:19] *** poohmaan joined
[08:23] *** poohman left
[08:23] *** ufobat_ left
[08:26] *** sena_kun joined
[08:27] *** Altai-man_ left
[08:30] *** jast joined
[08:33] *** konvertex joined
[09:07] *** Black_Ribbon left
[09:19] *** molaf left
[09:21] *** rindolf joined
[09:39] *** andreoss joined
[09:42] *** sour joined
[09:53] *** xinming left
[09:53] *** xinming joined
[09:58] *** ufobat joined
[10:25] *** Altai-man_ joined
[10:27] *** sena_kun left
[11:21] <Altai-man_> .tell AlexDaniel` 2020.02.1 was very, very ad-hoc and I'm a bit surprised it's a single issue. Glad we even made it and glad dyncall folks now test on musl before releasing a new version. :)

[11:21] <tellable6> Altai-man_, I'll pass your message to AlexDaniel`

[11:27] *** evalable6 left
[11:28] *** evalable6 joined
[11:33] *** Kaiepi left
[11:33] *** Kaiepi joined
[12:01] *** clarkema joined
[12:03] *** poohmaan left
[12:23] *** abraxxa left
[12:26] *** sena_kun joined
[12:27] *** Altai-man_ left
[12:32] *** sour left
[12:37] *** dpk left
[12:38] *** dpk joined
[12:40] *** sour joined
[12:49] *** thundergnat joined
[12:49] *** dpk left
[12:50] *** jjmerelo left
[12:50] <thundergnat> bisectable6: 2020.20 say $_, ', ', +$_ for |(^0x0FFF).grep( { .chr ~~ /<:Nd>/ and .unival == 1|2|3 }).batch(3)».chr».join;

[12:50] <bisectable6> thundergnat, On both starting points (old=2015.12 new=b874c68) the exit code is 1 and the output is identical as well

[12:50] <bisectable6> thundergnat, https://gist.github.com/9374406b3cc647a55fcbbe3d580ed162

[12:50] *** dpk joined
[12:51] *** aborazmeh joined
[12:51] *** aborazmeh left
[12:51] *** aborazmeh joined
[12:52] <thundergnat> bisectable6: old=2020.20 new=HEAD say $_, ', ', +$_ for |(^0x0FFF).grep( { .chr ~~ /<:Nd>/ and .unival == 1|2|3 }).batch(3)».chr».join;

[12:52] <bisectable6> thundergnat, Cannot find revision “2020.20” (did you mean “2020.05”?)

[12:52] <thundergnat> ARGH

[12:52] <thundergnat> bisectable6: old=2020.02 new=HEAD say $_, ', ', +$_ for |(^0x0FFF).grep( { .chr ~~ /<:Nd>/ and .unival == 1|2|3 }).batch(3)».chr».join;

[12:52] <bisectable6> thundergnat, Bisecting by exit code (old=2020.02 new=b874c68). Old exit code: 0

[12:52] <bisectable6> thundergnat, bisect log: https://gist.github.com/c927fb1991f1f9e6f0f1562d437439b7

[12:52] <bisectable6> thundergnat, (2020-05-12) https://github.com/rakudo/rakudo/commit/a0e58412a04253ce0321a30587eda6eb75db2b30

[12:55] <thundergnat> Submitted as R#3694

[12:55] <linkable6> R#3694 [open]: https://github.com/rakudo/rakudo/issues/3694 Unicode numeric digit strings no longer coercible to Numeric

[12:55] <thundergnat> lizmat ^^^^

[12:55] *** thundergnat left
[12:57] *** Doc_Holliwood left
[12:58] <cpan-raku> New module released to CPAN! IRC::Client::Plugin::DiceRolls (0.0.0) by 03TYIL

[12:59] <cpan-raku> New module released to CPAN! IRC::Client::Plugin::NickServ (0.3.0) by 03TYIL

[12:59] <cpan-raku> New module released to CPAN! Grammar::DiceRolls (0.1.0) by 03TYIL

[13:00] <cpan-raku> New module released to CPAN! Log::Simple (0.1.0) by 03TYIL

[13:00] <cpan-raku> New module released to CPAN! Log (0.1.0) by 03TYIL

[13:06] <donaldh_> m: (^25).map: ('A'..'Z').List.rotate(*)

[13:06] <camelia> rakudo-moar b874c68eb: OUTPUT: «Type check failed in binding to parameter '$rotate'; expected Cool but got Whatever (*)␤  in block <unit> at <tmp> line 1␤␤»

[13:06] <donaldh_> I don't understand why that doesn't work.

[13:06] <donaldh_> m: (^25).map: -> $n { ('A'..'Z').List.rotate($n) }

[13:06] <camelia> rakudo-moar b874c68eb: ( no output )

[13:07] <lizmat> donaldh_: how much would you want to rotate ?

[13:07] <donaldh_> 0, 1, 2, ...

[13:07] <lizmat> aaah...  

[13:07] <lizmat> * is NOT the same as { $_ }

[13:08] <lizmat> m:  (^25).map: ('A'..'Z').List.rotate(* + 0)

[13:08] <camelia> rakudo-moar b874c68eb: OUTPUT: «Type check failed in binding to parameter '$rotate'; expected Cool but got WhateverCode (WhateverCode.new)␤  in block <unit> at <tmp> line 1␤␤»

[13:08] <donaldh_> But you can use whatever * with map, right?

[13:08] <cpan-raku> New module released to CPAN! Log::Colored (0.1.0) by 03TYIL

[13:08] <cpan-raku> New module released to CPAN! Log::JSON (0.1.0) by 03TYIL

[13:08] <lizmat> m:  (^25).map: { ('A'..'Z').List.rotate($_) }

[13:08] <camelia> rakudo-moar b874c68eb: ( no output )

[13:09] <donaldh_> Hmm, why does that work when this doesn't..

[13:09] <donaldh_> m: (^25).map: ('A'..'Z').List.rotate($_)

[13:09] <camelia> rakudo-moar b874c68eb: OUTPUT: «Type check failed in binding to parameter '$rotate'; expected Cool but got Any (Any)␤  in block <unit> at <tmp> line 1␤␤»

[13:21] *** Doc_Holliwood joined
[13:24] *** vrurg_ joined
[13:26] *** vrurg left
[13:28] *** vrurg joined
[13:31] *** vrurg_ left
[13:49] *** veesh left
[13:50] *** veesh joined
[14:10] *** brtastic left
[14:12] *** harrison joined
[14:13] *** harrison left
[14:17] *** sour left
[14:21] *** aborazmeh left
[14:22] *** poohmaan joined
[14:25] *** Altai-man_ joined
[14:27] *** sena_kun left
[14:29] *** Tirifto joined
[14:48] <cpan-raku> New module released to CPAN! Gnome::N (0.17.6) by 03MARTIMM

[14:49] *** brtastic joined
[14:59] *** MilkmanDan left
[15:00] *** MilkmanDan joined
[15:07] *** MilkmanDan left
[15:08] *** MilkmanDan joined
[15:10] *** jjmerelo joined
[15:11] <cpan-raku> New module released to CPAN! Gnome::GObject (0.16.7) by 03MARTIMM

[15:21] *** sjoshi joined
[15:24] *** sjoshi left
[15:25] *** melezhik joined
[15:25] *** sjoshi joined
[15:32] *** sjoshi left
[15:40] *** brtastic left
[15:40] *** brtastic joined
[15:40] *** melezhik left
[15:42] *** domidumont joined
[15:42] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.28.4) by 03MARTIMM

[15:46] *** melezhik joined
[15:46] *** Tirifto left
[15:47] <melezhik> rba looks like I successfully run small instance in aws

[15:47] <melezhik> even though aws told me that my free tire is not eligible to run small instance, it still made it

[15:48] <melezhik> probably it is now charged by org billing account

[15:49] <melezhik> I am going to terminate it and run under ubuntu, accidentally picked red hat

[15:50] <tigerpaws> I've converted the tensorflow headers, but they are full of 'typedef struct TF_SessionOptions TF_SessionOptions;'  and this is refused by NativeCall (after being converted by APP::GPTrixie). Isn't this just an opaque type? How do I represent that for NativeCall? 

[15:50] <timotimo> there is a difference between "struct TF_blah" and "TF_blah"

[15:51] <timotimo> in that you can't write "TF_blah my_var"

[15:51] <timotimo> you'd have to write "struct TF_blah my_var"

[15:51] <timotimo> for some reason

[15:51] <timotimo> and you get around that by creating a typedef

[15:51] <timotimo> so whenever you write TF_blah it substitutes struct TF_blah for you

[15:54] <tigerpaws> It's been a long time I've done any C. So how do I make NativeCall accept that? raku says: Class TF_SessionOptions has no attributes, which is illegal with the CStruct representation.

[15:54] <timotimo> you'd want to toss out all the empty ones

[15:54] <timotimo> though you may need to forward-declare a bunch of classes

[15:54] <timotimo> so maybe just turn them into stubs by putting ... into the body

[15:55] <tigerpaws> There are a lot of them. I thought they were just opaque structs, so they would still be structs, but on raku's side we would never deal with their internals. 

[16:00] *** Doc_Holliwould joined
[16:02] *** Doc_Holliwood left
[16:04] *** ensamvarg_g6 left
[16:16] *** Voldenet left
[16:20] <Geth> ¦ doc: Prince213++ created pull request #3407: Change .perl to .raku in documents

[16:20] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3407

[16:22] *** Voldenet joined
[16:22] *** Voldenet left
[16:22] *** Voldenet joined
[16:23] *** thundergnat joined
[16:24] <thundergnat> bisectable6 2020.02 say [0,1,2,3,4,5], *.rotate(-1) … !*.tail;

[16:25] <AlexDaniel`> needs a :

[16:25] <thundergnat> ah

[16:25] <thundergnat> bisectable6: 2020.02 say [0,1,2,3,4,5], *.rotate(-1) … !*.tail;

[16:25] <bisectable6> thundergnat, Using old=2020.02 new=HEAD in an attempt to do what you mean

[16:25] <bisectable6> thundergnat, Bisecting by exit code (old=2020.02 new=c2e8b22). Old exit code: 0

[16:25] *** poohmaan left
[16:25] <bisectable6> thundergnat, bisect log: https://gist.github.com/e66698bb55b083a0b55afc54f7e57a5b

[16:25] <bisectable6> thundergnat, (2020-05-07) https://github.com/rakudo/rakudo/commit/4b501bd45f54f911837f70ae59a5204ac3cf6ec0

[16:25] *** sena_kun joined
[16:26] <thundergnat> Hm. Minor breaking change for code in the wild, but I think it was intentional.

[16:26] <thundergnat> easy fix

[16:27] *** thundergnat left
[16:27] *** Altai-man_ left
[16:28] <AlexDaniel`> Altai-man_: https://colabti.org/irclogger/irclogger_log/raku?date=2020-05-15#l317

[16:28] <tellable6> AlexDaniel`, I'll pass your message to Altai-man_

[16:41] <Dwarf> I couldn't find this on https://docs.raku.org/language/variables, but what does | do in front of a variable?

[16:44] *** thundergnat joined
[16:45] <thundergnat> Dwarf: | creates a Slip. Basically turns a collection into a list rather than a single entity.

[16:45] <thundergnat> m: say ^10

[16:45] <camelia> rakudo-moar c2e8b22f7: OUTPUT: «^10␤»

[16:45] <thundergnat> m: say |^10

[16:45] <camelia> rakudo-moar c2e8b22f7: OUTPUT: «0123456789␤»

[16:46] *** thundergnat left
[16:47] <Dwarf> Oh my goodness

[16:47] *** vike1 left
[16:47] <Dwarf> Wait, how did you answer me after joining 

[16:48] <tobs> this channel is publicly logged

[16:49] <Dwarf> Thanks, superman

[16:49] *** chloekek joined
[16:51] <Dwarf> I wonder where to find that in the documentation so I can read more about these. I know + casts to an Int etc but slips are new to me

[16:51] * rba is curious about what melezhik is doing with RakuDist

[16:51] <tellable6> 2020-05-14T15:44:26Z #raku-dev <patrickb> rba Prebuilt releases of rakudo for 2020.05.1 are available for download from https://rooster.uber.space/patcloud/index.php/s/qmkreEJLQDZcjbf (as always). Can you upload to rakudo.org? Thank you!

[16:52] <rba> patrickb: Huch, good reminder. Will upload later today!

[16:53] *** Black_Ribbon joined
[16:56] *** molaf joined
[16:58] <Geth> ¦ doc: tbrowder++ created pull request #3409: Modify and clarify routine sprintf details

[16:58] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3409

[17:02] *** domidumont left
[17:21] *** patrickb left
[17:23] *** patrickb joined
[17:24] *** patrickz joined
[17:27] *** patrickb left
[17:28] <Geth> ¦ doc: a243338e1d | (Tom Browder)++ | doc/Type/independent-routines.pod6

[17:28] <Geth> ¦ doc: Modify and clarify routine sprintf details

[17:28] <Geth> ¦ doc: 

[17:28] <Geth> ¦ doc: File affected:

[17:28] <Geth> ¦ doc: + doc/Type/independent-routines.pod6

[17:28] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/a243338e1d

[17:28] <Geth> ¦ doc: 1e0c2583b2 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Type/independent-routines.pod6

[17:28] <Geth> ¦ doc: Merge pull request #3409 from tbrowder/sprintf

[17:28] <linkable6> Link: https://docs.raku.org/type/independent-routines

[17:28] <Geth> ¦ doc: 

[17:28] <Geth> ¦ doc: Modify and clarify routine sprintf details

[17:28] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1e0c2583b2

[17:43] *** Doc_Holliwould left
[17:52] *** Doc_Holliwould joined
[18:13] *** jjmerelo left
[18:13] *** lichtkind joined
[18:25] *** Altai-man_ joined
[18:27] *** sena_kun left
[18:29] *** sauvin left
[18:39] *** skids joined
[18:47] <jdv79> m: sub s(Str:D $a?){}; s();

[18:47] <camelia> rakudo-moar 5b4faed30: OUTPUT: «Parameter '$a' of routine 's' must be an object instance of type 'Str', not a type object of type 'Str'.  Did you forget a '.new'?␤  in sub s at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:48] <jdv79> i don't get that

[18:48] <jdv79> its optional but its not...

[18:49] <jdv79> if that's the case how does one do MMD involving an optional but defined arg?

[18:49] *** melezhik left
[18:55] *** molaf left
[19:00] <MasterDuke> m: multi sub a(Int:D $b?) { say "optional" }; multi sub a() { say "none" }; a(); a(2); a(Int) # seems  to work when you do have multis

[19:00] <camelia> rakudo-moar 5b4faed30: OUTPUT: «none␤Cannot resolve caller a(Int:U); none of these signatures match:␤    (Int:D $b?)␤    ()␤  in block <unit> at <tmp> line 1␤␤optional␤»

[19:02] <lizmat> jdv79 $a? is syntactic sugar for $a = Any

[19:02] <lizmat> or actually $a = Str in this case

[19:03] <lizmat> m: dd Str ~~ Str:D

[19:03] <camelia> rakudo-moar 5b4faed30: OUTPUT: «Bool::False␤»

[19:03] <lizmat> jdv79: one does not, afaik

[19:13] *** poohmaan joined
[19:21] *** MasterDuke left
[19:36] <jdv79> hm, ok

[19:39] <[Coke]> m: sub s(Str:D $a=""){}; s();

[19:39] <camelia> rakudo-moar 799d627a4: ( no output )

[19:39] <[Coke]> ^^ you could flip it a bit and give it an empty string as a default

[19:49] *** brtastic1 joined
[19:51] *** brtastic left
[19:51] *** brtastic1 is now known as brtastic

[19:52] <Geth> ¦ ecosystem: khalidelboray++ created pull request #493: Add Zap Module

[19:52] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/493

[19:57] *** dotdotdot left
[20:01] *** Kaeipi joined
[20:02] *** Kaiepi left
[20:05] *** dotdotdot joined
[20:11] *** vike1 joined
[20:15] *** rindolf left
[20:21] *** poohmaan left
[20:23] *** melezhik joined
[20:25] <Geth> ¦ ecosystem: 68ce775c36 | (Khaled Mohamed Elborey)++ (committed using GitHub Web editor) | META.list

[20:25] <Geth> ¦ ecosystem: Add Zap Module

[20:25] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/68ce775c36

[20:25] <Geth> ¦ ecosystem: 7c82d01dc7 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | META.list

[20:25] <Geth> ¦ ecosystem: Merge pull request #493 from khalidelboray/patch-1

[20:25] <Geth> ¦ ecosystem: 

[20:25] <Geth> ¦ ecosystem: Add Zap Module

[20:25] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/7c82d01dc7

[20:26] *** sena_kun joined
[20:28] *** Altai-man_ left
[20:40] *** andreoss left
[20:43] *** MasterDuke joined
[20:45] *** chloekek left
[21:00] *** melezhik left
[21:11] *** sjm_uk left
[21:19] *** skids left
[21:34] *** melezhik joined
[21:38] *** brtastic left
[21:52] *** ufobat_ joined
[21:56] *** ufobat left
[22:00] *** sena_kun left
[22:07] *** patrickz left
[22:12] *** brtastic joined
[22:34] *** grumble is now known as rawr

[22:41] *** pilne joined
[22:44] *** melezhik left
[22:50] *** clarkema left
[22:56] *** girafe left
[23:21] *** Sgeo joined
[23:25] *** pecastro left
[23:42] *** lichtkind left
