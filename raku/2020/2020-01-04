[00:24] <Doc_Holliwood> I'm not sure, jnthn. It could be I did before, but made myself forget it ;-)

[00:26] <Xliff> Doc_Holliwood: OK. You think that's bad.... you're gonna love this one...

[00:28] <Xliff> https://github.com/Xliff/p6-GLib/blob/master/lib/GLib/Raw/Structs.pm6#L352

[00:28] <Xliff> Geez! Took me a while to find it!

[00:29] <Doc_Holliwood> Where is my gun?

[00:29] <Doc_Holliwood> Also, where do you live?

[00:29] <Xliff> Haha! Not near you!

[00:31] *** patrickb joined
[00:32] <Doc_Holliwood> Well. The other day I named a role "UnnecessaryViolence" just so I could write `class Barbarian is Player does UnnecessaryViolence` = 

[00:33] <Doc_Holliwood> So I guess I'm kinda guilty as well ;-)

[00:33] <Xliff> Hahahaha!

[00:33] <Xliff> I love that...

[00:34] <Xliff> Doc_Holliwood: Ooh! That looks like game code. Gotta link?

[00:35] <Doc_Holliwood> just a stub

[00:35] <Doc_Holliwood> that doesn't really work right

[00:35] <Xliff> And if you really wanna shoot someone, blame the GNOME ppl. It's their code I'm porting...

[00:35] <Xliff> https://developer.gnome.org/glib/stable/glib-Strings.html

[00:35] *** patrickz left
[01:25] *** wildtrees left
[01:34] *** Tirifto left
[01:39] *** patrickb left
[01:46] *** chloekek left
[01:46] *** redable joined
[01:47] <SmokeMachine> red: say "OK"

[01:47] <redable> SmokeMachine, ===SORRY!===‚ê§Cannot resolve caller EXPORT(red-do); none of these signatures match:‚ê§    (Str $ where { ... })‚ê§    ()‚ê§

[01:47] *** redable left
[01:48] *** redable joined
[01:48] <SmokeMachine> red: say "OK"

[01:48] <redable> SmokeMachine, ===SORRY!===‚ê§Cannot resolve caller EXPORT(red-do); none of these signatures match:‚ê§    (Str $ where { ... })‚ê§    ()‚ê§

[01:48] *** redable left
[01:51] *** Altai-man_ joined
[01:54] *** sena_kun left
[01:57] *** redable joined
[01:57] <SmokeMachine> red: say "OK"

[01:57] <redable> SmokeMachine, OK‚ê§

[02:10] <Doc_Holliwood> red: say "HubbaBubba"

[02:10] <redable> Doc_Holliwood, HubbaBubba‚ê§

[02:11] <Doc_Holliwood> red: say $*PERL.compiler.version;

[02:11] <redable> Doc_Holliwood, v2019.03.1‚ê§

[02:11] <Doc_Holliwood> m: say $*PERL.compiler.version;

[02:11] <camelia> rakudo-moar abcf37f2e: OUTPUT: ¬´v2019.11.381.gabcf.37.f.2.e‚ê§¬ª

[02:11] <Doc_Holliwood> ah

[02:14] <SmokeMachine> red: model Ble { ... }; model Bla { has $!id is serial; has $value is column; has $!ble-id is referencing( *.id, :model<Ble> ); has $.ble is relationship(*.ble-id, :model<Ble>) }; model Ble { has $!id is serial; has $.value; has @.blas is relationship(*.ble-id, :model<Bla>) }; Bla.^create-table; Ble.^create-table; given Ble.^create(:value<ble001>) { for ^10 -> $i { .blas.create: :value("test {$i}") } .say for .blas }

[02:14] <redable> SmokeMachine, 04===SORRY!04=== Error while compiling /code/./code.p6‚ê§Strange text after block (missing semicolon or comma?)‚ê§at /code/./code.p6:2‚ê§------> 03$i { .blas.create: :value("test {$i}") }08‚èè04 .say for .blas }‚ê§

[02:14] <SmokeMachine> red: model Ble { ... }; model Bla { has $!id is serial; has $value is column; has $!ble-id is referencing( *.id, :model<Ble> ); has $.ble is relationship(*.ble-id, :model<Ble>) }; model Ble { has $!id is serial; has $.value; has @.blas is relationship(*.ble-id, :model<Bla>) }; Bla.^create-table; Ble.^create-table; given Ble.^create(:value<ble001>) { for ^10 -> $i { .blas.create: :value("test {$i}") }; .say for .blas }

[02:14] <redable> SmokeMachine, Bla.new()‚ê§Bla.new()‚ê§Bla.new()‚ê§Bla.new()‚ê§Bla.new()‚ê§Bla.new()‚ê§Bla.new()‚ê§Bla.new()‚ê§Bla.new()‚ê§Bla.new()‚ê§

[02:15] <SmokeMachine> red: model Ble { ... }; model Bla { has $!id is serial; has $value is column; has $!ble-id is referencing( *.id, :model<Ble> ); has $.ble is relationship(*.ble-id, :model<Ble>) }; model Ble { has $!id is serial; has $.value; has @.blas is relationship(*.ble-id, :model<Bla>) }; Bla.^create-table; Ble.^create-table; given Ble.^create(:value<ble001>) { for ^10 -> $i { .blas.create: :value("test {$i}") }; .say for 

[02:15] <SmokeMachine> .blas.map: *.value }

[02:15] <redable> SmokeMachine, 04===SORRY!04=== Error while compiling /code/./code.p6‚ê§Missing expression for 'for' statement modifier‚ê§at /code/./code.p6:3‚ê§------> 03<BOL>08‚èè04<EOL>‚ê§

[02:15] <SmokeMachine> red: model Ble { ... }; model Bla { has $!id is serial; has $value is column; has $!ble-id is referencing( *.id, :model<Ble> ); has $.ble is relationship(*.ble-id, :model<Ble>) }; model Ble { has $!id is serial; has $.value; has @.blas is relationship(*.ble-id, :model<Bla>) }; Bla.^create-table; Ble.^create-table; given Ble.^create(:value<ble001>) { for ^10 -> $i { .blas.create: :value("test {$i}") }; .say for 

[02:15] <SmokeMachine> .blas.map: *.value }

[02:15] <redable> SmokeMachine, 04===SORRY!04=== Error while compiling /code/./code.p6‚ê§Missing expression for 'for' statement modifier‚ê§at /code/./code.p6:3‚ê§------> 03<BOL>08‚èè04<EOL>‚ê§

[02:16] <SmokeMachine> red: model Ble { ... }; model Bla { has $!id is serial; has $value is column; has $!ble-id is referencing( *.id, :model<Ble> ); has $.ble is relationship(*.ble-id, :model<Ble>) }; model Ble { has $!id is serial; has $.value; has @.blas is relationship(*.ble-id, :model<Bla>) }; Bla.^create-table; Ble.^create-table; given Ble.^create(:value<ble001>) { for ^10 -> $i { .blas.create: :value("test {$i}") }; .value.say for 

[02:16] <SmokeMachine> .blas }

[02:16] <redable> SmokeMachine, 04===SORRY!04=== Error while compiling /code/./code.p6‚ê§Missing expression for 'for' statement modifier‚ê§at /code/./code.p6:3‚ê§------> 03<BOL>08‚èè04<EOL>‚ê§

[02:17] <SmokeMachine> red: model Ble { ... }; model Bla { has $!id is serial; has $value is column; has $!ble-id is referencing( *.id, :model<Ble> ); has $.ble is relationship(*.ble-id, :model<Ble>) }; model Ble {has $!id is serial;has $.value;has @.blas is relationship(*.ble-id, :model<Bla>)};Bla.^create-table;Ble.^create-table;given Ble.^create(:value<ble001>) {for ^10 -> $i {.blas.create: :value("test {$i}")};.value.say for .blas }

[02:17] <redable> SmokeMachine, https://gist.github.com/6816ffd45f8f7c55d39cffda6969cb1a

[02:18] <SmokeMachine> red: model Ble { ... }; model Bla { has $!id is serial; has $value is column; has $!ble-id is referencing( *.id, :model<Ble> ); has $.ble is relationship(*.ble-id, :model<Ble>) }; model Ble {has $!id is serial;has $.value;has @.blas is relationship(*.ble-id, :model<Bla>)};given Ble.^create(:value<ble001>) {for ^10 -> $i {.blas.create: :value("test {$i}")};.value.say for .blas }

[02:18] <redable> SmokeMachine, Cannot resolve caller value(Bla:D: ); none of these signatures match:‚ê§    (Mu:U: *%_)‚ê§  in block  at ./code.p6 line 2‚ê§  in block <unit> at ./code.p6 line 2‚ê§‚ê§

[02:18] <SmokeMachine> red: model Ble { ... }; model Bla { has $!id is serial; has $value is column; has $!ble-id is referencing( *.id, :model<Ble> ); has $.ble is relationship(*.ble-id, :model<Ble>) }; model Ble {has $!id is serial;has $.value;has @.blas is relationship(*.ble-id, :model<Bla>)};given Ble.^create(:value<ble001>) {for ^10 -> $i {.blas.create: :value("test {$i}")};.say for .blas.map: *.value }

[02:19] <redable> SmokeMachine, test 0‚ê§test 1‚ê§test 2‚ê§test 3‚ê§test 4‚ê§test 5‚ê§test 6‚ê§test 7‚ê§test 8‚ê§test 9‚ê§

[02:19] *** redable left
[02:21] *** redable joined
[02:39] *** redable left
[02:49] *** Xliff left
[02:59] *** redable joined
[03:01] <SmokeMachine> red: use Person; .say for Person.^all

[03:01] <redable> SmokeMachine, Person.new(id => 1, name => "SmokeMachine")‚ê§Person.new(id => 2, name => "SmokeMachine")‚ê§Person.new(id => 3, name => "SmokeMachine")‚ê§Person.new(id => 4, name => "SmokeMachine")‚ê§Person.new(id => 5, name => "SmokeMachine")‚ê§

[03:01] <SmokeMachine> red: use Person; .say for Person.^all.map: *.name

[03:01] <redable> SmokeMachine, SmokeMachine‚ê§SmokeMachine‚ê§SmokeMachine‚ê§SmokeMachine‚ê§SmokeMachine‚ê§

[03:02] <SmokeMachine> red: my $*RED-DEBUG = True; use Person; .say for Person.^all.map: *.name

[03:02] <redable> SmokeMachine, SQL : SELECT‚ê§   person.name as "data_1"‚ê§FROM‚ê§   person‚ê§SmokeMachine‚ê§SmokeMachine‚ê§SmokeMachine‚ê§SmokeMachine‚ê§SmokeMachine‚ê§BIND: []‚ê§

[03:02] <SmokeMachine> red: my $*RED-DEBUG = True; use Person; .posts.say for Person.^all

[03:03] <redable> SmokeMachine, https://gist.github.com/41c9eafedd445f6ae6ce12a5702fb7ef

[03:15] <SmokeMachine> red: use Person; .posts.say for Person.^all

[03:15] <redable> SmokeMachine, ()‚ê§()‚ê§()‚ê§()‚ê§()‚ê§

[03:52] *** sena_kun joined
[03:54] *** Altai-man_ left
[04:04] *** Poohmaan left
[04:49] <no-n> what's the recommended way to install raku on debian?

[05:21] *** cpan-raku left
[05:22] *** cpan-raku joined
[05:22] *** cpan-raku left
[05:22] *** cpan-raku joined
[05:51] *** Altai-man_ joined
[05:54] *** sena_kun left
[05:59] *** cognominal joined
[06:03] *** cognomin_ left
[06:16] *** wamba joined
[06:34] *** mahmudov left
[06:38] *** sauvin joined
[06:59] *** Doc_Holliwood left
[07:16] <xinming_> no-n: I personally compile from source, and install to a user directory

[07:17] <no-n> I just ended up using rakudo-pkg :P

[07:20] <xinming_> Ok.

[07:20] <xinming_> Anyone here knows how is IterationEnd defined?

[07:20] <xinming_> I just grep the src, didn't find where it is defined

[07:27] <xinming_> hmm, got it.

[07:28] <xinming_> in src/core.c/core_prologue.pm6

[07:37] *** veesh left
[07:49] *** veesh joined
[07:52] *** sena_kun joined
[07:54] *** Altai-man_ left
[08:16] *** gabiruh_ joined
[08:19] *** gabiruh left
[08:19] *** gabiruh joined
[08:23] *** gabiruh_ left
[08:26] *** rindolf joined
[08:44] *** shred_alert joined
[08:44] *** Doc_Holliwood joined
[09:09] *** horsepatat joined
[09:23] *** p6steve joined
[09:24] <p6steve> hi - please can someone point me to the new Raku file extensions..?

[09:34] <sena_kun> p6steve, https://github.com/perl6/problem-solving/blob/master/solutions/language/Path-to-Raku.md <- this document specifies them

[09:38] <p6steve> thanks!

[09:41] <Geth> ¬¶ doc: e9fbce7bf5 | (JJ Merelo)++ | 4 files

[09:41] <Geth> ¬¶ doc: Changes IRC channel to new names closes #3139

[09:41] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/e9fbce7bf5

[09:51] *** Altai-man_ joined
[09:53] <Geth> ¬¶ doc/perl6: 1be9f8cf3b | (JJ Merelo)++ | doc/HomePage.pod6

[09:53] <Geth> ¬¶ doc/perl6: Updates old landing page, closes #3141

[09:53] <Geth> ¬¶ doc/perl6: review: https://github.com/Raku/doc/commit/1be9f8cf3b

[09:54] *** sena_kun left
[10:09] *** wamba left
[10:18] *** sisar joined
[10:20] *** mahmudov joined
[10:22] *** horsepatat left
[10:23] <sisar> hello, i was trying to build Rakudo Star on Cygwin, and it failed. Logs: https://paste.ubuntu.com/p/nP6zdzWjPs/ Any help would be appreciated.

[10:23] *** Redfoxmoon joined
[10:29] *** wamba joined
[10:29] <shred_alert> Look at the lines ^~*

[10:39] <sisar> I see the first error "src/platform/win32/io.c:8:2: error: #error "Standard and WinAPI seek modes not compatible" which does not make any sense to me :/

[10:44] *** sisar left
[10:51] <xinming_> What is the best way to define an identifer which is like IterationEnd?

[11:00] *** chloekek joined
[11:01] <moritz> xinming_: you mean a sentinel value? (or however it's spelled)

[11:02] <moritz> you can just do class MySentinel { }

[11:02] <moritz> and always compare with ===

[11:15] *** tyil is now known as schwul

[11:28] <stoned75> 6c: .signature.say for "foo".^can("comb")[0].cando: \(Cool, "o")

[11:28] <committable6> stoned75, https://gist.github.com/8edea2a21714bd23930f07efd143da84

[11:29] <stoned75> 6c: .signature.say for "foo".^can("comb")[0].cando: \(Cool: "o")

[11:29] <committable6> stoned75, https://gist.github.com/4071fdbb483d8098354d70ccbd4e485e

[11:35] *** gabiruh_ joined
[11:36] <stoned75> in a signature like (Cool $: *%_) what does the $: stands for ? is it an older(previous) form of (Cool: *%_) ?

[11:38] *** gabiruh left
[11:39] *** schwul is now known as tyil

[11:41] <xinming_> moritz: Yea, I want to create special value which is used for control purpose, My sollution currently now is create a special class for it. But I do wish to know wether there is a better way, Something like   constant S-VALUE = Mu.new;

[11:48] <xinming_> After I read https://github.com/perl6/problem-solving/blob/master/solutions/language/Path-to-Raku.md      I wonder why don't we choose .rk as the file extention?  and rkm as module name ext?

[11:49] <xinming_> .raku for scripts is ok,  but .rakumod is a bit long for a module name to me.

[11:50] <xinming_> or even rku

[11:52] *** sena_kun joined
[11:53] <shred_alert> It's not that long though and there's not much scope for ambiguity this way.

[11:54] *** Altai-man_ left
[11:59] <AlexDaniel> xinming_: it's a long story :)

[11:59] <AlexDaniel> xinming_: .rk is sorta already taken and .rkt is racket source code

[12:09] *** sisar joined
[12:11] <xinming_> How about the rkm?

[12:11] <xinming_> We can also use .rak

[12:11] <xinming_> I think File extensions should be really as short as possible.

[12:12] <xinming_> hmm, Well, I don't complain, I think people will do as much more as I can do. So, I'll live with it. :-)

[12:13] <shred_alert> .rak could be mistenterpreted as rakefile pretty easily

[12:25] <chloekek> .rar would be a nice file extension for an archive of Raku code. ü§°

[12:26] <chloekek> Or .raar, but that‚Äôs weird.

[12:27] <xinming_> .rar is already taken by winrar

[13:06] *** mahmudov left
[13:27] *** p6steve left
[13:35] *** pmurias joined
[13:35] <pmurias> [Coke]: hi

[13:37] *** sumankhanal joined
[13:38] <sumankhanal> # These are my arrays my @name = ("Renuka", "Dipendra", "Larissa", "Ram", "Hari", "Roshan", "");my @age = (20 15 45 30 40 23 14);my @address = ("Chitwan", "Dhangadhi", "Budhanilkantha", "Bharatpur", "Butwal", "Bhairahawa");my @streetadd = ("123Street", "Ward7", "Thamel", "Krishna7Street", "Milan234", "Buddha23");  

[13:38] <sumankhanal> Idea how to solve this 

[13:38] <sumankhanal> https://glot.io/snippets/fjelt48ngv

[13:40] <sumankhanal> with the formatting

[13:41] <lizmat> you could:

[13:41] <lizmat> say '---------------------------------------------' in a FIRST and LAST phaser in the loop

[13:41] <Doc_Holliwood> m: my $p = start { die 'argh'; CATCH { .message.uc.say }; }; await $p;

[13:41] <camelia> rakudo-moar b770971ff: OUTPUT: ¬´ARGH‚ê§An operation first awaited:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Died with the exception:‚ê§    argh‚ê§      in block  at <tmp> line 1‚ê§‚ê§¬ª

[13:42] <Doc_Holliwood> m: my $p = start { die 'argh'; CATCH { default { .message.uc.say } }; }; await $p;

[13:42] <camelia> rakudo-moar b770971ff: OUTPUT: ¬´ARGH‚ê§¬ª

[13:42] <lizmat> you could @name>>.chars.max to find out the width of names in each array

[13:42] <SmokeMachine> m: my @name = ("Renuka", "Dipendra", "Larissa", "Ram", "Hari", "Roshan", "");my @age = (20 15 45 30 40 23 14);my @address = ("Chitwan", "Dhangadhi", "Budhanilkantha", "Bharatpur", "Butwal", "Bhairahawa");my @streetadd = ("123Street", "Ward7", "Thamel", "Krishna7Street", "Milan234", "Buddha23");  for [Z] @name, @age, @streetadd -> ($name, $age, $add) { say "$name, $age, $add" }

[13:42] <camelia> rakudo-moar b770971ff: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3am", "Hari", "Roshan", "");my @age = (207‚èè5 15 45 30 40 23 14);my @address = ("Chit‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§   ‚Ä¶¬ª

[13:42] <Doc_Holliwood> if i hadn't just payed 6000 Euros for my teeth i would bite into the table now ^^

[13:42] <SmokeMachine> m: my @name = ("Renuka", "Dipendra", "Larissa", "Ram", "Hari", "Roshan", "");my @age = <20 15 45 30 40 23 14>;my @address = ("Chitwan", "Dhangadhi", "Budhanilkantha", "Bharatpur", "Butwal", "Bhairahawa");my @streetadd = ("123Street", "Ward7", "Thamel", "Krishna7Street", "Milan234", "Buddha23");  for [Z] @name, @age, @streetadd -> ($name, $age, $add) { say "$name, $age, $add" }

[13:42] <camelia> rakudo-moar b770971ff: OUTPUT: ¬´Renuka, 20, 123Street‚ê§Dipendra, 15, Ward7‚ê§Larissa, 45, Thamel‚ê§Ram, 30, Krishna7Street‚ê§Hari, 40, Milan234‚ê§Roshan, 23, Buddha23‚ê§¬ª

[13:44] <Doc_Holliwood> i think our new friend here is more concerned about the padding

[13:47] <lizmat> sprintf ??

[13:47] <Doc_Holliwood> sumankhanal: See https://github.com/araraloren/perl6-terminal-table or alternatively https://github.com/ugexe/Perl6-Text--Table--Simple

[13:49] <Geth> ¬¶ doc: threadless-screw++ created pull request #3142: P6-101 text refinement + expansion of assignment operators section; closes: #2920

[13:49] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3142

[13:51] *** Altai-man_ joined
[13:54] *** sena_kun left
[13:59] *** redable left
[14:05] *** mahmudov joined
[14:06] *** redable joined
[14:09] *** redable left
[14:10] *** sumankhanal left
[14:16] *** redable joined
[14:17] *** pmurias left
[14:18] <SmokeMachine> red: use sumankhanal; .say for Person.^all # :P

[14:18] <redable> SmokeMachine, https://gist.github.com/fa3a394affe140077db25138f147b649

[14:18] *** pmurias joined
[14:20] <SmokeMachine> red: use sumankhanal; .say for Person.^all.map: { "{ .name }, { .age }, { .address }, { .streetadd }" }

[14:20] <redable> SmokeMachine, Renuka, 20, Chitwan, 123Street‚ê§Dipendra, 15, Dhangadhi, Ward7‚ê§Larissa, 45, Budhanilkantha, Thamel‚ê§Ram, 30, Bharatpur, Krishna7Street‚ê§Hari, 40, Butwal, Milan234‚ê§Roshan, 23, Bhairahawa, Buddha23‚ê§

[14:21] <SmokeMachine> red: my $*RED-DEBUG = True; use sumankhanal; .say for Person.^all.map: { "{ .name }, { .age }, { .address }, { .streetadd }" }

[14:21] <redable> SmokeMachine, https://gist.github.com/f4c25e4bfc46d1ae7fc85a4bfd8e28a2

[14:24] <pmurias> if I got an email from the TPF secretary to dicuss how the payment method does that mean my grant has been accepted?

[14:25] <lizmat> pmurias: I think it does ?

[14:26] <tobs> :-)

[14:35] *** wamba left
[14:36] *** mahmudov left
[14:36] *** mahmudov joined
[14:38] *** libertas left
[14:49] * pmurias hasn't done anything Raku related in a while, got a Google phone screen interview on the 14th and been focusing on that

[14:52] <moritz> pmurias: best of luck!

[15:12] <Geth> ¬¶ problem-solving: lizmat assigned to jnthn Issue Creating accessor for private attributes without adding them to the BUILDPLAN https://github.com/perl6/problem-solving/issues/145

[15:17] <uzl[m]> .tell jmerelo Are you aware of a Spanish technical term for "junction" in the Raku sense? Laurent recently released Think Raku (https://github.com/LaurentRosenfeld/think_raku) and also added a new section about junctions which I'll be including in the Spanish version of the book.

[15:17] <tellable6> uzl[m], I'll pass your message to jmerelo

[15:35] <lizmat> weekly: https://github.com/LaurentRosenfeld/think_raku

[15:35] <notable6> lizmat, Noted! (weekly)

[15:42] *** shred_alert left
[15:52] *** sena_kun joined
[15:54] *** Altai-man_ left
[16:12] *** rir joined
[16:15] *** lgtaube left
[16:17] <rir> Hello, did raku get settled upon--last I knew rakudo was the rename.  I like brevity, myself.

[16:21] <lizmat> it's raku for the language, rakudo as its most advanced implementation

[16:23] <rir> Thanks, Liz.

[16:25] <lizmat> yw  :-)

[16:28] *** lgtaube joined
[16:29] <uzl[m]> .tell sumankhanal Re: table formatting https://glot.io/snippets/fjeqil8jy8

[16:29] <tellable6> uzl[m], I'll pass your message to sumankhanal

[16:43] <rir> I am looking for installation help.  I have installe

[16:43] <rir> d rakudo* many --and perl6 a few-- times. There was an aspirational aspect  to that; I would hope to find time to explore 6.   When Star stated it was production ready, I felt like it needed more structure around system wide installation.  I never got very far.

[16:43] <rir> I am trying again and sounding my ignorance.

[16:44] <rir> That is re: system wide install.

[16:47] <rir> Starting w/ separate repos under a user, installing as root.  Things seems to go fine. It seems a little weird that rakudo goes in $PREFIX and zef puts itself into $PREFIX/share/perl6/site/bin.

[16:48] *** lucasb joined
[16:51] <rir> Zef reports success but I find *.pm6 files in /root/.zef/store/ only.  What to do?

[16:51] <rir> s/success/success installing modules/

[17:13] <lucasb> If you are looking for the module's code, I think they are installed in $PREFIX/share/perl6/{core,site,vendor}/sources/ but without any file extension

[17:14] <lucasb> filename is just an uppercase hash string :)

[17:16] *** wamba joined
[17:27] <rir> Thanks, lucasb.

[17:41] <rir> When/Why are the /root/.zef and /root/.raku contents needed?  What is the precedence or could conflicts occur between my luserself and root versions?

[17:44] *** chloekek left
[17:51] *** Altai-man_ joined
[17:54] *** redable left
[17:54] *** sena_kun left
[18:06] *** xinming_ left
[18:07] *** xinming_ joined
[18:33] *** mahmudov left
[18:35] *** mahmudov joined
[18:42] *** horsepatat joined
[18:42] *** chloekek joined
[19:02] *** sirbush joined
[19:10] * sirbush hi

[19:11] <lizmat> sirbush o/

[19:11] <lizmat> weekly: https://perlweeklychallenge.org/blog/meet-the-champion-040/

[19:11] <notable6> lizmat, Noted! (weekly)

[19:13] *** wildtrees joined
[19:14] *** wildtrees left
[19:14] * sirbush anyone here with scanner website vulnerability scanner + auto exploit ?

[19:16] <lizmat> sirbush: feels like you're on the wrong channel

[19:16] <sirbush> all says same

[19:16] <sirbush> i dont do a crime , is pasion

[19:18] *** wildtrees joined
[19:24] *** pmurias left
[19:27] *** sirbush left
[19:40] *** pmurias joined
[19:43] *** rir left
[19:52] *** sena_kun joined
[19:54] *** Altai-man_ left
[20:00] *** mahmudov left
[20:02] *** cpan-raku left
[20:03] *** cpan-raku joined
[20:03] *** cpan-raku left
[20:03] *** cpan-raku joined
[20:16] *** mahmudov joined
[20:23] *** Poohman joined
[20:23] <Poohman> hello all

[20:23] <tellable6> 2020-01-01T19:09:48Z #raku <uzl[m]> Poohmaan You could use an array of Pairs instead. That would simplify the body of the sub/block passed to sort. E.g., my @lines = age => 15, age => 11, age => 12; @lines.sort(-> $a, $b { $a.value > $b.value }).say

[20:24] <Poohman> can you please tell me the encoding I have to use to read  a files having text with German alphabets

[20:24] <Poohman> I tried every encoding listed 

[20:24] <Poohman> but the best I get is something like the following

[20:25] <Poohman> Ger√¥ÔøΩ¬ø¬ΩxE4tekennzeichen

[20:25] <Poohman> instead of Ger√§tekennzeichen

[20:28] <lizmat> whoo  that's a severe case of mojibake

[20:28] <lizmat> are you sure the source is correct ?

[20:29] <lizmat> .oO( ScheiÔøΩ Encoding )

[20:29] <Poohman> source looks OK

[20:30] <lizmat> could you gist at least part of the file ?

[20:32] <Poohman> just the first line will do??

[20:34] *** rindolf left
[20:35] <AlexDaniel> if it has some of these characters, then yes!

[20:38] *** kensanata joined
[20:40] <Poohman> https://gist.github.com/winfredraj/8be4b8fdac4ea7c063ddcb00f505e149#file-gistfile1-txt

[20:42] *** pmurias left
[20:42] <lizmat> so what is the code that you're using ?

[20:42] <lizmat> I've put the string "Ger√§tekennzeichen" into a file, and did a "dd file.IO.slurp" on it, and that came out finr

[20:42] <lizmat> *fine

[20:43] <AlexDaniel> well, that ended up in regular utf-8 on github

[20:43] <Poohman> hmm wait

[20:47] <zostay> tyil: your quickstart instructions in the updated README work great, the release manager guide in docs do not work, FYI

[20:48] *** pmurias joined
[20:51] *** wamba left
[20:51] <Poohman> https://gist.github.com/winfredraj/560df323a8bc903c038bc1bfa8f5624f

[20:54] *** veesh_ joined
[20:56] *** veesh left
[20:56] *** veesh_ is now known as veesh

[21:06] *** horsepatat left
[21:11] <lizmat> Poohman: if that's the content of your file, it is already mojibaked

[21:12] <Poohman> SAP ->Excel->CSV

[21:14] <Poohman> somewhere it must have gotten rotten

[21:23] *** aluaces joined
[21:23] <tyil> zostay: glad it's of use to you :)

[21:24] <tyil> looking for people to test R* on windows and mac, still, tho ;~;

[21:51] *** Altai-man_ joined
[21:54] *** sena_kun left
[21:56] *** gabiruh_ left
[21:58] *** wamba joined
[22:07] *** lucasb left
[22:14] *** kensanata left
[22:18] *** libertas joined
[22:22] *** libertas_ joined
[22:23] *** chloekek left
[22:29] *** sisar left
[22:53] *** wamba left
[23:01] *** chloekek joined
[23:04] <cpan-raku> New module released to CPAN! AttrX::Mooish (0.7.1) by 03VRURG

[23:52] *** sena_kun joined
[23:54] *** Altai-man_ left
