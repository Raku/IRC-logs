[00:02] *** pmurias left
[00:05] <tbrowder> guifa: i will be glad to attend your presentation, sorry lizmat won't be there

[00:16] *** pecastro left
[01:14] *** ZZZzz left
[01:22] *** wildtrees left
[01:30] *** Kaiepi left
[01:31] *** Kaiepi joined
[01:31] *** TeamBlast left
[01:31] *** TeamBlast joined
[01:34] *** lichtkind left
[01:34] *** sena_kun left
[01:36] *** TeamBlast left
[01:37] *** TeamBlast joined
[01:39] *** hungrydonkey joined
[01:43] *** Sgeo left
[01:47] *** sena_kun joined
[01:47] *** Sgeo joined
[01:58] *** ZZZzz joined
[02:01] *** Circlepuller joined
[02:01] *** TeamBlast left
[02:01] *** Circlepuller is now known as TeamBlast

[02:03] *** sono__ joined
[02:05] *** Black_Ribbon left
[02:23] *** lucasb left
[02:23] *** ZZZzz left
[02:23] *** aborazmeh left
[02:29] *** molaf left
[02:32] *** hungryd59 joined
[02:35] *** hungrydonkey left
[02:41] *** molaf joined
[02:44] *** hungryd59 left
[02:44] *** hungrydonkey joined
[02:52] *** hungryd89 joined
[02:52] *** hungrydonkey left
[02:58] *** ZZZzz joined
[03:06] *** hungryd89 left
[03:20] *** hungrydonkey joined
[03:28] *** nosqrt left
[03:34] *** sena_kun left
[03:48] *** sena_kun joined
[03:52] *** elcaro left
[03:56] *** elcaro joined
[04:19] *** abraxxa left
[04:19] *** abraxxa joined
[04:39] *** molaf left
[05:29] *** hungrydonkey left
[05:33] *** hungrydonkey joined
[05:34] *** sena_kun left
[05:50] *** sena_kun joined
[06:10] *** jmerelo joined
[06:17] *** |Sno| left
[06:25] *** a3r0 left
[06:26] *** a3r0 joined
[06:33] *** sauvin joined
[06:51] <cpan-raku> New module released to CPAN! Date::Calendar::Julian (0.0.1) by 03JFORGET

[07:22] *** wamba joined
[07:30] *** |Sno| joined
[07:33] *** sena_kun left
[07:40] <guifa> tbrowder: I’m still trying to figure out how I’m going to do it.  I’ve never presented at a tech conference before

[07:42] *** jmerelo left
[07:49] *** sena_kun joined
[07:54] *** atroxaper joined
[07:54] <atroxaper> hi, #raku !

[07:55] *** zakharyas joined
[07:55] *** domidumont joined
[07:56] *** wamba left
[07:58] *** darkstardev13 left
[08:00] *** darkstardev13 joined
[08:11] <atroxaper> I'm trying to understand a Container system deeply. I'm reading docs and the code of MoarVM, nqp and Rakudo. And I have a few questions. 1) As I see in the code, there is the only one 'container' - Scalar. Only Scalar has specific 'container specification' (and Proxy also). But (my @a).VAR.^name says Array. Why? 2) I cannot find VAR method code. Probably its implementation will help me to answer the first question. Where is it? 3) I cannot 

[08:11] <atroxaper> find decont operator (<>) code. Docs says it is postcircumfix:<>. As I understand, <> is implemented only on Grammar/Action layer but I cannot find it. And why is it postcircumfix instead of postfix? :)

[08:14] *** rindolf joined
[08:32] *** wamba joined
[08:33] <El_Che> Hi atroxaper, I can not answer your question, but stick around, I am sure jnthn or lizmat will pop up soon and help you

[08:41] <atroxaper> El_Che: ;)

[08:46] *** wamba left
[08:46] *** wamba joined
[08:47] *** sono__ left
[08:49] *** aluaces left
[08:51] *** rindolf left
[08:51] *** mahtob joined
[08:52] *** mahtob left
[08:53] *** mahmudov left
[08:58] *** dakkar joined
[09:00] *** AlexDaniel` left
[09:00] *** uzl[m] left
[09:00] *** wamba left
[09:06] *** wamba joined
[09:15] *** lichtkind joined
[09:18] *** mahmudov joined
[09:19] *** rindolf joined
[09:23] *** aluaces joined
[09:31] *** AlexDaniel` joined
[09:34] *** sena_kun left
[09:48] *** sena_kun joined
[09:53] *** pmurias joined
[09:54] *** pecastro joined
[09:59] *** BlackChaosNL[m] joined
[09:59] *** CIAvash joined
[09:59] *** unclechu joined
[09:59] *** awwaiid joined
[09:59] *** rba[m] joined
[09:59] *** EuAndreh[m] joined
[09:59] *** matiaslina joined
[09:59] *** pmf[m] joined
[09:59] *** uzl[m] joined
[09:59] *** tadzik[m]1 joined
[10:02] <Voldenet> atroxaper: if you see the output of –target=ast, usage of <> uses { } if i'm interpreting this correctly: `QAST::Op(call &postcircumfix:<{ }>) <wanted> <>`

[10:02] <Voldenet> erm, --target=ast

[10:09] <atroxaper> Voldenet: I did so. That is why I decided that <> implements on Grammar/Action layer.

[10:12] <atroxaper> Voldenet: But now I try to decont by {} and it is works as <> promises :) Probably it is 'specific Rakudo implementation'.

[10:14] <jnthn> Isn't it just a default case of the zen slice on a non-aggregate?

[10:15] <jnthn> This is the impl that leads to the decont: https://github.com/rakudo/rakudo/blob/master/src/core.c/hash_slice.pm6#L171

[10:16] <atroxaper> jnthn: Actually, I'm right now found it myself ^^

[10:19] <atroxaper> Yes, it is zen slice.

[10:19] <jnthn> About .VAR, all it does is wrap it in another level of Scalar container, such that a method call on it will decont the throwaway container.

[10:20] <jnthn> However, if you pass it through two things that both want to discard a container, then it will unravel. Really, the only thing you can safely do with the result of .VAR is call a method directly on it. Or bind it such that you can call multiple ones.

[10:20] <atroxaper> jnthn: pretty deftly

[10:22] <atroxaper> I think, question #1 is hardest

[10:24] <atroxaper> jnthn: Well... If .VAR just wrap to one more container, then (my @a).VAR === Array means that Array may be not a container.

[10:25] *** a3r0 left
[10:25] *** a3r0 joined
[10:26] <jnthn> atroxaper: .VAR is a no-op in that case

[10:27] <jnthn> atroxaper: It only does it if nqp::iscont returns true

[10:27] <jnthn> (where "it" is the wrapping)

[10:27] <atroxaper> jnthn: I'm I right that only Scalar is a 'container', but not an Array or Hash or Callable? Is it Rakudo specific implementation?

[10:30] *** pmurias left
[10:31] *** lichtkind left
[10:36] <tbrowder> guifa: if bill and i can help in houston (or ahead of time) we're happy to assist you

[10:37] <jnthn> atroxaper: Only Scalar and Proxy

[10:37] <jnthn> atroxaper: That .VAR is a no-op on anything exept these is spec

[10:37] <jnthn> atroxaper: As is the existence of Scalar and Proxy

[10:38] <atroxaper> jnthn: Now I check nqp::iscont(Array) == 0; I just want to know, is it part or specification (roast) or Rakudo implementation only. Because documentation describes "callable containers" for example.

[10:38] <jnthn> atroxaper: How exactly an implementation chooses to achieve that (e.g. Rakudo's container_spec mechanism) is implementation defined. There's also no official way to add additional kinds of containers either.

[10:39] <jnthn> nqp::iscont is - like all nqp::foo - Rakudo specific, but its semantics are such that it gives 0 whenever .VAR is identity

[10:39] <jnthn> And .VAR doing that on Array is spec

[10:40] <jnthn> (that is, returning identity)

[10:42] <atroxaper> jnthn: Many thanks! Now I understand much more then previously :) Some advents and documentations about 'containers' a little confused me and I decided to find out everything directly from their code.

[10:45] <jnthn> Yes, I think "container" gets used to mean quite a broad range of things, but only Proxy and Scalar are kinds of "item container"

[10:49] *** mowcat joined
[10:51] *** mowcat left
[10:51] *** pmurias joined
[10:54] *** hungryd7 joined
[10:54] *** hungrydonkey left
[10:54] *** veesh left
[10:54] *** wamba left
[10:56] <El_Che> atroxaper: Voldenet and jnthn saved the day :)

[11:02] *** zakharyas left
[11:03] *** zakharyas joined
[11:05] *** mowcat joined
[11:06] *** Kaiepi left
[11:06] *** domidumont left
[11:07] *** Kaiepi joined
[11:13] *** veesh joined
[11:34] *** sena_kun left
[11:48] *** sena_kun joined
[11:50] *** darkstardev13 left
[11:56] *** wamba joined
[11:58] *** molaf joined
[12:02] *** wbn left
[12:02] *** zakharyas left
[12:03] *** wbn joined
[12:05] *** patrickb joined
[12:10] *** atroxaper left
[12:12] *** darkstardev13 joined
[12:12] *** wamba left
[12:24] <lizmat> sometimes I wonder why o why people want to re-invent the wheel: http://blogs.perl.org/users/lichtkind/2020/02/introducing-kbos.html

[12:25] *** atroxaper joined
[12:25] <tadzik> maybe one day we'll end up with a round one... ;)

[12:25] <El_Che> round is overrated

[12:27] <El_Che> it's clear that Perl needs an extra OO framework

[12:27] <pmurias> lizmat: fun?

[12:29] <lizmat> I guess

[12:29] <El_Che> " class types (not even Raku has them) "

[12:30] <El_Che> isn't class type just a class?

[12:30] <El_Che> I am missing something probably

[12:30] <lizmat> I guess they mean that you could have a group of class sharing a type

[12:31] <El_Che> a class like a struct?

[12:31] <lizmat> m: role GroupType { }; class A does GroupType { }; class B does GroupType { }; dd A ~~ GroupType; dd B ~~ GroupType

[12:31] <camelia> rakudo-moar 8c995febd: OUTPUT: «Bool::True␤Bool::True␤»

[12:31] <lizmat> voila, in my interpretation, those are "class types"

[12:32] <lizmat> it feels the same as Positional or Associative classes, reallt

[12:32] <lizmat> *really

[12:32] <lizmat> alas, I've given up trying to comment on blogs.perl.org

[12:34] <pmurias> lizmat: is there an explanation of what he means by "class types"?

[12:34] <lizmat> not that I could further gather from the blog post

[12:35] <pmurias> OTOHhe has a next blog post planned on that topic 

[12:37] <El_Che> my definition of overengineering your app: creating an adhoc OO/ORM/Auth/etc system only for your app :)

[12:37] <El_Che> but on the other hand, maybe that's how generic libs are born :)

[12:38] <tyil> using `dd %?RESOURCES<foo>.DEFINITE` in a module gives me a warning "Use of uninitialized value %result{'resources/foo'} of type Any in string context.", but still shows `Bool::True` as the result of the `dd`. There's no 'foo' resource in the module

[12:38] <tyil> is it intended that a missing resource is still considered definite, while also showing a warning about it?

[12:39] <tyil> (I'm looking for a way to check in my module if the resource actually exists)

[12:39] <lizmat> what does dd %?RESOURCES<foo>:exists give ?

[12:39] *** hungrydonkey joined
[12:40] <tyil> Bool::False, but it seems to do that for existing resources as well

[12:41] <tyil> (that was one of the first things I tried, since it seemed the most obvious)

[12:41] <lizmat> maybe the AT-KEY implementation on %?RESOURCES is borked 

[12:42] *** hungryd7 left
[12:43] <tyil> https://github.com/rakudo/rakudo/blob/add2ec0d491218e59e6c7a517e37458e1a6c3daf/src/core.c/Distribution.pm6#L223

[12:43] <tyil> seems to always return a Distribution::Resource, not sure if those have (correct) boolean representations

[12:45] <lizmat> hmm... interesting, implementation appears "incomplete"  I'dsay

[12:45] <tyil> no method Bool() at least, and IO() always returns something as well

[12:46] <lizmat> would have to dive into that (having meant to do so for a while)

[12:47] <lizmat> but my head is full of other stuff at the moment, so that would be a hard context switch  :-(

[12:47] *** mowcat left
[12:48] <lizmat> I wonder though why Distribution::Resource doesn't just have an .IO instance of itself, and then use "handles" for all the methods it appears to support

[12:48] <tyil> I would have no clue on that either :p

[12:50] <tyil> using .IO on a non-existing resource also shows the warning, but does return an IO::Path pointing towards the /usr/share/perl6/site/resources directory

[12:59] *** domidumont joined
[12:59] *** abraxxa left
[13:06] *** vike joined
[13:13] *** domidumont left
[13:13] *** aborazmeh joined
[13:13] *** aborazmeh left
[13:13] *** aborazmeh joined
[13:18] <atroxaper> One more question about containers and binding... Why binding into $ and sigilless is different? Example:

[13:18] <atroxaper> my @a; @a = (1, 2) #uses Array.STORE

[13:18] <atroxaper> my \a = []; a = (1,2) # uses Array.STORE

[13:19] <atroxaper> my $a := []; $a = (1,2) # fail

[13:19] <atroxaper> my $a :=[]; $a<> = (1,2) # uses Array.STORE

[13:20] <jnthn> 'cus the compiler case-analyzes based on sigil

[13:21] <jnthn> And in the case there's no sigil, has to do a late-bound thing (e.g. nqp::iscont(x) ?? nqp::assign(x, y) !! x.STORE(y))

[13:22] <jnthn> In principle it could always do the latter, but then every assignment would code-gen into something ~5 times the bytecode size.

[13:25] <atroxaper> jnthn: Thanks!

[13:29] <patrickb> rba: Whenever you have time: I have made another change to the rakubrew.org website (fixing installation on Powershell). You can deploy whenever you have time.

[13:32] <tadzik> nice website :)

[13:32] *** molaf left
[13:33] *** Kaiepi left
[13:33] *** Kaiepi joined
[13:34] *** sena_kun left
[13:35] <rba[m]> .

[13:36] <patrickb> tadzik: Thanks!

[13:37] <rba> patrickb: lets go

[13:40] <rba> patrickb: The fix is in the image or in the data?

[13:42] <patrickb> only in the website repo at the moment.

[13:42] <patrickb> There is no now rakubrew version. Only the website changed

[13:43] <patrickb> tadzik: Once rakubrew is out of the testing phase, we'll have to decide whether rakudobrew will live on or will be deprecated. I'll leave that decision to you.

[13:45] <rba> patrickb: Do have to create a new docker image or do you have new download file for the filesystem?

[13:47] *** lucasb joined
[13:47] *** Skarsnik joined
[13:47] <Skarsnik> Hello there

[13:49] *** sena_kun joined
[13:52] *** mahmudov left
[13:53] <patrickb> rba: I'll create a docker image.

[13:54] <patrickb> What do I have to do with it?

[13:54] *** aborazmeh left
[13:55] <rba> patrickb: I pulled your changes, building the image and update the registery... Will be online in a few minutes...

[13:55] <patrickb> Ah! OK.

[13:55] <Skarsnik> hm, I am trying Comma, is that normal it tell me that all Test routine are not found? (like ok, done-testing..) even with use Test;

[13:55] <patrickb> rba: Thank you!

[13:56] *** mensvaga joined
[13:57] <jnthn> Skarsnik: Make sure that you have an SDK set up properly (under File > Project Structure)

[13:57] <rba> patrickb: updated, may you double-check, please?

[13:58] <patrickb> rba: Looks good!

[13:58] <Skarsnik> ohh thanks, I moved file round because it did not put the file in the folder I wanted, that probably why it lost the sdk setting x)

[14:00] <Skarsnik> still does not work. also it could be nice to be able to run zef from Comma (too lazy to try to run it under windows xD)

[14:08] <sena_kun> Skarsnik: no exceptions? Windows?

[14:09] <Skarsnik> I am streaming this if you want (I am writing test for an async server) https://www.twitch.tv/skarsnikus

[14:11] *** ZZZzz left
[14:15] <sena_kun> Skarsnik: I just opened comma under windows VM, sdk was broken, set a working one, closed comma, opened comma, ??? the subs fom Test are available.

[14:15] <Skarsnik> hm, let's see

[14:16] <Skarsnik> thanks, it works :)

[14:17] <sena_kun> Skarsnik: hmmm, what rakudo version do you use?

[14:17] <Skarsnik> or not

[14:17] <sena_kun> not star one, by accident?

[14:17] <Skarsnik> Raku 2020.01

[14:17] <sena_kun> Hmmm. :S

[14:18] <sena_kun> Skarsnik: it is a legitimate windows bug then, unfortunately.

[14:19] *** aborazmeh joined
[14:19] *** aborazmeh left
[14:19] *** aborazmeh joined
[14:28] <Skarsnik> Is there a way to know what it try to run?

[14:30] <sena_kun> Skarsnik: you need to unpack some jars...

[14:31] <sena_kun> Skarsnik: if you want to debug it real time, I can give some instructions

[14:33] <Skarsnik> I mean, I try to run something and it should probably shows what it try to do? like 'raku myfiletorun.raku' error blablalba

[14:34] <sena_kun> Skarsnik: the script is placed in jar resources, so you firstly have to obtain it.

[14:36] *** titsuki joined
[14:44] <sena_kun> Skarsnik: 2019.12 works, so a regression after migration to intellij platform 193 version.

[14:44] <Skarsnik> 2019.12 is not tagged are raku?

[14:44] <Skarsnik> I am confused x)

[14:45] <sena_kun> Skarsnik: sorry, I mean Comma release 2019.12.

[14:45] <Skarsnik> Hooo

[14:47] <Skarsnik> Do you have a link to this version so I can try? I don't find a link to older releases x)

[14:48] <libertas> hi, would like to try raku-debug with this line: $ raku-debug -e "'foobar' ~~ /f.+b/;"

[14:48] <libertas> ===SORRY!=== Error while compiling -e

[14:48] <libertas> Could not find Debugger::UI::CommandLine in:

[14:49] <libertas> do I have to install some CommandLine package?

[14:49] <rypervenche> libertas: You need to zef install Debugger::UI::CommandLine

[14:50] <rypervenche> If you don't have zef installed already, you can get it here: https://github.com/ugexe/zef

[14:50] <sena_kun> Skarsnik: do you have a subscription?

[14:51] <libertas> # zef install Debugger::UI::CommandLine

[14:51] <libertas> ===SORRY!=== Error while compiling /usr/local/bin/zef

[14:51] <rypervenche> libertas: Can you pastebin the errors for us?

[14:52] <Skarsnik> I am just trying comma, I don't have a sub then ^^

[14:53] <libertas> rypervenche: I'll delete zef, reinstall it, and do as you suggest

[14:53] <rypervenche> libertas: You have zef already, you shouldn't need to reinstall it. Can you show the errors you're seeing?

[14:56] <libertas> is zef meant to be run under root, right?

[14:57] <rypervenche> I believe it can be run as either a user or as root. I do it as a user so all of my modules get installed into ~/.raku .

[14:58] <libertas> ok

[14:58] <libertas> I did the reinstall again and it failed as can be seen at https://pastebin.com/E3JaFWuw

[14:58] <sena_kun> Skarsnik: only latest community releases are served, so nope. you can either wait for a hotfix release at the end of the month if there will be one or move to a linux box.

[14:59] *** atroxaper left
[15:00] <Skarsnik> it's weird, because it works fine for syntax check x)

[15:00] <Geth> ¦ doc: 41dfc333fb | Coke++ | doc/Language/contexts.pod6

[15:00] <Geth> ¦ doc: fix typo

[15:00] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/41dfc333fb

[15:00] <Geth> ¦ doc: bf04414e98 | Coke++ | doc/Language/faq.pod6

[15:00] <Geth> ¦ doc: whitespace

[15:00] <linkable6> Link: https://docs.raku.org/language/contexts

[15:00] <linkable6> Link: https://docs.raku.org/language/faq

[15:00] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/bf04414e98

[15:01] <sena_kun> Skarsnik: what do you mean with "syntax check"?

[15:01] <sena_kun> or, well, I know what you mean, but Comma doesn't use `raku -c` or something like that to check syntax.

[15:02] <Skarsnik> it's just an issue with symbols from other modules or something?

[15:02] <sena_kun> Skarsnik: seems like it. I'll patch it next release, possibly we'll do a community hotfix.

[15:03] <rypervenche> libertas: Yes, you already have zef, so no need to try to reinstall it. Try simply running: zef install Debugger::UI::CommandLine

[15:04] <[Coke]> .

[15:04] <Skarsnik> hm, it does find await too, is that supposed to be a language keyword? x)

[15:04] <Skarsnik> *does not

[15:04] *** aborazmeh left
[15:05] <sena_kun> Skarsnik: symbols from CORE are resolved differently, so it is not entirely useless. :)

[15:05] <libertas> rypervenche: I just did as mentioned in the github installation section

[15:05] <libertas> rypervenche: $ ./zef install Debugger::UI::CommandLine

[15:05] <libertas> ===SORRY!=== Error while compiling /usr/local/zef/bin/./zef

[15:05] <libertas> Could not find Zef::CLI in:

[15:06] <libertas> $ ./zef --help

[15:06] <libertas> ===SORRY!=== Error while compiling /usr/local/zef/bin/./zef

[15:07] <rypervenche> libertas: How did you install rakudo and zef the first time?

[15:08] <libertas> rakudo was via the package manager, zef as git clone https://github.com/ugexe/zef

[15:08] <rypervenche> What does "raku -v" output?

[15:09] <tadzik> git clone will not be enough to install it

[15:09] <libertas> rypervenche: This is Rakudo version 2020.01 built on MoarVM version 2020.01.1

[15:09] <libertas> implementing Perl 6.d.

[15:09] <tadzik> unless you followed it up with the install step as the readme says :)

[15:09] <tadzik> but then you shouldn't need to run it with ./zef

[15:10] <libertas> tadzik: but it generates an error

[15:10] <libertas> runnit with ./zef because it's not im my PATH yet

[15:14] <tadzik> libertas: did you run the `perl6 -I. bin/zef install .`?

[15:14] <libertas> tadzik: $ perl6 -I. bin/zef install .

[15:14] <libertas> ===SORRY!=== Error while compiling /usr/local/zef/bin/zef

[15:14] <libertas> ===SORRY!=== Error while compiling /usr/local/zef/lib/Zef/CLI.pm6 (Zef::CLI)

[15:14] <libertas> ===SORRY!=== Error while compiling /usr/local/zef/lib/Zef/Client.pm6 (Zef::Client)

[15:14] <libertas> Could not find NativeCall in:

[15:15] <libertas> ...

[15:18] <tadzik> hrm

[15:18] <libertas> at /usr/local/zef/lib/Zef/Client.pm6 (Zef::Client):715

[15:18] <libertas> at /usr/local/zef/lib/Zef/CLI.pm6 (Zef::CLI):2

[15:18] <libertas> at /usr/local/zef/bin/zef:3

[15:18] <tadzik> it seems like it's trying to run the already installed version without it actually being properly installed, for some reason

[15:18] <libertas> I removed the directory and cloned it some minutes ago

[15:18] <tadzik> ...or are you actually running this in /usr/local/zef?

[15:19] <libertas> yes I am

[15:20] <tadzik> ah, okay then

[15:21] <tadzik> NativeCall should be included with your installation

[15:21] <tadzik> does `raku -e 'use NativeCall'` work, or does it error out too?

[15:24] *** wamba joined
[15:24] *** wamba left
[15:26] *** domidumont joined
[15:27] *** rafaschi joined
[15:27] <[Coke]> who was asking about the Pakku error with Hash::Merge::Augment ?

[15:33] *** sena_kun left
[15:35] <libertas> tadzik: ===SORRY!=== Error while compiling -e

[15:35] <libertas> Could not find NativeCall in:

[15:35] <libertas> regarding my distro packages, I've installed the following: MoarVM-2020.01.1_1, nqp-2020.01_1 and rakudo-2020.01_1

[15:38] *** hungrydonkey left
[15:42] *** hungrydonkey joined
[15:49] *** sena_kun joined
[15:55] <Skarsnik> I am confused, how I wait for a Supply to a give me data (ideally with a timeout)?. I am trying to use Cro::Websocket in a 'sync' manner

[15:55] <rypervenche> libertas: What distro?

[15:57] <jnthn> Skarsnik: Use a `react` block

[15:57] <jnthn> Skarsnik: One whenever over the data and collect it somewhere, another whenever Promise.in($timeout) { die "timed out" }

[15:58] <libertas> rypervenche: it's Void

[15:59] *** titsuki left
[16:01] <Skarsnik> Hoo thanks, yeah make sense ^^

[16:02] <Skarsnik> I did not think a react block was blocking the code

[16:02] <jnthn> Yes, `react` is sort of like `await supply ...`

[16:07] *** wamba joined
[16:08] *** hythm joined
[16:09] <hythm> [Coke] it was me asking about the Pakku error with Hash::Merge::Augment

[16:12] *** pmurias left
[16:12] <[Coke]> hythm: not sure if it helps, but golfed down to: https://gist.github.com/coke/4c60943a9d754d0d2816854ee02291cb

[16:15] <Skarsnik> funny, I set the --prefix on configure.pl to ~/raku and it created me a ~ directory (and a raku in it)

[16:18] <hythm> thanks [Coke] thats definitely helpful, I also opened this issue    https://github.com/scriptkitties/p6-Hash-Merge/issues/5 

[16:18] <cpan-raku> New module released to CPAN! Gnome::GObject (0.15.12) by 03MARTIMM

[16:19] <[Coke]> feel free to steal that gist

[16:20] <[Coke]> Perhaps someone can reduce the Pakku::Log include to something smaller. I was happy to get it down to a single use.

[16:22] *** atroxaper joined
[16:23] <hythm> i will work on it in a few days,,, but for the moment I made a quick work around by not using Hash::Merge::Augment and stole the  "hashmerge"  sub from the module :D, till i get the time to work on it

[16:23] <Skarsnik> Hoo insteresting module x)

[16:35] <[Coke]> hythm: thanks for updating the "depends"

[16:35] *** wamba left
[16:36] *** wamba joined
[16:40] *** pecastro left
[16:45] <Skarsnik> hu

[16:45] <Skarsnik> skarsnik@DESKTOP-UIA12T1:~/raku/zef$ ../share/perl6/site/bin/zef --help

[16:45] <Skarsnik> ===SORRY!===

[16:45] <Skarsnik> No candidate found for 'zef' that match your criteria.

[16:45] <Skarsnik> Did you perhaps mean one of these?

[16:45] <Skarsnik>   Distribution | Author(ity) | Version

[16:46] <rafaschi> Skarsnik: please use a pasting service, don't paste multiple lines in IRC.

[16:56] <Altreus> I wish IRC had a pre-commit hook

[17:00] *** domidumont left
[17:01] <masak> hypothesis: lichtkind wrote "class types" but meant "typeclasses" (like in Haskell)

[17:01] <masak> it's true that Raku (*shudder*) does not have them

[17:01] <masak> I suspect a language needs to be more "statically typed" to have them

[17:02] <rypervenche> libertas: I'll set up a Void VM and see if a fresh install has any problems.

[17:04] <libertas> rypervenche: thank you so much!

[17:08] *** molaf joined
[17:11] *** abraxxa joined
[17:13] *** abraxxa left
[17:13] *** |Sno| left
[17:13] *** kensanata joined
[17:13] *** abraxxa joined
[17:14] *** dogbert17 left
[17:15] <discord6> <Highlander> does anyone happen to remember the old, hacky way of making class members required, prior to the required trait being introduced?

[17:15] *** mowcat joined
[17:16] <Skarsnik> Private multi-methods are not supported. Hm, is there a real cause or it's just not implemented yet? x)

[17:21] <rafaschi> Highlander: check if it exists in the TWEAK submethod?

[17:33] *** dakkar left
[17:33] *** sena_kun left
[17:36] <Altreus> Time for me to ask basic questions again! Can I populate an object from a hash, essentially the opposite of self.Capture.Hash ?

[17:36] <Altreus> er, small h there

[17:37] <Altreus> I can probably do it with a loop but I'm sure there's a way along the lines of "yes, easy" or "don't do that, do it properly"

[17:37] *** wamba left
[17:37] <Skarsnik> MyClass.New(|%hash)maybe

[17:37] <Altreus> nar I need to populate a constructed object

[17:38] <Altreus> I was doing what you said but I have discovered a requirement to fill in objects with only some of their properties

[17:38] <Altreus> ... only some properties populated

[17:41] *** kensanata left
[17:41] <lizmat> Altreus: maybe https://modules.raku.org/dist/Object::Delayed is something for you?

[17:41] <Altreus> wwwwwwwwwwwwhhhhhhhhhhh

[17:42] <rypervenche> libertas: Almost done. Just having issues getting git installed :P

[17:42] <Altreus> is there anything you fine people have not done?

[17:42] <Altreus> I will see about this forthwith

[17:44] <libertas> rypervenche: I'm curious to see if you have the same problem

[17:45] *** domidumont joined
[17:45] <Skarsnik> I wonder if there is a await-timeout in a module x)

[17:46] <Altreus> lizmat: my use case is that the Discord API sometimes sends me only part of an object - often it's ID, which is common for APIs, but sometimes other parts too. Can I make an object whose $.id is immediate and the rest of which is delayed?

[17:46] <Altreus> ... using this?

[17:47] <lizmat> class A { has $.immediate; has $.delayed handles <list of methods> }  ?

[17:47] <Altreus> ah, food for though

[17:47] <Altreus> t

[17:47] <lizmat> I haven't tried that, but I don't see a reason why that wouldn't work

[17:48] <Altreus> Do attributes create methods, as far as handles is concerned?

[17:48] <Altreus> I guess as far as the user is concerned it does

[17:48] *** sena_kun joined
[17:48] <Skarsnik> Are you working on the discord module?

[17:48] <Altreus> Only if you're referring to the one I'm working on

[17:48] <lizmat> yeah, that's my interpretation of that

[17:49] <Altreus> has $.delayed handles <list> = slack { something I've yet to invent }; ?

[17:50] <lizmat> Altreus: yeah, that sounds about right ?

[17:51] <Altreus> I'll play around :) thank you lizmat !

[17:51] <lizmat> Altreus: yw, hope it works out and the result is a nice blog post for the RWN

[17:51] <lizmat> :-)

[17:51] *** aborazmeh joined
[17:51] *** aborazmeh left
[17:51] *** aborazmeh joined
[17:52] <Altreus> I think I'll call them all ::ButLazy

[17:52] *** domidumont left
[17:52] <Altreus> or maybe ::ButReal

[17:52] <Altreus> yes

[17:52] *** pecastro joined
[17:52] *** wamba joined
[17:54] *** aluaces left
[17:55] *** domidumont joined
[17:57] <rypervenche> libertas: It looks as though the Void package may be broken. A fresh install can't find NativeCall.

[17:59] <Altreus> can the slack property access the other properties? Does the block know about the owner object?

[17:59] <libertas> ah, glad you found the issue

[18:00] <Skarsnik> I am always confused, why calling .mymethod in a method does not work when self.mymethod work?

[18:00] <Altreus> cos it runs on $_

[18:00] *** hacktor joined
[18:01] <libertas> rypervenche: xbps-query -S rakudo  shows info about the package including the maintainer

[18:01] <libertas> will you contact him?

[18:02] <rypervenche> libertas: I'm filing an issue on Github. I'll send you the link when I'm done.

[18:03] *** hungrydonkey left
[18:03] <Altreus> nice, it can see $!id

[18:03] <Altreus> I'm not going to pretend to know how this works

[18:05] <lizmat> Altreus: sorry, was afk 

[18:06] <Altreus> it's fine, it turned out to be easy to TIAS

[18:06] <Altreus> I'm so used to working in an environment where TIAS is 20 minutes of setup

[18:07] *** wamba left
[18:10] <Altreus> I assume handles just proxies all candidates of a multi method?

[18:11] <Skarsnik> TIAS?

[18:13] <Skarsnik> hm, how I can force the type of an array/list passed as argument?

[18:13] <rypervenche> libertas: https://github.com/void-linux/void-packages/issues/19151

[18:14] <Skarsnik> basicly I am try to fix this.

[18:14] <Skarsnik> Cannot resolve caller AUTOGEN(Usb2Snes:D: Usb2Snes-Opcode:D, List:D); none of these signatures match:

[18:14] <Skarsnik>     (Usb2Snes: Usb2Snes-Opcode $cmd, Str @args, *%_)

[18:15] <rypervenche> libertas: In the meantime you might want to install from source.

[18:17] *** jmerelo joined
[18:18] <libertas> rypervenche: is it only the rakudo package that I should install from source?

[18:21] *** aluaces joined
[18:22] *** domidumont left
[18:23] <lizmat> Altreus: my understanding is that it does a ^find_method, which gives you the proto in case of a multi

[18:24] <lizmat> m: class A { multi method a { } }; dd A.^find_method("a")

[18:24] <camelia> rakudo-moar 8c995febd: OUTPUT: «Method a = proto method a (::T : |) {*}␤»

[18:27] <Altreus> it's all magic

[18:28] *** wildtrees joined
[18:30] <Skarsnik> hu self.send-command($cmd, Array[Str].new($arg)); this is not very pretty xD

[18:33] <rypervenche> The pre-compiled version has it all included: https://rakudo.org/downloads

[18:33] <rypervenche> libertas: ^

[18:34] *** aborazmeh left
[18:34] <libertas> rypervenche: ok, thank you so much for your help!  Raku is such an excellent language!

[18:34] <rypervenche> libertas: Let us know if you have any questions with it :)

[18:36] <rypervenche> How does the Linux binary tarball get created? There's an incorrect path in the README.md for it.

[18:40] *** hythm left
[18:40] *** abraxxa left
[18:40] *** kst joined
[18:41] *** aborazmeh joined
[18:41] *** aborazmeh left
[18:41] *** aborazmeh joined
[18:42] <Altreus> I'm going home now, but once there I've got a compiler error to ask about that probably involves me doing some very silly things, so ... take care :)

[18:43] <lizmat> Altreus: travel safely

[18:49] <tbrowder> hi, all

[18:49] <rafaschi> heya

[18:50] <tbrowder> i just noticed raku doesn't have trig functions with degree versions

[18:51] <lucs> In my Foo.pm6, I print $?FILE and obtain something like "/path/to/Foo.pm6 (Foo)".

[18:51] <lucs> What's that trailing " (Foo)" doing there?

[18:51] <tbrowder> any objections to adding them?

[18:52] <atroxaper> Skarsnik: self.send-command($cmd, (my Str @ = $arg)); # looks better?

[18:52] <sena_kun> lucs: module name

[18:52] <lucs> Sure, but why?

[18:52] <tbrowder> e.g.: sind cosd tand atand atan2d etc

[18:53] <sena_kun> lurcs: hmm, is "why" to my answer or?

[18:53] <lucs> I want the file name, not its description or whatever.

[18:53] <sena_kun> lucs: you can just trim it

[18:54] <lizmat> m: dd $?FILE

[18:54] <camelia> rakudo-moar 8c995febd: OUTPUT: «"<tmp>"␤»

[18:54] <tbrowder> my answer is 1. because we can and 2. i want to use the repl as a pocket caculator

[18:54] <lucs> sena_kun: That is seriously LTA.

[18:54] <lizmat> m: say $?FILE

[18:54] <camelia> rakudo-moar 8c995febd: OUTPUT: «<tmp>␤»

[18:55] <lucs> lizmat: Yeah, I tried that with camelia here, saw the same results.

[18:55] <lizmat> $ raku 1

[18:55] <lizmat> "/Users/liz/Github/rakudo.moar/1"

[18:55] <lizmat> $ cat 1

[18:55] <lizmat> dd $?FILE;

[18:56] <lizmat> ah, precomped?

[18:56] <sena_kun> lizmat: you need file to be in a module-like compunit

[18:56] <sena_kun> not a temp or a script

[18:56] <lucs> Oh, yes, it is precomped I guess.

[18:56] <atroxaper> tbrowder: probably, it is good to stay a core of compiler not too large if possible. Any additional math functions maybe implemented in modules.

[18:57] <lizmat> lucs: confirmed... wonder where that comes from

[18:57] <sena_kun> dunno, I think it is handy, sometimes you want to know the module a thing is from. we are using it in Comma, for example. maybe $?FILE is not the most obvious name compared to e.g. $?FILEINFO (which can hold more things?), but hmm

[18:57] <lizmat> I'd say that *is* LTA

[18:58] <lucs> sena_kun: The handiness is nice, but it should be implemented somehow else :)

[18:58] <lizmat> "Which file am I in?"

[18:58] *** sauvin left
[18:58] <lizmat> so, you could argue it is wrong in more than one way

[18:58] <lizmat> a. it's a Str, not an IO::Path

[18:58] <lizmat> b. it's not an .IOable string

[18:59] <lizmat> lucs: could you make an issue for that ?

[18:59] <lucs> OK

[18:59] <lucs> Thanks for confirming

[18:59] *** jmerelo left
[18:59] <sena_kun> NOOOOOOOOOOOO

[19:00] <sena_kun> github is at it again...

[19:00] <tbrowder> atroxaper: but we already have many core math routines and the degree versions are probably used more by non-mathematicians

[19:03] *** Black_Ribbon joined
[19:03] <rafaschi> I don't think new functions would be the best approach, but a new numeric type that can do clock arithmetic would be nice. If it knew how to convert itself to radians, the trig functions could accept it.

[19:04] <sena_kun> wouldn't one want to write a module for it?

[19:04] <rafaschi> At least at first, I think it should be a module.

[19:05] <atroxaper> tbrowder: we already have the to-json sub but want to remove it from the core. All thing in the core have to be documented and covered by tests (spec). There are a lot of unobvious tasks for each new thing. For example, a good subs' naming.

[19:05] <sena_kun> IIRC, the current policy is "make it a module at first" and then "if there are serious reasons to do so, pull into core".

[19:05] <tbrowder> maybe there is one already...

[19:09] <tbrowder> there is Math::Trig but no decimal trig functions

[19:09] <lucs> Heh. https://github.com/rakudo/rakudo/issues/2539

[19:18] *** patrickb left
[19:18] <lizmat> lucs++

[19:20] <tbrowder> .seen perlpilot

[19:20] <lucs> tbrowder: He is no longer with us :(

[19:20] *** thundergnat_ joined
[19:20] <thundergnat_> m: sub postfix:<°> (Numeric $d) { $d * τ / 360 } say sin 45°; say sin 90°; say cos 0°; # who needs a module?

[19:20] <camelia> rakudo-moar 8c995febd: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3ostfix:<°> (Numeric $d) { $d * τ / 360 }7⏏5 say sin 45°; say sin 90°; say cos 0°; #␤    expecting any of:␤  …»

[19:21] <thundergnat_> argh

[19:21] <tbrowder> hm, did he leave in anger?

[19:21] <thundergnat_> m: sub postfix:<°> (Numeric $d) { $d * τ / 360 }; say sin 45°; say sin 90°; say cos 0°;

[19:21] <camelia> rakudo-moar 8c995febd: OUTPUT: «0.7071067811865475␤1␤1␤»

[19:21] <lizmat> tbrowder: no, he really left this plane

[19:21] <lucs> tbrowder: Deceased :(

[19:21] *** [Sno] joined
[19:21] <tbrowder> oh, i see

[19:21] <lizmat> he still committed every now and then when he was already really sick

[19:22] <lizmat> he died just over a year ago, if I remember correctly

[19:22] *** thundergnat_ left
[19:22] <moritz> I very much enjoyed collaborating with him

[19:23] <lizmat> so did I, and not nearly enough  

[19:24] <tbrowder> ah, that's coming back to me. does anyone know any family of his or anyone who might be able to day anything about ownership of his Math::Trig module?

[19:25] <tbrowder> s/day/say

[19:26] <sena_kun> tbrowder: I think you can just fork, update maintainence notices if any and update ecosystem versions with yours

[19:26] <tbrowder> it's the perfect one for adding decimal trig functions

[19:27] <moritz> yes, just take over his module for maintenance / enhancements

[19:29] <tbrowder> ok, i'll think about doing that, but don't let that stop anyone else who wants to jump in first!

[19:32] <tbrowder> thundergnat: that is slick! the awesome power of raku!

[19:34] *** sena_kun left
[19:36] *** domidumont joined
[19:37] *** domidumont left
[19:38] *** hankache joined
[19:38] <hankache> hello #raku

[19:39] <hankache> m: use Test; plan1; can-ok 'Raku', 'is-prime';

[19:39] <camelia> rakudo-moar 8c995febd: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    plan1 used at line 1. Did you mean 'plan'?␤␤»

[19:39] <hankache> m: use Test; plan 1; can-ok 'Raku', 'is-prime';

[19:39] <camelia> rakudo-moar 8c995febd: OUTPUT: «1..1␤ok 1 - An object of type 'Str' can do the method 'is-prime'␤»

[19:40] <hankache> How is this possible?

[19:40] <lizmat> m: say "41".is-prime

[19:40] <camelia> rakudo-moar 8c995febd: OUTPUT: «True␤»

[19:40] <lizmat> Cool

[19:41] <lizmat> a Str is Cool, so using it in a numeric context will cause automatic conversion

[19:41] <hankache> oh ok. Thanks lizmat.

[19:41] <hankache> I guess the doc mislead me, it didn't list a candidate for Cool https://docs.raku.org/routine/is-prime

[19:42] <hankache> lizmat++

[19:47] *** sena_kun joined
[19:58] *** aborazmeh left
[20:00] *** stoned75 joined
[20:17] <rypervenche> m: say Int.^mro

[20:17] <camelia> rakudo-moar 8c995febd: OUTPUT: «((Int) (Cool) (Any) (Mu))␤»

[20:19] <rypervenche> Does anyone know who is in charge of the built Linux tarballs on the rakudo.org download page?

[20:20] <lizmat> El_Che  ?

[20:32] *** hankache left
[20:33] <stoned75> :q

[20:33] <rypervenche> Hmm, the tarball looks to be different from the one on rakudo-pkg.

[20:34] *** cpan-raku left
[20:35] *** cpan-raku joined
[20:35] *** cpan-raku left
[20:35] *** cpan-raku joined
[20:35] <sena_kun> rypervenche: what do you mean? access to the site? or who makes the release tarballs?

[20:36] <rypervenche> sena_kun: There's a mistake in the README.md. I'm not sure where to submit an issue, if possible.

[20:36] <sena_kun> rypervenche: what readme, rakudo one?

[20:37] <rypervenche> Yes, the one from the Linux binary on https://rakudo.org/downloads

[20:37] <sena_kun> rypervenche: I can patch, what's the typo?

[20:37] <sena_kun> s/typo/mistake/

[20:37] <rypervenche> $(scripts/set-env.sh) should be set to $(bin/set-env.sh)

[20:38] <sena_kun> rypervenche: https://github.com/rakudo/rakudo/blob/ee1b9918ce5837aa210aa9b7dc82a39274aa228b/tools/build/binary-release/Linux/README.md#running-raku <- this?

[20:39] <sena_kun> or, rather, https://github.com/rakudo/rakudo/blob/master/tools/build/binary-release/Linux/README.md#running-raku

[20:39] <sena_kun> rypervenche: can you please open a ticket in rakudo repo?

[20:39] <rypervenche> Sure. Would a PR be better?

[20:40] <sena_kun> not sure, there are guides other than linux one, I'd ask about it a person who edited them before doing any fixes... though we might just ask for a review.

[20:41] *** hankache joined
[20:41] <rypervenche> All right. I'll submit an issue. Thanks.

[20:41] <sena_kun> rypervenche++

[20:46] <Altreus> right

[20:47] <Altreus> here's a branch https://github.com/shuppet/p6-api-discord/tree/comms-improvements

[20:47] <Altreus> uh

[20:47] <Altreus> not that one

[20:47] <Altreus> https://github.com/shuppet/p6-api-discord/tree/object-delayed

[20:47] <Altreus> I get an error: No such method 'raku' for invocant of type '::?CLASS'

[20:48] <Altreus> I have no idea what is trying to do what

[20:48] <Altreus> it is sufficient to do «raku -Ilib -MAPI::Discord»

[20:49] <Altreus> (with 2020.01)

[20:49] <Altreus> What mistake have I made? :D

[20:50] <sena_kun> Altreus: interesting... is there a more complete trace?

[20:51] <Altreus> this is the entirety of it https://gist.github.com/Altreus/001c7da08940c5ccd0c59df91c559a84

[20:51] <Altreus> I wondered if I've simply done something wrong in the way I declare classes in Channel.pm

[20:51] <Altreus> 6

[20:51] <Altreus> being the only one I've changed and the one with the error

[20:52] <sena_kun> Altreus: can you run it with --ll-exception?

[20:52] <Altreus> uh, well not the only one - the main one

[20:52] <Altreus> ya

[20:53] <Altreus> sena_kun: I've updated the gist

[20:53] *** rafaschi left
[20:54] <sena_kun> that's better, now I feel like you can file a rakudo issue out of this. :)

[20:55] <lizmat> Altreus: you may have found a bug in Object::Delayed, caused by recent renaming

[20:58] <Altreus> ah nuts

[20:58] <Altreus> :)

[20:59] <Altreus> well it works in general so it's probably my crazy role shenanigans

[20:59] <Altreus> I'll pare it down for now - should I raise a raku issue or an Object::Delayed one? :)

[21:00] <lizmat> start with an Object::Delayed one

[21:00] <Altreus> okay :)

[21:00] <lizmat> Altreus++

[21:01] <guifa> tyil: I think ugexe knows more about the inner workings on the Distribution.  There was definitely some changes made in there I think between b and c (or at least documentation took a while to catch up)

[21:04] <Altreus> I'm afraid the issue is not very specific https://github.com/lizmat/Object-Delayed/issues/4

[21:05] <Altreus> But I did a very specific thing to make up for it! https://github.com/lizmat/Object-Delayed/pull/3

[21:05] *** hankache left
[21:06] <lizmat> Altreus++  # PR merged

[21:06] <Altreus> That was weird. I saw you merge it through my translucent terminal

[21:08] <guifa> tyil: if you’re looking for a way to check if it exists, I *think* I remember the one that I finally got to work was %?RESOURCES{$filename}.IO.e

[21:13] *** pmurias joined
[21:16] *** kensanata joined
[21:17] *** domidumont joined
[21:20] *** mensvaga left
[21:26] *** domidumont left
[21:29] <Altreus> This error is odd

[21:30] <Altreus> It doesn't seem to be related to O:D

[21:30] <Altreus> But also it does

[21:30] <Altreus> ah, no it's just too much information and I got confused :)

[21:31] <Altreus> lizmat: O:D isn't involved :) it's a raku thing... that I have yet to isolate

[21:31] <lizmat> *phew*  :-)

[21:31] <Altreus> phew but also not phew :D

[21:31] <Altreus> I can't be sure it's not me doing something wrong

[21:32] <lizmat> well, the code you presented, was pretty big... perhaps it's possible to make a mre ?

[21:32] <Altreus> Here's a smaller thing https://gist.github.com/Altreus/1428eb3e20c14ef46cf9a5283a5e78a9

[21:33] <Altreus> From here https://github.com/shuppet/p6-api-discord/blob/8cc714c8ae9d905d35d2c76005312a17a7563874/lib/API/Discord/Object.pm6

[21:33] <Skarsnik> I wonder if my GPTrixie branch still make rakudo crash

[21:33] *** sena_kun left
[21:33] <Altreus> I haven't tried to pare down that role to which bit is wrong

[21:34] <Altreus> oh wait I might be able to peel off a layer

[21:35] <Altreus> It doesn't like my JSONy: https://github.com/shuppet/p6-api-discord/blob/8cc714c8ae9d905d35d2c76005312a17a7563874/lib/API/Discord/HTTPResource.pm6#L33

[21:45] <Altreus> Perhaps a multi method can't switch on the definedness of its invocant?

[21:47] <lizmat> m: class A { multi method a(A:D:) { "instantiated" }; multi method a(A:U:) { "type object" } }; dd A.a; dd A.new.a

[21:47] <camelia> rakudo-moar 8c995febd: OUTPUT: «"type object"␤"instantiated"␤»

[21:47] <lizmat> Altreus: ^^

[21:47] <Altreus> Then it doesn't like that combined with ::?CLASS

[21:47] <Altreus> Cos it worked when I renamed one of the options

[21:48] <Altreus> hmm

[21:48] <Altreus> It works when I *remove* one of the options

[21:48] <Altreus> i.e. leave one in, but still multi

[21:49] *** sena_kun joined
[21:49] <Altreus> right

[21:52] *** dustinm` left
[21:54] <Altreus> I have isolated it to: A multi method, differentiated by definedness of invocant, in a Role, using ::?CLASS instead of a known class name, where *one of the multis is unimplemented*

[21:54] <Altreus> So, nice and simple

[21:54] *** rindolf left
[21:55] <Altreus> The idea being that whatever consumes it gets one method with a default implementation on a type object, but has to implement the instance version

[21:55] <Altreus> Should I expect it to work? :)

[21:55] <lizmat> gist ?

[21:56] <Altreus> except ... I can't get it to break

[21:56] <Altreus> ohhh it's the return type!

[21:57] <Altreus> Now I can gisy

[21:57] <Altreus> t

[21:57] <Altreus> here :) https://gist.github.com/Altreus/528c6172a673c0adef7dd7a3ace22b19

[21:57] <Altreus> without « returns ::?CLASS » it seems fine

[21:58] <lizmat> nine: grrrr  "repeat while $?FILE.ends-with($caller.file) {

[22:00] <Altreus> I can't put « returns ::?CLASS » on an unimplemented multi method which also uses ::?CLASS to define the invocant

[22:01] <Altreus> so those four things together cause this error, and it seems like any combination of fewer than those four things is fine

[22:01] <Altreus> I guess I'll open a raku issue :D

[22:03] <tyil> guifa: even for nonexistend files, %?RESOURCES returns the base dir of the repo's resources dir, which is true when called .IO.e on it

[22:03] <tyil> though it *also* shows a warning for me

[22:03] <guifa> aaah maybe that’s what I was doing and catching the warning

[22:04] <guifa> (it’s been a while since I worked with the Fluent module that had the same issue)

[22:04] <tyil> for my current module, I'm only working with files, so I can .IO.f for now

[22:04] <tyil> but it does seem like very awkward behaviour

[22:06] <xinming> m: my $cmd = "curl -s example.com"; my $res1 = qx{$cmd}; $res1.perl.say; my $res2 = qx{curl -s example.com}; $res2.perl.say

[22:06] <camelia> rakudo-moar 8c995febd: OUTPUT: «""␤"<!doctype html>\n<html>\n<head>\n    <title>Example Domain</title>\n\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initia…»

[22:06] <xinming> In this example, Why will the second qx work, But not the first?

[22:06] <jnthn> 'cus q doesn't interpolate

[22:07] <xinming> Oops, Ignore me

[22:07] <jnthn> You probably want qqx 

[22:07] <xinming> I forgot qqx :-)

[22:07] <xinming> Yea

[22:10] <Altreus> https://github.com/rakudo/rakudo/issues/3483

[22:10] <Altreus> :)

[22:10] <Altreus> jnthn is here to tell me why I shouldn't do that :D

[22:11] *** dustinm` joined
[22:16] *** MasterDuke left
[22:17] <jnthn> Altreus: 'cus it's a bad idea!

[22:17] * jnthn actually reads the issue :)

[22:17] <Altreus> :x

[22:17] <jnthn> Altreus: Hm, that should probably work

[22:18] <jnthn> Some missing generic instantiation somewhere I guess

[22:18] <Altreus> It didn't strike me as foolish

[22:18] <Altreus> But foolish things often don't

[22:18] <jnthn> No, at first glance that seems reasonable to me

[22:19] <Altreus> :)

[22:19] <jnthn> m: role R[::T] { method m(--> T) { T.new } }; R.m

[22:19] <camelia> rakudo-moar 8c995febd: OUTPUT: «No appropriate parametric role variant available for 'R'␤  in block <unit> at <tmp> line 1␤␤»

[22:19] <Altreus> I'll use the workaround for now - removing the returns

[22:19] <jnthn> m: role R[::T] { method m(--> T) { T.new } }; R[Int].m

[22:19] <camelia> rakudo-moar 8c995febd: OUTPUT: «Died with X::TypeCheck::Return␤  in method m at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:19] <jnthn> Hah, yes, it's a more general buglet

[22:20] <xinming> m: my %h = <a b>; %h[]:k.perl.say; %h<>:k.perl.say;

[22:20] <camelia> rakudo-moar 8c995febd: OUTPUT: «(0,)␤("a",)␤»

[22:21] <xinming> jnthn: In this example, I notice the diff use of [] vs <> on Hash, I thought [] and <> are both decont operators. But now, I'm confused,

[22:21] <xinming> what does the [] and <> exactly do underneath please?

[22:24] *** nosqrt joined
[22:49] *** titsuki joined
[22:59] *** kensanata left
[23:00] <tbrowder> can anyone tell me the secret to getting a new module recognized by travis?

[23:01] <tbrowder> as far as i know i'm using all the same support files (.travis, meta6, etc.) but travis isn't seeing it nor can i see it when i go to travis.

[23:16] <tbrowder> afk

[23:33] *** sena_kun left
[23:36] <cpan-raku> New module released to CPAN! Math::Trig (0.3.1) by 03TBROWDER

[23:43] *** lucasb left
[23:44] <libertas> after untarring a rakudo archive, compiling and `make install`, the files are at the `rakudo source`/install directory.

[23:45] <libertas> what do you usually do?  set PATH to include that directory or do you copy the items to /usr/local or other place?

[23:49] *** sena_kun joined
[23:59] *** wamba joined
