[00:16] *** xinming_ left
[00:17] *** xinming_ joined
[00:25] <Geth> ¦ doc: a2c9ed6340 | Coke++ | doc/Type/Mu.pod6

[00:25] <Geth> ¦ doc: Follow majority spelling of Raku-ish

[00:25] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/a2c9ed6340

[00:25] <linkable6> Link: https://docs.raku.org/type/Mu

[00:26] <guifa> Is there a particular reasing that doing bitwise operations on bytes requires upgrading to Int?  That actually screws up results in some cases

[00:26] <guifa> reason*

[00:46] *** markoong left
[01:01] *** aborazmeh joined
[01:01] *** aborazmeh left
[01:01] *** aborazmeh joined
[01:22] *** sena_kun joined
[01:23] <Xliff> sena_kun: https://github.com/Raku/Blin/pull/23

[01:23] *** Altai-man_ left
[01:33] *** xinming_ left
[01:34] *** xinming_ joined
[01:47] *** molaf left
[01:55] *** mowcat left
[01:59] *** molaf joined
[02:08] *** aborazmeh left
[02:18] <Geth> ¦ ecosystem: tinmarino++ created pull request #485: Add Slang::Nogil module link to META

[02:18] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/485

[03:08] *** linkable6 left
[03:08] *** evalable6 left
[03:10] *** evalable6 joined
[03:11] *** linkable6 joined
[03:21] *** Altai-man_ joined
[03:23] *** sena_kun left
[03:25] *** aborazmeh joined
[03:25] *** aborazmeh left
[03:25] *** aborazmeh joined
[03:51] *** aborazmeh left
[03:57] *** xNetX0 left
[03:58] *** xNetX0 joined
[04:10] *** rbtca left
[04:11] *** rbtca joined
[04:39] *** poohman joined
[05:03] *** regreg joined
[05:20] *** aborazmeh joined
[05:20] *** aborazmeh left
[05:20] *** aborazmeh joined
[05:22] *** sena_kun joined
[05:23] *** Altai-man_ left
[05:42] *** aborazmeh left
[05:44] *** PacoLinux left
[05:51] *** aborazmeh joined
[05:51] *** aborazmeh left
[05:51] *** aborazmeh joined
[06:01] *** aborazmeh left
[06:09] *** pilne left
[06:12] *** poohman left
[06:17] *** regreg left
[06:29] *** molaf left
[06:33] <Geth> ¦ ecosystem: 5f8c728f0f | Tinmarino++ | META.list

[06:33] <Geth> ¦ ecosystem: Add Slang::Nogil module link to META

[06:33] <Geth> ¦ ecosystem: 

[06:33] <Geth> ¦ ecosystem: See https://github.com/tinmarino/nogil

[06:33] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/5f8c728f0f

[06:33] <Geth> ¦ ecosystem: fde0517b02 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[06:33] <Geth> ¦ ecosystem: Merge pull request #485 from tinmarino/master

[06:33] <Geth> ¦ ecosystem: 

[06:33] <Geth> ¦ ecosystem: Add Slang::Nogil module link to META

[06:33] <Geth> ¦ ecosystem: I'm guessing the test failure is due to the fact that the container is not updated, but please check anyway.

[06:33] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/fde0517b02

[06:45] *** wamba joined
[06:58] *** rindolf joined
[07:00] <Geth> ¦ doc: fcfe8f62df | (JJ Merelo)++ | doc/Language/subscripts.pod6

[07:00] <Geth> ¦ doc: Finish up #2632

[07:00] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/fcfe8f62df

[07:00] <linkable6> Link: https://docs.raku.org/language/subscripts

[07:00] <linkable6> DOC#2632 [open]: https://github.com/Raku/doc/issues/2632 [Hacktoberfest][RFE][big][docs][good first issue][help wanted][new][⚠ Top Priority ⚠] Checklist for 6.d

[07:02] *** PacoLinux joined
[07:05] *** rbtca left
[07:06] *** rbtca joined
[07:08] *** maggotbrain left
[07:21] *** Altai-man_ joined
[07:23] *** sena_kun left
[07:38] *** Black_Ribbon left
[07:54] *** wamba left
[07:54] *** poohman joined
[07:55] *** wamba joined
[07:55] *** zxcvz joined
[08:00] <xinming_> Is there a way to modify the call chain of  next* functions?

[08:14] <MasterDuke> xinming_: i think not, but vrurg or jnthn would know better

[08:21] *** poohman left
[08:35] *** Geth_ joined
[08:35] *** Geth left
[08:36] *** natrys joined
[08:37] *** vike left
[08:37] *** PacoLinux left
[08:43] *** ukine joined
[08:46] *** pecastro joined
[08:49] *** vike joined
[08:49] *** holyghost joined
[08:49] <holyghost> join #raku

[08:58] *** ukine left
[08:58] *** ukine joined
[09:00] *** Voldenet left
[09:05] *** Voldenet joined
[09:05] *** Voldenet left
[09:05] *** Voldenet joined
[09:09] *** wamba left
[09:10] *** rbtca left
[09:10] *** wamba joined
[09:11] *** rbtca joined
[09:18] *** xelxebar joined
[09:22] *** sena_kun joined
[09:24] *** Altai-man_ left
[09:35] *** hungrydonkey left
[09:35] *** hungryd80 joined
[09:42] <cpan-raku> New module released to CPAN! Gnome::Gio (0.4.2.2) by 03MARTIMM

[09:46] *** Tirifto joined
[09:47] *** holyghost left
[09:47] *** holyghost joined
[10:08] *** wamba left
[10:12] <cpan-raku> New module released to CPAN! Gnome::N (0.17.3) by 03MARTIMM

[10:12] <cpan-raku> New module released to CPAN! Gnome::Gdk3 (0.15.4.1) by 03MARTIMM

[10:28] <cpan-raku> New module released to CPAN! Gnome::GObject (0.16.2) by 03MARTIMM

[10:28] <cpan-raku> New module released to CPAN! Gnome::Glib (0.17.1) by 03MARTIMM

[10:36] *** chloekek joined
[10:40] *** aborazmeh joined
[10:40] *** aborazmeh left
[10:40] *** aborazmeh joined
[10:43] *** hungryd80 left
[10:43] *** hungrydonkey joined
[10:49] *** chloekek left
[10:59] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.27.2) by 03MARTIMM

[11:10] *** brasoo joined
[11:11] *** kanliot joined
[11:11] *** kanliot left
[11:11] *** kanliot joined
[11:12] <kanliot> i have a new install of raku, and zef seems to be broken.   is it possible my install did not set PERL6LIB?

[11:15] <kanliot> all i get is this from zef: "    ===SORRY!=== No candidate found for 'zef' that match your criteria.  Did you perhaps mean one of these? ||||||"

[11:18] *** chloekek joined
[11:20] *** Kaiepi left
[11:21] *** Altai-man_ joined
[11:23] *** markoong joined
[11:24] *** sena_kun left
[11:25] *** Kaiepi joined
[11:28] <Xliff> kanliot: How did you install zef?

[11:30] *** hungryd2 joined
[11:31] *** hungrydonkey left
[11:32] *** brasoo left
[11:36] *** hungryd2 left
[11:37] *** hungrydonkey joined
[11:38] *** markong joined
[11:38] *** markoong left
[11:40] *** hungryd68 joined
[11:42] *** hungrydonkey left
[11:44] *** aborazmeh left
[11:45] <kanliot> xliff i found a page called raku-packages that offered packages for debian buster.  https://nxadm.github.io/rakudo-pkg/#os-repositories  i installed the packages, and then ran the script that fixes my $PATH

[11:55] <Xliff> kanliot: So Raku works, but not zef?

[11:56] <Xliff> kanliot: Try this -- (cd ~; git clone https://github.com/ugexe/zef; cd zef; raku -Ilib bin/zef install .)

[11:56] <kanliot> yeah.   i thought it could be the PERL6LIB in my environment, or maybe the config-json

[12:02] <cpan-raku> New module released to CPAN! Term::Choose (1.6.3) by 03KUERBIS

[12:03] <kanliot> seemed to install zef : 1 bin/ script [zef] installed to:

[12:03] <kanliot> It says It works but ~/.raku/bin/zef --help gives the same error 

[12:11] *** Kaiepi left
[12:13] <Xliff> Do a `which raku`

[12:13] *** Kaiepi joined
[12:14] <Xliff> Then do `raku -V` and gist or paste bin it so I can check.

[12:16] <kanliot> raku -V # output here https://termbin.com/u5pq

[12:17] <kanliot> which raku outputs: /opt/rakudo-pkg/bin/raku

[12:17] <kanliot> thx

[12:21] *** Tirifto left
[12:24] *** hungrydonkey joined
[12:24] *** hungryd68 left
[12:25] *** wamba joined
[12:32] *** hungryd77 joined
[12:32] *** hungrydonkey left
[12:36] *** hungrydonkey joined
[12:36] *** hungryd77 left
[12:56] *** lichtkind joined
[13:06] <chloekek> Is there short syntax for a pair that has the same key and value?

[13:06] <lizmat> not that I know of

[13:07] <lizmat> but why would you need that ?

[13:07] <chloekek> I’m writing a script that uploads files with scp, and have a map from local filename to remote filename.

[13:07] <chloekek> For some files I want the same name local and remote.

[13:10] <lizmat> m: role IdentiPair { method key() { self }; method value() { self } }; sub prefix:<§>(\a) { a but IdentiPair }; dd (§42).value  # needs some precedence fiddling

[13:10] <camelia> rakudo-moar c588323e5: OUTPUT: «42␤»

[13:10] <chloekek> p6: my %artifacts = ‘install-nix.sh’ xx 2; dd %artifacts

[13:10] <camelia> rakudo-moar c588323e5: OUTPUT: «Hash %artifacts = {"install-nix.sh" => "install-nix.sh"}␤»

[13:10] <Xliff> https://docs.perl6.org/routine/indent… Shouldn't this be --> Str?

[13:11] <Xliff> m: Str.indent.^candidates.gist.say

[13:11] <camelia> rakudo-moar c588323e5: OUTPUT: «Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[13:11] <lizmat> m: sub prefix:<§>(\a) { Pair.new(a,a) }; dd §42

[13:11] <camelia> rakudo-moar c588323e5: OUTPUT: «42 => 42␤»

[13:11] <Xliff> m: Str.indent.^name.say

[13:11] <camelia> rakudo-moar c588323e5: OUTPUT: «Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[13:11] <chloekek> lizmat: Neat.

[13:11] <Xliff> m: Str.^lookup('indent').candidates.gist.say

[13:11] <camelia> rakudo-moar c588323e5: OUTPUT: «(indent indent indent indent)␤»

[13:11] <Xliff> m: Str.^lookup('indent').candidates.map( *.signature ).gist.say

[13:11] <camelia> rakudo-moar c588323e5: OUTPUT: «((Str:D: $steps where { ... }, *%_) (Str: $steps where { ... }, *%_) (Str: $steps where { ... }, *%_) (Str: Whatever $steps, *%_))␤»

[13:12] <Xliff> m: Str.^lookup('indent').candidates.map( *.signature.returns ).gist.say

[13:12] <camelia> rakudo-moar c588323e5: OUTPUT: «((Mu) (Mu) (Mu) (Mu))␤»

[13:14] <lizmat> m: sub postfix:<< => >>(\a) { Pair.new(a,a) }; dd 42=>

[13:15] <camelia> rakudo-moar c588323e5: OUTPUT: «42 => 42␤»

[13:15] <Xliff> O_o

[13:15] <Xliff> m: my $a = "Multi\nLine\nString"; $a.indent(4).say

[13:15] <camelia> rakudo-moar c588323e5: OUTPUT: «    Multi␤    Line␤    String␤»

[13:15] <chloekek> p6: sub postfix:« =>self »(\a) { Pair.new(a, a) }; dd 42=>self

[13:15] <camelia> rakudo-moar c588323e5: OUTPUT: «42 => 42␤»

[13:15] <Xliff> m: my $a = "Multi\nLine\nString"; $a.indent(8).say

[13:16] <camelia> rakudo-moar c588323e5: OUTPUT: «        Multi␤        Line␤        String␤»

[13:16] <Xliff> Why does indent return a Str when the signatures for .indent say Mu?

[13:17] <moritz> m: say Str ~~ Mu

[13:17] <camelia> rakudo-moar c588323e5: OUTPUT: «True␤»

[13:17] <moritz> it returned a Mu, no?

[13:22] *** sena_kun joined
[13:22] <Xliff> 'Τ'.uniname.say

[13:22] <evalable6> Xliff, rakudo-moar c588323e5: OUTPUT: «GREEK CAPITAL LETTER TAU␤»

[13:24] *** Altai-man_ left
[13:44] *** ukine left
[13:48] *** Altai-man_ joined
[13:50] *** ukine joined
[13:51] *** sena_kun left
[13:53] *** mowcat joined
[14:10] *** rbtca left
[14:11] *** rbtca joined
[14:33] *** cpan-raku left
[14:33] *** cpan-raku joined
[14:33] *** cpan-raku left
[14:33] *** cpan-raku joined
[14:45] *** xNetX0 left
[14:46] *** xNetX0 joined
[14:46] *** benlittle left
[14:47] *** Tirifto joined
[14:54] *** benlittle joined
[14:56] *** benlittle left
[15:03] *** colomon___ joined
[15:05] *** colomon_ left
[15:07] *** wamba left
[15:11] *** rbtca left
[15:12] *** rbtca joined
[15:14] *** wamba joined
[15:24] *** ufobat__ joined
[15:28] *** ufobat_ left
[15:34] *** ukine1 joined
[15:34] *** ukine left
[15:49] *** sena_kun joined
[15:51] *** Altai-man_ left
[15:52] <chloekek> p6: my $step-1 = 1; say $step-1

[15:52] <camelia> rakudo-moar c588323e5: OUTPUT: «Use of uninitialized value of type Any in numeric context␤  in block <unit> at <tmp> line 1␤Cannot modify an immutable Int (-1)␤  in block <unit> at <tmp> line 1␤␤»

[15:54] <tbrowder> hi, #raku people

[15:56] <xinming_> chloekek: Seems to be a parsing bug in raku.

[15:57] *** lichtkind left
[15:57] <tbrowder> i hope one of our raku authors one day soon produces a raku book for young students (and seniors, too) who have no programming experience at all. thr

[15:58] *** lichtkind joined
[15:58] <tbrowder> there are several out there similat to that but using python (ugh).

[16:03] *** lichtkind left
[16:05] *** wamba left
[16:08] *** wamba joined
[16:10] *** aluaces left
[16:20] <guifa> chloekek: xinming_: it’s not a parsing bug.  $step-1 is not a valid identifier

[16:20] <chloekek> LTA error message then. :)

[16:20] <guifa> After a hyphen, you must have a character that matches <alpha>

[16:21] <guifa> m: $step-1 = 1

[16:21] <camelia> rakudo-moar c588323e5: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$step' is not declared␤at <tmp>:1␤------> 3<BOL>7⏏5$step-1 = 1␤»

[16:21] <guifa> err

[16:21] <guifa> m: my $step-1 = 1

[16:21] <camelia> rakudo-moar c588323e5: OUTPUT: «Use of uninitialized value of type Any in numeric context␤  in block <unit> at <tmp> line 1␤Cannot modify an immutable Int (-1)␤  in block <unit> at <tmp> line 1␤␤»

[16:25] *** TheAthlete joined
[16:36] <xinming_> guifa: Thanks, I remember wrong, Actually, I should've met something like   my $xxx-1  before

[16:46] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.27.2.1) by 03MARTIMM

[16:48] *** pilne joined
[16:53] <sena_kun> bisectable6, use nqp; await start nqp::getcomp('Raku').parse('say 42;');

[16:53] *** Tirifto left
[16:53] <bisectable6> sena_kun, Bisecting by output (old=2015.12 new=c588323) because on both starting points the exit code is 1

[16:53] <bisectable6> sena_kun, bisect log: https://gist.github.com/0611d39a3180b825b6d9a18d84a98914

[16:53] <bisectable6> sena_kun, (2016-11-02) https://github.com/rakudo/rakudo/commit/abf6caf06eb7e48674d4e22a4ad6b580e5efecbf

[17:16] *** Tirifto joined
[17:41] *** wamba left
[17:42] *** wamba joined
[17:46] *** hungrydonkey left
[17:47] <guifa> xinming_: lizmat has a module that extends identifiers to allow numbers at the end (but I can’t remember if it’s just 0-9, or if it’s only the sub/superscript variants

[17:48] *** Altai-man_ joined
[17:50] *** sena_kun left
[18:06] <lizmat> I do ?

[18:06] <lizmat> you can already have numbers at the end of identifiers?

[18:06] <lizmat> m: my $a42 = 666; say $a42

[18:06] <camelia> rakudo-moar c588323e5: OUTPUT: «666␤»

[18:07] *** kent\n joined
[18:22] <cpan-raku> New module released to CPAN! Gnome::GObject (0.16.2.1) by 03MARTIMM

[18:24] *** Doc_Holliwood left
[18:35] <jdv79> m: my %h = :ke<va>; say %h<ke>:delete; say %h<asdf>:delete

[18:35] <camelia> rakudo-moar 2e6055209: OUTPUT: «va␤(Any)␤»

[18:36] <jdv79> is there a reason the "return value on delete" there isn't documented?

[18:39] <Geth_> ¦ doc: 0fe3e38dbb | Coke++ | doc/Language/subscripts.pod6

[18:39] <Geth_> ¦ doc: fix typo in example

[18:39] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/0fe3e38dbb

[18:39] <linkable6> Link: https://docs.raku.org/language/subscripts

[18:41] *** kensanata joined
[18:57] *** Tirifto left
[18:58] *** Tirifto joined
[19:01] *** patrickb joined
[19:03] <jdv79> interesting - the docs are a bit spread out and different

[19:04] <jdv79> how come when i search for :delete, not all occurances come up?

[19:05] *** cpan-raku left
[19:06] *** cpan-raku joined
[19:06] *** cpan-raku left
[19:06] *** cpan-raku joined
[19:06] *** poga joined
[19:07] <SmokeMachine> would that be cool if .max and .min could receive a Int $n and return all $n max/min values?

[19:08] <lizmat> SmokeMachine ??

[19:09] <SmokeMachine> lizmat: like: `^10 .max: 3`would return `(7, 8, 9)`

[19:10] <lizmat> m: dd ^10 .tail: 3

[19:10] <camelia> rakudo-moar 2e6055209: OUTPUT: «(7, 8, 9).Seq␤»

[19:10] <lizmat> like that ?

[19:10] <SmokeMachine> lizmat: no... it would be the 3 biggest items...

[19:10] <lizmat> m: dd ^10 .sort(-*).tail: 3

[19:11] <camelia> rakudo-moar 2e6055209: OUTPUT: «(2, 1, 0).Seq␤»

[19:11] <lizmat> m: dd ^10 .sort(*).tail: 3

[19:11] <camelia> rakudo-moar 2e6055209: OUTPUT: «Cannot resolve caller sort(Range:D: Whatever:D); none of these signatures match:␤    ($: *%_)␤    ($: &by, *%_)␤  in block <unit> at <tmp> line 1␤␤»

[19:11] <lizmat> m: dd ^10 .sort.tail: 3

[19:11] <camelia> rakudo-moar 2e6055209: OUTPUT: «(7, 8, 9).Seq␤»

[19:11] <SmokeMachine> `[3,4,5,1,7,8,9,2,6]..max: 3` would also return `(7,8,9)`

[19:12] *** molaf joined
[19:12] <SmokeMachine> lizmat: yes, but without sort... only $n iterations...

[19:12] <SmokeMachine> s/\.\././

[19:12] <lizmat> ok, gotcha now

[19:13] <SmokeMachine> lizmat: I think it would be useful... what do you think?

[19:13] <lizmat> yeah, feels like a useful thing to have

[19:13] *** TheAthlete left
[19:14] <lizmat> please make a problem solving issue for it...so we can think more about it

[19:14] <SmokeMachine> This isn't the first time I need it...

[19:14] <SmokeMachine> lizmat: I will

[19:14] <lizmat> the only practical issue I see is that .max already accepts an optional positional: &by

[19:15] *** xNetX0 left
[19:15] *** rbtca left
[19:15] <lizmat> but I guess a (&by) and a (Int) and a (&by,Int) candidate should be possible

[19:15] *** rbtca joined
[19:15] <lizmat> or should that be a (Int,&by) candidate?

[19:16] <SmokeMachine> lizmat: yes... I think so

[19:16] *** xNetX0 joined
[19:17] <SmokeMachine> lizmat: (Int, :&by)? (&by, :$num)

[19:17] <SmokeMachine> ?

[19:17] <lizmat> discussions like that, right ?\

[19:17] <lizmat> afk for a bit&

[19:22] *** molaf left
[19:25] <Geth_> ¦ problem-solving: FCO assigned to jnthn Issue No easy way of getting the N highest/lowest items on a list https://github.com/Raku/problem-solving/issues/172

[19:27] <Geth_> ¦ doc: jdv++ created pull request #3313: Doc :delete a bit more completely.

[19:27] <Geth_> ¦ doc: review: https://github.com/Raku/doc/pull/3313

[19:33] *** vrurg left
[19:33] *** vrurg_ joined
[19:34] <guifa> https://gist.github.com/alabamenhu/2fec7a8f51a24091dc1b104a2ae2f04d

[19:34] <guifa> So I’ve been working a little bit on this (right now mainly the binary) but would definitely welcome some feedback

[19:35] <guifa> (it’s on a binary and objecty grammar, which requires creating slangs but I want to keep them as Raku-ish as possible as I go)

[19:36] *** vrurg_ left
[19:37] <guifa> It’s also a quick write up so probably riddled with mistakes and bad ideas

[19:39] *** vrurg joined
[19:41] *** Tirifto left
[19:41] *** Tirifto joined
[19:44] <jdv79> is there a doc'd way to install bin?

[19:44] <Geth_> ¦ doc: 4919a95fb0 | (Justin DeVuyst)++ | 3 files

[19:44] <Geth_> ¦ doc: Doc :delete a bit more completely.

[19:44] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/4919a95fb0

[19:44] <Geth_> ¦ doc: e0afde4e96 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 3 files

[19:44] <Geth_> ¦ doc: Merge pull request #3313 from jdv/delete-adverb-additions

[19:44] <Geth_> ¦ doc: 

[19:44] <Geth_> ¦ doc: Doc :delete a bit more completely.

[19:44] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/e0afde4e96

[19:44] <jdv79> i see zef manages it but it seems unofficial

[19:49] *** sena_kun joined
[19:50] *** Altai-man_ left
[19:52] *** vrurg_ joined
[19:53] *** vrurg left
[19:57] *** colomon___ left
[19:58] *** colomon joined
[20:03] *** patrickb left
[20:04] <guifa> jdv79: you mean to install rakudo binaries or to instal modules?

[20:04] <guifa> zef is the standard for managing modules, etc

[20:05] <jdv79> i meant bin files in dists.  i guess its just a dir cp, basically.

[20:13] *** zxcvz left
[20:14] *** Tirifto left
[20:14] *** Tirifto joined
[20:14] *** caterfxo left
[20:16] *** patrickb joined
[20:16] <chloekek> When you install a distribution, it wraps the files in bin as executables for you.

[20:17] <chloekek> I don’t know if Zef exposes those in any special way, but that’s what CompUnit::Repository::Installation.install does.

[20:17] <chloekek> They appear in the bin folder inside the repository.

[20:18] <chloekek> I believe Zef puts the repository in your home directory in ~/.raku/site (so bin would be ~/.raku/site/bin) or something like that. I don’t know the exact location but it’s something with ‘site’.

[20:24] <chloekek> Here is the specific code for doing that: https://github.com/rakudo/rakudo/blob/2e60552099023e57b6233937741e19a4ce699736/src/core.c/CompUnit/Repository/Installation.pm6#L206-L230

[20:28] *** vrurg_ left
[20:29] *** vrurg joined
[20:32] *** ab5tract joined
[20:33] <ab5tract> o/ #raku

[20:34] <chloekek> ab5tract: sup

[20:34] <ab5tract> been missing all my peeps on the channel

[20:35] <ab5tract> first time I've logged in since we lost DrForr. Carries a sad feel on multiple levels

[20:38] <ab5tract> I've been more or less MIA for two years though, which is why the "I've been gone too long" level hits kind of hard

[20:38] *** caterfxo joined
[20:41] <ab5tract> despite that, it's nothing to missing Jeff. I know it's a sort of old news to a lot of people here but since I didn't sign on to say it back then, "Damnit, you were a super interesting person to draw into a conversation Jeff!"

[20:50] *** wamba left
[20:51] <ab5tract> I never met another person like him. If I ever do again, I hope I recognize and cherish them.

[20:56] *** veesh_ joined
[20:57] *** veesh left
[20:57] *** chloekek left
[20:58] *** veesh_ is now known as veesh

[20:58] <Geth_> ¦ doc: e7247ac048 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/hashmap.pod6

[20:58] <Geth_> ¦ doc: Attempt to clarify some elementary key sort issues

[20:58] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/e7247ac048

[20:58] <linkable6> Link: https://docs.raku.org/language/hashmap

[21:05] *** markong left
[21:05] <SmokeMachine> something that could also be interesting would be :k, :v, :p on .max and .min...

[21:05] *** markong joined
[21:08] <SmokeMachine> I was expecting those would exist...

[21:11] *** kensanata left
[21:16] <SmokeMachine> shouldn't this:

[21:16] <SmokeMachine> m: my $a = 1; $a any= 2; say $a

[21:16] <camelia> rakudo-moar 2e6055209: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3my $a = 1; $a7⏏5 any= 2; say $a␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier␤  …»

[21:16] <SmokeMachine> be equal to this?

[21:17] <SmokeMachine> my $a = 1; $a = any($a, 2); say $a

[21:17] <evalable6> SmokeMachine, rakudo-moar 2e6055209: OUTPUT: «any(1, 2)␤»

[21:17] <SmokeMachine> m: my $a = 1; $a = any($a, 2); say $a

[21:17] <camelia> rakudo-moar 2e6055209: OUTPUT: «any(1, 2)␤»

[21:17] <SmokeMachine> m: say &any

[21:17] <camelia> rakudo-moar 2e6055209: OUTPUT: «&any␤»

[21:18] <SmokeMachine> m: my $a = 1; $a |= 2; say $a

[21:18] <camelia> rakudo-moar 2e6055209: OUTPUT: «any(1, 2)␤»

[21:18] <SmokeMachine> that's it... :)

[21:21] *** caterfxo left
[21:23] <SmokeMachine> lizmat: and do you think :k, :v and :p would make sense for .min/.max?

[21:23] <lizmat> :v would be the default, no ?

[21:23] <SmokeMachine> yes...

[21:23] <lizmat> so only added for consistency

[21:24] <SmokeMachine> but getting the index with :k would be great

[21:24] <lizmat> well, it would not make sense on Supplys

[21:24] <lizmat> or on Seqs

[21:25] <SmokeMachine> m: say ^10 .map(* + 1).first: * %% 2, :p

[21:25] <camelia> rakudo-moar 2e6055209: OUTPUT: «1 => 2␤»

[21:25] <SmokeMachine> lizmat: ^^ on a Seq

[21:25] <lizmat> and what would you use the key value for ?

[21:26] <lizmat> you can't use it as an index, because there's nothing left to index on

[21:26] <SmokeMachine> the key would be the index of the max value on the list...

[21:26] <lizmat> in that example: what list ?

[21:26] <SmokeMachine> you could use that on the original array if the seq was based on a array...

[21:27] <lizmat> an Array is not a Seq

[21:27] <lizmat> @a.max(3)

[21:27] <lizmat> @a.max(3,:k)

[21:27] <lizmat> would make sense

[21:27] <SmokeMachine> m: my @a = ^50; my $index = @a.map(* * 2).first: * == 40, :k; say @a[$index]

[21:27] <camelia> rakudo-moar 2e6055209: OUTPUT: «20␤»

[21:29] <SmokeMachine> m: say Supply.from-list(^10).first(* == 3, :p)

[21:29] <camelia> rakudo-moar 2e6055209: OUTPUT: «Supply.new␤»

[21:30] <SmokeMachine> m: Supply.from-list(^10).first(* == 3, :p).tap: &say

[21:30] <camelia> rakudo-moar 2e6055209: OUTPUT: «3␤»

[21:36] *** markoong joined
[21:36] *** caterfxo joined
[21:40] *** markong left
[21:41] *** patrickb left
[21:41] *** markong joined
[21:45] *** markoong left
[21:46] *** markoong joined
[21:48] *** Altai-man_ joined
[21:50] *** markong left
[21:50] *** sena_kun left
[21:51] *** markong joined
[21:54] *** markoong left
[21:55] *** markoong joined
[21:59] *** markong left
[22:04] *** lichtkind joined
[22:06] *** natrys left
[22:21] <cpan-raku> New module released to CPAN! Matrix::Client (0.5.1) by 03MATIASL

[22:29] *** ToddAndMargo joined
[22:29] <ToddAndMargo> raku 2020.01 for Windows.  Anyone know how to fix this problem?  zef install OAuth2::Client::Google===> Searching for: OAuth2::Client::GoogleEnabled extracting backends [git path psunzip] don't understand C:\Users\todd/.zef/tmp\1585022838.2848.5555.088006717173\OAuth2-Client-Google-0.1.1.tar.gzYou may need to configure one of the following

[22:29] <ToddAndMargo> backends, or install its underlying software - [tar p5tar unzip] 

[22:37] <timotimo> you need to make a "tar" available to your zef that can unpack gzipped tarballs

[22:44] <timotimo> alternatively extract it manually and then "zef install ." in the unpacked directory

[22:51] *** Tirifto left
[22:52] <ToddAndMargo> HI Timo, how do I make tar available?

[23:20] *** pecastro left
[23:22] <guifa> ab5tract: It’s good to have you back, and indeed, his loss is pretty tragic.  I was really looking forward to finally meeting him in person in Houston

[23:32] * guifa laughs at method names in rakudo’s enum rules: 

[23:33] <guifa> :my %*MYSTERY; [ … || <.panic>] <.explain_mystery> <.cry_sorrows>

[23:39] *** rindolf left
[23:46] <tbrowder> ToddAndMargo: i can onlyb

[23:47] <tbrowder> i can only speak for myself, but as a module author i have not yet ensured my modules work on Windows or Mac

[23:49] *** sena_kun joined
[23:49] <tbrowder> but it's on my todo list...

[23:50] *** Altai-man_ left
[23:50] <ToddAndMargo> If I can ever install it, I can test it in that operating system whose name I shall not mention

[23:55] <tbrowder> todd, i haven't been following this thread today and i know i owe you some help on linux, but have you been able to install it on win with "zef --force-install"?

[23:55] *** markong joined
[23:56] <tbrowder> as an aside, does margo read all your mail?

[23:56] <tbrowder> margo must be quite a friend!

[23:58] <ToddAndMargo> for the last 54 years.  best girlfriend and wife ever

[23:58] <ToddAndMargo> will try force is a few minutes

[23:59] *** markoong left
