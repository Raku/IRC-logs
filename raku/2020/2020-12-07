[00:00] *** mowcat joined
[00:20] *** xinming left
[00:20] *** xinming joined
[00:24] *** stoned75 left
[00:26] *** lucasb left
[00:30] *** xinming left
[00:31] *** xinming joined
[00:32] *** BenGoldberg left
[00:32] *** Ben_Goldberg joined
[00:32] *** Ben_Goldberg is now known as BenGoldberg

[00:34] *** pecastro left
[00:39] *** xinming left
[00:41] *** xinming joined
[00:55] *** Yunga left
[01:02] *** xinming left
[01:03] *** aborazmeh joined
[01:03] *** aborazmeh left
[01:03] *** aborazmeh joined
[01:03] *** ggoebel_ left
[01:07] *** xinming joined
[01:10] *** jmchael left
[01:24] *** ggoebel_ joined
[01:35] *** xinming left
[01:35] *** xinming joined
[01:42] *** hythm joined
[01:54] *** wamba left
[01:55] *** aborazmeh left
[02:23] <ben_m> Anyone found Emacs's raku-mode to struggle with syntax highlighting some regex syntax? Particularly <( and <?{

[02:26] <codesections> yeah.  It sometimes also struggles with some of the more obscure quoting forms

[02:26] <ben_m> Do you know of a workaround? Trying to put balancing constructs in a comment hasn't worked for me 

[02:30] <ben_m> Ah, found a workaround https://github.com/Raku/raku-mode/issues/43

[02:33] *** timlegge left
[02:33] *** timlegge joined
[02:50] *** BenGoldberg left
[02:58] *** nosqrt left
[03:21] *** aindilis left
[03:24] *** leont left
[03:36] *** BenGoldberg joined
[03:53] *** maggotbrain joined
[04:03] *** mowcat left
[04:08] *** xinming left
[04:08] *** xinming joined
[04:17] *** guifa joined
[04:33] *** cpan-raku left
[04:35] *** cpan-raku joined
[04:35] *** cpan-raku left
[04:35] *** cpan-raku joined
[04:54] *** xinming left
[04:55] *** xinming joined
[05:18] *** BenGoldberg left
[05:36] *** xinming left
[05:38] *** xinming joined
[06:02] *** xinming left
[06:02] *** xinming joined
[06:03] *** PavelB joined
[06:14] *** nige joined
[06:17] *** MasterDuke left
[06:19] *** nige left
[06:19] *** nige joined
[06:31] *** parabolize left
[06:32] *** xinming left
[06:32] *** xinming joined
[06:34] *** nige left
[06:34] *** nige joined
[06:39] *** nige left
[06:39] *** nige joined
[06:45] *** rindolf joined
[06:47] *** xinming left
[06:52] *** xinming joined
[06:54] *** nige left
[06:54] *** nige joined
[06:57] *** wamba joined
[07:04] *** nige left
[07:04] *** nige joined
[07:09] *** nige left
[07:09] *** nige joined
[07:19] *** nige left
[07:19] *** nige joined
[07:29] *** nige left
[07:29] *** nige joined
[07:34] *** nige left
[07:34] *** nige joined
[07:38] *** domidumont joined
[07:44] *** nige left
[07:44] *** nige joined
[07:45] *** aluaces left
[07:47] *** patrickb joined
[07:49] *** nige left
[07:49] *** nige joined
[07:54] *** onur joined
[07:54] *** patrickb left
[08:06] *** CIAvash joined
[08:06] *** stoned75 joined
[08:10] *** BenGoldberg joined
[08:12] *** PavelB left
[08:14] *** MasterDuke joined
[08:15] *** gordonfish left
[08:17] *** benaiah` joined
[08:17] *** kini left
[08:18] *** benaiah left
[08:18] *** benaiah` is now known as benaiah

[08:19] *** nige left
[08:19] *** nige joined
[08:23] *** kini joined
[08:24] *** nige left
[08:24] *** nige joined
[08:31] *** dakkar joined
[08:32] *** Manifest0 left
[08:32] *** abraxxa joined
[08:33] *** Manifest0 joined
[08:34] *** sjm left
[08:35] *** aluaces joined
[08:35] *** abraxxa left
[08:38] *** abraxxa joined
[08:39] *** grep0r joined
[08:39] *** grep0r left
[08:42] *** sjm joined
[08:43] *** abraxxa left
[08:43] *** abraxxa joined
[08:44] *** BenGoldberg left
[08:44] *** nige left
[08:44] *** nige joined
[08:52] *** sjm left
[08:52] *** sjm joined
[08:54] *** nige left
[08:54] *** nige joined
[08:59] *** nige left
[08:59] *** nige joined
[09:04] *** nige left
[09:04] *** nige joined
[09:09] *** nige left
[09:09] *** nige joined
[09:19] *** nige left
[09:19] *** nige joined
[09:23] *** Sgeo left
[09:24] *** rindolf left
[09:24] *** nige left
[09:24] *** nige joined
[09:29] *** nige left
[09:29] *** nige joined
[09:36] *** wamba left
[09:39] *** nige left
[09:39] *** nige joined
[09:40] <El_Che> hallo

[09:44] *** nige left
[09:44] *** nige joined
[09:54] *** hythm_ joined
[09:57] *** hythm left
[09:59] *** asymptotically joined
[10:01] *** wamba joined
[10:02] *** frost-lab joined
[10:04] *** nige left
[10:04] *** nige joined
[10:06] *** Noisytoot left
[10:09] *** nige left
[10:09] *** nige joined
[10:10] *** pecastro joined
[10:12] *** sjm left
[10:14] *** nige left
[10:14] *** nige joined
[10:16] *** Noisytoot joined
[10:18] *** _4d47 joined
[10:19] *** nige left
[10:19] *** nige joined
[10:20] *** sjm joined
[10:22] *** xelxebar left
[10:23] *** xelxebar joined
[10:38] *** onur left
[10:41] *** cpan-raku left
[10:43] *** cpan-raku joined
[10:43] *** cpan-raku left
[10:43] *** cpan-raku joined
[10:45] *** xinming left
[10:46] *** xinming joined
[10:46] *** _4d47 left
[10:47] <Xliff> \o

[10:47] <Xliff> Can you subdivide a range?

[10:47] *** domidumont1 joined
[10:47] <lizmat> Range.batch ?

[10:48] <lizmat> you won't get Ranges though

[10:48] <El_Che> hi Xliff 

[10:48] <El_Che> hi lizmat 

[10:48] <Xliff> \o El_Che

[10:49] *** domidumont left
[10:50] <Xliff> lizmat++

[10:50] <Xliff> Ah. I was hoping for a proper subdivide, though. Maybe I can just write my own.

[10:53] *** DarthGandalf left
[10:54] *** DarthGandalf joined
[10:55] <Xliff> So...

[10:56] <Xliff> m: sub subdivide(Range $a) { my $p = ($a.max - $a.min) div 2; ( ($a.min .. $p), ($p+1 .. $a.max) ) }; (0..63).&subdivide[1].&subdivide.gist.say

[10:56] <camelia> rakudo-moar 60fa48ec8: OUTPUT: «(32..15 16..63)␤»

[10:56] <Xliff> D'oh

[10:57] <Xliff> sub subdivide(Range $a) { my $p = ($a.max - $a.min) div 2 + $a.min; ( ($a.min .. $p), ($p+1 .. $a.max) ) }; (0 .. 63).&subdivide[1].&subdivide.gist.say

[10:57] <evalable6> Xliff, rakudo-moar 60fa48ec8: OUTPUT: «(32..47 48..63)␤»

[11:06] *** xinming left
[11:06] *** xinming joined
[11:09] *** nige left
[11:09] *** nige joined
[11:12] <lizmat> Xliff: the problem with a generic solution, is that Ranges are *not* just about integer values

[11:12] <Xliff> lizmat: ??

[11:12] <lizmat> m: dd "a" .. "z"

[11:12] <camelia> rakudo-moar 60fa48ec8: OUTPUT: «"a".."z"␤»

[11:12] <Xliff> Oh. True.

[11:13] <lizmat> m: dd 1.5 .. 10.5

[11:13] <camelia> rakudo-moar 60fa48ec8: OUTPUT: «1.5..10.5␤»

[11:13] <Xliff> lizmat: True. I am working on a limited problem space, though.

[11:14] <Xliff> I will have to think about those other cases and see if I can come up with something.

[11:14] *** nige left
[11:14] *** nige joined
[11:15] *** notandinus left
[11:17] <v_m_v> is there any performance difference between for 2..Inf and while loop with iterator and flag? 

[11:19] *** pr1 joined
[11:19] <coldpress> I'm at https://learnxinyminutes.com/docs/raku/, reading about roles: `class Item does PrintableVal`. Could someone please tell me what the author meant by: "However, this: method print {} is ONLY valid when `print` isn't a `multi` with the same dispatch. This means a parent class can shadow a child class's `multi print() {}`, but it's an error if a role does)"?

[11:19] <coldpress> how does one define a `multi` method in a class/role?

[11:21] <pr1> Hello, image a file called data.txt containing three lines: "1,2,3","4,5,6","7,8,9". When I run the following code on the CL on Windows:

[11:21] <pr1> raku -ne 'my $a = 0; $a += $_.split(/\,/)[0]; END { $a.say }' .\data.txt

[11:21] <pr1> I get "9".

[11:21] <lizmat> role foo { multi method bar { } }    # coldpress

[11:21] <AlexDaniel`> uh, is rakubrew down?

[11:21] <pr1> In perl5, you could declare lexical variables in the BEGIN Phaser, but apparently not in Raku.

[11:22] <pr1> raku -ne 'my $a = 0; $a += $_.split(/\,/)[0]; END { $a.say }' .\data.txt

[11:22] <lizmat> https://github.com/Raku/rakubrew.org/issues/12   # AlexDaniel` 

[11:22] <AlexDaniel`> ah

[11:22] <AlexDaniel`> thank you, lizmat

[11:22] <pr1> ===SORRY!=== Error while compiling -eVariable '$a' is not declaredat -e:1===SORRY!=== Error while compiling -eVariable '$a' is not declaredat -e:1

[11:23] <lizmat> pr1: remove the curlies at the END phaser, so:  END $a.say

[11:24] <pr1> Same problem.

[11:24] <pr1>  raku -ne 'my $a = 0; $a += $_.split(/\,/)[0]; END $a.say' .\data.txt7

[11:24] <pr1> The output is 7.

[11:25] *** _4d47 joined
[11:25] <MasterDuke> don't you need `BEGIN my $a = 0;`?

[11:25] <pr1> MasterDuke, you're right.

[11:26] <pr1> raku -ne 'BEGIN my $a = 0; $a += $_.split(/\,/)[0]; END $a.say' .\data.txt12

[11:27] <pr1> but then how do you put several statements in the BEGIN Phaser?

[11:28] <MasterDuke> i think you can/have to use multiple single statements. e.g., `BEGIN my $a; BEGIN my $b` 

[11:29] <lizmat> maybe another approach would work better: lines>>.comb(/\d+/)>>.[0].sum

[11:30] <lizmat> afk for a bit&

[11:31] <pr1> @lizmat Cool

[11:31] <pr1> Whatever happed to the "-F" switch?

[11:32] <pr1> Example :   $ perl -F'\W' -ane 'END {print $x} $x += @F' file.txt

[11:33] *** domidumont1 left
[11:34] <MasterDuke> a bunch of the perl switches aren't yet implemented (and i think some are definitely planned never to be implemented)

[11:34] *** BenGoldberg joined
[11:35] <MasterDuke> e.g., -i is planned to be implemented eventually

[11:37] *** xinming left
[11:37] <Kaiepi> arghhhhh

[11:37] <Kaiepi> i almost have two advent articles on raku's type system done, but there's a bizarre bug with a multidimensional array i depend on that breaks one of the example types i use throughout

[11:38] *** xinming joined
[11:38] <Kaiepi> it's in the Chess::Board type i think https://hastebin.com/tovawidazo.cpp

[11:39] <Kaiepi> when i run this along with the rest of the types, i wind up with a bunch of bugged knight pieces

[11:39] <Kaiepi> but if i remove the four knights from the board, they turn into queens

[11:39] <Kaiepi> s/queens/\0 and kings/

[11:44] *** notandinus joined
[11:44] <Kaiepi> ...the whole script might help https://hastebin.com/ewovabadop.rb

[11:45] *** _4d47 left
[11:47] *** domidumont joined
[11:48] *** domidumont left
[11:50] *** xinming left
[11:50] *** xinming joined
[11:54] *** nige left
[11:54] *** domidumont joined
[11:54] *** xinming left
[11:54] *** nige joined
[11:56] *** xinming joined
[11:56] *** pr1 left
[12:00] <Xliff> Is there a multiplication reduction method for List? A [*] analog for .sum?

[12:04] *** nige left
[12:04] *** nige joined
[12:06] *** domidumont left
[12:08] *** BenGoldberg left
[12:11] <lizmat> Xliff: no, there isn't, afaik

[12:12] <Xliff> lizmat: Ah. Thanks.

[12:15] <lizmat> Kaiepi: with a golf, I could help

[12:17] *** pr1 joined
[12:18] <pr1> Hi, further to lizmat's suggestion, here's my one-liner so far: 

[12:18] <pr1> raku -ne 'BEGIN my $s = lines>>.comb(/\d+/)>>.[0].sum; END $s.say' .\data.txt

[12:19] <pr1> If you don't add a BEGIN phaser, you get an error message.

[12:19] <pr1> raku -ne 'lines>>.comb(/\d+/)>>.[0].sum.say' .\data.txt11Cannot do 'get' on a handle in binary mode  in block <unit> at -e line 1

[12:19] <lizmat> pr1: drop the "n" in -ne, s/BEGIN my $s =/say/ and drop the END

[12:21] <pr1> @lizmat Very nice.

[12:21] <pr1> raku -e 'say lines>>.comb(/\d+/)>>.[0].sum' .\data.txt12

[12:25] <pr1> If you replace commas by tabs in the data file, and tye

[12:25] <pr1> "type" 

[12:25] <pr1> raku -e 'say lines>>.comb(/\t/)>>.[0].sum' .\data.txt

[12:25] <pr1> you get

[12:25] <pr1> Use of uninitialized value of type Any in numeric context  in block <unit> at -e line 1Use of Nil in numeric context  in block <unit> at -e line 1Use of Nil in numeric context  in block <unit> at -e line 1

[12:26] *** domidumont joined
[12:26] <pr1> My bad

[12:27] <lizmat> pr1: .comb is the *opposite* of split: you specify what you want

[12:27] <lizmat> not want you want to split on

[12:27] <JJAtria[m]> I ran into a bit of a weird issue with Proc::Async and its kill method. Any thoughts? https://gitlab.com/-/snippets/2047309

[12:27] <tellable6> 2020-12-05T08:08:17Z #raku <jmerelo> jjatria[m] checked it out, it's fine. I'll schedule it.

[12:27] <pr1> @lizmat Right. 

[12:27] <lizmat> pr1: so the .comb solution will also work if the numbers are separated by whitespace

[12:27] <lizmat> such as tabs

[12:31] <pr1> Kudos to the Raku developers. It's an amazing language. A lot more fun than Java, Rust, Go, ... 

[12:34] *** pr1 left
[12:39] *** nige left
[12:39] *** nige joined
[12:41] *** xinming left
[12:41] *** aluaces left
[12:41] *** xinming joined
[12:43] *** domidumont left
[12:44] *** nige left
[12:44] *** nige joined
[12:45] <El_Che> \o/

[12:49] *** nige left
[12:49] *** nige joined
[12:54] *** nige left
[12:54] *** nige joined
[12:55] <tbrowder> hi, all

[12:57] <tbrowder> i'm fooling with json and noticed at json.org there is no mention of raku (perl is there, c, etc.). i see no obvious way to get the attention of a person to rectify that

[12:57] <tbrowder> maybe lizmat knows someone...

[12:58] <lizmat> sadly, no

[12:58] <tbrowder> :-(

[13:05] <coldpress> lizmat: thanks, their tutorial isn't very well-written. What do they mean by "valid", as in "method print {} is ONLY valid"? The following works:

[13:05] <coldpress> m: role P{has $!counter=0; multi method print {say $.val}}; class Item does P {has $.val; method access {say $!counter++}; multi method print {say 'Item'}}; Item.new.print

[13:05] <camelia> rakudo-moar 60fa48ec8: OUTPUT: «Item␤»

[13:06] <lizmat> coldpress: a better tutorial is only a PR away  :-)

[13:07] <coldpress> gladly, but I don't understand it enough to PR

[13:07] <coldpress> what is it even trying to say?

[13:07] <lizmat> coldpress: my mind is in the middle of 3 other things atm, so maybe someone else could take a look now?

[13:08] *** morayj joined
[13:08] <lizmat> afk for a bit&

[13:09] *** nige left
[13:09] *** nige joined
[13:10] *** domidumont joined
[13:10] *** xinming left
[13:11] *** xinming joined
[13:11] *** aluaces joined
[13:14] *** nige left
[13:14] *** nige joined
[13:25] <ben_m> Is there no way to pass an initial value to the .reduce method? Especially when the initial value has a different type than the list being reduced.

[13:27] *** morayj left
[13:28] <ben_m> e.g. @numbers.reduce(-> [$str, $sum], $n { [$str ~ $n, $sum + $n] }) # needs initial value

[13:31] <ben_m> It would work like this I believe: reduce(-> ..., ["", 0], |@numbers) but then you can't chain it with other methods as nicely

[13:36] *** jmchael joined
[13:39] *** leont joined
[13:44] *** nige left
[13:44] *** nige joined
[13:48] *** xelxebar left
[13:48] *** ajdplaysalto joined
[13:48] *** Doc_Holliwould left
[13:49] *** nige left
[13:49] *** nige joined
[13:49] *** lucasb joined
[13:50] *** xelxebar joined
[13:51] *** skids joined
[13:52] *** ajdplaysalto left
[13:53] <codesections> ben_m: I've usually done that basically the way you described, just with method call syntax:  (["", 0], |@numbers).reduce(-> ...) 

[14:04] *** nige left
[14:04] *** nige joined
[14:09] *** nige left
[14:09] *** nige joined
[14:26] <ben_m> I guess in a map/grep/reduce chain I could do @numbers.map().grep().&{["", 0}, |@_}.reduce()

[14:31] <codesections> Oh, yeah, that reads pretty well.  I think I did something like (["", 0], |(@numbers.map().grep())).reduce() the last time I ran into that

[14:32] <codesections> but I like your suggestion better here

[14:32] *** morayj joined
[14:34] *** nige left
[14:34] *** nige joined
[14:35] *** Kaiepi left
[14:37] *** Kaiepi joined
[14:37] <codesections> ben_m: would @numbers.map().grep().unshift(["", 0]).reduce work?

[14:39] *** nige left
[14:39] *** frost-lab left
[14:40] <ben_m> Cannot resolve caller unshift(Seq:D: Array:D); none of these signatures match: (Any:U \SELF: |values)

[14:40] <ben_m> Unfortunately not. I tried with .prepend() and it's the same thing

[14:41] <codesections> Interesting 

[14:46] <JJAtria[m]> Ah, I guess my issue is the same as this one: https://github.com/rakudo/rakudo/issues/1701

[14:54] *** bazzaar joined
[14:54] *** nige joined
[14:59] *** nige left
[14:59] *** nige joined
[15:00] *** BenGoldberg joined
[15:02] <ben_m> codesections: Just realize I'm looking at your solution for AoC day 5. Learning lots from it, the EVAL is definitely a bold choice though :P

[15:05] *** Sgeo joined
[15:05] <codesections> Thanks.  I had fun with the EVAL, especially because I hadn't had a chance to play with the fn composition much.  But I also totally missed the "it's just binary" aspect to the question :D

[15:06] <bazzaar> Hi, just wondering if the fleshed out "watch" sub in Moritz's Advent post (6th Dec) should read :action(Sync::Action::Watch), instead of :action(Sync::Action::Sync) ?

[15:10] <ben_m> codesections: I was halfway through doing something weird with reduce (see above...) and then I realized I'm just reinventing binary

[15:11] <moritz> bazzaar: good catch, updating now

[15:11] <bazzaar> :)

[15:13] <hythm_> Kaiepi: ( In case you haven't identified the issue yet ) you are missing the parens around `Chess::Square[Black].new X Chess::Square[White].new`

[15:18] *** wamba left
[15:19] *** nige left
[15:19] *** nige joined
[15:24] *** nige left
[15:24] *** nige joined
[15:25] <hythm_> .tell Kaiepi ( In case you haven't identified the issue yet ) you are missing the parens around `Chess::Square[Black].new X Chess::Square[White].new`  https://gist.github.com/hythm7/a88b9a0b9c622ba57c9ab9dccc0ae47c

[15:25] <tellable6> hythm_, I'll pass your message to Kaiepi

[15:26] <[Coke]> regarding the advent calendar - can we get a widget on the front page that shows just headlines? There's no easy way to get to day 1's article, e.g.

[15:26] <[Coke]> "view all posts" is showing the full posts, and the front page has only the "this year", day 7, and day 6

[15:28] <[Coke]> (I am subbed to the RSS feed, so I personally can find the new articles I haven't read yet, but I think we need something for the web-only visitors)

[15:28] *** ufobat joined
[15:31] <bazzaar> moritz: there's possibly a few "more grammatical" typos, should I mention them on here? 

[15:33] <lizmat> [Coke] : you mean https://raku-advent.blog/category/2020/ ?

[15:34] *** BenGoldberg left
[15:34] <[Coke]> lizmat: that's much better. 

[15:34] <[Coke]> can we get that linked to from the home page?

[15:35] <v_m_v> Hmm, I know that Raku is not the fastest but it it taking him over 16 hours(and still is going) to calculate Euler 12 task (can I make it faster: https://pastebin.com/xcsGkZxC)? I have asked about it yesterday but it is still to slow.  

[15:35] <[Coke]> (I have to click through to an article and then click on 2020 on that article to get there.)

[15:36] *** wamba joined
[15:38] <coldpress> [Coke]: doesn't address your concern, but going to the URL containing only the date works, somewhat: https://raku-advent.blog/2020/12/07/

[15:39] <coldpress> ah, the /category/ page is much better

[15:39] *** nige left
[15:39] <moritz> v_m_v: for 2 .. ($number div 2) -> $candidate looks pretty wasteful -- it's enough if you go up to $number.sqrt

[15:39] *** nige joined
[15:40] <moritz> also, the code might benefit from some `int` type annotations

[15:40] <MasterDuke> v_m_v: it's a micro-optimization, but implicitly returning is faster than explicitly returning. so your `return $divisors + 1;` can just be `$divisors + 1;`

[15:41] <v_m_v> Oh. Thank you! :)

[15:42] <codesections> also `    my $candigate = 0;` is never used 

[15:43] <v_m_v> hmm true. I am using emacs. The raku-mode is still not perfect. So those kind of mistakes are quite common for me. 

[15:44] *** nige left
[15:44] *** nige joined
[15:44] <codesections> MasterDuke: I didn't know that about implicit vs explicit returns.  Do you happen to know why?

[15:45] *** parabolize joined
[15:45] <MasterDuke> moritz, v_m_v: of course if you only go up to sqrt you have to `$divisors = $divisors + 2` instead of 1. another micro-optimization would be to remove the scope of the if and do `$divisors = $divisors + 1 if $number %% $candidate`

[15:46] <lizmat> [Coke]: added a link to the home page

[15:46] <tbrowder> hi, i'm still having <https://docs.raku.org> access problems, anyone else?

[15:47] <moritz> v_m_v: http://perlpunks.de/paste/show/5fce4e61.240a.2b2 some micro optimizations applied. I changed the limit from 500 to 100 to have quicker comparison

[15:47] <MasterDuke> codesections: i couldn't say for sure. i think explicit return is done via a control exception, and the implicit one isn't? or just does less setup?

[15:47] <moritz> it reduced the run time from 0.7s to about 0.27s for me

[15:47] <moritz> MasterDuke: that sounds about right

[15:47] <v_m_v> Wow 26.49s vs over 16 hours. 

[15:48] <MasterDuke> moritz: i think you have to do ($number.sqrt.Int + 1)

[15:49] <moritz> yes, might be necessary

[15:49] *** nige left
[15:49] <moritz> with 500, it runs on my (pretty fast) laptop in 5s

[15:49] *** nige joined
[15:51] <moritz> v_m_v: which rakudo version are you using?

[15:52] <v_m_v> moritz: moar-2020.11

[15:52] <moritz> ah, so a pretty recent one, good to know

[15:53] <v_m_v> Thank you for your help :) BTW you are the Moritz which is responsible for a couple of Raku books? 

[15:53] <lizmat> v_m_v: and you're not running on an ARM processor?

[15:53] <lizmat> v_m_v: yeah, that would be that moritz  :-)

[15:53] <moritz> v_m_v: two of them, yes :D

[15:53] <v_m_v> lizmat: nope. It is quite old i5. 

[15:54] <v_m_v> moritz: They are great! I really like the structure and the way of flow. 

[15:54] *** nige left
[15:54] *** nige joined
[15:54] <v_m_v> lizmat: Would it be a way slower on arm? I know that there is no JIT on ARM 

[15:54] <moritz> v_m_v: thanks, that's always lovely to hear

[15:54] <moritz> if you want to share the joy, a rating on amazon helps a lot

[15:55] <lizmat> v_m_v: yeah, the absence of JIT on ARM  may have an adverse effect on performance on some workloads

[15:59] <bazzaar> moritz: I put the suggested edits in a gist https://gist.github.com/bazzaar/ed84ddc39e63d779222e5fdd87d13c61

[16:05] <[Coke]> lizmat++ #that was quick! Thanks

[16:07] *** bazzaar left
[16:08] *** _jrjsmrtn left
[16:08] *** __jrjsmrtn__ joined
[16:09] *** bazzaar joined
[16:09] *** nige left
[16:09] *** nige joined
[16:14] *** nige left
[16:14] *** nige joined
[16:18] *** bazzaar left
[16:19] *** nige left
[16:19] *** nige joined
[16:24] *** nige left
[16:24] *** onur joined
[16:24] *** nige joined
[16:26] *** jmerelo joined
[16:29] *** nige left
[16:29] *** nige joined
[16:32] <ben_m> What's the syntax rules for » operators and new lines? .a.b».c()».d() works, but .a␤.b␤».c()␤».d() gives me 'Missing « or »'

[16:33] <lizmat> ben_m: feels like an oversight worthy of an issue

[16:33] *** onur left
[16:33] <lizmat> allowing whitespace before a .method call was something that got added really late in Raku's development process

[16:34] *** nige left
[16:34] <[Coke]> what about .a\␤.b\␤».c()\␤».d() ?

[16:34] *** nige joined
[16:35] <codesections> at the least, it seems like it should mention the linebreak the way .a␤.&b does

[16:37] <ben_m> [Coke]: That works, but you have to put \ on every single line end. Decent workaround for now I suppose

[16:39] <timotimo> i think you can optionally write it .».c()

[16:39] <timotimo> does that work?

[16:40] <ben_m> Malformed postfix call (only basic method calls that exclusively use a dot can be detached)

[16:43] <[Coke]> ben_m: if you search for "unspace" in the docs that might lead somewhere.

[16:44] <[Coke]> ah, yes, though it doesn't show the newline in the example

[16:49] *** onur joined
[16:49] *** nige left
[16:49] *** nige joined
[16:53] *** Doc_Holliwould joined
[16:54] *** nige left
[16:54] *** nige joined
[17:04] *** nige left
[17:04] *** nige joined
[17:07] *** dataangel left
[17:07] *** dataangel joined
[17:09] *** nige left
[17:09] *** nige joined
[17:09] <jmerelo> I just wanted to let you know...

[17:09] <jmerelo> ... wait for it ...

[17:09] <jmerelo> ... there are still some slots open for the Advent Calendar.

[17:10] <jmerelo> Also, Perl&Raku devroom in Fosdem

[17:14] *** nige left
[17:14] *** nige joined
[17:19] *** nige left
[17:19] *** nige joined
[17:25] <tbrowder> jmerelo: can you schedule my advent later without angst? i think it's ok, but it's missing some emoji and i'm running into honey-do conflicts :-D

[17:26] <Geth> ¦ advent/typed-raku: 965625d4e9 | (Ben Davies)++ (committed using GitHub Web editor) | raku-advent-2020/drafts

[17:26] <Geth> ¦ advent/typed-raku: Add drafts for Typed Raku parts 1 and 2

[17:26] <Geth> ¦ advent/typed-raku: review: https://github.com/Raku/advent/commit/965625d4e9

[17:26] <Geth> ¦ advent: Kaiepi++ created pull request #79: Add drafts for Typed Raku parts 1 and 2

[17:26] <Geth> ¦ advent: review: https://github.com/Raku/advent/pull/79

[17:27] <Kaiepi> hythm_ that X was the issue, yeah. should've mentioned when i figured it out here...

[17:27] <tellable6> 2020-12-07T15:25:10Z #raku <hythm_> Kaiepi ( In case you haven't identified the issue yet ) you are missing the parens around `Chess::Square[Black].new X Chess::Square[White].new`  https://gist.github.com/hythm7/a88b9a0b9c622ba57c9ab9dccc0ae47c

[17:30] *** bd3i left
[17:31] <Geth> ¦ advent: 965625d4e9 | (Ben Davies)++ (committed using GitHub Web editor) | raku-advent-2020/drafts

[17:31] <Geth> ¦ advent: Add drafts for Typed Raku parts 1 and 2

[17:31] <Geth> ¦ advent: review: https://github.com/Raku/advent/commit/965625d4e9

[17:31] <Geth> ¦ advent: c63dca85ef | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | raku-advent-2020/drafts

[17:31] <Geth> ¦ advent: Merge pull request #79 from Raku/typed-raku

[17:31] <Geth> ¦ advent: 

[17:31] <Geth> ¦ advent: Add drafts for Typed Raku parts 1 and 2

[17:31] <Geth> ¦ advent: review: https://github.com/Raku/advent/commit/c63dca85ef

[17:33] <jmerelo> tbrowder: let me check. In principle, I would need to re-edit titles and reschedule is all.

[17:35] <morayj> What are the arguments for using camelia? raku: doesn't seem to be one of them, which is in https://raku.org/community/irc/ m: does seem to be one, which isn't

[17:36] *** dakkar left
[17:37] <jmerelo> morayj do you mean camelia the mascot, camelia the logo, camelia the bot?

[17:37] <morayj> Ah, camelia the bot

[17:37] <jmerelo> Ah, you mean the docs are not complete.

[17:38] <morayj> :-)

[17:38] <jmerelo> You can check the source... It's "evalable" if I'm not wrong.

[17:38] <morayj> Ok, thanks. Will have a look...

[17:39] *** guifa2 joined
[17:39] <guifa2> jmerelo: editing my article now, should be done within the hour (sorry, we're in the midst of final exams so things are crazy =/ )

[17:50] <Geth> ¦ doc: 193e329c66 | (Stoned Elipot)++ | doc/Language/exceptions.pod6

[17:50] <Geth> ¦ doc: Relocate CATCH index for a better experience

[17:50] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/193e329c66

[17:50] <linkable6> Link: https://docs.raku.org/language/exceptions

[17:54] <jmerelo> guifa2: ack. Thanks!

[17:55] *** abraxxa left
[17:57] *** hythm_ left
[17:59] <jmerelo> tbrowder: can change it to 11th. Will that be OK?

[18:04] <ggoebel_> raku: my @a = (1, 2, ()); @a.join(",").say;

[18:04] <evalable6> ggoebel_, rakudo-moar 1ae04788c: OUTPUT: «1,2,␤»

[18:05] <ggoebel_> perl5: my @a = (1, 2, ()); print(join(",", @a), "\n");

[18:05] <ggoebel_> perl: my @a = (1, 2, ()); print(join(",", @a), "\n");

[18:05] <ggoebel_> $ perl -e 'my @a = (1, 2, ()); print(join(",", @a), "\n");'

[18:05] <ggoebel_> 1,2

[18:07] <ggoebel_> how does one get the same perl5 behavior in raku? 

[18:09] <ggoebel_> is there a way to make flatten remove empty lists?

[18:09] <ggoebel_> raku: (1,2,()).flat

[18:09] <evalable6> ggoebel_, rakudo-moar 1ae04788c: OUTPUT: «»

[18:09] <ggoebel_> raku: [1,2,()].flat

[18:09] <evalable6> ggoebel_, rakudo-moar 1ae04788c: OUTPUT: «»

[18:09] *** mowcat joined
[18:10] <ggoebel_> raku: (1, 2, ()).flat.join(",").say;

[18:10] <evalable6> ggoebel_, rakudo-moar 1ae04788c: OUTPUT: «1,2␤»

[18:11] <jmerelo> tbrowder: switched to 11th

[18:11] <lizmat> ggoebel_: would it be possible to make that list contain an Empty instead of () 

[18:11] <lizmat> ?

[18:11] <lizmat> then you wouldn't have to do anything else

[18:11] <lizmat> m: my @a = (1, 2, ()); print(join(",", @a.map: *.Slip), "\n")   # otherwise

[18:11] <camelia> rakudo-moar 1ae04788c: OUTPUT: «1,2␤»

[18:11] <ggoebel_> I'm still struggling with the nooks and crannies of raku with which I am unfamiliar

[18:12] <lizmat> ggoebel_: if you have one your own subs return ()

[18:13] <Geth> ¦ doc: a1d2236f89 | (Stoned Elipot)++ | doc/Language/phasers.pod6

[18:13] <Geth> ¦ doc: Use code formatting for phaser names

[18:13] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/a1d2236f89

[18:13] <linkable6> Link: https://docs.raku.org/language/phasers

[18:13] <ggoebel_> Thanks. I'll hit docs.raku.org to read up on what you are suggesting

[18:13] <codesections> m: say (1, 2, ()).grep(|*.Slip).join(',')

[18:13] <camelia> rakudo-moar 1ae04788c: OUTPUT: «1,2␤»

[18:14] <codesections> ggoebel_: another option ^^^ 

[18:14] *** nige left
[18:14] *** nige joined
[18:17] <codesections> er, with *one* of `|` or `.Slip`  -- no need for both

[18:17] <codesections> m: say (1, 2, ()).grep(|*).join(',')

[18:17] <camelia> rakudo-moar 1ae04788c: OUTPUT: «1,2␤»

[18:17] <ggoebel_> the multitude of syntactical options is both a blessing and a curse :-)

[18:18] <ggoebel_> raku: (1, 2, ()).flat.Slip.join(",").say

[18:18] <evalable6> ggoebel_, rakudo-moar 1ae04788c: OUTPUT: «1,2␤»

[18:18] <tbrowder> jmerelo: great! thnx, jj

[18:18] <ggoebel_> thank you lizmat++, codesections++

[18:18] *** domidumont left
[18:19] *** nige left
[18:19] *** nige joined
[18:20] <tbrowder> ggoebel_: were you able to see that page§!

[18:20] <tbrowder> page}

[18:20] <tbrowder> page?

[18:20] <tbrowder> i'm getting blocked for tls errors

[18:21] <guifa2> WHo was it that was working on upgrading POD declarator blocks?  was it tbrowder or p6steve?  I forgot

[18:21] <Geth> ¦ doc: 9531b90e58 | (Stoned Elipot)++ | doc/Language/phasers.pod6

[18:21] <Geth> ¦ doc: Xref catching exceptions

[18:21] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/9531b90e58

[18:21] <linkable6> Link: https://docs.raku.org/language/phasers

[18:22] <tbrowder> i have some work stalled on a branch on my local host

[18:23] <tbrowder> just needs some time, probably not till after the new year

[18:23] <tbrowder> a year late!

[18:25] *** BenGoldberg joined
[18:29] *** nige left
[18:29] *** nige joined
[18:34] *** nige left
[18:35] *** sjm left
[18:37] *** sjm joined
[18:38] *** onur left
[18:39] *** sjm left
[18:39] *** cpage_ joined
[18:39] *** sjm joined
[18:40] <ggoebel_> tbrowder: I'm able to see docs.raku.org

[18:42] *** cpage left
[18:42] *** cpage_ is now known as cpage

[18:44] *** nige joined
[18:49] *** nige left
[18:49] *** nige joined
[18:55] *** ufobat left
[18:59] *** BenGoldberg left
[19:05] *** xelxebar left
[19:06] *** xelxebar joined
[19:11] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/12/07/2020-49-shaped-shaping-up/

[19:12] *** xelxebar_ joined
[19:12] <ab5tract> lizmat++

[19:12] <ab5tract> thank you for this essential public service! :D

[19:13] <lizmat> you're very much welcome  :-)

[19:13] <perryprog> \o/

[19:15] *** xelxebar left
[19:15] <codesections> lizmat++ (minor correction: you list me as "Daniel Sections", which is an interesting combo of my name (Daniel Sockwell) and my username/nick (codesections))

[19:16] <lizmat> argh   :-)

[19:16] <lizmat> sorry

[19:17] <jmerelo> codesections: it's an inter-section

[19:17] <codesections> no problem, just wanted to mention it 

[19:17] * jmerelo ducks and cover

[19:17] <codesections> jmerelo: :D

[19:18] <lizmat> at least I was consistent  :-)

[19:18] <lizmat> fixed now, codesections++ keeping up the good work!

[19:18] * jmerelo makes an ob-reminder that the CFP for the Perl&Raku devroom is open. And I want you, and you, and yes, also you, to submit talks of any length (from 10 minutes to 1 hour)

[19:19] <codesections> thanks

[19:19] <jmerelo> Even the retrocomputing devroom has more talks than our devroom. Which is not difficult, as long as there are any of them.

[19:21] *** hythm joined
[19:24] <guifa2> gah, I missed this weekly again

[19:24] * guifa2 needs to stop being a perfectionist and release stuff

[19:24] <guifa2> lizmat++ as always

[19:25] <lizmat> .oO( Release Early, Release Often )

[19:25] <perryprog> lizmat++ for 1..(a lot)

[19:27] <guifa2> lizmat: this is gonna be breaking release, though, so no release is sadly a bit better than a partial release

[19:29] *** nige left
[19:29] *** nige joined
[19:31] <hythm> lizmat: This is a typo I guess "Raku & Pakku by Haitham Alrayes", thats is probably a name of a random account on wordpress. The correct wordpress account associated with the article is "hythm7" and name is "Haytham Elganiny"

[19:32] <hythm> ^regarding the weekly

[19:32] <lizmat> argh again :-(

[19:33] <guifa2> hythm: does Pakku have an upgrade command?

[19:33] <lizmat> hythm: my apologies, fixed now

[19:33] <guifa2> Putting the finishing touches on my article and would like to get a command sample for both zef and pakku if possible

[19:34] *** nige left
[19:34] *** nige joined
[19:34] <hythm> guipha2: it does not.

[19:34] <hythm> thank you lizmat

[19:35] <guifa2> hythm, thanks, just wanted to check.  Really enjoying seeing the work you've done on Pakku btw.  

[19:36] <hythm> guifa2, Thanks

[19:39] <guifa2> jmerelo: new draft https://github.com/alabamenhu/DateTimeTimezones/blob/master/docs/blog.md 

[19:48] *** hythm left
[19:48] <Geth> ¦ doc: 07c6231d12 | (Stoned Elipot)++ | doc/Language/exceptions.pod6

[19:48] <Geth> ¦ doc: Even better CATCH index spot

[19:48] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/07c6231d12

[19:48] <linkable6> Link: https://docs.raku.org/language/exceptions

[19:50] * guifa2 gets to the bottle of the weekly and realizes he totally forgot about releasing Transput haha

[19:50] <guifa2> all codesections' fault

[19:55] <jmerelo> guifa2: this the one? Ping me when it's ready for uploading. Or just do it yourself, you've got the privs...

[19:56] *** jmerelo left
[19:58] *** gordonfish joined
[19:58] <guifa> jmerelo: yeah, unless there’s anything else you see that needs work

[19:58] <tellable6> guifa, I'll pass your message to jmerelo

[19:59] *** maggotbrain left
[20:02] <codesections> There is a pleasingly strong correlation between how confused I am by my code and how often I type WHAT

[20:03] <tbrowder> ggoebel_: in what country or state are you located?

[20:03] <codesections> When we say that Raku is an expressive language, I guess that includes expressing frustration by screaming at/in our code

[20:04] *** nige left
[20:04] *** nige joined
[20:05] <[Coke]> m: say .WHAT, now

[20:05] <camelia> rakudo-moar 1ae04788c: OUTPUT: «(Any)Instant:1607371555.41664␤»

[20:06] <tbrowder>  ggoebel_ : and what browser?

[20:06] *** morayj left
[20:07] <codesections> [Coke]: Shame that neither ! nor ? have a postfix form 

[20:09] *** nige left
[20:09] *** nige joined
[20:10] *** melezhik joined
[20:11] <melezhik> lizmat thanks for mentioning RICH in RW. Hopefully people find it useful ... And yeah REACH does sound more positive then RIP, he-he :] 

[20:11] <tellable6> 2020-12-05T08:07:17Z #raku <jmerelo> melezhik why did you take your article back to draft? It's scheduled to be published in 36 hours.

[20:12] <melezhik> REACH -> RICH

[20:13] *** mowcat left
[20:21] *** melezhik left
[20:24] *** nige left
[20:24] *** nige joined
[20:29] *** nige left
[20:29] *** nige joined
[20:47] <guifa> codesections: I mean…. sub postfix:<!>(\foo) { not foo }

[20:49] <codesections> guifa: well, yeah, but *of course* you can say silly-but-fitting things in the language if you define new terms!  That's no fair :D

[20:49] * guifa still votes for sub circumfix:<¡ !>

[20:50] *** morayj joined
[20:51] *** morayj left
[20:55] <moon-child> guifa: lol

[20:56] *** wamba left
[20:56] <codesections> or sub prefix:<‽>(\j) { j ~~ Junction }

[20:57] <codesections> just to round out our punctuation 

[20:57] <guifa> But what would ‽ mean?

[20:58] <guifa> any(True,False) ?

[20:58] <moon-child> would return True for alls and anys

[20:59] <codesections> I was imagining it as testing for junction-ness

[21:00] <guifa> Hmm

[21:00] <guifa> so something like

[21:01] *** clarjon1 joined
[21:01] <guifa> my $foo = ‘hi’; my $bar = any <hi hola>;

[21:01] <guifa> ‽ $foo ——> False

[21:02] <guifa> ‽ $bar ——> True does role { method type { ‘any’ }

[21:05] <codesections> Yeah (I hadn't thought as far as the role business, but that general idea)

[21:05] <guifa> or I guess a string versus false since strings are truthy

[21:06] * guifa really wants to be able to subclass strings since subclassings is speedier than roles but he’s not figured out how yet

[21:07] *** nige left
[21:34] *** k-man left
[21:34] *** k-man joined
[21:50] *** BenGoldberg joined
[21:54] <guifa> .tell jmerelo I’ve uploaded it on WP.  Not sure which day you wanted it for

[21:54] <tellable6> guifa, I'll pass your message to jmerelo

[21:55] *** stux|RC-- joined
[21:57] *** ambs_ joined
[22:00] *** Black_Ribbon joined
[22:02] *** CIAvash left
[22:02] *** AlexDaniel` left
[22:02] *** a3f left
[22:02] *** stux|RC left
[22:02] *** xxpor left
[22:02] *** mithaldu_ left
[22:02] *** ambs left
[22:04] *** xxpor joined
[22:06] *** morayj joined
[22:09] *** Kaiepi left
[22:10] *** Kaiepi joined
[22:10] *** stoned75 left
[22:14] *** skids left
[22:24] *** stoned75 joined
[22:24] *** BenGoldberg left
[22:29] <morayj> star: use JSON::Fast

[22:29] <camelia> star-m 2020.05-rc2: ( no output )

[22:30] *** a3f joined
[22:30] *** mithaldu_ joined
[22:32] *** AlexDaniel` joined
[22:34] *** CIAvash joined
[22:45] *** morayj left
[22:50] *** bdju left
[22:51] *** bdju joined
[22:56] *** stux|RC-- left
[22:57] *** stux|RC joined
[23:03] *** wamba joined
[23:05] *** stoned75 left
[23:09] *** wamba left
[23:39] *** BenGoldberg joined
[23:48] *** asymptotically left
[23:53] *** Xliff left
