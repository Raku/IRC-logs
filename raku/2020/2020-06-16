[00:10] *** rbt left
[00:11] *** rbt joined
[00:16] *** OpenZen left
[00:22] *** leont left
[00:29] *** squashable6 left
[00:31] *** squashable6 joined
[00:43] *** mst left
[00:44] *** mst joined
[00:47] <Geth> ¦ whateverable: 25ffa5953d | (Aleks-Daniel Jakimenko-Aleksejev)++ | xt/bisectable.t

[00:47] <Geth> ¦ whateverable: Bump bisectable test timeouts

[00:47] <Geth> ¦ whateverable: 

[00:47] <Geth> ¦ whateverable: Just to make them more reliable in weird conditions.

[00:47] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/25ffa5953d

[00:47] <Geth> ¦ whateverable: 187d36aef3 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[00:47] <Geth> ¦ whateverable: Make Bisectable even more awesome

[00:47] <Geth> ¦ whateverable: 

[00:47] <Geth> ¦ whateverable: Previously it was assumed that the user knows that there was in fact a

[00:47] <Geth> ¦ whateverable: change in behavior before triggering the bot. It made sense because

[00:47] <Geth> ¦ whateverable: there was a separate bot (Committable) that allowed to get that

[00:47] <Geth> ¦ whateverable: information. However, this expectation doesn't match reality and how

[00:47] <Geth> ¦ whateverable: actual users are using the bot.

[00:47] <Geth> ¦ whateverable: <…commit message has 17 more lines…>

[00:47] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/187d36aef3

[00:48] *** cpan-raku left
[00:50] *** cpan-raku joined
[00:50] *** cpan-raku left
[00:50] *** cpan-raku joined
[00:54] <Geth> ¦ whateverable: f528c0dda4 | (Aleks-Daniel Jakimenko-Aleksejev)++ | META6.json

[00:54] <Geth> ¦ whateverable: Bump version

[00:54] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/f528c0dda4

[00:55] *** sena_kun joined
[00:56] *** bisectable6 left
[00:56] *** bisectable6 joined
[00:57] *** Altai-man_ left
[01:02] *** unicodable6 left
[01:02] *** bloatable6 left
[01:02] *** quotable6 left
[01:02] *** squashable6 left
[01:02] *** committable6 left
[01:02] *** sourceable6 left
[01:02] *** bisectable6 left
[01:02] *** reportable6 left
[01:02] *** shareable6 left
[01:02] *** benchable6 left
[01:02] *** releasable6 left
[01:02] *** coverable6 left
[01:02] *** nativecallable6 left
[01:02] *** linkable6 left
[01:02] *** greppable6 left
[01:02] *** statisfiable6 left
[01:02] *** notable6 left
[01:02] *** tellable6 left
[01:02] *** evalable6 left
[01:03] *** greppable6 joined
[01:03] *** releasable6 joined
[01:03] *** notable6 joined
[01:03] *** coverable6 joined
[01:03] *** committable6 joined
[01:04] *** linkable6 joined
[01:04] *** squashable6 joined
[01:04] *** quotable6 joined
[01:04] *** unicodable6 joined
[01:04] *** reportable6 joined
[01:04] *** bloatable6 joined
[01:04] *** nativecallable6 joined
[01:04] *** tellable6 joined
[01:05] *** evalable6 joined
[01:05] *** bisectable6 joined
[01:05] *** shareable6 joined
[01:05] *** statisfiable6 joined
[01:06] *** sourceable6 joined
[01:25] *** molaf left
[01:27] *** pilne left
[01:30] *** Benett left
[01:33] *** Benett joined
[01:37] *** molaf joined
[01:50] *** oddp left
[02:21] *** aborazmeh left
[02:26] *** Cabanossi left
[02:29] *** Cabanossi joined
[02:54] *** Altai-man_ joined
[02:57] *** sena_kun left
[02:59] *** Cabanossi left
[03:01] *** bdju left
[03:01] *** bdju joined
[03:02] *** Cabanossi joined
[03:14] *** Cabanossi left
[03:22] *** Cabanoss- joined
[04:04] *** brtastic joined
[04:44] *** brtastic left
[04:48] *** MasterDuke left
[04:55] *** sena_kun joined
[04:56] *** Altai-man_ left
[05:13] *** stoned75 joined
[05:22] *** zacts joined
[05:24] *** skids left
[05:25] *** brtastic joined
[05:31] *** wamba joined
[05:34] *** zacts left
[05:48] *** andrzejku joined
[05:53] *** brtastic left
[06:00] *** stoned75 left
[06:06] *** stoned75 joined
[06:14] *** brtastic joined
[06:31] *** stoned75 left
[06:33] *** stoned75 joined
[06:53] *** sjm_uk left
[06:54] *** Altai-man_ joined
[06:57] *** sena_kun left
[07:04] *** zacts joined
[07:12] *** abraxxa joined
[07:16] *** kensanata joined
[07:24] *** abraxxa left
[07:27] *** abraxxa joined
[07:32] *** abraxxa left
[07:33] *** abraxxa joined
[07:44] *** dakkar joined
[07:46] *** JJMerelo joined
[07:46] <JJMerelo> sourceable6: infix:<∘>

[07:46] <sourceable6> JJMerelo, https://github.com/rakudo/rakudo/blob/f11d750/src/core.c/operators.pm6#L464

[07:51] <JJMerelo> m:     sub f($p){ say 'f'; $p / 2 }; sub g($p){ say 'g'; $p * 2 };  my &composed = &f ∘ &g; say composed 2; say "{composed.arity} {composed.count} {composed.of}"

[07:51] <camelia> rakudo-moar f11d75084: OUTPUT: «g␤Too few positionals passed; expected 1 argument but got 0␤  in sub g at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤f␤2␤»

[07:51] <JJMerelo> m:     sub f($p){ say 'f'; $p / 2 }; sub g($p){ say 'g'; $p * 2 };  my &composed = &f ∘ &g; say composed 2; say "{&composed.arity} {&composed.count} {&composed.of}"

[07:51] <camelia> rakudo-moar f11d75084: OUTPUT: «g␤Use of uninitialized value of type Mu in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤f␤2␤1 1 ␤  in block <unit> at <tmp> line 1␤»

[07:52] <JJMerelo> m:     sub f($p){ say 'f'; $p / 2 }; sub g($p){ say 'g'; $p * 2 };  my &composed = &f ∘ &g; say composed 2; 

[07:52] <camelia> rakudo-moar f11d75084: OUTPUT: «g␤f␤2␤»

[07:53] <JJMerelo> m:     sub f($p){ say 'f'; $p / 2 }; sub g($p){ say 'g'; $p * 2 };  my &composed = &f ∘ &g; say &composed.arity; 

[07:53] <camelia> rakudo-moar f11d75084: OUTPUT: «1␤»

[07:53] <JJMerelo> m:     sub f($p){ say 'f'; $p / 2 }; sub g($p){ say 'g'; $p * 2 };  my &composed = &f ∘ &g; say &composed.count; 

[07:53] <camelia> rakudo-moar f11d75084: OUTPUT: «1␤»

[07:53] <JJMerelo> m:     sub f($p){ say 'f'; $p / 2 }; sub g($p){ say 'g'; $p * 2 };  my &composed = &f ∘ &g; say &composed.of; 

[07:53] <camelia> rakudo-moar f11d75084: OUTPUT: «(Mu)␤»

[07:54] *** cpan-raku left
[07:56] *** cpan-raku joined
[07:56] *** cpan-raku left
[07:56] *** cpan-raku joined
[08:02] *** JJMerelo left
[08:05] *** rindolf joined
[08:24] *** JJMerelo joined
[08:24] <Geth> ¦ doc: fc814838b4 | (JJ Merelo)++ | doc/Language/operators.pod6

[08:24] <Geth> ¦ doc: Adds index, closes #3479

[08:24] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/fc814838b4

[08:24] <Geth> ¦ doc: c021f16939 | (JJ Merelo)++ | doc/Language/operators.pod6

[08:24] <Geth> ¦ doc: Describes composition operator, refs #2632

[08:24] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/c021f16939

[08:24] <Geth> ¦ doc: 189e4a5669 | (JJ Merelo)++ | doc/Language/operators.pod6

[08:24] <Geth> ¦ doc: Split to avoid redeclaration

[08:24] <linkable6> Link: https://docs.raku.org/language/operators

[08:24] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/189e4a5669

[08:24] <linkable6> DOC#3479 [closed]: https://github.com/Raku/doc/issues/3479 [docs] Function composition is not indexed in its ASCII form

[08:24] <linkable6> DOC#2632 [open]: https://github.com/Raku/doc/issues/2632 [Hacktoberfest][RFE][big][docs][good first issue][help wanted][new][⚠ Top Priority ⚠] Checklist for 6.d

[08:28] *** pecastro joined
[08:34] *** leont joined
[08:43] *** ShimmerFairy left
[08:44] *** ShimmerFairy joined
[08:46] *** Sgeo left
[08:51] <Geth> ¦ problem-solving: b0601e0a8a | (JJ Merelo)++ | solutions/ecosystem-versioning.md

[08:51] <Geth> ¦ problem-solving: Solution for issue #72

[08:51] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/b0601e0a8a

[08:51] <Geth> ¦ problem-solving: a13560b211 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | solutions/ecosystem-versioning.md

[08:51] <Geth> ¦ problem-solving: Merge pull request #202 from JJ/master

[08:51] <Geth> ¦ problem-solving: 

[08:51] <Geth> ¦ problem-solving: Solution for issue #72: spin off module publishing tutorial in the documentation.

[08:51] <Geth> ¦ problem-solving: No one has spoken against, or actually seem to care, so I guess I could as well merge it.

[08:51] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/a13560b211

[08:55] *** sena_kun joined
[08:57] *** Altai-man_ left
[09:03] *** oodani left
[09:04] *** oodani joined
[09:08] *** JJMerelo left
[09:09] *** oddp joined
[09:13] *** lichtkind_ joined
[09:13] *** rbt left
[09:14] *** rbt joined
[09:15] *** lichtkind left
[09:23] *** Black_Ribbon left
[09:29] *** JJMerelo joined
[09:35] <JJMerelo> If no one objects, I'm going to start and adopt late Jeff Goff's distribution, including them in the community distros organization. 

[09:35] <JJMerelo> I'll start with Grammar::Common, of some other if you think it's more urgent.

[09:38] <rindolf> JJMerelo: sounds good - thanks

[09:40] *** brtastic left
[09:43] <lizmat> JJMerelo++

[09:43] * lizmat clickbaits https://rakudoweekly.blog/2020/06/15/2020-24-cloud-approaching/

[09:50] *** aborazmeh joined
[09:50] *** aborazmeh left
[09:50] *** aborazmeh joined
[09:53] *** brtastic joined
[10:32] *** aborazmeh left
[10:35] *** roguelazer left
[10:36] *** brtastic left
[10:36] *** roguelazer joined
[10:47] *** brtastic joined
[10:51] <JJMerelo> raku-dev

[10:54] *** Altai-man_ joined
[10:57] *** sena_kun left
[11:04] *** xinming_ left
[11:04] *** brtastic left
[11:05] *** xinming_ joined
[11:05] *** brtastic joined
[11:18] <Geth> ¦ problem-solving/revert-202-master: c6710b85f1 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | solutions/ecosystem-versioning.md

[11:18] <Geth> ¦ problem-solving/revert-202-master: Revert "Solution for issue #72: spin off module publishing tutorial in the documentation."

[11:18] <Geth> ¦ problem-solving/revert-202-master: review: https://github.com/Raku/problem-solving/commit/c6710b85f1

[11:18] <Geth> ¦ problem-solving: AlexDaniel++ created pull request #205: Revert "Solution for issue #72: spin off module publishing tutorial in the documentation."

[11:18] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/pull/205

[11:18] <Geth> ¦ problem-solving: c6710b85f1 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | solutions/ecosystem-versioning.md

[11:18] <Geth> ¦ problem-solving: Revert "Solution for issue #72: spin off module publishing tutorial in the documentation."

[11:18] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/c6710b85f1

[11:18] <Geth> ¦ problem-solving: f616d5fd48 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | solutions/ecosystem-versioning.md

[11:18] <Geth> ¦ problem-solving: Merge pull request #205 from Raku/revert-202-master

[11:18] <Geth> ¦ problem-solving: 

[11:18] <Geth> ¦ problem-solving: Revert "Solution for issue #72: spin off module publishing tutorial in the documentation."

[11:18] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/f616d5fd48

[11:47] *** zacts left
[11:48] *** zacts joined
[12:24] *** _dev_zero left
[12:25] *** rindolf left
[12:27] *** andrzejku left
[12:30] *** kensanata left
[12:31] *** andrzejku joined
[12:31] *** MasterDuke joined
[12:38] *** pecastro left
[12:47] *** sarna joined
[12:52] *** leah2 left
[12:55] *** sena_kun joined
[12:57] *** Altai-man_ left
[13:01] *** zacts left
[13:02] *** zacts joined
[13:04] *** JJMerelo left
[13:05] *** pecastro joined
[13:10] *** leah2 joined
[13:17] *** rbt left
[13:17] *** rbt joined
[13:22] *** dataangel left
[13:32] *** kensanata joined
[13:58] *** skids joined
[13:59] *** sarna left
[14:00] *** soursBot joined
[14:00] *** brtastic left
[14:00] *** brtastic joined
[14:08] <rbt> Does anybody have opinions on DBIish connection pooling? https://github.com/raku-community-modules/DBIish/pull/171

[14:08] <abraxxa> whatfor is it good?

[14:09] <rbt> Eliminating Connect/disconnect cycles for short queries, such as web hits.  The connection gets held in the background by DBIish, gets scrubbed, and is reused.

[14:10] <rbt> Encrypted DB connections take a long time to stand-up.

[14:10] <rbt> short sessions (in place of short queries)

[14:10] <[Coke]> I don't have any timings or anything, but re-using open connections ++

[14:14] *** OpenZen joined
[14:15] *** PotatoGim left
[14:16] <abraxxa> can no SQL RDBMS execute multiple queries over a single connection?

[14:16] *** agentzh left
[14:16] *** agentzh joined
[14:16] *** agentzh left
[14:16] *** agentzh joined
[14:16] *** ShimmerFairy left
[14:16] *** cooper left
[14:16] *** ShimmerFairy joined
[14:17] <rbt> I don't know if none can; but Pg and MySQL do not allow interleaving on a single connection.

[14:17] <rbt> Otherwise multithreading would have been much easier to make safe :)

[14:18] *** poga left
[14:18] *** cooper joined
[14:18] *** PotatoGim joined
[14:18] *** poga joined
[14:24] <abraxxa> I've never had the problem of a database connection getting teared down

[14:25] <abraxxa> long running apps like web apps just open the connection on startup (not first request) and keep it open

[14:27] *** melezhik joined
[14:30] *** zacts left
[14:34] *** orinthe left
[14:35] <lizmat> abraxxa: that may have repercussions on the db server end, having many, many connections open is also a burden

[14:35] *** orinthe joined
[14:35] <lizmat> rbt: ideally, a connection pool would be a role  :-)

[14:38] <rbt> I hadn't considered that.

[14:44] <rbt> I'm also not certain how that would work.

[14:46] *** gunnar joined
[14:46] <gunnar> raku: $*COLLATION

[14:46] <evalable6> gunnar, rakudo-moar afe851108: OUTPUT: «»

[14:47] <gunnar> say $*COLLATION

[14:47] <evalable6> gunnar, rakudo-moar afe851108: OUTPUT: «collation-level => 85, Country => International, Language => None, primary => 1, secondary => 1, tertiary => 1, quaternary => 1␤»

[14:48] <gunnar> <a e å ä ö o è>.sort

[14:48] <gunnar> <a e å ä ö o è>.sort.say

[14:48] <evalable6> gunnar, rakudo-moar afe851108: OUTPUT: «(a e o ä å è ö)␤»

[14:50] <rbt> lizmat: Right now they do DBIish.connect('Drv', %con-parms) to get a connection. What would a pool as a role look like?   Or do you mean DBIish does DBIish::Pool?

[14:50] *** _dev_zero joined
[14:54] <lizmat> a role that would override "connect", and return a db from a pool matching the parameters, and run the original connect if none found

[14:54] *** Altai-man_ joined
[14:56] <rbt> lizmat: I see. That gets tricky as some connection parameters might be in environment variables like PGHOST or separate configuration files like PGSERVICE which could change between calls to connect().

[14:56] <rbt> lizmat: They'd rarely change though. Perhaps documentation is sufficient for that issue.

[14:57] <lizmat> perhaps some parameterization with ENV keys that should be part of the cache identifier ?

[14:57] *** sena_kun left
[14:57] <lizmat> DBIish but Pool[PGSERVICE,PGHOST]

[14:58] *** rindolf joined
[14:59] <lizmat> and perhaps wrap that in client roles: role PGPool does Pool[PGSERVICE,PGHOST]

[14:59] *** soursBot left
[15:02] <rbt> lizmat: connect would also need a flag to indicate it is a pooled connection like DBIish.connect('Pg', %parms, :pool).  Don't want unused connections to hang around unexpectedly after they're disposed().

[15:03] <rbt> Thanks for the help.

[15:03] <lizmat> yeah, that is exactly why additional named parameters in methods are ignored by default  :-)

[15:03] *** JJMerelo joined
[15:08] *** soursBot joined
[15:23] <melezhik> .tell JJMerelo my thoughts on https://github.com/Raku/ecosystem/issues/505 depending what use case we want to implement it'l take different approach and method

[15:23] <tellable6> melezhik, I'll pass your message to JJMerelo

[15:24] <JJMerelo> melezhik got it, thanks!

[15:24] <melezhik> if we only want to install ext dependencies during `zef install` the solution needs to be as lightweight as possible  or we end up yet another CM tool

[15:25] <melezhik> which is probably we all want to ...

[15:26] <melezhik> in opposite to  smoke tests / CI task we are free no to limit ourselves by user requirements because in that case we are not aiming to satisfy end user

[15:26] <melezhik> rather then testing _some_ modules

[15:27] <melezhik> I mean for me it boils down to 2 approaches - "industry level" solution/CM tool VS lightweight zef based solution  

[15:27] <melezhik> in very rough estmation 

[15:27] <melezhik> estimation 

[15:33] <JJMerelo> It would be nice to have something in between...

[15:34] <melezhik> well, my principal view it does not worth it, we either do full CI ( which is closer to my view - RakuDist/Sparrow ) or we trying to only solve end user task

[15:35] <melezhik> this is why I'd like to hear user stories, description of how we see it from practical point of view, so far the discussion touches some bits, but still quite vague in terms of what do we really WANT

[15:41] *** __jrjsmrtn__ left
[15:41] <abraxxa> lizmat: sorry, meetings all day long. I'm usually running 3-5 processes, so this is the amount of database connections

[15:42] *** rir joined
[15:42] *** brtastic left
[15:42] <lizmat> abraxxa: no pb, I was just remembering at former work where if all web processes would just keep their db handle, they would crash the db servers

[15:43] <abraxxa> rbt: a pool holds multiple connections, when I call connect and that's documented to return a connection I'd prefer to keep it that way. A pool should be implemented separately, maybe even another dist

[15:43] <lizmat> situation there was that each request potentially needed about 10 db handles

[15:43] <lizmat> but many requests of those, only needed upto three

[15:43] <abraxxa> because of parallelization? 

[15:44] <lizmat> no, because it was so large that a. no single db server was able to keep the db's

[15:44] <lizmat> and b. many replicants were needed

[15:45] *** __jrjsmrtn__ joined
[15:46] <abraxxa> sounds like wrong product chosen

[15:47] <lizmat> what can I say: if you're growing 200% for 8 years in a row, you don't have a lot of opportunity to re-design your architecture

[15:47] <abraxxa> rbt: I wouldn't call the pools constructor 'connect'

[15:49] <rbt> abraxxa: This is what I have at the moment

[15:49] <rbt> my $pool = DBIish.pool('Pg', max-connections => 10, |%conn);

[15:49] <rbt> my $dbh = $pool.connect()

[15:49] <rbt> It works perfectly well as a separate module from DBIish if that's desired.

[15:50] <abraxxa> rbt: haven't finished reading the whole PR and was a bit confused by the naming in the README

[15:50] <rbt> It's not quite transparent that way though where Lizmat's role design probably would be.

[15:51] <abraxxa> I'd prefer not to add DBIish::Pool usage in DBIish

[15:51] <abraxxa> method pool doesn't add anything over ::Pool.new

[15:52] <abraxxa> the exception refactor is nice though

[15:54] <rbt> The main reason I leaned into DBIish is connection reset is database specific. For example in Pg you send DISCARD ALL, in MySQL you send the username/password again.  Keeping that knowledge in the driver would be helpful and allows 3rd party drivers to use pooling without needing to modify DBIish::Pool.

[15:56] <abraxxa> see my PR comment

[15:57] <rbt> abraxxa: Thanks.  What is an "interface role" in raku? Are there any examples of that?

[15:58] <abraxxa> I only know the term from Java where it just defines the methods a class has to implement

[15:58] <abraxxa> in Moose::Role terms that would be a requires definition

[15:59] <abraxxa> I'm pretty sure Raku can do better and even define the input and output types

[15:59] <abraxxa> but I don't think that's necessary

[15:59] <abraxxa> when a pool hands out one of its underlying connections via one method you can then access all the methods the connection object (dbh) has

[15:59] <abraxxa> so if the connection api changes, pool doesn't care

[16:02] <rbt> Okay, thanks.

[16:02] *** vike1 left
[16:08] <abraxxa> what's about get-connection as a method name for the pool?

[16:08] *** soursBot left
[16:09] *** soursBot joined
[16:09] <abraxxa> also depends if you want to manually execute specific queries on specific connections or just pass a statement to the pool and not care which one it uses

[16:10] <oddp> Apart from exit, is there another way to terminate hyper/race iteration?

[16:11] <jnthn> oddp: What is doing the terminating?

[16:12] <rbt> abraxxa: Sounds good.

[16:13] <oddp> Basically iterating as such (1..*).race(batch => 1000).map: { ... } and want to terminate after the first match.

[16:13] <jnthn> Hm, does `last` not work?

[16:13] <oddp> Phasers aren't supported, it seems.

[16:13] <jnthn> But you can also tack .first or .head on the end after the `map`

[16:14] <oddp> Ah, no, last isn't exiting.

[16:14] <jnthn> It won't terminate the batches that are currently in progress

[16:14] <jnthn> But it will not schedule any more

[16:14] <jnthn> Which is usually good enough

[16:16] <jnthn> Effectively, the thread that consumes the results is also the one that produces batches, sends them to workers, and waits for them to come back

[16:16] <jnthn> So the .first will terminate the iteration, and it won't produce any futher batches

[16:17] *** zacts joined
[16:20] <SmokeMachine> would something like this work?

[16:20] <SmokeMachine> m:  say (1..*).race(batch => 1000).map({ $_ %% 2 ?? $_ !! Empty }).head

[16:20] <camelia> rakudo-moar afe851108: OUTPUT: «2␤»

[16:21] <SmokeMachine> jnthn: just said that, sorry...

[16:27] *** dakkar left
[16:28] <oddp> Alright, first in conjunction with Empty did the trick. Thanks to both of you!

[16:30] *** retropikzel joined
[16:34] <SmokeMachine> oddp: first? something like this?

[16:34] <SmokeMachine> m:  say (1..*).race(batch => 1000).first: * %% 2

[16:34] <camelia> rakudo-moar afe851108: OUTPUT: «2␤»

[16:35] *** melezhik left
[16:39] *** soursBot left
[16:40] <JJMerelo> releasable6: status

[16:40] <releasable6> JJMerelo, Next release in ≈4 days and ≈2 hours. 1 blocker. 143 out of 290 commits logged (⚠ 4 warnings)

[16:40] <releasable6> JJMerelo, Details: https://gist.github.com/f8e38291ddc8ae88098303b70546e938

[16:41] *** andrzejku left
[16:42] *** soursBot joined
[16:43] <oddp> SmokeMachine: That works but is slower than race-less iteration.

[16:49] *** vike joined
[16:51] *** xinming joined
[16:52] *** tyil[m] left
[16:54] *** xinming_ left
[16:55] *** _dev_zero left
[16:55] *** sena_kun joined
[16:56] *** Altai-man_ left
[17:11] *** wildtrees[m] left
[17:13] <rypervenche> If I want to run an array of strings through a grammar, is the best way to simply run a loop on the array and parse each string separately and then push the result into a new array?

[17:14] <jnthn> Well, probably neater with map, but yes

[17:17] *** retropikzel left
[17:19] <rypervenche> Ahhh, a map. I'll see if I can get that to work. Thanks. I was trying to figure out an efficient way to do this. I always forget about maps.

[17:20] *** rbt left
[17:20] *** rbt joined
[17:26] <rypervenche> Hmmm, how would I turn this into a map? Obviously the @files doesn't work there, but I'm not sure how to order everything since it's inside the parse method: https://gist.github.com/rypervenche/36b55fc4d30a7279ccca6aac8b8dd756

[17:38] *** genevino joined
[17:43] *** kensanata left
[17:43] *** soursBot left
[17:45] *** molaf left
[17:46] *** soursBot joined
[17:48] <jnthn> rypervenche: my @var = @files.map: { BackupDate.parse($_, :$actions).made };

[17:48] <rypervenche> Ooooooh. Thanks so much.

[17:48] <jnthn> If you do it this way, then you don't need to keep all the parse trees in memory, just the final result strings.

[17:48] <jnthn> (I'm referring to calling the .made in this map also)

[17:49] <rypervenche> Ahh, I did that because in case the parse failed, I wanted to know about it. Although perhaps a type constraint would fix that.

[17:50] *** maggotbrain joined
[17:51] *** brtastic joined
[18:01] *** leont left
[18:04] <jnthn> Ah, true :)

[18:04] *** Sgeo joined
[18:08] <rypervenche> Yeah, looks like the type constraint didn't do it. I'll have to keep it as separate lines. Unless there's some way to do it that I don't know about.

[18:08] *** leont joined
[18:22] *** sauvin left
[18:33] *** JJMerelo left
[18:54] *** Altai-man_ joined
[18:57] *** sena_kun left
[19:03] *** zacts left
[19:07] *** soursBot left
[19:18] *** soursBot joined
[19:23] *** molaf joined
[19:25] *** abraxxa left
[19:26] *** soursBot left
[19:28] *** abraxxa joined
[19:35] *** rir left
[19:35] *** melezhik joined
[19:36] *** aluaces left
[19:36] <melezhik> I am going to create a toolset written on Sparrow to manage Azure DevOps objects - http://repo.westus.cloudapp.azure.com/hub/search?q=ado

[19:36] <melezhik> so far it's just a few plugins, but there could be more soon

[19:37] <melezhik> basically for CRUD operations for various Ado objects - git repos, pipelines, variable groups, so on 

[19:38] <melezhik> if someone in Raku community into Azure DevOps stuff, please give me a shout ;-))

[19:45] *** stoned75 left
[19:47] *** stoned75 joined
[20:20] <El_Che> some old devops veterans like me that surviced the first Microsoft war are somewhat suspicious of Azure :)

[20:21] <melezhik> El_Che I know. But Azure DevOps is not bad, at least from devops prospective, and this is what I am paid for

[20:21] <El_Che> melezhik: are thinking of something generic like Terraform or is it a tool with a defined task?

[20:22] <melezhik> AzureDevops is not about Azure infrastructure. This is basically SDLC services (CI/CD/SCM) under AzureDevops umbrella 

[20:22] <El_Che> we have a MIcrosoft devops install at work

[20:23] <melezhik> sometime it confuse people because of strong association with Azure cloud  

[20:23] <melezhik> anyway, I am creating toolset for devops deal with daily tasks 

[20:23] <El_Che> in short: managers uses it to move tickts around and feel agile. Devs and admins use gitea/jenkins

[20:23] <El_Che> I don't know if it the same tool

[20:23] <melezhik> create repositories, branches, Azure Devops pipelines, group variables, bla-bla-bla

[20:23] <El_Che> MS loves renaming stuff

[20:24] <melezhik> whatever is possible from Rest API - https://docs.microsoft.com/en-us/rest/api/azure/devops/?view=azure-devops-rest-5.1

[20:24] <melezhik> yeah, they do

[20:24] <melezhik> it's former VSTS

[20:24] <El_Che> melezhik: your tool will make it interesting for unix people

[20:24] <melezhik> and been renamed lately 

[20:24] <El_Che> TFS

[20:25] <melezhik> yeah ...

[20:25] *** veesh left
[20:25] <melezhik> I have written   a tons of code for my current project which ends in two weeks, mostly in mixture of Sparrow and Powershell

[20:26] <melezhik> now having this expertise I am just rewriting stuff for pure Linux way

[20:26] <El_Che> it sounds like fun

[20:26] <melezhik> all the plugins would require Raku (Sparrow itself), curl and Bash ( and primitive Perl5 usage )

[20:26] *** veesh joined
[20:27] <melezhik> Sparrow is  fun )))

[20:27] <El_Che> it looks like you're between ansible and terraform?

[20:27] <melezhik> it's dirt and cheap I'd say if you look at my code, but it works and it could be run as cli or as Raku API

[20:27] <melezhik> it's alternative to ansible in way of atomation

[20:28] <melezhik> terraform is tool to manage infra in cloud agnostic way (networks, VMs, whatever )

[20:28] <melezhik> it's different

[20:29] <melezhik> but yes Azure has API to manage cloud resources too, so one day I'd bring some Sparrow plugins for that too

[20:30] <melezhik> for example when I worked with AWS (abit) - I had created at the end these set of plugins for AWS - http://repo.westus.cloudapp.azure.com/hub/search?q=aws

[20:30] <melezhik> some of them might now work, as I still need to upgrade them to Sparrow6 ( rewritten on Raku )

[20:30] <melezhik> but it'd give you an idea of Sparrow approach

[20:31] <melezhik> whenever I see useful script I create a Sparrow plugin for it )))

[20:32] <melezhik> so the last link is alternative to terrafrom ( in a very rough level ) for aws 

[20:32] <El_Che> you're very productive :)

[20:33] <melezhik> sometimes it feels like "addiction" - create plugins, the problem is - not many (only me?) use those plugins, but at least it helps me at my $job  

[20:34] <melezhik> though normally devops don't understand when I tell them that I make automation using Raku and Sparrow

[20:34] <melezhik> it's like a murky world for them 

[20:36] <El_Che> there is a lot of frameworks out there. Adding a new one is a serious investment

[20:36] *** stoned75 left
[20:43] <melezhik> yeah, you're right 

[20:46] *** aborazmeh joined
[20:46] *** aborazmeh left
[20:46] *** aborazmeh joined
[20:53] <El_Che> and it's a slippery slope. I wanted to use puppet but ended writing ruby code for puppet to work around its limitations

[20:54] *** epony left
[20:54] <melezhik> yes, it is. you end up extending ansible by python even faster, just because programming in ansible yaml dsl is nightmare 

[20:55] *** sena_kun joined
[20:56] <melezhik> basically Sparrow takes this approach - it's just a glue to manage scripts written on many languages through either cli API or Raku API

[20:56] <El_Che> got to go, I just wanted to say to keep being optimistic. I felt the tone in the last ticket we both participated was somewhat edhy

[20:57] *** Altai-man_ left
[20:57] <melezhik> yeah, I will. That is ok and thank you for encouragement ... Yeah I also need to take sometimes things easy ... ;-)))

[21:00] <El_Che> s/edhy/edgy/

[21:00] <El_Che> bbl

[21:01] <melezhik> yeah, I got that, thanks!

[21:07] *** melezhik left
[21:09] *** aborazmeh left
[21:14] *** wamba left
[21:14] *** gunnar left
[21:15] *** brtastic left
[21:28] *** epony joined
[21:34] *** rindolf left
[21:50] *** timeless left
[21:52] *** Altai-man_ joined
[21:52] *** Woodi left
[21:52] *** Woodi joined
[21:53] *** timeless joined
[21:54] *** sena_kun left
[22:03] *** notable6 left
[22:03] *** notable6_ joined
[22:03] *** statisfiable6 left
[22:04] *** lichtkind__ joined
[22:04] *** statisfiable6 joined
[22:04] *** lichtkind__ left
[22:04] *** AlexDaniel` left
[22:06] *** committable6 left
[22:06] *** committable6 joined
[22:06] *** lichtkind_ left
[22:07] *** x[LGWs4x4i]uG2N0 left
[22:07] *** x[LGWs4x4i]uG2N0 joined
[22:12] *** AlexDaniel` joined
[22:25] *** dataangel joined
[22:30] *** AlexDaniel` left
[22:30] *** webstrand left
[22:31] *** webstrand joined
[22:33] *** xinming left
[22:33] *** leah2 left
[22:33] *** nativecallable6 left
[22:33] *** coverable6 left
[22:33] *** Roamer` left
[22:33] *** jjatria left
[22:33] *** committable6 left
[22:33] *** Cabanoss- left
[22:33] *** Nasrudin left
[22:33] *** xfix left
[22:33] *** Benett left
[22:33] *** robinsmidsrod left
[22:33] *** a3r0_ left
[22:33] *** nebuchadnezzar left
[22:33] *** El_Che left
[22:33] *** b2gills left
[22:33] *** colomon_ left
[22:33] *** dpk left
[22:33] *** tomaw left
[22:33] *** renormalist left
[22:33] *** xi left
[22:33] *** Mithaldu left
[22:33] *** nine left
[22:33] *** jdv79 left
[22:33] *** simcop2387 left
[22:33] *** tailgate left
[22:33] *** perryprog left
[22:33] *** gabiruh left
[22:33] *** [ptc] left
[22:33] *** Bucciarati left
[22:33] *** KotH left
[22:33] *** [Coke] left
[22:33] *** MasterDuke left
[22:33] *** webstrand left
[22:33] *** uzl[m] left
[22:33] *** BlackChaosNL[m] left
[22:33] *** ecocode left
[22:33] *** skaji_ left
[22:33] *** Altai-man_ left
[22:33] *** veesh left
[22:33] *** Sgeo left
[22:33] *** agentzh left
[22:33] *** sivoais left
[22:33] *** Geth left
[22:33] *** afresh1 left
[22:33] *** mithaldu_ left
[22:33] *** krunen left
[22:33] *** polettix1 left
[22:33] *** lucs left
[22:33] *** dotdotdot left
[22:33] *** gugod left
[22:33] *** japhb left
[22:33] *** vike left
[22:33] *** OpenZen left
[22:33] *** helit left
[22:33] *** gfldex left
[22:33] *** grumble left
[22:33] *** Hotbees left
[22:33] *** pnu__ left
[22:33] *** zostay left
[22:33] *** Grinnz left
[22:33] *** SmokeMachine left
[22:33] *** mniip left
[22:33] *** Util left
[22:33] *** elcaro left
[22:33] *** klapperl_ left
[22:33] *** astronavt left
[22:33] *** pochi left
[22:33] *** ingy left
[22:33] *** dg left
[22:33] *** Ulti left
[22:33] *** masak left
[22:33] *** autarch left
[22:33] *** moritz left
[22:33] *** cxreg left
[22:33] *** PotatoGim left
[22:33] *** cooper left
[22:33] *** ShimmerFairy left
[22:33] *** roguelazer left
[22:33] *** oodani left
[22:33] *** shareable6 left
[22:33] *** bisectable6 left
[22:33] *** evalable6 left
[22:33] *** releasable6 left
[22:33] *** greppable6 left
[22:33] *** MilkmanDan left
[22:33] *** TeamBlast left
[22:33] *** Celelibi left
[22:33] *** eseyman left
[22:33] *** a3f left
[22:33] *** dudz left
[22:33] *** domm left
[22:33] *** isacl___ left
[22:33] *** jhill left
[22:33] *** BinGOs left
[22:33] *** perlbot left
[22:33] *** riatre left
[22:33] *** mtj_ left
[22:33] *** rjbs left
[22:33] *** Grrrr left
[22:33] *** perlmaros left
[22:33] *** Woodi left
[22:33] *** abraxxa left
[22:33] *** genevino left
[22:33] *** vrurg left
[22:33] *** aindilis left
[22:33] *** dogbert17 left
[22:33] *** stux|RC-only left
[22:33] *** Kaiepi left
[22:33] *** schlaftier left
[22:33] *** Summertime left
[22:33] *** libertas left
[22:33] *** lnx left
[22:33] *** dataangel left
[22:33] *** x[LGWs4x4i]uG2N0 left
[22:33] *** maggotbrain left
[22:33] *** __jrjsmrtn__ left
[22:33] *** bdju left
[22:33] *** AlexDaniel left
[22:33] *** m_athias left
[22:33] *** sno left
[22:33] *** erdic left
[22:33] *** caasih left
[22:33] *** stux|RC left
[22:33] *** jast left
[22:33] *** marcusr left
[22:33] *** skyl4rk left
[22:33] *** statisfiable6 left
[22:33] *** notable6_ left
[22:33] *** unclechu left
[22:33] *** matiaslina left
[22:33] *** kent\n left
[22:33] *** hobbs left
[22:33] *** eater left
[22:33] *** nekomune left
[22:33] *** orinthe left
[22:33] *** cpan-raku left
[22:33] *** mst left
[22:33] *** gordonfish left
[22:33] *** perigrin left
[22:33] *** gdonald left
[22:33] *** girafe left
[22:33] *** k-man left
[22:33] *** cgfbee left
[22:33] *** guifa left
[22:33] *** spacebat1 left
[22:33] *** ptrcmd left
[22:33] *** silug left
[22:33] *** ambs_ left
[22:33] *** HarmtH left
[22:33] *** freezing_ left
[22:33] *** brass left
[22:33] *** oddp left
[22:33] *** kst left
[22:33] *** telex left
[22:33] *** notandinus left
[22:33] *** kini left
[22:33] *** ChoppedBacon left
[22:33] *** tbrowder left
[22:33] *** BuildTheRobots left
[22:33] *** spycrab0 left
[22:33] *** lizmat left
[22:33] *** raku-bridge left
[22:33] *** Noisytoot left
[22:33] *** ensamvarg left
[22:33] *** Ekho left
[22:33] *** cj left
[22:33] *** literal left
[22:33] *** xxpor left
[22:33] *** e left
[22:33] *** xelxebar left
[22:33] *** tejr left
[22:33] *** CIAvash left
[22:33] *** Altreus left
[22:33] *** ssm left
[22:33] *** moon-child left
[22:33] *** Grauwolf left
[22:33] *** wbn left
[22:33] *** eiro left
[22:33] *** synthmeat left
[22:33] *** jnthn left
[22:33] *** leont left
[22:33] *** rbt left
[22:33] *** poga left
[22:33] *** pecastro left
[22:33] *** sourceable6 left
[22:33] *** tellable6 left
[22:33] *** bloatable6 left
[22:33] *** reportable6 left
[22:33] *** unicodable6 left
[22:33] *** quotable6 left
[22:33] *** squashable6 left
[22:33] *** linkable6 left
[22:33] *** Manifest0 left
[22:33] *** cpage left
[22:33] *** Maylay left
[22:33] *** eery left
[22:33] *** TimToady left
[22:33] *** Voldenet left
[22:33] *** camelCaser left
[22:33] *** kawaii left
[22:33] *** pierrot left
[22:33] *** TreyHarris left
[22:33] *** go|dfish left
[22:33] *** karupanerura left
[22:33] *** shadowpaste left
[22:33] *** robertle left
[22:33] *** cibs left
[22:33] *** timeless left
[22:33] *** molaf left
[22:33] *** rypervenche left
[22:33] *** ukine left
[22:33] *** mrsolo left
[22:33] *** sftp left
[22:33] *** daxim left
[22:33] *** DarthGandalf left
[22:33] *** albino left
[22:33] *** hoelzro left
[22:33] *** charsbar left
[22:33] *** epony left
[22:33] *** finsternis left
[22:33] *** peteretep left
[22:33] *** camelia left
[22:33] *** dustinm` left
[22:33] *** ribasushi left
[22:33] *** a6502 left
[22:33] *** avar left
[22:33] *** smash left
[22:36] *** [Coke] joined
[22:36] *** KotH joined
[22:36] *** Bucciarati joined
[22:36] *** [ptc] joined
[22:36] *** gabiruh joined
[22:36] *** e joined
[22:36] *** Benett joined
[22:36] *** robinsmidsrod joined
[22:36] *** a3r0_ joined
[22:36] *** nebuchadnezzar joined
[22:36] *** El_Che joined
[22:36] *** b2gills joined
[22:36] *** colomon_ joined
[22:36] *** dpk joined
[22:36] *** tomaw joined
[22:36] *** renormalist joined
[22:36] *** xi joined
[22:36] *** Mithaldu joined
[22:36] *** nine joined
[22:36] *** jdv79 joined
[22:37] *** genevino joined
[22:37] *** x[LGWs4x4i]uG2N0 joined
[22:37] *** Altai-man_ joined
[22:37] *** veesh joined
[22:37] *** Sgeo joined
[22:37] *** agentzh joined
[22:37] *** sivoais joined
[22:37] *** Geth joined
[22:37] *** afresh1 joined
[22:37] *** mithaldu_ joined
[22:37] *** krunen joined
[22:37] *** polettix1 joined
[22:37] *** lucs joined
[22:37] *** dotdotdot joined
[22:37] *** gugod joined
[22:37] *** japhb joined
[22:37] *** statisfiable6 joined
[22:37] *** notable6_ joined
[22:37] *** unclechu joined
[22:37] *** matiaslina joined
[22:37] *** kent\n joined
[22:37] *** hobbs joined
[22:37] *** eater joined
[22:37] *** nekomune joined
[22:37] *** timeless joined
[22:37] *** molaf joined
[22:37] *** rypervenche joined
[22:37] *** ukine joined
[22:37] *** mrsolo joined
[22:37] *** sftp joined
[22:37] *** daxim joined
[22:37] *** DarthGandalf joined
[22:37] *** albino joined
[22:37] *** hoelzro joined
[22:37] *** esh joined
[22:37] *** rba joined
[22:37] *** charsbar joined
[22:37] *** orinthe joined
[22:37] *** mst joined
[22:37] *** gordonfish joined
[22:37] *** perigrin joined
[22:37] *** gdonald joined
[22:37] *** girafe joined
[22:37] *** k-man joined
[22:37] *** cgfbee joined
[22:37] *** guifa joined
[22:37] *** spacebat1 joined
[22:37] *** ptrcmd joined
[22:37] *** silug joined
[22:37] *** ambs_ joined
[22:37] *** HarmtH joined
[22:37] *** freezing_ joined
[22:37] *** brass joined
[22:37] *** stux|RC-only joined
[22:37] *** cpan-raku joined
[22:37] *** webstrand joined
[22:37] *** uzl[m] joined
[22:37] *** ecocode joined
[22:37] *** skaji_ joined
[22:37] *** unclechu left
[22:37] *** matiaslina left
[22:37] *** dataangel joined
[22:37] *** maggotbrain joined
[22:37] *** __jrjsmrtn__ joined
[22:37] *** bdju joined
[22:37] *** AlexDaniel joined
[22:37] *** m_athias joined
[22:37] *** sno joined
[22:37] *** stux|RC joined
[22:37] *** jast joined
[22:37] *** marcusr joined
[22:37] *** skyl4rk joined
[22:37] *** timeless left
[22:37] *** simcop2387 joined
[22:37] *** tailgate joined
[22:37] *** perryprog joined
[22:38] *** vike joined
[22:38] *** OpenZen joined
[22:38] *** helit joined
[22:38] *** gfldex joined
[22:38] *** grumble joined
[22:38] *** Hotbees joined
[22:38] *** pnu__ joined
[22:38] *** zostay joined
[22:38] *** Grinnz joined
[22:38] *** SmokeMachine joined
[22:38] *** mniip joined
[22:38] *** Util joined
[22:38] *** elcaro joined
[22:38] *** klapperl_ joined
[22:38] *** astronavt joined
[22:38] *** pochi joined
[22:38] *** ingy joined
[22:38] *** dg joined
[22:38] *** Ulti joined
[22:38] *** masak joined
[22:38] *** autarch joined
[22:38] *** moritz joined
[22:38] *** cxreg joined
[22:38] *** caasih joined
[22:38] *** xinming joined
[22:38] *** leah2 joined
[22:38] *** nativecallable6 joined
[22:38] *** coverable6 joined
[22:38] *** Roamer` joined
[22:38] *** jjatria joined
[22:38] *** leont joined
[22:38] *** rbt joined
[22:38] *** poga joined
[22:38] *** pecastro joined
[22:38] *** sourceable6 joined
[22:38] *** tellable6 joined
[22:38] *** bloatable6 joined
[22:38] *** reportable6 joined
[22:38] *** unicodable6 joined
[22:38] *** quotable6 joined
[22:38] *** squashable6 joined
[22:38] *** linkable6 joined
[22:38] *** Manifest0 joined
[22:38] *** cpage joined
[22:38] *** Maylay joined
[22:38] *** eery joined
[22:38] *** TimToady joined
[22:38] *** Voldenet joined
[22:38] *** camelCaser joined
[22:38] *** pierrot joined
[22:38] *** TreyHarris joined
[22:38] *** go|dfish joined
[22:38] *** karupanerura joined
[22:38] *** shadowpaste joined
[22:38] *** robertle joined
[22:38] *** cibs joined
[22:38] *** committable6 joined
[22:38] *** Cabanoss- joined
[22:38] *** xfix joined
[22:38] *** Woodi joined
[22:38] *** abraxxa joined
[22:38] *** vrurg joined
[22:38] *** aindilis joined
[22:38] *** dogbert17 joined
[22:38] *** Kaiepi joined
[22:38] *** schlaftier joined
[22:38] *** Summertime joined
[22:38] *** libertas joined
[22:38] *** lnx joined
[22:38] *** CIAvash joined
[22:38] *** Altreus joined
[22:38] *** ssm joined
[22:38] *** moon-child joined
[22:38] *** Grauwolf joined
[22:38] *** wbn joined
[22:38] *** eiro joined
[22:38] *** synthmeat joined
[22:38] *** jcallen joined
[22:38] *** jnthn joined
[22:38] *** oddp joined
[22:38] *** kst joined
[22:38] *** telex joined
[22:38] *** Noisytoot joined
[22:38] *** notandinus joined
[22:38] *** cj joined
[22:38] *** kini joined
[22:38] *** ChoppedBacon joined
[22:38] *** tbrowder joined
[22:38] *** spycrab0 joined
[22:38] *** lizmat joined
[22:38] *** raku-bridge joined
[22:38] *** ensamvarg joined
[22:38] *** Ekho joined
[22:38] *** literal joined
[22:38] *** xxpor joined
[22:38] *** samebchase joined
[22:38] *** samebchase- joined
[22:38] *** xkr47 joined
[22:38] *** Cabanoss- left
[22:38] *** MasterDuke joined
[22:38] *** xelxebar joined
[22:38] *** tejr joined
[22:38] *** smash joined
[22:38] *** sjn joined
[22:39] *** cooper joined
[22:39] *** ShimmerFairy joined
[22:39] *** roguelazer joined
[22:39] *** oodani joined
[22:39] *** shareable6 joined
[22:39] *** bisectable6 joined
[22:39] *** evalable6 joined
[22:39] *** releasable6 joined
[22:39] *** greppable6 joined
[22:39] *** MilkmanDan joined
[22:39] *** TeamBlast joined
[22:39] *** Celelibi joined
[22:39] *** eseyman joined
[22:39] *** a3f joined
[22:39] *** dudz joined
[22:39] *** domm joined
[22:39] *** isacl___ joined
[22:39] *** BinGOs joined
[22:39] *** perlbot joined
[22:39] *** riatre joined
[22:39] *** mtj_ joined
[22:39] *** rjbs joined
[22:39] *** Grrrr joined
[22:39] *** perlmaros joined
[22:39] *** erdic joined
[22:39] *** erdic left
[22:39] *** erdic joined
[22:40] *** uzl[m] left
[22:40] *** spycrab0 left
[22:40] *** kawaii joined
[22:41] *** pecastro left
[22:41] *** jhill joined
[22:41] *** ChoppedBacon left
[22:41] *** timeless joined
[22:41] *** Grinnz left
[22:41] *** ChoppedBacon joined
[22:42] *** spycrab0 joined
[22:42] *** Grinnz joined
[22:42] *** epony joined
[22:42] *** peteretep joined
[22:42] *** camelia joined
[22:42] *** dustinm` joined
[22:42] *** ribasushi joined
[22:42] *** a6502 joined
[22:42] *** avar joined
[22:42] *** tadzik joined
[22:42] *** mojca joined
[22:42] *** fvox joined
[22:42] *** kubrat joined
[22:42] *** broquaint joined
[22:42] *** protium joined
[22:42] *** epony left
[22:42] *** epony joined
[22:43] *** PotatoGim joined
[22:44] *** BlackChaosNL[m] joined
[22:44] *** finsternis joined
[22:46] *** sivoais left
[22:46] *** sivoais joined
[22:46] *** matiaslina joined
[22:46] *** BuildTheRobots joined
[22:47] *** Nasrudin joined
[22:47] *** Nasrudin left
[22:47] *** Nasrudin joined
[22:51] *** AlexDaniel` joined
[22:52] *** Cabanossi joined
[22:55] *** sena_kun joined
[22:57] *** Altai-man_ left
[22:57] *** unclechu joined
[23:04] *** uzl[m] joined
[23:12] *** HarmtH left
[23:14] *** HarmtH joined
[23:28] <rypervenche> Does anyone know how I might be able to get these two arrays to properly merge into an array of hashes? https://gist.github.com/rypervenche/ccd5368a5610bac725089eed6ede8e1a

[23:35] <rypervenche> Or should I be perhaps doing this in a different way?

[23:41] <MasterDuke> rypervenche: try `Z=>` instead of just `Z`

[23:41] <rypervenche> Ooooh, I didn't know you could do that. :O

[23:41] <MasterDuke> yeah, it's a meta-op, you can compose it with other ops (like you can with X)

[23:42] <MasterDuke> and R

[23:45] <rypervenche> Ahh, adding it to the Z doesn't do the right thing. Adding it to both Xs does what I need, but I still have the same problem with the Z part.

[23:46] <rypervenche> I'm guessing my problem is the $() bit? Last element seen: $(:before("hostname_2020-04-02_20:07:04"), :after("hostname_2020-04-02T20:07:04-05:00"))

[23:47] *** thundergnat joined
[23:47] <thundergnat> rypervenche: my @dir-pairs = ((('before' xx *) Z=> @before) Z, (('after' xx *) Z=> @after)); #maybe?

[23:47] <thundergnat> forest of parenthesis though.

[23:58] *** leont left
